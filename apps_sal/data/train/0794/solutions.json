["def multiple_input(): return map(int, input().split())\n\n\ndef list_input(): return list(map(int, input().split()))\n\n\nmod = int(1e9) + 7\nfor _ in range(int(input())):\n n, m = multiple_input()\n a = list_input()\n a.sort()\n max_level = a[-1] + 1\n levels = [0] * max_level\n levels[0] = 1\n for i in a:\n  levels[i] += 1\n ans = 1\n for i in range(1, max_level):\n  ans = (ans * (pow(levels[i - 1], levels[i], mod))) % mod\n print(ans)", "mod=pow(10,9)+7\nfor tt in range(int(input())):\n n,m=list(map(int,input().split()))\n l=list(map(int,input().split()))\n \n d=[0 for i in range(n+1)]\n for i in l:\n  d[i]+=1\n ans=1 \n for i in range(2,n+1):\n  ans*=pow(d[i-1],d[i])\n  ans%=mod \n print(ans%mod)\n", "# cook your dish here\nfor _ in range(int(input())):\n n,m=[int(x) for x in input().split()]\n a=[int(x) for x in input().split()]\n a.sort()\n f=1\n m=10**9+7\n d=[0 for i in range(n)]\n for i in a:\n  d[i]+=1\n for i in range(2,n):\n  f*=d[i-1]**(d[i])\n  f%=m\n print(f)", "MOD = 10**9 + 7\n\ndef ncr(n, r):\n num = den = 1\n for i in range(r):\n  num = (num * (n - i)) % MOD\n  den = (den * (i + 1)) % MOD\n return (num * pow(den, MOD - 2, MOD)) % MOD\n\nfor _ in range(int(input())):\n\n n, m = list(map(int, input().split()))\n\n a = list(map(int, input().split()))\n\n d = {0 : 1}\n\n for i in a:\n  d[i] = 1 if i not in d else d[i] + 1\n\n\n ans = 1; total = 0\n\n for i, j in list(d.items()):\n  if i == 0:\n   continue\n  ans = (ans * pow(d[i-1] if i-1 in d else 0, j, MOD)) % MOD\n\n  total = (total + ((j * (j - 1) // 2) % MOD)) % MOD\n\n rem = m - n + 1\n\n ans = (ans * ncr(total, rem)) % MOD\n\n print(ans)\n \n", "MOD = 10**9 + 7\n\ndef ncr(n, r):\n num = den = 1\n for i in range(r):\n  num = (num * (num - i)) % MOD\n  den = (den * (i + 1)) % MOD\n return (num * pow(den, MOD - 2, MOD)) % MOD\n\nfor _ in range(int(input())):\n\n n, m = list(map(int, input().split()))\n\n a = list(map(int, input().split()))\n\n d = {0 : 1}\n\n for i in a:\n  d[i] = 1 if i not in d else d[i] + 1\n\n\n ans = 1; total = 0\n\n for i, j in list(d.items()):\n  if i == 0:\n   continue\n  ans = (ans * pow(d[i-1] if i-1 in d else 0, j, MOD)) % MOD\n\n  total = (total + ((j * (j - 1) // 2)))\n\n rem = m - n + 1\n\n ans = (ans * ncr(total, rem)) % MOD\n\n print(ans)\n \n", "MOD = 10**9 + 7\n\ndef ncr(n, r):\n num = den = 1\n for i in range(r):\n  num = (num * (num - i)) % MOD\n  den = (den * (i + 1)) % MOD\n return (num * pow(den, MOD - 2, MOD)) % MOD\n\nfor _ in range(int(input())):\n\n n, m = list(map(int, input().split()))\n\n a = list(map(int, input().split()))\n\n d = {0 : 1}\n\n for i in a:\n  d[i] = 1 if i not in d else d[i] + 1\n\n\n ans = 1; total = 0\n\n for i, j in list(d.items()):\n  if i == 0:\n   continue\n  ans = (ans * pow(d[i-1] if i-1 in d else 0, j, MOD)) % MOD\n\n  total = (total + ((j * (j - 1) // 2) % MOD)) % MOD\n\n rem = m - n + 1\n\n ans = (ans * ncr(total, rem)) % MOD\n\n print(ans)\n \n", "from collections import defaultdict\nm=pow(10,9)+7\ndef inv(i):\n return pow(i,m-2,m)\ndef ifacto(n):\n if(n>len(ifact)-1):\n  for i in range(len(ifact),n+1):\n   temp=(inv(i)*ifact[i-1])%m\n   ifact.append(temp)\n return ifact[n]\ndef facto(n):\n if(n>len(fact)-1):\n  for i in range(len(fact),n+1):\n   temp=(i*fact[i-1])%m\n   fact.append(temp)\n return fact[n]\nfact=[1]\nifact=[1]\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n d=defaultdict(int)\n d[0]=1\n ans=1\n ex=0\n for i in a:\n  d[i]=d[i]+1\n for i in range(1,max(a)+1):\n  ans=(ans*pow(d[i-1],d[i],m))%m\n  ex=ex+int((d[i]*(d[i]-1))/2)\n  if(ans==0):\n   break\n if(k>n-1 and ans!=0):\n  t=k-(n-1)\n  if(t>ex):\n   ans=0 \n  else:\n   ans=((ans*facto(ex))%m*(ifacto(t)*ifacto(ex-t))%m)%m\n print(ans)", "from collections import defaultdict\nm=pow(10,9)+7\ndef inv(i):\n return pow(i,m-2,m)\ndef ifacto(n):\n if(n>len(ifact)-1):\n  for i in range(len(ifact),n+1):\n   temp=(inv(i)*ifact[i-1])%m\n   ifact.append(temp)\n return ifact[n]\ndef facto(n):\n if(n>len(fact)-1):\n  for i in range(len(fact),n+1):\n   temp=(i*fact[i-1])%m\n   fact.append(temp)\n return fact[n]\nfact=[1]\nifact=[1]\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n d=defaultdict(int)\n d[0]=1\n ans=1\n ex=0\n for i in a:\n  d[i]=d[i]+1\n for i in range(1,max(a)+1):\n  ans=(ans*pow(d[i-1],d[i],m))%m\n  ex=ex+int((d[i]*(d[i]-1))/2)\n if(k>n-1):\n  t=k-(n-1)\n  if(t>ex):\n   ans=0 \n  else:\n   ans=((ans*facto(ex))%m*(ifacto(t)*ifacto(ex-t))%m)%m\n print(ans)", "import sys\nimport math\nfrom collections import defaultdict,Counter\n\ninput=sys.stdin.readline\ndef print(x):\n sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\ndef power(x,y,m):\n if y==0:\n  return 1\n p=power(x,y//2,m)%m\n p=(p*p)%m\n if y%2==0:\n  return p\n else:\n  return((x*p)%m)\n\ndef find(n,r):\n p=1\n q=1\n for j in range(1,r+1):\n  p=(p*(n-j+1))%m\n  q=(q*j)%m\n return (p*power(q,m-2,m))%m\n\nm=pow(10,9)+7\nt=int(input())\nfor i in range(t):\n n,m1=map(int,input().split())\n a=list(map(int,input().split()))\n avail=0\n req=m1-(n-1)\n ans=1\n c=Counter(a)\n for j in c:\n  avail+=c[j]*(c[j]-1)//2\n  if j==1:\n   continue\n  ans=(ans*pow(c.get(j-1,0),c[j],m))%m\n if req>avail:\n  print(0)\n else:\n  ans=(ans*find(avail,req))%m\n  print(ans)\n", "import sys\nimport math\nfrom collections import defaultdict,Counter\n\ninput=sys.stdin.readline\ndef print(x):\n sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP1/output.txt\",'w')\n# sys.stdin=open(\"CP1/input.txt\",'r')\n\ndef power(x,y,m):\n if y==0:\n  return 1\n p=power(x,y//2,m)%m\n p=(p*p)%m\n if y%2==0:\n  return p\n else:\n  return((x*p)%m)\n\ndef find(n,r):\n p=1\n q=1\n for j in range(1,r+1):\n  p=(p*(n-j+1))%m\n  q=(q*j)%m\n return (p*power(q,m-2,m))%m\n\nm=pow(10,9)+7\nt=int(input())\nfor i in range(t):\n n,m1=map(int,input().split())\n a=list(map(int,input().split()))\n avail=0\n req=m1-(n-1)\n ans=1\n c=Counter(a)\n for j in c:\n  avail+=(c[j]*c[j-1])//2\n  if j==1:\n   continue\n  ans=(ans*pow(c.get(j-1,0),c[j],m))%m\n if req>avail:\n  print(0)\n else:\n  ans=(ans*find(avail,req))%m\n  print(ans)\n", "MOD=10**9+7\nT=int(input()) \nfor t in range(T):\n n,m=map(int,input().split()) \n A=list(map(int,input().split())) \n mp=[0]*n \n for a in A:\n  mp[a]+=1 \n mx=max(A) \n ans=1\n for i in range(1,mx):\n  ans=(ans*(mp[i]**mp[i+1]))%MOD \n print(ans)", "import sys\nimport math\nfrom collections import defaultdict,Counter\n\n# input=sys.stdin.readline\n# def print(x):\n#     sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP3/output.txt\",'w')\n# sys.stdin=open(\"CP3/input.txt\",'r')\n\nm=pow(10,9)+7\nt=int(input())\nfor i in range(t):\n n,m1=map(int,input().split())\n a=list(map(int,input().split()))\n if m1==n-1:\n  ans=1\n  c=Counter(a)\n  for j in c:\n   if j==1:\n    continue\n   ans=(ans*pow(c.get(j-1,0),c[j],m))%m\n  #   if c[j]>c.get(j-1,0):\n  #       ans=0\n  #       break\n  #   cur=1\n  #   for k in range(c[j-1],c[j-1]-c[j],-1):\n  #       cur=(cur*k)%m\n  #   ans=(ans+cur)%m\n  # if max(c)==1:\n  #   ans=1\n  print(ans)\n else:\n  print(0)", "from collections import defaultdict\ndef factorial(n): \n if n < 0: \n  return 0\n elif n == 0 or n == 1: \n  return 1\n else: \n  fact = 1\n  while(n > 1): \n   fact *= n \n   n -= 1\n  return fact \nm=pow(10,9)+7\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n d=defaultdict(int)\n d[0]=1\n ans=1\n ex=0\n for i in a:\n  d[i]=d[i]+1\n for i in range(1,max(a)+1):\n  ans=(ans*pow(d[i-1],d[i],m))%m\n  ex=ex+int((d[i]*(d[i]-1))/2)\n if(k>n-1):\n  t=k-(n-1)\n  if(t>ex):\n   ans=0 \n  else:\n   ans=(ans*factorial(ex)/(factorial(ex-t)*factorial(t))%m)%m\n print(ans)", "from collections import defaultdict\ndef factorial(n): \n if n < 0: \n  return 0\n elif n == 0 or n == 1: \n  return 1\n else: \n  fact = 1\n  while(n > 1): \n   fact *= n \n   n -= 1\n  return fact \nm=pow(10,9)+7\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n d=defaultdict(int)\n d[0]=1\n ans=1\n ex=0\n for i in a:\n  d[i]=d[i]+1\n for i in range(1,max(a)+1):\n  ans=(ans*pow(d[i-1],d[i],m))%m\n  ex=ex+int((d[i]*(d[i]-1))/2)\n if(k>n-1):\n  t=k-(n-1)\n  if(t>ex):\n   ans=0 \n  else:\n   ans=(ans*factorial(ex)/factorial(ex-t)*factorial(t))%m\n print(ans)"]