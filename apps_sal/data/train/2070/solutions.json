["#!/usr/bin/env pypy3\n\nimport math\n\ndef make_nCr_mod(max_n=2*10**5 + 100, mod=10**9 + 7):\n    fact, inv_fact = [0] * (max_n + 1), [0] * (max_n + 1)\n    fact[0] = 1\n    for i in range(max_n):\n        fact[i + 1] = fact[i] * (i + 1) % mod\n\n    inv_fact[-1] = pow(fact[-1], mod - 2, mod)\n    for i in reversed(range(max_n)):\n        inv_fact[i] = inv_fact[i + 1] * (i + 1) % mod\n\n    def nCr_mod(n, r):\n        res = 1\n        while n or r:\n            a, b = n % mod, r % mod\n            if a < b:\n                return 0\n            res = res * fact[a] % mod * inv_fact[b] % mod * inv_fact[a - b] % mod\n            n //= mod\n            r //= mod\n        return res\n\n    return nCr_mod\n\nnCr_mod = make_nCr_mod()\n\nMODULUS = 10**9+7\n\ninput()\nA = input().split(' ')\nA = list(map(int, A))\n\nif len(A) == 1:\n    print(A[0])\n    return\n\nif len(A) % 2 == 1:\n    new_A = []\n    next_plus = True\n    for i in range(len(A) - 1):\n        if next_plus:\n            new_A += [A[i] + A[i+1]]\n        else:\n            new_A += [A[i] - A[i+1]]\n        next_plus = not next_plus\n    A = new_A\n\nif len(A) % 4 == 2:\n    new_A = []\n    for i in range(len(A) // 2):\n        new_A += [A[2*i] + A[2*i+1]]\n    A = new_A\nelse:\n    new_A = []\n    for i in range(len(A) // 2):\n        new_A += [A[2*i] - A[2*i+1]]\n    A = new_A\n\n# binomial sum\n\nN = len(A)-1\n\nret = 0\n\nfor i in range(N+1):\n    ret += A[i]*nCr_mod(N, i)\n    ret = ret % MODULUS\n\nprint(ret)"]