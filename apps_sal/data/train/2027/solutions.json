["t = input()\na, b = [i for i, d in enumerate(t, 1) if d == 'l'], [i for i, d in enumerate(t, 1) if d == 'r']\na.reverse()\nprint('\\n'.join(map(str, b)))\nprint('\\n'.join(map(str, a)))", "inp = input()\nlength = len(inp)\nmin,max,dic1,dic2 = 1,length,[],[]\nfor i in range(0,length):\n    if inp[i] == \"l\":\n        dic2.append(i+1)\n    else:\n        dic1.append(i+1)\n\nprint('\\n'.join(map(str, dic1)))\nprint('\\n'.join(map(str, dic2[::-1])))", "t = input()\na, b = [i for i, d in enumerate(t, 1) if d == 'l'], [i for i, d in enumerate(t, 1) if d == 'r']\na.reverse()\nprint('\\n'.join(map(str, b)))\nprint('\\n'.join(map(str, a)))", "s = input()\nl = [0] * len(s)\na = 0\nb = len(s) - 1\nfor i in range(len(s)):\n\tif s[i] == 'l':\n\t\tl[b] = str(i + 1)\n\t\tb -= 1\n\telse:\n\t\tl[a] = str(i + 1)\n\t\ta += 1\nprint('\\n'.join(l))\n", "k = input()\ns = []\na = []\nb = []\nfor i in range(len(k)):\n    if k[i] == 'l':\n        a.append(i+1)\n    else:\n        b.append(i+1)\n\na.reverse()\nfor i in b:\n    print(i)\n\nfor i in a:\n    print(i)\n", "from collections import deque\ns=deque(('l'+input())[:-1])\nle = []\nri = []\nn=0\nwhile s:\n    c = 0;ref = s[0]\n    while s and s[0] == ref: c+=1;s.popleft()\n    #print(ref,c)\n    if ref=='l':\n        for i in range(c-1):\n            ri.append(n+i+1);\n        le.append(n+c)\n        n=n+c\n    elif ref=='r':\n        for i in range(c-1):\n            le.append(n+i+1);\n        ri.append(n+c)\n        n=n+c\n    #print(le,ri)\nle.extend(ri[::-1])\nprint('\\n'.join([str(i) for i in le]))\n", "from sys import stdin, stdout\ns = input().strip()\nn = len(s)\nleft = 0\nright = n-1\nvs = [0]*n\nfor i in range(n):\n\tif(s[i] == 'l'):\n\t\tvs[right] = str(i+1)\n\t\tright -= 1\n\telse:\n\t\tvs[left] = str(i+1)\n\t\tleft += 1\nprint('\\n'.join(vs))\n", "s = input()\nresult = [\"\"] * len(s)\nl = 0; r = len(s) - 1\nfor i in range(len(s)):\n  if s[i] == 'r':\n    result[l] = str(i+1)\n    l += 1\n  else:\n    result[r] = str(i+1)\n    r -= 1\nfrom sys import stdout\nstdout.write('\\n'.join(result))", "s=input()\nl,r=[],[]\nfor x in range(len(s)):\n    if s[x]=='r':\n        r.append(x+1)\n    else:\n        l.append(x+1)\nfor el in r:\n    print(el)\nfor el in l[::-1]:\n    print(el)", "l, r = [], []\nfor i, c in enumerate(input()):\n  if c == 'l':\n    r += [str(i + 1)]\n  else:\n    l += [str(i + 1)]\nr.reverse()\nprint('\\n'.join(l + r)) \n", "s = input()\nans = [0 for i in range(len(s))]\nlp = 0\nrp = len(s)-1\nfor i in range(len(s)):\n\tif s[i]!='l':\n\t\tans[lp] = i+1\n\t\tlp+=1\n\telse:\n\t\tans[rp] = i+1\n\t\trp -= 1\nfor i in ans:\n\tprint(i)\n", "n = input()\nlength = len(n)\nmin,max,arr1,arr2 = 1,length,[],[]\nfor i in range(0,length):\n    if n[i] == \"l\":\n        arr2.append(i+1)\n    else:\n        arr1.append(i+1)\n\nprint('\\n'.join(map(str, arr1)))\nprint('\\n'.join(map(str, arr2[::-1])))", "MOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\n\ns = input()\nn = len(s)\nans = [0]*(n + 1)\nl = n\nr = 1\nstone = 1\nfor i in s:\n\tif i == 'l':\n\t\tans[l] = stone\n\t\tl -= 1\n\tif i == 'r':\n\t\tans[r] = stone\n\t\tr += 1\n\tstone += 1\n# print(ans)\nfor i in ans[1:]:\n\tprint(i)", "a=list(input())\nn=len(a)\nfor i in range(n):\n\tif(a[i]=='r'):\n\t\tprint(i+1)\nfor i in range(n-1,-1,-1):\n\tif(a[i]=='l'):\n\t\tprint(i+1)", "s = input()\na, b = [], []\nfor i, j in zip(s, range(1, len(s)+1)):\n    if i == 'r': a.append(str(j))\n    else: b.append(str(j))\nprint('\\n'.join(a + b[::-1]))", "def main():\n    left = -1\n    right = -1\n    edges = {}\n    s = input()\n\n    for i in range(len(s)):\n        edges[i+1] = right\n        edges[left] = i+1\n        if s[i] == 'l':\n            right = i+1\n        else:\n            left = i+1\n\n    curr = edges[-1]\n    while curr != -1:\n        print(curr)\n        curr = edges[curr]\n    \n\nmain()\n", "s = input()\nres = []\nfor i in range(len(s)):\n    if s[i] == 'r':\n        res.append(str(i+1))\nfor i in range(len(s)-1, -1, -1):\n    if s[i] == 'l':\n        res.append(str(i+1))\nprint('\\n'.join(res)) \n", "s = input()\nl = [0] * len(s)\na = 0\nb = len(s) - 1\nfor i in range(len(s)):\n\tif s[i] == 'l':\n\t\tl[b] = str(i + 1)\n\t\tb -= 1\n\telse:\n\t\tl[a] = str(i + 1)\n\t\ta += 1\nprint('\\n'.join(l))", "def scape(s):\n    first = []\n    last = []\n    it = 1\n    for ch in s:\n        if ch == \"l\":\n            last.append(it)\n        else:\n            first.append(it)\n        it += 1\n\n    for i in range(len(last)-1, -1,-1):\n        first.append(last[i])\n\n    return first\n\ns = input()\n\nans = []\n\nans = scape(s)\nfor i in ans:\n    print(i)\n\n", "s = input()\n# list = [1]\n# n = len(s)\n# index = 0\n# for i in range(1,n):\n#     if (s[i-1]==\"l\") :\n#         list.insert(index, i+1)\n#     else:\n#         index += 1\n#         list.insert(index, i+1)\n# for num in list:\n#     print(num)\n\nn = len(s)\nans = [0]*n\nleft = n-1\nright = 0\nif (s[0]==\"l\") :\n    ans[n-1] = 1\n    left -= 1\nelse:\n    ans[0] = 1\n    right += 1\nfor i in range(1,n) :\n    if (s[i]==\"l\") :\n        ans[left] = i+1\n        left -= 1\n    else:\n        ans[right] = i+1\n        right += 1\nfor num in ans:\n    print(num)\n", "s=input()\npos1=[]\npos2=[]\nn=len(s)\nfor i in range(n):\n    if s[i]=='l':\n        pos2.append(i+1)\n    else:\n        pos1.append(i+1)\nfor i in pos1:\n    print(i)\nfor i in pos2[::-1]:\n    print(i)\n"]