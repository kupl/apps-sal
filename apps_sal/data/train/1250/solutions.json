["t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    p=10**9+7\r\n    a=(pow(3,n+1,p)-1)\r\n    \r\n    b=(pow(2,n+1,p)-1)\r\n  \r\n    print((((3*a)//2)%p-(2*(b))%p+p)%p)", "t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    p=10**9+7\r\n    a=(pow(3,n+1,p)-1)\r\n    b=(pow(2,n+1,p)-1)\r\n    print(((3*a)//2)%p-(2*(b))%p)", "t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    p=10**9+7\r\n    a=(pow(3,n+1,p)-1)\r\n    b=(pow(2,n+1,p)-1)\r\n    print(((3*a)//2)%p-(2*(b))%p)", "tc=int(input())\r\nwhile tc>0:\r\n    tc-=1\r\n    mod_inv=500000004\r\n    mod=1000000007\r\n    n=int(input())\r\n    res=((4500000036*(pow(3,n,mod)-1))%mod)-(4*(pow(2,n,mod)-1))\r\n    print((res+1)%mod)\r\n", "import math\r\nimport bisect\r\nimport itertools\r\nimport sys\r\nmod=10**9 +7\r\n'''fact=[1]*1001\r\nifact=[1]*1001\r\nfor i in range(1,1001):\r\n    fact[i]=((fact[i-1])*i)%mod\r\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\r\ndef ncr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\r\ndef npr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod))\r\n    '''\r\n'''def mindiff(a):\r\n    b=a[:]\r\n    b.sort()\r\n    m=10000000000\r\n    for i in range(len(b)-1):\r\n        if b[i+1]-b[i]<m:\r\n            m=b[i+1]-b[i]\r\n    return m\r\n    '''\r\n'''def lcm(a,b):\r\n    return a*b//math.gcd(a,b)\r\n\r\n    '''\r\n    \r\n'''def merge(a,b):\r\n    i=0;j=0\r\n    c=0\r\n    ans=[]\r\n    while i<len(a) and j<len(b):\r\n        if a[i]<b[j]:\r\n            ans.append(a[i])\r\n            i+=1\r\n        else:\r\n            ans.append(b[j])\r\n            c+=len(a)-i\r\n            j+=1\r\n    ans+=a[i:]\r\n    ans+=b[j:]\r\n    return ans,c\r\ndef mergesort(a):\r\n    if len(a)==1:\r\n        return a,0\r\n    mid=len(a)//2   \r\n    left,left_inversion=mergesort(a[:mid])\r\n    right,right_inversion=mergesort(a[mid:])\r\n    m,c=merge(left,right)\r\n    c+=(left_inversion+right_inversion)\r\n    return m,c\r\n    \r\n'''\r\n'''\r\ndef is_prime(num):\r\n    if num == 2: return True\r\n    if num == 3: return True\r\n    if num%2 == 0: return False\r\n    if num%3 == 0: return False\r\n    t = 5\r\n    a = 2\r\n    while t <= int(math.sqrt(num)):\r\n        if num%t == 0: return False\r\n        t += a\r\n        a = 6 - a\r\n    return True\r\n '''\r\na1=[2,6]\r\na2=[3,18]\r\na=[]\r\nfor i in range(100000):\r\n    a2.append(((a2[-1]+a1[-1]+1)*3)%mod)\r\n    a1.append(((a1[-1]+1)*2)%mod)\r\nfor i in range(100000):\r\n    a.append((a1[i]+a2[i]+1)%mod)\r\nt=int(input())\r\n#print(a)\r\nfor i in range(t):\r\n    n=int(input())\r\n    print(a[n- 1])", "t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    p=10**9+7\r\n    a=(pow(3,n+1,p)-1)\r\n    b=(pow(2,n+1,p)-1)\r\n    print((((3*a)//2)%p-(2*(b))%p)%p)", "T=int(input())\r\nwhile T>0:\r\n    T-=1\r\n    mod_inv=500000004\r\n    mod=1000000007\r\n    n=int(input())\r\n    ans=((4500000036*(pow(3,n,mod)-1))%mod)-(4*(pow(2,n,mod)-1))\r\n    print((ans+1)%mod)\r\n", "import math\r\nimport bisect\r\nimport itertools\r\nimport sys\r\nmod=10**9 +7\r\n'''fact=[1]*1001\r\nifact=[1]*1001\r\nfor i in range(1,1001):\r\n    fact[i]=((fact[i-1])*i)%mod\r\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\r\ndef ncr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\r\ndef npr(n,r):\r\n    return (((fact[n]*ifact[n-r])%mod))\r\n    '''\r\n'''def mindiff(a):\r\n    b=a[:]\r\n    b.sort()\r\n    m=10000000000\r\n    for i in range(len(b)-1):\r\n        if b[i+1]-b[i]<m:\r\n            m=b[i+1]-b[i]\r\n    return m\r\n    '''\r\n'''def lcm(a,b):\r\n    return a*b//math.gcd(a,b)\r\n\r\n    '''\r\n    \r\n'''def merge(a,b):\r\n    i=0;j=0\r\n    c=0\r\n    ans=[]\r\n    while i<len(a) and j<len(b):\r\n        if a[i]<b[j]:\r\n            ans.append(a[i])\r\n            i+=1\r\n        else:\r\n            ans.append(b[j])\r\n            c+=len(a)-i\r\n            j+=1\r\n    ans+=a[i:]\r\n    ans+=b[j:]\r\n    return ans,c\r\ndef mergesort(a):\r\n    if len(a)==1:\r\n        return a,0\r\n    mid=len(a)//2   \r\n    left,left_inversion=mergesort(a[:mid])\r\n    right,right_inversion=mergesort(a[mid:])\r\n    m,c=merge(left,right)\r\n    c+=(left_inversion+right_inversion)\r\n    return m,c\r\n    \r\n'''\r\n'''\r\ndef is_prime(num):\r\n    if num == 2: return True\r\n    if num == 3: return True\r\n    if num%2 == 0: return False\r\n    if num%3 == 0: return False\r\n    t = 5\r\n    a = 2\r\n    while t <= int(math.sqrt(num)):\r\n        if num%t == 0: return False\r\n        t += a\r\n        a = 6 - a\r\n    return True\r\n '''\r\na1=[2,6]\r\na2=[3,18]\r\na=[]\r\nfor i in range(100000):\r\n    a2.append(((a2[-1]+a1[-1]+1)*3)%mod)\r\n    a1.append(((a1[-1]+1)*2)%mod)\r\nfor i in range(100000):\r\n    a.append(a1[i]+a2[i]+1)\r\nt=int(input())\r\nfor i in range(t):\r\n    n=int(input())\r\n    print(a[n- 1])", "t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    p=10**9+7\r\n    a=(pow(3,n+1,p)-1)%p\r\n    b=(pow(2,n+1,p)-1)%p\r\n    print((((3*a)//2)%p-(2*(b))%p)%p)", "\r\nt=int(input())\r\nmod=10**9+7\r\ninverse=5*(10**8)+4\r\n\r\nfor i in range(t):\r\n\tn=int(input())\r\n\ttemp1=pow(3,n+2,mod)\r\n\ttemp2=pow(2,n+3,mod)\r\n\ta=(temp1-temp2+1)%mod\r\n\ta=(a*inverse)%mod\r\n\t\r\n\tprint(a)\t", "t=int(input())\r\nans=[]\r\nfor i in range(t):\r\n\tn=int(input())\r\n\tc=0\r\n\tfor j in range(n+1):\r\n\t\tfor k in range(0,n-j+1):\r\n\t\t\tc+=(2**k)*(3**j)\r\n\tans.append(c)\r\nfor i in ans:\r\n\tprint(i)\r\n", "\r\nt=int(input())\r\nmod=10**9+7\r\nfor i in range(t):\r\n\tn=int(input())\r\n\tans=0\r\n\tfor j in range(n+1):\r\n\t\ttemp1=pow(3,j,mod)\r\n\t\ttemp2=(pow(2,n+1-j,mod)+(mod-1))%mod\r\n\t\ttemp3=(temp1*temp2)%mod\r\n\t\tans=(ans+temp3)%mod\r\n\tprint(ans)\t", "\r\nt=int(input())\r\nmod=1000000007\r\nwhile t:\r\n    t-=1\r\n    n=int(input())\r\n    ans=(2*pow(3,n+1,mod))%mod-pow(2,n+2,mod)-((pow(3,n+1,mod)-1)*(500000004))%mod\r\n    ans%=mod\r\n    print(ans)\r\n", "MOD = int(1e9 + 7)\r\nfor _ in range(int(input())):\r\n    n = int(input()) + 1\r\n    res = (((3*pow(3, n, MOD) - 3) % MOD) * 500000004)% MOD\r\n    res = (res - (2*(pow(2, n, MOD) - 1)) % MOD) % MOD\r\n    print(res)", "T=int(input())\r\nwhile T>0:\r\n    T-=1\r\n    n=int(input())\r\n    ans=0;\r\n    for i in range(n+1):\r\n        for j in range(n-i+1):\r\n            k=(n-i-j)\r\n            # print(i,j,k)\r\n            ans+=((pow(2,j,1000000007)*pow(3,k,1000000007))%1000000007)\r\n    print(ans)\r\n"]