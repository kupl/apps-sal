["t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    hmap = {}\n    for i in range(n):\n        if arr1[i] in hmap:\n            hmap[arr1[i]] += 1\n        else:\n            hmap[arr1[i]] = 1\n    \n    for i in range(m):\n        if arr2[i] in hmap:\n            hmap[arr2[i]] += 1\n        else:\n            hmap[arr2[i]] = 1\n    ans = []\n    #print(hmap)\n    for key in hmap:\n        if hmap[key]==1:\n            ans.append(key)\n    ans.sort()\n    for x in ans:\n        print(x,end=' ')\n    print()\n            \n        ", "for _ in range(int(input())):\r\n    lenn, lenm = [int(x) for x in input().split()]\r\n    n = [int(x) for x in input().split()]\r\n    m = [int(x) for x in input().split()]\r\n    answer = set(n) ^ set(m)\r\n    print(*list(answer))", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: map(int,input().split())\r\nmif    =lambda: map(float,input().split())\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n,m=mi()\r\n    arr=lii()\r\n    brr=lii()\r\n    arr.extend(brr)\r\n    arr.sort()\r\n    d=dd(int)\r\n    for ele in arr:\r\n        d[ele]+=1\r\n    for ele in d:\r\n        if d[ele]==1:\r\n            print(ele,end=' ')\r\n    print()\r\n    ", "# cook your dish here\nt = int(input())\nwhile t:\n    m, n = map(int, input().split())\n    arr = [int(i) for i in input().split()]\n    brr = [int(i) for i in input().split()]\n    d = {}\n    for i in arr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    for i in brr:\n        if i not in d:\n            d[i] = 1\n        else:\n            d[i] += 1\n    z = []\n    for i in d:\n        if d[i] == 1:\n            z.append(i)\n    z.sort()\n    print(*z)\n    t -= 1", "import sys,io,os,math\nfrom math import ceil,log,gcd,inf\nfrom itertools import permutations\nmod=1000000007\nmod1=998244353\ndef printlist(n):\n    sys.stdout.write(\" \".join(map(str,n)) + \"\\n\")\nprintf=lambda n:sys.stdout.write(str(n)+\"\\n\")\ndef printns(n):\n    sys.stdout.write(str(n))   \ndef intinp():\n    return int(sys.stdin.readline())\ndef strinp():\n    return sys.stdin.readline()\ndef arrinp():\n    return list(map(int,sys.stdin.readline().strip().split()))\ndef mulinp():\n    return map(int,sys.stdin.readline().strip().split())\ndef flush():\n    return sys.stdout.flush()\ndef power_two(x):\n    return (1<<x)\ndef lcm(a,b):\n\treturn a*b//gcd(a,b)   \ndef solve():\n        n,m=mulinp()\n        t=set(arrinp())\n        t2=set(arrinp())\n        temp=t.difference(t2)\n        temp1=t2.difference(t)\n        ans=temp.union(temp1)\n        for i in ans:\n            print(i,end=\" \")\n        print()\n\n\n\ndef main():\n    tc=intinp()\n    while(tc):\n        solve()\n        tc-=1\t\n\t\nmain()\n\n", "# cook your dish here\nT=int(input())\nfor t in range(T):\n    z=input()\n    N,M=z.split()\n    N,M=int(N),int(M)\n    z=input()\n    first=z.split()\n    second=input().split()\n    first=[int(i) for i in first]\n    second=[int(i) for i in second]\n    set_1=set()\n    set_2=set()\n    for i in first:\n        if i not in set_1:\n            set_1.add(i)\n    for i in second:\n        if i not in set_2:\n            set_2.add(i)\n    output=[]\n    for i in first:\n        if i not in set_2:\n            output.append(i)\n    for i in second:\n        if i not in set_1:\n            output.append(i)\n    for i in output:\n        print(i,end=\" \")", "# cook your dish here\nt=int(input())\nfor i in range(0,t):\n    n,m=list(map(int,input().split()))\n    list1=[]\n    arr1=list(map(int,input().split()))[:n]\n    arr2=list(map(int,input().split()))[:m]\n    res = list(set(arr2)^set(arr1))\n    print(*res)\n", "for _ in range(int(input())):\n    n,m=[int(x) for x in input().split()]\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    x=a+b\n    dp=[0]*(max(x)+1)\n    for _ in range(len(x)):\n        dp[x[_]]+=1\n    for _ in range(1,len(dp)):\n        if dp[_]==1:\n            print(_,end=\" \")\n    print()        \n        \n    \n    ", "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    x=[]\n    l=set(map(int,input().split()))\n    l2=set(map(int,input().split()))\n    for i in l:\n        if i not in l2:\n            x.append(i)\n    for i in l2:\n        if i not in l:\n            x.append(i)\n    x.sort()\n    for i in x:\n        print(i,end=' ')\n    print()", "from collections import Counter\r\nfor _ in range(int(input())):\r\n    n,m=map(int,input().split())\r\n    ar=list(map(int,input().split()))\r\n    br=list(map(int,input().split()))\r\n    cr=ar+br\r\n    cr=Counter(cr)\r\n    dr=[]\r\n    for i in cr:\r\n        if(cr[i]==1):\r\n            dr.append(i)\r\n    dr.sort()\r\n    print(*dr)", "# cook your dish here\ndef CountFrequency(my_list): \n  \n    # Creating an empty dictionary  \n    freq = {} \n    vec = []\n    for item in my_list: \n        if (item in freq): \n            freq[item] += 1\n        else: \n            freq[item] = 1\n            \n    for key, value in list(freq.items()):\n        if(value == 1):\n            vec.append(key)\n    vec.sort()\n    return vec\n            \n            \nt = int(input())\nfor i in range(0, t):\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = a + b;\n    ll = CountFrequency(c)\n    print(*ll)\n", "t = int(input())\nfor _ in range(t):\n    m, n = map(int, input().strip().split())\n    x = list(map(int, input().split()))\n    f = list(map(int, input().split()))\n    print(*(set(x) | set(f)) - (set(x) & set(f)))", "t = int(input())\nfor _ in range(t):\n    m, n = map(int, input().strip().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a = set(a)\n    b = set(b)\n    z = b - a\n    y = a - b\n    print(*y,*z)", "# cook your dish here\nt = int(input())\nwhile t>0:\n    n,m = map(int, input().split())\n    list_n = list(map(int, input().split()))\n    list_m = list(map(int, input().split()))\n    set_m = set(list_m)\n    set_n = set(list_n)\n    set_mn = set_m-set_n\n    set_nm = set_n-set_m\n    union_set = set_mn.union(set_nm)\n    print(*sorted(list(union_set)))\n    t-=1", "def f(N, M):\r\n    setn = set()\r\n    setrn = set()\r\n    for ele in N+M:\r\n        if ele in setrn:\r\n            continue\r\n        elif ele in setn:\r\n            setn.remove(ele)\r\n            setrn.add(ele)\r\n        else:\r\n            setn.add(ele)\r\n    \r\n    return list(setn)\r\n    \r\n\r\nt = int(input())\r\nanswers = list()\r\nfor _ in range(t):\r\n    some_inp = input()\r\n    N = list(map(int, input().split()))\r\n    M = list(map(int, input().split()))\r\n    answers.append(f(N, M))\r\n\r\nfor answer in answers:\r\n    print(*answer, sep=\" \")", "t=int(input())\nfor i in range(t):\n    n,m=map(int,input().split())\n    arr1=[int(x) for x in input().split()]\n    arr2=[int(x) for x in input().split()]\n    s1=set(arr1)\n    s2=set(arr2)\n    \n    l=[]\n    for i in arr1:\n        if i not in s2:\n            l.append(i)\n            \n    for i in arr2:\n        if i not in s1:\n            l.append(i)\n    \n    l.sort()\n    print(*l)", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    a,b=map(int,input().split())\n    c=list(map(int,input().split()))\n    d=list(map(int,input().split()))\n    h=dict()\n    for i in c:\n        h[i]=h.get(i,0)+1\n    for i in d:\n        h[i]=h.get(i,0)+1\n    k=list()\n    for i,j in h.items():\n        if j==1:k.append(i)\n    k.sort()\n    for i in k:\n        print(i,end=\" \")\n    print()\n", "t = int(input())\n\nfor _ in range(t):\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    \n    sa = set(a)\n    \n    sb = set(b)\n    \n    ans = set()\n    \n    for i in sa:\n        if i not in sb:\n            ans.add(i)\n    \n    for i in sb:\n        if i not in sa:\n            ans.add(i)\n    \n    print(*sorted(ans))", "# cook your dish here\nn=int(input())\nres=[]\nfor _ in range(n):\n    m=input().split()\n    ls1=list(map(int,input().strip().split()))\n    ls2=list(map(int,input().strip().split()))\n    ls1=set(ls1)\n    ls2=set(ls2)\n    c=ls1.intersection(ls2)\n    ls1=list(ls1)\n    ls2=list(ls2)\n    for ele in c:\n        ls1.remove(ele)\n        ls2.remove(ele)\n    ls1.extend(ls2)\n    ls1.sort()\n    for ele in ls1:\n        print(ele,end=\" \")\n        \n    \n\n    \n    \n    \n    \n    ", "# cook your dish here\nT=int(input())\nfor _ in range(T):\n    n,m=map(int,input().split())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    a.sort()\n    b.sort()\n    i,j=0,0\n    l=[]\n    while i<n and j<m:\n        if a[i]<b[j]:\n            l.append(a[i])\n            i+=1\n        elif a[i]==b[j]:\n            i+=1\n            j+=1\n        else:\n            l.append(b[j])\n            j+=1\n    while i<n:\n        l.append(a[i])\n        i+=1\n    while j<m:\n        l.append(b[j])\n        j+=1\n    print(*l)", "import sys \r\nfrom math import log2\r\nfrom itertools import combinations \r\n\r\n#input = sys.stdin.readline\r\n#sys.stdin.readline()\r\n#sys.stdout.write(\"\\n\")\r\n\r\n# For getting input from input.txt file\r\n# sys.stdin = open('Python_input1.txt', 'r')\r\n\r\n# # Printing the Output to output.txt file\r\n# sys.stdout = open('Python_output1.txt', 'w')\r\n\r\n\r\n\r\nfor _ in range(int(sys.stdin.readline())):\r\n\tn,m  =list(map(int,sys.stdin.readline().split()))\r\n\ta = set(map(int,sys.stdin.readline().split()))\r\n\tb = set(map(int,sys.stdin.readline().split()))\r\n\tc = []\r\n\tfor i in a:\r\n\t\tif i  not in b:\r\n\t\t\tc.append(i)\r\n\tfor i in b:\r\n\t\tif i  not in a:\r\n\t\t\tc.append(i)\r\n\tc = list(set(c))\r\n\tc.sort()\r\n\tprint(*c)\r\n", "# cook your dish here\ntestcases = int(input())\nfor x in range(testcases):\n    n, m = map(int,input().split())\n    fb = list(map(int,input().split()))\n    sb = list(map(int,input().split()))\n    print(*sorted(list(set(fb)^set(sb))))", "for _ in range(int(input())):\r\n    n,m = map(int,input().split())\r\n    arr = set(map(int,input().split()))\r\n    brr = set(map(int,input().split()))\r\n    a = arr^brr\r\n    for i in a:\r\n    \tprint(i,end=' ')"]