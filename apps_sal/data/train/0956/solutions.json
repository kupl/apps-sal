["# cook your dish here\nn=int(input())\nx=[]\ny=[]\nfor _ in range(n):\n s=input().split(' ')\n x.append(int(s[0]))\n y.append(int(s[1]))\nq=x[0]\nw=y[0]\nfor t in range(n-1):\n x[t]=(x[t]+x[t+1])/2 \n y[t]=(y[t]+y[t+1])/2 \nx[n-1]=(x[n-1]+q)/2 \ny[n-1]=(y[n-1]+w)/2 \ni=0\na=0\nwhile(i<n-1):\n a+=(x[i]*y[i+1]-y[i]*x[i+1])/2\n i+=1\na+=(x[i]*y[0]-y[i]*x[0])/2\n\nprint(abs(a))\n#print(x,y)\n", "# cook your dish here\ndef func(a,n):\n if n < 3:\n  return 0\n res_arr = []\n for i in range(n):\n  x = (a[i][0] + a[(i + 1) % n][0]) / 2\n  y = (a[i][1] + a[(i + 1) % n][1]) / 2\n  res_arr.append((x, y))\n l = len(res_arr)\n s = 0\n for i in range(n):\n  u = res_arr[i][0]*res_arr[(i+1) % l][1]\n  v = res_arr[i][1]*res_arr[(i+1) % l][0]\n  s += (u-v)\n return abs(s)/2\n\ndef __starting_point():\n n = int(input())\n arr = []\n for i in range(n):\n  x, y = map(int, input().split())\n  arr.append((x,y))\n \n res = func(arr, n)\n print(res)\n__starting_point()", "import numpy as np\ndef PolyArea(x,y):\n return 0.5*np.abs(np.dot(x,np.roll(y,1))-np.dot(y,np.roll(x,1)))\nn=int(input())\na=[]\nb=[]\nfor i in range(0,n):\n a1,b1=input().split(\" \")\n a1,b1=int(a1),int(b1)\n a.append(a1)\n b.append(b1)\na1=[]\nb1=[]\nfor i in range(0,n-1):\n a1.append((a[i]+a[i+1])/2)\n b1.append((b[i]+b[i+1])/2)\na1.append((a[0]+a[-1])/2)\nb1.append((b[0]+b[-1])/2)\nprint(PolyArea(np.array(a1),np.array(b1)))", "# cook your dish here\ndef polygonArea(X, Y, n):\n area = 0.0\n j = n - 1\n for i in range(0, n):\n  area += (X[j]*Y[i] - Y[j]*X[i])\n  j = i\n return (abs(area / 2.0))\nX=[]\nY=[]\nxy=[]\nn=int(input())\nfor i in range(n):\n xy.append(list(map(int,input().split())))\nfor i in range((n-1)):\n X.append((xy[i][0]+xy[i+1][0])/2)\n Y.append((xy[i][1]+xy[i+1][1])/2)\nX.append((xy[0][0]+xy[n-1][0])/2)\nY.append((xy[0][1]+xy[n-1][1])/2)\nprint(polygonArea(X, Y, n))", "# cook your dish here\nx=[]\ny=[]\nn=int(input())\nfor i in range(n):\n a,b=list(map(int, input().split()))\n x.append(a)\n y.append(b)\na,b=[],[]\nfor i in range(-1,n-1):\n a.append((x[i]+x[i+1])/2)\n b.append((y[i]+y[i+1])/2)\ndef polygonArea(X, Y, n): \n \n # Initialze area \n area = 0.0\n \n # Calculate value of shoelace formula \n j = n - 1\n for i in range(n): \n  area += (X[j] + X[i]) * (Y[j] - Y[i]) \n  j = i \n return abs(area/2)\nprint(polygonArea(a,b,n))\n  \n \n \n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Dec 20 23:54:46 2019\n\n@author: sj\n\"\"\"\nimport numpy as np\ndef PolyArea(x,y):\n return 0.5*np.abs(np.dot(x,np.roll(y,1))-np.dot(y,np.roll(x,1)))\nn=int(input())\na=[]\nb=[]\nfor i in range(0,n):\n a1,b1=input().split(\" \")\n a1,b1=int(a1),int(b1)\n a.append(a1)\n b.append(b1)\na1=[]\nb1=[]\nfor i in range(0,n-1):\n a1.append((a[i]+a[i+1])/2)\n b1.append((b[i]+b[i+1])/2)\na1.append((a[0]+a[-1])/2)\nb1.append((b[0]+b[-1])/2)\n\nprint(PolyArea(np.array(a1),np.array(b1)))"]