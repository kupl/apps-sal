["def i1():\n return int(input())\ndef i2():\n return [int(i) for i in input().split()]\nq=i1()\nimport math\ny=[]\nfor i in range(q):\n y.append(i2())\n\nfor a,b in y:\n x=a*b\n c=int(math.sqrt(x))\n if c**2==x:\n    c-=1\n z=2*c\n if c>0 and (x//c)==c:\n   z-=1\n if c>0 and x%c==0 and (x//c-1)==c:\n   z-=1\n if a<=c:\n   z-=1\n if b<=c:\n   z-=1\n print(z)", "from math import sqrt\nQ = int(input())\nque = []\nfor i in range(Q):\n    que.append(tuple(map(int, input().split())))\nfor q in que:\n    if q[0] == q[1]:\n        print(2*q[0]-2)\n    else:\n        a = q[0]*q[1]\n        p = int(sqrt(a))\n        if p*p == a:\n            p -= 1\n        if a > p*(p+1):\n            print(2*p-1)\n        else:\n            print(2*p-2)", "# editorial\u89e3\u6cd5\nfrom math import sqrt\nQ = int(input())\nfor i in range(Q):\n\tA,B = list(map(int,input().split(\" \")))\n\tif A == B or A + 1 == B:\n\t\tprint((2*A-2))\n\t\tcontinue\n\n\tmul = A * B\n\tC = int(sqrt(mul))\n\tif C * C == mul:\n\t\tC -= 1\n\tif (C + 1) * C < mul:\n\t\tprint(((2*C) - 1)) #(A-1) + (2*C - A)\n\telse:\n\t\tprint(((2*C) - 2)) #(A-1) + (2*C - A - 1)\n\n", "def inpl(): return [int(i) for i in input().split()]\nQ = int(input())\nfor _ in range(Q):\n    A, B = sorted(inpl())\n    c = int(-(-(A*B)**0.5//1)-1)\n    ans = A-1 + max(0, c-A) + (-((-A*B)//(c+1))-1)\n    print(ans)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**15\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    rr = []\n    for _ in range(n):\n        a,b = LI()\n        t = a*b\n        s = int(t ** 0.5)\n        if t < 3:\n            rr.append(0)\n        elif a == b:\n            if (a-1) * (b+1) < t:\n                rr.append((a-1)*2)\n            else:\n                rr.append((a-1)*2-1)\n        elif s*s == t:\n            rr.append((s-1)*2-1)\n        elif s*(s+1) < t:\n            rr.append(s*2-1)\n        else:\n            rr.append((s-1)*2)\n\n\n    return '\\n'.join(map(str, rr))\n\n\nprint(main())\n\n\n", "import math\n\ndef __starting_point():\n    q = int(input())\n    for i in range(q):\n        a, b = list(map(int, input().split()))\n        prod = a*b\n        rootInt = int(math.sqrt(prod))\n        if a == b: print((a-1)*2)\n        elif math.sqrt(prod) == rootInt:\n            print((rootInt-2)*2+1)\n        else:\n            if rootInt*(rootInt+1) < prod:\n                print((rootInt-1)*2+1)\n            else:\n                print((rootInt-1)*2)\n__starting_point()", "q = int(input())\nfor i in range(q):\n  x,y = map(int,input().split())\n  if x == y:\n    print(2*(x-1))\n    continue\n  z = int((x*y)**0.5)\n  if z**2 == x*y:\n    z -= 1\n  ans = 2*z-2\n  if z*(z+1)<x*y:\n    ans += 1\n  print(ans)", "#!python3\n\n# input\nQ = int(input())\nA, B = [None] * Q, [None] * Q\nfor i in range(Q):\n    A[i], B[i] = sorted(map(int, input().split()))\n\n\ndef solve(a, b):\n    w = a * b - 1\n    left, right = 0, b - a\n    while right - left > 1:\n        x = (left + right) // 2\n        v = w // (a + x)\n        if v < a:\n            right = x\n        else:\n            left = x\n\n    n = left\n    left, right = 0, n\n    while right - left > 1:\n        x = (left + right) // 2\n        v = w // (a + x)\n        if v < a + x:\n            right = x\n        else:\n            left = x\n\n    return right + (w // (a + right)) - (w // (a + n))\n\n\ndef main():\n    for a, b in zip(A, B):\n        ans = 2 * (a - 1) + solve(a, b)\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import sqrt\n\ndef func(a, b):\n\tif a == b:\n\t\treturn (a - 1) * 2\n\telse:\n\t\tsq = int(sqrt(a * b))\n\t\tif a * b == sq ** 2:\n\t\t\treturn (sq - 1) * 2 - 1\n\t\telif sq * (sq + 1) > a * b:\n\t\t\treturn (sq - 1) * 2\n\t\telif sq * (sq + 1) == a * b:\n\t\t\tif abs(a - b) == 1:\n\t\t\t\treturn (sq - 1) * 2\n\t\t\telse:\n\t\t\t\treturn (sq - 1) * 2\n\t\telse:\n\t\t\treturn sq * 2 - 1\n\nq = int(input())\nfor _ in range(q):\n\ta, b = map(int, input().split())\n\tprint(func(a, b))", "q = int(input())\nfor i in range(q):\n  a, b = list(map(int, input().split()))\n  if a==b:\n    ans = 2*a-2\n  elif abs(a-b)==1:\n    ans = 2*min(a, b)-2\n  else:\n    c = (a*b)**0.5\n    if c%1==0:\n      c = int(c)-1\n    else:\n      c = int(c)\n    if c*(c+1)>=a*b:\n      ans = 2*c-2\n    else:\n      ans = 2*c-1\n  print(ans)", "import math\nq=int(input())\nfor j in range(q):\n\tAB=[int(i) for i in input().split()]\n\tAB.sort()#4,11\n\tab=AB[0]*AB[1] #44\n\tfor i in range(int(math.sqrt(ab)),AB[1]+1):\n\t\tif i*i>=ab:\n\t\t\tx=i-1\n\t\t\tbreak\n\tif x==0:\n\t\tprint(0)\n\t\tcontinue\n\tfor i in range(int(ab/x),ab+1):\n\t\tif x*i>=ab:\n\t\t\ty=i-1\n\t\t\tbreak\n\tcnt1=2*x\n\tcnts=1 if x==y else 0\n\tcntdd=1 if x-AB[0]>=0 else 0\n\tcntdu=1 if AB[1]-y>=0 and (AB[1]+1)*(x-AB[1]+y)>=ab else 0 #x-i, y+i=c,b->c,b+1\n\tprint(cnt1-cnts-cntdd-cntdu)", "from math import *\n\n\nQ = int(input())\ndata = []\nfor _ in range(Q):\n    A, B = map(int, input().split())\n    data.append((A,B))\n\nfor A,B in data:\n    res = 0\n    if A==B==1: print(0)\n    else:\n        r = floor(((A*B)**(0.5)))\n        if r**2==A*B: r-=1\n        if (A*B-1)//r==r: res-=1\n        if A<=r or B<=r: res-=1\n        res += r*2\n        print(res)", "Q = int(input())\nquerys = [tuple(map(int, input().split())) for _ in range(Q)]\n\nanss = []\nfor A, B in querys:\n    if A > B:\n        A, B = B, A\n\n    if A == B:\n        ans = 2*(A-1)\n    elif A+1 == B:\n        ans = 2*(A-1)\n    else:\n        C = -(-((A*B)**0.5) // 1) - 1\n        if C*(C+1) >= A*B:\n            ans = 2*(C-1)\n        else:\n            ans = 2*C-1\n\n    anss.append(int(ans))\n\nprint(('\\n'.join(map(str, anss))))\n", "import math\n\ndef __starting_point():\n    Q = int(input())\n    for _ in range(Q):\n        a, b = list(map(int, input().split()))\n        big = max(a, b)\n        small = min(a, b)\n        c = math.floor(math.sqrt(a * b))\n        if c * c == a * b:\n            c -= 1\n\n        if big == small:\n            print((2 * big - 2))\n        elif big == small + 1:\n            print((2 * small - 2))\n        elif c * (c + 1) >= a * b:\n            print((2 * c - 2))\n        else:\n            print((2 * c - 1))\n\n__starting_point()", "# D\nimport math\nQ = int(input())\nA_list = []\nB_list = []\nfor _ in range(Q):\n    A, B = list(map(int, input().split()))\n    A_list.append(min(A, B))\n    B_list.append(max(A, B))\n    \nfor i in range(Q):\n    A = A_list[i]\n    B = B_list[i]\n    R = int(math.sqrt(A*B))\n    \n    \n    if A >= B - 1:\n        print((2*A-2))\n    elif R*R == A*B:\n        print((2*R-3))\n    elif R*(R+1) >= A*B:\n        print((2*R-2))\n    else:\n        print((2*R-1))\n", "for a in[*open(0)][1:]:a,b=map(int,a.split());c=int((a*b)**.5);print((a*b-(a!=b))//c+c-2)", "n = int(input())\narr = []\nfor i in range(n):\n    arr.append([int(x) for x in input().split()])\nfor pair in arr:\n    a = pair[0]\n    b = pair[1]\n    t = a*b\n    s = int(t ** 0.5)\n    if t < 3:\n        print((0))\n    elif a == b:\n        if (a-1) * (b+1) < t:\n            print(((a-1)*2))\n        else:\n            print(((a-1)*2-1))\n    elif s*s == t:\n        print(((s-1)*2-1))\n    elif s*(s+1) < t:\n        print((s*2-1))\n    else:\n        print(((s-1)*2))\n", "#!/usr/bin/env python3\n\nimport sys, math, copy\n# import fractions, itertools\n# import numpy as np\n# import scipy\n\nHUGE = 2147483647\nHUGEL = 9223372036854775807\nABC = \"abcdefghijklmnopqrstuvwxyz\"\n\ndef main():\n    q = int(input())\n    for i in range(q):\n        print((wc()))\n\ndef wc():\n    a, b = list(map(int, input().split()))\n    if a == b:\n        return 2 * (a - 1)\n    if b > a:\n        a, b = b, a\n    sqt = (a * b) ** 0.5\n    area1 = math.ceil(sqt) - 1\n    area2 = math.ceil(sqt) - 1 - b\n    area3 = b - 1\n    adj = -1 if (math.ceil(sqt) - 1) * math.ceil(sqt) >= a * b else 0\n    return area1 + area2 + area3 + adj\n\nmain()\n", "\ndef st2(x, y):\n    l = int((x * y * 4 - 1) ** 0.5)\n    return l - 1 - int(x != y)\n\n\ndef st3(x, y):\n    p, q = 1, (max(x, y) + 1) * 2\n    while q - p > 1:\n        m = (p + q) // 2\n        if m * m < x * y * 4:\n            p = m\n        else:\n            q = m\n    l = p\n    return l - 1 - int(x != y)\n\ndef query(x, y):\n    print(st3(x, y))\n\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        x, y = map(int, input().split())\n        query(x, y)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "q = int(input())\nfor i in range(q):\n    a,b = list(map(int, input().split()))\n    a,b = min(a,b), max(a,b)\n    l,r = a-1,b+1\n    while r-l != 1:\n        t = (l+r) // 2\n        if t*t < a*b:\n            l = t\n        else:\n            r = t\n    c = l\n    l,r = a-1,b+1\n    while r-l != 1:\n        t = (l+r) // 2\n        if t*(t+1) < a*b:\n            l = t\n        else:\n            r = t\n    d = l\n    print((a-1 + max(d*2-a, c*2-1-a) + int(a==b)))\n", "q = int(input())\nfor i in range(q):\n  a, b = list(map(int, input().split()))\n  if a==b:\n    ans = 2*a-2\n  elif abs(a-b)==1:\n    ans = 2*min(a, b)-2\n  else:\n    c = (a*b)**0.5\n    if c%1==0:\n      c = int(c)-1\n    else:\n      c = int(c)\n    if c*(c+1)>=a*b:\n      ans = 2*c-2\n    else:\n      ans = 2*c-1\n  print(ans)\n", "from math import sqrt\nQ = int(input())\nque = []\nfor i in range(Q):\n    que.append(tuple(map(int, input().split())))\nfor q in que:\n    if q[0] == q[1]:\n        print(2*q[0]-2)\n    else:\n        a = q[0]*q[1]\n        p = int(sqrt(a))\n        if p*p == a:\n            p -= 1\n        if a > p*(p+1):\n            print(2*p-1)\n        else:\n            print(2*p-2)", "from math import ceil\nQ = int(input())\nAB = [list(map(int, input().split())) for i in range(Q)]\n\nfor a, b in AB:\n    a, b = min(a, b), max(a, b)\n    C = int((a*b)**0.5)\n    if a == b:\n        print(2*a-2)\n        continue\n\n    if a + 1 == b:\n        print(2*a-2)\n        continue\n\n    if C**2 == a * b:\n        C -= 1\n    if C * (C+1) < a * b:\n        print(2*C-1)\n    else:\n        print(2*C-2)", "from math import sqrt\n\ndef func(a, b):\n\tif a == b:\n\t\treturn (a - 1) * 2\n\telse:\n\t\tsq = int(sqrt(a * b))\n\t\tif a * b == sq ** 2:\n\t\t\treturn (sq - 1) * 2 - 1\n\t\telif sq * (sq + 1) >= a * b:\n\t\t\treturn (sq - 1) * 2\n\t\telse:\n\t\t\treturn sq * 2 - 1\n\nq = int(input())\nfor _ in range(q):\n\ta, b = map(int, input().split())\n\tprint(func(a, b))", "n=int(input())\nl=[]\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n\n    p=int((a*b)**(1/2))\n\n    if p*(p+1) < a*b:\n        ans=int(2*p-1)\n    elif p**2==a*b and not a==b:\n        ans=int(2*p-3)\n    else:\n        ans=int(2*p-2)\n    l.append(ans)\n\nfor i in range(n):\n    print((l[i]))\n", "\ndef bsearch(target, min_i, max_i, func):\n    # func(index) <= target < func(index+1) \u3068\u306a\u308bindex\u3092\u8fd4\u3059\n    if func(max_i) < target:\n        return max_i\n    if target <= func(min_i):\n        return None\n    index = (max_i + min_i)//2\n    while True:\n        if max_i - min_i <= 1:\n            return min_i\n        if func(index) < target:\n            index, min_i = (index + max_i)//2, index\n            continue\n        index, max_i = (index + min_i)//2, index\n\n\ndef f(N):\n    def g(i):\n#        print(i,I,J)\n        if i < I or J < i:\n            return i*(N-i+1)\n        elif i == I:\n            return 0\n        elif I < J:\n            return i*(N-i+2)\n        else:\n            return i*(N-i)\n    I, J = A,N-B+1\n    return max(g(N//2), g(N//2+1), g(N//2+2))\n\nQ, = list(map(int, input().split()))\nfor _ in range(Q):\n    A, B = list(map(int, input().split()))\n    r = bsearch(A*B, 1, A*B, f)\n    print((r-1))\n", "from math import sqrt\n\nQ = int(input())\n\nfor i in range(Q):\n    A,B = map(int, input().split())\n    m=A*B\n\n    C = int(sqrt(m))\n    if C*C==m:\n        C=C-1\n\n    if A==B or B==A+1:\n        ans = 2*A-2\n    elif A==B+1:\n        ans = 2*B-2\n    elif C*(C+1)<m:\n        ans = 2*C-1\n    else:\n        ans = 2*C-2\n    print(ans)", "from math import sqrt\nQ = int(input())\nque = []\nfor i in range(Q):\n    que.append(tuple(map(int, input().split())))\nfor q in que:\n    if q[0] == q[1]:\n        print(2*q[0]-2)\n    else:\n        a = q[0]*q[1]\n        p = int(sqrt(a))\n        if p*p == a:\n            p -= 1\n        if a > p*(p+1):\n            print(2*p-1)\n        else:\n            print(2*p-2)", "from math import sqrt\nQ = int(input())\nque = []\nfor i in range(Q):\n    que.append(tuple(map(int, input().split())))\nfor q in que:\n    if q[0] == q[1]:\n        print(2*q[0]-2)\n    else:\n        a = q[0]*q[1]\n        p = int(sqrt(a))\n        if p*p == a:\n            p -= 1\n        if a > p*(p+1):\n            print(2*p-1)\n        else:\n            print(2*p-2)", "# seishin.py\nfrom math import sqrt\nQ = int(input())\nfor i in range(Q):\n    a, b = map(int, input().split())\n    if not a < b:\n        a, b = b, a\n    if a == b or a+1 == b:\n        print(2*a-2)\n        continue\n    c = int(sqrt(a*b))\n    if c**2 == a*b:\n        c -= 1\n    if c*(c+1) >= a*b:\n        print(2*c-2)\n        continue\n    print(2*c-1)", "import math\nQ=int(input())\nfor roop in range(Q):\n    X,Y=list(map(int,input().split()))\n    A=min([X,Y])\n    B=max([X,Y])\n    if A==B:\n        print((2*A-2))\n    elif A+1==B:\n        print((2*A-2))\n    else:\n        C=int(math.sqrt(A*B))\n        while(True):\n            if C**2>=A*B:\n                C-=1\n            elif (C+1)**2<A*B:\n                C+=1\n            else:\n                break\n        if C*(C+1)>=A*B:\n            print((2*C-2))\n        else:\n            print((2*C-1))\n", "# coding: utf-8\n# Your code here!\nimport math\ntime = int(input())\n\ndef check (a,b):\n    num = a*b \n    count = 0\n    r = math.sqrt(num)\n    r = int(r)\n    if num == r**2:\n        count = r\n    else:\n        count = r+1\n    if a == b:\n        return count*2-2\n    elif a*b == count**2:\n        return count*2-3\n    elif a*b > count*(count-1):\n        return count*2-3\n    else:\n        return count*2-4\nfor i in range (time):\n    a,b = list(map(int,input().split()))\n    print(check(a,b))\n    \n", "from math import sqrt \nQ = int(input())\ntable=[]\nfor i in range(Q):\n    A,B=map(int,input().split())\n    if A>B:\n        table.append([B,A])\n    else:\n        table.append([A,B])\ndef f(a,b):\n    if a==b:\n        return 2*a-2\n    if a+1==b:\n        return 2*a-2\n    m = int(sqrt(a*b))\n    if m**2 ==a*b:\n        m-=1\n    if m*(m+1) >= a*b:\n        return 2*m -2\n    return 2*m-1\n\nans = []\nfor a,b in table:\n    ans.append(f(a,b))\nprint('\\n'.join(map(str,ans)))", "def isqrt(n):\n\tL = 0\n\tR = n\n\twhile R-L > 2:\n\t\tM = (L+R)//2\n\t\tif M*M==n:\n\t\t\treturn M\n\t\telif M*M < n:\n\t\t\tL = M\n\t\telse:\n\t\t\tR = M \n\tfor ans in range(R,L-1,-1):\n\t\tif ans*ans <= n:\n\t\t\treturn ans\n\tassert(False)\n\treturn -1\ndef count(n,A,B):\n\tans = 0\n\n\tlimit = isqrt(n)\n\t# x = A + 1\n\t# while True:\n\t# \tif x*x <= n:\n\t# \t\tif n//x < B:\n\t# \t\t\tans += 1\n\t# \t\tx += 1\n\t# \telse:\n\t# \t\treturn ans + min(n//x,B-1)\n\treturn max(0,limit-A) + min(n//(limit+1),B-1)\nfor _ in range(int(input())):\n\tA, B = map(int,input().split())\n\tprint(count(A*B-1,A,B)+count(A*B-1,B,A))", "q = int(input())\nfor it in range(q):\n    a, b = list(map(int, input().split()))\n    if a * b <= 2:\n        print((0))\n        continue\n    lo, hi = 1, a*b - 1\n    while lo < hi:\n        x = (lo + hi + 1) // 2\n        #l = list(range(max(1, x // 2 - 2), x // 2 + 3))\n        #r = list(range(max(1, x // 2 - 2), x // 2 + 3))\n        if x % 2 == 0:\n            r1, r2 = x // 2, x // 2 + 1\n            l1, l2 = x // 2, x // 2 + 1\n        else:\n            l, r = (x + 1) // 2, (x + 1) // 2 \n            if a <= l:\n                l += 1\n            if b <= r:\n                r += 1\n            if l * r < a * b:\n                lo = x\n            else:\n                hi = x - 1\n            continue\n        if b <= r1:\n            r1 += 1\n            r2 += 1\n        #elif b >= r2 and b <= x:\n        #    r1 -= 1\n        #    r2 -= 1\n        if a <= l1:\n            l1 += 1\n            l2 += 1\n        #elif a >= l2 and a <= x:\n        #    l1 -= 1\n        #    l2 -= 1\n        if l1 * r2 < a*b and l2 * r1 < a*b:\n            lo = x\n        else:\n            hi = x - 1\n    print(lo)\n", "import math\n\ndef slv(A, B):\n    A, B = (A, B) if A > B else (B, A)\n    \n    s = A * B\n    c = math.floor(math.sqrt(A * B))\n    \n    if c * (c + 1) < s:\n        return 2 * c - 1\n    elif A == B:\n        return 2 * c - 2\n    elif c * c < s:\n        return 2 * c - 2\n    elif c * (c - 1) < s:\n        return 2 * c - 3\n\nQ = int(input())\nfor q in range(Q):\n    A, B = map(int, input().split())\n    print(slv(A, B))", "Q=int(input())\nimport math \nfor i in range(Q):\n  a,b=map(int, input().split())\n  if a==b:\n    print(2*(a-1))\n  else:\n    d=math.isqrt(a*b-1)\n    if d*(d+1)<a*b:\n      print(2*d-1)\n    else:\n      print(2*d-2)", "from math import *\n\nQ = int(input())\nr = []\nfor x in range(Q):\n  A = [int(i) for i in input().split(' ')]\n  x = A[0] * A[1]\n  s = floor(sqrt(x))\n  if s*s == x:\n    if (A[0] != s): r.append(2*s - 3)\n    else: r.append(2*s-2)\n  elif (s*(s+1) < x):\n    r.append(2*s - 1)\n  else: \n    r.append(2*s - 2)\n\nfor i in r:print(i)", "import math\n\nq = int(input())\nfor i in range(q):\n    a, b = list(map(int, input().split()))\n\n    c = int(math.sqrt(a * b))\n    \n    ans = 2 * (c - 1)\n    \n    if (a * b - 1) // c > c:\n        ans += 2\n    elif a * b == c * c:\n        pass\n    else:\n        ans += 1\n\n    if not (a == b == c):\n        ans -= 1\n\n    print(max(0, ans))", "from math import ceil\nq = int(input())\nfor _ in range(q):    \n    a, b = sorted(map(int, input().split()))\n    print(min(b-a, max((ceil((a*b)**0.5-a)-1)*2, (ceil((-(2*a-1)+(1+4*a*b)**0.5)/2)-1)*2-1, 0)) + 2*(a-1))", "# -*- coding: utf-8 -*-\n\"\"\"\nContents   : AtCoder Regular Contest 094 d\u554f\u984c WA\nAuthor     : Kitaura Hiromi\nLastUpdate : 20180414\nSince      : 20180414\nComment    : \u4e0d\u7b49\u5f0f\u3067\u306e\u62bc\u3055\u3048\u8fbc\u307f\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\n\"\"\"\nfrom math import ceil, sqrt\n\nQ = int(input())\nfor i in range(Q):\n    A, B = sorted(map(int, input().split(\" \")))\n    s = A*B\n\n    if A == B:\n        print(2*A - 2)\n    elif A == B + 1:\n        print(2*A - 2)\n    else:\n        C = ceil(sqrt(s)) - 1\n        if C*(C+1) >= s:\n            print(2*C - 2)\n        else:\n            print(2*C - 1)", "import math\n\nn = int(input())\nfor i in range(n):\n  a,b = list(map(int,input().split()))\n  c = a * b\n  r = int(math.sqrt(c))\n  if a == b:\n    print((r - 1) * 2)\n  elif r ** 2 == c:\n    print((r - 1) * 2 - 1)\n  elif r * (r + 1) < c:\n    print((r * 2 - 1))\n  else:\n    print((r - 1) * 2)", "# coding: utf-8\n# Your code here!\nimport math\nQ=int(input())\nfor _ in range(Q):\n    A,B = list(map(int,input().split()))\n    if A<B:\n        A,B=B,A\n    S=A*B\n    a=math.floor(math.sqrt(S-1))\n    if a*a>S-1:\n        a-=1\n#    print(math.sqrt(A*B-1))\n#    print('a A B',a,A,B)\n    if A-B<=1:\n        print((2*(B-1)))\n    elif a*(a+1) < S:\n        print(((B-1)+a+max(0,a-B)))\n    else:\n        print(((B-1)+a+max(0,a-B-1)))\n\n\n\n\n", "def main():\n    n = int(input())\n    for _ in range(n):\n        a, b = map(int, input().split())\n        ref = a * b\n        s = int(ref ** 0.5)\n        ans = 2 * s - 1\n        if s * (s + 1) >= ref:\n            ans -= 1\n        if s * s == ref and a != b:\n            ans -= 1\n        print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "q=int(input())\nfor i in range(q):\n\ta,b=list(map(int,input().split()))\n\tp=int((a*b-1)**0.5)\n\tif p*p>a*b-1:\n\t\tp=p-1\n\tr=p*2-1\n\tif p*p+p>a*b-1:\n\t\tr=r-1\n\tif a==b:\n\t\tr=r+1\n\tprint(r)\n\n", "import math\n\n\ndef slv(A, B):\n    A, B = (A, B) if A > B else (B, A)\n\n    # print(, A, B)\n    s = A * B\n    c = math.floor(math.sqrt(A * B))\n    # print(A, B, c)\n\n    if c * (c + 1) < s:\n        return 2 * c - 1\n    elif A == B:\n        return 2 * c - 2\n    elif c * c < s:\n        return 2 * c - 2\n    elif c * (c - 1) < s:\n        return 2 * c - 3\n\n\n# 1\n# 12\n# 4\n# 11\n# 14\n# 57\n# 31\n# 671644785\n\n\ndef main():\n\n    Q = int(input())\n    for q in range(Q):\n        A, B = map(int, input().split())\n        print(slv(A, B))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "\nn = int(input())\nfor i in range(n):\n    a,b= list(map(int, input().split( )))\n\n    #\u89e3\u8aac\u53c2\u7167\n    #\u4f55\u5ea6\u898b\u3066\u3082\u89e3\u3051\u306a\u3044\n    #\u3069\u3061\u3089\u304b\u306f\u9ad8\u6a4b\u541b\u3088\u308a\u826f\u3044\n    #a<=b\u3068\u3059\u308b\n    #a=b (1~a-1)*2\n    #a<b c**2<ab\u3068\u3059\u308b\n    #c(c+1)>=ab\uff1f2c-2 / 2c-1\n\n    if a==b:\n        print((2*a-2))\n    else:\n        c = int((a*b)**(1/2))\n        if c*c==a*b:\n            c -= 1\n        if c*c+c>=a*b:\n            print((2*c-2))\n        else:\n            print((2*c-1))\n", "from math import sqrt\n\nq = int(input())\nfor _ in range(q):\n    a, b = list(map(int, input().split()))\n    m = a * b\n    s = int(sqrt(m))\n    ans = 2 * s - 1\n    if s * (s + 1) >= m:\n        ans -= 1\n    if s * s == m and a != b:\n        ans -= 1\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\n\ndef solve(a, b):\n    score = a*b\n    l, r = 0, int(1e18)\n    while r-l > 1:\n        k = (l+r) // 2\n        if k**2 < score:\n            l = k\n        else:\n            r = k\n\n    ans1 = l*2 - 1\n    if a <= l:\n        ans1 -= 1\n    if b <= l and a != b:\n        ans1 -= 1\n    \n    ans2 = 0\n    if l*r < a*b:\n        ans2 = l*2\n        if a <= l:\n            ans2 -= 1\n        if b <= l and a+b != l+r:\n            ans2 -= 1\n\n    ans = max(ans1, ans2)\n    return ans\n\n  \ndef main():\n    q = int(input())\n    for i in range(q):\n        a, b = list(map(int, input().split()))\n        ans = solve(a, b)\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import math\n\nQ = int(input())\nQuery = []\nfor i in range(Q):\n    Query.append(tuple(map(int, input().split())))\nfor a, b in Query:\n    sq = int(math.sqrt(a * b))\n    ans = sq * 2 - 1\n    if a == b:\n        ans -= 1\n    elif sq ** 2 == a * b:\n        ans -= 2\n    elif sq * (sq + 1) >= a * b:\n        ans -= 1\n    print(ans)\n", "from math import sqrt\nfor i in range(int(input())):\n    a, b = list(map(int, input().split()))\n    if not a < b:\n        a, b = b, a\n    ans = (a-1)*2 + (a < b-1)\n    c = int(sqrt(a*b))\n    if c**2 == a*b:\n        c -= 1\n    if a < c:\n        if (a*b) % c == 0:\n            d = (a*b)//c - 1\n        else:\n            d = a*b//c\n        ans += (c - a) * 2 - (c==d)\n    print(ans)\n\n\n", "q=int(input())\nfor i in range(q):\n    a,b=list(map(int,input().split()))\n    left=0\n    right=a*b\n    for i in range(100):\n        mid=(left+right)//2\n        if mid*mid<a*b:\n            left=mid\n        else:\n            right=mid\n    ret=left*2\n    if ret==0:\n        print(ret)\n        continue\n    if (a*b-1)//left==left:\n        ret-=1\n    if min(a,b)<=left:\n        ret-=1\n    print(ret)\n", "from math import sqrt\nq = int(input())\nfor _ in range(q):\n    a, b = map(int, input().split())\n    t = a*b\n    s = int(sqrt(t))\n    an = 2 * s - 2\n    if s*s == t:\n        an -= 1\n    if s*(s+1) < t:\n        an += 1\n    if a == b:\n        an += 1\n    print(an)", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\ndef isqrt(x):\n    ok = 0\n    ng = 10**9+1\n    while ng-ok > 1:\n        mid = (ok+ng)//2\n        if mid**2 <= x : ok = mid\n        else: ng = mid\n    return ok\n\ndef solve(a,b):\n    ab = a*b\n    if ab == 1: return 0\n    x = isqrt(a*b-1)\n    if x*(x+1) < ab:\n        res = 2*x\n    else:\n        res = 2*x-1\n    if x >= min(a,b): res -= 1    \n    return res\n\nq = int(readline())\nfor _ in range(q):\n    a,b = list(map(int,readline().split()))\n    print((solve(a,b)))\n", "import sys\n\ninput = sys.stdin.readline\nQ = int(input())\n\ndef max_score(x, a):\n    ret = 0\n    for p in [(x-4), (x-2), x, (x+2), x+4]:\n        p += x%2\n        p //= 2\n        ret = max(ret, (p+(p>=a))*(x-p+1))\n    return ret\n\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    a, b = min(a, b), max(a, b)\n\n    def is_ok(x):\n        return a*b > max_score(x, a)\n\n    def bisect(ng, ok):\n        while (abs(ok - ng) > 1):\n            mid = (ok + ng) // 2\n            if is_ok(mid):\n                ok = mid\n            else:\n                ng = mid\n        return ok\n    ans = bisect(2*b+1, a-1)\n    print(ans)\n", "import sys\n\ndef solve(a, b):\n    ans = 0\n    cur = int(a * b)\n\n    left = 1\n    right = cur + 1\n    while left < right:\n        mid = int((left + right)/2)\n        z = int(mid/2)\n        mx = z * (mid - z)\n        if mx <= cur:\n            ans = mid\n            left = mid + 1\n        else:\n            right = mid\n\n    if int(ans/2) * (ans - int(ans/2)) == cur and a != b:\n        ans -= 1\n    return ans\n\nn = int(sys.stdin.readline())\nfor i in range(n):\n    x = sys.stdin.readline()\n    y = [int(z) for z in x.split()]\n    print((max(int(solve(y[0], y[1]))-2, 0)))\n", "import math\nn = int(input())\nfor i in range(n):\n  ans = 0\n  a,b = map(int,input().split())\n  c = a*b\n  d = int(math.sqrt(c))\n  if d *d == c:\n    d -= 1\n  ans += d*2\n  if d >= a:\n    ans -= 1\n  if d >= b:\n    ans -= 1\n  if (d * (d+1)) >= c:\n    ans -= 1\n  print(ans)", "Q=int(input())\nE=10**(-10)\nfrom math import floor\ndef f(x):\n  if min(abs(int(x)-x),abs(int(x)+1-x))<E:\n    return int(x-1)\n  else:\n    return int(x)\n  \nfor i in range(Q):\n  a,b=list(map(int,input().split()))\n  n=a*b\n  if f(n**(1/2))<a and f(n**(1/2))<b:\n    if f(n**(1/2))*(f(n**(1/2))+1)<n:\n      print((2*f(n**(1/2))))\n    else:\n      print((2*f(n**(1/2))-1))\n  else:\n    if f(n**(1/2))*(f(n**(1/2))+1)<n:\n      print((2*f(n**(1/2))-1))\n    else:\n      print((2*f(n**(1/2))-2))\n", "from math import sqrt\nq = int(input())\nwhile(q):\n    a, b = map(int, input().split())\n    c = a * b\n    d = int(sqrt(c))\n    if(a == b):\n        print((d-1) * 2)\n    elif(d*d == c):\n        print((d-1)*2 - 1)\n    elif(d * (d + 1) < c):\n        print(d*2 - 1)\n    else:\n        print((d-1) * 2)\n    q -= 1", "from math import sqrt \nQ = int(input())\ntable=[]\nfor i in range(Q):\n    A,B=map(int,input().split())\n    if A>B:\n        table.append([B,A])\n    else:\n        table.append([A,B])\ndef f(a,b):\n    if a==b:\n        return 2*a-2\n    if a+1==b:\n        return 2*a-2\n    m = int(sqrt(a*b))\n    if m**2 ==a*b:\n        return 2*m-3\n    if m*(m+1) >= a*b:\n        return 2*m -2\n    return 2*m-1\n\nans = []\nfor a,b in table:\n    ans.append(f(a,b))\nprint('\\n'.join(map(str,ans)))", "Q = int(input())\nfor i in range(Q):\n    a,b = map(int,input().split())\n    if a > b: a,b = b,a\n    if b in (a, a+1):\n        print((a-1)*2)\n        continue\n    c = int((a*b)**0.5)\n    if c*c == a*b:\n        c -= 1\n    ans = 2*c - 2\n    if c*(c+1) < a*b:\n        ans += 1\n    print(ans)", "def check(k, a, b):\n    i = (k-a)//2\n    return -(i+a)*(i-k) < a*b\n\nq = int(input())\nfor i in range(q):\n    a,b = map(int, input().split())\n    if a == b:\n        print(2*a-2)\n        continue\n    a,b = sorted([a,b])\n    ans = a-1\n    left = a\n    right = 10**9\n\n    while right-left > 1:\n        mid = (right+left)//2\n        if check(mid, a, b):\n            left = mid\n        else:\n            right = mid\n    ans += left-1\n    print(ans)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\nimport math\n\ndef solve(a, b):\n    a, b = min(a, b), max(a, b)\n    if a == b:\n        return 2 * a - 2\n\n    c = int(math.sqrt(a * b)) + 2\n    while True:\n        if c * c < a * b:\n            if c * (c + 1) >= a * b:\n                return 2 * c - 2\n            else:\n                return 2 * c - 1\n        else:\n            c -= 1\n\nQ = int(input())\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    print((solve(a, b)))\n\n"]