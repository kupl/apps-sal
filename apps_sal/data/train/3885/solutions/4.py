found = set([5, 55, 77, 181, 313, 434, 505, 545, 595, 636, 818, 1001, 1111, 1441, 1771, 4334, 6446, 17371, 17871, 19691, 21712, 41214, 42924, 44444, 46564, 51015, 65756, 81818, 97679,
             99199, 108801, 127721, 137731, 138831, 139931, 148841, 161161, 166661, 171171, 188881, 191191, 363363, 435534, 444444, 485584, 494494, 525525, 554455, 554455, 629926, 635536,
             646646, 656656, 904409, 923329, 944449, 964469, 972279, 981189, 982289, 1077701, 1224221, 1365631, 1681861, 1690961, 1949491, 1972791, 1992991, 2176712, 2904092, 3015103, 3162613,
             3187813, 3242423, 3628263, 4211124, 4338334, 4424244, 4776774, 5090905, 5258525, 5276725, 5367635, 5479745, 5536355, 5588855, 5603065, 5718175, 5824285, 6106016, 6277726, 6523256,
             6546456, 6780876, 6831386, 6843486, 6844486, 7355537, 8424248, 9051509, 9072709, 9105019, 9313139, 9334339, 9343439, 9343439, 9435349, 9563659, 9793979, 9814189, 9838389, 9940499])


def values(n):
    return sum(i < n for i in found)


# this is how i achieved that :D
'''
#generate palindomre upto 10**digits quickly
def generate_palindromes(digits):
    batches = [None,
               [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
               [0, 11, 22, 33, 44, 55, 66, 77, 88, 99]]

    for n in range(3, digits + 1):
        batch = []
        mid = [batches[k] for k in range(1, len(batches)) if [not k & 1, k & 1][n & 1]]
        for side in range(1, 10):
            for p in mid:
                for inner in p:
                    number = str(side) + str(inner).center(n - 2, '0') + str(side)
                    batch.append(int(number))
        batches.append(batch[:])

    return sum(batches[1:], [])


x = generate_palindromes(7)
x = set(x[:10] + x[11:])

found = []
for i in range(1, 2000):
    sq = i * i
    for j in range(i + 1, 2000):
        sq += j * j
        if sq in x:
            found.append(sq)
'''
