["# cook your dish here\nimport math   \n  \n# Function to find the Largest  \n# Odd Divisor Game to check \n# which player wins  \ndef findWinner(n, k):  \n      \n    cnt = 0;  \n  \n    # Check if n == 1 then  \n    # player 2 will win  \n    if (n == 1): \n        print(\"Grinch\");  \n  \n    # Check if n == 2 or n is odd  \n    elif ((n & 1) or n == 2): \n        print(\"Me\");  \n  \n    else: \n        tmp = n;  \n        val = 1;  \n  \n        # While n is greater than k and  \n        # divisible by 2 keep  \n        # incrementing tha val  \n        while (tmp > k and tmp % 2 == 0):  \n            tmp //= 2;  \n            val *= 2;  \n              \n        # Loop to find greatest  \n        # odd divisor  \n        for i in range(3, int(math.sqrt(tmp)) + 1):  \n            while (tmp % i == 0): \n                cnt += 1;  \n                tmp //= i;  \n          \n        if (tmp > 1): \n            cnt += 1;  \n  \n        # Check if n is a power of 2  \n        if (val == n): \n            print(\"Grinch\");  \n  \n        elif (n / tmp == 2 and cnt == 1): \n            print(\"Grinch\");  \n  \n        # Check if cnt is not one  \n        # then player 1 wins  \n        else: \n            print(\"Me\");  \n              \n# Driver code  \ndef __starting_point():  \n    for i in range(int(input())):\n        n=int(input()) \n        findWinner(n, 1);  \n__starting_point()", "import math  \r\ndef findWinner(n, k):  \r\n      \r\n    cnt = 0;  \r\n  \r\n    if (n == 1): \r\n        print(\"Grinch\");  \r\n  \r\n    elif ((n & 1) or n == 2): \r\n        print(\"Me\");  \r\n  \r\n    else: \r\n        tmp = n;  \r\n        val = 1;  \r\n  \r\n        while (tmp > k and tmp % 2 == 0):  \r\n            tmp //= 2;  \r\n            val *= 2;  \r\n        \r\n        for i in range(3, int(math.sqrt(tmp)) + 1):  \r\n            while (tmp % i == 0): \r\n                cnt += 1;  \r\n                tmp //= i;  \r\n          \r\n        if (tmp > 1): \r\n            cnt += 1;  \r\n  \r\n        if (val == n): \r\n            print(\"Grinch\");  \r\n  \r\n        elif (n / tmp == 2 and cnt == 1): \r\n            print(\"Grinch\");  \r\n        else: \r\n            print(\"Me\");  \r\nfor i in range(int(input())):\r\n    n = int(input())\r\n    findWinner(n,1)", "# cook your dish here\ndef read_i_l(l=False):\n    m = list(map(int, input().strip().split(\" \")))\n    if l:\n        return list(m)\n    else:\n        return m\ndef i():\n    return int(input().strip())\nimport math\n# A function to print all prime factors of  \n# a given number n \ndef nbOddEvenprimeFactors(n): \n    nb_odd=0\n    nb_even=0\n    # Print the number of two's that divide n \n    while n % 2 == 0: \n        n = n / 2\n        nb_even+=1\n          \n    # n must be odd at this point \n    # so a skip of 2 ( i = i + 2) can be used \n    for i in range(3,int(math.sqrt(n))+1,2): \n          \n        # while i divides n , print i ad divide n \n        while n % i== 0: \n            nb_odd+=1\n            n = n / i \n    if n > 2:\n        nb_odd+=1\n    \n    return nb_even, nb_odd              \n \nT = i()\nfor _ in range(T):\n    N = i()\n    if N == 1:\n        print(\"Grinch\")\n    elif N == 2:\n        print(\"Me\")\n    elif N % 2 == 1:\n        print(\"Me\")\n    else:\n        #print(N, nbOddprimeFactors(N))\n        e, o = nbOddEvenprimeFactors(N)\n        if o == 0 or (e == 1 and o == 1):\n            print(\"Grinch\")\n        else:\n            print(\"Me\")", "def is_prime(n):\r\n    return all(n % i for i in range(2, int(n ** 0.5) + 1)) and n >= 2\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n\r\n    if n == 1:\r\n        print('Grinch')\r\n        continue\r\n\r\n    if n == 2 or n % 2:\r\n        print('Me')\r\n        continue\r\n\r\n    if not (n & (n-1)):\r\n        print('Grinch')\r\n        continue\r\n\r\n    if is_prime(n // 2):\r\n        print('Grinch')\r\n        continue\r\n\r\n    print('Me')\r\n", "try:\r\n    import math\r\n    # from collection import Counter\r\n    def findAll(n):\r\n        p = 0\r\n        temp = []\r\n        while n % 2 == 0: \r\n            p += 1  \r\n            n = n / 2\r\n        for i in range(3,int(math.sqrt(n))+1,2): \r\n            while n % i== 0: \r\n                if i == 2:\r\n                    p += 1\r\n                else:\r\n                    temp.append(i) \r\n                n = n / i \r\n        if n > 2: \r\n            temp.append(n)\r\n        \r\n        if p == 1:\r\n            if len(temp) != 1:\r\n                return True\r\n            else:\r\n                return False\r\n        else:\r\n            if len(temp) >= 1:\r\n                return True\r\n            else:\r\n                return False\r\n    t = int(input())\r\n    while(t!=0):\r\n        n = int(input())\r\n        if n%2 != 0 and n != 1:\r\n            print(\"Me\")\r\n        elif n%2 != 0 and n== 1:\r\n            print(\"Grinch\")\r\n        elif n== 2:\r\n            print(\"Me\")\r\n        else:\r\n            if findAll(n) == True:\r\n                print(\"Me\")\r\n            else:\r\n                print(\"Grinch\")\r\n\r\nexcept EOFError:\r\n    print(\" \")\r\n# This code is contributed by chandan_jnu \r\n", "def isprime(n):\r\n    for i in range(2,int(n**(0.5))+1):\r\n        if n%i==0:\r\n            return False\r\n    return True\r\n\r\nt=int(input())\r\nwhile t>0:\r\n    n=int(input())\r\n    x=n & -n\r\n\r\n    if n==2:\r\n        print(\"Me\")\r\n    elif (x==2 and isprime(n//x)) or n==1 or x==n :\r\n        print(\"Grinch\")\r\n    else:\r\n        print(\"Me\")\r\n    t-=1", "# https://www.geeksforgeeks.org/largest-odd-divisor-game-to-check-which-player-wins/\r\nfrom sys import stdin, stdout\r\ndef winner(n, k):\r\n\tcnt = 0; \r\n\tif (n == 1):print(\"Grinch\"); \r\n\telif ((n & 1) or n == 2):print(\"Me\"); \r\n\telse: \r\n\t\ttmp = n; \r\n\t\tval = 1; \r\n\t\twhile (tmp > k and tmp % 2 == 0): \r\n\t\t\ttmp //= 2; \r\n\t\t\tval *= 2; \r\n\t\tfor i in range(3, int(tmp**0.5) + 1): \r\n\t\t\twhile (tmp % i == 0): \r\n\t\t\t\tcnt += 1; \r\n\t\t\t\ttmp //= i; \r\n\t\tif (tmp > 1): \r\n\t\t\tcnt += 1; \r\n\t\tif (val == n): \r\n\t\t\tprint(\"Grinch\"); \r\n\t\telif (n / tmp == 2 and cnt == 1): \r\n\t\t\tprint(\"Grinch\"); \r\n\t\telse: \r\n\t\t\tprint(\"Me\"); \r\ntest = int(stdin.readline())\r\nfor _ in range(test):\r\n    n = int(stdin.readline())\r\n    winner(n, 1)", "# your code goes here\nimport math\ndef isp(n):\n\tm=2\n\tp=int(math.sqrt(n));\n\twhile m<=p:\n\t\tif(n%m==0):\n\t\t\tbreak\n\t\tm+=1\n\treturn p<m\nt=int(input())\nwhile t>0:\n\tn=int(input())\n\tif n==1:\n\t    print(\"Grinch\")\n\telif n==2 or n%2==1:\n\t    print(\"Me\")\n\telse:\n\t\tm=0\n\t\twhile n%2==0:\n\t\t\tm+=1\n\t\t\tn//=2\n\t\tif n==1:\n\t\t\tprint(\"Grinch\")\n\t\telif m==1 and isp(n):\n\t\t\tprint(\"Grinch\")\n\t\telse:\n\t\t\tprint(\"Me\")\n\tt-=1\n\t        \n\t            \n\t            \n\t        \n", "# cook your dish here\nimport math\ndef find(n):\n    cnt=0\n    if n==0:\n        return 1\n    if (n == 1): \n        return 0\n    elif ((n & 1) or n == 2): \n        return 1\n  \n    else: \n        tmp = n;  \n        val = 1;  \n        k=1\n        while (tmp > k and tmp % 2 == 0):  \n            tmp //= 2;  \n            val *= 2\n        for i in range(3, int(math.sqrt(tmp)) + 1):  \n            while (tmp % i == 0): \n                cnt += 1;  \n                tmp //= i;  \n        if (tmp > 1): \n            cnt += 1;  \n        if (val == n): \n            return 0 \n  \n        elif (n // tmp == 2 and cnt == 1): \n            return 0 \n        else: \n            return 1\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    if find(n):\n        print(\"Me\")\n    else:\n        print(\"Grinch\")", "def isprime(n):\r\n    if n<=1:\r\n        return 0\r\n    if n<=3:\r\n        return 1\r\n    if not n%2 or not n%3:\r\n        return 0\r\n    for i in range(5,int(pow(n,0.5))+1,2):\r\n        if not n%i:\r\n            return 0\r\n    return 1\r\ndef abc(n,k):\r\n    if n==0:\r\n        if k%2:\r\n            return True\r\n        return False\r\n    if k%2:\r\n        x=abc(n-1,k+1)\r\n        for j in range(3,n+1,2):\r\n            if not n%j:\r\n                x=x or abc(n//j,k+1)\r\n        return x\r\n    x= abc(n-1,k+1)\r\n    for j in range(3,n+1,2):\r\n        if not n%j:\r\n            x=x and abc(n//j,k+1)\r\n    return x\r\n            \r\n        \r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    if n&(n-1)==0:\r\n        if n==2:\r\n            print('Me')\r\n        else:\r\n            print('Grinch')\r\n    elif not n%2:\r\n        n=n//2\r\n        if isprime(n):\r\n            print('Grinch')\r\n        else:\r\n            print('Me')\r\n    else:\r\n        print('Me')\r\n", "import sys\r\nfrom functools import lru_cache, cmp_to_key\r\nfrom heapq import merge, heapify, heappop, heappush\r\nfrom math import *\r\nfrom collections import defaultdict as dd, deque, Counter as C\r\nfrom itertools import combinations as comb, permutations as perm\r\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\r\nfrom time import perf_counter\r\nfrom fractions import Fraction\r\nimport copy\r\nimport time\r\nstarttime = time.time()\r\nmod = int(pow(10, 9) + 7)\r\nmod2 = 998244353\r\n# from sys import stdin\r\n# input = stdin.readline\r\ndef data(): return sys.stdin.readline().strip()\r\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\r\ndef L(): return list(sp())\r\ndef sl(): return list(ssp())\r\ndef sp(): return map(int, data().split())\r\ndef ssp(): return map(str, data().split())\r\ndef l1d(n, val=0): return [val for i in range(n)]\r\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\r\ntry:\r\n    # sys.setrecursionlimit(int(pow(10,6)))\r\n    sys.stdin = open(\"input.txt\", \"r\")\r\n    # sys.stdout = open(\"../output.txt\", \"w\")\r\nexcept:\r\n    pass\r\ndef pmat(A):\r\n    for ele in A:\r\n        print(*ele,end=\"\\n\")\r\ndef seive():\r\n    prime=[1 for i in range(10**6+1)]\r\n    prime[0]=0\r\n    prime[1]=0\r\n    for i in range(10**6+1):\r\n        if(prime[i]):\r\n            for j in range(2*i,10**6+1,i):\r\n                prime[j]=0\r\n    return prime\r\nprime=seive()\r\nfor _ in range(L()[0]):\r\n    n=L()[0]\r\n    if(n==1):\r\n        print(\"Grinch\")\r\n    elif(n==2):\r\n        print(\"Me\")\r\n    elif(n%2==1):\r\n        print(\"Me\")\r\n    else:\r\n        x=n\r\n        while(x%2==0):\r\n            x//=2\r\n \r\n        if(x==1):\r\n            print(\"Grinch\")\r\n        else:\r\n            if (n//2)%2==0:\r\n                print(\"Me\")\r\n            else:\r\n                k=0\r\n                for i in range(3,10**5):\r\n                    if(prime[i] and x%i==0):\r\n                        while(x%i==0):\r\n                            x//=i\r\n                            k+=1\r\n                if(x!=1):\r\n                    k+=1\r\n                if(k<=1):\r\n                    print(\"Grinch\")\r\n                else:\r\n                    print(\"Me\")\r\n\r\n\r\nendtime = time.time()\r\n# print(f\"Runtime of the program is {endtime - starttime}\")\r\n\r\n", "from math import sqrt\r\n\r\nt = int(input())\r\n\r\nwhile t:\r\n    t -= 1\r\n\r\n    n = int(input())\r\n\r\n    if n == 1: print(\"Grinch\"); \r\n    elif (n & 1) or n == 2: print(\"Me\"); \r\n\r\n    else: \r\n        cnt = 0; \r\n        tmp = n; \r\n        val = 1; \r\n\r\n        while (tmp > 1 and tmp % 2 == 0): \r\n            tmp //= 2; \r\n            val *= 2; \r\n            \r\n        for i in range(3, int(sqrt(tmp)) + 1): \r\n            while (tmp % i == 0): \r\n                cnt += 1; \r\n                tmp //= i; \r\n        \r\n        if tmp > 1: cnt += 1; \r\n\r\n        if val == n: print(\"Grinch\"); \r\n        elif n / tmp == 2 and cnt == 1: print(\"Grinch\"); \r\n        else: print(\"Me\")\r\n", "import math \r\ndef findWinner(n, k): \r\n\t\r\n\tcnt = 0; \r\n\tif (n == 1): \r\n\t\tprint(\"Grinch\"); \r\n\telif ((n & 1) or n == 2): \r\n\t\tprint(\"Me\"); \r\n\r\n\telse: \r\n\t\ttmp = n; \r\n\t\tval = 1; \r\n\t\twhile (tmp > k and tmp % 2 == 0): \r\n\t\t\ttmp //= 2; \r\n\t\t\tval *= 2; \r\n\t\tfor i in range(3, int(math.sqrt(tmp)) + 1): \r\n\t\t\twhile (tmp % i == 0): \r\n\t\t\t\tcnt += 1; \r\n\t\t\t\ttmp //= i; \r\n\t\t\r\n\t\tif (tmp > 1): \r\n\t\t\tcnt += 1; \r\n\r\n\t\tif (val == n): \r\n\t\t\tprint(\"Grinch\"); \r\n\r\n\t\telif (n / tmp == 2 and cnt == 1): \r\n\t\t\tprint(\"Grinch\"); \r\n\t\telse: \r\n\t\t\tprint(\"Me\"); \r\ndef __starting_point(): \r\n\r\n\tfor _ in range(int(input())):\r\n\t    n=int(input())\r\n\t    findWinner(n, 1); \r\n\n__starting_point()"]