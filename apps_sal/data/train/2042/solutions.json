["def main():\n    n, a, b, t = list(map(int, input().split()))\n    a1 = a + 1\n    b += a1\n    l, res = [b if c == \"w\" else a1 for c in input()], []\n    l[0] = x = l[0] - a\n    if t <= x:\n        print(int(t == x))\n        return\n    f = res.append\n    for dr in 0, 1:\n        if dr:\n            l[1:] = l[-1:-n:-1]\n        tot = t\n        for hi, x in enumerate(l):\n            tot -= x\n            if tot < 0:\n                break\n        else:\n            print(n)\n            return\n        f(hi)\n        tot += x\n        hi -= 1\n        tot -= hi * a\n        lo = n\n        while True:\n            while lo > 0 <= tot:\n                lo -= 1\n                tot -= l[lo]\n            f(n + hi - lo)\n            if not (lo and hi):\n                break\n            while tot <= 0 < hi:\n                tot += l[hi] + a\n                hi -= 1\n    print(max(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, a, b, t = list(map(int, input().split()))\n    b += 1\n    l = [b if char == \"w\" else 1 for char in input()]\n    t -= sum(l) - a * (n + 2)\n    hi, n2 = n, n * 2\n    n3 = n2 + 1\n    lo = res = 0\n    l *= 2\n    while lo <= n and hi < n2:\n        t -= l[hi]\n        hi += 1\n        while (hi - lo + (hi if hi < n3 else n3)) * a > t or lo < hi - n:\n            t += l[lo]\n            lo += 1\n            n3 -= 1\n        if res < hi - lo:\n            res = hi - lo\n            if res == n:\n                break\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, a, b, t = list(map(int, input().split()))\n    b += 1\n    l = [b if char == \"w\" else 1 for char in input()]\n    t -= sum(l) - a * (n + 2)\n    hi, n2 = n, n * 2\n    n3 = n2 + 1\n    lo = res = 0\n    l *= 2\n    while lo <= n and hi < n2:\n        t -= l[hi]\n        hi += 1\n        while (hi - lo + (hi if hi < n3 else n3)) * a > t:\n            t += l[lo]\n            lo += 1\n            n3 -= 1\n        if res < hi - lo:\n            res = hi - lo\n            if res >= n:\n                res = n\n                break\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "read = lambda: list(map(int, input().split()))\nper = lambda L, R: R - L - 1 + min(R - n - 1, n - L)\nn, a, b, T = read()\nf = [1 + (i == 'w') * b for i in input()] * 2\nL, R = 0, n\nans = 0\ncur = sum(f) // 2\nwhile L <= n and R < n * 2:\n    cur += f[R]; R += 1\n    while R - L > n or cur + per(L, R) * a > T:\n        cur -= f[L]; L += 1\n    ans = max(ans, R - L)\nprint(ans)\n", "def main():\n    n, a, b, t = list(map(int, input().split()))\n    b += 1\n    l = [b if char == \"w\" else 1 for char in input()]\n    t -= sum(l) - a * (n + 2)\n    hi, n2 = n, n * 2\n    n3 = n2 + 1\n    lo = res = 0\n    l *= 2\n    while lo <= n and hi < n2:\n        t -= l[hi]\n        hi += 1\n        while (hi - lo + (hi if hi < n3 else n3)) * a > t or lo < hi - n:\n            t += l[lo]\n            lo += 1\n            n3 -= 1\n        if res < hi - lo:\n            res = hi - lo\n            if res == n:\n                break\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n\n\n\n# Made By Mostafa_Khaled\n\n__starting_point()", "import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\n\n\"\"\"\nFacts and Data representation\nConstructive? Top bottom up down\n\"\"\"\nn, a, b, T = I()\ns = input()\nA = []\nB = []\ntime = 0\nd = {'h': 1, 'w': b + 1}\nfor i in range(n):\n  time += d[s[i]]\n  A.append(time)\n  time += a\ntime = 0\nfor i in range(n - 1, 0, -1):\n  time += a\n  time += d[s[i]]\n  B.append(time)\n\nans = 0\n# print(A, B)\nfor i in range(n):\n  time = A[i]\n  if time > T:\n    break\n  l = br(B, T - time - i * a)\n  ans = max(ans, i + 1 + l)\n\nB = [A[0]] + [A[0] + i for i in B]\nA = [A[i] - (A[0]) for i in range(1, n)]  \n# print(A, B)\n\nfor i in range(n):\n  time = B[i]\n  if time > T:\n    break\n  l = br(A, T - time - i * a)\n  ans = max(ans, i + 1 + l)\nprint(min(n, ans))"]