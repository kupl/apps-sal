["def main():\n    t = int(input())\n    for z in range(t):\n        n, k, d1, d2 = map(int, input().split())\n        if n % 3 != 0:\n            print('no')\n            continue\n        f = 0\n        for i in [-1, +1]:\n            for j in [-1, +1]:\n                w = (k - i * d1 - j * d2)\n                if f == 0 and (w % 3 == 0) and (n//3)>=(w//3)>=0 and (n//3)>=(w//3 + i * d1)>=0 and (n//3)>=(w//3 + j * d2)>=0:\n                    print('yes')\n                    f = 1\n        if f == 0:\n            print('no')\nmain()", "import itertools\nimport sys\n\n\n'''\nw1 - w2 = d1\nw2 - w3 = d2\nw1 + w2 + w3 = k\n\nw1 = w2 + d1\nw3 = w2 - d2\nw2 + d1 + w2 + w2 - d2 = k\n\nw2 = (k - d1 + d2) / 3\nw1 = w2 + d1\nw3 = w2 - d2\n'''\nfor _ in range(int(input())):\n\n    n, k, d1, d2 = list(map(int, str.split(sys.stdin.readline())))\n    for s1, s2 in itertools.product((1, -1), repeat=2):\n\n        cd1, cd2 = d1 * s1, d2 * s2\n        w2 = k - cd1 + cd2\n        if w2 % 3 != 0:\n\n            continue\n\n        w2 //= 3\n        w1 = w2 + cd1\n        w3 = w2 - cd2\n        if w1 >= 0 and w2 >= 0 and w3 >= 0:\n\n            d = n - k\n            mw = max((w1, w2, w3))\n            nw = 3 * mw - w1 - w2 - w3\n            if d >= nw and (d - nw) % 3 == 0:\n\n                print(\"yes\")\n                break\n\n    else:\n\n        print(\"no\")\n", "def f1(d1, d2, n, k):\n    a1 = 2 * d1 + d2 + k\n    a2 = -d1 + d2 + k\n    a3 = -d1 - (2 * d2) + k\n    if (a1 < 0 or a2 < 0 or a3 < 0 or a1 % 3 or a2 % 3 or a2 % 3):\n        return False\n    else:\n        a1 //= 3\n        a2 //= 3 \n        a3 //= 3\n        a1, a2, a3 = tuple(sorted([a1, a2, a3])[::-1])\n        if (a2 - a3 + 2 * (a1 - a2)) > n - k:\n            return False\n        else:\n            return True\n\ndef f2(d1, d2, n, k):\n    a1 = -2 * d1 + d2 + k\n    a2 = d1 + d2 + k\n    a3 = d1 - (2 * d2) + k\n    if (a1 < 0 or a2 < 0 or a3 < 0 or a1 % 3 or a2 % 3 or a2 % 3):\n        return False\n    else:\n        a1 //= 3\n        a2 //= 3 \n        a3 //= 3\n        a1, a2, a3 = tuple(sorted([a1, a2, a3])[::-1])\n        if (a2 - a3 + 2 * (a1 - a2)) > n - k:\n            return False\n        else:\n            return True\n\ndef f3(d1, d2, n, k):\n    a1 = 2 * d1 - d2 + k\n    a2 = -d1 - d2 + k\n    a3 = -d1 + (2 * d2) + k\n    if (a1 < 0 or a2 < 0 or a3 < 0 or a1 % 3 or a2 % 3 or a2 % 3):\n        return False\n    else:\n        a1 //= 3\n        a2 //= 3 \n        a3 //= 3\n        a1, a2, a3 = tuple(sorted([a1, a2, a3])[::-1])\n        if (a2 - a3 + 2 * (a1 - a2)) > n - k:\n            return False\n        else:\n            return True\n\ndef f4(d1, d2, n, k):\n    a1 = -2 * d1 - d2 + k\n    a2 = d1 - d2 + k\n    a3 = d1 + (2 * d2) + k\n    if (a1 < 0 or a2 < 0 or a3 < 0 or a1 % 3 or a2 % 3 or a2 % 3):\n        return False\n    else:\n        a1 //= 3\n        a2 //= 3 \n        a3 //= 3\n        a1, a2, a3 = tuple(sorted([a1, a2, a3])[::-1])\n        if (a2 - a3 + 2 * (a1 - a2)) > n - k:\n            return False\n        else:\n            return True\n\n\na = []\nz = int(input())\n\nfor i in range(z):\n    n, k, d1, d2 = map(int, input().split())\n    v1 = f1(d1, d2, n, k)\n    v2 = f2(d1, d2, n, k)\n    v3 = f3(d1, d2, n, k)\n    v4 = f4(d1, d2, n, k)\n    \n        \n    if (v1 or v2 or v3 or v4) and n % 3 == 0:\n        a.append('yes')\n    else:\n        a.append('no')\n    \n    \nprint(*a, sep = '\\n')", "q = int(input())\n\nwhile q > 0:\n    n, k, d1, d2 = list(map(int, input().split()))\n    if d1 > d2:\n        d1, d2 = d2, d1\n    if k - 2 * d1 - d2 >= 0 and (k - 2 * d1 - d2) % 3 == 0 and \\\n            (n - k) - d1 - 2 * d2 >= 0 and ((n - k) - d1 - 2 * d2) % 3 == 0:\n        print('yes')\n    elif k - 2 * d2 - d1 >= 0 and (k - 2 * d2 - d1) % 3 == 0 and \\\n            (n - k) - d2 - 2 * d1 >= 0 and ((n - k) - d2 - 2 * d1) % 3 == 0:\n        print('yes')\n    elif k - 2 * d2 + d1 >= 0 and (k - 2 * d2 + d1) % 3 == 0 and \\\n            (n - k) - d2 - d1 >= 0 and ((n - k) - d2 - d1) % 3 == 0:\n        print('yes')\n    elif k - d1 - d2 >= 0 and (k - d1 - d2) % 3 == 0 and \\\n            (n - k) - 2 * d2 + d1 >= 0 and ((n - k) - 2 * d2 + d1) % 3 == 0:\n        print('yes')\n    else:\n        print('no')\n    q -= 1\n", "t = int(input())\nfor l in range(t):\n    n, k, d1, d2 = map(int, input().split())\n    if n % 3 != 0:\n        print(\"no\")\n        continue\n    n = n // 3\n    ok = False\n    for i in [-1, 1]:\n        for j in [-1, 1]:\n            tmp = k;\n            tmp -= d1 * i\n            tmp -= d1 * i\n            tmp -= d2 * j\n            if tmp % 3 != 0: continue\n            if tmp < 0: continue\n            tmp = tmp // 3\n            x1 = tmp\n            x2 = x1 + d1 * i\n            x3 = x2 + d2 * j\n            if x1 < 0 or x2 < 0 or x3 < 0: continue\n            if x1 <= n and x2 <= n and x3 <= n:\n                ok = True\n                break\n    if ok: print(\"yes\")\n    else: print(\"no\")", "t = int(input())\nfor _ in range(t):\n    n, k, d1, d2 = map(int, input().split())\n    if n % 3 != 0:\n        print(\"no\")\n        continue\n    n = n // 3\n    ok = False\n    for i in [-1, 1]:\n        for j in [-1, 1]:\n            tmp = k;\n            tmp -= d1 * i\n            tmp -= d1 * i\n            tmp -= d2 * j\n            if tmp % 3 != 0: continue\n            if tmp < 0: continue\n            tmp = tmp // 3\n            x1 = tmp\n            x2 = x1 + d1 * i\n            x3 = x2 + d2 * j\n            if x1 < 0 or x2 < 0 or x3 < 0: continue\n            if x1 <= n and x2 <= n and x3 <= n:\n                ok = True\n                break\n    if ok: print(\"yes\")\n    else: print(\"no\")", "def doall():\n    t = int(input())\n    def solve(n, k, d1, d2):\n        if n % 3 == 0:\n            r = n - k\n            a = [[0, d1, d1 + d2],\n                 [0, d1, d1 - d2],\n                 [0, -d1, -d1 + d2],\n                 [0, -d1, -d1 - d2]]\n            for now in a:\n                mn = min(now)\n                sumn = sum(now)\n                sumb = sumn - 3 * min(now)\n                if k < sumb or (k - sumb) % 3 != 0:\n                    continue\n                w = max(now)\n                tmp = 3 * w - sumn\n                if tmp <= r and (r - tmp) % 3 == 0:\n                    \n                    return True\n        return False\n    ans = []\n    for i in range(t):\n        n, k, d1, d2 = list(map(int, input().split()))\n        if solve(n, k, d1, d2):\n            ans.append('yes')\n        else:\n            ans.append('no')\n    print('\\n'.join(ans))\n                \ndoall()", "def f(x, y, a, b): return x > a or y > b or (a - x) % 3 or (b - y) % 3\ndef g(x, y, a, b): return f(x, y, a, b) and f(x, y, b, a)\nfor i in range(int(input())):\n    n, u, a, b = map(int, input().split())\n    v, s, t = n - u, a + b, 2 * b - a if b > a else 2 * a - b\n    print('no' if g(s, t, u, v) and g(s + a, s + b, u, v) else 'yes')", "for i in range(int(input())):\n    n, u, a, b = map(int, input().split())\n    if n % 3: print('no')\n    else:\n        if a > b: a, b = b, a\n        p, q = a + b, 2 * b - a\n        s, r, v = p + a, p + b, n - u\n        t = [(p, q), (q, p), (s, r), (r, s)]\n        print('no' if all(x > u or (x - u) % 3 or y > v or (y - v) % 3 for x, y in t) else 'yes')", "read = lambda: list(map(int, input().split()))\nf = lambda x, y, a, b: x > a or y > b or (a - x) % 3 or (b - y) % 3\ng = lambda x, y, a, b: f(x, y, a, b) and f(x, y, b, a)\nt = int(input())\nfor i in range(t):\n    n, k, d1, d2 = read()\n    r = n - k\n    d = d1 + d2\n    p = 2 * d2 - d1 if d2 > d1 else 2 * d1 - d2\n    print('no' if g(d, p, k, r) and g(d + d1, d + d2, k, r) else 'yes')\n", "t=int(input())\n\nfor j in range(t):\n  inp=[int(n) for n in input().split()]\n  n=inp[0]\n  k=inp[1]\n  d1=inp[2]\n  d2=inp[3]\n  \n  if d2<d1:\n    s=d1\n    d1=d2\n    d2=s\n  \n  if ((k>=2*d1+d2) and ((k-2*d1-d2)%3==0) and (n-k>=d1+2*d2) and ((n-k-d1-2*d2)%3==0)):\n    print('yes')\n  elif ((k>=2*d2+d1) and ((k-2*d2-d1)%3==0) and (n-k>=d2+2*d1) and ((n-k-d2-2*d1)%3==0)):\n    print('yes')\n  elif ((k>=d1+d2) and ((k-d1-d2)%3==0) and (n-k>=2*d2-d1) and ((n-k-2*d2+d1)%3==0)):\n    print('yes')\n  elif ((k>=2*d2-d1) and ((k-2*d2+d1)%3==0) and (n-k>=d1+d2) and ((n-k-d1-d2)%3==0)):\n    print('yes')\n  else:\n    print('no')", "from sys import *\n\nt=int(stdin.readline())\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    vars=[[2*d1+d2,2*d2+d1],[2*d2+d1,2*d1+d2],[2*max(d1,d2)-min(d1,d2),d1+d2], [d1+d2,2*max(d1,d2)-min(d1,d2)]]\n    y=False\n    for i in vars:\n        if i[0]<=k and i[0]%3==k%3 and n-k-i[1]>=0 and (n-i[1]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break\n    if not y:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    vars=((2*d1+d2,2*d2+d1),(2*d2+d1,2*d1+d2),(2*max(d1,d2)-min(d1,d2),d1+d2), (d1+d2,2*max(d1,d2)-min(d1,d2)))\n    y=False\n    for i in vars:\n        if i[0]<=k and i[0]%3==k%3 and n-k-i[1]>=0 and (n-i[1]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break\n    if not y:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    vars=((2*d1+d2,2*d2+d1),(2*max(d1,d2)-min(d1,d2),d1+d2))\n    y=False\n    for i in vars:\n        if i[0]<=k and i[0]%3==k%3 and n-k-i[1]>=0 and (n-i[1]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break\n        if i[1]<=k and i[1]%3==k%3 and n-k-i[0]>=0 and (n-i[0]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break        \n    if not y:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    vars=((2*d1+d2,2*d2+d1),(2*max(d1,d2)-min(d1,d2),d1+d2))\n    y=False\n    for i in vars:\n        if i[0]<=k and i[0]%3==k%3 and n-k-i[1]>=0 and (n-i[1]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break\n        if i[1]<=k and i[1]%3==k%3 and n-k-i[0]>=0 and (n-i[0]-k)%3==0:\n            print(\"yes\")\n            y=True\n            break        \n    if not y:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    if (k-2*d1-d2>=0 and (k-2*d1-d2)%3==0 and n-2*d2-d1-k>=0 and (n-2*d2-d1-k)%3==0) or (k-2*d2-d1>=0 and (k-2*d2-d1)%3==0 and n-2*d1-d2-k>=0 and (n-2*d1-d2-k)%3==0) or (k-d1-d2>=0 and (k-d1-d2)%3==0 and n-2*max(d1,d2)+min(d1,d2)-k>=0 and (n-2*max(d1,d2)+min(d1,d2)-k)%3==0) or (k-2*max(d1,d2)+min(d1,d2)>=0 and (k-2*max(d1,d2)+min(d1,d2))%3==0 and n-d1-d2-k>=0 and (n-d1-d2-k)%3==0):\n        print(\"yes\")\n    else:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nmm=0\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    mm=2*max(d1,d2)-min(d1,d2)\n    if (k-2*d1-d2>=0 and (k-2*d1-d2)%3==0 and n-2*d2-d1-k>=0 and (n-2*d2-d1-k)%3==0) or (k-2*d2-d1>=0 and (k-2*d2-d1)%3==0 and n-2*d1-d2-k>=0 and (n-2*d1-d2-k)%3==0) or (k-d1-d2>=0 and (k-d1-d2)%3==0 and n-mm-k>=0 and (n-mm-k)%3==0) or (k-mm>=0 and (k-mm)%3==0 and n-d1-d2-k>=0 and (n-d1-d2-k)%3==0):\n        print(\"yes\")\n    else:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nmm,mmm,mmmm,m=0,0,0,0\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    m=d1+d2\n    mm=2*max(d1,d2)-min(d1,d2)\n    mmm=2*d1+d2\n    mmmm=2*d2+d1\n    if (k-mmm>=0 and (k-mmm)%3==0 and n-mmmm-k>=0 and (n-mmmm-k)%3==0) or (k-mmmm>=0 and (k-mmmm)%3==0 and n-mmm-k>=0 and (n-mmm-k)%3==0) or (k-m>=0 and (k-m)%3==0 and n-mm-k>=0 and (n-mm-k)%3==0) or (k-mm>=0 and (k-mm)%3==0 and n-m-k>=0 and (n-m-k)%3==0):\n        print(\"yes\")\n    else:\n        print(\"no\")", "t=int(input())\nfor i in range(t):\n    n,k,d1,d2=map(int,input().split())\n    m=d1+d2\n    mm=2*max(d1,d2)-min(d1,d2)\n    mmm=2*d1+d2\n    mmmm=2*d2+d1\n    if (k-mmm>=0 and (k-mmm)%3==0 and n-mmmm-k>=0 and (n-mmmm-k)%3==0) or (k-mmmm>=0 and (k-mmmm)%3==0 and n-mmm-k>=0 and (n-mmm-k)%3==0) or (k-m>=0 and (k-m)%3==0 and n-mm-k>=0 and (n-mm-k)%3==0) or (k-mm>=0 and (k-mm)%3==0 and n-m-k>=0 and (n-m-k)%3==0):\n        print(\"yes\")\n    else:\n        print(\"no\")", "from sys import *\n\nt=int(stdin.readline())\nmm=0\nfor i in range(t):\n    n,k,d1,d2=(int(z) for z in stdin.readline().split())\n    mm=2*max(d1,d2)-min(d1,d2)\n    if (k-2*d1-d2>=0 and (k-2*d1-d2)%3==0 and n-2*d2-d1-k>=0 and (n-2*d2-d1-k)%3==0) or (k-2*d2-d1>=0 and (k-2*d2-d1)%3==0 and n-2*d1-d2-k>=0 and (n-2*d1-d2-k)%3==0) or (k-d1-d2>=0 and (k-d1-d2)%3==0 and n-mm-k>=0 and (n-mm-k)%3==0) or (k-mm>=0 and (k-mm)%3==0 and n-d1-d2-k>=0 and (n-d1-d2-k)%3==0):\n        print(\"yes\")\n    else:\n        print(\"no\")", "import sys\ndef check(a, b, c, n, k):\n\tneed = n // 3\n\treturn ((n - k) == (need - a) + (need - b) + (need - c) and a <= need and b <= need and c <= need and a >= 0 and b >= 0 and c >= 0)\n\nfor tc in range(int(sys.stdin.readline())):\n\tn,k,d1,d2 = map(int, sys.stdin.readline().split())\n\tif n % 3 != 0:\n\t\tprint('no')\n\t\tcontinue\n\n\tans = False\n\t#case++\n\ta = k - 2 * d1 - d2\n\tif a % 3 == 0:\n\t\ta //= 3\n\t\tans |= check(a, a + d1, a + d1 + d2, n ,k)\n\n\t#case+-\n\ta = k + d2 - 2 * d1\n\tif a % 3 == 0:\n\t\ta //= 3\n\t\tans |= check(a, a + d1, a + d1 - d2, n, k)\n\n\t#case--\n\ta = k + 2 * d1 + d2\n\tif a % 3 == 0:\n\t\ta //= 3\n\t\tans |= check(a, a - d1, a - d1 - d2, n, k)\n\n\t#case-+\n\ta = k - d2 + 2 * d1\n\tif a % 3 == 0:\n\t\ta //= 3\n\t\tans |= check(a, a - d1, a - d1 + d2, n, k)\n\n\tprint('yes' if ans else 'no')", "for i in range(int(input())):\n\n    n, u, a, b = list(map(int, input().split()))\n\n    if n % 3: print('no')\n\n    else:\n\n        if a > b: a, b = b, a\n\n        p, q = a + b, 2 * b - a\n\n        s, r, v = p + a, p + b, n - u\n\n        t = [(p, q), (q, p), (s, r), (r, s)]\n\n        print('no' if all(x > u or (x - u) % 3 or y > v or (y - v) % 3 for x, y in t) else 'yes')\n\n\n\n# Made By Mostafa_Khaled\n", "t = int(input())\nret = []\nwhile t>0:\n    t-=1\n    n,k,d1,d2 = map(int,input().split())\n\n    # ans = []\n\n    y1 = (k-(d1-d2))//3\n    x1 = y1+d1\n    z1 = y1-d2\n    # ans = [y1,z1,x1]\n    # ans = sorted(ans)\n    # ans1 = 2*ans[2]-(ans[0]+ans[1])\n    ans1 = 2*x1-(z1+y1)\n    if x1+y1+z1==k and min(z1,y1)>=0 and ans1<=n-k and (n-k-ans1)%3==0:\n        ret.append('yes')\n        continue\n    \n    # ans = []\n\n    y1 = (k-(d1+d2))//3\n    x1 = y1+d1\n    z1 = y1+d2\n    if d1>=d2:\n        # ans = [y1,z1,x1]\n        ans1 = 2*x1-(y1+z1)\n    else:\n        # ans = [y1,x1,z1]\n        ans1 = 2*z1-(y1+x1)\n    # ans = sorted(ans)\n    # ans1 = 2*ans[2]-(ans[0]+ans[1])\n    if x1+y1+z1==k and y1>=0 and ans1<=n-k and (n-k-ans1)%3==0:\n        ret.append('yes')\n        continue\n    \n    y1 = (k-(d2-d1))//3\n    x1 = y1-d1\n    z1 = y1+d2\n    # ans = [x1,y1,z1]\n    # ans = sorted(ans)\n    ans1 = 2*z1-(x1+y1)\n    if x1+y1+z1==k and min(x1,y1)>=0 and ans1<=n-k and (n-k-ans1)%3==0:\n        ret.append('yes')\n        continue\n    \n    y1 = (k+(d2+d1))//3\n    x1 = y1-d1\n    z1 = y1-d2\n    # ans = [x1,y1,z1]\n    # ans = sorted(ans)\n    ans1 = 2*y1-(x1+z1)\n    if x1+y1+z1==k and min(x1,z1)>=0 and ans1<=n-k and (n-k-ans1)%3==0:\n        ret.append('yes')\n        continue\n\n\n\n\n\n    # if d1>=d2:\n    #     ans.append(2*d1-d2)\n    #     ans.append(d2+2*(d1-d2))\n    # else:\n    #     ans.append(2*d2-d1)\n    #     ans.append(d1+2*(d2-d1))\n\n    # ans+=[d1+2*d2,d2+2*d1,d1+d2]\n    # done = False\n    # print(ans)\n    # for a in ans:\n    #     # if (a==0 and (n-k)%3==0) or (a!=0 and (n-k)//a>1 and (n-k)%a==0):\n    #     if (a<=n-k) and (n-k-a)%3==0:\n    #         print(a)\n    #         done = True\n    #         break\n\n    # if done:\n    #     print('yes')\n    # else:\n    ret.append('no')\n\nprint(*ret, sep = '\\n')\n", "import sys\nlines = sys.stdin.readlines()\n\n'''\n(n, p) = map(int, lines[0].strip().split(\" \"))\nranges = []\nfor i in range(1, n+1):\n    (l, r) = map(int, lines[i].strip().split(\" \"))\n    ranges.append((l,r))\n\nprobs = []\nfor lr in ranges:\n    poss = lr[1]//p - (lr[0]-1)//p\n    probs.append(poss/(lr[1]-lr[0]+1))\n\nres = 0\nfor i in range(n):\n    res += probs[i] + probs[i-1] - probs[i] * probs[i-1]\nprint(res * 2000)\n'''\nN = int(lines[0].strip())\nfor i in range(1, 1+N):\n    (n, k, d1, d2) = map(int, lines[i].strip().split(\" \"))\n    if n % 3 != 0: print(\"no\"); continue\n\n    def solve(da, db):\n        tmp = k - da - db\n        if tmp % 3 != 0: return True\n        b = tmp // 3\n        a = b + da\n        c = b + db\n        if min(a,b,c) < 0: return True\n        if n//3 >= max(a,b,c): return False\n        else: return True\n        \n    cannot = True\n    if cannot: cannot = solve(d1, d2)\n    if cannot: cannot = solve(d1, -d2)\n    if cannot: cannot = solve(-d1, d2)\n    if cannot: cannot = solve(-d1, -d2)\n    if cannot: print(\"no\")\n    else: print(\"yes\")"]