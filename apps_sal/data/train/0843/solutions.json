["t=int(input())\nfor _ in range(t):\n n=int(input())\n \n grid=[]\n for _ in range(n):\n  temp=[]\n  temp=list(map(int,input().strip().split()))\n  temp.sort()\n  grid.append(temp)\n  \n \n curr=max(grid[n-1])\n total=curr\n for i in range(n-2,0-1,-1):\n  flag=0\n  for j in range(n-1,0-1,-1):\n   if grid[i][j]<curr:\n    flag=1\n    curr=grid[i][j]\n    total+=curr\n    break\n   \n  if flag==0:\n   total=-1\n   break\n \n print(total)\n \n \n    \n   \n   \n  \n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n mat=[]\n for x in range(n):\n  mat.append([int(i) for i in input().split()])\n ans=[0]*n\n flag=True\n ans[-1] = max(mat[-1])\n for i in range(n-2,-1,-1):\n  for ele in mat[i]:\n   if ele<ans[i+1]:\n    ans[i]=max(ans[i],ele)\n  if ans[i]==0:\n   flag=False\n   break\n if flag:\n  print(sum(ans))\n else:\n  print(-1)", "# cook your dish here\nt=int(input())\nfor cases in range(t):\n n=int(input())\n lis=[]\n for i in range(n):\n  lis1=sorted(list(map(int,input().split())))\n  lis.append(lis1)\n summ=lis[-1][-1]\n maxx=summ\n c=1\n for i in range(n-2,-1,-1):\n  for j in range(n-1,-1,-1):\n   if lis[i][j]<maxx:\n    maxx=lis[i][j]\n    c+=1\n    summ+=lis[i][j]\n    break\n if c==n:\n  print(summ)\n else:\n  print(-1)\n print()\n  \n", "def largest_smaller_than(a,N,key):\n start = 0\n end = N\n\n ans = -1\n\n while(end>=start):\n  mid = (start+end)//2\n  if(mid>=N or mid<0):\n   break\n  elif(a[mid]<key):\n   ans = mid\n   start = mid+1\n  elif(a[mid]>=key):\n   end = mid-1\n if(ans!=-1):\n  return a[ans]\n else:\n  return -1\n\nT = int(input())\nans = []\n\nfor _ in range(T):\n N = int(input())\n\n A = []\n for i in range(N):\n  x = [int(i) for i in input().split()]\n  A.append(sorted(x))\n\n\n start = float('inf')\n sum = 0\n for i in range(N-1,-1,-1):\n  start = largest_smaller_than(A[i],N,start)\n  if(start==-1):\n   sum = -1\n   break\n  sum += start\n ans.append(sum)\n\nfor i in ans:\n print(i)\n", "try:\n for i in range(int(input())):\n  nm=int(input())\n  lst=[]\n  for j in range(nm):\n   lst.append(sorted([int(x) for x in input().split()]))\n  \n  sm=lst[-1][-1]\n  mx=lst[-1][-1]\n  c=1\n  for m in range(nm-2,-1,-1):\n   for n in range(nm-1,-1,-1):\n    if lst[m][n]<mx:\n     sm+=lst[m][n]\n     mx=lst[m][n]\n     c+=1\n     break\n  if c==nm:\n   print(sm)\n  else:\n   print(-1)\n   \nexcept:\n pass", "for i in range(int(input())):\n nm=int(input())\n lst=[]\n for j in range(nm):\n  lst.append(sorted([int(x) for x in input().split()]))\n \n sm=lst[-1][-1]\n mx=lst[-1][-1]\n c=1\n for m in range(nm-2,-1,-1):\n  for n in range(nm-1,-1,-1):\n   if lst[m][n]<mx:\n    sm+=lst[m][n]\n    mx=lst[m][n]\n    c+=1\n    break\n if c==nm:\n  print(sm)\n else:\n  print(-1)", "for _ in range(int(input())):\n n = int(input())\n s = 0\n m = []\n \n for i in range(n):     \n  l = []\n  l = [int(i) for i in input().split()] \n  l.sort()\n  m.append(l)\n \n answer = m[n-1][n-1]; last = m[n-1][n-1]\n \n s = 1\n \n for i in range(n-2,-1,-1):\n  for j in range(n-1,-1,-1):\n   if m[i][j]<last:\n    answer += m[i][j]\n    last = m[i][j]\n    s+=1\n    break\n \n if s==n:print(answer)\n else:print(-1)", "for _ in range(int(input())):\n n = int(input())\n s = 0\n mat = []\n \n for i in range(n):     \n  a = []\n  a = [int(i) for i in input().split()] \n  a.sort()\n  mat.append(a)\n \n ans = mat[n-1][n-1]; last = mat[n-1][n-1]\n \n s = 1\n \n for i in range(n-2,-1,-1):\n  for j in range(n-1,-1,-1):\n   if mat[i][j]<last:\n    ans += mat[i][j]\n    last = mat[i][j]\n    s+=1\n    break\n \n if s==n:print(ans)\n else:print(-1)", "# cook your dish here\nfor _ in range(int(input())):\n a=[]\n n=int(input())\n for t in range(n):\n  p=list(map(int,input().split()))\n  a.append(p)\n c=[0]*n\n c[n-1]=max(a[n-1])\n f=0\n s=0\n for i in range(n-2,-1,-1):\n  c[i]=0\n  for j in range(n):\n   if a[i][j]<c[i+1]:\n    c[i]=max(c[i],a[i][j])\n  if c[i]==0:\n   f=1 \n   break\n  else:\n   s+=c[i] \n \n if f==1:\n  print(-1)\n else:\n  print(s+c[n-1])\n", "# cook your dish here\nfor _ in range(int(input())):\n a=[]\n n=int(input())\n for t in range(n):\n  p=list(map(int,input().split()))\n  a.append(p)\n c=[0]*n\n c[n-1]=max(a[n-1])\n f=0\n s=0\n for i in range(n-2,-1,-1):\n  c[i]=0\n  for j in range(n):\n   if a[i][j]<c[i+1]:\n    c[i]=max(c[i],a[i][j])\n  if c[i]==0:\n   f=1 \n   break\n  else:\n   s+=c[i] \n \n if f==1:\n  print(-1)\n else:\n  print(s+c[n-1])\n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=[]\n for i in range(n):\n  l1 = list(map(int, input().split()))\n  l1.sort()\n  l.append(l1)\n\n ans=l1[-1]\n p=ans\n\n for i in range(n-2, -1, -1):\n  flag=0\n  for j in range(n-1, -1, -1):\n   if l[i][j]<p:\n    p=l[i][j]\n    ans+=p \n    flag=1 \n    break\n   \n  if flag==0:\n   print(-1)\n   flag=2 \n   break\n \n if flag!=2:\n  print(ans)", "for i in range(int(input())):\n n=int(input())\n b=[]\n counter=0\n for j in range(n):\n  b.append(list(map(int,input().split())))\n c=max(b[-1])\n sum=c\n for k in range(1,n):\n  for x in b[-k-1]:\n   if(x<c and x>counter):\n    counter=x\n  if(counter==0):\n   print(-1)\n   sum=0\n   break\n  else:\n   sum=sum+counter\n   c=counter\n   counter=0\n if(sum!=0):\n  print(sum)\n", "# cook your dish here\ndef maxScore():\n for t in range(int(input())):\n  n=int(input())\n  l=[]\n  for i in range(n):\n   temp=sorted([int(x) for x in input().split()])\n   l.append(temp)\n  s=l[n-1][n-1]\n  cdt_o=l[n-1][n-1]\n  for i in range(n-2,-1,-1):\n   success=1\n   for j in range(n-1,-1,-1):\n    cdt_t=l[i][j]\n    if cdt_t<cdt_o:\n     s+=cdt_t\n     cdt_o=cdt_t\n     break\n    elif j==0:\n     success=0\n     break\n    elif cdt_t>=cdt_o:\n     continue\n   if success==0:\n    break\n  if success==0:\n   print(-1)\n  else:\n   print(s)\nmaxScore()\n", "def score(qn):\n \n import math\n maximum = math.inf\n score = 0\n for i in reversed(list(range(0, len(qn)))):\n  \n  temp = -1\n  for j in qn[i]:\n   \n   if j > temp and j < maximum:\n    temp = j\n  if temp == -1:\n   return -1\n  else:\n   score += temp\n   maximum = temp\n return score\n\n\nimport sys\nc = 0\nfor line in sys.stdin:\n if c == 0:\n  t = int(line.strip())\n  c = 2\n else:\n  if c%2 == 0:\n   new = line.split()\n   N = int(new[0].strip())\n   qn = []\n   c = 5\n   count = 1\n  elif c ==5:\n   a = list(map(int, line.split()))\n   \n   qn.append(a)\n   count += 1\n   if count == N+1:\n    c = 2\n    print(score(qn))\n", "testCases = int(input())\nlines = 0\nfor _ in range(testCases):\n lines = int(input())\n arr = []\n for _ in range(lines):\n  arr.append(sorted(list(map(int,input().split())),reverse=True))\n\n maximum = max(arr[lines-1])\n choosen = maximum\n bool = True\n for index in range(lines-2,-1,-1):\n  secondBool = True\n  for j in range(lines):\n   if arr[index][j] < maximum:\n    choosen += arr[index][j]\n    maximum = arr[index][j]\n    secondBool = False\n    break\n  if secondBool == True:\n   bool = False\n   break\n if bool == True:\n  print(choosen)\n else:\n  print(-1)\n", "# cook your dish here\ntest=int(input())\nfor _ in range(test):\n n=int(input())\n ls=[]\n for _ in range(n):\n  ls.append(sorted(list(map(int,input().split())),reverse=True))\n m=max(ls[n-1])\n s=m\n d=0\n for i in range(n-2,-1,-1):\n  f=0\n  for j in range(n):\n   if(ls[i][j]<m):\n    s+=ls[i][j]\n    m=ls[i][j]\n    f=1\n    break\n  if(f==0):\n   d=1\n   break\n if(d==0):\n  print(s)\n else:\n  print(-1)\n", "for u in range(int(input())):\n n=int(input())\n l=[]\n for i in range(n):\n  l.append(sorted(list(map(int,input().split())),reverse=True))\n m=max(l[n-1])\n s=m\n d=0\n for i in range(n-2,-1,-1):\n  f=0\n  for j in range(n):\n   if(l[i][j]<m):\n    s+=l[i][j]\n    m=l[i][j]\n    f=1\n    break\n  if(f==0):\n   d=1\n   break\n if(d==0):\n  print(s)\n else:\n  print(-1)\n", "def check(m,arr):\n s=-1\n for i in arr:\n  if i<m:\n   s=max(s,i)\n return s\n\nt=int(input())\nfor _ in range(t):\n n=int(input())\n a=[]\n for i in range(n):\n  a.append(list(map(int,input().split())))\n s=max(a[-1])\n m=s\n for i in range(n-2,-1,-1):\n  m=check(m,a[i])\n  if m!=-1:\n   s+=m\n  else:\n   s=-1\n   break\n print(s)\n \n", "def check(m,arr):\n s=-1\n for i in arr:\n  if i<m:\n   s=max(s,i)\n return s\n\nt=int(input())\nfor _ in range(t):\n n=int(input())\n a=[]\n for i in range(n):\n  a.append(list(map(int,input().split())))\n s=max(a[-1])\n m=s\n for i in range(n-2,-1,-1):\n  m=check(m,a[i])\n  if m!=-1:\n   s+=m\n  else:\n   s=-1\n   break\n print(s)\n \n", "# cook your dish here\nfor i in range(int(input())):\n n=int(input())\n rows=[]\n for i in range(n):\n  rows.append(list(map(int,input().split())))\n c=max(rows[-1])\n add=c \n try:\n  for j in range(n-2,-1,-1):\n   c=max([i for i in rows[j] if i<c])\n   add+=c \n  print(add)\n except ValueError:\n  print(-1)", "import numpy as np\nT = int(input())\n\nfor case in range(T):\n n = int(input())\n l = []\n for i in range(n):\n  l.append(list(map(int, input().split())))\n l.reverse()\n ans = max(l[0])\n m = max(l[0])\n for i in range(1, n):\n  a = np.array(l[i])\n  a = a[a < m]\n  if len(a) == 0:\n   ans = -1\n   break\n  else:\n   m = max(a)\n   ans += m\n print(ans)", "t=int(input())\nwhile(t>0):\n l=[]\n n=int(input())\n for i in range(n):\n  l.append(list(map(int,input().split())))\n x=max(l[-1])\n w=0\n s=x\n for i in range(n-2,-1,-1):\n  l[i].sort(reverse=True)\n  q=0\n  for j in l[i]:\n   if(j<x):\n    x=j\n    q=1\n    s+=x\n    break\n  if(q==0):\n   w=1\n   print(-1)\n   break\n if(w==0):\n  print(s)\n t-=1", "for _ in range(int(input())):\n res=0\n mat=[]\n n=int(input())\n for _ in range(n):\n  a=list(map(int,input().split()))\n  mat.append(sorted(a))\n count=mat[n-1][n-1]\n temp=mat[n-1][n-1]\n c=0\n k=0\n for i in range(n-2,-1,-1):\n  for j in range(n-1,-1,-1):\n   if mat[i][j]<temp:\n    count+=mat[i][j]\n    temp=mat[i][j]\n    c+=1\n    break\n  if c==0:\n   print(-1)\n   k=1\n   break\n  else:\n   c=0\n \n if k==0:\n  print(count)\n", "# cook your dish here\nt=int(input())\nwhile t:\n n=int(input())\n l=[]\n for i in range(n):\n  l1=list(map(int,input().split()))\n  l1=sorted(l1)\n  l.append(l1)\n #print(l)\n count=l[n-1][n-1]\n m=l[n-1][n-1]\n c=0\n k=0\n for i in range(n-2,-1,-1):\n  for j in range(n-1,-1,-1):\n   if(l[i][j]<m):\n    #print(count)\n    count+=l[i][j]\n    m=l[i][j]\n    c+=1\n    break\n  if(c==0):\n   print(-1)\n   k+=1\n   break\n  else:\n   c-=1\n if(k==0):\n  print(count)\n t-=1", "for _ in range(int(input())):\n n=int(input())\n l=[]\n while n>0:\n  k=[]\n  k=[int(i) for i in input().split()]\n  k=sorted(k)\n  l.append(k)\n  n -= 1\n\n count = [l[-1][-1]]\n flag = 0\n for i in range(len(l)-2,-1,-1):\n  for j in range(len(l)-1,-1,-1):\n   if l[i][j]< count[-1]:\n    count.append(l[i][j])\n    break\n  else:\n   flag = 1\n   break\n  if flag == 1: break\n if flag == 1: print(-1)\n else: print(sum(count))\n\n\n\n\n\n"]