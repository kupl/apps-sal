["def bowling_score(frames):\n    rolls = list(frames.replace(' ',''))\n    for i, hit in enumerate(rolls):\n        if hit == 'X':\n            rolls[i] = 10\n        elif hit == '/':\n            rolls[i] = 10 - rolls[i - 1]\n        else:\n            rolls[i] = int(hit)\n    score = 0\n    for i in range(10):\n        frame = rolls.pop(0)\n        if frame == 10:\n            score += frame + rolls[0] + rolls[1]    # Strike!\n        else:\n            frame += rolls.pop(0)\n            score += frame\n            if frame == 10:\n                score += rolls[0]                   # Spare!\n    return score", "import re\n\ndef bowling_score(frames):\n    frames = frames.split()\n    score = 0\n    \n    for frame, roll in enumerate(frames, 1):\n        if not roll.isdigit():\n            if frame < 10:\n                roll = (roll + \"\".join(frames[frame:]))[:3]\n        \n        score += sum(int(r) if r.isdigit() else 10 for r in re.sub(\"\\d/\", \"X\", roll))\n    \n    return score", "def frame2rolls(frame_line: str):\n    rolls = []\n    for i in range(len(frame_line)):\n        if frame_line[i] == 'X':\n            rolls.append(10)\n        elif frame_line[i] == '/':\n            rolls.append(10 - rolls[-1])\n        elif frame_line[i] == ' ':\n            continue\n        else:\n            rolls.append(int(frame_line[i]))\n    return rolls\n\n\ndef bowling_score(frame_line: str) -> int:\n    score = {i: 0 for i in range(10)}\n    frames = frame_line.split(' ')\n    rolls = frame2rolls(frame_line)\n    r = 0\n    for i in range(10):\n        if i == 9:  # The last frame is special\n            score[i] = sum(rolls[r:])\n            break\n        if frames[i] == 'X':\n            score[i] = 10 + rolls[r + 1] + rolls[r + 2]\n            r += 1\n        elif frames[i][-1] == '/':\n            score[i] = 10 + rolls[r + 2]\n            r += 2\n        else:\n            score[i] = rolls[r] + rolls[r + 1]\n            r += 2\n    score = [score[f] for f in score]\n    return sum(score)\n\n\ndef generate_frames() -> str:\n    frames = []\n    for i in range(10):\n        roll1 = random.randint(0, 10)\n        if roll1 == 10:\n            frames.append('X')\n        else:\n            roll2 = random.randint(0, 10 - roll1)\n            if roll2 + roll1 == 10:\n                frames.append(\"%d/\" % roll1)\n            else:\n                frames.append(\"%d%d\" % (roll1, roll2))\n\n    if frames[-1][-1] == 'X':\n        f10_r2 = random.randint(0, 10)\n        if f10_r2 == 10:\n            f10_r3 = random.randint(0, 10)\n            if f10_r3 == 10:\n                frames[-1] = \"XXX\"\n            else:\n                frames[-1] = \"XX%d\" % f10_r3\n        else:\n            f10_r3 = random.randint(0, 10 - f10_r2)\n            if f10_r2 + f10_r3 == 10:\n                frames[-1] = \"X%d/\" % f10_r2\n            else:\n                frames[-1] = \"X%d%d\" % (f10_r2, f10_r3)\n    elif frames[-1][-1] == '/':\n        f10_r3 = random.randint(0, 10)\n        if f10_r3 != 10:\n            frames[-1] = \"%s%d\" % (frames[-1], f10_r3)\n        else:\n            frames[-1] = \"%sX\" % frames[-1]\n    return ' '.join(frames)\n", "def bowling_score(frames):\n    pins = []\n    # Identify each roll's score, bonus balls and frame\n    for f, frame in enumerate(frames.split()):\n        for c in frame:\n            if c == \"X\":\n                pins.append([10, 2, f])\n            elif c == \"/\":\n                p = 10 - pins[-1][0]\n                pins.append([p, 1, f])\n            else:\n                pins.append([int(c), 0, f])\n    # Apply all the bonuses\n    for i in range(len(pins)):\n        score, offset, frame = pins[i]\n        if offset > 0 and frame < 9:\n            pins[i][0] += sum(pin[0] for pin in pins[i + 1: i + 1 + offset])\n    # Sum it all up\n    return sum(pin[0] for pin in pins)", "from collections import deque\ndef bowling_score(frames):\n    score = 0\n    next_two_rolls = deque([0, 0], 2)\n    for i, frame in enumerate(reversed(frames.split())):\n        for roll in reversed(frame):\n            if roll == 'X':\n                additional = sum(next_two_rolls) if i else 0\n                score += 10 + additional\n                next_two_rolls.appendleft(10)\n            elif roll == '/':\n                additional = next_two_rolls[0]  if i else 0\n                score += 10 + additional\n                next_two_rolls.appendleft('/')\n            else:\n                if next_two_rolls[0] == '/':\n                    next_two_rolls[0] = 10-int(roll)\n                else:\n                    score += int(roll)\n                next_two_rolls.appendleft(int(roll))\n    return score", "def cal(s):\n    ts =  0\n    for i in s: \n        c, t = i, 0\n        if '/' in i: \n            f = i.find('/')\n            c = i.replace(i[f-1:f+1], 'X')\n        for v in c: \n            if v == 'X': t += 10\n            else: t += int(v)\n        ts += t\n    return ts\n\ndef bowling_score(frames):\n    frames = frames.split()\n    r = []\n    for i in range(len(frames)):\n        if i == 9: \n            r.append(frames[i])\n            continue\n        elif frames[i][0] == 'X':\n            r.append(''.join(frames[i: i+3])[:3])\n        elif '/' in frames[i]:\n            r.append(''.join(frames[i: i+2])[:3] )\n        \n        else: \n            r.append(frames[i])\n    return cal(r)", "def bowling_score(frames_main):\n    frames = frames_main\n    add = \"\"\n    for i in range(0, len(frames_main) - 3):\n        if frames_main[i] == '/':\n            if frames_main[i - 1] == '0':\n                frames = frames.replace('/', \" \" + 'V', 1)\n                add += str(frames_main[i + 2]) + \" \"\n                continue\n            frames = frames.replace('/', \" \" + str(10 - int(frames_main[i - 1])), 1)\n            add += str(frames_main[i + 2]) + \" \"\n\n    frames = list(frames.split(' '))\n    last = frames[len(frames) - 1]\n    frames.remove(last)\n    if last[1] == '/':\n        if last[0] == '0':\n            last = last.replace('/', 'V', 1)\n        last = last.replace('/', str(10 - int(last[0])), 1)\n    frames.append(last)\n    string = \"\".join(frames)\n    string = string.replace('', ' ')[1: -1]\n    frames = list(string.split(\" \"))\n    while '' in frames: frames.remove('')\n    for i in range(0, len(frames) - len(last)):\n        if frames[i] == 'X':\n            add += frames[i + 1] + ' ' + frames[i + 2] + ' '\n    add = list(add.split(\" \")[0: -1])\n    string = \" \".join(frames) + \" \" + \" \".join(add)\n    string = string.replace('V', '10')\n    string = string.replace('X', '10')\n    frames = list(string.split(\" \"))\n    while '' in frames: frames.remove('')\n    return sum(list(map(int, frames)))", "def bowling_score(frames):\n    score=frames.split(\" \")\n    total=0\n    for i in range(len(score)-1):\n        if calculate(score[i])==10:\n            if \"X\" in score[i]:\n                if len(score[i+1])==1:\n                    total+=10+calculate(score[i+1][0])+calculate(score[i+2][0])\n                else:\n                    total+=10+calculate(score[i+1][:2])\n            else:\n                total+=10+calculate(score[i+1][0])\n        else:\n            total+=calculate(score[i])\n    if len(score[-1])==2:\n        return total+calculate(score[-1])\n    return total+calculate(score[-1][:2])+calculate(score[-1][2:])\ndef calculate(s):\n    if \"X\" in s:\n        return 10*s.count(\"X\")\n    elif \"/\" in s: \n        return 10\n    return int(s[0])+int(s[1]) if len(s)==2 else int(s[0])"]