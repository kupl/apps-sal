["for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n def check(mid):\n  d,left={},0\n  for i in range(mid):\n   if a[i]>k:\n    if a[i] not in d: \n     d[a[i]]=1\n    else: \n     d[a[i]]+=1\n  if len(d)==1:\n   return True\n  for i in range(mid,n):\n   if a[left]>k:\n    d[a[left]]-=1\n    if d[a[left]]==0: \n     del d[a[left]]\n   if a[i]>k:\n    if a[i] not in d: \n     d[a[i]]=1\n    else: \n     d[a[i]]+=1\n   if len(d)==1: \n    return True\n   left+=1\n  return False\n   \n lo,hi=0,n\n while lo<=hi:\n  mid=(lo+hi)//2\n  #print(mid,lo,hi)\n  if check(mid):\n   res=mid\n   lo=mid+1\n  else:\n   hi=mid-1\n print(res)\n   \n   \n   \n", "def solve(arr,n,k):\n if max(arr)<=k:\n  return 0\n ans=0\n m=-1\n f=0\n \n i=0\n j=-1\n \n while j<n-1:\n  if arr[j+1]<=k:\n   j+=1\n  elif arr[j+1]>k:\n   if m==-1:\n    m=arr[j+1]\n    f+=1\n    j+=1\n   elif arr[j+1]==m:\n    f+=1\n    j+=1\n   else:\n    ans=max(ans,j-i+1)\n    while f:\n     if arr[i]==m:\n      f-=1\n     i+=1\n    m=-1\n    f=0\n ans=max(ans,j-i+1)\n return ans\nfor _ in range(int(input())):\n n,k=list(map(int,input().split( )))\n arr=list(map(int,input().split( )))\n print(solve(arr,n,k))\n", "# cook your dish here\ndef answer():\n for t in range(int(input())):\n  N, K = [int(x) for x in input().split()]\n  l = [-1]\n  l += [int(x) for x in input().split()] \n  green = 0\n  orange = 0\n  red = 0\n  ans = 0\n  \n  \n  while True:\n   orange +=1\n   \n   if orange==N+1:\n    ans = max(ans, N-green)\n    break\n   \n   elif l[orange]>K: \n    \n    red = orange\n    while True:\n     red+=1\n     if red == N+1: \n      ans = max(ans, N-green)\n      break\n     elif l[red]>K :\n      if l[red]!=l[orange]:\n       ans = max(ans, red-green-1)\n       green = orange\n       orange = red-1\n       break\n      else: orange = red\n     \n   \n   \n  print(ans)\n return \n     \n  \n  \n\n\ndef __starting_point():\n \n \n answer()\n__starting_point()", "# cook your dish here\nfor i in range(int(input())):\n n,k = list(map(int,input().split()))\n a = list(map(int,input().split()))\n c,x,i1,i2,b = 0,0,0,0,list()\n for j in range(n):\n  c += 1\n  if a[j] > k :\n   x += 1\n   if x == 1 :i1 = j\n   else:\n    if a[j] == a[i1]:x -= 1\n    else:i2 = j\n  if x == 2 :\n   x = 1\n   b.append(c-1)\n   c = i2-i1\n   i1 = i2\n   i2 = 0\n  if j == n-1 and b == [ ]:b.append(n)\n print(max(b))\n  \n \n\n", "# cook your dish here\nt=int(input())\nwhile t:\n a=input().split()\n n=int(a[0])\n k=int(a[1])\n lst=input().split()\n for i in range(n):\n  lst[i] = int(lst[i])\n greater = 0\n length=0\n pos = -1\n allTimeLong=0\n for i in range(n):\n  if lst[i]>k and greater!=0 and lst[i]!=greater:\n   greater = lst[i]\n   if allTimeLong<length:\n    allTimeLong=length\n   length = i - pos\n   pos=i\n   continue\n  elif lst[i]>k:\n   greater = lst[i]\n   pos=i\n  length+=1\n if allTimeLong<length:\n  allTimeLong=length\n t-=1\n print(allTimeLong)", "for i in range(int(input())):\n n,k = list(map(int,input().split()))\n a = list(map(int,input().split()))\n c,x,i1,i2,b = 0,0,0,0,list()\n for j in range(n):\n  c += 1\n  if a[j] > k :\n   x += 1\n   if x == 1 :i1 = j\n   else:\n    if a[j] == a[i1]:x -= 1\n    else:i2 = j\n  if x == 2 :\n   x = 1\n   b.append(c-1)\n   c = i2-i1\n   i1 = i2\n   i2 = 0\n  if j == n-1 and b == [ ]:b.append(n)\n print(max(b))\n  \n \n\n", "for i in range(int(input())):\n n,k = map(int,input().split())\n a = list(map(int,input().split()))\n c,x,i1,i2,b = 0,0,0,0,list()\n for j in range(n):\n  c += 1\n  if a[j] > k :\n   x += 1\n   if x == 1 :i1 = j\n   else:\n    if a[j] == a[i1]:x -= 1\n    else:i2 = j\n  if x == 2 :\n   x = 1\n   b.append(c-1)\n   c = i2-i1\n   i1 = i2\n   i2 = 0\n  if j == n-1 and b == [ ]:b.append(n)\n print(max(b))", "for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n l=[int(i) for i in input().split()]\n maxi=0 \n grtr=0 \n st=0 \n from collections import defaultdict\n big=defaultdict(int)\n for end in range(n):\n  if l[end]>k:\n   big[l[end]]+=1 \n   if big[l[end]]==1:\n    grtr+=1 \n  while grtr>1:\n   if l[st]>k:\n    big[l[st]]-=1 \n    if big[l[st]]<=0:\n     grtr-=1 \n   st+=1 \n  maxi=max(maxi,end-st+1)\n print(maxi)\n", "for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n l=[int(i) for i in input().split()]\n maxi=0 \n grtr=0 \n st=0 \n from collections import defaultdict\n big=defaultdict(int)\n for end in range(n):\n  if l[end]>k:\n   big[l[end]]+=1 \n   if big[l[end]]==1:\n    grtr+=1 \n  while grtr>1:\n   if l[st]>k:\n    big[l[st]]-=1 \n    if big[l[st]]<=0:\n     grtr-=1 \n   st+=1 \n  maxi=max(maxi,end-st+1)\n print(maxi)\n", "# cook your dish here\nfor i in range(int(input())):\n n,k=input().split()\n n=int(n)\n k=int(k)\n arr=list(map(int,input().split()))\n a=0\n b=0\n count=0\n ans=0\n temp=-1\n w=0\n index1=index2=None\n while(b<n):\n  if(arr[b]>k):\n   if(count==0):\n    index1=b\n    count+=1 \n   else:\n    if(arr[b]==arr[index1]):\n     index1=b \n    else:\n     index2=b \n     count+=1 \n  if(count==2):\n   w=1\n   ans=max(ans,b-a)\n   a=index1+1 \n   index1=index2\n   index2=None \n   count=1 \n  b+=1 \n if(w==0 and count==1):\n  print(n)\n else:\n  print(ans)\n    \n   \n   \n \n   \n    \n   \n   \n", "# https://www.codechef.com/problems/SLAEL\n\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n ays = list( map(int,input().split()) )\n\n gt = k # sentinel\n gtp = -1\n mseg = 0\n seg = 0\n for ax,a in enumerate(ays):\n  if a <= k:\n   seg += 1\n  elif a == gt:\n   seg += 1\n   gtp = ax\n  else:\n   if seg > mseg:\n    mseg = seg\n   gt = a\n   seg = ax - gtp\n   gtp = ax\n\n if gt == k: # check sentinel\n  mseg = 0\n elif seg > mseg:\n  mseg = seg\n print(mseg)\n", "import sys\n\ndef _int():\n return int(sys.stdin.readline())\n\ndef _ints():\n return list(map(int, sys.stdin.readline().split()))\n\ndef _intarr():\n return list(map(int, sys.stdin.readline().split()))\n\ndef _str():\n return sys.stdin.readline()\n\ndef _strarr():\n return sys.stdin.readline().split()\n\nt = _int()\n\nans = []\n\nfor _ in range(t):\n n, m = _ints()\n arr = _intarr()\n \n \n # start index of current calculation\n start = -1\n # end index of current calculation\n # used for edge cases\n end = -1\n # index of previous bigger than m\n # used for calculating start for next\n index = -1\n ans = 0\n for i in range(n):\n  if start == -1:\n   start = i\n   if arr[i] > m:\n    index = i\n  else:\n   if arr[i] > m:\n    if index == -1:\n     index = i\n    elif arr[index] != arr[i]:\n     end = i\n     # calculate string length\n     ans = max(ans, end-start)\n     #print(\"{} {} {}\".format(start, end, ans))\n     # start new calculation with next element\n     # of previos bigger than m\n     start = index+1\n    # previous bigger than m\n    index = i\n if end != n-1:\n  end = n\n  ans = max(ans, end-start)\n  #print(\"{} {} {}\".format(start, end, ans))\n \n print(ans)\n", "t=int(input())\nfor i in range(t):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n lt=list()\n nos=list()\n p=-1\n for j in range(n):\n  if a[j]>k:\n   nos.append(a[j]) \n   lt.append(j+1)\n lt=[0]+lt+[n+1] \n l,j=0,0\n tm=len(lt)\n nos=[0]+nos+[nos[tm-3]]\n while(j<tm-2):\n  xt=j+2\n  while xt+1<tm and nos[xt]==nos[j+1]:\n    xt+=1\n  ct=lt[xt]-lt[j]-1\n  if ct>l:\n   l=ct\n  j=xt-1 \n print(l)", "t=int(input())\nwhile(t>0):\n n,k=[int(x) for x in input().split()]\n a=[int(x) for x in input().split()]\n first=0\n prev=0\n i=0\n len=0\n maxlen=0\n while(i<n):\n  if(a[i]>k):\n   if(first==0):\n    first=a[i]\n    prev=i\n    len+=1\n   else:\n    if(first==a[i]):\n     len+=1\n     prev=i\n    else:\n     first=0\n     i=prev\n     if(maxlen<len):\n      maxlen=len\n     len=0\n  else:\n   len+=1\n  i+=1\n else:\n  if(maxlen<len):\n   maxlen=len\n print(maxlen)\n t-=1\n", "# https://www.codechef.com/problems/SLAEL\n\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n ays = list( map(int,input().split()) )\n\n gt = 0\n gtp = -1\n mseg = 0\n seg = 0\n for ax,a in enumerate(ays):\n  if a<=k:\n   seg += 1\n  elif gt == 0:\n   seg += 1\n   gt = a\n   gtp = ax\n  elif a == gt:\n   seg += 1\n   gtp = ax\n  else:\n   if seg > mseg:\n    mseg = seg\n   gt = a\n   seg = ax - gtp\n   gtp = ax\n\n if seg > mseg:\n  mseg = seg\n print(mseg)\n", "t=int(input())\nfor _ in range(t):\n n,k=list(map(int,input().strip().split()))\n a=list(map(int,input().strip().split()))\n c=0\n f=0\n b=[]\n d=[0,0]\n for i in range(n):\n  if a[i]>k:\n   f+=1\n   if f==1:\n    d[0]=i\n   else:\n    if a[i]==a[d[0]]:\n     f-=1\n    else:\n     d[1]=i\n  c+=1\n  if f==2:\n   f=1\n   b.append(c-1)\n   c=d[1]-d[0]\n   d[0]=d[1]\n   d[1]=0\n if len(b)==0:\n  print(c)\n else:\n  print(max(b))\n", "t=int(input())\nfor i in range(t):\n n,k=list(map(int,input().strip().split()))\n a=list(map(int,input().strip().split()))\n c=0\n x=0\n b=list()\n i1=0\n i2=0\n for j in range(n):\n  c+=1\n  if a[j]>k:\n   x+=1\n   if x==1:\n    i1=j\n   else:\n    if a[j]==a[i1]:\n     x-=1\n    else:\n     i2=j\n  if x==2:\n   x=1\n   b.append(c-1)\n   c=i2-i1\n   i1=i2\n   i2=0\n  if j==n-1 and b==[ ]:\n   b.append(n)\n print(max(b))\n"]