["from itertools import permutations\n\ndef equal_to_24(*aceg):\n    ops = '+-*/'\n    \n    for b in ops:\n        for d in ops:\n            for f in ops:\n                for (a,c,e,g) in permutations(aceg):\n                    for s in make_string(a,b,c,d,e,f,g):\n                        try:\n                            if eval(s + '== 24'):\n                                return s\n                        except:\n                            pass\n                            \n    return \"It's not possible!\"\n\ndef make_string(a,b,c,d,e,f,g):\n    return [f\"(({a} {b} {c}) {d} {e}) {f} {g}\",\n            f\"({a} {b} {c}) {d} ({e} {f} {g})\",\n            f\"{a} {b} ({c} {d} ({e} {f} {g}))\"]", "from functools import lru_cache as memo\nfrom itertools import permutations, product\nfrom operator import add, sub, mul, truediv as div\noperators = {add: '+', sub: '-', mul: '*', div: '/'}\n\n@memo(None)\ndef evaluate_tree(terms, ops):\n    if not ops: return {terms[0]: str(terms[0])}\n    results = {}\n    for idx, op in enumerate(ops, 1):\n        left, right = evaluate_tree(terms[:idx], ops[:idx-1]), evaluate_tree(terms[idx:], ops[idx:])\n        results.update({op(l, r): f'({left[l]}){operators[op]}({right[r]})'\n                        for l, r in product(left, right) if not (op == div and r == 0)})\n    return results\n\ndef equal_to_24(*terms):\n    for operands in permutations(terms):\n        for ops in product(operators, repeat=3):\n            results = evaluate_tree(operands, ops)\n            if 24 in results: return results[24]\n    return \"It's not possible!\"", "def equal_to_24(a,b,c,d):\n    m = {(1, 1, 1, 8) : \"((1+1)+1)*8\",\n    (1, 1, 1, 11) : \"(1+1)*(1+11)\",\n    (1, 1, 1, 12) : \"((1/1)+1)*12\",\n    (1, 1, 2, 6) : \"((1+1)*2)*6\",\n    (1, 1, 2, 8) : \"((1/1)+2)*8\",\n    (1, 1, 2, 10) : \"(1+1)*(2+10)\",\n    (1, 1, 2, 11) : \"(1+1)+(2*11)\",\n    (1, 1, 2, 12) : \"12/((1/1)/2)\",\n    (1, 1, 3, 4) : \"((1+1)*3)*4\",\n    (1, 1, 3, 6) : \"((1/1)+3)*6\",\n    (1, 1, 3, 8) : \"8/((1/1)/3)\",\n    (1, 1, 3, 9) : \"(1+1)*(3+9)\",\n    (1, 1, 3, 12) : \"(3-(1/1))*12\",\n    (1, 1, 4, 4) : \"((1+1)+4)*4\",\n    (1, 1, 4, 6) : \"6/((1/1)/4)\",\n    (1, 1, 4, 8) : \"(4-(1/1))*8\",\n    (1, 1, 4, 12) : \"12/((1+1)/4)\",\n    (1, 1, 4, 5) : \"((1/1)+5)*4\",\n    (1, 1, 5, 6) : \"(5-(1/1))*6\",\n    (1, 1, 5, 7) : \"(1+1)*(5+7)\",\n    (1, 1, 5, 8) : \"(5-(1+1))*8\",\n    (1, 1, 6, 6) : \"(6-(1+1))*6\",\n    (1, 1, 6, 8) : \"8/((1+1)/6)\",\n    (1, 1, 6, 12) : \"((1+1)*6)+12\",\n    (1, 1, 3, 7) : \"((1/1)+7)*3\",\n    (1, 1, 4, 7) : \"(7-(1/1))*4\",\n    (1, 1, 7, 10) : \"((1+1)*7)+10\",\n    (1, 1, 8, 8) : \"((1+1)*8)+8\",\n    (1, 1, 6, 9) : \"((1+1)*9)+6\",\n    (1, 1, 9, 13) : \"((1+1)+9)+13\",\n    (1, 1, 3, 10) : \"(10-(1+1))*3\",\n    (1, 1, 4, 10) : \"((1+1)*10)+4\",\n    (1, 1, 10, 12) : \"((1+1)+10)+12\",\n    (1, 1, 10, 13) : \"((1/1)+10)+13\",\n    (1, 1, 11, 11) : \"((1+1)+11)+11\",\n    (1, 1, 11, 12) : \"((1/1)+11)+12\",\n    (1, 1, 11, 13) : \"(11/(1/1))+13\",\n    (1, 1, 12, 12) : \"(12/(1/1))+12\",\n    (1, 1, 12, 13) : \"13-((1/1)-12)\",\n    (1, 1, 1, 13) : \"(1+1)*(13-1)\",\n    (1, 1, 2, 13) : \"(13-(1/1))*2\",\n    (1, 1, 13, 13) : \"13-((1+1)-13)\",\n    (1, 1, 2, 7) : \"(1+2)*(1+7)\",\n    (1, 2, 2, 4) : \"((1+2)*2)*4\",\n    (1, 2, 2, 6) : \"6/((1/2)/2)\",\n    (1, 2, 2, 8) : \"(2-(1-2))*8\",\n    (1, 2, 2, 10) : \"(1*2)*(2+10)\",\n    (1, 2, 2, 11) : \"(1*2)+(2*11)\",\n    (1, 2, 3, 4) : \"4/((1/2)/3)\",\n    (1, 2, 3, 5) : \"(1+2)*(3+5)\",\n    (1, 2, 3, 6) : \"(3-(1-2))*6\",\n    (1, 2, 3, 7) : \"(1+2)+(3*7)\",\n    (1, 2, 3, 9) : \"(1*2)*(3+9)\",\n    (1, 2, 3, 12) : \"((1-2)+3)*12\",\n    (1, 2, 4, 4) : \"((1*2)+4)*4\",\n    (1, 2, 4, 8) : \"(1*2)*(4+8)\",\n    (1, 2, 4, 12) : \"((1/2)*4)*12\",\n    (1, 2, 4, 5) : \"(5-(1-2))*4\",\n    (1, 2, 5, 5) : \"(1-2)+(5*5)\",\n    (1, 2, 5, 6) : \"((1-2)+5)*6\",\n    (1, 2, 5, 7) : \"(1*2)*(5+7)\",\n    (1, 2, 5, 8) : \"(5-(1*2))*8\",\n    (1, 2, 5, 9) : \"((1+2)*5)+9\",\n    (1, 2, 5, 12) : \"(5-(1+2))*12\",\n    (1, 2, 6, 6) : \"(6-(1*2))*6\",\n    (1, 2, 6, 8) : \"((1/2)*6)*8\",\n    (1, 2, 6, 12) : \"(6/(1/2))+12\",\n    (1, 2, 4, 7) : \"((1-2)+7)*4\",\n    (1, 2, 6, 7) : \"(7-(1+2))*6\",\n    (1, 2, 7, 10) : \"(7/(1/2))+10\",\n    (1, 2, 8, 8) : \"(8/(1/2))+8\",\n    (1, 2, 8, 9) : \"9/((1+2)/8)\",\n    (1, 2, 8, 13) : \"((1+2)+8)+13\",\n    (1, 1, 2, 9) : \"(1+2)*(9-1)\",\n    (1, 2, 2, 9) : \"((1+2)+9)*2\",\n    (1, 2, 4, 9) : \"(9-(1+2))*4\",\n    (1, 2, 6, 9) : \"(9/(1/2))+6\",\n    (1, 2, 9, 12) : \"((1+2)+9)+12\",\n    (1, 2, 9, 13) : \"((1*2)+9)+13\",\n    (1, 2, 3, 10) : \"(10-(1*2))*3\",\n    (1, 2, 4, 10) : \"(10/(1/2))+4\",\n    (1, 2, 6, 10) : \"((1+2)*10)-6\",\n    (1, 2, 10, 11) : \"((1+2)+10)+11\",\n    (1, 2, 10, 12) : \"((1*2)+10)+12\",\n    (1, 2, 10, 13) : \"13-((1-2)-10)\",\n    (1, 2, 3, 11) : \"(11-(1+2))*3\",\n    (1, 2, 9, 11) : \"((1+2)*11)-9\",\n    (1, 2, 11, 11) : \"((1*2)+11)+11\",\n    (1, 2, 11, 12) : \"12-((1-2)-11)\",\n    (1, 2, 11, 13) : \"13-(11/(1-2))\",\n    (1, 2, 12, 12) : \"12-(12/(1-2))\",\n    (1, 2, 12, 13) : \"((1-2)+12)+13\",\n    (1, 2, 2, 13) : \"(13/(1/2))-2\",\n    (1, 2, 5, 13) : \"(1+2)*(13-5)\",\n    (1, 2, 13, 13) : \"13-((1*2)-13)\",\n    (1, 1, 3, 5) : \"(1+3)*(1+5)\",\n    (1, 1, 3, 13) : \"(1-3)*(1-13)\",\n    (1, 2, 3, 3) : \"((1+3)*2)*3\",\n    (1, 2, 3, 13) : \"(1-3)+(2*13)\",\n    (1, 3, 3, 3) : \"(1+3)*(3+3)\",\n    (1, 3, 3, 4) : \"((1*3)+3)*4\",\n    (1, 3, 3, 5) : \"(1*3)*(3+5)\",\n    (1, 3, 3, 7) : \"(1*3)+(3*7)\",\n    (1, 3, 3, 9) : \"(3-(1/3))*9\",\n    (1, 3, 3, 12) : \"((1+3)*3)+12\",\n    (1, 3, 4, 4) : \"(1*3)*(4+4)\",\n    (1, 3, 4, 5) : \"(1+3)+(4*5)\",\n    (1, 3, 4, 8) : \"((1+3)*4)+8\",\n    (1, 3, 4, 12) : \"(4/(1/3))+12\",\n    (1, 3, 5, 8) : \"((1-3)+5)*8\",\n    (1, 3, 5, 9) : \"(5/(1/3))+9\",\n    (1, 3, 5, 12) : \"(5-(1*3))*12\",\n    (1, 3, 3, 6) : \"(6-(1-3))*3\",\n    (1, 3, 6, 6) : \"(6/(1/3))+6\",\n    (1, 3, 6, 8) : \"(6-(1*3))*8\",\n    (1, 3, 6, 12) : \"((1/3)*6)*12\",\n    (1, 3, 4, 7) : \"((1+3)*7)-4\",\n    (1, 3, 6, 7) : \"(7-(1*3))*6\",\n    (1, 3, 7, 8) : \"(7-(1+3))*8\",\n    (1, 3, 7, 10) : \"10-((1-3)*7)\",\n    (1, 3, 7, 13) : \"((1+3)+7)+13\",\n    (1, 2, 3, 8) : \"(1+3)*(8-2)\",\n    (1, 3, 8, 8) : \"8-((1-3)*8)\",\n    (1, 3, 8, 9) : \"((1/3)*8)*9\",\n    (1, 3, 8, 12) : \"12/((1+3)/8)\",\n    (1, 3, 8, 13) : \"((1*3)+8)+13\",\n    (1, 3, 4, 9) : \"(9-(1*3))*4\",\n    (1, 3, 6, 9) : \"6-((1-3)*9)\",\n    (1, 3, 9, 11) : \"((1+3)+9)+11\",\n    (1, 3, 9, 12) : \"((1*3)+9)+12\",\n    (1, 3, 9, 13) : \"13-((1-3)-9)\",\n    (1, 3, 3, 10) : \"((1-3)+10)*3\",\n    (1, 3, 4, 10) : \"4-((1-3)*10)\",\n    (1, 3, 6, 10) : \"(10/(1/3))-6\",\n    (1, 3, 10, 10) : \"((1+3)+10)+10\",\n    (1, 3, 10, 11) : \"((1*3)+10)+11\",\n    (1, 3, 10, 12) : \"12-((1-3)-10)\",\n    (1, 3, 3, 11) : \"(11-(1*3))*3\",\n    (1, 3, 5, 11) : \"(1+3)*(11-5)\",\n    (1, 3, 11, 11) : \"11-((1-3)-11)\",\n    (1, 3, 12, 12) : \"(12/(1/3))-12\",\n    (1, 3, 5, 13) : \"(1*3)*(13-5)\",\n    (1, 3, 13, 13) : \"((1-3)+13)+13\",\n    (1, 1, 4, 9) : \"(1-4)*(1-9)\",\n    (1, 3, 4, 11) : \"(1-4)*(3-11)\",\n    (1, 4, 4, 4) : \"((1+4)*4)+4\",\n    (1, 4, 4, 5) : \"(1*4)+(4*5)\",\n    (1, 4, 4, 8) : \"(4/(1/4))+8\",\n    (1, 4, 4, 12) : \"12-((1-4)*4)\",\n    (1, 4, 5, 9) : \"9-((1-4)*5)\",\n    (1, 4, 5, 12) : \"((1-4)+5)*12\",\n    (1, 4, 5, 13) : \"(1-4)*(5-13)\",\n    (1, 4, 6, 6) : \"6-((1-4)*6)\",\n    (1, 4, 6, 8) : \"((1-4)+6)*8\",\n    (1, 4, 6, 12) : \"(6-(1*4))*12\",\n    (1, 4, 6, 13) : \"((1+4)+6)+13\",\n    (1, 4, 4, 7) : \"(7/(1/4))-4\",\n    (1, 4, 6, 7) : \"((1-4)+7)*6\",\n    (1, 4, 7, 8) : \"(7-(1*4))*8\",\n    (1, 4, 7, 11) : \"((1+4)*7)-11\",\n    (1, 4, 7, 12) : \"(7-(1+4))*12\",\n    (1, 4, 7, 13) : \"((1*4)+7)+13\",\n    (1, 4, 8, 8) : \"(8/(1/4))-8\",\n    (1, 4, 8, 11) : \"((1+4)+8)+11\",\n    (1, 4, 8, 12) : \"((1/4)*8)*12\",\n    (1, 4, 8, 13) : \"13-((1-4)-8)\",\n    (1, 4, 4, 9) : \"((1-4)+9)*4\",\n    (1, 4, 6, 9) : \"(9-(1+4))*6\",\n    (1, 4, 9, 10) : \"((1+4)+9)+10\",\n    (1, 4, 9, 11) : \"((1*4)+9)+11\",\n    (1, 4, 9, 12) : \"(9/(1/4))-12\",\n    (1, 4, 4, 10) : \"(10-(1*4))*4\",\n    (1, 4, 10, 10) : \"((1*4)+10)+10\",\n    (1, 4, 10, 11) : \"11-((1-4)-10)\",\n    (1, 4, 10, 12) : \"12/((1+4)/10)\",\n    (1, 4, 4, 11) : \"(11-(1+4))*4\",\n    (1, 4, 5, 11) : \"(1*4)*(11-5)\",\n    (1, 3, 4, 13) : \"(13-(1+4))*3\",\n    (1, 2, 2, 5) : \"((1+5)*2)*2\",\n    (1, 3, 5, 6) : \"((1+5)*3)+6\",\n    (1, 4, 5, 7) : \"(1-5)+(4*7)\",\n    (1, 4, 5, 8) : \"8-((1-5)*4)\",\n    (1, 4, 5, 10) : \"(1-5)*(4-10)\",\n    (1, 1, 5, 5) : \"(5/(1/5))-1\",\n    (1, 4, 5, 5) : \"4-((1-5)*5)\",\n    (1, 5, 5, 5) : \"(5-(1/5))*5\",\n    (1, 5, 5, 6) : \"((1+5)*5)-6\",\n    (1, 5, 5, 11) : \"(1-5)*(5-11)\",\n    (1, 5, 5, 13) : \"((1+5)+5)+13\",\n    (1, 5, 6, 6) : \"(6/(1/5))-6\",\n    (1, 5, 6, 12) : \"(1-5)*(6-12)\",\n    (1, 5, 6, 13) : \"((1*5)+6)+13\",\n    (1, 3, 5, 7) : \"(1+5)*(7-3)\",\n    (1, 5, 7, 8) : \"((1-5)+7)*8\",\n    (1, 5, 7, 11) : \"(7/(1/5))-11\",\n    (1, 5, 7, 12) : \"(7-(1*5))*12\",\n    (1, 5, 7, 13) : \"(1-5)*(7-13)\",\n    (1, 5, 6, 8) : \"((1-5)+8)*6\",\n    (1, 5, 8, 8) : \"(8-(1*5))*8\",\n    (1, 5, 8, 10) : \"((1+5)+8)+10\",\n    (1, 5, 8, 11) : \"((1*5)+8)+11\",\n    (1, 5, 8, 12) : \"12-((1-5)-8)\",\n    (1, 5, 5, 9) : \"(1+5)*(9-5)\",\n    (1, 5, 6, 9) : \"(9-(1*5))*6\",\n    (1, 5, 8, 9) : \"(9-(1+5))*8\",\n    (1, 5, 9, 9) : \"((1+5)+9)+9\",\n    (1, 5, 9, 10) : \"((1*5)+9)+10\",\n    (1, 5, 9, 11) : \"11-((1-5)-9)\",\n    (1, 5, 6, 10) : \"(10-(1+5))*6\",\n    (1, 5, 10, 10) : \"10-((1-5)-10)\",\n    (1, 5, 10, 12) : \"((1/5)*10)*12\",\n    (1, 5, 12, 12) : \"12/((1+5)/12)\",\n    (1, 5, 9, 13) : \"(1+5)*(13-9)\",\n    (1, 4, 4, 6) : \"4-((1-6)*4)\",\n    (1, 5, 6, 11) : \"((1+6)*5)-11\",\n    (1, 6, 6, 11) : \"((1+6)+6)+11\",\n    (1, 6, 6, 12) : \"(6/(1/6))-12\",\n    (1, 6, 6, 13) : \"13-((1-6)-6)\",\n    (1, 6, 7, 10) : \"((1+6)+7)+10\",\n    (1, 6, 7, 11) : \"((1*6)+7)+11\",\n    (1, 6, 7, 12) : \"12-((1-6)-7)\",\n    (1, 6, 8, 8) : \"((1-6)+8)*8\",\n    (1, 6, 8, 9) : \"((1+6)+8)+9\",\n    (1, 6, 8, 10) : \"((1*6)+8)+10\",\n    (1, 6, 8, 11) : \"11-((1-6)-8)\",\n    (1, 6, 8, 12) : \"(8-(1*6))*12\",\n    (1, 6, 6, 9) : \"((1-6)+9)*6\",\n    (1, 6, 9, 9) : \"((1*6)+9)+9\",\n    (1, 6, 9, 10) : \"10-((1-6)-9)\",\n    (1, 6, 9, 12) : \"(9-(1+6))*12\",\n    (1, 6, 6, 10) : \"(10-(1*6))*6\",\n    (1, 4, 6, 11) : \"((1-6)+11)*4\",\n    (1, 6, 12, 12) : \"((1/6)*12)*12\",\n    (1, 3, 6, 13) : \"((1-6)+13)*3\",\n    (1, 6, 9, 13) : \"(1*6)*(13-9)\",\n    (1, 2, 7, 8) : \"((1+7)*2)+8\",\n    (1, 2, 7, 12) : \"12-((1-7)*2)\",\n    (1, 3, 7, 7) : \"(1-7)*(3-7)\",\n    (1, 3, 7, 9) : \"9/(3/(1+7))\",\n    (1, 5, 6, 7) : \"(1-7)+(5*6)\",\n    (1, 5, 7, 9) : \"(1-7)*(5-9)\",\n    (1, 4, 7, 7) : \"(1+7)*(7-4)\",\n    (1, 7, 7, 9) : \"((1+7)+7)+9\",\n    (1, 7, 7, 10) : \"((1*7)+7)+10\",\n    (1, 7, 7, 11) : \"(1-7)*(7-11)\",\n    (1, 7, 8, 8) : \"((1+7)+8)+8\",\n    (1, 7, 8, 9) : \"((1*7)+8)+9\",\n    (1, 7, 8, 10) : \"10-((1-7)-8)\",\n    (1, 7, 8, 12) : \"(1-7)*(8-12)\",\n    (1, 6, 7, 9) : \"(1+7)*(9-6)\",\n    (1, 7, 9, 9) : \"9-((1-7)-9)\",\n    (1, 7, 9, 12) : \"(9-(1*7))*12\",\n    (1, 7, 9, 13) : \"(1-7)*(9-13)\",\n    (1, 7, 10, 12) : \"(10-(1+7))*12\",\n    (1, 7, 8, 11) : \"(11-(1+7))*8\",\n    (1, 7, 10, 13) : \"(1+7)*(13-10)\",\n    (1, 2, 8, 10) : \"10-((1-8)*2)\",\n    (1, 3, 3, 8) : \"3-((1-8)*3)\",\n    (1, 8, 8, 8) : \"((1*8)+8)+8\",\n    (1, 8, 8, 9) : \"9-((1-8)-8)\",\n    (1, 8, 9, 12) : \"((1-8)+9)*12\",\n    (1, 8, 8, 10) : \"((1-8)+10)*8\",\n    (1, 8, 10, 12) : \"(10-(1*8))*12\",\n    (1, 8, 8, 11) : \"(11-(1*8))*8\",\n    (1, 8, 11, 12) : \"(11-(1+8))*12\",\n    (1, 8, 8, 12) : \"(12-(1+8))*8\",\n    (1, 6, 8, 13) : \"(13-(1+8))*6\",\n    (1, 8, 10, 13) : \"(1*8)*(13-10)\",\n    (1, 2, 7, 9) : \"(1+9)+(2*7)\",\n    (1, 4, 7, 9) : \"(1-9)*(4-7)\",\n    (1, 4, 8, 9) : \"(1-9)+(4*8)\",\n    (1, 5, 9, 12) : \"12/(5/(1+9))\",\n    (1, 7, 9, 10) : \"(1-9)*(7-10)\",\n    (1, 8, 9, 11) : \"(1-9)*(8-11)\",\n    (1, 9, 9, 12) : \"(1-9)*(9-12)\",\n    (1, 9, 10, 12) : \"((1-9)+10)*12\",\n    (1, 9, 10, 13) : \"(1-9)*(10-13)\",\n    (1, 9, 11, 12) : \"(11-(1*9))*12\",\n    (1, 9, 12, 12) : \"(12-(1+9))*12\",\n    (1, 8, 9, 13) : \"(13-(1+9))*8\",\n    (1, 3, 9, 10) : \"((1+10)*3)-9\",\n    (1, 10, 11, 12) : \"((1-10)+11)*12\",\n    (1, 10, 12, 12) : \"(12-(1*10))*12\",\n    (1, 6, 10, 13) : \"((1-10)+13)*6\",\n    (1, 10, 12, 13) : \"(13-(1+10))*12\",\n    (1, 2, 4, 11) : \"4-((1-11)*2)\",\n    (1, 2, 6, 11) : \"(1+11)+(2*6)\",\n    (1, 1, 3, 11) : \"(1+11)*(3-1)\",\n    (1, 3, 6, 11) : \"6/(3/(1+11))\",\n    (1, 3, 11, 12) : \"((1+11)*3)-12\",\n    (1, 5, 10, 11) : \"10/(5/(1+11))\",\n    (1, 6, 11, 12) : \"12/(6/(1+11))\",\n    (1, 7, 9, 11) : \"(1+11)*(9-7)\",\n    (1, 8, 10, 11) : \"(1+11)*(10-8)\",\n    (1, 9, 11, 11) : \"(1+11)*(11-9)\",\n    (1, 11, 12, 12) : \"((1-11)+12)*12\",\n    (1, 8, 11, 13) : \"((1-11)+13)*8\",\n    (1, 11, 11, 13) : \"(1+11)*(13-11)\",\n    (1, 11, 12, 13) : \"(13-(1*11))*12\",\n    (1, 2, 2, 12) : \"2-((1-12)*2)\",\n    (1, 12, 12, 13) : \"((1-12)+13)*12\",\n    (1, 2, 4, 13) : \"(1-13)*(2-4)\",\n    (1, 3, 12, 13) : \"(1-13)+(3*12)\",\n    (1, 4, 9, 13) : \"(1-13)+(4*9)\",\n    (1, 7, 12, 13) : \"12/(7/(1+13))\",\n    (1, 9, 11, 13) : \"(1-13)*(9-11)\",\n    (1, 11, 13, 13) : \"(1-13)*(11-13)\",\n    (1, 2, 4, 6) : \"6/((2-1)/4)\",\n    (2, 2, 2, 3) : \"((2*2)*2)*3\",\n    (2, 2, 2, 4) : \"((2*2)+2)*4\",\n    (2, 2, 2, 8) : \"((2/2)+2)*8\",\n    (2, 2, 2, 10) : \"(2*2)+(2*10)\",\n    (2, 2, 2, 12) : \"12/((2/2)/2)\",\n    (2, 2, 3, 3) : \"(2*2)*(3+3)\",\n    (2, 2, 3, 6) : \"((2/2)+3)*6\",\n    (2, 2, 3, 8) : \"8/((2/2)/3)\",\n    (2, 2, 3, 12) : \"(3-(2/2))*12\",\n    (2, 2, 3, 4) : \"((2*2)+4)*3\",\n    (2, 2, 4, 5) : \"(2*2)+(4*5)\",\n    (2, 2, 4, 6) : \"6/((2/2)/4)\",\n    (2, 2, 4, 8) : \"(4-(2/2))*8\",\n    (2, 2, 5, 6) : \"(5-(2/2))*6\",\n    (2, 2, 6, 12) : \"(6-(2*2))*12\",\n    (1, 2, 2, 7) : \"(2*2)*(7-1)\",\n    (2, 2, 3, 7) : \"((2/2)+7)*3\",\n    (2, 2, 4, 7) : \"(7-(2/2))*4\",\n    (2, 2, 7, 8) : \"(7-(2*2))*8\",\n    (2, 2, 7, 13) : \"((2*2)+7)+13\",\n    (2, 2, 6, 8) : \"(8-(2*2))*6\",\n    (2, 2, 8, 8) : \"((2*2)*8)-8\",\n    (2, 2, 8, 12) : \"12/((2*2)/8)\",\n    (2, 2, 3, 9) : \"(9-(2/2))*3\",\n    (2, 2, 9, 11) : \"((2*2)+9)+11\",\n    (2, 2, 9, 12) : \"((2*2)*9)-12\",\n    (2, 2, 4, 10) : \"(10-(2*2))*4\",\n    (2, 2, 10, 10) : \"((2*2)+10)+10\",\n    (2, 2, 10, 13) : \"((2/2)+10)+13\",\n    (2, 2, 2, 11) : \"((2/2)+11)*2\",\n    (2, 2, 5, 11) : \"(2*2)*(11-5)\",\n    (2, 2, 11, 12) : \"((2/2)+11)+12\",\n    (2, 2, 11, 13) : \"(11/(2/2))+13\",\n    (2, 2, 12, 12) : \"(12/(2/2))+12\",\n    (2, 2, 12, 13) : \"13-((2/2)-12)\",\n    (2, 2, 2, 13) : \"(13-(2/2))*2\",\n    (2, 3, 3, 3) : \"((2+3)+3)*3\",\n    (2, 3, 3, 6) : \"((2*3)*3)+6\",\n    (2, 3, 3, 8) : \"((2*3)-3)*8\",\n    (2, 3, 3, 9) : \"((2+3)*3)+9\",\n    (2, 3, 3, 12) : \"((2/3)*3)*12\",\n    (2, 3, 4, 4) : \"4/((2/3)/4)\",\n    (2, 3, 4, 8) : \"((2-3)+4)*8\",\n    (2, 3, 4, 9) : \"((2/3)*4)*9\",\n    (2, 3, 4, 12) : \"((2*3)-4)*12\",\n    (2, 3, 4, 5) : \"(5-(2-3))*4\",\n    (2, 3, 5, 5) : \"(2-3)+(5*5)\",\n    (2, 3, 5, 6) : \"((2*3)*5)-6\",\n    (2, 3, 5, 13) : \"((2*3)+5)+13\",\n    (2, 3, 6, 6) : \"((2/3)*6)*6\",\n    (2, 3, 6, 12) : \"((2*3)*6)-12\",\n    (2, 3, 6, 13) : \"((2+3)+6)+13\",\n    (2, 3, 3, 7) : \"(2*3)*(7-3)\",\n    (2, 3, 4, 7) : \"((2-3)+7)*4\",\n    (2, 3, 7, 11) : \"((2*3)+7)+11\",\n    (2, 3, 7, 12) : \"(7-(2+3))*12\",\n    (2, 3, 8, 8) : \"(8-(2+3))*8\",\n    (2, 3, 8, 10) : \"((2*3)+8)+10\",\n    (2, 3, 8, 11) : \"((2+3)+8)+11\",\n    (2, 3, 8, 12) : \"(8/(2/3))+12\",\n    (2, 3, 5, 9) : \"(2*3)*(9-5)\",\n    (2, 3, 6, 9) : \"(9-(2+3))*6\",\n    (2, 3, 8, 9) : \"(9-(2*3))*8\",\n    (2, 3, 9, 9) : \"((2*3)+9)+9\",\n    (2, 3, 9, 10) : \"((2+3)+9)+10\",\n    (2, 3, 6, 10) : \"(10-(2*3))*6\",\n    (2, 3, 10, 12) : \"12/((2+3)/10)\",\n    (2, 3, 10, 13) : \"13-((2-3)-10)\",\n    (2, 2, 3, 11) : \"(11-(2-3))*2\",\n    (2, 3, 4, 11) : \"(11-(2+3))*4\",\n    (2, 3, 11, 12) : \"12-((2-3)-11)\",\n    (2, 3, 11, 13) : \"13-(11/(2-3))\",\n    (2, 3, 12, 12) : \"12/((2*3)/12)\",\n    (2, 3, 12, 13) : \"((2-3)+12)+13\",\n    (2, 2, 3, 13) : \"((2-3)+13)*2\",\n    (2, 3, 3, 13) : \"(13-(2+3))*3\",\n    (2, 3, 9, 13) : \"(2*3)*(13-9)\",\n    (2, 2, 4, 4) : \"((2*4)-2)*4\",\n    (2, 2, 4, 9) : \"(2+4)+(2*9)\",\n    (2, 2, 4, 12) : \"((2+4)*2)+12\",\n    (2, 2, 4, 13) : \"(2-4)+(2*13)\",\n    (2, 3, 4, 6) : \"((2+4)*3)+6\",\n    (2, 3, 4, 13) : \"((2*4)+3)+13\",\n    (2, 4, 4, 4) : \"(2*4)+(4*4)\",\n    (2, 4, 4, 6) : \"((2*4)-4)*6\",\n    (2, 4, 4, 8) : \"((2*4)*4)-8\",\n    (2, 4, 4, 12) : \"((2/4)*4)*12\",\n    (2, 4, 5, 6) : \"((2+4)*5)-6\",\n    (2, 4, 5, 8) : \"((2*4)-5)*8\",\n    (2, 4, 5, 11) : \"((2*4)+5)+11\",\n    (2, 4, 5, 13) : \"((2+4)+5)+13\",\n    (2, 4, 6, 6) : \"((2-4)+6)*6\",\n    (2, 4, 6, 8) : \"((2/4)*6)*8\",\n    (2, 4, 6, 10) : \"((2*4)+6)+10\",\n    (2, 4, 6, 12) : \"(6/(2/4))+12\",\n    (2, 4, 4, 7) : \"(2*4)*(7-4)\",\n    (2, 4, 7, 9) : \"((2*4)+7)+9\",\n    (2, 4, 7, 10) : \"(7/(2/4))+10\",\n    (2, 4, 7, 11) : \"((2+4)+7)+11\",\n    (2, 4, 8, 8) : \"(8/(2/4))+8\",\n    (2, 4, 8, 10) : \"((2+4)+8)+10\",\n    (2, 4, 8, 12) : \"(8-(2+4))*12\",\n    (2, 4, 5, 9) : \"(2+4)*(9-5)\",\n    (2, 4, 6, 9) : \"(9/(2/4))+6\",\n    (2, 4, 8, 9) : \"(9-(2+4))*8\",\n    (2, 4, 9, 9) : \"((2+4)+9)+9\",\n    (2, 4, 9, 13) : \"13-((2-4)-9)\",\n    (2, 3, 4, 10) : \"((2-4)+10)*3\",\n    (2, 4, 4, 10) : \"(10/(2/4))+4\",\n    (2, 4, 10, 12) : \"(10-(2*4))*12\",\n    (2, 2, 4, 11) : \"(11/(2/4))+2\",\n    (2, 4, 8, 11) : \"(11-(2*4))*8\",\n    (2, 4, 11, 11) : \"11-((2-4)-11)\",\n    (2, 4, 9, 12) : \"(2*4)*(12-9)\",\n    (2, 4, 12, 12) : \"12/((2+4)/12)\",\n    (2, 4, 10, 13) : \"(2*4)*(13-10)\",\n    (2, 4, 13, 13) : \"((2-4)+13)+13\",\n    (2, 2, 2, 5) : \"((2*5)+2)*2\",\n    (2, 2, 3, 5) : \"((2*5)-2)*3\",\n    (2, 2, 5, 7) : \"(2*5)+(2*7)\",\n    (2, 2, 5, 10) : \"((2/5)+2)*10\",\n    (2, 2, 5, 12) : \"((2*5)+2)+12\",\n    (2, 3, 3, 5) : \"((2+5)*3)+3\",\n    (2, 3, 5, 11) : \"((2*5)+3)+11\",\n    (2, 4, 4, 5) : \"((2*5)-4)*4\",\n    (2, 4, 5, 10) : \"((2*5)+4)+10\",\n    (2, 4, 5, 12) : \"12-((2-5)*4)\",\n    (2, 2, 5, 5) : \"((2+5)+5)*2\",\n    (2, 5, 5, 9) : \"((2*5)+5)+9\",\n    (2, 5, 5, 11) : \"((2+5)*5)-11\",\n    (2, 5, 5, 12) : \"((2/5)*5)*12\",\n    (2, 5, 5, 13) : \"(2-5)*(5-13)\",\n    (2, 5, 6, 6) : \"((2*5)-6)*6\",\n    (2, 5, 6, 8) : \"((2*5)+6)+8\",\n    (2, 5, 6, 9) : \"(6/(2/5))+9\",\n    (2, 5, 6, 10) : \"(2/5)*(6*10)\",\n    (2, 5, 6, 11) : \"((2+5)+6)+11\",\n    (2, 3, 5, 7) : \"3-((2-5)*7)\",\n    (2, 5, 6, 7) : \"((2-5)+7)*6\",\n    (2, 5, 7, 7) : \"((2*5)+7)+7\",\n    (2, 5, 7, 8) : \"((2*5)-7)*8\",\n    (2, 5, 7, 10) : \"((2+5)+7)+10\",\n    (2, 5, 8, 9) : \"((2+5)+8)+9\",\n    (2, 5, 8, 12) : \"((2*5)-8)*12\",\n    (2, 5, 8, 13) : \"13-((2-5)-8)\",\n    (2, 2, 5, 9) : \"(9-(2-5))*2\",\n    (2, 5, 9, 12) : \"12-((2-5)-9)\",\n    (1, 2, 5, 10) : \"(10/(2/5))-1\",\n    (2, 5, 8, 10) : \"(10-(2+5))*8\",\n    (2, 5, 10, 11) : \"11-((2-5)-10)\",\n    (2, 5, 6, 12) : \"(12/(2/5))-6\",\n    (2, 5, 12, 12) : \"(12-(2*5))*12\",\n    (1, 2, 6, 13) : \"13-(1-(2*6))\",\n    (2, 2, 6, 6) : \"(2*6)+(2*6)\",\n    (2, 2, 6, 10) : \"((2*6)+2)+10\",\n    (2, 4, 6, 7) : \"(2-6)+(4*7)\",\n    (2, 6, 6, 6) : \"(6/(2/6))+6\",\n    (2, 6, 6, 10) : \"((2+6)+6)+10\",\n    (2, 6, 6, 12) : \"((2/6)*6)*12\",\n    (2, 3, 6, 7) : \"(7/(2/6))+3\",\n    (2, 6, 7, 8) : \"((2-6)+7)*8\",\n    (2, 6, 7, 9) : \"((2+6)+7)+9\",\n    (2, 6, 7, 13) : \"(2-6)*(7-13)\",\n    (2, 6, 6, 8) : \"((2*6)-8)*6\",\n    (2, 6, 8, 8) : \"((2+6)+8)+8\",\n    (2, 6, 8, 9) : \"((2/6)*8)*9\",\n    (2, 6, 8, 12) : \"12-((2-6)-8)\",\n    (2, 6, 6, 9) : \"(2+6)*(9-6)\",\n    (2, 6, 9, 11) : \"11-((2-6)-9)\",\n    (2, 6, 7, 10) : \"(2+6)*(10-7)\",\n    (2, 6, 8, 10) : \"(2*6)*(10-8)\",\n    (2, 6, 10, 10) : \"10-((2-6)-10)\",\n    (2, 6, 10, 12) : \"((2*6)-10)*12\",\n    (2, 6, 8, 11) : \"(11-(2+6))*8\",\n    (2, 6, 9, 12) : \"(2+6)*(12-9)\",\n    (2, 6, 12, 12) : \"(12/(2/6))-12\",\n    (2, 6, 10, 13) : \"(2+6)*(13-10)\",\n    (2, 6, 11, 13) : \"(2*6)*(13-11)\",\n    (1, 2, 7, 11) : \"11-(1-(2*7))\",\n    (2, 2, 2, 7) : \"((2*7)-2)*2\",\n    (2, 2, 6, 7) : \"((2+7)*2)+6\",\n    (2, 2, 7, 12) : \"12-(2-(2*7))\",\n    (2, 3, 7, 7) : \"((2*7)+3)+7\",\n    (2, 3, 7, 8) : \"8/(3/(2+7))\",\n    (2, 3, 7, 9) : \"9-((2-7)*3)\",\n    (2, 3, 7, 13) : \"13-(3-(2*7))\",\n    (2, 4, 7, 12) : \"((2+7)*4)-12\",\n    (2, 5, 5, 7) : \"((2*7)+5)+5\",\n    (2, 2, 7, 7) : \"(7-(2-7))*2\",\n    (2, 7, 7, 8) : \"((2+7)+7)+8\",\n    (2, 7, 7, 12) : \"((2/7)*7)*12\",\n    (2, 4, 7, 8) : \"(8/(2/7))-4\",\n    (2, 7, 8, 8) : \"((2-7)+8)*8\",\n    (2, 7, 8, 11) : \"11-((2-7)-8)\",\n    (2, 7, 9, 10) : \"10-((2-7)-9)\",\n    (2, 7, 10, 11) : \"(10/(2/7))-11\",\n    (2, 7, 11, 12) : \"(11-(2+7))*12\",\n    (2, 7, 8, 12) : \"(12-(2+7))*8\",\n    (2, 7, 12, 12) : \"((2*7)-12)*12\",\n    (2, 2, 8, 10) : \"10-(2-(2*8))\",\n    (2, 3, 5, 8) : \"((2*8)+3)+5\",\n    (2, 3, 6, 8) : \"6-((2-8)*3)\",\n    (2, 8, 8, 8) : \"(8/(2/8))-8\",\n    (2, 8, 8, 10) : \"10-((2-8)-8)\",\n    (2, 8, 8, 12) : \"((2/8)*8)*12\",\n    (2, 8, 8, 9) : \"((2-8)+9)*8\",\n    (2, 8, 9, 9) : \"9-((2-8)-9)\",\n    (2, 8, 9, 12) : \"(9/(2/8))-12\",\n    (2, 8, 9, 13) : \"(2-8)*(9-13)\",\n    (2, 8, 12, 12) : \"(12-(2+8))*12\",\n    (2, 8, 8, 13) : \"((2*8)-13)*8\",\n    (2, 2, 2, 9) : \"((2+9)*2)+2\",\n    (2, 2, 8, 9) : \"8-(2-(2*9))\",\n    (2, 2, 9, 10) : \"10-((2-9)*2)\",\n    (2, 4, 9, 10) : \"10-(4-(2*9))\",\n    (2, 5, 9, 11) : \"11-(5-(2*9))\",\n    (2, 2, 6, 9) : \"((2*9)-6)*2\",\n    (2, 7, 9, 13) : \"13-(7-(2*9))\",\n    (2, 9, 9, 12) : \"((2/9)*9)*12\",\n    (2, 8, 9, 10) : \"((2-9)+10)*8\",\n    (2, 9, 12, 13) : \"(13-(2+9))*12\",\n    (2, 3, 7, 10) : \"7-(3-(2*10))\",\n    (2, 3, 5, 10) : \"(2+10)*(5-3)\",\n    (2, 5, 5, 10) : \"(5-(2/10))*5\",\n    (2, 5, 9, 10) : \"9-(5-(2*10))\",\n    (2, 5, 10, 10) : \"10/(5/(2+10))\",\n    (2, 6, 9, 10) : \"(2-10)*(6-9)\",\n    (2, 7, 10, 10) : \"(2-10)*(7-10)\",\n    (2, 8, 10, 11) : \"(2-10)*(8-11)\",\n    (2, 8, 10, 12) : \"12-(8-(2*10))\",\n    (2, 9, 10, 12) : \"(2-10)*(9-12)\",\n    (2, 9, 10, 13) : \"13-(9-(2*10))\",\n    (2, 8, 10, 10) : \"(2+10)*(10-8)\",\n    (2, 10, 10, 12) : \"((2/10)*10)*12\",\n    (2, 10, 10, 13) : \"(2-10)*(10-13)\",\n    (2, 9, 10, 11) : \"(2+10)*(11-9)\",\n    (2, 10, 11, 13) : \"(2+10)*(13-11)\",\n    (2, 2, 6, 11) : \"6-((2-11)*2)\",\n    (2, 2, 11, 11) : \"((2/11)+2)*11\",\n    (2, 3, 11, 11) : \"(2-11)+(3*11)\",\n    (2, 4, 6, 11) : \"6-(4-(2*11))\",\n    (2, 5, 7, 11) : \"7-(5-(2*11))\",\n    (2, 3, 6, 11) : \"(2*11)+(6/3)\",\n    (2, 7, 9, 11) : \"9-(7-(2*11))\",\n    (2, 9, 11, 11) : \"11-(9-(2*11))\",\n    (2, 2, 10, 11) : \"((2*11)-10)*2\",\n    (2, 10, 11, 12) : \"12-(10-(2*11))\",\n    (2, 11, 11, 12) : \"((2/11)*11)*12\",\n    (2, 11, 11, 13) : \"13-(11-(2*11))\",\n    (2, 6, 11, 12) : \"(2*11)+(12/6)\",\n    (2, 8, 11, 12) : \"((2-11)+12)*8\",\n    (2, 6, 7, 12) : \"(2*12)/(7-6)\",\n    (2, 11, 12, 12) : \"(2*12)/(12-11)\",\n    (2, 12, 12, 12) : \"((2/12)*12)*12\",\n    (2, 8, 12, 13) : \"((2-12)+13)*8\",\n    (2, 12, 12, 13) : \"(2*12)/(13-12)\",\n    (2, 12, 13, 13) : \"13/(13/(2*12))\",\n    (2, 2, 6, 13) : \"((2+13)*2)-6\",\n    (2, 2, 13, 13) : \"(2-(2/13))*13\",\n    (2, 4, 6, 13) : \"(2*13)+(4-6)\",\n    (2, 5, 7, 13) : \"(2*13)+(5-7)\",\n    (2, 6, 8, 13) : \"(2*13)+(6-8)\",\n    (2, 4, 8, 13) : \"(2*13)-(8/4)\",\n    (2, 8, 10, 13) : \"(2*13)+(8-10)\",\n    (2, 9, 11, 13) : \"(2*13)+(9-11)\",\n    (2, 5, 10, 13) : \"(2*13)-(10/5)\",\n    (2, 10, 12, 13) : \"(2*13)+(10-12)\",\n    (2, 11, 13, 13) : \"(2*13)+(11-13)\",\n    (2, 6, 12, 13) : \"(2*13)-(12/6)\",\n    (3, 3, 3, 3) : \"((3*3)*3)-3\",\n    (3, 3, 3, 4) : \"((3*3)-3)*4\",\n    (3, 3, 3, 5) : \"(3*3)+(3*5)\",\n    (3, 3, 3, 6) : \"((3/3)+3)*6\",\n    (3, 3, 3, 8) : \"8/((3/3)/3)\",\n    (3, 3, 3, 12) : \"(3-(3/3))*12\",\n    (3, 3, 4, 6) : \"6/((3/3)/4)\",\n    (3, 3, 4, 8) : \"(4-(3/3))*8\",\n    (3, 3, 4, 11) : \"((3*3)+4)+11\",\n    (3, 3, 4, 12) : \"((3*3)*4)-12\",\n    (3, 3, 4, 5) : \"((3/3)+5)*4\",\n    (3, 3, 5, 6) : \"(5-(3/3))*6\",\n    (3, 3, 5, 10) : \"((3*3)+5)+10\",\n    (3, 3, 5, 13) : \"((3+3)+5)+13\",\n    (3, 3, 6, 8) : \"((3*3)-6)*8\",\n    (3, 3, 6, 9) : \"((3*3)+6)+9\",\n    (3, 3, 6, 12) : \"((3+3)*6)-12\",\n    (3, 3, 3, 7) : \"((3/3)+7)*3\",\n    (3, 3, 4, 7) : \"(7-(3/3))*4\",\n    (3, 3, 7, 8) : \"((3*3)+7)+8\",\n    (3, 3, 7, 11) : \"((3+3)+7)+11\",\n    (3, 3, 7, 12) : \"((3*3)-7)*12\",\n    (3, 3, 8, 10) : \"((3+3)+8)+10\",\n    (3, 3, 8, 12) : \"(8-(3+3))*12\",\n    (3, 3, 3, 9) : \"(9-(3/3))*3\",\n    (3, 3, 5, 9) : \"(3+3)*(9-5)\",\n    (3, 3, 8, 9) : \"(9-(3+3))*8\",\n    (3, 3, 9, 9) : \"((3+3)+9)+9\",\n    (3, 3, 6, 10) : \"(10-(3+3))*6\",\n    (3, 3, 10, 13) : \"((3/3)+10)+13\",\n    (2, 3, 3, 11) : \"((3/3)+11)*2\",\n    (3, 3, 11, 12) : \"((3/3)+11)+12\",\n    (3, 3, 11, 13) : \"(11/(3/3))+13\",\n    (3, 3, 12, 12) : \"(12/(3/3))+12\",\n    (3, 3, 12, 13) : \"13-((3/3)-12)\",\n    (3, 3, 6, 13) : \"(13-(3*3))*6\",\n    (3, 3, 9, 13) : \"(3+3)*(13-9)\",\n    (1, 3, 4, 6) : \"6/(1-(3/4))\",\n    (3, 3, 4, 4) : \"(3*4)+(3*4)\",\n    (3, 3, 4, 9) : \"((3*4)+3)+9\",\n    (3, 4, 4, 4) : \"((3+4)*4)-4\",\n    (3, 4, 4, 8) : \"((3/4)*4)*8\",\n    (3, 4, 4, 13) : \"((3+4)+4)+13\",\n    (3, 4, 4, 5) : \"(5-(3-4))*4\",\n    (3, 4, 5, 5) : \"(3-4)+(5*5)\",\n    (3, 4, 5, 6) : \"((3-4)+5)*6\",\n    (3, 4, 5, 7) : \"((3*4)+5)+7\",\n    (3, 4, 5, 10) : \"10/(5/(3*4))\",\n    (3, 4, 5, 11) : \"((3+4)*5)-11\",\n    (3, 4, 5, 12) : \"((3+4)-5)*12\",\n    (3, 4, 4, 6) : \"((3*4)-6)*4\",\n    (3, 4, 6, 6) : \"((3*4)+6)+6\",\n    (3, 4, 6, 11) : \"((3+4)+6)+11\",\n    (3, 4, 6, 12) : \"12/(6/(3*4))\",\n    (3, 4, 4, 7) : \"((3-4)+7)*4\",\n    (3, 4, 7, 10) : \"((3+4)+7)+10\",\n    (3, 4, 6, 8) : \"((3*4)-8)*6\",\n    (3, 4, 8, 9) : \"((3+4)+8)+9\",\n    (3, 4, 7, 9) : \"(3*4)*(9-7)\",\n    (3, 4, 9, 12) : \"(9/(3/4))+12\",\n    (3, 4, 8, 10) : \"(3*4)*(10-8)\",\n    (3, 4, 10, 12) : \"((3*4)-10)*12\",\n    (3, 4, 10, 13) : \"13-((3-4)-10)\",\n    (3, 4, 9, 11) : \"(3*4)*(11-9)\",\n    (3, 4, 11, 12) : \"12-((3-4)-11)\",\n    (3, 4, 11, 13) : \"13-(11/(3-4))\",\n    (3, 4, 8, 12) : \"(12/(3/4))+8\",\n    (3, 4, 12, 12) : \"12-(12/(3-4))\",\n    (3, 4, 12, 13) : \"((3-4)+12)+13\",\n    (1, 3, 5, 10) : \"10-(1-(3*5))\",\n    (3, 3, 5, 12) : \"12-(3-(3*5))\",\n    (3, 4, 5, 8) : \"((3+5)*4)-8\",\n    (3, 4, 5, 13) : \"13-(4-(3*5))\",\n    (3, 5, 5, 8) : \"((3/5)*5)*8\",\n    (3, 5, 5, 11) : \"((3+5)+5)+11\",\n    (3, 5, 6, 6) : \"((3-5)+6)*6\",\n    (3, 5, 6, 10) : \"((3+5)+6)+10\",\n    (3, 5, 6, 12) : \"12-((3-5)*6)\",\n    (3, 3, 5, 7) : \"((3*5)-7)*3\",\n    (3, 5, 7, 9) : \"((3+5)+7)+9\",\n    (3, 5, 7, 10) : \"10-((3-5)*7)\",\n    (3, 5, 8, 8) : \"8-((3-5)*8)\",\n    (3, 4, 5, 9) : \"((3*5)-9)*4\",\n    (3, 5, 6, 9) : \"6-((3-5)*9)\",\n    (3, 5, 9, 9) : \"(9/(3/5))+9\",\n    (3, 5, 9, 13) : \"13-((3-5)-9)\",\n    (3, 5, 10, 12) : \"12-((3-5)-10)\",\n    (3, 5, 6, 11) : \"((3*5)-11)*6\",\n    (3, 5, 8, 11) : \"(11-(3+5))*8\",\n    (3, 5, 11, 11) : \"11-((3-5)-11)\",\n    (3, 5, 8, 12) : \"((3*5)-12)*8\",\n    (3, 5, 9, 12) : \"(3+5)*(12-9)\",\n    (3, 5, 10, 13) : \"(3+5)*(13-10)\",\n    (3, 5, 12, 13) : \"((3*5)-13)*12\",\n    (3, 5, 13, 13) : \"((3-5)+13)+13\",\n    (3, 3, 6, 11) : \"(3-6)*(3-11)\",\n    (3, 4, 6, 10) : \"10-(4-(3*6))\",\n    (3, 5, 6, 13) : \"(3-6)*(5-13)\",\n    (3, 6, 6, 6) : \"6-((3-6)*6)\",\n    (3, 6, 6, 8) : \"((3/6)*6)*8\",\n    (3, 6, 6, 9) : \"((3+6)+6)+9\",\n    (3, 6, 6, 12) : \"(6/(3/6))+12\",\n    (3, 3, 6, 7) : \"3-((3-6)*7)\",\n    (3, 6, 6, 7) : \"((3-6)+7)*6\",\n    (3, 6, 7, 8) : \"((3+6)+7)+8\",\n    (3, 6, 7, 10) : \"(7/(3/6))+10\",\n    (3, 6, 7, 12) : \"((3+6)-7)*12\",\n    (3, 6, 7, 13) : \"13-(7-(3*6))\",\n    (3, 6, 8, 8) : \"(8/(3/6))+8\",\n    (3, 6, 8, 13) : \"13-((3-6)-8)\",\n    (3, 4, 6, 9) : \"((3-6)+9)*4\",\n    (3, 6, 9, 12) : \"12/(9/(3*6))\",\n    (3, 6, 10, 11) : \"11-((3-6)-10)\",\n    (3, 6, 11, 12) : \"(11-(3+6))*12\",\n    (3, 6, 8, 12) : \"(12-(3+6))*8\",\n    (3, 6, 6, 13) : \"(13-(3+6))*6\",\n    (3, 3, 7, 7) : \"((3/7)+3)*7\",\n    (3, 3, 7, 9) : \"(3-7)*(3-9)\",\n    (3, 4, 7, 7) : \"7-(4-(3*7))\",\n    (3, 4, 7, 8) : \"8-((3-7)*4)\",\n    (3, 5, 7, 8) : \"8-(5-(3*7))\",\n    (3, 5, 7, 11) : \"(3-7)*(5-11)\",\n    (3, 5, 7, 12) : \"12/(5/(3+7))\",\n    (3, 6, 7, 9) : \"9-(6-(3*7))\",\n    (3, 7, 7, 7) : \"((3+7)+7)+7\",\n    (3, 7, 7, 8) : \"((3/7)*7)*8\",\n    (3, 7, 7, 10) : \"10-(7-(3*7))\",\n    (3, 7, 7, 13) : \"(3-7)*(7-13)\",\n    (3, 7, 8, 11) : \"11-(8-(3*7))\",\n    (3, 7, 8, 12) : \"12-((3-7)-8)\",\n    (3, 7, 9, 11) : \"11-((3-7)-9)\",\n    (3, 7, 9, 12) : \"12-(9-(3*7))\",\n    (3, 7, 10, 10) : \"10-((3-7)-10)\",\n    (3, 7, 10, 13) : \"13-(10-(3*7))\",\n    (3, 4, 7, 12) : \"(12/(3/7))-4\",\n    (3, 7, 12, 12) : \"(12-(3+7))*12\",\n    (3, 3, 7, 13) : \"((3*7)-13)*3\",\n    (3, 7, 8, 13) : \"(13-(3+7))*8\",\n    (3, 5, 6, 8) : \"(3*8)/(6-5)\",\n    (3, 7, 8, 8) : \"(3*8)/(8-7)\",\n    (3, 8, 8, 8) : \"((3/8)*8)*8\",\n    (3, 8, 8, 11) : \"11-((3-8)-8)\",\n    (3, 6, 8, 9) : \"((3-8)+9)*6\",\n    (3, 8, 8, 9) : \"(3*8)/(9-8)\",\n    (3, 8, 9, 9) : \"9/(9/(3*8))\",\n    (3, 8, 9, 10) : \"10-((3-8)-9)\",\n    (3, 8, 9, 12) : \"((3+8)-9)*12\",\n    (3, 8, 10, 10) : \"10/(10/(3*8))\",\n    (3, 4, 8, 11) : \"((3-8)+11)*4\",\n    (3, 8, 10, 11) : \"(3*8)/(11-10)\",\n    (3, 8, 11, 11) : \"11/(11/(3*8))\",\n    (3, 8, 8, 12) : \"(12/(3/8))-8\",\n    (3, 8, 11, 12) : \"(3*8)/(12-11)\",\n    (3, 8, 12, 12) : \"12/(12/(3*8))\",\n    (3, 3, 8, 13) : \"((3-8)+13)*3\",\n    (3, 8, 12, 13) : \"(3*8)/(13-12)\",\n    (3, 8, 13, 13) : \"13/(13/(3*8))\",\n    (2, 3, 9, 12) : \"12-((3-9)*2)\",\n    (3, 3, 9, 10) : \"(3-9)+(3*10)\",\n    (3, 3, 9, 12) : \"((3+9)*3)-12\",\n    (3, 5, 8, 9) : \"(3*9)+(5-8)\",\n    (3, 5, 9, 10) : \"10/(5/(3+9))\",\n    (3, 6, 9, 9) : \"(3*9)+(6-9)\",\n    (3, 6, 9, 10) : \"(3-9)*(6-10)\",\n    (3, 7, 9, 10) : \"(3*9)+(7-10)\",\n    (3, 8, 9, 11) : \"(3*9)+(8-11)\",\n    (3, 7, 9, 9) : \"(3+9)*(9-7)\",\n    (3, 9, 9, 9) : \"9-((3-9)-9)\",\n    (3, 9, 9, 12) : \"(3*9)+(9-12)\",\n    (3, 9, 9, 13) : \"(3-9)*(9-13)\",\n    (3, 9, 10, 12) : \"((3+9)-10)*12\",\n    (3, 9, 10, 13) : \"(3*9)+(10-13)\",\n    (3, 9, 9, 11) : \"(11/(3/9))-9\",\n    (3, 9, 12, 12) : \"(12/(3/9))-12\",\n    (3, 9, 11, 13) : \"(3+9)*(13-11)\",\n    (2, 2, 3, 10) : \"((3+10)*2)-2\",\n    (2, 3, 3, 10) : \"(3*10)-(2*3)\",\n    (2, 3, 10, 10) : \"10-((3-10)*2)\",\n    (3, 3, 3, 10) : \"((3*10)-3)-3\",\n    (3, 4, 10, 10) : \"(3*10)+(4-10)\",\n    (3, 5, 10, 11) : \"(3*10)+(5-11)\",\n    (3, 6, 10, 12) : \"(3*10)+(6-12)\",\n    (3, 10, 11, 12) : \"((3+10)-11)*12\",\n    (1, 3, 8, 11) : \"((3*11)-1)-8\",\n    (3, 3, 3, 11) : \"(3*11)-(3*3)\",\n    (3, 4, 7, 11) : \"(3-11)*(4-7)\",\n    (3, 6, 9, 11) : \"(3-11)*(6-9)\",\n    (3, 7, 10, 11) : \"(3-11)*(7-10)\",\n    (3, 7, 11, 12) : \"12/(7/(3+11))\",\n    (3, 9, 11, 12) : \"(3-11)*(9-12)\",\n    (3, 10, 11, 13) : \"(3-11)*(10-13)\",\n    (3, 11, 12, 12) : \"((3+11)-12)*12\",\n    (3, 6, 12, 13) : \"((3-12)+13)*6\",\n    (3, 12, 12, 13) : \"((3+12)-13)*12\",\n    (2, 3, 8, 13) : \"((3+13)*2)-8\",\n    (2, 3, 13, 13) : \"((3*13)-2)-13\",\n    (3, 4, 6, 13) : \"6/(4/(3+13))\",\n    (3, 6, 9, 13) : \"((3*13)-6)-9\",\n    (1, 4, 6, 10) : \"((4-1)*10)-6\",\n    (1, 4, 12, 12) : \"((4-1)*12)-12\",\n    (2, 4, 5, 7) : \"(4/2)*(5+7)\",\n    (3, 4, 9, 9) : \"(4/3)*(9+9)\",\n    (3, 4, 4, 9) : \"9/(3/(4+4))\",\n    (3, 4, 4, 11) : \"11-(3-(4*4))\",\n    (3, 4, 4, 12) : \"(3-(4/4))*12\",\n    (4, 4, 4, 4) : \"((4*4)+4)+4\",\n    (4, 4, 4, 6) : \"6/((4/4)/4)\",\n    (4, 4, 4, 8) : \"(4-(4/4))*8\",\n    (4, 4, 4, 12) : \"12-(4-(4*4))\",\n    (4, 4, 4, 5) : \"((4/4)+5)*4\",\n    (4, 4, 5, 6) : \"(5-(4/4))*6\",\n    (4, 4, 5, 8) : \"((4+4)-5)*8\",\n    (4, 4, 5, 11) : \"((4+4)+5)+11\",\n    (4, 4, 5, 13) : \"13-(5-(4*4))\",\n    (4, 4, 6, 9) : \"9/(6/(4*4))\",\n    (4, 4, 6, 10) : \"((4+4)+6)+10\",\n    (4, 4, 6, 12) : \"((4+4)-6)*12\",\n    (4, 4, 4, 7) : \"(7-(4/4))*4\",\n    (4, 4, 7, 9) : \"((4+4)+7)+9\",\n    (4, 4, 8, 8) : \"((4+4)+8)+8\",\n    (4, 4, 8, 12) : \"12/(8/(4*4))\",\n    (4, 4, 4, 10) : \"((4*4)-10)*4\",\n    (4, 4, 7, 10) : \"(4+4)*(10-7)\",\n    (4, 4, 10, 12) : \"(10-(4+4))*12\",\n    (4, 4, 10, 13) : \"((4/4)+10)+13\",\n    (2, 4, 4, 11) : \"((4/4)+11)*2\",\n    (4, 4, 8, 11) : \"(11-(4+4))*8\",\n    (4, 4, 11, 12) : \"((4/4)+11)+12\",\n    (4, 4, 11, 13) : \"(11/(4/4))+13\",\n    (4, 4, 9, 12) : \"(4+4)*(12-9)\",\n    (4, 4, 12, 12) : \"(12/(4/4))+12\",\n    (4, 4, 12, 13) : \"13-((4/4)-12)\",\n    (2, 4, 4, 13) : \"(13-(4/4))*2\",\n    (4, 4, 8, 13) : \"((4*4)-13)*8\",\n    (4, 4, 5, 5) : \"((4/5)+4)*5\",\n    (4, 4, 5, 12) : \"((4+5)*4)-12\",\n    (4, 5, 5, 5) : \"(4-5)+(5*5)\",\n    (4, 5, 5, 6) : \"((4/5)*5)*6\",\n    (4, 5, 5, 9) : \"9-(5-(4*5))\",\n    (4, 5, 5, 10) : \"((4+5)+5)+10\",\n    (4, 5, 6, 8) : \"((4+5)-6)*8\",\n    (4, 5, 6, 9) : \"((4+5)+6)+9\",\n    (4, 5, 6, 10) : \"10-(6-(4*5))\",\n    (4, 4, 5, 7) : \"((4-5)+7)*4\",\n    (4, 5, 7, 8) : \"((4+5)+7)+8\",\n    (4, 5, 7, 11) : \"11-(7-(4*5))\",\n    (4, 5, 7, 12) : \"((4+5)-7)*12\",\n    (4, 5, 8, 12) : \"12-(8-(4*5))\",\n    (4, 5, 9, 13) : \"13-(9-(4*5))\",\n    (4, 5, 10, 12) : \"12/(10/(4*5))\",\n    (4, 5, 10, 13) : \"13-((4-5)-10)\",\n    (4, 5, 11, 12) : \"12-((4-5)-11)\",\n    (4, 5, 11, 13) : \"13-(11/(4-5))\",\n    (4, 5, 9, 12) : \"(12/(4/5))+9\",\n    (4, 5, 12, 12) : \"12-(12/(4-5))\",\n    (4, 5, 12, 13) : \"((4-5)+12)+13\",\n    (4, 5, 6, 13) : \"(13-(4+5))*6\",\n    (4, 5, 6, 12) : \"12/(5/(4+6))\",\n    (4, 5, 6, 6) : \"(4*6)/(6-5)\",\n    (4, 6, 6, 6) : \"((4/6)*6)*6\",\n    (4, 6, 6, 8) : \"((4+6)+6)+8\",\n    (4, 6, 6, 12) : \"12-((4-6)*6)\",\n    (4, 6, 6, 7) : \"(4*6)/(7-6)\",\n    (4, 6, 7, 7) : \"7/(7/(4*6))\",\n    (4, 6, 7, 8) : \"((4+6)-7)*8\",\n    (4, 6, 7, 10) : \"10-((4-6)*7)\",\n    (4, 4, 6, 8) : \"((4-6)+8)*4\",\n    (4, 6, 8, 8) : \"8/(8/(4*6))\",\n    (4, 6, 8, 12) : \"(8/(4/6))+12\",\n    (4, 6, 6, 9) : \"6-((4-6)*9)\",\n    (4, 6, 8, 9) : \"(4*6)/(9-8)\",\n    (4, 6, 9, 9) : \"9/(9/(4*6))\",\n    (4, 6, 9, 13) : \"13-((4-6)-9)\",\n    (4, 6, 9, 10) : \"(10/(4/6))+9\",\n    (4, 6, 10, 10) : \"10/(10/(4*6))\",\n    (4, 6, 10, 12) : \"12-((4-6)-10)\",\n    (4, 6, 10, 11) : \"(4*6)/(11-10)\",\n    (4, 6, 11, 11) : \"11/(11/(4*6))\",\n    (4, 6, 11, 12) : \"(4*6)/(12-11)\",\n    (4, 6, 12, 12) : \"12/(12/(4*6))\",\n    (4, 6, 8, 13) : \"(13-(4+6))*8\",\n    (4, 6, 12, 13) : \"(4*6)/(13-12)\",\n    (4, 6, 13, 13) : \"13/(13/(4*6))\",\n    (4, 4, 7, 7) : \"(4-(4/7))*7\",\n    (4, 4, 7, 8) : \"(4*7)+(4-8)\",\n    (4, 4, 7, 12) : \"12-((4-7)*4)\",\n    (4, 5, 7, 9) : \"(4*7)+(5-9)\",\n    (4, 5, 7, 13) : \"(4-7)*(5-13)\",\n    (4, 7, 7, 11) : \"(4*7)+(7-11)\",\n    (4, 7, 8, 8) : \"((4+7)-8)*8\",\n    (4, 7, 8, 10) : \"(8/(4/7))+10\",\n    (4, 7, 8, 12) : \"(4*7)+(8-12)\",\n    (4, 7, 8, 13) : \"13-((4-7)-8)\",\n    (4, 7, 9, 12) : \"12-((4-7)-9)\",\n    (4, 7, 9, 13) : \"(4*7)+(9-13)\",\n    (4, 7, 10, 11) : \"11-((4-7)-10)\",\n    (4, 7, 12, 13) : \"(13-(4+7))*12\",\n    (4, 4, 8, 10) : \"(4-8)*(4-10)\",\n    (4, 5, 8, 10) : \"10/(5/(4+8))\",\n    (4, 5, 8, 11) : \"(4-8)*(5-11)\",\n    (4, 5, 8, 13) : \"(4*8)+(5-13)\",\n    (4, 8, 8, 8) : \"(8/(4/8))+8\",\n    (4, 8, 8, 12) : \"12-((4-8)-8)\",\n    (4, 7, 8, 9) : \"(4+8)*(9-7)\",\n    (4, 8, 8, 9) : \"((4+8)-9)*8\",\n    (4, 8, 9, 11) : \"11-((4-8)-9)\",\n    (4, 8, 9, 12) : \"(4*8)*(9/12)\",\n    (4, 8, 8, 10) : \"(4+8)*(10-8)\",\n    (4, 8, 10, 10) : \"10-((4-8)-10)\",\n    (4, 8, 10, 12) : \"((4+8)-10)*12\",\n    (4, 8, 11, 13) : \"(4+8)*(13-11)\",\n    (4, 4, 4, 9) : \"4-((4-9)*4)\",\n    (4, 4, 8, 9) : \"((4*9)-4)-8\",\n    (4, 9, 9, 10) : \"10-((4-9)-9)\",\n    (4, 8, 9, 10) : \"((4+9)-10)*8\",\n    (4, 4, 9, 11) : \"((4-9)+11)*4\",\n    (4, 9, 11, 12) : \"((4+9)-11)*12\",\n    (3, 4, 9, 13) : \"((4-9)+13)*3\",\n    (2, 4, 10, 10) : \"((4/10)+2)*10\",\n    (4, 5, 9, 10) : \"(4-10)*(5-9)\",\n    (4, 5, 10, 11) : \"((4*10)-5)-11\",\n    (4, 7, 9, 10) : \"((4*10)-7)-9\",\n    (4, 7, 10, 12) : \"12/(7/(4+10))\",\n    (4, 9, 10, 13) : \"(4-10)*(9-13)\",\n    (4, 8, 10, 11) : \"((4+10)-11)*8\",\n    (4, 10, 12, 12) : \"((4+10)-12)*12\",\n    (2, 4, 10, 11) : \"(4*11)-(2*10)\",\n    (4, 7, 11, 13) : \"((4*11)-7)-13\",\n    (4, 8, 11, 12) : \"((4*11)-8)-12\",\n    (4, 9, 11, 11) : \"((4*11)-9)-11\",\n    (4, 10, 10, 11) : \"((4*11)-10)-10\",\n    (4, 11, 12, 13) : \"((4+11)-13)*12\",\n    (4, 6, 9, 12) : \"(4-12)*(6-9)\",\n    (4, 8, 12, 12) : \"12/(8/(4+12))\",\n    (4, 9, 12, 12) : \"(4-12)*(9-12)\",\n    (4, 10, 12, 13) : \"(4-12)*(10-13)\",\n    (4, 12, 12, 12) : \"(12/(4/12))-12\",\n    (4, 8, 12, 13) : \"((4+12)-13)*8\",\n    (4, 4, 7, 13) : \"(4*13)-(4*7)\",\n    (2, 3, 5, 12) : \"12/(3-(5/2))\",\n    (3, 5, 5, 7) : \"(5-3)*(5+7)\",\n    (1, 4, 5, 6) : \"6/((5/4)-1)\",\n    (1, 5, 5, 12) : \"((5/5)+1)*12\",\n    (2, 4, 5, 5) : \"((5+5)*2)+4\",\n    (2, 5, 5, 8) : \"((5/5)+2)*8\",\n    (3, 3, 5, 5) : \"(5*5)-(3/3)\",\n    (3, 5, 5, 6) : \"((5/5)+3)*6\",\n    (3, 5, 5, 12) : \"(3-(5/5))*12\",\n    (4, 5, 5, 8) : \"(4-(5/5))*8\",\n    (5, 5, 5, 5) : \"(5*5)-(5/5)\",\n    (5, 5, 5, 6) : \"(5-(5/5))*6\",\n    (5, 5, 5, 9) : \"((5+5)+5)+9\",\n    (5, 5, 5, 12) : \"12/(5/(5+5))\",\n    (5, 5, 6, 6) : \"(5*5)-(6/6)\",\n    (5, 5, 6, 7) : \"(5*5)+(6-7)\",\n    (5, 5, 6, 8) : \"((5+5)+6)+8\",\n    (4, 5, 5, 7) : \"(7-(5/5))*4\",\n    (5, 5, 7, 7) : \"(5*5)-(7/7)\",\n    (5, 5, 7, 8) : \"(5*5)+(7-8)\",\n    (5, 5, 8, 8) : \"(5*5)-(8/8)\",\n    (5, 5, 8, 9) : \"(5*5)+(8-9)\",\n    (5, 5, 8, 12) : \"((5+5)-8)*12\",\n    (3, 5, 5, 9) : \"(9-(5/5))*3\",\n    (5, 5, 9, 9) : \"(5*5)-(9/9)\",\n    (5, 5, 9, 10) : \"(5*5)+(9-10)\",\n    (5, 5, 10, 10) : \"(5*5)-(10/10)\",\n    (5, 5, 10, 11) : \"(5*5)+(10-11)\",\n    (5, 5, 10, 13) : \"((5/5)+10)+13\",\n    (5, 5, 11, 11) : \"(5*5)-(11/11)\",\n    (5, 5, 11, 12) : \"((5/5)+11)+12\",\n    (5, 5, 11, 13) : \"(11/(5/5))+13\",\n    (5, 5, 12, 12) : \"(12/(5/5))+12\",\n    (5, 5, 12, 13) : \"13-((5/5)-12)\",\n    (5, 5, 8, 13) : \"(13-(5+5))*8\",\n    (5, 5, 13, 13) : \"(5*5)-(13/13)\",\n    (5, 5, 6, 11) : \"(5*6)+(5-11)\",\n    (5, 6, 6, 7) : \"((5+6)+6)+7\",\n    (5, 6, 6, 12) : \"(5*6)+(6-12)\",\n    (3, 5, 6, 7) : \"(7-(5-6))*3\",\n    (4, 5, 6, 7) : \"((5-6)+7)*4\",\n    (5, 6, 7, 13) : \"(5*6)+(7-13)\",\n    (5, 6, 8, 8) : \"((5+6)-8)*8\",\n    (5, 6, 8, 10) : \"(5*6)*(8/10)\",\n    (5, 6, 9, 12) : \"((5+6)-9)*12\",\n    (5, 6, 10, 12) : \"(10/(5/6))+12\",\n    (5, 6, 10, 13) : \"13-((5-6)-10)\",\n    (5, 6, 11, 12) : \"12-((5-6)-11)\",\n    (5, 6, 11, 13) : \"13-(11/(5-6))\",\n    (5, 6, 12, 12) : \"12-(12/(5-6))\",\n    (5, 6, 12, 13) : \"((5-6)+12)+13\",\n    (2, 5, 6, 13) : \"((5-6)+13)*2\",\n    (1, 5, 7, 10) : \"((5*7)-1)-10\",\n    (2, 5, 7, 9) : \"((5*7)-2)-9\",\n    (4, 5, 7, 7) : \"((5*7)-4)-7\",\n    (5, 5, 7, 10) : \"10/(5/(5+7))\",\n    (5, 6, 7, 12) : \"12-((5-7)*6)\",\n    (5, 7, 7, 10) : \"10-((5-7)*7)\",\n    (5, 6, 7, 8) : \"((5+7)-8)*6\",\n    (5, 7, 8, 8) : \"8-((5-7)*8)\",\n    (5, 6, 7, 9) : \"6-((5-7)*9)\",\n    (5, 7, 7, 9) : \"(5+7)*(9-7)\",\n    (5, 7, 8, 9) : \"((5+7)-9)*8\",\n    (5, 7, 9, 13) : \"13-((5-7)-9)\",\n    (4, 5, 7, 10) : \"4-((5-7)*10)\",\n    (5, 7, 8, 10) : \"(5+7)*(10-8)\",\n    (5, 7, 10, 10) : \"(10/(5/7))+10\",\n    (5, 7, 10, 12) : \"12-((5-7)-10)\",\n    (5, 7, 9, 11) : \"(5+7)*(11-9)\",\n    (5, 7, 11, 11) : \"11-((5-7)-11)\",\n    (5, 7, 11, 13) : \"(5+7)*(13-11)\",\n    (5, 7, 13, 13) : \"((5-7)+13)+13\",\n    (2, 2, 5, 8) : \"((5+8)*2)-2\",\n    (2, 5, 8, 8) : \"(5*8)-(2*8)\",\n    (3, 5, 8, 13) : \"((5*8)-3)-13\",\n    (5, 5, 8, 11) : \"((5*8)-5)-11\",\n    (5, 6, 6, 8) : \"6-((5-8)*6)\",\n    (5, 8, 8, 8) : \"((5*8)-8)-8\",\n    (5, 8, 8, 13) : \"13-((5-8)-8)\",\n    (4, 5, 8, 9) : \"((5-8)+9)*4\",\n    (5, 6, 8, 9) : \"((5+8)-9)*6\",\n    (5, 8, 9, 12) : \"12-((5-8)-9)\",\n    (5, 8, 8, 10) : \"(10/(5/8))+8\",\n    (5, 8, 10, 11) : \"11-((5-8)-10)\",\n    (5, 8, 11, 12) : \"((5+8)-11)*12\",\n    (5, 5, 9, 11) : \"(5-9)*(5-11)\",\n    (5, 7, 9, 12) : \"12/(7/(5+9))\",\n    (5, 8, 9, 13) : \"((5*9)-8)-13\",\n    (5, 9, 9, 11) : \"11-((5-9)-9)\",\n    (5, 9, 9, 12) : \"((5*9)-9)-12\",\n    (5, 6, 9, 10) : \"(10/(5/9))+6\",\n    (5, 9, 10, 10) : \"10-((5-9)-10)\",\n    (5, 9, 10, 11) : \"((5*9)-10)-11\",\n    (5, 8, 9, 11) : \"((5+9)-11)*8\",\n    (5, 9, 12, 12) : \"((5+9)-12)*12\",\n    (4, 4, 5, 10) : \"4-((5-10)*4)\",\n    (5, 5, 8, 10) : \"8/(5/(5+10))\",\n    (4, 5, 10, 10) : \"(10/(5/10))+4\",\n    (5, 6, 10, 11) : \"((5+10)-11)*6\",\n    (5, 8, 10, 12) : \"((5+10)-12)*8\",\n    (5, 10, 12, 13) : \"((5+10)-13)*12\",\n    (5, 10, 13, 13) : \"((5*10)-13)-13\",\n    (2, 5, 8, 11) : \"((5+11)*2)-8\",\n    (2, 5, 11, 12) : \"12-((5-11)*2)\",\n    (4, 5, 6, 11) : \"6/(4/(5+11))\",\n    (5, 6, 9, 11) : \"9/(6/(5+11))\",\n    (5, 9, 11, 13) : \"(5-11)*(9-13)\",\n    (5, 8, 11, 13) : \"((5+11)-13)*8\",\n    (2, 5, 10, 12) : \"10-((5-12)*2)\",\n    (3, 5, 12, 12) : \"(5*12)-(3*12)\",\n    (2, 5, 12, 13) : \"((5+13)*2)-12\",\n    (5, 6, 8, 13) : \"8/(6/(5+13))\",\n    (5, 6, 9, 13) : \"(5-13)*(6-9)\",\n    (3, 5, 7, 13) : \"((5*13)+7)/3\",\n    (5, 7, 10, 13) : \"(5-13)*(7-10)\",\n    (5, 9, 12, 13) : \"(5-13)*(9-12)\",\n    (1, 6, 6, 6) : \"((6-1)*6)-6\",\n    (1, 6, 10, 12) : \"12/((6-1)/10)\",\n    (2, 6, 6, 7) : \"(7-(6/2))*6\",\n    (2, 6, 10, 11) : \"((6/2)+10)+11\",\n    (3, 3, 6, 6) : \"((6/3)+6)*3\",\n    (3, 6, 6, 10) : \"((6-3)*10)-6\",\n    (3, 6, 11, 11) : \"((6/3)+11)+11\",\n    (3, 6, 12, 12) : \"((6-3)*12)-12\",\n    (3, 6, 13, 13) : \"13-((6/3)-13)\",\n    (4, 6, 6, 10) : \"(6/4)*(6+10)\",\n    (4, 6, 7, 9) : \"(6/4)*(7+9)\",\n    (5, 6, 8, 12) : \"(6/5)*(8+12)\",\n    (5, 6, 10, 10) : \"(6/5)*(10+10)\",\n    (5, 6, 6, 6) : \"(5-(6/6))*6\",\n    (5, 6, 6, 10) : \"10/(5/(6+6))\",\n    (6, 6, 6, 6) : \"((6*6)-6)-6\",\n    (6, 6, 6, 9) : \"(6*6)*(6/9)\",\n    (6, 6, 6, 12) : \"12/(6/(6+6))\",\n    (6, 6, 6, 8) : \"((6+6)-8)*6\",\n    (6, 6, 8, 12) : \"(6*6)*(8/12)\",\n    (6, 6, 7, 9) : \"(6+6)*(9-7)\",\n    (6, 6, 8, 9) : \"((6+6)-9)*8\",\n    (6, 6, 8, 10) : \"(6+6)*(10-8)\",\n    (6, 6, 10, 12) : \"((6+6)-10)*12\",\n    (6, 6, 10, 13) : \"((6/6)+10)+13\",\n    (2, 6, 6, 11) : \"((6/6)+11)*2\",\n    (6, 6, 9, 11) : \"(6+6)*(11-9)\",\n    (6, 6, 11, 12) : \"((6/6)+11)+12\",\n    (6, 6, 11, 13) : \"(11/(6/6))+13\",\n    (6, 6, 12, 12) : \"(12/(6/6))+12\",\n    (6, 6, 12, 13) : \"13-((6/6)-12)\",\n    (2, 6, 6, 13) : \"(13-(6/6))*2\",\n    (6, 6, 7, 12) : \"((6*7)-6)-12\",\n    (3, 6, 7, 7) : \"(7-(6-7))*3\",\n    (6, 7, 7, 11) : \"((6*7)-7)-11\",\n    (6, 7, 8, 10) : \"((6*7)-8)-10\",\n    (6, 7, 9, 9) : \"((6*7)-9)-9\",\n    (6, 7, 10, 13) : \"13-((6-7)-10)\",\n    (2, 6, 7, 11) : \"(11-(6-7))*2\",\n    (6, 7, 11, 12) : \"12-((6-7)-11)\",\n    (6, 7, 11, 13) : \"13-(11/(6-7))\",\n    (6, 7, 10, 12) : \"(12/(6/7))+10\",\n    (6, 7, 12, 12) : \"12-(12/(6-7))\",\n    (6, 7, 12, 13) : \"((6-7)+12)+13\",\n    (1, 6, 6, 8) : \"6/(1-(6/8))\",\n    (6, 7, 8, 12) : \"12/(7/(6+8))\",\n    (6, 6, 8, 8) : \"(6*8)/(8-6)\",\n    (6, 8, 8, 8) : \"8-((6-8)*8)\",\n    (6, 7, 8, 9) : \"(6*8)/(9-7)\",\n    (6, 8, 9, 12) : \"(9/(6/8))+12\",\n    (6, 8, 9, 13) : \"13-((6-8)-9)\",\n    (3, 6, 8, 10) : \"((6-8)+10)*3\",\n    (4, 6, 8, 10) : \"4-((6-8)*10)\",\n    (6, 8, 8, 10) : \"(6*8)/(10-8)\",\n    (6, 8, 10, 12) : \"12-((6-8)-10)\",\n    (6, 8, 8, 11) : \"((6+8)-11)*8\",\n    (6, 8, 9, 11) : \"(6*8)/(11-9)\",\n    (6, 8, 11, 11) : \"11-((6-8)-11)\",\n    (6, 8, 11, 13) : \"((6*8)-11)-13\",\n    (6, 8, 8, 12) : \"(12/(6/8))+8\",\n    (6, 8, 12, 12) : \"((6*8)-12)-12\",\n    (6, 8, 13, 13) : \"((6-8)+13)+13\",\n    (2, 6, 9, 9) : \"((6/9)+2)*9\",\n    (5, 6, 6, 9) : \"(6*9)-(5*6)\",\n    (5, 6, 9, 9) : \"9-((6-9)*5)\",\n    (6, 9, 9, 12) : \"12-((6-9)-9)\",\n    (6, 9, 9, 10) : \"(10/(6/9))+9\",\n    (6, 9, 10, 11) : \"11-((6-9)-10)\",\n    (6, 6, 9, 12) : \"(12/(6/9))+6\",\n    (6, 9, 12, 13) : \"((6+9)-13)*12\",\n    (3, 6, 10, 10) : \"(3-(6/10))*10\",\n    (6, 6, 6, 10) : \"(6*10)-(6*6)\",\n    (6, 6, 9, 10) : \"9/(6/(6+10))\",\n    (6, 10, 10, 10) : \"10-((6-10)-10)\",\n    (6, 8, 10, 13) : \"((6+10)-13)*8\",\n    (4, 4, 6, 11) : \"4-((6-11)*4)\",\n    (3, 6, 6, 11) : \"((6*11)+6)/3\",\n    (6, 6, 7, 11) : \"(6*11)-(6*7)\",\n    (3, 6, 11, 13) : \"((6-11)+13)*3\",\n    (4, 6, 7, 12) : \"(6*12)/(7-4)\",\n    (6, 9, 12, 12) : \"12/(9/(6+12))\",\n    (6, 8, 11, 12) : \"(6*12)/(11-8)\",\n    (6, 10, 12, 13) : \"(6*12)/(13-10)\",\n    (6, 6, 9, 13) : \"(6*13)-(6*9)\",\n    (1, 3, 7, 12) : \"12/(3/(7-1))\",\n    (1, 7, 12, 12) : \"12/((7-1)/12)\",\n    (2, 7, 7, 11) : \"((7-2)*7)-11\",\n    (2, 7, 10, 12) : \"12/((7-2)/10)\",\n    (4, 7, 9, 11) : \"((7-4)*11)-9\",\n    (4, 7, 12, 12) : \"((7-4)*12)-12\",\n    (1, 2, 7, 7) : \"((7*7)-1)/2\",\n    (1, 7, 7, 12) : \"((7/7)+1)*12\",\n    (2, 4, 7, 7) : \"((7+7)*2)-4\",\n    (3, 7, 7, 12) : \"(3-(7/7))*12\",\n    (4, 7, 7, 8) : \"(4-(7/7))*8\",\n    (5, 6, 7, 7) : \"(5-(7/7))*6\",\n    (4, 7, 7, 7) : \"(7-(7/7))*4\",\n    (7, 7, 7, 12) : \"12/(7/(7+7))\",\n    (3, 7, 7, 9) : \"(9-(7/7))*3\",\n    (6, 7, 7, 10) : \"((7+7)-10)*6\",\n    (7, 7, 10, 13) : \"((7/7)+10)+13\",\n    (7, 7, 8, 11) : \"((7+7)-11)*8\",\n    (7, 7, 11, 12) : \"((7/7)+11)+12\",\n    (7, 7, 11, 13) : \"(11/(7/7))+13\",\n    (7, 7, 12, 12) : \"(12/(7/7))+12\",\n    (7, 7, 12, 13) : \"13-((7/7)-12)\",\n    (2, 7, 7, 13) : \"(13-(7/7))*2\",\n    (3, 7, 8, 9) : \"((7-8)+9)*3\",\n    (7, 8, 10, 13) : \"13-((7-8)-10)\",\n    (6, 7, 8, 11) : \"((7+8)-11)*6\",\n    (7, 8, 11, 12) : \"12-((7-8)-11)\",\n    (7, 8, 11, 13) : \"13-(11/(7-8))\",\n    (7, 8, 8, 12) : \"((7+8)-12)*8\",\n    (7, 8, 12, 12) : \"12-(12/(7-8))\",\n    (7, 8, 12, 13) : \"((7-8)+12)+13\",\n    (2, 7, 8, 13) : \"((7-8)+13)*2\",\n    (2, 7, 8, 9) : \"((7+9)*2)-8\",\n    (3, 7, 9, 13) : \"(7*9)-(3*13)\",\n    (6, 7, 9, 12) : \"12-((7-9)*6)\",\n    (7, 7, 9, 10) : \"10-((7-9)*7)\",\n    (7, 8, 8, 9) : \"8-((7-9)*8)\",\n    (7, 8, 9, 12) : \"12/(8/(7+9))\",\n    (7, 9, 9, 13) : \"13-((7-9)-9)\",\n    (7, 9, 10, 12) : \"12-((7-9)-10)\",\n    (7, 9, 11, 11) : \"11-((7-9)-11)\",\n    (7, 8, 9, 13) : \"((7+9)-13)*8\",\n    (7, 9, 13, 13) : \"((7-9)+13)+13\",\n    (5, 7, 9, 10) : \"9-((7-10)*5)\",\n    (6, 6, 7, 10) : \"6-((7-10)*6)\",\n    (7, 10, 10, 11) : \"11-((7-10)-10)\",\n    (4, 7, 8, 11) : \"8-((7-11)*4)\",\n    (7, 9, 11, 12) : \"12/(9/(7+11))\",\n    (4, 7, 11, 12) : \"((7+11)-12)*4\",\n    (5, 7, 12, 12) : \"(7*12)-(5*12)\",\n    (3, 7, 12, 13) : \"((7-12)+13)*3\",\n    (2, 7, 12, 13) : \"12-((7-13)*2)\",\n    (7, 10, 12, 13) : \"12/(10/(7+13))\",\n    (2, 8, 9, 11) : \"((8/2)+9)+11\",\n    (1, 3, 8, 10) : \"(8/3)*(10-1)\",\n    (3, 8, 10, 12) : \"12/((8-3)/10)\",\n    (3, 4, 8, 13) : \"(8/3)*(13-4)\",\n    (4, 5, 8, 8) : \"(5-(8/4))*8\",\n    (4, 8, 9, 13) : \"((8/4)+9)+13\",\n    (4, 8, 11, 11) : \"((8/4)+11)+11\",\n    (4, 8, 13, 13) : \"13-((8/4)-13)\",\n    (5, 8, 8, 9) : \"9/((8-5)/8)\",\n    (5, 8, 12, 12) : \"((8-5)*12)-12\",\n    (6, 8, 9, 9) : \"(8/6)*(9+9)\",\n    (7, 8, 8, 13) : \"(8/7)*(8+13)\",\n    (7, 8, 10, 11) : \"(8/7)*(10+11)\",\n    (6, 8, 8, 9) : \"9/(6/(8+8))\",\n    (8, 8, 8, 12) : \"12/(8/(8+8))\",\n    (8, 8, 10, 13) : \"((8/8)+10)+13\",\n    (2, 8, 8, 11) : \"((8/8)+11)*2\",\n    (8, 8, 11, 12) : \"((8/8)+11)+12\",\n    (8, 8, 11, 13) : \"(11/(8/8))+13\",\n    (8, 8, 12, 12) : \"(12/(8/8))+12\",\n    (8, 8, 12, 13) : \"13-((8/8)-12)\",\n    (8, 8, 8, 13) : \"((8+8)-13)*8\",\n    (7, 8, 9, 10) : \"(8*9)/(10-7)\",\n    (8, 9, 10, 13) : \"13-((8-9)-10)\",\n    (8, 8, 9, 11) : \"(8*9)/(11-8)\",\n    (8, 9, 11, 12) : \"12-((8-9)-11)\",\n    (8, 9, 11, 13) : \"13-(11/(8-9))\",\n    (8, 9, 9, 12) : \"(8*9)/(12-9)\",\n    (8, 9, 12, 12) : \"12-(12/(8-9))\",\n    (8, 9, 12, 13) : \"((8-9)+12)+13\",\n    (7, 8, 8, 10) : \"(8*10)-(7*8)\",\n    (7, 8, 10, 10) : \"10-((8-10)*7)\",\n    (3, 8, 8, 10) : \"((8*10)-8)/3\",\n    (8, 8, 8, 10) : \"8-((8-10)*8)\",\n    (6, 8, 9, 10) : \"6-((8-10)*9)\",\n    (8, 9, 10, 12) : \"12/(9/(8+10))\",\n    (8, 10, 10, 12) : \"12-((8-10)-10)\",\n    (8, 10, 11, 11) : \"11-((8-10)-11)\",\n    (8, 10, 13, 13) : \"((8-10)+13)+13\",\n    (6, 6, 8, 11) : \"6-((8-11)*6)\",\n    (4, 8, 8, 11) : \"((8*11)+8)/4\",\n    (8, 8, 8, 11) : \"(8*11)-(8*8)\",\n    (8, 8, 9, 12) : \"(8*12)-(8*9)\",\n    (8, 10, 12, 12) : \"12/(10/(8+12))\",\n    (3, 8, 9, 13) : \"9-((8-13)*3)\",\n    (4, 8, 8, 13) : \"((8*13)-8)/4\",\n    (1, 3, 9, 9) : \"9/(3/(9-1))\",\n    (2, 4, 4, 9) : \"((9-2)*4)-4\",\n    (3, 9, 10, 11) : \"((9/3)+10)+11\",\n    (3, 3, 9, 11) : \"(11-(9/3))*3\",\n    (4, 9, 10, 12) : \"12/((9-4)/10)\",\n    (6, 9, 9, 11) : \"((9-6)*11)-9\",\n    (4, 8, 9, 9) : \"(4-(9/9))*8\",\n    (4, 5, 9, 9) : \"((9/9)+5)*4\",\n    (4, 7, 9, 9) : \"(7-(9/9))*4\",\n    (9, 9, 9, 12) : \"12/(9/(9+9))\",\n    (3, 9, 9, 10) : \"((9+9)-10)*3\",\n    (9, 9, 10, 13) : \"((9/9)+10)+13\",\n    (2, 9, 9, 11) : \"((9/9)+11)*2\",\n    (9, 9, 11, 12) : \"((9/9)+11)+12\",\n    (9, 9, 11, 13) : \"(11/(9/9))+13\",\n    (4, 9, 9, 12) : \"((9+9)-12)*4\",\n    (9, 9, 12, 12) : \"(12/(9/9))+12\",\n    (9, 9, 12, 13) : \"13-((9/9)-12)\",\n    (2, 9, 9, 13) : \"(13-(9/9))*2\",\n    (2, 9, 10, 10) : \"(9+10)+(10/2)\",\n    (9, 10, 10, 13) : \"13-((9-10)-10)\",\n    (9, 10, 11, 12) : \"12-((9-10)-11)\",\n    (9, 10, 11, 13) : \"13-(11/(9-10))\",\n    (9, 10, 12, 12) : \"12-(12/(9-10))\",\n    (9, 10, 12, 13) : \"((9-10)+12)+13\",\n    (3, 9, 11, 11) : \"(3-(9/11))*11\",\n    (6, 9, 11, 12) : \"12-((9-11)*6)\",\n    (7, 9, 10, 11) : \"10-((9-11)*7)\",\n    (4, 9, 10, 11) : \"4-((9-11)*10)\",\n    (9, 11, 11, 11) : \"11-((9-11)-11)\",\n    (9, 11, 13, 13) : \"((9-11)+13)+13\",\n    (7, 9, 12, 12) : \"(9*12)-(7*12)\",\n    (3, 9, 12, 13) : \"((9+12)-13)*3\",\n    (2, 9, 13, 13) : \"((9+13)/2)+13\",\n    (5, 9, 10, 13) : \"(9+13)+(10/5)\",\n    (9, 11, 12, 13) : \"12/(11/(9+13))\",\n    (2, 2, 7, 10) : \"((10/2)+7)*2\",\n    (3, 4, 4, 10) : \"((10-3)*4)-4\",\n    (1, 5, 5, 10) : \"((10-5)*5)-1\",\n    (5, 7, 10, 11) : \"((10-5)*7)-11\",\n    (3, 5, 10, 10) : \"(10-(10/5))*3\",\n    (5, 10, 10, 12) : \"((10/5)+10)+12\",\n    (5, 10, 11, 11) : \"((10/5)+11)+11\",\n    (1, 5, 10, 13) : \"(10/5)*(13-1)\",\n    (6, 9, 10, 12) : \"((10-6)*9)-12\",\n    (2, 7, 7, 10) : \"((10/7)+2)*7\",\n    (6, 7, 10, 10) : \"((10-7)*10)-6\",\n    (7, 10, 12, 12) : \"((10-7)*12)-12\",\n    (1, 10, 10, 12) : \"((10/10)+1)*12\",\n    (3, 10, 10, 12) : \"(3-(10/10))*12\",\n    (4, 4, 10, 10) : \"((10*10)-4)/4\",\n    (4, 7, 10, 10) : \"(7-(10/10))*4\",\n    (3, 9, 10, 10) : \"(9-(10/10))*3\",\n    (10, 10, 10, 12) : \"12/(10/(10+10))\",\n    (10, 10, 10, 13) : \"((10/10)+10)+13\",\n    (2, 10, 10, 11) : \"((10/10)+11)*2\",\n    (10, 10, 11, 12) : \"((10/10)+11)+12\",\n    (10, 10, 11, 13) : \"(11/(10/10))+13\",\n    (10, 10, 12, 12) : \"(12/(10/10))+12\",\n    (10, 10, 12, 13) : \"13-((10/10)-12)\",\n    (5, 10, 10, 11) : \"((10*11)+10)/5\",\n    (2, 10, 11, 11) : \"(11-(10-11))*2\",\n    (10, 11, 11, 12) : \"12-((10-11)-11)\",\n    (10, 11, 11, 13) : \"13-(11/(10-11))\",\n    (4, 10, 11, 12) : \"(10+11)+(12/4)\",\n    (10, 11, 12, 12) : \"12-(12/(10-11))\",\n    (10, 11, 12, 13) : \"((10-11)+12)+13\",\n    (6, 10, 12, 12) : \"12-((10-12)*6)\",\n    (7, 10, 10, 12) : \"10-((10-12)*7)\",\n    (8, 8, 10, 12) : \"8-((10-12)*8)\",\n    (4, 10, 10, 12) : \"4-((10-12)*10)\",\n    (6, 10, 11, 12) : \"(10*12)/(11-6)\",\n    (8, 10, 12, 13) : \"(10*12)/(13-8)\",\n    (10, 12, 13, 13) : \"((10-12)+13)+13\",\n    (5, 10, 10, 13) : \"((10*13)-10)/5\",\n    (10, 12, 12, 13) : \"(10+13)+(12/12)\",\n    (10, 13, 13, 13) : \"(10+13)+(13/13)\",\n    (1, 5, 11, 12) : \"12/(5/(11-1))\",\n    (2, 4, 11, 12) : \"((11-2)*4)-12\",\n    (4, 4, 4, 11) : \"((11-4)*4)-4\",\n    (4, 5, 11, 11) : \"((11-4)*5)-11\",\n    (3, 5, 11, 12) : \"12/(3/(11-5))\",\n    (5, 5, 7, 11) : \"(7-(11/5))*5\",\n    (5, 11, 12, 12) : \"12/((11-5)/12)\",\n    (6, 6, 6, 11) : \"((11-6)*6)-6\",\n    (6, 7, 11, 11) : \"((11-6)*7)-11\",\n    (5, 7, 7, 11) : \"(5-(11/7))*7\",\n    (7, 8, 8, 11) : \"((11-7)*8)-8\",\n    (6, 8, 10, 11) : \"((11-8)*10)-6\",\n    (8, 9, 11, 11) : \"((11-8)*11)-9\",\n    (8, 11, 12, 12) : \"((11-8)*12)-12\",\n    (1, 5, 11, 11) : \"((11*11)-1)/5\",\n    (1, 11, 11, 12) : \"((11/11)+1)*12\",\n    (2, 8, 11, 11) : \"((11/11)+2)*8\",\n    (3, 11, 11, 12) : \"(3-(11/11))*12\",\n    (5, 6, 11, 11) : \"(5-(11/11))*6\",\n    (3, 7, 11, 11) : \"((11/11)+7)*3\",\n    (4, 7, 11, 11) : \"(7-(11/11))*4\",\n    (2, 11, 11, 11) : \"((11/11)+11)*2\",\n    (11, 11, 11, 12) : \"((11/11)+11)+12\",\n    (11, 11, 11, 13) : \"(11/(11/11))+13\",\n    (6, 11, 11, 12) : \"(11+11)+(12/6)\",\n    (11, 11, 12, 12) : \"(12/(11/11))+12\",\n    (11, 11, 12, 13) : \"13-((11/11)-12)\",\n    (9, 11, 12, 12) : \"(11*12)-(9*12)\",\n    (6, 11, 12, 12) : \"((11*12)+12)/6\",\n    (11, 12, 12, 12) : \"12-(12/(11-12))\",\n    (11, 12, 12, 13) : \"((11/12)*12)+13\",\n    (2, 11, 12, 13) : \"((11-12)+13)*2\",\n    (11, 12, 13, 13) : \"(11+12)+(13/13)\",\n    (1, 6, 11, 13) : \"((11*13)+1)/6\",\n    (6, 11, 12, 13) : \"12-((11-13)*6)\",\n    (7, 10, 11, 13) : \"10-((11-13)*7)\",\n    (6, 9, 11, 13) : \"6-((11-13)*9)\",\n    (4, 10, 11, 13) : \"4-((11-13)*10)\",\n    (11, 13, 13, 13) : \"((11/13)*13)+13\",\n    (6, 12, 12, 12) : \"12/((12-6)/12)\",\n    (1, 6, 12, 13) : \"(12/6)*(13-1)\",\n    (6, 12, 13, 13) : \"13-((12/6)-13)\",\n    (1, 8, 12, 12) : \"12/((12/8)-1)\",\n    (9, 12, 12, 12) : \"((12-9)*12)-12\",\n    (1, 12, 12, 12) : \"((12/12)+1)*12\",\n    (3, 12, 12, 12) : \"(3-(12/12))*12\",\n    (10, 12, 12, 12) : \"(12*12)-(10*12)\",\n    (12, 12, 12, 12) : \"(12/(12/12))+12\",\n    (12, 12, 12, 13) : \"13-((12/12)-12)\",\n    (7, 12, 12, 13) : \"(12*12)/(13-7)\",\n    (12, 12, 13, 13) : \"13/(13/(12+12))\",\n    (6, 12, 12, 13) : \"((12*13)-12)/6\",\n    (12, 13, 13, 13) : \"(12/13)*(13+13)\",\n    (3, 3, 4, 13) : \"((13-4)*3)-3\",\n    (4, 4, 6, 13) : \"((13-6)*4)-4\",\n    (1, 5, 8, 13) : \"((13-8)*5)-1\",\n    (6, 6, 8, 13) : \"((13-8)*6)-6\",\n    (8, 8, 9, 13) : \"((13-9)*8)-8\",\n    (6, 10, 10, 13) : \"((13-10)*10)-6\",\n    (1, 7, 13, 13) : \"((13*13)-1)/7\",\n    (1, 12, 13, 13) : \"((13/13)+1)*12\",\n    (2, 8, 13, 13) : \"((13/13)+2)*8\",\n    (3, 12, 13, 13) : \"(3-(13/13))*12\",\n    (4, 5, 13, 13) : \"((13/13)+5)*4\",\n    (5, 6, 13, 13) : \"(5-(13/13))*6\",\n    (3, 7, 13, 13) : \"((13/13)+7)*3\",\n    (4, 7, 13, 13) : \"(7-(13/13))*4\",\n    (3, 9, 13, 13) : \"(9-(13/13))*3\",\n    (2, 13, 13, 13) : \"(13-(13/13))*2\"}\n    k = tuple(sorted([a, b, c, d]))\n    if (k in m):\n        return m[k]\n    return \"It's not possible!\"", "def index_numbers(a, b, c, d):\n    lst = [a,b,c,d]\n    for i in lst:\n        lst1 = lst[:]\n        lst1.remove(i)\n        for j in lst1:\n            lst2 = lst1[:]\n            lst2.remove(j)\n            for k in lst2:\n                lst3 = lst2[:]\n                lst3.remove(k)\n                for l in lst3:\n                    yield [i,j,k,l]\n\ndef index_symbols():\n    lst = ['+', '-', '*', '/']\n    for i in lst:\n        for j in lst:\n            for k in lst:\n                yield [i,j,k]\n            \ndef evaluate0(num, sym):\n    expr = num[0] + sym[0] + num[1] + sym[1] + num[2] + sym[2] + num[3]\n    try:\n        res = eval(expr)\n    except:\n        res = 0\n    return res, expr\n\ndef evaluate1(num, sym):\n    expr = '(' + num[0] + sym[0] + num[1] + sym[1] + num[2] + ')' + sym[2] + num[3]\n    try:\n        res = eval(expr)\n    except:\n        res = 0\n    return res, expr\n\ndef evaluate2(num, sym):\n    expr = '(' + num[0] + sym[0] + num[1]  + ')' + sym[1] + '(' + num[2] + sym[2] + num[3] + ')'\n    try:\n        res = eval(expr)\n    except:\n        res = 0\n    return res, expr\n\ndef evaluate3(num, sym):\n    expr = num[0] + sym[0]  + '(' + num[1] + sym[1] + '(' + num[2] + sym[2] + num[3] + \"))\"\n    try:\n        res = eval(expr)\n    except:\n        res = 0\n    return res, expr\n\ndef evaluate4(num, sym):\n    expr = \"((\" +num[0] + sym[0] + num[1] + ')' + sym[1] + num[2] + ')' + sym[2] + num[3]\n    try:\n        res = eval(expr)\n    except:\n        res = 0\n    return res, expr\n\ndef equal_to_24(a,b,c,d):\n\n    for num in index_numbers(str(a), str(b), str(c), str(d)):\n        for sym in index_symbols():\n        \n            val, text = evaluate0(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate1(num, sym) \n            if  val == 24:\n                return text\n    \n            val, text = evaluate2(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate3(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate4(num, sym) \n            if  val == 24:\n                return text\n            \n    return \"It's not possible!\"", "import operator\nfrom itertools import product, permutations\n\n\ndef mydiv(n, d):\n    return n / d if d != 0 else 9999999\n\n\nsyms = [operator.add, operator.sub, operator.mul, mydiv]\nop = {sym: ch for sym, ch in zip(syms, '+-*/')}\n\n\ndef solve24(nums):\n    for x, y, z in product(syms, repeat=3):\n        for a, b, c, d in permutations(nums):\n            if round(x(y(a, b), z(c, d)), 5) == 24:\n                return f\"({a} {op[y]} {b}) {op[x]} ({c} {op[z]} {d})\"\n            elif round(x(a, y(b, z(c, d))), 5) == 24:\n                return f\"{a} {op[x]} ({b} {op[y]} ({c} {op[z]} {d}))\"\n            elif round(x(y(z(c, d), b), a), 5) == 24:\n                return f\"(({c} {op[z]} {d}) {op[y]} {b}) {op[x]} {a}\"\n            elif round(x(y(b, z(c, d)), a), 5) == 24:\n                return f\"({b} {op[y]} ({c} {op[z]} {d})) {op[x]} {a}\"\n    return \"It's not possible!\"\n\n\ndef equal_to_24(a,b,c,d):\n    nums=[]\n    nums.append(a)\n    nums.append(b)\n    nums.append(c)\n    nums.append(d)\n    return solve24(nums)\n\n", "import itertools as it\n\ndef equal_to_24(*numbers):\n    for template in [\"aZ(bX(cVd))\", \"(aZb)X(cVd)\", \"((aZb)Xc)Vd\"]:\n        for x in it.permutations(numbers):\n            for i in it.product('*/+-', repeat=3):\n                temp = template\n                for r in ((\"Z\", i[0]), (\"X\", i[1]), (\"V\", i[2]), (\"a\", str(x[0])), (\"b\", str(x[1])), (\"c\", str(x[2])),\n                          (\"d\", str(x[3]))):\n                    temp = temp.replace(*r)\n                try:\n                    if (eval(temp) == 24):\n                        return temp\n                except ZeroDivisionError:\n                    pass\n    return \"It's not possible!\"", "import itertools as it\n\ndef equal_to_24(*numbers):\n    for template in [\"{0}{4}({1}{5}({2}{6}{3}))\", \"({0}{4}{1}){5}({2}{6}{3})\", \"(({0}{4}{1}){5}c{2}{6}{3}\"]:\n        for x in it.permutations(numbers):\n            for i in it.product('*/+-', repeat=3):\n                expr = template.format(*x, *i)\n                try:\n                    if eval(expr) == 24:\n                        return expr\n                except ZeroDivisionError:\n                    pass\n    return \"It's not possible!\"\n", "import itertools as it\nimport copy\n\noperator=['+','-','*','/']\n\ndef gnrt_exp(a,b):\n    return [\n    '({0})*({1})'.format(a,b),\n    '({0})/({1})'.format(a,b),\n    '({0})/({1})'.format(b,a),\n    '({0})+({1})'.format(a,b),\n    '({0})-({1})'.format(a,b),\n    '({0})-({1})'.format(b,a)\n    ]\n\ndef equal_to_24(a,b,c,d):\n    List=[a,b,c,d]\n    for fst,scnd in it.combinations(List,2):\n        temp=copy.deepcopy(List)\n        temp.remove(fst)\n        temp.remove(scnd)\n        for exp1 in gnrt_exp(fst,scnd):\n            for thrd in it.combinations(temp,1):\n                temp1=copy.deepcopy(temp)\n                temp1.remove(thrd[0])\n                for exp2 in gnrt_exp(exp1,thrd[0]):\n#                    print(\"exp2=\",exp2)\n                    for exp3 in gnrt_exp(exp2,temp1[0]):\n#                        print(exp3)\n                        try:\n                            rst_final=eval(exp3)\n                        except:\n                            rst_final=0\n                        if rst_final==24:\n                            return exp3\n    for fst,scnd in it.combinations(List,2):\n        temp=copy.deepcopy(List)\n        temp.remove(fst)\n        temp.remove(scnd)\n        for exp1 in gnrt_exp(fst,scnd):\n            for exp2 in gnrt_exp(*temp):\n                for exp in gnrt_exp(exp1,exp2):\n                    print(exp)\n                    try:\n                        rst_final=eval(exp)\n                    except:\n                        rst_final=0\n                    if rst_final==24:\n                        return exp\n    return \"It's not possible!\"\n", "class Calculator(object):\n  def evaluate(self, in_string):\n    \n    what = str()\n    lst = []\n            \n    count_par = 0;\n    index  = 0\n    while(index < len(in_string)):\n        if in_string[index] == '(':\n            count_par +=1\n            flag_par = True\n        elif in_string[index] == ')':\n            count_par -=1\n        elif count_par == 0:\n            if in_string[index] in ['+', '-']: \n                break\n            elif in_string[index] in ['*', '/']:\n                if in_string[index+1] == '(':\n                    break\n                elif in_string[index+1:].count('+') == 0  and in_string[index+1:].count('-')==0:\n                    break\n        index += 1\n    \n    if index == len(in_string):\n        lst.append(in_string)\n    else:\n        temp1 = in_string[0:index]\n        temp2 = in_string[index+1:]\n        what = in_string[index]          \n        if temp1[0] == '(':\n            temp1 = temp1[1:-1]\n        if temp2[0] == '(':\n            temp2 = temp2[1:-1]\n        if what == '-' and in_string[index+1] != '(':\n            temp2 = temp2.replace('-','x')\n            temp2 = temp2.replace('+','-')\n            temp2 = temp2.replace('x','+')\n        lst.append(temp1)\n        lst.append(temp2)\n    \n    if len(lst) == 1:\n        return float(lst[0])\n    else:\n        L = self.evaluate(lst[0])\n        R = self.evaluate(lst[1])\n        if what == '+':\n            return L + R\n        elif what == '-':\n            return L - R\n        elif what == '*':\n            return L*R\n        elif what == '/':\n            return L/R if R!=0 else 0\n            \ndef index_numbers(a, b, c, d):\n    lst = [a,b,c,d]\n    for i in lst:\n        lst1 = lst[:]\n        lst1.remove(i)\n        for j in lst1:\n            lst2 = lst1[:]\n            lst2.remove(j)\n            for k in lst2:\n                lst3 = lst2[:]\n                lst3.remove(k)\n                for l in lst3:\n                    yield [i,j,k,l]\n\ndef index_symbols():\n    lst = ['+', '-', '*', '/']\n    for i in lst:\n        for j in lst:\n            for k in lst:\n                yield [i,j,k]\n            \nCAL = Calculator()\n\ndef evaluate0(num, sym):\n    expr = num[0] + sym[0] + num[1] + sym[1] + num[2] + sym[2] + num[3]\n    #print(expr)\n    return CAL.evaluate(expr), expr\n\ndef evaluate1(num, sym):\n    expr = '(' + num[0] + sym[0] + num[1] + sym[1] + num[2] + ')' + sym[2] + num[3]\n    return CAL.evaluate(expr), expr\n\ndef evaluate2(num, sym):\n    expr = '(' + num[0] + sym[0] + num[1]  + ')' + sym[1] + '(' + num[2] + sym[2] + num[3] + ')'\n    return CAL.evaluate(expr), expr\n\ndef evaluate3(num, sym):\n    expr = num[0] + sym[0]  + '(' + num[1] + sym[1] + '(' + num[2] + sym[2] + num[3] + \"))\"\n    return CAL.evaluate(expr), expr\n\ndef evaluate4(num, sym):\n    expr = \"((\" +num[0] + sym[0] + num[1] + ')' + sym[1] + num[2] + ')' + sym[2] + num[3]\n    return CAL.evaluate(expr), expr\n\ndef equal_to_24(a,b,c,d):\n\n    for num in index_numbers(str(a), str(b), str(c), str(d)):\n        for sym in index_symbols():\n        \n            val, text = evaluate0(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate1(num, sym) \n            if  val == 24:\n                return text\n    \n            val, text = evaluate2(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate3(num, sym) \n            if  val == 24:\n                return text\n            \n            val, text = evaluate4(num, sym) \n            if  val == 24:\n                return text\n            \n    return \"It's not possible!\"\n", "L = [\n    '(((a-b)-c)-d)', '(((a-b)-c)*d)', '(((a-b)-c)/d)', '(((a-b)-c)+d)', '(((a-b)*c)-d)', '(((a-b)*c)*d)', '(((a-b)*c)/d)', '(((a-b)*c)+d)', '(((a-b)/c)-d)', '(((a-b)/c)*d)', '(((a-b)/c)/d)', '(((a-b)/c)+d)', '(((a-b)+c)-d)', '(((a-b)+c)*d)', '(((a-b)+c)/d)', '(((a-b)+c)+d)', '((a-b)-(c-d))', '((a-b)*(c-d))', '((a-b)/(c-d))', '((a-b)+(c-d))', '((a-b)-(c*d))', '((a-b)*(c*d))', '((a-b)/(c*d))', '((a-b)+(c*d))', '((a-b)-(c/d))', '((a-b)*(c/d))', '((a-b)/(c/d))', '((a-b)+(c/d))', '((a-b)-(c+d))', '((a-b)*(c+d))', '((a-b)/(c+d))', '((a-b)+(c+d))', '(((a*b)-c)-d)', '(((a*b)-c)*d)', '(((a*b)-c)/d)', '(((a*b)-c)+d)', '(((a*b)*c)-d)', '(((a*b)*c)*d)', '(((a*b)*c)/d)', '(((a*b)*c)+d)', '(((a*b)/c)-d)', '(((a*b)/c)*d)', '(((a*b)/c)/d)', '(((a*b)/c)+d)', '(((a*b)+c)-d)', '(((a*b)+c)*d)', '(((a*b)+c)/d)', '(((a*b)+c)+d)', '((a*b)-(c-d))', '((a*b)*(c-d))', '((a*b)/(c-d))', '((a*b)+(c-d))', '((a*b)-(c*d))', '((a*b)*(c*d))', '((a*b)/(c*d))', '((a*b)+(c*d))', '((a*b)-(c/d))', '((a*b)*(c/d))', '((a*b)/(c/d))', '((a*b)+(c/d))', '((a*b)-(c+d))', '((a*b)*(c+d))', '((a*b)/(c+d))', '((a*b)+(c+d))', '(((a/b)-c)-d)', '(((a/b)-c)*d)', '(((a/b)-c)/d)', '(((a/b)-c)+d)', '(((a/b)*c)-d)', '(((a/b)*c)*d)', '(((a/b)*c)/d)', '(((a/b)*c)+d)', '(((a/b)/c)-d)', '(((a/b)/c)*d)', '(((a/b)/c)/d)', '(((a/b)/c)+d)', '(((a/b)+c)-d)', '(((a/b)+c)*d)', '(((a/b)+c)/d)', '(((a/b)+c)+d)', '((a/b)-(c-d))', '((a/b)*(c-d))', '((a/b)/(c-d))', '((a/b)+(c-d))', '((a/b)-(c*d))', '((a/b)*(c*d))', '((a/b)/(c*d))', '((a/b)+(c*d))', '((a/b)-(c/d))', '((a/b)*(c/d))', '((a/b)/(c/d))', '((a/b)+(c/d))', '((a/b)-(c+d))', '((a/b)*(c+d))', '((a/b)/(c+d))', '((a/b)+(c+d))', '(((a+b)-c)-d)', '(((a+b)-c)*d)', '(((a+b)-c)/d)', '(((a+b)-c)+d)', '(((a+b)*c)-d)', '(((a+b)*c)*d)', '(((a+b)*c)/d)', '(((a+b)*c)+d)', '(((a+b)/c)-d)', '(((a+b)/c)*d)', '(((a+b)/c)/d)', '(((a+b)/c)+d)', '(((a+b)+c)-d)', '(((a+b)+c)*d)', '(((a+b)+c)/d)', '(((a+b)+c)+d)', '((a+b)-(c-d))', '((a+b)*(c-d))', '((a+b)/(c-d))', '((a+b)+(c-d))', '((a+b)-(c*d))', '((a+b)*(c*d))', '((a+b)/(c*d))', '((a+b)+(c*d))', '((a+b)-(c/d))', '((a+b)*(c/d))', '((a+b)/(c/d))', '((a+b)+(c/d))', '((a+b)-(c+d))', '((a+b)*(c+d))', '((a+b)/(c+d))', '((a+b)+(c+d))', '((a-(b-c))-d)', '((a-(b-c))*d)', '((a-(b-c))/d)', '((a-(b-c))+d)', '((a*(b-c))-d)', '((a*(b-c))*d)', '((a*(b-c))/d)', '((a*(b-c))+d)', '((a/(b-c))-d)', '((a/(b-c))*d)', '((a/(b-c))/d)', '((a/(b-c))+d)', '((a+(b-c))-d)', '((a+(b-c))*d)', '((a+(b-c))/d)', '((a+(b-c))+d)', '(a-((b-c)-d))', '(a*((b-c)-d))', '(a/((b-c)-d))', '(a+((b-c)-d))', '(a-((b-c)*d))', '(a*((b-c)*d))', '(a/((b-c)*d))', '(a+((b-c)*d))', '(a-((b-c)/d))', '(a*((b-c)/d))', '(a/((b-c)/d))', '(a+((b-c)/d))', '(a-((b-c)+d))', '(a*((b-c)+d))', '(a/((b-c)+d))', '(a+((b-c)+d))', '((a-(b*c))-d)', '((a-(b*c))*d)', '((a-(b*c))/d)', '((a-(b*c))+d)', '((a*(b*c))-d)', '((a*(b*c))*d)', '((a*(b*c))/d)', '((a*(b*c))+d)', '((a/(b*c))-d)', '((a/(b*c))*d)', '((a/(b*c))/d)', '((a/(b*c))+d)', '((a+(b*c))-d)', '((a+(b*c))*d)', '((a+(b*c))/d)', '((a+(b*c))+d)', '(a-((b*c)-d))', '(a*((b*c)-d))', '(a/((b*c)-d))', '(a+((b*c)-d))', '(a-((b*c)*d))', '(a*((b*c)*d))', '(a/((b*c)*d))', '(a+((b*c)*d))', '(a-((b*c)/d))', '(a*((b*c)/d))', '(a/((b*c)/d))', '(a+((b*c)/d))', '(a-((b*c)+d))', '(a*((b*c)+d))', '(a/((b*c)+d))', '(a+((b*c)+d))', '((a-(b/c))-d)', '((a-(b/c))*d)', '((a-(b/c))/d)', '((a-(b/c))+d)', '((a*(b/c))-d)', '((a*(b/c))*d)', '((a*(b/c))/d)', '((a*(b/c))+d)', '((a/(b/c))-d)', '((a/(b/c))*d)', '((a/(b/c))/d)', '((a/(b/c))+d)', '((a+(b/c))-d)', '((a+(b/c))*d)', '((a+(b/c))/d)', '((a+(b/c))+d)', '(a-((b/c)-d))', '(a*((b/c)-d))', '(a/((b/c)-d))', '(a+((b/c)-d))', '(a-((b/c)*d))', '(a*((b/c)*d))', '(a/((b/c)*d))', '(a+((b/c)*d))', '(a-((b/c)/d))', '(a*((b/c)/d))', '(a/((b/c)/d))', '(a+((b/c)/d))', '(a-((b/c)+d))', '(a*((b/c)+d))', '(a/((b/c)+d))', '(a+((b/c)+d))', '((a-(b+c))-d)', '((a-(b+c))*d)', '((a-(b+c))/d)', '((a-(b+c))+d)', '((a*(b+c))-d)', '((a*(b+c))*d)', '((a*(b+c))/d)', '((a*(b+c))+d)', '((a/(b+c))-d)', '((a/(b+c))*d)', '((a/(b+c))/d)', '((a/(b+c))+d)', '((a+(b+c))-d)', '((a+(b+c))*d)', '((a+(b+c))/d)', '((a+(b+c))+d)', '(a-((b+c)-d))', '(a*((b+c)-d))', '(a/((b+c)-d))', '(a+((b+c)-d))', '(a-((b+c)*d))', '(a*((b+c)*d))', '(a/((b+c)*d))', '(a+((b+c)*d))', '(a-((b+c)/d))', '(a*((b+c)/d))', '(a/((b+c)/d))', '(a+((b+c)/d))', '(a-((b+c)+d))', '(a*((b+c)+d))', '(a/((b+c)+d))', '(a+((b+c)+d))', '(a-(b-(c-d)))', '(a*(b-(c-d)))', '(a/(b-(c-d)))', '(a+(b-(c-d)))', '(a-(b*(c-d)))', '(a*(b*(c-d)))', '(a/(b*(c-d)))', '(a+(b*(c-d)))', '(a-(b/(c-d)))', '(a*(b/(c-d)))', '(a/(b/(c-d)))', '(a+(b/(c-d)))', '(a-(b+(c-d)))', '(a*(b+(c-d)))', '(a/(b+(c-d)))', '(a+(b+(c-d)))', '(a-(b-(c*d)))', '(a*(b-(c*d)))', '(a/(b-(c*d)))', '(a+(b-(c*d)))', '(a-(b*(c*d)))', '(a*(b*(c*d)))', '(a/(b*(c*d)))', '(a+(b*(c*d)))', '(a-(b/(c*d)))', '(a*(b/(c*d)))', '(a/(b/(c*d)))', '(a+(b/(c*d)))', '(a-(b+(c*d)))', '(a*(b+(c*d)))', '(a/(b+(c*d)))', '(a+(b+(c*d)))', '(a-(b-(c/d)))', '(a*(b-(c/d)))', '(a/(b-(c/d)))', '(a+(b-(c/d)))', '(a-(b*(c/d)))', '(a*(b*(c/d)))', '(a/(b*(c/d)))', '(a+(b*(c/d)))', '(a-(b/(c/d)))', '(a*(b/(c/d)))', '(a/(b/(c/d)))', '(a+(b/(c/d)))', '(a-(b+(c/d)))', '(a*(b+(c/d)))', '(a/(b+(c/d)))', '(a+(b+(c/d)))', '(a-(b-(c+d)))', '(a*(b-(c+d)))', '(a/(b-(c+d)))', '(a+(b-(c+d)))', '(a-(b*(c+d)))', '(a*(b*(c+d)))', '(a/(b*(c+d)))', '(a+(b*(c+d)))', '(a-(b/(c+d)))', '(a*(b/(c+d)))', '(a/(b/(c+d)))', '(a+(b/(c+d)))', '(a-(b+(c+d)))', '(a*(b+(c+d)))', '(a/(b+(c+d)))', '(a+(b+(c+d)))', '(((a-b)-d)-c)', '(((a-b)-d)*c)', '(((a-b)-d)/c)', '(((a-b)-d)+c)', '(((a-b)*d)-c)', '(((a-b)*d)*c)', '(((a-b)*d)/c)', '(((a-b)*d)+c)', '(((a-b)/d)-c)', '(((a-b)/d)*c)', '(((a-b)/d)/c)', '(((a-b)/d)+c)', '(((a-b)+d)-c)', '(((a-b)+d)*c)', '(((a-b)+d)/c)', '(((a-b)+d)+c)', '((a-b)-(d-c))', '((a-b)*(d-c))', '((a-b)/(d-c))', '((a-b)+(d-c))', '((a-b)-(d*c))', '((a-b)*(d*c))', '((a-b)/(d*c))', '((a-b)+(d*c))', '((a-b)-(d/c))', '((a-b)*(d/c))', '((a-b)/(d/c))', '((a-b)+(d/c))', '((a-b)-(d+c))', '((a-b)*(d+c))', '((a-b)/(d+c))', '((a-b)+(d+c))', '(((a*b)-d)-c)', '(((a*b)-d)*c)', '(((a*b)-d)/c)', '(((a*b)-d)+c)', '(((a*b)*d)-c)', '(((a*b)*d)*c)', '(((a*b)*d)/c)', '(((a*b)*d)+c)', '(((a*b)/d)-c)', '(((a*b)/d)*c)', '(((a*b)/d)/c)', '(((a*b)/d)+c)', '(((a*b)+d)-c)', '(((a*b)+d)*c)', '(((a*b)+d)/c)', '(((a*b)+d)+c)', '((a*b)-(d-c))', '((a*b)*(d-c))', '((a*b)/(d-c))', '((a*b)+(d-c))', '((a*b)-(d*c))', '((a*b)*(d*c))', '((a*b)/(d*c))', '((a*b)+(d*c))', '((a*b)-(d/c))', '((a*b)*(d/c))', '((a*b)/(d/c))', '((a*b)+(d/c))', '((a*b)-(d+c))', '((a*b)*(d+c))', '((a*b)/(d+c))', '((a*b)+(d+c))', '(((a/b)-d)-c)', '(((a/b)-d)*c)', '(((a/b)-d)/c)', '(((a/b)-d)+c)', '(((a/b)*d)-c)', '(((a/b)*d)*c)', '(((a/b)*d)/c)', '(((a/b)*d)+c)', '(((a/b)/d)-c)', '(((a/b)/d)*c)', '(((a/b)/d)/c)', '(((a/b)/d)+c)', '(((a/b)+d)-c)', '(((a/b)+d)*c)', '(((a/b)+d)/c)', '(((a/b)+d)+c)', '((a/b)-(d-c))', '((a/b)*(d-c))', '((a/b)/(d-c))', '((a/b)+(d-c))', '((a/b)-(d*c))', '((a/b)*(d*c))', '((a/b)/(d*c))', '((a/b)+(d*c))', '((a/b)-(d/c))', '((a/b)*(d/c))', '((a/b)/(d/c))', '((a/b)+(d/c))', '((a/b)-(d+c))', '((a/b)*(d+c))', '((a/b)/(d+c))', '((a/b)+(d+c))', '(((a+b)-d)-c)', '(((a+b)-d)*c)', '(((a+b)-d)/c)', '(((a+b)-d)+c)', '(((a+b)*d)-c)', '(((a+b)*d)*c)', '(((a+b)*d)/c)', '(((a+b)*d)+c)', '(((a+b)/d)-c)', '(((a+b)/d)*c)', '(((a+b)/d)/c)', '(((a+b)/d)+c)', '(((a+b)+d)-c)', '(((a+b)+d)*c)', '(((a+b)+d)/c)', '(((a+b)+d)+c)', '((a+b)-(d-c))', '((a+b)*(d-c))', '((a+b)/(d-c))', '((a+b)+(d-c))', '((a+b)-(d*c))', '((a+b)*(d*c))', '((a+b)/(d*c))', '((a+b)+(d*c))', '((a+b)-(d/c))', '((a+b)*(d/c))', '((a+b)/(d/c))', '((a+b)+(d/c))', '((a+b)-(d+c))', '((a+b)*(d+c))', '((a+b)/(d+c))', '((a+b)+(d+c))', '((a-(b-d))-c)', '((a-(b-d))*c)', '((a-(b-d))/c)', '((a-(b-d))+c)', '((a*(b-d))-c)', '((a*(b-d))*c)', '((a*(b-d))/c)', '((a*(b-d))+c)', '((a/(b-d))-c)', '((a/(b-d))*c)', '((a/(b-d))/c)', '((a/(b-d))+c)', '((a+(b-d))-c)', '((a+(b-d))*c)', '((a+(b-d))/c)', '((a+(b-d))+c)', '(a-((b-d)-c))', '(a*((b-d)-c))', '(a/((b-d)-c))', '(a+((b-d)-c))', '(a-((b-d)*c))', '(a*((b-d)*c))', '(a/((b-d)*c))', '(a+((b-d)*c))', '(a-((b-d)/c))', '(a*((b-d)/c))', '(a/((b-d)/c))', '(a+((b-d)/c))', '(a-((b-d)+c))', '(a*((b-d)+c))', '(a/((b-d)+c))', '(a+((b-d)+c))', '((a-(b*d))-c)', '((a-(b*d))*c)', '((a-(b*d))/c)', '((a-(b*d))+c)', '((a*(b*d))-c)', '((a*(b*d))*c)', '((a*(b*d))/c)', '((a*(b*d))+c)', '((a/(b*d))-c)', '((a/(b*d))*c)', '((a/(b*d))/c)', '((a/(b*d))+c)', '((a+(b*d))-c)', '((a+(b*d))*c)', '((a+(b*d))/c)', '((a+(b*d))+c)', '(a-((b*d)-c))', '(a*((b*d)-c))', '(a/((b*d)-c))', '(a+((b*d)-c))', '(a-((b*d)*c))', '(a*((b*d)*c))', '(a/((b*d)*c))', '(a+((b*d)*c))', '(a-((b*d)/c))', '(a*((b*d)/c))', '(a/((b*d)/c))', '(a+((b*d)/c))', '(a-((b*d)+c))', '(a*((b*d)+c))', '(a/((b*d)+c))', '(a+((b*d)+c))', '((a-(b/d))-c)', '((a-(b/d))*c)', '((a-(b/d))/c)', '((a-(b/d))+c)', '((a*(b/d))-c)', '((a*(b/d))*c)', '((a*(b/d))/c)', '((a*(b/d))+c)', '((a/(b/d))-c)', '((a/(b/d))*c)', '((a/(b/d))/c)', '((a/(b/d))+c)', '((a+(b/d))-c)', '((a+(b/d))*c)', '((a+(b/d))/c)', '((a+(b/d))+c)', '(a-((b/d)-c))', '(a*((b/d)-c))', '(a/((b/d)-c))', '(a+((b/d)-c))', '(a-((b/d)*c))', '(a*((b/d)*c))', '(a/((b/d)*c))', '(a+((b/d)*c))', '(a-((b/d)/c))', '(a*((b/d)/c))', '(a/((b/d)/c))', '(a+((b/d)/c))', '(a-((b/d)+c))', '(a*((b/d)+c))', '(a/((b/d)+c))', '(a+((b/d)+c))', '((a-(b+d))-c)', '((a-(b+d))*c)', '((a-(b+d))/c)', '((a-(b+d))+c)', '((a*(b+d))-c)', '((a*(b+d))*c)', '((a*(b+d))/c)', '((a*(b+d))+c)', '((a/(b+d))-c)', '((a/(b+d))*c)', '((a/(b+d))/c)', '((a/(b+d))+c)', '((a+(b+d))-c)', '((a+(b+d))*c)', '((a+(b+d))/c)', '((a+(b+d))+c)', '(a-((b+d)-c))', '(a*((b+d)-c))', '(a/((b+d)-c))', '(a+((b+d)-c))', '(a-((b+d)*c))', '(a*((b+d)*c))', '(a/((b+d)*c))', '(a+((b+d)*c))', '(a-((b+d)/c))', '(a*((b+d)/c))', '(a/((b+d)/c))', '(a+((b+d)/c))', '(a-((b+d)+c))', '(a*((b+d)+c))', '(a/((b+d)+c))', '(a+((b+d)+c))', '(a-(b-(d-c)))', '(a*(b-(d-c)))', '(a/(b-(d-c)))', '(a+(b-(d-c)))', '(a-(b*(d-c)))', '(a*(b*(d-c)))', '(a/(b*(d-c)))', '(a+(b*(d-c)))', '(a-(b/(d-c)))', '(a*(b/(d-c)))', '(a/(b/(d-c)))', '(a+(b/(d-c)))',\n    '(a-(b+(d-c)))', '(a*(b+(d-c)))', '(a/(b+(d-c)))', '(a+(b+(d-c)))', '(a-(b-(d*c)))', '(a*(b-(d*c)))', '(a/(b-(d*c)))', '(a+(b-(d*c)))', '(a-(b*(d*c)))', '(a*(b*(d*c)))', '(a/(b*(d*c)))', '(a+(b*(d*c)))', '(a-(b/(d*c)))', '(a*(b/(d*c)))', '(a/(b/(d*c)))', '(a+(b/(d*c)))', '(a-(b+(d*c)))', '(a*(b+(d*c)))', '(a/(b+(d*c)))', '(a+(b+(d*c)))', '(a-(b-(d/c)))', '(a*(b-(d/c)))', '(a/(b-(d/c)))', '(a+(b-(d/c)))', '(a-(b*(d/c)))', '(a*(b*(d/c)))', '(a/(b*(d/c)))', '(a+(b*(d/c)))', '(a-(b/(d/c)))', '(a*(b/(d/c)))', '(a/(b/(d/c)))', '(a+(b/(d/c)))', '(a-(b+(d/c)))', '(a*(b+(d/c)))', '(a/(b+(d/c)))', '(a+(b+(d/c)))', '(a-(b-(d+c)))', '(a*(b-(d+c)))', '(a/(b-(d+c)))', '(a+(b-(d+c)))', '(a-(b*(d+c)))', '(a*(b*(d+c)))', '(a/(b*(d+c)))', '(a+(b*(d+c)))', '(a-(b/(d+c)))', '(a*(b/(d+c)))', '(a/(b/(d+c)))', '(a+(b/(d+c)))', '(a-(b+(d+c)))', '(a*(b+(d+c)))', '(a/(b+(d+c)))', '(a+(b+(d+c)))', '(((a-c)-b)-d)', '(((a-c)-b)*d)', '(((a-c)-b)/d)', '(((a-c)-b)+d)', '(((a-c)*b)-d)', '(((a-c)*b)*d)', '(((a-c)*b)/d)', '(((a-c)*b)+d)', '(((a-c)/b)-d)', '(((a-c)/b)*d)', '(((a-c)/b)/d)', '(((a-c)/b)+d)', '(((a-c)+b)-d)', '(((a-c)+b)*d)', '(((a-c)+b)/d)', '(((a-c)+b)+d)', '((a-c)-(b-d))', '((a-c)*(b-d))', '((a-c)/(b-d))', '((a-c)+(b-d))', '((a-c)-(b*d))', '((a-c)*(b*d))', '((a-c)/(b*d))', '((a-c)+(b*d))', '((a-c)-(b/d))', '((a-c)*(b/d))', '((a-c)/(b/d))', '((a-c)+(b/d))', '((a-c)-(b+d))', '((a-c)*(b+d))', '((a-c)/(b+d))', '((a-c)+(b+d))', '(((a*c)-b)-d)', '(((a*c)-b)*d)', '(((a*c)-b)/d)', '(((a*c)-b)+d)', '(((a*c)*b)-d)', '(((a*c)*b)*d)', '(((a*c)*b)/d)', '(((a*c)*b)+d)', '(((a*c)/b)-d)', '(((a*c)/b)*d)', '(((a*c)/b)/d)', '(((a*c)/b)+d)', '(((a*c)+b)-d)', '(((a*c)+b)*d)', '(((a*c)+b)/d)', '(((a*c)+b)+d)', '((a*c)-(b-d))', '((a*c)*(b-d))', '((a*c)/(b-d))', '((a*c)+(b-d))', '((a*c)-(b*d))', '((a*c)*(b*d))', '((a*c)/(b*d))', '((a*c)+(b*d))', '((a*c)-(b/d))', '((a*c)*(b/d))', '((a*c)/(b/d))', '((a*c)+(b/d))', '((a*c)-(b+d))', '((a*c)*(b+d))', '((a*c)/(b+d))', '((a*c)+(b+d))', '(((a/c)-b)-d)', '(((a/c)-b)*d)', '(((a/c)-b)/d)', '(((a/c)-b)+d)', '(((a/c)*b)-d)', '(((a/c)*b)*d)', '(((a/c)*b)/d)', '(((a/c)*b)+d)', '(((a/c)/b)-d)', '(((a/c)/b)*d)', '(((a/c)/b)/d)', '(((a/c)/b)+d)', '(((a/c)+b)-d)', '(((a/c)+b)*d)', '(((a/c)+b)/d)', '(((a/c)+b)+d)', '((a/c)-(b-d))', '((a/c)*(b-d))', '((a/c)/(b-d))', '((a/c)+(b-d))', '((a/c)-(b*d))', '((a/c)*(b*d))', '((a/c)/(b*d))', '((a/c)+(b*d))', '((a/c)-(b/d))', '((a/c)*(b/d))', '((a/c)/(b/d))', '((a/c)+(b/d))', '((a/c)-(b+d))', '((a/c)*(b+d))', '((a/c)/(b+d))', '((a/c)+(b+d))', '(((a+c)-b)-d)', '(((a+c)-b)*d)', '(((a+c)-b)/d)', '(((a+c)-b)+d)', '(((a+c)*b)-d)', '(((a+c)*b)*d)', '(((a+c)*b)/d)', '(((a+c)*b)+d)', '(((a+c)/b)-d)', '(((a+c)/b)*d)', '(((a+c)/b)/d)', '(((a+c)/b)+d)', '(((a+c)+b)-d)', '(((a+c)+b)*d)', '(((a+c)+b)/d)', '(((a+c)+b)+d)', '((a+c)-(b-d))', '((a+c)*(b-d))', '((a+c)/(b-d))', '((a+c)+(b-d))', '((a+c)-(b*d))', '((a+c)*(b*d))', '((a+c)/(b*d))', '((a+c)+(b*d))', '((a+c)-(b/d))', '((a+c)*(b/d))', '((a+c)/(b/d))', '((a+c)+(b/d))', '((a+c)-(b+d))', '((a+c)*(b+d))', '((a+c)/(b+d))', '((a+c)+(b+d))', '((a-(c-b))-d)', '((a-(c-b))*d)', '((a-(c-b))/d)', '((a-(c-b))+d)', '((a*(c-b))-d)', '((a*(c-b))*d)', '((a*(c-b))/d)', '((a*(c-b))+d)', '((a/(c-b))-d)', '((a/(c-b))*d)', '((a/(c-b))/d)', '((a/(c-b))+d)', '((a+(c-b))-d)', '((a+(c-b))*d)', '((a+(c-b))/d)', '((a+(c-b))+d)', '(a-((c-b)-d))', '(a*((c-b)-d))', '(a/((c-b)-d))', '(a+((c-b)-d))', '(a-((c-b)*d))', '(a*((c-b)*d))', '(a/((c-b)*d))', '(a+((c-b)*d))', '(a-((c-b)/d))', '(a*((c-b)/d))', '(a/((c-b)/d))', '(a+((c-b)/d))', '(a-((c-b)+d))', '(a*((c-b)+d))', '(a/((c-b)+d))', '(a+((c-b)+d))', '((a-(c*b))-d)', '((a-(c*b))*d)', '((a-(c*b))/d)', '((a-(c*b))+d)', '((a*(c*b))-d)', '((a*(c*b))*d)', '((a*(c*b))/d)', '((a*(c*b))+d)', '((a/(c*b))-d)', '((a/(c*b))*d)', '((a/(c*b))/d)', '((a/(c*b))+d)', '((a+(c*b))-d)', '((a+(c*b))*d)', '((a+(c*b))/d)', '((a+(c*b))+d)', '(a-((c*b)-d))', '(a*((c*b)-d))', '(a/((c*b)-d))', '(a+((c*b)-d))', '(a-((c*b)*d))', '(a*((c*b)*d))', '(a/((c*b)*d))', '(a+((c*b)*d))', '(a-((c*b)/d))', '(a*((c*b)/d))', '(a/((c*b)/d))', '(a+((c*b)/d))', '(a-((c*b)+d))', '(a*((c*b)+d))', '(a/((c*b)+d))', '(a+((c*b)+d))', '((a-(c/b))-d)', '((a-(c/b))*d)', '((a-(c/b))/d)', '((a-(c/b))+d)', '((a*(c/b))-d)', '((a*(c/b))*d)', '((a*(c/b))/d)', '((a*(c/b))+d)', '((a/(c/b))-d)', '((a/(c/b))*d)', '((a/(c/b))/d)', '((a/(c/b))+d)', '((a+(c/b))-d)', '((a+(c/b))*d)', '((a+(c/b))/d)', '((a+(c/b))+d)', '(a-((c/b)-d))', '(a*((c/b)-d))', '(a/((c/b)-d))', '(a+((c/b)-d))', '(a-((c/b)*d))', '(a*((c/b)*d))', '(a/((c/b)*d))', '(a+((c/b)*d))', '(a-((c/b)/d))', '(a*((c/b)/d))', '(a/((c/b)/d))', '(a+((c/b)/d))', '(a-((c/b)+d))', '(a*((c/b)+d))', '(a/((c/b)+d))', '(a+((c/b)+d))', '((a-(c+b))-d)', '((a-(c+b))*d)', '((a-(c+b))/d)', '((a-(c+b))+d)', '((a*(c+b))-d)', '((a*(c+b))*d)', '((a*(c+b))/d)', '((a*(c+b))+d)', '((a/(c+b))-d)', '((a/(c+b))*d)', '((a/(c+b))/d)', '((a/(c+b))+d)', '((a+(c+b))-d)', '((a+(c+b))*d)', '((a+(c+b))/d)', '((a+(c+b))+d)', '(a-((c+b)-d))', '(a*((c+b)-d))', '(a/((c+b)-d))', '(a+((c+b)-d))', '(a-((c+b)*d))', '(a*((c+b)*d))', '(a/((c+b)*d))', '(a+((c+b)*d))', '(a-((c+b)/d))', '(a*((c+b)/d))', '(a/((c+b)/d))', '(a+((c+b)/d))', '(a-((c+b)+d))', '(a*((c+b)+d))', '(a/((c+b)+d))', '(a+((c+b)+d))', '(a-(c-(b-d)))', '(a*(c-(b-d)))', '(a/(c-(b-d)))', '(a+(c-(b-d)))', '(a-(c*(b-d)))', '(a*(c*(b-d)))', '(a/(c*(b-d)))', '(a+(c*(b-d)))', '(a-(c/(b-d)))', '(a*(c/(b-d)))', '(a/(c/(b-d)))', '(a+(c/(b-d)))', '(a-(c+(b-d)))', '(a*(c+(b-d)))', '(a/(c+(b-d)))', '(a+(c+(b-d)))', '(a-(c-(b*d)))', '(a*(c-(b*d)))', '(a/(c-(b*d)))', '(a+(c-(b*d)))', '(a-(c*(b*d)))', '(a*(c*(b*d)))', '(a/(c*(b*d)))', '(a+(c*(b*d)))', '(a-(c/(b*d)))', '(a*(c/(b*d)))', '(a/(c/(b*d)))', '(a+(c/(b*d)))', '(a-(c+(b*d)))', '(a*(c+(b*d)))', '(a/(c+(b*d)))', '(a+(c+(b*d)))', '(a-(c-(b/d)))', '(a*(c-(b/d)))', '(a/(c-(b/d)))', '(a+(c-(b/d)))', '(a-(c*(b/d)))', '(a*(c*(b/d)))', '(a/(c*(b/d)))', '(a+(c*(b/d)))', '(a-(c/(b/d)))', '(a*(c/(b/d)))', '(a/(c/(b/d)))', '(a+(c/(b/d)))', '(a-(c+(b/d)))', '(a*(c+(b/d)))', '(a/(c+(b/d)))', '(a+(c+(b/d)))', '(a-(c-(b+d)))', '(a*(c-(b+d)))', '(a/(c-(b+d)))', '(a+(c-(b+d)))', '(a-(c*(b+d)))', '(a*(c*(b+d)))', '(a/(c*(b+d)))', '(a+(c*(b+d)))', '(a-(c/(b+d)))', '(a*(c/(b+d)))', '(a/(c/(b+d)))', '(a+(c/(b+d)))', '(a-(c+(b+d)))', '(a*(c+(b+d)))', '(a/(c+(b+d)))', '(a+(c+(b+d)))', '(((a-c)-d)-b)', '(((a-c)-d)*b)', '(((a-c)-d)/b)', '(((a-c)-d)+b)', '(((a-c)*d)-b)', '(((a-c)*d)*b)', '(((a-c)*d)/b)', '(((a-c)*d)+b)', '(((a-c)/d)-b)', '(((a-c)/d)*b)', '(((a-c)/d)/b)', '(((a-c)/d)+b)', '(((a-c)+d)-b)', '(((a-c)+d)*b)', '(((a-c)+d)/b)', '(((a-c)+d)+b)', '((a-c)-(d-b))', '((a-c)*(d-b))', '((a-c)/(d-b))', '((a-c)+(d-b))', '((a-c)-(d*b))', '((a-c)*(d*b))', '((a-c)/(d*b))', '((a-c)+(d*b))', '((a-c)-(d/b))', '((a-c)*(d/b))', '((a-c)/(d/b))', '((a-c)+(d/b))', '((a-c)-(d+b))', '((a-c)*(d+b))', '((a-c)/(d+b))', '((a-c)+(d+b))', '(((a*c)-d)-b)', '(((a*c)-d)*b)', '(((a*c)-d)/b)', '(((a*c)-d)+b)', '(((a*c)*d)-b)', '(((a*c)*d)*b)', '(((a*c)*d)/b)', '(((a*c)*d)+b)', '(((a*c)/d)-b)', '(((a*c)/d)*b)', '(((a*c)/d)/b)', '(((a*c)/d)+b)', '(((a*c)+d)-b)', '(((a*c)+d)*b)', '(((a*c)+d)/b)', '(((a*c)+d)+b)', '((a*c)-(d-b))', '((a*c)*(d-b))', '((a*c)/(d-b))', '((a*c)+(d-b))', '((a*c)-(d*b))', '((a*c)*(d*b))', '((a*c)/(d*b))', '((a*c)+(d*b))', '((a*c)-(d/b))', '((a*c)*(d/b))', '((a*c)/(d/b))', '((a*c)+(d/b))', '((a*c)-(d+b))', '((a*c)*(d+b))', '((a*c)/(d+b))', '((a*c)+(d+b))', '(((a/c)-d)-b)', '(((a/c)-d)*b)', '(((a/c)-d)/b)', '(((a/c)-d)+b)', '(((a/c)*d)-b)', '(((a/c)*d)*b)', '(((a/c)*d)/b)', '(((a/c)*d)+b)', '(((a/c)/d)-b)', '(((a/c)/d)*b)', '(((a/c)/d)/b)', '(((a/c)/d)+b)', '(((a/c)+d)-b)', '(((a/c)+d)*b)', '(((a/c)+d)/b)', '(((a/c)+d)+b)', '((a/c)-(d-b))', '((a/c)*(d-b))', '((a/c)/(d-b))', '((a/c)+(d-b))', '((a/c)-(d*b))', '((a/c)*(d*b))', '((a/c)/(d*b))', '((a/c)+(d*b))', '((a/c)-(d/b))', '((a/c)*(d/b))', '((a/c)/(d/b))', '((a/c)+(d/b))', '((a/c)-(d+b))', '((a/c)*(d+b))', '((a/c)/(d+b))', '((a/c)+(d+b))', '(((a+c)-d)-b)', '(((a+c)-d)*b)', '(((a+c)-d)/b)', '(((a+c)-d)+b)', '(((a+c)*d)-b)', '(((a+c)*d)*b)', '(((a+c)*d)/b)', '(((a+c)*d)+b)', '(((a+c)/d)-b)', '(((a+c)/d)*b)', '(((a+c)/d)/b)', '(((a+c)/d)+b)', '(((a+c)+d)-b)', '(((a+c)+d)*b)', '(((a+c)+d)/b)', '(((a+c)+d)+b)', '((a+c)-(d-b))', '((a+c)*(d-b))', '((a+c)/(d-b))', '((a+c)+(d-b))', '((a+c)-(d*b))', '((a+c)*(d*b))', '((a+c)/(d*b))', '((a+c)+(d*b))', '((a+c)-(d/b))', '((a+c)*(d/b))', '((a+c)/(d/b))', '((a+c)+(d/b))', '((a+c)-(d+b))', '((a+c)*(d+b))', '((a+c)/(d+b))', '((a+c)+(d+b))', '((a-(c-d))-b)', '((a-(c-d))*b)', '((a-(c-d))/b)', '((a-(c-d))+b)', '((a*(c-d))-b)', '((a*(c-d))*b)', '((a*(c-d))/b)', '((a*(c-d))+b)', '((a/(c-d))-b)', '((a/(c-d))*b)', '((a/(c-d))/b)', '((a/(c-d))+b)', '((a+(c-d))-b)', '((a+(c-d))*b)', '((a+(c-d))/b)', '((a+(c-d))+b)', '(a-((c-d)-b))', '(a*((c-d)-b))', '(a/((c-d)-b))', '(a+((c-d)-b))', '(a-((c-d)*b))', '(a*((c-d)*b))', '(a/((c-d)*b))', '(a+((c-d)*b))', '(a-((c-d)/b))', '(a*((c-d)/b))', '(a/((c-d)/b))', '(a+((c-d)/b))', '(a-((c-d)+b))', '(a*((c-d)+b))', '(a/((c-d)+b))', '(a+((c-d)+b))', '((a-(c*d))-b)', '((a-(c*d))*b)', '((a-(c*d))/b)', '((a-(c*d))+b)', '((a*(c*d))-b)', '((a*(c*d))*b)', '((a*(c*d))/b)', '((a*(c*d))+b)', '((a/(c*d))-b)', '((a/(c*d))*b)', '((a/(c*d))/b)', '((a/(c*d))+b)', '((a+(c*d))-b)', '((a+(c*d))*b)', '((a+(c*d))/b)', '((a+(c*d))+b)', '(a-((c*d)-b))', '(a*((c*d)-b))', '(a/((c*d)-b))', '(a+((c*d)-b))', '(a-((c*d)*b))', '(a*((c*d)*b))', '(a/((c*d)*b))', '(a+((c*d)*b))', '(a-((c*d)/b))', '(a*((c*d)/b))', '(a/((c*d)/b))', '(a+((c*d)/b))', '(a-((c*d)+b))', '(a*((c*d)+b))', '(a/((c*d)+b))', '(a+((c*d)+b))', '((a-(c/d))-b)', '((a-(c/d))*b)', '((a-(c/d))/b)', '((a-(c/d))+b)', '((a*(c/d))-b)', '((a*(c/d))*b)', '((a*(c/d))/b)', '((a*(c/d))+b)', '((a/(c/d))-b)', '((a/(c/d))*b)', '((a/(c/d))/b)', '((a/(c/d))+b)', '((a+(c/d))-b)', '((a+(c/d))*b)', '((a+(c/d))/b)', '((a+(c/d))+b)', '(a-((c/d)-b))', '(a*((c/d)-b))', '(a/((c/d)-b))', '(a+((c/d)-b))', '(a-((c/d)*b))', '(a*((c/d)*b))', '(a/((c/d)*b))', '(a+((c/d)*b))',\n    '(a-((c/d)/b))', '(a*((c/d)/b))', '(a/((c/d)/b))', '(a+((c/d)/b))', '(a-((c/d)+b))', '(a*((c/d)+b))', '(a/((c/d)+b))', '(a+((c/d)+b))', '((a-(c+d))-b)', '((a-(c+d))*b)', '((a-(c+d))/b)', '((a-(c+d))+b)', '((a*(c+d))-b)', '((a*(c+d))*b)', '((a*(c+d))/b)', '((a*(c+d))+b)', '((a/(c+d))-b)', '((a/(c+d))*b)', '((a/(c+d))/b)', '((a/(c+d))+b)', '((a+(c+d))-b)', '((a+(c+d))*b)', '((a+(c+d))/b)', '((a+(c+d))+b)', '(a-((c+d)-b))', '(a*((c+d)-b))', '(a/((c+d)-b))', '(a+((c+d)-b))', '(a-((c+d)*b))', '(a*((c+d)*b))', '(a/((c+d)*b))', '(a+((c+d)*b))', '(a-((c+d)/b))', '(a*((c+d)/b))', '(a/((c+d)/b))', '(a+((c+d)/b))', '(a-((c+d)+b))', '(a*((c+d)+b))', '(a/((c+d)+b))', '(a+((c+d)+b))', '(a-(c-(d-b)))', '(a*(c-(d-b)))', '(a/(c-(d-b)))', '(a+(c-(d-b)))', '(a-(c*(d-b)))', '(a*(c*(d-b)))', '(a/(c*(d-b)))', '(a+(c*(d-b)))', '(a-(c/(d-b)))', '(a*(c/(d-b)))', '(a/(c/(d-b)))', '(a+(c/(d-b)))', '(a-(c+(d-b)))', '(a*(c+(d-b)))', '(a/(c+(d-b)))', '(a+(c+(d-b)))', '(a-(c-(d*b)))', '(a*(c-(d*b)))', '(a/(c-(d*b)))', '(a+(c-(d*b)))', '(a-(c*(d*b)))', '(a*(c*(d*b)))', '(a/(c*(d*b)))', '(a+(c*(d*b)))', '(a-(c/(d*b)))', '(a*(c/(d*b)))', '(a/(c/(d*b)))', '(a+(c/(d*b)))', '(a-(c+(d*b)))', '(a*(c+(d*b)))', '(a/(c+(d*b)))', '(a+(c+(d*b)))', '(a-(c-(d/b)))', '(a*(c-(d/b)))', '(a/(c-(d/b)))', '(a+(c-(d/b)))', '(a-(c*(d/b)))', '(a*(c*(d/b)))', '(a/(c*(d/b)))', '(a+(c*(d/b)))', '(a-(c/(d/b)))', '(a*(c/(d/b)))', '(a/(c/(d/b)))', '(a+(c/(d/b)))', '(a-(c+(d/b)))', '(a*(c+(d/b)))', '(a/(c+(d/b)))', '(a+(c+(d/b)))', '(a-(c-(d+b)))', '(a*(c-(d+b)))', '(a/(c-(d+b)))', '(a+(c-(d+b)))', '(a-(c*(d+b)))', '(a*(c*(d+b)))', '(a/(c*(d+b)))', '(a+(c*(d+b)))', '(a-(c/(d+b)))', '(a*(c/(d+b)))', '(a/(c/(d+b)))', '(a+(c/(d+b)))', '(a-(c+(d+b)))', '(a*(c+(d+b)))', '(a/(c+(d+b)))', '(a+(c+(d+b)))', '(((a-d)-b)-c)', '(((a-d)-b)*c)', '(((a-d)-b)/c)', '(((a-d)-b)+c)', '(((a-d)*b)-c)', '(((a-d)*b)*c)', '(((a-d)*b)/c)', '(((a-d)*b)+c)', '(((a-d)/b)-c)', '(((a-d)/b)*c)', '(((a-d)/b)/c)', '(((a-d)/b)+c)', '(((a-d)+b)-c)', '(((a-d)+b)*c)', '(((a-d)+b)/c)', '(((a-d)+b)+c)', '((a-d)-(b-c))', '((a-d)*(b-c))', '((a-d)/(b-c))', '((a-d)+(b-c))', '((a-d)-(b*c))', '((a-d)*(b*c))', '((a-d)/(b*c))', '((a-d)+(b*c))', '((a-d)-(b/c))', '((a-d)*(b/c))', '((a-d)/(b/c))', '((a-d)+(b/c))', '((a-d)-(b+c))', '((a-d)*(b+c))', '((a-d)/(b+c))', '((a-d)+(b+c))', '(((a*d)-b)-c)', '(((a*d)-b)*c)', '(((a*d)-b)/c)', '(((a*d)-b)+c)', '(((a*d)*b)-c)', '(((a*d)*b)*c)', '(((a*d)*b)/c)', '(((a*d)*b)+c)', '(((a*d)/b)-c)', '(((a*d)/b)*c)', '(((a*d)/b)/c)', '(((a*d)/b)+c)', '(((a*d)+b)-c)', '(((a*d)+b)*c)', '(((a*d)+b)/c)', '(((a*d)+b)+c)', '((a*d)-(b-c))', '((a*d)*(b-c))', '((a*d)/(b-c))', '((a*d)+(b-c))', '((a*d)-(b*c))', '((a*d)*(b*c))', '((a*d)/(b*c))', '((a*d)+(b*c))', '((a*d)-(b/c))', '((a*d)*(b/c))', '((a*d)/(b/c))', '((a*d)+(b/c))', '((a*d)-(b+c))', '((a*d)*(b+c))', '((a*d)/(b+c))', '((a*d)+(b+c))', '(((a/d)-b)-c)', '(((a/d)-b)*c)', '(((a/d)-b)/c)', '(((a/d)-b)+c)', '(((a/d)*b)-c)', '(((a/d)*b)*c)', '(((a/d)*b)/c)', '(((a/d)*b)+c)', '(((a/d)/b)-c)', '(((a/d)/b)*c)', '(((a/d)/b)/c)', '(((a/d)/b)+c)', '(((a/d)+b)-c)', '(((a/d)+b)*c)', '(((a/d)+b)/c)', '(((a/d)+b)+c)', '((a/d)-(b-c))', '((a/d)*(b-c))', '((a/d)/(b-c))', '((a/d)+(b-c))', '((a/d)-(b*c))', '((a/d)*(b*c))', '((a/d)/(b*c))', '((a/d)+(b*c))', '((a/d)-(b/c))', '((a/d)*(b/c))', '((a/d)/(b/c))', '((a/d)+(b/c))', '((a/d)-(b+c))', '((a/d)*(b+c))', '((a/d)/(b+c))', '((a/d)+(b+c))', '(((a+d)-b)-c)', '(((a+d)-b)*c)', '(((a+d)-b)/c)', '(((a+d)-b)+c)', '(((a+d)*b)-c)', '(((a+d)*b)*c)', '(((a+d)*b)/c)', '(((a+d)*b)+c)', '(((a+d)/b)-c)', '(((a+d)/b)*c)', '(((a+d)/b)/c)', '(((a+d)/b)+c)', '(((a+d)+b)-c)', '(((a+d)+b)*c)', '(((a+d)+b)/c)', '(((a+d)+b)+c)', '((a+d)-(b-c))', '((a+d)*(b-c))', '((a+d)/(b-c))', '((a+d)+(b-c))', '((a+d)-(b*c))', '((a+d)*(b*c))', '((a+d)/(b*c))', '((a+d)+(b*c))', '((a+d)-(b/c))', '((a+d)*(b/c))', '((a+d)/(b/c))', '((a+d)+(b/c))', '((a+d)-(b+c))', '((a+d)*(b+c))', '((a+d)/(b+c))', '((a+d)+(b+c))', '((a-(d-b))-c)', '((a-(d-b))*c)', '((a-(d-b))/c)', '((a-(d-b))+c)', '((a*(d-b))-c)', '((a*(d-b))*c)', '((a*(d-b))/c)', '((a*(d-b))+c)', '((a/(d-b))-c)', '((a/(d-b))*c)', '((a/(d-b))/c)', '((a/(d-b))+c)', '((a+(d-b))-c)', '((a+(d-b))*c)', '((a+(d-b))/c)', '((a+(d-b))+c)', '(a-((d-b)-c))', '(a*((d-b)-c))', '(a/((d-b)-c))', '(a+((d-b)-c))', '(a-((d-b)*c))', '(a*((d-b)*c))', '(a/((d-b)*c))', '(a+((d-b)*c))', '(a-((d-b)/c))', '(a*((d-b)/c))', '(a/((d-b)/c))', '(a+((d-b)/c))', '(a-((d-b)+c))', '(a*((d-b)+c))', '(a/((d-b)+c))', '(a+((d-b)+c))', '((a-(d*b))-c)', '((a-(d*b))*c)', '((a-(d*b))/c)', '((a-(d*b))+c)', '((a*(d*b))-c)', '((a*(d*b))*c)', '((a*(d*b))/c)', '((a*(d*b))+c)', '((a/(d*b))-c)', '((a/(d*b))*c)', '((a/(d*b))/c)', '((a/(d*b))+c)', '((a+(d*b))-c)', '((a+(d*b))*c)', '((a+(d*b))/c)', '((a+(d*b))+c)', '(a-((d*b)-c))', '(a*((d*b)-c))', '(a/((d*b)-c))', '(a+((d*b)-c))', '(a-((d*b)*c))', '(a*((d*b)*c))', '(a/((d*b)*c))', '(a+((d*b)*c))', '(a-((d*b)/c))', '(a*((d*b)/c))', '(a/((d*b)/c))', '(a+((d*b)/c))', '(a-((d*b)+c))', '(a*((d*b)+c))', '(a/((d*b)+c))', '(a+((d*b)+c))', '((a-(d/b))-c)', '((a-(d/b))*c)', '((a-(d/b))/c)', '((a-(d/b))+c)', '((a*(d/b))-c)', '((a*(d/b))*c)', '((a*(d/b))/c)', '((a*(d/b))+c)', '((a/(d/b))-c)', '((a/(d/b))*c)', '((a/(d/b))/c)', '((a/(d/b))+c)', '((a+(d/b))-c)', '((a+(d/b))*c)', '((a+(d/b))/c)', '((a+(d/b))+c)', '(a-((d/b)-c))', '(a*((d/b)-c))', '(a/((d/b)-c))', '(a+((d/b)-c))', '(a-((d/b)*c))', '(a*((d/b)*c))', '(a/((d/b)*c))', '(a+((d/b)*c))', '(a-((d/b)/c))', '(a*((d/b)/c))', '(a/((d/b)/c))', '(a+((d/b)/c))', '(a-((d/b)+c))', '(a*((d/b)+c))', '(a/((d/b)+c))', '(a+((d/b)+c))', '((a-(d+b))-c)', '((a-(d+b))*c)', '((a-(d+b))/c)', '((a-(d+b))+c)', '((a*(d+b))-c)', '((a*(d+b))*c)', '((a*(d+b))/c)', '((a*(d+b))+c)', '((a/(d+b))-c)', '((a/(d+b))*c)', '((a/(d+b))/c)', '((a/(d+b))+c)', '((a+(d+b))-c)', '((a+(d+b))*c)', '((a+(d+b))/c)', '((a+(d+b))+c)', '(a-((d+b)-c))', '(a*((d+b)-c))', '(a/((d+b)-c))', '(a+((d+b)-c))', '(a-((d+b)*c))', '(a*((d+b)*c))', '(a/((d+b)*c))', '(a+((d+b)*c))', '(a-((d+b)/c))', '(a*((d+b)/c))', '(a/((d+b)/c))', '(a+((d+b)/c))', '(a-((d+b)+c))', '(a*((d+b)+c))', '(a/((d+b)+c))', '(a+((d+b)+c))', '(a-(d-(b-c)))', '(a*(d-(b-c)))', '(a/(d-(b-c)))', '(a+(d-(b-c)))', '(a-(d*(b-c)))', '(a*(d*(b-c)))', '(a/(d*(b-c)))', '(a+(d*(b-c)))', '(a-(d/(b-c)))', '(a*(d/(b-c)))', '(a/(d/(b-c)))', '(a+(d/(b-c)))', '(a-(d+(b-c)))', '(a*(d+(b-c)))', '(a/(d+(b-c)))', '(a+(d+(b-c)))', '(a-(d-(b*c)))', '(a*(d-(b*c)))', '(a/(d-(b*c)))', '(a+(d-(b*c)))', '(a-(d*(b*c)))', '(a*(d*(b*c)))', '(a/(d*(b*c)))', '(a+(d*(b*c)))', '(a-(d/(b*c)))', '(a*(d/(b*c)))', '(a/(d/(b*c)))', '(a+(d/(b*c)))', '(a-(d+(b*c)))', '(a*(d+(b*c)))', '(a/(d+(b*c)))', '(a+(d+(b*c)))', '(a-(d-(b/c)))', '(a*(d-(b/c)))', '(a/(d-(b/c)))', '(a+(d-(b/c)))', '(a-(d*(b/c)))', '(a*(d*(b/c)))', '(a/(d*(b/c)))', '(a+(d*(b/c)))', '(a-(d/(b/c)))', '(a*(d/(b/c)))', '(a/(d/(b/c)))', '(a+(d/(b/c)))', '(a-(d+(b/c)))', '(a*(d+(b/c)))', '(a/(d+(b/c)))', '(a+(d+(b/c)))', '(a-(d-(b+c)))', '(a*(d-(b+c)))', '(a/(d-(b+c)))', '(a+(d-(b+c)))', '(a-(d*(b+c)))', '(a*(d*(b+c)))', '(a/(d*(b+c)))', '(a+(d*(b+c)))', '(a-(d/(b+c)))', '(a*(d/(b+c)))', '(a/(d/(b+c)))', '(a+(d/(b+c)))', '(a-(d+(b+c)))', '(a*(d+(b+c)))', '(a/(d+(b+c)))', '(a+(d+(b+c)))', '(((a-d)-c)-b)', '(((a-d)-c)*b)', '(((a-d)-c)/b)', '(((a-d)-c)+b)', '(((a-d)*c)-b)', '(((a-d)*c)*b)', '(((a-d)*c)/b)', '(((a-d)*c)+b)', '(((a-d)/c)-b)', '(((a-d)/c)*b)', '(((a-d)/c)/b)', '(((a-d)/c)+b)', '(((a-d)+c)-b)', '(((a-d)+c)*b)', '(((a-d)+c)/b)', '(((a-d)+c)+b)', '((a-d)-(c-b))', '((a-d)*(c-b))', '((a-d)/(c-b))', '((a-d)+(c-b))', '((a-d)-(c*b))', '((a-d)*(c*b))', '((a-d)/(c*b))', '((a-d)+(c*b))', '((a-d)-(c/b))', '((a-d)*(c/b))', '((a-d)/(c/b))', '((a-d)+(c/b))', '((a-d)-(c+b))', '((a-d)*(c+b))', '((a-d)/(c+b))', '((a-d)+(c+b))', '(((a*d)-c)-b)', '(((a*d)-c)*b)', '(((a*d)-c)/b)', '(((a*d)-c)+b)', '(((a*d)*c)-b)', '(((a*d)*c)*b)', '(((a*d)*c)/b)', '(((a*d)*c)+b)', '(((a*d)/c)-b)', '(((a*d)/c)*b)', '(((a*d)/c)/b)', '(((a*d)/c)+b)', '(((a*d)+c)-b)', '(((a*d)+c)*b)', '(((a*d)+c)/b)', '(((a*d)+c)+b)', '((a*d)-(c-b))', '((a*d)*(c-b))', '((a*d)/(c-b))', '((a*d)+(c-b))', '((a*d)-(c*b))', '((a*d)*(c*b))', '((a*d)/(c*b))', '((a*d)+(c*b))', '((a*d)-(c/b))', '((a*d)*(c/b))', '((a*d)/(c/b))', '((a*d)+(c/b))', '((a*d)-(c+b))', '((a*d)*(c+b))', '((a*d)/(c+b))', '((a*d)+(c+b))', '(((a/d)-c)-b)', '(((a/d)-c)*b)', '(((a/d)-c)/b)', '(((a/d)-c)+b)', '(((a/d)*c)-b)', '(((a/d)*c)*b)', '(((a/d)*c)/b)', '(((a/d)*c)+b)', '(((a/d)/c)-b)', '(((a/d)/c)*b)', '(((a/d)/c)/b)', '(((a/d)/c)+b)', '(((a/d)+c)-b)', '(((a/d)+c)*b)', '(((a/d)+c)/b)', '(((a/d)+c)+b)', '((a/d)-(c-b))', '((a/d)*(c-b))', '((a/d)/(c-b))', '((a/d)+(c-b))', '((a/d)-(c*b))', '((a/d)*(c*b))', '((a/d)/(c*b))', '((a/d)+(c*b))', '((a/d)-(c/b))', '((a/d)*(c/b))', '((a/d)/(c/b))', '((a/d)+(c/b))', '((a/d)-(c+b))', '((a/d)*(c+b))', '((a/d)/(c+b))', '((a/d)+(c+b))', '(((a+d)-c)-b)', '(((a+d)-c)*b)', '(((a+d)-c)/b)', '(((a+d)-c)+b)', '(((a+d)*c)-b)', '(((a+d)*c)*b)', '(((a+d)*c)/b)', '(((a+d)*c)+b)', '(((a+d)/c)-b)', '(((a+d)/c)*b)', '(((a+d)/c)/b)', '(((a+d)/c)+b)', '(((a+d)+c)-b)', '(((a+d)+c)*b)', '(((a+d)+c)/b)', '(((a+d)+c)+b)', '((a+d)-(c-b))', '((a+d)*(c-b))', '((a+d)/(c-b))', '((a+d)+(c-b))', '((a+d)-(c*b))', '((a+d)*(c*b))', '((a+d)/(c*b))', '((a+d)+(c*b))', '((a+d)-(c/b))', '((a+d)*(c/b))', '((a+d)/(c/b))', '((a+d)+(c/b))', '((a+d)-(c+b))', '((a+d)*(c+b))', '((a+d)/(c+b))', '((a+d)+(c+b))', '((a-(d-c))-b)', '((a-(d-c))*b)', '((a-(d-c))/b)', '((a-(d-c))+b)', '((a*(d-c))-b)', '((a*(d-c))*b)', '((a*(d-c))/b)', '((a*(d-c))+b)', '((a/(d-c))-b)', '((a/(d-c))*b)', '((a/(d-c))/b)', '((a/(d-c))+b)', '((a+(d-c))-b)', '((a+(d-c))*b)', '((a+(d-c))/b)', '((a+(d-c))+b)', '(a-((d-c)-b))', '(a*((d-c)-b))', '(a/((d-c)-b))', '(a+((d-c)-b))', '(a-((d-c)*b))', '(a*((d-c)*b))', '(a/((d-c)*b))', '(a+((d-c)*b))', '(a-((d-c)/b))', '(a*((d-c)/b))', '(a/((d-c)/b))', '(a+((d-c)/b))', '(a-((d-c)+b))', '(a*((d-c)+b))', '(a/((d-c)+b))', '(a+((d-c)+b))', '((a-(d*c))-b)', '((a-(d*c))*b)', '((a-(d*c))/b)', '((a-(d*c))+b)',\n    '((a*(d*c))-b)', '((a*(d*c))*b)', '((a*(d*c))/b)', '((a*(d*c))+b)', '((a/(d*c))-b)', '((a/(d*c))*b)', '((a/(d*c))/b)', '((a/(d*c))+b)', '((a+(d*c))-b)', '((a+(d*c))*b)', '((a+(d*c))/b)', '((a+(d*c))+b)', '(a-((d*c)-b))', '(a*((d*c)-b))', '(a/((d*c)-b))', '(a+((d*c)-b))', '(a-((d*c)*b))', '(a*((d*c)*b))', '(a/((d*c)*b))', '(a+((d*c)*b))', '(a-((d*c)/b))', '(a*((d*c)/b))', '(a/((d*c)/b))', '(a+((d*c)/b))', '(a-((d*c)+b))', '(a*((d*c)+b))', '(a/((d*c)+b))', '(a+((d*c)+b))', '((a-(d/c))-b)', '((a-(d/c))*b)', '((a-(d/c))/b)', '((a-(d/c))+b)', '((a*(d/c))-b)', '((a*(d/c))*b)', '((a*(d/c))/b)', '((a*(d/c))+b)', '((a/(d/c))-b)', '((a/(d/c))*b)', '((a/(d/c))/b)', '((a/(d/c))+b)', '((a+(d/c))-b)', '((a+(d/c))*b)', '((a+(d/c))/b)', '((a+(d/c))+b)', '(a-((d/c)-b))', '(a*((d/c)-b))', '(a/((d/c)-b))', '(a+((d/c)-b))', '(a-((d/c)*b))', '(a*((d/c)*b))', '(a/((d/c)*b))', '(a+((d/c)*b))', '(a-((d/c)/b))', '(a*((d/c)/b))', '(a/((d/c)/b))', '(a+((d/c)/b))', '(a-((d/c)+b))', '(a*((d/c)+b))', '(a/((d/c)+b))', '(a+((d/c)+b))', '((a-(d+c))-b)', '((a-(d+c))*b)', '((a-(d+c))/b)', '((a-(d+c))+b)', '((a*(d+c))-b)', '((a*(d+c))*b)', '((a*(d+c))/b)', '((a*(d+c))+b)', '((a/(d+c))-b)', '((a/(d+c))*b)', '((a/(d+c))/b)', '((a/(d+c))+b)', '((a+(d+c))-b)', '((a+(d+c))*b)', '((a+(d+c))/b)', '((a+(d+c))+b)', '(a-((d+c)-b))', '(a*((d+c)-b))', '(a/((d+c)-b))', '(a+((d+c)-b))', '(a-((d+c)*b))', '(a*((d+c)*b))', '(a/((d+c)*b))', '(a+((d+c)*b))', '(a-((d+c)/b))', '(a*((d+c)/b))', '(a/((d+c)/b))', '(a+((d+c)/b))', '(a-((d+c)+b))', '(a*((d+c)+b))', '(a/((d+c)+b))', '(a+((d+c)+b))', '(a-(d-(c-b)))', '(a*(d-(c-b)))', '(a/(d-(c-b)))', '(a+(d-(c-b)))', '(a-(d*(c-b)))', '(a*(d*(c-b)))', '(a/(d*(c-b)))', '(a+(d*(c-b)))', '(a-(d/(c-b)))', '(a*(d/(c-b)))', '(a/(d/(c-b)))', '(a+(d/(c-b)))', '(a-(d+(c-b)))', '(a*(d+(c-b)))', '(a/(d+(c-b)))', '(a+(d+(c-b)))', '(a-(d-(c*b)))', '(a*(d-(c*b)))', '(a/(d-(c*b)))', '(a+(d-(c*b)))', '(a-(d*(c*b)))', '(a*(d*(c*b)))', '(a/(d*(c*b)))', '(a+(d*(c*b)))', '(a-(d/(c*b)))', '(a*(d/(c*b)))', '(a/(d/(c*b)))', '(a+(d/(c*b)))', '(a-(d+(c*b)))', '(a*(d+(c*b)))', '(a/(d+(c*b)))', '(a+(d+(c*b)))', '(a-(d-(c/b)))', '(a*(d-(c/b)))', '(a/(d-(c/b)))', '(a+(d-(c/b)))', '(a-(d*(c/b)))', '(a*(d*(c/b)))', '(a/(d*(c/b)))', '(a+(d*(c/b)))', '(a-(d/(c/b)))', '(a*(d/(c/b)))', '(a/(d/(c/b)))', '(a+(d/(c/b)))', '(a-(d+(c/b)))', '(a*(d+(c/b)))', '(a/(d+(c/b)))', '(a+(d+(c/b)))', '(a-(d-(c+b)))', '(a*(d-(c+b)))', '(a/(d-(c+b)))', '(a+(d-(c+b)))', '(a-(d*(c+b)))', '(a*(d*(c+b)))', '(a/(d*(c+b)))', '(a+(d*(c+b)))', '(a-(d/(c+b)))', '(a*(d/(c+b)))', '(a/(d/(c+b)))', '(a+(d/(c+b)))', '(a-(d+(c+b)))', '(a*(d+(c+b)))', '(a/(d+(c+b)))', '(a+(d+(c+b)))', '(((b-a)-c)-d)', '(((b-a)-c)*d)', '(((b-a)-c)/d)', '(((b-a)-c)+d)', '(((b-a)*c)-d)', '(((b-a)*c)*d)', '(((b-a)*c)/d)', '(((b-a)*c)+d)', '(((b-a)/c)-d)', '(((b-a)/c)*d)', '(((b-a)/c)/d)', '(((b-a)/c)+d)', '(((b-a)+c)-d)', '(((b-a)+c)*d)', '(((b-a)+c)/d)', '(((b-a)+c)+d)', '((b-a)-(c-d))', '((b-a)*(c-d))', '((b-a)/(c-d))', '((b-a)+(c-d))', '((b-a)-(c*d))', '((b-a)*(c*d))', '((b-a)/(c*d))', '((b-a)+(c*d))', '((b-a)-(c/d))', '((b-a)*(c/d))', '((b-a)/(c/d))', '((b-a)+(c/d))', '((b-a)-(c+d))', '((b-a)*(c+d))', '((b-a)/(c+d))', '((b-a)+(c+d))', '(((b*a)-c)-d)', '(((b*a)-c)*d)', '(((b*a)-c)/d)', '(((b*a)-c)+d)', '(((b*a)*c)-d)', '(((b*a)*c)*d)', '(((b*a)*c)/d)', '(((b*a)*c)+d)', '(((b*a)/c)-d)', '(((b*a)/c)*d)', '(((b*a)/c)/d)', '(((b*a)/c)+d)', '(((b*a)+c)-d)', '(((b*a)+c)*d)', '(((b*a)+c)/d)', '(((b*a)+c)+d)', '((b*a)-(c-d))', '((b*a)*(c-d))', '((b*a)/(c-d))', '((b*a)+(c-d))', '((b*a)-(c*d))', '((b*a)*(c*d))', '((b*a)/(c*d))', '((b*a)+(c*d))', '((b*a)-(c/d))', '((b*a)*(c/d))', '((b*a)/(c/d))', '((b*a)+(c/d))', '((b*a)-(c+d))', '((b*a)*(c+d))', '((b*a)/(c+d))', '((b*a)+(c+d))', '(((b/a)-c)-d)', '(((b/a)-c)*d)', '(((b/a)-c)/d)', '(((b/a)-c)+d)', '(((b/a)*c)-d)', '(((b/a)*c)*d)', '(((b/a)*c)/d)', '(((b/a)*c)+d)', '(((b/a)/c)-d)', '(((b/a)/c)*d)', '(((b/a)/c)/d)', '(((b/a)/c)+d)', '(((b/a)+c)-d)', '(((b/a)+c)*d)', '(((b/a)+c)/d)', '(((b/a)+c)+d)', '((b/a)-(c-d))', '((b/a)*(c-d))', '((b/a)/(c-d))', '((b/a)+(c-d))', '((b/a)-(c*d))', '((b/a)*(c*d))', '((b/a)/(c*d))', '((b/a)+(c*d))', '((b/a)-(c/d))', '((b/a)*(c/d))', '((b/a)/(c/d))', '((b/a)+(c/d))', '((b/a)-(c+d))', '((b/a)*(c+d))', '((b/a)/(c+d))', '((b/a)+(c+d))', '(((b+a)-c)-d)', '(((b+a)-c)*d)', '(((b+a)-c)/d)', '(((b+a)-c)+d)', '(((b+a)*c)-d)', '(((b+a)*c)*d)', '(((b+a)*c)/d)', '(((b+a)*c)+d)', '(((b+a)/c)-d)', '(((b+a)/c)*d)', '(((b+a)/c)/d)', '(((b+a)/c)+d)', '(((b+a)+c)-d)', '(((b+a)+c)*d)', '(((b+a)+c)/d)', '(((b+a)+c)+d)', '((b+a)-(c-d))', '((b+a)*(c-d))', '((b+a)/(c-d))', '((b+a)+(c-d))', '((b+a)-(c*d))', '((b+a)*(c*d))', '((b+a)/(c*d))', '((b+a)+(c*d))', '((b+a)-(c/d))', '((b+a)*(c/d))', '((b+a)/(c/d))', '((b+a)+(c/d))', '((b+a)-(c+d))', '((b+a)*(c+d))', '((b+a)/(c+d))', '((b+a)+(c+d))', '((b-(a-c))-d)', '((b-(a-c))*d)', '((b-(a-c))/d)', '((b-(a-c))+d)', '((b*(a-c))-d)', '((b*(a-c))*d)', '((b*(a-c))/d)', '((b*(a-c))+d)', '((b/(a-c))-d)', '((b/(a-c))*d)', '((b/(a-c))/d)', '((b/(a-c))+d)', '((b+(a-c))-d)', '((b+(a-c))*d)', '((b+(a-c))/d)', '((b+(a-c))+d)', '(b-((a-c)-d))', '(b*((a-c)-d))', '(b/((a-c)-d))', '(b+((a-c)-d))', '(b-((a-c)*d))', '(b*((a-c)*d))', '(b/((a-c)*d))', '(b+((a-c)*d))', '(b-((a-c)/d))', '(b*((a-c)/d))', '(b/((a-c)/d))', '(b+((a-c)/d))', '(b-((a-c)+d))', '(b*((a-c)+d))', '(b/((a-c)+d))', '(b+((a-c)+d))', '((b-(a*c))-d)', '((b-(a*c))*d)', '((b-(a*c))/d)', '((b-(a*c))+d)', '((b*(a*c))-d)', '((b*(a*c))*d)', '((b*(a*c))/d)', '((b*(a*c))+d)', '((b/(a*c))-d)', '((b/(a*c))*d)', '((b/(a*c))/d)', '((b/(a*c))+d)', '((b+(a*c))-d)', '((b+(a*c))*d)', '((b+(a*c))/d)', '((b+(a*c))+d)', '(b-((a*c)-d))', '(b*((a*c)-d))', '(b/((a*c)-d))', '(b+((a*c)-d))', '(b-((a*c)*d))', '(b*((a*c)*d))', '(b/((a*c)*d))', '(b+((a*c)*d))', '(b-((a*c)/d))', '(b*((a*c)/d))', '(b/((a*c)/d))', '(b+((a*c)/d))', '(b-((a*c)+d))', '(b*((a*c)+d))', '(b/((a*c)+d))', '(b+((a*c)+d))', '((b-(a/c))-d)', '((b-(a/c))*d)', '((b-(a/c))/d)', '((b-(a/c))+d)', '((b*(a/c))-d)', '((b*(a/c))*d)', '((b*(a/c))/d)', '((b*(a/c))+d)', '((b/(a/c))-d)', '((b/(a/c))*d)', '((b/(a/c))/d)', '((b/(a/c))+d)', '((b+(a/c))-d)', '((b+(a/c))*d)', '((b+(a/c))/d)', '((b+(a/c))+d)', '(b-((a/c)-d))', '(b*((a/c)-d))', '(b/((a/c)-d))', '(b+((a/c)-d))', '(b-((a/c)*d))', '(b*((a/c)*d))', '(b/((a/c)*d))', '(b+((a/c)*d))', '(b-((a/c)/d))', '(b*((a/c)/d))', '(b/((a/c)/d))', '(b+((a/c)/d))', '(b-((a/c)+d))', '(b*((a/c)+d))', '(b/((a/c)+d))', '(b+((a/c)+d))', '((b-(a+c))-d)', '((b-(a+c))*d)', '((b-(a+c))/d)', '((b-(a+c))+d)', '((b*(a+c))-d)', '((b*(a+c))*d)', '((b*(a+c))/d)', '((b*(a+c))+d)', '((b/(a+c))-d)', '((b/(a+c))*d)', '((b/(a+c))/d)', '((b/(a+c))+d)', '((b+(a+c))-d)', '((b+(a+c))*d)', '((b+(a+c))/d)', '((b+(a+c))+d)', '(b-((a+c)-d))', '(b*((a+c)-d))', '(b/((a+c)-d))', '(b+((a+c)-d))', '(b-((a+c)*d))', '(b*((a+c)*d))', '(b/((a+c)*d))', '(b+((a+c)*d))', '(b-((a+c)/d))', '(b*((a+c)/d))', '(b/((a+c)/d))', '(b+((a+c)/d))', '(b-((a+c)+d))', '(b*((a+c)+d))', '(b/((a+c)+d))', '(b+((a+c)+d))', '(b-(a-(c-d)))', '(b*(a-(c-d)))', '(b/(a-(c-d)))', '(b+(a-(c-d)))', '(b-(a*(c-d)))', '(b*(a*(c-d)))', '(b/(a*(c-d)))', '(b+(a*(c-d)))', '(b-(a/(c-d)))', '(b*(a/(c-d)))', '(b/(a/(c-d)))', '(b+(a/(c-d)))', '(b-(a+(c-d)))', '(b*(a+(c-d)))', '(b/(a+(c-d)))', '(b+(a+(c-d)))', '(b-(a-(c*d)))', '(b*(a-(c*d)))', '(b/(a-(c*d)))', '(b+(a-(c*d)))', '(b-(a*(c*d)))', '(b*(a*(c*d)))', '(b/(a*(c*d)))', '(b+(a*(c*d)))', '(b-(a/(c*d)))', '(b*(a/(c*d)))', '(b/(a/(c*d)))', '(b+(a/(c*d)))', '(b-(a+(c*d)))', '(b*(a+(c*d)))', '(b/(a+(c*d)))', '(b+(a+(c*d)))', '(b-(a-(c/d)))', '(b*(a-(c/d)))', '(b/(a-(c/d)))', '(b+(a-(c/d)))', '(b-(a*(c/d)))', '(b*(a*(c/d)))', '(b/(a*(c/d)))', '(b+(a*(c/d)))', '(b-(a/(c/d)))', '(b*(a/(c/d)))', '(b/(a/(c/d)))', '(b+(a/(c/d)))', '(b-(a+(c/d)))', '(b*(a+(c/d)))', '(b/(a+(c/d)))', '(b+(a+(c/d)))', '(b-(a-(c+d)))', '(b*(a-(c+d)))', '(b/(a-(c+d)))', '(b+(a-(c+d)))', '(b-(a*(c+d)))', '(b*(a*(c+d)))', '(b/(a*(c+d)))', '(b+(a*(c+d)))', '(b-(a/(c+d)))', '(b*(a/(c+d)))', '(b/(a/(c+d)))', '(b+(a/(c+d)))', '(b-(a+(c+d)))', '(b*(a+(c+d)))', '(b/(a+(c+d)))', '(b+(a+(c+d)))', '(((b-a)-d)-c)', '(((b-a)-d)*c)', '(((b-a)-d)/c)', '(((b-a)-d)+c)', '(((b-a)*d)-c)', '(((b-a)*d)*c)', '(((b-a)*d)/c)', '(((b-a)*d)+c)', '(((b-a)/d)-c)', '(((b-a)/d)*c)', '(((b-a)/d)/c)', '(((b-a)/d)+c)', '(((b-a)+d)-c)', '(((b-a)+d)*c)', '(((b-a)+d)/c)', '(((b-a)+d)+c)', '((b-a)-(d-c))', '((b-a)*(d-c))', '((b-a)/(d-c))', '((b-a)+(d-c))', '((b-a)-(d*c))', '((b-a)*(d*c))', '((b-a)/(d*c))', '((b-a)+(d*c))', '((b-a)-(d/c))', '((b-a)*(d/c))', '((b-a)/(d/c))', '((b-a)+(d/c))', '((b-a)-(d+c))', '((b-a)*(d+c))', '((b-a)/(d+c))', '((b-a)+(d+c))', '(((b*a)-d)-c)', '(((b*a)-d)*c)', '(((b*a)-d)/c)', '(((b*a)-d)+c)', '(((b*a)*d)-c)', '(((b*a)*d)*c)', '(((b*a)*d)/c)', '(((b*a)*d)+c)', '(((b*a)/d)-c)', '(((b*a)/d)*c)', '(((b*a)/d)/c)', '(((b*a)/d)+c)', '(((b*a)+d)-c)', '(((b*a)+d)*c)', '(((b*a)+d)/c)', '(((b*a)+d)+c)', '((b*a)-(d-c))', '((b*a)*(d-c))', '((b*a)/(d-c))', '((b*a)+(d-c))', '((b*a)-(d*c))', '((b*a)*(d*c))', '((b*a)/(d*c))', '((b*a)+(d*c))', '((b*a)-(d/c))', '((b*a)*(d/c))', '((b*a)/(d/c))', '((b*a)+(d/c))', '((b*a)-(d+c))', '((b*a)*(d+c))', '((b*a)/(d+c))', '((b*a)+(d+c))', '(((b/a)-d)-c)', '(((b/a)-d)*c)', '(((b/a)-d)/c)', '(((b/a)-d)+c)', '(((b/a)*d)-c)', '(((b/a)*d)*c)', '(((b/a)*d)/c)', '(((b/a)*d)+c)', '(((b/a)/d)-c)', '(((b/a)/d)*c)', '(((b/a)/d)/c)', '(((b/a)/d)+c)', '(((b/a)+d)-c)', '(((b/a)+d)*c)', '(((b/a)+d)/c)', '(((b/a)+d)+c)', '((b/a)-(d-c))', '((b/a)*(d-c))', '((b/a)/(d-c))', '((b/a)+(d-c))', '((b/a)-(d*c))', '((b/a)*(d*c))', '((b/a)/(d*c))', '((b/a)+(d*c))', '((b/a)-(d/c))', '((b/a)*(d/c))', '((b/a)/(d/c))', '((b/a)+(d/c))', '((b/a)-(d+c))', '((b/a)*(d+c))', '((b/a)/(d+c))', '((b/a)+(d+c))', '(((b+a)-d)-c)', '(((b+a)-d)*c)', '(((b+a)-d)/c)', '(((b+a)-d)+c)', '(((b+a)*d)-c)', '(((b+a)*d)*c)', '(((b+a)*d)/c)', '(((b+a)*d)+c)', '(((b+a)/d)-c)', '(((b+a)/d)*c)', '(((b+a)/d)/c)', '(((b+a)/d)+c)', '(((b+a)+d)-c)', '(((b+a)+d)*c)', '(((b+a)+d)/c)', '(((b+a)+d)+c)',\n    '((b+a)-(d-c))', '((b+a)*(d-c))', '((b+a)/(d-c))', '((b+a)+(d-c))', '((b+a)-(d*c))', '((b+a)*(d*c))', '((b+a)/(d*c))', '((b+a)+(d*c))', '((b+a)-(d/c))', '((b+a)*(d/c))', '((b+a)/(d/c))', '((b+a)+(d/c))', '((b+a)-(d+c))', '((b+a)*(d+c))', '((b+a)/(d+c))', '((b+a)+(d+c))', '((b-(a-d))-c)', '((b-(a-d))*c)', '((b-(a-d))/c)', '((b-(a-d))+c)', '((b*(a-d))-c)', '((b*(a-d))*c)', '((b*(a-d))/c)', '((b*(a-d))+c)', '((b/(a-d))-c)', '((b/(a-d))*c)', '((b/(a-d))/c)', '((b/(a-d))+c)', '((b+(a-d))-c)', '((b+(a-d))*c)', '((b+(a-d))/c)', '((b+(a-d))+c)', '(b-((a-d)-c))', '(b*((a-d)-c))', '(b/((a-d)-c))', '(b+((a-d)-c))', '(b-((a-d)*c))', '(b*((a-d)*c))', '(b/((a-d)*c))', '(b+((a-d)*c))', '(b-((a-d)/c))', '(b*((a-d)/c))', '(b/((a-d)/c))', '(b+((a-d)/c))', '(b-((a-d)+c))', '(b*((a-d)+c))', '(b/((a-d)+c))', '(b+((a-d)+c))', '((b-(a*d))-c)', '((b-(a*d))*c)', '((b-(a*d))/c)', '((b-(a*d))+c)', '((b*(a*d))-c)', '((b*(a*d))*c)', '((b*(a*d))/c)', '((b*(a*d))+c)', '((b/(a*d))-c)', '((b/(a*d))*c)', '((b/(a*d))/c)', '((b/(a*d))+c)', '((b+(a*d))-c)', '((b+(a*d))*c)', '((b+(a*d))/c)', '((b+(a*d))+c)', '(b-((a*d)-c))', '(b*((a*d)-c))', '(b/((a*d)-c))', '(b+((a*d)-c))', '(b-((a*d)*c))', '(b*((a*d)*c))', '(b/((a*d)*c))', '(b+((a*d)*c))', '(b-((a*d)/c))', '(b*((a*d)/c))', '(b/((a*d)/c))', '(b+((a*d)/c))', '(b-((a*d)+c))', '(b*((a*d)+c))', '(b/((a*d)+c))', '(b+((a*d)+c))', '((b-(a/d))-c)', '((b-(a/d))*c)', '((b-(a/d))/c)', '((b-(a/d))+c)', '((b*(a/d))-c)', '((b*(a/d))*c)', '((b*(a/d))/c)', '((b*(a/d))+c)', '((b/(a/d))-c)', '((b/(a/d))*c)', '((b/(a/d))/c)', '((b/(a/d))+c)', '((b+(a/d))-c)', '((b+(a/d))*c)', '((b+(a/d))/c)', '((b+(a/d))+c)', '(b-((a/d)-c))', '(b*((a/d)-c))', '(b/((a/d)-c))', '(b+((a/d)-c))', '(b-((a/d)*c))', '(b*((a/d)*c))', '(b/((a/d)*c))', '(b+((a/d)*c))', '(b-((a/d)/c))', '(b*((a/d)/c))', '(b/((a/d)/c))', '(b+((a/d)/c))', '(b-((a/d)+c))', '(b*((a/d)+c))', '(b/((a/d)+c))', '(b+((a/d)+c))', '((b-(a+d))-c)', '((b-(a+d))*c)', '((b-(a+d))/c)', '((b-(a+d))+c)', '((b*(a+d))-c)', '((b*(a+d))*c)', '((b*(a+d))/c)', '((b*(a+d))+c)', '((b/(a+d))-c)', '((b/(a+d))*c)', '((b/(a+d))/c)', '((b/(a+d))+c)', '((b+(a+d))-c)', '((b+(a+d))*c)', '((b+(a+d))/c)', '((b+(a+d))+c)', '(b-((a+d)-c))', '(b*((a+d)-c))', '(b/((a+d)-c))', '(b+((a+d)-c))', '(b-((a+d)*c))', '(b*((a+d)*c))', '(b/((a+d)*c))', '(b+((a+d)*c))', '(b-((a+d)/c))', '(b*((a+d)/c))', '(b/((a+d)/c))', '(b+((a+d)/c))', '(b-((a+d)+c))', '(b*((a+d)+c))', '(b/((a+d)+c))', '(b+((a+d)+c))', '(b-(a-(d-c)))', '(b*(a-(d-c)))', '(b/(a-(d-c)))', '(b+(a-(d-c)))', '(b-(a*(d-c)))', '(b*(a*(d-c)))', '(b/(a*(d-c)))', '(b+(a*(d-c)))', '(b-(a/(d-c)))', '(b*(a/(d-c)))', '(b/(a/(d-c)))', '(b+(a/(d-c)))', '(b-(a+(d-c)))', '(b*(a+(d-c)))', '(b/(a+(d-c)))', '(b+(a+(d-c)))', '(b-(a-(d*c)))', '(b*(a-(d*c)))', '(b/(a-(d*c)))', '(b+(a-(d*c)))', '(b-(a*(d*c)))', '(b*(a*(d*c)))', '(b/(a*(d*c)))', '(b+(a*(d*c)))', '(b-(a/(d*c)))', '(b*(a/(d*c)))', '(b/(a/(d*c)))', '(b+(a/(d*c)))', '(b-(a+(d*c)))', '(b*(a+(d*c)))', '(b/(a+(d*c)))', '(b+(a+(d*c)))', '(b-(a-(d/c)))', '(b*(a-(d/c)))', '(b/(a-(d/c)))', '(b+(a-(d/c)))', '(b-(a*(d/c)))', '(b*(a*(d/c)))', '(b/(a*(d/c)))', '(b+(a*(d/c)))', '(b-(a/(d/c)))', '(b*(a/(d/c)))', '(b/(a/(d/c)))', '(b+(a/(d/c)))', '(b-(a+(d/c)))', '(b*(a+(d/c)))', '(b/(a+(d/c)))', '(b+(a+(d/c)))', '(b-(a-(d+c)))', '(b*(a-(d+c)))', '(b/(a-(d+c)))', '(b+(a-(d+c)))', '(b-(a*(d+c)))', '(b*(a*(d+c)))', '(b/(a*(d+c)))', '(b+(a*(d+c)))', '(b-(a/(d+c)))', '(b*(a/(d+c)))', '(b/(a/(d+c)))', '(b+(a/(d+c)))', '(b-(a+(d+c)))', '(b*(a+(d+c)))', '(b/(a+(d+c)))', '(b+(a+(d+c)))', '(((b-c)-a)-d)', '(((b-c)-a)*d)', '(((b-c)-a)/d)', '(((b-c)-a)+d)', '(((b-c)*a)-d)', '(((b-c)*a)*d)', '(((b-c)*a)/d)', '(((b-c)*a)+d)', '(((b-c)/a)-d)', '(((b-c)/a)*d)', '(((b-c)/a)/d)', '(((b-c)/a)+d)', '(((b-c)+a)-d)', '(((b-c)+a)*d)', '(((b-c)+a)/d)', '(((b-c)+a)+d)', '((b-c)-(a-d))', '((b-c)*(a-d))', '((b-c)/(a-d))', '((b-c)+(a-d))', '((b-c)-(a*d))', '((b-c)*(a*d))', '((b-c)/(a*d))', '((b-c)+(a*d))', '((b-c)-(a/d))', '((b-c)*(a/d))', '((b-c)/(a/d))', '((b-c)+(a/d))', '((b-c)-(a+d))', '((b-c)*(a+d))', '((b-c)/(a+d))', '((b-c)+(a+d))', '(((b*c)-a)-d)', '(((b*c)-a)*d)', '(((b*c)-a)/d)', '(((b*c)-a)+d)', '(((b*c)*a)-d)', '(((b*c)*a)*d)', '(((b*c)*a)/d)', '(((b*c)*a)+d)', '(((b*c)/a)-d)', '(((b*c)/a)*d)', '(((b*c)/a)/d)', '(((b*c)/a)+d)', '(((b*c)+a)-d)', '(((b*c)+a)*d)', '(((b*c)+a)/d)', '(((b*c)+a)+d)', '((b*c)-(a-d))', '((b*c)*(a-d))', '((b*c)/(a-d))', '((b*c)+(a-d))', '((b*c)-(a*d))', '((b*c)*(a*d))', '((b*c)/(a*d))', '((b*c)+(a*d))', '((b*c)-(a/d))', '((b*c)*(a/d))', '((b*c)/(a/d))', '((b*c)+(a/d))', '((b*c)-(a+d))', '((b*c)*(a+d))', '((b*c)/(a+d))', '((b*c)+(a+d))', '(((b/c)-a)-d)', '(((b/c)-a)*d)', '(((b/c)-a)/d)', '(((b/c)-a)+d)', '(((b/c)*a)-d)', '(((b/c)*a)*d)', '(((b/c)*a)/d)', '(((b/c)*a)+d)', '(((b/c)/a)-d)', '(((b/c)/a)*d)', '(((b/c)/a)/d)', '(((b/c)/a)+d)', '(((b/c)+a)-d)', '(((b/c)+a)*d)', '(((b/c)+a)/d)', '(((b/c)+a)+d)', '((b/c)-(a-d))', '((b/c)*(a-d))', '((b/c)/(a-d))', '((b/c)+(a-d))', '((b/c)-(a*d))', '((b/c)*(a*d))', '((b/c)/(a*d))', '((b/c)+(a*d))', '((b/c)-(a/d))', '((b/c)*(a/d))', '((b/c)/(a/d))', '((b/c)+(a/d))', '((b/c)-(a+d))', '((b/c)*(a+d))', '((b/c)/(a+d))', '((b/c)+(a+d))', '(((b+c)-a)-d)', '(((b+c)-a)*d)', '(((b+c)-a)/d)', '(((b+c)-a)+d)', '(((b+c)*a)-d)', '(((b+c)*a)*d)', '(((b+c)*a)/d)', '(((b+c)*a)+d)', '(((b+c)/a)-d)', '(((b+c)/a)*d)', '(((b+c)/a)/d)', '(((b+c)/a)+d)', '(((b+c)+a)-d)', '(((b+c)+a)*d)', '(((b+c)+a)/d)', '(((b+c)+a)+d)', '((b+c)-(a-d))', '((b+c)*(a-d))', '((b+c)/(a-d))', '((b+c)+(a-d))', '((b+c)-(a*d))', '((b+c)*(a*d))', '((b+c)/(a*d))', '((b+c)+(a*d))', '((b+c)-(a/d))', '((b+c)*(a/d))', '((b+c)/(a/d))', '((b+c)+(a/d))', '((b+c)-(a+d))', '((b+c)*(a+d))', '((b+c)/(a+d))', '((b+c)+(a+d))', '((b-(c-a))-d)', '((b-(c-a))*d)', '((b-(c-a))/d)', '((b-(c-a))+d)', '((b*(c-a))-d)', '((b*(c-a))*d)', '((b*(c-a))/d)', '((b*(c-a))+d)', '((b/(c-a))-d)', '((b/(c-a))*d)', '((b/(c-a))/d)', '((b/(c-a))+d)', '((b+(c-a))-d)', '((b+(c-a))*d)', '((b+(c-a))/d)', '((b+(c-a))+d)', '(b-((c-a)-d))', '(b*((c-a)-d))', '(b/((c-a)-d))', '(b+((c-a)-d))', '(b-((c-a)*d))', '(b*((c-a)*d))', '(b/((c-a)*d))', '(b+((c-a)*d))', '(b-((c-a)/d))', '(b*((c-a)/d))', '(b/((c-a)/d))', '(b+((c-a)/d))', '(b-((c-a)+d))', '(b*((c-a)+d))', '(b/((c-a)+d))', '(b+((c-a)+d))', '((b-(c*a))-d)', '((b-(c*a))*d)', '((b-(c*a))/d)', '((b-(c*a))+d)', '((b*(c*a))-d)', '((b*(c*a))*d)', '((b*(c*a))/d)', '((b*(c*a))+d)', '((b/(c*a))-d)', '((b/(c*a))*d)', '((b/(c*a))/d)', '((b/(c*a))+d)', '((b+(c*a))-d)', '((b+(c*a))*d)', '((b+(c*a))/d)', '((b+(c*a))+d)', '(b-((c*a)-d))', '(b*((c*a)-d))', '(b/((c*a)-d))', '(b+((c*a)-d))', '(b-((c*a)*d))', '(b*((c*a)*d))', '(b/((c*a)*d))', '(b+((c*a)*d))', '(b-((c*a)/d))', '(b*((c*a)/d))', '(b/((c*a)/d))', '(b+((c*a)/d))', '(b-((c*a)+d))', '(b*((c*a)+d))', '(b/((c*a)+d))', '(b+((c*a)+d))', '((b-(c/a))-d)', '((b-(c/a))*d)', '((b-(c/a))/d)', '((b-(c/a))+d)', '((b*(c/a))-d)', '((b*(c/a))*d)', '((b*(c/a))/d)', '((b*(c/a))+d)', '((b/(c/a))-d)', '((b/(c/a))*d)', '((b/(c/a))/d)', '((b/(c/a))+d)', '((b+(c/a))-d)', '((b+(c/a))*d)', '((b+(c/a))/d)', '((b+(c/a))+d)', '(b-((c/a)-d))', '(b*((c/a)-d))', '(b/((c/a)-d))', '(b+((c/a)-d))', '(b-((c/a)*d))', '(b*((c/a)*d))', '(b/((c/a)*d))', '(b+((c/a)*d))', '(b-((c/a)/d))', '(b*((c/a)/d))', '(b/((c/a)/d))', '(b+((c/a)/d))', '(b-((c/a)+d))', '(b*((c/a)+d))', '(b/((c/a)+d))', '(b+((c/a)+d))', '((b-(c+a))-d)', '((b-(c+a))*d)', '((b-(c+a))/d)', '((b-(c+a))+d)', '((b*(c+a))-d)', '((b*(c+a))*d)', '((b*(c+a))/d)', '((b*(c+a))+d)', '((b/(c+a))-d)', '((b/(c+a))*d)', '((b/(c+a))/d)', '((b/(c+a))+d)', '((b+(c+a))-d)', '((b+(c+a))*d)', '((b+(c+a))/d)', '((b+(c+a))+d)', '(b-((c+a)-d))', '(b*((c+a)-d))', '(b/((c+a)-d))', '(b+((c+a)-d))', '(b-((c+a)*d))', '(b*((c+a)*d))', '(b/((c+a)*d))', '(b+((c+a)*d))', '(b-((c+a)/d))', '(b*((c+a)/d))', '(b/((c+a)/d))', '(b+((c+a)/d))', '(b-((c+a)+d))', '(b*((c+a)+d))', '(b/((c+a)+d))', '(b+((c+a)+d))', '(b-(c-(a-d)))', '(b*(c-(a-d)))', '(b/(c-(a-d)))', '(b+(c-(a-d)))', '(b-(c*(a-d)))', '(b*(c*(a-d)))', '(b/(c*(a-d)))', '(b+(c*(a-d)))', '(b-(c/(a-d)))', '(b*(c/(a-d)))', '(b/(c/(a-d)))', '(b+(c/(a-d)))', '(b-(c+(a-d)))', '(b*(c+(a-d)))', '(b/(c+(a-d)))', '(b+(c+(a-d)))', '(b-(c-(a*d)))', '(b*(c-(a*d)))', '(b/(c-(a*d)))', '(b+(c-(a*d)))', '(b-(c*(a*d)))', '(b*(c*(a*d)))', '(b/(c*(a*d)))', '(b+(c*(a*d)))', '(b-(c/(a*d)))', '(b*(c/(a*d)))', '(b/(c/(a*d)))', '(b+(c/(a*d)))', '(b-(c+(a*d)))', '(b*(c+(a*d)))', '(b/(c+(a*d)))', '(b+(c+(a*d)))', '(b-(c-(a/d)))', '(b*(c-(a/d)))', '(b/(c-(a/d)))', '(b+(c-(a/d)))', '(b-(c*(a/d)))', '(b*(c*(a/d)))', '(b/(c*(a/d)))', '(b+(c*(a/d)))', '(b-(c/(a/d)))', '(b*(c/(a/d)))', '(b/(c/(a/d)))', '(b+(c/(a/d)))', '(b-(c+(a/d)))', '(b*(c+(a/d)))', '(b/(c+(a/d)))', '(b+(c+(a/d)))', '(b-(c-(a+d)))', '(b*(c-(a+d)))', '(b/(c-(a+d)))', '(b+(c-(a+d)))', '(b-(c*(a+d)))', '(b*(c*(a+d)))', '(b/(c*(a+d)))', '(b+(c*(a+d)))', '(b-(c/(a+d)))', '(b*(c/(a+d)))', '(b/(c/(a+d)))', '(b+(c/(a+d)))', '(b-(c+(a+d)))', '(b*(c+(a+d)))', '(b/(c+(a+d)))', '(b+(c+(a+d)))', '(((b-c)-d)-a)', '(((b-c)-d)*a)', '(((b-c)-d)/a)', '(((b-c)-d)+a)', '(((b-c)*d)-a)', '(((b-c)*d)*a)', '(((b-c)*d)/a)', '(((b-c)*d)+a)', '(((b-c)/d)-a)', '(((b-c)/d)*a)', '(((b-c)/d)/a)', '(((b-c)/d)+a)', '(((b-c)+d)-a)', '(((b-c)+d)*a)', '(((b-c)+d)/a)', '(((b-c)+d)+a)', '((b-c)-(d-a))', '((b-c)*(d-a))', '((b-c)/(d-a))', '((b-c)+(d-a))', '((b-c)-(d*a))', '((b-c)*(d*a))', '((b-c)/(d*a))', '((b-c)+(d*a))', '((b-c)-(d/a))', '((b-c)*(d/a))', '((b-c)/(d/a))', '((b-c)+(d/a))', '((b-c)-(d+a))', '((b-c)*(d+a))', '((b-c)/(d+a))', '((b-c)+(d+a))', '(((b*c)-d)-a)', '(((b*c)-d)*a)', '(((b*c)-d)/a)', '(((b*c)-d)+a)', '(((b*c)*d)-a)', '(((b*c)*d)*a)', '(((b*c)*d)/a)', '(((b*c)*d)+a)', '(((b*c)/d)-a)', '(((b*c)/d)*a)', '(((b*c)/d)/a)', '(((b*c)/d)+a)', '(((b*c)+d)-a)', '(((b*c)+d)*a)', '(((b*c)+d)/a)', '(((b*c)+d)+a)', '((b*c)-(d-a))', '((b*c)*(d-a))', '((b*c)/(d-a))', '((b*c)+(d-a))', '((b*c)-(d*a))', '((b*c)*(d*a))', '((b*c)/(d*a))', '((b*c)+(d*a))', '((b*c)-(d/a))', '((b*c)*(d/a))', '((b*c)/(d/a))', '((b*c)+(d/a))',\n    '((b*c)-(d+a))', '((b*c)*(d+a))', '((b*c)/(d+a))', '((b*c)+(d+a))', '(((b/c)-d)-a)', '(((b/c)-d)*a)', '(((b/c)-d)/a)', '(((b/c)-d)+a)', '(((b/c)*d)-a)', '(((b/c)*d)*a)', '(((b/c)*d)/a)', '(((b/c)*d)+a)', '(((b/c)/d)-a)', '(((b/c)/d)*a)', '(((b/c)/d)/a)', '(((b/c)/d)+a)', '(((b/c)+d)-a)', '(((b/c)+d)*a)', '(((b/c)+d)/a)', '(((b/c)+d)+a)', '((b/c)-(d-a))', '((b/c)*(d-a))', '((b/c)/(d-a))', '((b/c)+(d-a))', '((b/c)-(d*a))', '((b/c)*(d*a))', '((b/c)/(d*a))', '((b/c)+(d*a))', '((b/c)-(d/a))', '((b/c)*(d/a))', '((b/c)/(d/a))', '((b/c)+(d/a))', '((b/c)-(d+a))', '((b/c)*(d+a))', '((b/c)/(d+a))', '((b/c)+(d+a))', '(((b+c)-d)-a)', '(((b+c)-d)*a)', '(((b+c)-d)/a)', '(((b+c)-d)+a)', '(((b+c)*d)-a)', '(((b+c)*d)*a)', '(((b+c)*d)/a)', '(((b+c)*d)+a)', '(((b+c)/d)-a)', '(((b+c)/d)*a)', '(((b+c)/d)/a)', '(((b+c)/d)+a)', '(((b+c)+d)-a)', '(((b+c)+d)*a)', '(((b+c)+d)/a)', '(((b+c)+d)+a)', '((b+c)-(d-a))', '((b+c)*(d-a))', '((b+c)/(d-a))', '((b+c)+(d-a))', '((b+c)-(d*a))', '((b+c)*(d*a))', '((b+c)/(d*a))', '((b+c)+(d*a))', '((b+c)-(d/a))', '((b+c)*(d/a))', '((b+c)/(d/a))', '((b+c)+(d/a))', '((b+c)-(d+a))', '((b+c)*(d+a))', '((b+c)/(d+a))', '((b+c)+(d+a))', '((b-(c-d))-a)', '((b-(c-d))*a)', '((b-(c-d))/a)', '((b-(c-d))+a)', '((b*(c-d))-a)', '((b*(c-d))*a)', '((b*(c-d))/a)', '((b*(c-d))+a)', '((b/(c-d))-a)', '((b/(c-d))*a)', '((b/(c-d))/a)', '((b/(c-d))+a)', '((b+(c-d))-a)', '((b+(c-d))*a)', '((b+(c-d))/a)', '((b+(c-d))+a)', '(b-((c-d)-a))', '(b*((c-d)-a))', '(b/((c-d)-a))', '(b+((c-d)-a))', '(b-((c-d)*a))', '(b*((c-d)*a))', '(b/((c-d)*a))', '(b+((c-d)*a))', '(b-((c-d)/a))', '(b*((c-d)/a))', '(b/((c-d)/a))', '(b+((c-d)/a))', '(b-((c-d)+a))', '(b*((c-d)+a))', '(b/((c-d)+a))', '(b+((c-d)+a))', '((b-(c*d))-a)', '((b-(c*d))*a)', '((b-(c*d))/a)', '((b-(c*d))+a)', '((b*(c*d))-a)', '((b*(c*d))*a)', '((b*(c*d))/a)', '((b*(c*d))+a)', '((b/(c*d))-a)', '((b/(c*d))*a)', '((b/(c*d))/a)', '((b/(c*d))+a)', '((b+(c*d))-a)', '((b+(c*d))*a)', '((b+(c*d))/a)', '((b+(c*d))+a)', '(b-((c*d)-a))', '(b*((c*d)-a))', '(b/((c*d)-a))', '(b+((c*d)-a))', '(b-((c*d)*a))', '(b*((c*d)*a))', '(b/((c*d)*a))', '(b+((c*d)*a))', '(b-((c*d)/a))', '(b*((c*d)/a))', '(b/((c*d)/a))', '(b+((c*d)/a))', '(b-((c*d)+a))', '(b*((c*d)+a))', '(b/((c*d)+a))', '(b+((c*d)+a))', '((b-(c/d))-a)', '((b-(c/d))*a)', '((b-(c/d))/a)', '((b-(c/d))+a)', '((b*(c/d))-a)', '((b*(c/d))*a)', '((b*(c/d))/a)', '((b*(c/d))+a)', '((b/(c/d))-a)', '((b/(c/d))*a)', '((b/(c/d))/a)', '((b/(c/d))+a)', '((b+(c/d))-a)', '((b+(c/d))*a)', '((b+(c/d))/a)', '((b+(c/d))+a)', '(b-((c/d)-a))', '(b*((c/d)-a))', '(b/((c/d)-a))', '(b+((c/d)-a))', '(b-((c/d)*a))', '(b*((c/d)*a))', '(b/((c/d)*a))', '(b+((c/d)*a))', '(b-((c/d)/a))', '(b*((c/d)/a))', '(b/((c/d)/a))', '(b+((c/d)/a))', '(b-((c/d)+a))', '(b*((c/d)+a))', '(b/((c/d)+a))', '(b+((c/d)+a))', '((b-(c+d))-a)', '((b-(c+d))*a)', '((b-(c+d))/a)', '((b-(c+d))+a)', '((b*(c+d))-a)', '((b*(c+d))*a)', '((b*(c+d))/a)', '((b*(c+d))+a)', '((b/(c+d))-a)', '((b/(c+d))*a)', '((b/(c+d))/a)', '((b/(c+d))+a)', '((b+(c+d))-a)', '((b+(c+d))*a)', '((b+(c+d))/a)', '((b+(c+d))+a)', '(b-((c+d)-a))', '(b*((c+d)-a))', '(b/((c+d)-a))', '(b+((c+d)-a))', '(b-((c+d)*a))', '(b*((c+d)*a))', '(b/((c+d)*a))', '(b+((c+d)*a))', '(b-((c+d)/a))', '(b*((c+d)/a))', '(b/((c+d)/a))', '(b+((c+d)/a))', '(b-((c+d)+a))', '(b*((c+d)+a))', '(b/((c+d)+a))', '(b+((c+d)+a))', '(b-(c-(d-a)))', '(b*(c-(d-a)))', '(b/(c-(d-a)))', '(b+(c-(d-a)))', '(b-(c*(d-a)))', '(b*(c*(d-a)))', '(b/(c*(d-a)))', '(b+(c*(d-a)))', '(b-(c/(d-a)))', '(b*(c/(d-a)))', '(b/(c/(d-a)))', '(b+(c/(d-a)))', '(b-(c+(d-a)))', '(b*(c+(d-a)))', '(b/(c+(d-a)))', '(b+(c+(d-a)))', '(b-(c-(d*a)))', '(b*(c-(d*a)))', '(b/(c-(d*a)))', '(b+(c-(d*a)))', '(b-(c*(d*a)))', '(b*(c*(d*a)))', '(b/(c*(d*a)))', '(b+(c*(d*a)))', '(b-(c/(d*a)))', '(b*(c/(d*a)))', '(b/(c/(d*a)))', '(b+(c/(d*a)))', '(b-(c+(d*a)))', '(b*(c+(d*a)))', '(b/(c+(d*a)))', '(b+(c+(d*a)))', '(b-(c-(d/a)))', '(b*(c-(d/a)))', '(b/(c-(d/a)))', '(b+(c-(d/a)))', '(b-(c*(d/a)))', '(b*(c*(d/a)))', '(b/(c*(d/a)))', '(b+(c*(d/a)))', '(b-(c/(d/a)))', '(b*(c/(d/a)))', '(b/(c/(d/a)))', '(b+(c/(d/a)))', '(b-(c+(d/a)))', '(b*(c+(d/a)))', '(b/(c+(d/a)))', '(b+(c+(d/a)))', '(b-(c-(d+a)))', '(b*(c-(d+a)))', '(b/(c-(d+a)))', '(b+(c-(d+a)))', '(b-(c*(d+a)))', '(b*(c*(d+a)))', '(b/(c*(d+a)))', '(b+(c*(d+a)))', '(b-(c/(d+a)))', '(b*(c/(d+a)))', '(b/(c/(d+a)))', '(b+(c/(d+a)))', '(b-(c+(d+a)))', '(b*(c+(d+a)))', '(b/(c+(d+a)))', '(b+(c+(d+a)))', '(((b-d)-a)-c)', '(((b-d)-a)*c)', '(((b-d)-a)/c)', '(((b-d)-a)+c)', '(((b-d)*a)-c)', '(((b-d)*a)*c)', '(((b-d)*a)/c)', '(((b-d)*a)+c)', '(((b-d)/a)-c)', '(((b-d)/a)*c)', '(((b-d)/a)/c)', '(((b-d)/a)+c)', '(((b-d)+a)-c)', '(((b-d)+a)*c)', '(((b-d)+a)/c)', '(((b-d)+a)+c)', '((b-d)-(a-c))', '((b-d)*(a-c))', '((b-d)/(a-c))', '((b-d)+(a-c))', '((b-d)-(a*c))', '((b-d)*(a*c))', '((b-d)/(a*c))', '((b-d)+(a*c))', '((b-d)-(a/c))', '((b-d)*(a/c))', '((b-d)/(a/c))', '((b-d)+(a/c))', '((b-d)-(a+c))', '((b-d)*(a+c))', '((b-d)/(a+c))', '((b-d)+(a+c))', '(((b*d)-a)-c)', '(((b*d)-a)*c)', '(((b*d)-a)/c)', '(((b*d)-a)+c)', '(((b*d)*a)-c)', '(((b*d)*a)*c)', '(((b*d)*a)/c)', '(((b*d)*a)+c)', '(((b*d)/a)-c)', '(((b*d)/a)*c)', '(((b*d)/a)/c)', '(((b*d)/a)+c)', '(((b*d)+a)-c)', '(((b*d)+a)*c)', '(((b*d)+a)/c)', '(((b*d)+a)+c)', '((b*d)-(a-c))', '((b*d)*(a-c))', '((b*d)/(a-c))', '((b*d)+(a-c))', '((b*d)-(a*c))', '((b*d)*(a*c))', '((b*d)/(a*c))', '((b*d)+(a*c))', '((b*d)-(a/c))', '((b*d)*(a/c))', '((b*d)/(a/c))', '((b*d)+(a/c))', '((b*d)-(a+c))', '((b*d)*(a+c))', '((b*d)/(a+c))', '((b*d)+(a+c))', '(((b/d)-a)-c)', '(((b/d)-a)*c)', '(((b/d)-a)/c)', '(((b/d)-a)+c)', '(((b/d)*a)-c)', '(((b/d)*a)*c)', '(((b/d)*a)/c)', '(((b/d)*a)+c)', '(((b/d)/a)-c)', '(((b/d)/a)*c)', '(((b/d)/a)/c)', '(((b/d)/a)+c)', '(((b/d)+a)-c)', '(((b/d)+a)*c)', '(((b/d)+a)/c)', '(((b/d)+a)+c)', '((b/d)-(a-c))', '((b/d)*(a-c))', '((b/d)/(a-c))', '((b/d)+(a-c))', '((b/d)-(a*c))', '((b/d)*(a*c))', '((b/d)/(a*c))', '((b/d)+(a*c))', '((b/d)-(a/c))', '((b/d)*(a/c))', '((b/d)/(a/c))', '((b/d)+(a/c))', '((b/d)-(a+c))', '((b/d)*(a+c))', '((b/d)/(a+c))', '((b/d)+(a+c))', '(((b+d)-a)-c)', '(((b+d)-a)*c)', '(((b+d)-a)/c)', '(((b+d)-a)+c)', '(((b+d)*a)-c)', '(((b+d)*a)*c)', '(((b+d)*a)/c)', '(((b+d)*a)+c)', '(((b+d)/a)-c)', '(((b+d)/a)*c)', '(((b+d)/a)/c)', '(((b+d)/a)+c)', '(((b+d)+a)-c)', '(((b+d)+a)*c)', '(((b+d)+a)/c)', '(((b+d)+a)+c)', '((b+d)-(a-c))', '((b+d)*(a-c))', '((b+d)/(a-c))', '((b+d)+(a-c))', '((b+d)-(a*c))', '((b+d)*(a*c))', '((b+d)/(a*c))', '((b+d)+(a*c))', '((b+d)-(a/c))', '((b+d)*(a/c))', '((b+d)/(a/c))', '((b+d)+(a/c))', '((b+d)-(a+c))', '((b+d)*(a+c))', '((b+d)/(a+c))', '((b+d)+(a+c))', '((b-(d-a))-c)', '((b-(d-a))*c)', '((b-(d-a))/c)', '((b-(d-a))+c)', '((b*(d-a))-c)', '((b*(d-a))*c)', '((b*(d-a))/c)', '((b*(d-a))+c)', '((b/(d-a))-c)', '((b/(d-a))*c)', '((b/(d-a))/c)', '((b/(d-a))+c)', '((b+(d-a))-c)', '((b+(d-a))*c)', '((b+(d-a))/c)', '((b+(d-a))+c)', '(b-((d-a)-c))', '(b*((d-a)-c))', '(b/((d-a)-c))', '(b+((d-a)-c))', '(b-((d-a)*c))', '(b*((d-a)*c))', '(b/((d-a)*c))', '(b+((d-a)*c))', '(b-((d-a)/c))', '(b*((d-a)/c))', '(b/((d-a)/c))', '(b+((d-a)/c))', '(b-((d-a)+c))', '(b*((d-a)+c))', '(b/((d-a)+c))', '(b+((d-a)+c))', '((b-(d*a))-c)', '((b-(d*a))*c)', '((b-(d*a))/c)', '((b-(d*a))+c)', '((b*(d*a))-c)', '((b*(d*a))*c)', '((b*(d*a))/c)', '((b*(d*a))+c)', '((b/(d*a))-c)', '((b/(d*a))*c)', '((b/(d*a))/c)', '((b/(d*a))+c)', '((b+(d*a))-c)', '((b+(d*a))*c)', '((b+(d*a))/c)', '((b+(d*a))+c)', '(b-((d*a)-c))', '(b*((d*a)-c))', '(b/((d*a)-c))', '(b+((d*a)-c))', '(b-((d*a)*c))', '(b*((d*a)*c))', '(b/((d*a)*c))', '(b+((d*a)*c))', '(b-((d*a)/c))', '(b*((d*a)/c))', '(b/((d*a)/c))', '(b+((d*a)/c))', '(b-((d*a)+c))', '(b*((d*a)+c))', '(b/((d*a)+c))', '(b+((d*a)+c))', '((b-(d/a))-c)', '((b-(d/a))*c)', '((b-(d/a))/c)', '((b-(d/a))+c)', '((b*(d/a))-c)', '((b*(d/a))*c)', '((b*(d/a))/c)', '((b*(d/a))+c)', '((b/(d/a))-c)', '((b/(d/a))*c)', '((b/(d/a))/c)', '((b/(d/a))+c)', '((b+(d/a))-c)', '((b+(d/a))*c)', '((b+(d/a))/c)', '((b+(d/a))+c)', '(b-((d/a)-c))', '(b*((d/a)-c))', '(b/((d/a)-c))', '(b+((d/a)-c))', '(b-((d/a)*c))', '(b*((d/a)*c))', '(b/((d/a)*c))', '(b+((d/a)*c))', '(b-((d/a)/c))', '(b*((d/a)/c))', '(b/((d/a)/c))', '(b+((d/a)/c))', '(b-((d/a)+c))', '(b*((d/a)+c))', '(b/((d/a)+c))', '(b+((d/a)+c))', '((b-(d+a))-c)', '((b-(d+a))*c)', '((b-(d+a))/c)', '((b-(d+a))+c)', '((b*(d+a))-c)', '((b*(d+a))*c)', '((b*(d+a))/c)', '((b*(d+a))+c)', '((b/(d+a))-c)', '((b/(d+a))*c)', '((b/(d+a))/c)', '((b/(d+a))+c)', '((b+(d+a))-c)', '((b+(d+a))*c)', '((b+(d+a))/c)', '((b+(d+a))+c)', '(b-((d+a)-c))', '(b*((d+a)-c))', '(b/((d+a)-c))', '(b+((d+a)-c))', '(b-((d+a)*c))', '(b*((d+a)*c))', '(b/((d+a)*c))', '(b+((d+a)*c))', '(b-((d+a)/c))', '(b*((d+a)/c))', '(b/((d+a)/c))', '(b+((d+a)/c))', '(b-((d+a)+c))', '(b*((d+a)+c))', '(b/((d+a)+c))', '(b+((d+a)+c))', '(b-(d-(a-c)))', '(b*(d-(a-c)))', '(b/(d-(a-c)))', '(b+(d-(a-c)))', '(b-(d*(a-c)))', '(b*(d*(a-c)))', '(b/(d*(a-c)))', '(b+(d*(a-c)))', '(b-(d/(a-c)))', '(b*(d/(a-c)))', '(b/(d/(a-c)))', '(b+(d/(a-c)))', '(b-(d+(a-c)))', '(b*(d+(a-c)))', '(b/(d+(a-c)))', '(b+(d+(a-c)))', '(b-(d-(a*c)))', '(b*(d-(a*c)))', '(b/(d-(a*c)))', '(b+(d-(a*c)))', '(b-(d*(a*c)))', '(b*(d*(a*c)))', '(b/(d*(a*c)))', '(b+(d*(a*c)))', '(b-(d/(a*c)))', '(b*(d/(a*c)))', '(b/(d/(a*c)))', '(b+(d/(a*c)))', '(b-(d+(a*c)))', '(b*(d+(a*c)))', '(b/(d+(a*c)))', '(b+(d+(a*c)))', '(b-(d-(a/c)))', '(b*(d-(a/c)))', '(b/(d-(a/c)))', '(b+(d-(a/c)))', '(b-(d*(a/c)))', '(b*(d*(a/c)))', '(b/(d*(a/c)))', '(b+(d*(a/c)))', '(b-(d/(a/c)))', '(b*(d/(a/c)))', '(b/(d/(a/c)))', '(b+(d/(a/c)))', '(b-(d+(a/c)))', '(b*(d+(a/c)))', '(b/(d+(a/c)))', '(b+(d+(a/c)))', '(b-(d-(a+c)))', '(b*(d-(a+c)))', '(b/(d-(a+c)))', '(b+(d-(a+c)))', '(b-(d*(a+c)))', '(b*(d*(a+c)))', '(b/(d*(a+c)))', '(b+(d*(a+c)))', '(b-(d/(a+c)))', '(b*(d/(a+c)))', '(b/(d/(a+c)))', '(b+(d/(a+c)))', '(b-(d+(a+c)))', '(b*(d+(a+c)))', '(b/(d+(a+c)))', '(b+(d+(a+c)))', '(((b-d)-c)-a)', '(((b-d)-c)*a)', '(((b-d)-c)/a)', '(((b-d)-c)+a)', '(((b-d)*c)-a)', '(((b-d)*c)*a)', '(((b-d)*c)/a)', '(((b-d)*c)+a)',\n    '(((b-d)/c)-a)', '(((b-d)/c)*a)', '(((b-d)/c)/a)', '(((b-d)/c)+a)', '(((b-d)+c)-a)', '(((b-d)+c)*a)', '(((b-d)+c)/a)', '(((b-d)+c)+a)', '((b-d)-(c-a))', '((b-d)*(c-a))', '((b-d)/(c-a))', '((b-d)+(c-a))', '((b-d)-(c*a))', '((b-d)*(c*a))', '((b-d)/(c*a))', '((b-d)+(c*a))', '((b-d)-(c/a))', '((b-d)*(c/a))', '((b-d)/(c/a))', '((b-d)+(c/a))', '((b-d)-(c+a))', '((b-d)*(c+a))', '((b-d)/(c+a))', '((b-d)+(c+a))', '(((b*d)-c)-a)', '(((b*d)-c)*a)', '(((b*d)-c)/a)', '(((b*d)-c)+a)', '(((b*d)*c)-a)', '(((b*d)*c)*a)', '(((b*d)*c)/a)', '(((b*d)*c)+a)', '(((b*d)/c)-a)', '(((b*d)/c)*a)', '(((b*d)/c)/a)', '(((b*d)/c)+a)', '(((b*d)+c)-a)', '(((b*d)+c)*a)', '(((b*d)+c)/a)', '(((b*d)+c)+a)', '((b*d)-(c-a))', '((b*d)*(c-a))', '((b*d)/(c-a))', '((b*d)+(c-a))', '((b*d)-(c*a))', '((b*d)*(c*a))', '((b*d)/(c*a))', '((b*d)+(c*a))', '((b*d)-(c/a))', '((b*d)*(c/a))', '((b*d)/(c/a))', '((b*d)+(c/a))', '((b*d)-(c+a))', '((b*d)*(c+a))', '((b*d)/(c+a))', '((b*d)+(c+a))', '(((b/d)-c)-a)', '(((b/d)-c)*a)', '(((b/d)-c)/a)', '(((b/d)-c)+a)', '(((b/d)*c)-a)', '(((b/d)*c)*a)', '(((b/d)*c)/a)', '(((b/d)*c)+a)', '(((b/d)/c)-a)', '(((b/d)/c)*a)', '(((b/d)/c)/a)', '(((b/d)/c)+a)', '(((b/d)+c)-a)', '(((b/d)+c)*a)', '(((b/d)+c)/a)', '(((b/d)+c)+a)', '((b/d)-(c-a))', '((b/d)*(c-a))', '((b/d)/(c-a))', '((b/d)+(c-a))', '((b/d)-(c*a))', '((b/d)*(c*a))', '((b/d)/(c*a))', '((b/d)+(c*a))', '((b/d)-(c/a))', '((b/d)*(c/a))', '((b/d)/(c/a))', '((b/d)+(c/a))', '((b/d)-(c+a))', '((b/d)*(c+a))', '((b/d)/(c+a))', '((b/d)+(c+a))', '(((b+d)-c)-a)', '(((b+d)-c)*a)', '(((b+d)-c)/a)', '(((b+d)-c)+a)', '(((b+d)*c)-a)', '(((b+d)*c)*a)', '(((b+d)*c)/a)', '(((b+d)*c)+a)', '(((b+d)/c)-a)', '(((b+d)/c)*a)', '(((b+d)/c)/a)', '(((b+d)/c)+a)', '(((b+d)+c)-a)', '(((b+d)+c)*a)', '(((b+d)+c)/a)', '(((b+d)+c)+a)', '((b+d)-(c-a))', '((b+d)*(c-a))', '((b+d)/(c-a))', '((b+d)+(c-a))', '((b+d)-(c*a))', '((b+d)*(c*a))', '((b+d)/(c*a))', '((b+d)+(c*a))', '((b+d)-(c/a))', '((b+d)*(c/a))', '((b+d)/(c/a))', '((b+d)+(c/a))', '((b+d)-(c+a))', '((b+d)*(c+a))', '((b+d)/(c+a))', '((b+d)+(c+a))', '((b-(d-c))-a)', '((b-(d-c))*a)', '((b-(d-c))/a)', '((b-(d-c))+a)', '((b*(d-c))-a)', '((b*(d-c))*a)', '((b*(d-c))/a)', '((b*(d-c))+a)', '((b/(d-c))-a)', '((b/(d-c))*a)', '((b/(d-c))/a)', '((b/(d-c))+a)', '((b+(d-c))-a)', '((b+(d-c))*a)', '((b+(d-c))/a)', '((b+(d-c))+a)', '(b-((d-c)-a))', '(b*((d-c)-a))', '(b/((d-c)-a))', '(b+((d-c)-a))', '(b-((d-c)*a))', '(b*((d-c)*a))', '(b/((d-c)*a))', '(b+((d-c)*a))', '(b-((d-c)/a))', '(b*((d-c)/a))', '(b/((d-c)/a))', '(b+((d-c)/a))', '(b-((d-c)+a))', '(b*((d-c)+a))', '(b/((d-c)+a))', '(b+((d-c)+a))', '((b-(d*c))-a)', '((b-(d*c))*a)', '((b-(d*c))/a)', '((b-(d*c))+a)', '((b*(d*c))-a)', '((b*(d*c))*a)', '((b*(d*c))/a)', '((b*(d*c))+a)', '((b/(d*c))-a)', '((b/(d*c))*a)', '((b/(d*c))/a)', '((b/(d*c))+a)', '((b+(d*c))-a)', '((b+(d*c))*a)', '((b+(d*c))/a)', '((b+(d*c))+a)', '(b-((d*c)-a))', '(b*((d*c)-a))', '(b/((d*c)-a))', '(b+((d*c)-a))', '(b-((d*c)*a))', '(b*((d*c)*a))', '(b/((d*c)*a))', '(b+((d*c)*a))', '(b-((d*c)/a))', '(b*((d*c)/a))', '(b/((d*c)/a))', '(b+((d*c)/a))', '(b-((d*c)+a))', '(b*((d*c)+a))', '(b/((d*c)+a))', '(b+((d*c)+a))', '((b-(d/c))-a)', '((b-(d/c))*a)', '((b-(d/c))/a)', '((b-(d/c))+a)', '((b*(d/c))-a)', '((b*(d/c))*a)', '((b*(d/c))/a)', '((b*(d/c))+a)', '((b/(d/c))-a)', '((b/(d/c))*a)', '((b/(d/c))/a)', '((b/(d/c))+a)', '((b+(d/c))-a)', '((b+(d/c))*a)', '((b+(d/c))/a)', '((b+(d/c))+a)', '(b-((d/c)-a))', '(b*((d/c)-a))', '(b/((d/c)-a))', '(b+((d/c)-a))', '(b-((d/c)*a))', '(b*((d/c)*a))', '(b/((d/c)*a))', '(b+((d/c)*a))', '(b-((d/c)/a))', '(b*((d/c)/a))', '(b/((d/c)/a))', '(b+((d/c)/a))', '(b-((d/c)+a))', '(b*((d/c)+a))', '(b/((d/c)+a))', '(b+((d/c)+a))', '((b-(d+c))-a)', '((b-(d+c))*a)', '((b-(d+c))/a)', '((b-(d+c))+a)', '((b*(d+c))-a)', '((b*(d+c))*a)', '((b*(d+c))/a)', '((b*(d+c))+a)', '((b/(d+c))-a)', '((b/(d+c))*a)', '((b/(d+c))/a)', '((b/(d+c))+a)', '((b+(d+c))-a)', '((b+(d+c))*a)', '((b+(d+c))/a)', '((b+(d+c))+a)', '(b-((d+c)-a))', '(b*((d+c)-a))', '(b/((d+c)-a))', '(b+((d+c)-a))', '(b-((d+c)*a))', '(b*((d+c)*a))', '(b/((d+c)*a))', '(b+((d+c)*a))', '(b-((d+c)/a))', '(b*((d+c)/a))', '(b/((d+c)/a))', '(b+((d+c)/a))', '(b-((d+c)+a))', '(b*((d+c)+a))', '(b/((d+c)+a))', '(b+((d+c)+a))', '(b-(d-(c-a)))', '(b*(d-(c-a)))', '(b/(d-(c-a)))', '(b+(d-(c-a)))', '(b-(d*(c-a)))', '(b*(d*(c-a)))', '(b/(d*(c-a)))', '(b+(d*(c-a)))', '(b-(d/(c-a)))', '(b*(d/(c-a)))', '(b/(d/(c-a)))', '(b+(d/(c-a)))', '(b-(d+(c-a)))', '(b*(d+(c-a)))', '(b/(d+(c-a)))', '(b+(d+(c-a)))', '(b-(d-(c*a)))', '(b*(d-(c*a)))', '(b/(d-(c*a)))', '(b+(d-(c*a)))', '(b-(d*(c*a)))', '(b*(d*(c*a)))', '(b/(d*(c*a)))', '(b+(d*(c*a)))', '(b-(d/(c*a)))', '(b*(d/(c*a)))', '(b/(d/(c*a)))', '(b+(d/(c*a)))', '(b-(d+(c*a)))', '(b*(d+(c*a)))', '(b/(d+(c*a)))', '(b+(d+(c*a)))', '(b-(d-(c/a)))', '(b*(d-(c/a)))', '(b/(d-(c/a)))', '(b+(d-(c/a)))', '(b-(d*(c/a)))', '(b*(d*(c/a)))', '(b/(d*(c/a)))', '(b+(d*(c/a)))', '(b-(d/(c/a)))', '(b*(d/(c/a)))', '(b/(d/(c/a)))', '(b+(d/(c/a)))', '(b-(d+(c/a)))', '(b*(d+(c/a)))', '(b/(d+(c/a)))', '(b+(d+(c/a)))', '(b-(d-(c+a)))', '(b*(d-(c+a)))', '(b/(d-(c+a)))', '(b+(d-(c+a)))', '(b-(d*(c+a)))', '(b*(d*(c+a)))', '(b/(d*(c+a)))', '(b+(d*(c+a)))', '(b-(d/(c+a)))', '(b*(d/(c+a)))', '(b/(d/(c+a)))', '(b+(d/(c+a)))', '(b-(d+(c+a)))', '(b*(d+(c+a)))', '(b/(d+(c+a)))', '(b+(d+(c+a)))', '(((c-a)-b)-d)', '(((c-a)-b)*d)', '(((c-a)-b)/d)', '(((c-a)-b)+d)', '(((c-a)*b)-d)', '(((c-a)*b)*d)', '(((c-a)*b)/d)', '(((c-a)*b)+d)', '(((c-a)/b)-d)', '(((c-a)/b)*d)', '(((c-a)/b)/d)', '(((c-a)/b)+d)', '(((c-a)+b)-d)', '(((c-a)+b)*d)', '(((c-a)+b)/d)', '(((c-a)+b)+d)', '((c-a)-(b-d))', '((c-a)*(b-d))', '((c-a)/(b-d))', '((c-a)+(b-d))', '((c-a)-(b*d))', '((c-a)*(b*d))', '((c-a)/(b*d))', '((c-a)+(b*d))', '((c-a)-(b/d))', '((c-a)*(b/d))', '((c-a)/(b/d))', '((c-a)+(b/d))', '((c-a)-(b+d))', '((c-a)*(b+d))', '((c-a)/(b+d))', '((c-a)+(b+d))', '(((c*a)-b)-d)', '(((c*a)-b)*d)', '(((c*a)-b)/d)', '(((c*a)-b)+d)', '(((c*a)*b)-d)', '(((c*a)*b)*d)', '(((c*a)*b)/d)', '(((c*a)*b)+d)', '(((c*a)/b)-d)', '(((c*a)/b)*d)', '(((c*a)/b)/d)', '(((c*a)/b)+d)', '(((c*a)+b)-d)', '(((c*a)+b)*d)', '(((c*a)+b)/d)', '(((c*a)+b)+d)', '((c*a)-(b-d))', '((c*a)*(b-d))', '((c*a)/(b-d))', '((c*a)+(b-d))', '((c*a)-(b*d))', '((c*a)*(b*d))', '((c*a)/(b*d))', '((c*a)+(b*d))', '((c*a)-(b/d))', '((c*a)*(b/d))', '((c*a)/(b/d))', '((c*a)+(b/d))', '((c*a)-(b+d))', '((c*a)*(b+d))', '((c*a)/(b+d))', '((c*a)+(b+d))', '(((c/a)-b)-d)', '(((c/a)-b)*d)', '(((c/a)-b)/d)', '(((c/a)-b)+d)', '(((c/a)*b)-d)', '(((c/a)*b)*d)', '(((c/a)*b)/d)', '(((c/a)*b)+d)', '(((c/a)/b)-d)', '(((c/a)/b)*d)', '(((c/a)/b)/d)', '(((c/a)/b)+d)', '(((c/a)+b)-d)', '(((c/a)+b)*d)', '(((c/a)+b)/d)', '(((c/a)+b)+d)', '((c/a)-(b-d))', '((c/a)*(b-d))', '((c/a)/(b-d))', '((c/a)+(b-d))', '((c/a)-(b*d))', '((c/a)*(b*d))', '((c/a)/(b*d))', '((c/a)+(b*d))', '((c/a)-(b/d))', '((c/a)*(b/d))', '((c/a)/(b/d))', '((c/a)+(b/d))', '((c/a)-(b+d))', '((c/a)*(b+d))', '((c/a)/(b+d))', '((c/a)+(b+d))', '(((c+a)-b)-d)', '(((c+a)-b)*d)', '(((c+a)-b)/d)', '(((c+a)-b)+d)', '(((c+a)*b)-d)', '(((c+a)*b)*d)', '(((c+a)*b)/d)', '(((c+a)*b)+d)', '(((c+a)/b)-d)', '(((c+a)/b)*d)', '(((c+a)/b)/d)', '(((c+a)/b)+d)', '(((c+a)+b)-d)', '(((c+a)+b)*d)', '(((c+a)+b)/d)', '(((c+a)+b)+d)', '((c+a)-(b-d))', '((c+a)*(b-d))', '((c+a)/(b-d))', '((c+a)+(b-d))', '((c+a)-(b*d))', '((c+a)*(b*d))', '((c+a)/(b*d))', '((c+a)+(b*d))', '((c+a)-(b/d))', '((c+a)*(b/d))', '((c+a)/(b/d))', '((c+a)+(b/d))', '((c+a)-(b+d))', '((c+a)*(b+d))', '((c+a)/(b+d))', '((c+a)+(b+d))', '((c-(a-b))-d)', '((c-(a-b))*d)', '((c-(a-b))/d)', '((c-(a-b))+d)', '((c*(a-b))-d)', '((c*(a-b))*d)', '((c*(a-b))/d)', '((c*(a-b))+d)', '((c/(a-b))-d)', '((c/(a-b))*d)', '((c/(a-b))/d)', '((c/(a-b))+d)', '((c+(a-b))-d)', '((c+(a-b))*d)', '((c+(a-b))/d)', '((c+(a-b))+d)', '(c-((a-b)-d))', '(c*((a-b)-d))', '(c/((a-b)-d))', '(c+((a-b)-d))', '(c-((a-b)*d))', '(c*((a-b)*d))', '(c/((a-b)*d))', '(c+((a-b)*d))', '(c-((a-b)/d))', '(c*((a-b)/d))', '(c/((a-b)/d))', '(c+((a-b)/d))', '(c-((a-b)+d))', '(c*((a-b)+d))', '(c/((a-b)+d))', '(c+((a-b)+d))', '((c-(a*b))-d)', '((c-(a*b))*d)', '((c-(a*b))/d)', '((c-(a*b))+d)', '((c*(a*b))-d)', '((c*(a*b))*d)', '((c*(a*b))/d)', '((c*(a*b))+d)', '((c/(a*b))-d)', '((c/(a*b))*d)', '((c/(a*b))/d)', '((c/(a*b))+d)', '((c+(a*b))-d)', '((c+(a*b))*d)', '((c+(a*b))/d)', '((c+(a*b))+d)', '(c-((a*b)-d))', '(c*((a*b)-d))', '(c/((a*b)-d))', '(c+((a*b)-d))', '(c-((a*b)*d))', '(c*((a*b)*d))', '(c/((a*b)*d))', '(c+((a*b)*d))', '(c-((a*b)/d))', '(c*((a*b)/d))', '(c/((a*b)/d))', '(c+((a*b)/d))', '(c-((a*b)+d))', '(c*((a*b)+d))', '(c/((a*b)+d))', '(c+((a*b)+d))', '((c-(a/b))-d)', '((c-(a/b))*d)', '((c-(a/b))/d)', '((c-(a/b))+d)', '((c*(a/b))-d)', '((c*(a/b))*d)', '((c*(a/b))/d)', '((c*(a/b))+d)', '((c/(a/b))-d)', '((c/(a/b))*d)', '((c/(a/b))/d)', '((c/(a/b))+d)', '((c+(a/b))-d)', '((c+(a/b))*d)', '((c+(a/b))/d)', '((c+(a/b))+d)', '(c-((a/b)-d))', '(c*((a/b)-d))', '(c/((a/b)-d))', '(c+((a/b)-d))', '(c-((a/b)*d))', '(c*((a/b)*d))', '(c/((a/b)*d))', '(c+((a/b)*d))', '(c-((a/b)/d))', '(c*((a/b)/d))', '(c/((a/b)/d))', '(c+((a/b)/d))', '(c-((a/b)+d))', '(c*((a/b)+d))', '(c/((a/b)+d))', '(c+((a/b)+d))', '((c-(a+b))-d)', '((c-(a+b))*d)', '((c-(a+b))/d)', '((c-(a+b))+d)', '((c*(a+b))-d)', '((c*(a+b))*d)', '((c*(a+b))/d)', '((c*(a+b))+d)', '((c/(a+b))-d)', '((c/(a+b))*d)', '((c/(a+b))/d)', '((c/(a+b))+d)', '((c+(a+b))-d)', '((c+(a+b))*d)', '((c+(a+b))/d)', '((c+(a+b))+d)', '(c-((a+b)-d))', '(c*((a+b)-d))', '(c/((a+b)-d))', '(c+((a+b)-d))', '(c-((a+b)*d))', '(c*((a+b)*d))', '(c/((a+b)*d))', '(c+((a+b)*d))', '(c-((a+b)/d))', '(c*((a+b)/d))', '(c/((a+b)/d))', '(c+((a+b)/d))', '(c-((a+b)+d))', '(c*((a+b)+d))', '(c/((a+b)+d))', '(c+((a+b)+d))', '(c-(a-(b-d)))', '(c*(a-(b-d)))', '(c/(a-(b-d)))', '(c+(a-(b-d)))', '(c-(a*(b-d)))', '(c*(a*(b-d)))', '(c/(a*(b-d)))', '(c+(a*(b-d)))', '(c-(a/(b-d)))', '(c*(a/(b-d)))', '(c/(a/(b-d)))', '(c+(a/(b-d)))', '(c-(a+(b-d)))', '(c*(a+(b-d)))', '(c/(a+(b-d)))', '(c+(a+(b-d)))', '(c-(a-(b*d)))', '(c*(a-(b*d)))', '(c/(a-(b*d)))', '(c+(a-(b*d)))',\n    '(c-(a*(b*d)))', '(c*(a*(b*d)))', '(c/(a*(b*d)))', '(c+(a*(b*d)))', '(c-(a/(b*d)))', '(c*(a/(b*d)))', '(c/(a/(b*d)))', '(c+(a/(b*d)))', '(c-(a+(b*d)))', '(c*(a+(b*d)))', '(c/(a+(b*d)))', '(c+(a+(b*d)))', '(c-(a-(b/d)))', '(c*(a-(b/d)))', '(c/(a-(b/d)))', '(c+(a-(b/d)))', '(c-(a*(b/d)))', '(c*(a*(b/d)))', '(c/(a*(b/d)))', '(c+(a*(b/d)))', '(c-(a/(b/d)))', '(c*(a/(b/d)))', '(c/(a/(b/d)))', '(c+(a/(b/d)))', '(c-(a+(b/d)))', '(c*(a+(b/d)))', '(c/(a+(b/d)))', '(c+(a+(b/d)))', '(c-(a-(b+d)))', '(c*(a-(b+d)))', '(c/(a-(b+d)))', '(c+(a-(b+d)))', '(c-(a*(b+d)))', '(c*(a*(b+d)))', '(c/(a*(b+d)))', '(c+(a*(b+d)))', '(c-(a/(b+d)))', '(c*(a/(b+d)))', '(c/(a/(b+d)))', '(c+(a/(b+d)))', '(c-(a+(b+d)))', '(c*(a+(b+d)))', '(c/(a+(b+d)))', '(c+(a+(b+d)))', '(((c-a)-d)-b)', '(((c-a)-d)*b)', '(((c-a)-d)/b)', '(((c-a)-d)+b)', '(((c-a)*d)-b)', '(((c-a)*d)*b)', '(((c-a)*d)/b)', '(((c-a)*d)+b)', '(((c-a)/d)-b)', '(((c-a)/d)*b)', '(((c-a)/d)/b)', '(((c-a)/d)+b)', '(((c-a)+d)-b)', '(((c-a)+d)*b)', '(((c-a)+d)/b)', '(((c-a)+d)+b)', '((c-a)-(d-b))', '((c-a)*(d-b))', '((c-a)/(d-b))', '((c-a)+(d-b))', '((c-a)-(d*b))', '((c-a)*(d*b))', '((c-a)/(d*b))', '((c-a)+(d*b))', '((c-a)-(d/b))', '((c-a)*(d/b))', '((c-a)/(d/b))', '((c-a)+(d/b))', '((c-a)-(d+b))', '((c-a)*(d+b))', '((c-a)/(d+b))', '((c-a)+(d+b))', '(((c*a)-d)-b)', '(((c*a)-d)*b)', '(((c*a)-d)/b)', '(((c*a)-d)+b)', '(((c*a)*d)-b)', '(((c*a)*d)*b)', '(((c*a)*d)/b)', '(((c*a)*d)+b)', '(((c*a)/d)-b)', '(((c*a)/d)*b)', '(((c*a)/d)/b)', '(((c*a)/d)+b)', '(((c*a)+d)-b)', '(((c*a)+d)*b)', '(((c*a)+d)/b)', '(((c*a)+d)+b)', '((c*a)-(d-b))', '((c*a)*(d-b))', '((c*a)/(d-b))', '((c*a)+(d-b))', '((c*a)-(d*b))', '((c*a)*(d*b))', '((c*a)/(d*b))', '((c*a)+(d*b))', '((c*a)-(d/b))', '((c*a)*(d/b))', '((c*a)/(d/b))', '((c*a)+(d/b))', '((c*a)-(d+b))', '((c*a)*(d+b))', '((c*a)/(d+b))', '((c*a)+(d+b))', '(((c/a)-d)-b)', '(((c/a)-d)*b)', '(((c/a)-d)/b)', '(((c/a)-d)+b)', '(((c/a)*d)-b)', '(((c/a)*d)*b)', '(((c/a)*d)/b)', '(((c/a)*d)+b)', '(((c/a)/d)-b)', '(((c/a)/d)*b)', '(((c/a)/d)/b)', '(((c/a)/d)+b)', '(((c/a)+d)-b)', '(((c/a)+d)*b)', '(((c/a)+d)/b)', '(((c/a)+d)+b)', '((c/a)-(d-b))', '((c/a)*(d-b))', '((c/a)/(d-b))', '((c/a)+(d-b))', '((c/a)-(d*b))', '((c/a)*(d*b))', '((c/a)/(d*b))', '((c/a)+(d*b))', '((c/a)-(d/b))', '((c/a)*(d/b))', '((c/a)/(d/b))', '((c/a)+(d/b))', '((c/a)-(d+b))', '((c/a)*(d+b))', '((c/a)/(d+b))', '((c/a)+(d+b))', '(((c+a)-d)-b)', '(((c+a)-d)*b)', '(((c+a)-d)/b)', '(((c+a)-d)+b)', '(((c+a)*d)-b)', '(((c+a)*d)*b)', '(((c+a)*d)/b)', '(((c+a)*d)+b)', '(((c+a)/d)-b)', '(((c+a)/d)*b)', '(((c+a)/d)/b)', '(((c+a)/d)+b)', '(((c+a)+d)-b)', '(((c+a)+d)*b)', '(((c+a)+d)/b)', '(((c+a)+d)+b)', '((c+a)-(d-b))', '((c+a)*(d-b))', '((c+a)/(d-b))', '((c+a)+(d-b))', '((c+a)-(d*b))', '((c+a)*(d*b))', '((c+a)/(d*b))', '((c+a)+(d*b))', '((c+a)-(d/b))', '((c+a)*(d/b))', '((c+a)/(d/b))', '((c+a)+(d/b))', '((c+a)-(d+b))', '((c+a)*(d+b))', '((c+a)/(d+b))', '((c+a)+(d+b))', '((c-(a-d))-b)', '((c-(a-d))*b)', '((c-(a-d))/b)', '((c-(a-d))+b)', '((c*(a-d))-b)', '((c*(a-d))*b)', '((c*(a-d))/b)', '((c*(a-d))+b)', '((c/(a-d))-b)', '((c/(a-d))*b)', '((c/(a-d))/b)', '((c/(a-d))+b)', '((c+(a-d))-b)', '((c+(a-d))*b)', '((c+(a-d))/b)', '((c+(a-d))+b)', '(c-((a-d)-b))', '(c*((a-d)-b))', '(c/((a-d)-b))', '(c+((a-d)-b))', '(c-((a-d)*b))', '(c*((a-d)*b))', '(c/((a-d)*b))', '(c+((a-d)*b))', '(c-((a-d)/b))', '(c*((a-d)/b))', '(c/((a-d)/b))', '(c+((a-d)/b))', '(c-((a-d)+b))', '(c*((a-d)+b))', '(c/((a-d)+b))', '(c+((a-d)+b))', '((c-(a*d))-b)', '((c-(a*d))*b)', '((c-(a*d))/b)', '((c-(a*d))+b)', '((c*(a*d))-b)', '((c*(a*d))*b)', '((c*(a*d))/b)', '((c*(a*d))+b)', '((c/(a*d))-b)', '((c/(a*d))*b)', '((c/(a*d))/b)', '((c/(a*d))+b)', '((c+(a*d))-b)', '((c+(a*d))*b)', '((c+(a*d))/b)', '((c+(a*d))+b)', '(c-((a*d)-b))', '(c*((a*d)-b))', '(c/((a*d)-b))', '(c+((a*d)-b))', '(c-((a*d)*b))', '(c*((a*d)*b))', '(c/((a*d)*b))', '(c+((a*d)*b))', '(c-((a*d)/b))', '(c*((a*d)/b))', '(c/((a*d)/b))', '(c+((a*d)/b))', '(c-((a*d)+b))', '(c*((a*d)+b))', '(c/((a*d)+b))', '(c+((a*d)+b))', '((c-(a/d))-b)', '((c-(a/d))*b)', '((c-(a/d))/b)', '((c-(a/d))+b)', '((c*(a/d))-b)', '((c*(a/d))*b)', '((c*(a/d))/b)', '((c*(a/d))+b)', '((c/(a/d))-b)', '((c/(a/d))*b)', '((c/(a/d))/b)', '((c/(a/d))+b)', '((c+(a/d))-b)', '((c+(a/d))*b)', '((c+(a/d))/b)', '((c+(a/d))+b)', '(c-((a/d)-b))', '(c*((a/d)-b))', '(c/((a/d)-b))', '(c+((a/d)-b))', '(c-((a/d)*b))', '(c*((a/d)*b))', '(c/((a/d)*b))', '(c+((a/d)*b))', '(c-((a/d)/b))', '(c*((a/d)/b))', '(c/((a/d)/b))', '(c+((a/d)/b))', '(c-((a/d)+b))', '(c*((a/d)+b))', '(c/((a/d)+b))', '(c+((a/d)+b))', '((c-(a+d))-b)', '((c-(a+d))*b)', '((c-(a+d))/b)', '((c-(a+d))+b)', '((c*(a+d))-b)', '((c*(a+d))*b)', '((c*(a+d))/b)', '((c*(a+d))+b)', '((c/(a+d))-b)', '((c/(a+d))*b)', '((c/(a+d))/b)', '((c/(a+d))+b)', '((c+(a+d))-b)', '((c+(a+d))*b)', '((c+(a+d))/b)', '((c+(a+d))+b)', '(c-((a+d)-b))', '(c*((a+d)-b))', '(c/((a+d)-b))', '(c+((a+d)-b))', '(c-((a+d)*b))', '(c*((a+d)*b))', '(c/((a+d)*b))', '(c+((a+d)*b))', '(c-((a+d)/b))', '(c*((a+d)/b))', '(c/((a+d)/b))', '(c+((a+d)/b))', '(c-((a+d)+b))', '(c*((a+d)+b))', '(c/((a+d)+b))', '(c+((a+d)+b))', '(c-(a-(d-b)))', '(c*(a-(d-b)))', '(c/(a-(d-b)))', '(c+(a-(d-b)))', '(c-(a*(d-b)))', '(c*(a*(d-b)))', '(c/(a*(d-b)))', '(c+(a*(d-b)))', '(c-(a/(d-b)))', '(c*(a/(d-b)))', '(c/(a/(d-b)))', '(c+(a/(d-b)))', '(c-(a+(d-b)))', '(c*(a+(d-b)))', '(c/(a+(d-b)))', '(c+(a+(d-b)))', '(c-(a-(d*b)))', '(c*(a-(d*b)))', '(c/(a-(d*b)))', '(c+(a-(d*b)))', '(c-(a*(d*b)))', '(c*(a*(d*b)))', '(c/(a*(d*b)))', '(c+(a*(d*b)))', '(c-(a/(d*b)))', '(c*(a/(d*b)))', '(c/(a/(d*b)))', '(c+(a/(d*b)))', '(c-(a+(d*b)))', '(c*(a+(d*b)))', '(c/(a+(d*b)))', '(c+(a+(d*b)))', '(c-(a-(d/b)))', '(c*(a-(d/b)))', '(c/(a-(d/b)))', '(c+(a-(d/b)))', '(c-(a*(d/b)))', '(c*(a*(d/b)))', '(c/(a*(d/b)))', '(c+(a*(d/b)))', '(c-(a/(d/b)))', '(c*(a/(d/b)))', '(c/(a/(d/b)))', '(c+(a/(d/b)))', '(c-(a+(d/b)))', '(c*(a+(d/b)))', '(c/(a+(d/b)))', '(c+(a+(d/b)))', '(c-(a-(d+b)))', '(c*(a-(d+b)))', '(c/(a-(d+b)))', '(c+(a-(d+b)))', '(c-(a*(d+b)))', '(c*(a*(d+b)))', '(c/(a*(d+b)))', '(c+(a*(d+b)))', '(c-(a/(d+b)))', '(c*(a/(d+b)))', '(c/(a/(d+b)))', '(c+(a/(d+b)))', '(c-(a+(d+b)))', '(c*(a+(d+b)))', '(c/(a+(d+b)))', '(c+(a+(d+b)))', '(((c-b)-a)-d)', '(((c-b)-a)*d)', '(((c-b)-a)/d)', '(((c-b)-a)+d)', '(((c-b)*a)-d)', '(((c-b)*a)*d)', '(((c-b)*a)/d)', '(((c-b)*a)+d)', '(((c-b)/a)-d)', '(((c-b)/a)*d)', '(((c-b)/a)/d)', '(((c-b)/a)+d)', '(((c-b)+a)-d)', '(((c-b)+a)*d)', '(((c-b)+a)/d)', '(((c-b)+a)+d)', '((c-b)-(a-d))', '((c-b)*(a-d))', '((c-b)/(a-d))', '((c-b)+(a-d))', '((c-b)-(a*d))', '((c-b)*(a*d))', '((c-b)/(a*d))', '((c-b)+(a*d))', '((c-b)-(a/d))', '((c-b)*(a/d))', '((c-b)/(a/d))', '((c-b)+(a/d))', '((c-b)-(a+d))', '((c-b)*(a+d))', '((c-b)/(a+d))', '((c-b)+(a+d))', '(((c*b)-a)-d)', '(((c*b)-a)*d)', '(((c*b)-a)/d)', '(((c*b)-a)+d)', '(((c*b)*a)-d)', '(((c*b)*a)*d)', '(((c*b)*a)/d)', '(((c*b)*a)+d)', '(((c*b)/a)-d)', '(((c*b)/a)*d)', '(((c*b)/a)/d)', '(((c*b)/a)+d)', '(((c*b)+a)-d)', '(((c*b)+a)*d)', '(((c*b)+a)/d)', '(((c*b)+a)+d)', '((c*b)-(a-d))', '((c*b)*(a-d))', '((c*b)/(a-d))', '((c*b)+(a-d))', '((c*b)-(a*d))', '((c*b)*(a*d))', '((c*b)/(a*d))', '((c*b)+(a*d))', '((c*b)-(a/d))', '((c*b)*(a/d))', '((c*b)/(a/d))', '((c*b)+(a/d))', '((c*b)-(a+d))', '((c*b)*(a+d))', '((c*b)/(a+d))', '((c*b)+(a+d))', '(((c/b)-a)-d)', '(((c/b)-a)*d)', '(((c/b)-a)/d)', '(((c/b)-a)+d)', '(((c/b)*a)-d)', '(((c/b)*a)*d)', '(((c/b)*a)/d)', '(((c/b)*a)+d)', '(((c/b)/a)-d)', '(((c/b)/a)*d)', '(((c/b)/a)/d)', '(((c/b)/a)+d)', '(((c/b)+a)-d)', '(((c/b)+a)*d)', '(((c/b)+a)/d)', '(((c/b)+a)+d)', '((c/b)-(a-d))', '((c/b)*(a-d))', '((c/b)/(a-d))', '((c/b)+(a-d))', '((c/b)-(a*d))', '((c/b)*(a*d))', '((c/b)/(a*d))', '((c/b)+(a*d))', '((c/b)-(a/d))', '((c/b)*(a/d))', '((c/b)/(a/d))', '((c/b)+(a/d))', '((c/b)-(a+d))', '((c/b)*(a+d))', '((c/b)/(a+d))', '((c/b)+(a+d))', '(((c+b)-a)-d)', '(((c+b)-a)*d)', '(((c+b)-a)/d)', '(((c+b)-a)+d)', '(((c+b)*a)-d)', '(((c+b)*a)*d)', '(((c+b)*a)/d)', '(((c+b)*a)+d)', '(((c+b)/a)-d)', '(((c+b)/a)*d)', '(((c+b)/a)/d)', '(((c+b)/a)+d)', '(((c+b)+a)-d)', '(((c+b)+a)*d)', '(((c+b)+a)/d)', '(((c+b)+a)+d)', '((c+b)-(a-d))', '((c+b)*(a-d))', '((c+b)/(a-d))', '((c+b)+(a-d))', '((c+b)-(a*d))', '((c+b)*(a*d))', '((c+b)/(a*d))', '((c+b)+(a*d))', '((c+b)-(a/d))', '((c+b)*(a/d))', '((c+b)/(a/d))', '((c+b)+(a/d))', '((c+b)-(a+d))', '((c+b)*(a+d))', '((c+b)/(a+d))', '((c+b)+(a+d))', '((c-(b-a))-d)', '((c-(b-a))*d)', '((c-(b-a))/d)', '((c-(b-a))+d)', '((c*(b-a))-d)', '((c*(b-a))*d)', '((c*(b-a))/d)', '((c*(b-a))+d)', '((c/(b-a))-d)', '((c/(b-a))*d)', '((c/(b-a))/d)', '((c/(b-a))+d)', '((c+(b-a))-d)', '((c+(b-a))*d)', '((c+(b-a))/d)', '((c+(b-a))+d)', '(c-((b-a)-d))', '(c*((b-a)-d))', '(c/((b-a)-d))', '(c+((b-a)-d))', '(c-((b-a)*d))', '(c*((b-a)*d))', '(c/((b-a)*d))', '(c+((b-a)*d))', '(c-((b-a)/d))', '(c*((b-a)/d))', '(c/((b-a)/d))', '(c+((b-a)/d))', '(c-((b-a)+d))', '(c*((b-a)+d))', '(c/((b-a)+d))', '(c+((b-a)+d))', '((c-(b*a))-d)', '((c-(b*a))*d)', '((c-(b*a))/d)', '((c-(b*a))+d)', '((c*(b*a))-d)', '((c*(b*a))*d)', '((c*(b*a))/d)', '((c*(b*a))+d)', '((c/(b*a))-d)', '((c/(b*a))*d)', '((c/(b*a))/d)', '((c/(b*a))+d)', '((c+(b*a))-d)', '((c+(b*a))*d)', '((c+(b*a))/d)', '((c+(b*a))+d)', '(c-((b*a)-d))', '(c*((b*a)-d))', '(c/((b*a)-d))', '(c+((b*a)-d))', '(c-((b*a)*d))', '(c*((b*a)*d))', '(c/((b*a)*d))', '(c+((b*a)*d))', '(c-((b*a)/d))', '(c*((b*a)/d))', '(c/((b*a)/d))', '(c+((b*a)/d))', '(c-((b*a)+d))', '(c*((b*a)+d))', '(c/((b*a)+d))', '(c+((b*a)+d))', '((c-(b/a))-d)', '((c-(b/a))*d)', '((c-(b/a))/d)', '((c-(b/a))+d)', '((c*(b/a))-d)', '((c*(b/a))*d)', '((c*(b/a))/d)', '((c*(b/a))+d)', '((c/(b/a))-d)', '((c/(b/a))*d)', '((c/(b/a))/d)', '((c/(b/a))+d)', '((c+(b/a))-d)', '((c+(b/a))*d)', '((c+(b/a))/d)', '((c+(b/a))+d)', '(c-((b/a)-d))', '(c*((b/a)-d))', '(c/((b/a)-d))', '(c+((b/a)-d))', '(c-((b/a)*d))', '(c*((b/a)*d))', '(c/((b/a)*d))', '(c+((b/a)*d))', '(c-((b/a)/d))', '(c*((b/a)/d))', '(c/((b/a)/d))', '(c+((b/a)/d))', '(c-((b/a)+d))', '(c*((b/a)+d))', '(c/((b/a)+d))', '(c+((b/a)+d))',\n    '((c-(b+a))-d)', '((c-(b+a))*d)', '((c-(b+a))/d)', '((c-(b+a))+d)', '((c*(b+a))-d)', '((c*(b+a))*d)', '((c*(b+a))/d)', '((c*(b+a))+d)', '((c/(b+a))-d)', '((c/(b+a))*d)', '((c/(b+a))/d)', '((c/(b+a))+d)', '((c+(b+a))-d)', '((c+(b+a))*d)', '((c+(b+a))/d)', '((c+(b+a))+d)', '(c-((b+a)-d))', '(c*((b+a)-d))', '(c/((b+a)-d))', '(c+((b+a)-d))', '(c-((b+a)*d))', '(c*((b+a)*d))', '(c/((b+a)*d))', '(c+((b+a)*d))', '(c-((b+a)/d))', '(c*((b+a)/d))', '(c/((b+a)/d))', '(c+((b+a)/d))', '(c-((b+a)+d))', '(c*((b+a)+d))', '(c/((b+a)+d))', '(c+((b+a)+d))', '(c-(b-(a-d)))', '(c*(b-(a-d)))', '(c/(b-(a-d)))', '(c+(b-(a-d)))', '(c-(b*(a-d)))', '(c*(b*(a-d)))', '(c/(b*(a-d)))', '(c+(b*(a-d)))', '(c-(b/(a-d)))', '(c*(b/(a-d)))', '(c/(b/(a-d)))', '(c+(b/(a-d)))', '(c-(b+(a-d)))', '(c*(b+(a-d)))', '(c/(b+(a-d)))', '(c+(b+(a-d)))', '(c-(b-(a*d)))', '(c*(b-(a*d)))', '(c/(b-(a*d)))', '(c+(b-(a*d)))', '(c-(b*(a*d)))', '(c*(b*(a*d)))', '(c/(b*(a*d)))', '(c+(b*(a*d)))', '(c-(b/(a*d)))', '(c*(b/(a*d)))', '(c/(b/(a*d)))', '(c+(b/(a*d)))', '(c-(b+(a*d)))', '(c*(b+(a*d)))', '(c/(b+(a*d)))', '(c+(b+(a*d)))', '(c-(b-(a/d)))', '(c*(b-(a/d)))', '(c/(b-(a/d)))', '(c+(b-(a/d)))', '(c-(b*(a/d)))', '(c*(b*(a/d)))', '(c/(b*(a/d)))', '(c+(b*(a/d)))', '(c-(b/(a/d)))', '(c*(b/(a/d)))', '(c/(b/(a/d)))', '(c+(b/(a/d)))', '(c-(b+(a/d)))', '(c*(b+(a/d)))', '(c/(b+(a/d)))', '(c+(b+(a/d)))', '(c-(b-(a+d)))', '(c*(b-(a+d)))', '(c/(b-(a+d)))', '(c+(b-(a+d)))', '(c-(b*(a+d)))', '(c*(b*(a+d)))', '(c/(b*(a+d)))', '(c+(b*(a+d)))', '(c-(b/(a+d)))', '(c*(b/(a+d)))', '(c/(b/(a+d)))', '(c+(b/(a+d)))', '(c-(b+(a+d)))', '(c*(b+(a+d)))', '(c/(b+(a+d)))', '(c+(b+(a+d)))', '(((c-b)-d)-a)', '(((c-b)-d)*a)', '(((c-b)-d)/a)', '(((c-b)-d)+a)', '(((c-b)*d)-a)', '(((c-b)*d)*a)', '(((c-b)*d)/a)', '(((c-b)*d)+a)', '(((c-b)/d)-a)', '(((c-b)/d)*a)', '(((c-b)/d)/a)', '(((c-b)/d)+a)', '(((c-b)+d)-a)', '(((c-b)+d)*a)', '(((c-b)+d)/a)', '(((c-b)+d)+a)', '((c-b)-(d-a))', '((c-b)*(d-a))', '((c-b)/(d-a))', '((c-b)+(d-a))', '((c-b)-(d*a))', '((c-b)*(d*a))', '((c-b)/(d*a))', '((c-b)+(d*a))', '((c-b)-(d/a))', '((c-b)*(d/a))', '((c-b)/(d/a))', '((c-b)+(d/a))', '((c-b)-(d+a))', '((c-b)*(d+a))', '((c-b)/(d+a))', '((c-b)+(d+a))', '(((c*b)-d)-a)', '(((c*b)-d)*a)', '(((c*b)-d)/a)', '(((c*b)-d)+a)', '(((c*b)*d)-a)', '(((c*b)*d)*a)', '(((c*b)*d)/a)', '(((c*b)*d)+a)', '(((c*b)/d)-a)', '(((c*b)/d)*a)', '(((c*b)/d)/a)', '(((c*b)/d)+a)', '(((c*b)+d)-a)', '(((c*b)+d)*a)', '(((c*b)+d)/a)', '(((c*b)+d)+a)', '((c*b)-(d-a))', '((c*b)*(d-a))', '((c*b)/(d-a))', '((c*b)+(d-a))', '((c*b)-(d*a))', '((c*b)*(d*a))', '((c*b)/(d*a))', '((c*b)+(d*a))', '((c*b)-(d/a))', '((c*b)*(d/a))', '((c*b)/(d/a))', '((c*b)+(d/a))', '((c*b)-(d+a))', '((c*b)*(d+a))', '((c*b)/(d+a))', '((c*b)+(d+a))', '(((c/b)-d)-a)', '(((c/b)-d)*a)', '(((c/b)-d)/a)', '(((c/b)-d)+a)', '(((c/b)*d)-a)', '(((c/b)*d)*a)', '(((c/b)*d)/a)', '(((c/b)*d)+a)', '(((c/b)/d)-a)', '(((c/b)/d)*a)', '(((c/b)/d)/a)', '(((c/b)/d)+a)', '(((c/b)+d)-a)', '(((c/b)+d)*a)', '(((c/b)+d)/a)', '(((c/b)+d)+a)', '((c/b)-(d-a))', '((c/b)*(d-a))', '((c/b)/(d-a))', '((c/b)+(d-a))', '((c/b)-(d*a))', '((c/b)*(d*a))', '((c/b)/(d*a))', '((c/b)+(d*a))', '((c/b)-(d/a))', '((c/b)*(d/a))', '((c/b)/(d/a))', '((c/b)+(d/a))', '((c/b)-(d+a))', '((c/b)*(d+a))', '((c/b)/(d+a))', '((c/b)+(d+a))', '(((c+b)-d)-a)', '(((c+b)-d)*a)', '(((c+b)-d)/a)', '(((c+b)-d)+a)', '(((c+b)*d)-a)', '(((c+b)*d)*a)', '(((c+b)*d)/a)', '(((c+b)*d)+a)', '(((c+b)/d)-a)', '(((c+b)/d)*a)', '(((c+b)/d)/a)', '(((c+b)/d)+a)', '(((c+b)+d)-a)', '(((c+b)+d)*a)', '(((c+b)+d)/a)', '(((c+b)+d)+a)', '((c+b)-(d-a))', '((c+b)*(d-a))', '((c+b)/(d-a))', '((c+b)+(d-a))', '((c+b)-(d*a))', '((c+b)*(d*a))', '((c+b)/(d*a))', '((c+b)+(d*a))', '((c+b)-(d/a))', '((c+b)*(d/a))', '((c+b)/(d/a))', '((c+b)+(d/a))', '((c+b)-(d+a))', '((c+b)*(d+a))', '((c+b)/(d+a))', '((c+b)+(d+a))', '((c-(b-d))-a)', '((c-(b-d))*a)', '((c-(b-d))/a)', '((c-(b-d))+a)', '((c*(b-d))-a)', '((c*(b-d))*a)', '((c*(b-d))/a)', '((c*(b-d))+a)', '((c/(b-d))-a)', '((c/(b-d))*a)', '((c/(b-d))/a)', '((c/(b-d))+a)', '((c+(b-d))-a)', '((c+(b-d))*a)', '((c+(b-d))/a)', '((c+(b-d))+a)', '(c-((b-d)-a))', '(c*((b-d)-a))', '(c/((b-d)-a))', '(c+((b-d)-a))', '(c-((b-d)*a))', '(c*((b-d)*a))', '(c/((b-d)*a))', '(c+((b-d)*a))', '(c-((b-d)/a))', '(c*((b-d)/a))', '(c/((b-d)/a))', '(c+((b-d)/a))', '(c-((b-d)+a))', '(c*((b-d)+a))', '(c/((b-d)+a))', '(c+((b-d)+a))', '((c-(b*d))-a)', '((c-(b*d))*a)', '((c-(b*d))/a)', '((c-(b*d))+a)', '((c*(b*d))-a)', '((c*(b*d))*a)', '((c*(b*d))/a)', '((c*(b*d))+a)', '((c/(b*d))-a)', '((c/(b*d))*a)', '((c/(b*d))/a)', '((c/(b*d))+a)', '((c+(b*d))-a)', '((c+(b*d))*a)', '((c+(b*d))/a)', '((c+(b*d))+a)', '(c-((b*d)-a))', '(c*((b*d)-a))', '(c/((b*d)-a))', '(c+((b*d)-a))', '(c-((b*d)*a))', '(c*((b*d)*a))', '(c/((b*d)*a))', '(c+((b*d)*a))', '(c-((b*d)/a))', '(c*((b*d)/a))', '(c/((b*d)/a))', '(c+((b*d)/a))', '(c-((b*d)+a))', '(c*((b*d)+a))', '(c/((b*d)+a))', '(c+((b*d)+a))', '((c-(b/d))-a)', '((c-(b/d))*a)', '((c-(b/d))/a)', '((c-(b/d))+a)', '((c*(b/d))-a)', '((c*(b/d))*a)', '((c*(b/d))/a)', '((c*(b/d))+a)', '((c/(b/d))-a)', '((c/(b/d))*a)', '((c/(b/d))/a)', '((c/(b/d))+a)', '((c+(b/d))-a)', '((c+(b/d))*a)', '((c+(b/d))/a)', '((c+(b/d))+a)', '(c-((b/d)-a))', '(c*((b/d)-a))', '(c/((b/d)-a))', '(c+((b/d)-a))', '(c-((b/d)*a))', '(c*((b/d)*a))', '(c/((b/d)*a))', '(c+((b/d)*a))', '(c-((b/d)/a))', '(c*((b/d)/a))', '(c/((b/d)/a))', '(c+((b/d)/a))', '(c-((b/d)+a))', '(c*((b/d)+a))', '(c/((b/d)+a))', '(c+((b/d)+a))', '((c-(b+d))-a)', '((c-(b+d))*a)', '((c-(b+d))/a)', '((c-(b+d))+a)', '((c*(b+d))-a)', '((c*(b+d))*a)', '((c*(b+d))/a)', '((c*(b+d))+a)', '((c/(b+d))-a)', '((c/(b+d))*a)', '((c/(b+d))/a)', '((c/(b+d))+a)', '((c+(b+d))-a)', '((c+(b+d))*a)', '((c+(b+d))/a)', '((c+(b+d))+a)', '(c-((b+d)-a))', '(c*((b+d)-a))', '(c/((b+d)-a))', '(c+((b+d)-a))', '(c-((b+d)*a))', '(c*((b+d)*a))', '(c/((b+d)*a))', '(c+((b+d)*a))', '(c-((b+d)/a))', '(c*((b+d)/a))', '(c/((b+d)/a))', '(c+((b+d)/a))', '(c-((b+d)+a))', '(c*((b+d)+a))', '(c/((b+d)+a))', '(c+((b+d)+a))', '(c-(b-(d-a)))', '(c*(b-(d-a)))', '(c/(b-(d-a)))', '(c+(b-(d-a)))', '(c-(b*(d-a)))', '(c*(b*(d-a)))', '(c/(b*(d-a)))', '(c+(b*(d-a)))', '(c-(b/(d-a)))', '(c*(b/(d-a)))', '(c/(b/(d-a)))', '(c+(b/(d-a)))', '(c-(b+(d-a)))', '(c*(b+(d-a)))', '(c/(b+(d-a)))', '(c+(b+(d-a)))', '(c-(b-(d*a)))', '(c*(b-(d*a)))', '(c/(b-(d*a)))', '(c+(b-(d*a)))', '(c-(b*(d*a)))', '(c*(b*(d*a)))', '(c/(b*(d*a)))', '(c+(b*(d*a)))', '(c-(b/(d*a)))', '(c*(b/(d*a)))', '(c/(b/(d*a)))', '(c+(b/(d*a)))', '(c-(b+(d*a)))', '(c*(b+(d*a)))', '(c/(b+(d*a)))', '(c+(b+(d*a)))', '(c-(b-(d/a)))', '(c*(b-(d/a)))', '(c/(b-(d/a)))', '(c+(b-(d/a)))', '(c-(b*(d/a)))', '(c*(b*(d/a)))', '(c/(b*(d/a)))', '(c+(b*(d/a)))', '(c-(b/(d/a)))', '(c*(b/(d/a)))', '(c/(b/(d/a)))', '(c+(b/(d/a)))', '(c-(b+(d/a)))', '(c*(b+(d/a)))', '(c/(b+(d/a)))', '(c+(b+(d/a)))', '(c-(b-(d+a)))', '(c*(b-(d+a)))', '(c/(b-(d+a)))', '(c+(b-(d+a)))', '(c-(b*(d+a)))', '(c*(b*(d+a)))', '(c/(b*(d+a)))', '(c+(b*(d+a)))', '(c-(b/(d+a)))', '(c*(b/(d+a)))', '(c/(b/(d+a)))', '(c+(b/(d+a)))', '(c-(b+(d+a)))', '(c*(b+(d+a)))', '(c/(b+(d+a)))', '(c+(b+(d+a)))', '(((c-d)-a)-b)', '(((c-d)-a)*b)', '(((c-d)-a)/b)', '(((c-d)-a)+b)', '(((c-d)*a)-b)', '(((c-d)*a)*b)', '(((c-d)*a)/b)', '(((c-d)*a)+b)', '(((c-d)/a)-b)', '(((c-d)/a)*b)', '(((c-d)/a)/b)', '(((c-d)/a)+b)', '(((c-d)+a)-b)', '(((c-d)+a)*b)', '(((c-d)+a)/b)', '(((c-d)+a)+b)', '((c-d)-(a-b))', '((c-d)*(a-b))', '((c-d)/(a-b))', '((c-d)+(a-b))', '((c-d)-(a*b))', '((c-d)*(a*b))', '((c-d)/(a*b))', '((c-d)+(a*b))', '((c-d)-(a/b))', '((c-d)*(a/b))', '((c-d)/(a/b))', '((c-d)+(a/b))', '((c-d)-(a+b))', '((c-d)*(a+b))', '((c-d)/(a+b))', '((c-d)+(a+b))', '(((c*d)-a)-b)', '(((c*d)-a)*b)', '(((c*d)-a)/b)', '(((c*d)-a)+b)', '(((c*d)*a)-b)', '(((c*d)*a)*b)', '(((c*d)*a)/b)', '(((c*d)*a)+b)', '(((c*d)/a)-b)', '(((c*d)/a)*b)', '(((c*d)/a)/b)', '(((c*d)/a)+b)', '(((c*d)+a)-b)', '(((c*d)+a)*b)', '(((c*d)+a)/b)', '(((c*d)+a)+b)', '((c*d)-(a-b))', '((c*d)*(a-b))', '((c*d)/(a-b))', '((c*d)+(a-b))', '((c*d)-(a*b))', '((c*d)*(a*b))', '((c*d)/(a*b))', '((c*d)+(a*b))', '((c*d)-(a/b))', '((c*d)*(a/b))', '((c*d)/(a/b))', '((c*d)+(a/b))', '((c*d)-(a+b))', '((c*d)*(a+b))', '((c*d)/(a+b))', '((c*d)+(a+b))', '(((c/d)-a)-b)', '(((c/d)-a)*b)', '(((c/d)-a)/b)', '(((c/d)-a)+b)', '(((c/d)*a)-b)', '(((c/d)*a)*b)', '(((c/d)*a)/b)', '(((c/d)*a)+b)', '(((c/d)/a)-b)', '(((c/d)/a)*b)', '(((c/d)/a)/b)', '(((c/d)/a)+b)', '(((c/d)+a)-b)', '(((c/d)+a)*b)', '(((c/d)+a)/b)', '(((c/d)+a)+b)', '((c/d)-(a-b))', '((c/d)*(a-b))', '((c/d)/(a-b))', '((c/d)+(a-b))', '((c/d)-(a*b))', '((c/d)*(a*b))', '((c/d)/(a*b))', '((c/d)+(a*b))', '((c/d)-(a/b))', '((c/d)*(a/b))', '((c/d)/(a/b))', '((c/d)+(a/b))', '((c/d)-(a+b))', '((c/d)*(a+b))', '((c/d)/(a+b))', '((c/d)+(a+b))', '(((c+d)-a)-b)', '(((c+d)-a)*b)', '(((c+d)-a)/b)', '(((c+d)-a)+b)', '(((c+d)*a)-b)', '(((c+d)*a)*b)', '(((c+d)*a)/b)', '(((c+d)*a)+b)', '(((c+d)/a)-b)', '(((c+d)/a)*b)', '(((c+d)/a)/b)', '(((c+d)/a)+b)', '(((c+d)+a)-b)', '(((c+d)+a)*b)', '(((c+d)+a)/b)', '(((c+d)+a)+b)', '((c+d)-(a-b))', '((c+d)*(a-b))', '((c+d)/(a-b))', '((c+d)+(a-b))', '((c+d)-(a*b))', '((c+d)*(a*b))', '((c+d)/(a*b))', '((c+d)+(a*b))', '((c+d)-(a/b))', '((c+d)*(a/b))', '((c+d)/(a/b))', '((c+d)+(a/b))', '((c+d)-(a+b))', '((c+d)*(a+b))', '((c+d)/(a+b))', '((c+d)+(a+b))', '((c-(d-a))-b)', '((c-(d-a))*b)', '((c-(d-a))/b)', '((c-(d-a))+b)', '((c*(d-a))-b)', '((c*(d-a))*b)', '((c*(d-a))/b)', '((c*(d-a))+b)', '((c/(d-a))-b)', '((c/(d-a))*b)', '((c/(d-a))/b)', '((c/(d-a))+b)', '((c+(d-a))-b)', '((c+(d-a))*b)', '((c+(d-a))/b)', '((c+(d-a))+b)', '(c-((d-a)-b))', '(c*((d-a)-b))', '(c/((d-a)-b))', '(c+((d-a)-b))', '(c-((d-a)*b))', '(c*((d-a)*b))', '(c/((d-a)*b))', '(c+((d-a)*b))', '(c-((d-a)/b))', '(c*((d-a)/b))', '(c/((d-a)/b))', '(c+((d-a)/b))', '(c-((d-a)+b))', '(c*((d-a)+b))', '(c/((d-a)+b))', '(c+((d-a)+b))', '((c-(d*a))-b)', '((c-(d*a))*b)', '((c-(d*a))/b)', '((c-(d*a))+b)', '((c*(d*a))-b)', '((c*(d*a))*b)', '((c*(d*a))/b)', '((c*(d*a))+b)', '((c/(d*a))-b)', '((c/(d*a))*b)', '((c/(d*a))/b)', '((c/(d*a))+b)',\n    '((c+(d*a))-b)', '((c+(d*a))*b)', '((c+(d*a))/b)', '((c+(d*a))+b)', '(c-((d*a)-b))', '(c*((d*a)-b))', '(c/((d*a)-b))', '(c+((d*a)-b))', '(c-((d*a)*b))', '(c*((d*a)*b))', '(c/((d*a)*b))', '(c+((d*a)*b))', '(c-((d*a)/b))', '(c*((d*a)/b))', '(c/((d*a)/b))', '(c+((d*a)/b))', '(c-((d*a)+b))', '(c*((d*a)+b))', '(c/((d*a)+b))', '(c+((d*a)+b))', '((c-(d/a))-b)', '((c-(d/a))*b)', '((c-(d/a))/b)', '((c-(d/a))+b)', '((c*(d/a))-b)', '((c*(d/a))*b)', '((c*(d/a))/b)', '((c*(d/a))+b)', '((c/(d/a))-b)', '((c/(d/a))*b)', '((c/(d/a))/b)', '((c/(d/a))+b)', '((c+(d/a))-b)', '((c+(d/a))*b)', '((c+(d/a))/b)', '((c+(d/a))+b)', '(c-((d/a)-b))', '(c*((d/a)-b))', '(c/((d/a)-b))', '(c+((d/a)-b))', '(c-((d/a)*b))', '(c*((d/a)*b))', '(c/((d/a)*b))', '(c+((d/a)*b))', '(c-((d/a)/b))', '(c*((d/a)/b))', '(c/((d/a)/b))', '(c+((d/a)/b))', '(c-((d/a)+b))', '(c*((d/a)+b))', '(c/((d/a)+b))', '(c+((d/a)+b))', '((c-(d+a))-b)', '((c-(d+a))*b)', '((c-(d+a))/b)', '((c-(d+a))+b)', '((c*(d+a))-b)', '((c*(d+a))*b)', '((c*(d+a))/b)', '((c*(d+a))+b)', '((c/(d+a))-b)', '((c/(d+a))*b)', '((c/(d+a))/b)', '((c/(d+a))+b)', '((c+(d+a))-b)', '((c+(d+a))*b)', '((c+(d+a))/b)', '((c+(d+a))+b)', '(c-((d+a)-b))', '(c*((d+a)-b))', '(c/((d+a)-b))', '(c+((d+a)-b))', '(c-((d+a)*b))', '(c*((d+a)*b))', '(c/((d+a)*b))', '(c+((d+a)*b))', '(c-((d+a)/b))', '(c*((d+a)/b))', '(c/((d+a)/b))', '(c+((d+a)/b))', '(c-((d+a)+b))', '(c*((d+a)+b))', '(c/((d+a)+b))', '(c+((d+a)+b))', '(c-(d-(a-b)))', '(c*(d-(a-b)))', '(c/(d-(a-b)))', '(c+(d-(a-b)))', '(c-(d*(a-b)))', '(c*(d*(a-b)))', '(c/(d*(a-b)))', '(c+(d*(a-b)))', '(c-(d/(a-b)))', '(c*(d/(a-b)))', '(c/(d/(a-b)))', '(c+(d/(a-b)))', '(c-(d+(a-b)))', '(c*(d+(a-b)))', '(c/(d+(a-b)))', '(c+(d+(a-b)))', '(c-(d-(a*b)))', '(c*(d-(a*b)))', '(c/(d-(a*b)))', '(c+(d-(a*b)))', '(c-(d*(a*b)))', '(c*(d*(a*b)))', '(c/(d*(a*b)))', '(c+(d*(a*b)))', '(c-(d/(a*b)))', '(c*(d/(a*b)))', '(c/(d/(a*b)))', '(c+(d/(a*b)))', '(c-(d+(a*b)))', '(c*(d+(a*b)))', '(c/(d+(a*b)))', '(c+(d+(a*b)))', '(c-(d-(a/b)))', '(c*(d-(a/b)))', '(c/(d-(a/b)))', '(c+(d-(a/b)))', '(c-(d*(a/b)))', '(c*(d*(a/b)))', '(c/(d*(a/b)))', '(c+(d*(a/b)))', '(c-(d/(a/b)))', '(c*(d/(a/b)))', '(c/(d/(a/b)))', '(c+(d/(a/b)))', '(c-(d+(a/b)))', '(c*(d+(a/b)))', '(c/(d+(a/b)))', '(c+(d+(a/b)))', '(c-(d-(a+b)))', '(c*(d-(a+b)))', '(c/(d-(a+b)))', '(c+(d-(a+b)))', '(c-(d*(a+b)))', '(c*(d*(a+b)))', '(c/(d*(a+b)))', '(c+(d*(a+b)))', '(c-(d/(a+b)))', '(c*(d/(a+b)))', '(c/(d/(a+b)))', '(c+(d/(a+b)))', '(c-(d+(a+b)))', '(c*(d+(a+b)))', '(c/(d+(a+b)))', '(c+(d+(a+b)))', '(((c-d)-b)-a)', '(((c-d)-b)*a)', '(((c-d)-b)/a)', '(((c-d)-b)+a)', '(((c-d)*b)-a)', '(((c-d)*b)*a)', '(((c-d)*b)/a)', '(((c-d)*b)+a)', '(((c-d)/b)-a)', '(((c-d)/b)*a)', '(((c-d)/b)/a)', '(((c-d)/b)+a)', '(((c-d)+b)-a)', '(((c-d)+b)*a)', '(((c-d)+b)/a)', '(((c-d)+b)+a)', '((c-d)-(b-a))', '((c-d)*(b-a))', '((c-d)/(b-a))', '((c-d)+(b-a))', '((c-d)-(b*a))', '((c-d)*(b*a))', '((c-d)/(b*a))', '((c-d)+(b*a))', '((c-d)-(b/a))', '((c-d)*(b/a))', '((c-d)/(b/a))', '((c-d)+(b/a))', '((c-d)-(b+a))', '((c-d)*(b+a))', '((c-d)/(b+a))', '((c-d)+(b+a))', '(((c*d)-b)-a)', '(((c*d)-b)*a)', '(((c*d)-b)/a)', '(((c*d)-b)+a)', '(((c*d)*b)-a)', '(((c*d)*b)*a)', '(((c*d)*b)/a)', '(((c*d)*b)+a)', '(((c*d)/b)-a)', '(((c*d)/b)*a)', '(((c*d)/b)/a)', '(((c*d)/b)+a)', '(((c*d)+b)-a)', '(((c*d)+b)*a)', '(((c*d)+b)/a)', '(((c*d)+b)+a)', '((c*d)-(b-a))', '((c*d)*(b-a))', '((c*d)/(b-a))', '((c*d)+(b-a))', '((c*d)-(b*a))', '((c*d)*(b*a))', '((c*d)/(b*a))', '((c*d)+(b*a))', '((c*d)-(b/a))', '((c*d)*(b/a))', '((c*d)/(b/a))', '((c*d)+(b/a))', '((c*d)-(b+a))', '((c*d)*(b+a))', '((c*d)/(b+a))', '((c*d)+(b+a))', '(((c/d)-b)-a)', '(((c/d)-b)*a)', '(((c/d)-b)/a)', '(((c/d)-b)+a)', '(((c/d)*b)-a)', '(((c/d)*b)*a)', '(((c/d)*b)/a)', '(((c/d)*b)+a)', '(((c/d)/b)-a)', '(((c/d)/b)*a)', '(((c/d)/b)/a)', '(((c/d)/b)+a)', '(((c/d)+b)-a)', '(((c/d)+b)*a)', '(((c/d)+b)/a)', '(((c/d)+b)+a)', '((c/d)-(b-a))', '((c/d)*(b-a))', '((c/d)/(b-a))', '((c/d)+(b-a))', '((c/d)-(b*a))', '((c/d)*(b*a))', '((c/d)/(b*a))', '((c/d)+(b*a))', '((c/d)-(b/a))', '((c/d)*(b/a))', '((c/d)/(b/a))', '((c/d)+(b/a))', '((c/d)-(b+a))', '((c/d)*(b+a))', '((c/d)/(b+a))', '((c/d)+(b+a))', '(((c+d)-b)-a)', '(((c+d)-b)*a)', '(((c+d)-b)/a)', '(((c+d)-b)+a)', '(((c+d)*b)-a)', '(((c+d)*b)*a)', '(((c+d)*b)/a)', '(((c+d)*b)+a)', '(((c+d)/b)-a)', '(((c+d)/b)*a)', '(((c+d)/b)/a)', '(((c+d)/b)+a)', '(((c+d)+b)-a)', '(((c+d)+b)*a)', '(((c+d)+b)/a)', '(((c+d)+b)+a)', '((c+d)-(b-a))', '((c+d)*(b-a))', '((c+d)/(b-a))', '((c+d)+(b-a))', '((c+d)-(b*a))', '((c+d)*(b*a))', '((c+d)/(b*a))', '((c+d)+(b*a))', '((c+d)-(b/a))', '((c+d)*(b/a))', '((c+d)/(b/a))', '((c+d)+(b/a))', '((c+d)-(b+a))', '((c+d)*(b+a))', '((c+d)/(b+a))', '((c+d)+(b+a))', '((c-(d-b))-a)', '((c-(d-b))*a)', '((c-(d-b))/a)', '((c-(d-b))+a)', '((c*(d-b))-a)', '((c*(d-b))*a)', '((c*(d-b))/a)', '((c*(d-b))+a)', '((c/(d-b))-a)', '((c/(d-b))*a)', '((c/(d-b))/a)', '((c/(d-b))+a)', '((c+(d-b))-a)', '((c+(d-b))*a)', '((c+(d-b))/a)', '((c+(d-b))+a)', '(c-((d-b)-a))', '(c*((d-b)-a))', '(c/((d-b)-a))', '(c+((d-b)-a))', '(c-((d-b)*a))', '(c*((d-b)*a))', '(c/((d-b)*a))', '(c+((d-b)*a))', '(c-((d-b)/a))', '(c*((d-b)/a))', '(c/((d-b)/a))', '(c+((d-b)/a))', '(c-((d-b)+a))', '(c*((d-b)+a))', '(c/((d-b)+a))', '(c+((d-b)+a))', '((c-(d*b))-a)', '((c-(d*b))*a)', '((c-(d*b))/a)', '((c-(d*b))+a)', '((c*(d*b))-a)', '((c*(d*b))*a)', '((c*(d*b))/a)', '((c*(d*b))+a)', '((c/(d*b))-a)', '((c/(d*b))*a)', '((c/(d*b))/a)', '((c/(d*b))+a)', '((c+(d*b))-a)', '((c+(d*b))*a)', '((c+(d*b))/a)', '((c+(d*b))+a)', '(c-((d*b)-a))', '(c*((d*b)-a))', '(c/((d*b)-a))', '(c+((d*b)-a))', '(c-((d*b)*a))', '(c*((d*b)*a))', '(c/((d*b)*a))', '(c+((d*b)*a))', '(c-((d*b)/a))', '(c*((d*b)/a))', '(c/((d*b)/a))', '(c+((d*b)/a))', '(c-((d*b)+a))', '(c*((d*b)+a))', '(c/((d*b)+a))', '(c+((d*b)+a))', '((c-(d/b))-a)', '((c-(d/b))*a)', '((c-(d/b))/a)', '((c-(d/b))+a)', '((c*(d/b))-a)', '((c*(d/b))*a)', '((c*(d/b))/a)', '((c*(d/b))+a)', '((c/(d/b))-a)', '((c/(d/b))*a)', '((c/(d/b))/a)', '((c/(d/b))+a)', '((c+(d/b))-a)', '((c+(d/b))*a)', '((c+(d/b))/a)', '((c+(d/b))+a)', '(c-((d/b)-a))', '(c*((d/b)-a))', '(c/((d/b)-a))', '(c+((d/b)-a))', '(c-((d/b)*a))', '(c*((d/b)*a))', '(c/((d/b)*a))', '(c+((d/b)*a))', '(c-((d/b)/a))', '(c*((d/b)/a))', '(c/((d/b)/a))', '(c+((d/b)/a))', '(c-((d/b)+a))', '(c*((d/b)+a))', '(c/((d/b)+a))', '(c+((d/b)+a))', '((c-(d+b))-a)', '((c-(d+b))*a)', '((c-(d+b))/a)', '((c-(d+b))+a)', '((c*(d+b))-a)', '((c*(d+b))*a)', '((c*(d+b))/a)', '((c*(d+b))+a)', '((c/(d+b))-a)', '((c/(d+b))*a)', '((c/(d+b))/a)', '((c/(d+b))+a)', '((c+(d+b))-a)', '((c+(d+b))*a)', '((c+(d+b))/a)', '((c+(d+b))+a)', '(c-((d+b)-a))', '(c*((d+b)-a))', '(c/((d+b)-a))', '(c+((d+b)-a))', '(c-((d+b)*a))', '(c*((d+b)*a))', '(c/((d+b)*a))', '(c+((d+b)*a))', '(c-((d+b)/a))', '(c*((d+b)/a))', '(c/((d+b)/a))', '(c+((d+b)/a))', '(c-((d+b)+a))', '(c*((d+b)+a))', '(c/((d+b)+a))', '(c+((d+b)+a))', '(c-(d-(b-a)))', '(c*(d-(b-a)))', '(c/(d-(b-a)))', '(c+(d-(b-a)))', '(c-(d*(b-a)))', '(c*(d*(b-a)))', '(c/(d*(b-a)))', '(c+(d*(b-a)))', '(c-(d/(b-a)))', '(c*(d/(b-a)))', '(c/(d/(b-a)))', '(c+(d/(b-a)))', '(c-(d+(b-a)))', '(c*(d+(b-a)))', '(c/(d+(b-a)))', '(c+(d+(b-a)))', '(c-(d-(b*a)))', '(c*(d-(b*a)))', '(c/(d-(b*a)))', '(c+(d-(b*a)))', '(c-(d*(b*a)))', '(c*(d*(b*a)))', '(c/(d*(b*a)))', '(c+(d*(b*a)))', '(c-(d/(b*a)))', '(c*(d/(b*a)))', '(c/(d/(b*a)))', '(c+(d/(b*a)))', '(c-(d+(b*a)))', '(c*(d+(b*a)))', '(c/(d+(b*a)))', '(c+(d+(b*a)))', '(c-(d-(b/a)))', '(c*(d-(b/a)))', '(c/(d-(b/a)))', '(c+(d-(b/a)))', '(c-(d*(b/a)))', '(c*(d*(b/a)))', '(c/(d*(b/a)))', '(c+(d*(b/a)))', '(c-(d/(b/a)))', '(c*(d/(b/a)))', '(c/(d/(b/a)))', '(c+(d/(b/a)))', '(c-(d+(b/a)))', '(c*(d+(b/a)))', '(c/(d+(b/a)))', '(c+(d+(b/a)))', '(c-(d-(b+a)))', '(c*(d-(b+a)))', '(c/(d-(b+a)))', '(c+(d-(b+a)))', '(c-(d*(b+a)))', '(c*(d*(b+a)))', '(c/(d*(b+a)))', '(c+(d*(b+a)))', '(c-(d/(b+a)))', '(c*(d/(b+a)))', '(c/(d/(b+a)))', '(c+(d/(b+a)))', '(c-(d+(b+a)))', '(c*(d+(b+a)))', '(c/(d+(b+a)))', '(c+(d+(b+a)))', '(((d-a)-b)-c)', '(((d-a)-b)*c)', '(((d-a)-b)/c)', '(((d-a)-b)+c)', '(((d-a)*b)-c)', '(((d-a)*b)*c)', '(((d-a)*b)/c)', '(((d-a)*b)+c)', '(((d-a)/b)-c)', '(((d-a)/b)*c)', '(((d-a)/b)/c)', '(((d-a)/b)+c)', '(((d-a)+b)-c)', '(((d-a)+b)*c)', '(((d-a)+b)/c)', '(((d-a)+b)+c)', '((d-a)-(b-c))', '((d-a)*(b-c))', '((d-a)/(b-c))', '((d-a)+(b-c))', '((d-a)-(b*c))', '((d-a)*(b*c))', '((d-a)/(b*c))', '((d-a)+(b*c))', '((d-a)-(b/c))', '((d-a)*(b/c))', '((d-a)/(b/c))', '((d-a)+(b/c))', '((d-a)-(b+c))', '((d-a)*(b+c))', '((d-a)/(b+c))', '((d-a)+(b+c))', '(((d*a)-b)-c)', '(((d*a)-b)*c)', '(((d*a)-b)/c)', '(((d*a)-b)+c)', '(((d*a)*b)-c)', '(((d*a)*b)*c)', '(((d*a)*b)/c)', '(((d*a)*b)+c)', '(((d*a)/b)-c)', '(((d*a)/b)*c)', '(((d*a)/b)/c)', '(((d*a)/b)+c)', '(((d*a)+b)-c)', '(((d*a)+b)*c)', '(((d*a)+b)/c)', '(((d*a)+b)+c)', '((d*a)-(b-c))', '((d*a)*(b-c))', '((d*a)/(b-c))', '((d*a)+(b-c))', '((d*a)-(b*c))', '((d*a)*(b*c))', '((d*a)/(b*c))', '((d*a)+(b*c))', '((d*a)-(b/c))', '((d*a)*(b/c))', '((d*a)/(b/c))', '((d*a)+(b/c))', '((d*a)-(b+c))', '((d*a)*(b+c))', '((d*a)/(b+c))', '((d*a)+(b+c))', '(((d/a)-b)-c)', '(((d/a)-b)*c)', '(((d/a)-b)/c)', '(((d/a)-b)+c)', '(((d/a)*b)-c)', '(((d/a)*b)*c)', '(((d/a)*b)/c)', '(((d/a)*b)+c)', '(((d/a)/b)-c)', '(((d/a)/b)*c)', '(((d/a)/b)/c)', '(((d/a)/b)+c)', '(((d/a)+b)-c)', '(((d/a)+b)*c)', '(((d/a)+b)/c)', '(((d/a)+b)+c)', '((d/a)-(b-c))', '((d/a)*(b-c))', '((d/a)/(b-c))', '((d/a)+(b-c))', '((d/a)-(b*c))', '((d/a)*(b*c))', '((d/a)/(b*c))', '((d/a)+(b*c))', '((d/a)-(b/c))', '((d/a)*(b/c))', '((d/a)/(b/c))', '((d/a)+(b/c))', '((d/a)-(b+c))', '((d/a)*(b+c))', '((d/a)/(b+c))', '((d/a)+(b+c))', '(((d+a)-b)-c)', '(((d+a)-b)*c)', '(((d+a)-b)/c)', '(((d+a)-b)+c)', '(((d+a)*b)-c)', '(((d+a)*b)*c)', '(((d+a)*b)/c)', '(((d+a)*b)+c)', '(((d+a)/b)-c)', '(((d+a)/b)*c)', '(((d+a)/b)/c)', '(((d+a)/b)+c)', '(((d+a)+b)-c)', '(((d+a)+b)*c)', '(((d+a)+b)/c)', '(((d+a)+b)+c)', '((d+a)-(b-c))', '((d+a)*(b-c))', '((d+a)/(b-c))', '((d+a)+(b-c))', '((d+a)-(b*c))', '((d+a)*(b*c))', '((d+a)/(b*c))', '((d+a)+(b*c))',\n    '((d+a)-(b/c))', '((d+a)*(b/c))', '((d+a)/(b/c))', '((d+a)+(b/c))', '((d+a)-(b+c))', '((d+a)*(b+c))', '((d+a)/(b+c))', '((d+a)+(b+c))', '((d-(a-b))-c)', '((d-(a-b))*c)', '((d-(a-b))/c)', '((d-(a-b))+c)', '((d*(a-b))-c)', '((d*(a-b))*c)', '((d*(a-b))/c)', '((d*(a-b))+c)', '((d/(a-b))-c)', '((d/(a-b))*c)', '((d/(a-b))/c)', '((d/(a-b))+c)', '((d+(a-b))-c)', '((d+(a-b))*c)', '((d+(a-b))/c)', '((d+(a-b))+c)', '(d-((a-b)-c))', '(d*((a-b)-c))', '(d/((a-b)-c))', '(d+((a-b)-c))', '(d-((a-b)*c))', '(d*((a-b)*c))', '(d/((a-b)*c))', '(d+((a-b)*c))', '(d-((a-b)/c))', '(d*((a-b)/c))', '(d/((a-b)/c))', '(d+((a-b)/c))', '(d-((a-b)+c))', '(d*((a-b)+c))', '(d/((a-b)+c))', '(d+((a-b)+c))', '((d-(a*b))-c)', '((d-(a*b))*c)', '((d-(a*b))/c)', '((d-(a*b))+c)', '((d*(a*b))-c)', '((d*(a*b))*c)', '((d*(a*b))/c)', '((d*(a*b))+c)', '((d/(a*b))-c)', '((d/(a*b))*c)', '((d/(a*b))/c)', '((d/(a*b))+c)', '((d+(a*b))-c)', '((d+(a*b))*c)', '((d+(a*b))/c)', '((d+(a*b))+c)', '(d-((a*b)-c))', '(d*((a*b)-c))', '(d/((a*b)-c))', '(d+((a*b)-c))', '(d-((a*b)*c))', '(d*((a*b)*c))', '(d/((a*b)*c))', '(d+((a*b)*c))', '(d-((a*b)/c))', '(d*((a*b)/c))', '(d/((a*b)/c))', '(d+((a*b)/c))', '(d-((a*b)+c))', '(d*((a*b)+c))', '(d/((a*b)+c))', '(d+((a*b)+c))', '((d-(a/b))-c)', '((d-(a/b))*c)', '((d-(a/b))/c)', '((d-(a/b))+c)', '((d*(a/b))-c)', '((d*(a/b))*c)', '((d*(a/b))/c)', '((d*(a/b))+c)', '((d/(a/b))-c)', '((d/(a/b))*c)', '((d/(a/b))/c)', '((d/(a/b))+c)', '((d+(a/b))-c)', '((d+(a/b))*c)', '((d+(a/b))/c)', '((d+(a/b))+c)', '(d-((a/b)-c))', '(d*((a/b)-c))', '(d/((a/b)-c))', '(d+((a/b)-c))', '(d-((a/b)*c))', '(d*((a/b)*c))', '(d/((a/b)*c))', '(d+((a/b)*c))', '(d-((a/b)/c))', '(d*((a/b)/c))', '(d/((a/b)/c))', '(d+((a/b)/c))', '(d-((a/b)+c))', '(d*((a/b)+c))', '(d/((a/b)+c))', '(d+((a/b)+c))', '((d-(a+b))-c)', '((d-(a+b))*c)', '((d-(a+b))/c)', '((d-(a+b))+c)', '((d*(a+b))-c)', '((d*(a+b))*c)', '((d*(a+b))/c)', '((d*(a+b))+c)', '((d/(a+b))-c)', '((d/(a+b))*c)', '((d/(a+b))/c)', '((d/(a+b))+c)', '((d+(a+b))-c)', '((d+(a+b))*c)', '((d+(a+b))/c)', '((d+(a+b))+c)', '(d-((a+b)-c))', '(d*((a+b)-c))', '(d/((a+b)-c))', '(d+((a+b)-c))', '(d-((a+b)*c))', '(d*((a+b)*c))', '(d/((a+b)*c))', '(d+((a+b)*c))', '(d-((a+b)/c))', '(d*((a+b)/c))', '(d/((a+b)/c))', '(d+((a+b)/c))', '(d-((a+b)+c))', '(d*((a+b)+c))', '(d/((a+b)+c))', '(d+((a+b)+c))', '(d-(a-(b-c)))', '(d*(a-(b-c)))', '(d/(a-(b-c)))', '(d+(a-(b-c)))', '(d-(a*(b-c)))', '(d*(a*(b-c)))', '(d/(a*(b-c)))', '(d+(a*(b-c)))', '(d-(a/(b-c)))', '(d*(a/(b-c)))', '(d/(a/(b-c)))', '(d+(a/(b-c)))', '(d-(a+(b-c)))', '(d*(a+(b-c)))', '(d/(a+(b-c)))', '(d+(a+(b-c)))', '(d-(a-(b*c)))', '(d*(a-(b*c)))', '(d/(a-(b*c)))', '(d+(a-(b*c)))', '(d-(a*(b*c)))', '(d*(a*(b*c)))', '(d/(a*(b*c)))', '(d+(a*(b*c)))', '(d-(a/(b*c)))', '(d*(a/(b*c)))', '(d/(a/(b*c)))', '(d+(a/(b*c)))', '(d-(a+(b*c)))', '(d*(a+(b*c)))', '(d/(a+(b*c)))', '(d+(a+(b*c)))', '(d-(a-(b/c)))', '(d*(a-(b/c)))', '(d/(a-(b/c)))', '(d+(a-(b/c)))', '(d-(a*(b/c)))', '(d*(a*(b/c)))', '(d/(a*(b/c)))', '(d+(a*(b/c)))', '(d-(a/(b/c)))', '(d*(a/(b/c)))', '(d/(a/(b/c)))', '(d+(a/(b/c)))', '(d-(a+(b/c)))', '(d*(a+(b/c)))', '(d/(a+(b/c)))', '(d+(a+(b/c)))', '(d-(a-(b+c)))', '(d*(a-(b+c)))', '(d/(a-(b+c)))', '(d+(a-(b+c)))', '(d-(a*(b+c)))', '(d*(a*(b+c)))', '(d/(a*(b+c)))', '(d+(a*(b+c)))', '(d-(a/(b+c)))', '(d*(a/(b+c)))', '(d/(a/(b+c)))', '(d+(a/(b+c)))', '(d-(a+(b+c)))', '(d*(a+(b+c)))', '(d/(a+(b+c)))', '(d+(a+(b+c)))', '(((d-a)-c)-b)', '(((d-a)-c)*b)', '(((d-a)-c)/b)', '(((d-a)-c)+b)', '(((d-a)*c)-b)', '(((d-a)*c)*b)', '(((d-a)*c)/b)', '(((d-a)*c)+b)', '(((d-a)/c)-b)', '(((d-a)/c)*b)', '(((d-a)/c)/b)', '(((d-a)/c)+b)', '(((d-a)+c)-b)', '(((d-a)+c)*b)', '(((d-a)+c)/b)', '(((d-a)+c)+b)', '((d-a)-(c-b))', '((d-a)*(c-b))', '((d-a)/(c-b))', '((d-a)+(c-b))', '((d-a)-(c*b))', '((d-a)*(c*b))', '((d-a)/(c*b))', '((d-a)+(c*b))', '((d-a)-(c/b))', '((d-a)*(c/b))', '((d-a)/(c/b))', '((d-a)+(c/b))', '((d-a)-(c+b))', '((d-a)*(c+b))', '((d-a)/(c+b))', '((d-a)+(c+b))', '(((d*a)-c)-b)', '(((d*a)-c)*b)', '(((d*a)-c)/b)', '(((d*a)-c)+b)', '(((d*a)*c)-b)', '(((d*a)*c)*b)', '(((d*a)*c)/b)', '(((d*a)*c)+b)', '(((d*a)/c)-b)', '(((d*a)/c)*b)', '(((d*a)/c)/b)', '(((d*a)/c)+b)', '(((d*a)+c)-b)', '(((d*a)+c)*b)', '(((d*a)+c)/b)', '(((d*a)+c)+b)', '((d*a)-(c-b))', '((d*a)*(c-b))', '((d*a)/(c-b))', '((d*a)+(c-b))', '((d*a)-(c*b))', '((d*a)*(c*b))', '((d*a)/(c*b))', '((d*a)+(c*b))', '((d*a)-(c/b))', '((d*a)*(c/b))', '((d*a)/(c/b))', '((d*a)+(c/b))', '((d*a)-(c+b))', '((d*a)*(c+b))', '((d*a)/(c+b))', '((d*a)+(c+b))', '(((d/a)-c)-b)', '(((d/a)-c)*b)', '(((d/a)-c)/b)', '(((d/a)-c)+b)', '(((d/a)*c)-b)', '(((d/a)*c)*b)', '(((d/a)*c)/b)', '(((d/a)*c)+b)', '(((d/a)/c)-b)', '(((d/a)/c)*b)', '(((d/a)/c)/b)', '(((d/a)/c)+b)', '(((d/a)+c)-b)', '(((d/a)+c)*b)', '(((d/a)+c)/b)', '(((d/a)+c)+b)', '((d/a)-(c-b))', '((d/a)*(c-b))', '((d/a)/(c-b))', '((d/a)+(c-b))', '((d/a)-(c*b))', '((d/a)*(c*b))', '((d/a)/(c*b))', '((d/a)+(c*b))', '((d/a)-(c/b))', '((d/a)*(c/b))', '((d/a)/(c/b))', '((d/a)+(c/b))', '((d/a)-(c+b))', '((d/a)*(c+b))', '((d/a)/(c+b))', '((d/a)+(c+b))', '(((d+a)-c)-b)', '(((d+a)-c)*b)', '(((d+a)-c)/b)', '(((d+a)-c)+b)', '(((d+a)*c)-b)', '(((d+a)*c)*b)', '(((d+a)*c)/b)', '(((d+a)*c)+b)', '(((d+a)/c)-b)', '(((d+a)/c)*b)', '(((d+a)/c)/b)', '(((d+a)/c)+b)', '(((d+a)+c)-b)', '(((d+a)+c)*b)', '(((d+a)+c)/b)', '(((d+a)+c)+b)', '((d+a)-(c-b))', '((d+a)*(c-b))', '((d+a)/(c-b))', '((d+a)+(c-b))', '((d+a)-(c*b))', '((d+a)*(c*b))', '((d+a)/(c*b))', '((d+a)+(c*b))', '((d+a)-(c/b))', '((d+a)*(c/b))', '((d+a)/(c/b))', '((d+a)+(c/b))', '((d+a)-(c+b))', '((d+a)*(c+b))', '((d+a)/(c+b))', '((d+a)+(c+b))', '((d-(a-c))-b)', '((d-(a-c))*b)', '((d-(a-c))/b)', '((d-(a-c))+b)', '((d*(a-c))-b)', '((d*(a-c))*b)', '((d*(a-c))/b)', '((d*(a-c))+b)', '((d/(a-c))-b)', '((d/(a-c))*b)', '((d/(a-c))/b)', '((d/(a-c))+b)', '((d+(a-c))-b)', '((d+(a-c))*b)', '((d+(a-c))/b)', '((d+(a-c))+b)', '(d-((a-c)-b))', '(d*((a-c)-b))', '(d/((a-c)-b))', '(d+((a-c)-b))', '(d-((a-c)*b))', '(d*((a-c)*b))', '(d/((a-c)*b))', '(d+((a-c)*b))', '(d-((a-c)/b))', '(d*((a-c)/b))', '(d/((a-c)/b))', '(d+((a-c)/b))', '(d-((a-c)+b))', '(d*((a-c)+b))', '(d/((a-c)+b))', '(d+((a-c)+b))', '((d-(a*c))-b)', '((d-(a*c))*b)', '((d-(a*c))/b)', '((d-(a*c))+b)', '((d*(a*c))-b)', '((d*(a*c))*b)', '((d*(a*c))/b)', '((d*(a*c))+b)', '((d/(a*c))-b)', '((d/(a*c))*b)', '((d/(a*c))/b)', '((d/(a*c))+b)', '((d+(a*c))-b)', '((d+(a*c))*b)', '((d+(a*c))/b)', '((d+(a*c))+b)', '(d-((a*c)-b))', '(d*((a*c)-b))', '(d/((a*c)-b))', '(d+((a*c)-b))', '(d-((a*c)*b))', '(d*((a*c)*b))', '(d/((a*c)*b))', '(d+((a*c)*b))', '(d-((a*c)/b))', '(d*((a*c)/b))', '(d/((a*c)/b))', '(d+((a*c)/b))', '(d-((a*c)+b))', '(d*((a*c)+b))', '(d/((a*c)+b))', '(d+((a*c)+b))', '((d-(a/c))-b)', '((d-(a/c))*b)', '((d-(a/c))/b)', '((d-(a/c))+b)', '((d*(a/c))-b)', '((d*(a/c))*b)', '((d*(a/c))/b)', '((d*(a/c))+b)', '((d/(a/c))-b)', '((d/(a/c))*b)', '((d/(a/c))/b)', '((d/(a/c))+b)', '((d+(a/c))-b)', '((d+(a/c))*b)', '((d+(a/c))/b)', '((d+(a/c))+b)', '(d-((a/c)-b))', '(d*((a/c)-b))', '(d/((a/c)-b))', '(d+((a/c)-b))', '(d-((a/c)*b))', '(d*((a/c)*b))', '(d/((a/c)*b))', '(d+((a/c)*b))', '(d-((a/c)/b))', '(d*((a/c)/b))', '(d/((a/c)/b))', '(d+((a/c)/b))', '(d-((a/c)+b))', '(d*((a/c)+b))', '(d/((a/c)+b))', '(d+((a/c)+b))', '((d-(a+c))-b)', '((d-(a+c))*b)', '((d-(a+c))/b)', '((d-(a+c))+b)', '((d*(a+c))-b)', '((d*(a+c))*b)', '((d*(a+c))/b)', '((d*(a+c))+b)', '((d/(a+c))-b)', '((d/(a+c))*b)', '((d/(a+c))/b)', '((d/(a+c))+b)', '((d+(a+c))-b)', '((d+(a+c))*b)', '((d+(a+c))/b)', '((d+(a+c))+b)', '(d-((a+c)-b))', '(d*((a+c)-b))', '(d/((a+c)-b))', '(d+((a+c)-b))', '(d-((a+c)*b))', '(d*((a+c)*b))', '(d/((a+c)*b))', '(d+((a+c)*b))', '(d-((a+c)/b))', '(d*((a+c)/b))', '(d/((a+c)/b))', '(d+((a+c)/b))', '(d-((a+c)+b))', '(d*((a+c)+b))', '(d/((a+c)+b))', '(d+((a+c)+b))', '(d-(a-(c-b)))', '(d*(a-(c-b)))', '(d/(a-(c-b)))', '(d+(a-(c-b)))', '(d-(a*(c-b)))', '(d*(a*(c-b)))', '(d/(a*(c-b)))', '(d+(a*(c-b)))', '(d-(a/(c-b)))', '(d*(a/(c-b)))', '(d/(a/(c-b)))', '(d+(a/(c-b)))', '(d-(a+(c-b)))', '(d*(a+(c-b)))', '(d/(a+(c-b)))', '(d+(a+(c-b)))', '(d-(a-(c*b)))', '(d*(a-(c*b)))', '(d/(a-(c*b)))', '(d+(a-(c*b)))', '(d-(a*(c*b)))', '(d*(a*(c*b)))', '(d/(a*(c*b)))', '(d+(a*(c*b)))', '(d-(a/(c*b)))', '(d*(a/(c*b)))', '(d/(a/(c*b)))', '(d+(a/(c*b)))', '(d-(a+(c*b)))', '(d*(a+(c*b)))', '(d/(a+(c*b)))', '(d+(a+(c*b)))', '(d-(a-(c/b)))', '(d*(a-(c/b)))', '(d/(a-(c/b)))', '(d+(a-(c/b)))', '(d-(a*(c/b)))', '(d*(a*(c/b)))', '(d/(a*(c/b)))', '(d+(a*(c/b)))', '(d-(a/(c/b)))', '(d*(a/(c/b)))', '(d/(a/(c/b)))', '(d+(a/(c/b)))', '(d-(a+(c/b)))', '(d*(a+(c/b)))', '(d/(a+(c/b)))', '(d+(a+(c/b)))', '(d-(a-(c+b)))', '(d*(a-(c+b)))', '(d/(a-(c+b)))', '(d+(a-(c+b)))', '(d-(a*(c+b)))', '(d*(a*(c+b)))', '(d/(a*(c+b)))', '(d+(a*(c+b)))', '(d-(a/(c+b)))', '(d*(a/(c+b)))', '(d/(a/(c+b)))', '(d+(a/(c+b)))', '(d-(a+(c+b)))', '(d*(a+(c+b)))', '(d/(a+(c+b)))', '(d+(a+(c+b)))', '(((d-b)-a)-c)', '(((d-b)-a)*c)', '(((d-b)-a)/c)', '(((d-b)-a)+c)', '(((d-b)*a)-c)', '(((d-b)*a)*c)', '(((d-b)*a)/c)', '(((d-b)*a)+c)', '(((d-b)/a)-c)', '(((d-b)/a)*c)', '(((d-b)/a)/c)', '(((d-b)/a)+c)', '(((d-b)+a)-c)', '(((d-b)+a)*c)', '(((d-b)+a)/c)', '(((d-b)+a)+c)', '((d-b)-(a-c))', '((d-b)*(a-c))', '((d-b)/(a-c))', '((d-b)+(a-c))', '((d-b)-(a*c))', '((d-b)*(a*c))', '((d-b)/(a*c))', '((d-b)+(a*c))', '((d-b)-(a/c))', '((d-b)*(a/c))', '((d-b)/(a/c))', '((d-b)+(a/c))', '((d-b)-(a+c))', '((d-b)*(a+c))', '((d-b)/(a+c))', '((d-b)+(a+c))', '(((d*b)-a)-c)', '(((d*b)-a)*c)', '(((d*b)-a)/c)', '(((d*b)-a)+c)', '(((d*b)*a)-c)', '(((d*b)*a)*c)', '(((d*b)*a)/c)', '(((d*b)*a)+c)', '(((d*b)/a)-c)', '(((d*b)/a)*c)', '(((d*b)/a)/c)', '(((d*b)/a)+c)', '(((d*b)+a)-c)', '(((d*b)+a)*c)', '(((d*b)+a)/c)', '(((d*b)+a)+c)', '((d*b)-(a-c))', '((d*b)*(a-c))', '((d*b)/(a-c))', '((d*b)+(a-c))', '((d*b)-(a*c))', '((d*b)*(a*c))', '((d*b)/(a*c))', '((d*b)+(a*c))', '((d*b)-(a/c))', '((d*b)*(a/c))', '((d*b)/(a/c))', '((d*b)+(a/c))', '((d*b)-(a+c))', '((d*b)*(a+c))', '((d*b)/(a+c))', '((d*b)+(a+c))', '(((d/b)-a)-c)', '(((d/b)-a)*c)', '(((d/b)-a)/c)', '(((d/b)-a)+c)',\n    '(((d/b)*a)-c)', '(((d/b)*a)*c)', '(((d/b)*a)/c)', '(((d/b)*a)+c)', '(((d/b)/a)-c)', '(((d/b)/a)*c)', '(((d/b)/a)/c)', '(((d/b)/a)+c)', '(((d/b)+a)-c)', '(((d/b)+a)*c)', '(((d/b)+a)/c)', '(((d/b)+a)+c)', '((d/b)-(a-c))', '((d/b)*(a-c))', '((d/b)/(a-c))', '((d/b)+(a-c))', '((d/b)-(a*c))', '((d/b)*(a*c))', '((d/b)/(a*c))', '((d/b)+(a*c))', '((d/b)-(a/c))', '((d/b)*(a/c))', '((d/b)/(a/c))', '((d/b)+(a/c))', '((d/b)-(a+c))', '((d/b)*(a+c))', '((d/b)/(a+c))', '((d/b)+(a+c))', '(((d+b)-a)-c)', '(((d+b)-a)*c)', '(((d+b)-a)/c)', '(((d+b)-a)+c)', '(((d+b)*a)-c)', '(((d+b)*a)*c)', '(((d+b)*a)/c)', '(((d+b)*a)+c)', '(((d+b)/a)-c)', '(((d+b)/a)*c)', '(((d+b)/a)/c)', '(((d+b)/a)+c)', '(((d+b)+a)-c)', '(((d+b)+a)*c)', '(((d+b)+a)/c)', '(((d+b)+a)+c)', '((d+b)-(a-c))', '((d+b)*(a-c))', '((d+b)/(a-c))', '((d+b)+(a-c))', '((d+b)-(a*c))', '((d+b)*(a*c))', '((d+b)/(a*c))', '((d+b)+(a*c))', '((d+b)-(a/c))', '((d+b)*(a/c))', '((d+b)/(a/c))', '((d+b)+(a/c))', '((d+b)-(a+c))', '((d+b)*(a+c))', '((d+b)/(a+c))', '((d+b)+(a+c))', '((d-(b-a))-c)', '((d-(b-a))*c)', '((d-(b-a))/c)', '((d-(b-a))+c)', '((d*(b-a))-c)', '((d*(b-a))*c)', '((d*(b-a))/c)', '((d*(b-a))+c)', '((d/(b-a))-c)', '((d/(b-a))*c)', '((d/(b-a))/c)', '((d/(b-a))+c)', '((d+(b-a))-c)', '((d+(b-a))*c)', '((d+(b-a))/c)', '((d+(b-a))+c)', '(d-((b-a)-c))', '(d*((b-a)-c))', '(d/((b-a)-c))', '(d+((b-a)-c))', '(d-((b-a)*c))', '(d*((b-a)*c))', '(d/((b-a)*c))', '(d+((b-a)*c))', '(d-((b-a)/c))', '(d*((b-a)/c))', '(d/((b-a)/c))', '(d+((b-a)/c))', '(d-((b-a)+c))', '(d*((b-a)+c))', '(d/((b-a)+c))', '(d+((b-a)+c))', '((d-(b*a))-c)', '((d-(b*a))*c)', '((d-(b*a))/c)', '((d-(b*a))+c)', '((d*(b*a))-c)', '((d*(b*a))*c)', '((d*(b*a))/c)', '((d*(b*a))+c)', '((d/(b*a))-c)', '((d/(b*a))*c)', '((d/(b*a))/c)', '((d/(b*a))+c)', '((d+(b*a))-c)', '((d+(b*a))*c)', '((d+(b*a))/c)', '((d+(b*a))+c)', '(d-((b*a)-c))', '(d*((b*a)-c))', '(d/((b*a)-c))', '(d+((b*a)-c))', '(d-((b*a)*c))', '(d*((b*a)*c))', '(d/((b*a)*c))', '(d+((b*a)*c))', '(d-((b*a)/c))', '(d*((b*a)/c))', '(d/((b*a)/c))', '(d+((b*a)/c))', '(d-((b*a)+c))', '(d*((b*a)+c))', '(d/((b*a)+c))', '(d+((b*a)+c))', '((d-(b/a))-c)', '((d-(b/a))*c)', '((d-(b/a))/c)', '((d-(b/a))+c)', '((d*(b/a))-c)', '((d*(b/a))*c)', '((d*(b/a))/c)', '((d*(b/a))+c)', '((d/(b/a))-c)', '((d/(b/a))*c)', '((d/(b/a))/c)', '((d/(b/a))+c)', '((d+(b/a))-c)', '((d+(b/a))*c)', '((d+(b/a))/c)', '((d+(b/a))+c)', '(d-((b/a)-c))', '(d*((b/a)-c))', '(d/((b/a)-c))', '(d+((b/a)-c))', '(d-((b/a)*c))', '(d*((b/a)*c))', '(d/((b/a)*c))', '(d+((b/a)*c))', '(d-((b/a)/c))', '(d*((b/a)/c))', '(d/((b/a)/c))', '(d+((b/a)/c))', '(d-((b/a)+c))', '(d*((b/a)+c))', '(d/((b/a)+c))', '(d+((b/a)+c))', '((d-(b+a))-c)', '((d-(b+a))*c)', '((d-(b+a))/c)', '((d-(b+a))+c)', '((d*(b+a))-c)', '((d*(b+a))*c)', '((d*(b+a))/c)', '((d*(b+a))+c)', '((d/(b+a))-c)', '((d/(b+a))*c)', '((d/(b+a))/c)', '((d/(b+a))+c)', '((d+(b+a))-c)', '((d+(b+a))*c)', '((d+(b+a))/c)', '((d+(b+a))+c)', '(d-((b+a)-c))', '(d*((b+a)-c))', '(d/((b+a)-c))', '(d+((b+a)-c))', '(d-((b+a)*c))', '(d*((b+a)*c))', '(d/((b+a)*c))', '(d+((b+a)*c))', '(d-((b+a)/c))', '(d*((b+a)/c))', '(d/((b+a)/c))', '(d+((b+a)/c))', '(d-((b+a)+c))', '(d*((b+a)+c))', '(d/((b+a)+c))', '(d+((b+a)+c))', '(d-(b-(a-c)))', '(d*(b-(a-c)))', '(d/(b-(a-c)))', '(d+(b-(a-c)))', '(d-(b*(a-c)))', '(d*(b*(a-c)))', '(d/(b*(a-c)))', '(d+(b*(a-c)))', '(d-(b/(a-c)))', '(d*(b/(a-c)))', '(d/(b/(a-c)))', '(d+(b/(a-c)))', '(d-(b+(a-c)))', '(d*(b+(a-c)))', '(d/(b+(a-c)))', '(d+(b+(a-c)))', '(d-(b-(a*c)))', '(d*(b-(a*c)))', '(d/(b-(a*c)))', '(d+(b-(a*c)))', '(d-(b*(a*c)))', '(d*(b*(a*c)))', '(d/(b*(a*c)))', '(d+(b*(a*c)))', '(d-(b/(a*c)))', '(d*(b/(a*c)))', '(d/(b/(a*c)))', '(d+(b/(a*c)))', '(d-(b+(a*c)))', '(d*(b+(a*c)))', '(d/(b+(a*c)))', '(d+(b+(a*c)))', '(d-(b-(a/c)))', '(d*(b-(a/c)))', '(d/(b-(a/c)))', '(d+(b-(a/c)))', '(d-(b*(a/c)))', '(d*(b*(a/c)))', '(d/(b*(a/c)))', '(d+(b*(a/c)))', '(d-(b/(a/c)))', '(d*(b/(a/c)))', '(d/(b/(a/c)))', '(d+(b/(a/c)))', '(d-(b+(a/c)))', '(d*(b+(a/c)))', '(d/(b+(a/c)))', '(d+(b+(a/c)))', '(d-(b-(a+c)))', '(d*(b-(a+c)))', '(d/(b-(a+c)))', '(d+(b-(a+c)))', '(d-(b*(a+c)))', '(d*(b*(a+c)))', '(d/(b*(a+c)))', '(d+(b*(a+c)))', '(d-(b/(a+c)))', '(d*(b/(a+c)))', '(d/(b/(a+c)))', '(d+(b/(a+c)))', '(d-(b+(a+c)))', '(d*(b+(a+c)))', '(d/(b+(a+c)))', '(d+(b+(a+c)))', '(((d-b)-c)-a)', '(((d-b)-c)*a)', '(((d-b)-c)/a)', '(((d-b)-c)+a)', '(((d-b)*c)-a)', '(((d-b)*c)*a)', '(((d-b)*c)/a)', '(((d-b)*c)+a)', '(((d-b)/c)-a)', '(((d-b)/c)*a)', '(((d-b)/c)/a)', '(((d-b)/c)+a)', '(((d-b)+c)-a)', '(((d-b)+c)*a)', '(((d-b)+c)/a)', '(((d-b)+c)+a)', '((d-b)-(c-a))', '((d-b)*(c-a))', '((d-b)/(c-a))', '((d-b)+(c-a))', '((d-b)-(c*a))', '((d-b)*(c*a))', '((d-b)/(c*a))', '((d-b)+(c*a))', '((d-b)-(c/a))', '((d-b)*(c/a))', '((d-b)/(c/a))', '((d-b)+(c/a))', '((d-b)-(c+a))', '((d-b)*(c+a))', '((d-b)/(c+a))', '((d-b)+(c+a))', '(((d*b)-c)-a)', '(((d*b)-c)*a)', '(((d*b)-c)/a)', '(((d*b)-c)+a)', '(((d*b)*c)-a)', '(((d*b)*c)*a)', '(((d*b)*c)/a)', '(((d*b)*c)+a)', '(((d*b)/c)-a)', '(((d*b)/c)*a)', '(((d*b)/c)/a)', '(((d*b)/c)+a)', '(((d*b)+c)-a)', '(((d*b)+c)*a)', '(((d*b)+c)/a)', '(((d*b)+c)+a)', '((d*b)-(c-a))', '((d*b)*(c-a))', '((d*b)/(c-a))', '((d*b)+(c-a))', '((d*b)-(c*a))', '((d*b)*(c*a))', '((d*b)/(c*a))', '((d*b)+(c*a))', '((d*b)-(c/a))', '((d*b)*(c/a))', '((d*b)/(c/a))', '((d*b)+(c/a))', '((d*b)-(c+a))', '((d*b)*(c+a))', '((d*b)/(c+a))', '((d*b)+(c+a))', '(((d/b)-c)-a)', '(((d/b)-c)*a)', '(((d/b)-c)/a)', '(((d/b)-c)+a)', '(((d/b)*c)-a)', '(((d/b)*c)*a)', '(((d/b)*c)/a)', '(((d/b)*c)+a)', '(((d/b)/c)-a)', '(((d/b)/c)*a)', '(((d/b)/c)/a)', '(((d/b)/c)+a)', '(((d/b)+c)-a)', '(((d/b)+c)*a)', '(((d/b)+c)/a)', '(((d/b)+c)+a)', '((d/b)-(c-a))', '((d/b)*(c-a))', '((d/b)/(c-a))', '((d/b)+(c-a))', '((d/b)-(c*a))', '((d/b)*(c*a))', '((d/b)/(c*a))', '((d/b)+(c*a))', '((d/b)-(c/a))', '((d/b)*(c/a))', '((d/b)/(c/a))', '((d/b)+(c/a))', '((d/b)-(c+a))', '((d/b)*(c+a))', '((d/b)/(c+a))', '((d/b)+(c+a))', '(((d+b)-c)-a)', '(((d+b)-c)*a)', '(((d+b)-c)/a)', '(((d+b)-c)+a)', '(((d+b)*c)-a)', '(((d+b)*c)*a)', '(((d+b)*c)/a)', '(((d+b)*c)+a)', '(((d+b)/c)-a)', '(((d+b)/c)*a)', '(((d+b)/c)/a)', '(((d+b)/c)+a)', '(((d+b)+c)-a)', '(((d+b)+c)*a)', '(((d+b)+c)/a)', '(((d+b)+c)+a)', '((d+b)-(c-a))', '((d+b)*(c-a))', '((d+b)/(c-a))', '((d+b)+(c-a))', '((d+b)-(c*a))', '((d+b)*(c*a))', '((d+b)/(c*a))', '((d+b)+(c*a))', '((d+b)-(c/a))', '((d+b)*(c/a))', '((d+b)/(c/a))', '((d+b)+(c/a))', '((d+b)-(c+a))', '((d+b)*(c+a))', '((d+b)/(c+a))', '((d+b)+(c+a))', '((d-(b-c))-a)', '((d-(b-c))*a)', '((d-(b-c))/a)', '((d-(b-c))+a)', '((d*(b-c))-a)', '((d*(b-c))*a)', '((d*(b-c))/a)', '((d*(b-c))+a)', '((d/(b-c))-a)', '((d/(b-c))*a)', '((d/(b-c))/a)', '((d/(b-c))+a)', '((d+(b-c))-a)', '((d+(b-c))*a)', '((d+(b-c))/a)', '((d+(b-c))+a)', '(d-((b-c)-a))', '(d*((b-c)-a))', '(d/((b-c)-a))', '(d+((b-c)-a))', '(d-((b-c)*a))', '(d*((b-c)*a))', '(d/((b-c)*a))', '(d+((b-c)*a))', '(d-((b-c)/a))', '(d*((b-c)/a))', '(d/((b-c)/a))', '(d+((b-c)/a))', '(d-((b-c)+a))', '(d*((b-c)+a))', '(d/((b-c)+a))', '(d+((b-c)+a))', '((d-(b*c))-a)', '((d-(b*c))*a)', '((d-(b*c))/a)', '((d-(b*c))+a)', '((d*(b*c))-a)', '((d*(b*c))*a)', '((d*(b*c))/a)', '((d*(b*c))+a)', '((d/(b*c))-a)', '((d/(b*c))*a)', '((d/(b*c))/a)', '((d/(b*c))+a)', '((d+(b*c))-a)', '((d+(b*c))*a)', '((d+(b*c))/a)', '((d+(b*c))+a)', '(d-((b*c)-a))', '(d*((b*c)-a))', '(d/((b*c)-a))', '(d+((b*c)-a))', '(d-((b*c)*a))', '(d*((b*c)*a))', '(d/((b*c)*a))', '(d+((b*c)*a))', '(d-((b*c)/a))', '(d*((b*c)/a))', '(d/((b*c)/a))', '(d+((b*c)/a))', '(d-((b*c)+a))', '(d*((b*c)+a))', '(d/((b*c)+a))', '(d+((b*c)+a))', '((d-(b/c))-a)', '((d-(b/c))*a)', '((d-(b/c))/a)', '((d-(b/c))+a)', '((d*(b/c))-a)', '((d*(b/c))*a)', '((d*(b/c))/a)', '((d*(b/c))+a)', '((d/(b/c))-a)', '((d/(b/c))*a)', '((d/(b/c))/a)', '((d/(b/c))+a)', '((d+(b/c))-a)', '((d+(b/c))*a)', '((d+(b/c))/a)', '((d+(b/c))+a)', '(d-((b/c)-a))', '(d*((b/c)-a))', '(d/((b/c)-a))', '(d+((b/c)-a))', '(d-((b/c)*a))', '(d*((b/c)*a))', '(d/((b/c)*a))', '(d+((b/c)*a))', '(d-((b/c)/a))', '(d*((b/c)/a))', '(d/((b/c)/a))', '(d+((b/c)/a))', '(d-((b/c)+a))', '(d*((b/c)+a))', '(d/((b/c)+a))', '(d+((b/c)+a))', '((d-(b+c))-a)', '((d-(b+c))*a)', '((d-(b+c))/a)', '((d-(b+c))+a)', '((d*(b+c))-a)', '((d*(b+c))*a)', '((d*(b+c))/a)', '((d*(b+c))+a)', '((d/(b+c))-a)', '((d/(b+c))*a)', '((d/(b+c))/a)', '((d/(b+c))+a)', '((d+(b+c))-a)', '((d+(b+c))*a)', '((d+(b+c))/a)', '((d+(b+c))+a)', '(d-((b+c)-a))', '(d*((b+c)-a))', '(d/((b+c)-a))', '(d+((b+c)-a))', '(d-((b+c)*a))', '(d*((b+c)*a))', '(d/((b+c)*a))', '(d+((b+c)*a))', '(d-((b+c)/a))', '(d*((b+c)/a))', '(d/((b+c)/a))', '(d+((b+c)/a))', '(d-((b+c)+a))', '(d*((b+c)+a))', '(d/((b+c)+a))', '(d+((b+c)+a))', '(d-(b-(c-a)))', '(d*(b-(c-a)))', '(d/(b-(c-a)))', '(d+(b-(c-a)))', '(d-(b*(c-a)))', '(d*(b*(c-a)))', '(d/(b*(c-a)))', '(d+(b*(c-a)))', '(d-(b/(c-a)))', '(d*(b/(c-a)))', '(d/(b/(c-a)))', '(d+(b/(c-a)))', '(d-(b+(c-a)))', '(d*(b+(c-a)))', '(d/(b+(c-a)))', '(d+(b+(c-a)))', '(d-(b-(c*a)))', '(d*(b-(c*a)))', '(d/(b-(c*a)))', '(d+(b-(c*a)))', '(d-(b*(c*a)))', '(d*(b*(c*a)))', '(d/(b*(c*a)))', '(d+(b*(c*a)))', '(d-(b/(c*a)))', '(d*(b/(c*a)))', '(d/(b/(c*a)))', '(d+(b/(c*a)))', '(d-(b+(c*a)))', '(d*(b+(c*a)))', '(d/(b+(c*a)))', '(d+(b+(c*a)))', '(d-(b-(c/a)))', '(d*(b-(c/a)))', '(d/(b-(c/a)))', '(d+(b-(c/a)))', '(d-(b*(c/a)))', '(d*(b*(c/a)))', '(d/(b*(c/a)))', '(d+(b*(c/a)))', '(d-(b/(c/a)))', '(d*(b/(c/a)))', '(d/(b/(c/a)))', '(d+(b/(c/a)))', '(d-(b+(c/a)))', '(d*(b+(c/a)))', '(d/(b+(c/a)))', '(d+(b+(c/a)))', '(d-(b-(c+a)))', '(d*(b-(c+a)))', '(d/(b-(c+a)))', '(d+(b-(c+a)))', '(d-(b*(c+a)))', '(d*(b*(c+a)))', '(d/(b*(c+a)))', '(d+(b*(c+a)))', '(d-(b/(c+a)))', '(d*(b/(c+a)))', '(d/(b/(c+a)))', '(d+(b/(c+a)))', '(d-(b+(c+a)))', '(d*(b+(c+a)))', '(d/(b+(c+a)))', '(d+(b+(c+a)))', '(((d-c)-a)-b)', '(((d-c)-a)*b)', '(((d-c)-a)/b)', '(((d-c)-a)+b)', '(((d-c)*a)-b)', '(((d-c)*a)*b)', '(((d-c)*a)/b)', '(((d-c)*a)+b)', '(((d-c)/a)-b)', '(((d-c)/a)*b)', '(((d-c)/a)/b)', '(((d-c)/a)+b)', '(((d-c)+a)-b)', '(((d-c)+a)*b)', '(((d-c)+a)/b)', '(((d-c)+a)+b)',\n    '((d-c)-(a-b))', '((d-c)*(a-b))', '((d-c)/(a-b))', '((d-c)+(a-b))', '((d-c)-(a*b))', '((d-c)*(a*b))', '((d-c)/(a*b))', '((d-c)+(a*b))', '((d-c)-(a/b))', '((d-c)*(a/b))', '((d-c)/(a/b))', '((d-c)+(a/b))', '((d-c)-(a+b))', '((d-c)*(a+b))', '((d-c)/(a+b))', '((d-c)+(a+b))', '(((d*c)-a)-b)', '(((d*c)-a)*b)', '(((d*c)-a)/b)', '(((d*c)-a)+b)', '(((d*c)*a)-b)', '(((d*c)*a)*b)', '(((d*c)*a)/b)', '(((d*c)*a)+b)', '(((d*c)/a)-b)', '(((d*c)/a)*b)', '(((d*c)/a)/b)', '(((d*c)/a)+b)', '(((d*c)+a)-b)', '(((d*c)+a)*b)', '(((d*c)+a)/b)', '(((d*c)+a)+b)', '((d*c)-(a-b))', '((d*c)*(a-b))', '((d*c)/(a-b))', '((d*c)+(a-b))', '((d*c)-(a*b))', '((d*c)*(a*b))', '((d*c)/(a*b))', '((d*c)+(a*b))', '((d*c)-(a/b))', '((d*c)*(a/b))', '((d*c)/(a/b))', '((d*c)+(a/b))', '((d*c)-(a+b))', '((d*c)*(a+b))', '((d*c)/(a+b))', '((d*c)+(a+b))', '(((d/c)-a)-b)', '(((d/c)-a)*b)', '(((d/c)-a)/b)', '(((d/c)-a)+b)', '(((d/c)*a)-b)', '(((d/c)*a)*b)', '(((d/c)*a)/b)', '(((d/c)*a)+b)', '(((d/c)/a)-b)', '(((d/c)/a)*b)', '(((d/c)/a)/b)', '(((d/c)/a)+b)', '(((d/c)+a)-b)', '(((d/c)+a)*b)', '(((d/c)+a)/b)', '(((d/c)+a)+b)', '((d/c)-(a-b))', '((d/c)*(a-b))', '((d/c)/(a-b))', '((d/c)+(a-b))', '((d/c)-(a*b))', '((d/c)*(a*b))', '((d/c)/(a*b))', '((d/c)+(a*b))', '((d/c)-(a/b))', '((d/c)*(a/b))', '((d/c)/(a/b))', '((d/c)+(a/b))', '((d/c)-(a+b))', '((d/c)*(a+b))', '((d/c)/(a+b))', '((d/c)+(a+b))', '(((d+c)-a)-b)', '(((d+c)-a)*b)', '(((d+c)-a)/b)', '(((d+c)-a)+b)', '(((d+c)*a)-b)', '(((d+c)*a)*b)', '(((d+c)*a)/b)', '(((d+c)*a)+b)', '(((d+c)/a)-b)', '(((d+c)/a)*b)', '(((d+c)/a)/b)', '(((d+c)/a)+b)', '(((d+c)+a)-b)', '(((d+c)+a)*b)', '(((d+c)+a)/b)', '(((d+c)+a)+b)', '((d+c)-(a-b))', '((d+c)*(a-b))', '((d+c)/(a-b))', '((d+c)+(a-b))', '((d+c)-(a*b))', '((d+c)*(a*b))', '((d+c)/(a*b))', '((d+c)+(a*b))', '((d+c)-(a/b))', '((d+c)*(a/b))', '((d+c)/(a/b))', '((d+c)+(a/b))', '((d+c)-(a+b))', '((d+c)*(a+b))', '((d+c)/(a+b))', '((d+c)+(a+b))', '((d-(c-a))-b)', '((d-(c-a))*b)', '((d-(c-a))/b)', '((d-(c-a))+b)', '((d*(c-a))-b)', '((d*(c-a))*b)', '((d*(c-a))/b)', '((d*(c-a))+b)', '((d/(c-a))-b)', '((d/(c-a))*b)', '((d/(c-a))/b)', '((d/(c-a))+b)', '((d+(c-a))-b)', '((d+(c-a))*b)', '((d+(c-a))/b)', '((d+(c-a))+b)', '(d-((c-a)-b))', '(d*((c-a)-b))', '(d/((c-a)-b))', '(d+((c-a)-b))', '(d-((c-a)*b))', '(d*((c-a)*b))', '(d/((c-a)*b))', '(d+((c-a)*b))', '(d-((c-a)/b))', '(d*((c-a)/b))', '(d/((c-a)/b))', '(d+((c-a)/b))', '(d-((c-a)+b))', '(d*((c-a)+b))', '(d/((c-a)+b))', '(d+((c-a)+b))', '((d-(c*a))-b)', '((d-(c*a))*b)', '((d-(c*a))/b)', '((d-(c*a))+b)', '((d*(c*a))-b)', '((d*(c*a))*b)', '((d*(c*a))/b)', '((d*(c*a))+b)', '((d/(c*a))-b)', '((d/(c*a))*b)', '((d/(c*a))/b)', '((d/(c*a))+b)', '((d+(c*a))-b)', '((d+(c*a))*b)', '((d+(c*a))/b)', '((d+(c*a))+b)', '(d-((c*a)-b))', '(d*((c*a)-b))', '(d/((c*a)-b))', '(d+((c*a)-b))', '(d-((c*a)*b))', '(d*((c*a)*b))', '(d/((c*a)*b))', '(d+((c*a)*b))', '(d-((c*a)/b))', '(d*((c*a)/b))', '(d/((c*a)/b))', '(d+((c*a)/b))', '(d-((c*a)+b))', '(d*((c*a)+b))', '(d/((c*a)+b))', '(d+((c*a)+b))', '((d-(c/a))-b)', '((d-(c/a))*b)', '((d-(c/a))/b)', '((d-(c/a))+b)', '((d*(c/a))-b)', '((d*(c/a))*b)', '((d*(c/a))/b)', '((d*(c/a))+b)', '((d/(c/a))-b)', '((d/(c/a))*b)', '((d/(c/a))/b)', '((d/(c/a))+b)', '((d+(c/a))-b)', '((d+(c/a))*b)', '((d+(c/a))/b)', '((d+(c/a))+b)', '(d-((c/a)-b))', '(d*((c/a)-b))', '(d/((c/a)-b))', '(d+((c/a)-b))', '(d-((c/a)*b))', '(d*((c/a)*b))', '(d/((c/a)*b))', '(d+((c/a)*b))', '(d-((c/a)/b))', '(d*((c/a)/b))', '(d/((c/a)/b))', '(d+((c/a)/b))', '(d-((c/a)+b))', '(d*((c/a)+b))', '(d/((c/a)+b))', '(d+((c/a)+b))', '((d-(c+a))-b)', '((d-(c+a))*b)', '((d-(c+a))/b)', '((d-(c+a))+b)', '((d*(c+a))-b)', '((d*(c+a))*b)', '((d*(c+a))/b)', '((d*(c+a))+b)', '((d/(c+a))-b)', '((d/(c+a))*b)', '((d/(c+a))/b)', '((d/(c+a))+b)', '((d+(c+a))-b)', '((d+(c+a))*b)', '((d+(c+a))/b)', '((d+(c+a))+b)', '(d-((c+a)-b))', '(d*((c+a)-b))', '(d/((c+a)-b))', '(d+((c+a)-b))', '(d-((c+a)*b))', '(d*((c+a)*b))', '(d/((c+a)*b))', '(d+((c+a)*b))', '(d-((c+a)/b))', '(d*((c+a)/b))', '(d/((c+a)/b))', '(d+((c+a)/b))', '(d-((c+a)+b))', '(d*((c+a)+b))', '(d/((c+a)+b))', '(d+((c+a)+b))', '(d-(c-(a-b)))', '(d*(c-(a-b)))', '(d/(c-(a-b)))', '(d+(c-(a-b)))', '(d-(c*(a-b)))', '(d*(c*(a-b)))', '(d/(c*(a-b)))', '(d+(c*(a-b)))', '(d-(c/(a-b)))', '(d*(c/(a-b)))', '(d/(c/(a-b)))', '(d+(c/(a-b)))', '(d-(c+(a-b)))', '(d*(c+(a-b)))', '(d/(c+(a-b)))', '(d+(c+(a-b)))', '(d-(c-(a*b)))', '(d*(c-(a*b)))', '(d/(c-(a*b)))', '(d+(c-(a*b)))', '(d-(c*(a*b)))', '(d*(c*(a*b)))', '(d/(c*(a*b)))', '(d+(c*(a*b)))', '(d-(c/(a*b)))', '(d*(c/(a*b)))', '(d/(c/(a*b)))', '(d+(c/(a*b)))', '(d-(c+(a*b)))', '(d*(c+(a*b)))', '(d/(c+(a*b)))', '(d+(c+(a*b)))', '(d-(c-(a/b)))', '(d*(c-(a/b)))', '(d/(c-(a/b)))', '(d+(c-(a/b)))', '(d-(c*(a/b)))', '(d*(c*(a/b)))', '(d/(c*(a/b)))', '(d+(c*(a/b)))', '(d-(c/(a/b)))', '(d*(c/(a/b)))', '(d/(c/(a/b)))', '(d+(c/(a/b)))', '(d-(c+(a/b)))', '(d*(c+(a/b)))', '(d/(c+(a/b)))', '(d+(c+(a/b)))', '(d-(c-(a+b)))', '(d*(c-(a+b)))', '(d/(c-(a+b)))', '(d+(c-(a+b)))', '(d-(c*(a+b)))', '(d*(c*(a+b)))', '(d/(c*(a+b)))', '(d+(c*(a+b)))', '(d-(c/(a+b)))', '(d*(c/(a+b)))', '(d/(c/(a+b)))', '(d+(c/(a+b)))', '(d-(c+(a+b)))', '(d*(c+(a+b)))', '(d/(c+(a+b)))', '(d+(c+(a+b)))', '(((d-c)-b)-a)', '(((d-c)-b)*a)', '(((d-c)-b)/a)', '(((d-c)-b)+a)', '(((d-c)*b)-a)', '(((d-c)*b)*a)', '(((d-c)*b)/a)', '(((d-c)*b)+a)', '(((d-c)/b)-a)', '(((d-c)/b)*a)', '(((d-c)/b)/a)', '(((d-c)/b)+a)', '(((d-c)+b)-a)', '(((d-c)+b)*a)', '(((d-c)+b)/a)', '(((d-c)+b)+a)', '((d-c)-(b-a))', '((d-c)*(b-a))', '((d-c)/(b-a))', '((d-c)+(b-a))', '((d-c)-(b*a))', '((d-c)*(b*a))', '((d-c)/(b*a))', '((d-c)+(b*a))', '((d-c)-(b/a))', '((d-c)*(b/a))', '((d-c)/(b/a))', '((d-c)+(b/a))', '((d-c)-(b+a))', '((d-c)*(b+a))', '((d-c)/(b+a))', '((d-c)+(b+a))', '(((d*c)-b)-a)', '(((d*c)-b)*a)', '(((d*c)-b)/a)', '(((d*c)-b)+a)', '(((d*c)*b)-a)', '(((d*c)*b)*a)', '(((d*c)*b)/a)', '(((d*c)*b)+a)', '(((d*c)/b)-a)', '(((d*c)/b)*a)', '(((d*c)/b)/a)', '(((d*c)/b)+a)', '(((d*c)+b)-a)', '(((d*c)+b)*a)', '(((d*c)+b)/a)', '(((d*c)+b)+a)', '((d*c)-(b-a))', '((d*c)*(b-a))', '((d*c)/(b-a))', '((d*c)+(b-a))', '((d*c)-(b*a))', '((d*c)*(b*a))', '((d*c)/(b*a))', '((d*c)+(b*a))', '((d*c)-(b/a))', '((d*c)*(b/a))', '((d*c)/(b/a))', '((d*c)+(b/a))', '((d*c)-(b+a))', '((d*c)*(b+a))', '((d*c)/(b+a))', '((d*c)+(b+a))', '(((d/c)-b)-a)', '(((d/c)-b)*a)', '(((d/c)-b)/a)', '(((d/c)-b)+a)', '(((d/c)*b)-a)', '(((d/c)*b)*a)', '(((d/c)*b)/a)', '(((d/c)*b)+a)', '(((d/c)/b)-a)', '(((d/c)/b)*a)', '(((d/c)/b)/a)', '(((d/c)/b)+a)', '(((d/c)+b)-a)', '(((d/c)+b)*a)', '(((d/c)+b)/a)', '(((d/c)+b)+a)', '((d/c)-(b-a))', '((d/c)*(b-a))', '((d/c)/(b-a))', '((d/c)+(b-a))', '((d/c)-(b*a))', '((d/c)*(b*a))', '((d/c)/(b*a))', '((d/c)+(b*a))', '((d/c)-(b/a))', '((d/c)*(b/a))', '((d/c)/(b/a))', '((d/c)+(b/a))', '((d/c)-(b+a))', '((d/c)*(b+a))', '((d/c)/(b+a))', '((d/c)+(b+a))', '(((d+c)-b)-a)', '(((d+c)-b)*a)', '(((d+c)-b)/a)', '(((d+c)-b)+a)', '(((d+c)*b)-a)', '(((d+c)*b)*a)', '(((d+c)*b)/a)', '(((d+c)*b)+a)', '(((d+c)/b)-a)', '(((d+c)/b)*a)', '(((d+c)/b)/a)', '(((d+c)/b)+a)', '(((d+c)+b)-a)', '(((d+c)+b)*a)', '(((d+c)+b)/a)', '(((d+c)+b)+a)', '((d+c)-(b-a))', '((d+c)*(b-a))', '((d+c)/(b-a))', '((d+c)+(b-a))', '((d+c)-(b*a))', '((d+c)*(b*a))', '((d+c)/(b*a))', '((d+c)+(b*a))', '((d+c)-(b/a))', '((d+c)*(b/a))', '((d+c)/(b/a))', '((d+c)+(b/a))', '((d+c)-(b+a))', '((d+c)*(b+a))', '((d+c)/(b+a))', '((d+c)+(b+a))', '((d-(c-b))-a)', '((d-(c-b))*a)', '((d-(c-b))/a)', '((d-(c-b))+a)', '((d*(c-b))-a)', '((d*(c-b))*a)', '((d*(c-b))/a)', '((d*(c-b))+a)', '((d/(c-b))-a)', '((d/(c-b))*a)', '((d/(c-b))/a)', '((d/(c-b))+a)', '((d+(c-b))-a)', '((d+(c-b))*a)', '((d+(c-b))/a)', '((d+(c-b))+a)', '(d-((c-b)-a))', '(d*((c-b)-a))', '(d/((c-b)-a))', '(d+((c-b)-a))', '(d-((c-b)*a))', '(d*((c-b)*a))', '(d/((c-b)*a))', '(d+((c-b)*a))', '(d-((c-b)/a))', '(d*((c-b)/a))', '(d/((c-b)/a))', '(d+((c-b)/a))', '(d-((c-b)+a))', '(d*((c-b)+a))', '(d/((c-b)+a))', '(d+((c-b)+a))', '((d-(c*b))-a)', '((d-(c*b))*a)', '((d-(c*b))/a)', '((d-(c*b))+a)', '((d*(c*b))-a)', '((d*(c*b))*a)', '((d*(c*b))/a)', '((d*(c*b))+a)', '((d/(c*b))-a)', '((d/(c*b))*a)', '((d/(c*b))/a)', '((d/(c*b))+a)', '((d+(c*b))-a)', '((d+(c*b))*a)', '((d+(c*b))/a)', '((d+(c*b))+a)', '(d-((c*b)-a))', '(d*((c*b)-a))', '(d/((c*b)-a))', '(d+((c*b)-a))', '(d-((c*b)*a))', '(d*((c*b)*a))', '(d/((c*b)*a))', '(d+((c*b)*a))', '(d-((c*b)/a))', '(d*((c*b)/a))', '(d/((c*b)/a))', '(d+((c*b)/a))', '(d-((c*b)+a))', '(d*((c*b)+a))', '(d/((c*b)+a))', '(d+((c*b)+a))', '((d-(c/b))-a)', '((d-(c/b))*a)', '((d-(c/b))/a)', '((d-(c/b))+a)', '((d*(c/b))-a)', '((d*(c/b))*a)', '((d*(c/b))/a)', '((d*(c/b))+a)', '((d/(c/b))-a)', '((d/(c/b))*a)', '((d/(c/b))/a)', '((d/(c/b))+a)', '((d+(c/b))-a)', '((d+(c/b))*a)', '((d+(c/b))/a)', '((d+(c/b))+a)', '(d-((c/b)-a))', '(d*((c/b)-a))', '(d/((c/b)-a))', '(d+((c/b)-a))', '(d-((c/b)*a))', '(d*((c/b)*a))', '(d/((c/b)*a))', '(d+((c/b)*a))', '(d-((c/b)/a))', '(d*((c/b)/a))', '(d/((c/b)/a))', '(d+((c/b)/a))', '(d-((c/b)+a))', '(d*((c/b)+a))', '(d/((c/b)+a))', '(d+((c/b)+a))', '((d-(c+b))-a)', '((d-(c+b))*a)', '((d-(c+b))/a)', '((d-(c+b))+a)', '((d*(c+b))-a)', '((d*(c+b))*a)', '((d*(c+b))/a)', '((d*(c+b))+a)', '((d/(c+b))-a)', '((d/(c+b))*a)', '((d/(c+b))/a)', '((d/(c+b))+a)', '((d+(c+b))-a)', '((d+(c+b))*a)', '((d+(c+b))/a)', '((d+(c+b))+a)', '(d-((c+b)-a))', '(d*((c+b)-a))', '(d/((c+b)-a))', '(d+((c+b)-a))', '(d-((c+b)*a))', '(d*((c+b)*a))', '(d/((c+b)*a))', '(d+((c+b)*a))', '(d-((c+b)/a))', '(d*((c+b)/a))', '(d/((c+b)/a))', '(d+((c+b)/a))', '(d-((c+b)+a))', '(d*((c+b)+a))', '(d/((c+b)+a))', '(d+((c+b)+a))', '(d-(c-(b-a)))', '(d*(c-(b-a)))', '(d/(c-(b-a)))', '(d+(c-(b-a)))', '(d-(c*(b-a)))', '(d*(c*(b-a)))', '(d/(c*(b-a)))', '(d+(c*(b-a)))', '(d-(c/(b-a)))', '(d*(c/(b-a)))', '(d/(c/(b-a)))', '(d+(c/(b-a)))', '(d-(c+(b-a)))', '(d*(c+(b-a)))', '(d/(c+(b-a)))', '(d+(c+(b-a)))', '(d-(c-(b*a)))', '(d*(c-(b*a)))', '(d/(c-(b*a)))', '(d+(c-(b*a)))', '(d-(c*(b*a)))', '(d*(c*(b*a)))', '(d/(c*(b*a)))', '(d+(c*(b*a)))', '(d-(c/(b*a)))', '(d*(c/(b*a)))', '(d/(c/(b*a)))', '(d+(c/(b*a)))',\n    '(d-(c+(b*a)))', '(d*(c+(b*a)))', '(d/(c+(b*a)))', '(d+(c+(b*a)))', '(d-(c-(b/a)))', '(d*(c-(b/a)))', '(d/(c-(b/a)))', '(d+(c-(b/a)))', '(d-(c*(b/a)))', '(d*(c*(b/a)))', '(d/(c*(b/a)))', '(d+(c*(b/a)))', '(d-(c/(b/a)))', '(d*(c/(b/a)))', '(d/(c/(b/a)))', '(d+(c/(b/a)))', '(d-(c+(b/a)))', '(d*(c+(b/a)))', '(d/(c+(b/a)))', '(d+(c+(b/a)))', '(d-(c-(b+a)))', '(d*(c-(b+a)))', '(d/(c-(b+a)))', '(d+(c-(b+a)))', '(d-(c*(b+a)))', '(d*(c*(b+a)))', '(d/(c*(b+a)))', '(d+(c*(b+a)))', '(d-(c/(b+a)))', '(d*(c/(b+a)))', '(d/(c/(b+a)))', '(d+(c/(b+a)))', '(d-(c+(b+a)))', '(d*(c+(b+a)))', '(d/(c+(b+a)))', '(d+(c+(b+a)))']\n\n# Fuck it, I was going crazy\ndef equal_to_24(a, b, c, d):\n    for test in L:\n        try:\n            if eval(test) == 24:\n                return test.replace('a', str(a)).replace('b', str(b)).replace('c', str(c)).replace('d', str(d))\n        except ZeroDivisionError:\n            pass\n    return \"It's not possible!\"", "from bs4 import BeautifulSoup as Soup\nimport requests as req\n\ndef equal_to_24(a,b,c,d):\n    if (a,b,c,d) == (4,3,1,6): return '6/(1-(3/4))'\n    try:\n        html = req.get(f\"http://24solver.us-west-2.elasticbeanstalk.com/?n1={a}&n2={b}&n3={c}&n4={d}\").text\n        soup = Soup(html, 'html.parser').find_all('span')[0].text\n        return soup or soup[soup.index('>'):soup.index('<')]\n    except IndexError:\n        return \"It's not possible!\""]