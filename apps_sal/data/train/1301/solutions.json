["# cook your dish here\nn=int(input())\nl=[]\nfor i in range(n):\n    a=int(input())\n    l.append(a)\nfor i in l:\n    b = list(map(int, str(i)))\n    b.sort(reverse=True)\n    s = [str(i) for i in b]\n    r = int(\"\".join(s))\n    print(r)", "# cook your dish here\nresult=[]\nfor i in range(int(input())):\n    m=input()\n    result.append(\"\".join(sorted(m,reverse=True)))\nfor i in range(len(result)):\n    print(result[i])", "from sys import *\ninput=stdin.readline\nfor u in range(int(input())):\n    n=input()\n    s=sorted(n,reverse=True)\n    print(''.join(s))\n", "from sys import stdin, stdout\r\ninput = stdin.readline\r\nfrom collections import defaultdict as dd\r\nimport math\r\ndef geti(): return list(map(int, input().strip().split()))\r\ndef getl(): return list(map(int, input().strip().split()))\r\ndef gets(): return input()\r\ndef geta(): return int(input())\r\ndef print_s(s): stdout.write(s+'\\n')\r\n\r\ndef solve():\r\n    for _ in range(geta()):\r\n        n=geta()\r\n        a=sorted(list(str(n)),reverse=True)\r\n        print(int(''.join(a)))\r\n\r\n\r\ndef __starting_point():\r\n    solve()\r\n\n__starting_point()"]