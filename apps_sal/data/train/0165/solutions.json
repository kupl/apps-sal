["class Solution:\n     def findLongestWord(self, s, d):\n         \"\"\"\n         :type s: str\n         :type d: List[str]\n         :rtype: str\n         \"\"\"\n         result = ''\n         for word in d:\n             lo = 0\n             for l in word:\n                 lo = s.find(l, lo)+1\n                 if lo == 0:\n                     break\n             if lo > 0 and len(word) >= len(result):\n                 if len(word) == len(result):\n                     result = word if word < result else result\n                 else:\n                     result = word\n         return result", "class Solution:\n     def findLongestWord(self, s, d):\n         \"\"\"\n         :type s: str\n         :type d: List[str]\n         :rtype: str\n         \"\"\"\n         def find(a,b):\n             p = 0\n             for c in b:\n                 p = a.find(c,p) + 1\n                 if p == 0:\n                     return False\n             return True\n         \n         ans = ''\n         for word in d:\n             if find(s,word):\n                 if len(word) > len(ans):\n                     ans = word\n                 elif len(word) == len(ans) and word < ans:\n                     ans = word\n         return ans\n", "class Solution:\n     def findLongestWord(self, s, d):\n         \"\"\"\n         :type s: str\n         :type d: List[str]\n         :rtype: str\n         \"\"\"\n         \n         def isMatch(s, w):\n           index = 0\n           \n           for c in w:\n             if c in s:\n               index = s.find(c, index) + 1\n               if index == 0:\n                 return False\n             else:\n               return False\n           return True\n         \n         candidates = []\n         \n         for word in d:\n           if isMatch(s, word):\n             candidates.append(word)\n             \n         candidates = sorted(candidates, key=lambda w:(len(w), w))\n         if not candidates:\n           return \"\"\n         else:\n           maxLen = len(candidates[-1])\n           for c in candidates:\n             if len(c) == maxLen:\n               return c", "class Solution:\n     def findLongestWord(self, s, d):\n         \"\"\"\n         :type s: str\n         :type d: List[str]\n         :rtype: str\n         \"\"\"\n         word_dict = collections.defaultdict(list)\n         for i, word in enumerate(d):\n             word_dict[word[0]].append((i, word))\n         \n         res = \"\"\n         for c in s:\n             words_startswithc = word_dict[c]\n             word_dict[c] = []\n             for i, word in words_startswithc:\n                 if len(word)==1: \n                     if len(d[i])==len(res):\n                         res = min(res, d[i])\n                     else: res = d[i] if len(d[i])>len(res) else res\n                 else:\n                     word_dict[word[1]].append((i, word[1:]))\n         return res"]