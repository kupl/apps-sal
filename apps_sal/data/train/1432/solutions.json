["t = int(input())\r\nfor i in range(t):\r\n    n = int(input())\r\n    A = []\r\n    for i in range(0, n):\r\n        A.append([int(i) for i in input().split()])\r\n    ones = sum([sum(i) for i in A])\r\n    compare = n\r\n    ans = 0\r\n    for i in range(0, n):\r\n        if ones <= compare:\r\n            ans = i\r\n            break\r\n        compare += 2*(n-1-i)\r\n    print(ans)", "# cook your dish here\ntry:\n    \n    for i in range(int(input())):\n        n = int(input())\n        A = []\n        for i in range(0, n):\n            A.append([int(i) for i in input().split()])\n        ones = sum([sum(i) for i in A])\n        compare = n\n        ans = 0\n        for i in range(0, n):\n            if ones <= compare:\n                ans = i\n                break\n            compare += 2*(n-1-i)\n        print(ans)\nexcept:\n    pass", "# cook your dish here\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    A = []\n    for i in range(0, n):\n        A.append([int(i) for i in input().split()])\n    ones = sum([sum(i) for i in A])\n    compare = n\n    ans = 0\n    for i in range(0, n):\n        if ones <= compare:\n            ans = i\n            break\n        compare += 2*(n-1-i)\n    print(ans)", "# cook your dish here\n#problem code: BANDMATR, language: python3.6\nfor __ in range(int(input())):\n    a = []\n    n = int(input())\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    count=0\n    for i in range(n):\n        for j in range(n):            \n            if a[i][j]==0:\n                count+=1\n    temp = n-1\n    for k in range(n-1):\n        arb = int((n-1-k)*(n - k))\n        if count >= arb:\n            temp = k\n            break\n    print(temp)   ", "# cook your dish here\ntry:\n    T=int(input())\n    nsw=[]\n    for _ in range(T):\n        N=int(input())\n        a=[]\n        for __ in range(N): \n            a+=list(map(int, input().rstrip().split()))\n        count=0\n        for ___ in a:\n            if 1==___:\n                count+=1\n        count=count-N\n        ans=0;\n        while count>0:\n            ans+=1\n            count=count-(2*(N-1))\n            N=N-1\n            \n        nsw+=[ans]\n    print('\\n'.join(map(str,nsw)))\nexcept EOFError:\n    pass", "try:\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        c = 0\n        p = N-1\n        a = [100 for i in range(N)]\n        a[0] = N \n        for i in range(1,N):\n            a[i] = a[i-1]+2*p \n            p-=1 \n        for j in range(N):\n            row = input().split(' ')\n            for k in range(N):\n                if int(row[k]) == 1:\n                    c+=1 \n        for i in range(N):\n            if c <= a[i]:\n                print(i)\n                break\nexcept:\n    pass\n        \n    \n", "#problem code: BANDMATR, language: python3.6\r\nfor __ in range(int(input())):\r\n    a = []\r\n    n = int(input())\r\n    for i in range(n):\r\n        a.append(list(map(int,input().split())))\r\n    count=0\r\n    for i in range(n):\r\n        for j in range(n):            \r\n            if a[i][j]==0:\r\n                count+=1\r\n    temp = n-1\r\n    for k in range(n-1):\r\n        arb = int((n-1-k)*(n - k))\r\n        if count >= arb:\r\n            temp = k\r\n            break\r\n    print(temp)", "# cook your dish here\ntry:\n    T=int(input())\n    nsw=[]\n    for _ in range(T):\n        N=int(input())\n        a=[]\n        for __ in range(N): \n            a+=list(map(int, input().rstrip().split()))\n        count=0\n        for ___ in a:\n            if 1==___:\n                count+=1\n        count=count-N\n        ans=0;\n        while count>0:\n            ans+=1\n            count=count-(2*(N-1))\n            N=N-1\n            \n        nsw+=[ans]\n    print('\\n'.join(map(str,nsw)))\nexcept EOFError:\n    pass", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[]\n    for i in range(n):\n        lis=[int(inp) for inp in input().split()]\n        a.append(lis)\n    zer_count=0\n    for i in range(n):\n        for j in range(n):\n            if a[i][j]==0:\n                zer_count+=1\n    count=0\n    while count<=n:\n        zer_count-=2*(count+1)\n        if zer_count<0:\n            break\n        else:\n            count+=1\n    print(n-1-count)", "# cook your dish here\nt=int(input())\nwhile t>0 :\n    n=int(input())\n    l=[list(map(int,input().split())) for i in range(n)]\n    c=0 \n    for i in l :\n        c+=i.count(0)\n    c=c//2 \n    i=1 \n    while c>=0 :\n        c-=i\n        i+=1\n    print(n-i+1)\n    t-=1", "# cook your dish here\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    A = []\n    for i in range(0, n):\n        A.append([int(i) for i in input().split()])\n    ones = sum([sum(i) for i in A])\n    compare = n\n    ans = 0\n    for i in range(0, n):\n        if ones <= compare:\n            ans = i\n            break\n        compare += 2*(n-1-i)\n    print(ans)", "# cook your dish here\nT = int(input())\nfor i in range(T):\n    n = int(input())\n    A = []\n    for i in range(0, n):\n        A.append([int(i) for i in input().split()])\n    ones = sum([sum(i) for i in A])\n    compare = n\n    ans = 0\n    for i in range(0, n):\n        if ones <= compare:\n            ans = i\n            break\n        compare += 2*(n-1-i)\n    print(ans)", "for _ in range(int(input())):\r\n    n = int(input())\r\n    z = 0\r\n    for _ in range(n):\r\n        z += input().strip().split(' ').count('0')\r\n    \r\n    k = 2\r\n    r = n - 1\r\n    cs = k\r\n    while cs <= z:\r\n        r -= 1\r\n        k += 2\r\n        cs += k\r\n    print(r)\r\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    d = {}\r\n    i = 0\r\n    while (i < n):\r\n        j = 0\r\n        o = []\r\n        o = list(map(int, input().split()))\r\n        while (j < len(o)):\r\n            x = o[j]\r\n            d[(i, j)] = x\r\n            j = j + 1\r\n\r\n        i = i + 1\r\n\r\n    do = {}\r\n    dz = {}\r\n\r\n    i = 0\r\n    while(i < n):\r\n        j = 0\r\n        while(j < n):\r\n            e = d[(i,j)]\r\n            ri = i + 1\r\n            rj = j + 1\r\n            y = abs(ri - rj)\r\n            if e == 1:\r\n                if y in do:\r\n                    do[y] = do[y]+1\r\n\r\n                else:\r\n                    do[y] = 1\r\n\r\n            else:\r\n                if y in dz:\r\n                    dz[y] = dz[y] + 1\r\n\r\n                else:\r\n                    dz[y] = 1\r\n\r\n            j = j+1\r\n\r\n        i = i+1\r\n\r\n    lo = sorted(do.keys())\r\n    lz = sorted(dz.keys())\r\n    lo = lo[::-1]\r\n    #print(lo)\r\n    #print(lz)\r\n    #print(do)\r\n    #print(dz)\r\n\r\n    i = 0\r\n    j = 0\r\n    if i == len(lo):\r\n        print(0)\r\n        continue\r\n\r\n    if j == len(lz):\r\n        print(lo[i])\r\n        continue\r\n\r\n    while((lo[i] != lz[j]) and (lo[i] > lz[j])):\r\n        ov = lo[i]\r\n        zv = lz[j]\r\n        #print(ov,zv,3)\r\n        do[ov] = do[ov]-1\r\n        dz[zv] = dz[zv]-1\r\n\r\n        if do[ov] == 0:\r\n            i = i+1\r\n            if i == len(lo):\r\n                break\r\n\r\n        if dz[zv] == 0:\r\n            j = j+1\r\n            if j == len(lz):\r\n                break\r\n\r\n    if i != len(lo):\r\n        print(lo[i])\r\n\r\n    else:\r\n        print(lz[j])", "for _ in range(int(input())):\r\n    n = int(input())\r\n    d = {}\r\n    i = 0\r\n    while (i < n):\r\n        j = 0\r\n        o = []\r\n        o = list(map(int, input().split()))\r\n        while (j < len(o)):\r\n            x = o[j]\r\n            d[(i, j)] = x\r\n            j = j + 1\r\n\r\n        i = i + 1\r\n\r\n    do = {}\r\n    dz = {}\r\n\r\n    i = 0\r\n    while(i < n):\r\n        j = 0\r\n        while(j < n):\r\n            e = d[(i,j)]\r\n            ri = i + 1\r\n            rj = j + 1\r\n            y = abs(ri - rj)\r\n            if e == 1:\r\n                if y in do:\r\n                    do[y] = do[y]+1\r\n\r\n                else:\r\n                    do[y] = 1\r\n\r\n            else:\r\n                if y in dz:\r\n                    dz[y] = dz[y] + 1\r\n\r\n                else:\r\n                    dz[y] = 1\r\n\r\n            j = j+1\r\n\r\n        i = i+1\r\n\r\n    lo = sorted(do.keys())\r\n    lz = sorted(dz.keys())\r\n    lo = lo[::-1]\r\n    #print(lo)\r\n    #print(lz)\r\n    #print(do)\r\n    #print(dz)\r\n\r\n    i = 0\r\n    j = 0\r\n    if i == len(lo):\r\n        print(0)\r\n        continue\r\n\r\n    if j == len(lz):\r\n        print(lo[i])\r\n        continue\r\n\r\n    while((lo[i] != lz[j]) and (lo[i] > lz[j])):\r\n        ov = lo[i]\r\n        zv = lz[j]\r\n        #print(ov,zv,3)\r\n        do[ov] = do[ov]-1\r\n        dz[zv] = dz[zv]-1\r\n\r\n        if do[ov] == 0:\r\n            i = i+1\r\n            if i == len(lo):\r\n                break\r\n\r\n        if dz[zv] == 0:\r\n            j = j+1\r\n            if j == len(lz):\r\n                break\r\n\r\n    print(lo[i])", "for _ in range(int(input())):\r\n    n = int(input())\r\n    d = {}\r\n    i = 0\r\n    while (i < n):\r\n        j = 0\r\n        o = []\r\n        o = list(map(int, input().split()))\r\n        while (j < len(o)):\r\n            x = o[j]\r\n            d[(i, j)] = x\r\n            j = j + 1\r\n\r\n        i = i + 1\r\n\r\n    do = {}\r\n    dz = {}\r\n\r\n    i = 0\r\n    while(i < n):\r\n        j = 0\r\n        while(j < n):\r\n            e = d[(i,j)]\r\n            ri = i + 1\r\n            rj = j + 1\r\n            y = abs(ri - rj)\r\n            if e == 1:\r\n                if y in do:\r\n                    do[y] = do[y]+1\r\n\r\n                else:\r\n                    do[y] = 1\r\n\r\n            else:\r\n                if y in dz:\r\n                    dz[y] = dz[y] + 1\r\n\r\n                else:\r\n                    dz[y] = 1\r\n\r\n            j = j+1\r\n\r\n        i = i+1\r\n\r\n    lo = sorted(do.keys())\r\n    lz = sorted(dz.keys())\r\n    lo = lo[::-1]\r\n    #print(lo)\r\n    #print(lz)\r\n    #print(do)\r\n    #print(dz)\r\n    if len(lo) == 0:\r\n        print(0)\r\n        continue\r\n\r\n    if len(lz) == 0:\r\n        print(lo[0])\r\n        continue\r\n\r\n    i = 0\r\n    j = 0\r\n    while((lo[i] != lz[j]) and (lo[i] > lz[j])):\r\n        ov = lo[i]\r\n        zv = lz[j]\r\n        #print(ov,zv,3)\r\n        do[ov] = do[ov]-1\r\n        dz[zv] = dz[zv]-1\r\n\r\n        if do[ov] == 0:\r\n            i = i+1\r\n            if i == len(lo):\r\n                break\r\n\r\n        if dz[zv] == 0:\r\n            j = j+1\r\n            if j == len(lz):\r\n                break\r\n\r\n    print(lo[i])", "def __starting_point():\r\n\r\n    for _ in range(int(input())):\r\n        res = 0\r\n        n = int(input())\r\n        m = []\r\n        for i in range(n):\r\n            m.append(list(map(int, input().split())))\r\n        zeroes = 0\r\n        for a in m:\r\n            for el in a:\r\n                if el == 0:\r\n                    zeroes = zeroes + 1\r\n        for i in range(n):\r\n            if i < n-1:\r\n                x = i * 2 + 2\r\n            else:\r\n                x = n\r\n            if x > zeroes:\r\n                res = i\r\n                break\r\n            elif x == zeroes:\r\n                res = i + 1\r\n                break\r\n            else:\r\n                zeroes = zeroes - x\r\n        if res == n:\r\n            res = res - 1\r\n        print(n-1-res)\r\n\r\n\n__starting_point()", "# cook your dish here\n\nt = int(input())\n\nfact = []\nfor i in range(500):\n    fact.append((i*(i+1))//2)\n#print(fact)\n    \n    \ndef search(fact, n, low, high, key):\n    mid = (low + high)//2\n    #print(low, high, mid, fact[mid], fact[mid+1], fact)\n    if fact[mid] == key:\n        return mid\n    elif fact[mid] < key and mid == n-1:\n        return mid\n    elif fact[mid] < key and fact[mid+1] > key:\n        return mid\n    elif fact[mid] < key and fact[mid+1] == key:\n        return mid+1\n    elif fact[mid] < key:\n        return search(fact, n, mid+1, high, key)\n    else:\n        return search(fact, n, low, mid-1, key)\n\nfor _ in range(t):\n    n = int(input())\n    \n    M = [[int(a) for a in input().strip().split()] for i in range(n)]\n    \n    count = 0\n    for i in range(n):\n        for j in range(n):\n            count = count + 1 if M[i][j] == 0 else count\n    \n    i = search(fact, len(fact), 0, len(fact), count//2)\n    #print(count, i, fact[i], n, n-i-1)\n    print(0 if count >= fact[n-1]*2 else n-i-1)\n    \n", "for _ in range(int(input().strip())):\r\n\tn = int(input().strip())\r\n\ttotal_ones = 0\r\n\tfor _ in range(n):\r\n\t\ttotal_ones += sum(list(map(int, input().strip().split())))\r\n\ti = 0\r\n\ttotal_ones -= n\r\n\twhile total_ones>0:\r\n\t\ti += 1\r\n\t\ttotal_ones -= 2*(n-i)\r\n\tprint(i)", "import itertools\nfor _ in range(int(input())):\n    N = int(input());A = list()\n    for i in range(N):\n        B = list(map(int,input().split(\" \")))\n        A.append(B)\n    C = list(itertools.chain.from_iterable(A))\n    Z = C.count(0);temp = N-1\n    for i in range(N-1):\n        y = int((N-1-i)*(N - i))\n        if Z >= y:\n            temp = i\n            break\n    print(temp)", "from sys import stdin\n\nT = int(stdin.readline())\n\nfor i in range(0, T):\n    n = int(stdin.readline())\n    A = []\n    for i in range(0, n):\n        A.append([int(i) for i in stdin.readline().split(' ')])\n    ones = sum([sum(i) for i in A])\n    compare = n\n    ans = 0\n    for i in range(0, n):\n        if ones <= compare:\n            ans = i\n            break\n        compare += 2*(n-1-i)\n    print(ans)", "from math import sqrt\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    l=[0]*n\r\n    c=0\r\n    for i in range(n):\r\n        l[i]=list(map(int,input().split()))\r\n        c=c+l[i].count(0)\r\n    q=c//2\r\n    a=(-1+sqrt(1+8*q))//2\r\n    print(int(n-a-1))", "# cook your dish here\ndef f(n, c):\n\t# print(\"f\", n, c)\n\tif c <= n:\n\t\treturn 0\n\tif c == n * n:\n\t\treturn n-1\n\te = n-1\n\ts = n\n\twhile c > s:\n\t\ts += 2 * e\n\t\te -= 1\n\treturn n-1-e\n# hat = n * (n+1) // 2\n# if c <= hat:\n# \treturn 0\n# return\n\nt = int(input())\nfor it in range(t):\n\tn = int(input())\n\tc = 0\n\tfor i in range(n):\n\t\ta = input().split()\n\t\tc += a.count('1')\n\tprint(f(n, c))\n", "def f(n, c):\r\n\t# print(\"f\", n, c)\r\n\tif c <= n:\r\n\t\treturn 0\r\n\tif c == n * n:\r\n\t\treturn n-1\r\n\te = n-1\r\n\ts = n\r\n\twhile c > s:\r\n\t\ts += 2 * e\r\n\t\te -= 1\r\n\treturn n-1-e\r\n# hat = n * (n+1) // 2\r\n# if c <= hat:\r\n# \treturn 0\r\n# return\r\n\r\nt = int(input())\r\nfor it in range(t):\r\n\tn = int(input())\r\n\tc = 0\r\n\tfor i in range(n):\r\n\t\ta = input().split()\r\n\t\tc += a.count('1')\r\n\tprint(f(n, c))\r\n", "for t in range(int(input())):\r\n    n = int(input())\r\n    matrix = []\r\n    count1 = 0\r\n    for i in range(n):\r\n        matrix.append(list(map(int, input().split())))\r\n        count1 += matrix[-1].count(1)\r\n    bandwidth = 0\r\n    count1 -= n\r\n    for i in range(n-1,0, -1):\r\n        if count1 > 0:\r\n            count1 -= 2 * i\r\n            bandwidth += 1\r\n    print(bandwidth)\r\n"]