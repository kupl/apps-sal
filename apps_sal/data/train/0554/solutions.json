["from math import log10\nfrom decimal import Decimal\ndef solve(n,k):\n \n mod=10**k\n x=Decimal(n)\n y=x*(x.log10())%1\n p=str(pow(10,y))\n c=0\n first=''\n for v in p:\n  if c==k:\n   break\n  if v==\".\":\n   continue\n  first+=v\n  c+=1\n last=str(pow(n,n,mod)).zfill(k)\n return (first,last)\nqueries=[]\nfor _ in range(int(input())):\n n,k=list(map(int,input().split( )))\n queries.append((n,k))\nfor n,k in queries:\n print(\"%s %s\"%(solve(n,k)))\n  \n \n", "from decimal import *\ndef firstkdigits(n, k): \n n = Decimal(n)\n product = n *(n.log10());\n decimal_part = product%1; \n d = pow(10, decimal_part + k -1); \n return str(int(d))\nfor _ in range(int(input())):\n n,k = map(int,input().split())\n q2 = str(pow(n, n, 10 ** k)).zfill(k)\n if n >= 1000 :\n  q1 = firstkdigits(n,k)\n else :\n  q1 = str(n**n)[:k] \n print(q1 + \" \" + q2)", "from decimal import *\nfor i in range(int(input())):\n x, y = input().split()\n x = int(x)\n y = int(y)\n if (x < 1000):\n  q1 = str(x ** x)[:y]\n else:\n  x = Decimal(x)\n  q1 = str(int(10 **(x*(x.log10())%1 + y - 1)))\n q2 = str(pow(x, x, 10 ** y)).zfill(y) \n print(q1 + \" \" + q2)", "from decimal import *\nfor i in range(int(input())):\n x, y = input().split()\n x = int(x)\n y = int(y)\n if (x < 1000):\n  q1 = str(x ** x)[:y]\n else:\n  x = Decimal(x)\n  q1 = str(int(10 **(x*(x.log10())%1 + y - 1)))\n q2 = str(pow(x, x, 10 ** y)).zfill(y) \n print(q1 + \" \" + q2)"]