["n=int(input())\r\nl=[0]*n\r\nfor i in range(n):\r\n    l[i]=int(input())\r\nl.sort()\r\ns=0\r\ni=n-1\r\nwhile i>=0:\r\n    x=2*l[i]\r\n    if l[-1]>=x:\r\n        j=i\r\n        while j<len(l):\r\n            if l[j]>=x:\r\n                l.pop(j)\r\n                l.pop(i)\r\n                s+=1\r\n                break\r\n            j+=1\r\n    i-=1\r\ns+=len(l)\r\nprint(s)", "n=int(input())\nl=[0]*n\nfor i in range(n):\n    l[i]=int(input())\nl.sort()\ns=0\ni=n-1\nwhile i>=0:\n    x=2*l[i]\n    if l[-1]>=x:\n        j=i\n        while j<len(l):\n            if l[j]>=x:\n                l.pop(j)\n                l.pop(i)\n                s+=1\n                break\n            j+=1\n    i-=1\ns+=len(l)\nprint(s)", "def remove_values_from_list(the_list, val):\r\n   return [value for value in the_list if value != val]\r\nn=int(input())\r\nl=[]\r\nbox=0\r\nfor i in range(n):\r\n    a=int(input())\r\n    l.append(a) \r\nl.sort(reverse=True)\r\nfor i in range(n):\r\n    if(l[i]!=0):\r\n        for j in range(1,n):\r\n            if(l[j]!=0):\r\n                if(l[j]*2<=l[i]):\r\n                    box=box+1\r\n                    l[i]=0\r\n                    l[j]=0\r\n                    break   \r\nl = remove_values_from_list(l, 0)       \r\nprint(box+len(l))", "#!/usr/bin/env python\r\nimport sys\r\n\r\nboxes_number = int(sys.stdin.readline().rstrip())\r\nboxes_sizes = list(map(int, sys.stdin.readlines()))\r\n\r\nboxes_sizes.sort()\r\n\r\nlower_bound, upper_bound = 0, boxes_number // 2 + 1\r\n\r\nwhile lower_bound + 1 < upper_bound:\r\n  middle = (lower_bound + upper_bound) >> 1\r\n\r\n  possible = not middle or all(\r\n    2 * boxes_sizes[i] <= boxes_sizes[boxes_number - middle + i]\r\n    for i in range(middle)\r\n  )\r\n\r\n  if not possible:\r\n    upper_bound = middle\r\n  else:\r\n    lower_bound = middle\r\n\r\nprint(boxes_number - lower_bound)\r\n", "n=int(input())\r\nl=[]\r\nfor _ in range(n):\r\n    l.append(int(input()))\r\nl.sort()\r\nl.reverse()\r\ni=0\r\ncount=0\r\nwhile i<len(l):\r\n    s=l[i]\r\n    l1=l[i+1:len(l)]\r\n    if  len(l1)!=0 and s>=2*l1[len(l1)-1]:\r\n        for j in l1:\r\n            if s>=2*j:\r\n                l.remove(j)\r\n                break\r\n    count+=1\r\n    i+=1\r\nprint(count)\r\n", "def remove_values_from_list(the_list, val):\n   return [value for value in the_list if value != val]\nn=int(input())\nl=[]\nbox=0\nfor i in range(n):\n    a=int(input())\n    l.append(a) \nl.sort(reverse=True)\n\nfor i in range(n):\n    if(l[i]!=0):\n        for j in range(1,n):\n            if(l[j]!=0):\n                if(l[j]*2<=l[i]):\n                    box=box+1\n                    l[i]=0\n                    l[j]=0\n                    break   \n    \nl = remove_values_from_list(l, 0)       \nprint(box+len(l))", "def remove_values_from_list(the_list, val):\r\n   return [value for value in the_list if value != val]\r\nn=int(input())\r\nl=[]\r\nbox=0\r\nfor i in range(n):\r\n    a=int(input())\r\n    l.append(a) \r\nl.sort(reverse=True)\r\nfor i in range(n):\r\n    if(l[i]!=0):\r\n        for j in range(1,n):\r\n            if(l[j]!=0):\r\n                if(l[j]*2<=l[i]):\r\n                    box=box+1\r\n                    l[i]=0\r\n                    l[j]=0\r\n                    break   \r\nl = remove_values_from_list(l, 0)       \r\nprint(box+len(l))", "from collections import defaultdict\r\nn=int(input())\r\nl=[]\r\nfor i in range(n):\r\n    l.append([int(input()),0])\r\nl.sort(key=lambda x:x[0],reverse=True)\r\nans=0\r\ny=0\r\nfor i in range(n):\r\n    if l[i][1]==1:\r\n        continue\r\n    for j in range(max(y,i+1),n):\r\n        if l[j][1]==0 and 2*l[j][0]<=l[i][0]:\r\n            l[j][1]=1\r\n            l[i][1]=1\r\n            ans+=1\r\n            break\r\n        y=j\r\nfor i in range(n):\r\n    if l[i][1]==0:\r\n        ans+=1\r\nprint(ans)\r\n#print(l)\r\n\r\n", "# n=int(input())\n# lst=[]\n# for i in range(n):\n#     lst.append(int(input()))\n# lst.sort()\n# l=0\n# r=1\n# count=0\n# while r<len(lst):\n#     if lst[l]*2<=lst[r]:\n#         count+=1\n#         l+=1\n#         r+=1\n#     else:\n#         r+=1\n# print(len(lst)-count)\n\n# cook your dish here\nn = int(input())\nlst = []\nfor i in range(n):\n    lst.append(int(input()))\nlst.sort()\nmini = abs(-n//2)\nf_l,s_l = lst[:mini],lst[mini:]\n\nans = 0\nj = 0\ni = 0\nextra=0\nwhile(i<len(f_l) and j<len(s_l)):\n    if(f_l[i]*2<=s_l[j]):\n        ans+=1\n        i+=1\n        j+=1\n    else:\n        extra+=1\n        j+=1\n# print(ans)\nans+=len(s_l)-j + len(f_l)-i + extra\n# print(i,j,ans)\nprint(ans)", "n=int(input())\r\nlis=[]\r\nfor _ in range (n):\r\n    size=int(input())\r\n    lis.append(size)\r\nlis.sort()\r\nlis.reverse()\r\nj=1\r\nval=[True for _ in range (n)]\r\ni=0\r\ncnt=n\r\nif (n==1):\r\n    print(1)\r\nelif (lis[0]==lis[n-1]):\r\n    print(n)\r\nelse:\r\n    while (i<n and j<n):\r\n        if (val[i]!=True):\r\n            i+=1\r\n            continue\r\n        if (val[j]!=True):\r\n            j+=1\r\n            continue\r\n        if (lis[j]*2<=lis[i]):\r\n            val[i]=False\r\n            val[j]=False\r\n            i+=1\r\n            j+=1\r\n            cnt-=1\r\n        else:\r\n            j+=1\r\n    print(cnt)"]