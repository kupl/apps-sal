["from math import *\r\nfrom collections import *\r\nimport sys\r\ninput=sys.stdin.readline\r\nt=int(input())\r\nwhile(t):\r\n    t-=1\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    p,q=map(int,input().split())\r\n    s=0\r\n    a.sort()\r\n    for i in range(n//2):\r\n        x=a[i]\r\n        x1=a[n-i-1]\r\n        if(x==p or x1==p):\r\n            s1=abs(x-x1)\r\n            s2=q\r\n            s+=abs(atan2(s1,s2))\r\n        elif(x<p and x1>p):\r\n            s1=abs(p-x)\r\n            ex=atan2(s1,q)\r\n            s1=abs(p-x1)\r\n            ex1=atan2(s1,q)\r\n            ex+=ex1\r\n            s+=abs(ex)\r\n        else:\r\n            if(p<x):\r\n                s1=abs(p-x)\r\n                ex=atan2(s1,q)\r\n                s1=abs(p-x1)\r\n                ex1=atan2(s1,q)\r\n                ex=ex1-ex\r\n                s+=abs(ex)\r\n            else:\r\n                s1=abs(p-x)\r\n                ex=atan2(s1,q)\r\n                s1=abs(p-x1)\r\n                ex1=atan2(s1,q)\r\n                ex=ex-ex1\r\n                s+=abs(ex)    \r\n    print(s)\r\n", "from math import *\r\nfrom collections import *\r\nimport sys\r\ninput=sys.stdin.readline\r\nt=int(input())\r\nwhile(t):\r\n    t-=1\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    p,q=map(int,input().split())\r\n    s=0\r\n    a.sort()\r\n    for i in range(n//2):\r\n        x=a[i]\r\n        x1=a[n-i-1]\r\n        if(x==p or x1==p):\r\n            s1=abs(x-x1)\r\n            s2=q\r\n            s+=abs(atan2(s1,s2))\r\n        elif(x<p and x1>p):\r\n            s1=abs(p-x)\r\n            ex=atan2(s1,q)\r\n            s1=abs(p-x1)\r\n            ex1=atan2(s1,q)\r\n            ex+=ex1\r\n            s+=abs(ex)\r\n        else:\r\n            if(p<x):\r\n                s1=abs(p-x)\r\n                ex=atan2(s1,q)\r\n                s1=abs(p-x1)\r\n                ex1=atan2(s1,q)\r\n                ex=ex1-ex\r\n                s+=abs(ex)\r\n            else:\r\n                s1=abs(p-x)\r\n                ex=atan2(s1,q)\r\n                s1=abs(p-x1)\r\n                ex1=atan2(s1,q)\r\n                ex=ex-ex1\r\n                s+=abs(ex)    \r\n    print(s)\r\n", "# f = open(\"file.txt\", 'r+')\n# inp = f.readline\ninp = input\nimport math\n\n\nfor _ in range( int(input()) ):\n    \n    n = int(input())\n    arr = list(map(int , input().split()))\n    p,q = map(int , input().split())\n    \n    ans = 0\n    arr.sort()\n    \n    for i in range(n//2):\n        \n    \n        mn , mx = arr[i] , arr[n-i-1]\n    \n        if(mx == p) or (mn == p):\n    #         print(\"Case 1\")\n            adj = q\n            opp = mx-mn\n            val = math.atan2(opp, adj)\n        elif(mn < p) and (mx > p):\n    #         print(\"Case 2\")\n            adj = q\n            opp = p - mn\n            valA = math.atan2(opp, adj)\n    \n            opp = mx - p\n            valB = math.atan2(opp, adj)\n    \n            val = valA + valB\n        else:\n    #         print(\"Case 3\")\n            if(p < mn):    \n                adj = abs(mx - p)\n                opp = q\n                valA = math.atan2(opp, adj)\n                \n                adj = abs(mn - p)\n                valB = math.atan2(opp, adj)\n                \n                val = valA - valB\n            else:\n                adj = abs(p - mn)\n                opp = q\n                valA = math.atan2(opp, adj)\n                \n                adj = abs(p-mx)\n                valB = math.atan2(opp, adj)\n                \n                val = valA - valB\n        val = abs(val)\n        \n        ans += val\n#     val = print('%.2f'%val)\n    print('%.12f'%ans)\n    ", "import math\r\ndef ar(a,b,c):\r\n    s=(a+b+c)/2\r\n    return math.sqrt((s*(s-a)*(s-b)*(s-c)))\r\ndef dist(x1,y1,x2,y2):\r\n\treturn math.sqrt((y2-y1)**2 + (x2-x1)**2)\r\ndef return_angle(a,b,c):\r\n\treturn math.acos((a**2+b**2-c**2)/(2*a*b))\r\nfrom math import asin\r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    it=list(map(int,input().split()))\r\n    x,y=map(int,input().split())\r\n    it.sort()\r\n    tot=0\r\n    vis=[0]*n\r\n    pp=[]\r\n    for i in range(n):\r\n        for j in range(i+1,n):\r\n            a=it[i]\r\n            b=it[j]\r\n            d=abs(a-b)\r\n            d1=dist(a,0,x,y)\r\n            d2=dist(b,0,x,y)\r\n            ans=return_angle(d1,d2,d)\r\n          #  r=(d1*d2*d)/(4*ar(d1,d2,d))\r\n         #   ans=asin(d/(2*r))\r\n            ans=abs(ans)\r\n            pp.append([ans,i,j])\r\n    pp.sort(reverse=True)\r\n    for i in pp:\r\n        if vis[i[1]] or vis[i[2]]:\r\n            continue\r\n        tot+=i[0]\r\n        vis[i[2]]=1\r\n        vis[i[1]]=1\r\n    print(tot)\r\n", "import math\r\n\r\ndef calLen(cam1, cam2, bird):\r\n    a = math.sqrt((cam1[0]-bird[0])**2 + (cam1[1]-bird[1])**2)\r\n    b = math.sqrt((cam2[0]-bird[0])**2 + (cam2[1]-bird[1])**2)\r\n    c = math.sqrt((cam1[0]-cam2[0])**2 + (cam1[1]-cam2[1])**2)\r\n\r\n    return a,b,c\r\n\r\nfor h in range(int(input())):\r\n    n = int(input())\r\n    cams = list(map(lambda x: [int(x), 0], input().strip().split()))\r\n    bird = list(map(int, input().strip().split()))\r\n    cams.sort(key = lambda x:x[0])\r\n\r\n    ans = 0\r\n    for i in range(n//2):\r\n        cam1 = cams[i]\r\n        cam2 = cams[n-1-i]\r\n\r\n        a, b, c = calLen(cam1, cam2, bird)\r\n        ans += math.acos((a**2 + b**2 - c**2)/(2*a*b))\r\n    print(ans)", "import math\r\n\r\ndef calLen(cam1, cam2, bird):\r\n    a = math.sqrt((cam1[0]-bird[0])**2 + (cam1[1]-bird[1])**2)\r\n    b = math.sqrt((cam2[0]-bird[0])**2 + (cam2[1]-bird[1])**2)\r\n    c = math.sqrt((cam1[0]-cam2[0])**2 + (cam1[1]-cam2[1])**2)\r\n\r\n    return a,b,c\r\n\r\ndef calculateAngle(a,b,c):\r\n    return math.acos((a**2 + b**2 - c**2)/(2*a*b))\r\n\r\n# def best_angle()\r\n\r\n# def brute(n,cams,bird):\r\n    # angles = []\r\n    # for i in range(n):\r\n    #     temp = [0]*n\r\n    #     angles.append(temp)\r\n    #     for j in range(i+1,n):\r\n    #         a,b,c = calLen(cams[i],cams[j],bird)\r\n    #         angles[i][j] = (calculateAngle(a,b,c))\r\n    # print(angles)        \r\n    # ans = 0\r\n    # for i in range(n):\r\n        \r\n    #     while \r\n\r\ndef angle2(cam1, cam2, bird):\r\n    a, b, c = calLen(cam1, cam2, bird)\r\n    return math.acos((a**2 + b**2 - c**2)/(2*a*b))\r\n\r\ndef backtrack(s, vertices, order):\r\n    global res\r\n\r\n    flag9 = 0\r\n    for a in range(0, len(vertices)):\r\n        if vertices[a] != 0:\r\n            flag9 = 1\r\n            break\r\n    if flag9==0:\r\n        # if s > res:\r\n\r\n        # print(order)\r\n        res = max(s, res)\r\n        return\r\n    for a in range(0, len(vertices)):\r\n        for b in range(0, len(vertices)):\r\n            if vertices[a] and vertices[b]:\r\n                n1 = vertices[a]\r\n                n2 = vertices[b]\r\n                vertices[a] = 0\r\n                vertices[b] = 0\r\n                backtrack(s + angle2(n1, n2, bird), vertices,order + [vertices[a],vertices[b]] )\r\n                vertices[a] = n1\r\n                vertices[b] = n2\r\n\r\nfrom random import randint\r\n\r\nfor h in range(int(input())):\r\n    n = int(input())\r\n    cams = list(map(lambda x: (int(x), 0), input().strip().split())) \r\n    # cams = [(randint(1,33),0) for a in range(0, n)]\r\n    cams1 = [i for i in cams]\r\n    # print(cams,cams1)\r\n    bird = list(map(int, input().strip().split()))\r\n    # bird = [randint(0,33),randint(1,33)]\r\n\r\n    # brute(n,cams,bird)\r\n\r\n    ans = 0\r\n    i = 0\r\n    i2 = [0,0]\r\n    i4 = [0,0]\r\n\r\n    while set(cams1) != {0}:\r\n\r\n        # print(set(cams1) )\r\n        i = 0\r\n        # i2 = [0,0]\r\n        for a in range(0, len(cams1)):\r\n            for b in range(a+1, len(cams1)):\r\n                if cams1[a] and cams1[b]:\r\n                    if abs( cams1[a][0] - cams1[b][0]) >= i:\r\n                        i = abs( cams1[a][0] - cams1[b][0])\r\n                        i2 = [cams1[a], cams1[b ]]\r\n                        i4=[a, b]\r\n                        # print(i2)\r\n        ans += angle2(i2[0],i2[1], bird)\r\n        cams1[i4[0]] = 0\r\n        cams1[i4[1 ]] = 0\r\n    print(ans)\r\n\r\n    res = 0\r\n    # backtrack(0,cams,[])\r\n    # print(res)\r\n\r\n\r\n", "import math\nfor _ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar.sort()\n    ans = 0\n    p, q = map(int, input().split())\n    for i in range(n//2):\n        a = ar[i]\n        b = ar[-(i+1)]\n        t1 = math.atan((p-a)/q)\n        t2 = math.atan((b-p)/q)\n        ans += (t1+t2)\n    print(ans)", "import math\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    ar = list(map(int, input().split()))\r\n    ar.sort()\r\n    ans = 0\r\n    p, q = map(int, input().split())\r\n    for i in range(n//2):\r\n        a = ar[i]\r\n        b = ar[-(i+1)]\r\n        t1 = math.atan((p-a)/q)\r\n        t2 = math.atan((b-p)/q)\r\n        ans += (t1+t2)\r\n    print(ans)\r\n", "t=int(input())\r\nimport math\r\nfor i in range(t):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    l.sort()\r\n    p,q=map(int,input().split())\r\n    i=0\r\n    j=-1\r\n    c=0\r\n    while True:\r\n        if l[i]>l[j]:\r\n            break\r\n        a=math.sqrt((p-l[i])**2+q**2)\r\n        b=abs(l[i]-l[j])\r\n        d=math.sqrt((p-l[j])**2+q**2)\r\n        e=a**2+d**2-b**2\r\n        e/=2*a*d\r\n        e=math.acos(e)\r\n        round(e,6)\r\n        c+=e\r\n        \r\n        i+=1\r\n        j-=1\r\n    round(c,6)\r\n    print(c)\r\n        \r\n    \r\n", "from math import *\r\nt = int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    l = list(map(int,input().split()))\r\n    l.sort()\r\n    x,y = map(int,input().split())\r\n    ans = 0\r\n    for i in range(n//2):\r\n        a = l[i]\r\n        b = l[i+n//2]\r\n        theta1 = (b-x)/y\r\n        theta2 = (a-x)/y\r\n        theta1 = atan(theta1)\r\n        theta2 = atan(theta2)\r\n        ans += (theta1-theta2)\r\n    print(abs(ans))  \r\n            \r\n", "from math import *\r\nt = int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    l = list(map(int,input().split()))\r\n    l.sort()\r\n    x,y = map(int,input().split())\r\n    ans = 0\r\n    for i in range(n//2):\r\n        a = l[i]\r\n        b = l[n-i-1]\r\n        theta1 = (b-x)/y\r\n        theta2 = (a-x)/y\r\n        theta1 = atan(theta1)\r\n        theta2 = atan(theta2)\r\n        ans += (theta1-theta2)\r\n    print(abs(ans))  \r\n            \r\n", "from math import atan\r\nt = int(input())\r\ndef f(a,b,x,y):\r\n    m = (b-x)/y\r\n    n = (a-x)/y\r\n    return atan(m)-atan(n);\r\nfor i in range(t):\r\n    n = int(input())\r\n    a = list(map(int,input().split()))\r\n    a.sort()\r\n    p,q = map(int,input().split())\r\n    k = n//2\r\n    s = 0\r\n    for j in range(k):\r\n        s = s+f(a[j],a[n-1-j],p,q)\r\n    if s<0:\r\n        s = -s\r\n    print(s)\r\n", "from math import *\r\n\r\n\r\nfor t in range(int(input())):\r\n\tn = int(input())\r\n\tarr = list(map(int, input().split()))\r\n\tl = list(map(int, input().split()))\r\n\tarr.sort()\r\n\tx = l[0]\r\n\ty = l[1]\r\n\tans = 0\r\n\tfor i in range(int(n/2)):\r\n\t\tx1 = arr[i]\r\n\t\tx2 = arr[n-i-1]\r\n\t\tif x1 < x and x2 <= x:\r\n\t\t\tangle = atan((x-x1)/y) - atan((x-x2)/y)\r\n\t\telif x1 < x and x2 > x:\r\n\t\t\tangle = atan((x-x1)/y) + atan((x2-x)/y)\r\n\t\telse:\r\n\t\t\tangle = atan((x2-x)/y) - atan((x1-x)/y)\r\n\t\tans += angle\r\n\tprint(ans)\r\n", "from math import atan\r\ndef f(a,b,x,y):\r\n    m=(a-x)/y\r\n    n=(b-x)/y\r\n    return atan(m)-atan(n)\r\nfor i in range(int(input())):\r\n    c=int(input())\r\n    b=list(map(int,input().split()))\r\n    b.sort()\r\n    x,y=map(int,input().split())\r\n    s=0\r\n    k=c//2\r\n    for i in range(k):\r\n        s += f(b[i],b[c-1-i],x,y)\r\n    if s < 0:\r\n        s = -s\r\n    print(s)", "import math\r\nT=int(input())\r\nfor i in range(T):\r\n  n=int(input())\r\n  A=[int(k) for k in input().split()]\r\n  A.sort()\r\n  P,Q=[int(j) for j in input().split()]\r\n  def angle(x1,x2,x,y):\r\n    y=math.atan((x2-x)/y) + math.atan((x-x1)/y)\r\n    return y\r\n  c=0\r\n  for i in range(n//2):\r\n    c=c+angle(A[i],A[n-i-1],P,Q)\r\n\r\n  print(c) \r\n\r\n\r\n", "import math\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    arr=list(map(int,input().split()))\r\n    p,q=map(int,input().split())\r\n    k=[]\r\n    for i in range(n):\r\n        if p==arr[i]:\r\n            k.append(0)\r\n        else:\r\n            k.append(math.atan((p-arr[i])/q))\r\n    k=sorted(k)        \r\n    print(round(abs(sum(k[:n//2])-sum(k[n//2:])),12))\r\n", "import math\nfor i in range(int(input())):\n\tn=int(input())\n\ttmp=input().split()\n\tarr=[]\n\tfor j in tmp:\n\t\tarr.append(int(j))\n\ttmp=input().split()\n\tx=int(tmp[0])\n\ty=int(tmp[1])\n\ts=0\n\tarr.sort()\n\tfor j in range(int(n/2)):\n\t\td1=(arr[j]-x)**2+y**2\n\t\td2=(arr[n-j-1]-x)**2+y**2\n\t\td3=(arr[n-1-j]-arr[j])**2\n\t\ts+=math.acos((d1+d2-d3)/(2*math.sqrt(d1)*math.sqrt(d2)))\n\tprint('{0:0.12}'.format(s))", "import math\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    cameras = list(map(int,input().split()))\r\n    p,q = map(int,input().split())\r\n    cameras.sort()\r\n    sumA = 0\r\n    # radians  c**2 = a**2 + b**2 -2ac(Cos(degree))\r\n    for i in range(n//2):\r\n        p1 = cameras[i]\r\n        p2 = cameras[n-1-i]\r\n        p12 = p2-p1\r\n        # print(p1,p2)\r\n        sideA = math.sqrt((p-p1)**2 + q**2)\r\n        sideB = math.sqrt((p-p2)**2 + q**2)\r\n        # print('sideA:',sideA,'sideB:',sideB)\r\n        radians = math.acos(((p12**2)-sideA**2 - sideB**2 )/(-2*sideA*sideB))\r\n        sumA +=radians\r\n\r\n    print(sumA)", "from math import *\r\n\r\nt=int(input())\r\nfor i in range(t):\r\n\tn=int(input())\r\n\tx=[float(y) for y in input().split()]\r\n\tx.sort()\r\n\tp,q=input().split()\r\n\tp=float(p)\r\n\tq=float(q)\r\n\tma=0.0\r\n\tfor ind in range(n//2):\r\n\t\ti=x[ind]\r\n\t\tj=x[n-ind-1]\t\r\n\t\tt1=t2=pi/2\r\n\t\tif (i!=p):\r\n\t\t\tt1=atan(q/abs(i-p))\r\n\t\tif (i>p):\r\n\t\t\tt1=pi-t1\r\n\t\tif (j!=p):\r\n\t\t\tt2=atan(q/abs(j-p))\r\n\t\tif (j<p):\r\n\t\t\tt2=pi-t2\r\n\t\tma+=(pi-t1-t2)\r\n\tprint(ma)\r\n", "import math\r\nfor _ in range(int(input())):\r\n\tn = int(input())\r\n\txs = list(map(int,input().split()))\r\n\tp,q = map(int,input().split())\r\n\tangles = sorted(math.atan((x-p)/q) for x in xs)\r\n\tprint(sum(angles[n//2:])-sum(angles[:n//2]))\r\n\r\n", "import math\r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    p,q=list(map(int,input().split()))\r\n    a=sorted(a)\r\n    b=[0]*len(a)\r\n    s=0\r\n    for i in range(len(a)):\r\n        b[i]=a[i]-p\r\n    for i in range(len(a)//2):\r\n        s=s-math.atan(b[i]/q)+math.atan(b[n-1-i]/q)\r\n    print(s)", "from math import atan\r\nt = int(input())\r\ndef f(a,b,x,y):\r\n    m = (b-x)/y\r\n    n = (a-x)/y\r\n    return atan(m)-atan(n);\r\nfor i in range(t):\r\n    n = int(input())\r\n    a = list(map(int,input().split()))\r\n    a.sort()\r\n    p,q = map(int,input().split())\r\n    k = n//2\r\n    s = 0\r\n    for j in range(k):\r\n        s = s+f(a[j],a[n-1-j],p,q)\r\n    if s<0:\r\n        s = -s\r\n    print(s)\r\n", "import math\r\n\r\ndef angle(x1, B, x2):\r\n    xb, yb = B\r\n    a = math.sqrt((xb-x1)**2+yb**2)\r\n    b = math.sqrt((xb-x2)**2+yb**2)\r\n    c = abs(x2-x1)\r\n    return math.acos((a**2+b**2-c**2)/(2*a*b))\r\n\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    X = [int(x) for x in input().split()]\r\n    B = [int(x) for x in input().split()]\r\n    X.sort()\r\n    l, r = 0, len(X)-1\r\n    ang = 0\r\n    while l<r:\r\n        ang += angle(X[l], B, X[r])\r\n        l += 1\r\n        r -= 1\r\n    print(ang)", "from math import acos,sqrt\r\nt=int(input())\r\n\r\n\r\ndef distance(x,y,p,q):\r\n    a=abs(x-y)\r\n    b=sqrt((p-x)**2+q**2)\r\n    c=sqrt((p-y)**2+q**2)\r\n    angle = acos((c ** 2 + b ** 2 - a ** 2) / (2 * b * c))\r\n    return angle\r\n\r\n\r\ndef main():\r\n    for _ in range(t):\r\n        n=int(input())\r\n        c=[int(x) for x in input().split()]\r\n        p,q=map(int,input().split())\r\n        c.sort()\r\n        l=0\r\n        h=n-1\r\n        sum1=0\r\n        while l<h:\r\n            angle=distance(c[l],c[h],p,q)\r\n            sum1+=angle\r\n            l+=1\r\n            h-=1\r\n        print(sum1)\r\n\r\n\r\ndef __starting_point():\r\n    main()\n__starting_point()"]