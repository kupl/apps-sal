["# cook your dish here\ndef __starting_point():\n try:\n  for _ in range (int(input())):\n   element = int(input())\n   l = list(map(int,input().split()))\n   a=min(l)\n   l.remove(a)\n   b=min(l)\n   print(a+b)\n except EOFError :\n  print('EOFError')\n\n__starting_point()", "for _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n l.sort()\n print(l[0]+l[1])\n  \n  \n\n", "# cook your dish here\nt = int(input())\nfor i in range(t):\n n = int(input())\n l = list(map(int,input().split()))\n l.sort()\n print(l[0] + l[1])\n", "# cook your dish here\ntry:\n for t in range(int(input())):\n  n = int(input())\n  a = list(map(int, input().split(' ')))\n  s = min(a)\n  a.remove(s)\n  ss = min(a)\n  print(s + ss)\nexcept:\n pass", "# cook your dish here\ntry:\n for t in range(int(input())):\n  n = int(input())\n  a = list(map(int, input().split(' ')))\n  small = min(a)\n  a.remove(small)\n  small1 = min(a)\n  print(small + small1)\nexcept: pass", "# cook your dish here\nn = int(input())\nfor i in range(n):\n num = int(input())\n lis = list(map(int,input().split()))\n mini = min(lis)\n lis.remove(mini)\n mini2 = min(lis)\n print(mini + mini2)", "# cook your dish here\ntry:    \n for i in range(int(input())):\n  val = int(input())\n  arr=list(map(int,input().split()))\n  arr.sort()\n  print(arr[0]+arr[1])\nexcept:\n pass", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n s=list(map(int,input().split()))\n k=0\n for i in range(2):\n  k+=min(s)\n  s.remove(min(s))\n print(k) ", "for _ in range(int(input())):\n n=int(input())\n s=list(map(int,input().split()))\n k=0\n for i in range(2):\n  k+=min(s)\n  s.remove(min(s))\n print(k) \n  \n", "# https://www.codechef.com/problems/SMPAIR\n\nT = int(input())\n\nfor t in range(T):\n N = int(input())\n A = [int(x) for x in input().split()]\n m = A[0] + A[1]\n for i in range(N):\n  for j in range(i + 1, N):\n   cur = A[i] + A[j]\n   if cur < m:\n    m = cur\n print(m)\n", "for _ in range(int(input())):\n n = int(input())\n l = [int(n) for n in input().split()]\n a = min(l)\n l.remove(a)\n b = min(l)\n print(a+b)", "for i in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))[:n]\n a.sort()\n print(a[0]+a[1])", "for i in range(int(input())):\n n=int(input())\n lis=list(map(int,input().split()))\n lis.sort()\n print(lis[0]+lis[1])\n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n l.sort()\n print(l[0]+l[1])", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n l.sort()\n print(l[0]+l[1])\n", "n=int(input())\nfor i in range(n):\n t = int(input())\n l=list(map(int,input().split()))\n l.sort()\n print(l[0]+l[1])", "# cook your dish here\nfor t in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n print(a[0]+a[1])", "for t in range (int(input())):\n n= int(input())\n a=list(map(int,input().split()))\n a.sort()\n print(a[0]+a[1])\n \n", "for t in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n print(a[0]+a[1])", "def smallest(lst, n):\n if n == 2:\n  print(lst[0] + lst[1])\n\n else:\n  reslst = []\n  mini = lst[0] + lst[1]\n  for j in lst:\n   for k in lst:\n    if lst.index(j) == lst.index(k):\n     continue\n    s = j + k\n    reslst.append(s)\n\n  print(min(reslst))\n\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n = int(input())\n  arr = [int(i) for i in input().split()]\n  smallest(arr, n)\n__starting_point()", "def smallest(lst, n):\n if n == 2:\n  print(lst[0] + lst[1])\n\n else:\n  mini = lst[0] + lst[1]\n  for j in range(1, n):\n   for k in range(j+1, n):\n    s = lst[j] + lst[k]\n    if s < mini:\n     mini = s\n\n  print(mini)\n\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n = int(input())\n  arr = [int(i) for i in input().split()]\n  smallest(arr, n)\n\n__starting_point()", "def smallest(lst, n):\n if n == 2:\n  print(lst[0] + lst[1])\n  \n elif 2 < n <= 10:\n  mini = lst[0] + lst[1]\n  for j in range(2, n):\n   suM = lst[j-1] + lst[j]\n   if suM < mini:\n    mini = suM\n  print(mini)\n\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n = int(input())\n  arr = [int(i) for i in input().split()]\n  smallest(arr, n)\n\n__starting_point()", "def smallest(lst, n):\n if n == 2:\n  mini = lst[0] + lst[1]\n else:\n  mini = lst[0] + lst[1]\n  for j in range(2, n):\n   suM = lst[j-1] + lst[j]\n   if suM < mini:\n    mini = suM\n print(mini)\n\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n = int(input())\n  arr = [int(i) for i in input().split()]\n  smallest(arr, n)\n\n__starting_point()"]