["class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        if not A:\n            return 0\n        nums = sorted([num + K for num in set(A)], reverse=True)\n        max_num = nums[0]\n        min_num = nums[-1]\n        changed_max = max_num - 2 * K\n        res = max_num - min_num\n        for i in range(len(nums) - 1):\n            changed = nums[i] - 2 * K\n            max_num = max(nums[i + 1], changed, changed_max)\n            min_num = min(min_num, changed)\n            res = min(res, max_num - min_num)\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        \n        minA = A[0]\n        maxA = A[-1]\n        \n        smallest = maxA - minA\n        \n        for i in range(len(A) - 1):\n            a = A[i]\n            b = A[i+1]\n            \n            smallest = min(smallest, max(maxA-K, a+K) - min(minA+K, b-K))\n        \n\n        \n        return smallest", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n\n        mi, ma = A[0], A[-1]\n        ans = ma-mi\n\n        for i in range(len(A)-1):\n            a, b = A[i], A[i+1]\n            ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n\n        return ans        ", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:    \n        A.sort()\n        diff = A[-1] - A[0]\n        for i in range(len(A) - 1):\n            lower = min(A[0] + 2 * K, A[i + 1])\n            upper = max(A[-1], A[i] + 2 * K)\n            diff = min(diff, abs(upper - lower))\n        return diff\n\n            \n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        if K == 0: return max(A)-min(A)\n        if len(A) == 1: return 0\n        if max(A) - min(A) <= K: \n            return max(A) - min(A)\n        else:\n            A = sorted(A)\n\n            dp = [A[-1] - A[0]]\n    #         A = sorted(A)\n            n1, n2 = A[-1] - K, A[0] + K\n            for i in range(len(A)-1):\n                dp += [max(A[i]+K, A[-1]-K) - min(A[0]+K, A[i+1]-K)]\n            return min(dp)", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        if len(A) == 1: return 0\n        A.sort()\n        i = 0\n        j = len(A) - 1\n        min_diff = A[-1] - A[0]\n        bottom = A[0]\n        peak = A[-1]\n        for idx in range(len(A) - 1):\n            current, _next = A[idx], A[idx + 1]\n            bottom = min(A[0] + K, _next - K)\n            peak = max(A[-1] - K, current + K)\n            min_diff = min(min_diff, peak - bottom)\n        return min_diff", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        res = A[-1] - A[0]\n        for i in range(len(A)-1):\n            res = min(res, max(A[i]+K, A[-1] - K) - min(A[0] + K, A[i+1] - K))\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        mini = A[0]\n        maks = A[-1]\n        res = maks - mini\n        for i in range(len(A)-1):\n            res = min(res, max(maks-K, A[i]+K) - min(mini+K, A[i+1]-K))   \n        return res\n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        if not A:\n            return 0\n        A.sort()\n        x = A[0]\n        y = A[-1]\n        res = y - x\n        for i in range(len(A)):\n            A[i] += 2 * K\n            x = min(A[0], A[(i+1)%len(A)])\n            y = max(A[i], y)\n            res = min(res, y - x)\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        if len(A) == 1:return 0\n        res = A[-1] - A[0]\n        for i in range(len(A)-1):\n            this_max = max(A[i]+K, A[-1]-K)\n            this_min = min(A[0]+K, A[i+1]-K)\n            res = min(res, this_max - this_min)\n        return res\n            \n                \n                \n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        minn,maxx = A[0],A[-1]\n        ans = maxx - minn\n        for i in range(len(A)-1):\n            a,b = A[i], A[i+1]\n            ans = min(ans, max(maxx-K,a+K) - min(minn+K,b-K))\n        return ans", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        res = A[-1] - A[0]\n        for i in range(len(A)-1):\n            big = max(A[-1], A[i]+2*K)\n            small = min(A[0]+2*K, A[i+1])\n            res = min(res, big - small)\n        return res", "# [1, 3, 6]\n\n\n\nclass Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        arr_min, arr_max = A[0], A[-1]\n        ans = arr_max - arr_min\n        for i in range(len(A) - 1):\n            a, b = A[i], A[i + 1]\n            ans = min(ans, max(arr_max - K, a + K) - min(arr_min + K, b - K))\n        return ans", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        if A[-1]-A[0]<=K: \n            return A[-1]-A[0]\n        else:\n            res = A[-1]-A[0]\n            for i in range(len(A)-1):\n                res = min(res, max(A[-1]-K, A[i]+K)-min(A[0]+K, A[i+1]-K))\n                \n            return res\n", "class Solution:\n    def smallestRangeII(self, A: List[int], k: int) -> int:\n        A.sort()\n        n=len(A)\n        res=A[n-1]-A[0]\n        for i in range(n-1):\n            mn=min(A[i+1]-k,A[0]+k)\n            mx=max(A[i]+k,A[n-1]-k)\n            res=min(res,mx-mn)\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        res = A[-1] - A[0]\n        for i in range(len(A) - 1):\n            big = max(A[-1], A[i] + 2 * K)\n            small = min(A[i + 1], A[0] + 2 * K)\n            res = min(res, big - small)\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        v_min, v_max = A[0], A[-1]\n        res = v_max - v_min\n        for i in range(len(A)-1):\n            res = min(res, max(v_max-K, A[i]+K) - min(v_min+K, A[i+1]-K))\n        return res", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        mi, ma = A[0], A[-1]\n        ans = ma - mi\n        for i in range(len(A) - 1):\n            a, b = A[i], A[i+1]\n            ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n        return ans\n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        if K == 0: return max(A)-min(A)\n        if len(A) == 1: return 0\n        if max(A) - min(A) <= K: \n            return max(A) - min(A)\n        else:\n            A = sorted(A)\n\n            dp = [A[-1] - A[0]]\n            n1, n2 = A[-1] - K, A[0] + K\n            for i in range(len(A)-1):\n                dp += [max(A[i]+K, n1) - min(n2, A[i+1]-K)]\n            return min(dp)", "\n\nclass Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        \n        A.sort()\n        \n        min_diff=A[-1]-A[0]\n        \n        for i in range(len(A)-1):\n            v_min=min(A[0]+K,A[i+1]-K)\n            v_max=max(A[i]+K,A[-1]-K)\n            \n            min_diff=min(min_diff,v_max-v_min)\n            \n            \n        return min_diff", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        mi, ma = A[0], A[-1]\n        # Note: using K will only possibly reduce the current difference\n        ans = ma - mi # the modified result will not be greater than the current worsest case (max(A)-min(A))\n        for i in range(len(A) - 1):\n            a, b = A[i], A[i+1]\n            ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n        return ans", "class Solution:\n    \n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        \n        A.sort()\n        \n        mi, ma = A[0], A[-1]\n        ans = ma - mi\n        \n        for i in range(len(A) - 1):\n            a, b = A[i], A[i+1]\n            ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n            \n        return ans", "class Solution:\n    def smallestRangeII(self, arr: List[int], k: int) -> int:\n        arr.sort()\n        best = arr[-1] - arr[0]\n        for i in range(1, len(arr)):\n            current_max = max(arr[-1] - k, arr[i - 1] + k)\n            current_min = min(arr[0] + k, arr[i] - k)\n            best = min(best, current_max - current_min)\n        return best", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        mi,ma=A[0],A[-1]\n        ans=ma-mi\n        for i in range(len(A)-1):\n            a,b=A[i],A[i+1]\n            ans=min(ans,max(ma-K,a+K)-min(mi+K,b-K))\n        return ans\n        # A.sort()\n        # mi, ma = A[0], A[-1]\n        # ans = ma - mi\n        # for i in range(len(A) - 1):\n        #     a, b = A[i], A[i+1]\n        #     ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n        # return ans\n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        # A.sort()\n        # ma,mi=A[0],A[-1]\n        # ans=ma-mi\n        # for i in range(len(A)-1):\n        #     a,b=A[i],A[i+1]\n        #     ans=min(ans,max(ma-K,a+K)-min(mi+K,b-K))\n        # return ans\n        A.sort()\n        mi, ma = A[0], A[-1]\n        ans = ma - mi\n        for i in range(len(A) - 1):\n            a, b = A[i], A[i+1]\n            ans = min(ans, max(ma-K, a+K) - min(mi+K, b-K))\n        return ans\n", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        A.sort()\n        minV, maxV = A[0], A[-1]\n        res = maxV - minV\n        for i in range(len(A) - 1):\n            A[i] += 2 * K\n            maxV = max(maxV, A[i])\n            minV = min(A[0], A[i + 1])\n            res = min(res, maxV - minV)\n        return res", "class Solution:\n  def smallestRangeII(self, A: List[int], k: int) -> int:\n    A.sort()\n    \n    res, n = A[-1] - A[0], len(A)\n    temp = [max(A[n - 1] - k, A[n - i - 2] + k) - min(A[0] + k, A[n - i - 1] - k) for i in range(n)]\n    return min(res, min(temp))", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        \n        A.sort()\n        \n        min_diff=A[-1]-A[0]\n        \n        for i in range(len(A)-1):\n            #vs=[A[0]+K,A[i]+K,A[i+1]-K,A[-1]-K]\n            \n            v_min=min(A[0]+K,A[i+1]-K)\n            v_max=max(A[i]+K,A[-1]-K)\n            \n            min_diff=min(min_diff,max(v_min,v_max)-min(v_min,v_max))\n            \n            \n        return min_diff", "class Solution:\n    def smallestRangeII(self, A: List[int], K: int) -> int:\n        N = len(A)\n        if N == 1:\n            return 0\n        A.sort()\n        diff = A[-1]-A[0]\n        for i in range(N-1):\n            maxi = max(A[i]+K, A[N-1]-K)\n            mini = min(A[0]+K, A[i+1]-K)\n            diff = min(diff, maxi-mini)\n        return diff"]