["def Search(L,aa,x):\n    a=aa\n    b=len(L)\n    while(b-a>1):\n        i=(b+a)//2\n        if(L[i]>x):\n            b=i\n        elif(L[i]<x):\n            a=i\n        else:\n            return (i+1)-aa-1\n    return b-aa-1\n\nimport math\n\nn,d=list(map(int,input().split()))\n\nP=list(map(int,input().split()))\nans=0\nfor i in range(n):\n    x=Search(P,i,P[i]+d)\n    if(x>1):\n        ans+=((x)*(x-1))//2\nprint(ans)\n", "n, d = map(int, input().split())\nd += 1\nt = list(map(int, input().split())) + [1000000001 + d]\ns, j = 0, 2\nfor i in range(n - 2):\n    while t[j] - t[i] < d: j += 1\n    k = j - i - 1\n    if k > 1: s += k *(k - 1)\nprint(s // 2)", "n, d = map(int, input().split())\nx = list(map(int, input().split()))\nj, v = 0, 0\nfor i in range(n - 2):\n    while j < n - 1 and x[j + 1] - x[i] <= d:\n        j += 1\n    v += (j - i) * (j - i - 1) // 2\nprint(v)", "n, d = (int(x) for x in input().split())\nx = [int(x) for x in input().split()]\nl = 0\nr = 0\nans = 0\nwhile l < n:\n\twhile r < n and x[r] - x[l] <= d:\n\t\tr += 1\n\tans += (r - l - 1) * (r - l - 2) // 2\n\tl += 1\nprint(ans)\n", "def main():\n    from collections import Counter\n    n, d = list(map(int, input().split()))\n    l, cnt, j = list(map(int, input().split())), Counter(), 0\n    for i, hi in enumerate(l):\n        hi -= d\n        while l[j] < hi:\n            j += 1\n        cnt[i - j] += 1\n    print(sum(k * (k - 1) * v for k, v in list(cnt.items())) // 2)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque\nn,d=map(int,input().split())\ns=list(map(int,input().split()))\nt=0\ns1=deque()\ni=0\nwhile i<n:\n    if len(s1)==0:\n        s1.append(s[i])\n        i+=1\n    elif s[i]-s1[0]<=d:\n        s1.append(s[i])\n        i+=1\n    else:\n        m=len(s1)\n        t+=(m-1)*(m-2)//2\n        s1.popleft()\nm=len(s1)\nt+=m*(m-1)*(m-2)//6\nprint(t)", "from collections import deque\ndef cxx2(x):\n    #print(x)\n    if(x<=1):\n        return 0\n    elif(x==2):\n        return 1\n    else:\n        sans=1\n        for i in range(x-1,x+1):\n            sans*=i\n        sans//=2\n        return sans\ndef cxx3(x):\n    #print(x)\n    if(x<=2):\n        return 0\n    elif(x==3):\n        return 1\n    else:\n        sans2=1\n        for i in range(x-2,x+1):\n            sans2*=i\n        sans2//=6\n        return sans2\n#print(cxx3(4))\n'''for i in range(10):\n    print(cxx2(i))'''\ninp=input().split()\nn=int(inp[0])\nd=int(inp[1])\ninp=input().split()\na=deque()\nans=0\nfor i in range(n):\n    a.append(int(inp[i]))\n    if(len(a)!=0):\n        while(a[-1]-a[0]>d):\n            a.popleft()\n            #print(cxx2(len(a)-1))\n            ans+=cxx2(len(a)-1)\nwhile(len(a)!=0):\n    a.popleft()\n    ans+=cxx2(len(a))\n    #print(cxx2(len(a)))\nprint(ans)", "n,d=[int(i) for i in input().split()]\nq=list(map(int, input().split()))\ns=0\nif n<3:\n    print(0)\nelse:\n    t=3\n    for i in range(n-2):\n        for j in range(i+t-1,n):\n            if q[j]-q[i]>d:\n                j-=1\n                break\n        t=j-i\n        s+=t*(t-1)//2\n    print(s)\n", "n = input().split()\na = int(n[0])\nb = int(n[1])\nt = input().split()\nc = []\nu = 0\nif a <= 2:\n    print(0)\n    return\nc.append(int(t[0]))\nc.append(int(t[1]))\nfor i in range(2,a):\n    c.append(int(t[i]))\n    while c[-1] - c[0] > b:\n        del c[0]\n        k = len(c) - 1\n        u += k * (k - 1) / 2\nk = len(c)\nu += k * (k - 1) * (k - 2) / 6\nprint(int(u))\n", "[n,d]=[int(i) for i in input().split()];\nx=[int(i) for i in input().split()];\ns=0;\nif(n>2):\n    j=2;\n    for i in range(0,n-2):\n        while((j<n) and (x[j]-x[i]<=d)):\n            j=j+1\n        s=s+(j-i-1)*(j-i-2)//2;\n    print(s);\nelse:\n    print((0));\n", "from collections import deque\n\nn,m = [int(i) for i in input().split()]\nlist_inp = input().split()\n\nD = deque()\nways=0\nSum=0\n \nfor i in range(n-1):\n    while Sum+int(list_inp[i+1])-int(list_inp[i])>m and len(D)>0:\n        Sum -= D.popleft()\n\n    if Sum+int(list_inp[i+1])-int(list_inp[i]) <= m:\n        ways += int(len(D)*(len(D)+1)/2)\n        D.append(int(list_inp[i+1])-int(list_inp[i]))\n        Sum += D[-1]\n        \nprint (ways)\n    \n", "[n,d]=[int(i) for i in input().split()];\nx=[int(i) for i in input().split()];\ns=0;\nif(n>2):\n    j=2;\n    for i in range(0,n-2):\n        while((j<n) and (x[j]-x[i]<=d)):\n            j=j+1\n        s=s+(j-i-1)*(j-i-2)//2;\n    print(s);\nelse:\n    print((0));\n\n", "from collections import deque\nn,d = [int(i) for i in input().split()]\nalist = [int(i) for i in input().split()]\nde = deque()\ni = 0\nm = 0\nwhile i < n:\n    while i < n and (len(de) == 0 or alist[i] - de[0] <= d):\n        de.append(alist[i])\n        if len(de) >= 3:\n            m += (len(de)-1) *(len(de)-2) // 2\n        i += 1\n    de.popleft()\nprint (m)", "from collections import deque\nn,d=[int(i) for i in input().split()]\nx=[int(i) for i in input().split()]\nans=0\nD=deque()\nfor i in range(n):\n    D.append(x[i])\n    if D[-1]-D[0]<=d and len(D)>=3:\n        ans+=(len(D)-1)*(len(D)-2)//2\n    while D[-1]-D[0]>d:\n        D.popleft()\n        if D[-1]-D[0]<=d:\n            ans+=(len(D)-1)*(len(D)-2)//2\n    #print('i',i)\n    #print('D',D)\n    #print('ans',ans)\nprint(ans)\n", "def findIndex(x,L,R,T):\n    if x[R]<T:\n        return R\n    if x[L]>=T:\n        return L\n    while R-L>1:  \n        M=(R+L)//2\n        if x[M]>=T:\n            R=M\n        else:\n            L=M\n    return R\n        \n\nn,d=[int(i) for i in input().split()]\nx=[int(i) for i in input().split()]\nans=0\nfor R in range(2,n)[::-1]:\n    L=findIndex(x,0,R,x[R]-d)\n    ans+=(R-L)*(R-L-1)//2\nprint(ans)", "n,d = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\n\nfrom collections import deque\nD =deque()\ntotal = 0\ns = 0\n\nfor i in range(n-1):\n    while len(D)>0 and s+x[i+1]-x[i] > d:\n        s -= D.popleft()\n\n    if s + x[i+1] -x[i] <= d:\n        D.append(x[i+1]-x[i])\n        total += (len(D)*(len(D)-1))//2\n        s += D[-1]\n        \nprint(total)\n", "n,d = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\ntotal = 0\nposition = 2\n\nfor i in range(n-2):\n    l = x[i]\n    distance = 1\n    for j in range(position,n):\n        if x[j]-l > d:\n            distance = j-i-1\n            position = j\n            break\n    else:\n        distance = n-i-1\n        position = n\n    total += (distance*(distance-1))//2\n    \nprint(total)", "n,d=input().split(' ')\nn=int(n)\nd=int(d)\nqueue=[int(i) for i in input().split()]\nans=0\ndef find_max(begin,start,end):\n    while start < end:\n        mid=(start+end)//2\n        if queue[mid]-queue[begin]<=d:\n            start=mid+1\n        else:\n            end=mid\n    mid=(start+end)//2\n    if queue[mid]-queue[begin]>d:\n        mid-=1\n    return mid\nfor i in range(n-2):\n    if i==0:\n        j=find_max(i,i+2,n-1)\n    else:\n        j=find_max(i,j,n-1)\n    if j-i<2:\n        continue\n    else:\n        ans+=(j-i)*(j-i-1)//2\nprint(ans)", "\"\"\"\nProblem 2, Points on Line\nSizhang Zhao 1200011770\n\"\"\"\nfrom collections import deque\n\ndef number(D, d, length, tem):\n\tif tem < length:\n\t\tif tem == 0:\n\t\t\tstart = 1\n\t\t\tnum = 0\n\t\telse:\n\t\t\tstart = tem \n\t\t\tnum = tem - 1\n\t\tfor i in range(start, length):\n\t\t\tif D[i] - D[0] <= d:\n\t\t\t\tnum += 1\n\t\t\telse:\n\t\t\t\tbreak\n\telse:\n\t\tnum = tem - 1\n\tif num < 2:\n\t\treturn 0\n\telse:\n\t\treturn num \n\nn, d = [int(i) for i in input().split()]\nnumbers = [int(i) for i in input().split()]\nD = deque(numbers)\nleng = len(D)\ntimes = 0\ntem = 0\nwhile leng >= 3:\n\tleng = len(D)\n\ttem = number(D, d, leng, tem)\n\ttimes += tem * (tem - 1) / 2 \n\tD.popleft()\nprint(int(times))\n", "a,b=input().split()\nn=int(a)\nd=int(b)\n\n_point=[int(i) for i in input().split()]\n\nk=0\nS=0\nfor i in range(2,n):\n    while _point[i]-_point[k]>d:\n        k+=1\n    Nu=i-k\n    S+=Nu*(Nu-1)//2\nprint(S)\n", "from collections import deque\n\ndef comb(m):\n    if m<3:\n        return 0\n    else:\n        return int(m*(m-1)*(m-2)/6)\n\nn,d = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\ncnt = 0\nde = deque()\ntemp = 0\nfor i in range(n):\n    if i == 0:\n        de.append(x[i])\n    else:\n        if de[0]+d < x[i]:\n            cnt += comb(len(de))-comb(temp)\n            while  len(de) != 0 and de[0]+d < x[i]:\n                de.popleft()\n            temp = len(de)\n        de.append(x[i])\n    #print(de)\ncnt += comb(len(de))-comb(temp)\nprint(cnt)\n", "n,d=[int(i) for i in input().split()]\njj=[int(i) for i in input().split()]\nll=0\ns=0\nif n<=2:\n    print(0)\n    return\nfor i in range(n-1,1,-1):\n    if jj[i]-jj[s]<=d:\n        ll+=(i**2-1)*i/6\n        break\nfor j in range(i+1,n):\n    while jj[j]-jj[s]>d:\n        s+=1\n    ll+=(j-s)*(j-s-1)/2\nprint(int(ll))", "n,d=[int(i) for i in input().split()]\nx=[int(i) for i in input().split()]\n\nk=0\nS=0\n\nfor i in range(2,n):\n    while x[i]-x[k]>d:k=k+1\n    P=i-k\n    S+=P*(P-1)//2\n    \nprint(S)\n", "n,d = [int(i) for i in input().split()]\nxAxis = [int(i) for i in input().split()]\ncnt = 0\ntemp = []\ntemp.append(xAxis[0])\n\nfor i in range(len(temp),len(xAxis)):\n    temp.append(xAxis[i])\n    if temp[-1] - temp[0] > d:\n        cnt += (len(temp)-2) * (len(temp)-3) /2\n        del(temp[0])\n        while len(temp) > 1:\n            if temp[-1] - temp[0] > d:\n                cnt += (len(temp)-2) * (len(temp)-3) /2\n                del(temp[0])\n            else: break\n    if i == len(xAxis) - 1 and temp[-1] - temp[0] <= d:\n        cnt += len(temp) * (len(temp)-1) * (len(temp)-2) / (3*2)\n\nprint(int(cnt))\n", "a,b=input().split()\na=int(a)\nb=int(b)\nc=input().split()\nfor i in range(len(c)):\n    c[i]=int(c[i])\nx=0\nt=0\nfor i in range(a-2):\n    while (t<a and c[t]<=c[i]+b):\n        t=t+1 \n    t-i-1\n    x=x+(t-i-1)*(t-i-2)/2\nprint(int(x))"]