["# cooking dish here\n\nfrom sys import stdin\nfrom collections import Counter\nread = stdin.readline\n\nfor testcase in range(int(read())):\n    length = int(read())\n    string = read().strip()\n    \n    counts = Counter(string)\n    \n    odd_counts = 0\n    \n    for count in list(counts.values()):\n        # print(count, counts)\n        odd_counts += count%2\n        \n    print(max(odd_counts-1, 0))\n", "t = int(input())\n\nfor j in range(t):\n    c = 0 \n    f = 1\n    k = 0\n    n = int(input())\n    s = input()\n    di = {}\n    for i in range(n):\n        if(s[i] in di.keys()):\n            di[s[i]] = di[s[i]] + 1\n        else:\n            di[s[i]] = 1\n    for i in di.keys():\n        if(di[i] == 1 and f):\n            f = 0\n        elif(di[i]%2 == 1):\n            k = 1\n            c = c + 1\n    if(f and k):\n        c = c - 1\n    print(c)", "from collections import Counter\r\nfor _ in range(int(input())):\r\n    lens = int(input())\r\n    inps = input().strip()\r\n    need = 0\r\n    cinps = Counter(inps)\r\n    hasOne = False\r\n    for i in cinps:\r\n        if cinps[i]%2 == 1:\r\n            if hasOne == False:\r\n                hasOne = True\r\n                continue\r\n            else:\r\n                need += 1\r\n    print(need)\r\n\r\n\r\n\r\n\r\n", "try:\r\n    t=int(input())\r\n    for _ in range(t):\r\n        n=int(input())\r\n        s=input()\r\n        i,res=0,0\r\n        dp=[0]*26\r\n        for i in range(n):\r\n            dp[ord(s[i])-97]+=1\r\n        for i in range(26):\r\n            if(dp[i]%2==1):\r\n                res+=1\r\n        if res>0:\r\n            res-=1\r\n        print(res)\r\nexcept EOFError:\r\n    pass", "t = int(input())\n\nfor j in range(t):\n    c = 0 \n    f = 1\n    k = 0\n    n = int(input())\n    s = input()\n    di = {}\n    for i in range(n):\n        if(s[i] in di.keys()):\n            di[s[i]] = di[s[i]] + 1\n        else:\n            di[s[i]] = 1\n    for i in di.keys():\n        if(di[i] == 1 and f):\n            f = 0\n        elif(di[i]%2 == 1):\n            k = 1\n            c = c + 1\n    if(f and k):\n        c = c - 1\n    print(c)", "#Code goes here!\r\nfrom collections import Counter\r\nfor i in range(int(input())):\r\n    n = int(input())\r\n    a = input().strip()\r\n    lst = list(Counter(a).values())\r\n    odds_count = sum([1 for x in lst if x%2!=0])\r\n    if odds_count>1:\r\n        print(odds_count-1)\r\n    else:\r\n        print(0)", "#Code goes here!\r\nfrom collections import Counter\r\nfor i in range(int(input())):\r\n    n = int(input())\r\n    a = input().strip()\r\n    cnt = 0\r\n\r\n    if a == a[::-1]:\r\n        print(cnt)\r\n\r\n    else:\r\n        lst = list(Counter(a).values())\r\n        odds_count = sum([1 for x in lst if x%2!=0])\r\n        if odds_count>1:\r\n            print(odds_count-1)\r\n        else:\r\n            print(cnt)", "from sys import stdin,stdout\nimport math,bisect\nfrom datetime import date\nfrom collections import Counter,deque,defaultdict\nL=lambda:list(map(int, stdin.readline().strip().split()))\nM=lambda:list(map(int, stdin.readline().strip().split()))\nI=lambda:int(stdin.readline().strip())\nS=lambda:stdin.readline().strip()\nC=lambda:stdin.readline().strip().split()\ndef pr(a):return(\"\".join(list(map(str,a))))\n#_________________________________________________#\n\ndef solve():\n    n = I()\n    a = S()\n    d=Counter(a)\n    ans=0\n    for i in d:\n        if d[i]%2:\n            ans+=1\n    print(max(0,ans-1))\n    \nfor _ in range(I()): \n    solve()\n", "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return map(int, inp().split())\ndef smp(): return map(str, inp().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n\nfor _ in range(int(inp())):\n    n = int(inp())\n    s = inp()\n    md = {}\n    for i in s:\n        if i in md: md[i]+=1\n        else: md[i]=1\n    o, e = 0, 0\n    for i in md.values():\n        if i%2: o+=1\n        else: e+=1\n    print(max(o-1, 0))", "# cook your dish here\ndef my_fun():\n    return 0\nfrom collections import defaultdict\nt=int(input())\nfor _ in range(t):\n    count=0\n    n=int(input())\n    s=input()\n    hm=dict()\n    for i in range(n):\n        hm[s[i]]=hm.get(s[i],0)+1\n    if n%2!=0:\n        flag=0\n        for key,value in list(hm.items()):\n            if value%2!=0 and flag!=1:\n                flag=1\n            elif value%2!=0 and flag==1:\n                count+=1\n    else:\n            for key,value in list(hm.items()):\n                if value%2!=0:\n                    count+=1\n            if count!=0:\n                count-=1\n        \n    print(count)\n        \n", "for _ in range(int(input())):\n    n=int(input())\n    s=input()\n    if s==s[::-1]:\n        print(0)\n    else:\n        an=0\n        ar=[0]*26\n        for i in range(n):\n            ar[ord(s[i])-97]+=1\n        for i in range(26):\n            if ar[i]%2!=0:\n                an+=1\n        if an==0:\n            print(0)\n        else:\n            print(an-1)\n", "for _ in range(int(input())):\r\n    n = int(input())\r\n    s = input()\r\n    dic = dict()\r\n    for i in range(n):\r\n        dic[s[i]] = dic.setdefault(s[i], 0) + 1\r\n    ans = 0\r\n    for i in dic:\r\n        if dic[i] % 2 != 0:\r\n            ans += 1\r\n    print(ans - 1 if ans > 0 else ans)\r\n", "from collections import Counter\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    s = input().strip()\r\n\r\n    c = Counter(s)\r\n\r\n    odd = 0\r\n    for i in c:\r\n        if c[i] % 2:\r\n            odd += 1\r\n\r\n    if odd > 1:\r\n        print(odd - 1)\r\n    else:\r\n        print(0)"]