["a = int(input())\r\nfor i in range(a):\r\n\tb = input()\r\n\tif '5' in b or '0' in b:\r\n\t\tprint(1)\r\n\t\tcontinue\r\n\tprint(0)", "t=int(input())\r\nwhile(t):\r\n    n=input()\r\n    if('0' in n or '5' in n):\r\n        print('1')\r\n    else:\r\n        print('0')\r\n    t=t-1", "t=int(input())\r\nfor t1 in range(t):\r\n\tn=input()\r\n\ta=0\r\n\tfor i in n:\r\n\t\tif i=='0' or i=='5':\r\n\t\t\ta=1\r\n\t\t\tbreak\r\n\t\t\t\r\n\tprint(a)", "from sys import *\ninput=stdin.readline\nfor i in range(int(input())):\n    n = int(input())\n    while n > 0:\n        r = n%10\n        if r%5 == 0:\n            print(1)\n            break\n        n = n // 10\n    else:\n        print(0)\n", "T=int(input())\r\n\r\nfor _ in range(T):\r\n    \r\n    N=input()\r\n    if '0' in N or'5' in N:\r\n        print(1)\r\n    else:\r\n        print(0)", "from sys import*\r\ninput=stdin.readline\r\nt=int(input())\r\nfor _ in range(t):\r\n    s=list(input())\r\n    n=s.count('0')+s.count('5')\r\n    if n>0:\r\n        print('1')\r\n    else:\r\n        print('0')\r\n", "t=int(input())\nfor i in range(t):\n    a=input()\n    if '0' in a: \n        print('1')\n    elif '5' in a:\n        print('1')\n    else:\n        print('0')\n", "t=int(input())\r\nfor i in range(t):\r\n    a=input()\r\n    if '0' in a: \r\n        print('1')\r\n    elif '5' in a:\r\n        print('1')\r\n    else:\r\n        print('0')", "t=int(input())\r\nfor i in range(t):\r\n    a=input()\r\n    if '0' in a: \r\n        print('1')\r\n    elif '5' in a:\r\n        print('1')\r\n    else:\r\n        print('0')", "# cook your dish here\nfor i in range(int(input())):\n    n=int(input())\n    n=str(n)\n    z=n.find('5')\n    z1=n.find('0')\n    if(z==-1 and z1==-1):\n        print('0')\n    else:\n        print('1')\n", "# cook your dish here\nfor _ in range(int(input())):\n    n = input()\n    if \"5\" in n or \"0\" in n:\n        print(1)\n    else:\n        print(0)", "# cook your dish here\nn=int(input())\nls=[]\nfor _ in range(n):\n    ls.append(int(input()))\nfor ele in ls:\n    ele=str(ele)\n    ele=list(ele)\n    flag=0\n    for i in ele:\n        if(int(i)%5==0):\n            print(\"1\")\n            flag=1\n            break\n    if flag==0:\n        print(\"0\")\n        \n", "def f(n):\r\n    string = str(n)\r\n    for char in string:\r\n        if char in '05':\r\n            return 1\r\n    return 0\r\n\r\nt = int(input())\r\nanswers = list()\r\nfor _ in range(t):\r\n    n = int(input())\r\n    answers.append(f(n))\r\n\r\nfor answer in answers:\r\n    print(answer)", "for _ in range(int(input())):\n    n=int(input())\n    a=str(n)\n    if(a.count('0') or a.count('5')):\n        print('1')\n    else:\n        print('0')\n", "# cook your dish here\n\n\nfor _ in range(int(input())):\n    n=input()\n    flag=0\n    for i in n:\n        if i==\"0\" or i=='5':\n            flag=1\n            break\n    if flag==0:\n        print('0')\n    else:\n        print(\"1\")", "import sys\r\ninput = sys.stdin.readline\r\nfor _ in range(int(input())):\r\n    n=input()\r\n    for i in range(len(n)):\r\n        if(n[i]=='0' or n[i]=='5'):\r\n            print(\"1\")\r\n            break\r\n    else:\r\n        print(\"0\")", "for _ in range(int(input())):\r\n    l = list(input())\r\n    if \"0\" in l or \"5\" in l:\r\n        print(1)\r\n    else:\r\n        print(0)", "for _ in range(int(input())):\n    N = input()\n    if '5' in N or '0' in N:\n        print(1)\n    else:\n        print(0)", "t=int(input())\nwhile(t>0):\n    n=input()\n    if(('5' in n) or ('0' in n)):\n        print(1)\n    else:\n        print(0)\n    t-=1\n# cook your dish here\n", "# cook your dish here\nfor i in range(int(input())):\n    num=input()\n    if '5' in num or '0' in num:\n        print(1)\n    else:\n        print(0)\n", "def func(num):\r\n    for x in num:\r\n        if x == '0' or x == '5':\r\n            print(1)\r\n            return\r\n    print(0)\r\n\r\n\r\nfor _ in range(int(input())):\r\n    num = input()\r\n    func(num)\r\n", "t=int(input())\r\nfor i in range(t):\r\n    n=input()\r\n    if(\"0\" in n or \"5\"in n):\r\n        print(1)\r\n    else:\r\n        print(0)", "import sys\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\r\n#______________________________________________________________________________________________________\r\n# from math import *\r\n# from bisect import *\r\n# from heapq import *\r\n# from collections import defaultdict as dd\r\n# from collections import OrderedDict as odict\r\n# from collections import Counter as cc\r\n# from collections import deque\r\n# sys.setrecursionlimit(2*(10**5)+100) this is must for dfs\r\n# mod = 10**9+7; md = 998244353\r\n# ______________________________________________________________________________________________________\r\n# segment tree for range minimum query\r\n# sys.setrecursionlimit(10**5)\r\n# n = int(input())\r\n# a = list(map(int,input().split()))\r\n# st = [float('inf') for i in range(4*len(a))]\r\n# def build(a,ind,start,end):\r\n#   if start == end:\r\n#       st[ind] = a[start]\r\n#   else:\r\n#       mid = (start+end)//2\r\n#       build(a,2*ind+1,start,mid)\r\n#       build(a,2*ind+2,mid+1,end)\r\n#       st[ind] = min(st[2*ind+1],st[2*ind+2])\r\n# build(a,0,0,n-1)\r\n# def query(ind,l,r,start,end):\r\n#   if start>r or end<l:\r\n#       return float('inf')\r\n#   if l<=start<=end<=r:\r\n#       return st[ind]\r\n#   mid = (start+end)//2\r\n#   return min(query(2*ind+1,l,r,start,mid),query(2*ind+2,l,r,mid+1,end))\r\n# ______________________________________________________________________________________________________\r\n# Checking prime in O(root(N))\r\n# def isprime(n):\r\n#     if (n % 2 == 0 and n > 2) or n == 1: return 0\r\n#     else:\r\n#         s = int(n**(0.5)) + 1\r\n#         for i in range(3, s, 2):\r\n#             if n % i == 0:\r\n#                 return 0\r\n#         return 1\r\n# def lcm(a,b):\r\n#   return (a*b)//gcd(a,b)\r\n# ______________________________________________________________________________________________________\r\n# nCr under mod\r\n# def C(n,r,mod):\r\n#   if r>n:\r\n#       return 0\r\n#   num = den = 1\r\n#   for i in range(r):\r\n#       num = (num*(n-i))%mod\r\n#       den = (den*(i+1))%mod\r\n#   return (num*pow(den,mod-2,mod))%mod\r\n# M = 10**5 +10\r\n# ______________________________________________________________________________________________________\r\n# For smallest prime factor of a number\r\n# M = 1000010\r\n# pfc = [i for i in range(M)]\r\n# def pfcs(M):\r\n#   for i in range(2,M):\r\n#       if pfc[i]==i:\r\n#           for j in range(i+i,M,i):\r\n#               if pfc[j]==j:\r\n#                   pfc[j] = i\r\n#   return\r\n# pfcs(M)\r\n# ______________________________________________________________________________________________________\r\ntc = 1\r\ntc, = inp()\r\n# a = [0,1]\r\n# for i in range(100000):\r\n#     a.append(a[-1]+a[-2])\r\nfor _ in range(tc):\r\n    n, = inp()\r\n    print(1 if any([int(i)%5==0 for i in str(n)]) else 0)"]