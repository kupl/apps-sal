["import sys\nimport math\n\nn = int(input())\n\nx = [0]*n\ny = [0]*n\n\nfor i in range(n):\n    x[i], y[i] = list(map(int, input().split()))\n\nsx = sum(x)\nsy = sum(y)\n    \nfor i in range(n):\n    x[i] = n * x[i] - sx\n    y[i] = n * y[i] - sy\n\nm = int(input())\n\nd = [0]*n\ne = [0]*n\n\nHD = 0\n\ndef check(a, b):\n    nonlocal HD\n    HE = 0\n    for i in range(n):\n        HE ^= hash((a-x[i])*(a-x[i])+(b-y[i])*(b-y[i]))\n    return HD == HE\n\ndef sqrt(x):\n    nn = int(x)\n    if nn == 0:\n        return 0\n    fa, fb = divmod(nn.bit_length(), 2)\n    x = 2**(fa+fb)\n    while True:\n        y = (x + nn//x)//2\n        if y >= x:\n            return x\n        x = y\n\ndef hash(x):\n    return x * 9991 + 43\n\npans = []\n\ndef solve():\n    nonlocal d\n    d = list(map(int, input().split()))\n    c = 0\n    d = [p * n * n for p in d]\n    for i in range(n):\n        c += d[i] - x[i] * x[i] - y[i] * y[i]\n\n    assert(c % n == 0)\n    c //= n\n    ans = []\n    ax = x[0]\n    ay = y[0]\n    if ax is 0 and ay is 0:\n        ax = x[1]\n        ay = y[1]\n    rev = 0\n    if ay == 0:\n        ay = ax\n        ax = 0\n        rev = 1\n    d.sort()\n    nonlocal HD\n    HD = 0\n    for p in d:\n        HD ^= hash(p)\n    old = -1\n    for p in d:\n        if (p == old):\n            continue\n        old = p\n        a = c + ax * ax + ay * ay - p\n        if (a % 2 != 0):\n            continue\n        a //= 2\n        A = ax * ax + ay * ay\n        B = a * ax\n        C = a * a - ay * ay * c\n        D = B * B - A * C\n        if (D < 0):\n            continue\n        sD = sqrt(D)\n        if D != sD * sD:\n            continue\n        if (B + sD) % A == 0:\n            qx = (B + sD) // A\n            qy = (a - ax * qx) // ay\n            if rev:\n                t = qx\n                qx = qy\n                qy = t\n            if ((qx + sx) % n == 0 and (qy + sy) % n == 0 and check(qx, qy)):\n                qx = (qx + sx) // n\n                qy = (qy + sy) // n\n                ans.append([qx, qy])\n        if sD == 0:\n            continue\n        if (B - sD) % A == 0:\n            qx = (B - sD) // A\n            qy = (a - ax * qx) // ay\n            if rev:\n                t = qx\n                qx = qy\n                qy = t\n            if ((qx + sx) % n == 0 and (qy + sy) % n == 0 and check(qx, qy)):\n                qx = (qx + sx) // n\n                qy = (qy + sy) // n\n                ans.append([qx, qy])\n                \n    ans.sort()\n    buf=[]\n    buf.append(len(ans))\n    for p in ans:\n            buf.append(p[0])\n            buf.append(p[1])\n    nonlocal pans\n    pans.append(\" \".join(map(str,buf)))\n\nwhile m > 0:\n    m -= 1\n    solve()\n    \nsys.stdout.write(\"\\n\".join(pans))\n       \n"]