["from sys import stdin, stdout\r\ninput = stdin.readline\r\nfrom collections import defaultdict as dd\r\nimport math\r\ndef geti(): return list(map(int, input().strip().split()))\r\ndef getl(): return list(map(int, input().strip().split()))\r\ndef gets(): return input()\r\ndef geta(): return int(input())\r\ndef print_s(s): stdout.write(s+'\\n')\r\n\r\ndef solve():\r\n    for _ in range(geta()):\r\n        n=geta()\r\n        n=bin(n).split('b')[1]\r\n        print(n.count('0'))\r\n\r\n\r\ndef __starting_point():\r\n    solve()\r\n\n__starting_point()", "from sys import stdin, stdout\r\ninput = stdin.readline\r\nfrom collections import defaultdict as dd\r\nimport math\r\ndef geti(): return list(map(int, input().strip().split()))\r\ndef getl(): return list(map(int, input().strip().split()))\r\ndef gets(): return input()\r\ndef geta(): return int(input())\r\ndef print_s(s): stdout.write(s+'\\n')\r\n\r\ndef solve():\r\n    for _ in range(geta()):\r\n        n=geta()\r\n        n=bin(n).split('b')[1]\r\n        print(n.count('0'))\r\n\r\n\r\ndef __starting_point():\r\n    solve()\r\n\n__starting_point()", "from sys import stdin\nn = int(stdin.readline())\nfor _ in range(n):\n    n1 = int(stdin.readline())\n    b = bin(n1)[2:]\n    print(b.count('0'))"]