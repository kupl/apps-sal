["for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n < m:\n        n, m = m, n # n > m\n\n    if m == 1:\n        print(\"YES\")\n        continue\n\n    if m == 2 and n == 2:\n        print(\"YES\")\n        continue\n\n    print(\"NO\")\n", "for zz in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n == 1 or m == 1 or (n <= 2 and m <= 2):\n        print('YES')\n    else:\n        print('NO')\n", "for i in range(int(input())):\n    a, b = list(map(int,input().split()))\n    if a > 2 and b >= 2 or b > 2 and a >= 2:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n", "t=int(input())\nfor i in range(t):\n  a,b=map(int,input().split())\n  if a==2 and b==2:\n    print('YES')\n  elif a==1:\n    print('YES')\n  elif b==1:\n    print('YES')\n  else:\n    print('NO')", "for _ in range(int(input())):\n\ta, b = list(map(int, input().split()))\n\tif (a == 1 or b == 1) or (a == 2 and b == 2):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "t=int(input())\nfor _ in range(t):\n    n,m=list(map(int, input().split()))\n    print('YES' if n == 1 or m == 1 or n == 2 and m == 2 else 'NO')\n", "t = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    if n == 1 or m == 1 or (m == 2 and n == 2):\n        print('YES')\n    else:\n        print('NO')\n", "import sys\n# from collections import deque\n\n# print(help(deque))\n# 26\ninput = lambda: sys.stdin.readline().strip()\nipnut = input\nfor i in range(int(input())):\n    n,m = map(int,ipnut().split())\n    if n==m==2 or min(n,m)==1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    # n = int(input())\n    # s = list(map(int,input()))\n\"\"\"\n10\n10 11 12 13 14 15 16 17 11 11\n\"\"\"", "t = int(input())\nfor q in range(0, t):\n    n, k = map(int, input().split())\n    # a = list(map(int, input().split()))\n    # n = int(input())\n    # print(n)\n    if n == k == 2:\n        print(\"YES\")\n    elif n == 1 or k == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "import sys\nints = (int(x) for x in sys.stdin.read().split())\nsys.setrecursionlimit(3000)\n\ndef main():\n    ntc = next(ints)\n    for tc in range(ntc):\n        n, m = (next(ints) for i in range(2))\n        print('YES' if n==1 or m==1 or n==m==2 else 'NO')\n    return\n\nmain()\n", "from sys import stdin,stdout                           #\nimport math                                            #\nimport heapq                                           #\n                                                       #\nt = 1                                                  #\ndef aint():                                            #\n\treturn int(input().strip())                        #\ndef lint():                                            #\n\treturn list(map(int,input().split()))              #\ndef fint():                                            #\n\treturn list(map(int,stdin.readline().split()))     #\n                                                       #\t\n########################################################\n\ndef main():\n\tn,m=lint()\n\tif n==1 or m==1:\n\t\tprint(\"YES\")\n\telif n==2 and m==2:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\t#solve\n\nt=int(input())\n\n########################################################\nfor i in range(t):                                     #\n\t#print(\"Case #\"+str(i+1)+\":\",end=\" \")\t\t       #\n\tmain()                                             #", "t=int(input())\nfor i in range(t):\n    n,m=map(int,input().split())\n    if n == 1 or m==1:print(\"YES\")\n    elif n==2 and m==2:print(\"YES\")\n    else:print(\"NO\")", "for f in range(int(input())):\n    n,m=map(int,input().split())\n    if n==1 or m==1 or (n==2 and m==2):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    print( \"YES\" if min(n, m) == 1 or max(n, m) <= 2 else \"NO\" )\n", "t = int(input())\nfor i in range(t):\n    n, m = map(int, input().split())\n    if n != 1 and m != 1 and n*m != 4:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "t = int(input())\nfor case in range(t):\n    n, m = list(map(int, input().split()))\n    if (min(n, m) == 1):\n        print('YES')\n    elif n == m and n == 2:\n        print('YES')\n    else:\n        print('NO')", "import sys\n\nreadline = sys.stdin.readline\n\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: list(map(int, readline().split()))\nnl = lambda: list(map(int, readline().split()))\n\ndef solve():\n    n, m = nm()\n    if min(n, m) == 1 or max(n, m) == 2:\n        print('YES')\n    else:\n        print('NO')\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "t = int(input())\nfor i in range(t):\n    n, m = list(map(int, input().split()))\n    if n == 1 or m == 1 or (n == 2 and m == 2):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "import sys\nT = int(sys.stdin.readline().strip())\ndef getT(line):\n    return map(int, line.strip().split(\" \"))\n\nfor t in range(T):\n    (m,n) = getT(sys.stdin.readline())\n    if min(m, n) == 1: print(\"YES\")\n    elif min(m, n) == 2 and max(m, n) == 2: print(\"YES\")\n    else: print(\"NO\")", "for _ in range(int(input())):\n    a,b=map(int,input().split())\n    if min(a,b)==1:\n        print('YES')\n    elif a==2 and b==2:\n        print('YES')\n    else:\n        print('NO')", "#from sys import stdin, stdout, setrecursionlimit\n#input = stdin.readline\n#print = stdout.write\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    ans = 'NO'\n    if n == 1 or m == 1 or (n == 2 and m == 2):\n        ans = 'YES'\n    print(ans)\n\n\n\n\n\n\n", "for _ in range(int(input())):\n    a, b = list(map(int, input().split()))\n    if a == 1 or b == 1:\n        print('YES')\n    elif a == b == 2:\n        print('YES')\n    else:\n        print('NO')\n", "def solve():\n    N,M = list(map(int,input().split()))\n    if N==1 or M==1:\n        print(\"YES\")\n    elif N==2 and M==2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nfor _ in range(int(input())):\n        solve()\n", "\n\ndef main():\n    n, m = map(int, input().split())\n    if n == 2 and m == 2:\n        print(\"YES\")\n    else:\n        if n == 1 or m == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n__starting_point()", "t = int(input())\nfor i10 in range(t):\n    n, m = list(map(int, input().split()))\n    if n == 1 or m == 1 or n + m == 4:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n == 2 and m == 2:\n        print(\"YES\")\n        continue\n    if n == 1 or m == 1:\n        print(\"YES\")\n        continue\n    print(\"NO\")\n", "\n\nt = int(input())\n\nfor fk in range(t):\n    n, m = [int(x) for x in input().split()]\n\n    if n == 1 or m == 1:\n        print('YES')\n\n    elif n==2 and m == 2:\n        print('YES')\n\n    else : print('NO')", "q = int(input())\n\nfor _ in range(q):\n    n, m = list(map(int, input().split()))\n    if n == 2 and m == 2 or n == 1 or m == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "q = int(input())\nfor i in range(q):\n    n, m = list(map(int, input().split()))\n    if (n == 1 or m == 1):\n        print(\"YES\")\n    elif (n == m == 2):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n=int(input())\nfor i in range(n):\n    a,b=[int(i) for i in input().split()]\n    if (a==b==2) or a==1 or b==1:\n        print('YES')\n    else:\n        print('NO')\n", "t = int(input())\nfor u in range(t):\n    n,m=list(map(int,input().split()))\n    x = 2*n+2*m\n    y = 3*n*m\n    z = n*m\n    if x+z >= y:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "for _ in range(int(input())):\n    n, m = tuple(map(int, input().split()))\n\n    a = (n - 1) * m + (m - 1) * n\n    b = n * m\n\n    if a <= b:\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\nfor case in range(t):\n    n, m = map(int, input().split())\n    ans = 'NO'\n    if (n == m == 2):\n        ans = 'YES'\n    elif (n == 1 or m == 1):\n        ans = 'YES'\n    print (ans)", "t = int(input())\nfor case in range(t):\n    n, m = list(map(int, input().split()))\n    perimeter = 2*n + 2*m\n\n    inside = m*(n-1) + n*(m-1)\n    nobs = 2*n*m\n\n    if (nobs > perimeter):\n        print (\"NO\")\n    else:\n        print (\"YES\")\n", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n * m <= n + m:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t = int(input())\nfor i in range(t):\n    n, m = list(map(int, input().split()))\n    if min(n, m) == 1 or m==2 and n==2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "# n = int(input())\n# l = list(map(int, input().split()))\nfor tt in range(int(input())):\n\tn, m = map(int, input().split())\n\tif(n==1 or m==1 or (n==2 and m==2)):\n\t\tprint(\"YES\")\n\t\tcontinue\n\tprint(\"NO\")", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    if n == m and n == 2:\n        print('YES')\n    elif n >= 2 and m >= 2:\n        print('NO')\n    else:\n        print('YES')\n", "for _ in range(int(input())):\n    n, m = map(int, input().split())\n    print('YES' if n == 1 or m == 1 or (n == 2 and m == 2) else 'NO')", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\nORDA = 97       #a\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return [int(i) for i in input().split()]\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nfor _ in range(ii()):\n    n, m = mi()\n    if n == 1 or m == 1 or m == 2 and n == 2:\n        print('YES')\n    else:\n        print('NO')"]