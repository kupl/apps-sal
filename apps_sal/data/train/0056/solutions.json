["for _ in range(int(input())):\n    n, k = map(int, input().split())\n    mat = [[0] * n for _ in range(n)]\n    for i in range(n):\n        b = False\n        for j in range(n):\n            if i*n+j == k:\n                b = True\n                break\n            mat[(i+j)%n][j] = 1\n        if b:\n            break\n    if k%n == 0:\n        print(0)\n    else:\n        print(2)\n    for i in range(n):\n        for j in range(n):\n            print(mat[i][j], end=\"\")\n        print()\n", "q = int(input())\nfor _ in range(q):\n    n, k = list(map(int,input().split()))\n    odp = [[0] * n for i in range(n)]\n    cur = [0,0]\n    zap = 0\n    while True:\n        if zap >= k:\n            break\n        odp[cur[0]][cur[1]] = 1\n        zap += 1\n        cur[0] = (cur[0]+1)%n\n        cur[1] = (cur[1]+1)%n\n        if cur[0] == 0:\n            cur[1] = zap//n\n    if k%n == 0:\n        print(0)\n    else:\n        print(2)\n    for i in range(n):\n        print(\"\".join(list(map(str,odp[i]))))\n", "for _ in range(int(input())):\n    n,k=list(map(int,input().split()))\n    ans=[[\"0\" for j in range(n)] for i in range(n)]\n    posx=0\n    posy=0\n    count=k\n    while count:\n        ans[posx][posy]=\"1\"\n        count-=1\n        if (k-count)%n!=0:\n            posx=(posx+1)%n\n            posy=(posy+1)%n\n        else:\n            posx=(posx+1)%n\n            posy=(posy+2)%n\n\n    res=0\n    R=[sum(int(ans[i][j]) for j in range(n)) for i in range(n)]\n    C=[sum(int(ans[i][j]) for i in range(n)) for j in range(n)]\n    res=(max(R)-min(R))**2+(max(C)-min(C))**2\n    print(res)\n    for i in range(n):\n        print(\"\".join(ans[i]))\n", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N, K = list(map(int, input().split()))\n        if K % N == 0:\n            print(0)\n        else:\n            print(2)\n        ans = [[0] * N for _ in range(N)]\n        cnt = 0\n        flg = 0\n        for p in range(N):\n            if flg:\n                break\n            for i in range(N):\n                if cnt == K:\n                    flg = 1\n                    break\n                ans[i][(i+p)%N] = 1\n                cnt += 1\n        for i in range(N):\n            print(\"\".join(map(str, ans[i])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nlines = sys.stdin.readlines()\nT = int(lines[0].strip())\n# (N, K) = map(int, lines[0].strip().split(\" \"))\nfor t in range(T):\n    (a, b) = map(int, lines[t+1].strip().split(\" \"))\n    res = [[0 for _ in range(a)] for _ in range(a)]\n    rema = b % a\n    deno = b // a\n    if rema == 0: val = 0\n    else: val = 2\n    for i in range(a):\n        if i < rema:\n            for j in range(deno+1):\n                res[i][(i+j)%a] = 1\n        else:\n            for j in range(deno):\n                res[i][(i+j)%a] = 1\n    print(val)\n    for i in range(a):\n        print(''.join(map(str, res[i])))", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n,k=list(map(int,input().split()))\n    sm=k//n\n    bg=sm\n    toad=k%n\n    if toad!=0:\n        bg+=1\n    print(2*(bg-sm)**2)\n    for i in range(n):\n        line=\"\"\n        for j in range(n):\n            x=i+j\n            x%=n\n            if x<=sm:\n                if x<sm or i<toad:\n                    line+=\"1\"\n                else:\n                    line+=\"0\"\n            else:\n                line+=\"0\"\n        print(line)\n", "t=int(input())\nfor _ in range(t):\n  n,k=map(int,input().split())\n  a=k//n\n  rem=k%n\n  grid=[]\n  for i in range(n):\n    grid.append([])\n    for j in range(n):\n      grid[-1].append('0')\n  for i in range(n):\n    for j in range(i,i+a):\n      grid[i][j%n]='1'\n    if i<rem:\n      grid[i][(i+a)%n]='1'\n  ans=0\n  r=[]\n  for i in range(n):\n    p=0\n    for j in range(n):\n      if grid[i][j]=='1':\n        p+=1\n    r.append(p)\n  c=[]\n  for i in range(n):\n    p=0\n    for j in range(n):\n      if grid[j][i]=='1':\n        p+=1\n    c.append(p)\n  print((max(r)-min(r))**2+(max(c)-min(c))**2)\n  for i in range(n):\n    ans=''.join(grid[i])\n    print(ans)", "import sys\ninput=lambda: sys.stdin.readline().rstrip()\nt=int(input())\nfor _ in range(t):\n  n,k=map(int,input().split())\n  if k%n==0:\n    print(0)\n  else:\n    print(2)\n  for i in range(n):\n    ans=\"\"\n    if i<k%n:\n      ans=\"1\"*(k//n+1)+\"0\"*(n-(k//n+1))\n      ans=ans[i:]+ans[:i]\n\n    else:\n      ans=\"1\"*(k//n)+\"0\"*(n-(k//n))\n      ans=ans[i:]+ans[:i]\n    print(ans)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,k = map(int,input().split())\n  if k%n:\n    print(2)\n  else:\n    print(0)\n  ans = [[0 for i in range(n)] for j in range(n)]\n  if k == 0:\n    for i in ans:\n      print(*i,sep=\"\")\n    continue\n  for i in range(n):\n    for j in range(n):\n      ans[j][(i+j)%n] = 1\n      k -= 1\n      if k == 0:\n        break\n    else:\n      continue\n    break\n  for i in ans:\n    print(*i,sep=\"\")", "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    m=k//n\n    r=k%n\n    if r:\n        print(2)\n        s='1'*(m+1)+'0'*(n-m-1)\n        for i in range(r):\n            print(s)\n            s=s[1:]+s[0]\n        i=(m-r)%n\n        s=s[:i]+'0'+s[i+1:]\n        for i in range(n-r):\n            print(s)\n            s=s[1:]+s[0]\n    else:\n        print(0)\n        s='1'*m+'0'*(n-m)\n        for i in range(n):\n            print(s)\n            s=s[1:]+s[0]", "def solve():\n    n, m = map(int, input().split())\n    ans = 2 if m % n else 0\n    a = [[0] * n for _ in range(n)]\n    for i in range(n):\n        if m <= 0:\n            break\n        for j in range(n):\n            if m <= 0:\n                break\n            a[j][(i + j) % n] = 1\n            m -= 1\n    print(ans)\n    for i in a:\n        print(*i, sep='')\n\nt = int(input())\nfor _ in range(t):\n    solve()", "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    board=[[0]*n for _ in range(n)]\n    cnt=0\n    for i in range(n):\n        for j in range(n):\n            if cnt==k:\n                break\n            board[(j+i)%n][j]=1\n            cnt+=1\n        if cnt==k:\n            break\n    if k%n==0:\n        print(0)\n    else:\n        maxs=(k+n-1)//n\n        mins=k//n\n        print(2*((maxs-mins)**2))\n    for i in range(n):\n        print(''.join(map(str,board[i])))", "import sys\ninput = sys.stdin.readline\n\nimport math\n\nT = int(input())\n\n\ndef f(M):\n    minR = math.inf\n    maxR = -math.inf\n    minC = math.inf\n    maxC = -math.inf\n\n    for i in range(len(M)):\n        sumRow = sum(M[i])\n        minR = min(minR, sumRow)\n        maxR = max(maxR, sumRow)\n\n        sumCol = sum([M[el][i] for el in range(len(M))])\n        maxC = max(maxC, sumCol)\n        minC = min(minC, sumCol)\n\n    return (maxR - minR)**2 + (maxC - minC)**2\n\nfor t in range(T):\n    N, K = [int(_) for _ in input().split()]\n    M = [[0] * N for i in range(N)]\n\n    # save = set()\n\n    for i in range(K):\n        # assert (i%N, (i//N + i)%N) not in save\n        # save.add((i%N, (i//N + i)%N))\n        M[i%N][(i//N + i)%N] = 1\n\n    print(f(M))\n    for row in M:\n        print(''.join(map(str, row)))\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,k=list(map(int,input().split()))\n\n    ANS=[[0]*n for i in range(n)]\n\n    o=k//n\n    m=k-o*n\n\n    now=0\n    for i in range(n):\n        if i<m:\n            for j in range(o+1):\n                ANS[i][now]=1\n                now=(now+1)%n\n\n        else:\n            for j in range(o):\n                ANS[i][now]=1\n                now=(now+1)%n\n\n    if m==0:\n        print(0)\n    else:\n        print(2)\n\n    for ans in ANS:\n        print(\"\".join(map(str,ans)))\n        \n    \n\n    \n    \n", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n, k = map(int, input().split())\n  res = [[\"0\"] * n for _ in range(n)]\n  if k % n: print(2)\n  else: print(0)\n  for d in range(n):\n    for i in range(n):\n      if k == 0: break\n      res[i][(i + d) % n] = \"1\"\n      k -= 1\n  for r in res: print(\"\".join(r))", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    n,k = list(map(int,input().split()))\n\n    lis = [ [0] * n for i in range(n) ]\n\n    ns = 0\n    for si in range(n):\n\n        if ns == k:\n            break\n\n        for i in range(n):\n\n            lis[(si+i)%n][i] = 1\n            ns += 1\n\n            if ns == k:\n                break\n        else:\n            continue\n        break\n\n    R = []\n    for i in range(n):\n        now = 0\n        for j in range(n):\n            now += lis[i][j]\n        R.append(now)\n\n    C = []\n    for i in range(n):\n        now = 0\n        for j in range(n):\n            now += lis[j][i]\n        C.append(now)\n\n    print((max(R)-min(R))**2 + (max(C)-min(C))**2)\n    for i in lis:\n        print(\"\".join(map(str,i)))\n", "t = int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    table = [[0 for i in range(n)] for j in range(n)]\n    if k % n == 0:\n        print(0)\n    else:\n        print(2)\n    i = 0\n    j = 0\n    bias = 0\n    for __ in range(k):\n        table[i][j % n] = 1\n        i += 1\n        j += 1\n        if i >= n:\n            bias += 1\n            i = 0\n            j = bias\n    for i in table:\n        print(''.join(map(str, i)))", "for __ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    ans = [[0] * n for i in range(n)]\n    i, j = 0, 0\n    while k > 0:\n        while i < n and k > 0:\n            ans[i][j] = 1\n            i += 1\n            j += 1\n            k -= 1\n            j %= n\n        i = 0\n        j += 1\n    a1, a2, b1, b2 = 10 ** 9, 0, 10 ** 9, 0\n    for i in range(n):\n        a1 = min(a1, ans[i].count(1))\n        a2 = max(a2, ans[i].count(1))\n    for i in range(n):\n        kek1 = 0\n        for j in range(n):\n            if ans[j][i] == 1:\n                kek1 += 1\n        b1 = min(b1, kek1)\n        b2 = max(b2, kek1)\n    print((a2 - a1) ** 2 + (b2 - b1) ** 2)\n    for elem in ans:\n        print(''.join(map(str, elem)))", "def solve(n, k):\n    matrix = [[0 for _ in range(n)] for _ in range(n)]\n    for right_move in range(n):\n        for height in range(n):\n            if k == 0:\n                continue\n            i = height\n            j = (height + right_move) % n\n            matrix[i][j] = 1\n            k -= 1\n    return matrix\n\n\ndef get_value(matrix):\n    n = len(matrix)\n    max_r = 0\n    min_r = n\n    max_c = 0\n    min_c = n\n    for line in matrix:\n        value = sum(line)\n        max_r = max(max_r, value)\n        min_r = min(min_r, value)\n    for j in range(n):\n        value = sum([matrix[i][j] for i in range(n)])\n        max_c = max(max_c, value)\n        min_c = min(min_c, value)\n    res = (max_r - min_r) ** 2\n    res += (max_c - min_c) ** 2\n    return res\n\n\nT = int(input())\nfor _ in range(T):\n    n, k = list(map(int, input().split()))\n    matrix = solve(n, k)\n    value = get_value(matrix)\n    print(value)\n    for line in matrix:\n        print(''.join(map(str, line)))\n", "import math\nimport sys\nt = int(input())\nresult = []\nfor cs in range(t):\n    n, k = list(map(int, input().split()))\n    a = [[0] * n for _ in range(n)]\n    result.append('0' if k % n == 0 else '2')\n    for i in range(n):\n        cur = 0\n        while cur < n and k > 0:\n            a[cur][(i + cur) % n] = 1\n            k -= 1\n            cur += 1\n    for i in range(n):\n        result.append(''.join(map(str, a[i])))\nprint('\\n'.join(result))\n\n\n", "t = int(input())\nfor test in range(t):\n    n,k = [int(i) for i in input().split()]\n    tab = [[\"0\" for c in range(n)] for r in range(n)]\n    row = 0\n    col = 0\n    while k>0:\n        tab[row][col] = \"1\"\n        row = (row+1)%n\n        col += 1\n        if col==n:\n            col = 0\n            row = (row+1)%n\n        k -= 1\n    if col==0:\n        print(0)\n    else:\n        print(2)\n    for row in range(n):\n        print(''.join(tab[row]))", "import sys\ninput = sys.stdin.readline\ninputr = lambda: sys.stdin.readline().rstrip('\\n')\n\nfor _ in range(int(input())):\n\tn, k = list(map(int, input().split()))\n\n\te = k // n\n\tT = [[0] * n for _ in range(n)]\n\n\tfor i in range((k+n-1)//n):\n\t\tfor j in range(min(n, k - i * n)):\n\t\t\tT[j][(i + j)%n] = 1\n\n\trows = [sum(R) for R in T]\n\tcols = [sum(C) for C in zip(*T)]\n\tassert sum(rows) == k\n\tassert sum(cols) == k\n\tprint((max(rows) - min(rows)) ** 2 + (max(cols) - min(cols)) ** 2)\n\tfor R in T:\n\t\tprint(''.join(map(str, R)))\n"]