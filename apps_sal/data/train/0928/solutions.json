["import math\r\ndef CountSquares(a, b):\r\n    return (math.floor(math.sqrt(b)) - math.ceil(math.sqrt(a)) + 1)\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    val=CountSquares(1,n)\r\n    ans=val-val//3\r\n    print(ans)", "import math\r\ndef CountSquares(a, b):\r\n    return (math.floor(math.sqrt(b)) - math.ceil(math.sqrt(a)) + 1)\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    val=CountSquares(1,n)\r\n    ans=val-val//3\r\n    print(ans)", "import math\r\ndef CountSquares(a, b):\r\n    return (math.floor(math.sqrt(b)) - math.ceil(math.sqrt(a)) + 1)\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    val=CountSquares(1,n)\r\n    ans=val-val//3\r\n    print(ans)", "l = []\nfor x in range(1,100000):\n    if x%3!=0:\n        l.append(x**2)\nfor _ in range(int(input())):\n    n = int(input())\n    c = 0\n    for x in l:\n        if x<=n:\n            c+=1\n        else:\n            break\n    print(c)", "# cook your dish here\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    s=0\n    for j in range(1,int(n**0.5)+1):\n        if (j)%3==0:\n            continue\n            \n        else:\n            s+=1\n    print(s)        \n", "import math\r\nt=int(input()) \r\ndef CountSquares(b): \r\n    return (math.floor(math.sqrt(b)))\r\n    \r\nfor i in range(t):\r\n    n=int(input())\r\n    l=0\r\n    l=CountSquares(n)\r\n    c=0\r\n    for i in range(2,l+1):\r\n        if(i%3==0):\r\n            c+=1\r\n    print(l-c)\r\n    \r\n            \r\n", "t = int(input())\n\nfor _ in range(t):\n\n\tn = int(input())\n\n\t'''\n\ta = [0] * n\n\n\tfor i in range(n):\n\n\t\tfor j in range(i, n, i+1):\n\n\t\t\tif (j+1) % 3 == 0:\n\t\t\t\tcontinue\n\n\t\t\ta[j] = 0 if a[j] else 1\n\n\tprint(a)\n\n\t'''\n\n\ti = 2\n\tcount = 1\n\twhile 1:\n\n\t\tif i*i > n:\n\t\t\tbreak\n\n\t\tif i % 3 != 0:\n\t\t\tcount += 1\n\t\t\t\n\t\ti += 1\n\n\tprint(count)\n", "import sys\r\n# import math\r\nfrom math import gcd\r\n# import re\r\n# from heapq import *\r\n# from collections import defaultdict as dd\r\n# from collections import OrderedDict as odict\r\n# from collections import Counter as cc\r\n# from collections import deque\r\n# sys.setrecursionlimit(10**5)#thsis is must\r\n# mod = 10**9+7; md = 998244353\r\n# m = 2**32\r\ninput = lambda: sys.stdin.readline().strip()\r\ninp = lambda: list(map(int,sys.stdin.readline().strip().split()))\r\n# def C(n,r,mod):\r\n#   if r>n:\r\n#       return 0\r\n#   num = den = 1\r\n#   for i in range(r):\r\n#       num = (num*(n-i))%mod\r\n#       den = (den*(i+1))%mod\r\n#   return (num*pow(den,mod-2,mod))%mod\r\n# M = 1000000+1\r\n# pfc = [i for i in range(M+1)]\r\n# def pfcs(M):\r\n#     for i in range(2,M+1):\r\n#         if pfc[i]==i:\r\n#             for j in range(i+i,M+1,i):\r\n#                 if pfc[j]==j:\r\n#                     pfc[j] = i\r\n#     return\r\n#______________________________________________________\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    ans = 0 \r\n    for i in range(1,n+1):\r\n        d = i*i\r\n        if d>n:\r\n            break\r\n        if d%3!=0:\r\n            ans+=1\r\n    print(ans)", "# cook your dish here\nfrom math import sqrt\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    rad=int(sqrt(n))\n    div = rad//3\n    print(rad-div)", "for _ in range(int(input())):\r\n    n=int(input())\r\n    d=int(n**0.5)\r\n    a=d//3\r\n    print(d-a)", "x=[]\r\nfor i in range(1,31624):\r\n    if (i*i)%3!=0:\r\n        x.append(i*i)\r\n\r\nm= len(x)\r\nfor i in range(int(input())):\r\n    n= int(input())\r\n    if n<x[0]:\r\n        print(0)\r\n    elif n>x[-1]:\r\n        print(m)\r\n    else:\r\n        for j in range(m):\r\n            if x[j]>n:\r\n                break\r\n        print(j)\r\n\r\n\r\n", "from math import sqrt\r\n\r\nfor _ in range(int(input())):\r\n    N = int(input())\r\n    print(int(sqrt(N)) - int(sqrt(N / 9)))", "from sys import stdin\r\nfrom math import ceil, gcd\r\n\r\n# Input data\r\n#stdin = open(\"input\", \"r\")\r\n\r\n\r\ndef func():\r\n\r\n    return\r\n\r\nfor _ in range(int(stdin.readline())):\r\n    n = int(stdin.readline())\r\n    ans = 0\r\n    i = 1\r\n    while(i * i <= n):\r\n        if (i * i) % 3 != 0:\r\n            ans += 1\r\n        i += 1\r\n    print(ans)\r\n"]