["# cook your dish here\nfor i in range(int(input())):\n    n = int(input())\n    flag = 0\n    while(n>0):\n        if((n%10)%2 == 0):\n            flag = 1\n            break\n        n = n//10\n    if(flag == 0):\n        print(0)\n    else:\n        print(1)", "testcases=int(input())\r\nfor i in range(testcases):\r\n    n=input()\r\n    if(\"2\" in n or \"4\" in n or \"6\" in n or \"8\" in n or \"0\" in n):\r\n        print(1)\r\n    else:\r\n        print(0)", "import sys,io,os,math\nfrom math import ceil,log,gcd,inf\nfrom itertools import permutations\nmod=1000000007\nmod1=998244353\ndef printlist(n):\n    sys.stdout.write(\" \".join(map(str,n)) + \"\\n\")\nprintf=lambda n:sys.stdout.write(str(n)+\"\\n\")\ndef printns(n):\n    sys.stdout.write(str(n))   \ndef intinp():\n    return int(sys.stdin.readline())\ndef strinp():\n    return sys.stdin.readline()\ndef arrinp():\n    return list(map(int,sys.stdin.readline().strip().split()))\ndef mulinp():\n    return list(map(int,sys.stdin.readline().strip().split()))\ndef flush():\n    return sys.stdout.flush()\ndef power_two(x):\n    return (1<<x)\ndef lcm(a,b):\n\treturn a*b//gcd(a,b)   \ndef solve():\n        n=str(intinp())\n        for i in n:\n                if(int(i)%2==0):\n                        print(1)\n                        return 0\n        print(0)\n\n\n\ndef main():\n    tc=intinp()\n    while(tc):\n        solve()\n        tc-=1\t\n\t\nmain()\n\n", "from sys import *\r\ninput=stdin.readline\r\nfor i in range(int(input())):\r\n    n = int(input())\r\n    while n > 0:\r\n        r = n%10\r\n        if r%2 == 0:\r\n            print(1)\r\n            break\r\n        n = n // 10\r\n    else:\r\n        print(0)", "def solve(n):\r\n    while(n>0):\r\n        e=n%10\r\n        if(e%2==0):\r\n            return 1\r\n        n=n//10\r\n    return 0\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    print(solve(n))\r\n", "from sys import *\r\ninput=stdin.readline\r\nfor u in range(int(input())):\r\n    num = int(input())\r\n    while num > 0:\r\n        r = num%10\r\n        #print(r)\r\n        if r%2 == 0:\r\n            print(1)\r\n            break\r\n        num = num // 10\r\n    else:\r\n        print(0)", "for _ in range(int(input())):\n    s=input()\n    x='02468'\n    for i in x:\n        if i in s:\n            print(1)\n            break\n    else:\n        print(0)", "import sys\ninput = lambda : sys.stdin.readline()\nfor _ in range(int(input())):\n    k = int(input())\n    for i in str(k):\n        if int(i)%2 == 0:\n            print(\"1\")\n            break\n    else:\n        print(\"0\")", "from sys import *\ninput=stdin.readline\nfor u in range(int(input())):\n    n=int(input())\n    f=0\n    for i in str(n):\n        if(int(i)%2==0):\n            f=1\n            break\n    print(f)\n", "\r\nfor _ in range(int(input())):\r\n    k=input()\r\n    flag=0\r\n    a=['0','2','4','6','8']\r\n    for i in k:\r\n        if i in a:\r\n            flag=1\r\n            break\r\n    if flag==1 :\r\n        print(\"1\")\r\n    else:\r\n        print(\"0\")\r\n", "import sys\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\ninp = lambda: list(map(int,sys.stdin.readline().rstrip(\"\\r\\n\").split()))\r\n#______________________________________________________________________________________________________\r\n# from math import *\r\n# from bisect import *\r\n# from heapq import *\r\n# from collections import defaultdict as dd\r\n# from collections import OrderedDict as odict\r\nfrom collections import Counter as cc\r\n# from collections import deque\r\n# sys.setrecursionlimit(2*(10**5)+100) this is must for dfs\r\nmod = 10**9+7; md = 998244353\r\n# ______________________________________________________________________________________________________\r\n# segment tree for range minimum query\r\n# sys.setrecursionlimit(10**5)\r\n# n = int(input())\r\n# a = list(map(int,input().split()))\r\n# st = [float('inf') for i in range(4*len(a))]\r\n# def build(a,ind,start,end):\r\n#   if start == end:\r\n#       st[ind] = a[start]\r\n#   else:\r\n#       mid = (start+end)//2\r\n#       build(a,2*ind+1,start,mid)\r\n#       build(a,2*ind+2,mid+1,end)\r\n#       st[ind] = min(st[2*ind+1],st[2*ind+2])\r\n# build(a,0,0,n-1)\r\n# def query(ind,l,r,start,end):\r\n#   if start>r or end<l:\r\n#       return float('inf')\r\n#   if l<=start<=end<=r:\r\n#       return st[ind]\r\n#   mid = (start+end)//2\r\n#   return min(query(2*ind+1,l,r,start,mid),query(2*ind+2,l,r,mid+1,end))\r\n# ______________________________________________________________________________________________________\r\n# Checking prime in O(root(N))\r\n# def isprime(n):\r\n#     if (n % 2 == 0 and n > 2) or n == 1: return 0\r\n#     else:\r\n#         s = int(n**(0.5)) + 1\r\n#         for i in range(3, s, 2):\r\n#             if n % i == 0:\r\n#                 return 0\r\n#         return 1\r\n# def lcm(a,b):\r\n#   return (a*b)//gcd(a,b)\r\n# ______________________________________________________________________________________________________\r\n# nCr under mod\r\n# def C(n,r,mod):\r\n#   if r>n:\r\n#       return 0\r\n#   num = den = 1\r\n#   for i in range(r):\r\n#       num = (num*(n-i))%mod\r\n#       den = (den*(i+1))%mod\r\n#   return (num*pow(den,mod-2,mod))%mod\r\n# M = 10**5 +10\r\n# ______________________________________________________________________________________________________\r\n# For smallest prime factor of a number\r\n# M = 1000010\r\n# pfc = [i for i in range(M)]\r\n# def pfcs(M):\r\n#   for i in range(2,M):\r\n#       if pfc[i]==i:\r\n#           for j in range(i+i,M,i):\r\n#               if pfc[j]==j:\r\n#                   pfc[j] = i\r\n#   return\r\n# pfcs(M)\r\n# ______________________________________________________________________________________________________\r\ntc = 1\r\ntc, = inp()\r\nfor _ in range(tc):\r\n    n, = inp()\r\n    print(1 if any([int(i)%2==0 for i in str(n)]) else 0)", "def solution(n):\r\n    while(n):\r\n        if((n%10)&1==0):\r\n            return 1\r\n        else:\r\n            n=n//10\r\n    return 0\r\n\r\nfor i in range(int(input())):\r\n    n=int(input())\r\n    print(solution(n))", "for _ in range(int(input())):\n    s=input()\n    x='02468'\n    for i in x:\n        if i in s:\n            print(1)\n            break\n    else:\n        print(0)", "# cook your dish here\nfor k in range(int(input())):\n\ts = input()\n\tans = 0\n\tfor p in s:\n\t\tif (int(p) % 2) == 0:\n\t\t\tans = 1\n\t\t\tbreak\n\tprint(ans)", "try:\r\n    def check(n):\r\n        while(n!=0):\r\n            if (n%10)%2==0:\r\n                return 1\r\n            n//=10\r\n        return 0\r\n    t=int(input())\r\n    for _ in range(t):\r\n        n=int(input())\r\n        print(check(n))\r\nexcept EOFError:\r\n    pass", "# cook your dish here\nt=int(input())\nfor s in range(t):\n    k=int(input())\n    flag=0\n    while k>0:\n        digi=k%10\n        if digi%2==0:\n            flag=1\n            break\n        k=k//10\n    if flag==1:\n        print(1)\n    else:\n        print(0)", "t=int(input())\r\nwhile t>0:\r\n    n=int(input())\r\n    count=0\r\n    while n>0:\r\n        r=n%10\r\n        if r%2==0:\r\n            count=count+1\r\n            break\r\n        else:\r\n            n=n//10\r\n    if count==0:\r\n        print(\"0\")\r\n    else:\r\n        print(\"1\")\r\n    t=t-1\r\n\r\n\r\n", "for _ in range(int(input())):\r\n    r=int(input())\r\n    while(r!=0):\r\n        k=r%10\r\n        if(k%2==0):\r\n            print(\"1\")\r\n            break\r\n        r=r//10\r\n    else:\r\n        print(\"0\")", "'''\r\nSample Input:\r\n2\r\n19\r\n385\r\nSample Output:\r\n0\r\n1\r\n'''\r\nfor _ in range(int(input())):\r\n    ans = 0\r\n    for i in str(input()):\r\n        if i in [\"2\",\"4\",\"6\",\"8\",\"0\"]:\r\n            ans = 1\r\n            break\r\n    print(ans)        ", "import sys \r\nfrom math import log2\r\nfrom itertools import combinations \r\n\r\n#input = sys.stdin.readline\r\n#sys.stdin.readline()\r\n#sys.stdout.write(\"\\n\")\r\n\r\n# # For getting input from input.txt file\r\n# sys.stdin = open('Python_input1.txt', 'r')\r\n\r\n# # Printing the Output to output.txt file\r\n# sys.stdout = open('Python_output1.txt', 'w')\r\n\r\n\r\n\r\nfor _ in range(int(sys.stdin.readline())):\r\n\tn  =str(sys.stdin.readline())\r\n\tn = n[:-1]\r\n\t#print(n)\r\n\ttemp =0\r\n\t#print(n[0])\r\n\tfor i in range(len(n)):\r\n\t\t#print(n[i])\r\n\t\tif int(n[i])%2== 0:\r\n\t\t\ttemp = 1\r\n\tif temp:\r\n\t\tprint(1)\r\n\telse:\r\n\t\tprint(0)\r\n\r\n\r\n", "# cook your dish here\nn=int(input())\nls=[]\nfor _ in range(n):\n    ls.append(int(input()))\nfor ele in ls:\n    ele=str(ele)\n    ele=list(ele)\n    flag=0\n    for i in ele:\n        if(int(i)%2==0):\n            print(\"1\")\n            flag=1\n            break\n    if(flag==0):\n        print(\"0\")\n", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    p = input()\n    flag = False\n    z = ['0','2','4','6','8']\n    for ele in p:\n        # print(ele)\n        if ele in z:\n            print(1)\n            flag = True\n            break\n    if flag == False:\n        print(0)", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    p = input()\n    flag = False\n    z = ['0','2','4','6','8']\n    for ele in p:\n        # print(ele)\n        if ele in z:\n            print(1)\n            flag = True\n            break\n    if flag == False:\n        print(0)", "t=int(input())\nfor _ in range(0,t):\n    n=int(input().strip())\n    ok=False\n    while n>0:\n        rem= n % 10\n        #print(rem)\n        if rem % 2==0:\n            ok=True\n            break\n        else:\n            n=n//10\n    if ok ==  True:\n        print(\"1\")\n    else:\n        print(\"0\")"]