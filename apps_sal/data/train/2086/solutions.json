["import sys\ninput = sys.stdin.readline\n\n\nfrom collections import deque\nN, Q = list(map(int, input().split()))\nque = deque([int(a) for a in input().split()])\nma = max(que)\n\nX = []\nk = -1\nc = 0\nwhile c <= k+N+5:\n    a = deque.popleft(que)\n    b = deque.popleft(que)\n    \n    X.append((a, b))\n    c += 1\n    if a > b:\n        a, b = b, a\n    if k < 0 and b == ma:\n        k = c\n    deque.appendleft(que, b)\n    deque.append(que, a)\n\nfor _ in range(Q):\n    i = int(input()) - 1\n    if i <= k:\n        print(*X[i])\n    else:\n        i = (i-k)%(N-1)+k\n        print(*X[i])\n\n", "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\nn,q=list(map(int,input().split()))\nA=deque(list(map(int,input().split())))\nQ=[int(input()) for i in range(q)]\n\nANS=[0]\n\nfor l in range(10**5+1):\n    x=A.popleft()\n    y=A.popleft()\n\n    ANS.append((x,y))\n\n    if x>y:\n        A.appendleft(x)\n        A.append(y)\n    else:\n        A.appendleft(y)\n        A.append(x)\n\n\nANS0=A[0]\nB=list(A)[1:]\n\nfor q in Q:\n    if q<=10**5+1:\n        print(*ANS[q])\n    else:\n        print(ANS0,B[(q-10**5-2)%(n-1)])\n", "n, q = list(map(int, input().split()))\nnums = list(map(int, input().split()))\n\"\"\"\nalgo:\nstore the combos until the maximum element reaches the front of the deque\nthen the order of the rest of the deque only changes by 2nd element going to end\nso let cutoff = number of operation which causes the max element to reach front\nif mj <= cutoff then output mjth combo stored\nif mj > cutoff  then output = (max, (mj-cutoff-1)%(len-1)+1)\n\"\"\"\n\nm = max(nums)#max element\n# print(nums)\n# print(m)\nab = []\nwhile nums[0] < m:\n    ab.append([nums[0], nums[1]])\n    nums.append(nums.pop(1)) if nums[0]>nums[1] else nums.append(nums.pop(0))\n# print(ab)\n\nfor i in range(q):\n    mj = int(input())\n    a, b = list(map(str, ab[mj-1] if mj <= len(ab) else (m, nums[(mj-len(ab)-1)%(len(nums)-1) +1])))\n    print(a + \" \" + b)\n\n\n\n    \n", "from collections import deque\nn, q = list(map(int, input().split()))\na = deque(list(map(int, input().split())))\nb = []\nm = a.index(max(a))\nfor i in range(m):\n    a0, a1 = a.popleft(), a.popleft()\n    b.append([a0, a1])\n    if a0 < a1:\n        a0, a1 = a1, a0\n    a.appendleft(a0)\n    a.append(a1)\nfor i in range(q):\n    c = int(input())\n    if c <= m:\n        print('{} {}'.format(b[c-1][0], b[c-1][1]))\n    else:\n        c -= m+1\n        c %= n-1\n        print('{} {}'.format(a[0], a[c+1]))\n", "# import sys\n# input = sys.stdin.readline\nn,queries = list(map(int,input().split()))\nl = list(map(int,input().split()))\nif(queries==0):\n\treturn\nmaxval = max(l)\npairs = []\ncount = 0\nf = l[0]\nsecix = 1\nwhile(f!=maxval):\n\t# print(l)\n\tcount+=1\n\tf = l[0]\n\ts = l[secix]\n\tpairs.append([f,s])\n\tf,s= max(f,s), min(f,s)\n\tl[0] = f\n\tl.append(s)\n\tsecix+=1\n# print(secix)\nl = [l[0]]+l[secix:]\n# print(l)\nfor i in range(n-1):\n\tpairs.append([maxval,l[1+i]])\n# print(pairs)\nfor m in range(queries):\n\tq = int(input())\n\tif(q<=count):\n\t\tprint(str(pairs[q-1][0]),str(pairs[q-1][1]))\n\telse:\n\t\tq-=(count+1)\n\t\tpos = count+(q%(n-1))\n\t\tprint(str(pairs[pos][0]),str(pairs[pos][1]))", "[n, q] = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nstart = 0\nend = n-1\nres = [-1 for i in range(n+1)]\nr = None\nt = 0\nM = max(a)\nfor i in range(n):\n    if a[start] == M:\n        if start > end:\n            r = a[start+1:] + a[:end+1]\n        else:\n            r = a[start+1:end+1]\n        t = i\n        break\n    [A, B] = [a[start], a[(start+1)%n]]\n    res[i] = [A, B]\n    if A > B:\n        a[start], a[(start+1)%n] = a[(start+1)%n], a[start]\n    start = (start+1)%n\n    end = (end+1)%n\n\noutput = []\nfor x in range(q):\n    m = int(input()) - 1\n    if m >= t:\n        output.append([M, r[(m-t)%len(r)]])\n    else:\n        output.append(res[m])\n\nfor i in output:\n    print(i[0], i[1])", "n, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nk = max(a)\nspe = a.index(k)\npre = []\nfol = []\nboard = []\ntem = a[0]\ni = 1\nwhile i<=spe:\n    pre.append([tem, a[i]])\n    if tem>a[i]:\n        fol.append(a[i])\n    else:\n        fol.append(tem)\n        tem = a[i]\n    i+=1\nboard = a[spe:]\nboard.extend(fol)\nfor _ in range(q):\n    m = int(input())\n    if m<=spe:\n        print(pre[m-1][0], pre[m-1][1])\n    else:\n        m = (m-spe)%(n-1)\n        if m ==0:\n            m=n-1\n        print(k, board[m])\n", "from sys import stdin\ninput = stdin.readline\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nmax = 0\nt = []\nfor i in range(1, n):\n    if a[i] > a[max]:\n        max = i\nfor _ in range(max):\n    t.append([a[0], a[1]])\n    if a[0] >= a[1]:\n        a.append(a.pop(1))\n    else:\n        a.append(a.pop(0))\nfor _ in range(q):\n    m = int(input())\n    if m > max:\n        print(a[0], a[1+(m-max-1)%(n-1)])\n    else:\n        print(str(t[m-1][0]), str(t[m-1][1]))", "from sys import stdin\ninput = stdin.readline\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nmax = 0\nt = []\nfor i in range(1, n):\n    if a[i] > a[max]:\n        max = i\nfor _ in range(max):\n    t.append([a[0], a[1]])\n    if a[0] >= a[1]:\n        a.append(a.pop(1))\n    else:\n        a.append(a.pop(0))\nfor _ in range(q):\n    m = int(input())\n    if m > max:\n        print(a[0], a[1+(m-max-1)%(n-1)])\n    else:\n        print(str(t[m-1][0]), str(t[m-1][1]))", "import getpass\nimport sys\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n\nimport math\nimport string\nimport re\nimport random\nfrom decimal import Decimal, getcontext\nfrom collections import deque\n\nmod = 10 ** 9 + 7\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn, q = ria()\nar = ria()\nmx = max(ar)\nar = deque(ar)\n\nmxs = -1\nans = []\nfor i in range(n * 3):\n    a = ar.popleft()\n    b = ar.popleft()\n    ans.append([a, b])\n    if a == mx and mxs == -1:\n        mxs = i\n    if a > b:\n        ar.appendleft(a)\n        ar.append(b)\n    else:\n        ar.appendleft(b)\n        ar.append(a)\n# print(ans)\nfor i in range(q):\n    m = ria()[0]\n    m -= 1\n    if mxs >= m:\n        print(ans[m][0], ans[m][1])\n    else:\n        print(ans[(m - mxs) % (n - 1) + mxs][0], ans[(m - mxs) % (n - 1) + mxs][1])\n", "from collections import deque\nn, m = list(map(int, input().split()))\narr = deque(list(map(int, input().split())))\n\nmax_v = max(arr)\n\nans = []\nwhile arr[0] != max_v:\n    a = arr.popleft()\n    b = arr.popleft()\n    if a > b:\n        arr.appendleft(a)\n        arr.append(b)\n    else:\n        arr.appendleft(b)\n        arr.append(a)\n    ans.append((a, b))\n\nfor i in range(m):\n    q = int(input())\n    q -= 1\n    if q < len(ans):\n        print(*ans[q])\n    else:\n        print(arr[0], arr[(q-len(ans)) % (len(arr) - 1) + 1])\n", "from collections import deque\nn,q = list(map(int,input().split()))\na = deque(list(map(int,input().split())))\nM = [int(input()) for i in range(q)]\nm = sorted([ M[i] for i in range(q)])\nd = []\n\nif q == 0:\n    return\nma = max(a)\nc = 0\ncnt = 0\nfor i in range(n):\n    if a[0] == ma:\n        break\n    A = a.popleft()\n    B = a.popleft()\n    d.append([A,B])\n    if A > B:\n        a.appendleft(A)\n        a.append(B)\n    else:\n        a.appendleft(B)\n        a.append(A)\n\n    cnt += 1\ncnt += 1\nfor i in range(c,q):\n    if M[i] >= cnt:\n        print(ma, a[1 + ((M[i] - cnt) % (n-1))])\n    else:\n        print(d[M[i]-1][0],d[M[i]-1][1])\n", "n, q = list(map(int, input().split()))\ni = list(map(int, input().split()))\nd = {1: i[:2]}\nc = i.index(max(i))\nfor p in range(c + n - 1):\n    if i[0] > i[1]:\n        i.append(i[1])\n        i.pop(1)\n    elif i[0] <= i[1]:\n        i.append(i[0])\n        i.pop(0)\n    d[p + 2] = i[:2]\na = list(d)\nfor k in range(q):\n    x = int(input())\n    if x < (a[-1]):\n        print(*d[x])\n    else:\n        print(*d[c + 1 + ((x - c - 1) % (n - 1))])\n", "n, q = list(map(int, input().split()))\n\nfrom collections import deque\nd = deque(list(map(int, input().split())))\n\ncache = []\n\nfor i in range(n):\n  a,b = d.popleft(),d.popleft()\n  cache.append((a,b))\n\n  if a>b:\n    d.appendleft(a)\n    d.append(b)\n  else:\n    d.appendleft(b)\n    d.append(a)\n\na = list(d)\n\n\nfor _ in range(q):\n  m = int(input())\n  if m <= n:\n    print(*cache[m-1])\n  else:\n    m -= n + 1\n    m %= n - 1\n    print(a[0], a[m + 1])\n\n", "from collections import deque\nn,m = map(int,input().split())\nt_deq = deque(list(map(int,input().split())))\nt_quer = [int(input()) for x in range(m)]\na = max(t_deq)\nt_wyn = []\ncount = 1\nl_t_deq = len(t_deq)-1\nwhile True:\n    t_wyn.append([t_deq[0], t_deq[1]])\n    if t_deq[0] < t_deq[1]:\n        t_deq.append(t_deq.popleft())\n    else:\n        c = t_deq.popleft()\n        t_deq.append(t_deq.popleft())\n        t_deq.appendleft(c)\n    count += 1\n    if t_deq[0]==a:\n        break\nfor x in t_quer:\n    if x<count:\n        print(t_wyn[x-1][0], t_wyn[x-1][1])\n    else:\n        co = (x - count)%l_t_deq\n        print(t_deq[0], t_deq[co+1])", "from collections import deque\nn,q=list(map(int,input().split()))\na=list(map(int,input().split()))\nm=max(a)\ndq=deque()\nfor i in a:\n    dq.append(i)\nans=[]\nwhile dq[0]!=m:\n    x=dq.popleft()\n    y=dq.popleft()\n    ans.append((x,y))\n    if x>y:\n        dq.appendleft(x)\n        dq.append(y)\n    else:\n        dq.appendleft(y)\n        dq.append(x)\ntemp=list(dq)[1:]\nfor _ in range(q):\n    x=int(input())\n    if x<=len(ans):\n        print(*ans[x-1])\n    else:\n        print(m,temp[(x-len(ans)-1)%len(temp)])\n#print(ans)\n", "from collections import deque\nn, q = map(int,  input().split())\na = deque(int(i) for i in input().split())\nMmax = max(a)\nans = {}\nindex = 0\nwhile True:\n    first = a.popleft()\n    second = a.popleft()\n    if first == Mmax:\n        a.appendleft(second)\n        a.appendleft(first)\n        break\n    else:\n        a.append(min(first, second))\n        a.appendleft(max(first, second))\n        index += 1\n        ans[index] = (first, second)\nM = a.popleft()\nnow = list(a)\nfor i in range(q):\n    x = int(input())\n    if x <= index:\n        print(*ans[x])\n    else:\n        x -= index\n        print(M, now[x %len(now) - 1])", "from collections import deque\nn, q = map(int,  input().split())\na = deque(int(i) for i in input().split())\nMmax = max(a)\nans = {}\nindex = 0\nwhile True:\n    first = a.popleft()\n    second = a.popleft()\n    if first == Mmax:\n        a.appendleft(second)\n        a.appendleft(first)\n        break\n    else:\n        a.append(min(first, second))\n        a.appendleft(max(first, second))\n        index += 1\n        ans[index] = (first, second)\nM = a.popleft()\nnow = list(a)\nfor i in range(q):\n    x = int(input())\n    if x <= index:\n        print(*ans[x])\n    else:\n        x -= index\n        print(M, now[x %len(now) - 1])", "import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\nn, q = list(map(int, input().split()))\na = list(map(int, input().split()))\nM = max(a)\na = deque(a)\ncnt = 0\nans = [(-1, -1)]\n\nwhile True:\n    if a[0]==M:\n        break\n    \n    A = a.popleft()\n    B = a.popleft()\n    ans.append((A, B))\n    \n    if A>B:\n        a.appendleft(A)\n        a.append(B)\n    else:\n        a.appendleft(B)\n        a.append(A)\n    \n    cnt += 1\n\nfor _ in range(q):\n    m = int(input())\n    \n    if m<=len(ans)-1:\n        print(ans[m][0], ans[m][1])\n    else:\n        print(M, a[(m-cnt-1)%(n-1)+1])\n"]