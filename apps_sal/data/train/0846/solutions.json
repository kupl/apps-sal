["K,A,B = map(int,input().split())\r\n \r\nif A + 2 > B:\r\n    print(K + 1)\r\n    return\r\n \r\nstart = A - 1\r\nK -= start\r\nans = K//2 * (B-A) + K%2 + start + 1\r\nprint(ans)", "import sys\r\n# sys.stdin = open('input.txt', 'r') \r\n# sys.stdout = open('output.txt', 'w')\r\n \r\nimport math\r\nimport collections\r\nfrom sys import stdin,stdout,setrecursionlimit\r\nimport bisect as bs\r\nsetrecursionlimit(2**20)\r\nM = 10**9+7\r\n\r\n# T = int(stdin.readline())\r\nT = 1\r\n\r\nfor _ in range(T):\r\n    # n = int(stdin.readline())\r\n    n,a,b = list(map(int,stdin.readline().split()))\r\n    # h = list(map(int,stdin.readline().split()))\r\n    # q = int(stdin.readline())\r\n    # a = list(map(int,stdin.readline().split()))\r\n    # b = list(map(int,stdin.readline().split()))\r\n    if(a>(n-1)):\r\n        print(n+1)\r\n        continue\r\n    if(b-a-2>0):\r\n        ans = a\r\n        op = n-(a-1)\r\n        ans += (op//2)*(b-a)\r\n        ans += (op%2)\r\n        print(ans)\r\n        continue\r\n    print(n+1)", "import sys\nimport math,bisect\nsys.setrecursionlimit(10 ** 5)\nfrom collections import defaultdict\nfrom itertools import groupby,accumulate\nfrom heapq import heapify,heappop,heappush\nfrom collections import deque,Counter,OrderedDict\ndef I(): return int(sys.stdin.readline())\ndef neo(): return list(map(int, sys.stdin.readline().split()))\ndef Neo(): return list(map(int, sys.stdin.readline().split()))\nk,a,b = neo()\nif k+1 < a:\n    print(k+1)\n    return\nk -= a-1\nq = a+k\nif b > a:\n    t = k//2\n    a += (b-a)*t\n    if k-t*2 > 0:\n        a += 1\n    print(max(a,q))\n    return\nprint(q)\n", "import sys\nimport math\nfrom collections import defaultdict,Counter\n\n# input=sys.stdin.readline\n# def print(x):\n#     sys.stdout.write(str(x)+\"\\n\")\n\n# sys.stdout=open(\"CP3/output.txt\",'w')\n# sys.stdin=open(\"CP3/input.txt\",'r')\n\n# mod=pow(10,9)+7\nk,a,b=list(map(int,input().split()))\nif b<=a+2 or k<=a:\n\tans=1+k\nelse:\n\tk-=a-1\n\tans=a+k//2*(b-a)\n\tif k&1:\n\t\tans+=1\nprint(ans)\n", "k, a, b = map(int, input().split())\nif (b-a) <= 2: print(k+1)\nelse:\n    count = a\n    k = k-(a-1)\n    count += (b-a)*(k>>1)\n    count += k&1\n    print(count)", "import sys\nimport math\n#from queue import *\nimport random\n#sys.setrecursionlimit(int(1e6))\ninput = sys.stdin.readline\n \n############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\ndef inp():\n    return(int(input()))\ndef inara():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(list(map(int,input().split())))\n################################################################\n############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\n\nk,a,b=invr()\n\nif k<a-1:\n\tprint(1+k)\n\treturn\n\nnow=a\nk-=(a-1)\n\nif b-a>=3:\n\tnow=a+(k//2)*(b-a)+k%2\nelse:\n\tnow=a+k\n\nprint(now)\n\t\n\t\t\n", "import sys     \nimport math as mt\nimport bisect\ninput=sys.stdin.readline\n#t=int(input())\nt=1  \n  \n            \n   \nfor _ in range(t):\n    #n=int(input())\n    #n,k=map(int,input().split())\n    k,a,b=list(map(int,input().split()))\n    #n,h=(map(int,input().split()))\n    #l1=list(map(int,input().split()))\n    #l2=list(map(int,input().split()))\n    #mat=[[0 for j in range(c+1)] for i in range(r+1)]\n    ans=k+1\n    ans1=1\n    op1=min(a-ans1,k)\n    k-=op1\n    if k>0:\n        ex=k//2\n        ans1=(a+ex*(b-a))\n        if k%2!=0:\n            ans1+=1\n    print(max(ans,ans1))        \n"]