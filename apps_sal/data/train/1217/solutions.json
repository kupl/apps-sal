["def fun(a,cur,n,cnt):\n    if cur>=n-1:\n        return\n    for i in range(cur,n-1):\n        if i<n-2:\n            if a[i]>0 and a[i+1]>0:\n                a[i]-=1\n                a[i+1]-=1\n                a[i+2]+=1\n                cnt[0]=(cnt[0]+1)%1000000007\n                fun(a,i,n,cnt)\n                a[i]+=1\n                a[i+1]+=1\n                a[i+2]-=1\n        else:\n            if a[i]>0 and a[i+1]>0:\n                a[i]-=1\n                a[i+1]-=1\n                a.append(1)\n                cnt[0]=(cnt[0]+1)%1000000007\n                fun(a,i,n+1,cnt)\n                a[i]+=1\n                a[i+1]+=1\n                a.pop()\ntc=int(input())\nfor case in range(tc):\n    n=int(input())\n    a=list(map(int,input().split()))\n    cnt=[1]\n    fun(a,0,n,cnt)\n    print(cnt[0]%1000000007)\n    \n", "def fun(a,cur,n,cnt):\n    if cur>=n-1:\n        return\n    for i in range(cur,n-1):\n        if i<n-2:\n            if a[i]>0 and a[i+1]>0:\n                a[i]-=1\n                a[i+1]-=1\n                a[i+2]+=1\n                cnt[0]+=1\n                fun(a,i,n,cnt)\n                a[i]+=1\n                a[i+1]+=1\n                a[i+2]-=1\n        else:\n            if a[i]>0 and a[i+1]>0:\n                a[i]-=1\n                a[i+1]-=1\n                a.append(1)\n                cnt[0]+=1\n                fun(a,i,n+1,cnt)\n                a[i]+=1\n                a[i+1]+=1\n                a.pop()\ntc=int(input())\nfor case in range(tc):\n    n=int(input())\n    a=list(map(int,input().split()))\n    cnt=[1]\n    fun(a,0,n,cnt)\n    print(cnt[0])\n    \n", "from sys import stdin\n \nmod = 10**9 + 7\nmax_val = 135\n\ncache2 = [[0]*max_val for _ in range(max_val)]\ndone = [[False]*max_val for _ in range(max_val)]\ndef f2(x, y):\n\tif done[x][y]:\n\t\tres = cache2[x][y]\n\telif x == 0 or y == 0:\n\t\tres = 1\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\telif x > y:\n\t\tres = f2(y, y)\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\telse:\n\t\tres = sum(f2(y-i, i) for i in range(x+1))\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\treturn res % mod\n \ndef solve():\n\tn = int(stdin.readline().strip())\n\ta = list(map(int, stdin.readline().strip().split()))\n\t\n\tcache = [[[0]*max_val for _ in range(max_val)] for _ in range(51)]\n\tdone = [[[False]*max_val for _ in range(max_val)] for _ in range(51)]\n\tdef f(i, x, y):\n\t\tif done[i][x][y]:\n\t\t\tres = cache[i][x][y]\n\t\telif i == n-1:\n\t\t\tres = 1\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telif i == n-2:\n\t\t\tres = f2(x, y)\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telif x == 0:\n\t\t\tres = f(i+1, y, a[i+2])\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telse:\n\t\t\tk = min(x, y)\n\t\t\tres = 0\n\t\t\tfor z in range(k+1):\n\t\t\t\tres += f(i+1, y-z, a[i+2]+z)\n\t\t\t\tres %= mod\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\t\n\t\treturn res % mod\n\t\n\tprint(f(0, a[0], a[1]) if n >= 2 else 1)\n \nt = int(stdin.readline().strip())\nfor _ in range(t):\n\tsolve()", "from sys import stdin\n \nmod = 10**9 + 7\n\t\ncache2 = [[0]*501 for _ in range(501)]\ndone = [[False]*501 for _ in range(501)]\ndef f2(x, y):\n\tif done[x][y]:\n\t\tres = cache2[x][y]\n\telif x == 0 or y == 0:\n\t\tres = 1\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\telif x > y:\n\t\tres = f2(y, y)\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\telse:\n\t\tres = sum(f2(y-i, i) for i in range(x+1))\n\t\tcache2[x][y] = res\n\t\tdone[x][y] = True\n\treturn res % mod\n \ndef solve():\n\tn = int(stdin.readline().strip())\n\ta = list(map(int, stdin.readline().strip().split()))\n\t\n\tcache = [[[0]*501 for _ in range(501)] for _ in range(51)]\n\tdone = [[[False]*501 for _ in range(501)] for _ in range(51)]\n\tdef f(i, x, y):\n\t\tif done[i][x][y]:\n\t\t\tres = cache[i][x][y]\n\t\telif i == n-1:\n\t\t\tres = 1\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telif i == n-2:\n\t\t\tres = f2(x, y)\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telif x == 0:\n\t\t\tres = f(i+1, y, a[i+2])\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\n\t\telse:\n\t\t\tk = min(x, y)\n\t\t\tres = 0\n\t\t\tfor z in range(k+1):\n\t\t\t\tres += f(i+1, y-z, a[i+2]+z)\n\t\t\t\tres %= mod\n\t\t\tcache[i][x][y] = res\n\t\t\tdone[i][x][y] = True\t\n\t\treturn res % mod\n\t\n\tprint(f(0, a[0], a[1]) if n >= 2 else 1)\n \nt = int(stdin.readline().strip())\nfor _ in range(t):\n\tsolve()", "import pdb\n\n           \ndef gen_sig(arr):\n    sig = ';'.join(map(str,arr))\n    return sig\n\ndef solve(arr,cache):\n    l = len(arr)\n    cnt =0\n    for i in range(l-1):\n        if arr[i] >0 and arr[i+1]>0:\n            if i == l-2:\n                arr[i]-=1\n                arr[i+1]-=1\n                arr.append(1)\n                sig = gen_sig(arr)\n                if (sig in cache) == False:\n                    cache[sig]=1\n                    ret = solve(arr,cache)\n                    if ret >=0:\n                        cnt+=ret+1\n                arr.pop(-1)\n                arr[i+1]+=1\n                arr[i]+=1\n            else:\n                arr[i]-=1\n                arr[i+1]-=1\n                arr[i+2]+=1\n                sig = gen_sig(arr)\n                if (sig in cache) == False:\n                    cache[sig]=1\n                    ret = solve(arr,cache)\n                    if ret >=0:\n                        cnt+=ret+1\n                arr[i]+=1\n                arr[i+1]+=1\n                arr[i+2]-=1\n    #cache[gen_sig(arr)] = cnt\n    return cnt\n\ndef __starting_point():\n    T = int(input())\n    for t  in range(T):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        cache = {}\n        cache[gen_sig(arr)]=1\n        solve(arr,cache)\n        print(len(cache))\n\n__starting_point()"]