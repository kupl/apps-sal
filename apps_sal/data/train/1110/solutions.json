["# cook your dish here\nfor _ in range(int(input())):\n    n=int(input());li=list(map(int,input().split()));dli=dict();modi=0\n    for i in li:\n     if i not in dli:dli[i]=1\n     else:dli[i]+=1\n    op=sorted(list(dli))\n    if(len(dli)!=0):\n     while 1:\n      tmp=[]\n      for i in op:\n       if dli[i]==0:continue\n       tmp.append(i);dli[i]-=1\n      l=len(tmp);mn=l\n      for i in range(l):mn=min(mn,tmp[i]-1-i+l-1-i)\n      modi+=mn\n      if(l==0):break\n    print(modi)", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input());li=list(map(int,input().split()));dli=dict();modi=0\n    for i in li:\n     if i not in dli:dli[i]=1\n     else:dli[i]+=1\n    op=sorted(list(dli))\n    if(len(dli)!=0):\n     while 1:\n      tmp=[]\n      for i in op:\n       if dli[i]==0:continue\n       tmp.append(i);dli[i]-=1\n      l=len(tmp);mn=l\n      for i in range(l):mn=min(mn,tmp[i]-1-i+l-1-i)\n      modi+=mn\n      if(l==0):break\n    print(modi)", "for _ in range(int(input())):\n    n=int(input());li=list(map(int,input().split()));dli=dict();modi=0\n    for i in li:\n     if i not in dli:dli[i]=1\n     else:dli[i]+=1\n    op=sorted(list(dli))\n    if(len(dli)!=0):\n     while 1:\n      tmp=[]\n      for i in op:\n       if dli[i]==0:continue\n       tmp.append(i);dli[i]-=1\n      l=len(tmp);mn=l\n      for i in range(l):mn=min(mn,tmp[i]-1-i+l-1-i)\n      modi+=mn\n      if(l==0):break\n    print(modi)", "\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cost = 0\n\n    dp = [[] for val in range(2*n+1)]\n    cnt = [0]*(n*2+1)\n    dp[0].extend( [ 0 for val in range(n*2+1) ])\n\n    for val in a:\n     if val<=2*n: cnt[val]+=1\n     else: cost+=1\n \n    for i in range(1, n*2+1):\n     rn = n*2//i\n     dp[i].extend([ 0 for val in range(rn+1) ])\n     for j in range(0, rn+1):\n      dp[i][j] = dp[i-1][j] + abs(cnt[i]-j) \n     for j in range(rn-1, -1, -1):\n      dp[i][j] = min(dp[i][j], dp[i][j+1])\n \n    print( cost+min( dp[2*n][0], dp[2*n][1]) )\n\n", "\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    cost = 0\n\n    dp = [[] for val in range(2*n+1)]\n    cnt = [0]*(n*2+1)\n    dp[0].extend([ 0 for val in range(n*2+1) ])\n\n    for val in a:\n     if val<=2*n: cnt[val]+=1\n     else: cost+=1\n \n    for i in range(1, n*2+1):\n     rn = n*2//i\n     for j in range(0, rn+1):\n      dp[i].extend( [ dp[i-1][j] + abs(cnt[i]-j) ] )\n     for j in range(rn-1, -1, -1):\n      dp[i][j] = min(dp[i][j], dp[i][j+1])\n \n    print( cost+min( dp[2*n][0], dp[2*n][1]) )\n\n", "for _ in range(int(input())):\n    n=int(input())\n    li=list(map(int,input().split()))\n    li.sort()\n    dli=dict()\n    modi=0\n    #2*n optimiztion \n    for i in li:\n     if i not in dli:\n      dli[i]=li.count(i)\n    if(len(dli)!=0):\n     while 1:\n      tmp=[]\n      for i in dli:\n       if dli[i]==0:\n        continue\n       tmp.append(i)\n       dli[i]-=1\n      l=len(tmp)\n      mn=l\n      for i in range(l):\n       mn=min(mn,tmp[i]-1-i+l-1-i)\n      modi+=mn\n      if(l==0):\n       break\n    print(modi)"]