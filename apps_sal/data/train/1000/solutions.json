["# cook your dish here\nfrom math import ceil\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ans=ceil(n/min(a))\n    print(int(ans))", "from math import *\nfor i in range(int(input())):\n    n=int(input())\n    arr=[int(i) for i in input().split()]\n    print(ceil(n/min(arr)))", "import math\nt=int(input())\nwhile t:\n    t=t-1\n    n=int(input())\n    a=list(map(int,input().split()))\n    print(math.ceil(n/min(a)))", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    mi=min(l)\n    ans=n/mi\n    if(ans==int(ans)):\n        print(int(ans))\n    else:\n        print(int(ans)+1)", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    mi=min(l)\n    ans=n/mi\n    if(ans==int(ans)):\n        print(int(ans))\n    else:\n        print(int(ans)+1)", "# cook your dish here\nfrom math import ceil\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    m = min(arr)\n    print(ceil(n/m))", "import math\nfor i in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    print(math.ceil(n/min(l)))", "try:\n    t=int(input())\n    for _ in range(t):\n        n=int(input())\n        l=list(map(int,input().split()))\n        x=min(l)\n        if(n//x == n/x):\n            print(n//x)\n        else:\n            print((n//x)+1)\nexcept:\n    pass\n", "from math import ceil\r\ng = int(input())\r\nfor i in range(g):\r\n    a = int(input())\r\n    l = list(map(int,input().split()))\r\n    print(ceil(a/min(l)))", "from math import ceil\r\ng = int(input())\r\nfor i in range(g):\r\n    a = int(input())\r\n    l = list(map(int,input().split()))\r\n    print(ceil(a/min(l)))", "# cook your dish here\nfrom math import ceil\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    print(ceil(n/min(a)))", "# cook your dish here\nimport math\nt=int(input())\nwhile(t>0):\n    t-=1 \n    n=int(input())\n    a=list(map(int,input().split()))\n    m=min(a)\n    ans=n/m\n    print(math.ceil(ans))", "# cook your dish here\nT=int(input())\nfrom math import ceil\nfor _ in range(T):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    min1=min(arr)\n    x=ceil(n/min1)\n    print(x)\n", "# cook your dish here\nt=int(input())\nwhile t>0:\n    t-=1 \n    n=int(input())\n    l=list(map(int,input().split()))\n    a=min(l)\n    h=n/a\n    f=n//a\n    if f==h:\n        print(f)\n    else:\n        print(f+1)", "for _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    l=[]\n    for i in range(n):\n        t=n/arr[i]\n        if t == int(t):\n            l.append(int(t))\n        else:\n            l.append(int(t+1))\n    print(max(l))\n    \n", "import math\n\nt = int(input())\nwhile t:\n    t -= 1\n    n = int(input())\n    l = input().split()\n    l = [ int(i) for i in l ]\n    print(math.ceil(n/min(l)))", "# cook your dish here\nt = int(input())\nwhile t:\n    n = int(input())\n    arr = list(map(int, input().split()))\n    m = 0\n    for i in arr:\n        k = n/i\n        if k != int(k):\n            k = int(k) + 1\n        if k > m:\n            m = k\n    print(int(m))\n    t -=  1", "import math\nt = int(input())\nfor _ in range(0,t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    val = a[0]\n    index = 0\n    for i in range(0,len(a)):\n        if a[i]<val:\n            val = a[i]\n            index = i\n    print(math.ceil((n)/val))\n", "# your code goes here\nimport math\nt = int(input())\nfor i  in range(t):\n\ta = int(input())\n\tval = input().split()\n\tval = [int(x) for x in val]\n\tans = a/min(val)\n\tprint(math.ceil(ans))\n", "from collections import Counter\nimport string\nimport math\nimport sys\n# sys.setrecursionlimit(10**6) \nfrom fractions import Fraction\ndef array_int():\n    return [int(i) for i in sys.stdin.readline().split()]\ndef vary(arrber_of_variables):\n    if arrber_of_variables==1:\n        return int(sys.stdin.readline())\n    if arrber_of_variables>=2:\n        return list(map(int,sys.stdin.readline().split())) \ndef makedict(var):\n    return dict(Counter(var))\n# i am noob wanted to be better and trying hard for that\ndef printDivisors(n): \n    divisors=[]  \n    # Note that this loop runs till square root \n    i = 1\n    while i <= math.sqrt(n):\n        if (n % i == 0):\n            # If divisors are equal, print only one \n            if (n//i == i) : \n                divisors.append(i) \n            else : \n                # Otherwise print both \n                divisors.extend((i,n//i)) \n        i = i + 1\n    return divisors\ndef countTotalBits(num):\n     binary = bin(num)[2:]\n     return(len(binary))\ndef isPrime(n):\n    # Corner cases \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n    # This is checked so that we can skip  \n    # middle five numbers in below loop \n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\"\"\" mod=10**9+7\ndef ncr(n,r):\n    if n<r:\n        return 0\n    numer=fact[n]\n    # print(numer)\n    denm=(fact[n-r]*fact[r])\n    # print(denm)\n    return numer*pow(denm,mod-2,mod) \"\"\"\n\"\"\" def dfs(node):\n    nonlocal graph\n    mex=0\n    size=1\n    for i in graph[node]:\n        t=dfs(i)\n        mex=max(mex,t[0])\n        size+=t[1]\n    return [mex+size,size] \"\"\"\n\"\"\" fact=[1]*(1001)\nc=1 \nmod=10**9+7\nfor i in range(1,1001):\n    fact[i]=(fact[i-1]*i)%mod \"\"\"\n# print(fact)\ndef comp(x):\n    return x[1]\nfor _ in range(vary(1)):\n    n=vary(1)\n    num=array_int()\n    print(math.ceil(n/min(num)))\n\n", "import math\n\nfor test in range(int(input())):\n    length = int(input())\n    smallest = min([int(x) for x in input().split()])\n    print(math.ceil(length/smallest))", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    mi=min(l)\n    ans=n/mi\n    if(ans==int(ans)):\n        print(int(ans))\n    else:\n        print(int(ans)+1)\n\n\n\n\n\n\n\n\n\n\n", "import math\r\nT=int(input())\r\nfor i in range(T):\r\n\tn=int(input())\r\n\tl=[int(x) for x in input().split()]\r\n\ts=math.ceil(n/min(l))\r\n\tprint(s)", "# cook your dish here\nimport math\nt=int(input())\nwhile(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    print(math.ceil(n/min(arr)))\n    \n    t-=1"]