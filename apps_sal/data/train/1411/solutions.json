["# cook your dish here\nimport math\ndef swap(a,b):\n return b,a\n\nt = int(input())\nwhile(t!=0):\n z = list(map(int,input().strip().split(\" \")))\n x=z[0]\n r=z[1]\n a=z[2]\n b=z[3]\n #p = math.pi\n peri = 2*r\n tp = x*peri\n \n if(a<b):\n  a,b=swap(a,b)\n t1 = tp/a\n d2 = t1* b\n dd = abs(tp-d2)\n \n if(dd%peri==0):\n  print(int(dd//peri)-1)\n else:\n  n = int(dd//peri)\n  print(n)\n t-=1", "# cook your dish here\nt=int(input())\nk=0\nfor i in range(0,t):\n x,r,a,b=map(int,input().split(\" \"))\n if(a<b):\n  c=r/b\n  d=c*(b-a)\n  e=d*x\n  f=int(e/r)\n  g=e%r\n  if(g==0):\n   print(f-1)\n  else:\n   print(f)\n else:\n  c=r/a\n  d=c*(a-b)\n  e=d*x\n  f=int(e/r)\n  g=e%r\n  if(g==0):\n   print(f-1)\n  else:\n   print(f)", "# cook your dish here\nimport re\nfor t in range(int(input())):\n list = re.findall('[0-9]+', input())\n a = (max(int(list[2]), int(list[3])))\n b = (min(int(list[2]), int(list[3])))\n x = int(list[0])\n r2 = int(b*x/a)\n print(x - r2 - 1)", "# cook your dish here\nimport numpy as np\n# import math.pi as pi\n\nT = int(input())\nfor i in range(T):\n S = input().split(' ')\n X = int(S[0])\n R = int(S[1])\n A = int(S[2])\n B = int(S[3])\n d = int(abs(A-B)*X/max(A,B))\n if(X*abs(A-B)%max(A,B) == 0):\n  d = d-1\n print(d)\n", "# cook your dish here\n\nt = int(input())\nfor z in range(t):\n x,r,a,b = list(map(int,input().split()))\n d = abs(a-b)\n if(d==0):\n  print(\"0\")\n else:\n  count = 0\n  mt = (x*r*1.0)/max(a,b)*1.0\n  dmt = r*1.0/d*1.0\n  ans = int(mt*1.0/dmt*1.0)\n  if(ans*dmt*1.0==(mt)):\n   #print('Test')\n   print(int(ans-1))\n  else:\n   print(int(ans))\n \n", "# cook your dish here\nfor _ in range(int(input())):\n \n x,r,a,b = map(int,input().split())\n \n print(x - 1 - x*min(a,b)//max(a,b))", "t = int(input())\nwhile(t!=0):\n rounds,r,x,y = list(map(int,input().split()))\n rv = abs(x-y)\n mv = max(x,y)\n ans = rounds*(rv/mv)\n if(ans-int(ans)==0):\n  print(int(ans)-1)\n else:\n  print(int(ans))\n t=t-1;\n", "# cook your dish here\nt=int(input(\"\"))\nfor i in range(t):\n x,r,a,b=map(int,input().split())\n win=max(a,b)\n rel=abs(a-b)\n d=(rel*x)/win\n if(d==int(d)):\n  print(int(d-1))\n else:\n  print(int(d))", "import math\nz=int(input())\nfor _ in range(z):\n [x,r,a,b]=[int(y) for y in input().split()]\n #T=(x/max(a,b))\n #t=1/(abs(b-a))\n\n if x*min(a,b)==max(a,b):\n  print(x-2)\n else:\n  if (x*abs(b-a))%(max(a,b))==0:\n   print(math.floor((x*abs(a-b))/max(a,b))-1)\n  else:\n   print(math.floor((x*abs(a-b))/max(a,b))) \n", "t=int(input())\nwhile(t):\n t=t-1\n x,r,a,b=input().split()\n x=int(x)\n r=int(r)\n a=int(a)\n b=int(b)\n \n le=3.1415926*2*r*x\n rel=abs(a-b)\n m=le/rel\n hr=le/max(a,b)\n hr=hr*x\n print(int(hr/m-0.0001))", "#lannisters don't act like fools\n\n\n'''And who are you, the proud lord said,\nThat I must bow so low?\nOnly a cat of a different coat,\nThat's all the truth I know.\nIn a coat of gold or a coat of red,\nA lion still has claws,\nAnd mine are long and sharp, my lord,\nAs long and sharp as yours.\nAnd so he spoke, and so he spoke,\nThat lord of Castamere,\nBut now the rains weep o'er his hall,\nWith no one there to hear.\nYes now the rains weep o'er his hall,\nAnd not a soul to hear.'''\n\n\n\n\n\n\n\n\n\n\n\n\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n z = input().split()\n x = int(z[0])\n r = int(z[1])\n a = int(z[2])\n b = int(z[3])\n length = 2*math.pi*r\n if b>a:\n  temp = a\n  a = b\n  b = temp\n first_meet = length/(a-b)\n total_time = (x*length)/a\n if(first_meet == total_time):\n  ans = 0\n else:\n  ans = int(total_time/first_meet)\n print(ans)\n\n", "from math import pi as p\nfrom math import gcd,ceil\nt = int(input())\nwhile t>0:\n t-=1\n x,r,a,b = map(int,input().split())\n cir = 2*p*r\n t1 = cir/a\n t2 = cir/b\n tf = cir/abs(a-b)\n s = min(t1,t2)*x\n s = s/tf\n # op = (min(t1,t2)*x)//tf\n s = ceil(s)\n print(s-1)", "#In the Name of God\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n z = input().split()\n x = int(z[0])\n r = int(z[1])\n a = int(z[2])\n b = int(z[3])\n length = 2*math.pi*r\n if b>a:\n  temp = a\n  a = b\n  b = temp\n first_meet = length/(a-b)\n total_time = (x*length)/a\n if(first_meet == total_time):\n  ans = 0\n else:\n  ans = int(total_time/first_meet)\n print(ans)", "# cook your dish here\ntry:\n t=int(input())\n for _ in range(t):\n  x,r,A,B=map(int,input().split())\n  if(A<B):\n   A,B=B,A\n  q=2*(22/7)*r\n  t=(q/abs(A-B))*A\n  d=x*q\n  ans=d/t\n  if(ans==int(ans)):\n   print(int(ans)-1)\n  else:\n   print(int(ans))\nexcept:\n pass", "# cook your dish here\ndef solve():\n x,r,a,b=map(int,input().split())\n d=2*3.14*r \n td=x*d \n fm=d/abs(a-b)\n temp=fm*max(a,b)\n if td%temp==0:\n  return int(td//temp)-1\n else:\n  return int(td//temp)\n\nt=int(input())\nfor loop in range(t):\n print(solve())", "# cook your dish here\na=int(input())\nfor i in range(0,a):\n x,r,a,b=map(int,input().split())\n maxx=max(a,b)\n minn=min(a,b)\n ans=x-x*(minn/maxx)\n if(ans-int(ans)==0):\n  ans=ans-1 \n else:\n  ans=int(ans)\n print(int(ans))", "import math\n\nfor _ in range(int(input())):\n x,r,a,b = list(map(int,input().split()))\n s1 = max(a,b)\n s2 = min(a,b)\n circum = 2 * math.pi * r\n total_dist = circum * x\n total_time = total_dist / s1\n first_interaction = circum / (s1 - s2)\n ans = int(total_time / first_interaction)\n if(total_time != first_interaction):\n  print(ans)\n else:\n  print(max(ans-1,0))", "t=int(input())\nwhile t>0:\n x,r,a,b=map(int,input().split())\n val=((x*abs(a-b))//(max(a,b)))\n rem=((x*abs(a-b))%(max(a,b)))\n if rem==0:\n  print(val-1)\n else:\n  print(val)\n t-=1", "\nfor _ in range(int(input())):\n x,r,a,b = map(int,input().split())\n c = max(a,b)\n ans = x*abs(b-a)\n if ans % c==0:\n  print(ans//c -1)\n else:\n  print(ans//c)", "import math\ndef fun(X,R,A,B):\n if A>B:\n  if (X*(A-B))%A==0:\n   return max((X*(A-B)//A)-1,0)\n  else:\n   return X*(A-B)//A\n elif B>A:\n  if (X*(B-A))%B==0:\n   return max((X*(B-A)//B)-1,0)\n  else:\n   return X*(B-A)//B\n else:\n  return 0\n\nfor _ in range(int(input())):\n X,R,A,B = list(map(int,input().strip().split()))\n print(fun(X,R,A,B))\n", "def main():\n x, r, a, b = list(map(int, input().split()))\n num_meets = int(x*abs(a-b)/max(a, b))\n if (x*(a-b)) % max(a, b) == 0:\n  num_meets -= 1\n print(num_meets)\n\n\nt = int(input())\nfor _ in range(t):\n main()\n", "from math import pi, ceil\n\nT = int(input())\nfor t in range(T):\n X,R,A,B = map(int,input().split())\n turn = 2 * pi * R\n D = turn * X\n time = D/max(A,B)\n d = time * min(A,B)\n delta = D - d\n print(ceil(delta / turn) - 1)", "t=int(input())\nfor _ in range(t):\n x,r,a,b=list(map(int,input().split()))\n wa=a/r\n wb=b/r\n wd=abs(wa-wb)\n time=x/max(wa,wb)\n dist=wd*time\n if(dist==int(dist)):\n  ans=int(dist)-1\n else:\n  ans=int(dist)\n print(ans)\n", "# cook your dish here\nimport sys\nimport math\n\n\ndef main():\n input = sys.stdin.readline\n t = int(input())\n\n while t > 0:\n  t -= 1\n  x, r, a, b = (int(i) for i in input().split())\n\n  circle = 2 * r * math.pi\n  total = x * circle\n\n  if a < b:\n   a, b = b, a\n\n  time = total / a\n  y = b * time\n  y = y / circle\n\n  res = math.ceil(x - y) - 1\n\n  print(res)\n\n\nmain()\n"]