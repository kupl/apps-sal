["# from math import log2\n# N = 10000\n# for i in range(1,N):\n#     # print(i)\n#     for m in range(i):\n#         if( (m^(m+1))==i ):\n#             print(i)\n#             print(m,m+1,bin(m)[2:])\n#             print()\n#             break\n#     # else:\n#         # print(-1)\n#         # print()\nT = int(input())\nans = []\n\nfor _ in range(T):\n N = int(input())\n\n # x = log2(N+1)\n if(N==1):\n  ans.append(2)\n elif('0' not in bin(N)[2:]):\n  ans.append(N//2)\n else:\n  ans.append(-1)\n\nfor i in ans:\n print(i)", "# cook your dish here\nt=int(input())\ns=[]\nfor i in range(31):\n s.append(2**i-1)\nfor _ in range(t):\n \n n=int(input())\n \n if n==1:\n  print(2)\n else:\n  if n in s:\n   print(n//2)\n  else:\n   print(-1)", "s = set()\nfor i in range(31):\n s.add(2**i - 1)\n\nfor _ in range(int(input())):\n n = int(input())\n if n==1:\n  print(2)\n else:\n  if n in s:\n   print(n//2)\n  else:print(-1)", "for _ in range(int(input())):\n n = int(input())\n if n==1:\n  print(2)\n else:\n  if (n+1)&n==0:\n   print(n//2)\n  else:print(-1)", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n n=int(input())\n if n==1:\n  print(2)\n  continue\n temp=math.floor(math.log(n+1,2))\n if 2**temp==n+1:\n  print((n+1)//2-1)\n else:\n  print(-1)\n", "import math\nt=int(input())\nfor _ in range(t):\n n=int(input())\n \n if n==1:\n  print(2)\n  continue\n \n temp=math.floor(math.log(n+1,2))\n if 2**temp==n+1:\n  print((n+1)//2-1)\n else:\n  print(-1)\n", "# cook your dish here\ndef xor():\n n = int(input())\n a = bin(n)[2:]\n if a.count('0') == 0:\n  if n == 1:\n   print(2)\n  else:\n   print(n >> 1)\n else:\n  print(-1)\n\n\ndef __starting_point():\n t = int(input())\n while t != 0:\n  xor()\n  t -= 1\n\n__starting_point()", "def solve():\n n = int(input())\n a = bin(n)[2:]\n if a.count('0') == 0:\n  if n == 1:\n   print(2)\n  else:\n   print(n >> 1)\n else:\n  print(-1)\n\n\ndef __starting_point():\n t = int(input())\n while t != 0:\n  solve()\n  t -= 1\n\n__starting_point()", "for _ in range(int(input())):\n l=int(input())\n if l==1:\n  print(2)\n  continue\n t_1=list(bin(l)[2:])\n flag=0\n for i in range(len(t_1)-1,0,-1):\n  if flag==1 and t_1[i]=='1':\n   break\n  if t_1[i]==t_1[i-1] and t_1[i]=='1':\n   continue\n  else:\n   flag=1\n if flag==1:\n  print(-1)\n  continue\n t_2=t_1.count('1')\n t_3=((2**(t_2-1))-1)\n print(t_3)", "t=int(input())\nwhile(t>0):\n n=int(input())\n if(n==1):\n  print(2)\n else:\n  q=0\n  for i in range(1,31):\n   p=1<<i\n   if(p^(p-1)==n):\n    print(p-1)\n    q=1\n    break\n  if(q==0):\n   print(-1)\n t-=1", "# cook your dish here\nT=int(input())\nfor i in range(T):\n N=int(input())\n f=bin(N)[2:]\n if f.count('0')==0:\n  if N==1:\n   print(2)\n  else:\n   print(N>>1)\n else:\n  print(-1)", "test=int(input())\nfor _ in range(test):\n a=int(input())\n flag=0\n r=0\n if a==1:\n  print('2')\n elif a&(a+1)==0:\n  print(a//2)\n else:\n  print('-1')", "for _ in range(int(input())):\n a = int(input())\n flag =0\n r=0\n if a == 1:\n  print('2')\n elif a&(a+1) == 0:\n  print(a//2)\n else:\n  print('-1')", "for _ in range(int(input())):\n a = int(input())\n flag =0\n r=0\n if a == 1:\n  print('2')\n elif a&(a+1) == 0:\n  print(a//2)\n else:\n  print('-1')", "import math \ndef Log2(x): \n if x == 0: \n  return false; \n \n return (math.log10(x)/math.log10(2))\ndef isPowerOfTwo(n): \n return (math.ceil(Log2(n))==math.floor(Log2(n))); \n \nfor _ in range(int(input())):\n n=int(input())\n m=n+1\n if n==1:\n  print(\"2\")\n else:\n  if isPowerOfTwo(m):\n   print(n//2)\n  else:\n   print(\"-1\")\n", "d = {1:0}\nst = 1\nprev = 1\nwhile True:\n new = st+st+1\n d[new] = prev\n prev = new\n st = new\n if st>2*(2**30):\n  break\nfor _ in range(int(input())):\n n = int(input())\n if n == 1:\n  print(2)\n else:\n  try:\n   print(d[n])\n  except:\n   print(-1)", "T = int(input())\nfor i in range(T):\n N = int(input())\n b = bin(N)[2:]\n \n if N == 1:\n  print(2)\n else:\n  if '0' in b:\n   print(-1)\n  else:\n   print((N - 1) // 2)\n", "t = int(input())\nfor T in range(t):\n n = int(input())\n b = bin(n)[2:]\n \n if n==1:\n  print(2)\n else:\n  if '0' in b:\n   print(-1)\n  else:\n   print((n-1)//2)\n", "# cook your dish here\nt = int(input())\nwhile t!=0:\n n = int(input())\n b = bin(n)[2:]\n \n if n==1:\n  print(2)\n else:\n  if '0' in b:\n   print(-1)\n  else:\n   print((n-1)//2)\n t-=1", "for i in range(int(input())):\n N = int(input())\n binary = (bin(N)[2:])\n if N == 1 :\n  print(2)\n else :\n  if '0' in binary:\n   print(-1)\n  else:\n   print((N-1)//2)", "for _ in range(int(input())):\n n=int(input())\n if(n==1):\n  print(2)\n else:\n  arr=[]\n\n  i=0\n  while(True):\n   if(2**i<=n):\n    arr.append(2**i)\n    i+=1\n   else:\n    break\n\n  flg=0\n  for i in arr:\n   if(i^(i-1)==n):\n    flg=1\n    print(i-1)\n    break\n\n  if(not flg):\n   print(-1)\n", "for i in range(int(input())):\n n=int(input())\n t=-1\n for j in range(30):\n  if n==2**j-1:\n   t=j\n   break\n if t==1:\n  print(2)\n elif t==-1:\n  print(-1)\n else:\n  print(2**(t-1)-1)\n", "# cook your dish here\nfor _ in range(int(input())):\n \n n = int(input())\n if n==1:\n  print('2')\n elif n%2==0:\n  print(-1)\n else:\n  x=bin(n)[2:].count('0')\n  if x==0:\n   ans=n//2\n   print(ans)\n  else:\n   print(-1)\n"]