["# cook your dish here\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfor _ in range(int(stdin.readline())):\n    n=int(stdin.readline())\n    lst=list(map(int, stdin.readline().split()))\n    prefix_odd=[0]*n\n    prefix_even=[0]*n\n    odd_val=0\n    even_val=0\n    for i in range(n):\n        if lst[i]%2==0:\n            even_val+=1 \n        else:\n            odd_val+=1\n        prefix_even[i]=even_val\n        prefix_odd[i]=odd_val\n    #print(prefix_odd,prefix_even)\n    prefix_sum=[0]*n\n    s=0\n    for i in range(n):\n        s+=lst[i]\n        prefix_sum[i]=s\n    #print(prefix_sum)\n    dict={}\n    count={}\n    for i in range(n):\n        if lst[i] not in dict:\n            dict[lst[i]]=i\n            count[lst[i]]=1\n        else:\n            dict[lst[i]]=i\n            count[lst[i]]+=1\n    #print(dict)\n    graph=defaultdict(list)\n    for i in range(n):\n        graph[lst[i]].append(i)\n    max_sum=0\n    for i in graph:\n        if len(graph[i])>1:\n            prev=graph[i][0]\n            for j in range(1,len(graph[i])):\n                index2=graph[i][j]\n                index1=prev\n                prev=index2\n                #print(index1,index2)\n                if i%2==0:\n                    val=prefix_even[index2]-prefix_even[index1]-1\n                    #print(val)\n                    if val%2==0:\n                        temp_sum=prefix_sum[index2]-prefix_sum[index1]-i\n                        #print(temp_sum)\n                        if temp_sum>max_sum:\n                            max_sum=temp_sum\n                else:\n                    val=prefix_odd[index2]-prefix_odd[index1]-1\n                    #print(val)\n                    if val%2!=0:\n                        temp_sum=prefix_sum[index2]-prefix_sum[index1]-i\n                        #print(temp_sum)\n                        if temp_sum>max_sum:\n                            max_sum=temp_sum\n\n    '''max_sum=-1\n                for i in range(n):\n                    if count[lst[i]]>1:\n                        index2=dict[lst[i]]\n                        index1=i\n                        print(index1,index2)\n                        if lst[i]%2==0:\n                            val=prefix_even[index2]-prefix_even[index1]-1\n                            print(val)\n                            if val%2==0:\n                                temp_sum=prefix_sum[index2]-prefix_sum[index1]-lst[i]\n                                print(temp_sum)\n                                if temp_sum>max_sum:\n                                    max_sum=temp_sum\n                        else:\n                            val=prefix_odd[index2]-prefix_odd[index1]-1\n                            print(val)\n                            if val%2!=0:\n                                temp_sum=prefix_sum[index2]-prefix_sum[index1]-lst[i]\n                                print(temp_sum)\n                                if temp_sum>max_sum:\n                                    max_sum=temp_sum'''\n    \n    stdout.write(str(max_sum)+'\\n')", "from sys import stdin, stdout\r\nfrom collections import defaultdict\r\ninput = stdin.readline\r\nfor _ in range(int(input())):\r\n\tn = int(input())\r\n\tarr = list(map(int, input().split()))\r\n\tarr3 = list(1 if i%2 else 0 for i in arr)\r\n\tfor i in range(1, n):\r\n\t\tarr3[i] += arr3[i-1]\r\n\tarr2 = [arr[0]]\r\n\tfor i in range(1, n):\r\n\t\tarr2.append(arr2[-1]+arr[i])\r\n\tans = 0\r\n\td = defaultdict(list)\r\n\tfor i in range(n):\r\n\t\tif d[arr[i]]==[]:\r\n\t\t\td[arr[i]].append(i)\r\n\t\telse:\r\n\t\t\tcnt1 = arr3[i-1]-arr3[d[arr[i]][0]]\r\n\t\t\tif (arr[i]%2 and cnt1%2) or (arr[i]%2==0 and (i-1-d[arr[i]][0]-cnt1)%2==0) :\r\n\t\t\t\tans = max(ans, arr2[i-1]-arr2[d[arr[i]][0]])\r\n\t\t\td[arr[i]] = [i]\r\n\tprint(ans)", "# cook your dish here\nfrom collections import defaultdict \n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int,input().split()))\n    odd,even,pref =[0],[0],[0]\n    d = dict()\n    \n    ans = 0\n    \n    for i in range(n):\n        if arr[i]&1:\n            odd.append(odd[-1]+1)\n            even.append(even[-1])\n        else:\n            odd.append(odd[-1])\n            even.append(even[-1]+1)\n        pref.append(pref[-1]+arr[i])\n        if arr[i] in d:\n            \n            if arr[i]&1:\n                if abs(odd[i+1]-odd[d[arr[i]]]-2)&1:\n                    ans = max(ans,pref[i+1]-pref[d[arr[i]]]-2*arr[i])\n            else:\n                if abs(even[i+1]-even[d[arr[i]]]-2)%2==0:\n                    ans = max(ans,pref[i+1]-pref[d[arr[i]]]-2*arr[i])\n        d[arr[i]] = i \n    print(ans)", "t=int(input())\r\nwhile t!=0:\r\n    t-=1\r\n    n=int(input())\r\n    li=list(map(int,input().split()))\r\n    odd=[0]*n\r\n    eve=[0]*n\r\n    su=[0]*n\r\n    ans=0\r\n    x=0\r\n    o=0\r\n    e=0\r\n    dic={}\r\n    for i in range(n):\r\n        x+=li[i]\r\n        su[i]=x\r\n        if li[i] not in dic:\r\n            dic[li[i]]=[]\r\n            dic[li[i]].append(i)\r\n        else:\r\n            dic[li[i]].append(i)\r\n        if li[i]%2==0:\r\n            e+=1\r\n        else:\r\n            o+=1\r\n        eve[i]=e\r\n        odd[i]=o\r\n    for j in dic:\r\n        if len(dic[j])==1:\r\n            continue\r\n        else:\r\n            for o in range(0,len(dic[j])-1):\r\n                fir=dic[j][o]\r\n                sec=dic[j][o+1]\r\n                if j%2==0:\r\n                    if (eve[sec-1]-eve[fir])%2==0:\r\n                        jk=su[sec-1]-su[fir]\r\n                        \r\n                        if jk>ans:\r\n                            ans=jk\r\n                else:\r\n                    if (odd[sec-1]-odd[fir])%2!=0 and (odd[sec-1]!=0 or odd[fir]!=0):\r\n                        jk=su[sec-1]-su[fir]\r\n                        \r\n                        if jk>ans:\r\n                            ans=jk\r\n    print(ans)\r\n                    \r\n                \r\n                \r\n                \r\n            \r\n        \r\n    \r\n    \r\n        \r\n            \r\n                \r\n    \r\n    \r\n", "from collections import *\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    l = [*map(int,input().split())]\r\n    ans = 0\r\n    ind = defaultdict(list)\r\n    even = []\r\n    odd = []\r\n    for i in range(n):\r\n        ind[l[i]].append(i)\r\n        if l[i] % 2 == 0:\r\n            if not even:\r\n                even.append(1)\r\n            else:\r\n                even.append(even[-1] + 1)\r\n        else:\r\n            if not even:\r\n                even.append(0)\r\n            else:\r\n                even.append(even[-1])\r\n        if l[i] % 2 == 1:\r\n            if not odd:\r\n                odd.append(1)\r\n            else:\r\n                odd.append(odd[-1] + 1)\r\n        else:\r\n            if not odd:\r\n                odd.append(0)\r\n            else:\r\n                odd.append(odd[-1])\r\n    pre_sum = [l[0]]\r\n    for i in range(1,n):\r\n        pre_sum.append(pre_sum[-1] + l[i])\r\n    for i in ind:\r\n        x = len(ind[i])\r\n        if x > 1:\r\n            for j in range(x - 1):\r\n                if i % 2 == 0:\r\n                    if ind[i][j] > 0 and even[ind[i][j] + 1] != even[ind[i][j]] and (even[ind[i][j + 1] - 1] - even[ind[i][j] + 1] + 1) % 2 == 0:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] == 0 and (even[ind[i][j] + 1] != even[ind[i][j]]) and (even[ind[i][j + 1] - 1] - even[ind[i][j] + 1] + 1) % 2 == 0:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] == 0 and (even[ind[i][j] + 1] == even[ind[i][j]]) and (even[ind[i][j + 1] - 1] - even[ind[i][j] + 1]) % 2 == 0:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] > 0 and (even[ind[i][j] + 1] == even[ind[i][j]]) and (even[ind[i][j + 1] - 1] - even[ind[i][j] + 1]) % 2 == 0:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n\r\n                if i % 2 == 1:\r\n                    if ind[i][j] > 0 and odd[ind[i][j] + 1] != odd[ind[i][j]] and (odd[ind[i][j + 1] - 1] - odd[ind[i][j] + 1] + 1) % 2 == 1:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] == 0 and (odd[ind[i][j] + 1] == odd[ind[i][j]]) and (odd[ind[i][j + 1] - 1] - odd[ind[i][j] + 1]) % 2 == 1:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] == 0 and (odd[ind[i][j] + 1] != odd[ind[i][j]]) and (odd[ind[i][j + 1] - 1] - odd[ind[i][j] + 1] + 1) % 2 == 1:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n                    elif ind[i][j] > 0 and (odd[ind[i][j] + 1] == odd[ind[i][j]]) and (odd[ind[i][j + 1] - 1] - odd[ind[i][j] + 1]) % 2 == 1:\r\n                        ans = max(ans,pre_sum[ind[i][j + 1] - 1] - pre_sum[ind[i][j]])\r\n    print(ans)", "# cook your dish here\n# JUST FIND IT\ndef splitting(arr):\n    if len(arr) == len(set(arr)):\n        return 0\n    ev_od = {}\n    occur = {}\n    ans = 0\n    for i, n in enumerate(arr):\n        if i == 0:\n            ev_od[i] = [0, 0, 0]\n        else:\n            if arr[i-1] & 1 == 1:\n                ev_od[i] = [ev_od[i-1][0], ev_od[i-1][1] + 1, ev_od[i-1][2] + arr[i-1]]\n            else:\n                ev_od[i] = [ev_od[i-1][0] + 1, ev_od[i-1][1], ev_od[i-1][2] + arr[i-1]]\n        if n in occur:\n            if n & 1 == 1:\n                num_of_odd = ev_od[i][1] - ev_od[occur[n]][1] - 1\n                if num_of_odd & 1 == 1:\n                    tmp_sum = ev_od[i][2] - ev_od[occur[n]][2] - n\n                else:\n                    tmp_sum = 0\n            else:\n                num_of_even = ev_od[i][0] - ev_od[occur[n]][0] - 1\n                if num_of_even & 1 == 0:\n                    tmp_sum = ev_od[i][2] - ev_od[occur[n]][2] - n\n                else:\n                    tmp_sum = 0\n            # print(tmp_sum)\n            ans = max(ans, tmp_sum)\n        occur[n] = i\n    return ans\n\ntry:\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        print(splitting(arr))\nexcept:\n    pass\n", "from sys import stdin,stdout\r\nfrom itertools import accumulate\r\ndef Oddnos(l,r):\r\n    smm=od[r-1]-od[l]\r\n    return smm&1\r\ndef evennos(l,r):\r\n    tot=(r-l-1)\r\n    smm=od[r-1]-od[l]\r\n    return ((tot-smm)&1==0)\r\ndef getSum(l,r):\r\n    return ps[r]-(ps[l-1] if l>=1 else 0)\r\nfor _ in range(int(stdin.readline())):\r\n    n=int(stdin.readline())\r\n    a=list(map(int,stdin.readline().split()))\r\n    od=list(accumulate([x&1 for x in a]))\r\n    ps=list(accumulate(a))\r\n    d={};mx=0\r\n    for i in range(n):\r\n        if a[i] in d:\r\n            prev=d[a[i]]\r\n            if a[i]&1 and Oddnos(prev,i):\r\n                mx=max(mx,getSum(prev,i)-2*a[i])\r\n            elif a[i]&1==0 and evennos(prev,i):\r\n                mx = max(mx, getSum(prev,i) - 2 * a[i])\r\n        d[a[i]]=i\r\n    print(mx)\r\n", "import sys\r\nimport math\r\nfrom collections import defaultdict,Counter\r\n\r\ninput=sys.stdin.readline\r\ndef print(x):\r\n    sys.stdout.write(str(x)+\"\\n\")\r\n\r\n# sys.stdout=open(\"CP2/output.txt\",'w')\r\n# sys.stdin=open(\"CP2/input.txt\",'r')\r\n\r\n# mod=pow(10,9)+7\r\nt=int(input())\r\nfor i in range(t):\r\n\tn=int(input())\r\n\ta=list(map(int,input().split()))\r\n\teven=[0]*n\r\n\t# odd=[0]*n\r\n\tans=0\r\n\tpre=[0]*n\r\n\tpre[0]=a[0]\r\n\td={a[0]:0}\r\n\tif a[0]%2==0:\r\n\t\teven[0]=1\r\n\tfor j in range(1,n):\r\n\t\ts=d.get(a[j],-1)\r\n\t\tif s==-1:\r\n\t\t\td[a[j]]=j\r\n\t\telse:\r\n\t\t\tif a[j]&1:\r\n\t\t\t\tif (pre[j-1]-pre[d[a[j]]])&1:\r\n\t\t\t\t\tans=max(ans,pre[j-1]-pre[d[a[j]]])\r\n\t\t\telse:\r\n\t\t\t\tif (even[j-1]-even[d[a[j]]])%2==0:\r\n\t\t\t\t\tans=max(ans,pre[j-1]-pre[d[a[j]]])\r\n\t\t\td[a[j]]=j\r\n\t\tpre[j]=pre[j-1]+a[j]\r\n\t\teven[j]=even[j-1]\r\n\t\tif a[j]%2==0:\r\n\t\t\teven[j]+=1\r\n\tprint(ans)", "# cook your dish here\nfrom collections import defaultdict\nfor _ in range(int(input())):\n   maxi=-1\n   d=defaultdict(list)\n   n=int(input())\n   a=list(map(int,input().split()))\n   even=[0]*n\n   odd=[0]*n\n   pref=[0]*n\n   pref[0]=a[0]\n   if a[0]%2==0:\n       even[0]=1\n   if a[0]%2==1:\n       odd[0]=1\n   d[a[0]].append(0)\n\n   for i in range(1,n):\n       d[a[i]].append(i)\n       if a[i]%2==0:\n           even[i]=even[i-1]+1\n           odd[i]=odd[i-1]\n       if a[i]%2==1:\n           odd[i]=odd[i-1]+1\n           even[i]=even[i-1]\n\n       pref[i]=pref[i-1]+a[i]\n  ## print(even)\n   ##print(odd)\n   for i in range(n):\n\n       x=a[i]\n       if len(d[a[i]])>=2:\n           if x%2==0:\n               y=d[a[i]][0]\n               z=d[a[i]][1]\n               ##print(even[z])\n               if y==0:\n\n                   ##print(even[z],i)\n                   if even[z]%2==0:\n                       maxi = max(maxi, pref[z] - pref[y] - x)\n                   continue\n\n               if (even[z]-even[y-1])%2==0:\n                       maxi=max(maxi,pref[z]-pref[y]-x)\n               ##print(maxi,i,\"hi\")\n\n           if x%2==1:\n               y = d[a[i]][0]\n               z = d[a[i]][1]\n               if y==0:\n                  ## print(odd[z])\n                   if odd[z]%2==1:\n                       maxi = max(maxi, pref[z] - pref[y] - x)\n                   continue\n\n               if (odd[z] - odd[y - 1]) % 2 == 1:\n                   maxi = max(maxi, pref[z] - pref[y] - x)\n       d[a[i]].pop(0)\n   if maxi==-1:\n       print(0)\n       continue\n   print(maxi)\n\n\n\n\n", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\r\nimport sys;input = sys.stdin.readline\r\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\r\n\r\nfor _ in range(inp()):\r\n    n = inp()\r\n    x = ip()\r\n    par = [i%2 for i in x]\r\n    pre = [0]*(n+1)\r\n    prepar = [0]*(n+1)\r\n    dt = {}\r\n    for i in range(n):\r\n        pre[i+1] = pre[i]+x[i]\r\n        prepar[i+1] = prepar[i]+par[i]\r\n        t = dt.get(x[i],[])\r\n        t.append(i)\r\n        dt[x[i]] = t\r\n    #print(x)\r\n    #print(pre)\r\n    #print(dt)\r\n    ans = 0\r\n    for i in range(n):\r\n        if len(dt[x[i]]) > 1:\r\n            a,b = dt[x[i]][:2]\r\n            dt[x[i]] = dt[x[i]][1:]\r\n            if a == b: continue\r\n            t = pre[b]-pre[a+1]\r\n            ct = prepar[b]-pre[a+1]\r\n            if x[i]%2:\r\n                if ct%2:\r\n                    ans = max(ans,t)\r\n            else:\r\n                if ((b-1-a+1+1)-ct)%2 == 0:\r\n                    ans = max(ans,t)\r\n    print(ans)\r\n"]