["for _ in range(int(input())):\n n = int(input())\n\n arr= list(map(int,input().split()))\n arr.sort()\n d={}\n for i in arr:\n  if i not in d:\n   d[i]=1\n  else:\n   d[i]+=1\n \n flag = True\n for i in d:\n  if d[i]>2:\n   flag=False\n   break\n \n  \n\n if arr.count(max(arr))!=1:\n  flag=False\n \n  \n if flag==True:\n\n  arr1=[]\n  arr2=[]\n  for i in d:\n   if d[i]<=2:\n    if d[i]==2:\n     \n     arr2.append(i)\n    arr1.append(i)\n  arr2.reverse()\n  rearr= arr1+arr2\n\n  print(\"YES\")\n  print(*rearr)\n\n else:\n  print(\"NO\")\n \n# cook your dish here\n", "t=int(input())\nwhile t>0:\n t-=1\n n=int(input())\n a=list(map(int,input().split()))\n b=set()\n c=[]\n for i in a:\n  if i not in b:\n   b.add(i)\n  else:\n   c.append(i)\n b=list(b)\n b.sort()\n c.sort(reverse=True)\n e=b+c\n k=0\n for i in range(len(e)-1):\n  if e[i]==e[i+1]:\n   k=1\n   print(\"NO\")\n   break\n if k==0:\n  print(\"YES\")\n  print(*e)", "# cook your dish here\nfrom collections import Counter\nt = int(input())\nfor _ in range(t):\n n = int(input())\n arr = list(map(int, input().split()))\n arr.sort()\n g = Counter(arr)\n s = list(g.values())\n seti = list(set(arr))\n seti = sorted(seti)\n if len(seti)==n:\n  print(\"YES\")\n  print(*arr)\n else:\n  h = [item for item,count in list(g.items()) if count>=3]\n  if h:\n   print(\"NO\")\n  elif g[arr[-1]]==2:\n   print(\"NO\")\n  else:\n   k = [item for item,count in list(g.items()) if count==2]\n   k = sorted(k, reverse = True)\n   seti.extend(k)\n   print(\"YES\")\n   print(*seti)\n", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n = int(input())\n arr = list(map(int, input().split()))\n g = list(set(arr))\n g.sort()\n arr.sort()\n if len(g)==n:\n  print(\"YES\")\n  print(*arr)\n else:\n  f = 0\n  k = []\n  for i in g:\n   c = arr.count(i)\n   if c>=3:\n    f = 1\n    break\n   elif c==2 and i==arr[-1]:\n    f = 1\n    break\n   elif c==2:\n    k.append(i)\n  k = sorted(k, reverse = True)\n  g.extend(k)\n  if f==0:\n   print(\"YES\")\n   print(*g)\n  else:\n   print(\"NO\") \n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n d={}\n f=[]\n l=[]\n flag=0\n for i in a:\n  if i not in d:\n   f.append(i)\n   d[i]=1 \n  else:\n   l.append(i)\n   d[i]+=1 \n   if d[i]>2:\n    flag=1 \n    break\n if flag==1:\n  print('NO')\n  continue\n f.sort()\n l.sort()\n if len(l)==0:\n  print('YES')\n  print(*f)\n elif f[len(f)-1]==l[len(l)-1]:\n  print('NO')\n else:\n  l.reverse()\n  print('YES')\n  print(*f,end=\" \")\n  print(*l)\n  ", "for _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n b=[]\n a=[]\n x=0\n l.sort()\n for i in range(n):\n  if x<l[i]:\n   x=l[i]\n   a.append(l[i])\n   l[i]=0\n   continue\n  b.append(l[i])\n x,f=0,0\n for i in b :\n  if x==i:\n   f=1\n  x=i\n b.sort(reverse=True)\n if len(b)==0:\n  print('YES')\n  print(*a)\n elif f==1 or a[-1]==b[0]:\n  print('NO')\n else:\n  print('YES')\n  print(*(a+b))\n  \n\n  \n", "# cook your dish here\ndef solve(n, lst):\n d = dict()\n\n p1 = []\n p2 = []\n for i in lst:\n  if i in list(d.keys()):\n   d[i] += 1\n   p2.append(i)\n   if d[i] > 2:\n    return -1\n  else:\n   p1.append(i)\n   d[i] = 1\n if d[max(p1)] > 1:\n  return -1\n p1.sort()\n p2.sort()\n p2.reverse()\n return p1+p2\n\n\n \n  \n \nt = int(input())\nfor _ in range(t):\n n = int(input())\n lst = list(map(int, input().split(' ')))\n res = solve(n, lst)\n if res == -1:\n  print('NO')\n else:\n  print('YES'+'\\n'+' '.join(map(str, res)))\n", "from collections import defaultdict\ndef find(li,n):\n d={}\n li.sort()\n for i in range(n):\n  if(li[i] not in d):\n   d[li[i]]=1\n  else:\n   d[li[i]]+=1\n   if(d[li[i]]>2):\n    return 'NO'\n ans=[]\n for i in d:\n  ans.append(i)\n  d[i]-=1\n for i in range(len(li)-1,-1,-1):\n  if(d[li[i]]!=0):\n   if(ans[-1]==li[i]):\n    return 'NO'\n   x=d[li[i]]\n   while(x!=0):\n    ans.append(li[i])\n    x-=1\n    d[li[i]]-=1\n return ans\n\n\n\nt=int(input())\nfor i in range(t):\n n=int(input())\n li=list(map(int,input().split()))\n ans=(find(li,n))\n if(ans!='NO'):\n  print('YES')\n  for j in ans:\n   print(j,end=\" \")\n  print()\n else:\n  print(ans)", "# cook your dish here\nt = int(input())\nwhile t:\n n = int(input())\n li = [int(x) for x in input().split()]\n l = [0 for i in range(max(li)+1)]\n for i in range(len(li)):\n  l[li[i]] = l[li[i]]+1\n if max(l)>=3:\n  print(\"NO\")\n elif l[max(li)]>=2:\n  print(\"NO\")\n else:\n  print(\"YES\")\n  for j in range(len(l)):\n   if l[j]>=1:\n    print(j,end = ' ')\n    l[j] = l[j]-1\n  for j in range(len(l)-1,-1,-1):\n   if l[j]>=1:\n    print(j,end = ' ')\n    l[j] = l[j]-1\n print()\n   \n     \n t = t-1", "# cook your dish here\nfrom collections import defaultdict\nfor _ in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n a.sort()\n b = [-1]\n c = [-1]\n prev = nex = 0\n flag = True;i=0\n f = False\n while(i<n):\n  if flag:\n   if a[i] == prev:\n    flag = False\n    if a[i]==nex:\n     f = True\n     break\n    i-=1\n   else:\n    b.append(a[i])\n    prev = a[i]\n  else:\n   if a[i] == nex:\n    flag = True\n    if a[i]==prev:\n     f = True\n     break\n    i-=1\n   else:\n    c.append(a[i])\n    nex = a[i]\n  i+=1\n flag = True\n b.sort()\n c.sort(reverse = True)\n ans = b[1:]+c[:-1]\n # print(ans)\n for i in range(1,len(ans)):\n  if ans[i]==ans[i-1]:\n   f = True\n   break\n\n if f:\n  print(\"NO\")\n else:\n  print(\"YES\")\n  for i in ans:\n   print(i,end = \" \")\n  print()", "# cook your dish here\nt = int(input())\n\nwhile t!=0:\n n = int(input())\n a = list(map(int, input().split()))\n m = max(a)\n flag = 1\n \n s = list(set(a))\n for i in s:\n  if a.count(i)>2:\n   flag = 0\n \n if flag==0 or a.count(m)!=1:\n  print(\"NO\")\n else:\n  print(\"YES\")\n  r = []\n  for i in s:\n   if a.count(i)>1:\n    r.append(i)\n    \n  r = sorted(r, reverse=True)\n  s1 = sorted(s) + r\n  print(*s1)\n  \n t-=1", "for _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n b = set()\n c = []\n for i in a:\n  if i in b:\n   c.append(i)\n  else:\n   b.add(i)\n b=list(b)\n b.sort()\n c.sort(reverse=True)\n arr=b[:]+c[:]\n flag=0\n for i in range(len(b)-1,n-1):\n  if arr[i]==arr[i+1]:\n   flag=1\n   print(\"NO\")\n   break\n if flag == 0:\n  print(\"YES\")\n  print(*arr)", "from collections import Counter\nfor _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n b = []\n c = []\n for i in a:\n  if i in b:\n   c.append(i)\n  else:\n   b.append(i)\n b.sort()\n c.sort(reverse=True)\n arr=b[:]+c[:]\n flag=0\n for i in range(len(b)-1,n-1):\n  if arr[i]==arr[i+1]:\n   flag=1\n   print(\"NO\")\n   break\n if flag == 0:\n  print(\"YES\")\n  print(*arr)", "from collections import Counter\nfor _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n b = []\n c = []\n for i in a:\n  if i in b:\n   c.append(i)\n  else:\n   b.append(i)\n b.sort()\n c.sort(reverse=True)\n flag = 0\n d = Counter(c)\n for i in d.values():\n  if i > 1 or c[0] == b[-1]:\n   flag = 1\n   print(\"NO\")\n   break\n if flag == 0:\n  print(\"YES\")\n  b.extend(c)\n  print(*b)", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n a=[int(x) for x in input().split()]\n ss=set(a)\n j=max(a)\n s=[]\n su=[]\n flag=1\n for i in ss:\n  m=a.count(i)\n  if m==1:\n   s.append(i)\n  elif m==2:\n   s.append(i)\n   su.append(i)\n  else:\n   flag=0\n   break\n if a.count(j)%2==0:\n  flag=0\n if(flag):\n  print(\"YES\")\n  s.sort()\n  su.sort(reverse=True)\n  print(*(s+su))\n else:\n  print(\"NO\")\n   \n", "\nfrom collections import Counter\ndef fn(a):\n c = Counter(a)\n single = []\n double = []\n for i in c.keys():\n  if c[i]>2:\n   return 0\n  if c[i] == 2:\n   double.append(i)\n  single.append(i)\n single.sort()\n double.sort(reverse = True)\n try:\n  if single[-1] == double[0]:\n   return 0\n except:\n  pass\n\n return single+double\n \nfor _ in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n g = fn(a)\n if g:\n  print(\"YES\")\n  print(*g)\n else:\n  print(\"NO\")", "\ndef ans():\n n=int(input())\n a=list(map(int,input().split()))\n t=max(set(a), key=a.count)\n maxi=max(a)\n if(a.count(maxi)>1):\n  print(\"NO\")\n  return\n cou=a.count(t)\n lis=[]\n a.sort()\n b=set(a)\n if(cou>2):\n  print(\"NO\")\n\n  return\n elif(cou==1):\n  print(\"YES\")\n  for i in a:\n   print(i,end=\" \")\n  print()\n  return\n\n else:\n  for i in b:\n   if(a.count(i)==2):\n    a.remove(i)\n    lis.append(i)\n\n   else:\n    continue\n #print(lis)\n lis.sort(reverse=True)\n #print(lis)\n d=a+lis\n print(\"YES\")\n for i in d:\n  print(i,end=\" \")\n print()\n return\n\n\nt=int(input())\nwhile(t>0):\n ans()\n t-=1\n\n\n", "def solve(a):\n l1,l2=[],[]\n printed=False\n dic=dict.fromkeys(a,0)\n for i in a:\n  dic[i]+=1 \n  if dic[i]==1:\n   l1.append(i)\n  if dic[i]==2:\n   l2.append(i)\n  if dic[i]==3:\n   print(\"NO\")\n   return\n   printed=True\n   break\n if not printed:\n  if (max(l1) in l2):\n   print(\"NO\")\n   return\n  else:\n   print(\"YES\")\n   l1=sorted(l1)\n   l2=sorted(l2,reverse=True)\n   print(*(l1+l2))\nt=int(input())\nwhile t:\n t-=1 \n n=int(input())\n a=[int(x) for x in input().split()]\n solve(a)\n  \n", "# cook your dish here\ndef PrintBothArrays(a, n) : \n \n # Store both arrays  \n v1, v2 = [], [] \n \n # Used for hashing  \n mpp = dict.fromkeys(a, 0) \n \n # Iterate for every element  \n for i in range(n) : \n \n  # Increase the count  \n  mpp[a[i]] += 1 \n \n  # If first occurrence  \n  if (mpp[a[i]] == 1) : \n   v1.append(a[i]) \n \n  # If second occurrence  \n  elif (mpp[a[i]] == 2) :  \n   v2.append(a[i]) \n \n  # If occurs more than 2 times  \n  else :  \n   print(\"NO\") \n   return;  \n \n # Sort in increasing order\n maximum=max(v1)\n if maximum in v2:\n  print(\"NO\")\n  return;\n \n v1.sort();  \n \n # Print the increasing array  \n print(\"YES\");  \n for it in v1: \n  print(it, end = \" \");  \n \n # Sort in reverse order  \n v2.sort(reverse = True);  \n \n # Print the decreasing array \n for it in v2 :  \n  print(it, end = \" \") \n print()\n \n# Driver code  \ndef __starting_point(): \n try:\n  t=int(input())\n  for _ in range(t):\n   n=int(input())\n   a=list(map(int,input().split())) \n   PrintBothArrays(a, n); \n except EOFError as t : pass\n__starting_point()", "t=int(input())\nfor _ in range(t):\n n=int(input())\n list1=list(map(int,input().strip().split()))\n \n x=max(list1)\n map1=dict()\n ans=1\n ans1=[]\n ans2=[]\n for val in list1:\n  if val not in map1:\n   map1[val]=1\n   ans1.append(val) \n  else:\n   if map1[val]==1 and val!=x:\n    map1[val]+=1\n    ans2.append(val)\n   else:\n    ans=0\n    break\n \n if ans:\n  print(\"YES\")\n  ans1.sort()\n  ans2.sort()\n  \n  for i in range(len(ans1)):\n   print(ans1[i],end=\" \")\n  for i in range(len(ans2)-1,0-1,-1):\n   print(ans2[i],end=\" \")\n  \n  print()\n \n else:\n  print(\"NO\")\n  \n \n \n \n \n \n \n \n \n \n \n\n", "t=int(input())\nfor _ in range(t):\n n=int(input())\n list1=list(map(int,input().strip().split()))\n \n x=max(list1)\n map1=dict()\n for val in list1:\n  if val in map1:\n   map1[val]+=1\n  else:\n   map1[val]=1\n \n ans=1\n for val in map1:\n  if val==x:\n   if map1[val]>1:\n    ans=0\n    break\n  else:\n   if map1[val]>2:\n    ans=0\n    break\n \n if ans:\n  print(\"YES\")\n  ans1=sorted(map1)\n  \n  ans2=[]\n  for val in ans1:\n   if map1[val]==2:\n    ans2.append(val)\n  ans2.reverse()\n  \n  for val in ans1:\n   print(val,end=\" \")\n  for val in ans2:\n   print(val,end=\" \")\n  \n  print()\n    \n  \n  \n  \n else:\n  print(\"NO\")\n  \n \n \n \n \n \n \n \n\n", "# cook your dish here\nt=int(input())\nwhile t:\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n b=[]\n c=[]\n flag=0\n i=0\n if a.count(a[-1])>1:\n  flag=1\n\n while i<n:\n  if a.count(a[i])>2:\n   flag=1\n   break\n  elif a.count(a[i])==2 and flag!=1:\n   b.append(a[i])\n   c.append(a[i])\n   i+=1\n  else:\n   b.append(a[i])\n  i+=1 \n c=c[::-1]\n if flag==1:\n  print(\"NO\")\n else:\n  print(\"YES\")\n  print(*(b+c))\n \n t-=1 \n \n", "for _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n a.sort()\n b = []\n flag = 0\n if a[n-1] == a[n-2]:\n  print(\"NO\")\n  continue\n i = 0\n while i < n-2:\n  if a[i] == a[i+2]:\n   flag = 1\n   break\n  elif a[i] == a[i+1]:\n   b.append(a.pop(i))\n   n=n-1\n  i += 1\n if flag == 0:\n  b.sort(reverse = True)\n  print(\"YES\")\n  print(*(a+b))\n else:\n  print(\"NO\")\n", "for _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n has_true = True\n max_a = max(a)\n series1 = []\n series2 = []\n if a.count(max_a) > 1:\n  print(\"NO\")\n  continue\n i = 0\n a.sort()\n while i < n:\n  if a.count(a[i]) > 2:\n   has_true = False\n   print(\"NO\")\n   break\n  \n  if a.count(a[i]) == 2:\n   series1.append(a[i])\n   series2.append(a[i])\n   i+=1\n  else:\n   series1.append(a[i])\n  i += 1\n if has_true == True:\n  series2 = series2[::-1]\n  print(\"YES\")\n  print(*(series1 + series2))"]