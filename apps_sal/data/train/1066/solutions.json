["for _ in range(int(input())):\n n=input().rstrip()\n n=[ele for ele in n]\n l=len(n)\n m=10**18+8\n ini=1\n for i in range(l-1,-1,-1):\n  if int(n[i])<=m:\n   if ini==1:\n    m=int(n[i])\n   else:\n    m=max(m,n[i])\n  else:\n   m=int(n[i])-1\n   n[i]=str(m)\n   for j in range(l-1,i,-1):\n    n[j]='9'\n   \n i=0\n while n[i]=='0':\n  i+=1\n print(\"\".join(n[i:]))\n   \n", "for _ in range(int(input())):\n num = int(input())\n if num < 10:\n  print(num)\n  continue\n digs = str(num)\n new = \"\"\n i = 1\n bad = False\n while i < len(digs):\n  if digs[i-1] > digs[i]:\n   bad = True\n   if digs[i-1] != \"1\":\n    new += str(int(digs[i-1]) - 1) + \"9\"*(len(digs)-i)\n   else:\n    n = i-1\n    while n > 0 and digs[n] == \"1\":\n     n -= 1\n    new = new[:n]\n    new += str(int(digs[n]) - 1) + \"9\"*(len(digs)-n-1)\n   break\n  else:\n   new += digs[i - 1]\n  i += 1\n if not bad: new = digs\n print(int(new))\n", "t=int(input())\nfor _ in range(t):\n n=int(input())\n c=str(n)\n a=list(c)\n i2=len(a)-1\n for i in range(len(a)-1,0,-1):\n  if int(a[i])<int(a[i-1]):\n   a[i-1]=int(a[i-1])-1\n   i2=i-1\n if(a[0]!=0 and a[0]!=\"0\"):\n  for i in range(i2+1):\n   print(a[i],end=\"\")\n  for i in range(i2+1,len(a)):\n   print(9,end=\"\")\n else:\n  for i in range(1,i2):\n   print(a[i],end=\"\")\n  for i in range(i2+1,len(a)):\n   print(9,end=\"\")\n print()\n  \n \n", "# cook your dish here\ntry:\n def increasing(n):\n  if 0 <= n<= 9: return n\n  def fi(s):\n   for i in range(len(s)-1):\n    if s[i] > s[i+1]:\n     return i\n   return -1 \n  s = str(n)\n  n = len(s)\n  r = fi(s)\n  l = s.index(s[r])\n  if r == -1:\n   return n\n  else:\n   return int(s[:l] + str(int(s[l]) - 1) + '9'*(n-l-1))\n for _ in range(int(input())):\n  n=int(input())\n  ans=increasing(n)\n  print(ans)\nexcept EOFError as e: \n pass\n", "from sys import stdin, stdout\ninput = stdin.readline\nfrom collections import defaultdict as dd\nimport math\ndef geti(): return list(map(int, input().strip().split()))\ndef getl(): return list(map(int, input().strip().split()))\ndef gets(): return input()\ndef geta(): return int(input())\ndef print_s(s): stdout.write(s+'\\n')\n\ndef solve():\n for _ in range(geta()):\n  n=geta()\n  num=list(map(int,list(str(n))))\n  # print(num)\n  index=-1\n  for i in range(len(num)-1):\n   if num[i]>num[i+1]:\n    index=i\n    break\n  else:\n   print(n)\n   continue\n  if index!=-1:\n   fake=num[index]\n   for i in range(index,-1,-1):\n    if num[i]==fake:\n     num[i]-=1\n     last=i\n   for i in range(last+1,len(num)):\n    num[i]=9\n   ans=0\n   for i in num:\n    ans*=10\n    ans+=i\n   print(ans)\n\n\ndef __starting_point():\n solve()\n\n__starting_point()", "# cook your dish here\nimport sys\ndef func(number):\n for i in range(len(number)-1):\n  if int(number[i])>int(number[i+1]):\n   cifra=int(number[i])-1\n   stringa=number[:i]+str(cifra)+'9'*(len(number)-i-1)\n   return func(stringa)\n return number\nt=int(input().strip())\nfor _ in range(t):\n number=input().strip()\n stringa=func(number)\n while stringa[0]=='0':\n  stringa=stringa[1:]\n print(stringa)", "def nondecdigits(s):\n m = len(s); \n a = [0] * m; \n for i in range(m):\n  a[i] = ord(s[i]) - ord('0'); \n level = m - 1;\n for i in range(m - 1, 0, -1):\n  if (a[i] < a[i - 1]):\n   a[i - 1] -= 1;\n   level = i - 1;\n if (a[0] != 0):\n  for i in range(level + 1):\n   print(a[i], end=\"\");\n  for i in range(level + 1, m):\n   print(\"9\", end=\"\");\n else:\n  for i in range(1, level):\n   print(a[i], end=\"\");\n  for i in range(level + 1, m):\n   print(\"9\", end=\"\");\nx=int(input())\nfor i in range(x):\n y=int(input())\n nondecdigits(str(y))\n print()", "def check(s):\n for i in range(len(s)-1):\n  if int(s[i+1])<int(s[i]):\n   return 1\n return 0\n\nt=int(input())\nfor i in range(t):\n ok=0\n n=list(input())\n l=[]\n for k in n:\n  try:\n   l.append(int(k))\n  except:\n   pass\n while(check(l)):\n  for j in range(len(l)-1):\n   if l[j+1]<l[j]:\n     l[j]=l[j]-1\n     for k in range(j+1,len(l)):\n      l[k]=9\n     break\n s=''\n for i in l:\n  s+=str(i)\n print(int(s))", "\nT = int(input())\ndef solve(n):\n li = list(map(int, list(str(n))))\n prev = 0\n f = {}\n for ind, it in enumerate(li):\n  if it < prev:\n   ind = f[prev]\n   li[ind]-=1\n   for j in range(ind+1, len(li)):\n    li[j] = 9\n   break\n  prev = it\n  if it not in f:\n   f[it] = ind\n\n ans = 0\n for it in li:\n  ans = 10*ans + it\n\n return ans\n\nfor case in range(T):\n n = int(input())\n ans = solve(n)\n print(ans)\n", "# cook your dish here\ndef check(n):\n l=list(map(int,str(n)))\n t=len(l)\n p=t-1\n for i in range(t-1,0,-1):\n  if l[i]<l[i-1]:\n   l[i-1]-=1 \n   p=i-1\n \n for i in range(p+1,t):\n  l[i]=9\n return int(''.join(map(str,l))) \n   \ntry:\n for _ in range(int(input())):\n  n=int(input())\n  print(check(n))\nexcept EOFError as e:pass ", "# cook your dish here\ndef check(n):\n l=list(map(int,str(n)))\n t=len(l)\n p=t-1\n for i in range(t-1,0,-1):\n  if l[i]<l[i-1]:\n   l[i-1]-=1 \n   p=i-1\n \n for i in range(p+1,t):\n  l[i]=9\n return int(''.join(map(str,l))) \n   \ntry:\n for _ in range(int(input())):\n  n=int(input())\n  print(check(n))\nexcept EOFError as e:pass ", "# cook your dish here\ndef check(n):\n l=list(map(int,str(n)))\n t=len(l)\n p=t-1\n for i in range(t-1,0,-1):\n  if l[i]<l[i-1]:\n   l[i-1]-=1 \n   p=i-1\n \n for i in range(p+1,t):\n  l[i]=9\n return int(''.join(map(str,l))) \n   \ntry:\n for _ in range(int(input())):\n  n=int(input())\n  print(check(n))\nexcept EOFError as e:pass ", "\nT=int(input())\nfor _ in range(T):\n N=int(input())\n V=list(str(N))\n #fa=ckt(N)\n ans=\"\"\n n=len(V)\n for i in range(n):\n  if (i!=(n-1) and V[i]>V[i+1]):\n   ans=list(ans+str(int(V[i])-1)+(\"9\")*(n-i-1))\n   for j in range(i-1,-1,-1):\n    if (ans[j]>ans[j+1]):\n     ans[j+1]=\"9\"\n     ans[j]=str(int(ans[j])-1)\n    else:\n     break\n   break\n  else:\n   ans=ans+V[i]\n\n ans1=\"\"\n for i in ans:\n  ans1=ans1+i\n \n print(int(ans1))\n", "# cook your dish here\ntry:\n def convert(list): \n  s = [str(i) for i in list] \n  res = int(\"\".join(s)) \n  return(res) \n for _ in range(int(input())):\n  x=int(input())\n  while x>0:\n   a=str(x)\n   b=list(a)\n   b.sort()\n   if b==list(a):\n    break\n   else:\n    k=0\n    for j in b:\n     if str(j)==a[k]:\n      k+=1\n     else:\n      break\n    k=convert(list(a[k+1:])) \n    x=x-k-1\n  print(x)\nexcept:\n pass", "# cook your dish here\ndef num(l):\n ans=0\n for i in range(len(l)):\n  ans=ans*10+l[i]\n return ans\ndef numof(n):\n ans=0\n l=[]\n while(n>0):\n  l.append(n%10)\n  n=n//10\n  ans+=1\n l.reverse()\n return l\nt=int(input())\nfor you in range(t):\n n=int(input())\n done=0\n z=numof(n)\n l=[]\n for i in range(len(z)):\n  if(min(z[i:])==z[i]):\n   l.append(z[i])\n  else:\n   l.append(min(z[i:]))\n   done=1\n   break\n k=len(l)\n for i in range(len(z)-k):\n  l.append(9)\n print(num(l))"]