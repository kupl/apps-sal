["for _ in range(int(input())):\n    s = input()\n    p = [i for i in s.split(\"0\") if i!=\"\"]\n    p.sort(reverse=True)\n    ans = 0\n    for i in range(0,len(p),2):\n        ans+=len(p[i])\n    print(ans)\n\n", "for _ in range(int(input())):\n    s=[len(i)for i in input().split('0')]\n    s.sort()\n    print(sum(s[-1::-2]))", "for _ in range(int(input())):\n    s = input()\n    t = [i for i in s.split(\"0\") if i!=\"\"]\n    t.sort(reverse=True)\n    cnt=0\n    for i in range(0,len(t),2):\n        cnt+=len(t[i])\n    print(cnt)", "for _ in range(int(input())):\n    s = input()\n    ar = []\n    cur = 0\n    for c in s:\n        if c == \"1\":\n            cur += 1\n        else:\n            ar.append(cur)\n            cur = 0\n    if cur != 0:\n        ar.append(cur)\n    ar.sort()\n    ar.reverse()\n    print(sum(ar[::2]))\n", "for nt in range(int(input())):\n\ts = input()\n\tn = len(s)\n\tif s[0]==\"1\":\n\t\tcount = 1\n\telse:\n\t\tcount = 0\n\tgroups = []\n\tfor i in range(1,n):\n\t\tif s[i]==\"1\":\n\t\t\tcount += 1\n\t\telse:\n\t\t\tif count:\n\t\t\t\tgroups.append(count)\n\t\t\tcount = 0\n\tif count:\n\t\tgroups.append(count)\n\tgroups.sort(reverse=True)\n\tans = 0\n\tfor i in range(0,len(groups),2):\n\t\tans += groups[i]\n\tprint (ans)\n", "def solv():\n\ts=list(map(int,input()))\n\tv=[]\n\tsm=0\n\tfor n in s:\n\t\tif n:\n\t\t\tsm+=1\n\t\telse:\n\t\t\tv.append(sm)\n\t\t\tsm=0\n\tif sm:v.append(sm)\n\tv.sort(reverse=True)\n\n\tres=0\n\n\tfor n in range(0,len(v),2):res+=v[n]\n\tprint(res)\n\nfor _ in range(int(input())):solv()", "import math\nt=int(input())\nfor w in range(t):\n    s=sorted(input().split('0'),reverse=True)\n    c=0\n    for i in range(0,len(s),2):\n        c+=len(s[i])\n    print(c)", "from itertools import groupby\n\nt = int(input())\n\nfor _ in range(t):\n    s = input()\n    l = []\n    for k, v in groupby(s):\n        if k == '1':\n            l.append(len(list(v)))\n    l.sort(reverse=True)\n    n = len(l)\n    res = 0\n    for i in range(0, n, 2):\n        res += l[i]\n    print(res)\n", "for _ in range(int(input())):\n    s = input()\n    x = sorted(len(i) for i in s.split('0') if len(i) > 0)\n\n    print(max(sum(x[::2]), sum(x[1::2])))", "from sys import stdin,stdout\nfrom math import sqrt,gcd,ceil,floor,log2,log10,factorial,cos,acos,tan,atan,atan2,sin,asin,radians,degrees,hypot\nfrom bisect import insort, insort_left, insort_right, bisect_left, bisect_right, bisect\nfrom array import array\nfrom functools import reduce\nfrom itertools import combinations, combinations_with_replacement, permutations\nfrom fractions import Fraction\nfrom random import choice,getrandbits,randint,random,randrange,shuffle\nfrom re import compile,findall,escape\nfrom statistics import mean,median,mode\nfrom heapq import heapify,heappop,heappush,heappushpop,heapreplace,merge,nlargest,nsmallest\n\nfor test in range(int(stdin.readline())):\n    s=input()\n    l=findall(r'1+',s)\n    lengths=[len(i) for i in l]\n    lengths.sort(reverse=True)\n    alice=0\n    for i in range(0,len(lengths),2):\n        alice+=lengths[i]\n    print(alice)", "import sys\ninput = sys.stdin.readline\nT = int(input())\n\nfor t in range(T):\n    s = input()[:-1]\n\n    counts = []\n    current = 0\n    for c in s:\n        if c == '1':\n            current += 1\n        else:\n            counts.append(current)\n            current = 0\n    if current:\n        counts.append(current)\n\n    res = 0\n    counts = sorted(counts, reverse=True)\n    for i in range(len(counts)):\n        if 2*i >= len(counts):\n            break\n        res += counts[2*i]\n    print(res)\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n\ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n\ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n\ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\ts = SI()\n\ta = []\n\tcount = 0\n\tfor i in range(len(s)):\n\t\tif s[i] == \"1\":\n\t\t\tcount+=1\n\t\telse:\n\t\t\ta.append(count)\n\t\t\tcount = 0\n\ta.append(count)\n\ta.sort(reverse=True)\n\tprint(sum(a[0:len(a):2]))", "from math import *\nfrom collections import *\nfrom random import *\nfrom decimal import Decimal\nfrom heapq import *\nfrom bisect import *\nimport sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**5)\ndef lis():\n    return list(map(int,input().split()))\ndef ma():\n    return list(map(int,input().split()))\ndef inp():\n    return int(input())\ndef st1():\n    return input().rstrip('\\n')\nt=inp()\nwhile(t):\n    t-=1\n    #n=inp()\n    a=st1()\n    oe=[]\n    c=0\n    for i in a:\n        if(i=='1'):\n            c+=1\n        else:\n            if(c!=0):\n                oe.append(c)\n                c=0\n    if(c):\n        oe.append(c)\n    s=0\n    oe.sort(reverse=True)\n    for i in range(len(oe)):\n        if(i%2==0):\n            s+=oe[i]\n    print(s)\n        \n", "for _ in range(int(input())):\n    s = input() + '0'\n    A = []\n    tr = False\n    x = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            if tr:\n                x += 1\n            else:\n                tr = True\n                x = 1\n        else:\n            if tr:\n                tr = False\n                A.append(x)\n    A.sort(reverse=True)\n    Ans = 0\n    for i in range(len(A)):\n        if i % 2 == 0:\n            Ans += A[i]\n    print(Ans)", "t = int(input())\nwhile t:\n    s = input()\n    arr = []\n    k = 0\n    for i in s:\n        if i == '1':\n            k += 1\n        else:\n            arr.append(k)\n            k = 0\n    if k:\n        arr.append(k)\n    arr.sort(reverse=True)\n    ans = 0\n    for i in range(0, len(arr), 2):\n        ans += arr[i]\n    print(ans)\n    t -= 1\n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    x = input().rstrip()\n    \n    arr = []\n    \n    c = 0\n    for char in x:\n        if char=='1':\n            c+=1\n        else:\n            arr.append(c)\n            c = 0\n            \n    arr.append(c)\n    arr.sort()\n    arr.reverse()\n    \n    ans = 0\n    for i in range(0,len(arr),2):\n        ans += arr[i]\n        \n    print(ans)", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    S=input().strip()+\"0\"\n\n    L=[]\n\n    NOW=0\n    for s in S:\n        if s==\"0\":\n            L.append(NOW)\n            NOW=0\n        else:\n            NOW+=1\n\n    L.sort(reverse=True)\n\n    ANS=0\n\n    for i in range(0,len(L),2):\n        ANS+=L[i]\n\n    print(ANS)\n        \n", "for _ in range (int(input())):\n    s=input()\n    a = []\n    flag = 0\n    count = 0\n    for i in range (len(s)):\n        if s[i]=='1':\n            count+=1\n        else:\n            a.append(count)\n            count=0\n        if i==len(s)-1 and count!=0:\n            a.append(count)\n    a.sort(reverse=True)\n    ans = 0\n    for i in range(len(a)):\n        if i%2==0:\n            ans+=a[i]\n    print(ans)", "for t in range(int(input())):\n\ts = input()\n\tlast = -1\n\tnum = []\n\tn = len(s)\n\tfor i in range(n):\n\t\tif (s[i] == \"0\"):\n\t\t\tif (i - last - 1 > 0):\n\t\t\t\tnum.append(i - last - 1)\n\t\t\tlast = i\n\tif (n - last - 1 > 0):\n\t\tnum.append(n - last - 1)\n\tnum = sorted(num)[::-1]\n\tans = 0\n\tfor i in range(0, len(num), 2):\n\t\tans += num[i]\n\tprint(ans)", "for test in range(int(input())):\n    s = input()\n    a = []\n    now = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == \"0\":\n            if now > 0:\n                a.append(now)\n            now = 0\n        else:\n            now += 1\n    if now > 0:\n        a.append(now)\n    a.sort(reverse=True)\n    ans = 0\n    for i in range(0, len(a), 2):\n        ans += a[i]\n    print(ans)", "for _ in range(int(input())):\n    s = input()\n\n    ones = []\n    cnt = 0\n    for i in s:\n        if i == '1':\n            cnt += 1\n        else:\n            if cnt != 0:\n                ones.append(cnt)\n                cnt = 0\n    if cnt != 0:\n        ones.append(cnt)\n\n    ones.sort(reverse=True)\n    print(sum(ones[::2]))\n", "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\ndef solve():\n\ts = input()\n\n\tsets = []\n\tstreak = 0\n\tfor i in range(len(s)):\n\t\tif s[i]=='1':\n\t\t\tstreak+=1\n\t\telse:\n\t\t\tif streak>0:\n\t\t\t\tsets.append(streak)\n\t\t\t\tstreak=0\n\tif streak>0:\n\t\tsets.append(streak)\n\t\tstreak=0\n\n\tsets.sort(reverse=True)\n\n\tprint(sum(sets[::2]))\n\n\nq=nn()\nfor _ in range(q):\n\tsolve()\n", "t = int(input())\n\nfor _ in range(t):\n    s = [int(i) for i in input().strip()]\n    n = len(s)\n    bckt = []\n    ct = 0\n    \n    for i in range(n):\n        if s[i]:\n            ct += 1\n        else:\n            if ct:\n                bckt.append(ct)\n                ct = 0\n    \n    if ct:\n        bckt.append(ct)\n        \n    bckt.sort(reverse=True)\n    print(sum(bckt[::2]))", "for i in range(int(input())):\n\tip=list(map(int,input()))\n\tones=[]\n\ttot=0\n\tfor i in ip:\n\t\tif i==1:\n\t\t\ttot+=1\n\t\telse:\n\t\t\tones.append(tot)\n\t\t\ttot=0\n\tif tot:ones.append(tot)\n\tones.sort(reverse=True)\n\tans=0\n\tfor i in range(0,len(ones),2):\n\t\tans+=ones[i]\n\tprint(ans)", "#BINOD\nimport math\ntest = int(input())\nfor t in range(test):\n    s = input()\n    n = len(s)\n    A = []\n    o=0\n    for i in range(n):\n        if(s[i]=='1'):\n            o+=1\n        else:\n            A.append(o)\n            o=0\n    if(s[n-1]=='1'):\n        A.append(o)\n    A.sort(reverse = True)\n    ans = 0\n    for i in range(0,len(A),2):\n        ans += A[i]\n    print(ans)\n\n\n\n\n#Binod\n", "for _ in range(int(input())):\n    data = list(map(int,list(input())))\n    fl = False\n    data.append(\"&\")\n    l = 0\n    st = []\n    for i in range(len(data)):\n        if fl and data[i] == 1:\n            l+=1\n            continue\n        if fl and data[i]!=1:\n            st.append(l)\n            l = 0\n            fl = False\n            continue\n        if not fl and data[i] == 1:\n            l = 1\n            fl = True\n    st.sort(reverse=True)\n    c1 = 0\n    for i in range(0,len(st),2):\n        c1+=st[i]\n    print(c1)", "import math\nfrom collections import deque\nfrom sys import stdin, stdout\nfrom string import ascii_letters\ninput = stdin.readline\n#print = stdout.write\nletters = ascii_letters[:26]\n \nfor _ in range(int(input())):\n    arr = list(map(int, input().strip()))\n    lens = []\n    count = 0\n    for i in arr:\n        if i == 0:\n            if count > 0:\n                lens.append(count)\n            count = 0\n        else:\n            count += 1\n    if count > 0:\n        lens.append(count)\n    lens.sort(reverse=True)\n    res = 0\n    for i in range(0, len(lens), 2):\n        res += lens[i]\n    print(res)\n"]