["import sys\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return list(map(int, tinput()))\n\ndef fiinput():\n    return list(map(float, tinput()))\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():\n    n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = linput()\n    s, t, res = 1, 1, 0\n    while s <= n:\n        res += 1\n        n -= s\n        t = 2 * t + 1\n        s = (t * (t + 1)) // 2\n    print(res)\n        \n    \n                \n    \n    \n    \n            \n    \n        \n    \n\nfor i in range(iinput()):\n    main()\n", "for _ in [0]*int(input()):\n n=int(input());o=0;c=1\n while n >= 0:\n  n-=c*(c+1)//2;o+=1;c=2*c+1\n print(o-1)", "tests = int(input())\nfor test in range(tests):\n    n = int(input())\n    ans = 0\n    s = 0\n    for i in range(1, 31):\n        d = 2 ** i - 1\n        r = d * (d + 1) // 2\n        if s + r <= n:\n            ans += 1\n            s += r\n        else:\n            break\n    print(ans)\n        \n", "t = int(input())\nfor _ in range(t):\n  x = int(input())\n  ans = 0\n  size = 1\n  temp = (size*(size+1))//2\n  while x >= temp:\n    ans += 1\n    x -= temp\n    size = 2*size + 1\n    temp = (size*(size+1))//2\n  print(ans)\n", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    wyn = 0\n    pot = 1\n    total = 1\n    while total <= n:\n        wyn += 1\n        pot += 1\n        total += (2**pot-1)*(2**pot)//2\n    print(wyn)", "for _ in range(int(input())):\n    n = int(input())\n\n    i = 1\n    have = 0\n    ans = 0\n    while have + i * (i + 1) // 2 <= n:\n        have += i * (i + 1) // 2\n        ans += 1\n        i = i * 2 + 1\n\n    print(ans)\n", "from bisect import bisect_left,bisect_right\na=[1]\nf=1\nwhile a[-1]<=10**18:\n  f=f*2+1\n  a.append(a[-1]+f*(f+1)//2)\nfor _ in range(int(input())):\n  n=int(input())\n  print(bisect_right(a,n))", "import bisect\np2 = [2 ** n - 1 for n in range(32)]\np2 = [x * (x + 1) // 2 for x in p2]\nfor i in range(1, 32):\n    p2[i] += p2[i - 1]\nfor _ in range(int(input())):\n    n = int(input())\n    print(bisect.bisect_right(p2, n) - 1)\n", "for _ in range(int(input())):\n\tans=0\n\tn=int(input())\n\tcp=1\n\twhile cp*(cp+1)//2<=n:\n\t\tans+=1\n\t\tn-=cp*(cp+1)//2\n\t\tcp=cp*2+1\n\tprint(ans)", "y=lambda:int(input())\nfor _ in range(y()):\n n=y();c=0\n while 2**(2*c+1)-2**c<=n:n-=2**(2*c+1)-2**c;c+=1\n print(c)", "l=[]\ni=1\nwhile(i<10**18+5):\n    l.append((i*(i+1))//2)\n    i=i*2+1\nt=int(input())\nfor you in range(t):\n    n=int(input())\n    count=0\n    sum=0\n    for i in range(len(l)):\n        sum+=l[i]\n        if(sum>n):\n            break\n    print(i)\n", "from bisect import bisect_right\nt = int(input())\na = []\ns = 0\nx = 2\nwhile s <= 10 ** 18:\n    s += x * (x - 1) // 2\n    a.append(s)\n    x *= 2\nfor _ in range(t):\n    print(bisect_right(a, int(input())))\n", "nice = [1]\nwhile nice[-1] <= 10**18:\n    nice.append((nice[-1]<<1)+1)\nfor i in range(len(nice)):\n    nice[i] = nice[i] * (nice[i] + 1) // 2\n\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    i = 0\n    num = 0\n    while x > 0 and i < len(nice):\n        if x >= nice[i]:\n            x -= nice[i]\n            num += 1\n        i += 1\n    print(num)", "T = int(input())\n\ndef need(n):\n    return (n*(n+1))//2\n\nfor t in range(T):\n    x = int(input())\n    ans = 0\n    nxt = 1\n    while True:\n        if x < need(nxt):\n            break\n        ans+=1\n        x -= need(nxt)\n        nxt = nxt*2+1\n    print(ans)", "from math import log2\nfor _ in range(int(input())):\n    x = int(input())\n    acc = 0\n    for i in range(1, 60):\n        acc += (2**i-1) * (2**(i-1))\n        if acc > x:\n            break\n    print(i-1)\n", "import sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor t in range(T):\n    X = int(input())\n    answer = 0\n    pow2 = 1\n\n    while True:\n        r = 2**pow2 - 1\n        needed = r*(r+1) // 2\n        if needed <= X:\n            answer += 1\n            X -= needed\n        else:\n            break\n        pow2 += 1\n\n    print(answer)\n", "for _ in range(int(input())):\n    n = int(input())\n    i = 1\n    while True:\n        x = pow(2,i-1)*(pow(2,i)-1)\n        if n < x:\n            break\n        n -= x\n        i += 1\n    print(i-1)", "gans = []\nfor _ in range(int(input())):\n    n = int(input())\n    ans = 0\n    cur = 1\n    while n >= cur * (cur + 1) // 2:\n        n -= cur * (cur + 1) // 2\n        ans += 1\n        cur = cur * 2 + 1\n        #print(cur, n)\n    gans.append(ans)\nprint('\\n'.join(map(str, gans)))\n", "arr=[]\ns=1\ni=1\nwhile s<((10**18)+1):\n    temp=(s*(s+1))//2\n    arr.append(temp)\n    s+=(2**i)\n    i+=1\nt=int(input())\nfor i in range(t):\n    x=int(input())\n    ans=0\n    j=0\n    while x>0:\n        if arr[j]<=x:\n            x-=arr[j]\n            ans+=1\n        else:\n            x=0\n        j+=1\n    print(ans)", "l = [1]\nfor i in range(70):\n    l.append(2*l[-1] + 1)\n# print(l[-1])\nl = [(ll * (ll+1))//2 for ll in l]\nlll = [l[0]]\nfor i in range(1, 70):\n    lll.append(lll[-1] + l[i])\nl = lll\n\nfor t in range(int(input())):\n    n = int(input())\n    for i in range(70):\n        if l[i] > n:\n            print(i)\n            break", "t = int(input())\n\nj = 0\nr  = 0\nR = []\nfor i in range(10**5):\n    j = 2*j+1\n    s = j*(j+1)//2\n    r += s\n    R.append(r)\n    if r > 10**18:\n        break\n\nimport bisect\n\nfor _ in range(t):\n    x = int(input())\n    i = bisect.bisect_right(R, x)\n    print(i)\n", "A = [1]\ns = 1\nfor i in range(32):\n    s *= 4\n    A.append(A[-1] * 2 + s)\nS = [0] * 33\nfor i in range(32):\n    S[i+1] = S[i] + A[i]\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    for i in range(33):\n        if S[i] > N:\n            print(i - 1)\n            break\n\n", "import sys\nii = lambda: sys.stdin.readline().strip()\nidata = lambda: [int(x) for x in ii().split()]\n\ndef solve():\n    ans = 0\n    cnt = 1\n    s = 1\n    n = int(ii())\n    while s <= n:\n        cnt = 2 * cnt + 1\n        ans += 1\n        n -= s\n        s = (cnt * (cnt + 1)) // 2\n    print(ans)\n    return\n\nfor t in range(int(ii())):\n    solve()\n"]