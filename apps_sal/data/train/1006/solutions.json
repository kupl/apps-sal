["for _ in range(int(input())):\n n,d=map(str,input().split())\n k=list(n)\n dd,c,n=d,0,len(n)\n for x in range(n):\n  if int(k[n-x-1])>int(d):\n   k.pop(n-x-1)\n   c+=1 \n  else:\n   d=k[n-x-1]\n print(''.join(k)+c*dd)", "# cook your dish here\nfrom sys import stdin,stdout\n\nfor _ in range(int(input())):\n n,d=map(str,stdin.readline().split())\n li=list(n)\n s=d \n # print(li)\n c=0\n for i in range(len(n)-1,-1,-1):\n  if li[i]>d:\n   li[i]=''\n   c+=1 \n  else:\n   d=li[i]\n s=''.join(li)+c*s\n print(s)", "# cook your dish here\nfor _ in range(int(input())):\n n,d = input().split()\n s = list(n)\n l=list(n)\n prev = d\n k=0\n for x in range(len(l)-1, -1, -1):\n  if n[x]>prev:\n   s[x]=''\n   k+=1;\n  else:\n   prev=s[x]\n   \n s = ''.join(s) + d*k\n print(s)", "t = int(input())\n\nwhile t:\n t = t-1\n n,d = input().split()\n n = list(n)\n d = int(d)\n \n n = list(map(int, n))\n \n x = []\n n.reverse()\n \n z = 0\n cc = d\n for c in n:\n  # print(c, cc, z)\n  if c > cc:\n   z +=1\n  else:\n   x.append(c)\n   cc = c\n   \n x.reverse()\n \n for _ in range(z):\n  x.append(d)\n x = list(map(str, x)) \n print(\"\".join(x))", "t = int(input())\nfor i in range(t):\n l = list(map(int, input().split()))\n s = str(l[0])\n while 1:\n  s = s+str(l[1])\n  for x in range(len(s)-1):\n   if s[x]>s[x+1]:\n    s=s[:x]+s[x+1:]\n    break\n  else:\n   s = s[:len(s)-1]\n   break\n print(int(s))\n", "t = int(input())\nfor i in range(t):\n l = list(map(int, input().split()))\n s = str(l[0])\n while 1:\n  s = s+str(l[1])\n  for x in range(len(s)-1):\n   if s[x]>s[x+1]:\n    s=s[:x]+s[x+1:]\n    break\n  else:\n    s = s[:len(s)-1]\n    break\n print(int(s))", "import sys\ntest = int(input())\nsol = []\nfor i in range(test):\n j = list(map(int, input().strip().split(\" \")))\n n,d = j[0],j[1]\n digits = list(str(n))\n for i in range(len(digits)-1, -1, -1):\n  first=0\n  if(i<len(digits)-1):\n   if (int(digits[i])>int(digits[i+1])):\n    first=1\n  if int(digits[i])>=d or first==1:\n   digits.append(str(d))\n   del(digits[i])\n str1 = \"\" \n sol.append(str1.join(digits))\nfor i in range(test):\n print(int(sol[i]))", "t = int(input())\n\nwhile t:\n t=t-1\n n,d = list(map(int, input().split()))\n \n n = list(map(int,list(str(n))))\n n = n[::-1]\n\n \n new = []\n count = 0\n \n m = d \n for i in range(len(n)):\n  if(n[i] <= m):\n   m = n[i]\n   new.append(str(n[i]))\n  else:\n   count+=1\n \n new = new[::-1]\n \n for i in range(count):\n  new.append(str(d))\n  \n print(\"\".join(new))\n  \n \n  \n   \n", "t=int(input())\nfor _ in range(t):\n n,k=list(map(int,input().split()))\n s=list(str(n))\n l=len(s)\n s1=\"\"\n if(int(min(s))>k):\n  for i in range(l):\n   s1+=str(k)\n  print(s1)\n else:\n  c=min(s)\n  while(int(c)!=k and len(s)!=0):\n   s1+=c\n   ind=s.index(c)\n   s=s[ind+1:]\n   #print(s)\n   for i in range(ind+1):\n    s.append(str(k))\n    #print(s)\n   c=min(s)\n  z=len(s1)\n  for i in range(l-z):\n   s1+=str(k)\n  print(s1)\n   \n    \n   \n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n,d=input().split(\" \")\n q=int(d)\n k=[]\n for i in n:\n  k.append(i)\n   \n k2=k[::]\n\n min=int(d)\n for j in range(len(k2)-1,-1,-1):\n  if int(k2[j])>min:\n    k2.pop(j)\n  else:\n   min=int(k2[j])\n \n\n print(*k2,sep=\"\",end=\"\")\n print(d*(len(k)-len(k2)))", "# cook your dish here\nfor i in range(int(input())):\n n,d=input().split()\n n=list(n)\n x=int(d)\n y=n.copy()\n for j in range(len(n)-1,-1,-1):\n  if int(y[j])<=x:\n   x=int(y[j])\n  else:\n   y.pop(j)\n l=len(y)\n for k in range(len(n)-l):\n  y.append(d)\n print(''.join(y))", "t = int(input())\nfor T in range(t):\n n, d = [x for x in input().split()]\n l = list(n)\n a = [l[0]]\n c = 0\n \n for i in range(1, len(l)):\n  if (l[i] >= a[-1]):\n   a.append(l[i])\n  else:\n   while(len(a) > 0 and a[-1] > l[i]):\n    a = a[:len(a)-1]\n   a.append(l[i])\n   \n for i in a:\n  if i <= d:\n   print(i, end='')\n   c += 1\n  else:\n   break\n print(d*(len(l)-c))\n", "# cook your dish here\nt=int(input())\nwhile(t>0):\n num,d=input().split()\n a=list(map(int,num))\n mi=min(a)\n d=int(d)\n \n l=len(a)\n l1=l\n if mi < d:\n  last=l - a[::-1].index(mi)-1\n  c=0\n  while(last < l):\n   \n   cmi=a.count(mi)\n   for k in range(cmi):\n    print(mi,end='')\n    c=c+1\n   if(last == l-1):\n    break\n   a =a[last+1 :]\n   mi=min(a)\n   if(mi >=d):\n    break;\n   l=len(a) \n   last=l - a[::-1].index(mi)-1\n   \n  while c< l1:\n   print(d,end='')\n   c=c+1\n  \n else:\n  for i in range(l1):\n   print(d,end='')\n print() \n t=t-1", "t=int(input())\nfor _ in range(t):\n a,b=input().split()\n d={}\n for i in range(len(a)):\n  try:\n   d[a[i]]+=[i]\n  except:\n   d[a[i]]=[i]\n x=list(d.keys())\n x.sort()\n c=-1\n ans=\"\"\n for i in x:\n  if i>b:\n   break\n  for j in d[i]:\n   if j>c:\n    c=j\n    ans+=i\n    \n print(ans+b*(len(a)-len(ans)))\n \n", "# cook your dish here\nT= int(input())\nfor i in range(T):\n n,d=input().split()\n d=int(d)\n a=[]\n l=len(n)\n mn=d\n \n for j in range(l):\n  a.append(int(n[j]))\n  \n  \n for k in range(l-1,-1,-1):\n  if(a[k]>mn):\n   a.pop(k)\n   a.append(d)\n  mn=min(mn,a[k])\n  \n  \n print(*a,sep=\"\",end=\"\\n\")\n T=T-1 \n  \n ", "t = int(input())\n\nwhile t:\n n, d = [int(x) for x in input().split()]\n\n ans = 0\n if n == 1:\n  ans = d if n > d else n\n  print(ans)\n else:\n  temp = str(n)\n  l = len(temp)\n  orig = temp[l - 1]\n  if int(orig) > d:\n   updat = str(d)\n  else:\n   updat = orig\n  \n  orig = updat\n\n  for i in range(l-2, -1, -1):\n   orig = temp[i] + updat\n   updat = updat + str(d)\n   if int(orig) > int(updat):\n    orig = updat\n   else:\n    updat = orig\n   \n  print(int(orig))\n t -= 1", "t = int(input())\n\nwhile t:\n n, d = [int(x) for x in input().split()]\n\n ans = 0\n if n == 1:\n  ans = d if n > d else n\n  print(ans)\n else:\n  temp = str(n)\n  l = len(temp)\n  orig = temp[l - 1]\n  if int(orig) > d:\n   updat = str(d)\n  else:\n   updat = orig\n  \n  orig = updat\n\n  for i in range(l-2, -1, -1):\n   orig = temp[i] + updat\n   updat = updat + str(d)\n   if int(orig) > int(updat):\n    orig = updat\n   else:\n    updat = orig\n   \n  print(int(orig))\n t -= 1", "for _ in range(int(input())):\n N,d=[int(x) for x in input().split()]\n S=str(N)\n New=str()\n List=[]\n List1=[]\n for i in S:\n  List.append(int(i))\n for i in range(len(List)):\n  if(List[i]==min(List[i:len(List)])):\n   New+=str(List[i])\n for i in New:\n  List1.append(int(i))\n for i in range(len(List1)-1,-1,-1):\n  if(List1[i]>=d):\n   List1[i]=d\n  else:\n   break\n BadNew=str()\n for i in List1:\n  BadNew+=str(i)\n \n X=len(S)-len(BadNew)\n for i in range(X):\n  BadNew+=str(d)\n print(BadNew)\n", "T = int(input())\nwhile T != 0:\n T = T-1\n N,d = map(int,input().split())\n digits = [int(i) for i in list(str(N))]\n change = True\n digits.append(d)\n while change != False:\n  change = False\n  for i in range(0,len(digits)-1):\n   ##print(digits)\n   if digits[i] > digits[i+1]:\n    change = True\n    digits.pop(i)\n    digits.append(d)\n    ##print(digits.pop(i))\n    break\n digits.pop()\n ans = ''.join(map(str,digits))\n ans = int(ans)\n print(ans)", "for x in range(int(input())):\n n,d=list(map(int,input().split()))\n l=list(str(n))\n l1=[]\n y=0\n t=0\n while(True):\n  m=min(l)\n  pos=l.index(m)\n  if(int(m)>=d):\n   break\n  else:\n   l1.append(m)\n  if(pos+1>=len(l)):\n   break\n  for x in range(pos+1):\n   l.remove(l[0])\n t1=\"\".join(l1)\n t1=str(t1)+str(d)*(len(str(n))-len(str(t1)))\n print(t1)\n   \n", "for __ in range(int(input())):\n\n N, d = tuple(map(int, input().split()))\n\n current_num = list(map(int, list(str(N))))\n\n length = len(current_num)\n\n while True:\n  for i in range(1, length + 1):\n\n   if i == length:\n    num = current_num[i - 1]\n    if num > d:\n     del current_num[i - 1]\n     current_num.append(d)\n     break\n   else:\n    num = current_num[i - 1]\n    if num > current_num[i]:\n     del current_num[i - 1]\n     current_num.append(d)\n     break\n  else:\n   break\n\n num = ''\n for digit in current_num:\n  num += str(digit)\n\n print(num)", "for __ in range(int(input())):\n\n N, d = tuple(map(int, input().split()))\n\n current_num = list(map(int, list(str(N))))\n\n length = len(current_num)\n\n while True:\n  for i in range(1, length + 1):\n\n   if i == length:\n    num = current_num[i - 1]\n    if num > d:\n     del current_num[i - 1]\n     current_num.append(d)\n     break\n   else:\n    num = current_num[i - 1]\n    if num > current_num[i]:\n     del current_num[i - 1]\n     current_num.append(d)\n     break\n  else:\n   break\n\n num = ''\n for digit in current_num:\n  num += str(digit)\n\n print(num)", "t = int(input())\nfor T in range(t):\n n, d = [x for x in input().split()]\n l = list(n)\n a = [l[0]]\n c = 0\n \n for i in range(1, len(l)):\n  if (l[i] >= a[-1]):\n   a.append(l[i])\n  else:\n   while(len(a) > 0 and a[-1] > l[i]):\n    a = a[:len(a)-1]\n   a.append(l[i])\n   \n for i in a:\n  if i <= d:\n   print(i, end='')\n   c += 1\n  else:\n   break\n print(d*(len(l)-c))\n", "# your code goes here\n# your code goes here\nfor _ in range(int(input())):\n n,d=map(int,input().split())\n l=list(map(int,list(str(n))))\n if l==sorted(l):\n  a=[x for x in l if x<=d]\n  l=a+[d]*(len(l)-len(a))\n else:\n  i=0\n  while(True):\n   if l[i]>l[i+1]:\n    l.pop(i)\n    l.append(d)\n    i=0\n   else:\n    i+=1\n   if l==sorted(l):\n    break\n l=list(map(str,l)) \n print(int(\"\".join(l)))", "def show(t):\n for _ in range(t):\n  a,n = map(int,input().rstrip().split())\n  res = []\n  res1 = []\n  a = str(a)\n  for i in a:\n   res.append(int(i))\n  a = n\n  for i in range(len(res)-1,-1,-1):\n   if a>=res[i]:\n    a = res[i]\n    res1.append(a)\n  for i in range(len(res1)-1,-1,-1):\n   print(res1[i],end=\"\")\n  for i in range(len(res)-len(res1)):\n   print(n,end=\"\")\n  print(\"\")\nshow(int(input()))"]