["# This is not my code, it's Snehasish Karmakar's.  Refer to http://www.codechef\u00a0\u00a0\u00a0\u00a0.com/viewsolution/7153774\n# for original version.\n# Submitting it to try and work out if it can be sped up.\n\ndef compute_nCr(n,r) :\n C[0][0]=1\n for i in range(1,n+1) :\n#       print \"i\",i\n  C[i][0]=1\n  for j in range(1,min(i,r)+1) :\n   if i!=j :\n    C[i][j]=(C[i-1][j-1]+C[i-1][j])%MOD\n   else :\n    C[i][j]=1\n  \n \ndef solve(n,m) :\n store=[C[m+i-1][i] for i in range(m+1)]\n \n for i in range(1,n+1) :\n  s=1\n  for j in range(1,m+1) :\n   s=(s+store[j])%MOD\n   store[j]=(s*C[m+j-1][j])%MOD\n  #   print \"a[%d][%d]=%d\"%(i,j,s)\n \n return s \n \nMOD=1000000000\nLIMIT=2000\n \nC=[[0] * (LIMIT + 1) for _ in range(2*LIMIT+1)]\ncompute_nCr(2*LIMIT,LIMIT)\nt=int(input())\n \nwhile t :\n n,m=list(map(int,input().split()))\n print(solve(n,m))\n t-=1", "# This is not my code, it's Snehasish Karmakar's.  Refer to http://www.codechef\u00a0\u00a0\u00a0\u00a0.com/viewsolution/7153774\n# for original version.\n# Submitting it to try and work out if it can be sped up.\n\ndef compute_nCr(n,r) :\n C[0][0]=1\n for i in range(1,n+1) :\n#       print \"i\",i\n  C[i][0]=1\n  for j in range(1,min(i,r)+1) :\n   if i!=j :\n    C[i][j]=(C[i-1][j-1]+C[i-1][j])%MOD\n   else :\n    C[i][j]=1\n  \n \ndef solve(n,m) :\n store=[C[m+i-1][i] for i in range(m+1)]\n \n for i in range(1,n+1) :\n  s=1\n  for j in range(1,m+1) :\n   s=(s+store[j])%MOD\n   store[j]=(s*C[m+j-1][j])%MOD\n  #   print \"a[%d][%d]=%d\"%(i,j,s)\n \n return s \n \nMOD=1000000000\nLIMIT=2000\n \nC=[[0 for x in range(LIMIT+1)] for y in range(2*LIMIT+1)]\ncompute_nCr(2*LIMIT,LIMIT)\nt=int(input())\n \nwhile t :\n n,m=list(map(int,input().split()))\n print(solve(n,m))\n t-=1", "import sys\n \nMOD = 1000000000\n \nT = int(sys.stdin.readline())\n \n \ndef gcd(a, b):\n return a if b == 0 else gcd(b, a % b)\n \n \ndef solve(n, r):\n if r > n - r:\n  r = n - r\n \n num = 1\n den = 1\n j = 1\n for i in range(n - r + 1, n + 1):\n  num *= i\n  den *= j\n  j += 1\n \n return (num / den) % MOD\n \nfor t in range(T):\n n, r = list(map(int, sys.stdin.readline().split()))\n t=r-1\n q=0\n li=[]\n for i in range(r+1):\n  li.append(solve(t,q))\n  t+=1\n  q+=1\n arr=li[:]\n temp=0\n for i in range(1,n):\n  summ=sum(arr)\n  for j in range(r+1):\n   if(j==0):\n    summ+=0\n   else:\n    summ-=temp\n   temp=arr[j]\n   arr[j]=(li[j]*(summ%MOD))%MOD\n print(sum(arr)%MOD) "]