["n = int(input())\nC = list(map(int, input().split()))\n\ndp = [[0]*n for _ in range(n)]\nfor i in range(n) :\n    dp[i][i] = 1\n\nfor i in range(n-2, -1, -1) :\n    for j in range(i+1, n) :\n        dp[i][j] = 1 + dp[i+1][j]\n        if C[i] == C[i+1] : dp[i][j] = min( dp[i][j], 1 + (dp[i+2][j] if i+2 < n else 0) )\n        for k in range(i+2, j) :\n            if C[i] == C[k] : dp[i][j] = min( dp[i][j], dp[i+1][k-1] + dp[k+1][j] )\n        if C[i] == C[j] and j-i > 1:\n            dp[i][j] = min( dp[i][j], dp[i+1][j-1] )\n\nprint( dp[0][n-1] )\n\n            \n        \n", "def main():\n    n, l = int(input()), list(map(int, input().split()))\n    dp = [[0] * n for _ in range(n)]\n    for i in range(n):\n        dp[i][i] = 1\n    for i in range(n - 1, 0, -1):\n        ci, row = l[i - 1], dp[i]\n        for j in range(i, n):\n            tmp = [1 + row[j]]\n            if ci == l[i]:\n                tmp.append(1 + dp[i + 1][j] if i + 1 < n else 1)\n            for k in range(i + 1, j):\n                if ci == l[k]:\n                    tmp.append(row[k - 1] + dp[k + 1][j])\n            if ci == l[j] and j > i:\n                tmp.append(row[j - 1])\n            dp[i - 1][j] = min(tmp)\n    print(dp[0][n - 1])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, l = int(input()), list(map(int, input().split()))\n    dp = [[0] * n for _ in range(n + 1)]\n    for le in range(1, n + 1):\n        for lo, hi in zip(list(range(n)), list(range(le - 1, n))):\n            row, c = dp[lo], l[lo]\n            if le == 1:\n                row[hi] = 1\n            else:\n                tmp = [1 + dp[lo + 1][hi]]\n                if c == l[lo + 1]:\n                    tmp.append(1 + dp[lo + 2][hi])\n                for match in range(lo + 2, hi + 1):\n                    if c == l[match]:\n                        tmp.append(dp[lo + 1][match - 1] + dp[match + 1][hi])\n                row[hi] = min(tmp)\n    print(dp[0][n - 1])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ndp = [[None for j in range(n)] for i in range(n)]\ncl = input().split(' ')\ncl = [int(color) for color in cl]\n\nfor bias in range(0, n):\n    for l in range(n-bias):\n        r = l + bias\n        loc = float('+inf')\n        if bias == 0:\n            dp[l][r] = 1\n        elif bias == 1:\n            if cl[l] == cl[r]:\n                dp[l][r] = 1\n            else:\n                dp[l][r] = 2\n        else:\n            if cl[l] == cl[r]:\n                loc = dp[l+1][r-1]\n            for k in range(l, r):\n                loc = min(loc, dp[l][k]+dp[k+1][r])\n            dp[l][r] = loc\n\nprint(dp[0][n-1])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])\n", "dp = [[-1 for i in range(505)] for j in range(505)]\nn = int(input())\nA = [int(i) for i in input().split()]\n\ndef do(i, j):\n    #print('At',i , j)\n    if i>=j:\n        dp[i][j] = 1\n        return 1\n    \n    if dp[i][j] != -1:\n        return dp[i][j]\n    \n    ans = len(A)\n    if A[i] == A[j]:\n        ans = min(ans, do(i+1, j-1))\n    for x in range(i, j):\n        \n        left = do(i, x)\n        right = do(x+1, j)\n        ans = min(ans, left+right)\n\n    dp[i][j] = ans\n    return ans\n\nif len(set(A)) == n:\n    print(n)\nelse:\n    print(do(0, n-1))\n", "# -*- coding:utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 1/9/20\n\n\"\"\"\n\nimport collections\nimport time\nimport os\nimport sys\nimport bisect\nimport heapq\nfrom typing import List\n\n\ndef solve(N, A):\n    dp = [[N for _ in range(N+1)] for _ in range(N)]\n    for i in range(N):\n        dp[i][0] = 0\n        dp[i][1] = 1\n    \n    for l in range(2, N+1):\n        for i in range(N-l+1):\n            for j in range(1, l):\n                dp[i][l] = min(dp[i][l], dp[i][j] + dp[i+j][l-j])\n            \n            # j = 0\n            # while j < l // 2 and A[i+j] == A[i+l-j-1]:\n            #     j += 1\n            # if j >= l // 2:\n            #     dp[i][l] = min(dp[i][l], 1)\n            # elif j > 0:\n            #     dp[i][l] = min(dp[i][l], 1 + dp[i+j][l-2*j])\n            #     for k in range(i+j, i+l-j):\n            #         dp[i][l] = min(dp[i][l], 1 + dp[i+j][k-i-j] + dp[k][l - 2 * j-1])\n            \n            if i + 1 < N and A[i] == A[i+l-1]:\n                dp[i][l] = max(1, dp[i+1][l-2])\n            else:\n                dp[i][l] = min(dp[i][l], 1 + dp[i][l-1])\n                if i + 1 < N:\n                    dp[i][l] = min(dp[i][l], 1 + dp[i+1][l-1])\n                    \n            for j in range(i + 1, i + l - 2):\n                if A[i] == A[j]:\n                    dp[i][l] = min(dp[i][l], max(dp[i+1][j-i-1], 1) + max(dp[j+1][i+l-j-1], 1))\n                if A[j] == A[i+l-1]:\n                    dp[i][l] = min(dp[i][l], max(dp[i][j-i], 1) + max(dp[j+1][i + l - j - 2], 1))\n\n    return dp[0][N]\n    \n\nN = int(input())\nA = [int(x) for x in input().split()]\nprint(solve(N, A))", "dp=[]\ndef calculate(i,j,colors):\n    if i>j: return 0\n    if dp[i][j]==-1:\n        if i==j: \n            return 1\n        dp[i][j] = 10000\n        dp[i][j] = min(dp[i][j],1+calculate(i+1,j,colors))\n        # print(i,j)\n        if colors[i]==colors[i+1]:\n            dp[i][j] = min(dp[i][j],1+calculate(i+2,j,colors))\n        for k in range(i+2,j+1):\n            if colors[k]==colors[i]:\n                dp[i][j] = min(dp[i][j],calculate(i+1,k-1,colors)+calculate(k+1,j,colors))\n    return dp[i][j]\n\ndef solve():\n    t = int(input())\n    colors = list(map(int, input().split()))\n    [dp.append([-1]*len(colors)) for x in range(len(colors))]\n    print (calculate(0,len(colors)-1,colors))\n\ntry:\n    solve()\nexcept Exception as e:\n    print (e)", "n = int(input())\nc = [*map(int, input().split())]\ninf = n + 1\ndp = [[inf for _ in range(n)] for __ in range(n)]\n\ndef find(l, r):\n    if l > r:\n        return 0\n    if l == r or (l == r - 1 and c[l] == c[r]):\n        dp[l][r] = 1\n        return 1\n    if dp[l][r] != inf:\n        return dp[l][r]\n    m = 1 + find(l + 1, r)\n    for i in range(l + 2, r + 1):\n        if c[l] == c[i]:\n            m = min(m, find(l + 1, i - 1) + find(i + 1, r))\n    if c[l] == c[l + 1]:\n        m = min(m, find(l + 2, r) + 1)\n    dp[l][r] = m\n    return m\n\nmi = inf\nfor i in range(n):\n    mi = min(find(0, i) + find(i + 1, n - 1), mi)\nprint(mi)", "#Problem F - Zuma\n\n\nn = int(input())\nseg = n - 1\ngemstones = [0]*501\ni = 0\nfor j in input().split(' '):\n    gemstones[i] = int(j)\n    i +=1\nmatriz = [[0] * 501 for i in range(501)]\n\nfor k in range (1, n+1):\n    ini = 0\n    fim = k - 1\n    while (fim < n):\n        if (k == 1):\n            matriz[ini][fim] = 1\n\n        else:\n            matriz[ini][fim] = matriz[ini + 1][fim] + 1\n\n            if (gemstones[ini] == gemstones[ini + 1]):\n                matriz[ini][fim] = min(matriz[ini][fim], matriz[ini + 2][fim] + 1)\n            \n            for l in range (ini + 2, fim + 1):\n                if (gemstones[ini] == gemstones[l]):\n                    matriz[ini][fim] = min(matriz[ini][fim], matriz[ini + 1][l - 1] + matriz[l + 1][fim])\n        ini += 1\n        fim += 1\n\nprint(matriz[0][seg])\n\n\n\n", "from sys import stdin,stdout\nfor _ in range(1):#(stdin.readline())):\n    n=int(stdin.readline())\n    # n,m=list(map(int,stdin.readline().split()))\n    a=list(map(int,stdin.readline().split()))\n    dp=[[0 for _ in range(n)] for _ in range(n)]\n    for sz in range(n):\n        for i in range(n-sz):\n            j=i+sz\n            # print(i,j)\n            if sz==0:dp[i][j]=1\n            elif sz==1:dp[i][j]=1+int(a[i]!=a[j])\n            else:\n                v=n\n                if a[i]==a[j]:v=dp[i+1][j-1]\n                for k in range(i,j):\n                    v=min(v,dp[i][k]+dp[k+1][j])\n                dp[i][j]=v\n    # print(*dp,sep='\\n')\n    print(dp[0][n-1])", "from sys import stdin,stdout\nfor t in range(1):#int(stdin.readline())):\n    n=int(stdin.readline())\n    a=list(map(int,stdin.readline().split()))\n    dp=[[0 for i in range(n)] for _ in range(n)]\n    for sz in range(n):\n        for i in range(n-sz):\n            j=i+sz\n            if sz<=1:\n                dp[i][j]=1 if a[i]==a[j] else 2\n            else:\n                v=j-i+1\n                for k in range(i,j):\n                    v=min(v,dp[i][k]+dp[k+1][j])\n                if a[i]==a[j]:v=min(v,dp[i+1][j-1])\n                dp[i][j]=v\n    print(dp[0][n-1])", "n = int(input())\nt = tuple(map(int, input().split()))\nm = [[1] * n for i in range(n + 1)]\nfor d in range(2, n + 1):\n    for i in range(n - d + 1):\n        m[d][i] = min(m[x][i] + m[d - x][i + x] for x in range(1, d))\n        if t[i] == t[i + d - 1]: m[d][i] = min(m[d][i], m[d - 2][i + 1])\nprint(m[n][0])"]