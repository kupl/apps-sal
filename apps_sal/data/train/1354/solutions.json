["A = [0] * 100001\nM = 1000000007\n\ndef nCk(n, k):\n if k ==0 or k ==n:\n  return 1\n r = (A[n-k]*A[k])%M\n x = (A[n]*pow(r, M-2, M))%M\n return x\n\nfor _ in range(int(input())):\n n, k = list(map(int, input().split()))\n for i in range(n-1):\n  u,v = input().split()\n summ = 0\n A[0] = 1\n for i in range(1, len(A)):\n  A[i] = (i*A[i-1])%M\n for i in range(min(n, k)):\n  b = nCk(k,i+1)\n  c = (nCk(n-1,i)*b)%M\n  c *= A[i+1]\n  summ += (c%M)\n  summ %= M\n print(summ)", "mod=1000000007\nfact=[1]\nfor i in range(1,200):\n fact.append((fact[-1]*i)%mod)\ndef ncr(n,r):\n if n<r:\n  return 0\n return (((fact[n]*pow(fact[n-r],mod-2,mod))%mod)*pow(fact[r],mod-2,mod))%mod\n\nfor _ in range(eval(input())):\n n,k=list(map(int,input().split()))\n for i in range(n-1):\n  u,v=list(map(int,input().split()))\n res=0\n for i in range(1,k+1):\n  res+=(((ncr(k,i)*ncr(n-1,i-1))%mod)*fact[i])%mod\n  res%=mod\n print(res)\n\n", "MOD = 10**9 + 7\n\nfact = [1 for i in range(101)]\nfor i in range(2, 100):\n fact[i] = (fact[i - 1] * i) % MOD\n\ninv = [1 for i in range(101)]\nfor i in range(0, 100):\n inv[i] = pow(fact[i], MOD - 2, MOD)\n\ndef C(n, r):\n return (((fact[n] * inv[r]) % MOD) * inv[n - r]) % MOD\n\nt = int(input())\nfor qq in range(t):\n n, k = list(map(int, input().split()))\n for kk in range(n - 1):\n  a, b = list(map(int, input().split()))\n\n ans = 0\n for i in range(1, k + 1):\n  if (i-1) > (n-1):\n   break\n  cur = C(n - 1, i - 1) * C(k, i)\n  cur %= MOD\n  cur *= fact[i]\n  cur %= MOD\n  ans += cur\n  ans %= MOD\n\n print(ans % MOD)\n"]