["def main():\n    n = int(input())\n    a = [[int(i) for i in input().split()] for j in range(n)]\n    \n    result = [-1] * n\n    for i in range(n - 1):\n        for j in range(n):\n            d = set(a[j][k] for k in range(n) if result[k] == -1 and j != k)\n            if len(d) == 1:\n                result[j] = d.pop()\n    result[result.index(-1)] = n\n    \n    print(' '.join(str(i) for i in result))\n    \nmain()", "n = int(input())\narr = [list(map(int, input().split())) for i in range(n)]\nans = []\nfor i in arr:\n\tanf = max(i)\n\twhile (anf in ans):\n\t\tanf+=1\n\tans.append(anf)\nprint(*ans)", "n = int(input())\nfor i in range(n):\n    k = list(map(int, input().split()))\n    if len(set(k)) == n:\n        k[k.index(0)] = n\n        print(*k)\n        break", "v = [max(map(int, input().split())) for i in range(int(input()))]\nv[v.index(max(v))] += 1\nprint(' '.join(map(str, v)))", "n = int(input())\nperm = [0 for i in range(n)]\na = [[0 for i in range(n)] for i in range(n)]\nb = [0 for i in range(n)]\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n    b[i] = max(a[i])\n\ns = set()\n\nfor i in range(1, n + 1):\n    for j in range(n):\n        if b[j] <= i and j not in s:\n            perm[j] = i\n            s.add(j)\n            break\nprint(*perm)\n", "3\n\ndef remove(A, i, n):\n    for j in range(n):\n        A[i][j] = 0\n        A[j][i] = 0\n\n\nn = int(input())\nA = [list(map(int, input().split())) for i in range(n)]\n\nans = [0 for i in range(n)]\nfor i in range(n - 1):\n    t = -1\n    for j in range(n):\n        f = True\n        g = False\n        for k in range(n):\n            if not (A[j][k] in (0, i + 1) and A[k][j] in (0, i + 1)):\n                f = False\n            if A[j][k] != 0:\n                g = True\n        if f and g:\n            t = j\n\n\n    ans[t] = i + 1\n    remove(A, t, n)\n\n\nfor i in range(n):\n    if ans[i] == 0:\n        ans[i] = n\n\nprint(\" \".join(map(str, ans)))\n                \n", "N = int(input())\nmat = [[int(x) for x in input().split()] for _ in range(N)]\na = list(range(N))\nfor row in mat:\n    if sorted(row) == a:\n        row[row.index(0)] = N\n        print(*row)\n        break\nelse:\n    assert(0)\n", "n = int(input())\nl = [list(map(int, input().split())) for i in range(n)]\np = [-1 for i in range(n)]\nfor i in range(n):\n    for j in range(1, n+1):\n        if l[i].count(j) == n-j:\n            p[i] = j\n            break\nif p.count(n-1) == 2:\n    p[p.index(n-1)] = n\nprint(\" \".join(map(str, p)))\n", "#!/usr/bin/env python3\nN = int(input())\n\nmin_arr = [0 for _ in range(N)]\n\nfor i in range(N):\n    arr_i = [n-1 for n in map(int, input().split())]\n    for j in range(N):\n        if i == j:\n            continue\n        min_arr[i] = max(arr_i[j], min_arr[i])\n        min_arr[j] = max(arr_i[j], min_arr[j])\n\nassign = [0 for _ in range(N)]\nblah = [(min_arr[i], i) for i in range(N)]\nblah.sort()\nfor i in range(N):\n    assign[blah[i][1]] = i+1\n\nprint(' '.join(map(str, assign)))\n", "n = int(input())\n\ntarget = [x for x in range(n)]\nfor i in range(n):\n    v = list(map(int, input().split()))\n\n    if sorted(v) == target:\n        print(' '.join([str(x) if x != 0 else str(n) for x in v]))\n        return\n\n\n", "n = int(input())\na = [list(map(int, input().split())) for x in range(n)]\nresult = [0] * n\nfor x in range(1, n):\n    result[max(list(range(n)), key = lambda i: a[i].count(x))] = x\nprint(*[(x if x else n) for x in result])\n", "n = int(input())\npole = []\nfor i in range(n):\n    s = list(map(int, input().split()))\n    pole.append(s)\n\nans = [0] * n\nfor number in range(1, n + 1):\n    for i in range(n):\n        s = set()\n        for j in range(n):\n            if pole[i][j] > number - 1:\n                s.add(pole[i][j])\n        if len(s) == 1:\n            for k in s:\n                ans[i] = k\nfor i in range(n):\n    if ans[i] == n - 1:\n        ans[i] = n\n        break\nprint(*ans)\n", "n = int(input())\nM = [[int(x) for x in input().split()] for i in range(n)]\nlast = False\nperm = [0 for i in range(n)]\nfor i in range(n):\n    S = set()\n    for x in M[i]:\n        if x in S:\n            perm[i] = x\n            break\n        else:\n            S.add(x)\n    else:\n        if last:\n            perm[i] = n-1\n        else:\n            perm[i] = n\n            last = True\nfor x in perm:\n    print(x, end = ' ')\n", "n = int(input())\np = []\nfor i in range(n):\n    p.append(list(map(int, input().split())))\n    p[i].sort()\n    p[i].append(i)\np.sort()\npos = [0] * n\nfor i in range(n):\n    pos[p[i][-1]] = i + 1\nprint(*pos)\n\n    \n    \n        \n", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\nans = [0 for i in range(n)]\nfor cur in range(1, n + 1):\n    k = -1\n    for i, row in enumerate(a):\n        if all((x <= cur for x in row)):\n            k = i\n            break\n    #assert(k != -1)\n    for i in range(len(row)):\n        row[i] = 999\n    ans[k] = cur\nprint(' '.join(map(str, ans)))\n", "n = int(input())\ns = [0] * n\ndp = [[0] for i in range(n)]\nfor i in range(n):\n    dp[i] = list(map(int, input().split()))\nfor i in range(n):\n    for j in range(n):\n        s[i] = max(s[i], dp[i][j])\n        s[j] = max(s[j], dp[i][j])\nused = [False] * n\nfor i in range(n):\n    if used[s[i] - 1]:\n        s[i] *= -1\n    else:\n        used[s[i] - 1] = True\nfor i in range(n):\n    if s[i] < 0:\n        for j in range(1, n + 1):\n            if abs(s[i]) < j and not used[j - 1]:\n                s[i] = j\n                break\nprint(*s)", "#!/bin/python3\nimport sys\nn = int(input())\nmatrix = []\nfor i in range(n):\n    tlist = [int(a) for a in input().split(' ')]\n    matrix.append(tlist)\n\nfor i in range(n):\n    if set(range(n)) == set(matrix[i]):\n        big = i\n        break\n\nfor i in range(n):\n    if i == big:\n        sys.stdout.write(\"{} \".format(n))\n    else:\n        sys.stdout.write(\"{} \".format(matrix[big][i]))\n\n", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2016 missingdays <missingdays@missingdays>\n#\n# Distributed under terms of the MIT license.\n\n\"\"\"\n\n\"\"\"\n\nn = int(input())\n\na = []\n\nfor i in range(n):\n    a.append([int(i) for i in input().split()])\n\nb = [0 for i in range(n)]\nc = {}\n\nfor i in range(n):\n    for j in range(n):\n        c[j] = 0\n\n    for j in range(n):\n        c[a[i][j]] += 1\n\n    for j in range(n):\n        if j in c and c[j] > 1:\n            b[i] = j \n\ni1 = -1\nm = 0\n\nfor i in range(n):\n    if b[i] == 0:\n        l = max(a[i])\n\n        if l > m:\n            m = l\n            i1 = i\n\nb[i1] = n-1\n\nfor i in range(n):\n    if b[i] == 0 and i != i1:\n        b[i] = n\n\nfor e in b:\n    print(e, end=\" \")\nprint()\n", "# from pprint import pprint\n\nn = int(input())\na = []\nfor i in range(n):\n    row = [int(k) for k in input().split()]\n    a.append(row)\n\nresult = [0] * n\nfor k in range(1, n):\n    # print('k=', k)\n    for i in range(n):\n        countK = 0\n        countNonK = 0\n        for j in range(n):\n            if a[i][j] == k:\n                countK += 1\n            elif a[i][j] != 0:\n                countNonK += 1\n        # print('@', countK, countNonK)\n        if countK > 0 and countNonK == 0:\n            # print('j', j)\n            result[i] = k\n            for j in range(n):\n                a[i][j] = 0\n                a[j][i] = 0\n            continue\n\n        countK = 0\n        countNonK = 0\n        for j in range(n):\n            if a[j][i] == k:\n                countK += 1\n            elif a[j][i] != 0:\n                countNonK += 1\n        if countK > 0 and countNonK == 0:\n            # print('j#', j)\n            result[i] = k\n            for j in range(n):\n                a[j][i] = 0\n                a[i][j] = 0\n    # pprint(a)\nresult[result.index(0)] = n\n\nprint(' '.join(str(i) for i in result))\n\n", "n = int(input())\nnumbers = [0] * n\nused = set()\nfor i in range(n):\n    for j in range(max(list(map(int, input().split()))), n + 1):\n        if j not in used:\n            used.add(j)\n            numbers[i] = j\n            break\nprint(' '.join(map(str, numbers)))", "\nfrom itertools import chain\nn = int(input())\n\na = [list(map(int, input().split())) for i in range(n)]\n\nfor i in range(n):\n    a[i][i] = i\n\nans = []\n\nwhile n > 0:\n    done = False\n    for i in chain(range(1, n-1), [0, n-1]):\n        if done:\n            break\n        b = True\n        for dx in -1, 0, 1:\n            for dy in -1, 0, 1:\n                if dx != 0 and dy != 0:\n                    continue\n                if dx == 0 and dy == 0:\n                    continue\n                nx, ny = i+dx, i+dy\n                if nx < 0 or nx >= n:\n                    continue\n                if ny < 0 or ny >= n:\n                    continue\n                b = b and a[nx][ny] == 1\n        if b:\n            ans.append(a[i][i])\n#            print(ans)\n            if i < n - 1:\n                a = a[:i] + a[i+1:]\n            else:\n                a = a[:i]\n            for j in range(len(a)):\n                if i < n - 1:\n                    a[j] = a[j][:i] + a[j][i+1:]\n                else:\n                    a[j] = a[j][:i]\n            for x in range(len(a)):\n                for y in range(len(a)):\n                    if x == y:\n                        continue\n                    a[x][y] -= 1\n            n -= 1\n            done = True\n    if not done:\n        return\n#    for x in a:\n#        for y in x:\n#            print(y, end = ' ')\n#        print()\n\n\nret = [0] * len(ans)\nfor i in range(len(ans)):\n    ret[ans[i]] = i + 1\n\nfor i in ret:\n    print(i, end = ' ')\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n\nn   = int(input())\na   = []\n\nfor i in range(n):\n    a.append(max([int(i) for i in input().split()]))\n\nstart = time.time()\n\nfor i in range(n):\n    if a[i] == n-1:\n        a[i] += 1\n        break\n\nfor i in a:\n    print(i, end=' ')\nprint()\n\nfinish = time.time()\n#print(finish - start)\n", "n = int(input())\na = [list(map(int, input().split(' '))) for i in range(n)]\nans = [0]*n\nfor i in range(1, n+1):\n    for j in range(n):\n        if ans[j] == 0 and a[j].count(i) == n-i:\n            ans[j] = str(i)\n            break\nprint(' '.join(ans))\n", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n\nfor i in range(n):\n    is_dif = True\n    for j in range(n):\n        c = a[i].count(a[i][j])\n        if c > 1:\n            is_dif = False\n            break\n    if is_dif:\n        for k in range(n):\n            if a[i][k] == 0:\n                a[i][k] = n\n            print(a[i][k],end=' ')\n        break", "n = int(input())\n\na = [0]*n\nfor i in range(n):\n\ta[i] = list(map(int, input().split()))\nunused = set(range(1,n+1))\nused = {0}\nbind = [-1]*(n)\nfor cur in range(1, n+1):\n\tfor i in range(n):\n\t\tif (bind[i]==-1) and (max(a[i])<=cur):\n\t\t\tbind[i] = cur\n\t\t\tbreak\nprint(' '.join(map(str, bind)))\n"]