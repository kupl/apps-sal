["def invper(ar):\n ar1=[0]*(len(ar))\n for i in range(len(ar)):\n  ar1[ar[i]-1]=i+1\n return ar1\nt=int(input())\n\nwhile(t!=0):\n ar=list(map(int,input().split()))\n ar1=invper(ar)\n if(ar==ar1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())\n", "while int(input()) != 0:\n l = list(map(int,input().split()))\n invArray = [0 for j in range(len(l))]\n for i in range(len(l)):\n  invArray[l[i]-1] = i + 1\n if invArray == l:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\") \n", "# cook your dish here\ndef inv(arr):\n arr1 = [0] * (len(arr))\n for i in range(len(arr)):\n  arr1[arr[i] - 1] = i + 1\n return arr1\n\nt = int(input())\n\nwhile t != 0:\n arr = list(map(int, input().split(\" \")))\n arr1 = inv(arr)\n if (arr == arr1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())", "while int(input()) != 0:\n permutation = list(map(int,input().split()))\n inverse_permutation = [0 for i in range(len(permutation))]\n for index in range(len(permutation)):\n  inverse_permutation[permutation[index]-1] = index+1\n print('ambiguous') if inverse_permutation == permutation else print('not \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ambiguous')\n ", "while int(input()) != 0:\n permutation = list(map(int,input().split()))\n inverse_permutation = [0 for i in range(len(permutation))]\n for index in range(len(permutation)):\n  inverse_permutation[permutation[index]-1] = index+1\n print('ambiguous') if inverse_permutation == permutation else print('not \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ambiguous')\n ", "# cook your dish here\ndef __starting_point():\n try:\n  while int(input()) != 0 :\n   l=list(map(int,input().split()))\n   l1=[0] * len(l)\n   for i in range(len(l)):\n    l1[l[i]-1] = i+1\n   print(\"ambiguous\" if l == l1 else \"not ambiguous\" )\n except EOFError :\n  print('EOFError')\n__starting_point()", "# cook your dish here\ntry:\n def inv(arr):\n  arr1 = [0] * (len(arr))\n  for i in range(len(arr)):\n   arr1[arr[i] - 1] = i + 1\n  return arr1\n \n t = int(input())\n while (t != 0):\n  arr = list(map(int, input().split(' ')))\n  arr1 = inv(arr)\n  if (arr == arr1):\n   print(\"ambiguous\")\n  else:\n   print(\"not ambiguous\")\n  t = int(input())\nexcept: pass\n", "# cook your dish here\nt = int(input())\nwhile t!= 0:\n l = list(map(int, input().split()))\n l1 = [0]*len(l)\n \n for i in range(len(l)):\n  l1[l[i]-1] = i+1\n  \n if l1 == l:\n  print('ambiguous')\n else:\n  print('not ambiguous')\n t = int(input())", "t = int(input())\nwhile t!= 0:\n l = list(map(int, input().split()))\n l1 = [0]*len(l)\n for i in range(len(l)):\n  l1[l[i]-1] = i+1\n if l1 == l:\n  print('ambiguous')\n else:\n  print('not ambiguous')\n t = int(input())", "def invper(ar):\n ar1=[0]*(len(ar))\n for i in range(len(ar)):\n  ar1[ar[i]-1]=i+1\n return ar1\nt=int(input())\n\nwhile(t!=0):\n ar=list(map(int,input().split()))\n ar1=invper(ar)\n if(ar==ar1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())", "# cook your dish here\ndef invper(ar):\n ar1=[0]*(len(ar))\n for i in range(len(ar)):\n  ar1[ar[i]-1]=i+1\n return ar1\nt=int(input())\nwhile(t!=0):\n ar=list(map(int,input().split()))\n ar1=invper(ar)\n if(ar==ar1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())", "def invper(ar):\n ar1=[0]*(len(ar))\n for i in range(len(ar)):\n  ar1[ar[i]-1]=i+1\n return ar1\nt=int(input())\nwhile(t!=0):\n ar=list(map(int,input().split()))\n ar1=invper(ar)\n if(ar==ar1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())", "def checker(lst):\n le = len(lst)\n nlst = [0]*le\n for i in range(le):\n  nlst[lst[i]-1] = i+1\n  \n\n if nlst == lst:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n\n\ndef __starting_point():\n while True:\n  t = int(input())\n  if t == 0:\n   return\n  else:\n   arr = [int(i) for i in input().split()]\n   checker(arr)\n\n__starting_point()", "# cook your dish here\ndef invper(ar):\n ar1=[0]*(len(ar))\n for i in range(1,len(ar)):\n  ar1[ar[i]]=i\n return ar1\nt=int(input())\nwhile(t!=0):\n ar=list(map(int,input().split()))\n ar.insert(0,0)\n ar1=invper(ar)\n if(ar==ar1):\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n t = int(input())", "# cook your dish here\nn=int(input())\nwhile n:\n l=list(map(int,input().split()))\n invl=[None]*n\n for j in range(n):\n  i=j+1\n  invl[l[j]-1]=i\n for i in range(n):\n  if l[i]!=invl[i]:\n   print(\"not ambiguous\")\n   break\n else:\n  print(\"ambiguous\")\n n=int(input())\n", "while int(input())!= 0:\n x = list(map(int, input().split()))\n y = len(x)\n length = [0]*y\n for i in range(y):\n  k = x[i]\n  length[k-1] = i+1\n if x == length:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")", "# cook your dish here\nwhile int(input())!=0:\n l=list(map(int,input().split()))\n ln=len(l)\n ll=[0]*ln\n for i in range(ln):\n  k=l[i]\n  ll[k-1]=i+1\n if l==ll:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")", "# cook your dish here\nwhile True:\n n=int(input())\n if n==0:\n  break\n l=list(map(int,input().split()))\n l1=[0]*n\n for i in range(n):\n  l1[l[i]-1]=i+1\n if l==l1:\n  print('ambiguous')\n else :\n  print('not ambiguous')\n", "while True:\n n=int(input())\n if n==0:\n  break\n li=list(map(int, input().split()))\n \n x=[0]*n\n\n\n for i in range(n):\n  z=li[i]\n  x[z-1]=i+1\n\n if x==li:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")", "# cook your dish here\nwhile(int(input())!=0):\n  l=list(map(int,input().split()))\n  t=len(l)\n  l1=[0]*t\n  for i in range(t):\n   c=l[i]\n   l1[c-1]=i+1\n  if l==l1:\n   print(\"ambiguous\")\n  else:\n   print(\"not ambiguous\")\n", "while(int(input())):\n l=list(map(int,input().split()))\n h=len(l)\n l1=[0]*h\n for i in range(h):\n  c=l[i]\n  l1[c-1]=i+1\n if l==l1:\n  print(\"ambiguous\")\n else:\n  print(\"not ambiguous\")\n", "while(int(input())!=0):\n  l=list(map(int,input().split()))\n  t=len(l)\n  l1=[0]*t\n  for i in range(t):\n   c=l[i]\n   l1[c-1]=i+1\n  if l==l1:\n   print(\"ambiguous\")\n  else:\n   print(\"not ambiguous\")\n", "# cook your dish here\nt=int(input())\nwhile(t):\n l=list(map(int,input().split()))\n k=10\n for i in range(len(l)):\n  if(l[l[i]-1]!=i+1):\n   print(\"not ambiguous\")\n   k=1\n   break\n if(k==10):\n  print(\"ambiguous\")\n t=int(input())", "while True:\n n = int(input())\n if n==0:\n  break\n else:\n  ambiguous = 1\n  a =[int(k) for k in input().split()]\n  for i in range(0, n):\n   if a[i]- 1 >= n or a[i] < 1 or a[a[i] - 1] != i + 1:\n    print('not ambiguous')\n    ambiguous = 0\n    break\n  if ambiguous == 1:\n   print('ambiguous')", "# cook your dish here\nwhile True:\n n=int(input())\n if n==0:\n  break\n f=0\n a=[int(x) for x in input().split()]\n for i in range(n):\n  if a[a[i]-1]!=i+1:\n   print('not ambiguous')\n   f=1\n   break\n if f==0:\n  print('ambiguous')\n"]