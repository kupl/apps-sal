["import sys\nans=0\nn,m=list(map(int,input().split()))\naaaaa=100\nli=list(map(int,input().split()))\nnon_special,special=[],[]\nfor i in range(m):\n ans+=1\n f,p,s=list(map(str,input().split()))\n f=int(f)\n poww=pow(1,2)\n p=int(p)\n if f not in li:\n  ans+=1\n  non_special.append((p,s))\n  ans-=1\n else:\n  ans+=1\n  special.append((p,s))\n  \nnon_special.sort(reverse=True)\naaaa=pow(1,2)\nspecial.sort(reverse=True)\n\nfor temp in range(len(special)):\n ans+=1\n print(special[temp][1])\nfor temp in non_special:\n ans+=1\n print(temp[1])", "N,M=list(map(int,input().split()))\narray=list(map(int,input().split()))\nfull=[[0]*3]*M\nfinal=[[0]*3]*M\ninit=[[0]*3]*M\nfor i in range(M):\n full[i]=input().split()\n full[i][1]=int(full[i][1])\n full[i][0]=int(full[i][0])\nk=0\ny=0\n\nfor j in range(M):\n if (full[j][0] in array):\n  final[k]=full[j]\n  k+=1\n else:\n  init[y]=full[j]\n  y+=1\n\nfinal=sorted(final,key=lambda x: x[1])\ninit=sorted(init,key=lambda x: x[1])\nfor i in range(k):\n print(final[M-1-i][2])\nfor i in range(y):\n print(init[M-1-i][2])\n", "n, m = list(map(int, input().split()))\nS = list(map(int, input().split()))\nspecial = []\nnonspecial = []\nfor i in range(m):\n A = input().split()\n if int(A[0]) in S:\n  special.append(A)\n else:\n  nonspecial.append(A)\n\nspecial.sort(key=lambda x: int(x[1]), reverse=True)\nnonspecial.sort(key=lambda x: int(x[1]), reverse=True)\n\nfor i in special:\n print(i[2])\nfor i in nonspecial:\n print(i[2])\n", "n,u=input().split()\na=input().split()\nx=dict()\nt=list()\nv=list()\nfor i in range(int(u)):\n b=input().split()\n x[int(b[1])]=[b[0],b[2]]\nfor i in list(x.items()):\n if(i[1][0] in a):\n  v.append(i[1][1])\n else:\n  t.append(i[1][1])\nfor i in v[::-1]:\n print(i)\nfor i in t[::-1]:\n print(i)", "import operator\nn,m=[int(x) for x in input().split()]\na=[int(x) for x in input().split()]\nh=[0]*100001\nfor x in a:\n h[x]=1\nss={}\nns={}\n\nwhile m:\n m-=1\n f,p,s=[x for x in input().split()]\n f=int(f)\n p=int(p)\n if h[f]==1:\n  ss[p]=[f,s]\n else:\n  ns[p]=[f,s]\n\nss = sorted(list(ss.items()), key=operator.itemgetter(0),reverse=True)\nns = sorted(list(ns.items()), key=operator.itemgetter(0),reverse=True)\nfor x in ss:\n print(x[1][1]) \nfor x in ns:\n print(x[1][1]) \n\n", "\nimport numpy\n\ninp = list(map(int, input().split()))\n\nn = inp[0]\nm = inp[1]\n\ninp1 = list(map(int, input().split()))\n\narrayf = []\n\narrayp = []\n\narrays = []\n\narrayfBest = []\n\narraypBest = []\n\narraysBest = []\n\ncountBest = 0\ncountOther = 0\nfor i in range(m):\n inp3 = list(input().split())\n\n\n\n if int(inp3[0]) in inp1:\n  arrayfBest.append(int(inp3[0]))\n  arraypBest.append(int(inp3[1]))\n\n  arraysBest.append(inp3[2])\n  countBest = countBest + 1\n\n else:\n  arrayf.append(int(inp3[0]))\n  arrayp.append(int(inp3[1]))\n\n  arrays.append(inp3[2])\n\n  countOther = countOther + 1\n\n \n\nsortedString = [x for y, x in sorted(zip(arraypBest, arraysBest))]\n\nfor j in range(countBest):\n print(sortedString[countBest - j -1])\n\n\nsortedString1 = [x for y, x in sorted(zip(arrayp, arrays))]\n\nfor j in range(countOther):\n print(sortedString1[countOther - j - 1])\n\n\n\n\n\n\n\n\n\n\n\n", "x=input().split()\nn=int(x[0])\nm=int(x[1])\ny=input().split()\nfr_post=dict()\nn_post=dict()\nfor i in range(0,m):\n z=input().split()\n if(z[0] in y):\n  fr_post[int(z[1])]=z[2]\n else:\n  n_post[int(z[1])]=z[2]\n\nfor key in sorted(fr_post,reverse=True):\n print(fr_post[key])\nfor key in sorted(n_post,reverse=True):\n print(n_post[key])\n", "n,m=list(map(int,input().split()))\nspecial=list(map(int,input().split()))\narr1=[]\narr2=[]\nfor i in range(m):\n f,p,s=list(map(str,input().split()))\n f,p=int(f),int(p)\n if f in special:\n  arr1.append([f,p,s])\n else:\n  arr2.append([f,p,s])\narr1=sorted(arr1,key=lambda x:x[1])\narr2=sorted(arr2,key=lambda x:x[1])\narr1.reverse()\narr2.reverse()\nfor i in range(len(arr1)):\n print(arr1[i][2])\nfor i in range(len(arr2)):\n print(arr2[i][2])\n\n", "N,M=list(map(int,input().split()))\na=list(map(int,input().split()))\nd=dict()\nf,o=[],[]\nfor i in range(M):\n st=input().split()\n d[int(st[1])]=[st[2],int(st[0])]\n \nfor i in d:\n if d[i][1] in a:\n  f.append(i)\n elif d[i][1] not in a:\n  o.append(i)\n\nf.sort()\no.sort()\nfor i in f[::-1]:\n print(d[i][0])\nfor j in o[::-1]:\n print(d[j][0])", "n,m=list(map(int,input().split()))\nfriends=list(map(int,input().split()))\nfriendsPost=[]\notherPost=[]\n\nfor friend in range(m):\n \n f,p,s=list(map(str,input().split()))\n if int(f) in friends:\n  \n  friendsPost.append([f,int(p),s])\n  \n else:\n  \n  otherPost.append([f,int(p),s])\n  \n  \nfriendsPost.sort(key=lambda x:x[1])\notherPost.sort(key=lambda x:x[1]) \n\nfor post in range(len(friendsPost)-1,-1,-1):\n print(friendsPost[post][-1])\n \n \nfor post in range(len(otherPost)-1,-1,-1):    \n print(otherPost[post][-1])", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nl2=[]\nl4=[]\nl5=[]\nl6=[]\nl7=[]\nfor i in range(m):\n l3=input().split()\n l3[0]=int(l3[0])\n l3[1]=int(l3[1])\n l2.append(l3)\n\nfor k in range(len(l2)):\n if l2[k][0] in l:\n  l4.append(k)\n  l6.append(l2[k][1])\n else:\n  l5.append(k)\n  l7.append(l2[k][1])\n\nwhile True:\n max=0\n c=0\n for i in range(len(l6)):\n  if l6[i]>max:\n   max=l6[i]\n   c=i\n if max==0:\n  break\n y=int(l4[c])\n print(l2[y][2])\n l6[c]=0\n \nwhile True:\n max=0\n c=0\n for i in range(len(l7)):\n  if l7[i]>max:\n   max=l7[i]\n   c=i\n if max==0:\n  break\n y=int(l5[c])\n print(l2[y][2])\n l7[c]=0\n\n\n", "n,m= list(map(int,input().strip().split()))\nspcl=[int(num) for num in input().strip().split()]\nspclpost=[' ']*100000\npost=[' ']*100000\nfor i in range(m):\n f,p,s=input().strip().split()\n f=int(f)\n p=int(p)\n if(f in spcl):\n  spclpost[p-1]=s\n else:\n  post[p-1]=s\nfor j in range(100000,0,-1):\n if(spclpost[j-1]!=' '):\n  print(spclpost[j-1])\nfor j in range(100000,0,-1):\n if(post[j-1]!=' '):\n  print(post[j-1])", "n,m=input().split()\nK=list(map(int,input().split()))\nL=[]\nM=[]\nfor i in range(int(m)):\n a,b,c=input().split()\n if int(a) in K:\n  M.append([int(b),c])\n else:\n  L.append([int(b),c])\nM.sort()\nM.reverse()\nL.sort()\nL.reverse()\nfor i in range(len(M)):\n print(M[i][1])\nfor i in range(len(L)):\n print(L[i][1])\n \n", "n,m = list(map(int,input().split()))\nN = list(map(int,input().split()))\nP1 = []\np1 = []\nP2 = []\np2 = []\nfor i in range(m):\n X1,X2,X3 = list(map(str,input().split()))\n X = []\n X.append(int(X1))\n X.append(int(X2))\n X.append(X3)\n if int(X[0]) in N:\n  P1.append(X)\n  p1.append(int(X[1]))\n else:\n  P2.append(X)\n  p2.append(int(X[1]))\n x = []\n\np1.sort(reverse=True)\np2.sort(reverse=True)\n\nfor x in range(len(p1)):\n for xx in range(len(P1)):\n  if int(P1[xx][1]) == int(p1[x]):\n   print(P1[xx][2])\n   del P1[xx]\n   break\n\nfor x in range(len(p2)):\n for xx in range(len(P2)):\n  if int(P2[xx][1]) == int(p2[x]):\n   print(P2[xx][2])\n   del P2[xx]\n   break", "n,m=list(map(int,input().split()))\nsplFriends=input().split()\nsppost=[]\nposts=[]\nfor i in range(m):\n f,p,s=input().split()\n p=int(p)\n if f in splFriends:\n  sppost.append([p,s])\n else:\n  posts.append([p,s])\n sppost=sorted(sppost,key= lambda x:x[0])[::-1]\n posts=sorted(posts,key= lambda x:x[0])[::-1]\n \nfor post in sppost:\n print(post[1])\nfor post in posts:\n print(post[1])", "from operator import itemgetter\nn,m=list(map(int,input().split()))\nx=list(map(int,input().split()))\narr=[]\ndic={}\n#m=[]\ntwo=[]\nfor i in range(m):\n y=list(map(str,input().split()))\n a=int(y[0])\n b=int(y[1])\n flag=0\n if a in x:\n  two.append([b,y[2]])\n else: \n  arr.append([b,y[2]])\nfor i in x:\n if i in dic:\n  for j in dic[i]:\n   print(j)\ntwo=sorted(two,key=itemgetter(0),reverse=True)\narr=sorted(arr,key=itemgetter(0),reverse=True)\nfor i in two:\n print(i[1])\nfor i in arr:\n print(i[1])\n \n \n'''if a in dic:\n     dic[a].append(y[2])\n     flag=1\n    else:\n     dic[a]=[y[2]]\n     flag=1'''\n #if flag==0:\n"]