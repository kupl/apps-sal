["def maximum_xor_secondary(sequence):\n    stack, answer = [], 0\n    for x in sequence:\n        while stack:\n            answer = max(answer, stack[-1] ^ x)\n            if stack[-1] > x:\n                break\n            else:\n                stack.pop()\n        stack.append(x)\n\n    return answer\n\n\nsize, num = input(), [int(x) for x in input().split()]\n\n\nprint(maximum_xor_secondary(num))\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\nAr = [int(x)for x in input().split()]\nstack = []\nans = 0\nfor i in range(0,n):\n    while(len(stack)!=0):\n        if(stack[-1]<Ar[i]):\n            ans = max(ans,stack[-1]^Ar[i])\n            stack.pop()\n        else:\n            ans = max(ans,stack[-1]^Ar[i])\n            break\n    stack.append(Ar[i])\nprint(ans)\n", "RI = lambda : [int(x) for x in input().split()]\nrw = lambda : [input().strip()]\nn=int(input())\nl=RI()\n\nstack=[]\nindex_stack=-1\n\nmaxo=0\ni=0\nwhile(i<n):\n    if(index_stack==-1 or stack[index_stack]>l[i]):\n        stack.append(l[i])\n        index_stack+=1\n        i+=1\n    else:\n        #print(stack[index_stack],end=\" \")\n        #print(l[i])\n        maxo=max(stack[index_stack]^l[i],maxo)\n        temp=stack[index_stack]\n\n        stack.pop()\n        index_stack-=1\n\n        \n        if(len(stack)!=0):\n            #print(stack[index_stack],end=\" \")\n            #print(stack[index_stack])\n            maxo=max(temp^stack[index_stack],maxo)\n\nwhile(len(stack)!=1):\n    temp=stack[index_stack]\n    \n    stack.pop()\n    index_stack-=1\n\n    #print(stack[index_stack],end=\" \")\n    #print(stack[index_stack])\n    maxo=max(temp^stack[index_stack],maxo)\nprint(maxo)\n", "n=int(input())\na=[int(n) for n in input().split()]\nstack=[]\nmaxx=0\ni=0\nwhile i<n:\n    if not stack or a[i]<stack[-1]:\n        stack.append(a[i])\n        i+=1\n    else:\n        maxx=(max(stack[-1]^a[i],maxx))\n        temp=stack.pop()\n        if stack:\n            maxx=max(stack[-1]^temp,maxx)\n    #print(stack)\nwhile len(stack)!=1:\n    temp=stack.pop()\n    maxx=max(temp^stack[-1],maxx)\nprint(maxx)", "n = int(input())\nnl = [int(x) for x in input().split()]\nst = []\nans = 0\nfor x in nl:\n    if st and st[-1] > x:\n        ans = max(ans, st[-1]^x)\n    elif st:\n        while st and st[-1] < x:\n            ans = max(ans, st.pop()^x)\n        if st:\n            ans = max(ans, st[-1]^x)\n    st.append(x)\nprint(ans)\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[5]:\n\n\nfrom collections import deque\n\nstack=deque()\nn=int(input())\na=list(map(int,input().split()))\nres1=0\nl=0\n\nfor i in a:\n    while stack and stack[-1]<i:\n        stack.pop()\n        l-=1\n        \n    stack.append(i)\n    l+=1\n    \n    if l>1:\n        res1=max(res1,stack[-1]^stack[-2])\n        \n        \nstack.clear()\nl=0\nres2=0\na.reverse()\n\nfor i in a:\n    while stack and stack[-1]<i:\n        stack.pop()\n        l-=1\n        \n    stack.append(i)\n    l+=1\n    \n    if l>1:\n        res2=max(res2,stack[-1]^stack[-2])\n        \n\n        \nprint(max(res1,res2))\n\n\n# In[ ]:\n\n\n\n\n", "import sys\n#t = -1\n# def input():\n#     nonlocal t\n#     t += 1\n#     return data[t]\n#data=sys.stdin.readlines()\nn=int(input())\na=list(map(int,input().split()))\nb=[a[0]]\nm=0\nfor i in range(1,n):\n    if len(b)>0:\n        m = max(m, b[-1] ^ a[i])\n    while len(b)>0 and a[i]>b[-1]:\n        m = max(m, b[-1] ^ a[i])\n        b.pop()\n    if len(b)>0:\n        m = max(m, b[-1] ^ a[i])\n    b.append(a[i])\n    #print(b)\nprint(m)\n\n\n", "def xor(a, b):\n  return a ^ b\n\ndef solve(l):\n    ans = xor(l[0], l[1])\n    st = [l[0], l[1]]\n\n    for i in range(2, n):\n      while len(st) > 0 and st[-1] < l[i]:\n        st.pop()\n      st.append(l[i])\n      if len(st) >= 2:\n         ans = max(ans, xor(st[-1], st[-2]))\n    return ans\n\nn = int(input())\nl = input()\nl = [int(i) for i in l.split()]\n\n\nans = solve(l)\n\nl.reverse()\n\nans = max(ans, solve(l))\n\nprint(ans)\n", "'''\n    Auther: ghoshashis545 Ashis Ghosh\n    College: Jalpaiguri Govt Enggineering College\n'''\nfrom os import path\nimport sys\nfrom functools import cmp_to_key as ctk\nfrom collections import deque,defaultdict as dd \nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\nfrom itertools import permutations\nfrom datetime import datetime\nfrom math import ceil,sqrt,log,gcd\ndef ii():return int(input())\ndef si():return input()\ndef mi():return list(map(int,input().split()))\ndef li():return list(mi())\nabc='abcdefghijklmnopqrstuvwxyz'\nabd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod=1000000007\n#mod=998244353\ninf = float(\"inf\")\nvow=['a','e','i','o','u']\ndx,dy=[-1,1,0,0],[0,0,1,-1]\n\ndef bo(i):\n    return ord(i)-ord('a')\n\n\n\ndef solve():\n    \n    \n    n=ii()\n    a=li()\n    b=[]\n    for j in range(31,-1,-1):\n        for i in range(n):\n            if (a[i]>>j)&1:\n                b.append(i)\n        if(len(b)<n and len(b)>0):\n            break\n        b=[]\n        \n    \n        \n    if len(b)==n or len(b)==0:\n        print(0)\n        return\n        \n    ans=0\n    x=0\n    \n    for j in range(len(b)-1):\n        \n        mx=0\n        x1=a[b[j]]\n        for i in range(b[j]-1,x-1,-1):\n            mx=max(mx,a[i])\n            ans=max(ans,x1^mx)\n        mx=0\n        for i in range(b[j]+1,b[j+1]):\n            mx=max(mx,a[i])\n            ans=max(ans,x1^mx)\n        x=b[j]+1\n    \n    \n       \n    mx=0\n    x1=a[b[len(b)-1]]\n    for i in range(b[len(b)-1]-1,x-1,-1):\n        mx=max(mx,a[i])\n        ans=max(ans,x1^mx)\n    \n    mx=0\n    for i in range(b[len(b)-1]+1,n):\n            mx=max(mx,a[i])\n            ans=max(ans,x1^mx)\n            \n    print(ans)\n    \n    \n    \n    \n    \n    \n    \n    \ndef __starting_point():\n    \n    solve()\n    \n\n__starting_point()", "def fun(numbers):\n    # numbers.sort(reverse=True)\n    le = len(numbers)\n    stack =[]\n    ans=0\n    i=1\n    for i in numbers:\n        while stack:\n            ans  = max(ans,stack[-1]^i)\n            if stack[-1] > i:\n                break\n            else:\n                stack.pop()\n        stack.append(i)\n    \n    return ans\n\n\n# var1, var2,var3 = [int(x) for x in input().split()]\nn = input()\nuser_input = input().split(' ')\nnumbers = [int(x.strip()) for x in user_input] \n# st = input()\n# print(fun(st))\n\nprint(fun(numbers))\n\n\n\n\n\n# # st = input()\n# var1, var2 = [int(x) for x in input().split()]\n\n# # # fun(st,var1,var2)\n\n# # # var2 = input()\n# print(fun(var1,var2))\n\n# ############################################################3###############################\n\n# # user_input = input().split(' ')\n# # numbers = [int(x.strip()) for x in user_input] \n# # print(fun(numbers))\n# ######################################################################################\n"]