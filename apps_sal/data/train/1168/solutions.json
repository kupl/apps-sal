["import sys\nfor _ in range(0,eval(input())):   \n    d,inp,mp,n,q=set(),list(map(ord,list(sys.stdin.readline().strip()))),[x=='b' for x in list(sys.stdin.readline().strip())],eval(input()),ord('a')\n    inps = [inp[i:] for i in range(len(inp))]\n    inps.sort()\n    op,prev= 0,''\n    for ip in inps:\n        \ti,ct=0,0\n        \twhile i < min(len(ip),len(prev)):\n        \t\tif prev[i] != ip[i]:\n        \t\t\tbreak\n        \t\tif mp[ip[i]-q]:\n        \t\t\tct = ct+  1\n        \t\ti = i+1\n        \twhile i < len(ip):\n        \t\tif mp[ip[i]-q]:\n        \t\t\tct = ct + 1\n        \t\tif ct > n:\n        \t\t\tbreak\n        \t\top,i= op+1,i+1\n        \tprev = ip\n    print(op)", "import sys\nfor _ in range(0,eval(input())):   \n    d,inp,mp,n,q=set(),list(map(ord,list(sys.stdin.readline().strip()))),[x=='g' for x in list(sys.stdin.readline().strip())],eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]) or  nn>0 ):\n                    if(mp[inp[j]-q] == False ):                \n                        nn=nn-1\n                    h=(h*20)^inp[j]\n                    d.add(h)\n                else:\n                    break  \n    print(len(d))", "import sys\nfor _ in range(0,eval(input())):   \n    d,inp,mp,n,q=set(),list(map(ord,list(sys.stdin.readline().strip()))),[x=='g' for x in list(sys.stdin.readline().strip())],eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]) or  nn>0 ):\n                    if(mp[inp[j]-q] == False ):                \n                        nn=nn-1\n                    h=(h*128)^inp[j]\n                    d.add(h)\n                else:\n                    break  \n    print(len(d))", "import sys\nfor _ in range(0,eval(input())):   \n    d,inp,mp,n,q=set(),list(map(ord,list(sys.stdin.readline().strip()))),sys.stdin.readline().strip(),eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]=='g') or  nn>0 ):\n                    if((mp[inp[j]-q]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*128)^inp[j]\n                    d.add(h)\n                else:\n                    break  \n    print(len(d))", "import sys\nfor _ in range(0,eval(input())):   \n    d,inp,mp,n,q=[],list(map(ord,list(sys.stdin.readline().strip()))),sys.stdin.readline().strip(),eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]=='g') or  nn>0 ):\n                    if((mp[inp[j]-q]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*128)^inp[j]\n                    d.append(h)\n                else:\n                    break  \n    print(len(set(d)))", "import sys\nfor _ in range(0,eval(input())):   \n    d,ctr,inp,mp,n,q=[0]*4000000,0,list(map(ord,list(sys.stdin.readline().strip()))),sys.stdin.readline().strip(),eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]=='g') or  nn>0 ):\n                    if((mp[inp[j]-q]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*128)^inp[j]\n                    d[ctr],ctr=h,ctr+1\n                else:\n                    break  \n    d=d[0:ctr]\n    print(len(set(d)))", "import sys\nfor _ in range(0,eval(input())):   \n    d,c,inp,mp,n,q=[],0,list(map(ord,list(sys.stdin.readline().strip()))),sys.stdin.readline().strip(),eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]=='g') or  nn>0 ):\n                    if((mp[inp[j]-q]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*128)^inp[j]\n                    d+=[h]\n                else:\n                    break  \n    print(len(set(d)))\n    \n    ", "import sys\nfor _ in range(0,eval(input())):   \n    d,c,inp,mp,n,q=[],0,list(map(ord,list(sys.stdin.readline().strip()))),sys.stdin.readline().strip(),eval(input()),ord('a')\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[inp[j]-q]=='g') or  nn>0 ):\n                    if((mp[inp[j]-q]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*256)^inp[j]\n                    d+=[h]\n                else:\n                    break  \n    print(len(set(d)))\n            ", "import sys\nfor _ in range(0,eval(input())):   \n    d,c,inp,mp,n=[],0,sys.stdin.readline().strip(),sys.stdin.readline().strip(),eval(input())\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[ord(inp[j])-ord('a')]=='g') or  nn>0 ):\n                    if((mp[ord(inp[j])-ord('a')]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*256)^ord(inp[j])\n                    d+=[h]\n                else:\n                    break  \n    print(len(set(d)))\n            ", "for _ in range(0,eval(input())):   \n    d,c,inp,mp,n=[],0,input(),input(),eval(input())\n    for i in range(0,len(inp)):\n        nn,h=n,0\n        for j in range(i,len(inp)):\n                if ( (mp[ord(inp[j])-ord('a')]=='g') or  nn>0 ):\n                    if((mp[ord(inp[j])-ord('a')]=='g') == False ):                \n                        nn=nn-1\n                    h=(h*256)^ord(inp[j])\n                    d+=[h]\n                else:\n                    break  \n    print(len(set(d)))"]