["D=[0]*31\nD[1]=2\nD[2]=5\n\nfor i in range(3,31):\n best=10**10\n for p in range(1,i+1):\n  best=min(best,D[p-1]+D[i-p]+i+1)\n D[i]=best\n\nt=int(input())\nfor i in range(t):\n n,m=list(map(int,input().split()))\n maxi=(n+2)*(n+1)/2-1\n mini=D[n]\n if mini<=m<=maxi: print(0)\n elif m<mini: print(-1)\n else: print(m-maxi)\n", "D=[0]*31\nD[1]=2\nD[2]=5\n\nfor i in range(3,31):\n best=10**10\n for p in range(1,i+1):\n  best=min(best,D[p-1]+D[i-p]+i+1)\n D[i]=best\n\nt=int(input())\nfor i in range(t):\n n,m=list(map(int,input().split()))\n maxi=(n+2)*(n+1)/2-1\n mini=D[n]\n if mini<=m<=maxi: print(0)\n elif m<mini: print(-1)\n else: print(m-maxi)\n", "import sys\n\nT = int(sys.stdin.readline())\n\n\n# def score(p):\n#     n = len(p)\n#     sol = [False for i in xrange(0, n + 2)]\n#     sol[0] = sol[n + 1] = True\n#     res = 0\n\n#     for s in p:\n#         left = s - 1\n#         right = s + 1\n#         while not sol[left]:\n#             left -= 1\n#         while not sol[right]:\n#             right += 1\n#         res += s - left + right - s\n#         sol[s] = True\n\n#     return res\n\n\ndef calc_min_len(l, r):\n if l + 1 == r:\n  return 0\n if l >= r:\n  return 0\n\n m = (l + r) // 2\n return m - l + r - m + calc_min_len(l, m) + calc_min_len(m, r)\n\n\ndef calc_max_len(n):\n return sum(range(2, N + 2))\n\n\nfor t in range(T):\n N, M = list(map(int, sys.stdin.readline().split()))\n\n min_len = calc_min_len(1, N + 2)\n max_len = calc_max_len(N)\n\n if M < min_len:\n  print(-1)\n elif M > max_len:\n  print(M - max_len)\n else:\n  print(0)\n", "NumOfTests = int(input())\n\npwrOfTwo = [2, 4, 8, 16]\n\nfor test in range(NumOfTests):\n N, M = input().split()\n N = int(N)\n M = int(M)\n\n if N == 1:\n  used_m = 2\n  m_div = M - used_m\n  if m_div < 0:\n   print(-1)\n  else:\n   print(m_div)\n else:\n  x, y = divmod(N, 2)\n\n  max_p = x*(N+3) + y*(N+3)/2\n  \n  max_pwr = max([x for x in pwrOfTwo if N+1 >= x])\n  \n  min_p = (N+1)*(pwrOfTwo.index(max_pwr)+1) + 2*(N+1-max_pwr)\n\n  if min_p > M:\n   print(-1)\n  elif M <= max_p:\n   print(0)\n  else:\n   print(M - max_p)\n", "import sys\nfirst = True\nmemmin = {}\nmemmax = {}\n\ndef fmax(n):\n if n == 1: return 2\n if n == 0: return 0\n if n in memmax: return memmax[n]\n\n res = 0\n for i in range(n):\n  cur = i + 1 + n - i + fmax(i) + fmax(n-i-1)\n  if cur > res: res = cur\n\n memmax[n] = res\n return res\n\ndef fmin(n):\n if n == 1: return 2\n if n == 0: return 0\n if n in memmin: return memmin[n]\n\n res = 10 ** 9\n for i in range(n):\n  cur = i + 1 + n - i + fmin(i) + fmin(n-i-1)\n  if cur < res: res = cur\n\n memmin[n] = res\n return res \n\nfor line in sys.stdin:\n if first:\n  first = False\n  tc = int(line)\n  continue\n\n tc -= 1\n if tc < 0: break\n\n n, m = list(map(int, line.split()))\n\n val1 = fmin(n)\n val2 = fmax(n)\n\n if m < val1: print(-1)\n else:\n  if m > val2: print(m - val2)\n  else: print(0)"]