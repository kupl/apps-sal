["from itertools import permutations\n\nfor _ in range(int(input())):\n N,K=list(map(int,input().split()))\n arr=list(map(int,input().split()))\n arr1=[]\n arr2=[]\n for i in range(1,len(arr)+1):\n  arr1.append(i)\n indexzero=[]\n for i in range(0,len(arr)):\n  if(arr[i]==0):\n   indexzero.append(i)\n  else:\n   arr2.append(arr[i])\n # arr3 = [x for x in arr1 if x not in arr2]\n arr3= list(set(arr1)-set(arr2))\n result=permutations(arr3)\n perm=[]\n for i in result:\n  perm.append(i)\n step=0\n count=0\n for p in range(0,len(perm)):\n  temp=[]\n  for q in range(0,len(arr)):\n   if(arr[q]==0):\n    temp.append(perm[p][step])\n    step+=1 \n   else:\n    temp.append(arr[q])\n  k=0\n  step=0\n  for m in range(0,len(temp)-1):\n   if(temp[m]<temp[m+1]):\n    k+=1\n  if(k==K):\n   count+=1 \n print(count)\n   \n    \n  \n \n  \n \n   \n", "from itertools import permutations\nk=[]\nd=[]\ndef abc(l):\n ans=0\n for i in range(1,len(l)):\n  if l[i]>l[i-1]:\n   ans+=1\n return ans\n\nfor i in range(8):\n k.append(i+1)\n x=list(permutations(k))\n c=[]\n for j in range(8):\n  c.append([])\n d.append(c)\n for j in x:\n  d[i][abc(j)].append(j)\n\nt=int(input())\nfor _ in range(t):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n ans=0\n c=d[n-1][k]\n for i in c:\n  flag=1\n  for j in range(n):\n   if l[j]!=0 and l[j]!=i[j]:\n    flag=0\n    break\n  if flag:\n   ans+=1\n print(ans)\n \n", "from itertools import permutations\nk=[]\nd=[]\ndef abc(l):\n ans=0\n for i in range(1,len(l)):\n  if l[i]>l[i-1]:\n   ans+=1\n return ans\n\nfor i in range(8):\n k.append(i+1)\n x=list(permutations(k))\n c=[]\n for j in range(8):\n  c.append([])\n d.append(c)\n for j in x:\n  d[i][abc(j)].append(j)\n\nt=int(input())\nfor _ in range(t):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n ans=0\n c=d[n-1][k]\n for i in c:\n  flag=1\n  for j in range(n):\n   if l[j]!=0 and l[j]!=i[j]:\n    flag=0\n    break\n  if flag:\n   m=0\n   for j in range(1,n):\n    if i[j]>i[j-1]:\n     m+=1\n   if m==k:\n    ans+=1\n print(ans)\n \n", "from itertools import permutations\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n b=[False]*(n+1)\n for i in a:\n  if i!=0:b[i]=True\n g=[]\n grd=0\n for i in range(1,n+1):\n  if not b[i]:g.append(i)\n for i in permutations(g):\n  b=a[:]\n  f=0\n  m=0\n  ff=list(i[:])\n  for j in range(n):\n   if b[j]==0:\n    b[j]=ff[-1]\n    ff.pop()\n  for j in range(1,n):\n   if b[j]>b[j-1]:\n    f+=1\n   if f>k:\n    m=1\n    break\n  if f==k and m==0:grd+=1\n print(grd)\n", "# cook your dish here\nfrom itertools import permutations\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n b=[False]*(n+1)\n for i in a:\n  if i!=0:b[i]=True\n g=[]\n grd=0\n for i in range(1,n+1):\n  if not b[i]:g.append(i)\n for i in permutations(g):\n  b=a[:]\n  f=0\n  ff=list(i[:])\n  for j in range(n):\n   if b[j]==0:\n    b[j]=ff[-1]\n    ff.pop()\n  for j in range(1,n):\n   if b[j]>b[j-1]:f+=1\n  if f==k:grd+=1\n print(grd)\n", "def cal(a, count, k, poss, ind):\n temp = a.copy()\n if len(poss) == 0:\n  #print(a)\n  for i in range(1, len(a)):\n   if temp[i]>temp[i-1]:\n    k -= 1\n  if k == 0 and 0 not in temp:\n   count += 1\n  return count\n if temp[ind] == 0:\n  for item in poss:\n   temp[ind] = item\n   count = cal(temp, count, k, poss-set([item]), ind+1)\n else:\n  count = cal(temp, count, k, poss, ind+1)\n return count\nt = int(input())\nwhile t>0:\n t -= 1\n n, k = map(int, input().split())\n a = [int(x) for x in input().split()]\n poss = set()\n for i in range(1, len(a)+1):\n  if i not in a:\n   poss.add(i)\n count = cal(a, 0, k, poss, 0)\n print(count)", "t=int(input())\nimport itertools\nfor _ in range(t):\n n,kkk=list(map(int,input().split()))\n it=list(map(int,input().split()))\n kk=set(list(range(1,n+1)))\n s=set([i for i in it if i!=0])\n left=kk-s\n #print(left)\n mm=list(itertools.permutations(list(left)))\n tot=0\n #print(mm)\n for perm in mm:\n  #print(perm)\n  k=0\n  mt=it[:]\n  ind=0\n  for j,i in enumerate(it):\n   if i==0:\n    mt[j]=perm[ind]\n    ind+=1\n   if j>0:\n    if mt[j]>mt[j-1]:\n     k+=1\n  if kkk==k:\n   tot+=1\n print(tot)\n   \n   \n  \n \n \n", "import itertools\nt=int(input())\nfor _ in range(t):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n p=[i for i in range(1,n+1)]\n good=0\n for i in a:\n  if(i != 0 ):\n   p.remove(i)\n\n x=list(itertools.permutations(p))\n for i in x:\n  j=0\n  b=[l for l in a]\n  for z in range(n):\n   if(b[z]==0):\n    b[z]=i[j]\n    j+=1\n  loc_cnt=0\n  for z in range(1,n):\n   if(b[z]>b[z-1]):\n    loc_cnt+=1\n  if(loc_cnt==k):\n   good+=1\n  \n print(good) "]