["import sys\nT = int(sys.stdin.readline().strip())\nfor t in range(T):\n sys.stdin.readline().strip()\n st = '0'+sys.stdin.readline().strip()+'0'\n res = 0\n for i in range(1,len(st)-1):\n  if st[i] == st[i-1] == st[i+1] == '0':\n   res+=1\n print(res)\n", "t = int( input() )\n\nwhile t > 0:\n n = int( input() )\n s = input()\n c = 0\n z = 1\n \n for i in range( n ):\n  if s[i] == '0':\n   z += 1\n   continue\n   \n  if z > 2:\n   c += z - 2\n   \n  z = 0\n \n if z > 1:\n  c += z - 1\n\n t -= 1\n print(c) ", "t = int(input())\nfor i in range(0, t):\n n = int(input())\n a = input()\n b = [1]*n\n for i in range(0, n):\n  if a[i] == '1':\n   b[i] = 0\n   if i > 0:\n    b[i - 1] = 0\n   if i < n - 1:\n    b[i + 1] = 0\n ans = 0\n for i in range(0, n):\n  if b[i] == 1:\n   ans += 1\n print(ans)", "inputs = int(input())\nwhile inputs > 0:\n length = int(input())\n building = input()\n buildings = []\n if length != 0:\n  for i in range(0,length):\n   buildings.append(int(building[i]))\n  if buildings[0] == 1:\n   buildings[0] = 2\n   if length > 1:\n    if buildings[1] == 0:\n     buildings[1] = 2\n  for i in range(1, length-1):\n   if buildings[i] == 1:\n    buildings[i] = 2\n    if buildings[i+1] == 0:\n     buildings[i+1] = 2\n    if buildings[i-1] == 0:\n     buildings[i-1] = 2\n  if buildings[length-1] == 1:\n   buildings[length-1] = 2\n   if buildings[length-2] == 0:\n    buildings[length-2] = 2\n  print(buildings.count(0))\n else:\n  print(0)\n inputs = inputs - 1\n", "def not_destroyed(x, n):\n for j in range(n):\n  if x[j] == '1':\n   x[j] = '2'\n   if j-1 >= 0:\n    x[j-1] = '2'\n   if j+1 < n and x[j+1] != '1':\n    x[j+1] = '2'\n return x.count('0')\n    \n\nT = int(input())\nfor i in range(T):\n L = []\n N = int(input())\n S = input()\n for j in range(N):\n  L.append(S[j])\n n = not_destroyed(L, N)\n print(n)\n", "def main():\n T = int(input())\n for test in range(T):\n  N = int(input())\n  buildingList = input().strip()\n  totalStanding = N\n  for index, building in enumerate(buildingList):\n   if building == '1' or \\\n     (index > 0 and buildingList[index-1] == '1') or \\\n     (index < N-1 and buildingList[index+1] == '1'):\n    totalStanding -= 1\n  print(totalStanding)\n\n\ndef __starting_point():\n main()\n\n__starting_point()", "def main():\n T = int(input())\n for test in range(T):\n  N = int(input())\n  buildingList = input().strip()\n  totalStanding = N\n  for index, building in enumerate(buildingList):\n   if building == '1' or \\\n     (index > 0 and buildingList[index-1] == '1') or \\\n     (index < N-1 and buildingList[index+1] == '1'):\n    totalStanding -= 1\n  print(totalStanding)\n\n\ndef __starting_point():\n main()\n\n__starting_point()", "t = int(input())\nfor nTest in range(t):\n n = int(input())\n s = input().strip()\n ns = int(s)\n ns = ns + ns//10 + 10*ns\n \n ss = str(ns)[-n:]\n print(ss.count(\"0\") + n-len(ss))\n\n", "t = int(input())\nfor nTest in range(t):\n n = int(input())\n #s = list(raw_input().strip())\n s = input().strip()\n ns = int(s) + int(s[1:]+'0') + int('0'+s[:-1])\n ss = str(ns)\n print(ss.count(\"0\") + len(s)-len(ss))\n##    answer = 0\n##    for i in range(n):\n##        if (i==0 or s[i-1]=='0') and (s[i]=='0') and (i==n-1 or s[i+1]=='0'):\n##            answer +=1\n##    print answer\n", "t = int(input())\nfor nTest in range(t):\n n = int(input())\n s = list(input().strip())\n answer = 0\n for i in range(n):\n  if (i==0 or s[i-1]=='0') and (s[i]=='0') and (i==n-1 or s[i+1]=='0'):\n   answer +=1\n print(answer)\n", "cases = int(input())\nfor case in range (cases):\n length = int(input())\n buildings = [1]*length\n bombs = input()\n for i in range(length):\n  if (bombs[i]==\"1\"):\n   buildings[i] = 0\n   if (i!=0):\n    buildings[i-1] = 0\n   if (i!=length-1):\n    buildings[i+1] = 0\n   i = i+2\n print(buildings.count(1))\n", "x=int(input())\nlistk=[]\nfor i in range(0,x):\n len_s=int(input())\n build=input()\n list1=[]\n for e in build:\n  list1.append(e)\n for i in range(0,len_s):\n \n  if list1[i]=='1':\n   \n   list1[i]=='R'\n   if (i-1)>=0:\n    list1[i-1]='R'\n   if i!=(len_s-1):\n    if list1[i+1]:\n     if list1[i+1]!='1':\n      list1[i+1]='R'\n sum=0\n for e in list1:\n  if e=='0':\n   sum=sum+1\n listk.append(sum)\nfor e in listk:\n print(e)\n  \n  \n", "def main():\n T = int(input())\n for i in range(T):\n  N = int(input())\n  S = input()\n  R = {}\n  for i in range(N):\n   if S[i] == '1':\n    R[i-1] = 2\n    R[i] = 2\n    R[i+1] = 2\n  R[-1] = 0\n  R[N] = 0\n  print(N - list(R.values()).count(2))\n\n\n\ndef __starting_point():\n main()\n\n\n\n__starting_point()", "#!/usr/bin/env python\n\ndef process(N, S):\n C = 0\n for i in range(1, N + 1):\n  if S[i-1] or S[i] or S[i+1]:\n   C += 1\n return N - C\n\ndef main():\n T = int(input().strip())\n for t in range(T):\n  N = int(input().strip())\n  S = [0] + list(map(int, input().strip())) + [0]\n  print(process(N, S))\n\nmain()\n\n", "N = int(input())\nfor i in range(0,N):\n inp = int(input())\n inpu = input()\n input_list = []\n for j in range(0,inp):\n  input_list+=[inpu[j]]\n li = []\n if (input_list[0] == \"1\"):\n  li+=[0,1]\n if (input_list[inp-1] == \"1\"):\n  li+=[inp-1,inp-2]\n for k in range(1,inp-1):\n  if (input_list[k] == \"1\"):\n   li+=[k-1,k,k+1]\n li = list(set(li))\n t = inp- len(li)\n if t<0:\n  print(\"0\")\n else:\n  print(t)", "t=int(input())\nfor i in range(t):\n N=int(input())\n word=input()\n hit=[0]*N\n for x in range(N):\n  if word[x]=='1':\n   hit[x]=1\n   if x>0: hit[x-1]=1\n   if x<N-1: hit[x+1]=1\n print(hit.count(0))\n", "t=int(input())\nfor i in range(t):\n N=int(input())\n word=input()\n hit=[0]*N\n for x in range(N):\n  if word[x]=='1':\n   hit[x]=1\n   if x>0: hit[x-1]=1\n   if x<N-1: hit[x+1]=1\n print(hit.count(0))\n", "for _ in range(int(input())):\n n=int(input())\n s=input().strip()\n \n ans=n\n \n for i in range(n):\n  if s[i]=='1':\n   ans-=1\n  elif i!=0 and s[i-1]=='1':\n   ans-=1\n  elif i!=n-1 and s[i+1]=='1':\n   ans-=1\n   \n print(ans)"]