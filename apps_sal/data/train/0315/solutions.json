["class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        xy_pair = 0\n        yx_pair = 0\n        \n        for c1, c2 in zip(s1, s2):\n            if c1 == 'x' and c2 == 'y':\n                xy_pair += 1\n            elif c1 == 'y' and c2 == 'x':\n                yx_pair += 1\n        \n        if (xy_pair + yx_pair)%2 == 1:\n            return -1\n        \n        \n        return xy_pair//2 + yx_pair//2 + xy_pair%2 + yx_pair%2\n    \n'''\n\\\"xx\\\"\n\\\"yy\\\"\n\\\"xy\\\"\n\\\"yx\\\"\n\\\"xx\\\"\n\\\"xy\\\"\n\\\"xyxy\\\"\n\\\"yxyx\\\"\n\\\"xxyyxxyxyxyx\\\"\n\\\"xyxyxyxxyyxx\\\"\n\\\"xxyyxyxyxx\\\"\n\\\"xyyxyxxxyx\\\"\n\\\"xyxyxyyxx\\\"\n\\\"yxyyyxxxx\\\"\n\\\"xyxyxyyxxxyyxyxxxyx\\\"\n\\\"yxyyyxxxxxxyyxyxyxx\\\"\n'''", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        h = defaultdict(int)\n        count = 0   \n        for i in range(len(s1)):\n            if s1[i] != s2[i]:\n                count += 1\n                h[s1[i]] += 1\n        if count % 2 != 0:     \n            return -1\n        res, a, b = 0, h['x'], h['y']\n        res += a // 2 + b // 2\n        if a % 2 == 0:\n            return res\n        return res + 2", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        x_y,y_x = 0,0\n        for i,j in zip(s1,s2):\n            if i != j:\n                if i == 'x':\n                    x_y += 1\n                else:\n                    y_x += 1\n        if (x_y + y_x)%2 == 1:\n            return -1\n        res = 0\n        res += x_y//2\n        res += y_x//2\n        if x_y%2==1:\n            res += 2\n        return res", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        cntxy, cntyx, n = 0, 0, len(s1)\n        for i in range(n):\n            if s1[i] == 'x' and s2[i] == 'y': cntxy += 1\n            elif s1[i] == 'y' and s2[i] == 'x': cntyx += 1\n        if (cntxy + cntyx) % 2 == 1: return -1\n        if cntxy % 2 == 1:\n            return cntxy // 2 + cntyx // 2 + 2\n        else: return cntxy // 2 + cntyx // 2\n", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        xx = []\n        for i in range(len(s1)):\n            if s1[i] != s2[i]:\n                xx.append(s1[i])\n\n        if len(xx)%2 == 1:\n            return -1\n        res = len(xx)//2\n        if xx.count('x')%2 == 1:\n            res += 1\n        return res\n", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        x = 0\n        y = 0\n        \n        for index in range(0, len(s1)):\n            if s1[index] != s2[index]:\n                if s1[index] == 'x':\n                    x += 1\n                else:\n                    y += 1\n        \n        \n        mid = ( x + y ) / 2\n        x, y = x % 2, y % 2\n        \n        if x + y == 1:\n            return -1\n        \n        if x + y == 2:\n            mid += 1\n        \n        print(mid)\n        return int(mid)\n", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        x_y = y_x = 0\n        res = 0\n        for i in range(len(s1)):\n            if s1[i] != s2[i]:\n                if s1[i] == 'x':\n                    x_y += 1\n                else:\n                    y_x += 1\n        \n        if (x_y + y_x) % 2 == 1:\n            return -1\n        \n        res = x_y//2\n        res += y_x//2\n        \n        if x_y % 2 == 1:\n            res += 2\n        return res\n", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        xy = 0\n        yx = 0\n        for m, n in zip(s1, s2): # Each character of s1 is followed by a character of s2 in the associated position.\n            if m == 'x' and n == 'y':\n                xy += 1\n            elif m == 'y' and n == 'x':\n                yx += 1\n            \n        if (xy + yx) % 2 != 0:\n            return -1\n        else:\n            return xy // 2 + yx // 2 + xy % 2 + yx % 2\n", "class Solution:\n    def minimumSwap(self, s1: str, s2: str) -> int:\n        a = 0\n        b = 0\n        for i in range(len(s1)):\n            if s1[i] == 'x' and s2[i] == 'y' :\n                a += 1\n            elif s1[i] == 'y' and s2[i] == 'x':\n                b += 1\n                     \n        if a % 2 == 0 and b % 2 == 0:\n            return a // 2 + b // 2 \n        elif a % 2 == 1 and b % 2 == 1:\n            return a // 2 + b // 2 + 2 \n        else:\n            return -1\n"]