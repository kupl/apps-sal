["#!/usr/bin/env python3\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    ans = 0\n    for k in range(30):\n        C = [x & ((1 << (k+1)) - 1) for x in A]\n        D = [x & ((1 << (k+1)) - 1) for x in B]\n        C.sort()\n        D.sort()\n        # print(f'k = {k}')\n        # print(f'C = {C}')\n        # print(f'D = {D}')\n        p, q, r = 0, 0, 0\n        for i in range(N-1, -1, -1):\n            while p < N:\n                if C[i] + D[p] >= 1 << k: break\n                p += 1\n            while q < N:\n                if C[i] + D[q] >= 2 << k: break\n                q += 1\n            while r < N:\n                if C[i] + D[r] >= 3 << k: break\n                r += 1\n            x = ((q - p) + (N - r)) % 2\n            # print(p, q, r, x)\n            ans = ans ^ (x << k)\n    print(ans)\n\nmain()\n", "import bisect\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nans = 0\nfor i in range(29):\n    div_ = pow(2, i+1)\n    A_tmp = sorted([x%div_ for x in A])\n    B_tmp = sorted([x%div_ for x in B])\n    cnt = 0\n    tmp = pow(2, i)\n    idx1 = N\n    idx2 = N\n    idx3 = N\n    for a in A_tmp:\n        while idx2>0 and B_tmp[idx2-1]>=2*tmp-a:\n            idx2 -= 1\n        while idx1>0 and B_tmp[idx1-1]>=tmp-a:\n            idx1 -= 1\n        while idx3>0 and B_tmp[idx3-1]>=3*tmp-a:\n            idx3 -= 1\n        cnt += ((idx2-idx1)+(N-idx3))%2\n    if cnt % 2 == 1:\n        ans += tmp\nprint(ans)\n", "N = int(input())\nA = [int(a) for a in input().split()]\nB = [int(a) for a in input().split()]\n\ndef xor(L):\n    a = 0\n    for l in L: a ^= l\n    return a\n\ndef chk(L1, L2, k):\n    L1.sort()\n    L2.sort()\n    s, j = 0, 0\n    for i in range(N)[::-1]:\n        while j < N and L1[i] + L2[j] < k:\n            j += 1\n        s += N - j\n    return s % 2 * k\n\nt = (xor(A) ^ xor(B)) * (N % 2)\nfor i in range(28):\n    m = (1 << i+1) - 1\n    t ^= chk([a&m for a in A], [b&m for b in B], m + 1)\n\nprint(t)", "import sys\ninput = sys.stdin.readline\nN = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nres = 0\nln = max(max(a), max(b)).bit_length() + 1\nfor i in range(ln):\n  y = (1 << (i + 1))\n  u = [x % y for x in a]\n  v = [x % y for x in b]\n  y >>= 1\n  u.sort(reverse = True)\n  v.sort()\n  t = 0\n  k = 0\n  kk = 0\n  for x in u:\n    while k < N and x + v[k] < y: k += 1\n    t += N - k\n    while kk < N and x + v[kk] < y * 2: kk += 1\n    t -= N - kk\n  k = 0\n  kk = 0\n  #print(t)\n  for x in u:\n    while k < N and x + v[k] < y * 2 + y: k += 1\n    t += N - k\n    while kk < N and x + v[kk] < y * 4: kk += 1\n    t -= N - kk\n    #print(t)\n  #print(u, v, t)\n  res ^= t % 2 * y\nprint(res)\n", "import bisect\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nans = 0\nfor i in range(29):\n    div_ = pow(2, i+1)\n    A_tmp = sorted([x%div_ for x in A])\n    B_tmp = sorted([x%div_ for x in B])\n    cnt = 0\n    tmp = pow(2, i)\n    idx1 = N\n    idx2 = N\n    idx3 = N\n    for a in A_tmp:\n        idx2 = bisect.bisect_left(B_tmp, 2*tmp-a, hi=idx2)\n        idx1 = bisect.bisect_left(B_tmp, tmp-a, hi=min(idx1, idx2))\n        idx3 = bisect.bisect_left(B_tmp, 3*tmp-a, lo=idx2, hi=idx3)\n        cnt += ((idx2-idx1)+(N-idx3))%2\n    if cnt % 2 == 1:\n        ans += tmp\nprint(ans)\n", "def read():\n  return int(input())\n \ndef reads():\n  return [int(x) for x in input().split()]\n \nN = read()\nA = reads()\nB = reads()\n \nD = 28\nxor = 0\nfor d in range(D + 1):\n  mask = (1 << (d + 1)) - 1 # [1] * (d+1)\n  AA = sorted(x & mask for x in A)\n  BB = sorted(x & mask for x in B)\n  count = 0\n  itr = [N] * 4\n  for a in AA:\n    vs = [\n      (1 << d) - a,\n      (1 << (d + 1)) - a,\n      (1 << d) + (1 << (d + 1)) - a,\n      (1 << (d + 2)) - a\n    ]\n    for i in range(4):\n      while 0 < itr[i] and vs[i] <= BB[itr[i]-1]:\n        itr[i] -= 1\n    count += (itr[1] - itr[0]) + (itr[3] - itr[2])\n  if count & 1:\n    xor |= 1 << d\n \nprint(xor)", "from numpy import*\na,b=loadtxt(open(0),'i',skiprows=1)\nc=0\nl=1<<29\nwhile l:u=l;l>>=1;c+=sum(diff(searchsorted(sort(r_[b%u-u,b%u]),([u],[l])-a%u).T))%2*l\nprint(c)", "\n\"\"\"\n\nhttps://atcoder.jp/contests/arc092/tasks/arc092_b\n\n\u6841\u306b\u304a\u3051\u308b1\u306e\u6570\u306e\u5076\u5947\u3060\u3051\u3067\u6c7a\u307e\u308b\n1+1 -> 0 (1\u7e70\u308a\u4e0a\u304c\u308a)\n1+0 -> 1\n0+0 -> 0\n\u306a\u306e\u3067\u30011\u306e\u4f4d\u306b\u304a\u3044\u3066\u306f\u305d\u3046\n\n2\u306e\u4f4d\u3067\u306f\uff1f\u7e70\u308a\u4e0a\u304c\u308a\u304c\u3042\u308b\n\u7e70\u308a\u4e0a\u304c\u308a\u3082\u542b\u3081\u3066\u30011\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u308f\u304b\u308c\u3070\u3044\u3044\n\u305d\u306e\u6841\u3078\u306e\u7e70\u308a\u4e0a\u304c\u308a\u304c\u3042\u308b\u304b\u306f\u3001\u4e8c\u5206\u63a2\u7d22\u3067\u308f\u304b\u308b\u306f\u305a\n\n200000*28*log\n\n\"\"\"\n\nfrom sys import stdin\nimport bisect\n\nN = int(stdin.readline())\na = list(map(int,stdin.readline().split()))\nb = list(map(int,stdin.readline().split()))\n\nans = 0\n\nfor i in range(29):\n\n    ndig = 2**i\n    now = 0\n\n    for j in a:\n        if j & ndig > 0:\n            if N % 2 == 1:\n                now ^= 1\n    for j in b:\n        if j & ndig > 0:\n            if N % 2 == 1:\n                now ^= 1\n    \n    nb = [j % ndig for j in b]\n    nb.sort()\n    nb.reverse()\n    #print (now)\n    \n    for j in a:\n        \n        na = j % ndig\n        l = -1\n        r = N\n\n        while r-l != 1:\n            m = (l+r)//2\n            if nb[m] + na < ndig:\n                r = m\n            else:\n                l = m\n\n        if r % 2 == 1:\n            now ^= 1\n\n    ans += now * ndig\n\nprint (ans)\n        \n", "def main():\n    from bisect import bisect_right as br\n    import numpy as np\n    n = int(input())\n    a = np.array(list(map(int, input().split())))\n    b = np.array(list(map(int, input().split())))\n    #n = 100000\n    #a = np.array([i+1 for i in range(n)])\n    #b = np.array([2*i+2 for i in range(n)])\n    a = np.sort(a)\n    b = np.sort(b[::-1])\n    m = n % 2\n    xor = 0\n    for i in b:\n        xor ^= i\n    b = pow(2, 28) - b\n    ans = 0\n    for loop in range(28, -1, -1):\n        j = pow(2, loop)\n        k = (xor & j) // j\n        temp = br(b, j-1)\n        b[temp:] -= j\n        b = np.sort(b)\n        temp = br(a, j-1)\n        k += sum((a & j) // j)\n        a[temp:] -= j\n        x = (k+br(b, 0))*m % 2\n        a = np.sort(a)\n        x += np.sum(np.searchsorted(b, a+1))\n        ans += (x % 2)*j\n    print(ans)\n\n\nmain()\n", "# seishin.py\nN = int(input())\n*A, = map(int, input().split())\n*B, = map(int, input().split())\n\nM = 32\nMOD = [(2 << i) for i in range(M+1)]\n\nfrom bisect import bisect\ndef make(B):\n    S = [None]*M\n    s = {}; get = s.get\n    for b in B:\n        s[b] = get(b, 0) ^ 1\n    S[M-1] = sorted(b for b in s if s[b])\n\n    for i in range(M-2, -1, -1):\n        t = S[i+1]; l = len(t)\n        m = MOD[i]\n        mid = bisect(t, m-1)\n        def gen(p, q):\n            while p < mid and q < l:\n                u = t[p]; v = t[q]\n                if u+m == v:\n                    p += 1; q += 1\n                elif u+m < v:\n                    yield t[p]; p += 1\n                else:\n                    yield t[q]-m; q += 1\n            while p < mid:\n                yield t[p]; p += 1\n            while q < l:\n                yield t[q]-m; q += 1\n        *S[i], = gen(0, mid)\n    return S\nS = make(A)\nT = make(B)\n\nans = 0\nif 0 in S[0]:\n    ans ^= 1 in T[0]\nif 1 in S[0]:\n    ans ^= 0 in T[0]\n\nfor i in range(1, M):\n    s = S[i]; ls = len(S)\n    t = T[i]; lt = len(t)\n    m = MOD[i]; p = MOD[i-1]\n    P = p+m; Q = 2*m\n\n    if lt:\n        c = 0\n        f = lt\n        while P <= t[f-1]:\n            f -= 1\n\n        u = f; v = lt\n        for a in s:\n            while u > -lt and P <= a + t[u-1] + (u > 0)*m:\n                u -= 1\n            while v > -lt and Q <= a + t[v-1] + (v > 0)*m:\n                v -= 1\n            c += (v - u)\n        if c & 1:\n            ans ^= 1 << i\nprint(ans)", "import bisect\nimport functools\nimport os\nimport sys\n\nsys.setrecursionlimit(10000)\nINF = float('inf')\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n\ndef debug(fn):\n    if not os.getenv('LOCAL'):\n        return fn\n\n    @functools.wraps(fn)\n    def wrapper(*args, **kwargs):\n        ret = fn(*args, **kwargs)\n        print('DEBUG: {}({}) -> '.format(\n            fn.__name__,\n            ', '.join(\n                list(map(str, args)) +\n                ['{}={}'.format(k, str(v)) for k, v in kwargs.items()]\n            )\n        ), end='')\n        print(ret)\n        return ret\n\n    return wrapper\n\n\n@debug\ndef calc_bit(k):\n    \"\"\"\n    \u7b54\u3048\u306e\u4e0b\u304b\u3089 k \u30d3\u30c3\u30c8\u76ee\u3092\u8fd4\u3059\n    :param int k:\n    :return:\n    \"\"\"\n    # \u7b54\u3048\u306e k \u30d3\u30c3\u30c8\u76ee\u304c\u5076\u6570\u306a\u3089 0\u3001\u5947\u6570\u306a\u3089 1\n\n    # \u3053\u308c\u4ee5\u4e0a\u306e\u6841\u306f\u4e0d\u8981\n    mod = 1 << (k + 1)\n    amod = [a & (mod - 1) for a in A]\n    bmod = [b & (mod - 1) for b in B]\n    amod.sort()\n    bmod.sort()\n    ret = 0\n\n    # bmod + amod \u306e\u3046\u3061 k \u30d3\u30c3\u30c8\u76ee\u304c 1 \u3068\u306a\u308b\u6570\n    # => (1 << k) \u4ee5\u4e0a (2 << k) \u672a\u6e80\u307e\u305f\u306f (3 << k) \u4ee5\u4e0a (4 << k) \u672a\u6e80\n    # \u3057\u3083\u304f\u3068\u308b\n    b01 = bisect.bisect_left(bmod, (1 << k) - amod[0])\n    b10 = bisect.bisect_left(bmod, (2 << k) - amod[0])\n    b11 = bisect.bisect_left(bmod, (3 << k) - amod[0])\n    for a in range(len(amod)):\n        while b01 - 1 >= 0 and bmod[b01 - 1] >= (1 << k) - amod[a]:\n            b01 -= 1\n        while b10 - 1 >= 0 and bmod[b10 - 1] >= (2 << k) - amod[a]:\n            b10 -= 1\n        while b11 - 1 >= 0 and bmod[b11 - 1] >= (3 << k) - amod[a]:\n            b11 -= 1\n        # (1 << k) \u4ee5\u4e0a (2 << k) \u672a\u6e80\n        ret += b10 - b01\n        # (3 << k) \u4ee5\u4e0a (4 << k) \u672a\u6e80\n        ret += len(bmod) - b11\n\n    return ret % 2\n\n\nans = 0\nfor i in range(30):\n    ans += calc_bit(i) * (2 ** i)\nprint(ans)\n", "from bisect import bisect_left\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nans = 0\nT = 1 << 30\nfor k in range(30, -1, -1):\n    cnt = 0\n\n    TT = T << 1\n    for i in range(N):\n        A[i] %= TT\n        B[i] %= TT\n\n    A = sorted(A)\n    B = sorted(B)\n\n    d0 = bisect_left(B, T - A[0])\n    d1 = bisect_left(B, 2 * T - A[0])\n    d2 = bisect_left(B, 3 * T - A[0])\n    for i in range(N):\n        while d0 - 1 >= 0 and B[d0 - 1] >= T - A[i]:\n            d0 -= 1\n        while d1 - 1 >= 0 and B[d1 - 1] >= 2 * T - A[i]:\n            d1 -= 1\n        while d2 - 1 >= 0 and B[d2 - 1] >= 3 * T - A[i]:\n            d2 -= 1\n\n        cnt += d1 - d0\n        cnt += N - d2\n\n    if cnt % 2 == 1:\n        ans |= T\n\n    T = T >> 1\n\nprint(ans)", "import numpy as np\nN = int(input())\nA = np.array(input().split(), dtype=np.int32)\nB = np.array(input().split(), dtype=np.int32)\n \ndef sum_count(A,B,x):\n  # A,B is sorted. \n  # return count(a+b < x)\n  C = np.searchsorted(B, x-A)\n  return C.sum()\n \n\t\t\ndef f(t,A,B):\n  power = 1<<t\n  mask = (power<<1)-1\n  AA = A & mask\n  BB = B & mask\n  AA.sort()\n  BB.sort()\n\n  x1,x2,x3 = (sum_count(AA,BB,v) for v in [power, 2*power, 3*power])\n  zero_cnt = x1 + (x3-x2)\n  return (N-zero_cnt)%2\n  \nanswer = 0\nfor t in range(30):\n\tx = f(t,A,B)\n\tif x == 1:\n\t\tanswer += 1<<t\n\nprint(answer)\n", "# \u5199\u7d4c\n# https://atcoder.jp/contests/arc092/submissions/5244389\n\nfrom bisect import bisect_left\n\nINF = float('inf')\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\ndef calc_bit(k):\n    # \u3053\u308c\u4ee5\u4e0a\u306e\u6841\u306f\u4e0d\u8981\n    mod = 1 << (k + 1)\n    amod = [a & (mod - 1) for a in A]\n    bmod = [b & (mod - 1) for b in B]\n    amod.sort()\n    bmod.sort()\n    ret = 0\n\n    # bmod + amod \u306e\u3046\u3061 k \u30d3\u30c3\u30c8\u76ee\u304c 1 \u3068\u306a\u308b\u6570\n    # => (1 << k) \u4ee5\u4e0a (2 << k) \u672a\u6e80\u307e\u305f\u306f (3 << k) \u4ee5\u4e0a (4 << k) \u672a\u6e80\n    # \u3057\u3083\u304f\u3068\u308b\n    b01 = bisect_left(bmod, (1 << k) - amod[0])\n    b10 = bisect_left(bmod, (2 << k) - amod[0])\n    b11 = bisect_left(bmod, (3 << k) - amod[0])\n    for a in range(len(amod)):\n        while b01 - 1 >= 0 and bmod[b01 - 1] >= (1 << k) - amod[a]:\n            b01 -= 1\n        while b10 - 1 >= 0 and bmod[b10 - 1] >= (2 << k) - amod[a]:\n            b10 -= 1\n        while b11 - 1 >= 0 and bmod[b11 - 1] >= (3 << k) - amod[a]:\n            b11 -= 1\n        # (1 << k) \u4ee5\u4e0a (2 << k) \u672a\u6e80\n        ret += b10 - b01\n        # (3 << k) \u4ee5\u4e0a (4 << k) \u672a\u6e80\n        ret += N - b11\n\n    return ret % 2\n\n\nans = 0\nfor i in range(30):\n    ans += calc_bit(i) * (1<<i)\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n# resort list X O(len(X))\ndef sorting(X, l):\n    eX = []\n    oX = []\n    for x in X:\n        if x&(1<<l):\n            oX.append(x)\n        else:\n            eX.append(x)\n    return eX + oX\n\nans = 0\nfor shift in range(30):\n    A = sorting(A, shift)\n    B = sorting(B, shift)\n    div = (1<<(shift+1))\n    count = 0\n    l1 = N\n    r1 = N\n    l2 = N\n    r2 = N\n    for a in A:\n        while a%div + B[l1-1]%div >= div//2 and l1 > 0:\n            l1 -= 1\n        while a%div + B[r1-1]%div >= div and r1 > 0:\n            r1 -= 1\n        while a%div + B[l2-1]%div >= div//2*3 and l2 > 0:\n            l2 -= 1\n        while a%div + B[r2-1]%div >= 2*div and r2 > 0:\n            r2 -= 1\n        count += (r1-l1) + (r2-l2)\n    if count%2 == 1:\n        ans += (1<<shift)\n\nprint(ans)", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn, = map(int,input().split())\n*a, = map(int,input().split())\n*b, = map(int,input().split())\n\ndef bsort(a,d):\n    a0 = []\n    a1 = []\n    for i in a:\n        if i>>d&1:\n            a1.append(i)\n        else:\n            a0.append(i)\n    return a0+a1\n    \n\nans = 0\nfor d in range(29):\n    res = 0\n    a = bsort(a,d)\n    b = bsort(b,d)\n    r1 = r2 = r3 = 0\n    MASK = (1<<(d+1))-1\n    #print([i&MASK for i in a],[i&MASK for i in b])\n    for bi in b[::-1]:\n        bi &= MASK\n        while r1 < n and bi+(a[r1]&MASK) < 1<<d:\n            r1 += 1\n        while r2 < n and bi+(a[r2]&MASK) < 2<<d:\n            r2 += 1\n        while r3 < n and bi+(a[r3]&MASK) < 3<<d:\n            r3 += 1\n        #print(d,bi,r1,r2,r3,n)\n        res += r2-r1 + n-r3\n    ans |= (res%2)<<d\n    \nprint(ans)", "# seishin.py\nN = int(input())\n*A, = map(int, input().split())\n*B, = map(int, input().split())\n\nM = 32\nMOD = [(2 << i) for i in range(M+1)]\n\nfrom bisect import bisect\ndef make(B, mode):\n    S = [None]*M\n    s = {}; get = s.get\n    for b in B:\n        s[b] = get(b, 0) ^ 1\n    S[M-1] = sorted(b for b in s if s[b])\n\n    for i in range(M-2, -1, -1):\n        t = S[i+1]; l = len(t)\n        m = MOD[i]\n        mid = bisect(t, m-1)\n        def gen(p, q):\n            while p < mid and q < l:\n                u = t[p]; v = t[q]\n                if u+m == v:\n                    p += 1; q += 1\n                elif u+m < v:\n                    yield t[p]; p += 1\n                else:\n                    yield t[q]-m; q += 1\n            while p < mid:\n                yield t[p]; p += 1\n            while q < l:\n                yield t[q]-m; q += 1\n        *S[i], = gen(0, mid)\n    if mode:\n        for i in range(M):\n            m = MOD[i]\n            S[i] += list(map(lambda x: x+m, S[i]))\n    return S\nS = make(A, 0)\nT = make(B, 1)\n\nans = 0\nif 0 in S[0]:\n    ans ^= 1 in T[0]\nif 1 in S[0]:\n    ans ^= 0 in T[0]\n\nfor i in range(1, M):\n    s = S[i]; ls = len(S)\n    t = T[i]; lt = len(t)\n    m = MOD[i]; p = MOD[i-1]\n    P = p+m; Q = 2*m\n\n    if lt:\n        c = 0\n        f = lt\n        while P <= t[f-1]:\n            f -= 1\n\n        u = f; v = lt\n        for a in s:\n            while u > 0 and P <= a + t[u-1]:\n                u -= 1\n            while v > 0 and Q <= a + t[v-1]:\n                v -= 1\n            c += (v - u)\n        if c & 1:\n            ans ^= 1 << i\nprint(ans)", "from numpy import*\na,b=loadtxt(open(c:=0),'i',skiprows=1)\nl=1<<29\nwhile l:u=l;l>>=1;c+=sum(diff(searchsorted(sort(r_[b%u-u,b%u]),([u],[l])-a%u).T))%2*l\nprint(c)", "from bisect import bisect_left, bisect_right\n\ndef solve():\n    maxD = 30\n\n    N = int(input())\n    As = list(map(int, input().split()))\n    Bs = list(map(int, input().split()))\n\n    As.sort()\n    Bs.sort()\n\n    ans = 0\n    for d in reversed(list(range(maxD))):\n        m1 = 1 << d\n\n        iA = bisect_left(As, m1)\n        iB = bisect_left(Bs, m1)\n\n        num1 = N * (N-iA + N-iB)\n\n        As = As[:iA] + [A-m1 for A in As[iA:]]\n        Bs = Bs[:iB] + [B-m1 for B in Bs[iB:]]\n\n        As.sort()\n        Bs.sort(reverse=True)\n\n        iB = 0\n        for A in As:\n            while iB < N and A + Bs[iB] >= m1:\n                iB += 1\n            num1 += iB\n\n        Bs.reverse()\n\n        if num1 % 2:\n            ans |= m1\n\n    print(ans)\n\n\nsolve()\n", "from bisect import bisect_left,bisect_right\nN=int(input())\nA=[int(i) for i in input().split()]\nB=[int(i) for i in input().split()]\n\nnum=[0]*30\nfor i in range(30):\n    t = pow(2,i)\n    K=sorted(i%(2*t) for i in A)\n    L=sorted(i%(2*t) for i in B)\n    #L=sort()\n    #print(K,L)\n    a = 0\n    #\u5c3a\u53d6\u308a\u6cd5,i*t\u3088\u308a\u5c0f\u3055\u3044\u6574\u6570\u3092\u6570\u3048\u308b\n    S=[i*t for i in range(1,5)]\n    count=[N]*4\n    for k in K:\n        for j in range(4):\n            while L[count[j]-1]+k>=S[j] and count[j]>0:\n                count[j]-=1\n        a +=count[3]-count[2]+count[1]-count[0]\n        #print(count,a)\n    num[i]=a%2\nans =0\ns=1\nfor z in num:\n    ans += z*s\n    s*=2\nprint(ans)\n\n", "import numpy as np\nn=int(input())\na=np.array(input().split(),dtype=np.int32)\nb=np.array(input().split(),dtype=np.int32)\ndef f(t,a,b):\n  power=1<<t\n  mask=(power<<1)-1\n  aa=a&mask\n  bb=b&mask\n  aa.sort()\n  bb.sort()\n  x1,x2,x3=(np.searchsorted(bb,v-aa).sum() for v in [power,power*2,power*3])\n  zero_cnt=x1+(x3-x2)\n  return (n-zero_cnt)%2\nans=0\nfor t in range(30):\n  x=f(t,a,b)\n  if x==1:\n    ans+=1<<t\nprint(ans)\n", "N, = list(map(int, input().split()))\nP = list(map(int, input().split()))\nQ = list(map(int, input().split()))\nmxk = 29\nmsk = (1<<mxk) - 1\nmsk2 = (1<<(mxk-1))\nr = 0\nfor i in range(mxk):\n    # \u4e0b\u304b\u3089i\u30d3\u30c3\u30c8\u76ee\u3092\u307f\u308b\n    for j in range(N):\n        Q[j] = Q[j] & msk\n        P[j] = P[j] & msk\n    msk >>= 1\n    P.sort()\n    Q.sort()\n    j1 = N-1\n    j2 = N-1\n    b = 0\n    ss = N\n#    print(P, Q)\n    for l in range(N):\n        if P[l] & msk2:\n            ss = l\n            break\n        k1 = msk2 - (P[l]&msk)\n        k2 = k1 + msk2\n        while j1 >= 0:\n            if Q[j1] < k1:\n                break\n            j1 -= 1\n        while j2 >= 0:\n            if Q[j2] < k2:\n                break\n            j2 -= 1\n        b += j2 - j1\n#        print(\"a\",j2-j1,k1,k2,j1,j2)\n\n    j1 = N-1\n    j2 = N-1\n#    print(ss)\n    for l in range(ss, N):\n        k1 = msk2 - (P[l]&msk)\n        k2 = k1 + msk2\n        while j1 >= 0:\n            if Q[j1] < k1:\n                break\n            j1 -= 1\n        while j2 >= 0:\n            if Q[j2] < k2:\n                break\n            j2 -= 1\n#        print(\"b\",j1 - j2 + N)\n        b += j1 + N - j2\n\n#    b = 0\n#    for p in P:\n#        if p & msk2:\n#            x = g(2*msk2 - (p&msk))\n#            z = g(msk2 - (p&msk))\n#            b += z+N-x\n#        else:\n#            x = g(2*msk2 - (p&msk))\n#            z = g(msk2 - (p&msk))\n#            b += x-z\n#    print(b, r, i)\n    if b%2:\n        r += 1<<(mxk-1-i)\n    msk2 >>= 1\nprint(r)\n", "import numpy as np\nn=int(input())\na=np.array(input().split(),dtype=np.int32)\nb=np.array(input().split(),dtype=np.int32)\ndef f(t,a,b):\n  power=1<<t\n  mask=(power<<1)-1\n  aa=a&mask\n  bb=b&mask\n  aa.sort()\n  bb.sort()\n  x1,x2,x3=(np.searchsorted(bb,v-aa).sum() for v in [power,power*2,power*3])\n  zero_cnt=x1+(x3-x2)\n  return (n-zero_cnt)%2\nans=0\nfor t in range(30):\n  x=f(t,a,b)\n  if x==1:\n    ans+=1<<t\nprint(ans)", "from bisect import bisect_left\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nm = 30\nd = []\n# d[i] = 1<<i\nfor i in range(m+1):\n    d.append(1<<i)\n\nc = [[] for i in range(m)]\nfor bi in b:\n    for i in range(m):\n        c[i].append(bi&(d[i+1]-1))\nfor i in range(m):\n    c[i].sort()\n\nketa = [0]*m\n\n# \u3057\u3083\u304f\u3068\u308a\u3059\u308b\u306a\u3089\u6841\u3054\u3068\u306b\u3084\u308b\u3057\u304b\u7121\u3044\nfor i in range(m):\n    aa = [ai&(d[i+1]-1) for ai in a]\n    aa.sort()\n    a0 = aa[0]\n\n    i1 = d[i]\n    i2 = d[i+1]\n    i3 = i2+i1\n    b1 = bisect_left(c[i], i1-a0)\n    b2 = bisect_left(c[i], i2-a0)\n    b3 = bisect_left(c[i], i3-a0)\n\n    for ai in aa:\n        # \u5c3a\u53d6\n        # ai\u306f\u5927\u304d\u304f\u306a\u308b\u2192\u5883\u754c\u306f\u5c0f\u3055\u304f\u306a\u308b\n        # \u5f15\u3044\u305f\u3042\u3068\u306eindex\u304c0\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3082\u5fc5\u8981\n        while b1-1 >= 0 and c[i][b1-1] >= i1-ai:\n            b1 -= 1\n        while b2-1 >= 0 and c[i][b2-1] >= i2-ai:\n            b2 -= 1\n        while b3-1 >= 0 and c[i][b3-1] >= i3-ai:\n            b3 -= 1\n        keta[i] += b2-b1 + n-b3\n    keta[i] %= 2\n\n#print(keta)\n\nans = 0\nfor i in range(m):\n    ans += keta[i]*(1<<i)\n\nprint(ans)", "N = int(input())\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\n \ndef sum_count(A,B,x):\n    # A,B is sorted. \n    # return count(a+b < x)\n    p = len(B)-1\n    result = 0\n    for a in A:\n        while p != -1 and a + B[p] >= x:\n            p -= 1\n        result += p+1\n    return result\n \n\t\t\ndef f(t,A,B):\n    power = (1<<t)\n    AA = [x&(2*power-1) for x in A]\n    BB = [x&(2*power-1) for x in B]\n    AA.sort()\n    BB.sort()\n    \n    x1,x2,x3 = (sum_count(AA,BB,v) for v in [power, 2*power, 3*power])\n    zero_cnt = x1 + (x3-x2)\n    return (N-zero_cnt)%2\n  \nans = 0\nfor t in range(30):\n\tx = f(t,A,B)\n\tif x == 1:\n\t\tans += 1<<t\n \nprint(ans)", "N = int(input())\nA = [int(a) for a in input().split()]\nB = [int(a) for a in input().split()]\n\ndef xor(L):\n    a = 0\n    for l in L: a ^= l\n    return a\n\ndef chk(L1, L2, k):\n    L1.sort()\n    L2.sort()\n    s, j = 0, 0\n    for i in range(N)[::-1]:\n        while j < N and L1[i] + L2[j] < k:\n            j += 1\n        s += N - j\n    return s % 2 * k\n\nt = (xor(A) ^ xor(B)) * (N % 2)\nfor i in range(28):\n    m = 1 << i+1\n    t ^= chk([a%m for a in A], [b%m for b in B], m)\n\nprint(t)", "from numpy import*\na,b=loadtxt(open(0),'i',skiprows=1)\nc=0\nl=1<<29\nwhile l:u=l;l>>=1;c+=sum(diff(searchsorted(sort(hstack((b%u-u,b%u))),([u],[l])-a%u).T))%2*l\nprint(c)", "\"\"\"\n\u611f\u60f3\n- \u6841dp,\u305d\u306e\u6841\u306b1\u7acb\u3064\u304b\u8abf\u3079\u308b\n- \u6841\u306b1\u304c\u7acb\u3064=\u5024\u306e\u7bc4\u56f2\u304c[T,2T), [3T, 4T)...\n- \u305d\u306e\u6841\u3092\u3057\u308b\u305f\u3081\u306b\u306fmod 2*T\u306e\u5024\u3060\u3051\u898b\u308c\u3070\u5341\u5206\n- \u5024\u306e\u7bc4\u56f2\u306e\u500b\u6570\u3092bisect\u3067\u63a2\u308b\n- bisect\u3060\u3068python\u3060\u3068\u6b7b\u306c\n  - NlogN\u306f\u3060\u3081?\n  - \u5c3a\u53d6\u30672*N\u306b\u3059\u308b\n  - \u3067\u3082\u30bd\u30fc\u30c8\u3057\u3066\u308b\u304b\u3089NlogN\u3058\u3083\uff1f\n  - \u5b9a\u6570\u500d\u306e\u30ae\u30ea\u30ae\u30ea\u306e\u554f\u984c\uff1f=>bisect\u4e00\u500b\u306a\u3089\u30bb\u30fc\u30d5, \u63a2\u7d22\u7bc4\u56f2\u7d5e\u3063\u3066bisect\u306e\u30b3\u30fc\u30c9\u306f\u672c\u5f53\u306b\u30ae\u30ea\u30ae\u30ea\u3067\u904b\u6b21\u7b2c\u3067AC(\u540c\u3058\u30b3\u30fc\u30c9\u3067TLE\u3068AC)\n\"\"\"\nN = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nans = 0\nfor i in range(29):\n    div_ = pow(2, i+1)\n    A_tmp = sorted([x%div_ for x in A])\n    B_tmp = sorted([x%div_ for x in B])\n    cnt = 0\n    tmp = pow(2, i)\n    idx1 = N\n    idx2 = N\n    idx3 = N\n    for a in A_tmp:\n        while idx2>0 and B_tmp[idx2-1]>=2*tmp-a:\n            idx2 -= 1\n        while idx1>0 and B_tmp[idx1-1]>=tmp-a:\n            idx1 -= 1\n        while idx3>0 and B_tmp[idx3-1]>=3*tmp-a:\n            idx3 -= 1\n        cnt += ((idx2-idx1)+(N-idx3))%2\n    if cnt % 2 == 1:\n        ans += tmp\nprint(ans)\n", "import numpy as np\nn=int(input())\na=np.array(input().split(),dtype=np.int32)\nb=np.array(input().split(),dtype=np.int32)\ndef f(t,a,b):\n  power=1<<t\n  mask=(power<<1)-1\n  aa=a&mask\n  bb=b&mask\n  aa.sort()\n  bb.sort()\n  x1,x2,x3=(np.searchsorted(bb,v-aa).sum() for v in [power,power*2,power*3])\n  zero_cnt=x1+(x3-x2)\n  return (n*n-zero_cnt)%2\nans=0\nfor t in range(30):\n  x=f(t,a,b)\n  if x==1:\n    ans+=1<<t\nprint(ans)\n", "import sys,bisect\ninput = sys.stdin.readline\n\n\ndef main():\n    n = int(input())\n    a = tuple(map(int,input().split()))\n    b = tuple(map(int,input().split()))\n\n\n    res = 0\n    p = 0\n\n    for i in range(1,30):\n        p += 1<<(i-1)\n        A = []\n        B = []\n\n        for j in range(n):\n            A.append(a[j]&p)\n            B.append(b[j]&p)\n        A.sort()\n        B.sort()\n\n        cnt = 0\n\n        q2 = p+1\n        q1 = q2>>1\n        q3 = q2<<1\n\n        k1,k2,k3,k4 = 0,0,0,0\n\n        for j in range(n-1,-1,-1):\n            while k1 < n and A[j]+B[k1] < q1:\n                k1 += 1\n            while k2 < n and A[j]+B[k2] < q2:\n                k2 += 1\n            while k3 < n and A[j]+B[k3] < 3*q1:\n                k3 += 1\n            while k4 < n and A[j]+B[k4] < q3:\n                k4 += 1\n            cnt += k4 + k2 - k1 - k3\n\n        \n        if cnt%2 != 0:\n            res += 1<<(i-1)\n\n    print(res)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "# seishin.py\nN = int(input())\n*A, = map(int, input().split())\n*B, = map(int, input().split())\n\nM = 32\nMOD = [(2 << i) for i in range(M+1)]\n\nfrom bisect import bisect\ndef make(B, mode):\n    S = [None]*M\n    s = {}; get = s.get\n    for b in B:\n        s[b] = get(b, 0) ^ 1\n    S[M-1] = sorted(b for b in s if s[b])\n\n    for i in range(M-2, -1, -1):\n        t = S[i+1]; l = len(t)\n        m = MOD[i]\n        mid = q = bisect(t, m-1)\n        p = 0\n        if q < l:\n            if p < mid:\n                def gen(p, q):\n                    u = t[p]; v = t[q]\n                    while p < mid and q < l:\n                        if u+m == v:\n                            p += 1; u = t[p] if p < mid else None\n                            q += 1; v = t[q] if q < l else None\n                        elif u+m < v:\n                            yield u\n                            p += 1; u = t[p] if p < mid else None\n                        else:\n                            yield v-m\n                            q += 1; v = t[q] if q < l else None\n                    while p < mid:\n                        yield t[p]; p += 1\n                    while q < l:\n                        yield t[q]-m; q += 1\n                *S[i], = gen(p, q)\n            else:\n                *S[i], = (u-m for u in t)\n        else:\n            *S[i], = t\n    if mode:\n        for i in range(M):\n            m = MOD[i]\n            S[i] += list(map(lambda x: x+m, S[i]))\n    return S\nS = make(A, 0)\nT = make(B, 1)\n\nans = 0\nif 0 in S[0]:\n    ans ^= 1 in T[0]\nif 1 in S[0]:\n    ans ^= 0 in T[0]\n\nfor i in range(1, M):\n    s = S[i]; ls = len(S)\n    t = T[i]; lt = len(t)\n    m = MOD[i]; p = MOD[i-1]\n    P = p+m; Q = 2*m\n\n    if lt:\n        c = 0\n        f = lt\n        while P <= t[f-1]:\n            f -= 1\n\n        u = f; v = lt\n        for a in s:\n            while u > 0 and P <= a + t[u-1]:\n                u -= 1\n            while v > 0 and Q <= a + t[v-1]:\n                v -= 1\n            c += (v - u)\n        if c & 1:\n            ans ^= 1 << i\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nA.sort()\nB.sort()\n\nBit_num = max(A[-1],B[-1]).bit_length()\n\ndef derive(i, A, B): #i\u6841\u76ee\u3092\u6c42\u3081\u308b\n  pow_2_i = pow(2,i)\n  a = [x % pow_2_i for x in A]\n  b = [x % pow_2_i for x in B]\n  a.sort()\n  b.sort()\n  #print(i,a,b)\n  ans = 0\n  \n  th1 = pow_2_i + pow_2_i//2 #\u7b2c\uff11\u533a\u9593\u3092\u8db3\u3059\n  ib = N-1\n  for ia in range(N):\n    a_now = a[ia]\n    while ib >= 0 and a_now + b[ib] >= th1:\n      ib -= 1\n    ans += N-1 - ib\n    #print(\" \", ia, ib,1)\n  th2 = pow_2_i #\u7b2c\uff12\u533a\u9593\u3092\u5f15\u304f\n  ib = N-1\n  for ia in range(N):\n    a_now = a[ia]\n    while ib >= 0 and a_now + b[ib] >= th2:\n      ib -= 1\n    ans -= N-1 - ib\n    #print(\" \", ia,ib,2)\n  th3 = pow_2_i//2 #\u7b2c\uff13\u533a\u9593\u3092\u8db3\u3059\n  ib = N-1\n  for ia in range(N):\n    a_now = a[ia]\n    while ib >= 0 and a_now + b[ib] >= th3:\n      ib -= 1\n    ans -= N-1 - ib\n    #print(\" \", ia,ib,3)  \n  return ans % 2 == 1 #Xor\u3092\u3068\u308b\u30021\u306a\u3089True\n    \nans = 0\nfor i in range(Bit_num+1,0,-1):\n  ans += int(derive(i, A, B))\n  #print(i,ans)\n  ans *= 2\n  \nprint((ans//2))\n", "import numpy as np\nN = int(input())\nA = np.array(input().split(), dtype=np.int32)\nB = np.array(input().split(), dtype=np.int32)\n\t\ndef f(t,A,B):\n  power = 1<<t\n  mask = (power<<1)-1\n  AA = A & mask\n  BB = B & mask\n  AA.sort()\n  BB.sort()\n\n  x1,x2,x3 = (np.searchsorted(BB, v-AA).sum() for v in [power, 2*power, 3*power])\n  zero_cnt = x1 + (x3-x2)\n  return (N-zero_cnt)%2\n  \nanswer = 0\nfor t in range(30):\n\tx = f(t,A,B)\n\tif x == 1:\n\t\tanswer += 1<<t\n\nprint(answer)\n", "def main():\n    from bisect import bisect_right as br\n    n = int(input())\n    a = sorted(list(map(int, input().split())))\n    b = sorted(list(map(int, input().split())), reverse=True)\n    m = n % 2\n    xor = 0\n    for i in b:\n        xor ^= i\n    for i in range(n):\n        b[i] = 2**28 - b[i]\n    ans = 0\n    for loop in range(28, -1, -1):\n        j = pow(2, loop)\n        k = (xor & j) // j\n        temp = br(b, j-1)\n        for i in range(temp, n):\n            b[i] -= j\n        b.sort()\n        temp = br(a, j-1)\n        for i in a[:temp]:\n            k += (i & j) // j\n        for i in range(temp, n):\n            k += (a[i] & j) // j\n            a[i] -= j\n        x = (k+br(b, 0))*m % 2\n        a.sort()\n        l = 0\n        for i in a:\n            while l < n:\n                if i >= b[l]:\n                    l += 1\n                else:\n                    break\n            x += l % 2\n        ans += (x % 2)*j\n    print(ans)\n\n\nmain()\n", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nl = 29\nval = 0\n\ndef lcount(a,b,x):\n    \"\"\"\u30bd\u30fc\u30c8\u6e08a,b\u306b\u5bfe\u3057\u3066, a[i]+b[j]<=x\u306a\u308bi,j\u306e\u500b\u6570\n    \"\"\"\n    la = len(a)\n    lb = len(b)\n    j = -1\n    ans = 0\n    for i in range(la-1, -1, -1):\n        while j+1<lb and a[i]+b[j+1]<=x:\n            j += 1\n        ans += (j+1)\n    return ans\nfor k in range(l):\n    # i\u6841\u76ee\u3092\u6c42\u3081\u308b\n    tmp = pow(2, k+1)\n    bb = [item%(tmp) for item in b]\n    aa = [item%(tmp) for item in a]\n    aa.sort()\n    bb.sort()\n    ans = n**2 - lcount(aa,bb,tmp//2*3-1) + lcount(aa,bb,tmp-1) - lcount(aa,bb,tmp//2-1)\n    if ans%2:\n        val += pow(2, k)\nprint(val)", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\nB = list(map(int, readline().split()))\nA.sort()\nB.sort()\ncnta = [0]*29\ncntb = [0]*29\nfor idx in range(N):\n    a, b = A[idx], B[idx]\n    for i in range(29):\n        if (1<<i) & a:\n            cnta[i] = 1 - cnta[i]\n        if (1<<i) & b:\n            cntb[i] = 1 - cntb[i]\n\ncarry = [0]*30\nbwa = [0]*N\nbwb = [0]*N\nfor i in range(29):\n    m = (1<<(i+1))-1\n    bwbc = sorted([b&m for b in B])\n    bwac = sorted([m+1 if a&m == 0 else m&(-(a&m)) for a in A])\n    r = N\n    for idx in range(N-1, -1, -1):\n        a = bwac[idx]\n        while r and bwbc[r-1] >= a:\n            r -= 1\n        carry[i+1] += N - r\n        \nans = 0\nfor i in range(29):\n    if (carry[i] + (cnta[i]+cntb[i])*N) % 2 == 1:\n        ans |= 1<<i\nprint(ans)"]