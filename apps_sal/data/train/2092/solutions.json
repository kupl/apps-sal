["n = int(input())\nif n % 2:\n    print(\"contest\")\nelse:\n    print(\"home\")", "n = int(input())\nif n % 2 == 0:\n    print('home')\nelse:\n    print('contest')", "n = int(input())\nif n % 2 == 0:\n\tprint(\"home\")\nelse:\n\tprint(\"contest\")", "n = int(input())\nif n % 2 == 0:\n    print('home')\nelse:\n    print('contest')", "n = int(input())\nbase = str(input())\n\nfor _ in range(n):\n    s = str(input())\n\nif n % 2 == 0:\n    print('home')\nelse:\n    print('contest')", "n = int(input())\nif n & 1:\n\tprint('contest')\nelse:\n\tprint('home')", "from collections import defaultdict\nn = int(input())\n\nhome = input()\nd = defaultdict(int)\n\nfor i in range(n):\n    s = input()\n    fr, to = s.split('->')\n    d[fr] -= 1\n    d[to] += 1\n\nif d[home] == 0:\n    print('home')\nelse:\n    print('contest')\n", "n = int(input())\n\nif n % 2:\n    print(\"contest\")\nelse:\n    print(\"home\")\n", "n = int(input())\n# input()\n# for i in range(n):\n# \tinput()\nif n % 2 == 0:\n\tprint(\"home\")\nelse:\n\tprint(\"contest\")", "3\n# Copyright (C) 2017 Sayutin Dmitry.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; version 3\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; If not, see <http://www.gnu.org/licenses/>.\n\nimport sys\n\ndef main():\n    n = int(input())\n    home = input().strip()\n\n    cnt_fr, cnt_to = 0, 0\n    for i in range(n):\n        fr, to = input().strip().split('->')\n        if fr == home:\n            cnt_fr += 1\n        if to == home:\n            cnt_to += 1\n\n    if cnt_fr == cnt_to + 1:\n        print(\"contest\")\n    elif cnt_fr == cnt_to:\n        print(\"home\")\n    else:\n        return(1)\nmain()\n", "n = int(input())\ns = input()\ngo = 0\nout = 0\nfor i in range(n):\n    ss = input()\n    if ss[:3] == s:\n        go += 1\n    if ss[-3:] == s:\n        out += 1\nif out == go:\n    print(\"home\")\nelse:\n    print(\"contest\")", "n = int(input())\ns = input()\nss = []\ncnt = 0\nfor i in range(n):\n    t = input()\n    t = t.split('->')\n    cnt += t[1] == s\n    ss.append((t))\nif(cnt == n//2 and n%2 == 0):\n    print('home')\nelse:\n    print('contest')", "3\n\nn = int(input())\n\nif n % 2 == 0:\n    print(\"home\")\nelse:\n    print(\"contest\")\n", "n = int(input())\ncode = input()\n\nlines = []\nfor i in range(n):\n    lines.append(input())\n    \nwent = 0\ncame = 0\nfor line in lines:\n    if line.startswith(code):\n        went += 1\n    else:\n        came += 1\n        \nif went > came:\n    print(\"contest\")\nelse:\n    print(\"home\")", "#!/usr/bin/env python3\nn = int(input())\nhome = input()\n\ncnt=0\nfor _ in range(n):\n    line = input()\n    if line.startswith(home):\n        cnt+=1\n    elif line.endswith(home):\n        cnt-=1\n\nif cnt==0:\n    print('home')\nelse:\n    print('contest')\n", "n = int(input())\n\nprint(\"home\" if n % 2 == 0 else \"contest\")\n\n", "n = int(input())\nprint(\"home\" if n % 2 == 0 else \"contest\")\n", "n = int(input())\nplaces = set()\nstart = input()\nplaces.add(start)\nfor i in range(n):\n    for s in input().split(\"->\"):\n        if s in places:\n            places.remove(s)\n        else:\n            places.add(s)\nfor place in places:\n    if place == start:\n        print(\"home\")\n    else:\n        print(\"contest\")\n\n", "n = int(input())\nhome = input()\ncnt = 0\nfor i in range(n):\n    s = input()\n    s.split('->')\n    cnt += s.count(home)\nif cnt % 2 == 0:\n    print('home')\nelse:\n    print('contest')", "n = int(input())\ns = input()\na = [input() for i in range(n)]\nf = sum(s + \"->\" in i for i in a)\nt = sum(\"->\" + s in i for i in a)\nif f == t:\n\tprint(\"home\")\nelse:\n\tprint(\"contest\")", "\ndef main():\n    n = int(input())\n    home_aprt = str(input())\n    balance = 0\n    for i in range(n):\n        f, s = input().split('->')\n        if f == home_aprt:\n            balance += 1\n        else:\n            balance -= 1\n\n    if balance == 0:\n        print('home')\n    else:\n        print('contest')\nmain()", "n = int(input())\ns = input()\n\ndepartures, arrivals = 0, 0\n\nfor _ in range(n):\n    s1, s2 = input().split('->')\n    if s1 == s:\n        departures += 1\n    if s2 == s:\n        arrivals += 1\n\nif departures != arrivals:\n    print(\"contest\")\nelse:\n    print(\"home\")\n", "n = int(input())\nh = input()\nd = []\nfor _ in range(n):\n\ts = input()\n\tfr = s[:3]\n\tto = s[5:]\n\tif (to, fr) in d:\n\t\tdel d[d.index((to, fr))]\n\telse:\n\t\td.append((fr, to))\nif len(d):\n\tprint('contest')\nelse:\n\tprint('home')", "n=int(input())\ngorod=input()\nk=0\nfor i in range(n):\n    polet=input()\n    k=k+1\nif k % 2 == 0:\n    print(\"home\")\nelse:\n    print(\"contest\")", "n = int(input())\nairp = input()\ndep = []\narr = []\nfor i in range(n):\n\tt = input().split(\"->\")\n\tdep.append(t[0])\n\tarr.append(t[1])\n\nif n % 2 == 1:\n\tprint(\"contest\")\nelse:\n\tif dep.count(airp) == arr.count(airp):\n\t\tprint(\"home\")\n\telse:\n\t\tprint(\"contest\")"]