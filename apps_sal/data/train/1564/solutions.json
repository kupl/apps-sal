["#import set\nt = eval(input())  \nwhile(t):\n    s = input()\n    set1 = set()\n    j = 0\n    for i in s[:-1]:\n        a = s[j:j+2]\n        set1.add(a)\n        j = j + 1\n    print(str(len(set1)) + '\\n')\n    t= t-1\n \n", "def bck():\n    t=eval(input())\n    for i in range(t):\n        s=input()\n        l=[]\n        ch=\"\"\n        i=0\n        while(i!=len(s)-1):\n            ch=s[i]+s[i+1]\n            l.append(ch)\n            i=i+1\n        l=set(l)\n        print(len(l))\nbck()\n            \n                \n", "t=int(eval(input()))\nwhile t:\n    a=[]\n    t=t-1\n    s=input()\n    a.append(s[:2])\n    for i in range(1,len(s)-1):\n        c=s[i:i+2]\n        if c not in a:\n            a.append(c)\n    print(str(len(a)))\n    ", "t=eval(input())\n\nwhile t>0:\n    a=[[0 for x in range(26)] for x in range(26)]\n    ans=0\n    t-=1\n    s=list(input())\n    for i in range(len(s)-1):\n        #print s[i]\n        if a[ord(s[i])-65][ord(s[i+1])-65]==0:\n            #print s[i],\"hello\"\n            a[ord(s[i])-65][ord(s[i+1])-65]=1\n            ans+=1\n    print(ans)\n", "t = eval(input())\nwhile t:\n    s = input()\n    country = []\n    for i in range(len(s)-1):\n        temp = s[i] + s[i+1]\n        country += [temp]\n    country  = set(country)    \n    print(len(country))\n    t-=1\n", "import sys\n\ndef work():\n\n\tj=eval(input())\n\tfor k in range(j):\n\t\ts=input()\n\t\ta=''\n\t\tcount=0\n\t\tfor i in range(1,len(s)):\n\t\t\ts1=s[i-1]+s[i]\n\t\t\tif a.find(s1) == -1:\n\t\t\t\ta=a+s1\n\t\t\t\tcount+=1\n#\t\t\t\tprint a.find(s1)\n#\t\t\t\tprint s1\n#\t\t\t\tprint a\n\t\tprint(count)\n\ndef main():\n\twork()\n\n\ndef __starting_point():\n\tmain()\n__starting_point()", "t = int(input())\nwhile(t):\n\ta = []\n\tstring = list(input())\n\tfor i in range(len(string)-1):\n\t\ta.append(str(string[i])+str(string[i+1]))\n\n\ta = set(a)\n\tprint(len(a))\n\tt-=1", "t=int(input())\nwhile t>0 :\n    t-=1\n    s=input()\n    d=dict()\n    for i in range(0,len(s)-1) :\n        word=s[i:i+2]\n        d[word]=d.get(word,0)+1\n    print(len(d))\n", "t = eval(input())\nfor _ in range(t):\n\ts = input()\n\td = []\n\tl = len(s)\n\tfor a in range(l-1):\n\t\td.append(s[a:a+2])\n\td = set(d)\n\tprint(len(d))", "t=eval(input())\nfor i in range(1,t+1):\n    a=input();l=[]\n    for i in range(len(a)-1):\n        l+=[a[i]+a[i+1]]\n    l=set(l)\n    print(len(l))", "t = eval(input())\nfor _ in range(t):\n\ts = input()\n\td = []\n\tl = len(s)\n\tfor a in range(l-1):\n\t\td.append(s[a:a+2])\n\td = set(d)\n\tprint(len(d))", "def extract(s):\n    codes = {}\n    for i in range(len(s) - 1):\n        cc = s[i:i + 2]\n        if cc not in codes:\n            codes[cc] = True\n    return len(codes)\n\nt = int(input())\n\nfor i in range(t):\n    print(extract(input()))\n    \n\n", "import sys\nt=int(input(\"\"))\nwhile t:\n    l2=[]\n    count=0\n    l=str(input(\"\"))\n    for i in range(len(l)-1):\n        x=l[i]+l[i+1]\n        if x not in l2:\n            l2.append(x)\n            count+=1\n    print(count)\n    t-=1\n\n        \n    \n", "for _ in range(eval(input())):\n    arr=[None]*677\n    inp=input()\n    l=len(inp)\n    for i in range(l-1):\n        a=inp[i]\n        b=inp[i+1]\n        num=(ord(a)-65)*26 + (ord(b)-65) + 1 \n        #print num\n        arr[num]=1\n    codes=0    \n    for i in arr:\n        if i==1:\n            codes+=1\n    print(codes)", "def bck():\n    t=eval(input())\n    for i in range(t):\n        s=input()\n        l=[]\n        ch=\"\"\n        i=0\n        while(i!=len(s)-1):\n            ch=s[i]+s[i+1]\n            l.append(ch)\n            i=i+1\n        for j in l:\n            if j in l[l.index(j)+1:]:\n                l.remove(j)\n        print(len(l))\nbck()\n            \n                \n", "for _ in range(int(input())):\n    s=input()\n    l=[s[i:i+2] for i in range(len(s)-1)]\n    print(len(set(l)))\n", "for _ in range(int(input())):\n    a=input()\n    s=set([])\n    for i in range(len(a)-1):\n        s.add(a[i:i+2])\n    print(len(s))", "for a in range(int(input())):\n    arr = []\n    s = input().strip()\n    for i in range(len(s) - 1):\n        if not(s[i:i + 2] in arr):\n            arr.append(s[i:i + 2])\n    print(len(arr))", "t = eval(input())\nfor i in range(t):\n\tstring = input()\n\tl = len(string)\n\taset = set()\n\tfor i in range(l-1):\n\t\taset.add(string[i:i+2])\n\tprint(len(aset))", "for i in range(int(input())):\n  s=input()\n  l=[]\n  for j in range(len(s)-1):\n    l.append(s[j:j+2])\n  print(len(set(l)))", "\n\nimport fractions\nimport sys\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n    f = open(sys.argv[1], \"rt\")\n\n\ndef calc(s):\n    codes = set()\n    for i in range(1, len(s)):\n        ch1 = s[i-1]\n        ch2 = s[i]\n        codes.add((ch1, ch2))\n    return len(codes)\n\nT = int(f.readline().strip())\n\nfor case_id in range(1, T+1):\n    s = f.readline().strip()\n\n    r = calc(s)\n\n    print(r)\n", "import sys\n\nt = eval(input())\nfor _ in range(t):\n\ts = list(map(str, sys.stdin.readline().split()))[0]\n\tn = len(s)\n\td = {}\n\tfor i in range(1,n):\n\t\tk = s[i-1:i+1]\n\t\tif k not in d:\n\t\t\td[k] = 0\n\tprint(len(list(d.keys())))"]