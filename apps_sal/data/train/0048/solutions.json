["for haaghfj in range(int(input())):\n    x,y,k = list(map(int,input().split()))\n    print(k + (y * k + k - 1 +x-2) // (x - 1))\n", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\nimport decimal\nimport copy\nimport heapq\n\n# import numpy as np\n\n# sys.setrecursionlimit(10 ** 6)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list([int(x) - 1 for x in sys.stdin.readline().rstrip().split()])\nflush = lambda: sys.stdout.flush()\n\n\n# ===CODE===\ndef main():\n    t = ni()\n\n    for _ in range(t):\n        x, y, k = ns()\n        ans = k\n        total = k + k * y - 1\n\n        ans += -(-total // (x - 1))\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "for _ in range(int(input())):\n    x, y, k = [int(s) for s in input().split()]\n    n = ((y + 1) * k - 1 + (x - 2)) // (x - 1)\n    print(n + k)\n", "q = int(input())\nfor t in range(q):\n    x, y, k = list(map(int, input().split()))\n    a = ((y + 1) * k - 1 + x - 1 - 1) // (x - 1)\n    b = k\n    print(a + b)\n", "t = int(input())\n\nfor i in range(t):\n    x, y, k = list(map(int, input().split()))\n\n    a = (y + 1) * k - 1\n\n    # print(a)\n\n    print((a - 1) // (x - 1) + 1 + k)\n", "from collections import defaultdict\nfrom queue import deque\n\n\ndef arrinp():\n    return [*list(map(int, input().split(' ')))]\n\n\ndef mulinp():\n    return list(map(int, input().split(' ')))\n\n\ndef intinp():\n    return int(input())\n\n\ndef solution():\n    x,y,k = mulinp()\n    num = y*k + k\n    ans = (num-1)//(x-1)\n    if (num-1)%(x-1) != 0:\n        ans += 1\n    ans += k\n    print(ans)\n\n\ntestcases = 1\ntestcases = int(input())\nfor _ in range(testcases):\n    solution()\n", "t=int(input())\nfor i in range(t):\n    z=list(map(int, input().split()))\n    x=z[0]\n    y=z[1]\n    k=z[2]\n    palok=k*y+k-1\n    ans=0\n    ans=palok//(x-1)\n    if palok%(x-1)!=0:\n        ans+=1\n    print(ans+k)\n", "tests = int(input())\nfor test in range(tests):\n    a = 1\n    x, y, k = list(map(int, input().split()))\n    a1 = (k * (y + 1) - 1 + x - 2) // (x - 1)\n    print(a1 + k)\n", "t = int(input())\nfor _ in range(t):\n    x, y, k = map(int, input().split())\n    n = (k * (y + 1) - 1 + (x - 2)) // (x - 1)\n    print(n + k)", "for _ in range(int(input())):\n    x, y, k = map(int, input().split())\n\n    print((k*y+k-1+x-2)//(x-1)+k)", "from math import ceil\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    x, y, k = read_ints()\n    a = (k * (y + 1) - 2) // (x - 1) + 1 + k\n    print(a)\n", "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    x, y, k = [int(i) for i in input().split()]\n    \n    stick_need = k+k*y-1\n    \n    num_stick_trade = (stick_need+x-2)//(x-1)\n\n    \n    print(num_stick_trade+k)", "for _ in range(int(input())):\n\tx,y,k=map(int,input().split()) \n\ta=(y+1)*k-1 \n\tb=x-1 \n\tif a%b==0:\n\t\tc=a//b\n\telse:\n\t\tc=a//b+1 \n\tprint(c+k)", "import sys\n\nsys.setrecursionlimit(10**5)\nint1 = lambda x: int(x)-1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nfor _ in range(II()):\n    x,y,k=MI()\n    a=(k*(y+1)-1+x-2)//(x-1)\n    print(a+k)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tx, y, k = mints()\n\tta = k*(y+1)\n\td = ((ta-1)+(x-2))//(x-1)\n\tprint(d+k)\n\nfor i in range(mint()):\n\tsolve()\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t):\n    x, y, k = map(int, input().split())\n    needed = k + y * k\n    trades = ((needed - 1) + (x - 2)) // (x - 1)\n    trades += k\n    print(trades)", "t = int(input())\n\nfor ii in range(t):\n\n\tx, y, k = map(int, input().split())\n\n\tcoals = k\n\tsticks = k\n\n\tsticks = k*y + k\n\n\tnum = (sticks-1)//(x-1)\n\n\tif (sticks-1)%(x-1) != 0:\n\t\tnum+=1\n\n\tnum += k\n\n\tprint(num)"]