["\"\"\"\n    Author      : Arif Ahmad\n    Date        : \n    Algo        : \n    Difficulty  : \n\"\"\"\nfrom sys import stdin, stdout, setrecursionlimit\nimport threading\n\n\ndef main():\n    m = int(stdin.readline().strip())\n    a = [int(_) for _ in stdin.readline().strip().split()]\n    b = [int(_) for _ in stdin.readline().strip().split()]\n\n    c = []\n    for i, v in enumerate(b):\n        c.append((v, i))\n\n    a = sorted(a, reverse=True)\n    c = sorted(c)\n\n    ans = [0 for i in range(m)]\n    j = 0\n    for v, i in c:\n        ans[i] = a[j]\n        j += 1\n\n    stdout.write(' '.join(str(_) for _ in ans))\n    \n\n\ndef __starting_point():\n    # the following 4 lines of code are required to increase \n    # the recursion limit and stack size\n    # * if is cause any problem, comment out the lines, \n    # * and just call main()\n    setrecursionlimit(10**6)\n    threading.stack_size(134217728) # 128MB\n    thread = threading.Thread(target=main)\n    thread.start()\n\n__starting_point()", "n=int(input())\na=list(map(int,input().strip().split(' ')))\nb=list(map(int,input().strip().split(' ')))\nc=[]\na.sort(reverse=True)\nfor i in range(n):\n    d=[]\n    d.append(b[i])\n    d.append(i)\n    c.append(d)\nc = sorted(c)\nd=[0 for i in range(n)]\nfor i in range(n):\n    d[c[i][1]]=a[i]\nfor i in range(n):\n    print(d[i],end=' ')", "n=int(input())\na=list(map(int,input().strip().split(' ')))\nb=list(map(int,input().strip().split(' ')))\nc=[]\na.sort(reverse=True)\nfor i in range(n):\n    d=[]\n    d.append(b[i])\n    d.append(i)\n    c.append(d)\nc = sorted(c)\nd=[0 for i in range(n)]\nfor i in range(n):\n    d[c[i][1]]=a[i]\nfor i in range(n):\n    print(d[i],end=' ')", "n=int(input())\na=list(map(int,input().strip().split(' ')))\nb=list(map(int,input().strip().split(' ')))\nc=[]\na.sort(reverse=True)\nfor i in range(n):\n    d=[]\n    d.append(b[i])\n    d.append(i)\n    c.append(d)\nc = sorted(c, key=lambda x: (x[0], -x[1]))\nd=[0 for i in range(n)]\nfor i in range(n):\n    d[c[i][1]]=a[i]\nfor i in range(n):\n    print(d[i],end=' ')", "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nA.sort(reverse=True)\nB1 = sorted(enumerate(B), key=lambda x: x[1])\nB2 = sorted(enumerate(B1), key=lambda x: x[1])\n\nans = [A[b[0]] for b in B2]\n\nprint(' '.join(map(str, ans)))\n", "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nA.sort(reverse=True)\nB1 = sorted(enumerate(B), key=lambda x: x[1])\nB2 = sorted(enumerate(B1), key=lambda x: x[1])\n\nans = [A[b[0]] for b in B2]\n\nprint(' '.join(map(str, ans)))\n", "m = int(input())\nA = sorted(list(map(int, input().split())))\nB = list(map(int, input().split()))\n\nB_idx = sorted([(v, i) for (i, v) in enumerate(B)], reverse=True)\nfor i in range(m):\n    B[B_idx[i][1]] = A[i]\nprint(\" \".join([str(v) for v in B]))\n\n", "# http://codeforces.com/problemset/problem/840/A\nclass Element(object):\n    def __init__(self, val, index, asigned=-1):\n        self.val = val\n        self.index = index\n        self.asigned = asigned\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    b_el = [Element(0, 0) for i in range(n)]\n\n    for i in range(0, n):\n        b_el[i].val = b[i]\n        b_el[i].index = i\n    # sort a by vals\n    a = sorted(a)\n    # sort b by vals\n    b_el = sorted(b_el, key=lambda x: x.val)\n    # asigna valores mayores a los menores\n    for i in range(0, n):\n        b_el[i].asigned = a[n - 1 - i]\n    # reordenar b, esta vez por indices y print de valores asignados\n    b_el = sorted(b_el, key=lambda x: x.index)\n    for i in b_el:\n        print(i.asigned, end=' ')\nmain()", "\ndef getSum(a, b):\n    \n    cont = 0\n    for i in range(0, len(a)):\n        cont += (a[i] + 1) / (b[i] + 1)\n    \n    return cont\n    \nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nordenadoB = []\nordenadoA = []\nfor i in range(0, len(a)):\n    ordenadoB.append((i, b[i]))\n    ordenadoA.append((i, a[i]))\n\nordenadoB = sorted(ordenadoB, key=lambda x: x[1])\nordenadoA = sorted(ordenadoA, key=lambda x: x[1], reverse=True)\n\nres = []\n# print(ordenadoB, ordenadoA)\nfor i in range(0, len(ordenadoA)):\n    res.append( (ordenadoB[i][0], ordenadoA[i][1]))\n\nres = sorted(res, key=lambda x: x[0])\nfor i in res:\n    print(i[1], end=\" \")\n    \nprint('')\n    ", "m = int(input())\na = sorted(map(int, input().split()), reverse=True)\nb = sorted((bi, i) for i, bi in enumerate(map(int, input().split())))\nv = [None] * m\nfor i in range(m):\n    v[b[i][1]] = str(a[i])\nprint(' '.join(v))", "n = int(input())\na = list(map(int, input().split()))\nb = list([(int(x[1]), x[0]) for x in enumerate(input().split())])\nres = [0]*n\na.sort(reverse=True)\nb.sort()\nfor i in range(n):\n    res[b[i][1]] = a[i]\nprint(\" \".join(map(str, res)))\n", "R=lambda:map(int,input().split())\nn=int(input())\na=sorted(R())\nc=[0]*n\nfor i,(_,j) in enumerate(sorted(zip(R(),range(n)))):\n  c[j]=a[-1-i]\nprint(' '.join(map(str,c)))", "def main():\n    n = int(input())\n    aa = sorted(map(int, input().split()), reverse=True)\n    bb = list(map(int, input().split()))\n    ij = sorted(list(range(n)), key=bb.__getitem__)\n    for i, j in enumerate(ij):\n        bb[j] = aa[i]\n    print(' '.join(map(str, bb)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "m = int(input())\n\na = list(map(int, input().split()))\nb = list(zip(list(map(int, input().split())), list(range(m))))\n\na.sort(reverse=True)\nb.sort()\n\nc = list(zip((t[1] for t in b), a))\nc.sort()\n\nprint(*(t[1] for t in c))\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\np =[]\nfor i in range(n):\n    p.append((b[i],i+1));\n#print(p)\np.sort()\n#print(p)\na.sort()\n#print(a)\na.reverse()\n#print(a)\nc = [0]*(n+1)\nfor i in range(n):\n    #print(p[i][1],a[i])\n    c[p[i][1]]=a[i]\nfor i in range(n):\n    print(c[i+1],end=\" \")\n", "n = int(input())\ninp = lambda : [*list(map(int, input().split()))]\na = sorted(inp(), reverse = True)\nb = inp()\nc = sorted([(i, b[i]) for i in range(n)], key = lambda x : x[1])\nans = [\"\"] * n\nfor i in range(n):\n    ans[c[i][0]] = str(a[i])\nprint(\" \".join(ans))\n\n", "\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nfor i in range(n):\n    c.append([b[i], i])\nc = sorted(c)\na = sorted(a)\np = [0] * n\nfor x in range(n):\n    p[c[x][1]] = a[n-x-1]\nfor i in range(n):\n    print(p[i], end = ' ')", "n = int(input())\na = sorted(list(map(int, input().split())), reverse = True)\nb = list(map(int, input().split()))\nc = sorted([(i, b[i]) for i in range(n)], key = lambda x : x[1])\nres = [0] * n\nfor i in range(n):\n    res[c[i][0]] = a[i]\nprint(*res)\n", "import sys,math,string,bisect\ninput=sys.stdin.readline\nfrom collections import deque\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nn=I()\nl=L()\nm=L()\nx=[]\nfor i in range(n):\n    x.append([-m[i],i])\nx.sort(key=lambda x:x[0])\nx=x[-1::-1]\nl.sort(reverse=True)\nd=[0]*n\nfor i in range(n):\n    d[x[i][1]]=l[i]\nprint(*d)\n\n", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\n# print = stdout.write\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda : map(int, input().split())\nm = int(input())\na = listin()\nb = listin()\nd = defaultdict(list)\nfor i in range(m):\n    d[b[i]].append(i)\nnums = deque(sorted(d.keys()))\na.sort(reverse = True)\na = deque(a)\nans = [0 for i in range(m)]\nwhile nums:\n    while d[nums[0]]:\n        ans[d[nums[0]].pop()] = a.popleft()\n    nums.popleft()\nprint(*ans)", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\n# print = stdout.write\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda : map(int, input().split())\nm = int(input())\na = listin()\nb = listin()\nd = defaultdict(list)\nfor i in range(m):\n    d[b[i]].append(i)\nnums = deque(sorted(d.keys()))\na.sort(reverse = True)\na = deque(a)\nans = [0 for i in range(m)]\nwhile nums:\n    while d[nums[0]]:\n        ans[d[nums[0]].pop()] = a.popleft()\n    nums.popleft()\nprint(*ans)", "import math\n\n\ndef bcof(x, y):\n    a = math.factorial(x)\n    b = math.factorial(y)\n    c = math.factorial(x - y)  # that appears to be useful to get the correct result\n    return a // (b * c)\n\n\ndef F(n, k):\n    return bcof(n + 1, k + 1)\n\n\nclass CodeforcesTask840ASolution:\n    def __init__(self):\n        self.result = ''\n        self.m = 0\n        self.a = []\n        self.b = []\n\n    def read_input(self):\n        self.m = int(input())\n        self.a = [int(x) for x in input().split(\" \")]\n        self.b = [int(x) for x in input().split(\" \")]\n\n    def process_task(self):\n        b = [(i, x) for i, x in enumerate(self.b)]\n        b.sort(key=lambda tup: tup[1])\n        self.a.sort(reverse=True)\n        new_a = [0 for x in range(len(b))]\n        for x in range(len(b)):\n            new_a[b[x][0]] = self.a[x]\n        self.result = \" \".join([str(x) for x in new_a])\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask840ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "from operator import itemgetter\nn, d = int(input()), {}\na, b = sorted(map(int, input().split()), reverse=True), sorted(sorted(enumerate(map(int, input().split())), reverse=True), key=itemgetter(1))\nfor i in range(n):\n    d[b[i][0]] = a[i]\nfor i in range(n):\n    print(d[i], end=' ')\n", "ii = lambda: int(input())\nmi = lambda: list(map(int, input().split()))\nli = lambda: list(mi())\nsi = lambda: input()\nmsi = lambda: list(map(int, stdin.readline().split()))\nlsi = lambda: list(msi())\n\n\nm = int(input())\n \na = list(map(int, input().split()))\nb = list(zip(list(map(int, input().split())), list(range(m))))\n \na.sort(reverse=True)\nb.sort()\n \nc = list(zip((t[1] for t in b), a))\nc.sort()\n \nprint(*(t[1] for t in c))\n", "import sys\n\nnum_n = int(sys.stdin.readline())\nA = [int(x) for x in sys.stdin.readline()[:-1].split(\" \")]\nB = [int(x) for x in sys.stdin.readline()[:-1].split(\" \")]\nB1 = B.copy()\n\nA.sort()\nB.sort()\n\numap = {}\n\nfor num in B:\n\tif num in umap:\n\t\tumap[num].append(A.pop())\n\telse:\n\t\tumap[num] = list([A.pop()])\n\nfor num in B1:\n\tprint(umap[num].pop(), end=' ')"]