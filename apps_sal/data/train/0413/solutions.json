["class Solution:\n    def breakPalindrome(self, palindrome: str) -> str:\n        if len(palindrome) == 1:\n            return ''\n        for i, val in enumerate(palindrome):\n            if val != 'a' and i != len(palindrome) // 2:\n                return palindrome[:i] + 'a' + palindrome[i+1:]\n            elif val == 'a' and i == len(palindrome) - 1:\n                return palindrome[:-1] + 'b'\n", "class Solution:\n    def breakPalindrome(self, s: str) -> str:\n        for i in range(len(s)//2):\n            if s[i]!='a':\n                return s[:i] + 'a' + s[i+1:]\n        if s[:-1]:\n            return s[:-1] + 'b'\n        else:\n            return ''", "class Solution:\n    def breakPalindrome(self, palindrome: str) -> str:\n        for i in range(math.floor(len(palindrome)/2)):\n            if palindrome[i] != 'a':\n                return palindrome[0:i] + 'a' + palindrome[i+1:]\n        if len(palindrome) == 1:\n            return ''\n        else:\n            return palindrome[:-1] + 'b'"]