["import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n for i in range (2,100000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import math\ndef forloop(list,list1):\n r = 1\n for x in list:\n  r *= x\n  for i in list1:\n   if(r%i==0):\n    break;\n return i\nt=int(input())\nwhile(t>0):\n l1=[]\n n=int(input())\n l=list(map(int,input().split()))\n for i in range(2,1000000):\n  l1.append(i*i)\n l1=tuple(l1)\n n1=forloop(l,l1)\n ans=math.sqrt(n1)\n print(int(ans))\n t-=1", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  arr[i]=arr[i]%1000000000000000007\n for i in range (0,n):\n  x=x*arr[i]\n  \n for i in range (2,1000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  arr[i]=arr[i]%1000000007\n for i in range (0,n):\n  x=x*arr[i]\n  \n for i in range (2,1000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import math\ndef forloop(list,list1):\n r = 1\n for x in list:\n  r *= x\n  for i in l1:\n   if(r%i==0):\n    break;\n return i\nt=int(input())\nwhile(t>0):\n l1=[]\n n=int(input())\n l=list(map(int,input().split()))\n for i in range(2,1000000):\n  l1.append(i*i)\n l1=tuple(l1)\n n1=forloop(l,l1)\n ans=math.sqrt(n1)\n print(int(ans))\n t-=1", "import math\nfor i in range(int(input())):\n y=int(input())\n x=list(map(int,input().split()))\n p=1\n for j in x:\n  p=p*j\n \n m=max(x)\n \n r=1\n \n for k in range(2,m):\n  \n  if p%k**2==0:\n   r=k\n   break\n print(r)", "import fractions \n\ndef repeat_factor(n):\n fs = []\n for i in range(2, int(n**0.5) + 1):\n  if n % i == 0:\n   q = n / i;\n   if q % i == 0:\n    return i\n return 1\n\n\nnprobs = int(input())\nfor i in range(nprobs):\n x = input()\n prob = list(map(int, input().split()))\n found = False\n # for i in range(len(prob)):\n #     for j in range(len(prob)):\n #         if (i != j):\n #             hcf = fractions.gcd(prob[i], prob[j])\n #             if hcf > 1:\n #                 print hcf\n #                 found = True\n #                 break\n #     if found:\n #         break\n # if found:\n #     break\n prod = 1\n for i in prob:\n  prod *= i\n # for i in prob:\n #     x = repeat_factor(i)\n #     if x > 1:\n #         print x\n #         break\n x = repeat_factor(prod)\n print(x)\n\n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  arr[i]=arr[i]%1000000007\n for i in range (0,n):\n  x=x*arr[i]\n  x%=1000000007\n  \n for i in range (2,1000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  arr[i]=arr[i]%1000000000000000007\n for i in range (0,n):\n  x=x*arr[i]\n  x%=1000000007\n  \n for i in range (2,1000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "from collections import *\ndef prime(n):\n d=2\n while d*d<=n:\n  while n%d==0:\n   primef.append(d)\n   n=n//d\n  d+=1\n if n>1: primef.append(n)\nfor _ in range(eval(input())):\n primef=[]\n x,prod=eval(input()),1\n m=list(map(int,input().split()))\n for i in m:\n  prime(i)\n for i in primef:\n  if primef.count(i)>=2: break\n print(i)\n", "import math\n\ndef gen_primes(num):\n nonlocal primes\n flag = False\n j = 0\n for i in range(primes[-1]+1, num+1):\n  while primes[j] < math.sqrt(i):\n   if i%primes[j] == 0:\n    flag = True\n    break\n   j += 1\n  if flag:\n   flag = False\n   pass\n  else:\n   primes.append(i)\n\n\ndef divisible(num):\n nonlocal primes, d, divisors\n srt = int(round(math.sqrt(num)))\n if srt <= primes[-1]:\n  for i in primes:\n   if num % (i*i) == 0:\n    d = i\n    return True\n   elif num % i == 0:\n    if divisors.get(i, 0):\n     d = i\n     return True\n    else:\n     divisors[i] = 1\n    \n else:\n  gen_primes(srt)\n  for i in primes:\n   if num % (i*i) == 0:\n    d = i\n    return True\n   elif num % i == 0:\n    if divisors.get(i, 0):\n     d = i\n     return True\n    else:\n     divisors[i] = 1\n\n\nprimes = [2,3,5,7,11]\nfor i in range(eval(input())):\n n = eval(input())\n l = input().strip().split()\n divisors = {}\n d = 0\n for j in range(n):\n  l[j] = int(l[j])\n  check = divisible(l[j])\n  if check:\n   print(d)\n   break\n", "import math\ndef forloop(list):\n r = 1\n for x in list:\n  r *= x\n return r\nt=int(input())\nwhile(t>0):\n l1=[]\n n=int(input())\n l=list(map(int,input().split()))\n for i in range(2,1000000):\n  l1.append(i*i)\n l1=tuple(l1)\n n1=forloop(l)\n for i in l1:\n  if(n1%i==0):\n   break;\n ans=math.sqrt(i)\n print(int(ans))\n t-=1", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  x%=1000000007\n  \n for i in range (2,9000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import math\n\ndef divisorGenerator(n):\n large_divisors = []\n for i in range(2, int(math.sqrt(n) + 1)):\n  if n % i == 0:\n   yield i\n   if i*i != n:\n    large_divisors.append(n / i)\n for divisor in reversed(large_divisors):\n  yield divisor\nt = int(input())\nwhile t>0 :\n n = int(input())\n a = list(map(int,input().split()))\n p = 1\n for i in a:\n  p = p * i\n s = list(divisorGenerator(p))\n\n for j in s:\n  if p % (j**2) ==0 :\n   print(j)\n   break\n t = t - 1 \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,1000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import math\n\nfor i in range(int(input())):\n y=int(input())\n x=list(map(int,input().split()))\n pr=1\n for j in x:\n  pr=pr*j\n #s=min(x)\n m=max(x)\n #m=int(math.sqrt(m))\n #s=int(math.sqrt(s))\n rm=1\n #print s,m\n for k in range(2,m):\n  #print k\n  if pr%k**2==0:\n   rm=k\n   break\n print(rm) \n \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,10000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import math\n\ndef gen_primes(num):\n nonlocal primes\n flag = False\n j = 0\n for i in range(primes[-1]+1, num+1):\n  while primes[j] <= math.sqrt(i):\n   if i%primes[j] == 0:\n    flag = True\n    break\n   j += 1\n  if flag:\n   flag = False\n   pass\n  else:\n   primes.append(i)\n\n\ndef divisible(num):\n nonlocal primes, d, divisors\n srt = int(round(math.sqrt(num)))\n if srt <= primes[-1]:\n  for i in primes:\n   if num % (i*i) == 0:\n    d = i\n    return True\n   elif num % i == 0:\n    if divisors.get(i, 0):\n     d = i\n     return True\n    else:\n     divisors[i] = 1\n    \n else:\n  gen_primes(srt)\n  for i in primes:\n   if num % (i*i) == 0:\n    d = i\n    return True\n   elif num % i == 0:\n    if divisors.get(i, 0):\n     d = i\n     return True\n    else:\n     divisors[i] = 1\n\n\nprimes = [2,3,5,7,11]\nfor i in range(eval(input())):\n n = eval(input())\n l = input().strip().split()\n divisors = {}\n d = 0\n for j in range(n):\n  l[j] = int(l[j])\n  check = divisible(l[j])\n  if check:\n   print(d)\n   break\n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,20000000):\n  if(x%(pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,20000000):\n  if(x%(math.pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,80000000):\n  if(x%(math.pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,20000000):\n  if(x%(math.pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n", "import sys\nimport math\nr=int(input())\nfor v in range (0,r):\n n = int(input())\n x=1\n arr=list(map(int,input().strip().split(\" \")))\n for i in range (0,n):\n  x=x*arr[i]\n  \n  \n for i in range (2,15000000):\n  if(x%(math.pow(i,2))==0):\n   ans1=i\n   break\n \n \n print(ans1) \n"]