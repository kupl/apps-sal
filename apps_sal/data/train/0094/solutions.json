["T = int(input())\nfor test in range(T):\n    n,t = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    res = []\n    j=0\n    for i in a:\n        if(i*2<t):\n            res+=[\"0\"]\n        elif(i*2>t):\n            res+=[\"1\"]\n        else:\n            res.append([\"0\",\"1\"][j])\n            j = 1-j\n    print(\" \".join(res))\n", "t = int(input())\nfor _ in range(t):\n    n, T = map(int, input().split())\n    a = list(map(int, input().split()))\n    white = set()\n    if not T%2 and T//2 in a:\n        halfcount = 0\n        for i in range(len(a)):\n            if a[i] == T//2:\n                if halfcount % 2:\n                    a[i] = 1\n                else:\n                    a[i] = 0\n                halfcount += 1\n            else:\n                if T-a[i] in white:\n                    a[i] = 1\n                else:\n                    white.add(a[i])\n                    a[i] = 0\n    else:\n        for i in range(len(a)):\n            if T-a[i] in white:\n                a[i] = 1\n            else:\n                white.add(a[i])\n                a[i] = 0\n    print(*a)", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n    n,k = MI()\n    a = LI()\n    d = [0]*n\n    c = a.count(k//2)\n    boo = k%2 == 0\n    count = 0\n    for i in range(n):\n        if a[i]<k//2:\n            d[i] = 0\n        elif a[i] == k//2:\n            if not boo:\n                d[i] = 0\n            elif count<c//2:\n                d[i] = 0\n                count+=1\n            else:\n                d[i] = 1\n        else:\n            d[i] = 1\n    print(*d)\n", "from collections import defaultdict\n\nT = int(input())\n\nfor t in range(T):\n    n, T = [int(_) for _ in input().split()]\n    A = [int(_) for _ in input().split()]\n\n    pen_in_c = defaultdict(int)\n    pen_in_d = defaultdict(int)\n\n    answer = []\n    for el in A:\n        if pen_in_d[el] < pen_in_c[el]:\n            answer.append(1)\n            pen_in_d[T - el] += 1\n        else:\n            answer.append(0)\n            pen_in_c[T - el] += 1\n\n    print(' '.join(map(str, answer)))\n", "t = int(input())\nfor _ in range(t):\n    n,T = map(int,input().split())\n    l1 = [int(x) for x in input().split()]\n    current = 0\n    for i in range(n):\n        if T%2==0 and l1[i]==T//2:\n            #print(\"HERE\")\n            if current:\n                l1[i]=0\n                current = 0\n            else:\n                l1[i]=1\n                current = 1\n        else:\n            l1[i]=int(l1[i]>(T//2))\n    print(*l1)", "input=__import__('sys').stdin.readline\nfor _ in range(int(input())):\n\tn,T=map(int,input().split())\n\ts=list(map(int,input().split()))\n\tans=[0]*n\n\tg={} # last ind with sum x\n\tfor i in range(n):\n\t\tif T-s[i] in g:\n\t\t\tans[i]=1-ans[g[T-s[i]]]\n\t\tg[s[i]]=i\n\tprint(*ans)", "for _ in range(int(input())):\n    n, t = list(map(int, input().split()))\n    *arr, = list(map(int, input().split()))\n    flip = 0\n    for i in range(n):\n        if 2 * arr[i] > t:\n            arr[i] = 1\n        elif 2 * arr[i] < t:\n            arr[i] = 0\n        else:\n            arr[i] = flip\n            flip = 1 - flip\n    print(*arr)\n\n\n\n", "from collections import defaultdict\n\n\ndef solve():\n    n, T = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    white = defaultdict(int)\n    black = defaultdict(int)\n    ans = [0]*n\n    for i, x in enumerate(a):\n        if white[T-x] > black[T-x]:\n            black[x] += 1\n            ans[i] = 1\n        else:\n            white[x] += 1\n            ans[i] = 0\n    print(*ans)\n    return\n\n\ndef main():\n    T = int(input())\n    for i in range(T):\n        solve()\n    return\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "t = int(input())\n\nfor case in range(t):\n    n, T = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    halfTticker = False\n    halfT = T / 2\n    white = set()\n\n    for x in a:\n        if x == halfT:\n            print(int(halfTticker), end=' ')\n            halfTticker = not halfTticker\n        elif x in white:\n            print(0, end=' ')\n        elif T - x in white:\n            print(1, end=' ')\n        else:\n            white.add(x)\n            print(0, end=' ')\n\n    print()\n\n", "import sys\nimport math\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n,k = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    \n    alt = 0\n    ans = []\n    for i in range(len(arr)):\n        if k%2==1:\n            if arr[i] < k/2:\n                ans.append(0)\n            else:\n                ans.append(1)\n        else:\n            if arr[i] == k//2:\n                ans.append(alt%2)\n                alt += 1\n            elif arr[i] < k//2:\n                ans.append(0)\n            else:\n                ans.append(1)\n                \n    print(*ans)", "import math\nimport sys\n \nclass Read:\n    @staticmethod\n    def string():\n        return input()\n \n    @staticmethod\n    def int():\n        return int(input())\n \n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n \n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n \n\ndef solve():\n    n, T = Read.list_int()\n    a = Read.list_int()\n\n    tmp = {}\n    res = []\n    for i in a:\n        v = T - i\n        r = '1'\n        if v in tmp:\n            if tmp[v] == '1':\n                r = '0'\n        tmp[i] = r\n        res.append(r)\n\n    print(' '.join(res))\n    \n\n# query_count = 1\nquery_count = Read.int()\nwhile query_count:\n    query_count -= 1\n    solve()", "for _ in range(int(input())):\n    n, t = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n\n    ans = [-1] * n\n\n    if t % 2 == 0:\n        x = t // 2\n        c = arr.count(x)\n\n        c2 = 0\n        for i in range(n):\n            if arr[i] != x:\n                continue\n            if c2 < c // 2:\n                ans[i] = 0\n            else:\n                ans[i] = 1\n            c2 += 1\n\n    for i in range(n):\n        if ans[i] != -1:\n            continue\n        if arr[i] <= t // 2:\n            ans[i] = 0\n        else:\n            ans[i] = 1\n\n    print(*ans)\n", "t = int(input())\nfor _ in range(t):\n    n, u = map(int, input().split())\n    a = list(map(int, input().split()))\n    k=u//2\n    p = [-1 for i in range(n)]\n    if u%2!=0:\n        for i in range(n):\n            if a[i]<=k:\n                p[i]=0\n            else:\n                p[i]=1\n    else:\n        x=0\n        for i in range(n):\n            if a[i]<k:\n                p[i]=0\n            elif a[i]>k:\n                p[i]=1\n            elif a[i]==k:\n                if x==0:\n                    p[i]=0\n                    x=1\n                else:\n                    p[i]=1\n                    x=0\n    print(*p)", "import os\nfrom sys import stdin, stdout\n\nclass Input:\n    def __init__(self):\n        self.lines = stdin.readlines()\n        self.idx = 0\n    \n    def line(self):\n        try:\n            return self.lines[self.idx].strip()\n        finally:\n            self.idx += 1\n    \n    def array(self, sep = ' ', cast = int):\n        return list(map(cast, self.line().split(sep = sep)))\n    \n    def known_tests(self):\n        num_of_cases, = self.array()\n    \n        for case in range(num_of_cases):\n            yield self\n    \n    def unknown_tests(self):\n        while self.idx < len(self.lines):\n            yield self\n\ndef problem_solver():\n    '''\n    \n    '''\n    def solver(inpt):\n        n, T = inpt.array()\n        a = inpt.array()\n        b = []\n        c = 0\n\n        for x in a:\n            if x * 2 > T:\n                b.append(1)\n            elif x * 2 == T:\n                b.append(c & 1)\n                c += 1\n            else:\n                b.append(0)\n        \n        print(*b)\n\n    '''Returns solver'''\n    return solver\n\ntry:\n    solver = problem_solver()\n    for tc in Input().known_tests():\n        solver(tc)\nexcept Exception as e:\n    import traceback\n    traceback.print_exc(file=stdout)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, t = map(int, input().split())\n    alst = list(map(int, input().split()))\n    lst = [[i, a] for i, a in enumerate(alst)]\n    lst.sort()\n    if t % 2 == 0:\n        mid = t // 2\n    else:\n        mid = t / 2\n    ans = [-1 for _ in range(n)]\n    flg = False\n    for i, a in lst:\n        if a < mid:\n            ans[i] = 0\n        elif a > mid:\n            ans[i] = 1\n        elif flg:\n            flg = False\n            ans[i] = 0\n        else:\n            flg = True\n            ans[i] = 1\n    print(*ans)\n    \nfor _ in range(int(input())):\n    main()", "import os\nimport sys\nimport io\n\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline # \u795e\u5947\u5feb\u8bfb\uff0c\u65e0\u6cd5\u8fd0\u884c\u8c03\u8bd5\nGANS = []\n\n# def print(*args): # \u795e\u5947\u5feb\u5199\uff0c\u6700\u540e\u5f97\u5199\u4e0aos.write\n#     nonlocal GANS\n#     for i in args:\n#         GANS.append(f'{i}'.encode())\n\n\nt = int(input())\n\nfor _ in range(t):\n    n,k = map(int,input().split())\n    li = [int(i) for i in input().split()]\n    d1 = {}\n    d2 = {}\n    col = []\n    for i in li:\n        if d1.get(k-i,0) > d2.get(k-i,0):\n            d2[i] = d2.get(i,0) + 1\n            col.append(1)\n        else:\n            d1[i] = d1.get(i,0) + 1\n            col.append(0)\n    print(*col)", "import math\nimport collections\nt=int(input())\nfor w in range(t):\n    n,k=(int(i) for i in input().split())\n    l=[int(i) for i in input().split()]\n    l1=[0]*n\n    c=0\n    for i in range(n):\n        if(l[i]>k/2):\n            l1[i]=1\n        elif(l[i]<k/2):\n            l1[i]=0\n        else:\n            if(c%2==0):\n                l1[i]=0\n                c+=1\n            else:\n                l1[i]=1\n                c+=1\n    print(*l1)", "for _ in range (int(input())):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    s=set()\n    c=0\n    b=[0]*n\n    for i in range (n):\n        if 2*a[i]==k:\n            b[i]=c\n            c=1-c\n        else:\n            if a[i] in s:\n                b[i]=1\n            else:\n                s.add(k-a[i])\n    print(*b)", "import random\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nfor _ in range(int(input())):\n    #n = int(input())\n    n,t= map(int, input().split())\n    a = list(map(int, input().split()))\n    d={}\n    for i in range(n):\n        if a[i] in d:\n            d[a[i]].append(i)\n        else:\n            d[a[i]]=[i]\n    ans=[-1]*n\n    for i in d.keys():\n        if ans[d[i][0]]==-1:\n            if i==t//2:\n                for j in range(len(d[i])//2):\n                    ans[d[i][j]]=0\n                for j in range(len(d[i])//2,len(d[i])):\n                    ans[d[i][j]] = 1\n            else:\n                for j in range(len(d[i])):\n                    ans[d[i][j]]=0\n                if t-i in d:\n                    for j in range(len(d[t-i])):\n                        ans[d[t-i][j]]=1\n    for i in ans:\n        print(i,end=' ')\n    print('')\n"]