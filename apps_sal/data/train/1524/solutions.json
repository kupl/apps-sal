["ways=x=0\nval=10**9\nremi=((10**9)+7)\nt=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split()))\n if t<=100 and n>=1 and k<=val:\n  x=(k-1)**(n-1)\n  ways=k*x\n  ways=ways%remi\n  print(ways)\n  x=ways=0\n else:\n  break", "test = int(input())\nfor i in range (1,test+1):\n a = input().split(\" \")\n n = int(a[0])\n k = int(a[1])\n ans = pow(k-1,n-1,1000000007)\n ans = (ans*k)%1000000007\n print(ans)", "t = int(input());\nfor i in range(0 ,t):\n n = input().split(\" \");\n n1 = int(n[0])\n k = int(n[1])\n ax = pow(k-1,n1-1,1000000007);\n ax = ((ax%1000000007)*(k%1000000007))%1000000007\n print(ax)", "# your code goes here\nimport sys \nt = eval(input())\nfor i in range(0,t):\n a,b = list(map(int, sys.stdin.readline().split(' ')))\n if(b==1):\n  print(0)\n else: \n  ans=b*((b-1)**(a-1))%1000000007\n  print(ans)", "# your code goes here\nt = eval(input())\nfor i in range(0,t):\n a,b=list(map(int,input().split()))\n if(b==1):\n  print(0)\n else: \n  ans=b*((b-1)**(a-1))\n  ans=ans%1000000007\n  print(ans)", "t = eval(input(\"\"))\n \nwhile(t>0):\n n,k = list(map(int,input().split()))\n \n if(k==1):\n  if(n==1):\n   ans=k;\n   print(ans)\n   \n else:\n  ans=k;\n  n=n-1\n  k=k-1\n  p=1\n  while(n>0):\n   p=p*k\n   p=p%1000000007\n   n=n-1\n  \n  \n  ans=(ans*p)%1000000007\n \n  print(ans)\n  \n  \n t=t-1 ", "# cook your code here\nmod=10**9\nmod+=7\nt=input()\nt=int(t)\nwhile(t>0):\n z=input()\n N,K=z.split(' ')\n N=int(N)\n K=int(K)\n t-=1\n if (N==1):\n  print(K)\n elif (K==1):\n  print(0)\n elif (K==2):\n  print(2)\n else:\n  res=pow(K-1,N-1,mod)\n  res*=K\n  res%=mod\n  print(res)", "# Recursive power function that evaluates in O(log n)\ndef power(x, y):\n if y == 0:\n  return 1\n else:\n  temp_val = power(x, y // 2)\n  if y % 2 == 0:\n   return( (temp_val * temp_val) % 1000000007 )\n  else:\n   return( (temp_val * temp_val * x) % 1000000007 )\n\ndef __starting_point():\n # Read number of cases\n T = int(input())\n # Run a loop for all test cases\n for i in range(T):\n  # Read values\n  N, K = list(map(int, input().split()))\n\n  val = K * power(K - 1, N - 1)\n  print(val % 1000000007)\n\n__starting_point()", "# Recursive power function that evaluates in O(log n)\ndef power(x, y):\n if y == 0:\n  return 1\n else:\n  temp_val = power(x, y // 2)\n  if y % 2 == 0:\n   return( (temp_val * temp_val) % 1000000007 )\n  else:\n   return( (temp_val * temp_val * x) % 1000000007 )\n\ndef __starting_point():\n # Read number of cases\n T = int(input())\n # Run a loop for all test cases\n for i in range(T):\n  # Read values\n  N, K = list(map(int, input().split()))\n\n  val = K * power(K - 1, N - 1)\n  print(val % 1000000007)\n\n__starting_point()", "from math import pow\nt=input()\nt=int(t)\nwhile t>0:\n n,k=input().split()\n n=int(n)\n k=int(k)\n p=pow(k-1,n-1)\n tot=(k*p)%(pow(10,9)+7)\n print(int(tot))\n t=t-1", "from math import pow\nt=input()\nt=int(t)\nwhile t>0:\n n,k=input().split()\n n=int(n)\n k=int(k)\n p=pow(k-1,n-1)\n tot=(k*p)%(pow(10,9)+7)\n print(int(tot))\n t=t-1", "def __starting_point():\n # Read number of cases\n T = int(input())\n # Run a loop for all test cases\n for i in range(T):\n  # Read values\n  N, K = list(map(int, input().split()))\n\n  val = K * pow(K - 1, N - 1)\n  print(val % 1000000007)\n\n__starting_point()", "t = eval(input())\n\nfor _ in range(t):\n n, k = list(map(int, input().split()))\n ans = k*((k-1)**(n-1))\n print(ans%1000000007)", "import math\nMOD=1000000007\ndef fast_exp(base,exp):\n res=1;\n while(exp>0):\n  if(exp%2==1):\n   res=(res*base)%MOD\n  base=(base*base)%MOD\n  exp/=2;\n return res\n \nfor t in range(int(input())):\n \n pro=1\n a,b=list(map(int,input().split()))\n #for i in xrange(a):\n pro*=b\n  \n pro*=fast_exp((b-1),(a-1))\n \n print(pro%MOD) \n", "mod = 1000000007\nfor _ in range(int(input())):\n n, k = list(map(int, input().split()))\n x = (k%mod) * pow(k-1,n-1, mod)\n print(x%mod)", "import math\n\nfor t in range(int(input())):\n mod=1000000007\n pro=1\n a,b=list(map(int,input().split()))\n for i in range(a):\n  if(i==0):\n   pro*=b\n  else:\n   pro*=((b-1))\n   if(pro>mod):\n    pro%=mod\n print(pro%mod) \n", "t=int(input())\ndef haha(x,y,p):\n ans = 1 \n x = x % p \n while (y > 0):           \n  if (y % 2!=0):\n   ans = (ans*x) % p; \n  y = y/2;\n  x = (x**2) % p;      \n return ans\nwhile t>0:\n t-=1\n n,k=list(map(int,input().split()))\n m=1000000007\n print(((k%m)*(haha(k-1,n-1,m))%m)%m)", "import sys\nt=int(eval(input(\"\")))\nwhile t:\n m,n=list(map(int,sys.stdin.readline().split()))\n prod=n\n prod*=pow((n-1),(m-1),1000000007)\n print(prod%1000000007)\n t-=1\n", "M=1000000007\ndef expmod_iter(a,b,c):\n x = 1\n while(b>0):\n  if(b&1==1): x = (x*a)%c\n  a=(a*a)%c\n  b >>= 1\n return x%c\n\nt=eval(input())\nwhile t>0:\n t-=1\n n,k=list(map(int,input().split()))\n if n>=2 and k<=1:\n  print(0)\n else:\n  print((k*expmod_iter(k-1,n-1,M))%M)", "import sys\nt=int(eval(input(\"\")))\nwhile t:\n m,n=list(map(int,sys.stdin.readline().split()))\n prod=n\n prod*=(n-1)**(m-1)\n print(prod%1000000007)\n t-=1\n", "import sys\nt=int(eval(input(\"\")))\nwhile t:\n m,n=list(map(int,sys.stdin.readline().split()))\n prod=n\n for i in range(m-1):\n  prod*=n-1\n print(prod%1000000007)\n t-=1\n"]