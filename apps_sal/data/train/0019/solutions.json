["for _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = {}\n    for q in range(d):\n        s[a[q]] = s.get(a[q], 0)+1\n    ans = len(s)\n    for q in range(d, n):\n        if s[a[q-d]] == 1:\n            del s[a[q-d]]\n        else:\n            s[a[q-d]] -= 1\n        s[a[q]] = s.get(a[q], 0)+1\n        ans = min(ans, len(s))\n    print(ans)\n", "Q = int(input())\nfor q in range(Q):\n    n, k, d = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n\n    nums = {}\n    for i in range(d):\n        if arr[i] in nums:\n            nums[arr[i]] += 1\n        else:\n            nums[arr[i]] = 1\n\n    ans = len(nums)\n    for i in range(d, n):\n        if nums[arr[i - d]] == 1:\n            nums.pop(arr[i - d])\n        else:\n            nums[arr[i - d]] -= 1\n\n        if arr[i] in nums:\n            nums[arr[i]] += 1\n        else:\n            nums[arr[i]] = 1\n        ans = min(ans, len(nums))\n\n    print(ans)\n", "for __ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    A = dict()\n    num = 0\n    for i in range(d):\n        if ar[i] in A:\n            A[ar[i]] += 1\n        else:\n            A[ar[i]] = 1\n            num += 1\n    ans = num\n    for j in range(d, n):\n        A[ar[j - d]] -= 1\n        if A[ar[j - d]] == 0:\n            num -= 1\n        if ar[j] in A:\n            if A[ar[j]] == 0:\n                num += 1\n            A[ar[j]] += 1\n        else:\n            A[ar[j]] = 1\n            num += 1\n        ans = min(num, ans)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = dict()\n    for i in range(n):\n        b[a[i]] = 0\n    count = 0\n    for i in range(d):\n        if b[a[i]] == 0:\n            count += 1\n        b[a[i]] += 1\n    \n    ans = count\n    for i in range(n - d):\n        if b[a[i]] == 1:\n            count -=1\n        b[a[i]] -= 1\n        if b[a[i + d]] == 0:\n            count += 1\n        b[a[i + d]] += 1\n        ans = min(ans, count)\n    print(ans)\n", "n=int(input())\nfor i in range(n):\n    n,k,d=list(map(int,input().split()))\n    a=[int(j) for j in input().split()]\n    dv=dict()\n    s=set()\n    mn=n\n    for j in range(n):\n        if j>=d:\n            mn=min(mn,len(s))\n            t=a[j-d]\n            dv[t]-=1\n            if dv[t]==0:\n                s.discard(t)\n        t=a[j]\n        if t in dv:\n            dv[t]+=1\n        else:\n            dv[t]=1\n        s.add(t)\n    mn=min(mn,len(s))\n    print(mn)\n", "t = int(input())\nfor u in range(t):\n    n, d, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    c = set()\n    b = {}\n    ans = 10 ** 9\n    for i in range(min(n, k)):\n        c.add(a[i])\n        if a[i] in b:\n            b[a[i]] += 1\n        else:\n            b[a[i]] = 1\n    i = k\n    ans = min(ans, len(c))\n    while i < n:\n        b[a[i - k]] -= 1\n        if b[a[i - k]] == 0:\n            c.discard(a[i - k])\n        if a[i] in b:\n            b[a[i]] += 1\n        else:\n            b[a[i]] = 1     \n        c.add(a[i])\n        ans = min(ans, len(c))\n        i += 1\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n\n## -------------------------------\n\nt = getInt()\nfor _ in range(t):\n    n, k, d = getVars()\n    a = getList()\n    b = {}\n    for i in range(d):\n        if a[i] not in b:\n            b[a[i]] = 0\n        b[a[i]] += 1\n    res = len(list(b.keys()))\n    res1 = res\n    for i in range(d, n):\n        b[a[i-d]] -= 1\n        if b[a[i-d]] == 0:\n            del b[a[i-d]]\n            res1 -= 1\n        if a[i] not in b:\n            b[a[i]] = 0\n            res1 += 1\n        b[a[i]] += 1     \n        res = min(res, res1)\n    print(res)\n", "from collections import deque\n\nt=int(input())\nfor i in range(t):\n    n,k,dp=[int(x) for x in input().split()]\n    d={}\n    i=0\n    p=deque()\n    cur=0\n    min=k\n    for el in input().split():\n        i+=1\n        if i<=dp:\n            p.append(el)\n            if el in list(d.keys()):\n                d[el]+=1\n            else:\n                d[el]=1\n                cur+=1\n        else:\n            if cur<min:\n                min=cur\n            ##deleting\n            exc=p.popleft()\n            if d[exc]==1:\n                d.pop(exc)\n                cur-=1\n            else:\n                d[exc]-=1\n            ##adding\n            p.append(el)\n            if el in list(d.keys()):\n                d[el]+=1\n            else:\n                d[el]=1\n                cur+=1\n        ##print(d,p)\n    if min>cur:\n        min=cur\n    print(min)\n", "import math\nimport collections\narrK = [0] * 1000050\n\ndef cleanK(q):\n    while len(q):\n        arrK[q.pop()] = 0\n\n\ndef test():\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = math.inf\n    q = collections.deque()\n    sumK = 0\n    for i in range(len(a)):\n        q.append(a[i])\n        if arrK[a[i]] == 0:\n            sumK += 1\n        arrK[a[i]] += 1\n\n        if len(q) > d:\n            var = q.popleft()\n            arrK[var] -= 1\n            if arrK[var] == 0:\n                sumK -= 1\n        if len(q) == d and sumK < ans:\n            ans = sumK\n    cleanK(q)\n    print(ans)\n#\n# def print2d(a):\n#     for i in a:\n#       print(' '.join(list(map(str, i))))\n\nt = int(input())\n\nfor i in range(t):\n    test()", "def main():\n    n, k, d = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    rez = 0\n    rezline = {}\n    for i in range(d):\n        if rezline.get(l[i]) is None:\n            rezline[l[i]] = 0\n            rez += 1\n        rezline[l[i]] += 1\n    rez_p = rez\n    for i in range(d, n):\n        if rezline[l[i-d]] == 1:\n            rez_p -= 1\n        rezline[l[i-d]] -= 1\n        if rezline.get(l[i]) in [0, None]:\n            rez_p += 1\n            rezline[l[i]] = 1\n        else:\n            rezline[l[i]] += 1\n        rez = min(rez, rez_p)\n    print(rez)\n\n\nt = int(input())\nfor i in range(t):\n    main()\n", "t = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    m = dict()\n    for i in range(d):\n        if a[i] not in m:\n            m[a[i]] = 0\n        m[a[i]] += 1\n    ans = len(m)\n    for i in range(n - d):\n        m[a[i]] -= 1\n        if m[a[i]] == 0:\n            m.pop(a[i])\n        if a[i + d] not in m:\n            m[a[i + d]] = 0\n        m[a[i + d]] += 1\n        ans = min(ans, len(m))\n    print(ans)\n", "def check(m):\n    dictsums = dict()\n    i, j = 0, 0\n    dictsums[series[0]] = 1\n    while i < len(series) - 1 and i - j + 1 < d:\n        if series[i + 1] not in dictsums and len(dictsums) == m:\n            while dictsums[series[j]] > 1:\n                dictsums[series[j]] -= 1\n                j += 1\n            dictsums.pop(series[j])\n            dictsums[series[i + 1]] = 1\n            j += 1\n        elif series[i + 1] not in dictsums and len(dictsums) < m:\n            dictsums[series[i + 1]] = 1\n        else:\n            dictsums[series[i + 1]] += 1\n        i += 1\n    if i - j + 1 >= d:\n        return 1\n    else:\n        return 0\n\n\n\n\n\nq = int(input())\nfor i in range(q):\n    n, k, d = map(int, input().split())\n    series = list(map(int, input().split()))\n    L = 0\n    R = k\n    while R - L > 1:\n        m = (R + L) // 2\n        if check(m):\n            R = m\n        else:\n            L = m\n    print(R)", "for i in range(int(input())):\n    a = list(map(int, input().split()))\n    n, k, d = a[0], a[1], a[2]\n    a = list(map(int, input().split()))\n    di = dict()\n    m = 0\n    m2 = 1000000\n    n2 = 0\n    for j in range(len(a)):\n        if n2 < d:\n            if a[j] not in di:\n                di[a[j]] = 1\n                m += 1\n            else:\n                if di[a[j]] == 0:\n                    m += 1\n                di[a[j]] += 1\n            n2 += 1\n        else:           \n            if di[a[j - d]] == 1:\n                di[a[j - d]] = 0\n                m -= 1\n            else:\n                di[a[j - d]] -= 1\n            if a[j] not in di:\n                di[a[j]] = 1\n                m += 1\n            else:\n                if di[a[j]] == 0:\n                    m += 1\n                di[a[j]] += 1\n        if n2 == d and m < m2:\n            m2 = m\n    print(m2)\n", "c = [[0, 0] for i in range(round(1e6+1))]\n\ndef ans(t) :\n    a, k, s = [int(x) for x in input().split()]\n    v = list([int(x) for x in input().split()])\n    y, x, a, m = 0, 0, 0, 1e12\n    for i in range(len(v)) :\n        if c[v[i]][0] != t : c[v[i]] = [t, 0]\n        c[v[i]][1] += 1\n        if c[v[i]][1] == 1 : a += 1\n        if i-y+1 > s :\n            c[v[y]][1] -= 1\n            if c[v[y]][1] == 0 : a -= 1\n            y += 1\n        if a < m and i-y+1 == s : m = a\n    return m\n\nt = int(input())\nfor i in range(t) : print(ans(i))\n", "from collections import deque\nt = int(input())\nfor jfrhg in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    l = deque(a[:d])\n    s = dict()\n    for i in l:\n        if i in s:\n            s[i]+=1\n        else:\n            s[i] = 1\n    minimum = len(list(s.keys()))\n    for i in range(d, n):\n        ref = l.popleft()\n        l.append(a[i])\n        s[ref] -=1\n        if s[ref]<1:\n            del s[ref]\n        if a[i] in s:\n            s[a[i]]+=1\n        else:\n            s[a[i]] = 1\n        if len(list(s.keys()))< minimum:\n            minimum = len(list(s.keys()))\n    print(minimum)\n", "from collections import deque\n\nfor _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = len(set(a[:d]))\n    now = dict()\n    for i in range(d):\n        if a[i] in now:\n            now[a[i]] += 1\n        else:\n            now[a[i]] = 1\n    for i in range(d, n):\n        ans = min(ans, len(now))\n        now[a[i - d]] -= 1\n        if now[a[i - d]] == 0:\n            now.pop(a[i - d])\n        if a[i] in now:\n            now[a[i]] += 1\n        else:\n            now[a[i]] = 1\n    ans = min(ans, len(now))\n    print(ans)\n", "for _ in range(int(input())):\n    _, _, n = list(map(int, input().split()))\n    a = [int(x) for x in input().split()]\n    cnt = dict()\n    for i in a[:n]:\n        cnt[i] = cnt.get(i, 0) + 1\n    mlen = len(cnt)\n    for i in range(n, len(a)):\n        if a[i - n] != a[i]:\n            if cnt[a[i - n]] == 1:\n                del cnt[a[i - n]]\n            else:\n                cnt[a[i - n]] -= 1\n            cnt[a[i]] = cnt.get(a[i], 0) + 1\n            mlen = min(mlen, len(cnt))\n    print(mlen)\n", "t = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    timetable = list(map(int, input().split()))\n    i = 0\n    j = d\n    used = {}\n    for x in range(d):\n        if timetable[x] in list(used.keys()):\n            used[timetable[x]] += 1\n        else:\n            used[timetable[x]] = 1\n    ans = len(used)\n    while j < n:\n        if timetable[i] in list(used.keys()):\n            used[timetable[i]] -= 1\n            if used[timetable[i]] == 0:\n                used.pop(timetable[i])\n        i += 1\n        if timetable[j] in list(used.keys()):\n            used[timetable[j]] += 1\n        else:\n            used[timetable[j]] = 1\n        j += 1\n        ans = min(ans, len(used))\n    print(ans)\n", "for i in range(int(input())):\n    n,k,d = map(int,input().split())\n    a = [int(s) for s in input().split()]\n    s = dict()\n    for j in range(d):\n        if s.get(a[j],0) == 0:\n            s[a[j]] = 1\n        else:\n            s[a[j]] += 1\n    m = len(s)   \n    for j in range(1,n-d+1):\n        if s[a[j-1]] == 1:\n            s.pop(a[j-1])\n        else:\n            s[a[j-1]] -= 1\n        if s.get(a[j+d-1],0) == 0:\n            s[a[j+d-1]] = 1\n        else:\n            s[a[j+d-1]] += 1\n        if len(s) < m:\n            m = len(s)\n    print(m)", "t = int(input())\nfor i in range(t):\n    n, k, d = map(int, input().split())\n    data = list(map(int, input().split()))\n    \n    dd = {}\n    for j in range(d):\n        elem = data[j]\n        if elem in dd:\n            dd[elem] += 1\n        else:\n            dd[elem] = 1\n    m = len(dd)\n    for j in range(d, n):\n        elem = data[j]\n        if elem in dd:\n            dd[elem] += 1\n        else:\n            dd[elem] = 1\n        dd[data[j - d]] -= 1\n        if dd[data[j - d]] == 0:\n            dd.pop(data[j - d])\n        m = min(m, len(dd))\n    print(m)", "t = int(input())\nfor i in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    m = k\n    s = dict()\n    c = 0\n    for j in range(d):\n        if a[j] in s:\n            s[a[j]] += 1\n        else:\n            c += 1\n            s[a[j]] = 1\n    mm = m = len(s)\n    for j in range(d, n):\n        if a[j-d] in s:\n            s[a[j-d]] -= 1\n            if s[a[j-d]] == 0:\n                del s[a[j-d]]\n                m -= 1\n        else:\n            s[a[j]] = 1\n            m += 1\n        if a[j] in s:\n            s[a[j]] += 1\n        else:\n            s[a[j]] = 1\n            m += 1\n        if m < mm:\n            mm = m\n    print(mm)\n\n\n\n", "def solve(n,k,d,a):\n    #if n == d:\n      #  return len(set(a))\n    m = {}\n    s = list(set(a))\n    ans = float(\"inf\")\n    for i in s:\n        m[i] = 0\n    sm = 0\n    for i in range(d):\n        m[a[i]] += 1\n        if m[a[i]] == 1:\n          sm += 1\n    ans = sm\n    #print(m)\n    for i in range(d,n):\n     #   print(m)\n        x = a[i-d]\n        y = a[i]\n      #  print(x,y, i, d)\n        m[x] -= 1\n        if m[x] == 0:\n            sm -= 1\n        if m[y] == 0:\n            sm += 1\n        m[y] += 1\n        ans = min(ans,sm)\n    return ans\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n,k,d = list(map(int,input().split()))\n        a = list(map(int,input().split()))\n        print(solve(n,k,d,a))\n\nmain()\n", "3\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n1, k, d = [int(e) for e in input().split()]\n        a = [int(e) for e in input().split()]\n        s = dict()\n        for e in a[:d]:\n            s[e] = s.get(e, 0) + 1\n        b = len(s)\n        n = b\n        for i in range(d, n1):\n            ai = a[i]\n            aid = a[i-d]\n            s[ai] = s.get(ai,0)+1\n            if s[ai] == 1:\n                n += 1\n            s[aid] -= 1\n            if s[aid] == 0:\n                n -= 1\n            b = min(n, b)\n        print(b)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t=int(input())\nfor q in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    g = {}\n    m=k\n    j=0\n    s=0\n    for i in range(0, n):\n        f=a[i]\n        l=g.get(f, 0)\n        g[f]=l+1\n        j+=1\n        if l==0:\n            s+=1\n        if j>d:\n            vr=g[a[i-d]]\n            g[a[i-d]]-=1\n            j-=1\n            if vr==1:\n                s-=1\n        if j==d:       \n            m=min(m, s)\n    print(m)\n\n", "t=int(input())\nfor i1 in range(t):\n      n,k,d=list(map(int,input().split()))\n      a=list(map(int,input().split()))\n      dic={}\n      r=0\n      for i in range(d):\n            e=a[i]\n            if e in dic:\n                  dic[e]+=1\n            else:\n                  dic[e]=1\n                  r+=1\n      m=r\n      for i in range(1,n-d+1):\n            e=a[i+d-1]\n            if e in dic:\n                  dic[e]+=1\n            else:\n                  dic[e]=1\n                  r+=1\n            e=a[i-1]\n            if dic.get(e)>1:\n                  dic[e]-=1\n            else:\n                  dic.pop(e)\n                  r-=1\n            m=min(m,r)\n      print(m)\n"]