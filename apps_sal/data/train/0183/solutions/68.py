class Solution:

    def maxDotProduct(self, A: List[int], B: List[int]) -> int:
        n = len(A)
        m = len(B)
        dp = [[0] * m for _ in range(n)]
        for i in range(n):
            for j in range(m):
                dp[i][j] = A[i] * B[j]
                if i and j:
                    dp[i][j] += max(dp[i - 1][j - 1], 0)
                if i:
                    dp[i][j] = max(dp[i][j], dp[i - 1][j])
                if j:
                    dp[i][j] = max(dp[i][j], dp[i][j - 1])
        return dp[-1][-1]
    '\n    \n    \n[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n0 0  *  2 3\n[[6, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n\n0 1  *  2 0\n[[6, 6, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n0 2  *  2 -6\n[[6, 6, 6], [0, 0, 0], [0, 0, 0], [0, 0, 0]]\n----------------------\n1 0  *  1 3\n[[6, 6, 6], [6, 0, 0], [0, 0, 0], [0, 0, 0]]\n1 1  *  1 0\n[[6, 6, 6], [6, 6, 0], [0, 0, 0], [0, 0, 0]]\n1 2  *  1 -6\n[[6, 6, 6], [6, 6, 6], [0, 0, 0], [0, 0, 0]]\n----------------------\n2 0  *  -2 3\n[[6, 6, 6], [6, 6, 6], [6, 0, 0], [0, 0, 0]]\n2 1  *  -2 0\n[[6, 6, 6], [6, 6, 6], [6, 6, 0], [0, 0, 0]]\n2 2  *  -2 -6\n[[6, 6, 6], [6, 6, 6], [6, 6, 18], [0, 0, 0]]\n----------------------\n3 0  *  5 3\n[[6, 6, 6], [6, 6, 6], [6, 6, 18], [15, 0, 0]]\n3 1  *  5 0\n[[6, 6, 6], [6, 6, 6], [6, 6, 18], [15, 15, 0]]\n3 2  *  5 -6\n[[6, 6, 6], [6, 6, 6], [6, 6, 18], [15, 15, 18]]\n----------------------\n    \n    \n    \n    \n    \n    \n    \n    [0, 0, 0], \n    [0, 0, 0], \n    [0, 0, 0], \n    [0, 0, 0]\n\n    \n    \n    '
