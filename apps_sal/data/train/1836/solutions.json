["import random\n         \n class RandomizedSet:\n \n     def __init__(self):\n         \"\"\"\n         Initialize your data structure here.\n         \"\"\"\n         self.dict = {}\n         self.list = []\n         \n \n     def insert(self, val):\n         \"\"\"\n         Inserts a value to the set. Returns true if the set did not already contain the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val in self.dict:\n             return False\n         self.dict[val] = len(self.list)\n         self.list.append(val)\n         return True\n         \n \n     def remove(self, val):\n         \"\"\"\n         Removes a value from the set. Returns true if the set contained the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val not in self.dict:\n             return False\n         self.list[self.dict[val]] = self.list[-1]\n         self.dict[self.list[-1]] = self.dict[val]\n         self.list.pop()\n         self.dict.pop(val)\n         return True\n \n     def getRandom(self):\n         \"\"\"\n         Get a random element from the set.\n         :rtype: int\n         \"\"\"\n         return random.choice(self.list)\n \n \n # Your RandomizedSet object will be instantiated and called as such:\n # obj = RandomizedSet()\n # param_1 = obj.insert(val)\n # param_2 = obj.remove(val)\n # param_3 = obj.getRandom()", "import random\n class RandomizedSet:\n \n     def __init__(self):\n         \"\"\"\n         Initialize your data structure here.\n         \"\"\"\n         self.dataMap = {}\n         self.dataList = []\n         \n \n     def insert(self, val):\n         \"\"\"\n         Inserts a value to the set. Returns true if the set did not already contain the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val in self.dataMap:\n             return False\n         else:\n             self.dataMap[val] = len(self.dataList)\n             self.dataList.append(val)\n             return True\n         \n         \n \n     def remove(self, val):\n         \"\"\"\n         Removes a value from the set. Returns true if the set contained the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val in self.dataMap:\n             idx = self.dataMap[val]\n             tail = self.dataList.pop()\n             if idx < len(self.dataList):\n                 self.dataList[idx] = tail\n                 self.dataMap[tail] = idx\n             del self.dataMap[val]\n             return True\n         else:\n             return False\n \n         \n         \n \n     def getRandom(self):\n         \"\"\"\n         Get a random element from the set.\n         :rtype: int\n         \"\"\"\n         return random.choice(self.dataList)\n         \n \n \n # Your RandomizedSet object will be instantiated and called as such:\n # obj = RandomizedSet()\n # param_1 = obj.insert(val)\n # param_2 = obj.remove(val)\n # param_3 = obj.getRandom()", "class RandomizedSet:\n \n     def __init__(self):\n         \"\"\"\n         Initialize your data structure here.\n         \"\"\"\n         self.dic = {}\n         self.l = []\n \n     def insert(self, val):\n         \"\"\"\n         Inserts a value to the set. Returns true if the set did not already contain the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val in self.dic:\n             return False\n         self.l.append(val)\n         self.dic[val] = len(self.l) - 1\n         return True\n         \n \n     def remove(self, val):\n         \"\"\"\n         Removes a value from the set. Returns true if the set contained the specified element.\n         :type val: int\n         :rtype: bool\n         \"\"\"\n         if val not in self.dic:\n             return False\n         self.dic[self.l[-1]] = self.dic[val]\n         self.l[self.dic[val]], self.l[-1] = self.l[-1], self.l[self.dic[val]]\n         self.l.pop()\n         del self.dic[val]\n         return True\n \n     def getRandom(self):\n         \"\"\"\n         Get a random element from the set.\n         :rtype: int\n         \"\"\"\n         return random.choice(self.l)\n \n \n # Your RandomizedSet object will be instantiated and called as such:\n # obj = RandomizedSet()\n # param_1 = obj.insert(val)\n # param_2 = obj.remove(val)\n # param_3 = obj.getRandom()\n"]