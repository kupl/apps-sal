["# cook your dish here\ndef read_i_l(l=False):\n    m = list(map(int, input().strip().split(\" \")))\n    if l:\n        return list(m)\n    else:\n        return m\ndef i():\n    return int(input().strip())\nT = i()\nL = []\n\"\"\"for current in range(T):\n    line = \"\"\n    for i in range(current):\n        line+=str((T-i)%10)\n    for i in range(2*(T-current)-1):\n        line+=str((T-current)%10)\n    for i in range(current-1,-1,-1):\n        line+=str((T-i)%10)\n    L.append(line)\nL += L[-2::-1]\"\"\"\n\nif T >= 1:\n    L = [\"1\"]\n\nfor i in range(2,T+1):\n    nL = [str(i)+(2*i-2)*(\" \"+str(i))]\n    for l in L:\n        nL.append(str(i)+\" \"+l+\" \"+str(i))\n    nL.append(str(i)+(2*i-2)*(\" \"+str(i)))\n    L = nL\nfor l in L:\n    print(l)\n", "# cook your dish here\nnum = int(input())\n\nmat = [[-1 for i in range(num*2 -1)]for j in range(num*2 -1)]\ncs = 0\nrs = 0\n\nre = len(mat)-1\nce = len(mat)-1\n\n\nwhile num:\n\n    t = num*2 -1\n\n    for i in range(cs,ce+1):\n        mat[rs][i] = num\n        mat[re][i] = num\n\n    for j in range(rs,re):\n        mat[j][cs] = num\n        mat[j][ce] = num\n\n    num -= 1\n    rs += 1\n    cs += 1\n    re -= 1\n    ce -= 1\n\n\n\n\n\nfor i in mat:\n    print(*i)\n\n\n", "# Python3 Program to print rectangular \n# inner reducing pattern \nMAX = 1000\n\n# function to Print pattern \ndef prints(a, size): \n\tfor i in range(size): \n\t\tfor j in range(size): \n\t\t\tprint(a[i][j], end = ' ')\n\t\tprint() \n\n# function to compute pattern \ndef innerPattern(n): \n\t\n\t# Pattern Size \n\tsize = 2 * n - 1\n\tfront = 0\n\tback = size - 1\n\ta = [[0 for i in range(MAX)] \n\t\t\tfor i in range(MAX)] \n\twhile (n != 0): \n\t\tfor i in range(front, back + 1): \n\t\t\tfor j in range(front, back + 1): \n\t\t\t\tif (i == front or i == back or\n\t\t\t\t\tj == front or j == back): \n\t\t\t\t\ta[i][j] = n \n\t\tfront += 1\n\t\tback -= 1\n\t\tn -= 1\n\tprints(a, size); \n\n# Driver code \n\n# Input \nn = int(input())\n\n# function calling \ninnerPattern(n) \n\n# This code is contributed \n# by sahishelangia \n", "# cook your dish here\ndef printGift(n):\n    dim = 2*n-1\n    start = 0\n    end = dim-1\n    a = [[0 for i in range(10000)]for i in range(10000)]\n    while n != 0:\n        for i in range(start,end+1):\n            for j in range(start,end+1):\n                if i == start or i == end or j == start or j == end:\n                    a[i][j] = n \n\n        start += 1\n        end -= 1\n        n -= 1\n    \n    for i in range(dim):\n        for j in range(dim):\n            print(a[i][j],end=\" \")\n        print()\n\n\n\ndef __starting_point():\n    n = int(input())    \n    printGift(n)\n__starting_point()", "def pattern(n) : \n    s=2*n-1\n    for i in range(0, (s//2)+1):  \n        m = n  \n        for j in range(0, i):  \n            print(m ,end= \" \" ) \n            m-=1\n        for k in range(0, s - 2 * i): \n            print(n-i ,end= \" \" ) \n        m = n - i + 1\n        for l in range(0, i):  \n            print(m ,end= \" \" )  \n            m+=1\n        print(\"\")  \n    for i in range(s//2-1,-1,-1):  \n        m = n  \n        for j in range(0, i): \n            print(m ,end= \" \" ) \n            m-=1\n        for k in range(0, s - 2 * i): \n            print(n-i ,end= \" \" ) \n        m = n - i + 1\n        for l in range(0, i):  \n            print(m ,end= \" \" )  \n            m+=1\n        print(\"\")  \ndef __starting_point(): \n    n = int(input())\n    pattern(n)  \n__starting_point()", "# cook your dish here\nn=int(input())\nif(n==0):\n    print()\n    \nelif(n==1):\n    print(1)\nelif(n==2):\n    print(2,2,2)\n    print(2,1,2)\n    print(2,2,2)\nelse:\n    l=[i for i in range(1,n+1)]\n    a=[]\n    for i in range(2*n-1):\n        a1=[]\n        for i in range(2*n-1):\n            a1.append(0)\n        a.append(a1)\n    col1=0\n    coln=2*n-2\n    row1=0\n    rown=2*n-2\n    c=n\n    while(True):\n        for i in range(2*n-1):\n            if(a[i][col1]==0):\n                a[i][col1]=c\n        for i in range(2*n-1):\n            if(a[i][coln]==0):\n                a[i][coln]=c\n        for i in range(2*n-1):\n            if(a[row1][i]==0):\n                a[row1][i]=c\n        for i in range(2*n-1):\n            if(a[rown][i]==0):\n                a[rown][i]=c\n        c-=1\n        if(c==0):\n            break\n        col1+=1\n        coln-=1\n        row1+=1\n        rown-=1\n    for i in a:\n        print(*i)\n                \n        \n        \n", "n = int(input())\r\nl = n * 2 - 1\r\nfor i in range(l):\r\n    for j in range(l):\r\n        mins = min(i, j)\r\n        if mins >= l - i:\r\n            mins = l - i - 1\r\n        mins = min(mins, l - j - 1)\r\n        print(n - mins, end= \" \")\r\n    print()\r\n", "n=int(input())\nk=n\nm=0\nt=0\nd=2*n-2\nfor i in range(n):\n    l=i+1\n    k=n\n    for j in range(i+1):\n        print(k, end=\" \")\n        k-=1\n    g=d-m\n    while(g-t>0):\n        print(k+1, end=\" \")\n        g-=1\n    h=m\n    k+=2\n    while(h>0):\n        print(k, end=\" \")\n        h-=1\n        k+=1\n    m+=1\n    t+=1\n    print()\nk=n-1\nt=1\nm-=1\nfor i in range(n-1):\n    l=k-i\n    d=k+1\n    for j in range(l, 0, -1):\n        print(d, end=\" \")\n        d-=1\n    f=t\n    while(f>0):\n        print(d+1, end=\" \")\n        f-=1\n    b=d+1\n    v=m\n    while(v>0):\n        print(b, end=\" \")\n        v-=1\n        b+=1\n    t+=2\n    m-=1\n    print()", "# cook your dish here\nn = int(input())\nval = (2*n)-1\nx =2\n\nfor i in range(val):\n    k = n+1\n    h = -1\n    count = 0\n    for j in range(val):\n        if i < n:\n            if h < i:\n                h += 1\n                k -= 1\n                print(k, end=' ')\n                if h == i:\n                    count = 1\n                    val1 = (2*k)-1\n                \n            elif (count > 0) and (count < val1):\n                count += 1\n                print(k, end=' ')\n                \n            else:\n                k += 1\n                print(k, end=' ')\n        \n        else:\n            if (h < i) and (k != x) and (count == 0):\n                h += 1\n                k -= 1\n                print(k, end=' ')\n                if k == x:\n                    count = 1\n                    val1 = (2*x) - 1\n                    \n            elif count < val1:\n                count += 1\n                print(k, end=' ')\n                \n            else:\n                k += 1\n                print(k, end=' ')\n                \n    if i >= n:\n        x += 1\n    print()\n\n    \n", "# cook your dish here\nn=int(input())\nfor i in range(n,0,-1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()\nfor i in range(2,n+1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()", "# cook your dish here\nn=int(input())\nfor i in range(n,0,-1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()\nfor i in range(2,n+1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()", "n=int(input())\nfor i in range(n,0,-1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()\nfor i in range(2,n+1):\n    k=n\n    j=1\n    while j<=2*n-1:\n        print(k,end=\" \")\n        j+=1\n        if i<k:\n            k-=1\n        if(i==k):\n            for l in range(2*k-1):\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                j+=1\n            k+=1\n            while k!=i:\n                if j>2*n-1:\n                    break\n                print(k,end=\" \")\n                k+=1\n                j+=1\n    print()", "n = int(input())\r\nl = [[1],]\r\nif n == 1:\r\n    pass\r\nelse:\r\n    i = 2\r\n    while i <= n:\r\n        l1 = [i for j in range(2*i-3)]\r\n        l.insert(0,l1)\r\n        for j in l:\r\n            j.append(i)\r\n            j.insert(0,i)\r\n        i += 1\r\nfor i in l:\r\n    print(*i)\r\nfor i in range(len(l)-2,-1,-1):\r\n    print(*l[i])", "n=int(input())\r\nfor i in range(n,0,-1):\r\n    k=n\r\n    j=1\r\n    while j<=2*n-1:\r\n        print(k,end=\" \")\r\n        j+=1\r\n        if i<k:\r\n            k-=1\r\n        if(i==k):\r\n            for l in range(2*k-1):\r\n                if j>2*n-1:\r\n                    break\r\n                print(k,end=\" \")\r\n                j+=1\r\n            k+=1\r\n            while k!=i:\r\n                if j>2*n-1:\r\n                    break\r\n                print(k,end=\" \")\r\n                k+=1\r\n                j+=1\r\n    print()\r\nfor i in range(2,n+1):\r\n    k=n\r\n    j=1\r\n    while j<=2*n-1:\r\n        print(k,end=\" \")\r\n        j+=1\r\n        if i<k:\r\n            k-=1\r\n        if(i==k):\r\n            for l in range(2*k-1):\r\n                if j>2*n-1:\r\n                    break\r\n                print(k,end=\" \")\r\n                j+=1\r\n            k+=1\r\n            while k!=i:\r\n                if j>2*n-1:\r\n                    break\r\n                print(k,end=\" \")\r\n                k+=1\r\n                j+=1\r\n    print()", "n=int(input())\r\na=[]\r\nsize=(2*n)-1\r\nb=[n]*size\r\nsize-=2\r\ncurr=n-1\r\na.append(b)\r\nfor i in range(n-1):\r\n    c=b.copy()\r\n    c[i+1:i+1+size]=[curr]*size\r\n    a.append(c)\r\n    b=c.copy()\r\n    curr-=1\r\n    size-=2\r\nfor i in range(len(a)):\r\n    print(*a[i])\r\nfor i in range(len(a)-2,-1,-1):\r\n    print(*a[i])", "# cook your dish here\nn = int(input())\nif n == 0:\n    print(0)\nelse:  \n    l = [[0 for i in range(2*n-1)] for j in range(2*n-1)]\n    for i in range(1,2*n):\n        k = []\n        for j in range(1,2*n):\n            d = max(abs(i-n),abs(j-n))\n            k.append(d+1)\n        print(*k)    \n", "n=int(input())\ntemp=[n for i in range(2*n-1)]\narr=[]\nfirstelement=temp[:]\narr.append(firstelement)\nfor i in range(1,n):\n    temp[i:-i]=[n-i for j in range(len(temp[i:-i]))]\n    ttemp=temp[:]\n    arr.append(ttemp)\nfor i in range(len(arr)-2,0,-1):\n    appendtemp=arr[i][:]\n    arr.append(appendtemp)\narr.append(arr[0])\nfor i in arr:\n    for j in i:\n        print(j,end=\" \")\n    print(\"\\n\")", "# cook your dish here\nn = int(input())\nfor i in range(2*n-1):\n    a = n\n    if i < n:\n        for j in range(2*n-1):\n            print(a, end = ' ')\n            if i > j:\n                a = a - 1\n            elif i+j >= 2*n-2:\n                a = a + 1\n    elif i >= n:\n        for j in range(2*n-1):\n            print(a, end = ' ')\n            if i+j < 2*n-2:\n                a = a - 1\n            elif j >= i:\n                a = a + 1\n    print()", "n=int(input())\r\nleng=2*n-1\r\nfor row in range(0,leng):\r\n    for col in range(0,leng):\r\n        mini=row if row<col else col\r\n        mini=mini if mini<leng-row else leng-row-1\r\n        mini=mini if mini<leng-col else leng-col-1\r\n        print(n-mini,end=\" \")\r\n    print(\"\")", "n = int(input())\nle = 2*n-1\nfor i in range(le):\n    for j in range(le):\n        print(n- min(i,j,le-1-i,le-1-j),end=' ')\n    print()\n", "def replace(l,key,i,j):\r\n    for k in range(i,j+1):\r\n        l[k]=str(key)\r\nn=int(input())\r\ns=str(n)\r\ni=0\r\nj=n*2-2\r\nkey=n\r\nm=[]\r\nl=((n*2)-1)*s.split()\r\nfor i in range(int((n*2-2)/2)+1):\r\n    replace(l,key,i,j)\r\n    key-=1\r\n    j-=1\r\n    m.append(' '.join(l))\r\nfor j in range(n-2,-1,-1):\r\n    m.append(m[j])\r\nfor p in m:\r\n    print(p)\r\n    \r\n\r\n                       \r\n                       \r\n", "# cook your dish here\nn=int(input())\n\ndef mini(a,b,n):\n    if a<n and b<n:\n        return min(a,b)\n    elif a>=n and b<n:\n        return min(2*n-2-a,b)\n    elif a<n and b>=n:\n        return min(a,2*n-2-b)\n    elif a>=n and b>=n:\n        return min(2*n-2-a,2*n-2-b)\n        \n\nfor i in range(0,2*n-1):\n    for j in range(0,2*n-1):\n        temp = n - mini(i,j,n)\n        print(temp,end=' ')\n    print(\"\")", "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return list(map(int, inp().split()))\ndef smp(): return list(map(str, inp().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n    \nn = int(inp())\nt = False\nk = 0\nml = [str(n) for i in range(2*n-1)]\nwhile(k>0 or not t):\n    k += -1 if t else 1\n    print(\" \".join(ml))\n    for i in range(k, 2*n-1-k):\n        ml[i] = str(n-k)\n    if k==n-1: t = True\nprint(\" \".join(ml))\n    \n\n", "try:\r\n    num = int(input())\r\n    \r\n    MAX = 1000\r\n    def prints(a, size):  \r\n        for i in range(size):  \r\n            for j in range(size): \r\n                print(a[i][j], end = \" \") \r\n            print() \r\n    def innerPattern(n):   \r\n        size = 2 * n - 1\r\n        front = 0\r\n        back = size - 1\r\n        a = [[0 for i in range(MAX)]for i in range(MAX)] \r\n        while (n != 0):  \r\n            for i in range(front, back + 1): \r\n                for j in range(front, back + 1): \r\n                    if (i == front or i == back or j == front or j == back): \r\n                        a[i][j] = n \r\n            front += 1\r\n            back -= 1\r\n            n -= 1\r\n        prints(a, size)\r\n    \r\n    \r\n    innerPattern(num)\r\nexcept:\r\n    pass\r\n\r\n\r\n", "# cook your dish here\nN = int(input())\nfor i in range(1, N + 1):  \n    for j in range(1, N + 1):  \n        min = i if i < j else j  \n        print(N - min + 1, end = \" \")\n    for j in range(N - 1, 0, -1):  \n        min = i if i < j else j  \n        print(N - min + 1, end = \" \") \n    print() \nfor i in range(N - 1, 0, -1):  \n    for j in range(1, N + 1):  \n        min = i if i < j else j  \n        print(N - min + 1, end = \" \") \n    for j in range(N - 1, 0, -1):  \n        min = i if i < j else j  \n        print(N - min + 1, end = \" \") \n    print() "]