["def game(n,l,p):\n    if(len(l)==0):\n        return 0\n    l.sort()\n    if(len(l)>=1 and p<l[0]):\n        return 0\n    l.sort()\n    c=0\n    \n    \n    ma=set()\n    ma.add(0)\n    while(len(l)):\n        if(p>=l[0]):\n            p-=l[0]\n            \n            c+=1\n            ma.add(c)\n            l=l[1:]\n        else:\n            if(c>0):\n                c-=1\n                ma.add(c)\n                p+=l[-1]\n                l=l[:-1]\n            else:\n                return max(ma)\n    return max(ma)\nn=int(input())\nl=list(map(int,input().split()))\np=int(input())\nprint(game(n,l,p))", "n =int(input())\r\nhealth = list(map(int,input().split()))\r\ninitial = int(input())\r\nif n>1:\r\n    health.sort()\r\npoints =0\r\nmxpts = 0\r\ni,j = 0,n-1\r\nwhile i<=j and i<n and j>=0:\r\n    if health[i]<=initial:\r\n        points +=1\r\n        mxpts = max(points,mxpts)\r\n        initial -= health[i]\r\n        i += 1\r\n    else:\r\n        if points > 0:\r\n            initial += health[j]\r\n            j -= 1\r\n            points -= 1\r\n        else:\r\n            break\r\n    \r\nprint(mxpts)", "def game(n,l,p):\n    if(len(l)==0):\n        return 0\n    l.sort()\n    if(len(l)>=1 and p<l[0]):\n        return 0\n    l.sort()\n    c=0\n    \n    \n    ma=set()\n    ma.add(0)\n    while(len(l)):\n        if(p>=l[0]):\n            p-=l[0]\n            \n            c+=1\n            ma.add(c)\n            l=l[1:]\n        else:\n            if(c>0):\n                c-=1\n                ma.add(c)\n                p+=l[-1]\n                l=l[:-1]\n            else:\n                return max(ma)\n    return max(ma)\n            \n            \n            \n        \n        \nn=int(input())\nl=list(map(int,input().split()))\np=int(input())\nprint(game(n,l,p))\n\n   \n", "n =int(input())\r\nhealth = list(map(int,input().split()))\r\ninitial = int(input())\r\nif n>1:\r\n    health.sort()\r\npoints =0\r\nmxpts = 0\r\ni,j = 0,n-1\r\nwhile i<j and i<n and j>=0:\r\n    if health[i]<=initial:\r\n        points +=1\r\n        mxpts = max(points,mxpts)\r\n        initial -= health[i]\r\n        i += 1\r\n    else:\r\n        if points > 0:\r\n            initial += health[j]\r\n            j -= 1\r\n            points -= 1\r\n        else:\r\n            break\r\n    \r\nprint(mxpts)", "n =int(input())\r\nhealth = list(map(int,input().split()))\r\ninitial = int(input())\r\nif n>1:\r\n    health.sort()\r\npoints =0\r\nmxpts = 0\r\ni,j = 0,n-1\r\nwhile i<j and i<n and j>=0:\r\n    if health[i]<=initial:\r\n        points +=1\r\n        initial -= health[i]\r\n        i += 1\r\n    else:\r\n        if points > 0:\r\n            initial += health[j]\r\n            j -= 1\r\n            points -= 1\r\n        else:\r\n            break\r\n    mxpts = max(points,mxpts)\r\nprint(mxpts)", "n=int(input())\r\narr=list(map(int,input().split()))\r\nh=int(input())\r\narr.sort()\r\nans=0\r\ni=0\r\nif n==1 and h>=arr[0]:\r\n    print(1)\r\n    return\r\nwhile(len(arr)!=0):\r\n    if arr[i]>h and len(arr)>1:\r\n        h+=arr[-1]\r\n        ans-=1\r\n        del arr[-1]\r\n    elif len(arr)==1:\r\n        break\r\n    h-=arr[i]\r\n    del arr[i]\r\n    ans+=1\r\nprint(max(ans,0))", "n=int(input())\r\narr=list(map(int,input().split()))\r\nh=int(input())\r\narr.sort()\r\nans=0\r\ni=0\r\nwhile(len(arr)!=0):\r\n    if arr[i]>h and len(arr)>1:\r\n        h+=arr[-1]\r\n        ans-=1\r\n        del arr[-1]\r\n    elif len(arr)==1:\r\n        break\r\n    h-=arr[i]\r\n    del arr[i]\r\n    ans+=1\r\nprint(max(ans,0))", "from sys import *\ninput=stdin.readline\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\np=int(input())\nc=0\ni=0\nwhile(i<n):\n    if(l[i]<=p):\n        c=c+1\n        p=p-l[i]\n        i=i+1\n    else:\n        if(c>0):\n            if(p+l[n-1]>=l[i]):\n                p=p+l[n-1]-l[i]\n                n=n-1\n                i=i+1\n        else:\n            break\nprint(c)\n", "n = int(input())\r\nhealth = sorted((map(int, input().split())))\r\nlaser = int(input())\r\n\r\nleft, right = 0, len(health) - 1\r\nans = 0\r\n\r\nwhile left <= right:\r\n    if health[left] <= laser:\r\n        laser -= health[left]\r\n        ans += 1\r\n        left += 1\r\n    else:\r\n        if ans == 0 or left >= right - 1:\r\n            break\r\n        laser += health[right]\r\n        ans -= 1\r\n        right -= 1\r\n\r\nprint(ans)", "n = int(input())\r\nhealth = sorted((map(int, input().split())))\r\nlaser = int(input())\r\n\r\nleft, right = 0, len(health) - 1\r\nans = 0\r\n\r\nwhile left <= right:\r\n    if health[left] <= laser:\r\n        laser -= health[left]\r\n        ans += 1\r\n        left += 1\r\n    else:\r\n        if ans == 0 or left + 1 == right:\r\n            break\r\n        laser += health[right]\r\n        ans -= 1\r\n        right -= 1\r\n\r\nprint(ans)", "n = int(input())\r\nhealth = sorted((map(int, input().split())))\r\nlaser = int(input())\r\n\r\nleft, right = 0, len(health) - 1\r\nans = 0\r\n\r\nwhile left <= right:\r\n    if health[left] <= laser:\r\n        laser -= health[left]\r\n        ans += 1\r\n        left += 1\r\n    else:\r\n        if ans == 0 or left + 1 == right:\r\n            break\r\n        laser += health[right]\r\n        ans -= 1\r\n        right -= 1\r\n\r\nprint(ans)", "n=int(input())\nn-=1\nl=list(map(int,input().split()))\nx=int(input())\nc=0\nm=0\nz=0\ni=0\nl.sort()\nwhile(i<n):\n    if l[i]<=x:\n        c+=1 \n        x=x-l[i]\n        i+=1\n    elif c>=1:\n        c-=1 \n        x=x+l[n]\n        n-=1\n    if m<c:\n        m=c\nprint(m)    ", "n=int(input())\nn-=1\nl=list(map(int,input().split()))\nx=int(input())\nc=0\nm=0\nz=0\ni=0\nl.sort()\nwhile(i<n):\n    if l[i]<x:\n        c+=1 \n        x=x-l[i]\n        i+=1\n    elif c>=1:\n        c-=1 \n        x=x+l[n]\n        n-=1\n    if m<c:\n        m=c\nprint(m)    ", "crystel=int(input())\r\ncry_val=list(map(int,input().split()))\r\nlaser=int(input())\r\npoint,iterr=0,0\r\ncount=1\r\npoint_mx=[0]\r\ncry_val.sort()\r\nwhile count<=crystel:\r\n    #print(point,laser)\r\n    if cry_val[iterr]<=laser:\r\n       point+=1\r\n       point_mx.append(point)\r\n       laser-=cry_val[iterr]\r\n       iterr+=1\r\n       count+=1\r\n       \r\n    else:\r\n        laser+=cry_val[-1]\r\n        cry_val.remove(cry_val[-1])\r\n        point-=1\r\n        count+=1\r\n    \r\n#print(cry_val)   \r\nprint(max(point_mx))\r\n        \r\n", "try:\n    n=int(input())\n    li=list(map(int,input().split()))\n    l=int(input())\n    p=0\n    m=0\n    k=len(li)-1\n    li.sort()\n    i=0\n    while(i<=k):\n        if l>=li[i]:\n            l-=li[i]\n            p+=1\n            i+=1\n            if m<p:\n                m=p\n        else:\n            if p>0:\n                l+=li[k]\n                p-=1\n                li.pop(k)\n                k-=1\n            else:\n                break\n    print(m)\nexcept:\n    pass", "n=int(input())\nn-=1\nl=list(map(int,input().split()))\nx=int(input())\nc=0\nm=0\nz=0\ni=0\nl.sort()\nwhile(i<n):\n    if l[i]<x:\n        c+=1 \n        x=x-l[i]\n        i+=1\n    elif c>1:\n        c-=1 \n        x=x+l[n]\n        n-=1\n    if m<c:\n        m=c\nprint(m)    ", "n=int(input())\r\narr=list(map(int,input().split()))\r\narr.sort()\r\n\r\np=int(input())\r\npt=0\r\nmaxx=[0]\r\ni=0\r\nct=1\r\nwhile ct<=n:\r\n    #print(p,pt)\r\n    if  arr[i]<=p:\r\n       pt+=1\r\n       maxx.append(pt)\r\n       p-=arr[i]\r\n       i+=1\r\n       ct+=1\r\n    else:\r\n        p+=arr[-1]\r\n        arr.remove(arr[-1])\r\n        pt-=1\r\n        ct+=1\r\n#print(arr)   \r\n        \r\nprint(max(maxx))\r\n        \r\n", "n = int(input())\n\na = list(map(int,input().split()))\nh = int(input())\na.sort()\np = 0\nmp = 0\n\nl = n-1\nflag = True\nc = 0\n\nfor x in a:\n    while x>h and c<l:\n        if p>0:\n            p = p-1\n            h = h+a[l]\n            del a[l]\n            l = l-1\n        else:\n            flag = False\n            break\n    \n    if x<= h and flag == True:\n        c = c+1\n        h = h-x\n        p = p+1\n        if p>mp:\n            mp = p\n    else:\n        break\n    \nprint(mp)", "crystals =  int(input())\nli = list(map(int,input().split()))\na = li.sort()\npoints = 0\nhealth = int(input())\npointer = -1\nfor i in range(len(li)):\n        if health >= li[i]:\n            health = health - li[i]\n            points += 1\n            li[i] = 0\n        else:\n            if points >=1 and li[pointer] !=0:\n                points -= 1\n                health += li[pointer]\n                pointer -= 1\n                if health >= li[i]:\n                    health = health - li[i]\n                    points += 1\n                    li[i] = 0\n            else:\n                break\nprint(points)\n            \n", "# cook your dish here\nn = int(input().strip())\nl = [int(x) for x in input().strip().split()]\np = int(input().strip())\n\nl.sort()\n\nleft=0\nright=n-1\nmaxo=0\ncur=0\nwhile(left<=right):\n    if(p>=l[left]):\n        p-=l[left]\n        left+=1\n        cur+=1\n        maxo=max(maxo,cur)\n    elif(cur>0):\n        p+=l[right]\n        right-=1\n        cur-=1\n    else:\n        break    \n\nprint(maxo)\n"]