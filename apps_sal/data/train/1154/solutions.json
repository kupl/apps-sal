["try:\n\tn=int(input())\n\tx=[*list(map(int, input().split()))]\n\ty=[*list(map(int, input().split()))]\n\tfor i in y:\n\t\td=x.count(i)-y.count(i)\n\t\tif d!=0:\n\t\t\tprint(i)\n\t\t\tbreak\nexcept: pass\n", "n=int(input())\nl1=list(map(int,input().split()))\nl2=list(map(int,input().split()))\np=1\nl1=sorted(l1)\nl2=sorted(l2)\nfor i in range(len(l1)):\n    if l1[i]==l2[i]:\n        continue \n    else:\n        print(l2[i])\n        p=0\n        break\nif p:\n    print(l2[-1])\n    \n", "t = int(input())\narr1 = list(map(int,input().split()))\narr2 = list(map(int,input().split()))\n\n#arr1.sort()\n#arr2.sort()\n\n\nprint(sum(arr2)-sum(arr1))\n          \n#print(ans)               \n", "n=int(input())\nl1=list(map(int,input().split()))\nl2=list(map(int,input().split()))\np=1\nl1=sorted(l1)\nl2=sorted(l2)\nfor i in range(len(l1)):\n    if l1[i]==l2[i]:\n        continue \n    else:\n        print(l2[i])\n        p=0\n        break\nif p:\n    print(l2[-1])\n    \n", "# cook your dish here\n\n\n\n\ndef main():\n    N= int(input())\n    Numbers = list(map(int,input().split()))\n    NumbersG = list(map(int,input().split()))\n    n1 = [0 for i in range(1001)]\n    for i in NumbersG:\n    \tn1[i] +=1\n    for i in Numbers:\n    \tn1[i] -=1\n    for i in range(len(n1)):\n    \tif n1[i] != 0:\n    \t\tprint(i)\n    \t\tbreak    \t\n\ndef __starting_point():\n\tmain()\n# cook your dish here\n\n__starting_point()", "# cook your dish here\n\n\n\n\ndef main():\n    N= int(input())\n    Numbers = list(map(int,input().split()))\n    NumbersG = list(map(int,input().split()))\n    n1 = [0 for i in range(1001)]\n    for i in NumbersG:\n    \tn1[i] +=1\n    for i in Numbers:\n    \tn1[i] -=1\n    for i in range(len(n1)):\n    \tif n1[i] != 0:\n    \t\tprint(i)\n    \t\tbreak    \t\n\ndef __starting_point():\n\tmain()\n# cook your dish here\n\n__starting_point()", "# cook your dish here\ndef amongus(n,f,d):\n    for i in range(n):\n        if f[i]!=d[i]:\n            return d[i]\n    return d[-1]\n    \ndef __starting_point():\n    n=int(input())\n    f=list(map(int,input().strip().split()))\n    d=list(map(int,input().strip().split()))\n    f.sort()\n    d.sort()\n    print(amongus(n,f,d))\n\n__starting_point()", "# cook your dish\na=input()\nb=sorted(input().split())\nc=sorted(input().split())\nf=0\nfor i in range(0,len(b)):\n    if c[i]!=b[i]:\n        print(c[i])\n        f=1 \n        break\nif f==0:\n    print(c[-1])", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\nbrr=list(map(int,input().split()))\nprint(sum(brr)-sum(arr))\n", "n=int(input())\r\nc=list(map(int, input().split()))\r\nd=list(map(int, input().split()))\r\nprint(sum(d)-sum(c))", "# cook your dish here\nk = int(input())\nact_name = list(map(int, input().split()))\nimposter = list(map(int, input().split()))\nnames = [0 for i in range(1001)]\nfor num in act_name:\n    names[num] += 1\nfor num in imposter:\n    if(names[num] == 0):\n        ans = num\n    else:\n        names[num] -= 1\nprint(ans)\n", "# cook your dish here\nfrom collections import Counter\nn=int(input())\n\narr=[int(x) for x in input().split()]\narr2=[int(x) for x in input().split()]\n\nprint(sum(arr2)-sum(arr))\n\n", "p = int(input())\nl = list(map(int,input().split()))\nm = list(map(int,input().split()))\nb = sum(l)\nc = sum(m)\nprint(abs(b-c))\n", "n=int(input())\r\nfrnd=[int(x) for x in input().split()]\r\ntot=[int(x) for x in input().split()]\r\nfrnd.sort()\r\ntot.sort()\r\nfor i in range (n+1):\r\n    if (i==n):\r\n        print(tot[i])\r\n    elif (frnd[i]!=tot[i]):\r\n        print(tot[i])\r\n        break", "# cook your dish here\ndef solve():\n\n    n=int(input())\n    k=list(map(int,input().split()))\n    h=list(map(int,input().split()))\n    k.sort()\n    h.sort()\n    flag=0\n    for i in range(n):\n        if k[i] != h[i]:\n            print(h[i])\n            flag=1\n            break\n    if flag==0 :\n        print(h[-1])\nt = 1\nfor i in range(t):\n    solve()", "try:\n    \n    x=int(input())\n    p=list(map(int,input().split()))\n    q=list(map(int,input().split()))\n    print(sum(q)-sum(p))\n   \nexcept EOFError:\n    pass", "# cook your dish here\nn=int(input())\nn_numbers=list(map(int,input().split()))\nn1_numbers=list(map(int,input().split()))\nsum1=0\nsum2=0\nsum3=0\nfor i in range(len(n_numbers)):\n    sum1=sum1+n_numbers[i]\nfor j in range(len(n1_numbers)):\n    sum2=sum2+n1_numbers[j]\nsum3=sum2-sum1\nprint(sum3)\n", "N = int(input())\nlist1 = list(map(int,input().split()))\nlist2 = list(map(int,input().split()))\n\nfor i in list2:\n    if(list1.count(i)!=list2.count(i)):\n        print(i)\n        break", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nprint(abs(sum(a)-sum(b)))\n", "# cook your dish here\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x*y)//(gcd(x,y))\n\ndef isPrime(n) : \n    if (n <= 1) : \n        return False\n    if (n <= 3) : \n        return True\n    if (n % 2 == 0 or n % 3 == 0) : \n        return False\n    i = 5\n    while(i * i <= n) : \n        if (n % i == 0 or n % (i + 2) == 0) : \n            return False\n        i = i + 6\n    return True\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\npi=3.141592653589793238\n\n\n\n\n\nn = int(input())\narr1 = list(map(int,input().split()))\narr2 = list(map(int,input().split()))\n\narr1.sort()\narr2.sort()\nx = False\nfor i in range(n):\n    if(arr1[i]!=arr2[i]):\n        print(arr2[i])\n        x = True\n        break\n\n\n\nif(not x):\n    print(arr2[-1])\n\n\n\n\n\n\n", "try:\r\n    x=int(input())\r\n    a=[*map(int, input().split())]\r\n    b=[*map(int, input().split())]\r\n    for i in b:\r\n        y=a.count(i)-b.count(i)\r\n        if y!=0:\r\n            print(i)\r\n            break\r\nexcept: pass", "from collections import Counter\r\n#inputlist = list(input().split())\r\nn = int(input())\r\nlist1 = list(map(int, input().split()))[:n]\r\nlist1 = sorted(list1)\r\nlist2 = list(map(int, input().split()))[:n+1]\r\nlist2 = sorted(list2)\r\ncnt1 = Counter(list1)\r\ncnt2 = Counter(list2)\r\nprint(*list((cnt2 - cnt1).elements()))", "try:\n\tn=int(input())\n\tx=[*map(int, input().split())]\n\ty=[*map(int, input().split())]\n\tfor i in y:\n\t\td=x.count(i)-y.count(i)\n\t\tif d!=0:\n\t\t\tprint(i)\n\t\t\tbreak\nexcept: pass", "from collections import Counter\nn=int(input())\narr1=list(map(int,input().split()))[:n]\narr2=list(map(int,input().split()))[:n+1]\nc1 = Counter(arr1)\n# print(c1)\nc2 = Counter(arr2)\n# print(c2)\ndiff = list((c2 - c1).elements())\nprint(*diff)"]