["import math\n\ndp = []\ndp.append(0)\nfor i in range(1,1000005):\n\tdp.append(math.log(i) + dp[i-1])\n\nt = int(input())\nfor i in range(t):\n\tn,m,p,k = input().split()\n\tn = int(n)\n\tm = int(m)\n\tp = int(p)\n\tk = int(k)\n\n\tif p==0 or (n%2==0 and m%2==0):\n\t\tans = 1.0\n\t\tprint(ans)\n\telif n%2==1 and m%2==1:\n\t\tans=0.0\n\t\tprint(ans*100)\n\telse:\n\t\tP = 0\n\t\tkln2 = k*math.log(2)\n\t\tfor i in range(p, k+1):\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\n\t\t\tPi = pow(math.e, lnPi)\n\t\t\tP += Pi\n\t\tprint(P)\n\n", "import math\n\ndp = []\ndp.append(0)\nfor i in range(1,1000005):\n\tdp.append(math.log(i) + dp[i-1])\n\nt = int(input())\nfor i in range(t):\n\tn,m,p,k = input().split()\n\tn = int(n)\n\tm = int(m)\n\tp = int(p)\n\tk = int(k)\n\n\tif p==10 or (n%2==0 and m%2==0):\n\t\tans = 1.0\n\t\tprint(ans)\n\telif n%2==1 and m%2==1:\n\t\tans=0.0\n\t\tprint(ans)\n\telse:\n\t\tP = 0\n\t\tkln2 = k*math.log(2)\n\t\tfor i in range(p, k+1):\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\n\t\t\tPi = pow(math.e, lnPi)\n\t\t\tP += Pi\n\t\tprint(P)\n\n", "# cook your dish here\nimport math\n\ndp = []\ndp.append(0)\nfor i in range(1,1000005):\n\tdp.append(math.log(i) + dp[i-1])\n\nt = int(input())\nfor i in range(t):\n\tn,m,p,k = input().split()\n\tn = int(n)\n\tm = int(m)\n\tp = int(p)\n\tk = int(k)\n\n\tif p==0 or (n%2==0 and m%2==0):\n\t\tans = 1.0\n\t\tprint(ans)\n\telif n%2==1 and m%2==1:\n\t\tans=0.0\n\t\tprint(ans)\n\telse:\n\t\tP = 0\n\t\tkln2 = k*math.log(2)\n\t\tfor i in range(p, k+1):\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\n\t\t\tPi = pow(math.e, lnPi)\n\t\t\tP += Pi\n\t\tprint(P)\n\n\n", "# cook your dish here\nimport math\n\ndp = []\ndp.append(0)\nfor i in range(1,1000005):\n\tdp.append(math.log(i) + dp[i-1])\n\nt = int(input())\nfor i in range(t):\n\tn,m,p,k = input().split()\n\tn = int(n)\n\tm = int(m)\n\tp = int(p)\n\tk = int(k)\n\n\tif p==0 or (n%2==0 and m%2==0):\n\t\tans = 1.0\n\t\tprint(ans)\n\telif n%2==1 and m%2==1:\n\t\tans=0.0\n\t\tprint(ans)\n\telse:\n\t\tP = 0\n\t\tkln2 = k*math.log(2)\n\t\tfor i in range(p, k+1):\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\n\t\t\tPi = pow(math.e, lnPi)\n\t\t\tP += Pi\n\t\tprint(P)\n\n\n", "import math\r\n\r\ndp = []\r\ndp.append(0)\r\nfor i in range(1,1000005):\r\n\tdp.append(math.log(i) + dp[i-1])\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn,m,p,k = input().split()\r\n\tn = int(n)\r\n\tm = int(m)\r\n\tp = int(p)\r\n\tk = int(k)\r\n\r\n\tif p==0 or (n%2==0 and m%2==0):\r\n\t\tans = 1.0\r\n\t\tprint(ans)\r\n\telif n%2==1 and m%2==1:\r\n\t\tans=0.0\r\n\t\tprint(ans)\r\n\telse:\r\n\t\tP = 0\r\n\t\tkln2 = k*math.log(2)\r\n\t\tfor i in range(p, k+1):\r\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\r\n\t\t\tPi = pow(math.e, lnPi)\r\n\t\t\tP += Pi\r\n\t\tprint(P)\r\n\r\n\r\n", "import math\r\n\r\ndp = []\r\ndp.append(0)\r\nfor i in range(1,1000005):\r\n\tdp.append(math.log(i) + dp[i-1])\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn,m,p,k = input().split()\r\n\tn = int(n)\r\n\tm = int(m)\r\n\tp = int(p)\r\n\tk = int(k)\r\n\r\n\tif n%2==0 and m%2==0:\r\n\t\tans = 1.0\r\n\t\tprint(ans)\r\n\telif n%2==1 and m%2==1:\r\n\t\tans=0.0\r\n\t\tprint(ans)\r\n\telse:\r\n\t\tP = 0\r\n\t\tkln2 = k*math.log(2)\r\n\t\tfor i in range(p, k+1):\r\n\t\t\tlnPi = dp[k] - dp[i] - dp[k-i] - kln2\r\n\t\t\tPi = pow(math.e, lnPi)\r\n\t\t\tP += Pi\r\n\t\tprint(P)\r\n\r\n", "import math\r\n\r\ndp = []\r\ndp.append(0)\r\nfor i in range(1,1000005):\r\n\tdp.append(math.log(i) + dp[i-1])\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn,m,p,k = input().split()\r\n\tn = int(n)\r\n\tm = int(m)\r\n\tp = int(p)\r\n\tk = int(k)\r\n\r\n\tif n%2==0 and m%2==0:\r\n\t\tans = 1.0\r\n\t\tprint(ans)\r\n\telif n%2==1 and m%2==1:\r\n\t\tans=0.0\r\n\t\tprint(ans)\r\n\telse:\r\n\t\tans = 0\r\n\t\tfor j in range(p,k+1):\r\n\t\t\ttotal = math.exp(dp[k] - dp[j] - dp[k-j] - k*math.log(2))\r\n\t\t\tans = ans + total\r\n\t\tprint(ans)\r\n\r\n", "import math\r\n\r\ndp = []\r\ndp.append(0.0)\r\nfor i in range(1,1000005):\r\n\tdp.append(math.log(i) + dp[i-1])\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn,m,p,k = input().split()\r\n\tn = int(n)\r\n\tm = int(m)\r\n\tp = int(p)\r\n\tk = int(k)\r\n\r\n\tif n%2==0 and m%2==0:\r\n\t\tans = 1.0\r\n\t\tprint(ans)\r\n\telif n%2==1 and m%2==1:\r\n\t\tans=0.0\r\n\t\tprint(ans)\r\n\telse:\r\n\t\tans = 0.0\r\n\t\tfor j in range(p,k+1):\r\n\t\t\ttotal = math.exp(dp[k] - dp[j] - dp[k-j] - k*math.log(2))\r\n\t\t\tans+=total\r\n\t\tprint(ans)\r\n\r\n"]