["T = int(input())\n\nM = 10 ** 9 + 7\n\nfor _ in range(T):\n N = int(input())\n\n A = list(map(int, input().split()))\n\n if N == 1:\n  print(0)\n  continue\n\n B = {}\n C = {}\n\n for i in range(N - 1):\n  u, v = input().split()\n  u = int(u) - 1\n  v = int(v) - 1\n\n  if u not in B:\n   B[u] = []\n\n  if v not in B:\n   B[v] = []\n\n  B[u].append(v)\n  B[v].append(u)\n\n total_leaves = 0\n\n for i in B:\n  if len(B[i]) == 1:\n   total_leaves += 1\n\n S = [0]\n\n visited = [False] * N\n\n parent = [-1] * N\n\n total_visits = [0] * N\n\n while len(S) > 0:\n  current = S.pop(len(S) - 1)\n\n  if visited[current]:\n   p = parent[current]\n   if p != -1:\n    total_visits[p] += total_visits[current]\n    if p not in C:\n     C[p] = {}\n    C[p][current] = total_visits[current]\n    if current not in C:\n     C[current] = {}\n    C[current][p] = total_leaves - C[p][current]\n  else:\n   S.append(current)\n   visited[current] = True\n   for i, j in enumerate(B[current]):\n    if not visited[j]:\n     parent[j] = current\n     S.append(j)\n   if len(B[current]) == 1:\n    total_visits[current] = 1\n    p = parent[current]\n    if p != -1:\n     if p not in C:\n      C[p] = {}\n     C[p][current] = 1\n\n D = {}\n for i in C:\n  sum1 = 0\n  for j in C[i]:\n   sum1 += C[i][j]\n  D[i] = sum1\n\n E = [0] * N\n for i in C:\n  sum1 = 0\n  for j in C[i]:\n   D[i] -= C[i][j]\n   sum1 += C[i][j] * D[i]\n  E[i] = sum1\n\n for i, j in enumerate(E):\n  if j == 0:\n   for k in C[i]:\n    E[i] = C[i][k]\n\n E.sort()\n E.reverse()\n A.sort()\n A.reverse()\n\n E = [x % M for x in E]\n A = [x % M for x in A]\n\n ans = 0\n for i, j in zip(E, A):\n  a = i * j\n  a %= M\n  ans += a\n  ans %= M\n\n print(ans)\n"]