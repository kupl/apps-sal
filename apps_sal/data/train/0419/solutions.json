["class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         if n == 0:\n             return 0\n         else:\n             return int(n**0.5)\n         \n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return int(n ** 0.5)\n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return int(n ** 0.5)\n         \n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return int(pow(n,0.5))", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         \n         import math\n         return math.floor(math.sqrt(n))\n         # if n == 0:\n         #     return 0\n         # else:\n         #     nums = [True] * n\n         #     if n > 1:\n         #         for i in range(2,n):\n         #             nums[i-1::i] = [not x for x in nums[i-1::i]]\n         #         nums[-1] = (not nums[-1])\n         #     return sum(nums)\n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         # if n == 0: return 0\n         # if n <= 2: return 1\n         # cur = 1\n         # for i in range(2, int(math.sqrt(n))+1):\n         #     a = int(math.sqrt(i))\n         #     if a*a == i: cur += 1\n         return int(math.sqrt(n))\n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return int(math.sqrt(n))", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         return int(math.sqrt(n))", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         # bulbs = [False] * n;\n         # for i in range(0,int(n/2)+1):\n         #     j = i+1;\n         #     for j in range(i,n,j):\n         #         bulbs[j] = True if bulbs[j] is False else False;\n         #     print(bulbs,j)\n         # return bulbs.count(True)\n         return int(n**(1/2))\n             \n", "class Solution:\n     def bulbSwitch(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         cnt = 0\n         for i in range(n):\n             num = (i+1) ** 2\n             if num > n:\n                 break\n             cnt += 1\n         return cnt"]