["import sys\n\ndef _r(*conv) :\n r = [conv[i](x) for i, x in enumerate(input().strip().split(' '))]\n return r[0] if len(r) == 1 else r\n\ndef _ra(conv) :\n return list(map(conv, input().strip().split(' ')))\n\ndef _rl() :\n return list(input().strip())\n\ndef _rs() :\n return input().strip()\n\ndef _a(k, *v) :\n return all(x == k for x in v)\n\ndef _i(conv) :\n for line in sys.stdin :\n  yield conv(line)\n##################################################################\n\n\nfor _ in range(_r(int)) :\n n, sx, sy, ex, ey, bx, by = _ra(int)\n\n if sx != ex and sy != ey : \n  print(abs(sx - ex) + abs(sy - ey))\n else : \n  if sx == ex : \n   if sx == bx : \n    if (by > sy and by < ey) or (by < sy and by > ey) :\n     print(abs(sx - ex) + abs(sy - ey) + 2)\n    else :\n     print(abs(sx - ex) + abs(sy - ey))\n   else : \n    print(abs(sx - ex) + abs(sy - ey))\n  else :\n   if sy == by : \n    if (bx > sx and bx < ex) or (bx < sx and bx > ex) :\n     print(abs(sx - ex) + abs(sy - ey) + 2)\n    else : \n     print(abs(sx - ex) + abs(sy - ey))\n   else : \n    print(abs(sx - ex) + abs(sy - ey))\n\n\n", "t=eval(input())\nfor z in range(t):\n tot=0\n n,sx,sy,ex,ey,bx,by=list(map(int,input().strip().split(\" \")))\n if(sx==ex or sy==ey):\n  if(sx==ex):\n   if(sx==bx and (by>=min(sy,ey) and by<=max(sy,ey))):\n    tot+=2\n  elif(sy==ey):\n   if(sy==by and (bx>=min(sx,ex) and bx<=max(sx,ex))):\n    tot+=2\n tot+=abs(sx-ex)+abs(sy-ey)\n print(tot)\n", "for cas in range(eval(input())):\n n, sx, sy, ex, ey, bx, by = list(map(int, input().strip().split()))\n print(abs(sx - ex) + abs(sy - ey) + 2 * ((sx == ex or sy == ey)\n  and min(sx, ex) <= bx <= max(sx, ex)\n  and min(sy, ey) <= by <= max(sy, ey)\n ))", "for t in range(eval(input())):\n n, sx, sy, ex, ey, bx, by = list(map(int, input().strip().split()))\n bomb = ((sx==ex or sy==ey)\n and min(sx,ex) <= bx <= max(sx, ex)\n and min(sy,ey) <= by <= max(sy, ey))\n print(abs(sx-ex) + abs (sy-ey) + 2 * bomb)", "# cook your code here\nT = int(input())\nfor i in range(T):\n (n,sx,sy,ex,ey,bx,by) = list(map(int,input().split()))\n if sx!=ex and sy!=ey:\n  a = abs(sx-ex)+abs(sy-ey)\n  print(a)\n else:\n  if sx==ex:\n   if ex==bx and (by-sy)*(ey-by)>0:\n    print(abs(sy-ey)+2)\n   else:\n    print(abs(sy-ey))\n  else:\n   if ey==by and (bx-sx)*(ex-bx)>0:\n    print(abs(sx-ex)+2)\n   else:\n    print(abs(sx-ex))\n", "for cas in range(eval(input())):\n n, sx, sy, ex, ey, bx, by = list(map(int, input().strip().split()))\n print(abs(sx - ex) + abs(sy - ey) + 2 * ((sx == ex or sy == ey)\n  and min(sx, ex) <= bx <= max(sx, ex)\n  and min(sy, ey) <= by <= max(sy, ey)\n ))", "for cas in range(eval(input())):\n n, sx, sy, ex, ey, bx, by = list(map(int, input().strip().split()))\n print(abs(sx - ex) + abs(sy - ey) + 2 * ((sx == ex or sy == ey)\n  and min(sx, ex) <= bx <= max(sx, ex)\n  and min(sy, ey) <= by <= max(sy, ey)\n ))", "import sys\n\ndef main():\n t=int(sys.stdin.readline())\n for _ in range(t):\n  n,sx,sy,dx,dy,bx,by=list(map(int,sys.stdin.readline().strip().split()))\n  if (sx==bx==dx) and (min(sy,dy)<by) and (by<max(sy,dy)): \n   print(abs(dx-sx)+abs(dy-sy)+2)\n  elif (sy==by==dy) and(min(sx,dx)<bx) and (bx<max(sx,dx)):\n   print(abs(dx-sx)+abs(dy-sy)+2)\n  else:\n   print(abs(dx-sx)+abs(dy-sy))\nmain()\n", "for cas in range(eval(input())):\n n, sx, sy, ex, ey, bx, by = list(map(int, input().strip().split()))\n print(abs(sx - ex) + abs(sy - ey) + 2 * ((sx == ex or sy == ey)\n  and min(sx, ex) <= bx <= max(sx, ex)\n  and min(sy, ey) <= by <= max(sy, ey)\n ))", "for _ in range(eval(input())):\n a=list(map(int,input().split()))\n s=[a[1],a[2]]\n e=[a[3],a[4]]\n b=[a[5],a[6]]\n c=abs(e[1]-s[1])+abs(e[0]-s[0])\n if b[0]==e[0] and b[1]<e[1]:\n  c+=2\n  print(c)\n else:\n  print(c)\n  \n"]