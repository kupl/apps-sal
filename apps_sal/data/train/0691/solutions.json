["T = int(input())\nfor _ in range(T):\n n = int(input())\n arr = list(map(int, input().split()))\n a = [0 for _ in range(max(arr)+1)]\n star_val = []\n for i in range(len(arr)):\n  j = 1\n  val = 0\n  while j*arr[i] <= len(a):\n   val += a[j*arr[i]-1]\n   j += 1\n  star_val.append(val)\n  a[arr[i]-1] += 1\n print(max(star_val))", "T = int(input())\nfor _ in range(T):\n n = int(input())\n arr = list(map(int, input().split()))\n values = []\n if len(arr) == 1:\n  print(0)\n else:\n  for i in range(1, len(arr)):\n   star = 0\n   for j in range(i):\n    if arr[j]%arr[i] == 0:\n     star += 1\n   values.append(star)\n  print(max(values))", "# cook your dish here\nfor t in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n l1=[ ]\n for i in range(len(l)):\n  c=0\n  for j in range(i):\n   if l[j]%l[i]==0:\n    c+=1\n  l1.append(c)\n print(max(l1))", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n lst = list(map(int,input().split()))\n val = 0\n for i in range(n-1,-1,-1):\n  temp = 0\n  for j in range(i-1,-1,-1):\n   if(lst[j]%lst[i] == 0):\n    temp = temp + 1\n  if(temp >= val):\n   val = temp\n  if(val == i ):\n   break\n print(val)", "for _ in range(int(input())):\n n = int(input())\n lst = list(map(int,input().split()))\n val = 0\n for i in range(n-1,-1,-1):\n  temp = 0\n  for j in range(i-1,-1,-1):\n   if(lst[j]%lst[i] == 0):\n    temp = temp + 1\n  if(temp >= val):\n   val = temp\n  if(val == i ):\n   break\n print(val)", "import sys\nfrom math import sqrt\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n n = int(input())\n a = list(map(int, input().strip().split()))\n max_star = [0] * (10 ** 6 + 5)\n ans = 0\n for i in range(n):\n  x = a[i]\n  if i > 0:\n   ans = max(ans, max_star[x])\n  for j in range(1, int(sqrt(x))+1):\n   if x % j == 0:\n    tempnum = int(x / j)\n    if j != tempnum:\n     max_star[j] += 1\n     max_star[tempnum] += 1\n    else:\n     max_star[j] += 1\n print(ans)", "for u in range(int(input())):\n n = int(input())\n x = [int(w) for w in input().split()]\n \n ans = 0\n for i in range(1, n):\n  c = 0\n  for j in range(i):\n   if x[j] % x[i] == 0:\n    c += 1\n  #print(c)    \n  ans = max(ans, c)\n  \n print(ans)", "import math \nfrom functools import reduce\n\ndef printDivisors(n):    \n return list(set(reduce(list.__add__, \n    ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\nfor _ in range(int(input())):\n n=int(input())\n if n>10**4:\n  List=[int(y) for y in input().split()]\n  Dict=dict()\n  Answ=0\n  for i in range(n):\n   Divisor_List=printDivisors(List[i])\n   if List[i] in Dict:\n    if(Dict[List[i]]>Answ):\n     Answ=Dict[List[i]]\n   for i in Divisor_List:\n    if i in Dict:\n     Dict[i]+=1\n    else:\n     Dict[i]=1\n  print(Answ)\n else:\n  a=list(map(int,input().split()))\n  h=[0]*1000001\n  m=0\n  for j in range(n-1,1,-1):\n   x=j-1\n   c=0\n   if h[a[j]]==0:\n    while(x>=0):\n     if a[x]%a[j]==0:\n      h[a[x]]=1\n      c=c+1\n     x=x-1\n    m=max(m,c)\n    h[a[j]]=1\n  print(m)", "import math \nfrom functools import reduce\n\ndef printDivisors(n):    \n return list(set(reduce(list.__add__, \n    ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\nfor _ in range(int(input())):\n N=int(input())\n List=[int(y) for y in input().split()]\n Dict=dict()\n Answ=0\n for i in range(N):\n  Divisor_List=printDivisors(List[i])\n  if List[i] in Dict:\n   if(Dict[List[i]]>Answ):\n    Answ=Dict[List[i]]\n  for i in Divisor_List:\n   if i in Dict:\n    Dict[i]+=1\n   else:\n    Dict[i]=1\n print(Answ)", "for _ in range(int(input())):\n N = int(input())\n L = list(map(int, input().split()))\n L2 = [0]*N\n res = 0\n n = N-1\n while n!=0:\n  if L2[n]==1:\n   n = n-1\n   continue\n  req = 0\n  a = L[n]\n  for i in range(n-1, -1, -1):\n   if L[i]%L[n]==0:\n    L2[i] = 1\n    req = req+1\n  \n  res = max(req, res)\n  n = n-1\n \n print(res)", "t=int(input())\nfor z in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n h=[0]*1000001\n m=0\n for j in range(n-1,1,-1):\n  x=j-1\n  c=0\n  if h[a[j]]==0:\n   while(x>=0):\n    if a[x]%a[j]==0:\n     h[a[x]]=1\n     c=c+1\n    x=x-1\n   m=max(m,c)\n   h[a[j]]=1\n print(m)", "for _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n h=[0]*1000001\n m=0\n for j in range(n-1,1,-1):\n  x=j-1\n  c=0\n  if h[a[j]]==0:\n   while(x>=0):\n    if a[x]%a[j]==0:\n     h[a[x]]=1\n     c=c+1\n    x=x-1\n   m=max(m,c)\n   h[a[j]]=1\n print(m)", "from sys import stdin\nfrom numpy import arange, array\n\nfor _ in arange(int(stdin.readline())):\n N = int(stdin.readline())\n a = array(list(map(int, stdin.readline().split())))\n h = [0] * N\n maxx = 0\n for j in range(N - 1, 1, -1):\n  k = 0\n  if h[j] == 0:\n   for i in range(j+1):\n    if a[i] % a[j] == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k - 1, maxx)\n print(maxx)\n", "from numpy import arange,array\nfrom sys import stdin\n\nfor _ in arange(int(stdin.readline())):\n N = int(stdin.readline())\n a = array(list(map(int, stdin.readline().split())))\n b = array(a[::-1])\n maxx = 0\n h = array([0]*N)\n for index, items in enumerate(b):\n  k = 0\n  if h[N - index - 1] == 0:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k - 1, maxx)\n  # print(h)\n print(maxx)\n", "import numpy as np\nimport sys\n\nfor _ in np.arange(int(sys.stdin.readline())):\n N = int(sys.stdin.readline())\n a = np.array(list(map(int, sys.stdin.readline().split())))\n b = np.array(a[::-1])\n maxx = 0\n h = np.array([0]*N)\n for index, items in enumerate(b):\n  k = 0\n  if h[N - index - 1] == 0:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k - 1, maxx)\n  # print(h)\n print(maxx)\n", "import numpy as np\n\nfor _ in range(int(input())):\n N = int(input())\n a = np.array(list(map(int, input().split())))\n b = np.array(a[::-1])\n maxx = 0\n h = np.array([0]*N)\n for index, items in enumerate(b):\n  k = 0\n  if h[N - index - 1] == 0:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k - 1, maxx)\n  # print(h)\n print(maxx)\n", "for _ in range(int(input())):\n N = int(input())\n a = list(map(int, input().split()))\n b = a[::-1]\n maxx = 0\n h = [0] * N\n for index, items in enumerate(b):\n  k = 0\n  if h[N - index - 1] == 0:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k-1, maxx)\n print(maxx)\n", "for _ in range(int(input())):\n N = int(input())\n a = list(map(int, input().split()))\n b = a[::-1]\n maxx = 0\n h = [0] * N\n for index, items in enumerate(b):\n  k = 0\n  if h[N - index - 1] == 0:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     h[i] = 1\n  maxx = max(k-1, maxx)\n print(maxx)\n", "for _ in range(int(input())):\n N = int(input())\n a = list(map(int, input().split()))\n b = a[::-1]\n maxx = 0\n dic = {}\n for index, items in enumerate(b):\n  k = 0\n  try:\n   if dic[items]==0:\n    pass\n  except Exception as e:\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     dic[a[i]] = 0\n  maxx = max(k-1, maxx)\n print(maxx)\n", "for _ in range(int(input())):\n N = int(input())\n a = list(map(int, input().split()))\n b = a[::-1]\n maxx = 0\n dic = {}\n for index, items in enumerate(b):\n  k = 0\n  if items not in list(dic.keys()):\n   for i in range(N - index):\n    if a[i] % items == 0:\n     k += 1\n     dic[a[i]] = 0\n  maxx = max(k-1, maxx)\n print(maxx)\n", "for _ in range(int(input())):\n N=int(input())\n a=list(map(int,input().split()))\n maxx=0\n for index,items in enumerate(a):\n  k=0\n  for i in range(index):\n   if a[i]%items==0:\n    k+=1\n  maxx=max(k,maxx)\n print(maxx)"]