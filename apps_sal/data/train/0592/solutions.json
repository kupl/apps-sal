["import sys\n\ndef mex(S,W,C,start,end):\n    \"\"\"Returns Nim-number of S[start:end]\"\"\"\n    key=(start,end)\n    try:\n        return C[key]\n    except KeyError:\n        pass\n    A=set()\n    for s in range(start,end):\n        for e in range(start+1,end+1):\n            if S[s:e] not in W: continue\n            A.add(mex(S,W,C,start,s)^mex(S,W,C,e,end))\n    a=0\n    while a in A: a+=1\n    C[key]=a\n    return a\n    \n\na=sys.stdin\n#a=open('astrgame.txt','r')\nT=int(a.readline())\nfor t in range(T):\n    S=a.readline().strip()\n    N=int(a.readline())\n    W=set([a.readline().strip() for n in range(N)])\n    print('Teddy' if mex(S,W,{},0,len(S)) else 'Tracy')\n    \n", "#!/usr/bin/env python\n\ndef memo(func):\n    cache = {}\n    def f(*args):\n        if args in cache:\n            return cache[args]\n        r = func(*args)\n        cache[args] = r\n        return r\n    return f\n\ndef doit():\n    s = input().strip()\n    words = set([input().strip() for x in range(eval(input()))])\n    @memo\n    def g(start, end):\n        num = set([])\n        if start >= end: return 0\n        for w in words:\n            x = start\n            while x + len(w) <= end:\n                r = s.find(w, x, end)\n                if r == -1:\n                    break\n                num.add(g(start, r) ^ g(r + len(w), end))\n                x = r + 1\n        x = 0\n        while x in num:\n            x += 1\n        return x\n    return g(0, len(s)) > 0\n\nn = eval(input())\nfor x in range(n):\n    if doit():\n        print('Teddy')\n    else:\n        print('Tracy')\n", "#!/usr/bin/env python\n\ndef memo(func):\n    cache = {}\n    def f(*args):\n        if args in cache:\n            return cache[args]\n        r = func(*args)\n        cache[args] = r\n        return r\n    return f\n\ndef doit():\n    s = input().strip()\n    words = set([input().strip() for x in range(eval(input()))])\n    @memo\n    def g(start, end):\n        num = set([])\n        x = start\n        while x <= end:\n            y = x\n            while y <= end:\n                if s[x:y+1] in words:\n                    num.add(g(start, x-1) ^ g(y+1, end))\n                y += 1\n            x += 1\n        x = 0\n        while x in num:\n            x += 1\n        return x\n    return g(0, len(s) - 1) > 0\n\nn = eval(input())\nfor x in range(n):\n    if doit():\n        print('Teddy')\n    else:\n        print('Tracy')\n", "D = {}\n\ndef g(s):\n  if s in D: return D[s]\n  \n  vals = set()\n  l = len(s)\n  for i in range(l):\n    for j in range(1, l+1 - i):\n      sub = s[i : i+j]\n      if sub in DIC:\n        vals.add(g(s[:i]) ^ g(s[i+j:]))\n  \n  i = 0\n  while 1:\n    if not i in vals:\n      break\n    i += 1\n  D[s] = i\n  return D[s]\n\nT = int(input(\"\"))\nfor t in range(T):\n  s = input(\"\")\n  d_len = int(input(\"\"))\n  DIC = set()\n  for i in range(d_len):\n    DIC.add(input(\"\"))\n  D = {}\n  print(\"Teddy\" if g(s) else \"Tracy\")\n"]