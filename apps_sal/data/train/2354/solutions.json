["s = input()\nn = int(input())\na = [input() for i in range(n)]\nfor i in range(n):\n    for j in range(n):\n        if a[i] == s or a[i][1] + a[j][0] == s:\n            print(\"YES\")\n            return\nprint(\"NO\")\n", "pas = input()\ncount = int(input())\nwords = [input() for i in range(count)]\n\nif pas in words:\n    print(\"YES\")\nelse:\n    f1 = False\n    f2 = False\n    for word in words:\n        if pas[0] == word[1]:\n            f1 = True\n        if pas[1] == word[0]:\n            f2 = True\n    if f1 and f2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "3\n\ns = input()\nn = int(input())\nl = [input() for i in range(n)]\n\nans = False\n\nif s in l:\n    ans = True\nelse:\n    for i in range(n):\n        for j in range(n):\n            if (l[i] + l[j])[1:3] == s:\n                ans = True\n\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**15\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    s = S()\n    n = I()\n    a = [S() for _ in range(n)]\n    if (s in a) or (s[0] in [x[1] for x in a] and s[1] in [x[0] for x in a]):\n        return 'YES'\n\n    return 'NO'\n\n\nprint(main())\n\n\n\n\n", "want = input()\nn = int(input())\nl = [input() for _ in range(n)]\nworks = False\nif want in l:\n\tworks = True\nfor i in range(n):\n\tfor j in range(n):\n\t\tif want in l[i] + l[j]:\n\t\t\tworks = True\n\nprint(\"YES\" if works else \"NO\")", "p = input().strip()\na = [input().strip() for i in range(int(input()))]\nb = [(ai[1]+aj[0]) for ai in a for aj in a]\nprint('YES' if p in a+b else 'NO')", "p = input()\nn = int(input())\nc = False\nw = [input() for i in range(n)]\nfor i in range(n):\n    for j in range(n):\n        if (w[i][0]==p[1] and w[j][1]==p[0]):\n            c = True\n            break\nprint({True:\"YES\",False:\"NO\"}[c or p in w])\n", "t = input()\nn = int(input())\n\nok = [0, 0]\nfor i in range(n):\n    w = input()\n    if w == t:\n        ok = [1, 1]\n    if w[1] == t[0]:\n        ok[0] = 1\n    if w[0] == t[1]:\n        ok[1] = 1\n\nif ok == [1, 1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "s = input()\nsec = []\nfir = []\nn = int(input())\nfor i in range(n):\n\ts1 = input()\n\tsec.append(s1[1])\n\tfir.append(s1[0])\n\tif s1 == s:\n\t\tprint('YES')\n\t\tbreak\nelse:\n\tif s[0] in sec and s[1] in fir:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')", "def __starting_point():\n\tpassword = input()\n\tn = int(input())\n\tlasts = set()\n\tfirsts = set()\n\tattempts = set()\n\tfor _ in range(n):\n\t\tattempt = input()\n\t\tattempts.add(attempt)\n\t\tfirsts.add(attempt[0])\n\t\tlasts.add(attempt[1])\n\t\n\tif password in attempts or (password[0] in lasts and password[1] in firsts):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n__starting_point()", "from sys import stdin, stdout\n\npwd = stdin.readline().rstrip()\nn = int(stdin.readline().rstrip())\nwords = []\nfor _ in range(n):\n    words.append(stdin.readline().rstrip())\n    \nif pwd in words:\n    print('YES')\nelse:\n    possible1 = False\n    possible2 = False\n    for word in words:\n        if word[0]==pwd[1]:\n            possible1=True\n        if word[1]==pwd[0]:\n            possible2=True\n    if possible1 and possible2:\n        print('YES')\n    else:\n        print('NO')\n", "p=str(input())\ns=[]\ne=[]\nip=[]\nfor i in range(int(input())):\n    temp=str(input())\n    ip.append(temp)\n    s.append(temp[0])\n    e.append(temp[1])\nb=0\nif p in ip:\n    b=1\nelse:\n    if p[0] in e and p[1] in s:\n        b=1\nif b==1:\n    print('YES')\nelse:\n    print('NO')\n", "s = input()\nn = int(input())\ndata = []\nfor i in range(n):\n    data.append(input())\nmark = 0\nfor i in range(n):\n    for j in range(n):\n        if s in (data[i] + data[j]):\n            mark = 1\n            \nif mark:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "pas = input()\nn = int(input())\nl_letters = set()\nr_letters = set()\nans = False\nfor i in range(n):\n    j = input()\n    l_letters.add(j[0])\n    r_letters.add(j[1])\n    if j == pas:\n        ans = True\n    if j[0] == pas[1]:\n        if pas[0] in r_letters:\n            ans = True\n    if j[1] == pas[0]:\n        if pas[1] in l_letters:\n            ans = True\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "st = input()\narr = []\nfor _ in range(int(input())):\n    arr.append(input())\n\nfirf = False\nsecf = False\nflag = True\nfor sbst in arr:\n    if sbst == st:\n        print('YES')\n        flag = False\n        break\n    if sbst[1] == st[0]:\n        firf = True\n    if sbst[0] == st[1]:\n        secf = True\n\n    if firf and secf:\n        print('YES')\n        flag = False\n        break\n\nif flag:\n    print ('NO')\n", "s=input()\nn=int(input())\nl=[]\nfor u in range(n):\n\tl.append(input())\n\nflag=0\nfor i in range(n):\n\tfor j in range(n):\n\t\tif((l[i]+l[j]).count(s) >=1):\n\t\t\tflag=1\n\t\t\tbreak\n\tif(flag):\n\t\tbreak\nif(flag):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "def check(password,n,a):\n\tfor i in range(n):\n\t\tif (password[0] == a[i][1]):\n\t\t\tfor j in range(n):\n\t\t\t\tif (password[1] == a[j][0]):\n\t\t\t\t\treturn True\n\n\tif (password in a):\n\t\treturn True\n\n\treturn False\n\npassword = input()\nn = int(input())\na = []\nfor i in range(n):\n\ta.append(input())\n\nif (check(password,n,a)):\n\tprint('YES')\nelse:\n\tprint('NO')\n\n\n", "def solution():\n\tw = input().strip()\n\tn = int(input())\n\twords = []\n\tfor i in range(n):\n\t\twords.append(input().strip())\n\n\tfor i in range(n):\n\t\tif words[i] == w:\n\t\t\treturn True\n\t\tfor j in range(n):\n\t\t\tif words[i][1]+words[j][0] == w:\n\t\t\t\treturn True\n\t\n\treturn False\n\n\nprint('YES' if solution() else 'NO')", "s=input()\nn=int(input())\na=[input() for i in range(n)]\nfor x in a:\n\tfor y in a:\n\t\tif s in x+y:\n\t\t\tprint('YES')\n\t\t\treturn\n\nprint('NO')\n\n", "password = input()\nn = int(input())\na = []\nfor i in range(n):\n\ta.append(input())\nb = []\nfor w in a:\n\tfor w2 in a:\n\t\tb.append((w+w2)[:2])\n\t\tb.append((w+w2)[1:3])\n\t\tb.append((w+w2)[2:])\n\nif password in b:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "s = input()\nn = int(input())\na = [input() for i in range(n)]\nfor i in a:\n    for j in a:\n        if s in i + j:\n            print('YES')\n            return\nprint('NO')\n", "def main():\n    pwd = input()\n    n = int(input())\n    f_l = False\n    s_l = False\n    for _ in range(n):\n        b = input()\n        if b == pwd:\n            print('YES')\n            return\n        if pwd[1] == b[0]:\n            f_l = True\n        if pwd[0] == b[1]:\n            s_l = True\n    if f_l and s_l:\n        print('YES')\n    else:\n        print('NO')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]