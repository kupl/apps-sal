["for _ in range(int(input())):\n n=int(input())\n f=list(map(int,input().split()))\n sum1=f[0]\n d=0\n i=1 \n while sum1!=0 and i<n:\n  sum1=sum1-1+f[i]\n  d+=1 \n  i+=1 \n print(d+sum1)\n", "t = int(input())\n\nfor _ in range(t):\n n = int(input())\n flag = 0\n \n f = [int(x) for x in input().split()]\n \n for i in range(1, n):\n  f[i] += f[i-1]\n \n for i in range(0, n):\n  if f[i] <= i:\n   flag = 1\n   break\n \n if(flag == 1):\n  print(i)\n else:\n  print(f[-1])", "t = int(input())\n\nfor _ in range(t):\n n = int(input())\n flag = 0\n \n f = [int(x) for x in input().split()]\n \n for i in range(1, n):\n  f[i] += f[i-1]\n \n for i in range(0, n):\n  if f[i] <= i:\n   flag = 1\n   break\n \n if(flag == 1):\n  print(i)\n else:\n  print(f[-1])", "t=int(input())\n\nfor i in range(1,t+1):\n n=int(input())\n lst=list(map(int,input().split()))\n l=0\n s=lst[0]\n for j in range(1,len(lst)):\n  if s>=1:\n   l+=1\n   s-=1\n   s+=lst[j]\n  else:\n   break\n\n ans=l+s\n print(ans)\n  \n", "t=0\nt = int(input())\n\nfor i in range(0,t):\n n=0\n n = int(input())\n f =[]\n f = list(map(int,input().split()))\n \n total_fuel=f[0]\n total_dist=0\n i=1\n\n while(total_fuel>0 and total_dist<=n-1 and i<=n-1):\n  total_fuel=total_fuel + f[i] - 1\n  total_dist=i\n  i = i+1\n\n if(total_fuel == 0):\n  ans = total_dist\n else:\n  ans = total_fuel + total_dist\n\n print(ans)\n\n  \n", "for _ in range(int(input())):\n n = int(input())\n arr = list(map(int,input().split()))\n dis = 0\n fuel = arr[0]\n for i in range(1,n):\n  if fuel > 0:\n   fuel -= 1\n   dis += 1\n   fuel += arr[i]\n  else:\n   break\n \n dis += fuel\n print(dis)\n", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n l = list(map(int,input().split()))\n if l[0]==0:\n  print(0)\n else:\n  s = l[0]\n  c = 0\n  for i in range(1,len(l)):\n   s-=1\n   s+=l[i]\n   c+=1\n   if s==0:\n    break\n  print(s+c)", "# cook your dish here\nfor i in range(int(input())):\n n = input()\n fuel = list(map(int, input().split()))\n sum = fuel[0]\n count = 0\n for j in range(1, len(fuel)):\n  if sum==0:\n   break\n  else:\n   sum = (sum-1)+fuel[j]\n   count+=1\n print(count+sum)\n fuel.clear()", "for i in range(int(input())):\n n=int(input())\n arr = list(map(int,input().split()))\n su=arr[0]\n count=0\n for j in range(1,n):\n  if(su==0):\n   break\n  else:\n   su=(su-1)+arr[j]\n   count+=1\n print(su+count)\n arr.clear()\n  \n", "# cook your dish here\nfor u in range(int(input())):\n n = int(input())\n gas = list(map(int, input().split()))[:n]\n dist1 = 0\n dist = 0\n for i in gas:\n  if i == 0 and dist == 0:\n   break\n  else:\n   dist = dist+i\n   dist -= 1\n  dist1 += 1\n print(dist+dist1)", "# cook your dish here\nfor t in range(int(input())):\n  N = int(input())\n  f = list(map(int, input().split()))\n  gas = f[0]\n  distance = 0\n  for _ in range(1, N):\n    if gas == 0:\n      break\n    gas = gas - 1 + f[_]\n    distance += 1\n  print(distance + gas) \n", "\nn=int(input())\nli=[]\nfor i in range(n):\n N=int(input())\n l=list(map(int,input().split()))\n li.append(l)\ndef dist(lst):\n \n ptr=lst[0]\n dst=1\n \n for i in range(1,len(lst)):\n  if ptr>=1:\n   ptr-= 1\n   ptr+=lst[i]\n   dst+=1\n  elif ptr==0:\n   break\n dst+=ptr\n return dst\n   \n  \n \nfor k in li:\n print(dist(k)-1)\n  \n   \n\n \n  \n  \n  \n \n \n  \n\n", "\nn=int(input())\nli=[]\nfor i in range(n):\n N=int(input())\n l=list(map(int,input().split()))\n li.append(l)\ndef dist(lst):\n \n ptr=lst[0]\n dst=1\n \n for i in range(1,len(lst)):\n  if ptr>=1:\n   ptr-= 1\n   ptr+=lst[i]\n   dst+=1\n  elif ptr==0:\n   break\n dst+=ptr\n return dst\n   \n  \n \nfor k in li:\n print(dist(k)-1)\n  \n   \n\n \n  \n  \n  \n \n \n  \n\n", "for _ in range(int(input())):\n n= int(input())\n arr =list(map(int,input().split()))\n curr_fuel =arr[0]\n count=0\n if arr[0]!=0:\n  for i in range(1,n):\n   curr_fuel -=1\n   curr_fuel+=arr[i]\n   count+=1\n   if curr_fuel==0:\n    break\n  count+=curr_fuel\n  \n print(count)\n\n \n # cook your dish here\n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n lst=list(map(int,input().split()))\n distance=0\n fuel=lst[0]\n for i in range(1,n):\n  if fuel==0:\n   break\n  else:\n   fuel+=lst[i]-1\n   distance+=1\n print(distance+fuel)", "for _ in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n res = 0\n gas = a[0]\n for i in range(1, len(a)):\n  if gas <= 0:\n   break\n  else:\n   gas -= 1\n   res += 1\n   gas += a[i]\n print(res + gas)", "for t in range(int(input())):\n n = int(input())\n lst = list(map(int, input().split()))\n s = lst[0]\n dis = 0\n for i in range(1, len(lst)):\n  if s <= 0:\n   break\n  s = s - 1 + lst[i]\n  dis += 1\n print(s + dis)\n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n lst=list(map(int,input().split()))\n s=lst[0]\n \n dis=0\n for i in range(1,len(lst)):\n  \n  if s<=0:\n    break\n  s=s-1+lst[i]\n  \n  dis+=1\n  \n print(s+dis)", "for _ in range(int(input())):\n n = int(input())\n ar = list(map(int, input().split()))\n res = 0\n gas = ar[0]\n for i in range(1, len(ar)):\n  if gas==0:\n   break\n  else:\n   gas -= 1\n   gas += ar[i]\n   res += 1\n res += gas\n print(res)", "t = int(input())\nfor i in range(t):\n flag = 1\n n = int(input())\n f = [ int(i) for i in input().split()]\n gas = 0\n for i in range(len(f)):\n  gas += f[i]\n  if gas==0:\n   print(i)\n   flag = 0\n   break\n  gas -= 1\n if flag:\n  print(sum(f))", "T=int(input())\nfor i in range(T):\n N=int(input())\n F=input().split()\n Gas=int(F[0])\n Distance=0\n while Gas!=0:\n  Distance+=1\n  try:\n   Gas=Gas+int(F[Distance])-1\n  except:\n   Gas-=1\n print(Distance)", "t = int(input())\nfor _ in range(t):\n n = int(input())\n arr = list(map(int, input().split()))\n d=0\n fuel=0\n for i in range(n):\n  fuel+=arr[i]\n  if fuel==0:\n   break\n  d+=1\n  fuel-=1\n if fuel==0:\n  print(d)\n else:\n  print(d+fuel)\n", "t=int(input())\nfor i in range(t):\n n=int(input())\n \n f=list(map(int, input().strip().split()))\n current_gasoline=0\n dist=0\n for cars in range(1, n+1):\n  current_gasoline+=f[cars-1]\n  if current_gasoline==0:\n   break\n  f[cars-1]=0\n  \n  dist+=1\n  current_gasoline-=1 \n  \n   \n  \n dist+=current_gasoline\n \n print(dist)\n  \n \n  \n  \n  \n  \n  \n \n \n  \n\n  \n\n  \n  \n \n \n \n \n"]