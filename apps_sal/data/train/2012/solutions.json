["n = int(input())\nif n%4 > 1:\n  print(-1)\nelse:\n  a = [n+1>>1]*n\n  for i in range(n//4):\n    j = i*2\n    a[j], a[j+1], a[-2-j], a[-1-j] = j+2, n-j, j+1, n-1-j\n  print(' '.join(map(str, a)))", "n=int(input())\n\nL=[0]*(n+1)\n\nX=[False]*(n+1)\n\nif(n%4!=0 and n%4!=1):\n    print(-1)\n\nelse:\n    for i in range(1,n+1):\n        if(X[i]):\n            continue\n        X[i]=True\n        X[n-i+1]=True\n        for j in range(i+1,n+1):\n            if(X[j]):\n                continue\n            X[j]=True\n            X[n-j+1]=True\n            L[i]=j\n            L[n-i+1]=n-j+1\n            L[j]=n-i+1\n            L[n-j+1]=i\n            break\n        if(n%4==1):\n            L[n//2+1]=n//2+1\n    for i in range(1,n):\n        print(L[i],end=\" \")\n    print(L[n])\n        \n", "n = int(input())\nif n % 4 > 1: print(-1)\nelse:\n    k = n // 2\n    t = [0] * n\n    for i in range(0, k, 2):\n        t[i] = str(i + 2)\n    for i in range(1, k, 2):\n        t[i] = str(n - i + 1)\n    if n & 1:\n        k += 1\n        t[k - 1] = str(k)\n    for i in range(k, n, 2):\n        t[i] = str(n - i - 1)\n    for i in range(k + 1, n, 2):\n        t[i] = str(i)\n    print(' '.join(t))", "'''\nCreated on\n\n@author: linhz\n'''\nimport sys\nusedNum=0\nn=int(input())\np=[0 for i in range(n+1)]\nusedNum=0\nif n%4==3 or n%4==2:\n    print(-1)\nelse:\n    i=1\n    j=n\n    a=1\n    b=n\n    while j>i:\n        p[i]=a+1\n        p[i+1]=b\n        p[j]=b-1\n        p[j-1]=a\n        i+=2\n        j-=2\n        a+=2\n        b-=2\n    if j==i:\n        p[i]=a\n    ans=\"\"\n    for i in range(1,n+1):\n        ans+=str(p[i])+\" \"\n    print(ans)", "from itertools import permutations\nfrom sys import stdin\n\n\ndef checkit(vector, upto=-1):\n    if upto == -1:\n        upto = len(vector)\n    for i in range(0, upto):\n        if vector[vector[i] - 1] != len(vector) - (i + 1) + 1:\n            return False\n    return True\n\n\ndef calculate(n):\n    numbers = list(range(1, n + 1))\n    result = [0] * n\n    for i in range(0, n):\n        if result[i] != 0: continue\n        if i > 0 and checkit(result, i): continue\n\n        expected = n - i\n\n        for v in numbers:\n            if v - 1 == i and expected != v:\n                continue\n\n            if v == expected:\n                result[v-1] = v\n                numbers.remove(v)\n                break\n            elif result[v - 1] == expected:\n                numbers.remove(v)\n                result[i] = v\n                break\n            elif result[v - 1] == 0:\n                assert expected in numbers\n                result[i] = v\n                result[v - 1] = expected\n                numbers.remove(v)\n                numbers.remove(expected)\n                break\n\n    return result\n\ndef calculate_v2(n):\n    result = [0] * n\n    first_sum = n + 2\n    second_sum = n\n\n    nf = n\n    i = 0\n    while nf > first_sum // 2:\n        result[i] = first_sum - nf\n        result[i + 1] = nf\n        nf -= 2\n        i += 2\n\n    if n % 2 == 1:\n        result[i] = i + 1\n\n    i = n - 1\n    while i > n // 2:\n        result[i] = i\n        result[i-1] = second_sum - i\n        i -= 2\n\n    return result\n\n\ndef main():\n        number = int(stdin.readline())\n        result = calculate_v2(number)\n        if not checkit(result):\n            print(-1)\n        else:\n            print(\" \".join([str(v) for v in result]))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\n\n\n\nif n % 4 > 1:\n\n    print(-1)\n\n    return\n\n\n\na = [i for i in range(0, n+1)]\n\nfor i in range(1, n//2+1, 2):\n\n    p, q, r, s = i, i+1, n-i,n-i+1\n\n    a[p], a[q], a[r], a[s] = a[q], a[s], a[p], a[r]\n\n\n\ndef check(arr):\n\n    for i in range(1, n+1):\n\n        k = arr[i]\n\n        if arr[arr[k]] != n-k+1:\n\n            return False\n\n    return True\n\n\n\n# print(check(a))\n\nprint(*a[1:])\n\n", "n=int(input())\nif n%4==2 or n%4==3:\n        print(-1);return\nres,i=[0]*n,0\nfor i in range(0,n//2,2):\n    res[i],res[i+1]=i+2,n-i\n    res[n-i-1],res[n-i-2]=n-i-1,i+1\n    i+=2\nif n%4==1:res[n//2]=n//2+1\nprint(*res)", "n = int(input())\nif n%4 > 1:\n    print(-1)\n    return\na = [(n+1) // 2] * n\nfor i in range(n//4):\n    j = 2*i\n    a[j], a[j+1], a[-j-2], a[-j-1] = j+2, n-j, j+1, n-j-1\nprint(' '.join(map(str, a)))\n", "import sys\nfrom collections import deque\nn = int(input())\nif n % 4 == 2 or n % 4 == 3:\n    print('-1')\n    return\n\narr = [None] * (n + 1)\nqt = deque([i for i in range(1, n + 1)])\nmark = set()\nwhile qt:\n    while qt and qt[0] in mark:\n        qt.popleft()\n    if not qt:\n        break\n    a = qt.popleft()\n    while qt and qt[0] in mark:\n        qt.popleft()\n    if not qt:\n        break\n    b = qt.popleft()\n    for i in range(4):\n        mark.add(a) \n        mark.add(b)\n        arr[a] = b\n        arr[b] = n - a + 1\n        a = b\n        b = arr[b]\n\nfor i in range(1, n + 1):\n    if not arr[i]:\n        arr[i] = a\n        break\nprint(' '.join(map(str, arr[1:])))\n", "n=int(input())\nif n==1:\n\tprint (1)\n\treturn\nif n%4>1:\n\tprint (-1)\n\treturn\nans=[-1]*n\nleft=n\nstart=n-2\nnums=1\nnume=n\nwhile left>=4:\n\tans[start]=nums\n\tans[nums-1]=nums+1\n\tans[nums]=nume\n\tans[nume-1]=nume-1\n\tstart-=2\n\tnums+=2\n\tnume-=2\n\tleft-=4\n\t# print (ans)\nif left==1:\n\tans[start+1]=start+2\nprint (*ans)", "n=int(input())\nif (n//2)&1:\n\tprint(-1)\nelse:\n\tans=[0]*(n+1)\n\tfor i in range(1,(n//2)+1,2):\n\t\tans[i]=i+1\n\t\tans[i+1]=n-i+1\n\t\tans[n-i+1]=n-i\n\t\tans[n-i]=i\n\tif n%2:\n\t\tans[(n//2)+1]=(n//2)+1\n\tprint(*ans[1:])\n", "n=int(input())\nif(n%4>1):\n    print(-1)\nelse:\n    ans=[0]*(n+1)\n    i,j,a,b=1,n,1,n\n    while(i<j and a<=n and b>=1):\n        ans[i],ans[j]=a+1,b-1\n        ans[i+1],ans[j-1]=b,a\n        i+=2\n        j-=2\n        a+=2\n        b-=2\n    if(i==j):\n        ans[i]=a\n    for i in range(1,n+1):\n        print(ans[i],end=' ')\n        "]