["# cook your dish here\nt=int(input())\nfor i in range(0,t):\n    p=input()\n    l=list(p)\n    for j in range(0,len(l)):\n        l[j]=int(l[j])\n        l[j]=l[j]-2\n    for j in range(0,len(l)):\n        l[j]=str(l[j])\n    q=''.join(l)\n    print(q)", "t=int(input())\nfor i in range(t):\n    n=input()\n    l=len(n)\n    list1=list(n)\n    str1=\"\"\n    for j in range(l):\n        str1+=str(int(list1[j])-2)\n    print(str1)", "# cook your dish here\nfor _ in range(int(input())):\n    n = input()\n    for i in n:\n        print((int(i)-2),end=\"\")\n    print()\n        ", "for _ in range(int(input())):\n    s = list(str(input()))\n    for i in range(len(s)):s[i] = int(s[i])-2\n    print(''.join([str(i) for i in s]))", "try:\n    for i in range(int(input())):\n        a=int(input())\n        b=str(a)\n        c=list(b)\n        for i in range(len(c)):\n            c[i]=int(c[i])\n        ab=[]\n        for i in c:\n            i=i-2\n            ab.append(i)\n        for i in ab:\n            print(i,end='')\n        print('')\nexcept:\n    pass", "# cook your dish here\nfor t in range(int(input())):\n    n = input()\n    num = \"\"\n    for c in n:\n        num+=str(int(c)-2)\n    \n    print(num)\n", "# cook your dish here\nfor _ in range(int(input())):\n    n = input()\n    res=\"\"\n    for i in n:\n        res += str(int(i)-2)\n    print(res)", "# cook your dish here\nfor t in range(int(input())):\n    n = input()\n    num = \"\"\n    for c in n:\n        num+=str(int(c)-2)\n    \n    print(num)\n", "t = int(input())\r\nfor z in range(t):\r\n    N = map(str,input())\r\n    s = ''\r\n    for i in N:\r\n        s+=str(int(i)-2)\r\n    print(s)", "def fun():\r\n\tT=int(input())\r\n\tfor i in range(T):\r\n\t\tx=input()\r\n\t\tst=str(\"\")\r\n\t\tfor j in x:\r\n\t\t\tn=str(int(j)-2)\r\n\t\t\tst+=n\r\n\t\t\t\r\n\t\tprint(st)\r\n\t\t\t\r\nfun()", "# cook your dish here\ntest_cases = int(input())\n\n\nfor t in range(test_cases):\n    password = input()\n    r = ''\n    for i in range(len(password)):\n        r = r + str(int(password[i]) - 2)\n\n    print(r)\n", "def password(n):\n    num=str(n)\n    hack=\"\"\n    for i in num:\n        hack=hack+str(int(i)-2)\n    print(hack)\n    \n    \nfor _ in range(int(input())):\n    n=int(input())\n    password(n)", "# cook your dish here\ntry:\n    for t in range(int(input())):\n        n=input()\n        m=list(n)\n        for i,j in enumerate(m):\n            m[i]=str(int(j)-2)\n        print(''.join(m))\nexcept EOFError:\n    pass", "# cook your dish here\nfor _ in range(int(input())): \n    s=input() \n    for i in s: \n        print(int(i)-2,end=\"\")\n    print(\"\")    ", "t = int(input())\r\nans = []\r\nfor _ in range(t):\r\n    n = input()\r\n    a = []\r\n    place = 1\r\n    for i in n:\r\n        a.append(str(int(i)-2))\r\n    a= ''.join(a)\r\n    ans.append(a)\r\nfor _ in ans:\r\n    print(_)\r\n", "# cook your dish here\nt=int(input())\nwhile t:\n    n=int(input())\n    l=[]\n    while n>0:\n        temp = n%10\n        n//=10\n        \n        l.append(temp)\n    for i in range(len(l)):\n        l[i]-=2\n    s=\"\"\n    l.reverse()\n    for i in l:\n        s+=str(i)\n    print(s)\n    t-=1", "try:\n    cases=int(input())\n    for _ in range(cases):\n    \tl=''\n    \tm=input()\n    \tfor i in range(len(m)):\n    \t\tl+=str(int(m[i])-2)\n    \tprint(l)\n\nexcept:\n    pass\n", "# cook your dish here\n# cook your dish here\nt = int(input())\nfor _ in range(t):\n    num = input()\n    l = [str(int(x)-2) for x in num]\n    ans = \"\".join(l)\n    print(ans)\n", "# cook your dish here\nfor _ in range(int(input())):\n\ts = input()\n\ta = \"\"\n\tfor i in s:\n\t\ta = a+str(int(i)-2)\n\tprint(a)", "# cook your dish here\n# https://www.codechef.com/ABCC2020/problems/PASSHACK\nfor _ in range(int(input())):\n    digits = list(input())\n    inc, out = 0, \"\"\n    while inc < len(digits):\n        out += str(int(digits[inc])-2)\n        inc += 1\n    print(out)", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: list(map(int,input().split()))\r\nmif    =lambda: list(map(float,input().split()))\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n=si()\r\n    ans = \"\"\r\n    for i in range(len(n)) :\r\n        ans = ans + str(int(n[i])-2)\r\n    print(ans)\r\n", "# cook your dish here\n#Author : Ashutosh Wagh, Codechef : ashutosh0903\nfor _ in range(int(input())) :\n    n = int(input())\n    s = str(n)\n    l = len(s)\n    ans = \"\"\n    for i in range(l) :\n        ans = ans + str(int(s[i])-2)\n    print(ans)\n", "# cook your dish here\n'''\n2\n\n3527\n\n47269\n\n3<p<10 :: p>99 and p<10**10\n1 \u2264 t \u2264 1000\n'''\ntry:\n    T = int(input())\n    if T>=1 and T<=1000:\n        for i in range(T):\n            num= input()\n            if len(num)>3 and len(num)< 10**10:\n                arr=[]\n                for x in num:\n                    arr.append(int(x)-2)\n                arr=list(map(str,arr))\n                res=''.join(arr)\n                print(res)\nexcept Exception:\n    pass", "try:\r\n    t = int(input().strip())\r\n    for abc in range(t):\r\n        n = list(input().strip())\r\n        if n == []:\r\n            n = list(input().strip())\r\n        for i in range(len(n)):\r\n            if int(n[i]) == 1:\r\n                n[i] = '0'\r\n            else:\r\n                n[i] = int(n[i])-2\r\n        for i in n:\r\n            print(i, end='')\r\n        print('\\n')\r\nexcept Exception:\r\n    pass", "for _ in range(int(input())):\r\n    s=input()\r\n    a=[int(s[i])-2 for i in range(len(s))]\r\n    for i in range(len(s)):\r\n        print(a[i],end=\"\")\r\n    print()"]