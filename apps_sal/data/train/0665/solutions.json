["# cook your dish here\nt=int(input())\nfor _ in range(t):\n n,m=list(map(int,input().split()))\n r=list(map(int,input().split()))\n rating=[[r[i]]*(m) for i in range(n)]\n ranking=[[0]*m for i in range(n)]\n for i in range(n):\n  diff=list(map(int,input().split()))\n  for j in range(m):\n   rating[i][j]+=diff[j]\n   if j+1<m:\n    rating[i][j+1]=rating[i][j]\n    \n for i in range(m):\n  rate=[[j,rating[j][i]] for j in range(n)]\n  rate=sorted(rate,key=lambda x: x[1],reverse=True)\n  c=1\n  gap=0\n  for j in range(n):\n   if j>0 and rate[j-1][1]==rate[j][1]:\n    gap+=1\n   if j>0 and rate[j-1][1]!=rate[j][1]:\n    c+=1+gap\n    gap=0\n   ranking[rate[j][0]][i]=c \n   \n count=0\n for i in range(n):\n  rate=rating[i].copy()\n  i1=rate.index(max(rate))\n  rank=ranking[i].copy()\n  i2=rank.index(min(rank))\n  if i1!=i2:\n   count+=1\n print(count)\n", "t=int(input())\nfor _ in range(t):\n n,m=list(map(int,input().split()))\n r=list(map(int,input().split()))\n rating=[[r[i]]*(m) for i in range(n)]\n ranking=[[0]*m for i in range(n)]\n for i in range(n):\n  diff=list(map(int,input().split()))\n  for j in range(m):\n   rating[i][j]+=diff[j]\n   if j+1<m:\n    rating[i][j+1]=rating[i][j]\n    \n for i in range(m):\n  rate=[[j,rating[j][i]] for j in range(n)]\n  rate=sorted(rate,key=lambda x: x[1],reverse=True)\n  c=1\n  gap=0\n  for j in range(n):\n   if j>0 and rate[j-1][1]==rate[j][1]:\n    gap+=1\n   if j>0 and rate[j-1][1]!=rate[j][1]:\n    c+=1+gap\n    gap=0\n   ranking[rate[j][0]][i]=c \n   \n count=0\n for i in range(n):\n  rate=rating[i].copy()\n  i1=rate.index(max(rate))\n  rank=ranking[i].copy()\n  i2=rank.index(min(rank))\n  if i1!=i2:\n   count+=1\n #print(rating)\n #print(ranking)\n print(count)\n #print(\"---------------------------------------------------\")\n  \n  \n    \n    \n", "def check(rat,rank_mont):\n c=0\n for i in range(len(rank_mont)):\n  if(rat[i]!=rank_mont[i]):\n   c+=1\n return c\n\ndef ranking(rat,rank_min,mont,n,m):\n rat_sort=[]\n \n for i in range(m):\n  rat_sort.append(sorted(rat[i],reverse=True,key=lambda x : x[0]))\n\n for i in range(m):\n  r,j=1,0\n  while(j<n):\n   key=rat_sort[i][j][0]\n   c=0\n   while(j<n):\n    if(key==rat_sort[i][j][0]):\n     if(rank_min[rat_sort[i][j][1]-1]>r):\n      rank_min[rat_sort[i][j][1]-1]=r\n      mont[rat_sort[i][j][1]-1]=i+1\n     c+=1\n    else:\n     break\n    j+=1\n   r+=c\n   \nfor T in range(int(input())):\n n,m=list(map(int,input().split()))\n initial_rating=list(map(int,input().split()))\n rat=[list(map(int,input().split())) for i in range(n)]\n\n rat_player,m_rat_player=[],[]\n for i in range(n):\n  m_rat,x=0,[]\n  for j in range(m):\n   x.append(initial_rating[i]+rat[i][j])\n   initial_rating[i]=x[j]\n   if(m_rat<x[j]):\n    m_rat=x[j]\n    month=j+1\n  rat_player.append(x)\n  m_rat_player.append(month)\n\n rat_month=[]\n for i in range(m):\n  x=[]\n  for j in range(n):\n   x.append([rat_player[j][i],j+1])\n  rat_month.append(x)\n\n rank_min,mont=[501]*(n),[0]*(n)\n\n ranking(rat_month,rank_min,mont,n,m)\n \n count=check(m_rat_player,mont)\n\n print(count)\n \n   \n", "# cook your dish here\n#Author : Ashutosh Wagh, Codechef : ashutosh0903\nfor _ in range(int(input())):\n n,m=list(map(int,input().split()))\n r=list(map(int,input().split()))\n mat=[[] for i in range(n)]\n ranking=[[] for i in range(n)]\n for i in range(n):\n  l=list(map(int,input().split()))\n  cur = r[i]\n  for j in l:\n   cur+=j\n   mat[i].append(cur)\n for i in range(m):\n  ar=[]\n  for j in range(n):\n   ar.append([mat[j][i],j])\n  ar.sort(reverse=True,key=lambda x:x[0])\n  prev=-1\n  r=1\n  x=1\n  for j in range(n):\n   if ar[j][0]!=prev:\n    r=x\n   ranking[ar[j][1]].append(r)\n   prev=ar[j][0]\n   x+=1\n brt=[]\n brk=[]\n for i in range(n):\n  brt.append(mat[i].index(max(mat[i])))\n for i in range(n):\n  brk.append(ranking[i].index(min(ranking[i])))\n ans=0\n for i in range(n):\n  if brk[i]!=brt[i]: ans+=1\n print(ans)\n\n", "# cook your dish here\nt=int(input())\nfor i in range(0,t):\n ans=0;\n nm=input().split()\n \n n,m=int(nm[0]),int(nm[1])\n rows,cols=m,n\n a=[[(0,0) for i in range(cols)] for j in range(rows)]\n\n max_rating_month=[0 for i in range(cols)]\n curr_rating=list(map(int,input().strip().split()))[:n] \n\n\n for i in range(0,n):\n  line=list(map(int,input().strip().split()))[:m]\n  max=0\n  for j in range(0,m):\n   curr_rating[i]+=line[j]\n   if curr_rating[i] >max :\n    max_rating_month[i]=j\n    max=curr_rating[i]\n   a[j][i]=(i,curr_rating[i])\n ranking=[[0 for i in range(n)] for j in range(m)]\n for i in range(m):\n  a[i].sort(key=lambda x:-x[1])\n  rank=1\n  ranking[i][a[i][0][0]]=1\n  for j in range(1,n):\n   if a[i][j-1][1]==a[i][j][1]:\n    ranking[i][a[i][j][0]]=rank;\n   else:\n    ranking[i][a[i][j][0]]=j+1;\n    rank=j+1;\n for i in range(n):\n  best_rank=501\n  best_rank_month=0\n  for j in range(m):\n   if ranking[j][i]<best_rank:\n    best_rank=ranking[j][i]\n    best_rank_month=j\n  if best_rank_month!=max_rating_month[i]:\n   ans+=1\n print(ans)\n \n", "for _ in range(int(input())):\n n,m=list(map(int,input().split()))\n rating = list(map(int,input().split()))\n arr=[]\n for i in range(n):\n  arr.append(list(map(int,input().split())))\n minrank = [float(\"inf\")]*n\n index2 = [0]*n\n bestscore = [float(\"-inf\")]*n\n index1=[0]*n\n for i in range(m):\n  for j in range(n):\n   rating[j]+=arr[j][i]\n  st=sorted(rating,reverse=True)\n  f=[]\n  dindex = dict()\n  for j in range(len(st)):\n   if st[j] in dindex:\n    continue\n   \n   dindex[st[j]]=j\n  \n  for j in range(len(rating)):\n   f.append(dindex[rating[j]])\n  \n  for ii in range(len(f)):\n   if minrank[ii]>f[ii]:\n    minrank[ii]=f[ii]\n    index1[ii]=i\n  \n   \n  for ii in range(len(rating)):\n   if bestscore[ii] < rating[ii]:\n    bestscore[ii]=rating[ii]\n    index2[ii]= i\n count=0\n \n for (i,j) in zip(index2,index1):\n  if i!=j:\n   count+=1\n print(count)\n  \n  \n", "import sys\nfrom collections import defaultdict\nt=int(input())\n\nfor _ in range(t):\n n,m=list(map(int,input().split()))\n a=list(map(int,input().split()))\n adj=[]\n for _ in range(n):\n  x=list(map(int,input().split()))\n  adj.append(x)\n\n rating=defaultdict(lambda:-1)\n\n\n rank=[[-1 for i in range(m+1)]for j in range(n)]\n\n\n b=[[-1 for i in range(m+1)]for j in range(n)]\n for i in range(n):\n  b[i][0]=a[i]\n for i in range(0,n):\n  for j in range(1,m+1):\n   b[i][j]=b[i][j-1]+adj[i][j-1]\n\n for j in range(1,m+1):\n  g=[]\n  d={}\n  for i in range(n):\n   g.append(b[i][j])\n  z=sorted(g,reverse=True) \n  c=0\n  for i in z:\n   if(i not in d):\n    c+=1\n    d[i]=c\n   else:\n    c+=1\n  for i in range(n):\n   rank[i][j]=d[b[i][j]]\n\n for i in range(n):\n  mx=-1\n  for x in range(1,m+1):\n   mx=max(mx,b[i][x])\n  for j in range(1,m+1):\n   if(b[i][j]==mx):\n    rating[i]=j\n    break\n #print(rating)\n #for i in b:\n  #print(*i)\n c=0\n '''for i in b:\n     print(*i)\n    print()\n    for i in rank:\n     print(*i)'''\n \n for i in range(n):\n  ans=[]\n  mi=sys.maxsize\n  for x in range(1,m+1):\n   mi=min(mi,rank[i][x])\n  for j in range(1,m+1):\n   if(rank[i][j]==mi):\n    if(j!=rating[i]):\n     c+=1\n    break\n\n print(c)\n\n\n", "# cook your dish here\ndef __starting_point():\n t = int(input())\n while t>0:\n  N, M = map(int, input().split())\n  R = list(map(int, input().split()))\n  Ratings = []\n  Rankings = [[float(\"inf\") for i in range(M)] for j in range(N)]\n  for i in range(N):\n   temp_ratings = list(map(int, input().split()))\n   temp = []\n   initial_rating = R[i]\n   for rate in temp_ratings:\n    temp.append(initial_rating+rate)\n    initial_rating += rate\n   Ratings.append(temp)\n  for i in range(M):\n   temp = []\n   for j in range(N):\n    temp.append(Ratings[j][i])\n   temp = sorted(temp, reverse = True)\n   dic = {}\n   for j in range(N):\n    if temp[j] not in dic:\n     dic[temp[j]] = j+1\n   for j in range(N):\n    Rankings[j][i] = dic[Ratings[j][i]]\n  \n  cnt = 0\n  for i in range(N):\n   best_rating = 0\n   best_rating_index = -1\n   best_ranking = float(\"inf\")\n   best_ranking_index = -1\n   for j in range(M):\n    if Ratings[i][j] > best_rating:\n     best_rating = Ratings[i][j]\n     best_rating_index = j\n    if Rankings[i][j] < best_ranking:\n     best_ranking = Rankings[i][j]\n     best_ranking_index = j\n   if best_rating_index != best_ranking_index:\n    cnt += 1\n    \n  print(cnt)\n  \n  t -= 1\n__starting_point()", "for i in range(int(input())):\n n, m = map(int, input().split())\n ratings = list(map(int, input().split()))\n ratings_after = [[] for _ in range(m)]\n max_rating_months = []\n \n for i in range(n):\n  curr_changes = list(map(int, input().split()))\n  best_rating = ratings[i] + curr_changes[0]\n  curr_r, rat_month = best_rating, 0\n  \n  ratings_after[0].append(curr_r)\n  for k in range(1, m):\n   curr_r += curr_changes[k]\n\n   if curr_changes[k] > 0:\n    if curr_r > best_rating:\n     best_rating = curr_r\n     rat_month = k\n   \n   ratings_after[k].append(curr_r)\n  max_rating_months.append(rat_month)\n \n rankings = [[] for _ in range(n)]\n \n for x in range(m):\n  month = ratings_after[x]\n  new_mon = sorted(month, reverse=True)\n  \n  for y in range(n):\n   rankings[y].append(new_mon.index(month[y]))\n \n index, counter = 0, 0\n \n for player in rankings:\n  best = player.index(min(player))\n  \n  if best != max_rating_months[index]:\n   counter += 1\n  index += 1\n\n print(counter)", "import math\n\ntry:\n for _ in range(int(input())):\n  n,m = list(map(int, input().split()))\n  p = list(map(int, input().split()))\n  points = [[0 for i in range(m+1)]for i in range(n)]\n  for i in range(n):\n   points[i][0] = p[i]\n  mx = [[0,0] for i in range(n)]\n  arr = [[3000,0] for i in range(n)]\n  for i in range(n):\n   lst = list(map(int,input().split()))\n   for j in range(1, m+1):\n    points[i][j] = points[i][j-1]+lst[j-1]\n   points[i] = points[i][1:]\n   arr[i][1] = points[i][0]\n  for i in range(m):\n   rank =[]\n   for j in range(n):\n    rank.append(points[j][i])\n   rank = sorted(rank, reverse = True)\n   for j in range(n):\n    pos =rank.index(points[j][i])\n    if(pos<arr[j][0]):\n     mx[j][1] = i\n     arr[j][0] = pos\n   for j in range(n):\n    if(points[j][i]>arr[j][1]):\n     mx[j][0] = i\n     arr[j][1] = points[j][i]\n  ans = 0\n  for x in mx:\n   if(x[0]!= x[1]):\n    ans+=1\n  print(ans)\nexcept EOFError as e:\n pass\n", "for _ in range(int(input())):\n n,m=map(int,input().split())\n rating=list(map(int,input().split()))\n track=[[] for i in range(n)]\n cng=[]\n for i in range(n):\n  cng.append(list(map(int,input().split())))\n for i in range(m):\n  for j in range(n):\n   rating[j]+=cng[j][i]\n  x=sorted(enumerate(rating),key=lambda x: x[1],reverse=True)\n  r=1\n  if i!=0:\n   if x[0][1]>track[x[0][0]][0] or r<track[x[0][0]][1]:\n    if x[0][1]>track[x[0][0]][0] and r<track[x[0][0]][1]:\n     track[x[0][0]][2]=False\n    else:\n     track[x[0][0]][2]=True\n    if x[0][1]>track[x[0][0]][0]:\n     track[x[0][0]][0]=x[0][1]\n    if r<track[x[0][0]][1]:\n     track[x[0][0]][1]=r\n   for k in range(1,n):\n    if x[k][1]!=x[k-1][1]:\n     r=k+1\n    if x[k][1]>track[x[k][0]][0] or r<track[x[k][0]][1]:\n     if x[k][1]>track[x[k][0]][0] and r<track[x[k][0]][1]:\n      track[x[k][0]][2]=False\n     else:\n      track[x[k][0]][2]=True\n     if x[k][1]>track[x[k][0]][0]:\n      track[x[k][0]][0]=x[k][1]\n     if r<track[x[k][0]][1]:\n      track[x[k][0]][1]=r\n  else:\n   track[x[0][0]].append(x[0][1])\n   track[x[0][0]].append(1)\n   track[x[0][0]].append(False)\n   for k in range(1,n):\n    if x[k][1]!=x[k-1][1]:\n     r=k+1\n    track[x[k][0]].append(x[k][1])\n    track[x[k][0]].append(r)\n    track[x[k][0]].append(False)\n   \n out=0\n for i in track:\n  if i[2]:\n   out+=1\n print(out)", "for _ in range(int(input())):\n n,m = map(int,input().split())\n scores = list(map(int,input().split()))\n \n usr_mnthly = {}\n usr_ranks = {}\n \n for i in range(n):\n  scrs = list(map(int,input().split()))\n  usr_mnthly[i] = [scores[i]]\n  usr_ranks[i] = []\n  for j in scrs:\n   usr_mnthly[i].append(usr_mnthly[i][-1]+j)\n  \n #print(usr_mnthly)\n \n for mnth in range(1,m+1):\n  mnthly = {i:usr_mnthly[i][mnth] for i in range(n)}\n  mnthly = sorted(mnthly.items(), key = lambda x:x[1], reverse = True)\n  prev = -9999999999\n  rank = 0\n  pos=1\n  for key,value in mnthly:\n   if value == prev :\n    usr_ranks[key].append(rank)\n    pos+=1\n   else:\n    rank+=pos\n    usr_ranks[key].append(rank)\n    pos=1\n   prev=value\n #print(usr_ranks)\n    \n ans = 0\n for i in range(n):\n  mnths = usr_mnthly[i][1:]\n  ranks = usr_ranks[i]\n  if ranks.index(min(ranks)) != mnths.index(max(mnths)):\n   ans+=1\n print(ans)", "# cook your dish here\nfor _ in range(int(input())):\n n,m=map(int,input().split())\n r=list(map(int,input().split()))\n a=[]\n for i in range(n):\n  b=list(map(int,input().split()))\n  count=r[i]\n  for j in range(m):\n   count+=b[j]\n   b[j]=count\n  a.append(b)\n b=[]\n p=0\n for i in range(n):\n  p=[0]*m\n  b.append(p)\n for i in range(m):\n  c=[]\n  for j in range(n):\n   c.append(a[j][i])\n  c.sort(reverse=True)\n  for j in range(n):\n   b[j][i]=c.index(a[j][i])\n count=0\n for i in range(n):\n  p=a[i].index(max(a[i]))\n  q=b[i].index(min(b[i]))\n  if p!=q:\n   count+=1\n print(count)", "# cook your dish here\nn=int(input())\n\nfor k in range(n):\n lst=input().split()\n N=int(lst[0])\n M=int(lst[1])\n\n rating=[]\n rating.append(list(map(int,input().split())))\n\n change=[None for i in range(N)]\n for i in range(N):\n  change[i]=list(map(int,input().split()))\n\n for i in range(1,M+1):\n  rating.append([])\n \n  for j in range(0, N):\n   rating[i].append(rating[i-1][j] + change[j][i-1])\n \n MaxRating = []\n MaxRatingMonth= []\n\n for j in range(N):\n  MaxRating.append(rating[1][j])\n  MaxRatingMonth.append(1)\n  \n  for i in range(2,M+1):\n   if rating[i][j]>MaxRating[j]:\n    MaxRating[j]=rating[i][j]\n    MaxRatingMonth[j]=i\n MaxRankingMonth= []\n newrating=[]\n\n Ranking=[[None for j in range(N)] for i in range(0,M)]\n for i in range(1,M+1):\n  newrating.append(sorted(rating[i],reverse=True))\n for i in range(1,M+1):\n  for j in range(N):\n   Ranking[i-1][j]=(newrating[i-1].index(rating[i][j])+1)\n  \n MaxRankingMonth= []\n MaxRanking=[]\n\n for j in range(N):\n  MaxRankingMonth.append(1)\n  MaxRanking.append(Ranking[0][j])\n  \n  for i in range(2,M+1):\n   if Ranking[i-1][j]<MaxRanking[j]: \n    MaxRanking[j]=Ranking[i-1][j]\n    MaxRankingMonth[j]=i\n   \n count=0\n for i in range(N):\n  if MaxRankingMonth[i]!=MaxRatingMonth[i]:\n   count+=1\n print(count)", "# cook your dish here\nn=int(input())\n\nfor k in range(n):\n lst=input().split()\n N=int(lst[0])\n M=int(lst[1])\n\n rating=[]\n rating.append(list(map(int,input().split())))\n\n change=[]\n for i in range(N):\n  change.append([])\n  change[i]=list(map(int,input().split()))\n\n for i in range(1,M+1):\n  rating.append([])\n  for j in range(0, N):\n   rating[i].append(rating[i-1][j] + change[j][i-1])\n \n MaxRating = []\n MaxRatingMonth= []\n\n for j in range(N):\n  MaxRating.append(rating[1][j])\n  MaxRatingMonth.append(1)\n  \n  for i in range(2,M+1):\n   if rating[i][j]>MaxRating[j]:\n    MaxRating[j]=rating[i][j]\n    MaxRatingMonth[j]=i\n Ranking = []\n MaxRankingMonth= []\n newrating=[]\n\n for i in range(1,M+1):\n  newrating.append(sorted(rating[i],reverse=True))\n  Ranking.append([])\n \n  for j in range(N):\n   Ranking[i-1].append(newrating[i-1].index(rating[i][j])+1)\n  \n MaxRankingMonth= []\n MaxRanking=[]\n\n for j in range(N):\n  MaxRankingMonth.append(1)\n  MaxRanking.append(Ranking[0][j])\n  \n  for i in range(2,M+1):\n   if Ranking[i-1][j]<MaxRanking[j]: \n    MaxRanking[j]=Ranking[i-1][j]\n    MaxRankingMonth[j]=i\n   \n count=0\n for i in range(N):\n  if MaxRankingMonth[i]!=MaxRatingMonth[i]:\n   count+=1\n print(count)", "def getRanking(ratingList,n,m):\n rank = []\n array2d = [[None for i in range(n)] for j in range(m)]\n # print(array2d)\n for i in range(m): #months\n  helper2d = [[None for i in range(2)] for j in range(n)]\n  # print(helper2d)\n  for j in range(n):\n   helper2d[j][0] = j+1\n   helper2d[j][1] = ratingList[j][i]\n  # helper2d = zip(*helper2d)\n  helper2d = sorted(helper2d,reverse=True,key=lambda x:x[1])\n  arr = [x for x in range(1,n+1)]\n  for k in range(1,n):\n   if helper2d[k][1] == helper2d[k-1][1]:\n    arr[k] = arr[k-1]\n  # print(helper2d)\n  for l in range(n):\n   # print(\"l and i\",l,i)\n   array2d[i][helper2d[l][0]-1] = arr[l]\n for l in range(n):\n  minimum = float('inf')\n  minimumIndex = None\n  for o in range(m):\n   if minimum > array2d[o][l]:\n    minimum = array2d[o][l]\n    minimumIndex = o+1\n\n  rank.append(minimumIndex)\n\n  # helper2d = zip(*helper2d)\n # print(array2d)\n # print(arr)\n # print(rank)\n\n return rank\n\n\n\nt = int(input())\nfor _ in range(t):\n n,m = list(map(int,input().split()))\n r = list(map(int,input().split()))\n c = [ None for j in range(n)]\n for i in range(n):\n  c[i] = list(map(int,input().split()))\n ratingList = [None for i in range(n)]\n # print(ratingList)\n for i in range(n):\n  temp = []\n  temp.append(r[i]+c[i][0])\n  for j in range(1,m):\n   temp.append(temp[j-1]+c[i][j])\n  ratingList[i] = temp\n playerRatings = []\n for i in range(n):\n  maximum = float('-inf')\n  maximumMonth = None\n  for j in range(m):\n   if ratingList[i][j] > maximum:\n    maximum = ratingList[i][j]\n    maximumMonth = j+1\n  playerRatings.append(maximumMonth)\n playerRanking = getRanking(ratingList,n,m)\n count = 0\n for i in range(n):\n  if playerRanking[i] != playerRatings[i]:\n   count += 1\n print(count)\n # print(playerRatings)\n # print(playerRanking)\n", "# cook your dish here\nfor _ in range(int(input())):\n n,m = list(map(int,input().split()))\n org_ratings = list(map (int,input().split()))\n l = []\n count = 0\n for i in range(n):\n  l.append(list(map(int,input().split())))\n for i in range(n):\n  for j in range(m):\n   if(j == 0):\n    l[i][j] = l[i][j] + org_ratings[i]\n   else:\n    l[i][j] = l[i][j] + l[i][j-1]\n #print(l)\n ranks = [[-1 for i in range(len(l[0]))] for j in range(len(l))]\n #print(ranks)\n for i in range(m):\n  l2 = []\n  for j in range(n):\n   l2.append([l[j][i], j+1])\n   \n  \n  l2.sort(reverse=True, key=lambda x: x[0])\n  \n  for ind in range(len(l2)):\n   if ind == 0:\n    pos = 1\n   else:\n    if l2[ind][0] == l2[ind-1][0]:\n     pos = ranks[l2[ind-1][1]-1][i]\n    else:\n     pos = ind + 1\n   ranks[l2[ind][1]-1][i] = pos\n #print(ranks)\n for i in range(n):\n  #print(ranks[i].index(min(ranks[i])))\n  #print(l[i].index(max(l[i])))\n  if l[i].index(max(l[i])) != ranks[i].index(min(ranks[i])):\n   count+= 1\n print(count)\n   \n \n \n  \n", "import sys\nfrom collections import defaultdict\nt=int(input())\n\nfor _ in range(t):\n n,m=list(map(int,input().split()))\n a=list(map(int,input().split()))\n adj=[]\n for _ in range(n):\n  x=list(map(int,input().split()))\n  adj.append(x)\n\n rating=defaultdict(lambda:-1)\n\n\n rank=[[-1 for i in range(m+1)]for j in range(n)]\n\n\n b=[[-1 for i in range(m+1)]for j in range(n)]\n for i in range(n):\n  b[i][0]=a[i]\n for i in range(0,n):\n  for j in range(1,m+1):\n   b[i][j]=b[i][j-1]+adj[i][j-1]\n\n for j in range(1,m+1):\n  g=[]\n  d={}\n  for i in range(n):\n   g.append(b[i][j])\n  z=sorted(g,reverse=True) \n  c=0\n  for i in z:\n   if(i not in d):\n    c+=1\n    d[i]=c\n   else:\n    c+=1\n  for i in range(n):\n   rank[i][j]=d[b[i][j]]\n\n for i in range(n):\n  mx=-1\n  for x in range(1,m+1):\n   mx=max(mx,b[i][x])\n  for j in range(1,m+1):\n   if(b[i][j]==mx):\n    rating[i]=j\n    break\n #print(rating)\n #for i in b:\n  #print(*i)\n c=0\n '''for i in b:\n     print(*i)\n    print()\n    for i in rank:\n     print(*i)'''\n \n for i in range(n):\n  ans=[]\n  mi=sys.maxsize\n  for x in range(1,m+1):\n   mi=min(mi,rank[i][x])\n  for j in range(1,m+1):\n   if(rank[i][j]==mi):\n    if(j!=rating[i]):\n     c+=1\n    break\n\n print(c)\n\n\n", "# cook your dish here\nimport sys\n\nt=int(input())\nfor _ in range(t):\n N,M= list(map(int,input().split()))\n C=[[0 for x in range(N)]for y in range(M+1)]\n C[0] = list(map(int,input().split()))\n\n rating=[0 for x in range(N)]\n rank = [sys.maxsize for x in range(N)]\n\n for i in range(N):\n  change=list(map(int,input().split()))\n  rate = 0\n  month = 0\n  for j in range(1,M+1):\n   C[j][i]=C[j-1][i]+change[j-1]\n   if C[j][i] > rate:\n    rate=C[j][i]\n    month=j\n\n  rating[i]=month\n\n\n mon=[0 for x in range(N)]\n for i in range(1,M+1):\n  X=sorted(C[i],reverse=True)\n  for j in range(N):\n   temp=X.index(C[i][j])\n   if temp < rank[j] :\n    rank[j]=temp\n    mon[j]=i\n\n pl=0\n for i in range(N):\n  if mon[i]==rating[i]:\n   pl+=1\n\n print(N-pl)\n\n\n\n\n\n\n\n\n\n", "def check(month_rat,month_rank,n):\n c=0\n for i in range(1,n+1):\n  if(month_rat[i]!=month_rank[i]):\n   c+=1\n return c\ndef ranking(r,m_rank,month_rank,m,n):\n for i in range(m):\n  rank=1\n  c=0\n  for val in r[i]:\n   rank+=c\n   c=0\n   for j in range(n):\n    if(val==d[i+1,j+1]):\n     if(m_rank[j+1] > rank):\n      m_rank[j+1]=rank\n      month_rank[j+1]=(i+1)\n     c+=1\n    \nfor _ in range(int(input())):\n n,m=list(map(int,input().split()))\n r=list(map(int,input().split()))\n c=[list(map(int,input().split())) for i in range(n)]\n rating=[]\n d={}\n m_rank={}\n m_rat={}\n month_rank={}\n month_rat={}\n f=1\n for i in range(m):\n  x=[]\n  for j in range(n):\n   if(i==0):\n    d[(i+1),(j+1)]=r[j]+c[j][i]\n    x.append(d[i+1,j+1])\n   else:\n    d[(i+1),(j+1)]=d[i,(j+1)]+c[j][i]\n    x.append(d[i+1,j+1])\n   if(f):\n    m_rank[j+1]=501\n    m_rat[j+1]=d[i+1,j+1]\n    month_rat[j+1]=(i+1)\n   else:\n    if(m_rat[j+1] < d[i+1,j+1]):\n     m_rat[j+1]=d[i+1,j+1]\n     month_rat[j+1]=(i+1)\n  x=list(set(x))\n  x.sort()\n  rating.append(x[::-1])\n  f=0\n ranking(rating,m_rank,month_rank,m,n)\n count=check(month_rat,month_rank,n)\n print(count)\n   \n   \n"]