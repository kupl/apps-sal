["n = int(input())\nr = [[] for i in range(n + 1)]\nr[1] = [0]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    r[a].append(b)\n    r[b].append(a)\nt = list(map(int, input().split()))\nu, v = [0] * (n + 1), [0] * (n + 1)\nfor i, j in enumerate(t, 1):\n    if j < 0: u[i] = - j\n    else: v[i] = j\nt, p = [1], [0] * (n + 1)\nwhile t:\n    a = t.pop()\n    for b in r[a]:\n        if p[b]: continue\n        p[b] = a\n        t.append(b)\nk = [len(t) for t in r]\nt = [a for a in range(2, n + 1) if k[a] == 1]\nx, y = [0] * (n + 1), [0] * (n + 1)\nwhile t:\n    a = t.pop()\n    b = p[a]\n    x[b] = max(x[b], u[a])\n    y[b] = max(y[b], v[a])\n    k[b] -= 1\n    if k[b] == 1:\n        t.append(b)\n        if u[b] > 0:\n            if x[b] - y[b] > u[b]:\n                u[b], v[b] = x[b], x[b] - u[b]\n            else: u[b], v[b] = y[b] + u[b], y[b]\n        else:\n            if y[b] - x[b] > v[b]:\n                u[b], v[b] = y[b] - v[b], y[b]\n            else: u[b], v[b] = x[b], x[b] + v[b]\nprint(u[1] + v[1])", "n = int(input())\nr = [[] for i in range(n + 1)]\nr[1] = [0]\nfor i in range(n - 1):\n    a, b = map(int, input().split())\n    r[a].append(b)\n    r[b].append(a)\nt = list(map(int, input().split()))\nu, v = [0] * (n + 1), [0] * (n + 1)\nfor i, j in enumerate(t, 1):\n    if j < 0: u[i] = - j\n    else: v[i] = j\n# print(u,v)\nt, p = [1], [0] * (n + 1)\nwhile t:\n    a = t.pop()\n    for b in r[a]:\n        if p[b]: continue\n        p[b] = a\n        t.append(b)\nk = [len(t) for t in r]\nt = [a for a in range(2, n + 1) if k[a] == 1]\nx, y = [0] * (n + 1), [0] * (n + 1)\nwhile t:\n    a = t.pop()\n    b = p[a]\n    x[b] = max(x[b], u[a])\n    y[b] = max(y[b], v[a])\n    k[b] -= 1\n    if k[b] == 1:\n        t.append(b)\n        if u[b] > 0:\n            if x[b] - y[b] > u[b]:\n                u[b], v[b] = x[b], x[b] - u[b]\n            else: u[b], v[b] = y[b] + u[b], y[b]\n        else:\n            if y[b] - x[b] > v[b]:\n                u[b], v[b] = y[b] - v[b], y[b]\n            else: u[b], v[b] = x[b], x[b] + v[b]\nprint(u[1] + v[1])", "from sys import stdin, stdout,setrecursionlimit\nfrom collections import defaultdict,deque,Counter,OrderedDict\nfrom heapq import heappop,heappush\nimport threading\n\nn = int(stdin.readline())\n\ngraph = [set() for x in range(n)]\n\nfor x in range(n-1):\n    a,b = [int(x) for x in stdin.readline().split()]\n    a -= 1\n    b -= 1\n\n    graph[a].add(b)\n    graph[b].add(a)\n\nvals = [int(x) for x in stdin.readline().split()]\n\nbruh = [(0,-1)]\n\nfor x in range(n):\n    num,p = bruh[x]\n    for y in graph[num]:\n        if y != p:\n            bruh.append((y,num))\n\nresult = [-1 for x in range(n)]\n\nfor v,parent in bruh[::-1]:\n    nP = 0\n    nN = 0\n    for x in graph[v]:\n        if x != parent:\n            p,n = result[x]\n            nP = max(nP,p)\n            nN = max(nN, n)\n    nN = max(nN, nP+vals[v])\n    nP = max(nP, nN-vals[v])\n            \n    result[v] = (nP,nN)\n\nng, ps = result[0]\n\nvals[0] += ps - ng\n\nstdout.write(str(ng+ps))\n"]