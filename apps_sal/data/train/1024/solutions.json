["# cook your dish here\nextra, less = 0,0\nfor _ in range(int(input())):\n    sli,mem,sma,luc = list(map(int, input().split()))\n    total = sma\n    t = sma\n    while mem > 1:\n        t *= luc\n        total += t\n        mem -= 1\n    if total <= sli:\n        extra += sli-total\n        print('POSSIBLE',sli-total)\n    else:\n        less += total-sli\n        print('IMPOSSIBLE',total-sli)\nif extra >= less:\n    print('POSSIBLE')\nelse:\n    print('IMPOSSIBLE')\n    \n        \n        \n \n", "import math\r\nimport random\r\nimport re\r\nimport os\r\nimport sys\r\ndef cake(c):\r\n    k=c[2]\r\n    t=c[3]\r\n    s=0\r\n    for i in range(c[1]):\r\n      s+=k\r\n      k*=t\r\n    if s>c[0]:\r\n      s-=c[0]\r\n      c.append(\"IMPOSSIBLE\")\r\n      c.append(-s)\r\n    else:\r\n      s=c[0]-s\r\n      c.append(\"POSSIBLE\")\r\n      c.append(s)\r\n    return (list(str(c[4])+str(c[5]))) \r\ndef main():\r\n    n = int(input())\r\n    c=[[]]*n\r\n    res=[]\r\n    m=[]\r\n    cou=0\r\n    for i in range(n):\r\n      c[i] = list(map(int, input().rstrip().split()))\r\n      res.append(cake(c[i]))\r\n    for i in range(len(c)):\r\n        print(*c[i][-2:-1], end=\" \")\r\n        print(abs(*c[i][-1:]))\r\n        m.append(*c[i][-1:])\r\n    cou=sum(m)\r\n    if cou>0:\r\n        print(\"POSSIBLE\")\r\n    else:\r\n        print(\"IMPOSSIBLE\")\r\n    return 0\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()", "s1=0;s2=0\nfor _ in range(int(input())):\n    l=[]\n    l=list(map(int,input().split()))\n    s=int(l[0])\n    n=int(l[1])\n    k=int(l[2])\n    r=int(l[3])\n    if(r!=1):\n        s-=(k*((r**n)-1))//(r-1)\n    else:\n        s-=k*n\n    if(s>=0):\n        print(\"POSSIBLE\",s)\n    else:\n        print(\"IMPOSSIBLE\",abs(s))\n    if(s>0):\n        s1+=s\n    else:\n        s2+=abs(s)\nif(s1>=s2):\n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")", "# cook your dish here\nsTot = 0\nfor _ in range(int(input())):\n    s,n,k,r = map(int,input().split())\n    if r == 1:\n        sn = k*n\n    else:\n        sn = k*(r**n-1)/(r-1)\n    if sn<=s:\n        print(\"POSSIBLE\",int(s-sn))\n        sTot += s-sn\n    else:\n        print(\"IMPOSSIBLE\",int(sn-s))\n        sTot -= sn-s\nif sTot >= 0:\n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")", "# cook your dish here\nover = 0\nmissing = 0\n\nfor i in range(int(input())):\n\ts, n, k, r = list(map(int, input().split()))\n\n\ttotalSlicesNeeded = k\n\tcurrNeeded = k\n\tfor i in range(n-1):\n\t\tcurrNeeded *= r\n\t\ttotalSlicesNeeded += currNeeded\n\n\tif totalSlicesNeeded > s:\n\t\tmissing += totalSlicesNeeded - s\n\t\tprint(f\"IMPOSSIBLE {totalSlicesNeeded - s}\")\n\telse:\n\t\tover += s - totalSlicesNeeded\n\t\tprint(f\"POSSIBLE {s - totalSlicesNeeded}\")\nif over >= missing:\n\tprint(\"POSSIBLE\")\nelse:\n\tprint(\"IMPOSSIBLE\")", "p,ip = 0,0\nfor _ in range(int(input())):\n    s,n,k,r = map(int,input().split())\n    sm = 0\n    while n != 0:\n        sm += k\n        k = r*k\n        n -= 1\n    if (s-sm) >= 0:\n        print('POSSIBLE',s-sm)\n        p += (s-sm)\n    else:\n        print('IMPOSSIBLE',abs(s-sm))\n        ip += abs(s-sm)\nif p >= ip:\n    print('POSSIBLE')\nelse:\n    print('IMPOSSIBLE')", "# cook your dish here\nfrom math import pow\ncheck_possible =0\nfor _ in range(int(input())):\n    s,n,k,r = map(int,input().split())\n    if r>1:\n        total_slices = k*(pow(r,n)-1)/(r-1)\n    else:\n        total_slices = k*n\n    left_slices = s-total_slices\n    check_possible +=left_slices\n    if left_slices>=0:\n        print('POSSIBLE',int(left_slices))\n    else:\n        print('IMPOSSIBLE',int(-(left_slices)))\nif check_possible>=0:\n    print('POSSIBLE')\nelse:\n    print('IMPOSSIBLE')", "#python 3.7.1\nc,d=0,0\nfor _ in range(int(input())):\n  s,n,k,r = input ().split()\n  s,n,k,r = int(s),int(n),int(k),int(r)\n  sum,g,x=0,k,0\n  a=k \n  for i in range(int(n-1)):\n   a=a*r\n   g=g+a \n  if(g<s):\n   x=s-g\n   print(\"POSSIBLE\",x)\n   c=c+x\n  else:\n    x=g-s\n    print(\"IMPOSSIBLE\",x)\n    d=d+x\nif c>d:\n  print(\"POSSIBLE\")\nelse:\n  print(\"IMPOSSIBLE\")\n", "total,possible,impossible=0,0,0\r\nfor i in range(int(input())):\r\n    N,S,K,R=list(map(int,input().split()))\r\n    total =total+N\r\n    points=K\r\n    sum=K\r\n    for j in range(S-1):\r\n        points=points*R\r\n        sum+=points\r\n        \r\n    if sum<=N:\r\n        possible=possible+N-sum\r\n        print('POSSIBLE',N-sum)\r\n    else:\r\n        impossible=impossible+sum-N\r\n        print('IMPOSSIBLE',sum-N)\r\n\r\nif possible>=impossible:\r\n    print('POSSIBLE')\r\nelse:\r\n    print('IMPOSSIBLE')\r\n", "\r\nt=int(input())\r\ngrandsum=0\r\nwhile t:\r\n    l=list(map(int,input().strip().split()))\r\n    s=l[0]\r\n    n=l[1]\r\n    k=l[2]\r\n    r=l[3]\r\n    res=k\r\n    \r\n    for i in range(1,n):\r\n        k=k*r\r\n        res=res+k\r\n    if res<=s:\r\n        print(\"POSSIBLE\",str(s-res))\r\n        grandsum+=(s-res)\r\n    else:\r\n        print(\"IMPOSSIBLE\",str(abs(s-res)))\r\n        grandsum-=abs(s-res)\r\n\r\n    t-=1\r\nif grandsum<0:\r\n    print(\"IMPOSSIBLE\")\r\nelse:\r\n    print(\"POSSIBLE\")\r\n\r\n", "# cook your dish here\nt=int(input())\nextra=0 \nrequired=0\nwhile t>0:\n    s,n,k,r=list(map(int,input().split()))\n    sum1=k\n    pro=k\n    for i in range(1,n):\n        pro=pro*r  \n        sum1+=pro \n    z=s-sum1\n    if z>=0:\n        extra+=z \n        print(\"POSSIBLE\",z)\n    else:\n        z=z*(-1)\n        required+=z \n        print(\"IMPOSSIBLE\",z)\n    t-=1\nif extra-required>=0:\n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")", "t=int(input())\nsum=0\nfor _ in range(t):\n    s,n,k,r=map(int,input().split())\n    if r==1:\n        k=s- n*k\n    else:\n        k=s- k*((r**n -1)//(r-1))\n    sum+=k\n    if k<0:\n        print('IMPOSSIBLE',-k)\n    else:\n        print('POSSIBLE',k)\nif sum<0:\n    print('IMPOSSIBLE')\nelse:\n    print('POSSIBLE')", "# cook your dish here\nt = int(input())\n\nsum1 = 0\nlist2 = list()\nlist3 = list()\nlist4 = list()\n\nwhile t > 0:\n    s, n, k, r = input().split()\n    s = int(s)\n    list3.append(s)\n    n = int(n)\n    k = int(k)\n    r = int(r)\n    list1 = []\n    sum1 = s  + sum1\n    ans = k\n    while n > 0:\n        list1.append(ans)\n        #print(ans)\n        ans = ans*r\n        n-=1\n    m = sum(list1)\n    list2.append(m)\n    z = s - m\n    list4.append(z)        \n    t-=1\nx = sum(list2)\n\nfor i in list4:\n    if i > 0:\n        print('POSSIBLE',i)\n    else:\n        print('IMPOSSIBLE',-i)\n              \n\nif x > sum1:\n    print('IMPOSSIBLE')\nelse:\n    print('POSSIBLE')\n\n   \n", "x = int(input())\r\nli = []\r\nfor i in range(x):\r\n    temp = 0\r\n    s,n,k,r = map(int, input().split())\r\n    for j in range(n):\r\n        if j == 0:\r\n            temp += k\r\n        else:\r\n            k = k*r \r\n            temp += k\r\n    if temp > s:\r\n        print(\"IMPOSSIBLE {0}\".format(temp-s))\r\n        li.append(s-temp)\r\n    else:\r\n        print(\"POSSIBLE {0}\".format(s-temp))\r\n        li.append(s-temp)\r\nif sum(li) >= 0:\r\n    print(\"POSSIBLE\")\r\nelse:\r\n    print(\"IMPOSSIBLE\")", "poss=0\r\nimposs=0\r\nfor _ in range(int(input())):\r\n    s,n,k,r=list(map(int,input().split()))\r\n    a=[0]*n\r\n    a[0]=k\r\n    for i in range(1,n):\r\n        a[i]=a[i-1]*r\r\n    if sum(a)<=s:\r\n        x=s-sum(a)\r\n        print('POSSIBLE '+str(x))\r\n        poss=poss+x\r\n    else:\r\n        y=abs(s-sum(a))\r\n        print('IMPOSSIBLE '+str(y))\r\n        imposs=imposs+y\r\n    \r\nif imposs<=poss:\r\n    print('POSSIBLE')\r\nelse:\r\n    print('IMPOSSIBLE')\r\n", "fam=int(input())\r\nextra,req=0,0\r\nfor i in range(fam):\r\n    s,n,k,r=list(map(int,input().split()))\r\n    if r>1:\r\n        sm=(k*(r**n-1))//(r-1)\r\n    else:\r\n        sm=k*n\r\n    if sm<=s:\r\n        print(\"POSSIBLE\",s-sm)\r\n        extra+=(s-sm)\r\n    else:\r\n        print(\"IMPOSSIBLE\",abs(s-sm))\r\n        req+=(abs(s-sm))\r\n#print(extra,req)\r\nif extra>=req:\r\n    print(\"POSSIBLE\")\r\nelse:\r\n    print(\"IMPOSSIBLE\")\r\n", "# cook your dish here\ndef fun1(S,N,K,R):\n    total=K\n    for _ in range(1,N):\n        K=K*R\n        total+=K\n    return (S-total)    \n\nfinal=0\nT=int(input())\n\nfor i in range(T):\n    S,N,K,R=map(int,input().split())\n    slices_required=fun1(S,N,K,R)\n    if(slices_required >= 0):\n        print(\"POSSIBLE\",end=\" \")\n        print(slices_required)\n    else:\n        print(\"IMPOSSIBLE\",end=\" \")\n        print(abs(slices_required))\n    final+=slices_required\nif(final>=0):\n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")\n", "value = 0\r\nval = int(input())\r\nfor i in range(val):\r\n  s,n,a,b = list(map(int,input().split()))\r\n  sum = a\r\n  total=a\r\n  n-=1\r\n  while(n):\r\n    sum = sum * b\r\n    total+=sum\r\n    n-=1\r\n  if(s>=total):\r\n    print(\"POSSIBLE \",s-total)\r\n    value+=s-total\r\n  else:\r\n    print(\"IMPOSSIBLE \",total-s)\r\n    value-=total-s\r\nif(value>=0):\r\n  print(\"POSSIBLE\")\r\nelse:\r\n  print(\"IMPOSSIBLE\")\r\n", "import math\r\ntry:\r\n\tt=int(input())\r\n\ttot=0\r\n\tout=[]\r\n\twhile(t):\r\n\t\ts,n,k,r = map(int,input().split())\r\n\t\tkin = k\r\n\r\n\t\ta=[]\r\n\t\ta.append(k)\r\n\r\n\t\tfor i in range(n-1):\r\n\t\t\tk = k*r\r\n\t\t\ta.append(k)\r\n\t\tk = sum(a)\r\n\t# \tk = k - kin\r\n\t# \tprint(k)\r\n\t\tif s>k:\r\n\t\t\t\r\n\t\t\ts=s-k\r\n\t\t\tout.append(f'POSSIBLE {s}')\r\n\t\t\ttot+=s\r\n\t\telse:\r\n\t\t\t\r\n\t\t\ts=k-s\r\n\t\t\tout.append(f'IMPOSSIBLE {s}')\r\n\t\t\ttot-=s\r\n\t\tt-=1\r\n\tfor i in out:\r\n\t\tprint(i)\r\n\tif tot>0:\r\n\t\tprint('POSSIBLE')\r\n\telse:\r\n\t\tprint('IMPOSSIBLE')\r\n\r\nexcept EOFError as e:\r\n    print(end=\"\")", "# cook your dish here\n# Let's hack this code.\n\nfrom sys import stdin, stdout\nimport math\nfrom itertools import permutations, combinations\nfrom collections import defaultdict\nfrom bisect import bisect_left \n\nmod = 1000000007\n\ndef L():\n    return list(map(int, stdin.readline().split()))\n\ndef In():\n    return map(int, stdin.readline().split())\n\ndef I():\n    return int(stdin.readline())\n\ndef printIn(ob):\n    return stdout.write(str(ob)+'\\n')\n\ndef powerLL(n, p):\n    result = 1\n    while (p):\n        if (p&1):\n            result = result * n % mod\n        p = int(p / 2)\n        n = n * n % mod\n    return result\n\n#--------------------------------------\n\ndef myCode():\n    ext = 0\n    short = 0\n    s,n,k,r = In()\n    share = k\n    dist = k\n    for i in range(n-1):\n        dist = dist*r\n        share = share + dist\n    if share <= s:\n        ext = s-share\n        print(\"POSSIBLE \"+str(ext))\n    else:\n        short = share-s\n        print(\"IMPOSSIBLE \"+str(short))\n        \n    return ext,short\n\ndef main():\n    extra = 0\n    shortage = 0\n    for t in range(I()):\n        e,s = myCode()\n        extra +=e\n        shortage += s\n    if extra >=shortage:\n        print(\"POSSIBLE\")\n    else:\n        print(\"IMPOSSIBLE\")\n    \ndef __starting_point():\n    main()\n__starting_point()", "list1=[]\r\nt=int(input())\r\nfor i in range(t):\r\n    s,n,k,r=list(map(int,input().split()))\r\n    p=0\r\n    for i in range(n):\r\n        a=r**i\r\n        p=p+a*k\r\n    c=s-p\r\n    list1.append(c)\r\n    if s>=p:\r\n        print(\"POSSIBLE {0}\".format(c))   \r\n    else:\r\n        print(\"IMPOSSIBLE {0}\".format(abs(c)))\r\ns=0\r\nfor j in range(len(list1)):\r\n    s+=list1[j]\r\nif s==0 or s>0:\r\n    print(\"POSSIBLE\")    \r\nelse:\r\n    print(\"IMPOSSIBLE\")\r\n", "# cook your dish here\nt=int(input())\npo=0\nne=0\nfor i in range(t):\n    s,n,k,r=list(map(int,input().split()))\n    sum=0\n    for j in range(n):\n        sum=sum+k\n        k=k*r\n    if(s>=sum):\n        remaining_slices=s-sum\n        print(\"POSSIBLE\",remaining_slices)\n        po=po+remaining_slices\n    else:\n        remaining_slices=sum-s\n        print(\"IMPOSSIBLE\",remaining_slices)\n        ne=ne+remaining_slices\n#print(po,ne)\nif(po>=ne):\n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")\n", "try:\n    t=int(input())\n    required=0\n    avaliable=0\n    for i in range(t):\n        s,n,k,r=list(map(int,input().strip().split(' ')))\n        total=k\n        for i in range(n-1):\n            total+=k*r\n            k=k*r\n        if total >s:\n            print(\"IMPOSSIBLE\",total-s)\n            required+=total-s\n        else:\n            print(\"POSSIBLE\",s-total)\n            avaliable+=s-total\n    if required<=avaliable:\n        print(\"POSSIBLE\")\n    else:\n        print(\"IMPOSSIBLE\")\nexcept:\n    pass", "T = int(input())\nif (T >= 1 and T <= 50):\n    pos = 0\n    imp = 0\n    for i in range(0, T):\n        s, n, k, r = [int(x) for x in input().split()][:4]\n        if ((n >= 1 and n <= 15) and (s >= 1 and s <= 10000000000) and (k >= 1 and k <= 5) and (r >= 1 and r <= 5)):\n            total = k\n            for j in range(0, n - 1):\n                k = k * r\n                total = total + k\n            mid = s - total\n            if (total > s):\n                imp = imp + abs(mid)\n                print('IMPOSSIBLE {}'.format(abs(mid)))\n            else:\n                pos = pos + abs(mid)\n                print('POSSIBLE {}'.format(abs(mid)))\n    if (pos > imp):\n        print('POSSIBLE')\n    else:\n        print('IMPOSSIBLE')", "# cook your dish here\nn = int(input())\nsum1 = 0\nsum2= 0\nfor i in range(0,n):\n    arr=[]\n  \n    arr = list(map(int,input().split()))\n    lst =  [arr[2]]\n    for i in range(1,arr[1]):\n        a = lst[-1]*arr[3]\n        lst.append(a)\n    total = sum(lst)\n    diff = arr[0] - total\n    if diff >=0:\n        sum1 = sum1+diff\n        print(\"POSSIBLE \"+str(diff))\n    else:\n        sum2 = sum2+diff\n        print(\"IMPOSSIBLE \"+str(abs(diff)))\ncheck = sum1+sum2\nif check>=0:\n    \n    print(\"POSSIBLE\")\nelse:\n    print(\"IMPOSSIBLE\")"]