["import math\nfor i in range(int(input())):\n a,b = map(int,input().split())\n print(math.gcd(a,b))", "# cook your dish here\nt=int(input())\ndef gcd(a,b):\n big=max(a,b)\n small=min(a,b)\n while small:\n  big,small=small,big%small\n return(big)\nfor __ in range(t):\n a,b=list(map(int, input(). split(\" \")))\n print(gcd(a,b))\n", "def hcfnaive(a,b): \n if(b==0): \n  return a \n else: \n  return hcfnaive(b,a%b) \nfor _ in range(int(input())):\n num1,num2=map(int,input().split(' '))\n print(hcfnaive(num1, num2))", "for i in range(int(input())):\n a,b = list(map(int, input().split( )))\n lis=[ ]\n if a >= b :\n  for i in range(1,a+1):\n   if a%i==0 :\n    if b%i==0:\n     lis.append(i)\n else :\n  for i in range(1,b+1):\n   if b%i==0 :\n    if a%i==0:\n     lis.append(i)\n print(lis[-1])\n", "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n a,b=map(int,input().split())\n print(math.gcd(a,b))", "def compute_hcf(x, y):\n\n# choose the smaller number\n if x > y:\n  smaller = y\n else:\n  smaller = x\n for i in range(1, smaller+1):\n  if((x % i == 0) and (y % i == 0)):\n   hcf = i\n return hcf\n\nfor i in range(int(input())):\n x,y=map(int,input().split())\n print(compute_hcf(x,y))", "# cook your dish here\nfrom math import gcd\nmod = 10**9+7\nfor _ in range(int(input())):\n a,b = list(map(int,input().split()))\n # c = pow(a,b-2,b)\n # print(gcd(a,c))\n print(gcd(a,b))", "def computeGCD(x, y): \n \n while(y): \n  x, y = y, x % y \n \n return x\n\nfor i in range(int(input())):\n a,b = list(map(int,input().split()))\n print(computeGCD(a,b))\n", "import math\nT=int(input())\nfor i in range(T):\n A,B=map(int,input().split())\n print(\"\",end=\"\")\n print(math.gcd(A,B)) \n", "# cook your dish here\ndef hcf(x,y):\n if(y==0):\n  return x\n else:\n  return hcf(y,x%y)\ni=int(input())\nfor j in range(i):\n m=input()\n m=m.split()\n a=int(m[0])\n b=int(m[1])\n if(a>=b):\n  print(hcf(a,b))\n else:\n  print(hcf(b,a))\n", "for i in range(int(input())):\n a,b = input().split()\n a = int(a)\n b = int(b)\n \n if a>b:\n  a,b = b,a\n\n r = 1\n for e in range(1, a+1):\n  if a % e == 0 and b % e == 0:\n   r = e\n print(r)", "def gcd(x, y):\n if x==0:\n  return y\n return gcd(y%x, x)\nfor _ in range(int(input())):\n a, b=map(int, input().split())\n print(gcd(a, b))", "def compute_hcf(x,y):\n if x > y:\n  smaller = y\n else:\n  smaller = x\n lst=[]\n for i in range(1, smaller+1):\n  if((x % i == 0) and (y % i == 0)):\n   lst.append(i)\n return (max(lst))\nt=int(input())\nfor i in range(t):\n a,b=map(int,input().split())\n print(compute_hcf(a,b))", "t=int(input())\nfor i in range(t):\n [a,b]=list(map(int,input().split()))\n gr=0\n for j in range(1,max(a,b)+1):\n  if a%j==0 and b%j==0:\n   gr=j\n print(gr) ", "# cook your dish here\ndef gcd(a,b):\n a,b=max(a,b),min(a,b)\n while b!=0:\n  a,b=b,a%b\n return a\nfor a0 in range(int(input())):\n a,b=list(map(int, input().split()))\n print(gcd(a,b))", "n=int(input())\nl=[]\nans=[]\ni=1\nfor p in range(0,n):\n ll=[]\n #l.append(list(map(int,input().split(\" \"))))\n a,b=input().split(\" \")\n a=int(a)\n b=int(b)\n ll.append(a)\n ll.append(b)\n l.append(ll)\nfor j in range(0,len(l)):\n if l[j][0]==0:\n  gcd=l[j][1]\n if l[j][1]==0:\n  gcd=l[j][0]\n if l[j][0]== l[j][1]:\n  gcd= l[j][0]\n while(i <= l[j][0] and i <= l[j][1]):\n  if(l[j][0] % i == 0 and l[j][1] % i == 0):\n   gcd = i\n  i = i + 1\n ans.append(gcd)\n \nfor k in ans:\n print(k)\n\n \n \n \n", "# cook your dish here\nt=int(input())\nwhile(t>0):\n m,n=map(int,input().split())\n if(m>n):\n  for i in range(n,0,-1):\n   if(m%i==0 and n%i==0):\n    print(i)\n    break\n else:\n  for i in range(m,0,-1):\n   if(m%i==0 and n%i==0):\n    print(i)\n    break\n t-=1", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n a, b = map(int, input().split())\n print(math.gcd(a, b))", "\ndef gcd(a,b): \n if(b==0): \n  print(a) \n else: \n  return gcd(b,a%b)\ntest=int(input())\nfor i in range(test):\n a,b=map(int,input().split())\n gcd(a,b)", "# cook your dish here\ndef l(a,b):\n if(b==0):\n  return a\n else:\n  return l(b,a%b)\nfor _ in range(int(input())):\n a,b=map(int,input().split())\n print(l(a,b))", "# cook your dish here\nt = int(input())\nwhile t>0:\n t-=1\n a,b = list(map(int,input().split()))\n ans = 1\n for i in range(2,a):\n  if a%i==0 and b%i==0:\n   ans = i\n print(ans) \n \n", "for _ in range(int(input())):\n a,b=map(int,input().split())\n ans=1\n for i in range(1,max(a,b)):\n  if(a%i==0 and b%i==0):\n   if(i>ans):\n    ans=i\n print(ans)", "# cook your dish here\nimport sys\nimport numpy as np\n#data = sys.stdin.readline()\n#first = True\n#a, b = [], []\nfor line in sys.stdin.readlines():\n #if first:\n T = int(line.replace(\"\\n\", \"\"))\n #first = False\n #continue\n break\n \n #l = line.replace(\"\\n\", \"\").split(' ') \n #a.append(int(l[0]))\n #b.append(int(l[1]))\n \n#a, b = np.array(a), np.array(b)\n\nfor i in range(T):\n print(1)"]