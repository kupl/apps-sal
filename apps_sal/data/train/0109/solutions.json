["import sys\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ngo = lambda : 1/0\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}{}\".format(i, sep))\nINF = float('inf')\nMOD = int(1e9 + 7)\nYES = \"YES\"\nNO = -1\n\nfor _ in range(int(input())):\n  try:\n    n, m = read()\n    arr = read()\n    x = [0] * 65\n    \n    if sum(arr) < n:\n      print(NO)\n      go()\n  \n    for i in arr:\n      x[int(math.log2(i))] += 1\n    \n    ans = 0\n    for i in range(65):\n      if (1 << i) & n:\n        if x[i] != 0:\n          x[i] -= 1\n          continue \n\n        total = 0\n        for j in range(i):\n          total += (1 << j) * x[j]\n        \n        if total >= (1 << i):\n          temp = 1 << i \n          for j in reversed(range(i)):\n            while temp - (1 << j) >= 0 and x[j] > 0:\n              temp -= 1 << j \n              x[j] -= 1\n          continue \n        \n        j = i\n        while j < 65 and x[j] == 0:\n          j += 1\n        if j == 65:\n          print(NO)\n          go() \n        else:\n          x[j] -= 1\n          for k in range(i, j):\n            x[k] += 1\n          ans += (j - i)\n    \n    print(ans)\n\n\n  except ZeroDivisionError:\n    continue\n\n  except Exception as e:\n    print(e)\n    continue", "import math\nt = int(input())\nM2 = [1]\nfor i in range(35):\n    M2.append(M2[-1]*2)\nfor i in range(t):\n    n, m = map(int,input().split())\n    A = list(map(int,input().split()))\n    if sum(A) < n:\n        print(-1)\n    else:\n        B = [0] * 33\n        for i in range(m):\n            B[int(math.log2(A[i]))] += 1\n        # print(B[:10])\n        C = [0] * 33\n        nn = n\n        for i in range(33):\n            C[i] = nn%2\n            nn//=2\n            if nn==0:\n                break\n        # print(C)\n        b = 0\n        c = 0\n        i = 0\n        ans = 0\n        ok = 0\n        while i < len(B):\n            while i < len(B) and b >= c:\n                b += B[i] * M2[i]\n                c += C[i] * M2[i]\n                B[i]=0\n                i += 1\n            if i == len(B) and b >= c:\n                print(ans)\n                ok = 1\n                break\n            else:\n                i-=1\n                while B[i] == 0:\n                    i += 1\n                    ans += 1\n                    # print(\"ansplus\",i)\n                B[i] -= 1\n                b=0\n                c=0\n            if ok==1:\n                break"]