["from math import sqrt \n\ntest = int(input())\nfor i in range(test):\n sum = 0\n max = int(input())\n if max==1:\n  sum = 0\n elif max==2:\n  sum += 2\n else:    \n  sum = sum + 2\n  for x in range(3,max+1):\n   half = int(sqrt(x)) + 1\n   if all(x%y!=0 for y in range(2,half)):\n    sum = sum + x\n print(sum) ", "# cook your dish here\ndef primes(n):\n prime=[True]*(n+1)\n p=2\n while(p*p<=n):\n  if(prime[p]==True):\n   i=p*2\n   while(i<=n):\n    prime[i]=False\n    i+=p\n  p+=1\n sum=0\n for i in range(2,n+1):\n  if(prime[i]):\n   sum+=i\n return sum\nt=int(input())\nfor i in range(t):\n n=int(input())\n print(primes(n))\n\n", "\npr=[1]*(10**6+1)\npr[0]=pr[1]=0\nfor i in range(2,10**6+1):\n if pr[i]:\n  for j in range(i*i,10**6+1,i):\n   pr[j]=0\nans=[0]\nfor i in range(1,10**6+1):\n if pr[i]:\n  ans.append(ans[-1]+i)\n else:\n  ans.append(ans[-1])\n \nt=int(input())\nfor _ in range(t):\n n=int(input())\n print(ans[n])\n", "for i in range(int(input())):\n a = int(input())\n l = []\n for num in range(2,a + 1):  \n  if num > 1:  \n   for i in range(2,int(num**.5)+1):  \n    if (num % i) == 0:  \n     break \n   else:  \n    l.append(num)\n print(sum(l))", "def sieve(x):\n p = [1]*(x+1)\n p[0] = 0\n p[1] = 0\n \n t = 2\n while(t**2 < x):\n  if p[t] == 1:\n   for j in range(t**2, x+1, t):\n    p[j] = 0\n  t += 1\n \n return p\n\nl = sieve(10**6 +2)\ns = [0]\n\nfor i in range(1, len(l)):\n if l[i] == 1:\n  s.append(s[i-1] + i)\n else:\n  s.append(s[i-1])\n\n\nfor u in range(int(input())):\n x = int(input())\n print(s[x])", "def prime(n):\n if (n <= 1):\n  return False\n if (n <= 3):\n  return True\n if (n % 2 == 0 or n % 3 == 0):\n  return False\n\n i = 5\n while (i * i <= n):\n  if (n % i == 0 or n % (i + 2) == 0):\n   return False\n  i = i + 6\n\n return True\n\nfor _ in range(int(input())):\n n = int(input())\n summ = 0\n for i in range(1,n+1):\n  if prime(i):\n   summ += i\n print(summ)", "\ndef isPrime(n) : \n \n if (n <= 1) : \n  return False\n if (n <= 3) : \n  return True\n if (n % 2 == 0 or n % 3 == 0) : \n  return False\n i = 5\n while(i * i <= n) : \n  if (n % i == 0 or n % (i + 2) == 0) : \n   return False\n  i = i + 6\n return True\n\ndef printPrime(n):\n s=0\n for i in range(2, n + 1):\n  if isPrime(i):\n   s=s+i\n print(s)\nt=int(input())\nfor i in range(t):\n n = int(input())\n printPrime(n) \n\n\n", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n n=int(input())\n sum= 0\n if n<2:\n  pass\n elif n==2:\n  sum= 2\n else:\n  sum=2\n  for no in range(3, n + 1, 2):\n   for odd in range(3, int(sqrt(no)) + 1, 2):\n    if (no % odd) == 0:\n     break\n   else:  \n    sum+=no\n print(sum)", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n n = int(input())\n sum_of_primes = 0\n if n<2:\n  pass\n elif n==2:\n  sum_of_primes = 2\n else:\n  sum_of_primes = 2\n  for number in range(3, n + 1, 2):\n   for odd in range(3, int(sqrt(number)) + 1, 2):\n    if (number % odd) == 0:\n     break\n   else:  \n    sum_of_primes += number\n print(sum_of_primes)", "N = (10 ** 6 + 10)\ndef sieve():\n primes = [0,0] + [1] * N\n sums = 0\n for i in range(2, N):\n  if primes[i]:\n   for j in range(i*i, N, i):\n    primes[j] = 0\n prime_sums = [0] * N\n now = 0\n for i in range(2, N):\n  if primes[i]:now += i\n  prime_sums[i] = now\n return prime_sums\n\n\n\nprime = sieve()\nfor i in range(int(input())):\n print(prime[int(input())])\n\n", "# cook your dish here\ndef sieve(n):\n prime = [True for i in range(n+1)]\n p = 2\n while (p * p <= n):\n  if (prime[p] == True):\n   for i in range(p * p, n+1, p):\n    prime[i] = False\n  p += 1\n return prime\nfor u in range(int(input())):\n n=int(input())\n l=sieve(n)\n s=0\n for i in range(2,n+1):\n  if(l[i]==True):\n   s=s+i\n print(s)\n", "n=int(input())\nx=[]\nl=0\nfor i in range(n):\n m=int(input())\n for g in range(2,m+1):\n  for j in range(2,int(g**0.5)+1):\n   if g%j==0:\n    l=l+1\n  if l<=0:        \n   x.append(g) \n  l=0 \n print(sum(x))\n x.clear()\n", "try:\n def solver(n):\n  prime = [True for i in range(n+1)]\n  p = 2\n  while(p*p<=n):\n   if(prime[p]==True):\n    for i in range(p*2,n+1,p):\n     prime[i] = False\n   p+=1\n  prime[0]= False\n  prime[1] = False\n  s = 0\n  for i in range(n+1):\n   if(prime[i]):\n    s+=i\n  return s \n  \n t = int(input())\n for i in range(t):\n  n = int(input())\n  print(solver(n))\n  \n \n \n \nexcept Exception as e:\n pass", "# cook your dish here\ndef primes(n):\n count=0\n prime = [True for i in range(n+1)]\n p = 2\n while (p * p <= n):\n  if (prime[p] == True):\n   for i in range(p * p, n + 1, p):\n    prime[i] = False\n  p += 1\n for p in range(2, n + 1):\n  if prime[p]:\n   count += p\n return count\ncases = int(input())\nfor i in range(cases):\n l = int(input())\n print(primes(l))", "def sumOfPrimes(n): \n prime = [True] * (n + 1) \n p = 2\n while p * p <= n: \n  if prime[p] == True: \n   i = p * 2\n   while i <= n: \n    prime[i] = False\n    i += p \n  p += 1 \n   \n sum = 0\n for i in range (2, n + 1): \n  if(prime[i]): \n   sum += i \n return sum\nfor _ in range(int(input())):\n print(sumOfPrimes(int(input())))", "# cook your dish here\ntry:\n def isprime(n):\n  if n==1:\n   return False\n  if n==2 or n==3:\n   return True\n  if n%2==0 or n%3==0:\n   return False\n  j=5\n  while(j*j<=n):\n   if n%j==0 or n%(j+2)==0:\n    return False\n   j+=6\n  return True\n test=int(input())\n for i in range(test):\n  n=int(input())\n  s=0\n  for j in range(1,n+1):\n   if(isprime(j)):\n    s+=j\n  print(s)\nexcept Exception as e:\n print(e)", "def isprime(n):\n if n==2:\n  return 1\n for i in range(2,int(n**0.5)+1):\n  if n%i==0:\n   return 0\n return 1 \nt=int(input())\nfor z in range(t):\n n=int(input())\n s=0\n for i in range(2,n+1):\n  if isprime(i):\n   s+=i\n print(s) \n", "def primes(n):\n nums = [True for i in range(n+1)] \n lst = []\n p = 2\n while (p * p <= n): \n  if (nums[p] == True): \n   for i in range(p * p, n+1, p): \n    nums[i] = False\n  p += 1\n for p in range(2, n+1): \n  if nums[p]: \n   lst.append(p)\n return lst\nfor _ in range(int(input())):\n n = int(input())\n lst = primes(n)\n print(sum(lst))\n"]