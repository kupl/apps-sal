["for i in range(int(input())):\n t=int(input())\n n=0\n for i in range(1,t+1):\n  n=n+i\n  x=[n]\n  y=n\n  for j in range(i,t+i-1):\n   if j<t:\n    z=y+j\n   else:\n    z=y+(2*t-j-1)\n   x.append(z)\n   y=z\n  print(*x)", "for i in range(int(input())):\n n=int(input())\n t=0\n for i in range(1,n+1):\n  t=t+i\n  m=[t]\n  k=t\n  for j in range(i,n+i-1):\n   if j<n:\n    a=k+j\n   else:\n    a=k+(2*n-j-1)\n   m.append(a)\n   k=a\n  print(*m)", "try:\n T=int(input())\n P=\"\"\n for i in range (T):\n  N=int(input())\n  A=[[0 for i in range (N)]for j in range(N)]\n  a=1\n  K=0\n  for x in range(2*N):\n   if K<N:\n    i=0\n    j=K\n    for y in range (K+1):\n     if i+j==K and i>=0 and j>=0:\n      A[i][j]=a\n      i=i+1\n      j=j-1\n      a=a+1\n    K=K+1\n   else:\n    J=N-1\n    I=K-(J)\n    for y in range(2*N-K-1):\n     A[I][J]=a\n     I=I+1\n     J=J-1\n     a=a+1\n    K=K+1\n  for a in range(0,N):\n   for b in range(0,N):\n    if b!=N-1:\n     P=P+str(A[a][b])+\" \"\n    else:\n     P=P+str(A[a][N-1])+\"\\n\"\n print(P)\nexcept:\n pass", "def fill_val(i, j, n, mat):\n nonlocal val\n while j >= 0 and i < n:\n  mat[i][j] = val\n  val += 1\n  i += 1\n  j -= 1\n\nfor _ in range(int(input())):\n n = int(input())\n arr = [[0 for c in range(n)] for r in range(n)]\n val = 1\n\n for i in range(n):\n  for j in range(n):\n   if arr[i][j] == 0:\n    fill_val(i, j, n, arr)\n\n for i in range(n):\n  for j in range(n):\n   print(arr[i][j], end=\" \")\n\n  print()", "def fill_val(i, j, n, mat):\n nonlocal val\n while j >= 0 and i < n:\n  mat[i][j] = val\n  val += 1\n  i += 1\n  j -= 1\n\nfor _ in range(int(input())):\n n = int(input())\n arr = [[0 for c in range(n)] for r in range(n)]\n val = 1\n\n for i in range(n):\n  for j in range(n):\n   if arr[i][j] == 0:\n    fill_val(i, j, n, arr)\n\n for i in range(n):\n  for j in range(n):\n   print(arr[i][j], end=\" \")\n\n  print()", "# cook your dish here\ntry:\n for u in range(int(input())):\n  n = int(input())\n  li = []\n  lid = []\n  a = 1\n  t = 0\n  l = 0\n  for i in range(n*n):\n   t+=1\n   lid.append(i+1)\n   if a == t:\n    if l!=-1:\n     a+=1\n     t = 0\n    else:\n     a-=1\n     t = 0\n    li.append([int(k) for k in lid])\n    lid.clear()\n   if a==n:\n    l = -1\n  li2 = li.copy()\n  for i in li:\n   if len(li2)!=0:\n    a = 0\n    li3 = li2.copy()\n    for j in li2:\n     if a == n:\n      break\n     a+=1\n     if len(j)!=0:\n      print(j[0],end=\" \")\n      j.remove(j[0])\n    li2.clear()\n    li2 = li3.copy()\n    if len(j)!=0:\n     print()\n    else:\n     break\n    li2.remove(li2[0])\n  print()\nexcept:\n pass", "# cook your dish here\nfor i in range(int(input())):\n n=int(input())\n st=0\n for i in range(1,n+1):\n  st=st+i\n  l=[st]\n  k=st\n  for j in range(i,n+i-1):\n   if j < n:\n    x=k+j\n   else:\n    x=k+(2*n-j-1) \n   l.append(x)\n   k=x \n  print(*l)", "# cook your dish here\ntests = int(input())\nfor test in range(tests):\n n = int(input())\n\n a = [[0 for i in range(n)] for i in range(n)]\n count = 1\n for k in range(n):\n  i = 0\n  for j in range(k, -1, -1):\n   a[i][j] = count\n   count += 1\n   i += 1\n for k in range(1, n):\n  i = k\n  j = n-1\n  for i in range(k, n):\n   a[i][j] = count\n   count += 1\n   j -= 1\n\n my_str = ''\n for i in range(n):\n  for j in range(n):\n   my_str += str(a[i][j])\n   my_str += ' '\n  my_str += '\\n'\n \n print(my_str)", "for _ in range(int(input())):\n n=int(input())\n k=0\n for i in range(1,n+1):\n  k+=i\n  j=1\n  l=k\n  inc=i\n  while (i+j-1)%n:\n    print(l,end=' ')\n    l = l + inc\n    inc+=1\n    j+=1\n  while j<=n:\n   print(l,end=' ')\n   inc-=1\n   l = l + inc\n   j+=1\n  print()\n", "for _ in range(int(input())):\n n=int(input())\n st=0\n for i in range(1,n+1):\n  st=st+i\n  l=[st]\n  k=st\n  for j in range(i,n+i-1):\n   if j < n:\n    x=k+j\n   else:\n    x=k+(2*n-j-1) \n   l.append(x)\n   k=x \n  print(*l)", "\n#from sys import stdin,stdout\n#input=stdin.readline \n#import math,bisect\n#from itertools import permutations\n#from collections import Counter\n\nfor _ in range(int(input())):\n n=int(input())\n l=[[0 for i in range(n)] for j in range(n)]\n c=1\n cur=0\n while(1):\n  i=0\n  j=cur\n  while(j>=0):\n   l[i][j]=c\n   c+=1\n   j-=1\n   i+=1\n  cur+=1\n  if cur==n:\n   break\n\n cur=n-1\n curi=1\n while(1):\n  i=curi\n  j=cur\n  if curi==n:\n   break\n  while(i!=n):\n   l[i][j]=c\n   c+=1\n   i+=1\n   j-=1\n  curi+=1\n  \n\n\n for i in range(n):\n  for j in range(n):\n   print(l[i][j],end=\" \")\n  print()", "def printPattern(n):\n k=0\n for i in range(1,n+1):\n  k+=i\n  j=1\n  l=k\n  inc=i\n  while (i+j-1)%n:\n    print(l,end=' ')\n    l = l + inc\n    inc+=1\n    j+=1\n  while j<=n:\n   print(l,end=' ')\n   inc-=1\n   l = l + inc\n   j+=1\n  print()\nfor tc in range(int(input())):\n n=int(input())\n printPattern(n)\n\n", "# cook your dish here\nt=int(input())\nfor z in range(0,t):\n N=int(input())\n li=[[i for i in range(0,N)] for j in range(0,N)]\n #print(li)\n c=1\n for j1 in range(0,N):\n  i=0\n  j=j1\n  while j!=-1:\n   li[i][j]=c\n   i+=1\n   j-=1\n   c+=1\n for i1 in range(1,N):\n  j=N-1\n  i=i1\n  while i!=N:\n   li[i][j]=c\n   i+=1\n   j-=1\n   c+=1\n for i in range(0,N):\n  for j in range(0,N):\n   print(li[i][j],end=\" \")\n  print()\n   \n \n   \n  \n \n ", "# cook your dish here\nt=int(input())\nfor z in range(0,t):\n N=int(input())\n li=[[i for i in range(0,N)] for j in range(0,N)]\n #print(li)\n c=1\n for j1 in range(0,N):\n  i=0\n  j=j1\n  while j!=-1:\n   li[i][j]=c\n   i+=1\n   j-=1\n   c+=1\n for i1 in range(1,N):\n  j=N-1\n  i=i1\n  while i!=N:\n   li[i][j]=c\n   i+=1\n   j-=1\n   c+=1\n for i in range(0,N):\n  for j in range(0,N):\n   print(li[i][j],end=\" \")\n  print()\n   \n \n   \n  \n \n ", "for _ in range(int(input())):\n n=int(input())\n st=0\n for i in range(1,n+1):\n  st=st+i\n  l=[st]\n  k=st\n  for j in range(i,n+i-1):\n   if j < n:\n    x=k+j\n   else:\n    x=k+(2*n-j-1) \n   l.append(x)\n   k=x \n  print(*l)", "for _ in range(int(input())):\n n=int(input())\n x=1\n y=n\n a=[[0 for i in range(n)] for j in range(n)]\n for indx1,i in enumerate(a):\n  if indx1==0:\n   for indx2,j in enumerate(i):\n    if indx2==0:\n     a[indx1][indx2] = 1\n    else:\n     a[indx1][indx2] = a[indx1][indx2-1]+x\n     x+=1\n  else:\n   for indx2,j in enumerate(i):\n    if indx2==n-1:\n     a[indx1][indx2] = a[indx1-1][indx2]+y\n     y-=1\n    else:\n     a[indx1][indx2] = a[indx1-1][indx2+1]+1\n for i in a:\n  for j in i:\n   print(j,end=\" \")\n  print()", "for _ in range(int(input())):\n n=int(input())\n l=[[0 for i in range(n)]for i in range(n)]\n l[0][0]=1\n for i in range(1,n):\n  l[0][i]=l[0][i-1]+i\n for i in range(1,n):\n  for j in range(n):\n   if j==n-1:\n    l[i][j]=l[i][j-1]+n-i\n   else:\n    l[i][j]=l[i-1][j+1]+1\n for i in range(n):\n  for j in range(n):\n   print(l[i][j],end=\" \")\n  print()", "try:\n # cook your code here\n for _ in range(int(input())):\n  N=int(input())\n  X=list(range(1,N+1))+list(range(N-1,0,-1))\n  A=[[] for i in range(N)]\n  count=1\n  start=0\n  # print(X)\n  for x in range(len(X)):\n   if x>N-1:\n    start+=1\n   # print(A,start,X[x],count)\n   for i in range(start,start+X[x]):\n    A[i].append(count)\n    count+=1\n  for a in A:\n   print(*a)\n  # print(X)\n \n  # print(A)\n  # for a in A:\n  #     print(*a)\n \n\nexcept:\n pass", "for i in range(int(input())):\n n = int(input())\n arr = [[0]*n for j in range(n)]\n c = 1\n for j in range(n):\n  for k in range(j+1):\n   arr[k][j-k] = c\n   c+=1\n for j in range(1,n):\n  for k in range(n-j):\n   arr[j+k][n-k-1] = c\n   c+=1\n for j in arr:\n  print(*j)", "for T in range(0,int(input())):\n if T<=10:\n  N=int(input())\n  if N<=100:\n   L1=[[0 for i in range(0,N)] for j in range(0,N)]\n   c=1\n   for i in range(0,N):\n    a=0\n    for j in range(i,-1,-1):\n     L1[a][j]=c\n     c+=1\n     a+=1\n   \n   \n   for x in range(1,N):\n    k=x\n    for y in range(N-x):\n     L1[k][N-y-1]=c\n     c+=1\n     k+=1\n   for mat in L1:\n    print(*mat) \n    \n", "for _ in range(int(input())):\n n=int(input())\n l=[[0 for i in range(n)] for j in range(n)]\n #print(l)\n c=1\n for i in range(n):\n  for j in range(i+1):\n   l[j][i-j]=c\n   c+=1\n for i in range(1,n):\n  for j in range(n-i):\n   l[i+j][n-j-1]=c\n   c+=1\n for i in range(n):\n  for j in range(n):\n   print(l[i][j],end=\" \")\n  print()", "# cook your dish here\nt=int(input())\nwhile t>0:\n n=int(input())\n l=[]\n for i in range(n):\n  l1=[]\n  for j in range(n):\n   l1.append(0)\n  l.append(l1)\n c=1\n for j in range(n):\n  k=0\n  for i in range(j,-1,-1):\n   l[k][i]=c\n   c+=1\n   k+=1\n for i in range(1,n):\n  m=i\n  for j in range(n-i):\n   l[m][n-j-1]=c\n   c+=1\n   m+=1\n for p in l:\n  print(*p)\n   \n   \n   \n   \n   \n   \n   \n   \n   \n  \n t-=1", "# cook your dish here\ntry:\n for i in range(int(input())):\n  n=int(input())\n  a=[[0 for i in range(n)] for j in range(n)]\n  p=1\n  for k in range(n):\n   j=k\n   i=0\n   while(j>=0):\n    a[i][j]=p\n    p=p+1\n    i=i+1\n    j=j-1\n  for k in range(1,n,1):\n   i=k\n   j=n-1\n   f=k\n   while(j>=f):\n    a[i][j]=p\n    p=p+1\n    i=i+1\n    j=j-1\n  for i in range(n):\n   for j in range(n):\n    print(a[i][j],end=\" \")\n   print(\"\\n\")\nexcept:\n pass", "for test_ in range(int(input())):\n n = int(input())\n op = [[0 for i in range(n)] for i in range(n)]\n #num = list(range(1,n*n+1))\n i = 0\n j = 0\n num = 1\n while i<n and j<n:\n  temp1 = i\n  temp2 = j\n  while temp1<=j:\n   op[temp1][temp2] = num\n   num += 1\n   temp1 += 1\n   temp2 -= 1\n  if j!=n-1:\n   i = 0\n   j += 1\n  else:\n   i += 1\n   j = n-1\n for i in op:\n  print(*i)"]