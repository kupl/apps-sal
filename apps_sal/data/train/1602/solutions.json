["for t in range(int(input().strip())):\n n = int(input().strip())\n x = int(input().strip())\n arr = list(map(int, input().strip().split()))\n arr.sort()\n day = 1\n acc = 0\n isPossible = True\n for a in arr:\n  acc += 1\n  if acc > x:\n   day += 1\n   acc = 1\n  if day >= a:\n   isPossible = False\n   break\n\n print(\"Possible\" if isPossible else \"Impossible\")\n", "for _ in range(int(input())):\n n = int(input())\n x = int(input())\n l = list(map(int, input().split()))\n l.sort()\n \n if n%x == 0:\n  td = n//x\n else:\n  td = n//x+1\n \n for d in range(1, td+1):\n  if l[(d-1)*x] == d:\n   print(\"Impossible\")\n   break\n if l[(d-1)*x] != d:\n  print(\"Possible\")", "def woow(l,oned):\n if 1 in l:\n  return False\n else:\n  for i in range(2,len(l)-1):\n   if (l.count(i)>oned):\n    lm=l.count(i)//i\n    for tp in range(1,lm):\n     if i+tp in l:\n      return False\n  return True\ntc=int(input())\nfor tcc in range(1,tc+1):\n chocs=int(input())\n oned=int(input())\n l=list(map(int,input().split()))\n if woow(l,oned)==True:\n  print(\"Possible\")\n else:\n  print(\"Impossible\")", "try:\n t = int(input())\n while(t > 0):\n  t -= 1\n  n = int(input())\n  x = int(input())\n  a = list(map(int, input().split()))\n  if 1 in a:\n   print('Impossible')\n  else:\n   a.sort(reverse = True)\n   i,count,ct=len(a)-1,0,0\n   v = 0\n   while(i>=0):\n    if a[i] - v == 1:\n     print(\"Impossible\")\n     break\n    ct += 1\n    if ct == x:\n     ct = 0\n     count += 1\n     v += 1\n    i-=1\n   print('Possible')\nexcept:\n pass", "try:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  x=int(input())\n  l=list(map(int,input().split()))\n  if 1 in l:\n   print(\"Impossible\")\n  else:\n   l.sort()\n   flag=False\n   i=0\n   j=0\n   while i<max(l)-1:\n    ll=l[j:j+x]\n    j=j+x\n    if i+1 in ll:\n     flag=True\n     break\n    i=i+1\n   if flag:\n    print('Impossible')\n   else:\n    print('Possible')\nexcept:\n pass", "T = int(input())\n\ndef choc(x, A):\n sorted_A = list(A)\n sorted_A.sort()\n \n dec_by_one = lambda a : a - 1\n \n while not sorted_A == [] and sorted_A[0] > 1:\n  del sorted_A[:x]\n  sorted_A = list(map(dec_by_one, sorted_A))\n \n if sorted_A == []:\n  print(\"Possible\")\n else:\n  print(\"Impossible\")\n\nfor testcase in range(T):\n n = input()\n x = int(input())\n A = [int(a) for a in input().split()]\n \n choc(x, A)\n", "try:\n n=int(input())\n for i in range(n):\n  a=int(input())\n  b=int(input())\n  c=list(map(int,input().split()))\n  if 1 in c:\n   print(\"Impossible\")\n  else:\n   c.sort()\n   flag=False\n   i=0\n   j=0\n   while i<max(c)-1:\n    c1=c[j:j+b]\n    j=j+b\n    if i+1 in c1:\n     flag=True\n     break\n    i=i+1\n   if flag:\n    print(\"Impossible\")\n   else:\n    print(\"Possible\")\nexcept:\n pass", "try:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  x=int(input())\n  l=list(map(int,input().split()))\n  if 1 in l:\n   print(\"Impossible\")\n  else:\n   l.sort()\n   flag=False\n   i=0\n   j=0\n   while i<max(l)-1:\n    ll=l[j:j+x]\n    j=j+x\n    if i+1 in ll:\n     flag=True\n     break\n    i=i+1\n   if flag:\n    print('Impossible')\n   else:\n    print('Possible')\nexcept:\n pass", "# cook your dish here\n# cook your dish here# cook your dish here\nt=int(input())\n\nfor _ in range (t):\n d=int(input())\n s=int(input())\n e=list(map(int,input().split()))\n\n for i in e:\n  if(i==1):\n   flag= 1\n   break\n  else:\n   flag=0\n if(flag==1):\n  print(\"Impossible\")\n else:\n  print(\"Possible\")\n \n", "# cook your dish here\nt= int(input())\nfor i in range(t):\n n = int(input())\n x = int(input())\n exp = list(map(int, input().split()))\n exp.sort()\n while(len(exp) >= x):\n  if (1 in exp):\n   break\n  else:\n   exp = exp[x:]\n   exp = [e - 1 for e in exp]\n if (1 not in exp):\n  print(\"Possible\")\n else:\n  print(\"Impossible\")", "def abc(l):\n for i in l:\n  if i==1:\n   return 'Impossible'\n return 'Possible'\n\nt=int(input())\nwhile(t!=0):\n n=int(input())\n a=int(input())\n l=list(map(int,input().split()))\n print(abc(l))\n t-=1\n\n", "# cook your dish here# cook your dish here\nt=int(input())\n\nfor _ in range (t):\n d=int(input())\n s=int(input())\n f=list(map(int,input().split()))\n count=0\n flag=0\n for i in f:\n  if(i==1):\n   flag= 1\n   break\n  else:\n   flag=0\n if(flag==1):\n  print(\"Impossible\")\n else:\n  print(\"Possible\")\n \n", "for _ in range(int(input())):\n n=int(input())\n x=int(input())\n l=sorted(list(map(int,input().split())))\n if l[0]==1:\n  print(\"Impossible\")\n else:\n  j=i=t=q=0\n  while i<n:\n   if t<x:\n    if (l[i]-j)==1:\n     print(\"Impossible\")\n     q+=1\n     break\n    else:\n     i+=1\n     t+=1\n   else:\n    j+=1\n    t=0\n   if q==1:\n    break\n  if not q:\n   print(\"Possible\")", "for _ in range(int(input())):\n n=int(input())\n x=int(input())\n l=sorted(list(map(int,input().split())))\n if l[0]==1:\n  print(\"Impossible\")\n else:\n  j=i=t=q=0\n  while i<n:\n   if t<x:\n    if (l[i]-j)==1:\n     print(\"Impossible\")\n     q+=1\n     break\n    else:\n     i+=1\n   else:\n    j+=1\n   if q==1:\n    break\n  if not q:\n   print(\"Possible\")", "# cook your dish here\nT=int(input())\nfor i in range(T):\n n=int(input())\n x=int(input())\n arr=[int(i) for i in input().split()]\n arr.sort()\n while(True):\n  if arr[0]==1:\n   print(\"Impossible\")\n   break\n  else:\n   del arr[0:x]\n   arr=[arr[i]-1 for i in range(len(arr))]\n   if arr==[]:\n    print(\"Possible\")\n    break", "T=int(input())\nwhile T:\n n=int(input())\n x=int(input())\n A=list(map(int,input().split()))\n A.sort()\n flag=True\n i=0\n temp=1\n while i<n:\n  for j in range(i,min(i+x,n)):\n   if(A[j]<=temp):\n    flag=False\n    break\n  temp+=1 \n  i+=x\n if(flag):print(\"Possible\")\n else:print(\"Impossible\")\n T-=1", "T=int(input())\nwhile T:\n n=int(input())\n x=int(input())\n A=list(map(int,input().split()))\n A.sort()\n flag=True\n i=0\n temp=1\n while i<n:\n  for j in range(i,min(i+x,n)):\n   if(A[j]<=temp):\n    flag=False\n    break\n  i+=x\n if(flag):print(\"Possible\")\n else:print(\"Impossible\")\n T-=1", "# cook your dish here\nt=int(input())\nfor y in range(t):\n flag=True\n n=int(input())\n x=int(input())\n arr=list(map(int,input().split()))\n arr.sort(reverse=True)\n while(len(arr)!=0):\n  for k in range(len(arr)):\n   arr[k]=arr[k]-1\n   if(arr[k]==0):\n    flag=False\n    break\n  for j in range(x):\n   try:\n    arr.pop()\n   except :\n    pass\n if(flag==True):\n  print('Possible')\n else:\n  print('Impossible')\n", "t = int(input())\nfor k in range(0,t):\n n = int(input())\n if n==1:\n  x = int(input())\n  g = int(input())\n  if g == 1:\n   print(\"Impossible\")\n  else:\n   print(\"Possible\")\n else:\n  x = int(input())\n  seq = input().split(\" \")\n  game = []\n\n  for j in range(0,n):\n   game.append(int(seq[j]))\n  game.sort()\n  \n  if(game[0]==1):\n   print(\"Impossible\")\n  else:\n   print(\"Possible\")", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n x=int(input())\n a=list(map(int,input().split()))\n day=1\n ans=\"Possible\"\n a.sort()\n for i in range(0,len(a),x):\n  if a[i]<=day:\n   ans=\"Impossible\"\n   break\n  else:\n   day+=1\n print(ans)", "t = int(input())\nlis = []\nfor i in range(t):\n\n n = int(input())\n x = int(input())\n expiry = [int(i) for i in input().split()]\n day = 1\n val = x\n\n expiry.sort()\n\n while(n > 0):\n\n  if expiry[0] > day:\n   expiry.pop(0)\n   n = n-1\n   val = val-1\n  else:\n   lis.append(\"Impossible\")\n   break\n  if(val == 0):\n   day += 1\n   val = x\n if(n == 0):\n  lis.append(\"Possible\")\n'''\n     for i in range(x):\n      if expiry[i]>day:\n       expiry.pop(0)\n       n = n-1\n       if n==0:\n        lis.append(\"Possible\")\n        break\n        #val = False\n      else:\n       lis.append(\"Impossible\")\n       break\n       #val = False\n     day+=1\n'''\nfor i in lis:\n print(i)\n", "for t in range(int(input())):\n n=int(input())\n x=int(input())\n a=list(map(int,input().strip().split()))\n a.sort()\n if a[0]==1:\n  print(\"Impossible\")\n else:\n  c=0\n  p=0\n  if a[n-1]<=x:\n   print(\"Possible\")\n  else:\n   for i in range(n):\n    if a[i]-x>0:\n     c=c+1\n     continue\n    if c in a:\n     p=1\n     print(\"Impossible\")\n     break\n   if p==0:\n    print(\"Possible\")\n   \n    \n\n   \n", "for _ in range(int(input())):\n n = int(input())\n x = int(input())\n a = list(map(int, input().split()))\n s = sorted(a)\n flag = False\n if x>n:\n  for i in range(n):\n   if s[i]==1:\n    break\n   else:\n    flag = True\n else:\n  sub = 0\n  b = n%x\n  for i in range(n):\n   if len(s)>b:\n    for j in range(x):\n     a = s[0] - sub\n     #print(a)\n     if a == 1:\n      flag = False\n      break\n     else:\n      del s[0]\n      flag = True\n    sub += 1\n   if flag:\n    pass\n   else:\n    break\n  #print(s)\n if flag:\n  print(\"Possible\")\n else:\n  print(\"Impossible\")\n\n\n\n\n\n\n\n"]