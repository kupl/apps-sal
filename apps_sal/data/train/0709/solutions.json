["# cook your dish here\ntry:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        gcd = max(a[0], a[-1])\n        \n        print(gcd)\nexcept EOFError:pass", "t=int(input())\r\nfor i in range(t):\r\n    n = int(input())\r\n    a=[int(x) for x in input().split()]\r\n     \r\n  \r\n    print(max(a[0],a[-1])) \r\n  \r\n# This code is contributed by mohit kumar 29 \r\n", "# cook your dish here\nfrom math import gcd\nst=''\ndef func(n,l1):\n    if n==1:\n        return l1[0]\n    elif n==2:\n        return gcd(l1[0],l1[1])\n    p=l1[0]\n    m=p\n    for i in range(1,n):\n        g=gcd(p,l1[i])\n        m=max(m,g)\n        p=g\n    p=l1[-1]\n    m=max(m,p)\n    for i in range(n-2,0,-1):\n        g=gcd(l1[i],p)\n        m=max(m,g)\n        p=g\n    return m\n\n\n\nfor _ in range(int(input())):\n    #a,b=map(str,input().split())\n    n = int(input())\n    #s=input()\n    l1=list(map(int,input().split()))\n    #l2 = list(map(int, input().split()))\n    #l1=input().split()\n    #l2=input().split()\n    st+=str(func(n,l1))+'\\n'\n\nprint(st)\n'''\n\n'''", "\r\nt=int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    arr = list(map(int, input().strip().split()))\r\n\r\n    print(max(arr[0],arr[-1]))", "# cook your dish here\r\nfrom sys import stdin, stdout\r\nimport math\r\nfrom itertools import permutations, combinations\r\nfrom collections import defaultdict\r\n\r\ndef L():\r\n    return list(map(int, stdin.readline().split()))\r\n\r\ndef In():\r\n    return list(map(int, stdin.readline().split()))\r\n\r\ndef I():\r\n    return int(stdin.readline())\r\n\r\nP = 1000000007\r\nfor t in range(I()):\r\n    n = I()\r\n    arr = L()\r\n    if arr[0] >= arr[n-1]:\r\n        print(arr[0])\r\n    else:\r\n        print(arr[n-1])\r\n", "for i in range(int(input())):\n    n=input()\n    l=list(map(int,input().split()))\n    print(max(l[0],l[-1]))\n\n", "for i in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    print(max(l[0],l[n-1]))", "# cook your dish here\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    e = 1\n    for j in l:\n        if j%e == 0:\n            e = j\n        else :\n            break\n    l.reverse()\n    f = 1\n    for s in l:\n        if s%f == 0:\n            f = s\n        else:\n            break\n    if e>f:\n        f = e\n    print(f)", "# cook your dish here\nfor i in range(int(input())):\n    n=input()\n    l=list(map(int,input().split()))\n    m=l[0];x=l[-1]\n    print(max(m,x))", "\nimport math\nt=int(input())\nfor t1 in range(0,t):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\t\n\tif(n==1):\n\t\tprint(*l)\n\telse:\n\t\tx=l[0]\n\t\ty=l[-1]\n\t\tl1=[]\n\t\tl2=[]\n\t\tfor i in range(0,n):\n\t\t\tx=math.gcd(x,l[i])\n\t\t\tl1.append(x)\n\t\t\tif(x==1):\n\t\t\t\tbreak\n\t\tfor j in range(n-1,-1,-1):\n\t\t\ty=math.gcd(y,l[j])\n\t\t\tl2.append(y)\n\t\t\tif(y==1):\n\t\t\t\tbreak\n\t\t#print(l1,l2)\n\t\tprint(max(max(l1),max(l2)))", "from math import gcd\r\nt = int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    l = list(map(int, input().split()))\r\n    print(max(l[0], l[n-1]))\r\n", "def gcd (a,b):\n    if (b == 0):\n        return a\n    else:\n         return gcd (b, a % b)\n\nt = int(input())\nfor u in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans =a[0]\n    for i in a:\n        h = gcd(ans, i)\n        if(h>ans):\n            ans = h\n        else:\n            break\n    a.reverse()\n    ans2 = a[0]\n    for i in a:\n        h = gcd(ans2, i)\n        if(h>ans):\n            ans2 = h\n        else:\n            break\n    ans3 = gcd(ans, ans2)\n    print(max(ans, max(ans2, ans3)))", "t=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    if a[0]>a[n-1]:\r\n        print(a[0])\r\n    else:\r\n        print(a[n-1])\r\n", "t = int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    f = [int(i) for i in input().split()]\r\n    r=max(f[0], f[-1])\r\n    print(r)\r\n", "# cook your dish here\nimport math\nT = int(input())\n\nfor _ in range(T):\n    N = int(input())\n    ar = input().split()\n    m = int(ar[0])\n    \n    if int(ar[N-1]) > m:\n        m = int(ar[N-1])\n        \n    print(m)", "# cook your dish here\nimport math\nT = int(input())\n\nfor _ in range(T):\n    N = int(input())\n    ar = input().split()\n    m = int(ar[0])\n    \n    if int(ar[N-1]) > m:\n        m = int(ar[N-1])\n    '''x = m\n    for i in range(1,N):\n        x = math.gcd(x,int(ar[i])) \n        if m<x :\n            m = x'''\n        \n            \n    print(m)", "a=int(input())\nfor i in range(0,a):\n    b=int(input())\n    c=list(map(int,input().split()))\n    if(c[0]>c[len(c)-1]):\n        print(c[0])\n    else:\n        print(c[len(c)-1])", "t=int(input())\r\nfor i in range(0,t):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    if n==1:\r\n        print(l[0])\r\n    else:    \r\n        print(max(l[n-1],l[0]))", "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int, input().split()))\n    print((max(a[0],a[n-1])))# cook your dish here\n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    if a[0]>a[-1]:\n        print(a[0])\n    else:\n        print(a[-1])", "from sys import stdin,stdout                           #\r\nimport math                                            #\r\nimport heapq                                           #\r\n                                                       #\r\nt = 1                                                  #\r\ndef aint():                                            #\r\n\treturn int(input().strip())                        #\r\ndef lint():                                            #\r\n\treturn list(map(int,input().split()))              #\r\ndef fint():                                            #\r\n\treturn list(map(int,stdin.readline().split()))     #\r\n                                                       #\t\r\n########################################################\r\n \r\ndef main():\r\n\tn=aint()\r\n\tl=lint()\r\n\tpre=[l[0]]\r\n\tsuff=[l[-1]]\r\n\tfor i in range(1,n):\r\n\t\tpre.append(math.gcd(pre[-1],l[i]))\r\n\tfor i in range(n-2,-1,-1):\r\n\t\tsuff.append(math.gcd(suff[-1],l[i]))\r\n\tprint(max(max(pre),max(suff)))\r\nt=aint()\r\n########################################################\r\nfor i in range(t):                                     #\r\n\tmain()                                             #", "for _ in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    print(max(a[0],a[-1]))", "t = int(input())\r\nfor _ in range(t):\r\n    n = int(input())\r\n    a = [int(i) for i in input().split()]\r\n    print(max(a[0], a[n - 1]))", "for _ in range(int(input())):\r\n\tn = int(input())\r\n\tli = list(map(int, input().split()))\r\n\tprint(max(li[0], li[-1]))", "for _ in range(int(input())):\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n\r\n    print(max(a[0], a[-1]))"]