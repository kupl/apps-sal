["for _ in range(int(input())):\n    input()\n    nums = [int(x) for x in input().split()]\n    new_ar = list(zip(nums,[i for i in range(len(nums))]))\n    new_ar.sort()\n    \n    maxx = new_ar[0][1]\n    minn = new_ar[0][1]\n    s=\"1\"\n    for j in range(1,len(new_ar)):\n        if(new_ar[j][1]>maxx):\n            maxx = new_ar[j][1]\n        if(new_ar[j][1]<minn):\n            minn = new_ar[j][1]\n        if(maxx-minn<j+1):\n            s+=\"1\"\n        else:\n            s+=\"0\"\n        \n    print(s)", "import sys\ndef I():\n        return sys.stdin.readline().rstrip()\n\nfor _ in range(int(I())):\n    n = int(I())\n    l = list(map(int,I().split()))\n    r = list(range(n))\n    r.sort(key=lambda x: l[x])\n    mn, mx = None, None\n    for i in range(n):\n        if mn is None:\n            mn = mx = r[ i ]\n        else:\n            mn = min( mn, r[ i ] )\n            mx = max( mx, r[ i ] )\n        l[ i ] = '1' if mx - mn == i else '0'\n    print(\"\".join(l))\n", "from sys import stdin\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nk, = rl()\nfor _ in range(k):\n    n, = rl()\n    p = rl()\n\n    q = [0] * n\n    for i, x in enumerate(p):\n        q[x-1] = i\n\n    l = r = q[0]\n    m = []\n    for k, i in enumerate(q):\n        if i < l:\n            l = i\n        elif i > r:\n            r = i\n        m.append('1' if r - l == k else '0')\n    print(''.join(m))\n", "# @author \n\nimport sys\n\nclass BBeautifulNumbers:\n    def solve(self):\n        for _ in range(int(input())):\n            n = int(input())\n            p = [int(_) - 1 for _ in input().split()]\n\n            mn_index = [float('inf')] * n\n            mx_index = [-float('inf')] * n\n            prev = [0] * n\n            for i in range(n):\n                prev[p[i]] = i\n            # print(prev)\n            for i in range(n):\n                mn_index[i] = min(mn_index[i - 1], prev[i])\n                mx_index[i] = max(mx_index[i - 1], prev[i])\n\n            ans = ['0'] * n\n            # print(mn_index, mx_index)\n            for i in range(n):\n                l, r = mn_index[i], mx_index[i]\n                ans[i] = '1' if r - l + 1 == i + 1 else '0'\n\n            print(''.join(ans))\n\nsolver = BBeautifulNumbers()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "def f(L):\n    n=len(L)\n    M=[0]*(len(L)+1)\n    for i in range(len(L)):\n        M[L[i]]=i\n    s=[0]*len(L)\n    s[0]=1\n    sumof=M[1]\n    mx=M[1]\n    mi=M[1]\n    for i in range(2,n):\n        k=M[i]\n        if k>mx:mx=k\n        if k<mi:mi=k\n        sumof+=k\n        if sumof==(mx*(mx+1))//2-((mi-1)*mi)//2:\n            s[i-1]=1\n    s[n-1]=1\n    return s\nfor i in ' '*int(input()):\n    n=int(input())\n    s=f(list(map(int,input().split())))\n    for i in s:print(i,end='')\n    print()", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    pos=[0 for i in range(n+1)]\n    for i in range(n):\n        pos[a[i]]=i\n    ans=[-1 for i in range(n)]\n    ans[0]=1\n    l,r=pos[1],pos[1]\n    for i in range(2,n+1):\n        l=min(l,pos[i])\n        r=max(r,pos[i])\n        if r-l==i-1:\n            ans[i-1]=1\n        else:\n            ans[i-1]=0\n    print(\"\".join(map(str,ans)))", "t = int(input())\n\nfor t_i in range(t):\n    n = int(input())\n    P = input().split()\n    l, r = -1, -1\n    for i in range(n):\n        P[i] = int(P[i])\n        if P[i] == 1:\n            l = i\n            r = i\n    max_seen = 1\n    beaut = ['1']\n    for _ in range(n - 1):\n        if l == 0:\n            l_cand = 10**8\n        else:\n            l_cand = P[l - 1]\n        if r == n - 1:\n            r_cand = 10**8\n        else:\n            r_cand = P[r + 1]\n        if r_cand > l_cand:\n            l -= 1\n            max_seen = max(l_cand, max_seen)\n        else:\n            r += 1\n            max_seen = max(r_cand, max_seen)\n        beaut.append('1' if max_seen == r - l + 1 else '0')\n    print(''.join(beaut))\n            \n", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int,input().split()))\n    d = {}\n    for i in range(n):\n        d[a[i]] = i\n\n    ans = ''\n    mn = 200001\n    mx = -1\n    for i in range(1,n+1):\n        if(mn > d[i]):\n            mn = d[i]\n        if(mx < d[i]):\n            mx = d[i]\n\n        \n        if(mx - mn + 1 > i):\n            ans += '0'\n\n        else:\n            ans += '1'\n\n\n    print(ans)\n", "from math import *\nfrom collections import *\nimport sys\nsys.setrecursionlimit(10**9)\n\nt = int(input())\nfor y in range(t):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tans = ['1']\n\tle = 1\n\tl = a.index(1)\n\tl -= 1\n\tr = l + 2\n\tm = 1\n\twhile(le < n):\n\t\tif(l != -1 and r != n):\n\t\t\tif(a[l] > a[r]):\n\t\t\t\tm = max(m,a[r])\n\t\t\t\tr += 1\n\t\t\t\tif(m == le+1):\n\t\t\t\t\tans.append('1')\n\t\t\t\telse:\n\t\t\t\t\tans.append('0')\n\t\t\telse:\n\t\t\t\tm = max(m,a[l])\n\t\t\t\tl -= 1\n\t\t\t\tif(m == le+1):\n\t\t\t\t\tans.append('1')\n\t\t\t\telse:\n\t\t\t\t\tans.append('0')\n\t\telif(l != -1):\n\t\t\tm = max(m,a[l])\n\t\t\tl -= 1\n\t\t\tif(m == le+1):\n\t\t\t\tans.append('1')\n\t\t\telse:\n\t\t\t\tans.append('0')\n\t\telse:\n\t\t\tm = max(m,a[r])\n\t\t\tr += 1\n\t\t\tif(m == le+1):\n\t\t\t\tans.append('1')\n\t\t\telse:\n\t\t\t\tans.append('0')\n\t\tle += 1\n\tprint(\"\".join(ans))\n\n\n\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pos = [0]*(n+1)\n    for i, x in enumerate(a):\n        pos[x] = i\n\n    used = [0, 1] + [0]*n\n    ans = [0]*n\n    l, r = pos[1], pos[1]\n    count = 1\n\n    for x in range(1, n+1):\n        if not used[x]:\n            if pos[x] < l:\n                while not used[x]:\n                    l -= 1\n                    used[a[l]] = 1\n                    count += 1\n            else:\n                while not used[x]:\n                    r += 1\n                    used[a[r]] = 1\n                    count += 1\n\n        if count == x:\n            ans[x-1] = 1\n\n    print(*ans, sep='')", "def mi():\n    return map(int, input().split())\n\n'''\n3\n6\n4 5 1 3 2 6\n5\n5 3 1 2 4\n4\n1 4 3 2\n3\n6\n4 5 1 3 2 6\n5\n5 3 1 2 4\n4\n1 4 3 2\n'''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(mi())\n    t = a.index(1)\n    dist = [0]*(n+1)\n    dic = [0]*n\n    for i in range(n):\n        dist[a[i]] = abs(t-i)\n        dic[i] = [a[i], i]\n    dic.sort()\n    lm = dic[0][1]\n    rm = dic[0][1]\n    print (1, end = '')\n    for i in range(1, n):\n        if (dic[i][1]<lm):\n            lm = dic[i][1]\n        if (dic[i][1]>rm):\n            rm = dic[i][1]\n        if rm-lm<i+1:\n            print (1, end = '')\n        else:\n            print (0, end = '')\n    print()", "from sys import stdin\ninput = stdin.readline\n\n\nt = int(input())\n\nfor _ in range(t):\n\n    n = int(input())\n    a = list(map(int,input().split()))\n\n    start = 0\n    for i,v in enumerate(a):\n        if v == 1:\n            start = i\n            break\n    ans = [0]*-~n\n    ans[n-1] = 1\n    mx = 1\n    l = start\n    r = start\n\n    def move(x):\n        nonlocal l,r,mx\n        if x:\n            mx = max(a[r+1],mx)\n            r += 1\n        else:\n            mx = max(a[l-1],mx)\n            l -= 1\n\n\n    while mx < n:\n        if mx == r-l+1:\n            ans[mx-1] = 1\n        if l == 0:\n            move(1)\n        elif r == n-1:\n            move(0)\n        else:\n            if a[l-1] > a[r+1]:\n                move(1)\n            else:\n                move(0)\n\n    print(\"\".join(map(str,ans[:n])))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "#!/usr/bin/env python3\nfrom itertools import combinations\nimport sys\ninput = sys.stdin.readline\nINF = 10**9\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [INF] + [int(item) for item in input().split()] + [INF]\n    ans = [1]\n    l = r = a.index(1)\n    max_val = 1\n    for i in range(2, n+1):\n        if i == max(max_val, a[l-1]):\n            ans.append(1)\n            l -= 1\n            max_val = i\n        elif i == max(max_val, a[r+1]):\n            ans.append(1)\n            r += 1\n            max_val = i\n        elif a[l-1] < a[r+1]:\n            ans.append(0)\n            max_val = max(max_val, a[l-1])\n            l -= 1\n        else:\n            ans.append(0)\n            max_val = max(max_val, a[r+1])\n            r += 1\n    print(\"\".join([str(item) for item in ans]))", "for j in range(int(input())):\n    n = int(input())\n    c = list(map(int,input().split()))\n    index = [0]*n\n    for i in range(n):\n        index[c[i]-1]=i\n    ma = 0\n    mi = n\n    ans = ['0']*n\n    # print(index)\n    for k in range(n):\n        ma = max(index[k],ma)\n        mi = min(index[k],mi)\n        #print(k,mr,index[k]-index[0])\n        if ma-mi<=k:\n            ans[k]='1'\n    print(''.join(ans))", "q=int(input())\nfor t in range(q):\n    n=int(input())\n    a=list(map(int,input().split()))\n    ma=1\n    ans='1'\n    uk1=a.index(1)\n    uk2=uk1\n    while uk2-uk1+1!=n:\n        if uk2==n-1:\n            uk1-=1\n            ma=max(ma,a[uk1])\n            if ma==uk2-uk1+1:\n                ans=ans+'1'\n            else:\n                ans=ans+'0'\n        else:\n            if uk1==0:\n                uk2+=1\n                ma=max(ma,a[uk2])\n                if ma == uk2 - uk1 + 1:\n                    ans = ans + '1'\n                else:\n                    ans=ans+'0'\n            else:\n                if a[uk1-1]<a[uk2+1]:\n                    uk1 -= 1\n                    ma = max(ma, a[uk1])\n                    if ma == uk2 - uk1 + 1:\n                        ans = ans + '1'\n                    else:\n                        ans = ans + '0'\n                else:\n                    uk2 += 1\n                    ma = max(ma, a[uk2])\n                    if ma == uk2 - uk1 + 1:\n                        ans = ans + '1'\n                    else:\n                        ans = ans + '0'\n    print(ans)", "\nlpn = int(input())\n\nfor loop in range(lpn):\n\n    n = int(input())\n    p = list(map(int,input().split()))\n\n    for i in range(n):\n\n        if p[i] == 1:\n            oneind = i\n            break\n\n    l = oneind\n    r = oneind\n    nmax = 1\n    ans = [0] * n\n    ans[0] = 1\n\n    for i in range(n-1):\n\n        if l == 0 or( r != n-1 and p[l-1] > p[r+1]):\n            r += 1\n            nmax = max(nmax,p[r])\n            if i+2 == nmax:\n                ans[i+1] = 1 \n        else:\n            l -= 1\n            nmax = max(nmax,p[l])\n\n            if i+2 == nmax:\n                ans[i+1] = 1 \n            \n    print(\"\".join(map(str,ans)))\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    ans = ['0'] * n\n    ans[0] = '1'\n    ans[-1] = '1'\n    l = 0\n    r = n - 1\n    now = n\n    while (r - l) > 1:\n        if a[r] > now:\n            r -= 1\n            continue\n        if a[l] > now:\n            l += 1\n            continue\n        if (r - l + 1) == now:\n            ans[r - l] = '1'\n        now -= 1\n    if (r - l  + 1) == now:\n        ans[r - l] = '1'\n    print(''.join(ans))\n\n\n", "# https://codeforces.com/contest/1265/problem/B\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    idx = [0] * n\n    for i in range(n):\n        idx[p[i]-1] = i\n    ans = ''\n    left = n\n    right = 0\n    for i in range(n):\n        left = min(left, idx[i])\n        right = max(right, idx[i])\n        if right - left == i:\n            ans += '1'\n        else:\n            ans += '0'\n    return ans\n\nt = int(input())\nfor i in range(t):\n    print(main())\n", "def f():\n    n = int(input())\n    A = [int(s) for s in input().split()]\n    ans = [0]*n\n    ans[0] = 1\n    ans[n-1] = 1\n    i = 0\n    j = n-1\n    outMin = n+1\n    while j>i:\n        if A[i] > A[j]:\n            if A[i] < outMin:\n                outMin = A[i]\n            i += 1\n        else:\n            if A[j] < outMin:\n                outMin = A[j]\n            j -= 1\n        if j-i == outMin-2:\n            ans[j-i] = 1\n    print(''.join(str(i) for i in ans))\n\n\nt = int(input())\nfor i in range(t):\n    f()", "n = int(input())\nfor _ in range(n):\n    k = int(input())\n    pos = [0] * k\n    arr = list(map(int, input().split(' ')))\n    for i in range(k):\n        pos[arr[i] - 1] = i\n\n    #print(pos)\n\n    left, right = [0] * k, [0] * k\n    left[0], right[0] = pos[0], pos[0]\n    for i in range(1, k):\n        left[i] = min(left[i - 1], pos[i])\n        right[i] = max(right[i - 1], pos[i])\n\n    #print(left)\n    #print(right)\n    for i in range(k):\n        if right[i] - left[i] == i:\n            print(1, end=\"\")\n        else:\n            print(0, end=\"\")\n    print()", "for kkk in range(int(input())):\n\tn = int(input())\n\tl = list(map(int, input().split()))\n\td = {}\n\tfor i in range(n):\n\t\td[l[i]] = i\n\tans = [\"0\" for i in range(n+1)]\n\tans[1] = \"1\"\n\tposleft = d[1]\n\tposright = d[1]\n\tfor j in range(2, n+1):\n\t\tif(d[j]==posleft-1 or d[j]==posright+1):\n\t\t\tif(ans[j-1]==\"1\"):\n\t\t\t\tans[j] = \"1\"\n\t\telif(d[j]<posright and d[j]>posleft):\n\t\t\tif(posright - posleft + 1 == j):\n\t\t\t\tans[j] = \"1\"\n\t\tif(d[j]<posleft):\n\t\t\tposleft = d[j]\n\t\tif(d[j]>posright):\n\t\t\tposright = d[j]\n\tprint(''.join(ans[1:]))", "import sys\nimport math\nimport bisect\n \n \nsys.setrecursionlimit(1000000000)\ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n \ndef finput():\n    return float(input())\n \ndef tinput():\n    return input().split()\n \ndef rinput():\n    return map(int, tinput())\n \ndef rlinput():\n    return list(rinput())\n\ndef main():\n    n = iinput()\n    c = rlinput()\n    q, res, w, e = [0] * n, ['0'] * n, 0, n\n    for i in range(n):\n        q[c[i] - 1] = i\n    for i in range(n):\n        w = max(q[i], w)\n        e = min(q[i], e)\n        if w <= i + e:\n            res[i] = '1'\n    print(''.join(res))\n        \nfor j in range(int(input())):\n    main()", "from math import floor, ceil\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    pos = dict()\n    for p, i in enumerate(a):\n        pos[i] = p\n    minpos = [None] + [pos[1]] + [None]*(n-1)\n    maxpos = [None] + [pos[1]] + [None]*(n-1)\n\n    for i in range(2, n+1):\n        minpos[i] = min(minpos[i-1], pos[i])\n        maxpos[i] = max(maxpos[i-1], pos[i])\n\n\n    good = ['0']*n \n    for i in range(1, n+1):\n        if maxpos[i] - minpos[i] + 1 == i:\n            good[i-1] = '1'\n\n    print(''.join(good))\n\n     \n"]