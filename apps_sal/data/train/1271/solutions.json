["# fast io\nimport sys\ndef fop(s): sys.stdout.write(str(s)+'\\n')\ndef fip(): return sys.stdin.readline()\nfintinp = lambda : int(fip()) \ndef flistinp(func= int): return list(map(func,fip().split())) \ndef fnsepline(n,func=str): return [func(fip()) for _ in range(n)]\n#-------------------code------------------------\ndef even(x):\n x = bin(x).count('1')\n return x%2==0\n \nfor _ in range(fintinp()):\n q =fintinp()\n o = e =0 \n nums = set()\n for qn in range(q):\n  qn = fintinp()\n  if qn not in nums:\n   if even(qn): e+=1 \n   else: o+=1 \n   \n   for n in set(nums):\n    x = n^qn\n    if x not in nums:\n     if even(x): e+=1 \n     else: o+=1 \n     \n     nums.add(x)\n    \n  nums.add(qn)\n  print(e,o)\n", "# fast io\nimport sys\ndef fop(s): sys.stdout.write(str(s)+'\\n')\ndef fip(): return sys.stdin.readline()\nfintinp = lambda : int(fip()) \ndef flistinp(func= int): return list(map(func,fip().split())) \ndef fnsepline(n,func=str): return [func(fip()) for _ in range(n)]\n#-------------------code------------------------\ndef even(x):\n x = bin(x).count('1')\n return x%2==0\n \nfor _ in range(fintinp()):\n q =fintinp()\n o = e =0 \n nums = set()\n for qn in range(q):\n  qn = fintinp()\n  if qn not in nums:\n   if even(qn): e+=1 \n   else: o+=1 \n   \n   for n in set(nums):\n    x = n^qn\n    if x not in nums:\n     if even(x): e+=1 \n     else: o+=1 \n     \n     nums.add(x)\n    \n  nums.add(qn)\n  print(e,o)\n", "from sys import stdin, stdout\nfrom math import ceil\nimport numpy as np\nfrom numpy.linalg import matrix_power\n\n\ndef parity(n):\n return bin(n)[2:].count('1') % 2\n\n\ndef solve():\n for _ in range(int(input())):\n  s = set()\n  q = int(input())\n  p = [0, 0]\n  while q:\n   q -= 1\n   x = int(input())\n   if s == set():\n    p[parity(x)] += 1\n    s.add(x)\n   else:\n    if x not in s:\n     se = set()\n     for j in s:\n      se.add(j ^ x)\n      p[parity(j ^ x)] += 1\n     s = s.union(se)\n     s.add(x)\n     p[parity(x)] += 1\n   print(p[0], p[1])\n\n\ndef __starting_point():\n solve()\n\n__starting_point()", "import collections\ndef bits(x):\n return bin(x).count('1')\nt=int(input())\nfor _ in range(t):\n q=int(input())\n s=[]\n d=collections.defaultdict(lambda:-1)\n e=0\n o=0\n p=-1\n for i in range(q):\n  x=int(input())\n  # print(d)\n  if d[x]!=-1:\n   print(e,o)\n   continue\n  s.append(x)\n  d[x]=1\n  #z=len(s)\n  for j in s:\n   if j!=x:\n    l=j^x\n    if d[l]!=-1:\n     continue\n    s.append(l)\n    d[l]=1\n   \n  for j in range(p+1,len(s)):\n   p=j\n   if bits(s[j])%2==0:\n    e=e+1\n   elif bits(s[j])%2!=0:\n    o=o+1\n  print(e,o)\n", "import collections\nt = int(input())\nfor _ in range(t):\n q = int(input())\n s = collections.defaultdict(lambda : -1)\n e , o = 0 , 0\n for __ in range(q):\n  x = int(input())\n  d = []\n  # print(s)\n  dd = list(s)\n  if s[x] == -1:\n   for i in dd:\n    xo = i^x\n    d.append(xo)\n   d=set(d)\n   for i in d:\n    if s[i]==-1:\n     if bin(i).count('1')%2==0:\n      e+=1\n     else:\n      o+=1\n     s[i]=1\n   s[x]=1\n   if bin(x).count('1')%2==0:\n    e+=1\n   else:\n    o+=1\n   for i in d:\n    s[i]=1\n  print(e,o)\n\n\n", "\nt = int(input())\nfor _ in range(t):\n q = int(input())\n s = []\n e , o = 0 , 0\n for __ in range(q):\n  x = int(input())\n  d = []\n  if x not in s:\n   for i in s:\n    xo = i^x\n    d.append(xo)\n   d=set(d)\n   for i in d:\n    if i not in s:\n     if bin(i).count('1')%2==0:\n      e+=1\n     else:\n      o+=1\n   s.append(x)\n   if bin(x).count('1')%2==0:\n    e+=1\n   else:\n    o+=1\n   for i in d:\n    s.append(i)\n  print(e,o)\n\n\n", "\nt = int(input())\nfor _ in range(t):\n q = int(input())\n s = []\n e , o = 0 , 0\n for __ in range(q):\n  x = int(input())\n  d = []\n  if x not in s and x not in d:\n   for i in s:\n    xo = i^x\n    if xo not in s and xo not in d:\n     d.append(xo)\n     if bin(xo).count('1')%2==0:\n      e+=1\n     else:\n      o+=1\n   s.append(x)\n   if bin(x).count('1')%2==0:\n    e+=1\n   else:\n    o+=1\n  \n  \n  for i in d:\n   s.append(i)\n  print(e,o)\n\n\n", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=[]\n s=set()\n cta,ctb=0,0\n while(n!=0):\n  x=int(input())\n  m=len(a)\n  if(x not in s):\n   s.add(x)\n   a.append(x)\n   s2=bin(x).count('1')\n   if(s2%2==0):\n    cta+=1\n   else:\n    ctb+=1\n   for i in range(m):\n    y=x^a[i]\n    #print(y)\n    if(y not in s):\n     s.add(y)\n     a.append(y)\n     s2=bin(y).count('1')\n     if(s2%2==0):\n      cta+=1\n     else:\n      ctb+=1\n  print(cta,ctb)\n  n-=1", "from collections import Counter\n\nt = int(input())\n\nfor _ in range(t):\n q = int(input())\n orig_set = set()\n orig_set.add(0)\n E, O = 0, 0\n\n for row in range(q):\n  x = int(input())\n  if x in orig_set:\n   print(E, O)\n  else:\n   l = []\n   for i in orig_set:\n    elem = i ^ x \n    if Counter(bin(elem)[2:])['1'] % 2 == 1:\n     O += 1\n    else:\n     E += 1\n    l.append(elem)\n   \n   for e in l:\n    orig_set.add(e)\n   print(E, O)", "from collections import Counter\n\n\na= int(input())\nwhile a!=0:\n b = int(input())\n original = list()\n original.append(0)\n ev,od=0,0\n\n for i in range(b):\n\n  c = int(input())\n  if c in original:\n   print(ev,od)\n   continue\n  else:\n   for j in range(len(original)):\n    p = c^original[j]\n    if Counter(bin(p))['1']%2 == 0:\n     ev+=1\n    else:\n     od+=1\n    original.append(p)\n   print(ev,od)\n  \n\n a-=1\n", "from collections import Counter\n\n\na = int(input())\nwhile a!=0:\n\n b = int(input())\n mylist = list()\n ev, od = 0, 0\n for i in range(b):\n  c = int(input())\n\n  fla=0\n\n  for j in range(len(mylist)):\n\n\n   if c==mylist[j]:\n    print(ev,od)\n    fla=1\n    break\n  if fla==1:\n   continue\n\n  temp = list()\n  for j in range(len(mylist)):\n   if c != mylist[j]:\n\n    mylist.append(c^mylist[j])\n    r = c^mylist[j]\n    elem = mylist[j] ^ c\n    \n    if Counter(bin(elem)[2:])['1'] % 2 == 1:\n     od += 1\n    else:\n     ev += 1\n    mylist.append(r)\n  mylist = list(set(mylist))\n  mylist.append(c)\n\n\n  elem = mylist[len(mylist)-1]\n\n  if Counter(bin(elem)[2:])['1'] % 2 == 1:\n   od += 1\n  else:\n   ev += 1\n\n\n\n  print(ev,od)\n\n\n\n\n\n\n a-=1\n", "\ndef countSetBits(n):\n count = 0\n while (n):\n  count += n & 1\n  n >>= 1\n return count\n\n\n\na = int(input())\nwhile a!=0:\n\n b = int(input())\n mylist = list()\n ev, od = 0, 0\n for i in range(b):\n  c = int(input())\n\n  fla=0\n\n  for j in range(len(mylist)):\n\n\n   if c==mylist[j]:\n    print(ev,od)\n    fla=1\n    break\n  if fla==1:\n   continue\n\n  temp = list()\n  for j in range(len(mylist)):\n   if c != mylist[j]:\n\n    mylist.append(c^mylist[j])\n    r = c^mylist[j]\n    p = countSetBits(r)\n\n    if p % 2 == 0:\n     ev += 1\n    else:\n     od += 1\n\n  mylist.append(c)\n  \n  p = countSetBits(mylist[len(mylist)-1])\n\n  if p % 2 == 0:\n   ev += 1\n  else:\n   od += 1\n\n\n  print(ev,od)\n\n\n\n\n\n\n a-=1\n", "\ndef countSetBits(n):\n count = 0\n while (n):\n  count += n & 1\n  n >>= 1\n return count\n\n\n\na = int(input())\nwhile a!=0:\n\n b = int(input())\n mylist = list()\n ev, od = 0, 0\n for i in range(b):\n  c = int(input())\n\n  fla=0\n  for j in range(len(mylist)):\n   if c==mylist[j]:\n    print(ev,od)\n    fla=1\n    break\n  if fla==1:\n   continue\n  ev, od = 0, 0\n  for j in range(len(mylist)):\n   if c != mylist[j]:\n\n    mylist.append(c^mylist[j])\n\n  mylist.append(c)\n  mylist = list(set(mylist))\n  \n  for j in range(len(mylist)):\n   p = countSetBits(mylist[j])\n\n\n   if p%2 == 0:\n    ev+=1\n   else:\n    od+=1\n  print(ev,od)\n\n\n\n\n\n\n a-=1\n", "\ndef countSetBits(n):\n count = 0\n while (n):\n  count += n & 1\n  n >>= 1\n return count\n\n\n\na = int(input())\nwhile a!=0:\n\n b = int(input())\n mylist = list()\n\n for i in range(b):\n  c = int(input())\n  ev, od = 0, 0\n  for j in range(len(mylist)):\n   if c != mylist[j]:\n\n    mylist.append(c^mylist[j])\n\n  mylist.append(c)\n  mylist = list(set(mylist))\n\n  for j in range(len(mylist)):\n   p = countSetBits(mylist[j])\n\n\n   if p%2 == 0:\n    ev+=1\n   else:\n    od+=1\n  print(ev,od)\n\n\n\n\n\n\n a-=1\n", "from collections import Counter\n\nt = int(input())\n\nfor _ in range(t):\n q = int(input())\n orig_set = set()\n orig_set.add(0)\n E, O = 0, 0\n\n for row in range(q):\n  x = int(input())\n  if x in orig_set:\n   print(E, O)\n  else:\n   l = []\n   for i in orig_set:\n    elem = i ^ x \n    if Counter(bin(elem)[2:])['1'] % 2 == 1:\n     O += 1\n    else:\n     E += 1\n    l.append(elem)\n   \n   for e in l:\n    orig_set.add(e)\n   print(E, O)", "from collections import Counter\n\nt = int(input())\n\nfor _ in range(t):\n q = int(input())\n orig_set = set()\n\n for row in range(q):\n  E, O = 0, 0\n  x = int(input())\n  for i in set(orig_set):\n   if i != x:\n    orig_set.add(i ^ x)\n  orig_set.add(x)\n\n  for elem in orig_set:\n   if Counter(bin(elem)[2:])['1'] % 2:\n    O += 1\n   else:\n    E += 1\n\n  print(E, O)", "import math\n\ndef countSetBits(i):\n\n i = i - ((i >> 1) & 0x55555555)\n i = (i & 0x33333333) + ((i >> 2) & 0x33333333)\n return (((i + (i >> 4) & 0xF0F0F0F) * 0x1010101) & 0xffffffff) >> 24\na = int(input())\nwhile a!=0:\n mylist = list()\n b= int(input())\n count_even = 0\n count_odd = 0\n for j in range(b):\n\n  c = int(input())\n  t=0\n  for i in range(len(mylist)):\n   if(mylist[i] == c):\n    t=1\n    break\n  if(t == 0):\n   for i in range(len(mylist)):\n    if(mylist[i] != c):\n     p = mylist[i]^c\n     q = math.log2(p)\n     if(q == int(q)):\n      count_odd+=1\n     else:\n      if(countSetBits(p)%2 == 0):\n       count_even+=1\n      else:\n       count_odd+=1\n     mylist.append(p)\n    else:\n     mylist.append(c)\n   mylist.append(c)\n   p = math.log2(c)\n   if(p == int(p)):\n    count_odd+=1\n   else:\n    if(countSetBits(c)%2 ==0):\n     count_even+=1\n    else:\n     count_odd+=1\n  print(count_even,count_odd)\n\n\n\n\n\n\n a-=1\n\n\n\n", "import math\n\ndef countSetBits(n):\n count = 0\n while (n):\n  n &= (n - 1)\n  count += 1\n\n return count\n\na = int(input())\nwhile a!=0:\n mylist = list()\n b= int(input())\n count_even = 0\n count_odd = 0\n for j in range(b):\n\n  c = int(input())\n  t=0\n  for i in range(len(mylist)):\n   if(mylist[i] == c):\n    t=1\n    break\n  if(t == 0):\n   for i in range(len(mylist)):\n    if(mylist[i] != c):\n     p = mylist[i]^c\n     q = math.log2(p)\n     if(q == int(q)):\n      count_odd+=1\n     else:\n      if(countSetBits(p)%2 == 0):\n       count_even+=1\n      else:\n       count_odd+=1\n     mylist.append(p)\n    else:\n     mylist.append(c)\n   mylist.append(c)\n   p = math.log2(c)\n   if(p == int(p)):\n    count_odd+=1\n   else:\n    if(countSetBits(c)%2 ==0):\n     count_even+=1\n    else:\n     count_odd+=1\n  print(count_even,count_odd)\n\n\n\n\n\n\n a-=1\n\n\n\n", "T = int(input())\nfor a in range(T):\n Q = int(input())\n l2 = []\n even = 0\n odd = 0\n for _ in range(Q):\n\n  l3 =[]\n  z = int(input())\n  if z not in l2:\n   x = str(bin(z))\n\n   if (x.count('1') % 2) == 0:\n    even += 1\n   else:\n    odd += 1\n   for w in l2:\n    l3.append(w ^ z)\n    x = str(bin(w ^ z))\n\n    if (x.count('1') % 2) == 0:\n     even += 1\n    else:\n     odd += 1\n   l2.append(z)\n   l2.extend(l3)\n\n  print(even,end = \" \")\n  print(odd)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "T = int(input())\nfor a in range(T):\n Q = int(input())\n l2 = []\n for _ in range(Q):\n  even = 0\n  odd = 0\n  l3 =[]\n  z = int(input())\n  if z not in l2:\n   for w in l2:\n\n    l3.append(w ^ z)\n   l3.append(z)\n   l2.extend(l3)\n\n  for q in l2:\n   x =str(bin(q))\n\n   if (x.count('1') % 2) == 0:\n    even += 1\n   else:\n    odd += 1\n  print(even ,end = \" \")\n  print(odd)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "def eo(n):\n cnt=0\n while(n):\n  n&=n-1\n  cnt+=1\n return cnt\n\n\n\nfor _ in range(int(input())):\n arr=[]\n even=0\n odd=0\n check={}\n for _ in range(int(input())):\n  x=int(input())\n  if x not in arr:\n   for i in range(len(arr)):\n    y=x^arr[i]\n    if y not in arr:\n     check[y]=0\n     arr.append(y)\n     j=eo(y)\n     if j%2==0:\n      even+=1\n     else:\n      odd+=1\n  if x not in arr:\n   check[x]=0\n   arr.append(x)\n   j=eo(x)\n   if j%2==0:\n    even+=1\n   else:\n    odd+=1\n  print(even,odd)", "def eo(n):\n cnt=0\n while(n):\n  n&=n-1\n  cnt+=1\n return cnt\n\n\n\nfor _ in range(int(input())):\n arr=[]\n even=0\n odd=0\n check={}\n for _ in range(int(input())):\n  x=int(input())\n  if check.get(x)==None:\n   for i in range(len(arr)):\n    y=x^arr[i]\n    if check.get(y)==None:\n     check[y]=0\n     arr.append(y)\n     j=eo(y)\n     if j%2==0:\n      even+=1\n     else:\n      odd+=1\n  if check.get(x)==None:\n   check[x]=0\n   arr.append(x)\n   j=eo(x)\n   if j%2==0:\n    even+=1\n   else:\n    odd+=1\n  print(even,odd)", "def eo(n):\n cnt=0\n while(n):\n  n&=n-1\n  cnt+=1\n return cnt\n\ndef xor(a, b):\n ans = a^b\n return ans\n\nfor _ in range(int(input())):\n arr=[]\n even=0\n odd=0\n check={}\n for _ in range(int(input())):\n  x=int(input())\n  if check.get(x)==None:\n   for i in range(len(arr)):\n    y=xor(x, arr[i])\n    if check.get(y)==None:\n     check[y]=0\n     arr.append(y)\n     j=eo(y)\n     if j%2==0:\n      even+=1\n     else:\n      odd+=1\n  if check.get(x)==None:\n   check[x]=0\n   arr.append(x)\n   j=eo(x)\n   if j%2==0:\n    even+=1\n   else:\n    odd+=1\n  print(even,odd)"]