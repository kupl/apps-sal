["import copy\r\nn=int(input())\r\na=[int(x) for x in input().split()]\r\nb=[int(x) for x in input().split()]\r\nc=[]\r\nd=[]\r\nlcs=[]\r\ndef lcsfn(a,c,corda,cordb):\r\n\tfor i in range(n+1):\r\n\t\td.append([0]*(n+1))\r\n\t\tlcs.append([0]*(n+1))\r\n\tfor i in range(1,n+1):\r\n\t\tfor j in range(1,n+1):\r\n\t\t\tif a[i-1]==c[j-1]:\r\n\t\t\t\tlcs[i][j]=lcs[i-1][j-1]+1\r\n\t\t\t\td[i][j]='d'\r\n\t\t\telif lcs[i-1][j]>lcs[i][j-1]:\r\n\t\t\t\tlcs[i][j]=lcs[i-1][j]\r\n\t\t\t\td[i][j]='u'\r\n\t\t\telse:\r\n\t\t\t\tlcs[i][j]=lcs[i][j-1]\r\n\t\t\t\td[i][j]='l'\r\n\ti=n\r\n\tj=n\r\n\tcost=0\r\n\twhile i>=1 and j>=1:\r\n\t\tif d[i][j]=='d':\r\n\t\t\tcorda.append(a[i-1])\r\n\t\t\tcordb.append(b[j-1])\r\n\t\t\ti-=1\r\n\t\t\tj-=1\r\n\t\t\tcost+=1\r\n\t\telif d[i][j]=='l':\r\n\t\t\tj-=1\r\n\t\telif d[i][j]=='u':\r\n\t\t\ti-=1\r\n\treturn cost\r\n\r\n\r\nma=-10**9\r\np1=[]\r\np2=[]\r\nfor i in range(-1000,1001):\r\n\tc=[]\r\n\tcorda=[]\r\n\tcordb=[]\r\n\tfor j in range(n):\r\n\t\tc.append(b[j]+i)\r\n\tp=lcsfn(a,c,corda,cordb)\r\n\tif ma<p:\r\n\t\tma=p\r\n\t\tp1=copy.deepcopy(corda)\r\n\t\tp1=p1[::-1]\r\n\t\tp2=copy.deepcopy(cordb)\r\n\t\tp2=p2[::-1]\r\nprint(ma)\r\nprint(*p1)\r\nprint(*p2)\r\n\r\n", "n = int(input())\r\na = list(map(int, input().split()))\r\nb = list(map(int, input().split()))\r\nbb = b[:]\r\nfor i in range(n):\r\n    b[i] -= 1000\r\nans = []\r\ndp = []\r\nfor i in range(n+1):\r\n    dp.append([0] * (n+1))\r\nfor offset in range(2001):\r\n    for i in range(n+1):\r\n        dp[i][0] = 0\r\n        dp[i][0] = 0\r\n    for i in range(1, n+1):\r\n        for j in range(1, n+1):\r\n            if(a[i-1] == b[j-1]):\r\n                dp[i][j] = 1 + dp[i-1][j-1]\r\n            else:\r\n                dp[i][j] = max(dp[i][j-1], dp[i-1][j])\r\n    if(dp[n][n] > len(ans)):\r\n        ans = []\r\n        j = n\r\n        i = n\r\n        while(i > 0 and j > 0):\r\n            if(dp[i][j] > dp[i][j-1] and dp[i][j] > dp[i-1][j]):\r\n                ans.append([i-1, j-1])\r\n                i -= 1\r\n                j -= 1\r\n            elif(dp[i][j] > dp[i][j-1]):\r\n                i -= 1\r\n            else:\r\n                j -= 1\r\n    for i in range(n):\r\n        b[i] += 1\r\nprint(len(ans))\r\nprintable = [[], []]\r\nfor i, j in ans[::-1]:\r\n    printable[0].append(a[i])\r\n    printable[1].append(bb[j])\r\nprint(*printable[0])\r\nprint(*printable[1])", "# cook your dish here\nans = []\nmxlen = 0\n\ndef lcs(a,b,d,mxlen):\n    L = [0]*(n+1)\n    for i in range(n+1):\n        L[i] = [0]*(n+1)\n    #print(\"#\",L,a,b)\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            if a[i-1] == b[j-1]:\n                L[i][j] = L[i-1][j-1] + 1\n            else:\n                L[i][j] = max(L[i-1][j],L[i][j-1])\n    #print(L)\n    if L[n][n] > mxlen:\n        mxlen = L[n][n]\n        i,j = n,n\n        t = []\n        while i>0 and j>0:\n            if a[i-1] == b[j-1]:\n                t.insert(0,a[i-1])\n                i -= 1\n                j -= 1\n            elif L[i-1][j] > L[i][j-1]:\n                i -= 1\n            else:\n                j -= 1\n        #print(t)\n        ans.append({d:t})\n\ntry:\n    n = int(input())\n    a = [int(w) for w in input().split()]\n    b = [int(w) for w in input().split()]\n    minb = min(b)\n    b = [(i-minb-1) for i in b]\n    for i in range(-1000,1001):\n        bb = b.copy()\n        bb = [(j+i) for j in bb]\n        lcs(a,bb,i,mxlen)\n    ans = sorted(ans, key=lambda i: len(list(i.values())[0]),reverse = True)\n    t = ans[0]\n    d = list(t.keys())[0]\n    t = t[d]\n    print(len(t))\n    print(*t)\n    t = [(i-d+minb+1) for i in t]\n    print(*t)\nexcept:\n    pass"]