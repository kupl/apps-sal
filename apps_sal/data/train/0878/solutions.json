["# cook your dish here\n\nimport numpy as np\n \n\ndef minstairs(n,k):\n stairsHeight=[]\n stairs=0\n current = 0\n stairsHeight=list(map(int, input().split()))\n stairsHeight=np.array(stairsHeight)\n curr=0\n for i in range(n):\n  if stairsHeight[i]-curr<=k:\n   curr=stairsHeight[i]\n  else:\n   if (stairsHeight[i]-curr)%k==0:\n    stairs+=((stairsHeight[i]-curr)//k)-1\n   else:\n    stairs+=(stairsHeight[i]-curr)//k\n   curr=stairsHeight[i]\n return stairs\n  \nT=int(input())\nfor i in range(T):\n n,k =list(map(int,input().split()))\n print(minstairs(n,k))\n", "# cook your dish here\nfrom numba import njit\nimport numpy as np\n \n\ndef minstairs(n,k):\n stairsHeight=[]\n stairs=0\n current = 0\n stairsHeight=list(map(int, input().split()))\n stairsHeight=np.array(stairsHeight)\n curr=0\n for i in range(n):\n  if stairsHeight[i]-curr<=k:\n   curr=stairsHeight[i]\n  else:\n   if (stairsHeight[i]-curr)%k==0:\n    stairs+=((stairsHeight[i]-curr)//k)-1\n   else:\n    stairs+=(stairsHeight[i]-curr)//k\n   curr=stairsHeight[i]\n return stairs\n  \nT=int(input())\nfor i in range(T):\n n,k =list(map(int,input().split()))\n print(minstairs(n,k))\n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n current=0\n count=0\n n,k=[int(x) for x in input().split()]\n h=[int(y) for y in input().split()]\n for j in range(100000000):\n  # print(current)\n  if current==h[-1]:\n   break\n  \n  for aa in range(100000000):\n   \n   if abs(current-h[j])<=k:\n    current=h[j]\n    break\n   else:\n   # for \n    current+=k\n    # print(current)\n    count+=1\n print(count)\n \n \n \n \n # for j in range(10000000):\n #     print(current)\n #     if current+abs(hi[j]-hi[j+1])<=k:\n #         current=hi[j]\n #         if current==hi[-1]:\n #             break\n   \n #     else:\n #         current+=k\n #         count+=1\n # # print(count)\n", "# cook your dish herr\nfor i in range(int(input())):\n N,K=map(int,input().split())\n H=[]\n H=[int(x) for x in input().split()]\n highest=0\n count=0\n for k in H:\n  if(k-highest>K):\n   count=count+(k-highest-1)//K\n  highest=k\n print(count)", "# cook your dish here\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n res = (arr[0]-1)//k\n for i in range(1,len(arr)):\n  res+= (arr[i]-arr[i-1]-1)//k \n print(res)", "# cook your dish here\nfor _ in range(int(input())):\n N,K=(int(i) for i in input().strip().split())\n stair_arr=[0]\n stair_arr.extend([int(i) for i in input().strip().split()])\n add_cnt=0\n for i in range(1,N+1):\n  height_diff=stair_arr[i]-stair_arr[i-1]\n  if(height_diff>K):\n   add_cnt+=(height_diff//K)\n   if(height_diff%K==0):\n    add_cnt-=1\n \n print(add_cnt)\n", "for i in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n c=0\n if((a[0]-1)>k):\n  c+=((a[0]-1)//k)\n for i in range(n-1):\n  if((a[i+1]-a[i])>k):\n   c+=(a[i+1]-a[i]-1)//k\n print(c)", "# cook your dish here\nfor i in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n c=0\n if((a[0]-1)>k):\n  c+=((a[0]-1)//k)\n for i in range(n-1):\n  if((a[i+1]-a[i])>k):\n   c+=(a[i+1]-a[i]-1)//k\n print(c)", "# cook your dish here\nfor _ in range(int(input())):\n M, L = map(int, input().split())\n g = list(map(int, input().split()))\n g.insert(0,0)\n b = 0\n for i in range(1, M+1):\n  b += (g[i] - g[i-1] - 1) // L\n print(b)", "# cook your dish here\nfor _ in range(int(input())):\n N, K = map(int, input().split())\n h = list(map(int, input().split()))\n h.insert(0,0)\n c = 0\n for i in range(1, N+1):\n  c += (h[i] - h[i-1] - 1) // K\n print(c)", "# cook your dish here\nfor _ in range(int(input())):\n N, K = list(map(int, input().split()))\n h = list(map(int, input().split()))\n h.insert(0,0)\n c = 0\n for i in range(1, N+1):\n  c += (h[i] - h[i-1] - 1) // K\n print(c)\n", "# cook your dish here\nfor _ in range(int(input())):\n N, K = map(int, input().split())\n h = list(map(int, input().split()))\n h.insert(0,0)\n c = 0\n for i in range(1, N+1):\n  c += (h[i] - h[i-1] - 1) // K\n print(c)", "for _ in range(int(input())):\n Ans=0\n N,K=map(int,input().split())\n H=list(map(int,input().split()))\n for i in range(N):\n  if i==0 and K<H[i]:\n   Ans=Ans+(H[i]-1)//K\n  elif K<H[i]-H[i-1] and i>0:\n   Ans=Ans+(H[i]-H[i-1]-1)//K\n print(Ans)", "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n c=0\n s=0\n for i in range(n):\n  s+=(a[i]-c-1)//k\n  c=a[i]\n print(s)", "for i in range(int(input())):\n a,b=list(map(int,input().split()))\n y=list(map(int,input().split()))\n s=0\n if y[0]>b:\n  s+=y[0]//b\n  if y[0]%b==0:\n   s-=1\n for j in range(1,a):\n  diff=y[j]-y[j-1]\n  s+=(diff//b)\n  if diff%b==0:\n   s-=1\n print(s)", "for _ in range(int(input())):\n N, K = map(int, input().split())\n h = list(map(int, input().split()))\n h.insert(0,0)\n c = 0\n for i in range(1, N+1):\n  c += (h[i] - h[i-1] - 1) // K\n print(c)", "for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n c=0\n s=0\n for i in range(n):\n  s+=(a[i]-c-1)//k\n  c=a[i]\n print(s)", "for _ in range(int(input())) :\n n, k= map(int, input().split())\n a = list(map(int, input().split()))\n sum = 0\n c = 0\n for i in range(n) :\n  sum += (a[i] - c - 1) // k\n  c = a[i]\n print(sum)", "t = int(input())\nfor _ in range(t):\n n,k = map(int,input().split())\n a = list(map(int,input().split()))\n c =0\n s = 0\n for i in range(n):\n  if s+k < a[i]:\n   while s+k < a[i]:\n    s += k\n    c += 1\n  s = a[i]\n print(c)", "for i in range(int(input())):\n n,k=list(map(int,input().split()))\n arr=list(map(int,input().split()))\n a=0\n c=[]\n b=[]\n for i in range(n):\n  m=arr[i]-a\n  if(k>=m):\n   pass\n  else:\n   \n\n   if m%k==0:\n    c.append(int(m/k)-1)\n\n   else:\n    b.append(int(m/k))\n  \n  a=arr[i]\n print(sum(c)+sum(b))\n\n\n\n\n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,k=map(int,input().split())\n s=list(map(int,input().split()))\n curr=0\n count=0\n for i in range(n):\n  count += (s[i]-curr-1)//k\n  curr=s[i]\n print(count)", "from sys import stdin, stdout\nans = []\nfor _ in range(int(stdin.readline())):\n n, k = map(int, stdin.readline().split())\n s_h = list(map(int, stdin.readline().split()))\n num = (s_h[0] - 1) // k\n for i in range(1, n):\n  num += (s_h[i] - s_h[i-1] - 1) // k\n ans.append(str(num))\nstdout.write('\\n'.join(ans))", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,k=map(int,input().split())\n s=list(map(int,input().split()))\n curr=0\n count=0\n for i in range(n):\n  count += (s[i]-curr-1)//k\n  curr=s[i]\n print(count)", "t=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split(\" \")))\n arr=list(map(int,input().split(\" \")))\n arr.insert(0,0)\n count=0\n p=0\n q=0\n for i in range(len(arr)-1):\n  if arr[i+1]-arr[i]<=k:\n   pass\n  elif arr[i+1]-arr[i]>k:\n   p=arr[i+1]\n   q=arr[i]\n   while p-q>k:\n    q=q+k\n    count+=1\n print(count)\n"]