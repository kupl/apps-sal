["from operator import add\nfrom functools import reduce\n\nchoices=[]\n\nfor x in range(1800):\n num_str = list(map (int, str (2**x)))\n suma = reduce (add, num_str)\n choices.append(suma)\nN=int(input())\n\nfor x in range(N):\n t=int(input())\n print(choices[t])\n", "for _ in range(int(input())):\n i=int(input())\n a=str(2**i)\n sums=0\n for d in a:\n  d=int(d)\n  sums+=d\n  \n print(sums)", "import sys\nfor i in range(int(input())):\n n=input()\n try:\n  n=int(n)\n  t=2**n\n  s=0\n  while t>0:\n   s+=t%10\n   t//=10\n  print(s)\n except:\n  break\n \n", "n = int(input().rstrip())\n\nwhile(n > 0):\n t = int(input().rstrip())\n r = 2 ** t\n r = list(str(r))\n s = 0\n for i in r:\n  s = s + int(i)\n print(s)\n n = n-1", "from sys import stdin\nlines = stdin.readlines()[1:]\n\nfor line in lines:\n str_2n = str(2 ** int(line))\n sum = 0\n for i in str_2n:\n  sum += int(i)\n print(sum)\n", "import sys\n \ndef main():\n s = sys.stdin.readline\n t = int(s())\n for t in range(t):\n  n = int(s())\n  comp = str(2**n)\n  #print comp\n  sum = 0\n  for i in comp:\n   sum+=int(i)\n  print(sum)\n \ndef __starting_point():\n main()\n__starting_point()", "import sys\nline = sys.stdin.readline()\nn=int(line)\nwhile n:\n try:\n  line = sys.stdin.readline()\n  t=int(line)\n except:\n  break\n x=2**t\n sum=0\n while x:\n  sum+=x%10\n  x/=10\n print(\"\\n%d\"%sum)\n n-=1", "testcases = int(input())\nwhile testcases:\n n = int(input())\n print(sum([int(digit) for digit in str(2**n)]))\n testcases -= 1", "#!/usr/bin/env python\n\nT = int(input())\nfor t in range(T):\n N = int(input())\n print(sum(map(int, str(2**N))))\n '''\n    X = 2**N\n    print '2^%d=%d' % (N, X)\n    X = map(int, str(X))\n    print '%s=%d' % ('+'.join(map(str, X)), sum(X))\n    '''\n\n", "N = int(input())\nfor i in range(N):\n res = str(2 ** int(input()))\n ans = 0\n for i in res: ans += ord(i) - ord('0')\n print(ans)\n"]