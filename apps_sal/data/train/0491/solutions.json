["class Solution:\n     def findSubstringInWraproundString(self, p):\n         \"\"\"\n         :type p: str\n         :rtype: int\n         \"\"\"\n         pc = None\n         sl = 0\n         ll = {}\n         \n         for c in p:\n             if pc and (ord(pc) + 1 == ord(c) or (pc == 'z' and c == 'a')):\n                 sl += 1\n             else:\n                 sl = 1\n             ll[c] = max([ll[c], sl]) if c in ll else sl\n             pc = c\n         s = 0\n         for key, value in list(ll.items()):\n             s += value\n         return s\n         \n         \n # def unique(p):\n #   pc = None\n #   sl = 0\n #   ll = {}\n #   for c in p:\n #     if pc != None and (ord(pc) + 1 == ord(c) or (pc == 'z' and c == 'a')):\n #       sl += 1\n #     else:\n #       sl = 1\n #     ll[c] = max([ll[c], sl]) if c in ll else sl\n #     pc = c\n #   s = 0\n #   for _, v in ll.items():\n #       s += v\n #   return s\n \n # with open('/dev/stdin', 'rt') as f:\n #   line = f.readline()\n #   while line:\n #     print unique(line.rstrip())\n #     line = f.readline()\n"]