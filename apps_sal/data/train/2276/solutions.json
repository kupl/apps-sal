["rnd_mod = 1234567890133\nrnd_x = 987654321098\ndef rnd():\n    nonlocal rnd_x\n    rnd_x = rnd_x**2 % rnd_mod\n    return (rnd_x>>5) % (1<<20)\ndef randrange(a):\n    return rnd() % a\n\nT = int(input())\nfor _ in range(T):\n    N, M = list(map(int, input().split()))\n    X = []\n    for __ in range(N):\n        X.append([int(a) for a in input().split()])\n    Y = [[X[i][j] for i in range(N)] for j in range(M)]\n    ma = 0\n    for t in range(577):\n        for i in range(M):\n            a = randrange(N)\n            Y[i] = [Y[i][j-a] for j in range(N)]\n        ma = max(ma, sum([max([Y[i][j] for i in range(M)]) for j in range(N)]))\n    print(ma)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor testcases in range(t):\n    n,m=list(map(int,input().split()))\n    A=[list(map(int,input().split())) for i in range(n)]\n\n    B=[]\n    for j in range(m):\n        B.append([A[i][j] for i in range(n)])\n\n    B.sort(key=lambda x:max(x),reverse=True)\n\n    B=B[:n]\n\n    #print(B)\n    LEN=len(B)\n\n    if LEN==1:\n        print(sum(B[0]))\n\n    elif LEN==2:\n        ANS=0\n        for i in range(n):\n            A=0\n            for k in range(n):\n                A+=max(B[0][k],B[1][(i+k)%n])\n\n            ANS=max(ANS,A)\n\n        print(ANS)\n\n    elif LEN==3:\n\n        ANS=0\n        for i in range(n):\n            for j in range(n):\n                    \n                A=0\n                for k in range(n):\n                    A+=max(B[0][k],B[1][(i+k)%n],B[2][(j+k)%n])\n\n                ANS=max(ANS,A)\n\n        print(ANS)\n\n    elif LEN==4:\n\n        ANS=0\n        for i in range(n):\n            for j in range(n):\n                for l in range(n):\n                    \n                    A=0\n                    for k in range(n):\n                        A+=max(B[0][k],B[1][(i+k)%n],B[2][(j+k)%n],B[3][(l+k)%n])\n\n                    ANS=max(ANS,A)\n\n        print(ANS)\n        \n            \n\n    \n            \n", "from sys import stdin\n\ndef f(lst, num):\n    new = lst[num:] + lst[:num]\n    return new\n\nt = int(stdin.readline())\nfor i in range(t):\n    row, col = tuple(int(x) for x in stdin.readline().split())\n    lst = list([int(x)] for x in stdin.readline().split())\n    \n    for j in range(row-1):\n        line = tuple(int(x) for x in stdin.readline().split())\n        for k in range(len(line)):\n            lst[k].append(line[k])\n        \n    lst.sort(key=lambda x: max(x), reverse = True)\n\n    ans = float('-inf')\n    for a in range(4):\n        for b in range(4):\n            for c in range(4):\n                for d in range(4):\n                    if col >= 1:\n                        aa = f(lst[0], a)\n                    else:\n                        aa = (0,)*row\n                    if col >= 2:\n                        bb = f(lst[1], b)\n                    else:\n                        bb = (0,)*row\n                    if col >= 3:\n                        cc = f(lst[2], c)\n                    else:\n                        cc = (0,)*row\n                    if col >= 4:\n                        dd = f(lst[3], d)\n                    else:\n                        dd = (0,)*row\n\n                    ans = max(ans,\n                              sum(max(x[j] for x in (aa, bb, cc, dd))\n                                  for j in range(row)))\n    print(ans)\n", "from random import randint\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    A = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for _ in range(100):\n        for j in range(m):\n            x = randint(0, n - 1)\n            if x:\n                B = []\n                for i in range(n):\n                    B.append(A[i][j])\n                B = B[x:] + B[:x]\n                for i in range(n):\n                    A[i][j] = B[i]\n        c = 0\n        for i in range(n):\n            c += max(A[i])\n        ans = max(ans, c)\n    print(ans)", "t = int(input())\nfor i in range(t):\n    n, m = [int(item) for item in input().split()]\n    mat = []\n    col = [[] for _ in range(m)]\n    for j in range(n):\n        line = [int(item) for item in input().split()]\n        for k, item in enumerate(line):\n            col[k].append(item)\n        mat.append(line)\n    colmax = []\n    for line in col:\n        colmax.append([max(line), line])\n    colmax.sort(reverse=True)\n    colmax = colmax[:n]\n    ans = 0\n    for j in range(n ** (n-1)):\n        index = j\n        rot = [0]\n        for k in range(n-1):\n            rot.append(index % n)\n            index //= n \n        ret = 0\n        for l in range(n):\n            val = 0\n            for k in range(len(colmax)):\n                val = max(val, colmax[k][1][(l + rot[k]) % n])\n            ret += val\n        ans = max(ans, ret)\n    print(ans)", "import random \nfor _ in range(int(input())):\n    N, M = list(map(int, input().split()))\n    X = [[int(a) for a in input().split()] for _ in range(N)]\n    Y = [[X[i][j] for i in range(N)] for j in range(M)]\n    ma = 0\n    for t in range(99):\n        for i in range(M):\n            a = random.randrange(N)\n            Y[i] = [Y[i][j-a] for j in range(N)]\n        ma = max(ma, sum([max([Y[i][j] for i in range(M)]) for j in range(N)]))\n    print(ma)\n", "q = int(input())\nfor rquer in range(q):\n\tc, r = list(map(int, input().split()))\n\tmatt = [list(map(int,input().split())) for i in range(c)]\n\tmat = [[matt[i][j] for i in range(c)] for j in range(r)]\n\tfor i in range(r):\n\t\tmat[i].append(max(mat[i]))\n\t\tmat[i].reverse()\n\tmat.sort()\n\tmat.reverse()\n\twork = mat[:min(4, r)]\n\tfor t in work:\n\t\tt.pop(0)\n\tr = min(4, r)\n\twyn = 0\n\tfor num in range(c**r):\n\t\tshif = [(num//(c**i))%c for i in range(r)]\n\t\tnew = 0\n\t\tfor i in range(c):\n\t\t\tkol = [work[j][(i + shif[j])%c] for j in range(r)]\n\t\t\tnew += max(kol)\n\t\twyn = max(wyn, new)\n\tprint(wyn)\n", "for _ in range(int(input())):\n    N, M = map(int, input().split())\n    X = [[int(a) for a in input().split()] for _ in range(N)]\n    Y = [[X[i][j] for i in range(N)] for j in range(M)]\n    ma = 0\n    dp = [[0] * (1<<N) for _ in range(M+1)]\n    for j in range(M):\n        for mask in range(1<<N):\n            maskpre = mask\n            while maskpre >= 0:\n                maskpre &= mask\n                ma = 0\n                for k in range(N):\n                    s = 0\n                    for i in range(N):\n                        if (maskpre >> i) & 1 == 0 and (mask >> i) & 1:\n                            s += X[i-k][j]\n                    ma = max(ma, s)\n                dp[j+1][mask] = max(dp[j+1][mask], dp[j][maskpre] + ma)\n                \n                maskpre -= 1\n    print(dp[-1][-1])", "t = int(input())\ndef maxsa(A):\n    ans = 0\n    #print(\"asdasd\")\n    for i in range(n):\n        cur_maxx = 0\n        for j in range(4):\n            cur_maxx = max(cur_maxx, A[j][i])\n        ans+= cur_maxx\n    return ans\n\ndef fu(A):\n    answer = 0\n    for j in range(n):\n        A[0] = A[0][1:] + A[0][:1]\n        for i in range(n):\n            A[1] = A[1][1:] + A[1][:1]\n            for k in range(n):\n                A[2] = A[2][1:] + A[2][:1]\n                for l in range(n):\n                    A[3] = A[3][1:] + A[3][:1]\n                    #print(A)\n                    cur_ans = maxsa(A)\n                    answer = max(answer, cur_ans)\n    return answer\n\n\nfor j in range(t):\n    n,m = map(int,input().split())\n    A = [0] * n\n    inds = [-1,-1,-1,-1]\n    maxs  =[ 0,0,0,0]\n    for j in range(n):\n        A[j] = list(map(int,input().split()))\n    for j in range(m):\n        cur_maxs = 0\n        for i in range(n):\n            cur_maxs = max(cur_maxs, A[i][j])\n        maxs.append(cur_maxs)\n        inds.append(j)\n        ind  = 4\n        #print(cur_maxs)\n        while ind !=0 and maxs[ind] > maxs[ind-1]:\n            inds[ind], inds[ind-1] = inds[ind-1] , inds[ind]\n            maxs[ind], maxs[ind - 1] = maxs[ind - 1], maxs[ind]\n            ind-=1\n        maxs.pop()\n        inds.pop()\n\n\n    #print(maxs)\n    #print(inds)\n    S = [0] * 4\n    for j in range(4):\n        if inds[j] != -1:\n            #print(A)\n            #print(inds[j])\n            S[j] = [s[inds[j]] for s in A]\n            #print(S[j])\n        else:\n            S[j] = [0] * n\n    #print(S)\n    print(fu(S))", "t = int(input())\ndef maxsa(A):\n    ans = 0\n    #print(\"asdasd\")\n    for i in range(n):\n        cur_maxx = 0\n        for j in range(4):\n            cur_maxx = max(cur_maxx, A[j][i])\n        ans+= cur_maxx\n    return ans\n\ndef fu(A):\n    answer = 0\n    for j in range(n):\n        A[0] = A[0][1:] + A[0][:1]\n        for i in range(n):\n            A[1] = A[1][1:] + A[1][:1]\n            for k in range(n):\n                A[2] = A[2][1:] + A[2][:1]\n                for l in range(n):\n                    A[3] = A[3][1:] + A[3][:1]\n                    #print(A)\n                    cur_ans = maxsa(A)\n                    answer = max(answer, cur_ans)\n    return answer\n\n\nfor j in range(t):\n    n,m = map(int,input().split())\n    A = [0] * n\n    inds = [-1,-1,-1,-1]\n    maxs  =[ 0,0,0,0]\n    for j in range(n):\n        A[j] = list(map(int,input().split()))\n    for j in range(m):\n        cur_maxs = 0\n        for i in range(n):\n            cur_maxs = max(cur_maxs, A[i][j])\n        maxs.append(cur_maxs)\n        inds.append(j)\n        ind  = 4\n        #print(cur_maxs)\n        while ind !=0 and maxs[ind] > maxs[ind-1]:\n            inds[ind], inds[ind-1] = inds[ind-1] , inds[ind]\n            maxs[ind], maxs[ind - 1] = maxs[ind - 1], maxs[ind]\n            ind-=1\n        maxs.pop()\n        inds.pop()\n\n\n    #print(maxs)\n    #print(inds)\n    S = [0] * 4\n    for j in range(4):\n        if inds[j] != -1:\n            #print(A)\n            #print(inds[j])\n            S[j] = [s[inds[j]] for s in A]\n            #print(S[j])\n        else:\n            S[j] = [0] * n\n    #print(S)\n    print(fu(S))", "from random import randint\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n    A = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for _ in range(100):\n        for j in range(m):\n            x = randint(0, n - 1)\n            if x:\n                B = []\n                for i in range(n):\n                    B.append(A[i][j])\n                B = B[x:] + B[:x]\n                for i in range(n):\n                    A[i][j] = B[i]\n        c = 0\n        for i in range(n):\n            c += max(A[i])\n        ans = max(ans, c)\n    print(ans)", "\n\n\ndef solve(matrix, col, N, M):\n    if col == M:\n        '''\n        for row in matrix:\n            print(row)\n        print()\n        '''\n\n        ans = 0\n        for row in matrix:\n            if len(row) == 1:\n                ans += row[0]\n            else:\n                ans += max(*row)\n\n        return ans\n\n    # girar la columna `col` N - 1 veces\n\n    if N == 1:\n        return solve(matrix, col + 1, N, M)\n\n    ans = solve(matrix, col + 1, N, M)\n    for _ in range(N-1):\n        tmp = matrix[0][col]\n        for n in range(1, N):\n            matrix[n-1][col] = matrix[n][col]\n        matrix[N-1][col] = tmp\n\n        local_ans = solve(matrix, col + 1, N, M)\n        if local_ans > ans:\n            ans = local_ans\n\n    return ans\n\ndef main():\n    T = int(input())\n    for t in range(T):\n        N, M = list([int(x) for x in input().split()])\n\n        matrix = []\n        for n in range(N):\n            matrix.append(\n                list([int(x) for x in input().split()])\n            )\n\n        elements = []\n        for n in range(N):\n            for m in range(M):\n                elements.append((matrix[n][m], m))\n\n        elements.sort(reverse=True)\n\n        candidates = []\n        for t in elements:\n            if t[1] not in candidates:\n                candidates.append(t[1])\n                if len(candidates) == N:\n                    break\n\n        simplified = []\n        for n in range(N):\n            row = []\n            for m in candidates:\n                row.append(matrix[n][m])\n            simplified.append(row)\n\n        ans = solve(simplified, 0, N, min(N, M))\n        print(ans)\n\nmain()\n", "for _ in range(int(input())):\n    N, M = list(map(int, input().split()))\n    X = [[int(a) for a in input().split()] for _ in range(N)]\n    Y = [[X[i][j] for i in range(N)] for j in range(M)]\n    ma = 0\n    dp = [[0] * (1<<N) for _ in range(M+1)]\n    for j in range(M):\n        for mask in range(1<<N):\n            maskpre = mask\n            while maskpre >= 0:\n                maskpre &= mask\n                ma = 0\n                for k in range(N):\n                    s = 0\n                    for i in range(N):\n                        if (maskpre >> i) & 1 == 0 and (mask >> i) & 1:\n                            s += X[i-k][j]\n                    ma = max(ma, s)\n                dp[j+1][mask] = max(dp[j+1][mask], dp[j][maskpre] + ma)\n                \n                maskpre -= 1\n    print(dp[-1][-1])\n"]