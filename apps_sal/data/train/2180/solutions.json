["def solve():\n    n1, m, a, d = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    from bisect import insort\n    from math import floor\n    insort(t, a * n1)\n    pred = 0\n    k = 0\n    kpred = 0\n    n = 0\n    step = d // a + 1\n    sol = 0\n    fl = 0\n    for i in t:\n        if (i > pred):\n            if fl == 0:\n                n = (i - pred + (pred % a)) // a\n                if n != 0:\n                    k += (n // step) * step - step * (n % step == 0) + 1\n                    if k > n1:\n                        k = n1\n                        fl = 1\n                # print(k)\n                if (k * a + d >= i) and (n != 0):\n                    pred = k * a + d\n                else:\n                    pred = i + d\n                    k = floor(pred // a)\n                    sol += 1\n                # if n==0:\n                k = min(floor(pred // a), n1)\n                sol += n // step + (n % step != 0)\n            else:\n                sol += 1\n                pred = i + d\n        if i == a * n1:\n            fl = 1\n            # print(i,pred,sol,n,step,k, fl)\n    print(sol)\nsolve()", "def solve():\n\n    n1, m, a, d = list(map(int, input().split()))\n\n    t = list(map(int, input().split()))\n\n    from bisect import insort\n\n    from math import floor\n\n    insort(t, a * n1)\n\n    pred = 0\n\n    k = 0\n\n    kpred = 0\n\n    n = 0\n\n    step = d // a + 1\n\n    sol = 0\n\n    fl = 0\n\n    for i in t:\n\n        if (i > pred):\n\n            if fl == 0:\n\n                n = (i - pred + (pred % a)) // a\n\n                if n != 0:\n\n                    k += (n // step) * step - step * (n % step == 0) + 1\n\n                    if k > n1:\n\n                        k = n1\n\n                        fl = 1\n\n                # print(k)\n\n                if (k * a + d >= i) and (n != 0):\n\n                    pred = k * a + d\n\n                else:\n\n                    pred = i + d\n\n                    k = floor(pred // a)\n\n                    sol += 1\n\n                # if n==0:\n\n                k = min(floor(pred // a), n1)\n\n                sol += n // step + (n % step != 0)\n\n            else:\n\n                sol += 1\n\n                pred = i + d\n\n        if i == a * n1:\n\n            fl = 1\n\n            # print(i,pred,sol,n,step,k, fl)\n\n    print(sol)\n\nsolve()\n\n\n\n# Made By Mostafa_Khaled\n", "BigNum = 10 ** 20\n\nn, m, a, d = list(map(int, input().split(' ')))\nts = [0] + list(map(int, input().split(' '))) + [BigNum]\n\ndef empsInRange(l, r):\n    em1 = l // a + 1\n    em2 = r // a\n    return (em1, min(em2, n))\n\nempDoorGroup = d // a + 1\n\ndef moveEmps(emps, last):\n    em1, em2 = emps\n    if em1 > em2:\n        return last, 0\n    \n    if em1 * a <= last + d:\n        gr1 = (last + d - em1 * a) // a\n        em1 += 1 + gr1\n    \n    if em1 > em2:\n        return last, 0\n\n    doorGroups = (em2 - em1 + 1 + empDoorGroup - 1) // empDoorGroup\n    last = (em1 + empDoorGroup * (doorGroups - 1)) * a\n\n    return last, doorGroups\n\nres = 0\nlast = -BigNum\n\nfor i in range(1, len(ts)):\n    #print(i, ' ------------ ')\n    emps = empsInRange(ts[i - 1], ts[i])\n    #print(ts[i-1], ts[i], emps, last)\n    last, inc = moveEmps(emps, last)\n    #print('last:', last, ' inc:', inc)\n    res += inc\n\n    if ts[i] < BigNum and last + d < ts[i]:\n        res += 1\n        last = ts[i]\n    #print('temp res:', res)\n\nprint(res)\n"]