["class Solution:\n   def evalRPN(self, tokens):\n     \"\"\"\n     :type tokens: List[str]\n     :rtype: int\n     \"\"\"\n     s = []\n     for token in tokens:\n       if token == \"+\":\n         a = int(s.pop())\n         b = int(s.pop())\n         s.append(a+b)\n       elif token == \"/\":\n         a = int(s.pop())\n         b = int(s.pop())\n         s.append(b/a)\n       elif token == \"*\":\n         a = int(s.pop())\n         b = int(s.pop())\n         s.append(a*b)\n       elif token == \"-\":\n         a = int(s.pop())\n         b = int(s.pop())\n         s.append(b-a)\n       else:\n         s.append(token)\n     if len(s) is not 1:\n       return False\n     else:\n       return int(s.pop())"]