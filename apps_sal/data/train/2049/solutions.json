["import sys\ndef calc(b0, b1, q):\n    if q == 0:\n        return b0 ^ b1\n    if q == 1:\n        return b0 | b1\n    if q == 2:\n        return b0 & b1\nn, m = list(map(int,sys.stdin.readline().split()))\narr1 = {}\nopt = ['XOR', 'OR', 'AND']\narr2 = []\nfor j in range(n):\n    a, b = list(map(str,sys.stdin.readline().split(\" := \")))\n    b = b.split()\n    if len(b) == 1:\n        s = b[0]\n        arr1[a] = s\n    else:\n        c = b[0]\n        d = b[2]\n        q = opt.index(b[1])\n        arr2.append((a, c, d, q))\n \nmins = ''\nmaxs = ''\nd0 = {'?':0}\nd1 = {'?':1}\nfor i in range(m):\n    for a, b in list(arr1.items()):\n        d0[a] = int(b[i])\n        d1[a] = int(b[i])\n    s0 = 0\n    s1 = 0\n    for a, c, d, q in arr2:\n        b00 = d0[c]\n        b01 = d0[d]\n        b10 = d1[c]\n        b11 = d1[d]\n        c0 = calc(b00, b01, q)\n        c1 = calc(b10, b11, q)\n        s0 += (1 if c0 else 0)\n        s1 += (1 if c1 else 0)\n        d0[a] = c0\n        d1[a] = c1\n    if s1 < s0:\n        mins += \"1\"\n    else:\n        mins += \"0\"\n    if s1 > s0:\n        maxs += \"1\"\n    else:\n        maxs += \"0\"\nsys.stdout.write(\"{0}\\n{1}\".format(mins,maxs))\n\n\n\n    \n\n", "def sumBin(a, b, varMap):\n  lhs = varMap[a]\n  rhs = varMap[b]\n  return bin(int(lhs, 2) + int(rhs, 2))[2:]\n\ndef andBin(a, b, varMap):\n  lhs = varMap[a]\n  rhs = varMap[b]\n  return bin(int(lhs, 2) & int(rhs, 2))[2:]\n\ndef orBin(a, b, varMap):\n  lhs = varMap[a]\n  rhs = varMap[b]\n  return bin(int(lhs, 2) | int(rhs, 2))[2:]\n\ndef xorBin(a, b, varMap):\n  lhs = varMap[a]\n  rhs = varMap[b]\n  return bin(int(lhs, 2) ^ int(rhs, 2))[2:]\n\nmapOper = {'AND': andBin, 'OR': orBin, 'XOR' : xorBin}\n\n\nn, m = list(map(int, input().split()))\nminMap = {\"?\": \"0\", \"\": \"0\"}\nmaxMap = {\"?\": \"1\"*m, \"\": \"0\"}\n\nminSum = \"0\"\nmaxSum = \"0\"\nfor _ in range(n):\n  name, _, expr = input().split(' ', 2)\n\n  if len(expr.split(' ')) == 1:\n    minMap[name] = expr\n    maxMap[name] = expr\n  else:\n    lhs, oper, rhs = expr.split()\n    minMap[name] = mapOper[oper](lhs, rhs, minMap).zfill(m)\n    maxMap[name] = mapOper[oper](lhs, rhs, maxMap).zfill(m)\n\n  minSum = sumBin(\"\", name, minMap)\n  maxSum = sumBin(\"\", name, maxMap)\n\n\ndef countOnes(i, varMap):\n  ones = 0\n  for name, num in list(varMap.items()):\n    if name != \"?\" and name != \"\":\n      ones += num[i] == \"1\"\n  return ones\n\nminRes = \"\"\nmaxRes = \"\"\n\nfor i in range(m):\n  zeroOnes = countOnes(i, minMap)\n  oneOnes = countOnes(i, maxMap)\n\n  if zeroOnes > oneOnes:\n    maxRes += \"0\"\n    minRes += \"1\"\n  elif zeroOnes < oneOnes:\n    maxRes += \"1\"\n    minRes += \"0\"\n  else:\n    maxRes += \"0\"\n    minRes += \"0\"\n\nprint (minRes)\nprint (maxRes)\n\n"]