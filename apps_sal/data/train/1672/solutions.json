["f={}\n\nf[-40] = '-319993.68'\nf[-41] = '-344598.60'\nf[-42] = '-370433.52'\nf[-43] = '-397528.44'\nf[-44] = '-425913.37'\nf[-45] = '-455618.29'\nf[-46] = '-486673.22'\nf[-47] = '-519108.14'\nf[-48] = '-552953.07'\nf[-49] = '-588238.00'\nf[-50] = '-624992.93'\nf[-29] = '-121939.61'\nf[-30] = '-134994.52'\nf[-31] = '-148949.43'\nf[-32] = '-163834.34'\nf[-33] = '-179679.26'\nf[-34] = '-196514.17'\nf[-35] = '-214369.08'\nf[-36] = '-233274.00'\nf[-37] = '-253258.92'\nf[-38] = '-274353.84'\nf[-39] = '-296588.76'\nf[-18] = '-29155.76'\nf[-19] = '-34290.64'\nf[-20] = '-39995.53'\nf[-21] = '-46300.42'\nf[-22] = '-53235.31'\nf[-23] = '-60830.20'\nf[-24] = '-69115.10'\nf[-25] = '-78120.00'\nf[-26] = '-87874.90'\nf[-27] = '-98409.80'\nf[-28] = '-109754.71'\nf[-8] = '-2557.17'\nf[-9] = '-3642.00'\nf[-10] = '-4996.84'\nf[-11] = '-6651.68'\nf[-12] = '-8636.54'\nf[-13] = '-10981.39'\nf[-14] = '-13716.26'\nf[-15] = '-16871.13'\nf[-16] = '-20476.00'\nf[-17] = '-24560.88'\nf[-18] = '-29155.76'\nf[3] = '136.73'\nf[2] = '41.41'\nf[1] = '6.00'\nf[0] = '0.00'\nf[-1] = '-4.00'\nf[-2] = '-38.59'\nf[-3] = '-133.27'\nf[-4] = '-318.00'\nf[-5] = '-622.76'\nf[-6] = '-1077.55'\nf[-7] = '-1712.35'\nf[14] = 'MAGNA NIMIS!'\nf[13] = 'MAGNA NIMIS!'\nf[12] = 'MAGNA NIMIS!'\nf[11] = 'MAGNA NIMIS!'\nf[10] = 'MAGNA NIMIS!'\nf[9] = 'MAGNA NIMIS!'\nf[8] = 'MAGNA NIMIS!'\nf[7] = 'MAGNA NIMIS!'\nf[6] = 'MAGNA NIMIS!'\nf[5] = 'MAGNA NIMIS!'\nf[4] = '322.00'\n\na=[]\nfor i in range(11):\n    a+=[int(input())]\nfor i in a[::-1]:\n    s=''\n    if i in f:\n        s=f[i]\n    else:\n        s='MAGNA NIMIS!'\n    print('f(%d) = %s'%(i, s))", "import math\n\nseq = []\nfor _ in range(11):\n\tseq.append(int(input()))\n\nfor _ in range(11):\n\tn = seq.pop()\n\taresult = math.sqrt(abs(n))\n\tbresult = (n ** 3) * 5\n\tresult = aresult + bresult\n\tif result <= 400:\n\t\tprint(\"f(%d) = %.2f\" % (n, result))\n\telse:\n\t\tprint(\"f(%d) = MAGNA NIMIS!\" % n)\n", "from math import sqrt\narr = [0 for _ in range(11)]\nfor i in range(11):\n    arr[10-i] = int(input())\nfor i in arr:\n    tmp = sqrt(abs(i)) + (i**3)*5\n    if tmp >= 400:\n        print(\"f({}) = MAGNA NIMIS!\".format(i))\n    else:\n        print(\"f({}) = {:.2f}\".format(i,round(tmp,2)))", "import math\n\narr = [0 for _ in range(11)]\n\nfor x in range(11):\n    arr[10-x] = int(input())\n\nfor x in arr:\n    tmp = math.sqrt(abs(x)) + (x**3)*5\n    if tmp >= 400:\n        print(\"f({}) = MAGNA NIMIS!\".format(x))\n    else:\n        print(\"f({}) = {:.2f}\".format(x,round(tmp,2)))\n", "from math import sqrt\n\na = []\nfor i in range(11):\n    a.append(int(input()))\nfor i in range(10, -1, -1):\n    x = a[i]\n    aresult = sqrt(abs(x))\n    bresult = x * x * x * 5\n    result = aresult + bresult\n    print('f(' + str(x) + ') = ', sep='', end='')\n    if result >= 400:\n        print(\"MAGNA NIMIS!\")\n    else:\n        print('%.2f' % result)", "import math\narr = [0 for _ in range(11)]\nfor i in range(11):\n    arr[10-i] = int(input())\nfor i in arr:\n    tmp = math.sqrt(abs(i)) + (i**3)*5\n    if tmp >= 400:\n        print(\"f({}) = MAGNA NIMIS!\".format(i))\n    else:\n        print(\"f({}) = {:.2f}\".format(i,round(tmp,2)))", "from math import sqrt\nnums = []\nfor i in range(11):\n    nums.append(int(input()))\nnums.reverse()\nfor i in nums:\n    neg = (i < 0)\n    a = sqrt(abs(i))\n    b = i ** 3\n    b *= 5\n    if not 400 < a + b:\n        print(\"f(\" + str(i) + \") = {:0.2f}\".format(a + b))\n    if 400 < a + b:\n        print(\"f(\" + str(i) + \") = MAGNA NIMIS!\")", "seq = []\nfor x in range(11): seq.append(int(input()))\n\np = 0\nwhile seq:\n    c = seq[-1]\n    del seq[-1]\n\n    r = abs(c)**0.5 + c**3 * 5\n    if r < 400:\n        print(\"f(%d) = %.2f\" % (c, r))\n    else:\n        print(\"f(%d) = MAGNA NIMIS!\" % c)", "a = 11\n\narr = []\n\nwhile a > 0:\n\n    n = int(input())\n\n    arr.append(n)\n\n    a -= 1\n\nfor el in arr[::-1]:\n\n    q = abs(el) ** 0.5\n    w = el ** 3 * 5\n\n    e = q + w\n\n    if e > 400:\n        print('f({}) = MAGNA NIMIS!'.format(el))\n\n    else:\n        print('f({}) = {:.2f}'.format(el, e))\n", "l = []\nfor i in range(11):\n    l = [int(input())] + l\n\nfor i in range(11):\n    v = l[i]\n    out = 5*v**3+abs(v)**.5\n    if out <= 400:\n        print(\"f({0}) = {1:.2f}\".format(v,out))\n    else:\n        print(\"f({0}) = MAGNA NIMIS!\".format(v,out))\n", "a = ['f(50) = MAGNA NIMIS!',\n'f(49) = MAGNA NIMIS!',\n'f(48) = MAGNA NIMIS!',\n'f(47) = MAGNA NIMIS!',\n'f(46) = MAGNA NIMIS!',\n'f(45) = MAGNA NIMIS!',\n'f(44) = MAGNA NIMIS!',\n'f(43) = MAGNA NIMIS!',\n'f(42) = MAGNA NIMIS!',\n'f(41) = MAGNA NIMIS!',\n'f(40) = MAGNA NIMIS!',\n'f(39) = MAGNA NIMIS!',\n'f(38) = MAGNA NIMIS!',\n'f(37) = MAGNA NIMIS!',\n'f(36) = MAGNA NIMIS!',\n'f(35) = MAGNA NIMIS!',\n'f(34) = MAGNA NIMIS!',\n'f(33) = MAGNA NIMIS!',\n'f(32) = MAGNA NIMIS!',\n'f(31) = MAGNA NIMIS!',\n'f(30) = MAGNA NIMIS!',\n'f(29) = MAGNA NIMIS!',\n'f(28) = MAGNA NIMIS!',\n'f(27) = MAGNA NIMIS!',\n'f(26) = MAGNA NIMIS!',\n'f(25) = MAGNA NIMIS!',\n'f(24) = MAGNA NIMIS!',\n'f(23) = MAGNA NIMIS!',\n'f(22) = MAGNA NIMIS!',\n'f(21) = MAGNA NIMIS!',\n'f(20) = MAGNA NIMIS!',\n'f(19) = MAGNA NIMIS!',\n'f(18) = MAGNA NIMIS!',\n'f(17) = MAGNA NIMIS!',\n'f(16) = MAGNA NIMIS!',\n'f(15) = MAGNA NIMIS!',\n'f(14) = MAGNA NIMIS!',\n'f(13) = MAGNA NIMIS!',\n'f(12) = MAGNA NIMIS!',\n'f(11) = MAGNA NIMIS!',\n'f(10) = MAGNA NIMIS!',\n'f(9) = MAGNA NIMIS!',\n'f(8) = MAGNA NIMIS!',\n'f(7) = MAGNA NIMIS!',\n'f(6) = MAGNA NIMIS!',\n'f(5) = MAGNA NIMIS!',\n'f(4) = 322.00',\n'f(3) = 136.73',\n'f(2) = 41.41',\n'f(1) = 6.00',\n'f(0) = 0.00',\n'f(-1) = -4.00',\n'f(-2) = -38.59',\n'f(-3) = -133.27',\n'f(-4) = -318.00',\n'f(-5) = -622.76',\n'f(-6) = -1077.55',\n'f(-7) = -1712.35',\n'f(-8) = -2557.17',\n'f(-9) = -3642.00',\n'f(-10) = -4996.84',\n'f(-11) = -6651.68',\n'f(-12) = -8636.54',\n'f(-13) = -10981.39',\n'f(-14) = -13716.26',\n'f(-15) = -16871.13',\n'f(-16) = -20476.00',\n'f(-17) = -24560.88',\n'f(-18) = -29155.76',\n'f(-19) = -34290.64',\n'f(-20) = -39995.53',\n'f(-21) = -46300.42',\n'f(-22) = -53235.31',\n'f(-23) = -60830.20',\n'f(-24) = -69115.10',\n'f(-25) = -78120.00',\n'f(-26) = -87874.90',\n'f(-27) = -98409.80',\n'f(-28) = -109754.71',\n'f(-29) = -121939.61',\n'f(-30) = -134994.52',\n'f(-31) = -148949.43',\n'f(-32) = -163834.34',\n'f(-33) = -179679.26',\n'f(-34) = -196514.17',\n'f(-35) = -214369.08',\n'f(-36) = -233274.00',\n'f(-37) = -253258.92',\n'f(-38) = -274353.84',\n'f(-39) = -296588.76',\n'f(-40) = -319993.68',\n'f(-41) = -344598.60',\n'f(-42) = -370433.52',\n'f(-43) = -397528.44',\n'f(-44) = -425913.37',\n'f(-45) = -455618.29',\n'f(-46) = -486673.22',\n'f(-47) = -519108.14',\n'f(-48) = -552953.07',\n'f(-49) = -588238.00',\n'f(-50) = -624992.93'\n]\n\nb = [int(input()) for i in range(11)]\n\nfor i in b[::-1]:\n    print(a[50 - i])\n", "x = []\nfor i in range(11):\n    x.append(int(input()))\nx = x[::-1]\nfor i in range(11):\n    a = x[i]\n    b = x[i]\n    a = (abs(a))**0.5\n    b = b ** 3 * 5\n    if a + b > 400:\n        print(f\"f({x[i]}) = MAGNA NIMIS!\")\n    else:\n        print(f\"f({x[i]}) = \", end='')\n        print(\"{:.2f}\".format(round(a + b, 2)))\n\n", "l = [int(input()) for i in range(11)]\n\nfor i in range(11):\n    x = l.pop()\n    a = abs(x)**0.5\n    b = x**3 * 5\n    r = a + b\n    if r > 400:\n        print('f({}) = MAGNA NIMIS!'.format(x))\n    else:\n        print('f({}) = {:.2f}'.format(x, r))\n", "import math\n\ninp = []\nfor i in range(11):\n    x = float(input())\n    inp.append(x)\n\nfor x in reversed(inp):\n    ans = math.sqrt(abs(x)) + (x**3)*5\n    if ans > 400:\n        print(f'f({int(x)}) = MAGNA NIMIS!')\n    else:\n        print(f'f({int(x)}) = {ans:.2f}')\n", "from sys import stdin\n\nout = '''f(50) = MAGNA NIMIS!\nf(49) = MAGNA NIMIS!\nf(48) = MAGNA NIMIS!\nf(47) = MAGNA NIMIS!\nf(46) = MAGNA NIMIS!\nf(45) = MAGNA NIMIS!\nf(44) = MAGNA NIMIS!\nf(43) = MAGNA NIMIS!\nf(42) = MAGNA NIMIS!\nf(41) = MAGNA NIMIS!\nf(40) = MAGNA NIMIS!\nf(39) = MAGNA NIMIS!\nf(38) = MAGNA NIMIS!\nf(37) = MAGNA NIMIS!\nf(36) = MAGNA NIMIS!\nf(35) = MAGNA NIMIS!\nf(34) = MAGNA NIMIS!\nf(33) = MAGNA NIMIS!\nf(32) = MAGNA NIMIS!\nf(31) = MAGNA NIMIS!\nf(30) = MAGNA NIMIS!\nf(29) = MAGNA NIMIS!\nf(28) = MAGNA NIMIS!\nf(27) = MAGNA NIMIS!\nf(26) = MAGNA NIMIS!\nf(25) = MAGNA NIMIS!\nf(24) = MAGNA NIMIS!\nf(23) = MAGNA NIMIS!\nf(22) = MAGNA NIMIS!\nf(21) = MAGNA NIMIS!\nf(20) = MAGNA NIMIS!\nf(19) = MAGNA NIMIS!\nf(18) = MAGNA NIMIS!\nf(17) = MAGNA NIMIS!\nf(16) = MAGNA NIMIS!\nf(15) = MAGNA NIMIS!\nf(14) = MAGNA NIMIS!\nf(13) = MAGNA NIMIS!\nf(12) = MAGNA NIMIS!\nf(11) = MAGNA NIMIS!\nf(10) = MAGNA NIMIS!\nf(9) = MAGNA NIMIS!\nf(8) = MAGNA NIMIS!\nf(7) = MAGNA NIMIS!\nf(6) = MAGNA NIMIS!\nf(5) = MAGNA NIMIS!\nf(4) = 322.00\nf(3) = 136.73\nf(2) = 41.41\nf(1) = 6.00\nf(0) = 0.00\nf(-1) = -4.00\nf(-2) = -38.59\nf(-3) = -133.27\nf(-4) = -318.00\nf(-5) = -622.76\nf(-6) = -1077.55\nf(-7) = -1712.35\nf(-8) = -2557.17\nf(-9) = -3642.00\nf(-10) = -4996.84\nf(-11) = -6651.68\nf(-12) = -8636.54\nf(-13) = -10981.39\nf(-14) = -13716.26\nf(-15) = -16871.13\nf(-16) = -20476.00\nf(-17) = -24560.88\nf(-18) = -29155.76\nf(-19) = -34290.64\nf(-20) = -39995.53\nf(-21) = -46300.42\nf(-22) = -53235.31\nf(-23) = -60830.20\nf(-24) = -69115.10\nf(-25) = -78120.00\nf(-26) = -87874.90\nf(-27) = -98409.80\nf(-28) = -109754.71\nf(-29) = -121939.61\nf(-30) = -134994.52\nf(-31) = -148949.43\nf(-32) = -163834.34\nf(-33) = -179679.26\nf(-34) = -196514.17\nf(-35) = -214369.08\nf(-36) = -233274.00\nf(-37) = -253258.92\nf(-38) = -274353.84\nf(-39) = -296588.76\nf(-40) = -319993.68\nf(-41) = -344598.60\nf(-42) = -370433.52\nf(-43) = -397528.44\nf(-44) = -425913.37\nf(-45) = -455618.29\nf(-46) = -486673.22\nf(-47) = -519108.14\nf(-48) = -552953.07\nf(-49) = -588238.00\nf(-50) = -624992.93\n'''\n\nvals = list(reversed(out.splitlines()))\n\nfor line in reversed(stdin.readlines()):\n    ind = int(line)\n    print(vals[ind+50])\n", "outs = [\"f(-40) = -319993.68\",\n\"f(-41) = -344598.60\",\n\"f(-42) = -370433.52\",\n\"f(-43) = -397528.44\",\n\"f(-44) = -425913.37\",\n\"f(-45) = -455618.29\",\n\"f(-46) = -486673.22\",\n\"f(-47) = -519108.14\",\n\"f(-48) = -552953.07\",\n\"f(-49) = -588238.00\",\n\"f(-50) = -624992.93\",\n\"f(-29) = -121939.61\",\n\"f(-30) = -134994.52\",\n\"f(-31) = -148949.43\",\n\"f(-32) = -163834.34\",\n\"f(-33) = -179679.26\",\n\"f(-34) = -196514.17\",\n\"f(-35) = -214369.08\",\n\"f(-36) = -233274.00\",\n\"f(-37) = -253258.92\",\n\"f(-38) = -274353.84\",\n\"f(-39) = -296588.76\",\n\"f(-18) = -29155.76\",\n\"f(-19) = -34290.64\",\n\"f(-20) = -39995.53\",\n\"f(-21) = -46300.42\",\n\"f(-22) = -53235.31\",\n\"f(-23) = -60830.20\",\n\"f(-24) = -69115.10\",\n\"f(-25) = -78120.00\",\n\"f(-26) = -87874.90\",\n\"f(-27) = -98409.80\",\n\"f(-28) = -109754.71\",\n\"f(-7) = -1712.35\",\n\"f(-8) = -2557.17\",\n\"f(-9) = -3642.00\",\n\"f(-10) = -4996.84\",\n\"f(-11) = -6651.68\",\n\"f(-12) = -8636.54\",\n\"f(-13) = -10981.39\",\n\"f(-14) = -13716.26\",\n\"f(-15) = -16871.13\",\n\"f(-16) = -20476.00\",\n\"f(-17) = -24560.88\",\n\"f(4) = 322.00\",\n\"f(3) = 136.73\",\n\"f(2) = 41.41\",\n\"f(1) = 6.00\",\n\"f(0) = 0.00\",\n\"f(-1) = -4.00\",\n\"f(-2) = -38.59\",\n\"f(-3) = -133.27\",\n\"f(-4) = -318.00\",\n\"f(-5) = -622.76\",\n\"f(-6) = -1077.55\"\n]\n\nnums = [input() for _ in range(11)]\n\nfor x in nums[::-1]:\n    found = False\n    for y in outs:\n        if x == y[2:2+len(x)] and y[2+len(x)] == \")\":\n            found = True\n            print(y)\n    if not found:\n        print(\"f({0}) = MAGNA NIMIS!\".format(x))\n", "t=[]\nwhile 1:\n\ttry:x=int(input());t+=[x]\n\texcept:break\nfor x in t[::-1]:\n\tprint('f(%d) = %s'%(x,'%.2f'%(5*x**3+abs(x)**.5)if x<5 else'MAGNA NIMIS!'))", "import sys\n\nf = {}\nf[-50]=\"f(-50) = -624992.93\"\nf[-49]=\"f(-49) = -588238.00\"\nf[-48]=\"f(-48) = -552953.07\"\nf[-47]=\"f(-47) = -519108.14\"\nf[-46]=\"f(-46) = -486673.22\"\nf[-45]=\"f(-45) = -455618.29\"\nf[-44]=\"f(-44) = -425913.37\"\nf[-43]=\"f(-43) = -397528.44\"\nf[-42]=\"f(-42) = -370433.52\"\nf[-41]=\"f(-41) = -344598.60\"\nf[-40]=\"f(-40) = -319993.68\"\nf[-39]=\"f(-39) = -296588.76\"\nf[-38]=\"f(-38) = -274353.84\"\nf[-37]=\"f(-37) = -253258.92\"\nf[-36]=\"f(-36) = -233274.00\"\nf[-35]=\"f(-35) = -214369.08\"\nf[-34]=\"f(-34) = -196514.17\"\nf[-33]=\"f(-33) = -179679.26\"\nf[-32]=\"f(-32) = -163834.34\"\nf[-31]=\"f(-31) = -148949.43\"\nf[-30]=\"f(-30) = -134994.52\"\nf[-29]=\"f(-29) = -121939.61\"\nf[-28]=\"f(-28) = -109754.71\"\nf[-27]=\"f(-27) = -98409.80\"\nf[-26]=\"f(-26) = -87874.90\"\nf[-25]=\"f(-25) = -78120.00\"\nf[-24]=\"f(-24) = -69115.10\"\nf[-23]=\"f(-23) = -60830.20\"\nf[-22]=\"f(-22) = -53235.31\"\nf[-21]=\"f(-21) = -46300.42\"\nf[-20]=\"f(-20) = -39995.53\"\nf[-19]=\"f(-19) = -34290.64\"\nf[-18]=\"f(-18) = -29155.76\"\nf[-17]=\"f(-17) = -24560.88\"\nf[-16]=\"f(-16) = -20476.00\"\nf[-15]=\"f(-15) = -16871.13\"\nf[-14]=\"f(-14) = -13716.26\"\nf[-13]=\"f(-13) = -10981.39\"\nf[-12]=\"f(-12) = -8636.54\"\nf[-11]=\"f(-11) = -6651.68\"\nf[-10]=\"f(-10) = -4996.84\"\nf[-9]=\"f(-9) = -3642.00\"\nf[-8]=\"f(-8) = -2557.17\"\nf[-7]=\"f(-7) = -1712.35\"\nf[-6]=\"f(-6) = -1077.55\"\nf[-5]=\"f(-5) = -622.76\"\nf[-4]=\"f(-4) = -318.00\"\nf[-3]=\"f(-3) = -133.27\"\nf[-2]=\"f(-2) = -38.59\"\nf[-1]=\"f(-1) = -4.00\"\nf[0]=\"f(0) = 0.00\"\nf[1]=\"f(1) = 6.00\"\nf[2]=\"f(2) = 41.41\"\nf[3]=\"f(3) = 136.73\"\nf[4]=\"f(4) = 322.00\"\nf[5]=\"f(5) = MAGNA NIMIS!\"\nf[6]=\"f(6) = MAGNA NIMIS!\"\nf[7]=\"f(7) = MAGNA NIMIS!\"\nf[8]=\"f(8) = MAGNA NIMIS!\"\nf[9]=\"f(9) = MAGNA NIMIS!\"\nf[10]=\"f(10) = MAGNA NIMIS!\"\nf[11]=\"f(11) = MAGNA NIMIS!\"\nf[12]=\"f(12) = MAGNA NIMIS!\"\nf[13]=\"f(13) = MAGNA NIMIS!\"\nf[14]=\"f(14) = MAGNA NIMIS!\"\nf[15]=\"f(15) = MAGNA NIMIS!\"\nf[16]=\"f(16) = MAGNA NIMIS!\"\nf[17]=\"f(17) = MAGNA NIMIS!\"\nf[18]=\"f(18) = MAGNA NIMIS!\"\nf[19]=\"f(19) = MAGNA NIMIS!\"\nf[20]=\"f(20) = MAGNA NIMIS!\"\nf[21]=\"f(21) = MAGNA NIMIS!\"\nf[22]=\"f(22) = MAGNA NIMIS!\"\nf[23]=\"f(23) = MAGNA NIMIS!\"\nf[24]=\"f(24) = MAGNA NIMIS!\"\nf[25]=\"f(25) = MAGNA NIMIS!\"\nf[26]=\"f(26) = MAGNA NIMIS!\"\nf[27]=\"f(27) = MAGNA NIMIS!\"\nf[28]=\"f(28) = MAGNA NIMIS!\"\nf[29]=\"f(29) = MAGNA NIMIS!\"\nf[30]=\"f(30) = MAGNA NIMIS!\"\nf[31]=\"f(31) = MAGNA NIMIS!\"\nf[32]=\"f(32) = MAGNA NIMIS!\"\nf[33]=\"f(33) = MAGNA NIMIS!\"\nf[34]=\"f(34) = MAGNA NIMIS!\"\nf[35]=\"f(35) = MAGNA NIMIS!\"\nf[36]=\"f(36) = MAGNA NIMIS!\"\nf[37]=\"f(37) = MAGNA NIMIS!\"\nf[38]=\"f(38) = MAGNA NIMIS!\"\nf[39]=\"f(39) = MAGNA NIMIS!\"\nf[40]=\"f(40) = MAGNA NIMIS!\"\nf[41]=\"f(41) = MAGNA NIMIS!\"\nf[42]=\"f(42) = MAGNA NIMIS!\"\nf[43]=\"f(43) = MAGNA NIMIS!\"\nf[44]=\"f(44) = MAGNA NIMIS!\"\nf[45]=\"f(45) = MAGNA NIMIS!\"\nf[46]=\"f(46) = MAGNA NIMIS!\"\nf[47]=\"f(47) = MAGNA NIMIS!\"\nf[48]=\"f(48) = MAGNA NIMIS!\"\nf[49]=\"f(49) = MAGNA NIMIS!\"\nf[50]=\"f(50) = MAGNA NIMIS!\"\n\ndata = []\nfor line in sys.stdin:\n    data.append(int(line))\n\nwhile len(data) < 11:\n    data.append(0)\ndata = data[0:11]\n\nans = ''\nfor x in data:\n    ans = f[x] + \"\\n\" + ans\nprint(ans)\n", "from math import *\n\nstack = []\n\nfor _ in range(11):\n    stack.append(int(input()))\n\n\nfor i in range(11):\n    var = stack.pop()\n    a = sqrt(abs(var))\n    b = (var ** 3) * 5\n    res = a + b\n    if res <= 400:\n        print(f'f({var}) = {res:.2f}')\n    else:\n        print(f'f({var}) = MAGNA NIMIS!')", "data = [int(input()) for x in range(11)]\n\nfor x in data[::-1]:\n    res = x ** 3 * 5 + (abs(x) ** 0.5)\n    if res >= 400:\n        print(f'f({x}) = MAGNA NIMIS!')\n    else:\n        print(f'f({x}) = {res:0.2f}')\n", "def solve(i):\n  x = int(input())\n  a = abs(x)**0.5\n  b = x**3 * 5\n  res = a + b\n  if i > 1:\n    solve(i - 1)\n  if res < 400:\n    print(\"f({}) = {:.2f}\".format(x, res))\n  else:\n    print(\"f({}) = MAGNA NIMIS!\".format(x))\n\nsolve(11)\n", "import sys\nimport math\n\nfor nraw in sys.stdin.read().strip().split('\\n')[::-1]:\n    n = int(nraw)\n    res = n ** 3 * 5 + math.sqrt(abs(n))\n    if res > 400:\n        print('f(%d) = MAGNA NIMIS!' % n)\n    else:\n        print('f(%d) = %.2f' % (n, res))\n", "\nfrom collections import deque\nimport math\n\nnumbers = deque()\n\nfor _ in range(11):\n    numbers.append(int(input()))\n\n\nfor _ in range(11):\n    num = numbers.pop()\n    a = math.sqrt(abs(num))\n    b = num**3 * 5\n    res = a + b\n\n    if res < 400:\n        print(\"f(%d) = %.2f\" % (num, res))\n    else:\n        print(\"f(%d) = MAGNA NIMIS!\" % num)\n\n", "from math import sqrt\n\na = []\nfor i in range(11):\n\ta.append(int(input()))\n\nfor x in a[::-1]:\n\ta = sqrt(abs(x))\n\tb = 5 * x**3\n\tif a + b <= 400:\n\t\tprint(\"f(%d) = %.2f\" % (x, a + b))\n\telse:\n\t\tprint(\"f(%d) = MAGNA NIMIS!\" % x)\n", "s = [0] * 11\n\nfor i in range(11):\n    s[i] = int(input())\n\nfor i in range(10, -1, -1):\n    ares = abs(s[i])**0.5\n    bres = (s[i] ** 3 * 5)\n    res = ares + bres\n    if res < 400:\n        print(\"f({}) = {:.2f}\".format(s[i], res))\n    else:\n        print(\"f({}) = MAGNA NIMIS!\".format(s[i]))", "def toFixed(numObj, digits=0):\n    return f\"{numObj:.{digits}f}\"\n\nrome = [None]*11\nfor nextum in range(11):\n    rome[-nextum-1] = int(input())\nfor nextum in rome:\n    resultum = (nextum**2)**0.25 + 5*nextum**3\n    if resultum <= 400:\n        print(\"f({}) = {:.2f}\".format(nextum, resultum))\n    else:\n        print(\"f({}) = MAGNA NIMIS!\".format(nextum))", "#!/usr/bin/env python\n\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nif sys.version_info[0] < 3:\n    from builtins import xrange as range\n    from future_builtins import ascii, filter, hex, map, oct, zip\n\n\ndef main():\n    stack = [int(input().strip()) for _ in range(11)]\n    for _ in range(11):\n        v = stack.pop()\n        a = (abs(v)) ** 0.5\n        b = v ** 3 * 5\n        result = a + b\n        if result > 400:\n            print(\"f({}) = MAGNA NIMIS!\".format(v))\n        else:\n            print(\"f({}) = {:.2f}\".format(v, result))\n\n\n# region fastio\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\ndef print(*args, **kwargs):\n    \"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\n    sep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\n    at_start = True\n    for x in args:\n        if not at_start:\n            file.write(sep)\n        file.write(str(x))\n        at_start = False\n    file.write(kwargs.pop(\"end\", \"\\n\"))\n    if kwargs.pop(\"flush\", False):\n        file.flush()\n\n\nif sys.version_info[0] < 3:\n    sys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\nelse:\n    sys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\n\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n# endregion\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\nseq = []\n\nfor next in range(11):\n    seq.append(int(input()))\n\nfor next in range(11):\n    var = seq.pop()\n    aresult = math.sqrt(abs(var))\n    bresult = (var**3) * 5\n    result = aresult + bresult\n\n    if 400 >= result:\n        print(\"f(%d) = %.2f\" % (var, result))\n    else:\n        print(\"f(%d) = MAGNA NIMIS!\" % var)\n", "ls = []\nfor __ in range(11):\n    ls.append(int(input()))\nfor x in reversed(ls):\n    ans = 5 * x ** 3 + abs(x) ** 0.5\n    if ans > 400:\n        print('f({}) = MAGNA NIMIS!'.format(x))\n    else:\n        print('f({}) = {:.2f}'.format(x, ans))", "l = [0 for i in range(11)]\nfor i in range(11):\n    l[i] = int(input())\nl.reverse()\nfor i in l:\n    a = (i ** 3) * 5 + (abs(i) ** 0.5)\n    if a > 400:\n        print('f(' + str(i) + ') = MAGNA NIMIS!')\n        continue\n    print('f(' + str(i) + ') =', format(a, '.2f'))", "s = []\nfor i in range(11):\n    s.append(int(input()))\n\nfor i in range(11):\n    x = s.pop()\n    a = abs(x) ** 0.5\n    b = x ** 3 * 5\n    if a + b < 400:\n        print('f(%d) = %.2f' % (x, a + b))\n    else:\n        print('f(%d) = MAGNA NIMIS!' % x)\n", "from sys import stdin\nlines = [int(x) for x in stdin.readlines()[::-1]]\n\nfor x in lines:\n    if x < 0:\n        ares = (-x)**.5\n    else:\n        ares = x**.5\n    res = ares + x**3*5\n\n    if res >= 400:\n        print(\"f(%d) = MAGNA NIMIS!\" % x)\n    else:\n        print(\"f(%d) = %.2f\" % (x,res))", "from math import *\n\ndef f(n):\n    return 5*n**3+sqrt(abs(n))\n\ne=[]\nfor i in range(11):\n    e.append(int(input()))\ne.reverse()\n\nfor i in e:\n    k=f(i)\n\n    if k>400:\n        print(\"f(%d) = MAGNA NIMIS!\"%(i))\n    else:\n        print(\"f(%d) = %.2f\"%(i,k))", "num = []\nfor i in range(11):\n    num.append(int(input()))\nnum = num[::-1]\n\nfor x in num:\n    val = (x ** 3) * 5 + abs(x) ** 0.5\n\n    if val > 400:\n        print('f({}) = MAGNA NIMIS!'.format(x))\n    else:\n        print('f({}) = {:.2f}'.format(x, val))", "lip = ['0.00', '6.00', '-3642.00', '-2557.17', '-1712.35', '-1077.55', '-622.76', '-318.00', '-133.27', '-38.59', 'MAGNA NIMIS!']\ns = []\nfor i in range(11):\n    s.append(int(input()))\ns.reverse()\n#print(s)\nfor i in range(0, 11):\n    a = s[i]**3*5\n    b = abs(s[i])**0.5\n    ans = a + b\n    print ('f(' + str(s[i]) + \") = \", end='')\n\n    if (ans < 400):\n        print('{:.2f}'.format(ans))\n    else:\n        print(' MAGNA NIMIS!')\n", "from math import sqrt\nl = []\nfor i in range(11):\n    l.append(int(input()))\n\nfor v in reversed(l):\n    x = int(v)\n    ans = 5*x**3 + sqrt(abs(x))\n    if ans > 400:\n        print(str.format(\"f({}) = MAGNA NIMIS!\", x))\n    else:\n        print(str.format(\"f({}) = {:.2f}\", x, ans))\n", "from math import *\narr = []\nfor n in range(1,11 + 1):\n    v = int(input())\n    arr = [v] + arr\n\nfor n in range(1,11 + 1):\n    J = arr.pop(0)\n    temp = J\n    a = sqrt(abs(temp))\n    b = (temp**3)*5\n    r = a + b\n    if r < 400:\n        r = (str(round(r,2)) + '0').split('.')\n        r[1] = r[1][0:2]\n        r = '.'.join(r)\n        print(f\"f({J}) = {r}\")\n    else:\n        print(f\"f({J}) = MAGNA NIMIS!\")", "stack = []\n\nfor _ in range(11):\n    stack += int(input()),\n\nwhile stack:\n    v = stack.pop()\n    a = abs(v) ** (1/2)\n    b = v **3 * 5\n    r = a + b\n\n    if r > 400:\n        print('f({}) = MAGNA NIMIS!'.format(v))\n    else:\n        print('f({}) = {:.2f}'.format(v, r))\n", "from math import sqrt\nf = lambda x: sqrt(abs(x))\ng = lambda x: x**3*5\narr = []\nfor _ in range(11):\n    arr.append(int(input()))\narr.reverse()\nfor e in arr:\n    r = f(e)+g(e)\n    if 400 < r:\n        print(\"f(%d) = \" % (e) + \"MAGNA NIMIS!\")\n        continue\n    print(\"f(%d) = %.2f\" % (e, r))", "seq = [\n\t'f(-50) = -624992.93',\n\t'f(-49) = -588238.00',\n\t'f(-48) = -552953.07',\n\t'f(-47) = -519108.14',\n\t'f(-46) = -486673.22',\n\t'f(-45) = -455618.29',\n\t'f(-44) = -425913.37',\n\t'f(-43) = -397528.44',\n\t'f(-42) = -370433.52',\n\t'f(-41) = -344598.60',\n\t'f(-40) = -319993.68',\n\t'f(-39) = -296588.76',\n\t'f(-38) = -274353.84',\n\t'f(-37) = -253258.92',\n\t'f(-36) = -233274.00',\n\t'f(-35) = -214369.08',\n\t'f(-34) = -196514.17',\n\t'f(-33) = -179679.26',\n\t'f(-32) = -163834.34',\n\t'f(-31) = -148949.43',\n\t'f(-30) = -134994.52',\n\t'f(-29) = -121939.61',\n\t'f(-28) = -109754.71',\n\t'f(-27) = -98409.80',\n\t'f(-26) = -87874.90',\n\t'f(-25) = -78120.00',\n\t'f(-24) = -69115.10',\n\t'f(-23) = -60830.20',\n\t'f(-22) = -53235.31',\n\t'f(-21) = -46300.42',\n\t'f(-20) = -39995.53',\n\t'f(-19) = -34290.64',\n\t'f(-18) = -29155.76',\n\t'f(-17) = -24560.88',\n\t'f(-16) = -20476.00',\n\t'f(-15) = -16871.13',\n\t'f(-14) = -13716.26',\n\t'f(-13) = -10981.39',\n\t'f(-12) = -8636.54',\n\t'f(-11) = -6651.68',\n\t'f(-10) = -4996.84',\n\t'f(-9) = -3642.00',\n\t'f(-8) = -2557.17',\n\t'f(-7) = -1712.35',\n\t'f(-6) = -1077.55',\n\t'f(-5) = -622.76',\n\t'f(-4) = -318.00',\n\t'f(-3) = -133.27',\n\t'f(-2) = -38.59',\n\t'f(-1) = -4.00',\n\t'f(0) = 0.00',\n\t'f(1) = 6.00',\n\t'f(2) = 41.41',\n\t'f(3) = 136.73',\n\t'f(4) = 322.00',\n\t'f(5) = MAGNA NIMIS!',\n\t'f(6) = MAGNA NIMIS!',\n\t'f(7) = MAGNA NIMIS!',\n\t'f(8) = MAGNA NIMIS!',\n\t'f(9) = MAGNA NIMIS!',\n\t'f(10) = MAGNA NIMIS!',\n\t'f(11) = MAGNA NIMIS!',\n\t'f(12) = MAGNA NIMIS!',\n\t'f(13) = MAGNA NIMIS!',\n\t'f(14) = MAGNA NIMIS!',\n\t'f(15) = MAGNA NIMIS!',\n\t'f(16) = MAGNA NIMIS!',\n\t'f(17) = MAGNA NIMIS!',\n\t'f(18) = MAGNA NIMIS!',\n\t'f(19) = MAGNA NIMIS!',\n\t'f(20) = MAGNA NIMIS!',\n\t'f(21) = MAGNA NIMIS!',\n\t'f(22) = MAGNA NIMIS!',\n\t'f(23) = MAGNA NIMIS!',\n\t'f(24) = MAGNA NIMIS!',\n\t'f(25) = MAGNA NIMIS!',\n\t'f(26) = MAGNA NIMIS!',\n\t'f(27) = MAGNA NIMIS!',\n\t'f(28) = MAGNA NIMIS!',\n\t'f(29) = MAGNA NIMIS!',\n\t'f(30) = MAGNA NIMIS!',\n\t'f(31) = MAGNA NIMIS!',\n\t'f(32) = MAGNA NIMIS!',\n\t'f(33) = MAGNA NIMIS!',\n\t'f(34) = MAGNA NIMIS!',\n\t'f(35) = MAGNA NIMIS!',\n\t'f(36) = MAGNA NIMIS!',\n\t'f(37) = MAGNA NIMIS!',\n\t'f(38) = MAGNA NIMIS!',\n\t'f(39) = MAGNA NIMIS!',\n\t'f(40) = MAGNA NIMIS!',\n\t'f(41) = MAGNA NIMIS!',\n\t'f(42) = MAGNA NIMIS!',\n\t'f(43) = MAGNA NIMIS!',\n\t'f(44) = MAGNA NIMIS!',\n\t'f(45) = MAGNA NIMIS!',\n\t'f(46) = MAGNA NIMIS!',\n\t'f(47) = MAGNA NIMIS!',\n\t'f(48) = MAGNA NIMIS!',\n\t'f(49) = MAGNA NIMIS!',\n\t'f(50) = MAGNA NIMIS!'\n]\n\nstk = []\n\ntry:\n\twhile True:\n\t\tn = int(input())\n\t\tstk.append(seq[n + 50] + '\\n')\nexcept EOFError:\n\tprint(''.join(stk[::-1]))\n", "from math import sqrt, pow\n\ndef f(x):\n    sign = 1 if x > 0 else -1 if x < 0 else 0\n    aresult = sqrt(abs(x))\n    bresult = pow(x, 3)*5\n    result = bresult + aresult\n    # result *= sign\n    return result\n\narr = []\nfor i in range(11):\n    x = int(input())\n    arr.append(x)\n\nfor x in reversed(arr):\n    result = f(x)\n    print(f\"f({x}) = \", end=\"\")\n    if result >= 400:\n        print(\"MAGNA NIMIS!\")\n    else:\n        print(f\"{result:.2f}\")\n", "import math\n\nres = list()\nfor i in range(11):\n    n = int(input())\n    p = math.sqrt(math.fabs(n)) + (n ** 3) * 5\n    res.append((n, p))\n\nfor k, v in res[::-1]:\n    if v < 400:\n        print(\"f(%d) = %.2f\" % (k, v))\n    else:\n        print(\"f(%d) = MAGNA NIMIS!\" % k)\n", "import re\n\ns = \"\"\"\nper nextum in unam tum XI conscribementis fac sic\n    vestibulo perlegementum da varo.\n    morde varo.\n    seqis cumula varum.\ncis\n\nper nextum in unam tum XI conscribementis fac sic\n    seqis decumulamenta da varo.\n    varum privamentum fodementum da aresulto.\n    varum tum III elevamentum tum V multiplicamentum da bresulto.\n    aresultum tum bresultum addementum da resulto.\n\n    si CD tum resultum non praestantiam fac sic\n        dictum sic f(%d) = %.2f cis tum varum tum resultum egresso describe.\n        novumversum egresso scribe.\n    cis\n    si CD tum resultum praestantiam fac sic\n        dictum sic f(%d) = MAGNA NIMIS! cis tum varum egresso describe.\n        novumversum egresso scribe.        \n    cis\ncis\n\"\"\".strip()\nif False:\n    s = re.sub(r\"\\bIII\\b\", \"3\", s)\n    s = re.sub(r\"\\bV\\b\", \"5\", s)\n    s = re.sub(r\"\\bXI\\b\", \"11\", s)\n    s = re.sub(r\"\\bCD\\b\", \"400\", s)\n    s = re.sub(r\"per (.*?) fac sic(.*?)\\ncis\", r\"for (\\1) {\\2\\n}\", s, flags=re.DOTALL)\n    s = re.sub(r\"\\bdictum sic (.*) cis(.*) egresso describe.\", r'printf(\"\\1\"\\2)', s)\n    s = re.sub(r\"novumversum egresso scribe.\", r'print(\"\\\\n\")', s)\n    s = re.sub(r\"si (.*?) fac sic(.*?)cis\", r\"if (\\1) {\\2}\", s, flags=re.DOTALL)\n    s = re.sub(r\".$\", \"\", s)\n    s = re.sub(r\" tum \", \" \", s)\n    print(s)\n    return\n\na = []\nfor i in range(11):\n    a.append(int(input()))\nfor i in range(11):\n    var = a.pop()\n    aresult = abs(var) ** 0.5\n    bresult = (var ** 3) * 5\n    result = aresult + bresult\n    if 400 > result:\n        print(\"f({0:d}) = {1:.2f}\".format(var, result))\n    else:\n        print(\"f({0:d}) = MAGNA NIMIS!\".format(var))\n", "import math\narr=[]\nwhile True:\n\ttry:\n\t\tn=int(input())\n\t\tarr.append(n)\n\texcept:\n\t\tbreak\n\narr=arr[::-1]\nfor x in arr:\n\tif x>=0:\n\t\ta=math.sqrt(abs(x))\n\t\tb=5*(abs(x)**3)\n\telse:\n\t\ta=math.sqrt(abs(x))\n\t\tb=-5*(abs(x)**3)\n\t# print(x,a,b)\n\tfin=a+b\n\tfin=round(fin,2)\n\tfin=str(fin)\n\tif str(fin[-3])!=\".\":\n\t\tfin+=\"0\"\n\t\n\tif float(fin)<=400:\n\t\tprint(\"f(\"+str(x)+\") =\",str(fin))\n\telse:\n\t\tprint(\"f(\"+str(x)+\") = MAGNA NIMIS!\")", "a = []\nfor i in range(11):\n    a.append(int(input()))\n\nfor i in range(11):\n    x = a.pop()\n    r = (abs(x) ** 0.5) + ((x ** 3) * 5)\n\n    if r <= 400:\n        print(\"f(%d) = %.2f\" % (x, r))\n    else:\n        print(\"f(%d) = MAGNA NIMIS!\" % x)\n", "import math\nls = []\n\nfor i in range(11):\n    ls.append(int(input()))\n\nfor i in range(11):\n    var = ls.pop()\n    a = math.sqrt(abs(var))\n    b = (var**3)*5\n    res = a + b\n    if 400 >= res:\n        print('f(%d) = %.2f' % (var, res))\n    else:\n        print('f(%d) = MAGNA NIMIS!' % var)", "import math\n\na = [int(input()) for i in range(11)][::-1]\nfor i in a:\n    p = i ** 3 * 5 + math.sqrt(abs(i))\n    if p >= 400.:\n        print(\"f({}) = MAGNA NIMIS!\".format(i))\n    else:\n        print(\"f({}) = {:.2f}\".format(i, p))\n", "import math\n\ndef f(t):\n    return math.sqrt(abs(t)) + 5 * t ** 3\n\na = [float(input()) for _ in range(11)]\nfor i, t in reversed(list(enumerate(a))):\n    y = f(t)\n    t = int(t)\n    if y > 400:\n        print(f'f({t}) = MAGNA NIMIS!')\n    else:\n        print(f'f({t}) =', '{:.2f}'.format(y))", "s = [int(input()) for i in range(11)]\ns.reverse()\nfor x in s:\n    r = abs(x) ** 0.5 + 5 * x ** 3\n    if r > 400:\n        print('f(%d) = %s' % (x, \"MAGNA NIMIS!\"))\n    else:\n        print('f(%d) = %.2f' % (x, r))", "import math\n\ndef f(t):\n    return math.sqrt(abs(t)) + 5 * t ** 3\n\na = [int(input()) for _ in range(11)]\nfor i, t in reversed(list(enumerate(a))):\n    y = f(t)\n    if y > 400:\n        print('f(', t, ') = MAGNA NIMIS!', sep='')\n    else:\n        print('f(', t, ') = %.2f' % y, sep='') ", "a = []\n\nfor i in range(11):\n    a.append(int(input()))\n    \nfor i in range(10,-1,-1):     \n   \n    temp =(abs(a[i]))**(1/2) + 5*a[i]**3\n    if temp >= 400:\n        print(\"f({}) = MAGNA NIMIS!\".format(a[i]) )\n    else:\n        print(\"f({}) = {:.2f}\".format(a[i], temp) )\n    \n\n   \n", "for l in reversed([int(input()) for _ in range(11)]):\n\tans = abs(l)**.5 + (l**3)*5\n\tprint('f({}) ='.format(l), ('{:0.2f}'.format(ans) if 400 >=ans else  'MAGNA NIMIS!'))\n", "aa =[]\nfor i in range(11):\n\tx = int(input())\n\taa.append(x)\n \nfor x in aa[::-1]:\n\ta = (x**3)*5\n\tb = abs(x)**0.5\n\tans = a+b\n\tif ans >= 400:\n\t\tprint(\"f(\"+str(x)+\") = MAGNA NIMIS!\")\n\telse:\n\t\tprint(\"f(\"+str(x)+\") = \"+\"%.2f\" % ans)", "varo = []\nseqis = 0\n\nfor i in range(11):\n    varo.append(int(input()))\n    seqis += 1\n\nfor i in range(11):\n    seqis -= 1\n    a = abs(varo[seqis]) ** 0.5\n    b = (varo[seqis] ** 3) * 5\n    result = a + b\n\n    if 400 > result:\n        print(\"f(\", varo[seqis], ') = ', '%.2f' % result, sep='')\n    else:\n        print(\"f(\", varo[seqis], \") = MAGNA NIMIS!\", sep='')\n\n", "import math\nvar = []\nfor i in range(11):\n    t = int(input())\n    var.append(t)\nfor i in range(11):\n    d = var.pop()\n    Ares = math.sqrt(abs(d))\n    Bres = d**3 * 5\n    res = Ares + Bres\n    if res > 400:\n        print(f'f({d}) = MAGNA NIMIS!')\n    else:\n        formatted = '{:.2f}'.format(res)\n        print(f'f({d}) = {formatted}')", "import math\narrInput = []\nfor i in range(11):\n    inp = int(input())\n    arrInput.append(inp)\narrReverse = list(reversed(arrInput))\nfor item in arrReverse:\n    a = math.sqrt(abs(item))\n    b = item*item*item*5\n    res = a + b\n    if res > 400:\n        print(f\"f({item}) = MAGNA NIMIS!\")\n    else:\n        formattedRes = '{:.2f}'.format(res)\n        print(f\"f({item}) = {formattedRes}\")", "import math\n\ndef f(t) -> float:\n    return math.sqrt(abs(t)) + 5 * t ** 3\n\na = [float(input()) for _ in range(11)]\nfor i, t in reversed(list(enumerate(a))):\n    y = f(t)\n    if y > 400:\n        print('f(%.0f) =' % t, 'MAGNA NIMIS!')\n    else:\n        print('f(%.0f) =' % t, '%.2f' % y)", "s=[int(input()) for i in range(1,12)][::-1]\nfor i in range(11):\n  a=s[i]\n  a=(a if a>0 else -a)**.5\n  b=(s[i]**3)*5\n  r=a+b\n\n  if r>400:\n    print(\"f({}) = MAGNA NIMIS!\".format(s[i]))\n  else:\n    print(\"f({}) = {:.2f}\".format(s[i],r))    \n", " \ndef f(x):\n    a = abs(x) ** 0.5\n    b = (x ** 3) * 5\n    r = a + b\n    return 'MAGNA NIMIS!' if 400 < r else format(r, '.2f')\n \nfor x in reversed(list(int(input()) for _ in range(11))):\n    print('f({}) = {}'.format(x, f(x)))", "import math\n\n\ndef f(t) -> float:\n    return math.sqrt(abs(t)) + 5 * t ** 3\n\n\na = [float(input()) for _ in range(11)]\nfor i, t in reversed(list(enumerate(a))):\n    y = f(t)\n    t = int(t)\n    if y > 400:\n        print(f'f({t}) = MAGNA NIMIS!')\n    else:\n        print(f'f({t}) = {y:.2f}')", "data=[]\nfor nextum in range(1, 12):\n    data.append(int(input()))\n \ndata.reverse()\n \nfor x in data:\n    res = x**3 * 5\n    res += abs(x)**(0.5)\n \n    if(res <= 400):\n        print(\"f({0}) =\".format(x), \"{:.2f}\".format(res))\n    else:\n        print(\"f({0}) = MAGNA NIMIS!\".format(x))", "t = []\nwhile True:\n\ttry: x = int(input()); t += [x]\n\texcept: break\nfor x in t[::-1]:\n\tprint('f(%d) = %s'%(x, '%.2f'%(5 * x**3 + abs(x)**.5) if x<5 else 'MAGNA NIMIS!'))", "import os\nimport sys\nfrom io import BytesIO, IOBase\nimport heapq as h \nfrom bisect import bisect_left\n\nfrom types import GeneratorType\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n \n    def __init__(self, file):\n        import os\n        self.os = os\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n \n    def read(self):\n        while True:\n            b = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n \n    def readline(self):\n        while self.newlines == 0:\n            b = self.os.read(self._fd, max(self.os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n \n    def flush(self):\n        if self.writable:\n            self.os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n \n \nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n \n \nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n \nimport time\nstart_time = time.time()\n\nimport collections as col\nimport math, string\nfrom functools import reduce\n\ndef getInts():\n    return [int(s) for s in input().split()]\n\ndef getInt():\n    return int(input())\n\ndef getStrs():\n    return [s for s in input().split()]\n\ndef getStr():\n    return input()\n\ndef listStr():\n    return list(input())\n\nMOD = 10**9+7\n\n\"\"\"\n\n\"\"\"\ndef solve():\n    A = []\n    for i in range(11):\n        A.append(getInt())\n    A = A[::-1]\n    def f_(x): return math.sqrt(abs(x))+5*(x**3)\n    for a in A:\n        y = f_(a)\n        if y > 400:\n            print(\"f({}) =\".format(a),\"MAGNA NIMIS!\")\n        else:\n            print(\"f({}) =\".format(a),\"%.2f\"%y)\n    return\n    \n    \n    \n#for _ in range(getInt()):    \nsolve()"]