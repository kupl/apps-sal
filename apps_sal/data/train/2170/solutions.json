["import heapq\n\ndef sum_sqaure(a, k):\n    q, r = divmod(a, k)\n    return q**2 * (k-r) + (q+1)**2 * r\n\ndef diff(a, k):\n    return sum_sqaure(a, k+1) - sum_sqaure(a, k)\n\nn, k = map(int, input().split())\nnums = list(map(int, input().split()))\n\ncurr = sum(sum_sqaure(a, 1) for a in nums)\nQ = [(diff(a, 1), a, 1) for a in nums]\nheapq.heapify(Q)\nfor __ in range(k - n):\n    d, a, i = heapq.heappop(Q)\n    curr += d\n    heapq.heappush(Q, (diff(a, i+1), a, i+1))\nprint(curr)", "import sys\nreadline = sys.stdin.readline\nfrom heapq import heappop as hpp, heappush as hp\n\n\nINF = 10**9+7\ndef calc(A, x):\n    if A < x:\n        return INF\n    d, r = divmod(A, x)\n    return d*d*x+(2*d+1)*r\n\nN, K = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\nQ = [(-calc(a, 1)+calc(a, 2), a, 1) for a in A]\nQ.sort()\nfor _ in range(K-N):\n    dif, a, x = hpp(Q)\n    hp(Q, (-calc(a, x+1) + calc(a, x+2), a, x+1))\n\nans = 0\nfor _, a, x in Q:\n    ans += calc(a, x)\nprint(ans)    \n", "def calc(l, n):\n    smol = l // n\n    tol = l % n\n    return smol * smol * n + (2 * smol + 1) * tol\n\n\nimport heapq\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncurr = [1] * n\n\nq = []\nfor i in range(n):\n    v = a[i]\n    heapq.heappush(q, (calc(v, 2) - calc(v, 1), i))\n\nout2 = sum([x*x for x in a])\n\nfor i in range(k - n):\n    diff, nex = heapq.heappop(q)\n    curr[nex] += 1\n    v = a[nex]\n    heapq.heappush(q, (calc(v, curr[nex] + 1) - calc(v, curr[nex]), nex))\n    out2 += diff\n\nout = 0\nfor i in range(n):\n    out += calc(a[i], curr[i])\nassert(out == out2)\nprint(out)\n"]