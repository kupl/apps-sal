["n=int(input())\na=list(map(int,input().split()))\nk=[]\nfor i in range(n):\n    for j in range(a[i]):\n        k.append(i+1)\nm=int(input())\nb=list(map(int,input().split()))\nfor i in b:\n    print(k[i-1])", "n, p, m, w = int(input()), list(map(int, input().split())), int(input()), sorted(enumerate(map(int, input().split())), key = lambda x: x[1])\nans, pos = [-1] * m, [0, 0]\nfor i, c in w:\n    while pos[0] + p[pos[1]] < c:\n        pos[0] += p[pos[1]]\n        pos[1] += 1\n    ans[i] = pos[1] + 1\nprint(*ans, sep = '\\n')\n", "from sys import stdin, stdout\nfrom bisect import *\ninput = stdin.read()\nn, ai_str, m, qi_str = [_f for _f in input.split('\\n') if _f]\n\na = list(map(int, ai_str.split()))\nq = list(map(int, qi_str.split()))\nassert len(a) > 0 and len(q) > 0\n\nb = [0] * len(a)\nfor i, ai in enumerate(a):\n\tb[i] = b[i-1] + ai\n\n\nfor qi in q:\n\tprint(bisect_left(b, qi) + 1)\n", "\n\n\ninput()\nheaps = list(map(int, input().split()))\ninput()\nnumbers = list(map(int, input().split()))\n#heaps = [2, 7, 3, 4, 9]\n#numbers = [1, 25, 11]\nres = [0] * len(numbers)\n\nsums = [heaps[0]]\nmask = [1] * heaps[0]\nfor i in range(1, len(heaps)):\n    mask += [i+1] * (heaps[i])\n    sums.append(heaps[i] + sums[-1])\n\nfor i in range(len(numbers)):\n    print(mask[numbers[i]-1])\n\n", "num = int(input())\npiles = list(map(int, input().split(' ')))\ntuplex = []\ncurr = 1\nfor i in piles:\n    tuplex.append((curr, curr+i-1))\n    curr = curr+i\n\nquer = int(input())\nqueries = list(map(int, input().split(' ')))\nquer2 = [[queries[x], x, -1] for x in range(len(queries))]\nquer2.sort(key = lambda x:x[0])\n\nind = 0\nfor i in range(len(quer2)):\n    while not (tuplex[ind][0] <= quer2[i][0] <= tuplex[ind][1]):\n        ind += 1\n    quer2[i][2] = ind\n\nquer2.sort(key = lambda x:x[1])\nfor i in quer2:\n    print(i[2]+1)", "kheap=int(input())\nheaps=list(map(int,input().split()))\nkworms=int(input())\nworms=list(map(int,input().split()))\nd1={i:0 for i in range(1,sum(heaps)+1)}\nprev=0\ncounter=1\nfor i in heaps:\n    start=prev+1\n    prev+=i\n    for i2 in range(start,prev+1):\n        d1[i2]=counter\n    counter+=1\nfor num in worms:\n    print(d1[num])", "'''\nCreated on Oct 6, 2014\n\n@author: Ismael\n'''\nn = int(input())\nA = list(map(int,input().split()))\nq = int(input())\nQ = list(map(int,input().split()))\nans = []\nprec = 1\niStack = 0\nfor ai in A:\n    iStack += 1\n    for query in range(prec,prec+ai):\n        ans.append(iStack)\n    prec = ai\nfor query in Q:\n    print(ans[query-1])", "\n#class heap:\n\t#def __init__(self, first, last):\n\t\t#self.first = first\n\t\t#self.last = last\n\t#def __contains__(self, x):\n\t\t#if self.first <= x <= self.last:\n\t\t\t#return True\n\t\t#else:\n\t\t\t#return False\n\t\t\ndef borders(nums):\n\tprev = 1\n\tfor x in nums:\n\t\tyield prev, prev + x - 1\n\t\tprev += x\n\ndef inside(x, first, last):\n\treturn first <= x <= last\n\n#nums = list(int(x) for x in '2 7 3 4 9'.split(\" \"))\n#print(nums)\n#print(list(borders(nums)))\n\n#j = list(int(x) for x in '1 25 11'.split(\" \"))\n\n\n\n\nheapsamount = int(input())\nnums = list(int(x) for x in input().split(\" \"))\njamount = int(input())\nj = list(int(x) for x in input().split(\" \"))\n\n#heapsamount = 5\n#nums = list(int(x) for x in '2 7 3 4 9'.split(\" \"))\n#jamount = 4\n#j = [1, 25, 11, 4]\n\nb= list(borders(nums))\n\n#for hp, number in zip(hps, j):\n\n#hps = list(heap(*args) for args in b)\n#for number in j:\n\t#for hp, hpnum in zip(hps, range(1,heapsamount+1)):\n\t\t#if number in hp:\n\t\t\t#print(hpnum)\n\t\t\t\n\t\t\t\nsor = list([x, y, None] for x, y in zip(j, list(range(jamount))))\n\nsor.sort(key=lambda x: x[0])\n\ni=0\nj=0\nfor number, index, n in sor:\n\tbord = b[i]\n\t\n\twhile not inside(number, bord[0], bord[1]):\n\t\ti+=1\n\t\tbord = b[i]\n\t\t\n\t#while inside(number, bord[0], bord[1]):\n\tsor[j][2] = i+1\n\t\t\n\tj+=1\n\t\nsor.sort(key=lambda x:x[1])\nfor x in sor:\n\tprint(x[2])\n\t\t\n\t\t\n\t\n\t\n", "n,a = int(input()), list(map(int, input().split()))\nm,q = int(input()), list(map(int, input().split()))\n\ndp = []\nfor i in range(n):\n    dp += [i+1]*a[i]\nfor x in q:\n    print (dp[x-1])", "__author__ = 'hamed1soleimani'\nimport math\ninput()\np = input().split()\ninput()\nq = input().split()\n\n\nworms = list(range(10 ** 6))\n\nm = 0\nfor i in range(len(p)):\n    for j in range(int(p[i])):\n        worms[m] = i\n        m += 1\n\nfor x in q:\n    print(worms[int(x) - 1] + 1)\n\n\n", "n=int(input())\na=list(map(int,input().split())) \nm=int(input()) \nq=list(map(int,input().split()))\n\nb=[]\nfor i in range(n):\n    b+=[i+1]*a[i]\n \n\nfor i in q:\n    print(b[i-1])\n", "n = int(input())\na = list(map(int, input().split()))\ninput()\nqueries = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n\tans += [i]*a[i]\n\nfor q in queries:\n\tprint(ans[q-1]+1)\n", "n = int(input())\npre = []\nrow = 1\nfor i in input().split(' '):\n    for j in range(int(i)):\n        pre.append(row)\n    row += 1\nm = int(input())\ntasty_worms = []\nfor i in input().split(' '):\n    i = int(i)\n    print(pre[i - 1])\n", "mp = {}\n\t\ndef main():\n\n\ta,b =-1,0\n\tn = int(input())\n\tline = input() #Read the whole line\n\tx = line.split()\n \t\n\t\t\t\n\tfor i in range(n):\n\t\ta = b\n\t\tb = b + int(x[i])\n\t\tfor k in range(a+1,b+1):\n                        mp[k] = 1 + i\n\n\tm = int(input())\t\n\tline = input()\n\tq = line.split()\n\n\tfor i in range(m):\n\t\tprint(mp[int(q[i])])\n\nmain()\t \n", "from itertools import accumulate\n\ndef bs(ws, w):\n   i, e = -1, len(ws)-1\n   \n   while e-i > 1:\n      m = (e+i)//2\n      if w <= ws[m]:\n         e = m\n      else:\n         i = m\n   return e\n   \ninput()\nworms = list(accumulate(map(int, input().split())))\ninput()\ntofind = list(map(int, input().split()))\n\nprint(\"\\n\".join(str(bs(worms, w)+1) for w in tofind))", "3\n\nfrom bisect import bisect_left\n\nn = int(input())\nA = list(map(int, input().split()))\nm = int(input())\nQ = list(map(int, input().split()))\n\nsum_A = list(A)\nfor i in range(1, n):\n    sum_A[i] += sum_A[i-1]\nfor q in Q:\n    print(bisect_left(sum_A, q) + 1)", "n = int(input())\na = [0]\nb = list(map(int,input().split()))\nfor i in range(len(b)):\n    for j in range(b[i]):\n        a.append(i+1)\nn = int(input())\nb = list(map(int,input().split()))\nfor i in range(len(b)):\n    print(a[b[i]])\n\n    \n", "# Codeforces contest 271d1 problem B\n\nimport bisect\n\nn = int(input())\nworms = [int(x) for x in input().split(' ')]\nfor i in range(n-1):\n    worms[i+1] += worms[i]\n\nm = int(input())\nv = [int(x) for x in input().split(' ')]\n[(lambda x: print(bisect.bisect_left(worms, x)+1))(x) for x in v]\n\n\n", "import math\nimport random\nimport itertools\nimport collections\nimport sys\nimport time\nimport fractions\nimport os\nimport functools\nimport bisect\n\n\ndef timer(f):\n    def tmp(*args, **kwargs):\n        t = time.time()\n        res = f(*args, **kwargs)\n        print(\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438: %f\" % (time.time()-t))\n        return res\n    return tmp\n\ndef contains(l, elem):\n    index = bisect.bisect_left(l, elem)\n    if index < len(l):\n        return l[index] == elem\n    return False\n\n\nn = int(input())\n\nl = list(map(int, input().split(' ')))\nq = int(input())\nqs = list(map(int, input().split(' ')))\n\n\"\"\"\nn = 3\nl = [5, 3, 4]\nq = 12\nqs = [i+1 for i in range(q)]\n\"\"\"\n\"\"\"\nn = 5\nl = [random.randint(0, 10) for i in range(n)]\nq = random.randint(0, 15)\nqs = [random.randint(0, 10) for i in range(q)]\nl = sorted(l)\nprint(l)\nprint(qs)\n\"\"\"\n\n#print(l)\n#print(qs)\n\npartials = list(itertools.accumulate(l))\n#print(partials)\n\nfor i in range(q):\n    kuchka = bisect.bisect_left(partials, qs[i])\n    print(kuchka+1)", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nq = list(map(int, input().split()))\n\nqq = sorted(q)\nans = dict()\n\nlimit = 0\ni = 0\nfor k in qq:\n    while not (limit < k <= limit + a[i]):\n        limit += a[i]\n        i += 1\n    ans[k] = i + 1\n\nfor k in q:\n    print(ans[k])\n", "from bisect import bisect_left\nn=int(input())\nS=A=list(map(int,input().split()))\nfor i in range(1,n): \n  S[i] += S[i-1]\nm=int(input())\nfor q in list(map(int,input().split())):\n  print(bisect_left(S, q)+1)", "from sys import stdin\n\ndef main():\n    '''\n    Name: Kevin S. Sanchez\n    Code: B. Worms\n    '''\n    inp = stdin\n    n = int(inp.readline())\n    worms = list(map(int, inp.readline().split()))\n    J = int(inp.readline())\n    Jworms = list(map(int, inp.readline().split()))\n\n    lunch = list()\n    \n    for i in range (0,len(worms)):\n        lunch += [i+1] * worms[i]\n\n    for i in Jworms:\n        print(lunch[i-1])\n\nmain()\n", "from bisect import *\nn = int(input())\na = list(map(int, input().split()))\nfor i in range(n - 1): a[i + 1] += a[i]\ninput()\nfor i in map(int, input().split()): print(bisect_left(a, i) + 1)", "from sys import stdin\nfrom bisect import bisect_left\n\nstdin.readline()\nx, l = 0, []\nfor y in map(int, stdin.readline().split()):\n    x += y\n    l.append(x)\nstdin.readline()\n\nfor y in map(int, stdin.readline().split()):\n    print(bisect_left(l, y) + 1)\n", "from sys import stdin\nfrom bisect import bisect_left\n\n\ndef main():\n    stdin.readline()\n    x, a = 0, []\n    for y in map(int, stdin.readline().split()):\n        x += y\n        a.append(x)\n\n    stdin.readline()\n    for x in map(int, stdin.readline().split()):\n        print(bisect_left(a, x) + 1)\n\n\nmain()\n"]