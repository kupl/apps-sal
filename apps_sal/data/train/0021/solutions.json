["t = int(input())\n\nfor _ in range(t):\n    n = list(input().strip())\n    s = list(map(int, input().strip().split()))\n\n    check = set(s)\n    found = False\n    for i in range(1, 1025):\n        newset = set([e^i for e in s])\n        if check == newset:\n            print(i)\n            found = True\n            break\n    if not found:\n        print(-1)\n", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  N = int(input())\n  a = list(map(int, input().split()))\n  a.sort()\n  for x in range(1, 1024):\n    b = [0] * N\n    for i in range(N): b[i] = a[i] ^ x\n    b.sort()\n    if a == b:\n      print(x)\n      break\n  else: print(-1)", "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    S = set(map(int, input().split()))\n    ok = False\n    for i in range(1, 1024):\n        tmp = {i ^ val for val in S}\n        if tmp == S:\n            print(i)\n            ok = True\n            break\n    if not ok:\n        print(-1)\n", "for _ in range(int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    ans=-1\n    for k in range(1,1025):\n        st=set(s)\n        for i in s:\n            val=i^k \n            if val not in st:\n                break\n            st.remove(val)\n        if not st:\n            ans=k \n            break\n    print(ans)", "# from decorators import *\nfrom sys import stdin, stdout\nfrom math import ceil\n\n# @debug\ndef solve(n,s):\n    s.sort()\n    for i in range(1,1025):\n        b = []\n        for j in range(n):\n            b.append(s[j]^i)\n        b.sort()\n        flag = True\n        for j in range(n):\n            if s[j]!=b[j]:\n                flag = False\n                break\n        if flag:\n            print(i)\n            return True\n    print(-1)\n\nfor _ in range(int(input())):\n    n = int(stdin.readline())\n    s = list(map(int,stdin.readline().split()))\n    solve(n,s)", "t = int(input())\n\nfor k in range(t):\n    n = int(input())\n    a = set(map(int, input().split()))\n    for x in range(1, 1025):\n        if set(x ^ q for q in a) == a:\n            print(x)\n            break \n    else:\n        print(-1)", "import sys\nints = (int(x) for x in sys.stdin.read().split())\nsys.setrecursionlimit(3000)\n\ndef main():\n    ntc = next(ints)\n    for tc in range(1,ntc+1):\n        n = next(ints)\n        s = [next(ints) for i in range(n)]\n        P = None\n        for x in s:\n            p = set(x^y for y in s)\n            if P==None: P = p\n            else: P &= p\n        ans = next(iter(sorted(P)[1:]), -1)\n        print(ans)\n    return\n\nmain()\n", "T = int(input())\n\nfor t in range(T):\n    n = int(input())\n    S = [int(_) for _ in input().split()]\n    setS = set(S)\n\n    for k in range(1, 1025):\n        for el in setS:\n            if el ^ k not in setS:\n                break\n        else:\n            print(k)\n            break\n    else:\n        print(-1)\n", "for _ in range(int(input())):\n    n = int(input())\n    ans = -1\n    l = set(map(int,input().split()))\n    for i in range(1,4 * (10 ** 3)):\n        s1 = set()\n        for j in l:\n            s1.add(i ^ j)\n        if(s1 == l):\n            ans = i\n            break\n    print(ans)", "import sys\ndef arr():\n    return list(map(int,input().split()))\ninput=sys.stdin.readline\nfrom collections import defaultdict\nimport math\nfor _ in range(int(input())):\n    N=int(input())\n    L=arr()\n    L.sort()\n    flag=False\n    for i in range(1,1025):\n        x=L[::]\n        for j in range(N):\n            x[j]=x[j]^i\n        x.sort()\n        x.sort()\n        if x==L:\n            ans=i\n            flag=True\n            break\n    if flag:\n        print(ans)\n    else:\n        print(-1)\n"]