def num_blocks(w, l, h):
    return w * l * h + (w + l) * (h - 1) * h // 2 + (h - 1) * h * (2 * h - 1) // 6


'\nFor those who wonder:\n\nfirst layer being of size w*l, the total number of blocks, SB, is:\n\n       SB = w*l + (w+1)*(l+1) + (w+2)*(l+2) + ... + (w+h-1)*(l+h-1)\n\nSo:    SB = " Sum from i=0 to h-1 of (w+i)*(l+i) "\n\nLet\'s use the following notation for this:  SB = S(i)[ (w+i)*(l+i) ]\n\nThen:\n       SB = S(i)[ w*l + i(w+l) + i**2 ]\n          \n          = S(i)[ w*l ] + S(i)[ i(w+l) ] + S(i)[ i**2 ]\n          \n          =    w*l*h    + (w+l) * S(i)[ i ] + S(i)[ i**2 ]\n\n\nHere, you find two classic sums of sequences (see wiki or equivalent for the demonstrations):\n\n    S(i)[ i ]    = sum of all integers from 1 to x = x*(x+1) // 2\n    S(i)[ i**2 ] = sum of all squares of integers from 1 to x = x*(x+1)*(2*x+1) // 6\n\nSince on our side we do the sum from 0 (which doesn\'t affect at all the result)\nto h-1 in place of x, we get:\n\n        SB = w*l*h + (w+l) * (h-1)*h//2 + (h-1)*h*(2*h-1)//6\n\n'
