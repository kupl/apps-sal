["t=int(input())\nfor i in range(t):\n    n,k=list(map(int,input().split(\" \")))\n    arr=list(map(int,input().strip().split(\" \")))[:n]\n    def maxCircularSum(arr, n, k):\n        if (n < k):\n            print(\"Invalid\");\n            return;\n\n        sum = 0;\n        start = 0;\n        end = k - 1;\n\n        for i in range(k):\n            sum += arr[i];\n\n        ans = sum;\n\n        for i in range(k, n + k):\n            sum += arr[i % n] - arr[(i - k) % n];\n\n            if (sum > ans):\n                ans = sum;\n                start = (i - k + 1) % n;\n                end = i % n;\n\n        print(ans);\n\n    def __starting_point():\n        maxCircularSum(arr, n, k);\n__starting_point()", "# cook your dish here\ninp = list(map(int,input().split()))\nt = inp[0]\nfor te in range(t):\n    inp = list(map(int,input().split()))\n    n = inp[0]\n    k = inp[1]\n    inpp = list(map(int,input().split()))\n    \n    max = 0\n    for i in range(k) :\n        max = max + inpp[i%n]\n        summ = max\n    for j in range(0,n):\n        summ = summ - inpp[j] + inpp[(j+k)%n]\n        if summ >max :\n            max = summ\n    print(max)", "for _ in range(int(input())):\n    n,k = list(map(int,input().split()))\n    temp = list(map(int,input().split()))\n    if n == k:\n        print(sum(temp))\n    elif n > k:\n        l = len(temp)\n        res = sum(temp[:k])\n        s = sum(temp[:k])\n        temp = temp[:] + temp[:k-1]\n        for i in range(l-1):\n            s = (s - temp[i]) + temp[k+i]\n            if res < s:\n                res = s\n        print(res)\n        \n", "\r\nfor _ in range(int(input())):\r\n    n,k = map(int,input().split())\r\n    l = list(map(int,input().split()))\r\n    l1 =[]\r\n    for i in range(k):\r\n        l1.append(l[-1-i])\r\n    l1.reverse()\r\n    for i in l:\r\n        l1.append(i)\r\n    #print(l1)\r\n    sums = sum(l1[:k])\r\n    sumlist = [sums]\r\n    for i in range(len(l1)-k):\r\n        sumlist.append(sums-l1[i]+l1[i+k])\r\n        sums = sums-l1[i]+l1[i+k]\r\n    print(max(sumlist))", "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    a = list(map(int,input().split()))\n    s = sum(a[0:k])\n    x = s\n    for i in range(n-1):\n        s = s - a[i] + a[(i+k)%n]\n        if x<s:\n            x = s\n    print(x)", "t=int(input())\r\nfor i in range(t):\r\n    n,k=list(map(int,input().split(\" \")))\r\n    arr=list(map(int,input().strip().split(\" \")))[:n]\r\n    def maxCircularSum(arr, n, k):\r\n        if (n < k):\r\n            print(\"Invalid\");\r\n            return;\r\n\r\n        sum = 0;\r\n        start = 0;\r\n        end = k - 1;\r\n\r\n        for i in range(k):\r\n            sum += arr[i];\r\n\r\n        ans = sum;\r\n\r\n        for i in range(k, n + k):\r\n            sum += arr[i % n] - arr[(i - k) % n];\r\n\r\n            if (sum > ans):\r\n                ans = sum;\r\n                start = (i - k + 1) % n;\r\n                end = i % n;\r\n\r\n        print(ans);\r\n\r\n    def __starting_point():\r\n        maxCircularSum(arr, n, k);\n__starting_point()", "# cook your dish here\ninp = list(map(int,input().split()))\nt = inp[0]\nfor te in range(t):\n    inp = list(map(int,input().split()))\n    n = inp[0]\n    k = inp[1]\n    inp = list(map(int,input().split()))\n    \n    max = 0\n    for i in range(k) :\n        max = max + inp[i%n]\n        sums = max\n    for j in range(0,n):\n        sums = sums - inp[j] + inp[(j+k)%n]\n        if sums >max :\n            max = sums\n    print(max)\n        \n    \n", "# cook your dish here\nfor _ in range(int(input())):\n    n,k=list(map(int,input().split()))\n    x=list(map(int,input().split()))\n    x=x[-(k):]+x\n    y=sum(x[0:k])\n    z=sum(x[0:k])\n    for i in range(k,len(x)):\n        z=(z-x[i-k])+x[i]\n        y=max(y,z)\n    print(y)\n", "for _ in range(int(input())):\r\n    n,k=list(map(int,input().split()))\r\n    a=list(map(int,input().split()))\r\n    a=a+a[:k]\r\n    s=sum(a[:k])\r\n    maxsum=s\r\n    for i in range(k,len(a)):\r\n        s=s+a[i]-a[i-k]\r\n        maxsum=max(maxsum,s)\r\n    print(maxsum)\r\n", "def maxSum(arr, n, k):\r\n\r\n    total = sum(arr[:k])\r\n\r\n    x = total \r\n    for i in range(k, n): \r\n        x += arr[i] - arr[i-k] \r\n        total = max(total, x) \r\n    return total\r\n\r\nfor _ in range(int(input())):\r\n    n, k = map(int, input().split())\r\n\r\n    li = [int(i) for i in input().split()]*2\r\n    print(maxSum(li,2*n,k))", "# cook your dish here\ndef maxCircularSum(arr, n, k) : \n  \n    # k must be greater  \n    \n  \n    sum = 0; start = 0; end = k - 1;  \n  \n    # calculate the sum of first k elements.  \n    for i in range(k) : \n        sum += arr[i];  \n  \n    ans = sum;  \n  \n    for i in range(k, n + k) : \n  \n        # add current element to sum  \n        # and subtract the first element  \n        # of the previous window.  \n        sum += arr[i % n] - arr[(i - k) % n];  \n  \n        if (sum > ans) : \n            ans = sum;  \n            start = (i - k + 1) % n;  \n            end = i % n;  \n  \n    return ans \n# cook your dish here\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    l=list(map(int,input().split()))\n    print(maxCircularSum(l,n,k))", "def maxCircularSum(arr, n, k) : \r\n    sum = 0\r\n    start = 0\r\n    end = k - 1  \r\n    for i in range(k) : \r\n        sum += arr[i] \r\n    ans = sum  \r\n    for i in range(k, n + k) :  \r\n        sum += arr[i % n] - arr[(i - k) % n] \r\n        if (sum > ans) : \r\n            ans = sum  \r\n            start = (i - k + 1) % n  \r\n            end = i % n \r\n    print(ans)   \r\nt = int(input())\r\nfor i in range(t):\r\n    lst1 = input().split()\r\n    n = int(lst1[0])\r\n    k = int(lst1[1])\r\n    lst = input().split()\r\n    lst = [int(l) for l in lst]\r\n    maxCircularSum(lst, n, k) ", "t=int(input())\nfor _ in range(t):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    b=a[0:k]\n    a.extend(b)\n    i=0\n    s=sum(a[i:i+k])\n    i=k\n    temp=s\n    while(i<n+k-1):\n        temp=temp+a[i]-a[i-k]\n        if(temp>s):\n            s=temp\n        i+=1\n    print(s)", "for i in range(int(input())):\n    n , k = map(int,input().split())\n    li = list(map(int,input().split()))\n    s = 0\n    s = sum(li[0:k])\n    m = s\n    for i in range(n-1):\n        if(k + i >= n):\n            s = s - li[i] + li[k + i - n]\n        else:\n            s = s - li[i] + li[k + i]\n        if(s > m):\n            m = s\n    print(m)", "for i in range(int(input())):\n    n,k=list(map(int,input().split()))\n    a=[int(i) for i in input().split()]\n    wsum=0;msum=0;\n    for i in range(k):\n       wsum+=a[i] \n    msum=max(wsum,msum)\n    #st=wsum-a[k-1]+a[-1]\n    for i in range(k,n+k-1):\n        if i<n:\n            wsum+=a[i]-a[i-k]\n        else:\n            wsum+=a[abs(n-i)]-a[i-k]\n            #print(wsum)\n        \n        msum=max(wsum,msum)\n    print(msum)\n  \n    \n", "# cook your dish here\nfor _ in range(int(input())):\n    n , k = map(int,input().split())\n    li = list(map(int,input().split()))\n    s = 0\n    s = sum(li[0:k])\n    m = s\n    for i in range(n-1):\n        if(k + i >= n):\n            s = s - li[i] + li[k + i - n]\n        else:\n            s = s - li[i] + li[k + i]\n        if(s > m):\n            m = s\n    print(m)", "# cook your dish here\nfor _ in range(int(input())):\n    n,k=map(int,input().split())\n    li=[int(x) for x in input().split()]\n    \n    ''''en=li[-1]\n    new=li[:len(li)-1]\n    ma=new[0]+new[1]\n    for i in range(1,len(new)-1):\n        if(new[i]+new[i+1]>ma):\n            ma=new[i]+new[i+1]\n        \n    #new.sort(reverse=True)\n    print(en+ma)'''\n    su=0\n    st=0\n    end=k-1\n    for i in range(k):\n        su+=li[i]\n    res=su    \n    for i in range(k,n+k):\n        su+=(li[i%n]-li[(i-k)%n])\n        if(su>res):\n            res=su\n    print(res)        ", "for _ in range(int(input())):\n    n,k=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    l=l[-(k):]+l\n    #print(l)\n    c=sum(l[0:k])\n    d=sum(l[0:k])\n    for i in range(k,len(l)):\n        #print(d)\n        #print(i,l[i-k],l[i])\n        d=(d-l[i-k])+l[i]\n        c=max(c,d)\n    print(c)\n", "# cook your dish here\nfor _ in range(int(input())):\n    n,k=list(map(int,input().split(' ')))\n    s=input().split(' ')\n    try:\n        a=list(map(int,s))\n    except:\n        a=list(map(int,s[:-1]))\n\n    out=-1\n    dp=[a[0]]\n\n\n    for i in range(1,k):\n        dp.append(dp[-1]+a[i])\n        out = max(out, dp[-1])\n    i=k\n\n    visited=False\n    while True:\n\n        dp.append(dp[-1]-a[(i-k)%n]+a[i])\n        out = max(out, dp[-1])\n        if i==n-1:\n            if not visited:\n                visited = True\n            else:\n                break\n\n        i=(i+1)%n\n\n    print(out)\n", "t = int(input())\n\nwhile t:\n    n, k = input().split()\n    n, k = int(n), int(k)\n    a = [int(i) for i in input().split()]\n    b = a[ :k-1]\n    a = a + b\n\n    max = sum(a[:k])\n    temp = max\n    for i in range(1, n):\n\n        temp = temp - a[i-1]+a[i+k-1]\n\n        if temp>max:\n            max = temp\n\n\n    print(max)\n\n    t-=1", "try:\r\n\tdef maxSum(arr, n, k): \r\n\t\tres = 0\r\n\t\tfor i in range(k): \r\n\t\t\tres += arr[i] \r\n\t\tcurr_sum = res \r\n\t\tfor i in range(k,n): \t\r\n\t\t\tcurr_sum += arr[i] - arr[i-k] \r\n\t\t\tres = max(res, curr_sum) \r\n\t\treturn res\r\n\tt=int(input())\r\n\tfor _ in range(t):\r\n\t\tn,k=map(int,input().split())\r\n\t\tarr=list(map(int,input().split()))\r\n\t\tarr=arr+arr[:k-1]\r\n\t\tn1=len(arr)\r\n\t\tprint(maxSum(arr,n1,k))\r\nexcept:\r\n\tpass", "t=int(input())\r\nfor i in range(t):\r\n    n,k=input().split()\r\n    k=int(k)\r\n    n=int(n)\r\n    l=[int(x) for x in input().split()]\r\n    for i in range(k-1):\r\n        l.append(l[i])\r\n    length=len(l)\r\n    #print(length)\r\n    sum=0\r\n    for i in range(k):\r\n        sum+=l[i]\r\n    max=sum\r\n    end=k-1\r\n    start=0\r\n    while end!=length:\r\n        if sum>max:\r\n            max=sum\r\n        end+=1\r\n        if(end<=length-1):\r\n            sum+=l[end]\r\n        sum-=l[start]\r\n        start+=1\r\n    print(max)\r\n\r\n", "t=int(input())\r\nfor _ in range(t):\r\n    n,k=map(int,input().split())\r\n    l=list(map(int, input().split()))\r\n    if (k>1):\r\n        for i in range(k-1):\r\n            l.append(l[i])\r\n    p=[]\r\n    p.append(l[0])\r\n    for i in range(1,len(l)):\r\n        p.append(p[i-1]+l[i])\r\n    j=0\r\n    sub=0\r\n    for i in range(k,len(l)):\r\n        sub+=l[j]\r\n        j+=1\r\n        p[i]-=sub\r\n    print(max(p))", "# cook your dish here\nfor k in range(int(input())):\n\tnum, bags = map(int, input().split())\n\tcoins = list(map(int, input().split()))\n\n\tmost = 0\n\ttemp = sum(coins[:bags])\n\tfor i in range(num):\n\t\tif (i+bags) <= num:\n\t\t\ttemp = temp - coins[i] + coins[(i+bags)%num]\n\t\telse:\n\t\t\ttemp = temp - coins[i] + coins[(i+bags)%num]\n\t\tif temp > most:\n\t\t\tmost = temp\n\tprint(most)", "# cook your dish her\nfor _ in range(int(input())):\n    n,k=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    \n    def ki(v,n,k):\n        if n<k:\n            print(0)\n        su=0\n        a=0\n        e=k-1\n        for i in range(k):\n            su+=v[i]\n            \n        for i in range(k,n+k):\n            su+=v[i%n]-v[(i-k)%n]\n            if su>a:\n                a=su\n                \n        print(a)\n        \n    ki(l,n,k)   \n        \n        \n        \n"]