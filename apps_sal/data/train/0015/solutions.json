["from math import *\n\nzzz = int(input())\nfor zz in range(zzz):\n    a, b, x, y = list(map(int, input().split()))\n    print(max(x*b, (a-x-1)*b, y*a, (b - y - 1)*a))\n", "for t in range(int(input())):\n    a, b, x, y = [int(i) for i in input().split()]\n    l = max(x, a - 1 - x)\n    h = max(y, b - 1 - y)\n    print(max(l * b, h * a))\n", "for _ in range(int(input())):\n    a, b, x, y = list(map(int, input().split()))\n    num1 = x * b\n    num2 = y * a\n    num3 = (a - x - 1) * b\n    num4 = (b - y - 1) * a\n    print(max(num2, num1, num3, num4))", "for _ in range(int(input())):\n    a, b, x, y = map(int, input().split())\n    w = max(a-1-x, x)\n    h = max(b-1-y, y)\n\n    ans = max(w * b, h * a)\n    print(ans)", "for _ in range(int(input())):\n    a, b, x, y = list(map(int, input().split()))\n    print(max(x*b, y*a, (a-x-1)*b, (b-y-1)*a))\n", "t = int(input())\nfor _ in range(t):\n\ta, b, x, y = map(int, input().split())\n\tr = max([a*y, a*(b-y-1), b*x, b*(a-x-1)])\n\tprint(r)", "t = int(input())\nfor _ in range(t):\n    a, b, x, y = list(map(int, input().split()))\n    print(max(a*y, a*(b-y-1), x*b, (a-x-1)*b))\n", "t = int(input())\nfor _ in range(t):\n\ta, b, x, y = map(int, input().split())\n\n\tl = max(a*y, a*(b-y-1))\n\tll = max(b*x, b*(a-x-1))\n\tprint(max(l, ll))", "import sys\ninput = sys.stdin.readline\nfor k in range(int(input())):\n    a, b, x, y = list(map(int, input().split(\" \")))\n    print(max(a*y, b*x, (b-1-y)*a, (a-1-x)*b)) \n", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  h,w,x,y = map(int,input().split())\n  can = [h*y,h*(w-1-y),w*x,w*(h-1-x)]\n  print(max(can))", "t = int(input())\nfor _ in range(t):\n  n,m,a,b = map(int,input().split())\n  print(max(max(a,n-a-1)*m,max(b,m-b-1)*n))", "# from collections import deque\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nfor i in range(int(input())):\n    a,b,x,y = map(int,input().split())\n    print(max(a*y,b*x,a*(b-y-1),b*(a-x-1)))", "for _ in range(int(input())):\n    n,m,x,y=map(int,input().split())\n    s=0\n    s=max(s,x*m)\n    s=max(s,(n-x-1)*m)\n    s=max(s,y*n)\n    s=max(s,(m-y-1)*n)\n    print(s)", "t = int(input())\nfor i in range(t):\n    a, b, x, y = list(map(int, input().split()))\n    print(max(x * b, y * a, (a - x - 1) * b, (b - y - 1) * a))\n", "t = int(input())\nfor _ in range(t):\n    a,b,x,y = map(int, input().split())\n    print(max([x*b,(a-x-1)*b,a*y,a*(b-y-1)]))", "from math import *\nfrom collections import *\nt = int(input())\nfor y in range(t):\n\ta,b,x,y = map(int,input().split())\n\tl = max(x,a-x-1)\n\tw = max(y,b-y-1)\n\tprint(max(l*b,a*w))", "import sys\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ngo = lambda : 1/0\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}{}\".format(i, sep))\nINF = float('inf')\nMOD = int(1e9 + 7)\nYES = \"YES\"\nNO = \"NO\"\n\nfor _ in range(int(input())):\n  try:\n    a, b, x, y = read()\n    up = y * a\n    down = (b - y - 1) * a\n    left = x * b\n    right = (a - x - 1) * b \n\n    print(max([up, down, left, right]))\n\n  except ZeroDivisionError:\n    continue\n\n  except Exception as e:\n    print(e)\n    continue", "TC = int(input())\n\nfor _ in range(TC):\n    a, b, x, y = list(map(int, input().split()))\n    print((max(\n        y * a,\n        x * b,\n        (b - y - 1) * a,\n        (a - x - 1) * b\n    )))\n\n\n\n", "for nt in range(int(input())):\n\ta,b,x,y=map(int,input().split())\n\ta1=max(x,0)*b\n\ta2=(a-x-1)*b\n\ta3=(y)*a\n\ta4=(b-y-1)*a\n\tprint (max(a1,a2,a3,a4))", "def main(a, b, x, y):\n\tsol = max(max(x, a-x-1)*b, max(y, b-y-1)*a)\n\tprint(sol)\n\nn = int(input())\nfor _ in range(n):\n\tlst = list(map(int, input().split()))\n\ta, b, x, y = lst[0], lst[1], lst[2], lst[3]\n\tmain(a, b, x, y)\n", "t=int(input())\nfor i in range(t):\n    a,b,x,y=list(map(int,input().split()))\n    r = [a*y, b*x, a*(b-y-1), b*(a-x-1)]\n    print(max(r))\n", "t = int(input())\nwhile t:\n    t += -1\n    a, b, x, y = map(int, input().split())\n    a1 = b * x\n    a2 = a * y\n    a3 = b * (a - x - 1)\n    a4 = a * (b - y - 1)\n    print(max(a1, a2, a3, a4))", "from sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nt, = rl()\nfor _ in range(t):\n    a,b,x,y = rl()\n    print(max(x*b,y*a,(a-x-1)*b,(b-y-1)*a))\n", "t = int(input())\nfor _ in range(t):\n    a, b, x, y = list(map(int, input().split()))\n    h = max(a-x-1, x) * b\n    v = max(b-y-1, y) * a\n    print(max(h, v))\n", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        A, B, X, Y = [int(x) for x in input().split()]\n        ma = 0\n        ma = max(X * B, ma)\n        ma = max(Y * A, ma)\n        ma = max((A - X - 1) * B, ma)\n        ma = max((B - Y - 1) * A, ma)\n\n        print(ma)\n\n\n        \n        \n    \n\ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "t = int(input())\nwhile t:\n    t -= 1\n    a, b, x, y = list(map(int, input().split()))\n    area1 = a * y\n    area2 = x * b\n    area3 = (a - 1 - x) * b\n    area4 = a * (b - 1 - y)\n    print(max(area1, area2, area3, area4))\n", "for _ in range(int(input())):\n    a,b,x,y = map(int,input().split())\n    total = a*b\n    left = x*b\n    right = total - left - b\n    down = a*y\n    up = total - down - a\n    print( max( left, right, down, up ) )", "for i in range(int(input())):\n    a, b, x, y = list(map(int, input().split()))\n    print(max(a*max(y, b-y-1), b*max(x, a-x-1)))\n", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=tf-8\n#\n\n\"\"\"\n\"\"\"\n\nfrom operator import itemgetter\nfrom collections import Counter\n\ndef solve(a, b, x, y):\n    area1 = x*b\n    area2 = (a-x-1)*b\n    area3 = a*y\n    area4 = a*(b-y-1)\n    print(max(area1,area2,area3,area4))\n\n\ndef main():\n    t= int(input())\n    for i in range(t):\n        a, b, x, y = map(int,input().split())\n        solve(a, b, x, y)\n\n\ndef __starting_point():\n    main()\n__starting_point()"]