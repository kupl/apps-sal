["#from itertools import combinations as c\r\nn=int(input());l=list(map(int,input().split()))\r\nl1=[]\r\nif(n<3):\r\n    print(\"NO\")\r\nelse:\r\n    l.sort()\r\n    for i in range(n-2):\r\n        if(l[i]+l[i+1]>l[i+2]):\r\n            l1.append([l[i+2],l[i+1],l[i]])\r\nif(len(l1)!=0):\r\n    print(\"YES\")\r\n    print(*max(l1))\r\nelse:\r\n    print(\"NO\")", "\r\nn = int(input())\r\narr = [int(i) for i in input().split()]\r\narr.sort()\r\nnew = []\r\ncheck = 0\r\nfor i in range(2,n):\r\n    if (arr[i-2] + arr[i-1]) > arr[i]:\r\n        new.append((arr[i-2],arr[i-1],arr[i]))\r\nif len(new) == 0:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n    ans = max(new)\r\n    print(\" \".join([str(i) for i in reversed(ans)]))\r\n", "def checkValidity(a, b, c):  \n      \n    # check condition  \n    if (a + b <= c) or (a + c <= b) or (b + c <= a) : \n        return False\n    else: \n        return True        \n        \nn = int(input())\nli = list(map(int, input().split()))\nli.sort(reverse=True)\ny = len(li)\nf = 0\nfor i in range(y-2):\n    for j in range(i+1,y-1):\n        a = li[i]\n        b = li[j]\n        c = li[j+1]\n        if checkValidity(a, b, c): \n            x = str(a)+\" \"+str(b)+\" \"+str(c)\n            print(\"YES\")\n            print(x)\n            f = 1\n            break\n    if f==1:\n        break\nif f==0:\n    print(\"NO\")\n", "# cook your dish here\nn = int(input())\nnums = list(map(int,input().strip().split(\" \")))\nif n < 3 :\n    print(\"NO\")\nelse:\n    nums.sort(reverse = True )\n    l=nums[0]\n    m=nums[1]\n    s=nums[2]\n    trig=1\n    for i in range(0, n - 2):  \n        s=nums[i+2]\n        if l<m+s:\n             trig=0\n             print(\"YES\")\n             print(l,m,s)\n             break\n        l=m\n        m=s\n    if trig:\n        print(\"NO\")\n", "def checkValidity(a, b, c):  \n      \n    # check condition  \n    if (a + b <= c) or (a + c <= b) or (b + c <= a) : \n        return False\n    else: \n        return True        \n        \nn = int(input())\nli = list(map(int, input().split()))\nli.sort(reverse=True)\ny = len(li)\nf = 0\nfor i in range(y-2):\n    for j in range(i+1,y-1):\n        a = li[i]\n        b = li[j]\n        c = li[j+1]\n        if checkValidity(a, b, c): \n            x = str(a)+\" \"+str(b)+\" \"+str(c)\n            print(\"YES\")\n            print(x)\n            f = 1\n            break\n    if f==1:\n        break\nif f==0:\n    print(\"NO\")\n", "def isPossibleTriangle (arr , N , tri , alltri):  \n\tarr.sort(reverse = True) \n\tflag = 0\n\tfor i in range(N - 2):  \n\t\tif arr[i] + arr[i + 1] > arr[i + 2] and arr[i] + arr[i + 2] > arr[i + 1] and arr[i + 1] + arr[i + 2] > arr[i]:\n\t\t\tflag = 1\n\t\t\ttri.append(arr[i])\n\t\t\ttri.append(arr[i + 1])\n\t\t\ttri.append(arr[i + 2])\n\t\t\talltri.append(tri)\n\t\t\tbreak\n\n\tif flag == 0:\n\t\treturn (\"NO\")\n\telse:\n\t\treturn (\"YES\")\n\nN = int(input())\narr = list(map(int , input().split()))\ntri = []\nalltri = []\nif isPossibleTriangle(arr , N , tri , alltri) == \"YES\":\n\talltri.sort()\n\tprint(\"YES\")\n\tprint(*alltri[0])\nelse:\n\tprint(\"NO\")", "# cook your dish here\ndef sticks(nums):\n    ans = []\n    it = 0\n    \n    while it < len(nums)-2:\n        \n        if nums[it] + nums[it+1] > nums[it+2]:\n            \n            ans = []\n            for p in range(2,-1,-1):\n                ans.append(nums[it+p])\n        \n        it += 1\n    \n    if not nums:\n        return False\n    \n    return ans\n        \n\nnum = int(input())\nnums = list(map(int,input().split()))\n\ntemp = sticks(sorted(nums))\n\nif temp:\n    print('YES')\n    print(' '.join(list(map(str,temp))))\nelse:\n    print('NO')\n    \n    \n    \n", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\r\nimport sys;input = sys.stdin.readline\r\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\r\n\r\nn = inp()\r\nx = ip()\r\nx.sort(reverse=True)\r\nflag = 1\r\nfor i in range(n-2):\r\n    if x[i] < x[i+1]+x[i+2]:\r\n        flag = 0\r\n        print(\"YES\")\r\n        print(x[i],x[i+1],x[i+2])\r\n        break\r\nif flag:\r\n    print(\"NO\")\r\n\r\n", "n = int(input())\r\na = list(map(int,input().split()))\r\na.sort()\r\ni=n-3\r\nans = []\r\ntmp=0\r\nwhile(i>=0):\r\n    if a[i]+a[i+1]>a[i+2]:\r\n        print(\"YES\")\r\n        print(a[i+2],a[i+1],a[i])\r\n        tmp=1\r\n        break\r\n    i-=1\r\nif tmp==0:\r\n    print(\"NO\")\r\n    \r\n", "try:\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    ans=[]\n    for i in range(n-2):\n        a=[]\n        if  l[i]+l[i+1]>l[i+2]:\n            a.append(l[i])\n            a.append(l[i+1])\n            a.append(l[i+2])\n            ans.append(a)\n    if len(ans)!=0:\n        s=[]\n        for j in ans:\n            s.append(sum(j))\n        m=s.index(max(s))\n        print(\"YES\")\n        for i in reversed(ans[m]):\n            print(i,end=' ')\n    else:\n        print(\"NO\")\nexcept:\n    pass", "def tri(arr, n):\r\n    li1=[]\r\n    \r\n    arr = sorted(arr)\r\n    z=0\r\n    for i in range(n-2):\r\n        li = []\r\n        if(arr[i]+arr[i+1]>arr[i+2]):\r\n            li.append(arr[i])\r\n            li.append(arr[i+1])\r\n            li.append(arr[i+2])\r\n            z=1\r\n        else:\r\n            pass\r\n        li1.append(li)  \r\n    if(z==0):\r\n        print('NO') \r\n    else:\r\n        print('YES')\r\n        m = sorted(max(li1), reverse=True)\r\n        print(*m, sep=' ')\r\n    \r\n\r\n\r\n\r\nn = int(input())\r\na = [int(x) for x in input().split()]\r\n#print('YES' if tri(a, n) else 'NO')\r\ntri(a, n)\r\n\r\n", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\narr.sort()\na,b,c=0,0,0\ntemp=1\nfor i in range(n-2):\n    if(arr[i]+arr[i+1]>arr[i+2]):\n        a=arr[i+2]\n        b=arr[i+1]\n        c=arr[i]\n        temp=0\nif(temp==1):\n    print('NO')\nelse:\n    print('YES')\n    print(a,b,c)\n\n", "# cook your dish here\nn=int(input())\na=list(map(int,input().split()))\na.sort()\na=a[::-1]\n#print(a)\ns=set()\nsignal=False\nfor x in range(n):\n       #print(\"x=\",a[x])\n       if not signal:\n         for y in range(x+1,n):\n              #print(\"y=\",a[y])\n              if not signal:\n                for z in range(y+1,n):\n                     #print(\"z=\",a[z])\n                     if (a[x]+a[y]>a[z] )and (a[x]+a[z]>a[y]) and(a[y]+a[z]>a[x]):\n                            l=[a[x],a[y],a[z]]\n                            #print(\"if\",)\n                            signal=True\n                            break\n                     \nif signal :\n       print(\"YES\")\n       print(l[0],l[1],l[2])\nelse :\n       print(\"NO\")\n", "n = int(input())\r\nj =\"\"\r\nans =\"NO\"\r\narr = list(map(int,input().split()))\r\narr.sort()\r\n\r\nfor i in range(n-2):\r\n    if arr[i] + arr[i+1] > arr[i+ 2]:\r\n        ans = \"YES\"\r\n        j = i\r\n        \r\nprint(ans)\r\nif ans == \"YES\":\r\n    print(arr[j+2], arr[j+1], arr[j])", "\nn=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=[]\nfor i in range(n-2):\n    a=[]\n    if  l[i]+l[i+1]>l[i+2]:\n        a.append(l[i])\n        a.append(l[i+1])\n        a.append(l[i+2])\n        ans.append(a)\nif len(ans)!=0:\n    s=[]\n    for j in ans:\n        s.append(sum(j))\n    m=s.index(max(s))\n    print(\"YES\")\n    for i in reversed(ans[m]):\n        print(i,end=' ')\nelse:\n    print(\"NO\")\n        \n    \n        \n\n", "N=int(input())\nA = list(map(int, input().split()))\nA.sort()\nmin=0\nfor i in range(1,N-2):\n    if (A[i+2]<A[i]+A[i+1]):\n        min=i\nif (min==0):\n    if (A[2]<A[0]+A[1]):\n        value=\"YES\"\n    else:\n        value=\"NO\"\nelse:\n    value=\"YES\"\nif(value==\"YES\"):\n    print(value)\n    print(str(A[min+2])+\" \"+str(A[min+1])+\" \"+str(A[min]))\nelse:\n    print(value)\n", "import sys\r\ntokenizedInput = sys.stdin.read().split()\r\n\r\ndef triplets(n, arr):\r\n    array = sorted(arr, reverse=False)\r\n    temp = []\r\n    result = []\r\n    i = 0\r\n    for i in range(len(array)):\r\n        if i < len(array)-2:\r\n            if array[i]+array[i+1] > array[i+2]:\r\n                temp.append(array[i])\r\n                temp.append(array[i+1])\r\n                temp.append(array[i+2])\r\n                i = 3\r\n                temp = sorted(temp, reverse=False)\r\n                for i, num in enumerate(temp):\r\n                    if temp[0]+temp[1] > temp[2]:\r\n                        result.append(sorted(temp, reverse=True))\r\n                temp = []\r\n            else:\r\n                i += 1\r\n    max = 0\r\n    i = 0\r\n    if result:\r\n        for count, eacharr in enumerate(result):\r\n            if eacharr[0] > max:\r\n                max = eacharr[0]\r\n                i = count\r\n        listToStr = ' '.join([str(elem) for elem in result[i]])\r\n        print('YES')\r\n        print(listToStr)\r\n    else:\r\n        print('NO')\r\n\r\ndef main():\r\n    lst = []\r\n    \r\n    n = list(map(int, tokenizedInput[:1]))\r\n    lst = list(map(int, tokenizedInput[1:]))\r\n    return triplets(n, lst)\r\n        \r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()", "from sys import stdin,stdout\r\nfor _ in range(1):#\r\n    n=int(stdin.readline())\r\n    a=sorted(map(int,stdin.readline().split()),reverse=True)\r\n    ans=[]\r\n    for x,y,z in zip(a,a[1:],a[2:]):\r\n        if (x+y>z and x+z>y and y+z>x):\r\n            ans=[x,y,z]\r\n            break\r\n    if not ans:print('NO')\r\n    else:\r\n        print('YES')\r\n        print(*ans)\r\n\r\n", "n = int(input())\r\nx =[]\r\nans =\"NO\"\r\narr = list(map(int,input().split()))\r\narr.sort()\r\n\r\nfor i in range(n-2):\r\n    if arr[i] + arr[i+1] > arr[i+ 2]:\r\n        ans = \"YES\"\r\n        x.append(i)\r\n        \r\nprint(ans)\r\nif ans == \"YES\":\r\n    print(arr[max(x)+2], arr[max(x)+1], arr[max(x)])", "N=int(input())\nA = list(map(int, input().split()))\nA.sort()\nmin=0\nfor i in range(1,N-2):\n    if (A[i+2]<A[i]+A[i+1]):\n        min=i\nif (min==0):\n    if (A[2]<A[0]+A[1]):\n        value=\"YES\"\n    else:\n        value=\"NO\"\nelse:\n    value=\"YES\"\nif(value==\"YES\"):\n    print(value)\n    print(str(A[min+2])+\" \"+str(A[min+1])+\" \"+str(A[min]))\nelse:\n    print(value)\n", "import sys\ntokenizedInput = sys.stdin.read().split()\n\ndef triplets(n, arr):\n    array = sorted(arr, reverse=False)\n    temp = []\n    result = []\n    i = 0\n    for i in range(len(array)):\n        if i < len(array)-2:\n            if array[i]+array[i+1] > array[i+2]:\n                temp.append(array[i])\n                temp.append(array[i+1])\n                temp.append(array[i+2])\n                i = 3\n                temp = sorted(temp, reverse=False)\n                for i, num in enumerate(temp):\n                    if temp[0]+temp[1] > temp[2]:\n                        result.append(sorted(temp, reverse=True))\n                temp = []\n            else:\n                i += 1\n    max = 0\n    i = 0\n    if result:\n        for count, eacharr in enumerate(result):\n            if eacharr[0] > max:\n                max = eacharr[0]\n                i = count\n        listToStr = ' '.join([str(elem) for elem in result[i]])\n        print('YES')\n        print(listToStr)\n    else:\n        print('NO')\n\ndef main():\n    lst = []\n    \n    n = list(map(int, tokenizedInput[:1]))\n    lst = list(map(int, tokenizedInput[1:]))\n    return triplets(n, lst)\n        \n\ndef __starting_point():\n    main()\n\n__starting_point()", "# cook your dish here\ntry:\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    x=[-1,-1,-1]\n    for i in range(n-2):\n        s = (a[i]+a[i+1]+a[i+2])/2\n        if s>a[i+2]:\n            x[0]=a[i]\n            x[1]=a[i+1]\n            x[2]=a[i+2]\n    if x[0] == x[1] == x[2] == -1:\n        print(\"NO\")\n    else:\n        x.sort()\n        print(\"YES\")\n        print(x[2], x[1], x[0])\n        \nexcept EOFError:pass\n    \n"]