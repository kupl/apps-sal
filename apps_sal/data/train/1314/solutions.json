["def left_span(arr,n):\n ans=[0]\n span=[0]\n for i in range(1,n):\n  \n  while span and arr[i]>arr[span[-1]]:\n   span.pop()\n  \n  if not span:\n   ans.append(0)\n   \n  else:\n   ans.append(span[-1]+1)\n  span.append(i)\n return ans\n\ndef right_span(arr,n):\n ans=[n+1]\n span=[n-1]\n for i in range(n-2,-1,-1):\n  \n  while span and arr[i]>=arr[span[-1]]:\n   span.pop()\n   \n  if not span:\n   ans.append(n+1)\n  else:\n   ans.append(span[-1]+1)\n  span.append(i)\n return ans[::-1]\nfrom collections import Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nn,q=list(map(int,input().split( )))\narr=list(map(int,input().split( )))\n\nleft=left_span(arr,n)\nright=right_span(arr,n)\nc=Counter()\nfor i in range(n):\n c[arr[i]]+=(right[i]-(i+1))*(i+1-left[i])\na=sorted(c)\nf=[]\nfor v in a:\n f.append(c[v])\nprefix_sum=[f[0]]\nn=len(f)\nfor i in range(1,n):\n prefix_sum.append(f[i]+prefix_sum[-1])\nr=[0]*q\nfor i in range(q):\n sign,k,player=list(map(str,input().split( )))\n k=int(k)\n if sign==\"=\":\n  if k in c:\n   res=c[k]\n  else:\n   res=0\n elif sign==\">\":\n  j=bisect_left(a,k)\n  if j==n:\n   res=0\n  elif a[j]==k:\n   res=prefix_sum[-1] - prefix_sum[j]\n  else:\n   if j>0:\n    res=prefix_sum[-1] - prefix_sum[j-1]\n   else:\n    res=prefix_sum[-1]\n else:\n  j=bisect_left(a,k)\n  if j==0:\n   res=0\n  else:\n   res=prefix_sum[j-1]\n \n if res%2==0:\n  if player==\"D\":\n   r[i]=\"C\"\n  else:\n   r[i]=\"D\"\n else:\n  r[i]=player\nprint(''.join(r))\n   \n  \n\n\n"]