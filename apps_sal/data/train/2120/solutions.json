["n = int(input())\na, b = [0] * (n + 2), [0] * (n + 2)\ns, l = 0, 1\np = [0] * n\nfor i in range(n):\n    t = list(map(int, input().split()))\n    if t[0] == 1:\n        b[t[1] - 1] += t[2]\n        s += t[1] * t[2]\n    elif t[0] == 2:\n        a[l] = t[1]\n        l += 1\n        s += t[1]\n    else:\n        l -= 1\n        s -= a[l] + b[l]\n        b[l - 1] += b[l]\n        b[l] = 0\n    p[i] = str(s / l)\nprint('\\n'.join(p))", "n = int(input())\na, b = [0] * (n + 2), [0] * (n + 2)\ns, l = 0, 1\np = [0] * n\nfor i in range(n):\n    t = list(map(int, input().split()))\n    if t[0] == 1:\n        b[t[1] - 1] += t[2]\n        s += t[1] * t[2]\n    elif t[0] == 2:\n        a[l] = t[1]\n        l += 1\n        s += t[1]\n    else:\n        l -= 1\n        s -= a[l] + b[l]\n        b[l - 1] += b[l]\n        b[l] = 0\n    p[i] = str(s / l)\nprint('\\n'.join(p))", "from sys import stdin\ninput = stdin.readline\nn = int(input())\nval = [0] * (n + 1)\nadd = [0] * (n + 1)\nptr = 1\nsum = 0\nres = [0] * n\nfor i in range(n):\n\tl = [int(x) for x in input().split()]\n\tif l[0] == 1:\n\t\ta, x = l[1:]\n\t\tadd[a - 1] += x\n\t\tsum += a * x\n\telif l[0] == 2:\n\t\tk = l[1]\n\t\tval[ptr] = k\n\t\tsum += k\n\t\tptr += 1\n\telse:\n\t\tptr -= 1\n\t\tsum -= val[ptr]\n\t\tsum -= add[ptr]\n\t\tadd[ptr - 1] += add[ptr]\n\t\tadd[ptr] = 0\n\tres[i] = sum / ptr\nprint('\\n'.join(str(x) for x in res))\n", "def main():\n    l, base, res, le, tot = [0] * 200001, [0] * 200001, [], 1, 0\n    for _ in range(int(input())):\n        s = input()\n        c = s[0]\n        if c == '1':\n            a, x = list(map(int, s[2:].split()))\n            base[a] += x\n            tot += a * x\n        elif c == '2':\n            l[le] = x = int(s[2:])\n            tot += x\n            le += 1\n        else:\n            x = base[le]\n            base[le] = 0\n            tot -= x\n            le -= 1\n            base[le] += x\n            tot -= l[le]\n        res.append(tot / le)\n    print('\\n'.join(map(str, res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    l, base, res, le, tot = [0] * 200001, [0] * 200001, [], 1, 0\n    for _ in range(int(input())):\n        s = input()\n        c = s[0]\n        if c == '1':\n            a, x = list(map(int, s[2:].split()))\n            base[a] += x\n            tot += a * x\n        elif c == '2':\n            l[le] = x = int(s[2:])\n            tot += x\n            le += 1\n        else:\n            x = base[le]\n            if x:\n                base[le] = 0\n                tot -= x\n                le -= 1\n                base[le] += x\n            else:\n                le -= 1\n            tot -= l[le]\n\n        res.append(tot / le)\n    print('\\n'.join(map(str, res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, res, le, tot = int(input()), [], 1, 0\n    l, base = [0] * (n + 2), [0] * (n + 2)\n    for _ in range(n):\n        s = input()\n        c = s[0]\n        if c == '1':\n            a, x = list(map(int, s[2:].split()))\n            base[a] += x\n            tot += a * x\n        elif c == '2':\n            l[le] = x = int(s[2:])\n            tot += x\n            le += 1\n        else:\n            x = base[le]\n            if x:\n                base[le] = 0\n                tot -= x\n                le -= 1\n                base[le] += x\n            else:\n                le -= 1\n            tot -= l[le]\n\n        res.append(tot / le)\n    print('\\n'.join(map(str, res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na, b = [0] * (n + 2), [0] * (n + 2)\ns, l = 0, 1\np = [0] * n\nfor i in range(n):\n    t = list(map(int, input().split()))\n    if t[0] == 1:\n        b[t[1] - 1] += t[2]\n        s += t[1] * t[2]\n    elif t[0] == 2:\n        a[l] = t[1]\n        l += 1\n        s += t[1]\n    else:\n        l -= 1\n        s -= a[l] + b[l]\n        b[l - 1] += b[l]\n        b[l] = 0\n    p[i] = str(s / l)\nprint('\\n'.join(p))", "import math\nn = int(input())\nd = [0]*200200\na = [0]\ns = 0\n\nans = []\nfor i in range(n):\n    x = tuple(map(int, input().split()))\n    if x[0] == 1:\n        d[x[1]] += x[2]\n        s += x[1] * x[2]\n    elif x[0] == 2:\n        a.append(x[1])\n        s += x[1]\n    else:\n        cc = len(a)\n        s -= d[cc] + a.pop()\n        d[cc-1] += d[cc]\n        d[cc] = 0\n    ans.append(str(s / len(a)))\n\nprint('\\n'.join(ans))", "n = int(input())\n\na, b = [0] * (n + 2), [0] * (n + 2)\n\ns, l = 0, 1\n\np = [0] * n\n\nfor i in range(n):\n\n    t = list(map(int, input().split()))\n\n    if t[0] == 1:\n\n        b[t[1] - 1] += t[2]\n\n        s += t[1] * t[2]\n\n    elif t[0] == 2:\n\n        a[l] = t[1]\n\n        l += 1\n\n        s += t[1]\n\n    else:\n\n        l -= 1\n\n        s -= a[l] + b[l]\n\n        b[l - 1] += b[l]\n\n        b[l] = 0\n\n    p[i] = str(s / l)\n\nprint('\\n'.join(p))", "s = 0\nele =  1\nn = int(input())\nl =[0] *(n+2)\na =[0] *(n+2)\nans =[0]* n;\nfor x in range(n):\n    inp = list(map(int,input().strip().split()))\n    if inp[0] == 1:\n        s += inp[1] * inp[2];\n        a[inp[1] - 1] += inp[2]\n    elif inp[0] == 2:\n        s += inp[1]\n        l[ele] = inp[1]\n        ele += 1;\n    else:\n        ele -= 1\n        s -= l[ele] + a[ele]\n        a[ele -1 ] += a[ele]\n        a[ele] = 0\n    ans[x] =str( s / ele)\nprint(\"\\n\".join(ans))\n", "'''input\n5\n2 1\n3\n2 3\n2 1\n3\n'''\n\nfrom sys import stdin, setrecursionlimit\n\nsetrecursionlimit(15000)\n\n\n# main starts\nn = int(stdin.readline().strip())\narr = [0]\ncur_sum = 0\naux = [0]\nfor _ in range(n):\n\top = list(map(int, stdin.readline().split()))\n\t\n\t# processing operations\n\tif op[0] == 1:\n\t\taux[op[1] - 1] += op[2]\n\t\tcur_sum += op[1] * op[2]\n\n\telif op[0] == 2:\n\t\taux.append(0)\n\t\tarr.append(op[1])\n\t\tcur_sum += op[1]\t\t\n\telse:\n\t\tcur_sum -= (arr[-1] + aux[-1])\n\t\taux[-2] += aux[-1]\n\t\taux.pop()\n\t\tarr.pop()\n\tprint(cur_sum / len(arr))", "import sys\n\n\nd, ans = [0], []\ns = 0\n\nfor _ in range(int(next(sys.stdin))):\n    cmd = tuple(map(int, next(sys.stdin).split()))\n    if cmd[0] == 1:\n        s += cmd[1] * cmd[2]\n        if cmd[1] == len(d):\n            d[-1] += cmd[2]\n        else:\n            d[cmd[1] - 1] -= cmd[2]\n    elif cmd[0] == 2:\n        s += cmd[1]\n        d.append(cmd[1])\n        d[-2] = d[-1] - d[-2]\n    else:\n        s -= d[-1]\n        d[-2] = d[-1] - d[-2]\n        d.pop()\n\n    # print(cmd, len(d), '-->', d)\n    ans.append(str(s / len(d)))\n\nprint('\\n'.join(ans))\n", "# Target - Expert on CF\n# Be Humblefool\n\nimport sys\n\ninf = float(\"inf\")\n# sys.setrecursionlimit(1000000)\n\n# abc='abcdefghijklmnopqrstuvwxyz'\n# abd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod, MOD = 1000000007, 998244353\n# words = {1:'one',2:'two',3:'three',4:'four',5:'five',6:'six',7:'seven',8:'eight',9:'nine',10:'ten',11:'eleven',12:'twelve',13:'thirteen',14:'fourteen',15:'quarter',16:'sixteen',17:'seventeen',18:'eighteen',19:'nineteen',20:'twenty',21:'twenty one',22:'twenty two',23:'twenty three',24:'twenty four',25:'twenty five',26:'twenty six',27:'twenty seven',28:'twenty eight',29:'twenty nine',30:'half'}\n# vow=['a','e','i','o','u']\n# dx,dy=[0,1,0,-1],[1,0,-1,0]\n\n# import random\n# from collections import deque, Counter, OrderedDict,defaultdict\n# from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n# from math import ceil,floor,log,sqrt,factorial,pi,gcd\n# from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef input(): return sys.stdin.readline().strip()\n\nArr = [0]\ndp = [0]\nprev_sum = 0\nprev_length = 1\nn = int(input())\nwhile n:\n    arr = get_array()\n    if len(arr)==2:\n        number = arr[1]\n        Arr.append(number)\n        dp.append(0)\n        ans = (prev_sum+number)/(prev_length+1)\n        print(ans)\n        prev_length+=1\n        prev_sum+=number\n    elif len(arr)==3:\n        a,x = arr[1],arr[2]\n        dp[a-1]+=x\n        ans = (prev_sum + a*x)/(prev_length)\n        print(ans)\n        prev_sum+=a*x\n    else:\n        ans = (prev_sum - (Arr[-1]+dp[-1]))/(prev_length - 1)\n        print(ans)\n        prev_sum-=(Arr[-1]+dp[-1])\n        prev_length-=1\n        dp[-2]+=dp[-1]\n        Arr.pop()\n        dp.pop()\n    n-=1", "from sys import stdin\ninput = stdin.readline\nn = int(input())\narr, cnt, curr_len, curr_sum = [0] * (n+1), [0] * (n+1), 1, 0\nfor _ in range(n):\n    s = input()\n    if s[0] == '1':\n        _, x, y = list(map(int, s.split()))\n        curr_sum += x*y\n        cnt[x-1] += y\n    elif s[0] == '2':\n        _, x = list(map(int, s.split()))\n        curr_sum += x\n        arr[curr_len] = x\n        curr_len += 1\n    else:\n        curr_len -= 1\n        curr_sum -= arr[curr_len] + cnt[curr_len]\n        cnt[curr_len-1] += cnt[curr_len]\n        cnt[curr_len] = 0\n    print('%.9f' % (curr_sum / curr_len))\n", "from sys import stdin\ninput = stdin.readline\nn = int(input())\narr, cnt, curr_len, curr_sum = [0] * (n+1), [0] * (n+1), 1, 0\nfor _ in range(n):\n    s = input()\n    if s[0] == '1':\n        _, x, y = list(map(int, s.split()))\n        curr_sum += x*y\n        cnt[x-1] += y\n    elif s[0] == '2':\n        _, x = list(map(int, s.split()))\n        curr_sum += x\n        arr[curr_len] = x\n        curr_len += 1\n    else:\n        curr_len -= 1\n        curr_sum -= arr[curr_len] + cnt[curr_len]\n        cnt[curr_len-1] += cnt[curr_len]\n        cnt[curr_len] = 0\n    print('%.9f' % (curr_sum / curr_len))\n", "import sys\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\nn=int(input())\nl=[0]\ndp=[0]\ns=0\nc=1\nwhile n:\n    #print(l)\n    t=get_array()\n    if t[0]==2:\n        l.append(t[1])\n        dp.append(0)\n        s+=t[1]\n        c+=1\n        print(s/c)\n    elif t[0]==3:\n        s-=(l[-1]+dp[-1])\n        dp[-2]+=dp[-1]\n        l.pop()\n        dp.pop()\n        c-=1\n        print(s/c)\n    else:\n        dp[t[1]-1]+=t[2]\n        s+=t[1]*t[2]\n        print(s/c)\n    n-=1\n    #r=s/c\n    #r=\"{0:.6f}\".format(r)\n    #print(r)\n", "import sys\nfrom math import log2,floor,ceil,sqrt,gcd\nimport bisect\n# from collections import deque\n# sys.setrecursionlimit(10**5)\n\nRi = lambda : [int(x) for x in sys.stdin.readline().split()]\nri = lambda : sys.stdin.readline().strip()\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD =  1000000007\n\nn = int(ri())\nsta  = [0]\nextra = [0]*(n+1)\navg = 0\nfor i in range(n):\n    temp = Ri()\n    if temp[0] == 1:\n        # print(avg)\n        temp[1] = min(temp[1],len(sta))\n        extra[temp[1]-1] += temp[2]\n        # print(temp[1]*temp[2])\n        avg = (avg*len(sta) + temp[1]*temp[2])/len(sta)\n        # print(avg)\n    elif temp[0] == 2:\n        sta.append(temp[1])\n        avg= (avg*(len(sta)-1) + temp[1])/len(sta)\n        # print(avg)\n    else:\n        # print(len(sta),sta,extra)\n        extra[len(sta)-2]+=extra[len(sta)-1]\n        avg = (avg*len(sta) - (sta[-1]+extra[len(sta)-1]))/(len(sta)-1)\n        extra[len(sta)-1] = 0\n        sta.pop()\n    print(avg)", "n=int(input())\ns=0\nc=1\nl=[0]\nd=[0]\nans=[0]*n\nfor i in range(n):\n    x=list(map(int,input().split()))\n    if x[0]==1:\n        d[x[1]-1]+=x[2]\n        s=s+x[1]*x[2]\n    elif x[0]==2:\n        l.append(x[1])\n        d.append(0)\n        s=s+x[1]\n        c=c+1\n    else:\n        t=d[-1]\n        s=s-l[-1]-t \n        c=c-1\n        l.pop()\n        d.pop()\n        d[-1]+=t\n    ans[i]=str(s/c)\nprint('\\n'.join(ans))", "n = int(input())\nt=1\na=[0]\np=[0]*(n+2)\ns=0\n\nans=[0]*n\nfor i in range(n):\n    \n    m=list(map(int,input().split()))\n    if len(m)==1:\n        \n        s-=(p[t-1]+a[-1])\n        t-=1\n        p[t-1]+=p[t]\n        p[t]=0\n        \n        a.pop(-1)\n    elif len(m)==2:\n        a.append(m[1])\n        s+=m[1]\n        t+=1\n        \n    else:\n        s+=m[1]*m[2]\n        p[m[1]-1]+=m[2]\n    ans[i]=str(s/t)\n    #print(p[:n+4],a,k,t)\nprint(\"\\n\".join(ans))\n", "#besme taala\n#ya_hossein\nfrom sys import stdin\ninput = stdin.readline\nn, sum, point = int(input()), 0, 1\nnum = (n+1)*[0]\nf = (n+1)*[0]\nfor i in range(n):\n    k = list(map(int, input().split()))\n    if k[0] == 1:\n        f[k[1] - 1] += k[2]\n        sum += k[2]*k[1]\n    elif k[0] == 2:\n        num[point] = k[1]\n        sum += k[1]\n        point += 1\n    elif k[0] == 3:\n        point -= 1\n        sum -= num[point] + f[point]\n        f[point - 1] += f[point]\n        f[point] = 0\n    print('%.6f' % (sum / point))"]