["# cook your dish here\n# cook your dish here\nfrom itertools import combinations\nn = int(input())\nt = list(combinations(list(map(int, input().split())), 2))\nar = 0\nfor i in t:\n    ar += abs(i[0] - i[1])\nprint(ar)", "# cook your dish here\nn=int(input())\nstrength=list(map(int,input().split()))\nrevenue=0\nfor i in range(0,n-1):\n    for j in range(i+1,n):\n        x=abs(strength[i]-strength[j])\n        revenue+=x\nprint(revenue)", "t=input()\narr=input().split()\narr=[int(i) for i in arr]\nc=0\nif len(arr)==t:\n for i in range(0,t):\n\t for j in range(i,t):\n\t\t c+=abs(arr[i]-arr[j])\n print(c)", "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(0,n):\n    for j in range(0,i):\n        a=abs(l[i]-l[j])\n        c+=a\nprint(c)", "n=int(input())\r\na=list(map(int,input().strip().split()))\r\na.sort()\r\ns=0\r\nfor i in range(len(a)):\r\n    s+=a[i]*(i-(len(a)-1-i))\r\n    \r\nprint(s)", "n=int(input())\r\na=list(map(int,input().strip().split()))\r\ns=0\r\nfor i in range(len(a)):\r\n    for j in range(i+1,len(a)):\r\n        s+=abs(a[j]-a[i])\r\nprint(s)", "n=int(input())\r\nz=[]\r\ns=list(map(int,input().split()))[:n]\r\n\r\nfor i in range(0,n):\r\n    for j in range(i+1,n):\r\n        p=abs(s[i]-s[j])\r\n        z.append(p)\r\nprint(sum(z))", "def abs(x): \n    if x < 0:\n        return -x\n    else: \n        return x\n\n# cook your dish here\nprecalculated = {}\nN = int(input())\ntmp = input() \nwhile(tmp[-1] == \" \"): \n    tmp = tmp[:-1]\nvalues = list(map(int, tmp.split(\" \")))\ntotal = 0\nsaved_sum = sum(values) \nsaved_length = len(values) - 1\nfor val in values:\n    if val in precalculated:\n         precalculated[val][1] += 1\n    else: \n        precalculated[val] = [0, 1]\nfor pre in precalculated:\n    for pre1 in precalculated: \n        precalculated[pre][0] += precalculated[pre1][1] * abs(pre1 - pre)\nfor pre in precalculated: \n    total += precalculated[pre][0] * precalculated[pre][1]\n\nprint(total // 2)", "def abs(x): \n    if x < 0:\n        return -x\n    else: \n        return x\n\n# cook your dish here\nprecalculated = {}\nN = int(input())\ntmp = input() \nwhile(tmp[-1] == \" \"): \n    tmp = tmp[:-1]\nvalues = list(map(int, tmp.split(\" \")))\ntotal = 0\nsaved_sum = sum(values) \nsaved_length = len(values) - 1\nfor val in values:\n    if val in precalculated:\n         precalculated[val][1] += 1\n    else: \n        precalculated[val] = [0, 1]\n        for val1 in values: \n            precalculated[val][0] += abs(val - val1)\nfor pre in precalculated: \n    total += precalculated[pre][0] * precalculated[pre][1]\nprint(total // 2)", "teams=int(input())\nstrength=list(map(int, input().split()))\nstrength.sort()\nrev=0\nfor i in range(0,teams):\n    rev+=strength[i]*(i-(teams-1-i))\n\nprint(rev)", "teams=int(input())\nstrength=list(map(int, input().split()))\nstrength.sort()\nrev=0\nfor i in range(0,teams):\n    for j in range(i+1,teams):\n            rev+=strength[j]-strength[i]\n            \nprint(rev)", "n=int(input())\nstrength=list(map(int,input().split()))\nres=0\nstrength.sort()\nfor i in range(n):\n    res=res+(strength[i]*(i-((n-1)-i)))\nprint(res)\n", "n=int(input())\nstrength=list(map(int,input().split()))\nsum=0\ni=0\nwhile(i<n-1):\n    j=i+1\n    while(j<n):\n        sum=sum+abs(strength[i]-strength[j])\n        j+=1\n    i+=1\nprint(sum)\n", "# cook your dish here\nn=int(input())\nstrength=list(map(int,input().split()))\nrevenue=0\nfor i in range(0,n-1):\n    for j in range(i+1,n):\n        x=strength[i]-strength[j]\n        if x<0:\n            x=0-x\n        revenue+=x\nprint(revenue)", "t = int(input())\ns = list(map(int, input().split()))\nrevenue = 0\ns.sort()\ns.reverse()\n\nfor i in range(t) :\n    revenue -= i * s[i]\n    revenue += (t - i - 1) * s[i]\n    \nprint(revenue)", "t = int(input())\ns = list(map(int, input().split()))\nrevenue = 0\n\nfor i in range(t-1) : \n    for j in range(i+1, t) :\n        add = s[i] - s[j]\n        if add > 0 :\n            revenue += add\n        else :\n            revenue -= add\n\nprint(revenue)", "t = int(input())\ns = list(map(int, input().split()))\ni = 0\nj = t\nrevenue = 0\n\nfor i in range(t-1) : \n    for j in range(i+1, t) :\n        revenue += ((s[i]>s[j])*((2*s[i])-(2*s[j])) + s[j]-s[i])\n\nprint(revenue)", "teams=int(input())\nstrength=list(map(int, input().split()))\nrev=0\nfor i in range(0,teams):\n    for j in range(i+1,teams):\n        if(strength[i]>strength[j]):\n            rev+=strength[i]-strength[j]\n            \n        else:\n            rev+=strength[j]-strength[i]\n            \nprint(rev)\n", "teams=int(input())\nstrength=list(map(int, input().split()))\nrev=0\nfor i in range(0,teams):\n    for j in range(i,teams):\n        if(i==j):\n            continue\n        elif(strength[i]>strength[j]):\n            rev+=strength[i]-strength[j]\n            \n        else:\n            rev+=strength[j]-strength[i]\n            \nprint(rev)\n", "# cook your dish here\nN = int(input())\nl = list(map(int, input().strip().split(\" \")))\ns=0\nfor i in range(N):\n    for j in range(i+1, N):\n        s+= abs(l[j]-l[i])\nprint(s)\n\n\n\"\"\"\nl.sort()\n\ns = 0\nfor i in range(len(l)):\n    s -= (len(l) - i - 1) * l[i]\n    s += i * l[i]\nprint(s)\n\"\"\"", "# cook your dish here\nN = int(input())\nl = list(map(int, input().strip().split(\" \")))\n\nl.sort()\n\ns = 0\nfor i in range(len(l)):\n    s -= (len(l) - i - 1) * l[i]\n    s += i * l[i]\nprint(s)", "# cook your dish here\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\ndef lcm(x, y):\n    return (x*y)//(gcd(x,y))\n\n\nabc=\"abcdefghijklmnopqrstuvwxyz\"\n\npi=3.141592653589793238\n\nn = int(input())\narr = list(map(int,input().split()))\nrevenue = 0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        cur = abs(arr[i] - arr[j])\n        revenue += cur\nprint(revenue)", "n = int(input())\r\nstrengths = list(map(int, input().split()))\r\nstrengths.sort(reverse = True)\r\nsumm = 0\r\nfor i in range(0, len(strengths)):\r\n    summ += strengths[i]*(len(strengths)-2*(i+1)+1)\r\nprint(summ)", "n = int(input())\r\nl = list(map(int,input().split()))\r\nl.sort()\r\nc,sum = 0,0\r\nfor i in l:\r\n    if c < len(l):\r\n        c+=1 \r\n        for x in l[c:]:\r\n            sum = sum + abs(i-x)\r\n\r\nprint(sum)\r\n"]