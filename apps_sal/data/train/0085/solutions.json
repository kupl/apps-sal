["import sys\n\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    s=input().rstrip()\n    x=int(input())\n    n=len(s)\n    ans=[\"1\" for i in range(n)]\n    for i in range(n):\n        if s[i]==\"0\":\n            if i-x>=0:\n                ans[i-x]=\"0\"\n            if i+x<n:\n                ans[i+x]=\"0\"\n    for i in range(n):\n        if s[i]==\"1\":\n            check=False\n            if i-x>=0:\n                check|=(ans[i-x]==\"1\")\n            if i+x<n:\n                check|=(ans[i+x]==\"1\")\n            if not check:\n                print(-1)\n                break\n    else:\n        print(\"\".join(ans))\n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    s = input().strip()\n    n = len(s)\n    x = int(input())\n    outl = ['1'] * n\n    for i in range(n):\n        if s[i] == '0':\n            if i >= x:\n                outl[i-x] = '0'\n            if i + x < n:\n                outl[i+x] = '0'\n    out = ''.join(outl)\n    works = True\n    for i in range(n):\n        if s[i] == '1':\n            if (i < x or out[i - x] == '0') and (i + x >= n or out[i + x] == '0'):\n                works = False\n                break\n\n    if works:\n        print(out)\n    else:\n        print(-1)\n", "t = int(input())\nfor _ in range(t):\n    s = input()\n    n = len(s)\n    x = int(input())\n    w = [0]*n\n    for i in range(n):\n        if 0 <= i + x < n and 0 <= i - x < n:\n            if s[i+x] == \"1\" and s[i-x] == \"1\":\n                w[i] = 1\n        elif 0 <= i + x < n:\n            if s[i+x] == \"1\":\n                w[i] = 1\n        elif 0 <= i - x < n:\n            if s[i-x] == \"1\":\n                w[i] = 1\n\n    for i in range(n):\n        if 0 <= i-x < n and w[i-x] == 1:\n            if s[i] == \"1\":\n                continue\n            else:\n                print(-1)\n                break\n        if 0 <= i + x < n and w[i+x] == 1:\n            if s[i] == \"1\":\n                continue\n            else:\n                print(-1)\n                break\n        if s[i] == \"1\":\n            print(-1)\n            break\n    else:\n        print(*w, sep=\"\")\n", "\n\ndef process():\n    li=list(input())\n    x=int(input())\n    n=len(li)\n    ans=['1' for i in range(n)]\n\n    for i in range(0,n):\n        if(li[i]=='0'):\n            if(i-x>=0):\n                ans[i-x]='0'\n            if(i+x<n):\n                ans[i+x]='0'\n\n    for i in range(0,n):\n        chr='0'\n        if(i-x>=0 and ans[i-x]=='1'):\n            chr='1'\n        if(i+x<n and ans[i+x]=='1'):\n            chr='1'\n        if(li[i]==chr):\n            pass\n        else:\n            print(-1)\n            return\n    print(\"\".join(ans))\n\n\n\ntests=int(input())\nfor i in range(tests):\n    process()", "import sys\n# sys.stdin = open('input.txt', 'r') \n# sys.stdout = open('output.txt', 'w')\n \nimport math\nimport collections\nfrom sys import stdin,stdout,setrecursionlimit\nimport bisect as bs\nsetrecursionlimit(2**20)\nM = 10**9+7\n    \nT = int(stdin.readline())\n# T = 1\n\nfor _ in range(T):\n    # n = int(stdin.readline())\n    # n,d,m = list(map(int,stdin.readline().split()))\n    # a = list(map(int,stdin.readline().split()))\n    # q = int(stdin.readline())\n    # a = list(map(int,stdin.readline().split()))\n    # b = list(map(int,stdin.readline().split()))\n    s = stdin.readline().strip('\\n')\n    x = int(stdin.readline())\n    n = len(s)\n    a = [-1]*n\n    res = True\n    for i in range(n):\n        if(s[i] == '1'):\n            if((i-x) >= 0 and a[i-x] != 0):\n                a[i-x] = 1\n                continue\n            if((i+x) < n):\n                if(a[i+x] == 0):\n                    res = False\n                    break\n                else:\n                    a[i+x] = 1\n                    continue\n            res = False\n            break\n        else:\n            if((i-x) >= 0):\n                if(a[i-x] == 1):\n                    res = False\n                    break\n                else:\n                    a[i-x] = 0\n            if((i+x) < n):\n                if(a[i+x] == 1):\n                    res = False\n                    break\n                else:\n                    a[i+x] = 0\n    ans = ''\n    for i in range(n):\n        if(a[i] != -1):\n            ans = ans + str(a[i])\n        else:\n            ans = ans + '1'\n    if(res): print(ans)\n    else: print(-1)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\n\nfor _ in range(val()):\n    l = [0] + li3()\n    x = val()\n    n = len(l) - 1\n    ans = [None] * (n + 1)\n    flag = 0\n\n    # print(l, n, x)\n    for i in range(1, n + 1):\n        # print(ans, i)\n        if l[i] == 1:\n            if i > x and (ans[i - x] == 1 or ans[i - x] == None):\n                ans[i - x] = 1\n            elif i + x <= n:\n                ans[i + x] = 1\n            else:\n                flag = 1\n                break\n        else:\n            if (i <= x or (ans[i - x] == None or ans[i - x ] == 0)) and (i + x > n or (ans[i + x] == None)):\n                if i > x:ans[i - x] = 0\n                if i + x <= n:ans[i + x] = 0\n            else:\n                flag = 1\n                break\n    for i in range(1, n + 1):\n        if ans[i] == None:ans[i] = 1  \n    if flag:\n        print(-1)\n    else:\n        print(*ans[1:n + 1], sep = '')", "for t in range(int(input())):\n    s = [int(c == \"1\") for c in input()]\n    x = int(input())\n    n = len(s)\n\n    sat = lambda i: (s[i] if i in range(n) else 1)\n\n    w = [(sat(i - x) & sat(i + x)) for i in range(n)]\n\n    wat = lambda i: (w[i] if i in range(n) else 0)\n\n    s_ref = [(wat(i - x) | wat(i + x)) for i in range(n)]\n    \n    if s != s_ref:\n        print(-1)\n    else:\n        print(\"\".join(map(str, w)))\n", "def solve():\n    s = list(map(int, input()))\n    n = len(s)\n    x = int(input())\n    w = [0] * n\n    d = [False] * n\n    for i in range(n):\n        if s[i] == 0:\n            if i - x >= 0:\n                w[i - x] = 0\n                d[i - x] = True\n            if i + x < n:\n                w[i + x] = 0\n                d[i + x] = True\n    for i in range(n):\n        if not d[i]:\n            w[i] = 1\n            d[i] = True\n    t = [0] * n\n    for i in range(n):\n        if i - x >= 0 and w[i - x] == 1:\n            t[i] = 1\n        if i + x < n and w[i + x] == 1:\n            t[i] = 1\n    if s != t:\n        print('-1')\n        return\n    print(''.join(map(str, w)))\nt = int(input())\nfor _ in range(t):\n    solve()", "t = int(input())\nfor i in range(t):\n    s = input()\n    m = len(s)\n    x = int(input())\n    ANS = [1] * m\n    for i in range(m):\n        if s[i] == \"0\":\n            if i-x >= 0:\n                ANS[i-x] = 0\n            if i+x < m:\n                ANS[i+x] = 0\n    \n    ng = 0\n    for i in range(m):\n        one = 0\n        if (i-x >= 0 and ANS[i-x] == 1) or (i+x < m and ANS[i+x] == 1):\n            one = 1\n        if (one == 1 and s[i] == \"0\") or (one == 0 and s[i] == \"1\"):\n            ng = 1\n            break\n    \n    if ng == 1:\n        print(-1)\n    else:\n        print(\"\".join([str(i) for i in ANS]))\n", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    x = int(input())\n    \n    w = ['1'] * len(s)\n    \n    for i in range(n):\n        if s[i] == '0':\n            if i + x < n:\n                w[i + x] = '0'\n            if i - x >= 0:\n                w[i - x] = '0'\n    \n    temp = ['0'] * len(s)\n    for i in range(n):\n        if i + x < n:\n            if w[i + x] == '1':\n                temp[i] = '1'\n        if i - x >= 0:\n            if w[i - x] == '1':\n                temp[i] = '1'\n    if ''.join(temp) == s:\n        print(''.join(w))\n    else:\n        print(-1)", "t=int(input())\nfor you in range(t):\n    s=input()\n    n=len(s)\n    x=int(input())\n    arr=[1 for i in range(n)]\n    poss=1\n    for i in range(n):\n        if(s[i]=='1'):\n            if(i-x>=0 and arr[i-x]==0 and i+x<n and arr[i+x]==0):\n                poss=0\n                break\n        else:\n            if(i-x>=0):\n                arr[i-x]=0\n            if(i+x<n):\n                arr[i+x]=0\n    if(poss==0):\n        print(-1)\n        continue\n    isposs=\"\"\n    for i in range(n):\n        if(i-x>=0 and arr[i-x]):\n            isposs=isposs+'1'\n        elif(i+x<n and arr[i+x]):\n            isposs=isposs+'1'\n        else:\n            isposs=isposs+'0'\n    if(isposs==s):\n        for i in arr:\n            print(i,end=\"\")\n        print()\n    else:\n        print(-1)\n", "import sys\n\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nfor _ in range(II()):\n    s=SI()\n    x=II()\n    n=len(s)\n    ans=[1]*n\n    for i,c in enumerate(s):\n        if c==\"0\":\n            if i-x>=0:ans[i-x]=0\n            if i+x<n:ans[i+x]=0\n\n    def ok():\n        for i in range(n):\n            if s[i]==\"1\":\n                flag=0\n                if i-x>=0:flag|=ans[i-x]\n                if i+x<n:flag|=ans[i+x]\n                if flag==0:return False\n        return True\n\n    if ok():print(*ans,sep=\"\")\n    else:print(-1)\n"]