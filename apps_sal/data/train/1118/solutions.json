["'''\nName : Jaymeet Mehta\ncodechef id :mj_13\nProblem : Avenir Strings\n'''\nfrom sys import stdin,stdout\ntest=int(stdin.readline())\nfor _ in range(test):\n N=int(stdin.readline())\n seq=list(input())\n fp,fp1,fl,fl1=0,0,0,1\n for i in range(N):\n  if fl!=int(seq[i])-0:\n   fp+=1\n  fl=1-fl\n for i in range(N):\n  if fl1!=int(seq[i])-0:\n   fp1+=1\n  fl1=1-fl1\n print(fp) if fp<fp1 else print(fp1)", "def a(s, length):  \n \n ans = 0\n for i in range(0, length):  \n \n  # If there is 1 at even index positions  \n  if i % 2 == 0 and s[i] == '1':  \n   ans += 1\n \n  # If there is 0 at odd index positions  \n  if i % 2 == 1 and s[i] == '0':  \n   ans += 1\n  \n return min(ans, length - ans)\ndef b(s, length):  \n \n ans = 0\n for i in range(0, length):  \n \n  # If there is 1 at even index positions  \n  if i % 2 == 0 and s[i] == '0':  \n   ans += 1\n \n  # If there is 0 at odd index positions  \n  if i % 2 == 1 and s[i] == '1':  \n   ans += 1\n  \n return min(ans, length - ans)\nfor i in range(0,int(input())):\n n=int(input())\n s=input()\n print(min(a(s,n),b(s,n)))", "# cook your dish here\nn=int(input())\nl2=['0','1']\nfor i in range(n):\n s=int(input())\n w=input()\n l1=[]\n count=0\n count1=0\n for i in w:\n  l1.append(i)\n l2=[]\n l3=[]\n i=1\n l2.append('1')\n l3.append('0')\n while(i<s):\n  l2.append('0')\n  l2.append('1')\n  l3.append('1')\n  l3.append('0')\n  i+=1\n for i in range(s):\n  if l1[i]!=l2[i]:\n   count+=1\n for i in range(s):\n  if l1[i]!=l3[i]:\n   count1+=1\n if count>count1:\n  print(count1)\n else:\n  print(count)\n", "intinp = lambda : int(input()) \ndef listinp(func= int): return list(map(func,input().split())) \ndef nsepline(n,func=str): return [func(input()) for _ in range(n)]\ndef printlist(li,glue=' '): return glue.join(list(map(str,li)))\n#-------------------code------------------------\n\nfor _ in range(intinp()):\n n=intinp()\n s= list(map(int,input()))\n nn = n+1 if n&1==1 else n \n x1 = '10'*nn \n x2 = '01'*nn\n c1=c2=0 \n for i in range(n):\n  if s[i]!=int(x1[i]):\n   c1+=1 \n  if s[i]!=int(x2[i]):\n   c2+=1 \n print(min(c1,c2))", "for i in range(int(input())):\n n=int(input())\n l=input()\n k=n//2\n p='10'*k\n q='01'*k\n x=y=0\n if n%2==0:\n  for i in range(n):\n   if l[i]!=p[i]:\n    x=x+1\n   if l[i]!=q[i]:\n    y=y+1\n  print(min(x,y))\n else:\n  p=p+'1'\n  q=q+'0'\n  for i in range(n):\n   if l[i]!=p[i]:\n    x=x+1\n   if l[i]!=q[i]:\n    y=y+1\n  print(min(x,y))\n \n\n", "t = int(input())\n\nfor _ in range(t):\n n = int(input())\n s = input()\n \n s1 = \"\"\n s0 = \"\"\n for i in range(n):\n  \n  s1+=str(i%2)\n  s0+=str((i+1)%2)\n count1=0\n count0=0\n for i in range(n):\n  if(s[i] != s1[i]):\n   count1+=1\n  \n  if(s[i]!=s0[i]):\n   count0+=1\n print(min(count1,count0))", "def solve(s, n):\n ans = 0\n\n for i in range(n):\n  if i % 2 == 0 and s[i] == '1':\n   ans += 1\n\n  if i % 2 == 1 and s[i] == '0':\n   ans += 1\n\n return min(ans, n - ans)\n\nfor _ in range(int(input())):\n n = int(input())\n s = input()\n n = len(s)\n\n print(solve(s, n))\n", "def flip(ch): \n return '1' if (ch == '0') else '0'\ndef FlipWithStart(str, expected): \n flipCount = 0\n for i in range(len(str)):\n  if (str[i] != expected): \n   flipCount += 1\n  expected = flip(expected) \n return flipCount\ndef minFlip(str):\n return min(FlipWithStart(str, '0'), FlipWithStart(str, '1'))\n \n \n \nfor _ in range(int(input())):\n n = int(input())\n s = input()\n print(minFlip(s))", "# cook your dish here\nt = int(input().strip())\nfor _ in range(t):\n n = int(input().strip())\n bits = input().strip()\n check1 = \"\"\n check2 = \"\"\n \n c1 = 0\n for _ in range(n):\n  check1 = check1 + str(c1)\n  check2 = check2 + str((c1+1)%2)\n  c1 = (c1 + 1)%2\n \n #print(check1)\n #print(check2)\n no1 =0\n no2 = 0\n for i in range(n):\n  no1 = no1 + (1 if (not bits[i]==check1[i]) else 0)\n  no2 = no2 + (1 if (not bits[i]==check2[i]) else 0)\n  #print(no1,no2)\n  \n print(min(no1,no2))", "for t in range(int(input())):\n n = int(input())\n s = input()\n count1 = count2 = 0\n for i in range(len(s)):\n  if i%2 == 0:\n   if s[i] != '1':\n    count1 += 1\n   if s[i] != '0':\n    count2 += 1\n  if i%2 == 1:\n   if s[i] != '0':\n    count1 += 1\n   if s[i] != '1':\n    count2 += 1\n print(min(count1,count2))", "def min_changes(a, n): \n \n # To store the inversions required \n # to make the array {1, 0, 1, 0, 1, 0, 1, ...} \n # and {0, 1, 0, 1, 0, 1, 0, ...} respectively \n ans_a = 0; \n ans_b = 0; \n \n # Find all the changes required \n for i in range(n): \n  if (i % 2 == 0): \n   if (a[i] == 0): \n    ans_a += 1; \n   else: \n    ans_b += 1; \n \n  else: \n   if (a[i] == 0): \n    ans_b += 1; \n   else: \n    ans_a += 1; \n \n # Return the required answer \n return min(ans_a, ans_b); \nfor _ in range(int(input())):\n n=int(input())\n s=input()\n s=list(s)\n s=[int(x) for x in s]\n print(min_changes(s,len(s)))", "x=int(input())\ndef minReplacement(s, length): \n ans = 0\n for i in range(0, length): \n\n  # If there is 1 at even index positions \n  if i % 2 == 0 and s[i] == '1': \n   ans += 1\n\n  # If there is 0 at odd index positions \n  if i % 2 == 1 and s[i] == '0': \n   ans += 1\n \n return min(ans, length - ans) \nfor i in range(x):\n length = int(input())\n s = input()\n print(minReplacement(s, length))\n \n", "def min_changes(a, n):\n a1 = 0\n b1 = 0\n for i in range(n): \n  if (i % 2 == 0): \n   if (a[i] == '0'): \n    a1 += 1 \n   else: \n    b1 += 1\n \n  else: \n   if (a[i] == '0'): \n    b1 += 1 \n   else: \n    a1 += 1; \n return min(a1,b1) \n \nt=int(input())\nwhile t>0:\n n=int(input())\n s=input()\n s=list(s)\n print(min_changes(s, n))\n t-=1\n", "import io, sys, os\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li():\n return list(map(int, sys.stdin.readline().split()))\n\n\ndef num():\n return list(map(int, sys.stdin.readline().split()))\n\n\ndef nu():\n return int(input())\n\n\ndef find_gcd(x, y):\n while (y):\n  x, y = y, x % y\n return x\n\n\ndef lcm(x, y):\n gg = find_gcd(x, y)\n return (x * y // gg)\n\n\nmm = 1000000007\n\n\ndef solve():\n t = nu()\n for tt in range(t):\n  n=nu()\n  s=input()\n  x=\"\"\n  y=\"\"\n  for i in range(len(s)):\n   if(i%2==0):\n    x+=\"0\"\n    y+=\"1\"\n   else:\n    x+=\"1\"\n    y+=\"0\"\n  cc=0\n  pp=0\n  for i in range(len(s)):\n   if(s[i]!=x[i]):\n    cc+=1\n   if(s[i]!=y[i]):\n    pp+=1\n  print(min(cc,pp))\n\n\n\ndef __starting_point():\n solve()\n\n__starting_point()", "import sys\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n=int(input())\n  s1=input()\n  s=0\n  a1=[]\n  a2=[]\n  for i in range(n):\n   a1.append(s)\n   s=s^1\n  s=1\n  for i in range(n):\n   a2.append(s)\n   s = s ^ 1\n  c1=0\n  c2=0\n  for i in range(n):\n   if(int(s1[i])!=a1[i]):\n    c1+=1\n  for i in range(n):\n   if(int(s1[i])!=a2[i]):\n    c2+=1\n  print(min(c1,c2))\n\n\n\n\n\n\n__starting_point()", "# cook your dish here\nfor a0 in range(int(input())):\n n=int(input())\n s,x=\"\",\"\"\n k=input()\n for i in range(n):\n  s+=str((i+1)%2)\n  x+=str(i%2)\n hee,hoo=0,0\n for i in range(n):\n  if k[i]!=s[i]:\n   hee+=1\n  if k[i]!=x[i]:\n   hoo+=1\n print(min(hee,hoo))"]