["try:\n    a=list(map(int,input().split()))\n    n=a[0]\n    k=a[1]\n    hi=[]\n    for i in range(n):\n        hi.append(int(input()))\n    hi.sort()\n    diff=[]\n    for i in range(n-k+1):\n        diff.append(hi[i+k-1]-hi[i])\n    print(min(diff))\nexcept:\n    pass", "N,K=map(int,input().split())\nl=[]\ni=0\nwhile i<N:\n    i+=1\n    l.append(int(input()))\nl.sort()\nm='n'\nfor i in range(N-K+1):\n    if m=='n' or l[i+K-1]-l[i]<m:\n        m=l[i+K-1]-l[i]\nprint(m)", "#\nn,k = list(map(int,input().split()))\narr=[]\nfor _ in range(n):\n    arr.append(int(input()))\narr.sort()\nmin=arr[n-1]\n#nt(arr,min)\nfor i in range(n-k):\n    temp=arr[k+i-1]-arr[i]\n    #print(temp)\n    if temp<min:\n        min=temp\nprint(min)\n    \n", "n, k = map(int, input().split())\r\nhs = sorted([int(input()) for _ in range(n)])\r\nm = hs[k - 1] - hs[0]\r\ni = k\r\nwhile i < n:\r\n\tnew = hs[i] - hs[i - k + 1]\r\n\tif new < m:\r\n\t\tm = new\r\n\ti += 1\r\nprint(m)", "n,k=map(int,input().split())\r\nl=[]\r\nl.append(-1)\r\nfor i in range(n):\r\n    l.append(int(input()))\r\nl.sort()\r\nm=l[k]-l[1]\r\nfor i in range(2,n-k):\r\n    if(l[i+k-1]-l[i]<m):\r\n        m=l[i+k-1]-l[i]\r\nprint(m)", "n,k=list(map(int,input().split()))\na=[]\nfor _ in range(n):\n    a.append(int(input()))\na.sort()\nhmin=a[0]\nhmax=a[k-1]\nd=hmax-hmin\nfor i in range(0,len(a)-k):\n    if(d>a[k+i-1]-a[i]):\n        d=a[k+i-1]-a[i]\nprint(d)", "n, k = map(int, input().split())\r\narr = []\r\nfor i in range(n):\r\n\tarr += [int(input())]\r\n\r\narr.sort()\r\nans = 10**10\r\nfor i in range(n-k+1):\r\n\tans = min(ans, arr[k+i-1] - arr[i])\r\nprint(ans)", "from sys import stdin,stdout\r\nfor _ in range(1):#int(stdin.readline())):\r\n    n,k=list(map(int,stdin.readline().split()))\r\n    # n = int(stdin.readline())\r\n    # a=list(map(int,stdin.readline().split()))\r\n    a=[];ans=float('inf')\r\n    for _ in range(n):\r\n        a+=[int(stdin.readline())]\r\n    a.sort()\r\n    for i in range(n-k+1):\r\n        ans=min(ans,abs(a[i]-a[i+k-1]))\r\n    print(ans)", "n,k=list(map(int,input().split()))\nl=[]\nl2=[]\nfor i in range(n):\n    a=int(input())\n    l.append(a)\nl.sort()\nfor i in range(n-k +1):\n    l1=[]\n    for j in range(i,k+i):\n        l1.append(l[j])\n    hmax=max(l1)\n    hmin=min(l1)\n    d=hmax-hmin\n    l2.append(d)\nprint(min(l2))\n    \n", "n,k=[int(x) for x in input().split()]\na=[]\nres=[]\nfor _ in range(n):\n    a.append(int(input()))\na.sort()  \n# print(a)\nfor _ in range(n-k+1): \n    res.append(abs(a[_]-a[_+k-1]))\nprint(min(res))\n", "# cook your dish here\nx=input()\nlst=x.split()\nn=int(lst[0])\nm=int(lst[1])\nl=list()\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nk=0\nmn=100000000000000\nwhile m+k<=n:\n        s=l[m+k-1]-l[k]\n        if mn>s:\n            mn=s\n        k+=1\nprint(mn)", "n,k = tuple(map(int, input().split()))\nh = []\nfor i in range(n): h.append(int(input()))\nh.sort()\ndhmin = 10e9\nfor i in range(n-k+1):\n    temp = h[i+k-1]-h[i]\n    dhmin = temp if temp<dhmin else dhmin\nprint(dhmin)", "# cook your dish here\ntry:\n    n,k=map(int,input().split())\n    l=[]\n    for i in range(n):\n        l.append(int(input()))\n    l.sort()\n    res=l[0+k-1]-l[0]\n    for i in range(n-k+1):\n        d=l[i+k-1]-l[i]\n        res=min(res,d)\n    print(res)\nexcept EOFError as e: \n    pass", "# cook your dish here\n\nn, k = list(map(int, input().split()))\n\nheights = [0 for i in range(n)]\n\nfor height in range(n):\n    heights[height] = int(input())\n    \nheights.sort()\n\ndecorated_trees = heights[:k]\n\nheight_differences = decorated_trees[-1] - decorated_trees[0]\n\nfor i in range(n-k+1):\n    decorated_trees = heights[i:i+k]\n    height_differences = min(height_differences, decorated_trees[-1] - decorated_trees[0])\n    # print(heights, decorated_trees, height_differences)\n\nprint(height_differences)", "# cook your dish here\ntry:\n    n,k=map(int,input().split())\n    l=[]\n    for i in range(n):\n        h=int(input())\n        l.append(h)\n    l.sort()\n    mn=max(l)\n    for i in range(n-k):\n        mn=min(mn,l[i+k-1]-l[i])\n    print(mn)\n\n    \nexcept:\n    pass", "# cook your dish here\nfrom sys import stdin, stdout\ninput = stdin.readline\nfrom collections import defaultdict as dd\nimport math\ndef geti(): return list(map(int, input().strip().split()))\ndef getl(): return list(map(int, input().strip().split()))\ndef gets(): return input()\ndef geta(): return int(input())\ndef print_s(s): stdout.write(s+'\\n')\n\ndef solve():\n    n,k=geti()\n    a=[]\n    for i in range(n):\n        a.append(geta())\n    a.sort()\n    ans=float('inf')\n    for i in range(n-k+1):\n        ans=min(ans,a[i+k-1]-a[i])\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "# cook your dish here\nimport sys\nn, k = map(int, input().strip().split())\ntrees=[]\nfor _ in range(n):\n    trees.append(int(input().strip()))\ntrees.sort()\nminimo=1000\nfor i in range(0,n-k+1):\n    minimo=min(minimo, trees[i+k-1]-trees[i])\nprint(minimo)", "n,k=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nm=10000000000000000000000000000000\nfor i in range(n-k+1):\n    m=min(m,l[i+k-1]-l[i])\nprint(m)\n", "n, k = list(map(int, input().split()))\nh = []\nfor _ in range(n):\n    h.append(int(input()))\n\nh = sorted(h)\nmm = 10**8\nfor i in range(n-k):\n    mm = min(mm, h[i+k-1]-h[i])\n\nprint(mm)\n", "l=list(map(int,input().split()))\nn=l[0]\nk=l[1]\nl=[]\nfor i in range(n):\n    l.append(int(input()))\nl.sort()\nres=[]\nmin=l[-1]\nfor i in range(n-k):\n    x=l[i:i+k]\n    if (x[-1]-x[0])<min:\n        min=x[-1]-x[0]\n        res=x[:]\nprint(min)\n#print(res)\n", "# cook your dish here\nline1 = [int(x) for x in input().split()]\nn = line1[0]\nk = line1[1]\narr = []\nwhile(n > 0):\n    arr.append(int(input()))\n    n -= 1\narr.sort()\ni = 0\nj = k - 1\nmini = 110\nif j >= len(arr):\n    print(arr[len(arr)-1] - arr[0])\n\nelse:\n    while(j < len(arr)):\n        mini = min(arr[j] - arr[i],mini)\n        i += 1  \n        j += 1\n\n    print(mini)\n\n", "x,k=map(int,input().split())\r\nl=[]\r\nfor i in range(x):\r\n    l=l+[int(input())]\r\nl.sort()\r\ni=0\r\nmin=2**64\r\nwhile i+k<len(l):\r\n    if (l[i+k-1]-l[i])<min:\r\n        min=l[i+k-1]-l[i]\r\n    i+=1\r\nprint(min)", "# cook your dish here\nn,k=list(map(int,input().split()))\nl=[]\nfor _ in range(n):\n    l.append(int(input()))\nl.sort()\nm=l[k-1]-l[0]\nfor i in range(n-k):\n    if(l[k-1+i]-l[i] < m):\n        m=l[i+k-1]-l[i]\nprint(m)\n\n", "n,k=list(map(int,input().split(\" \")))\nl=[]\nfor i in range(n):\n    a=int(input())\n    l.append(a)\nl.sort()\nmini=10**10\nfor i in range(n-k+1):\n    mini=min(mini,l[i+k-1]-l[i])\nprint(mini)\n    \n    \n", "n, k = map(int, input(). split())\ntrees = [] \n\nfor i in range(n):\n      trees. append(int(input()))\n\ntrees.sort() \nminimum = 10**5 \n\nfor i in range(0, n - k + 1, 1):\n      temp = trees[i + k - 1]  - trees[i]\n      minimum = min(temp, minimum)\n\nprint(minimum )"]