["try:\r\n    t = int(input())\r\n    while(t > 0):\r\n        t -= 1\r\n        n,m = list(map(int,input().split()))\r\n        a = [list(map(int,input().split())) for _ in range(n)]\r\n        dp = [[0 for _ in range(m)] for _ in range(n)]\r\n        ans = [['0' for _ in range(m)] for _ in range(n)]\r\n        for i in range(n):\r\n            for j in range(m):\r\n                if i-1 < n:\r\n                    if 0 <= j-1 and j+1 < m:\r\n                        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j],dp[i-1][j+1])\r\n                    elif j == 0:\r\n                        dp[i][j] = max(dp[i-1][j],dp[i-1][j+1])\r\n                    elif j == m-1:\r\n                        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j])\r\n    \r\n                if dp[i][j] > a[i][j]:\r\n                    ans[i][j] = '0'\r\n                else:\r\n                    ans[i][j] = '1'\r\n                    dp[i][j] = a[i][j]\r\n    \r\n        for i in ans:\r\n            print(''.join(i))\r\nexcept:\r\n    pass", "try:\r\n    t = int(input())\r\n    while(t > 0):\r\n        t -= 1\r\n        n,m = list(map(int,input().split()))\r\n        a = [list(map(int,input().split())) for _ in range(n)]\r\n        dp = [[0 for _ in range(m)] for _ in range(n)]\r\n        ans = [['0' for _ in range(m)] for _ in range(n)]\r\n        for i in range(n):\r\n            for j in range(m):\r\n                if i-1 < n:\r\n                    if 0 <= j-1 and j+1 < m:\r\n                        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j],dp[i-1][j+1])\r\n                    elif j == 0:\r\n                        dp[i][j] = max(dp[i-1][j],dp[i-1][j+1])\r\n                    elif j == m-1:\r\n                        dp[i][j] = max(dp[i-1][j-1],dp[i-1][j])\r\n    \r\n                if dp[i][j] > a[i][j]:\r\n                    ans[i][j] = '0'\r\n                else:\r\n                    ans[i][j] = '1'\r\n                    dp[i][j] = a[i][j]\r\n    \r\n        for i in ans:\r\n            print(''.join(i))\r\nexcept:\r\n    pass", "# cook your dish here\nfor _ in range(int(input())):\n    N,M=list(map(int,input().split()))\n    matrix=[]\n    for i in range(N):\n        l=list(map(int,input().split()))\n        matrix.append(l)\n    for i in range(1,N):\n        for j in range(M):\n            if(j==0):\n                if(max(matrix[i-1][j],matrix[i-1][j+1])>matrix[i][j]):\n                    matrix[i][j]=max(matrix[i-1][j],matrix[i-1][j+1])\n            elif(j==M-1):\n                if(max(matrix[i-1][j],matrix[i-1][j-1])>matrix[i][j]):\n                    matrix[i][j]=max(matrix[i-1][j],matrix[i-1][j-1])\n            else:\n                if(max(matrix[i-1][j-1],matrix[i-1][j],matrix[i-1][j+1])>matrix[i][j]):\n                    matrix[i][j]=max(matrix[i-1][j-1],matrix[i-1][j],matrix[i-1][j+1])\n    # print(matrix)\n    ans=[[1]*M for i in range(N)]\n    for i in range(1,N):\n        for j in range(M):\n            if(j==0):\n                if(max(matrix[i-1][j],matrix[i-1][j+1])>=matrix[i][j]):\n                    ans[i][j]=0\n            elif(j==M-1):\n                if(max(matrix[i-1][j],matrix[i-1][j-1])>=matrix[i][j]):\n                    ans[i][j]=0\n            else:\n                if(max(matrix[i-1][j-1],matrix[i-1][j],matrix[i-1][j+1])>=matrix[i][j]):\n                    ans[i][j]=0\n    for i in range(N):\n        for j in range(M):\n            print(ans[i][j],end=\"\")\n        print()\n                ", "# cook your dish here\nfrom sys import stdin,stdout\nimport sys\nfrom bisect import bisect_left,bisect_right\n\n# stdin = open(\"input.txt\", \"r\");\n# stdout = open(\"output.txt\", \"w\");\n\nt= int(stdin.readline().strip())\n\nfor _ in range(t):\n\tn,m=stdin.readline().strip().split(' ')\n\tn,m=int(n),int(m)\n\tarr=[]\n\tfor i in range(n):\n\t\tarr.append(list(map(int,stdin.readline().strip().split(' '))))\n\tctr=0\n\tvisited=[[False for i in range(m)] for j in range(n)]\n\tsol=[[1 for i in range(m)] for j in range(n)]\n\tpq=[]\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tpq.append((arr[i][j],i,j))\n\tpq=sorted(pq,key=lambda e:(e[0]),reverse=True)\n\t# print(pq)\n\tfor i in pq:\n\t\tcv,yo,xo=i\n\t\tif visited[yo][xo]:\n\t\t\tcontinue\n\t\telse:\n\t\t\tstack=[xo,yo]\n\t\t\twhile len(stack):\n\t\t\t\ty=stack.pop(-1)\n\t\t\t\tx=stack.pop(-1)\n\t\t\t\tvisited[y][x]=True\n\t\t\t\tctr+=1\n\t\t\t\tsol[y][x]=0\n\t\t\t\tif x-1>=0 and x-1<m and y+1>=0 and y+1<n:\n\t\t\t\t\tif not visited[y+1][x-1]:\n\t\t\t\t\t\tstack.append(x-1)\n\t\t\t\t\t\tstack.append(y+1)\n\t\t\t\tif x>=0 and x<m and y+1>=0 and y+1<n:\n\t\t\t\t\tif not visited[y+1][x]:\n\t\t\t\t\t\tstack.append(x)\n\t\t\t\t\t\tstack.append(y+1)\n\t\t\t\tif x+1>=0 and x+1<m and y+1>=0 and y+1<n:\n\t\t\t\t\tif not visited[y+1][x+1]:\n\t\t\t\t\t\tstack.append(x+1)\n\t\t\t\t\t\tstack.append(y+1)\n\t\t\tsol[yo][xo]=1\n\n\tfor i in sol:\n\t\tfor j in i:\n\t\t\tstdout.write(str(j))\n\t\tstdout.write(\"\\n\")", "for _ in range(int(input())):\r\n\tn,m = map(int,input().split())\r\n\tprint('1'*m)\r\n\tprev  = tuple(map(int,input().split()))\r\n\tfor i in range(1,n):\r\n\t\ts = ''\r\n\t\tnow = tuple(map(int,input().split()))\r\n\t\tprev_ = []\r\n\t\tfor j in range(m):\r\n\t\t\ttemp = prev[j]\r\n\t\t\tif j+1<m and prev[j+1]>temp:\r\n\t\t\t\ttemp = prev[j+1]\r\n\t\t\tif j>0 and prev[j-1]>temp:\r\n\t\t\t\ttemp = prev[j-1]\r\n\t\t\tif temp<now[j]:\r\n\t\t\t\ts += '1'\r\n\t\t\t\ttemp = now[j]\r\n\t\t\telse:\r\n\t\t\t\ts += '0'\r\n\t\t\tprev_.append(temp)\r\n\t\tprev = prev_\r\n\t\tprint(s)\r\n", "import numpy as np\r\nfor _ in range(int(input())):\r\n\tn,m = map(int,input().split())\r\n\torder = np.zeros((n*m,2),dtype=np.uint8)\r\n\tstate = np.ones((n,m),dtype=np.uint8)*2\r\n\tfor i in range(n):\r\n\t\tj = 0\r\n\t\tfor e in map(int,input().split()):\r\n\t\t\torder[e-1] = i,j\r\n\t\t\tj+=1\r\n\r\n\tfor i0 in range(n*m-1,-1,-1):\r\n\t\ti,j = order[i0]\r\n\t\t# print(i,j)\r\n\t\tif state[i,j]==2:#same as init or not changed till now\r\n\t\t\t# print(i,j)\r\n\t\t\tj_start = j_end = j\r\n\t\t\tstate[i,j]=1#clean at the end\r\n\t\t\twhile i<n-1:\r\n\t\t\t\ti+=1\r\n\t\t\t\tj_start = max(0,j_start-1)\r\n\t\t\t\tj_end = min(m,j_end+1)\r\n\t\t\t\tstate[i,j_start:j_end+1] &= 1# if will be cleaned later not affected\r\n\t\t\t\t#if init or dirty marked as dirty set to 0\r\n\t\t\t\t# print(i,j_start,j_end)\r\n\t# print(order)\r\n\tfor i in range(n):\r\n\t\tprint(''.join(map(str,state[i])))", "for _ in range(int(input())):\r\n    N, M = list(map(int, input().split()))\r\n    A = []\r\n    B = [['1' for x in range(M)] for x in range(N)]\r\n    C = [['1' for x in range(M)] for x in range(N)]\r\n\r\n    for __ in range(N):\r\n        A.append(list(map(int, input().split())))\r\n\r\n    B[0] = A[0].copy()\r\n\r\n    for i in range(1, N):\r\n        p = i - 1\r\n        for j in range(0, M):\r\n            B[i][j] = A[p][j]\r\n            B[i][j] = max(B[i][j], A[i][j])\r\n\r\n            if j >= 1:\r\n                B[i][j] = max(B[i][j], B[p][j - 1])\r\n\r\n            if j <= M - 2:\r\n                B[i][j] = max(B[i][j], B[p][j + 1])\r\n\r\n    C[0] = [1] * M\r\n    for i in range(1, N):\r\n        for j in range(0, M):\r\n            if B[i][j] > A[i][j]:\r\n                C[i][j] = 0\r\n\r\n    for i in range(0, N):\r\n        for j in range(0, M):\r\n            print(C[i][j], end='')\r\n        print()\r\n", "for _ in range(int(input())):\r\n    N, M = list(map(int, input().split()))\r\n    A = []\r\n    B = [['0' for x in range(M)] for x in range(N)]\r\n    for __ in range(N):\r\n        A.append(input().split())\r\n\r\n    D = {}\r\n    for i in range(N):\r\n        for j in range(M):\r\n            D[int(A[i][j])] = (i, j)\r\n\r\n    for k in range(1, N * M + 1):\r\n        i, j = D[k]\r\n        B[i][j] = '1'\r\n        for p in range(i + 1, N):\r\n            diff = p - i\r\n            for q in range(j - diff, j + diff + 1):\r\n                if q >= 0 and q < M:\r\n                    B[p][q] = '0'\r\n\r\n    for i in B:\r\n        for j in i:\r\n            print(j, end='')\r\n        print()\r\n", "def arr_str(arr):\r\n\tstrr=\"\"\r\n\tfor i in arr:\r\n\t\tstrr+=str(i)\r\n\treturn(strr)\r\nfor _ in range(int(input())):\r\n\tn,m=map(int,input().split())\r\n\tA=[0]*n\r\n\tfor i in range(n):\r\n\t\ttemp=[0]\r\n\t\tB=[int(i) for i in input().split()]\r\n\t\ttemp.extend(B)\r\n\t\ttemp.append(0)\r\n\t\tA[i]=temp\r\n\r\n\t# print(A)\r\n\tans=[[0 for i in range(m)] for j in range(n)]\r\n\tdp=[[0 for i in range(m+2)] for j in range(n)]\r\n\tfor i in range(m):\r\n\t\tdp[0][i+1]=A[0][i+1]\r\n\tfor i in range(1,n):\r\n\t\tfor j in range(1,m+1):\r\n\t\t\ttemp=max(dp[i-1][j-1],dp[i-1][j],dp[i-1][j+1])\r\n\t\t\t# print(temp)\r\n\t\t\tif(temp>A[i][j]):\r\n\t\t\t\tans[i-1][j-1]=0\r\n\t\t\telse:\r\n\t\t\t\tans[i-1][j-1]=1\r\n\t\t\ttemp=max(temp,A[i][j])\r\n\t\t\tdp[i][j]=temp\r\n\ttem=[1]*m\r\n\t\r\n\tprint(arr_str(tem),end=\"\\n\")\r\n\tfor i in range(n-1):\r\n\t\tprint(arr_str(ans[i]),end=\"\\n\")\r\n\r\n\t", "t=int(input())\nfor i in range(0,t):\n    n,m = map(int, input().split())\n    arr = []\n    ans = []\n    for i in range (0,n):\n        in_arr = list(map(int , input().split()))\n        if i == 0:\n            \n            x= '1'*m\n        else :\n            x = \"\"\n            for j in range ( 0, m):\n                arr2 = [0]*m\n                if j==0 :\n                    maxv = max(ans[i-1][0],ans[i-1][1])\n                    \n                elif j== m-1 :\n                    maxv = max(ans[i-1][m-2],ans[i-1][m-1])\n                    \n                else :\n                    maxv = max(ans[i-1][j-1] , ans[i-1][j] , ans[i-1][j+1])\n                if (maxv > in_arr[j]):\n                        in_arr[j] = maxv \n                        x=x+'0'\n                else:\n                        x=x+'1'\n        ans.append(in_arr)\n        arr.append(x)\n    for i in range (0,n):\n        print(arr[i])\n            \n        \n            \n\n", "t=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    l=[]\n    for i in range(n):\n        l.append(list(map(int,input().split())))\n    k=[]\n    for i in range(n):\n        for j in range(m):\n            k.append([l[i][j],i,j])\n    k.sort()\n    s=[]\n    for i in range(n):\n        s.append([0]*m)\n    for i in k:\n        x=i[1]\n        y=i[2]\n        s[x][y]=1\n        c=1\n        #print(x,y)\n        for j in range(x+1,n):\n            s[j][y]=0\n            for b in range(y-1,max(y-c-1,-1),-1):\n                s[j][b]=0\n            for b in range(y+1,min(m,y+c+1)):\n                s[j][b]=0\n            c+=1\n        \n    for i in s:\n        print(\"\".join(map(str,i)))\n    \n                \n", "T = int(input())\r\nwhile(T>0):\r\n    N,M = [int(x) for x in input().split()]\r\n    arr = [[int(x) for x in input().split()] for y in range(N)]\r\n    ans = [['1' for x in range(M)] for y in range(N)]\r\n    for i in range(1,N):\r\n        for j in range(M):\r\n            m = max(arr[i][j],arr[i-1][j])\r\n            if(j-1>=0):\r\n                m = max(m,arr[i-1][j-1])\r\n            if(j+1<M):\r\n                m = max(m,arr[i-1][j+1])\r\n            if(arr[i][j]!=m):\r\n                ans[i][j]='0'\r\n            arr[i][j]=m\r\n    for i in range(N):\r\n        print(''.join(ans[i]))\r\n    T-=1", "#code\r\n#code\r\nt=int(input())\r\nfor i in range(t):\r\n    #n,k=list(map(int,input().split()))\r\n    arr=[]\r\n    n,m=map(int,input().split())\r\n    z=['1' for i in range(m)]\r\n    arr.append(list(map(int,input().split())))\r\n    print(\"\".join(z))\r\n    for i in range(1,n):\r\n        x=''\r\n        arr.append(list(map(int,input().split())))\r\n        if arr[i][0]>arr[i-1][0] and arr[i][0]>arr[i-1][1]:\r\n            x+='1'\r\n        else:\r\n            x+='0'\r\n        arr[i][0]=max(arr[i-1][0],arr[i][0],arr[i-1][1])\r\n        for j in range(1,m-1):\r\n            if arr[i][j]>arr[i-1][j] and arr[i][j]>arr[i-1][j+1] and arr[i][j]>arr[i-1][j-1]:\r\n                x+='1'\r\n            else:\r\n                x+='0'\r\n            arr[i][j]=max(arr[i-1][j],arr[i][j],arr[i-1][j+1],arr[i-1][j-1])\r\n        if arr[i][m-1]>arr[i-1][m-1] and arr[i][m-1]>arr[i-1][m-2]:\r\n            x+='1'\r\n        else:\r\n            x+='0'\r\n        arr[i][m-1]=max(arr[i-1][m-2],arr[i][m-1],arr[i-1][m-1])\r\n        print(x)\r\n        ", "from sys import stdin    \nt=int(stdin.readline())\nwhile t:\n    n,m=map(int,stdin.readline().split())\n    a=[]\n    k=[[1 for _ in range(m)]for __ in range(n)]\n    for _ in range(n):\n        a.append(list(map(int,stdin.readline().split())))\n    dp=[[a[i][_] for _ in range(m)]for i in range(n)]\n    for i in range(1,n):\n        for j in range(m):\n            if j==m-1:\n                dp[i][j]=max(0,max(dp[i-1][j-1],dp[i-1][j]))\n            elif j==0:\n                dp[i][j]=max(0,max(dp[i-1][j],dp[i-1][j+1]))\n                \n            else:\n                dp[i][j]=max(0,max(dp[i-1][j-1],dp[i-1][j],dp[i-1][j+1]))\n                \n            if dp[i][j]>a[i][j]:\n                k[i][j]=0\n            else:\n                k[i][j]=1\n                dp[i][j]=a[i][j]\n            \n    for i in range(n):\n        for j in range(m):\n            print(k[i][j],end='')\n        print()\n            \n        \n    t-=1\n\n    \n    \n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = [0] * m \r\n  for _ in range(n):\r\n    a = list(R())\r\n    b = list(map(max, a, [0] + b, b, b[1:] + [0]))\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = (0,) * m \r\n  for _ in range(n):\r\n    a = *R(),\r\n    b = *map(max, a, (0,) + b, b, b[1:] + (0,)),\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = (0,) * m \r\n  for _ in range(n):\r\n    a = tuple(R())\r\n    b = *map(max, a, (0,) + b, b, b[1:] + (0,)),\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = (0,) * m \r\n  for _ in range(n):\r\n    a = *R(),\r\n    b = *map(max, a, (0,) + b, b, b[1:] + (0,)),\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = [0] * m \r\n  for _ in range(n):\r\n    a = *R(),\r\n    b = *map(max, a, (0, *b), b, (*b[1:], 0)),\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "R = lambda : map(int, input().split())\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  b = [0] * m \r\n  for _ in range(n):\r\n    a = list(R())\r\n    b = list(map(max, a, [0] + b, b, b[1:] + [0]))\r\n    print(''.join('10'[x < y] for x, y in zip(a, b)))\r\n", "t = int(input())\r\nfor i in range(t):\r\n\tn, m = map(int, input().split())\r\n\tarr = []\r\n\tfor j in range(n):\r\n\t\tarr += [[int(j) for j in input().split()]]\r\n\t# print(arr)\r\n\r\n\tdp = [[0 for i in range(m)] for j in range(n)]\r\n\tans = [[0 for i in range(m)] for j in range(n)]\r\n\r\n\tfor i in range(m):\r\n\t\tdp[0][i] = arr[0][i]\r\n\t\tans[0][i] = 1\r\n\r\n\tif m == 1:\r\n\t\tfor i in range(1, n):\r\n\t\t\tdp[i][0] = max(dp[i-1][0], arr[i][0])\r\n\t\t\tif dp[i][0] == arr[i][0]:\r\n\t\t\t\tans[i][0] = 1\r\n\t\t# print(dp)\r\n\t\tfor x in ans:\r\n\t\t\tprint(*x, sep='')\r\n\t\tcontinue\r\n\r\n\tfor i in range(1, n):\r\n\t\tdp[i][0] = max(dp[i-1][0], dp[i-1][1], arr[i][0])\r\n\t\tif dp[i][0] == arr[i][0]:\r\n\t\t\tans[i][0] = 1\r\n\r\n\t\tfor j in range(1, m-1):\r\n\t\t\tdp[i][j] = max(dp[i-1][j], dp[i-1][j-1], dp[i-1][j+1], arr[i][j])\r\n\t\t\tif dp[i][j] == arr[i][j]:\r\n\t\t\t\tans[i][j] = 1\r\n\r\n\t\tdp[i][m-1] = max(dp[i-1][m-1], dp[i-1][m-2], arr[i][m-1])\r\n\t\tif dp[i][m-1] == arr[i][m-1]:\r\n\t\t\tans[i][m-1] = 1\r\n\r\n\tfor x in ans:\r\n\t\tprint(*x, sep='')\r\n", "# cook your dish here\nt = int(input())\n\nfor _ in range(t):\n\tn, m = map(int, input().split())\n\n\tget_ups = lambda r, c: [(r-1, c + i) for i in [1, 0, -1] if 0 <= c+i < m]\n\tgrid = [list(map(int, input().split())) for _ in range(n)]\n\tres = [[0]*m for _ in range(n)]\n\tres[0] = ['1']*m \n\tfor i in range(1, n):\n\t\tfor j in range(m):\n\t\t\tt = 1\n\t\t\tfor r, c in get_ups(i, j):\n\t\t\t\tif grid[r][c] > grid[i][j]:\n\t\t\t\t\tgrid[i][j] = grid[r][c]\n\t\t\t\t\tt = 0\n\t\t\tres[i][j] = '1' if t else '0'\n\tfor r in res:\n\t\tprint(''.join(r))", "R = lambda : map(int, input().split())\r\nf = lambda x: ([0] + x, x, x[1:] + [0])\r\n\r\nt, = R()\r\nfor _ in range(t):\r\n  n, m = R()\r\n  a = b = [0] * m \r\n  for _ in range(n):\r\n    a = list(map(max, *f(a), *f(b)))\r\n    b = list(R())\r\n    print(''.join('01'[x < y] for x, y in zip(a, b)))\r\n"]