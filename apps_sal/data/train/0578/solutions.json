["# cook your dish here\nfor i in range(int(input())):\n n,b=map(int,input().split())\n ans=round(n/(2*b))*(n-b*round((n/(2*b))));\n print(ans)", "import math\nn=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n if a>b:\n  a1=math.ceil(a/(2*b))\n  b1=a-a1*b\n  a2=math.floor(a/(2*b))\n  b2=a-a2*b\n  print(max(a1*b1,a2*b2))\n else:\n  print(0)\n  \n \n", "n=int(input())\nfor i in range(n):\n a,b=list(map(int,input().split()))\n if a>b:\n  t=a//b\n  max1=1\n  ans=0\n  while(t>=t/2):\n   ans=(a-b*t)*t\n   max1=max(ans,max1)\n   t-=1\n  print(max1)\n else:\n  print(0)\n  \n \n", "n=int(input())\nfor i in range(n):\n a,b=map(int,input().split())\n if a>b:\n  t=a//b\n  max1=1\n  ans=0\n  while(t>0):\n   ans=(a-b*t)*t\n   max1=max(ans,max1)\n   t-=1\n  print(max1)\n else:\n  print(0)", "# cook your dish here\nt = int(input())\nfor i in range(t):\n # n for total energy, b for energy of second screen\n n,b = map(int,input().split(\" \"))\n num = n//b\n final = [i*(n-b*i) for i in range(num+1)]\n print(max(final))", "def function(x,n):\n if x>n:\n  return 0\n return x*(n-x*b)\nfor _ in range(int(input())):\n n,b=list(map(int,input().split()))\n #print(n//(2*b),n//(2*b)+1)\n print(max((function(n//(2*b),n),function(n//(2*b)+1,n))))\n \n \n", "def closestNumber(n, m) : \n# Find the quotient \n q = int(n / m) \n \n# 1st possible closest number \n n1 = m * q \n \n# 2nd possible closest number \n if((n * m) > 0) : \n  n2 = (m * (q + 1)) \n else : \n  n2 = (m * (q - 1)) \n  \n # if true, then n1 is the required closest number \n if (abs(n - n1) < abs(n - n2)) : \n  return n1 \n  \n # else n2 is the required closest number  \n return n2 \n\nT = int(input())\nfor j in range(1, T+1):\n N, B = input().split()\n N = int(N)\n B = int(B)\n p = N % B\n k = N\n fs = 0\n maxim = 0\n \n print(int((N-closestNumber(int(N/2), B))*(closestNumber(int(N/2), B))/B))\n  \n  \n", "T = int(input())\nfor j in range(1, T+1):\n N, B = input().split()\n N = int(N)\n B = int(B)\n p = N % B\n k = N\n fs = 0\n maxim = 0\n for i in range(p, N-B+1, B):\n  N = k\n  fs = 0\n  ss = 0\n  fs = fs + i\n  N = N-i\n  while (N>=B):\n   ss = ss + fs\n   N = N-B\n  if ss > maxim:\n   maxim = ss\n print(maxim)\n  \n  \n", "T = int(input())\nfor j in range(1, T+1):\n N, B = input().split()\n N = int(N)\n B = int(B)\n k = N\n fs = 0\n maxim = 0\n for i in range(1, N-B+1):\n  N = k\n  fs = 0\n  ss = 0\n  fs = fs + i\n  N = N-i\n  while (N>=B):\n   ss = ss + fs\n   N = N-B\n  if ss > maxim:\n   maxim = ss\n print(maxim)\n  \n  \n", "T = int(input())\nfor j in range(1, T+1):\n N, B = input().split()\n N = int(N)\n B = int(B)\n k = N\n fs = 0\n maxim = 0\n for i in range(1, N+1):\n  N = k\n  fs = 0\n  ss = 0\n  fs = fs + i\n  N = N-i\n  while (N>=B):\n   ss = ss + fs\n   N = N-B\n  if ss > maxim:\n   maxim = ss\n print(maxim)\n  \n  \n", "from math import *\nfor j in range(int(input())):\n n,b=list(map(int,input().split()))\n a=n/(2*b)\n a1=ceil(a)\n a2=floor(a)\n d=(n-a1*b)*a1\n e=(n-a2*b)*a2\n print(max(d,e))\n", "import math\ndef ushijima(x):\n return (n-b*x)*x\nt = int(input())\nfor i in range(t):\n (n,b) = (int(x) for x in input().split())\n y1 = math.floor((math.floor(n/2))/b)\n y2 = math.floor((math.ceil(n/2))/b)\n y3 = math.ceil((math.floor(n/2))/b)\n y4 = math.ceil((math.ceil(n/2))/b)\n if y1==0 and y2==0 and y3==0 and y4==0:\n  print(\"0\")\n\n else:\n  print(max(ushijima(y1),ushijima(y2),ushijima(y3),ushijima(y4)))", "from math import floor,ceil\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n t1=ceil(ceil(n/2)/k)\n t2=ceil(floor(n/2)/k)\n t3=floor(ceil(n/2)/k)\n t4=floor(floor(n/2)/k)\n if not t1:t1=1\n if not t2:t2=1\n if not t3:t3=1\n if not t4:t4=1\n t1= int((n-k*t1)*t1)\n t2= int((n-k*t2)*t2)\n t3= int((n-k*t3)*t3)\n t4= int((n-k*t4)*t4)\n if t1<0 and t2<0 and t3<0 and t4<0:\n  print(0)\n else:\n  print(max(t1,t2,t3,t4))", "for _ in range(int(input())):\n n,k=list(map(int,input().split()))\n t1=-(-(n/2)//k)\n t2=(n/2)//k\n if not t1:t1=1\n if not t2:t2=1\n t1= int((n-k*t1)*t1)\n t2= int((n-k*t2)*t2)\n if t1<0 and t2<0:\n  print(0)\n else:\n  print(max(t1,t2))\n\n"]