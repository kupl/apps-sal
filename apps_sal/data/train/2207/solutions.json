["n=int(input())\nta,tb,da,db=[0]*4\nfor i in range (n):\n    t,x,y=list(map(int,input().split()))\n    if t==1:\n        ta+=(x+y)\n        da+=y\n    if (t==2):\n        tb+=(x+y)\n        db+=y       \nif (ta-da>=0.5*ta):\n    print ('LIVE')\nelse :\n    print ('DEAD')\nif (tb-db>=0.5*tb):\n    print ('LIVE')\nelse :\n    print ('DEAD')    \n    \n", "n=int(input())\nlive1, dead1, live2, dead2 = 0, 0, 0, 0\nfor i in range(n):\n    I=[int(j) for j in input().split()]\n    if I[0]==1:\n        live1+=I[1]\n        dead1+=I[2]\n    else:\n        live2+=I[1]\n        dead2+=I[2]\nif live1>=(live1+dead1)/2: print('LIVE')\nelse: print('DEAD')\nif live2>=(live2+dead2)/2: print('LIVE')\nelse: print('DEAD')", "import sys\n#f = sys.stdin\n# f = open(\"input.txt\", \"r\")\nn = int(input())\na, b = [[],[]], [[],[]]\nfor i in range(n):\n    t, xi, yi = map(int, input().split())\n    if t == 1:\n        a[0].append(xi)\n        a[1].append(yi)\n    else:\n        b[0].append(xi)\n        b[1].append(yi)\nif sum(a[0]) >= sum(a[1]):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\nif sum(b[0]) >= sum(b[1]):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")", "3\n\nn = int(input())\nsend = [[], []]\nfor _ in range(n):\n    t, x, y = tuple(map(int, input().split()))\n    send[t - 1].append(x)\nfor _ in range(2):\n    print('LIVE' if 2 * sum(send[_]) >= 10 * len(send[_]) else 'DEAD')\n", "while(1):\n    try:\n        n=int(input())\n        a,b,c=[0 for j in range(n)],[0 for j in range(n)],[0 for j in range(n)]\n        sum1,sum2=0,0\n        for i in range(0,n):\n            a[i],b[i],c[i]=list(map(int,input().split()))\n            if a[i]==1:\n                sum1+=b[i]\n            else:\n                sum2+=b[i]\n        count1,count2=a.count(1),a.count(2)\n        t1,t2=10*count1,10*count2\n        if sum1/t1>=0.5:\n            print(\"LIVE\")\n        else:\n            print(\"DEAD\")\n        if sum2/t2>=0.5:\n            print(\"LIVE\")\n        else:\n            print(\"DEAD\")\n    except EOFError:\n        break\n    \n        \n        \n        \n        \n", "n = int(input())\nu, v = [0, 0], [0, 0]\nfor i in range(n):\n    t, x, y = list(map(int, input().split()))\n    k = int(t == 1)\n    u[k] += x\n    v[k] += y\nprint('LDIEVAED'[u[1] < v[1] :: 2])\nprint('LDIEVAED'[u[0] < v[0] :: 2])    \n", "n=int(input())\nAns=\"\"\nA=[0,0]\nB=[0,0]\nfor i in range(n):\n    l,x,y=list(map(int,input().split()))\n    if(l==1):\n        A[0]+=x\n        A[1]+=10\n    else:\n        B[0]+=x\n        B[1]+=10\nif(A[0]/A[1]>=1/2):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n\nif(B[0]/B[1]>=1/2):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n", "n=int(input())\na,ar,b,br=0,0,0,0\nfor i in range(n):\n    x=list(map(int,input().split()))\n    if(x[0]==1):\n        a+=10\n        ar+=x[1]\n    else:\n        b+=10\n        br+=x[1]\nprint('DLEIAVDE'[ar>=a//2::2])\nprint('DLEIAVDE'[br>=b//2::2])\n", "n = int(input())\nr = [[0,0,0],[0,0,0]]\nfor i in range(n):\n    t,x,y = map(int, input().split())\n    if t == 1:\n        r[0][0] += 1\n        r[0][1] += x\n        r[0][2] += y\n    else:\n        r[1][0] += 1\n        r[1][1] += x\n        r[1][2] += y\nfor i in r:\n    if i[1] < i[2]:\n        print('DEAD')\n    else:\n        print('LIVE')", "n=int(input())\na=0\na1=0\nb=0\nb1=0\nfor i in range(n):\n    t,x,y=list(map(int,input().split()))\n    if t==1:\n        a+=x\n        a1+=y\n    else:\n        b+=x\n        b1+=y\nif a>=a1:\n    print('LIVE')\nelse:\n    print('DEAD')\nif b>=b1:\n    print('LIVE')\nelse:\n    print('DEAD')\n", "c = [[0, 0], [0, 0]]\nfor i in range(int(input())):\n    l = [int(x) for x in input().split()]\n    c[l[0] - 1][0] += l[1]\n    c[l[0] - 1][1] += l[2]\nfor i in range(2):\n    print('LIVE' if c[i][0] >= c[i][1] else 'DEAD')", "n = int(input())\nax = ay = bx = by = 0\nfor i in range(n):\n\tx, y, z = [int(t) for t in input().split()]\n\tif x == 1:\n\t\tax += y\n\t\tay += z\n\telse:\n\t\tbx += y\n\t\tby += z\nprint('LIVE' if ax >= ay else 'DEAD')\nprint('LIVE' if bx >= by else 'DEAD')\n", "def main():\n    n = int(input())\n    LIVE, DEAD = [0, 0, 0], [0, 0, 0]\n    for _ in range(n):\n        t, x, y = map(int, input().split())\n        LIVE[t] += x\n        DEAD[t] += y\n    for _ in 1, 2:\n        print(('LIVE', 'DEAD')[LIVE[_] < DEAD[_]])\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\naSended = 0\nbSended = 0\naPing = 0\nbPing = 0\n\nwhile n > 0:\n    t, x, y = map(int, input().split())\n    if t == 1:\n        aSended = aSended + 10\n        aPing = aPing + x\n    elif t == 2:\n        bSended = bSended + 10\n        bPing = bPing + x\n    n = n - 1\n\nif(int(aSended / 2) <= aPing):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n\nif(int(bSended / 2) <= bPing):\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")", "s = [[0, 0], [0, 0]]\nfor i in range(int(input())):\n    server, pass_, down = map(int, input().split())\n    s[server - 1][0] += pass_\n    s[server - 1][1] += down\nprint('LIVE' if s[0][0] >= s[0][1] else 'DEAD', 'LIVE' if s[1][0] >= s[1][1] else 'DEAD', sep='\\n')", "from functools import reduce\nfrom operator import *\nfrom math import *\nfrom sys import *\nfrom string import *\nfrom collections import *\nsetrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\n#################################################\nn=RI()[0]\nti=[0]*3\ntot=[0]*3\nfor i in range(n):\n    t,x,y=RI()\n    tot[t]+=x\n    ti[t]+=1\nfor i in (1,2):\n    print([\"LIVE\",\"DEAD\"][ti[i]*5>tot[i]])\n\n\n\n\n", "n = int(input())\nres1success = 0\nres1fail = 0\nres2success = 0\nres2fail = 0\nfor i in range(n):\n    s, x, y = list(map(int, input().split()))\n    if s == 1:\n        res1success += x\n        res1fail += y\n    else:\n        res2success += x\n        res2fail += y\n\nif res1success >= res1fail:\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n\nif res2success >= res2fail:\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n", "n = int(input())\nres1success = 0\nres1fail = 0\nres2success = 0\nres2fail = 0\nfor i in range(n):\n    s, x, y = list(map(int, input().split()))\n    if s == 1:\n        res1success += x\n        res1fail += y\n    else:\n        res2success += x\n        res2fail += y\n\nif res1success >= res1fail:\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n\nif res2success >= res2fail:\n    print(\"LIVE\")\nelse:\n    print(\"DEAD\")\n", "n = int(input())\n\na = b = 0\na_success = b_success = 0\n\nfor i in range(0, n):\n    description = [int(x) for x in input().split()]\n    if description[0] == 1:\n        a += 1\n        a_success += description[1]\n    else:\n        b += 1\n        b_success += description[1]\n\nprint([\"DEAD\", \"LIVE\"][a_success >= a*5])\nprint([\"DEAD\", \"LIVE\"][b_success >= b*5])\n\n", "n = int(input())\nq = 0\ne = 0\nw = 0\nr = 0\nfor i in range(n):\n    t, x, y = map(int, input().split())\n    if(t == 1):\n        q+=x\n        w+=10\n    else:\n        e+=x\n        r+=10\nif(q < w//2):\n    print(\"DEAD\")\nelse:\n    print(\"LIVE\")\nif(e < r//2):\n    print(\"DEAD\")\nelse:\n    print(\"LIVE\")", "n=int(input())\nna,nb,ca,cb=0,0,0,0 \nwhile n>0:\n\tx,y,z=map(int,input().split())\n\tif x==1:\n\t\tna+=10\n\t\tca+=y\n\telse:\n\t\tnb+=10\n\t\tcb+=y\n\tn=n-1\nif ca*2>=na:\n\tprint('LIVE')\nelse:\n\tprint('DEAD')\n\nif cb*2>=nb:\n\tprint('LIVE')\nelse:\n\tprint('DEAD')", "def myprint(ca,na):\n\tif ca*2>=na:\n\t\tprint('LIVE')\n\telse:\n\t\tprint('DEAD')\n\nn=int(input())\nna,nb,ca,cb=0,0,0,0 \nwhile n>0:\n\tx,y,z=map(int,input().split())\n\tif x==1:\n\t\tna+=10\n\t\tca+=y\n\telse:\n\t\tnb+=10\n\t\tcb+=y\n\tn=n-1\nmyprint(ca,na)\nmyprint(cb,nb)", "n = int(input())\nsuccess = [0, 0]\ntotal = [0, 0]\nfor _ in range(n):\n\ti, x, y = map(int, input().split())\n\ttotal[i-1] += 10\n\tsuccess[i-1] += x\nfor i in range(2):\n\tprint(\"LIVE\" if success[i] * 2 >= total[i] else \"DEAD\")", "n = int(input())\na = [[0,0],[0,0]]\nfor i in range(n):\n    t,x,y = map(int, input().split())\n    a[t-1][0] += x\n    a[t-1][1] += 5\nif a[0][0] >= a[0][1]:\n    print('LIVE')\nelse:\n    print('DEAD')\nif a[1][0] >= a[1][1]:\n    print('LIVE')\nelse:\n    print('DEAD')", "# from dust i have come dust i will be\n\nn=int(input())\n\nax=0;bx=0\nay=0;by=0\n\nfor i in range(n):\n    t,x,y=list(map(int,input().split()))\n\n    if t==1:\n        ax+=x\n        ay+=y\n    else:\n        bx+=x\n        by+=y\n\nif ax>=(ax+ay)//2:\n    print('LIVE')\nelse:\n    print('DEAD')\n\nif bx>=(bx+by)//2:\n    print('LIVE')\nelse:\n    print('DEAD')\n"]