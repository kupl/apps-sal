["def solve(L, R):\n    res = 0\n    for i in range(32):\n        for j in range(32):\n            l = (L >> i) << i\n            r = (R >> j) << j\n            #print(l, r)\n            if l>>i&1==0 or r>>j&1==0:\n                continue\n            l -= 1<<i\n            r -= 1<<j\n            if l & r:\n                continue\n            lr = l ^ r\n            ma = max(i, j)\n            mi = min(i, j)\n            mask = (1<<ma)-1\n            p = bin(lr&mask).count(\"1\")\n            ip = ma - mi - p\n            res += 3**mi * 2**ip\n            #print(l, r, mi, ip, 3**mi * 2**ip)\n    return res\n\nT = int(input())\nfor _ in range(T):\n    l, r = list(map(int, input().split()))\n    print(solve(r+1, r+1) + solve(l, l) - solve(l, r+1) * 2)\n", "def g( a , b ):\n    cur = 1\n    res = 0\n    ze = 0\n    while cur <= b:\n        if b & cur:\n            b ^= cur\n            if a & b == 0:\n                res += ( 1 << ze )\n        if a & cur == 0:\n            ze = ze + 1\n        cur <<= 1\n    return res\n\ndef f( a , b ):\n    res = 0\n    if a == b:\n        return 0\n    if a == 0:\n        return 2 * b - 1 + f( 1 , b )\n    if a & 1:\n        res = res + 2 * ( g( a , b ) - g( a , a ) )\n        a = a + 1\n    if b & 1:\n        res = res + 2 * ( g( b - 1 , b ) - g( b - 1 , a ) )\n    return 3 * f( a >> 1 , b >> 1 ) + res\n\nt = int(input())\n\nwhile t > 0:\n    t = t - 1\n    l , r = map(int , input().split())\n    print( f( l , r + 1 ) )", "def g( a , b ):\n    cur = 1\n    res = 0\n    ze = 0\n    while cur <= b:\n        if b & cur:\n            b ^= cur\n            if a & b == 0:\n                res += ( 1 << ze )\n        if a & cur == 0:\n            ze = ze + 1\n        cur <<= 1\n    return res\n \ndef f( a , b ):\n    res = 0\n    if a == b:\n        return 0\n    if a == 0:\n        return 2 * b - 1 + f( 1 , b )\n    if a & 1:\n        res = res + 2 * ( g( a , b ) - g( a , a ) )\n        a = a + 1\n    if b & 1:\n        res = res + 2 * ( g( b - 1 , b ) - g( b - 1 , a ) )\n    return 3 * f( a >> 1 , b >> 1 ) + res\n \nt = int(input())\n \nwhile t > 0:\n    t = t - 1\n    l , r = map(int , input().split())\n    print( f( l , r + 1 ) )", "\ndef get_bin (a):\n    nums=[]\n    for i in range (32):\n        if ((1<<i)&a):\n            nums.append(1)\n        else:\n            nums.append(0)\n    \n    while(len(nums)>0 and nums[-1]==0):\n        nums.pop()\n    \n    return nums\n\ndp={}\ndef get_num (a, b):\n    nonlocal dp\n    if ((a,b) in dp):\n        return dp[(a,b)]\n    if (a < 0 or b < 0):\n        return 0 \n    if (a == 0 and b == 0):\n        return 1\n    \n    a_bin = get_bin(a)\n    b_bin = get_bin(b)\n    \n    if(b>a):\n        a_bin,b_bin=b_bin,a_bin\n        a,b=b,a\n    \n    if (len(a_bin)>len(b_bin)):\n        big_bit = 1 << (len(a_bin) - 1)\n        to_ret=((get_num(big_bit-1,b) + get_num(a-big_bit, b)))\n        dp[(a,b)]=to_ret\n        return to_ret\n    \n    if(sum(a_bin)==len(a_bin) and sum(b_bin)==len(b_bin)):\n        to_ret = pow(3, len(a_bin))\n        dp[(a,b)]=to_ret\n        return to_ret\n        \n    big_bit = 1 << (len(a_bin) - 1)\n    to_ret=(get_num(big_bit-1, b-big_bit) + get_num(a, big_bit-1))\n    dp[(a,b)]=to_ret\n    return to_ret\n    \n    \n        \n    \ntc = int(input(\"\"))\n\nfor i in range (int(tc)): \n    nums = input(\"\").split(' ')\n    \n    l = int(nums[0])\n    r = int(nums[1])\n    \n    ans = get_num(r, r) - 2 * get_num(r, l - 1) + get_num(l - 1, l - 1)\n\n    print(ans)\n", "def g( a , b ):\n    cur = 1\n    res = 0\n    ze = 0\n    while cur <= b:\n        if b & cur:\n            b ^= cur\n            if a & b == 0:\n                res += ( 1 << ze )\n        if a & cur == 0:\n            ze = ze + 1\n        cur <<= 1\n    return res\n \ndef f( a , b ):\n    res = 0\n    if a == b:\n        return 0\n    if a == 0:\n        return 2 * b - 1 + f( 1 , b )\n    if a & 1:\n        res = res + 2 * ( g( a , b ) - g( a , a ) )\n        a = a + 1\n    if b & 1:\n        res = res + 2 * ( g( b - 1 , b ) - g( b - 1 , a ) )\n    return 3 * f( a >> 1 , b >> 1 ) + res\n \nt = int(input())\n \nwhile t > 0:\n    t = t - 1\n    l , r = map(int , input().split())\n    print( f( l , r + 1 ) )", "def g( a , b ):\n    cur = 1\n    res = 0\n    ze = 0\n    while cur <= b:\n        if b & cur:\n            b ^= cur\n            if a & b == 0:\n                res += ( 1 << ze )\n        if a & cur == 0:\n            ze = ze + 1\n        cur <<= 1\n    return res\n \ndef f( a , b ):\n    res = 0\n    if a == b:\n        return 0\n    if a == 0:\n        return 2 * b - 1 + f( 1 , b )\n    if a & 1:\n        res = res + 2 * ( g( a , b ) - g( a , a ) )\n        a = a + 1\n    if b & 1:\n        res = res + 2 * ( g( b - 1 , b ) - g( b - 1 , a ) )\n    return 3 * f( a >> 1 , b >> 1 ) + res\n \nt = int(input())\n \nwhile t > 0:\n    t = t - 1\n    l , r = list(map(int , input().split()))\n    print( f( l , r + 1 ) )\n"]