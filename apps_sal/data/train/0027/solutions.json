["tests = int(input())\nfor test in range(tests):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    d = {}\n    for i in range(n):\n        s = 0\n        while a[i] % 2 == 0:\n            a[i] //= 2\n            s += 1\n        if a[i] in list(d.keys()):\n            d[a[i]] = max(s, d[a[i]])\n        else:\n            d[a[i]] = s\n    s = 0\n    for i in list(d.keys()):\n        s += d[i]\n    print(s)\n", "t=int(input())\nfor g in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  b=list()\n  for i in range(n):\n    while a[i]%2==0:\n      b.append(a[i])\n      a[i]=a[i]//2\n  b.sort()\n  count=1\n  for i in range(len(b)-1):\n    if b[i]!=b[i+1]:\n      count+=1\n  if len(b)==0:\n    print(0)\n  else:\n    print(count)\n", "t=int(input())\n\ndef power(n):\n    res=0\n    while n%2==0:\n        res+=1\n        n//=2\n    if n not in d:\n        d[n]=0\n    d[n]=max(d[n],res)\nfor i in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    maxx=0\n    d={}\n    for num in a:\n        power(num)\n    print(sum(list(d.values())))\n    # print(maxx)\n", "for _ in range(int(input())):\n\td = dict()\n\tN = int(input())\n\ta = list(map(int, input().split()))\n\tfor i in range(N):\n\t\tc = 0\n\t\ttmp = a[i]\n\t\twhile tmp % 2 != 1:\n\t\t\ttmp = tmp // 2\n\t\t\tc += 1\n\t\tif tmp in d:\n\t\t\td[tmp] = max(d[tmp], c)\n\t\telse:\n\t\t\td[tmp] = c\n\tres = 0\n\tfor i in list(d.keys()):\n\t\tres += d[i]\n\tprint(res)\n\n", "from collections import defaultdict\n\n\ndef f(n):\n    st = 0\n    while n % 2 == 0:\n        n //= 2\n        st += 1\n    return n, st\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    d = defaultdict(int)\n    for i in input().split():\n        el = int(i)\n        os, st = f(el)\n        d[os] = max(d[os], st)\n    s = 0\n    for el in list(d.values()):\n        s += el\n    print(s)\n", "t = int(input())\nfor j in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = set()\n    ans = 0\n    for i in range(n):\n        k = a[i]\n        while k % 2 == 0 and k not in s:\n            s.add(k)\n            k = k // 2\n            ans += 1\n    print(ans)\n", "t = int(input())\nfor g in range(t):\n    n = int(input())\n    st = set()\n    a = [int(i) for i in input().split()]\n    for i in range(n):\n        q = a[i]\n        while q % 2 == 0:\n            st.add(q)\n            q //= 2\n    print(len(st))\n", "def f(x):\n    tmp = x\n    z = 0\n    while tmp % 2 == 0:\n        tmp //= 2\n        z += 1\n    return [tmp, z]\n\nfor i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    sl = dict()\n    for x in a:\n        y, z = f(x)\n        if sl.get(y) == None:\n            sl[y] = z\n        else:\n            sl[y] = max(sl[y], z)\n    ans = 0\n    for x in sl.keys():\n        ans += sl[x]\n    print(ans)", "for q in range(int(input())):\n    n = int(input())\n    line = list(map(int, input().split()))\n    Q = dict()\n    for i in range(n):\n        l = 0\n        r = 100\n        while r - l > 1:\n            m = (l + r) // 2\n            if line[i] % (1 << m) == 0:\n                l = m\n            else:\n                r = m\n        f = line[i] // (1 << l)\n        if f in Q:\n            Q[f] = max(Q[f], l)\n        else:\n            Q[f] = l\n    Q = list(Q.items())\n    ans = 0\n    for a, b in Q:\n        ans += b\n    print(ans)\n    #print(Q)\n", "import heapq\nimport sys\ninput = lambda : sys.stdin.readline()\nfor i in range(int(input())):\n    n = int(input())\n    s = set()\n    h  = []\n    for i in map(int,input().split()):\n        if i%2==0:\n            if i in s:\n                continue\n            s.add(i)\n            heapq.heappush(h,-i)\n    ans = 0\n    while h:\n        i = -heapq.heappop(h)//2\n        ans+=1\n        if i % 2 == 0:\n            if i in s:\n                continue\n            s.add(i)\n            heapq.heappush(h, -i)\n\n    print(ans)", "t = int(input())\n\n\n\nfor _ in range(t):\n    used_q = set()\n    n = int(input())\n    nums = list(map(int,input().split(' ')))\n    for i in range(len(nums)):\n        q = nums[i]\n        while q % 2 == 0:\n            if q in used_q:\n                q = q // 2\n            else:\n                used_q.add(q)\n                q = q // 2\n    print(len(used_q))\n\n\n", "for _ in range(int(input())):\n    n = int(input())\n    A = list(map(int, input().split()))\n    dell = []\n    for i in range(n):\n        new = 0\n        while A[i] % 2 != 1:\n            A[i] //= 2\n            new += 1\n        dell.append([A[i], new])\n    dicter = {}\n    for el in dell:\n        if el[1] > dicter.get(el[0], -1):\n            dicter[el[0]] = el[1]\n    ans = 0\n    for el in dicter:\n        ans += dicter[el]\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = dict()\n    for j in range(n):\n        if a[j] % 2 == 0:\n            b[a[j]] = b.get(a[j], 0) + 1\n    k = 0\n    for key in b:\n        c = key\n        while c % 2 == 0:\n            k += 1\n            c = c // 2\n            if c in b.keys():\n                break\n    print(k)", "t=int(input())\nfor r in range(t):\n q=input()\n a=list(map(int,input().split()))\n d=dict()\n for w in a:\n  s=0\n  while w%2==0:\n   w//=2\n   s+=1\n  if w in list(d.keys()):\n   d[w]=max([d[w],s])\n  else:\n   d[w]=s\n e=0\n for w in list(d.keys()):\n  e+=d[w]\n print(e)\n", "import sys\nimport math\nimport heapq\n\ndef input():\n    return sys.stdin.readline().strip()\ndef iinput():\n    return int(input())\ndef tinput():\n    return input().split()\ndef rinput():\n    return list(map(int, tinput()))\ndef rlinput():\n    return list(rinput())\n\ndef main():\n    n, w, q, res = iinput(), set(), [], 0\n    for i in rinput():\n        if i % 2 == 0:\n            if i not in w:\n                w.add(i)\n                heapq.heappush(q, -i)\n    while q:\n        i = -heapq.heappop(q) // 2\n        res += 1\n        if i % 2 == 0:\n            if i not in w:\n                w.add(i)\n                heapq.heappush(q, -i)\n\n    print(res)\n    \nfor i in range(iinput()):\n    main()\n", "for __ in range(int(input())):\n    n = int(input())\n    ar = list(map(int, input().split()))\n    ar1 = []\n    ar2 = []\n    for elem in ar:\n        num = 0\n        while elem % 2 == 0:\n            elem //= 2\n            num += 1\n        ar1.append(num)\n        ar2.append(elem)\n    ar3 = []\n    for i in range(n):\n        ar3.append([ar2[i], ar1[i]])\n    ar3.sort()\n    i = 1\n    j = 1\n    num = 1\n    ans = sum(ar1)\n    while i < n:\n        while j < n and ar3[j][0] == ar3[j - 1][0]:\n            j += 1\n        times = j - i\n        prev_val = 0\n        for h in range(i - 1, min(j, n)):\n            ans -= times * (ar3[h][1] - prev_val)\n            times -= 1\n            prev_val = ar3[h][1]\n        i = j + 1\n        j = i\n    print(ans)", "a = int(input())\nfor i in range(a):\n    s1 = set()\n    ans = 0\n    l = input()\n    now = input().split()\n    for i in now:\n        k =int(i) \n        while k%2==0 and k not in s1:\n            s1.add(k)\n            k=k//2\n    print(len(s1))", "def main():\n    m = int(input())\n\n    for i in range(m):\n        n = int(input())\n        nums = map(int, input().split())\n        arr = {}\n        for j in nums:\n            base = j\n            step = 0\n            while not base & 1:\n                base >>= 1\n                step += 1\n\n            if not base in arr:\n                arr[base] = step\n            else:\n                arr[base] = max(arr[base], step)\n\n        print(sum(arr.values()))\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    m = list(map(int, input().split()))\n    d = {}\n    for el1 in m:\n        el = el1\n        c = 0\n        while (el%2==0):\n            el//=2\n            c+=1\n        if (el in list(d.keys())):\n            d[el] = max(d[el], c)\n        else:\n            d[el] = c\n    s = 0\n    for el in d:\n        s+=d[el]\n    ans.append(s)\n\nfor el in ans:\n    print(el)\n", "t=int(input())\nfor j in range(t):\n    n=int(input())\n    a=(list(map(int,input().split())))\n    a.sort()\n    s=set()\n    s1=set(a)\n    ans=0\n    l=n\n    while l>0:\n        now=a.pop()\n        l-=1\n        if now not in s and now%2==0:\n            s.add(now)\n            ans+=1\n            if now//2 not in s1:\n                s1.add(now//2)\n                a.append(now//2)\n                l+=1\n    print(ans)\n    \n", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = []\n    for j in range(0, n):\n        if a[j] % 2 == 0:\n            num = 0\n            k = a[j]\n            while k % 2 == 0:\n                k //= 2\n                num += 1\n            b.append([k, num])\n    b.sort()\n    ans = 0\n    length = len(b)\n    for q in range(0, length - 1):\n        if b[q][0] != b[q + 1][0]:\n            ans += b[q][1]\n    if length != 0:\n        print(ans + b[length - 1][1])\n    else:\n        print(ans)\n", "k = int(input())\n\ndef absolute() :\n    c = dict()\n    m = 0\n    for i in [int(x) for x in input().split()] :\n        q = 0\n        if i % 2 != 0 : continue\n        while i % 2 == 0 :\n            i //= 2\n            q += 1\n        if c.get(i, 0) < q :\n            m += q - c.get(i, 0)\n            c[i] = q\n    #print(c)\n    return m\n        \n\nfor j in range(k) :\n    input()\n    print(absolute())\n", "def ck(a):\n    ans=0\n    while a%2==0:\n        a=a//2\n        ans+=1\n    return([a,ans])\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    c={}\n    for i in range(n):\n        x,y=ck(a[i])\n        if c.get(x)==None:\n            c[x]=y\n        elif c.get(x)<y:\n            c[x]=y\n    ans=sum(c.values())\n    print(ans)\n", "def res(e):\n    ans = 0\n    e1 = int(e)\n    while e1 % 2 == 0:\n        e1 //= 2\n        ans += 1\n    return 2 ** ans\n\n\nfor i in range(int(input())):\n    n = int(input())\n    s = list([x for x in list(map(int, input().split())) if x % 2 == 0])\n    if len(s) == 0:\n        print(0)\n    else:\n        temp = list([x // res(x) for x in s])\n        ans = 0\n        s1 = set()\n        while temp != s:\n            for i1 in range(len(s)):\n                if temp[i1] == s[i1]:\n                    continue\n                elif temp[i1] not in s1:\n                    s1.add(temp[i1])\n                    ans += 1\n                    temp[i1] *= 2\n                elif temp[i1] in s1:\n                    temp[i1] *= 2\n        print(ans)\n\n\n", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    data = list(map(int, input().split()))\n    d = dict()\n    for j in range(0, n):\n        a = data[j]\n        count = 0\n        while a % 2 == 0:\n            a = a // 2\n            count += 1\n        d[a] = max(d.get(a, 0), count)\n    print(sum(d.values()))", "t = int(input())\nfor i in range(0, t):\n    n = int(input())\n    data = list(map(int, input().split()))\n    d = dict()\n    for j in range(0, n):\n        a = data[j]\n        count = 0\n        while a % 2 == 0:\n            a = a // 2\n            count += 1\n        d[a] = max(d.get(a, 0), count)\n    print(sum(d.values()))\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    s = set()\n    d = {}\n    for a in l:\n        j = 0\n        while (a % 2) == 0:\n            a = a // 2\n            j += 1\n        s.add(a)\n        if a in d:\n            if d[a] < j:\n                d[a] = j\n        else:\n            d[a] = j\n    p = 0\n    for q in d:\n        p += d[q]\n    print(p)\n", "from sys import stdin as s\nfor i in range(int(s.readline())):\n    n=int(s.readline())\n    l=sorted([i for i in set(map(int,s.readline().split())) if i%2==0],reverse=True)\n    t=set()\n    c=0\n    for i in l:\n        if i not in t:\n            t.add(i)\n            while i%2==0:\n                i//=2\n                t.add(i)\n                c+=1\n    print(c)", "from collections import Counter\ndef primfacs(n):\n    if n % 2 == 0:\n        primfac = [0,0]\n    else:\n        primfac = [0,0]\n    while n % 2 == 0:\n        n = n / 2\n        primfac[0] += 1\n    primfac[1] = n\n    return primfac\n\n\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int, input().split()))\n    Ost = []\n    for j in range(n):\n        Ost.append(primfacs(A[j]))\n    Ost.sort()\n    d = {}\n    for j in range(len(Ost)):\n        d[Ost[j][1]] = Ost[j][0]\n    print(sum(list(d.values())))", "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\ta = set(map(int, input().split()))\n\t#print(a)\n\teven_numbers = {x for x in a if x % 2 == 0}\n\tused_numbers = set()\n\tk = 0\n\tfor x in even_numbers:\n\t\twhile x % 2 == 0 and x not in used_numbers:\n\t\t\tused_numbers.add(x)\n\t\t\tx //= 2\n\t\t\tk += 1\n\tprint(k)\n", "from collections import Counter\nimport heapq\n\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    rep = Counter()\n    ans = 0\n\n    heap = []\n    for i in range(len(a)):\n        rep[a[i]] += 1\n        if rep[a[i]] == 1:\n            heapq.heappush(heap, -a[i])\n\n    while heap:\n        x = -heapq.heappop(heap)\n\n        if x % 2 == 0:\n            dx = x // 2\n            if rep[dx] == 0:\n                heapq.heappush(heap, -dx)\n                rep[dx] = 1\n            else:\n                rep[dx] += rep[x]\n\n            ans += 1\n\n    print(ans)\n", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    a=list([bin(int(x))[2:] for x in input().split()])\n    d=dict()\n    for i in a:\n        ir=i.rfind(\"1\")\n        c=len(i)-ir-1\n        raw=int(i[:ir+1],base=2)\n        d[raw]=max(d.get(raw,c),c)\n    print(sum(d.values()))\n", "def factorize(x):\n    tmp = x\n    cnt = 0\n    while (tmp % 2 == 0):\n        tmp //= 2\n        cnt += 1\n    return tmp, cnt\n\nn = int(input())\nfor i in range(n):\n    k = int(input())\n    x = dict()\n    cnt = 0\n    tmp = list(map(int, input().split()))\n    for j in tmp:\n        g, v = factorize(j)\n        try:\n            x[g] = max(x[g], v)\n        except:\n            x[g] = v\n    for c in list(x.keys()):\n        cnt += x[c]\n    print(cnt)\n        \n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(j) for j in input().split()]\n    used = set()\n    for j in a:\n        if j%2==1:\n            continue\n        while j%2==0 and j not in used:\n            used.add(j)\n            j /= 2\n    print(len(used))", "t=int(input())\nfor _ in range(t):\n        n=int(input())\n        a=[int (i) for i in  input().split()]\n        d=dict()\n        su=0\n        for i in a:\n                k=0\n                while i%2==0:\n                        i=i//2\n                        k+=1\n                if i not in d:\n                        d[i]=k\n                else:\n                        d[i]=max(d[i],k)\n        for i in list(d.values()):\n                su+=i\n        print(su)\n                \n", "t = int(input())\nfor i in range(t):\n    ans = 0\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    for j in range(n):\n        count = 0\n        while a[j] % 2 == 0:\n            a[j] = a[j] // 2\n            count += 1\n        a[j] = [a[j], count]\n        \n    a.sort()\n    \n    j = 0\n    while j != n:\n        m = a[j][1]\n        \n        while j + 1 < n and a[j][0] == a[j + 1][0]:\n            m = max([a[j][1], a[j + 1][1]])\n            j+=1\n        j+=1\n        ans += m\n    print(ans)\n", "n = int(input())\n\nfor i in range(n):\n    answer = 0\n    d = set()\n    m = int(input())\n    arr = [int(x) for x in input().split()]\n    for j in arr:\n        if j % 2 == 0:\n            if j not in d:\n                d.add(j)\n    s = list(d)\n    s.sort(reverse=True)\n\n    for j in s:\n        ch = j // 2\n        answer += 1\n        while ch % 2 == 0:\n            if ch not in d:\n                ch //= 2\n                answer += 1\n            else:\n                break\n    \n    print(answer)", "t = int(input())\nans_l = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    ar = set()\n    for i in a:\n        if i % 2 == 0:\n            x = i\n            ar.add(x)\n            while x % 2 == 0:\n                ar.add(x)\n                x //= 2\n    ans_l.append(len(ar))\nprint(*ans_l, sep='\\n')\n", "a = int(input())\nfor i in range(a):\n    f = int(input())\n    k = list(map(int, input().split()))\n    l = set()\n    ch = 0\n    lol = 0\n    for i in range(len(k)):\n        lol = k[i]\n        while lol % 2 == 0:\n            l.add(lol)\n            lol /= 2\n    print(len(l))\n", "def razl(a):\n    if a % 2 == 0:\n        r = [0, 0]\n    else:\n        r = [0, 0]\n    while a % 2 == 0:\n        a = a / 2\n        r[0] += 1\n    r[1] = a\n    return r\n\n\nans = []\nfor i in range(int(input())):\n    a = int(input())\n    b = list(map(int, input().split()))\n    c = []\n    for j in range(a):\n        c.append(razl(b[j]))\n    c.sort()\n    d = {}\n    for j in range(len(c)):\n        d[c[j][1]] = c[j][0]\n    ans.append(sum(list(d.values())))\nfor i in ans:\n    print(i)", "def f(n):\n    minn = 0\n    maxx = 30\n    mid = 10\n    while mid != minn:\n        if n // (2 ** mid) == n / (2 ** mid):\n            minn = mid\n            mid = (minn + maxx) // 2\n        else:\n            maxx = mid\n            mid = (minn + maxx) // 2\n    return mid\n\n\nt = int(input())\nfor i in range(t):\n    d = dict()\n    n = int(input())\n    a = set(map(int, input().split()))\n    for j in a:\n        p = f(j)\n        if j // (2 ** p) in d:\n            if p > d[j // (2 ** p)]:\n                d[j // (2 ** p)] = p\n        else:\n            d[j // (2 ** p)] = p\n    print(sum(d.values()))\n", "def ans():\n\tnonlocal lst\n\td = dict()\n\tfor i in lst:\n\t\ts2, delit = st2(i)\n\t\tif delit not in d:\n\t\t\td[delit] = s2\n\t\t\tcontinue\n\t\tif d[delit] < s2:\n\t\t\td[delit] = s2\n\treturn sum(d.values())\ndef st2(num):\n\tc = 0\n\twhile (num%2==0) and num != 0:\n\t\tnum = num >> 1\n\t\tc += 1\n\treturn [c, num]\nlst = []\nfor i in range(int(input())):\n\tt = int(input())\n\tlst = list(map(int, input().split()))\n\tprint(ans())", "t = int(input())\nanswers = [0] * t\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    arr = [[] for _ in range(n)]\n    ans = 0\n    for j in range(n):\n        pow1 = 0\n        cur = a[j]\n        while cur % 2 == 0:\n            cur //= 2\n            pow1 += 1\n        arr[j] = [cur, pow1]\n    arr.sort(reverse=True)\n    cur_nech = -1\n    for j in range(n):\n        if arr[j][0] != cur_nech:\n            ans += arr[j][1]\n            cur_nech = arr[j][0]\n    answers[i] = ans\nprint(*answers, sep='\\n')\n"]