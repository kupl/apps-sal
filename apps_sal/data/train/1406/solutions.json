["# cook your dish here\nfrom sys import stdin, stdout\n\nfor _ in range(int(stdin.readline())):\n n, q = list(map(int, stdin.readline().split()))\n arr = list(map(int, stdin.readline().split()))[:n]\n od = ev = 0\n for i in arr:\n  if bin(i).count('1')%2==0:\n   ev += 1\n  else:\n   od += 1\n for _ in range(q):\n  p = int(stdin.readline())\n  if bin(p).count('1')%2==0:\n   stdout.write(str(ev) + \" \" + str(od) + \"\\n\")\n  else:\n   stdout.write(str(od) + \" \" + str(ev) + \"\\n\")\n\n", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n a = list(map(int,input().split()))\n even,odd = 0,0\n for i in range(n):\n  count_of_q = bin(a[i]).count('1')\n  if count_of_q%2==0:\n   even+=1\n  else:\n   odd+=1\n for i in range(k):\n  q = int(input())\n  count_of_i = bin(q).count('1')\n  if count_of_i%2==0:\n   print(even,odd)\n  else:\n   print(odd,even)\n", "# cook your dish here\nfrom sys import stdin, stdout\n\n##Taken from geeksforgeeks\nBitsSetTable256 = [0] * 256\n\ndef initialize(): \n BitsSetTable256[0] = 0\n for i in range(256): \n  BitsSetTable256[i] = (i & 1) + BitsSetTable256[i // 2] \n\ndef countSetBits(n): \n return (BitsSetTable256[n & 0xff] +\n   BitsSetTable256[(n >> 8) & 0xff] +\n   BitsSetTable256[(n >> 16) & 0xff] +\n   BitsSetTable256[n >> 24]) \n\ninitialize()\n\nfor _ in range(int(stdin.readline())):\n N , Q = list(map(int, stdin.readline().split(' ')))\n inpList = list(map(int, stdin.readline().split(' ')))\n queryList = []\n resList = []\n even = odd = 0\n for i in inpList:\n  temp = 1^i\n  setBits = countSetBits(temp)\n  if setBits %2 == 0:\n   even += 1\n  else:\n   odd += 1\n for i in range(Q):\n  q = int(stdin.readline())\n  setBits = countSetBits(q)\n  if setBits%2 != 0:\n   stdout.write(\"{} {}\\n\".format(even,odd))\n  else:\n   stdout.write(\"{} {}\\n\".format(odd,even))\n   \n #stdout.write(\"{} {} {} {} \".format(N,Q,inpList,*queryList))\n # cook your dish here\n", "# cook your dish here\nfrom sys import stdin, stdout\nt=int(input())\nfor i in range(t):\n n,q=map(int,stdin.readline().split())\n a=list(map(int,stdin.readline().split()))\n even,odd=0,0\n for j in range(n):\n  count=(bin(a[j]).count(\"1\"))\n  if count%2==0: \n   even+=1\n  else:   \n   odd+=1\n\n for j in range(q):\n  m=int(stdin.readline())\n  temp=bin(m).count(\"1\")\n  temp1,temp2=even,odd\n  if temp%2==0:\n   temp1,temp2=even,odd\n  else: \n   temp1,temp2=odd,even\n  stdout.write(str(temp1)+\" \"+str(temp2)) \n  stdout.write(\"\\n\")", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,q=list(map(int,input().split()))\n a=list(map(int, input().split()))\n even,odd=0,0\n for j in range(n):\n  count=(bin(a[j]).count(\"1\"))\n  if count%2==0: \n   even = even + 1\n  else:   \n   odd = odd + 1\n\n for j in range(q):\n  m=int(input())\n  g=bin(m).count(\"1\")\n  a,b=even,odd\n  if g%2==0:\n   a,b=even,odd\n  else: \n   a,b=odd,even\n  print(a,b)\n", "t=int(input())\nfor i in range(t):\n n,q=list(map(int,input().split()))\n a=list(map(int,input().split()))\n even,odd=0,0\n for j in range(n):\n  count=(bin(a[j]).count(\"1\"))\n  if count%2==0: \n   even+=1\n  else:   \n   odd+=1\n\n for j in range(q):\n  m=int(input())\n  temp=bin(m).count(\"1\")\n  temp1,temp2=even,odd\n  if temp%2==0:\n   temp1,temp2=even,odd\n  else: \n   temp1,temp2=odd,even\n  print(temp1,temp2)\n", "for _ in range(int(input())):\n n,q = list(map(int,input().split()))\n a = list(map(int,input().split()))\n even,odd=0,0\n for j in range(n):\n  count=(bin(a[j]).count(\"1\"))\n  if count%2==0: \n   even+=1\n  else:   \n   odd+=1\n\n for j in range(q):\n  m=int(input())\n  temp=bin(m).count(\"1\")\n  temp1,temp2=even,odd\n  if temp%2==0:\n   temp1,temp2=even,odd\n  else: \n   temp1,temp2=odd,even\n  print(temp1,temp2)\n", "for _ in range(int(input())):\n n,q = list(map(int,input().split()))\n a = list(map(int,input().split()))\n even = 0\n odd = 0\n for i in range(n):\n  c = bin(a[i]).count(\"1\")\n  if c%2 == 0:\n   even += 1\n  else:\n   odd +=1\n for i in range(q):\n  p = int(input())\n  c = bin(p).count(\"1\")\n  e,o = even,odd\n  if c%2 == 0:\n   e,o =even,odd\n  else:\n   e,o = odd,even\n  print(e,o)\n  \n", "# cook your dish here\nfor _ in range(int(input())):\n n,q=map(int,input().split())\n a=list(map(int,input().split()))\n even,odd=0,0\n for i in range(n):\n  c=bin(a[i]).count('1')\n  if c%2==0:\n   even+=1 \n  else:\n   odd+=1 \n for j in range(q):\n  m=int(input())\n  t=bin(m).count('1')\n  temp1,temp2=even,odd\n  if t%2==0:\n   temp1,temp2=even,odd\n  else:\n   temp1,temp2=odd,even\n  print(str(temp1)+\" \"+str(temp2))", "# cook your dish here\nfrom sys import stdin, stdout\nt=int(input())\nfor i in range(t):\n n,q=list(map(int,stdin.readline().split()))\n a=list(map(int,stdin.readline().split()))\n even,odd=0,0\n for j in range(n):\n  count=(bin(a[j]).count(\"1\"))\n  if count%2==0: \n   even+=1\n  else:   \n   odd+=1\n\n for j in range(q):\n  m=int(stdin.readline())\n  temp=bin(m).count(\"1\")\n  temp1,temp2=even,odd\n  if temp%2==0:\n   temp1,temp2=even,odd\n  else: \n   temp1,temp2=odd,even\n  stdout.write(str(temp1)+\" \"+str(temp2)) \n  stdout.write(\"\\n\")\n", "Bit= [0] * 256\ndef initialize(): \n Bit[0] = 0\n for i in range(256): \n  Bit[i] = (i & 1) + Bit[i // 2] \ndef countsetbits(n): \n return (Bit[n & 0xff] +\n   Bit[(n >> 8) & 0xff] +\n   Bit[(n >> 16) & 0xff] +\n   Bit[n >> 24]) \ninitialize()\nt=int(input())\nfor _ in range(t):\n n,q=map(int, input().split())\n a=list(map(int, input().split()))\n e=0\n o=0\n for i in a:\n  k=countsetbits(i)\n  if (k&1)==0:\n   e+=1\n  else:\n   o+=1\n for j in range(q):\n  c=0\n  n1=int(input())\n  c=countsetbits(n1)\n  if c%2==0:\n   print(e,o)\n  else:\n   print(o,e)", "Bit= [0] * 256\ndef initialize(): \n Bit[0] = 0\n for i in range(256): \n  Bit[i] = (i & 1) + Bit[i // 2] \ndef countsetbits(n): \n return (Bit[n & 0xff] +\n   Bit[(n >> 8) & 0xff] +\n   Bit[(n >> 16) & 0xff] +\n   Bit[n >> 24]) \ninitialize()\nt=int(input())\nfor _ in range(t):\n n,q=map(int, input().split())\n a=list(map(int, input().split()))\n e=0\n o=0\n for i in a:\n  k=countsetbits(i)\n  if (k&1)==0:\n   e+=1\n  else:\n   o+=1\n for j in range(q):\n  c=0\n  n1=int(input())\n  c=countsetbits(n1)\n  if c%2==0:\n   print(e,o)\n  else:\n   print(o,e)", "from sys import stdin,stdout\ndef main():\n t=int(stdin.readline())\n for i in range(t):\n  list2=[]\n  n,q=map(int,stdin.readline().split()) \n  a=list(map(int,stdin.readline().split()))\n  for i in range(len(a)):                     \n   list2.append((bin(a[i])).count(\"1\"))\n  o=0\n  e=0\n  for i in range(len(list2)):\n    if((list2[i]%2)==0):\n     e+=1\n    else:\n     o+=1\n  for i in range(q):                          \n   b=0\n   b=int(stdin.readline())\n   e1=0\n   e1=bin(b).count(\"1\")\n   if(e1%2==0):\n    print(e,end=\" \")\n    print(o)\n   else:\n    print(o,end=\" \")\n    print(e)\ndef __starting_point():\n main()\n#a=5\n#str1=\"\"\n#str1+=bin(a)\n#print(str1[2:])\n\n__starting_point()", "from sys import stdin,stdout\ndef main():\n t=int(stdin.readline())\n for i in range(t):\n  list2=[]\n  n,q=map(int,stdin.readline().split()) \n  a=list(map(int,stdin.readline().split()))\n  for i in range(len(a)):                     \n   list2.append((bin(a[i])).count(\"1\"))\n  for i in range(q):                          \n   b=0\n   b=int(stdin.readline())\n   e=0\n   o=0\n   for i in range(len(list2)):\n    if((list2[i]%2)==0):\n     e+=1\n    else:\n     o+=1\n   e1=0\n   e1=bin(b).count(\"1\")\n   if(e1%2==0):\n    print(e,end=\" \")\n    print(o)\n   else:\n    print(o,end=\" \")\n    print(e)\ndef __starting_point():\n main()\n#a=5\n#str1=\"\"\n#str1+=bin(a)\n#print(str1[2:])\n\n__starting_point()", "\nimport sys\n\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\n\nans = []\nfor _ in range(T):\n n ,q = map(int ,sys.stdin.readline().split())\n x = list(map( int ,sys.stdin.readline().split()))\n\n \n dic = defaultdict(int)\n \n for ele in x:\n  if(bin(ele).count('1') %2 == 0):\n   dic['even'] += 1\n  else:\n   dic['odd'] += 1\n  \n for o in range(q):\n  l = int(sys.stdin.readline())\n  \n  \n  if(bin(l).count('1') % 2 != 0):\n   print(dic['odd'],dic['even'])\n  else:\n   print(dic['even'],dic['odd'])", "# # cook your dish here\n# import sys\n# from sys import stdin, stdout\n# for _ in range(int(stdin.readline())):\n#     N, Q = map(int, stdin.readline().rstrip().split())\n#     Num = list(map(int, stdin.readline().split()))\n#     for _ in range(Q):\n#         P = int(stdin.readline())\n#         x = bin(P).count('1')\n#         even = 0\n#         for i in range(len(Num)):\n#             y = bin(Num[i]).count('1')\n#             if x % 2 == 0:\n#                 if y % 2 == 0:\n#                     even += 1\n#             else:\n#                 if y % 2 != 0:\n#                     even += 1\n#         stdout.write(str(even) + \" \" + str(N-even))\n\nimport sys\n\nT = int(sys.stdin.readline())\nfrom collections import defaultdict\n\nans = []\nfor _ in range(T):\n n ,q = list(map(int ,sys.stdin.readline().split()))\n x = list(map( int ,sys.stdin.readline().split()))\n\n \n dic = defaultdict(int)\n \n for ele in x:\n  if(bin(ele).count('1') %2 == 0):\n   dic['even'] += 1\n  else:\n   dic['odd'] += 1\n  \n for o in range(q):\n  l = int(sys.stdin.readline())\n  \n  \n  if(bin(l).count('1') % 2 != 0):\n   print(dic['odd'],dic['even'])\n  else:\n   print(dic['even'],dic['odd'])\n", "t=int(input())\nfor i in range(t):\n num_to_bits =[0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4]\n def countSetBitsRec(num):\n  nibble = 0\n  if(0 == num):\n   return num_to_bits[0] \n  nibble = num & 0xf \n  return num_to_bits[nibble] + countSetBitsRec(num >> 4)\n n,q=input().split()\n n=int(n)\n q=int(q)\n A=[]\n A=list(map(int,input().split()))\n od=0\n ev=0\n for j in range(n):\n  num=A[j]\n  co=countSetBitsRec(num)\n  if(co%2==0):\n   ev+=1\n  else:\n   od+=1\n for j in range(q):\n  p=int(input())\n  co=countSetBitsRec(p)\n  if(co%2==0):\n   print(ev,end=' ')\n   print(od)\n  else:\n   print(od,end=' ')\n   print(ev)"]