["# cook your dish here\nimport sys\nimport math\nfrom collections import Counter\nfrom collections import OrderedDict \ndef inputt():\n    return sys.stdin.readline().strip()\ndef printt(n):\n    sys.stdout.write(str(n)+'\\n')\ndef listt():\n    return [int(i) for i in inputt().split()]\ndef gcd(a,b): \n   return math.gcd(a,b) \n \ndef lcm(a,b): \n    return (a*b) / gcd(a,b) \nfrom collections import defaultdict   \n\ndef find_sub_string(str): \n    str_len = len(str) \n      \n    # Count all distinct characters. \n    dist_count_char = len(set([x for x in str])) \n  \n    ctr, start_pos, start_pos_index, min_len = 0, 0, -1, 9999999999\n    curr_count = defaultdict(lambda: 0) \n    for i in range(str_len): \n        curr_count[str[i]] += 1\n \n        if curr_count[str[i]] == 1: \n            ctr += 1\n  \n        if ctr == dist_count_char: \n            while curr_count[str[start_pos]] > 1: \n                if curr_count[str[start_pos]] > 1: \n                    curr_count[str[start_pos]] -= 1\n                start_pos += 1\n  \n            len_window = i - start_pos + 1\n            if min_len > len_window: \n                min_len = len_window \n                start_pos_index = start_pos \n    return str[start_pos_index: start_pos_index + min_len]\nt= int(inputt())\nfor _ in range(t):\n    j=[]\n    str1 =inputt()\n    s=find_sub_string(str1) \n    for i in s:\n        j.append(abs(97-ord(i))+1)\n    st = [str(i) for i in j]\n    print(''.join(st))     \n\n\n", "# https://www.geeksforgeeks.org/smallest-window-contains-characters-string/\r\nfrom collections import defaultdict\r\n\r\nMAX_CHARS = 256\r\n\r\ndef solve(strr):\r\n    n = len(strr)\r\n\r\n    dist_count = len(set([x for x in strr]))\r\n\r\n    curr_count = defaultdict(lambda: 0)\r\n    count = 0\r\n    start = 0\r\n    min_len = n\r\n\r\n    start_index = 0\r\n\r\n    for j in range(n):\r\n        curr_count[strr[j]] += 1\r\n\r\n        if curr_count[strr[j]] == 1:\r\n            count += 1\r\n\r\n        if count == dist_count:\r\n            while curr_count[strr[start]] > 1:\r\n                if curr_count[strr[start]] > 1:\r\n                    curr_count[strr[start]] -= 1\r\n\r\n                start += 1\r\n\r\n            len_window = j - start + 1\r\n\r\n            if min_len > len_window:\r\n                min_len = len_window\r\n                start_index = start\r\n\r\n    return str(strr[start_index: start_index + min_len])\r\n\r\nfor _ in range(int(input())):\r\n    x = solve(input().strip())\r\n\r\n    print(''.join(str(ord(c) - ord('a') + 1) for c in x))\r\n"]