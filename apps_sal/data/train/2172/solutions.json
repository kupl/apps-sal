["def prime(n):\n    m = int(n ** 0.5) + 1\n    t = [1] * (n + 1)\n    for i in range(3, m):\n        if t[i]: t[i * i :: 2 * i] = [0] * ((n - i * i) // (2 * i) + 1)\n    return [2] + [i for i in range(3, n + 1, 2) if t[i]]\n\ndef gcd(a, b):\n    c = a % b\n    return gcd(b, c) if c else b\n\np = prime(31650)\ndef g(n):\n    m = int(n ** 0.5)\n    for j in p:\n        if n % j == 0: return True\n        if j > m: return False\n\ndef f(n):\n    a, b = n, n + 1\n    while g(a): a -= 1\n    while g(b): b += 1\n    p, q = (b - 2) * a + 2 * (n - b + 1), 2 * a * b\n    d = gcd(p, q)\n    print(str(p // d) + '/' + str(q // d))\n\nfor i in range(int(input())): f(int(input()))\n", "T = int( input() )\n\n#for every prime x\n#(b-a)/ab\n#1/a-1/b\n\nMAX = 33000\n\nbePrime = [0] * MAX;\nprimNum = []\n\nfor j in range(2, MAX):\n    if bePrime[j] == 0: \n        primNum.append( j )\n        i = j\n        while i < MAX:\n            bePrime[i] = 1\n            i = i + j\n\ndef isPrime( a ):\n    for j in primNum:\n        if j >= a:\n            return True\n        if a % j == 0:\n            return False\n    return True\n\ndef gcd( a, b ):\n    if b == 0:\n        return a\n    return gcd( b, a % b );\n\nwhile T > 0:\n    num = 0;\n    n = int( input() )\n\n    m = n\n    while isPrime(m) == False:\n        m -= 1\n    while isPrime(n + 1) == False:\n        n += 1\n        num += 1\n\n    a = n - 1\n    b = 2 * ( n+1 )\n\n    a = a * (n+1) * m - num * b\n    b = b * (n+1) * m\n\n    g = gcd( a, b)\n    a //= g\n    b //= g\n\n\n    print( '{0}/{1}'.format( a, b  ) )\n    T -= 1;\n", "def prime(n):\n    m = int(n ** 0.5) + 1\n    t = [1] * (n + 1)\n    for i in range(3, m):\n        if t[i]: t[i * i :: 2 * i] = [0] * ((n - i * i) // (2 * i) + 1)\n    return [2] + [i for i in range(3, n + 1, 2) if t[i]]\n\ndef gcd(a, b):\n    c = a % b\n    return gcd(b, c) if c else b\n\np = prime(31650)\ndef g(n):\n    m = int(n ** 0.5)\n    for j in p:\n        if n % j == 0: return True\n        if j > m: return False\n\ndef f(n):\n    a, b = n, n + 1\n    while g(a): a -= 1\n    while g(b): b += 1\n    p, q = (b - 2) * a + 2 * (n - b + 1), 2 * a * b\n    d = gcd(p, q)\n    print(str(p // d) + '/' + str(q // d))\n\nfor i in range(int(input())): f(int(input()))", "def isPrime(n):\n    i = 2\n    while i * i <= n:\n        if n % i == 0:\n            return False\n        i += 1\n    return True\n\ndef prevPrime(n):\n    while not isPrime(n):\n        n -= 1\n    return n\n\ndef nextPrime(n):\n    n += 1\n    while not isPrime(n):\n        n += 1\n    return n\n\ndef gcd(a, b):\n    while(a):\n        b %= a\n        a, b = b, a\n    return b;\n\ndef solve():\n    n = int(input())\n    prev = prevPrime(n);\n    next = nextPrime(n);\n    num1 = prev - 2;\n    den1 = prev * 2;\n    g = gcd(num1, den1);\n    num1 //= g;\n    den1 //= g;\n    num2 = n - prev + 1;\n    den2 = prev * next;\n    g = gcd(num2, den2);\n    num2 //= g;\n    den2 //= g;\n    g = gcd(num1 * den2 + num2 * den1, den1 * den2);\n    x = (num1 * den2 + num2 * den1) // g;\n    y = den1 * den2 // g;\n    print('{}/{}'.format(x, y))\n\nt = int(input())\nwhile t:\n    t -= 1\n    solve()\n", "T = int( input() )\n\nMAX = 33000\n\nbePrime = [0] * MAX;\nprimNum = []\n\nfor j in range(2, MAX):\n    if bePrime[j] == 0: \n        primNum.append( j )\n        i = j\n        while i < MAX:\n            bePrime[i] = 1\n            i = i + j\n\ndef isPrime( a ):\n    for j in primNum:\n        if j >= a:\n            return True\n        if a % j == 0:\n            return False\n    return True\n\ndef gcd( a, b ):\n    if b == 0:\n        return a\n    return gcd( b, a % b );\n\nwhile T > 0:\n    num = 0;\n    n = int( input() )\n\n    m = n\n    while isPrime(m) == False:\n        m -= 1\n    while isPrime(n + 1) == False:\n        n += 1\n        num += 1\n\n    a = n - 1\n    b = 2 * ( n+1 )\n\n    a = a * (n+1) * m - num * b\n    b = b * (n+1) * m\n\n    g = gcd( a, b)\n    a //= g\n    b //= g\n\n\n    print( '{0}/{1}'.format( a, b  ) )\n    T -= 1;\n\n"]