["# cook your dish here\ndef decode(L,S):\n str_2=\"\"\n lst=[]\n for i in range(L//4):\n  str_1 = \"abcdefghijklmnop\"\n  S_1=S[(i*4):(4*(i+1))]\n  for j in range(4):\n   if(S_1[j]==\"1\"):\n    str_1=str_1[len(str_1)//2:len(str_1)]\n   else:\n    str_1 = str_1[0:len(str_1) // 2]\n  str_2=str_2+str_1\n print(str_2)\n\nT=int(input())\nfor i in range(T):\n L=int(input())\n S=input()\n decode(L,S)\n", "testcases = int(input())\nalphabet = 'aiemckgobjfndlhp'\n\nfor testcase in range(testcases):\n length = int(input())\n code = input()\n string = ''\n for byte in range(0,length,4):\n  letter = code[:4]\n  num = (int(code[3])*8+int(code[2])*4+int(code[1])*2+int(code[0]))\n  string += alphabet[num]\n  code = code[4:]\n print(string)", "# cook your dish here\nt=int(input())\nfor e in range(t):\n n=int(input())\n s=input()\n ans=''\n for i in range(0,n,4):\n  s2=s[i]+s[i+1]+s[i+2]+s[i+3]\n  l=[chr(q) for q in range(97,113)]\n  for z in s2:\n   if z=='0':\n    l=l[0:int(len(l)/2)]\n   else:\n    l=l[int(len(l)/2):]\n  ans=ans+l[0]\n print(ans)", "# cook your dish here\nt=int(input())\nwhile t>0:\n n=int(input())\n str1= input()\n str3=\"\"\n for i in range(0,n,4):\n  str2=str1[i]+str1[i+1]+str1[i+2]+str1[i+3]\n  l1=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p']\n  for j in str2:\n   if j=='0':\n    l1=l1[:int(len(l1)/2)]\n   else:\n    l1=l1[int(len(l1)/2):]\n   #print(l1)\n  str3+=l1[0]\n print(str3)\n  \n t=t-1", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n s=input()\n d={'0000':'a','0001':'b','0010':'c','0011':'d',\n  '0100':'e','0101':'f','0110':'g','0111':'h',\n  '1000':'i','1001':'j','1010':'k','1011':'l',\n  '1100':'m','1101':'n','1110':'o','1111':'p'}\n a=\"\"\n for i in range(0,n,4):\n  x=s[i:i+4]\n  a+=d.get(x)\n print(a)\n  \n", "# cook your dish here\ndef find(n,i):\n if i=='0':\n  return n//2\n else:\n  return n\n  \nalphabets=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p']\ntest=int(input())\nwhile(test!=0):\n bits=int(input())\n li=list(input())\n k=0\n while(bits>=4):\n  t=16\n  s=''\n  for i in range(k,k+4):\n   s=s+li[i]\n  bits=bits-4\n  k=k+4\n  s=int(s,2)\n  print(alphabets[s],end=\"\")\n print()\n test=test-1", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n lst = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p']\n f = lst\n o = ''\n fo = ''\n s = input()\n for i in range(n+1):\n  if i%4==0:\n   fo+=o\n   f = lst\n  if i==n:\n   break\n  if int(s[i])==0:\n   f = f[:len(f)//2]\n   o = f[0]\n  elif int(s[i])==1:\n   f = f[len(f)//2:]\n   o = f[0]\n print(fo)\n", "# cook your dish here\nfor i in range(int(input())):\n n = int(input())\n a = str(input())\n d = {'0000':'a','0001':'b','0010':'c','0011':'d',\n   '0100':'e','0101':'f','0110':'g','0111':'h',\n   '1000':'i','1001':'j','1010':'k','1011':'l',\n   '1100':'m','1101':'n','1110':'o','1111':'p'}\n\n ans = ''\n for i in range(0,len(a),4):\n  x = a[i:i+4]\n  ans+=(d.get(x))\n print(ans)", "# cook your code here\nzz= int(input(''))\nfor j in range(zz):\n xx=int(input(''))\n x=list(input(''))\n kk=0\n sos=''\n for i in range (xx,0,-4):\n  t=3\n  c=0\n  for k in range (4):\n   c=c+(int(x[kk])*(2**t))\n   kk=kk+1\n   t=t-1\n  sos=sos+ chr(c+97)\n print(sos)", "# cook your dish here\nmap_dict={'0000':'a',\n   '0001':'b',\n   '0010':'c',\n   '0011':'d',\n   '0100':'e',\n   '0101':'f',\n   '0110':'g',\n   '0111':'h',\n   '1000':'i',\n   '1001':'j',\n   '1010':'k',\n   '1011':'l',\n   '1100':'m',\n   '1101':'n',\n   '1110':'o',\n   '1111':'p'}\ndef decode_it(s):\n l=len(s)\n ch_list=[]\n for i in range(0,l,4):\n  ind=s[i:i+4]\n  x=map_dict[ind]\n  ch_list.append(x)\n return \"\".join(ch_list)\nT=int(input())\nwhile T > 0:\n l=int(input())\n s=input()\n print(decode_it(s))\n T-=1", "d=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p']\nfor t in range(int(input())):\n n = int(input())\n s=input()\n string=''\n for i in range(0,n-3,4):\n  string+=d[int(s[i:i+4],2)]\n print(string)", "# cook your dish here  \nt=int(input())\nwhile(t): \n k=int(input())\n s=input()\n n=4\n l = [s[i:i+n] for i in range(0, k, n)] \n li=[]\n for i in l:\n  \n  li.append(chr(int(i,2)+97)) \n  \n print(\"\".join(i for i in li))\n \n t-=1", "def find_string(k):\n f=\"abcdefghijklmnop\"\n for i in range(0,len(k)):        \n  if k[i]==\"1\":            \n   f=f[len(f)//2:] \n  elif k[i]==\"0\":\n    f=f[:len(f)//2]\n return f\nt=int(input())\nwhile(t):\n o=int(input())\n k=input()\n res=\"\"\n j=0\n while j+3 in range(len(k)):\n  res=res+find_string(k[j:j+4])\n  j=j+4\n print(res)\n t=t-1\n", "# cook your dish here\nt=int(input())\nwhile t>0:\n n=int(input())\n s=input()\n arr=[]\n for i in range(97,113):\n  arr.append(chr(i))\n i=0\n while i<n:\n  k=0\n  l=15\n  while k<l:\n   m=(k+l)//2\n   if k>=l:\n    break\n   if s[i]=='0':\n    l=m\n   elif s[i]=='1':\n    k=m+1\n   \n   i=i+1\n  print(arr[k],end=\"\")\n print() \n t=t-1", "# cook your dish here\ndef division(x,s):\n l=[]\n for i in range(0,s,4):\n  l.append(x[i:i+4])\n return l\nt=int(input())\nfor i in range(t):\n size=int(input())\n x=input()\n s=division(x,size)\n string=\"\"\n for i in s:\n  sum1=0\n  for j in range(4):\n   sum1+=(2**(3-j))*int(i[j])\n  sum1+=97\n  string+=chr(sum1)\n print(string)\n  \n\n", "# cook your dish here\ndef division(x,s):\n l=[]\n for i in range(0,s,4):\n  l.append(x[i:i+4])\n return l\nt=int(input())\nfor i in range(t):\n size=int(input())\n x=input()\n s=division(x,size)\n string=\"\"\n for i in s:\n  sum1=0\n  for j in range(4):\n   sum1+=(2**(3-j))*int(i[j])\n  sum1+=97\n  string+=chr(sum1)\n print(string)\n  \n\n", "for _ in range(int(input())):\n l=int(input())\n s=input()\n string=\"abcdefghijklmnop\"\n decode=''\n for b in range(0,l,4):\n  string=\"abcdefghijklmnop\"\n  for a in range(b,b+4):\n   if s[a]=='0':\n    n=len(string)//2\n    string=string[0:n]\n   elif s[a]=='1':\n    n=len(string)\n    string=string[(n//2):n]\n  decode=decode+string\n print(decode)", "# cook your dish here\nfor i in range(int(input())):\n N = int(input())\n S = input()\n for i in range(0, N, 4):\n  print(chr(97 + int(S[i:i+4], 2)), end='')\n print('')", "for _ in range(int(input())):\n N = int(input())\n S = input()\n for i in range(0, N, 4):\n  print(chr(97 + int(S[i:i+4], 2)), end='')\n print('')", "import sys\nimport math\n\n\nclass Test:\n N=0\n S=[]\n def __init__(self):\n  tmp=input().split()\n  self.N=int(tmp[0])\n  self.S=[int(i) for i in input()]\n\nclass Input:\n T=0\n test=[]\n def __init__(self):\n  self.T=int(input())\n  for i in range(0,self.T):\n   self.test.append(Test())\n\nletter=[]\nletter.append([])\nletter.append([])\nletter[0].append([])\nletter[0].append([])\nletter[1].append([])\nletter[1].append([])\nletter[0][0].append([])\nletter[0][0].append([])\nletter[0][1].append([])\nletter[0][1].append([])\nletter[1][0].append([])\nletter[1][0].append([])\nletter[1][1].append([])\nletter[1][1].append([])\n\nletter[0][0][0].append(\"a\")\nletter[0][0][0].append(\"b\")\nletter[0][0][1].append(\"c\")\nletter[0][0][1].append(\"d\")\nletter[0][1][0].append(\"e\")\nletter[0][1][0].append(\"f\")\nletter[0][1][1].append(\"g\")\nletter[0][1][1].append(\"h\")\nletter[1][0][0].append(\"i\")\nletter[1][0][0].append(\"j\")\nletter[1][0][1].append(\"k\")\nletter[1][0][1].append(\"l\")\nletter[1][1][0].append(\"m\")\nletter[1][1][0].append(\"n\")\nletter[1][1][1].append(\"o\")\nletter[1][1][1].append(\"p\")\ndef getletter(i, j, k, l):\n return letter[i][j][k][l]\n\ndef test_case(t:Test):\n sum=0\n i=0\n string=\"\"\n while i + 3 < len(t.S):\n  string+=getletter(t.S[i], t.S[i+1], t.S[i+2],t.S[i+3])\n  i+=4\n print(string)\n\ninp=Input()\nfor test in inp.test:\n test_case(test)\n", "# cook your dish her\nt=int(input())\nwhile(t):\n a=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p']\n n=int(input())\n s=input()\n res=''\n for i in range(0,len(s),4):\n  res=res+a[int(s[i:i+4],2)]\n print(res)\n t-=1\n"]