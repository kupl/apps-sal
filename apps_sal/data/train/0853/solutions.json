["# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n if n<101:\n  l1=[]\n  l2=[]\n  d=dict()\n  for i in range(1,2*n+1):\n   if i%2==0:\n    l1.append(int(input()))\n   else:\n    l2.append(str(input()))\n  r1=[]\n  for i in l1:\n   r1.append(i)\n  l1.sort()\n  ind=[]\n  for i in l1:\n   a=r1.index(i)\n   ind.append(a)\n  for i in ind:\n   print(l2[i])\n else:\n  print(0)\n  break\n \n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n if n<101:\n  l1=[]\n  l2=[]\n  d=dict()\n  for i in range(1,2*n+1):\n   if i%2==0:\n    l1.append(int(input()))\n   else:\n    l2.append(str(input()))\n  r1=[]\n  for i in l1:\n   r1.append(i)\n  l1.sort()\n  ind=[]\n  for i in l1:\n   a=r1.index(i)\n   ind.append(a)\n  for i in ind:\n   print(l2[i])\n else:\n  break\n \n", "t=int(input())\nop=\"\"\nfor j in range(0,t):\n n=int(input())\n d=dict()\n for i in range(0,n):\n  s=input()\n  tp=int(input())\n  d[tp]=s\n for k in sorted(d):\n  print(d[k])\nprint(op)", "t = int(input())\nfor _ in range(t):\n n = int(input())\n time = []\n l = dict()\n for __ in range(n):\n  name = input()\n  t = int(input())\n  l[t] = name\n  time.append(t)\n time.sort()\n for i in range(n):\n  print(l[time[i]])", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n l1=[]\n l2=[]\n d=dict()\n for i in range(1,2*n+1):\n  if i%2==0:\n   l1.append(int(input()))\n  else:\n   l2.append(str(input()))\n r1=[]\n for i in l1:\n  r1.append(i)\n l1.sort()\n ind=[]\n for i in l1:\n  a=r1.index(i)\n  ind.append(a)\n for i in ind:\n  print(l2[i])\n \n", "t = int(input())\nfor _ in range(t):\n n = int(input())\n l = 2*n\n l1 = []\n l2 = []\n for i in range(l):\n  if i%2 == 0:\n   s = input()\n   #x = input()\n   l1.append(s)\n  else:\n   s = int(input())\n   l2.append(s)\n #print(l2)\n t1 = []\n t1 = sorted(l2)\n \n t2 = []\n #print(t1)\n for i in t1:\n  #print(l2.index(i))\n  t2.append(l1[l2.index(i)])\n for j in t2:    \n  print(j)", "# cook your dish here\ntc = int(input())\nfor t in range(tc):\n n = int(input())\n tr=['']*n\n nr=['']*n\n ck=False\n for i in range(n):\n  name = input()\n  tim = int(input())\n  if not ck:\n   ck=True\n   tr[0]=tim\n   nr[0]=name\n  else:\n   tr[i]=tim\n   nr[i]=name\n   key=tr[i]\n   kname=nr[i]\n   k=i-1\n   while k>=0 and tr[k]>key:\n    tr[k+1]=tr[k]\n    nr[k+1]=nr[k]\n    k = k - 1\n   tr[k+1]=key\n   nr[k+1]=kname\n print(*nr,sep='\\n')", "# cook your dish here\ntc = int(input())\nfor t in range(tc):\n n = int(input())\n tr=['']*n\n nr=['']*n\n ck=False\n for i in range(n):\n  name = input()\n  tim = int(input())\n  if not ck:\n   ck=True\n   tr[0]=tim\n   nr[0]=name\n  else:\n   tr[i]=tim\n   nr[i]=name\n   for j in range(i+1):\n    key=tr[j]\n    kname=nr[j]\n    k=j-1\n    while k>=0 and tr[k]>key:\n     tr[k+1]=tr[k]\n     nr[k+1]=nr[k]\n     k = k - 1\n    tr[k+1]=key\n    nr[k+1]=kname\n print(*nr,sep='\\n')", "# cook your dish here\nn=int(input())\nfor i in range(n):\n num=int(input())\n d={}\n for j in range(num):\n  s=input()\n  a=int(input())\n  d[a]=s\n \n for j in sorted (d):\n  print(d[j])", "T=int(input())\nwhile T:\n alist=[]\n N=int(input())\n for _ in range(N):\n  S=input()\n  X=int(input())\n  alist.append(tuple([S,X]))\n alist=sorted(alist,key=lambda t1 :t1[1]) \n for _ in alist:\n  print(_[0])\n T-=1 ", "# cook your dish here\nt=int(input())\nname=list()\ntime=list()\nro=list()\nfor i in range(t):\n n=int(input())\n for j in range(n):\n  name.append(input())\n  time.append(int(input()))\n p=time.copy()\n time.sort()\n for x in range(len(time)):\n  for y in range(len(p)):\n   if time[x]==p[y]:\n    ro.append(y)\n for m in ro:\n  print(name[m])\n name.clear()\n time.clear()\n ro.clear()\n p.clear()", "t=int(input())\nfor _ in range(t):\n n=int(input())\n arr=[]\n for i in range(n):\n  pos=[]\n  name=input()\n  time=int(input())\n  pos.append(time)\n  pos.append(name)\n  arr.append(pos)\n arr.sort()\n for i in range(n):\n  print(arr[i][1])", "# cook your dish here\nt=int(input())\nname=list()\ntime=list()\nro=list()\nfor i in range(t):\n n=int(input())\n for j in range(n):\n  name.append(input())\n  time.append(int(input()))\n p=time.copy()\n time.sort()\n for x in range(len(time)):\n  for y in range(len(p)):\n   if time[x]==p[y]:\n    ro.append(y)\n for m in ro:\n  print(name[m])\n name.clear()\n time.clear()\n ro.clear()", "import operator\nfor _ in range(int(input())):\n n = int(input())\n d = dict()\n for i in range(n):\n  value = input()\n  key = int(input())\n  d[key] = value\n for v in sorted(d):\n  print(d[v])\n \n   \n", "import collections\nfor _ in range(int(input())):\n playerSize = int(input())\n player = []\n values = []\n newValues = []\n for i in range(playerSize):\n  player.append(input())\n  values.append(int(input()))\n newValues = sorted(values)\n #print(values)\n #print(player)\n #print(newValues)\n for i in range(playerSize):\n  for j in range(playerSize):\n   if newValues[i]==values[j]:\n    print(player[j])", "# cook your dish here\nfor _ in range(int(input())):\n d={}\n for __ in range(int(input())):\n  name = str(input())\n  time = int(input())\n  d[time] = name\n  d = dict(sorted(d.items()))\n for v in d.values():\n  print(v) ", "def asc_merge_sort(time,name):\n length=len(time)\n if length>1:\n  # finding the middle point if the timeay\n  if length%2==0:\n   mid=length//2\n  else:\n   mid=length//2+1\n\n  # for dividing the timeay into two sub parts\n  l = time[:mid]\n  r =time[mid:]\n  ll = name[:mid]\n  rr =name[mid:]\n\n  # sorting the both sub timeays\n  asc_merge_sort(l,ll)\n  asc_merge_sort(r,rr)\n  \n  i=j=k=0\n  while i<len(l) and j< len(r):\n   if l[i]<r[j]:\n    time[k]=l[i]\n    name[k]=ll[i]\n    i+=1\n   else:\n    time[k]=r[j]\n    name[k]=rr[j]\n    j+=1\n   k+=1\n  while i<len(l):\n   time[k]=l[i]\n   name[k]=ll[i]\n   i+=1\n   k+=1\n  while j<len(r):\n   time[k]=r[j]\n   name[k]=rr[j]\n   j+=1\n   k+=1\n return name\nfor _ in range(int(input())):\n nm=[]\n tm=[]\n n=int(input())\n for i in range(n):\n  nm.append(input())\n  tm.append(int(input()))\n ot=asc_merge_sort(tm,nm)\n for k in ot:\n  print(k)\n  \n", "for _ in range(int(input())):\n n=int(input())\n a=[]\n b=[]\n d=[]\n for i in range(n):\n   a.append(input())\n   b.append(int(input()))\n   c=b\n c=sorted(c)\n for i in range(n):\n  for j in range(n):\n   if(c[i]==b[j]):\n    d.append(a[j])\n for i in d:\n  print(i)\n", "\nfor _ in range(int(input())):\n ranks = []\n lens = int(input())\n for i in range(lens):\n  name = input()\n  timing = int(input())\n  ranks.append([name, timing])\n ranks = sorted(ranks, key = lambda x:x[1])\n for i in ranks:\n  print(i[0])\n", "try:\n for _ in range(int(input())):\n  n=int(input())\n  driver=[]\n  for __ in range(n):\n   name=input()\n   time=int(input())\n   driver.append((name,time))\n  driver.sort(key=lambda x: x[1])\n  for ele in driver:\n   print(ele[0])\nexcept:\n pass", "try:\n for _ in range(int(input())):\n  n=int(input())\n  driver=[]\n  for __ in range(n):\n   name=input()\n   time=int(input())\n   driver.append((name,time))\n  driver.sort(key=lambda x: x[1])\n  for ele in driver:\n   print(ele[0])\n  \nexcept:\n pass", "# cook your dish here\ndef takeSecond(elem):\n return elem[1]\n\nt = int(input())\nfor _ in range(t):\n # Input Section\n n = int(input())\n drivers_and_time = []\n for _ in range(n):\n  driver = input()\n  his_time = int(input())\n  drivers_and_time.append((driver, his_time))\n # Logic and Output Section\n drivers_and_time.sort(key=takeSecond)\n for item in drivers_and_time:\n  print(item[0])", "# cook your dish here\n\nt = int(input())\nfor rep in range(t):\n n = int(input())\n l = []\n for i in range(n):\n  s = input()\n  x = int(input())\n  l.append([s,x])\n l.sort(key = lambda x: x[1])\n for j in l:\n  print(j[0])", "# cook your dish here\nt=int(input())\nfor i in range(0,t):\n x=[]\n n=int(input())\n for j in range(0,n):\n  name=str(input())\n  time=int(input())\n  s=(time,name)\n  x.append(s)\n x=sorted(x,key=lambda x:(x[0],x[1])) \n for j in range(0,len(x)):\n  print(x[j][1])", "# cook your dish here\nT=int(input())\nfor _ in range(T):\n N=int(input())\n l=[]\n for i in range(N):\n  name=input()\n  time=int(input())\n  l.append((name,time))\n l=sorted(l,key=lambda ele:ele[1])\n for j in range(N):\n  print(l[j][0])\n"]