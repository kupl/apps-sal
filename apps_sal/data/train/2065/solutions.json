["n, k = [int(c) for c in input().split()]\na = []\nfor i in range(k):\n    ak = [int(c) for c in input().split()]\n    a.append(ak[1:])\n\ntotal = k - 1\n\nfor ak in a:\n    if ak[0] == 1:\n        j = 1\n        while j <= len(ak) - 1:\n            if ak[j] != ak[j-1] + 1:\n                break\n            j += 1\n        total += 2*(len(ak) - j)\n    else:\n        total += 2*(len(ak) - 1)\n\nprint(total)", "def read_data():\n    n, k = map(int, input().split())\n    As = []\n    m = 0\n    for i in range(k):\n        ma = list(map(int, input().split()))\n        As.append(ma[1:])\n        m += ma[0] - 1\n    return n, k, As, m\n\ndef solve(n, k, As, m):\n    As.sort()\n    steps = n + 1 + m\n    mat1 = As[0]\n    for i, mi in enumerate(mat1, 1):\n        if i == mi:\n            steps -= 2\n        else:\n            break\n    return steps\n\nn, k, As, m = read_data()\nprint(solve(n, k, As, m))", "import sys\n\nn, k = list(map(int, sys.stdin.readline().split()))\nans, pref = 0, 0\nfor i in range(k):\n    m, *a = list(map(int, sys.stdin.readline().split()))\n    j = 0\n    while j < m and a[j] == j + 1:\n        j += 1\n    if j:\n        pref = j\n        ans += m - j\n    else:\n        ans += m - 1\nprint(ans + n - pref)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(N,K) = list(map(int,input().split()))\n\nret = 0\nfor k in range(K):\n    nums = list(map(int,input().split()))[1:]\n\n    group = len(nums)\n    if nums[0] == 1:\n        for j in range(len(nums)-1):\n            if nums[j] + 1 == nums[j+1]:\n                group -= 1\n            else:\n                break\n    ret += group - 1   # split\nret += K + ret - 1   # join\nprint(ret)\n\n    \n        \n", "d = input().split()\n\nn = int(d[0])\nm = int(d[1])\n\nr = 0\nq = 0\n\nfor i in range(m):\n    s = [int(x) for x in input().split()][1::]\n    if s[0] != 1:\n        r += len(s) - 1\n        q += len(s)\n    else:\n        if len(s) <= 1:\n            q += 1\n        else:\n            w = 0\n            while w+1 < len(s) and s[w] == s[w+1] - 1:\n                w += 1\n            q += len(s) - w\n            r += len(s) - w - 1\n\nprint(r + q - 1)", "3\nn1 = []\nn1 = input(\"\").split(\" \")\nn = int (n1[0])\nk= int(n1[1])\nx= int (0)\ny= int(-1)\nz = int (0)\n\n\nbreakc = int(0)\naddc = int(0)\nx = []\nf =int(0)\nfor i in range(0,k):\n\tx=input(\"\").split(\" \")\n\ty = -1\n\tif f != 1:\n\t\tfor j in range(1,int(x[0])+1):\n\t\t\tz=int(x[j])\n\t\t\tif z==1:\n\t\t\t\ty = 1\n\t\t\t\tfor k in range(j+1, int(x[0])+1):\n\t\t\t\t\tz=int(x[k])\n\t\t\t\t\tif z == (y+1):\n\t\t\t\t\t\taddc +=1\n\t\t\t\t\t\ty =z\n\t\t\t\t\telse:\n\t\t\t\t\t\tf = 1\n\t\t\t\t\tif k == int(x[0]):\n\t\t\t\t\t\tf = 1\n\t\t\t\t\tif f == 1:\n\t\t\t\t\t\tx[0] = int(x[0]) - addc\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\tbreakc += int(x[0]) - 1\n\n\nprint(breakc + (n - addc) - 1)\n", "n, k = list(map(int, input().split()))\ntime = 0\n\nntd  = 0\n\nfor i in range(k):\n\tmtr = list(map(int, input().split()))[1:]\n\n\tif mtr[0] == 1:\n\t\tln = 0\n\n\t\tdlt = mtr[-1]\n\t\tmtr.reverse()\n\n\n\t\tfor j, val in enumerate(mtr[:-1]):\n\t\t\tif val-mtr[j+1] != 1:\n\t\t\t\t#print('*')\n\t\t\t\ttime += j-ln+1\n\t\t\t\t#print('!', j-ln+1)\n\t\t\t\tln = j + 1\n\t\t\t\tdlt = mtr[j+1]\n\t\t\t\t\n\n\telse:\n\t\t#print('-', i, len(mtr)-1)\n\t\ttime += len(mtr)-1\n\n#print('\\n------------------\\n', time, n,  dlt)\nprint(time + n  - dlt)\n", "##row, col, order = input().split(' ')    \n##row = int(row)\n##col = int(col)\n##\n##init_list = []\n##\n##for i in range(row):\n##    init_list.append(input().split(' '))\n##\n##if order=='0':\n##    for i in range(row):\n##        print()\n##        for j in range(col,0,-1):\n##            print(init_list[i][j-1], end = ' ')\n##else:\n##    for i in range(row,0,-1):\n##        print()\n##        for j in range(col):\n##            print(init_list[i-1][j], end = ' ')\n\ndef judge(_list:list) -> int:\n    number = -1\n    for i in range(len(_list)):\n        if int(_list[i]) == i+1:\n            number += 1\n        else:\n            pass\n    \n    return number\n\nmat_num, chain_num = input().split(' ')\nmat_num, chain_num = int(mat_num), int(chain_num)\n\nchain = []\n\nfor i in range(chain_num):\n    chain.append([])\n    temp_list = input().split(' ')\n    for j in range(int(temp_list[0])):\n        chain[-1].append(temp_list[1])\n        del temp_list[1]\n\nfor i in range(chain_num):\n    if judge(chain[i]) < 1:\n        pass\n    else:\n        temp_count = len(chain[i]) - judge(chain[i])\n        chain[i] = []\n        for j in range(temp_count):\n            chain[i].append(1)\n\ntime = 0\ncount = 0\n\nfor i in range(chain_num):\n    time += len(chain[i]) - 1\n    count += len(chain[i])\n\nprint(time + count -1)\n", "n, k = list(map(int, input().split()))\nm = [0]*k; f = 0;\nfor y in range(k):\n    m = list(map(int, input().split()))[1:]\n    i = 0\n    while i < len(m):\n        if m[i] == 1:\n            if i > 0:\n                f += 1\n            j = i+1\n            while j < len(m):\n                if m[j] - m[j-1] != 1:\n                    f += 1\n                    break\n                j += 1\n            i = j\n        elif i > 0:\n            f += 1\n        i += 1\nprint(2*f+k-1)\n", "n, k = list(map(int, input().split(' ')))\nfor i in range(k):\n    x = input().split(' ')\n    if x[1] == '1':\n        y = [int(j) for j in x[1:]] + [0]\n        z = 0\n        while y[z+1] == z+2:\n            z += 1\nprint(2*n-k-1-2*z)\n", "n, k = map(int, input().split())\nfor _ in range(k):\n    a = list(map(int, input().split()))[1:] + [0]\n    if a[0] != 1: continue\n    i = 0\n    while a[i + 1] == i + 2:\n        i += 1\nprint(2 * n - k - 1 - 2 * i)", "#!/usr/bin/env python3\nn, k = list(map(int,input().split()))\ny = 0\nfor i in range(k):\n    xs = list(map(int,input().split()))\n    m, xs = xs[0], xs[1:]\n    if xs[0] == 1:\n        j = 0\n        while j < m and xs[j] == j+1:\n            j += 1\n        m -= j\n        y += m # decompose\n        y += m # compose\n    else:\n        y += m - 1 # decompose\n        y += m # compose\nprint(y)\n", "def main():\n    n, k = list(map(int, input().split()))\n    res = 0\n    for _ in range(k):\n        tmp = list(map(int, input().split()))\n        if tmp[1] == 1:\n            tmp[0] = 0\n            for i, x in enumerate(tmp):\n                if i != x:\n                    res += (len(tmp) - i) * 2\n                    break\n        else:\n            res += len(tmp) * 2 - 3\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, k = list(map(int, input().split()))\n    for i in range(k):\n        tmp = input().split()\n        if tmp[1] == '1':\n            tmp.append('0')\n            tmp[0] = '0'\n            for i, m in enumerate(map(int, tmp)):\n                if i != m:\n                    print((n - i) * 2 - k + 3)\n                    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = (int(x) for x in input().split())\nl = [None for _ in range(k)]\nfor i in range(k):\n\tl[i] = [int(x) for x in input().split()[1:]]\nfor m in l:\n\tif m[0] == 1:\n\t\ti = 0\n\t\twhile i < len(m) and m[i] == i + 1:\n\t\t\ti += 1\n\t\tprint(n * 2 - i * 2 - k + 1)\n", "n, k = list(map(int, input().split()))\nu = 0\nfor i in range(k):\n    a = list(map(int, input().split()))[1:]+[0]\n    if a[0] == 1:\n        while a[u] == u+1: u += 1\nprint(n+n-u-u-k+1)\n            \n", "def func(mas, n, m):\n    flag1=0\n    flag2=n-1\n    i=0\n    j=1\n    while(i<m):\n        if(mas[i][1]==1):\n            tmp = mas[i][0]-1\n            while(j<mas[i][0]):\n                if(mas[i][j]==mas[i][j+1]-1):\n                    flag2-=1\n                    tmp-=1\n                else:\n                    break\n                j+=1\n            flag1+=tmp\n        else:\n            flag1=flag1+mas[i][0]-1\n        i+=1\n    return flag1+flag2\nn,m = map(int, input().split())\nmas=[[]for i in range(m)]\nh=0\nfor i in mas:\n    s = input()\n    p = s.split()\n    while h<len(p):\n        i.append(int(p[h]))\n        h+=1\n    h=0\nprint(func(mas,n,m))", "n, k = map(int, input().split())\nm = [list(map(int, input().split())) for _ in range(k)]\n\nfor row in m:\n    if row[1] == 1:\n        for idx in range(1, row[0] + 1):\n            if row[idx] != idx:\n                idx -= 1\n                break\n        break\nans = (n-1) + (n-k) - 2*(idx-1)\nprint(ans)", "#!/usr/bin/env python3\n\ndef solve(n, seq):\n    found = 0\n    res = 0\n    for s in seq:\n        if s[1] == 1:\n            found = 1\n            while len(s) > found and s[found] == found:\n                found += 1\n            found -= 1\n            rest = s[0] - found\n            res += rest\n        else:\n            res += s[0]-1\n    return res + n - found\n\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    seq = [list(map(int, input().split())) for _ in range(k)]\n    print(solve(n, seq))\n\n__starting_point()", "n, k = list(map(int, input().split()))\nfor _ in range(k):\n    a = list(map(int, input().split()))[1:] + [0]\n    if a[0] != 1:\n        continue\n    i = 0\n    while a[i + 1] == i + 2:\n        i += 1\nprint(2 * n - k - 1 - 2 * i)\n", "I=lambda:map(int,input().split())\nn,k=I()\nr=k-1\ny=0\nfor _ in range(k):\n    t=list(I())\n    for i in range(1,t[0]):\n        if t[i]==y+1:\n            y+=1\n            if t[i+1]!=t[i]+1:r+=2\n        else:\n            if y:y=-1\n            r+=2\nprint(r)", "# 555A\n# \u03b8(n) time\n# O(n) space\n\n__author__ = 'artyom'\n\n\n# SOLUTION\n\ndef main():\n    n, k = read(3)\n    c = 0\n    l = 1\n    for _ in range(k):\n        a = read(3)\n        if a[1] == 1:\n            j = 1\n            while j < a[0] and a[j + 1] - a[j] == 1:\n                j += 1\n                l += 1\n            c += a[0] - j\n        else:\n            c += a[0] - 1\n    return c + n - l\n\n\n# HELPERS\n\ndef read(mode=1, size=None):\n    # 0: String\n    # 1: Integer\n    # 2: List of strings\n    # 3: List of integers\n    # 4: Matrix of integers\n    if mode == 0: return input().strip()\n    if mode == 1: return int(input().strip())\n    if mode == 2: return input().strip().split()\n    if mode == 3: return list(map(int, input().strip().split()))\n    a = []\n    for _ in range(size):\n        a.append(read(3))\n    return a\n\n\ndef write(s=\"\\n\"):\n    if s is None: s = ''\n    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))\n    s = str(s)\n    print(s, end=\"\\n\")\n\n\nwrite(main())", "# 555A\n# O(n + k) time\n# O(n) space\n\n__author__ = 'artyom'\n\n\n# SOLUTION\n\ndef main():\n    n, k = read(3)\n    c = 0\n    l = 1\n    for _ in range(k):\n        a = read(3)\n        if a[1] == 1:\n            while l < a[0] and a[l + 1] - a[l] == 1:\n                l += 1\n            c += a[0] - l\n        else:\n            c += a[0] - 1\n    return c + n - l\n\n\n# HELPERS\n\ndef read(mode=1, size=None):\n    # 0: String\n    # 1: Integer\n    # 2: List of strings\n    # 3: List of integers\n    # 4: Matrix of integers\n    if mode == 0: return input().strip()\n    if mode == 1: return int(input().strip())\n    if mode == 2: return input().strip().split()\n    if mode == 3: return list(map(int, input().strip().split()))\n    a = []\n    for _ in range(size):\n        a.append(read(3))\n    return a\n\n\ndef write(s=\"\\n\"):\n    if s is None: s = ''\n    if isinstance(s, tuple) or isinstance(s, list): s = ' '.join(map(str, s))\n    s = str(s)\n    print(s, end=\"\\n\")\n\n\nwrite(main())", "# Description of the problem can be found at http://codeforces.com/problemset/problem/555/A\n\nn, k = map(int, input().split())\n\na =  2 * n - k + 1\n\nfor _ in range(k):\n    x = list(map(int, input().split()))[1:]\n    for i in range(len(x)):\n        if i + 1 == x[i]:\n            a -= 2\n            \nprint(a)"]