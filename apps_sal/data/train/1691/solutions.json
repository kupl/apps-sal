["# CHNGSS.py\n\nimport sys\nfrom random import *\n\nn,m,c = list(map(int,input().split()))\narr = [[1]*m for i in range(n)];\nsaved = 0;\nfor i in range(n):\n\tfor j in range(m):\n\t\tprint(1,(i+1),(i+1),(j+1),(j+1),1,25)\n\t\tsys.stdout.flush()\n\t\ta = int(input())\n\t\tif a == 1 :\n\t\t\tsaved += 1;\n\t\t\tarr[i][j] = randint(1,25);\n\t\telse:\n\t\t\tarr[i][j] = randint(25,50);\nprint(3);\nsys.stdout.flush()\nfor a in arr :\n\tprint(' '.join(map(str,a)));\n\tsys.stdout.flush()\n# sys.exit(0);", "# CHNGSS.py\n\nimport sys\nfrom random import *\n\nn,m,c = list(map(int,input().split()))\narr = [[1]*m for i in range(n)];\nsaved = 0;\nfor i in range(n):\n\tfor j in range(m):\n\t\tprint(1,(i+1),(i+1),(j+1),(j+1),1,15)\n\t\tsys.stdout.flush()\n\t\ta = int(input())\n\t\tif a == 1 :\n\t\t\tsaved += 1;\n\t\t\tarr[i][j] = randint(1,15);\n\t\telse:\n\t\t\tprint(1,(i+1),(i+1),(j+1),(j+1),16,30)\n\t\t\tsys.stdout.flush()\n\t\t\ta = int(input())\n\t\t\tif a == 1 :\n\t\t\t\tarr[i][j] = randint(16,30);\n\t\t\telse:\n\t\t\t\tif saved > 0 :\n\t\t\t\t\tsaved -= 1;\n\t\t\t\t\tprint(1,(i+1),(i+1),(j+1),(j+1),31,40);\n\t\t\t\t\tsys.stdout.flush()\n\t\t\t\t\ta = int(input())\n\t\t\t\t\tif a == 1 :\n\t\t\t\t\t\tarr[i][j] = randint(31,40);\n\t\t\t\t\telse:\n\t\t\t\t\t\tarr[i][j] = randint(41,50);\n\t\t\t\telse:\n\t\t\t\t\tarr[i][j] = randint(31,50);\nprint(3);\nsys.stdout.flush()\nfor a in arr :\n\tprint(' '.join(map(str,a)));\n\tsys.stdout.flush()\n# sys.exit(0);", "# CHNGSS_1.py\n\nfrom random import *\n\nn,m,c = list(map(int,input().split()))\nprint(3);\narr = [[0]*m for i in range(n)];\nfor i in range(n):\n\tfor j in range(m):\n\t\tarr[i][j] = randint(1,50);\n\nfor a in arr :\n\tprint(' '.join(map(str,a)));", "import sys\n##from random import randint\nn,m,c = [int(i) for i in input().split()]\nmatrix = [[0]*(m+1) for i in range(n+1)]\ncc = 1\nnn= 1\nmm = 1\n'''\nfor nn in xrange(1,n+1) :\n    for mm in xrange(1,m+1) :\n        if cc <= c :\n            print \"2\",\n            print nn,nn,mm,mm\n            sys.stdout.flush()\n            matrix[nn][mm] = int(raw_input())\n            cc += 1\n        else :\n            break\n    if cc > c :\n        break\n###print matrix'''\n\nfor nnn in range(nn,n+1) :\n    for mmm in range(mm,m+1) :\n        \n        x = 1\n        y = 25\n        z = 51\n        while matrix[nnn][mmm] == 0 :\n            if cc < 499990 :\n                if abs(x-y) == 1 :\n                    print(\"1\", end=' ')\n                    print(nnn,nnn,mmm,mmm,x,x)\n                    sys.stdout.flush()\n                    cc += 1\n                    value = int(input())\n                    if value == 1 :\n                        matrix[nnn][mmm] = x\n                    else :\n                        matrix[nnn][mmm] = y\n                    break\n                else :\n                    print(\"1\", end=' ')\n                    print(nnn,nnn,mmm,mmm,x,y)\n                    sys.stdout.flush()\n                    cc += 1\n                    value = int(input())\n                    if value == 1 :\n                        z = y\n                        y = (x+y)/2\n                    else :\n                        x = y\n                        y = (y+z)/2 \n              \n            else :\n                break\n        \n        \n    if cc >= 499980 :\n        break\nprint(\"3\")\nsys.stdout.flush()\nfor nn in range(1,n+1) :\n    for mm in range(1,m+1) :\n        if matrix[nn][mm] < 1 or matrix[nn][mm] > 50 :\n            print(\"25\", end=' ')\n        else :\n            print(matrix[nn][mm], end=' ')\n    sys.stdout.flush()\n    print()", "import sys\n##from random import randint\nn,m,c = [int(i) for i in input().split()]\nmatrix = [[0]*(m+1) for i in range(n+1)]\ncc = 1\nnn= 1\nmm = 1\nfor nn in range(1,n+1) :\n    for mm in range(1,m+1) :\n        if cc <= c :\n            print(\"2\", end=' ')\n            print(nn,nn,mm,mm)\n            sys.stdout.flush()\n            matrix[nn][mm] = int(input())\n            cc += 1\n        else :\n            break\n    if cc > c :\n        break\n###print matrix\n\nfor nnn in range(nn,n+1) :\n    for mmm in range(mm,m+1) :\n        if c < 499990 :\n            x = 1\n            y = 25\n            z = 51\n            while matrix[nnn][mmm] == 0 :\n                if abs(x-y) == 1 :\n                    print(\"1\", end=' ')\n                    print(nnn,nnn,mmm,mmm,x,x)\n                    sys.stdout.flush()\n                    c += 1\n                    value = int(input())\n                    if value == 1 :\n                        matrix[nnn][mmm] = x\n                    else :\n                        matrix[nnn][mmm] = y\n                    break\n                else :\n                    print(\"1\", end=' ')\n                    print(nnn,nnn,mmm,mmm,x,y)\n                    sys.stdout.flush()\n                    c += 1\n                    value = int(input())\n                    if value == 1 :\n                        z = y\n                        y = (x+y)/2\n                    else :\n                        x = y\n                        y = (y+z)/2 \n              \n        else :\n            break\n        \n        \n    if c >= 499980 :\n        break\nprint(\"3\")\nsys.stdout.flush()\nfor nn in range(1,n+1) :\n    for mm in range(1,m+1) :\n        if matrix[nn][mm] < 1 or matrix[nn][mm] > 50 :\n            print(\"25\", end=' ')\n        else :\n            print(matrix[nn][mm], end=' ')\n    sys.stdout.flush()\n    print()", "import sys\n##from random import randint\nn,m,c = [int(i) for i in input().split()]\nmatrix = [[0]*(m+1) for i in range(n+1)]\ncc = 1\nnn= 1\nmm = 1\nfor nn in range(1,n+1) :\n    for mm in range(1,m+1) :\n        if cc <= c :\n            print(\"2\", end=' ')\n            print(nn,nn,mm,mm)\n            sys.stdout.flush()\n            matrix[nn][mm] = int(input())\n            cc += 1\n        else :\n            break\n    if cc > c :\n        break  \nprint(\"3\")\nsys.stdout.flush()\nfor nn in range(1,n+1) :\n    for mm in range(1,m+1) :\n        if matrix[nn][mm] < 1 or matrix[nn][mm] > 50 :\n            print(\"25\", end=' ')\n        else :\n            print(matrix[nn][mm], end=' ')\n    print()", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\twhile(True):\n\t\t\tl = random.randint(1,50)\n\t\t\th = random.randint(1,50)\n\t\t\tif (l<h):\n\t\t\t\tbreak\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,25)\n\t\th = random.randint(25,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,11)\n\t\th = random.randint(11,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,7)\n\t\th = random.randint(7,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,5)\n\t\th = random.randint(6,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,20)\n\t\th = random.randint(21,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,10)\n\t\th = random.randint(11,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import sys,random\nn,m,c=list(map(int,input().split()))\nprint(2,1,n,1,m)\nsys.stdout.flush()\nsum=int(input())\nsum/=(n*m)\nprint(3)\nsys.stdout.flush()\nif sum-5<1:\n       l=0\n       r=sum+5\nelse:\n       l=sum-5\n       r=sum+5\nfor i in range(n):\n       for j in range(m-1):\n                     print(random.randrange(l,r), end=' ')\n       print(random.randrange(l,r))\n", "import sys,numpy as np\ndef find_nearest(array,value):\n       idx = (np.abs(array-value)).argmin()\n       return array[idx]\n       \nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(50):\n       options.append(li.index(max[i])+1)\n       \narray=np.array(options)       \nk=1\nli=[]\nquery=m\nrem=0\nif c<=query:\n       query=c\n       rem=m-query\n\nfor i in range(query):\n       print(2,1,n,k,k+1-1)\n       sys.stdout.flush()\n       sum=int(input())\n       li.append((sum/(n)))\n       #print m,k\n       if k>=m:break\n       k+=1\nprint(3)\n       \nfor i in range(n):\n       for j in range(query):\n              print(str(find_nearest(array,li[j])), end=' ')\n       print(\" \".join([str(options[0])]*rem))\n\n       \n\n\n       \n\n       \n", "import sys,numpy as np\ndef find_nearest(array,value):\n       idx = (np.abs(array-value)).argmin()\n       return array[idx]\n       \nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(26):\n       options.append(li.index(max[i])+1)\n       \narray=np.array(options)       \nk=1\nli=[]\nquery=m\nrem=0\nif c<=query:\n       query=c\n       rem=m-query\n\nfor i in range(query):\n       print(2,1,n,k,k+1-1)\n       sys.stdout.flush()\n       sum=int(input())\n       li.append((sum/(n)))\n       #print m,k\n       if k>=m:break\n       k+=1\nprint(3)\n       \nfor i in range(n):\n       for j in range(query):\n              print(str(find_nearest(array,li[j])), end=' ')\n       print(\" \".join([str(options[0])]*rem))\n\n       \n\n\n       \n\n       \n", "import sys,numpy as np\ndef find_nearest(array,value):\n       idx = (np.abs(array-value)).argmin()\n       return array[idx]\n       \nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,6):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(5):\n       options.append(li.index(max[i])+1)\n       \narray=np.array(options)       \nk=1\nli=[]\nquery=m\nrem=0\nif c<=query:\n       query=c\n       rem=m-query\n\nfor i in range(query):\n       print(2,1,n,k,k+1-1)\n       sys.stdout.flush()\n       sum=int(input())\n       li.append((sum/(n)))\n       #print m,k\n       if k>=m:break\n       k+=1\nprint(3)\n       \nfor i in range(n):\n       for j in range(query):\n              print(str(find_nearest(array,li[j])), end=' ')\n       print(\" \".join([str(options[0])]*rem))\n\n       \n\n\n       \n\n       \n", "import sys,random\nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(15):\n       options.append(li.index(max[i])+1)\n                     \nprint(3)\nfor i in range(n):\n       for j in range(m-1):\n              print(random.choice(options), end=' ')\n       \n       print(random.choice(options))\n\n       \n       \n\n       \n\n\n       \n\n       \n", "import sys,random\nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(10):\n       options.append(li.index(max[i])+1)\n                     \nprint(3)\nfor i in range(n):\n       for j in range(m-1):\n              print(random.choice(options), end=' ')\n       \n       print(random.choice(options))\n\n       \n       \n\n       \n\n\n       \n\n       \n", "import sys,random\nn,m,c=list(map(int,input().split()))\nmax=[]\nli=[]\noptions=[]\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       max.append(ans)\n       li.append(ans)\nmax.sort()\nmax=max[::-1]\n\nfor i in range(5):\n       options.append(li.index(max[i])+1)\n                     \nprint(3)\nfor i in range(n):\n       for j in range(m-1):\n              print(random.choice(options), end=' ')\n       \n       print(random.choice(options))\n\n       \n       \n\n       \n\n\n       \n\n       \n", "import sys\nn,m,c=list(map(int,input().split()))\nli=[]\nmax=0\nfor i in range(1,51):\n       print(1,1,n,1,m,i,i)\n       sys.stdout.flush()\n       ans=int(input())\n       if ans>max:\n              max=ans\n              deal=i\n\nprint(3)          \nfor i in range(n):\n       print(\" \".join([str(deal)]*m))\n\n       \n       \n\n       \n\n\n       \n\n       \n", "import sys\nn,m,c=list(map(int,input().split()))\n\nk=1\nli=[]\nquery=m\nrem=0\nif c<=query:\n       query=c\n       rem=m-query\n\nfor i in range(query):\n       print(2,1,n,k,k+1-1)\n       sys.stdout.flush()\n       sum=int(input())\n       li.append(str(sum/(n)))\n       #print m,k\n       if k>=m:break\n       k+=1\nprint(3)\n       \nfor i in range(n):\n       for j in range(query):\n              print(li[j], end=' ')\n       print(\" \".join([\"25\"]*rem))\n\n       \n\n\n       \n\n       \n", "import sys\nn,m,c=list(map(int,input().split()))\n\nk=1\nli=[]\nquery=m/n\nrem=0\nif c<=query:\n       query=c\n       rem=m-query*n\n\nfor i in range(query):\n       print(2,1,n,k,k+n-1)\n       sys.stdout.flush()\n       sum=int(input())\n       li.append(str(sum/(n*n)))\n       #print m,k\n       if k>=m:break\n       k+=n\nprint(3)\n       \nfor i in range(n):\n       for j in range(query):\n              print(\" \".join([li[j]]*n), end=' ')\n       print(\" \".join([\"25\"]*rem))\n\n       \n\n\n       \n\n       \n", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tl = random.randint(1,25)\n\t\th = random.randint(26,50)\n\t\tprint(random.randint(l,h), end=' ')\n\tprint(\"\")", "import random\nn,m,c = list(map(int,input().split()))\nprint(3)\nfor i in range(n):\n\tfor j in range(m):\n\t\tprint(random.randint(1,50), end=' ')\n\tprint(\"\")"]