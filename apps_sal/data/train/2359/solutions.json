["N,K,M=map(int,input().split());R=range;T=[[1]]\nfor i in R(1,N):\n\tq=K*i\n\tif i>~i+N:T+=[y:=T[-1][:len(T[~i+N])]]\n\telse:T+=[y:=T[-1][:]+[0]*q]\n\tp=len(y)-i\n\tfor j in R(p):y[j+i]+=y[j]%M\n\tfor j in R(p-q):y[~j]-=y[~j-i-q]%M\nfor i in R(N):print(sum(T[i][j]*T[~i+N][j]for j in R(len(T[i])))*-~K%M-1)", "\n\nimport numpy as np\nfrom numba import njit\n@njit\ndef main(n,k,mod):\n    l=k*(n*(n+1))//2\n    dp=np.zeros((n+1,l+1),dtype=np.int32)\n    # dp[i][j]:i\u307e\u3067\u306e\u6570\u5b57\u3092\u4f7f\u3044\u3001\u5408\u8a08\u304cj\u306b\u306a\u308b\u3082\u306e\u306e\u500b\u6570\n    # O(N^3*k)<=O(10^8)\u3067\u8a08\u7b97\u53ef\u80fd\u3089\u3057\u3044\n    dp[0,0]=1\n    ary=np.ones((1,l+2),dtype=np.int32)\n    ary[0,0]=0\n    for i in range(1,n+1):\n        nary=np.zeros((i+1,2+l//i),dtype=np.int32)\n        for j in range(l+1):\n            a=j//i\n            b=max(0,j//i-k)\n            dp[i,j]=ary[j%i,a+1]-ary[j%i,b]\n            dp[i,j]%=mod\n            nary[j%(i+1),j//(i+1)+1]=dp[i,j]\n            nary[j%(i+1),j//(i+1)+1]+=nary[j%(i+1),j//(i+1)]\n            nary[j%(i+1),j//(i+1)+1]%=mod\n        ary=nary\n    ret=[]\n    for i in range(1,n+1):\n        # \u5de6\u533a\u9593=[1,i-1]\n        # \u53f3\u533a\u9593=[1,n-i]\n        ans=0\n        num=dp[i-1,0]\n        num*=dp[n-i,0]\n        ans+=num*k\n        ans%=mod\n        for j in range(1,l+1):\n            num=dp[i-1,j]\n            num*=dp[n-i,j]\n            num%=mod\n            ans+=(num*(k+1))%mod\n            ans%=mod\n        ret.append(ans)\n    #for x in ret:\n    #    print(x)\n    return ret\n\nn,k,mod=map(int,input().split())\nprint(*main(n,k,mod),sep='\\n')", "import sys\nreadline = sys.stdin.readline\n\nN, K, MOD = list(map(int, readline().split()))\n\nMAX = K*(N//2)*(N//2+1)//2+1\n\n\ntable = [[1]]\n\nfor idx in range(1, N+1):\n    dp = table[-1]\n    dp2 = dp + [0]*(idx*(K+1))\n    s = idx*(K+1)\n    for i in range(min(len(dp), len(dp2)-s)):\n        dp2[i+s] = (dp2[i+s] + -dp[i])%MOD\n    for i in range(len(dp2)-idx):\n        dp2[i+idx] = (dp2[i+idx]+dp2[i])%MOD\n    \n    if len(dp2) > MAX:\n        dp2 = dp2[:MAX]\n    table.append(dp2)\n\nAns = [None]*(N+1)\nfor x in range(1, N+1):\n    if N-x < x:\n        Ans[x] = Ans[N+1-x]\n    ans = 0\n    for i in range(min(len(table[x-1]), len(table[N-x]))):\n        ans = (ans + table[x-1][i]*table[N-x][i])%MOD\n    ans = (ans*(K+1)-1)%MOD\n    Ans[x] = ans\nprint(('\\n'.join(map(str, Ans[1:]))))\n"]