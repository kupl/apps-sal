["for _ in range(int(input())):\n    # n, x = map(int, input().split())\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = [arr[0]]\n    for i in range(1, n - 1):\n        if arr[i - 1] < arr[i] and arr[i] > arr[i + 1]:\n            ans.append(arr[i])\n        elif arr[i - 1] > arr[i] and arr[i] < arr[i + 1]:\n            ans.append(arr[i])\n    ans.append(arr[-1])\n    print(len(ans))\n    print(*ans)", "\nt = int(input())\n\nfor loop in range(t):\n\n    n = int(input())\n    p = list(map(int,input().split()))\n    a = p\n\n    ans = []\n    \n\n    for i in range(n):\n\n        if i == 0 or i == n-1:\n            ans.append(p[i])\n\n        elif a[i-1] <= a[i] <= a[i+1]:\n            continue\n        elif a[i-1] >= a[i] >= a[i+1]:\n            continue\n        else:\n            ans.append(p[i])\n\n    print(len(ans))\n    print(*ans)\n", "for t in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [a[0]] + [a[i] for i in range(1, n - 1) if not(a[i - 1] < a[i] < a[i + 1] or \n                                                   a[i - 1] > a[i] > a[i + 1])] + [a[-1]]\n    print(len(b))\n    print(*b)", "for _ in range(int(input())):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = [str(p[0])]\n    for i in range(1,n-1):\n        if p[i-1] < p[i] < p[i+1]:\n            continue\n        if p[i-1] > p[i] > p[i+1]:\n            continue\n        ans.append(str(p[i]))\n    ans.append(str(p[-1]))\n    print(len(ans))\n    print(\" \".join(ans))\n", "for _ in range(int(input())):\n    n = int(input())\n    p = tuple(map(int, input().split()))\n    ans = [p[i] for i in range(n) if i in (0, n - 1) or p[i] != sorted(p[i - 1:i + 2])[1]]\n    print(len(ans))\n    print(*ans)\n", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    l = list(map(int, input().rstrip().split()))\n    i = 0\n    arr = list()\n    arr.append(str(l[0]))\n    while i+1 < n:\n        if i+1 == n-1 or (l[i] < l[i+1] and l[i+1] > l[i+2]) or (l[i] > l[i+1] and l[i+1] < l[i+2]):\n            arr.append(str(l[i+1]))\n        i += 1\n    print(len(arr))\n    print(\" \".join(arr))", "from collections import *\nfrom sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nt, = rl()\nfor _ in range(t):\n    n, = rl()\n    p = rl()\n    s = [p[0]]\n    for i in range(1, n-1):\n        if p[i-1] < p[i] > p[i+1] or p[i-1] > p[i] < p[i+1]:\n            s.append(p[i])\n    s.append(p[-1])\n    print(len(s))\n    print(*s)\n", "import sys\ninput = sys.stdin.readline\n\nfor nt in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tif n==2:\n\t\tprint (2)\n\t\tprint (*a)\n\t\tcontinue\n\tans = [a[0]]\n\tif a[1]>a[0]:\n\t\tturn = 1\n\telse:\n\t\tturn = 0\n\ts = abs(a[1]-a[0])\n\tfor i in range(2,n):\n\t\tif turn:\n\t\t\tif a[i]>a[i-1]:\n\t\t\t\tcontinue\n\t\t\tans.append(a[i-1])\n\t\t\tturn = 0\n\t\telse:\n\t\t\tif a[i]<a[i-1]:\n\t\t\t\tcontinue\n\t\t\tans.append(a[i-1])\n\t\t\tturn = 1\n\tans.append(a[-1])\n\tprint (len(ans))\n\tprint (*ans)", "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\n\nq=nn()\n\nfor _ in range(q):\n\tn = nn()\n\n\tper = lm()\n\n\tbest =[per[0]]\n\n\tfor i in range(len(per)-2):\n\t\tminper = min(per[i], per[i+1], per[i+2])\n\t\tmaxper = max(per[i], per[i+1], per[i+2])\n\t\tif minper==per[i+1] or maxper==per[i+1]:\n\t\t\tbest.append(per[i+1])\n\tbest.append(per[-1])\n\tprint(len(best))\n\tprint(*best)\n", "import sys\n\ndef ii():\n    return sys.stdin.readline().strip()\n\ndef idata():\n    return [int(x) for x in ii().split()]\n\ndef solve_of_problem():\n    n = int(ii())\n    data = idata()\n    ans = [data[0]]\n    for i in range(1, n - 1):\n        if data[i - 1] < data[i] > data[i + 1] or data[i - 1] > data[i] < data[i + 1]:\n            ans += [data[i]]\n    print(len(ans) + 1)\n    print(*ans, data[-1])\n    return\n\nfor ______ in range(int(ii())):\n    solve_of_problem()", "def main():\n    n = int(input())\n    lst = list(map(int, input().split()))\n    take = [lst[0]]\n    sign = 0\n    for i in range(1, n):\n        if i == n - 1:\n            take.append(lst[i])\n        else:\n            if lst[i] > take[-1]:\n                if lst[i + 1] < lst[i]:\n                    take.append(lst[i])\n            elif lst[i] < take[-1]:\n                if lst[i + 1] > lst[i]:\n                    take.append(lst[i])\n    line = str(len(take)) + '\\n'\n    for i in take:\n        line += str(i) + ' '\n    print(line)\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    ans = [p[0]]\n    for i in range(n-2):\n        if (p[i]-p[i+1])*(p[i+1]-p[i+2])<0:\n            ans.append(p[i+1])\n    ans.append(p[-1])\n    print(len(ans))\n    print(*ans)", "T = int(input())\n\nfor t in range(T):\n    N = int(input())\n\n    P = [int(_) for _ in input().split()]\n    up = P[1] > P[0]\n    res = [P[0]]\n\n    for i in range(1, N-1):\n        if up and P[i+1] < P[i]:\n            res.append(P[i])\n            up = False\n        elif not up and P[i+1] > P[i]:\n            res.append(P[i])\n            up = True\n\n    if P[N-1] != P[N-2]:\n        res.append(P[N-1])\n\n    print(len(res))\n    print(' '.join(map(str, res)))\n", "def f(n,l):\n    output = [l[0]]\n    for i in range(1,n-1):\n        if (l[i]-l[i-1])*(l[i+1]-l[i]) < 0:\n            output.append(l[i])\n    output.append(l[-1])\n    return str(len(output))+'\\n'+' '.join([str(x) for x in output])\n\nnumberofcases = int(input())\nfor _ in range(numberofcases):\n    n = int(input())\n    l = [int(t) for t in input().split()]\n    print(f(n,l))", "def help():\n\tn = int(input())\n\tarr = list(map(int,input().split(\" \")))\n\n\tpeak = [False]*n\n\tdown = [False]*n\n\tfor i in range(n):\n\t\tif(i==0):\n\t\t\tif(arr[0]<arr[1]):\n\t\t\t\tdown[0]=True\n\t\t\tif(arr[0]>arr[1]):\n\t\t\t\tpeak[i]=True\n\t\telif(i==n-1):\n\t\t\tif(arr[n-1]<arr[n-2]):\n\t\t\t\tdown[i]=True\n\t\t\tif(arr[n-1]>arr[n-2]):\n\t\t\t\tpeak[i]=True\n\t\telse:\n\t\t\tif(arr[i-1]<arr[i] and arr[i]>arr[i+1]):\n\t\t\t\tpeak[i]=True\n\t\t\telif(arr[i-1]>arr[i] and arr[i]<arr[i+1]):\n\t\t\t\tdown[i]=True\n\tseries = []\n\tfor i in range(n):\n\t\tif(peak[i]==True or down[i]==True):\n\t\t\tseries.append(i)\n\tans = 0\n\tfor i in range(len(series)-1):\n\t\tans += abs(series[i]-series[i+1])\n\tprint(len(series))\n\tfor i in range(len(series)):\n\t\tprint(arr[series[i]],end=\" \")\n\tprint()\n\nfor _ in range(int(input())):\n\thelp()\n", "import sys\n\nT = int(sys.stdin.readline().strip())\nfor t in range (0, T):\n    n = int(sys.stdin.readline().strip())\n    p = list(map(int, sys.stdin.readline().strip().split()))\n    ans = [p[0]]\n    for i in range(1, n):\n        if p[i] != ans[-1]:\n            if len(ans) == 1:\n                ans.append(p[i])\n            else:\n                if (ans[-2] - ans[-1]) * (ans[-1] - p[i]) > 0:\n                    ans.pop()\n                ans.append(p[i])\n    print(len(ans))\n    print(\" \".join(list(map(str, ans))))\n\n    \n    \n"]