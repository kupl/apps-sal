["import sys\ninput = sys.stdin.readline\nfrom collections import defaultdict\n\nclass Unionfind:\n    def __init__(self, n):\n        self.par = [-1]*n\n        self.rank = [1]*n\n    \n    def root(self, x):\n        r = x\n        \n        while not self.par[r]<0:\n            r = self.par[r]\n        \n        t = x\n        \n        while t!=r:\n            tmp = t\n            t = self.par[t]\n            self.par[tmp] = r\n        \n        return r\n    \n    def unite(self, x, y):\n        rx = self.root(x)\n        ry = self.root(y)\n        \n        if rx==ry:\n            return\n        \n        if self.rank[rx]<=self.rank[ry]:\n            self.par[ry] += self.par[rx]\n            self.par[rx] = ry\n            \n            if self.rank[rx]==self.rank[ry]:\n                self.rank[ry] += 1\n        else:\n            self.par[rx] += self.par[ry]\n            self.par[ry] = rx\n    \n    def is_same(self, x, y):\n        return self.root(x)==self.root(y)\n    \n    def count(self, x):\n        return -self.par[self.root(x)]\n\nt = int(input())\n\nfor _ in range(t):\n    n, k = map(int, input().split())\n    s = input()[:-1]\n    uf = Unionfind(n)\n    \n    for i in range(n//2):\n        uf.unite(i, n-1-i)\n    \n    for i in range(n-k):\n        uf.unite(i, i+k)\n    \n    d = defaultdict(dict)\n    \n    for i in range(n):\n        if s[i] not in d[uf.root(i)]:\n            d[uf.root(i)][s[i]] = 1\n        else:\n            d[uf.root(i)][s[i]] += 1\n    \n    rs = set(uf.root(i) for i in range(n))\n    ans = 0\n    \n    for r in rs:\n        ans += uf.count(r)-max(list(d[r].values()))\n    \n    print(ans)", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N, K = list(map(int, input().split()))\n        S = input().rstrip('\\n')\n\n        cnt = [[0] * K for _ in range(26)]\n        for i, s in enumerate(S):\n            j = ord(s) - 97\n            cnt[j][i%K] += 1\n        ans = 0\n        L = (N//K) * 2\n        for i in range(K//2):\n            tmp = N+1\n            for j in range(26):\n                tmp = min(tmp, L - (cnt[j][i] + cnt[j][K-i-1]))\n            ans += tmp\n        if K&1:\n            tmp = N+1\n            for j in range(26):\n                tmp = min(tmp, N//K - cnt[j][K//2])\n            ans += tmp\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\ndef calc(n, k, A):\n    X = [[0] * 26 for _ in range((k+1)//2)]\n    for i, a in enumerate(A):\n        j = i % k\n        j = min(j, k-1-j)\n        X[j][a] += 1\n    return sum([sum(x) - max(x) for x in X])\n\nT = int(input())\nfor _ in range(T):\n    N, K = list(map(int, input().split()))\n    S = [ord(a) - 97 for a in input()]\n    print(calc(N, K, S))\n\n", "import sys\ninput=sys.stdin.readline\nt=int(input())\ndef find(no):\n    nonlocal par\n    if par[no]==no:\n        return no\n    par[no]=find(par[no])\n    return par[no]\nfor _ in range(t):\n    n,k=list(map(int,input().split()))\n    s=[ord(i)-97 for i in input()]\n    \n    par=[i for i in range(n)]\n    vis=[0 for i in range(n)]\n    for i in range(k):\n        for j in range(i,n,k):\n        \n            vis[j]=1\n            x=n-j-1\n            aa=find(x)\n            bb=find(j)\n            par[bb]=aa\n            if(j>i):\n                aa=find(j-k)\n                bb=find(j)\n                par[bb]=aa\n    tot=n\n    aa=set(par)\n    co=[[0 for i in range(26)] for j in range(n)]\n   # print(par)\n    for i in range(n):\n        co[par[i]][s[i]]+=1\n    tot-=sum([max(i) for i in co])\n    print(tot)\n        \n        \n    \n            \n                \n            \n    \n    \n    \n"]