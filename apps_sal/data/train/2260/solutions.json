["import random\nimport math\n\ndef set_color(game, color):\n    color_count[game[0]][game[2]] -= 1\n    color_count[game[1]][game[2]] -= 1\n    game[2] = color\n    color_count[game[0]][game[2]] += 1\n    color_count[game[1]][game[2]] += 1\n\ndef fix(node):\n    minimum = math.inf\n    maximum = 0\n\n    for i in range(k):\n        minimum = min(minimum, color_count[node][i])\n        maximum = max(maximum, color_count[node][i])\n\n    if maximum - minimum <= 2:\n        return False\n\n    rand = 0\n    for game in games:\n        if (game[0] == node or game[1] == node) and color_count[node][game[2]] == maximum:\n            rand = r(1,k)\n            set_color(game, rand % k)\n            return True\n\n    return False\n\nn, m, k = list(map(int,input().split()))\ngames = [[0 for _ in range(4)] for _ in range(m)]\ncolor_count = [[0 for _ in range(k)] for _ in range(n)]\nanswers = [0 for _ in range(m)]\n_ = list(map(int,input().split()))\n\ncolor = 0\nr = lambda x,y : random.randint(x,y)\nfor i in range(m):\n    a, b = list(map(int,input().split()))\n    color = r(1,k) % k\n    games[i] = [a-1,b-1,color,i]\n    color_count[games[i][0]][color] += 1\n    color_count[games[i][1]][color] += 1\n\nbad = True\n\nwhile bad:\n    random.shuffle(games)\n    bad = False\n\n    for i in range(n):\n        while(fix(i)):\n            bad = True\n\nfor game in games:\n    answers[game[3]] = game[2] + 1\n\nfor i in range(m):\n    print(answers[i])\n        \n\n    \n"]