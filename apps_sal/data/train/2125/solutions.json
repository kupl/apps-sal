["# http://codeforces.com/problemset/problem/848/B\nfrom collections import defaultdict\n\n\ndef get_dest(start, w, h):\n    if start[0] == 1:\n        return (str(start[1]), str(h))\n    else:\n        return (str(w), str(start[1]))\n\n\nn, w, h = [int(x) for x in input().split()]\ndancers = []\ngroups = defaultdict(list)\ndestinations = [None for x in range(n)]\nfor ii in range(n):\n    g, p, t = [int(x) for x in input().split()]\n    dancers.append((g, p, t))\n    groups[p-t].append(ii)\n\n\nfor gg in list(groups.values()):\n    V, H = [], []\n    for ii in gg:\n        dancer = dancers[ii]\n        if dancer[0] == 1:\n            V.append(dancer)\n        else:\n            H.append(dancer)\n    V.sort(key=lambda x: -x[1])\n    H.sort(key=lambda x: x[1])\n    table = {orig: get_dest(new, w, h) for orig, new in zip(V+H, H+V)}\n    for ii in gg:\n        destinations[ii] = table[dancers[ii]]\n\n# print(destinations)\nfor dd in destinations:\n    print(\" \".join(dd))\n", "from collections import namedtuple\n\nDancer = namedtuple('Dancer', ['category', 'x', 'y', 'idx', 'group'])\n\ndef read_dancer(idx):\n\tgroup, pos, time = [int(x) for x in input().split(' ')]\n\tx, y = None, None\n\tif group == 1:\n\t\tx, y = pos, 0\n\telse:\n\t\tx, y = 0, pos\n\treturn Dancer(time-pos, x, y, idx, group)\n\nn, w, h = [int(x) for x in input().split(' ')]\n\ndancers = [read_dancer(idx) for idx in range(n)]\n\ndancers_in = sorted(dancers, key = lambda d: (d.category, -d.group, d.x, -d.y))\ndancers_out = sorted(dancers, key = lambda d: (d.category, d.group, d.x, -d.y))\n\n\nend_pos = [None for _ in range(n)]\n\ndef get_end_pos(dancer):\n\tx, y = None, None\n\tif dancer.x == 0:\n\t\tx, y = w, dancer.y\n\telse:\n\t\tx, y = dancer.x, h\n\treturn (x, y)\n\nfor i in range(n):\n\tend_pos[dancers_in[i].idx] = get_end_pos(dancers_out[i])\n\nfor i in range(n):\n\tprint(*end_pos[i])", "n,w,h = list(map(int,input().split()))\n\n\n\nD = []\n\n\n\noriginal = []\n\n\n\nfor i in range(n):\n\n  g,p,t = list(map(int,input().split()))\n\n\n\n  a = p-t\n\n\n\n  p = p if g == 1 else -p\n\n\n\n  original.append(())\n\n  D.append((a,p,i))\n\n\n\nD.sort()\n\n\n\nfrom bisect import bisect\n\n\n\nres = [None]*n\n\n\n\ni = 0\n\nwhile i < len(D):\n\n  a = D[i][0]\n\n  j = bisect(D, (a+1,-n,0), lo=i)\n\n  m = bisect(D, (a,0,0), lo=i,hi=j)\n\n\n\n  L = D[i:j]\n\n  R = D[m:j]+D[i:m]\n\n\n\n  for t in range(len(L)):\n\n    _,_,d = L[t]\n\n    _,p,_ = R[t]\n\n    if p > 0:\n\n      res[d] = (p,h)\n\n    else:\n\n      res[d] = (w,-p)\n\n\n\n  i = j\n\n\n\nprint('\\n'.join(str(x)+' '+str(y) for x,y in res))\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "# https://codeforces.com/problemset/problem/848/B\n\ndef push(d, val, type_, arr):\n    # pos index\n    type_ %= 2\n    if val not in d:\n        d[val] = [[],[]]\n    d[val][type_].append(arr)\n\nd = {}\n\nn, w, h = map(int, input().split())\nfor index in range(n):\n    g, p, t = map(int, input().split())\n    push(d, p-t, g, [p ,index])\n    \nfor k, v in d.items():\n    v[0]=sorted(v[0], key = lambda x: x[0], reverse=True)\n    v[1]=sorted(v[1], key = lambda x: x[0], reverse=False)\n    \nans = [0] * n\n\nfor v in d.values():\n    cur=0\n    bound = len(v[1])\n    step  = len(v[0])\n    merge = v[0]+v[1]\n    n_    = len(merge)\n\n    for pos, index in merge:\n        if cur<bound:\n            ans[index]=str(merge[(step+cur)%n_][0])+' '+str(h)\n        else:\n            ans[index]=str(w)+' '+str(merge[(step+cur)%n_][0])\n        cur+=1    \nprint('\\n'.join(ans))    "]