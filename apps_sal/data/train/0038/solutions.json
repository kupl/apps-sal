["q = int(input())\nfor z in range(q):\n    n, k1, k2 = map(int, input().split())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    if max(arr1) > max(arr2):\n        print('YES')\n    else:\n        print('NO')", "t = int(input())\n\nfor _ in range(t):\n    n, k1, k2 = list(map(int, input().strip().split()))\n    prvi = list(map(int, input().strip().split()))\n    drugi = list(map(int, input().strip().split()))\n\n    if max(prvi) > max(drugi):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    n, k1, k2 = map(int,input().split())\n    l1 = list(map(int,input().split()))\n    a = max(l1)\n    l2 = list(map(int,input().split()))\n    b = max(l2)\n    if a > b:\n        print(\"YES\")\n    else :\n        print(\"NO\")", "a = int(input())\nfor i in range(a):\n    n, k1, k2 = list(map(int, input().split()))\n    k11 = list(map(int, input().split()))\n    k22 = list(map(int, input().split()))\n    if max(k11) > max(k22):\n        print('YES')\n    else:\n        print('NO')\n", "from math import *\nimport os, sys\nfrom bisect import *\nfrom io import BytesIO\n\n#input = BytesIO(os.read(0, os.fstat(0).st_size)).readline\nsys.setrecursionlimit(10 ** 9)\n#sys.stdin = open(\"moobuzz.in\", 'r')\n#sys.stdout = open(\"moobuzz.out\", 'w')\n\nfor _ in range(int(input())):\n\tn, k1, k2 = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\tif max(a) > max(b):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "t = int(input())\nfor rwuer in range(t):\n\tn,k1,k2 = map(int,input().split())\n\tl1 = list(map(int,input().split()))\n\tl2 = list(map(int,input().split()))\n\ta1 = max(l1)\n\ta2 = max(l2)\n\tif a1>a2:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")", "def solve():\n    n, k1, k2 = list(map(int, input().split()))\n    m1 = max(list(map(int, input().split())))\n    m2 = max(list(map(int, input().split())))\n    if m1 > m2:\n        print('YES')\n    else:\n        print('NO')\n\n\ndef main():\n    t = int(input())\n    # t = 1\n    for _ in range(t):\n        solve()\n\n\nmain()\n", "t = int(input())\nfor _ in range(t):\n    n, k1, k2 = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    if max(a) > max(b):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t=int(input())\nfor _ in range(t):\n    n,k1,k2=list(map(int,input().split()))\n    a1=sorted(list(map(int,input().split())))\n    a2=sorted(list(map(int,input().split())))\n    if(n in a1):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "for tc in range(int(input())):\n    input()\n    lsa = list(map(int, input().split()))\n    lsb = list(map(int, input().split()))\n    print('YES' if max(max(lsa),max(lsb)) in lsa else 'NO')\n", "t = int(input())\nfor i in range(t):\n    n, k1, k2 = list(map(int, input().split()))\n    a = max(list(map(int, input().split())))\n    b = max(list(map(int, input().split())))\n    if a > b:\n        print('YES')\n    else:\n        print('NO')\n", "q = int(input())\nwhile q:\n    n, k1, k2 = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if max(a) > max(b):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    q -= 1\n", "t = int(input())\n\nfor test in range(t):\n    input()\n    max1 = max(list(map(int,input().split())))\n    max2 = max(list(map(int,input().split())))\n    if max1 > max2:\n        print('YES')\n    else:\n        print('NO')\n", "import sys\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ngo = lambda : 1/0\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}{}\".format(i, sep))\nINF = float('inf')\nMOD = int(1e9 + 7)\nYES = \"YES\"\nNO = \"NO\"\n\nfor _ in range(int(input())):\n  n, x, y = read()\n  X = read()\n  Y = read()\n\n  if n in X:\n    print(YES)\n  else:\n    print(NO)\n", "for case in range(int(input())):\n    input()\n    a=max(list(map(int,input().split())))\n    b=max(list(map(int,input().split())))\n    print('YES' if a>b else 'NO')", "t=int(input())\nfor q in range(t):\n    n,k1,k2=map(int,input().split())\n    a1=max(list(map(int,input().split())))\n    a2=max(list(map(int,input().split())))\n    if a1>a2:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "for _ in range(int(input())):\n    n,k1A,k2A = list(map(int,input().split()))\n    k1 = list(map(int,input().split()))\n    k2 = list(map(int,input().split()))\n    print(\"YES\" if max(k1) > max(k2) else \"NO\")", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nimport heapq\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n \n# M = mod = 998244353\ndef factors(n):return sorted(list(set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split(' ')]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n').split(' ')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n \n\nfor _ in range(val()):\n    n,k1,k2 = li()\n    a = sorted(li())\n    b = sorted(li())\n    print('YES' if a[-1]>b[-1] else 'NO')\n", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport random\n\n\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef wr(arr): return ' '.join(map(str, arr))\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nt = ii()\nfor _ in range(t):\n    n, k1, k2 = mi()\n    a = li()\n    b = li()\n    if max(a) > max(b):\n        print('YES')\n    else:\n        print('NO')\n", "t = int(input())\nfor query in range(t):\n    n, k1, k2 = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    if n in A:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t = int(input())\n\nfor qwe in range(t):\n\tn, k1, k2 = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\n\tif max(a) == n:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")", "for _ in range(int(input())):\n\tn,k1,k2 = map(int,input().split())\n\ta = list(map(int,input().split()))\n\tb = list(map(int,input().split()))\n\tif n in a:\n\t\tprint(\"YES\")\n\telse: print(\"NO\")\t", "for i in range(int(input())):\n    n, k1, k2 = list(map(int, input().split()))\n    u = max(list(map(int, input().split())))\n    v = max(list(map(int, input().split())))\n    if u < v:\n        print('NO')\n    else:\n        print('YES')\n", "t=int(input())\nfor l in range(t):\n    n,k1,k2=list(map(int,input().split()))\n    arr1=list(map(int,input().split()))\n    arr2=list(map(int,input().split()))\n    if(max(arr1)>max(arr2)):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "for i in ' '*int(input()):\n    n,k1,k2=map(int,input().split())\n    L1=list(map(int,input().split()))\n    L2=list(map(int,input().split()))\n    if max(L1)>max(L2):print('YES')\n    else:print('NO')", "def case():\n    n, k1, k2 = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if max(a) > max(b):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nfor _ in range(int(input())):\n    case()", "for _ in range(int(input())):\n    n,k1,k2 = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    max1 = max(arr)\n    max2 = max(brr)\n    if max1>max2:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t = int(input())\nfor i in range(t):\n    n,k1,k2 = list(map(int,input().split()))\n    s1 = max(list(map(int,input().split())))\n    s2 = max(list(map(int,input().split())))\n    if s1 == n:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t=int(input())\nfor i in range(t):\n    n, k1, k2=list(map(int, input().split()))\n    d=max(list(map(int, input().split())))\n    d1=max(list(map(int, input().split())))\n    if d>d1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n"]