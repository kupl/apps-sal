["# cook your dish here\nfor _ in range(int(input())):\n d=dict()\n ls=[]\n for i in range(int(input())):\n  ls=list(map(int,input().split()))\n  if ls[0] in d:\n   d[ls[0]]=max(ls[1],d[ls[0]])\n  else:\n   d[ls[0]]=ls[1]\n # print(d)\n if len(d)<3:\n  print(0)\n else:\n  kd=list(d.values())\n  kd.sort()\n  # print(kd)\n  print(kd[-1]+kd[-2]+kd[-3])\n", "# cook your dish here\nfor _ in range(int(input())):\n d=dict()\n ls=[]\n for i in range(int(input())):\n  ls=list(map(int,input().split()))\n  if ls[0] in d:\n   d[ls[0]]=max(ls[1],d[ls[0]])\n  else:\n   d[ls[0]]=ls[1]\n # print(d)\n if len(d)<3:\n  print(0)\n else:\n  kd=list(d.values())\n  kd.sort()\n  # print(kd)\n  print(kd[-1]+kd[-2]+kd[-3])\n", "# cook your dish here\nfor _ in range(int(input())):\n d=dict()\n ls=[]\n for i in range(int(input())):\n  ls=list(map(int,input().split()))\n  if ls[0] in d:\n   d[ls[0]]=max(ls[1],d[ls[0]])\n  else:\n   d[ls[0]]=ls[1]\n # print(d)\n if len(d)<3:\n  print(0)\n else:\n  kd=list(d.values())\n  kd.sort()\n  # print(kd)\n  print(kd[-1]+kd[-2]+kd[-3])\n", "try:\n from sys import stdin as si , stdout as so\n\n for _ in range(int(si.readline())):\n  m = {}\n  n = int(si.readline())\n \n  for i in range(n):\n   a , b = map(int , si.readline().split())\n   if a not in m:\n    m[a] = b\n   else:\n    m[a] = max(m[a] , b)\n \n  if len(m) < 3:\n   so.write(str(0) + '\\n')\n  else:\n   l = list(m.values())\n   l.sort()\n   so.write(str(l[-1] + l[-2] + l[-3]) + '\\n')\nexcept:\n pass", "\ndef optimize(d):\n l = list(d.keys())\n if(len(l)<3):\n  return 0\n else:\n  j = []\n  for i in l:\n   j.append(d[i])\n  j.sort()\n  return (j[len(j)-1] + j[len(j)-2] + j[len(j)-3])\n\n\ntry:\n for _ in range(int(input())):\n  x,y,d=[],[],{}\n  for i in range(int(input())):\n   j = list(map(int,input().strip().split()))\n   x.append(j[0])\n   y.append(j[1])\n   if(x[i] not in d):\n    d[x[i]] = y[i]\n   else:\n    d[x[i]] = max(y[i], d[x[i]])\n  print(optimize(d))\nexcept EOFError as e : pass\n", "from collections import defaultdict\nfrom operator import itemgetter\nfor _ in range(int(input())):\n n=int(input())\n d=defaultdict(list)\n for i in range(n):\n  x,y=map(int,input().split( ))\n  if not d[x]:\n   d[x].append(y)\n  else:\n   d[x][0]=max(d[x][0],y)\n #print(d)\n \n l=sorted(d.items(),key=itemgetter(1))[::-1]\n #print(l)\n try:\n  print(sum(l[0][1]+l[1][1]+l[2][1]))\n except:\n  print(0)", "for _ in range(int(input())):\n n=int(input())\n d={}\n for i in range(n):\n  x,y=list(map(int,input().split( )))\n  if x not in d:\n   d[x]=[]\n   d[x].append(y)\n  else:\n   d[x][0]=max(d[x][0],y)\n y=[]\n for v in d:\n  y.extend(d[v])\n #print(y)\n if len(y)>=3:\n  v1=max(y)\n  y.remove(v1)\n  v2=max(y)\n  y.remove(v2)\n  v3=max(y)\n  y.remove(v3)\n  print(v1+v2+v3)\n else:\n  print(0)\n", "from collections import defaultdict\nfrom operator import itemgetter\nfor _ in range(int(input())):\n n=int(input())\n d=defaultdict(list)\n for i in range(n):\n  x,y=list(map(int,input().split( )))\n  if not d[x]:\n   d[x].append(y)\n  else:\n   d[x][0]=max(d[x][0],y)\n y=[]\n for v in d:\n  y.extend(d[v])\n #print(y)\n if len(y)>=3:\n  v1=max(y)\n  y.remove(v1)\n  v2=max(y)\n  y.remove(v2)\n  v3=max(y)\n  y.remove(v3)\n  print(v1+v2+v3)\n else:\n  print(0)\n", "# cook your dish here\nT = int(input())\n\nfor _ in range(T):\n\n res = 0\n N = int(input())\n X = []\n Y = []\n for i in range(N):\n  words = input().split()\n  X.append(int(words[0]))\n  Y.append(int(words[1]))\n\n d = {}\n\n for i in range(N):\n  if(X[i] not in d.keys()):\n   d[X[i]] = []\n   d[X[i]].append(Y[i])\n  else:\n   d[X[i]].append(Y[i])\n\n #print(d)\n sum_lst = []\n for key in d.keys():\n  maxi = d[key][0]\n  for num in d[key]:\n   if(maxi<num):\n    maxi = num\n  sum_lst.append(maxi)\n\n if(len(sum_lst)>=3):\n  max1 = max(sum_lst)\n  sum_lst.remove(max1)\n  max2 = max(sum_lst)\n  sum_lst.remove(max2)\n  max3 = max(sum_lst)\n  res = max1 + max2 + max3\n else:\n  res = 0\n\n print(res)", "T = int(input())\n\nfor _ in range(T):\n\n res = 0\n N = int(input())\n X = []\n Y = []\n for i in range(N):\n  words = input().split()\n  X.append(int(words[0]))\n  Y.append(int(words[1]))\n\n d = {}\n\n for i in range(N):\n  if(X[i] not in d.keys()):\n   d[X[i]] = []\n   d[X[i]].append(Y[i])\n  else:\n   d[X[i]].append(Y[i])\n\n #print(d)\n sum_lst = []\n for key in d.keys():\n  maxi = d[key][0]\n  for num in d[key]:\n   if(maxi<num):\n    maxi = num\n  sum_lst.append(maxi)\n\n if(len(sum_lst)>=3):\n  max1 = max(sum_lst)\n  sum_lst.remove(max1)\n  max2 = max(sum_lst)\n  sum_lst.remove(max2)\n  max3 = max(sum_lst)\n  res = max1 + max2 + max3\n else:\n  res = 0\n\n print(res)", "for r in range(int(input())):\n x,y,d =[],[],{}\n for p in range(int(input())):\n  j=list(map(int,input().split()))\n  x.append(j[0]),y.append(j[1])\n  if(x[p] not in d):d[x[p]]=y[p]\n  else:d[x[p]]=max(y[p],d[x[p]])\n l=list(d.keys())\n if(len(l)<3):print(0)\n else:\n  j=[]\n  for x in l: j.append(d[x])\n  j.sort()\n  print(j[len(j)-1]+j[len(j)-2]+j[len(j)-3])", "t=int(input())\nfor r in range(0,t):\n n=int(input())\n x,y=[],[]\n d={}\n for p in range(n):\n  j=list(map(int,input().split()))\n  x.append(j[0])\n  y.append(j[1])\n  if(x[p] not in d):\n   d[x[p]]=y[p]\n  else:\n   d[x[p]]=max(y[p],d[x[p]])\n l=list(d.keys())\n if(len(l)<3):\n  print(0)\n else:\n  j=[]\n  for x in l:\n   j.append(d[x])\n  j.sort()\n  print(j[len(j)-1]+j[len(j)-2]+j[len(j)-3])", "import sys\nimport queue\n\nt = int(input())\n\n\n\nwhile(t):\n\n n = int(input())\n d = {}\n\n for i in range(n):\n  line = input().split()\n  x = int(line[0])\n  y = int(line[1])\n  if (x not in d):\n   d[x] = y\n  else:\n   d[x] = max(d[x],y)\n\n p = list(d.items())\n\n n = len(p)\n for i in range(n):\n  p[i] = (p[i][1],p[i][0])\n\n p.sort()\n #print(p)\n\n if (len(p) > 2):\n  n = len(p)\n  sys.stdout.write(str(p[n-1][0]+p[n-2][0]+p[n-3][0])+\"\\n\")\n else:\n  sys.stdout.write(\"0\\n\")\n\n t -= 1\n\n \n  \n    \n   \n\n  \n", "t = int(input())\nwhile t:\n t-=1\n n = int(input())\n d = dict()\n for i in range(n):\n  x,y = map(int,input().split())\n  f = d.get(x)\n  if f == None:\n   d[x] = y\n  else:\n   d[x] = max(d[x],y)\n z = sorted(d.values())[::-1]\n l = len(z)\n if l<3:\n  print(0)\n else:\n  print(z[0]+z[1]+z[2])", "# Author: Dancing Monkey | Created: 09.DEC.2018\n\nfor _ in range(int(input())):\n n = int(input())\n l = []\n for i in range(n):\n  x, y = map(int, input().split())\n  l.append((y, x))\n l.sort(reverse=True)\n\n y1, x1 = l[0]\n y2 = x2 = y3 = x3 = -1\n i = 1\n while i < n:\n  y, x = l[i]\n  if x == x1:p = 0\n  else:\n   y2, x2 = y, x\n   break\n  i += 1\n\n if i == n:\n  print(0)\n  continue\n while i < n:\n  y, x = l[i]\n  if x == x1 or x == x2:p = 1\n  else:\n   y3, x3 = y, x\n   break\n  i += 1\n if i == n:\n  print(0)\n  continue\n\n print(y3 + y2 + y1)", "for _ in range(int(input())):\n n=int(input())\n l=[]\n x=set()\n res=0\n for z in range(n):\n  xi,yi=(list(map(int,input().split())))\n  x.add(xi)\n  l.append([xi,yi])\n l.sort(reverse=True, key= lambda q: q[1])\n if len(x)<3:\n  res=0\n else:\n  temp=[]\n  for i in range(n):\n   if len(temp)==3:\n    break\n   elif l[i][0] in temp:\n    continue\n   else:\n    res+=l[i][1]\n    temp.append(l[i][0])\n print(res)\n \n \n", "t=int(input())\nfor i in range(t):\n  a=[]\n  n=int(input())\n  for i in range(n):\n    x,y=[int(i) for i in input().split()]\n    a.append((x,y))\n  a.sort()\n  #print(a)\n  q=a[0][0]\n  z=[]\n  for i in range(1,n):\n    #print(a[i][0],q)\n    if a[i][0]!=q:\n      z.append(a[i-1][1])\n      #print(a[i])\n      q=a[i][0]\n  z.append(a[n-1][1])\n  l=len(z)\n  if l<3:\n    print(0)\n  else:\n    z.sort()\n    print(z[l-1]+z[l-2]+z[l-3])\n", "for T in range(int(input())):\n\n N = int(input())\n \n d = dict()\n for i in range(N):\n  x,y = list(map(int,input().split()))\n\n  f = d.get(x)\n\n  if f==None:\n   d[x] = y\n  else:\n   d[x] = max(f,y)\n\n l = len(d)\n\n if l<3:\n  print(0)\n else:\n  Y = sorted(list(d.items()), key=lambda x: x[1])\n  print(Y[l-1][1]+Y[l-2][1]+Y[l-3][1])\n\n"]