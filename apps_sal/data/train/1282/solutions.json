["l= []\nfor i in range(62):\n l.append(2**i)\nT = int(input())\n\nflag = 0\nfor t in range(T):\n L,R = [int(i) for i in input().split()]\n bL = bin(L)\n lL = len(bL)-2\n index = 1\n ans = 0\n temp = 0\n \n while(index<=lL):\n  temp = L%l[index]\n  if temp>=l[index-1]:\n   if(l[index]-temp<=R-L+1):\n    ans= (ans +(l[index-1])*(l[index]-temp))%1000000007\n   else :\n    ans=(ans+(l[index-1])*(R-L+1))%1000000007\n   \n   \n  index+=1\n print(ans)\n#    4378578345 584758454958\n# 18091037982636824985 8589934592 4429185025 4294967296\n", "mod=int(1e9)+7\nt=int(input())\nwhile t:\n t-=1\n l, r= map(int , input().split())\n binl=bin(l)[:1:-1]\n f, cnt, ans=1, 0, 0\n for i in binl:\n  if i=='1':\n   ans= (ans+f*min(f-cnt, r-l+1))%mod\n   cnt+=f\n  f*=2\n print(ans)", "MOD = 1000000007\na=int(input())\nfor i in range(a):\n \n x,y = list(map(int,input().split()))\n start = x\n end = y\n ans = x\n prev = x\n z = x\n j=-1\n while(start!=0):\n  j+=1\n   \n  if((z&1) != 0):\n    \n   add = 1 << j\n   next = (start + add)\n   if(next > end):\n    ans=(ans+(((end-prev))*(start)))\n    \n    break\n   \n   ans =(ans+ ((((next-prev-1))*(start)) + (start-add)))\n   \n   ans%=MOD\n   start-=add\n   if(next == end):\n    break\n   \n   prev = next\n   \n  \n  \n  z = z>>1\n \n print(ans%MOD)\n \n\n\n\n", "MOD = 1000000007\na=int(input())\nfor i in range(a):\n \n x,y = list(map(int,input().split()))\n start = x\n end = y\n ans = x\n prev = x\n z = x\n j=-1\n while(start!=0):\n  j+=1\n   \n  if((z&1) != 0):\n    \n   add = pow(2,j)\n   next = (start + add)\n   if(next > end):\n    ans=(ans+(((end-prev))*(start)))\n    \n    break\n   \n   ans =(ans+ ((((next-prev-1))*(start)) + (start-add)))\n   \n   ans%=MOD\n   start-=add\n   if(next == end):\n    break\n   \n   prev = next\n   \n  \n  \n  z = z>>1\n \n print(ans%MOD)\n \n\n\n\n", "t=int(input())\nwhile(t):\n t-=1\n l,r = [int(i) for i in input().split()]\n bl = bin(l)[2:]\n bl = bl[::-1]\n sub = 0\n val = 1\n ans = 0\n mod = 10**9 + 7\n for i in range (len(bl)):\n  if bl[i] == '1':\n   ans+= val*(min(val-sub,r-l+1))%mod\n   sub+=val\n  val*=2\n print(ans%mod)\n", "m = [1]\nmod = 10**9+7\nfor i in range (60):\n a = m[-1]\n a *=2\n a %=mod\n m.append(a)\n \nfor i in range (int(input())):\n L,R = map(int,input().split())\n tmp = 0\n l = bin(L)[2:]\n r = bin(R)[2:]\n a = 1\n ans = L%mod\n for i in range (1,len(l)+1):\n  if(l[-i]=='0'):\n   if tmp+2**(i-1)<=R-L:\n    ans +=((m[i-1])*(L-a+1))%mod\n    tmp +=2**(i-1)\n    ans %=mod\n   else:\n    ans +=((R-L-tmp)*(L-a+1))%mod\n    ans %=mod\n    break\n  else:\n   a +=m[i-1]\n print(ans)", "mod = 10**9+7\nt = int(input())\nwhile(t>0):\n l, r = map(int, input().split())\n ans = 0\n for i in range(63):\n  if(l&(1<<i)):\n   x =(1<<i) - (l&((1<<i)-1))\n   x = min(x, (r-l+1))\n   ans += x*(1<<i)\n print(ans%mod)\n \n \n \n t = t-1", "from sys import stdin, stdout\nmod=(1000*1000*1000+7)\nfor i in range(int(stdin.readline())):\n l,r=map(int,stdin.readline().split())\n act=0\n req=0\n ans=0\n for i in range(60):\n  val=min(r-l+1,req-act+1)\n  val%=mod\n  if(l&(1<<i)):\n   ans+=(val*((1<<i)%mod))%mod\n   ans%=mod\n   act+=(1<<i)\n  req+=(1<<i)\n print(ans)", "from sys import stdin\nmod=(1000*1000*1000+7)\nfor i in range(int(stdin.readline())):\n l,r=map(int,stdin.readline().split())\n act=0\n req=0\n ans=0\n for i in range(60):\n  val=min(r-l+1,req-act+1)\n  val%=mod\n  if(l&(1<<i)):\n   ans+=(val*((1<<i)%mod))%mod\n   ans%=mod\n   act+=(1<<i)\n  req+=(1<<i)\n print(ans)", "# Ankan Kumar Das\n# Date : 27/02/2020\nMOD = 10**9 + 7\nfor _ in range(int(input())):\n l, r = map(int, input().split())\n max_no_elm = r - l + 1\n ans, multi, l_p, r_p = 0, 1, l, 0\n while l_p != 0:\n  curr_bit = l_p & 1\n  if curr_bit == 1:\n   no_elm = multi - r_p\n   ans = (ans + multi * min(no_elm, max_no_elm)) % MOD\n  l_p, r_p = l_p >> 1, r_p + multi * curr_bit\n  multi = multi << 1\n print(ans)", "# https://www.codechef.com/problems/RGAND\n\nMVAL = 1000000007\n\ndef rangeand(low,hi):\n odf = hi - low + 1\n ra = 0\n p2 = 1\n lmd = 0\n while (low&p2) == 0:\n  p2 *= 2\n pmdf = p2 # lowest set bit splits an interval\n if pmdf >= odf:\n  return (odf*low)%MVAL\n while p2<=low:\n  if (low & p2):\n   lmd += p2\n   ra += (pmdf*p2)%MVAL\n  else:\n   pmdf += p2\n   if pmdf >= odf:\n    ra += (odf*(low-lmd))%MVAL\n    break\n  p2 *= 2\n\n return ra%MVAL\n\nt = int(input())\nans =[]\nfor ti in range(t):\n l,r = map(int,input().split())\n\n ans.append( rangeand(l,r) )\n\nprint( *ans, sep='\\n' )\n", "# https://www.codechef.com/problems/RGAND\n\nMVAL = 1000000007\n\ndef rangeand(low,hi):\n ra = 0\n p2 = 1\n lmd = 0\n ldv =low\n hdv = hi\n while p2<=low:\n  thisbit = low & p2\n  p2 *= 2\n  ldv //= 2\n  hdv //= 2\n  if ldv == hdv:\n   ra += ((hi+1-low)*(low-lmd))%MVAL\n   break\n  elif thisbit > 0:\n   lmd += thisbit\n   ra += ((p2-lmd)*thisbit)%MVAL\n return ra%MVAL\n\nt = int(input())\nfor ti in range(t):\n l,r = list(map(int,input().split()))\n\n print( rangeand(l,r) )\n", "# https://www.codechef.com/problems/RGAND\n\nMVAL = 1000000007\n\ndef rangeand(low,hi):\n ra = 0\n p2 = 1\n while p2<=low:\n  ld,lm = divmod(low,p2*2)\n  hd,hm = divmod(hi,p2*2)\n  if ld == hd:\n   ra += ((hm-lm+1)*(p2 & lm))%MVAL\n  else:\n   ra += ((p2*2-lm)*(p2 & lm))%MVAL\n  p2 *= 2\n return ra%MVAL\n\nt = int(input())\nfor ti in range(t):\n l,r = list(map(int,input().split()))\n\n print( rangeand(l,r) )\n", "for _ in range(int(input())):\n a,b=map(int,input().split())\n st=bin(a)[2:]\n s=0;m=1;ans=0\n for i in range(len(st)-1,-1,-1):\n  if(st[i]==\"1\"):\n   ans += m*min(m-s,b-a+1)\n   ans %= 1000000007\n   s+=m\n  m*=2\n print(ans)", "# cook your dish here\n\nmod = 1000000007\nt=int(input())\nwhile t:\n l,r=list(map(int,input().split( )))\n ans=0\n if l==r:\n  print(l%mod)\n else:\n  temp = l\n  i=1\n  j=1\n  while temp:\n   if temp&1:\n    tp2 = l&i\n    k=min(r-l+1,i-tp2+1)\n    ans=(ans+j*k)%mod\n   i<<=1\n   i+=1\n   j<<=1\n   temp>>=1\n  print(ans%mod)\n t-=1\n", "mod = 10**9 + 7\nfor _ in range(int(input())):\n l, r = map(int, input().split())\n z = 2\n while(z <= l):\n  z *= 2\n if(r > z):\n  r = z - 1\n z = z // 2\n ans = l\n lb = bin(l).replace(\"0b\", \"\")\n for i in lb:\n  if(i != '0'):\n   h = l % z\n   h = z - h - 1\n   if(h >= r - l):\n    g = r % z\n    g = z - g - 1\n    if(g < h):\n     h = h - g\n   ans += h * z\n  z = z // 2\n print(ans % mod)", "mod = 10**9 + 7\nt=int(input())\nfor _ in range(t):\n l, r = map(int, input().split())\n z = 2\n while(z <= l):\n  z *= 2\n if(r > z):\n  r = z - 1\n z = z // 2\n ans = l\n lb = bin(l).replace(\"0b\", \"\")\n for i in lb:\n  if(i != '0'):\n   h = l % z\n   h = z - h - 1\n   if(h >= r - l):\n    g = r % z\n    g = z - g - 1\n    if(g < h):\n     h = h - g\n   ans += h * z\n  z = z // 2\n print(ans % mod)", "import math\nfor _ in range(int(input())):\n a, b = [int(i) for i in input().split()]\n ans = 1\n sum = 0\n c = int(math.log2(a))\n for i in range(c+1):\n  doo = 2 ** i\n  po = doo & a\n  if po == doo:\n   sum += min(b-a+1, ans) * doo\n  else:\n   ans += doo\n print(sum%1000000007)\n", "# cook your dish here\nimport math\ndef optimalSol(a,b):\n power=int(math.log(a,2))\n add=0\n mod=10**9+7\n previous_i=-1\n present=0\n end=0\n for i in range(power+1):\n  bit_add=2**i\n  end+=2**i\n  if a&bit_add==bit_add:\n   present+=bit_add\n   total_added=min(b-a+1,end-present+1)\n   add+=bit_add*total_added\n return add%mod \nfor _ in range(int(input())):\n a,b=list(map(int,input().split()))\n print(optimalSol(a,b))", "modulo = int(1e9) + 7\nfor t in range(int(input())):\n l,r = map(int,input().split())\n curr = 1\n ans = 0\n for i in range(61):\n  q = (l)//curr\n  if q&1:\n   end = min(r,(q+1)*curr-1)\n   ans = (ans + (curr*(end-l+1)%modulo)%modulo)%modulo\n   #print(i,end,q,curr,ans)\n  curr *= 2\n print(ans)", "# cook your dish here\nt=int(input())\nwhile t>0:\n a,b=list(map(int,input().split()))\n k=1\n m=a\n n=b\n sum=0\n x=0\n y=1\n while a>0:\n  a=a//2\n  l=m//k\n  if l%2!=0:\n   p=k*l\n   q=k*(l+1)\n  else:\n   p=k*(l+1)\n   q=k*(l+2)\n  k*=2\n  if m>=p and m<q:\n   if b<q:\n    o=b-m+1\n    lum=((o%1000000007)*(y%1000000007))%1000000007\n    sum=sum+lum\n    sum=sum%1000000007\n   else:\n    o=q-m\n    lum=((o%1000000007)*(y%1000000007))%1000000007\n    sum=sum+lum\n    sum=sum%1000000007\n  y*=2\n print(sum)\n t-=1", "t=int(input())\nm=10**9+7\nwhile t:\n p=0\n res=0\n l,r=map(int,input().split())\n d=r-l+1\n br=bin(r)[2:]\n lbr=len(br)\n l=bin(l)[2:]\n k=-1\n lol=0\n ll=len(l)\n ind=ll-1\n \n if(2**ll>r):\n  for i in range(ll):\n   if(l[i]=='0' and br[i]=='1'):\n    ind=i\n    break\n  #print(ind)\n  for i in range(len(l)-1,ind,-1):\n   k+=1\n   if(l[i]=='1'):\n    a=2**k\n    p+=a\n    res+=(min(r+1,2**(k+1))-p)*a\n  for i in range(ind+1):\n   if(l[i]=='1'):\n    res+=2**(ll-i-1)*d\n  \n\n else:\n  for i in range(len(l)-1,-1,-1):\n   k+=1\n   if(l[i]=='1'):\n    a=2**k\n    p+=a\n    res+=(min(r+1,2**(k+1))-p)*a\n print(res%m)\n t-=1"]