["for i in range(int(input())):\n    n,g,b=map(int,input().split())\n    nn=(n+1)//2\n    print(max(nn+(nn-1)//g*b,n))", "for _ in range(int(input())):\n    n, g, b = list(map(int, input().split()))\n    half = (n - 1) // 2 + 1\n\n    ans = (g + b) * (half // g) - b  # + (half % g)\n    if half % g != 0:\n        ans += b + half % g\n    print(max(ans, n))\n", "# import sys\n#\n# input = lambda: sys.stdin.readline().strip()\nfor i in range(int(input())):\n    n,g, b = list(map(int, input().split()))\n    n1 = n\n    n = (n+1)//2\n    k = n//g\n    if n%g:\n        print(max(n1,k*(g+b)+n%g))\n    else:\n        print(max(n1,g*k+b*(k-1)))\n", "def iinput():\n    return [int(x) for x in input().split()]\n\n\ndef main():\n    n, g, b = iinput()\n    z = (n + 1) // 2\n    d = (z - 1) // g\n    return max(d * b + z, n)\n\n\nfor i in range(int(input())):\n    print(main())\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,g,b=list(map(int,input().split()))\n    ALL=(n+1)//2\n\n    ANS=n\n\n    week=-(-ALL//g)-1\n    ANS=max(ANS,week*(g+b)+(ALL-week*g))\n\n    print(ANS)\n", "t = int(input())\nfor q in range(t):\n    n, g, b = [int(i) for i in input().split()]\n    num = n\n    n = n // 2 + n % 2\n    val = n // g\n    d = 0\n    if n % g == 0:\n        d = (val - 1) * (b + g) + g\n    else:\n        d = val * (b + g) + n % g\n    if d < num:\n        print(num)\n    else:\n        print(d)\n    \n", "t = int(input())\n\ndef check(n, h, g, b, m):\n    if m < n:\n        return False\n    loop, rest = divmod(m, g + b)\n    ok = min(rest, g) + loop * g\n    return ok >= h\n\nfor _ in range(t):\n    n,g,b = list(map(int,input().split()))\n    high = (n + 1) // 2\n    ok, ng = 10 ** 20, 0\n    while ok - ng > 1:\n        mid = (ok + ng) // 2\n        if check(n, high, g, b, mid):\n            ok = mid\n        else:\n            ng = mid\n    print(ok)\n", "def solve():\n    n, g, b = [int(x) for x in input().split()]\n    l = 0\n    r = int(1e30)\n\n    while r-l > 1:\n        m = (l+r)//2\n\n        blk = m // (g + b)\n        cnt = blk * g + min(g, m % (g + b))\n\n        if cnt >= (n+1)//2:\n            r = m\n        else:\n            l = m\n    \n    print(max(r, n))\n\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ngo = lambda : 1/0\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}{}\".format(i, sep))\nINF = float('inf')\nMOD = int(1e9 + 7)\nYES = \"YES\"\nNO = \"NO\"\n\nfor _ in range(int(input())):\n  try:\n    n, g, b = read()\n\n    total = math.ceil(n / 2)  \n\n    s = 0\n    e = 1 << 63\n    while s <= e:\n      m = (s + e) // 2\n      good = 0\n      bad = 0 \n\n      x = m // (g + b)\n      good += x * g\n      bad += x * b \n\n      y = m - (m // (g + b)) * (g + b)\n      good += min(y, g)\n      bad += max(0, y - g)\n\n      if good + bad >= n and good >= total:\n        e = m - 1\n      else:\n        s = m + 1\n    \n    print(s)\n\n\n\n    \n\n  except ZeroDivisionError:\n    continue\n\n  except Exception as e:\n    print(e)\n    continue", "for _ in range(int(input())):\n\tn,g,b = map(int,input().split())\n\torign = n\n\tn = (n+1)//2\n\tcom = ((n-1)//g)\n\tans = com*(g+b)\n\tn -= com*g\n\tans += n\n\tprint(max(ans,orign))"]