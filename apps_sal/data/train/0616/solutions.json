["from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n m, n = list(map(int, stdin.readline().split()))\n final = []\n arr = []\n val = 0\n extra = 0\n for j in range(m):\n  ans = list(map(str, stdin.readline().split()))\n  if ans.count('N') == n:\n   val += 1\n  else:\n   if val%2 == 0:\n    arr.append(ans)\n    extra += val\n   else:\n    arr.append(['N']*n)\n    arr.append(ans)\n    extra += (val-1)\n   val = 0\n\n for j in range(len(arr)):\n  ans = arr[j]\n  start = -1\n  for i in range(n):\n   if ans[i] == 'P':\n    start = i\n    break\n  if start != -1:\n   for i in range(n-1, -1, -1):\n    if ans[i] == 'P':\n     end = i\n     break\n  if start != -1:\n   if len(final) == 0:\n    final.append([start, end])\n   else:\n    if j%2 == 0:\n     if final[-1][0] > start:\n      final[-1][0] = start\n     else:\n      start = final[-1][0]\n    else:\n     if final[-1][1] < end:\n      final[-1][1] = end\n     else:\n      end = final[-1][1]\n    final.append([start, end])\n  else:\n   if len(final) != 0:\n    start, end = 0, n-1\n    if j%2 == 0:\n     if final[-1][0] > start:\n      final[-1][0] = start\n     else:\n      start = final[-1][0]\n    else:\n     if final[-1][1] < end:\n      final[-1][1] = end\n     else:\n      end = final[-1][1]\n    final.append([start, end])\n if len(final) == 0:\n  print(0)\n else:\n  count = 0\n  for ele in final:\n   count += (ele[1]-ele[0]+1)\n  print(count-1+extra)\n      \n", "for _ in range(int(input())):\n \n r,c=map(int,input().split())\n \n ans=0\n \n last=-1\n flag=0\n \n cnt=0\n check=1\n \n for i in range(r):\n  \n  j=0\n  \n  values=[]\n  \n  for car in input().split():\n   \n   if(car==\"P\"):\n    values.append(j)\n    \n   j+=1\n   \n  #print(values)\n  \n  \n  \n  if(len(values)==0):\n   if(flag==0):\n    continue\n    \n   if(flag==check):\n    \n    cnt+=1\n    if(i==r-1):\n     ans-=1\n    continue\n    \n   if(flag>check):\n    check=flag\n    ans+=cnt\n    cnt=0\n    continue\n    \n \n  \n  flag+=1\n\n  if(i%2==1):\n\n   ans+=abs(min(values)-max(values))+1\n  \n   if(i==r-1):\n    ans-=1\n    \n    ans+=cnt\n    \n   if(last==-1):\n    last=min(values)\n   else:\n    \n    ans+=abs(last-max(values))\n   \n   last=min(values)\n\n  else:\n   \n   ans+=abs(max(values)-min(values))+1\n   \n   if(i==r-1):\n    ans-=1\n    ans+=cnt\n\n   if(last==-1):\n    last=max(values)\n   else:\n    ans+=abs(last-min(values))\n\n   last=max(values)\n  #print(ans)\n\n\n\n\n print(ans)", "try:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "for _ in range(int(input())):\n \n r,c=map(int,input().split())\n \n ans=0\n \n last=-1\n flag=0\n \n cnt=0\n check=1\n \n for i in range(r):\n  \n  j=0\n  \n  values=[]\n  \n  for car in input().split():\n   \n   if(car==\"P\"):\n    values.append(j)\n    \n   j+=1\n   \n  #print(values)\n  \n  \n  \n  if(len(values)==0):\n   if(flag==0):\n    continue\n    \n   if(flag==check):\n    \n    cnt+=1\n    if(i==r-1):\n     ans-=1\n    continue\n    \n   if(flag>check):\n    check=flag\n    ans+=cnt\n    cnt=0\n    continue\n    \n \n  \n  flag+=1\n\n  if(i%2==1):\n\n   ans+=abs(min(values)-max(values))+1\n  \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=min(values)\n   else:\n    \n    ans+=abs(last-max(values))\n   \n   last=min(values)\n\n  else:\n   \n   ans+=abs(max(values)-min(values))+1\n   \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=max(values)\n   else:\n    ans+=abs(last-min(values))\n\n   last=max(values)\n  #print(ans)\n\n\n\n\n print(ans)", "try:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n m, n = list(map(int, stdin.readline().split()))\n final = []\n for j in range(m):\n  ans = list(map(str, stdin.readline().split()))\n  start = -1\n  for i in range(n):\n   if ans[i] == 'P':\n    start = i\n    break\n  if start != -1:\n   for i in range(n-1, -1, -1):\n    if ans[i] == 'P':\n     end = i\n     break\n  if start != -1:\n   if len(final) == 0:\n    final.append([start, end])\n   else:\n    if j%2 == 0:\n     if final[-1][0] > start:\n      final[-1][0] = start\n     else:\n      start = final[-1][0]\n    else:\n     if final[-1][1] < end:\n      final[-1][1] = end\n     else:\n      end = final[-1][1]\n    final.append([start, end])\n  else:\n   if len(final) != 0:\n    start, end = 0, n-1\n    if j%2 == 0:\n     if final[-1][0] > start:\n      final[-1][0] = start\n     else:\n      start = final[-1][0]\n    else:\n     if final[-1][1] < end:\n      final[-1][1] = end\n     else:\n      end = final[-1][1]\n    final.append([start, end])\n if len(final) == 0:\n  print(0)\n else:\n  count = 0\n  for ele in final:\n   count += (ele[1]-ele[0]+1)\n  print(count-1)\n      \n   \n  \n", "# cook your dish here\ntry:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n m, n = list(map(int, stdin.readline().split()))\n final = []\n for j in range(m):\n  ans = list(map(str, stdin.readline().split()))\n  start = -1\n  for i in range(n):\n   if ans[i] == 'P':\n    start = i\n    break\n  if start != -1:\n   for i in range(n-1, -1, -1):\n    if ans[i] == 'P':\n     end = i\n     break\n  if start != -1:\n   if len(final) == 0:\n    final.append([start, end])\n   else:\n    if j%2 == 0:\n     if final[-1][0] > start:\n      final[-1][0] = start\n     else:\n      start = final[-1][0]\n    else:\n     if final[-1][1] < end:\n      final[-1][1] = end\n     else:\n      end = final[-1][1]\n    final.append([start, end])\n if len(final) == 0:\n  print(0)\n else:\n  count = 0\n  for ele in final:\n   count += (ele[1]-ele[0]+1)\n  print(count-1)\n      \n   \n  \n", "for _ in range(int(input())):\n \n r,c=map(int,input().split())\n \n ans=0\n \n last=-1\n flag=0\n \n cnt=0\n check=1\n \n for i in range(r):\n  \n  j=0\n  \n  values=[]\n  \n  for car in input().split():\n   \n   if(car==\"P\"):\n    values.append(j)\n    \n   j+=1\n   \n  #print(values)\n  \n  \n  \n  if(len(values)==0):\n   if(flag==0):\n    zerocnt=1\n    continue\n    \n   if(flag==check):\n    \n    cnt+=1\n    if(i==r-1):\n     ans-=1\n    continue\n    \n   if(flag>check):\n    check=flag\n    ans+=cnt-1\n    cnt=0\n    continue\n    \n \n  \n  flag+=1\n\n  if(i%2==1):\n\n   ans+=abs(min(values)-max(values))+1\n  \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=min(values)\n   else:\n    \n    ans+=abs(last-max(values))\n   \n   last=min(values)\n\n  else:\n   \n   ans+=abs(max(values)-min(values))+1\n   \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=max(values)\n   else:\n    ans+=abs(last-min(values))\n\n   last=max(values)\n  #print(ans)\n\n\n\n\n print(ans)", "y=int(input())\nwhile(y):\n y-=1\n n,m=map(int,input().split())\n l1=[]\n for i in range(n):\n  l1.append(0)\n k=-1\n l3=[]\n l4=[]\n for i in range(n):\n  k1=-1\n  k2=-1\n  l2=input().split()\n  for j in range(len(l2)):\n   if(l2[j]=='P'):\n    if(k==-1):\n     k=i\n    if(k1==-1):\n     k1=j\n    k2=j\n  if(k1==-1):\n   l1[i]=1\n  l3.append(k1)\n  l4.append(k2)\n if(n==1 or k==n-1 or k==-1):\n  if(n==1):\n   print(l4[0]-l3[0])\n  else:\n   print(l4[n-1]-l3[n-1])\n  continue\n c=0\n if(k%2!=0):\n  a1=l4[k]\n else:\n  a1=l3[k]\n for i in range(k,n-1):\n  if(l3[i+1]==-1):\n   if(i%2!=0):\n    l3[i+1]=l4[i+1]=l3[i]\n   else:\n    l3[i+1]=l4[i+1]=l4[i]\n  if(i%2!=0):\n   a2=min(l3[i+1],l3[i])\n   c+=(a1-a2)\n   a1=a2\n  else:\n   a2=max(l4[i],l4[i+1])\n   c+=(a2-a1)\n   a1=a2\n if((n-1)%2!=0):\n  c+=a1-l3[n-1]\n else:\n  c+=l4[n-1]-a1\n c+=n-1\n for i in range(n-1,-1,-1):\n  if(l1[i]==1):\n   c-=1\n  else:\n   break\n c-=k\n print(c)", "try:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "def countt(n):\n for i in range(5):\n  pass\n return n\nt = int(input())\nfor _ in range(t):\n m, n = map(int, input().split())\n arr = []\n p = []\n for x in range(m):\n  temp = [i for i in input().split()]\n  if(x % 2 == 0):\n   for j in range(n):\n    if(temp[j] == 'P'):\n     p.append([x+1,j+1])\n  else:\n   for j in range(n-1, -1, -1):\n    if(temp[j] == 'P'):\n     p.append([x+1, j+1])\n  arr.append(temp)\n c = countt(20)\n res = c\n l = len(p)\n for i in range(l):\n  if(i+1 < l):\n   res += abs(p[i][0] - p[i+1][0]) + abs(p[i][1] - p[i+1][1])\n print(res-c)", "# cook your dish here\ntry:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "try:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass", "# cook your dish here\nT = int(input())\n\nfor i in range(T):\n m, n = input().split()\n m = int(m)\n n = int(n)\n c = []\n # m = 4\n # n  = 5\n # c = [['N', 'P', 'N', 'N', 'P'], ['N', 'N', 'P', 'N', 'N'], ['N', 'P', 'N', \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0'N', 'N'], ['P', 'N', 'N', 'N', 'N']]\n start_pos_m = -1\n start_pos_n = -1\n for j in range(m):\n  c.append(input().split())\n  if('P' in c[-1] and start_pos_m == -1):\n   start_pos_n = c[-1].index('P')\n   start_pos_m = j\n # print(c)\n cur_pos_m = start_pos_m\n cur_pos_n = start_pos_n\n next_pos_m = cur_pos_m\n number_of_steps = 0\n next_pos_n = start_pos_n\n for j in range(start_pos_m, m - 1):\n  if('P' not in c[j]):\n   if(j % 2 == 0):\n    if('P' in c[j + 1][next_pos_n + 1: n]):\n     print(1)\n     rev = c[j + 1][: : -1]\n     next_pos_n = n - 1 - rev.index('P')\n     number_of_steps += next_pos_n - cur_pos_n\n     cur_pos_n = next_pos_n\n   else:\n    if('P' in c[j + 1][0 : next_pos_n]):\n     next_pos_n = c[j + 1].index('P')\n     number_of_steps += cur_pos_n - next_pos_n\n     cur_pos_n = next_pos_n\n   if('P' in c[j + 1]):\n    number_of_steps += j - cur_pos_m \n   # print(c[j])\n\n  elif(j % 2 == 0):    \n   rev = c[j][: : -1]\n   next_pos_n = n - 1 - rev.index('P')\n   if('P' in c[j + 1][next_pos_n : n]):\n    rev = c[j + 1][: : -1]\n    next_pos_n = n - 1 - rev.index('P')\n   number_of_steps += next_pos_n - cur_pos_n\n   cur_pos_n = next_pos_n\n   number_of_steps += 1\n  else:\n   # rev = c[j][:: -1]\n   # print(\"rev : \", rev)\n   next_pos_n = c[j].index('P')\n   if('P' in c[j + 1][0 : next_pos_n + 1]):\n    next_pos_n = c[j + 1].index('P')\n   number_of_steps += cur_pos_n - next_pos_n\n   cur_pos_n = next_pos_n\n   number_of_steps += 1\n  cur_pos_m = j\n\n if(m % 2 == 0):\n  if('P' in c[-1][0 : cur_pos_n]):\n   number_of_steps += cur_pos_n - c[-1][0 : cur_pos_n].index('P') \n else:\n  if('P' in c[-1][cur_pos_n + 1 : :]):\n   number_of_steps += n - 1 - c[-1][:: -1].index('P') - cur_pos_n\n \n print(number_of_steps)", "try:\n for _ in range(int(input())):\n  M,N=map(int,input().split())\n  dp=[]\n  for i in range(M):\n   l=input()\n   l=l.replace(' ','')\n   l=l.upper()\n   dp.append(list(l))\n  pos=[]\n  for i in range(M):\n   if (i+1)%2!=0:\n    for j in range(0,N,1):\n     if dp[i][j]==\"P\":\n      pos.append([i,j])\n   else:\n    for j in range(N-1,-1,-1):\n     if dp[i][j]==\"P\":\n      pos.append([i,j])\n  s=0\n  for i in range(len(pos)-1):\n   for j in range(len(pos[i])):\n    s+=abs(pos[i][j]-pos[i+1][j])\n  print(s)\nexcept:\n pass", "for _ in range(int(input())):\n \n r,c=map(int,input().split())\n \n ans=0\n \n last=-1\n flag=0\n \n for i in range(r):\n  \n  j=0\n  \n  values=[]\n  \n  for car in input().split():\n   \n   if(car==\"P\"):\n    values.append(j)\n    \n   j+=1\n   \n  #print(values)\n  \n  if(len(values)==0):\n   if(flag==0):\n    continue\n   else:\n    ans+=1\n    continue\n    \n  flag=1\n\n  if(i%2==1):\n\n   ans+=abs(min(values)-max(values))+1\n  \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=min(values)\n   else:\n    \n    ans+=abs(last-max(values))\n   \n   last=min(values)\n\n  else:\n   \n   ans+=abs(max(values)-min(values))+1\n   \n   if(i==r-1):\n    ans-=1\n\n   if(last==-1):\n    last=max(values)\n   else:\n    ans+=abs(last-min(values))\n\n   last=max(values)\n  #print(ans)\n\n\n\n\n print(ans)", "# cook your dish here\ntry:\n# if(True):\n for _ in range(int(input())):\n  m,n=map(int,input().split())\n  c=[]\n  last=0\n  flag=True\n  rowstart=0\n  rowend=0\n  for i in range(m):\n   k=list(input().split())\n   co=0\n   k.append(-1)\n   k.append(-1)\n   for j in range(len(k)):\n    if(k[j]==\"P\"):\n     co+=1\n     if(co==1):\n      k[-2]=j\n     k[-1]=j\n     rowend=i\n    \n   if(k[-1]!=-1 and flag):\n    flag=False\n    rowstart=i\n    if(i%2==0):\n     last=k[-2]\n    else:\n     last=k[-1]\n   c.append(k)\n  count=0\n#         print(c)\n  \n  for i in range(rowstart,rowend+1):\n   \n   if(i%2==0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-2])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-1]\n   elif(i%2!=0 and c[i][-1]!=-1):\n    count+=abs(last-c[i][-1])\n    count+=c[i][-1]-c[i][-2]\n    last=c[i][-2]\n   count+=1\n  print(count-1)\n \n \n \nexcept:\n pass"]