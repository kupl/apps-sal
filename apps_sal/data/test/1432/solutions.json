["n = int(input())\na = list(map(int, input().split()))\nans = a[0]\nl = []\n\nfor i in range(1, n, 2):\n    ans -= a[i]\n    ans += a[i + 1]\n\nl.append(ans)\n\nfor i in range(n - 1):\n    ans = (a[i] - ans//2)*2\n    l.append(ans)\n\nfor i in l:\n    print(i, end = \" \")", "N = int(input())\nA = list(map(int, input().split()))\n\nsum_A = sum(A)\n\nx1 = sum_A - 2 * (sum(A[1:N:2]))\n\nans = [x1]\nfor i in range(N):\n    if (i == 0):\n        continue\n    if (i + 1 == N):\n        ans.append(2 * A[i] - x1)\n        break\n\n    ans.append((2 * A[i - 1]) - ans[i - 1])\n\nprint((*ans))\n", "N = int(input())\nA = list(map(int, input().split()))\n\nx2 = 0\nfor i in range(N):\n    if i % 2:\n        x2 -= A[i]\n    else:\n        x2 += A[i]\n\nans = [0]*N\nans[0] = x2//2\nfor i in range(N-1):\n    ans[i+1] = A[i]-ans[i]\n\nfor i in range(N):\n    ans[i] *= 2\n\nprint((' '.join(map(str, ans))))\n", "N = int(input())\nA = list(map(int, input().split()))\nS = 0\nsign = 1\nfor i in range(N):\n  S += sign * A[i]\n  sign *= -1\nfor i in range(N):\n  print(S, end = ' '*(i<N-1))\n  S *= -1\n  S += 2*A[i]\nprint()", "\ndef resolve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    X = [0] * N\n\n    # X1 = S-(X2...XN)\u306b\u306a\u308b\n    # \u307e\u305f\u3001(X1 + X2)//2 = A1 \u3088\u308a X1 + X2 = 2*A1\n    # \u306a\u306e\u3067\u3001 X1 = S - 2(A2+A4+An-1) \u306b\u306a\u308b\n    S = sum(A)\n    X[0] = S - sum(A[1::2]) * 2\n\n    # O(N) \u3067\u89e3\u304f\u305f\u3081\u306b\u3001 Xi+1 = 2*A1 - Xi\n    for i in range(N - 1):\n        X[i + 1] = 2 * A[i] - X[i]\n\n    print(*X)\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int,input().split()))\n\nmFR = [0]*(N+1)\nfor i in range(N):\n    mFR[1] += A[i]*(pow(-1,i))\nfor i in range(2,N+1):\n    mFR[i] = A[i-2]*2-mFR[i-1]\nprint((*mFR[1:]))\n", "n=int(input())\na=list(map(int,input().split()))\n\n#n=3\n#a=[2,2,4]\n\nb=[0]*n\nx=[0]*n\nbsum=0\nfor i in range(0,n-1,2):\n    bsum+=a[i]-a[i+1]\nb[0]=bsum\nx[0]=b[0]+a[n-1]\nfor i in range(1,n):\n    b[i]=a[i-1]-b[i-1]-a[(n+i-2)%n]\n    x[i]=b[i]+a[(i+n-1)%n]\n    \nstrx=\" \".join(str(xi) for xi in x)\nprint(strx)", "N=int(input())\nA=list(map(int,input().split()))\n\nX0=0\n\nfor i in range(N):\n  if i%2==0:\n    X0+=A[i]\n  else:\n    X0-=A[i]\n\nans=[X0]\n\nfor i in A:\n  ans.append((i-ans[-1]//2)*2)\nprint(*ans[:-1])", "N = int(input())\nA = list(map(int, input().split()))\n\nS = sum(A)\nX = [0]*N\nX[0] = S-2*sum(A[1:N:2])\nfor i in range(1, N):\n    X[i] = 2*A[i-1]-X[i-1]\nprint((*X))\n", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if i%2 == 0:\n        ans += a[i]\n    else:\n        ans -= a[i]\nans1 = ans\nprint(ans, end=' ')\nfor i in range(1, n):\n    ans *= -1\n    ans += 2*a[i-1]\n    print(ans, end=' ')\n    \nprint()\n", "N = int(input())\nA = list(map(int, input().split()))\n\n# \u5404\u5c71\u306b\u964d\u3063\u305f\u96e8\u306e\u91cf\nx = [-1] * N\n\n# \u307e\u305ax[0]\u3092\u6c42\u3081\u308b\n# x[0] = s - 2 * (A_2+A_4+...+A_N-1)\ns = sum(A)\ntemp = 0\nfor i in range(2, N, 2):\n    temp += A[i - 1]\nx[0] = s - 2 * temp\n\n# x[1],x[2],...,x[N-1]\u3092\u6f38\u5316\u5f0f\u304b\u3089\u6c42\u3081\u308b\nfor i in range(1, N):\n    x[i] = 2 * A[i - 1] - x[i - 1]\nprint((*x))\n", "N = int(input())\nA = [int(_) for _ in input().split()]\n\nans = [sum(A) - 2 * sum(A[1::2])]\nfor a in A[:-1]:\n    ans.append(a * 2 - ans[-1])\n\nprint((\" \".join([str(_) for _ in ans])))\n", "n = int(input())\na = list(map(int, input().split()))\nl = []\n\nans = sum(a[0::2]) - sum(a[1::2])\nl.append(ans)\n\nfor i in range(n - 1):\n    l.append(a[i]*2 - l[i])\n\nprint(*l)", "import sys\ninput=sys.stdin.readline\n\nN=int(input().rstrip('\\n'))\nAs = [int(x) for x in input().rstrip('\\n').split()]\ntotal = sum(As)\nhalf = []\nfor i in range(N):\n  if i==0:\n    half.append((total-sum(As[1::2])*2)//2)\n  else:\n    half.append(As[i-1]-half[-1])\nprint(*[x*2 for x in half])", "N = int(input())\nA = list(map(int,input().split()))\n\nX = [0] * N\n\nX[0] += sum(A) - 2 * sum(A[1::2])\n\nfor i in range(1,N):\n  X[i] = (2 * A[i-1]) - X[i-1]\n  \nprint(*X)", "n = int(input())\na = list(map(int, input().split()))\na_0 = sum(a) - 2 * sum(a[1::2])\nans = []\nans.append(a_0)\nfor i, A in enumerate(a[:-1], 1):\n    ans.append(2 * A - ans[i-1])\n\nprint(*ans)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    N = i_input()\n    A = i_list()\n\n    a = 0\n    for i,k in enumerate(A):\n        if i%2 == 0:\n            a += k\n        else:\n            a -= k\n  \n    ans = [a]\n    for i,k in enumerate(A[:-1]):\n        t = k - ans[-1]//2\n        ans.append(2*t)\n    print((\" \".join(map(str, ans))))\n\n\n   \n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\n\n\ndef IN_I(): return int(sys.stdin.readline().rstrip())\ndef IN_LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef IN_S(): return sys.stdin.readline().rstrip()\ndef IN_LS(): return list(sys.stdin.readline().rstrip().split())\n\n\nN = IN_I()\nA = IN_LI()\n\nb = [0] * N\nS = sum(A)\nb[0] = S - 2 * sum(A[1::2])\n\nfor i in range(1, N):\n    b[i] = 2 * A[i - 1] - b[i - 1]\n\nprint((' '.join(map(str, b))))\n\n", "N = int(input())\nA = list(map(int,input().split()))\n\nAll = sum(A)\n\nlim = len(A)//2\nExc1 = sum([A[2*i+1] for i in range(lim)])\n\none = All - Exc1*2\nans = [one]\nfor i in range(1,N):\n    print('{}'.format(ans[-1]),end=' ')\n    ans.append(A[i-1]*2 - ans[-1])\nprint('{}'.format(ans[-1]))\n", "#!/usr/bin/env python3\nn, *a = list(map(int, open(0).read().split()))\nb = [0]\nfor i in a:\n    b[0] = i - b[0]\nfor i in a:\n    b.append((i - b[-1] // 2) * 2)\nprint((*b[:n]))\n", "def main():\n\tN = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\texA = A * 2\n\tS = sum(A)\n\tD = [sum(A[1::2]), sum(A[2::2])]\n\tfor i in range(2, N):\n\t\tD.append(D[-2] - exA[i - 1] + exA[i + N - 2])\n\tprint((\" \".join([str(S - 2 * d) for d in D])))\n\nmain()\n", "n = int(input())\na = list(map(int, input().split()))\n\nx = sum([a[i]*(-1)**(i%2) for i in range(n)])\nans = [x]\nfor i in range(n-1):\n    ans.append(2*a[i]-ans[-1])\nprint(' '.join(map(str, ans)))", "def resolve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    X = [0] * N\n \n    # X1 = S-(X2...XN)\u306b\u306a\u308b\n    # \u307e\u305f\u3001(X1 + X2)//2 = A1 \u3088\u308a X1 + X2 = 2*A1\n    # \u306a\u306e\u3067\u3001 X1 = S - 2(A2+A4+An-1) \u306b\u306a\u308b\n    S = sum(A)\n    X[0] = S - sum(A[1::2]) * 2\n \n    # O(N) \u3067\u89e3\u304f\u305f\u3081\u306b\u3001 Xi+1 = 2*A1 - Xi\n    for i in range(N - 1):\n        X[i + 1] = 2 * A[i] - X[i]\n \n    print(*X)\n \n \ndef __starting_point():\n    resolve()\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nans[0]=sum([2*a[i] for i in range(1,n,2)])\nans[0]=sum(a)-ans[0]\n\nfor i in range(n-1):\n  ans[i+1]=2*a[i]-ans[i]\n\nprint((*ans))\n", "N=int(input())\nA=list(map(int,input().split()))\n\nB=[0 for i in range(N)]\n\nB[0]=2\nwhile 1:\n  for i in range(1,N):\n    B[i]=2*A[i]-B[i-1]\n  if B[0]==2*A[0]-B[-1]:break\n  else:\n    B[0]= (B[0] + (2*A[0]-B[-1]))//2\n\nB = [B[-1]]+B[:-1]\n\nprint(*B)", "n = int(input())\nA = list(map(int,input().split()))\n\nanswers = [0]*n\n\nanswers[n-1] = sum(A)//2-sum(A[0:n-1:2])\n\nfor i in range(n-2,-1,-1):\n    answers[i] = A[i] - answers[i+1]\n\nprint(*[2*a for a in answers])", "N=int(input())\nl=list(map(int,input().split()))\nsum_n=sum(l)\nfirst=sum_n-(2*sum([l[i] for i in range(1,N,2)]))\nans=[first]\nfor i in range(N-1):\n   ans.append(2*l[i]-ans[-1])\nprint(*ans)", "n=int(input())\ninp=list(map(int,input().split()))\ninp=[2*item for item in inp]\ns=0\nfor i in range(1,len(inp)):\n    if i%2==1:\n        s-=inp[i]\n    else:\n        s+=inp[i]\nans=[(s+inp[0])//2]\nfor i in range(len(inp)-1):\n    ans.append(inp[i]-ans[-1])\nfor item in ans:\n    print (item,end=\" \")", "n=int(input())\na=list(map(int,input().split()))\ns=sum(a)//2\nx=s-sum(a[1::2])\ntable=[x]\nfor i in range(n-1):\n    table.append(a[i]-x)\n    x=a[i]-x\nans=list(map(lambda x:2*x,table))\nprint(*ans)", "import copy\nN = int(input())\nA = [int(x) for x in input().split()]\nsuma = sum(A)\nx0 = 0\nfor i in range(N) :\n    x0 += ((-1)**i) * A[i]\n\nx = [x0]\n\nfor i in range(1,N) :\n    xi = (A[i-1] - x[i-1]//2)*2\n    x.append(xi)\n\nfor i in range(N) :\n    print(x[i],end=' ')", "n=int(input())\n\na=list(map(int,input().split()))\n\nm=sum(a[0::2])-sum(a[1::2])\n\nM=[m]\n\nfor i in range(n-1):\n    M.append(2*a[i]-M[i])\n\nprint(*M)", "N=int(input())\nA=list(map(int,input().split()))\nX=[]\ns=sum(A)\nfor i in range(1,N,2):\n  s-=2*A[i]\nX.append(s)\n\nfor i in range(N-1):\n  x=2*A[i]-X[i]\n  X.append(x)\nprint((*X))\n", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nans[0]=sum(2*a[1::2])\nans[0]=sum(a)-ans[0]\n\nfor i in range(n-1):\n  ans[i+1]=2*a[i]-ans[i]\n\nprint((*ans))\n", "e = 0\ns = 0\nn = int(input())\na = list(map(int,input().split()))\n\nfor i in range(n): \n    s += a[i]\n    if i % 2 == 1:\n        e += a[i]\n\nb = []\nfor i in range(n):\n    if (i == 0):\n        b.append(s-2*e)\n    else:\n        b.append(2*a[i-1]-b[i-1])\n\nprint(\" \".join(map(str,b)))", "N = int(input())\nA = [int(x) for x in input().split()]\nx = [0]*N\nfor i in range(N):\n  x[0] += ((-1)**i)*A[i]\nfor i in range(1,N):\n  x[i] = -x[i-1]+2*A[i-1]\nfor i in range(N):\n  print(x[i],end=\" \")\nprint()", "N = int(input())\nA = list(map(int, input().split()))\n\nans = [0 for _ in range(N)]\n\nsign = 1\nfor a in A:\n    ans[0] += sign * a\n    sign *= -1\n\n\nfor i in range(1, N):\n    ans[i] = 2 * A[0] - ans[i - 1]\n\n    t = A.pop(0)\n    A.append(t)\n\nprint((*ans))\n", "N = int(input())\nA = list([int(x) for x in input().split()])\n\nresult = [0] * N\nx = 0\nfor key, i in enumerate(A):\n    if key % 2 == 0:\n        x += i\n    else:\n        x -= i\n\nresult[0] = x\n\nfor i in range(1, N):\n    result[i] = 2 * A[i-1] - result[i-1]\n\nprint((' '.join([str(x) for x in result])))\n", "N = int(input())\nA = list(map(int,input().split()))\n\nans = [sum(A)//2 - sum([A[i] for i in range(1,N,2)])]\n\nfor i in range(N-1):\n    ans.append(A[i] - ans[-1])\n\nfor x in ans:\n    print(2*x, end=\" \")\nprint(\"\")", "N = int(input())\nA = list(map(int, input().split()))\n\nans = [0 for _ in range(N)]\n\nsign = 1\nfor a in A:\n    ans[0] += sign * a\n    sign *= -1\n\n\nfor i in range(1, N):\n    ans[i] = 2 * A[i-1] - ans[i - 1]\n\nprint((*ans))\n\n\"\"\"\n\u30c0\u30e01: 2( a1 - a2 + a3 )\n\u30c0\u30e02: 2( a2 - a3 + a1 )\n\u30c0\u30e03: 2( a3 - a1 + a2 )\n\"\"\"\n", "N = int(input())\nA = [int(x) for x in input().split()]\n\nt = 0\nfor i in range(N):\n    if i % 2 == 0:\n        t += A[i]\n    else:\n        t -= A[i]\nfor a in A:\n    print(t, \"\", end=\"\")\n    t = -t + a * 2\nprint()\n", "N = int(input())\nA = list(map(int, input().split()))\nX = [0]*N\nS = 0\nAs = 0\nfor i in range(N):\n    S += A[i]\nfor i in range((N - 1) // 2):\n    As += A[2 * i + 1]\nX[0] = S - 2 * As\nfor i in range(1,N):\n    X[i] = 2 * A[i-1] - X[i-1]\ns = \"\"\nfor i in range(N):\n    s += str(X[i]) + \" \"\nprint(s)", "def main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = []\n\n    x1 = 0\n    for i, ai in enumerate(A):\n        x1 += ai if i % 2 == 0 else -ai\n    x1 //= 2\n    ans.append(x1)\n\n    for a in A[:-1]:\n        ans.append(a - ans[-1])\n\n    print((\" \".join(str(a * 2) for a in ans)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nalst = list(map(int, input().split()))\n\nans = [0 for _ in range(n)]\npm = 1\nfor a in alst:\n    ans[0] += a * pm\n    pm *= -1\nfor i in range(n - 1):\n    ans[i + 1] = alst[i] * 2 - ans[i]\nprint(*ans)", "# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\n# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, As):\n    S = sum(As)\n    Xs = [0] * N\n    Xs[0] = S - (sum(As[1::2]) * 2)\n    for i in range(1, N):\n        Xs[i] = 2 * As[i - 1] - Xs[i - 1]\n    print((' '.join([str(i) for i in Xs])))\n\n\ndef __starting_point():\n    # S = input()\n    N = int(input())\n    # N, M = map(int, input().split())\n    As = [int(i) for i in input().split()]\n    # Bs = [int(i) for i in input().split()]\n    solve(N, As)\n\n__starting_point()", "\ndef resolve():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    ans = [0] * N\n    ans[0] = sum(A)\n\n    for i in range(1, N, 2):\n        ans[0] -= 2 * A[i]\n\n    for i in range(N - 1):\n        ans[i + 1] = 2 * A[i] - ans[i]\n\n    print(*ans)\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "n=int(input())\na=list(map(int, input().split()))\nx=[0]*n\ns1=sum(a)\ns2=0\nfor i in range(1,n-1,2):\n  s2+=a[i]\n\nx[0]=s1-s2*2\n\nfor i in range(1,n):\n    x[i]=-x[i-1]+2*a[i-1]\n\nx=[str(a) for a in x]\nx=' '.join(x)\nprint(x)", "N = int(input())\nA = list(map(int,input().split()))\n\nS = sum(A)\ndamu_sum = sum(A[1::2])\nans = S - 2 * (damu_sum)\n\nans_list = [ans]\n\nfor i in range(N-1):\n    ans = 2 * A[i] - ans\n    ans_list.append(ans)\nprint(*ans_list)", "import math\nn = int(input())\nA = list(map(int, input().split( )))\nx1 = 0\nfor i in range(n):\n  x1 += ((-1)**i)*A[i]\narr = [x1]\ns = x1//2\nfor i in range(n-1):\n  s = A[i]-s\n  arr.append(s*2)\nprint((' '.join(map(str, arr))))\n\n\n", "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd, ceil, atan, pi\ndef input(): return sys.stdin.readline()[:-1] # warning not \\n\n# def input(): return sys.stdin.buffer.readline().strip() # warning bytes\n# def input(): return sys.stdin.buffer.readline().decode('utf-8')\nimport string\n# string.ascii_lowercase\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache\nMOD = int(1e9)+7\nINF = float('inf')\n\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    \n    s = sum(a)\n    x = s - 2 * sum(e for i, e in enumerate(a) if i % 2)\n\n    ans = [0] * n\n    ans[0] = x\n    for i in range(1, n):\n        ans[i] = 2 * a[i-1] - ans[i-1]\n    print((*ans))\n\nt = 1\n# t = int(input())\nfor case in range(1,t+1):\n    ans = solve()\n\n\n\"\"\"\n1\n4\n-1 1 1 -1\n\n\"\"\"\n", "n = int(input())\naa = list(map(int, input().split()))\n\nx = 0\nfor i in range(n):\n  if i % 2 == 0:\n    x += aa[i]\n  else:\n    x -= aa[i]\n    \nans = [x]\nfor i in range(n-1):\n  x = 2 * (aa[i] - x//2)\n  ans.append(x)\nprint(*ans)", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\ntot = sum(A)\nwo_X0 = 0\nfor i in range(1, N, 2):\n    wo_X0 += A[i]\nX = []\nX.append(tot - 2 * wo_X0)\n\nfor i in range(1, N):\n    X.append(2 * A[i - 1] - X[i - 1])\n\nfor x in X:\n    print(x, end = ' ')", "N = int(input())\nA = tuple(map(int, input().split()))\n\nr = [0] * N\nfor i, a in enumerate(A):\n    if i % 2 == 0:\n        r[0] += a\n    else:\n        r[0] -= a\nr[-1] = 2 * A[-1] - r[0]\nfor i in range(N - 2, 0, -1):\n    r[i] = 2 * A[i] - r[i+1]\nans = \" \".join(map(str, r))\nprint(ans)", "import sys\n\ndef read_str(): return sys.stdin.readline().strip()\ndef read_int(): return int(sys.stdin.readline().strip())\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef read_str_split(): return list(sys.stdin.readline().strip())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    n = read_int()\n    a = read_int_list()\n    ans = [0] * n\n    ans[0] = sum(a) - 2 * sum(a[1::2])\n    for i in range(1, n):\n        ans[i] = 2 * a[i - 1] - ans[i - 1]\n    print((*ans))\n\ndef __starting_point():\n    Main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nA = list(map(int,input().split()))\n\nmFR = [0]*(N+1)\nfor i in range(N):\n    mFR[1] += A[i]*((-1)**i)\nfor i in range(2,N+1):\n    mFR[i] = A[i-2]*2-mFR[i-1]\nprint((*mFR[1:]))\n", "N = int(input())\nA = list(map(int,input().split()))\nans = [0]*N\nans[0] = sum([(-1)**i*A[i] for i in range(N)])\nfor i in range(1,N):\n    ans[i] = 2*A[i-1]-ans[i-1]\nprint(*ans)", "def main():\n    import sys\n\n    def input(): return sys.stdin.readline().rstrip()\n\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = [0]*n\n    x[0] = (sum(a[::2])-sum(a[1::2]))\n    for i in range(1, n):\n        x[i] = 2*a[i-1]-x[i-1]\n    print(*x)\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\nA = A * 2\n\ns = [0] * (2 * N)\ns[0] = A[0]\ns[1] = A[1]\n\nfor i in range(2, 2*N):\n    s[i] = s[i-2] + A[i]\ns.append(0)\nss = s[2 * N - 1]\n\nfor i in range(N):\n    print(ss - 2 * (s[i + N - 2] - s[i-1]), end=\" \")\n", "n=int(input())\na=list(map(int,input().split()))\nans=[0]*n\nsum=0\nfor i in range(n-1):\n    if i%2==0:\n        sum-=a[i]\n    else:\n        sum+=a[i]\nsum+=a[n-1]\nans[-1]=sum\nfor j in range(0,n-1)[::-1]:\n    ans[j]+=(2*a[j]-ans[j+1])\nfor k in range(n):\n    ans[k]=str(ans[k])\nprint((\" \".join(ans)))\n", "N = int(input())\nA = list(map(int,input().split()))\nB = N*[0]\n\nfor n in range(N):\n  if n%2==0:\n    B[0]+=A[n]\n  else:\n    B[0]-=A[n]\n\nfor n in range(N):\n  if n==0:\n    pass\n  elif 1<=n<=N-1:\n    B[n] = 2*A[n-1]-B[n-1]\n  else:\n    B[n] = 2*A[n]-B[0]\n\nprint(*B)", "N = int(input())\nA = list(map(int, input().split()))\nx = 0\nfor i in A:\n    x = i-x\nprint(x, end=\" \")\nx//=2\nfor i in range(N-1):\n    x = A[i]-x\n    print(2*x, end=\" \")\n", "# ABC 133 D\nN = int(input())\nA_list = list(map(int, input().split()))\nx_list = [0] * N\nx_list[0] = sum(A_list) - sum([2*a for a in A_list[1::2]])\nfor i, a in enumerate(A_list[:-1]):\n    x_list[i+1] = 2*a - x_list[i]\n\nprint(*x_list)", "N=int(input())\nA=list(map(int,input().split()))\ns=sum(A)\nans=[s-2*sum(A[1::2])]\nfor i in range(0,N-1):\n    ans.append(A[i]*2-ans[-1])\nprint(*ans)", "n = int(input())\na = list(map(int,input().split()))\n\nx = [0]*n\n\nx[0] = sum(a)-2*(sum(a[1::2])) \nfor i in range(n-1):\n    x[i+1] = 2*a[i] - x[i]\n\nprint(*x,end=\"\")", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#mod = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n=INT()\n    A=LIST()\n    ans=[0]*n\n    rain=sum(A)\n    temp=rain\n    for i in range(n):\n        if i%2==1:\n            temp-=A[i]*2\n    ans[0]=temp\n    for i in range(1,n):\n        ans[i]=A[i-1]*2-ans[i-1]\n    \n    print(*ans)\n\ndef __starting_point():\n    do()\n__starting_point()", "n=int(input())\nA=list(map(int,input().split()))\nX=[0]*n\nS=sum(A)\nA2=0\nfor i in range(1,n-1,2):\n  A2+=A[i]\nX[0]=S-2*A2\nfor i in range(1,n):\n  X[i]=2*A[i-1]-X[i-1]\nprint(*X)", "# -*- coding: utf-8 -*-\n\"\"\"\n@author: H_Hoshigi\n\"\"\"\ndef main():\n    N = int(input())\n    A_lsit = list(map(int, input().split()))\n\n    mount1_min = 0\n    mount1_max = min(A_lsit[0], A_lsit[-1])\n\n    mount_list = [0]*N\n\n    while True:\n        mount_list[0] = (mount1_min + mount1_max)//2\n        for i in range(N-1):\n            mount_list[i+1] = A_lsit[i] - mount_list[i]\n        #print(mount_list)\n        if A_lsit[N-1] - mount_list[N-1] == mount_list[0]:\n            break\n        elif A_lsit[N-1] - mount_list[N-1] < mount_list[0]:\n            mount1_max = mount_list[0]\n        else:\n            if mount1_min != mount_list[0]:\n                mount1_min = mount_list[0]\n            else:\n                mount1_min = mount_list[0]+1\n    print((\" \".join([str(m*2) for m in mount_list])))\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf,comb\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nfrom functools import reduce\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\n\nn = INT()\na = LIST()\nb = [0]*n\nk = 0\nfor i in range(n//2):\n    k += 2*a[2*i+1]\nb[0] = sum(a) - k\n\nfor i in range(1, n):\n    b[i] = 2*a[i-1] - b[i-1]\nprint(*b)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy\nfrom operator import itemgetter\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nN = ni()\nA = na()\ntmp = 0\nnow = 1\nfor i in range(N):\n    A[i] *= 2\n    tmp += now  * A[i]\n    now *= -1\n\nans = [0] * N\nans[0] = tmp // 2\nfor i in range(N-1):\n    ans[i+1] = A[i] - ans[i]\nans[N-1] = A[N-1] - ans[0]\nprint(*ans)", "n = int(input())\ndata = list(map(int, input().split()))\nans = [0]\nfor idx, a in enumerate(data):\n    if idx%2 == 0:\n        ans[0] += a\n    else:\n        ans[0] -= a\n\nfor i in range(n-1):\n    dam = data[i]\n    score = 2*dam - ans[-1]\n    ans.append(score)\n\nprint(*ans)", "n=int(input())\na=list(map(int,input().split()))\nnum=0\nfor i in range(n):\n  if i%2==0:\n    num=num+a[i]\n  else:\n    num=num-a[i]\nk=num\nfor i in range(n):\n  print(k,end=\" \")\n  k=2*a[i]-k\n  ", "N = int(input())\nA = list(map(int,input().split()))\nB = [2*sum(A[::2])-sum(A)]\n\nfor n in range(N-1):\n  B+=[2*A[n]-B[n]]\n\nprint(*B)", "N = int(input())\nAs = list(map(int, input().split()))\n\nansList = []\nans_1 = 0\nfor i in range(N):\n    ans_1 += As[i] * (-1) ** i\n\nansList.append(ans_1)\n\nfor A in As[:-1]:\n    ansList.append(2 *A - ansList[-1])\n\nprint(' '.join(map(str, ansList)))", "n=int(input())\na=list(map(int,input().split()))\nb=sum(a)\nans=[0]*n\nfor i in range(n//2):\n    ans[(i+1)*2]=ans[i*2]-(2*(a[i*2]-a[i*2+1]))\nans[1]=ans[-1]-(2*(a[-1]-a[0]))\nfor i in range(1,n//2):\n    ans[i*2+1]=ans[(i-1)*2+1]-(2*(a[(i-1)*2+1]-a[i*2]))\nc=(b-sum(ans))//n\nans2=[0]*n\nfor i in range(n):\n    ans2[i]=c+ans[i]\nprint((*ans2))\n", "N = int(input())\n*A, = list(map(int, input().split()))\nB = [0] * N\nfor i in range(N):\n    B[0] -= A[i] * (i%2*2-1)\nfor i in range(1, N):\n    B[i] = A[i-1]*2 - B[i-1]\nprint((*B))\n", "n = int(input())\na = list(map(int,input().split()))\nans = []\ncnt = 0\nfor i in range(1,n-1,2):\n  cnt += a[i]*2  \nans.append(sum(a)-cnt)\nfor i in range(n):\n  ans.append(a[i]*2-ans[i])\nprint(*ans[:-1])", "N = int(input())\nA = list(map(int,input().split()))\n\ntemp = sum(A)\nfor i in range(1, N, 2):\n  temp -= A[i] * 2\n\nR = [0] * N\nR[0] = temp\n\nfor i in range(1, len(R)):\n  R[i] = A[i - 1] * 2 - R[i - 1]\n\nprint(*R)", "N = int(input())\nlsA = list(map(int,input().split()))\nx1_2 = 0\nfor i in range(N):\n    if i % 2 == 0:\n        x1_2 += lsA[i]\n    else:\n        x1_2 -= lsA[i]\nx1 = x1_2//2\nlsx = [x1]\nfor i in range(N):\n    lsx.append(lsA[i]-lsx[i])\nlsx2 = [str(2*lsx[i]) for i in range(N)]\nprint(' '.join(lsx2))", "N=int(input())\n*A,=map(int,input().split())\nB=[0]*N\na1=A[0]\ni=1\nwhile i<N:\n    a1+=A[i+1]-A[i]\n    i+=2\nB[0]=a1\ni=1\nwhile i<N:\n    B[i]=2*(A[i-1]-B[i-1]//2)\n    i+=1\nprint(*B)", "n = int(input())\na = list(map(int, input().split()))\nans = a[0]\nl = []\n\nfor i in range(1, n, 2):\n    ans -= a[i]\n    ans += a[i + 1]\n\nl.append(ans)\n\nfor i in range(n - 1):\n    ans = a[i]*2 - ans\n    l.append(ans)\n\nprint(*l)", "n = int(input())\na = list(map(int, input().split()))\nb = [0]*n\n#print(a)\nsum_r = sum(a)\ntmp = 0\n#print(sum)\nfor i in range(n//2+1):\n    #print(i*2)\n    tmp += a[i*2]*2\n\nb[0] = tmp-sum_r\n#print(b[0])\nfor i in range(1,n):\n    b[i] = a[i-1]*2-b[i-1]\n    \nprint((\" \".join([str(i) for i in b])))\n", "n=int(input())\na=list(map(int,input().split()))\na_=sum(a)\nb=0\nfor i in range(1,n,2):\n    b+=2*a[i]\nans=a_-b\nc=[]\nc.append(str(ans))\nfor i in range(n-1):\n    ans=2*a[i]-ans\n    c.append(str(ans))\nprint((' '.join(c)))\n\n\n", "n = int(input())\na = list(map(int,input().split()))\n\nsum_a = sum(a)\nans = [0]*n\nans[0] = sum_a - 2*(sum(a[1:n-1:2]))\nfor i in range(1,n):\n    ans[i] = 2*a[i-1] - ans[i-1]\nprint(*ans)", "N = int(input())\nA = list(map(int, input().split()))\n\ntmp = 0\nfor i in range(N//2):\n  tmp += A[2*i+1]\n  \nans = []\nif sum(A) > 2*tmp:\n  ans.append(sum(A)-2*tmp)\nelse:\n  ans.append(0)\n  \nfor i in range(N-1):\n  ans.append(2*A[i]-ans[-1])\nprint((*ans))\n", "n=int(input())\na=list(map(int,input().split()))\n\ns=sum(a)\n\nans=[]\n\ns1=0\n\nfor i in range(n):\n  if i%2==1:\n    s1+=a[i]\n    \nans.append(str(s-s1*2))\nfor j in range(n-1):\n  ans.append(str(a[j]*2-int(ans[-1])))\n  \nprint(' '.join(ans))", "n = int(input())\na = list(map(int,input().split()))\nans = [0] * n\nans[0] = sum(a) - 2 * (sum(a[1::2]))\nfor i in range(1,n):\n    ans[i] = 2*a[i-1]-ans[i-1]\nprint(' '.join(map(str,ans)))", "n = int(input())\na =  list(map(int, input().split()))\n\ntotal = 0\nfor i in range(n):\n    total += a[i]*(1 if i%2==0 else -1)\n\nans = [total]\n\nfor i in range(0, n-1):\n    ans.append(2*a[i]-ans[i])\n\nprint(\" \".join(map(str, ans)))", "N = int(input())\nA = list(map(int,input().split()))\nx = [None]*N\nsm = 0\nsign = 1\nfor i in range(N):\n    sm += sign*A[i]\n    sign *= -1\nx[0] = sm // 2\nfor i in range(1,N):\n    x[i] = A[i-1]-x[i-1]\nprint(*map(lambda a: a*2, x))", "n = int(input())\na = list(map(int,input().split()))\n\nx = [0]*n\nfor i in range(n):\n    x[0] += (-1)**(i) * a[i]\n    \nfor i in range(1,n):\n    x[i] = 2*a[i-1] - x[i-1]\n    \nfor i in range(n):\n    print(x[i],end=\"\")\n    print(\" \",end=\"\")", "def main():\n    import sys\n    input = lambda:sys.stdin.readline().strip()\n    \n    N = int(input())\n    A = list(map(int,input().split()))\n\n    #i%2==0\u3092\u52a0\u7b97\u3001i%2==1\u3092\u6e1b\u7b97\u3059\u308c\u3070\u5c711\u306e\u9ad8\u3055\u306b\u306a\u308b\u3002\n    tmp = 0\n    for i in range(N):\n        if i%2==0:\n            tmp+=A[i]\n        else:\n            tmp-=A[i]\n\n    ans = [tmp]\n    for i in range(N-1):\n        tmp = (A[i]-tmp//2)*2\n        ans.append(tmp)\n\n    print(*ans)\n        \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = [int(x) for x in input().split()]\n \ns_sum = sum(A)\n \nans = [None] * N\n \nans[0] = s_sum\nfor i in range(1, N, 2):\n  ans[0] -= 2 * A[i]\n \nfor i in range(N-1):\n  ans[i + 1] = 2 * A[i] - ans[i]\n \nprint(*ans)", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf,comb\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nfrom functools import reduce\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\n\nn = INT()\na = LIST()\nb = [0]*n\nk = 0\nfor i in range(n//2):\n    k += a[2*i+1] - a[2*i]\n\nb[0] = a[n-1] - k\nb[n-1] = a[n-1] + k\n\nfor i in range(1, n-1):\n    b[i] = 2*a[i-1] - b[i-1]\nprint(*b)", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[18]:\n\n\nN = int(input())\nA = list(map(int, input().split()))\n\n\n# In[19]:\n\n\ns = sum(A)\nx = s - sum(A[1::2])*2\nans = [x]\nfor i in range(N-1):\n    x = 2*A[i]-x\n    ans += [x]\nprint((*ans))\n\n\n# In[ ]:\n\n\n\n\n", "import sys\ninput=sys.stdin.readline\n\nn=int(input())\na=list(map(int,input().split()))\n\nsuma=sum(a)\nx=[0]*n\ntmp=0\nfor i in range(1,n,2):\n    tmp+=a[i]\nx[0]=suma-2*tmp\n\nfor i in range(1,n):\n    x[i]=2*a[i-1]-x[i-1]\nfor i in x:\n    print(i,end=\" \")"]