["n = int(input())\ns = input()\ns = list(map('_ABC'.index, s))\ns0 = s[0]\n\nMOD = 10 ** 9 + 7\n\ndp = [0, 0, 0, 0]\ndp[s0] = 1\n\np = 1\nwhile p < n and s[p] == s0:\n    p += 1\n\nxor = 0 if p % 2 == 0 else s0\n\nfor i, c in enumerate(s[p:], start=p):\n\n    d, e = c % 3 + 1, (c + 1) % 3 + 1\n\n    dp[c] = sum(dp) % MOD\n    dp[d], dp[e] = dp[e], dp[d]\n\n    if i == p:\n        dp[c] += p // 2\n        dp[s[i - 1] ^ c] += (p - 1) // 2\n    elif xor == 0:\n        dp[c] += 1\n\n    xor ^= c\n\nprint((sum(dp) % MOD))\n", "n = int(input())\ns = input()\ns = list(map('_ABC'.index, s))\n\nMOD = 10 ** 9 + 7\n\ndp = [0, 0, 0, 0]\ndp[s[0]] = 1\n\nxor = s[0]\np = 1\nwhile p < n and s[p] == s[0]:\n    xor ^= s[p]\n    p += 1\n\nfor i, c in enumerate(s[p:], start=p):\n\n    d, e = c % 3 + 1, (c + 1) % 3 + 1\n\n    dp[c] = sum(dp) % MOD\n    dp[d], dp[e] = dp[e], dp[d]\n\n    if i == p:\n        dp[c] += p // 2\n        dp[s[i - 1] ^ c] += (p - 1) // 2\n    elif xor == 0:\n        dp[c] += 1\n\n    xor ^= c\n\nprint((sum(dp) % MOD))\n", "n = int(input())\ns = input()\ns = list(map('_ABC'.index, s))\n\nMOD = 10 ** 9 + 7\n\ndp = [0, 0, 0, 0]\ndp[s[0]] = 1\n\nxor = s[0]\np = 1\npotential = 0\nwhile p < n and s[p] == s[0]:\n    xor ^= s[p]\n    p += 1\n    potential += 1\n\nfor i, c in enumerate(s[p:], start=p):\n\n    d, e = c % 3 + 1, (c + 1) % 3 + 1\n\n    dp[c] = sum(dp) % MOD\n    dp[d], dp[e] = dp[e], dp[d]\n\n    if potential > 0:\n        if s[i - 1] == d:\n            dp[c] += (potential + 1) // 2\n            dp[e] += potential // 2\n        else:\n            dp[c] += (potential + 1) // 2\n            dp[d] += potential // 2\n        potential = 0\n    elif xor == 0:\n        dp[c] += 1\n    xor ^= c\n\nprint((sum(dp) % MOD))\n"]