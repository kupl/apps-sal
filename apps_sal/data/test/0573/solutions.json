["n = int(input())\nd = list(map(int, input().split()))\ns = {i:0 for i in [1, 2]}\nfor i in d:\n\ts[i] += 1\nif s[2] >= s[1]:\n\tprint(s[1])\nelse:\n\tprint(s[2] + (s[1] - s[2]) // 3)\n", "n = int(input())\nl = [int(x) for x in input().split()]\nfrom collections import Counter\na = Counter(l)\nans = 0\nans += min(a[2], a[1])\na[1] -= ans\nans += a[1]//3\nprint(ans)", "# a,b = list(map(int, input().strip().split()))\nn = int(input())\n\na = list(map(int, input().strip().split()))\n\nena = a.count(1)\ndva = a.count(2)\n\nvseh = 0\n\nm = min(ena,dva)\n\nvseh += m\nena -= m\ndva -= m\n\nvseh += ena//3\n\nprint(vseh)\n", "n = int(input())\na1 = 0\na2 = 0\nans = 0\ns = input().split()\nfor i in range(n):\n  if s[i] == \"1\":\n    a1 += 1\n  else:\n    a2 += 1\nwhile (a1 >= 1) and (a2 >= 1):\n  ans += 1\n  a1 -= 1\n  a2 -= 1\nwhile (a1 >= 3):\n  ans += 1\n  a1 -= 3\nprint(ans)", "n = int(input())\ns = input()\nk = s.split()\nm = k.count('1')\nn = k.count('2')\nif m <= n:\n    total = m\nelse:\n    total = n + (m-n)//3\nprint(total)\n", "n = map(int, input().split())\na = list(map(int, input().split()))\nc2 = sum([1 for i in a if i ==2 ])\nc1 = sum([1 for i in a if i ==1 ])\nans = 0\nans = min(c1,c2)\nc2 -= ans\nc1 -= ans\nans += c1//3\nprint(ans)", "n = int(input())\na = list(input().split())\n\nm = a.count('2')\nk = n - m\n\nif m <= k:\n    ans = m\n    k -= m\nelse:\n    ans = k\n    k = 0\n\nprint(ans + k // 3)", "n = int(input())\na = [int(i) for i in input().split()]\nans = min(a.count(2), a.count(1)) + (a.count(1) - min(a.count(2), a.count(1))) // 3\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\nc=[0,0]\nfor i in a:\n    if i==1:\n        c[0]+=1\n    else:\n        c[1]+=1\n\nif c[1]<c[0]:\n    print(c[1]+ (c[0]-c[1])//3)\nelse:\n    print(c[0])\n\n", "from sys import stdin as cin\nfrom sys import stdout as cout\n\ndef main():\n    n = int(cin.readline())\n    a = list(map(int, cin.readline().split()))\n    kol1 = 0\n    kol2 = 0\n    for i in a:\n        if i == 1:\n            kol1 += 1\n        else:\n            kol2 += 1\n    o = 0\n    if kol2 <= kol1:\n        o = kol2\n        kol1 -= kol2\n        kol2 = 0\n    else:\n        o = kol1\n        kol2 -= kol1\n        kol1 = 0\n    cout.write(str(o + kol1 // 3))\n\nmain()\n", "n = int(input())\nai = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if ai[i] == 2:\n        ans += 1\nprint(min(n - ans,ans)+max(0,(n-ans*2)//3))\n", "n = int(input())\nL = list(map(int, input().split()))\na = 0\nb = 0\nfor i in L:\n    if i == 1:\n        a += 1\n    else:\n        b += 1\nif b <= a:\n    ans = b\n    a -= b\n    b = 0\nelse:\n    ans = a\n    a = 0\n    b -= 1\nans += a // 3\nprint(ans)\n", "n = int(input())\nl = [int(i) for i in input().split(\" \")]\n\none = l.count(1)\ntwo = n - one\nresult = 0\n\nif two >= one:\n    result = one\nelse:\n    result += two\n    one = one - two\n    result += int(one/3)\nprint(result)\n\n", "# IAWT\nn = int(input())\na = list(map(int, input().split()))\nx = a.count(1)\ny = a.count(2)\nz = min(x, y)\nx -= z\nz += x // 3\nprint(z)\n", "n=int(input())\narr=list(map(int,input().strip().split(' ')))\na=arr.count(1)\nb=arr.count(2)\n\nif(b>=a):\n    print(a)\nelse:\n    s=b\n    s=s+(a-b)//3\n    print(s)\n", "n = int(input())\na = [int(i) for i in input().split()]\nones = a.count(1)\ntwos = a.count(2)\nif ones <= twos:\n  print(ones)\nelse:\n  diff = ones - twos\n  print(twos + diff//3)", "n = int(input())\na = list(map(int, input().split()))\nn1, n2 = 0, 0\nfor i in a:\n    if i==1: n1 += 1\n    if i==2: n2 += 1\ns = min(n2, n1)\nn1 -= s\ns += n1//3\nprint(s)\n\n", "n=int(input()); d={}\na=input().split()\nx=a.count('1')\ny=a.count('2')\nif y<x:\n    print(y+int((x-y)/3))\nelse:\n    print (x)\n\n        \n", "n=int(input())\na = [int(x) for x in input().split()]\none=a.count(1)\ntwo=a.count(2)\nif one==two:\n    print(one)\nelif two>one:\n    print(one)\nelse:\n    ans=two\n    ans=ans+int((one-two)/3)\n    print(ans)\n", "n = int(input())\na = [int(i) for i in input().split()]\np = [0] * 3\nfor i in range(n):\n    p[a[i]] += 1\nans = min(p[1], p[2])\np[1] -= ans\np[2] -= ans\nans += p[1] // 3\nprint(ans)", "n=int(input())\nl=list(map(int,input().split()))\na=l.count(1)\nb=l.count(2)\nif a==b:\n    print(a)\nelif a<b:\n    print(a)\nelif a>b:\n    print(b+(a-b)//3)", "\nn = int(input())\n\ntab = [0, 0]\n\nfor a in input().split():\n    if a == \"1\":\n        tab[0] += 1\n    else:\n        tab[1] += 1\n\nnums_of_cb = min([tab[0], tab[1]])\nprint(nums_of_cb + (tab[0] - nums_of_cb) // 3)\n", "x=int(input())\na=list(map(int,input().split()))\no=a.count(1)\nt=a.count(2)\nans=min(o,t)\nif o>t:\n\to=o-ans\n\tnew=o//3\n\t#print(new)\n\tans=ans+new\n\n\nprint(ans)", "n = int(input())\na = [int(i) for i in input().split()]\nd = dict()\nd[1] = 0\nd[2] = 0\nfor i in range(n):\n  if a[i] == 1:\n    d[1] += 1\n  else:\n    d[2] += 1\n\nif d[1] >= d[2]:\n  print(d[2] + (d[1]-d[2])//3)\nelse:\n  print(d[1])", "from collections import Counter\nn=int(input())\nc=Counter(list(map(int,input().split())))\nif c[1]<c[2]:\n    print(c[1])\nelse:\n    print((c[1]-c[2])//3+c[2])"]