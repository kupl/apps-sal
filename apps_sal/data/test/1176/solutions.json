["n=int(input())\na=list(map(int,input().split()))\ncount=0\nans=[]\nfor i in range(n):\n  ans.append(abs(a[i]))\n  if a[i]<0:\n    count+=1\n\nif count%2==0:\n  print((sum(ans)))\nelse:\n  print((sum(ans)-2*min(ans)))\n", "n = int(input())\na = list(map(int, input().split()))\ncnt = [1 for x in a if x < 0]\nans = 0\nmini = float(\"inf\")\nfor i in a:\n    if i < 0:\n        i *= -1\n    mini = min(mini, i)\n    ans += i\nif sum(cnt) % 2 == 0:\n    print(ans)\nelse:\n    print(ans - mini * 2)", "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\nneg = 0\nzero = False\nsmallest = abs(a[0])\n\nfor i in range(n):\n    ans += abs(a[i])\n\n    if abs(a[i]) < smallest:\n        smallest = abs(a[i])\n\n    if a[i] == 0:\n        zero = True\n    elif a[i] < 0:\n        neg += 1\n\nif neg % 2 == 1 and not zero:\n    print(ans-2*smallest)\nelse:\n    print(ans)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef S_MAP(): return list(map(str, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\nminus = 0\nplus = 0\nzero = 0\nans_A = []\nfor a in A:\n    if a < 0:\n        minus += 1\n    elif a > 0:\n        plus += 1\n    else:\n        zero += 1\n    ans_A.append(abs(a))\n\nans_A.sort()\n\nif zero > 0:\n    print((sum(ans_A)))\n    return\nif minus % 2 == 0:\n    print((sum(ans_A)))\nelse:\n    print((sum(ans_A[1:])-ans_A[0]))\n\n\n", "n=int(input())\na=list(map(int,input().split()))\nb=[abs(i) for i in a]\nprint(sum(b)-sum(i<0 for i in a)%2*min(b)*2)", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nminus = n\nfor i in range(n):\n  if a[i] >= 0:\n    minus = i\n    break\n\na = list(map(abs, a))\na.sort()\n\nif minus % 2 == 0:\n  print((sum(a)))\nelse:\n  print((sum(a) - 2 * a[0]))\n", "n=int(input())\na=list(map(int,input().split()))\ncount=0\nfor i in range(n):\n    if a[i]<0:\n        count+=1\nif count%2==0:\n    for j in range(n):\n        a[j]=abs(a[j])\n    print((sum(a)))\nelse:\n    for j in range(n):\n        a[j]=abs(a[j])\n    print((sum(a)-2*min(a)))\n    \n", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, A: \"List[int]\"):\n    # dp[1]: flipped\n    dp = [[float('inf')] * N for _ in range(2)]\n    dp[0][0] = A[0]\n    dp[1][0] = -A[0]\n    for i, a in enumerate(A[1:], 1):\n        dp[0][i] = max(dp[0][i-1]+a, dp[1][i-1]-a)\n        dp[1][i] = max(dp[0][i-1]-a, dp[1][i-1]+a)\n    return max(dp[0][N-2]+A[-1], dp[1][N-2]-A[-1])\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    A = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    print((solve(N, A)))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\ndef __starting_point():\n    #test()\n    main()\n\n__starting_point()", "N = int(input()); INF = float(\"inf\")\nA = list(map(int,input().split()))\n#dp[i+1][j]: i\u756a\u76ee\u307e\u3067\u898b\u3066j=0(i\u756a\u76ee\u304c\u305d\u306e\u307e\u307e),j=1(i\u756a\u76ee\u304c\u9006\u8ee2)\u306e\u6642\u306e\u6700\u5927\u5024\ndp = [[-INF]*2 for _ in range(N)]\ndp[0][0] = 0\ndp[0][1] = 0\ndp[1][0] = A[0]+A[1]\ndp[1][1] = -(A[0]+A[1])\nfor i in range(2,N):\n  dp[i][0] = max(dp[i-1][0] + A[i], dp[i-1][1] + A[i])\n  dp[i][1] = max(dp[i-1][0] - (A[i-1]*2 + A[i]), dp[i-1][1] + A[i-1]*2 - A[i])\n#print(dp)\nans = max(dp[N-1])\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\n\ncnt=0\nans=0\n\nfor i in range(n):\n    if a[i]<0:\n        cnt+=1\n        a[i]*=-1\n\n\n\nif cnt%2==0:\n    ans=sum(a)\n\nelse:\n    ans=sum(a)-2*min(a)\n\nprint(ans)\n", "import numpy as np\n\nn=int(input())\nA=np.array(list(map(int,input().split())))\nminus = np.count_nonzero(A < 0)\nA = np.abs(A)\n\nif 0 in A or minus % 2 == 0:\n  print(np.sum(A))\nelse:\n  print(np.sum(A) - 2 * np.min(A))", "N = int(input())\nA = list(map(int, input().split()))\n\ncnt = len([i for i in A if i < 0])\nPA = list(map(abs, A))\n\nif cnt % 2 == 0:\n    print(sum(PA))\nelse:\n    print(sum(PA) - min(PA) * 2)", "N = int(input())\nA = list(map(int, input().split()))\nans = 0\nAmin = 10 ** 9 + 1\nflag = 0\nfor i in range(N):\n  if i < N-1 and A[i] < 0:\n    A[i] = -A[i]\n    A[i+1] = -A[i+1]\n  elif i == N-1 and A[i] < 0:\n    A[i] = -A[i]\n    flag = -1\n    \n  ans += A[i]\n  \n  if A[i] < Amin:\n    Amin = A[i]\n    \nprint((ans + (flag * 2 * Amin)))\n\n\n", "N = int(input())\nA = list(map(int, input().split()))\n\nsouwa = 0\ncnt = 0\nkeep = 1e10\n\nfor i in range(N):\n    if A[i] < 0:\n        cnt += 1\n        A[i] *= (-1)\n\n    souwa += A[i]\n    keep = min(keep, A[i])\n\nprint((souwa - 2 * keep * (cnt % 2)))\n", "#!/usr/bin/env python3\n\nINF = 10**9 + 1\n\ndef solve(n,a):\n    ans = 0\n    minusCount = 0\n    minimumNum = INF\n    lst = []\n    for i in range(n):\n        if a[i] < 0:\n            minusCount += 1\n        ans += abs(a[i])\n        minimumNum = min(minimumNum,abs(a[i]))\n    if minusCount % 2 == 0:\n        pass\n    else:\n        ans -= minimumNum*2\n    return ans\n\n\ndef main():\n    N = int(input())\n    a = list(map(int,input().split()))\n    print((solve(N,a)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "MAX_N = 1_000_000_000\n\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\ncnt = 0\nmin_n = MAX_N\nans = 0\nfor a in A:\n    ans += abs(a)\n    if a <= 0:\n        cnt += 1\n    min_n = min(min_n, abs(a))\nif cnt % 2 == 0:\n    print(ans)\nelse:\n    print((ans - min_n * 2))\n", "n = int(input())\na = list(map(int,input().split()))\nc = 0\nfor i in range(n):\n    if a[i] < 0:\n        c += 1\n        a[i] = abs(a[i])\nif c % 2 == 0:\n    print(sum(a))\nelse:\n    print(sum(a)-(min(a)*2))", "N = int(input())\nA = list(map(int,input().split()))\n\nminus_cnt = 0\nabs_sum = 0\nmin_abs_val = 1000000000\nfor i in range(N):\n    abs_val = abs(A[i])\n    abs_sum = abs_sum + abs_val\n    if abs_val < min_abs_val:\n        min_abs_val = abs_val\n    if A[i] < 0:\n        minus_cnt = minus_cnt + 1\n\nB_max_sum = 0\nif (minus_cnt % 2 == 0) or (min_abs_val == 0):\n    B_max_sum = abs_sum\nelse:\n    B_max_sum = abs_sum - min_abs_val * 2\n\nprint(B_max_sum)\n", "n = int(input())\nA =list(map(int, input().split()))\n\ndp = [[0]*2 for _ in range(n)]\n# dp[i][0]:*1\n# dp[i][1]:*(-1)\nfor i in range(n-1):\n    if i == 0:\n        dp[i+1][0] += A[i]\n        dp[i+1][1] += -A[i]\n    else:\n        dp[i+1][0] = max(dp[i][0]+A[i], dp[i][1]+(-1)*A[i])\n        dp[i+1][1] = max(dp[i][0]+(-1)*A[i], dp[i][1]+A[i])\nans = max(dp[n-1][0]+A[n-1], dp[n-1][1]+(-1)*A[n-1])\nprint(ans)\n", "N,A = int(input()),list(map(int,input().split()))\n\nzero = 0\nminus = 0\nfor i in range(N):\n    if A[i]<0:minus += 1\n    elif A[i]==0:\n        zero=1\n    A[i] = abs(A[i])\n\nif (minus%2==0)|(zero==1):\n    print(sum(A))\nelse:\n    print(sum(A)-2*min(A))", "n = int(input())\na = list(map(int, input().split()))\n\n# \u5168\u3066\u306e\u5024\u306e\u5408\u8a08\u3092\u6c42\u3081\u3001\u8ca0\u306e\u5024\u304c\u5076\u6570\u500b\u3067\u3042\u308c\u3070\u5168\u3066\u306e\u5024\u306f\u975e\u8ca0\u306e\u5024\u306b\u3067\u304d\u308b\u70ba\u3001\u5408\u8a08\u5024\u3092\u51fa\u529b\n# \u8ca0\u306e\u5024\u306e\u6570\u304c\u5947\u6570\u500b\u306e\u5834\u5408\u306f1\u3064\u3060\u3051\u304c\u8ca0\u306e\u5024\u306b\u306a\u308b\u70ba\u3001\u3053\u306e\u5834\u5408\u306f\u6700\u5c0f\u5024\u3092\u8ca0\u306e\u5024\u306b\u3057\u3066\u5408\u8a08\u3092\u51fa\u529b\nans = 0\ncount = 0\nfor i in range(n):\n  if a[i] < 0: count += 1 # \u8ca0\u306e\u5024\u3092\u30ab\u30a6\u30f3\u30c8\n  a[i] = abs(a[i])\n  ans += a[i] # \u5168\u3066\u306e\u5024\u3092\u8db3\u3057\u3066\u3044\u304f\nif count%2 == 0: print(ans) # \u8ca0\u306e\u5024\u304c\u5076\u6570\u500b\u3067\u3042\u308c\u3070\u305d\u306e\u307e\u307e\u51fa\u529b\nelse:\n  ans -= 2*min(a) # \u8ca0\u306e\u5024\u304c\u5947\u6570\u500b\u3067\u3042\u308c\u3070\u6700\u5c0f\u5024\u306e\u5024\u5206\u6e1b\u3089\u3057\u3066\u51fa\u529b\n  print(ans)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom functools import reduce\nfrom bisect import bisect_left, insort_left\nfrom heapq import heapify, heappush, heappop\n\nINPUT = lambda: sys.stdin.readline().rstrip()\nINT = lambda: int(INPUT())\nMAP = lambda: list(map(int, INPUT().split()))\nS_MAP = lambda: list(map(str, INPUT().split()))\nLIST = lambda: list(map(int, INPUT().split()))\nS_LIST = lambda: list(map(str, INPUT().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef main():\n    N = INT()\n    A = LIST()\n\n    neg = 0\n    m = INF\n    for i in range(N):\n        if A[i] < 0:\n            neg += 1\n            A[i] = - A[i]\n        m = min(m, A[i])\n\n    if 0 in A:\n        print((sum(A)))\n    else:\n        print((sum(A) - (2 * m)*(neg % 2)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\ns = [abs(i) for i in a]\nminus = sum([1 for i in a if i < 0])\nprint(sum(s) if minus%2 == 0 else sum(s)-2*min(s))", "import math\n\nn = int(input())\naL = list(map(int, input().split(\" \")))\n\nmc = 0\nfor a in aL:\n    if a < 0:\n        mc += 1\n\naL = list([abs(x) for x in aL])\n\nif mc % 2 == 0:\n    print((sum(aL)))\nelse:\n    print((sum(aL) - (2 * min(aL))))\n", "import numpy as np\n\nn = int(input())\nA = np.array(list(map(int,input().split())))\nminus = np.count_nonzero(A < 0)\nA = np.abs(A)\n\nif minus % 2 == 0:\n  print(np.sum(A))\nelse:\n  print(np.sum(A) - 2 * np.min(A))", "# coding: UTF-8\nimport sys\nimport numpy as np\nimport math\n\n\nn = int(input())\naList = list(map(int, input().split()))\nnumMinus = 0\nfor i in range(n):\n\tif aList[i] < 0:\n\t\tnumMinus += 1\n\t\taList[i] *= -1\n\naList.sort()\n\nif numMinus % 2 == 0:\n\tprint((sum(aList)))\nelse:\n\tprint((sum(aList) - 2 * aList[0]))\n", "n = int(input())\na = list(map(int, input().split()))\nminus = 0\nsum = 0\nzero = False\nminimum = abs(a[0])\nfor i in a:\n    if i == 0:\n        zero = True\n    if i < 0:\n        minus += 1\n    minimum = min(minimum, abs(i))\n    sum += abs(i)\nif zero:\n    print(sum)\nelif minus % 2 == 0:\n    print(sum)\nelse:\n    print(sum - 2 * minimum)", "import sys\n\ndef read_str(): return sys.stdin.readline().strip()\ndef read_int(): return int(sys.stdin.readline().strip())\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef read_str_split(): return list(sys.stdin.readline().strip())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    N = read_int()\n    A = read_int_list()\n    abs_a = list(map(abs, A))\n    minus_a = [v for v in A if v < 0]\n    min_abs = min(abs_a)\n    len_minus = len(minus_a)\n    sum_abs = sum(abs_a)\n    if len_minus % 2 == 0:\n        print(sum_abs)\n    else:\n        print((sum_abs - min_abs * 2))\n\ndef __starting_point():\n    Main()\n\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\n\nc=0\nfor ia in a:\n    if ia<0:\n        c+=1\na=list(map(abs,a))\n\nif c%2==0:\n    print(sum(a))\nelse:\n    print(sum(a)-2*min(a))", "n = int(input())\na = list(map(int, input().split()))\nans = 0\ncount = 0\nfor i in range(n):\n    if a[i] < 0:\n        count += 1\n    a[i] = abs(a[i])\n    ans += a[i]\nif count % 2 == 0:\n    print(ans)\nelse:\n    ans -= 2 * min(a)\n    print(ans)", "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\n\ncnt = 0\nfor a in A:\n    if a< 0:\n        cnt += 1\n\nif cnt % 2 == 0:\n    B = [abs(a) for a in A]\n    ans = sum(B)\nelse:\n    C = [abs(a) for a in A]\n    C_min = min(C)\n    C_min_id = C.index(C_min)\n\n    C[C_min_id] = C[C_min_id] * (-1)\n    ans = sum(C)\nprint(ans)\n", "n = int(input())\nA = list(map(int,input().split()))\n\nlaw_ans = 0\nabsminA = float('inf')\nfor a in A:\n    law_ans += abs(a)\n    absminA = min(absminA, abs(a))\n\n\ncnt_neg = 0\n\nfor a in A:\n    if a < 0:\n        cnt_neg += 1\n\ncnt_0 = A.count(0)\n\nif cnt_0 == 0:\n    if cnt_neg%2 == 0:\n        print(law_ans)\n    else:\n        print((law_ans-2*absminA))\nelse:\n    print(law_ans)\n", "n=int(input())\na=list(map(int,input().split()))\n\nc=0\nfor ia in a:\n    if ia<0:\n        c+=1\na=list(map(abs,a))\n\nif c%2==0:\n    print(sum(a))\nelse:\n    print(sum(a)-2*min(a))", "n = input()\na = list(map(int, input().split()))\nm = 0\nfor i in a:\n  if i < 0:\n    m += 1\nb = list(map(abs, a))\nif m % 2 == 0:\n  print(sum(b))\nelse:\n  print(sum(b) - 2*min(b))", "n = int(input())\na = list(map(int,input().split()))\nnum = 0\nmi = 10**9\nfor i in range(n):\n    num += abs(a[i])\n    if abs(mi) >= abs(a[i]):\n        mi = a[i]\ncnt = 0\nfor i in range(n):\n    if a[i] < 0:\n        cnt += 1\nif cnt%2 == 1:\n    print(num-2*abs(mi))\nelse:\n    print(num)", "n=int(input())\na=list(map(int,input().split()))\nc=0#\u8ca0\u6570\u306e\u6570\nab=10**10#\u7d76\u5bfe\u5024\u306e\u6700\u5c0f\ns=0#\u7d76\u5bfe\u5024\u306e\u7dcf\u548c\nfor i in range(n):\n    if a[i]<0:\n        c+=1\n    if ab>abs(a[i]):\n        ab=abs(a[i])\n    s+=abs(a[i])\nif c%2==0:\n    print(s)\nelse:\n    print((s-2*ab))\n", "#!/usr/bin/env python3\nn, *a = list(map(int, open(0).read().split()))\nfor i in range(n - 1):\n    if a[i] < 0:\n        a[i] *= -1\n        a[i + 1] *= -1\nprint((sum(a) - 2 * min(abs(i) for i in a) - 2 * a[-1] if a[-1] < 0 else sum(a)))\n", "n=int(input())\na=list(map(int,input().split()))\nif 0 in a:\n  print(sum(abs(i)for i in a))\nelse:\n  pc=mc=0\n  for i in range(n):\n    if a[i]>0:pc+=1\n    else:mc+=1\n    a[i]=abs(a[i])\n  if mc%2:print(sum(a)-min(a)*2)\n  else:print(sum(a))", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, *A = list(map(int, read().split()))\n\n    neg = total = 0\n    min_abs = INF\n    for a in A:\n        if a < 0:\n            neg += 1\n        total += abs(a)\n        if min_abs > abs(a):\n            min_abs = abs(a)\n\n    if neg % 2 == 1:\n        total -= 2 * min_abs\n\n    print(total)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n\tN = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\tif A.count(0) > 0:\n\t\tprint((sum([abs(a) for a in A])))\n\t\treturn 0\n\tminus = 0\n\tfor i in range(len(A)):\n\t\tif A[i] < 0:\n\t\t\tminus += 1\n\tif minus % 2 == 0:\n\t\tprint((sum([abs(a) for a in A])))\n\t\treturn 0\n\tA.sort(key=lambda a: abs(a))\n\tprint((sum([abs(a) for a in A[1:]]) - abs(A[0])))\n\nmain()\n", "n = int(input())\na = list(map(int,input().split()))\nm = 0\nfor i in range(n):\n    if a[i] < 0:\n        m += 1\n        a[i] = abs(a[i])\nif m % 2 == 0:\n    print(sum(a))\nelse:\n    print(sum(a) - (min(a) * 2))", "N=int(input())\nA=list(map(int,input().split()))\n\nplus=0\nzero=0\nminus=0\n\nfor i in range(N):\n    if A[i]>0:\n        plus+=1\n    elif A[i]<0:\n        minus+=1\n    else:\n        zero+=1\nans=0\nm=10**9+10\nfor i in range(N):\n    ans+=abs(A[i])\n    m=min(m,abs(A[i]))\n\n\nif minus%2==0 or zero>0:\n    pass\nelse:\n    \n    ans=ans-2*m\n\nprint(ans)", "_,*A=map(int,open(0).read().split());print(sum(B:=[abs(a)for a in A])-2*min(B)*(sum(1 for a in A if a<0)%2))", "N = int(input())\na_ls = list(map(int, input().split()))\nabs_ls = [0] * N\nminus = 0\nfor i in range(N):\n    if a_ls[i] < 0:\n        minus += 1\n    abs_ls[i] = abs(a_ls[i])\n\nif minus % 2 == 1:\n    ans = sum(abs_ls) - 2 * min(abs_ls)\nelse:\n    ans = sum(abs_ls)\nprint(ans)", "N=int(input())\nA=list(map(int,input().split()))\nimport bisect\nA.sort()\nB=[abs(i) for i in A]\nl=min(B)\ncount=0\nfor i in range(N):\n  if A[i]<0:\n    count+=1\n  else:\n    break\nif count%2==1:\n  for i in range(count-1):\n    A[i]=-A[i]\n\n  print(sum(A)-2*l-2*A[count-1])\n\nif count%2==0:\n  for i in range(count):\n    A[i]=-A[i]\n  print(sum(A))", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n\n\n\n\n\n\n    n = I()\n    a = LI()\n\n    ans = 0\n    mn = 0\n\n    for i in range(n):\n        if a[i] <0:\n            mn += 1\n            a[i] *= -1\n\n    if (mn %2 == 0):\n        ans = sum(a)\n    else:\n        ans = sum(a)-min(a)*2\n\n    print(ans)\n\n                    \n\n\nmain()\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\ncnt = 0\nfor i in range(n):\n    b.append(abs(a[i]))\n    if a[i] < 0:\n        cnt += 1\nif cnt % 2 == 0:\n    print(sum(b))\nelse:\n    print(sum(b)-min(b)*2)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, *A = list(map(int, read().split()))\n\n    neg = sum(1 for a in A if a < 0)\n    ans = sum(abs(a) for a in A)\n\n    if neg % 2 == 1:\n        ans -= 2 * min(abs(a) for a in A)\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n\ncnt = 0\n\nfor a in A:\n  if a < 0:\n    cnt += 1\n\nA = list(map(lambda x: abs(x), A))\nsum_A = sum(A)\n    \nif cnt % 2 == 0:\n  print(sum_A)\n  \nelse:\n  A.sort()\n  print(sum_A - 2 * min(A))", "N = int(input())\nAs = list(map(int, input().split()))\n\n#\u8ca0\u306e\u6570\u30ab\u30a6\u30f3\u30c8\u3068\u7d76\u5bfe\u5024\u30ea\u30b9\u30c8\u4f5c\u6210\nabs_As = []\nnegative_count = 0\n\nfor A in As:\n    if(A <= 0):\n        abs_As.append(abs(A))\n        negative_count += 1\n    \n    else:\n        abs_As.append(A)\n\n#print(As)\n#print(abs_As)\n#print(negative_count)\n\nif(negative_count % 2 == 0):\n    print(sum(abs_As))\n\nelse:\n    print(sum(abs_As) - 2 * min(abs_As))", "n = int(input())\na = list(map(int,input().split()))\nc = 0\ns = 0\nma = 10**6\nfor i in a:\n    if i<0:\n        c+=1\n        c%=2\n    s += abs(i)\n    ma = min(ma,abs(i))\nif c == 1:\n    print((s-2*ma))\nelse:\n    print(s)\n", "def main():\n    n=int(input())\n    a=sorted(map(int,input().split()))\n    aa=sorted(abs(i) for i in a)\n    \n    if sum(i<0 for i in a)%2==0:\n        print(sum(aa))\n    else:\n        print(-aa[0]+sum(aa[1:]))\n\ndef __starting_point():\n    main()\n__starting_point()", "def solve():\n  N = int(input())\n  A = list(map(int, input().split()))\n  B = [abs(a) for a in A]\n  ans = sum(B)\n  under = [a for a in A if a<0]\n  if len(under)%2==1:\n    ans -= min(B)*2\n  return ans\nprint(solve())", "N = int(input())\nA = list(map(int, input().split()))\n\nm = 0\n\nfor i in range(N):\n    if A[i] < 0:\n        m += 1\n        A[i] = -A[i]\n\nif m % 2 == 0:\n    print(sum(A))\nelse:\n    print(sum(A) - 2 * min(A))", "n = int(input())\na = list(map(int, input().split()))\nb = min(a,key=abs)\nc = 0\nsum_abs_a = 0\nfor i in range(n):\n  sum_abs_a += abs(a[i])\nfor i in a:\n  if i < 0:\n    c += 1\nif c % 2 == 0:\n  print(sum_abs_a)\nelse:\n  print((sum_abs_a - abs(b)*2))\n\n\n", "N = int(input())\nA = list(map(int,input().split()))\ncnt = 0\nfor i in range(N):\n    if A[i] < 0:\n        cnt += 1\n        A[i] *= -1\nA.sort()\nif cnt % 2 == 1:\n    print(sum(A[1:])-A[0])\nelse:\n    print(sum(A))", "n = int(input())\na = list(map(int, input().strip().split()))\n\nnum_odd_minus = 0\nres = 0\nmin_num = abs(a[0])\nfor num in a:\n    if num < 0:\n        num_odd_minus += 1\n    abs_num = abs(num)\n    res += abs_num\n    if min_num > abs_num:\n        min_num = abs_num\n\nif num_odd_minus % 2 == 1:\n    res -= min_num * 2\n\nprint(res)\n", "import numpy as np\nN = int(input())\nAs = np.array(list(map(int, input().split())), dtype = \"int64\")\n#%%\nminus_num = len(np.where(As<0)[0])\nabs_As = np.abs(As)\n\nif 0 in As or minus_num%2 == 0:\n    print(sum(abs_As))\nelse:\n    print(sum(abs_As) - 2*min(abs_As))", "# from pprint import pprint\n# import math\n# import collections\nimport numpy as np\n\nn = int(input())\n# n, k = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\n\nminus_signs = sum([1 for _ in a if np.sign(_) == -1])\n\nif minus_signs % 2 == 0:\n    res = sum([abs(_) for _ in a])\nelse:\n    _min = min([abs(_) for _ in a])\n    res = sum([abs(_) for _ in a])\n\n    res = res - _min - _min\n\nprint(res)\n", "#a, b, k = map(int, input().split( ))\nn = int(input())\nA = list(map(int,input().split()))\n\ns = 0\nm = 10**9\nnimus = 0\nfor a in A:\n  s += abs(a)\n  m = min(m,abs(a))\n  if a <0:\n    nimus += 1\n\nif nimus%2 == 0:\n  print(s)\nelse:\n  print((s-2*m))\n", "n = int(input())\na = list(map(int,input().split()))\n\ncnt_fu = 0\ncnt_0 = 0\nans = 0\nb = []\nfor i in range(n):\n    ans += abs(a[i])\n    b.append(abs(a[i]))\n    if a[i]<0:\n        cnt_fu += 1\n    if a[i]==0:\n        cnt_0 += 1\n#print(cnt_fu,cnt_0,ans,b)\nif cnt_fu%2==0:\n    print(ans)\nelse:\n    print((ans-min(b)*2))\n", "N = int(input())\nA = list(map(int, input().split()))\n\nminus_cnt = 0\nfor a in A:\n    if a < 0:\n        minus_cnt += 1\n\nabs_A = list(map(abs, A))\nsum_ = sum(abs_A)\n\nif minus_cnt % 2 == 0:\n    ans = sum_\nelse:\n    ans = sum_ - 2*min(abs_A)\n\nprint(ans)\n", "n = int(input())\nA = list(map(int,input().split()))\n\nlaw_ans = 0\nabsminA = float('inf')\nfor a in A:\n    law_ans += abs(a)\n    absminA = min(absminA, abs(a))\n\n\ncnt_neg = 0\n\nfor a in A:\n    if a < 0:\n        cnt_neg += 1\n\ncnt_0 = A.count(0)\n\nif cnt_neg%2 == 0:\n    print(law_ans)\nelse:\n    print((law_ans-2*absminA))\n\n", "n = int(input())\na = list(map(int, input().split()))\nmini = 10**9 + 1\ns = 0\nflag = 1\nfor i in a:\n    mini = min(mini, abs(i))\n    if i < 0:\n        flag *= -1\n    s += abs(i)\nif flag == 1:\n    print(s)\nelse :\n    print(s-2*mini)", "n = int(input())\nlis = list(map(int, input().split()))\n\nminus = 0\nfor i in range(n):\n    if lis[i] < 0:\n        minus += 1\n        lis[i] = lis[i]*-1\n\nif 0 in lis or minus % 2 == 0:\n    print(sum(lis))\nelse:\n    print(sum(lis) - 2*min(lis))", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\nimport numpy as np\n# import heapq\n# from collections import deque\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\nB = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nnum_minus = len(B[B < 0])\nabs_tot = sum(list(map(abs, A)))\nif num_minus % 2 == 0:\n    print(abs_tot)\nelse:\n    n_0 = 10**9\n    for i in A:\n        a = abs(i)\n        if a < n_0:\n            n_0 = a\n    print(abs_tot - (n_0 * 2))", "N = int(input())\nA = list(map(int, input().split()))\nnum_minus = sum([1 if v < 0 else 0 for v in A])\nsum_abs = sum([abs(v) for v in A])\nmin_abs = min([abs(v) for v in A])\nprint(sum_abs if num_minus % 2 == 0 else sum_abs - min_abs * 2)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef get_primenumber(number):#\u7d20\u6570\u5217\u6319\n    prime_list = []\n    search_list = list(range(2,number+1))\n    #search_list\u306e\u5148\u982d\u306e\u5024\u304c\u221an\u306e\u5024\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\n    while search_list[0] <= math.sqrt(number):\n      #search_list\u306e\u5148\u982d\u306e\u5024\u304c\u221an\u306e\u5024\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\n      #search_list\u306e\u5148\u982d\u3092prime_list\u306b\u5165\u308c\u3066\u3001\u5148\u982d\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u524a\u9664\n        head_num = search_list.pop(0)\n        prime_list.append(head_num)\n        #head_num\u306e\u500d\u6570\u3092\u9664\u53bb\n        search_list = [num for num in search_list if num % head_num != 0]\n    #prime_list\u306bsearch_list\u3092\u7d50\u5408\n    prime_list.extend(search_list)\n    return prime_list\ndef factrization_prime(number):#\u7d20\u56e0\u6570\u5206\u89e3\n    factor = {}\n    div = 2\n    s = math.sqrt(number)\n    while div < s:\n        div_cnt = 0\n        while number % div == 0:\n            div_cnt += 1\n            number //= div\n        if div_cnt != 0:\n            factor[div] = div_cnt\n        div += 1\n    if number > 1:\n        factor[number] = 1\n    return factor\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\nnum = []\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn = k()\nA = l()\n\nfor i in A:\n    if i<=0:\n        cnt += 1\n\nif cnt % 2 == 0:\n    A = list(map(lambda k:abs(k), A))\n    print(sum(A))\nelse:\n    A = list(map(lambda k:abs(k), A))\n    a = min(A)\n    print(sum(A)-2*a)", "def main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    B = [None] * n\n    cnt = 0\n    for i in range(n):\n        if A[i] <= 0:\n            cnt += 1\n        B[i] = abs(A[i])\n    print((sum(B) - 2 * min(B) if cnt % 2 == 1 else sum(B)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nabs_a = [abs(x) for x in a]\nminus = []\n\nfor x in a:\n    if x < 0:\n        minus.append(x)\n\ntmp = sum(abs_a)\n\nif len(minus) % 2 == 0:\n    print(tmp)\nelse:\n    print(tmp - min(abs_a)*2)", "n = int(input())\nlis = list(map(int, input().split()))\n\nif 0 in lis:\n    ans = 0\n    for i in lis:\n        if i < 0:\n            ans += -1 * i\n        else:\n            ans += i\n    print(ans)\n    return\n\nminus = [0]*n\nfor i in range(n):\n    if lis[i] < 0:\n        minus[i] = 1\n\nif sum(minus) % 2 == 0:\n    ans = 0\n    for i in lis:\n        if i < 0:\n            ans += -1 * i\n        else:\n            ans += i\n    print(ans)\nelse:\n    ans = 0\n    m = 10**9+1\n    for i in lis:\n        if i < 0:\n            ans += -1*i\n        else:\n            ans += i\n        m = min(m, abs(i))\n    print((ans - 2*m))\n", "n=int(input())\na=list(map(int,input().split()))\n\nminus_num = 0\nfor i in range(n):\n  if a[i] < 0:\n    minus_num += 1\n\nabs_a = list(map(abs,a))\nif minus_num % 2 == 0:\n  print(sum(abs_a))\nelse:\n  print(sum(abs_a)-2*min(abs_a))", "N = int(input())\nlsA = map(int,input().split())\nmainasu = 0\nminabs = 10**10\nls2 = []\nfor i in lsA:\n    if i < 0:\n        mainasu += 1\n        ls2.append(-i)\n    else:\n        ls2.append(i)\n    minabs = min(minabs,abs(i))\nif mainasu%2 == 0:\n    print(sum(ls2))\nelse:\n    print(sum(ls2)-2*minabs)", "N = int(input())\nA = [int(_) for _ in input().split()]\n\ncnt = 0\nfor i in range(N):\n    if A[i] < 0:\n        cnt += 1\n        A[i] *= -1\n\nif cnt % 2 == 0:\n    print((sum(A)))\nelse:\n    print((sum(A) - min(A) * 2))\n", "N = int(input())\nA = list(map(int, input().split()))\ntmp = 10**10\nminus = 0\nzeros = 0\nans = 0\nfor a in A:\n  if a > 0:\n    ans += a\n    tmp = min(tmp, a)\n  elif a == 0:\n    zeros += 1\n  else:\n    a = -a\n    ans += a\n    minus += 1\n    tmp = min(tmp, a)\nif minus % 2 == 1 and zeros == 0:\n  ans -= tmp*2\nprint(ans)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N = I()\n    A = LI()\n    A_abs = [abs(i) for i in A]\n\n    if len([i for i in A if i < 0]) % 2 == 1:\n        ans = sum(A_abs) - 2 * min(A_abs)\n    else:\n        ans = sum(A_abs)\n\n    print(ans)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n\nminus_cnt = 0\nabs_sum = 0\nmin_abs_val = 1000000000\nfor i in range(N):\n    val = A[i]\n    abs_val = abs(val)\n    abs_sum += abs_val\n    if abs_val < min_abs_val:\n        min_abs_val = abs_val\n    if val < 0:\n        minus_cnt += 1\n\nB_max_sum = abs_sum\nif (minus_cnt % 2 != 0) and (min_abs_val != 0):\n    B_max_sum -= (min_abs_val * 2)\n\nprint(B_max_sum)\n\n", "import sys\nimport math\nimport itertools\nimport collections\nfrom collections import deque\nfrom collections import defaultdict\n\nsys.setrecursionlimit(1000000)\nMOD = 10 ** 9 + 7\ninput = lambda: sys.stdin.readline().strip()\n\nNI = lambda: int(input())\nNMI = lambda: map(int, input().split())\nNLI = lambda: list(NMI())\nSI = lambda: input()\n\ndef main():\n    N = NI()\n    A = NLI()\n    \n    cnt = 0\n    minimum_abs = 10**9\n    ans = 0\n    flag = 0\n    \n    for n in range(N):\n        ans += abs(A[n])\n        minimum_abs = min(abs(A[n]),minimum_abs)\n        if A[n] < 0:\n            cnt += 1\n        elif A[n] == 0:\n          flag = 1\n\n                \n    if cnt % 2 == 0 or flag == 1:\n        print(ans)\n    else:\n        print(ans - minimum_abs * 2)\n            \n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nA=list(map(int,input().split()))\ncnt = sum([0 if a>0 else 1 for a in A])\nabsA = sorted([abs(a) for a in A])\nif cnt % 2 == 1:\n  print(sum(absA)-2*absA[0])\nelse:\n  print(sum(absA))", "import numpy\nN = int(input())\na = numpy.array([int(i) for i in input().split()])\nmin =  10**9+1\nminus = 0\ntotal = 0\nfor i in a :\n    if i < 0 :\n        minus += 1\n    if abs(i) < min :\n        min = abs(i)\n    total += abs(i)\n#    print(i,min,total)\nif minus %2 == 0 :\n    print(total)\nelse :\n    print((total-min*2))\n", "N = int(input())\nA = list(map(int,input().split()))\n\nminus_cnt = 0\nabs_sum = 0\nmin_abs_val = 1000000000\nfor i in range(N):\n    val = A[i]\n    abs_val = abs(val)\n    abs_sum += abs_val\n    if abs_val < min_abs_val:\n        min_abs_val = abs_val\n    if val < 0:\n        minus_cnt += 1\n\nB_max_sum = abs_sum\nif minus_cnt % 2 != 0:\n    B_max_sum -= (min_abs_val * 2)\n\nprint(B_max_sum)\n\n", "n = int(input())\na = list(map(int,input().split()))\nans = 0\ncnt_minus = 0\ncnt_zero = 0\nm = 10**9\nfor i in a:\n    ans += abs(i)\n    if i<0:\n        cnt_minus += 1\n    if i==0:\n        cnt_zero +=1\n    m = min(m,abs(i))\n\nif cnt_minus % 2 == 0 or cnt_zero !=0:\n    print(ans)\nelse:\n    print((ans-2*m))\n", "\nn = int(input())\naa = list(map(int, input().split()))\nbb = [abs(a) for a in aa]\n\nif sum(x<0 for x in aa) % 2 == 0:\n  print(sum(bb))\nelse:\n  \n  print(sum(bb)-2*min(bb))", "N = int(input())\nA = list(map(int,input().split()))\nB = list(map(abs,A))\nprint(sum(B)-2*min(B)*(sum(a<0 for a in A)%2))", "N = int(input())\nA = list(map(int, input().split()))\ncnt = 0\nfor i in range(N):\n    if A[i] < 0:\n        cnt += 1\nA = [abs(a) for a in A]\nif cnt % 2 == 0:\n    print(sum(A))\nelse:\n    print(sum(A)-2*min(A))", "n = int(input())\nA = list(map(int,input().split()))\n\ncnt = 0\nA_ = []\nfor i in A:\n    if i < 0:\n        cnt += 1\n        A_.append(-i)\n    else:\n        A_.append(i)\n\nif cnt%2 == 0:\n    print((sum(A_)))\nelse:\n    print((sum(A_) - 2*min(A_)))\n", "n = int(input())\nA = list(map(int, input().split()))\ncnt = 0\ns = 0\nm = 10 ** 9\nfor ai in A:\n    if ai <= 0:\n        cnt = cnt + 1\n        ai *= (-1)\n    s += ai\n    if m > ai:\n        m = ai\nif cnt % 2 == 0:\n    for a in A:\n        ans = s\nelse:\n    ans = s - 2*m\nprint(ans)", "n = int(input())\nA = list(map(int,input().split()))\nB = [abs(a) for a in A]\nans=sum(B)\nc=sum(1 for a in A if a<0)\nif c%2 :\n    ans-=min(B)*2\nprint(ans)\n", "n = int(input())\nlist_A = list(map(int, input().split()))\nm = pow(10, 10)\ns = 0\ncnt = 1\n\nfor a in list_A:\n    m = min(m, abs(a))\n    if a < 0:\n        cnt *= -1\n    s += abs(a)\n\nif cnt == 1:\n    print(s)\nelse:\n    print(s - 2 * m)", "N=int(input())\nA=list(map(int,input().split()))\nzero=False\nminus=0\nfor i in range(N):\n    if A[i]<0:\n        A[i]*=-1\n        minus=1-minus\n    elif A[i]==0:\n        zero=True\n\nA.sort(reverse=True)\nif zero==True:\n    print((sum(A)))\nelse:\n    if minus==0:\n        print((sum(A)))\n    else:\n        print((sum(A[0:N-1])-A[-1]))\n", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nminus, plus = [], []\n\nfor x in a:\n    if x < 0:\n        minus.append(x)\n    else:\n        plus.append(x)\n\ntmp = sum([abs(x) for x in a])\n\nif len(minus) % 2 == 0:\n    print(tmp)\nelse:\n    if plus == [] or abs(minus[-1]) < plus[0]:\n        print(tmp + minus[-1] * 2)\n    else:\n        print(tmp - plus[0] * 2)", "from bisect import bisect_left,bisect,bisect_right\nimport sys\n\nicase=0\nif icase==0:\n    n=int(input())\n    a=list(map(int,input().split()))\n\na.sort()\nii=bisect(a,0)\n\nif ii==n:\n    if ii%2==0:\n        asum=-sum(a)\n    else:    \n        asum=-sum(a[0:ii-1])+a[ii-1]\n    print(asum)\n    return\n\nif ii%2==0:\n    asum=-sum(a[0:ii])+sum(a[ii:])\nelse:\n    if -a[ii-1]<a[ii]:\n        d=a[ii-1]+a[ii]\n    else:\n        d=-a[ii-1]-a[ii]\n    asum=-sum(a[0:ii-1])+d+sum(a[ii+1:])\n\nprint(asum)\n", "n = int(input())\nA = list(map(int, input().split()))\n\n# \u30de\u30a4\u30ca\u30b9\u306e\u6570\u304c\u5076\u6570\u306a\u3089\u3070\u3001\u7d76\u5bfe\u5024\u3092\u53d6\u3063\u3066\u548c\u3092\u51fa\u529b\u3059\u308b\u3002\n# \u30de\u30a4\u30ca\u30b9\u306e\u6570\u304c\u5947\u6570\u306a\u3089\u3070\u3001\u7d76\u5bfe\u5024\u3092\u53d6\u3063\u305f\u548c\u304b\u3089\u7d76\u5bfe\u5024\u304c\u4e00\u756a\u5c0f\u3055\u3044\u3082\u306e*2\u3092\u5f15\u304f\u3002\nabs_min = 10**9\nflag = False\nif A.count(0) >= 1:\n  flag = True\nneg_count = 0\nans = 0\nfor a in A:\n  ans += abs(a)\n  if a < 0:\n    neg_count += 1\n  if abs(a) < abs_min:\n      abs_min = abs(a)\nif neg_count %2 == 0:\n  flag = True\n\nif flag:\n  print(ans)\nelse:\n  print(ans - 2 * abs_min)", "n = int(input())\nA = list(map(int,input().split()))\n\nlaw_ans = 0\nabsminA = float('inf')\nfor a in A:\n    law_ans += abs(a)\n    absminA = min(absminA, abs(a))\n\n\ncnt_neg = 0\n\nfor a in A:\n    if a < 0:\n        cnt_neg += 1\n\ncnt_0 = A.count(0)\n\nif cnt_neg%2 == 0:\n    print(law_ans)\nelse:\n#\uff10\u304c\u3042\u308b\u3068\u304d\u306f\u3044\u3064\u3067\u3082law_ans\u306b\u306a\u308b\u304c\u3001absminA\u304c0\u3060\u304b\u3089\u304a\u3063\u3051\u3044\n    print((law_ans-2*absminA))\n    \n\n", "N = int(input())\na_ls = list(map(int, input().split()))\n\ndp = [[0,0] for _ in range(N)]\ndp[1][0] = a_ls[1] + a_ls[0]\ndp[1][1] = -dp[1][0]\n\nfor i in range(2,N):\n    # flip\u306a\u3057\u3067a_ls[i]\u3092\u8ffd\u52a0\n    dp[i][0] = max(dp[i-1][0] + a_ls[i], dp[i-1][1] + a_ls[i])\n\n    # flip\u3042\u308a\u3067a_ls[i]\u3092\u8ffd\u52a0\n    dp[i][1] = max(dp[i-1][0] - 2*a_ls[i-1] - a_ls[i],dp[i-1][1] + 2*a_ls[i-1] - a_ls[i])\n\n#print(dp)\nprint((max(dp[-1][0],dp[-1][1])))\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s, cnt = [0]*n, 0\n    for i in range(n):\n        s[i] = abs(a[i])\n        if a[i] < 0:\n            cnt += 1\n    if cnt%2:\n        print(sum(s) - 2*min(s))\n    else:\n        print(sum(s))\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nA=list(map(int,input().split()))\ncnt = sum([0 if a>0 else 1 for a in A])\nabsA = sorted([abs(a) for a in A])\nif cnt % 2 == 1:\n  print(sum(absA)-2*absA[0])\nelse:\n  print(sum(absA))", "n=int(input())\na=list(map(int,input().split()))\ndp=[[0,0]for _ in range(n)]\ndp[0]=[a[0],-a[0]]\nfor i in range(1,n):\n  dp[i][0]=max(dp[i-1][0]+a[i],dp[i-1][1]-a[i])\n  dp[i][1]=max(dp[i-1][0]-a[i],dp[i-1][1]+a[i])\nprint(dp[n-1][0])"]