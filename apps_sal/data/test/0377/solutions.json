["n, m = map(int, input().split())\nif m <= 1:\n    print(1)\n    return\nprint(min(m, n - m))", "n,m=map(int,input().split())\nif m==0:\n    print(1)\nelse :\n    print(min(n-m,m))", "n, m = list(map(int, input().split()))\nprint(min(n - m, max(1, m)))\n", "n,m=map(int,input().split())\nif m==0:\n    m=1\nprint(min(n-m,m))", "[n, m] = [int(i) for i in input().split()]\nif m == n:\n\tprint (0)\nelif m == 0:\n\tprint (1)\nelif m * 2 <= n:\n\tprint(m)\nelse:\n\tprint(n - m)", "n, m = list(map(int, input().split()))\nif m == 0:\n    print(1)\nelif m <= n // 2:\n    print(m)\nelse:\n    print(n - m)\n", "def main():\n    from sys import stdin, stdout\n\n    def read():\n        return stdin.readline().rstrip('\\n')\n\n    def read_array(sep=None, maxsplit=-1):\n        return read().split(sep, maxsplit)\n\n    def read_int():\n        return int(read())\n\n    def read_int_array(sep=None, maxsplit=-1):\n        return [int(a) for a in read_array(sep, maxsplit)]\n\n    def write(*args, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in args) + end)\n\n    def write_array(array, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in array) + end)\n\n    n, m = read_int_array()\n    if m < 2:\n        write(1)\n        return\n    left = n - m\n    write(min(left, m))\n\n\nmain()\n", "n, m = map(int, input().split())\nif m == n:\n    print(0)\nelif m == n - 1:\n    print(1)\nelif m == 0:\n    print(1)\nelse:\n    print(min(n - m, m))", "a, b = map(int, input().split())\n\nif b > a / 2:\n\tprint(a - b)\nelif b < 1:\n\tprint(1)\nelse:\n\tprint(b)", "def main():\n    n, m = map(int, input().split())\n    if 2 * m < n:\n        if m == 0:\n            print(1)\n        else:\n            print(m)\n    else:\n        print(n - m)\n    return 0\n\nmain()", "n, m = list(map(int, input().split()))\nif m <= n / 2:\n    print(max(m, 1))\nelse:\n    print(n - m)\n", "kk=lambda:map(int,input().split())\nn,m=kk()\nprint(n-m if m*2>n else max(m,1))", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\n\nn, m=mi()\n\n\nlowend=max(1, m)\n\nhighend=n-m\n\nprint(min(lowend,highend))\n", "import math\nimport bisect\nimport heapq\nfrom collections import defaultdict\n\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        g, x, y = egcd(b % a, a)\n        return (g, y - (b // a) * x, x)\n\n\ndef mulinv(b, n):\n    g, x, _ = egcd(b, n)\n    if g == 1:\n        return x % n\n\n\n\ndef isprime(n):\n    for d in range(2, int(math.sqrt(n))+1):\n        if n % d == 0:\n            return False\n    return True\n\n\ndef argsort(ls):\n    return sorted(range(len(ls)), key=ls.__getitem__)\n\n\ndef f(p=0):\n    if p == 1:\n        return map(int, input().split())\n    elif p == 2:\n        return list(map(int, input().split()))\n    elif p == 3:\n        return list(input())\n    else:\n        return int(input())\n\nn, k = f(2)\n\nt = min(k, n-k)\n\nif t==0:\n    if k==0:\n        print(1)\n    else:\n        print(0)\nelse:\n    print(t)", "# import sys\n# sys.stdin = open(\"#input.txt\", \"r\")\nn,m = list(map(int, input().split()))\n\nif n==m:\n\tprint(0)\nelif m<=1 or n-m<=1:\n\tprint(1)\nelse:\n\tprint(min(m,n-m))\n", "n,m = list(map(int,input().split()))\nif m<=1:\n    print(1)\nelif m<=n//2:\n    print(m)\nelse:\n    print(n-m)", "n, m = list(map(int, input().split()))\nif m * 2 <= n and m != 0:\n\tprint(m)\nelif m == 0:\n\tprint(1)\nelse:\n\tprint(n - m)\n", "n, m = list(map(int, input().split()))\nif m == 0:\n    print(1)\nelse:\n    print(min(n - m, m))\n", "n, m = (int(i) for i in input().split())\nif m > n // 2:\n    print(n - m)\nelse:\n    if m:\n        print(m)\n    else:\n        print(1)\n", "n, m = list(map(int, input().split()))\n\nif m == n:\n    print(0)\n\nelif m == 0 or m == 1:\n    print(1)\n\nelse:\n    m -= 1\n    n -= 1\n    print(min(m+1, n - m))\n", "N, M = list(map(int, input().split()))\nprint(min(max(1, M), N-M))\n", "n, m = list(map(int, input().split()))\nif n == m: \n    print(0)\nelif m == 0:\n    print(1)\nelif n//2 < m:\n    print(n-m)\nelse:\n    print(m)\n"]