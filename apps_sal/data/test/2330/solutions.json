["t = int(input())\n\nfor _ in range(t):\n\tn, m = map(int, input().split())\n\n\ta = list(map(int, input().split()))\n\n\tif n <= 2:\n\t\tprint(-1)\n\t\tcontinue\n\tif m < n:\n\t\tprint(-1)\n\t\tcontinue\n\n\tcost = 0\n\tedges = []\n\tfor i in range(n):\n\t\tedges.append((i+1, (i+1)%n + 1))\n\t\tcost += 2 * a[i]\n\n\ts = sorted(range(n), key=lambda i: a[i])\n\n\tfor i in range(m-n):\n\t\tedges.append((s[0]+1, s[1]+1))\n\t\tcost += a[s[0]] + a[s[1]]\n\n\tprint(cost)\n\tfor u, v in edges:\n\t\tprint(u, v)", "for i in ' '*int(input()):\n    n,m=map(int,input().split())\n    L=list(map(int,input().split()))\n    if n<3:\n        print(-1)\n        continue\n    if n>m:\n        print(-1)\n        continue\n    else:\n        min1=min(L)\n        index1=L.index(min1)\n        LL=L[:]\n        LL.pop(index1)\n        min2=min(LL)\n        index2=LL.index(min2)\n        if index2>=index1:index2+=1\n        print(sum(L)*2+(m-n)*(min1+min2))\n        for i in range(n):\n            if i<n-1:\n                print(i+1,i+2)\n            else:\n                print(1,i+1)\n        for i in range(m-n):\n            print(index1+1,index2+1)", "import sys\nimport math\n\n# sys.stdin = open(\"in.txt\")\nfor _ in range(int(input())):\n    n, m = map(int, input().split())\n\n    li = list(map(int, input().split()))\n    if n == 2 or n > m:\n        print(-1)\n        continue\n    if li[0] < li[1]:\n        min1 = 0\n        min2 = 1\n    else:\n        min1 = 1\n        min2 = 0\n    for i in range(2, n):\n        if li[i] < li[min1]:\n            min2 = min1\n            min1 = i\n        elif li[i] < li[min2]:\n            min2 = i\n    print(sum(li) * 2 + (m - n) * (li[min1] + li[min2]))\n    for i in range(n):\n        print(i + 1, (i + 1) % n + 1)\n    for i in range(m - n):\n        print(min1 + 1, min2 + 1)", "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nfor _ in range(int(I())):\n    n, m = list(map(int, I().split()))\n    a = list(map(int,I().split()))\n    if n > m or n == 2:\n        print( -1 )\n    else:\n        s = 2 * sum(a)\n        b = sorted(a)\n        i = a.index(b[0])\n        a[ i ] = 1e5\n        j = a.index(b[1])\n        m -= n\n        s += sum(b[:2]) * m\n        print( s )\n        for k in range(n):\n            print( k + 1, (k + 1) % n + 1 )\n        for k in range(m):\n            print( i + 1, j + 1 )\n", "def solve(n,m,costs):\n    if n == 2:\n        print(-1)\n        return\n    \n    if m < n:\n        print(-1)\n        return\n\n    cost = 0\n    for i in range(n-1):\n        cost += costs[i]+costs[i+1]\n\n    #print(cost)\n    cost += costs[0]+costs[-1]\n    min_cost = float('inf')\n    for i in range(n):\n        for j in range(i+1,n):\n            cost1 = costs[i]+costs[j]\n            if cost < min_cost:\n                min_cost = cost1\n                min_pair = [i+1,j+1]\n\n    m -= n\n    cost += m*min_cost\n    print(cost)\n    for i in range(n-1):\n        print(i+1,i+2)\n\n    print(n,1)\n    for i in range(m):\n        print(min_pair[0],min_pair[1])\n    \n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n,m = list(map(int,input().split()))\n        costs = list(map(int,input().split()))\n        solve(n,m,costs)  \n\n\nmain()\n", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = [*list(map(int, input().split()))]\n    if m < n or (n == 2 and m == 2):\n        print(-1)\n    else:\n        cost = x = y = 0\n        mn = float('inf')\n        for i in range(n):\n            t = a[i] + a[i - 1]\n            cost += t\n            if t < mn:\n                mn = min(mn, t)\n                x, y = i + 1, n if i == 0 else i\n        print(cost + (m - n) * mn)\n        for i in range(n - 1):\n            print(i + 1, (i + 2) % (n + 1))\n        print(n, 1)\n        for i in range(m - n):\n            print(x, y)\n", "for _ in range(int(input())):\n    fr,ch=list(map(int,input().split()))\n    arr=list(map(int,input().split()))\n    if(ch<fr):\n        print(-1)\n    elif(fr==2):\n        print(-1)\n    else:\n        x=[[arr[i],i+1] for i in range(fr)]\n        x.sort()\n        print(sum(arr)*2+(ch-fr)*(x[0][0]+x[1][0]))\n        \n        \n        for i in range(fr):\n            if(i==fr-1):\n                print(1,fr)\n            else:\n                print(i+1,i+2)\n        for i in range(fr,ch):\n            print(x[0][1],x[1][1])\n            \n", "q = int(input())\nfor rwre in range(q):\n\tn, m = map(int,input().split())\n\tl = list(map(int,input().split()))\n\tif m < n:\n\t\tprint(-1)\n\telse:\n\t\tll = [[l[i], i+1] for i in range(n)]\n\t\tll.sort()\n\t\tl.sort()\n\t\tsuma = 0\n\t\tif n == 2:\n\t\t\tprint(-1)\n\t\telse:\n\t\t\tfor i in range(n):\n\t\t\t\tsuma += (l[i-1] + l[i])\n\t\t\ts1 = ll[0][1]\n\t\t\ts2 = ll[1][1]\n\t\t\tprint(suma + (m-n)*(ll[0][0]+ll[1][0]))\n\t\t\tfor i in range(n-1):\n\t\t\t\tprint(i + 1, i+2)\n\t\t\tprint(n, 1)\n\t\t\ta = n\n\t\t\twhile a < m:\n\t\t\t\tprint(s1, s2)\n\t\t\t\ta += 1", "for _ in range(int(input())):\n\tn,m=map(int,input().split())\n\tl=list(map(int,input().split()))\n\tif m<n or n==2:\n\t\tprint(\"-1\")\n\t\tcontinue\n\tL=[[l[i],i+1]for i in range(n)]\n\tL.sort()\n\tans1=2*sum(l)\n\tans1+=(L[0][0]+L[1][0])*(m-n)\n\tprint(ans1)\n\tfor i in range(n-1):\n\t\tprint(i+1,i+2)\n\tprint(1,n)\n\tfor i in range(m-n):\n\t\tprint(L[0][1],L[1][1])", "t = int(input())\nfor i in range (t):\n    n, m = list(map(int,input().split()))\n    arr = list(map(int,input().split()))\n    if arr[0] < arr[1]:\n        min1 = arr[0]\n        index1 = 1\n        min2 = arr[1]\n        index2 = 2\n    else:\n        min1 = arr[1]\n        min2 = arr[0]\n        index1 = 2\n        index2 = 1\n    for j in range (2, n):\n        if arr[j] < min2:\n            if arr[j] < min1:\n                min1 = arr[j]\n                index1 = j + 1\n            else:\n                min2 = arr[j]\n                index2 = j + 1\n    if m < n or n == 2:\n        print(-1)\n    else:\n        ans = sum(arr) * 2 + (m - n) * (min1 + min2)\n        print(ans)\n        for j in range (1, n):\n            print(j, j+1)\n        print(1, n)\n        for j in range (m - n):\n            print(index1, index2)", "T = int(input())\n\nfor t in range(T):\n\tn, m = map(int, input().split())\n\n\tA = list(map(int, input().split()))\n\n\ttot = sum(A)\n\n\tA = [(A[i], i + 1) for i in range(n)]\n\n\tA.sort()\n\n\tif m < n or n == 2:\n\t\tprint(-1)\n\n\telse:\n\t\tcost = 2 * tot\n\n\t\tcost += (m - n) * (A[0][0] + A[1][0])\n\n\t\tprint(cost)\n\n\t\tfor i in range(n):\n\t\t\tprint(i + 1, ((i + 1) % n) + 1)\n\n\t\tfor i in range(m - n):\n\t\t\tprint(A[0][1], A[1][1])", "for _ in range(int(input())):\n\tn, m = map(int, input().split())\n\tarr = list(map(int, input().split()))\n\tarr.sort()\n\tif m < n or n == 2:\n\t\tprint(-1)\n\telse:\n\t\ttotal = 0\n\t\tans = []\n\t\tfor i in range(n):\n\t\t\ttotal += arr[i] + arr[(i+1)%n]\n\t\t\tans.append((i+1, ((i+1)%n)+1))\n\t\tfor i in range(m-n):\n\t\t\ttotal += arr[0] + arr[1]\n\t\t\tans.append((1, 2))\n\t\tprint(total)\n\t\tfor ele in ans:\n\t\t\tprint(*ele)", "t = int(input())\nfor i in range(t):\n\tn, m = list(map(int, input().split()))\n\tdop = list(map(int, input().split()))\n\tsuma = sum(dop)\n\tmas = []\n\tfor i in range(n):\n\t\tmas.append([dop[i], i])\n\tif m < n or n == 2:\n\t\tprint(-1)\n\t\tcontinue\n\tmas.sort()\n\tprint(suma * 2 + (mas[0][0] + mas[1][0]) * (m - n))\n\tfor i in range(1, n):\n\t\tprint(i, i + 1)\n\tprint(n, 1)\n\tfor i in range(m - n):\n\t\tprint(mas[0][1] + 1, mas[1][1] + 1)\n", "t=int(input())\nfor i in range(t):\n    n,m=[int(x) for x in input().split(' ')]\n    alist=[int(x) for x in input().split(' ')]\n    blist=alist[:]\n    if (n == 2) or (m < n):\n        print('-1')\n    else:\n        alist.remove(min(alist))\n        print(2*sum(blist)+(m-n)*(min(blist)+min(alist)))\n        for i in range(n-1):\n            print(i+1,i+2,sep=' ')\n        print(n,1,sep=' ')\n        a=blist.index(min(blist))\n        b=alist.index(min(alist))\n        if b >= a:\n            for i in range(m-n):\n                print(a+1,b+2,sep=' ')\n        else:\n            for i in range(m-n):\n                print(b+1,a+1,sep=' ')\n            \n            \n", "def run_testcase():\n\t[n, m] = [int(x) for x in input().split()]\n\tns = [int(x) for x in input().split()]\n\n\tif n == 2:\n\t\tprint(-1)\n\t\treturn\n\n\tif m < n:\n\t\tprint(-1)\n\t\treturn\n\n\n\tsum_ns = sum(ns)\n\n\tcost = 2 * sum_ns\n\n\trest_m = m - n\n\tsorted_ns = list(sorted(ns))\n\tcheapest_edge = sorted_ns[0] + sorted_ns[1]\n\n\tcost += cheapest_edge * rest_m\n\n\tedges = [None] * m\n\n\tedges[0] = (1, n)\n\tfor i in range(1, n):\n\t\tedges[i] = (i, i+1)\n\n\tfor i in range(rest_m):\n\t\tedges[n+i] = (sorted_ns[0], sorted_ns[1])\n\n\tprint(cost)\n\tfor edge in edges:\n\t\tprint(edge[0], edge[1])\n\n\n\ntestcase_count = int(input())\n\nfor i in range(testcase_count):\n\t# print(str(run_testcase()))\n\trun_testcase()", "import sys, math\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    q = int(input())\n    for _ in range(q):\n        n, m = list(map(int,input().split()))\n        a = list(map(int,input().split()))\n        if n > m or n == 2:\n            print(-1)\n        else:\n            ansv = 2*sum(a)\n            ans = [[k,k+1] for k in range(1,n)]\n            ans.append([n,1])\n            b = sorted([[a[k],k+1] for k in range(n)])\n            for k in range(m-n):\n                ans.append([b[0][1],b[1][1]])\n            print(ansv+(m-n)*(b[0][0]+b[1][0]))\n            for e in ans:\n                print(*e)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    aa=list(map(int,input().split()))\n    if m<n or n==1 or n==2:\n        print(-1)\n    else:\n        a=[(aa[i],i) for i in range(n)]\n        a=sorted(a)\n        ans=sum(aa)*2\n        m -= n\n        ans += m*(a[0][0]+a[1][0])\n        print(ans)\n        for i in range(1,n):\n            print(i,i+1)\n        print(n,1)\n        for i in range(m):\n            print(a[0][1]+1,a[1][1]+1)", "tc = int(input())\nfor ii in range(tc):\n    n,m = list(map(int,input().split()))\n    ar = list(map(int,input().split()))\n    if m<n or n==2:\n        print(-1)\n        continue\n    ans = 0\n    mn1 = float('inf')\n    for i in range(n):\n        ans += ar[i]*2\n        if(ar[i]<mn1):\n            save1 = i\n            mn1 = ar[i]\n        \n    m -= n\n    mn2 = float('inf')\n    for i in range(n):\n        if (ar[i]<mn2) and (i!=save1):\n            mn2 = ar[i]\n            save2 = i\n\n    ans += m*(mn1+mn2)\n\n    print(ans)\n    for i in range(m):\n        print(save1+1,save2+1)\n    for i in range(n):\n        print(i+1, (i+1)%n + 1)\n\n    \n", "for _ in range(int(input())):\n\tn, m = map(int, input().split())\n\tl2 = list(map(int, input().split()))\n\tl = sorted(l2)\n\tif n == 2 or m < n:\n\t\tprint(-1)\n\t\tcontinue\n\tans = 2*sum(l)\n\tans += (m-n)*(l[0]+l[1])\n\tprint(ans)\n\tfor i in range(1, n):\n\t\tprint(i, i+1)\n\tprint(n, 1)\n\tfor i in range(m-n):\n\t\tprint(l2.index(l[0])+1, l2.index(l[1])+1)", "# stdin = open(\"testdata.txt\", \"r\")\nfrom sys import stdin\n\ndef input():\n\treturn stdin.readline().strip()\n\nt = int(input())\n\nfor _ in range(t):\n\tn, m = list(map(int, input().split()))\n\tweight = list(map(int, input().split()))\n\t# print(weight)\n\tedges = [(i, (i+1)%n) for i in range(n)]\n\tedges.sort(key = lambda x: (weight[x[0]]+weight[x[1]]))\n\ttotal = sum(weight[u]+ weight[v] for u, v in edges)\n\t# print(edges)\n\tif m < n:\n\t\tprint(-1)\n\telif n == 2:\n\t\tprint(-1)\n\telse:\n\t\tu, v = edges[0]\n\t\ttotal += (weight[u] + weight[v])*(m-n)\n\t\tprint(total)\n\t\tfor i in range(n):\n\t\t\tprint(edges[i][0]+1, edges[i][1]+1)\n\t\tfor j in range(m-n):\n\t\t\tprint(edges[0][0]+1, edges[0][1]+1)\n", "import sys\nimport math\nimport itertools\nimport collections\n\n\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef wr(arr): return ''.join(map(str, arr))\ndef revn(n): return str(n)[::-1]\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\n\n\nt = ii()\nfor _ in range(t):\n    n, m = mi()\n    a = li()\n    if n > m or n == 2:\n        print(-1)\n    else:\n        ans = 2 * sum(a)\n        mina = min(a)\n        posmin = a.index(min(a))\n        b = a.copy()\n        b.sort()\n        posmin1 = a.index(b[1])\n        if posmin == posmin1:\n            posmin1 = a.index(b[1], posmin + 1)\n        ans += (mina + b[1]) * (m - n)\n        print(ans)\n        for i in range(n - 1):\n            print(i + 1, i + 2)\n        print(n, 1)\n        for i in range(m - n):\n            print(posmin + 1, posmin1 + 1)\n"]