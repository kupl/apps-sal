["n = int(input())\na = set(map(int, input().split()))\nif 0 in a: a.remove(0)\nprint(len(a))", "input()\nx = set([int(i) for i in input().split() if i != '0'])\n\nprint(len(x))", "n = int(input())\ns = set()\na = list(map(int, input().split()))\nfor el in a:\n    if (el != 0):\n        s.add(el)\nprint(len(s))", "n = int(input())\na = [int(v) for v in input().split()]\n\nprint(len(set(a) - {0}))", "n = int(input())\na = list(map(int, input().split()))\nd = set()\ns = 0\nfor x in a:\n    if x == 0 or x in d:\n        continue\n    s += 1\n    d.add(x)\nprint(len(d))\n", "n = int(input())\n\narr = list(map(int, input().split()))\nprint(len(set(arr)) - (int(0 in arr)))\n", "n = int(input())\nnum = list(map(int, input().split()))\na = []\nfor i in range(n):\n    if num[i]:\n        a.append(num[i])\nprint(len(set(a)))", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef main():\n    n = read_nums()\n    nums = read_nums()\n    s = set([x for x in nums if x != 0])\n    print(len(s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = set(list(map(int,input().split())))\nif 0 in a:\n    a.remove(0)\nprint(len(a))\n", "n = input()\na = list(map(int, input().split()))\n\nb = set(a)\nb.add(0)\nb.remove(0)\n\nprint(len(b))", "n = int(input())\nspisok = list(map(int, input().split()))\nif 0 in spisok:\n    print(len(set(spisok)) - 1)\nelse:\n    print(len(set(spisok)))", "#\nn = int(input())\nfrom collections import Counter\na = Counter(list(map(int,input().split())))\nif 0 in a:\n\tprint (len(a)-1)\nelse:\n\tprint (len(a))", "n = int(input())\n\nd = set()\n\ndata = list(map(int, input().split()))\n\nans = 0\nfor el in data:\n    if el != 0:\n        if not el in d:\n            d.add(el)\n            ans+=1\n\nprint(ans)\n", "n = int(input())\na = set(map(int, input().split()))\nif 0 in a:\n    print(len(a) - 1)\nelse:\n    print(len(a))\n", "n = int(input())\na = set(list(map(int, input().split())))\nans = len(a)\nif 0 in a:\n    ans -= 1\nprint(ans)\n", "input()\ns = set(map(int, input().split()))\nans = len(s)\nif 0 in s:\n    ans -= 1\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nprint(len(set(a) - {0}))\n", "n = int(input())\na = list(map(int,input().split()))\ns = set()\nfor i in a:\n    if not(i==0):\n        s.add(i)\nprint(len(s))\n", "input()\nA = set(map(int,input().split()))\nA.discard(0)\nprint(len(A))\n", "#JMD\n#Nagendra Jha-4096\n \n#a=list(map(int,sys.stdin.readline().split(' ')))\n#n,k,s= map(int, sys.stdin.readline().split(' '))\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=int(input())\na=list(map(int,sys.stdin.readline().split(' ')))\ns=set(a)\nans=len(s)\nif(0 in s):\n\tans-=1\nprint(ans)\n\t\n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n = int(input())\ns = list(map(int, input().split()))\ns = set(s)\ncount = 0\nfor x in s:\n    if x!=0:\n        count+=1\n\nprint(count)", "#     Codeforces Round #489 (Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \n            \n    \n \nn,  = getIntList()\n\nz = getIntList()\n\nres = set()\nfor x in z:\n    if x !=0:\n        res.add(x)\n    \nprint(len(res))\n", "n=int(input())\na=set(map(int,input().split()))\na-={0}\nprint(len(a))\n", "n = int(input())\n\nxs = set(int(x) for x in input().split() if int(x))\n\nprint(len(xs))", "n = int(input())\nai = list(map(int,input().split()))\nai.sort()\nlast_el = ai[0]\nans  = 0\nif ai[0] != 0:\n    ans = 1\nfor i in range(1,n):\n    if last_el != ai[i] and ai[i] != 0:\n        ans += 1\n    last_el = ai[i]\nprint(ans)\n"]