["def convert_to_binary(coef):\n    res = []\n    n = len(coef)\n    carry = 0\n    i = 0\n    while i < n + 1000:\n        if i >= n and not carry:\n            break\n        cur = carry\n        if i < n:\n            cur += coef[i]\n\n        mod = cur % 2\n        div = cur // 2\n#        print(cur, div, mod)\n\n        res.append(mod)\n\n        carry = div\n\n        i += 1\n    return res, carry\n\nn, k = list(map(int, input().split()))\ncoef = list(map(int, input().split()))\n\nb, carry = convert_to_binary(coef)\nref = False\nif carry < 0:\n    b, carry = convert_to_binary(list([-x for x in coef]))\n    ref = True\n\n\nlast = len(b) - 1\nwhile b[last] != 1:\n    last -= 1\n\nans = 0\nfor i in range(0, n + 1):\n    if last - i > 40:\n        continue\n\n    cur = 0\n    for j in range(i, last + 1):\n        cur += b[j] * (2 ** (j - i))\n\n    new_coef = coef[i] - cur\n    if ref:\n        new_coef = coef[i] + cur\n\n    if abs(new_coef) > k:\n        if b[i] == 1:\n            break\n        continue\n\n    if i == n and new_coef == 0:\n        if b[i] == 1:\n            break\n        continue\n\n    ans += 1\n    if b[i] == 1:\n        break\n\n\nprint(ans)\n"]