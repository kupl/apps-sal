["n = int(input())\n\nprint((n*(n-1)*(n-2)*(n-3)*(n-4))**2//120)", "import sys\ndef fact(n):\n\tret = 1\n\tfor x in range(1, n + 1):\n\t\tret = ret * x\n\treturn ret\n\ndef C(n, k):\n\treturn fact(n) // (fact(k) * (fact(n - k)))\nn = int(input())\nprint(C(n, 5) * C(n, 5) * 120)", "from functools import reduce\nfrom math import factorial\nn = int(input())\nC_n_k = lambda n, k: reduce(lambda x, y: x*y, list(range(n, n-k, -1))) // factorial(k)\nprint((C_n_k(n, 5) ** 2) * 120)\n", "n = int(input())\nprint ( (n * (n - 1) * (n - 2) * (n - 3) * (n - 4) // 120) ** 2 * 120)", "def fact(i):\n  ans = 1\n  for j in range(1, i + 1):\n    ans *= j\n  return ans\n\ndef c(i, j):\n  return fact(i) // (fact(j) * fact(i - j))\n\nn = int(input())\nans = 1\nfor j in range(5):\n ans *= n - j\nprint(ans * c(n, 5))", "def C(n,m):\n    a = 1\n    b = 1\n    for i in range(1,m+1):\n        a *= n+1-i\n        b *= i\n    return a//b\n\ndef __starting_point():\n\n    n = int(input())\n    print(C(n,5)*n*(n-1)*(n-2)*(n-3)*(n-4))\n__starting_point()", "n = int(input())\ndef fact(n):\n    return 1 if n == 0 else (n * fact(n - 1))\n\ndef c(n, k):\n    return fact(n) // (fact(k) * (fact(n - k)))\n\nprint(c(n, 5) ** 2 * fact(5))\n", "n=int(input())\nans=1\nfor i in range(5):\n  ans=ans*(n-i)*(n-i)\nans=ans//(2*3*4*5)\nprint(ans)", "def main():\n    n = int(input())\n    ans = n*(n-1)*(n-2)*(n-3)*(n-4) // (5*4*3*2*1)\n    ans *= 120 * ans\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "def C(frm, what):\n    ans = 1\n    for i in range(what):\n        ans *= frm - i\n        ans = ans // (i + 1)\n    return ans\n \nn = int(input())\nans = C(n, 5) * C(n, 5) * 120\nprint (ans)", "n = int(input())\nres = n * (n - 1) * (n - 2) * (n - 3) * (n - 4) // 120\nprint(n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * res)", "from math import factorial as f\n\nn = int(input())\n\ndef b(n, k):\n\treturn f(n)//f(k)//f(n-k)\n\t\nprint(b(n, 5)**2*120)", "n=int(input())\nprint(n**2*(n-1)**2*(n-2)**2*(n-3)**2*(n-4)**2//2//3//4//5)\n", "import sys\n\n\ndef fact(k):\n    return k ** 2 * (k - 1) ** 2 * (k - 2) ** 2 * (k - 3) ** 2 * (k - 4) ** 2\n\n\n\nn = int(input())\n\nprint(fact(n) // 120)", "n = int(input())\nx = n * (n - 1) * (n - 2) * (n - 3) * (n - 4)\nprint(x * x // 120)", "import re, sys, string, operator, functools, fractions, collections\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda x=' ': list(map(int,input().split(x)))\nRS=lambda x=' ': input().rstrip().split(x)\nmod=int(1e9+7)\neps=1e-6\n#################################################\nn=RI()[0]\nans=1\nfor i in range(5):\n    ans*=((n-i)*(n-i))\nprint(ans//120)\n\n\n\n\n", "import sys\n\nn = int(sys.stdin.readline())\n\nprint(n * n * (n - 1) * (n - 1) * (n - 2) * (n - 2) * (n - 3) * (n - 3) * (n - 4) * (n - 4) // 120)", "def pol(n,k):\n    if n == 0:\n        return 1\n    ans = 1\n    for i in range(k):\n        ans *= (n-i)/(i+1)\n    k = int(ans)\n    if abs(k - ans) < 1/2:\n        return k\n    return k + 1\nn = int(input())\npr = pol(n,5) * pol(n,5) * 120\nprint(pr)", "n=int(input())\n\na=n*(n-1)*(n-2)*(n-3)*(n-4)//(2*3*4*5) \nprint( a*a*2*3*4*5)\n", "import math\nn = int(input())\nt = n * (n - 1) * (n - 2) * (n - 3) * (n - 4)\nprint(t * t // 120)\n", "n = int(input())\n\nans = 1\nfor i in range (n, n - 5, -1):\n\tans *= i * i\nfor i in range (1, 6):\n\tans //= i\nprint(ans)\n", "n = int(input())\nres = 1\nres *= n*n\nres *= (n-1)*(n-1)\nres *= (n-2)*(n-2)\nres *= (n-3)*(n-3)\nres *= (n-4)*(n-4)\nres = res // 5 // 4 // 3 // 2 // 1\nprint(res)", "n = int(input())\nprint(n**2 * (n-1)**2 * (n-2)**2 * (n-3)**2 * (n-4)**2 // 5 // 4 // 3 // 2)\n", "n=int(input())\nsol = n * (n-1) * (n-2) * (n-3) * (n-4)\nsol = sol * sol\nsol = sol // 120\nprint(sol)\n", "n = int(input())\nans = (n * (n - 1) * (n - 2) * (n - 3) * (n - 4)) ** 2 // 120\nprint(ans)\n"]