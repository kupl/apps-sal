["N,K,C = map(int,input().split())\nS = input()\nL = []\nR = []\ni = 0\nwhile i < N:\n    if S[i] == \"o\":\n        L.append(i)\n        i += C\n    i += 1\nj = N-1\nwhile j >= 0:\n    if S[j] == \"o\":\n        R.append(j)\n        j -= C\n    j -= 1   \nfor i in range(K):\n    if L[i] == R[K-1-i]:\n        print(L[i]+1)", "n, k, c = map(int,input().split())\ns = input()\n\nl = []\nr = []\ni=0\nwhile len(l)<k:\n    if s[i]==\"o\":\n        l.append(i)\n        i += c+1\n    else:\n        i +=1\n\ni=0\nwhile len(r)<k:\n    if s[n-1-i] == \"o\":\n        r.append(n-1-i)\n        i += c+1\n    else:\n        i += 1\n\nfor i in range(k):\n    if l[i] == r[-i-1]:\n        print(l[i]+1)", "n,k,c=map(int,input().split())\ns=list(input())\ni=0\nl=[0]*k\nr=[0]*k\nj=0\nwhile i<n and l[-1]==0:\n  if s[i]=='o':\n    l[j]=i+1\n    i+=c+1\n    j+=1\n  else:\n    i+=1\ni=0\nj=k-1\nwhile i<n and r[0]==0:\n  if s[-i-1]=='o':\n    r[j]=n-i\n    i+=c+1\n    j-=1\n  else:\n    i+=1\nfor i in range(k):\n  if r[i]==l[i]:\n    print(r[i])", "def main():\n    N, K, C = map(int, input().split())\n    S = input()\n\n    L = [-1] * K  # 0-ind\n\n    i = 0\n    cur = 0\n    while i < N:\n        if S[i] == 'o':\n            L[cur] = i\n            cur += 1\n            if cur == K: break\n            i += C\n        i += 1\n\n    R = [-1] * K  # 0-ind\n\n    i = N - 1\n    cur = K - 1\n    while i >= 0:\n        if S[i] == 'o':\n            R[cur] = i\n            cur -= 1\n            if cur == -1: break\n            i -= C\n        i -= 1\n\n    ans = (l + 1 for l, r in zip(L, R) if l == r)  # 1-ind\n    print(*ans, sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k, c = map(int,input().split())\ns = list(input())\n\ni, cnt = 0, 0\nl = []\nwhile cnt < k:\n    if s[i] == 'o':\n        l.append(i+1)\n        cnt += 1\n        i += c\n    i += 1\n\ni, cnt = n-1, 0\nr = []\nwhile cnt < k:\n    if s[i] == 'o':\n        r.append(i+1)\n        cnt += 1\n        i -= c\n    i -= 1\n\nr.sort()\nfor i in range(len(r)):\n    if l[i] == r[i]:\n        print(r[i])", "n,k,c=map(int,input().split()) ; c+=1\ns=input()\nA=[i+1 for i in range(n) if s[i]==\"o\"] #\u50cd\u3051\u308b\u65e5\u4ed8\nL=[1 for i in range(k)] #\u50cd\u304f\u65e5\u6570[l] \u306fL[l]\u4ee5\u964d\nR=[n for i in range(k)] #L[l]\u4ee5\u524d\n\nimport bisect\nfor i in range(1,k):\n  L[i]= A[bisect.bisect_left(A,L[i-1]+c)]\n  R[-i-1]= A[bisect.bisect_right(A,R[-i]-c)-1]\n\n  \nfor i in range(k):\n  if L[i]==R[i]: \n    print(L[i])", "N, K, C = list(map(int, input().split()))\nS = input()\n\nF = {}\ni = 0\nc = 1\nwhile i < N and c <= K:\n    if S[i] == 'x':\n        i += 1\n        continue\n    F[c] = i + 1\n    i += C + 1\n    c += 1\n\nL = {}\ni = N - 1\nc = K\nwhile i >= 0 and c >= 1:\n    if S[i] == 'x':\n        i -= 1\n        continue\n    L[c] = i + 1\n    i -= C + 1\n    c -= 1\n\nfor i in range(1, K + 1):\n    if F[i] == L[i]:\n        print((F[i]))\n", "N, K, C = map(int, input().split())\nS = input()[::-1]\nTop = []\nBottom = []\nyasumi = 0\nans = []\nk = K\nfor i in range(N):\n    if (yasumi == 0) and (S[i] == \"o\") and (k > 0):\n        Bottom.append(N-i)\n        yasumi += C\n        k -= 1\n    elif yasumi > 0:\n        yasumi -= 1\n\nS_ = S[::-1]\nBottom.sort()\nj = -1\nyasumi = 0\nfor i in range(N):\n    if (yasumi == 0) and (S_[i] == \"o\") and (K > 0):\n        j += 1\n        yasumi += C\n        K -= 1\n        if j >= len(Bottom):\n            break\n        elif Bottom[j] == i+1:\n            ans.append(i+1)\n    elif yasumi > 0:\n        yasumi -= 1\n\nfor i in ans:\n    print(i)", "def main():\n    N, K, C = list(map(int, input().split()))\n    S = input()\n\n    i = 0\n    c = 0\n    p = [-1] * N\n    while c < K:\n        if S[i] == 'o':\n            p[i] = c\n            c += 1\n            i += C\n        i += 1\n\n    i = N - 1\n    c = K - 1\n    q = [-1] * N\n    while c >= 0:\n        if S[i] == 'o':\n            q[i] = c\n            c -= 1\n            i -= C\n        i -= 1\n\n    for i in range(N):\n        if ~p[i] and p[i] == q[i]:\n            print((i + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "num=list(map(int, input().split()))\nstring=input()\ncountl=0\ncountr=num[1]\ni=0\nj=num[0]\nL=[]\nR=[]\n#rR=[]\nwhile countl!=num[1]:\n  if string[i]=='o':\n    L.append(i+1)\n    countl=countl+1\n    i=i+num[2]+1\n  else:\n    i=i+1\n  if i>=num[0]:\n    break\nwhile countr!=0:\n  if string[j-1]=='o':\n    R.append(j)\n    countr=countr-1\n    j=j-num[2]-1\n  else:\n    j=j-1\n  if j<0:\n    break\n#print(R)\nR.reverse()\n#print(L)\n#print(rR)\nfor k in range(num[1]):\n  if L[k]==R[k]:\n    print((L[k]))\n", "\ndef resolve():\n    N, K, C = list(map(int, input().split()))\n    S = input()\n\n    left = [0]*N\n    i = 0\n    cnt = 1\n    while i < N:\n        if S[i] == \"o\":\n            left[i] = cnt\n            i += C\n            cnt += 1\n        i += 1\n\n    right = [0]*N\n    i = 0\n    cnt = K\n    T = S[::-1]\n    while i < N:\n        if T[i] == \"o\":\n            right[i] = cnt\n            i += C\n            cnt -= 1\n        i += 1\n    right = right[::-1]\n\n    for i in range(N):\n        if left[i] == 0:\n            continue\n        if left[i] == right[i]:\n            print((i+1))\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "# coding: utf-8\nimport sys\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nN, K, C = lr()\nS = sr()\n# \u5de6\u304b\u3089\u3068\u53f3\u304b\u3089\u3067\u305d\u308c\u305e\u308c\u8caa\u6b32\u3001\u91cd\u306a\u3063\u305f\u3068\u3053\u308d\u304c\u5fc5\u9808\nleft = []; right = []\n\ndef work(S):\n    ret = []\n    cur = 0\n    count = 0\n    while count < K:\n        if S[cur] == 'o':\n            count += 1\n            ret.append(cur)\n            cur += C + 1\n        else:\n            cur += 1\n    return ret\n\nleft = work(S)\nright = work(S[::-1])\nright = [N-1-x for x in right]\nright.reverse()\nanswer = []\nfor l, r in zip(left, right):\n    if l == r:\n        answer.append(str(l+1))\nprint(('\\n'.join(answer)))\n", "N,K,C = map(int, input().split())\nS = input()\ndp0 = [0]*K\ndp1 = [0]*K\nstep = C\ncnt = 0\nfor i in range(N):\n  if step>=C and S[i]=='o':\n    dp0[cnt] = i\n    cnt += 1\n    if cnt==K:\n      break\n    step = 0\n  else:\n    step += 1\nstep = C\ncnt = K-1\nfor i in range(N-1,-1,-1):\n  if step>=C and S[i]=='o':\n    dp1[cnt] = i\n    cnt -= 1\n    if cnt==-1:\n      break\n    step = 0\n  else:\n    step += 1\nans = 0\nfor i,(a,b) in enumerate(zip(dp0,dp1)):\n  if a==b:\n    print(a+1)", "N, K, C = list(map(int, input().split()))\nS = input()\n\nl = [-1] * N\nr = [-1] * N\n\nidx = 1\ni = 0\nC += 1\n\nwhile i < N:\n    if S[i] == 'o':\n        l[i] = idx\n        idx += 1\n        i += C\n    else:\n        i += 1\n\nidx = 1\ni = N-1\nwhile 0 <= i:\n    if S[i] == 'o':\n        r[i] = idx\n        idx += 1\n        i -= C\n    else:\n        i -= 1\n\nif idx-1 <= K:\n    for i in range(N):\n        if l[i] != -1 and r[i] != -1: print(i+1)", "n, k, c = map(int, input().split())\ns = list(input())\n\ncount = 0\n\nl, r = [], []\n\nfor i in range(n):\n    m = i + c * count\n    if m >= n:\n        break\n    if s[m] == 'o':\n        count += 1\n        if count > k:\n            break\n        l.append(m)\n\ncount = 0\n\nfor i in range(n - 1, -1, -1):\n    m = i - c * count\n    if m < 0:\n        break\n    if s[m] == 'o':\n        count += 1\n        if count > k:\n            break\n        r.append(m)\n\nl.sort()\nr.sort()\n\nfor i in range(k):\n    if l[i] == r[i]:\n        print(l[i] + 1)", "#!/usr/bin/env python3\n# coding: utf-8\n\ndef debug(arg):\n    if __debug__:\n        pass\n    else:\n        import sys\n        print(arg, file=sys.stderr)\n        \ndef main():\n    N, K, C = map(int, input().split())\n    S = dict(enumerate(str(input()), 1))\n\n    sr = list(k for k, v in S.items() if v == 'o')\n    sl = list(reversed(sr.copy()))\n\n    debug(sr)\n    debug(sl)\n\n    l = [sl.pop()]\n    r = [sr.pop()]\n    \n    for x in range(1, K):\n        while True:\n            ll = sl.pop()\n            if ll > l[x - 1] + C:\n                l.append(ll)\n                break\n        while True:\n            rr = sr.pop()\n            if rr < r[x - 1] - C:\n                r.append(rr)\n                break\n\n    debug(r)\n    debug(l)\n\n    # a = sorted(set(l) & set(r))\n\n    # debug(a)\n    # for aa in a:\n    #     print(aa)\n    \n    for ll, rr in zip(l, sorted(r)):\n        if ll == rr:\n            print(ll)\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k, c = map(int, input().split())\ns = input()\nl = [0 for i in range(k)]\nr = [0 for i in range(k)]\ni, j = 0, 0\nwhile i < n and (not l[-1]):\n    if s[i] == \"o\":\n        l[j] = i + 1\n        i += c + 1\n        j += 1\n    else:\n        i += 1\ni, j = 0, k - 1\nwhile i < n and (not r[0]):\n    if s[n - i - 1] == \"o\":\n        r[j] = n - i\n        i += c + 1\n        j -= 1\n    else:\n        i += 1\nfor i in range(k):\n    if l[i] == r[i]:\n        print(l[i])", "N, K, C = map(int, input().split())\nS = input()\n\nl = [0]*K\ni = 0\nfor j in range(K):\n    while S[i] == \"x\":\n        i += 1\n    l[j] = i\n    i += C+1\n\nr = [0]*K\ni = N-1\nfor j in range(K-1, -1, -1):\n    while S[i] == \"x\":\n        i -= 1\n    r[j] = i\n    i -= C+1\n# print(l, r)\n[print(l_i+1) for l_i, r_i in zip(l, r) if l_i == r_i]\n\n", "import itertools\nfrom collections import deque,defaultdict,Counter\nfrom itertools import accumulate\nimport bisect\nfrom heapq import heappop,heappush,heapify\nimport math\nfrom copy import deepcopy\nimport queue\nimport numpy as np\n# sympy as syp(\u7d20\u56e0\u6570\u5206\u89e3\u3068\u304b)\nMod = 1000000007\ndef sieve_of_eratosthenes(n):\n    if not isinstance(n,int):\n        raise TypeError(\"n is not int\")\n    if n<2:\n        raise ValueError(\"n is not effective\")\n    prime = [1]*(n+1)\n    for i in range(2,int(math.sqrt(n))+1):\n        if prime[i] == 1:\n            for j in range(2*i,n+1):\n                if j%i == 0:\n                    prime[j] = 0\n    res = []\n    for i in range(2,n+1):\n        if prime[i] == 1:\n            res.append(i)\n    return res\n\n \nclass UnionFind:\n    def __init__(self,n):\n        self.parent = [i for i in range(n+1)]\n        self.rank = [0 for i in range(n+1)]\n    \n    def findroot(self,x):\n        if x == self.parent[x]:\n            return x\n        else:\n            y = self.parent[x]\n            y = self.findroot(self.parent[x])\n            return y\n    \n    def union(self,x,y):\n        px = self.findroot(x)\n        py = self.findroot(y)\n        if px < py:\n            self.parent[y] = px\n        else:\n            self.parent[px] = py\n \n    def same_group_or_no(self,x,y):\n        return self.findroot(x) == self.findroot(y)\n\ndef main():  #startline-------------------------------------------\n    n, k, c = map(int, input().split())\n    def sub(s):\n        n = len(s)\n        cur = 0\n        last = -(c + 1)\n        res = [0] * (n + 1)\n        for i in range(n):\n            if (i - last > c and s[i] == \"o\"):\n                cur += 1\n                last = i\n            res[i + 1] = cur\n        return res\n    \n    s = input()\n    left = sub(s)\n    t = s\n    t = t[::-1]\n    right = sub(t)\n    for i in range(n):\n        if s[i] == \"x\": continue\n        if left[i] + right[n - i - 1] < k:\n            print(i+1)\n\ndef __starting_point():\n    main() #endline===============================================\n__starting_point()", "n,k,c=list(map(int,input().split()))\ns=str(input())\nl=[]\nr=[]\ncnt=0\nfor i in range(k):\n    if s[cnt]==\"o\":\n        l.append(cnt+1)\n        cnt+=c+1\n    else:\n        while s[cnt]!=\"o\":\n            cnt+=1\n        l.append(cnt+1)\n        cnt+=c+1\ncnt=1\nfor i in range(k):\n    if s[-cnt]==\"o\":\n        r.append(n-cnt+1)\n        cnt+=c+1\n    else:\n        while s[-cnt]!=\"o\":\n            cnt+=1\n        r.append(n-cnt+1)\n        cnt+=c+1\nr=r[::-1]\nfor i in range(k):\n    if l[i]==r[i]:\n        print((l[i]))\n\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    n,k,c = map(int, input().split())\n    s = input().rstrip()\n    left = [0]*n\n    day = 0\n    temp = 0\n    while day < n:\n        if s[day] == 'o':\n            temp += 1\n            left[day] = temp\n            for i in range(c):\n                if day+i+1 < n:\n                    left[day+i+1] = temp\n            day += c\n        else:\n            left[day] = temp\n        day += 1\n\n    right = [0]*n\n    day = n-1\n    temp = 0\n    while 0 <= day:\n        if s[day] == 'o':\n            temp += 1\n            right[day] = temp\n            for i in range(c):\n                if day-i-1 >= 0:\n                    right[day-i-1] = temp\n            day -= c\n        else:\n            right[day] = temp\n        day -= 1\n\n    res = []\n    for i in range(n):\n        if s[i] == 'o':\n            if i-c-1 < 0:\n                pre = 0\n            else:\n                pre = left[i-c-1]\n            if i+c+1 >= n:\n                pos = 0\n            else:\n                pos = right[i+c+1]\n            if pre + pos == k-1:\n                res.append(i+1)\n    for i in range(len(res)):\n        if i-1>=0:\n            l = res[i-1]\n        else:\n            l = -1000000\n        if i+1<len(res):\n            r = res[i+1]\n        else:\n            r = 10000000\n        if res[i]-l>c and r-res[i] > c:\n            print(res[i])\n\ndef __starting_point():\n    main()\n__starting_point()", "n,k,c = list(map(int,input().split()))\ns = input()\nfro = []\nbac = []\n\nfor i in range(n):\n    if s[i] == \"o\" and (len(fro) == 0 or fro[-1]+c < i):\n        fro.append(i)\n    if s[n-i-1] == \"o\" and (len(bac) == 0 or bac[-1]-c > n-i-1):\n        bac.append(n-i-1)\n\nfor i in range(k):\n    if fro[i] == bac[k-i-1]:\n        print((fro[i]+1))\n", "N,K,C = map(int, input().split())\nS = input()\nw = []\nfor i in range(len(S)):\n   if S[i]==\"o\":\n      w.append(i)\n# print(w)\n# early date\nearly = []\ntmpwd = -1\nfor i in range(len(w)):\n   if len(early) >= K:\n      continue\n   if tmpwd<0:\n      tmpwd = w[i]\n   elif w[i]>tmpwd+C:\n      tmpwd = w[i]\n   else:\n      continue\n   early.append(w[i])\n# print(early)\n\n# later date\nlate = []\ntmpwd = -1\nfor i in reversed(range(len(w))):\n   if len(late)>=K:\n      continue      \n   if tmpwd < 0:\n      tmpwd = w[i]\n   elif w[i] < tmpwd-C:\n      tmpwd = w[i]\n   else:\n      continue\n   late.append(w[i])\n\nwd = set(early) & set(late)\nearly.sort()\nlate.sort()\n# print(early,late)\nfor i in range(K):\n   if early[i]==late[i]:\n      print(early[i]+1)", "N, K, C = list(map(int, input().split()))\nS = input()\n\ns = []\n\ncount = 0\nfor i in range(N):\n    if len(s) == K:\n        break\n    if count == 0:\n        if S[i] == 'x':\n            continue\n        else:\n            count = C\n            s.append(i+1)\n    else:\n        count -= 1\ns2 = []\ncount = 0\nfor i in range(N-1, -1, -1):\n    if len(s2) == K:\n        break\n    if count == 0:\n        if S[i] == 'x':\n            continue\n        else:\n            s2.append(i+1)\n            count = C\n    else:\n        count -= 1\n\nfor a, b in zip(s, s2[::-1]):\n    if a == b:\n        print(a)\n", "n,k,c=list(map(int,input().split()))\ns=input()\n\navailable=[]\nfor i in range(n):\n    if s[i]==\"o\":\n        available.append(i)\n\n#\u5de6\u5074\u304b\u3089\u3007\u3092\u6570\u3048\u308b\nleft=[0]*n\nrest=0\ncnt=0\n\nfor i in range(n):\n    if s[i]==\"o\" and i>=rest:\n        cnt+=1\n        left[i]=cnt\n        rest=i+c+1\n    else:\n        left[i]=cnt\n\n#\u53f3\u5074\u304b\u3089\u3007\u3092\u6570\u3048\u308b\nright=[0]*n\nrest=n-1\ncnt=0\n\nfor i in range(n-1,-1,-1):\n    if s[i]==\"o\" and i<=rest:\n        cnt+=1\n        right[i]=cnt\n        rest=i-c-1\n    else:\n        right[i]=cnt\n\n#-1\u65e5\u76ee\u3001n+1\u65e5\u76ee\u304c\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b0\u3092\u8db3\u3059        \nfor i in ([left,right]):\n    i.insert(0,0)\n    i.append(0)\n\nans=[]\n\nfor i in range(1,n+1):\n    a=left[i-1]+right[i+1]\n    if a<k:\n        ans.append(i)\n    \nfor j in ans:\n    print(j)\n", "n,k,c = map(int,input().split())\ns = input()\nforth = set()\nreverse = set()\ncur = 0\ntired = 0\nfor i in range(n):\n    if s[i] == \"o\":\n        if tired == 0:\n            cur += 1\n            tired = c\n            forth.add(i+1)\n        else:\n            if tired > 0:\n                tired -= 1\n    else:\n        if tired > 0:\n            tired -= 1\nif cur > k:\n    return\ns = s[::-1]\ncur = 0\ntired = 0\nfor i in range(n):\n    if s[i] == \"o\":\n        if tired == 0:\n            cur += 1\n            tired = c\n            reverse.add(n-i)\n        else:\n            if tired > 0:\n                tired -= 1\n    else:\n        if tired > 0:\n            tired -= 1\nans = forth & reverse\nans = list(ans)\nans.sort()\nfor i in ans:\n    print(i)", "N, K, C = [int(input_) for input_ in input().split(\" \")]\n    \ntick_cross = input()\n    \ndef find_earliest_work_days(K, C, tick_cross):\n    \"\"\"\n    Find the list of the earliest day in all possible days for the n-th \n    work day.\n    \n    Parameters:\n    K (int): The number of work days.\n    C (int): Minimum interval between the previous work day and the \n             next work day.\n    tick_cross (str): The character string of days he can go to work.\n             \n    Returns:\n    List[int]: The list of the earliest day in all possible days for \n               the n-th work day.\n    \"\"\"\n    \n    N = len(tick_cross)\n        \n    day = 0\n    earliest_work_days = []\n    number_of_work_days = len(earliest_work_days)\n    while (day < N) and (number_of_work_days < K):\n        if tick_cross[day] == \"o\":\n            earliest_work_days.append(day+1)\n            number_of_work_days = len(earliest_work_days)\n            day += C + 1\n        else:\n            day += 1\n            \n    return earliest_work_days\n    \ndef find_latest_work_days(K, C, tick_cross): \n    \"\"\"\n    Find the list of the latest day in all possible days for the n-th \n    work day.\n    \n    Parameters\n    K (int): The number of work days.\n    C (int): Minimum interval between the previous work day and the \n             next work day.\n    tick_cross (str): The character string of days he can go to work.\n             \n    Returns:\n    List[int]: The list of the latest day in all possible days for \n               the n-th work day.\n    \"\"\"\n    \n    N = len(tick_cross)\n        \n    day = N - 1\n    latest_work_days = []\n    number_of_work_days = len(latest_work_days)\n    while (day >= 0) and (number_of_work_days < K):\n        if tick_cross[day] == \"o\":\n            latest_work_days.append(day+1)\n            number_of_work_days = len(latest_work_days)\n            day -= (C + 1)\n        else:\n            day -= 1\n            \n    return sorted(latest_work_days)\n                \nearliest_work_days = find_earliest_work_days(K, C, tick_cross)\nlatest_work_days = find_latest_work_days(K, C, tick_cross)\nfor earliest, latest in zip(earliest_work_days, latest_work_days):\n    if earliest == latest:\n        print(earliest)", "def main():\n  N, K, C=list(map(int, input().split()))\n  S = input()[::-1]\n  \n  R=[0]*K\n  n, k=0, 0\n  while k < K:\n    if S[n]=='o':\n      R[k]=N-n\n      k+=1\n      n += C\n    n+=1\n  R=R[::-1]\n  \n  S=S[::-1]\n  n, k=0, 0\n  while k < K:\n    if S[n]=='o':\n      if n+1 == R[k]:\n        print((n+1))\n      k+=1\n      n += C\n    n+=1\n  #print(L)\n  \ndef __starting_point():\n  main()\n\n__starting_point()", "n, k, c = [int(i) for i in input().split()]\ns = input()\n\nwork1 = [0] * k\nwork2 = [0] * k\ncnt = 0\nday = 0\n\nwhile cnt < k:\n\tif s[day] == 'o':\n\t\twork1[cnt] = day\n\t\tcnt\t+= 1\n\t\tday += (c+1)\n\telse:\n\t\tday += 1\n\n\ncnt = k-1\nday = n-1\n\nwhile cnt >= 0:\n\tif s[day] == 'o':\n\t\twork2[cnt] = day\n\t\tcnt\t-= 1 \n\t\tday -= (c + 1)\n\telse:\n\t\tday -= 1\n\n\nfor i in range(k):\n\tif work1[i] == work2[i]:\n\t\tprint((work1[i]+1))\n\n", "\ndef resolve():\n    def sub(s):\n        cur = 0\n        last = -(C + 1)\n        res = [0] * (N + 1)\n        for i in range(N):\n            if i - last > C and s[i] == \"o\":\n                cur += 1\n                last = i\n            res[i + 1] = cur\n        return res\n\n    N, K, C = list(map(int, input().split()))\n    S = input()\n\n    left = sub(S)\n    T = S[::-1]\n    right = sub(T)\n    for i in range(N):\n        if S[i] == \"x\":\n            continue\n        if left[i] + right[N - i - 1] < K:\n            print((i + 1))\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n,k,c=map(int,input().split())\ns=input()\nl=[]\nr=[]\ni=0\nj=0\nwhile len(l)<k and i<n:   \n    if s[i]=='o':\n      l.append(i+1)\n      i+=c+1\n    else: i+=1\n\nwhile len(r)<k and j<n:   \n    if s[-j-1]=='o':\n      r.append(n-j)\n      j+=c+1\n    else: j+=1\nfor n in range(k):\n  if l[n]==r[-n-1]:\n    print(l[n])", "INF=float('inf')\nn,k,c=list(map(int,input().split()))\ns=input()\n\nL=[-1 for _ in range(n)]\ncl=c+1\nwl=1\nfor i in range(n):\n  if wl>k:\n    continue\n  if s[i]=='x':\n    cl+=1\n  else:\n    if cl>c:\n      L[i]=wl\n      wl+=1\n      cl=1\n    else:\n      cl+=1\n\nR=[-1 for _ in range(n)]\ncr=c+1\nwr=k\nfor j in range(n-1,-1,-1):\n  if wr<1:\n    continue\n  if s[j]=='x':\n    cr+=1\n  else:\n    if cr>c:\n      R[j]=wr\n      wr-=1\n      cr=1\n    else:\n      cr+=1\n\nfor i in range(n):\n  if L[i]==-1:\n    continue\n  if R[i]==-1:\n    continue\n  if L[i]==R[i]:\n    print((i+1))\n    \n", "#!/usr/bin/env python3\n\n# N:\u5168\u65e5\u6570 K:\u50cd\u304f\u65e5\u6570 C:\u50cd\u3044\u305f\u65e5\u304b\u3089\u305d\u306e\u5f8c\u50cd\u304b\u306a\u3044\u65e5\u6570\nN, K, C = map(int, input().split())\nS = input()\n\n# num\u56de\u76ee\u306b\u50cd\u304f\u65e5\u306fl[num-1]\u65e5\u76ee\u4ee5\u964d\nl = []\nnum = 0\ni = 0\nwhile num < K:\n    if S[i] == \"o\":\n        l.append(i)\n        num += 1\n        i += C + 1\n    else:\n        i += 1\n\n# num\u56de\u76ee\u306b\u50cd\u304f\u65e5\u306fl[num-1]\u65e5\u76ee\u4ee5\u524d\nr = []\nnum = 0\ni = N - 1\nwhile num < K:\n    if S[i] == \"o\":\n        r.append(i)\n        num += 1\n        i -= C + 1\n    else:\n        i -= 1\nr.reverse()\n\nfor i in range(K):\n    if l[i] == r[i]:\n        print(l[i] + 1)", "line1 = input().split()\nn = int(line1[0])\nk = int(line1[1])\nc = int(line1[2])\ns = list(input())\nl = [s.index(\"o\") + 1]\nr = [len(s) - s[::-1].index(\"o\")]\nfor i in range(1, k):\n  j = l[i - 1]\n  m = r[i - 1]\n  while j - l[i - 1] <= c or s[j - 1] != \"o\":\n    j += 1\n  while r[i - 1] - m <= c or s[m - 1] != \"o\":\n    m -= 1\n  r.append(m)\n  l.append(j)\nr = r[::-1]\nfor i in range(len(r)):\n  if r[i] == l[i]:\n    print(r[i])", "N, K, C = map(int, input().split())\nS = input()\nL, R = [-1] * K, [-1] * K\nk = 0; temp = -C\nfor i, s in enumerate(S, 1):\n    if s == 'o' and i > temp + C: L[k] = i; k += 1; temp = i\n    if k == K: break\nk = K - 1; temp = N + C + 1\nfor i, s in reversed(list(enumerate(S, 1))):\n    if s == 'o' and i < temp - C: R[k] = i; k -= 1; temp = i\n    if k == -1: break\nans = []\nfor l, r in zip(L, R):\n    if l == r: ans.append(l)\nfor a in ans: print(a)", "3\n# -*- coding: utf-8 -*-\nn, k, c = map(int, input().split())\nS = [1 if a == \"o\" else 0 for a in input()]\ncount = 0\nX = [0] * n\nY = [0] * n\ni = 0\nwhile i < n:\n    if S[i]:\n        count += 1\n        X[i] = 1\n        i += c + 1\n    else:\n        i += 1\nif count > k:\n    return\ni = n - 1\nwhile i >= 0:\n    if S[i]:\n        Y[i] = 1\n        i -= c + 1\n    else:\n        i -= 1\nfor i in range(0, n):\n    if X[i] and Y[i]:\n        print(i + 1)", "# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\n\n\ndef solve():\n    N, K, C = list(map(int, input().split()))\n    S = input()\n\n    left = []\n    rest = 0\n    work = 0\n    for i in range(N):\n        if S[i] == 'o' and rest == 0:\n            left.append(i)\n            rest = C + 1\n            work += 1\n        if rest > 0:\n            rest -= 1\n        if work == K:\n            break\n\n    right = []\n    rest = 0\n    work = 0\n    for i in reversed(list(range(N))):\n        if S[i] == 'o' and rest == 0:\n            right.append(i)\n            rest = C + 1\n            work += 1\n        if rest > 0:\n            rest -= 1\n        if work == K:\n            break\n    right = list(reversed(right))\n\n    # print(left)\n    # print(right)\n    for i in range(len(left)):\n        if left[i] == right[i]:\n            print((left[i] + 1))\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "N, K, C = list(map(int, input().split()))\nS = list(input())\n\n# \u5de6\u8a70\u3081\u306e\u50cd\u304f\u30ea\u30b9\u30c8\nl_list = [-1 for i in range(N)]\ni = 0\ncnt = 0\nwhile(i < N and cnt < K):\n\tif(S[i] == \"o\"):\n\t\tl_list[i] = cnt\n\t\tcnt += 1\n\t\ti += C\n\ti += 1\n\n# \u53f3\u8a70\u3081\u306e\u50cd\u304f\u30ea\u30b9\u30c8\nr_list = [-1 for i in range(N)]\ni = N - 1\ncnt = 0\nwhile(i >= 0 and cnt < K):\n\tif(S[i] == \"o\"):\n\t\tr_list[i] = K-1-cnt\n\t\tcnt += 1\n\t\ti -= C\n\ti -= 1\n\n# \u4e21\u65b9\u306e\u30ea\u30b9\u30c8\u3067\u4e00\u81f4\u3059\u308b\u30de\u30b9(\u65e5)\u3092\u51fa\u529b\nfor i in range(N):\n\tif(l_list[i] == -1 or r_list[i] == -1):\n\t\tcontinue\n\tif(l_list[i] == r_list[i]):\n\t\tprint((i+1))\n", "n,k,c=list(map(int,input().split()))\ns=input()\nINF=float(\"inf\")\nleft=[0]*(n+1)\nright=[0]*(n+1)\n\nmleft=0\nlast=-c-1\nfor i in range(n):\n    if s[i]==\"o\" and i-last>c:\n        mleft+=1\n        last=i\n        left[i+1]=mleft\n\nmright=0\nlast=-c-1\nt=s[::-1]\nfor i in range(n):\n    if t[i]==\"o\" and i-last>c:\n        mright+=1\n        last=i\n        right[i+1]=mright\n\nfor i in range(n):\n    left[i+1]=max(left[i+1],left[i])\n    right[i + 1] = max(right[i + 1], right[i])\n\nleft.remove(left[0])\nright.remove(right[0])\nright=right[::-1]\nleft.append(0)\nright.append(0)\n\nans=[]\nfor i in range(1,n+1):\n    if s[i-1]==\"o\":\n        if left[i-2]+right[i]<k:\n            ans.append(i)\n\n\nfor i in range(len(ans)):\n    print((ans[i]))\n\n\n", "N, K, C = list(map(int, input().split()))\nS = input()\nA = []\ncnt = 0\nfor i, s in enumerate(S, 1):\n    if cnt > 0:\n        cnt -= 1\n    elif s == \"o\":\n        cnt = C\n        A.append(i)\nif len(A) > K:\n    return\nB = []\ncnt = 0\nfor i, s in zip(list(range(N, 0, -1)), S[::-1]):\n    if cnt > 0:\n        cnt -= 1\n    elif s == \"o\":\n        cnt = C\n        B.append(i)\nassert len(B) == K\nB.reverse()\nAns = []\nfor a, b in zip(A, B):\n    if a == b:\n        Ans.append(a)\nprint((\"\\n\".join(map(str, Ans))))\n", "import bisect\nn,k,c = map(int,input().split())\ns = input()\n\nlst = []\nfor i in range(n):\n    if s[i]=='o':\n        lst.append(i+1)\n\nx,y = [],[]\nfor i in range(len(lst)):\n    if i==0:\n        x.append(lst[i])\n    else:\n        if lst[i]-x[-1]>c:\n            x.append(lst[i])\n    if len(x)==k:\n        break\n\nfor i in range(len(lst))[::-1]:\n    if i==len(lst)-1:\n        y.append(lst[i])\n    else:\n        if y[-1]-lst[i]>c:\n            y.append(lst[i])\n    if len(y)==k:\n        break\n\nx.sort()\ny.sort()\n\nans = []\nfor i in range(k):\n    if x[i]==y[i]:\n        ans.append(x[i])\nfor a in ans:\n    print(a)", "n, k, c = map(int, input().split())\ns = input()\nleft = [-1 for _ in range(k)]\nright = [-1 for _ in range(k)]\n\nbef = -10 ** 10\ncnt = 0\nfor i, ss in enumerate(s):\n    if ss == \"o\" and i - bef > c:\n        if cnt == k:\n            return\n        left[cnt] = i\n        bef = i\n        cnt += 1\n\ncnt = 0\nbef = -10 ** 10\nfor i, ss in enumerate(s[::-1]):\n    if ss == \"o\" and i - bef > c:\n        if cnt == k:\n            return\n        right[k - 1 - cnt] = n - 1 - i\n        bef = i\n        cnt += 1\n\n\nfor ll, rr in zip(left, right):\n    if ll == rr:\n        print(ll + 1)", "import sys\nreadline = sys.stdin.readline\n\n# \u3082\u3063\u3068\u3082\u65e9\u3044\u65e5\u306b\u8caa\u6b32\u306b\u50cd\u3044\u305f\u30d1\u30bf\u30fc\u30f3\n# \u3082\u3063\u3068\u3082\u9045\u3044\u65e5\u306b\u8caa\u6b32\u306b\u50cd\u3044\u305f\u30d1\u30bf\u30fc\u30f3\n# \u4e0a\u8a18\u3067X\u56de\u76ee\u306e\u4ed5\u4e8b\u304c\u540c\u3058\u65e5\u3067\u3042\u308c\u3070\u305d\u306e\u65e5\u306f\u5fc5\u305a\u50cd\u304f\u5fc5\u8981\u304c\u3042\u308b\n\nN,K,C = map(int,readline().split())\nS = readline().rstrip()\n\nfast = [0] * K\nind = 0\ncnt = 0\nwhile cnt < K: # K\u56de\u50cd\u304f\u307e\u3067\n  if S[ind] == \"o\":\n    fast[cnt] = ind\n    cnt += 1\n    ind += (C + 1)\n  else:\n    ind += 1\n\nlate = [0] * K\nind = len(S) - 1\ncnt = K - 1\nwhile 0 <= cnt:\n  if S[ind] == \"o\":\n    late[cnt] = ind\n    cnt -= 1\n    ind -= (C + 1)\n  else:\n    ind -= 1\n    \nans = []\nfor i in range(K):\n  if fast[i] == late[i]:\n    ans += [fast[i] + 1]\n    \nfor a in ans:\n  print(a)", "def main() -> None:\n    n, k, c = list(map(int, input().split()))\n    s = input()\n\n    if k<s.count('o') and c==0:\n        print('')\n        return\n\n    count = c\n    day_work, day_work_reverse = [], []\n    for i, day in enumerate(s):\n        count += 1\n        if day == 'o' and c < count:\n            day_work.append(i+1)\n            count = 0\n    count = c\n    for i, day in enumerate(s[::-1]):\n        count += 1\n        if day == 'o' and c < count:\n            day_work_reverse.append(n-i)\n            count = 0\n    day_must = set(day_work[:k]) & set(day_work_reverse[:k])\n    for day in sorted(list(day_must)):\n        print(day)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque\n\n\ndef read_int():\n    return int(input().strip())\n\n\ndef read_ints():\n    return list(map(int, input().strip().split(' ')))\n\n\ndef solve():\n    N, K, C = read_ints()\n    S = input().strip()\n    earliest = []\n    i = 0\n    while len(earliest) < K:\n        if S[i] == 'o':\n            earliest.append(i)\n            i += C+1\n        else:\n            i += 1\n    latest = []\n    i = N-1\n    while len(latest) < K:\n        if S[i] == 'o':\n            latest.append(i)\n            i -= C+1\n        else:\n            i -= 1\n    latest.reverse()\n    for i, j in zip(earliest, latest):\n        if i == j:\n            print((i+1))\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "N, K, C = list(map(int, input().split()))\nS = input()\n\nL = [0]*K\nR = [0]*K\nlpiv = 0\nrpiv = N-1\nfor i in range(K):\n    while S[lpiv] == 'x':\n        lpiv += 1\n    while S[rpiv] == 'x':\n        rpiv -= 1\n    L[i] = lpiv\n    R[i] = rpiv\n    lpiv += C+1\n    rpiv -= C+1\n\nans = 0\nfor i in range(K):\n    if L[i]==R[K-i-1]:\n        print((L[i]+1))\n", "def main():\n\n    N, K, C = [int(i) for i in input().split()]\n    S = input().rstrip()\n\n    if all(s == \"x\" for s in S):\n        return\n    \n    left = [0] * N\n    day = 0\n    work_cnt = 1\n    while day < N:\n        if S[day] == \"o\":\n            left[day] = work_cnt\n            work_cnt += 1\n            day += C\n        day += 1\n    \n    right = [0] * N\n    day = N - 1\n    work_cnt = K\n    while 0 <= day:\n        if S[day] == \"o\":\n            right[day] = work_cnt\n            work_cnt -= 1\n            day -= C\n        day -= 1\n    \n    for i in range(N):\n        if left[i] == right[i] and left[i] != 0:\n            print((i + 1))\n\nmain()\n", "N, K, C = list(map(int,input().split()))\ns = list(str(input()))\n\nL = []  # i+1\u65e5\u76ee\u306b\u50cd\u304f\u306e\u306fL[i]\u65e5\u76ee\u4ee5\u964d\nR = []  # i+1\u65e5\u76ee\u306b\u50cd\u304f\u306e\u306fL[i]\u65e5\u76ee\u4ee5\u524d\n\nfor i in range(N):\n    if len(L) >= K:\n        break\n    if s[i] == 'o' and (L == [] or (i + 1) - L[-1] > C):\n        # \u51fa\u52e4\u53ef\u80fd('o') \u4e14 (L\u304c\u7a7a\u53c8\u306fi\u65e5\u76ee\u6642\u70b9\u306e\u6700\u7d42\u51fa\u52e4\u304b\u3089c\u65e5\u7d4c\u904e)\n        # \u306a\u3089\u3070L\u306bi+1\u3092\u8ffd\u52a0\n        L.append(i + 1)\n\nfor i in range(N - 1, -1, -1):\n    if len(R) >= K:\n        break\n    if s[i] == 'o' and (R == [] or R[-1] - (i + 1) > C):\n        R.append(i + 1)\n\nR.reverse()\nans = []\n\nfor i in range(K):\n    if L[i] == R[i]:\n        print(L[i])", "def main():\n    N, K, C = list(map(int, input().split(' ')))\n    S = input()\n    R, L = [0 for _ in range(K)], [0 for _ in range(K)]\n    # calc first dates\n    index, cnt = 0, 0\n    while cnt < K and index <= N - 1:\n        if S[index] == 'o':\n            R[cnt] = index\n            index += C + 1\n            cnt += 1\n        else:\n            index += 1\n    # calc last dates\n    S = S[::-1]\n    index, cnt = 0, 0\n    while cnt < K and index <= N - 1:\n        if S[index] == 'o':\n            L[K - 1 - cnt] = N - 1 - index\n            index += C + 1\n            cnt += 1\n        else:\n            index += 1\n    ans = [R[k] + 1 for k in range(K) if R[k] == L[k]]\n    if len(ans) == 0:\n        print('')\n    else:\n        for a in ans:\n            print(a)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def assign(s, n, k, c):\n    res = []\n    i = 0\n    while k > 0 and i < n:\n        if s[i] == 'o':\n            res.append(i)\n            k -= 1\n            i += c\n        i += 1\n    return res\n\n\nn, k, c = list(map(int, input().split()))\ns = input()\na = assign(s, n, k, c)\nb = assign(s[::-1], n, k, c)[::-1]\nc = [n-x-1 for x in b]\n\nfor x, y in zip(a, c):\n    if x == y:\n        print((x + 1))\n", "n,k,c=list(map(int,input().split()))\ns=input()\n\ni=0\ncounter=0\nfslist=[]\n\nwhile counter < k:\n\tif s[i] == \"o\":\n\t\tfslist.append(i)\n\t\ti += c+1\n\t\tcounter += 1\n\telse:\n\t\ti += 1\n\ni=-1\ncounter=0\nfelist=[]\n\nwhile counter < k:\n\tif s[i] == \"o\":\n\t\tfelist.append(i+n)\n\t\ti -= c+1\n\t\tcounter += 1\n\telse:\n\t\ti -= 1\n\nfelist.reverse()\n\nfor i in range(k):\n\tif fslist[i] == felist[i]:\n\t\tprint((fslist[i]+1))\n\n", "def main():\n    n, k, c = map(int, input().split())\n    s = input().rstrip()\n    frnt = [None]*n\n    back = [None]*n\n    if s[0] == \"o\":\n        frnt[0] = [1, 0]\n    else:\n        frnt[0] = [0, -1*n - 100]\n    for i in range(1, n):\n        if s[i] == \"o\" and i - frnt[i-1][1] - 1 >= c:\n            frnt[i] = [frnt[i-1][0]+1, i]\n        else:\n            frnt[i] = [frnt[i-1][0], frnt[i-1][1]]\n    if s[-1] == \"o\":\n        back[-1] = [1, n-1]\n    else:\n        back[-1] = [0, 2*n + 100]\n    for i in reversed(range(n-1)):\n        if s[i] == \"o\" and back[i+1][1] - i - 1 >= c:\n            back[i] = [back[i+1][0]+1, i]\n        else:\n            back[i] = [back[i+1][0], back[i+1][1]]\n    for i in range(n):\n        if s[i] == \"x\":\n            continue\n        a = frnt[i][0] + back[i][0]\n        if i == frnt[i][1]:\n            a -= 1\n        if i == back[i][1]:\n            a -= 1\n        if i != frnt[i][1] and i != back[i][1]:\n            if back[i][1] - frnt[i][1] - 1 < c:\n                a -= 1\n        if a == k-1:\n            print(i+1)\n\ndef __starting_point():\n    main()\n__starting_point()", "data = input().split(\" \")\nN, K, C = int(data[0]), int(data[1]), int(data[2])\nS = input()\n\npoint = 0\nwork_start = [0] * (K + 1)\nfor i in range(1, K + 1):\n  point = S.find(\"o\", point, N)\n  work_start[i] = point + 1\n  point += (C + 1)\n\npoint = N\nwork_end = [0] * (K + 1)\nfor i in range(K, 0, -1):\n  point = S.rfind(\"o\", 0, point)\n  work_end[i] = point + 1\n  point -= C\n\nfor i in range(1, K + 1):\n  if work_start[i] == work_end[i]:\n    print(work_start[i])", "\nn, k, c = list(map(int, input().split()))\ns = input()\nl = [0] * k\nr = [0] * k\np = 0\n# for i in range(n):\ni = 0\nwhile i < n:\n    if s[i] == \"o\":\n        l[p] = i\n        p += 1\n        if (p >= k):\n            break\n        i += c\n    i += 1\np = k-1\n# for i in range(n - 1, -1, -1):\ni = n - 1\nwhile i >= 0:\n    if s[i] == \"o\":\n        r[p] = i\n        p -= 1\n        if (p < 0):\n            break\n        i -= c\n    i -= 1\n#print(l, r)\nfor i in range(k):\n    if l[i] == r[i]:\n        print((l[i]+1))\n", "# n : \u5168\u65e5\u6570\u3000k\uff1a\u50cd\u304f\u65e5\u6570\u3000c\uff1a\u50cd\u3044\u305f\u65e5\u304b\u3089\u305d\u306e\u5f8c\u50cd\u304b\u306a\u3044\u65e5\u6570\nn, k, c = map(int, input().split())\ns = input()\n\n## \u524d\u304b\u3089\u8caa\u6b32\u7684\u306b\u50cd\u304f\u65e5\u3092\u6c42\u3081\u308b l\nl = []\ni = 0\nnum = 0\nwhile num < k:\n    if s[i] == 'o':\n        l.append(i)\n        num += 1\n        i += c + 1\n    else:\n        i += 1\n\n## \u5f8c\u308d\u304b\u3089\u8caa\u6b32\u7684\u306b\u50cd\u304f\u65e5\u3092\u6c42\u3081\u308b r\nr = []\nnum = 0\ni = n - 1\nwhile num < k:\n    if s[i] == 'o':\n        r.append(i)\n        num += 1\n        i -= c + 1\n    else:\n        i -= 1\nr.reverse()\n\nfor i in range(k):\n    if l[i] == r[i]:\n        print(l[i] + 1)", "n, k, c = map(int, input().split())\ns = input()\n\nleft = []\ni = 0\nwhile len(left) < k:\n  if s[i] == 'o':\n    left.append(i)\n    i += c + 1\n  else:\n    i += 1\n\nright = []\ni = n - 1\nwhile len(right) < k:\n  if s[i] == 'o':\n    right.append(i)\n    i -= c + 1\n  else:\n    i -= 1\n\nright = right[::-1]\n\nfor i in range(k):\n  if left[i] == right[i]:\n    print(left[i] + 1)", "n, k, c = list(map(int, input().split()))\ns = input()\n\nworkL = [0] * (n + 1)\nworkR = [0] * (n + 1)\n\ncnt = 0\nleft = 0\n\nwhile left < n:\n    if s[left] == 'o':\n        workL[left + 1] += 1\n        cnt += 1\n        left += c\n    left += 1\n\ncnt = 0\nright = n - 1\nwhile right >= 0:\n    if s[right] == 'o':\n        workR[right] += 1\n        cnt += 1\n        right -= c\n    right -= 1\n\nfor i in range(n - 1):\n    workL[i + 1] += workL[i]\nfor i in range(n - 1, 0, -1):\n    workR[i - 1] += workR[i]\n\n\nprint((\"\\n\".join(\n    map(str, [i + 1 for i in range(n) if workL[i] + workR[i + 1] < k]))))\n", "N,K,C = map(int,input().split())\nS = list(input())\n\nA = [0]*N\nB = [0]*N\n\ni = 0\na = 1\nwhile i < N:\n    if S[i] == 'o':\n        A[i] = a\n        a += 1\n        i += C+1\n    else:\n        i += 1\nj = N-1\nb = K\nwhile j >= 0:\n    if S[j] == 'o':\n        B[j] = b\n        b -= 1\n        j -= C+1\n    else:\n        j -= 1\n\nfor i in range(N):\n    if A[i] == B[i] and A[i] != 0:\n        print(i+1)", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, K: int, C: int, S: str):\n    l = [None] * N\n    r = [None] * N\n\n    pre = -float('inf')\n    k = -1\n    for cur in range(N):\n        if cur - pre > C and S[cur] == 'o':\n            k += 1\n            pre = cur\n            l[k] = cur\n\n    pre = float('inf')\n    k = K\n    for cur in range(N-1, -1, -1):\n        if pre - cur > C and S[cur] == 'o':\n            k -= 1\n            pre = cur\n            r[k] = cur\n\n    return [ll+1 for ll, rr in zip(l[:K], r[:K]) if ll == rr]\n    \n\n\n# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    C = int(next(tokens))  # type: int\n    S = next(tokens)  # type: str\n    print(*solve(N, K, C, S), sep='\\n')\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nreadline = sys.stdin.readline\n\n# \u3082\u3063\u3068\u3082\u65e9\u3044\u65e5\u306b\u8caa\u6b32\u306b\u50cd\u3044\u305f\u30d1\u30bf\u30fc\u30f3\n# \u3082\u3063\u3068\u3082\u9045\u3044\u65e5\u306b\u8caa\u6b32\u306b\u50cd\u3044\u305f\u30d1\u30bf\u30fc\u30f3\n# \u4e0a\u8a18\u3067X\u56de\u76ee\u306e\u4ed5\u4e8b\u304c\u540c\u3058\u65e5\u3067\u3042\u308c\u3070\u305d\u306e\u65e5\u306f\u5fc5\u305a\u50cd\u304f\u5fc5\u8981\u304c\u3042\u308b\n\nN,K,C = map(int,readline().split())\nS = readline().rstrip()\n\nfast = [0] * K\nind = 0\ncnt = 0\nwhile cnt < K: # K\u56de\u50cd\u304f\u307e\u3067\n  if S[ind] == \"o\":\n    fast[cnt] = ind\n    cnt += 1\n    ind += (C + 1)\n  else:\n    ind += 1\n\nlate = [0] * K\nind = len(S) - 1\ncnt = 0\nwhile cnt < K:\n  if S[ind] == \"o\":\n    late[cnt] = ind\n    cnt += 1\n    ind -= (C + 1)\n  else:\n    ind -= 1\n    \nlate = late[::-1]\n\nans = []\nfor i in range(K):\n  if fast[i] == late[i]:\n    ans += [fast[i] + 1]\n    \nfor a in ans:\n  print(a)", "\ndef main():\n  _n, k, c = list(map(int, input().split()))\n  s = input()\n\n  l = []\n  r = []\n\n  for i, char in enumerate(s):\n    if len(l) >= k:\n      break\n\n    if char == 'o' and (not len(l) or i - l[-1] > c):\n      l.append(i)\n\n  for i, char in reversed(tuple(enumerate(s))):\n    if len(r) >= k:\n      break\n\n    if char == 'o' and (not len(r) or r[-1] - i > c):\n      r.append(i)\n\n  r.reverse()\n\n  for i in range(k):\n    if l[i] == r[i]:\n      print((l[i] + 1))\n\n\nmain()\n", "n,k,c = map(int,input().split())\ns = input()\ncnt = 0\ne = 0\nl = []\nfor i,si in enumerate(s):\n  if e == k:\n    break\n  if cnt > 0:\n    cnt -= 1\n    continue\n  if si == 'o':\n    l.append(i+1)\n    cnt = c\n    e += 1\n  \nr = []\ncnt = 0\nd = 0\nfor i,si in enumerate(s[::-1]):\n  if d == k:\n    break\n  if cnt > 0:\n    cnt -= 1\n    continue\n  if si == 'o':\n    r.append(n-i)\n    cnt = c\n    d += 1\n    \nfor i in range(k):\n  if l[i] == r[k-1-i]:\n    print(l[i])", "n, k, c = list(map(int, input().split()))\ns = input()\n\n\ncnt0 = [-10**10] * len(s)\ncnt1 = [-10**10] * len(s)\nrest0 = c\nrest1 = c\nct0 = 1\nct1 = 1\nfor i in range(len(s)):\n    a = s[i]\n    b = s[len(s) - 1 - i]\n    if (c <= rest0) & (a == 'o'):\n        cnt0[i] = ct0\n        ct0 += 1\n        rest0 = 0\n    else:\n        rest0 += 1\n    if (c <= rest1) & (b == 'o'):\n        cnt1[len(s) - 1 - i] = ct1\n        ct1 += 1\n        rest1 = 0\n    else:\n        rest1 += 1\nfor i in range(len(s)):\n    if (cnt0[i] + cnt1[i] == k+1):\n        print((i+1))\n", "N, K, C = list(map(int, input().split()))\nS = input()\n\nwork_day_min = []\nwork_day_max = []\n\nfor i in range(N):\n    if S[i] == 'o':\n        if i > 0 and len(work_day_min) > 0:\n            if i - work_day_min[-1] <= C:\n                continue\n        work_day_min.append(i)\n    if len(work_day_min) == K:\n        break\n\nfor i in range(N):\n    if S[N - i - 1] == 'o':\n        if i > 0 and len(work_day_max) > 0:\n            if work_day_max[-1] - (N - i - 1) <= C:\n                continue\n        work_day_max.append(N - i - 1)\n    if len(work_day_max) == K:\n        break\n\nfor i in range(K):\n    if work_day_min[i] == work_day_max[K-i-1]:\n        print(work_day_min[i]+1)", "# E - Yutori\nN,K,C = map(int,input().split())\nS = input()\nL = [0]*K\nR = [0]*K\n\ni = 0\nfor j in range(K):\n    while S[i]!='o':\n        i += 1\n    L[j] = i\n    i += C+1\n\ni = N-1\nfor j in range(K-1,-1,-1):\n    while S[i]!='o':\n        i -= 1\n    R[j] = i\n    i -= C+1\n    \nfor j in range(K):\n    if L[j]==R[j]:\n        print(L[j]+1)", "N, K, C = list(map(int, input().split()))\nS = input()\n\nL = [0] * K\ni = 0\nx = 0\nwhile i<K and x<N:\n    if S[x] == 'o':\n        L[i] = x\n        i += 1\n        x += C+1\n    else:\n        x += 1\n\nR = [0] * K\ni = K-1\nx = N-1\nwhile i>=0 and x>=0:\n    if S[x] == 'o':\n        R[i] = x\n        i -= 1\n        x -= C+1\n    else:\n        x -= 1\n\nans = []\nfor i in range(K):\n    if L[i] == R[i]:\n        ans.append(L[i])\nfor a in ans:\n    print((a+1))\n", "N, K, C = [int(_) for _ in input().split()]\nS = input()\ncand = [i + 1 for i, s in enumerate(S) if s == 'o']\nF = [[cand[0]]]\nfor c in cand[1:]:\n    if c - F[-1][0] > C:\n        F += [[]]\n    F[-1] += [c]\nif len(F) > K:\n    return\nB = [[cand[-1]]]\nfor c in cand[-2::-1]:\n    if B[-1][0] - c > C:\n        B[-1] = B[-1][::-1]\n        B += [[]]\n    B[-1] += [c]\nB = B[::-1]\nB[0] = B[0][::-1]\nans = []\nfor f, b in zip(F, B):\n    if len(f) == 1 or f[1] not in b:\n        ans += [f[0]]\nprint(('\\n'.join(map(str, ans))))\n", "def main():\n  N, K, C=list(map(int, input().split()))\n  S = input()\n\n  R=[0]*K\n  n, k=N-1, 0\n  while k < K:\n    if S[n]=='o':\n      R[k]=n+1\n      k+=1\n      n -= C\n    n-=1\n  R=R[::-1]\n  \n  n, k=0, 0\n  while k < K:\n    if S[n]=='o':\n      if n+1 == R[k]:\n        print((n+1))\n      k+=1\n      n += C\n    n+=1\n  #print(L)\n  \n\n  \ndef __starting_point():\n  main()\n\n__starting_point()", "N,K,C = map(int,input().split())\nS = list(str(input()))\n\nL = []###i+1\u56de\u76ee\u306b\u50cd\u304f\u306e\u306fL[i]\u65e5\u76ee\u4ee5\u964d\nR = []###i+1\u56de\u76ee\u306b\u50cd\u304f\u306e\u306fL[i]\u65e5\u76ee\u4ee5\u524d\n\nfor i in range(N):\n    if len(L) >= K:\n        break\n    if S[i] ==\"o\" and (L==[] or (i+1) - L[-1] > C):\n        L.append(i+1)\n\nfor i in range(N-1,-1,-1):\n    if len(R) >= K:\n        break\n    if S[i] == \"o\" and (R==[] or R[-1] - (i+1) > C):\n        R.append(i+1)\n\nR.reverse()###R\u306f\u9006\u9806\u306bappend\u3057\u305f\u306e\u3067reverse\nans = []\n\nfor i in range(K):\n    if L[i] == R[i]:\n        ans.append(L[i])\n\n\n###\n#print(L)\n#print(R)\n###\nfor i in range(len(ans)):\n    print(ans[i])", "n , k , c = map(int,input().split())\n\ns = input()\n\nL = []\nR = []\n\ni = 0\nj = n-1\n\n\n\nwhile i<n and len(L)<k :\n    if s[i] == \"o\" :\n        L.append(i)\n        i += c\n    i += 1\n\nwhile j>-1 and len(R)<k :\n    if s[j] == \"o\" :\n        R.append(j)\n        j -= c\n    j -= 1\n\nR.reverse()\n\nfor x in range(k):\n    if R[x] == L[x]:\n        print(R[x]+1)", "from collections import deque\nimport copy\n\nN, K, C = list(map(int,input().split()))\nS = input().split()[0]\nTW = 0\nq = []\n\nfor s in range(len(S)):\n    if S[s] == 'o':\n        q.append(s+1)\n\nWD = []\nLD = 0\n\nfor s in q:\n    if len(WD) > K:\n        break\n    if LD == 0:\n        WD.append(s)\n        LD = s\n    elif s-LD <= C:\n        continue\n    else:\n        WD.append(s)\n        LD = s\n\n\nWDR = []\nLD = 0\nq.reverse()\n\nfor s in q:\n    if len(WDR) > K:\n        break\n    if LD == 0:\n        WDR.append(s)\n        LD = s\n    elif LD - s <= C:\n        continue\n    else:\n        WDR.append(s)\n        LD = s\n\n\nfor d in range(len(WD)):\n    if WD[d] == WDR[len(WD)-d-1]:\n        print((WD[d]))\n\n", "n,k,c=list(map(int,input().split()))\ns=input()\nl=[0]*n\npre=n+c+1\ncnt=k\nfor i in range(n-1,-1,-1):\n    if s[i]==\"o\" and -(i)+pre>c and cnt>0:\n        pre=i\n        l[i]=cnt\n        cnt-=1\npre=-c-5\ncnt=0\nfor i in range(n):\n    if s[i]==\"o\" and i-pre>c and cnt<k:\n        pre=i;cnt+=1\n        if l[i]==cnt:print((i+1))\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    n,k,c = map(int, input().split())\n    s = input().rstrip()\n    left = [0]*n\n    day = 0\n    temp = 1\n    while day < n:\n        if s[day] == 'o':\n            left[day] = temp\n            temp += 1\n            day += c\n        day += 1\n\n    right = [0]*n\n    day = n-1\n    temp = k\n    while 0 <= day:\n        if s[day] == 'o':\n            right[day] = temp\n            temp -= 1\n            day -= c\n        day -= 1\n\n    for i in range(n):\n        if left[i] == right[i] and left[i] != 0:\n            print(i+1)\n\ndef __starting_point():\n    main()\n__starting_point()", "n,k,c=list(map(int,input().split()))\ns=input()\nleft=[k+1]*n\nright=[k+1]*n\nl,r=1,1\ni=0\nwhile i<n:\n    if s[i]=='o':\n        left[i]=l\n        l+=1\n        i+=c\n    i+=1\ni=1\nwhile i<n+1:\n    if s[-i]=='o':\n        right[-i]=r\n        r+=1\n        i+=c\n    i+=1\nfor i in range(n):\n    if left[i]+right[i]==k+1:\n        print((i+1))\n", "def do_solve(n, k, c, s):\n    dp = [0 for i in range(n)]\n    for i in range(n):\n        dp[i] = 1 if s[i] == 'o' else 0\n        if i - c - 1 >= 0:\n            dp[i] = max(dp[i], dp[i - c - 1] + 1 if s[i] == 'o' else 0)\n        if i - 1 >= 0:\n            dp[i] = max(dp[i], dp[i - 1])\n    return dp\n\ndef solve(n, k, c, s):\n    dp1 = do_solve(n, k, c, s)\n    dp2 = do_solve(n, k, c, s[::-1])[::-1]\n\n    # print dp1\n    # print dp2\n\n    res = []\n    for i in range(n):\n        if s[i] == 'x':\n            continue\n        l = dp1[i - 1] if i - 1 >= 0 else 0\n        r = dp2[i + 1] if i + 1 < n else 0\n\n        # print i, l, r\n\n        if l + r == k - 1:\n            res.append(i + 1)\n    # print res\n    return res\n\nassert solve(16, 4, 3, 'ooxxoxoxxxoxoxxo') == [11, 16]\nassert solve(11, 3, 2, 'ooxxxoxxxoo') == [6]\nassert solve(5, 1, 0, 'ooooo') == []\nassert solve(5, 2, 3, 'ooxoo') == [1, 5]\n\n(n, k, c) = list(map(int, input().split()))\ns = input().strip()\n\nfor num in solve(n, k, c, s):\n    print(num)\n\n", "def main():\n    n, k, c = (int(i) for i in input().split())\n    s = input()\n\n    if k > sum(1 for c in s if c == 'o'):\n        return\n\n    latest = [None] * k\n    earliest = [None] * k\n    earliest[0] = s.index('o')\n    for i in range(1, k):\n        try:\n            earliest[i] = s.index('o', earliest[i-1] + c + 1)\n        except ValueError:\n            return\n    \n    latest[-1] = s.rindex('o')\n    for i in reversed(list(range(k-1))):\n        try:\n            latest[i] = s.rindex('o', 0, latest[i+1] - c)\n        except ValueError:\n            return\n\n    bound_days = [earliest[i] + 1 for i in range(k) if earliest[i] ==\n            latest[i]]\n\n    for e, l in zip(earliest, latest):\n        if e == l:\n            print((e + 1))\nmain()\n", "N, K, C = list(map(int, input().split()))\nS = input().strip(\"\\n\")\n\nL = [-1] * N\nR = [10 ** 10] * N\n\nl = 1\nr = K\nli = 0\nri = N-1\nwhile li < N:\n    if S[li] == \"o\":\n        L[li] = l\n        l += 1\n        li += C + 1\n    else: li += 1\n\nwhile ri >= 0:\n    if S[ri] == \"o\":\n        R[ri] = r\n        r -= 1\n        ri -= C + 1\n    else: ri -= 1\n\n\nfor i in range(N):\n    if L[i] == R[i]: print((i + 1))\n\n", "n, k, c = map(int, input().split())\ns = input()\n\n# num \u56de\u76ee\u306b\u50cd\u304f\u65e5\u306f l[num-1] \u65e5\u76ee\u4ee5\u964d\nl = []\nnum = 0 # num = len(l)\ni = 0\nwhile num < k:\n    if s[i] == 'o':\n        l.append(i)\n        num += 1\n        i += c + 1\n    else:\n        i += 1\n\n# num \u56de\u76ee\u306b\u50cd\u304f\u65e5\u306f l[num-1] \u65e5\u76ee\u4ee5\u524d\nr = []\nnum = 0 # num = len(r)\ni = n - 1\nwhile num < k:\n    if s[i] == 'o':\n        r.append(i)\n        num += 1\n        i -= c + 1\n    else:\n        i -= 1\nr.reverse()\n\nfor i in range(k):\n    if l[i] == r[i]:\n        print(l[i] + 1)", "n,k,c = map(int,input().split())\ns = [i == \"o\" for i in list(input())]\ni = 0\ncnt = 0\nl = [0]*n\nr = [0]*n\nwhile i < n:\n    if s[i]:\n        cnt += 1\n        for j in range(i,c+i+1):\n            if j < n:\n                l[j] = cnt\n        i += c+1\n    else:\n        l[i] = cnt\n        i += 1\ni = n-1\ncnt = 0\nwhile i >= 0:\n    if s[i]:\n        cnt += 1\n        for j in range(i,i-1-c,-1):\n            if j >= 0:\n                r[j] = cnt\n        i -= c+1\n    else:\n        r[i] = cnt\n        i -= 1\n#print(l,r)\nr.append(0)\nif r[1] < k:\n    print(1)\nfor i in range(1,n-1):\n    if not s[i]:\n        continue\n    if l[i-1] + r[i+1] < k:\n        print(i+1)\nif l[n-2] < k:\n    print(n)", "N, K, C = map(int, input().split())\nS = input()\n\ndef get_positions():\n    res = []\n    i = 0\n    while i < N and len(res) < K:\n        if S[i] == \"o\":\n            res.append(i)\n            i = i + C + 1\n        else:\n            i += 1\n    return res\n\nl = get_positions()\nS = S[::-1]\nr = get_positions()\nfor i in range(K):\n    r[i] = N - 1 - r[i]\nS = S[::-1]\n\nlastl = [-1] * (N + 1)\nfor i in range(K):\n    lastl[l[i] + 1] = i\nfor i in range(N):\n    if lastl[i + 1] == -1:\n        lastl[i + 1] = lastl[i]\n\nlastr = [-1] * (N + 1)\nfor i in range(K):\n    lastr[r[i]] = i\nfor i in range(N-1, -1, -1):\n    if lastr[i] == -1:\n        lastr[i] = lastr[i + 1]\n\nfor i in range(N):\n    if S[i] == \"x\":\n        continue\n    li = lastl[i]\n    ri = lastr[i + 1]\n    cnt = 0\n    if li != -1:\n        cnt += (li + 1)\n    if ri != -1:\n        cnt += (ri + 1)\n    if li != -1 and ri != -1 and r[ri] - l[li] <= C:\n        cnt -= 1\n\n    if cnt >= K:\n        continue\n    print(i + 1)", "N,K,C=map(int,input().split())\nS=input()\nday=[]\nfor i in range(len(S)):\n  if S[i]=='o':\n    day.append(i+1)\nE=[day[0]]    \ncur=day[0]\nfor i in range(1,len(day)):\n  if day[i]>=cur+C+1:\n    cur=day[i]\n    E.append(cur)\nF=[day[len(day)-1]]\ncur=day[len(day)-1]\nfor i in range(len(day)-1,-1,-1):\n  if day[i]<=cur-C-1:\n    cur=day[i]\n    F.append(cur)\nif len(E)>K:\n  while len(E)>K:\n    E.pop()\nif len(F)>K:  \n  while len(F)>K:\n    F.pop()\nF.reverse()\n\nfor i in range(K):\n  if E[i]==F[i]:\n    print(E[i])", "#!/usr/bin/env python3\n# coding: utf-8\n\n# def debug(arg):\n#     if __debug__:\n#         pass\n#     else:\n#         import sys\n#         print(arg, file=sys.stderr)\n        \ndef main():\n    N, K, C = map(int, input().split())\n    S = dict(enumerate(str(input()), 1))\n\n    sr = list(k for k, v in S.items() if v == 'o')\n    sl = list(reversed(sr.copy()))\n\n    l = [sl.pop()]\n    r = [sr.pop()]\n    \n    for x in range(1, K):\n        while True:\n            ll = sl.pop()\n            if ll > l[x - 1] + C:\n                l.append(ll)\n                break\n        while True:\n            rr = sr.pop()\n            if rr < r[x - 1] - C:\n                r.append(rr)\n                break\n\n    for ll, rr in zip(l, reversed(r)):\n        if ll == rr:\n            print(ll)\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n# input = sys.stdin.readline\nsys.setrecursionlimit(10 ** 9)\nMOD = 10 ** 9 + 7\n\nN, K, C = map(int, input().split())\nS = list(input())\n\nmae = [-1] * N\ni = 0\ncount = 0\nwhile i < N and count < K:\n    if S[i] == 'o':\n        mae[i] = count\n        count += 1\n        i += C + 1\n    else:\n        i += 1\n\nushiro = [-1] * N\ni = N - 1\ncount = 0\nwhile i >= 0 and count < K:\n    if S[i] == 'o':\n        ushiro[i] = K - count - 1\n        count += 1\n        i -= (C + 1)\n    else:\n        i -= 1\n\nfor i in range(N):\n    if mae[i] == ushiro[i] and mae[i] != -1:\n        print (i + 1)", "N,K,C=map(int,input().split())\nS=input()\ni=0\nd1=[-1]*N\nfor k in range(K):\n    while S[i]=='x' and i<N:\n        i+=1\n    if i==N:break\n    d1[i]=k\n    i+=C+1\ni=0\nd2=[-1]*N\nfor k in range(K-1,-1,-1):\n    while S[N-1-i]=='x' and i<N:\n        i+=1\n    if i==N:break\n    d2[N-1-i]=k\n    i+=C+1\nprint(*[i+1 for i in range(N) if d1[i]==d2[i]>=0],sep='\\n')", "import sys, bisect, math, itertools, string, queue, copy\nimport numpy as np\nimport scipy\nfrom collections import Counter,defaultdict,deque\nfrom itertools import permutations, combinations\nfrom heapq import heappop, heappush\nfrom fractions import gcd\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\nn,k,c = inpm()\ns = input()\n\nsaisoku = [0] * n\nsaioso = [0] * n\n\ni = 0\nwhile i < n:\n    if s[i] == \"x\":\n        i += 1\n        continue\n    saisoku[i] = 1\n    i += c + 1\n\nif saisoku.count(1) > k:\n    return\n\ni = n-1\nwhile i >= 0:\n    if s[i] == \"x\":\n        i -= 1\n        continue\n    saioso[i] = 1\n    i -= c + 1\n\nfor i in range(n):\n    if saisoku[i] == 1 and saioso[i] == 1:\n        print(i + 1)", "n,k,c=list(map(int,input().split()))\ns=input()\nl,r=[],[]\ni=0\nwhile i<n:\n    if s[i]==\"o\":\n        l.append(i)\n        i+=c+1\n    else:\n        i+=1\ni=n-1\nwhile i>-1:\n    if s[i]==\"o\":\n        r.append(i)\n        i-=c+1\n    else:\n        i-=1\nl=l[:k]\nr=r[:k]\nr=r[::-1]\nfor i in range(k):\n    if l[i]==r[i]:\n        print((l[i]+1))\n#print(l)\n#print(r)\n", "INF=10**18\nN,K,C=map(int,input().split())\nS=input()\nleft=[0]*N\nright=[0]*N\nl=-INF\nfor i in range(N):\n    if S[i]=='o':\n        if l==-INF:\n            left[i]=1\n            l=i+C\n        elif l<i:\n            left[i]=max(left[i],left[i-C-1]+1)\n            l=i+C\n        else:\n            left[i]=left[i-1]\n    else:\n        left[i]=left[i-1]\nr=INF\nfor i in reversed(range(N)):\n    if S[i]=='o':\n        if r==INF:\n            right[i]=1\n            r=i\n        elif i<r-C:\n            right[i]=max(right[i],right[i+C+1]+1)\n            r=i\n        else:\n            right[i]=right[(i+1)%N]\n    else:\n        right[i]=right[(i+1)%N]\n\nfor i in range(N):\n    lsum=left[i-1] if i-1>=0 else 0\n    rsum=right[i+1] if i+1<N else 0\n    if lsum+rsum<K:\n        print(i+1)", "N, K, C = map(int, input().split())\nS = list(input())\nS_work = []\ns = []\nf = []\ni = 0\nwhile len(s) < K:\n  if S[i] == \"o\":\n    s.append(i)\n    i += C + 1\n  elif S[i] == \"x\":\n    i += 1\n  elif i == len(S):\n    break\ni = 1\nwhile len(f) < K:\n  if S[N - i] == \"o\":\n    f.append(N - i)\n    i += C + 1\n  elif S[N - i] == \"x\":\n    i += 1\n  elif i == len(S):\n    break\nf.sort()\nfor i in range(K):\n  if s[i] == f[i]:\n    print(s[i] + 1)", "def main():\n    n, k, c = list(map(int,input().split()))\n    s = input()\n    schedule = [w == \"o\" for w in s]\n    left = []\n    l_day = 0\n    right = []\n    r_day = n - 1\n    while len(left) < k:\n        if schedule[l_day]:\n            left.append(l_day)\n            l_day += c\n        l_day += 1\n\n    while len(right) < k:\n        if schedule[r_day]:\n            right.append(r_day)\n            r_day -= c\n        r_day -= 1\n\n    right.reverse()\n\n\n    for i in range(k):\n        if left[i] == right[i]:\n            print((left[i] + 1))\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k,c=map(int,input().split())\ns=input()\nl=list();r=list()\nnex=0\nfor i in range(n):\n\tif i<nex:\n\t\tcontinue\n\tif s[i]==\"o\":\n\t\tnex=i+c+1\n\t\tl.append(i)\n\t\tif len(l)==k:\n\t\t\tbreak\nnex=-1\nfor i in range(n):\n\tif i<nex:\n\t\tcontinue\n\tif s[-i-1]==\"o\":\n\t\tnex=i+c+1\n\t\tr.append(n-i-1)\n\t\tif len(r)==k:\n\t\t\tbreak\nr=r[::-1]\nfor i in range(k):\n\tif l[i]==r[i]:\n\t\tprint(l[i]+1)", "#\nimport sys\nimport math\nimport numpy as np\nimport itertools\n# \u3044\u304f\u3064\u304b\u5165\u529b\nn, k, c = (int(i) for i in input().split())  \n\n# \u6587\u5b57\u5217\u3092\u4e00\u6587\u5b57\u305a\u3064\u306e\u30ea\u30b9\u30c8\u306b\u4ee3\u5165 test \u306f['t', 'e', 's', 't']\nm = list(input())\n\nl=[-1]*n\nr=[-1]*n\n\na=0\nb=c\nfor i in range(n):\n    if b>=c and m[i]=='o':\n        b=0\n        l[a]=i\n        a += 1\n    else:\n        b += 1\n    if a == k:\n        break\na=k-1\nb=c\nfor i in range(n-1,-1,-1):\n    if b>=c and m[i]=='o':\n        b=0\n        r[a]=i\n        a -= 1\n    else:\n        b += 1\n    if a == k:\n        break\n\n\n\nanswer=0\nfor i in range(n):\n    if l[i] == r[i] and l[i]>=0:\n        print((l[i]+1))\n\n\n\n\n", "N,K,C = list(map(int,input().split()))\nS = input()\n\nL = []\nR = []\n\ni = 0\nwhile i < N:\n    if S[i] == \"o\":\n        L.append(i)\n        i += C\n    i += 1\n\nj = N-1\nwhile j >= 0:\n    if S[j] == \"o\":\n        R.append(j)\n        j -= C\n    j -= 1   \n\nfor i in range(K):\n    if L[i] == R[K-1-i]:\n        print((L[i]+1))\n", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n, k, c = list(map(int, input().split()))\n    s = [True if i == 'o' else False for i in input()]\n    L = [0]*k\n    R = [0]*k\n    i = n-1\n    now = k-1\n    while 0 <= now:\n        if s[i]:\n            R[now] = i\n            i -= c\n            now -= 1\n        i -= 1\n    i = 0\n    now = 0\n    while now < k:\n        if s[i]:\n            L[now] = i\n            if L[now] == R[now]:\n                print((i+1))\n            i += c\n            now += 1\n        i += 1\n\n        \n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,k,c = LI()\n    s = S()\n\n    l = set()\n    i = 0\n    while i < n:\n        if s[i] == 'x':\n            i += 1\n        else:\n            l.add(i+1)\n            i += c + 1\n\n    if len(l) > k:\n        return \"\"\n\n    r = set()\n    i = n - 1\n    while i >= 0:\n        if s[i] == 'x':\n            i -= 1\n        else:\n            r.add(i+1)\n            i -= c + 1\n\n    return JA(sorted(l & r), \"\\n\")\n\nprint(main())\n\n\n\n", "N, K, C = list(map(int, input().split()))\nS = input()\nlength = len(S)\n\nINF = float('inf')\nLs = [-INF]\nn = 0\nfor i, c in enumerate(S):\n    if c == 'o' and i - Ls[-1] > C:\n        Ls.append(i)\n        n += 1\n        if n >= K: break\n\nRs = [INF]\nn = 0\nfor i, c in enumerate(reversed(S)):\n    if c == 'o' and Rs[-1] - (length-1-i) > C:\n        Rs.append(length-1-i)\n        n += 1\n        if n >= K: break\nRs.reverse()\n\nfor l, r in zip(Ls[1:], Rs[:-1]):\n    if l == r:\n        print((l+1))\n"]