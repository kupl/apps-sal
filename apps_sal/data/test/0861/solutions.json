["import math\nm,R=list(map(int,input().split()))\n\ncord=math.sqrt(2*(R**2))\nans=0\nunit=int(2*R)\nx=(m)*(m/2)\nfor i in range(m):\n    ans+=2*R*m\n    ans+=(cord*(m-1))\n    if(i==0 or i==m-1):\n        if(m==1):\n            continue\n        ans+=cord*(m-2)\n    else:\n        if(m==1):\n            continue\n        ans+=cord*(m-3)\n    #left\n    left=(i-1)-1\n    if(left<-1):\n        left=-1\n    ans+=(left+1)*(left/2)*unit\n    #right\n    r=(m-1)-(i)-2\n    if(r<-1):\n        r=-1\n    ans+=(r+1)*(r/2)*unit\nans/=(m**2)\nprint(ans)\n", "m,R = [int(x) for x in input().split()]\n\nif m == 1:\n    print(2*R)\nelse:\n    tot = 0\n    for i in range(m):\n        tot += 2\n        if i == 0 or i == m-1:\n            tot += 2+2**.5\n            tot += (m-2)*(m-1)\n            tot += 2*2**.5*(m-2)\n        else:\n            tot += 4+2*2**.5\n            tot += i*(i-1)\n            tot += (m-i-1)*(m-i-2)\n            tot += 2*2**.5*(m-3)\n        #print(i,tot)\n    tot *= R\n    tot /= m*m\n    print(tot)\n\n##print(\n##print(R*(2+(1+2**.5+(2*m-1)/3)*(m-1))/m)\n##print(R*(1+m+m*2**.5-2**.5+(2*m*m/3)-m+1/3)/m)\n##print(R*(1/m+2**.5-(2**.5)/m+2*m/3+1/3))\n##print(R/m+R*2**.5-(R*2**.5)/m+2*R*m/3+R/3)\n", "m,R=map(int, input().split())\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)", "m, r = list(map(int, input().split()))\n\ndef calc(k):\n    nonlocal r\n    if k < 1:\n        return 0\n    elif k == 1:\n        return r * (2**0.5 + 2)\n    else:\n        return r * ((1 + 2 * (k - 1)) * 2**0.5 + k * 2 + (k - 1) * (k - 2))\n\navg = 0\ndiv = m ** 2\n\nfor i in range(0, m):\n    avg += (2 * r + calc(i) + calc(m - 1 - i)) / div\n \nprint(avg)\n", "m, r = list(map(int, input().split()))\n\ndef calc(k):\n    if k < 1:\n        return 0\n    else:\n        return (1 + 2 * (k - 1)) * 2**0.5 + k * 2 + (k - 1) * (k - 2)\n\navg = 0\ndiv = m ** 2\n\nfor i in range(0, m):\n    avg += r * (2 + calc(i) + calc(m - 1 - i)) / div\n \nprint(avg)\n", "import math\nm,R=map(int,input().split())\ncord=math.sqrt(2*(R**2))\nli=0\nunit=int(2*R)\nx=(m)*(m/2)\nfor i in range(m):\n    li+=2*R*m\n    li+=(cord*(m-1))\n    if(i==0 or i==m-1):\n        if(m==1):\n            continue\n        li+=cord*(m-2)\n    else:\n        if(m==1):\n            continue\n        li+=cord*(m-3)\n    left=(i-1)-1\n    if(left<-1):\n        left=-1\n    li+=(left+1)*(left/2)*unit\n    r=(m-1)-(i)-2\n    if(r<-1):\n        r=-1\n    li=li+(r+1)*(r/2)*unit\nli/=(m**2)\nprint(li)", "import math\n\nm,R = list(map (int,input().split()))\n\nD = math.sqrt (2) * R\nresult = 0\n\ndef sum_dist (n):\n  return n*(n+1)*R + 2*D*n\n\nfor i in range (1,m+1):\n  result += 2*R\n  if i-1   > 0: result += 2*R + D\n  if m-i   > 0: result += 2*R + D\n  if i-2   > 0: result += sum_dist (i-2)\n  if m-i-1 > 0: result += sum_dist (m-i-1)\n\nprint(result / m / m)\n", "import math\n\nm,R = map (int,input().split())\n\nD = math.sqrt (2) * R\nresult = 0\n\ndef sum_dist (n):\n  return n*(n+1)*R + 2*D*n\n\nfor i in range (1,m+1):\n  result += 2*R\n  if i-1   > 0: result += 2*R + D\n  if m-i   > 0: result += 2*R + D\n  if i-2   > 0: result += sum_dist (i-2)\n  if m-i-1 > 0: result += sum_dist (m-i-1)\n\nprint (result / m / m)", "m, r = map(int, input().split())\nprint(2 * r * (m + (2 + 2 ** 0.5) * (m - 1) + (m - 1) * (m - 2) * (m / 3 + 2 ** 0.5)) / (m * m))", "#!/usr/bin/env python3\nfrom math import sqrt\nm, r = list(map(int,input().split()))\nacc = 0.0\nfor i in range(m):\n    acc += 2*r\n    for j in [i,m-i-1]:\n        if j:\n            acc += (2 + sqrt(2)) * r\n            acc += (2*(j-1)*j/2 + 2*sqrt(2)*(j-1)) * r\nprint('%.12f' % (acc/(m**2)))\n", "m,R=map(int, input().split())\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m,R=list(map(int, input().split()))\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n", "m, r = list(map(int, input().split()))\n\nanswer = 0\nfrom math import sqrt\n\n\ndef fef(vev):\n    if vev == 0:\n        return 0\n    if vev <= 1:\n        return 2 * r + sqrt(2) * r\n    curr =  2 * r + sqrt(2) * r\n    curr += (vev - 1) * (2 * r + sqrt(2)  *2 * r)\n\n    curr += r * (vev - 1) * (vev - 2)\n    return curr\n\n\n\nfor i in range(m):\n    answer += fef(i)\n    answer += fef(m - 1- i)\n    answer += 2 * r\n\nprint(answer / (m ** 2))\n", "m,R=list(map(int, input().split()))\n\nprint((2*m/3-2+22/m/3-4/m/m+2**.5*(2-4/m+2/m/m))*R)\n\n\n\n# Made By Mostafa_Khaled\n", "m, r = list(map(int, input().split()))\nres, sq2 = 0, (2**.5)\nfor i in range(1, m):\n    res += 2 + sq2 + 2 * sq2 * (i-1) + (i-1) * i\nres = (res + m) * 2 * r\nprint(res / (m * m))\n"]