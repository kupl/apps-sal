["m,p,c=0,0,0\ns=(input())\nfor i in  s:\n    if i=='-':\n        c-=1\n    else:\n        c+=1    \n    m=min(m,c)\n    p=max(p,c)\nprint(p-m)\n", "import math\nimport re\nfrom fractions import Fraction\nfrom collections import Counter\n\nclass Task:\n    signs = ''\n    answer = 0\n    \n    def __init__(self):\n        self.signs = input()\n\n    def solve(self):\n        counter = 0\n        leftBound, rightBound = 0, 0\n        for x in self.signs:\n            counter += 1 if x == '+' else -1\n            leftBound = min(leftBound, counter)\n            rightBound = max(rightBound, counter)\n        self.answer = rightBound - leftBound\n\n    def printAnswer(self):\n        print(self.answer)\n\ntask = Task()\ntask.solve()\ntask.printAnswer()\n", "3\n\ninside = outside = 0\nfor c in list(input()):\n    if c == '+':\n        if outside:\n            outside -= 1\n        inside += 1\n    else:\n        if inside:\n            inside -= 1\n        outside += 1\nprint(inside + outside)\n", "p = [0] + [1 if i == '+' else -1 for i in input()]\nfor i in range(1, len(p)):\n    p[i] += p[i - 1]\nprint(max(p) - min(p))", "s=input()\nn=len(s)\nx,a,b=0,0,0\nfor i in range(n):\n  if s[i]=='-':\n    x-=1\n  else:\n    x+=1\n  a = min(a,x)\n  b = max(b,x)\nprint(b-a)", "a = [1 if x == '+' else -1 for x in input()]\nb = list(map(lambda i : sum(a[0:i]), range(len(a) + 1)))\nprint(max(b) - min(b))", "def puts(s):\n    print(s, end='')\n\ns = input()\na = mi = ma = 0\n\nfor c in s:\n    if(c == '+'):\n        a = a + 1\n        ma = max(ma, a)\n    else:\n        a = a - 1\n        mi = min(mi, a)\n\nprint(ma - mi)", "inp=input()\ninclb=0\noutclb=0\nseen=0\ni=0\nfor i in range(0,len(inp)):\n if inp[i] == \"-\":\n  outclb += 1\n  if inclb > 0:\n   inclb -= 1\n  else:\n   seen += 1\n else:\n  inclb += 1\n  if outclb > 0:\n   outclb -= 1\n  else:\n   seen += 1\nprint(seen)", "c, v1, v2 = 0, 0, 0\nfor ch in input():\n    c += 1 if ch == '+' else -1\n    v1, v2 = min(v1, c), max(v2, c)\nprint(v2 - v1)\n", "s = input()\nlow = 0\nhigh = 0\nsum = 0\nfor i in s:\n    if i == '+':\n        sum += 1\n    else:\n        sum -= 1\n    if sum < low:\n        low = sum\n    if sum > high:\n        high = sum\nprint(high - low)", "#!/usr/bin/env python3\n\n\n\n\ndef main():\n    s = input()\n    cnt = 0\n    ans = 0\n    for x in s:\n        if x == '+':\n            cnt += 1\n            ans = max(ans, cnt)\n        else:\n            if cnt == 0:\n                ans += 1\n            else:\n                cnt -= 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = input()\n\nans = 0\np, n = 0, 0\nfor i in range( len( S ) ):\n  if S[ i ] == '+':\n    p += 1\n    n -= 1\n  else:\n    n += 1\n    p -= 1\n  n = max( 0, n )\n  p = max( 0, p )\n  ans = max( ans, max( n, p ) )\n\nprint( ans )\n", "s = input()\nmx = 0\nmn = 0\ncur = 0\nfor i in s:\n  if i == '+':\n    cur += 1\n  else:\n    cur -= 1\n  mx = max(mx,cur)\n  mn = min(mn,cur)\nprint(abs(mx-mn))", "s = input()\nt = mx = 0\nfor i in s:\n    if i == '-' and t > 0:\n        t -= 1\n    elif i == '+':\n        t += 1\n        mx = max(mx, t)\n    else:\n        mx += 1\nprint(mx)", "s=input()\na,b=0,0\nfor i in range(len(s)):\n\tif(s[i]=='-'):\n\t\ta=a-1\n\t\tif a<b:\n\t\t\tb=a\n\telse:\n\t\ta=a+1\na=-b\nans=a\nfor i in range(len(s)):\n\tif(s[i]=='-'):\n\t\ta=a-1 \n\telse:\n\t\ta=a+1\n\tif a>ans:ans=a\nprint(ans)", "s = input()\nplus = 0\nminus = 0\nseen = 0\nfor letter in s:\n    if letter == '+':\n        if minus == 0:\n            plus += 1\n            seen += 1\n        else:\n            plus += 1\n            minus -= 1\n    else:\n        if plus == 0:\n            minus += 1\n            seen += 1\n        else:\n            minus += 1\n            plus -= 1\n\nprint(seen)", "s = input()\ninside= 0\noutside = 0\nseen = 0\nfor letter in s:\n    if letter == '+':\n        if outside == 0:\n            inside += 1\n            seen += 1\n        else:\n            inside += 1\n            outside -= 1\n    else:\n        if inside == 0:\n            outside += 1\n            seen += 1\n        else:\n            outside += 1\n            inside -= 1\n\nprint(seen)", "s=input()\ns=list(s)\ns1=[0]*len(s)\nfor i in range(len(s)):\n    if s[i]=='-':\n        s[i]=1\n        s1[i]=-1 \n    else:\n        s[i]=-1 \n        s1[i]=1 \ndef kadane(s):\n    maxi=-1 \n    curr=0 \n    for i in s:\n        curr=max(curr+i,i)\n        maxi=max(maxi,curr)\n    return maxi \nprint(max(kadane(s),kadane(s1)))\n", "s=input()\ns=list(s)\ns1=[0]*len(s)\nfor i in range(len(s)):\n    if s[i]=='-':\n        s[i]=1\n        s1[i]=-1 \n    else:\n        s[i]=-1 \n        s1[i]=1 \ndef kadane(s):\n    maxi=-1 \n    curr=0 \n    for i in s:\n        curr=max(curr+i,i)\n        maxi=max(maxi,curr)\n    return maxi \nprint(max(kadane(s),kadane(s1)))\n#@print(kadane(s))\n", "s = input()\np = 0\nm = 0\n\nfor i in s:\n  if i == \"+\":\n    p += 1\n    m = max(m-1, 0)\n  elif i == \"-\":\n    m += 1\n    p = max(p-1, 0)\nprint(p+m)\n", "s = list(input())\nans = 0\nwhile s.count('+') != 0 and s.count('-') != 0:\n    flag = 0\n    ans += 1\n    if s.index('+') < s.index('-'):\n        s[s.index('+')] = 0\n        for i in range(1, len(s)):\n            if flag == 0 and s[i] == '-':\n                flag = 1\n                s[i] = 0\n            elif flag == 1 and s[i] == '+':\n                flag = 0\n                s[i] = 0\n    elif s.index('-') < s.index('+'):\n        s[s.index('-')] = 0\n        for i in range(1, len(s)):\n            if flag == 0 and s[i] == '+':\n                flag = 1\n                s[i] = 0\n            elif flag == 1 and s[i] == '-':\n                flag = 0\n                s[i] = 0\nprint(max(ans + s.count('+'), ans + s.count('-')))\n", "s=input()\nans=a1=a2=0\nfor i in s:\n    if i=='+':\n        ans+=1\n    else:\n        ans-=1\n    a1=max(a1,ans)\n    a2=min(a2,ans)\nprint(a1+abs(a2))            ", "l=list(input())\nj=0\nc=0\nk=0\nl1=0\ne=0\np=0\nwhile(j<len(l)):\n    if(l[j]=='+'):\n        p+=1\n        k+=1\n    else:\n    \n        l1+=1\n        if(k>=e):\n            c+=(k-e)\n            e=k\n            \n        k-=1\n        if(l1>p):\n            l1-=1\n            c+=1\n        \n        \n            \n       \n    j+=1\nif(k>e):\n    c+=k-e\n\nprint(c)\n        \n        \n", "s = input()\n\nd, f, r = 0, 0, 0\nfor c in s:\n    if c == \"-\":\n        f += 1\n        if d >= 1:\n            d -= 1\n        else:\n            r += 1\n    elif c == \"+\":\n        d += 1\n        if f >= 1:\n            f -= 1\n        else:\n            r += 1\n\nprint(r)", "def solve(s):\n\tn = len(s)\n\tif(n == 1):\n\t\treturn 1\n\telse:\n\t\tstart = 0\n\t\tprev = s[0]\n\t\tans = 0\n\t\tf = 1\n\t\tfor i in range(1,n):\n\t\t\tf = 1\n\t\t\tif(s[i] == prev):\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tf = 0\n\t\t\t\tans = max(ans,i-start)\n\t\t\t\tstart = i\n\t\t\t\tprev = s[i]\n\t\t\t\t# print(ans)\n\t\tif(f):\n\t\t\tans = max(ans,n-start)\n\t\t\tstart = i\n\t\t\tprev = s[i]\n\t\treturn ans\n\ndef solve1(s):\n\tst = []\n\tans = 0\n\tmaxx = 0\n\tfor i in s:\n\t\tif(st):\n\t\t\tans = 0\n\t\tif(i == '+'):\n\t\t\tst.append('+')\n\t\telse:\n\t\t\tif(st):\n\t\t\t\tst.pop()\n\t\t\telse:\n\t\t\t\tans += 1\n\t\t\t\tmaxx = max(maxx,ans)\n\t\tmaxx = max(maxx,len(st))\n\t\t# print(st)\n\tmaxx = max(maxx,len(st))\n\treturn maxx\n\ndef solve2(s):\n\tst = []\n\tans = 0\n\tmaxx = 0\n\tfor i in s:\n\t\tif(st):\n\t\t\tans = 0\n\t\tif(i == '-'):\n\t\t\tst.append('-')\n\t\telse:\n\t\t\tif(st):\n\t\t\t\tst.pop()\n\t\t\telse:\n\t\t\t\tans += 1\n\t\t\t\tmaxx = max(maxx,ans)\n\t\tmaxx = max(maxx,len(st))\n\t\t# print(st)\n\tmaxx = max(maxx,len(st))\n\treturn maxx\n\nl = input()\nans = solve(l)\nans1 = solve1(l)\nans2 = solve2(l)\nprint(max(ans,ans1,ans2))\n\n\n"]