["from itertools import groupby\n\ns = input()\nn = len(s)\n\nif \"w\" in s or \"m\" in s:\n\tprint(\"0\")\n\treturn\n\nmod = 10**9+7\nfib = [1, 1]\nfor i in range(2, n+1):\n\tfib.append((fib[-1]+fib[-2])%mod)\n\nres = 1\n\nfor k, g in groupby(s):\n\tif k==\"u\" or k==\"n\":\n\t\tl = len(list(g))\n\t\tres *= fib[l]\n\t\tres %= mod\n\nprint(res)", "3\n\nimport array\nfrom fractions import Fraction\nimport functools\nimport itertools\nimport math\nimport os\nimport sys\n\n\ndef main():\n    S = inp()\n    print(solve(S))\n\n\nMOD = 10 ** 9 + 7\n\n\ndef solve(S):\n    N = len(S)\n    fib = [0] * (N + 1)\n    fib[0] = fib[1] = 1\n    for i in range(2, N + 1):\n        fib[i] = (fib[i - 2] + fib[i - 1]) % MOD\n\n    i = 0\n    ans = 1\n    while i < N:\n        c = S[i]\n        if c == 'm' or c == 'w':\n            return 0\n        if c != 'u' and c != 'n':\n            i += 1\n            continue\n        j = i\n        while j < N and S[i] == S[j]:\n            j += 1\n        ans *= fib[j - i]\n        ans %= MOD\n        i = j\n\n    return ans\n\n\n###############################################################################\n# AUXILIARY FUNCTIONS\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import *\n\ns=input()\npos=[1]\nfor i in range(len(s)):\n    c=s[i]\n    if c=='m' or c=='w':\n        pos[-1]=0\n        break\n    if c=='u' and i>0 and s[i-1]=='u':\n        pos.append(pos[-1]+pos[-2])\n    elif c=='n' and i>0 and s[i-1]=='n':\n        pos.append(pos[-1]+pos[-2])\n    else:\n        pos.append(pos[-1])\n    pos[-1]%=1000000007\nprint(pos[-1])", "# import sys\n# input = sys.stdin.readline\ns = input()\nn = len(s)\nA = []\nmod = 10**9+7\n\n\nL = [0,1,2]\nfor i in range(10**5+3):\n    L.append((L[-1]+L[-2]) % mod)\n\nnn=0\nuu=0\n\nfor i in range(n):\n    if s[i] == \"n\":\n        if nn == 0:\n            nn = 1\n            A.append(1)\n        else:\n            A[-1] += 1\n    else:\n        nn = 0\n    if s[i] == \"u\":\n        if uu == 0:\n            uu = 1\n            A.append(1)\n        else:\n            A[-1] += 1\n    else:\n        uu = 0\n\nans = 1\nfor i in range(len(A)):\n    ans = (ans * L[A[i]]) % mod\n\nif s.count(\"m\") > 0 or s.count(\"w\") > 0:\n    ans = 0\nprint(ans)", "s=input()\nif \"m\" in s or \"w\" in s:\n    print(0)\n    quit()\nFib=[1,1]\nMOD=int(1e9+7)\nfor i in range(100000):\n    Fib.append((Fib[-1]+Fib[-2])%MOD)\nans=1\nl='.'\ncnt=0\nfor i in s:\n    if i==l:\n        cnt+=1\n    else:\n        if l=='u' or l=='n':\n            ans=(ans*Fib[cnt])%MOD\n        l=i\n        cnt=1\nif l=='u' or l=='n':\n    ans=(ans*Fib[cnt])%MOD\nprint(ans)", "S = '*' + input()\n\nif 'm' in S or 'w' in S:\n    print(0)\n    return\n\ndp = [0]*(len(S)+1)\ndp[0] = 1\nmod = 10**9+7\n\nfor i in range(1, len(S)):\n    dp[i] = (dp[i] + dp[i-1]) % mod\n    if S[i] == 'u' and S[i-1] == 'u' or S[i] == 'n' and S[i-1] == 'n':\n        dp[i+1] = (dp[i+1] + dp[i-1]) % mod\n\nprint((dp[-1] + dp[-2]) % mod)\n", "'''\nCreated on 2019. 9. 21.\n\n@author: kkhh88\n'''\n#q = int(input())\n#x, y = map(int,input().split(' '))\n\ntable = [1, 1, 2, 3, 5]\nfor i in range(5,100000):\n    table.append((table[i-1] + table[i-2]) % 1000000007)\ns = input()\n\ncnt = 1\ntmp = 'x'\ntcnt = 0\nfor i in range(len(s)):\n    if s[i] == 'm' or s[i] == 'w':\n        cnt = 0\n        break\n    \n    if (s[i] == 'n' or s[i] == 'u') and tmp == s[i]:\n        tcnt = tcnt + 1\n    else:\n        cnt = cnt * table[tcnt] % 1000000007\n        tcnt = 1\n        tmp = s[i]\n    \nprint(cnt * table[tcnt] % 1000000007)\n\n    \n", "from sys import stdin, exit\n\nrem = 10**9 + 7\ndp = {'norm': 1, 'last_n': 0, 'last_u': 0}\n\nfor i in stdin.readline().strip():\n    if i in 'mw':\n        print(0)\n        return\n\n    if i not in 'nu':\n        dp = {\n                'norm': (dp['norm'] + dp['last_n'] + dp['last_u']) % rem,\n                'last_n': 0,\n                'last_u': 0\n        }\n        continue\n\n    if i == 'u':\n        dp = {\n                'norm': (dp['last_u']) % rem,\n                'last_u': (dp['last_u'] + dp['norm'] + dp['last_n']) % rem,\n                'last_n': 0\n        }\n\n    if i == 'n':\n        dp = {\n                'norm': (dp['last_n']) % rem,\n                'last_n': (dp['last_n'] + dp['norm'] + dp['last_u']) % rem,\n                'last_u': 0\n        }\nprint((dp['norm'] + dp['last_u'] + dp['last_n']) % rem)\n\n", "import sys\ninput = sys.stdin.readline\n\nS=input().strip()+\"?\"\n\nif \"m\" in S or \"w\" in S:\n    print(0)\n    return\n\nmod=10**9+7\n\nDP0=[0]*(10**5+1)\nDP1=[0]*(10**5+1)\n\nDP0[1]=DP0[2]=1\nDP1[2]=1\n\nfor i in range(3,10**5+1):\n    DP0[i]=DP0[i-1]+DP1[i-1]\n    DP1[i]=DP0[i-2]+DP1[i-2]\n    DP0[i]%=mod\n    DP1[i]%=mod\n\nANS=1\nNOW=\"?\"\ncount=0\n\nfor s in S:\n    if s==\"u\" and NOW==\"u\":\n        count+=1\n    elif s==\"u\" and NOW!=\"u\":\n        if count!=0:\n            ANS=ANS*(DP0[count]+DP1[count])%mod\n        count=1\n        NOW=\"u\"\n\n    elif s==\"n\" and NOW==\"n\":\n        count+=1\n    elif s==\"n\" and NOW!=\"n\":\n        if count!=0:\n            ANS=ANS*(DP0[count]+DP1[count])%mod\n        count=1\n        NOW=\"n\"\n\n    else:\n        if count!=0:\n            ANS=ANS*(DP0[count]+DP1[count])%mod\n        count=0\n        NOW=\"?\"\n\nprint(ANS)\n        \n        \n", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    N=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nMOD=1000000007\ns=input()\nflag=0\nfor i in range(0,len(s)):\n    if(s[i]=='w' or s[i]=='m'):\n        flag=1\n        break\n\nif(flag==0):\n    c=1\n    g=[]\n    for i in range(1,len(s)):\n        if(s[i]==s[i-1]):\n            c=(c+1)%MOD\n        else:\n            if(s[i-1]=='n' or s[i-1]=='u'):\n                g.append(c)\n            c=1\n\n    if(s[-1]=='n' or s[-1]=='u'):\n        g.append(c)\n    #print(g)\n    dp=[0,1,2,3]\n    ggg=10\n    if(len(g)>0):\n        ggg=max(g)+10\n    else:\n        ggg=10\n    for i in range(ggg):\n        dp.append((dp[-1]+dp[-2])%MOD)\n\n    ans=1\n    for i in range(0,len(g)):\n        ans=(ans*(dp[g[i]%MOD])%MOD)%MOD\n\n\n    print(ans%MOD)\nelse:\n    print(0)\n", "from sys import stdin\nfrom math import ceil\ns=stdin.readline().strip()\nf1=False\n\nfor i in s:\n    if i==\"m\" or i==\"w\":\n        f1=True\n        break\nif f1:\n    print(0)\n    return\nf=[0 for i in range(len(s)+4)]\nf[0]=1\nf[1]=1\nmod =10**9+7\nfor i in range(2,len(s)+2):\n    f[i]=(f[i-2]+f[i-1])%mod\narr=[1]\nn=0\nu=0\nif s[0]==\"n\":\n    n+=1\nif s[0]==\"u\":\n    u+=1\nfor i in range(1,len(s)):\n    if s[i]==\"n\" and s[i-1]==\"n\":\n        n+=1\n    elif s[i]==\"u\" and s[i-1]==\"u\":\n        u+=1\n    elif s[i]==\"u\":\n        u=1\n    elif s[i]==\"n\":\n        n=1\n    if s[i-1]==\"n\" and s[i]!=\"n\":\n        \n        arr.append(n)\n        n=0\n    if s[i-1]==\"u\" and s[i]!=\"u\":\n        arr.append(u)\n        u=0\nif s[-1]==\"n\":\n    arr.append(n)\nif s[-1]==\"u\":\n    arr.append(u)\n        \nans=1\nfor i in range(len(arr)):\n    ans=(ans*f[arr[i]])%mod\nprint(ans)\n", "\npos = [0, 1, 2]\n\nwhile len(pos) < 100001:\n    a = pos[-1] + pos[-2]\n    a %= 1000000007\n    pos.append(a)\n\ndef solve():\n\n    S = input() + \"_\"\n    \n    \n    segs = []\n    \n    lU = 0\n    lN = 0\n    \n    for s in S:\n        if s == 'w' or s == 'm':\n            print(0)\n            return\n        elif s == 'u':\n            if lN > 1:\n                segs.append(lN)\n            lN = 0\n            lU += 1\n        elif s == 'n':\n            if lU > 1:\n                segs.append(lU)\n            lU = 0\n            lN += 1\n        else:\n            if lU > 1:\n                segs.append(lU)\n\n            if lN > 1:\n                segs.append(lN)\n            lU = 0\n            lN = 0\n    ans = 1\n    \n    for s in segs:\n        ans *= pos[s]\n        ans %= 1000000007\n    print(ans)\n    \nsolve()\n                \n\n\n                \n                \n                \n                \n                \n            \n            \n            \n                    \n                \n", "from itertools import groupby\ndp0 = [0, 1]\ndp1 = [0, 0]\nd0, d1 = 1, 0\nA = [0, 1]\nmod = 10**9+7\nfor i in range(2, 101010):\n    d0, d1 = (d0+d1) % mod, d0\n    dp0.append(d0)\n    dp1.append(d1)\n    A.append(d0+d1)\n\nS = input()\nans = 1\nfor c, g in groupby(S):\n    if c==\"n\" or c==\"u\":\n        n = len(list(g))\n        ans = ans * A[n] % mod\n    elif c==\"m\" or c==\"w\":\n        ans = 0\nprint(ans)\n", "import sys\nM = int( 1e9 ) + 7\ndef I():\n    return sys.stdin.readline().rstrip()\n\ns = I()\n\nif 'w' in s or 'm' in s:\n    print( 0 )\nelse:\n    f = [ 1, 1 ]\n    for i in range(len(s)):\n        f.append( ( f[ -1 ] + f[ -2 ] ) % M )\n    sm = []\n    last = 'k'\n    for c in s:\n        if c in 'un':\n            if last != c:\n                sm.append( 1 )\n            else:\n                sm[ -1 ] += 1\n        last = c\n    ans = 1\n    for i in sm:\n        ans *= f[ i ]\n        ans %= M\n    print( ans )\n", "MOD = 10**9+7\n\ns = input()\nn = len(s)\n\nif s.count('m') > 0 or s.count('w') > 0:\n    print('0')\n    return\n\nus, ns = [0], [0]\ndp = [1 for i in range(n+1)]\nfor i in range(2, n+1):\n    dp[i] = (dp[i-1]+dp[i-2]) % MOD\n\nfor i in range(n):\n    if s[i] == 'u':\n        us[-1] += 1\n        ns.append(0)\n    elif s[i] == 'w':\n        us[-1] += 2\n        ns.append(0)\n    elif s[i] == 'n':\n        ns[-1] += 1\n        us.append(0)\n    elif s[i] == 'm':\n        ns[-1] += 2\n        us.append(0)\n    else:\n        us.append(0)\n        ns.append(0)\n#print(us, ns)\nans = 1\nfor usi in us:\n    ans = (ans*dp[usi]) % MOD\nfor nsi in ns:\n    ans = (ans*dp[nsi]) % MOD\nprint(ans)", "s = input()\nL = [0] * (len(s) + 1)\ninf = 1000000007\nL[0] = 1\nL[1] = 1\nfor i in range(1, len(s)):\n    if s[i] == 'm' or s[i] == 'w':\n        break\n    if s[i] == 'u':\n        if s[i - 1] == 'u':\n            L[i + 1] = (L[i] + L[i - 1]) % inf\n        else:\n            L[i + 1] = L[i]\n    elif s[i] == 'n':\n        if s[i - 1] == 'n':\n            L[i + 1] = (L[i] + L[i - 1]) % inf\n        else:\n            L[i + 1] = L[i]\n    else:\n        L[i + 1] = L[i]\nif s[0] == 'm' or s[0] == 'w':\n        L[len(s)] = 0\nprint(L[len(s)])\n    \n    \n    \n        \n", "u = list(input())\nq = int(1e9) + 7\nn = len(u)\nif 'm' in u or 'w' in u:\n    print(0)\n    return\nif n == 1:\n    print(1)\n    return\ndp = [0] * n\ndp[0] = 1\ndp[1] = 2\nfor i in range(2, n):\n    dp[i] = dp[i - 1] + dp[i - 2]\n    dp[i] %= q\nans = 1\nw = 0\nm = 0\n#print(dp)\nif u[0] == 'u':\n    w += 1\nelif u[0] == 'n':\n    m += 1\nfor i in range(1, n):\n    if u[i] == 'u':\n        w += 1\n    elif u[i] == 'n':\n        m += 1\n    if u[i] != 'u' and w != 0:\n        ans *= dp[w - 1]\n        w = 0\n    if u[i] != 'n' and m != 0:\n        ans *= dp[m - 1]\n        m = 0\n    ans %= q\nif w != 0:\n    ans *= dp[w - 1]\nif m != 0:\n    ans *= dp[m - 1]\nprint(ans % q)\n\n\n\n\n\n\n\n\n\n\n    \n", "\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nS = input()\nL = len(S)\n\nN = 10**5 + 5\ndp = [0]*N\ndp[1] = 1\ndp[2] = 2\nfor i in range(3,N):\n    dp[i] = (dp[i-1] + dp[i-2]) %mod\n\nS += 'X'\ni = 0\nans = 1\nwhile i < L:\n    if S[i] == 'u':\n        cnt = 0\n        while S[i] == 'u':\n            i += 1\n            cnt += 1\n        ans *= dp[cnt]\n    elif S[i] == 'n':\n        cnt = 0\n        while S[i] == 'n':\n            i += 1\n            cnt += 1\n        ans *= dp[cnt]\n    elif S[i] == 'm' or S[i] == 'w':\n        print(0)\n        return\n    else:\n        i += 1\n    ans %= mod\nprint(ans%mod)\n", "MOD = 1000000007\nii = lambda: int(input())\nsi = lambda: input()\ndgl = lambda: list(map(int, input()))\nf = lambda: list(map(int, input().split()))\nil = lambda: list(map(int, input().split()))\nls = lambda: list(input())\ns=si()\nn=len(s)\ndp=[0]*(n+2)\ndp[0]=1\ndp[1]=1 if not s[0] in ['m','w'] else 0\nfor i in range(2,n+1):\n    if s[i-1] in ['m','w']:\n        print(0);return\n    dp[i]=dp[i-1]\n    if s[i-1]=='n' or s[i-1]=='u':\n        if s[i-2]==s[i-1]:\n            dp[i]+=dp[i-2]\n            dp[i]%=MOD\nprint(dp[n])\n\n", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nS = input()\nN = len(S)\n\ndp = [0] * (N+1)\ndp[0] = 1\nfor i in range(N):\n    if S[i] == 'w' or S[i] == 'm':\n        print(0)\n        return\n    dp[i+1] += dp[i]\n    dp[i+1] %= MOD\n    if i+2 <= N:\n        if S[i] == S[i+1] == 'u' \\\n                or S[i] == S[i+1] == 'n':\n            dp[i+2] += dp[i]\n            dp[i+2] %= MOD\nprint(dp[N])\n", "arr = [1, 1]\nM = 10 ** 9 + 7\nfor i in range(10**5):\n    arr.append((arr[-1] + arr[-2]) % M)\n\n\ndef f(symb):\n    nonlocal s, arr\n    local_ans = 1\n    if s[0] == symb:\n        cnt = 1\n    else:\n        cnt = 0\n    for i in range(1, len(s)):\n        if s[i] != s[i - 1]:\n            if cnt > 0:\n                local_ans *= arr[cnt]\n                local_ans %= M\n            if cnt == 0 and s[i] == symb:\n                cnt = 1\n            if s[i] != symb:\n                cnt = 0\n        if s[i] == s[i - 1] and s[i] == symb:\n            cnt += 1\n    if cnt > 0:\n        local_ans *= arr[cnt]\n        local_ans %= M\n    #print(local_ans)\n    return local_ans\n\nans = 1\ns = input()\nif s.count('w') or s.count('m'):\n    print(0)\nelse:\n    print(f('u') * f('n') % M)\n\n", "from pprint import pprint\nmod = int(1e9) + 7\ns = input()\nif 'm' in s or 'w' in s:\n\tprint(0)\nelse:\n\tn = len(s)\n\tdp = [[0, 0] for i in range(n)]\n\n\tfor i in range(1, n):\n\t\tdp[i][0] = (dp[i-1][0] + dp[i-1][1]) % mod\n\n\t\tif s[i] in 'un':\n\t\t\tif s[i] == s[i-1]:\n\t\t\t\tdp[i][1] = (1 + dp[i-1][0]) % mod\n\n\t# pprint(dp)\n\tprint((dp[-1][0] + dp[-1][1] + 1) % mod)", "import sys\nimport math\nfrom collections import Counter\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\nMOD = 1000000007\ndef getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\ndef solve():\n    # n = getN()\n    seqs = []\n    tmp = \"X\"\n    seq = 0\n    st = input().strip()\n    n = len(st)\n    for ch in st:\n        if ch == \"m\" or ch == \"w\":\n            print(0)\n            return\n        elif ch in [\"u\", \"n\"]:\n            if tmp == ch:\n                seq += 1\n            else:\n                if seq != 0:\n                    seqs.append(seq)\n                seq = 1\n\n        else:\n            if seq != 0:\n                seqs.append(seq)\n            seq = 0\n\n        tmp = ch\n    if seq != 0:\n        seqs.append(seq)\n\n\n    nst = [0 for i in range(n + 2)]\n    mst = [0 for i in range(n + 2)]\n    nst[1] = 1\n    for i in range(2, n + 1):\n        nst[i] = (nst[i-1] + mst[i-1]) % MOD\n        mst[i] = nst[i-1] % MOD\n\n    ans = 1\n    for seq in seqs:\n        ans *= nst[(seq)] + mst[(seq)]\n        ans %= MOD\n    print(ans)\n    # print(nst, mst)\n\n\n    return\n\n\ndef main():\n    # q = getN()\n    # for _ in range(q):\n    solve()\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\n\nfibo = [1, 1, 2]\nM = 10 ** 9 + 7\nfor i in range(3, 100001):\n    fibo +=  [(fibo[i-1] + fibo[i-2]) % M]\n\ns = list(input())\ncheck = [True] * len(s)\n\ncnt = 1\nfor i in range(len(s)):\n    if s[i] == 'u' and check[i]:\n        t = 0\n        j = i\n        while j < len(s) and s[j] == 'u':\n            check[j] = False\n            t += 1\n            j += 1\n        cnt = (cnt * fibo[t]) % M\n    if s[i] == 'n' and check[i]:\n        t = 0\n        j = i\n        while j < len(s) and s[j] == 'n':\n            check[j] = False\n            t += 1\n            j += 1\n        cnt = (cnt * fibo[t]) % M\n    if s[i] == 'm' or s[i] == 'w':\n        cnt = 0\n        break\n\nprint(cnt)"]