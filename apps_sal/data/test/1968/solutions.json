["n, v = map(int, input().split())\nans = []\nfor i in range(n):\n    a = list(map(int, input().split()))[1:]\n    if v > min(a):\n        ans.append(i + 1)\nprint(len(ans))\nprint(*ans)", "n,m=map(int,input().split())\ns=0\nq=[]\nfor i in range(n):\n    a=list(map(int,input().split()))\n    for j in range(1,a[0]+1):\n        if m>a[j]:\n            s+=1\n            q.append(i+1)\n            break\nprint(s)\nprint(*q)", "n, v = [int(i) for i in input().split()]\ns = []\nfor i in range(n):\n    s.append([min([int(i) for i in input().split()][1:]), i])\na = []\ns.sort()\nfor i in range(len(s)):\n    if v > s[i][0]:\n        a.append(s[i][1])\nprint(len(a))\na.sort()\nprint(\" \".join([str(i + 1) for i in a]))", "n, v = list(map(int, input().split()))\nres = []\nfor i in range(n):\n    k, *s = list(map(int, input().split()))\n    if v > min(s):\n        res.append(i+1)\nprint(len(res))\nprint(' '.join(map(str, res)))\n", "\"\"\"\nCodeforces Round 252 Div 2 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0:\n        return inputs\n    if mode == 1:\n        return inputs.split()\n    if mode == 2:\n        return [int(x) for x in inputs.split()]\n\ndef write(s=\"\\n\"):\n    if isinstance(s, list): s = \" \".join(map(str,s))\n    s = str(s)\n    print(s, end=\"\")\n\n################################################### SOLUTION\nk,v = read()\nres = []\nfor i in range(k):\n    a = read()\n    n = a.pop(0)\n    if min(a) < v: res.append(i+1)\nprint(len(res))\nwrite(res)", "n, v = [int(c) for c in input().split()]\nres = []\n\nfor i in range(n):\n    lots = [int(c) for c in input().split()]\n    for j in range(1, len(lots)):\n        if lots[j] < v:\n            res.append(i + 1)\n            break\n\nprint(len(res))\n\nif len(res) > 0:\n    print(' '.join(map(str,res)))", "\nn,v = [int(i) for i in input().split()]\nyes = []\nfor i in range(n):\n    l = [int(i) for i in input().split()]\n    for j in l[1:]:\n        if v > j:\n            yes += [i+1]\n            break\n\nprint(len(yes))\nfor i in yes:\n    print(i,end = ' ')\n", "sa=input().split(' ')\nsellers=int(sa[0])\nmoney=int(sa[1])\nsa3=[]\nc=0\nslist=[]\nfor x in range(sellers):\n    sa3=[]\n    sa2=input().split(' ')\n    for element in sa2:\n        sa3.append(int(element))\n    sa3.remove(sa3[0])\n    mini=min(sa3)\n    if money>mini:\n        c+=1\n        slist.append(x+1)\n\nstring=''\nfor element in slist:\n    string+=str(element)\n    string+=' '\nprint(c)\nprint(string.strip())\n", "n,v=map(int,input().split())\nqlist=[]\nslist=[]\nfor i in range(n):\n    slist.append(min([int(x) for x in input().split()][1:]))\n\nfor i in range(n):\n    if slist[i]<v:\n        qlist.append(i+1)\n\nprint(len(qlist))\nprint(''.join([str(qlist[i])+' ' for i in range(len(qlist))]))", "n, v = map(int, input().split())\np = 0\nq = []\nfor i in range(n):\n    k = list(map(int, input().split()))\n    km = min(k[1:])\n    if km < v:\n        p += 1\n        q.append(i+1)\n\nprint(p)\nfor x in q:\n    print(x, end=' ')\n\n", "from collections import OrderedDict\nn, v = map(int, input().split())\n\npr = {}\n\nfor i in range(n):\n    t = list(map(int, input().split()))[1:]\n    pr[i+1]=min(t)\n\npr = OrderedDict(sorted(pr.items(), key=lambda x: x[1]))\n\nk = 0\n\nrr = []\n\nfor i in pr:\n    if pr[i] < v:\n        k += 1\n        rr.append(i)\n\nprint(k)\n\nrr.sort()\n\nprint(*rr, sep=' ')\n", "from sys import stdin\n\ndef solve(n, v, k):\n\tresult = []\n\tfor i in range(0, len(k)):\n\t\tif v > min(k[i]):\n\t\t\tresult.append(i + 1)\n\treturn result\n\n\ndef __starting_point():\n\ts = stdin.readline().split(' ')\n\tn = int(s[0])\n\tv = int(s[1])\n\tk = []\n\tfor i in range(0, n):\n\t\tsn = stdin.readline().split(' ')[1:]\n\t\tki = [int(kij) for kij in sn]\n\t\tk.append(ki)\n\tsolution = solve(n, v, k)\n\tl = len(solution)\n\tprint(l)\n\tif l > 0:\n\t\tprint(' '.join([str(x) for x in solution]))\n\n__starting_point()", "from sys import stdin as cin\nfrom fractions import Fraction as f\nimport math\n\nn,v = map(int,cin.readline().split())\nr=[]\nfor t in range(n):\n    \n    a=list(map(int,cin.readline().split()))\n\n    for i in range(1,a[0]+1):\n        if a[i]<v:\n            r.append(t+1)\n            break\nprint(len(r))\nfor x in r:\n    print(x,end=' ')\n\n\n\n", "n,v = list(map(int,input().split()))\nsellers = []\nfor i in range(n):\n    auctions = list(map(int,input().split()))\n    k = auctions[0]\n    for j in range(k):\n        if(v > auctions[1+j]):\n            sellers.append(str(i+1))\n            break\nprint(len(sellers))\nprint(' '.join(sellers))\n", "n,v=map(int,input().split())\nl1=[]\ncount=0\nfor i in range(n):\n    l=list(map(int,input().split()))\n    for j in range(1,l[0]+1):\n        if(v>l[j]):\n            count=count+1\n            l1.append(i+1)\n            break\nprint(count)\nl1.sort()\nfor k in range(len(l1)):\n    if(len(l1)==0):\n        print(\"\\t\")\n    else:\n        print(l1[k],\"\" ,end='')", "from sys import stdin\n\ndef main():\n    '''\n    Name KevinSS\n    Code: A. Valera and Antique Items\n    '''\n    inp = stdin\n    n, v = list(map(int, inp.readline().strip().split()))\n    dicti = dict()\n    sellers = list()\n    \n    for i in range(1,n+1):\n        a = str(i)\n        Items = [int(x) for x in inp.readline().strip().split()]\n        dicti[a] = Items\n    \n    for i in range(1,n+1):\n        flag = False\n        for j in range(1,len(dicti[str(i)])):\n            if (dicti[str(i)][j] < v) and flag == False:\n                sellers.append(str(i))\n                flag = True\n    print(len(sellers))\n    print(' '.join(sellers))\n\n                \n\n    \nmain()\n", "n,v=map(int,input().split())\nsumi = 0\nls=[]\nfor i in range(n):\n\tli=list(map(int,input().split()))\n\tfor j in range(1,len(li)):\n\t\tif(v > li[j]):\n\t\t\tsumi =sumi + 1\n\t\t\tls.append(i+1)\n\t\t\tbreak\nprint(sumi)\nif(sumi!=0):\n\tprint(' '.join(map(str, ls))) ", "n, v = map(int, input().split())\n\nwins = set()\nfor i in range(n):\n\ts = list(map(int, input().split()))\n\tk = s[0]\n\tfor j in range(1, k + 1):\n\t\tif s[j] < v:\n\t\t\twins.add(i + 1)\n\t\t\tbreak\n\nprint(len(wins))\nprint(' '.join(map(str, sorted(wins))))", "n, k = list(map(int,input().split()))\nans = []\ncount = 0\nfor i in range(n):\n    a = list(map(int,input().split()))\n    if min(a[1:]) < k:\n        count += 1\n        ans.append(i+1)\nprint(count)\nif count > 0:\n    sep = \" \"\n    print(sep.join(list(map(str,ans))))\n", "\nn, v = list(map(int, input().split()))\ncount = 0\nres = []\n\ndef f(a):\n  for k in a:\n    if v > k:\n      return True\n  return False\n\nfor i in range(n):\n  a = list(map(int, input().split(' ')))\n  a.pop(0)\n  if f(a):\n    count += 1\n    res.append(i+1)\n  \nprint(count)\nprint( ' '.join(str(e) for e in res) )\n", "n, v = list(map(int, input().split(\" \")))\nx = lambda k: int(k) < v \no = []\n\nfor i in range(n):\n\t\n\tm = list(map(x, input().split(\" \")[1:]))\n\tif any(m):\n\t\to.append(i + 1)\n\nprint(len(o))\nfor i in o:\n\tprint(i, end=\" \")\n", "num, limit = list(map(int, input().split()))\nl = []\nfor i in range(num):\n    li = list(map(int, input().split()))\n    if limit > min(li[1:]):\n        l.append(i + 1)\nprint(len(l))\nprint(' '.join(map(str, l)))\n", "n, v = map(int, input().split())\nsellers = [list(map(int, input().split())) for i in range(n)]\n\nres_amount, res_sellers  = 0, []\n\nfor i, p in enumerate(sellers):\n    if min(p[1:]) < v:\n        res_amount += 1\n        res_sellers.append(i+1)\n\nprint(res_amount)\nprint(*res_sellers)", "n, v = map(int, input().split())\nl = []\nfor cont in range(0, n):\n    l.append(list(map(int, input().split()))[1:])\nris = []\nfor cont in range(0, len(l)):\n    for pr in l[cont]:\n        if v > pr:\n            ris.append(str(cont+1))\n            break\nprint(len(ris))\nprint(' '.join(ris))", "n,v=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split()))[1:])\nris=[]\nfor cont in range(len(l)):\n    for i in l[cont]:\n        if v > i:\n            ris.append(str(cont+1))\n            break\nprint(len(ris))\nprint(' '.join(ris))\n"]