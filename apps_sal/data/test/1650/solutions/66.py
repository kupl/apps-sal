# 各桁について3通りある
# (0,0) (1,0) (0,1)
# 3 ** 桁数すればよいのだが、たとえば100以下の数で101は選べないので、
# 桁DPで処理
# ・未満でない->未満でない : 1のときは2通り(1,0) (0,1)
# ・未満でない->未満でない : 0の時は1通り(0,0)
# ・未満でない->未満である : 1の時は1通り(0,0)
# ・未満でない->未満である : 0の時は0通り（未満にできない）
# ・未満である : 1でも0でも3通り(1,0)(0,1)(0,0)

# dp[i][smaller] = 場合の数

import sys
readline = sys.stdin.readline

L = readline().rstrip()
keta = len(L)
DIV = 10 ** 9 + 7

dp = [[0] * 2 for i in range(keta)]
dp[0][0] = 2 # 最初の桁は必ず1なので2通り
dp[0][1] = 1 # 未満になるタイミングで選べるのは1通り

for i in range(1, keta):
  x = L[i] # その桁の数
  if x == "1":
    dp[i][0] += dp[i - 1][0] * 2
    dp[i][1] += dp[i - 1][0] * 1
    dp[i][0] %= DIV
    dp[i][1] %= DIV
  else:
    dp[i][0] += dp[i - 1][0] * 1
    dp[i][0] %= DIV
  dp[i][1] += dp[i - 1][1] * 3
  dp[i][1] %= DIV

print((dp[keta - 1][0] + dp[keta - 1][1] ) % DIV)
