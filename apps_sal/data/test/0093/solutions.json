["a, b, c, d = input(), input(), input(), input()\na = a + b[::-1]\nx = \"X\"\nfor i in range(4):\n    if a[i] == x:\n        a = a[:i] + a[i + 1:]\n        break\nc = c + d[::-1]\n\nfor i in range(4):\n    if c[i] == x:\n        c = c[:i] + c[i + 1:]\n        break\nflag = False\nfor i in range(4):\n    if a == c:\n        flag = True\n    c = c[1:] + c[0]\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "# You lost the game.\nch = [str(input()) for _ in range(4)]\nL = [ch[0][0],ch[0][1],ch[1][1],ch[1][0]]\nR = [ch[2][0],ch[2][1],ch[3][1],ch[3][0]]\ndel(L[L.index('X')])\ndel(R[R.index('X')])\ni = 0\nwhile i < 4 and L != R:\n    i += 1\n    L = L[1:]+[L[0]]\nif L == R:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#[int(i) for i in input().split()]\na = input()\nb = input()\na = a + b[::-1]\na = a.replace('X', '')\ni = a.find('A')\na = a[i:] + a[:i]\n\nc = input()\nd = input()\nc = c + d[::-1]\nc = c.replace('X', '')\ni = c.find('A')\nc = c[i:] + c[:i]\nif a == c:\n    print('YES')\nelse:\n    print('NO')\n", "a = input()\nb = input()\nc = input()\nd = input()\n\ns = list(a + b[1] + b[0])\nt = list(c + d[1] + d[0])\ns.remove('X')\nt.remove('X')\n\nfor i in range(5):\n    t = t[1:] + [t[0]]\n    if s == t:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")", "print(('YES' if (input() + ''.join(reversed(input()))).replace('X', '') \\\n        in (input() + ''.join(reversed(input()))).replace('X', '') * 2 else 'NO'))\n", "a = input().strip() + input().strip()[::-1]\nb = input().strip() + input().strip()[::-1]\na = a.replace(\"X\", \"\")\nb = b.replace(\"X\", \"\")\nif (a == b or a[1:] + a[:1] == b or a[2:] + a[:2] == b):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "a = [''] * 2\nb = [''] * 2\nfor i in range(2):\n    a[i] = input()\nfor i in range(2):\n    b[i] = input()\nway1 = ''\nway2 = ''\nfor i in range(2):\n    if i == 0:\n        for q in range(2):\n            if a[i][q] != 'X':\n                way1 += a[i][q]\n            if b[i][q] != 'X':\n                way2 += b[i][q]\n    else:\n        for q in range(1, -1, -1):\n            if a[i][q] != 'X':\n                way1 += a[i][q]\n            if b[i][q] != 'X':\n                way2 += b[i][q]\nfor i in range(3):\n    if way1 == way2:\n        print(\"YES\")\n        return\n    way2 = way2[1:] + way2[0]\nprint(\"NO\")\nreturn", "3\n\ndef main():\n    a = input() + \"\".join(reversed(input()))\n    b = input() + \"\".join(reversed(input()))\n\n    a = a[:a.find(\"X\")] + a[a.find(\"X\") + 1:]\n    b = b[:b.find(\"X\")] + b[b.find(\"X\") + 1:]\n\n    for i in range(3):\n        if a[i:] + a[:i] == b:\n            return True\n    return False\n\nif main():\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import sys\nsys.setrecursionlimit(10000000)\nfrom math import pi\na = list(input())\nb = list(input())\nab = a+list(reversed(b))\nab.remove('X')\na = list(input())\nb = list(input())\ncd = a+list(reversed(b))\ncd.remove('X')\ncd = cd + cd\nfriends = False\nfor i in range(3):\n    good = True\n    for j in range(3):\n        if ab[j] != cd[i+j]:\n            good = False\n    friends = friends or good\nif friends:\n    print('YES')\nelse:\n    print('NO')\n", "3\n\ndef readln(): return list(map(int, input().split()))\n\ndef main():\n    inp = [input() for _ in range(4)]\n    a = inp[0] + inp[1][1] + inp[1][0]\n    a = a.replace('X', '')\n    b = inp[2] + inp[3][1] + inp[3][0]\n    b = b.replace('X', '')\n    print('YES' if a == b or a == b[1:] + b[0] or a == b[2] + b[:2] else 'NO')\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s1 = ''\ns2 = ''\nfor i in range(2):\n    r = list(input())\n    if i == 1:\n        r = r[1] + r[0]\n    for c in r:\n        if c != 'X':\n            s1+=c\nfor i in range(2):\n    r = input()\n    if i == 1:\n        r = r[1] + r[0]    \n    for c in r:\n        if c != 'X':\n            s2+=c\n            \ns2 *= 2\nk = 0\nfor i in range(3):\n    if s1 == s2[i:i + 3]:\n        k = 1\nif k == 0:\n    print('NO')\nelse:\n    print('YES')", "a = [list(input()) for _ in range(2)]\nb = [list(input()) for _ in range(2)]\na = [a[0][0], a[0][1], a[1][1], a[1][0]]\nb = [b[0][0], b[0][1], b[1][1], b[1][0]]\na.remove(\"X\")\nb.remove(\"X\")\nx = a.index(\"A\")\ny = b.index(\"A\")\nret = True\nfor i in range(3):\n    if a[(x + i) % 3] != b[(y + i) % 3]:\n        ret = False\nif ret:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "per1 = input()\nper2 = input()\nper3 = input()\nper4 = input()\ns= []\ns.append(per1[0])\ns.append (per1[1])\ns.append (per2[1])\ns.append (per2[0])\nfor i in range(len(s)):\n    if s[i] == 'X':\n        s.pop(i)\n        break\nd= []\nd.append(per3[0])\nd.append (per3[1])\nd.append (per4[1])\nd.append (per4[0])\nfor i in range(len(d)):\n    if d[i] == 'X':\n        d.pop(i)\n        break\nper2 = False\nfor i in range(3):\n    if s != d:\n        t = d.pop(0)\n        d.append(t)\n    else:\n        per2 = True\n        break\nif per2:\n    print('YES')\nelse:\n    print('NO')", "p11 = input()\np12 = input()\np21 = input()\np22 = input()\n\ns1 = (p11 + p12[1] + p12[0]).replace('X', '')\ns2 = (p21 + p22[1] + p22[0]).replace('X', '')\n\nif(s1 == 'ABC' or s1 == 'BCA' or s1 == 'CAB'):\n    first = True\nelse:\n    first = False\n    \nif(s2 == 'ABC' or s2 == 'BCA' or s2 == 'CAB'):\n    second = True\nelse:\n    second = False\n    \n    \nif(first == second):\n    print('YES')\nelse:\n    print('NO')", "def read(s, t):\n    if (s[0] == 'X'):\n        return s[1] + t[::-1]\n    if (s[1] == 'X'):\n        return t[::-1] + s[0]\n    if (t[0] == 'X'):\n        return t[1] + s\n    if (t[1] == 'X'):\n        return s + t[0]\n\ns1 = ''.join(input().split())\ns2 = ''.join(input().split())\nt1 = ''.join(input().split())\nt2 = ''.join(input().split())\ns = read(s1, s2)\nt = read(t1, t2)\nfor i in range(3):\n    for j in range(3):\n        #print(s[i:] + s[:i], t[j:] + t[:j])\n        if s[i:] + s[:i] == t[j:] + t[:j]:\n            print(\"YES\")\n            return\nprint(\"NO\")\n", "a = input()\na = a + input()[::-1]\na = a.replace('X','')\nb = input()\nb = b + input()[::-1]\nb = b.replace('X','')\nb = b * 2\n\nif b.find(a) == -1:\n\tprint('NO')\nelse:\n\tprint('YES')", "s1 = input() + input()[::-1]\ns2 = input() + input()[::-1]\ns1 = s1[:s1.find('X')] + s1[s1.find('X') + 1:]\ns2 = s2[:s2.find('X')] + s2[s2.find('X') + 1:]\n\nflag = False\n\nfor i in range(3):\n    if s1 == s2:\n        flag = True\n        break\n    s1 = s1[-1] + s1[:-1]\n\nprint('YES' if flag else 'NO')", "from collections import deque\nf = []\ns = []\nh = input()\nh1 = input()\nh = h + h1[::-1]\nfor i in h:\n    if i != 'X':\n        f.append(i)\nh = input()\nh1 = input()\nh = h + h1[::-1]\nfor i in h:\n    if i != 'X':\n        s.append(i)\nf1 = []\nf1.append(f[1])\nf1.append(f[2])\nf1.append(f[0])\nf2 = []\nf2.append(f[2])\nf2.append(f[0])\nf2.append(f[1])\nif f1 == s or f2 == s or f == s:\n    print('YES')\nelse:\n    print('NO')\n    \n", "def seq(s):\n    ans = ''\n    for i in s:\n        if i != 'X':\n            ans += i\n    while ans[0] != 'A':\n        ans = ans[1:] + ans[0]    \n    return ans\n\nfirst = input() + input()[::-1]\nsecond = input() + input()[::-1]\nwhile first[0] != second[0]:\n    first = first[1:] + first[0]\nif seq(first) != seq(second):\n    print('NO')\nelse:\n    print('YES')", "import copy\ndef g(s):\n    ans = set()\n    q = [s]\n    while q:\n        t = q.pop(0)\n        for i in range(2):\n            for j in range(2):\n                if t[i][j] == 'X':\n                    xx = copy.deepcopy(t)\n                    xx[i][j], xx[i][1 - j] = xx[i][1 - j], xx[i][j]\n                    k = ''.join([''.join(r) for r in xx])\n                    if k not in ans:\n                        ans.add(k)\n                        q.append(xx)\n\n                    xx = copy.deepcopy(t)\n                    xx[i][j], xx[1 - i][j] = xx[1 - i][j], xx[i][j]\n                    k = ''.join([''.join(r) for r in xx])\n                    if k not in ans:\n                        ans.add(k)\n                        q.append(xx)\n\n    return ans\n\nt = []\nt.append(list(input()))\nt.append(list(input()))\n\nr = []\nr.append(list(input()))\nr.append(list(input()))\n\nprint('YES' if (g(r) & g(t)) else 'NO')\n", "b1 = input()\nb2 = input()\ne1 = input()\ne2 = input()\nb = (b1 + b2[::-1]).split(\"X\")\ne = (e1 + e2[::-1]).split(\"X\")\nb = b[1] + b[0]\ne = e[0] + e[1]\nif e == b:\n    print(\"YES\")\nelif (e[2] + e[0] + e[1]) == b:\n    print(\"YES\")\nelif (e[1] + e[2] + e[0]) == b:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "a = input()\nb = input()[::-1]\ns1=''\nif a[0] != 'X':\n    s1 += a[0]\nif a[1] != 'X':\n    s1 += a[1]\nif b[0] != 'X':\n    s1 += b[0]\nif b[1] != 'X':\n    s1 += b[1]\na = input()\nb = input()[::-1]\ns2=''\nif a[0] != 'X':\n    s2 += a[0]\nif a[1] != 'X':\n    s2 += a[1]\nif b[0] != 'X':\n    s2 += b[0]\nif b[1] != 'X':\n    s2 += b[1]\nc = s2.index(s1[0])\nif s2[(c + 1) % 3] == s1[1]:\n    print(\"YES\")\nelse:\n    print('NO')", "a = input().strip()\na = a + ''.join(list(reversed(input().strip())))\n\nb = input().strip()\nb = b + ''.join(list(reversed(input().strip())))\n\na = a.replace('X', '')\nb = b.replace('X', '')\nf = False\nfor i in range(4):\n    if a == b:\n        f = True\n    b = b[1:] + b[:1]\nif f:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "c = input()\nd = input()\nA = c + d[::-1]\nc = input()\nd = input()\nB = c + d[::-1]\n\nA = A.replace('X', '')\nB = B.replace('X', '')\n\nA = A + A\n\nif (A.find(B) == -1):\n  print('NO')\nelse:\n  print('YES')", "a1 = input()\na2 = input()\nb1 = input()\nb2 = input()\nbel = [a1,a2]\nel = [b1,b2]\nchecker = False\nfor i in range(100):\n    if not( a1 == b1 and a2 == b2):\n        if 'X' in a1:\n            if a1.find('X') == 0:\n                a1 = a2[0]+a1[1]\n                a2 = 'X'+a2[1]\n            else:\n                a1 = 'X'+a1[0]\n                \n            \n          \n        else:\n            if a2.find('X') == 0:\n                a2 = a2[1] + 'X'\n            else:\n                \n                a2 = a2[0] + a1[1]\n                a1 = a1[0] +'X'\n                 \n    else:\n        \n        \n        checker = True\n        break\nif checker == True:\n    print('YES')\nelse:\n    print('NO')"]