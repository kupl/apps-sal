["t=int(input())\nfor tt in range(t):\n    n,p=map(int,input().split())\n    now=1\n    ans=0\n    while ans!=2*n+p:\n        for i in range(now+1,n+1):\n            if ans==2*n+p:\n                break\n            print(now,i)\n            ans+=1\n        now+=1", "t = int(input())\n\nwhile t > 0:\n    [n, p] = map(int, input().split(' '))\n    count = int(0)\n    for i in range(n):\n        j = i+2\n        while j <= n:\n            count = count+1\n            print(str(i+1)+' '+str(j))\n            if count == 2*n+p:\n                break\n            j = j + 1\n        if j <= n:\n            break\n    t = t-1", "import sys\n\ndef compute(n,p):\n    count=0\n    for i in range(1,n+1,1):\n        for j in range(i+1,n+1,1):\n            print('{0} {1}'.format(i,j))\n            count += 1\n            if(count >= (2*n+p)):\n                return\n\nt = int(input())\nfor case in range(t):\n    n,p = list(map(int,input().split()))\n    compute(n,p)\n", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n, p = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n+1):\n            count += 1\n            if count <= 2*n + p:\n                print(\"%s %s\" % (i, j))\n", "t = int(input())\nfor k in range(t):\n    n, p = map(int, input().split())\n    c = 0\n    e = 2*n+p;\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            if c < e:\n               print(i, j)\n               c += 1", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n, p = map(int, input().split())\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n+1):\n            count += 1\n            if count <= 2*n + p:\n                print(\"%s %s\" % (i, j))", "for t in range(int(input())):\n    n, p = map(int, input().split())\n    i, j = 1, 2\n    for k in range(2 * n + p):\n        print(i, j)\n        j += 1\n        if j > n:\n            i += 1\n            j = i + 1", "t = int(input())\nfor z in range(t):\n    n, p = [int(x) for x in input().split()]\n    cur = 0\n    for i in range(1, n):\n        j = i + 1\n        while (j <= n) and (cur < n*2 + p):\n            print(i, j)\n            j += 1\n            cur += 1", "N = int(input())\n\nfor i in range(N):\n    a = list(map(int,input().split()))\n    c = 0\n    for i in range(a[0]):\n        if c == 2*a[0]+a[1]:\n            break\n        for j in range(i+1,a[0]):\n            if c == 2*a[0]+a[1]:\n                break\n            print(i+1,j+1)\n            c = c+1\n", "t = int(input())\nwhile t > 0:\n    t -= 1\n    n, p = list(map(int, input().split()))\n    num = 0\n    for i in range(1, n):\n        for j in range(i+1, n+1):\n            num += 1\n            if num <= 2*n + p:\n                print(i,j)\n", "t = int(input())\nwhile(t > 0):\n\tn, p = list(map(int, input().split()))\n\ttemp = 2 * n + p\n\tl = 1\n\tr = l + 1\n\twhile(temp > 0):\n\t\tif(r == n + 1):\n\t\t\tl += 1\n\t\t\tr = l + 1\n\t\tprint(l,r)\n\t\tr += 1\n\t\ttemp -= 1\n\tt -= 1\n", "a = int(input())\nl = []\nfor j in range(a):\n\tstart = 1\n\tend = 1\n\th = list(map(int, input().split()))\n\tn = h[0]\n\tp = h[1]\n\tfor i in range(2 * n + p):\n\t\tif (end + 1 > n):\n\t\t\tstart += 1\n\t\t\tend = start + 1\n\t\telse:\n\t\t\tend += 1\n\t\tprint(start, end)\n\n\n", "t = int(input())\nfor z in range(t):\n    n, p = [int(x) for x in input().split()]\n    cur = 0\n    for i in range(1, n):\n        j = i + 1\n        while (j <= n) and (cur < n*2 + p):\n            print(i, j)\n            j += 1\n            cur += 1", "t=int(input())\n\ndef readints():\n  return map(int, input().split(' '))\n\ndef solve():\n  n,p=readints()\n  # 2n-3\n  viz = [ [0]*n for _ in range(n) ]\n  for j in range(n):\n    viz[0][j]=viz[j][0]=1\n  for j in range(n):\n    viz[1][j]=viz[j][1]=1\n  # p+3\n  leftover=p+3\n  done=False\n  for i in range(n):\n    if done: break\n    for j in range(i+1,n):\n      if viz[i][j]==1: continue\n      leftover-=1\n      viz[i][j]=viz[j][i]=1\n      if leftover==0: \n        done=True\n        break\n  for i in range(n):\n    for j in range(i+1,n):\n      if viz[i][j]:\n        print(i+1,j+1)\nfor _ in range(t):\n  solve()", "'''input\n1\n6 0\n'''\n# practicing a skill right after sleep improves it a lot quickly\nfrom sys import stdin, setrecursionlimit\n\n\n# main starts\nt = int(stdin.readline().strip())\nfor _ in range(t):\n\tn, p = list(map(int, stdin.readline().split()))\n\tcount = 0\n\tflag = 0\n\tfor i in range(1, n + 1):\n\t\tif flag == 1:\n\t\t\tbreak\n\t\tfor j in range(i + 1, n + 1):\n\t\t\tif count == 2 * n + p:\n\t\t\t\tflag = 1\n\t\t\t\tbreak\n\t\t\tprint(i, j)\n\t\t\tcount += 1\n", "\ndef solve(n, p):\n    cnt = 2 * n + p\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            print(i, j)\n            cnt -= 1\n            if cnt == 0:\n                return\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n, p = map(int, input().split())\n        solve(n, p)\n\n        \n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n     \ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\n\nt = int(input())\nwhile t:\n    flag = 0\n    n,p = get_ints()\n    count = 0\n    i = 1\n    while i<(n+1):\n        for j in range(i+1,n+1):\n            print(i,j)\n            count+=1\n            if count==2*n+p:\n                flag = 1\n                break\n        if flag==1:\n            break\n        i+=1\n    t-=1"]