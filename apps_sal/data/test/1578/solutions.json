["n=int(input())\nprint(n*(n+1)//2-n)", "N = int(input())\nans = N * (N - 1) // 2\nprint(ans)\n", "n=int(input())\nprint(n*(n-1)//2)", "# coding: utf-8\n\ndef main():\n    N = int(input())\n\n    ans = N * (N - 1) // 2\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\nprint((n-1)*n//2)", "sigma = lambda x : x*(x+1)//2\n\n#--maincode----------------\n\nn = int(input())\nprint(sigma(n-1))", "def delete_head_zeros(n):\n\tn = str(n)\n\tl = len(n)\n\tif \".\" in n:\n\t\tl = n.find(\".\")\n\thead_zeros = 0\n\tfor i in range(l - 1):\n\t\tif n[i] == \"0\":\n\t\t\thead_zeros += 1\n\t\telse:\n\t\t\tbreak\n\n\treturn n[head_zeros:]\n\n# compare a, b\n# a, b: int or string\ndef bigint_compare(a, b):\n\ta = delete_head_zeros(a)\n\tb = delete_head_zeros(b)\n\tif len(a) > len(b):\n\t\treturn 1\n\telif len(a) < len(b):\n\t\treturn -1\n\telse:\n\t\tif a > b:\n\t\t\treturn 1\n\t\telif a < b:\n\t\t\treturn -1\n\t\telse:\n\t\t\treturn 0\n\n# calculate a + b\n# a, b: int or string\ndef bigint_plus(a, b):\n\ta = str(a)\n\tb = str(b)\n\n\td = max([len(a), len(b)])\n\ta = '0' * (d - len(a)) + a\n\tb = '0' * (d - len(b)) + b\n\n\tans = \"\"\n\tcarry = 0\n\tfor i in range(d):\n\t\ts = int(a[-i-1]) + int(b[-i-1]) + carry\n\t\tcarry = s // 10\n\t\tans = str(s % 10) + ans\n\telse:\n\t\tif carry:\n\t\t\tans = str(carry) + ans\n\n\treturn ans\n\n# calculate a - b\n# a, b: int or string\ndef bigint_minus(a, b): \n\ta = str(a)\n\tb = str(b)\n\tM = []\n\tm = []\n\tsign = \"\"\n\n\tif len(a) > len(b) or (len(a) == len(b) and a >= b):\n\t\t[M, m] = [a, b]\n\telse:\n\t\t[M, m] = [b, a]\n\t\tsign = \"-\"\n\tm = '0' * (len(M) - len(m)) + m\n\n\tans = \"\"\n\tborrow = 0\n\tfor i in range(len(M)):\n\t\ts = int(M[-i-1]) - int(m[-i-1]) - borrow\n\t\tif s < 0:\n\t\t\tborrow = 1\n\t\t\ts += 10\n\t\telse:\n\t\t\tborrow = 0\n\t\tans = str(s) + ans\n\n\treturn sign + delete_head_zeros(ans)\n\n# calculate a * b\n# a, b: int or string\ndef bigint_multiply(a, b):\n\ta = str(a)\n\tb = str(b)\n\n\tmd = []\n\tfor j in range(len(b)):\n\t\tcarry = 0\n\t\tmj = \"\"\n\t\tfor i in range(len(a)):\n\t\t\tm = int(a[-i-1]) * int(b[-j-1]) + carry\n\t\t\tcarry = m // 10\n\t\t\tmj = str(m % 10) + mj\n\t\telse:\n\t\t\tif carry:\n\t\t\t\tmj = str(carry) + mj\n\t\tmd.append(mj)\n\n\tans = 0\n\tfor k in range(len(md)):\n\t\tans = bigint_plus(md[k] + \"0\" * k, ans)\n\n\treturn ans\n\n\n# calculate a / b to d digits after decimal point\n# a, b, d: int or string\ndef bigint_divide(a, b, d = 0):\n\ta = str(a)\n\tb = str(b)\n\td = int(d)\n\tif d < 0:\n\t\td = 0\n\n\tans = \"\"\n\tr = \"\"\n\tfor i in range(len(a) + d):\n\t\tq = 0\n\t\tif i < len(a):\n\t\t\tr += a[i]\n\t\telif i == len(a):\n\t\t\tans += \".\"\n\t\t\tr += \"0\"\n\t\telse:\n\t\t\tr += \"0\"\n\n\t\tif bigint_compare(r, b) == -1:\n\t\t\tans += str(q)\n\t\telse:\n\t\t\twhile bigint_compare(r, b) >= 0:\n\t\t\t\tr = bigint_minus(r, b)\n\t\t\t\tq += 1\n\t\t\tans += str(q)\n\n\treturn delete_head_zeros(ans)\n\ndef main():\n\tN = input()\n\tprint(\n\t\tbigint_divide(\n\t\t\tbigint_multiply(N, bigint_minus(N, 1))\n\t\t\t,2\n\t\t)\n\t)\n\nmain()", "def slove():\n    n = int(input())\n    print(n*(n-1)//2)\n\ndef __starting_point():\n    slove()\n__starting_point()", "N = int(input())\nprint(N*(N-1)//2)", "n = int(input())\nprint(((n*(n-1))//2))\n", "N=int(input())\nn=N-1\nres = n*(n+1)//2\nprint(res)", "n=int(input())\nprint(n*(n-1)//2)", "N=int(input())\n\nprint((((N-1)*N)//2))\n", "n = int(input())\nprint(n * (n - 1) // 2)", "N = int(input())\nans = (N + 1) * (N - 2) // 2 + 1\nprint(ans)", "n = int(input())\nprint(n * (n - 1) // 2)", "N = int(input())\n\nmodsum = ((1+(N-1))*(N-1))//2\n\nprint(modsum)", "N = int(input())\nN -= 1\n\nans = (N + 1) * N // 2\n\nprint(int(ans))", "# \u30b5\u30f3\u30d7\u30eb2\u3092\u9069\u5f53\u306bsum(range)\u3057\u305f\u3089\u306a\u3093\u304b\u308f\u304b\u3063\u305f\n# \u611a\u76f4\u306brange\u3059\u308b\u3068TLE\u306a\u308b\u306e\u3067\u7b49\u5dee\u6570\u5217\u306e\u548c\u3092\u4f7f\u3046\nn = int(input())\nx = (n * (n + 1)) // 2\nprint((x - n))\n", "n = int(input())\nprint(int(n*(n-1)//2))", "N = int(input())\nprint((N*(N-1)//2))\n", "n = int(input())\nprint(n*(n-1)//2)", "n=int(input())\n\nif n==1: print(0); return;\nif n==2: print(1); return;\n\nif n%2==1:\n  print(((n-1)+1)*((n-1)//2))\nelse:\n  print(((n-1)+1)*((n-1)//2)+n//2)", "n =int(input())\nans = n * (n - 1) // 2\nprint(ans)", "N = int(input())\nprint(int((N*(N-1))//2))", "n=int(input())\nprint(n*(n-1)//2)", "n = int(input())\nprint((n*(n-1)//2))\n", "n=int(input())\n\nans=n*(n-1)//2\n  \nprint(int(ans))", "n = int(input())\nprint(n * (n - 1) // 2)", "n=int(input())\nprint(n*(n+1)//2-n)", "n=int(input())\nprint((n-1)*n//2)", "n = int(input())\nprint(int((n * (n - 1)) // 2))", "N = int(input())\nAnswer = N*(N-1)//2\nprint(int(Answer))", "n = int(input())-1\nprint(int(n/2*10)*(n+1)//10)", "n=int(input())\nprint(n*(n-1)//2)", "N = int(input())\nprint(int((N*(N-1))//2))", "N = int(input())\nprint(N*(N-1)//2)", "n = int(input())\nans = (n)*(n-1)//2\nprint((int(ans)))\n", "a = int(input())\nprint(((a)*(a-1)//2))\n", "N =int(input())\n\nprint(((N-1)*(N))//2)", "N = int(input())\nprint((N - 1) * N // 2)", "n = int(input())\nprint(n*(n-1)//2)", "n = int(input())\nprint((n*(n-1)//2))\n", "n=int(input())\nprint((n*(n-1)//2))\n", "n=int(input())\nprint((n*(n+1))//2-n)", "N = int(input())\nprint(N * (N - 1) // 2)", "N=int(input())\nprint(N*(N-1)//2)", "n = int(input())\nprint(n*(n-1)//2)", "N=int(input())\nprint(((N-1)*N//2))\n", "n = int(input())\nprint(n*(n-1)//2)", "n=int(input())\nif n==1: print(0); return;\nif n==2: print(1); return;\nprint(n*(n-1)//2)", "N = int(input())\nN = N*(N+1)//2-N\nprint(N)", "n = int(input())\nprint(n*(n-1)//2)", "n=int(input())\nprint(n*(n-1)//2)", "N = int(input())\n\nans = N*(N-1)//2\nprint(ans)", "3\n#coding: utf-8\n\nN = int(input())\n\nret = (N * (N-1)) // 2\nprint(ret)", "N = int(input())\n\nans = N*(N+1)//2 - N\n\nprint(ans)\n", "n = int(input())\nprint((n*(n-1)//2))\n", "N = int(input())\n\nif N == 1:\n  print((0))\n  return\n\nif N % 2 == 0:\n  a = N//2\n  ans = (N-1)*a\nelse:\n  a = (N-1)//2\n  ans = (N)*a\n\nprint(ans)\n    \n", "n=int(input())\nprint(n*(n-1)//2)", "N = int(input())\n\nprint((N*(N-1)//2))\n", "N = int(input())\nprint((N * (N-1)//2))", "n = int(input())-1\n\nprint(n*(n+1)//2)", "def resolve():\n    n = int(input())\n    print((n-1)*n//2)\nresolve()", "n = int(input())\nprint((1 + n) * n // 2 - n)", "N = int(input())\nprint(N*(N+1)//2-N)", "N=int(input())\n\nprint(((N-1)*N)//2)", "N = int(input())\nN -= 1\nprint(N * (N+1) // 2)", "n=int(input())\nprint((n*(n-1))//2)", "import sys\nimport heapq\n\n\ninput = sys.stdin.readline\nn = int(input())\nresult = n*(n-1)//2\nprint(result)\n", "a = int(input())\nprint(a*(a-1)//2)", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef Main():\n    n = read_int()\n    # P=2,3,...N-1,N,1\n    # i=1,2,...N-2,N-1,N\n    print(n*(n-1)//2)\n\ndef __starting_point():\n    Main()\n__starting_point()", "n=int(input());print(n*(n-1)//2)", "n=int(input())\nprint((n*(n-1))//2)", "N = int(input())\nprint(int(N*(N-1)//2))", "import math\nimport collections\nimport itertools\n\ndef YesNo(Bool):\n    if(Bool):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\ndef resolve():\n\n    N=int(input())\n    ans=((N)*(N-1))\n\n    print((ans//2))\n\nresolve()\n", "N = int(input())\nans = N * (N - 1) // 2\nprint(ans)", "n=int(input())\nif n==1:\n  print(0)\nelse:\n  print(((n-1)*n)//2)", "N = int(input())\nans = (N-1)*N//2\nprint(ans)", "n=int(input())\nprint(n*(n-1)//2)", "N = int(input())\nans = (N * (N-1))//2\nprint(int(ans))", "N = int(input())\nprint(N*(N-1)//2)", "N = int(input())\nprint((N*(N-1)//2))\n", "#ABC139 D\n\nN = int(input())\nprint(int(N*(N-1)//2))", "N = int(input())\nif N % 2 == 0:\n    print((1+N)*(N//2)-N)\nelse:\n    print((1+N-1)*(N//2))", "n = int(input())\nn = n-1\nprint(n*(n+1)//2)", "N=int(input())\nprint(N*(N-1)//2)", "N=int(input())\n\nans = int(N*(N-1)//2)\n\n\nif N == 1:\n\tprint((0))\nelse:\n\tprint(ans)\n", "N = int(input())\n\nprint(((N*(N-1))//2))\n", "n=int(input())\nprint(n*(n-1)//2)", "N=int(input())\n\nprint(N*(N-1)//2)", "N = int(input())\n\nprint((int(N*(N-1)//2)))\n", "n=int(input())\nans=(n*(n-1))//2\nprint(ans)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\n# mod = 10**9 + 7\n#mod = 9982443453\nmod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nn = I()\nprint((((n-1) * (n))//2))\n", "N = int(input())\n\nprint(N*(N-1)//2)", "n = int(input())\nprint(((n*(n-1))//2))\n", "n = int(input())\nprint(n*(n-1)//2)", "N=int(input())\nprint(N*(N-1)//2)", "n = int(input())\nprint(((n-1)*n)//2)", "def main():\n    N = int(input())\n    ans = (N*(N-1))//2\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()"]