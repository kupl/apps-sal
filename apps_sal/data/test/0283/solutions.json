["def prime(x):\n    if x < 2:\n        return False\n    if x == 2:\n        return True\n    if x % 2 == 0:\n        return False\n\n    for d in range(3, x, 2):\n        if d * d > x:\n            break\n        if x % d == 0:\n            return False\n\n    return True\n\ndef main():\n    n = int(input())\n    for m in range(1, 1001):\n        if not prime(n * m + 1):\n            ans = m\n            break\n\n    print(ans)\n\nmain()\n", "n = int(input())\ndef ispr(m):\n\ti = 2\n\twhile i * i <= m:\n\t\tif m % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\nfor i in range(1, 1001):\n\tif not ispr(n * i + 1):\n\t\tprint(i)\n\t\treturn", "def not_pr(x):\n    return sum(x % i == 0 for i in range(2, x)) != 0\n\nread = lambda: map(int, input().split())\nn = int(input())\nfor m in range(1, 1001):\n    if not_pr(n * m + 1):\n        print(m)\n        return", "def is_prime(n):\n\ti = 2\n\twhile i * i <= n:\n\t\tif n % i == 0:\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n\nn = int(input())\nfor i in range(1, 1001):\n\tif not is_prime(n * i + 1):\n\t\tprint(i)\n\t\tbreak\n", "def prime(n):\n\ti = 2\n\twhile (i * i <= n):\n\t\tif (n % i == 0):\n\t\t\treturn False\n\t\ti += 1\n\treturn True\n\ndef main(n):\n\tm = 1\n\twhile(True):\n\t\tif (not prime(m * n + 1)):\n\t\t\tprint(m)\n\t\t\treturn\n\t\tm += 1\n\n\nmain(int(input()))", "\ndef primesSieve(limit):\n    def internalPrimesSieve(limit):\n        a = [True] * limit # Initialize the primality list\n        a[0] = a[1] = False\n\n        for (i, isprime) in enumerate(a):\n            if isprime:\n                yield i\n                for n in range(i*i, limit, i): # Mark factors non-prime\n                    a[n] = False\n    return [p for p in internalPrimesSieve(limit)]\n\nn = int(input())\nprimes = primesSieve(1000002)\nfor i in range(1,1001):\n    if n*i + 1 not in primes:\n        print(i)\n        break\n", "3\n\ndef is_prime(x):\n    if x == 1:\n        return False\n    i = 2\n    while i * i <= x:\n        if x % i == 0:\n            return False\n        i += 1\n    return True\n\n\nn = int(input())\nm = 1\nwhile is_prime(n * m + 1):\n    m += 1\nprint(m)\n", "#!/usr/bin/env python3\n\ndef main():\n    import itertools\n\n    def is_prime(x):\n        if x == 2:\n            return True\n        if x & 0x1 == 0:\n            return False\n        i = 3\n        while i * i <= x:\n            if x % i == 0:\n                return False\n            i += 2\n        return True\n\n    try:\n        while True:\n            n = int(input())\n            for m in itertools.count(1):\n                if not is_prime(n * m + 1):\n                    print(m)\n                    break\n\n    except EOFError:\n        pass\n\nmain()\n", "n = int(input())\n\ndef yes(x):\n\tif (x < 3):\n\t\treturn 0\n\telse:\n\t\tfor y in range(2,x):\n\t\t\tif (x%y == 0):\n\t\t\t\treturn 1\n\t\treturn 0\n\n\nfor m in range(1,1001):\n\tif yes(n*m+1):\n\t\tprint(m)\n\t\tbreak", "n = int(input())\n\ndef isPrime(x):\n    for j in range(2,round(x**0.5)+1):\n        if not x%j: return False\n    return True\n\nfor m in range(1,1000):\n    if not isPrime(m*n+1):\n        print(m)\n        break", "from math import sqrt\nn=int(input())\na=0\nm=0\nwhile True:\n    m+=1\n    a=n*m+1\n    for i in range(2,int(sqrt(a)+1)):\n        if a%i==0:\n            print(m)\n            return\n", "import math\ndef is_prime(n):\n    if n % 2 == 0 and n > 2: \n        return False\n    return all(n % i for i in range(3, int(math.sqrt(n)) + 1, 2))\nn=int(input())\nfor i in range(1,100):\n    if not is_prime(n*i+1):\n        print(i)\n        break\n", "import math\n\ndef is_prime(n):\n    if n % 2 == 0 and n > 2: \n        return False\n    return all(n % i for i in range(3, int(math.sqrt(n)) + 1, 2))\n\nn = int(input())\nm = 1\n\nwhile (is_prime((n*m)+1)):\n\tm+=1\nprint(m)", "#autor @ShymCoder\nimport math\ndef is_prime(n):\n    if n % 2 == 0 and n > 2: \n        return False\n    return all(n % i for i in range(3, int(math.sqrt(n)) + 1, 2))\nn=int(input())\nfor i in range(1,1001):\n    if not is_prime(n*i+1):\n        print(i)\n        break\n", "n=int(input())\n\nflag=True\n\nm=1\na=[True]*1000001\na[1]=False\n\nfor i in range(2,len(a)):\n    if a[i]:\n        for j in range(2*i,len(a),i):\n            a[j]=False\n\nwhile flag:\n    if a[m*n+1]==False:\n        flag=False\n        print(m)\n    else:\n        m+=1\n", "def prime(x):\n    for i in range(2, 1001):\n        if x % i == 0 and i != x:\n            return False\n    return True\n\n\nn = int(input())\nfor m in range(1, 1001):\n    if not prime(n * m + 1):\n        print(m)\n        return\n", "\n\nisp = [True]*(10**6+8)\nisp[0] = isp[1] = False\n\ni = 2\nN = 10**6 + 7\nwhile i*i <= N :\n\tif isp[i] : \n\t\tfor j in range(i*i , N+1 , i  ) : \n\t\t\tisp[j] = False\n\ti += 1\nn = int(input())\nfor m in range(1,1001) : \n\tif not isp[n*m + 1] :\n\t\tprint(m)\n\t\tbreak\n", "#!/usr/bin/env pypy3\n# -*- coding: UTF-8 -*-\nimport sys\nimport re\nimport math\nimport itertools\nimport collections\nimport bisect\n#sys.stdin=file('input.txt')\n#sys.stdout=file('output.txt','w')\n#10**9+7\nmod=1000000007\n#mod=1777777777\npi=3.1415926535897932\nIS=float('inf')\nxy=[(1,0),(-1,0),(0,1),(0,-1)]\nbs=[(-1,-1),(-1,1),(1,1),(1,-1)]\ndef niten(a,b): return abs(a-b) if a>=0 and b>=0 else  a+abs(b) if a>=0 else abs(a)+b if b>=0 else abs(abs(a)-abs(b))\ndef fib(n): return [(seq.append(seq[i-2] + seq[i-1]), seq[i-2])[1] for seq in [[0, 1]] for i in range(2, n)]\ndef gcd(a,b): return a if b==0 else gcd(b,a%b)\ndef lcm(a,b): return a*b/gcd(a,b)\ndef eucl(x1,y1,x2,y2): return ((x1-x2)**2+(y1-y2)**2)**0.5\ndef choco(xa,ya,xb,yb,xc,yc,xd,yd): return 1 if abs((yb-ya)*(yd-yc)+(xb-xa)*(xd-xc))<1.e-10 else 0\ndef pscl(num,l=[1]):\n    for i in range(num):\n        l = map(lambda x,y:x+y,[0]+l,l+[0])\n    return l\n\ndef prime_t(t):\n    i=2\n    while i**2<=t:\n        if t%i==0:\n            return 0\n        i+=1\n    return 1\n\nl=[]\nfor i in range(2,10000):\n    if prime_t(i):\n        l.append(i)\n\nn=int(input())\nfor i in range(1,1001):\n    if (n*i+1) not in l:\n        print(i)\n        return", "import math\n\n\ndef check(n):\n    q = int(math.sqrt(n))\n    for i in range(2, q + 1):\n        if not (n % i):\n            return False\n    return True\n\n\nn = int(input())\nfor i in range(1, 1000):\n    if not check(n * i + 1):\n        print(i)\n        break"]