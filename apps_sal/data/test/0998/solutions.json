["n, x = list(map(int, input().split()))\na = []\nlst = 0\nfor i in range(1, 1 << n):\n  if i ^ x > i:\n    a.append(i ^ lst)\n    lst = i\nprint(len(a))\nprint(' '.join(str(i) for i in a))\n", "import sys\ninput = sys.stdin.readline\n\nn,x=list(map(int,input().split()))\n\nif n==x==1:\n    print(0)\n    return\n\n\nANS=[]\nfor i in range(n):\n    if i+1==(x).bit_length():\n        continue\n    ANS=ANS+[(1<<i)]+ANS\n\nprint(len(ANS))\nprint(*ANS)\n", "N, X = list(map(int, input().split()))\nif X == 0 or X >= 2**N:\n    A = [a for a in range(N)]\nelse:\n    for i in range(N):\n        if (1<<i) & X:\n            A = [a for a in range(N) if a != i]\n            break\n    \ndef calc(B):\n    if B:\n        b = B[-1]\n        t = calc(B[:-1])\n        return t + [1<<b] + t\n    return []\n\nca = calc(A)\nprint(len(ca))\nif len(ca):\n    print(*ca)\n", "\ndef main():\n    buf = input()\n    buflist = buf.split()\n    n = int(buflist[0])\n    x = int(buflist[1])\n    npow2 = int(2 ** n)\n    if n == 1:\n        if x == 1:\n            print(0)\n        else:\n            print(1)\n            print(1)\n        return\n    mask = x\n    if x >= npow2:\n        mask = 0\n    available = set()\n    for i in range(1, npow2):\n        if i != x:\n            available.add(i)\n    a = []\n    while available:\n        new_elem = available.pop()\n        new_elem = new_elem ^ mask\n        a.append(new_elem)\n        if x < npow2:\n            elem_to_remove = new_elem ^ x\n            available.remove(elem_to_remove ^ mask)\n        mask = mask ^ new_elem\n    print(len(a))\n    print(' '.join(list(map(str, a))))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, x = map(int, input().split())    \nres = []\ns = {x}\nprev = 0\nfor i in range(1, 1 << n):\n    curr = prev ^ i\n    if curr in s: continue\n    res.append(curr)\n    prev = i\n    s.add(x ^ i)\nprint(len(res))\nprint(*res)", "#Bhargey Mehta (Sophomore)\n#DA-IICT, Gandhinagar\nimport sys, math, queue, bisect\n#sys.stdin = open(\"input.txt\", \"r\")\nMOD = 10**9+7\nsys.setrecursionlimit(1000000)\n\nn, x = map(int, input().split())\ntaken = {0, x}\nb = [0]\nfor i in range(1, 1<<n):\n    if i not in taken and i^x not in taken:\n        b.append(i)\n        taken.add(i)\n\nb = [b[i]^b[i-1] for i in range(1, len(b))]\nprint(len(b))\nprint(*b)", "n,x=map(int,input().split())\nif x>=2**n:\n    print(2**n-1)\n    print(*([1]+[i^(i+1) for i in range(1,2**n-1)]))\nelse:\n    print(2**(n-1)-1)\n    if n==1:\n        return\n    a=[]\n    bad=[0]*(2**n)\n    bad[0],bad[x]=1,1\n    for i in range(2**n):\n        if bad[i]==0:\n            a.append(i)\n            bad[i]=1\n            bad[i^x]=1\n    print(*([a[0]]+[a[i]^a[i+1] for i in range(len(a)-1)]))", "n, x = list(map(int, input().split()))\nnn = 2 ** n\nif x >= nn:\n    x = 0\n\nans = []\n\nfor i in range(n):\n    oks = [True] * nn\n    oks[x] = False\n    cur = 0\n    for j in ans[::-1]:\n        cur ^= j\n        oks[cur] = False\n        oks[cur ^ x] = False\n    try:\n        a = next(j for j, ok in enumerate(oks[1:], 1) if ok)\n    except StopIteration:\n        break\n    ans = [*ans, a, *ans]\n\nprint(len(ans))\nif ans:\n    print(' '.join(map(str, ans)))\n", "def gns():\n    return [int(x) for x in input().split()]\nn,x=gns()\n\n# if len(str(x))>n:\n#     n+=1\nif n==1:\n    if x==1:\n        print(0)\n        quit()\n    print(1)\n    print(1)\n    quit()\nb=len(bin(x))-2\nif x!=1:\n    ans=[1]\nelse:\n    ans=[2]\ncur=1\nfor i in range(n-2):\n    if cur==b-1:\n        cur+=1\n    ans=ans+[1<<cur]+ans\n    cur+=1\nif x>=(1<<n):\n    ans=ans+[1<<cur]+ans\n# y=((1<<n)-1)^x\ny=x\n# if x<(1<<n) and (x+1)!=(1<<n):\n#     ans=[c^y for c in ans]\nprint(len(ans))\nprint(' '.join(map(str,ans)))\n", "n, x = map(int, input().split())\n\nans = []\n\n\nlast = 0\nfor i in range(1, 2 ** n) : \n    if ((i ^ x) > i) :\n        ans.append(last ^ i)\n        last = i\n\nprint(len(ans))\nfor i in ans :\n    print(i, end = \" \")\n", "#\nn, x  = list(map(int, input().split()))\n\ndef creat(n, x):\n    if x > 2**n:\n        arr = [i for i in range(1, 2**n)]\n        return arr\n        \n    used  = {i:False for i in range(1, 2**n)}\n    arr   = []\n\n    for i in range(1, 2**n):\n        if i == x:continue\n        if used[i] == True: continue\n        used[i]    = True    \n        used[i^x]  = True\n        arr.append(i)\n    \n    return arr\n\na  = creat(n, x)\nif len(a) == 0:\n    print(0)\nelse:    \n    a_ = [a[0]] \n    a_.extend([u ^ v for u, v in zip(a[1:], a[:-1])])\n\n    print(len(a_))\n    print(' '.join([str(i) for i in a_]))   \n\n", "N, X = map(int, input().split())\n\nex = [False] * 2 ** 18\nex[0] = True\nans = [0]\n\nfor i in range(1, 2 ** N):\n    if ex[i ^ X]:\n        continue\n    else:\n        ans.append(i)\n        ex[i] = True\n\nprint(len(ans) - 1)\nfor i in range(1, len(ans)):\n    print(ans[i] ^ ans[i-1], end=\" \")\n", "n, x = [int(x) for x in input().split()]\nans = []\nvis = [0] * ((2 ** 18) + 1)\nlmt = 2 ** n\nxor = 0\nvis[0], vis[x] = 1, 1\nfor i in range(1, lmt):\n    if vis[i]:\n        continue\n    ans.append(xor ^ i)\n    xor = i\n    vis[i] = 1\n    vis[i ^ x] = 1\nprint(len(ans))\nprint(*ans)\n    \n", "n,x=list(map(int,input().split()))\nn=1<<n\nans=(n>>(x<n))-1\nprint(ans)\nq,t=0,0\na=[0]*n\nfor i in range(1,n):\n    if i<(i^x):\n        a[t]=i^q\n        q,t=i,t+1\nprint(*a[:t])\n", "n,x=map(int,input().split())\nn=1<<n\nans=(n>>(x<n))-1\nprint(ans)\nq,t=0,0\na=[0]*n\nfor i in range(1,n):\n    if i<(i^x):\n        a[t]=i^q\n        q,t=i,t+1\nprint(*a[:t])", "v=[0]\nn,x=map(int,input().split())\ne=[0]*(1<<18)\ne[0]=1\nfor i in range(1,1<<n):\n    if e[x^i]==1:continue\n    e[i]=1\n    v.append(i)\nprint(len(v)-1)\nprint(*[v[i]^v[i-1] for i in range(1,len(v))])", "n, x = map(int, input().split())\n\nans = [0]\n\nfor i in range(1, 2 ** n) : \n    if ((i ^ x) > i) :\n        ans.append(i)\n\nprint(len(ans) - 1)\nfor i in range(1, len(ans)) :\n    print(ans[i] ^ ans[i - 1], end = \" \")", "n, x = map(int, input().split())\nif x>=2**n:\n    prefix_array = []\n    for i in range(1, 2**n):\n        prefix_array.append(i)\nelse:\n    prefix_array = []\n    compl = {}\n    for i in range(1, 2**n):\n        if i==x: continue\n        try:\n            if compl[i]: pass\n        except:\n            prefix_array.append(i)\n            compl[i^x] = True\nif prefix_array==[]: print(0)\nelse:\n    res = [prefix_array[0]]\n    for i in range(len(prefix_array)-1):\n        res.append(prefix_array[i]^prefix_array[i+1])\n    print(len(res))\n    for i in res: print(i, end=' ')\n    print()\n", "n,x = map(int,input().split())\nmark = [0 for x in range(1<<18 +1)]\nmark[x] = 1\ncurent =0\nmaxA = 1<<n\nans = []\nfor i in range(1,maxA):\n    if i!=x:\n        result = i^x\n        if mark[i]==0:\n            ans.append(i^curent)\n            mark[result]=1\n            mark[i]=1\n            curent=i\n        elif mark[result]==0 and result<maxA:\n            ans.append(curent^result)\n            mark[result]=1\n            curent=result\nprint(len(ans))\nprint(*ans)", "n , x = list(map(int,input().split()))\nmark = [0 for x in range(1 << 18 +1)]\nmark[x] = 1\ncur = 0\nMAXN = 1 << n\nans = []\nfor i in range(1 , MAXN):\n    if i != x:\n        res = i ^ x\n        if mark[i] == 0:\n            ans.append(i^cur)\n            mark[res] = 1\n            mark[i] = 1\n            cur = i\nprint(len(ans))\nprint(*ans)\n", "n, x = list(map(int, input().split()))\n\nk, b = 1 << n, []\nif x >= k:\n    print(k - 1)\n    b = list(range(1, k))\nelse:\n    print((k - 2) >> 1)\n    _b, b = set(range(1, k)), set()\n    for bi in _b:\n        b.add(bi)\n        if x ^ bi in b:\n            b.remove(x ^ bi)\n    if x in b:\n        b.remove(x)\n\nif b:\n    b = list(b)\n    a = [b[0]] + [b[i] ^ b[i + 1] for i in range(len(b) - 1)]\n    print(*a)\n", "def main():\n\tn, x = list(map(int, input().split()))\n\tf = []\n\tn = 1 << n\n\tcx = [0 for _ in range(n + 299)]\n\tfor i in range(n):\n\t\tif Find_x(int(x ^ i), f) == False: \n\t\t\tf.append(i)\n\t##print (f)\n\tprint(len(f) - 1)\n\tfor i in range(len(f) - 1):\n\t\tprint(f[i] ^ f[i + 1], end = ' ')\n\ndef Find_x(x, a):\n\tl = 0\n\tr = len(a) - 1\n\twhile l <= r:\n\t\tm = int((l + r) / 2)\n\t\tif a[m] == x: return True\n\t\tif a[m] > x: r = m - 1\n\t\telse : l = m + 1\n\treturn False\n\ndef __starting_point():\n\tmain()\n__starting_point()", "n, x = list(map(int ,input().split()))\na = []; d = {0:True}; d1=[0]\nif (x<(1<<n)):\n\n    \n\n    for t in range(1, 1<<n):\n        \n        if not d.get(t^x, False):\n            a.append(t^d1[-1])\n            d[t] = True\n            d1.append(t)\n    print(len(a))\n    print(\" \".join(map(str,a)))\nelse:\n    for t in range(1, (1<<n)):\n        \n        \n        a.append(t^(t-1))  \n    print(len(a))\n    print(\" \".join(map(str,a)))\n      \n", "n,x=map(int,input().split())\nmarkings=[0 for i in range(2**n-1)]\nfor i in range(1,2**n):\n    #print(i,markings)\n    if markings[i-1]==0 and (x^i)<(2**n) and i!=x:\n        markings[(x^i)-1]=1 \nif x<2**n:\n    markings[x-1]=1\narr=[]\nfor i in range(2**n-1):\n    if markings[i]==0:\n        arr.append(i+1)\nprint(len(arr))\nif len(arr)>0:\n    print(arr[0],end=\" \")\n    for i in range(1,len(arr)):\n        print(arr[i]^arr[i-1],end=\" \")\n    print(\"\")\n        \n", "from sys import stdin\n# stdin=open('input.txt')\n\ndef input():\n\treturn stdin.readline().strip()\n\n\n# from sys import stdout\n# stdout=open('input.txt',mode='w+')\n\n# def print1(x, end='\\n'):\n# \tstdout.write(str(x) +end)\n\n\n# a, b = map(int, input().split())\n\n# l = list(map(int, input().split()))\n\n\n# CODE BEGINS HERE.................\n\nimport math\n\nn, x = list(map(int, input().split()))\n\nseen = [False] * (2**(18))\nseen[0] = True\nseen[x] = True\n\na = []\npref_sum = 0\nfor i in range(2**n):\n\tif seen[i]:\n\t\tcontinue\n\ta.append(pref_sum ^ i)\n\tpref_sum = i\n\tseen[i] = True\n\tseen[x^i] = True\nprint(len(a))\nprint(*a)\n\n# CODE ENDS HERE....................\n# stdout.close()\n\n"]