["import sys\n\nn, k = (int(i) for i in input().split())\n\nff = [1] * (n + 1)\n\nfor i in range(1, n + 1) :\n\tff[i] = ff[i - 1] * i\n\ndd = [0] * (n + 1)\n\ndd[1] = 0\ndd[2] = 1\n\nfor i in range(3, n + 1) :\n\tdd[i] = (i - 1) * (dd[i - 1] + dd[i - 2])\n\t\nans = ff[n]\n\nfor i in range(n - k) :\n\tc = ff[n] // ff[n - i]\n\tc = c // ff[i]\n\tc = c * dd[n - i]\n\t\n\tans -= c\n\nprint(ans)", "import sys\n\nn, k = (int(i) for i in input().split())\n\nff = [1] * (n + 1)\n\nfor i in range(1, n + 1) :\n\tff[i] = ff[i - 1] * i\n\ndd = [0] * 3\n\ndd[1] = 0\ndd[2] = 1\n\nfor i in range(3, n + 1) :\n\tdd.append((i - 1) * (dd[i - 1] + dd[i - 2]))\n\t\nans = ff[n]\n\nfor i in range(n - k) :\n\tc = ff[n] // ff[n - i]\n\tc = c // ff[i]\n\tc = c * dd[n - i]\n\t\n\tans -= c\n\nprint(ans)", "from math import factorial as fac\n\ndef binomial(x, y):\n    try:\n        binom = fac(x) // fac(y) // fac(x - y)\n    except ValueError:\n        binom = 0\n    return binom\n\nn,k = [int(i) for i in input().split()]\n\nif k == 1:\n    print(1)\nelif k == 2:\n    print(binomial(n,2) + 1)\nelif k == 3:\n    print(binomial(n,3) * 2 + binomial(n,2) + 1)\nelif k == 4:\n    print(binomial(n,4) * 9 + binomial(n,3) * 2 + binomial(n,2) + 1)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/9 23:24\n\n\"\"\"\n\n\nN, K = list(map(int, input().split()))\n\nif K == 1:\n    print(1)\nelif K == 2:\n    print(1 + N*(N-1)//2)\nelif K == 3:\n    print(1 + N*(N-1)//2 + N*(N-1)*(N-2)//3)\nelif K == 4:\n    print(1 + N * (N - 1) // 2 + N * (N - 1) * (N - 2) // 3 + 3 * N * (N - 1) * (N - 2) * (N-3) // 8)\n", "n, k = map(int, input().split())\nans = 0\nif k >= 1:\n\tans += 1\nif k >= 2:\n\tans += n * (n - 1) // 2\nif k >= 3:\n\tans += n * (n - 1) * (n - 2) // 3\nif k >= 4:\n\tans += n * (n - 1) * (n - 2) * (n - 3) // (4 * 3 * 2 * 1) * 9\nprint(ans)", "import sys\n\ndef main():\n\targs = sys.stdin.readline()[:-1].split()\n\tn, k = int(args[0]), int(args[1])\n\ta = 1\n\tb = n*(n-1)//2\n\tc = n*(n-1)*(n-2)//6*2\n\td = n*(n-1)*(n-2)*(n-3)//24*9\n\tif k == 1:print(a)\n\tif k == 2:print(a+b)\n\tif k == 3:print(a+b+c)\n\tif k == 4:print(a+b+c+d)\n\nmain()", "n, k = list(map(int, input().split()))\n\nls = [1, 0, 0, 0, 0]\nls[2] = n * (n - 1) // 2\nls[3] = n * (n - 1) * (n - 2) // 3\nls[4] = n * (n - 1) * (n - 2) * (n - 3) * 3 // 8 \nprint(sum(ls[:k + 1]))\n\n\n", "\ndef intersect_size(n, m):\n\tval = 1\n\texponent = n - m\n\tterm = n\n\n\twhile exponent > 0:\n\t\tval *= term\n\t\tterm -= 1\n\t\texponent -= 1\n\n\treturn val\n\nmem_comb = {}\n\ndef comb(n, k):\n\tif n < 0 or k < 0 or n < k:\n\t\treturn 0\n\telif k == 0 or k == n:\n\t\treturn 1\n\telif (n, k) not in mem_comb:\n\t\tm = 1\n\t\tval = 1\n\t\twhile m <= k:\n\t\t\tval *= (n+1 - m)\n\t\t\tval /= m\n\t\t\tm += 1\n\t\tval = round(val)\n\n\t\tmem_comb[(n, k)] = val\n\n\treturn mem_comb[(n, k)]\n\n\ndef at_least_occurrences(n, k):\n\treturn sum((-1)**j * comb(n-k+j-1, j) * intersect_size(n, n-k+j) for j in range(k+1))\n\n\nn, k = [int(x) for x in input().split(' ')]\n\nif n == k:\n\tprint(intersect_size(n, 0))\nelse:\n\tprint(at_least_occurrences(n, k))", "\n\"\"\"\nwhile 1:\n    n, k = map(int, input().split())\n    \n    def solve(n, k):\n        from itertools import permutations\n        res = 0\n        for p in permutations([i for i in range(n)]):\n            c = sum(i == p[i] for i in range(n))\n            if c >= n - k: res += 1\n        return res\n    \n    print(solve(n, k))\n\"\"\" \nn, k = map(int, input().split())\nans = 1\nif k >= 2: ans += n * (n - 1) // 2\nif k >= 3: ans += n * (n - 1) * (n - 2) // 3\nif k >= 4: ans += n * (n - 1) * (n - 2) * (n - 3) // 24 * 9\nprint(ans)", "fact = [1]\n\n\ndef c_n_k(k, n):\n    return fact[n] // (fact[k] * fact[n - k])\n\nn, k = map(int, input().split())\n\nfor i in range(1, n + 1):\n    fact.append(i * fact[i - 1])\n\nans = 1\n\nd = [0, 0, 1, 3, 12, 60, 124]\n\nfor i in range(k, 1, -1):\n    ans += c_n_k(i, n) * (d[i] - d[i] // i)\n\nprint(ans)", "import math\nn, k = map(int, input().split())\n\nfact = [1]*(n+1)\nfor i in range(2, n+1):\n\tfact[i] = fact[i-1]*i\n\ndef Rec2(n):\n\tres = 0\n\tfor i in range(0, n+1):\n\t\tfa = math.pow(-1, i)\n\t\tif (i == 0):\n\t\t\tfa = 1\n\t\tres += fact[n]*(fa)/fact[i]\n\treturn abs(res)\n\ndef Rec(n, k):\n\tif (k == 1):\n\t\treturn 1\n\tresult = 0\n\tresult += ((fact[n])/(fact[k]*fact[n-k]))*Rec2(k)\n\treturn result\n\n\nres = 0\nfor i in range(1, k+1):\n\tres += Rec(n, i)\nprint (int(res))", "n, k = map(int, input().split())\nfacts = [1]\nfor i in range(1, n + 1):\n    facts.append(i * facts[i - 1])\nans = facts[n]\nif k >= 1:\n    ans = 1\nif k >= 2:\n    ans += facts[n] // facts[n - 2] //facts[2]\nif k >= 3:\n    ans += 2 *facts[n] // facts[n - 3] // facts[3]\nif k == 4:\n    ans+= 9 *facts[n] // facts[n - 4] // facts[4]\nprint(ans)", "#D\nimport math\nn, k = map(int, input().split())\n\nfact = [1]*(n+1)\nfor i in range(2, n+1):\n  fact[i] = fact[i-1]*i\n\ndef Rec2(n):\n  res = 0\n  for i in range(0, n+1):\n    fa = math.pow(-1, i)\n    if (i == 0):\n      fa = 1\n    res += fact[n]*(fa)/fact[i]\n  return abs(res)\n\ndef Rec(n, k):\n  if (k == 1):\n    return 1\n  result = 0\n  result += ((fact[n])/(fact[k]*fact[n-k]))*Rec2(k)\n  return result\n\n\nres = 0\nfor i in range(1, k+1):\n  res += Rec(n, i)\nprint (int(res))", "n = [int(i) for i in input().split()]\nif n[1] == 1:\n    print(\"1\")\nelif n[1] == 2:\n    print(int(((n[0]*(n[0]-1))/2)+1))\nelif n[1] == 3:\n    print(int(((n[0]*(n[0]-1))/2)+1+n[0]*(n[0]-1)*(n[0]-2)/3))\nelif n[1] == 4:\n    print(int(((n[0]*(n[0]-1))/2)+1+n[0]*(n[0]-1)*(n[0]-2)/3+(3/8)*n[0]*(n[0]-1)*(n[0]-2)*(n[0]-3)))    \n", "import math\ndef der(n):\n    sm=0\n    p=1\n    for i in range(0,n+1):\n        sm+=p*(math.factorial(n)//math.factorial(i))\n        p=p*(-1)\n    return sm\ndef nCr(n,r):\n    f=math.factorial\n    return (f(n)//(f(r)*f(n-r)))\nn,k=(int(i) for i in input().split())\nans=0\nfor i in range(0,k+1):\n    ans+=(nCr(n,i)*der(i))\nprint(ans)\n    \n", "from math import factorial as f\nn, k = list(map(int, input().split()))\n\n#k = n - k\n#k += 1\n#n += 1\nan = 0\ndr = [0, 0, 1, 2,9]\nfor i in range(n - k, n + 1):\n    r = n - i\n    if r == 0:\n        an += 1\n    elif r != 1:\n        an += dr[r] * f(n) // (f(i) * f(n - i))\n   # print(an, f(nr) // (f(i) * f(n - i)))\nprint(an)\n", "from itertools import combinations, permutations, combinations_with_replacement\n\nn, k = [int(i) for i in input().split()]\n\nkeys = list(range(n))\n\ndef fac(n):\n    f = 1\n    for i in range(1,n+1):\n        f = f*i\n    return f\n\ndef comb(n, k):\n    return fac(n)/(fac(n-k)*fac(k))\n\nc = 0\nfor i in range(1,k+1):\n    if(i == 1):\n        c += 1\n    if(i == 2):\n        c += comb(n, n-i)\n    if(i == 3):\n        c += comb(n, n-i)*2\n    if(i == 4):\n        c += comb(n, n-i)*9\n\nprint(int(c))\n\n", "def factorial(k):\n    ans = 1\n    for i in range(1, k+1):\n        ans *= i\n    return ans\n\nn, k = list(map(int, input().split()))\nans = 0;\ndef A(n, m):\n    ans = 1\n    for x in range(m + 1, n+1):\n        ans *= x\n    return ans\n\nfor i in range(2, k+1):\n    si = 0\n    for j in range(2, i+1):\n        coeff = -1 if j%2 else 1 \n        si += coeff/factorial(j)\n    ans += A(n, n-i)*si\n    \n\nprint(int(ans + 1.5))\n", "n,k=list(map(int,input().split()))\nans=1\nk=min(k,n)\nif k==1:\n    print(1)\nelif k==2:\n    ans+=n*(n-1)//2\n    print(ans)\nelif k==3:\n    ans+=n*(n-1)*(n-2)//3+n*(n-1)//2\n    print(ans)\nelse:\n    ans+=n*(n-1)*(n-2)*(n-3)//4+n*(n-1)*(n-2)*(n-3)//8+n*(n-1)*(n-2)//3+n*(n-1)//2\n    print(ans)\n", "import math\ndef derange(n): return int(math.factorial(n)*sum([((-1)**i)/math.factorial(i) for i in range(n + 1)]))\n\ndef choose(n, k):\n\tans = 1\n\tif n - k < k: k = n - k\n\tfor i in range(k):\n\t\tans *= (n - i)\n\tans /= math.factorial(k)\n\treturn int(ans)\n\ndef almostIdent(n, k):\n\tans = 0\n\tfor i in range(k + 1): ans += choose(n, n - i)*derange(i)\n\treturn ans\n\ns = input().split(\" \")\nn = int(s[0])\nk = int(s[1])\nprint(almostIdent(n, k))", "n, k = [int(x) for x in input().split()]\nif k==1:\n\tprint(1)\nelif k==2:\n\tprint(int(n*(n-1)/2+1))\nelif k==3:\n\tprint(int(n*(n-1)*(n-2)/3+n*(n-1)/2+1))\nelif k==4:\n\tprint(int(3*n*(n-1)*(n-2)*(n-3)/8+n*(n-1)*(n-2)/3+n*(n-1)/2+1))\n\n", "n, k = list(map(int, input().split()))\n\ndef f(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return (n - 1) * (f(n - 1) + f(n - 2))\n\ndef g(n, k):\n    res = 1\n    for i in range(1, k + 1):\n        res *= n - i + 1\n        res //= i\n    return res\n\nres = 1\nfor i in range(1, k + 1):\n    res += g(n, i) * f(i)\nprint(res)\n\n"]