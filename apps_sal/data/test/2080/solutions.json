["#! /usr/bin/env python\n\n# http://codeforces.com/problemset/problem/818/F\n# Problem name ::: F. Level Generation\n# submission number\n\n#212055293\n#508427854\n\n\ndef newest_approach(n):\n    from math import floor, ceil, sqrt\n\n    quad_solv = sqrt(2*n+1/4)-1/2\n    x = floor(quad_solv)\n    y = ceil(quad_solv)\n\n    xed = int(x*(x-1)/2 + n - x)\n    xbr = n - x\n\n    ybr = n - y\n    yed = 2*ybr\n\n    if xed > yed:\n        print(xed)\n        # print(\"nodes = %s :: edges = %s :: bridges = %s\" % (n, xed, xbr))\n    else:\n        print(yed)\n        # print(\"nodes = %s :: edges = %s :: bridges = %s\" % (n, yed, ybr))\n\n    return\n\n\n\ndef main():\n\n    import sys\n\n    data = [line.rstrip() for line in sys.stdin.readlines()]\n    num_graphs = data[0]\n    graph_sizes = [int(x) for x in data[1:]]\n\n    for val in graph_sizes:\n        # binary_search(val)\n        # new_approach(val)\n        newest_approach(val)\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]