["n = int(input())\ndef p(x):\n    ans = 1\n    while x > 0:\n        ans *= x % 10\n        x //= 10\n    return ans\nans = p(n)\nfor i in range(len(str(n))):\n    cans = 9 ** i * p((n // 10 ** i) - 1)\n    ans = max(ans, cans)\nprint(ans)\n", "from sys import setrecursionlimit\nsetrecursionlimit(10**9)\n\ndef check(a):\n    ans = 1\n    a = int(a)\n    while (a):\n        ans *= a % 10\n        a //= 10\n    return ans\n\ndef ans(a, b, cnt):\n    max_right = 0\n    ans_right = 0\n    max_mid = 0\n    ans_mid = 0\n    x = 9**(cnt)\n    ans_right = b + (cnt) * '9'\n    max_right = check(ans_right)\n    a = int(a)\n    b = int(b)\n    while (a % 10 != 9):\n        a += 1\n    while (b % 10 != 9):\n        b -= 1\n    if (a > b):\n        return max_right, ans_right\n    a = str(a)\n    b = str(b)\n    a = (len(b) - len(a)) * '0' + a\n    if (a != b and len(a) > 1):\n        max_mid, ans_mid = ans(a[:-1], b[:-1], cnt + 1)\n    else:\n        ans_mid = b + '9'*(cnt)\n        max_mid = check(ans_mid)\n    if (max_right > max_mid):\n        return max_right, ans_right\n    return max_mid, ans_mid\n\nmass_b = [1]\n\ndef get(a, b):\n    nonlocal mass_b\n    a = str(a)\n    b = str(b)\n    a = (len(b) - len(a)) * '0' + a\n    for i in b:\n        mass_b.append(mass_b[-1] * int(i))\n        \n    return int(ans(a, b, 0)[1])\n\ndef main():\n    a = input()\n    print(check(get(1, a)))\n\nmain()", "x=int(input())\n    \ndef numDigits(r):\n    m=str(r)\n    return len(m)\n    \ndef prodDigits(r):\n    m=str(r)\n    k=1\n    for i in range(len(m)):\n        k*=int(m[i])\n    return k\n\nl=[]\nfor i in range(numDigits(x)):\n    l.append(prodDigits(x))\n    l.append(prodDigits(x-(x%(10**i))-1))\nprint(max(l))", "def pd(d):\n    d = str(d)\n    ans = 1\n    for c in d:\n        ans *= int(c)\n    return ans\n        \n\nS = input()\nD = int(S)\nans = pd(D)\n\nif str(D)[0] == '1':\n    ans = 9 ** (len(str(D)) - 1)\nelse:\n    cur = 0\n    while 10 ** cur < D:\n        ans = max(ans, pd(D - (D % 10 ** cur) - 1))\n        \n        cur += 1 \n        \nprint(ans)\n", "n = int(input())\n\nsn = str(n)\nk = len(sn)\n\n\nans = 1\nfor i in sn:\n    ans *= int(i)\n\nfor i in range(k-1):\n    n -= (10 ** (i+1))\n    n //= (10 ** (i+1))\n    n *= (10 ** (i+1))\n    n += (10 ** (i+1)) - 1\n    if (n < 0):\n        break\n    sn = str(n)\n    res = 1\n    for i in sn:\n        res *= int(i)\n    ans = max(res, ans)\n    #print(n)\n\nprint(ans)\n", "def s(a):\n    a=list(a)\n    while a and a[0]=='0':\n        a.pop(0)\n    prod=1 \n    for i in a:\n        \n        prod*=int(i)\n    return prod \na=input()\nans=[s(a),a]\nfor i in range(len(a)-1, -1, -1):\n    if a[i]=='0':continue\n    b=a[:i] + str(int(a[i])-1) + \"9\"*len(a[i+1:])\n    if s(b) > ans[0]:\n        ans=[s(b),b]\nprint(int(ans[0]))", "def f(x):\n    if x[0]=='1':\n        return 9**(len(x)-1)\n    elif len(x)==1:\n        return int(x)\n    else:\n        return max((int(x[0])-1)*9**(len(x)-1),int(x[0])*f(x[1:]))\nn=input('')\nprint(f(n))\n", "def multi(nu):\n\tr = 1\n\tfor x in str(nu):\n\t\tr *= int(x)\n\treturn r\n\nn = int(input())\nres = multi(n)\nfor i in range(100):\n\taa = n-(n%(10**i))-1\n\tif aa >= 0:\n\t\tres = max(res, multi(aa))\nprint(res)\n", "def f(l):\n    n = len(l)\n    if n == 1:\n        return l[0]\n    \n    nn = pow(9, n - 1)\n    res = nn\n\n    for i in range(1, l[0]):\n        res = max(res, i * nn)\n    res = max(l[0] * f(l[1:]), res)\n    return res\n\nx = [*map(int, input())]\nprint(f(x))", "from collections import defaultdict\nimport atexit\nimport io\nimport sys\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nn = list(input())\nc = 0\nt = 1\nfor i in range(len(n)):\n    j = int(n[i])\n    t2 = t*(j-1)\n    t = t*j\n    c = max(t2*((9)**(len(n)-i-1)) , c)\n    if i==0 and t2==0:\n        c = max(((9)**(len(n)-i-1)) , c)\n        \n        \nc = max(t,c)\nprint(c)\n                \n", "n=input()\nq=len(n)-1\nma=9**q\nq=1\nfor i in range(len(n)):\n    if n[i]!='0':\n        e=q\n        e*=(int(n[i])-1)\n        e*=9**(len(n)-i-1)\n        ma=max(ma, e)\n    q *= int(n[i])\nw=1\nfor i in n:\n    w*=int(i)\nprint(max(ma, w))", "from sys import stdin,stdout\nfrom collections import defaultdict,Counter,deque\nfrom bisect import bisect,bisect_left\nimport math\nfrom itertools import permutations \nimport queue\n\n\n\n\ndef sumOfDigits(x) :  \n      \n    prod = 1\n    while (x) : \n        prod *= (x % 10)  \n        x //= 10;  \n      \n    return prod \n# Returns the maximum number \n# with maximum sum of digits. \ndef findMax(x) : \n      \n    \n    b = 1\n    ans = x \n      \n    \n    while (x!=0) : \n        \n        cur = (x - 1) * b + (b - 1) \n          \n        \n        if (sumOfDigits(cur) > sumOfDigits(ans) or\n        (sumOfDigits(cur) == sumOfDigits(ans) and\n            cur > ans)) : \n                ans = cur \n  \n        # reduces the number \n        # to one unit less \n        x =x // 10\n        b = b * 10\n      \n      \n    return ans \n\n\n\n\n#stdin = open('input.txt','r')\nI = stdin.readline\nn = int(I())\n\nans = findMax(n)\nprod = 1\nfor i in str(ans):\n\tprod*=(int(i))\nprint(prod)\n", "def mp():\n    return map(int, input().split())\n\ndef f(x):\n    r = 1\n    for i in str(x):\n        r *= int(i)\n    return r\n\nn = int(input())\nr = f(n)\nl = len(str(n))\n\nfor i in range(l):\n    s = str(n)\n    k = int(s[:i] + str(max(0, int(s[i]) - 1)) + '9' * (l - i - 1))\n    r = max(r, f(k))\n    \nprint(r)", "n = input()\n\nmx = 9 ** int((len(n) - 1))\nif len(n) == 1:\n    print(n)\n    return\ncnt = 1\nfor i in n:\n    cnt *= int(i)\nif cnt > mx:\n    mx = cnt\nfor i in range(len(n)):\n    cur = n\n\n    if cur[i] != \"0\":\n        cur = cur[:i] + str(int(cur[i]) - 1) + \"9\" * (len(n) - i - 1)\n    cnt = 1\n\n\n    for j in cur:\n        cnt *= int(j)\n    if cnt > mx:\n        mx = cnt\n\nprint(mx)\n", "def calc(n):\n    ret=1\n    while n != 0:\n        ret *= (n % 10)\n        n //= 10\n    return ret\n\ndef solve():\n    n=int(input())\n    ans=calc(n)\n    for i in range(1,10):\n        a=(n+1)%(10**i)\n        if n<a:\n            break\n        ans=max(ans,calc(n-a))\n    return ans\n\nprint(solve())\n", "s = input()\ndef chuj(st,le):\n\tif le == 1:\n\t\treturn int(st)\n\treturn max(max((int(st[0])-1),1) * 9**(le-1), int(st[0]) * chuj(st[1:], le - 1))\nprint(chuj(s,len(s)))", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\nn=li()\n\ndigits=[int(i) for i in n]\n\nma=0\nprod=1\nfor j in digits:\n\tprod=prod*j\n\nma=max(ma,prod)\n\n\n\nfor i in range(1,len(digits)):\n\t#print(digits)\n\tif not digits[~i]==0:\n\t\tdigits[~i]-=1\n\t\tj=1\n\n\t\twhile i-j>=0:\t\n\t\t\tdigits[~(i-j)]=9\n\t\t\tj+=1\n\telse:\n\t\tcontinue\n\n\tprod=1\n\t#print(digits)\n\tfor j in range(len(digits)):\n\t\tif not (j==0 and digits[j]==0):\n\t\t\tprod=prod*digits[j]\n\t\t\n\n\tma=max(ma,prod)\n\t\n\n\t\nprint(ma)\n\n\n\n\n\n", "n = int(input())\n\ndef get_p(n):\n    if n == 0: return 0\n    p = 1\n    while n > 0:\n        p *= n % 10\n        n //= 10\n\n    return p\n\nmx = get_p(n)\nd = 10\nnn = n\nwhile d <= n:\n    nn -= d\n    nn = nn - (nn % d) + (d - 1)\n    mx = max(get_p(nn), mx)\n\n    d *= 10\n\nprint(mx)\n", "def foo(nums):\n    res = 1\n    flag = 0\n    for i in range(len(nums)):\n        if nums[i] != 0:\n            flag = 1\n        if flag:\n            res *= nums[i]\n    return res\n\n\nnums = list(map(int, list(input())))\nres = foo(nums)\nfor i in range(len(nums)):\n    nums2 = nums[:i]\n    if nums[i] != 0:\n        nums2.append(nums[i] - 1)\n        for j in range(len(nums) - i - 1):\n            nums2.append(9)\n        res = max(res, foo(nums2))\n\nprint(res)", "\na = list(input())\nc = 0\nt = 1\nfor i in range(len(a)):\n    j = int(a[i])\n    t2 = t*(j-1)\n    t = t*j\n    c = max(t2*((9)**(len(a)-i-1)) , c)\n    if i==0 and t2==0:\n        c = max(((9)**(len(a)-i-1)) , c)\n\nc = max(t,c)\nprint(c)\n", "n = list(map(int, input()))\n\nm = 1\n\nfor i, d in enumerate(reversed(n)):\n    if i == 0:\n        m = d\n    else:\n        m = max(d*m, (max(d-1, 1))*(9**i))\nprint(m)"]