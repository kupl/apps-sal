["#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 1000000007\r\n#define inf 100000000000000\r\ntypedef long long ll;\r\n#define mp make_pair\r\n#define f first \r\n#define s second\r\nll xp[5005];\r\nll train[5005];\r\nll dp[5005][5005];\r\nint n;\r\nll power(ll x,ll y){\r\n    ll res=1;\r\n    while (y){\r\n        if (y & 1){\r\n            res=res*x; \r\n        }\r\n        x=x*x;\r\n        y=y>>1;\r\n    }\r\n    return res;\r\n}\r\nll cube(ll x){\r\n    ll res=x,sum=0;\r\n    while(x!=0){\r\n        sum+=(x%10);\r\n        x=x/10;\r\n    }\r\n    res+=power(sum,3);\r\n    return res;\r\n}\r\nll max_xp(int i,int r){\r\n    if(i>n){\r\n        return 0;\r\n    }\r\n    if(dp[i][r]!=-1){\r\n        return dp[i][r];\r\n    }\r\n    ll maxi=0;\r\n    if(r<=n){\r\n        maxi=max_xp(i+1,r+1);\r\n    }\r\n    maxi=max(maxi,max_xp(i+1,r)+xp[i]*train[r]);\r\n    return dp[i][r]=maxi;\r\n}\r\nint main(){\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tll s;\r\n\tcin>>n>>s;\r\n\tfor(int i=1;i<=n;i++){\r\n\t    cin>>xp[i];\r\n\t}\r\n\tmemset(dp,-1,sizeof(dp));\r\n\ttrain[0]=s;\r\n\tfor(int i=1;i<=n;i++){\r\n\t    train[i]=cube(train[i-1]);\r\n\t}\r\n\tcout<<max_xp(1,0)<<\"\\n\";\r\n\treturn 0;\r\n}", "# include <iostream>\r\n# include <bits/stdc++.h>\r\n# include <cmath>\r\nusing namespace std;\r\nvector<long long> adj[200001];\r\n//bool vis[200001];\r\n/*void dfs (long long s)\r\n{\r\n\tvis[s]=true;\r\n\tfor (long long next : adj[s])\r\n\t{\r\n\t\tif (!vis[next])\r\n\t\t{\r\n\t\t\tdfs(next);\r\n\t\t}\r\n\t}\r\n}*/\r\n/*long long bfs(long long s) \r\n{\r\n    queue<long long> q;\r\n    vector<bool> vis(n);\r\n    long long c = 0;\r\n    vis[s] = true;\r\n    q.push(s);\r\n    while (!q.empty())\r\n\t{\r\n        long long currnode = q.front();\r\n        q.pop();\r\n        for (auto next : adj[currnode]) \r\n\t\t{\r\n            if (!vis[next]) \r\n\t\t\t{\r\n                vis[next] = true;\r\n                q.push(next);\r\n            }\r\n        }              \r\n        c++;\r\n    }\r\n    return c;\r\n}*/\r\nlong long sdg(long long n)\r\n{\r\n\tlong long tot=0;\r\n\twhile (n!=0)\r\n\t{\r\n\t\ttot+=n%10;\r\n\t\tn=n/10;\r\n\t}\r\n\treturn tot;\r\n}\r\nlong long maxy(long long a, long long b, long long c)\r\n{\r\n\tlong long arr[3]={a,b,c};\r\n\tlong long ret_val=*max_element(arr,arr+3);\r\n\treturn ret_val;\r\n}\r\nint main()\r\n{\r\n\t//freopen(\"time.in\",\"r\",stdin); \r\n\t//freopen(\"time.out\",\"w\",stdout);\r\n\t\r\n\tlong long n;\r\n\tlong long ini_str;\r\n\tcin >> n  >> ini_str;\r\n\tlong long ex[n+1];\r\n\tex[0]=0;\r\n\tfor (long long i=1;i<=n;i++)\r\n\t{\r\n\t\tcin >> ex[i];\r\n\t}\r\n\tlong long str_train[n+1];\r\n\tstr_train[0]=ini_str;\r\n\tfor (long long i=1;i<=n;i++)\r\n\t{\r\n\t\tlong long temp_1=sdg(str_train[i-1]);\r\n\t\tstr_train[i]=str_train[i-1]+pow(temp_1,3);\r\n\t\t//cout << i << \" \" << str_train[i] << endl;\r\n\t\t\r\n\t}\r\n\tlong long dp[n+1][n+1];\r\n\tfor (long long i=0;i<=n;i++)\r\n\t{\r\n\t\tfor (long long j=0;j<=n;j++)\r\n\t\t{\r\n\t\t\tdp[i][j]=0;\r\n\t\t}\r\n\t}\r\n\tfor (long long i=1;i<=n;i++)\r\n\t{\r\n\t\tfor (long long j=1;j<=i;j++)\r\n\t\t{\r\n\t\t\t\r\n\t\t\t// ith city with j trains\r\n\t\t\tdp[i][j]=max(dp[i-1][j-1],(dp[i-1][j]+(str_train[j-1]*ex[i])));\r\n\t\t\t//cout << i << \" \" << j << \" \" << dp[i][j] << endl;\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tlong long finans=-1e9;\r\n\tfor (long long i=1;i<=n;i++)\r\n\t{\r\n\t\tfinans=max(finans,dp[n][i]);\r\n\t}\r\n\tcout << finans << endl;\r\n\t\r\n\t// OneDrive\\Desktop\\rand\r\n\t\r\n}\t\t\t\t\t\t\t\t\t\t\t\t", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL)\n\nll n, s;\nll e[5004];\nll tval[5004];\nll dp[5004][5004];\n\nll increased(ll s) {\n    ll s2 = s;\n    int digSum = 0;\n    while (s > 0) {\n        digSum += s % 10;\n        s /= 10;\n    }\n    return s2 + (ll)pow(digSum, 3);\n}\n\nll f(int t, int i) {  // curr strength, no of times pikachu has been trained\n    if (i == n) {\n        return 0LL;\n    }\n    if (dp[t][i] > -1) {\n        return dp[t][i];\n    }\n    return dp[t][i] = max( f(t+1, i+1) , f(t, i+1) + tval[t]*e[i]);\n}\n\nint main() {\n    \n    fastIO;\n    \n    cin >> n >> s;\n    for (int i=0; i<n; i++) {\n        cin >> e[i];\n    }\n    \n    memset(dp, -1, sizeof(dp));\n    \n    tval[0] = s;\n    for (int i=1; i <= n; i++) {\n        tval[i] = increased(tval[i-1]); \n    }\n    \n    ll ans = f(0, 0);\n    cout << ans;\n    \n\treturn 0;\n}\n", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL)\n\nll n, s;\nll e[5004];\nll tval[5004];\nint mp[5004][5004];\n\nll increased(ll s) {\n    int s2 = s;\n    int digSum = 0;\n    while (s > 0) {\n        digSum += s % 10;\n        s /= 10;\n    }\n    return s2 + (ll)pow(digSum, 3);\n}\n\nll f(int t, int i) {  // curr strength, no of times pikachu has been trained\n    if (i == n) {\n        return 0;\n    }\n    if (mp[t][i]) {\n        return mp[t][i];\n    }\n    return mp[t][i] = max( f(t+1, i+1) , f(t, i+1) + tval[t]*e[i]);\n}\n\nint main() {\n    \n    fastIO;\n    \n    cin >> n >> s;\n    for (int i=0; i<n; i++) {\n        cin >> e[i];\n    }\n    \n    tval[0] = s;\n    for (int i=1; i <= n; i++) {\n        tval[i] = increased(tval[i-1]); \n    }\n    \n    ll ans = f(0, 0);\n    cout << ans;\n    \n\treturn 0;\n}\n", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL)\n\nll n, s;\nll e[5000];\nmap<pair<ll, ll>, ll> mp;\n\nll increased(ll s) {\n    int s2 = s;\n    int digSum = 0;\n    while (s > 0) {\n        digSum += s % 10;\n        s /= 10;\n    }\n    return s2 + (ll)pow(digSum, 3);\n}\n\nll f(ll s, int i) {\n    if (i == n) {\n        return 0LL;\n    }\n    ll temp = mp[{s, i}];\n    if (temp) {\n        return temp;\n    }\n    return mp[{s, i}] = max( f(increased(s), i+1) , f(s, i+1)+s*e[i]);\n}\n\nint main() {\n    \n    fastIO;\n    \n    cin >> n >> s;\n    for (int i=0; i<n; i++) {\n        cin >> e[i];\n    }\n    \n    ll ans = f(s, 0);\n    cout << ans;\n    \n\treturn 0;\n}\n", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL)\n\nll n, s;\nll e[5000];\n\nll increased(ll s) {\n    int s2 = s;\n    int digSum = 0;\n    while (s > 0) {\n        digSum += s % 10;\n        s /= 10;\n    }\n    return s2 + (ll)pow(digSum, 3);\n}\n\nll f(ll s, int i) {\n    if (i == n) {\n        return 0LL;\n    }\n    return max( f(increased(s), i+1) , f(s, i+1)+s*e[i]);\n}\n\nint main() {\n    \n    fastIO;\n    \n    cin >> n >> s;\n    for (int i=0; i<n; i++) {\n        cin >> e[i];\n    }\n    \n    ll ans = f(s, 0);\n    cout << ans;\n    \n\treturn 0;\n}\n", "# include <iostream>\r\n# include <bits/stdc++.h>\r\n# include <cmath>\r\nusing namespace std;\r\nvector<long long> adj[200001];\r\n//bool vis[200001];\r\n/*void dfs (long long s)\r\n{\r\n\tvis[s]=true;\r\n\tfor (long long next : adj[s])\r\n\t{\r\n\t\tif (!vis[next])\r\n\t\t{\r\n\t\t\tdfs(next);\r\n\t\t}\r\n\t}\r\n}*/\r\n/*long long bfs(long long s) \r\n{\r\n    queue<long long> q;\r\n    vector<bool> vis(n);\r\n    long long c = 0;\r\n    vis[s] = true;\r\n    q.push(s);\r\n    while (!q.empty())\r\n\t{\r\n        long long currnode = q.front();\r\n        q.pop();\r\n        for (auto next : adj[currnode]) \r\n\t\t{\r\n            if (!vis[next]) \r\n\t\t\t{\r\n                vis[next] = true;\r\n                q.push(next);\r\n            }\r\n        }              \r\n        c++;\r\n    }\r\n    return c;\r\n}*/\r\nlong long sdg(long long n)\r\n{\r\n\tlong long tot=0;\r\n\twhile (n!=0)\r\n\t{\r\n\t\ttot+=n%10;\r\n\t\tn=n/10;\r\n\t}\r\n\treturn tot;\r\n}\r\nvector<string> actions={\"train\", \"fight\"};\r\nvector<long long> ex;\r\nvector<long long> all_ans;\r\nlong long finans=-1e9;\r\nvoid bfs(long long totcity,long long city, long long st, long long exp)\r\n{\r\n\tqueue<tuple<long long, long long , long long> > q;\r\n\tq.push({city,st,exp});\r\n\tbool vis1[100000]={false};\r\n\tbool vis2[100000]={false};\r\n\tbool stopwhile=false;\r\n\twhile (!q.empty())\r\n\t{\r\n\t\t//cout << \"still going \" << q.size() << endl;\r\n\t\ttuple<long long , long long, long long> curr_tuple=q.front();\r\n\t\tlong long curr_city=get<0>(curr_tuple);\r\n\t\tlong long curr_str=get<1>(curr_tuple);\r\n\t\tlong long curr_exp=get<2>(curr_tuple);\r\n\t\tvis1[curr_exp]=true;\r\n\t\tvis2[curr_str]=true;\r\n\t\t//finans=max(finans,curr_exp);\r\n\t\tq.pop();\r\n\t\tlong long nex_str=0;\r\n\t\tlong long nex_exp=0;\r\n\t\tlong long nex_city=0;\r\n\t\tfor (auto action : actions)\r\n\t\t{\r\n\t\t\tif (action==\"train\")\r\n\t\t\t{\r\n\t\t\t\tnex_str=curr_str+pow(sdg(curr_str),3);\r\n\t\t\t\tnex_exp=curr_exp;\r\n\t\t\t\tnex_city=curr_city+1;\r\n\t\t\t}\r\n\t\t\telse if (action==\"fight\")\r\n\t\t\t{\r\n\t\t\t\tnex_str=curr_str;\r\n\t\t\t\tnex_city=curr_city+1;\r\n\t\t\t\tnex_exp=curr_exp+(curr_str*ex[nex_city]);\r\n\t\t\t}\r\n\t\t\t//cout << action << \" \" << nex_city << \" \" << nex_str << \" \" << nex_exp << endl;\r\n\t\t\tbool chec=(!vis1[nex_exp] || !vis2[nex_str]);\r\n\t\t\tif ((nex_city<=totcity))\r\n\t\t\t{\r\n\t\t\t\t//cout << action << \" \" << nex_city << \" \" << nex_str << \" \" << nex_exp << endl;\r\n\t\t\t\tq.push({nex_city,nex_str,nex_exp});\r\n\t\t\t\t//vis1[nex_exp]=true;\r\n\t\t\t\t//vis2[nex_str]=true;\r\n\t\t\t\tall_ans.push_back(nex_exp);\r\n\t\t\t\t//finans=max(finans,nex_exp);\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*if (((!vis1[nex_exp]) || (!vis2[nex_str])) && (nex_city<=totcity))\r\n\t\t{\r\n\t\t\tq.push({nex_city,nex_str,nex_exp});\r\n\t\t\tvis1[nex_exp]=true;\r\n\t\t\tvis2[nex_str]=true;\r\n\t\t}*/\r\n\t}\r\n\t\r\n}\r\nlong long maxy(long long a, long long b, long long c)\r\n{\r\n\tlong long arr[3]={a,b,c};\r\n\tlong long ret_val=*max_element(arr,arr+3);\r\n\treturn ret_val;\r\n}\r\nint main()\r\n{\r\n\t//freopen(\"time.in\",\"r\",stdin); \r\n\t//freopen(\"time.out\",\"w\",stdout);\r\n\tlong long n;\r\n\tlong long ini_str;\r\n\tcin >> n >> ini_str;\r\n\tex.push_back(0);\r\n\tfor (long long i=1;i<=n;i++)\r\n\t{\r\n\t\tlong long lol;\r\n\t\tcin >> lol;\r\n\t\tex.push_back(lol);\r\n\t}\r\n\tbfs(n, 0, ini_str,0);\r\n\tcout << *max_element(all_ans.begin(),all_ans.end());\r\n\t\r\n\t// OneDrive\\Desktop\\rand\r\n\t\r\n}\t\t\t\t\t\t\t\t\t\t\t\t", "// Premature optimization is the root of all evil in programming - Knuth.\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\n\r\n#define mod (int) (1e9+7)\r\n\r\n\r\nll cubeSum(ll x){\r\n\t\r\n\tll sum=0;\r\n\t\r\n\twhile(x){\r\n\t\tll d=x%10;\r\n\t\tsum+=d;\r\n\t\tx=x/10;\r\n\t}\r\n\t\r\n\treturn sum*sum*sum;\r\n\t\r\n}\r\n\r\n\r\nll dp[5005][5005];\r\n\r\n\r\nll recur(vector<ll> &power,ll n,ll r,ll &curr,vector<ll> &vec){\r\n\t\r\n\tif(r>n){\r\n\t\treturn INT_MIN;\r\n\t}\r\n\t\r\n\tif(n==power.size()-1){\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tif(dp[n][r]!=-1){\r\n\t\treturn dp[n][r];\r\n\t}\r\n\t\r\n\tll val=0;\r\n\t\r\n\tval=max(val,recur(power,n+1,r+1,curr,vec));\r\n\t\r\n\tval=max(val,power[r]*vec[n]+recur(power,n+1,r,curr,vec));\r\n\t\r\n\treturn dp[n][r]=val;\r\n\t\r\n}\r\n\r\n\r\n\r\nvoid solve(){\r\n\t\r\n\tll n,s; cin>>n>>s;\r\n\t\r\n\tvector<ll> power(n+1); power[0]=s;\r\n\t\r\n\tvector<ll> vec(n);\r\n\t\r\n\tfor(int i=0; i<n; i++){\r\n\t\tcin>>vec[i];\r\n\t}\r\n\t\r\n\tfor(int i=1; i<=n; i++){\r\n\t\tpower[i]=power[i-1]+cubeSum(power[i-1]);\r\n\t\t// cout<<power[i]<<\" \";\r\n\t}//cout<<endl;\r\n\t\r\n\tmemset(dp,-1,sizeof(dp));\r\n\t\r\n\tcout<<recur(power,0,0,s,vec)<<\"\\n\";\r\n\t\r\n\t\r\n\treturn ;\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0);\r\n    \r\n    cin.tie(0);\r\n    \r\n    int t=1;//cin>>t;\r\n    \r\n    // clock_t begin, end;\r\n    \r\n    // double time_spent;\r\n    \r\n    // begin = clock(); // Time taken till now.\r\n    \r\n    while(t--){\r\n    \r\n\t  solve();\r\n        \r\n    }\r\n   \r\n   //end= clock(); // Total  Time taken till now.\r\n   \r\n   //time_spent= (end- begin) / CLOCKS_PER_SEC; \r\n   \r\n   //cout<<time_spent<<\"\\n\";\r\n   \r\n   \r\n   \r\n\t\r\n\treturn 0;\r\n}\r\n\r\n", "// Premature optimization is the root of all evil in programming - Knuth.\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\n\r\n#define mod (int) (1e9+7)\r\n\r\n\r\nll cubeSum(ll x){\r\n\t\r\n\tll sum=0;\r\n\t\r\n\twhile(x){\r\n\t\tll d=x%10;\r\n\t\tsum+=d;\r\n\t\tx=x/10;\r\n\t}\r\n\t\r\n\treturn sum*sum*sum;\r\n\t\r\n}\r\n\r\n\r\nll dp[5005][5005];\r\n\r\n\r\nll recur(vector<ll> &power,ll n,ll r,ll &curr,vector<ll> &vec){\r\n\t\r\n\tif(r>n){\r\n\t\treturn INT_MIN;\r\n\t}\r\n\t\r\n\tif(n==power.size()-1){\r\n\t\treturn 0;\r\n\t}\r\n\t\r\n\tll val=0;\r\n\t\r\n\tval=max(val,recur(power,n+1,r+1,curr,vec));\r\n\t\r\n\tval=max(val,power[r]*vec[n]+recur(power,n+1,r,curr,vec));\r\n\t\r\n\treturn val;\r\n\t\r\n}\r\n\r\n\r\n\r\nvoid solve(){\r\n\t\r\n\tll n,s; cin>>n>>s;\r\n\t\r\n\tvector<ll> power(n+1); power[0]=s;\r\n\t\r\n\tvector<ll> vec(n);\r\n\t\r\n\tfor(int i=0; i<n; i++){\r\n\t\tcin>>vec[i];\r\n\t}\r\n\t\r\n\tfor(int i=1; i<=n; i++){\r\n\t\tpower[i]=power[i-1]+cubeSum(power[i-1]);\r\n\t\t// cout<<power[i]<<\" \";\r\n\t}//cout<<endl;\r\n\t\r\n\tmemset(dp,-1,sizeof(dp));\r\n\t\r\n\tcout<<recur(power,0,0,s,vec)<<\"\\n\";\r\n\t\r\n\t\r\n\treturn ;\r\n}\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0);\r\n    \r\n    cin.tie(0);\r\n    \r\n    int t=1;//cin>>t;\r\n    \r\n    // clock_t begin, end;\r\n    \r\n    // double time_spent;\r\n    \r\n    // begin = clock(); // Time taken till now.\r\n    \r\n    while(t--){\r\n    \r\n\t  solve();\r\n        \r\n    }\r\n   \r\n   //end= clock(); // Total  Time taken till now.\r\n   \r\n   //time_spent= (end- begin) / CLOCKS_PER_SEC; \r\n   \r\n   //cout<<time_spent<<\"\\n\";\r\n   \r\n   \r\n   \r\n\t\r\n\treturn 0;\r\n}\r\n\r\n", "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#ifdef LOCAL_DEFINE\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"avx2\")\r\n#endif\r\n\r\nll val(ll s){\r\n  ll sum=0;\r\n  while(s){\r\n    sum += s%10;\r\n    s/=10;\r\n  }\r\n  return sum*sum*sum;\r\n}\r\n\r\nvoid solve(){\r\n\tll n, s; cin >> n >> s;\r\n\tvector<ll> v(n);\r\n\tfor(ll i = 0; i < n; i++){\r\n\t  cin >> v[i];\r\n\t}\r\n\t/*\r\n\t  dp[ind][str] = XV\r\n\t  dp[i][str+val(str)] = dp[i-1][str]\r\n\t  dp[i][str] = dp[i-1][str] + str*v[i]\r\n\t*/\r\n\tmap<pair<ll, ll>, ll> dp;\r\n\tdp.insert({{0, s}, s*v[0]});\r\n\tdp.insert({{0, s+val(s)}, 0});\r\n\tll ans = s*v[0];\r\n\tfor(auto j: dp){\r\n\t\t\tll i = j.first.first, k = j.first.second;\r\n\t    if(i+1>n-1) break;\r\n\r\n\t    //if(dp.find({i+1, k+val(k)})==dp.end()) dp[{i+1, k+val(k)}] = 0;\r\n\t\t\t//if(dp.find({i+1, k})==dp.end()) dp[{i+1, k}] = 0;\r\n\r\n\t    dp[{i+1, k+val(k)}] = max(dp[{i+1, k+val(k)}], dp[{i, k}]);\r\n\t    dp[{i+1, k}] = max(dp[{i+1, k}], dp[{i, k}] + (k*v[i+1]));\r\n\t    ans = max(ans, max(dp[{i+1,k}], dp[{i+1,k+val(k)}]));\r\n\t}\r\n\t//}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n#ifdef LOCAL_DEFINE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint t; t=1;// cin >> t;\r\n\twhile(t--) solve();  \r\n\r\n#ifdef LOCAL_DEFINE\r\n\tcerr << \"\\nTime Elapsed: \" << 1.0 * clock()/CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n}\r\n\r\n\r\n", "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#ifdef LOCAL_DEFINE\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"avx2\")\r\n#endif\r\n\r\nint val(int s){\r\n  int sum=0;\r\n  while(s){\r\n    sum += s%10;\r\n    s/=10;\r\n  }\r\n  return sum*sum*sum;\r\n}\r\n\r\nvoid solve(){\r\n\tint n, s; cin >> n >> s;\r\n\tvector<int> v(n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t  cin >> v[i];\r\n\t}\r\n\t/*\r\n\t  dp[ind][str] = XV\r\n\t  dp[i][str+val(str)] = dp[i-1][str]\r\n\t  dp[i][str] = dp[i-1][str] + str*v[i]\r\n\t*/\r\n\tmap<pair<int, int>, int> dp;\r\n\tdp.insert({{0, s}, s*v[0]});\r\n\tdp.insert({{0, s+val(s)}, 0});\r\n\t//cerr << s+val(s) << '\\n';\r\n\tint ans = s*v[0];\r\n\t//for(int o = 1; o < n; o++){\r\n\tfor(auto j: dp){\r\n\t\t\tint i = j.first.first, k = j.first.second;\r\n\t    if(i+1>n-1) break;\r\n\r\n\t    //if(dp.find({i+1, k+val(k)})==dp.end()) dp[{i+1, k+val(k)}] = 0;\r\n\t\t\t//if(dp.find({i+1, k})==dp.end()) dp[{i+1, k}] = 0;\r\n\r\n\t    dp[{i+1, k+val(k)}] = max(dp[{i+1, k+val(k)}], dp[{i, k}]);\r\n\t    dp[{i+1, k}] = max(dp[{i+1, k}], dp[{i, k}] + (k*v[i+1]));\r\n\t    //cerr << i << ' ' << dp[{i, k}] + (k*v[i]) << '\\n';\r\n\t    ans = max(ans, max(dp[{i+1,k}], dp[{i+1,k+val(k)}]));\r\n\t}\r\n\t//}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n#ifdef LOCAL_DEFINE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint t; t=1;// cin >> t;\r\n\twhile(t--) solve();  \r\n\r\n#ifdef LOCAL_DEFINE\r\n\tcerr << \"\\nTime Elapsed: \" << 1.0 * clock()/CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n}\r\n\r\n\r\n", "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#ifdef LOCAL_DEFINE\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"avx2\")\r\n#endif\r\n\r\nint val(int s){\r\n  int sum=0;\r\n  while(s){\r\n    sum += s%10;\r\n    s/=10;\r\n  }\r\n  return sum*sum*sum;\r\n}\r\n\r\nvoid solve(){\r\n\tint n, s; cin >> n >> s;\r\n\tvector<int> v(n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t  cin >> v[i];\r\n\t}\r\n\t/*\r\n\t  dp[ind][str] = XV\r\n\t  dp[i][str+val(str)] = dp[i-1][str]\r\n\t  dp[i][str] = dp[i-1][str] + str*v[i]\r\n\t*/\r\n\tmap<pair<int, int>, int> dp;\r\n\tdp.insert({{0, s}, s*v[0]});\r\n\tdp.insert({{0, s+val(s)}, 0});\r\n\t//cerr << s+val(s) << '\\n';\r\n\tint ans = s*v[0];\r\n\t//for(int o = 1; o < n; o++){\r\n\tfor(auto j: dp){\r\n\t\t\tint i = j.first.first, k = j.first.second;\r\n\t    if(i+1>n-1) break;\r\n\r\n\t    if(dp.find({i+1, k+val(k)})==dp.end()) dp[{i+1, k+val(k)}] = 0;\r\n\t\t\tif(dp.find({i+1, k})==dp.end()) dp[{i+1, k}] = 0;\r\n\r\n\t    dp[{i+1, k+val(k)}] = max(dp[{i+1, k+val(k)}], dp[{i, k}]);\r\n\t    dp[{i+1, k}] = max(dp[{i+1, k}], dp[{i, k}] + (k*v[i+1]));\r\n\t    //cerr << i << ' ' << dp[{i, k}] + (k*v[i]) << '\\n';\r\n\t    ans = max(ans, max(dp[{i+1,k}], dp[{i+1,k+val(k)}]));\r\n\t}\r\n\t//}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n#ifdef LOCAL_DEFINE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint t; t=1;// cin >> t;\r\n\twhile(t--) solve();  \r\n\r\n#ifdef LOCAL_DEFINE\r\n\tcerr << \"\\nTime Elapsed: \" << 1.0 * clock()/CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n}\r\n\r\n\r\n", "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#ifdef LOCAL_DEFINE\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"avx2\")\r\n#endif\r\n\r\nint val(int s){\r\n  int sum=0;\r\n  while(s){\r\n    sum += s%10;\r\n    s/=10;\r\n  }\r\n  return sum*sum*sum;\r\n}\r\n\r\nvoid solve(){\r\n\tint n, s; cin >> n >> s;\r\n\tvector<int> v(n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t  cin >> v[i];\r\n\t}\r\n\t/*\r\n\t  dp[ind][str] = XV\r\n\t  dp[i][str+val(str)] = dp[i-1][str]\r\n\t  dp[i][str] = dp[i-1][str] + str*v[i]\r\n\t*/\r\n\tmap<pair<int, int>, int> dp;\r\n\tdp.insert({{0, s}, s*v[0]});\r\n\tdp.insert({{0, s+val(s)}, 0});\r\n\t//cerr << s+val(s) << '\\n';\r\n\tint ans = s*v[0];\r\n\t//for(int o = 1; o < n; o++){\r\n\tfor(auto j: dp){\r\n\t\t\tint i = j.first.first, k = j.first.second;\r\n\t    if(i+1>n-1) continue;\r\n\r\n\t    if(dp.find({i+1, k+val(k)})==dp.end()) dp[{i+1, k+val(k)}] = 0;\r\n\t\t\tif(dp.find({i+1, k})==dp.end()) dp[{i+1, k}] = 0;\r\n\r\n\t    dp[{i+1, k+val(k)}] = max(dp[{i+1, k+val(k)}], dp[{i, k}]);\r\n\t    dp[{i+1, k}] = max(dp[{i+1, k}], dp[{i, k}] + (k*v[i+1]));\r\n\t    //cerr << i << ' ' << dp[{i, k}] + (k*v[i]) << '\\n';\r\n\t    ans = max(ans, max(dp[{i+1,k}], dp[{i+1,k+val(k)}]));\r\n\t}\r\n\t//}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n#ifdef LOCAL_DEFINE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint t; t=1;// cin >> t;\r\n\twhile(t--) solve();  \r\n\r\n#ifdef LOCAL_DEFINE\r\n\tcerr << \"\\nTime Elapsed: \" << 1.0 * clock()/CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n}\r\n\r\n\r\n", "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define rep(i, a, b) for(int i = a; i < (b); ++i)\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)(x).size()\r\ntypedef long long ll;\r\ntypedef pair<int, int> pii;\r\ntypedef vector<int> vi;\r\n#ifdef LOCAL_DEFINE\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"avx2\")\r\n#endif\r\n\r\nint val(int s){\r\n  int sum=0;\r\n  while(s){\r\n    sum += s%10;\r\n    s/=10;\r\n  }\r\n  return sum*sum*sum;\r\n}\r\n\r\nvoid solve(){\r\n\tint n, s; cin >> n >> s;\r\n\tvector<int> v(n);\r\n\tfor(int i = 0; i < n; i++){\r\n\t  cin >> v[i];\r\n\t}\r\n\t/*\r\n\t  dp[ind][str] = XV\r\n\t  dp[i][str+val(str)] = dp[i-1][str]\r\n\t  dp[i][str] = dp[i-1][str] + str*v[i]\r\n\t*/\r\n\tmap<pair<int, int>, int> dp;\r\n\tdp.insert({{0, s}, s*v[0]});\r\n\tdp.insert({{0, s+val(s)}, 0});\r\n\t//cerr << s+val(s) << '\\n';\r\n\tint ans = s*v[0];\r\n\tfor(int o = 1; o < n; o++){\r\n\tfor(auto j: dp){\r\n\t\t\tint i = j.first.first, k = j.first.second;\r\n\t    if(i+1>n-1) continue;\r\n\r\n\t    if(dp.find({i+1, k+val(k)})==dp.end()) dp[{i+1, k+val(k)}] = 0;\r\n\t\t\tif(dp.find({i+1, k})==dp.end()) dp[{i+1, k}] = 0;\r\n\r\n\t    dp[{i+1, k+val(k)}] = max(dp[{i+1, k+val(k)}], dp[{i, k}]);\r\n\t    dp[{i+1, k}] = max(dp[{i+1, k}], dp[{i, k}] + (k*v[i+1]));\r\n\t    //cerr << i << ' ' << dp[{i, k}] + (k*v[i]) << '\\n';\r\n\t    ans = max(ans, max(dp[{i+1,k}], dp[{i+1,k+val(k)}]));\r\n\t}\r\n\t}\r\n\tcout << ans << '\\n';\r\n}\r\n\r\nint main() {\r\n#ifdef LOCAL_DEFINE\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n#endif\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tint t; t=1;// cin >> t;\r\n\twhile(t--) solve();  \r\n\r\n#ifdef LOCAL_DEFINE\r\n\tcerr << \"\\nTime Elapsed: \" << 1.0 * clock()/CLOCKS_PER_SEC << \" s.\\n\";\r\n#endif\r\n}\r\n\r\n\r\n", "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 1000000007\r\n#define inf 100000000000000\r\ntypedef long long ll;\r\n#define mp make_pair\r\n#define f first \r\n#define s second\r\nint n;\r\nll en[5005];\r\nll sen[5005];\r\nll dp[5005][5005];\r\nll power(ll x,ll y){\r\n    ll res=1;\r\n    while (y){\r\n        if (y & 1){\r\n            res=res*x; \r\n        }\r\n        x=x*x;\r\n        y=y>>1;\r\n    }\r\n    return res;\r\n}\r\nll train(ll x){\r\n    ll res=x;\r\n    ll sum=0;\r\n    while(x!=0){\r\n        sum+=(x%10);\r\n        x=x/10;\r\n    }\r\n    res+=power(sum,3);\r\n    return res;\r\n}\r\nll max_exp(int i,int j){\r\n    //cout<<i<<\" \"<<j<<\"\\n\";\r\n    if(j>i || j<0){\r\n        return 0;\r\n    }\r\n    if(i<0){\r\n        return 0;\r\n    }\r\n    if(dp[i][j]!=-1){\r\n        return dp[i][j];\r\n    }\r\n    ll maxi=0;\r\n    maxi=max_exp(i-1,j-1);\r\n    maxi=max(maxi,sen[j]*en[i]+max_exp(i-1,j));\r\n    dp[i][j]=maxi;\r\n    return dp[i][j];\r\n}\r\nint main(){\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tll stren;\r\n\tmemset(dp,-1,sizeof(dp));\r\n\tcin>>n>>stren;\r\n\tfor(int i=0;i<n;i++){\r\n\t    cin>>en[i];\r\n\t}\r\n\tsen[0]=stren;\r\n\tfor(int i=1;i<n;i++){ \r\n\t    sen[i]=train(sen[i-1]);\r\n\t}\r\n\tll maxi=0;\r\n\tfor(int i=0;i<n;i++){\r\n\t    //cout<<i<<\" \";\r\n\t    maxi=max(maxi,max_exp(n-1,i));\r\n\t}\r\n\tcout<<maxi<<\"\\n\";\r\n\treturn 0;\r\n}", "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 1000000007\r\n#define inf 100000000000000\r\ntypedef long long ll;\r\n#define mp make_pair\r\n#define f first \r\n#define s second\r\nint n;\r\nll en[5005];\r\nll power(ll x,ll y){\r\n    ll res=1;\r\n    while (y){\r\n        if (y & 1){\r\n            res=res*x; \r\n        }\r\n        x=x*x;\r\n        y=y>>1;\r\n    }\r\n    return res;\r\n}\r\nmap<tuple<int,ll,ll>,ll> dp;\r\nmap<tuple<int,ll,ll>,bool> visited;\r\nmap<ll,ll> training;\r\nll train(ll x){\r\n    ll res=x;\r\n    ll sum=0;\r\n    while(x!=0){\r\n        sum+=(x%10);\r\n        x=x/10;\r\n    }\r\n    res+=power(sum,3);\r\n    return res;\r\n}\r\nll max_exp(int i,ll s,ll xp){\r\n    if(i==n-1){\r\n        return xp+s*en[i];\r\n    }\r\n    if(visited[{i,s,xp}]){\r\n        return dp[{i,s,xp}];\r\n    }\r\n    dp[{i,s,xp}]=max(max_exp(i+1,training[s],xp),max_exp(i+1,s,xp+s*en[i]));\r\n    visited[{i,s,xp}]=true;\r\n    return dp[{i,s,xp}];\r\n}\r\nint main(){\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tll s;\r\n\tcin>>n>>s;\r\n\tfor(int i=0;i<n;i++){\r\n\t    cin>>en[i];\r\n\t}\r\n\tll temp=s;\r\n\tfor(int i=0;i<n;i++){\r\n\t    training[temp]=train(temp);\r\n\t    temp=training[temp];\r\n\t}\r\n\tcout<<max_exp(0,s,0)<<\"\\n\";\r\n\treturn 0;\r\n}", "// Premature optimization is the root of all evil in programming - Knuth.\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long int ll;\r\n\r\n#define mod (int) (1e9+7)\r\n\r\n\r\nll digitsSumCube(ll x){\r\n\t\r\n\tll sum=0;\r\n\t\r\n\twhile(x){\r\n\t\tsum+=x%10;\r\n\t\tx=x/10;\r\n\t}\r\n\t\r\n\tsum=sum*sum*sum;\r\n\t\r\n\treturn sum;\r\n\t\r\n}\r\n\r\n\r\nll recur(vector<ll> &energy,ll ind,ll s,ll e){\r\n\t\r\n\tif(ind>=energy.size()){\r\n\t\treturn e;\r\n\t}\r\n\t\r\n\tll add=digitsSumCube(s);\r\n\t\r\n\treturn max(recur(energy,ind+1,s+add,e),recur(energy,ind+1,s,e+s*energy[ind]));\r\n\t\r\n}\r\n\r\n\r\nvoid solve(){\r\n\t\r\n\tll n,s; cin>>n>>s;\r\n\t\r\n\tvector<ll> energy(n);\r\n\t\r\n\tfor(int i=0; i<n; i++){\r\n\t\tcin>>energy[i];\r\n\t}\r\n\t\r\n\tcout<<recur(energy,0,s,0)<<\"\\n\";\r\n\t\r\n\treturn ;\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\nint main(){\r\n    ios_base::sync_with_stdio(0);\r\n    \r\n    cin.tie(0);\r\n    \r\n    int t=1;//cin>>t;\r\n    \r\n    // clock_t begin, end;\r\n    \r\n    // double time_spent;\r\n    \r\n    // begin = clock(); // Time taken till now.\r\n    \r\n    while(t--){\r\n    \r\n\t  solve();\r\n        \r\n    }\r\n   \r\n   //end= clock(); // Total  Time taken till now.\r\n   \r\n   //time_spent= (end- begin) / CLOCKS_PER_SEC; \r\n   \r\n   //cout<<time_spent<<\"\\n\";\r\n   \r\n   \r\n   \r\n\t\r\n\treturn 0;\r\n}\r\n\r\n", "#include<bits/stdc++.h>\r\nusing namespace std;\r\n#define mod 1000000007\r\n#define inf 100000000000000\r\ntypedef long long ll;\r\n#define mp make_pair\r\n#define f first \r\n#define s second\r\nint n;\r\nll en[5005];\r\nll power(ll x,ll y){\r\n    ll res=1;\r\n    while (y){\r\n        if (y & 1){\r\n            res=res*x; \r\n        }\r\n        x=x*x;\r\n        y=y>>1;\r\n    }\r\n    return res;\r\n}\r\nmap<tuple<int,ll,ll>,ll> dp;\r\nmap<tuple<int,ll,ll>,bool> visited;\r\nll train(ll x){\r\n    ll res=x;\r\n    ll sum=0;\r\n    while(x!=0){\r\n        sum+=(x%10);\r\n        x=x/10;\r\n    }\r\n    res+=power(sum,3);\r\n    return res;\r\n}\r\nll max_exp(int i,ll s,ll xp){\r\n    if(i==n-1){\r\n        return xp+s*en[i];\r\n    }\r\n    if(visited[{i,s,xp}]){\r\n        return dp[{i,s,xp}];\r\n    }\r\n    dp[{i,s,xp}]=max(max_exp(i+1,train(s),xp),max_exp(i+1,s,xp+s*en[i]));\r\n    visited[{i,s,xp}]=true;\r\n    return dp[{i,s,xp}];\r\n}\r\nint main(){\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tll s;\r\n\tcin>>n>>s;\r\n\tfor(int i=0;i<n;i++){\r\n\t    cin>>en[i];\r\n\t}\r\n\tcout<<max_exp(0,s,0)<<\"\\n\";\r\n\treturn 0;\r\n}", "#include <iostream>\n#include <vector>\n#include <cstring>\n#include <algorithm>\n#define ll long long\nusing namespace std;\nll experiences[5010];\nll strengths[5010];\nll dp[5010][5010];\nint calc( ll x ){\n    ll sum = 0;\n    while( x ){\n        sum += x % 10;\n        x /= 10;\n    }\n    return sum * sum * sum;\n}\nint main(){\n    int N; ll S;\n    cin>>N>>S;\n    for( int i{1} ; i <= N ; ++i ) cin>>experiences[i];\n    strengths[0] = S;\n    for( int i{1} ; i <= N ; ++i ) strengths[i] = calc( strengths[i - 1] ) + strengths[i - 1];\n    memset(dp, 0, sizeof(dp));\n    for( int i{1} ; i <= N ; ++i ) dp[0][i] = (strengths[0] * experiences[i]) + dp[0][i - 1];\n    for( int i{1} ; i <= N ; ++i )\n        for( int j{i + 1} ; j <= N ; ++j )\n            dp[i][j] = max(dp[i - 1][j - 1], (strengths[i] * experiences[j]) + dp[i][j - 1]);\n    ll output = 0;\n    for( int i{0} ; i <= N ; ++i ) output = max(output, dp[i][N]);\n    cout<<output;\n    return 0;\n}", "\r\n\r\nint long\r\nmax(int long a, int long b)\r\n{\r\n        return a>b ? a:b;\r\n}\r\n\r\nint long\r\ndigcube(int long n)\r\n{\r\n        int long t = n;\r\n        int sum;\r\n        for (sum = 0; t > 0; sum += t % 10, t /= 10);\r\n        return sum*sum*sum;\r\n}\r\n\r\nint\r\nmain()\r\n{\r\n        int n,i,j;\r\n        int long s;\r\n        scanf(\"%d %ld\", &n, &s);\r\n        int e[n];\r\n        for(i=0;i<n;i++)\r\n                scanf(\"%d\", &e[i]);\r\n        int long strength[n];\r\n        strength[0] = s;\r\n        int long table[n][n];\r\n        for(i=1;i<n;i++)\r\n                strength[i] = strength[i-1] + digcube(strength[i-1]);\r\n        for(i=0;i<n;i++)\r\n                table[n-1][i] = strength[i] * e[n-1];\r\n        for(i=n-2; i>=0; i--)\r\n        {\r\n                for(j=0; j<=i;j++)\r\n                        table[i][j] = max((strength[j] * e[i] + table[i+1][j]), table[i+1][j+1]);\r\n        }\r\n        printf(\"%ld\", table[0][0]);\r\n        return 0;\r\n}\r\n \r\n", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long \n#define pb(e) push_back(e)\n#define sv(a) sort(a.begin(),a.end())\n#define sa(a,n) sort(a,a+n)\n#define mp(a,b) make_pair(a,b)\n#define vf first\n#define vs second\nconst int inf = 0x3f3f3f3f;\nint mod = 1000000007;\nbool remender(ll a , ll b){return a%b;}\nll arr[5005];\nll dp[5005][5005];\nint n;\nll dig(ll x){\n\tll res=0;\n\twhile(x){\n\t\tres+=x%10;\n\t\tx/=10;\n\t}\n\treturn res*res*res;\n}\n\nll rec(int i , ll s , int cnt){\n\tif(i==n)return 0;\n\tif(dp[i][cnt]!=-1)return dp[i][cnt];\n\treturn dp[i][cnt]=max(rec(i+1,s+dig(s),cnt+1),s*arr[i]+rec(i+1,s,cnt));\n}\n\nvoid solve(){\n\tll s;\n\tcin>>n>>s;\n\tfor(int i = 0; i < n; i++)cin>>arr[i];\n\tmemset(dp,-1,sizeof dp);\n\tcout<<rec(0,s,1)<<\"\\n\";\n}\n\nint main(){\nios_base::sync_with_stdio(false);\ncin.tie(NULL);\n\t//int t;\n\t//cin >> t;\n\t//while(t--){\n\tsolve();\n\t//}\n\treturn 0;\n}\n", "#include <bits/stdc++.h>\nusing namespace std;\n#define ll long long\n#define ull unsigned long long \n#define pb(e) push_back(e)\n#define sv(a) sort(a.begin(),a.end())\n#define sa(a,n) sort(a,a+n)\n#define mp(a,b) make_pair(a,b)\n#define vf first\n#define vs second\nconst int inf = 0x3f3f3f3f;\nint mod = 1000000007;\nbool remender(ll a , ll b){return a%b;}\nll arr[5005];\nmap<pair<int,ll>,ll> m;\nint n;\nll dig(ll x){\n\tll res=0;\n\twhile(x){\n\t\tres+=x%10;\n\t\tx/=10;\n\t}\n\treturn res*res*res;\n}\n\nll rec(int i , ll s){\n\tif(i==n)return 0;\n\tif(m[{i,s}]!=0)return m[{i,s}];\n\treturn m[{i,s}]=max(rec(i+1,s+dig(s)),s*arr[i]+rec(i+1,s));\n}\n\nvoid solve(){\n\tll s;\n\tcin>>n>>s;\n\tfor(int i = 0; i < n; i++)cin>>arr[i];\n\tcout<<rec(0,s)<<\"\\n\";\n}\n\nint main(){\nios_base::sync_with_stdio(false);\ncin.tie(NULL);\n\t//int t;\n\t//cin >> t;\n\t//while(t--){\n\tsolve();\n\t//}\n\treturn 0;\n}\n", "#include <bits/stdc++.h>\nusing namespace std;\n\n#define FASTIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\nusing ll = long long;\n\nconst int MOD = 1e9+7;\nconst ll INF = 1e18;\nconst int MAXN = 1e6+5;\n\nint n;\nll s, e[5005], st[5005];\n\nll f(ll x) {\n    int d = 0;\n    while(x) {\n        int r = x%10;\n        x /= 10;\n        d += r;\n    }\n    return (ll) (d*d*d);\n}\n\nvoid precompute() {\n    st[0] = s;\n    for(int i=1; i<=n; i++) {\n        st[i] = st[i-1] + f(st[i-1]);\n    }\n}\n\nll dp[5005][5005];\n\nint main() {\n    FASTIO\n\n    memset(dp,-1,sizeof(dp));\n    cin >> n >> s;\n    for(int i=1; i<=n; i++) cin >> e[i];\n    \n    precompute();\n    for(int j=0; j<=n; j++) dp[n][j] = st[j]*e[n];\n    for(int i=n-1; i>=1; i--) {\n        dp[i][n] = st[n]*e[i]+dp[i+1][n];\n        for(int j=0; j<=n-1; j++) {\n            dp[i][j] = max(dp[i+1][j+1], st[j]*e[i]+dp[i+1][j]);\n        }\n    }\n    cout << dp[1][0] << \"\\n\";\n    \n    return 0;\n}", "#include <bits/stdc++.h>\nusing namespace std;\n\n#define FASTIO ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\nusing ll = long long;\n\nconst int MOD = 1e9+7;\nconst ll INF = 1e18;\nconst int MAXN = 1e6+5;\n\nint n;\nll s, e[5005], st[5005];\n\nll f(ll x) {\n    int d = 0;\n    while(x) {\n        int r = x%10;\n        x /= 10;\n        d += r;\n    }\n    return (ll) (d*d*d);\n}\n\nvoid precompute() {\n    st[0] = s;\n    for(int i=1; i<=n; i++) {\n        st[i] = st[i-1] + f(st[i-1]);\n    }\n}\n\nll dp[5005][5005];\nll xv(int i, int j) {\n    if(i == n) return dp[i][j] = st[j]*e[i];\n    if(dp[i][j] != -1) return dp[i][j];\n    \n    dp[i][j] = max(xv(i+1,j+1), st[j]*e[i]+xv(i+1,j));\n    return dp[i][j];\n}\n\nint main() {\n    FASTIO\n\n    memset(dp,-1,sizeof(dp));\n    cin >> n >> s;\n    for(int i=1; i<=n; i++) cin >> e[i];\n    \n    precompute();\n    cout << xv(1,0) << \"\\n\";\n    \n    return 0;\n}", "#include \"bits/stdc++.h\"\r\nusing namespace std;\r\n/*\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\nusing namespace __gnu_pbds;\r\nusing ordered_set = tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>;\r\n*/\r\n\r\n#define all(x) begin(x), end(x)\r\n#define sz(x) (int)x.size()\r\n\r\ntypedef long long ll;\r\nconst int mod = 1e9+7;\r\n#define int ll\r\n\r\nvoid solve(int tc) {\r\n    int n, s;\r\n    cin >> n >> s;\r\n    vector<int> v(n);\r\n    for (auto &x : v) cin >> x;\r\n    vector<int> tr(1+n);\r\n    tr[0] = s;\r\n    for (int i = 1; i <= n; ++i) {\r\n        int a = tr[i-1];\r\n        int x = 0;\r\n        while (a) {\r\n            x += a%10;\r\n            a /= 10;\r\n        }\r\n        tr[i] = tr[i-1] + x*x*x;\r\n    }\r\n    vector<vector<int>> dp(n+1, vector<int>(n+1));\r\n    for (int i = 1; i <= n; ++i) {\r\n        for (int j = 0; j < i; ++j) {\r\n            dp[i][j] = dp[i-1][j] + v[i-1] * tr[j];\r\n            if (j) dp[i][j] = max(dp[i][j], dp[i-1][j-1]);\r\n        }\r\n    }\r\n    cout << *max_element(all(dp[n]));\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false); cin.tie(NULL);\r\n    int tc = 1;\r\n    //cin >> tc;\r\n    for (int i = 1; i <= tc; ++i) solve(i);\r\n    return 0;\r\n}\r\n"]