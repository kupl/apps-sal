["n,m,L,R = list(map(int,input().split()))\np = 998244353*2\npp = p//2\n#liczba pokryc n x m ze jest parzyscie wiele zer albo parzyscie wiele jedynek\ndef pow(a,w):\n\twyn = 1\n\tmn = a\n\twhile w > 0:\n\t\tif w%2 == 1:\n\t\t\twyn = (wyn * mn)%p\n\t\tmn = (mn*mn)%p\n\t\tw //= 2\n\treturn wyn\ndupsko = pow((R-L+1), m*n)\nif L == R:\n\tprint(1)  \nelse:\n\tif (m*n)%2 == 1:\n\t\tprint(dupsko%pp)\n\telse:\n\t\tprint((dupsko - dupsko//2)%pp)\n", "n, m, L, R = map(int, input().split())\nmod = 998244353\nif n*m % 2:\n  print(pow(R-L+1, n*m, mod))\nelse:\n  print((pow(R-L+1, n*m, mod) + 1 - (R-L) % 2) * pow(2, mod-2, mod) % mod)", "import sys\nreadline = sys.stdin.readline\n\ndef mat_dot(A, B, mod):\n    assert len(A[0]) == len(B), 'invalid_size'\n    \n    L = len(A)\n    M = len(A[0])\n    N = len(B[0])\n    \n    res = [[0]*N for _ in range(L)]\n    \n    for i in range(L):\n        for j in range(N):\n            a = 0\n            for k in range(M):\n                a = (a+A[i][k]*B[k][j]) % mod\n            res[i][j] = a\n            \n    return res\n\ndef mat_pow(A, x, mod):\n    N = len(A)\n    res = [[0]*N for _ in range(N)]\n    for i in range(N):\n        res[i][i] = 1\n    for i in range(x.bit_length()):\n        if 2**i & x:\n            res = mat_dot(res, A, mod)\n        A = mat_dot(A, A, mod)\n    return res\n\nMOD = 998244353 \nN, M, L, R = map(int, readline().split())\nR -= L\nif N&1 and M&1:\n    ans = pow(R+1, N*M, MOD)\nelse:\n    Bl = N*M//2\n    even = (R+1)//2\n    odd = R+1 - even\n    Mat = [[even, odd], [odd, even]]\n    xy = mat_dot(mat_pow(Mat, Bl, MOD), [[1], [0]], MOD)\n    x, y = xy[0][0], xy[1][0]\n    ans = (x*x + y*y) % MOD\n    \nprint(ans)", "import sys\ninput = sys.stdin.readline\n\nn,m,L,R=list(map(int,input().split()))\nmod=998244353\n\nANS=pow(R-L+1,n*m,mod)\nif n*m%2==1:\n    print(ANS)\n\nelif (R-L+1)%2==0:\n    print(ANS*pow(2,mod-2,mod)%mod)\nelse:\n    print((ANS+1)*pow(2,mod-2,mod)%mod)\n    \n    \n\n\n    \n", "MOD = 998244353\nn, m, l, r = map(int, input().split())\nk = r-l\nif (n*m) % 2 == 1:\n\tprint(pow(k+1, n*m, MOD))\nelif k%2 == 1:\n\tprint((pow(k+1, n*m, MOD) * 499122177) % MOD)\nelse:\n\tprint(((pow(k+1, n*m, MOD) + 1) * 499122177) % MOD)", "n, m, L, R = list(map(int, input().split()))\nmod = 998244353\nif n * m % 2 == 1:\n    print(pow(R - L + 1, n * m, mod))\nelse:\n    val = pow(R - L + 1, n * m, mod)\n    if pow(R - L + 1, n * m, 2) == 0:\n        print(val * pow(2, mod - 2, mod) % mod)\n    else:\n        print(((val - 1) * pow(2, mod - 2, mod) + 1) % mod)\n", "MOD = 998244353\n\nn, m, L, R = map(int, input().split())\n\ndx = R - L + 1\n\nif n * m % 2:\n\tprint(pow(dx, n * m, MOD))\n\nelse:\n\tprint((pow(dx, n * m, MOD) + dx % 2) * pow(2, MOD - 2, MOD) % MOD)", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    N, M, L, R = list(map(int, input().split()))\n    mod = 998244353\n\n    ans = pow((R-L+1)%mod, N*M, mod)\n    if N&1 and M&1:\n        print(ans)\n    else:\n        if (R-L+1)&1:\n            print(((ans + 1) * pow(2, mod - 2, mod)) % mod)\n        else:\n            print((ans * pow(2, mod-2, mod))%mod)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput=lambda: sys.stdin.readline().rstrip()\nn,m,l,r=list(map(int,input().split()))\nmod=998244353\nif (n*m)%2==1:\n  b,w=(n*m)//2+1,(n*m)//2\nelse:\n  b,w=(n*m)//2,(n*m)//2\n\nif (r-l+1)%2==0:\n  e,o=(r-l+1)//2,(r-l+1)//2\nelse:\n  if l%2==1:\n    e,o=(r-l+1)//2,(r-l+1)//2+1\n  else:\n    e,o=(r-l+1)//2+1,(r-l+1)//2\n\nbe=(pow(e+o,b,mod)+pow(e-o,b,mod))*pow(2,mod-2,mod)\nbo=(pow(e+o,b,mod)-pow(e-o,b,mod))*pow(2,mod-2,mod)\nwe=(pow(e+o,w,mod)+pow(e-o,w,mod))*pow(2,mod-2,mod)\nwo=(pow(e+o,w,mod)-pow(e-o,w,mod))*pow(2,mod-2,mod)\n\nif (n*m)%2==1:\n  print(pow(r-l+1,n*m,mod))\nelse:\n  print((be*we+bo*wo)%mod)\n\n", "mod = 998244353\nn,m,l,r = list(map(int,input().split()))\n\nif (n * m) % 2 == 1:\n    res = pow(r - l + 1, n * m, mod)\n    print(res)\n    return\n\ndef f(p):\n    return p // 2\n\ndef g(p):\n    return (p + 1) // 2\n\n# \u5076\u6570\neven = f(r) - f(l - 1)\nodd = g(r) - g(l - 1)\n\nres = (pow(even - odd, n * m, mod) + pow(even + odd, n * m, mod)) * pow(2, mod - 2, mod)\nres %= mod\nprint(res)\n", "from bisect import bisect_left, bisect_right\nfrom sys import stdin, stdout, setrecursionlimit\nfrom collections import Counter\ninput = lambda: stdin.readline().strip()\nprint = stdout.write\n\nmod = 998244353\n\nn, m, L, R = map(int, input().split())\n# odd\nif (n*m)%2:\n    print(str(pow(R-L+1, n*m, mod))+'\\n')\nelse:\n    nm = n*m\n    # both odd\n    if L%2 and R%2:\n        even = (R-L)//2\n    # R even\n    elif L%2 and not R%2:\n        even = (R-L+1)//2\n    # L even\n    elif not L%2 and R%2:\n        even = (R-L+1)//2\n    # both even\n    else:\n        even = (R-L)//2+1\n    odd = (R-L+1)-even\n    N = (pow(odd+even, nm, mod)+pow(abs(odd-even), nm, mod))%mod\n    print(str((pow(2, mod-2, mod)*N)%mod)+'\\n')\n", "n,m,L,R=map(int,input().split())\nk=R-L+1\nif (n*m)%2:\n    print(pow(k,n*m,998244353))\nelse:\n    r=pow(k,n*m,998244353)\n    if k%2:\n        if r%2:print(((r+1)//2)%998244353)\n        else:print(((r+1+998244353)//2)%998244353)\n    else:\n        if r%2==0:print(r//2)\n        else:print((r+998244353)//2)", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nMOD = 998244353\n\nn, m, l, r = map(int, input().split())\nh = r - l + 1\n\ns = n * m\nif s % 2 == 1:\n    ans = pow(h, s, MOD)\n    print(ans)\nelse:\n    ans = pow(h, s, MOD)\n    if h % 2 == 1:\n        ans += 1\n    ans *= pow(2, MOD-2, MOD)\n    ans %= MOD\n    print(ans)", "def expo(a,n):\n    #print(a)\n    #print(n)\n    if n>0:\n        ha = expo(a,n//2)\n        if n%2==1:\n            return (ha*ha*a)%MOD\n        else:\n            return (ha*ha)%MOD\n    else:\n        return 1\nMOD = 998244353\ndef f():\n    n,m,L,R = list(map(int,input().split(\" \")))\n    height = R-L+1\n    area = n*m\n    ans = expo(height,area)\n    #print(ans)\n    if(area%2==1):\n        print(ans)\n    else:\n        if(height%2==0):\n            if ans%2==1:\n                ans+=MOD\n            ans//=2\n            print(ans%MOD)\n        else:\n            if ans%2==0:\n                ans+=MOD\n            ans = (ans+1)//2\n            print(ans%MOD)\nf()\n", "mod = 119 << 23 | 1\nn, m, l, r = list(map(int, input().split()))\na = (r + 1) // 2 - l // 2\nb = r - l + 1 - a\nif a > b: a, b = b, a\nt = n * m\nif t % 2:\n    print(pow(a + b, t, mod))\nelif a == b:\n    print(pow(a, t, mod) * pow(2, t - 1, mod) % mod)\nelse:\n    print(pow(2, mod - 2, mod) * (1 + pow(2 * a + 1, t, mod)) % mod)\n"]