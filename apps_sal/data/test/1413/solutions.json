["n = int(input())\ns = input()\nr = 0\nfor i in range(n):\n    if s[i] in '2468':\n        r += i + 1\nprint(r)", "rr = lambda: input().strip()\nrri = lambda: int(rr())\nrrm = lambda: list(map(int, rr().split()))\n\ndef solve(N, S):\n    ans = 0\n    for i,x in enumerate(S):\n        x = int(x)\n        if x%2 == 0:\n            ans += i + 1\n    return ans\n\n\nfor tc in range(1):#rri()):\n    N = rri()\n    S = rr()\n    print(solve(N, S))\n", "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    if int(s[i]) % 2 == 0:\n        ans += i + 1\nprint(ans)", "n = int(input())\ns = list(input())\ns = list(map(int, s))\ncnt = 0\nfor i in range(n):\n    if s[i] % 2 == 0:\n        cnt += i + 1\nprint(cnt)", "import math\nimport bisect\n\ndef argsort(ls):\n    return sorted(range(len(ls)), key=ls.__getitem__)\n\ndef f(p=0):\n    if p==0:\n        return int(input())\n    if p==1:\n        return map(int, input().split())\n    elif p==2:\n        return list(map(int, input().split()))\n    else:\n        return sorted(list(map(int, input().split())))\n\n\nn = f()\ns = input()\nsm = 0\nfor i in range(n):\n    if int(s[i])%2==0:\n        sm+=i+1\n\nprint(sm)", "n = int(input())\ns = input()\n\ntotal = 0\nfor i,x in enumerate(s):\n    if x in \"02468\":\n        total += i+1\nprint (total)", "r = 0\nn = int(input())\ns = input()\nfor i in range(n):\n        if int(s[i]) % 2 == 0:\n                r += i + 1\n\nprint(r)\n", "n = int(input())\ns = input()\nk = 0\nfor i in range(1, n + 1):\n\td = int(s[i - 1])\n\tif d % 2 == 0:\n\t\tk += i\nprint(k)\n", "import math\nimport string\nimport re\nimport math\nimport random\nfrom decimal import Decimal, getcontext\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn = ria()[0]\nst = input()\nrs=0\nfor i in range(n):\n    if int(st[i])%2==0:\n        rs+=i+1\nprint(rs)\n", "n = int(input().strip())\ns = input().strip()\nans = 0\nfor i in range(len(s)):\n\tif int(s[i])%2 == 0:\n\t\tans += i+1\nprint(ans)", "input()\nS = list(map(int,list(input())))\nan = 0\n\nfor i in range(len(S)):\n    if S[i] % 2 == 0:\n        an += i + 1\nprint(an)        \n", "n = int(input())\nu = list(map(int, list(input())))\nans = 0\nfor i in range(n):\n    if u[i] % 2 == 0:\n        ans += i + 1\nprint(ans)\n", "n = int(input())\ns = input()\nnum = 0\nfor i in range(n):\n    if int(s[i]) % 2 == 0:\n        num += i+1\nprint(num)\n", "n=int(input())\ns=input()\nr=0\nfor i in range(n):\n    if int(s[i])%2==0:\n        r+=i+1\nprint(r)\n", "import math\nimport bisect\nimport itertools\nimport sys\nI=lambda : sys.stdin.readline()\nmod=10**9 +7\n'''fact=[1]*100001\nifact=[1]*100001\nfor i in range(1,100001):\n    fact[i]=((fact[i-1])*i)%mod\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\ndef ncr(n,r):\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\ndef npr(n,r):\n    return (((fact[n]*ifact[n-r])%mod))\n    '''\n\ndef modu(a,m):\n    if a%m:\n        return a%m\n    return m\n\ndef mindiff(a):\n    b=a[:]\n    b.sort()\n    m=10000000000\n    for i in range(len(b)-1):\n        if b[i+1]-b[i]<m:\n            m=b[i+1]-b[i]\n    return m\n    \ndef lcm(a,b):\n    return a*b//math.gcd(a,b)\n\n    \ndef merge(a,b):\n    i=0;j=0\n    c=0\n    ans=[]\n    while i<len(a) and j<len(b):\n        if a[i]<b[j]:\n            ans.append(a[i])\n            i+=1\n        else:\n            ans.append(b[j])\n            c+=len(a)-i\n            j+=1\n    ans+=a[i:]\n    ans+=b[j:]\n    return ans,c\ndef mergesort(a):\n    if len(a)==1:\n        return a,0\n    mid=len(a)//2   \n    left,left_inversion=mergesort(a[:mid])\n    right,right_inversion=mergesort(a[mid:])\n    m,c=merge(left,right)\n    c+=(left_inversion+right_inversion)\n    return m,c\n    \ndef is_prime(num):\n    if num == 1: return False\n    if num == 2: return True\n    if num == 3: return True\n    if num%2 == 0: return False\n    if num%3 == 0: return False\n    t = 5\n    a = 2\n    while t <= int(math.sqrt(num)):\n        if num%t == 0: return False\n        t += a\n        a = 6 - a\n    return True\n    \n  \ndef ceil(a,b):\n    if a%b==0:\n        return a//b\n    else:\n        return (a//b + 1)\n\n\ndef ncr1(n,r):\n    s=1\n    for i in range(min(n-r,r)):\n        s*=(n-i)\n        s%=mod\n        s*=pow(i+1,mod-2,mod)\n        s%=mod\n    return s\n\n\n#/////////////////////////////////////////////////////////////////////////////////////////////////\n\nn=int(input())\ns=input()\nans=0\nfor i in range(n):\n    if s[i] in ['2','4','6','8']:\n        ans+=i+1\nprint(ans)        \n", "n = int(input())\ns=input()\nans = 0\nfor i in range(n):\n    if s[i] in '02468':\n        ans += i+1\nprint(ans)", "import math\nimport random\nimport sys\nfrom collections import defaultdict as dd\nans = 0\nn = int(input())\nl = [int(i) for i in input()]\nfor i in range(n):\n    if l[i] % 2 == 0:\n        ans += (i + 1)\nprint(ans)\n\n", "n = int(input())\ns = input()\nres = 0\nfor i in range(n):\n    if int(s[i]) % 2 == 0:\n        res += i + 1\nprint(res)", "n = int(input())\nseq = input()\nnbPaires = 0\nfor i in range(n):\n\tif int(seq[i])%2 == 0:\n\t\tnbPaires += i+1\nprint(nbPaires)", "n=int(input())\ns=input()\nans=0\nfor i in range(n):\n         if(int(s[i])%2==0):\n                  ans+=i+1\nprint(ans)", "import io, sys, atexit, os\n\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\nmm = 1000000007\n\n\ndef solve ():\n\tt = 1\n\tfor it in range (t):\n\t\tn=nu()\n\t\ta=input()\n\t\tcc=0\n\t\tfor i in range(n):\n\t\t\tif(int(a[i])%2==0):\n\t\t\t\tcc+=i+1\n\t\tprint(cc)\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "n = int(input())\ns = input()\na = 0\nfor i in range(len(s)):\n    if int(s[i])%2 == 0:\n        a += (i+1)\nprint(a)\n", "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    if int(s[i])%2 == 0:\n        ans+=i+1\nprint(ans)", "def mp():\n    return map(int, input().split())\n\nn = int(input())\ns = input()\ncnt = 0\n\nfor i in range(n):\n    if int(s[i]) % 2 == 0:\n        cnt += i + 1\n\nprint(cnt)"]