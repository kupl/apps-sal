["r=int(input())\nif r<=4:\n    print(\"NO\")\nelif r%2==0:\n    print(\"NO\")\nelse :\n    print(1, (r-3)//2)", "n = int(input())\ni = 1\nwhile i * i < n:\n    l = ( n - i*i - i - 1 )\n    if l > 0 and l % (2 * i) == 0:\n        print(i, l // (2 * i) )\n        break\n    i += 1\nelse:\n    print(\"NO\")\n", "n = int(input())\nif(n%2==0 or n<=3):\n    print(\"NO\")\nelse:\n    print(1,(n-3)//2)\n", "import math\nimport sys,string,bisect,heapq\ninput=sys.stdin.readline\nfrom collections import deque,defaultdict\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nn=I()\nif(n%2==0 or n<=3):\n    print(\"NO\")\nelse:\n    print(1,(n-3)//2)\n    \n", "\nN = int(input())\n\nnum = N-1\n\nif num<=3 or num%2==1:\n    print('NO')\n    quit()\n    \nx = 1\n\ny = (num-2)//2\n\nprint(x,y)\n", "r = int(input())\nans = 'NO'\nfor i in range(1, 3 * int(r ** .5)):\n    d = r - 1 - i - i ** 2\n    if d < 1:\n        break\n    else:\n        if d % (i * 2) == 0:\n            ans = (i, d // (i * 2))\n            break\nif ans == 'NO':\n    print(ans)\nelse:\n    print(*ans)\n", "r = int(input())\n\nif r%2 == 0:\n    print('NO')\n\nelif r == 1:\n    print('NO')\n\nelif r == 3:\n    print('NO')\nelse:\n    print(1, end=' ')\n    print((r-3)//2)", "r = int(input())\nif r <= 4 or r % 2 == 0:\n    print('NO')\nelse:\n    print(1, int((r-3)/2))\n", "n = int(input())\nif n&1 and n >= 5:\n    print(1, (n-5)//2 + 1)\nelse:\n    print(\"NO\")", "#!/usr/bin/env python\nr = int(input())\n\nfor x in range(1, 10**6):\n    if (r - (x**2 + x + 1)) % (x << 1) == 0:\n        y = (r - (x**2 + x + 1)) // (x << 1)\n        if y > 0:\n            print(x, y)\n            break\nelse:\n    print(\"NO\")\n", "def prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\ndef factors(n):\n    super=[1]\n    for i in prime_factors(n):\n        super.extend([j*i for j in super])\n    return list(sorted(set(super)))\n    \nn = int(input())\nn -= 1\nOK = False;\nfor i in factors(n):\n    if((n // i - i) > 0 and (n // i - i) % 2 == 1 and i > 0 and (n // i - i)// 2 > 0):\n        print(\"{} {}\".format(i, (n // i - i)// 2))\n        OK = True\n        break\nif(not OK):\n    print(\"NO\")", "n = int(input())\nn = n-1\nx = int(n**0.5)\nflag = True\nfor i in range(1, x+1):\n\tif(n%i==0):\n\t\ttemp = n//i\n\t\ttemp = temp - i - 1\n\t\tif(temp==0):\n\t\t\tcontinue\n\t\tif(temp%2==0):\n\t\t\ta = i\n\t\t\tb = temp//2\n\t\t\tflag = False\n\t\t\tbreak\nif(flag):\n\tprint(\"NO\")\nelse:\n\tprint(a,b)\n", "from math import sqrt, ceil\nr = int(input())\nfunc = lambda x: (r - 1 - x - x * x) / 2 / x\nfor x in range(1, ceil(sqrt(r)) + 1):\n    y = func(x)\n    if y > 0 and y == int(y):\n        print(x, int(y))\n        return\nprint('NO')\n\n", "r = int(input())\n\nif r % 2 == 0:\n  print(\"NO\")\nelse:\n  k = (r - 1) // 2 - 1\n  if k > 0:\n    print(1, k)\n  else:\n    print(\"NO\")", "r = int(input())\n \nif (r<5 or r%2==0):\n    print(\"NO\")\n    return\n \nprint(1, (r-3) // 2)", "r = int(input())\n\nif r >= 5:\n    if r % 2 == 0:\n        print('NO')\n    else:\n        y = int((r-3)/2)\n        print(1,'',y)\nelse:\n    print('NO')\n", "def __starting_point():\n\tr = int(input())\n\tif r < 5:\n\t\tprint(\"NO\")\n\telif r % 2 == 0:\n\t\tprint(\"NO\")\n\telse:\n\t\ty = (r - 3)//2\n\t\tprint(\"1 \" + str(y))\n\n__starting_point()", "import sys\n\ndef H(x,y):\n    r = x*x+2*x*y+x+1\n    return r\n\ndef main():\n    input = sys.stdin.readline()\n    r = int(input)\n    x = 1\n    q = r - 3\n    while q > 0:\n        if q % (2*x) == 0:\n            y = q // (2*x)\n            print(x,y)\n            break\n        else:\n            x += 1\n            q = r - 1 - x - x*x\n    if q <= 0:\n        print(\"NO\")\n#    return output\n\ndef __starting_point():\n    main()\n__starting_point()", "r=int(input())\nif(r%2==0 or r<=4):\n print(\"NO\")\nelse:\n y=(r-3)//2\n print(1,y)", "import sys\nfrom collections import Counter\nimport itertools\nfrom math import floor, ceil\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef dinput():\n    return int(input())\n \ndef tinput():\n    return input().split()\n \ndef rinput():\n    return map(int, tinput())\n \ndef rt(x1, x2, y3):\n    print(0.5*(x2+x1))\n \ndef main():\n    y = int(input())\n    i = 1\n    t = 0\n    r = 1\n    if y % 2 == 1 and y >= 5:\n        print(1, (y - 3)//2)\n    else:\n        print(\"NO\")\n        \n    \nmain()", "r = int(input())\nif (r > 3) and (r & 1):\n    print(1, (r - 3) // 2)\nelse: \n    print(\"NO\")", "n=int(input())\nif n%2==0:\n    print(\"NO\")\nelse:\n    n-=1\n    n-=2\n    jam=int(n//2)\n    if jam>0:\n        print(1,jam)\n    else:\n        print(\"NO\")", "h = int(input())\n\nif h % 2 == 0:\n    print(\"NO\")\n    return\nif h < 5:\n    print(\"NO\")\n    return\nelse:\n    print(1, (h // 2 - 1))", "r = int(input())\n\ndef factorise(n):\n    # n is an odd number and we've ruled out 1 already\n    factors = []\n    guess = 3\n    while guess < n:\n        exponent = 1\n        while n % guess == 0:\n            factors.append(guess**exponent)\n            n //= guess\n            factors.append(n)\n            exponent += 1\n        guess += 2\n    return sorted(factors)\n\nif r % 2 == 1:\n    x = 1\n    y = (r - 3)//2\n    if y > 0:\n        print(x, y)\n    else:\n        print(\"NO\")\nelse:\n    '''r -= 1\n    # solve x(x + 2y + 1)\n    factors = factorise(r)\n    for x in factors:\n        y = (-x -1 + 15/x)/2\n        if y % 1 == 0:\n            print(x, y)\n            return\n    else:'''\n    print(\"NO\")\n"]