["n = int(input())\nar = list(map(int,input().split(' ')))\nar.sort()\ns=[]\nfor i in ar:\n\ts.sort(reverse=True)\n\tfor j in range(len(s)):\n\t\tif i>=s[j]:\n\t\t\ts[j]+=1\n\t\t\tbreak\n\telse:\n\t\ts.append(1)\nprint(len(s))\n", "from bisect import bisect_left\ninput()\ns = []\nfor i in sorted(map(int, input().split())):\n    k = bisect_left(s, -i)\n    if k == len(s): s.append(-1)\n    else: s[k] -= 1\nprint(len(s))", "n = input()\nh = [0]\nA = sorted(map(int, input().split()))\n\nfor x in A:\n    if x < min(h):\n        h += [1]\n    else:\n        h[h.index(min(h))]+=1\nprint(len(h))", "n = input()\nh = [0]\nA = list(map(int, input().split()))\nA.sort()\n\nfor x in A:\n    if x < min(h):\n        h += [1]\n    else:\n        h[h.index(min(h))]+=1\nprint(len(h))\n", "n = int(input())\nval = [[]]\nfor x in sorted(int(x) for x in input().split()):\n    for l in val:\n        if x >= len(l):\n            l.append(x)\n            break\n    if len(val[-1]) > 0:\n        val.append([])\nprint(len(val) - 1)\n", "input();print(1+max(x//-~f for x,f in enumerate(sorted(map(int,input().split())))))", "import sys\nimport math\n\nn = int(sys.stdin.readline())\nxn = [int(x) for x in (sys.stdin.readline()).split()]\n\n\n\nxn.sort()\n\nk = [1]\nres = 1\nfor i in xn[1:]:\n    flag = False\n    for t in range(res):    \n        if(i >= k[t]):\n            k[t] += 1\n            flag = True\n            break\n    \n    if(flag == False):\n        res += 1\n        k.append(1)\n        \nprint(res)\n", "def main():\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    res = 0\n    while l:\n        res += 1\n        i, l1 = 0, []\n        for x in l:\n            if x < i:\n                l1.append(x)\n            else:\n                i += 1\n        l = l1\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# coding: utf-8\nn = int(input())\nans = 0\nli1 = [int(i) for i in input().split()]\nli2 = []\nwhile li1:\n    li1.sort()\n    n = len(li1)\n    i = 0\n    while i < n:\n        if li1[i] < i:\n            li2.append(li1[i])\n            del(li1[i])\n            n -= 1\n        else:\n            i += 1\n    ans += 1\n    li1 = li2\n    li2 = []\nprint(ans)\n", "n=int(input())\nx=list(map(int,input().split()))\nx.sort()\n\nnu=0\nans=0\n\nmark=[]\nfor i in range(0,n):\n    mark.append(0)\n\n\nfor i in range(0,n):\n    fail=1\n    nu=0\n    for j in range(0,n):\n        if mark[j] == 0:\n            fail = 0\n            if x[j] >= nu:\n                nu+=1\n                mark[j]=1\n    if fail == 0:\n        ans+=1\n    else:\n        break\nprint(ans)\n        \n        \n        \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n", "def main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    #f.readline()\n    #input()\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    [n]=get()\n    a=get()\n    a.sort()\n    p=[[]]\n    p[0].append(a[0])\n    for i in a[1:]:\n        p=sorted(p,key = lambda x:len(x))\n        p.reverse()\n        found=False\n        for j in p:\n            if len(j)<=i:\n                j.append(i)\n                found=True\n                break\n        if found ==False:\n            p.append([i])\n    print(len(p))\n\n\n    if mode==\"file\":f.close()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "input();print(1+max(x//-~f for x,f in enumerate(sorted(map(int,input().split())))))", "from sys import stdin\ninFile = stdin\ntokens = []\ntokens_next = 0\n\ndef next_str():\n    nonlocal tokens, tokens_next\n    while tokens_next >= len(tokens):\n        tokens = inFile.readline().split()\n        tokens_next = 0\n    tokens_next += 1\n    return tokens[tokens_next - 1]\n\ndef nextInt():\n    return int(next_str())\n\ndef check(a, n):\n    # a must be sorted in decresing order\n    if n == 0:\n        return 0\n    if len(a) <= n:\n        return 1\n    l = [[i] for i in a[:n]]\n    allowed = [i for i in a[:n]]\n    ind = 0\n    for i in a[n:]:\n        ind += 1\n        ind %= len(allowed)\n        starting_pos = ind\n        while allowed[ind] == 0:\n            ind += 1\n            ind %= len(l)\n            if ind == starting_pos:\n#                 print(l, 0)\n                return 0\n        l[ind] += [i]\n        allowed[ind] = min(i, allowed[ind] - 1)\n#     print(l, 1)\n    return 1\n\ndef solve(a):\n    a.sort(reverse=1)\n    n = len(a)\n    low = 0\n    high = n\n    while low + 1 < high:\n        m = (low + high) // 2\n        if check(a, m):\n            high =  m\n        else :\n            low = m\n    return high\n\nn = nextInt()\na = [nextInt() for i in range(n)]\n\nprint(solve(a))\n\n\n\n", "n = int(input())\nl = list(map(int,input().split(' ')))\nl.sort()\n\nnb = 0\n\nfor i in range(n):\n    if l[i] == -1 :\n        continue\n    h = 1\n    nb += 1\n    for j in range(i+1,n):\n        if l[j]>=h:\n            h+=1\n            l[j] = -1\n\nprint(nb)", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\npile,tc=0,n\nvisited = [0]*n\nwhile tc != 0:\n    tt=0\n    for i in range(0,n):\n        if a[i]>=tt and visited[i] != 1:\n            visited[i]=1\n            tt+=1\n            tc-=1\n    if(tt>0):\n        pile+=1\nprint(pile)\n", "n = int(input())\nx = sorted(list(map(int, input().split())))\nans = 1\nfor i in range(n):\n\tif(x[i] < i//ans):\n\t\tans += 1\nprint(ans)\n", "def take_lightest_box(boxes):\n\n    for i in range(101):\n        if i in boxes:\n            boxes[i] -= 1\n            if boxes[i] == 0:\n                del boxes[i]\n            return i\n\n\npiles = []\n\n\nboxes = {}\n\ninput()\ntmp = input()\n\nx = [int(i) for i in tmp.split(\" \")]\n\nfor item in x:\n    if item in boxes:\n        boxes[item] = boxes[item] + 1\n    else:\n        boxes[item] = 1\n\nwhile len(boxes) > 0:\n    lightest = take_lightest_box(boxes)\n\n    for pile in piles:\n        if len(pile) <= lightest:\n            pile.append(lightest)\n            break\n    else:\n        piles.append([lightest])\n\n\nprint(len(piles))\n\n\n", "n = int(input())\nar = list(map(int, input().split()))\nar.sort()\nstack = 0\n\nchosen = [False] * n\n\nfor i in range(n):\n\tchosen[i] = False\n\nfor i in range(n):\n\tif(chosen[i] == False):\n\t\tchosen[i] = True\n\t\tstack+=1\n\t\tbox = 1\n\t\tfor j in range(i, n):\n\t\t\tif(chosen[j] == False and ar[j] >= box):\n\t\t\t\tchosen[j] = True\n\t\t\t\tbox+=1\n\nprint(stack) \t", "n=int(input())\na=list(map(int,input().split()))\na.sort()\ndp = [0]\nfor i in a:\n    add = False\n    for j in range(len(dp)):\n        if(dp[j]<=i):\n            dp[j]+=1\n            add = True\n            break\n    if not add :\n        dp.append(1)\nprint(len(dp))\n", "N = int(input())\na = list(map(int, input().split()))\na.sort()\n\nk = 1\nwhile True:\n  for i in range(len(a)):\n    if a[i] < (i//k):\n      break\n  else:\n    print(k)\n    break\n  k += 1", "N = int(input())\nar = list(map(int, input().split()))\nar.sort()\n\na = 1\nb = 100\nwhile a < b:\n  compliant = True\n  k = (a+b) // 2\n  for i in range(len(ar)):\n    if ar[i] < (i//k):\n      compliant = False\n      break\n  if compliant:\n    b = k\n  else:\n    a = k + 1\n  \nprint(b)", "n=int(input())\nl=list(map(int,input().split()))\nl=sorted(l)\nl=l[::-1]\nl1=[0]*n\nk=0\nfor i in range(n) :\n    if l1[i]!=1 :\n        t=l[i]\n        p=1\n        r=0\n        l1[i]==1\n        V=[t]\n        for j in range(n) :\n            if l1[j]==0 and l[j]<t :\n                t=l[j]\n                l1[j]=1\n                V.append(t)\n                r=r+1\n        for j in range(n-1,-1,-1) :\n            if l1[j]!=1 :\n                if l[j] in V :\n                    q=V.index(l[j])+1\n                    if len(V)-q+1<=l[j] :\n                        c=0\n                        s=-1\n                        u=len(V)-q+1\n                        for e in range(q-1,-1,-1) :\n                            if V[e]>=u+s :\n                                s=s+1\n                            else :\n                                c=1\n                                break\n                        if c==0 :\n                            l1[j]=1\n                            V=V[:q-1]+[l[j]]+V[q-1:]\n                            \n                            \n                            \n                            \n                    \n     \n        k=k+1\n        \nprint(k)\n            \n                \n    \n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nimport math\nn=int(input())\nbox=[int(x) for x in input().split()]\nbox.sort()\nk=0\nfor i in range(n):\n    if k*(box[i]+1)<=i:\n        k+=1\nprint(k)\n", "input();print(1+max(x//-~f for x,f in enumerate(sorted(map(int,input().split())))))\n", "input();print(1+max(x//-~f for x,f in enumerate(sorted(map(int,input().split())))))\n"]