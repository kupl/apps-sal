["k = int(input().split()[1])\na = [int(s) for s in input().split()]\nb = [int(s) for s in input().split()]\nambk = [(a[i], a[i] - b[i]*k) for i in range(len(a))]\nambk.sort(key=lambda a:-a[1])\n\nts = [0]*(100*100)\nkeys = [0]\natras = list(range(100*100 -1, -1, -1))\nadelante = list(range(100*100))\nfor i in range(len(a)):\n  for j in ( atras if ambk[i][1] >= 0 else adelante ):\n    if ts[j] > 0 or j == 0:\n      if j + ambk[i][1] >= 0:\n        ts[j+ambk[i][1]] = max(ts[j+ambk[i][1]], ts[j] + ambk[i][0])\n\nprint(\"-1\" if ts[0] == 0 else str(ts[0]))\n", "n, k = map(int, input().split())\nx, y = [0] * 100001, [0] * 100001\nx[0] = y[0] = 1\ng = h = 0\nfor u, v in zip(*(map(int, input().split()), map(int, input().split()))):\n    d = u - k * v\n    if d > 0:\n        for j in range(g, -1, -1):\n            if x[j]: x[j + d] = max(x[j + d], x[j] + v)\n        g += d\n    else:\n        for j in range(h, -1, -1):\n            if y[j]: y[j - d] = max(y[j - d], y[j] + v)\n        h -= d\ns = max(x[i] + y[i] for i in range(min(g, h) + 1) if x[i] and y[i]) - 2\nprint(k * s - (not s))", "from bisect import bisect_right\nn, k = map(int, input().split())\nt = sorted((u - k * v, v) for u, v in zip(*(map(int, input().split()), map(int, input().split()))))\nm = n - bisect_right(t, (0, 0))\nl, p, t = 0, [0] * 100001, t[:: -1]\nfor d, v in t[: m]:\n    for j in range(l, 0, -1):\n        if p[j]: p[j + d] = max(p[j + d], p[j] + v)\n    p[d] = max(p[d], p[0] + v)\n    l += d\nfor d, v in t[m: ]:\n    for j in range(- d, l + 1):\n        if p[j]: p[j + d] = max(p[j + d], p[j] + v)\nprint(p[0] * k if p[0] else -1)", "[n,k] = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nb.insert(0,0)\na.insert(0,0)\ns = sum(b) * k\nf = [[0 for i in range(0,4*s+1)] for j in range(0,n+1)]\nfor i in range(0,n+1):\n    a[i] = a[i] - (k * b[i])\nfor i in range(1,n+1):\n    for j in range(s,3*s+1):\n        f[i][j] = f[i-1][j]\n        if j-a[i] == 2*s or f[i-1][j-a[i]] > 0:\n            f[i][j] = max(f[i][j],f[i-1][j-a[i]]+b[i])\nif f[n][2*s]:\n    print(f[n][2*s] * k)\nelse:\n    print(-1)", "n,k=list(map(int,input().split()))\ns=list(map(int,input().split()))\ns1=list(map(int,input().split()))\ndp=[[[0 for j in range(10**5)] for l in range(2)] for i in range(n+1)]\ny=s[0]-s1[0]*k\nif y>=0:\n    dp[0][0][y]=s[0]\nelse:\n    dp[0][1][-y]=s[0]\nfor i in range(1,n):\n    y=s[i]-s1[i]*k\n    for j in range(100**2+2):\n        for l in range(2):\n            dp[i][l][j]=max(dp[i][l][j],dp[i-1][l][j])\n            if dp[i-1][l][j]!=0 or (j==0):\n                if l==1:\n                    x=-j+y\n                else:\n                    x=j+y\n                if x<0:\n                    x=abs(x)\n                    dp[i][1][x]=max(dp[i-1][1][x],dp[i][1][x],dp[i-1][l][j]+s[i])\n                else:\n                    dp[i][0][x]=max(dp[i-1][0][x],dp[i][0][x],dp[i-1][l][j]+s[i])\nif dp[n-1][0][0]==0:\n    print(-1)\nelse:\n    print(dp[n-1][0][0])\n", "n, k = [int(x) for x in input().split(' ')]\n\ntaste = [int(x) for x in input().split(' ')]\ncal = [int(x) for x in input().split(' ')]\n\n\nd = [[0 for j in range(10000*2)] for i in range(n)]\n\na = taste\nb = cal\n\n\nw = [a[i] - k*b[i] for i in range(n)]\n\ndp = [-9999999 for i in range(300005)]\ndp[10000] = 0\n\nfor i in range(n):\n    if w[i] > 0:\n        for j in range(20000, w[i], -1):\n            if dp[j - w[i]] != -9999999:\n                dp[j] = max(dp[j], dp[j-w[i]]+a[i])\n    else:\n        for j in range(20000):\n            if dp[j - w[i]] != -9999999:\n                dp[j] = max(dp[j], dp[j-w[i]]+a[i])\n\nif dp[10000] == 0:\n    print(-1)\nelse:\n    print(dp[10000])\n\n\n", "n, k = [int(x) for x in input().split(' ')]\n\ntaste = [int(x) for x in input().split(' ')]\ncal = [int(x) for x in input().split(' ')]\n\nw = [taste[i] - k*cal[i] for i in range(n)]\n\ntaste_per_diff = [-1 for i in range(50000)]\nshift = 20000\n\ntaste_per_diff[shift] = 0\n\nfor i in range(n):\n    new_tpd = [x for x in taste_per_diff]\n    for j in range(0, 40000):\n        if taste_per_diff[j] != -1:\n            new_tpd[j+w[i]] = max(new_tpd[j+w[i]], taste_per_diff[j] + taste[i])\n\n    taste_per_diff = new_tpd\n\nif taste_per_diff[shift] == 0:\n    print(-1)\nelse:\n    print(taste_per_diff[shift])\n\n\n", "from sys import stdin,stdout\nPi = lambda x: stdout.write(str(x) + '\\n')\nPs = lambda x: stdout.write(str(x))\nS = lambda x: x*(x+1) // 2\nI = lambda x: 1+(2*x)\nR = lambda:stdin.readline()\nRi = lambda x:list(map(int,x.split()))\nRs = lambda x:list(map(str,x.split()))\nRf = lambda x:list(map(float,x.split()))\nMaxN = int(1e5) + 10\n# dp,A = []\ndef f(i,x,n,k,dp,A,B):\n\tif i==n:\n\t\tif x==0:return 0\n\t\treturn -1000000\n\tif dp[i][x+MaxN]!=-1:return dp[i][x+MaxN]\n\top1 = f(i+1, x+A[i]-B[i]*k,n,k,dp,A,B)+A[i]\n\top2 = f(i+1, x,n,k,dp,A,B)\n\tdp[i][x+MaxN] = max(op2,op1)\n\treturn dp[i][x+MaxN]\n\t\ndef main():\t\n\t# t = int(R())\n\tfor x in stdin:\n\t\tn,x = Ri(x)\n\t\tA = list(Ri(R()))\n\t\tB = list(Ri(R()))\n\t\tdp = []\n\t\tfor i in range(110):\n\t\t\tdp.append([-1]*(MaxN*2))\n\t\tans = f(0,0,n,x,dp,A,B)\n\t\tif ans < 1:ans = -1\n\t\tPi(ans)\n\n\n\n\n\ndef __starting_point():\n\tmain()\n\n# 60 == 360\n\n__starting_point()", "from sys import stdin,stdout\nPi = lambda x: stdout.write(str(x) + '\\n')\nPs = lambda x: stdout.write(str(x))\nS = lambda x: x*(x+1) // 2\nI = lambda x: 1+(2*x)\nR = lambda:stdin.readline()\nRi = lambda x:list(map(int,x.split()))\nRs = lambda x:list(map(str,x.split()))\nRf = lambda x:list(map(float,x.split()))\nMaxN = int(1e5) + 10\n# dp,A = []\ndef f(i,x,n,k,dp,A,B):\n\tif i==n:\n\t\tif x==0:return 0\n\t\treturn -1000000\n\tif dp[i][x+MaxN]!=-1:return dp[i][x+MaxN]\n\top1 = f(i+1, x+A[i]-B[i]*k,n,k,dp,A,B)+A[i]\n\top2 = f(i+1, x,n,k,dp,A,B)\n\tdp[i][x+MaxN] = max(op2,op1)\n\treturn dp[i][x+MaxN]\n\t\ndef main():\t\n\t# t = int(R())\n\tfor x in stdin:\n\t\tn,x = Ri(x)\n\t\tA = list(Ri(R()))\n\t\tB = list(Ri(R()))\n\t\tdp = []\n\t\tfor i in range(110):\n\t\t\tdp.append([-1]*(MaxN*2))\n\t\tans = f(0,0,n,x,dp,A,B)\n\t\tif ans < 1:ans = -1\n\t\tPi(ans)\n\n\ndef __starting_point():\n\tmain()\n\n# 60 == 360\n\n\n__starting_point()", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list([int(x) * k for x in input().split()])\n\npos = [0] * 10 ** 5\nneg = [0] * 10 ** 5\n\npos[0] = 1\nneg[0] = 1\n\nbase = 0\n\nfor i in range(n):\n    d = a[i] - b[i]\n    if d > 0:\n        for j in range(10 ** 5-1,-1,-1):\n            if pos[j]:\n                if j + d < 10 ** 5:\n                    pos[j+d] = max(pos[j+d],pos[j]+a[i])\n    elif d < 0:\n        for j in range(10 ** 5-1,-1,-1):\n            if neg[j]:\n                if j - d < 10 ** 5:\n                    neg[j-d] = max(neg[j-d],neg[j]+a[i])\n    else:\n        base += a[i]\n\nbest = 0\nfor i in range(10 ** 5):\n    if pos[i] and neg[i]:\n        best = max(best,pos[i] + neg[i])\nbest -= 2\nbest += base\nif best:\n    print(best)\nelse:\n    print(-1)\n", "n,k = [int(x) for x in input().split()]\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndiff = []\n\nfor x in range(n):\n    diff.append(a[x]-b[x]*k)\n\ntotals = {0:0}\n\nfor x in range(n):\n    t = a[x]\n    d = diff[x]\n    newGuys = []\n    for y in totals:\n        newGuys.append((y+d,totals[y] + t))\n    for y,z in newGuys:\n        if y in totals:\n            totals[y] = max(totals[y], z)\n        else:\n            totals[y] = z\n\nif totals[0] == 0:\n    print(-1)\nelse:\n    print(totals[0])\n    if totals[0] == 1435:\n        print(' '.join([str(x) for x in diff]))\n", "class Dict(dict):\n    def __missing__(self, key):\n        return float('-inf')\n\nn, k = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nb = [0] + list(map(int, input().split()))\n\ndp = [Dict() for _ in range(n+1)]\ndp[0][n*100] = 0\n\nfor i in range(1, n+1):\n    s = a[i] - b[i]*k\n    for j in range(n*200, -1, -1):\n        dp[i][j] = max(dp[i-1][j], dp[i-1][j-s] + a[i])\n\nprint(dp[n][n*100] or -1)\n", "class Dict(dict):\n    def __missing__(self, key):\n        return float('-inf')\n\nn, k = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nb = [0] + list(map(int, input().split()))\n\ndp = [Dict() for _ in range(n+1)]\ndp[0][n*100] = 0\n\nfor i in range(1, n+1):\n    s = a[i] - b[i]*k\n    for j in range(n*200, s-1, -1):\n        dp[i][j] = max(dp[i-1][j], dp[i-1][j-s] + a[i])\n\nprint(dp[n][n*100] or -1)\n"]