["dhuang=0\na,b,c,d=list(map(int,input().split(' ')))\nhuang = [['*']*b for _ in range(a)]\nfor i in range(c):\n    x,y=list(map(int,input().split(' ')))\n    huang[x-1][y-1] = '#'\nfor i in range(a):\n    for j in range(b):\n        for k in range(i, a):\n            for l in range(j, b):\n                ct=0\n                for m in range(i, k+1):\n                    for n in range(j, l+1):\n                        if huang[m][n]=='#':\n                            ct+=1\n                if ct>=d:\n                    dhuang+=1\nprint(dhuang)\n", "#they are all inclusive\nR, C, N, K = list(map(int, input().split()))\nv = []\nfor i in range(N):\n    v.append(tuple(map(int, input().split())))\nans = 0\nfor sr in range(1, R+1):\n    for sc in range(1, C+1):\n        for er in range(sr, R+1):\n            for ec in range(sc, C+1):\n                cnt = 0\n                for x, y in v:\n                    if sr <= x <= er and sc <= y <= ec:\n                        cnt += 1\n                if cnt >= K:\n                    ans += 1\nprint(ans)\n", "r, c, n, k = [int(i) for i in input().split()]\na = [[0] * r for i in range(c)]\nfor i in range(n):\n    x, y = [int(i) for i in input().split()]\n    a[y - 1][x - 1] = 1\nct1 = 0\nfor i in range(c):\n    for j in range(r):\n        for s in range(i + 1, c + 1):\n            for t in range(j + 1, r + 1):\n                ct = 0\n                for u in range(i, s):\n                    for v in range(j, t):\n                        if a[u][v] == 1:\n                            ct += 1\n                if ct >= k:\n                    ct1 += 1\nprint(ct1)", "r, c, n, k = map(int, input().split())\ng, v = [[False] * c for i in range(r)], 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    g[x - 1][y - 1] = True\nfor a in range(r):\n    for b in range(c):\n        for e in range(a, r):\n            for f in range(b, c):\n                x = sum(g[i][j] for i in range(a, e + 1) for j in range(b, f + 1))\n                if x >= k:\n                    v += 1\nprint(v)", "r,c,n,k = map(int,input().split())\ns = [[0] * c for i in range(r)]\nfor i in range(n):\n    x, y = map(int,input().split())\n    s[x-1][y-1] = 1\nres = 0\nfor br in range(r):\n    for bc in range(c):\n        for er in range(br,r):\n            for ec in range(bc,c):\n                counter = 0\n                for i in range(br, er+1):\n                    for j in range(bc, ec+1):\n                        if s[i][j] == 1: counter += 1\n                if counter >= k : res += 1\n                \nprint(res)", "r, c, n, k = list(map(int, input().split()))\np = []\nfor i in range(r):\n    p.append([0] * c)\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    p[x - 1][y - 1] = 1\nans = 0\nfor i in range(r):\n    for t in range(c):\n        for e in range(r):\n            for g in range(c):\n                col = 0\n                for h in range(i, e + 1):\n                    for f in range(t, g + 1):\n                        col += p[h][f]\n                if col >= k:\n                    ans += 1\nprint(ans)\n", "r, c, n, k = [int(x) for x in input().split()]\nmus = [[0 for j in range(c)] for i in range(r)]\nfor t in range(n):\n    x, y = [int(s)-1 for s in input().split()]\n    mus[x][y] = 1\nans = 0\nfor i1 in range(r):\n    for i2 in range(i1, r):\n        for j1 in range(c):\n            for j2 in range(j1, c):\n                S = 0\n                for x in range(i1, i2+1):\n                    for y in range(j1, j2+1):\n                        S += mus[x][y]\n                if S >= k:\n                    ans += 1\nprint(ans)\n", "def check(x1, y1, x2, y2):\n    nonlocal dp\n    cnt = 0\n    for i in range(x2, x1 + 1):\n        for j in range(y2, y1 + 1):\n            cnt += dp[i][j]\n    return cnt\n\n\n#n = int(input())\nr, c, n, k = list(map(int, input().split()))\n#s = list(map(int, input().split()))\ndp = [[0] * c for i in range(r)]\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    dp[a - 1][b - 1] = 1\nanswer = 0\nfor x1 in range(r):\n    for y1 in range(c):\n        for x2 in range(x1 + 1):\n            for y2 in range(y1 + 1):\n                cnt = check(x1, y1, x2, y2)\n                #print(cnt, x1, y1, x2, y2)\n                if cnt >= k:\n                    answer += 1\nprint(answer)\n", "r, c, n, k = list(map(int, input().split()))\ng = set([tuple(map(int, input().split())) for _ in range(n)])\nret = 0\nfor i in range(r):\n    for j in range(c):\n        for l in range(1, r-i+1):\n            for w in range(1, c-j+1):\n                count = 0\n                for a in range(i, i+l):\n                    for b in range(j, j+w):\n                        if (a+1, b+1) in g:\n                            count += 1\n                if count >= k:\n                    ret += 1\nprint(ret)\n", "r, c, n, k = map(int, input().split())\nA = [[0] * c for i in range(r)]\nfor i in range(n):\n    a, b = map(int, input().split())\n    A[a - 1][b - 1] = 1\n\nf = 0\ng = 0\nans = 0\nfor i in range(r):\n    for j in range(c):\n        for i2 in range(r - i):\n            for j2 in range(c - j):\n                cnt = 0\n                for i3 in range(i, i + i2 + 1):\n                    for j3 in range(j, j + j2 + 1):\n                        #print(i3, j3)\n                        cnt += int(A[i3][j3] == 1)\n                if cnt >= k:\n                    ans += 1\nprint(ans)", "r, c, n, k = list(map(int, input().split()))\nalt = []\ncount = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    alt.append([a - 1, b - 1])\nfor x1 in range(r):\n    for x2 in range(x1 + 1):\n        for y1 in range(c):\n            for y2 in range(y1 + 1):\n                d = 0\n                for i in range(n):\n                    if (alt[i][0] <= x1 and alt[i][0] >= x2 and alt[i][1] <= y1 and alt[i][1] >= y2):\n                        d += 1\n                if d >= k:\n                    count += 1\nprint(count)", "r, c, n, k = list(map(int, input().split()))\n\nboard = [[0 for col in range(c)] for row in range(r)]\nfor i in range(n):\n    x, y = [int(x)-1 for x in input().split()]\n    board[x][y] = 1\n\nphotos = 0\nfor x1 in range(r):\n    for y1 in range(c):\n        for x2 in range(x1, r):\n            for y2 in range(y1, c):\n                s = 0\n                for row in range(x1, x2+1):\n                    s += sum(board[row][y1:y2+1])\n                if s >= k:\n                    photos += 1\n\nprint(photos)\n", "r,c,n,k = list(map(int,input().split()))\nxy = [list(map(int,input().split())) for i in range(n)]\nfield = [[0]*c for i in range(r)]\nfor i in range(n):\n    field[xy[i][0]-1][xy[i][1]-1] = 1\nnum = 0\nfor i in range(r):\n    for j in range(c):\n        for i2 in range(i,r):\n            for j2 in range(j,c):\n                num2 = 0\n                for i3 in range(i,i2+1):\n                    for j3 in range(j,j2+1):\n                        if field[i3][j3] == 1:\n                            num2 += 1\n                if num2 >= k:\n                    num += 1\nprint(num)\n", "read = lambda: list(map(int, input().split()))\nr, c, n, k = read()\na = [[0] * (c + 1) for i in range(r + 1)]\nfor i in range(n):\n    x, y = read()\n    a[x][y] = 1\nd = [[0] * (c + 1) for i in range(r + 1)]\nfor i in range(1, r + 1):\n    for j in range(1, c + 1):\n        if a[i][j]: d[i][j] += 1\n        if i == j == 0: continue\n        p1 = d[i - 1][j] if i else 0\n        p2 = d[i][j - 1] if j else 0\n        p3 = d[i - 1][j - 1] if i and j else 0\n        d[i][j] += p1 + p2 - p3\ncnt = 0\nfor x1 in range(r + 1):\n    for y1 in range(c + 1):\n        for x2 in range(x1 + 1, r + 1):\n            for y2 in range(y1 + 1, c + 1):\n                cur = d[x2][y2] - d[x2][y1] - d[x1][y2] + d[x1][y1]\n                if cur >= k: cnt += 1\nprint(cnt)\n", "r, c, n, k = list(map(int, input().split()))\nd = [[0 for j in range(c+1)] for i in range(r+1)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    d[x][y] = 1\nfor i in range(1,r+1):\n    for j in range(1,c+1):\n        d[i][j] = d[i][j] + d[i-1][j] + d[i][j-1] - d[i-1][j-1]\na = 0\nfor i in range(1,r+1):\n    for j in range(1,c+1):\n        for x in range(i,r+1):\n            for y in range(j,c+1):\n                if d[x][y] - d[x][j-1] - d[i-1][y] + d[i-1][j-1] >= k:\n                    a += 1\n\nprint(a)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\na   = []\n\n(r, c, n, k) = (int(i) for i in input().split())\n\nfor i in range(n):\n    a.append([int(i)-1 for i in input().split()])\n\nstart   = time.time()\nans     = 0\n\nfor x1 in range(r):\n    for y1 in range(c):\n        for x0 in range(x1+1):\n            for y0 in range(y1+1):\n                now = 0\n                for i in range(n):\n                    if (a[i][0] >= x0) and  (a[i][0] <= x1) and (a[i][1] >= y0) and  (a[i][1] <= y1):\n                        now +=1\n\n                if now >= k:\n                    ans += 1\n\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "# You lost the game.\nr,c,n,k = list(map(int, input().split()))\nV = [list(map(int, input().split())) for _ in range(n)]\n\nG = [[0 for _ in range(c)] for _ in range(r)]\nfor i in range(n):\n    G[V[i][0]-1][V[i][1]-1] = 1\n\n\nT = [[0 for _ in range(c)] for _ in range(r)]\nT[0][0] = G[0][0]\nfor i in range(1,r):\n    T[i][0] = G[i][0]\nfor i in range(r):\n    for j in range(1,c):\n        T[i][j] = T[i][j-1] + G[i][j]\nfor i in range(1,r):\n    for j in range(c):\n        T[i][j] += T[i-1][j]\nnb = 0\nfor x1 in range(c):\n    for x2 in range(x1,c):\n        for y1 in range(r):\n            for y2 in range(y1,r):\n                s = T[y2][x2]\n                if x1 > 0:\n                    s -= T[y2][x1-1]\n                if y1 > 0:\n                    s -= T[y1-1][x2]\n                if x1 > 0 and y1 > 0:\n                    s += T[y1-1][x1-1]\n                if s >= k:\n                    nb += 1\nprint(nb)\n", "r, c, n, k = list(map(int, input().split()))\ndata = [[False for i in range(c)] for j in range(r)]\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\tx -= 1\n\ty -= 1\n\tdata[x][y] = True\nans = 0\nfor a in range(r+1):\n\tfor b in range(c+1):\n\t\tfor e in range(r):\n\t\t\tfor d in range(c):\n\t\t\t\tcnt = 0\n\t\t\t\tflag = False\n\t\t\t\tfor i in range(a):\n\t\t\t\t\tfor j in range(b):\n\t\t\t\t\t\tif 0 <= e+i < r and 0 <= d+j < c:\n\t\t\t\t\t\t\tif data[e+i][d+j]:\n\t\t\t\t\t\t\t\tcnt += 1\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tflag = True\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\tif flag:\n\t\t\t\t\t\tbreak\n\t\t\t\tif flag:\n\t\t\t\t\tcontinue\n\t\t\t\tif cnt >= k:\n\t\t\t\t\tans += 1\nprint(ans)\n\n\n", "def cnt(x1, y1, x2, y2):\n    ans = 0\n    for i in range(y2, y1 + 1):\n        for j in range(x1, x2 + 1):\n            if lst[i][j] == 1:\n                ans += 1\n    return ans            \n            \n\nh, w, n, kk = list(map(int, input().split()))\nanss = 0\nlst = [[0] * 20 for i in range(20)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    lst[x - 1][y - 1] = 1\nfor i in range(h):\n    for j in range(w):\n        for k in range(h):\n            for z in range(w):\n                if cnt(j, i, z, k) >= kk:\n                    anss += 1\nprint(anss)                \n    \n", "import io\nimport sys\nimport time\nimport random\n#~ start = time.clock()\n#~ test = '''2 2 1 1\n#~ 1 2'''\n#~ test = '''3 2 3 3\n#~ 1 1\n#~ 3 1\n#~ 2 2'''\n#~ test = '''3 2 3 2\n#~ 1 1\n#~ 3 1\n#~ 2 2'''\n\n#~ sys.stdin = io.StringIO(test)\n\nr,c,n,k = list(map(int,input().split())) # row column number-of-violists\ndata = [ [0 for i in range(c)] for j in range(r) ]\n#~ print(r,c,n,k)\n\nfor i in range(n):\n   x,y = list(map(int,input().split())) # row column\n   data[x-1][y-1] = 1\n\nnviolists = [ [0 for i in range(c)] for j in range(r) ]\n\nfor r1 in range(r):\n   count = 0\n   for c1 in range(c):\n      count += data[r1][c1]\n      nviolists[r1][c1] = (nviolists[r1-1][c1] if r1>0 else 0) \\\n                        + count\n      #~ print(r1,c1,nviolists[r1][c1],nviolists[r1][c1-1])\n      #~ print(nviolists)\n\ncount = 0\nfor r1 in range(r):\n   for r2 in range(r1,r):\n      for c1 in range(c):\n         for c2 in range(c1,c):\n            # between (r1,c1) and (r2,c2)\n            \n            vcount = nviolists[r2][c2] \\\n                  - (nviolists[r1-1][c2] if r1>0 else 0) \\\n                  - (nviolists[r2][c1-1] if c1>0 else 0) \\\n                  + (nviolists[r1-1][c1-1] if r1*c1>0 else 0)\n            if vcount>=k:\n               #~ print( (r1,c1), (r2,c2) )\n               count +=1 \n               \n\nprint(count)         \n#~ dur = time.clock()-start\n#~ print(\"Time:\",dur)\n", "r, c, n, k = input().split()\nr, c, n, k = int(r), int(c), int(n), int(k)\n\nviolas = []\n\nfor _ in range(n):\n    x, y = input().split()\n    x, y = int(x) - 1, int(y) - 1\n    violas.append((y,x))\n\ndef count_violas(x1, y1, x2, y2):\n    nonlocal violas\n    s = 0\n    for x, y in violas:\n        if x >= x1 and x <= x2 and y >= y1 and y <= y2:\n            s += 1\n    return s\n\nans = 0\nfor x1 in range(c):\n    for y1 in range(r):\n        for x2 in range(x1, c):\n            for y2 in range(y1, r):\n                if count_violas(x1, y1, x2, y2) >= k:\n                    ans += 1\n\nprint(ans)", "def count(a,b,c,d):\n    return sum([arr[i][j] for i in range(a,c + 1) for j in range(b,d + 1)])\n\ndef solve(r,c,n,m):\n    ans = 0\n    for i in range(1,r + 1):\n        for j in range(1,c + 1):\n            for k in range(i,r + 1):\n                for l in range(j,c + 1):\n                    x = count(i,j,k,l)\n                    if x >= m:\n                        ans += 1\n    return ans\n\nr,c,n,k = list(map(int,input().split()))\n\narr = [[0 for i in range(20)] for j in range(20)]\n\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    arr[x][y] = 1\n\nprint(solve(r,c,n,k))\n", "string, column, cnt, mincnt = map(int, input().split())\nmaps = [['*' for i in range(column)] for j in range(string)]\nfor i in range(cnt):\n    a, b = map(int, input().split())\n    maps[a - 1][b - 1] = '#'\nans = 0\nfor i in range(string):\n    for j in range(column):\n        for i1 in range(i, string):\n            for j1 in range(j, column):\n                num = 0\n                for s in range(i, i1 + 1):\n                    for c in range(j, j1 + 1):\n                        if maps[s][c] == '#':\n                            num += 1\n                if num >= mincnt:\n                    ans += 1\nprint(ans)", "w,h,v,n = list(map(int, input().split()))\nV = [[False]*h for _ in range(w)]\nfor _ in range(v):\n    x,y = list(map(int, input().split()))\n    V[x-1][y-1] = True\n\ndef calc(a, b, c, d):\n    s = 0\n    for x in range(a,c+1):\n        for y in range(b, d+1):\n            s += V[x][y];\n            if s >= n: return s\n    return s\n\nC = 0\nfor x1 in range(w):\n    for y1 in range(h):\n        for x2 in range(x1, w):\n            for y2 in range(y1, h):\n                if calc(x1, y1, x2, y2) >= n:\n                    C += 1\nprint(C)\n", "def count(orchestra, initial, final):\n\tnum = 0\n\tfor i in range(initial[0], final[0]+1):\n\t\tfor j in range(initial[1], final[1]+1):\n\t\t\tif orchestra[i][j] == 1:\n\t\t\t\tnum += 1\n\n\treturn num\n\ndef getNumber(orchestra, initial, minimum):\n\tnum = 0\n\n\tfor i in range(initial[0], r):\n\t\tfor j in range(initial[1], c):\n\t\t\tfinal = [i, j]\n\t\t\tcounter = count(orchestra, initial, final)\n\n\t\t\tif counter >= k:\n\t\t\t\tnum += 1\n\n\tif initial[0] == len(orchestra):\n\t\treturn num\n\tif initial[1] == len(orchestra[0])-1:\n\t\tinitial[0] += 1\n\t\tinitial[1] = 0\n\telse:\n\t\tinitial[1] += 1\n\n\treturn num + getNumber(orchestra, initial, minimum)\n\nargs = list(map(int, input().split()))\nr = args[0]\nc = args[1]\nn = args[2]\nk = args[3]\n\npositions = []\n\n\nfor i in range(n):\n\tx = list(map(int, input().split()))\n\tpositions.append([x[0], x[1]])\n\norchestra = [[0]*c for i in range(r)]\n\nfor i in positions:\n\torchestra[i[0]-1][i[1]-1] = 1\n\nprint(getNumber(orchestra, [0, 0], k))"]