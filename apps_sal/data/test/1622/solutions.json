["n, m = map(int, input().split())\nev = [tuple(map(int, input().split())) for _ in range(m)]\n\ng = [[] for _ in range(n + 1)]\nqry = [[] for _ in range(m + 1)]\nroots = set(range(1, n + 1))\nqcnt = 0\nfor e in ev:\n\tif e[0] == 1:\n\t\tg[e[2]].append(e[1])\n\t\troots.remove(e[1])\n\telif e[0] == 3:\n\t\tqry[e[2]].append((qcnt, e[1]))\n\t\tqcnt += 1\n\ntin, tout = [0] * (n + 1), [0] * (n + 1)\nst = [(u, 0) for u in roots]\ntime = 0\nwhile st:\n\tu, w = st.pop()\n\tif w:\n\t\ttout[u] = time\n\t\tcontinue\n\ttime += 1\n\ttin[u] = time\n\tst.append((u, 1))\n\tfor v in g[u]:\n\t\tst.append((v, 0))\n\np = list(range(n + 1))\ndef find(x):\n\tif x != p[x]:\n\t\tp[x] = find(p[x])\n\treturn p[x]\n\npcnt = 0\nans = [None] * qcnt\nfor e in ev:\n\tif e[0] == 1:\n\t\tp[find(e[1])] = find(e[2])\n\telif e[0] == 2:\n\t\tpcnt += 1\n\t\tfor qid, x in qry[pcnt]:\n\t\t\tans[qid] = 'YES' if find(e[1]) == find(x) and tin[x] <= tin[e[1]] <= tout[x] else 'NO'\n\nprint(*ans, sep='\\n')"]