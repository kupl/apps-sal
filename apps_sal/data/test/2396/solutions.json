["n=int(input())\ndict1={}\ndict2={}\nfor i in range(n):\n    s=input()\n    s=s.split('/')\n    c=int(s[1])\n    s=s[0].strip('(').strip(')').split('+')\n    a=int(s[0])\n    b=int(s[1])\n    ans=(a+b)/c\n    try:\n        dict2[ans] += 1\n    except:\n        dict2[ans] = 1\n    dict1[i] = ans\nfor i in range(n):\n    print(dict2[dict1[i]],end=' ')\n", "while True:\n    try:\n        mp=dict()\n        a=list()\n        n=int(input())\n        for i in range(n):\n            s=input()\n            num=eval(s)\n            a.append(num)\n            if num in mp:\n                mp[num]=mp[num]+1\n            else:\n                mp[num]=1\n        for i in a:\n            print(mp[i],end=' ')\n        print()\n    except EOFError:\n        break", "from collections import Counter\n\ndef getList(l, m):\n  r = []\n  cnt = Counter(l)\n  for i in l:\n    r.extend([cnt[i]])\n  return r\n    \n\nm = int(input())\nres = []\nfor i in range(m):\n  a, b = [i for i in input().split(\"/\")]\n  a = a.split(\"+\")\n  aux1 = a[0].replace(\"(\", \"\")\n  aux2 = a[len(a) - 1].replace(\")\", \"\")\n  a = [aux1, aux2]\n  a = list(map(lambda x: int(x), a))\n  b = float(b)\n  res.extend([sum(a)/b])\n  \noutput = getList(res, m)\nfor i in range(len(output)):\n  if i == len(output) - 1: print(output[i])\n  else: print(str(output[i]) + \" \", end = \"\")", "x = int(input())\na = []\nb = dict()\nfor i in range(x):\n\ts = input()\n\ta.append(eval(s))\n\tif(a[i] not in b):\n\t\tb[a[i]] = 1\n\telse:\n\t\tb[a[i]] += 1\n\nfor i in range(x):\n\tprint(\"%d \"%b[a[i]], end = '')\nprint()", "n = int(input())\n\nccnt = {}\nsn = {}\n\nfor i in range(1, n+1):\n\ts = input()\n\tres = eval(s)\n\tres = str(format(res, '.6f'))\n\tif (res in ccnt):\n\t\tccnt[res] += 1\n\telse:\n\t\tccnt[res] = 1\n\tsn[i] = res\n\nfor i in range(1, n+1):\n\tprint(str(ccnt[sn[i]]) + \" \", end='')\n\nprint()", "table = {}\ncur = 1\n\n\ndef gcd(a, b):\n\tif b == 0:\n\t\treturn a\n\treturn gcd(b, a%b)\n\n\ndef read():\n\tnonlocal cur\n\tnonlocal table\n\ts = input().split('/')\n\tnom = eval(s[0])\n\tden = int(s[1])\n\tg = gcd(nom, den)\n\tnom //= g\n\tden //= g\n\th_code = nom * 1000 + den\n\tif h_code in table:\n\t\ttable[h_code].append(cur)\n\telse:\n\t\ttable[h_code] = [cur]\n\tcur += 1\n\n\nm = int(input())\nfor i in range(m):\n\tread()\nans = [0] * 213456\n\nfor key, val in table.items():\n\tfor idx in val:\n\t\tans[idx] = len(val)\n\nfor i in range(1, m+1):\n\tprint(ans[i], end = \" \")", "import re\nfrom collections import defaultdict\n\nP = re.compile(r'\\((\\d+)\\+(\\d+)\\)/(\\d+)')\n\nm = int(input())\ns = defaultdict(int)\nxs = []\n\nfor _ in range(m):\n    a, b, c = list(map(int, P.match(input()).groups()))\n    x = (a + b) / c\n    s[x] += 1\n    xs.append(x)\n\nprint(' '.join(str(s[x]) for x in xs))\n", "n = int(input())\nlst = []\nd = dict()\nfor temp in range(n):\n  input_str, z = input().split('/')\n  x, y = input_str.split('+')\n  x = x [1:]\n  y = y [:len(y)-1]\n  x = int(x)\n  y = int(y)\n  z = int(z)\n  ans = (x+y)/z\n  if(ans in d.keys()) : d[ans]+=1\n  else : d[ans]=1\n  lst.append(ans)\nfor i in lst:\n  print(d[i], end=\" \")", "from fractions import gcd\n\nans = []\ndic = {}\n\nn = int(input())\nfor i in range(n):\n  word = input()\n  word = word.replace('(',',')\n  word = word.replace('+',',')\n  word = word.replace(')/',',')\n  w = word.split(',')\n  a = int(w[1])\n  b = int(w[2])\n  numerator = a + b\n  denumerator = int(w[3])\n  x = numerator // gcd(numerator, denumerator)\n  y = denumerator // gcd(numerator, denumerator)\n  ans.append((x, y))\n  if (x, y) in dic:\n    dic[(x, y)] += 1\n  else:\n    dic[(x, y)] = 1\nfor i in range(n):\n  if i > 0:\n    print(' ', end='')\n  print(dic[ans[i]], end='')\nprint(\"\\n\", end='')", "n=int(input())\nct = {}\nctx = []\nfor ni in range(0, n):\n\tst = input().strip()[1:]\n\tp1 = st.index('+')\n\ta = int(st[:p1])\n\tst = st[p1+1:]\n\tp2 = st.index(')')\n\tb = int(st[:p2])\n\tc = int(st[p2+2:])\n\tv = ((a+b)/c)\n\tif v in ct: ct[v]+=1\n\telse: ct[v]=1\n\tctx.append(v)\nst = []\nfor cti in ctx: st.append(str(ct[cti]))\nprint(\" \".join(st))\n\n\n", "n=int(input())\ndicti={}\nL=[]\nfor i in range(n):\n  s=input()\n  a=''\n  b=''\n  c=''\n  i=1\n  while s[i]!='+':\n    a+=s[i]\n    i=i+1 \n  i=i+1 \n  while s[i]!=')':\n    b+=s[i]\n    i=i+1\n  c=s[i+2:]\n  \n  a,b,c=int(a),int(b),int(c)\n  res=(a+b)/c \n  if res in dicti:\n    dicti[res]+=1\n  else:\n    dicti[res]=1\n  L.append(res)\n  \nfor i in range(len(L)):\n  print(dicti[L[i]],end=' ')\n  \n  \n  ", "_ = int(input())\nx = []\nfor __ in range(_) :\n    s = input()\n    a = s.split('/')\n    c = int(a[1])\n    a = a[0]\n    a = a.split(')')\n    a = a[0]\n    a = a.split('+')\n    b = int(a[1])\n    a = a[0]\n    a = a.split('(')\n    a = int(a[1])\n    x.append((a+b)/c)\nd = {}\nfor i in x:\n    d[i] = 0\nfor i in x :\n    d[i]+=1\nfor i in x :\n    print(d[i],end=\" \")", "n=int(input())\nd={}\nfor i in range(n):\n    s=input()\n    s=s.replace('(','')\n    s=s.replace(')','')\n    s=s.split('/')\n    c=float(s[-1])\n    s=s[0]\n    s=s.split('+')\n    a=float(s[0])\n    b=float(s[1])\n    ans=(a+b)/c\n    if ans in d:\n        d[ans].append(i)\n    else:\n        d[ans]=[i]\nl=[0]*n\nfor k in list(d.keys()):\n    for i in d[k]:\n        l[i]=str(len(d[k]))\nprint(' '.join(l))\n", "import re\n\nmath = re.compile('\\((\\d+)\\+(\\d+)\\)\\/(\\d+)')\nd1 = dict()\nd2 = dict()\n\ndef main():\n\tn = int(input())\n\n\tfor i in range(n):\n\t\tstring = input()\n\t\tmatch = math.match(string)\n\t\ta = int(match.group(1))\n\t\tb = int(match.group(2))\n\t\tc = int(match.group(3))\n\t\td2[i+1]=((a+b)/c)\n\t\ttry :\n\t\t\td1[((a+b)/c)]+=1\n\t\texcept:\n\t\t\td1[((a+b)/c)]=1\n\n\tlis = []\n\n\tfor i in range(n):\n\t\tlis.append(str(d1[d2[i+1]]))\n\n\tprint(' '.join(lis))\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "from fractions import Fraction\nn = int(input())\narr = []\ncc = {}\nfor i in range(n):\n\tline = input()\n\tab, c = line.split('/')\n\tab = ab[1:-1]\n\ta, b = ab.split('+')\n\ta, b, c = [int(x) for x in (a, b, c)]\n\tp = (a + b) / c\n\tarr.append(p)\n\tif p not in cc:\n\t\tcc[p] = 1\n\telse:\n\t\tcc[p] += 1\nfor i in range(n):\n\tif i > 0:\n\t\tprint(' ', end=\"\")\n\tprint(cc[arr[i]], end=\"\")\n", "n = int (input ())\nl=[]\nd={}\nfor i in range (n) :\n    ch = input()\n    c= eval(ch)\n    l.append(c)\n    if (c in d ) :\n        d[c]+=1\n    else :\n        d[c]=1\nfor i in range ( n) :\n    print (d[l[i]] ,end=\" \")\n", "import re\n\nm=int(input())\nlis=list()\n\nfor i in range(m):\n    s=input()\n    lis+=[re.split('\\W+', s)]\n\nd=dict()\n\nfor i in range(m):\n    ans=int(lis[i][1])+int(lis[i][2])\n    ans=ans/int(lis[i][3])\n    lis[i][0]=ans\n    if ans in d:\n        d[ans]+=1\n    else: d[ans]=1\n\nfor i in range(m):\n    print(d[lis[i][0]],end=' ')\n", "n=int(input())\nd={}\naaa=[]\nfor ii in range(n):\n    s=input().strip()\n    arr=list(s)\n    for i in range(len(arr)):\n        if arr[i] is \"(\" or arr[i] is \"+\" or arr[i] is \")\" or arr[i] is \"/\":\n            if arr[i] is \"/\":\n                arr[i]=\"\"\n            else:\n                arr[i]=\" \"\n    a,b,c=map(int,(\"\".join(arr)).split())\n    ans=(a+b)/c \n    if ans in d.keys():\n        d[ans][0]+=1\n        d[ans][1].append(ii)\n    else:\n        d[ans]=[1,[ii]]\n    aaa.append(ans)\narr1={}\nfor i in d.keys():\n    for j in d[i][1]:\n        arr1[j]=d[i][0]\nfor i in range(n):\n    print(arr1[i],end=\" \")\nprint(\"\")\n        \n    ", "#codeforces.com/contest/958/problem/D1\n\nm=int(input())\npositions=[]\nposcount={}\nfor i in range(m):\n    crew=list(input())\n    n=len(crew)\n    i=1\n    a=''\n    while crew[i]!='+':\n        a+=crew[i]\n        i+=1\n    b=''\n    i+=1\n    while crew[i]!=')':\n        b+=crew[i]\n        i+=1\n    c=''\n    i+=2\n    while i<n:\n        c+=crew[i]\n        i+=1\n    a=int(a)\n    b=int(b)\n    c=int(c)\n    res=(a+b)/c\n    positions.append(res)\n    if res in poscount:\n        poscount[res]+=1\n    else:\n        poscount[res]=1\n\nans=[]\nfor i in range(m):\n    ans.append(poscount[positions[i]])\nprint(*ans,sep=' ')", "from collections import defaultdict\n\nm = int(input())\nvalue = {}\ncount = defaultdict(int)\n\nfor i in range(m):\n    s = input()\n    ans = 0\n    z = \"\"\n    n = len(s)\n    for j in range(1,n):\n        if s[j]=='+':\n            ans = int(z)\n            z = \"\"\n            continue\n        elif s[j]==')':\n            ans +=int(z)\n            z = \"\"\n            j+=2\n            while j<n:\n                z+=s[j]\n                j+=1\n            ans = ans/int(z)\n            count[ans]+=1\n            value[i] = ans\n        else:\n            z = z+s[j]\n\nfor i in range(m):\n    print(count[value[i]],end=\" \")\nprint()\n"]