["'''input\n6\nLLRRRR\n'''\nn = int(input())\ns = input()\nh, v = min(s.count(\"L\"), s.count(\"R\")), min(s.count(\"U\"), s.count(\"D\"))\nprint(2*h + 2*v)", "n = int(input())\n\nops = input()\n\nl = ops.count('L')\nr = ops.count('R')\nu = ops.count('U')\nd = ops.count('D')\n\nprint(min(l,r)*2+min(u,d)*2)", "n=int(input())\ninstructions=input()\nleft=0\nright=0\nup=0\ndown=0\nfor i in instructions:\n  if i==\"L\":\n    left+=1\n  elif i==\"R\":\n    right+=1\n  elif i==\"U\":\n    up+=1\n  elif i==\"D\":\n    down+=1\nprint((min(left,right)+min(up,down))*2)", "n = int(input())\ns = input()\nd = {'L': (-1, 0), 'U': (0, 1), 'D': (0, -1), 'R': (1, 0)}\n\nu, v = 0, 0\n\nfor c in s:\n\tu += d[c][0]\n\tv += d[c][1]\n\nprint(n - abs(u) - abs(v))\n", "n=int(input())\na=input()\nl=[a.count('L'),a.count('R'),a.count('D'),a.count('U')]\nprint(min(l[0],l[1])*2+min(l[2],l[3])*2)\n", "n = int(input())\na = input()\nx, y = 0, 0\nfor i in range(n):\n\tif a[i] == 'U':\n\t\ty += 1\n\telif a[i] == 'D':\n\t\ty -= 1\n\telif a[i] == 'L':\n\t\tx -= 1\n\telif a[i] == 'R':\n\t\tx += 1\nprint(n - (abs(x) + abs(y)))\n", "##n, m = map(int, input().split())\nn = int(input())\ns = input()\nx = 0\ny = 0\nfor i in range(n):\n    if s[i] == \"U\":\n        y += 1\n    if s[i] == \"D\":\n        y-= 1\n    if s[i] == \"L\":\n        x -= 1\n    if s[i] == \"R\":\n        x += 1\nans = n - abs(x) - abs(y)\nprint(max(0, ans))\n", "n = int(input())\na = list(input().strip())\nx = 0\ny = 0\nfor i in range(n):\n    if a[i] == 'L':\n        x -= 1\n    elif a[i] == 'R':\n        x += 1\n    elif a[i] == 'U':\n        y -= 1\n    elif a[i] == 'D':\n        y += 1\nprint(max(0, n - abs(x) - abs(y)))", "n=int(input())\ns=input()\n\ncount=min(s.count('U'),s.count('D'))+min(s.count('L'),s.count('R'))\nprint(count*2)", "n = int(input())\ns = input()\nx = [0 for i in range(4)]\nfor i in range(n):\n\tif s[i] == \"U\":\n\t\tx[0] += 1\n\telif s[i] == \"D\":\n\t\tx[1] += 1\n\telif s[i] == \"L\":\n\t\tx[2] += 1\n\telse:\n\t\tx[3] += 1\nprint(min(x[0], x[1]) * 2 + min(x[2], x[3]) * 2)\t\t\n\t\t\n\t\t\n", "n = int(input())\ns = input()\nk = 2 * (min(s.count('U'), s.count('D')) + min(s.count('L'), s.count('R')))\nprint(k)\n", "from collections import Counter\n\nnum_moves = int(input())\n\nmove_count = Counter(input())\n\nprint(num_moves - abs(move_count['R'] - move_count['L']) - abs(move_count['U'] - move_count['D']))", "x = int(input())\ns = input()\nansl = 0\nansd = 0\nfor i in s:\n    if i ==\"L\":\n        ansl += 1\n    if i == \"R\":\n        ansl -= 1\n    if i == \"D\":\n        ansd += 1\n    if i == \"U\":\n        ansd -= 1\nansl = abs(ansl)\nansd = abs(ansd)\nprint(x - (ansd+ansl))", "n = int(input())\ncom = input()\n\nprint (min(com.count('L'), com.count('R')) * 2    +     min(com.count('U'), com.count('D')) * 2)", "n = int(input())\na = [0] + list(input())\nx, y = 0, 0\nan = 0\nups, dwns, rts, lts = 0, 0, 0, 0\nfor i in range(n, 0, -1):\n    if a[i] == 'U':\n        ups += 1\n    elif a[i] == 'D':\n        dwns += 1\n    elif a[i] == 'R':\n        rts += 1\n    else:\n        lts += 1\n    an = max(an, 2 * min(rts, lts) + 2 * min(ups, dwns))\nprint(an)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/9 23:05\n\n\"\"\"\n\nN = int(input())\nS = input()\n\n\nu, d, l, r = S.count('U'), S.count('D'), S.count('L'), S.count('R')\n\nprint(N - abs(u-d) - abs(l-r))", "from collections import Counter\n\nn = int(input())\ns = input()\n\nd = Counter(s)\n\n\ntry:\n    temp = min(d['U'], d['D'])\n    d['U'] -= temp\n    d['D'] -= temp\nexcept KeyError:\n    pass\n\ntry:\n    temp = min(d['L'], d['R'])\n    d['L'] -= temp\n    d['R'] -= temp\nexcept KeyError:\n    pass\n\nprint(n - sum(list(d.values())))\n", "n = int(input())\ncommands = input()\nleft = 0\nright = 0\nup = 0\ndown = 0\nfor i in commands:\n    if i == 'U':\n        up += 1\n    elif i == 'D':\n        down += 1\n    elif i == 'R':\n        right += 1\n    elif i == 'L':\n        left += 1\n    else:\n        raise ValueError\nprint(2*min(right, left) + 2*min(up, down))\n", "n = int(input())\nstring = input()\narr = [str(i) for i in string][:n:]\nleft = right = up = down = 0\nfor i in arr:\n\tif i == 'L':\n\t\tleft+=1\n\telif i == 'R':\n\t\tright+=1\n\telif i == 'U':\n\t\tup+=1\n\telif i == 'D':\n\t\tdown+=1\nprint(2*(min(left,right)+min(up,down)))\n# print(left,right,up,down)\n# print(arr)\n", "n = int(input())\nl = d = u = r = 0\nans = 0\nfor i in input():\n    if i == \"L\":\n        l += 1\n    elif i == \"D\":\n        d += 1\n    elif i == \"U\":\n        u += 1\n    else:\n        r += 1\n\nans += min(l, r) * 2\nans += min(u, d) * 2\n\nprint(ans)\n", "n = int(input())\ns = list(input())\n\nd = 'UDLR'\ncnt = {}\nfor c in d:\n    cnt[c] = 0\nfor c in s:\n    cnt[c] += 1\nprint(2 * (min(cnt['U'], cnt['D']) + min(cnt['L'], cnt['R'])))\n", "t = int(input())\na = input()\nl,r,d,u = 0,0,0,0\nfor i in a:\n    if i == 'L': l+=1\n    if i == 'R': r+=1\n    if i == 'U': u+=1\n    if i == 'D': d+=1\ns = min(l,r)*2 + min(u,d)*2\nprint(s)", "n = int(input())\ns = input()\n\nprint(min([s.count('L'), s.count('R')]) * 2 + min([s.count('D'), s.count('U')]) * 2)", "n = int(input())\n\ncs = input()\n\ncc = {'U': 0, 'D': 0, 'L': 0, 'R': 0}\n\nfor c in cs:\n    cc[c] += 1\n\n\ntotal = n - abs(cc['U']-cc['D']) - abs(cc['L']-cc['R'])\nprint(total)\n"]