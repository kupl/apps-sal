["import fractions\n\nx, y, a, b = list(map(int, input().split()))\nd = fractions.gcd(x, y)\nd = x * y // d\nprint(b // d - (a - 1) // d)\n", "import math\nimport sys\nfrom fractions import gcd\n\nx,y,a,b=list(map(int,sys.stdin.readline().split()))\n\ng=(x*y)//gcd(x,y)\n\ns=math.ceil(a/g)\n\ne=math.floor(b/g)\n\nprint(e-s+1)\n\n", "x, y, a, b = list(map(int, input().split()))\n\ndef arch(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nc = x * y // arch(x, y)\nprint(b // c - (a - 1) // c)\n", "from fractions import *\nx,y,a,b = list(map(int,input().split()))\nnok = (x*y)//gcd(x,y)\nfirst = (a // nok) * nok + (nok if a%nok != 0 else 0)\nsecond = (b//nok) * nok\nif first > b:\n    print(0)\nelse:\n    print((second-first)//nok +(1 if second % nok == 0 else 0))\n\n", "def gcd(x,y):\n    if y%x==0:\n        return x\n    else:\n        return gcd(y%x,x)\n\n\ndef __starting_point():\n    inp = input()\n    arr = inp.split(' ')\n    x = int(arr[0])\n    y = int(arr[1])\n    a = int(arr[2])\n    b = int(arr[3])\n    g = gcd(min(x,y),max(x,y))\n    l = (x*y)//g\n    i = 0\n    for i in range(a,a+l+1):\n        if i > b:\n            break\n        if i%l==0:\n            break\n    ans = 0\n    if b>=i:\n        ans=(b-i)//l + 1\n    print(ans)\n\n__starting_point()", "def gcd(a,b) :\n    return a if b==0 else gcd(b,a%b)\n\ndef lcm(a,b) : return a/gcd(a,b)*b\n\nt = input().split(' ')\nx,y,a,b = (int(i) for i in t)\nl = lcm(x,y)\nprint(int(b//l-(a-1)//l+0.5))\n", "from fractions import gcd\n\n\ndef nok(a, b):\n    return a * b // gcd(a, b)\n\n\nx, y, a, b = list(map(int, input().split()))\nlcs = nok(x, y)\nl = lcs - a % lcs + a if a % lcs != 0 else a\n# print(l)\nans = (b - l) // lcs + 1\nprint(ans)\n", "from math import*\n\ndef gcd(a, b):\n\tif b == 0:\n\t\treturn a\n\telse:\n\t\treturn gcd(b, a % b)\n\nx, y, a, b = list(map(int, input().split()))\nnok = (x * y) // gcd(x, y)\na += (nok - a % nok) % nok\nb -= b % nok\nprint((b - a) // nok + 1)", "x, y, a, b = list(map(int, input().split()))\ncount = 0\nA = 2 * [0]\nfor i in range(a, b + 1):\n    if i % x == 0 and i % y == 0:\n        A[count] = i\n        count += 1\n    if count == 2:\n        break\nif count == 2:\n    RR = A[1] - A[0]\n    print((b - A[0]) // RR + 1)\nelse:\n    print(count)\n", "def test(x,y,a,b):\n    t=x*y//gcd(x,y)\n    return (b//t - (a-1)//t)\n\n\ndef gcd(a,b):\n    if a<b:\n        a,b=b,a\n    while b!=0:\n        a,b=b,a%b\n    return a\n\ndef main():\n    s=input()\n    s=list(map(int,s.split()))\n    print(test(s[0],s[1],s[2],s[3]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from fractions import gcd\nx, y, a, b = map(int,input().split())\nnok = (x * y) // gcd(x, y)\nxx = (a // nok) * nok\nif a%nok != 0:\n    xx += nok\nyy= (b //nok) * nok\nif xx > b:\n    print(0)\nelse:\n    if yy% nok == 0:\n        f = 1\n    else:\n        f = 0\n    print((yy-xx) // nok + f)", "# for finding lcm we need to know gcd\ndef gcd(a,b):\n    while b!=0:\n        temp=b\n        b=a%b\n        a=temp\n    return a\ndef lcm(a,b):\n    g=gcd(a,b)\n    lc=(a*b)//g\n    return lc\n\nwhile(1):\n    try:\n        a=list(map(int,input().split()))\n        maxi=a[0] if a[0]>a[1] else a[1]\n        if maxi==a[0]:\n            mini=a[1]\n         \n        else:\n            maxi=a[1]\n            mini=a[0]\n        l=lcm(maxi,mini)\n        c=0\n        maxi=a[2] if a[2]>a[3] else a[3]\n        if maxi==a[2]:\n            mini=a[3]\n        else:\n            maxi=a[3]\n            mini=a[2]\n        print(maxi//l-(mini-1)//l)\n        \n    except EOFError:\n        break\n\n            \n            \n        \n        \n        \n        \n", "from fractions import gcd\n\ndef lcd(a, b):\n    g = gcd(a, b)\n    return a*b//g\n\ndef __starting_point():\n    x, y, a, b = [int(x) for x in input().split()]\n    l = lcd(x, y)\n    r = a%l\n    if r == 0:\n        print((b-a)//l+1)\n    else:\n        print((b-(a+(l-r)))//l+1)\n\n__starting_point()", "from fractions import gcd\n\ndef lcd(a, b):\n    g = gcd(a, b)\n    return a*b//g\n\ndef __starting_point():\n    x, y, a, b = [int(x) for x in input().split()]\n    l = lcd(x, y)\n    print(b//l-(a-1)//l)\n\n__starting_point()", "x, y, a, b = (int(i) for i in input().split())\n\np = 1\nfor i in range(2, 1001):\n\tif x % i == 0 and y % i == 0:\n\t\tx = x // i\n\t\ty = y // i\n\t\tp *= i\n\nprint(b // (x * y * p) - (a - 1) // (x * y * p))", "def GCD(a, b):\n    while a % b != 0:\n        a, b = b, a % b\n    return b\n\ndef LCM(a, b):\n    return a * b // GCD(a, b)\n\nl = input().split(' ')\nx, y, a, b = int(l[0]), int(l[1]), int(l[2]), int(l[3])\nlcm = LCM(x, y)\nprint(b // lcm - (a - 1) // lcm)\n", "import sys\nimport math\nimport fractions\nf = sys.stdin\n\n#f = open(\"input.txt\", \"r\")\n\nline_ = list(map(int, f.readline().split()))\n\nline = []\nfor it in line_:\n\tline.append(it)\n\nx = int(line[0])\ny = int(line[1])\na = int(line[2])\nb = int(line[3])\nxy = x * y / fractions.gcd(x, y)\nans = b // xy - (a - 1) // xy\nprint( int(ans) )\n", "def gcd (x, y):\n    if x < y: x, y = y, x\n    while x % y != 0:\n        x, y = y, x % y\n    return y\n\ndef lcm (x, y):\n    return ((x * y) // gcd(x, y))\n\nx, y, a, b = (int(i) for i in input().split(' '))\n\nf = lcm(x, y)\n\nk = (b // f) - ((a - 1) // f)\n\n##if a % f == 0 or b % f == 0: k += 1\n\nprint(k)", "from fractions import gcd\nx, y, a, b = list(map(int, input().split()))\nm = x // __import__(\"fractions\").gcd(x, y) * y\nf = (a // m) * m\nif f < a: f += m\nt = (b // m) * m\nprint(0 if t < f else 1 + (t - f) // m)\n", "x,y,a,b = map(int, input().split())\ng = 1\nwhile g % x or g % y:\n    g += 1\nprint(b // g - (a - 1) // g)", "3\n\nx, y, a, b = tuple(map(int, input().split()))\n\ndef gcd(i, j):\n    while i:\n        i, j = j % i, i\n    return j\n\ns = x * y // gcd(x, y)\nprint(b // s - (a - 1) // s)\n", "# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    x, y = max(a, b), min(a, b)\n    while x % y:\n        x, y = y, x % y\n    return y\n\ndef test():\n    assert gcd(1071, 462) == 21\n    assert gcd(462, 1071) == 21\n    assert gcd(81, 135) == 27\n    print(\"test passes\")\n\ndef solve(x, y, a, b):\n    tmp = x * y // gcd(x, y)\n    #print(x, y, gcd(x, y))\n    #print(b // tmp, a // tmp)\n    return b // tmp - (a - 1) // tmp\n\nx, y, a, b = list(map(int, input().split()))\nprint(solve(x, y, a, b))\n    \n", "import fractions\nx,y,a,b=list(map(int,input().split()))\nd=fractions.gcd(x,y)\nd=x*y // d\nprint(b // d -(a-1)//d)\n", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b / gcd(a, b)\n\nx, y, a, b = list(map(int, input().split(' ')))\nl = lcm(x, y)\nprint(int(b // l - (a - 1) // l))\n", "import fractions\nx, y, a, b = map(int, input().split())\nnok = x * y // fractions.gcd(x, y)\nc = (a // nok) * nok\nif c < a:\n    c += nok\nd = (b // nok) * nok\nif d % nok == 0:\n    d += nok\nprint((d - c) // nok)"]