["t = int(input())\nfor _ in range(t):\n    n, d = list(map(int, input().split()))\n    if (1 - n) ** 2 - 4 * (d - n) >= 0:\n        print('YES')\n    else:\n        print('NO')\n", "import sys\nfor _ in range(int(input())):\n    n, d = map(int, input().split())\n    res = d\n    for a in range(int(d**0.5) - 10, int(d**0.5) + 10):\n        if a < 0:\n            continue\n        res = min(res, a + (d + a) // (a + 1))\n    if res <= n:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "from math import ceil\nT = int(input())\nfor _ in range(T):\n    N,D = list(map(int,input().split()))\n    def calc(D,x):\n        return x + ceil(D/(x+1))\n    for i in range(N):\n        if calc(D,i) <= N:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")        \n", "from math import ceil\n\n\ntest = int(input())\nfor z in range(test):\n    day, work = list(map(int, input().split()))\n    l = -1\n    r = day\n    while r - l > 1:\n        m = (l + r) // 2\n        new_work = ceil(work / (m + 1))\n        if (new_work + m <= day):\n            r = m\n        else:\n            l = m\n\n    if (r + ceil(work / (r + 1)) <= day):\n        print('YES')\n    else:\n        print('NO')\n", "import math\n\nfor i in range(int(input())):\n    res = 'NO'\n    n,d = list(map(int, input().split()))\n\n    for x in range(0,100000):\n        nd = x+math.ceil(d/(x+1))\n        if nd <= n:\n            res='YES'\n    print(res)\n", "from math import sqrt\n\nT = int(input())\nfor _ in range(T):\n    n, d = list(map(int, input().split()))\n    x = max(int(sqrt(d)) - 1, 0)\n    if x + (d+x) // (x+1) <= n:\n        print('YES')\n    else:\n        print('NO')\n", "t = int(input())\n\nfor _ in range(t):\n    n, d = map(int, input().split())\n    u, v = max(0, int(d ** 0.5 - 1000)), min(n, int(d ** 0.5 + 1000))\n    for i in range(u, v + 1):\n        if i + d // (i + 1) + int(bool(d % (i + 1))) <= n:\n            print('YES')\n            break\n    else:\n        print('NO')", "import math\nt=int(input())\nfor _ in range(t):\n    n,d=(map(int,input().split()))\n    if d<=n:\n        print(\"YES\")\n    else:\n        flag=0\n        for i in range(1,min(d,n)):\n            if (i+math.ceil(d/(i+1)))<=n:\n                print(\"YES\")\n                flag=1\n                break\n        if flag==0:                    \n            print(\"NO\")", "import math\nimport sys\ndef listinput(): return list(map(int,input().split(' ')))\n\ndef main():\n    answer = \"\"\n    for test in range(int(input())):\n        n,d = listinput()\n        x = 0\n        broken = False\n        while x*x <= d:\n            if x+(d+x)//(x+1) <= n:\n                answer += \"YES \\n\"\n                broken = True\n                break\n            x+=1\n        if not broken:\n            answer += \"NO \\n\"\n    print(answer)\n\nmain()\n    \n", "from math import ceil\nt=int(input())\nfor _ in range(t):\n    n,d=map(int,input().split())\n    x=int(ceil(d**0.5))\n    if d<=n:\n        print(\"YES\")\n        continue\n    flag=0\n    for i in range(1,x+1):\n        if i+int(ceil(d/(i+1)))<=n:\n            print(\"YES\")\n            flag=1\n            break\n    if flag==0:\n        print(\"NO\")", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\nfrom typing import List\n\n\"\"\"\ncreated by shhuan at 2020/1/14 22:37\n\n\"\"\"\n\n\ndef solve(N, D):\n    X = int(math.sqrt(D))\n\n    for x in range(max(0, X-10), min(N, X+10) + 1):\n        if x + int(math.ceil(D / (x + 1))) <= N:\n            return True\n    return False\n\n\nT = int(input())\nans = []\nfor ti in range(T):\n    N, D = map(int, input().split())\n    ans.append(solve(N, D))\n\nprint('\\n'.join(['YES' if v else 'NO' for v in ans]))", "import math\nfor _ in range(int(input())):\n    n,d=list(map(int,input().split()))\n    flag=False\n    for i in range(n):\n        if i+int(math.ceil(d/(i+1)))<=n:\n            flag=True\n            break\n    if flag:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n", "q = int(input())\nfor ew in range(q):\n\tn,d = map(int,input().split())\n\t#x + d/(x+1) <= n\n\tx = 0\n\twhile (x+10)**2 <= d:\n\t\tx += 1\n\tdup = 1\n\tfor i in range(100):\n\t\tif (x+i) + (d+x+i)//(x+1+i) <= n:\n\t\t\tprint(\"YES\")\n\t\t\tdup = 0\n\t\t\tbreak\n\tif dup:\n\t\tprint(\"NO\")", "import math\nt=int(input())\nfor i in range(t):\n  n,d=map(int,input().split())\n  flag=0\n  for j in range(int(d**(0.5))+1):\n    if math.ceil(d/(j+1)+j)<=n:print(\"YES\");flag=1;break\n  if not flag:print(\"NO\")", "from math import *\nfrom collections import *\nimport sys\nsys.setrecursionlimit(10**9)\nt = int(input())\nfor y in range(t):\n\td,n = list(map(int,input().split()))\n\tx = int(sqrt(n))\n\tans = x-1 + ceil(n/x)\n\t#print(ans)\n\tif(ans > d): print(\"NO\")\n\telse: print(\"YES\")\n", "from math import ceil\nt = int(input())\nfor i in range(t):\n    n, d = map(int, input().split())\n    for x in range (0, n):\n        if x + ceil(d/(x+1)) <= n:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")", "from math import *\nT = int(input())\nfor kase in range(T):\n    n, d = [int(x) for x in input().split()]\n    m = ceil(sqrt(d))\n    l, r = m-10, m+10\n    l = max(0,l)\n    ans = 1e100\n    for x in range(l,r):\n        ans = min(ans , x + ceil(d/(x+1)) )\n    if ans<=n:\n        print('YES')\n    else:\n        print('NO')", "#!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    t = I()\n    for i in range(t):\n        n,d = LI()\n        for x in range(40000):\n            if x+math.ceil(d/(x+1)) <= n:\n                print(\"YES\")\n                break\n        else:\n            print(\"NO\")\n    return\n\n#Solve\ndef __starting_point():\n    solve()\n\n__starting_point()", "import math\nt=int(input())\nfor _ in range(t):\n    n,d=map(int,input().split())\n    tf=True\n    for x in range(n+1):\n        if x+math.ceil(d/(x+1))<=n:\n            print(\"YES\")\n            tf=False\n            break\n    if tf:\n        print(\"NO\")", "import math\n\n\ndef inp(dtype=str, strip=True):\n    s = input()\n    res = [dtype(p) for p in s.split()]\n    res = res[0] if len(res) == 1 and strip else res\n    return res\n\n\ndef problem1():\n    t = inp(int)\n    for _ in range(t):\n        n, d = inp(int)\n        res = False\n        sq = math.floor(math.sqrt(d))\n        for x in range(max(sq - 1000, 0), min(sq + 1000, n)):\n            if x + math.ceil(d / (x + 1)) <= n:\n                res = True\n                break\n        if res:\n            print('YES')\n        else:\n            print('NO')\n\n\ndef problem2():\n    pass\n\n\ndef problem3():\n    pass\n\n\ndef problem4():\n    pass\n\n\ndef problem5():\n    pass\n\n\ndef problem6():\n    pass\n\n\ndef __starting_point():\n    # problem6()\n    # problem5()\n    # problem4()\n    # problem3()\n    # problem2()\n    problem1()\n\n__starting_point()", "from math import ceil\n\nimport sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\n\ndef solve():\n    n,d = list(map(int, input().split()))\n    ans = False\n    if d <= n:\n        ans = True\n    for i in range(-20, 21):\n        x = (n-1)//2+i\n        if x>0:\n            if x + ceil(d/(x+1)) <= n:\n                ans = True\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nt = int(input())\nfor i in range(t):\n    solve()\n", "import math\nfor _ in range(int(input())):\n    n,d=map(int,input().split())\n    if n>=d:\n        print(\"YES\")\n    else:\n        flag=0\n        for i in range(1,int(d**0.5)+2,1):\n            if i+math.ceil(d/(i+1))<=n:\n                flag=1\n                break\n        if flag==1:\n            print(\"YES\")\n        else:\n            print(\"NO\")", "from math import *\n\ndef bsearch(d, n):\n    low = 0\n    high = n\n    while low <= high:\n        mid = low + (high - low) // 2\n        val = mid + int(ceil(d / (mid + 1)))\n        if val > n:\n            high = mid - 1\n        else:\n            return True\n    return False\n\ndef __starting_point():\n    for _ in range(int(input())):\n        n, d = list(map(int, input().split()))\n        if bsearch(d, n):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n__starting_point()"]