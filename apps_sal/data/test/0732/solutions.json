["#CF Round 150. Div II Prob. A - Dividing Orange\nimport sys\n\ndp = [[[-1 for j in range(3)] for i in range (1 << 10)] for k in range(11)]\n\nIn = sys.stdin\nn = In.readline().strip()\n\ndef go (idx, mask, equal):\n    if dp[idx][mask][equal] != -1:\n        return dp[idx][mask][equal]\n    if bin(mask).count(\"1\") > 2:\n        return 0\n    if idx == len(n):\n        return 1\n    res = 0\n    if idx == 0 or equal == 2:\n        res += go(idx + 1, mask, 2)\n    elif equal == 1 and int(n[idx]) == 0:\n        res += go(idx + 1, mask | 1, 1)\n    else:\n        res += go(idx + 1, mask | 1, 0)    \n    for i in range(1, 10):\n        if equal == 1 and i > int(n[idx]):\n            break\n        elif equal == 1 and i == int(n[idx]):\n            res += go(idx + 1, mask | (1 << i), 1)\n        else:\n            res += go(idx + 1, mask | (1 << i), 0)\n    dp[idx][mask][equal] = res\n    return res\n    \nprint(go(0, 0, 1)  - 1)", "def cnt(s, p):\n    ans = 0\n    if p > s: ans = 0\n    elif len(p) == len(s):\n        ans = 1 if len(set(p.lstrip('0'))) <= 2 else 0\n    elif len(set(p.lstrip('0'))) > 2: ans = 0\n    elif s[:len(p)] > p:\n        if len(set(p.lstrip('0'))) == 2:\n            ans = 2**(len(s)-len(p))\n        elif len(set(p.lstrip('0'))) == 1:\n            ans = 1 + 9 * (2**(len(s)-len(p)) - 1)\n        else:\n            # ab for all a, b != 0\n            ans = 10 + 45 * (2**(len(s)-len(p)) - 2)\n            ans += 36 * sum([2**l-2 for l in range(2,len(s)-len(p))])\n                \n    else: ans = sum(cnt(s, p+c) for c in '0123456789')\n\n    return ans\n\nprint(cnt(input().strip(), '')-1)\n", "n = str(int(input()) + 1)\na = int(n[0])\nl = len(n)\nd = 1 << (l - 1)\n\ndef f(a, i):\n    nonlocal n, l\n    if i == l: return 0\n    b = int(n[i])\n    i += 1\n    d = 1 << (l - i)\n    if a > b: return b * d + g(b, a, i)\n    if a == b: return b * d + f(a, i)\n    return (b - 1) * d + g(a, b, i) + 9 * d - 8\n        \ndef g(a, b, i):\n    nonlocal n, l\n    if i == l: return 0\n    c = int(n[i])\n    i += 1\n    d = 1 << (l - i)\n    if c < a: return 0\n    if c == a: return g(a, b, i)\n    if c < b: return d\n    if c == b: return d + g(a, b, i)\n    return 2 * d\n\nprint(a * (9 * d - 8) + 72 * (d - l) + f(a, 1) - 1)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf = 10**9\n\nn = int(input())\nif n < 100:\n    print(n)\n    return\na = [[_,set(map(int,list(str(_))))] for _ in range(100)]\nc = 99\nfor k in range(2,11):\n    t = (10 ** (k-1))\n    for aa in a:\n        if aa[0] < t:\n            aa[1] = aa[1] | set([0])\n    at = a[:]\n    for i in range(1,10):\n        t = i * (10 ** k)\n        for ai, ae in at:\n            ac = ai + t\n            if ac > n:\n                print(c)\n                return\n            if len(ae) < 2:\n                ae = ae | set([i])\n            if i in ae and len(ae) < 3:\n                c += 1\n                a.append([ac,ae])\n", "from copy import deepcopy\n\nN = input()\nA = [ ord( N[ i ] ) - ord( '0' ) for i in range( len( N ) ) ]\n\ndp = [ 0, 0 ]\ndp = [ deepcopy( dp ) for i in range( 10 + 1 ) ]\ndp = [ deepcopy( dp ) for i in range( 10 + 1 ) ]\ndp = [ deepcopy( dp ) for i in range( len( A ) + 1  ) ]\ndp[ 0 ][ 10 ][ 10 ][ 0 ] = 1\n\nfor i in range( len( A ) ):\n  for j in range( 10 + 1 ):\n    for k in range( 10 + 1 ):\n      for l in range( 2 ):\n        lim = 9\n        if not l:\n          lim = A[ i ]\n        for d in range( lim + 1 ):\n          if d == 0 and j == 10 and k == 10:\n            dp[ i + 1 ][ 10 ][ 10 ][ 1 ] += dp[ i ][ j ][ k ][ l ]\n          else:\n            if j == 10 or j == d:\n              dp[ i + 1 ][ d ][ k ][ l or d < lim ] += dp[ i ][ j ][ k ][ l ]\n            else:\n              if k == 10:\n                if d < j:\n                  dp[ i + 1 ][ d ][ j ][ l or d < lim ] += dp[ i ][ j ][ k ][ l ]\n                else:\n                  dp[ i + 1 ][ j ][ d ][ l or d < lim ] += dp[ i ][ j ][ k ][ l ]\n              else:\n                if d != j and d != k: continue\n                dp[ i + 1 ][ j ][ k ][ l or d < lim ] += dp[ i ][ j ][ k ][ l ]\n\nans = 0\nfor i in range( 10 ):\n  for j in range( 10 + 1 ):\n    for k in range( 2 ):\n      ans += dp[ len( A ) ][ i ][ j ][ k ]\n\nprint( ans )\n", "def cnt(s, p):\n\n    ans = 0\n\n    if p > s: ans = 0\n\n    elif len(p) == len(s):\n\n        ans = 1 if len(set(p.lstrip('0'))) <= 2 else 0\n\n    elif len(set(p.lstrip('0'))) > 2: ans = 0\n\n    elif s[:len(p)] > p:\n\n        if len(set(p.lstrip('0'))) == 2:\n\n            ans = 2**(len(s)-len(p))\n\n        elif len(set(p.lstrip('0'))) == 1:\n\n            ans = 1 + 9 * (2**(len(s)-len(p)) - 1)\n\n        else:\n\n            # ab for all a, b != 0\n\n            ans = 10 + 45 * (2**(len(s)-len(p)) - 2)\n\n            ans += 36 * sum([2**l-2 for l in range(2,len(s)-len(p))])\n\n                \n\n    else: ans = sum(cnt(s, p+c) for c in '0123456789')\n\n\n\n    return ans\n\n\n\nprint(cnt(input().strip(), '')-1)\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "n=int(input())\ncurr=list([i for i in range(1,100)]) \ncurr=set(curr)\ndef isvalid(x):\n    if x<1 or x>10**9:\n        return 0 \n    if len(set(str(x)))<=2:\n        return 1 \ncnt=0 \nwhile cnt<=10**5 :\n    curr1=set()\n    for i in curr:\n        for j in range(10):\n            if isvalid(i*10+j):\n                curr1.add(i*10+j)\n               # print('hi')\n                cnt+=1 \n    #print(curr1)\n    curr|=curr1 \ncurr=sorted(list(curr))\n#print(curr)\nans=0 \nfor i in curr:\n    if i>=1 and i<=n:\n        ans+=1 \n    elif i>n:\n        break \nprint(ans)", "n=int(input())\ncurr=list([i for i in range(1,100)]) \ncurr=set(curr)\ndef isvalid(x):\n    if x<1 or x>10**9:\n        return 0 \n    if len(set(str(x)))<=2:\n        return 1 \ncnt=0 \nwhile cnt<=9*(10**4 ):\n    curr1=set()\n    for i in curr:\n        for j in range(10):\n            if isvalid(i*10+j):\n                curr1.add(i*10+j)\n               # print('hi')\n                cnt+=1 \n    #print(curr1)\n    curr|=curr1 \ncurr=sorted(list(curr))\n#print(curr)\nans=0 \nfor i in curr:\n    if i>=1 and i<=n:\n        ans+=1 \n    elif i>n:\n        break \nprint(ans)", "n=int(input())\ncurr=list([i for i in range(1,100)]) \ncurr=set(curr)\ndef isvalid(x):\n    if x<1 or x>10**9:\n        return 0 \n    if len(set(str(x)))<=2:\n        return 1 \ncnt=0 \nwhile cnt<=10**5:\n    curr1=set()\n    for i in curr:\n        for j in range(10):\n            if isvalid(i*10+j):\n                curr1.add(i*10+j)\n            \n                cnt+=1 \n    #print(curr1)\n    curr|=curr1 \ncurr=sorted(list(curr))\n#print(curr)\nans=0 \nfor i in curr:\n    if i>=1 and i<=n:\n        ans+=1 \n    elif i>n:\n        break \nprint(ans)", "n = int(input())\nres = set()\n\ndef solve(p, l):\n    if p > n or l > 10:\n        return\n    if p > 0:\n        res.add(p)\n    solve(p * 10 + a, l + 1)\n    solve(p * 10 + b, l + 1)\n\nfor a in range(0, 10):\n    for b in range(0, a):\n        solve(0, 0)\nprint(len(res))\n", "# https://codeforces.com/contest/244/problem/B\n\ndef gen(digit, x, length, S):\n    S.append(x)\n    \n    if length == 10:\n        return\n    \n    if len(digit) == 1:\n        for i in range(0, 10):\n            next_x = x * 10 + i\n            \n            if i == digit[0]: \n                gen(digit, next_x, length+1, S)\n            else:\n                gen(digit+[i], next_x, length+1, S)\n        \n    else:\n        next_x1 = x * 10 + digit[0]\n        next_x2 = x * 10 + digit[1]\n        gen(digit, next_x1, length+1, S)\n        gen(digit, next_x2, length+1, S)\n        \nS = []\nfor i in range(1, 10):\n    gen([i], i, 1, S)\n    \nS = sorted(S) \nx = int(input())\n\nl = -1\nu = len(S)\n\nwhile u-l>1:\n    md = (u+l) // 2\n    if x >= S[md]:\n        l = md\n    else:\n        u = md\nprint(u)            ", "n=int(input())\na=[]\ndef foo(x,i,j):\n    if x>n:\n        return\n    if x:\n        a.append(x)\n    if 10*x+i!=x:\n        foo(10*x+i,i,j)\n    foo(10*x+j,i,j)\nfor i in range(10):\n    for j in range(i+1,10):\n        foo(0,i,j)\nprint(len(set(a)))\n", "ii=lambda:int(input())\nkk=lambda:map(int, input().split())\nll=lambda:list(kk())\nq =[]\ns=set()\nn=ii()\nfor x in range(10):\n\tfor y in range(10):\n\t\tq.append(x)\n\t\twhile q:\n\t\t\tq2 = []\n\t\t\tfor item in q:\n\t\t\t\tif item > 0 and item <= n:\n\t\t\t\t\ts.add(item)\n\t\t\t\t\titem*=10\n\t\t\t\t\tq2.append(item+x)\n\t\t\t\t\tq2.append(item+y)\n\t\t\tq=q2\nprint(len(s))", "num=int(input());cou=0;\ndef traverse(x):\n    if(x>num):return\n    nonlocal cou\n    if(len(set([int(j) for j in str(x)]))<=2):\n        cou+=1\n        for i in range(0,10):traverse(10*x+i)\nfor i in range(1,10):traverse(i)\nprint(cou)", "from collections import deque\ndef check(n):\n    s=set([int(i) for i in str(n)])\n    if len(s)<=2:\n        return 1\n    else:\n        return 0\nn=int(input())\ns=set()\nq=deque()\nq.append(0)\nwhile(len(q)>0):\n    g=q.popleft()\n    if g>n:\n        break\n    s.add(g)\n    if g>=n:\n        break\n    for j in range(0,10):\n        if g*10+j not in s and check(g*10+j):\n            q.append(g*10+j)\n\nprint(len(s)-1)", "n=int(input())\narray=set()\narray.add(10**9)\nfor x in range(10):\n    for y in range(10):\n        for l in range(1, 10):\n            for m in range(1, 2 ** l + 1):\n                s = [str(x) if m & (1 << i) else str(y) for i in range(l)]\n                u = int(''.join(s))\n                if u <= n:\n                    array.add(u)\narray.remove(0)\n# print (sorted(list(array)))\narray=[u for u in array if u <= n]\nprint(len(array))", "def p(k):\n    if 0 < k <= n:\n        s.add(k)\n        k *= 10\n        p(k + x)\n        p(k + y)\n\n\nn = int(input())\ns = set()\nfor x in range(10):\n    for y in range(10):\n        p(x)\nprint(len(s))\n", "\"\"\"\n    Template written to be used by Python Programmers.\n    Use at your own risk!!!!\n    Owned by adi0311(rating - 5 star at CodeChef and Specialist at Codeforces).\n\"\"\"\nimport sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush, nlargest, nsmallest, _heapify_max, _heapreplace_max\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque, Counter as c\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom fractions import Fraction\n# sys.setrecursionlimit(2*pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var))\ndef outln(var): sys.stdout.write(str(var)+\"\\n\")\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\ntemp = pow(10, 8)\n\n\ndef dfs(number):\n    if 0 < number <= n:\n        answer[0] += 1\n    if number >= temp:\n        return\n    for i in range(10):\n        if number * 10 + i > 0:\n            if len(set(str(number * 10 + i))) <= 2:\n                dfs(number * 10 + i)\n\n\nn = int(data())\nanswer = [0]\ndfs(0)\nif n == pow(10, 9):\n    outln(answer[0] + 1)\n    return\noutln(answer[0])\n", "def dfs(num):\n  if 0 < num <= n:\n    s.add(num)\n    num*=10\n    dfs(num+x)\n    dfs(num+y)\n\n\nn = int(input())\ns = set()\nfor x in range(10):\n  for y in range(10):\n    dfs(x)\n    \nprint(len(s))\n", "def dfs(num):\n  if 0 < num <= n:\n    s.add(num)\n    num*=10\n    dfs(num+x)\n    dfs(num+y)\n\n\nn = int(input())\ns = set()\nfor x in range(10):\n  for y in range(10):\n    dfs(x)\n    \nprint(len(s))", "def find(x):\n    if 0<x<=n:\n        p.add(x)\n        x*=10\n        find(x+i)\n        find(x+j)\nn=int(input())\np= set()\nfor i in range(10):\n    for j in range(10):\n        find(i)\nprint(len(p))\n\n", "def dfs(num):\n  if 0 < num <= n:\n    s.add(num)\n    num*=10\n    dfs(num+x)\n    dfs(num+y)\n\nn = int(input())\ns = set()\nfor x in range(10):\n  for y in range(10):\n    dfs(x)\n\nprint(len(s))\n\n#Copied\n", "#d=sorted(d,key=lambda x:(len(d[x]),-x))  d=dictionary     d={x:set() for x in arr}\n#n=int(input())\n#n,m,k= map(int, input().split())\nimport heapq\n#for _ in range(int(input())):\n#n,k=map(int, input().split())\n#input=sys.stdin.buffer.readline\n#for _ in range(int(input())):\ndef dfs(x):\n    if 0< x <=n :\n        s.add(x)\n        x*=10\n        dfs(x+i)\n        dfs(x+j)\n\nn=int(input())\n#arr = list(map(int, input().split()))\ns=set()\n\nfor i in range(1,10):\n    for j in range(10):\n        dfs(i)\nprint(len(s))\n"]