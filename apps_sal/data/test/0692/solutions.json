["ct = 0\nx = int(input())\ny = list(map(int, input().split(' ')))\nz = list(map(int, input().split(' ')))\nfor i in range(1, 720721):\n    for j in range(x):\n        if i%y[j] == z[j]:\n            ct+=1\n            break\nprint(ct/720720)\n", "n = int(input())\nmod = list(map(int, input().split()))\nrem = list(map(int, input().split()))\ncnt = 0\nfor d in range(360360):\n    we = False\n    for r, m in zip(rem, mod):\n        if d % m == r:\n            we = True\n            break\n    if we:\n        cnt += 1\nprint(cnt / 360360)", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\nn = int(input())\n\nM = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\nG = 1\nfor m in M:\n    G = (G * m) // gcd(G, m)\n\ncount = 0\nfor d in range(G):\n    for i in range(len(M)):\n        if d % M[i] == R[i]:\n            count += 1\n            break\n\nprint(count / G)\n", "n = int(input())\nM = list(map(int, input().split()))\nR = list(map(int, input().split()))\nN = 720720\nP = 0\nfor x in range(N):\n    if any(x % M[i] == R[i] for i in range(n)):\n        P += 1\n\nprint(P * 1.0 / N)\n", "n = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\ncount = 0\nN = 100000\nfor D in range(N):\n    for i in range(n):\n        if D % m[i] == r[i]:\n            count += 1\n            break\nprint(count / N)", "from fractions import gcd\nn, m, r = int(input()), list(map(int, input().split())), list(map(int, input().split()))\nlcm = m[0]\nfor mi in m:\n    lcm = lcm * mi // gcd(lcm, mi)\nprint(sum(any(i % mj == rj for mj, rj in zip(m, r)) for i in range(lcm)) / lcm)", "n = int(input())\nM = [int(s) for s in input().split()]\nR = [int(s) for s in input().split()]\nc = 0\nfor i in range(100000):\n    bool = False\n    for j in range(n):\n        if i % M[j] == R[j]:\n            bool = True\n            break\n    if bool:\n        c += 1\nprint(c/100000)", "n = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(720720):\n\tfor j in range(n):\n\t\tif i % m[j] == r[j]:\n\t\t \tcnt += 1\n\t\t \tbreak\n\nprint(cnt / 720720)", "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\nn = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\ncap = 1\nfor val in m:\n    cap = lcm(cap, val)\n\nans = 0\nfor day in range(cap):\n    works = False\n    for i in range(n):\n        if day % m[i] == r[i]:\n            works = True\n            break\n    if works:\n        ans += 1\n\nprint(ans/cap)\n", "N = int(input())\nM = list(map(int,input().split()))\nR = list(map(int,input().split()))\n\ndef gcd(a, b):\n    return a if b == 0 else gcd(b, a % b)\nlcm = 1\nfor i in range(N):\n    lcm = lcm * M[i] / gcd(lcm, M[i])\nrec = set()\nfor i in range(N):\n    j = R[i]\n    while j < lcm:\n        rec.add(j)\n        j += M[i]\nprint(len(rec) / lcm)\n", "def gcd(a, b):\n    while b != 0:\n        c = a % b\n        a = b\n        b = c\n    return a\n\ninput()\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\nresult = 1\nfor mod in m:\n    result = result * mod // gcd(result, mod)\ngood = 0\nfor i in range(result):\n    for mod, car in zip(m, r):\n        if i % mod == car:\n            good += 1\n            break\nprint(good / result)\n", "a = 30030\nn = int(input())\nm = [int(_) for _ in input().split()]\nr = [int(_) for _ in input().split()]\nans = 0\nfor i in range(a):\n    for j in range(n):\n        if i % m[j] == r[j]:\n            ans += 1\n            break\nprint(ans / a)\n", "from fractions import gcd\n\nn = int(input())\nm = list(map(int,input().split()))\nr = list(map(int,input().split()))\ntot = 1\nfor i in m:\n    tot = tot*i//gcd(tot,i)\nhas = [0]*tot\nfor i in range(n):\n    on = r[i]\n    while on<tot:\n        has[on] = 1\n        on+=m[i]\nprint(sum(has)/tot)", "N=int(input())\nM=list(map(int, input().split()))\nR=list(map(int, input().split()))\n\ndef gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a*b//gcd(a,b)\n\ns=1\nfor m in M: s = lcm(s, m)\nt=0\nfor d in range(s):\n    k = False\n    for i, m in enumerate(M):\n        r = R[i]\n        if d % m == r:\n            k = True\n            break\n    if k: t += 1\n\nprint(t/s)\n", "n = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nresult = 0\nfor d in range(100000):\n    for i in range(n):\n        if d % m[i] == r[i]:\n            result += 1\n            break\n\nprint('%.6f' % (result / 100000))\n", "def gcd(x, y):\n    while x != 0 and y != 0:\n        if x > y:\n            x %= y\n        else:\n            y %= x\n    return x + y\n\ndef lcm(x, y):\n    return x * y / gcd(x, y)\n\nn = int(input())\nm = [int(i) for i in input().split()]\nr = [int(i) for i in input().split()]\n\nl = 1\nfor i in range(n):\n    l = lcm(l, m[i])\ns = set()\nfor i in range(n):\n    t = int(l / m[i])\n    for j in range(t):\n        s.add(r[i] + m[i] * j)\nprint(len(s) / l)\n\n", "3\n\nfrom fractions import gcd\n\ndef main():\n    n = int(input())\n    m = list(map(int, input().split()))\n    r = list(map(int, input().split()))\n\n    k = 1\n    for x in m:\n        k = (x * k) // gcd(x, k)\n\n\n    a = 0\n    for i in range(k):\n        f = 0\n        for j in range(n):\n            if i % m[j] == r[j]:\n                f = 1\n                break\n        a += f\n\n    print(a / k)\n\nmain()\n", "n = int(input())\nM = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\ndef nod(x, y):\n\twhile x != 0 and y != 0:\n\t\tif x > y:\n\t\t\tx = x % y\n\t\telse:\n\t\t\ty = y % x\n\treturn x + y\n\nk = 1\nfor i in M:\n\tk = k * i // nod(k, i)\n\nans = 0\nfor D in range(k):\n\tfor i in range(n):\n\t\tif D % M[i] == R[i]:\n\t\t\tans += 1\n\t\t\tbreak\n\nprint(ans / k)", "n = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\nk = 0\nfor i in range(100000):\n    for j in range(n):\n        if i % m[j] == r[j]:\n            k += 1\n            break\n\nprint(k / 100000)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n\ndef lcm(a, b):\n    return(a*b//gcd(a,b))\n\n\ndef gcd(a, b):\n    while( b!= 0 ):\n        while(a >= b):\n            a -= b\n        (a, b) = (b, a)\n    return(a)\n\n\n\nn   = int(input())\n\nM   = [int(i) for i in input().split()]\nR   = [int(i) for i in input().split()]\n\nstart = time.time()\n\nm  = 1\n\nfor i in range(n):\n    m  = lcm(m, M[i])\n\na = [ 0 for i in range(m)]\n\nfor i in range(n):\n    if R[i] >= M[i]:\n        continue\n\n    now = R[i]-1\n    if now < 0:\n        now += M[i]\n\n    while (now < m):\n        a[now] = 1\n        now += M[i]\n\nprint(sum(a)/m)\nfinish = time.time()\n#print(finish - start)\n", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nans = 0\nfor i in range(1000000):\n    for j in range(n):\n        if (i % a[j] == b[j]):\n            ans += 1\n            break\nprint(ans / 1000000)", "n = int(input())\nm = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\ncount = 0.0\nfor i in range(100000):\n    for j in range(len(m)):\n        if i % m[j] == r[j]:\n            count += 1\n            break\nprint(count / 100000.0)\n\n", "def nod(a, b):\n    for i in range(min(a, b), 0, -1):\n        if (a % i == 0 and b % i == 0):\n            return i\n\ndef nok(a, b):\n    return a * b // nod(a, b)\n\n\nn = int(input())\nm = [int(x) for x in input().split()]\nr = [int(x) for x in input().split()]\nans = 1\nfor i in range(n):\n    ans = nok(ans, m[i])\n\nx = 0\nfor d in range(ans):\n    for i in range(n):\n        if d % m[i] == r[i]:\n            x += 1\n            break\nprint(x / ans)", "k = int(input())\nq1 = list(map(int,input().split()))\nq2 = list(map(int,input().split()))\nz = 100000\nans = 0\nfor i in range(1,z+1):\n    for j in range(len(q1)):\n        if i%q1[j] == q2[j]:\n            ans+=1\n            break\nprint(ans/z)", "__author__ = \"runekri3\"\n\nN = int(input())\nM = list(map(int, input().split()))\nR = list(map(int, input().split()))\n\ntotal_days = 100000\ndays_you_washed = 0\n\nfor D in range(total_days):\n    for i in range(N):\n        if D % M[i] == R[i]:\n            days_you_washed += 1\n            break\n\nprint(days_you_washed / total_days)\n"]