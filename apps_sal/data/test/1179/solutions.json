["n,k = list(map(int, input().split()))\nL = list(map(int, input().split()))\ni = 1\nwhile k > 0:\n    k = k - i\n    i += 1\nk = k + i - 1\nprint(L[k-1])\n", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        n, k = list(map(int, input().split()))\n        a = list(map(int, input().split()))\n        for i in range(1, n + 1):\n            if k <= i:\n                print(a[k - 1])\n                break\n\n            k -= i\n\nexcept EOFError:\n    pass\n", "n, k = map(int, input().split())\nIDs = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n+1) :\n    if i < k :\n        k -= i\n    else :\n        ans = IDs[k-1]\n        break\n\nprint(ans)", "n, k = list(map(int, input().split()))\nk -= 1\na = list(map(int, input().split()))\ntri = [1]\n\nfor x in range(2, n + 1):\n    tri.append(tri[-1] + x)\n\nif k == 0:\n    print(a[0])\nelse:\n    lo = 0\n    hi = len(tri) - 1\n    while lo + 1 < hi:\n        mid = (lo + hi) // 2\n        if tri[mid] > k:\n            hi = mid\n        else:\n            lo = mid\n\n    # in bucket hi\n    index = k - tri[hi - 1]\n    print(a[index])\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nl, r = 0, n\nwhile (r - l > 1):\n    m = (r + l) // 2\n    s = m * (m + 1) // 2\n    if (s < k):\n        l = m\n    else:\n        r = m\nk -= l * (l + 1) // 2\nprint(a[k - 1])", "n, k = list(map(int, input().split()))\nl = [0] + list(map(int, input().split()))\nm = 0\nfor i in range(1, n + 1):\n    if i * (i + 1) < k + k:\n        m = i\n    else:\n        break\nprint(l[k - (m * (m + 1) >> 1)])\n        \n", "n, k = map(int, input().split())\nc, id = 1, list(map(int, input().split()))\nwhile k > c:\n    k, c = k - c, c + 1\nprint(id[k - 1])", "import sys\nimport math\nimport itertools as it\nimport operator as op\nimport fractions as fr\n\n\nn,k = map(int, sys.stdin.readline().split())\nids = list(map(int, sys.stdin.readline().split()))\n\np = 1\nwhile k >= p+1:\n  k -= p\n  p += 1\n\nprint(ids[k-1])", "def solve(n,k):\n    tmp = 0\n    i = 0\n    while (tmp < k):\n        i += 1\n        tmp += i\n    tmp -= i\n    return (k-tmp-1)\n    \ndata = input().split()\ndata2 = input().split()\nind = solve(int(data[0]), int(data[1]))\nprint(data2[ind])", "n,k = map(int,input().split())\nnums = list(map(int,input().split()))\nnow = 0\ni = 0\nwhile 1==1:\n    i+=1\n    now+=i\n    if now>=k:\n        now-=i\n        k-=now\n        break\nprint(nums[k-1])", "import math\nn, k = [int(x) for x in input().split()]\nID = [int(x) for x in input().split()]\nm = math.floor(((1 + 8*(k-1))**0.5 - 1) / 2)\nprint(ID[k-1 - m*(m+1)//2])\n", "n, k = list(map(int, input().split()))\nxs = list(map(int, input().split()))\n\ni = 0\nwhile k > 0:\n    i += 1\n    h = k\n    k -= i\n\nprint(xs[h - 1])\n", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\nt=0\nfor i in range(n):\n    if t+i+1>=k: break\n    else: t+=i+1\nprint(l[k-t-1])", "n, k = list(map(int, input().split()))\n\n\na = [int(s) for s in input().split()]\n\nfrom math import sqrt\nfrom math import ceil\n\np = ceil((sqrt(1 + 8*k) - 1) / 2)\n\nprint(a[k - p*(p-1)//2 - 1])\n", "import math\ndef __starting_point():\n    #n, m = list(map(int, input().split()))\n    n, k = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    x = int((-1 + math.sqrt(1 + 8 * k)) / 2)\n    if k == (1 + x) * x // 2:\n        print(A[x - 1])\n    else:\n        print(A[k - (1 + x) * x // 2 - 1])\n    \n\n__starting_point()", "s = input().split()\nn, k = int(s[0]), int(s[1])\n\nid = list(map(lambda x: int(x), input().split()))\n\nc = 1\nd = 1\n\nwhile c + d <= k:\n\tc += d\n\td += 1\n\nprint(id[k-c])", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ni = 1\nwhile i * (i + 1) < 2 * k:\n    i += 1\ni -= 1\nprint(a[k - 1 - i * (i + 1) // 2])\n", "from sys import stdin, stdout\nn, k = map(int, stdin.readline().split())\nnumber = [0]\nfor i in range(n):\n    number.append(number[-1] + i + 1)\n    if number[-1] >= k:\n        ind = i\n        cnt = number[-2]\n        break\n    \nvalues = list(map(int, stdin.readline().split()))\nfor i in range(ind + 1):\n    if cnt + i + 1 == k:\n        stdout.write(str(values[i]))\n        break", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ni = 1\nwhile k>i:\n    k-=i\n    i+=1\nprint(a[k-1])\n", "import math\nn, k = list(map(int, input().split()))\nlst = list(map(int, input().split()))\nl = 1\nr = min(2 * (10 ** 9) + 1, n * (n + 1) / 2)\nwhile (r > l):\n    m = math.floor((l + r) / 2)\n    if (m + 1) / 2 * m < k:\n        l = m + 1\n    else:\n        r = m\nprint(lst[k  - int(l * (l - 1) / 2) - 1])\n", "n,k=list(map(int,input().split()))\nid=[int(i) for i in input().split()]\ni=0\ns=i*(i+1)//2\nwhile s<=k:\n     i+=1\n     s=i*(i+1)//2\n     \ns=(i-1)*i//2\n\nk=k-s\nif k==0:\n     print(id[i-2])\nelse:\n     print(id[k-1])\n", "n, k = input().split(' ')\nn = int(n)\nk = int(k)\nd = input().split(' ')\ni = 0\n\nwhile True:\n\ti += 1\n\tp = int((i) * (i+1) / 2)\n\tif k <= p :\n\t\tprint(d[k-(p-i)-1])\n\t\tbreak", "read = lambda: list(map(int, input().split()))\nn, k = read()\na = list(read())\ns = 0\nfor i in range(n):\n    s += i + 1\n    if s >= k:\n        s -= i + 1\n        ind = i\n        break\nans = a[k - s - 1]\nprint(ans)\n", "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nans = n - 1\nfor i in range(1, n + 1):\n    if (1 + i) * i // 2 >= k:\n        ans = i - 1\n        break\nprint(arr[k - (1 + ans) * ans // 2 - 1])\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nb=list()\nc=1\nd=w=0\nfor i in range(100000):\n    b.append(c)\n    if c==k:\n        w=i\n        break\n    elif c>k:\n        w=i-1\n        break\n    d+=1\n    c+=d\nprint(a[k-b[w]])"]