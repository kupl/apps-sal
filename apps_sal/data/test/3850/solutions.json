["read = lambda: map(int, input().split())\nn, k, p = read()\na, b = sorted(read()), sorted(read())\nprint(min(max(abs(b[i + d] - a[i]) + abs(b[i + d] - p) for i in range(n)) for d in range(k - n + 1)))", "o=lambda:[int(f)for f in input().split()]\nn,k,p=o()\na=sorted(o())\nb=sorted(o())\nprint(min(max(abs(b[i + d] - a[i]) + abs(b[i + d] - p) for i in range(n)) for d in range(k - n + 1)))\n", "n, k, p = (int(x) for x in input().split())\na = sorted([int(x) for x in input().split()])\nb = sorted([int(x) for x in input().split()])\n\ntime = min([max([abs(a[j] - b[i + j]) + abs(b[i + j] - p) for j in range(n)]) for i in range(k-n+1)])\n\nprint(time)  ", "#!/usr/bin/env python3\n# http://codeforces.com/contest/830/problem/A\nimport sys\nfrom operator import itemgetter\n\nread = lambda: list(map(int, input().split()))\nn, k, p = read() # n people, k keys, office location \npeople, keys = sorted(read()), sorted(read())\n\nres = []\nfor i in range(k - n + 1):\n\tinner_res = []\n\tfor j in range(n):\n\t\tinner_res.append(abs(keys[i + j] - people[j]) + abs(keys[i + j] - p))\n\tres.append(max(inner_res))\n\nprint(min(res))\n", "def read():\n    return [int(x) for x in input().split()]\n\nn,k,p = read()\na = read()\nb = read()\na.sort()\nb.sort()\nans = 2e9+1\nans = int(ans)\nfor i in range(k-n+1):\n    tmp = 0\n    for j in range(n):\n        tmp = max(tmp,abs(a[j]-b[i+j])+abs(b[i+j]-p))\n    ans = min(ans,tmp)\nprint(ans)", "\nn,k,p=map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\na.sort()\nb.sort()\nans = 1000000000000000\nans = int(ans)\nfor i in range(k-n+1):\n    tmp = 0\n    for j in range(n):\n        tmp = max(tmp,abs(a[j]-b[i+j])+abs(b[i+j]-p))\n    ans = min(ans,tmp)\nprint(ans)", "n, k, p = (map(int, input().split()))\na = sorted(map(int, input().split()))\nb = sorted(map(int, input().split()))\n\ntime = min([max([abs(a[j] - b[i + j]) + abs(b[i + j] - p) for j in range(n)]) for i in range(k-n+1)])\n\nprint(time)", "from sys import stdin, stdout\nn,k,p = [int(x) for x in stdin.readline().rstrip().split()]\na = [int(x) for x in stdin.readline().rstrip().split()]\na = sorted(a)\nb = [int(x) for x in stdin.readline().rstrip().split()]\nb = sorted(b)\n\nans = int(2e9+1)\nfor i in range(k-n+1):\n    tmp = 0\n    for j in range(n):\n        tmp = max(tmp,abs(a[j]-b[j+i])+abs(b[j+i]-p))\n    ans = min(ans,tmp)\nprint(ans)", "n,k,p = map(int,input().split(\" \"))\na = [int(x) for x in input().split(\" \")]\nb = [int(x) for x in input().split(\" \")]\na.sort()\nb.sort()\nresult = []\nfor i in range(k):\n\tmax_time = 0\n\tif k - i < n:\n\t\tbreak\n\tfor ind in range(n):\n\t\ttem=0\n\t\ttem += abs(a[ind]-b[i+ind])\n\t\ttem += abs(b[i+ind]-p)\n\t\tif max_time < tem:\n\t\t\tmax_time = tem\n\tresult.append(max_time)\nprint(min(result))", "s = input()\nn, k, p = s.split(' ')\nn = int(n)\nk = int(k)\np = int(p)\n\ndef time(start):\n\tnonlocal people, keys, n, p\n\tres = 0\n\tfor i in range(n):\n\t\tres = max(res, abs(people[i] - keys[i+start]) + abs(keys[i+start] - p))\n\treturn res\n\ns = input()\npeople = s.split(' ')\nfor i in range(n):\n\tpeople[i] = int(people[i])\ns = input()\nkeys = s.split(' ')\nfor i in range(k):\n\tkeys[i] = int(keys[i])\npeople.sort()\nkeys.sort()\nres = 10**10\nfor i in range(k-n+1):\n\tres = min(res, time(i))\nprint(res)", "n, k, p = [int(_) for _ in input().split()]\na = [int(_) for _ in input().split()]\nb = [int(_) for _ in input().split()]\na.sort()\nb.sort()\n\nres = 2147483647\nfor i in range(k-n+1):\n    m = 0\n    for j in range(n):\n        k = j + i\n        dis = abs(a[j] - b[k]) + abs(b[k] - p)\n        m = max(m, dis)\n    res = min(res, m)\nprint(res)\n", "read = lambda: list(map(int, input().split()))\nn, k, p = read()\na = list(read())\nb = list(read())\na.sort()\nb.sort()\n\n\ndef cal(a, b):\n    return abs(a - b) + abs(b - p)\n\nmi = 1e15\nfor _ in range(k - n + 1):\n    ma = 0\n    for __ in range(n):\n        te = cal(a[__], b[_ + __])\n        if te > ma:\n            ma = te\n    if ma < mi:\n        mi = ma\nprint(mi)\n", "read = lambda: list(map(int, input().split()))\n\nn, k, p = read()\n\na, b = sorted(read()), sorted(read())\n\nprint(min(max(abs(b[i + d] - a[i]) + abs(b[i + d] - p) for i in range(n)) for d in range(k - n + 1)))\n\n\n\n# Made By Mostafa_Khaled\n", "import math\nimport sys\nfrom bisect import bisect_right, bisect_left\nfrom collections import Counter, defaultdict\nfrom heapq import heappop, heappush\nfrom itertools import accumulate\nfrom sys import stdout\n\nR = lambda: map(int, input().split())\nnp, nk, z = R()\nps = sorted(R())\nks = sorted(R())\nres = math.inf\nfor ki in range(nk - np + 1):\n    res = min(res, max(abs(x - y) + abs(y - z) for x, y in zip(ps, ks[ki:ki + np + 1])))\nprint(res)", "filler = [0] * 10000\n\nnumbers = list(map(int, input().split()))\n\nn = numbers[0]\nk = numbers[1]\np = numbers[2]\n\nrezultat = 9999999999999999\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort()\n\n#a = a + filler\n#b = b + filler\n\nfor i in range(k - n + 1):\n    temp_max = -999999999\n    for j in range(n):\n        temp_max =  max(abs(b[i + j] - a[j]) + abs(b[i + j] - p), temp_max)\n        \n    rezultat = min(temp_max, rezultat)\n    \nprint(rezultat)\n\n\n", "import math as mt \nimport sys,string\ninput=sys.stdin.readline\n#print=sys.stdout.write\nimport random\nfrom collections import deque,defaultdict\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\nI=lambda :int(input())\nn,k,p=M()\nl=L()\ng=L()\nl.sort()\ng.sort()\nans=10**30\nfor i in range(k-n+1):\n    ans1=0\n    for j in range(i,i+n):\n        ans1=max(ans1,abs(l[j-i]-g[j])+abs(g[j]-p))\n    ans=min(ans,ans1)\nprint(ans)\n    \n", "# self.author = Fuad Ashraful Mehmet ,CSE-UAP\n\nread=lambda:map(int,input().split())\n\nn,k,p=read()\nA=sorted(read())\nB=sorted(read())\n\nres=1e18\ndef fun(x,y):\n    return abs(x-y)+abs(y-p)\n\nfor i in range(k-n+1):\n    now=0\n    for j in range(n):\n        c=fun(A[j],B[i+j])\n        if c>now:\n            now=c\n\n    if now<res:\n        res=now\n\nprint(res)\n\n'''\nInput:\n2 4 50\n20 100\n60 10 40 80\nOutput:\n50\n\n'''", "def check(x):\n    j=0\n    for i in range(n):\n        if j>=k:\n            return False\n        while abs(b[j]-a[i])+abs(b[j]-p)>x:\n            j+=1\n            if j>=k:\n                return False\n        j+=1\n    return True\nn,k,p=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nb.sort()\nl=0\nr=10**18\nans=-1\nwhile l<=r:\n    mid=l+(r-l)//2\n    if check(mid):\n        r=mid-1\n        ans=mid\n    else:\n        l=mid+1\nprint(ans)\n\n\n", "import sys\nimport math\n#from queue import *\n#import random\n#sys.setrecursionlimit(int(1e6))\ninput = sys.stdin.readline\n \n############ ---- USER DEFINED INPUT FUNCTIONS ---- ############\ndef inp():\n    return(int(input()))\ndef inara():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(list(map(int,input().split())))\n################################################################\n############ ---- THE ACTUAL CODE STARTS BELOW ---- ############\n\nn,k,p=invr()\na=inara()\nb=inara()\na.sort()\nb.sort()\n\nans=int(1e18)\nfor i in range(k-n+1):\n\tcurr=-1\n\tfor j in range(n):\n\t\tif p<=b[i+j] and b[i+j]<=a[j]:\n\t\t\tcurr=max(curr,a[j]-p)\n\t\telif a[j]<=b[i+j] and b[i+j]<=p:\n\t\t\tcurr=max(curr,p-a[j])\n\t\telse:\n\t\t\tcurr=max(curr,abs(a[j]-b[i+j])+abs(p-b[i+j]))\n\tans=min(ans,curr)\nprint(ans)\n", "def good(n, k, p, a, b, x):\n    j = 0\n    c = 0\n    for i in range(n):\n        while j < k:\n            if abs(a[i] - b[j]) + abs(b[j] - p) <= x:\n                j += 1\n                c += 1\n                break\n            j += 1\n    return c == n\n\nn, k, p = [int(x) for x in input().split(' ')]\na = [int(x) for x in input().split(' ')]\nb = [int(x) for x in input().split(' ')]\na.sort()\nb.sort()\n\nl = -1\nr = 2 * 10 ** 9\n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if good(n, k, p, a, b, m):\n        r = m\n    else:\n        l = m\nprint(r)\n"]