["# cook your dish here\nn=int(input())\narr=[int(x) for x in input().split()]\nans=n-1\nwhile(ans>0 and arr[ans]==arr[ans-1]):ans-=1\nprint(ans+1)", "def checklist(a):\r\n\treturn len(set(a)) == 1\r\n\r\nn =int(input())\r\na =list(map(int, input().split()))\r\nx=0\r\nif checklist(a) == True:\r\n\tx=1\r\n\tprint(1)\r\nelif x==0:\t\r\n\twhile a[n-1] == a[n-2]:\r\n\t\tn-=1\r\n\tprint(n)", "# cook your dish here\nn=int(input())\narr=[int(x) for x in input().split()]\nans=n-1\nwhile(ans>0 and arr[ans]==arr[ans-1]):ans-=1\nprint(ans+1)", "try:\n    n=int(input())\n    c=0\n    l=list(map(int,input().split()))\n    for i in range(n-1,0,-1):\n        if(l[i]!=l[i-1]):\n            print(i+1)\n            c=1\n            break\n    if(c==0):\n        print(1)\nexcept EOFError:\n    pass\n    \n", "import sys\r\nimport math\r\nfrom collections import defaultdict,Counter\r\n\r\n# input=sys.stdin.readline\r\n# def print(x):\r\n#     sys.stdout.write(str(x)+\"\\n\")\r\n\r\n# sys.stdout=open(\"CP1/output.txt\",'w')\r\n# sys.stdin=open(\"CP1/input.txt\",'r')\r\n\r\n# m=pow(10,9)+7\r\nn=int(input())\r\na=list(map(int,input().split()))\r\nans=1\r\nfor i in range(n-2,-1,-1):\r\n    if a[i]!=a[i+1]:\r\n        ans=i+2\r\n        break\r\nprint(ans)", "t=1\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    s=1\n    for i in range(n-2,-1,-1):\n        if a[i]!=a[i+1]:\n            s=i+2\n            break\n    print(s)\n            \n", "def checklist(a):\r\n\treturn len(set(a)) == 1\r\n\r\nn =int(input())\r\na =list(map(int, input().split()))\r\nx=0\r\nif checklist(a) == True:\r\n\tx=1\r\n\tprint(1)\r\nelif x==0:\t\r\n\twhile a[n-1] == a[n-2]:\r\n\t\tn-=1\r\n\tprint(n)", "n = int(input())\nlst=list(map(int,input().split()))\nfor i in range (len(lst)-1,0,-1):\n    if lst[i]!=lst[i-1]:\n        pos=i+1\n        break\n    if i==1:\n        pos=1\nprint(pos)", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\ntar=arr[n-1]\nj=n-2\nflag=0\nwhile(j>0):\n        if(arr[j]==tar):\n                tar=arr[j]\n                j=j-1\n                continue\n        else:\n                flag=j+1\n                break\nprint(str(flag+1))\n", "# cook your dish here\nn = int(input())\narr = list(map(int, input().split()))\nlst = arr[-1]\ncount = 0\nfor i in range(len(arr)-1,-1,-1):\n    if(arr[i] == lst):\n        count = count + 1\n    else:\n        break\nprint(len(arr)-count+1)\n\n\n", "# cook your dish here\nn=int(input())\narr=list(map(int,input().split()))\ntar=arr[n-1]\nj=n-2\nflag=0\nwhile(j>0):\n        if(arr[j]==tar):\n                tar=arr[j]\n                j=j-1\n                continue\n        else:\n                flag=j+1\n                break\nprint(str(flag+1))\n", "n = int(input())\na = list(map(int, input().split()))\n\nif a[-1] == a[-2]:\n    k = n-1\n    while a[k-1] == a[k] and k >= 1:\n        k -= 1\n    print(k+1)\nelse:\n    print(n)", "# cook your dish here\nn=int(input())\nlis=[]\nlis=input().split(\" \")\npos=n\nfor i in range(n-1):\n    if(lis[n-1]==lis[n-i-2]):\n        pos=n-i-1\n    else:\n        break\nprint(pos)", "# cook your dish here\nn=int(input())\nlis=[]\nlis=input().split(\" \")\npos=n\nfor i in range(n-1):\n    if(lis[n-1]==lis[n-i-2]):\n        pos=n-i-1\n    else:\n        break\nprint(pos)", "n=int(input())\narr=list(map(int,input().split()))\nfor i in range(n-1,0,-1):\n    if arr[i]==arr[i-1]:\n        pass\n    else:\n        print(i+1)\n        break\nelse:\n    print(1)", "# cook your dish here\nn=int(input())\nlis=[]\nlis=input().split(\" \")\npos=n\nfor i in range(n-1):\n    if(lis[n-1]==lis[n-i-2]):\n        pos=n-i-1\n    else:\n        break\nprint(pos)", "# cook your dish here\nn=int(input())\nlis=[]\nlis=input().split(\" \")\npos=n\nfor i in range(n-1):\n    if(lis[n-1]==lis[n-i-2]):\n        pos=n-i-1\n    else:\n        break\nprint(pos)", "n = int(input())\na = [int(x) for x in input().split()]\nans = n-1\nx = a[-1]\nwhile ans-1 >= 0:\n    if a[ans-1] == x:\n        x = a[ans-1]\n        ans -= 1\n    else:\n        break\nprint(ans+1)\n", "# cook your dish here\nn=int(input())\na = []\na = input().split(\" \")\npos = n\nfor i in range(n-1):\n    if(a[n-1] == a[n-i-2]):\n        pos = n-i-1\n    else:\n        break\nprint(pos)", "# Good judgment comes from experience, and experience comes from bad judgment. Rita Mae Brown\n# by : Blue Edge - Create some chaos\n\nn=int(input())\na=list(map(int,input().split()))\ni=n-1\nwhile i+1:\n    if a[i]!=a[-1]:\n        break\n    i-=1\nprint(i+2)\n", "n=int(input())\narr=list(map(int,input().split()))\nfor i in range(n-1,0,-1):\n    if arr[i]==arr[i-1]:\n        pass\n    else:\n        print(i+1)\n        break\nelse:\n    print(1)", "n = int(input())\nli = list(map(int, input().split()))\nprev = None\nfor ind, z in enumerate(reversed(li)):\n    if prev is not None:\n        if z != prev[1]:\n            break\n\n        prev[0] = ind\n    else:\n        prev = [ind, z]\nprint(n - prev[0])", "n = int(input())\nli = list(map(int, input().split()))\nprev = None\nfor ind, z in enumerate(reversed(li)):\n    if prev is not None:\n        if z != prev[1]:\n            break\n\n        prev[0] = ind\n    else:\n        prev = [ind, z]\nprint(n - prev[0])", "# cook your dish here\nn=int(input())\ncubes=list(map(int,input().split()))\ncol=cubes[n-1]\npos=n-1\ni=n-1\nwhile(i>-1):\n  if(col==cubes[i]):\n    col=cubes[i]\n    #print(col==cubes[i],i,col,cubes[i])\n  else:\n    print(i+2)\n    break\n  i-=1\nelse:\n  print(1)", "n=int(input())\narr=list(map(int,input().split()))\nconst=arr[n-1]\nans=n\nfor i in range(n-2,0,-1):\n    if(arr[i]!=const):\n        ans=i+2\n        break\n    else:\n        ans=i\nprint(ans)    "]