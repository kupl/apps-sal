["n = int(input()[-1:])\nprint(n%2)", "\ns=input()\nf=int(s,16)\nprint(f&1)", "print(int(input()[-1])%2)", "print(bin(int(input(), 16))[-1])", "print(0 + (int(input()[6]) % 2 == 1))", "n = input()\nprint(int(int(n, 16)%2==1))\n", "\nfrom sys import stdin, stdout\n\n\ndef write(x):\n    stdout.write(str(x) + \"\\n\")\n\n\ninp = stdin.readline().strip(\"\\n\")\nwrite(int(inp[-1])%2)\n\n", "a = list(input())\nif int(a[-1]) % 2 == 0:\n  print(0)\nelse:\n  print(1)", "print(int(input(),16)&1)", "A=input()\nif int(A[-1])%2==0:\n    print(0)\nelse:\n    print(1)", "n = input()\nprint(int(n[-1]) % 2)", "x=input()\nif int(x[1:])&1:\n\tprint(1)\nelse:\n\tprint(0)", "s = input()\nprint(int(s[-1]) % 2)", "s = input()\nif int(s[-1])%2==0:\n    print(0)\nelse:\n    print(1)", "n = input()\nn = int(n,16)\nprint(n%2)", "s=input()\nprint(int('0x'+s, 16)%2)", "\"\"\"\nAuthor: guiferviz\nTime: 2020-04-01 16:35:01\n\"\"\"\n\ndef solve():\n    pass\n\n\ndef main():\n    n = int(input()[1:])\n    print(n%2)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "s = input()\nprint(int(s[-1]) % 2)", "n = str(input())\nk = n[6]\nk = int(k)\nif k % 2 == 0:\n  print(0)\nelse:\n  print(1)", "s = input()\nprint(int(s[-1])%2)\n", "n=str(input())\ns=str(n)\nn=int(s[1:])\nif(n%2==0):\n\tprint(0)\nelse:\n\tprint(1)", "s = input()\na = int(s[-1])\nprint(a % 2)", "n=input()\nif(int(n[-1])%2==0):\n    print('0')\nelse:\n    print('1')\n", "a = input()\nprint(int(a[6])%2)", "s = input()\nc = int(s[-1])\nprint(c%2)", "import bisect, collections\n \n \n \ndef solution():\n    \n    n = input().strip()\n\n    if int(n[-1]) % 2 == 0:\n        print(\"0\")\n    else:\n        print(\"1\")\n    \n\n\n    \n\ndef main():    \n    # T = int(input().strip())\n    for _ in range(1):\n        solution()\n\ndef __starting_point():\n    main()\n__starting_point()", "print(int(input()[-1]) % 2)\n", "s = input()\nprint(int(s[-1])%2)", "print(int(input()[-1]) % 2)", "print(int(input()[-1]) % 2)", "s = input()\nprint(int(s[-1])%2)", "s = int(input()[-1])\nif s % 2 == 0:\n    print(\"0\")\nelse:\n    print(\"1\")", "print(int(input()[-1]) % 2)", "n=input()\nr=int(n[-1])\nif r%2==0:\n\tprint(0)\nelse:\n\tprint(1)\n\t\n", "n = input()\n\nprint(int(n[-1]) % 2)", "n = int(input()[6])\nprint(n%2)\n", "n = input()\nb = n[1:]\nbi = int(b)\n\nif bi%2 == 0:\n    print(0)\nelse:\n    print(1)\n", "def solution():\n    s = input()\n    if int(s[-1]) % 2 == 0:\n        print(0)\n    else:\n        print(1)\nsolution()\n", "n = int(input(), 16)\nprint(n % 2)\n", "n = int(input()[1:])\nif n % 2 == 0:\n    print(0)\nelse:\n    print(1)", "hexa = input() \nif(int(hexa[-1])%2):\n    print(1) \nelse:\n    print(0)", "a = input()\nc = int(a[-1])\nprint(c%2)", "print(int(input()[-1]) % 2)\n", "l = input()\nif int(l[-1]) % 2 == 0:\n    print(0)\nelse:\n    print(1)", "a = int(input(),16)\nprint(a%2)", "print(int(input()[-1])%2)", "\"\"\"\n    Template written to be used by Python Programmers.\n    Use at your own risk!!!!\n    Owned by enraged(rating - 5 star at CodeChef and Specialist at Codeforces).\n\"\"\"\nimport sys\nfrom functools import lru_cache\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import ceil, floor, gcd, fabs, factorial, fmod, sqrt, inf\nfrom collections import defaultdict as dd, deque, Counter as c\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\n# sys.setrecursionlimit(2*pow(10, 6))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(var): sys.stdout.write(str(var))\ndef outln(var): sys.stdout.write(str(var)+\"\\n\")\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return list(map(int, data().split()))\ndef ssp(): return list(map(str, data().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n\ns = input()\ns = s[1:]\nprint(int(s, 16) & 1)\n", "a=input()\nif int(a[-1]) % 2 == 0:\n    print(0)\nelse:\n    print(1)", "s = input()\n\ns= s[1:]\nprint(int(s) % 2)", "print(int(input()[-1]) % 2)", "print(int(input()[-1])%2)", "s = input()\nprint(int(s[1:]) %2)", "s = input()\nprint(int(s[-1]) % 2)", "print(int(input()[1:])%2)", "s = input()[1:]\nprint(int(s) % 2)", "s = int(input(), 16)\nprint(s % 2)", "n = input()\ns = int(n, 16)\nprint(s&1)", "n=input()\nif(int(n[len(n)-1])%2==0):\n    print(\"0\")\nelse:\n    print(\"1\")", "#!/usr/bin/env python3\n\na = input()\nprint(int(a[-1]) % 2)\n", "##=====================================================\nfrom sys import stdin, stdout\nfrom collections import defaultdict\nfrom functools import lru_cache\nfrom math import gcd,floor,ceil\n\ndef ilist():\n    return [int(x) for x in stdin.readline().strip().split(\" \")]\ndef iint():\n    return int(stdin.readline())\ndef istr():\n    return stdin.readline().strip()\n##=====================================================\n\ns=istr()\nprint(int(s[-1])%2)\n    \n    \n", "print(int(input()[1:])%2)\n\n", "print(int(input()[-1])%2)", "s=input()\nif int(s[len(s)-1])%2==0:\n\tprint(\"0\")\nelse:\n\tprint(\"1\")", "n = input()\nk = int(n[-1])\nif k%2 ==0:\n\tprint(\"0\")\nelse:\n\tprint(1)\n", "s = input()\ni = int(s, 16)\nprint(i % 2)", "a = int(input()[1:])\n\nprint(a % 2)\n", "a = str(input())\n\nif a[-1] in '02468ACE':\n    print(0)\nelse:\n    print(1)", "s = input()\nx = int(s, 16)\nprint(x%10%2)\n", "s = input()[-1]\ns = int(s) & 1\nprint(s)", "i = input()\n\nt = list(i)\n\nlast = int(t[-1])\n\nprint(last%2)", "inp = list(input())\nprint(int(inp[6])%2)\n", "def main_function():\n    a = input()\n    print(int(a[-1]) % 2)\n\n\ndef __starting_point():\n    main_function()\n__starting_point()", "s=input()\nprint(int(s[-1])%2)", "s = input()\nprint(int(s[-1]) % 2)\n"]