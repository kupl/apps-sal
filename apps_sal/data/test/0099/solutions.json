["def main():\n    (b1, q, l, m) = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    if abs(b1) > l:\n        print(0)\n    else:\n        if b1 == 0:\n            if 0 in a:\n                print(0)\n            else:\n                print(\"inf\")\n        elif q == 0:\n            if 0 not in a:\n                print(\"inf\")\n            elif b1 in a:\n                print(0)\n            else:\n                print(1)\n        elif q == 1:\n            if b1 in a:\n                print(0)\n            else:\n                print(\"inf\")\n        elif q == -1:\n            if (b1 in a) and ((-b1) in a):\n                print(0)\n            else:\n                print(\"inf\")\n        else:\n            ans = 0\n            b = b1\n            for i in range(100):\n                if b in a:\n                    b *= q\n                    if abs(b) > l:\n                        break\n                    continue\n                ans += 1\n                b *= q\n                if abs(b) > l:\n                    break\n            print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from sys import stdin, stdout\n\nb, q, l, n = map(int, stdin.readline().split())\na = set(list(map(int, stdin.readline().split())))\nans = 0\nind = 0\n\nwhile abs(b) <= l and ind < 100:\n    if not b in a:\n        ans += 1\n            \n    b *= q\n    ind += 1\n    \nif ans > 40:\n    stdout.write('inf')\nelse:\n    stdout.write(str(ans))", "b1, q, l, m = [int(i) for i in input().split()]\n\na = [int(i) for i in input().split()]\n\nans = 0\n\nif abs(b1) > l:\n    ans = 0\nelif b1 == 0:\n    ans = \"inf\" if 0 not in a else 0\nelse:\n    ans = int(b1 not in a)\n    if q == 0:\n        if 0 not in a : ans = \"inf\"\n    elif q == 1:\n        if ans > 0 : ans = \"inf\"\n    elif q == -1:\n        if ans > 0 or -b1 not in a: ans = \"inf\"\n    else:\n        while 1:\n            b1 *= q\n            if abs(b1) > l: break\n            ans += b1 not in a\n\nprint(ans)\n", "import sys\n\ndef solve():\n    b1, q, L, m = map(int, input().split())\n    a = [int(i) for i in input().split()]\n\n    a = set(a)\n\n    if b1 == 0:\n        print(0 if b1 in a else 'inf')\n        return\n\n    if q == 1:\n        if abs(b1) > L or b1 in a:\n            print(0)\n        else:\n            print('inf')\n    elif q == -1:\n        if abs(b1) > L or (b1 in a and -b1 in a):\n            print(0)\n        else:\n            print('inf')\n    elif q == 0:\n        if abs(b1) > L:\n            print(0)\n        elif 0 in a:\n            print(0 if b1 in a else 1)\n        else:\n            print('inf')\n    else:\n        b = b1\n        ans = 0\n\n        while abs(b) <= L:\n            if b not in a:\n                ans += 1\n            b *= q\n\n        print(ans)\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef __starting_point():\n    solve()\n__starting_point()", "\ns, r, m, n = list(map(int, input().split()))\nbad = set(map(int, input().split()))\n\ncnt = 0\n\nif abs(s) > m:\n    print(0)\nelif s == 0:\n    if 0 in bad:\n        print(0)\n    else:\n        print('inf')\nelif r == 0 and s != 0:\n    if 0 in bad or m < 0:\n        if s in bad:\n            print(0)\n        else:\n            print(1)\n    else:\n        print('inf')\nelif r == 1:\n    if s in bad:\n        print(0)\n    else:\n        print('inf')\nelif r == -1:\n    if (s in bad) and (-s in bad):\n        print(0)\n    else:\n        print('inf')\nelif -1 <= r <= 1 and r != 0:\n    print('inf')\nelse:\n    while abs(s) <= m:\n        if s not in bad:\n            cnt += 1\n        s *= r\n    print(cnt)\n", "b, q, l, m = list(map(int, input().split()))\nA = set(map(int, input().split()))\n\nans = 0\nfor _ in range(100):\n    if abs(b) > l:\n        break\n    if b not in A:\n        ans += 1\n    b *= q\nif ans > 40:\n    print(\"inf\")\nelse:\n    print(ans)\n", "b1,q,l,m = [int(i) for i in input().split()]\nbad = [int(i) for i in input().split()]\nif abs(q) > 1 and b1 != 0:\n\tb2 = b1\n\tcount = 0\n\twhile abs(b2) <= l:\n\t\tcount += 1\n\t\tif b2 in bad:\n\t\t\tcount-=1\n\t\tb2 *= q\n\t\t'''\n\tfor u in bad:\n\t\ti = u\n\n\t\twhile (i%q == 0):\n\t\t\ti = i / q\n\t\t\ta = i == b1\n\t\t\tif a:\n\t\t\t\tbreak\n\t\ta = i == b1\n\n\t\tif (a and abs(u)<=l) or u == b1:\n\t\t\tcount-=1\n\t'''\n\tprint(count)\nelse:\n\t'''\n\tif abs(b1)<=l:\n\t\tif q == 1:\n\t\t\tif b1 in bad:\n\t\t\t\tprint(\"0\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\t\telif q == 0:\n\t\t\tif 0 in bad:\n\t\t\t\tif b1 in bad:\n\t\t\t\t\tprint(\"0\")\n\t\t\t\telse:\n\t\t\t\t\tprint(\"1\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\t\telif q == -1:\n\t\t\tif (b1 in bad) and (b2 in bad):\n\t\t\t\tprint(\"0\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\n\telse:\n\t\tprint(\"0\")\n\t'''\n\ta1 = b1 * q\n\tif abs(b1) <= l:\n\t\tif b1 == 0:\n\t\t\tif b1 in bad:\n\t\t\t\tprint(\"0\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\t\telif a1 in bad:\n\t\t\tif b1 in bad:\n\t\t\t\tprint(\"0\")\n\t\t\telse:\n\t\t\t\tif a1 == 0:\n\t\t\t\t\tprint(\"1\")\n\t\t\t\telse:\n\t\t\t\t\tprint(\"inf\")\n\t\telse:\n\t\t\tprint(\"inf\")\n\telse:\n\t\tprint(\"0\")", "B1, Q, L, M = list(map(int, input().split()))\nAs = set(map(int, input().split()))\n\nBs = []\ntmp = B1\ncnt = 0\nwhile abs(tmp) <= L and cnt < 100:\n    if tmp not in As:\n        Bs.append(tmp)\n    tmp *= Q\n    cnt += 1\nif 32 < len(Bs):\n    print('inf')\nelse:\n    print(len(Bs))\n", "a,r,l,m = list(map(int,input().split()))\n_l = list(map(int,input().split()))\ns = set(_l)\nif(abs(a)>l):\n    print(0)\n    return\nif(a==0):\n    if(0 in s):\n        print(0)\n        return\n    else:\n        print(\"inf\")\n        return\nif(r==0):\n    if(a==0):\n        if(0 in s):\n            print(0)\n            return\n        else:\n            print(\"inf\")\n            return\n    else:\n        if(a not in s):\n            if(abs(a)<=l):\n                if(0 in s):\n                    print(1)\n                    return\n                else:\n                    print(\"inf\")\n                    return\n            else:\n                print(0)\n                return\n        else:\n            if(0 in s):\n                print(0)\n                return\n            else:\n                print(\"inf\")\n                return\nif(r==1):\n    if(a in s or abs(a)>l):\n        print(0)\n        return\n    else:\n        print(\"inf\")\n        return\nif(r==-1):\n    if(a in s):\n        if(0-a in s):\n            print(0)\n            return\n        else:\n            if(abs(a)<=l):\n                print(\"inf\")\n                return\n            else:\n                print(0)\n                return\n    else:\n        if(abs(a)<=l):\n            print(\"inf\")\n            return\n        else:\n            print(0)\n            return\ntot = 0\nwhile(abs(a)<=l):\n    if(a not in s):\n        tot+=1\n    a*=r\nprint(tot)\n\n\n        \n\n", "b1, q, l, m = map(int, input().split())\nnum1 = list(map(int, input().split()))\nnum = set(num1) \nif q == 1 and abs(b1) <= l: \n    if b1 in num: \n        print(0) \n    else:\n        print(\"inf\")\n    return \n    \nif q == -1 and abs(b1) <= l:\n    if b1 in num: \n        if -b1 in num:\n            print(0)\n        else: \n            print(\"inf\")\n        return \n    print(\"inf\")\n    return\n        \nif q == 0 and abs(b1) <= l:\n    if b1 in num:\n        if 0 in num: \n            print(0)\n        else: \n            print(\"inf\") \n        return\n    if 0 in num:\n        print(1)\n    else: \n        print(\"inf\")\n    return\n\nif b1 == 0 and b1 <= l:\n    if 0 in num: \n        print(0)\n    else:\n        print(\"inf\") \n    return \nif b1 == 1 and (q == 1) and b1 <= l: \n    if 1 in num: \n        print(0)\n    else:\n        print(\"inf\")\n    return\nif b1 == -1 and q == 1 and b1 <= l:\n    if -1 in num: \n            print(0)\n    else:\n        print(\"inf\")\n    return    \nif b1 == 1 and q == -1  and b1 <= l: \n    if 1 in num:\n        if -1 in num: \n            print(0)\n        else: \n            print(\"inf\")\n    else: \n        print(\"inf\")\n    return\nif b1 == -1 and q == -1 and b1 <= l:\n    if -1 in num:\n        if 1 in num: \n            print(0)\n        else: \n            print(\"inf\")\n    else: \n        print(\"inf\")\n        return    \nans = 0\nwhile l >= abs(b1): \n    if b1 not in num: \n        ans += 1 \n    b1 *= q\nprint(ans)", "def solve():\n    b1, q, l, m = map(int, input().split())\n    bads = set(map(int, input().split()))\n    \n    terms = set()\n    \n    if b1 == 0:\n        if 0 not in bads:\n            print(\"inf\")\n        else:\n            print(0)\n    elif q == 0:\n        if abs(b1) > l:\n            print(0)\n        else:\n            if 0 not in bads:\n                print(\"inf\")\n            else:\n                if b1 not in bads:\n                    print(1)\n                else:\n                    print(0)\n    elif q == 1:\n        if abs(b1) <= l:\n            if b1 not in bads:\n                print(\"inf\")\n            else:\n                print(0)\n        else:\n            print(0)\n    elif q == -1:\n        if abs(b1) <= l:\n            if b1 not in bads or -b1 not in bads:\n                print(\"inf\")\n            else:\n                print(0)\n        else:\n            print(0)\n    else:\n        b = b1\n        while abs(b) <= l:\n            terms.add(b)\n            b *= q\n        print(len(terms) - len(terms.intersection(bads)))\n\nsolve()", "b, q, l, m = list(map(int, input().split()))\na = set(list(map(int, input().split())))\nans = 0\nboo = False\ni = 0\nwhile (i < 34) and (abs(b) <= l):\n    if (b not in a):\n        ans += 1\n        if i > 31:\n            boo = True\n    b *= q\n    i += 1\nif boo:\n    print('inf')\nelse:\n    print(ans)", "a=input().split()\nb=int(a[0])\nq=int(a[1])\nl=int(a[2])\nm=int(a[3])\na=input().split()\nt=0\nif(b==0):\n    if('0' in a):print(0)\n    else:print(\"inf\")\n    \nelif(abs(b)>l):print(0)\nelif(abs(q)<=1 and q!=-1 and q!=0):\n    if(str(b) in a):print(0)\n    else:print(\"inf\")\nelif(q==(-1)):\n    if(str(b) in a and str(-b) in a):print(0)\n    else:print(\"inf\")\nelif(q==0):\n    t=1\n    if(str(b) in a):t=0;\n    if(str(0) in a):print(t)\n    else:print(\"inf\")\nelse:\n    t=0\n    while(abs(b)<=l):\n       if(not(str(b) in a)):t+=1\n       b*=q\n    print(t)\n    \n", "from sys import stdin\n\nB1, Q, L, M = list(map(int, stdin.readline().split()))\nbad = set(map(int, stdin.readline().split()))\n\nif B1 == 0:\n    if 0 in bad:\n        print(0)\n    else:\n        print(\"inf\")\nelif abs(B1) <= L and abs(Q) <= 1:\n    # inf or 0\n    if Q == 0: # B1, 0, 0, ...\n        if B1 in bad and 0 in bad:\n            print(0)\n        elif B1 in bad:\n            print(\"inf\")\n        elif 0 in bad:\n            print(1)\n        else:\n            print(\"inf\")\n    elif Q == 1: # B1, B1, B1, ...\n        if B1 in bad:\n            print(0)\n        else:\n            print(\"inf\")\n    else: # B1, -B1, B1, ...\n        if B1 in bad and -B1 in bad:\n            print(0)\n        else:\n            print(\"inf\")\nelse:\n    # finite\n    count = 0\n    b = B1\n    while abs(b) <= L:\n        if b not in bad:\n            count += 1\n\n        b *= Q\n\n    print(count)\n", "b, q, l, m = list(map(int, input().split()))\nbad = set(map(int, input().split()))\n\ncnt = 0\n\nif abs(b) > l:\n    print(0)\nelif q == 0 or b == 0:\n    if b not in bad:\n        cnt += 1\n    if 0 in bad:\n        print(cnt)\n    else:\n        print(\"inf\")\nelif abs(q) == 1:\n    if b in bad and (q == 1 or -b in bad):\n        print(0)\n    else:\n        print(\"inf\")\nelse:\n    while abs(b) <= l:\n        if b not in bad:\n            cnt += 1\n        b *= q\n    print(cnt)\n", "R=lambda:list(map(int,input().split()))\nb,q,i,m=R()\na=set(R())\nc=0\nfor _ in range(99):\n  if abs(b)>i: break\n  if b not in a: c+=1\n  b*=q\nprint(c if c<32 else'inf')\n", "miis = lambda:list(map(int,input().split()))\nb,q,l,m = miis()\n*a, = miis()\nc = 0\nfor _ in ' '*100:\n    if abs(b)>l: break\n    if b not in a: c+=1\n    b*=q\nif c<35:\n    print (c)\nelse:\n    print ('inf')\n", "def solve():\n    b1, q, L, m = map(int, input().split())\n    a = set(int(i) for i in input().split())\n\n    if abs(b1) > L:\n        print(0)\n        return\n\n    if b1 == 0:\n        print(0 if b1 in a else 'inf')\n        return\n\n    if q == 0:\n        if 0 in a:\n            print(0 if b1 in a else 1)\n        else:\n            print('inf')\n\n        return\n\n    if q == 1:\n        print(0 if b1 in a else 'inf')\n        return\n\n    if q == -1:\n        print(0 if (b1 in a and -b1 in a) else 'inf')\n        return\n\n    b = b1\n    ans = 0\n\n    while abs(b) <= L:\n        if b not in a:\n            ans += 1\n        b *= q\n\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "b, q, l, m = [int(a_temp) for a_temp in input().strip().split()]\na = [int(a_temp) for a_temp in input().strip().split()]\nd = {}\nfor e in a:\n    d[e]=True\nif abs(b)>l:\n    print(0)\nelif q==0:\n    if 0 not in d:\n        print(\"inf\")\n    elif b not in d:\n        print(1)\n    else:\n        print(0)\nelif b==0:\n    if 0 not in d:\n        print(\"inf\")\n    else:\n        print(0)\nelif q==1:\n    if b in d or abs(b)>l:\n        print(0)\n    else:\n        print(\"inf\")\nelif q==-1:\n    if abs(b)>l:\n        print(0)\n    elif b not in d:\n        print(\"inf\")\n    elif -1*b not in d:\n        print(\"inf\")\n    else:\n        print(0)\nelse:\n    count = 0\n    t = b\n    while(abs(t)<=l):\n        if t not in d:\n            count+=1\n        t*=q\n    print(count)", "b1 , q , l , m = list(map(int, input().split()))\ns = set(map(int , input().split()))\nans = 0\ncnt = 0\nwhile abs(b1) <= l:\n    if b1 not in s:\n        ans += 1\n    cnt += 1\n    if cnt == 100000:\n        break\n    b1 *= q\n    \nif ans >= 50000:\n    print('inf')\nelse:\n    print(ans)\n", "x = list(map(int, input().split()))\ninit_term = x[0]\nratio = x[1]\nabs_max = x[2]\nnum_bad = x[3]\n\nbad_list = list(map(int, input().split()))\n\ncurr_val = 0\ncurr_val += init_term\nnum_to_write = 0\n\nif abs(init_term) > abs_max:\n\tprint(\"0\")\nelse:\n\tif init_term == 0:\n\t\tif init_term in bad_list:\n\t\t\tprint(\"0\")\n\t\telse:\n\t\t\tprint(\"inf\") # minimum abs_max can be is 1.\n\telse:\n\t\tif ratio == 1:\n\t\t\tif (curr_val * ratio in bad_list):\n\t\t\t\tprint(\"0\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\n\t\telif ratio == 0:\n\t\t\tif (0 in bad_list and init_term in bad_list):\n\t\t\t\tprint(\"0\")\n\t\t\telif 0 in bad_list:\n\t\t\t\tprint(\"1\")\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\n\t\telif ratio == -1:\n\t\t\tif (init_term in bad_list and -init_term in bad_list):\n\t\t\t\tprint(\"0\")\n\t\t\n\t\t\telse:\n\t\t\t\tprint(\"inf\")\n\t\n\t\telse:\n\t\t\twhile (abs(curr_val) <= abs_max):\n\t\t\t\tif curr_val not in bad_list:\n\t\t\t\t\tnum_to_write += 1\n\t\t\t\tcurr_val *= ratio\n\n\t\t\tprint(num_to_write)\n\n", "B, Q, L, M = list(map( int, input().split() ))\nA = set( map( int, input().split() ) )\nans = 0\nfor _ in range( 100 ):\n  if abs( B ) > L:\n    break\n  if B not in A:\n    ans += 1\n  B *= Q\nprint( ans if ans < 32 else \"inf\" )\n", "b, q, l, m = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nif abs(b) > l:\n    c = 0\nelif b == 0:\n    if 0 in a: c = 0\n    else: c = \"inf\"\nelif q == 1:\n    if b in a: c = 0\n    else: c = \"inf\"\nelif q == -1:\n    if b in a and -b in a: c = 0\n    else: c = \"inf\"\nelif q == 0:\n    if 0 not in a: c = \"inf\"\n    elif b in a: c = 0\n    else: c = 1\nelse:\n    c = 0\n    while abs(b) <= l:\n        if b not in a: c += 1\n        b *= q\nprint(c)", "b, q, l, m = [int(x) for x in input().split()]\nseq = [int(x) for x in input().split()]\n\nwyn = 0\nwhile abs(b) <= l:\n    if b == 0 or q == 0:\n        if 0 not in seq:\n            print(\"inf\")\n        elif b != 0 and b not in seq:\n            print(1)\n        elif b == 0 or b !=0 and b in seq:\n            print(0)\n        return\n\n    if q == 1:\n        if b in seq:\n            print(0)\n        else:\n            print(\"inf\")\n        return\n\n    if q == -1:\n        if b in seq and b*-1 in seq:\n            print(0)\n        else:\n            print(\"inf\")\n        return\n\n    if b not in seq:\n        wyn += 1\n    b *= q\nprint(wyn)\n"]