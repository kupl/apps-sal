["def testcase():\n\n    n, x = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    brr = list(map(int, input().split()))\n    arr.sort()\n    brr.sort(reverse=True)\n    for i in range(n):\n        if arr[i] + brr[i] > x:\n            print('No')\n            return\n    print('Yes')\n    return\n\n\nimport sys, os\nif os.path.exists('input.txt'):\n    sys.stdin = open('input.txt', 'r')\nsys.setrecursionlimit(10 ** 5)\nt = int(input())\nfor _ in range(t - 1):\n    testcase()\n    input()\ntestcase()", "import sys\nimport itertools as it\nimport math as mt\nimport bisect as bi\nimport collections as cc\nI=lambda:list(map(int,input().split()))\nfor tc in range(int(input())):\n    n,x=I()\n    a=I()\n    b=I()\n    a.sort()\n    b.sort(reverse=True)\n    tf=1\n    for i in range(n):\n        if a[i]+b[i]>x:\n            tf=0\n    if tf:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    try:\n        input()\n    except:\n        pass\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn,x = MI()\n\ta = LI()\n\tb = LI()\n\ta.sort()\n\tboo = True\n\tb.sort(reverse=True)\n\tfor i in range(n):\n\t\tif a[i]+b[i]>x:\n\t\t\tboo = False\n\t\t\tbreak\n\tprint(\"Yes\" if boo else \"No\")\n\tif q!=t-1:\n\t\ta = input()", "# map(int, input().split())\ndef main():\n    n, x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    a.sort()\n    b.sort()\n    b.reverse()\n    t = True\n    for i in range(n):\n        if a[i] + b[i] > x:\n            t = False\n            break\n    if t:\n        print('Yes')\n    else:\n        print('No')\n    if wewq != rw - 1:\n        input()\nrw = int(input())\nfor wewq in range(rw):\n    main()\n"]