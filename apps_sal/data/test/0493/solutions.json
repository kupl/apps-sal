["n = int(input())\na = input().strip()\nnextl = [-1] * n\nlastr = [-1] * n\nll = -1\nfor i in range(n):\n    if a[i] == \"R\":\n        ll = i\n    if a[i] == \"L\":\n        ll = -1\n    lastr[i] = ll\nnl = -1\nfor i in range(n - 1, -1, -1):\n    if a[i] == \"L\":\n        nl = i\n    if a[i] == \"R\":\n        nl = -1\n    nextl[i] = nl\nans = 0\n#print(lastr)\n#print(nextl)\nfor i in range(n):\n    if nextl[i] == lastr[i] == -1:\n        ans += 1\n    if nextl[i] == -1 or lastr[i] == -1:\n        continue\n    d1 = nextl[i] - i\n    d2 = i - lastr[i]\n    if d1 == d2:\n        ans += 1\nprint(ans)", "\nn = int(input())\ns = input().strip()\n\nr = -1\nl = -1\ncb = 0\nres = 0\n\nfor i in range(len(s)):\n    if s[i] == \".\":\n        cb += 1\n    elif s[i] == \"L\":            \n        if r > -1:\n            if cb % 2 == 1:\n                res += 1\n            cb = 0\n        else:\n            cb = 0\n        r = -1\n    else:\n        if r > -1:\n            cb = 0\n            r = i\n        else:        \n            r = i\n            res += cb\n            cb = 0\n        \nif r == -1:\n    res += cb\n        \nprint(res)\n\n", "def num_standing(s):\n    ret = 0\n    l = [i for i, x in enumerate(s) if x==\"L\"]\n    r = [i for i, x in enumerate(s) if x==\"R\"]\n    for i in range(len(l)):\n        if l[i]%2 == r[i]%2: ret += 1\n    for i in range(1,len(r)):\n        ret += r[i]-l[i-1]-1\n    return ret\n    \n\nn = int(input())\ns = input()\n\nL_i = [i for i, x in enumerate(s) if x==\"L\"]\nR_i = [i for i, x in enumerate(s) if x==\"R\"]\n\nif len(L_i)==0 and len(R_i)==0:\n    print(n)\nelif len(L_i)==0:\n    print(R_i[0])\nelif len(R_i)==0:\n    print(n-L_i[0]-1)\nelse:\n    standing = 0\n    #there are both L and R\n    if R_i[0]<L_i[0]:\n        # R comes first\n        standing += R_i[0]\n        if R_i[-1]>L_i[-1]: standing += R_i[-1]-L_i[-1]-1\n        else: standing += n-L_i[-1]-1\n        standing += num_standing(s[R_i[0]:L_i[-1]+1])\n\n    else:\n        # L comes first\n        standing += R_i[0]-L_i[0]-1\n        if R_i[-1]>L_i[-1]: standing += R_i[-1]-L_i[-1]-1\n        else: standing += n-L_i[-1]-1\n        standing += num_standing(s[R_i[0]:L_i[-1]+1])\n        if len(L_i)==1 and len(R_i)==1: standing//=2\n    print(standing)\n", "n=int(input())\ns=input()\nlast = ''\nlasti = -1\ncount=0\nfor i,v in enumerate(s):\n    if v == 'R' and lasti == -1:\n       count += i\n       last = 'R'\n       lasti = i\n    elif v=='L' and lasti == -1:\n        last = 'L'\n        lasti = i\n    elif last=='L' and v=='R':\n        count += i-lasti-1\n        last = 'R'\n        lasti = i\n    elif last == 'R' and v == 'L':\n        count += 0 if (i+lasti)%2 > 0  else 1\n        last = 'L'\n        lasti = i\n\nif last == 'L':\n    count += (n-1)-lasti\nif lasti == -1:\n    count = n\nprint(count)\n\n", "a = []\nn = int(input())\na = input().strip()\ncnt = 0\nl = -1\nr = -1\nfor i in range(n):\n    if a[i] == '.':\n        if l == -1 and r == -1:\n            cnt += 1\n    if a[i] == 'L':\n        if r != -1:\n            l = i\n            cnt += (l - r + 1) % 2\n        else:\n            cnt -= i\n            l = i\n    if a[i] == 'R':\n        if l != -1:\n            r = i\n            cnt += r - l - 1\n        else:\n            r = i\nif l > r:\n    cnt += n - l - 1\nprint(cnt)\n            \n        \n", "n = int(input())\ns = input()\nr = [0]*n\nl = [0]*n\nindex = -1\nfor i in range(0, n):\n    if s[i]=='.':\n        r[i] = index\n    elif s[i]=='R':\n        index = i\n        r[i] = 0\n    elif s[i]=='L':\n        r[i] = -1\n        index = -1\nindex = -1\nresult = 0\nfor i in range(n-1, -1, -1):\n    if s[i]=='.':\n        l[i] = index\n    elif s[i]=='L':\n        index = i\n        l[i] = 0\n    elif s[i]=='R':\n        l[i] = -1\n        index = -1\n    #print('i='+str(i)+' l='+str(l[i])+' r='+str(r[i]))\n    if (l[i]<0 and r[i]<0) or (l[i]>=0 and r[i]>=0 and l[i]-i==i-r[i]):\n        result+=1\nprint(result)\n", "def run():\n    n = int(input())\n    card = input()\n    cnt = 0\n    start = True\n    ans = 0\n    last = '.'\n    for i in range(n):\n        if card[i] == '.':\n            cnt += 1\n        elif card[i] == 'L':\n            if start == True:\n                start = False\n                cnt = 0\n            else:\n                ans += cnt%2\n                cnt = 0\n            last = 'L'    \n        else:\n            start = False\n            ans += cnt\n            cnt = 0\n            last = 'R'       \n    if last != 'R':\n        ans += cnt\n    print (ans)\n\n\nrun()\n", "input()\ns = input() + 'R'\nlast = 'L'\nix = -1\ncnt = 0\nfor i, v in enumerate(s):\n    if v == 'R':\n        if last == 'L':\n            cnt += i - ix - 1\n        ix = i\n        last = 'R'\n    elif v == 'L':\n        if last == 'R' and (i - ix) % 2 == 0:\n            cnt += 1\n        last = 'L'\n        ix = i\nprint(cnt)", "import re\ninput()\nds = \"L\"+input()+\"R\"\nres = len(re.findall(\"R(?:\\.\\.)*\\.L\", ds)) + sum([len(s)-2 for s in re.findall(\"L\\.*R\", ds)])\nprint(res)", "n=int(input())\na=input()\ndef work(a,b):\n    l=[-1]*n\n    for i in range(0,n):\n        if a[i]=='.':\n            l[i]=l[i-1]\n        elif a[i]!=b:\n            l[i]=-1\n        else:\n            l[i]=i\n    return l\nl=work(a,'R')\nr=( work(a[::-1],'L') )[::-1]\nprint(sum( ( l[i]==-1 and r[i]==-1 ) or (l[i]!=-1 and r[i]!=-1 and n-r[i]-1+l[i]==2*i) and a[i]=='.' for i in range(0,n)))\n", "n = int(input())\ns = input()\ns = list(s)\nv = 0\nwhile(True):\n    lExits = False\n    rExits = False\n    if ('L' in s):\n        l = s.index('L')\n        lExits = True\n    if ('R' in s):\n        r = s.index('R')\n        rExits = True\n    if (lExits == False and rExits == False):\n        break\n    if (lExits == True and rExits == False):\n        for i in range(l+1):\n            s[i] = 'F'\n        break\n    if (lExits == False and rExits == True):\n        for i in range(r,n):\n            s[i] = 'F'\n        break\n    if (lExits == True and rExits == True):\n        if (l < r):\n            for i in range(l+1):\n                s[i] = 'F'\n        else:\n            for i in range(r,l+1):\n                s[i] = 'F'\n            if ((l - r) % 2 == 0):\n                s[r] = '.'\nc = 0\nfor i in s:\n    if (i == '.'):\n        c += 1\nprint(c)\n    \n", "n = int(input())\ns = k = 0\nfor i, x in enumerate(input(), 1):\n    if x == 'R': k = i\n    elif x == 'L':\n        if k: s += (k + i + 1) % 2\n        else: s = 0\n        k = 0\n    elif not k: s += 1\nprint(s)", "n = int(input())\ns = list(input())\ncount = 0\nl, r = -1, 0\n\nwhile True:\n    if l == -1:\n        if 'R' in s:\n            r = s.index('R')\n            if 'L' in s[:r]:\n                l = s.index('L')\n                count += r - l - 1\n            else:\n                count += r\n            l = r\n        elif 'L' in s:\n            count = n - s.index('L') - 1\n            break\n        else:\n            count = n\n            break\n    else:\n        if s[l] == 'R':\n            if 'L' in s[l:]:\n                r += s[l:].index('L')\n                if (r - l - 1) & 1:\n                    count += 1\n                l = r\n            else:\n                break\n        else:\n            if 'R' in s[l:]:\n                r += s[l:].index('R')\n                count += r - l - 1\n                l = r\n            else:\n                count += n - l -1\n                break\n\nprint(count)\n", "n = int(input())\ns = input()\nc = n\nk = 0\nl, r = 0, 0\nfor i in range(n):\n  if s[i] == '.':\n    continue\n  if s[i] == 'L':\n    k -= 1\n    l = i\n  else:\n    k += 1\n    r = i\n  if k < 0:\n    c -= i + 1\n    k = 0\n  elif k == 0:\n    c -= (l - r + 1) - (l - r + 1) % 2\nif k > 0:\n  c -= n - r\nprint(c)", "n = int(input())\ns = input()\nc = k = l = r = 0\nfor i in range(n):\n  if s[i] == '.':\n    if k == 0:\n      c += 1\n  else:\n    if s[i] == 'L':\n      k -= 1\n      l = i\n    else:\n      k += 1\n      r = i\n    if k < 0:\n      k = 0\n      c = 0\n    elif k == 0:\n      c += (l - r + 1) % 2\nprint(c)", "n = int(input())\ns = input()\nc = k = l = r = 0\nfor i in range(n):\n  if s[i] == '.':\n    if k == 0:\n      c += 1\n  else:\n    if s[i] == 'L':\n      k -= 1\n      l = i\n    else:\n      k += 1\n      r = i\n    if k < 0:\n      k = c = 0\n    elif k == 0:\n      c += (l - r + 1) % 2\nprint(c)", "import sys\nn = int(input())\ns = input()\na = []\nfor i in range(n):\n    if s[i] == 'L':\n        a.append(['L', i])\n    if s[i] == 'R':\n        a.append(['R', i])\ni = 0\nj = len(a) - 1\n\nif len(a) == 0:\n    print(n)\n    return\nif a[0][0] == 'L':\n    A = a[0][1]\n    i = 1\nelse:\n    A = -1\nif a[len(a) - 1][0] == 'R':\n    j = len(a) - 2\n    D = a[-1][1]\nelse:\n    D = n\nans = 0\nif i > j:\n    B  = 1\n    C = 0\nelse:\n    B = a[i][1]\n    C = a[j][1]\nwhile i < j:\n    if (a[i][1] - a[i + 1][1]) % 2 == 0:\n        ans += 1\n    if i != j - 1:\n        ans += (a[i + 2][1] - a[i + 1][1] - 1)\n    i += 2\nif B > C:\n    ans += (D - A - 1)\nelse:\n    ans += (B - A - 1 + D - C - 1)\nprint(ans)", "n = int(input())\ns = input()\ncnt = 0\nnum = 0\nchk = False\n\nfor i in range(n):\n\tif chk and s[i] == 'L':\n\t\tif cnt % 2 == 1:\n\t\t\tnum += 1\n\t\tchk = False \n\t\tcontinue\n\tif s[i] == 'R':\n\t\tchk = True \n\t\tcnt = 0\n\t\tcontinue  \n\tif chk: \n\t\tcnt += 1\n\t\tcontinue\n\tif s[i] == 'L':\n\t\tnum = 0\n\telse: \n\t\tnum += 1 \nprint(num)\n", "import sys\nn = int(input())\ns = str(input())\nans = num = 0\nl = r = False\nk = 0\nj = 0\nwhile j < n:\n    if s[j] == 'R' or s[j] == 'L':\n        break\n    else:\n        j += 1\nif j == n:\n    print(n)\n    return\nfor i in range(n):\n    if s[i] == '.' and l is False:\n        num += 1\n\n    if s[i] == 'L' and r is False:\n        num = 0\n        l = True\n    if s[i] == '.' and l is True:\n        ans += 1\n    if s[i] == 'R' and l is True:\n        k = i\n        l = False\n        r = True\n    if s[i] == 'R' and l is False:\n        ans += num\n        num = 0\n        r = True\n    if s[i] == 'L' and r is True:\n        if num % 2 == 1:\n            ans += 1\n        num = 0\n        l = True\n        f = False\n\nprint(ans)", "n = int(input())\ns = input()\nbalance = 0\ni = 0\ncalc = [1] * n\nfirstr, lastl = -1, -1\nwhile i < n:\n    if s[i] == 'R':\n        balance += 1\n        if firstr == -1:\n            firstr = i\n        i += 1\n    elif s[i] == 'L':\n        balance -= 1\n        lastl = i\n        i += 1\n    else:\n        i += 1\n        continue\n    if balance == 0:\n        if (firstr - lastl) % 2 == 0:\n            for j in range(firstr, lastl + 1):\n                calc[j] = 0\n            calc[(firstr + lastl) // 2] = 1\n        else:\n            for j in range(firstr, lastl + 1):\n                calc[j] = 0\n        firstr = -1\n        lastl = -1\n    elif balance == -1:\n        calc = [0] * i + calc[i:]\n        balance = 0\nif balance != 0:\n    calc = calc[:firstr] + [0] * (n - firstr)\nprint(sum(calc))", "n = int(input())\nst = list(input())\nans = 0\ni = 0\nwhile st and i < len(st):\n    if st[i] == 'L':\n        n -= i + 1\n        st = st[i + 1:]\n        i = -1\n    elif st[i] == 'R':\n        n -= 1\n        j = i + 1\n        while j < len(st):\n            if st[j] == 'L':\n                n -= j - i\n                if (j - i) % 2 == 0:\n                    n += 1\n                st = st[j + 1:]\n                i = -1\n                break\n            if st[j] == 'R':\n                n -= j - i - 1\n                st = st[j:]\n                i = -1\n                break\n            j += 1\n        else:\n            n -= j - i - 1\n    i += 1\nprint(n)", "n, prev, prch, val = int(input()), -1, 'L', 0\nfor i, d in enumerate(input()):\n    if d == 'L':\n        if prev != -1 and (i - prev) % 2 == 0:\n            val += 1\n        prev, prch = i, d\n    elif d == 'R':\n        val += i - prev - 1\n        prev, prch = i, d\nif prch == 'L':\n    val += n - prev - 1\nprint(val)\n", "n = int(input())\ns = input().split('L')\nans = 0\nif 'R' not in s[0]:\n\tif len(s) != 1:\n\t\ts = s[1:]\nif 'R' in s[-1]:\n\ts[-1] = s[-1][:s[-1].index('R')]\nfor sub in s:\n\tif 'R' not in sub:\n\t\tans += len(sub)\n\telse:\n\t\tidx = sub.index('R')\n\t\tans += idx\n\t\tans += (len(sub) - idx - 1) % 2\nprint(ans)\n", "def main():\n    input()\n    res = r = 0\n    for i, x in enumerate(input(), 1):\n        if x == 'R':\n            r = i\n        elif x == 'L':\n            if r:\n                res += (r + i - 1) & 1\n            else:\n                res = 0\n            r = 0\n        elif not r:\n            res += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    input()\n    res = r = 0\n    for i, x in enumerate(input(), 1):\n        if x == 'R':\n            r = i\n        elif x == 'L':\n            if r:\n                res += (r + i - 1) & 1\n            else:\n                res = 0\n            r = 0\n        elif not r:\n            res += 1\n    print(res)\n\n\nmain()"]