["def build_fac():\n   nonlocal mod\n   fac = [1] * int(3e5 + 1)\n   for i in range(1, int(3e5)):\n      fac[i] = i*fac[i-1] % mod\n   return fac\n\ndef inv(x):\n   nonlocal mod\n   return pow(x, mod-2, mod)\n\ndef ncr(n, r):\n   nonlocal fac\n   if n < 0 or n < r: return 0\n   return fac[n]*inv(fac[r])*inv(fac[n-r]) % mod\n\ndef cf(f, w, h):\n   nonlocal mod\n   if w == 0: return 1\n   rs = 0\n   for k in range(1, min(w//(h+1),f+1)+1):\n      rs += ncr(f+1, k) * ncr(w-k*h-1, k-1) % mod\n      rs %= mod\n   return rs\n\nf, w, h = map(int,input().split(' '))\nmod = int(1e9 + 7)\n\nfac = build_fac()\ncnt = cf(f, w, h)\nrs = cnt*inv(ncr(f+w, w)) % mod\n\nprint(rs)", "import sys\ndef factorial():\n    nonlocal mod\n    fac = [1] * int(3e5 + 1)\n    for i in range(1, int(3e5)):\n        fac[i] = i*fac[i-1] % mod\n    return fac\ndef inverse(x):\n    nonlocal mod\n    return pow(x, mod-2, mod)\ndef C(n, r):\n    nonlocal fac\n    if n < 0 or n < r:\n        return 0\n    return fac[n]*inverse(fac[r])*inverse(fac[n-r]) % mod\ndef calc(f, w, h):\n    nonlocal mod\n    if w == 0:\n        return 1\n    ans = 0\n    for k in range(1, min(w//(h+1),f+1)+1):\n        ans += C(f+1, k) * C(w-k*h-1, k-1) % mod\n        ans %= mod\n    return ans\nf, w, h = list(map(int,sys.stdin.readline().split(' ')))\nmod = int(1e9 + 7)\nfac = factorial()\ncnt = calc(f, w, h)\nsys.stdout.write(str(cnt*inverse(C(f+w, w)) % mod))\n\n"]