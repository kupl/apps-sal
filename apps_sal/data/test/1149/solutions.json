["import fractions\ncount = 0\na = int(input())\n#n\n\nlistx = list(map(int, input().split(' ')))\nlisty = list(map(int, input().split(' ')))\nlistx.remove(listx[0])\nlisty.remove(listy[0])\nlistx = set(listx)\nlisty = set(listy)\nlistz = listx.union(listy)\nlistz=list(listz)\nlistw = [i+1 for i in range(a)]\nif listz == listw:\n    print(\"I become the guy.\")\n\nelse:\n    print(\"Oh, my keyboard!\")\n", "n = int(input())\nb = [0 for i in range(n)]\nnums = list(map(int, input().split()))\nnums2 = list(map(int, input().split()))\nfor i in range(1, len(nums)):\n    b[nums[i] - 1] = 1\nfor i in range(1, len(nums2)):\n    b[nums2[i] - 1] = 1\nif sum(b) == n:\n    print(\"I become the guy.\")\nelse:\n    print(\"Oh, my keyboard!\")", "n = int(input())\na1 = [int(x) for x in input().split()]\na2 = [int(x) for x in input().split()]\n\nif set(a1[1:]) | set(a2[1:])  == set(range(1,n+1)):\n\tprint('I become the guy.')\nelse:\n\tprint('Oh, my keyboard!')", "__author__ = 'sonerik'\n\nimport sys\n\ninp = sys.stdin\n# inp = open(\"a.txt\")\n\nn = int(inp.readline().strip())\n\nx = list(map(int, inp.readline().strip().split()))[1:]\ny = list(map(int, inp.readline().strip().split()))[1:]\n\nx_set = set(x)\ny_set = set(y)\nall_set = set(range(1, n+1))\n\nnew_set = x_set.union(y_set)\n\nif new_set == all_set:\n    print(\"I become the guy.\")\nelse:\n    print(\"Oh, my keyboard!\")", "n=int(input())\np=list(int(x) for x in input().split())[1:]\nq=list(int(x) for x in input().split())[1:]\nk=0\n#print (p,q)\nfor i in range(1,n+1):\n    if (i in p) or (i in q):\n        k+=1\nif k==n:\n    print(\"I become the guy.\")\nelse:\n    print(\"Oh, my keyboard!\")\n", "n = int(input())\np = set(tuple(map(int, input().split()))[1:])\nq = set(tuple(map(int, input().split()))[1:])\na = p | q\nif len(a) == n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n", "def main():\n    n = int(input())\n    p, *pi = list(map(int, input().split()))\n    q, *qi = list(map(int, input().split()))\n\n    s = set(pi)\n    s.update(qi)\n    if len(s) != n:\n        print('Oh, my keyboard!')\n    else:\n        print('I become the guy.')\n\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\np = a[0]\nps = a[1:]\na = list(map(int,input().split()))\nq = a[0]\nqs = a[1:]\ns = set(ps) | set(qs)\n\nif len(s) == n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')", "n = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\nd = set()\nfor i in range(1, x[0] + 1):\n    d.add(x[i])\nfor i in range(1, y[0] + 1):\n    d.add(y[i])\nres = True\nfor i in range(1, n + 1):\n    if not i in d:\n        res = False\nif res:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')", "arr = [False] * (int(input()))\nfor j in range(2):\n    for i in list(map(int, input().split()))[1:]:\n        arr[i - 1] = True\nif False in arr:\n    print('Oh, my keyboard!')\nelse:\n    print('I become the guy.')", "n = int(input())\np = [int(i) for i in input(). split()]\nq = [int(i) for i in input(). split()]\nk = len(p) + len(q) - 2\nfor i in range(1, len(p)):\n    for j in range(1, len(q)):\n        if p[i] == q[j]:\n            k -= 1\nif k == n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')", "n = int(input())\nlittleX = list(map(int, input().split()))\nlittleY = list(map(int, input().split()))\n\ngame = littleX[1:] + littleY[1:]\ngame = set(game)\n\nif len(game) >= n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n", "nstr=input()\nn=int(nstr)\npstr=input()\naa=pstr.split(' ')\na=aa[1:]\nqstr=input()\nbb=qstr.split(' ')\nb=bb[1:]\nfor i in a:\n    i=int(i)\nfor i in b:\n    i=int(i)\nf=0\nfor i in range(1,n+1):\n    if((str(i) in a) or (str(i) in b)):\n        continue\n    else:\n        f=1\n        print(\"Oh, my keyboard!\")\n        break\nif(f==0):\n    \n    print(\"I become the guy.\")\n", "n = int(input())\nArr = list(range(1,n+1))\nX = list(map(int,input().split()))\nY = list(map(int,input().split()))\n\nX = X[1:]\nY = Y[1:]\nfor x in X:\n\tArr.remove(x)\nfor y in Y:\n\tif(y in Arr):\n\t\tArr.remove(y) \nif not Arr:\n\tprint('I become the guy.')\nelse:\n\tprint('Oh, my keyboard!')", "#!/usr/bin/env python\n\nn = int(input())\np_l = list(map(int, input().split()))\nq_l = list(map(int, input().split()))\np = p_l[0]\nq = q_l[0]\np_l = p_l[1:]\nq_l = q_l[1:]\nll = set(p_l + q_l)\nsucess = False\n\nn_sum = (n * (n+1)) // 2\nif n_sum == sum(ll):\n\tprint(\"I become the guy.\")\nelse:\n\tprint(\"Oh, my keyboard!\")", "a=int(input())\nsete=set()\nreg=input().split()\nk=int(reg[0])\nfor t in range(0,k):\n sete.add(int(reg[t+1]))\nre=input().split()\nl=int(re[0])\nfor s in range(0,l):\n sete.add(int(re[s+1]))\nif len(sete)==a:\n print(\"I become the guy.\")\nelse:\n print(\"Oh, my keyboard!\")\n\n", "n = int(input())\n\nA = set(list(map(int, input().split()))[1:])\nB = set(list(map(int, input().split()))[1:])\n\nif list(A | B) == list(range(1, n + 1)):\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')", "n = int(input())\ns = set()\nfor i in range(2):\n    p = [int(i) for i in input().split()]\n    p.pop(0)\n    s.update(set(p))\nprint('I become the guy.' if s == set(range(1, n + 1)) else 'Oh, my keyboard!')\n", "n = int(input())\na = [0] * (n + 1)\nf = 1\nx = list(map(int, input().split()))\nfor i in range(1, len(x)):\n    a[x[i]] = 1\ny = list(map(int, input().split()))\nfor i in range(1, len(y)):\n    a[y[i]] = 1\nfor i in range(1, n + 1):\n    if not a[i]:\n        f = 0\nprint('I become the guy.' if f else 'Oh, my keyboard!')\n", "n = int(input())\nx = set(map(int, input().split()[1:]))\ny = set(map(int, input().split()[1:]))\nfor i in range(1, n + 1):\n    if i not in x and i not in y:\n        print('Oh, my keyboard!')\n        break\nelse:\n    print('I become the guy.')\n", "import math\nimport time\n\nn = int(input())\na1 = list(map(int, input().split(' ')))\na2 = list(map(int, input().split(' ')))\n\na1.remove(a1[0])\na2.remove(a2[0])\n\nfor i in range(n):\n    index = i+1\n    found = a1.count(index)+a2.count(index)\n    if found == 0:\n        print(\"Oh, my keyboard!\")\n        return\n\nprint(\"I become the guy.\")", "n = int(input())\nnum = [int(x) for x in input().split(\" \")]\nnum1 = [int(x) for x in input().split(\" \")]\nnum.pop(0)\nnum1.pop(0)\nlist1 = num1+num\nlist2 = []\ns = 0\nfor i in range(1,n+1):\n    if i in list1:\n        s = s+1\nif s>=n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n", "n = int(input())\nnum = [int(x) for x in input().split(\" \")]\nnum1 = [int(x) for x in input().split(\" \")]\nnum.pop(0)\nnum1.pop(0)\nlist1 = num1+num\nlist2 = []\ns = 0\nfor i in range(1,n+1):\n    if i in list1:\n        s = s+1\nif s>=n:\n    print('I become the guy.')\nelse:\n    print('Oh, my keyboard!')\n", "n = int(input())\ns = input().strip().split()\nw = input().strip().split()\np = int(s[0])\nq = int(w[0])\nif p+q< n:\n    print( \"Oh, my keyboard!\")\nelse:\n    d = {}\n    for i in s[1:]:\n        d[int(i)] = 1\n    ack = p\n    for i in w[1:]:\n        try:\n            d[int(i)]+=1\n        except KeyError:\n            d[int(i)]=1\n            ack+=1\n    if ack < n:\n        print( \"Oh, my keyboard!\")\n    else:\n        print(\"I become the guy.\")\n    \n", "n=int(input())\nxlevels=list()\nylevels=list()\nxlevels[:]=list(map(int,input().split(' ')))\nylevels[:]=list(map(int,input().split(' ')))\nxlevels=xlevels[1:len(xlevels)]\nylevels=ylevels[1:len(ylevels)]\nlevels=list()\nlevels=set( xlevels[:] ) | set( ylevels[:] )\nif len(levels)==n: print('I become the guy.')\nelse: print('Oh, my keyboard!')\n"]