["t, sx, sy, ex, ey = map(int, input().split())\nd = {'W':max(0, sx - ex), 'E':max(0, ex - sx), 'N':max(0, ey - sy), 'S':max(0, sy - ey)}\nfor (i, c) in enumerate(input(), 1):\n  if d[c] > 0:\n    d[c] -= 1\n  if any(d.values()) == False:\n    print(i)\n    break\nelse:\n  print(-1)", "i = 0\nt, sx, sy, ex, ey = list(map(int, input().split()))\nsecond_string = input()\nwhile i < t:\n    if second_string[i] == 'E':\n        if sx < ex: sx += 1\n    elif second_string[i] == 'W':\n        if sx > ex: sx -= 1\n    elif second_string[i] == 'N':\n        if sy < ey: sy += 1\n    else:\n        if sy > ey: sy -= 1\n    i += 1\n    if (sy == ey) and (sx == ex):\n        print(i)\n        break\n    if i == t:\n        print(-1)\n", "i=0\nt, sx, sy, ex, ey = list(map(int, input().split()))\nsecond_string = input()\nwhile (sy != ey) or (sx != ex):\n    if i == t: break\n    if second_string[i] == 'E':\n        if sx < ex: sx += 1\n    elif second_string[i] == 'W':\n        if sx > ex: sx -= 1\n    elif second_string[i] == 'N':\n        if sy < ey: sy += 1\n    elif second_string[i] == 'S':\n        if sy > ey: sy -= 1\n    i += 1\nif (sy == ey and sx == ex) is False: print(-1)\nelse: print(i)\n\n\n", "def main():\n    ind = {'E': (1, 0), 'S': (0, -1), 'W': (-1, 0), 'N': (0, 1), '#': (0, 0)}\n\n    t, sx, sy, tx, ty = list(map(int, input().split()))\n    s = str(input())\n\n\n    if sx == tx and sy == ty:\n        print('0')\n        return\n\n    for i in range(0, t):\n        if sx != tx and abs(sx+ind[s[i]][0]-tx) < abs(sx-tx): sx += ind[s[i]][0]\n        if sy != ty and abs(sy+ind[s[i]][1]-ty) < abs(sy-ty): sy += ind[s[i]][1]\n        if sx == tx and sy == ty:\n            print(i+1)\n            return\n        \n    print('-1')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t, x, y, u, v = map(int, input().split())\n\ndx = u - x\ndy = v - y\n\np = input()\ne, s, w, n = p.count('E'), p.count('S'), p.count('W'), p.count('N')\n\nif - w > dx or e < dx or - s > dy or n < dy: print(-1)\nelse:\n    for i in range(len(p)):\n        if p[i] == 'E':\n            if dx > 0: dx -= 1\n        elif p[i] == 'S':\n            if dy < 0: dy += 1\n        elif p[i] == 'W':\n            if dx < 0: dx += 1\n        else:\n            if dy > 0: dy -= 1\n        if dx == 0 and dy == 0:\n            print(i + 1)\n            break", "t,sx,sy,ex,ey=tuple(map(int,input().split()))\ndx,dy=ex-sx,ey-sy\nop={'W':0,'E':0,'S':0,'N':0}\nif dx<0:\n    op['W']=-dx\nif dx>0:\n     op['E']=dx\nif dy<0:\n    op['S']=-dy\nif dy>0:\n    op['N']=dy\nif (dx,dy)==(0,0):\n    print(0)\n    return\nnow=0\nfor wind in input():\n    if op[wind]>0:\n        op[wind]-=1\n    now+=1\n    if sum(op.values())==0:\n        print(now)\n        break\nelse:\n    print(-1)", "t, sx, sy, ex, ey = map(int, input().split())\ndx, dy = 'E' if ex - sx >= 0 else 'W', 'N' if ey - sy > 0 else 'S'\nmx, my = abs(ex - sx), abs(ey - sy)\nfor i, ch in enumerate(input()):\n    if ch == dx and mx > 0:\n        mx -= 1\n    elif ch == dy and my > 0:\n        my -= 1\n    if mx == 0 and my == 0:\n        print(i + 1)\n        return\nprint(-1)", "d = {'E': (1, 0), 'S': (0, -1), 'W': (-1, 0), 'N': (0, 1)}\nt, sx, sy, ex, ey = [int(x) for x in input().split()]\ns = input()\nfor i in range(t):\n\tc = s[i]\n\tdx, dy = d[c]\n\tif abs(sx + dx - ex) <= abs(sx - ex) and abs(sy + dy - ey) <= abs(sy - ey):\n\t\tsx += dx\n\t\tsy += dy\n\tif sx == ex and sy == ey:\n\t\tprint(i + 1)\n\t\treturn\nprint(-1)\n", "t, sx, sy, ex, ey = [int(x) for x in input().split(' ')]\ni = input()\n\nx = ex - sx\ny = ey - sy\nk = 0\nfor j in i:\n   if y > 0:\n      if j == 'N':\n         y -= 1\n   elif y < 0:\n      if j == 'S':\n         y += 1\n\n   if x > 0:\n      if j == 'E':\n         x -= 1\n   elif x < 0:\n      if j == 'W':\n         x += 1\n\n   k += 1\n   if x == 0 and y == 0: break\n\nprint(k if x == 0 and y == 0 else -1)", "N,sx,sy,dx,dy = tuple(int(i) for i in input().split())\nA = input()\nanswered = False\nfor i in range(len(A)):\n\tif(A[i]==\"N\" and sy<dy):\n\t\tsy+=1\n\telif(A[i]==\"S\" and sy>dy):\n\t\tsy-=1\n\telif(A[i]==\"E\" and sx<dx):\n\t\tsx+=1\n\telif(A[i]==\"W\" and sx>dx):\n\t\tsx-=1\n\t\n\tif(sx==dx and sy==dy):\n\t\tprint(i+1)\n\t\tanswered = True\n\t\tbreak\n\nif(not answered):\n\tprint(\"-1\")", "from functools import reduce\nfrom operator import *\nfrom math import *\nfrom sys import *\nfrom string import *\nfrom collections import *\nsetrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\n#################################################\nt,sx,sy,ex,ey=RI()\nneeded={c:0 for c in 'NSEW'}\nif sx<ex:\n    needed['E']=ex-sx\nelse:\n    needed['W']=sx-ex\nif sy<ey:\n    needed['N']=ey-sy\nelse:\n    needed['S']=sy-ey\ncnt={c:0 for c in 'NSEW'}\ns=RS()[0]\nfor i in range(t):\n    flag=1\n    if needed[s[i]]:\n        cnt[s[i]]+=1\n    for c in cnt:\n        if cnt[c]<needed[c]:\n            flag=0\n    if flag:\n        print(i+1)\n        return\nprint(-1)\n\n\n\n\n\n", "def main():\n    t, x, y, ex, ey = list(map(int, input().split()))\n    x -= ex\n    y -= ey\n    for i, c in enumerate(input()):\n        if x == 0 == y:\n            print(i)\n            return\n        if c == 'E':\n            if x < 0:\n                x += 1\n        elif c == 'W':\n            if x > 0:\n                x -= 1\n        elif c == 'N':\n            if y < 0:\n                y += 1\n        elif c == 'S':\n            if y > 0:\n                y -= 1\n    print(t if x == 0 == y else -1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from sys import stdin,stdout\n# stdin = open(\"/Users/seeva92/Workspace/Contests/1.txt\",\"r\")\n# stdout = open(\"/Users/seeva92/Workspace/Contests/2.txt\",\"w\")\nt,sx,sy,ex,ey = map(int,stdin.readline().split())\ndef main():\n\tnonlocal t,sx,sy,ex,ey\n\ts = stdin.readline()\n\tif sx == ex and sy == ey: \n\t\tstdout.write(\"0\")\n\t\treturn\n\tc = 0\n\tfor i in s:\n\t\tc+=1\n\t\tif i == 'S' and abs(ey - (sy-1)) < abs(ey - sy):\t\t\t\t\t\t\n\t\t\tsy-=1\n\t\telif i=='N' and abs(ey - (sy+1)) < abs(ey - sy):\t\t\t\n\t\t\tsy+=1\n\t\telif i=='E' and abs(ex - (sx+1)) < abs(ex - sx):\t\t\t\n\t\t\tsx+=1\n\t\telif i=='W' and abs(ex - (sx-1)) < abs(ex - sx):\t\t\t\n\t\t\tsx-=1\n\t\t# print(sx,sy)\n\t\tif c>t: break;\t\n\t\tif sx == ex and sy==ey: break\n\tif c<=t and sx==ex and sy==ey:\n\t\tstdout.write(str(c))\n\telse: stdout.write(\"-1\")\nmain()", "l1 = [int(i) for i in input().split()]\ns = [l1[1], l1[2]]\ne = [l1[3], l1[4]]\nwind = [c for c in input()]\n\nbeloved = ['W', 'N']\n\ndef sub(num1, num2):\n    return num1 - num2\n\ndef add(num1, num2):\n    return num1 + num2\nop = [sub, add]\n    \nif s[0] < e[0]:\n    beloved[0] = 'E'\n    op[0] = add\nif s[1] > e[1]:\n    beloved[1] = 'S'\n    op[1] = sub\n\n\n\ntime = 0\nfor w in wind:\n    if s[0] == e[0] and s[1] == e[1]:\n        print(time)\n        return\n\n    time += 1\n\n    for i in (0, 1):\n        if s[i] == e[i]:\n            continue\n\n        if w == beloved[i]:\n            s[i] = op[i](s[i], 1)\n    \nif s[0] == e[0] and s[1] == e[1]:\n        print(time)\n        return\nprint(-1)", "import math,sys\na = list(map(int,input().split()))\nb = list(input())\nif a[1] == a[3] and a[2] == a[4]:\n    print(0)\n    return\nflag = False\nc = 0\nfor i in range(len(b)):\n    c +=1\n    if b[i] == 'S':\n        if math.fabs(a[4]-(a[2]-1)) > math.fabs(a[4]-(a[2])):\n            continue\n        a[2] -= 1\n    if b[i] == 'E':\n        if math.fabs(a[3]-(a[1]+1)) > math.fabs(a[3]-(a[1])):\n            continue\n        a[1] += 1\n    if b[i] == 'W':\n        if math.fabs(a[3]-(a[1]-1)) > math.fabs(a[3]-(a[1])):\n            continue\n        a[1] -= 1\n    if b[i] == 'N':\n        if math.fabs(a[4]-(a[2]+1)) > math.fabs(a[4]-(a[2])):\n            continue\n        a[2] += 1\n    if a[1] == a[3] and a[2] == a[4]:\n        flag = True\n        break\n\n\nif flag :\n    print(c)\nelse:\n    print(-1)\n\n", "# python2 or 3\nimport sys, threading, os.path\nimport collections, heapq, math,bisect\nimport string\nfrom platform import python_version\nsys.setrecursionlimit(10**6)\nthreading.stack_size(2**27)\n\n\ndef main():\n    if os.path.exists('input.txt'):\n        input = open('input.txt', 'r')\n    else:\n        input = sys.stdin\n    #--------------------------------INPUT---------------------------------\n    t, x1,x2,y1,y2 = list(map(int, input.readline().split()))\n    T = t\n    dirs = list(str(input.readline().rstrip('\\n')))\n    for i in range(len(dirs)):\n        if t==0 or (x1 == y1 and x2==y2):\n            break\n        if dirs[i] == 'E':\n            if y1>x1:\n                x1+=1\n            t-=1\n        elif dirs[i] == 'S':\n            if x2>y2:\n                x2-=1\n            t-=1\n        elif dirs[i] == 'W':\n            if y1<x1:\n                x1-=1\n            t-=1\n        elif dirs[i] == 'N':\n            if x2<y2:\n                x2+=1\n            t-=1\n    if x1 == y1 and x2==y2:\n        output = T-t\n    else:\n        output= -1\n    #-------------------------------OUTPUT----------------------------------\n    if os.path.exists('output.txt'):\n        open('output.txt', 'w').writelines(str(output))\n    else:\n        sys.stdout.write(str(output))\n\n\ndef __starting_point():\n    main()\n#threading.Thread(target=main).start()\n\n\n__starting_point()", "t,sx,sy,ex,ey=map(int,input().split())\nw=input()\nn=len(w)\nw+=\" \"\nans=-1\ni=0\ndx=ex-sx\ndy=ey-sy\nif abs(dx)+abs(dy)>t:\n    pass\nelse:\n    while i<=t and i<n:\n        if dx==0 and dy==0:\n            ans=i\n            break\n        if dx>=0 and dy>=0:\n            if ((w[i]!=\"E\" and w[i]!=\"N\") or (dx==0 and w[i]==\"E\") or (dy==0 and w[i]==\"N\")) and i<n:\n                i+=1\n            if dx>0 and w[i]==\"E\" and i<n:\n                i+=1\n                dx-=1\n            if dy>0 and w[i]==\"N\"and i<n:\n                i+=1\n                dy-=1\n        elif dx>=0 and dy<=0:\n            if ((w[i]!=\"E\" and w[i]!=\"S\") or (dx==0 and w[i]==\"E\") or (dy==0 and w[i]==\"S\")) and i<n:\n                i+=1\n            if dx>0 and w[i]==\"E\" and i<n:\n                i+=1\n                dx-=1\n            if dy<0 and w[i]==\"S\" and i<n:\n                i+=1\n                dy+=1\n        elif dx<=0 and dy>=0:\n            if ((w[i]!=\"W\" and w[i]!=\"N\") or (dx==0 and w[i]==\"W\") or (dy==0 and w[i]==\"N\")) and i<n:\n                i+=1\n            if dx<0 and w[i]==\"W\" and i<n:\n                i+=1\n                dx+=1\n            if dy>0 and w[i]==\"N\" and i<n:\n                i+=1\n                dy-=1\n        elif dx<=0 and dy<=0:\n            if ((w[i]!=\"W\" and w[i]!=\"S\") or (dx==0 and w[i]==\"W\") or (dy==0 and w[i]==\"S\")) and i<n:\n                i+=1\n            if dx<0 and w[i]==\"W\" and i<n:\n                i+=1\n                dx+=1\n            if dy<0 and w[i]==\"S\" and i<n:\n                i+=1\n                dy+=1\nif dx==0 and dy==0:\n            ans=i\nprint(ans)  ", "t, sx, sy, ex, ey = map(int, input().split())\nd = {'W':max(0, sx - ex), 'E':max(0, ex - sx), 'N':max(0, ey - sy), 'S':max(0, sy - ey)}\nfor (i, c) in enumerate(input(), 1):\n  if d[c] > 0:\n    d[c] -= 1\n  if any(d.values()) == False:\n    print(i)\n    break\nelse:\n  print(-1)", "t,x,y,u,v = map(int,input().split())\ndic = {}\ndic['N'],dic['S'] = (v-y,0) if v>=y else (0,y-v)\ndic['E'],dic['W'] = (u-x,0) if u>=x else (0,x-u)\ninp = str(input())\nfor i in range(t):\n    dic[inp[i]]-=1\n    if dic['N']<1 and dic['S'] < 1 and dic['E'] < 1 and dic['W'] < 1:\n        print (i+1)\n        break\nelse:\n    print (-1)", "import sys\n\nt, sx, sy, ex, ey = list(map(int,input().split()))\n\ninp = input()\nmovu, movd, movf, movb,dontx, donty = 0, 0, 0, 0, 0, 0\n\nif sx < ex:\n    movf = True  \nelse:\n    movb = True \n\nif ex == sx : dontx = True \n\nif sy < ey:\n    movu = True  \nelse:\n    movd = True \n\nif ey == sy : donty = True\n\nt = 0  \nfor c in inp:\n    t = t + 1 \n    if c == 'S':\n        if donty:\n            continue \n        if movd:\n            sy -= 1 \n            if sy == ey: donty = True\n    elif c == 'E':\n        if dontx: continue \n        if movf:\n            sx += 1\n            if sx == ex: dontx = True \n    elif c == 'N':\n        if donty : continue \n        if movu:\n            sy += 1\n            if sy == ey: donty = True\n    elif c == 'W':\n        if dontx: continue \n        if movb:\n            sx -= 1\n            if sx == ex: dontx = True \n\n    if sx == ex and sy == ey:\n        print(t)\n        return\n\nprint(\"-1\")\n", "\ndef main():\n    (t, sx, sy, ex, ey) = list(map(int, input().split(' ')))\n    if sx == ex and sy == ey:\n        return 0\n    t = 0\n    for c in list(input()):\n        if sx == ex and sy == ey:\n            return t\n        if c == 'S':\n            if ey < sy:\n                sy -= 1\n        elif c == 'N':\n            if ey > sy:\n                sy += 1\n        elif c == 'E':\n            if ex > sx:\n                sx += 1\n        elif c == 'W':\n            if ex < sx:\n                sx -= 1\n        t += 1\n    if sx == ex and sy == ey:\n        return t\n    return -1\n\nprint(main())\n", "# cook your code here\nn,sx,sy,ex,ey = map(int,input().split(' '))\n\nreqx = ex - sx\nreqy = ey - sy\n\n# // print reqx\n\nstr = input()\n\nfor i in range(n):\n     if reqx<0:\n          if str[i] == 'W':\n               reqx+=1\n               \n     if reqy<0:\n          if str[i] == 'S':\n               reqy+=1\n               \n     if reqx>0:\n          if str[i] == 'E':\n               reqx-=1\n     if reqy>0:\n          if str[i] == 'N':\n               reqy-=1\n     if reqx==reqy and reqx == 0:\n          print(i+1)\n          return\nprint(-1)", "def main():\n    t,sx,sy,ex,ey = list(map(int, input().split()))\n    nlt = input()\n    lst = list(nlt)\n    cnt = 0\n    fl = False\n    for i in range(len(lst)):\n        if lst[i] == 'N' and sy < ey:\n            sy += 1\n        elif lst[i] == 'S' and sy > ey:\n            sy -= 1\n        elif lst[i] == 'E' and sx < ex:\n            sx += 1\n        elif lst[i] == 'W' and sx > ex:\n            sx -= 1\n        cnt += 1\n        if sx == ex and sy == ey:\n            fl = True\n            break\n    if fl:\n        print(cnt)\n    else:\n        print(-1)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# http://codeforces.com/problemset/problem/298/B\n\nd = {'E':(1,0), 'S':(0,-1), 'W':(-1,0), 'N':(0,1)}\n\nt,sx,sy,ex,ey = list(map(int, input().split()))\ns = input()\n\nfor i in range(t):\n    dx,dy = d[s[i]]\n\n    if abs(sx-ex+dx)<=abs(sx-ex) and abs(sy-ey+dy)<=abs(sy-ey):\n        sx+=dx\n        sy+=dy\n    if sx==ex and sy==ey:\n        print(i+1)\n        return\nprint(-1)\n", "#!/usr/bin/env python3\n#! -*- coding: utf-8 -*-\n\n\ndef main():\n\tt, sx, sy, ex, ey = list(map(int, input().split()))\n\tpath = input()\n\tdx, dy = ex - sx, ey - sy\n\tif not dx and not dy:\n\t\tprint(0)\n\t\treturn\n\tfor i, move in enumerate(path):\n\t\t#print(dx, dy)\n\t\tif dx < 0 and move == 'W':\n\t\t\tdx += 1\n\t\telif dx > 0 and move == 'E':\n\t\t\tdx -= 1\n\t\telif dy < 0 and move == 'S':\n\t\t\tdy += 1\n\t\telif dy > 0 and move == 'N':\n\t\t\tdy -= 1\n\t\tif not dx and not dy:\n\t\t\tprint(i + 1)\n\t\t\tbreak\n\telse:\n\t\tprint(\"-1\")\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()"]