["n, m = map(int, input().split())\na = [input() for i in range(n)]\nans = 0\ni = 0\nwhile i < m:\n    if a[n-1][i] == \"B\":\n        ans += 1\n        while i < m and a[n-1][i] == \"B\":\n            i += 1\n    i += 1\n\nprint(ans)", "r, c = list(map(int, input().split()))\n\nfor _ in range(r-1):\n    input()\n\nbottom = input()\n\nsections = 0\n\nlooking_for_new_section = True\n\n\nfor brick in bottom:\n    if looking_for_new_section:\n        if brick == 'B':\n            looking_for_new_section = False\n            sections += 1\n    else:\n        if brick == '.':\n            looking_for_new_section = True\n\nprint(sections)\n", "import sys, math\nn,m = list(map(int,input().split()))\nfor i in range(n-1):\n    input()\nw=input()\nw+='.'\nans = 0\nnow=1\nfor i in w:\n    if i == 'B':\n        if now:\n            now = 0\n            ans+=1\n        else:\n            continue\n    else:\n        now = 1\nprint(ans)\n", "from sys import stdin as fin, setrecursionlimit as srl\n# fin = open(\"hcc2016d1.in\", \"r\")\ndebug = False\n\ndef process():\n    r, c = list(map(int, fin.readline().split()))\n    emp = [True] * c\n    for j in range(r):\n        row = fin.readline().rstrip()\n        for i in range(c):\n            if row[i] == 'B':\n                emp[i] = False\n    prev, cnt = True, 0\n    for i in range(c):\n        if prev and not emp[i]:\n            cnt += 1\n        prev = emp[i]\n    print(cnt)\n# fin.readline()\n# process()\nif not debug:\n    process()\nelse:\n    while fin.readline().strip() == '':\n        process()\n        print(\"----------------------------\")\n", "R, C = list(map(int, input().split()))\nline = '.' * (C+2)\nwall = [line]\nfor _ in range(R):\n    wall.append('.' + input() + '.')\nwall.append(line)\n\nvs = set()\nans = 0\n\n\ndef visit(r, c):\n    q = [(r, c)]\n    while q:\n        r, c = q.pop()\n        if (r, c) in vs:\n            continue\n        vs.add((r, c))\n        if wall[r-1][c] == 'B':\n            q.append((r-1, c))\n        if wall[r+1][c] == 'B':\n            q.append((r+1, c))\n        if wall[r][c-1] == 'B':\n            q.append((r, c-1))\n        if wall[r][c+1] == 'B':\n            q.append((r, c+1))\n\nfor r in range(1, R+1):\n    for c in range(1, C+1):\n        if wall[r][c] == 'B' and (r, c) not in vs:\n            ans += 1\n            visit(r, c)\n\nprint(ans)\n", "read = lambda: list(map(int, input().split()))\nn, m = read()\na = [input() for i in range(n)]\ns = a[n - 1].split('.')\ncnt = len(s) - s.count('')\nprint(cnt)\n", "n,m=map(int,input().split())\nfor i in range(n):\n    k=input()\nf=1\nans=0\nfor i in k:\n    if i=='B' and f:\n        ans+=1\n        f=0\n    if i=='.':\n        f=1\nprint(ans)", "r, c = list(map(int, input().split()))\n\nlast = \"\"\nfor i in range(r):\n    s = str(input())\n\n    if i == r - 1:\n        last = s\n\n\nanswer = 0\nleft = 0\n\nwhile left <= c - 1:\n    if last[left] == \"B\":\n        try:\n            while last[left] == \"B\":\n                left += 1\n        except Exception:\n            pass\n        answer += 1\n    else:\n        left += 1\n\n\nprint(answer)\n\n", "# 690 D1\nr,c = [int(i) for i in input().split()]\nfor i in range(r-1):\n\tinput()\ns = input()\nsegs = 0\nprev = '.'\nfor x in s:\n\tif x=='B' and prev =='.':\n\t\tsegs += 1\n\tprev = x\nprint(segs)\n", "import sys, math\nn,m = list(map(int,input().split()))\nfor i in range(n-1):\n    input()\nw=input()\nw+='.'\nanc = 0\nnow=1\nfor i in w:\n    if i == 'B':\n        if now:\n            now = 0\n            anc+=1\n        else:\n            continue\n    else:\n        now = 1\nprint(anc)\n", "r,c=[int(i) for i in input().split()]\nfor i in range(r-1):\n    input()\ns=input()\nfor i in range(c):\n    s=s.replace('BB','B')\nprint(s.count('B'))\n", "inc=input().split(' ')\nfor i in range(int(inc[0])):\n    foundation = input()\nbl=True\nblock=0\nfor i in range(int(inc[1])):\n    if bl and foundation[i] == 'B':\n        bl=False\n        block+=1\n    elif (not bl) and foundation[i] == '.':\n        bl=True\nprint (block)", "x=input().split()\nr=int(x[0])\nmas=\"\"\nfor i in range(r):\n     if i+1==r:\n        mas=input()\n        mas=mas+\".\"\n        mas=\".\"+mas\n     else:\n      input()\ng=0\nfor i in range(len(mas)-1):\n   if mas[i]!=mas[i+1]:\n       g=g+1\nprint(int(g/2))", "rc = input()\nrc = rc.split()\n\nr = int(rc[0])\nc = int(rc[1])\n\nfor i in range(r):\n\trow = input()\n\ncount=0\nfor i in range(len(row)):\n\t if(row[i] == 'B' and (i==0 or row[i-1]=='.')):\n\t \tcount+=2\n\t if(row[i] == 'B' and (i==len(row)-1 or row[i+1]=='.')):\n\t \tcount-=1\n\t \nprint (count)\n", "n, m = list(map(int, input().split()))\na = [input() for _ in range(n)]\nused = [[False] * m for _ in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if not used[i][j] and a[i][j] == \"B\":\n            ans += 1\n            q = [(i, j)]\n            used[i][j] = True\n            head = 0\n            while head < len(q):\n                x, y = q[head]\n                head += 1\n                for d in range(4):\n                    xx = x + (1 if d == 0 else -1 if d == 1 else 0)\n                    yy = y + (1 if d == 2 else -1 if d == 3 else 0)\n                    if 0 <= xx < n and 0 <= yy < m and not used[xx][yy] and a[xx][yy] == \"B\":\n                        used[xx][yy] = True\n                        q.append((xx, yy))\nprint(ans)\n", "import sys\n#with open(filename, 'r') as f:\nwith sys.stdin as f:\n    input_list = list(f)\nfor i, line in enumerate(input_list):\n    if i == 0:\n        R = int(line.split(\" \")[0])\n    else:\n        if i == R:\n            nb_walls = len(list(filter(lambda x: len(x) > 0, line.strip().split('.'))))\n            print(nb_walls)", "r,c=[int(i) for i in input().split()]\nfor i in range(r-1):\n    input()\ns=input()\nfor i in range(c):\n    s=s.replace('BB','B')\nprint(s.count('B'))", "r, c = input().split()\nfor q in range(int(r)): s = input() + '.'\nprint(s.count('B.'))", "mod = 1000000007\nii = lambda : int(input())\nsi = lambda : input()\ndgl = lambda : list(map(int, input()))\nf = lambda : map(int, input().split())\nil = lambda : list(map(int, input().split()))\nls = lambda : list(input())\nfrom itertools import groupby\nn,m=f()\ncnt=0\nx=''\nfor i in range(n):\n    x=si()\nc=0\nfor i,j in groupby(x):\n    c+=(i=='B')\nprint(c)", "n,m = list(map(int,input().split()))\nc = []\nfor i in range(n):\n    a = list(input())\nl = 0\nfor i in range(len(a)-1):\n    if(a[i]=='B' and a[i+1]=='.'):\n        l+=1\nif(a[-1]=='B'):\n    l+=1\nprint(l)\n", "n, m = list(map(int, input().split()))\na = ''\nfor _ in range(n):\n    a = input()\nans = 0\ni = 0\nwhile i < m:\n    if 'B' == a[i]:\n        ans += 1\n        while i < m and 'B' == a[i]:\n            i += 1\n    else:\n        i += 1\nprint(ans)\n", "r, c = map(int, input().split())\n\nfor i in range(r-1):\n\ts = input()\ns = input()\n\nx = 0\ncnt = 0\nfor i in range(c):\n\tif s[i] == \"B\":\n\t\tx += 1\n\telse:\n\t\tif x > 0:\n\t\t\tcnt += 1\n\t\tx = 0\nif x > 0:\n\tcnt += 1\nprint (cnt)", "r,c=list(map(int,input().split()))\na=[]\nfor i in range(r):\n    a.append(input())\nb=[]\nfor i in range(c):\n    e=0\n    for j in range(r):\n        if a[j][i]==\"B\":\n            e=1\n    b.append(e)\nd=0\ne=0\nfor i in range(c):\n    if b[i]==1:\n        d+=1\n    if b[i]==0 and d!=0:\n        d=0\n        e+=1\nif d!=0:\n    print(e+1)\nelse:\n    print(e)"]