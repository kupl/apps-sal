["def check(i):\n    x, counter = armies[i] ^ armies[-1], 0\n    while x:\n        counter += x & 1\n        x >>= 1\n    return counter <= k\n\nn, m, k = list(map(int, input().split()))\narmies = [int(input()) for x in range(m + 1)]\nprint(sum(map(check, list(range(m)))))\n", "n,m,k = map(int,input().split())\na = []\nfor i in range(m):\n    a.append(int(input()))\nfedya = int(input())\nfedya = str(bin(fedya)[2:])\nfedya = '0'*(n-len(fedya))+fedya\nans = 0\nfor bb in a:\n    bbb = str(bin(bb)[2:])\n    bbb = '0'*(n-len(bbb))+bbb\n    delta = 0\n    for i in range(n):\n        if bbb[i]!=fedya[i]:\n            delta+=1\n    if delta<=k:\n        ans+=1\nprint(ans)", "def f(n, a, b):\n    cnt = 0\n    now = 1\n    for i in range(n):\n        if a & now == b & now:\n            cnt += 1\n        now *= 2\n    return cnt\nn, m, k = map(int, input().split())\na = []\nfor i in range(m + 1):\n    a.append(int(input()))\nans = 0\nfor i in range(m):\n    if f(n, a[i], a[m]) >= n - k:\n        ans += 1\nprint(ans)", "n,m,k = [int(x) for x in input().split()]\narr = [int(input()) for i in range(m+1)]\n\ndef calc(x):\n\treturn bin(x^arr[-1]).count('1')<=k\nprint(sum(map(calc,arr[:-1])))", "n,m,k=map(int,input().split())\na=[]\nans=0\nfor i in range(m):\n    a.append(int(input()))\ns=int(input())\nr=[]\nfor i in range(n):\n    r.append(s%2)\n    s=s//2\nfor i in range(m):\n    j=0\n    c=0\n    g=a[i]\n    while j<n and c<=k:\n        if r[j]==g%2:\n            j+=1\n        else:\n            j+=1\n            c+=1\n        g=g//2\n    if c<=k:\n        ans+=1\nprint(ans)", "n, m, k = [int(_) for _ in input().split(\" \")]\n\np = [int(input()) for i in range(0, m+1)]\nfd = p[-1]\nans = 0\nfor x in iter(p[:-1]):\n    t = x ^ fd\n    cnt = 0\n    while t:\n        if t % 2 == 1:\n            cnt += 1\n        t = t >> 1\n    if cnt <= k:\n        ans += 1\nprint (ans)\n", "def dif(x, y):\n    c = 0\n    while x != 0 or y!= 0:\n        if x % 2 != y % 2:\n            c += 1\n        x //= 2\n        y //= 2\n    return c\n\nn, m, k = map(int, input().split())\nx = [int(input()) for i in range(m + 1)]\ncnt = 0\nfor i in range(m):\n    if dif(x[i], x[m]) <= k:\n        cnt += 1\nprint(cnt)", "n, m, k = [int(i) for i in input().split()]\nvalues = []\nfor i in range(m):\n\tvalues.append(int(input()))\ncount = 0\np = int(input())\nfor value in values:\n\tif bin(p ^ value).count('1') <= k:\n\t\tcount += 1\nprint(count)\n\n", "v=list(int(x) for x in input().split())\nn=v[0]\nm=v[1]\nk=v[2]\nv=list()\nfor i in range (m+1):\n    v.append(int(input()))\nf=bin(v[m])[2:]\nf=('0'*(n-len(f)))+f\ntot=0\nfor i in range(m):\n    c=0\n    t=bin(v[i])[2:]\n    t=('0'*(n-len(t)))+t\n    #print (bin(v[i]), t,f)\n    for j in range (n):\n        if t[j]!=f[j]:\n            c+=1\n    if  c<=k:\n        tot+=1\nprint(tot)", "n,m,k = list(map(int,input().split()))\na,c = [],0\nfor i in range(m+1):\n    a.append(bin(int(input())).replace('0b',''))\nfor i in range(m):\n    s = str(int(a[m]) + int(a[i]))\n    if s.count('1') <= k:\n        c += 1\nprint(c)\n        \n", "n,m,r = map(int,input().split())\na = []\nfor i in range(m+1):\n    s = bin(int(input()))[2:]\n    t = str()\n    for i in range(21 - len(s) + 1):\n        t += '0'\n    a.append(t + s)\n\nres = 0\nt = a[len(a)-1]\nfor i in range(len(a)-1):\n    ans = 0\n    for k in range(len(t)):\n        if t[k] != a[i][k]:\n            ans += 1\n    if ans <= r:\n        res += 1\nprint(res)", "n,m,k = map(int, input().split())\narr = []\nfor _ in range(m+1):\n\tarr.append(int(input()))\nlol = arr[m]\nres = 0\n\nfor i in range(m):\n\ttmp = 0\n\tfor j in range(n+1):\n\t\tif((lol^arr[i])&(2**j)!=0):\n\t\t\ttmp+=1\n\tif(tmp<=k):\n\t\tres+=1\nprint(res)", "def count_one(n):\n    c = 0\n    while(n):\n        n = n&(n-1)\n        c = c + 1\n    return c\nnmk=input()\nb=nmk.split(' ')\nn=int(b[0])\nm=int(b[1])\nk=int(b[2])\na=[]\nfor i in range(m+1):\n    istr=input()\n    a.append(int(istr))\nans=0\nfor i in range(m):\n    if(count_one(a[i]^a[m])<=k):\n        ans=ans+1\nprint(ans)\n", "def getdiff(a, b):\n\treturn sum([a[i] != b[i] for i in range(n)])\n\n\nn, m, k = list(map(int, input().split()))\n\narmies = [0 for i in range(m)]\nfor i in range(m):\n\tarmies[i] = (bin(int(input()))[2:]).rjust(n, '0')\n\nans = 0\nM = (bin(int(input()))[2:]).rjust(n, '0')\nfor i in range(m):\n\tif getdiff(M, armies[i]) <= k:\n\t\tans += 1\nprint(ans)\n", "n, m, k = map(int, input().split())\na = list([])\nfor i in range(m + 1):\n    l = int(input())\n    a.append(l)\nans = 0\nfor i in range(m):\n    bi = a[i] ^ a[m]\n    s = bin(bi)\n    r = 0\n    j = 2\n    while r <= k and j < len(s):\n        if s[j] == '1':\n            r += 1\n        j += 1\n    if r <= k:\n        ans += 1\nprint(ans)", "def pad(inp,num):\n    while len(inp)<num:\n        inp = '0' + inp\n    return inp\n\ninp = input().split(' ')\nplayers = []\nfor x in range(int(inp[1])+1):\n    players.append(pad(bin(int(input()))[2:],int(inp[0])))\nfedor = players.pop()\noutput = 0\nfor player in players:\n    diff = 0\n    for b in range(len(fedor)):\n        if fedor[b] != player[b]:\n            diff += 1\n    if diff <= int(inp[2]):\n        output += 1\nprint(output)\n", "n, m, k = map(int, input().split())\ns = 0\na = []\nfor i in range(m + 1):\n    a.append(int(input()))\np = a[m]\nfor i in range(m):\n    d = list(map(int, list(bin(a[i] ^ p)[2:])))\n    if sum(d) <= k:\n        s+=1\n        #print(a[i])\nprint(s)", "def main():\n    n, m, k = list(map(int, input().split()))\n\n    a = []\n    for _ in range(m):\n        a.append(int(input()))\n        \n    f = int(input())\n    \n    def bitcnt(i):\n        c = 0\n        while i:\n            i &= i - 1\n            c += 1\n        return c\n\n    res = 0\n    for ai in a:\n        if bitcnt(ai ^ f) <= k:\n            res += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "def cmp(s1, s2):\n    ans = 0\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            ans += 1\n    return ans\n\n\nn, m, k = map(int, input().split())\nP = [bin(int(input()))[2:].rjust(n, \"0\") for i in range(m)]\nFeda = bin(int(input()))[2:].rjust(n, \"0\")\nans = 0\nfor a in P:\n    if cmp(Feda, a) <= k:\n        ans += 1\nprint(ans)", "def byte_v(a, n):\n    ans = []\n    while a != 0:\n        ans.append(a % 2)\n        a //= 2\n    ans.reverse()\n    \n    ans = (n - len(ans))  * [0] + ans\n\n    return ans\n\n\nn, m, k = map(int, input().split())\nplayers = []\nfor i in range(m + 1):\n    curr_army = int(input())\n    players.append(list(byte_v(curr_army, n)))\nphill = players[-1]\nans = 0\nfor i in range(m):\n    curr = 0\n    \n    for j in range(n):\n        if phill[j] != players[i][j]:\n            curr += 1\n    if curr <= k:\n        ans += 1\nprint(ans)", "n, m, k = list(map(int,input().split()))\nx = []\nfor i in range(m+1):\n    x.append(int(input()))\nfedor = x[m]\nans = 0\nfor i in range(m):\n    fr = x[i]\n    fed = fedor\n    count = 0\n    while fr > 0 or fed > 0:\n        count += (fr%2 + fed%2) % 2\n        fr //= 2\n        fed //= 2\n    if count <= k:\n        ans += 1\nprint(ans)\n", "def dif(a, b):\n    b,a,ans=max(a,b),min(a,b),0\n    c,d=[],[]\n    i=0\n    while a>0:\n        if a%2==1:\n            c.append(1)\n        else:\n            c.append(0)\n        a//=2\n        i+=1\n    i=0\n    while b>0:\n        if b%2==1:\n            d.append(1)\n        else:\n            d.append(0)\n        b//=2\n    for i in range(len(c)):\n        if c[i]!=d[i]:\n            ans+=1\n    for i in range(len(c),len(d)):\n        if d[i]==1:\n            ans+=1\n    return ans\nn,m,k = map(int,input().split())\nans=0\nx=[]\nfor i in range(m+1):\n    x.append(int(input()))\nfor i in range(m):\n    if dif(x[i], x[m])<=k:\n        ans+=1\nprint(ans)", "n, m, k = [int(x) for x in input().split()]\narr = []\no = 0\nfor i in range(m):\n    arr.append(int(input()))\nf = int(input())\nf2 = []\nfor i in range(n -1, -1, -1):\n    if (2 ** i) <= f:\n        f -= (2 ** i)\n        f2.append(True)\n    else:\n        f2.append(False)\nfor i in arr:\n    z = 0\n    for j in range(n - 1, -1, -1):\n        if 2 ** j <= i:\n            i -= 2 ** j\n            if not f2[n - 1 - j]:\n                z += 1\n        else:\n            if f2[n - j - 1]:\n                z += 1\n    if z <= k:\n        o += 1\nprint(o)", "import math\nn,m,k = list(map(int,input().split()))\nlst = [0]*m\nres = [0]*m\nans = 0\notvet = 0\nfor i in range(m):\n    lst[i] = int(input())\n    #lst[i] = bin(lst[i])[2:]\n\nfed = int(input())\n#fed = bin(fed[2:])\nfor i in range(m):\n    res[i] = lst[i] ^ fed\n    res[i] = bin(res[i])[2:]\n    ans = 0\n    for j in range(len(res[i])):\n\n        if res[i][j] == '1':\n            ans+=1\n\n    if ans<=k:\n\n         otvet+=1\nprint(otvet)\n", "def diff(a,b):\n    while(len(a)<len(b)):\n        a=\"0\"+a\n    while(len(b)<len(a)):\n        b=\"0\"+b\n    ret=0\n    for i in range(len(a)):\n        if(a[i]!=b[i]):\n            ret+=1\n    return ret\n\nn,m,k=list(map(int,input().split()))\nL=[]\nfor i in range(m):\n    x=int(input())\n    L.append(bin(x)[2:])\ns=bin(int(input()))[2:]\n\nans=0\nfor i in range(m):\n    z=diff(L[i],s)\n    if(z<=k):\n        ans+=1\nprint(ans)\n"]