["n, k = map(int, input().split())\nt = list(map(int, input().split()))\nif k == 1: print(len(set(t)))\nelse:\n    p = [set() for i in range(30)]\n    for i in t:\n        j = 0\n        while i % k == 0:\n            i //= k\n            j += 1\n        p[j].add(i)\n    for j in range(1, 30):\n        p[j] -= p[j - 1]\n    print(sum(len(i) for i in p))", "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nif k == 1: print(len(set(t)))\nelse:\n    p = [[] for i in range(30)]\n    for i in t:\n        j = 0\n        while i % k == 0:\n            i //= k\n            j += 1\n        p[j].append(i)\n    p = [set(i) for i in p]\n    for j in range(1, 30):\n        p[j] -= p[j - 1]\n    print(sum(len(i) for i in p))", "n,k=list(map(int,input().split()))\nL=list(map(int,input().split()))\nL.sort(reverse=True)\nS={}\n\nfor i in range(n):\n    if(L[i]*k in S):\n        continue\n    S[L[i]]=1\nprint(len(S))\n", "from sys import stdin\n\n__author__ = 'artyom'\n\n\ndef read_next_line():\n  return list(map(int, stdin.readline().strip().split()))\n\n\nn, k = read_next_line()\na = read_next_line()\nres = set(a)\n\nif k > 1:\n  excl = set()\n  for x in reversed(sorted(a)):\n    if x % k > 0 or x in excl:\n      continue\n    p = x / k\n    if p in res:\n      res.remove(p)\n      excl.add(p)\n\nprint(len(res))", "r=input(\"\").split(' ')\nx=int(r[0])\ny=int(r[1])\nl=input(\"\").split(' ')\nl=[int(x) for x in l]\nl.sort()\nk={}\nr=len(l)\nfor g in range (len(l)):\n    if (l[g]%y==0):\n        rk=l[g]//y\n        \n        if (rk not in k):\n            k[l[g]]=1\n        else:\n            r-=1\n    else:\n        k[l[g]]=1\nprint(r)", "a, b=list(map(int, input().split(' ')))\nints=list(map(int, input().split(' ')))\nints.sort()\n\ndictionary={}\n\nfor num in ints:\n    if (num/b)%1!=0:\n        dictionary[num] = 1\n    else:\n        if int(num/b) not in dictionary:\n            dictionary[num]=1\n\nprint(len(dictionary))\n", "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nif k == 1:\n    print(len(set(t)))\nelse:\n    p = [set() for i in range(30)]\n    for i in t:\n        j = 0\n        while i % k == 0:\n            i //= k\n            j += 1\n        p[j].add(i)\n    for j in range(1, 30):\n        p[j] -= p[j - 1]\n    print(sum(len(i) for i in p))", "from sys import stdin\n\ndef main():\n    '''\n    Name: Kevin S. Sanchez\n    Code: A. k-Multiple Free Set\n    '''\n    inp = stdin\n    n, k = list(map(int, inp.readline().split()))\n    nums = list(map(int, inp.readline().split()))\n    nums.sort(reverse = True)\n    # nums = set(nums)\n    final = set()\n    for i in range(0, n):\n        mult = nums[i] * k\n        if not(mult in final):\n            final.add(nums[i])\n    print(len(final))\n\nmain()\n", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\nlol = {}\nflag = {}\narr.sort()\n\nfor x in arr:\n\tflag[x] = 1\n\nans = 0\nfor i in range(len(arr)):\n\tif arr[i] in lol:\n\t\tcontinue\n\t\n\tcur = arr[i]\n\tcnt = 0\n\n\twhile cur <= 1000000000:\n\t\tlol[cur] = 1\n\t\tif cur in flag:\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tbreak\n\t\tcur = cur * k\n\t\tif k == 1:\n\t\t\tbreak\n\n\tans += (cnt + 1) // 2\nprint(ans)", "n, k = [int(x) for x in input().split()]\na = sorted([int(x) for x in input().split()])\ns = set(a)\nl = 0\nfor x in a:\n\tt = 1\n\twhile x in s:\n\t\tl += t\n\t\tt = 1 - t\n\t\ts.remove(x)\n\t\tx *= k\nprint(l)\n", "def main():\n    n, k = map(int, input().split())\n    if n == 1:\n        print(1)\n        return\n    l = sorted(map(int, input().split()))\n    baned = set()\n    s = set(l)\n    if k > 1:\n        for p in l:\n            if p not in baned:\n                p *= k\n                s.discard(p)\n                baned.add(p)\n    print(len(s))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "'''def bSearch(a,x,n):\n\tlow = 0\n\thigh = n-1\n\tflag = False\n\twhile(low <= high and flag == False):\n\t\tmid = (low+high)//2\n\t\tif(a[mid] == x):\n\t\t\tflag = True\n\t\telse:\n\t\t\tif(x < a[mid]):\n\t\t\t\thigh = mid - 1\n\t\t\telse:\n\t\t\t\tlow = mid + 1\n\treturn flag\n\nn,k = map(int,input().split())\n\na = list(map(int,input().split()))\n\ns = []\nm = 0\na = sorted(a)\n\nfor i in a:\n\tif(i % k != 0):\n\t\ts.append(i)\n\t\tm += 1\n\telif(bSearch(s,i/k,m) == False):\n\t\ts.append(i)\n\t\tm += 1\n\nprint(m)\n#print(s)'''\n\nn,k = list(map(int,input().split()))\n\na = list(map(int,input().split()))\na = sorted(a)\ns = []\nd = {}\nm = 0\n\nfor i in a:\n\tif(i % k != 0):\n\t\ts.append(i)\n\t\tm += 1\n\t\td[i] = 1\n\telif((i//k) not in d):\n\t\ts.append(i)\n\t\td[i] = 1\n\t\tm += 1\n\nprint(m)\n#print(d)\n#print(s)\n", "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\nlol = {}\nflag = {}\narr.sort()\n\nfor x in arr:\n\tflag[x] = 1\n\nans = 0\nfor i in range(len(arr)):\n\tif arr[i] in lol:\n\t\tcontinue\n\t\n\tcur = arr[i]\n\tcnt = 0\n\n\twhile cur <= 1000000000:\n\t\tlol[cur] = 1\n\t\tif cur in flag:\n\t\t\tcnt += 1\n\t\telse:\n\t\t\tbreak\n\t\tcur = cur * k\n\t\tif k == 1:\n\t\t\tbreak\n\n\tans += (cnt + 1) // 2\nprint(ans)\n", "# coding=utf-8\nn, k = list(map(int, input().split(' ')))\na = list(map(int, input().split(' ')))\na.sort()\ns = []\nd = {}\nm = 0\nfor i in a:\n    if i % k != 0:\n        s.append(i)\n        d[i] = 1\n        m += 1\n    elif (i // k) not in d:\n        s.append(i)\n        d[i] = 1\n        m += 1\nprint(m)\n", "import sys\nk = int(sys.stdin.readline().split()[1])\nt = list(map(lambda s: int(s), sys.stdin.readline().split()))\nt.sort()\n# print(t)\ndef find(x, a, b):\n    while True:\n        if a == b:\n            if x == t[a]:\n                return a\n            else:\n                return None\n        m = a + (b - a) // 2\n        if x > t[m]:\n            a = m + 1\n        else:\n            b = m\nu = [True for i in t]\ns = 0\nfor i in range(len(t)):\n    if u[i]:\n        s += 1\n        u[i] = False\n        j = find(t[i] * k, 0, len(t) - 1)\n        # print(t[i] * k, j)\n        if j is not None:\n            u[j] = False\nprint(s)", "import sys\nk = int(sys.stdin.readline().split()[1])\nt = list(map(lambda s: int(s), sys.stdin.readline().split()))\nt.sort()\n# print(t)\ndef find(x, a, b):\n    while True:\n        if a == b:\n            if x == t[a]:\n                return a\n            else:\n                return None\n        m = a + (b - a) // 2\n        if x > t[m]:\n            a = m + 1\n        else:\n            b = m\nu = [True for i in t]\ns = 0\nfor i in range(len(t)):\n    if u[i]:\n        s += 1\n        u[i] = False\n        j = find(t[i] * k, 0, len(t) - 1)\n        # print(t[i] * k, j)\n        if j is not None:\n            u[j] = False\nprint(s)", "def bSearch(x,li):\n\tl=0\n\th=len(li)\n\twhile(l<=h):\n\t\tm=(l+h)//2\n\t\tif(li[m]==x):\n\t\t\treturn m\n\t\telif(li[m]>x):\n\t\t\th=m-1\n\t\telse:\n\t\t\tl=m+1\n\treturn -1\nn,k=list(map(int,input().split()))\nli=list(map(int,input().split()))\nli.sort()\ns=set()\nfor i in range(n):\n\tif(li[i]%k==0):\n\t\tz = bSearch(li[i]//k,li)\n\t\tif(z!=-1):\n\t\t\tif li[z] not in s:\n\t\t\t\ts.add(li[i])\n\t\telse:\n\t\t\ts.add(li[i])\n\telse:\n\t\ts.add(li[i])\nprint(len(s))\n\t\t\n", "n, k = list(map(int, input().split()))\nnums = list(map(int, input().split()))\nif k == 1:\n\tprint(len(nums))\nelse:\n\tr = set()\n\tfor i in sorted(nums):\n\t\tif i in r:\n\t\t\tcontinue\n\t\telse:\n\t\t\tr.add(i * k)\n\tprint(len([i for i in nums if i not in r]))\n", "n,k = map(int,input().split())\narr = list(map(int,input().split()))\narr.sort()\nans = set()\nfor i in arr:\n    if i%k: ans.add(i)\n    elif i//k not in ans: ans.add(i)\nprint(len(ans))", "\nR = lambda: map(int, input().split())\nn, k = R()\narr = sorted(list(R()))\ns = set(arr)\nif k == 1:\n    print(n)\nelse:\n    for x in arr:\n        if x in s and x * k in s:\n            s.remove(x * k)\n    print(len(s))", "# from itertools import combinations\n# from bisect import bisect_left\n# from functools import *\n# from collections import Set\n\nI = lambda: list(map(int, input().split()))\nn, k = I()\na = sorted(I())\nb = set(a)\nif k != 1:\n    for i in a:\n        if i in b:\n            b.discard(i*k)\nprint(len(b))", "n,k=list(map(int,input().split()))\n\nL=list(map(int,input().split()))\n\nL.sort(reverse=True)\n\nS={}\n\n\n\nfor i in range(n):\n\n    if(L[i]*k in S):\n\n        continue\n\n    S[L[i]]=1\n\nprint(len(S))\n\n", "n,k=map(int,input().split())\nL=list(map(int,input().split()))\nL.sort(reverse=True)\nS={}\n\nfor i in range(n):\n    if(L[i]*k in S):\n        continue\n    S[L[i]]=1\nprint(len(S))", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl=sorted(l)\nma=1\nd={l[0]}\nfor i in range(1,n) :\n    if l[i]/m not in d :\n        d.add(l[i])\n        ma+=1\nprint(ma)\n              \n", "n, k = list(map(int,input().split()))\nai = list(map(int,input().split()))\ndef binsearch(num):\n    high = n-1\n    low = 0\n    mid = (high + low) // 2\n    while high >= low:\n        if ai[mid] < num:\n            low = mid + 1\n        elif ai[mid] > num:\n            high = mid - 1\n        else:\n            return mid\n        mid = (high + low) // 2\n    return -1\nai.sort()\nar = [0]*n\nans = 0\nfor i in range(n):\n    if ar[i]:\n        continue\n    num = binsearch(ai[i] * k)\n    if num != -1:\n        ar[num] = 1\n        ans += 1\nif k == 1:\n    ans = 0\nprint(n - ans)\n"]