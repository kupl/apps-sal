["n, k = map(int, input().split())\na = set(map(int, input().split()))\nq = int(input())\n\n# def isIn(x, fm, to):\n# \tif fm >= to:\n# \t\treturn a[fm] == x\n# \tt = a[(fm+to) // 2]\n# \tif t > x:\n# \t\treturn isIn(x, fm, (fm+to) // 2 - 1)\n# \telif t < x:\n# \t\treturn isIn(x, (fm+to) // 2 + 1, to)\n# \telse:\n# \t\treturn True\n\nfor _ in range(q):\n\tx = int(input())\n\tif x in a:\n\t\tprint(1)\n\t\tcontinue\n\tfound = False\n\tfor i in range(2, k + 1):\n\t\tfor j in range(1, i // 2 + 1):\n\t\t\tfor l in a:\n\t\t\t\tt = x - l * j\n\t\t\t\tif t % (i - j) != 0:\n\t\t\t\t\tcontinue\n\t\t\t\t# if isIn(t // (i - j), 0, n - 1):\n\t\t\t\tif t // (i - j) in a:\n\t\t\t\t\tprint(i)\n\t\t\t\t\tfound = True\n\t\t\t\t\tbreak\n\t\t\tif found:\n\t\t\t\tbreak\n\t\tif found:\n\t\t\tbreak\n\tif not found:\n\t\tprint(-1)", "n,k = [int(s) for s in input().split()]\n\nbills = [int(s) for s in input().split()]\npairs = {}\nfor bill in bills:\n    for i in range(k):\n        possible = (i+1)*bill\n        if possible not in pairs or i+1 < pairs[possible]:\n            pairs[possible] = i+1\nq = int(input())\n\nmymax = 100000000000000000\nfor i in range(q):\n    query = int(input())\n    minumum = mymax\n    for money, nbills in list(pairs.items()):\n        if money == query and nbills <=k and nbills < minumum:\n            minumum = nbills\n        else:\n            rest = query-money\n            if rest in pairs and nbills+pairs[rest] < minumum and nbills+pairs[rest] <= k:\n                minumum = nbills+pairs[rest]\n    if minumum == mymax:\n        print(-1)\n    else:\n        print(minumum)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nt = list(f())\n\nd = {0: 0}\nfor q in t:\n    for i in range(1, k + 1): d[q * i] = i\n\nfor j in range(int(input())):\n    a = int(input())\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n    print(min(p) if p and min(p) <= k else -1)\n", "f = lambda: list(map(int, input().split()))\n\nn, k = f()\n\nt = list(f())\n\n\n\nd = {0: 0}\n\nfor q in t:\n\n    for i in range(1, k + 1): d[q * i] = i\n\n\n\nfor j in range(int(input())):\n\n    a = int(input())\n\n    p = [i + d[a - b] for b, i in list(d.items()) if a - b in d]\n\n    print(min(p) if p and min(p) <= k else -1)\n\n\n\n\n# Made By Mostafa_Khaled\n", "n_k = input()\nn_k = n_k.split(\" \")\n\nn = int(n_k[0])\nk = int(n_k[1])\n\nais = input()\nais = ais.split(\" \")\n\nq = int(input())\n\npares = {}\n\nfor a in ais:\n    a = int(a)\n    for i in range(k):\n        p = int((i+1)*a)\n        if (p not in pares) or (i+1 < pares[p]):\n            pares[p] = i+1\n\nm = 1000000000\n\nfor i in range(q):\n\tx = int(input())\n\tans = 1000;\n\n\tminimo = m\n\tfor money, bills in list(pares.items()):\n\t\tif money == x and bills <= k and bills < minimo:\n\t\t\tminimo = bills\n\t\telse:\n\t\t\tr = x-money\n\t\t\tif r in pares and bills+pares[r] < minimo and bills + pares[r] <= k:\n\t\t\t\tminimo = bills+pares[r]\n\tif minimo == m:\n\t\tprint(-1)\n\telse:\n\t\tprint(minimo)\n", "n_k = input()\nn_k = n_k.split(\" \")\n\nn = int(n_k[0])\nk = int(n_k[1])\n\nais = input()\nais = ais.split(\" \")\n\nq = int(input())\n\npares = {}\n\nfor a in ais:\n    a = int(a)\n    for i in range(k):\n        p = int((i+1)*a)\n        if (p not in pares) or (i+1 < pares[p]):\n            pares[p] = i+1\n\nm = 1000000000\n\nfor i in range(q):\n\tx = int(input())\n\tans = 1000;\n\n\tminimo = m\n\tfor plata, deuda in list(pares.items()):\n\t\tif plata == x:\n\t\t\tif deuda <= k:\n\t\t\t\tif deuda < minimo:\n\t\t\t\t\tminimo = deuda\n\t\telse:\n\t\t\tr = x-plata\n\t\t\tif r in pares:\n\t\t\t\tif deuda+pares[r] < minimo:\n\t\t\t\t\tif deuda + pares[r] <= k:\n\t\t\t\t\t\tminimo = deuda+pares[r]\n\tif minimo == m:\n\t\tprint(-1)\n\telse:\n\t\tprint(minimo)\n", "n_k = input()\nn_k = n_k.split(\" \")\n\nn = int(n_k[0])\nk = int(n_k[1])\n\nais = input()\nais = ais.split(\" \")\n\nq = int(input())\n\npares = {}\n\nfor a in ais:\n    a = int(a)\n    for i in range(k):\n        p = int((i+1)*a)\n        if (p not in pares) or (i+1 < pares[p]):\n            pares[p] = i+1\n\nm = 1000000000\n\nfor i in range(q):\n\tx = int(input())\n\tans = 1000;\n\n\tminimo = m\n\tfor plata, deuda in list(pares.items()):\n\t\tif plata == x:\n\t\t\tif deuda <= k:\n\t\t\t\tif deuda < minimo:\n\t\t\t\t\tminimo = deuda\n\t\telse:\n\t\t\tr = x-plata\n\t\t\tif r in pares:\n\t\t\t\tif deuda+pares[r] < minimo:\n\t\t\t\t\tif deuda + pares[r] <= k:\n\t\t\t\t\t\tminimo = deuda+pares[r]\n\tif minimo == m:\n\t\tprint(-1)\n\telse:\n\t\tprint(minimo)\n# 1538793706889\n"]