["n,m,k = list(map(int, input().strip().split()))\na = list(map(int, input().strip().split()))\na.sort()\n\ncount = 0\n\nstart = 0\nkonec = 0\nur = 0\nwhile start < len(a):\n    if a[start] is not None:\n        v = a[start]\n        while konec < len(a) and a[konec] - v < m :\n            ur += 1\n            if ur >= k:\n                #print(a,start,konec,ur)\n                a[konec] = None\n                count += 1\n                ur -= 1\n            konec += 1\n    if a[start] is not None:\n        ur -= 1\n    start += 1\n\nprint(count)\n            \n            \n    \n    \n", "from collections import Counter, deque\ndef lInt(d = None): return map(int, input().split(d))\n\nn, m, k, *_ = lInt()\na = list(lInt())\nf = [0]*1000002\nd = deque()\nacc = 0; ans = 0\n\nfor v in a:\n  f[v] = 1\nfor i in range(1, m+1):\n  if f[i]:\n    acc += f[i]\n    d.append(i)\nfor i in range(m+1, 1000002):\n  while acc >= k:\n    f[d.pop()] = 0\n    ans += 1\n    acc -= 1\n\n  if f[i]:\n    acc += f[i]\n    d.append(i)\n  if f[i-m]:\n    acc -= 1\n    d.popleft()\nprint(ans)", "from collections import Counter, deque\ndef lInt(d = None): return map(int, input().split(d))\n\nn, m, k, *_ = lInt()\na = list(lInt())\nf = [0]*1000002\nd = deque()\nacc = 0; ans = 0\n\nfor v in a:\n  f[v] = 1\nfor i in range(1, m+1):\n  if f[i]:\n    acc += f[i]\n    d.append(i)\nfor i in range(m+1, 1000002):\n  while acc >= k:\n    j = d.pop()\n\n    if f[j]:\n      f[j] = 0\n      ans += 1\n      acc -= 1\n\n  if f[i]:\n    acc += f[i]\n    d.append(i)\n  if f[i-m]:\n    acc -= 1\nprint(ans)", "n, m, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\na.sort()\nans = 0\nz = 0\nj = 0\nfor i in range(len(a)):\n    if a[i] == 0:\n        z -= 1\n        continue\n    while j < len(a) and a[j] - a[i] < m:\n        if a[j] == 0:\n            z += 1\n        j += 1\n    if j - i - z >= k:\n        const =  j - i - k - z + 1\n        c = 0\n        ct = 0\n        while (ct < const):\n            if a[j - 1 - c] != 0:\n                a[j - 1 - c] = 0\n                ans += 1\n                ct += 1\n                if j - 1 - c != i:\n                    z += 1\n            c += 1\nprint(ans)\n", "n, m, k = (int(x) for x in input().split())\nns = set((int(x) for x in input().split()))\nfrom collections import deque\nspan = deque((0 for i in range(m)))\nkk = 0\nres = 0\nmm = -1\nwhile len(ns) > 0:\n    mm += 1\n    x = span.popleft()\n    if x == 1:\n        kk -= 1\n    if mm not in ns:\n        span.append(0)\n    else:\n        ns.remove(mm)\n        y = 1\n        if kk == k - 1:\n            res += 1\n            y = 0\n        span.append(y)\n        kk+=y\nprint(res)", "n, m, k = (int(x) for x in input().split())\nns = set((int(x) for x in input().split()))\nfrom collections import deque\nspan = deque((0 for i in range(m)))\nkk = 0\nres = 0\nmm = -1\nwhile len(ns) > 0:\n    mm += 1\n    x = span.popleft()\n    if x == 1:\n        kk -= 1\n    if mm not in ns:\n        span.append(0)\n    else:\n        ns.remove(mm)\n        y = 1\n        if kk == k - 1:\n            res += 1\n            y = 0\n        span.append(y)\n        kk+=y\nprint(res)", "from collections import deque\n\nn,m,k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\na = sorted(a)\na = deque(a)\nfirst = - 10e7\nr = deque([])\ns = 0\nresult = 0\nwhile n > 0:\n    e = a[0]\n    c = e - m + 1\n    while r != deque([]):\n        if r[0] < c:\n            r.popleft()\n            s -= 1\n        else:\n            break\n    if s + 1 >= k:\n        result += 1\n    else:\n        r.append(e)\n        s += 1\n    a.popleft()\n    n -= 1\n    # print(e, c, s, r, result)\n\nprint(result)\n", "n,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nfrom collections import deque\nd=deque([])\nans=0\nfor i in a:\n    if len(d)>0 and d[0]<i-m+1:\n        d.popleft()\n    if len(d)<k-1:\n        d.append(i)\n    else:\n        ans+=1\nprint(ans)\n", "f = lambda: map(int, input().split())\nn, m, k = f()\nt = sorted(f())\nd = [1] * n\ni = s = 0\nfor j in range(n):\n    while t[j] - t[i] >= m:\n        k += d[i]\n        i += 1\n    k -= 1\n    if k < 1:\n        s += 1\n        k = 1\n        d[j] = 0\nprint(s)", "n, m, k = list(map(int, input().split()))\ntimes = list(map(int, input().split()))\ntimes.sort()\nans = 0\nstart = 0\ncnt = 0\nj = 0\nprohibited = []\nfor i in range(n):\n\tprohibited += [1]\nfor i in range(n):\n\tif times[i] < start + m:\n\t\tcnt += 1\n\telse: \n\t\twhile times[i] >= start + m:\n\t\t\tif prohibited[j] == 1:\n\t\t\t\tstart = times[j]\n\t\t\t\tif j != 0:\n\t\t\t\t\tcnt -= 1\n\t\t\tj += 1\n\t\tcnt += 1\n\tif cnt == k:\n\t\tcnt -= 1\n\t\tans += 1\n\t\tprohibited[i] = 0\nif k == 1:\n\tprint(n)\nelse:\n\tprint(ans)\n", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nd = []\nans = 0\n\nfor i in a:\n    if len(d) > 0 and d[0] < i - m + 1:\n        del d[0]\n\n    if len(d) < k - 1:\n        d.append(i)\n    else:\n        ans += 1\n\nprint(ans)\n", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na = list(sorted(a))\ns = []\nr = 0\n\nfor x in a:\n    if len(s) and s[0] < x - m + 1:\n        del s[0]\n\n    if len(s) < k - 1:\n        s.append(x)\n\n    else:\n        r += 1\n\n\nprint(r)\n", "n,m,k = list(map(int,input().split()))\nclock = list(map(int,input().split()))\nclock.sort()\nunlock = [1] * n\ncount = 0\nj = 0\nif k == 1:\n    count = n\nelse:\n    for i in range(n):\n        while clock[i] - clock[j] >= m:\n            k += unlock[j]\n            j += 1\n        k -= 1\n        if k < 1:\n            count += 1\n            k = 1\n            unlock[i] = 0\nprint(count)\n    \n    \n    \n    \n", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na = list(sorted(a))\ns = []\nr = 0\n\nfor x in a:\n    if len(s) and s[0] < x - m + 1:\n        del s[0]\n\n    if len(s) < k - 1:\n        s.append(x)\n\n    else:\n        r += 1\n\nprint(r)\n    \n", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na = list(sorted(a))\ns = []\nr = 0\n\nfor x in a:\n    if len(s) and s[0] < x - m + 1:\n        del s[0]\n\n    if len(s) < k - 1:\n        s.append(x)\n\n    else:\n        r += 1\n\nprint(r)\n    \n", "n, m, k = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nvis = []\nfor i in range(n):\n    vis.append(0)\nans = l = r = 0\ncnt = 1\nwhile(r < n):\n    while(a[r]-a[l]+1 > m):\n\t    if(vis[l] == 0):\n\t\t    cnt -= 1\n\t    l += 1\n    if cnt >= k:\n        ans += 1\n        vis[r] = 1;\n        cnt -= 1\n    r += 1\n    cnt += 1\nprint(ans)", "k=input().split()\nn,m,k=int(k[0]),int(k[1]),int(k[2])\na=[0]*1000001\nc=input().split()\nfor i in range(n):\n    a[int(c[i])]=1\nb=0\np=0\nfor i in range(m):\n    if a[i]==1:\n        p+=1\n    if p==k:\n        a[i]=0\n        p-=1\n        b+=1\nfor i in range(m,1000001):\n    if a[i-m]==1:\n        p-=1\n    if a[i]==1:\n        p+=1\n    if p==k:\n        a[i]=0\n        p-=1\n        b+=1\nprint(b)", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nimport math\nimport heapq\nfrom itertools import accumulate\n\n#N = int(input())\n\n#s = input() \nN,M,K = [int(x) for x in stdin.readline().split()]\n\narr = [int(x) for x in stdin.readline().split()]\n\nfreq = [0]*(1000000)\n\nfor num in arr:\n    freq[num-1] += 1\n\ns = 0\nres = 0\nfor i in range(1000000):\n    if i>=M:\n        s -= freq[i-M]\n\n    s += freq[i]\n    #print(s)\n    if s>=K:\n        res += (s - K + 1)\n        freq[i] -= (s - K + 1)\n        s -= (s - K + 1)\n        \nprint(res)\n    \n", "n,m,k=list(map(int,input().split()))\ncnt=[0]*(10**6+5)\nl=[int(i) for i in input().split()]\nfor i in l:\n    cnt[i]+=1\nsm=0 \nfor i in range(10**6+5):\n    sm+=cnt[i]\n    if(i>=m): \n        sm-=cnt[i-m]\n    if(sm>=k):\n        sm-=1 \n        cnt[i]=0 \nprint(n-sum(cnt))\n\n", "n, m, k=[int(x) for x in input().split()]\nalarms=[int(x) for x in input().split()]\nalarms.sort()\nal2=[]\ncont=0\nfor i in range(len(alarms)):\n    al2.append(alarms[i])\n    if len(al2)>=k and al2[-1]-al2[len(al2)-k]<m:\n        al2.pop()\n        cont+=1\nprint(cont)\n", "n,m,k = list(map(int,input().split()))\narr = list(map(int,input().split()))\narr.sort()\nsize = k-1\nans = []\nf = 0\ni = 0\nwhile i<n:\n    if ans==[]:\n        if len(ans)<size:\n            ans.append(arr[i])\n            i+=1\n        else:\n            f+=1\n            i+=1\n    else:\n        u = ans[0]\n        limit = u+m-1\n        while(i<n):\n            if arr[i]<=limit:\n                if len(ans)<k-1:\n                    ans.append(arr[i])\n                else:\n                    f+=1\n                i+=1\n            else:\n                break\n        ans.pop(0)\nprint(f)", "n,m,k = list(map(int,input().split()))\nlis = sorted(map(int,input().split()))+[1000000000000000]\nj=zer=ans=0\nfor i in range(n):\n    if lis[i]==0:\n        zer-=1\n        continue\n    j=max(j,i)\n    while j<=n and lis[j]-lis[i]<m:\n        j+=1\n    if j-i-zer>=k:\n        a=j-1\n        ext=j-i-zer-k+1\n        t=0\n        while a>=0 and ext>0:\n            if lis[a]!=0:\n                lis[a]=0\n                t+=1\n                zer+=1\n                ext-=1\n            a-=1\n        ans+=t\n    if lis[i]==0:\n        zer-=1       \nprint(ans)            \n\n\n"]