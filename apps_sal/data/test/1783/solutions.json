["line=input().split()\nn=int(line[0])\nk=int(line[1])\nnums=input().split()\nfor i in range(n):\n    nums[i]=int(nums[i])\n\nfirstsum = 0\nfor i in range(k):\n    firstsum+=nums[i]\n\ntotsum=firstsum\nfor i in range(n-k):\n    firstsum-=nums[i]\n    firstsum+=nums[k+i]\n    totsum+=firstsum\nprint(totsum/(n-k+1))\n", "n,k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nmovSum = sum(a[0:k])\ntot = movSum\nfor i in range(1,n-k+1):\n    movSum-=a[i-1]\n    movSum+=a[i+k-1]\n    tot += movSum\n\nprint(tot/(n-k+1))\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = sum(a[:k])\nans = s / (n - k + 1)\nfor i in range(n - k):\n    s = s + a[i + k] - a[i]\n    ans += s / (n - k + 1)\nprint(ans)\n", "n,k = list(map(int,input().split()))\nai = list(map(int,input().split()))\nsumm = 0\nk2 = n-k+1\nfor i in range(n):\n    summ += ai[i] * min(k2,k,i+1,n-i)\nprint(summ/(k2))\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\npref = [0 for i in range(n - k + 1)]\npref[0] = sum(a[:k])\nfor i in range(1, n - k + 1):\n    pref[i] = pref[i - 1] - a[i - 1] + a[i + k - 1]\nprint(sum(pref) / (n - k + 1))", "m,n = list(map(int,input().split()))\narr = [int(x) for x in input().split()]\ns = sum(arr[:n])\nval = m-n+1\nns = s/val\nfor i in range(n,m):\n\ts = s + arr[i] - arr[i-n]\n\tns += s/val\nprint(ns)\n", "from sys import stdin, stdout\nfrom decimal import Decimal\n\nn, k = map(int, stdin.readline().split())\nvalues = list(map(Decimal, stdin.readline().split()))\ncnt = [values[0]]\n\nfor i in range(1, n):\n    cnt.append(cnt[-1] + values[i])\n\ncnt.append(0)\n\n\nans = 0\nfor i in range(k - 1, n):\n    ans += cnt[i] - cnt[i - k]\n\n\nstdout.write(str(ans / Decimal((n - k + 1))))", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    l = max(0, i - k + 1)\n    r = min(i, n - k)\n    \n    s += a[i] * (r - l + 1)\n        \n    \nprint(s / (n - k + 1))", "def solve():\n    #n = int(input())\n    n, k = map(int, input().split())\n    a = [0] + list(map(int, input().split()))\n    #a = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(1, n + 1):\n        a[i] = a[i - 1] + a[i]\n    ans = 0.0\n    for i in range(k, n + 1):\n        ans += (a[i] - a[i - k]) / (n - k + 1)\n    print(ans)\n\ndef __starting_point():\n    solve()\n__starting_point()", "a = input().split()\nn = int(a[0])\nk = int(a[1])\nv = list(map(int,input().split()))\ns = 0\nco = 1\ncur_s = 0\ncur = 0\ndal = k-1\nfor i in range(k):\n    cur_s+= v[i]\ns+=cur_s\n\nwhile (dal+1<n):\n    co+=1\n    cur_s-=v[cur]\n    cur+=1\n    dal+=1\n    cur_s += v[dal]\n    s+=cur_s\nprint(s/co)", "n, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\ntotal = sum(a[:k])\nres = total\nfor i in range(1, n-k+1):\n    total += - a[i-1] + a[i+k-1]\n    res += total\nprint(res/(n-k+1))", "def luckyYear():\n    n = int(input())\n    original = n\n    p = -1\n    f = 0\n    while n > 0:\n        f = n % 10\n        n //= 10\n        p += 1\n    f += 1\n    f *= 10 ** p\n    # print(f)\n    print(f - original)\n\n\ndef averageSleepTime():\n    n, k = list(map(int, input().split()))\n    sleep = list(map(int, input().split()))\n    run = 0\n    for i in range(k):\n        run += sleep[i]\n    runavg = [run]\n    for i in range(k, n):\n        run = run - sleep[i - k] + sleep[i]\n        runavg.append(run)\n    print('{:.10f}'.format(sum(runavg)/(n-k+1)))\n\n\naverageSleepTime()\n", "def main():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    ans = 0\n\n    for i in range(n):\n        l = max(i - k + 1, 0)\n        r = min(i, n - k)\n        ans += a[i] * (r - l + 1)\n\n    print(\"{:.12f}\".format(ans / (n - k + 1)))\n\n\ndef __starting_point():\n    # import sys\n    # sys.stdin = open(\"in.txt\")\n    main()\n\n__starting_point()", "n,k=list(map(int,input().split()))\nans=0\na=list(map(int,input().split()))\ns=sum(a[:k])\nt=s\nfor i in range(1,1+n-k):\n    s-=a[i-1]\n    s+=a[i+k-1]\n    t+=s\nprint(t/(1+n-k))\n\n", "n, k = map(int, input().split())\na = list(map(int,input().split()))\nd = [0 for i in range(n)]\nd[0] = a[0]\nfor i in range(1, n):\n  d[i] = a[i] + d[i - 1]\n\ncnt = 0\nsm = 0\nfor i in range(k - 1, n):\n  cnt += 1\n  if i == k - 1:\n    sm += d[i]\n  else:\n    sm += d[i] - d[i - k]\nfrom decimal import Decimal\nsumma = Decimal(sm)\ncount = Decimal(cnt)\nprint(summa / count)", "n, k = [int(x) for x in input().strip().split()]\na = [int(x) for x in input().strip().split()]\ninitsum = sum(a[:k])\nallsum = initsum\nfor i in range(k, n):\n    initsum -= a[i-k]\n    initsum += a[i]\n    allsum += initsum\nprint(allsum/(n-k+1))\n", "n,k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\nweeks = n - k + 1\nmax_sum = min(weeks, k)\n\ns = 0\nfor i in range(1, n+1):\n    m = max_sum\n    if i < max_sum:\n        m = i\n    elif n - i + 1 < max_sum:\n        m = n - i + 1\n    s += m*h[i-1]\n\ns /= weeks\nprint(s)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\ns = 0\nrec = [0]\nfor i in range(len(a)):\n    rec.append(rec[-1] + a[i])\n\nfor i in range(n - k + 1):\n    s += rec[i + k] - rec[i]\n\nprint(s / (n - k + 1))", "n, k = list(map( int, input().split()))\n\na = list(map( int, input().split()))\n\nans = 0\ntmp = a[0]\ni = 0\nj = 0\nan = 0\nfor s in a:\n    i+=1\n    if i < k+1:\n        an += s\n    else:\n        ans += an\n        j+=1\n        an -= tmp\n        an += s\n        tmp = a[j]\n##    print(\"i\", i)\n##    print(\"ans\", ans)\n##    print(\"an\", an)\n##    print(\"tmp\", tmp)\n\nans += an\n\nprint(ans/(n-k+1))\n", "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\n# input_text_path = __file__.replace('.py', '.txt')\n# fd = os.open(input_text_path, os.O_RDONLY)\n# os.dup2(fd, sys.stdin.fileno())\n\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nif n == k:\n    print(sum(A))\nelif n - k >= k:\n    v = 0\n    for i in range(n):\n        if i < k:\n            v += (i+1) * A[i]\n        elif n - k < i:\n            v += (n-i) * A[i]\n        else:\n            v += k * A[i]\n    ans = v / (n-k+1)\n    print(ans)\nelse:\n    v = 0\n    for i in range(n):\n        if i < n - k:\n            v += (i+1) * A[i]\n        elif k <= i:\n            v += (n-i) * A[i]\n        else:\n            v += (n-k+1) * A[i]\n    ans = v / (n-k+1)\n    print(ans)\n", "\n\n\nn, k = [int(x) for x in input().split()]\ny = [0]\nl = [int(x) for x in input().split()]\np =k\ns =0\nfor x in l:\n    y.append(y[-1]+x)\n\nln = len(y)\nwhile k<ln:\n    s+=y[k]- y[k-p]\n    k = k+1\n\nprint(s/(n-p+1))", "n,k = map(int,input().split())\narr = [int(i) for i in input().split()]\ntotal =0\nfor i in range(n):\n    #print(arr[i])*(min(n-k+1,min(n-k+1,min(i,n-i-1)+1)))\n    total += (arr[i])*(min(n-k+1,min(k,min(i,n-i-1)+1)))\n#print(total/k)\nprint ('{0:.10f}'.format(total/(n-k+1)))", "def mp():  return list(map(int,input().split()))\ndef lt():  return list(map(int,input().split()))\ndef pt(x):  print(x)\ndef ip():  return input()\ndef it():  return int(input())\ndef sl(x):  return [t for t in x]\ndef spl(x): return x.split()\ndef aj(liste, item): liste.append(item)\ndef bin(x):  return \"{0:b}\".format(x)\ndef listring(l): return ' '.join([str(x) for x in l])\ndef ptlist(l): print(' '.join([str(x) for x in l]))\n\n\nn,k = mp()\na = lt()\n\ns = sum(a[:k])\nl = 0\nfor i in range(n-k+1):\n    l += s\n    if i+k < n:\n        s += (a[i+k]-a[i])\npt(l/(n-k+1))\n    \n            \n    \n", "\"\"\"import sys\nsys.stdin = open(\"in\", \"r\")\"\"\"\n\nn, k = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\n\nfor i, j in enumerate(arr):\n    if(i > 0):\n        arr[i] += arr[i - 1]\n\nsum = 0\nfor i in range(k - 1, n):\n    nm = arr[i]\n    if(i != k - 1):\n        nm -= arr[i - k]\n    sum += nm\n\nprint(sum / (n-k+1))\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nsumm = 0\nmulti = 1\nfor i in range(n):\n    if n - i > k and multi < k:\n        summ += a[i] * multi\n        multi += 1\n    elif n - i > k or i + 1 < k:\n        summ += a[i] * multi\n    elif n - i <= k:\n        summ += a[i] * multi\n        multi -= 1\nprint(summ / (n - k + 1))"]