["import sys\n\nimport math\nfrom math import sqrt\nimport bisect\n \nsmall = 10**5+1\nbig = 10**18+1\n \npos = []\nf = pos.append\n#pos.add(1)\nj = 2\nwhile True:\n    #if sqrt(j).is_integer():\n    #    j+=1\n    #    continue\n    j2 = j*j\n    i = j*j2\n    if i>=big:\n        break\n    #if int(i**0.5+0.5)**2==i:\n    #    j+=1\n    #    continue\n    while i<big:\n        f(i)\n        i *= j2\n    j += 1\npos2 = [p for p in pos if not sqrt(p).is_integer()]\npos2.sort()\nprev = -1\npos = []\nf = pos.append\nfor p in pos2:\n    if p==prev:\n        continue\n    f(p)\n    prev = p\n \n \n \nq = int(input())\n#inp = [int(x) for line in sys.stdin for x in line.split()]\n#ii = 0\nout = []\nfor line in sys.stdin:\n    L,R = line.split()\n    L = int(L)\n    R = int(R)\n    \n \n    #ii+=2\n    a = -1\n    b = len(pos)\n    \n    \n    while b-a>1:\n        m = (a+b)//2\n        if pos[m]<L:\n            a=m\n        else:\n            b=m\n    under = a\n    #under = bisect.bisect_left(pos,L)\n    #if under<len(pos) and pos[under]>=L:\n    #    under -= 1\n    \n    a = -1\n    b = len(pos)\n    \n    \n    \n    while b-a>1:\n        m = (a+b)//2\n        if pos[m]<=R:\n            a = m\n        else:\n            b = m\n    upper = a\n    #upper = bisect.bisect_left(pos,R+1)-1\n    Lupp = max(int(sqrt(L)-1),0)\n    while Lupp*Lupp<L:\n        Lupp+=1\n    \n    Rdown = int(sqrt(R))+1\n    while Rdown*Rdown>R:\n        Rdown-=1\n \n    count = max(0,Rdown-Lupp+1)\n    out.append(str(upper-under+count))\nprint('\\n'.join(out))", "import math\nimport bisect\nimport sys\n\ndef flrt(exp,x):\n    l=max(0,math.floor(x**(1/exp))-3)\n    \n    r= math.floor(x**(1/exp))+3\n    while l<r:\n        mid=(l+r)//2\n        if mid**exp<=x:\n            l=mid+1\n        else: \n            r=mid\n    return l-1\n   \n    \ndef c1(r):\n    ans=set()\n    pr = [5,7,11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61]\n    for i in pr:\n        x=2\n        while x**i <= r:\n            val=x**i\n            b2=flrt(2,val)\n            b3=flrt(3,val)\n            if b2**2 != val and b3**3 != val:\n                ans.add(val)\n            x+=1\n    return ans\n    \ndef solve(r, pc):\n    if r==0:\n        return 0\n    \n    a=[2,3]\n    ans=0\n    for i in range(1,2**len(a)):\n        tot=0\n        mult=1\n        for j,x in enumerate(a):\n            if i&(1<<j):\n                mult*=x\n                tot+=1\n        d=  flrt(mult,r)      \n        ans+= d if tot%2 else -d\n        \n    return ans + bisect.bisect_right(pc,r)    \n       \n    lp=0 \n    rp=len(pc)\n    while lp<rp:\n        mid = (lp+rp)//2\n        if pc[mid] <= r:\n            lp = mid+1\n        else:\n            rp = mid\n        \n    \n    return ans + lp\nq = int(input())\n\npc= c1(1e18+1)\n\n\npca=list(pc)\npca.sort()\n        \n \nfor i in range(q):\n    l,r = [int(x) for x in sys.stdin.readline().split()]\n    ans=solve(r,pca)-solve(l-1,pca)\n    print(ans)\n", "import math\nimport bisect\nimport sys\n\ndef flrt(exp,x):\n    l=max(0,math.floor(x**(1/exp))-3)\n    \n    r= math.floor(x**(1/exp))+3\n    while l<r:\n        mid=(l+r)//2\n        if mid**exp<=x:\n            l=mid+1\n        else: \n            r=mid\n    return l-1\n   \n    \ndef c1(r):\n    ans=set()\n    pr = [5,7,11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61]\n    for i in pr:\n        x=2\n        while x**i <= r:\n            val=x**i\n            b2=flrt(2,val)\n            b3=flrt(3,val)\n            if b2**2 != val and b3**3 != val:\n                ans.add(val)\n            x+=1\n    return ans\n    \ndef solve(r, pc):\n    if r==0:\n        return 0\n    \n    a=[2,3]\n    ans=0\n    for i in range(1,2**len(a)):\n        tot=0\n        mult=1\n        for j,x in enumerate(a):\n            if i&(1<<j):\n                mult*=x\n                tot+=1\n        d=  flrt(mult,r)      \n        ans+= d if tot%2 else -d\n        \n    return ans + bisect.bisect_right(pc,r)    \n       \n    lp=0 \n    rp=len(pc)\n    while lp<rp:\n        mid = (lp+rp)//2\n        if pc[mid] <= r:\n            lp = mid+1\n        else:\n            rp = mid\n        \n    \n    return ans + lp\nq = int(input())\n\npc= c1(1e18+1)\n\n\npca=list(pc)\npca.sort()\n        \n \nfor i in range(q):\n    l,r = [int(x) for x in sys.stdin.readline().split()]\n    ans=solve(r,pca)-solve(l-1,pca)\n    sys.stdout.write(str(ans)+'\\n')\n"]