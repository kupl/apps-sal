["for i in range(int(input())):\n    n, k, d = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = d\n    for day in range(n - d + 1):\n        ans = min(ans, len(set(a[day:day + d])))\n    print(ans)", "t=int(input())\nfor p in range(t):\n    n,k,d=[int(x) for x in input().split()]\n    a=[int(x) for x in input().split()]\n    arr=10**100\n    for i in range(0,n-d+1):\n        b=set()\n        for j in range(i,i+d):\n            b.add(a[j])\n        arr=min(arr,len(b))\n        b=set()\n    print(arr)\n", "Q = int(input())\nfor q in range(Q):\n    n, k, d = tuple(map(int, input().split()))\n    arr = list(map(int, input().split()))\n\n    nums = {}\n    for i in range(d):\n        if arr[i] in nums:\n            nums[arr[i]] += 1\n        else:\n            nums[arr[i]] = 1\n\n    ans = len(nums)\n    for i in range(d, n):\n        if nums[arr[i - d]] == 1:\n            nums.pop(arr[i - d])\n        else:\n            nums[arr[i - d]] -= 1\n\n        if arr[i] in nums:\n            nums[arr[i]] += 1\n        else:\n            nums[arr[i]] = 1\n        ans = min(ans, len(nums))\n\n    print(ans)\n", "from math import inf\nfor _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    data = tuple(map(int, input().split()))\n    best = inf\n    for i in range(n - d + 1):\n        best = min(best, len(set(data[i:i + d])))\n    print(best)\n", "for _ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    s = {}\n    for q in range(d):\n        s[a[q]] = s.get(a[q], 0)+1\n    ans = len(s)\n    for q in range(d, n):\n        if s[a[q-d]] == 1:\n            del s[a[q-d]]\n        else:\n            s[a[q-d]] -= 1\n        s[a[q]] = s.get(a[q], 0)+1\n        ans = min(ans, len(s))\n    print(ans)\n", "INT_MAX = int(1e9 + 7)\n\nt = int(input())\n\nfor _ in range(t):\n\tn, k, d = list(map(int, input().split(' ')))\n\ta = list(map(int, input().split(' ')))\n\n\tans = INT_MAX\n\tfor i in range(len(a) - d + 1):\n\t\tans = min(ans, len(set(a[i:i + d])))\n\n\tprint(ans)\n", "for __ in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    A = dict()\n    num = 0\n    for i in range(d):\n        if ar[i] in A:\n            A[ar[i]] += 1\n        else:\n            A[ar[i]] = 1\n            num += 1\n    ans = num\n    for j in range(d, n):\n        A[ar[j - d]] -= 1\n        if A[ar[j - d]] == 0:\n            num -= 1\n        if ar[j] in A:\n            if A[ar[j]] == 0:\n                num += 1\n            A[ar[j]] += 1\n        else:\n            A[ar[j]] = 1\n            num += 1\n        ans = min(num, ans)\n    print(ans)", "t = int(input())\nfor z in range(t):\n    n, k, d = map(int, input().split())\n    arr = list(map(int, input().split()))\n    m = dict([[i, 0] for i in range(k + 1)])\n    emp = set()\n    \n    for i in range(d):\n        x = arr[i]\n        m[x] += 1\n        emp.add(x)\n    \n    mn = len(emp)\n    for i in range(d, n):\n        x = arr[i - d]\n        m[x] -= 1\n        if m[x] == 0:\n            emp.remove(x)\n        \n        x = arr[i]\n        m[x] += 1\n        emp.add(x)\n        mn = min(mn, len(emp))\n    print(mn)", "import sys\ninput = sys.stdin.readline\n\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n\n## -------------------------------\n\nt = getInt()\nfor _ in range(t):\n    n, k, d = getVars()\n    a = getList()\n    b = {}\n    for i in range(d):\n        if a[i] not in b:\n            b[a[i]] = 0\n        b[a[i]] += 1\n    res = len(list(b.keys()))\n    for i in range(d, n):\n        b[a[i-d]] -= 1\n        if b[a[i-d]] == 0:\n            del b[a[i-d]]\n        if a[i] not in b:\n            b[a[i]] = 0\n        b[a[i]] += 1     \n        res = min(res, len(list(b.keys())))\n    print(res)\n", "import math\ndef test():\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = math.inf\n    for i in range(len(a)):\n        se = set()\n        if i + d <= len(a):\n            for j in range(i, i+d):\n                se.add(a[j])\n            ans = min(ans, len(se))\n    print(ans)\n\n\ndef print2d(a):\n    for i in a:\n      print(' '.join(list(map(str, i))))\n\nt = int(input())\n\nfor i in range(t):\n    test()", "t = int(input())\nfor i in range(t):\n    n,k,d = map(int,input().split())\n    minn = k\n    a = [int(i) for i in input().split()]\n    for i in range(n - d + 1):\n        m = set(a[i:i + d])\n        minn = min(minn,len(m))\n    print (minn)", "t = int(input())\nfor q in range(t):\n        n, k, d = map(int, input().split())\n        a = [int(i) for i in input().split()]\n        m = n\n        for i in range(0, n-d+1):\n                if len(set(a[i:i+d])) < m:\n                        m = len(set(a[i:i+d]))\n        print(m)", "def count(serials, start, end):\n    return len(set(serials[start:end]))\n\nt = int(input())\n\ntoprint = []\n\nfor tnum in range(t):\n    n, k, d = list(map(int, input().split()))\n    serials = list(map(int, input().split()))\n\n    ans = d + 1\n\n    for s in range(n - d + 1):\n        ans = min(ans, count(serials, s, s + d))\n\n    toprint.append(ans)\n\nfor i in toprint:\n    print(i)", "t = int(input())\n\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    answer = d\n    films = tuple(int(v) for v in input().split())\n    for l in range(n - d + 1):\n        s = len(set(films[l:l + d]))\n        if answer > s:\n            answer = s\n        if answer == 1:\n            break\n    print(answer)\n\n", "t = int(input())\nfor i in range(t):\n    n, k, d = list(map(int, input().split()))\n    L = list(map(int, input().split()))\n    Balance = [0] * k\n    Is = 0\n    for i in range(d):\n        Balance[L[i] - 1] += 1\n        if Balance[L[i] - 1] == 1:\n            Is += 1\n    minIs = Is\n    for i in range(d, n):\n        Balance[L[i - d] - 1] -= 1\n        if Balance[L[i - d] - 1] == 0:\n            Is -= 1\n        Balance[L[i] - 1] += 1\n        if Balance[L[i] - 1] == 1:\n            Is += 1\n        if Is < minIs:\n            minIs = Is\n    print(minIs)\n", "t = int(input())\nfor _ in range(t):\n    n, k, d = map(int, input().split())\n    a = list(map(int, input().split()))\n    res = d\n    for i in range(n-d+1):\n        res = min(res, len(set(a[i:d+i])))\n    print(res)", "t = int(input())\nfor i in range(t):\n    n, k, d = list(map(int, input().split()))\n    mass = [int(i) - 1 for i in input().split()]\n    arr = [0 for z in range(k)]\n    kol = 0\n    for j in range(d):\n        if arr[mass[j]] == 0:\n            kol += 1\n        arr[mass[j]] += 1\n    minn = kol\n    for j in range(d, n):\n        if arr[mass[j - d]] == 1:\n            kol -= 1\n        arr[mass[j - d]] -= 1\n        if arr[mass[j]] == 0:\n            kol += 1\n        arr[mass[j]] += 1\n        minn = min(minn, kol)\n    print(minn)\n        \n        \n", "for i in range(int(input())):\n    n, k, d = map(int, input().split())\n    a = list(map(int, input().split()))\n    mn = 1000000000000\n    for i in range(n - d + 1):\n        b = set(a[i : i + d])\n        if len(b) < mn:\n            mn = len(b)\n    print(mn)", "import array, bisect, collections, copy, fractions, functools, heapq, itertools, math, random, re, string, sys, time, os, timeit\n\nsys.setrecursionlimit(10000000)\ninf = float('inf')\n\ndef li(): return [int(x) for x in sys.stdin.readline().split()]\ndef li_(): return [int(x) - 1 for x in sys.stdin.readline().split()]\ndef lf(): return [float(x) for x in sys.stdin.readline().split()]\ndef ls(): return sys.stdin.readline().split()\ndef int_inp(): return int(sys.stdin.readline())\ndef float_inp(): return float(sys.stdin.readline())\ndef inp(): return sys.stdin.readline().strip()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    # input\n    if os.path.exists('input.txt'):\n        sys.stdin = open('input.txt', 'r')\n    t = int_inp()\n    ans = []\n    for _ in range(t):\n        n, k, d = li()\n        a = li()\n        x = 1000\n        for i in range(n - d + 1):\n            x = min(x, len(set(a[i:i + d])))\n        ans.append(x)\n    print(*ans, sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "t = int(input())\n\nans = []\nfor i in range(t):\n    n, k, d = map(int,input().split())\n    days = list(map(int,input().split()))\n    add = float(\"inf\")\n\n    for j in range(d, n + 1):\n        add = min(add, len(list(set(days[j - d:j]))))\n\n    ans.append(add)\n\nprint(*ans, sep='\\n')\n", "t = int(input())\nfor i in range(t):\n  n, k, d = map(int, input().split())\n  a = list(map(int, input().split()))\n  ans = 10000\n  for j in range(n - d + 1):\n    kol_d = 0\n    tmp = []\n    for i in range(j, j + d + 1):\n      if kol_d >= d:\n        break\n      if a[i] in tmp:\n        kol_d += 1\n      else:\n        tmp.append(a[i])\n        kol_d += 1\n    #print(tmp)\n    ans = min(len(tmp), ans)\n  print(ans)", "for i in range(int(input())):\n    n, k, d = map(int, input().split())\n    s = list(map(int, input().split()))\n    ch = set()\n    for i in range(n - d + 1):\n        ch.add(len(set(s[i:i + d])))\n    print(min(ch))", "t = int(input())\nfor i in range(t):\n    n, k, d = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    b = dict()\n    for i in range(n):\n        b[a[i]] = 0\n    count = 0\n    for i in range(d):\n        if b[a[i]] == 0:\n            count += 1\n        b[a[i]] += 1\n    \n    ans = count\n    for i in range(n - d):\n        if b[a[i]] == 1:\n            count -=1\n        b[a[i]] -= 1\n        if b[a[i + d]] == 0:\n            count += 1\n        b[a[i + d]] += 1\n        ans = min(ans, count)\n    print(ans)\n", "def main():\n    n, k, d = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    rez = d\n    for i in range(n - d + 1):\n        rez = min(rez, len(set(l[i:i+d])))\n    print(rez)\n\n\n\nt = int(input())\nfor i in range(t):\n    main()\n", "t = int(input())\nans = []\nfor _ in range(t):\n    n, k, d = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    var = []\n    for g in range(n - d + 1):\n        var.append(set(a[g:g + d]))\n    ans.append(min([len(x) for x in var]))\nprint('\\n'.join([str(x) for x in ans]))\n"]