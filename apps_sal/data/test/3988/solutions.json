["def put():\n  return list(map(int, input().split()))\n\ndef dfs(x,flag=1):\n    s,vis,ans   = [x],[0]*n,['+']*m\n    vis[x]= 1\n    while s:\n        i = s.pop()\n        for j,k in graph[i]:\n            if vis[j]==0:\n                if k*flag<0:\n                    ans[abs(k)-1]='-'\n                elif k*flag>0:\n                    ans[abs(k)-1]='+'\n                if flag==1 or k==0:\n                    s.append(j)\n                    vis[j]=1\n    return ''.join(ans), sum(vis)\n\nn,m,s = put()\ngraph = [[] for i in range(n)]\nk=1\nfor _ in range(m):\n    z,x,y = put()\n    x,y = x-1,y-1\n    if z==1:\n        graph[x].append((y, 0))\n    else:\n        graph[x].append((y, k))\n        graph[y].append((x,-k))\n        k+=1\nm = k-1\nx,y = dfs(s-1, 1)\nprint(y)\nprint(x)\nx,y = dfs(s-1,-1)\nprint(y)\nprint(x)\n", "import sys\ninput = sys.stdin.readline\ndef put():\n  return list(map(int, input().split()))\n\ndef dfs(x,flag=1):\n    s,vis,ans   = [x],[0]*n,['+']*m\n    vis[x]= 1\n    while s:\n        i = s.pop()\n        for j,k in graph[i]:\n            if vis[j]==0:\n                if k*flag<0:\n                    ans[abs(k)-1]='-'\n                elif k*flag>0:\n                    ans[abs(k)-1]='+'\n                if flag==1 or k==0:\n                    s.append(j)\n                    vis[j]=1\n    return ''.join(ans), sum(vis)\n\nn,m,s = put()\ngraph = [[] for i in range(n)]\nk=1\nfor _ in range(m):\n    z,x,y = put()\n    x,y = x-1,y-1\n    if z==1:\n        graph[x].append((y, 0))\n    else:\n        graph[x].append((y, k))\n        graph[y].append((x,-k))\n        k+=1\nm = k-1\nx,y = dfs(s-1, 1)\nprint(y)\nprint(x)\nx,y = dfs(s-1,-1)\nprint(y)\nprint(x)\n", "import sys\ninput = sys.stdin.readline\n\ndef put():\n  return list(map(int, input().split()))\n\n\n\n\ndef dfs0(x):\n  s = [x]\n  vis = [0] * n\n  ans = ['+'] * m\n  vis[x] = 1\n  while s:\n    i = s.pop()\n    for j, k in graph[i]:\n      if (vis[j] == 0):\n        if (k < 0):\n          ans[-k - 1] = '-'\n        elif (k > 0):\n          ans[k - 1] = '+'\n        \n          \n        s.append(j)\n        vis[j] = 1\n\n  return ''.join(ans), sum(vis)\n\ndef dfs1(x):\n  s = [x]\n  vis = [0] * n\n  ans = ['+'] * m\n  vis[x] = 1\n  while s:\n    i = s.pop()\n    for j, k in graph[i]:\n      if (vis[j] == 0):\n        if (k < 0):\n          ans[-k - 1] = '+'\n        elif (k > 0):\n          ans[k - 1] = '-'\n        if (k == 0):\n          s.append(j)\n          vis[j] = 1\n\n  return ''.join(ans), sum(vis)\n\n        \n\n  \n\n\n\n\nn,m,s = put()\ngraph = [[] for i in range(n)]\n\nk = 1\n\nfor _ in range(m):\n  z,x,y = put()\n  x,y = x - 1, y - 1\n  if (z == 1):\n    graph[x].append((y, 0))\n  else:\n    graph[x].append((y, k))\n    graph[y].append((x, -k))\n    k += 1\n\nm = k - 1\nx, y = dfs0(s - 1)\nprint(y)\nprint(x)\nx, y = dfs1(s - 1)\nprint(y)\nprint(x)\n\n"]