["import sys\nreadline = sys.stdin.readline\n\n# f\u304c\u6765\u305f\u3089stack\u306b[0]\u3092append\u3059\u308b\u3002\n# o\u304c\u6765\u305f\u3068\u304d\u3001\u6700\u5f8c\u5c3e\u304c[0]\u3060\u3063\u305f\u3089[1]\u306b\u3059\u308b\n# x\u304c\u6765\u305f\u3068\u304d\u3001\u6700\u5f8c\u5c3e\u304c[1]\u306a\u3089pop\u3059\u308b\u3002\u3053\u306e\u3068\u304d3\u3092\u5f15\u304f\n\nN = int(readline())\nS = readline().rstrip()\n\nans = N\nstack = []\n\nfor s in S:\n  if s == \"f\":\n    stack.append(0)\n  elif s == \"o\":\n    if stack and stack[-1] == 0:\n      stack[-1] = 1\n    else:\n      # \u6700\u5f8c\u304cf\u3067\u306a\u3044\u72b6\u614b\u3067o\u304c\u6765\u305f\u6642\u3001\u3053\u306eo\u304c\u6d88\u3048\u308b\u3053\u3068\u306f\u306a\u3044\u3002\n      stack = []\n  elif s == \"x\":\n    if stack and stack[-1] == 1:\n      stack.pop()\n      ans -= 3\n    else:\n      stack = []\n  else:\n    stack = []\n      \nprint(ans)", "input()\na=input()\nres = \"\"\nfor c in a:\n\tres += c\n\tif res.endswith(\"fox\"):\n\t\tres = res[:-3]\nprint(len(res))", "N=int(input())\nS=input()\nT=\"\"\nfor s in S:\n  if s in \"fox\":\n    T+=s\n    if T[-3:]==\"fox\":\n      T=T[:-3]\n      N-=3\n  else:\n    T=\"\"\nprint(N)", "from collections import deque\n\n\ndef remove_fox(stack):\n    if len(stack) < 3:\n        return\n    p1, p2, p3 = stack.pop(), stack.pop(), stack.pop()\n    jd = p3 + p2 + p1\n    if jd != \"fox\":\n        stack.append(p3)\n        stack.append(p2)\n        stack.append(p1)\n\n\ndef __starting_point():\n    n = int(input())\n    s = input()\n    t = deque()\n    for si in s:\n        t.append(si)\n        remove_fox(t)\n    print((len(t)))\n\n__starting_point()", "n=int(input())\ns=input()\ns2=[]\nfor i in range(n):\n    s2.append(s[i])\n    while len(s2) > 2:\n        if s2[-1] == 'x' and s2[-2]=='o' and s2[-3] == 'f':\n            s2.pop()\n            s2.pop()\n            s2.pop()\n        else:\n            break\nwhile len(s2) > 2:\n        if s2[-1] == 'x' and s2[-2]=='o' and s2[-3] == 'f':\n            s2.pop()\n            s2.pop()\n            s2.pop()\n        else:\n            break\nprint(len(s2))", "n = int(input())\ns = input()\n\nt = ''\nfor c in s:\n    t += c\n    if t[-3:] == 'fox':\n        t = t[:-3]\n\nprint(len(t))", "N = int(input())\ns = input()\n\ni = 0\nwhile i < len(s) - 2:\n  if s[i:i+3] == \"fox\":\n    s = s[:i] + s[i+3:]\n    i -= 2\n  else:\n    i += 1\n\nprint(len(s))", "N=int(input())\narray=input()\ntrash=[]\ncount=0\nfor i in range(N):\n\ttrash.append(array[i])\n\tcount+=1\n\tif count>=3:\n\t\tif trash[-1]=='x' and trash[-2]=='o' and trash[-3]=='f':\n\t\t\tdel trash[-1]\n\t\t\tdel trash[-1]\n\t\t\tdel trash[-1]\n\t\t\tcount-=3\nprint(count)", "N = int(input())\ns = input()\n\nque = []\nfor i in range(N):\n    que.append(s[i])\n    if len(que) >= 3 and que[-3:] == ['f', 'o', 'x']:\n        que.pop()\n        que.pop()\n        que.pop()\nprint((len(que)))\n", "n = int(input())\ns = input()\n\nt = \"\"\nfor i in range(n):\n    t += s[i]\n    #print(\"t1 = \" + t)\n    while len(t) >= 3 and t[-3:] == \"fox\":\n        t = t[:-3]\n        #print(\"t2 = \" + t)\nprint((len(t)))\n", "N = int(input())\nr = []\nfor i in list(input()):\n    r.append(i)\n    while 1:\n        if 3 <= len(r) and r[len(r)-3:] == [\"f\", \"o\", \"x\"]:\n            for j in range(3):\n                r.pop()\n        else:\n            break\nprint(len(r))", "N = int(input())\nS = list(input())\n\nL = []\nfor s in S:\n    if len(L) >= 2 and s == 'x':\n        if L[-2] == 'f' and L[-1] == 'o':\n            L.pop()\n            L.pop()\n        else:\n            L.append(s)\n    else:\n        L.append(s)\n\nprint(len(L))", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[ ]:\n\n\nn=int(input())\ns=input()\nans=''\nfor i in s:\n  ans+=i\n  if ans[-3:]=='fox': ans=ans[:-3]\nprint((len(ans)))\n\n", "from collections import deque\n\nn = int(input())\nS = input()\n\nindex = 0\ncnt = 0\n\nq = deque()\nq.append(index)\n\nfor s in S:\n        \n    if(s == \"f\"):\n        index = 1\n        q.append(index)\n    elif(s == \"o\"):\n        index = q.pop()\n        if(index == 1):\n            index = 2\n        else:\n            index = 0\n        q.append(index)\n    elif(s == \"x\"):\n        index = q.pop()\n        if(index == 2):\n            cnt += 1\n        else:\n            index = 0\n            q.append(index)\n    else:\n        index = q.pop()\n        index = 0\n        q.append(index)\nans = n - 3 * cnt\nprint(ans)", "n = int(input())\ns = input()\nls = []\nfor i in range(n):\n    ls.append(s[i])\n    if len(ls) > 2:\n        if ls[-3] == \"f\" and ls[-2] == \"o\" and ls[-1] == \"x\":\n            n-=3\n            ls.pop()\n            ls.pop()\n            ls.pop()\nprint(n)\n", "n = int(input())\ns = input()\ntmp = []\nfor i in s:\n    tmp.append(i)\n    if len(tmp) >= 3:\n        if tmp[-3:] == [\"f\",\"o\",\"x\"]:\n            tmp.pop()\n            tmp.pop()\n            tmp.pop()\n        \nprint((len(tmp)))\n", "n = int(input())\ns = input()\nt = []\nfor i in range(n):\n    t.append(s[i])\n    if len(t) >= 3 and t[-3:] == [\"f\", \"o\", \"x\"]:\n        t.pop()\n        t.pop()\n        t.pop()\nprint((len(t)))\n", "input()\na=input()\nres = \"\"\nfor c in a:\n\tres += c\n\tif res.endswith(\"fox\"):\n\t\tres = res[:-3]\nprint(len(res))", "n = int(input())\ns = input()\n\nt = \"\"\n\nfor c in s:\n    t += c\n    while len(t) >= 3 and t[-3:] == 'fox':\n        t = t[:-3]\n\nprint((len(t)))\n", "_ = input()\ns1 = list(input())\ns2 = []\n\nfor c in s1:\n    try:\n        if c == \"x\" and s2[-1] == \"o\" and s2[-2] == \"f\":\n            s2.pop()\n            s2.pop()\n        else:\n            s2.append(c)\n    except:\n        s2.append(c)\n    \n\nprint((len(s2)))\n", "n = int(input())\nt = input()\ns = []\nfor i in range(n):\n\ts.append(t[i])\n\tif len(s) > 2 and s[-3:] == [\"f\", \"o\", \"x\"]:\n\t\tfor _ in range(3):\n\t\t\ts.pop()\nprint(len(s))", "import sys\n\n# B - Abbreviate Fox\nN = int(input())\ns = input()\nt = ''\n\nfor c in s:\n  t += c\n\n  if t.endswith('fox'):\n    t = t[:len(t)-3]\n\nprint(len(t))", "input()\na=input()\nres = \"\"\nfor c in a:\n\tres += c\n\tif res.endswith(\"fox\"):\n\t\tres = res[:-3]\nprint(len(res))", "N = int(input())\nS = input()\n\nR = ''\n\nrep = 'fox'\nnxt = 0\nans = 0\nfor i in range(N):\n    found = False\n    for k in range(3):\n        if S[i] == rep[k]:\n            R += rep[k]\n            found = True\n    if not found:\n        R = ''\n    if R[-3:] == rep:\n        ans += 1\n        R = R[:-3]\nprint((N-ans*3))\n", "ans = int(input())\nS = input()\nstack = []\nfor c in S:\n    stack.append(c)\n    if 3 <= len(stack) and stack[-3] == 'f' and stack[-2] == 'o' and stack[-1] == 'x':\n        stack.pop()\n        stack.pop()\n        stack.pop()\n        ans -= 3\nprint(ans)", "n = int(input())\ns = list(input())\nans = []\nfor c in s:\n\tans.append(c)\n\tif ''.join(ans[-3:])=='fox':\n\t\tans.pop()\n\t\tans.pop()\n\t\tans.pop()\nprint(len(ans))", "import sys\nreadline = sys.stdin.readline\n\n# f\u304c\u6765\u305f\u3089stack\u306b[0]\u3092append\u3059\u308b\u3002\n# o\u304c\u6765\u305f\u3068\u304d\u3001\u6700\u5f8c\u5c3e\u304c[0]\u3060\u3063\u305f\u3089[1]\u306b\u3059\u308b\n# x\u304c\u6765\u305f\u3068\u304d\u3001\u6700\u5f8c\u5c3e\u304c[1]\u306a\u3089pop\u3059\u308b\u3002\u3053\u306e\u3068\u304d3\u3092\u5f15\u304f\n\nN = int(readline())\nS = readline().rstrip()\n\nans = N\nstack = []\n\nfor s in S:\n  if s == \"f\":\n    stack.append(0)\n  elif s == \"o\":\n    if stack and stack[-1] == 0:\n      stack[-1] = 1\n    else:\n      # \u6700\u5f8c\u304cf\u3067\u306a\u3044\u72b6\u614b\u3067o\u304c\u6765\u305f\u6642\u3001\u3053\u306eo\u304c\u6d88\u3048\u308b\u3053\u3068\u306f\u306a\u3044\u3002\n      stack = []\n  elif s == \"x\":\n    if stack and stack[-1] == 1:\n      stack.pop()\n      ans -= 3\n    else:\n      stack = []\n  else:\n    stack = []\n      \nprint(ans)", "N=int(input())\nS=input()\nT=[]\nn=0\n\n\nfor s in S:\n  T.append(s)\n  if T[-3:]==['f','o','x']:\n    T.pop()\n    T.pop()\n    T.pop()\n    n+=1\nprint(len(S)-3*n)", "from collections import deque\nn = int(input())\ns = deque(list(input()))\nans = deque()\n\nwhile s:\n    ans.append(s.popleft())\n    if len(ans) >= 3:\n        if ans[-3] == 'f' and ans[-2] == 'o' and ans[-1] == 'x':\n            for _ in range(3): ans.pop()\n\nprint(len(ans))", "A = input()\nB = input()\n\nif int(A) == len(B):\n    x = ''\n    for i in B:\n        x += i\n        if x[-3:] == 'fox':\n            x = x[0:len(x)-3]\n    print(len(x))", "n=int(input())\nS=input()\n\nans=\"\"\nfor s in S:\n    ans+=s\n    \n    if ans[-3:] == \"fox\":\n        ans=ans[0:-3]\n        \nprint(len(ans))", "n = int(input())\ns = list(input())\nt = []\nfor i in range(n):\n    t.append(s[i])\n    if len(t) >= 3 and t[-3] + t[-2] + t[-1] == \"fox\":\n        t.pop(-1)\n        t.pop(-1)\n        t.pop(-1)\nprint(len(t))", "l = int(input())\ntext = input()\ntgt, ans = 'fox', ''\n\nfor i in range(l):\n    ans += text[i]\n    if ans[-3:] == tgt:\n        ans = ans[:-3]\nprint(len(ans))", "N = int(input())\ns = input()\nt = ''\n\nfor i in range(len(s)):\n    t += s[i]\n    if t.endswith('fox'):\n        t = t[:-3]\nprint((len(t)))\n", "N=int(input())\nS=input()\nT=\"\"\nfor s in S:\n  T+=s\n  if T[len(T)-3:len(T)]==\"fox\":\n    T=T[:len(T)-3]\nprint(len(T))", "N = int(input())\ns = str(input())\n\nt = \"\"\n\nfor i in range(N):\n    t = t + s[i]\n    if t[-3:] == \"fox\":\n        t = t[:len(t)-3]\n\nprint(len(t))", "def main():\n    _ = int(input())\n    s = input()\n\n    st = []\n    for c in s:\n        if c == 'x':\n            if len(st) >= 2 and st[-1] == 'o' and st[-2] == 'f':\n                for _ in range(2):\n                    st.pop()\n                continue\n        st.append(c)\n    ans = len(st)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\ns=list(input())\nfrom collections import deque\nq=deque(s)\np=[]\n\nwhile q:\n  a=q.popleft()\n  if a!=\"x\":\n    p.append(a)\n    continue\n  # \u3053\u3053\u3067\u306fa==x\u3092\u307f\u305f\u3059\n  try:\n    f=p[-2]\n    o=p[-1]\n    if f==\"f\" and o==\"o\":\n      p.pop()\n      p.pop()\n      continue\n  except:\n    pass\n  p.append(a)\nprint(len(p))#,p)", "n=int(input())\ns=list(input())\n\nfrom collections import deque\nq=deque()\n\nans=n\nfor i in range(n):\n  q.append(s[i])\n  if len(q)<=2:\n    continue\n  a=q.pop()\n  b=q.pop()\n  c=q.pop()\n  if c+b+a==\"fox\":\n    ans-=3\n  else:\n    q.append(c)\n    q.append(b)\n    q.append(a)\n \nprint(ans)\n", "n = int(input())\ns = list(input())\n\ncnt = 0\n\nwhile True:\n    for i in range(cnt, len(s)-2):\n        if s[i:i+3] == ['f', 'o', 'x']:\n            del s[i:i+3]\n            cnt = max(0, i-3)\n            break\n    else:\n        break\n    \nprint((len(s)))\n", "n = int(input())\ns = input()\nt = \"\"\nfor i in range(n):\n  t += s[i]\n  if t[len(t)-3:] == \"fox\":\n    t = t[:len(t)-3]\nprint(len(t))", "n = int(input())\ns = input()\n\nindex = 0\nwhile index < n:\n  if s[index:index+3] == 'fox':\n    s = s[0:index] + s[index+3:len(s)]\n    index -= 2\n  else:\n    index += 1\n\nprint(len(s))", "def resolve():\n    N = int(input())\n    S = list(input())\n    if N < 3:\n        print(N)\n    else:\n        now = S[:2]\n        ans = 0\n        for i in range(2, len(S)):\n            now.append(S[i])\n            #print(now)\n            if now[-3:] == [\"f\", \"o\", \"x\"]:\n                now.pop()\n                now.pop()\n                now.pop()\n                ans += 3\n\n        print(N-ans)\n\nresolve()", "N=int(input())\nS=input()\n\nT=\"\"\n\nfor i in range(N):\n    T=T+S[i]\n    if len(T)>2:\n        if T[-3]=='f' and T[-2]=='o' and T[-1]=='x':\n            T=T[:-3]\n\nprint(len(T))", "N=int(input())\nS=input()\n\n\nans=0\nque =\"\"\n\nfor s in S:\n    if s in [\"f\",\"o\"]:\n        que = \"\".join([que,s])\n    elif s==\"x\":\n        if len(que)>=2 and que[-2:]==\"fo\":\n            ans+=1\n            que=que[:-2]\n        else:\n            que=\"\"\n    else:\n        que=\"\"\n    #print(que)\nprint(N-3*ans)", "def main():\n    N = int(input())\n    S = input()\n    stack = []\n    cur = 0\n    ans = N\n    for c in S:\n        if c == \"f\" and cur != 0:\n            stack.append(cur)\n            cur = 1\n        elif c == \"f\" and cur == 0:\n            cur += 1\n        elif c == \"o\" and cur == 1:\n            cur += 1\n        elif c == \"x\" and cur == 2:\n            ans -= 3\n            if len(stack):\n                cur = stack.pop()\n            else:\n                cur = 0\n        else:\n            cur = 0\n            stack = []\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = input()\n\nl = []\nfor i in range(n):\n    l.append(s[i])\n    if len(l) >= 3 and ''.join(l[-3:]) == 'fox':\n        l.pop()\n        l.pop()\n        l.pop()\n\nprint((len(l)))\n", "n = int(input())\ns = input().strip()\nfrom collections import deque\n\nd = deque([])\nt = []\nct = 0\n\nfor i in s:\n    d.append(i)\n\nwhile len(d) != 0:\n    ch = d.popleft()\n    t.append(ch)\n    if len(t) >= 3 and t[-3:] == [\"f\", \"o\", \"x\"]:\n        t.pop()\n        t.pop()\n        t.pop()\n        ct += 1\n\n\nprint((len(t)))\n", "N = int(input())\nS = input()\na = \"\"\nfor i in range(N):\n    a += S[i]\n    if len(a)>=3 and a[-3]+a[-2]+a[-1]=='fox':\n        a = a[:-3]\nprint(len(a))", "n = int(input())\ns = input()\nt = \"\"\ncnt = 0\nfor si in s:\n    t += si\n    if len(t) >= 3 and t[-3:] == \"fox\":\n        cnt += 1\n        t = t[:-3]\nprint(n - cnt * 3)", "def main():\n  n = int(input())\n  s = str(input())\n  num = len(s)\n  n = 0\n  while True:\n    if n+3 > num:\n      break\n    if s[n:n+3] == \"fox\":\n      s = s[:n] + s[n+3:]\n      n = max(0, n-3)\n    else:\n      n += 1\n  print(len(s))\n    \ndef __starting_point():\n  main()\n__starting_point()", "n=int(input())\ns=input()\n\ntmp=\"\"\nresult=0\nfor word in s:\n    tmp+=word\n    if tmp[-3:]==\"fox\":\n        result+=1\n        tmp=tmp[:-3]\nprint(len(tmp))", "n=int(input())\ns=input()\nl=[]\nl.append(1) #to avoid stack underflow\nfor i in range(n):\n    if l[-1]==\"o\":\n        if l[-2]==\"f\" and s[i]==\"x\":\n            l.pop()\n            l.pop()\n        else:\n            l.append(s[i])\n    else:\n        l.append(s[i])\nprint((len(l)-1))\n", "n=int(input())\ns=input()\nl=[\"0\"]\nfor i in s:\n\tif l[-1]==\"o\":\n\t\tif l[-2]==\"f\" and i==\"x\":\n\t\t\tl.pop()\n\t\t\tl.pop()\n\t\telse:\n\t\t\tl.append(i)\n\telse:\n\t\tl.append(i)\nprint(len(l)-1)", "n = int(input())\ns = list(input())\nfrom collections import deque\nss = deque(s)\nt = deque()\n\nfor i in range(n):\n    p = ss.popleft()\n    t.append(p)\n    if len(t)>2 and t[-3]==\"f\" and t[-2]==\"o\" and t[-1]==\"x\":\n        t.pop()\n        t.pop()\n        t.pop()\nprint((len(t)))\n\n", "n = int(input())\ns = input()\ncnt = 0\na = []\nfor i in range(n):\n    a.append(s[i])\n    if len(a) >=3 and a[-3] == \"f\" and a[-2] == \"o\" and a[-1] == \"x\":\n        for _ in range(3):\n            a.pop()\nprint((len(a)))\n", "N=int(input())\ns=input()\nt=[]\nfor i in range(N):\n  t.append(s[i])\n  if len(t)>=3 and t[-3:]==[\"f\",\"o\",\"x\"]:\n    t.pop()\n    t.pop()\n    t.pop()\nprint(len(t))", "n = int(input())\ns = str(input())\n\nstack = []\nfor c in s:\n    if c == 'x':\n        if len(stack) < 2:\n            stack.append(c)\n        else:\n            if stack[-2] == 'f' and stack[-1] == 'o':\n                stack.pop()\n                stack.pop()\n            else:\n                stack.append(c)\n    else:\n        stack.append(c)\nprint((len(stack)))\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    N = int(input())\n    S = input().strip()\n    lenS = len(S)\n    i = 1\n    while i < lenS-1:\n        if S[i] == 'f':\n            i += 1\n            continue\n        if S[i] != 'o':\n            i += 2\n            continue\n        if S[i-1] == 'f' and S[i+1] == 'x':\n            lenS -= 3\n            S = S[:i-1] + S[i+2:]\n            i = max(1, i-2)\n        else:\n            i += 2\n    print(lenS)\n   \ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nl=list(input())\nt=[]\nfor i in range(n):\n    t.append(l[i])\n    if len(t)>=3 and t[-3:]==['f','o','x']:\n        for j in range(3):\n            t.pop()\nprint(len(t))", "n = int(input())\ns = input()\nt = \"\"\nx = 0\nfor i in range(n):\n  t += s[i]\n  x += 1\n  if x >= 3 and t[-3:] == \"fox\":\n    t = t[:-3]\n    x -= 3\n\nans = len(t)\nprint(ans)\n", "N = int(input())\ns = input()\n\nt = ''\nfor i in range(N):\n    t += s[i]\n    if t.endswith('fox'):\n        t = t[:-3]\nprint(len(t))", "N = int(input())\nS = input()\na = \"\"\nfor i in range(N):\n    a += S[i]\n    if 'fox' ==a[-3:]:\n        a = a[:-3]\nprint(len(a))", "N=int(input())\nS=\"\".join(input().split(\"fox\"))\nT=\"\"\nfor s in S:\n  T+=s\n  if T[len(T)-3:len(T)]==\"fox\":\n    T=T[:len(T)-3]\nprint(len(T))", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nfrom bisect import bisect_left,bisect_right \nimport sys,math,itertools,fractions,pprint\nfrom typing import Union\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn = inp()\ns = list(input())\nres = []\nfor i,x in enumerate(s):\n    res.append(x)\n    ln = len(res)\n    if ln >= 3 and res[ln-3:ln] == ['f','o','x']:\n        for _ in range(3): res.pop()\nprint(len(res))", "N=int(input())\ns=input()\n\nt=\"\";\nwhile len(s):\n  t+=s[0]\n  s=s[1:]\n  if t[-3:]==\"fox\":\n    t=t[:-3]\nprint(len(t))", "N = int(input())\ns = list(input())\nstack = []\ncnt = 0\nfor i in range(N):\n    if s[i] == \"f\":\n        stack.append(\"f\")\n    elif s[i] == \"o\" and len(stack) >= 1:\n        if not stack[-1] == \"f\":\n            stack = []\n        else:\n            stack.append(\"o\")\n    elif s[i] == \"x\" and len(stack) >= 2:\n        if stack[-2] == \"f\" and stack[-1] == \"o\":\n            stack.pop()\n            stack.pop()\n            cnt += 1\n        else:\n            stack = []\n    else:\n        stack = []\nprint((N - 3*cnt))\n", "n=int(input())\nl=list(input())\nt=[]\nfor i in range(n):\n    t.append(l[i])\n    if len(t)>=3 and t[-3:]==['f','o','x']:\n        for j in range(3):\n            t.pop()\nprint(len(t))", "N = int(input())\ns = input()\nt = \"\"\nfor n in range(N):\n  t += s[n]\n  while len(t) >= 3 and t[-3:] == \"fox\":\n    t = t[:-3]\nprint(len(t))", "N = int(input())\ns = input()\ntmp = ''\nfor i in s:\n    tmp += i\n    if len(tmp) >= 3 and tmp[-3] + tmp[-2] + tmp[-1] == 'fox':\n        tmp = tmp[:-3]\nprint(len(tmp))", "n=int(input())\ns=input()\n\nstk=[]\ncnt=0\nfor i in s:\n    if i in [\"f\",\"o\",\"x\"]:\n        stk.append(i)\n    else:\n        stk=[]\n\n    if i==\"x\":\n        if len(stk)>=3 and stk[-1] == \"x\" and stk[-2]==\"o\" and stk[-3] == \"f\":\n            stk.pop()\n            stk.pop()\n            stk.pop()\n            cnt+=1\n\nprint(n-3*cnt)", "N = int(input())\nS = input()\nans = \"\"\n\nfor s in S:\n  ans+=s\n  if ans[-3:]==\"fox\":\n    ans=ans[:-3]\n\nprint(len(ans))", "n = int(input())\ns = input()\n\n# \u89e3\u8aac\u3092\u898b\u3066\u3001\u5206\u304b\u3063\u305f\u3002\u3053\u308c\u306f\u601d\u3044\u3064\u304b\u306a\u3044\u3002\n# \u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u3053\u306a\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u9818\u57df\u3060\u3002\n# \u3044\u3084\u30fc\u306a\u308b\u307b\u3069\u3002\u9762\u767d\u3044\u3002\n\n# \u3053\u306e\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u3044\u304f\nwork = ''\n\nfor i in s:\n    work += i\n    if work[-3:] == 'fox':\n        work = work[:-3]\nprint(len(work))", "import sys\ninput = sys.stdin.readline\nN = int(input())\n\nS = input()\n\ncnt = 0\ntmp = []\nfor s in S:\n    tmp.append(s)\n    if len(tmp) <= 2:\n        continue\n    else:\n        if tmp[-1]==\"x\" and tmp[-2]==\"o\" and tmp[-3]==\"f\":\n            cnt += 1\n            for _ in range(3):\n                tmp.pop()\nprint((N-cnt*3))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tB_fix2\n# CreatedDate:  2020-11-21 21:26:09 +0900\n# LastModified: 2020-12-04 15:29:40 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N = int(input())\n    S = input()\n    T = \"\"\n    for s in S:\n        T += s\n        if len(T) >= 3 and T[-3:] == \"fox\":\n            T = T[:-3]\n    print((len(T)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = input()\n\nans = ''\n\nfor i in range(n):\n    ans += s[i]\n    if len(ans) < 3: continue\n    if ans[-3:] == 'fox':\n        ans = ans[:-3]\nprint(len(ans))", "n = int(input())\ns = input()\nt = ''\nfor ss in s:\n  t += ss\n  if len(t) >=3:\n    if t[len(t)-3:len(t)] == 'fox':\n      t = t[:len(t)-3]\n\nprint(len(t))", "n = int(input())\ns = str(input())\n\nstack = []\nfor c in s:\n    if c == 'x':\n        if len(stack) < 2:\n            stack.append(c)\n        else:\n            if stack[-2] == 'f' and stack[-1] == 'o':\n                stack.pop()\n                stack.pop()\n            else:\n                stack.append(c)\n    else:\n        stack.append(c)\nprint((len(stack)))\n", "def solve():\n    n = int(input())\n    s = input()\n    stack = []\n    for c in s:\n        if c == 'x' and len(stack) >= 2 and stack[-1] == 'o' and stack[-2] ==  'f':\n            stack.pop()\n            stack.pop()\n        else:\n            stack.append(c)\n    print((len(stack)))\n\n\nsolve()\n", "N = int(input())\ns = input()\n\nt = ''\nfor i in range(N):\n    t += s[i]\n    if t[-3:] == 'fox':\n        t = t[:-3]\nprint(len(t))", "n=int(input())\ns=input()+\"zzz\"\nt=\"zzz\"\nans=n\ncnt=0\nfor i in range(n):\n    if cnt>=n+1:\n        break\n    if s[cnt:cnt+3]==\"fox\":\n        ans-=3\n        cnt+=3\n    else:\n        t+=s[cnt]\n        cnt+=1\n        if t[-3:]==\"fox\":\n            ans-=3\n            t=t[:-3]\nprint(ans)\n", "N = int(input())\nS = input()\n\nR = ''\n\nrep = 'fox'\nnxt = 0\nans = 0\nfor i in range(N):\n    R += S[i]\n    if len(R) >= 3 and R[-3:] == rep:\n        R = R[:-3]\n\nprint((len(R)))\n", "n = int(input())\ns = input()\n\nstack = []\n\nfor i in range(n):\n    stack.append(s[i])\n    while stack[-3:] == ['f', 'o', 'x']:\n        stack.pop()\n        stack.pop()\n        stack.pop()\n    \nprint(len(stack))", "N = int(input())\nS = input()\n\nR = ''\n\nrep = 'fox'\nnxt = 0\nans = 0\nfor i in range(N):\n    R += S[i]\n    if len(R) >= 3 and R[-3:] == rep:\n        R = R[:-3]\n\nprint((len(R)))\n", "n = int(input())\ns = input()\nq = ''\nsub = 0\nfor i in s:\n    q += i\n    if len(q) >= 3 and q[-3:] == 'fox':\n        sub += 3\n        q = q[:-3]\nprint(n - sub)", "n = int(input())\ns = input()\nt = \"\"\n\nfor i in range(n):\n  t += s[i]\n  if t[len(t)-3:] == \"fox\":\n    t = t[:len(t)-3]\n  \nprint(len(t))", "n = int(input())\ns = list(input())\na = []\nb = 0\nfor i in s:\n  a.append(i)\n  b += 1\n  if b>2:\n    if a[-3:]==[\"f\",\"o\",\"x\"]:\n      del a[-3:]\n      b-=3\nprint(b)", "N = int(input())\ns = input()\n\nt = ''\nfor i in s:\n    t += i\n    if t.endswith('fox'):\n        t = t[:-3]\nprint(len(t))", "n=int(input())\ns=str(input())\nans = 0\nt = \"\"\nfor i in range(n):\n  t += s[i]\n  if(len(t)>=3):\n    if(t[-3:]==\"fox\"):\n      t = t[0:-3]\n      ans += 1\nprint(n-ans*3)", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nS = readline().rstrip()\n\nT = \"\"\n\nfor s in S:\n  T += s\n  if len(T) >= 3 and T[-3:] == \"fox\":\n    T = T[:-3]\n    \nprint(len(T))", "def main():\n    N = int(input())\n    ans = N\n    stack = []\n    s = input()\n    for c in s:\n        if c == \"f\" or c == \"o\" or c == \"x\":\n            stack.append(c)\n        else:\n            stack.clear()\n        if c == \"x\":\n            if len(stack) >= 3 and stack[-2] == \"o\" and stack[-3] == \"f\":\n                ans -= 3\n                for i in range(3):\n                    stack.pop()\n        \n    return print(ans) \n\ndef __starting_point():\n    main()\n__starting_point()", "length = int(input())\nstring = input()\nans = []\nfor index in range(length):\n    if string[index] == \"x\" and len(ans) >= 2:\n        if ans[len(ans)-2] == \"f\" and ans[len(ans)-1] == \"o\":\n            ans.pop()\n            ans.pop()\n        else:\n            ans.append(string[index])\n    else:\n        ans.append(string[index])\nprint(len(ans))", "#!/usr/bin/env python\n\nn = int(input())\ns = input()\n\nt = ''\ncnt = 0 \nwhile len(s) > 0:\n    t += s[0]\n    s = s[1:]\n    if len(t) >= 3 and t[-3:] == 'fox':\n        cnt += 1\n        t = t[:-3]\n\nans = n-3*cnt\nprint(ans)\n", "input()\na=input()\nres = \"\"\nfor c in a:\n\tres += c\n\tif res.endswith(\"fox\"):\n\t\tres = res[:-3]\nprint(len(res))", "n = int(input())\ns = input()\nstack = []\nans = 0\nfor i in range(n):\n    if s[i] == 'f':\n        stack.append('f')\n    elif s[i] == 'o':\n        stack.append('o')\n    elif s[i] == 'x':\n        if len(stack) >= 2:\n            if stack[-1] == 'o' and stack[-2] == 'f':\n                ans += 1\n                stack.pop()\n                stack.pop()\n            else:\n                stack.clear()\n        else:\n            stack.clear()\n    else:\n        stack.clear()\nprint((n-ans*3))\n", "from collections import deque\nn = int(input())\ns = input()\nl_s = len(s)\ncnt = 0\nd = deque()\nfor i in s:\n    # print(i,d,cnt)\n    if i == \"x\":\n        if len(d) > 1:\n            o = d.pop()\n            f = d.pop()\n            if o == \"o\" and f == \"f\":\n                cnt += 1\n\n            else:\n                d.append(f)\n                d.append(o)\n                d.append(i)\n        else:\n            d.append(i)\n    else:\n        d.append(i)\n\nprint(l_s - 3*cnt)", "# \u89e3\u8aac\u3092\u898b\u3066\u89e3\u3044\u305f\n# \u7a7a\u6587\u5b57\u5217\u306b1\u6587\u5b57\u305a\u3064\u8db3\u3057\u3066\u3044\u304d\u672b\u5c3e3\u6587\u5b57\u304cfox\u306a\u3089\u53d6\u308a\u9664\u3051\u3070\u3088\u3044\n\nN = int(input())\ns = input()\n\nps = ''\n\nfor c in s:\n    ps += c\n    if ps[len(ps)-3:len(ps)] == 'fox':\n        ps = ps[0:len(ps)-3]\n\nprint(len(ps))", "n = int(input())\ns = input()\nss = s[:2]\ns = s[2:]\nfor x in s:\n    if ss[-2:] + x == 'fox':\n        ss = ss[:-2]\n    else:\n        ss += x\n\nprint(len(ss))"]