["import math\nMOD = int( 1e9 + 7 )\n\nN, M = map( int, input().split() )\nsn = int( math.sqrt( N ) )\n\nans = N * M % MOD\nfor i in range( 1, min( sn, M ) + 1, 1 ):\n  ans -= N // i * i\n\nans %= MOD\nif N // ( sn + 1 ) > M:\n  exit( print( ans ) )\n\nfor f in range( N // ( sn + 1 ), 0, -1 ):\n  s = lambda x: x * ( x + 1 ) // 2\n  if N // f > M:\n    ans -= f * ( s( M ) - s( N // ( f + 1 ) ) )\n    break\n  ans -= f * ( s( N // f ) - s( N // ( f + 1 ) ) )\n\nans %= MOD\nif ans < 0:\n  ans += MOD\nprint( ans )\n", "import math\n\nn, m = map(int, input().split())\nmod = pow(10, 9) + 7\nans = 0\nif n < m:\n    ans = n * (m - n) % mod\n    m = n\nns = int(math.sqrt(n))\nx = [0] * ns\nf = 1\nfor i in range(ns):\n    if i + 1 > m:\n        f = 0\n        break\n    x[i] = n // (i + 1)\n    ans += (n - x[i] * (i + 1))\n    ans %= mod\nfor i in range(ns + 1, max(ns + 1, x[-1] + 1)):\n    ans += n % i\n    ans %= mod\nif f:\n    for i in range(ns - 1):\n        if x[i + 1] >= m:\n            continue\n        c = x[i] - x[i + 1]\n        ans += ((n - x[i] * (i + 1)) * c + (i + 1) * c * (c - 1) // 2)\n        ans %= mod\n        if x[i] >= m > x[i + 1]:\n            c = x[i] - m\n            ans -= ((n - x[i] * (i + 1)) * c + (i + 1) * c * (c - 1) // 2)\n            ans %= mod\nprint(ans)"]