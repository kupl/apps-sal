["n = int(input())\n\ns = input()\ncode = input()\n\nres = 0\nfor i in range(n):\n    k = abs(int(s[i]) - int(code[i]))\n    res += min(k, 10 - k)\n\nprint(res)", "n = int(input())\nstring1 = input()\nstring2 = input()\nanswer = 0\nfor i in range(n):\n    answer += min(abs(int(string1[i]) - int(string2[i])), 10 - abs(int(string1[i]) - int(string2[i])))\nprint(answer)", "l = int(input())\ns1 = list(map(int, input().replace('', ' ').split()))\ns2 = list(map(int, input().replace('', ' ').split()))\nres = 0\nfor i in range(l):\n    res += min(abs(s1[i] - s2[i]), 10 - abs(s1[i] - s2[i]))\nprint(res)\n", "import sys\n\ndef get_d(d1, d2):\n    if d1 > d2:\n        d1, d2 = d2, d1\n    return min(d2 - d1, 10 - d2 + d1)\n\n#fin = open(\"input.txt\", 'r')\nfin = sys.stdin\n\nn = int(fin.readline())\ns1 = fin.readline().strip()\ns2 = fin.readline().strip()\nans = 0\nfor i in range(n):\n    ans += get_d(int(s1[i]), int(s2[i]))\nprint(ans)", "def solve(n, m):\n    return min(abs(n-m), abs(10+n-m), abs(10+m-n))\n\nn = int(input())\nS = input()\nT = input()\nans = 0\nfor s, t in zip(S, T):\n    ans += solve(int(s), int(t))\nprint(ans)\n", "n = int(input())\ns = input()\nt = input()\nans = 0\nfor i in range(n):\n    a = int(s[i])\n    b = int(t[i])\n    if a >= b:\n        ans += min(a - b, 10 + b - a)\n    else:\n        ans += min(b - a, 10 + a - b)\nprint(ans)\n", "n = int(input())\na = input()\nb = input()\n\ndef cnt(a, b):\n    a, b = int(a), int(b)\n    a, b = min(a,b), max(a,b)\n    return min(b-a, a+10-b)\n\nans = 0\nfor i in range(n):\n    ans += cnt(a[i], b[i])\n\nprint(ans)\n", "def diff(a, b):\n    return min((int(a) - int(b) + 10) % 10, (int(b) - int(a) + 10) % 10)\n\ndef __starting_point():\n    n = int(input())\n    total = 0\n    source = input()\n    target = input()\n    for i in range(len(source)):\n        total += diff(source[i], target[i])\n    print(total)\n\n__starting_point()", "n = int(input())\nstart = input()\ngoal = input()\n\ncount = 0\nfor s, g in zip(start, goal):\n    s = int(s)\n    g = int(g)\n    count += min(abs(s-g), abs(10 + s - g), abs(10 + g - s))\nprint(count)\n", "def f1(a,b):\n    return abs(a-b)\n\ndef f2(a,b):\n    a, b = max(a,b), min(a,b)\n    b += 10\n    return b-a\n\nn = int(input())\na = [int(x) for x in list(input())]\nb = [int(x) for x in list(input())]\n\n\nprint(sum(min(f1(x,y),f2(x,y)) for x,y in zip(a,b)))", "\n\ndef main():\n    n = int(input())\n    b = input()\n    a = input()\n    ans = 0\n    for i in range(n):\n        ans += min(abs(int(b[i])-int(a[i])), 10-abs(int(b[i])-int(a[i])))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nS1 = input()\nS2 = input()\n\ndef move(a, b):\n    return min(max(a,b)-min(a,b), min(a,b)+10-max(a,b))\n\nans = 0\nfor i in range(N):\n    ans += move(int(S1[i]),int(S2[i]))\n\nprint(ans)\n", "n = int(input())\ns = [int(k) for k in input()]\ns2 = [int(k) for k in input()]\nt = 0\nfor i in range(n):\n    t+=min((s[i]-s2[i])%10, (10-(s[i]-s2[i]))%10)\nprint(t)\n", "n = int(input())\nnum = input()\nnum2 = input()\nnum3 = 0\nfor i in range(n):\n    temp = abs(int(num[i]) - int(num2[i])) \n    num3 += min(temp,10 - temp)\nprint(num3)\n", "n = int(input())\na1 = input().strip()\na2 = input().strip()\nres = 0\nfor i in range(n):\n\tsymbA1 = int(a1[i])\n\tsymbA2 = int(a2[i])\n\tres += min(abs(symbA2-symbA1), abs(min(symbA2,symbA1) + 10 - max(symbA1, symbA2)))\nprint(res)", "n = int(input())\ns1 = [int(x) for x in input()]\ns2 = [int(x) for x in input()]\n\ndef min(a, b):\n\tif a < b:\n\t\treturn a\n\telse:\n\t\treturn b\n\nans = 0\nfor i in range(n):\n\tabso = abs(s1[i] - s2[i])\n\tans += min(abso, 10 - abso)\n\t\nprint(ans)", "import sys\nfrom math import *\n#sys.stdin = open('inp', 'r')\nn = int(input())\na, b = input(), input()\nans = 0\nfor i in range(n):\n    cur = int(a[i])\n    ok = int(b[i])\n    cnt1 = 0\n    cnt2 = 0\n    while cur != ok:\n        cur = (cur + 1) % 10\n        cnt1 += 1\n    cur = int(a[i])\n    while cur != ok:\n        if cur == 0:\n            cur = 9\n        else:\n            cur -= 1\n        cnt2 += 1\n    ans += min(cnt1, cnt2)\nprint(ans)\n", "\n\nn = int(input())\n\na, b = input(), input()\n\ns = 0\n\nfor i in range(n):\n\ttmp = ord(a[i]) - ord(b[i])\n\ttmp %= 10\n\tif tmp > 5:\n\t\ts += 10 - tmp\n\telse:\n\t\ts += tmp\n\nprint(s)", "\nimport math\n\n\n\nn=int(input())\ns1=input()\ns2=input()\n\nl=len(s1)\nsvar=0\nfor i in range(0,l):\n    x=abs(int(s1[i])-int(s2[i]))\n    y=abs(10-int(s1[i])+int(s2[i]))\n    z=abs(int(s1[i])+10-int(s2[i]))\n    svar+=min(x,y,z)\nprint(svar)\n\n    \n", "n=int(input())\ns1=input().strip()\ns2=input().strip()\nans=0\nfor i in range(n):\n    a, b = int(s1[i]), int(s2[i])\n    if a > b:\n        a, b=b, a\n    ans+=min(b-a, 9-b+a+1)\nprint(ans)", "n = int(input())\na1 = input()\na2 = input()\nsm = 0\nfor i in range(n):\n    q = int(a1[i])\n    w = int(a2[i])\n    sm += min(abs(q - w), min(q, w) + 10 - max(q, w))\nprint(sm)", "def turns(n,x,y):\n\tc = 0\n\tfor i in range(n):\n\t\ta = abs(int(x[i])-int(y[i]))\n\t\tif(a > 5):\n\t\t\ta = 10 - a\n\t\tc += a\n\treturn c\n\n\nn = int(input())\nx = input()\ny = input()\n\nprint(turns(n,x,y))", "z = list(map(int, input().split()))\nn= z[0]\ninp  = list(input())\nout = list(input())\nans = 0\nfor i in range(n):\n    if abs(int(inp[i]) - int(out[i])) > 5:\n        ans += 10 -abs(int(inp[i]) - int(out[i]))\n    else:\n        ans+=abs(int(inp[i]) - int(out[i]))\n        \nprint(ans)", "n = int(input())\na = input()\nb = input()\nans = 0\nfor i in range(len(a)):\n    x = int(a[i])\n    y = int(b[i])\n    ans += min(abs(y - x), min(10 + x - y, 10 + y - x))\nprint(ans)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nn = int(input())\n\ncode_old = input()\ncode_new = input()\n\nsteps = 0\n\nfor i in range(n):\n    steps_i = abs(int(code_new[i]) - int(code_old[i]))\n    if steps_i > 5:\n        steps_i = 10 - steps_i\n    steps += steps_i\n\nprint(steps)\n"]