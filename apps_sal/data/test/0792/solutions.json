["n, d = map(int, input().split())\nline = list(map(int, input().split()))\npref = [0] * n\nmaxx = 0\nfor i in range(n):\n    pref[i] = pref[max(i - 1, 0)] + line[i]\n    maxx = max(maxx, pref[i])\nmaxr = [0] * n\nfor i in range(n - 1, -1, -1):\n    if i == n - 1:\n        maxr[i] = pref[i]\n    else:\n        maxr[i] = max(maxr[i + 1], pref[i])\nsm = 0\nbon = 0\nans = 0\nb = True\nif maxx > d:\n    b = False\nfor i in range(n):\n    elem = line[i]\n    sm += elem\n    if elem == 0:\n        #print(sm, bon)\n        if sm + bon < 0:\n            ans += 1\n            bon += max(0, d - (maxr[i] + bon))\n        if sm + bon < 0:\n            b = False\n            break\n    if sm + bon > d:\n        b = False\n        break\nif b == False:\n    print(-1)\nelse:\n    print(ans)", "n,d=map(int,input().split())\na=list(map(int,input().split()))\nf=True\nb=[a[0]]\nfor i in range(1,n):\n    b.append(b[i-1]+a[i])\nif max(b)>d:\n    f=False\n        \nh=[0]*n\nh[n-1]=b[n-1]\nfor i in range(n-2,-1,-1):\n    h[i]=max(b[i],h[i+1])\nx,k=0,0\nfor i in range(n):\n    if a[i]==0 and b[i]+x<0:\n        k+=1\n        x+=d-(h[i]+x)\n        if b[i]+x<0:\n            f=False\n            break\nif f:\n    print(k)\nelse:\n    print(-1)", "n, d = [int(x) for x in input().split()]\ntr = [int(x) for x in input().split()]\ncash = 0\nflag = False\ngr = []\nfor i in tr:\n    if i != 0:\n        cash += i\n    gr.append(cash)\n    if cash > d:\n        flag = True\n        break\nif flag:\n    print(-1)\nelse:\n    mx = [-1] * n\n    mx[-1] = gr[-1]\n    for i in range(n - 2, -1, -1):\n        mx[i] = max(gr[i], mx[i + 1])\n    acash = 0\n    count = 0\n    for i in range(n):\n        if tr[i] == 0:\n            if gr[i] + acash < 0:\n                acash += (d - mx[i] - acash)\n                if gr[i] + acash < 0:\n                    count = -1\n                    break\n                count += 1\n    print(count)", "n, d = map(int, input().split())\na = list(map(int, input().split()))\npref = [0 for i in range(n)]\nc = 0\nfor i in range(n):\n    c += a[i]\n    if a[i] == 0:\n        c = max(0, c)\n    pref[i] = c\nsuff = [0 for i in range(n)]\nsuff[-1] = pref[-1]\nmc = suff[-1]\nfor i in range(n-2, -1, -1):\n    suff[i] = max(mc, pref[i])\n    mc = suff[i]\n    if a[i] == 0 and i > 0:\n        mc = pref[i-1]\nif max(suff) > d:\n    print(-1)\n    return\nc = 0\nans = 0\nfor i in range(n):\n    if a[i] != 0:\n        c += a[i]\n    else:\n        if c < 0:\n            ans += 1\n            c = max(0, c)\n            c += d - suff[i]\nprint(ans)", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/24 00:20\n\n\"\"\"\n\nN, D = map(int, input().split())\nA = [int(x) for x in input().split()]\n\npresum = [0] * (N+1)\n\nfor i in range(1, N+1):\n    presum[i] = presum[i-1] + A[i-1]\n\nrightmax = [0] * N\nmx = float('-inf')\nfor i in range(N-1, -1, -1):\n    mx = max(mx, presum[i+1])\n    rightmax[i] = mx\n\n# print(presum)\n# print(rightmax)\n\nif any(v > D for v in presum):\n    print(-1)\n    return\n\nans = 0\nadded = 0\nfor i in range(N):\n    if A[i] == 0:\n        if presum[i+1] + added < 0:\n            dmin = 0-presum[i+1]-added\n            dmax = min(D-presum[i+1]-added, D-added-rightmax[i])\n            if dmin > dmax:\n                print(-1)\n                return\n\n            added += dmax\n            ans += 1\nprint(ans)", "n, d = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\nb = [0] * (n + 2)\nb[n] = a[n]\nnow = a[n]\nfor i in range(n - 1 , 0 , -1):\n    now = a[i] + max(now, 0)\n    b[i] = now\nnow = 0\nres = 0\nfor i in range(1 , n + 1):\n    if a[i] == 0:\n        if now < 0:\n            res += 1\n            now = min(d, max(0, d - b[i + 1]))\n    else:\n        now += a[i]\n        if now > d:\n            res = -1\n            break\nprint(res)\n\n\n", "f = lambda: map(int, input().split())\nn, d = f()\nh = s = k = 0\nfor q in f():\n    h, s = h + q, min(d, s + q)\n    if h > d:\n        k = -1\n        break\n    if q == 0:\n        h = max(0, h)\n        if s < 0: s, k = d, k + 1\nprint(k)", "def main():\n\tn, d = map(int, input().split())\n\ta = list(map(int, input().split()))\n\t\n\tpref, mx, add, ans = [0] * n, [0] * n, 0, 0\n\n\tfor pos in range(n):\n\t\tpref[pos] = a[pos] if not pos else a[pos] + pref[pos-1]\n\n\tfor pos in range(n-1, -1, -1):\n\t\tmx[pos] = pref[pos] if pos == n - 1 else max(mx[pos + 1], pref[pos])\n\n\tfor i in range(n):\n\t\tif pref[i] + add > d:\n\t\t\tprint(\"-1\")\n\t\t\treturn\n\t\tif a[i] == 0 and pref[i] + add < 0:\n\t\t\tans += 1\n\t\t\tadd += max(-(pref[i] + add), d - mx[i] - add)\n\tprint(ans)\n\ndef __starting_point():\n\tmain()\n__starting_point()", "H,L,t=0,0,0\nn,d=map(int,input().split())\nfor i in map(int,input().split()):\n    if i==0:\n        if H<0:H=d;t+=1\n        L=max(L,0)\n    L+=i\n    H=min(d,H+i)\n    if L>d:print(-1);return()\nprint(t)", "[n, d] = [int(x) for x in input().split(' ')]\nA = [int(a) for a in input().split(' ')]\n\ndef solve():\n    ans = 0\n    bal = 0\n    minGap = 0\n    for i in range(n):\n        if A[i] == 0:\n            if bal < 0:\n                go = min(-bal, minGap)\n                minGap -= go\n                bal += go\n                if bal < 0:\n                    ans += 1\n                    bal = 0\n                    minGap = d\n        else:\n            bal += A[i]\n            if bal > d:\n                return -1\n            minGap = min(minGap, d - bal)\n    return ans\n\nprint(solve())", "n, d = list(map(int, input().split()))\nl = list(map(int, input().split()))\nmus = [0] * n\nmus[0] = l[0]\ncnt = 0\nans = 0\nfor i in range(1, n):\n    mus[i] = mus[i - 1] +  l[i]\nsuf = [0] * n\nsuf[-1] = mus[-1]\nfor i in range(n - 2, -1, -1):\n    suf[i] = max(mus[i], suf[i + 1])\nfor i in range(n):\n    if l[i] == 0 and mus[i] + cnt < 0:\n        if (d - suf[i] - cnt < 0 or d - suf[i] < abs(mus[i])):\n            print(-1)\n            return\n        else:\n            cnt += (d - suf[i]  - cnt)\n            ans += 1\nif suf[0] > d:\n    print(-1)\n    return\nprint(ans)", "#Bhargey Mehta (Sophomore)\n#DA-IICT, Gandhinagar\nimport sys, math, queue, bisect\n#sys.stdin = open(\"input.txt\", \"r\")\nMOD = 10**9+7\nsys.setrecursionlimit(1000000)\n\nn, d = map(int, input().split())\na = list(map(int, input().split()))\np = [0 for i in range(n)]\nfor i in range(n):\n    p[i] = p[i-1]+a[i]\nmx = [-1 for i in range(n)]\nmx[-1] = p[-1]\nfor i in range(n-2, -1, -1):\n    mx[i] = max(mx[i+1], p[i])\nc = 0\nans = 0\nfor i in range(n):\n    p[i] += c\n    if p[i] > d:\n        print(-1)\n        return\n    if a[i] != 0 or p[i] >= 0: continue\n\n    av = d-(mx[i]+c)\n    if -p[i] > av:\n        print(-1)\n        return\n    ans += 1\n    c = d-mx[i]\nprint(ans)", "import os\nimport sys\n\ndef log(*args, **kwargs):\n    if os.environ.get('CODEFR'):\n        print(*args, **kwargs)\n\n\n#n = int(input())\nn, d = tuple(map(int,input().split()))\na = list(map(int,input().split()))\n\ns = 0\nk = 0\ndep = 0\nfor i in a:\n    if i == 0:\n        if s < 0:\n            if dep < -s:\n                k += 1\n                dep = d\n            else:\n                dep += s\n            s = 0\n    else:\n        s += i\n        if s > d:\n            print(-1)\n            return\n        dep = min(dep, d - s)\n\nprint(k)\n", "R = lambda: map(int, input().split())\nn, k = R()\narr = list(R())\ntup = [0, 0]\nres = 0\nfor x in arr:\n    if x != 0:\n        tup[0], tup[1] = tup[0] + x, tup[1] + x\n        tup[1] = min(tup[1], k)\n    elif tup[1] < 0:\n        tup[0], tup[1] = 0, k\n        res += 1\n    else:\n        tup[0] = max(0, tup[0])\n    if tup[0] > k:\n        res = -1\n        break\nprint(res)", "H,L,t=0,0,0\nn,d=map(int,input().split())\nfor i in map(int,input().split()):\n    if i==0:\n        if H<0:H=d;t+=1\n        L=max(L,0)\n    L+=i\n    H=min(d,H+i)\n    if L>d:print(-1);return()\nprint(t)", "import sys\ninput = sys.stdin.readline\n\nn, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nub, lb = 0, 0\n\nfor x in a:\n    if x == 0:\n        if ub < 0:\n            ub, lb = d, 0\n            ans += 1\n        if lb < 0:\n            lb = 0\n    else:\n        ub = min(d, ub+x)\n        lb += x\n        if lb > d:\n            print(-1)\n            return\n\nprint(ans)\n", "n,d=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nm=0\nans=0 \nflag=True\nn=len(a)\nfor i in range(n):\n    if a[i]==0:\n        if s<0:\n            s=d\n            m=d\n            ans+=1\n        else:\n            m=min(m,s)\n    elif a[i]<0:\n        s=s+a[i] \n    else:\n        if(s+a[i]>d):\n            if(s+a[i]-d)>m:\n                flag=False\n                break \n            else:\n                m-=(s+a[i]-d)\n                s=d \n        else:\n            s=s+a[i] \nif flag:\n    print(ans)\nelse:\n    print(-1)", "import sys\n\nn, d = list(map(int, input().split()))\na = list(map(int, input().split()))\nub, lb = 0, 0\nans = 0\n\nfor x in a:\n    if x == 0:\n        if ub < 0:\n            ub, lb = d, 0\n            ans += 1\n        lb = max(lb, 0)\n    else:\n        ub = min(d, ub+x)\n        lb += x\n        if lb > d:\n            print(-1)\n            return\nprint(ans)\n"]