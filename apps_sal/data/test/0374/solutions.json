["from collections import deque\n\nn = int(input())\np = list(map(int,input().split()))\na = list(map(int,input().split()))\nedge = [[] for i in range(n)]\nfor i in range(n-1):\n    edge[p[i]-1].append(i+1)\n\n\ndp = [0 for i in range(n)]\nsize = [not edge[v] for v in range(n)]\n\nres = []\ndeq = deque([0])\nwhile deq:\n    v = deq.popleft()\n    res.append(v)\n    for nv in edge[v]:\n        deq.append(nv)\n\nres = res[::-1]\n\nfor v in res:\n    tmp = -1\n    S = 0\n    for nv in edge[v]:\n        tmp = max(tmp,dp[nv])\n        size[v] += size[nv]\n        S += a[nv]\n\n    if not edge[v]:\n        dp[v] = a[v]\n        continue\n\n    rest = tmp*size[v] - S\n    if a[v]<=rest:\n        dp[v] = tmp\n    else:\n        q = (a[v]-rest)//size[v]\n        r = (a[v]-rest)%size[v]\n        if r:\n            dp[v] = tmp + q + 1\n        else:\n            dp[v] = tmp + q\n    a[v] += S\n\nprint(dp[0])", "import sys\ninput = sys.stdin.readline\n#lev contains height from root,lower neighbour, higher neighbours\n#lev[0] contains 0 (because it is the root), higher neighbours (=neighbours)\nn=int(input())\np=list(map(int,input().split()))\np.insert(0,0)\nfor i in range(1,n):\n    p[i]-=1\na=list(map(int,input().split()))\ndata=[0]*n\nfor i in range(n):\n    data[i]=[0,a[i],True]\ni=n-1\nbiggest=0\nwhile i>0:\n    prev=p[i]\n    if data[i][2]:\n        data[i][0]+=1\n    data[prev][0]+=data[i][0]\n    data[prev][1]+=data[i][1]\n    data[prev][2]=False\n    biggest=max(biggest,1+(data[i][1]-1)//data[i][0])\n    i-=1\nbiggest=max(biggest,1+(data[0][1]-1)//data[0][0])\nprint(biggest)", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nP=[1]+list(map(int,input().split()))\nA=list(map(int,input().split()))\n\nfor i in range(n):\n    P[i]-=1\n\nY=[1]*n\nfor i in range(n):\n    Y[P[i]]=0\n\n#print(Y)\n\nfor i in range(n-1,0,-1):\n    Y[P[i]]+=Y[i]\n\nS=[a for a in A]\nfor i in range(n-1,0,-1):\n    S[P[i]]+=S[i]\n\nOK=sum(A)\nNG=-1\n\nwhile OK-NG>1:\n    mid=(OK+NG)//2\n\n    for i in range(n):\n        if Y[i]*mid<S[i]:\n            NG=mid\n            break\n    else:\n        OK=mid\n\nprint(OK)\n\n    \n", "n = int(input())\na = [int(x) for x in input().split()]\ng = [0] * n\nfor i in range(n - 1):\n    if type(g[a[i] - 1]) == int:\n        g[a[i] - 1] = []\n    g[a[i] - 1].append(i + 1)\na = [int(x) for x in input().split()]\nb = [0] * n\nnow = [0] * n\nfor i in range(n - 1, -1, -1):\n    if g[i] == 0:\n        b[i] = 1\n        now[i] = a[i]\n        continue\n    maxi = 0\n    for x in g[i]:\n\n        b[i] += b[x]\n        if a[x] < 0:\n            a[i] += a[x]\n            a[x] = 0\n        maxi = max(maxi, now[x])\n    for x in g[i]:\n        a[i] -= (maxi - now[x]) * b[x]\n        now[x] = maxi\n    now[i] = maxi\n    if a[i] < 0:\n        continue\n    now[i] += (a[i] + b[i] - 1) // (b[i])\n    a[i] -= (a[i] + b[i] - 1) // b[i] * b[i]\n\nprint(now[0])\n"]