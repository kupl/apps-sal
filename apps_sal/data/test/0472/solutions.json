["import re\nimport itertools\nfrom collections import Counter, deque\n\nclass Task:\n    maxDigitSum = 18 * 9\n    n = 0\n    answer = \"\" \n\t\n    def getData(self):\n        self.n = int(input())\n        #inFile = open('input.txt', 'r')\n        #inFile.readline().rstrip()\n        #self.childs = inFile.readline().rstrip()\n\n    def solve(self):\n        if self.n == 1:\n            self.answer = '-1'\n            return\n\n        xL, xR = 0, self.n\n        while xL + self.maxDigitSum < xR:\n            xM = (xL + xR) // 2\n            if xM**2 + self.digitSum(xM) * xM < self.n:\n                for x in range(xM - 1, max(xL, xM - self.maxDigitSum) - 1, -1):\n                    if x**2 + self.digitSum(x) * x == self.n:\n                        self.answer = x\n                        return\n                xL = xM\n            else:\n                for x in range(xM + 1, min(xR, xM + self.maxDigitSum) + 1):\n                    if x**2 + self.digitSum(x) * x == self.n:\n                        self.answer = x\n                        return\n                xR = xM\n        for x in range(xL, xR + 1):\n            if x**2 + self.digitSum(x) * x == self.n:\n                self.answer = x\n                return\n        self.answer = -1\n\n    def digitSum(self, n):\n        return sum([int(x) for x in str(n)])\n\n    def printAnswer(self):\n        print(self.answer)\n        #outFile = open('output.txt', 'w')\n        #outFile.write(self.answer)\n\ntask = Task()\ntask.getData()\ntask.solve()\ntask.printAnswer()\n", "def s(x):\n    return sum(int(i) for i in str(x))\n\nn = input()\nl, n = 9 * len(n), int(n)\nans, m = -1, int(n ** 0.5)\nfor x in range(max(1, m - l), m + 1):\n    if n % x == 0 and x * (x + s(x)) == n:\n        ans = x\n        break\nprint(ans)", "def f(x):\n    s = str(x)\n    ans = 0\n    for i in s:\n        ans += ord(i) - ord('0')\n    return ans\n\nn = int(input())\nfor sx in range(1, 91):\n    x = ((sx*sx + 4.0*n)**0.5 - sx) / 2.0\n    if abs(x - round(x)) > 1e-5:\n        continue\n    lx = int(x)\n    if f(lx) != sx:\n        continue\n    if lx*lx + sx*lx != n:\n        continue\n    print(lx)\n    return\nprint(-1)\n", "def readln(): return tuple(map(int, input().split()))\n\nn, = readln()\nfor s in range(1, 180):\n    d = int((s**2 + 4 * n)**0.5)\n    if d**2 == s**2 + 4 * n and (-s + d) % 2 == 0:\n        x = (-s + d) // 2\n        if sum(map(int, list(str(x)))) == s:\n            import sys\n            print(x)\n            return\nprint(-1)\n", "n = int(input())\nx = int(round(n**0.5-0.499999))\ny=x-9999\nwhile (x >= y) and (x>0): \n    list_1 = list(map(int, str(x)))\n    s = 0\n    for i in list_1:\n        s = s + i\n    if (x*x+s*x-n)==0:\n        print(x)\n        break\n    else: x = x-1\nif (not (x*x+s*x-n)==0) : print('-1')\n    \n", "n = int(input())\nx = 4 * n\n\ndef is_square(m):\n    x = 1\n    for i in range(100):\n        x = 0.5 * (x + m / x)\n    x = int(x)\n    if x * x == m:\n        return x\n    else:\n        return -1\n\nans = -1\nfor s in range(9 * 18):\n    d = s ** 2 + x\n    root = is_square(d)\n    if root != -1:\n        val = -s + root\n        if val % 2 == 0 and (val // 2 < ans or ans == -1) and sum(list(map(int, str(val // 2)))) == s:\n            ans = val // 2\nif ans == -1:\n    print(-1)\nelse:\n    print(ans)\n\n", "def sumd(n):\n    v = 0\n    while n > 0:\n        v += n % 10\n        n //= 10\n    return v\n\nn, v = int(input()), -1\na, b = 0, n + 1\nwhile a < b - 1:\n    c = (a + b) // 2\n    if c ** 2 <= n:\n        a = c\n    else:\n        b = c\nwhile a > 0 and n // a - a <= 81:\n    if n % a == 0 and n // a - a == sumd(a):\n        v = a\n    a -= 1\nprint(v)\n", "n = int(input())\n\nans = 10 ** 18\n\ndef f(x):\n    s = 0\n    while x > 0:\n        s += x % 10\n        x //= 10\n    return s\n\ndef sqr(x):\n    l, r = 0, 10 ** 10\n    while r > l + 1:\n        m = (l + r) // 2;\n        if m * m <= x:\n            l = m\n        else:\n            r = m\n    return l\n\nfor s in range(100):\n    if sqr(s ** 2 + 4 * n) ** 2 == s ** 2 + 4 * n:\n        x1 = (-s + sqr(s ** 2 + 4 * n)) / 2\n        x2 = (-s - sqr(s ** 2 + 4 * n)) / 2\n        if x1 > 0 and int(x1) == x1 and f(int(x1)) == s:\n            ans = min(ans, int(x1))\n        if x2 > 0 and int(x2) == x2 and f(int(x2)) == s:\n            ans = min(ans, int(x2))\n\nif ans == 10 ** 18:\n    print(-1)\nelse:\n    print(ans)", "n=int(input())\nf=lambda x:x*x+sum(map(int,str(abs(x))))*x\ndef b(l,r):\n\twhile l<r-1:\n\t\tm=(l+r)//2\n\t\tif f(m)<n:l=m\n\t\telse:r=m\n\treturn r\nr=b(0,10**18)\nfor i in range(max(1,r-1000),r+1000):\n\tif f(i)==n:r=i;break\nelse:r=-1\nprint(r)", "import math\n\ndef digit_sum(n):\n    su = 0\n    while n:\n        su += n%10\n        n = math.floor(n/10)\n    return su\n\ndef main():\n    n = int(input())\n    mini = -1\n    for s in range(1, (9 * 10) + 1):\n        a = (-s + math.sqrt((s * s) + (4 * n)))/2\n        b = (-s - math.sqrt((s * s) + (4 * n)))/2\n        x = math.floor(a)\n        y = math.floor(b)\n        if a.is_integer() and x != 999959999 and x > 0 and digit_sum(x) == s and (mini == -1 or x < mini):\n            mini = x\n        if b.is_integer() and x != 999959999 and y > 0 and digit_sum(y) == s and (mini == -1 or y < mini):\n            mini = y\n        # print(\"mini\", mini)\n    print(mini)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\"\"\"http://codeforces.com/problemset/problem/233/B\"\"\"\n\ndef s(x): return sum(map(int, str(x)))\ndef val(x): return x*x + s(x)*x\ndef solve(n):\n    l = 1; r = int(n ** 0.5) + 1\n    while l <= r:\n        mid = (l + r) // 2\n        print(l, mid, r,  val(mid))\n        if val(mid) == n: return mid\n        elif mid ** 2 < n: l = mid + 1\n        elif mid ** 2 > n: r = mid - 1\n    return -1\n\ndef solve2(n):\n    for sx in range(1, 81):\n        x = int((-sx + (sx**2 + 4*n)**0.5) // 2)\n        if s(int(x)) == sx and x*(x+sx) == n:\n            return x\n    return -1\n\ndef test():\n    assert solve2(4) == -1\n\ndef __starting_point():\n    test()\n    print(solve2(int(input())))\n\n__starting_point()", "\"\"\"http://codeforces.com/problemset/problem/233/B\"\"\"\n\ndef s(x): return sum(map(int, str(x)))\ndef solve(n):\n    l = 1; r = int(n ** 0.5); max_s = 81\n    for x in range(max(1, r - max_s), r + 1):\n        if x * (x + s(x)) == n:\n            return x\n    return -1\n\ndef test():\n    assert solve(2) == 1\n    assert solve(110) == 10\n    assert solve(4) == -1\n    assert solve(10000006999999929) == 99999999\n\n\ndef __starting_point():\n    test()\n    print(solve(int(input())))\n\n__starting_point()", "#!/usr/bin/env python3\n\nfrom math import sqrt\n\ndef sum_digits(x):\n    res = 0\n    while x > 0:\n        res += (x % 10)\n        x //= 10\n    return res\n\n\nn = int(input())\nroot = int(sqrt(n))\n\n\nfor i in range(max(root - 100, 1), root + 1, 1):\n    sd = sum_digits(i)\n    if i * i + sd * i - n == 0:\n        print(i)\n        return\n\nprint('-1')\n\n", "'''\ndef main():\n\tfrom sys import stdin,stdout\ndef __starting_point():\n\tmain()\n'''\n#349B\n'''\ndef main():\n\tfrom sys import stdin,stdout\n\tN = int(stdin.readline())\n\tarr = list(map(int,stdin.readline().split()))\n\tdiv = []\n\tfor i in arr:\n\t\tdiv.append(N//i)\n\tmaxim = 0\n\tmaxindex = -1\n\tfor i in range(9):\n\t\tif div[i] >maxim:\n\t\t\tmaxim = div[i]\n\t\t\tmaxindex = i\n\tif maxindex > -1:\n\t\tans = [ (maxindex+1) for i in range(maxim)]\n\t\tN= N%arr[maxindex]\n\t\t#print(N)\n\t\ti = 0\n\t\twhile i<maxim:\n\t\t\t#print('i=',i,'N=',N)\n\t\t\tfor j in range(8,maxindex,-1):\n\t\t\t\t#print('j=',j,'diff=',arr[j]-arr[ans[i]-1])\n\t\t\t\tif arr[j]-arr[ans[i]-1] <=N:\n\t\t\t\t\tN -= arr[j]-arr[ans[i]-1]\n\t\t\t\t\tans[i] = j+1\n\t\t\t\t\tbreak\n\t\t\ti+=1\n\t\tfor i in ans:\n\t\t\tstdout.write(str(i))\n\telse:\n\t\tstdout.write('-1\\n')\ndef __starting_point():\n\tmain()\n'''\n#234B Input and Output\n'''\ndef main():\n\tfrom sys import stdin,stdout\n\timport collections\n\twith open('input.txt','r') as ip:\n\t\tN,K = map(int,ip.readline().split())\n\t\tarr = list(map(int,ip.readline().split()))\n\tmydict = collections.defaultdict(set)\n\tfor i in range(len(arr)):\n\t\tmydict[arr[i]].add(i+1)\n\tans = []\n\ti=0\n\twhile K>0:\n\t\tfor it in mydict[sorted(mydict.keys(),reverse=True)[i]]:\n\t\t\tans.append(it)\n\t\t\tK-=1\n\t\t\tif K<1:\n\t\t\t\tbreak\n\t\tminim=i\n\t\ti+=1\n\twith open('output.txt','w') as out:\n\t\tout.write(str(sorted(mydict.keys(),reverse=True)[minim])+'\\n')\n\t\tans=' '.join(str(x) for x in ans)\n\t\tout.write(ans+'\\n')\t\t\ndef __starting_point():\n\tmain()\n'''\n#151B\n'''\ndef main():\n\tfrom sys import stdin,stdout\n\timport collections\n\tnames = collections.defaultdict(list)\n\tcounter = 0\n\torder = {}\n\tfor i in range(int(stdin.readline())):\n\t\tn,ns = stdin.readline().split()\n\t\tnames[ns]=[0,0,0]\n\t\torder[ns]=counter\n\t\tcounter+=1\n\t\tn=int(n)\n\t\twhile n:\n\t\t\tip=stdin.readline().strip()\n\t\t\tip=ip.replace('-','')\n\t\t\t#test for taxi\n\t\t\tflag=True\n\t\t\tfor i in range(1,6):\n\t\t\t\tif ip[i]!=ip[0]:\n\t\t\t\t\tflag=False\n\t\t\t\t\tbreak\n\t\t\tif flag:\n\t\t\t\tnames[ns][0]+=1\n\t\t\t\tn-=1\n\t\t\t\tcontinue\n\t\t\t#test for pizza\n\t\t\tflag = True\n\t\t\tfor i in range(1,6):\n\t\t\t\tif int(ip[i])>=int(ip[i-1]):\n\t\t\t\t\tflag =False\n\t\t\t\t\tbreak\n\t\t\tif flag:\n\t\t\t\tnames[ns][1]+=1\n\n\t\t\telse:\n\t\t\t\tnames[ns][2]+=1\n\t\t\tn-=1\n\t#print(names)\n\t#for all girls\n\tt=-1\n\tp=-1\n\tg=-1\n\tfor i in names:\n\t\tt=max(t,names[i][0])\n\t\tp = max(p, names[i][1])\n\t\tg = max(g, names[i][2])\n\n\ttaxi=list(filter(lambda x: names[x][0]==t, names.keys()))\n\tpizza = list(filter(lambda x: names[x][1] == p, names.keys()))\n\tgirls = list(filter(lambda x: names[x][2] == g, names.keys()))\n\n\tpizza.sort(key= lambda x: order[x])\n\ttaxi.sort(key= lambda x: order[x])\t\n\tgirls.sort(key= lambda x: order[x])\n\n\tprint('If you want to call a taxi, you should call:',', '.join(x for x in taxi),end='.\\n')\n\tprint('If you want to order a pizza, you should call:', ', '.join(x for x in pizza),end='.\\n')\n\tprint('If you want to go to a cafe with a wonderful girl, you should call:', ', '.join(x for x in girls),end='.\\n')\n\ndef __starting_point():\n\tmain()\n'''\n#SQUADRUN Q2\n'''\ndef LCMgen(a):\n\timport math\n\tlcm = a[0]\n\tfor i in range(1,len(a)):\n\t\tg = math.gcd(lcm,a[i])\n\t\tlcm = (lcm*a[i])//g\n\treturn lcm\t\n\t\ndef main():\n\tfrom sys import stdin,stdout\n\timport collections\n\timport math\n\tN,W = map(int,stdin.readline().split())\n\tcounter = collections.Counter(map(int,stdin.readline().split()))\n\tlcm = LCMgen(list(counter.keys()))\n\tW*=lcm\n\tdiv = 0\n\tfor i in counter:\n\t\tdiv+=counter[i]*(lcm//i)\n\tans = math.ceil(W/div)\n\tstdout.write(str(ans))\ndef __starting_point():\n\tmain()\n'''\n#143B\n'''\ndef main():\n    from sys import stdin,stdout\n    ip = stdin.readline().strip()\n    inte = None\n    flow = None\n    for i,j in enumerate(ip):\n        if j=='.':\n            flow = ip[i:]\n            inte = ip[:i]\n            break\n    if flow == None:\n        flow = '.00'\n        inte = ip\n    else:\n        if len(flow)==2:\n            flow+='0'\n        else:\n            flow = flow[:3]\n    ne = False\n    if ip[0]=='-':\n        ne = True\n    if ne:\n        inte = inte[1:]\n    inte = inte[::-1]\n    ans =''\n    for i,j in enumerate(inte):\n        ans += j\n        if i%3 == 2:\n            ans+=','\n    ans = ans[::-1]\n    if ans[0]==',':\n        ans = ans[1:]\n    ans = '$'+ans\n    if ne:\n        stdout.write('({})'.format(ans+flow))\n    else:\n        stdout.write(ans+flow)\ndef __starting_point():\n    main()\n\n'''\n#A\n'''\ndef main():\n    from sys import stdin,stdout\n    n = int(stdin.readline())\n    arr = list(map(int,stdin.readline().split()))\n    minim = min(arr)\n    my_l = []\n    for i,j in enumerate(arr):\n        if j==minim:\n            my_l.append(i)\n    my_l_ = []\n    for i in range(1,len(my_l)):\n        my_l_.append(my_l[i]-my_l[i-1])\n    stdout.write(str(min(my_l_)))\ndef __starting_point():\n    main()\n'''\n#B\n'''\ndef main():\n    from sys import stdin,stdout\n    n,a,b = map(int,stdin.readline().split())\n    maxim = -1\n    for i in range(1,n):\n        maxim = max(min(a//i,b//(n-i)),maxim)\n    stdout.write(str(maxim))\ndef __starting_point():\n    main()\n'''\n#233B\n'''\ndef main():\n    from sys import stdin,stdout\n    def foo(x):\n        tsum = 0\n        c = x\n        while c:\n            tsum+=(c%10)\n            c//=10\n        return tsum\n\n    N = int(stdin.readline())\n    up,down = 0 , int(1e18)\n    flag = False\n    while up<down:\n        mid = (up+down)//2\n        val = foo(mid)\n        val = (mid+val)*mid\n        if val<N:\n            up = mid\n        elif val >N:\n            down = mid\n        else:\n            flag=True\n            break\n        \n    if flag:\n        stdout.write(str(mid)+'\\n')\n    else:\n        stdout.write('-1')\ndef __starting_point():\n    main()\n\ndef main():\n    def foo(x):\n        n= x\n        tsum = 0\n        while n:\n            tsum += n%10 \n            n//=10\n        return x*x + tsum*x - int(1e18)\n        \n    import matplotlib.pyplot as plt\n    y = [foo(x) for x in range(1,int(1e18)+1)]\n    x = range(1,int(1e18)+1)\n    print(y[:100])\n    plt.plot(y,x)\n    plt.show()\ndef __starting_point():\n    main()\n'''\n#RECTANGL\n'''\ndef main():\n    from sys import stdin,stdout\n    import collections\n    for _ in range(int(stdin.readline())):\n        c = collections.Counter(list(map(int,stdin.readline().split())))\n        flag = True\n        for i in c:\n            if c[i]&1:\n                flag=False\n        if flag:\n            stdout.write('YES\\n')\n        else:\n            stdout.write('NO\\n')\ndef __starting_point():\n    main()\n'''\n#MAXSC\n'''\ndef main():\n    from sys import stdin,stdout\n    import bisect\n    for _ in range(int(stdin.readline())):\n        N = int(stdin.readline())\n        mat = []\n        for i in range(N):\n            mat.append(sorted(map(int,stdin.readline().split())))\n##        print(mat)\n        temp = mat[-1][-1]\n        tsum = mat[-1][-1]\n        flag = True\n        for i in range(N-2,-1,-1):\n            ind = bisect.bisect_left(mat[i],temp)-1\n            if ind == -1:\n                flag = False\n                break\n            else:\n                tsum+=mat[i][ind]\n        if flag:\n            stdout.write(str(tsum)+'\\n')\n        else:\n            stdout.write('-1\\n')\ndef __starting_point():\n    main()\n'''\n#233B ********************\ndef main():\n    def rev(x):\n        tsum = 0\n        while x:\n            tsum += x%10\n            x//=10\n        return tsum\n    from sys import stdin,stdout\n    from math import sqrt,ceil\n    n = int(stdin.readline())\n    for i in range(91):\n        r = i*i+(n<<2)\n        x = ceil(sqrt(r))\n##        print(i,x)\n        if x*x == r:\n            num = (x-i)/2\n            if num == int(num):\n                if rev(num)==i:\n                    stdout.write(str(int(num)))\n                    return\n    stdout.write('-1')\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import *\n\ndef s(x):\n    S = 0\n    while x!=0:\n        S += x%10\n        x//=10\n    return(S)\n\ndef Solve(n):\n    sqrt = n**0.5//1\n    x = int((10**(log(sqrt,10)//1)))-1\n\n    if((sqrt - x)*log(sqrt,10) >= 10**4):\n        x = int(sqrt-10**4)\n    \n    while(x <= sqrt):\n        if x**2+int(s(x))*x == n:\n            return(x)\n        x+=1\n    return(-1)\n\n\ndef solve(n):\n    if(n >= 1024974):\n        return(Solve(n))\n    if(n == 0):\n        return(0)\n    sqrt = n**0.5//1\n    x = int((10**(log(sqrt,10)//1-1)))\n    while(x <= sqrt):\n        if x**2+int(s(x))*x == n:\n            return(x)\n        x+=1\n    return(-1)\n\n\n\nn = int(input())\nprint(int(solve(n)))\n", "from math import *\n\ndef s(x):\n    S = 0\n    while x!=0:\n        S += x%10\n        x//=10\n    return(S)\n\ndef Solve(n):\n    sqrt = n**0.5//1\n    x = int((10**(log(sqrt,10)//1)))-1\n\n    if((sqrt - x)*log(sqrt,10) >= 10**4):\n        x = int(sqrt-10**4)\n\n    while(x <= sqrt):\n        if x**2+int(s(x))*x == n:\n            return(x)\n        x+=1\n    return(-1)\n\n\ndef solve(n):\n    if(n >= 1024974):\n        return(Solve(n))\n    if(n == 0):\n        return(0)\n    sqrt = n**0.5//1\n    x = int((10**(log(sqrt,10)//1-1)))\n    while(x <= sqrt):\n        if x**2+int(s(x))*x == n:\n            return(x)\n        x+=1\n    return(-1)\n\n\n\nn = int(input())\nprint(int(solve(n)))\n", "import math\n\ndef solve(n):\n    upper = int(n**0.5)+1\n    lower = 10**(math.log10(n**0.5//1)//1)-1\n    if n**0.5 - 10**(math.log10(n**0.5//1)//1) >= 10000:\n        lower = n**0.5-10000\n    for i in range(int(lower),upper):\n        if i**2 + s(i)*i == n:\n            return(i)\n    return(-1)\n\n    \ndef s(x):\n    output = 0\n    while x != 0:\n        output += x%10\n        x //=10\n    return output\n\n\nn = int(input())\nprint(solve(n))", "def sum_of_digits(nr):\n    s = 0\n    while nr > 0:\n        s += nr % 10\n        nr //= 10\n    return s\n\n\ndef main():\n    n = int(input())\n    solutions = []\n    for s in range(154):\n        delta = (s ** 2 + 4 * n) ** 0.5\n        x = (-s + delta)/2\n        if int(x) != x:\n            continue\n        x = int(x)\n        if sum_of_digits(x) == s and x ** 2 + sum_of_digits(x) * x - n == 0:\n            solutions.append(x)\n    if solutions:\n        print(min(solutions))\n    else:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def calc_exp(n):\n    return n * ( n + sum(map(int,str(n))) )\n    \n    \ndef binary_search(n):\n    l, r = 0, 1<<61\n    while (l <= r):\n        mid = l+r >> 1\n        if (calc_exp(mid) < n):\n            l = mid+1\n        else:\n            r = mid-1\n    return l\n\ndef main():\n    n = int(input())\n    res = binary_search(n)\n    for i in range(max(1, res-100), res+100):\n        if (calc_exp(i) == n):\n            print(i)\n            return\n    print(-1)\n\nmain()\n", "def calc_exp(n):\n    return n * ( n + sum(map(int,str(n))) )\n    \ndef binary_search(n):\n    l, r = 0, 1<<61\n    while (l <= r):\n        mid = l+r >> 1\n        if (calc_exp(mid) < n):\n            l = mid+1\n        else:\n            r = mid-1\n    return l\n\ndef main():\n    n = int(input())\n    res = binary_search(n)\n    for i in range(max(1, res-100), res+100):\n        if (calc_exp(i) == n):\n            print(i)\n            return\n    print(-1)\n\nmain()\n", "import math\n\ndef digit_sum(num):\n    res = 0\n    while num:\n        res += num % 10\n        num //= 10\n    return res\n\nR = lambda: map(int, input().split())\nn = int(input())\nres = math.inf\nfor s in range(1, 91):\n    l, r = 1, 10**9\n    while l < r:\n        x = (l + r) // 2\n        ne = x * x + s * x\n        if ne < n:\n            l = x + 1\n        elif ne > n:\n            r = x - 1\n        else:\n            l = r = x\n            break\n    if l * (l + digit_sum(l)) == n:\n        res = min(l, res)\nprint(res if res < math.inf else -1)", "import math\nc = int(input())\nf = False\nfor b in range(82):\n   x = [(-b + math.sqrt(b**2+(4*c)))/2, (-b - math.sqrt(b**2+(4*c)))/2]\n   x = max(x)\n   \n   if int(x)**2 + b*int(x) -c == 0 and int(x) == x :\n      y = 0\n      for i in str(int(x)):\n         y += int(i)\n      if b == y :\n         print(int(x))\n         f = True\n\nif f == False:\n   print(-1)", "import math\nc = int(input())\nf = False\nfor b in range(82):\n   x = (-b + math.sqrt(b**2+(4*c)))/2\n   \n   if int(x)**2 + b*int(x) -c == 0 and int(x) == x :\n      y = 0\n      for i in str(int(x)):\n         y += int(i)\n      if b == y :\n         print(int(x))\n         f = True\n         SystemExit()\n\nif f == False:\n   print(-1)", "def s(x):\n\n    return sum(int(i) for i in str(x))\n\n\n\nn = input()\n\nl, n = 9 * len(n), int(n)\n\nans, m = -1, int(n ** 0.5)\n\nfor x in range(max(1, m - l), m + 1):\n\n    if n % x == 0 and x * (x + s(x)) == n:\n\n        ans = x\n\n        break\n\nprint(ans)\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\nflag = 0\n\nfor i in range(1,9000*18 + 1):\n\n    if (-i + (i**2 + 4*n)**(1/2))/2 == int((-i + (i**2 + 4*n)**(1/2))/2):\n      c = int((-i + (i**2 + 4*n)**(1/2))/2)\n      if sum(list(map(int,list(str(c))))) == i:\n        if c**2 + c*i - n == 0:\n          print(int((-i + (i**2 + 4*n)**(1/2))/2))\n\n\n          flag = 1\n          break\nif flag == 0:\n    print(-1)\n\n"]