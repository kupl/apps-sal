["n = int(input())\na = list(map(int, input().split()))\nb = [0]\nfor i in range(1, n):\n\tif a[i]*2 <= a[0]:\n\t\tb += [i]\nu=0\nv=0\nfor i in range(n):\n\tif i in b:\n\t\tu += a[i]\n\telse:\n\t\tv += a[i]\nif u > v:\n\tprint(len(b))\n\tfor x in b:\n\t\tprint(x+1, end=' ')\nelse:\n\tprint('0')", "def main():\n    import sys\n    input = sys.stdin.readline\n    \n    n = int(input())\n    arr = list(map(int, input().split()))\n    s = arr[0]\n    su = sum(arr)\n    cnt = arr[0]\n    ad = [1]\n    for i in range(1, n):\n        if s >= 2 * arr[i]:\n            ad.append(i + 1)\n            cnt += arr[i]\n    \n    if cnt * 2 > su:\n        print(len(ad))\n        print(*ad)\n    else:\n        print(0)\n    \n    return 0\n\nmain()", "n=int(input())\nl1=list(map(int,input().split()))\ntotal=sum(l1)\nres=[1]\ns=l1[0]\nfor i in range(1,n):\n    if 2*l1[i]<=l1[0]:\n        res.append(i+1)\n        s+=l1[i]\nif 2*s>total:\n    print(len(res))\n    print(*res,sep=\" \")\nelse :\n    print(0)", "n=int(input())\nar=list(map(int,input().split()))\nx=ar[0]\nans=[1]\ns=sum(ar)\ns2=x\nfor i in range(1,n):\n    if(2*ar[i]<=x):\n        ans.append(i+1)\n        s2+=ar[i]\nif(2*s2>s):\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0)\n", "n = int(input())\nl = list(map(int,input().split()))\ntot = sum(l)\n\na = l[0]\nout = [1]\nsumOut = l[0] \nfor i in range(2,n+1):\n    if l[i-1] * 2 <= a:\n        out.append(i)\n        sumOut += l[i-1]\n\nif sumOut * 2 > tot:\n    print(len(out))\n    print(' '.join(map(str,out)))\nelse:\n    print(0)\n", "n = int(input())\na = list(map(int, input().split()))\n\nsol = [1]\ns = a[0]\n\nfor i in range(1, n):\n    if a[i]*2<=a[0]:\n        sol.append(i+1)\n        s+=a[i]\nif s>sum(a)//2:\n    print(len(sol))\n    print(*sol)\nelse:\n    print(0)\n", "GI = lambda: int(input()); GIS = lambda: list(map(int, input().split())); LGIS = lambda: list(GIS())\n\ndef main():\n  GI()\n  ps = LGIS()\n  a = ps[0]\n  s = a\n  l = [1]\n  for i, p in enumerate(ps[1:], 2):\n    if p <= a/2:\n      s += p\n      l.append(i)\n  if s > sum(ps) / 2:\n    print(len(l))\n    print(' '.join(map(str, l)))\n  else:\n    print(0)\n\nmain()\n", "n = int(input())\nA = list(map(int, input().split()))\nans = [1]\nSum = A[0]\nfor i in range(1, n):\n    if A[0] >= 2*A[i]:\n        Sum += A[i]\n        ans.append(i + 1)\nif 2*Sum > sum(A):\n    print(len(ans))\n    for a in ans:\n        print(a, end = \" \")\nelse:\n    print(0)", "# = map(int, input().split())\n# = list(map(int, input().split()))\nimport sys, math\nn = int(input())\nz = list(map(int, input().split()))\na = z[0]\nans = [1]\nsum_ = a\nsum_s = a\nfor i in range(1, n):\n    sum_s += z[i]\n    if z[i] * 2 <= a:\n        ans.append(i + 1)\n        sum_ += z[i]\nif (sum_ * 2 > sum_s):\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0)\n", "n=int(input())\nmas=list(map(int,input().split()))\nal=mas[0]\nskob=al\nskal=al\nans=[1]\n\nfor i in range(1,n):\n    if mas[i]<=al//2:\n        ans.append(i+1)\n        skob+=mas[i]\n        skal+=mas[i]\n    else:\n        skob+=mas[i]\nif skal*2>skob:\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0)", "n=int(input())\nl=list(map(int,input().split()))\na=l[0]\ntotal=sum(l)\nans=[1]\nseats=a\nfor i in range(1,n):\n\tif a>=2*l[i]:\n\t\tans.append(i+1)\n\t\tseats+=l[i]\nif(seats>total//2):\n\tprint(len(ans))\n\tfor i in ans:\n\t\tprint(i,end=\" \")\nelse:\n\tprint(0)\n", "n = int(input())\nl = list(map(int,input().split()))\na = l[0]\ndup = []\nsuma = a\nfor i in range(1,n):\n\tif l[i] <= a // 2:\n\t\tdup.append(i)\n\t\tsuma += l[i]\nif suma * 2 <= sum(l):\n\tprint(0)\nelse:\n\tprint(len(dup)+1)\n\tprint(1, end = \" \")\n\tfor i in dup:\n\t\tprint(i + 1, end = \" \")", "n = int(input())\na = list(map(int, input().split()))\nour = a[0]\nans = [1]\nfor i in range(1, n):\n    if a[i] * 2 <= a[0]:\n        our += a[i]\n        ans.append(i + 1)\nif our > sum(a) - our:\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0)", "n = int(input())\na= list(map(int,input().split()))\n\nsum1 = sum(a)\nsum2= a[0]\nans = [1, ]\nfor i in range(1, n):\n    if(a[0] >= 2*a[i]):\n        sum2 += a[i]\n        ans.append(i + 1)\nif(2 * sum2 > sum1 ):\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0)", "\n\n\n\n\nn=int(input())\na=list(map(int,input().split(\" \")))\n\nl=[]\nl.append(1)\ns=[]\ns.append(a[0])\n\nfor i in range(1,n):\n\tif(a[0]>=(a[i]*2)):\n\t\tl.append(i+1)\n\t\ts.append(a[i])\n\nif(sum(s)>(sum(a)//2)):\n\tprint(len(l))\n\tprint(*l)\nelse:\n\tprint(0)", "# alpha = \"abcdefghijklmnopqrstuvwxyz\"\n# prime = 998244353 \n# INF = 1000_000_000\n\n# from heapq import heappush, heappop\n# from collections import defaultdict\n# from math import sqrt\n# from collections import deque      \n# from math import gcd\n\nn = int(input())\narr = list(map(int, input().split()))\nans = arr[0]\nans_arr = [1]\nind = 2\nfor i in arr[1:]:\n    if arr[0]>=2*i:\n        ans_arr.append(ind)\n        ans+=i\n    ind+=1\nsum_ans = sum(arr)\nif ans>sum_ans//2:\n    print(len(ans_arr))\n    print(*ans_arr)\nelse:\n    print(0)", "n = int(input())\nl = list(map(int, input().split()))\nans = [1]\nb = l[0]\nfor i in range(1,n):\n    if(l[i]*2<=l[0]):\n        b+=l[i]\n        ans.append(i+1)\n    else:\n        b-=l[i]\nif(b<=0):\n    print(0)\nelse:\n    print(len(ans))\n    print(\" \".join(map(str, ans)))\n", "n=int(input())\nl = list(map(int,input().split()))\nmaj = sum(l)//2 + 1\nc= [1]\nfor i in range(1,n):\n    if l[i]*2 <= l[0]:\n        c.append(i+1)\nif sum([l[i-1] for i in c]) >= maj:\n    print(len(c))\n    print(*c)\nelse:\n    print(0)\n\n", "n = int(input())\na = list(map(int, input().split()))\nl = [1]\ns = a[0]\nt = a[0]\nfor i in range(1, n):\n\tt += a[i]\n\tif a[0] >= 2 * a[i]:\n\t\ts += a[i]\n\t\tl.append(i + 1)\nif 2 * s > t:\n\tprint(len(l))\n\tfor j in l:\n\t\tprint(j, end=\" \")\nelse:\n\tprint(0)\n", "n = int(input())\na = list(map(int,input().split()))\n\nm = a[0]\nans = [1]\ns = m + 0\nall_s = sum(a)\nfor i in range(1,n):\n    if 2*a[i] <= m:\n        ans.append(i+1)\n        s += a[i]\nif 2*s > all_s:\n    print(len(ans))\n    print(*ans)\nelse:\n    print(0) ", "import math\nimport sys\nimport collections\n\n\n# imgur.com/Pkt7iIf.png\n\ndef getdict(n):\n    d = {}\n    if type(n) is list:\n        for i in n:\n            if i in d: d[i] += 1\n            else: d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d: d[t] += 1\n            else: d[t] = 1\n    return d\ndef cdiv(n, k): return n//k + (n%k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\n\n\nn = ii()\nd = li()\na = d[0]\ns = sum(d)\nr = [1]\ndr = [a]\nfor i in range(1, n):\n    if d[i] <= a//2:\n        r.append(i+1)\n        dr.append(d[i])\n\nif sum(dr) > sum(d)//2:\n    print(len(r))\n    print(' '.join(map(str, r)))\nelse:\n    print(0)\n", "n = int(input())\n\nparties = list(map(int, input().split()))\n\nacceptable_parties = [(i + 2, p) for i, p in enumerate(parties[1:]) if p * 2 <= parties[0]]\n#other_parties = [p for p in parties[1:] if p * 2 > parties[0]\n\nif (parties[0] + sum([p[1] for p in acceptable_parties])) * 2 > sum(parties):\n    print(len(acceptable_parties) + 1)\n    print(*([1] + [p[0] for p in acceptable_parties]))\nelse:\n    print(0)\n"]