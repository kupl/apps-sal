["n=int(input())\nR=[]\nL=[]\nfor i in range(n):\n    x,y=input().split()\n    R.append(x)\n    L.append(y)\n\na=R.count(\"0\")\nb=L.count(\"0\")\n\nanswer=min(a,n-a)+min(b,n-b)\n\nprint(answer)\n", "#http://codeforces.com/problemset/problem/248/A\n\nn = int(input())\nlsum, rsum = 0, 0 #scott\nfor i in range(n):\n    x,y = map (int, input().split()) #scott\n    lsum += x; rsum += y\nprint (min (lsum, n - lsum) + min (rsum, n - rsum))", "import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\nf.readline()\nl, r = [], []\nres = 0\nfor line in f:\n    l += line.strip().split()[0]\n    r += line.strip().split()[1]\nif l.count('0') < l.count('1'):\n    res += l.count('0')\nelse:\n    res += l.count('1')\nif r.count('0') < r.count('1'):\n    res += r.count('0')\nelse:\n    res += r.count('1')\nprint(res)", "n = int(input())\na, b = 0, 0\nfor i in range(n):\n    da, db = map(int, input().split())\n    a += da\n    b += db\nprint(min(n - a, a) + min(n - b, b))", "n = int(input())\na = b = 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a += x;\n    b += y;\nprint(min(a, n-a) + min(b, n-b))\n\n", "n = int(input())\nvl, vr = 0, 0\nfor i in range(n):\n    l, r = (int(x) for x in input().split())\n    vl += l\n    vr += r\nprint(min(vl, n - vl) + min(vr, n - vr))", "n = int(input())\nleft, right = 0, 0\nfor i in range(n):\n\ta, b = list(map(int, input().split()))\n\tleft += a\n\tright += b\nleft = min(n-left, left)\nright = min(n-right, right)\nprint(left+right)\n", "import sys\nimport math\n\nn = int(sys.stdin.readline())\n\nlc = 0\nrc = 0\nlo = 0\nro = 0\nfor i in range(n):\n    l, r = [int(x) for x in (sys.stdin.readline()).split()]\n    if(l == 1):\n        lc += 1\n    else:\n        lo += 1\n    if(r == 1):\n        rc += 1\n    else:\n        ro += 1\n\nres = 0        \nif(rc >= ro):\n    res += ro\nelse:\n    res += rc\n    \nif(lc >= lo):\n    res += lo\nelse:\n    res += lc\n    \nprint(res)\n    \n\n        \n        \n    \n", "n = int(input())\nl, r = 0, 0\nfor i in range(n):\n\tx, y = [int(x) for x in input().split()]\n\tl += x\n\tr += y\nprint(min(l, n - l) + min(r, n - r))\n", "n=int(input())\n\nx,y=0,0\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    x+=a\n    y+=b\nprint(min(x,n-x)+min(y,n-y))\n\n\n", "def main():\n    n = int(input())\n    ll = rr = 0\n    for _ in range(n):\n        l, r = list(map(int, (input().split())))\n        ll += l\n        rr += r\n    print(sum(min(_, n - _) for _ in (ll, rr)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a=int(input())\nl=[]\nlf=[]\nrt=[]\nfor i in range(a):\n    s=input().split()\n    l.append(s)\n    lf.append(int(l[i][0]))\n    rt.append(int(l[i][1]))\n\n    \np=lf.count(1)\nq=rt.count(0)\nr=rt.count(1)\ns=lf.count(0)\nk=[]\n\nk.append(p+q)\nk.append(r+s)\nk.append(p+r)\nk.append(q+s)\nprint(min(k))", "# coding: utf-8\nn = int(input())\nleft = []\nright = []\nfor i in range(n):\n    tmp = [int(j) for j in input().split()]\n    left.append(tmp[0])\n    right.append(tmp[1])\nans = min(left.count(0),left.count(1)) + min(right.count(0),right.count(1))\nprint(ans)\n", "\ndef foo():\n   n = int(input())\n   a, b = [], []\n   for i in range(n):\n      inp = input()\n      a1, b1 = inp.split()\n      a.append(int(a1))\n      b.append(int(b1))\n\n   num1 = sum(a)\n   num2 = sum(b)\n   num1 = min(num1, n - num1)\n   num2 = min(num2, n - num2)\n\n   print(num1 + num2)\n\nfoo()", "n = int(input())\nleft = 0\nright = 0\nfor i in range(n):\n    left_cup, right_cup = map(int, input().split())\n    left += left_cup\n    right += right_cup\nleft_close = n - left\nright_close = n - right\nleft_time = min(left_close, left)\nright_time = min(right_close, right)\nprint(left_time + right_time)", "def read():\n    inputs = input().strip()\n    return list(map(int, inputs.split()))\ndef read_pair():\n    return map(int, input().split(' '))\ndef read_str():\n    return map(str, input().split(' '))\nn = int(input())\nans1 = 0\nans2 = 0\nfor i in range (n):\n    x, y = read_pair()\n    ans1 += x\n    ans2 += y\nprint(min(ans1, n - ans1) + min(ans2, n - ans2))", "I=lambda:map(int,input().split())\na=[0,0]\nb=[0,0]\nfor _ in'0'*next(I()):c,d=I();a[c]+=1;b[d]+=1\nprint(min(a)+min(b))", "n=int(input())\nl=r=0\nfor _ in range(n):\n    x,y=map(int,input().split())\n    l+=x\n    r+=y\nans=min(n-l,l)\nans+=min(n-r,r)\nprint(ans)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\nn=int(input())\nd=[]\nl,p,t=0,0,0,\nfor i in range(n):\n    d.append(list(map(int,input().split())))\n    if d[i][0]==1:\n        l+=1\n    if d[i][1]==1:\n        p+=1\nif l<n-l:\n    t+=l\nelse:\n    t+=n-l\nif p<n-p:\n    t+=p\nelse:\n    t+=n-p\nprint(t)", "n = int(input())\nl = r = 0\n\nfor i in range(n):\n    a,b = list(map(int, input().split()))\n    l += a\n    r += b\n\nans = min(n-l,l) + min(n-r,r)\nprint(ans)\n", "n = int(input())\nl = r = 0\n\nfor i in range(n):\n    a,b = list(map(int, input().split()))\n    l += a\n    r += b\n\nans = min(n-l,l) + min(n-r,r)\nprint(ans)\n\n# 1482245084943\n", "'''input\n5\n0 1\n1 0\n0 1\n1 1\n0 1\n'''\nn = int(input())\nx, y = [], []\nfor _ in range(n):\n\ta, b = list(map(int, input().split()))\n\tx.append(a)\n\ty.append(b)\nprint(min(x.count(0), x.count(1)) + min(y.count(0), y.count(1)))\n", "n = int(input())\nleft = []\nright = []\n\nfor i in range(n):\n    l, r = input().split()\n\n    left.append(l)\n    right.append(r)\n\nleft_0 = left.count('0')\nleft_1 = left.count('1')\nright_0 = right.count('0')\nright_1 = right.count('1')\n\nprint(min(left_0, left_1) + min(right_0, right_1))\n", "# python2 or 3\nimport sys, threading, os.path\nimport collections, heapq, math,bisect\nimport string\nfrom platform import python_version\nsys.setrecursionlimit(10**6)\nthreading.stack_size(2**27)\n\ndef main():\n    if os.path.exists('input.txt'):\n        input = open('input.txt', 'r')\n    else:\n        input = sys.stdin\n    #--------------------------------INPUT---------------------------------\n    n = int(input.readline())\n    lis,counter = [],0\n    rightc,leftc = 0,0\n    for i in range(n):\n        a,b = list(map(int, input.readline().split()))\n        if a ==0:\n            rightc+=1\n        if b == 0:\n            leftc+=1\n    counter = min(rightc,n-rightc)+min(leftc,n-leftc)\n    output = counter\n    #-------------------------------OUTPUT----------------------------------\n    if os.path.exists('output.txt'):\n        open('output.txt', 'w').writelines(str(output))\n    else:\n        sys.stdout.write(str(output))\n\n\nthreading.Thread(target=main).start()\n\n"]