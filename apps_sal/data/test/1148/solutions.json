["am=0\nx = int(input())\nl = list(map(int, input().split(' ')))\nm = min(l)\nk = [i for i in range(x) if l[i] == m]\nk.append(k[0]+x)\nfor i in range(len(k)-1):\n    am = max(am, k[i+1]-k[i])\n\nprint(m * x + am - 1)\n", "n = int(input())\na = list(map(int, input().split()))\nminimum = min(a)\nmax_segment = 0\ncount = 0\na = a + a\nfor i in range(len(a)):\n    if a[i] == minimum:\n        max_segment = max(count, max_segment)\n        count = 0\n    else:\n        count += 1\nmax_segment = max(count, max_segment)\nprint(minimum * n + max_segment)\n", "import itertools\nimport math\n\nn = int(input())\na = [int(x) for x in input().split()]\namin = min(a)\nb = list([x for x in enumerate(a) if x[1] == amin])\nl = len(b)\nk = max((b[(i+1) % l][0] - b[i][0] - 1)%n for i in range(l))\nprint(amin*n + k)\n\n\n", "n = int(input())\nnumbers = input().split(\" \")\nmi = 10000000007\nfor i in range(len(numbers)):\n    mi = min(mi, int(numbers[i]))\nfor i in range(len(numbers)):\n    numbers[i] = int(numbers[i])-mi\n\nret = 0\nlength = 0\nj=0\nwhile numbers[j] > 0:\n    j+=1\nfor i in range(len(numbers)):\n    if numbers[i] != 0:\n        length+=1\n    else:\n        ret = max(ret, length)\n        length = 0\nret = max(ret, length+j)\nprint(ret+n*mi)\n", "n = int(input())\nv = [int(x) for x in input().split()]\nlow = min(v)\n\nres = low * n\nv = [x-low for x in v]\nv *= 2\n\nstart = -1\nsol = 0\n\nfor i, x in enumerate(v):\n    if x != 0:\n        if start < 0:\n            start = i\n    else:\n        if start >= 0:\n            sol = max(sol, i-start)\n            start = -1\n\nres += sol\nprint(res)\n", "n = int(input())\nnums = list(map(int, input().split()))\nm = min(nums)\n\nx = [num > m for num in nums]\nx = x + x\n\nleft = 0\nright = 0\nans = 0\nwhile right < 2 * n:\n    if left == right:\n        right += 1\n    elif not x[left]:\n        left += 1\n    elif x[right]:\n        right += 1\n    else:\n        ans = max(ans, right - left)\n        left = right\nprint(n * m + ans)", "n = int(input())\na = list(map(int, input().split()))\nm = min(a)\nb = [int(a[i] > m) for i in range(n)]\nL = Max = 0\nlast = -1\nfor i in range(n):\n    if b[i] == 0 and last != -1:\n        Max = max(i - last, Max)\n        last = -1\n    elif last == -1 and b[i]:\n        last = i\nif last != -1:\n    Max = max(n - last, Max)\nif b[0] and b[-1]:\n    L = 0; R = n - 1\n    while b[L] and L < n - 1: L += 1\n    while b[R] and L > 0: R -= 1\n    L -= 1; R += 1\n    Max = max(L + n - R + 1, Max)\nans = m * n + Max\nprint(ans)\n", "x = int(input())\ns = [int(i) for i in input().split()]\nn = min(s)\ncount = n*x\nt = 0\nfor i in range(x):\n\ts[i]-= n\ns += s\nm = 0\nfor i in s:\n\tif not i:\n\t\tm = max(m, t)\n\t\tt = 0\n\telse:\n\t\tt+=1\nprint(count+m)\n", "#Vika\ncol=int(input())\nll=list(map(int, input().split()))\na1=col*min(ll)\nm=min(ll)\ns=[]\nt=0\nfor i in ll:\n    t+=1\n    if i==m:\n        s.append(t-1)\n        t=0\ns[0]+=t\nprint(a1+max(s))\n", "import sys\nif False:\n\tinp = open('B.txt', 'r')\nelse:\n\tinp = sys.stdin\n\nn = int(inp.readline())\nliters = list(map(int, inp.readline().split()))\nbefore = 0\nafter = 0\nlow = 10**9+10\nmaxBetween = 0\nbetween = 0\nfor i in range(n):\n\tif liters[i] == low:\n\t\tafter = -1\n\t\tmaxBetween = max(maxBetween, between)\n\t\tbetween = -1\n\tif liters[i] < low:\n\t\tbefore = i\n\t\tlow = liters[i]\n\t\tafter = -1\n\t\tbetween = -1\n\t\tmaxBetween = 0\n\tafter += 1\n\tbetween += 1\nans = low*n + max(maxBetween, before + after)\nprint(ans)\n", "N=int(input())\nx=list(map(int,input().split()))\nf=min(x)\nans=N*f\ncurlen=0\nmaxlen=0\nindex=0\nwhile(index<2*N):\n    if (x[index%N]==f):\n        maxlen=max(maxlen,curlen)\n        curlen=0\n    else:\n        curlen+=1\n    index+=1\nmaxlen=max(maxlen,curlen)\nprint(ans+maxlen)\n", "def main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    \n    mi = min(a)\n    d = 0\n    p = n + a.index(mi)\n    for i in range(n - 1, -1, -1):\n        if a[i] == mi:\n            p = i\n        d = max(d, p - i)\n    print(mi * n + d)\n    \n    \n    \nmain()", "n = int(input())\na = list(map(int, input().split()))\nminimum = min(a)\nmaximum = 0\nans = 0\nind = 0\nchallengers = []\n\nfor i in range(n):\n    if a[i] != minimum and a[i - 1] == minimum:\n        challengers.append(i)\n        \nwhile challengers:\n    cnt = 0\n    num = challengers.pop()\n    similar = num\n    while a[similar] != minimum:\n        cnt += 1\n        similar = (similar + 1) % n\n    if cnt > maximum:\n        maximum = cnt\n        ind = num\n    \n\nans = minimum * n\nwhile a[ind] != minimum:\n    ans += 1\n    ind = (ind + 1) % n\nprint(ans)", "__author__ = 'Utena'\nn=int(input())\ns=list(map(int,input().split()))\nm=min(s)\na=[]\nb=[]\nfor i in range(n):\n    if s[i]==m:\n        a.append(i)\nfor t in range(len(a)-1):\n    b.append(a[t+1]-a[t]-1)\nb.append(a[0]-a[-1]-1+n)\nprint(n*m+max(b))", "n = int(input())\na = list(map(int, str(input()).split()))\n\n# print('n', n)\n# print('a', a)\n\nminNumber = min(a)\nsumA = minNumber * n\n\n# print('sumA', sumA)\n\nfor i in range(n):\n    a[i] -= minNumber\n\n# print('a', a)\n\nhasGoRound = False\nisCounting = False\nindex = 0\ncount = 0\nmaxCount = 0\nwhile True:\n    # print('\\ta', a[index])\n    if a[index] != 0 and not isCounting:\n        isCounting = True\n    if a[index] != 0 and isCounting:\n        count += 1\n    else:\n        if maxCount < count:\n            maxCount = count\n        if hasGoRound:\n            break\n        isCounting = False\n        count = 0\n    index += 1\n    if index == n:\n        index = 0\n        hasGoRound = True\n# print('maxCount', maxCount)\nprint(sumA + maxCount)", "def find_right(x, data):\n    answer = -1\n    for i in range(len(data)):\n        if data[i] == x:\n            answer = i\n    return answer\n\ndef find_left(x, data):\n    for i in range(len(data)):\n        if data[i] == x:\n            return i\n\n\nn = int(input())\ndata = list(map(int, input().split()))\nmin1 = min(data)\nindex_min_r = find_right(min1, data)\nindex_min_l = find_left(min1, data)\nk = data.count(min1)\nc = index_min_r - index_min_l - 1\nhelp = []\nfor i in range(n):\n    if data[i] == min1:\n        help.append(i)\nanswer = []\nfor i in range(1, len(help)):\n    answer.append(help[i] - help[i - 1] - 1)\nanswer.append(n - (help[-1] - help[0]) - 1)\nprint(max(answer) + n * min1)", "trash = int(input());\nline1 = [int(x) for x in input().split()];\n\nlow = min(line1);\nlows = [];\n\nfor i in range(0, len(line1)):\n    if(line1[i]==low):\n        lows.append(i);\n\ndists = [];\n\nfor i in range(1, len(lows)):\n    dists.append((lows[i]-lows[i-1]) - 1);\n    \ndists.append( lows[0] + (len(line1)-1) - lows[-1] );\n\nprint((max(dists) + low * len(line1) ));\n\n            \n\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nm = min(a)\nmdist = 0\n\nfst, l = None, None\nfor i in [i for i, x in enumerate(a) if x == m]:\n    if fst is None:\n        fst = l = i\n    else:\n        mdist = max(mdist, i - l - 1)\n        l = i\n\nmdist = max(mdist, fst + (n - l) - 1)\nprint(n*m + mdist)\n", "n=int(input())\na=list(map(int,input().split()))\nmi=min(a)\ncur=0\nans=0\nfor i in range(3*n):\n    if(a[i%n]==mi):\n     cur=0\n    else:\n     cur+=1\n    ans=max(ans,cur)\nprint(n*mi+ans)     \n     \n", "n = int(input())\n\ncolors = list(map(int, input().split()))\n\nm = min(colors)\nlongest_sub = 0\ncur_sub = 0\npos = 0\nbreak_on_min = False\nwhile pos < n:\n    if colors[pos] > m:\n        cur_sub += 1\n        if cur_sub > longest_sub:\n            longest_sub = cur_sub\n    else:\n        cur_sub = 0\n        if break_on_min:\n            break\n\n    pos += 1\n    if pos == n and cur_sub > 0:\n        pos = 0\n        break_on_min = True\n\nprint(m*n + longest_sub)", "n=int(input())\na=list(map(int,input().split()))\nl=len(a)\nm=min(a)\nmi=[]\nb=0\nfor i in range(l):\n    if m==a[i]:\n        mi.append(i)\nif len(mi)>1:\n    c=l-1-mi[-1]+mi[0]\n    for i in range(len(mi)-1):\n        b=mi[i+1]-mi[i]-1\n        if b>c:\n            c=b\n    print(l*m+c)\nelse:\n    print((m+1)*l-1)\n", "import sys\n\nn = int(input())\npaint = list(map(int, input().split()))\nlow, high = min(paint), max(paint)\nif low == high:\n    print(n * low)\n    return\n\ncount, best = 0, 0\nstart = paint.index(low)\npos = start\nwhile True:\n    pos += 1\n    if pos == n:\n        pos = 0\n    if pos == start:\n        break\n    if paint[pos] != low:\n        count += 1\n        best = max(best, count)\n    else:\n        count = 0\nprint(n * low + best)\n", "n = int(input())\nl = list(map(int, input().split()))\n\nmini = min(l)\nfor i in range(n): l[i] -= mini\nres = mini * n\ntmp = 0\nmaxi = 0\nfor i in range(2 * n):\n    if l[i % n] > 0:\n        tmp += 1\n        if tmp > maxi: maxi = tmp\n    else: tmp = 0\n    \nprint(res + maxi)", "n=int(input())\na=list(map(int,input().split()))\nh=min(a)\na=a+a\npos=a.index(h)\nw=0\nfor i in range(pos+1,2*n):\n    if a[i]==h:\n        w=max(w,i-pos-1)\n        pos=i\nprint(h*n+w)", "n = int(input())\ncol = list(map(int,input().split()))\nlow = min(col)\nstart = int()\nstore = list()\ndist = list()\nfor i in range(len(col)):\n    if col[i]==low:\n        store.append(i+1)\n        if i+1 in range(len(col)):\n            start = col[i+1]\n        else:\n            start = col[0]\n            \nfor j in range(len(store)):\n    if j==(len(store)-1):\n        dist.append(n - store[-1] + store[0])\n    else:\n        dist.append(store[j+1]-store[j])\n        \nhigh = max(dist)\n\nif max(col) == min(col):\n    print(max(col)*n)\nelif len(store)==1:\n    print(n*(low+1) -1)\nelse:\n    print(n*(low) +( high -1))\n\n"]