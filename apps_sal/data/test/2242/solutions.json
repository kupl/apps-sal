["s=input()[::-1]\nalist=[0]*2019\nnum1=0\nnum2=1/10\nlens=len(s)\nfor i in range(lens):\n  num2=int(((num2)*10)%2019)\n  num1=(num1+int(s[i])*(num2))%2019\n  alist[num1]+=1\nalist[0]+=1\nans=0\nfor i in range(2019):\n  ans+=alist[i]*(alist[i]-1)//2\nprint(ans)", "ans=0\nS=input()\na=len(S)\nk=0\nc=dict()\nmod=2019\ns=1\nc[0]=1\nfor i in range(a):\n  k+=(s*int(S[a-i-1]))\n  k%=mod\n  s*=10\n  s%=mod\n  if k in c:\n    c[k]+=1\n  else:\n    c[k]=1\nfor i in c:\n  ans+=c[i]*(c[i]-1)//2\nprint(ans)", "S = input()\nN = len(S)\nA = [int(S[i]) for i in range(N)]\nA = A[::-1]\n\nMOD = 2019\n\np10 = [1] * N\nfor i in range(1, N):\n\tp10[i] = (p10[i - 1] * 10) % MOD\n\nfor i in range(N):\n\tA[i] = (A[i] * p10[i]) % MOD\n\ncumsum = [A[0]] * N\nfor i in range(1, N):\n\tcumsum[i] = (cumsum[i - 1] + A[i]) % MOD\n\ncnt = [0] * MOD\ncnt[0] = 1\nfor i in range(N):\n\tcnt[cumsum[i]] += 1\n\nans = 0\nfor i in range(MOD):\n\tans += cnt[i] * (cnt[i] - 1) // 2\n\nprint(ans)\n", "S = input()\nN = len(S)\nq = [0]\ncount = [0 for i in range(2019)]\nans = 0\ncount[0] = 1\nm10 = 1\n\nfor i in range(1,N+1):\n  a = int(S[-i])\n  #print(a, a*(10**(N-i-1)), q)\n  q.append((a*m10+q[i-1])%2019)\n  m10 *= 10\n  m10 %= 2019\n  count[q[-1]] += 1\n\n#print(q)\n\nfor i in range(2019):\n  c = count[i]\n  ans += c*(c-1)//2\n\nprint(ans)\n", "import sys;      from decimal import Decimal\nimport math;     from itertools import combinations, product\nimport bisect;   from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef lcm(a: int, b: int) -> int: return (a * b) // math.gcd(a, b)\n\nimport numpy as np\n\ndef Main():\n    s = read_str()\n    dp = np.zeros(2019, dtype=np.int64)\n    dp[0] = 1\n\n    cur = 0\n    digit = 1\n\n    for i in reversed(s):\n        cur = (cur + int(i) * digit) % 2019\n        dp[cur] += 1\n        digit = digit * 10 % 2019\n    \n    print(np.sum([x * (x - 1) // 2 for x in dp]))\n\nif __name__ ==  '__main__':\n    Main()", "import copy\n\ns = list(input())\n\ns.reverse()\nn = len(s)\nMOD = 2019\nm = [0] * n\nmsum = [0] * (n+1)\ncnt = [0] * (MOD)\ncnt[0] = 1\nt = 1\nfor i in range(n):\n    m[i] = int(s[i]) * t % MOD\n    msum[i+1] = (msum[i] + m[i]) % MOD\n    cnt[msum[i+1]] += 1\n    t = t * 10 % MOD\n\nans = 0\nfor i in range(MOD):\n    ans += cnt[i] * (cnt[i] - 1) // 2\nprint(ans)", "N = str(input())\nn,mods = 0,[1]+[0]*2018\nd = 1\nfor i in reversed(N):\n  n = (n+int(i)*d)%2019\n  mods[n] += 1\n  d = (d*10)%2019\n\nprint(sum([i*(i-1)//2 for i in mods]))", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7 \n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nS = list(map(int, list(input())))[::-1]\n\nl = [0]*2019\nl[0] = 1\n\ntmp = 0\nz = 1\n\nfor i, s in enumerate(S):\n\ttmp += s*z\n\tz = z*10%2019\n\tl[tmp%2019] += 1\n\nans = 0\nfor v in l:\n\tans += v*(v-1)//2\n\nprint(ans)", "\ndef solve():\n    s=input().split()[0]\n    cnt=[0]*2020\n    cnt[0]=1\n    m=0\n    t=1\n    for d in map(int,s[-1::-1]) :\n        m=(m+d*t)%2019\n        t=(t*10)%2019\n        cnt[m]+=1\n    return sum([ k*(k-1)//2 for k in cnt])\n\nprint((solve()))\n", "from collections import Counter\n\n# for\u3092\u9006\u304b\u3089\u56de\u3057\u3066\u4e0b\u304b\u3089\u7d20\u76f4\u306bmod\u3092\u53d6\u308b\u3068TLE\u3060\u3063\u305f\n# \u7d2f\u7a4d\u548c\u7684\u306a\u8a08\u7b97\u3067\u9ad8\u901f\u5316\u3001\u3084\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306breverse\nS = input()[::-1]\n# ex. 1817181712114 \u2192 4112171817181\n# print(S)\n\n# 0\u6841\u76ee\u307e\u3067\u306eMOD\u30920\u3068\u3059\u308b\u3053\u3068\u3067\u3001\n# 1\u6841\u76ee\u3092\u542b\u3080\u6570\u304c2019\u306e\u500d\u6570\u306e\u6642\u306b\u90fd\u5408\u304c\u826f\u304f\u306a\u308b\nX = [0]\n\n# 4,14,114,2114,12114,...\u306emod2019\u3092\u8a08\u7b97\n\nfor i, s in enumerate(S):\n    X.append((X[-1] + int(s) * pow(10, i, 2019)) % 2019)\n# print(X)\n\n\nC = Counter(X)\n# print(C)\n\nans = 0\n# X\u304c\u540c\u3058\u306b\u306a\u3063\u305f\u3068\u3053\u308d\u30922\u3064\u9078\u3079\u3070\u984c\u610f\u3092\u6e80\u305f\u3059\n# v_C_2\u306e\u8a08\u7b97\nfor v in list(C.values()):\n    ans += v * (v - 1) // 2\n\nprint(ans)\n", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom collections import Counter\ndef main():\n    s = input()\n    n = len(s)\n\n    amari = [0] * n\n    ketaamari = 1\n    t = 0\n    for i1 in range(n):\n        t = (t + ketaamari * int(s[-i1 -1])) % 2019\n        amari[-i1-1] = t\n        ketaamari = (ketaamari * 10) % 2019\n    amari.append(0)\n    ac = Counter(amari)\n    r = 0\n    for v in ac.values():\n        r += v * (v - 1) // 2\n    print(r)\n\ndef __starting_point():\n    main()\n__starting_point()", "from collections import Counter\n\nS=input()\n\nrlist=[0]\nfor i in range(len(S)):\n  rlist.append((rlist[-1]+int(S[-i-1])*pow(10,i,2019))%2019)\n  \nc = Counter(rlist)\nc[0] -= 1\n\ndef nC2(n):\n  return n*(n-1)//2\n  \nans = c[0]\nfor k in c.keys():\n  if c[k] >= 2:\n    ans += nC2(c[k])\n    \nprint(ans)", "from collections import Counter\n\nS = input()\n# S = \"12345\"*40000\nN = len(S)\n\nl = [0]*(N+1)\nfor i in range(N-1, -1, -1):\n    l[i] = (l[i+1] + pow(10, N-i, 2019) * int(S[i])) % 2019\n    # if i%10000 == 0:\n    #     print(i)\n\n# print(list(Counter(l).values()))\n\nr = sum(m*(m-1)//2 for m in Counter(l).values())\nprint(r)", "s = input()\nt = s[::-1]\nn = len(s)\nresid = [0] * 2019\nresid[0] = 1\ncsum = 0\npowoften = 1\nfor i in range(n):\n    csum = (csum + int(t[i]) * powoften) % 2019\n    powoften = (10 * powoften) % 2019\n    resid[csum] += 1\nans = 0\nfor i in range(2019):\n    ans += resid[i] * (resid[i] - 1) // 2\nprint(ans)", "s = input()\nmod = 2019\ndic = [0] * mod\ndic[0] += 1\n\ntmp = 0\nd = 1\nfor i in reversed(range(len(s))):\n    tmp += int(s[i]) * d\n    tmp %= mod\n    d *= 10\n    d %= mod\n    dic[tmp] += 1\n\nans = [i * (i-1) / 2 for i in dic]\nprint(int(sum(ans)))", "s = input()\n\nl = len(s)\nnum = 0\ncount = 0\ndic = {0: 1}\nfor i in range(l - 1, -1, -1):\n  num = (num + int(s[i]) * pow(10, l - i - 1, 2019)) % 2019\n  #print(num)\n  #print(r)\n  if num not in dic:\n    dic[num] = 1\n  else:\n    dic[num] += 1\nfor ele in list(dic.values()):\n  count += ele * (ele - 1) // 2\nprint(count)\n", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nfrom functools import reduce, lru_cache\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef MAP1()  : return map(lambda x:int(x)-1,input().split())\ndef LIST()  : return list(MAP())\ndef LIST1() : return list(MAP1())\n\ns = input()\n\n@lru_cache(None)\ndef F(s, k):\n    # s\u306e\u5de6\u304b\u3089k\u6587\u5b57\u76ee\u4ee5\u964d\u3092\u6574\u6570\u3068\u898b\u306a\u3057\u305f\u3068\u304d\u3001\n    # 2019\u3067\u5272\u3063\u305f\u4f59\u308a\u3092\u8fd4\u3059\n    if k == len(s)-1:\n        return int(s[k])\n    ret = F(s, k+1) + int(s[k])*pow(10, len(s)-1-k, 2019)\n    ret %= 2019\n    return ret\n\na = [0]*2020\nfor i in range(len(s)):\n    a[F(s, i)] += 1\n\nans = a[0]\nfor i in range(2020):\n    ans += a[i] * (a[i]-1) // 2\n\nprint(ans)", "S=input()\nMOD=2019\ndp=[0]*MOD\ndp[0]=1\nr=0\nt=1\nfor c in reversed(S):\n    r+=int(c)*t\n    r%=MOD\n    t*=10\n    t%=MOD\n    dp[r]+=1\nprint(sum(i*(i-1)//2 for i in dp))", "S = input()\ndp = [0]*(len(S)+1)\ncur = int(S[len(S)-1])\nmod_10 = 1\ncount_num = [0]*2019\ncount_num[0] += 1\nfor i in range(len(S)):\n    dp[len(S)-i-1] = cur\n    count_num[cur] += 1\n    mod_10 = (mod_10*10)%2019\n    if i <= len(S)-2:\n        cur = (cur+int(S[len(S)-i-2])*(mod_10))%2019\nans = 0\nfor i in range(2019):\n    ans += (count_num[i]*(count_num[i]-1))//2\nprint(ans)\n", "S=input()\nans,n=0,len(S)\ndp=[0]*(2019)\ns,dp[0],k=0,1,1\nfor i in S[::-1]:\n  s=(s+int(i)*k)%2019\n  k=(k*10)%2019\n  ans+=dp[s]\n  dp[s]+=1\nprint(ans)", "#!/usr/bin/env python3\n\nimport numpy as np\nfrom collections import Counter\n\nYEAR = 2019\n\n\ndef solve(S: str):\n    # S \u306e\u5404\u6841\u3092 modYear \u8a08\u306b\u4fee\u6b63\u3059\u308b\n    mod_year = np.arange(1, 10)\n    mod_s = []\n    for Si in map(int, reversed(S)):\n        mod_s.append(mod_year[Si - 1])\n        mod_year = (mod_year * 10) % YEAR\n    # print(mod_s)\n    # mod_s \u3092\u7d2f\u7a4d\u548c\u306b\u3059\u308b\n    cum_sum = 0\n    cum_sums = [cum_sum]\n    for x in mod_s:\n        cum_sum = (cum_sum + x) % YEAR\n        cum_sums.append(cum_sum)\n\n    # \u5834\u5408\u5206\u3051\u306e\u6570\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\n    answer = 0\n    for _, num in list(Counter(cum_sums).items()):\n        answer += (num * (num - 1)) // 2  # 1 \u306e\u66420\u306a\u306e\u3067\u5834\u5408\u5206\u3051\u306f\u3044\u3089\u306a\u3044\n    return answer\n\n\ndef main():\n    S = input().strip()\n    answer = solve(S)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import collections\n\ns=list(input())\na=[0]\n\ns.reverse()\n\nmod=2019\n\nmod10=1\n\nfor i in range(len(s)):\n  x=int(s[i])\n  y=a[-1]\n  ans=(x*mod10+y)%mod\n  a.append(ans)\n  mod10=(mod10*10)%mod\n  \nans1=0\n\nc = collections.Counter(a)\nd=list(c.values())\n\nfor r in d:\n  if r>=2:\n    ans1+=(r*(r-1))//2\n    \nprint(ans1)", "s = input()\ns = s[::-1]\n\nL = [0]\ncnt = 1\nfor i in range(len(s)):\n    L.append((L[-1]+(int(s[i])*cnt))%2019)\n    cnt *= 10\n    cnt %= 2019\n\nD = dict()\nfor j in L:\n    if j in D:\n        D[j] += 1\n    else:\n        D[j] = 1\nans = 0\nfor k in D.values():\n    ans += k * (k-1) //2\n\nprint(ans)", "s=input()[::-1]\nn=len(s)\ncnts=[0]*2019\ncnts[0]=1\nnum=0\nfor i in range(n):\n  num+=int(s[i])*pow(10,i,2019)\n  num%=2019\n  cnts[num]+=1\n\nans=0\nfor cnt in cnts:\n  ans+=cnt*(cnt-1)//2\n  \nprint(ans)\n", "s = list(input())\n\nMOD = 2019\n\ntemp = 0\nd = 1\n\nm = [0] * MOD\nm[0] = 1\n\nfor x in reversed(s):\n    temp += int(x) * d\n    temp %= MOD\n    m[temp] += 1\n    d = (d * 10) % MOD\n\nans = 0\nfor x in m:\n    ans += x * (x-1) // 2\n\nprint(ans)", "s=input()[::-1]\nn=len(s)\np=2019\nS=[0 for i in range(n+1)]\nans=[0]*p\n\nx10=1\nfor j, i in enumerate(s):\n  S[j+1]=(S[j]+(x10*int(i)))%p\n  x10*=10\n  x10%=p\n  ans[S[j+1]]+=1\n\ncnt=ans[0]\nfor a in ans:\n  cnt+=(a*(a-1))//2\n  \nprint(cnt)\n", "S = input()\n\nmod = 2019\ncnt = [0] * 2019\ncur = 0  # \u73fe\u5728\u691c\u8a0e\u4e2d\u306e\u90e8\u5206\u6587\u5b57\u5217\ncnt[cur] = 1\nd = 1   # \u6841\n\nfor s in S[::-1]:\n    cur += int(s) * d\n    cur %= mod\n    cnt[cur] += 1\n    d *= 10\n    d %= mod\n\nans = 0\nfor c in cnt:\n    ans += c * (c-1) // 2\n\nprint(ans)", "#!/usr/bin/env python3\ndef main():\n    S = input()[::-1]\n\n    counts = [0] * 2019\n    counts[0] = 1\n    res, digit = 0, 1\n    for i in S:\n        res += int(i) * digit\n        res %= 2019\n        digit *= 10\n        digit %= 2019\n        counts[res] += 1\n\n    ans = 0\n    for i in counts:\n        ans += i * (i - 1) // 2\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nn = len(s)\nmod = 2019\n\nt = [0]*n\ndp = [0]*2020\nt[0] = int(s[-1])\ndp[t[0]] += 1\nfor i in range(n-1):\n    t[i+1] = t[i] + int(s[-2-i])*pow(10, i+1, mod)\n    t[i+1] %= mod\n    dp[t[i+1]] += 1\nans = 0\nfor D in dp[1:]:\n    ans += D*(D-1)//2\nprint((ans+(dp[0]+1)*(dp[0])//2))\n\n\n", "#!/usr/bin/env python3\nimport sys\nimport numpy as np\n\ninput = sys.stdin.readline\n\n\ndef ST():\n    return input().rstrip()\n\n\ndef I():\n    return int(input())\n\n\ndef MI():\n    return list(map(int, input().split()))\n\n\ndef LI():\n    return list(MI())\n\n\nS = ST()\n\ncnt = np.zeros(2019)\ncnt[0] = 1\nres = 0\ntmp = 1\nfor s in S[::-1]:\n    res += int(s) * tmp\n    res %= 2019\n    cnt[res] += 1\n    tmp *= 10\n    tmp %= 2019\n\nans = 0\nfor c in cnt[cnt >= 2]:\n    ans += c * (c - 1) // 2\n\nprint((int(ans)))\n", "def main():\n    import collections\n\n    S = input()\n\n    mod_list = [0]\n\n    for i in range(len(S)):\n        index = len(S) - i - 1\n        num = int(S[index])\n\n        mod_list.append((mod_list[-1] + num * pow(10, i, 2019)) % 2019)\n\n    CTR_mod_list = collections.Counter(mod_list).most_common()\n    cnt = 0\n\n    for i in range(len(CTR_mod_list)):\n        n = CTR_mod_list[i][1]\n\n        if (n == 1):\n            break\n\n        cnt += n * (n - 1) // 2\n\n    print(cnt)\n\ndef __starting_point():\n    main()\n__starting_point()", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\n# Summarize count of factor within list -- START --\ndef summarizeList(l):\n  sl=sorted(l)\n\n  a=sl[0]\n  c=1\n  res=[]\n\n  for x in sl[1:]:\n    if x==a:\n      c+=1\n    else:\n      res.append([a,c])\n      a=x\n      c=1\n  res.append([a,c])\n\n  return res\n# Summarize count of factor within list --- END ---\n\n# \u7d2f\u7a4d\u548c\u306e\u66f8\u304d\u65b9\u304c\u3088\u304f\u306a\u3044\u3084\u3064\ndef main():\n  s=S()\n  n=len(s)\n\n  l=[]\n  mul=1\n  for x in s[::-1]:\n    l.append(mul*int(x)%2019)\n    mul*=10\n    mul%=2019\n\n  for i in range(n-1):\n    l[i+1]+=l[i]\n    l[i+1]%=2019\n\n  sl=summarizeList(l)\n  # print(sl)\n\n  ans=0\n  for x,c in sl:\n    if x==0:\n      ans+=c\n    if c>1:\n      ans+=c*(c-1)//2\n\n  return ans\n\n# main()\nprint((main()))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep  7 00:38:11 2020\n\n@author: liang\n\"\"\"\n\n\"\"\"\n\uff1cD - Multiple of 2019>\n\u3010\u65b9\u91dd\u3011\na = b(mod2019) => a - b \u306f\u30002019\u306e\u500d\u6570\n\u4f59\u308a\u304c\u7b49\u3057\u3044\u30b0\u30eb\u30fc\u30d7\u306e\u7d44\u307f\u5408\u308f\u305b\u306e\u7dcf\u6570\u304c\u89e3\u306b\u306a\u308b\u3002\n\u65e2\u306b2019\u306e\u500d\u6570\u3067\u3042\u308b\u3082\u306e\u306f\u5358\u4f53\u3067\u6210\u7acb\u3059\u308b\u305f\u3081\u3001[0]\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u4e00\u3064\u3042\u3052\u3066\u304a\u304f\n\n\n\uff1c\u7d2f\u7a4d\u548c\uff1e\n\u3010\u8a08\u7b97\u91cf\u524a\u6e1b\u3011\n\u5927\u304d\u306a\u6570\u3092\u4f7f\u308f\u306a\u3044\u3000\u21d2\u3000mod \u3092\u4f7f\u3046\ntmp += 7 * 100000000  => 7 * ( 2019*N + \u03b1) => 7 * \u03b1\u3000\u3068\u540c\u3058\n\u3000\u3000\u21d2\u3000\u7d2f\u4e57(10**N) \u306b  mod \u3092\u304b\u3051\u308b\u3068\u826f\u3044\n\n100000000 + \u03b3 => (2019*N + \u03b2) + \u03b3 => \u03b2 + \u03b3 \u3068\u540c\u3058\n\u3000\u21d2\u3000\u7d2f\u7a4d\u548c\u3000\u306b\u3000mod \u3092\u304b\u3051\u308b\u3068\u826f\u3044\n \n for\u6587\u3067\uff11\u6587\u5b57\u305a\u3064\u8db3\u3057\u7b97\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u5b9f\u88c5\u53ef\u80fd\n \n reversed() : \u9006\u9806\u306b\u4e26\u3079\u66ff\u3048\n reversed(input()) : \u5165\u529b\u3092\u9006\u9806\u306b\u53d6\u308a\u51fa\u3059\n \n\"\"\"\nS = input()\n\nMOD = 2019 \n\ncounter = [0] * 2019\ncounter[0] = 1\nt = 1\ntmp = 0\nfor i in reversed(S):\n    tmp += int(i)*t\n    tmp %= MOD #\u7d2f\u7a4d\u548c\u3092\u52b9\u7387\u5316\n    t *= 10\n    t %= MOD   #\u7d2f\u4e57\u3092\u52b9\u7387\u5316 \n    #print(tmp)\n    counter[tmp] += 1\n\nans = sum( i*(i-1)//2 for i in counter)\nprint(ans)", "s = list(input())\n# s = list(str(10**200000))\nn = len(s)\nans = 0\ns.reverse()\n# print(s)\nx = 1\ntot = 0\ncount = [0]*2019\nfor i in range(n):\n    count[tot]+=1\n    tot += int(s[i])*x\n    # print(tot)\n    tot %= 2019\n    ans += count[tot]\n    x = x*10%2019\nprint(ans)", "S = input()[::-1]\nans = 0\nmods = [0] * 2019\nmods[0] = 1\ncurrent = 0\nx = 1\nfor s in S:\n  current = (current + x * int(s)) % 2019\n  ans += mods[current % 2019]\n  mods[current % 2019] += 1\n  x = x * 10 % 2019\nprint(ans)", "s = list(map(int,input()))\ns.reverse()\nt = len(s)\nmod = 2019\n\narr = [0] * (t+1)\narr[-2] = s[0]\nfor i in range(1,t):\n    arr[t-i-1] = (arr[t-i] + s[i]*pow(10,i,mod)) % mod\n\nfrom collections import Counter\narr = Counter(arr)\n\nans = 0\nfor i in arr:\n    ans += (arr[i] - 1) * arr[i] // 2\n\nprint(ans)", "import sys\nimport heapq\nimport math\nimport fractions\nimport bisect\nimport itertools\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\ndef input(): return sys.stdin.readline().strip()\ndef mp(): return map(int,input().split())\ndef lmp(): return list(map(int,input().split()))\n\ns=input()[::-1]\nn=len(s)\na=[0]*2019\na[0]=1\nc,d=0,1\nfor i in s:\n    c+=int(i)*d\n    c%=2019\n    d*=10\n    d%=2019\n    a[c]+=1\nans=0\nfor i in a:\n    ans+=i*(i-1)//2\nprint(ans)", "from collections import Counter\nS = input()[::-1]\nMOD = 2019\nX = [0]\nfor i,s in enumerate(S):\n    X.append((X[-1]+int(s)*pow(10,i,MOD))%MOD)\nC = Counter(X)\nprint(sum([v*(v-1)//2 for v in C.values()]))", "S=input()\nans,n=0,len(S)\ndp=[0]*(2019)\ns,dp[0],k=0,1,1\nfor i in range(1,n+1):\n  s=(s+int(S[-i])*k)%2019\n  k=(k*10)%2019\n  ans+=dp[s]\n  dp[s]+=1\nprint(ans)", "n = input()\np = 2019\nt = 1\ny = 0\nc = p*[0]\n\nfor x in map(int,n[::-1]):\n  y+=t*x\n  y%=p\n  c[y]+=1\n  t*=10\n  t%=p\n\nprint(sum(i*(i-1)//2 for i in c)+c[0])", "def main():\n    def modpow(x, n, mod):\n        res = 1\n        while n:\n            if n % 2:\n                res *= x % mod\n            x *= x % mod\n            n >>= 1\n        return res\n\n    s = input()\n    s = s[::-1]\n    s_len = len(s)\n    mod = 2019\n    d = [0] * mod\n    d[0] = 1\n    rev_num = 0\n    # 2\u4ee5\u4e0a\u306a\u3089\u5171\u901a\u3059\u308bmod\u304c\u3042\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\n    for i in range(s_len):\n        rev_num += int(s[i]) * int(modpow(10, i, mod))\n        rev_num %= mod\n        d[rev_num] += 1\n    # 2\u4ee5\u4e0a\u540c\u3058mod\u304c\u3042\u3063\u305f\u3089\u305d\u3053\u304b\u30892\u3064\u9078\u3076\u9078\u3073\u65b9\n    # \u305d\u308c\u3092\u5168\u3066\u306emod\u3067\n    print(sum(i*(i-1)//2 for i in d))\n \ndef __starting_point():\n    main()\n__starting_point()", "S = input()\ns_rev = S[::-1]\n\nr_list = [0] * 2019\nr_list[0] = 1\nnum, d = 0, 1\nfor i in range(len(S)):\n    num += d*int(s_rev[i])\n    num %= 2019\n    r_list[num] += 1\n    d *= 10\n    d %= 2019\n\nans = 0\nfor i in range(2019):\n        ans += r_list[i]*(r_list[i]-1)//2\n\nprint(ans)\n", "s=input()\np=2019\nans=0\nM=[0]*p\nM[0]=1\ntmp=0\nfor i in range(len(s)):\n    tmp+=(int(s[-i-1])*pow(10,i,p))\n    tmp%=p\n    ans+=M[tmp]\n    M[tmp]+=1\nprint(ans)", "from collections import Counter\nS = input()\nS = S + '0'\nmod = 2019\np = [0] * mod\nr = 0\nd = 1\nfor s in S[::-1]:\n  t = int(s)%mod\n  r += t*d\n  r %= mod\n  d = d*10%mod\n  p[r] += 1\n\n#ans = 0\n#c = Counter(p)\n#for k,n in c.most_common()[::-1]:\n#  if k > 1 and k%2 == 0:\n#    ans += n\n#  else:break\n#print(ans)\nprint(sum([i*(i-1)//2 for i in p]))", "#https://mirucacule.hatenablog.com/entry/2020/04/27/090908\n#https://drken1215.hatenablog.com/entry/2020/04/29/171300\n\nS=str(input())[::-1]#\u9006\u9806\u3067\u683c\u7d0d\nN=len(S)\ncounter=[0]*2019\ncounter[0]=1\nans=0\nnum,d=0,1\nfor c in S:\n    num += int(c) * d\n    num %= 2019\n    d *= 10\n    d %= 2019\n    counter[num]+=1\nfor i in counter:\n    ans += i*(i-1)//2\nprint(ans)", "from collections import defaultdict\n\nS = input()\n\nd = defaultdict(int)\n\nd[0] += 1\n\nmod = 0\nR = 1\nfor i in range(len(S)):\n    mod = (mod + R * int(S[len(S) - i - 1])) % 2019\n    R = R * 10 % 2019\n    d[mod] += 1\nans = 0\nfor i in list(d.values()):\n    if i > 1:\n        ans += i * (i - 1) / 2\n\nprint((int(ans)))\n", "from collections import Counter\nS = input()\nS = S + '0'\nmod = 2019\np = [0] * mod\nr = 0\nd = 1\nfor s in S[::-1]:\n  t = int(s)%mod\n  r += t*d\n  r %= mod\n  d = d*10%mod\n  p[r] += 1\n\n#p.append(0)\n#ans = 0\n#c = Counter(p)\n#for k,n in c.most_common():\n#  if n > 1:\n#    ans += 1\n#  else:break\n  \nprint(sum([i*(i-1)//2 for i in p]))", "S = input()\nmod = 2019\n\narray = []\nfor i in range(len(S)):\n    x = (int(S[len(S)-1-i])*pow(10,i,mod))%mod\n    array.append(x)\narray2 = [0]\ny = 0\nfor i in range(len(S)):\n    y = (y+array[i])%mod\n    array2.append(y)\narray3 = [0] * 2019\nans = 0\nfor i in range(len(array2)):\n    z = array2[i]\n    ans += array3[z]\n    array3[z] += 1\nprint(ans)\n#3*673\n", "s=input()\nn=len(s)\nrui=[0]\njuu=[1]\nfor i in range(n+5):\n  juu.append(juu[-1]*10%2019)  \nfor i in range(n):\n  rui.append((rui[-1]+int(s[n-1-i])*juu[i])%2019)\nama=[0]*2019\nfor i in range(len(rui)):\n  ama[rui[i]]+=1\nans=0\ndef ui(n):\n  return max(0,n*(n-1)//2)\nfor i in range(2019):\n  ans+=ui(ama[i])\nprint(ans)  ", "def MultipleOf2019():\n    S = input()\n    s = int(S)\n    num, mod, ans = len(S), 2019, 0\n    c = [0 for _ in range(num+1)]\n    d = [0 for _ in range(mod)]\n    d[0] = 1\n    s = int(S)\n    \n    for i in range(num):\n        c[i+1] = (c[i]+int(S[-i-1])*pow(10, i, mod))%mod\n        d[c[i+1]] += 1\n\n    for i in range(mod):\n        ans += d[i]*(d[i]-1)//2\n    print(ans)\n\n\ndef __starting_point():\n    MultipleOf2019()\n    \n\n__starting_point()", "S = input()\nN = len(S)\n \ncounter = [0] * 2019\ncounter[0] = 1\nT = 0\nR = 1\nfor i in range(N):\n    T = (T + R * int(S[N - i - 1])) % 2019\n    R = 10 * R % 2019\n    counter[T] += 1\n \nans = 0\nfor i in range(2019):\n    m = counter[i]\n    ans += m * (m - 1) // 2\n \nprint(ans)", "def inN():\n    return int(input())\ndef inL():\n    return list(map(int,input().split()))\ndef inNL(n):\n    return [list(map(int,input().split())) for i in range(n)]\n\ns = input()\nn = int(s)\nl = len(s)\ncnt = 0\nmod = [0]*2019\nm = 0\nfor i in range(l):\n    m = (int(s[l-1-i])*pow(10,i,2019) + m)%2019\n    mod[m] += 1\n\ncnt += mod[0]\n\nfor i in range(2019):\n    if mod[i] > 1:\n        cnt += (mod[i]*(mod[i]-1))/2\n        #print(i)\nprint((int(cnt)))\n", "from collections import Counter\nS = list(map(int, list(input())))\nA = [0]\nfor i, s in enumerate(S[::-1]):\n    A.append((A[-1] + s * pow(10, i, 2019)) % 2019)\nprint((sum([v * (v - 1) // 2 for v in list(Counter(A).values())])))\n", "S = reversed(input())\nresiduelist = [0]\npower = 1\nresidue = 0\nfor i in S:\n    digit = int(i)\n    residue = (residue+power*digit)%2019\n    residuelist.append(residue)\n    power = (power*10)%2019\nfrom collections import Counter\nval = Counter(residuelist).values()\nans = 0\nfor j in val:\n    ans += j*(j-1)//2\nprint(ans)", "# coding: utf-8\n# Your code here!\n\nS=list(input())\nS=list(map(int,S))[::-1]\n\n\nmod=[0]*2019\nmod[0]+=1\n\nans=0\ntemp=0\np=1\nfor i in range(len(S)):\n    temp+=S[i]*p\n    p=p*10%2019\n    temp%=2019\n    ans+=mod[temp]\n    mod[temp]+=1\n\nprint(ans)\n", "s=input()\n\ns=s[::-1]\n\ncounts = [0] * 2019\ncounts[0] = 1\n\nnum=0\nd = 1\n\n\nfor char in s:\n    num += int(char) * d\n    num %= 2019\n    d *= 10\n    d %= 2019\n    counts[num] += 1\n    \nans = 0\nfor cnt in counts:\n    ans += cnt * (cnt - 1) // 2\n\nprint(ans) # \u7b54\u3048\u306e\u51fa\u529b   \n\n", "from collections import Counter\ns = input()\n\nls = len(s)\nt = [0]\nj = 1\nfor i in range(ls):\n    u = (int(s[ls-1-i])*j + t[-1]) % 2019\n    t.append(u)\n    j = (j * 10) % 2019\nc = Counter(t)\nk = list(c.keys())\nans = 0\nfor i in k:\n    ans += c[i]*(c[i]-1)/2\nprint(int(ans))", "from collections import Counter\nimport sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nmod = 2019\n\n\ns = readline().decode().rstrip()\ns = s[::-1]\nn = len(s)\nd = [0] * (n)\nd[0] = int(s[0]) % mod\n\nfor i in range(1, n):\n    d[i] = (d[i - 1] + int(s[i]) * pow(10, i, mod)) % mod\n\nd = [0] + d\n\nc = Counter(d)\nans = 0\nfor v in c.values():\n    ans += v * (v - 1) // 2\nprint(ans)", "def main():\n  n, mods = 0, [1]+[0]*2019\n  d = 1\n  for i in reversed(input()):\n    n = (n+int(i)*d)%2019\n    d = d*10%2019\n    mods[n] += 1\n  print(sum([i*(i-1)//2 for i in mods]))\nmain()", "S=input()\ns=int(S)\nmod=2019\nc=[0]*(len(S)+1)\nd=[0]*2019\n\n\nc[0]=0\nd[0]=1\nfor i in range(len(S)):\n  c[i+1]=(c[i]+int(S[-i-1])*pow(10,i,mod))%mod\n  d[c[i+1]]+=1\n  \nm=0\nfor i in range(2019):\n  m+=d[i]*(d[i]-1)//2\n\nprint(m)", "# -*- coding: utf-8 -*-\n\nS = input().strip()\n#-----\nnum = 0\ncnt_mod = {0:1}  # type {int: int} , contents {remainder : count}\nmod = 2019\nbase_pow = 1\n\nfor i in range(len(S)):\n    digit = int( S[len(S)-1-i] )\n    \n    num += (digit * base_pow) % mod\n    num %= mod\n    \n    base_pow = (base_pow * 10) % mod\n    \n    cnt_mod.setdefault(num, 0)\n    cnt_mod[num] += 1\n\n\nans = 0\n\nfor r,c in list(cnt_mod.items()):\n    # r: remainder\n    # c: count\n    if c >= 2:\n        ans += c*(c-1)//2\n\nprint(ans)\n", "from collections import Counter\n\n# for\u3092\u9006\u304b\u3089\u56de\u3057\u3066\u4e0b\u304b\u3089\u7d20\u76f4\u306bmod\u3092\u53d6\u308b\u3068TLE\u3060\u3063\u305f\n# \u7d2f\u7a4d\u548c\u7684\u306a\u8a08\u7b97\u3067\u9ad8\u901f\u5316\u3001\u3084\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306breverse\nS = input()[::-1]\n# ex. 1817181712114 \u2192 4112171817181\n# print(S)\n\n# 0\u6841\u76ee\u307e\u3067\u306eMOD\u30920\u3068\u3059\u308b\u3053\u3068\u3067\u3001\n# 1\u6841\u76ee\u3092\u542b\u3080\u6570\u304c2019\u306e\u500d\u6570\u306e\u6642\u306b\u90fd\u5408\u304c\u826f\u304f\u306a\u308b\nX = [0]\n\n# 4,14,114,2114,12114,...\u306emod2019\u3092\u8a08\u7b97\n\n# pow(a,b,c)\u306f\u666e\u901a\u306bMOD\u3059\u308b\u3088\u308a\u901f\u3044\n# \u666e\u901a\u306b\u3084\u3063\u305f\u3089TLE\u3060\u3063\u305f\nfor i, s in enumerate(S):\n    X.append((X[-1] + int(s) * pow(10, i, 2019)) % 2019)\n# print(X)\n\n\nC = Counter(X)\n# print(C)\n\nans = 0\n# X\u304c\u540c\u3058\u306b\u306a\u3063\u305f\u3068\u3053\u308d\u30922\u3064\u9078\u3079\u3070\u984c\u610f\u3092\u6e80\u305f\u3059\n# v_C_2\u306e\u8a08\u7b97\nfor v in list(C.values()):\n    ans += v * (v - 1) // 2\n\nprint(ans)\n", "from collections import Counter\nN = list(input())\nM = [0]\nS = 0\nK = 1\nans = 0\n\nfor i in range(len(N)):\n    S += int(N[-i-1])*K\n    S %= 2019\n\n    K *= 10\n    K %= 2019\n    M.append(S)\n\nP = Counter(M)\nfor i in range(2020):ans+=P[i]*(P[i]-1)//2\nprint(ans)\n", "import sys\nimport collections\n\n\ndef resolve(in_):\n    s = next(in_).strip()\n    mod = 2019\n    dp = [0] * (len(s) + 1)\n    ch0 = ord(b'0')\n    for i, b in enumerate(reversed(s), 1):\n        dp[i] = (dp[i - 1] + (b - ch0) * pow(10, i, mod)) % mod\n\n    return sum(v * (v - 1) // 2 for v in list(collections.Counter(dp).values()))\n\n\ndef main():\n    answer = resolve(sys.stdin.buffer)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#import numpy as np\n#import math\n#from decimal import *\n#from numba import njit\nfrom collections import Counter\n\n#@njit\ndef main():\n    S = input()\n    A = list(map(int, S))[::-1]\n    mod = []\n    ten = 10\n    for i in range(len(A)):\n        if i == 0:\n            mod += A[i],\n        else:\n            mod += (mod[i-1]+ten*A[i])%2019,\n            ten = (ten*10)%2019\n    mod += 0,\n\n    C = Counter(mod)\n    print(sum([c*(c-1)//2 for c in C.values()]))\n\nmain()", "S = input()\n\ncs = [0]\nr = 1\nfor c in S[::-1]:\n    cs.append((cs[-1] + r*int(c)) % 2019)\n    r *= 10\n    r %= 2019\n\nfrom collections import Counter\nctr = Counter(cs)\nans = 0\nfor v in ctr.values():\n    ans += v*(v-1)//2\nprint(ans)", "from collections import Counter\nS = input()\nS = S + '0'\nmod = 2019\np = [-1] * len(S)\nr = 0\nd = 1\nfor i,s in enumerate(S[::-1]):\n  t = int(s)%mod\n  r += t*d\n  r %= mod\n  d = d*10%mod\n  p[i] = r\n\nans = 0\nc = Counter(p)\nfor k,n in c.most_common():\n  if n > 1:\n    ans += n*(n-1)//2\n  else:break\nprint(ans)", "N = str(input())\nn,mods = 0,[1]+[0]*2018\nd = 1\nfor i in reversed(N):\n  n = (n+int(i)*d)%2019\n  mods[n] += 1\n  d = (d*10)%2019\n\nprint(sum([i*(i-1)//2 for i in mods]))", "def main():\n    s = input()\n    s_len = len(s)\n    mod = 2019\n    d = [0] * mod\n    d[0] = 1\n    rev_num = 0\n    t = 1\n    # 2\u4ee5\u4e0a\u306a\u3089\u5171\u901a\u3059\u308bmod\u304c\u3042\u3063\u305f\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\n    for i in reversed(s):\n        rev_num += int(i) * t\n        rev_num %= mod\n        d[rev_num] += 1\n        t *= 10\n        t %= mod\n    # 2\u4ee5\u4e0a\u540c\u3058mod\u304c\u3042\u3063\u305f\u3089\u305d\u3053\u304b\u30892\u3064\u9078\u3076\u9078\u3073\u65b9\n    # \u305d\u308c\u3092\u5168\u3066\u306emod\u3067\n    print(sum(i*(i-1)//2 for i in d))\n \ndef __starting_point():\n    main()\n__starting_point()", "from collections import Counter\ns=input()\nn=len(s)\nans=0\narr=[0]*(n+1)\nif s=='0':\n    print(1)\n    return\nelif n==1:\n    print(0)\n    return\nfor i in reversed(range(n)):\n    arr[i]=(arr[i+1]+int(s[i])*pow(10,n-i-1,2019))%2019\nm=Counter(arr)\nfor j in m.keys():\n    ans+=m[j]*(m[j]-1)//2\nprint(ans)", "from collections import Counter\nS = input()\nS = S + '0'\nmod = 2019\np = [0] * mod\nr = 0\nd = 1\nfor s in reversed(S):\n  t = int(s)%mod\n  r += t*d\n  r %= mod\n  d = d*10%mod\n  p[r] += 1\n\n#p.append(0)\n#ans = 0\n#c = Counter(p)\n#for k,n in c.most_common():\n#  if n > 1:\n#    ans += 1\n#  else:break\n  \nprint(sum([i*(i-1)//2 for i in p]))", "s = input()\n\nlen_s = len(s)\n\ncurrent = 0\nmod_dict = dict()\nmod_dict[0] = 1\nfor i in range(len_s-1,-1,-1):\n    c = s[i]\n    current = (current+pow(10,len_s-i-1,2019)*int(c)) % 2019\n    if current in mod_dict:\n        mod_dict[current] += 1\n    else:\n        mod_dict[current] = 1\n\ncount = 0\nfor key in mod_dict:\n    count+= (mod_dict[key]*(mod_dict[key]-1))//2\n\nprint(count)", "import sys\nimport math\nimport itertools\nimport collections\nfrom collections import deque\nfrom collections import defaultdict\n\nsys.setrecursionlimit(1000000)\nMOD = 10 ** 9 + 7\nMOD2 = 998244353\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nNI = lambda: int(input())\nNMI = lambda: map(int, input().split())\nNLI = lambda: list(NMI())\nSI = lambda: input()\n\ndef combinations_count(n, r):\n    if n == 1:\n        return 0\n    else:\n        return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n\ndef main():\n    S = SI()\n    \n    ls = []\n    len_S = len(S)\n    rem = 0\n\n    for s in range(len_S-1,-1,-1):\n        rem = (rem+int(S[s])* pow(10, len_S-s-1, 2019))%2019\n        ls.append(rem)\n    \n    import collections\n\n    cls = collections.Counter(ls)\n    clsv= list(cls.values())\n\n    ans = 0\n\n    for p in clsv:\n        ans += combinations_count(p,2)\n    ans += cls[0]\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from collections import Counter\ndef main():\n    S = input()\n    A = [0] * ((n := len(S)) + 1)\n    A[1] = (a := int(S[-1])) % 2019\n    for i in range(2, n + 1):\n        a += pow(10, i - 1, 2019) * int(S[-i])\n        A[i] = a % 2019\n    c = Counter(A)\n    ans = 0\n    for v in list(c.values()):\n        ans += v * (v - 1) // 2\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = str(input())\nMOD = 2019\nm = 0\ndigit = 1\nmods = [1] + [0] * 2018\nfor a in s[::-1]:\n    m = (m + digit * int(a)) % MOD\n    mods[m] += 1\n    digit = digit * 10 % MOD\nans = 0\nfor x in mods:\n    ans += x * (x - 1) // 2\nprint(ans)", "from collections import Counter\n\ns = input()\nn = len(s)\ndigits = [int(c) for c in s[::-1]]\na = [0] * (n + 1)\np = 2019\n\nfor i, digit in enumerate(digits):\n    a[i + 1] = (digit * pow(10, i, p) + a[i]) % p\n\ncounter = Counter(a)\nans = 0\nfor count in counter.values():\n    ans += count * (count - 1) // 2\n\nprint(ans)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun Sep  6 23:39:24 2020\n\n@author: liang\n\"\"\"\n#from scipy.special import comb\n\ncounter = [0]*2019\ncounter[0] = 1 # 0 = 0 (mod 2019)\n\nS = input()\ntmp = 0\n\"\"\"\n#\u5927\u304d\u3044\u6570\u3092\u4e00\u6c17\u306b\u639b\u3051\u306a\u3044\nfor i in range(1,len(S)+1):\n    tmp += int(S[-i])*10**(i-1)    #\u30b9\u30e9\u30a4\u30b9\u306e\u65b9\u304c\u65e9\u3044\uff08\u3051\u3069\u3001\u6f38\u5316\u5f0f\u7684\u306b\u7d2f\u7a4d\u548c\u3092\u51fa\u305b\uff09\n    #print(tmp%2019)\n    tmp %= 2019                    #\u5927\u304d\u3044\u6570\u3092\u5272\u308b\u306a\n    counter[tmp%2019] += 1\n\nans = 0\nfor i in range(2019):\n    if counter[i] >= 2:\n        #ans += comb(counter[i], 2, exact=True)\n        ans += counter[i]*(counter[i]-1)//2\nprint(ans)\n\"\"\"\nMOD = 2019\n#reversed(s) ?\nt = 1\nfor i in range(1,len(S)+1):\n    tmp += int(S[-i])*t\n    #print(\"A\", tmp)\n    tmp %= MOD \n    t *= 10\n    #print(\"B\", tmp)\n    t %= MOD\n    #print(tmp)\n    counter[tmp] += 1\n    \nprint((sum(i*(i-1)//2 for i in counter)))\n", "S = list(map(int, list(input())))\n\npops = 0\ndigi = 1\ncnt = [0] * 2019\ncnt[0] = 1\n\nwhile S:\n    s = S.pop()\n\n    pops = (pops + s * digi) % 2019\n    digi = (10 * digi) % 2019\n\n    cnt[pops] += 1\n\nans = 0\n\nfor i in range(2019):\n    ans += cnt[i] * (cnt[i] - 1) // 2\n\nprint(ans)", "S = str(input())\nN = len(S)\nb = [0] * 2019\ncount = 0\nb[0] = 1\nt = 0\nk = 1\n\nif len(S) < 4:\n    print(0)\nelse:\n    t = int(S[-1])\n    b[t] += 1\n    for i in range(1,N):\n        k = k * 10 % 2019\n        t = (k * int(S[-i-1]) + t) % 2019 \n        b[t] += 1\n\n    for i in b:\n        count += i*(i-1)//2\n\n    print(count)", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7 \n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nS = list(map(int, list(input())))[::-1]\n\nl = [0]*2019\nz = 1\ntmp = 0\nfor i, s in enumerate(S):\n\ttmp += s*z\n\tl[tmp%2019] += 1\n\tz = z*10%2019\n\nans = 0\nfor v in l:\n\tans += v*(v-1)//2\nans += l[0]\n\nprint(ans)", "from collections import Counter\nS = input()\nC = Counter()\nMOD = 2019\n\nn = 0\nfor i, s in enumerate(S[::-1]):\n    s = int(s)\n    n += pow(10, i, MOD) * s % MOD\n    C[n % MOD] += 1\n\nC[0] += 1\nans = 0\nfor v in list(C.values()):\n    ans += v * (v - 1) // 2\nprint(ans)\n", "s=[int(x) for x in reversed(list(input()))]\nn=len(s)\nx=[0]*2019\ndp = 0\ndim = 1\nfor si in s:\n  dp = (dp + si*dim) % 2019\n  x[dp] += 1\n  dim = dim * 10 % 2019\nans = x[0]\nfor i in range(2019):\n  ans += x[i]*(x[i]-1)//2\nprint(ans)", "S = input()\nS = S + '0'\nmod = 2019\np = [0] * mod\nr = 0\nd = 1\nfor s in reversed(S):\n  t = int(s)%mod\n  r += t*d\n  r %= mod\n  d = d*10%mod\n  p[r] += 1\n\nprint(sum([i*(i-1)//2 for i in p]))", "#!/usr/bin/env python3\n\nimport numpy as np\nfrom collections import Counter\n\nYEAR = 2019\n\n\ndef solve(S: str):\n    # S \u306e\u5404\u6841\u3092 modYear \u8a08\u306b\u4fee\u6b63\u3059\u308b\n    mod_year = np.arange(1, 10)\n    mod_s = []\n    for Si in map(int, reversed(S)):\n        mod_s.append(mod_year[Si - 1])\n        mod_year = (mod_year * 10) % YEAR\n    #print(mod_s)\n    # mod_s \u3092\u7d2f\u7a4d\u548c\u306b\u3059\u308b\n    cum_sum = 0\n    cum_sums = [cum_sum]\n    for x in mod_s:\n        cum_sum = (cum_sum+x) % YEAR\n        cum_sums.append(cum_sum)\n\n    answer = 0\n    for _, num in list(Counter(cum_sums).items()):\n        answer += (num * (num-1)) // 2   # 1 \u306e\u66420\u306a\u306e\u3067\u5834\u5408\u5206\u3051\u306f\u3044\u3089\u306a\u3044\n    return answer\n\n\ndef main():\n    S = input().strip()\n    answer = solve(S)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom collections import defaultdict\ndef main():\n    s = tuple(map(int, input()))\n    lens = len(s)\n\n    d1 = defaultdict(int)\n    ss = 0\n    num10 = 1\n    for i1 in range(1, lens+1):\n        ss += (int(s[-i1]) * num10) % 2019\n        ss = ss % 2019\n        d1[ss] += 1\n        num10 = (num10 * 10) % 2019\n    r = d1[0]\n    for v in d1.values():\n        r += v * (v - 1) // 2\n    print(r)\n\ndef __starting_point():\n    main()\n__starting_point()", "s=input()[::-1]\np=2019\nans=[0]*p\n\nx10, S=1, 0\nfor i in s:\n  S+=x10*int(i)\n  S%=p\n  x10*=10\n  x10%=p\n  ans[S]+=1\n\ncnt=ans[0]\nfor a in ans:\n  cnt+=(a*(a-1))//2\n  \nprint(cnt)\n", "S = input()\nmod = 2019\n\nt = len(S)\nl = [0] * (t + 1)\nfor i in range(t-1, -1, -1):\n    l[i] = (l[i+1] + int(S[i]) * pow(10, t-i-1, mod)) % mod\n\nfrom collections import Counter\n\ndef nC2(n):\n    return n * (n - 1) // 2\n\nl = list(Counter(l).values())\n\nans = 0\nfor i in l:\n    ans += nC2(i)\n\nprint(ans)", "from collections import Counter\nS = input()\nP = [0] * (len(S)+1)\nmod = 2019\nd = 1\nfor i in range(len(S), 0, -1):\n    P[i-1] = int(S[i-1])*d + P[i]\n    P[i-1] = P[i-1] % mod\n    d *= 10\n    d = d % mod\n\nP = Counter(P)\nans = 0\nfor p in P.values():\n    ans += p*(p-1)//2\nprint(ans)", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nfrom collections import defaultdict\ndef main():\n    s = tuple(map(int, input()))\n    lens = len(s)\n\n    d1 = defaultdict(int)\n    ss = 0\n    num10 = 1\n    for se in s[::-1]:\n        ss += (int(se) * num10) % 2019\n        ss = ss % 2019\n        d1[ss] += 1\n        num10 = (num10 * 10) % 2019\n    r = d1[0]\n    for v in d1.values():\n        r += v * (v - 1) // 2\n    print(r)\n\ndef __starting_point():\n    main()\n__starting_point()", "S=input()\nN=len(S)\n\nT=[0]\nfor i in range(N):\n    p = int(S[-1-i])\n    T.append( (T[-1]+ pow(10,i,2019)*p)%2019 )\n    \nfrom collections import Counter\nans=0\nU=dict(Counter(T))\nfor num in U:\n    ans += U[num]*(U[num]-1)//2\nprint(ans)", "from collections import Counter\nS = list(map(int, list(input())))\nMOD = 2019\n\nacc_mod = [0]\nfor i, s in enumerate(S[::-1]):\n    acc_mod.append((acc_mod[-1] + s * pow(10, i, MOD)) % MOD)\n\nans = 0\nfor v in list(Counter(acc_mod).values()):\n    ans += v * (v - 1) // 2\nprint(ans)\n", "from itertools import accumulate\nfrom collections import Counter\n\n\ndef solve(n):\n    return n * (n - 1) // 2\n\n\ns = input()[::-1]\nMOD = 2019\n\n# \u4e8b\u524d\u8a08\u7b97\nrest = []\nfor i, x in enumerate(s):\n    # 1, 10, 100, 1000...\u306e\u5270\u4f59\u3092\u9806\u306b\u8a08\u7b97\u3057\u3001\u5404\u6841\u307e\u3067\u306e\u5270\u4f59\u3092\u8a08\u7b97\n    if i == 0:\n        tmp = 1\n    else:\n        tmp = tmp * 10 % MOD\n    rest.append(int(x) * tmp % MOD)\n\nresult = [x % MOD for x in list(accumulate(rest))]\n\n# 0\u306f\u5358\u72ec\u30672019\u306e\u500d\u6570\nzero = result.count(0)\n\n# \u4ed6\u306f\u30b3\u30f3\u30d3\u30cd\u30fc\u30b7\u30e7\u30f3\u306e\u7d50\u679c\nc = Counter(result)\nc = list(c.values())\n\n# \u8db3\u3057\u3066\u51fa\u529b\nprint(sum([solve(x) for x in c if x >= 2]) + zero)", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7 \n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nS = input()\nn = len(S)\ns = [0]\nfor i, x in enumerate(S):\n\ts.append(int(S[i])*pow(10, n-i-1, 2019)%2019)\n\ntmp = 0\nt = []\nfor x in s:\n\ttmp = (tmp+x)%2019\n\tt.append(tmp)\n\nans = 0\nfor v in Counter(t).values():\n\tans += v*(v-1)//2\nprint(ans)", "MOD = 2019\n\"\"\"\ndef part_count(S):\n  B = [0 for _ in range(MOD)]\n  C = [0 for _ in range(MOD)]\n  L = [0 for _ in range(MOD)]\n  R = [0 for _ in range(MOD)]\n  \n  if len(S) == 1:\n    s = S[0]\n    B[s] = 1 \n    return (B, L, R, C)\n  S_L = S[:len(S)//2]\n  S_R = S[len(S)//2:]\n  \n  B1, L1, R1, C1 = part_count(S_L)\n  B2, L2, R2, C2 = part_count(S_R)\n    \n  for j in range(MOD):\n    C[j] += C1[j] + C2[j]\n    L[j] += L1[j]\n    R[j] += R2[j]\n    for i in range(MOD):\n      B[j] += B1[i] * B2[(-i + j)%MOD]\n      L[j] += B1[i] * L2[(-i + j)%MOD]\n      R[j] += B2[i] * R1[(-i + j)%MOD]\n      C[j] += R1[i] * L2[(-i + j)%MOD]\n  \n  return (B, L, R, C) #\u4e21\u5074\u96a3\u63a5\u3001\u5de6\u96a3\u63a5\u3001\u53f3\u96a3\u63a5\u3001\u96a3\u63a5\u306a\u3057\u306e\u500b\u6570\n\"\"\"\n\nS = list(input())\nS.reverse()\nN = len(S)\nS = [int(S[i]) for i in range(N)]\nMOD = 2019\n\na = 1\nfor i in range(N): \n  S[i] *= a\n  S[i] %= MOD\n  a *= 10 \n  a %= MOD\n  \n#B, L, R, C = part_count(S)\n#print(B[0] + L[0] + R[0] + C[0])\nT = [0 for _ in range(N+1)]\nfor i in range(1,N+1):\n  T[i] += S[i-1] + T[i-1]\n  T[i] %= MOD\n\n#print(T)\n\nC = [0 for i in range(MOD)]  \nfor i in range(N+1):\n  C[T[i]] += 1\n\n#print(C)\n\nans = 0\nfor i in range(MOD):\n  ans += C[i]*(C[i]-1)//2\n  \nprint(ans)\n", "s=input()\nls=len(s)\nm=[0]*(2019)\nm[0]+=1\n\ncnt = 0\nb = 0\nfor i in range(ls):\n  a = (b + pow(10,cnt,2019)*int(s[ls - i -1])) % 2019\n  m[a] += 1\n  b = a\n  cnt += 1\n\nans = 0\nfor i in m:\n  if i <= 1:\n    continue\n  ans += i*(i-1)//2\n\nprint(ans)\n", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\n# Summarize count of factor within list -- START --\ndef summarizeList(l):\n  sl=sorted(l)\n\n  a=sl[0]\n  c=1\n  res=[]\n\n  for x in sl[1:]:\n    if x==a:\n      c+=1\n    else:\n      res.append([a,c])\n      a=x\n      c=1\n  res.append([a,c])\n\n  return res\n# Summarize count of factor within list --- END ---\n\ndef main():\n  s=S()\n  n=len(s)\n  s=s[::-1]\n\n  rl=[0]*(n+1)\n  for i,x in enumerate(s):\n    rl[i+1]=(int(x)*pow(10,i,2019))%2019\n\n  for i in range(n):\n    rl[i+1]+=rl[i]\n    rl[i+1]%=2019\n\n\n  sl=summarizeList(rl)\n  # print(sl)\n\n  ans=0\n  for x,c in sl:\n    ans+=(c*(c-1))//2\n\n  return ans\n\n# main()\nprint((main()))\n", "from itertools import accumulate\n\nS = input()\n\nR = [1]\nfor _ in range(len(S)-1):\n    R.append(R[-1]*10%2019)\n\nL = [int(s)*r for s, r in zip(reversed(S), R)]\nZ = list(accumulate(L, func=lambda a, b: (a+b)%2019))\n\nT = [1]+[0]*2018\nfor z in Z:\n    T[z] += 1\n\nf = lambda n: n*(n-1)//2\nprint(sum(f(t) for t in T))", "import sys\nreadline = sys.stdin.readline\n\nS = readline().rstrip()\nDIV = 2019\n\ncur = 0\nfrom collections import defaultdict\ndic = defaultdict(int)\nfor i in range(len(S) - 1, -1, -1):\n  cur += ((int(S[i]) % DIV) * pow(10, (len(S) - 1 - i), DIV)) % DIV\n  cur %= DIV\n  dic[cur] += 1\n\nans = 0\n# 0\u306f\u5358\u72ec\u3067\u3082\u3088\u3044\nfor key, val in dic.items():\n  if key == 0:\n    ans += val\n  ans += (val * (val - 1)) // 2\n\nprint(ans)", "# \u89e3\u8aacAC\nimport math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nS = ns()\nn = len(S)\nT = [0] * (n+1)\nd = {0: 1}\nfor k in range(n-1, -1, -1):\n    tmp = (T[k+1] + pow(10, n - k - 1, 2019) * int(S[k])) % 2019\n    T[k] = tmp\n    if tmp not in list(d.keys()):\n        d[tmp] = 1\n    else:\n        d[tmp] += 1\nans = 0\nfor k, v in list(d.items()):\n    ans += v * (v - 1) // 2\nprint(ans)\n", "S=input()\nS=list(reversed(S))\n\nm=2019\ncnt=[0 for i in range(m)]\n\nlen_S=len(S)\nx=1\ntot=0\nans=0\n\nfor i in range(len(S)):\n    cnt[tot]+=1\n    tot+=(ord(S[i])-ord('0'))*x\n    tot %= m\n    ans+=cnt[tot]\n    x=x*10%m\n\nprint(ans)"]