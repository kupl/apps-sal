["n=int(input())\ns=input()\nstack=[]\nfor i in s:\n\tif i==\"(\":\n\t\tstack.append(i)\n\telif i==\")\":\n\t\tif len(stack)>0:\n\t\t\tif (stack[-1]==\"(\"):\n\t\t\t\tstack.pop()\n\t\t\telse:\n\t\t\t\tstack.append(\")\")\n\t\telse:\n\t\t\tstack.append(\")\")\nif len(stack)==0:\n\tprint (\"Yes\")\n\treturn\nif len(stack)==2:\n\tif stack[0]==\")\" and stack[1]==\"(\":\n\t\tprint (\"Yes\")\n\t\treturn\n\telse:\n\t\tprint (\"No\")\n\t\treturn\nelse:\n\tprint (\"No\")", "n = int(input())\ns = input()\n\ndiff = 0\nmin_diff = 0\n\nfor i in range(n):\n    if s[i] == \"(\": diff += 1\n    else:\n        diff -= 1\n        min_diff = min([min_diff, diff])\n        \nif min_diff >= -1 and diff == 0: print(\"Yes\")\nelse: print(\"No\")", "n=int(input())\ns=input()\nif s.count('(')!=s.count(')'):\n    print('No')\n    return \nstk=[] \nkarma=0 \nf=1 \nans=1 \nfor i in s:\n    if i=='(': \n        stk.append(i)\n    else:\n        if not stk:\n            f=0 \n            if not karma: \n                karma=1 \n            else:\n                ans=0 \n                break \n        else:\n            stk.pop() \nif ans and len(stk)==1 and stk[0]=='(':\n    print('Yes')\n    return \nif not stk and f :\n    f=1 \nif f:\n    print('Yes')\n    return \nif not ans:\n    print('No')\n    return", "from itertools import accumulate\nn = int(input())\ns = [1 if c == '(' else -1 for c in input()]\nres = sum(s) == 0\nif res:\n    l = [*accumulate(s)]\n    m = min(l)\n    res &= m >= -1\nprint('Yes' if res else 'No')\n", "\nn = int(input())\ns = input()\n\ncur = 0\n\nfor ch in s:\n\n    if ch == '(':\n        cur += 1\n    else:\n        cur -= 1\n    \n    if cur == -2:\n        print(\"No\")\n        return\n\nprint(\"Yes\" if cur == 0 else \"No\")", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\nS = input().strip()\n\nNOW = 0\nSC=[]\n\nfor s in S:\n    if s==\"(\":\n        NOW+=1\n    else:\n        NOW-=1\n    SC.append(NOW)\n\n\n    \nif SC[-1]==0 and min(SC)>=-1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "import sys\n\ninput()\nc = input()\n\n\nif not \"(\" in c:\n    print(\"No\")\n    return\n\nlast = c.rfind(\"(\")\n\ncorr = \"(\" + c[:last] + c[last + 1 :]\n\nsums = 0\nfor br in corr:\n    if br == \"(\":\n        sums += 1\n    else:\n        sums -= 1\n    if sums < 0:\n        print(\"No\")\n        return\n\nprint(\"Yes\" if sums == 0 else \"No\")\n\n", "n = int(input())\npresent = input().rstrip()\nlevel = 0\nmin_level = 0\nfor ch in present:\n    if ch == \"(\":\n        level += 1\n    else:\n        level -= 1\n        min_level = min(min_level, level)\n\nif min_level >= -1 and level == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "def solvea():\n    n = int(input())\n    d = int(input())\n    e = 5 * int(input())\n    best = 0\n    for enr in range(n // e + 1):\n        curr = e * enr\n        curr += d * ((n - curr) // d)\n        if curr <= n and curr > best:\n            best = curr\n    print(n - best)\n\n\ndef solveb():\n    a = int(input())\n    b = int(input())\n    n = int(input())\n    ans = 0\n    for i in range(a + 1):\n        for j in range(b + 1):\n            if i + j == n:\n                ans += 1\n    print(ans)\n\n\ndef solvec():\n    n = int(input())\n    curr_bal = 0\n    min_bal = 0\n    for e in input():\n        if e == '(':\n            curr_bal += 1\n        else:\n            curr_bal -= 1\n        if curr_bal < min_bal:\n            min_bal = curr_bal\n    if min_bal >= -1 and curr_bal == 0:\n        print('Yes')\n    else:\n        print('No')\n\n\ndef __starting_point():\n    solvec()\n\n__starting_point()", "N = int(input())\nS = list(input())\n\nlnum = len([x for x in S if x == \"(\"])\nrnum = len([x for x in S if x == \")\"])\nif lnum != rnum:\n    print(\"No\")\n    return\n\nlcnt = 0\nrcnt = 0\nfor x in S:\n    if x == \"(\":\n        lcnt += 1\n    else:\n        if lcnt > 0:\n            lcnt -= 1\n        else:\n            rcnt += 1\n\nif rcnt > 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "len = int(input())\ns = input()\n\nst = neg = 0\nfor i in s:\n    if i == '(':\n        st += 1\n    else:\n        st -= 1\n    \n    neg = min(neg, st)\n\nif st != 0 or neg < -1:\n    print(\"No\")\nelse:\n    print(\"Yes\")", "n = int(input())\ns= input()\n\ndepth = 0\nig = False\nfor i in range(n):\n    if(not ig and s[i] == ')' ):\n        ig = True\n        continue\n    if(s[i] == '('):\n        depth +=1\n    else:\n        depth -= 1\n    if(depth < 0):\n        print('No')\n        return\nif(ig): depth -= 1\n\nif(depth):\n    print('No')\nelse:\n    print('Yes')", "n = int(input())\nm = input()\nm = list(m)\nif n%2==0:\n    d = 0\n    for i in range(n):\n        if m[i]=='(':\n            d+=1\n        if m[i]==')':\n            d-=1\n            if d <-1:\n                d -= 400001         \n    if d == 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "n = int(input())\ns = list(input())\nif n % 2 == 1:\n    print(\"No\")\n    return\n\ns = [0 if x == \"(\" else 1 for x in s]\nif sum(s) != n // 2:\n    print(\"No\")\n    return\n\ncount = 0\nfor i in range(n):\n    if s[i] == 0:\n        count += 1\n    else:\n        count -= 1\n    if count <= -2:\n        print(\"No\")\n        return\nprint(\"Yes\")\n", "def solve():\n\tn = int(input())\n\ts = input()\n\top = 0\n\tcl = 0\n\tstack = []\n\tfor i in s:\n\t\top += int(i=='(')\n\t\tcl += int(i==')')\n\t\tif len(stack)==0:\n\t\t\tstack.append(i)\n\t\telif stack[-1]=='(' and i==')':\n\t\t\tstack.pop()\n\t\telse:\n\t\t\tstack.append(i)\n\n\tif(len(stack)<=2 and op==cl):\n\t\tprint(\"Yes\")\n\t\treturn\n\tprint(\"No\")\n\n\nsolve()", "import sys\ninput = sys.stdin.readline\n \ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n## -------------------------------\n\ndef addDictList(d, key, val):\n    if key not in d: d[key] = []\n    d[key].append(val)\n\ndef addDictInt(d, key, val):\n    if key not in d: d[key] = 0\n    d[key] = val\n    \ndef addDictCount(d, key):\n    if key not in d: d[key] = 0\n    d[key] += 1\n\ndef addDictSum(d, key, val):\n    if key not in d: d[key] = 0\n    d[key] += val\n\n## -------------------------------\n\nn = getInt()\ns = getStr()\nif n %2 == 1:\n    r = 'No'\nelse:\n    r = 'Yes'\n    num = 0\n    for i in range(n):\n        if s[i] == '(':\n            num+=1\n        else:\n            num-=1\n            if num <-1:\n                r = 'No'\n                break\n    if num != 0:\n        r = 'No'\nprint(r)\n", "n = int(input())\nseq = list(input())\n\nstack = 0\nminstack = 0\n\nfor i in seq:\n    if i == \"(\":\n        stack += 1\n    else:\n        stack -= 1\n    if stack < minstack:\n        minstack = stack\n\nif stack == 0 and minstack >= -1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "\"\"\"\nNTC here\n\"\"\"\nfrom sys import setcheckinterval, stdin\nsetcheckinterval(1000)\n \n# print(\"Case #{}: {} {}\".format(i, n + m, n * m))\n \n \ndef iin(): return int(stdin.readline())\n \n \ndef lin(): return list(map(int, stdin.readline().split()))\n\nn=iin()\ns=list(input())\nch1=s.count('(')\nif ch1==n-ch1:\n    a=[]\n    for i in range(n):\n        if a:\n            if s[i]==')' and a[-1]=='(':\n                a.pop()\n            else:\n                a.append(s[i])\n        else:\n            a.append(s[i])\n    if len(a)==2 or not a :\n        print('Yes')\n        return\nprint('No')\n\n", "n = int(input())\ns = str(input())\n\n\nop = 0\ncl = 0\n\nb = 0\n\nfor c in s:\n    if c == '(':\n        op += 1\n    if c == ')':\n        if op > 0:\n            op -= 1\n        else:\n            b += 1\n\n\n\n\nif (b == 1 and op == 1) or (b == 0 and op == 0):\n    print('Yes')\nelse:\n    print('No')\n", "n=int(input())\ns=input()\n\nlc=0\nrc=0\nl=0\nr=0\nch=1\n\nfor i in range(len(s)):\n    if(s[i]==')'):\n        l+=1\n        lc+=1\n    else:\n        r+=1\n        rc+=1\n        \n    if(l-r>=2):\n        ch=0\n        \nif(ch==1 and lc==rc):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    \n", "n = int(input())\ns = input()\n\ncount = 0\nres = \"\"\nfor i in s:\n    if i == \"(\":\n        count += 1\n    else:\n        count -= 1\n\n    if count < -1:\n        res = \"No\"\n        break\n\nif res == \"\":\n    if count == 0:\n        res = \"Yes\"\n    else:\n        res = \"No\"\n\nprint(res)\n"]