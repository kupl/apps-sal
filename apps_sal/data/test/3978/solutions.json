["n = int(input())\nA = list(map(int, input().split()))\nA.sort()\nB = [0] * n\nans = 0\nfor i in range(n):\n    if B[i] == 0:\n        ans += 1\n        B[i] = 1\n        for j in range(n):\n            if A[j] % A[i] == 0:\n                B[j] = 1\nprint(ans)", "n = int(input())\na = sorted(map(int , input().split()))\nans = 0\nfor i in range(n):\n    f = 1\n    for j in range(i):\n        if a[i] % a[j] == 0:\n            f = 0\n            break\n    ans += f\nprint(ans)", "import sys\n\ndef read():\n\treturn sys.stdin.readline()\n\ndef main():\n\tn = int(read())\n\ta = list(map(int, read().split()))\n\ta.sort()\n\tk = 0\n\tused = [0] * n\n\tfor i in range(n):\n\t\tif used[i]:\n\t\t\tcontinue\n\t\tk += 1\n\t\tfor j in range(i, n):\n\t\t\tif a[j] % a[i] == 0:\n\t\t\t\tused[j] = True\n\tprint(k)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()", "n=int(input())\nl1=list(map(int,input().split()))\nans=0\nl1.sort()\nvisited=[0]*n\nfor i in range(n):\n    if visited[i]==1:\n        continue\n    visited[i]=1\n    ans+=1\n    for j in range(i+1,n):\n        if visited[j]==0 and l1[j]%l1[i]==0:\n            visited[j]=1\nprint(ans)", "def main():\n    import sys\n    input = sys.stdin.readline\n    \n    n = int(input())\n    arr = list(map(int, input().split()))\n    color = [0] * n\n    arr.sort()\n    \n    ans = 0\n    for i in range(n):\n        if color[i]:\n            continue\n        ans += 1\n        for j in range(i, n):\n            if arr[j] % arr[i] == 0:\n                color[j] = ans\n    \n    print(ans)\n    \n    return 0\n\nmain()\n", "n = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = 1\nfor i in range(1, n):\n  ok = False\n  for j in range(i):\n    if A[i] % A[j] == 0:\n      ok = True\n  if not ok:\n    ans += 1\nprint(ans)\n", "n = int(input())\na = sorted(list(map(int, input().split())))\ns = []\nfor q in a:\n    for q1 in s:\n        if q % q1 == 0:\n            break\n    else:\n        s.append(q)\nprint(len(s))\n", "#!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\n#A\ndef A():\n    n = I()\n    a = LI()\n    a.sort()\n    f = [1]*n\n    p = 0\n    ans = 0\n    while p < n:\n        while p < n and not f[p]:\n            p += 1\n        if p == n:\n            break\n        ans += 1\n        for i in range(n):\n            if a[i]%a[p] == 0:\n                f[i] = 0\n    print(ans)\n    return\n\n#B\ndef B():\n\n    return\n\n#C\ndef C():\n\n    return\n\n#D\ndef D():\n\n    return\n\n#E\ndef E():\n\n    return\n\n#F\ndef F():\n\n    return\n\n#G\ndef G():\n\n    return\n\n#H\ndef H():\n\n    return\n\n#Solve\ndef __starting_point():\n    A()\n\n__starting_point()", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b):\n    return abs(a[0]-b[0])+abs(b[1]-a[1])\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef eld(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n            st = be\n            en = i\n        if meh<0:\n            meh = 0\n            be = i+1\n    return msf,st,en\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\n\n\ndef flush():\n    return sys.stdout.flush()\n\n\ndef fac(n):\n    ans = 1\n    for i in range(1,n+1):\n        ans*=i\n        ans%=MOD\n    return ans\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nn = int(input())\na = arrIN()\na.sort()\nf = [1]*n\ncnt = 0\nfor i in range(n):\n    if f[i]:\n        cnt+=1\n        for j in range(i,n):\n            if f[j] and a[j]%a[i]==0:\n                f[j] = 0\n        f[i] = 0\nprint(cnt)\n\n\n\n", "n=int(input())\na=[int(i) for i in input().split()]\na.sort()\ntot = 0\nd={}\nfor i in range(len(a)):\n    if a[i] not in d:\n        tot+=1\n        for j in range(i+1,len(a),1):\n            if a[j]%a[i] == 0:\n                d[a[j]]=1\nprint(tot)", "n = int(input())\n\na = list(map(int, input().split()))\n\na.sort(reverse=True)\n\ncnt = 0\nwhile a:\n    f = a.pop()\n    rm = []\n    for x in a:\n        if x % f == 0:\n            rm.append(x)\n    for x in rm:\n        a.remove(x)\n    cnt += 1\n\nprint(cnt)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\n\nA.sort()\n\nANS=[0]*n\n\nNOW=1\nfor i in range(n):\n    if ANS[i]==0:\n        ANS[i]=NOW\n\n        for j in range(i,n):\n            if A[j]%A[i]==0 and ANS[j]==0:\n                ANS[j]=NOW\n\n        NOW+=1\n\nprint(max(ANS))\n", "# @author \n\nimport sys\n\nclass APaintTheNumbers:\n    def solve(self):\n        n = int(input())\n        a = [int(_) for _ in input().split()]\n        a.sort()\n        ans = 0\n        done = [0] * n\n        for i in range(n):\n            if done[i]: continue\n            ans += 1\n            for j in range(i, n):\n                if done[j]: continue\n                if a[j] % a[i] == 0:\n                    done[j] = 1\n\n        print(ans)\n\nsolver = APaintTheNumbers()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "n = int(input())\nl = sorted(map(int, input().split()))\nseen = [False] * n\nres = 0\nfor i in range(n):\n    if seen[i]: continue\n    res += 1\n    for j in range(i, n):\n        seen[j] |= l[j] % l[i] == 0\nprint(res)", "n = int(input())\na = list(map(int, input().split()))\n\na = sorted(a)\nans = 0\nb = [0] * n\nfor i in range(n):\n    if b[i] == 0:\n        ans += 1\n        for j in range(i, n):\n            if a[j] % a[i] == 0:\n                b[j] = 1\nprint(ans)\n", "def solve(n, a):\n    a = sorted(a)\n    col = [False for i in range(n)]\n    count = 0\n    for i in range(n):\n        if not col[i]:\n            count += 1\n            col[i] = True\n            for j in range(n):\n                if a[j] % a[i] == 0:\n                    col[j] = True\n    return count\n    \nn = int(input())\na = list(map(int, input().split()))\nprint(solve(n, a))", "n=int(input())\na=[int(x) for x in input().split()]\nans=0\nwhile(min(a)<1001):\n    ans+=1\n    r=min(a)\n    for i in range(len(a)):\n        if a[i] != 1001:\n            if a[i] % r == 0:\n                a[i] = 1001\nprint(ans)", "n = int(input())\na = list(sorted(map(int, input().split())))\nans = 0\ndivs = []\nfor x in a:\n    if all(x % d != 0 for d in divs):\n        ans += 1\n        divs.append(x)\nprint(ans)\n", "def calc(X):\n    if len(X) == 0:\n        return 0\n    return calc([x for x in X if x % min(X)]) + 1\n    \nN = int(input())\nprint(calc([int(a) for a in input().split()]))\n\n\n", "ans = 0\nn = int(input())\nnew = [True] * 101\nfor a in sorted(map(int, input().split())):\n    if new[a]:\n        ans += 1\n        for b in range(a, 101, a):\n            new[b] = False  # Color all b's\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = sorted(list(set(map(int, input().split()))))\nn = len(a)\nused = [0] * n\ncnt = 0\nfor i in range(n):\n    if not used[i]:\n        used[i] = 1\n        cnt += 1\n        for j in range(i + 1, n):\n            if a[j] % a[i] == 0:\n                used[j] = 1\nprint(cnt)\n", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\ncount = 0\nfor i in range(n):\n    cur_c = a[i]\n    if not cur_c:\n        continue\n    count += 1\n    for j in range(i+1,n):\n        if a[j]%cur_c == 0:\n            a[j] = 0\nprint(count)", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    n=int(input())\n    #n,k,s= map(int, sys.stdin.readline().split(' '))\n    a=list(map(int,sys.stdin.readline().split(' ')))\n    a.sort()\n\n    i=0\n    ans=0\n    while i<len(a):\n        if a[i]:\n            ans+=1\n            j=i+1\n            while j<n:\n                if(a[j]%a[i]==0):\n                    a[j]=0\n                j+=1\n        i+=1\n    print(ans)\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nu = [0] * (n+1)\nfor i in range(n):\n    if u[i] == 0:\n        ans+=1\n    for j in range(i, n):\n        if a[j] % a[i] == 0:\n            u[j] = 1\nprint(ans)"]