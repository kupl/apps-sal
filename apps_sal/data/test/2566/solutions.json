["import math as ma\nimport sys\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li():\n\treturn list(map(int , input().split()))\n\n\ndef num():\n\treturn map(int , input().split())\n\n\ndef nu():\n\treturn int(input())\n\n\nt=nu()\nfor it in range(t):\n\tk=nu()\n\ta=li()\n\ts=sum(a)\n\tzz=[]\n\tfor i in range(7):\n\t\tpp=0\n\t\tcc=k\n\t\tfor j in range(i,7):\n\t\t\tpp+=1\n\t\t\tcc-=a[j]\n\t\t\tif(cc==0):\n\t\t\t\tbreak\n\t\tif(cc==0):\n\t\t\tzz.append(pp)\n\t\t\tcontinue\n\t\tkl=cc%s\n\t\tif(kl==0):\n\t\t\tnm=cc//s-1\n\t\telse:\n\t\t\tnm=cc//s\n\t\tcc=cc-nm*s\n\t\tnm=nm*7\n\t\tpp+=nm\n\t\tfor j in range(0,7):\n\t\t\tif(cc==0):\n\t\t\t\tbreak\n\t\t\tpp+=1\n\t\t\tcc-=a[j]\n\t\tzz.append(pp)\n\tprint(min(zz))", "for _ in range(int(input())):\n    k = int(input())\n    days = list(map(int, input().strip().split()))\n    sd = sum(days)\n    ans = 0\n    if k > sd:\n        t = k//sd\n        ans += t*7\n        k = k%sd\n    \n    if k == 0:\n        k += sd\n        ans -= 7\n    \n    ways = [days[start:]+days[:start] for start in range(7)]\n    minw = 7\n    for way in ways:\n        sk = k\n        d = 0\n        for v in way:\n            sk -= v\n            d += 1\n            if sk == 0:\n                break\n\n        if minw > d:\n            minw = d\n    \n    ans += minw\n    print(ans)\n", "def f(target):\n    i,j=0,0\n    n=14\n    l=n\n    c=0\n    while j<n:\n        if a[j]:\n            c+=1\n\n        while c>target or a[i]==0:\n            if a[i]:\n                c-=1\n            i+=1\n\n            if i==j:\n                break\n\n        if c==target:\n            l = min(l,j-i+1)\n\n        j+=1\n\n    return l\n\nfor _ in range(int(input())):\n    k=int(input())\n    a=[int(i) for i in input().split()]\n\n    t=sum(a)\n    ans=k//t * 7\n    rem=k%t\n    a*=2\n    if rem==0:\n        print(ans-7 + f(t))\n\n    else:\n        print(ans + f(rem))", "t=int(input())\nfor i in range (t):\n    k=int(input())\n    a=list(map(int,input().split()))\n    wd=sum(a)\n    rem=k%wd\n    q=k//wd\n    if(rem==0):\n        rem=wd\n        q=max(0,q-1)\n    ma=10\n    for i in range (7):\n        ls=0\n        for j in range (i,i+7):\n            ls+=a[j%7]\n            if(ls>=rem):\n                ma=min(ma,j-i+1)\n                break\n    print(q*7+ma)", "def solve():\n    k = int(input())\n    w = tuple(map(int, input().split()))\n    \n    cnt = sum(w)\n    weeks, k = divmod(k - 1, cnt)\n\n    d = 1 << 32\n    for i in range(7):\n        c = 0\n        for j in range(7):\n            c += w[(i + j) % 7]\n            if c == k + 1:\n                d = min(d, j + 1)\n                break\n    \n    print(7 * weeks + d)\n\nfor _ in range(int(input())):\n    solve()\n", "# -*- coding:utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 12/3/18\n\n\"\"\"\n\n\n\n\ndef solve(k, a):\n    w = sum(a)\n    ans = float('inf')\n    if k <= w:\n        for start in range(7):\n            for end in range(start, 8):\n                if sum(a[start: end]) >= k:\n                    ans = min(ans, end-start)\n        \n    for start in range(7):\n        for end in range(7):\n            x = sum(a[start:])\n            y = sum(a[:end+1])\n            z = k-x-y\n            if z >= 0 and z % w == 0:\n                ans = min(ans, z // w * 7 + end + 1 + 7 - start)\n    return ans\n\n\nT = int(input())\nans = []\nfor ti in range(T):\n    K = int(input())\n    A = [int(x) for x in input().split()]\n    ans.append(solve(K, A))\n    \nprint('\\n'.join(map(str, ans)))\n", "3\n# -*- coding: utf-8 -*-\n\nimport sys\n\ndef rl(proc=None):\n    if proc is not None:\n        return proc(sys.stdin.readline())\n    else:\n        return sys.stdin.readline().rstrip()\n\ndef srl(proc=None):\n    if proc is not None:\n        return list(map(proc, rl().split()))\n    else:\n        return rl().split()\n\ndef test(K, A, i):\n    r = 0\n    while K > 0:\n        if A[(r + i) % 7]:\n            K -= 1\n        r += 1\n    return r\n\ndef brute(K, A):\n    best = 1 << 60\n    for i in range(7):\n        if A[i]:\n            best = min(best, test(K, A, i))\n    return best\n\ndef solve(K, A):\n    s = sum(A)\n    if s == 0:\n        return -1\n    if K < 32:\n        return brute(K, A)\n    full_weeks = (K - 2 * s) // s\n    K -= full_weeks * s\n    return 7 * full_weeks + brute(K, A)\n\ndef main():\n    T = rl(int)\n    for t in range(1, T+1):\n        K = rl(int)\n        A = srl(int)\n        print(solve(K, A))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nwhile t:\n    k = int(input())\n    a = [int(i) for i in input().split()]\n    da = [999] * 8\n    cnt = sum(a)\n    for i in range(0, 7):\n        if not a[i]:\n            continue\n        tmp_cnt = 0\n        for j in range(0, 7):\n            x = (i + j) % 7\n            if not a[x]:\n                continue\n            tmp_cnt += 1\n            da[tmp_cnt] = min(da[tmp_cnt], j + 1)\n    if k % cnt:\n        print(k // cnt * 7 + da[k % cnt])\n    else:\n        print(k // cnt * 7 - 7 + da[cnt])\n    t -= 1\n", "#In the name of GOD!\nt = int(input())\nfor i in range(t):\n\tk = int(input())\n\ta = list(map(int, input().split()))\n\t\n\tsm = sum(a)\n\tans = 0\n\tif k % sm == 0: \n\t\tans = (k // sm - 1) * 7\n\t\tk = sm\n\telse:\n\t\tans = k // sm * 7\n\t\tk %= sm\n\t\n\tad = 7\t\n\tfor i in range(7):\n\t\tday = 0\n\t\tcnt = k\n\t\tfor j in range(i, i + 7):\n\t\t\tj %= 7\n\t\t\tday += 1\n\t\t\tcnt -= a[j]\n\t\t\tif cnt == 0:\n\t\t\t\tad = min(ad, day)\n\t\t\t\tbreak\n\t\n\tprint(ans + ad)\n", "def main():\n    count=int(input())\n    for x in range(count):\n        lessons=int(input())\n        arr=input().split()\n        tot=0\n        for y in arr:\n            if y==\"1\":\n                tot+=1\n        if lessons%tot==0:\n            a=lessons//tot-1\n            b=tot\n        else:\n            a=lessons//tot\n            b=lessons%tot\n        store=7\n        for y in range(7):\n            test=0\n            for z in range(7):\n                if arr[(y+z)%7]==\"1\":\n                    test+=1\n                if test==b:\n                    break\n            store=min(store,z+1)\n        print(a*7+store)\nmain()\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = a.count(1)\n    p = n // s\n    q = n % s\n    if q == 0:\n        w = s\n    else:\n        w = q\n    num = float(\"inf\")\n    for j in range(7):\n        tmp = 0\n        cnt = 0\n        for k in range(7):\n            tmp += a[(j + k) % 7]\n            cnt += 1\n            if tmp == w:\n                num = min(num, cnt)\n                break\n    if n - s <= 0:\n        print(num)\n    else:\n        if q == 0:\n            print(7 * (p - 1) + num)\n        else:\n            print(7 * p + num)\n", "t=int(input())\nfor u in range(t):\n    k=int(input())\n    a=list(map(int,input().split()))\n    per=a.count(1)\n    breaks=[]\n    b=a+a\n    curr=1\n    ind=b.index(1)+1\n    for i in range(7):\n        if b[ind]==0:\n            curr+=1\n            ind+=1\n        else:\n            breaks.append(curr)\n            curr=1\n            ind+=1\n    z=k%per\n    if z==0:\n        print(7*(k//per)-max(breaks)+1)\n    elif z==1:\n        print(7*(k//per)+1)\n    else:\n        brea=breaks+breaks\n        sums=[sum(brea[:z-1])]\n        for i in range(per-1):\n            sums.append(sums[-1]+brea[z+i-1]-brea[i])\n        print(7*(k//per)+1+min(sums))", "N = int(input())\nfor i in range(N):\n    k = int(input())\n    a = [int(u) for u in input().split()]\n    cc =sum(a)\n    if(cc==1):\n        ans = (k-1)*7+1\n    else:\n        if(k%cc==0):\n            ans = (k-cc)//cc*7\n            left =cc\n        else:\n            ans = k//cc*7\n            left = k%cc\n        mini = 10000\n        for i in range(7):\n            cur = 0\n            go = left\n            for j in range(7):\n                if(go==0):\n                    break\n                cur+=1\n                if(a[(i+j)%7]==1):\n                    go-=1\n            if(cur<mini):\n                mini = cur\n        ans+=mini\n    print(ans)\n", "_=int(input())\nfor __ in [0]*_:\n    day=int(input())\n    sche=[int(i)for i in input().split()]\n    week=sum(sche)\n    left=day%week+week\n    total=day//week*7-7\n    last=sche.index(1)\n    s=[]#intervals\n    for i in range(sche.index(1)+1,7):\n        if sche[i]:\n            s.append(i-last-1)\n            last=i\n    s.append(7-sum(s)-len(s)-1)\n    l=len(s)\n    total+=left\n    time=14\n    interval=s+s[:]\n    for i in range(l+1):\n        time=min(time,sum(interval[:left-1]))\n        interval.append(interval.pop(0))\n    print(total+time)\n        \n    \n", "for i in range (int(input())) :\n    k = int(input())\n    a = list(map(int, input().split()))\n    sm = sum(a)\n    ans = 0\n    if k % sm == 0 : ans = (k // sm - 1) * 7 ; k = sm\n    else : ans = k // sm * 7 ; k %= sm\n    ad = 7\t\n    for i in range (7) :\n        day, cnt = 0, k\n        for j in range (i, i + 7) :\n            j %= 7\n            day += 1\n            cnt -= a[j]\n            if cnt == 0 :\n                ad = min(ad, day)\n                break\n    print(ans + ad)\n", "for _ in range(int(input())):\n    k=int(input())\n    a=tuple(map(int,input().split()))\n    cnt=sum(a)\n    weeks,k=divmod(k-1,cnt)\n    ans=1<<32\n    for i in range(7):\n        x=0\n        for j in range(7):\n            x+=a[(i+j)%7]\n            if x==k+1:\n                ans=min(ans,j+1)\n                break\n    print(7*weeks+ans)", "t=int(input())\nfor i in range(t):\n    k=int(input())\n    week=[int(x) for x in input().split()]\n    i=1\n    need={}\n    happy=sun=0\n    answer=10**100\n    for item in week:\n        if item==1:\n            happy+=1\n            need[happy]=i\n        i+=1\n    week.reverse()\n    for item in week:\n        if item==0:\n            sun+=1\n        else:\n            break\n    week.reverse()\n    need[0]=0\n    i=happy\n    for item in week:\n        if item==1:\n            counter=8-need[happy-i+1]+((k-i)//happy)*7+need[(k-i)%happy]\n            if (k-i)%happy==0:\n                counter-=sun\n            answer=min(answer,counter)\n            i-=1\n    print(answer)\n            \n            \n", "import sys\n\nn = int(sys.stdin.readline())\n\nfor i in range(n):\n    lessons = int(sys.stdin.readline())\n    tmpSchedule = str(sys.stdin.readline()).split()\n    ans = -1\n    for j in range(7):\n        schedule = [tmpSchedule[k%7] for k in range(j,j+7)]\n    #l = schedule.find('1')\n    #r = schedule.rfind('1')\n        worked = []\n        for i in range(len(schedule)):\n            if schedule[i]=='1':\n                worked.append(i+1)\n        \n        atWeek = schedule.count('1')\n        tmpAns = ((lessons-1)//atWeek)*7\n        tmp = ((lessons)%atWeek)-1\n        if tmp<0:\n            tmp = len(worked)-1\n        tmpAns+=(worked[tmp] - worked[0]+1)\n        if tmpAns<ans or ans==-1:\n            ans = tmpAns\n    print(ans)\n", "from math import sqrt\n\ndef phi(u):\n\tans = u\n\tfor i in range(2, int(sqrt(n)) + 1):\n\t\tif u % i == 0:\n\t\t\twhile u % i == 0:\n\t\t\t\tu = u / i\n\t\t\tans = ans - int(ans / i)\n\tif n > 1:\n\t\tans = ans - int(ans / n)\n\treturn ans\n\ndef binpow(u, a, mod):\n\tans = 1\n\tif a == 0:\n\t\treturn 1;\n\twhile a > 0:\n\t\tif a % 2 == 0:\n\t\t\tu = (u ** 2) % mod\n\t\t\ta = int(a / 2)\n\t\telse :\n\t\t\tans = (ans * u) % mod\n\t\t\ta = a - 1\n\treturn int(ans)\n\ndef ffind(s, u):\n\tif u == 0:\n\t\treturn -1;\n\tans = -1;\n\twhile u > 0:\n\t\tans = s.find('1', ans + 1)\n\t\tu = u - 1\n\treturn ans\n\nn = int(input())\n\nwhile n > 0:\n\tk = int(input())\n\tss = input().split(' ')\n\ts = ''\n\tfor i in ss:\n\t\ts = s + i\n\tmx = 1000000000\n\tu = s.count('1')\t\n\tfor i in range(7):\n\t\td = s[i:].count('1')\n\t\tans = 0\n\t\tif d >= k:\n\t\t\tans = ffind(s[i:], k) + 1\n\t\telse :\n\t\t\tdd = int((k-d)/u)\n\t\t\tans = 7 - i + 7 * dd + ffind(s, k - d - dd * u) + 1\n\t\t\tif k == d + dd * u:\n\t\t\t\tans = ans - s[-1::-1].find('1')\n\n\t\tmx = min(mx, ans)\n\n\tprint(mx)\n\tn = n - 1", "from math import ceil\n\ndef main():\n    k = int(input())\n    d = [idx for idx, di in enumerate(input().split()) if di == '1']\n    dow = len(d)\n    w = ceil(k/dow)-1\n    m = k%dow\n    ans = [d[(m-1+x)%dow] + 7*(w + int(m-1+x >= (dow if m else 0))) - d[x] + 1 for x in range(dow)]\n    print(min(ans))\n    # print(ans)\n\nfor _ in range(int(input())): main()", "from sys import stdin\nfor _ in range(int(stdin.readline())):\n    K=int(stdin.readline())\n    lst=[*map(int,stdin.readline().split())]\n    ans,item=[],0\n    for i,x in enumerate(lst):\n        if x==1:ans.append(i);item+=1\n    res=100000000000000000000000\n    for i,x in enumerate(ans):\n        k=K\n        elem=0\n        if k<=item-i:elem=ans[i+k-1]-x+1\n        else:\n            elem+=(7-x)\n            k-=(item-i)\n            elem+=((k//item)*7)\n            k=k%item\n            if k==0:elem-=(7-ans[-1]-1)\n            else:elem+=ans[k-1]+1\n        res=min(res,elem)\n    print(res)", "import sys\nimport math\nimport bisect\n\ndef solve(A, first, m):\n    ans = 0\n    week_val = sum(A)\n    #print('first: %d' % first)\n    for i in range(first, 7):\n        m -= A[i]\n        ans += 1\n        if m == 0:\n            break\n    #print('after the first week, m: %d, ans: %d' % (m, ans))\n    if m > week_val:\n        if m % week_val == 0:\n            ans += 7 * (m // week_val - 1)\n            m = week_val\n        else:\n            ans += 7 * (m // week_val)\n            m %= week_val\n    #print('after middle weeks, m: %d, ans: %d' % (m, ans))\n    if m:\n        for i in range(7):\n            m -= A[i]\n            ans += 1\n            if m == 0:\n                break\n    #print('after the last week, m: %d, ans: %d' % (m, ans))\n    return ans\n\ndef main():\n    for _ in range(int(input())):\n        m = int(input())\n        A = list(map(int, input().split()))\n        #print('A: %s, m: %d' % (str(A), m))\n        min_val = 10 ** 18\n        for i in range(7):\n            val = solve(A, i, m)\n            #print('first: %d, val: %d' % (i, val))\n            min_val = min(min_val, val)\n        print(min_val)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "for _ in range(int(input())):\n\tk=int(input())\n\ta=[int(x) for x in input().split()]\n\tm=sum(a)\n\ty=k%m\n\tif y==0:\n\t\ty=m\n\tx=(k-y)//m\n\ta1=a+a\n\tml=100\n\tfor i in range(14):\n\t\ts=0\n\t\tfor j in range(i,14):\n\t\t\ts+=a1[j]\n\t\t\tif s==y:\n\t\t\t\tml=min(ml,j-i+1)\n\n\n\tans=7*x+ml\n\tprint(ans)"]