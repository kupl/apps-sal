["n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nro = list(x[i] - x[i - 1] for i in range(1, n))\n\nif max(x[i] - x[i - 1] for i in range(1, n)) > k:\n    print(-1)\n\nelse:\n    ans = 1\n    r = 0\n\n    for el in ro:\n        r += el\n\n        if r > k:\n            ans += 1\n            r = el\n\n    print(ans)\n", "n, k = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\ndiff = [x[i] - x[i - 1] for i in range(1, n)]\nif len(list([x for x in diff if x > k])) > 0:\n\tprint(-1)\n\treturn\nans = 1\ncur = 0\nfor i in diff:\n\tif cur + i > k:\n\t\tans += 1\n\t\tcur = i\n\telse:\n\t\tcur += i\nprint(ans)\n", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\nans = 1\ntmp = k\nfor i in range(n - 1):\n    if x[i + 1] - x[i] > k:\n        print(-1)\n        raise SystemExit\n    if tmp >= x[i + 1] - x[i]:\n        tmp -= x[i + 1] - x[i]\n    else:\n        ans += 1\n        tmp = k - x[i + 1] + x[i]\nprint(ans)", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nf=True\nnn=a[0]\ns=0\nnk=-1\ni=0\nwhile i<n:\n    if a[i]-nn<=k:\n        nk=a[i]\n        i+=1\n    else:\n        if nk!=-1:\n            nn=nk\n            s+=1\n            nk=-1\n        else: f=False; print(-1); break\nif f: print(s+1)", "n, k = list(map(int, input().split()))\nxs = list(map(int, input().split()))\nstart = xs[0]\nresult = 1\n\nfor i, x in enumerate(xs):\n    if (x - start) <= k:\n        continue\n    if i == 0 or xs[i] - xs[i - 1] > k:\n        print(-1)\n        break\n    result += 1\n    start = xs[i - 1]\nelse:\n    print(result)\n", "n, k = map(int, input().split())\ncoords = []\nfor i in map(int, input().split()):\n    coords.append(i)\n\ncur = 0\ncount = 0\nwhile cur != len(coords) - 1 and len(coords):\n    #next_coord = coords.pop(0)\n    val = coords[cur] + k\n    if val < coords[cur + 1]:\n        print('-1')\n        return\n    while cur < len(coords) and val > coords[cur]:\n        cur += 1\n    if cur >= len(coords) or coords[cur] > val:\n        cur -= 1\n    count += 1\nprint(count)", "a = input().split()\nn, k = int(a[0]), int(a[1])\nsharings = []\ns = 0\ncoords = input().split()\nfor i in range(n):\n    coord = int(coords[i])\n    sharings.append(coord)\n    if i != 0 and sharings[i - 1] + k < coord:\n        s = 1\nif s != 1:\n    c = 1\n    j = 1\n    i = 0\n    while j < n - 1:\n        if sharings[i] + k < sharings[j + 1]:\n            c += 1\n            i = j\n        j += 1\n    print(c)\nelse:\n    print(-1)", "n, k = [int(x) for x in input().split()]\nxs = [int(x) for x in input().split()]\n\ncount = 1\ncur_s = 0\n\nfor i in range(n - 1):\n    next_dist = xs[i + 1] - xs[i]\n    if next_dist > k:\n        count = -1\n        break\n    elif next_dist + cur_s > k:\n        cur_s = next_dist\n        count += 1\n    else:\n        cur_s += next_dist\n\nprint(count)\n\n\n", "#   TaskA\n\nimport sys\n\nn, k = list(map(int, sys.stdin.readline().split()))\n\nrent_points = list(map(int, sys.stdin.readline().split()))\n\nmy_list = [-1] * n\n\nmy_list[0] = 0\nfor i in range(1, len(my_list)):\n    for j in range(0, i):\n        if rent_points[i] - rent_points[j] <= k and my_list[j] != -1:\n            my_list[i] = my_list[j] + 1\n            break\n\nprint(my_list[n - 1])\n", "#!/usr/bin/env python3\n\na = list(map(int, input().split()))[1]\nb = list(map(int, input().split()))\n\ntry_ = -1\nc = 0\ns = 0\n\nfor i in range(len(b) - 1):\n    if b[i+1] - b[i] > a:\n        s = -10e5\n\nwhile b[try_] != b[c]:\n    if b[try_] - b[c] <= a:\n        s += 1\n        c = try_\n        try_ = -1\n    else:\n        try_ -= 1\n\nprint(s if s > 0 else -1)\n", "n, k = map(int, input().split())\nv = list(map(int, input().split()))\n\ncnt = 1\nmoved = 0\n\nfor i in range(1, n):\n  if v[i]-v[i-1] > k:\n    print(-1)\n    return\n  if v[i]-v[i-1]>k-moved:\n    #print(\"get at\", v[i-1])\n    cnt += 1\n    moved = v[i]-v[i-1]\n  else:\n    moved += v[i]-v[i-1]\n    \nprint(cnt)", "n, k = (int(i) for i in input().split())\nz = [int(i) for i in input().split()]\np = z[0]\na = z[0]\nres = 0\nfor i in z[1:]:\n    if i <= a + k:\n        p = i\n    elif a != p:\n        res += 1\n        a = p\n        if i > a + k:\n            res = -2\n            break\n        p = i\n    else:\n        res = -2\n        break\nprint(res+1)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nr = 0\ni = 1\nwhile i < n:\n    if a[i] - a[i-1] > k:\n        print(-1)\n        return\n    elif a[i] - a[i-1] > r:\n        r = k\n        ans += 1\n    r -= a[i]-a[i-1]\n    i+=1\nprint(ans)", "n, k = [int(i) for i in input().split()]\npoints = [int(i) for i in input().split()]\ncount = 1\ndistance = 0\ni = 1\nwhile i < n:\n    distance += points[i] - points[i - 1]\n    if k < points[i] - points[i - 1]:\n        count = -1\n        break\n    if k < distance:\n        count += 1\n        distance = 0\n        continue\n    i += 1\nprint(count)\n", "n, k = list(map(int, input().split()))\nx = [int(i) for i in input().split()]\ncount = 1\ni = 0\nf = False\nwhile (x[i] + k < x[-1]):\n    if x[i] + k in x:\n        i = x.index(x[i] + k)\n    else:\n        f = False\n        max = 0\n        for j in range(i, n):\n            if x[j] - x[i] <= k:\n                max = j\n            else:\n                break\n        if max == i:\n            f = True\n            break\n        else:\n            i = max\n    count += 1\nif f:\n    print(-1)\nelse:\n    print(count)\n", "n, k = list(map(int, input().split(' ')))\nx = list(map(int, input().split(' ')))\n\nm = 0\ni = 0\nwhile i != len(x)-1:\n\tif (x[i+1] - x[i]) == k:\n\t\tm += 1\n\t\ti += 1\n\telif (x[i+1] - x[i]) < k:\n\t\tfor j in range(i + 1, len(x)):\n\t\t\tif (x[j] - x[i]) > k:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tj += 1\n\t\ti = j-1\n\t\tm += 1\n\telse:\n\t\tm = -1\n\t\ti = len(x)-1\n\nprint(m)\n", "n,k = map(int, input().split())\narr = [int(i) for i in input().split()]\ni=0\nj=1\ns=0\nwhile i!=n-1:\n    f=0\n    while j!=n and (arr[j]-arr[i])<=k:\n        f+=1\n        j+=1\n    if f!=0:\n        i=j-1\n        s+=1\n    else:\n        s=-1\n        break\nprint(s)", "n, k = [int(i) for i in input().split()]\np = [int(i) for i in input().split()]\ncoun = 1\nd = 0\ni = 1\nwhile i < n:\n    d += p[i] - p[i - 1]\n    if k < p[i] - p[i - 1]:\n        coun = -1\n        break\n    if k < d:\n        coun += 1\n        d = 0\n        continue\n    i += 1\nprint(coun)", "n, k = [int(i) for i in input().split()]\nR = [int(m) for m in input().split()]\ns = 0\npoint = 0\nwhile point < n-1:\n    possMove = 0\n    for i in range(point + 1, n):\n        if R[i] - R[point] <= k:\n            possMove = i\n        else:\n            break\n    if possMove == 0:\n        s = -1\n        break\n    else:\n        s += 1\n        point = possMove\nprint(s)\n", "n, k = map(int, input().split());\nA = list(map(int, input().split()));\nlast = A[0];\n#print(last);\n#last = 0;\ncnt = 0;\nf = 0;\nfor q in range(n - 1):\n    #print(A[q + 1], last, k);\n    if A[q + 1] - last > k:\n        if A[q] == last:\n            f = 1;\n            break;\n        last = A[q];\n        cnt = cnt + 1;\n    if A[q + 1] - last > k:\n        f = 1;\n        break;\nif not f:\n    print(cnt + 1);\nelse:\n    print(-1);", "n, k = list(map(int, input().split()))\nx = [int(i) for i in input().split()]\ncurrent = x[0]\nleft_index = 0\nright_index = 0\npe = True\ncount = 1\nwhile (x[left_index] + k < x[-1]):\n    while (x[right_index] <= x[left_index] + k):\n        right_index += 1\n    right_index -= 1\n    count += 1\n    if (count > n): \n        count = -1\n        break\n    left_index = right_index\nprint(count)\n\n", "n, k = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\n\ni = 0\nkv = 1\nrest = k\nwhile i <= n-2:\n    dist = arr[i + 1] - arr[i]\n    if rest < dist:\n        kv += 1\n        rest = k\n    if dist > k:\n        kv = -1\n        break\n    while rest >= arr[i + 1] - arr[i]:\n        rest -= arr[i + 1] - arr[i]\n        i += 1\n        if i == n-1:\n            break\n\nprint(kv)\n\n\n\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ni = a[0]\nhome = a[-1]\n\ndef closest_point(i):\n    while i not in a:\n        i -= 1\n    else:\n        return i\n\ndef count_bikes(i, k, a):\n    ans = 0\n    while i != home:\n        closest_poin = closest_point(i + k)\n        if closest_poin == i:\n            return -1\n            break\n        else:\n            i = closest_poin\n        ans += 1\n    return ans\n\nprint(count_bikes(i, k, a))\n"]