["def recursion(n):\n    if n == 1:\n        return x\n    if n == 2:\n        return x + min(x , y)\n    if n % 2 == 0:\n        return recursion(n // 2) + min(y, x * (n - n//2))\n    else:\n        return min(recursion(n + 1), recursion(n - 1)) + x\n\n\nimport sys\nsys.setrecursionlimit(10000000)\nn, x, y = list(map(int, input().split()))\nprint(recursion(n))\n", "import sys\nsys.setrecursionlimit(100000)\n\nfrom functools import lru_cache\n\n@lru_cache()\ndef best(a):\n    if a == 1:\n        return x\n    elif a > 0:\n        if a == 2:\n            return x + min(x, y)\n        elif a % 2 == 0:\n\n            return best(a//2) + min(y, (a - a//2) * x)\n        else:\n            return min(best(a-1) , best(a+1) ) + x\n\n\n\nn, x, y = map(int, input().split())\n\nprint(best(n))", "import sys\nsys.setrecursionlimit(1000000)\n\ndef f(n):\n    if n == 1:\n        return x\n    elif n == 2:\n        return x + min(x, y)\n    else:\n        if n % 2 == 0:\n            return f(n // 2) + min(y, x * (n - n // 2))\n        else:\n            return min(f(n + 1), f(n - 1)) + x\n\nn, x, y = map(int, input().split())\n\nprint(f(n))", "def main():\n    def f(t):\n        if t & 1:\n            return x if t == 1 else min(f(t - 1), f(t + 1)) + x\n        else:\n            u = x * t\n            return f(t // 2) + y if y * 2 < u else u\n\n    n, x, y = list(map(int, input().split()))\n    print(f(n))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    def f(t):\n        u = cache.get(t)\n        if u is None:\n            if t & 1:\n                u = min(f(t - 1), f(t + 1)) + x\n            else:\n                u = x * t\n                if y * 2 < u:\n                    u = f(t // 2) + y\n            cache[t] = u\n        return u\n\n    n, x, y = list(map(int, input().split()))\n    cache = {1: x}\n    print(f(n))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, a, b = input().split(' ')\nn = int(n)\na = int(a)\nb = int(b)\ntk = tk2 = dk = dk2 = hg = hg2 = tag = tag2 = k1 = k2 = 0\nkg = n\nwhile kg >= 2:\n    if kg % 2 != 0:\n        tag = 1\n        if tag == 1 and (kg-kg//2-1)*a < b:\n            break\n        hg2 = kg\n        hg = (kg+1)//2\n        while hg >= 2:\n            if hg % 2 != 0:\n                tag2 = 1\n            if tag2 == 1 and (hg-hg//2-1)*a < b:\n                break\n            if tag2 == 0 and (hg-hg//2)*a < b:\n                break\n            if hg % 2 != 0:\n                tk2 += 1\n            hg //= 2\n            tag2 = 0\n            tk += 1\n        t0 = b*tk + a*hg + a*tk2\n        tag2 = 0\n        hg = (hg2 - 1)//2\n        while hg >= 2:\n            if hg % 2 != 0:\n                tag2 = 1\n            if tag2 == 1 and (hg - hg//2 - 1) * a < b:\n                break\n            if tag2 == 0 and (hg - hg//2) * a < b:\n                break\n            if hg % 2 != 0:\n                dk2 += 1\n            hg //= 2\n            tag2 = 0\n            dk += 1\n        t1 = b*dk + a*hg + a*dk2\n        if t0 <= t1:\n            kg += 1\n        else:\n            kg -= 1\n        tk = tk2 = dk = dk2 = hg2 = 0\n    if tag == 1:\n        k2 += 1\n    if (kg-kg//2)*a <= b:\n        break\n    kg //= 2\n    tag = 0\n    k1 += 1\nt = b*k1 + k2*a + kg*a\nprint(t)\n", "def fi(n):\n    if n == 1:\n        return x\n    elif n == 2:\n        return x + min(x, y)\n    else:\n        if n % 2 == 1:\n            return min(fi(n-1), fi(n+1)) + x\n        else:\n            return fi(n//2) + min(y, x * (n//2))\n        \nn,x,y = map(int, input().split())\nprint(fi(n))", "__author__ = 'Think'\nn, x, y=[int(i) for i in input().split()]\ndef worth(num):\n\tif num%2==0:\n\t\tdub=y\n\t\talt=x*(num//2)\n\telse:\n\t\tdub=y+x\n\t\talt=x*((num//2)+1)\n\treturn dub<alt, dub, alt\n\ntime=0\nwhile n>0:\n\tparity=n%2\n\tshould_double, dub, alt=worth(n)\n\tif should_double:\n\t\ttime+=dub\n\t\tif parity==0:\n\t\t\t# print(\"Doubled, even,\", n, n//2, time)\n\t\t\tn=n//2\n\t\t\tcontinue\n\t\telse:\n\t\t\thalf=n//2\n\t\t\tif half%2==0:\n\t\t\t\t# print(\"Doubled, 1 mod 4,\", n, half, time)\n\t\t\t\tn=half\n\t\t\t\tcontinue\n\t\t\telse:\n\t\t\t\tif ((half//2+1)*x+y)<half*x:\n\t\t\t\t\t# print(\"Doubled, 3 mod 4, continued\", n, half+1, time)\n\t\t\t\t\tn=half+1\n\t\t\t\t\tcontinue\n\t\t\t\telse:\n\t\t\t\t\t# print(\"Doubled, 3 mod 4, end\", n, half, time)\n\t\t\t\t\ttime+=half*x\n\t\t\t\t\tbreak\n\telse:\n\t\t# print(\"Haven't doubled, \", n, time)\n\t\ttime+=n*x\n\t\tbreak\n\nprint(time)\n\n\n\n\n", "#import sys\n#sys.stdin = open('in', 'r')\n#n = int(input())\n#a = [int(x) for x in input().split()]\n\nn,x,y = list(map(int, input().split()))\nimport heapq\nh = []\nd = {}\nheapq.heappush(h, (0, n))\n\n\nr = -1\nwhile r == -1:\n    xh,nh = heapq.heappop(h)\n    if nh not in d:\n        d[nh] = xh\n        if nh == 1:\n            r = xh + x\n        elif nh * x < y:\n            r = xh + nh*x\n        else:\n            if (nh - 1) not in d:\n                heapq.heappush(h, (xh + x, nh - 1))\n            if nh & 1 == 0 and (nh // 2) not in d and y < (nh//2)*x:\n                heapq.heappush(h, (xh + y, nh // 2))\n            if (nh + 1) not in d:\n                heapq.heappush(h, (xh + x, nh + 1))\n            \n            \n\nprint(r)\n", "import sys\nsys.setrecursionlimit(1000000)\n\ndef f(dp,x,y,n):\n    if dp[n]!=-1:\n        return dp[n]   \n    if n%2==1:\n        ans=x+min(f(dp,x,y,n-1) ,f(dp,x,y,n+1))\n    else:\n        ans=f(dp,x,y,n//2)+min(y,x*n//2)\n    dp[n]=ans\n    return ans\n\nn,x,y=list(map(int,input().split()))\ndp=[-1 for i in range(n+10)]\ndp[1]=x\nprint(f(dp,x,y,n))\n"]