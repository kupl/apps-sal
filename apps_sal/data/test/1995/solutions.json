["s=input()\ndef shift(x,k):\n    x=x[-k:]+x[:-k]\n    return x\nfor i in range(int(input())):\n    l,r,k=tuple(map(int,input().split()))\n    l-=1\n    k%=(r-l)\n    s=s[:l]+shift(s[l:r],k)+s[r:]\nprint(s)\n", "\"\"\"\nCodeforces Educational Round\n\nProblem 598 B Queries on a String\n\n@author yamaton\n@date 2015-11-12\n\"\"\"\n\nimport itertools as it\nimport functools\nimport operator\nimport collections\nimport math\nimport sys\n\ndef cycle_shift(s, k):\n    n = len(s)\n    k %= n\n    return s[(n-k):] + s[:(n-k)]\n\ndef solve(triples, s, m):\n    for (l, r, k) in triples:\n        s = s[:l-1] + cycle_shift(s[l-1:r], k) + s[r:]\n    return s\n\ndef p(*args, **kwargs):\n    return print(*args, file=sys.stderr, **kwargs)\n\ndef main():\n    s = input()\n    m = int(input())\n    triples = [tuple(int(c) for c in input().strip().split()) for _ in range(m)]\n\n    result = solve(triples, s, m)\n    print(result)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nm = int(input())\nfor it in range(m):\n\tl, r, k = [int(i) for i in input().split()]\n\tl -= 1\n\tk = k % (r - l)\n\ts = s[:l] + s[r - k: r] + s[l: r - k] + s[r:]\nprint(s)", "word = input()\nN = int(input())\n\nquery = []\nfor i in range(N):\n    q = input().split()\n    query.append(list(map(int, q)))\n\nfor q in query:\n    l, r, k = q[0] - 1, q[1] - 1, q[2]\n    k = k % (r - l + 1)\n    if l == r or k == 0:\n        continue\n    word = word[0:l] + word[r-k+1:r+1] + word[l:r-k+1] + word[r+1:]\n\nprint(word)", "s = input()\nn = int(input())\nfor i in range(n):\n    l, r, k = map(int, input().split())\n    ds = k % (r - l + 1)\n    s = s[:l - 1] + s[r - ds: r] + s[l - 1: r - ds] + s[r:]\n\nprint(s)", "S = [ c for c in input() ]\nQ = int(input())\nfor _ in range(Q):\n  l, r, s = map(int, input().split())\n  length = r-l+1\n  s %= length\n  S = S[:l-1] + S[r-s:r] + S[l-1:r-s] + S[r:]\nprint(\"\".join(S))", "#!/usr/bin/env python3\n\ns = input()\nm = int(input())\n\nfor i in range(m):\n    l, r, k = [int(x) for x in input().split()]\n    start = s[:l-1]\n    middle = s[l-1:r]\n    end = s[r:]\n    # shift middle k times\n    ln = r-l+1\n    k %= ln\n    middle_e = middle[:ln-k]\n    middle_s = middle[ln-k:]\n    s = start + middle_s + middle_e + end\n\nprint(s)\n", "string = [e for e in input()]\nn = int(input())\n\nfor i in range(n):\n    l, r, k = map(int, input().split())\n    l -= 1\n    r -= 1    \n    k %= r - l + 1\n    old_string = string[l:r + 1]\n    for j in range(l, r + 1):\n        string[j] = old_string[j - l - k]\n    \nprint(''.join(string))", "def shift( s , k ):\n    #print( \"shift\" , s , k )\n    k %= len(s)\n    #print( \"after shift\" , s[-k:] + s[:-k] )\n    return s[-k:] + s[:-k]\n\ndef process( s , l , r , k ):\n    #print( \"process\" , s , l , r , k )\n    #print( \"after process\" , s[:l-1] , shift( s[l-1:r] , k ) , s[r:] )\n    return s[:l-1] + shift( s[l-1:r] , k ) + s[r:]\n\ndef __starting_point():\n\n    s = input().strip()\n    m = int( input() )\n    for _ in range(m):\n        l , r , k = [ int(x) for x in input().strip().split() ]\n        s = process( s , l , r , k )\n    print(s)\n__starting_point()", "s=input()\nn=int(input())\nfor i in range(n):\n    l,r,k=map(int,input().split())\n    k%=r-l+1\n    seg=s[l-1:r]\n    seg=seg[len(seg)-k:]+seg[:len(seg)-k]\n    s=s[:l-1]+seg+s[r:]\nprint(s)", "# import sys\n# sys.stdin = open('cf598b.in')\n\ns = list(input())\nm = int(input())\n\nfor _ in range(m):\n\tl, r, k = map(int, input().split())\n\tif l != r:\n\t\tl -= 1\n\t\tr -= 1\n\t\tk %= r - l + 1\n\t\ts[l:r+1] = s[r+1-k:r+1] + s[l:r+1-k]\n\nprint(''.join(s))", "s = input()\nm = int(input())\nfor i in range(m):\n    l, r, k = map(int, input().split())\n    l = l - 1\n    r = r - 1\n    sub = s[l : r + 1]\n    k = k % len(sub)\n    part1 = sub[0: len(sub) - k]\n    part2 = sub[len(sub) - k : len(sub)]\n    sub = part2 + part1\n    s = list(s)\n    s[l : r + 1] = sub[0: len(sub)]\n    s = \"\".join(s)\nprint(s)", "from collections import deque\ns = list(input())\nn = int(input())\nfor i in range(n):\n    l,r,k = map(int,input().split())\n    x = deque(s[l-1:r])\n    x.rotate(k)\n    s[l-1:r] = x\nprint(''.join(map(str,s)))", "my_string = input().strip()\nmy_string = list(my_string)\nsl = len(my_string)\nm = int(input())\n\nfor i in range(m):\n    l, r, k = list(map(int, input().split()))\n    range_length = r - l + 1\n    k = k % range_length\n    l = l - 1\n    k = range_length - k\n\n    my_string[l:r] = my_string[l+k:r] + my_string[l:l+k] \n\nans = ''.join(my_string)\nprint(ans)\n", "s = input()\nn = int(input())\nfor i in range(n):\n    l, r, k = map(int, input().split())\n    l -= 1\n    r -= 1\n    k %= len(s[l:r + 1])\n    s = s[:l] + s[r - k + 1: r + 1] + s[l: r - k + 1] + s[r + 1:]\nprint(s)", "def main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    s = list(input())\n    [m]=get()\n    for z in range(m):\n        [l,r,k]=get()\n        l-=1\n        if k> r-l:\n            k = k%(r-l)\n        temp = s[:l] + s[r-k:r] + s[l:r-k] + s[r:]\n        s = temp\n    print(\"\".join(s))\n\n\n    if mode==\"file\":f.close()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque\n\ndef solve(s,l,r,k):\n    s1,s2 = s[:l - 1],s[r:]\n    tmp = s[l - 1 : r]\n    k %= (r - l + 1)\n    d = deque(tmp)\n    for _ in range(k):\n        x = d[-1]\n        d.pop()\n        d.appendleft(x)\n    tmp = ''.join(d)\n    return ''.join([s1,tmp,s2])\n\ns = input()\n\nm = int(input())\n\nfor _ in range(m):\n    l,r,k = list(map(int,input().split()))\n    s = solve(s,l,r,k)\n\nprint(s)\n", "s = input()\nfor it in range(int(input())):\n    l, r, k = list(map(int, input().split()))\n    k %= r - l + 1\n    s = s[:l - 1] + s[r - k: r] + s[l - 1: r - k] + s[r:]\nprint(s)\n", "def rot(s, pos):\n    return s[(len(s)-pos):] + s[:(len(s)-pos)]\ns = input()\nx = int(input())\ns = [''] + list(s)\nfor i in range(x):\n    a, b, c = list(map(int, input().split(' ')))\n    s[a:b+1] = rot(s[a:b+1], c%(b-a+1))\n\nprint(''.join(s))\n", "s = input()\nm = int(input())\nfor i in range(m):\n    l, r, k = map(lambda x: int(x) - 1, input().split())\n    k += 1\n    d = r - l + 1\n    k %= d\n    s = s[0:l] + s[r-k+1:r+1] + s[l:r-k+1] + s[r+1:]\nprint(s)", "s = input()\nq = int(input())\nfor i in range(q):\n    a = list(map(int , input().split()))\n    l = a[0]\n    r = a[1]\n    k = a[2]\n    s2 = s[l-1:r]\n    n = len(s2)\n    k = k%n\n    ls = s2[:n-k]\n    rs = s2[n-k:]\n    s = s[:l-1]+rs+ls+s[r:]\nprint(s)", "s = input()\na = list(range(len(s)))\nm = int(input())\nfor i in range(m):\n    l, r, k = [int(j) for j in input().split()]\n    l -= 1\n    k %= r - l\n    a[l:r] = a[r - k: r] + a[l:r - k]\nfor i in a:\n    print(s[i], sep = '', end = '')\nprint()\n", "import sys\n\n\ns = list(sys.stdin.readline())\ns2 = list(s)\nnumQ = int(sys.stdin.readline())\n\n\nfor i in range(numQ):\n    ls = sys.stdin.readline().split()\n    l = int(ls[0]) - 1\n    r = int(ls[1]) -1\n    k = int(ls[2])\n\n    diff = r - l + 1\n\n    for j in range(0, diff):\n        newpos = ((j + k) % diff) + l\n        s2[newpos] = s[j + l]\n\n    s = list(s2) \n    \n\nsys.stdout.write(\"\".join(s2))\n    \n"]