["n, a, b = list(map(int, input().split()))\nm = input()\nif m[a - 1] == m[b - 1]:\n    print(0)\nelse:\n    print(1)", "n, a, b = map(int, input().split())\ns = input()\na -= 1\nb -= 1\nif s[a] == s[b]:\n    print(0)\nelse:\n    print(1)", "n, a, b = list(map(int, input().split()))\n\ns = input()\na -= 1\nb -= 1\n\nif s[a] == s[b]:\n    print(0)\nelse:\n    print(1)\n", "n, a, b = [int(x) for x in input().split()]\ns = input()\nif (s[a - 1] != s[b - 1]):\n    print('1')\nelse: print('0')", "n, a, b = list(map(int, input().split()))\narr = input()\nprint(abs(int(arr[b - 1]) - int(arr[a - 1])))", "n, a, b = map(int, input().split())\ns = input()\nif s[a - 1] == s[b - 1]:\n    print(0)\nelse:\n    print(1)", "n , a, b = map(int, input().split())\nk = input()\nif k[a - 1] == k[b - 1]:\n    print(0)\nelse:\n    print(1)", "n, a, b = map(int, input().split())\ns = input()\nif s[a-1] == s[b-1]:\n  print(0)\nelse:\n  print(1)  ", "read = lambda: list(map(int, input().split()))\nn, a, b = read()\ns = ' ' + input()\nif s[a] == s[b]:\n    print(0)\n    return\nelse:\n    print(1)\n", "n, a, b = map(int, input().split())\ns = input().strip()\nif (s[a - 1] == s[b - 1]):\n    print(0)\nelse:\n    print(1)", "n, a, b =map(int,input().split())\ns = input()\nif s[a-1] == s[b-1]:\n    print(0)\nelse:\n    print(1)", "# coding=utf-8\n__author__ = 'Alexander'\n\n\nn, a, b = map(int,input().split())\n\nt = input()\n\nif t[a-1] != t[b-1]:\n    print(1)\nelse:\n    print(0)", "n, a, b = map(int, input().split())\nlst = input()\nif (lst[a - 1] == lst[b - 1]):\n    print(0)\nelse:\n    print(1)", "n,a,b = [int(x) for x in input().split()]\nports=[int(x) for x in input()]\nif ports[a-1]==ports[b-1]:\n    print(0)\nelse:\n    print(1)", "n, a, b = map(int, input().split())\ns = input()\nif s[a - 1] == s[b - 1]:\n    print(0)\nelse:\n    print(1)", "n, a, b = list(map(int, input().split()))\ns = input()\nif s[a-1] == s[b-1] or a == b:\n    print(0)\nelse:\n    print(1)\n", "N, a, b = [int(x) for x in input().strip().split(\" \")]\nairports = input().strip()\nairports = [int(x) for x in airports]\n\nprint(abs(airports[a-1] - airports[b-1]))", "n, a, b = map(int, input().split())\naero = input()\nif aero[a - 1] == aero[b - 1]:\n    print(0)\nelse:\n    print(1)", "n, a, b = map(int, input().split())\nstring = input()\nprint(abs(int(string[a-1])-int(string[b-1])))", "n,a,b=map(int, input().split())\ns=input()\nk=s[a-1]\nt=s[b-1]\nif k==t:print(0)\nelse:print(1)", "n,a,b=map(int, input().split())\ns=input()\nk=s[a-1]\nt=s[b-1]\nif k==t:print(0)\nelse:print(1)", "n, a, b = list(map(int, input().split()))\ns = input()\n\na -= 1\nb -= 1\nif s[a] == s[b]:\n    print(0)\nelse:\n    print(1)\n    #i = a\n    #while s[i] != s[b]:\n        #i += 1\n   # j = a\n    #while j > 0 and s[i] != s[b]:\n        #j -= a\n", "n,a,b = map(int, input().split())\ns = input()\nif(s[a-1]==s[b-1]):\n    print(0)\nelse:\n    print(1)", "n, a, b = list(map(int, input().split(' ')))\ns = input()\n\nif a == b or s[a - 1] == s[b - 1]: print('0')\nelse: print('1')\n", "n,a,b = list(map(int,input().split()))\nm = input()\nif m[a-1] == m[b-1]: print(0)\nelse: print(1)\n"]