["n = int(input())\nmin1, max1 = map(int, input().split())\nmin2, max2 = map(int, input().split())\nmin3, max3 = map(int, input().split())\n\nd1 = min(n - min2 - min3, max1)\nd2 = min(n - d1 - min3, max2)\nd3 = n - d1 - d2\n\nprint(d1,d2,d3)", "__author__ = '\u0414\u0430\u043d\u0438\u043b\u0430'\n\nn = int(input())\nmin1, max1 = list(map(int, input().split()))\nmin2, max2 = list(map(int, input().split()))\nmin3, max3 = list(map(int, input().split()))\n\nans1 = min(max1, n - min2 - min3)\n\nn -= ans1\n\nans2 = min(max2, n - min3)\n\nans3 = n - ans2\nprint(ans1, ans2, ans3)\n", "n = int(input())\na1, a2 = list(map(int, input().split()))\nb1, b2 = list(map(int, input().split()))\nc1, c2 = list(map(int, input().split()))\n\na = a1\nb = b1\nc = c1\ns = a + b + c\n\nif a2 - a1 < n - s:\n    a = a2\n    s += a2 - a1\n    if b2 - b1 < n - s:\n        b = b2\n        s += b2 - b1\n        if c2 - c1 < n - s:\n            c = c2\n        else:\n            c += n - s\n    else:\n        b += n - s\nelse:\n    a += n - s\n\nprint(a, b, c)\n", "n=int(input())\nmin1,max1=map(int,input().split(\" \"))\nmin2,max2=map(int,input().split(\" \"))\nmin3,max3=map(int,input().split(\" \"))\nx1=min(n-min3-min2,max1)\nn-=x1\nx2=min(n-min3,max2)\nx3=n-x2\nprint(x1,x2,x3)", "n = int(input())\nmin1, max1 = list(map(int, input().split(' ')))\nmin2, max2 = list(map(int, input().split(' ')))\nmin3, max3 = list(map(int, input().split(' ')))\n\nn1 = min(n - (min2 + min3), max1)\nn2 = min(n - (n1 + min3), max2)\nn3 = min(n - (n1 + n2), max3)\n\nprint('{} {} {}'.format(n1, n2, n3))\n", "n = int(input())\nmin1, max1 = map(int, input().split())\nmin2, max2 = map(int, input().split())\nmin3, max3 = map(int, input().split())\nans1 = min(n - min2 - min3, max1)\nans2 = min(n - ans1 - min3, max2)\nans3 = min(n - ans1 - ans2, max3)\nprint(ans1, ans2, ans3)", "# A\n\nn = int(input())\nmin1, max1 = list(map(int, input().split()))\nmin2, max2 = list(map(int, input().split()))\nmin3, max3 = list(map(int, input().split()))\n\nx = n - min1 - min2 - min3\n\nans1 = min(max1, x+min1)\nx = x - (ans1 - min1)\n\nans2 = min(max2, x+min2)\nx = x - (ans2 - min2)\n\nans3 = min3 + x\nprint(ans1, ans2, ans3)\n", "n=int(input())\na1,b1=[int(x) for x in input().split()]\na2,b2=[int(x) for x in input().split()]\na3,b3=[int(x) for x in input().split()]\nans=[a1,a2,a3]\nn-=a1+a2+a3\nif n>=b1-a1:\n    ans[0]=b1\n    n-=b1-a1\n    if n>=b2-a2:\n        ans[1]=b2\n        n-=b2-a2\n        ans[2]=min(a3+n,b3)\n    else:\n        ans[1]+=n\nelse:\n    ans[0]+=n\nprint(' '.join([str(x) for x in ans]))\n    \n", "n=int(input())\nmin1,max1 = (int(x) for x in input().split())\nmin2,max2 = (int(x) for x in input().split())\nmin3,max3 = (int(x) for x in input().split())\na1=max1\na2=max2\na3=n-a1-a2\nif a3<min3 :\n    a2-=min3-a3\n    a3=min3\nif a2<min2:\n    a1-=min2-a2\n    a2=min2\nprint(a1,a2,a3)\n", "import math\nimport sys\n\nn=int(input())\n\ninp=list(map(int,input().split()))\n\nm1=inp[0]\nM1=inp[1]\n\ninp=list(map(int,input().split()))\n\nm2=inp[0]\nM2=inp[1]\n\ninp=list(map(int,input().split()))\n\nm3=inp[0]\nM3=inp[1]\n    \nans=[]\n\nrest=n-m2-m3\n\nans=[rest,m2,m3]\n\nrest=n-M1-m3\n\nif rest>=m2 and rest<=M2:\n    ans=[M1,rest,m3]\n\nrest=n-M1-M2\n\nif rest>=m3 and rest<=M3:\n    ans=[M1,M2,rest]\n\nprint(str(ans[0]) + \" \" + str(ans[1]) + \" \" + str(ans[2]))\n\n", "n = int(input())\nmin1, max1 = [int(c) for c in input().split()]\nmin2, max2 = [int(c) for c in input().split()]\nmin3, max3 = [int(c) for c in input().split()]\n\na, b, c = 0, 0, 0\nif n - min3 <= max1 + max2:\n    c = min3\nelse:\n    c = n - max1 - max2\n\nif n - c - min2 <= max1:\n    b = min2\n    a = n - c - b\nelse:\n    a = max1\n    b = n - c - a\n\nprint(str(a) + ' '+ str(b) + ' ' + str(c))\n", "#!/usr/bin/env python3\n\nN = int(input())\nmin1, max1 = tuple(map(int, input().split(' ')))\nmin2, max2 = tuple(map(int, input().split(' ')))\nmin3, max3 = tuple(map(int, input().split(' ')))\n\nans1, ans2, ans3 = min1, min2, min3\n\ndef left():\n\treturn N - (ans1 + ans2 + ans3)\n\nans1 += min(left(), max1 - ans1)\nans2 += min(left(), max2 - ans2)\nans3 += min(left(), max3 - ans3)\n\nprint(ans1, ans2, ans3)", "def main():\n    n = int(input())\n    (min1, max1), (min2, max2), (min3, max3) = list(tuple(map(int, input().split())) for _ in range(3))\n    max1 = min(max1, n - min2 - min3)\n    max2 = min(max2, n - max1 - min3)\n    print(max1, max2, n - max1 - max2)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,copy\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict, deque\n\n# Guide:\n#   1. construct complex data types while reading (e.g. graph adj list)\n#   2. avoid any non-necessary time/memory usage\n#   3. avoid templates and write more from scratch\n#   4. switch to \"flat\" implementations\n\ndef VI(): return list(map(int,input().split()))\ndef I(): return int(input())\ndef LIST(n,m=None): return [0]*n if m is None else [[0]*m for i in range(n)]\ndef ELIST(n): return [[] for i in range(n)]\ndef MI(n=None,m=None): # input matrix of integers\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = VI()\n    return arr\ndef MS(n=None,m=None): # input matrix of strings\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = input()\n    return arr\ndef MIT(n=None,m=None): # input transposed matrix/array of integers\n    if n is None: n,m = VI()\n    a = MI(n,m)\n    arr = LIST(m,n)\n    for i,l in enumerate(a):\n        for j,x in enumerate(l):\n            arr[j][i] = x\n    return arr\n\n\ndef run(n,x,l,r):\n    s = 0\n    curr = 1\n    for i in range(n):\n        skip = (l[i]-curr) // x\n        s += r[i]-curr-skip*x+1\n        curr = r[i]+1\n    print(s)\n\n\ndef main(info=0):\n    n = I()\n    an, ax = VI()\n    bn, bx = VI()\n    cn, cx = VI()\n\n    m = [an, bn, cn]\n\n    if sum(m) < n and ax>an:\n        m[0] += min(ax-an, n-sum(m))\n    if sum(m) < n and bx>bn:\n        m[1] += min(bx-bn, n-sum(m))\n    if sum(m) < n and cx>cn:\n        m[2] += min(cx-cn, n-sum(m))\n\n    print(m[0], m[1], m[2])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = int(input())\n    min1, max1 = [int(i) for i in input().split()]\n    min2, max2 = [int(i) for i in input().split()]\n    min3, max3 = [int(i) for i in input().split()]\n    \n    for x in range(min(n - 1, max1), min1 - 1, -1):\n        if min3 <= n - x - max2 <= max3:\n            print(x, max2, n - x - max2)\n            return\n        if min2 <= n - x - min3 <= max2:\n            print(x, n - x - min3, min3)\n            return \n    \n    \nmain()\n", "n=int(input())\nmin1,max1=map(int,input().split())\nmin2,max2=map(int,input().split())\nmin3,max3=map(int,input().split())\nif max1+max2+max3==n:\n\tprint(str(max1),str(max2),str(max3))\n\tquit()\nif max1+max2+min3<=n:\n\tprint(str(max1),str(max2),str(n-max1-max2))\n\tquit()\nif max1+min2+min3<=n:\n\tprint(str(max1),str(n-max1-min3),str(min3))\n\tquit()\nprint(str(n-min2-min3),str(min2),str(min3))", "n = int(input())\nm_1, mx_1 = list(map(int, input().split()))\nm_2, mx_2 = list(map(int, input().split()))\nm_3, mx_3 = list(map(int, input().split()))\nans = [m_1, m_2, m_3]\ns = sum(ans)\nif s == n:\n    print(*ans)\nelse:\n    ans[0] += min(n - s, mx_1 - m_1)\n    if ans[0] == mx_1:\n        s += mx_1 - m_1\n        ans[1] += min(n - s, mx_2 - m_2)\n        if ans[1] == mx_2:\n            s += mx_2 - m_2\n            ans[2] += min(n - s, mx_3 - m_3)\n    print(*ans)\n", "n = int(input())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\nn1 = a[0]\nn2 = b[0]\nn3 = c[0]\nn -=(a[0] + b[0]+ c[0])\nn1+=(min(a[1]- a[0], n) )\nn -=(min(a[1]- a[0], n))\nn2+=(min(b[1]- b[0], n))\nn-=(min(b[1]- b[0], n))\nn3+=n\nprint(n1, n2, n3)\n", "n = int(input())\ndef r():\n    return [int(i) for i in input().split()]\n\ndeg = r(), r(), r()\n\nl = [i[0] for i in deg]\ndef remains():\n    return n - sum(l)\n\ndef better(i):\n    nonlocal l\n    rem = remains()\n    l[i] = min(l[i]+rem, deg[i][1])\n\nfor i in range(len(l)):\n    better(i)\n\nprint(\" \".join(str(i) for i in l))\n", "\n\nn = int(input())\n\nmin_1, max_1 = list(map(int, input().split()))\nmin_2, max_2 = list(map(int, input().split()))\nmin_3, max_3 = list(map(int, input().split()))\n\na_1 = min(max_1, n - min_2 - min_3)\n\na_2 = min(max_2, n - a_1 - min_3)\n\na_3 = n - a_1 - a_2\n\nprint(str(a_1) + \" \" + str(a_2) + \" \" + str(a_3))\n\n\n", "n, mind, v = int(input()), [0] * 3, [0] * 3\nfor i in range(3):\n    mind[i], v[i] = map(int, input().split())\nt = sum(v)\nfor i in range(2, -1, -1):\n    c = max(0, min(t - n, v[i] - mind[i]))\n    v[i] -= c\n    t -= c\nprint(v[0], v[1], v[2])", "n = int(input())\nmin1, max1 = map(int, input().split())\nmin2, max2 = map(int, input().split())\nmin3, max3 = map(int, input().split())\n\nd1 = min(n - min2 - min3, max1)\nn -= d1\nd2 = min(n - min3, max2)\nd3 = n - d2\nprint('{} {} {}'.format(d1, d2, d3))", "n = int(input())\nmin1, max1 = map(int, input().split())\nmin2, max2 = map(int, input().split())\nmin3, max3 = map(int, input().split())\n\na1 = min1\na2 = min2\na3 = min3\nn = n - a1 - a2 - a3\n\nmax1 -= min1\nmax2 -= min2\nmax3 -= min3\n\nif n > max1:\n    a1 += max1\n    n -= max1\nelse:\n    a1 += n\n    n = 0\nif n > max2:\n    a2 += max2\n    n -= max2\nelse:\n    a2 += n\n    n = 0\nif n > max3:\n    a3 += max3\n    n -= max3\nelse:\n    a3 += n\n    n = 0\nprint(a1, a2, a3)", "__author__ = 'Andrey'\n\n\ndef solve(n):\n    nonlocal min_1\n    nonlocal min_2\n    nonlocal min_3\n    nonlocal max_1\n    nonlocal max_2\n    nonlocal max_3\n    c_1, c_2, c_3 = 0, 0, 0\n    c_2 += min_2\n    c_3 += min_3\n    n -= min_2 + min_3\n    firsts = min(n, max_1)\n    c_1 += firsts\n    n -= firsts\n    if n == 0:\n        return c_1, c_2, c_3\n    else:\n        seconds = min(max_2 - min_2, n)\n        n -= seconds\n        c_2 += seconds\n        if n == 0:\n            return c_1, c_2, c_3\n        else:\n            thirds = min(max_3 - min_3, n)\n            n -= thirds\n            c_3 += thirds\n            if n == 0:\n                return c_1, c_2, c_3\n\n\n\nn = int(input())\nmin_1, max_1 = map(int, input().split())\nmin_2, max_2 = map(int, input().split())\nmin_3, max_3 = map(int, input().split())\nprint(*solve(n))", "n=int(input())\nmin1,max1=map(int,input().split())\nmin2,max2=map(int,input().split())\nmin3,max3=map(int,input().split())\nans1=min1\nans2=min2\nans3=min3\nn-=min1+min2+min3\nmax1=max1-min1\nmax2=max2-min2\nmax3=max3-min3\nwhile n>0:\n    if max1>0:\n        if max1>=n:\n            ans1+=n\n            max1-=n\n            n=0\n        else:\n            n=n-max1\n            ans1+=max1\n            max1=0\n    elif max2>0:\n         if max2>=n:\n            ans2+=n\n            max2-=n\n            n=0\n         else:\n            n=n-max2\n            ans2+=max2\n            max2=0\n    elif max3>0:\n         if max3>=n:\n            ans3+=n\n            max3-=n\n            n=0\n         else:\n            n=n-max3\n            ans3+=max3\n            max3=0\nprint(ans1,ans2,ans3)"]