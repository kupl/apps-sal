["import math\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nnow = [-1] * k\nt = [0] * k\nnxt = 0\nm = 0\nintr = [False for i in range(n)]\nwhile m < n:\n    for i in range(k):\n        if now[i] != 1005 and (now[i] == -1 or t[i] == a[now[i]]):\n            if now[i] != -1:\n                m += 1\n            if nxt == n:\n                now[i] == 1005\n                t[i] = 1000\n            else:\n                now[i] = nxt\n                nxt += 1\n                t[i] = 0\n        t[i] += 1\n    d = (200 * m + n) // (2 * n)\n    for i in range(k):\n        if d == t[i]:\n            intr[now[i]] = True\nprint(sum(intr))", "n, k = list(map(int, input().split()))\nlst = list(map(int, input().split()))\ncur = []\nif n < k:\n    k = n\nfor i in range(k):\n    cur.append([1, lst[i]])\n\nt = 0\nans = 0\nm = 0\nused = [False] * k\nwhile m != n:\n    t += 1\n    for i in range(len(cur)):\n        cur[i][0] += 1\n        if cur[i][0] == cur[i][1] + 1 and cur[i][1] != -1:\n            m += 1\n            used[i] = False\n            if k != n:\n                cur[i] = [1, lst[k]]\n                k += 1\n            else:\n                cur[i] = [0, -1]\n                used[i] = True\n    x = 100 * m / n\n    if x % 1 >= 0.5:\n        x = x // 1 + 1\n    else:\n        x //= 1\n    x = int(x)\n    for i in range(len(cur)):\n        if cur[i][0] == x and not used[i]:\n\n            used[i] = True\n            ans += 1\n\nprint(ans)\n\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nns = 0\nt = [-1] * k\nfor i in range(k):\n    t[i] = [-1, -1]\nu = 0\npr = 0\nresult = 0\nz = 0\ns = set()\n\n\ndef okr():\n    return int(100 * pr / n + 0.5)\n\nwhile pr != n:\n    pr += z\n    ns = okr()\n    z = 0\n    for i in range(k):\n        if t[i] == [-1, -1]:\n            if u != len(a):\n                t[i] = [u, 1]\n                if a[u] == 1:\n                    if ns == 1:\n                        if u not in s:\n                            result += 1\n                            s.add(u)\n                    t[i] = [-1, -1]\n                    z += 1\n                u += 1\n        else:\n            t[i][1] += 1\n            if t[i][1] == a[t[i][0]]:\n                if t[i][1] == ns:\n                    if t[i][0] not in s:\n                        result += 1\n                        s.add(t[i][0])\n                t[i] = [-1, -1]\n                z += 1\n        if t[i] != [-1, -1] and t[i][1] == ns:\n            if t[i][0] not in s:\n                result += 1\n                s.add(t[i][0])\nprint(result)\n\n    \n    \n", "from math import trunc\nfrom collections import defaultdict, deque\n\n\ndef round(x):\n    return trunc(x + 0.5)\n\n\ndef main():\n    n, k = list(map(int, input().split()))\n    an = list(map(int, input().split()))\n\n    ts = [0] * (16 * 10 ** 5)\n    ts[0] = k\n    ds = [0] * (16 * 10 ** 5)\n    m = -k\n    ready = defaultdict(list)\n    sol = [0] * n\n    q = deque(list(range(n)))\n    for i in range(len(ts)):\n        free = ts[i]\n        m += free\n        ds[i] = round(100 * m / n)\n        j = 0\n        while q and j < free:\n            #print(q)\n            si = q.popleft()\n            ts[i + an[si]] += 1\n            #print(si, i, an[si])\n            #ready[i + an[si]].append(si)\n            sol[si] = i\n            j += 1\n        if m == n:\n            break\n\n    res = 0\n    #print(ts[:200])\n    #print(' '.join(map(str, enumerate(ds[:200]))))\n    #print(ds[74], ds[75])\n    for i in range(n):\n        t = sol[i]\n        for q in range(an[i]):\n            if ds[t + q] == q + 1:\n                #print(i, t + q, q)\n                res += 1\n                break\n\n    print(res)\n\n\nmain()\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\np = [[0, 0, 0] for i in range(k)]\nj = 0\nm = 0\nans = [0] * n\nflag = True\nwhile flag:\n    flag = False\n    t = 0\n    for i in range(k):\n        p[i][0] += 1\n        if p[i][0] == int(m / n * 100 + 0.5):\n            ans[p[i][2]] = 1\n        if p[i][0] >= p[i][1]:\n            if p[i][1] != 0:\n                t += 1\n            if j >= n:\n                p[i] = [0, 0, 0]\n            else:\n                p[i][0] = 0\n                p[i][1] = a[j]\n                p[i][2] = j\n                j += 1\n        if p[i][1] != 0:\n            flag = True\n    m += t\nprint(sum(ans))", "# Though I've passed one hundred thousand miles\n# I'm feeling very still\n# And I know my spaceship knows which way to go...\ndef r(x):\n    return int(x + 0.50000000001)\n\nn, k = list(map(int, input().split()))\narr = [int(x) for x in input().split()]\narr = arr[::-1]\nsys = [[0, 0, n + 1] for _ in range(k)]\ncnt = 0\ndone = 0\nints = [False] * n\ns = len(arr)\nc = 0\n\nfor i in range(10**8):\n    \n    tmp = 0\n    \n    for j in range(len(sys)):\n        \n        if sys[j][0] >= sys[j][1]:            \n            if arr:\n                sys[j] = [0, arr.pop(), c]\n                c += 1\n            else:\n                sys[j] = [0, 0, n + 1]\n        sys[j][0] += 1\n        \n    q = r(100 * done / s)\n    for j in range(len(sys)):\n            if sys[j][1] == 0:\n                tmp += 1\n            if sys[j][0] == q and sys[j][1] >= sys[j][0]:\n                ints[sys[j][2]] = True     \n    \n    \n    for j in range(len(sys)): \n        if sys[j][1] != 0 and sys[j][0] >= sys[j][1]:\n            done += 1        \n                \n    if tmp == len(sys):\n        break\n    \nd = 0\nfor i in ints:\n    d += i\nprint(d)\n            \n", "n,k=map(int,input().split())\nA=list(map(int,input().split()))\nimport math as m\nkl=0\ndl=0\nt=0\nPr=[0]*k\nNm=[-1]*k\nRz=[False]*n\n\nwhile dl<n:\n\n    for i in range(k):\n        Pr[i]-=1\n        if Pr[i]==-1:\n            if Nm[i]!=-1:\n                dl+=1\n                #print(Nm[i],'done',t)\n            if kl<n:\n                Pr[i]=A[kl]-1\n                Nm[i] = kl\n                kl+=1\n            else:\n                Nm[i] = -1\n                Pr[i] = -1\n    for i in range(k):\n        if m.floor(dl/n*100+0.5)==A[Nm[i]]-Pr[i] and Nm[i]!=-1:\n            #print(m.floor(dl/n*100+0.5),Nm[i])\n            Rz[Nm[i]]=True\n    t+=1\nprint(sum(Rz))", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [[0] for i in range(k)]\nc = [0] * k\np = [0]*(150*n + 1)\nfor i in a:\n    m = 0\n    for j in range(k):\n        if c[j] < c[m]:\n            m = j\n    b[m].append(b[m][-1] + i)\n    c[m] += i\n    p[b[m][-1] + 1] += 1\nfor i in range(1, len(p)):\n    p[i] += p[i-1]\nfor i in range(len(p)):\n    p[i] = (200*p[i] + n)//(2*n)\nans = 0\nfor i in range(k):\n    for j in range(1, len(b[i])):\n        l = b[i][j-1]\n        r = b[i][j]\n        pp = l + 1\n        while pp <= r:\n            if p[pp] == pp - l:\n                ans += 1\n                #print(i, j)\n                break\n            pp += 1\nprint(ans)\n#print(b, p, sep='\\n')\n"]