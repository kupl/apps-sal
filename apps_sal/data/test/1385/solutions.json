["import re\nfrom collections import Counter\n\nclass Task:\n\tanswer = []\n\tstr = \"\"\n\t\n\tdef getData(self):\n\t\tx = 0\n\t\tself.str = input()\n\t\n\tdef solve(self):\n\t\tlist = re.findall(\"\\\".*?\\\"|[^ ]+\", self.str)\n\t\tself.answer = [\"<\" + x.replace(\"\\\"\", \"\") + \">\" for x in list]\n\t\n\tdef printAnswer(self):\n\t\tfor x in self.answer:\n\t\t\tprint(x)\n\ntask = Task();\ntask.getData();\ntask.solve();\ntask.printAnswer();\n", "def printtag(s):\n    print(\"<\" + s + \">\")\n\ns = input()\nl = s.split(\"\\\"\")\nnon_modify = 0\nfor s in l:\n    if non_modify:\n        printtag(s)\n    else:\n        tmp_lst = s.split(\" \")\n        for st in tmp_lst:\n            if len(st):\n                printtag(st)\n    non_modify = 1 - non_modify", "import sys\n# f = sys.stdin\n# f = open(\"input.txt\", \"r\")\na = input()\ni = 0\nwhile i < len(a):\n    if a[i] == '\"':\n        end = a.index('\"', i+1)\n        print(\"<\", a[i+1:end], \">\", sep=\"\")\n        i = end+1\n    elif a[i] != \" \" != '\"' and (a[i-1] == \" \" or i-1 < 0):\n        try:\n            end = a.index(\" \", i+1)\n        except:\n            end = len(a)\n        print(\"<\", a[i:end], \">\", sep=\"\")\n        i = end+1\n    else:\n        i += 1", "s = input()\n\ninside = False\nlexeme = []\nfor c in s:\n    if c == '\"':\n        if inside:\n            inside = False\n            print(\"%s>\" % ''.join(lexeme))\n            lexeme = []\n        else:\n            lexeme = ['<']\n            inside = True\n    elif c == ' ':\n        if inside:\n            lexeme.append(c)\n        elif len(lexeme):\n            print(\"%s>\" % ''.join(lexeme))\n            lexeme = []\n    else:\n        if len(lexeme):\n            lexeme.append(c)\n        else:\n            lexeme = ['<', c]\nif len(lexeme):\n    print(\"%s>\" % ''.join(lexeme))\n", "ans, t = [], input()\ni, j = 0, -1\nwhile i < len(t):\n    if t[i] == '\"':\n        ans += t[j + 1 : i].split()\n        i += 1\n        j = t.find('\"', i)\n        ans.append(t[i : j])\n        i = j\n    i += 1\nans += t[j + 1:].split()\nfor i in ans:\n    print('<' + i + '>')", "def main(s):\n    type = 0\n    temp = ''\n    answer = []\n\n    #type:\n    #0 - \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u043e\u0438\u0441\u043a\n    #1 - \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0432\u044b\u0447\u0435\u043a\n\n    for c in s:\n        if type==0:\n            if c==' ':\n                if temp!='':\n                    answer.append(temp)\n                    temp=''\n            elif c=='\\\"':\n                if temp!='':\n                    answer.append(temp)\n                    temp = ''\n                type = 1\n            else:\n                temp+=c\n        elif type==1:\n            if c=='\\\"':\n                type = 0\n                answer.append(temp)\n                temp = ''\n            else:\n                temp+=c\n\n    if type==0 and temp!='':\n            answer.append(temp)\n\n    q = ''\n    for item in answer:\n        q+='<'+item+'>\\n'\n\n    return q[:-1]\n\ndef init():\n    s = input()\n\n    print(main(s))\n\ninit()", "cmd = input()\nlexems = []\n\ntmp = \"\"\nbracket = False\nword = False\n\nfor i in range(len(cmd)):\n    if cmd[i]==\" \":\n        if bracket:\n            tmp+=cmd[i]\n        elif word:\n            lexems.append(tmp)\n            tmp=\"\"\n            word = False\n    elif cmd[i]=='\"':\n        if bracket:\n            lexems.append(tmp)\n            tmp=\"\"\n            word = False\n            bracket = False\n        else:\n            bracket = True\n            word = True\n    else:\n        tmp+=cmd[i]\n        word = True\nif tmp!=\"\":\n    lexems.append(tmp)\n    \nfor i in lexems:\n    print(\"<\",i,\">\",sep=\"\")\n", "end = {'q': '\"', 'w': ' '}\nl, cur, st = [], [], 'n'\nfor ch in input() + ' ':\n    if st in 'wq':\n        if ch == end[st]:\n            l.append(''.join(cur))\n            cur = []\n            st = 'n'\n        else:\n            cur.append(ch)\n    elif ch == '\"':\n        st = 'q'\n    elif ch != ' ':\n        st = 'w'\n        cur.append(ch)\nfor lx in l:\n    print('<', lx, '>', sep='')\n", "s = input().split('\"')\nfor i in range(len(s)):\n\tif i % 2:\n\t\tprint('<', s[i], '>', sep='')\n\telse:\n\t\tl = [x for x in s[i].split() if x != '']\n\t\tif l != []:\n\t\t\tprint('<', '>\\n<'.join(l), '>', sep='')\n", "a=input()\nm=0\nb=[]\nc=''\nfor i in a.strip():\n    if m==0:\n        if i==' ':pass\n        elif i=='\"':m=2\n        else:m=1;c+=i\n    elif m==1:\n        if i==' ':m=0;b+=[c];c=''\n        else:c+=i\n    elif m==2:\n        if i=='\"':m=0;b+=[c];c=''\n        else:c+=i\nfor i in b:print('<'+i+'>')\nif c:print('<'+c+'>')\n", "def main():\n    res = []\n    for i, s in enumerate(input().split('\"')):\n        if i & 1:\n            res += [\"<\", s, \">\\n\"]\n        else:\n            for t in s.split():\n                res += [\"<\", t, \">\\n\"]\n    print(''.join(res), end='')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import re, sys, math, string, operator, functools, fractions, collections\nimport os\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\nmod=1e9+7\n#################################################\ns=input()+' '\nans=[]\ni,j=0,-1\nwhile i<len(s):\n    if s[i]==' ':\n        if j!=-1:\n            ans.append(s[j:i])\n        j=-1\n    elif s[i]==\"\\\"\":\n        j=i+1\n        i+=1\n        while s[i]!=\"\\\"\":\n            i+=1\n        ans.append(s[j:i])\n        j=-1\n    else:\n        if j==-1:\n            j=i\n    i+=1\nfor i in ans:\n    print('<'+i+'>')\n", "l=input().strip()\nr=[]\nu=l.split('\"')\nif l[-1]=='\"':\n    u.pop()\n\nv=len(u)\n\nfor i in range(v):\n    if i%2:\n        r.append(u[i])\n    else:\n        x=u[i].split()\n        for j in x:\n            r.append(j)\n\nfor u in r:\n    print('<',u,'>',sep='')\n", "s = input().split('\"')\nfor i in range(len(s)):\n\tif i % 2:\n\t\tprint('<', s[i], '>', sep='')\n\telse:\n\t\tl = [x for x in s[i].split() if x != '']\n\t\tif l != []:\n\t\t\tprint('<', '>\\n<'.join(l), '>', sep='')", "# from dust i have come dust i will be\n\nimport shlex\n\ns=input();\na=shlex.split(s)\n\nfor x in a:\n    print('<'+x+'>')\n", "s = input().split('\"')\nfor i in range(len(s)):\n\tif i % 2:\n\t\tprint('<', s[i], '>', sep='')\n\telse:\n\t\tl = [x for x in s[i].split() if x != '']\n\t\tif l != []:\n\t\t\tprint('<', '>\\n<'.join(l), '>', sep='')\n\n\n\n\n# Made By Mostafa_Khaled", "import shlex\ns=input();\na=shlex.split(s)\nfor x in a:\n    print('<'+x+'>')", "args = input()\ndef interpreter(arg):\n    args = arg.split(' ')\n    output = list()\n    i = 0\n    while i < len(args):\n        if args[i] == '':\n            pass\n        elif args[i][0] == '\"':\n            if len(args[i]) > 1 and args[i][1] == '\"':\n                output.append('<>')\n            elif len(args[i]) > 1 and args[i][-1] == '\"':\n                output.append('<' + args[i][1:-1] + '>')\n            else:\n                if len(args[i]) > 1:\n                    output.append('<' + args[i][1:])\n                else:\n                    output.append('<')\n                i += 1\n                while len(args[i]) == 0 or args[i][-1] != '\"':\n                    if args[i] == '':\n                        output[-1] = output[-1] + ' '\n                    else:\n                        output[-1] = output[-1] + ' ' + args[i]\n                    i += 1\n                if len(args[i]) > 1:\n                    output[-1] = output[-1] + ' ' + args[i][:-1] + '>'\n                else:\n                    output[-1] = output[-1] + ' >'\n        else:\n            output.append('<' + args[i] + '>')\n        i += 1\n    return output\n\nfor i in interpreter(args):\n    print(i)\n", "args = input()\n\n\ndef interpreter(arg):\n    args = arg.split(' ')\n    output = list()\n    i = 0\n    while i < len(args):\n        if args[i] == '':\n            pass\n        elif args[i][0] == '\"':\n            if len(args[i]) > 1 and args[i][1] == '\"':\n                output.append('<>')\n            elif len(args[i]) > 1 and args[i][-1] == '\"':\n                output.append('<' + args[i][1:-1] + '>')\n            else:\n                if len(args[i]) > 1:\n                    output.append('<' + args[i][1:])\n                else:\n                    output.append('<')\n                i += 1\n                while len(args[i]) == 0 or args[i][-1] != '\"':\n                    if args[i] == '':\n                        output[-1] = output[-1] + ' '\n                    else:\n                        output[-1] = output[-1] + ' ' + args[i]\n                    i += 1\n                if len(args[i]) > 1:\n                    output[-1] = output[-1] + ' ' + args[i][:-1] + '>'\n                else:\n                    output[-1] = output[-1] + ' >'\n        else:\n            output.append('<' + args[i] + '>')\n        i += 1\n    return output\n\n\nfor i in interpreter(args):\n    print(i)\n", "a = input()\nans=[]\nt=''\nqoute =0\nspace =0\nstart =1 if a[0]=='\"' else 0\nfor i in range(len(a)):\n    v= a[i]\n    if start:\n        if t=='':\n            if v=='\"':\n                qoute+=1\n                t = '<'\n            elif v==' ':\n                pass\n            else:\n                space+=1\n                t='<'+v\n        elif qoute>0:\n            if v =='\"':\n                t+='>'\n                qoute=0\n                ans.append(t)\n                t=''\n                start=0\n            else:\n                t+=v\n        else:\n            if v ==' ':\n                if t!='<':\n                    t+='>'\n                    ans.append(t)\n                    t=''\n                    start=0\n            else:\n                t+=v\n    else:\n        if v==' ':\n            start=1\n        elif v=='\"':\n            start=1\n            t='<'\n            qoute=1\n        else:\n            t='<'+v\n            start=1\nif t!='':\n    t+='>'\n    ans.append(t)\nfor v in ans:\n    print(v)", "class CodeforcesTask291BSolution:\n    def __init__(self):\n        self.result = ''\n        self.command = ''\n\n    def read_input(self):\n        self.command = input()\n\n    def process_task(self):\n        lexems = []\n        cmd = []\n        started = False\n        for x in range(len(self.command)):\n            if started:\n                if self.command[x] == '\"':\n                    started = False\n                    lexems.append(cmd)\n                    cmd = []\n                else:\n                    cmd.append(self.command[x])\n            else:\n                if self.command[x] == \" \":\n                    if cmd:\n                        lexems.append(cmd)\n                        cmd = []\n                elif self.command[x] == '\"':\n                    started = True\n                else:\n                    cmd.append(self.command[x])\n        if cmd:\n            lexems.append(cmd)\n        if lexems:\n            lexems[0] = [\"<\"] + lexems[0]\n            lexems[-1].append(\">\")\n        self.result = \">\\n<\".join([\"\".join(x) for x in lexems])\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask291BSolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "list1=list()\ncmd=input()\ni=0\nn=len(cmd)\nwhile(i<len(cmd) and i!=-1):\n    x=cmd[i]\n    if x=='\"':\n        ind=cmd.find('\"',i+1,n)\n        if ind==-1:\n            break\n        if ind+1< len(cmd) and cmd[ind+1]==' ':\n               list1.append(cmd[i+1:ind]);\n        else:\n            ind=cmd.find('\"',ind+1,n)\n            list1.append(cmd[i+1:ind])\n        i=ind+1\n        if ind==-1:\n            break\n    elif x !=' ':\n        j=i\n        while(i<n and cmd[i]!=' '):\n            i+=1\n        x=cmd[j:i]\n        list1.append(x)\n        i+=1\n    else:\n        i+=1\n\nfor x in list1:\n    print(\"<\",x,\">\",sep=\"\")\n", "n=input()\nz,i=len(n),0\nwhile i<z:\n    if n[i]=='\"':\n        k=\"<\";i+=1\n        while i<z and n[i]!='\"':k+=n[i];i+=1\n        k+='>';i+=1\n        print(k)\n    elif n[i]!=\" \":\n        k=\"<\"\n        while i<z and n[i]!=\" \":k+=n[i];i+=1\n        k+=\">\"\n        print(k)\n    else:i+=1"]