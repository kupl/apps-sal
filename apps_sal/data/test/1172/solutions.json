["def main():\n    mod = 10**9 + 7\n    s = input()\n    n = len(s)\n\n    a_num = 0\n    c_num = s.count('C')\n    q_num = 0\n    q_cnt = s.count('?')\n\n    pow3, pow2, pow1, pow0 = 0, 0, 0, 0\n    if q_cnt >= 3:\n        pow3 = pow(3, q_cnt-3, mod)\n        pow2 = pow3 * 3 % mod\n        pow1 = pow2 * 3 % mod\n        pow0 = pow1 * 3 % mod\n    elif q_cnt == 2:\n        pow2 = 1\n        pow1 = 3\n        pow0 = 9\n    elif q_cnt == 1:\n        pow1 = 1\n        pow0 = 3\n    else:\n        pow0 = 1\n\n    ans = 0\n    for x in s:\n        if x == 'A':\n            a_num += 1\n        elif x == 'B':\n            ans += pow0 * a_num * c_num\n            ans += pow1 * (q_num * c_num + a_num * (q_cnt - q_num))\n            ans += pow2 * (q_num) * (q_cnt - q_num)\n            ans %= mod\n        elif x == 'C':\n            c_num -= 1\n        else:\n            ans += pow1 * a_num * c_num\n            ans += pow2 * (q_num * c_num + a_num * (q_cnt - q_num - 1))\n            ans += pow3 * (q_num) * (q_cnt - q_num - 1)\n            ans %= mod\n            q_num += 1\n\n    print(ans)\n\nmain()", "s=input()\nmod=10**9+7\nretnum={\"?\":0,\"A\":1,\"B\":2,\"C\":3}\ncount=[[0 for i in range(len(s))] for j in range(4)]\nfor i in range(len(s)):\n    for j in range(4):\n        if retnum[s[i]] == j:\n            count[j][i]=count[j][i-1]+1\n        else:\n            count[j][i]=count[j][i-1]\nans=0\ng=[1]*100002\nfor i in range(1,100002):\n    g[i]=g[i-1]*3\n    g[i]%=mod\nfor i in range(1,len(s)-1):\n    if s[i]==\"B\" or s[i]==\"?\":\n        ans+=(g[max(0,count[0][i-1]-1)]*count[0][i-1]+g[count[0][i-1]]*count[1][i-1])*(g[max(0,count[0][-1]-count[0][i]-1)]*(count[0][-1]-count[0][i])+g[count[0][-1]-count[0][i]]*(count[3][-1]-count[3][i]))\n        ans%=mod\nprint(ans)", "mod = 10 ** 9 + 7\ns = input()\ndp = [[0] * 4 for i in range(len(s) + 1)]\ndp[len(s)][3] = 1\nfor i in range(len(s))[::-1]:\n    for j in range(4)[::-1]:\n        if s[i] == \"?\":\n            dp[i][j] = dp[i + 1][j] * 3\n        else:\n            dp[i][j] = dp[i + 1][j]\n        if j < 3:\n            if s[i] == \"?\" or s[i] == \"ABC\"[j]:\n                dp[i][j] += dp[i + 1][j + 1]\n        dp[i][j] %= mod\nprint(dp[0][0])", "#!/usr/bin/env python3\n\ns = str(input())\n\nmod = 10**9+7\ndp = [[0]*4 for i in range(len(s)+1)]\ndp[0][0] = 1\nfor i in range(1, len(s)+1):\n    for j in range(4):\n        if s[i-1] == \"?\":\n            dp[i][j] = (dp[i-1][j]*3) % mod\n        else:\n            dp[i][j] = (dp[i-1][j]) % mod\n\n    if s[i-1] == \"A\":\n        dp[i][1] += (dp[i-1][0]) % mod\n    elif s[i-1] == \"B\":\n        dp[i][2] += (dp[i-1][1]) % mod\n    elif s[i-1] == \"C\":\n        dp[i][3] += (dp[i-1][2]) % mod\n    else:\n        dp[i][1] += (dp[i-1][0]) % mod\n        dp[i][2] += (dp[i-1][1]) % mod\n        dp[i][3] += (dp[i-1][2]) % mod\n\n# print(dp)\nprint((dp[-1][-1] % mod))\n", "S = input()\n\ndp = [[0] * 4 for _ in range(len(S) + 1)]\ndp[0][0] = 1\nW = 'ABC'\n\nMOD = 10 ** 9 + 7\n\n\ndef update1(i):\n    for j in range(4):\n        dp[i + 1][j] += dp[i][j] % MOD\n\n\ndef update2(i, c):\n    ic = W.index(c)\n    dp[i + 1][ic + 1] += dp[i][ic] % MOD\n\n\nfor i in range(len(S)):\n    if S[i] == '?':\n        for c in W:\n            update1(i)\n            update2(i, c)\n    else:\n        update1(i)\n        update2(i, S[i])\nprint((dp[len(S)][-1] % MOD))\n", "import sys\nimport math\nfrom collections import deque\n\nsys.setrecursionlimit(1000000)\nMOD = 10 ** 9 + 7\ninput = lambda: sys.stdin.readline().strip()\nNI = lambda: int(input())\nNMI = lambda: map(int, input().split())\nNLI = lambda: list(NMI())\nSI = lambda: input()\n\n\ndef make_grid(h, w, num): return [[int(num)] * w for _ in range(h)]\n\n\ndef main():\n\tS = SI()\n\tN = len(S)\n\tdp = make_grid(N+1, 4, 0)\n\tdic = {\"A\": [0], \"B\": [1], \"C\": [2], \"?\": [0,1,2]}\n\tdp[0][0] = 1\n\tfor i, s in enumerate(S):\n\t\tif s == \"?\":\n\t\t\tfor j in range(4):\n\t\t\t\tif j in dic[s]:\n\t\t\t\t\tdp[i+1][j+1] += dp[i][j] % MOD\n\t\t\t\tdp[i+1][j] += dp[i][j] * 3 % MOD\n\t\telse:\n\t\t\tfor j in range(4):\n\t\t\t\tif j in dic[s]:\n\t\t\t\t\tdp[i+1][j+1] += dp[i][j] % MOD\n\n\t\t\t\tdp[i+1][j] += dp[i][j] % MOD\n\n\tprint(dp[N][3] % MOD)\n\n\n\ndef __starting_point():\n\tmain()\n__starting_point()", "MOD = 10**9+7\n\nS = input()\nN = len(S)\ndp = [[0]*4 for i in range(N+1)]\ndp[0][0] = 1\nfor i in range(N):\n    s = S[i]\n    for j in range(4):\n        if s == \"?\":\n            dp[i+1][j] += dp[i][j]*3\n        else:\n            dp[i+1][j] += dp[i][j]\n        dp[i+1][j] %= MOD\n        if j < 3 and (s == \"?\" or s == \"ABC\"[j]):\n            dp[i+1][j+1] += dp[i][j]\n            dp[i+1][j+1] %= MOD\nprint((dp[N][3]%MOD))\n", "import sys\nreadline = sys.stdin.readline\n\nS = readline().rstrip()\nDIV = 10 ** 9 + 7\n\ndp = [[0] * 4 for i in range(len(S) + 1)]\n# dp[i + 1][0] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306e\u90e8\u5206\u6587\u5b57\u5217\u304c\u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u6570\n# dp[i + 1][1] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eA\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n# dp[i + 1][2] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eB\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n# dp[i + 1][3] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eC\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n\ndp[0][0] = 1\n\nfor i in range(len(S)):\n  if S[i] == \"A\" or S[i] == \"?\":\n    dp[i + 1][0] += dp[i][0] # \u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3092\u305d\u306e\u307e\u307e\n    dp[i + 1][1] += dp[i][1] # \u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3092\u305d\u306e\u307e\u307e\n    dp[i + 1][2] += dp[i][2] # \u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3092\u305d\u306e\u307e\u307e\n    dp[i + 1][3] += dp[i][3] # \u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3092\u305d\u306e\u307e\u307e\n    dp[i + 1][1] += dp[i][0] # \u958b\u59cb\u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\n    \n  if S[i] == \"B\" or S[i] == \"?\":\n    dp[i + 1][0] += dp[i][0] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][1] += dp[i][1] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][2] += dp[i][2] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][3] += dp[i][3] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][2] += dp[i][1] # B\u3092\u4f7f\u7528\u3057\u305f\u72b6\u614b\u306b\u9077\u79fb\n  \n  if S[i] == \"C\" or S[i] == \"?\":\n    dp[i + 1][0] += dp[i][0] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][1] += dp[i][1] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][2] += dp[i][2] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][3] += dp[i][3] # \u305d\u306e\u6587\u5b57\u3092\u9078\u3070\u306a\u3044\u5834\u5408\n    dp[i + 1][3] += dp[i][2] # C\u3092\u4f7f\u7528\u3057\u305f\u72b6\u614b\u306b\u9077\u79fb\n    \n  for j in range(4):\n    dp[i + 1][j] %= DIV\n    \n# \u6700\u5f8c\u306e\u6587\u5b57\u307e\u3067\u898b\u305f\u3068\u304d\u3001C\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\u304c\u7b54\u3048\nprint((dp[len(S)][3]))\n", "s = input().rstrip()\ndp = [0] * 4\ndp[0] = 1\n\nfor i in range(len(s)):\n    if s[i] == 'A':\n        dp[1] += dp[0]\n    elif s[i] == 'B':\n        dp[2] += dp[1]\n    elif s[i] == 'C':\n        dp[3] += dp[2]\n    else:\n        dp = [dp[0]*3, dp[1]*3+dp[0], dp[2]*3+dp[1], dp[3]*3+dp[2]]\n    dp = list([x % (10**9+7) for x in dp])\nprint((dp[3]))\n", "mod = 1000000007\ns = input()\nal = 0\ncr = s.count('C')\nql = 0\nqr = s.count('?')\nans = 0\nfor c in s:\n  if c == 'C':\n    cr -= 1\n  elif c == '?':\n    qr -= 1\n    ans += (3 * al + ql) * (3 * cr + qr) * pow(3, ql + qr + mod - 3, mod)\n    ans %= mod\n    ql += 1\n  elif c == 'B':\n    ans += (3 * al + ql) * (3 * cr + qr) * pow(3, ql + qr + mod - 3, mod)\n    ans %= mod\n  else:\n    al += 1\nprint(ans)\n", "def main():\n    mod = 10**9 + 7\n    s = input()\n    n = len(s)\n\n    a_num = 0\n    c_num = s.count('C')\n    q_num = 0\n    q_cnt = s.count('?')\n\n    pows = [0] * 4\n    if q_cnt >= 3:\n        pows[3] = pow(3, q_cnt-3, mod)\n        pows[2] = pows[3] * 3 % mod\n        pows[1] = pows[2] * 3 % mod\n        pows[0] = pows[1] * 3 % mod\n    elif q_cnt == 2:\n        pows[2] = 1\n        pows[1] = 3\n        pows[0] = 9\n    elif q_cnt == 1:\n        pows[1] = 1\n        pows[0] = 3\n    else:\n        pows[0] = 1\n\n    ans = 0\n    for x in s:\n        if x == 'A':\n            a_num += 1\n        elif x == 'B':\n            ans += pows[0] * a_num * c_num\n            ans += pows[1] * (q_num * c_num + a_num * (q_cnt - q_num))\n            ans += pows[2] * (q_num) * (q_cnt - q_num)\n            ans %= mod\n        elif x == 'C':\n            c_num -= 1\n        else:\n            ans += pows[1] * a_num * c_num\n            ans += pows[2] * (q_num * c_num + a_num * (q_cnt - q_num - 1))\n            ans += pows[3] * (q_num) * (q_cnt - q_num - 1)\n            ans %= mod\n            q_num += 1\n\n    print(ans)\n\nmain()", "MOD = 10**9 + 7\nS = input()\nres = 0\ndp0 = 1 # ''\ndp1 = 0 # 'a'\ndp2 = 0 # 'ab'\ndp3 = 0 # 'abc'\n\nfor c in S:\n    if c == 'A':\n        dp1 = (dp0+dp1)%MOD\n    elif c == 'B':\n        dp2 = (dp1+dp2)%MOD\n    elif c == 'C':\n        dp3 = (dp2+dp3)%MOD\n    else:\n        dp3 = (dp3*3+dp2)%MOD\n        dp2 = (dp2*3+dp1)%MOD\n        dp1 = (dp1*3+dp0)%MOD\n        dp0 = (dp0*3)%MOD\nprint(dp3)\n", "MOD = 10**9+7\n\ns=input()\nAnum = 0\nABnum = 0\nABCnum = 0\nq = 0\nfor c in s:\n    if c == 'A':\n        Anum = (Anum+pow(3,q,MOD))%MOD\n    elif c == 'B':\n        ABnum = (ABnum+Anum)%MOD\n    elif c == 'C':\n        ABCnum = (ABCnum+ABnum)%MOD\n    else:\n        Anum,ABnum,ABCnum = 3*Anum+pow(3,q,MOD),3*ABnum+Anum,3*ABCnum+ABnum\n        Anum,ABnum,ABCnum = Anum%MOD,ABnum%MOD,ABCnum%MOD\n        q += 1\nprint(ABCnum)\n", "S = input()\n#dp[i][four] =: i + 1\u756a\u76ee\u307e\u3067\u898b\u305f\u3068\u304d,\u7167\u5408\u3057\u305f\u30b1\u30c4\u304cfour\u3068\u306a\u308b\u3082\u306e\u306e\u7dcf\u6570\ndp = [[0 for _ in range(4)] for _ in range(len(S)+1 )]\ndp[0][0] = 1\nmod = 10**9 + 7\nfor i in range(len(S)):\n    if S[i] == 'A' or S[i] == '?':\n        dp[i+1][1] += dp[i][0] \n        for k in range(4): dp[i+1][k] += dp[i][k]\n    if S[i] == 'B' or S[i] == '?':\n        dp[i+1][2] += dp[i][1]\n        for k in range(4): dp[i+1][k] += dp[i][k]\n    if S[i] == 'C' or S[i] == '?':\n        dp[i+1][3] += dp[i][2]\n        for k in range(4): dp[i+1][k] += dp[i][k]\n    for k in range(4): dp[i+1][k] %= mod\nprint((dp[len(S)][3]))\n", "def main():\n    MOD = 10 ** 9 + 7\n\n    S = input()\n    z, a, b, c = 1, 0, 0, 0\n\n    for x in S:\n        if x == 'C':\n            c = (c + b) % MOD\n        elif x == 'B':\n            b = (b + a) % MOD\n        elif x == 'A':\n            a = (a + z) % MOD\n        elif x == '?':\n            z, a, b, c = z * 3 % MOD, (a * 3 + z) % MOD, (b * 3 + a) % MOD, (c * 3 + b) % MOD\n    print(c)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nn = len(s)\np = 10 ** 9 + 7\n\nq = s.count('?')\nl_a = [0] * n  # l_a[i] := s[i]\u3088\u308a\u5de6\u306b\u3042\u308bA\u306e\u6570\nl_x = [0] * n  # l_x[i] := s[i]\u3088\u308a\u5de6\u306b\u3042\u308b?\u306e\u6570\nr_c = [0] * n  # r_c[i] := s[i]\u3088\u308a\u53f3\u306b\u3042\u308bC\u306e\u6570\nr_x = [0] * n  # r_x[i] := s[i]\u3088\u308a\u53f3\u306b\u3042\u308b?\u306e\u6570\n\nfor i in range(1, n):  # 1\u301cn-1\n    l_a[i] = l_a[i - 1] + int(s[i - 1] == 'A')\n    l_x[i] = l_x[i - 1] + int(s[i - 1] == '?')\n    r_c[n - i - 1] = r_c[n - i] + int(s[n - i] == 'C')\n    r_x[n - i - 1] = r_x[n - i] + int(s[n - i] == '?')\n\nans = 0\npow_q = []\nfor i in range(0, 4):\n    pow_q.append(max(1, 3 ** (q - i) % p))\n\nfor i in range(n):\n    if s[i] == 'B':\n        ans += (l_a[i] * r_c[i] % p) * pow_q[0] % p  # ABC\n        ans += (l_x[i] * r_c[i] % p) * pow_q[1] % p # ?BC\n        ans += (l_a[i] * r_x[i] % p) * pow_q[1] % p # AB?\n        ans += (l_x[i] * r_x[i] % p) * pow_q[2] % p # ?B?\n        ans %= p\n    elif s[i] == '?':\n        ans += (l_a[i] * r_c[i] % p) * pow_q[1] % p # A?C\n        ans += (l_x[i] * r_c[i] % p) * pow_q[2] % p # ??C\n        ans += (l_a[i] * r_x[i] % p) * pow_q[2] % p # A??\n        ans += (l_x[i] * r_x[i] % p) * pow_q[3] % p # ???\n        ans %= p\n\nprint(ans)", "s = input()\nn = len(s)\nmod = 10**9+7\nqcnt = [[0,0]for i in range(n)]#\u305d\u308c\u3088\u308a\u5de6\u306e\uff1f\u3001\u53f3\u306e\uff1f\u306e\u3053\u3059\u3046\nAcnt = [0]*n#\u305d\u308c\u3088\u308a\u5de6\u306eA\u306e\u3053\u3059\u3046\nCcnt = [0]*n#\u305d\u308c\u3088\u308a\u53f3\u306eC\u306e\u500b\u6570\nq = 0\nfor i in range(n-1):\n    if s[i] == '?':\n        q += 1\n        qcnt[i+1][0] += 1\n    elif s[i] == 'A':\n        Acnt[i+1] += 1\n    qcnt[i+1][0] += qcnt[i][0]\n    Acnt[i+1] += Acnt[i]\n    qcnt[i+1][0]%=mod\n    Acnt[i+1]%=mod\nif s[-1] == '?':q += 1\nfor i in range(n-1,0,-1):\n    if s[i] == '?':\n        \n        qcnt[i-1][1] += 1\n    elif s[i] == 'C':\n        Ccnt[i-1] += 1\n    qcnt[i-1][1] += qcnt[i][1]\n    Ccnt[i-1] += Ccnt[i]\n    qcnt[i-1][1]%=mod\n    Ccnt[i-1]%=mod\nans = 0\nfor i in range(n):\n    \n    if s[i] == 'B' or s[i] == '?':\n        if qcnt[i][0]+qcnt[i][1]-2 <0:\n            val = -(qcnt[i][0]+qcnt[i][1]-2)\n            p = pow(3,val,mod)\n            q = pow(p,mod-2,mod)\n            ans +=q%mod*(3*Acnt[i] + qcnt[i][0])*(3*Ccnt[i]+ qcnt[i][1])%mod\n        \n        else:ans +=pow(3,qcnt[i][0]+qcnt[i][1]-2,mod)%mod*(3*Acnt[i] + qcnt[i][0])*(3*Ccnt[i]+ qcnt[i][1])%mod\n        ans %= mod\n    \n    \nprint((ans%mod))\n\n\n    \n", "S = input()\nN = len(S)\nmod = 10**9+7\nnumofA = 0\nnumofAB = 0\nnumofABC = 0\nnumofquestion = 1\nfor i in range(N):\n    if S[i] == \"?\":\n        numofABC = (numofABC*3+numofAB) % mod\n        numofAB = (numofAB*3+numofA) % mod\n        numofA = (numofquestion + numofA*3) % mod\n        numofquestion = (numofquestion * 3) % mod\n    elif S[i] == \"C\":\n        numofABC = (numofAB+numofABC) % mod\n    elif S[i] == \"B\":\n        numofAB = (numofAB + numofA) % mod\n    else:\n        numofA = (numofquestion + numofA) % mod\nprint(numofABC)\n", "import sys\nreadline = sys.stdin.readline\n\nS = readline().rstrip()\nDIV = 10 ** 9 + 7\n\ndp = [[0] * 4 for i in range(len(S) + 1)]\n# dp[i + 1][0] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306e\u90e8\u5206\u6587\u5b57\u5217\u304c\u307e\u3060\u59cb\u307e\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u6570\n# dp[i + 1][1] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eA\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n# dp[i + 1][2] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eB\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n# dp[i + 1][3] : i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u3001ABC\u306eC\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\n\ndp[0][0] = 1\n\nfor i in range(len(S)):\n  # \u72b6\u614b\u3092\u9077\u79fb\u3057\u306a\u3044\u5834\u5408\n  for j in range(4):\n    dp[i + 1][j] += dp[i][j] * (3 if S[i] == \"?\" else 1) # ?\u306e\u5834\u5408\u306f\u5168\u3066\u306e\u9077\u79fb\u304c\u3042\u308a\u5f97\u308b\n  \n  if S[i] == \"A\" or S[i] == \"?\":\n    dp[i + 1][1] += dp[i][0] # \u958b\u59cb\u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\n    \n  if S[i] == \"B\" or S[i] == \"?\":\n    dp[i + 1][2] += dp[i][1] # B\u3092\u4f7f\u7528\u3057\u305f\u72b6\u614b\u306b\u9077\u79fb\n  \n  if S[i] == \"C\" or S[i] == \"?\":\n    dp[i + 1][3] += dp[i][2] # C\u3092\u4f7f\u7528\u3057\u305f\u72b6\u614b\u306b\u9077\u79fb\n    \n  for j in range(4):\n    dp[i + 1][j] %= DIV\n    \n# \u6700\u5f8c\u306e\u6587\u5b57\u307e\u3067\u898b\u305f\u3068\u304d\u3001C\u307e\u3067\u4e00\u81f4\u3057\u305f\u5834\u5408\u306e\u6570\u304c\u7b54\u3048\nprint((dp[len(S)][3]))\n", "s = str(input())\nn = len(s)\n\nmod = 10**9+7\n\nX = [[0]*4 for _ in range(n+1)]\nfor i in range(n):\n    for j in range(4):\n        X[i+1][j] = X[i][j]\n    if s[i] == 'A':\n        X[i+1][0] += 1\n    elif s[i] == 'B':\n        X[i+1][1] += 1\n    elif s[i] == 'C':\n        X[i+1][2] += 1\n    else:\n        X[i+1][3] += 1\n\nY = [[0]*4 for _ in range(n+1)]\nfor i in reversed(list(range(n))):\n    for j in range(4):\n        Y[i][j] = Y[i+1][j]\n    if s[i] == 'A':\n        Y[i][0] += 1\n    elif s[i] == 'B':\n        Y[i][1] += 1\n    elif s[i] == 'C':\n        Y[i][2] += 1\n    else:\n        Y[i][3] += 1\n#print(X)\n#print(Y)\nc = X[n][3]\nans = 0\nfor i in range(n):\n    if s[i] == 'B':\n        ans += X[i+1][3]*Y[i][3]*pow(3, max(0, c-2), mod)\n        ans += X[i+1][0]*Y[i][2]*pow(3, c, mod)\n        ans += X[i+1][3]*Y[i][2]*pow(3, max(0, X[i+1][3]-1+Y[i][3]), mod)\n        ans += X[i+1][0]*Y[i][3]*pow(3, max(0, X[i+1][3]+Y[i][3]-1), mod)\n        ans %= mod\n    if s[i] == '?':\n        ans += X[i][3]*Y[i+1][3]*pow(3, max(0, c-3), mod)\n        ans += X[i+1][0]*Y[i][2]*pow(3, max(0, c-1), mod)\n        ans += X[i][3]*Y[i][2]*pow(3, max(0, X[i][3]-1+Y[i+1][3]), mod)\n        ans += X[i+1][0]*Y[i+1][3]*pow(3, max(0, X[i][3]+Y[i+1][3]-1), mod)\n        ans %= mod\n        ans %= mod\nprint(ans)\n", "s = input()\nmod = 10**9+7\n\ndp = [[0]*4 for i in range(len(s)+1)]\ndp[0][0] = 1\nfor i in range(len(s)):\n    \n    if s[i] == \"A\":\n        dp[i+1][1] += dp[i][0]\n    elif s[i] ==\"B\":\n        dp[i+1][2] += dp[i][1]\n    elif s[i] == \"C\":\n        dp[i+1][3] += dp[i][2]\n    else:\n        dp[i+1][1] += dp[i][0]\n        dp[i+1][2] += dp[i][1]\n        dp[i+1][3] += dp[i][2]\n    for j in range(4):\n        if s[i] == \"?\":\n            dp[i+1][j] = (dp[i+1][j]+dp[i][j]*3)%mod\n        else:\n            dp[i+1][j] = (dp[i+1][j]+dp[i][j])%mod\n\n\nprint((dp[-1][3]%mod))\n\n", "from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    s=readline().strip()\n\n    mod=10**9+7\n    n=len(s)\n    dp=[[0]*4 for _ in range(n+1)]\n    dp[0][0]=1\n    for i in range(1,n+1):\n        #i\u6587\u5b57\u76ee\u3092\u9078\u3070\u306a\u3044\n        for j in range(4):\n            if s[i-1]!=\"?\":\n                dp[i][j]+=dp[i-1][j]\n            else:\n                dp[i][j]+=dp[i-1][j]*3\n\n        #i\u6587\u5b57\u76ee\u3092\u9078\u3076\n        if s[i-1]==\"A\":\n            dp[i][1]+=dp[i-1][0]\n        elif s[i-1]==\"B\":\n            dp[i][2]+=dp[i-1][1]\n        elif s[i-1]==\"C\":\n            dp[i][3]+=dp[i-1][2]\n        elif s[i-1]==\"?\":\n            dp[i][1]+=dp[i-1][0]\n            dp[i][2]+=dp[i-1][1]\n            dp[i][3]+=dp[i-1][2]\n\n        for j in range(4):\n            dp[i][j]%=mod\n            \n    print(dp[n][3])\ndef __starting_point():\n    main()\n__starting_point()", "s = input()\nn = len(s)\np = 10 ** 9 + 7\n\n# i = 0, ..., n\u306b\u3064\u3044\u3066\n# dp[i][0] = i\u6587\u5b57\u76ee\u307e\u3067\u3067\u3042\u308a\u3046\u308b\u6587\u5b57\u5217\u306e\u6570\uff08ABC\u306a\u30891\u3001AB?\u306a\u30893\uff09\n# dp[i][1] = i\u6587\u5b57\u76ee\u307e\u3067\u306b\u542b\u307e\u308c\u308bA\u306e\u6570\n# dp[i][2] = i\u6587\u5b57\u76ee\u307e\u3067\u306b\u542b\u307e\u308c\u308bAB\u306e\u30d1\u30bf\u30fc\u30f3\u6570\n# dp[i][3] = i\u6587\u5b57\u76ee\u307e\u3067\u306b\u542b\u307e\u308c\u308bABC\u306e\u30d1\u30bf\u30fc\u30f3\u6570\ndp = [[0 for j in range(4)] for i in range(n + 1)]\ndp[0][0] = 1 # ''\u7a7a\u306e\u6587\u5b57\u5217\u306f1\u30d1\u30bf\u30fc\u30f3\nfor j in range(1, 4):\n    dp[0][j] = 0  # \u7a7a\u306e\u6587\u5b57\u5217\u306b\u306fA\u3082AB\u3082ABC\u3082\u5165\u3063\u3066\u3044\u306a\u3044\n\nfor i in range(1, n + 1):\n    m = 3 if s[i - 1] == '?' else 1\n\n    for j in range(4):\n        dp[i][j] = dp[i - 1][j] * m % p\n\n    if s[i - 1] == 'A' or s[i - 1] == '?':\n        dp[i][1] =  (dp[i][1] + dp[i - 1][0]) % p\n    if s[i - 1] == 'B' or s[i - 1] == '?':\n        dp[i][2] = (dp[i][2] + dp[i - 1][1]) % p\n    if s[i - 1] == 'C' or s[i - 1] == '?':\n        dp[i][3] = (dp[i][3] + dp[i - 1][2]) % p\n\nprint(dp[n][3])", "S = input()\nMOD = 10**9 + 7\ndp = [[0]*4 for _ in range(100005)]\ndp[0][0] = 1\nfor i in range(len(S)):\n    for j in range(4):\n        if S[i] != '?':\n            dp[i+1][j] += dp[i][j]\n            dp[i+1][j] %= MOD\n        else:\n            dp[i+1][j] += 3*dp[i][j] % MOD\n            dp[i+1][j] %= MOD\n    if S[i] == 'A' or S[i] == '?':\n        dp[i+1][1] += dp[i][0]\n        dp[i+1][1] %= MOD\n    if S[i] == 'B' or S[i] == '?':\n        dp[i+1][2] += dp[i][1]\n        dp[i+1][2] %= MOD\n    if S[i] == 'C' or S[i] == '?':\n        dp[i+1][3] += dp[i][2]\n        dp[i+1][3] %= MOD\nprint((dp[len(S)][3]))\n", "MOD = 10**9 + 7\ndef main():\n    s = input()\n    dp = [[0]*3 for _ in range(len(s)+1)]\n# dp[idx][A, AB, ABC]\n    tmp = 1\n    for i in range(len(s)):\n        c = s[i]\n        if c == \"A\":\n            dp[i][0] += tmp\n            dp[i][0] %= MOD\n        elif c == \"B\":\n            dp[i][1] += dp[i][0]\n            dp[i][1] %= MOD\n        elif c == \"C\":\n            dp[i][2] += dp[i][1]\n            dp[i][2] %= MOD\n        else:\n            pre = [v for v in dp[i]]\n            dp[i] = [0, 0, 0]\n# ? = A\n            dp[i][0] += pre[0] + tmp\n            dp[i][1] += pre[1]\n            dp[i][2] += pre[2]\n# ? = B\n            dp[i][0] += pre[0]\n            dp[i][1] += pre[0] + pre[1]\n            dp[i][2] += pre[2]\n# ? = C\n            dp[i][0] += pre[0]\n            dp[i][1] += pre[1]\n            dp[i][2] += pre[1] + pre[2]\n            tmp *= 3\n            tmp %= MOD\n            dp[i][0] %= MOD\n            dp[i][1] %= MOD\n            dp[i][2] %= MOD\n        dp[i+1][0] = dp[i][0]\n        dp[i+1][1] = dp[i][1]\n        dp[i+1][2] = dp[i][2]\n#        print(dp[i])\n    print(dp[len(s)][2] % MOD)\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\nMOD = 10**9+7\nS = input()\nn = len(S)\nacc_A = [0]*n\nacc_C = [0]*n\nacc_Q_left = [0]*n\nacc_Q_right = [0]*n\ncnt = 0\nfor i, s in enumerate(S):\n  if s == \"A\":\n    acc_A[i] = 1\n  elif s == \"C\":\n    acc_C[i] = 1\n  elif s == \"?\":\n    acc_Q_left[i] = 1\n    acc_Q_right[i] = 1\n    cnt += 1\nacc_A = list(accumulate(acc_A))\nacc_C = list(accumulate(acc_C[::-1]))[::-1]\nacc_Q_left = list(accumulate(acc_Q_left))\nacc_Q_right = list(accumulate(acc_Q_right[::-1]))[::-1]\nans = 0\nfor i, s in enumerate(S):\n  if i == 0 or i == n-1:\n    continue\n  if s == \"B\":\n    ans += acc_A[i-1] * acc_C[i+1] * pow(3, cnt, MOD)\n    if cnt >= 1:\n      ans += acc_A[i-1] * acc_Q_right[i+1] * pow(3, cnt-1, MOD)\n      ans += acc_Q_left[i-1] * acc_C[i+1] * pow(3, cnt-1, MOD)\n    if cnt >= 2:\n      ans += acc_Q_left[i-1] * acc_Q_right[i+1] * pow(3, cnt-2, MOD)\n  elif s == \"?\":\n    ans += acc_A[i-1] * acc_C[i+1] * pow(3, cnt-1, MOD)\n    if cnt >= 2:\n      ans += acc_A[i-1] * acc_Q_right[i+1] * pow(3, cnt-2, MOD)\n      ans += acc_Q_left[i-1] * acc_C[i+1] * pow(3, cnt-2, MOD)\n    if cnt >= 3:\n      ans += acc_Q_left[i-1] * acc_Q_right[i+1] * pow(3, cnt-3, MOD)\n  ans %= MOD\nprint(ans)", "S = input()\nnQ_r = S.count('?')\nnC_r = S.count('C')\nnQ_l = 0\nnA_l = 0\nN = len(S)\nmod = 10**9+7\n\npow3 = [1]*N\np = 1\nfor i in range(1,N):\n    pow3[i] = p = p*3%mod\n\nans = 0\nfor n, c in enumerate(S):\n    if c=='C': nC_r-=1\n    if c=='?': nQ_r-=1\n    \n    if n>0 and n<N-1 and (c=='B' or c=='?'):\n        p = ( nQ_l*pow3[max(0, nQ_l-1)] + nA_l*pow3[nQ_l] ) % mod\n        q = ( nQ_r*pow3[max(0, nQ_r-1)] + nC_r*pow3[nQ_r] ) % mod\n        ans += p * q\n        ans %= mod\n\n    if c=='A': nA_l+=1\n    if c=='?': nQ_l+=1\n\nprint(ans)", "s = input()\nmod = 10 ** 9 + 7\n\nl = len(s)\ndp = [[0] * 4 for _ in range(l + 1)]\ndp[0][0] = 1\n\nfor i, e in enumerate(s, 1):\n\t# do not use in ABC\n\tfor j in range(4):\n\t\tif e == \"?\":\n\t\t\tdp[i][j] += dp[i-1][j] * 3\n\t\telse:\n\t\t\tdp[i][j] += dp[i-1][j]\n\n\t# use in ABC\n\tif e == \"A\" or e == \"?\":\n\t\tdp[i][1] += dp[i-1][0]\n\tif e == \"B\" or e == \"?\":\n\t\tdp[i][2] += dp[i-1][1]\n\tif e == \"C\" or e == \"?\":\n\t\tdp[i][3] += dp[i-1][2]\n\n\tfor j in range(4):\n\t\tdp[i][j] %= mod\n\n\nans = dp[l][3]\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\n\ndef main():\n    string = input().strip()\n    n = len(string)\n    dp = [[0, 0, 0, 0] for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i, s in enumerate(string):\n        if s == \"A\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1] + dp[i][0]\n            dp[i + 1][2] = dp[i][2]\n            dp[i + 1][3] = dp[i][3]\n        elif s == \"B\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1]\n            dp[i + 1][2] = dp[i][2] + dp[i][1]\n            dp[i + 1][3] = dp[i][3]\n        elif s == \"C\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1]\n            dp[i + 1][2] = dp[i][2]\n            dp[i + 1][3] = dp[i][3] + dp[i][2]\n        else:\n            dp[i + 1][0] = 3 * dp[i][0]\n            dp[i + 1][1] = 3 * dp[i][1] + dp[i][0]\n            dp[i + 1][2] = 3 * dp[i][2] + dp[i][1]\n            dp[i + 1][3] = 3 * dp[i][3] + dp[i][2]\n        for j in range(4):\n            dp[i + 1][j] %= MOD\n    print(dp[-1][-1] % MOD)\n    \nmain()", "s=input()\nmod=pow(10,9)+7\ndp=[0]*4\ndp[0]=1\nfor si in s:\n  if si=='A':\n    dp[1]+=dp[0]\n  elif si=='B':\n    dp[2]+=dp[1]\n  elif si=='C':\n    dp[3]+=dp[2]\n  else:\n    tmp3=dp[2]\n    tmp2=dp[1]\n    tmp1=dp[0]\n    dp[3]*=3\n    dp[3]+=tmp3\n    dp[2]*=3\n    dp[2]+=tmp2\n    dp[1]*=3\n    dp[1]+=tmp1\n    dp[0]*=3\n  dp[3]%=mod\n  dp[2]%=mod\n  dp[1]%=mod\n  dp[0]%=mod\nprint((dp[3]))\n", "import sys\nsys.setrecursionlimit(10 ** 9)\nMOD = 10 ** 9 + 7\n\nS = list(input())\nN = len(S)\n\ncount = 0\nDP = [[0] *  (N + 1) for _ in range(3)]\nfor i in range(1, N + 1):\n    s = S[i - 1]\n    if s == 'A':\n        DP[0][i] = (DP[0][i - 1] + pow(3, count, MOD)) % MOD\n        DP[1][i] = DP[1][i - 1]\n        DP[2][i] = DP[2][i - 1]\n    elif s == 'B':\n        DP[0][i] = DP[0][i -1]\n        DP[1][i] = (DP[1][i - 1] + DP[0][i - 1]) % MOD\n        DP[2][i] = DP[2][i - 1]\n    elif s == 'C':\n        DP[0][i] = DP[0][i - 1]\n        DP[1][i] = DP[1][i - 1]\n        DP[2][i] = (DP[2][i - 1] + DP[1][i - 1]) % MOD\n    else:\n        DP[0][i] = (3 * DP[0][i - 1] + pow(3, count, MOD)) % MOD\n        DP[1][i] = (3 * DP[1][i - 1] + DP[0][i - 1]) % MOD\n        DP[2][i] = (3 * DP[2][i - 1] + DP[1][i - 1]) % MOD\n        count += 1\n\nprint((DP[2][N]))\n\n# print (DP)\n", "s=input()\nn=len(s)\nmod=10**9+7\ndp=[ [0]*3 for _ in range(n)]\n#dp[i][0] count of A's in all possible strings u generate till i\n#dp[i][1] count of AB's ''\n#dp[i][2] count of ABC's ''\ncnt=1\nfor i in range(n):\n    if s[i]=='?':\n        if i>0:\n            dp[i][2]=dp[i-1][1]+3*dp[i-1][2]\n            dp[i][2]%=mod\n            dp[i][1]=dp[i-1][0]+3*dp[i-1][1]\n            dp[i][1]%=mod\n            dp[i][0]=3*dp[i-1][0]+1*cnt\n            dp[i][0]%=mod\n        else:\n            dp[i][0]=1\n        cnt*=3\n        cnt%=mod\n    elif s[i]=='C':\n        if i>0:\n            dp[i][2]=dp[i-1][1]+dp[i-1][2]\n            dp[i][2]%=mod\n            dp[i][1]=dp[i-1][1]\n            dp[i][0]=dp[i-1][0]\n    elif s[i]=='B':\n        if i>0:\n            dp[i][2]=dp[i-1][2]\n            dp[i][1]=dp[i-1][0]+dp[i-1][1]\n            dp[i][1]%=mod\n            dp[i][0]=dp[i-1][0]\n    elif s[i]=='A':\n        if i>0:\n            dp[i][2]=dp[i-1][2]\n            dp[i][1]=dp[i-1][1]\n            dp[i][0]=dp[i-1][0]+1*cnt\n            dp[i][0]%=mod\n        else:\n            dp[0][0]=1\n\nprint((dp[-1][2]%mod))\n            \n", "S = input()\nN = len(S)\na,b,c,d = 0,0,0,1\nmod = 10**9+7\nfor x in reversed(S):\n  if x == \"?\":\n    a,b,c,d = 3*a+b, 3*b+c, 3*c+d, 3*d\n  elif x == \"A\":\n    a += b\n  elif x == \"B\":\n    b += c\n  elif x == \"C\":\n    c += d\n  a %= mod; b %= mod; c %= mod; d %= mod\nprint(a)", "s=input()\nn=len(s)\nmod=10**9+7\ndp=[[0]*4 for _ in range(n+1)]\ndp[n][3]=1\nfor i in reversed(list(range(n))):\n    for j in reversed(list(range(4))):\n        if j==3:\n            if s[i]==\"?\":\n                m=3\n            else:\n                m=1\n            dp[i][j]+=m*dp[i+1][j]\n        else:\n            if s[i]==\"?\":\n                m1=3\n            else:\n                m1=1\n            if j==0:\n                if s[i]==\"A\" or s[i]==\"?\":\n                    m2=1\n                else:\n                    m2=0\n            elif j==1:\n                if s[i]==\"B\" or s[i]==\"?\":\n                    m2=1\n                else:\n                    m2=0\n            else:\n                if s[i]==\"C\" or s[i]==\"?\":\n                    m2=1\n                else:\n                    m2=0\n            dp[i][j]+=m1*dp[i+1][j]+m2*dp[i+1][j+1]\n        dp[i][j]%=mod\nprint((dp[0][0]%mod))\n#print(dp)\n", "S = input()\nN = len(S)\nmod = 10 ** 9 + 7\ndp1 = [0 for _ in range(N+1)]\ndp2 = [0 for _ in range(N+1)]\ndp3 = [0 for _ in range(N+1)]\ndp4 = [0 for _ in range(N+1)]\ndp1[0] = 1\n\nfor i in range(N):\n    if S[i] == '?':\n        dp1[i+1] += 3 * dp1[i]\n        dp2[i+1] += 3 * dp2[i] + dp1[i]\n        dp3[i+1] += 3 * dp3[i] + dp2[i]\n        dp4[i+1] += 3 * dp4[i] + dp3[i]\n    else:\n        dp1[i+1] += dp1[i]\n        dp2[i+1] += dp2[i]\n        dp3[i+1] += dp3[i]\n        dp4[i+1] += dp4[i]\n    if S[i] == 'A':\n        dp2[i+1] += dp1[i]\n    if S[i] == 'B':\n        dp3[i+1] += dp2[i]\n    if S[i] == 'C':\n        dp4[i+1] += dp3[i]\n    dp1[i+1] %= mod\n    dp2[i+1] %= mod\n    dp3[i+1] %= mod\n    dp4[i+1] %= mod\n\nprint(dp4[N])", "S = input()\nmod = 10 ** 9 + 7\n\na, ab, abc, n = 0, 0, 0, 1\nfor s in S:\n    if s == \"A\":\n        a += n\n        a %= mod\n    elif s == \"B\":\n        ab += a\n        ab %= mod\n    elif s == \"C\":\n        abc += ab\n        abc %= mod\n    else:\n        a, ab, abc, n = 3 * a + n, 3 * ab + a, 3 * abc + ab, 3 * n\n        a %= mod\n        ab %= mod\n        abc %= mod\n        n %= mod\n\nprint(abc)", "def modinv(a,m):\n    return pow(a,m-2,m)\n\nimport copy\n\nS = input()\nN = len(S)\ndp = [[[0,0], [0,0,0], [0,0,0,0]] for i in range(N+1)]\nmod = 10**9 + 7\n\nfor i in range(N):\n    dp[i+1] = copy.deepcopy(dp[i])\n    if S[i] == 'A':\n        dp[i+1][0][0] += 1\n\n    elif S[i] == 'B':\n        for j in range(2):\n            dp[i+1][1][j] = (dp[i+1][1][j] + dp[i][0][j])%mod\n\n    elif S[i] == 'C':\n        for j in range(3):\n            dp[i+1][2][j] = (dp[i+1][2][j] + dp[i][1][j])%mod\n\n    else:\n        dp[i+1][0][1] += 1\n        for j in range(2):\n            dp[i+1][1][j+1] = (dp[i+1][1][j+1] + dp[i][0][j])%mod\n        for j in range(3):\n            dp[i+1][2][j+1] = (dp[i+1][2][j+1] + dp[i][1][j])%mod\n\nQ = S.count('?')\n\ninv3 = modinv(3,mod)\ninv9 = inv3*inv3%mod\ninv27 = inv9*inv3%mod\nthreeQ = pow(3,Q,mod)\n\nans = threeQ * (dp[N][2][0] + dp[N][2][1]*inv3 + dp[N][2][2]*inv9 + dp[N][2][3]*inv27) % mod\nprint(ans)", "S=input()\nMOD=pow(10,9)+7\ndp=[0]*4\ndp[0]=1\nfor s in S:\n  if s=='A':\n    dp[1]+=dp[0]\n  elif s=='B':\n    dp[2]+=dp[1]\n  elif s=='C':\n    dp[3]+=dp[2]\n  else:\n    tmp3=dp[2]\n    tmp2=dp[1]\n    tmp1=dp[0]\n    dp[3]*=3\n    dp[3]+=tmp3\n    dp[2]*=3\n    dp[2]+=tmp2\n    dp[1]*=3\n    dp[1]+=tmp1\n    dp[0]*=3\n  dp[3]%=MOD\n  dp[2]%=MOD\n  dp[1]%=MOD\n  dp[0]%=MOD\nprint(dp[3])", "S = input()\nMOD = 10**9 + 7\n\nA = 0\nAB = 0\nABC = 0\nprd = 1\n\nfor s in S:\n    if s == 'A':\n        A += prd\n    elif s == 'B':\n        AB += A\n    elif s == 'C':\n        ABC += AB\n    else:\n        a = A * 3 + prd\n        ab = AB * 3 + A\n        abc = ABC * 3 + AB\n        A, AB, ABC = a, ab, abc\n        prd *= 3\n    A %= MOD\n    AB %= MOD\n    ABC %= MOD\n    prd %= MOD\n\nprint(ABC)\n", "S = input()\nN = len(S)\ndp = [[0 for _ in range(4)] for _ in range(N+1)]\ndp[0][0] = 1\nMOD = 10 ** 9 + 7\n\nfor i in range(N):\n    if S[i] == 'A':\n        dp[i+1][0] = dp[i][0] % MOD\n        dp[i+1][1] = (dp[i][0] + dp[i][1]) % MOD\n        dp[i+1][2] = dp[i][2] % MOD\n        dp[i+1][3] = dp[i][3] % MOD\n     \n    if S[i] == 'B':\n        dp[i+1][0] = dp[i][0] % MOD\n        dp[i+1][1] = dp[i][1] % MOD\n        dp[i+1][2] = (dp[i][1] + dp[i][2]) % MOD\n        dp[i+1][3] = dp[i][3] % MOD\n    \n    if S[i] == 'C':\n        dp[i+1][0] = dp[i][0] % MOD\n        dp[i+1][1] = dp[i][1] % MOD\n        dp[i+1][2] = dp[i][2] % MOD\n        dp[i+1][3] = (dp[i][2] + dp[i][3]) % MOD\n    \n    if S[i] == '?':\n        dp[i+1][0] = 3 * dp[i][0] % MOD\n        dp[i+1][1] = (dp[i][0] + 3 * dp[i][1]) % MOD\n        dp[i+1][2] = (dp[i][1] + 3 * dp[i][2]) % MOD\n        dp[i+1][3] = (dp[i][2] + 3 * dp[i][3]) % MOD\n\nprint(dp[N][3] % MOD)", "from collections import Counter\ns = list(input())\nn = len(s)\nc = Counter(s)\nmod = 10**9+7\n\n\nleft_a  = 0\nleft_b  = 0\nleft_c  = 0\nleft_q  = 0\nright_a = c['A']\nright_b = c['B']\nright_c = c['C']\nright_q = c['?']\n\ndef add_ans():\n    lhs = left_a * pow(3, left_q, mod) + left_q*pow(3, left_q-1, mod)\n    rhs = right_c * pow(3, right_q, mod) + right_q*pow(3, right_q-1, mod)\n    return  (lhs * rhs)%mod\n\nans = 0\nfor i in range(n):\n    if s[i] == 'A':\n        left_a  += 1\n    if s[i] == 'B':\n        ans = (ans+ add_ans())%mod\n    if s[i] == 'C':\n        right_c -= 1\n    if s[i] == '?':\n        right_q -= 1\n        ans = (ans+ add_ans())%mod\n        left_q  += 1\nprint(ans)\n\n", "mod=10**9+7\ns=input()\nn=len(s)\ndp=[[0]*4 for _ in range(n+1)]\ndp[0][0]=1\nfor i in range(1,n+1):\n    dp[i][0]=dp[i-1][0]*((s[i-1]==\"?\")*2+1)\n    dp[i][1]=dp[i-1][1]*((s[i-1]==\"?\")*2+1)\n    dp[i][2]=dp[i-1][2]*((s[i-1]==\"?\")*2+1)\n    dp[i][3]=dp[i-1][3]*((s[i-1]==\"?\")*2+1)\n    if s[i-1]==\"A\" or s[i-1]==\"?\":\n        dp[i][1]+=dp[i-1][0]\n    if s[i-1]==\"B\" or s[i-1]==\"?\":\n        dp[i][2]+=dp[i-1][1]\n    if s[i-1]==\"C\" or s[i-1]==\"?\":\n        dp[i][3]+=dp[i-1][2]\n    dp[i][0]%=mod\n    dp[i][1]%=mod\n    dp[i][2]%=mod\n    dp[i][3]%=mod\nprint(dp[n][3])", "def main():\n    MOD = 10 ** 9 + 7\n\n    s = input()\n    n = len(s)\n\n    dp = [[0] * 4 for _ in range(n + 1)]\n    dp[0][0] = 1\n\n    for i, c in enumerate(s, start=1):\n        for j in range(4):\n            dp[i][j] = dp[i - 1][j]\n        if c == 'A':\n            dp[i][1] += dp[i - 1][0]\n        elif c == 'B':\n            dp[i][2] += dp[i - 1][1]\n        elif c == 'C':\n            dp[i][3] += dp[i - 1][2]\n        else:\n            for j in range(1, 4):\n                dp[i][j] += dp[i - 1][j - 1]\n            for j in range(4):\n                dp[i][j] += dp[i - 1][j] * 2\n        for j in range(4):\n            dp[i][j] %= MOD\n\n    print((dp[n][3]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s=input()\nl=len(s)\n\ndp=[4*[0]for _ in range(l+1)]\ndp[0][0]=1\n\nfor i in range(1,l+1):\n  si = s[i-1]\n  if si == \"?\":\n    dp[i][0] = dp[i-1][0] * 3\n    dp[i][1] = dp[i-1][1] * 3\n    dp[i][2] = dp[i-1][2] * 3\n    dp[i][3] = dp[i-1][3] * 3\n  else:\n    dp[i][0] = dp[i-1][0]\n    dp[i][1] = dp[i-1][1]\n    dp[i][2] = dp[i-1][2]\n    dp[i][3] = dp[i-1][3]\n    \n  if si == \"A\":\n    dp[i][1] = dp[i-1][0] + dp[i][1]\n  elif si == \"B\":\n    dp[i][2] = dp[i-1][1] + dp[i][2]\n  elif si == \"C\":\n    dp[i][3] = dp[i-1][2] + dp[i][3]\n  else:\n    dp[i][1] = dp[i-1][0] + dp[i][1]\n    dp[i][2] = dp[i-1][1] + dp[i][2]\n    dp[i][3] = dp[i-1][2] + dp[i][3]\n  \n  for j in range(4):\n    dp[i][j] = dp[i][j] % 1000000007\n  \nprint(int(dp[-1][-1]))", "s = input()\nn = len(s)\nMOD = 10 ** 9 + 7\ndp = [[0] * 4 for _ in range(n + 1)]\ndp[0][0] = 1\n\nfor i, x in enumerate(s):\n    if x == 'A' or x == '?':\n        dp[i + 1][0] += dp[i][0]\n        dp[i + 1][1] += dp[i][1]\n        dp[i + 1][2] += dp[i][2]\n        dp[i + 1][3] += dp[i][3]\n        dp[i + 1][1] += dp[i][0]\n    if x == 'B' or x == '?':\n        dp[i + 1][0] += dp[i][0]\n        dp[i + 1][1] += dp[i][1]\n        dp[i + 1][2] += dp[i][2]\n        dp[i + 1][3] += dp[i][3]\n        dp[i + 1][2] += dp[i][1]\n    if x == 'C' or x == '?':\n        dp[i + 1][0] += dp[i][0]\n        dp[i + 1][1] += dp[i][1]\n        dp[i + 1][2] += dp[i][2]\n        dp[i + 1][3] += dp[i][3]\n        dp[i + 1][3] += dp[i][2]\n\n    for j in range(4):\n        dp[i + 1][j] %= MOD\n\nprint((dp[n][3]))\n", "mod=10**9+7\ns=list(input())\ns=['-']+s\nl=len(s)\ndp=[[0 for j in range(4)] for i in range(l)]\ndp[0][0]=1\nfor i in range(1,l):\n    for j in range(4):\n        dp[i][j]=dp[i-1][j]\n        if s[i]=='?':\n            dp[i][j]*=3;\n        if j and (s[i]=='?' or 'ABC'[j-1]==s[i]):\n            dp[i][j]+=dp[i-1][j-1]\n        dp[i][j]%=mod\nprint(dp[-1][3])", "S=list(input())\nn=len(S)\nmod=10**9+7\ndp=[[0]*4 for i in range(n+1)]\ndp[0][0]=1\nfor i in range(1,n+1):\n  if S[i-1]==\"A\":\n    dp[i][0]=dp[i-1][0]%mod\n    dp[i][1]=(dp[i-1][0]+dp[i-1][1])%mod\n    dp[i][2]=dp[i-1][2]%mod\n    dp[i][3]=dp[i-1][3]%mod\n  elif S[i-1]==\"B\":\n    dp[i][0]=dp[i-1][0]%mod\n    dp[i][1]=dp[i-1][1]%mod\n    dp[i][2]=(dp[i-1][1]+dp[i-1][2])%mod\n    dp[i][3]=dp[i-1][3]%mod\n  elif S[i-1]==\"C\":\n    dp[i][0]=dp[i-1][0]%mod\n    dp[i][1]=dp[i-1][1]%mod\n    dp[i][2]=dp[i-1][2]%mod\n    dp[i][3]=(dp[i-1][2]+dp[i-1][3])%mod\n  else:\n    dp[i][0]=dp[i-1][0]*3%mod\n    dp[i][1]=(dp[i-1][0]+dp[i-1][1]*3)%mod\n    dp[i][2]=(dp[i-1][1]+dp[i-1][2]*3)%mod\n    dp[i][3]=(dp[i-1][2]+dp[i-1][3]*3)%mod\nprint(dp[n][3])", "def main():\n    MOD = 10**9 + 7\n    S = input()\n    N = len(S)\n    CHARS = ['A', 'B', 'C']\n    dp = [[0 for _ in range(4)] for _ in range(N + 1)]\n    dp[N][3] = 1\n    for i in range(N - 1, -1, -1):\n        a = 3 if S[i] == '?' else 1\n        dp[i][3] = a * dp[i + 1][3]\n        dp[i][3] %= MOD\n    for i in range(N - 1, -1, -1):\n        a = 3 if S[i] == '?' else 1\n        ch = S[i]\n        for j in range(3):\n            b = 1 if ch in ['?', CHARS[j]] else 0\n            dp[i][j] = a * dp[i + 1][j] + b * dp[i + 1][j + 1]\n            dp[i][j] %= MOD\n    print(dp[0][0])\n\n\ndef __starting_point():\n    main()\n__starting_point()", "s = input()\nn = len(s)\n\n#i\u3088\u308aleft\u306eA\u3001right\u306eC, left\u306e\uff1f, right\u306e?\nla = [0 for _ in range(n)]\nrc = [0 for _ in range(n)]\nlq = [0 for _ in range(n)]\nrq = [0 for _ in range(n)]\n\nfor i in range(n-1):\n    if s[i] == 'A':\n        la[i+1] = 1\n    if s[i] == '?':\n        lq[i+1] = 1\n    if s[i+1] == '?':\n        rq[i] = 1\n    if s[i+1] == 'C':\n        rc[i] = 1\n\nfor i in range(n-1):\n    la[i+1] += la[i]\n    lq[i+1] += lq[i]\n\nfor i in range(n-1, 0, -1):\n    rc[i-1] += rc[i]\n    rq[i-1] += rq[i]\n\nans = 0\nmod = 10 ** 9 + 7\n\nfor i in range(n):\n    if s[i] in ['B', '?']:\n        l = la[i] * pow(3, lq[i], mod)\n        if lq[i] > 0:\n            l += lq[i] * pow(3, lq[i]-1, mod)\n            l %= mod\n\n        r = rc[i] * pow(3, rq[i], mod)\n        if rq[i] > 0:\n            r += rq[i] * pow(3, rq[i]-1, mod)\n            r %= mod\n        ans += l * r\n        ans %= mod\n\n\nprint(ans)", "MOD = 10**9 + 7\np3 = [1]\n\nS = input()\nn = len(S)\n\na = []\nc = []\nq = []\nfor i in range(n):\n  p3.append(int(p3[i] * 3 % MOD))\n  if S[i] == 'A':\n    a.append(1)\n  else:\n    a.append(0)\n  if S[i] == 'C':\n    c.append(1)\n  else:\n    c.append(0)\n  if S[i] == '?':\n    q.append(1)\n  else:\n    q.append(0)\n\nfor i in range(1, n):\n  a[i] += a[i - 1]\n  c[i] += c[i - 1]\n  q[i] += q[i - 1]\n\ncount = 0\nfor i in range(1, n - 1):\n  if S[i] == 'B' or S[i] == '?':\n    bq = 0 if S[i] == 'B' else 1\n    count += a[i - 1] * (c[n - 1] - c[i]) * p3[q[n - 1] - bq]\n    count += q[i - 1] * (c[n - 1] - c[i]) * p3[q[n - 1] - 1 - bq]\n    count += a[i - 1] * (q[n - 1] - q[i]) * p3[q[n - 1] - 1 - bq]\n    count += q[i - 1] * (q[n - 1] - q[i]) * p3[q[n - 1] - 2 - bq]\n\nprint((int(count % MOD)))\n", "import numpy as np\n\nMOD = 10 ** 9 + 7\n\nS = input()\n\nn = len(S)\ndp = np.zeros((n+1, 4), np.int64)\ndp[0, 0] = 1\nfor i, c in enumerate(S):\n    if c == 'A' or c == '?':\n        dp[i+1] += dp[i]\n        dp[i+1, 1] += dp[i, 0]\n    if c == 'B' or c == '?':\n        dp[i+1] += dp[i]\n        dp[i+1, 2] += dp[i, 1]\n    if c == 'C' or c == '?':\n        dp[i+1] += dp[i]\n        dp[i+1, 3] += dp[i, 2]\n    dp[i+1] %= MOD\n\nprint((dp[n, 3]))\n\n", "import sys\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\n \ndef main():\n    string = input().strip()\n    n = len(string)\n    dp = [[0, 0, 0, 0] for _ in range(n + 1)]\n    dp[0][0] = 1\n    for i, s in enumerate(string):\n        if s == \"A\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1] + dp[i][0]\n            dp[i + 1][2] = dp[i][2]\n            dp[i + 1][3] = dp[i][3]\n        elif s == \"B\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1]\n            dp[i + 1][2] = dp[i][2] + dp[i][1]\n            dp[i + 1][3] = dp[i][3]\n        elif s == \"C\":\n            dp[i + 1][0] = dp[i][0]\n            dp[i + 1][1] = dp[i][1]\n            dp[i + 1][2] = dp[i][2]\n            dp[i + 1][3] = dp[i][3] + dp[i][2]\n        else:\n            dp[i + 1][0] = 3 * dp[i][0]\n            dp[i + 1][1] = 3 * dp[i][1] + dp[i][0]\n            dp[i + 1][2] = 3 * dp[i][2] + dp[i][1]\n            dp[i + 1][3] = 3 * dp[i][3] + dp[i][2]\n        for j in range(4):\n            dp[i + 1][j] %= MOD\n    print(dp[-1][-1] % MOD)\n    \nmain()", "S = input()\nans = 0\nMOD = 10 ** 9 + 7\nla = 0\nlp = 0\nrc = 0\nrp = 0\nfor c in S:\n    if c == 'C':\n        rc += 1\n    if c == '?':\n        rp += 1\nfor c in S:\n    if c == 'C':\n        rc -= 1\n    if c == '?':\n        rp -= 1\n    if c == '?' or c == 'B':\n        if lp == 0:\n            l = la * pow(3, lp, MOD)\n        else:\n            l = la * pow(3, lp, MOD) + lp * pow(3, lp-1, MOD)\n        if rp == 0:\n            r = rc * pow(3, rp, MOD)\n        else:\n            r = rc * pow(3, rp, MOD) + rp * pow(3, rp-1, MOD)\n        ans += l*r\n        ans %= MOD\n    if c == 'A':\n        la += 1\n    if c == '?':\n        lp += 1\nprint(ans)\n", "s = input()\n\nMOD = 10**9 + 7\n\na, ab, abc, q = 0, 0, 0, 1\n\nfor x in s:\n    # A\u306a\u3089\u72b6\u614b\u6570\u3092\u8db3\u3059\n    if x == \"A\":\n        a += q\n        a %= MOD\n    # B\u306a\u3089\u3053\u308c\u307e\u3067A\u3060\u3063\u305f\u72b6\u614b\u6570\u3092\u8db3\u3059\n    elif x == \"B\":\n        ab += a\n        ab %= MOD\n    # C\u306a\u3089AB\u2192ABC\u304c\u5b8c\u6210\u3059\u308b\n    elif x == \"C\":\n        abc += ab\n        abc %= MOD\n    # ?\u306a\u3089\u8272\u3005\u5909\u5316\u3059\u308b\n    else:\n        # \u72b6\u614b\u6570\u304c3\u500d\u306b\u306a\u308a\u3001?\u304cC, B\u306e\u30b1\u30fc\u30b9\u3082\u8db3\u3055\u308c\u308b\n        abc = (abc * 3 + ab) % MOD\n        ab = (ab * 3 + a) % MOD\n        a = (a * 3 + q) % MOD\n        q = q * 3 % MOD\n\nprint(abc % MOD)", "S = input()\n\nMOD = 10 ** 9 + 7\ndp, dp_a, dp_ab, dp_abc = 1, 0, 0, 0\n\nfor s in S:\n    if s == 'A':\n        dp_a += dp\n    elif s == 'B':\n        dp_ab += dp_a\n    elif s == 'C':\n        dp_abc += dp_ab\n    else:\n        dp, dp_a, dp_ab, dp_abc = dp * 3, dp_a * 3 + dp, dp_ab * 3 + dp_a, dp_abc * 3 + dp_ab\n    dp %= MOD\n    dp_a %= MOD\n    dp_ab %= MOD\n    dp_abc %= MOD\nprint(dp_abc)\n", "S = input()\nMOD = 10**9 + 7\ndp = [[0, 0, 0] for i in range(len(S)+1)]\n\nbase = 1\nfor i, s in enumerate(S, 1):\n  dp[i][0] = dp[i-1][0]\n  dp[i][1] = dp[i-1][1]\n  dp[i][2] = dp[i-1][2]\n  if s == 'A':\n    dp[i][0] += base\n    dp[i][0] %= MOD\n  elif s == 'B':\n    dp[i][1] += dp[i-1][0]\n    dp[i][1] %= MOD\n  elif s == 'C':\n    dp[i][2] += dp[i-1][1]\n    dp[i][2] %= MOD\n  else: # s == '?'\n    dp[i][0] += 2*dp[i-1][0] + base\n    dp[i][1] += 2*dp[i-1][1] + dp[i-1][0]\n    dp[i][2] += 2*dp[i-1][2] + dp[i-1][1]\n    dp[i][0] %= MOD\n    dp[i][1] %= MOD\n    dp[i][2] %= MOD\n    base *= 3\n    base %= MOD\n\nprint(dp[-1][2])", "MOD = pow(10, 9) + 7\ns = input()\nn = len(s)\ndp = [[0 for _ in range(4)] for _ in range(n + 1)]\n\ndp[0][0] = 1\nfor i in range(n):\n    dp[i+1][0] = dp[i][0]\n    dp[i+1][1] = dp[i][1]\n    dp[i+1][2] = dp[i][2]\n    dp[i+1][3] = dp[i][3]\n    if s[i] == 'A':\n        dp[i+1][1] += dp[i][0]\n    elif s[i] == 'B':\n        dp[i+1][2] += dp[i][1]\n    elif s[i] == 'C':\n        dp[i+1][3] += dp[i][2]\n    else:\n        dp[i+1][0] = dp[i][0] * 3\n        dp[i+1][1] = dp[i][1] * 3\n        dp[i+1][2] = dp[i][2] * 3\n        dp[i+1][3] = dp[i][3] * 3\n        dp[i+1][1] += dp[i][0]\n        dp[i+1][2] += dp[i][1]\n        dp[i+1][3] += dp[i][2]\n    dp[i+1][0] %= MOD\n    dp[i+1][1] %= MOD\n    dp[i+1][2] %= MOD\n    dp[i+1][3] %= MOD\n\nprint((dp[n][3]))\n", "S = input()\n\nmod = 10**9+7\nA = 0\nAB = 0\nABC = 0\ncnt = 0\nfor i in range(len(S)):\n    if S[i] == \"A\":\n        A += pow(3, cnt, mod)\n        A %= mod\n    elif S[i] == \"B\":\n        AB += A\n        AB %= mod\n    elif S[i] == \"C\":\n        ABC += AB\n        ABC %= mod\n    else:\n        ABC = (3*ABC + AB) % mod\n        AB = (3*AB + A) % mod\n        A = (3*A + pow(3, cnt, mod)) % mod\n        cnt += 1\n        \n        \nprint(ABC)", "S=str(input())\nN=len(S)\ndp=[[0 for _ in range(4)] for _ in range(N+1)]\ndp[0][0]=1\nmod=10**9+7\nfor i in range(N):\n  if S[i]=='A':\n    dp[i+1][0]+=dp[i][0]%mod\n    dp[i+1][1]+=dp[i][1]%mod+dp[i][0]%mod\n    dp[i+1][2]+=dp[i][2]%mod\n    dp[i+1][3]+=dp[i][3]%mod\n  if S[i]=='B':\n    dp[i+1][0]+=dp[i][0]%mod\n    dp[i+1][1]+=dp[i][1]%mod\n    dp[i+1][2]+=dp[i][2]%mod+dp[i][1]%mod\n    dp[i+1][3]+=dp[i][3]%mod\n  if S[i]=='C':\n    dp[i+1][0]+=dp[i][0]%mod\n    dp[i+1][1]+=dp[i][1]%mod\n    dp[i+1][2]+=dp[i][2]%mod\n    dp[i+1][3]+=dp[i][3]%mod+dp[i][2]%mod\n  if S[i]=='?':\n    dp[i+1][0]+=3*dp[i][0]%mod\n    dp[i+1][1]+=(3*dp[i][1])%mod+dp[i][0]%mod\n    dp[i+1][2]+=(3*dp[i][2])%mod+dp[i][1]%mod\n    dp[i+1][3]+=(3*dp[i][3])%mod+dp[i][2]%mod\nprint(dp[N][3]%mod)", "S = list(input())\nn = len(S)\nmod = 10**9 + 7\n\ndpa = [0]*(10**5+10)\ndpc = [0]*(10**5+10)\n\nhatena_count = 0\npow3 = [1]*(10**5+10)\n\nfor i in range(1, 10**5+10):\n    pow3[i] = pow3[i-1]*3 % mod\n\nfor i in range(n):\n    if S[i] == \"A\":\n        dpa[i+1] = (dpa[i] + pow3[hatena_count]) % mod\n    elif S[i] == \"?\":\n        dpa[i+1] = (3*dpa[i] + pow3[hatena_count]) % mod\n        hatena_count += 1\n    else:\n        dpa[i+1] = dpa[i]\n\nS.reverse()\n\nhatena_count = 0\nfor i in range(n):\n    if S[i] == \"C\":\n        dpc[i+1] = (dpc[i] + pow3[hatena_count]) % mod\n    elif S[i] == \"?\":\n        dpc[i+1] = (3*dpc[i] + pow3[hatena_count]) % mod\n        hatena_count += 1\n    else:\n        dpc[i+1] = dpc[i]\n\nans = 0\nfor i in range(1, n - 1):\n    if S[i] == \"B\" or S[i] == \"?\":\n        ans += dpa[n-1-i]*dpc[i]\n        ans %= mod\nprint(ans)\n\n\n", "\nmod = 10 ** 9 + 7\n\ndef main():\n    s = input()\n\n    n = len(s)\n\n    dp = [[0 for _ in range(4)] for _ in range(n+1)]\n    dp[0][0] = 1\n    for i in range(n):\n        if s[i] in ('A', '?'):\n            dp[i+1][0] = (dp[i+1][0] + dp[i][0]) % mod\n            dp[i+1][1] = (dp[i+1][1] + dp[i][1]) % mod\n            dp[i+1][2] = (dp[i+1][2] + dp[i][2]) % mod\n            dp[i+1][3] = (dp[i+1][3] + dp[i][3]) % mod\n            dp[i+1][1] = (dp[i+1][1] + dp[i][0]) % mod\n        if s[i] in ('B', '?'):\n            dp[i+1][0] = (dp[i+1][0] + dp[i][0]) % mod\n            dp[i+1][1] = (dp[i+1][1] + dp[i][1]) % mod\n            dp[i+1][2] = (dp[i+1][2] + dp[i][2]) % mod\n            dp[i+1][3] = (dp[i+1][3] + dp[i][3]) % mod\n            dp[i+1][2] = (dp[i+1][2] + dp[i][1]) % mod\n        if s[i] in ('C', '?'):\n            dp[i+1][0] = (dp[i+1][0] + dp[i][0]) % mod\n            dp[i+1][1] = (dp[i+1][1] + dp[i][1]) % mod\n            dp[i+1][2] = (dp[i+1][2] + dp[i][2]) % mod\n            dp[i+1][3] = (dp[i+1][3] + dp[i][3]) % mod\n            dp[i+1][3] = (dp[i+1][3] + dp[i][2]) % mod\n\n    print((dp[n][3]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "MOD=10**9+7\nS=input()\nN=len(S)\nAcum,Ccum,Qcum=[0]*(N+1),[0]*(N+1),[0]*(N+1)\n\nfor i in range(N):\n    Acum[i+1]=Acum[i]+1 if S[i]=='A' else Acum[i]\n    Ccum[i+1]=Ccum[i]+1 if S[i]=='C' else Ccum[i]\n    Qcum[i+1]=Qcum[i]+1 if S[i]=='?' else Qcum[i]\nans=0\nfor i in range(N):\n    if S[i]!='B' and S[i]!='?':\n        continue\n    a,c,l,r=Acum[i],Ccum[N]-Ccum[i+1],Qcum[i],Qcum[N]-Qcum[i+1]\n    res=pow(3,l+r-2,MOD)*(3*a+l)%MOD*(3*c+r)%MOD\n    ans=(ans+res)%MOD\nprint(ans)", "S=input()\nA=0 #A\u306e\u6570\nB=0 #AB\u306e\u6570\nC=0 #ABC\u306e\u6570\nn=1 #\u901a\u308a\u6570\nmod=10**9+7\nfor s in S:\n    if s==\"?\":\n        C=3*C+B\n        B=3*B+A\n        A=3*A+n\n        n*=3\n    elif s==\"A\":\n        A+=n\n    elif s==\"B\":\n        B+=A\n    else:\n        C+=B\n    A%=mod\n    B%=mod\n    C%=mod\n    n%=mod\nprint(C)", "mod = 10**9+7\nS = input()\ns = len(S)\ndp = [[0 for i in range(4)]for j in range(s+1)]\nmod = 10**9+7\n \ndp[0][0] = 1\n \nfor j in range(4):\n    for i in range(s):\n        dp[i+1][j] = dp[i][j]%mod\n        if S[i] == \"?\":\n            dp[i+1][j] = dp[i][j]*3%mod\n            if j > 0:\n                dp[i+1][j] += dp[i][j-1]%mod\n        else:\n            if \"ABC\".index(S[i])+1 == j:\n                dp[i+1][j] += dp[i][j-1]%mod\nprint(dp[s][3]%mod)", "S=input()\npr=10**9+7\na1,a2,a3=0,0,0\nc=0\nfor i in S:\n    if i==\"A\":\n        a1=(a1+pow(3,c,pr))%pr\n    elif i==\"B\":\n        a2=(a2+a1)%pr\n    elif i==\"C\":\n        a3=(a3+a2)%pr\n    else:\n        a1,a2,a3=(3*a1+pow(3,c,pr))%pr,(3*a2+a1)%pr,(3*a3+a2)%pr\n        c+=1\nprint(a3)", "# D - We Love ABC\n\nS = list(str(input()))\nMOD = 10**9 + 7\na = 0\nab = 0\nabc = 0\npat = 1\nfor s in S:\n    if s == 'A':\n        a = (a + pat) % MOD\n    elif s == 'B':\n        ab = (ab + a) % MOD\n    elif s == 'C':\n        abc = (abc + ab) % MOD\n    else: # s == '?'\n        tmpa = a\n        tmpab = ab\n        a = (3*a + pat) % MOD\n        ab = (3*ab + tmpa) % MOD\n        abc = (3*abc + tmpab) % MOD\n        pat = (pat*3) % MOD\n\nprint(abc)", "data = input()\nMOD = 10**9 + 7\nSLen = len(data)\ntargets = \"ABC\"\narray = [[0 for i in range(SLen + 1)] for _ in range(4)]\narray[0][0] = 1\nfor i in range(SLen):\n    for j in range(4):\n        if data[i] == '?':\n            if j < 3:\n                array[j + 1][i + 1] = (array[j + 1][i + 1] + array[j][i]) % MOD\n            array[j][i + 1] = (array[j][i + 1] + array[j][i] * 3) % MOD\n        else:\n            if j < 3 and data[i] == targets[j]:\n                array[j + 1][i + 1] = (array[j + 1][i + 1] + array[j][i]) % MOD\n            array[j][i + 1] = (array[j][i + 1] + array[j][i]) % MOD\n\nprint((array[3][SLen]))\n", "S = input()\nMOD = 10**9+7\nA = 0\nAB = 0\nABC = 0\ncnt = 1\nfor c in S:\n  if c=='A':\n    A += cnt\n    A %= MOD\n  elif c=='B':\n    AB += A\n    AB %= MOD\n  elif c=='C':\n    ABC += AB\n    ABC %= MOD\n  else:\n    nA = 3*A+cnt\n    nAB = 3*AB+A\n    nABC = 3*ABC+AB\n    cnt *= 3\n    A,AB,ABC = nA%MOD,nAB%MOD,nABC%MOD\n    cnt %= MOD\nprint(ABC)", "MOD = 10**9+7\n\nS = input()\nN = len(S)\ndp = [[0]*4 for i in range(N+1)]\ndp[0][0] = 1\nfor i in range(N):\n    s = S[i]\n    for j in range(4):\n        if s == \"?\":\n            dp[i+1][j] += dp[i][j]*3%MOD\n        else:\n            dp[i+1][j] += dp[i][j]%MOD\n        if j < 3 and (s == \"?\" or s == \"ABC\"[j]):\n            dp[i+1][j+1] += dp[i][j]%MOD\nprint((dp[N][3]%MOD))\n", "S=input()\nmod=10**9+7\nLa,Lq,Rc,Rq=0,0,S.count(\"C\"),S.count(\"?\")\nans=0\nf=lambda x,y:pow(x,y,mod) if y>=0 else 0\nfor s in S:\n\tRc-=s==\"C\";Rq-=s==\"?\"\n\tif s==\"B\" or s==\"?\":\n\t\tans+=(La*f(3,Lq)+Lq*f(3,Lq-1))*(Rc*f(3,Rq)+Rq*f(3,Rq-1))\n\t\tans%=mod\n\tLa+=s==\"A\";Lq+=s==\"?\"\nprint(ans)", "#we love abc\ns=input()\nmod=10**9+7\ndpa=[[0,0] for i in range(len(s)+1)]\ndpc=[[0,0] for i in range(len(s)+1)]\npower3=[1 for i in range(10**5+100)]\nfor i in range(10**5+3):\n    power3[i+1]=(power3[i]*3)%mod\nfor i in range(len(s)):\n    if s[i]==\"A\":\n        dpa[i+1][0]=(dpa[i][0]+power3[dpa[i][1]])%mod\n        dpa[i+1][1]=dpa[i][1]  \n    elif s[i]==\"?\":\n        dpa[i+1][0]=(3*dpa[i][0]+power3[dpa[i][1]])%mod\n        dpa[i+1][1]=dpa[i][1]+1   \n    else:\n        dpa[i+1]=dpa[i]\nfor i in range(len(s)):\n    if s[len(s)-1-i]==\"C\":\n        dpc[i+1][0]=(dpc[i][0]+power3[dpc[i][1]])%mod\n        dpc[i+1][1]=dpc[i][1]  \n    elif s[len(s)-1-i]==\"?\":\n        dpc[i+1][0]=(3*dpc[i][0]+power3[dpc[i][1]])%mod\n        dpc[i+1][1]=dpc[i][1]+1   \n    else:\n        dpc[i+1]=dpc[i]    \nans=0\nfor i in range(1,len(s)-1):\n    if s[i]==\"B\" or s[i]==\"?\":\n        ans+=dpa[i][0]*dpc[len(s)-1-i][0]\n        ans=ans%mod\nprint(ans)", "MOD=10**9+7\nS=input()\nN=len(S)\n\ndp=[[0]*4 for i in range(N+1)]\n\ndp[0][0]=1\n\nfor i in range(N):\n    dp[i+1][0]=dp[i][0] if (S[i]!='?') else dp[i][0]*3%MOD\n    dp[i+1][1]=dp[i][1] if (S[i]!='A' and S[i]!='?') else (dp[i][1]+dp[i][0])%MOD if (S[i]=='A') else (dp[i][0]+dp[i][1]*3)%MOD\n    dp[i+1][2]=dp[i][2] if (S[i]!='B' and S[i]!='?') else (dp[i][2]+dp[i][1])%MOD if (S[i]=='B') else (dp[i][1]+dp[i][2]*3)%MOD\n    dp[i+1][3]=dp[i][3] if (S[i]!='C' and S[i]!='?') else (dp[i][3]+dp[i][2])%MOD if (S[i]=='C') else (dp[i][2]+dp[i][3]*3)%MOD\n\nprint(dp[N][3])", "# dp[i][j] := s\u306ei\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304d\u306b\u3001ABC\u306ej\u6587\u5b57\u76ee\u307e\u3067\u3092\u90e8\u5206\u5217\u3068\u3057\u3066\u53d6\u308a\u51fa\u3059\u65b9\u6cd5\u306e\u6570\u3002\n\ns = input()\n\ndp = [[0 for _ in range(4)]for _ in range(len(s))]\nmod = 10 ** 9 + 7\n\npower_3 = 1\nfor idx, letter in enumerate(s):\n    dp[idx] = dp[idx-1].copy()\n\n    if letter == 'A':\n        dp[idx][1] += power_3\n    elif letter == 'B':\n        dp[idx][2] += dp[idx-1][1]\n    elif letter == 'C':\n        dp[idx][3] += dp[idx-1][2]\n    elif letter == '?':\n        dp[idx][1] *= 3\n        dp[idx][2] *= 3\n        dp[idx][3] *= 3\n        dp[idx][1] += power_3 # 3**(\u3053\u306e?\u3092\u542b\u307e\u306a\u3044\u3001\u4eca\u307e\u3067\u306e?\u306e\u500b\u6570)\u3060\u3051\u3001A\u306e\u624b\u524d\u306e\u5834\u5408\u304c\u8003\u3048\u3089\u308c\u308b\u3002\n        power_3 *= 3\n        power_3 %= mod\n        dp[idx][2] += dp[idx-1][1]\n        dp[idx][3] += dp[idx-1][2]\n        dp[idx][1] %= mod\n        dp[idx][2] %= mod\n        dp[idx][3] %= mod\n\n\nprint((dp[len(s)-1][3] % mod)) \n# print(dp)\n", "s = input()\nMOD = 10 ** 9 + 7\ndp = [1, 0, 0, 0]\n\nfor x in s:\n    emp, a, b, c = dp\n    if x == 'A':\n        dp[1] += emp\n    if x == 'B':\n        dp[2] += a\n    if x == 'C':\n        dp[3] += b\n    if x == '?':\n        dp = [v * 3 for v in dp]\n        dp[1] += emp\n        dp[2] += a\n        dp[3] += b\n\n    dp = [v % MOD for v in dp]\n\nprint(dp[3])", "# def C(n, r ,mod=10**9+7):\n#     if n-r<r: r=n-r\n#     if r == 0: return 1\n#     if r == 1: return n\n# \n#     numerator = [n - r + k + 1 for k in range(r)]\n#     denominator = [k + 1 for k in range(r)]\n# \n#     for p in range(2,r+1):\n#         pivot = denominator[p - 1]\n#         if pivot > 1:\n#             offset = (n - r) % p\n#             for k in range(p-1,r,p):\n#                 numerator[k - offset] /= pivot\n#                 denominator[k] /= pivot\n# \n#     result = 1\n#     for k in range(r):\n#         if numerator[k] > 1:\n#             result *= int(numerator[k]) %mod\n# \n#     return result % mod\n\nA=list(input())\nn=len(A)\nmod=10**9+7\nans=0\nnuma= A[0]==\"A\" \nnuma_= A[0]==\"?\"\nnumc=A[2:].count(\"C\")\nnumc_= A[2:].count(\"?\")\n\nfor i in range(1,n-1):\n    #print(numa,numa_,numc,numc_)\n    apro=cpro=0\n    if A[i]==\"B\" or A[i]==\"?\":\n        # for k in range(numa_+1):\n        #     apro+= (((C(numa_,k)*pow(2,numa_-k,mod))%mod)*(numa+k))%mod\n        # for k in range(numc_+1):\n        #     cpro+= (((C(numc_,k)*pow(2,numc_-k,mod))%mod)*(numc+k))%mod\n        #print(apro,cpro)\n        apro= ((3*numa+numa_)*pow(3,(numa_-1),mod))%mod\n        cpro= ((3*numc+numc_)*pow(3,(numc_-1),mod))%mod\n        ans+= (apro*cpro)%mod\n        ans%=mod\n    if A[i] == \"A\":\n        numa+=1\n    if A[i]==\"?\":\n        numa_+=1\n    if A[i+1] ==\"C\":\n        numc-=1\n    if A[i+1]==\"?\":\n        numc_-=1\nprint(ans)\n", "def main():\n    MOD = 10 ** 9 + 7\n\n    s = input()\n\n    x, a, b, c = 1, 0, 0, 0\n\n    for char in s:\n        if char == 'A':\n            a = (a + x) % MOD\n        elif char == 'B':\n            b = (b + a) % MOD\n        elif char == 'C':\n            c = (c + b) % MOD\n        else:\n            x, a, b, c = 3 * x % MOD, (3 * a + x) % MOD, (3 * b + a) % MOD, (3 * c + b) % MOD\n\n    print(c)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nS = sr()[::-1]\nMOD = 10 ** 9 + 7\nanswer = 0\ndp = [0, 0, 1] #C\u306e\u6570, BC\u6570, \u7dcf\u6570\nfor i in range(len(S)):\n    s = S[i]\n    if s == 'A':\n        answer += dp[1]\n    elif s == 'B':\n        dp[1] += dp[0]\n    elif s == 'C':\n        dp[0] += dp[2]\n    elif s == '?':\n        answer *= 3\n        answer += dp[1]\n        dp[1] *= 3\n        dp[1] += dp[0]\n        dp[0] *= 3\n        dp[0] += dp[2]\n        dp[2] *= 3\n    answer %= MOD\n    dp[0] %= MOD; dp[1] %= MOD; dp[2] %= MOD\nprint(answer)\n", "s = input()\nS = len(s)\n\n#i\u6587\u5b57\u76ee\u307e\u3067\u898b\u305f\u3068\u304dj\u6587\u5b57\u76ee\u307e\u3067\u78ba\u5b9a\u3057\u3066\u3044\u308b\u3068\u304d\u306e\u7d44\u307f\u5408\u308f\u305b\ndp = [[0 for i in range(4)]for j in range(S+1)]\nmod = 10**9+7\n\ndp[0][0] = 1\n\nfor j in range(4):\n    for i in range(S):\n        dp[i+1][j] = dp[i][j]%mod\n        if s[i] == \"?\":\n            dp[i+1][j] = dp[i][j]*3%mod\n            if j > 0:\n                dp[i+1][j] += dp[i][j-1]%mod\n        else:\n            if \"ABC\".index(s[i])+1 == j:\n                dp[i+1][j] += dp[i][j-1]%mod\n\nprint(dp[S][3]%mod)", "s = input()\nn = len(s)\nmod = 10**9+7\ndp = [[0]*4 for i in range(n+1)]\ndp[0][0] = 1\nfor i in range(n):\n  l = s[i]\n  for j in range(4):\n    if l == \"?\":\n      dp[i+1][j] = (dp[i][j]*3)%mod\n    else:\n      dp[i+1][j] = dp[i][j] % mod\n  if l == \"A\" or l == \"?\":\n    dp[i+1][1] += dp[i][0] % mod\n  if l == \"B\" or l == \"?\":\n    dp[i+1][2] += dp[i][1] % mod\n  if l == \"C\" or l == \"?\":\n    dp[i+1][3] += dp[i][2] % mod\nprint(dp[n][3]%mod)", "mod=10**9+7\ns=list(input())\ns=['-']+s\n#print(s)\nl=len(s)\ndp=[[0 for j in range(4)] for i in range(l)]\ndp[0][0]=1\nfor i in range(1,l):\n    for j in range(4):\n        dp[i][j]=dp[i-1][j]\n        if s[i]=='?':\n            dp[i][j]*=3;\n        if (j  > 0) and (s[i]=='?' or 'ABC'[j-1]==s[i]):\n            dp[i][j] += dp[i-1][j-1]\n        dp[i][j] %= mod\n        \nprint((dp[-1][3]))\n#print(dp)\n", "import sys\n#input = sys.stdin.buffer.readline\n\ndef main():\n    S = input()\n    l = len(S)\n    MOD = 10**9+7\n    dp = [[0 for _ in range(3)] for _ in range(2)]\n    cq = 1\n    for st in S:\n        if st == \"A\":\n            dp[1][0] = dp[0][0]+cq\n            dp[1][1] = dp[0][1]\n            dp[1][2] = dp[0][2]\n        elif st == \"B\":\n            dp[1][0] = dp[0][0]\n            dp[1][1] = dp[0][0]+dp[0][1]\n            dp[1][2] = dp[0][2]\n        elif st == \"C\":\n            dp[1][0] = dp[0][0]\n            dp[1][1] = dp[0][1]\n            dp[1][2] = dp[0][1]+dp[0][2]\n        else:\n            dp[1][0] = dp[0][0]*3+cq\n            dp[1][1] = dp[0][1]*3+dp[0][0]\n            dp[1][2] = dp[0][2]*3+dp[0][1]\n            cq *= 3\n            cq %= MOD\n        for i in range(3):\n            dp[0][i] = dp[1][i]%MOD\n    \n    print((dp[0][-1]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "MOD = 10**9 + 7\nS = input()\nres = 0\ndp0 = 1 # ''\ndp1 = 0 # 'a'\ndp2 = 0 # 'ab'\ndp3 = 0 # 'abc'\n\nfor c in S:\n    if c == 'A':\n        dp1 += dp0\n    elif c == 'B':\n        dp2 += dp1\n    elif c == 'C':\n        dp3 += dp2\n    else:\n        dp0,dp1,dp2,dp3 = dp0*3,dp1*3+dp0,dp2*3+dp1,dp3*3+dp2\n    dp0 %= MOD\n    dp1 %= MOD\n    dp2 %= MOD\n    dp3 %= MOD\nprint(dp3)\n", "S = input(); N = len(S)\na,b,c,d = 0,0,0,1\nmod = 10**9+7\nfor x in reversed(S):\n  if x == \"?\":\n    a,b,c,d = (3*a+b)%mod, (3*b+c)%mod, (3*c+d)%mod, 3*d%mod\n  elif x == \"A\": a = (a+b)%mod\n  elif x == \"B\": b = (b+c)%mod\n  elif x == \"C\": c = (c+d)%mod\nprint(a)", "s=input()\nmod=pow(10,9)+7\ndp=[0]*4\ndp[0]=1\nfor si in s:\n  if si=='A':\n    dp[1]+=dp[0]\n  elif si=='B':\n    dp[2]+=dp[1]\n  elif si=='C':\n    dp[3]+=dp[2]\n  else:\n    dp[3]*=3\n    dp[3]+=dp[2]\n    dp[2]*=3\n    dp[2]+=dp[1]\n    dp[1]*=3\n    dp[1]+=dp[0]\n    dp[0]*=3\n  dp[3]%=mod\n  dp[2]%=mod\n  dp[1]%=mod\n  dp[0]%=mod\nprint((dp[3]))\n", "S = input()\n\ndef solve(S):\n    mod = 10**9+7\n    N = len(S)\n    Aquest = []\n    Cquest = []\n    cntA,cntquest = 0,0\n    for i in range(N):\n        if S[i] in 'B?':\n            Aquest.append([cntA,cntquest])\n        if S[i]=='A':\n            cntA += 1\n        if S[i]=='?':\n            cntquest += 1\n    cntC,cntquest = 0,0\n    for i in range(N-1,-1,-1):\n        if S[i] in 'B?':\n            Cquest.append([cntC,cntquest])\n        if S[i]=='C':\n            cntC += 1\n        if S[i]=='?':\n            cntquest += 1\n    Cquest = Cquest[::-1]\n    ans = 0\n    for aquest,cquest in zip(Aquest,Cquest):\n        a = aquest[0]*pow(3,aquest[1],mod)\n        if aquest[1]>0:\n            a += aquest[1]*pow(3,aquest[1]-1,mod)\n        c = cquest[0]*pow(3,cquest[1],mod)\n        if cquest[1]>0:\n            c += cquest[1]*pow(3,cquest[1]-1,mod)\n        ans += a*c%mod\n    ans %= mod\n    return ans\nprint(solve(S))", "s = input().rstrip()\nn = len(s)\nmod = 10**9 + 7\ndp = [0] * 4\ndp[0] = 1\n\nfor i in range(n):\n    next = [0] * 4\n    if s[i] == 'A':\n        next[1] += dp[0]\n    elif s[i] == 'B':\n        next[2] += dp[1]\n    elif s[i] == 'C':\n        next[3] += dp[2]\n    else:\n        next[1] += dp[0]\n        next[2] += dp[1]\n        next[3] += dp[2]\n        next[0] += dp[0] * 2\n        next[1] += dp[1] * 2\n        next[2] += dp[2] * 2\n        next[3] += dp[3] * 2\n    next[0] += dp[0]\n    next[1] += dp[1]\n    next[2] += dp[2]\n    next[3] += dp[3]\n\n    for j in range(4):\n        next[j] %= mod\n    dp = next\nprint((dp[3]))\n", "import sys\nsys.setrecursionlimit(100000000)\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = 10 ** 15\n\ndef main():\n    S = input()\n    N = len(S)\n    C = [0] * (N + 1)\n    QL = [0] * (N + 1)\n    A = [0] * (N + 1)\n    QR = [0] * (N + 1)\n    for i in range(N):\n        if S[i] == 'A':\n            A[i + 1] = A[i] + 1\n        else:\n            A[i + 1] = A[i]\n        if S[i] == '?':\n            QL[i + 1] = QL[i] + 1\n        else:\n            QL[i + 1] = QL[i]\n    \n    for i in range(N - 1,-1,-1):\n        if S[i] == 'C':\n            C[i] = C[i + 1] + 1\n        else:\n            C[i] = C[i + 1]\n        if S[i] == '?':\n            QR[i] = QR[i + 1] + 1\n        else:\n            QR[i] = QR[i + 1]\n    \n    power3 = [1]\n    for i in range(N):\n        power3.append(power3[-1]*3%MOD)\n\n    ans = 0\n    for i in range(N):\n        if S[i] in 'AC':\n            continue\n        choose_A = (A[i]*power3[QL[i]] + (QL[i] > 0)*QL[i]*power3[QL[i] - 1])%MOD\n        choose_B = (C[i + 1]*power3[QR[i + 1]] + (QR[i + 1] > 0)*QR[i + 1]*power3[QR[i + 1] - 1])%MOD\n        ans += choose_A*choose_B%MOD\n        ans %= MOD\n    print(ans) \n\ndef __starting_point():\n    main()\n    \n\n__starting_point()", "s = input()\nn_a = [0]\nn_l = [0]\nn_c = [0]\nn_r = [0]\n\nmod = 10 ** 9 + 7\nn = len(s)\n\npow3 = [1]\nfor i in range(n):\n    pow3.append(pow3[-1] * 3 % mod)\n\nfor i in range(n):\n    if s[i] == 'A':\n        n_a.append(n_a[-1]+1)\n    else:\n        n_a.append(n_a[-1])\n\n    if s[i] == '?':\n        n_l.append(n_l[-1]+1)\n    else:\n        n_l.append(n_l[-1])\n\n    if s[-i-1] == 'C':\n        n_c.append(n_c[-1]+1)\n    else:\n        n_c.append(n_c[-1])\n\n    if s[-i-1] == '?':\n        n_r.append(n_r[-1]+1)\n    else:\n        n_r.append(n_r[-1])\n\nans = 0\n\nfor i in range(1, n - 1):\n    if s[i] in ['B', '?']:\n        # ABC\n        ans += n_a[i] * n_c[n -  1 - i] * pow3[n_l[i]] * pow3[n_r[n - 1 - i]] % mod\n        ans %= mod\n        # ?BC   \n        ans += n_l[i] * n_c[n -  1 - i] * pow3[n_l[i] - 1] * pow3[n_r[n - 1 - i]] % mod\n        ans %= mod\n        # AB?\n        ans += n_a[i] * n_r[n -  1 - i] * pow3[n_l[i]] * pow3[n_r[n - 1 - i] - 1] % mod\n        ans %= mod\n        # ?B?\n        ans += n_l[i] * n_r[n -  1 - i] * pow3[n_l[i]-1] * pow3[n_r[n - 1 - i] - 1] % mod\n        ans %= mod\n\nprint(ans)\n", "#i\u6587\u5b57\u76ee\u3092\u898b\u3066\uff0c\u305d\u308c\u3088\u308a\u524d\u306eA\u306e\u500b\u6570\uff0cAB\u306e\u500b\u6570\uff0cABC\u306e\u500b\u6570\u3092\u6301\u3063\u3066\u304a\u304f\n\nS=input()\nN=len(S)\ndp=[0,0,0]\n\nmod=10**9+7\n\np=[1]*(N+1)\nfor i in range(N):\n    p[i+1]=(p[i]*3)%mod\n\n\ncount=0#?\u306e\u6570\nfor i in range(N):\n    if S[i]==\"A\":\n        dp[0]=(dp[0]+p[count]) %mod\n    elif S[i]==\"B\":\n        dp[1]=(dp[1]+dp[0])%mod\n    elif S[i]==\"C\":\n        dp[2]=(dp[2]+dp[1])%mod\n    else:\n        dp[2]=(dp[2]*3+dp[1])%mod\n        dp[1]=(dp[1]*3+dp[0])%mod\n        dp[0]=(dp[0]*3+p[count])%mod\n        count+=1\n        \nprint((dp[2]%mod))   \n\n\n\n\n\n", "MOD=10**9+7\nS=input()\n\ndp=[]\nfor i in range(len(S)+1):\n  dp.append([0,0,0,0])\n  \ndp[-1][3]=1\nfor i in reversed(range(len(S))):\n  if S[i]==\"?\":\n    m1=3\n  else:\n    m1=1        \n  dp[i][3]=m1*dp[i+1][3]\n  dp[i][3]%=MOD\n  \n  for j in range(3):\n    if S[i]==\"?\":\n      m2=1\n    else:\n      if S[i]==[\"A\",\"B\",\"C\"][j]:\n        m2=1\n      else:\n        m2=0    \n    dp[i][j]=m1*dp[i+1][j]+m2*dp[i+1][j+1]\n    dp[i][j]%=MOD\n    \nprint(dp[0][0])", "#!/usr/bin/env python3\n\n\ndef main():\n    S = input()\n    N = len(S)\n    m = 10**9 + 7\n    # dp[i][j]:= \u5148\u982d\u304b\u3089i-1\u6587\u5b57\u76ee\u307e\u3067\u307f\u3066ABC\u306e\u3046\u3061j\u6587\u5b57\u76ee\u307e\u3067\u9078\u3093\u3067\u3044\u305f\u6642\u306e\u6b8b\u308a\u306e\u51e6\u7406\u306e\u500b\u6570\n    dp = [[0]*4 for _ in range(N+1)]\n    for i in range(N,-1,-1):\n        for j in range(3,-1,-1):\n            # print(i,j)\n            if i == N:\n                if j == 3:\n                    # print(i,j)\n                    dp[i][j] = 1\n                else:\n                    dp[i][j] = 0\n            else:\n                if S[i] == '?':\n                    dp[i][j] = dp[i+1][j] * 3 % m\n                else:\n                    dp[i][j] = dp[i+1][j]\n                \n                if j < 3:# S[i]\u6587\u5b57\u3092\u9078\u629e\u3059\u308b\u5834\u5408\n                    if S[i] == '?' or S[i] == 'ABC'[j]:\n                        dp[i][j] += dp[i+1][j+1]\n                        dp[i][j] %= m\n\n    print((dp[0][0]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "D=[0,0,0,1,0]\nfor s in input():D=[(D[j]*((s==\"?\")*2+1)+D[j+1]*(s in t+\"?\"))%(10**9+7) for j,t in enumerate(\"CBA.\")]+[0]\nprint(D[0])", "def main():\n    MOD = 10 ** 9 + 7\n\n    s = input()\n    n = len(s)\n\n    acc_a = [0] * (n + 1)\n    acc_c = [0] * (n + 1)\n    acc_q = [0] * (n + 1)\n\n    a = 0\n    c = 0\n    q = 0\n    for i, char in enumerate(s, 1):\n        if char == 'A':\n            a += 1\n        elif char == 'C':\n            c += 1\n        elif char == '?':\n            q += 1\n        acc_a[i] = a\n        acc_c[i] = c\n        acc_q[i] = q\n\n    sq = [1]\n    for _ in range(acc_q[n]):\n        sq.append(sq[-1] * 3 % MOD)\n\n    ans = 0\n    qn = acc_q[n]\n    for i, char in enumerate(s, 1):\n        if char == 'B' or char == '?':\n            is_q = int(char == '?')\n            rq = acc_q[n] - acc_q[i]\n            rc = acc_c[n] - acc_c[i]\n            t = 0\n            if qn - is_q >= 0:\n                t += acc_a[i - 1] * rc * sq[acc_q[n] - is_q]\n            if qn - 1 - is_q >= 0:\n                t += acc_a[i - 1] * rq * sq[acc_q[n] - 1 - is_q]\n                t += acc_q[i - 1] * rc * sq[acc_q[n] - 1 - is_q]\n            if qn - 2 - is_q >= 0:\n                t += acc_q[i - 1] * rq * sq[acc_q[n] - 2 - is_q]\n            t %= MOD\n            ans = (ans + t) % MOD\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S = list(input())\nmod = 10 ** 9 + 7\nn = len(S)\n\ndp = [[0] * 4 for _ in range(n)]\ndp[-1][0] = 1\n# dp[i\u6587\u5b57\u76ee\u307e\u3067\u306e?\u3092\u78ba\u5b9a\u3055\u305b\u305f][i\u6587\u5b57\u76ee\u307e\u3067\u3067\u6587\u5b57\u3092n\u500b\u9078\u3093\u3060]\n\nfor i, s in enumerate(S):\n    if s == '?':\n        dp[i][0] = dp[i - 1][0] * 3 % mod\n        dp[i][1] = (dp[i - 1][0] + dp[i - 1][1] * 3) % mod\n        dp[i][2] = (dp[i - 1][1] + dp[i - 1][2] * 3) % mod\n        dp[i][3] = (dp[i - 1][2] + dp[i - 1][3] * 3) % mod\n    elif s == 'A':\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = (dp[i - 1][1] + dp[i - 1][0]) % mod\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = dp[i - 1][3]\n    elif s == 'B':\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = (dp[i - 1][1] + dp[i - 1][2]) % mod\n        dp[i][3] = dp[i - 1][3]\n    else:\n        dp[i][0] = dp[i - 1][0]\n        dp[i][1] = dp[i - 1][1]\n        dp[i][2] = dp[i - 1][2]\n        dp[i][3] = (dp[i - 1][3] + dp[i - 1][2]) % mod\n\nprint((dp[-1][-1]))\n", "S = input()\na = [1,0,0,0]\n\nfor s in S:\n  if s==\"A\":\n    a[1]+=a[0]\n  elif s==\"B\":\n    a[2]+=a[1]\n  elif s==\"C\":\n    a[3]+=a[2]\n  else:\n    a=[3*a[0]]+[3*a[n+1]+a[n] for n in range(3)]\n  a=[a[n]%1000000007 for n in range(4)]\n\nprint(a[3])", "md=10**9+7\ns=input()\ndp=[[0]*4 for _ in range(3)]\nfor c in s:\n    if c==\"A\":dp[0][0]=(dp[0][0]+1)%md\n    if c==\"B\":\n        for j in range(2):dp[1][j]=(dp[1][j]+dp[0][j])%md\n    if c==\"C\":\n        for j in range(3):dp[2][j]=(dp[2][j]+dp[1][j])%md\n    if c==\"?\":\n        for j in range(3):dp[2][j+1]=(dp[2][j+1]+dp[1][j])%md\n        for j in range(2):dp[1][j+1]=(dp[1][j+1]+dp[0][j])%md\n        dp[0][1] = (dp[0][1] + 1) % md\nans=0\nq=s.count(\"?\")\nfor j in range(4):\n    if q-j<0:break\n    ans+=dp[2][j]*pow(3,q-j,md)\n    ans%=md\nprint(ans)\n", "MOD = 10**9 + 7\n\n\ndef main():\n    S = input()\n    N = len(S)\n    pre_hatena = S[:1].count(\"?\")\n    a = S[:1].count(\"A\")\n    post_hatena = S[2:].count(\"?\")\n    c = S[2:].count(\"C\")\n\n    ans = 0\n    for i in range(1, N-1):\n        if S[i] == \"?\" or S[i] == \"B\":\n            pre_pow = pow(3, pre_hatena-1, MOD)\n            pre = ((pre_pow * 3) % MOD) * a + pre_pow * pre_hatena\n            post_pow = pow(3, post_hatena-1, MOD)\n            post = ((post_pow * 3) % MOD) * c + post_pow * post_hatena\n            ans += pre * post\n            ans %= MOD\n        if S[i] == \"?\":\n            pre_hatena += 1\n        if S[i] == \"A\":\n            a += 1\n        if S[i+1] == \"?\":\n            post_hatena -= 1\n        if S[i+1] == \"C\":\n            c -= 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=input()\nDP=[[0]*(len(N)+1) for i in range(4)]\nDP[0][0]=1#\u5f8c\u5074\u304c\u4f4d\u7f6e\nmod=10**9+7\nfor i in range(len(N)):\n   if N[i]==\"A\":\n      DP[0][i+1]=DP[0][i]%mod\n      DP[1][i+1]=(DP[1][i]+DP[0][i])%mod\n      DP[2][i+1]=DP[2][i]%mod\n      DP[3][i+1]=DP[3][i]%mod\n   elif N[i]==\"B\":\n      DP[0][i+1]=DP[0][i]%mod\n      DP[1][i+1]=DP[1][i]%mod\n      DP[2][i+1]=(DP[2][i]+DP[1][i])%mod\n      DP[3][i+1]=DP[3][i]%mod\n   elif N[i]==\"C\":\n      DP[0][i+1]=DP[0][i]%mod\n      DP[1][i+1]=DP[1][i]%mod\n      DP[2][i+1]=DP[2][i]%mod\n      DP[3][i+1]=(DP[3][i]+DP[2][i])%mod\n   else:\n      DP[3][i+1]=(3*DP[3][i]+DP[2][i])%mod\n      DP[0][i+1]=(DP[0][i]*3)%mod\n      DP[1][i+1]=(DP[1][i]*3+DP[0][i])%mod\n      DP[2][i+1]=(DP[2][i]*3+DP[1][i])%mod\nprint(DP[3][-1]%mod)"]