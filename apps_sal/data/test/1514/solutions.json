["from collections import defaultdict, Counter\nN = int(input())\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\nEdge = defaultdict(list)\nEdc = defaultdict(int)\nfor b, c in zip(B, C):\n    if b > c:\n        print(-1)\n        return\n    Edge[b].append(c)\n    Edc[(b, c)] += 1\n    if b != c:\n        Edge[c].append(b)\nDeg = Counter(B + C)\neul = 0\nst = []\nfor k, v in list(Deg.items()):\n    if v % 2:\n        eul += 1\n        st.append(k)\ns, e = B[0], B[0]\nif eul and eul != 2:\n    print(-1)\n    return\nif eul:\n    s, e = st[0], st[1]\nans = [s]\nwhile True:\n    vn = ans[-1]\n    while True:\n        vf = Edge[vn][-1]\n        if Deg[vf] != 0 and Edc[(vn, vf) if vn < vf else (vf, vn)]:\n            break\n        Edge[vn].pop()\n    vf = Edge[vn].pop()\n    Deg[vn] -= 1\n    Deg[vf] -= 1\n    Edc[(vn, vf) if vn < vf else (vf, vn)] -= 1\n    ans.append(vf)\n    if not Deg[vf]:\n        break\nloop = defaultdict(list)\nfor a in ans:\n    if Deg[a]:\n        loopa = [a]\n        while Deg[a]:\n            vn = loopa[-1]\n            while True:\n                vf = Edge[vn][-1]\n                if Deg[vf] != 0 and Edc[(vn, vf) if vn < vf else (vf, vn)]:\n                    break\n                Edge[vn].pop()\n            vf = Edge[vn].pop()\n            Deg[vn] -= 1\n            Deg[vf] -= 1\n            Edc[(vn, vf) if vn < vf else (vf, vn)] -= 1\n            loopa.append(vf)\n            if not Deg[vf]:\n                break\n        loop[a] = loopa\nAns = [] \nfor a in ans:\n    if loop[a]:\n        Ans.extend(loop[a])\n        loop[a] = []\n    else:\n        Ans.append(a)    \nif len(Ans) != N:\n    print(-1)\n    return\nprint(*Ans)\n\n\n"]