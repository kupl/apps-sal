["s = input()\nmx = 0\nn = len(s)\nfor l in range(n):\n    for r in range(l, n):\n        if s[l:r+1] != s[l:r+1][::-1]:\n            mx = max(mx, r - l + 1)\nprint(mx)", "ans = 0\ns = input()\nn = len(s)\nfor i in range(n):\n    for j in range(i + 1, n + 1):\n        t = s[i:j]\n        if t != t[::-1]:\n            ans = max(ans, j- i)\nprint(ans)\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\ns=(input()).strip()\n\nans=0\n\nfor i in range(len(s)):\n    for j in range(i+1,len(s)+1):\n        t=s[i:j]\n        if t==t[::-1]: continue\n        ans=max(ans,len(t))\nprint(ans)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 27 20:07:20 2018\n\n@st0rmbring3r\n\"\"\"\n\nword = input()\nwhile word == word[::-1] and len(word)>0:\n    word = word[:-1]\n\nprint(len(word))", "\na = input()\n\nmm = 0\nfor i in range(len(a)):\n    for j in range(i, len(a)):\n        x = \"\"\n        for xx in range(i, j + 1):\n            x += a[xx]\n        if x != x[::-1]:\n            mm = max(mm, len(x))\n\nprint(mm)\n", "s = input()\nans = 0\nfor i in range(len(s)):\n  for j in range(i, len(s)):\n    t = s[i:j+1]\n    if t != \"\".join(list(reversed(t))):\n      ans = max(ans, j-i+1)\nprint(ans)", "# python3\nfrom operator import eq\n\n\ndef is_palindrome(string):\n    half = len(string) // 2 + 1\n    return all(map(eq, string[:half], reversed(string)))\n\n\ndef main():\n    string = input()\n    first = string[0]\n\n    if all(symbol == first for symbol in string):\n        print(0)\n    else:\n        print(len(string) - 1 if is_palindrome(string) else len(string))\n\n\nmain()\n", "\ns=input()\nans = 0\nn=len(s)\nfor i in range(n):\n  t=\"\"\n  for j in range(i,n):\n    t+=s[j]\n    if(t!=t[::-1]):\n      ans=max(ans,len(t))\nprint(ans)\n\n", "from sys import stdin, stdout\n\ns = stdin.readline().strip()\nans = 0\n\nfor l in range(1, len(s) + 1):\n    for i in range(len(s) - l + 1):\n        if s[i: i + l] != s[i: i + l][::-1]:\n            ans = l\n\nstdout.write(str(ans))", "s = input()\nisp = 1\nonl = 1\nfor i in range(len(s)):\n    if (i>0 and s[i-1]!=s[i]):\n        onl = 0\n    if (s[i]!=s[len(s)-i-1]):\n        isp = 0\nif (not isp):\n    print(len(s))\nelse:\n    if (onl):\n        print(0)\n    else:\n        print(len(s)-1)\n    \n\n\n            \n        \n    \n    \n    \n    \n        \n    \n    \n    \n\n    \n    \n   \n\n", "s=input()\nans=0\nn=len(s)\nfor i in range(n):\n    for j in range(i+1,n+1):\n        c=s[i:j]\n        if c!=c[::-1] and j-i>ans:\n            ans=j-i\nprint(ans)\n", "s = input()\n\nif s[::] != s[::-1]:\n    print(len(s))\n\nelif len(set(s)) == 1:\n    print(0)\n\nelse:\n    print(len(s) - 1)\n", "def func(w):\n    return w != w[::-1]\n\nword = input().strip()\n\nss = [word[i:j] for i in range(len(word)) for j in range(i+1, len(word)+1) if func(word[i:j])]\n\nprint(max(len(w) for w in ss) if ss else 0)\n", "def is_palindrome(ss):\n    return ss == ss[::-1]\n\ns = input().strip()\nbest = 0\nfor i in range(len(s)):\n    for j in range(i + 1, len(s) + 1):\n        if not is_palindrome(s[i:j]):\n            best = max(best, j - i)\nprint(best)\n", "#l=[(int(i))for i in input().split()]\ns = input()\nif(s.count(s[0]) == len(s)):\n\tprint(0)\nelif s == s[::-1]:\n\tprint(len(s)-1)\nelse:print(len(s))\t", "ch=input()\nwhile(ch==ch[::-1] and len(ch)>=1):\n      ch=ch[:-1]\nif(len(ch)==1):\n      print(0)\nelse:\n      print(len(ch))\n      \n", "import sys\n\ninput = sys.stdin.readline\n\ns = input().strip()\nmaxlen = 0\n\ndef checkpalin(s):\n    i = 0\n    j = len(s) - 1\n    while (i < j):\n        if (s[i] != s[j]):\n            return False\n        i += 1\n        j -= 1\n    return True\n\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        if not checkpalin(s[i:j+1]):\n            maxlen = max(maxlen, len(s[i:j+1]))\n\nprint(maxlen)", "s = input()\nans = 0\ndef pal(p):\n    return p == p[::-1]\nfor i in range(len(s)):\n    for j in range(i + 1, len(s) + 1):\n        if (not pal(s[i:j])):\n            ans = max(ans, j - i)\nprint(ans)\n", "s = input()\nif (s!=s[::-1]):\n    print(len(s))\nelse:\n    if (len(set(s))==1):\n        print(0)\n    else:\n         print(len(s)-1)\n", "s = input()\nn = len(s)\nans  = 0\nfor i in range(n):\n    for j in range(i, n):\n        a = s[i : j + 1]\n        b = \"\"\n        for item in a:\n            b = item + b\n        if (a != b):\n            ans = max(ans, len(a))\nprint(ans)", "s = input()\nn = len(s)\nbest = 0\nfor l in range(n + 1):\n    if s[0:l][::-1] != s[0:l]:\n        # print(s[:l], s[: l][::-1])\n        best = l\n\nprint(best)\n", "s = input()\nfor i in range(len(s)):\n    if (s[i] != s[-i - 1]):\n        print(len(s))\n        break\nelse:\n    for i in s:\n        if (i != s[0]):\n            print(len(s) - 1)\n            break\n    else:\n        print(0)", "s = input()\nans = 0\nfor i in range(len(s), 0, -1):\n    for j in range(i - 1, len(s)):\n        if s[j - i + 1:j + 1] != s[j - i + 1:j + 1][::-1]:\n            ans = max(ans, i)\nprint(ans)\n", "ch=input()\n#rofllll this is so easy mannn\nwhile(ch==ch[::-1] and len(ch)>=1):\n      ch=ch[:-1]\nif(len(ch)==1):\n      print(0)\nelse:\n      print(len(ch))\n      \n", "s = input()\nk = set(list(s))\nif len(k) == 1: print(0)\nelif s == s[::-1]: print(len(s)-1)\nelse: print(len(s))\n"]