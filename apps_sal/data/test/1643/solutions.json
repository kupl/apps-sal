["from sys import stdin\ns=stdin.readline().strip()\ndp=[0 for i in range(len(s)+2)]\nons=[0 for i in range(len(s)+2)]\nzs=[0 for i in range(len(s)+2)]\nfor i in range(len(s)-1,-1,-1):\n    if s[i]==\"1\":\n        ons[i]+=1\n    if(i!=len(s)-1):\n        ons[i]+=ons[i+1]\nz=0\nfor i in range(len(s)-1,-1,-1):\n    if(s[i]==\"1\"):\n        dp[i]=max(1+ons[i+1],z)\n    else:\n        dp[i]=max(dp[i+1]+1,1+ons[i+1])\n        z=dp[i]\n    zs[i]=z\n\nans=\"\"    \nfor i in range(len(s)):\n    if s[i]==\"1\":\n        x=dp[i]\n        y=1+dp[i+1]\n        if x==y:\n            ans+=\"0\"\n        else:\n            ans+=\"1\"\n    else:\n        ans+=\"0\"\nprint(ans)\n", "s = input()\nn = len(s)\nif n == 1:\n\tprint(0)\nelif n == 2:\n\tif s == \"10\":\n\t\tprint(\"10\")\n\telse:\n\t\tprint(\"00\")\nelse:\n\ts_lis = 0\n\ts_max = 0\n\ts_zero = 0\n\tt_zero = 0\n\tstack_01 = []\n\tt = []\n\tfor i in range(n):\n\t\tt.append(\"0\")\n\t\tt_zero += 1\n\t\tif s[i] == \"0\":\n\t\t\ts_zero += 1\n\t\tif i > 0 and s[i-1:i+1] == \"10\":\n\t\t\tt[i-1] = \"1\"\n\t\t\tt_zero -= 1\n\t\t\tstack_01.append(i-2)\n\t\tif s_max <= int(s[i]):\n\t\t\ts_lis += 1\n\t\t\ts_max = max(s_max, int(s[i]))\n\t\tif s_lis <= s_zero:\n\t\t\ts_lis = s_zero\n\t\t\ts_max = 0\n\t\tif s_lis < t_zero:\n\t\t\t#print(t_01)\n\t\t\twhile t[stack_01[-1]] == \"1\" or s[stack_01[-1]] == \"0\" or t[stack_01[-1]-1] == \"1\":\n\t\t\t\tstack_01.pop()\n\t\t\tt[stack_01[-1]] = \"1\"\n\t\t\tt_zero -= 1\n\t\t\tstack_01[-1] -= 1\n\tprint(*t, sep=\"\")\n", "st = input().rstrip()\na = []\nfor item in st:\n    a.append(int(item))\n\na.reverse()\nzero_count = 0\nfor i, item in enumerate(a):\n    if item == 0:\n        zero_count += 1\n    elif zero_count > 0:\n        zero_count -= 1\n    else:\n        a[i] = 0\na.reverse()\nprint(\"\".join([str(item) for item in a]))", "s = list(map(int, input()))\nps = [0]\nfor i in s:\n    if i == 0:\n        ps.append(ps[-1] + 1)\n    else:\n        ps.append(ps[-1] - 1)\nb = 0\nmaba = 0\nsufmax = [-10 ** 9]\nfor i in range(len(ps) - 1, 0, -1):\n    sufmax.append(max(sufmax[-1], ps[i]))\nsufmax = sufmax[::-1]\nans = []\ncnt = 0\nif s[0] == 1:\n    cnt += 1\nelse:\n    ans.append('0')\nfor i in range(1, len(s)):\n    if s[i] == 0 and s[i - 1] == 0:\n        ans.append('0')\n    elif s[i] == 1:\n        cnt += 1\n    else:\n        maba = sufmax[i] - ps[i]\n        maba = min(maba, cnt)\n        for _ in range(cnt - maba):\n            ans.append('0')\n        for _ in range(maba):\n            ans.append('1')\n        cnt = 0\n        ans.append('0')\nfor _ in range(len(s) - len(ans)):\n    ans.append('0')\nprint(''.join(ans))\n", "s=[int(x) for x in list(input())]\nn=len(s)\nb=[0]*n\ncounter=0\nfor i in range(n-1,-1,-1):\n    if s[i]==0:\n        counter+=1\n    elif counter>0:\n        counter-=1\n    else:\n        s[i]=0\narr=''\nfor item in s:\n    arr+=str(item)\nprint(arr)\n    \n", "s = input()[::-1]\ncount= 0 \nn = len(s)\ns1 = \"\"\nfor i in range(n):\n\tif s[i] == '0':\n\t\tcount+=1\n\t\ts1+='0'\n\telif count>0:\n\t\tcount-=1\n\t\ts1+='1'\n\telse:\n\t\ts1 += '0'\ns1 = s1[::-1]\nprint(s1)", "S = list(map(int,input().strip()))\nN = len(S)\n\nstack = []\nfor i in range(N):\n    s = S[i]\n    if s == 0 and stack and stack[-1][0] == 1:\n        stack.pop()\n    else:\n        stack.append((s, i))\nT = S[:]\nif stack:\n    for i in tuple(map(list, zip(*stack)))[1]:\n        T[i] = 0\n\nprint(''.join(map(str, T)))", "s = str(input().strip())\nt = list(s[::-1])\ncnt = 0\nfor i,v in enumerate(t):\n    if v == '0':\n       cnt += 1\n    else:\n        if cnt:\n            cnt -= 1\n        else:\n            t[i] = '0'\nprint(\"\".join(t[::-1]))", "s = str(input())\nn = len(s)\nns = ['0' for i in range(n)]\nst = []\nfor i in range (n):\n    if (s[i] == '0'):\n        if (len(st)):\n            ns[st.pop()] = '1'\n    else:\n        st.append(i)\nprint(''.join(ns))", "v,t=0,''\nfor c in input()[::-1]:\n if c<'1'or v:\n  t+=c;v+=1-(c<'1')*2\n else:t+='0'\nprint(t[::-1])", "# -*- coding: utf-8 -*-\n# @Date    : 2019-08-21 13:24:15\n# @Author  : raj lath (oorja.halt@gmail.com)\n# @Link    : link\n# @Version : 1.0.0\n\nimport sys\nsys.setrecursionlimit(10**5+1)\n\ninf     =  int(10 ** 20)\nmax_val =  inf\nmin_val = -inf\n\nRW  = lambda : sys.stdin.readline().strip()\nRI  = lambda : int(RW())\nRMI = lambda : [int(x) for x in sys.stdin.readline().strip().split()]\nRWI = lambda : [x for x in sys.stdin.readline().strip().split()]\n\ngiven = input()[::-1]\nzeros = 0\nlens  = len(given)\nrets  = ''\nfor i in range(lens):\n    if given[i] == '0':\n        zeros += 1\n        rets += '0'\n    elif zeros > 0:\n        zeros -= 1\n        rets += \"1\"\n    else:\n        rets += '0'\nrets = rets[::-1]\nprint(rets)", "v, ans = 0, ''\nfor c in input()[::-1]:\n    if c == '0' or v:\n        ans += c\n        v += (1 if c == '1' else -1)\n    else:\n        ans += '0'\nprint(ans[::-1])\n", "import sys\nimport math\n\ndef main():\n    s = input()\n    q = []\n    for i in range(len(s)):\n        if s[i] == '1':\n            q.append(i)\n        elif len(q) > 0:\n            q.pop();\n\n    result = []\n    q = set(q)\n    for i in range(len(s)):\n        if i in q:\n            result.append('0')\n        else:\n            result.append(s[i])\n\n    print(''.join(result))\n\n    \n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()[::-1]\nans=''\nc=0\nfor i in s:\n    if i=='0':\n        ans+='0'\n        c+=1\n    elif c>0:\n        ans+='1'\n        c-=1\n    else:\n        ans+='0'\nprint(ans[::-1])                \n", "s=input()\nans=['0' for i in range(len(s))]\nst=[]\nfor i in range(len(s)):\n    if s[i]=='0':\n        if len(st):\n            ans[st.pop()]='1'\n    else:\n        st.append(i)\nprint(''.join(ans))", "st = input().rstrip()\na = []\nfor item in st:\n    a.append(int(item))\n \na.reverse()\nzero_count = 0\nfor i, item in enumerate(a):\\\n    #huaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n    #where all this peps got this kind of solutionnnnnnnnnn\n    #huaawdkaowkdoakwdoj\n    #zsevorinpunu8opzersvnopsvzerveorunppioupenirszuinorpsuozserinpvnopugiyuoprgeinwpuirzsdtgnopuvxynpozsdrtuoprtudsz\n    if item == 0:\n        zero_count += 1\n    elif zero_count > 0:\n        zero_count -= 1\n    else:\n        a[i] = 0\n    #print(i,item,zero_count)\na.reverse()\nprint(\"\".join([str(item) for item in a]))\n", "pp = input()\nif len(pp) == 1:\n    print('0')\n    return\nz = 1 if pp[0]=='0' else 0\nzc = [z]\nl = 1\nlndl = [l]\nfor p in pp[1:]:\n    l = max(z + 1, l + (1 if p == '1' else 0))\n    z += 1 if p == '0' else 0\n    lndl.append(l)\n    zc.append(z)\nlnda = lndl[-1]\no = 1 if pp[-1]=='1' else 0\noc = [o]\nl = 1\nlndr = [l]\nfor p in reversed(pp[:-1]):\n    l = max(o + 1, l + (1 if p == '0' else 0))\n    o += 1 if p == '1' else 0\n    lndr.append(l)\n    oc.append(o)\noc.reverse()\nlndr.reverse()\nqq = []\nez = 0\nif pp[0] == '1':\n    if max(oc[1], lndr[1] + 1) != lnda :\n        qq.append('1')\n    else:\n        qq.append('0')\n        ez += 1\nelse:\n    qq.append('0')\nfor p, l, o, z, r in zip(pp[1:-1],lndl, oc[2:], zc, lndr[2:]):\n    if p == '1':\n        if max(l + o, z + ez + 1 + r) != lnda:\n            qq.append('1')\n        else:\n            qq.append('0')\n            ez += 1\n    else:\n        qq.append('0')\n\nqq.append('0')\nprint(''.join(qq))\n", "s = input()\n\nres = [\"0\"]*len(s)\nmin_dif = 0\nlength = len(s)\n\nfor i in range(length):\n    if s[length-i-1] == \"0\":\n        min_dif = min([-1, min_dif-1])\n    else:\n        if min_dif < 0: res[length-i-1] = \"1\"\n        min_dif = min([1, min_dif+1])\nprint(\"\".join(res))", "s=input()\nn=len(s)\nb=[0]*n\nl=[]\nm=[]\nj=0\nfor i in s:\n    if(len(l)==0):\n        l.append(i)\n        m.append(j)\n    elif(l[-1]=='1' and i=='0'):\n        l.pop()\n        b[m.pop()]=1\n    else:\n        l.append(i)\n        m.append(j)\n    j+=1\nprint(*b,sep=\"\")", "def main():\n    s = input()\n    n = len(s)\n\n    st = []\n    flags = [False for i in range(n)]\n\n    for i in range(n):\n        if s[i] == '1':\n            st.append(i)\n        elif len(st) != 0:\n            st.pop()\n    \n    for i in range(len(st)):\n        flags[st[i]] = True\n\n    for i in range(n):\n        if flags[i] == True:\n            print(\"0\", end = '')\n        else:\n            print(s[i], end = '')\n    print()\n\n\nmain()", "inn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      list(map(int, input().split()))\nDBG = True  and False\ndef ddprint(x):\n  if DBG:\n    print(x)\n\ns = input().strip()\nn = len(s)\nones = []\nstk = []\nfor i in range(n):\n    if len(stk)>0 and stk[-1][0]=='1' and s[i]=='0':\n        ones.append(stk[-1][1])\n        stk.pop()\n    else:\n        stk.append((s[i],i))\n    #ddprint(\"i {} stk {}\".format(i,stk))\nones.sort()\n#ddprint(ones)\nans = \"\"\ncur = 0\nfor i in ones:\n    for j in range(cur, i):\n        ans += \"0\"\n    ans += \"1\"\n    cur = i+1\nfor j in range(cur,n):\n    ans += \"0\"\nprint(ans)\n", "s = input()[::-1]\nans=''\nc=0\nfor i in s:\n    if i=='0':\n        ans+='0'\n        c+=1\n    elif c>0:\n        ans+='1'\n        c-=1\n    else:\n        ans+='0'\nprint(ans[::-1])", "s = input()\nt = list(s)\nstack =[]\nfor i in range(len(s)):\n    if t[i]=='1':\n        stack.append(i)\n    elif len(stack):\n        stack.pop()\n\nfor i in range(len(stack)):\n    t[stack[i]] = '0'\nprint(''.join(t))", "s = input()\ns = list(s)\nl = len(s) - 1\nz = 0\nfor i in range(l, -1, -1):\n\tif s[i] == '0':\n\t\tz += 1\n\telif z:\n\t\tz -= 1\n\telse:\n\t\ts[i] = '0'\n\ns = ''.join(s)\nprint(s)", "s=list(map(int,input()))\nstack=[]\nfor i in range(len(s)):\n    if s[i]==1:\n        stack.append(i)\n    elif len(stack)!=0:\n        stack.pop()\nfor i in stack:\n    s[i]=0\ns=list(map(str,s))\nprint(''.join(s))\n"]