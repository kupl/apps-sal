["A,B,C,D=list(map(int,input().split()))\nfor i in range(2):\n    for j in range(2):\n        for k in range(2):\n            for l in range(2):\n                sum1 = 0\n                sum2 = 0\n                if i == 1:\n                    sum1 += A\n                else:\n                    sum2 += A\n                if j ==1:\n                    sum1 += B\n                else:\n                    sum2 += B\n                if k == 1:\n                    sum1 += C\n                else:\n                    sum2 += C\n                if l == 1:\n                    sum1 += D\n                else:\n                    sum2 += D\n                if sum1 == sum2:\n                    print(\"Yes\")\n                    return\nprint(\"No\")\n", "from itertools import product\n\ncookie = list(map(int, input().split()))\n\nfor bit in product([0, 1], repeat=4):\n    eat = 0\n    not_eat = 0\n    for i, b in enumerate(bit):\n        if b == 0:\n            eat += cookie[i]\n        else:\n            not_eat += cookie[i]\n    if eat == not_eat:\n        print(\"Yes\")\n        return\nprint(\"No\")", "a = list(map(int, input().split()))\na.sort()\nif sum(a[:3]) == a[3]:\n    print('Yes')\nelif a[0] + a[3] == a[1] + a[2]:\n    print('Yes')\nelse:\n    print('No')", "A = list(map(int,input().split()))\nsums = sum(A)\n\nfor i in range(2 ** 4):\n  res = 0\n  for j in range(4):\n    if (i >> j) & 1:\n      res += A[j]\n  if res == sums - res:\n    print(\"Yes\")\n    break\nelse:\n  print(\"No\")", "def main():\n    c=list(map(int,input().split()))\n    s=sum(c)\n    for i in range(2**4):\n        tmp=0\n        for j in range(4):\n            if i>>j&1:\n                tmp+=c[j]\n        if tmp==s-tmp:\n            print('Yes')\n            break\n    else:\n        print('No')\n\nmain()", "#ARC105 A\nimport itertools\n\nA, B, C, D = list(map(int,input().split()))\nsums = A + B + C + D\nlst = [A, B, C, D]\n\nfor i in itertools.permutations(lst,1):\n    if sum(i) == sums - sum(i):\n        print(\"Yes\")\n        return\n        \nfor j in itertools.permutations(lst,2):\n    if sum(j) == sums - sum(j):\n        print(\"Yes\")\n        return\n        \n        \nprint(\"No\")\n", "import itertools\nflag = True\nl = list(map(int, input().split()))\nfor i in itertools.combinations(l,2):\n    if sum(list(i)) * 2 == sum(l):\n        print('Yes')\n        flag = False\n        break\nfor i in itertools.combinations(l, 1):\n    if flag and sum(list(i)) * 2 == sum(l):\n        print('Yes')\n        flag = False\n\nif flag:\n    print('No')", "# ARC105 - A\ncakes = [int(x) for x in input().split()]\n\n# \u666e\u901a\u306e\u5168\u63a2\u7d22\u3067\u3082\u89e3\u304f\u3053\u3068\u306f\u3067\u304d\u308b\u304c\u3001\u7df4\u7fd2\u306e\u305f\u3081\u306b\u3042\u3048\u3066bit\u5168\u63a2\u7d22\u3092\u7528\u3044\u3066\u89e3\u3044\u3066\u307f\u308b\n# \u30eb\u30fc\u30d7\u6570\u306f2**4 = 16\u56de\n\nfor i in range(2**4):\n      x,y = 0,0\n      for j in range(4):\n            #print((i >> j)&1,end=\" \")\n            if (i>>j)&1 == 1:\n                  x += cakes[j]\n            else:\n                  y += cakes[j]\n      \n      if x == y:\n            print(\"Yes\")\n            return\n      #print()\n\nprint(\"No\")", "import sys,itertools\na = list(map(int,input().split()))\nsu = sum(a)\nfor pt in itertools.product(range(2),repeat=4):\n    if sum(pt) == 0: continue\n    now = 0\n    for i,x in enumerate(pt):\n        if x: now += a[i]\n    if now*2 == su:\n        print('Yes')\n        break\nelse:\n    print('No')", "A=list(map(int,input().split()))\nA.sort()\nif A[-1]==sum(A[:-1]) or (A[0]+A[-1])*2==sum(A):\n  print(\"Yes\")\nelse:\n  print(\"No\")", "A,B,C,D = map(int,input().split())\n\nif A==B+C+D or B==A+C+D or C==A+B+D or D==A+B+C:\n  print(\"Yes\")\nelif A+B==C+D or A+C==B+D or A+D==B+C:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "import sys\n\nli = list(map(int, input().split()))\ns = sum(li)\n\nif s%2:\n    print(\"No\")\n    return\n\nfor i in range(4):\n    for j in range(i+1,4):\n        if li[i] + li[j] == s//2 or li[i] == s//2:\n            print(\"Yes\")\n            return\nprint(\"No\")", "A, B, C, D=map(int, input().split())\nS=A+B+C+D\nif S%2==0:\n  if A==S//2 or B==S//2 or C==S//2 or D==S//2 or A+B==S//2 or A+C==S//2 or A+D==S//2:\n    print('Yes')\n  else:\n    print('No')\nelse:\n  print('No')", "a, b, c, d = sorted(list(map(int, input().split())))\nif a+d == b+c or a+b+c == d:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "def resolve():\n#====input code===\n    l = list(map(int,input().split()))\n    l.sort()\n    if l[0]+l[3]==l[1]+l[2] or l[0]+l[1]+l[2] == l[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n#================\nresolve()", "import itertools\n\nl = list(map(int,input().split()))\nans=False\nfor L in range(1, len(l)):\n    for subset in itertools.combinations(l, L):\n        if sum(subset)*2==sum(l):\n            ans=True\n            print(\"Yes\")\n            break\n    if ans:\n        break\nif not ans:\n  print(\"No\")", "import itertools\narray = list(map(int, input().split()))\nans = \"No\"\n\nfor i in range(4):\n    for tmp in itertools.combinations(array, i + 1):\n        if sum(tmp) * 2 == sum(array):\n            ans = \"Yes\"\n\nprint(ans)", "A = list(map(int, input().split()))\nsu = sum(A)\n\n\n\nfor i in range(2**4):\n    a1 = 0\n    for j in range(4):\n        if i >> j & 1:\n            a1 += A[j]\n\n\n    if a1 == su - a1:\n        print(\"Yes\")\n        return\n\nprint(\"No\")", "ans=False\nA=list(map(int,input().split()))\n\nfor bit in range(1,2**4):\n    a=int(0)\n    b=int(0)\n    for i in range(4):\n        if bit & (1<<i):\n            a+=A[i]\n        else:\n            b+=A[i]\n    if a==b:\n        ans=True\nif ans:\n    print('Yes')\nelse:\n    print('No')", "A=list(map(int,input().split()))\nA.sort()\nif A[0]+A[3] == A[1]+A[2]:\n\tprint('Yes')\nelif A[0]+A[1]+A[2] == A[3]:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "a = list(map(int,input().split()))\nif a[0]+a[3] == a[1]+a[2] or a[0]+a[1] == a[2]+a[3] or a[0]+a[2] == a[1]+a[3] or 2*a[0] == sum(a) or 2*a[1] == sum(a) or 2*a[2] == sum(a) or a[3]*2 == sum(a):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "A = list(map(int,input().split()))\nsums = sum(A)\n\nfor i in range(2 ** 4):\n  res = 0\n  for j in range(4):\n    if (i >> j) & 1:\n      res += A[j]\n  if res == sums - res:\n    print(\"Yes\")\n    break\nelse:\n  print(\"No\")", "import sys\nINF = 1 << 60\nMOD = 10**9 + 7 # 998244353\nsys.setrecursionlimit(2147483647)\ninput = lambda:sys.stdin.readline().rstrip()\ndef resolve():\n    A = list(map(int, input().split()))\n    A.sort()\n\n    if sum(A[:3]) == A[3]:\n        print(\"Yes\")\n    elif A[0] + A[3] == A[1] + A[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nresolve()", "# Fortune Cookies\n\n# 1 <= A <= B <= C <= D \u3067\u306f\uff0c\n# A + D = B + C or A + B + C = D \u3092\u8abf\u3079\u308c\u3070\u3088\u3044\n\ndelic = list(map(int, input().split()))\ndelic.sort()\n\nif delic[0] + delic[3] == delic[1] + delic[2]:\n    print(\"Yes\")\nelif sum(delic[0:3]) == delic[3]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "A=list(map(int, input().split()))\nA.sort()\n\nA,B,C,D=A\n\nif A+D==B+C or A+B+C==D or A==B==C==D:\n    print('Yes')\n\nelse:print('No')\n", "x = list(map(int,input().split()))\nfor i in range(3):\n  for j in range(i+1,4):\n    if x[i] > x[j]:\n      x[i], x[j] = x[j], x[i]\nif x[0]+x[1]+x[2] == x[3]:\n  print(\"Yes\")\n  return\nelif x[0]+x[3] == x[1]+x[2]:\n  print(\"Yes\")\n  return\nelse:\n  print(\"No\")", "#region Header\n#!/usr/bin/env python3\n# from typing import *\n\nimport sys\nimport io\nimport math\nimport collections\nimport decimal\nimport itertools\nfrom queue import PriorityQueue\nimport bisect\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\nsys.setrecursionlimit(1000000)\n#endregion\n\n# _INPUT = \"\"\"# paste here...\n# \"\"\"\n# sys.stdin = io.StringIO(_INPUT)\n\n\ndef main():\n    a = sorted(list(map(int, input().split())))\n    if a[0] + a[1] + a[2] == a[3] or a[0] + a[2] == a[1] + a[3] or a[0] + a[3] == a[1] + a[2]:\n        print('Yes')\n    else:\n        print('No')\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from itertools import product\na = list(map(int, input().split()))\ns = sum(a)\nfor bit in product([0, 1], repeat=4):\n    tmp = 0\n    for i, j in enumerate(bit):\n        if j == 1:\n            tmp += a[i]\n    if tmp == s - tmp:\n        print(\"Yes\")\n        return\nprint(\"No\")", "ls = sorted(list(map(int, input().split())))\n\nif ls[0] + ls[3] == ls[1] + ls[2]:\n    print('Yes')\nelif sum(ls[:-1]) == ls[-1]:\n    print('Yes')\nelse:\n    print('No')", "def main():\n    a = list(map(int, input().split()))\n\n    # 1\n    for v in a:\n        if v == sum(a) - v:\n            print(\"Yes\")\n            return\n\n    # 2\n    for i in range(4):\n        for j in range(4):\n            if i == j:\n                continue\n            if a[i] + a[j] == sum(a) - (a[i] + a[j]):\n                print(\"Yes\")\n                return\n\n    print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "L=list(map(int,input().split()))\nS=sum(L)\nN=4\nfor i in range(2**4):\n    a=0\n    b=S\n    for j in range(N):\n        if 1&(i>>j):\n            a+=L[j]\n            b-=L[j]\n    if a==b:\n        print('Yes')\n        return\nprint('No')\n            \n    \n    \n\n", "import itertools\nl = list(map(int, input().split()))\nflag = True\nans = sum(l)\n\n# \u5168\u3066\u306e\u30af\u30c3\u30ad\u30fc\u306e\u4e2d\u304b\u30892\u3064\u3092\u3068\u308b\u5834\u5408\u306e\u63a2\u7d22\nfor i in itertools.combinations(l, 2):\n    if sum(list(i))*2 == ans:\n        print('Yes')\n        flag = False\n        break\n\n# \u5168\u3066\u306e\u30af\u30c3\u30ad\u30fc\u306e\u4e2d\u304b\u30891\u3064\u3092\u3068\u308b\u5834\u5408\u306e\u63a2\u7d22\nfor j in itertools.combinations(l,1):\n    if flag and sum(list(j))*2 == ans:\n        print('Yes')\n        flag = False\n\nif flag:\n    print('No')", "A=list(map(int,input().split()))\nfor i in range(2**4):\n    cnt=0\n    for j in range(4):\n        if i>>j&1:\n            cnt+=A[j]\n        if cnt*2==sum(A):\n            print(\"Yes\")\n            return\nprint(\"No\")", "L = list(map(int, input().split()))\nfor i in range(2**4):\n    a = 0\n    b = 0\n    for j in range(4):\n        if (i >> j)&1:\n            a += L[j]\n        else:\n            b += L[j]\n    if a == b:\n        print('Yes')\n        return\nelse:\n    print('No')\n", "L = list(map(int,input().split()))\nAns = 0\nfor i in range(4):\n    if L[i] == sum(L) - L[i]:\n        Ans += 1 \n\nfor j in range(1,4):\n    if L[0] + L[j] == sum(L) - L[0] - L[j]:\n        Ans += 1\nif Ans != 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n", "L = list(map(int,input().split()))\nN = len(L)\n\n\nS= sum(L)\nfor bit in range(1<<N):\n    t=0\n    for i in range(N):\n        if bit>>i&1:\n            t+=L[i]\n    if S-t==t:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "L = list(map(int, input().split()))\nfor i in range(2**4):\n    a = 0\n    b = 0\n    for j in range(4):\n        if (i >> j)&1:\n            a += L[j]\n        else:\n            b += L[j]\n    if a == b:\n        print('Yes')\n        return\nelse:\n    print('No')\n", "oishisa = list(map(int, input().split()))\n\nsouwa = sum(oishisa)\n\nfor i in range(2**4):\n    wa = 0\n    for j in range(4):\n        if ((i >> j) & 1):\n            wa += oishisa[j]\n\n    if wa == souwa / 2:\n        print('Yes')\n        break\n\n    if i == 15:\n        print('No')", "A=list(map(int,input().split()))\nA.sort()\nif A[0]+A[1]+A[2]==A[3] or A[0]+A[3]==A[1]+A[2]:\n\tprint('Yes')\nelse:\n\tprint('No')\n", "def main():\n    a = list(map(int, input().split()))\n\n    # 1\n    for v in a:\n        if v == sum(a) - v:\n            print(\"Yes\")\n            return\n\n    # 2\n    for i in range(4):\n        for j in range(4):\n            if i == j:\n                continue\n            if a[i] + a[j] == sum(a) - (a[i] + a[j]):\n                print(\"Yes\")\n                return\n\n    print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from itertools import product\n\nA = list(map(int,input().split()))\nx = sum(A)\nans='No'\nfor p in product(range(2),repeat=4):\n#     print(p)\n    y = 0\n    for p_idx,p_ in enumerate(p):\n        if p_ == 1:\n            y += A[p_idx]\n    if x-y == y:\n        ans='Yes'\n#         print(ans,p)\n        \nprint(ans)", "a,b,c,d=map(int,input().split())\nlist=[]\nlist+=[a,b,c,d]\nfor i in range(0,3):\n  if sum(list)-list[i]==list[i]:\n    print('Yes')\n    return\n  else:\n    pass\nif sum(list)-list[0]-list[1]==list[0]+list[1]:\n  print('Yes')\n  return\nelif sum(list)-list[0]-list[2]==list[0]+list[2]:\n  print('Yes')\n  return\nelif sum(list)-list[0]-list[3]==list[0]+list[3]:\n  print('Yes')\n  return\nelif sum(list)-list[1]-list[2]==list[1]+list[2]:\n  print('Yes')\n  return\nelif sum(list)-list[1]-list[3]==list[1]+list[3]:\n  print('Yes')\n  return\nelif sum(list)-list[2]-list[3]==list[2]+list[3]:\n  print('Yes')\n  return\nelse:\n  print('No')", "l=list(map(int,input().split()))\ns=sum(l)/2\nfor i in range(16):\n    tmp=0\n    for j in range(4):\n        if (i>>j)&1:\n            tmp+=l[j]\n    if s==tmp:\n        print(\"Yes\")\n        return\nprint(\"No\")", "A = list(map(int, input().split()))\n\nsumA = sum(A)\nfor i in range(2 ** 4):\n    tmp = 0\n    for j in range(4):\n        if (i >> j) & 1:\n            tmp += A[j]\n    if sumA == tmp * 2: print(\"Yes\"); return\n\nprint(\"No\")", "import sys\ndef S(): return sys.stdin.readline().rstrip()\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LS(): return list(sys.stdin.readline().rstrip().split())\n\na,b,c,d = MI()\nans = \"No\"\nif a == b+c+d:\n    ans = \"Yes\"\nelif b == a+c+d:\n    ans = \"Yes\"\nelif c == a+b+d:\n    ans = \"Yes\"\nelif d == a+b+c:\n    ans = \"Yes\"\nelif a+b == c+d:\n    ans = \"Yes\"\nelif a+c == b+d:\n    ans = \"Yes\"\nelif a+d == b+c:\n    ans = \"Yes\"\n\nprint(ans)", "L=[0]+list(map(int,input().split()))\nS=sum(L)\nif S%2==1:\n    print(\"No\")\n    return\n\nD=[{}for i in range(5)]\nD[0][0]=1\nfor i in range(1,5):\n    for k,v in list(D[i-1].items()):\n        D[i][k]=1\n        D[i][k+L[i]]=1\nif S//2 in D[-1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "abcd = list(map(int, input().split()))\n\nfor bit in range(1 << 4):\n    eat = 0\n    rem = 0\n    for i in range(4):\n        if (bit >> i) & 1:\n            eat += abcd[i]\n        else:\n            rem += abcd[i]\n\n        if eat == rem:\n            print('Yes')\n            return\n\nprint('No')", "import sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10**6)\n\ndef inp():\n    return int(input())\ndef inps():\n    return input().rstrip()\ndef inpl():\n    return list(map(int, input().split()))\ndef inpls():\n    return list(map(str, input().split()))\n\n# import decimal\n# from decimal import Decimal\n# decimal.getcontext().prec = 10\n\n# from heapq import heappush, heappop, heapify\n# import math\nfrom math import gcd, floor, ceil, factorial\nimport itertools as it\nfrom collections import deque, defaultdict\nfrom collections import Counter\n\ndef lcd(a, b):\n    return a * b // gcd(a, b)\n\ndef chmin(dp, i, x):\n    if x < dp[i]: dp[i] = x; return True\n    return False\n\ndef chmax(dp, i, x): \n    if x > dp[i]: dp[i] = x; return True\n    return False\n\n# ---------------------------------------\n\na = inpl()\nsm = sum(a)\n\nif sm % 2 != 0:\n    print(\"No\")\n    return\n\nfor b in range(2**len(a)):\n    s = 0\n    for i in range(len(a)):\n        if 1 & b >> i:\n            s += a[i]\n    if s == sm // 2:\n        print(\"Yes\")\n        return\n\nprint(\"No\")\n", "a=list(map(int,input().split()))\na=sorted(a)\nb=a[0]+a[3]\nc=a[1]+a[2]\nif b==c:\n  print(\"Yes\")\nelse:\n  if a[0]+a[1]+a[2]==a[3]:\n    print(\"Yes\")\n  else:\n    print(\"No\")", "import itertools\nAlist= list(map(int,input().split()))\n\nBlist = Alist\nansflag = False\nfor i in range(1,5):\n  for v in itertools.combinations(Alist, i):\n    if sum(Alist)-sum(v)==sum(v):\n      ansflag = True\n      break\n      \nif ansflag ==True:\n  print ('Yes')\nelse:\n  print ('No')", "abcd = list(map(int,input().split()))\nk = 4\n\nfor i in range(2 ** k):\n    tmp = 0\n    for j in range(k):\n        if ((i >> j) & 1):\n            tmp += abcd[j]\n    if tmp == sum(abcd) - tmp:\n        print('Yes')\n        return\nprint('No')", "s = list(map(int,input().split()))\n\nfor i in range(2**4):\n    total=sum(s)\n    ans=0\n    for j in range(4):\n        if i>>j&1:\n            ans+=s[j]\n            total-=s[j]\n            if ans==total:\n                print(\"Yes\")\n                return\n\nprint(\"No\")", "*a,=map(int,input().split())\nfor s in range(1<<4):\n  x=0\n  for i in range(4):\n    if (1<<i)&s:\n      x+=a[i]\n  if 2*x==sum(a):\n    print(\"Yes\")\n    return\nprint(\"No\")", "A=list(map(int,input().split()))\ncan=False\nfor bit in range (2**4):\n    eat=int(0)\n    uneat=int(0)\n    for i in range (4):\n        if bit & (1<<i):\n            eat+=A[i]\n        else :\n            uneat+=A[i]\n    if eat==uneat:\n        can=True\nif can:\n    print(\"Yes\")\nelse :\n    print(\"No\")", "ls = list(map(int,input().split()))\nls = sorted(ls)\nif ls[3] == ls[0]+ls[1]+ls[2] or ls[3]+ls[0] == ls[1]+ls[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "A,B,C,D=map(int,input().split())\nif A+B==C+D:\n    print('Yes')\nelif A+C==B+D:\n    print('Yes')\nelif A+D==B+C:\n    print('Yes')\nelif A==B+C+D:\n    print('Yes')\nelif B==A+C+D:\n    print('Yes')\nelif C==A+B+D:\n    print('Yes')\nelif D==A+B+C:\n    print('Yes')\nelse:\n    print('No')", "from itertools import combinations\ncookies = tuple(map(int, input().split()))\nif (S := sum(cookies)) & 1:\n    print(\"No\")\nelse:\n    for r in range(4):\n        for some_cookies in combinations(cookies, r):\n            if sum(some_cookies) == S // 2:\n                print(\"Yes\")\n                return\n    print(\"No\")", "a=list(map(int,input().split()))\nfor i in range(4):\n    if a[i]==sum(a)-a[i]:\n        print(\"Yes\")\n        return\nfor i in range(4):\n    for j in range(i+1,4):\n        if a[i]+a[j]==sum(a)-a[i]-a[j]:\n            print(\"Yes\")\n            return\nprint(\"No\")", "a=list(map(int,input().split()))\nfor i in range(16):\n r=0\n for j,k in enumerate(map(int,bin(i)[2:].zfill(4))):\n  r+=a[j]*k\n if r==sum(a)/2:\n  print(\"Yes\")\n  return\nprint(\"No\")", "a,b,c,d=map(int,input().split())\ncand=[a+b,b+c,c+d,d+a,a+c,b+d,a,b,c,d]\ns=sum([a,b,c,d])\nif s%2==1:\n    print(\"No\")\nelif s//2 in cand:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "*I, = list(map(int, input().split()))\nfor p in range(1 << 4):\n    s, r = 0, 0\n    for i in range(4):\n        if p & (1 << i): s += I[i]\n        else: r += I[i]\n    if s == r:\n        print('Yes')\n        return\nprint('No')\n", "s=[int(x) for x in input().split()]\nimport itertools\nl=[]\na=itertools.product(range(2),repeat=4)\nfor i in a:\n    l.append(i)\nfor i in range(16):\n    cnt=0\n    dnt=0\n    for j in range(4):\n        if l[i][j]==1:\n            cnt+=s[j]\n        else:\n            dnt+=s[j]\n    if cnt==dnt:\n        print(\"Yes\")\n        return\nprint(\"No\")", "A=list(map(int,input().split()))\nf=0\nfor i in range(1<<4):\n  c=0\n  for j in range(4):\n    if (i>>j)&1:\n      c+=A[j]\n  if sum(A)/2==c:\n    f=1\n    \nif f:\n  print('Yes')\nelse:\n  print('No')\n", "A = list(map(int, input().split()))\nsu = sum(A)\n\nEat = [[False] * 4 for i in range(2**4)]\n\nfor i in range(2**4):\n    for j in range(4):\n        if i >> j & 1:\n            Eat[i][j] = True\n\nfor E in Eat:\n    a1 = 0\n    for i in range(4):\n        if E[i]:\n            a1 += A[i]\n    if a1 == su - a1:\n        print(\"Yes\")\n        return\n\nprint(\"No\")", "a,b,c,d = map(int, input().split())\n\nimport copy\nw = [a, b, c, d]\n\nflag = False\nfrom itertools import permutations, combinations\nfor i in range(1, 4):\n    for j in combinations(w, i):\n        x = copy.copy(w)\n        for k in j:\n            x.pop(x.index(k))\n        if sum(list(j)) == sum(x):\n            print('Yes')\n            flag = True\n            break\n    if flag:\n        break\nelse:\n    print('No')", "li = list(map(int,input().split()))\nli.sort()\nif (li[0]+li[3] == li[1]+li[2]) or (li[0]+li[1]+li[2]==li[3]):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "A=list(map(int,input().split()))\nn=int(4)\n\ncan=False\nfor bit in range(2**n):\n    all=int(0)\n    for i in range(n):\n        if bit & (1<<i):\n            all+=A[i]\n    if 2*all==sum(A):\n        can=True\nif can:\n    print('Yes')\nelse:\n    print('No')", "import itertools\nflag = True\nl = list(map(int, input().split()))\nfor i in itertools.combinations(l,2):\n    if sum(list(i)) * 2 == sum(l):\n        print('Yes')\n        flag = False\n        break\nfor i in itertools.combinations(l, 1):\n    # \u306a\u305c\u304b\u3053\u3053\u3067i*2\u3060\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u305f\n    if flag and sum(list(i))* 2 == sum(l):\n        print('Yes')\n        flag = False\n\nif flag:\n    print('No')", "import itertools\n\nL = list(map(int,input().split()))\ntotal = sum(L)\n\nfor i in range(1,4):\n    for comb in itertools.combinations(L,i):\n        if sum(comb) == total - sum(comb):\n            print('Yes')\n            return\nprint('No')", "c = list(map(int,input().split()))\ntotal = sum(c)\nans = \"No\"\n\nfor i in range(8):\n    eat = 0\n\n    for j in range(4):\n        if (i>>j)&1:\n            eat += c[j]\n            \n    if eat == total - eat:\n        ans = \"Yes\"\n        \nprint(ans)", "A,B,C,D = sorted(map(int,input().split()))\n\nif A+B+C==D or A+D==B+C:\n  print(\"Yes\")\nelse:\n  print(\"No\")", "\na, b, c, d = map(int, input().split())\n\ns_ = a + b + c + d\n\nans = 'No'\n\nfor i in range(2):\n    for j in range(2):\n        for k in range(2):\n            for l in range(2):\n                if s_ - (a * i + b * j + c * k + d * l) == (a * i + b * j + c * k + d * l):\n                    ans = 'Yes'\n\n\nprint(ans)", "from itertools import product\nl=list(map(int,input().split()))\nbit=list(product([0,1],repeat=len(l)))\nfor i in range(len(bit)):\n    SUM=0\n    for j in range(len(l)):\n        SUM+=l[j]*bit[i][j]\n    if (SUM==sum(l)-SUM):\n        print(\"Yes\")\n        return\nelse:\n    print(\"No\")", "import sys\nfrom math import gcd, factorial, ceil, floor, sqrt\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom heapq import heapify, heappop, heappush\nfrom itertools import permutations, combinations, product, accumulate\nfrom collections import defaultdict, deque, Counter\nfrom functools import lru_cache\nsys.setrecursionlimit(10**8)\n\nii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(map(int, input().split()))\n\nls = li()\ntotal = sum(ls)\nfor x in product([0,1], repeat=4):\n    if x == (0,0,0,0):\n        continue\n    cur = 0\n    for i, y in enumerate(x):\n        if y == 1: cur += ls[i]\n    if 2*cur == total:\n        print('Yes')\n        return\nprint('No')", "C = sorted(list(map(int, input().split())))\nprint(('Yes' if C[0]+C[3]==C[1]+C[2] or sum(C[:3]) == C[3] else 'No'))\n", "Cooky = list(map(int, input().split()))\nans = 'No'\nfor i in range(1,15):\n  tmp = str(bin(i))\n  tmp = tmp[2:]\n  if len(tmp) != 4:\n    tmp = '0'*(4-len(tmp))+tmp\n  sum1, sum2 = 0, 0\n  for j in range(4):\n    if tmp[j] == '1':\n      sum1 += Cooky[j]\n    else:\n      sum2 += Cooky[j]\n  if sum1 == sum2:\n    ans = 'Yes'\n    break\nprint(ans)", "a = sorted(list(map(int, input().split())))\nprint(\"Yes\" if sum(a[:3]) == a[3] or a[0] + a[3] == a[1] + a[2] else \"No\")", "a, b, c, d = map(int, input().split())\n\nif a == (b + c + d):\n  print('Yes')\nelif b == (a + c + d):\n  print('Yes')\nelif c == (a + b + d):\n  print('Yes')\nelif d == (a + b + c):\n  print('Yes')\nelif (a + b) == (c + d):\n  print('Yes')\nelif (a + c) == (b + d):\n  print('Yes')\nelif (a + d) == (b + c):\n  print('Yes')\nelif (b + c) == (c + d):\n  print('Yes')\nelif (b + d) == (a + d):\n  print('Yes')\nelse:\n  print('No')", "a = list(map(int,input().split()))\na.sort()\nif a[0] + a[3] == a[1] + a[2]:\n    print('Yes')\nelif a[0] + a[1] + a[2] == a[3]:\n    print('Yes')\nelse:\n    print('No')", "A = list(map(int, input().split()))\nyes = False\nfor bitset in range(1, 2 ** 4):\n    eat_sum = 0\n    left_sum = 0\n    for j in range(4):   \n        if ((bitset >> j) & 1) == 1:\n            eat_sum += A[j]\n        else:\n            left_sum += A[j]\n        #print(eat_sum, left_sum)\n\n    if eat_sum == left_sum:\n        yes = True\n        break\n\nif yes:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "from itertools import product\na = list(map(int, input().split()))\ns = sum(a)\nfor bit in product([0, 1], repeat=4):\n    tmp = 0\n    for i, j in enumerate(bit):\n        if j == 1:\n            tmp += a[i]\n    if tmp == s - tmp:\n        print(\"Yes\")\n        return\nprint(\"No\")", "a = list(map(int,input().split()))\nfor i in range(4):\n    if a[i] == sum(a)-a[i]:\n        print(\"Yes\")\n        return\nfor i in range(1,4):\n    if a[0] + a[i] == sum(a)-(a[0]+a[i]) :\n\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "a, b, c, d = sorted(map(int, input().split()))\n\nif a + d == b + c or a + b + c == d:\n    print('Yes')\nelse:\n    print('No')\n", "a=list(map(int,input().split()))\ns=sum(a)\na.sort(reverse=True)\nif s%2==1:\n    print(\"No\")\nelse:\n    if s//2==a[0] or s//2==a[0]+a[-1]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef main():\n    A, B, C, D = list(map(int, input().split()))\n    for i in range(2 ** 4):\n        eat = 0\n        rest = 0\n        for j, x in enumerate([A, B, C, D]):\n            if i & (1 << j):\n                eat += x\n            else:\n                rest += x\n\n        if eat == 0:\n            continue\n\n        if eat == rest:\n            print(\"Yes\")\n            return\n    else:\n        print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A=list(map(int,input().split()))\nA.sort()\nif A[3]==A[0]+A[1]+A[2] or A[3]+A[0]==A[1]+A[2]:\n  print('Yes')\nelse:\n  print('No')", "a,b,c,d = map(int,input().split())\ntot = a+b+c+d\nif tot%2==1:\n    print(\"No\")\nelse:\n    if a+b==tot//2 or a+c==tot//2 or a+d==tot//2:\n        print(\"Yes\")\n    elif a==tot//2 or b==tot//2 or c==tot//2 or d==tot//2:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "k= list(map(int, input().split())) \nfor i in range(2**4):\n    eat=0\n    noeat=0\n    for j in range(4):\n        if (i>>j&1):\n            eat+=k[j]\n        else:\n            noeat+=k[j]\n    if eat==noeat:\n        print(\"Yes\")\n        return\nprint(\"No\")", "a, b, c ,d = map(int, input().split())\nl = []\nl.append(a)\nl.append(b)\nl.append(c)\nl.append(d)\nl = sorted(l)\nif l[0]+l[3] == l[1]+l[2]:\n    print(\"Yes\")\nelse:\n    if l[0]+l[1]+l[2] == l[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "import itertools\n\na = list(map(int, input().split()))\ntotal = sum(a)\nif total % 2 != 0:\n    print('No')\n    return\n\np = list(itertools.product([0, 1], repeat=4))\nfor i in range(len(p)):\n    if a[0]*p[i][0] + a[1]*p[i][1] + a[2]*p[i][2] + a[3]*p[i][3] == total // 2:\n        print('Yes')\n        return\nprint('No')\n", "taste = list(map(int,input().split()))\nans = 'No'\n\nfor i in range(2**4):\n    tmp = sum(taste)\n    res = 0\n    for j in range(4):\n        if i>>j & 1:\n            res += taste[j]\n            tmp -= taste[j]\n    if tmp==res:\n        ans = 'Yes'\n        break\n        \nprint(ans)", "import itertools\nflag = True\nl = list(map(int, input().split()))\nfor i in itertools.combinations(l,2):\n    if sum(list(i)) * 2 == sum(l):\n        print('Yes')\n        flag = False\n        break\nfor i in itertools.combinations(l, 1):\n    if flag and sum(list(i)) * 2 == sum(l):\n        print('Yes')\n        flag = False\n\nif flag:\n    print('No')", "def dfs(i, a, b):\n    nonlocal ans\n    if i == 3:\n        if a == b:\n            ans = 1\n    else:\n        dfs(i+1, a + t[i], b)\n        dfs(i+1, a , b+t[i])\n    \n\nt = list(map(int, input().split()))\nans = 0\ndfs(-1, 0, 0)\nif ans == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "a,b,c,d=map(int,input().split())\n\nsum=a+b+c+d\nans=\"No\"\nif a==sum-a or b==sum-b or c==sum-c or d==sum-d:\n    ans=\"Yes\"\n\nif a+b==c+d or a+c==b+d or a+d==b+c:\n    ans=\"Yes\"\n\nprint(ans)"]