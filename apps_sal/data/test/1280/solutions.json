["s = input()\nL = input()\nk = int(input())\n\n'''from datetime import *\ntime1 = datetime.now()'''\ngood = set()\nstring = set()\nLIST = [chr(i) for i in range(97,123)]\nfor i in range(26):\n    if L[i]=='1':\n        good.add(LIST[i])\n\nt = [s[i] not in good for i in range(len(s))]\n\nend = [0]*len(s)\nbadchars = 0\nfront=0; rear=0\nwhile(front<len(s)):\n    while(rear<len(s)):\n        badchars+=t[rear]\n        if badchars>k:\n            badchars-=1\n            break\n        rear+=1\n    end[front]=rear\n    badchars -= t[front]\n    front+=1\n\nfor i in range(len(s)):\n    tempStrHash = 0\n    for j in range(i, end[i]):\n        tempStrHash = (tempStrHash*29+ord(s[j])-96)&1152921504606846975\n        string.add(tempStrHash)\n        \nprint(len(string))\n#print(datetime.now()-time1)\n", "s = input()\na = input()\nk = int(input())\nS=sorted(s[i:] for i in range(len(s)))\np=''\nr=0\nfor e in S:\n    t=0\n    s=0\n    for i in range(len(e)):\n        if i >= len(p) or e[i] != p[i]: s=1\n        t+=a[ord(e[i])-ord('a')]=='0'\n        if t > k:break\n        if s: r+=1\n    p = e\nprint(r)", "s = input()\na = input()\nk = int(input())\nS=sorted(s[i:] for i in range(len(s)))\np=''\nr=0\nfor e in S:\n    t=0\n    s=0\n    for i in range(len(e)):\n        if i >= len(p) or e[i] != p[i]: \n          s=1\n        if a[ord(e[i])-ord('a')]=='0':\n          t+=1\n        if t > k:\n          break\n        if s: \n          r+=1\n    p = e\nprint(r)", "s = input()\nL = input()\nk = int(input())\n\ngood = set()\nstring = set()\nLIST = [chr(i) for i in range(97, 123)]\nfor i in range(26):\n    if L[i] == '1':\n        good.add(LIST[i])\n\nt = [s[i] not in good for i in range(len(s))]\n\nend = [0]*len(s)\nbadchars = 0\nfront = 0\nrear = 0\nwhile(front < len(s)):\n    while(rear < len(s)):\n        badchars += t[rear]\n        if badchars > k:\n            badchars -= 1\n            break\n        rear += 1\n    end[front] = rear\n    badchars -= t[front]\n    front += 1\n\nfor i in range(len(s)):\n    tempStrHash = 0\n    for j in range(i, end[i]):\n        tempStrHash = (tempStrHash*29+ord(s[j])-96) & 1152921504606846975\n        string.add(tempStrHash)\n\nprint(len(string))\n", "s = input()\nl = input()\nk = int(input())\nno_bad = []\ncurr = 0\np  =31\nm = 67280421310721\nhashes = []\ncurrh = 0\ncnt = 0\nP = [pow(p,i,m) for i in range(len(s)+2)]\nfor i in s:\n    currh+=(P[cnt]*ord(i))%m\n    cnt+=1\n    hashes.append(currh)\n    if(l[ord(i) - ord('a')] =='0'):\n        no_bad.append(curr+1)\n        curr+=1\n    else:\n        no_bad.append(curr)\nno_bad.append(0)\nhashes.append(0)\nans = set()\nfor i in range(len(s)):\n    for j in range(i,len(s)):\n        if(no_bad[j] - no_bad[i-1]<=k):\n            has = ((hashes[j] - hashes[i-1])*P[len(s)-i+1])%m\n            ans.add(has)\nprint(len(ans))", "# -*- coding:utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 1/7/20\n\n\"\"\"\n\nimport collections\nimport time\nimport os\nimport sys\nimport bisect\nimport heapq\nfrom typing import List\n\n\ndef solve(S, B, K):\n    MOD = (1 << 50) + 9\n    s = set()\n    \n    N = len(S)\n    pow = [1 for _ in range(N+1)]\n    for i in range(1, N+1):\n        pow[i] = pow[i-1] * 26\n        pow[i] %= MOD\n    \n    for i in range(N-1, -1, -1):\n        k, h = 0, 0\n        for j in range(i, -1, -1):\n            ch = S[j]\n            if B[ch]:\n                k += 1\n            if k > K:\n                # print(i, j, S[i: j+1])\n                break\n            h += (ord(ch) - ord('a') + 1) * pow[i-j]\n            h %= MOD\n            # print(S[i: j + 1], h)\n            s.add(h)\n    return len(s)\n    \n    \nS = input()\nB = list(input())\nK = int(input())\n\nB = {chr(ord('a') + i): False if B[i] == '1' else True for i in range(26)}\nprint(solve(S, B, K))\n\n", "s = input()\na = input()\nk = int(input())\nS=sorted(s[i:] for i in range(len(s)))\np=''\nr=0\nfor e in S:\n    t=0\n    s=0\n    for i in range(len(e)):\n        if i >= len(p) or e[i] != p[i]: s=1\n        t+=a[ord(e[i])-ord('a')]=='0'\n        if t > k:break\n        if s: r+=1\n    p = e\nprint(r)", "s = input()\nL = input()\nk = int(input())\n \n'''from datetime import *\ntime1 = datetime.now()'''\ngood = set()\nstring = set()\nLIST = [chr(i) for i in range(97,123)]\nfor i in range(26):\n    if L[i]=='1':\n        good.add(LIST[i])\n \nt = [s[i] not in good for i in range(len(s))]\n \nend = [0]*len(s)\nbadchars = 0\nfront=0; rear=0\nwhile(front<len(s)):\n    while(rear<len(s)):\n        badchars+=t[rear]\n        if badchars>k:\n            badchars-=1\n            break\n        rear+=1\n    end[front]=rear\n    badchars -= t[front]\n    front+=1\n \nfor i in range(len(s)):\n    tempStrHash = 0\n    for j in range(i, end[i]):\n        tempStrHash = (tempStrHash*29+ord(s[j])-96)&1152921504606846975\n        string.add(tempStrHash)\n        \nprint(len(string))\n", "s = input()\na = input()\nk = int(input())\nd = sorted(s[i:] for i in range(len(s)))\n\nc = ''\nr = 0\n\nfor j in d:\n\tpos = 0\n\ts = 0\n\tfor i in range(len(j)):\n\t\tif i >= len(c) or j[i] != c[i]:\n\t\t\ts = 1\n\t\tif a[ord(j[i]) - ord('a')] == '0':\n\t\t\tpos += 1\n\t\tif pos > k:\n\t\t\tbreak\n\t\tif s:\n\t\t\tr += 1\n\tc = j\nprint(r)", "import sys\nimport math as mt\n#input=sys.stdin.buffer.readline\n#t=int(input())\nt=1\nmod=9007199254740881\nfor ___ in range(t):\n    #n,m=map(int,input().split())\n    s1=input()\n    s2=input()\n    k=int(input())\n    d={}\n    \n    for i in range(len(s1)):\n        suma=0\n        pre=0\n        D=256\n        for j in range(i,len(s1)):\n            pre=(pre*D+ord(s1[j]))%mod\n            posi=ord(s1[j])-ord('a')\n            if s2[posi]=='0':\n                suma+=1\n            if suma<=k:\n                d[pre]=1\n            else:\n                break\n    print(len(d))        ", "s = input()\nL = input()\nk = int(input())\nl=len(s)\ngood = set()\nstring = set()\nLIST = [chr(i) for i in range(97, 123)]\nfor i in range(26):\n    if L[i] == '1':\n        good.add(LIST[i])\nt = [s[i] not in good for i in range(l)]\nend = [0]*l\nsumbad = 0\ni,j=0,0\nwhile i<l:\n    if j<l:\n        sumbad+=t[j]\n    if sumbad>k or j==l:\n        sumbad-=t[i]\n        end[i]=j\n        i+=1\n        if sumbad>k:\n            sumbad-=t[j]\n            continue\n    if j<l:\n        j+=1\nfor i in range(len(s)):\n    t = 0\n    for j in range(i, end[i]):\n        t = (t*29 + ord(s[j])-96)&1152921504606846975\n        string.add(t)\nprint(len(string))", "s=input()\ngood=[int(x) for x in input()]\nk=int(input())\nn=len(s)\nans=0\nmod=10**15+9\ndp=[[0 for _ in range(n)] for _ in range(n)]\nhashes=[(ord(s[0])-ord('a')+1)]\nif good[ord(s[0])-ord('a')]:\n    dp[0][0]=0\nelse:\n    dp[0][0]= 1\nfor i in range(1,n):\n    hashes.append(hashes[-1]+(ord(s[i])-ord('a')+1)*(29**i))\nfor i in range(n):\n    hashes[i]=hashes[i]%(mod)\nocc=set()\nppowi=[]\nfor i in range(n+1):\n    ppowi.append((29**i)%mod)\nfor i in range(n):\n    for j in range(i,n):\n        if i-1>=0:x=((hashes[j]-hashes[i-1])*(ppowi[n-i]))%mod\n        else:x=((hashes[j])*(ppowi[n]))%mod\n        if i==0 and j==0:\n            dp[i][j]=1^good[ord(s[j])-ord('a')]\n        elif good[ord(s[j])-ord('a')]==0:\n            dp[i][j]=dp[i][j-1]+1\n        else:\n            dp[i][j]=dp[i][j-1]\n        if dp[i][j]>k:break\n        if dp[i][j]<=k:\n            occ.add(x)\nprint(len(occ))", "import collections as cc\nimport sys\ninput=sys.stdin.readline\nI=lambda:list(map(int,input().split()))\nS=lambda :list(input().strip())\ns=S()\nt=S()\nk,=I()\nans=0\nprev=''\nss=sorted([s[i:] for i in range(len(s))])\nfor j in ss:\n\tnow=0\n\tf=0\n\tfor i in range(len(j)):\n\t\tif i>=len(prev) or j[i]!=prev[i]:\n\t\t\tf=1\n\t\tnow+=t[ord(j[i])-ord('a')]=='0'\n\t\tif now>k:\n\t\t\tbreak\n\t\tif f:\n\t\t\tans+=1\n\tprev=j\nprint(ans)"]