["n = int(input())\nm = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\n\nmx = max(a) + m\n\n\n\nwhile m:\n    for i in range(n):\n        if a[i] == min(a):\n            a[i] += 1\n            m -= 1\n            break\n\nprint(max(a), mx)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \n\nN = int(input())\n\nM = int(input())\nza = []\nfor i in range(N):\n    za.append( int(input()) )\n    \nt = sum(za)\n\nx = (t+ M - 1) //N + 1\nprint( max(x, max(za)), max(za) + M)\n\n\n\n\n\n\n", "from math import ceil\n\nn = int(input())\nm = int(input())\n\nbs = []\nfor _ in range(n):\n    bs.append(int(input()))\n\nb = max(bs)\ntotal = sum(bs) + m\n\nmaximum = b + m\nif total <= b * n:\n    minimum = b\nelse:\n    minimum = int(ceil(total / n))\n\nprint(minimum, maximum)\n", "n = int(input())\nm = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\n\nmxa = max(a)\nrmx = mxa + m\nfor x in a:\n    m -= mxa - x\n\nrmn = mxa\nif m > 0:\n    rmn += (m + n - 1) // n\n\nprint(rmn, rmx)", "n = int(input())\nm = int(input())\n\naa = []\nfor i in range(n):\n    aa += [int(input())]\n\nmaxAns = max(aa) + m\n\nrest = max(aa) * n - sum(aa)\nif m <= rest:\n    minAns = max(aa)\nelse:\n    m -= rest\n    minAns = max(aa) + (m + n - 1) // n\n\nprint(minAns, maxAns)", "import math\nn = int(input())\nm = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\nmaxs = max(a)\nm1 = m\nfor i in a:\n    m -= (maxs - i)\n\nprint(maxs + max(math.ceil(m / n), 0), maxs + m1)\n\n", "n = int(input())\nm = int(input())\nu = []\nfor i in range(n):\n    u.append(int(input()))\nk = max(u)\na1 = k + m\nfor i in range(n):\n    m -= k - u[i]\nif m > 0:\n    k += m // n\n    if m % n != 0:\n        k += 1\nprint(k, a1)\n", "n=int(input())\nm=int(input())\na=[int(input()) for i in range(n)]\nmax_k= max(a)+m\nmax_a=max(a)\nfor ax in a:\n    m-=max_a-ax\nmin_k = max(a)\nif m>0:\n    min_k += m//n\n    if m%n>0:\n        min_k+=1\nprint(min_k, max_k)\n\n\n\n", "n, m = int(input()), int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\nma = max(a) + m\nm -= max(a) * n - sum(a)\nmi = max(a) + max(0, (m + n - 1) // n)\nprint(mi, ma)\n", "n = int(input())\nm = int(input())\na = sorted([int(input()) for i in range(n)])\nans2 = max(a) + m\nfor i in range(n):\n  m -= a[-1] - a[i]\n  a[i] += a[-1] - a[i]\nans1 = a[-1] if m <= 0 else a[-1] + (m + n - 1) // n\nprint(ans1, ans2)\n", "n = int(input())\nm = int(input())\na = [int(input()) for _ in range(n)]\n\nans = [max(a), max(a) + m]\nd = m - n * max(a) + sum(a)\nif 0 < d:\n    ans[0] += (d + n - 1) // n\n\nprint(\" \".join(map(str, ans)))\n", "n=int(input())\nm=int(input())\nl=[0 for i in range(n)]\nfor i in range(n):\n\tl[i]=int(input())\nd1=max(l)\nd2=min(l)\ne=sum(l)\nr=(e+m)\nif (r%n==0):\n\tr1=r//n\nelse:\n\tr1=r//n+1\nprint (max(d1,r1),d1+m)", "n = int(input())\nm = int(input())\nl = []\nfor i in range(n):\n\tl.append(int(input()))\nma = max(l)\nmx = ma+m\nl.sort()\nfor i in range(n):\n\tm-=(ma-l[i])\nif(m<=0):\n\tmi = ma\nelse:\n\tmi = ma+m//n\n\tif(m%n!=0):\n\t\tmi+=1\nprint(mi,mx)", "n = int(input())\nm = int(input())\na = []\nfor _ in range(n):\n    a.append(int(input()))\na = sorted(a)\nmax_i = max(a) + m\nfor i in range(m):\n    a[0] += 1\n    a = sorted(a)\nmin_i = max(a)\nprint(min_i, max_i)", "# ns=[int(x)for x in input().split()]\nn=int(input())\nm=int(input())\nns=[]\nfor _ in range(n):\n    ns.append(int(input()))\nmaxx=max(ns)\nans2=maxx+m\n\nhole=0\nfor t in ns:\n    hole+=maxx-t\n\nif hole>=m:\n    ans1=maxx\nelse:\n    m-=hole\n    ans1=maxx+(m//n)\n    if m%n!=0:\n        ans1+=1\nprint(ans1,ans2)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\nimport math\n\nn       = int(input())\nm       = int(input())\na       = []\n\nfor i in range(n):\n    a.append(int(input()))\n\nstart   = time.time()\n\nmax_now = max(a)\nsum     = 0\n\nfor i in range(n):\n    sum += max_now-a[i]\n\nans_max = max_now+m\nif sum >= m:\n    ans_min = max_now\nelse:\n    ans_min=max_now+math.ceil((m-sum)/n)\n\nprint(ans_min, ans_max)\nfinish = time.time()\n#print(finish - start)\n", "import math\nn = int(input())\nm = int(input())\nx = m\n\narr = []\nfor i in range(n):\n    arr.append(int(input()))\n\nmaxx = max(arr)\n\nsumm = 0\n\nfor i in range(n):\n    if arr[i] <= maxx:\n        if m >= maxx - arr[i]:\n            m -= maxx - arr[i]\n            arr[i] = maxx\n        else:\n            arr[i] += m\n            m = 0\n\nprint(maxx + math.ceil(m/n), maxx + x)\n\n", "import math\nn=int(input())\nm=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\n\nx=max(a)\ny=min(a)\nop=((sum(a)+m)/n)\n# print(op)\nif(op!=int(op)):\n    op=op+1\nprint(max(x,int(op)),x+m)\n", "n = int(input())\nm = int(input())\na = [int(input()) for _ in range(n)]\ns = sum(a)\nmn, mx = min(a), max(a)\nmx_k = mx + m\nm -= mx * n - s\nif m > 0:\n    mx += m // n\n    mx += 1 if m % n else 0\nprint(mx, mx_k)\n", "n=int(input())\nm=int(input())\nA=[int(input()) for i in range(n)]\n\nA.sort()\nANS2=max(A)+m\n\nwhile m!=0:\n    x=min(A)\n    i=0\n    while i<n and m!=0:\n        if A[i]==x:\n            A[i]+=1\n            i+=1\n            m-=1\n        else:\n            break\n\n    A.sort()\n\n    \nprint(max(A),ANS2)\n", "n=int(input().rstrip())\nm=int(input().rstrip())\nL=[]\nfor _ in range(n):\n    a=int(input().rstrip())\n    L.append(a)\nmax_a=m+max(L)\nk=m\nwhile(k):\n    L[L.index(min(L))]=min(L)+1\n    k=k-1\nmin_a=max(L)\nprint(str(min_a)+\" \"+str(max_a))", "n = int(input())\nm = int(input())\nmax_k = 0\nsum = 0\nmin_k = 0\nfor i in range(n):\n    a = int(input())\n    sum += a\n    min_k = max(min_k, a)\n\n# avg_k = sum / n + (1 if sum % n != 0 else 0)\nmax_sum = min_k * n\nmax_k = min_k + m\nif max_sum < sum + m:\n    m -= (max_sum - sum)\n    min_k += m // n + (1 if m % n != 0 else 0)\n\nprint(min_k, max_k)\n\n\n", "import sys\nimport math\n\ninput = sys.stdin.readline\nn = int(input())\nm = int(input())\na_list = []\na_max = 0\nfor _ in range(n):\n    a = int(input())\n    if a_max < a:\n        a_max = a\n    a_list.append(a)\ntmp = 0\nfor a in a_list:\n    tmp += a_max-a\nif tmp >= m:\n    a_min = a_max\nelse:\n    a_min = a_max + math.ceil((m-tmp)/n)\nprint(a_min, a_max+m)\n", "import heapq\nN = int(input())\nM = int(input())\nsrc = [int(input()) for i in range(N)]\n\nmx = max(src) + M\n\nhq = src[:]\nheapq.heapify(hq)\n\nfor i in range(M):\n    m = heapq.heappop(hq)\n    heapq.heappush(hq, m+1)\nwhile hq:\n    mn = heapq.heappop(hq)\n\nprint(mn, mx)\n"]