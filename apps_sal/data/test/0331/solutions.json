["n, m, k = list(map(int, input().split()))\nm -= 1\nline = list(map(int, input().split()))\nanswer = n\nfor i in range(n):\n    if line[i] == 0:\n        continue\n    if line[i] > k:\n        continue\n    answer = min(answer, abs(m - i))\nprint(answer * 10)", "n,m,k=[int(i) for i in input().split()]\nm-=1\na=[int(i) for i in input().split()]\nans=1000000\nfor i in range(n):\n    if a[i]!=0 and a[i]<=k:\n        ans=min(ans,abs(i-m))\nprint(ans*10)", "n, m, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\nb = []\nfor i in range(len(a)):\n    if a[i] != 0 and a[i] <= k:\n        b.append(abs(i + 1 - m))\nprint(min(b) * 10)\n\n", "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 10 ** 10\nfor i in range(n):\n    if a[i] != 0 and a[i] <= k:\n        ans = min(ans, abs(i - (m - 1)) * 10)\n        \nprint(ans)", "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 10 ** 13\nm -= 1\nfor i in range(n):\n    if a[i] != 0 and a[i] <= k and ans > abs(i - m) * 10:\n        ans = 10 * abs(i - m)\nprint(ans)", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nr = 10000\nfor i in range(n):\n    if a[i] <= k and a[i] != 0:\n        r = min(r, abs(m-i-1))\nprint(r*10)\n", "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\nmn = 10 ** 9\nfor i in range(n):\n\tif i != m - 1 and a[i] <= k and a[i] != 0:\n\t\tmn = min(mn, abs(m - i - 1) * 10)\nprint(mn)", "n, m, k = [int(x) for x in input().split()]\ncosts = [int(x) for x in input().split()]\nans = 10000000000\nm = m-1\nfor index, cost in enumerate(costs):\n    if cost != 0 and cost <= k:\n        ans = min(ans, abs(m-index))\nprint(ans*10)\n", "import heapq\nfrom collections import deque\nimport sys\n\n#\n# f = open('input.txt')\n# sys.stdin = f\n\n\nn,m,k=map(int,input().split())\nm-=1\ns=list(map(int,input().split()))\nd = n*2\nfor i in range(n):\n    if s[i] and s[i]<=k:\n        tmp=abs(i-m)\n        if tmp<d:\n            d=tmp\nprint(d*10)", "n, m, k = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\nans = 10000000000\nfor i in range(n):\n    if s[i] <= k and s[i]:\n        ans = min( ans, 10* abs(m-1-i))\n\nprint(ans)", "n, m, k = [ int(x) for x in input().split() ]\na = [ int(x) for x in input().split() ]\n\nm -= 1\n\nr = 1000000\n\nfor i, x in enumerate(a):\n    if 0 < x <= k:\n        r = min(r, abs(i - m) * 10)\n\nprint(r)\n", "from sys import stdin, stdout\n\nn, m, k = map(int, stdin.readline().split())\nchallengers = list(map(int, stdin.readline().split()))\nm -= 1\n\ni = 1\nans = 10\nwhile True:\n    if m + i < n and challengers[m + i] and challengers[m + i] <= k:\n        break\n    \n    if m - i >= 0 and challengers[m - i] and challengers[m - i] <= k:\n        break\n    \n    ans += 10\n    i += 1\n\n\nstdout.write(str(ans))", "n, m, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\nm -= 1\n\nml = mr = 10000000000\n\nfor i in range(m + 1, n):\n    if a[i] != 0 and a[i] <= k:\n        mr = i\n        break\n\nfor i in range(m - 1, -1, -1):\n    if a[i] != 0 and a[i] <= k:\n        ml = i\n        break\n\nprint(min(abs(m - ml), abs(m - mr)) * 10)", "import sys\n\ndef solve():\n    n, m, k = map(int, input().split())\n    m = m - 1\n    a = [int(i) for i in input().split()]\n\n    min_d = 10**9\n\n    for i in range(n):\n        if 0 < a[i] <= k:\n            min_d = min(min_d, abs((m - i)) * 10)\n\n    ans = min_d\n    print(ans)\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef __starting_point():\n    solve()\n__starting_point()", "#!/bin/python3\n\nimport sys\nn, m , k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = n ;\nfor i in range(n):\n    if a[i] != 0 and a[i] <= k and ans > abs(m - i - 1):\n        ans = abs(m - i - 1)\nprint(ans*10)\n", "n,m,k=map(int,input().split())\nl=list(map(int,input().split()))\nans=11**11\nfor i in range(n):\n    if i==m-1 or l[i]>k or l[i]==0: continue\n    if abs(m-1-i)<ans: ans=abs(m-1-i)\nprint(ans*10)", "n,m,k = list(map(int, input().split()))\na = list(map(int, input().split()))\nm -= 1\nans = 1000\nfor i in range(m, -1 , -1):\n    if a[i] and a[i] <= k:\n        ans = m - i\n        break\nfor i in range(m, n):\n    if a[i] and a[i] <= k:\n        ans = min(ans, i - m)\n        break\nprint(ans * 10)\n", "n, m, k = list(map(int, input().split()))\nm -= 1\nprint(10 * min(abs(i - m) for i, c in enumerate(map(int, input().split())) if 0 < c <= k))\n", "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\nm-=1\nbe = -1\naf = n + 1\nfor i in range(n):\n\tif a[i] <= k and a[i] != 0 and i < m and i > be:\n\t\tbe = i\n\telif a[i] <= k and a[i] != 0 and i > m and i < af:\n\t\taf = i\nif be == -1:\n\tprint((af-m)*10)\nelif af == n+1:\n\tprint((m-be)*10)\nelse:\n\tprint(10*min(m-be, af-m))", "n, m, k = map(int, input().split())\ndata = map(int, input().split())\ntemp = [abs(m-1-i) for i, v in enumerate(data) if v and v <= k]\nres = min(temp)\nprint(res*10)", "n, m, k = map(int, input().split())\ndist = 1e10\na = [int(i) for i in input().split()]\nfor i in range(n):\n    if a[i] > 0 and a[i] <= k:\n        dist = min(dist, abs(m - 1 - i))\nprint(dist * 10)", "n, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nmin_dist = n + 1\nm -= 1\n\nfor i in range(len(a)):\n    if a[i] > 0 and a[i] <= k:\n        min_dist = min(min_dist, abs(i - m))\n\nprint(min_dist * 10)\n", "n, m, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nm-=1\n\n\nmin_dist = n+1\nmin_index = -1\nfor i in range(len(A)):\n    if A[i] != 0 and A[i] <= k and abs(i-m) <= min_dist:\n        min_index = i\n        min_dist = abs(i-m)\n\n\nprint(min_dist*10)\n\n", "n, m, k = list(map(int, input().split()))\n\nl=list(map(int, input().split()))\n\nm=m-1\nlp=m-1\nrp=m+1\nfound=False\nansr=10000000\nif rp<n:\n    while not found and rp<n:\n        if l[rp]!=0 and l[rp]<=k:\n            ansr=rp-m\n            found = True\n        rp+=1\n    found = False\nelse:\n    ansr=100000\nansl=1000000\nif lp>=0:\n    while not found and lp>=0:\n        if l[lp]!=0 and l[lp]<=k:\n            ansl=m-lp\n            found = True\n        lp-=1\nelse:\n    ansl=100000\nprint(min(ansr, ansl)*10)\n"]