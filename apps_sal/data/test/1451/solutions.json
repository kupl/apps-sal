["n, k = list(map(int, input().split()))\nprint(sum(s.count('4')+s.count('7')<=k for s in input().split()))", "n,k=list(map(int,input().split()))\nL=list(map(str,input().split()))\nans=0\nfor l in L:\n    if (l.count('4')+l.count('7'))<=k:\n        ans+=1\nprint(ans)\n", "n, k = map(int,input().split())\na = list(map(int,input().split()))\n\nanswer = 0\nfor i in a:\n    if str(i).count('7') + str(i).count('4') <= k:\n        answer += 1\nprint(answer)", "#http://codeforces.com/problemset/problem/262/A you start\n\nn,k = list(map(int,input().split()))\n\n#print(n)\n#print(k)\n\ndef lcount(x): #scott is this syntax right\n    #print (x)\n    if x > 0: #steven\n        return lcount (int(x/10)) + (1 if x%10 == 4 or x%10 == 7 else 0)\n    else: return 0 #steven recursion everything no loops? :P\ninp = []\ntot = 0\ndef solve(x): #main loop for n\n    if x < n: #steven go ternary\n        nonlocal tot\n        tot += (1 if lcount(int(inp[x])) <= k else 0)\n        solve (x+1) #ok why not put solve(x+1) in the if too?\ninp=input().split()\nsolve(0)\nprint (tot)#steven\n\n\n\n\n\n#rte yeah what happened\n#might be my silly map nope silly int(input)\n#still more bugs\n#where are bugs?\n#do we have to return?\n#i think python lets you return whatever the hell you want still rte\n#shit input() reads line not token oh LOL have to do that for the #s also wait there should be some way to read token right?\n#idk prolly not? maybe\n#did this ac yet nope\n#btw ideone gives you compile info\n#http://ideone.com/bYnMX2\n#this tot thing is screwing us up\n#the first 2 nums printed are n,k for debug\n#can we pass pointers to ints or references or anything\n#oh the problem is tot is global\n#nonlocal or local? \n", "#http://codeforces.com/problemset/problem/262/A you start\n\nn,k = list(map(int,input().split()))\n\n#print(n)\n#print(k)\n\ndef lcount(x): #scott is this syntax right\n    #print (x)\n    if x > 0: #steven\n        return lcount (x//10) + (1 if x%10 == 4 or x%10 == 7 else 0)\n    else: return 0 #steven recursion everything no loops? :P\ninp = []\ntot = 0\ndef solve(x): #main loop for n\n    if x < n: #steven go ternary\n        nonlocal tot\n        tot += (1 if lcount(int(inp[x])) <= k else 0)\n        solve (x+1) #ok why not put solve(x+1) in the if too?\ninp=input().split()\nsolve(0)\nprint (tot)#steven\n\n\n\n\n\n#rte yeah what happened\n#might be my silly map nope silly int(input)\n#still more bugs\n#where are bugs?\n#do we have to return?\n#i think python lets you return whatever the hell you want still rte\n#shit input() reads line not token oh LOL have to do that for the #s also wait there should be some way to read token right?\n#idk prolly not? maybe\n#did this ac yet nope\n#btw ideone gives you compile info\n#http://ideone.com/bYnMX2\n#this tot thing is screwing us up\n#the first 2 nums printed are n,k for debug\n#can we pass pointers to ints or references or anything\n#oh the problem is tot is global\n#nonlocal or local? \n#http://ideone.com/5A6nbE the shit\n#//\n#AC yo how the hell you need //10\n#oh lol i guess that works too\n", "n,k=list(map(int,input().split()))\n\nA=list(input().split())\nans=0\nfor item in A:\n    if(item.count('4')+item.count('7')<=k):\n        ans+=1\nprint(ans)\n", "import sys\nmy_file = sys.stdin\n#my_file = open(\"input.txt\", \"r\")\nline = my_file.readline().strip(\"\\n\").split()\nn, k = int(line[0]), int(line[1])\na = my_file.readline().split()\ncount = 0\nfor i in a:\n    if i.count(\"4\") + i.count(\"7\") <= k:\n        count += 1\nprint(count)", "3\n\nn, k = list(map(int, input().split()))\na = input().split()\n\ntmp = [len([1 for c in list(v) if c in ('4', '7')]) for v in a]\nprint(len([1 for _ in tmp if _ <= k]))\n", "n, k = map(int, input().split())\nt = list(input().split())\nprint(sum([(i.count('4') + i.count('7')) <= k for i in t]))", "def count_lucky_numbers(l):\n    counter = 0\n    for i in range(len(l)):\n        if l[i] == '4' or l[i] == '7':\n            counter += 1\n    return counter\n\ndef how_many_below(l, k):\n    counter = 0\n    for item in l:\n        if count_lucky_numbers(item) <= k:\n            counter +=1\n    return counter\n\n\n\ndef main():\n    first_line = input()\n    first_line = first_line.split()\n    \n    n = int(first_line[0])\n    k = int(first_line[1])\n    \n\n    l = input()\n    l = l.split()\n\n    \n    \n    print(how_many_below(l, k))\n    \nmain()\n", "n,k=list(map(int,input().split()))\na=input().split()\nans=0\nfor i in range(n):\n    if(a[i].count('4')+a[i].count('7')<=k):\n        ans+=1\nprint(ans)\n        \n        \n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    if str(a[i]).count('4') + str(a[i]).count('7') <= k: cnt += 1\n\nprint(cnt)\n\n", "a,b=list(map(int,input().split()))\na=list(map(str,input().split()))\nc=0\nfor i in a:\n    if i.count('4')+i.count('7')<=b:\n        c+=1;\nprint(c)", "n, k = [int(x) for x in input().split()]\nnumbers = input().split()\n\nresult = 0\nfor number in numbers:\n    count = 0\n    for x in number:\n        if x == '4' or x == '7':\n            count += 1\n    if count <= k:\n        result += 1\n\nprint(\"%d\" % result)\n", "n,k=list(map(int,input().split()))\n\nL=input().split()\nans=0\nfor i in range(n):\n    x=0\n    for item in L[i]:\n        if(item=='4' or item=='7'):\n            x+=1\n    if(x<=k):\n        ans+=1\nprint(ans)\n", "n_k = list(map(int,input().split()))\nnumbers = list(map(int,input().split()))\n\noutput = 0\nfor i in range(len(numbers)):\n    i_str = str(numbers[i])\n    lucky = 0\n    for j in range(len(i_str)):\n        if i_str[j] == '4' or i_str[j] == '7' :\n            lucky += 1\n    if lucky <= n_k[1] :\n        output += 1\nprint(output)\n", "__copyright__ = ''\n__author__ = 'Son-Huy TRAN'\n__email__ = \"sonhuytran@gmail.com\"\n__doc__ = ''\n__version__ = '1.0'\n\n\ndef has_not_more_than_k_lucky(number: str, k: int) -> bool:\n    return number.count('4') + number.count('7') <= k\n\n\ndef count_lucky(numbers: list, k: int) -> int:\n    return sum(has_not_more_than_k_lucky(number, k) for number in numbers)\n\n\ndef main() -> int:\n    (n, k) = map(int, input().split())\n    numbers = input().split()\n\n    print(count_lucky(numbers, k))\n    return 0\n\n\ndef __starting_point():\n    exit(main())\n__starting_point()", "n, k = map(int, input().split())\nprint(len([i for i in input().split() if i.count('4') + i.count('7') <= k]))", "n, k = [int(i) for i in input().split()]\n\nprint(sum(i.count(\"4\") + i.count(\"7\") <= k for i in input().split()))\n", "#July 4, 2013\ndef luck(n):\n    total=0\n    for char in n:\n        if char=='4' or char=='7':\n            total+=1\n    return total\nsa=input().split(' ')\nmagic=int(sa[1])\ncheck=input().split(' ')\ntotal1=0\nfor element in check:\n    if luck(element)<=magic:\n        total1+=1\nprint(total1)\n", "def nld(n):\n    val = 0\n    while n > 0:\n        if n % 10 in (4, 7):\n            val += 1\n        n //= 10\n    return val\n\nn, k = (int(x) for x in input().split())\nprint(sum(1 for x in (int(x) for x in input().split()) if nld(x) <= k))", "import sys\nimport math\n\ndef fcount(val):\n    count = 0\n    for i in range(len(val)):\n        if(val[i] == '7' or val[i] == '4'):\n            count += 1\n    return count\n    \nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nai = list((sys.stdin.readline()).split())\n\nresult = 0\nfor c in ai:\n    if(fcount(c) <= k):\n        result += 1\n        \nprint(result)", "n, k = map(int, input().split());\na = list(map(str, input().split()))\nans = 0\nfor i in range(len(a)):\n    if a[i].count('4') + a[i].count('7') <= k:\n        ans += 1\nprint(ans)", "n, k = [int(x) for x in input().split()]\nl = [x for x in input().split()]\nans = 0\nfor x in l:\n\tif x.count('4') + x.count('7') <= k:\n\t\tans += 1\nprint(ans)\n", "def main():\n    n, k = map(int, input().strip().split())\n    print(sum(s.count('4') + s.count('7') <= k for s in input().strip().split()))\n\n\nmain()"]