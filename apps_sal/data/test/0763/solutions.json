["n = int(input())\nline = input().split()\nans = 0\nfor i in range(n):\n    ans += int(line[i])*i\nprint(4*ans)\n", "def d(x,i,a):\n    return 2*a*(abs(x-i) + abs(i-1) + abs(1-x))\n\nn = int(input())\narr = [int(k) for k in input().split()]\n\ndef e(x):\n    return sum(d(x,i+1,a) for (i,a) in enumerate(arr))\n\nprint(min(e(x) for x in range(1, n+1)))\n", "n = int(input())\nnum = list(map(int, input().split()))\nans = 10 ** 18\nfor x in range(1, n + 1):\n    res = 0\n    for i in range(1, n + 1):\n        res += (abs(x - i) + abs(i - 1) + abs(x - 1)) * num[i - 1]\n    for i in range(1, n + 1):\n        res += (abs(x - 1) + abs(i - 1) + abs(x - i)) * num[i - 1]\n    ans = min(res, ans)\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\ncosts=[]\nfor i in range(n):\n    tot=0\n    for j in range(n):\n        tot+=4*a[j]*max((i,j))\n    costs.append(tot)\nprint(min(costs))", "n = int(input())\nans = 10000000000\na = [int(i) for i in input().split()]\nfor i in range(0, n):\n    d = 0\n    for j in range(n):\n        d += 2 * a[j] * (abs(i - j) + j + i)\n    ans = min(ans, d)\nprint(ans)\n", "from sys import stdin, stdout\nfrom math import sin, tan, cos, pi, atan2, sqrt, acos, atan, factorial\n\n\nn = int(stdin.readline())\nvalues = list(map(int, stdin.readline().split()))\nans = float('inf')\n\nfor i in range(n):\n    cnt = 0\n    \n    for j in range(n):\n        cnt += values[j] * ((abs(i - j) + j + i) + (i + j + abs(j - i)))\n    \n    ans = min(ans, cnt)\n\nstdout.write(str(ans))", "n = int(input())\nl = [*map(int, input().split())]\ndef cost(x):\n    x -= 1\n    res = 0\n    for i in range(n):\n        res += l[i] * (abs(x - i) + abs(i - 0) + abs(0 - x))\n    return res\nres = float('inf')\nfor x in range(1, n + 1):\n    res = min(res, cost(x))\nprint(2 * res)", "n = int(input())\na = list(map(int, input().split()))\nmin_en = 10000000000\nfor i in range(n):\n    x = i\n    en = 0\n    for j in range(n):\n        en += (abs(j - x) + abs(j) + abs(x)) * 2 * a[j]\n    if en < min_en:\n        min_en = en\nprint(min_en)\n", "n=int(input())\nh=list(map(int,input().split()))\nans=[]\nfor i in range (n):\n    s=0\n    for y in range (n):\n        s+=(abs(i-y)+y+i+i+y+abs(i-y))*h[y]\n    ans.append(s)\nprint(min(ans))\n", "def cost(n,arr,x):\n    tot = 0\n    for i in range(n):\n        tot +=(abs(x-i) + i + x)*arr[i]\n    return tot*2\ndef prog():\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    currcost = 10**18\n    for i in range(n):\n        currcost = min(currcost,cost(n,arr,i))\n    return currcost\nprint(prog())", "n = int(input())\na = list(map(int, input().split()))\nminn = 10000000\nfor i in range(n):\n    summ=0\n    for j in range(n):\n        summ+=a[j]*2*(abs(j)+abs(j-i)+abs(i))\n    if summ<minn:\n        minn=summ\nprint(minn)", "n = int(input())\np = [int(k) for k in input().split()]\n\nres = None\nbest = None\nfor x in range(1, n + 1):\n    cur = 0\n    for i, v in enumerate(p):\n        cur += v * (abs(x - (i + 1)) + i + (x - 1) + x - 1 + i + abs(x - (i + 1)))\n    if res is None or cur < res:\n        res = cur\n        best = x\nprint(res)", "import math, sys, itertools\n\ndef mp():\n    return list(map(int, input().split()))\n\ndef main():\n    n = int(input())\n    a = mp()\n    ans = int(1e9)\n    for i in range(n):\n        res = 0\n        for j in range(n):\n            res += a[j] * (2 * i + 2 * abs(i - j) + 2 * j)\n        # print(res)\n        ans = min(ans, res)\n    print(ans)\n        \n\ndeb = 0\nif deb:\n    file = open('input.txt', 'r')\n    input = file.readline\nelse:\n    input = sys.stdin.readline\n    \nmain()", "n = int(input())\n\nA = [int(x) for x in input().split()]\n\ndef cost(x):\n  res = 0\n  for i, a in enumerate(A):\n    # Down:\n    res += (abs(x-i) + abs(i-0) + abs(x-0)) * a\n\n    # Up:\n    res += (abs(x-0) + abs(0-i) + abs(i-x)) * a\n\n  return res\n\nprint(min(cost(x) for x in range(len(A))))\n", "n=int(input())\na=[int(s) for s in input().split()]\nmn=float('inf')\nfor i in range(1,n+1):\n    sum=0\n    for j in range(n):\n        sum+=a[j]*(abs(j+1-i)+j+i-1)*2\n    mn=min(mn,sum)\nprint(mn)\n", "\nimport sys\ndef __starting_point():\n    input = sys.stdin.read()\n    n, *a = list(map(int, input.split()))\n    sum1 = 0\n    for i in range(len(a)):\n        sum1+=a[i]*i*2\n    print(sum1*2)\n__starting_point()", "from sys import stdin, stdout\nfrom math import *\nfrom heapq import *\nfrom collections import *\n\ndef main():\n    n=int(stdin.readline())\n    a=[0]+[int(x) for x in stdin.readline().split()]\n    res=1\n    minc=99999999999999999999999999999\n    for x in range(1,n+1):\n        c=0\n        for i in range(1,n+1):\n            c=c+(a[i]*(abs(i-x)+abs(i-1)+abs(1-x)  + abs(x-1)+abs(1-i)+abs(i-x)))\n        if (c<minc):\n            res=x\n            minc=c\n    stdout.write(str(minc))\n    return 0\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\nans=10e9\nfor i in range(n):\n    k=0\n    for j in range(n):\n        k+=(abs(j-i)+j+i)*a[j]*2\n    ans=min(k,ans)\nprint(ans)\n", "n = int(input())\narr = [int(x) for x in input().split()]\n\n\ndef get_for(x):\n    nonlocal n, arr\n\n    ret = 0\n    for i in range(n):\n        ret += (abs(x-i) + i + x) * arr[i] * 2\n\n    return ret\n\nmn = get_for(0)\nfor i in range(1, n):\n    mn = min(mn, get_for(i))\n\nprint(mn)\n\n", "n=int(input())\nL=[int(i) for i in input().split()]\ns=0\nfor i in range(len(L)):\n    s=s+L[i]*i*4\nprint(s)\n", "n = int(input())\na = list(map(int, input().split()))\nm = float(\"inf\")\nfor x in range(n):\n    e = 0\n    for f in range(n):\n        e += a[f] * (abs(x - f) + f + x) * 2\n    m = min(e, m)\nprint(m)\n", "n = int(input())\n\na = list(map(int, input().split()))\n\nans = 0\ne = 10 ** 9\n\nfor i in range(n):\n    ne = 0\n    for j in range(n):\n        ne += (abs(i - j) + j + i) * 2 * a[j]\n\n    if ne < e:\n        e = ne\n        ans = i\n\nprint(e)\n\n", "n = int(input())\nl = list(map(int, input().split()))\n\ndef f(x, l):\n\ts=0\n\tfor i in range(len(l)):\n\t\ts+=l[i] * 2 * (abs(x-i)+abs(x)+abs(i))\n\treturn s\nq= 10**10\nfor x in range(n):\n\tq = min(f(x, l), q)\nprint(q)", "n = int(input())\n\na = list(map(int, input().split(' ')))\n\ndef sol(x):\n  total = 0\n  for i in range(1, n + 1):\n    current = abs(i - 1) + abs(x - i) + abs(x - 1)\n    current *= 2 * a[i - 1]\n    total += current\n\n  return total\n\nmaxV = 100000000\n\nfor i in range(n):\n  maxV = min(sol(i + 1), maxV)\n\nprint(maxV)", "n = int(input())\na = [int(i) for i in input().split()]\nm = 10 ** 9\nfor x in range(n):\n    s = 0\n    for b in range(n):\n        i = x + 1\n        j = b + 1\n        s += a[b] * ((abs(i - j) + j - 1 + i - 1) * 2)\n    m = min(m, s)\nprint(m)"]