["for _ in range(int(input())):\n    n = int(input())\n    digits = list(map(int,list(input())))\n    if n % 2 == 1:\n        containsOdd = False\n        for i in range(0,n,2):\n            if digits[i] % 2 == 1:\n                containsOdd = True\n        if containsOdd:\n            print(1)\n        else:\n            print(2)\n    else:\n        containsEven = False\n        for i in range(1,n,2):\n            if digits[i] % 2 == 0:\n                containsEven = True\n        if containsEven:\n            print(2)\n        else:\n            print(1)\n", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = input()\n    s = list(map(int,s))\n    #raze wins if odd\n    r = []\n    prz = []\n    for i in range(n):\n        if i%2 == 0:\n            r.append(s[i]%2)\n        else:\n            prz.append(s[i]%2)\n    if n%2 == 0:\n        if prz.count(0) > 0:\n            print(2)\n        else:\n            print(1)\n    else:\n        if r.count(1) > 0:\n            print(1)\n        else:\n            print(2)", "tests = int(input())\nfor test in range(tests):\n    n = int(input())\n    a = [int(i) for i in input()]\n    if n % 2 == 0:\n        f = False\n        for i in range(1, n, 2):\n            if a[i] % 2 == 0:\n                f = True\n                break\n        if f:\n            print(2)\n        else:\n            print(1)\n    else:\n        f = False\n        for i in range(0, n, 2):\n            if a[i] % 2 == 1:\n                f = True\n                break\n        if f:\n            print(1)\n        else:\n            print(2)\n        \n", "t=int(input())\nfor you in range(t):\n    n=int(input())\n    s=input()\n    if(n%2==0):\n        poss=0\n        for i in range(1,n,2):\n            if(int(s[i])%2==0):\n                poss=1\n                break\n        if(poss):\n            print(2)\n        else:\n            print(1)\n    else:\n        poss=0\n        for i in range(0,n,2):\n            if(int(s[i])%2==1):\n                poss=1\n                break\n        if(poss):\n            print(1)\n        else:\n            print(2)\n", "for _ in range(int(input())):\n    n = int(input())\n    u = list(map(int, list(input())))\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            if u[i] % 2 == 0:\n                print(2)\n                break\n        else:\n            print(1)\n    else:\n        for i in range(0, n, 2):\n            if u[i] % 2 == 1:\n                print(1)\n                break\n        else:\n            print(2)\n", "from collections import defaultdict\nfrom queue import deque\n\n\ndef arrinp():\n    return [*list(map(int, input().split(' ')))]\n\n\ndef mulinp():\n    return list(map(int, input().split(' ')))\n\n\ndef intinp():\n    return int(input())\n\n\ndef solution():\n    n = intinp()\n    s = input()\n    if n%2 == 0:\n        win = 1\n        for i in range(n):\n            if i%2 == 1:\n                if int(s[i])%2 == 0:\n                    win = 2\n    else:\n        win = 2\n        for i in range(n):\n            if i%2 == 0:\n                if int(s[i])%2 == 1:\n                    win = 1\n    print(win)\n    return\n\n\ntestcases = 1\ntestcases = int(input())\nfor _ in range(testcases):\n    solution()\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            if int(s[i]) % 2 == 0:\n                print(2)\n                break\n        else:\n            print(1)\n    else:\n        for i in range(0, n, 2):\n            if int(s[i]) % 2 == 1:\n                print(1)\n                break\n        else:\n            print(2)\n", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n# from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var): sys.stdout.write(' '.join(map(str, var)) + '\\n')\ndef out(var): sys.stdout.write(str(var) + '\\n')\nfrom decimal import Decimal\n# from fractions import Fraction\n# sys.setrecursionlimit(100000)\nmod = 998244353\nINF=float('inf')\n\nfor t in range(int(data())):\n    n=int(data())\n    a=data()\n    if n%2==0:\n        k=0\n        for i in range(1,n,2):\n            if int(a[i])%2==0:\n                k=1\n        if k:\n            out(2)\n        else:\n            out(1)\n    else:\n        k = 0\n        for i in range(0, n, 2):\n            if int(a[i]) % 2 == 1:\n                k = 1\n        if k:\n            out(1)\n        else:\n            out(2)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n\n    a = [int(s[i]) for i in range(0, n, 2)]\n    b = [int(s[i]) for i in range(1, n, 2)]\n\n    if n % 2 == 0:\n        if any(i % 2 == 0 for i in b):\n            print(2)\n        else:\n            print(1)\n    else:\n        if any(i % 2 == 1 for i in a):\n            print(1)\n        else:\n            print(2)\n", "for _ in range(int(input())):\n\tn=int(input())\n\ts=input()\n\ta1=a2=0\n\trayz=s[::2]\n\tbri=s[1::2]\n\tif n%2:\n\t\tif any(int(i)%2 for i in rayz):print(1)\n\t\telse:print(2)\n\telse:\n\t\tif any(int(i)%2==0 for i in bri):print(2)\n\t\telse:print(1)", "for _ in range(int(input())):\n  n=int(input())\n  s=input()\n  if n%2==1:\n    a=[int(i)%2 for i in s[::2]]\n    if 1 in a:print(1)\n    else:print(2)\n  else:\n    a=[int(i)%2 for i in s[1::2]]\n    if 0 in a:print(2)\n    else:print(1)", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    s=str(input())\n    a=len(s)\n    if a%2==0:\n        x=0\n        for j in range(a):\n            if j%2==1:\n                if int(s[j])%2==0:\n                    x+=1\n        if x>0:\n            print(2)\n        else:\n            print(1)\n    else:\n        x=0\n        for j in range(a):\n            if j%2==0:\n                if int(s[j])%2==1:\n                    x+=1\n        if x>0:\n            print(1)\n        else:\n            print(2)", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 10 ** 9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n \nfor _ in range(val()):\n    n = val()\n    s = st()\n    \n    raze = breach = 0\n\n    for ind, i in enumerate(s):\n\n        num = int(i)\n        if ind & 1:\n            if num & 1 == 0:breach = 1\n        else:\n            if num & 1:raze = 1\n    \n    if n & 1:\n        print(1 if raze else 2)\n    else:\n        print(2 if breach else 1)\n", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        S = input().strip()\n\n        if N % 2 == 1:\n            ans = 2\n            for i in range(0, N, 2):\n                if int(S[i]) % 2 == 1:\n                    ans = 1\n            print(ans)\n        else:\n            ans = 1\n            for i in range(1, N, 2):\n                if int(S[i]) % 2 == 0:\n                    ans = 2\n            print(ans)\n\n\ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor t in range(T):\n    N = int(input())\n    number = str(int(input()))\n    if N % 2:\n        for i in range(N):\n            if i % 2 == 0 and int(number[i]) % 2:\n                print(1)\n                break\n        else:\n            print(2)\n    else:\n        for i in range(N):\n            if i % 2 and int(number[i]) % 2 == 0:\n                print(2)\n                break\n        else:\n            print(1)\n", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [1]*T\nfor qu in range(T):\n    N = int(readline())\n    A = list(map(int, readline().strip()))\n    Aodd = [A[i]%2 for i in range(N) if not i&1]\n    Aeven = [A[i]%2 for i in range(N) if i&1]\n    if len(Aodd) == len(Aeven):\n        if all(a == 1 for a in Aeven):\n            continue\n        else:\n            Ans[qu] = 2\n    else:\n        if all(a == 0 for a in Aodd):\n            Ans[qu] = 2\n\nprint('\\n'.join(map(str, Ans)))", "import math,sys\nfrom sys import stdin,stdout\nfrom collections import Counter, defaultdict, deque\ninput = stdin.readline\nI = lambda:int(input())\nli = lambda:list(map(int,input().split()))\n\ndef solve():\n    n=I()\n    s=input().strip()\n    if(n%2):\n        f=2\n        for i in range(0,n,2):\n            if(int(s[i])%2):\n                f=1\n        print(f)\n    else:\n        f=1\n        for i in range(1,n,2):\n            if(int(s[i])%2==0):\n                f=2\n        print(f)\n\nfor _ in range(I()):\n    solve()", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    s = input().rstrip()\n    if len(s) % 2 == 0:\n        ben_wins = False\n        for ch in s[1::2]:\n            if int(ch) % 2 == 0:\n                ben_wins = True\n    else:\n        ben_wins = True\n        for ch in s[0::2]:\n            if int(ch) % 2 == 1:\n                ben_wins = False\n    \n    if ben_wins:\n        print(2)\n    else:\n        print(1)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = str(input())\n    R = []\n    B = []\n    for i in range(n):\n        t = int(s[i])\n        t %= 2\n        if i%2 == 0:\n            R.append(t)\n        else:\n            B.append(t)\n    R = set(R)\n    B = set(B)\n    if n%2 == 1:\n        if 1 in R:\n            print(1)\n        else:\n            print(2)\n    else:\n        if 0 in B:\n            print(2)\n        else:\n            print(1)\n", "for _ in range(int(input())):\n    n = int(input())\n    digits=[int(c) for c in input()]\n    ans = None\n    if n&1:\n        ##if n is odd\n        for i in range(0,n,2):\n            if digits[i]&1:\n                ans = True\n                break\n        else:\n            ans = False\n    else:\n        for i in range(1,n,2):\n            if digits[i]%2 == 0:\n                ans = False\n                break\n        else:\n            ans = True\n    \n    print(1 if ans else 2)", "for i in range (int(input())):\n    n=int(input())\n    s=input()\n    odd=0\n    even=0\n    for i in range (0,n,2):\n        if int(s[i])%2==1:\n            odd+=1\n    for i in range (1,n,2):\n        if int(s[i])%2==0:\n            even+=1\n    if n%2==1:\n        if odd>0:\n            print(1)\n        else:\n            print(2)\n    else:\n        if even>0:\n            print(2)\n        else:\n            print(1)", "def a(l):\n    odd = 0\n    even = 0\n    for x in l:\n        if x % 2 == 1:\n            odd += 1\n        else:\n            even += 1\n    return (odd, even)\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    l = list(map(int, list(input())))\n    odds = l[::2]\n    evens = l[1::2]\n    if n % 2 == 1:\n        x,y = a(odds)\n        print(1 if x > 0 else 2)\n    else:\n        x,y = a(evens)\n        print(2 if y > 0 else 1)\n", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    s = [int(x) for x in input()]\n    A = s[0::2] \n    B = s[1::2] \n    if n%2 == 0:\n        if any(x%2 == 0 for x in B):\n            print(2)\n        else:\n            print(1)\n    else:\n        if any(x%2 == 1 for x in A):\n            print(1)\n        else:\n            print(2)\n\n\n", "t=int(input())\nwhile t:\n    t-=1\n    n=int(input())\n    a=input()\n    if n%2==0:\n        flag=0\n        for i in range(1,n,2):\n            if int(a[i])%2==0:\n                flag+=1\n                break\n        if flag:\n            print(2)\n        else:\n            print(1)\n    else:\n        flag=0\n        for i in range(0,n,2):\n            if int(a[i])%2==1:\n                flag+=1\n                break\n        if flag:\n            print(1)\n        else:\n            print(2)\n", "for t in range(int(input())):\n    n = int(input())\n    d = [int(i) for i in input()]\n    if n % 2 == 1:\n        #evens go for odds\n        if 1 in [d[i] % 2 for i in range(0, n, 2)]:\n            print(1)\n        else:\n            print(2)\n    else:\n\n        if 0 in [d[i] % 2 for i in range(1, n, 2)]:\n            print(2)\n        else:\n            print(1)\n", "def main():\n    n = int(input())\n    lst = input()\n    if n % 2 == 0:\n        for i in range(1, n, 2):\n            if int(lst[i]) % 2 == 0:\n                print(\"2\")\n                return\n        print(\"1\")\n        return\n    for i in range(0, n, 2):\n        if int(lst[i]) % 2 == 1:\n            print(\"1\")\n            return\n    print(\"2\")\n    return\n\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n__starting_point()"]