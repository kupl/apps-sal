["# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nfrom itertools import accumulate\n\nT = int(input())\n#s = input()\n#N,M,K,Q = [int(x) for x in stdin.readline().split()]\n#arr = [int(x) for x in stdin.readline().split()]\n\ncheck = [0]*45000\n\ns = 0\nfor i in range(1,45001):\n    s += i\n    check[i-1] = s\n\nfor i in range(T):\n    N = int(input())\n\n    if N in check:\n        idx = check.index(N)\n        idx += 2\n        print('1','3'*idx,'7',sep='',end='\\n')\n\n    else:\n        # find largest number < N in check\n        target = max(num for num in check if num < N)\n        three = check.index(target)\n\n        d = N - target\n\n        print('1','3'*2,'7'*d,'3'*(three),'7',sep='',end='\\n')", "import sys\nimport math\ninput = sys.stdin.readline\n\narr=[]\nfor i in range(1,100000):\n\tarr.append(i*(i+1)//2)\n\ndef bs(l, r, x):\n\tif r>=l:\n\t\tmid = l + (r-l)//2\n\t\tif arr[mid]<=x and arr[mid+1]>x:\n\t\t\treturn mid\n\n\t\telif arr[mid]>x:\n\t\t\treturn bs(l, mid-1, x)\n\n\t\telse:\n\t\t\treturn bs(mid+1, r, x)\n\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\n\td=bs(0,len(arr)-1,n)\n\tdiff=n-arr[d]\n\t#print(d,diff)\n\n\tans=[\"1\",\"3\",\"3\"]\n\tfor j in range(diff):\n\t\tans.append(\"7\")\n\tfor j in range(d):\n\t\tans.append(\"3\")\n\tans.append(\"7\")\n\n\tprint(''.join(ans))\n", "def closest(arr,pos):\n\tn = len(arr)\n\tlow = 0\n\tup = n-1\n\twhile(up >= low):\n\t  mid = (up+low)//2\n\t  ##print(mid)\n\t  if(arr[mid] == pos):\n\t  \treturn mid\n\t  elif(arr[mid] > pos):\n\t  \tif(arr[mid-1] < pos):\n\t  \t\treturn mid-1\n\t  \telse:    \n\t  \t\tup = mid - 1\n\t  else:\n\t  \tif(arr[mid+1] > pos):\n\t  \t\treturn mid\n\t  \telse:\n\t  \t\tlow = mid + 1\n\n\nt = int(input())\nn = 1\na = []\nwhile(n<100000):\n\ta.append(n*(n+1)//2)\n\tn += 1\n\nfor i in range(t):\n\tn = int(input())\n\ts = ['1','3','3']\n\tno3 = closest(a,n)\n\tno7 = n - a[no3]\n\t#print(no3,no7)\n\ts.extend(['7']*no7)\n\ts.extend(['3']*no3)\n\ts.append('7')\n\tprint(''.join(s))\n", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\nimport math\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        ni = int(input())\n        cnt3 = 2\n        while (cnt3*(cnt3+1))//2 <= ni:\n            cnt3 += 1\n        rest = ni-(cnt3*(cnt3-1)//2)\n        print('1'+'33'+'7'*rest+'3'*(cnt3-2)+'7')\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "t=int(input())\nwhile(t):\n    n=int(input())\n    ch=0\n    \n    for i in range(100000):\n        if((i*(i-1)//2)>n):\n            ch=i-1\n            #print(ch)\n            break\n        \n    rem=n-(ch*(ch-1))//2\n    \n    s=\"1\"\n    \n    s=s+\"33\"+\"7\"*rem+\"3\"*(ch-2)+\"7\"\n    \n    print(s)\n    \n    t-=1\n    \n"]