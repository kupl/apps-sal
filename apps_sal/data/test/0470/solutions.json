["cards = list(map(int, input().split()))\n\nresult = sum(cards)\n\nfor i in range(5):\n    cnt = cards.count(cards[i])\n    cnt = min(cnt, 3)\n    if cnt not in [2, 3]:\n        continue\n    result = min(result, sum(cards) - cnt * cards[i])\n\nprint(result)\n", "a = list(map(int, input().split()))\ncnt = [0] * 1000\nfor i in a:\n    cnt[i] += 1\ns = sum(a)\nres = s\nfor i in range(1000):\n    cnt[i] = min(cnt[i], 3)\n    if 2 <= cnt[i]:\n        res = min(res, s - cnt[i] * i)\nprint(res)\n", "def count(a, x):\n    ans = 0\n    for y in a:\n        if x == y:\n            ans += 1\n    return ans\n\na = list(map(int, input().split()))\ns = sum(a)\nans = s\nfor x in a:\n    v = count(a, x)\n    if 2 <= v:\n        ans = min(ans, s - min(v, 3) * x)\n\nprint(ans)\n", "import sys,math\nz=list(map(int,input().split()))\ns=sum(z)\nmin_=s\nfor i in range(len(z)):\n    f=z.count(z[i])\n    if f>=3:\n        min_=min(min_, s-3*z[i])\n    elif f==2:\n        min_=min(min_, s-2*z[i])\nprint(min_)", "l = list(map(int, input().split()))\norig = sum(l)\nans = sum(l)\nfor i in l:\n    if l.count(i) == 2:\n        ans = min(ans, orig-i*2)\n    elif l.count(i) >= 3:\n        ans = min(ans, orig-i*3)\nprint(ans)\n", "l = list(map(int, input().split()))\nmn = sum(l)\nfor i in range(1, 101):\n\tif l.count(i) >= 2:\n\t\tmn = min(mn, sum(l) - i * 2)\n\tif l.count(i) >= 3:\n\t\tmn = min(mn, sum(l) - i * 3)\nprint(mn)", "from collections import Counter\n\nt = Counter(list(map(int, input().split())))\ns = ans = sum(x * t[x] for x in t)\nfor x in t:\n    if t[x] > 1:\n        ans = min(ans, s - x * min(3, t[x]))\nprint(ans)\n", "read = lambda: list(map(int, input().split()))\nt = sorted(read())\nSum = ans = sum(t)\na = set(t)\nfor i in a:\n    if t.count(i) == 1: continue\n    cur = Sum - min(3, t.count(i)) * i\n    ans = min(ans, cur)\nprint(ans)\n", "d = {}\nl = list(map(int, input().split()))\ns = sum(l)\nfor i in l:\n    d[i] = d.get(i, 0) + 1\nans = s\nfor i in d:\n    if 2 <= d[i]:\n        ans = min(ans, s - i * min(3, d[i]))\nprint(ans)", "cards = list(map(int, input().split()))\n\nzmensenie = 0\nfor card in cards:\n    oc = 0\n    for c2 in cards:\n        if c2 == card:\n            oc += 1\n    if oc >= 2:\n        oc = min(oc, 3)\n        zmensenie = max(zmensenie, oc * card)\n\nprint(sum(cards)-zmensenie)", "from collections import Counter\n\na = Counter(map(int, input().split()))\ns = sum(b * c for b, c in a.items())\nres = s\n\nfor b, c in a.items():\n\tif c >= 2:\n\t\tres = min(res, s - 2 * b)\n\tif c >= 3:\n\t\tres = min(res, s - 3 * b)\n\nprint(res)", "from collections import Counter\n\n\ndef solve():\n    N = list(map(int, input().split()))\n    S = sum(N)\n    co = Counter(N)\n\n    ans = S\n    for n in co:\n        if co[n] >= 3:\n            ans = min(ans, S - n * 3)\n        elif co[n] == 2:\n            ans = min(ans, S - n * 2)\n\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "a = list(map(int, input().split()))\nb = [0]*150\nma = 0\nfor i in range(5):\n    b[a[i]] += 1\n    if b[a[i]] > 1:\n        if b[a[i]]*a[i] > ma and b[a[i]] < 4:\n            ma = b[a[i]]*a[i]\nprint(sum(a) - ma)", "t = list(map(int, input().split()))\np = sum(t)\nfor i in range(5):\n    if t.count(t[i]) >= 2:\n        p = min(p, sum(t) - t[i] * 2)\nfor i in range(5):\n    if t.count(t[i]) >= 3:\n        p = min(p, sum(t) - t[i] * 3)\nprint(p)\n", "t = list(map(int, input().split()))\ns = sum(t)\nans = s\nfor i in range(5):\n    c = t.count(t[i])\n    if c >= 2:\n       ans = min(s - min(c, 3) * t[i], ans)\nprint(ans)", "arr = list(map(int, input().split()))\narr.sort()\nans = []\ns = sum(arr)\nif (len(set(arr)) == len(arr)):\n\tans.append(sum(arr))\nelse:\n\tif (arr[-1]==arr[-2]==arr[-3]):\n\t\tans.append(arr[0]+arr[1])\n\tif (arr[-4]==arr[-2]==arr[-3]):\n\t\tans.append(arr[0]+arr[4])\n\tif (arr[-3]==arr[-4]==arr[-5]):\n\t\tans.append(arr[3]+arr[4])\n\tfor i in range(5):\n\t\tfor j in range(i + 1, 5):\n\t\t\tif (arr[i] == arr[j]):\n\t\t\t\tans.append(s - arr[i] - arr[j])\nprint(min(ans))", "t = list(map(int, input().split()))\nbest = sum(t)\nfor x in t:\n    if t.count(x) == 1: continue\n    best = min(best, sum(t) - x * min(3, t.count(x)))\nprint(best)", "m = list(map(int, input().split()))\nm.sort(reverse=True)\ncount = 1\nnow = m[0]\nsums = [0]\nfor i in range(1, 5):\n    if m[i] == now:\n        count += 1\n    else:\n        if count == 2:\n            sums.append(2 * now)\n        elif count > 2:\n            sums.append(3 * now)\n        now = m[i]\n        count = 1\nif count == 2:\n    sums.append(2 * now)\nelif count > 2:\n    sums.append(3 * now)\nans = sum(m) - max(sums)\nprint(ans)", "n = list(map(int, input().split()))\nn.sort()\nans = 0\nfor i in range(len(n) - 1):\n    if n[i] == n[i + 1]:\n        ans = max(n[i] + n[i + 1], ans)\n\nfor i in range(len(n) - 2):\n    if n[i] == n[i + 1] and n[i] == n[i + 2]:\n        ans = max(n[i] + n[i + 1] + n[i + 2], ans)\n\nprint(sum(n) - ans)\n", "a = list(map(int, input().split()))\ns = {}\nsumma = 0\nfor i in a:\n    summa += i\n    try:\n        s[i] += 1\n    except KeyError:\n        s[i] = 1\nans = summa\nfor i in s:\n    if s[i] == 1:\n        pass\n    else:\n        if s[i] == 2:\n            ans = min(ans, summa - i * 2)\n        else:\n            ans = min(ans, summa - i * 3)\nprint(ans)", "l=list(map(int,input().split()))\nans=t=sum(l)\nfor i in range(5):\n  for j in range(i+1,5):\n    if l[i]==l[j] and t-l[i]-l[j]<ans: ans=t-l[i]-l[j]\nfor i in range(5):\n  for j in range(i+1,5):\n    for k in range(j+1,5):\n      if l[i]==l[j]==l[k] and t-l[i]-l[j]-l[k]<ans: ans=t-l[i]-l[j]-l[k]\nprint(ans)\n", "import sys\nfrom collections import Counter\n\narr = list(map(int, input().split()))\n\nd = Counter(arr)\n\ntemp = [min(v, 3) * k for k, v in list(d.items()) if v >= 2]\n\nprint(sum(arr) - max(temp + [0, 0]))\n\nsys.stdout.flush()\n", "s = [int(j) for j in input().split()]\no = []\nfor i in range(5):\n    if s[i] in s[i+1:]:\n        o.append(s[i])\nm = sum(s)\nfor i in o:\n    y = 0\n    t = 0\n    for j in s:\n        if j != i or t>2:\n            y+=j\n        if j == i:\n            t+=1\n    m = min(y,m)\nprint(m)\n    \n", "\ncartes=list(map(int,input().split()))\nsomme=sum(cartes)\nnbOccurence=[0]*100\nenleverMax=0\nfor carte in cartes:\n\tnbOccurence[carte-1]+=1\n\nfor numeroCarte,nombre in enumerate(nbOccurence):\n\t\n\tnombreEnlever=min(3,nombre)\n\tif nombre>=2 and (numeroCarte+1)*nombreEnlever>enleverMax:\n\t\tenleverMax=(numeroCarte+1)*nombreEnlever\n\nprint(somme-enleverMax)\n\t\t\n", "t = [int(x) for x in input().split(' ')]\n\nt.sort()\nc = 0\nfor i in t:\n\tif t.count(i) == 1: c += 1\n\t\nif c == 5:\n\tprint(sum(t))\n\treturn\n\nc = 0\n\nm = []\n\nfor i in t:\n\tif t.count(i) == 2: m.append(2*i)\n\tif t.count(i) == 3: m.append(3*i)\n\tif t.count(i) == 4: m.append(3*i)\n\tif t.count(i) == 5: m.append(3*i)\n\t\nprint(sum(t) - max(m))\n"]