["n, m, k = list(map(int, input().split()))\na = [[0] * m for x in range(n)]\ns = []\ncount = 0\nfor i in range(n):\n    s.append(input())\nfor i in range(n):\n    y = 0\n    for j in range(m):\n        if s[i][j] == \".\":\n            if(a[i][j] + 1 >= k and k > 1):\n                count += 1\n            y +=1\n            if y >= k:\n                count += 1\n            if i + 1 < n:\n                a[i + 1][j] = a[i][j] + 1\n        else:\n            y = 0\n            \nprint(count)\n", "n, m, k = list(map(int, input().split()))\na = []\nans = 0\nfor i in range(n):\n    s = input()\n    a.append(s)\n    kk = 0\n    for i in s:\n        if i == '.':\n            kk += 1\n            if kk >= k:\n                ans += 1\n        else:\n            kk = 0\nfor j in range(m):\n    kk = 0\n    for i in a:\n        if i[j] == '.':\n            kk += 1\n            if kk >= k:\n                ans += 1\n        else:\n            kk = 0\nif k == 1:\n    print(ans // 2)\nelse:\n    print(ans)\n", "n, m, k = list(map(int, input().split()))\n\nresult = 0\n\nM1 = []\nfor _ in range(n):\n    M1.append(list([x == '*' for x in input()]))\n\nM2 = [[M1[j][i] for j in range(n)] for i in range(m)]\n\n#print(M2)\n\nfor M in ([M1, M2] if k > 1 else [M1]):\n    for row in M:\n        cnts = []\n        sofar = 0\n        for seat in row:\n            if not seat:\n                sofar += 1\n            else:\n                cnts.append(sofar)\n                sofar = 0\n        cnts.append(sofar)\n        #print(cnts)\n\n        for cnt in cnts:\n            result += max(0, cnt-k+1)\n\nprint(result)\n", "def main():\n    n, m, k = map(int, input().split())\n    g = []\n    for i in range(n):\n        g.append(input())\n    ans = 0\n    if k == 1:\n        cnt = 0\n        for i in range(n):\n            for j in range(m):\n                cnt += 1 if g[i][j] == '.' else 0\n        print(cnt)\n        return\n    # count row\n    for i in range(n):\n        cnt = 0\n        for j in range(m):\n            if g[i][j] == '.':\n                cnt += 1\n                if cnt >= k:\n                    ans += 1\n            else:\n                cnt = 0\n    for j in range(m):\n        cnt = 0\n        for i in range(n):\n            if g[i][j] == '.':\n                cnt += 1\n                if cnt >= k:\n                    ans += 1\n            else:\n                cnt = 0\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "nr, nc, k = map(int, input().strip().split())\n\n#print(nr, nc, k)\n\ntotal = 0\n\ncols = [0] * nc\nfor r in range(nr):\n    row = input().strip()\n\n    for i, e in enumerate(row):\n        if e == '*':  # occupied\n            total += max(0, cols[i] - k + 1)\n            cols[i] = 0\n        else:\n            cols[i] += 1\n\n    #segments = [len(s) for s in row.split('*') if s]\n    #ways = [max(0, x - k + 1) for x in segments]\n    #total += sum(ways)\n\n    total += sum(max(0, len(s) - k + 1) for s in row.split('*') if s)\ntotal += sum(max(0, x - k + 1) for x in cols)\nif k == 1:\n    total //= 2\nprint(total)", "n, m, k = list(map(int, input().split()))\nf = [[x == '.' for x in input()] for _ in range(n)]\nif k == 1:\n    print(sum(sum(x) for x in f))\n    quit()\n\nr = 0\n\nfor y in range(n):\n    b, e = 0, 1\n    for x in range(m):\n        if f[y][x]:\n            e += 1\n        else:\n            r += max(0, ((e - b) - k))\n            b, e = x, x+1\n\n    r += max(0, (e - b) - k)\n\n\nfor x in range(m):\n    b, e = 0, 1\n    for y in range(n):\n        if f[y][x]:\n            e += 1\n        else:\n            r += max(0, ((e - b) - k))\n            b, e = x, x+1\n\n    r += max(0, (e - b) - k)\n\nprint(r)\n", "# import sys\n# sys.stdin = open('in.txt', 'r')\n\nn, m, k = list(map(int, input().split()))\nd = [input() for _ in range(n)]\n\nres = 0\nfor i in range(n):\n    cs = 0\n    for j in range(m):\n        if d[i][j] == '.':\n            cs += 1\n        else:\n            res += max(cs-k+1, 0)\n            cs = 0\n\n    res += max(cs-k+1, 0)\n\nfor j in range(m):\n    cs = 0\n    for i in range(n):\n        if d[i][j] == '.':\n            cs += 1\n        else:\n            res += max(cs-k+1, 0)\n            cs = 0\n    res += max(cs-k+1, 0)\n\nif k == 1:\n    print(res//2)\nelse:\n    print(res)\n", "n, m, k = [int(x) for x in input().split()]\nlst=[]\nv=0\nfor i in range(n):\n    s = list(input())\n    lst.append(s)\nfor i in range(n):\n    z = 0\n    for j in range(m):\n            if lst[i][j]==\".\":\n                z+=1\n            else:\n                z=0\n            if z>=k:\n                v+=1\nfor i in range(m):\n    z=0\n    for j in range(n):\n        if lst[j][i]==\".\":\n            z+=1\n        else:\n            z=0\n        if z>=k:\n            v+=1\n\nif k==1: v=v/2\nprint(int(v))\n", "n,m,k=list(map(int,input().split()))\na=[]\nans=0\nfor i in range(n):\n    a.append(input())\nif k==1:\n    for i in range(n):\n        for j in range(m):\n            if a[i][j]=='.':\n                ans+=1\n    print(ans)\n    return\nfor i in range(n):\n    l=0\n    for j in range(m):\n        if a[i][j]=='.':\n            l+=1\n        else:\n            ans+=max(0,l-k+1)\n            l=0\n    ans+=max(0,l-k+1)\nfor i in range(m):\n    l=0\n    for j in range(n):\n        if a[j][i]=='.':\n            l+=1\n        else:\n            ans+=max(0,l-k+1)\n            l=0\n    ans+=max(0,l-k+1)\nprint(ans)\n", "import sys, math, os.path\n\nFILE_INPUT = \"c.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return list(map(int, input().split(\" \")))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn,m,k = ni()\n\nm1 = []\nfor _ in range(n):\n    m1.append(list([x == '.' for x in input()]))\n\n# log(m1)\n\ncount = 0\n\nif (k == 1):\n    count = 0\n    print(sum(x.count(True) for x in m1))\n    return\n\nfor i in range(n):\n    j = 0\n    while (j < m):\n        cd = 0\n        while (j < m) and (not m1[i][j]):\n            j += 1\n        while (j < m) and (m1[i][j]):\n            j += 1\n            cd += 1\n        if (k <= cd):\n            count += cd - k + 1\n            # log(f\"i = {i}, {j-cd} -> {j}\")\n\n# log(f\"count = {count}\")   \n\nfor j in range(m):\n    i = 0\n    while (i < n):\n        cd = 0\n        while (i < n) and (not m1[i][j]):\n            i += 1\n        \n        while (i < n) and (m1[i][j]):\n            i += 1\n            cd += 1\n\n        if (k <= cd):\n            count += cd - k + 1\n            # log(f\"j = {j}, {i-cd} -> {i}\")\nprint(count)\n", "n, m, k = (int(x) for x in input().split())\n\nCOLCON = [0 for _ in range(m)]\n\nres = 0\nfor _ in range(n):\n    con = 0\n\n    for i, c in enumerate(input().strip()):\n        if c == '*':\n            con = 0\n            COLCON[i] = 0\n\n        else:\n            con += 1\n            if con >= k:\n                res += 1\n\n            COLCON[i] += 1\n            if COLCON[i] >= k:\n                res += 1\n\nif k == 1:\n    print(res // 2)\nelse:\n    print(res)", "s = input ()\ns = s.strip().split (' ')\nn = int (s[0])\nm = int (s[1])\nk = int (s[2])\n\nmp = []\n\nfor i in range (n) :\n\tstring = input ()\n\ttemp = []\n\tfor j in range (m) :\n\t\ttemp.append (string[j])\n\tmp.append(temp)\n\nans = 0\n\nfor i in range (n) :\n\tbegin = 0\n\twhile begin < m :\n\t\t# print (begin)\n\t\tif (mp[i][begin] == '.') :\n\t\t\ttemp = begin\n\t\t\twhile mp[i][temp] == '.' :\n\t\t\t\ttemp += 1\n\t\t\t\tif temp == m : break\n\t\t\tlength = temp - begin\n\t\t\tbegin = temp\n\t\t\tans += max (0,length - k + 1)\n\t\tbegin += 1\n\nfor i in range (m) :\n\tbegin = 0\n\twhile begin < n :\n\t\tif (mp[begin][i] == '.') :\n\t\t\ttemp = begin\n\t\t\twhile mp[temp][i] == '.' :\n\t\t\t\ttemp += 1\n\t\t\t\tif temp == n : break\n\t\t\tlength = temp - begin\n\t\t\tbegin = temp\n\t\t\tans += max (0,length - k + 1)\n\t\tbegin += 1\n\nif k == 1 :\n\tans = 0\n\tfor i in range (n) :\n\t\tfor j in range (m) :\n\t\t\tif mp[i][j] == '.' :\n\t\t\t\tans += 1\n\n\nprint (ans)", "n,m,k = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input())\nans = 0\nfor i in range(n):\n    st = 0\n    for j in range(m):\n        if a[i][j] == '.':\n            st += 1\n            if st >= k:\n                ans += 1\n        else:\n            st = 0\nfor i in range(m):\n    st = 0\n    for j in range(n):\n        if a[j][i] == '.':\n            st += 1\n            if st >= k:\n                ans += 1\n        else:\n            st = 0\nif k == 1:\n    print(int(ans/2))\nelse:\n    print(ans)", "import re\n\nn, m, k = list(map(int, input().split()))\ns = [input() for _ in range(n)]\nif n > 1 and k > 1:\n\tt = list([\"\".join(x) for x in zip(*s)])\n\ts += t\n\nans = 0\np = re.compile(r\"\\.{\" + str(k) + \",}\")\nfor i in s:\n\tans += sum([len(x) - k + 1 for x in p.findall(i)])\n\t\t\nprint(ans)\n", "n, m, k = list(map(int, input().split()))\nmat = []\nfor i in range(n):\n    s = input()\n    mat.append([])\n    for j in range(m):\n        if s[j] == '*':\n            mat[i].append(0)\n        else:\n            mat[i].append(1)\n\nans = 0\nfor i in range(n):\n    res = 0\n    for j in range(m):\n        if mat[i][j]:\n            res += 1\n            if res >= k:\n                ans += 1\n        else:\n            res = 0\n\nfor i in range(m):\n    res = 0\n    for j in range(n):\n        if mat[j][i]:\n            res += 1\n            if res >= k:\n                ans += 1\n        else:\n            res = 0\n\nif k == 1:\n    ans //= 2\n\nprint (ans)\n", "n, m, k = [int(x) for x in input().split()]\nLL=['']*n\nAllCount = 0\nfor i in range(n):\n    LL[i] = input()\n\nfor i in range(n):\n    length = 0\n    for j in range(m):\n        if LL[i][j]=='.':\n            length+=1\n        else:\n            if length>=k:\n                AllCount+=length-k+1\n            length=0\n    if length>=k:\n        AllCount += length - k + 1\nfor j in range(m):\n    length=0\n    for i in range(n):\n        if LL[i][j]=='.':\n            length+=1\n        else:\n            if length>=k:\n                AllCount+=length-k+1\n            length=0\n    if length >= k:\n        AllCount += length - k + 1\n\nif k==1:\n    AllCount//=2\nprint(AllCount)", "n, m, k = [int(x) for x in input().split()]\nLL=['']*n\nAllCount = 0\nfor i in range(n):\n    LL[i] = input()\nfor i in range(n):\n    length = 0\n    for j in range(m):\n        if LL[i][j]=='.':\n            length+=1\n        else:\n            if length>=k:\n                AllCount+=length-k+1\n            length=0\n    if length>=k:\n        AllCount += length - k + 1\nfor j in range(m):\n    length=0\n    for i in range(n):\n        if LL[i][j]=='.':\n            length+=1\n        else:\n            if length>=k:\n                AllCount+=length-k+1\n            length=0\n    if length >= k:\n        AllCount += length - k + 1\nif k==1:\n    AllCount//=2\nprint(AllCount)", "import sys\n\n\ndef count(class_map):\n    result = 0\n\n    for row in class_map:\n        length = 0\n        for seat in row:\n            if seat == '.':\n                length += 1\n            else:\n                if length >= k:\n                    result += length - k + 1\n                length = 0\n\n        if length >= k:\n            result += length - k + 1\n\n    return result\n\n\nn, m, k = list(map(int, sys.stdin.readline().split()))\nclass_map = [list(line.strip()) for line in sys.stdin]\nresult = 0\n\nif k == 1:\n    for row in class_map:\n        for seat in row:\n            if seat == '.':\n                result += 1\n    print(result)\n    return\n\n\nprint(count(class_map) + count(list(zip(*class_map))))\n", "import re\n\nn, m, k = map(int, input().split())\ns = [input() for _ in range(n)]\nif n > 1 and k > 1:\n    t = list(map(lambda x: \"\".join(x), zip(*s)))\n    s += t\n\nans = 0\np = re.compile(r\"\\.{\" + str(k) + \",}\")\nfor i in s:\n    ans += sum(map(lambda x: len(x) - k + 1, p.findall(i)))\n\nprint(ans)", "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 04.02.2018 13:29              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    import re\n    n, m, k = list(map(int, input().split()))\n    s = [input() for _ in range(n)]\n    if n > 1 and k > 1:\n        t = list([\"\".join(x) for x in zip(*s)])\n        s += t\n\n    ans = 0\n    p = re.compile(r\"\\.{\" + str(k) + \",}\")\n    for i in s:\n        ans += sum([len(x) - k + 1 for x in p.findall(i)])\n\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n", "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 04.02.2018 13:29              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    import re\n    n, m, k = list(map(int, input().split()))\n    s = [input() for _ in range(n)]\n    if n > 1 and k > 1:\n        t = list([\"\".join(x) for x in zip(*s)])\n        s += t\n\n    ans = 0\n    p = re.compile(r\"\\.{\" + str(k) + \",}\")\n    for i in s:\n        ans += sum([len(x) - k + 1 for x in p.findall(i)])\n\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n", "\"\"\"This one should be very simple\"\"\"\n\n\ndef method(matrix, k):\n    if k == 1:\n        res = sum(line.count(\".\") for line in matrix)\n    else:\n        res = 0\n        for is_transpose in (False, True):\n            if is_transpose or len(matrix[0]) >= k:\n                for line in matrix:\n                    gen = iter(line)\n                    consecutive = 0\n                    for c in gen:\n                        if c == \".\":\n                            consecutive += 1\n                        else:\n                            if consecutive >= k:\n                                res += consecutive - k + 1\n                            consecutive = 0\n                            try:\n                                while next(gen) == \"*\":\n                                    pass\n                                consecutive = 1\n                            except StopIteration:\n                                pass\n                    if consecutive >= k:\n                        # If ended in consecutive empty seats with enough space\n                        res += consecutive - k + 1\n            if not is_transpose:\n                # Just a funny way of \n                if len(matrix) < k:\n                    break  # Don't bother with transpose if consecutive seats are impossible\n                matrix = list(zip(*matrix))\n    return res\n\n\nn, m, k = list(map(int, input().split()))\nmatrix = []\nfor _ in range(n):\n    matrix.append(input())\nprint(method(matrix, k))\n", "y,x,k=map(int,input().split())\nm=[];ans=0\nfor i in range(y):\n    m.append(list(input()))\n    e=0\n    for z in m[i]:\n        if z=='.':\n            e+=1\n        else:\n            ans+=max(0,e-k+1)\n            e=0\n    ans+=max(0,e-k+1)\nif k-1:\n    for j in range(x):\n        e=0\n        for i in range(y):\n            if m[i][j]=='.':\n                e+=1\n            else:\n                ans+=max(0,e-k+1)\n                e=0\n        ans+=max(0,e-k+1)\nprint(ans)", "n, m, k = list(map(int, input().split()))\ns = []\nup = [[0] * m] * n\nleft =[[0] * m] * n\nans = 0\nfor i in range(n):\n    s.append(input())\n    for j in range(m):\n        if s[i][j] == '.':\n            up[i][j] = (0 if i == 0 else up[i - 1][j]) + 1\n            left[i][j] = (0 if j == 0 else left[i][j - 1]) + 1\n        else:\n            up[i][j] = 0\n            left[i][j] = 0\n        ans += up[i][j] >= k\n        ans += left[i][j] >= k\nif k == 1:\n    ans //= 2\nprint(ans)\n", "m, n, k = list(map(int, input().split()))\nMatrix = []\nfor i in range(m):\n    s =  input()\n    Matrix.append([])\n    for j in range(n):\n        if s[j] == '*':\n            Matrix[i].append(0)\n        else:\n            Matrix[i].append(1)\ncount = 0\nfor i in range(m):\n    res = 0\n    for j in range(n):\n        if Matrix[i][j]:\n            res += 1\n            if res >= k:\n                count += 1\n        else:\n            res = 0\n\nfor i in range(n):\n    res = 0\n    for j in range(m):\n        if Matrix[j][i]:\n            res += 1\n            if res >= k:\n                count += 1\n        else:\n            res = 0\nif k == 1:\n    count //= 2\n\nprint(count)\n"]