["n, m = map(int, input().split())\n\nd = [0 for i in range(7)]\ng = [[] for i in range(7)]\n\nfor i in range(m):\n\tx, y = map(int, input().split())\n\tx -= 1\n\ty -= 1\n\td[x] += 1\n\td[y] += 1\n\t\n\tg[x].append(y)\n\tg[y].append(x)\n\t\nmn = min(d)\nfor i in range(7):\n\tfor j in range(i):\n\t\tcnt = 0\n\t\tfor k in range(7):\n\t\t\tif((k in g[i]) and (k in g[j])):\n\t\t\t\tcnt += 1\n\t\tmn = min(mn, cnt)\nm -= mn\nprint(m) ", "\nfrom collections import defaultdict\nn, m = list(map(int, input().split()))\ngraph = defaultdict(set)\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    graph[a].add(b)\n    graph[b].add(a)\n \nans = 100\nfor i in range(1, 7):\n    for j in range(i + 1, 8):\n        g = graph[i] & graph[j]\n        ans = min(ans, len(g))\nprint(m - ans)\n", "n, m = list(map(int, input().split()))\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    u -= 1\n    v -= 1\n    graph[u].append(v)\n    graph[v].append(u)\nmaxcnt = 0\nfor node1 in range(n):\n    for node2 in range(node1 + 1, n):\n        used = [[False] * n for _ in range(n)]\n        col = list(range(0, node2)) + [node1] + list(range(node2 + 1, n))\n        cnt = 0\n        for u in range(n):\n            for v in graph[u]:\n                if not used[col[u]][col[v]]:\n                    used[col[u]][col[v]] = used[col[v]][col[u]] = True\n                    cnt += 1\n        maxcnt = max(cnt, maxcnt)\nprint(maxcnt if n > 6 else m)\n", "n,m = [int(j) for j in input().split()]\nadj = [set() for i in range(n)]\nfor i in range(m):\n\tl, r = [int(j)-1 for j in input().split()]\n\tadj[l].add(r)\n\tadj[r].add(l)\nif n<7:\n\tprint(m)\nelse:\n\tdeg = 1e12\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tl = adj[i].intersection(adj[j])\n\t\t\t# print(l)\n\t\t\ttmp = len(l)\n\t\t\tif tmp<deg:\n\t\t\t\tdeg = tmp\n\t\t# deg = min(len(adj[i]), deg)\n\t# deg = ma\n\t# print(deg)\n\tprint(m-deg)", "n, m = list(map(int, input().split()))\n\na=[]\nb=[]\n\nfor _ in range(m):\n  aa, bb = list(map(int, input().split()))\n  if (bb < aa):\n    aa,bb = bb,aa\n  a.append(aa)\n  b.append(bb)\n\nif (n <= 6):\n  print(m)\nelse:\n  \n  maxv = 0\n  for i in range(1, n + 1):\n    for j in range(i + 1, n + 1):\n      alle = m\n      minuse = 0\n      tk = []\n      for k in range(len(a)):\n        if (i == a[k] and j != b[k]):\n          alle -= 1\n          tk.append(b[k])\n        elif (i != a[k] and j == b[k]):\n          alle -= 1\n          tk.append(a[k])\n        elif (i == b[k] and j != a[k]):\n          alle -= 1\n          tk.append(a[k])\n        elif (i != b[k] and j == a[k]):\n          alle -= 1\n          tk.append(b[k])\n      #print(alle)\n      #print('set' + str(len(set(tk))))\n      #return\n      alle += len(set(tk))\n      maxv = max(alle, maxv)\n  print(maxv)\n\n          \n      \n", "n,m = [int(j) for j in input().split()]\nadj = [set() for i in range(n)]\nfor i in range(m):\n\tl, r = [int(j)-1 for j in input().split()]\n\tadj[l].add(r)\n\tadj[r].add(l)\nif n<7:\n\tprint(m)\nelse:\n\tdeg = 10**12\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tl = adj[i].intersection(adj[j])\n\t\t\ttmp = len(l)\n\t\t\tif tmp<deg:\n\t\t\t\tdeg = tmp\n\tprint(m-deg)\n", "n,m = [int(j) for j in input().split()]\nadj = [set() for i in range(n)]\nfor i in range(m):\n\tl, r = [int(j)-1 for j in input().split()]\n\tadj[l].add(r)\n\tadj[r].add(l)\nif n<7:\n\tprint(m)\nelse:\n\tmaxi = 10**12\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tl = adj[i].intersection(adj[j])\n\t\t\ttmp = len(l)\n\t\t\tif tmp<maxi:\n\t\t\t\tmaxi = tmp\n\tprint(m-maxi)\n", "n,m = [int(j) for j in input().split()]\nadj = [set() for i in range(n)]\nfor i in range(m):\n\tl, r = [int(j)-1 for j in input().split()]\n\tadj[l].add(r)\n\tadj[r].add(l)\nif n<7:\n\tprint(m)\nelse:\n\tmaxi = 10**12\n\tfor i in range(n):\n\t\tfor j in range(i+1, n):\n\t\t\tl = adj[i].intersection(adj[j])\n\t\t\ttmp = len(l)\n\t\t\tif tmp<maxi:\n\t\t\t\tmaxi = tmp\n\tprint(m-maxi)\n", "import itertools\nn,m = list(map(int,input().split()))\narr = []\nfor i in range(n):\n    arr.append([])\nfor i in range(m):\n    a,b = list(map(int,input().split()))\n    a-=1\n    b-=1\n    arr[a].append(b)\n    arr[b].append(a)\npermuts = list(itertools.permutations(list(range(7))))\nans = 0\nfor i in range(len(permuts)):\n    permut = permuts[i]\n    was = []\n    for i in range(6):\n        was.append([False]*6)\n    c = 0\n    for i in range(n):\n        if permut[i] != 6:\n            for g in range(len(arr[i])):\n                if not permut[arr[i][g]] == 6:\n                    if not was[permut[i]][permut[arr[i][g]]]:\n                        c+=1\n                        was[permut[i]][permut[arr[i][g]]] = True\n                        was[permut[arr[i][g]]][permut[i]] = True\n    for w in range(n):\n        if permut[w] == 6:\n            ams = [0]*6\n            for g in range(len(arr[w])):\n                for j in range(6):\n                    if not was[permut[arr[w][g]]][j]:\n                        ams[j]+=1\n            c+=max(ams)\n            break\n\n\n\n    ans = max(ans,c)\nprint(ans)\n"]