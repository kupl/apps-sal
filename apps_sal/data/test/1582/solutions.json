["N = int(input())\nkeep = [[0 for i in range(10)] for j in range(10)]\nans = 0\n\nfor i in range(1, N + 1):\n    first = int(str(i)[0])\n    end = int(str(i)[-1])\n    keep[first - 1][end - 1] += 1\n\nfor i in range(9):\n    for j in range(9):\n        ans += (keep[i][j] * keep[j][i])\nprint(ans)\n", "def main():\n    import sys\n    from collections import defaultdict\n\n    def input(): return sys.stdin.readline().rstrip()\n\n    n = int(input())\n    nd = defaultdict(int)\n    for i in range(1, n+1):\n        tmp = str(i)\n        h, t  = int(tmp[0]), int(tmp[-1])\n        nd[(h, t)] += 1\n    \n    ans = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            ans += nd[(i, j)]*nd[(j, i)]\n    print(ans)\n\n\n\n    \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nans = 0\nlst = [0]*100\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n\n    if b == '0':\n        pass\n\n    else:\n        lst[int(b+a)] += 1\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    c = int(a+b)\n    ans += lst[c]\n\nprint(ans)", "import sys\nimport collections\nimport bisect\n\n\ndef main():\n    n = int(input())\n    a = [str(i + 1)[0] + str(i + 1)[-1] for i in range(n)]\n    b = [str(i + 1)[-1] + str(i + 1)[0] for i in range(n)]\n    ac, bc = collections.Counter(a), collections.Counter(b)\n    print((sum(ac[i] * bc[i] for i in list(ac.keys()))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nc = [[0 for _ in range(10)] for _ in range(10)]\nfor i in range(1, n+1):\n    s = str(i)\n    c[int(s[0])][int(s[-1])] += 1\nans = 0\nfor i in range(1, n+1):\n    s = str(i)\n    ans += c[int(s[-1])][int(s[0])]\nprint(ans)", "N = int(input())\n# cnt[i][j] := \u5148\u982d\u304ci, \u672b\u5c3e\u304cj\u3067\u59cb\u307e\u308b\u3088\u3046\u306a\u6570\ncnt = [[0] * 10 for i in range(10)]\nfor n in range(1, N + 1):\n    cnt[int(str(n)[0])][int(str(n)[-1])] += 1\n\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "n = int(input())\nc = [[0] * 10 for _ in range(10)]\nfor i in range(1, n + 1):\n    s = str(i)\n    l = int(s[0])\n    r = int(s[-1])\n    c[l][r] += 1\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += c[i][j] * c[j][i]\n\nprint(ans)", "N = int(input())\nans = 0\nlst = [0]*100\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    if a == b:\n        lst[int(a)] += 1\n\n    if b == '0':\n        pass\n\n    else:\n        lst[int(b+a)] += 1\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    c = int(a+b)\n    ans += lst[c]\n\nprint(ans)", "N = int(input())\ndp = 100*[0]\nans = 0\n\nfor n in range(N+1):\n  s = str(n)\n  dp[10*int(s[0])+int(s[-1])]+=1\n\nfor i in range(1,10):\n  for j in range(1,10):\n    ans+=dp[10*i+j]*dp[10*j+i]\n\nprint(ans)", "N=int(input())\nd={}\nfor i in range(1,10):\n  for j in range(1,10):\n    d[i*10+j]=0\nfor i in range(1,min(10,N+1)):\n  d[i*10+i]=1\np,h,t,c=10,10,1,1\nfor i in range(11,N+1):\n  if t==10:\n    t=1\n  else:\n    d[h+t]+=1\n    t+=1\n  if p==c:\n    h+=10\n    c=0\n  if h==100:\n    h=10\n    p*=10\n  c+=1\nans=0\nfor i in range(1,9):\n  for j in range(i+1,10):\n    ans+=(d[i*10+j]*d[j*10+i])*2\nfor i in range(1,10):\n  ans+=d[i*10+i]**2\nprint(ans)", "n = int(input())\nlr_cnt = [[0 for _ in range(10)] for _ in range(10)]\nfor i in range(1, n + 1):\n    str_i = str(i)\n    start = int(str_i[0])\n    end = int(str_i[-1])\n    lr_cnt[start][end] += 1\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += lr_cnt[i][j] * lr_cnt[j][i]\nprint(ans)\n", "memo = [[0] * 10 for i in range(10)]\n\ndef kazu(start_num,end_num):\n    nonlocal memo\n    if memo[start_num][end_num] > 0:\n        #print('memo',start_num,end_num)\n        return memo[start_num][end_num]\n    else:\n        ans = 0\n        #1\u6841\n        if start_num == end_num:\n            if start_num <= n:\n                #print(start_num)\n                ans += 1\n        #2\u6841\n        if start_num * 10 + end_num <= n:\n            #print(start_num * 10 + end_num)\n            ans += 1\n        #3\u6841\n        for i in range(10):\n            if start_num * 100 + i * 10 + end_num <= n:\n                #print(start_num * 100 + end_num)\n                ans += 1\n            else:\n                break\n        #4\u6841\n        for i in range(100):\n            if start_num * 1000 + i * 10 + end_num <= n:\n                #print(start_num * 1000 + end_num)\n                ans += 1\n            else:\n                break\n        #5\u6841\n        for i in range(1000):\n            if start_num * 10000 + i * 10 + end_num <= n:\n                #print(start_num * 10000 + end_num)\n                ans += 1\n            else:\n                break\n        #6\u6841\n        for i in range(10000):\n            if start_num * 100000 + i * 10 + end_num <= n:\n                #print(start_num * 10000 + end_num)\n                ans += 1\n            else:\n                break\n        memo[start_num][end_num] = ans\n        #print(start_num,end_num,'---',ans)\n        return ans\n\nn = int(input())\nstr_n = str(n)\nkotae = 0\n#print(memo)\nfor a in range(1,n+1):\n    if a%10!=0:\n        str_a = str(a)\n        #print('-----',a,'-----',int(str_a[-1]),int(str_a[0]))\n        kotae += kazu(int(str_a[-1]),int(str_a[0]))\n        #print(memo)\nprint(kotae)", "N = int(input())\nans = 0\nlst = [0]*100\n \nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n \n    if b == '0':\n        pass\n \n    else:\n        lst[int(b+a)] += 1\n \nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    c = int(a+b)\n    ans += lst[c]\n \nprint(ans)", "N=int(input())\nc=[[0 for i in range(10)] for j in range(10)]\n\nfor n in range(1,N+1):\n  i=int(str(n)[0])\n  j=int(str(n)[-1])\n  c[i][j]+=1\n\nans=0\nfor i in range(10):\n  for j in range(10):\n    ans+=c[i][j]*c[j][i]\nprint(ans)\n", "import numpy as np\nN = int(input())\n\ncnt = np.zeros((10,10))\n\nfor x in map(str,range(0,N+1)):\n    cnt[int(x[0]),int(x[-1])] += 1\n\nans = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        ans += cnt[i,j] * cnt[j,i]\n\nprint(int(ans))", "N = int(input())\n\nnum = [[0] * 10 for i in range(10)]\n\nfor i in range(1, N+1):\n    top = int(str(i)[0])\n    end = int(str(i)[-1])\n    num[top][end] += 1\n\ncount = 0\nfor i in range(10):\n    for j in range(10):\n        count += num[i][j] * num[j][i]\n\nprint(count)", "N = int(input())\nA = [[0 for j in range(9)] for i in range(9)]\ncount = 0\nfor x in range(1, N+1):\n  if x%10==0:\n    continue\n  if x >= 10**(count+1):\n    count += 1\n  i = x%10\n  j = x//(10**count)\n  A[i-1][j-1] += 1\nans = 0\nfor i in range(9):\n  for j in range(i, 9):\n    r = 2 if i!=j else 1\n    ans += A[i][j]*A[j][i]*r\n    \nprint(ans)\n#for a in A:\n#  print(a)\n", "import sys, bisect, math, itertools, string, queue, copy\nimport numpy as np\nimport scipy\nfrom collections import Counter,defaultdict,deque\nfrom itertools import permutations, combinations\nfrom heapq import heappop, heappush\nfrom fractions import gcd\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\nn = inp()\nans = 0\nn_ketasuu = len(str(n))\nsta_max = int(str(n)[0])\nend_max = int(str(n)[n_ketasuu-1])\nfor i in range(1,n+1):\n    sta = int(str(i)[len(str(i))-1])\n    end = int(str(i)[0])\n    if sta == 0:\n        continue\n    #1\u6841\n    if sta == end:\n        ans +=1\n    #2\u6841\n    if n_ketasuu >= 2 and sta*10 + end <= n:\n        ans += 1\n    #3\u6841\n    if n_ketasuu > 3 or (n_ketasuu == 3 and sta < sta_max):\n        ans += 10\n    elif n_ketasuu == 3 and sta == sta_max:\n        ans += int(str(n)[1:n_ketasuu-1])\n        if end <= end_max:\n            ans += 1\n    #4\u6841\n    if n_ketasuu > 4 or (n_ketasuu == 4 and sta < sta_max):\n        ans += 100\n    elif n_ketasuu == 4 and sta == sta_max:\n        ans += int(str(n)[1:n_ketasuu-1])\n        if end <= end_max:\n            ans += 1\n    #5\u6841\n    if n_ketasuu > 5 or (n_ketasuu == 5 and sta < sta_max):\n        ans += 1000\n    elif n_ketasuu == 5 and sta == sta_max:\n        ans += int(str(n)[1:n_ketasuu-1])\n        if end <= end_max:\n            ans += 1\n    #6\u6841\n    if n_ketasuu > 6 or (n_ketasuu == 6 and sta < sta_max):\n        ans += 10000\n    elif n_ketasuu == 6 and sta == sta_max:\n        ans += int(str(n)[1:n_ketasuu-1])\n        if end <= end_max:\n            ans += 1\n\nprint(ans)", "n = int(input())\nd = [[0] * 10 for _ in range(10)]\nfor i in range(1, n + 1):\n    d[int(str(i)[0])][i % 10] += 1\nret = 0\nfor s in range(10):\n    for e in range(10):\n        ret += d[s][e] * d[e][s]\nprint(ret)\n", "n = int(input())\nc = [[0 for _ in range(10)] for _ in range(10)]\nfor i in range(1, n+1):\n    s = str(i)\n    c[int(s[0])][int(s[-1])] += 1\nans = 0\nfor i in range(1, n+1):\n    s = str(i)\n    ans += c[int(s[-1])][int(s[0])]\nprint(ans)", "from collections import defaultdict\nn = int(input())\n\ncounter = defaultdict(int)\nfor x in map(str, range(1, n+1)):\n    head = x[0]\n    tail = x[-1]\n    counter[(head, tail)] += 1\n\nans = 0\nitems = list(counter.items())\nfor (head,tail), cnt in items:\n    ans += cnt * counter[(tail,head)]\nprint(ans)", "n=int(input())\nl=[[0]*10 for i in range(10)]\nfor i in range(1,n+1):\n    st=str(i)\n    start=int(st[0])\n    end=int(st[-1])\n    l[start][end]+=1\nans=0\nfor i in range(10):\n    for j in range(10):\n        ans+=l[i][j]*l[j][i]\nprint(ans)\n", "n = int(input())\na = [[0 for j in range(10)] for i in range(10)]\n\nfor i in range(1, n+1):\n    if i >= 10**5:\n        tmp1 = i//10**5\n    elif i >= 10**4:\n        tmp1 = i//10**4\n    elif i >= 10**3:\n        tmp1 = i//10**3\n    elif i >= 10**2:\n        tmp1 = i//10**2\n    elif i >= 10:\n        tmp1 = i//10\n    else :\n        tmp1 = i\n    tmp2 = i % 10\n    a[tmp1][tmp2] += 1\n\ncnt = 0\nfor i in range(1, 10):\n    for j in range(1, 10):\n        cnt += a[i][j] * a[j][i]\nprint(cnt)\n\n", "import sys\nimport collections\nimport bisect\n\n\ndef main():\n    n = int(input())\n    a = [str(i + 1)[0] + str(i + 1)[-1] for i in range(n)]\n    b = [str(i + 1)[-1] + str(i + 1)[0] for i in range(n)]\n    ac, bc = collections.Counter(a), collections.Counter(b)\n    acKeys = list(ac.keys())\n    bcKeys = list(bc.keys())\n    cnt = 0\n    for i in acKeys:\n        cnt += ac[i] * bc[i]\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n\n#import numpy as np\nimport sys\nimport math\nimport collections\n\nn = N()\nc = [[0]*10 for i in range(10)]\nfor i in range(1,n+1):\n    h = int(str(i)[0])\n    t = int(str(i)[-1])\n    c[h][t] += 1\nsum = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        sum += c[i][j] * c[j][i]\nprint(sum)", "from sys import setrecursionlimit, exit\nsetrecursionlimit(1000000000)\n\ndef main():\n    n = int(input())\n    ans = 0\n    for i in range(1, n + 1):\n        s = str(i)\n        if s[-1] == '0':\n            continue\n        if s[0] == s[-1]:\n            ans += 1\n        if i < 10:\n            continue\n        if s[0] == s[-1]:\n            ans += 2\n        l = len(s)\n        for i in range(2, l):\n            ans += 10 ** (i - 2) * 2\n        if s[0] < s[-1]:\n            continue\n        if s[0] > s[-1]:\n            ans += 10 ** (l - 2) * 2\n        elif l > 2:\n            dp = int(s[1])\n            for i in range(2, l - 1):\n                dp *= 10\n                dp += int(s[i])\n            ans += dp * 2\n    print(ans)\n\nmain()", "N = int(input())\ncounter = [[0 for _ in range(10)] for _ in range(10)]\nfor k in range(1, N+1):\n  counter[k%10][int(str(k)[0])] += 1\nans = 0\nfor k in range(1, 10):\n  for j in range(1, 10):\n    ans += counter[k][j]*counter[j][k]\nprint(ans)", "from collections import defaultdict\n\nN = int(input())\n\ncnts = defaultdict(int)\nfor i in range(1, N + 1):\n    if i % 10 == 0:\n        continue\n    digits = []\n    while i > 0:\n        i, r = divmod(i, 10)\n        digits.append(r)\n    digits = digits[::-1]\n    cnts[(digits[0], digits[-1])] += 1\n\nans = 0\nfor (head, tail), c1 in list(cnts.items()):\n    c2 = cnts.get((tail, head), 0)\n    ans += c1 * c2\nprint(ans)\n", "N=int(input())\nm=0\nx=[[0]*9 for i in range(9)]\nfor i in range(1,N+1):\n    if i%10==0:\n        continue\n    b=int(str(i)[0])\n    g=int(i%10)\n    x[b-1][g-1]+=1\nans=0\nfor i in range(9):\n    for j in range(9):\n        ans+=x[i][j]*x[j][i]\n        #print(i+1,j+1,x[i][j])\nprint(ans)", "x=int(input())\n\ndp=[[0 for n in range(10)] for n in range(10)]\ndp1=dp.copy()\n\nfor n in range(x+1):\n    v=str(n)\n    p=int(v[0])\n    q=int(v[-1])\n    for a in range(10):\n        for b in range(10):\n            if a==p and b==q:\n                dp[a][b]+=1\n\nres=-1\n\nfor n in range(10):\n    for k in range(10):\n        res+=dp[n][k]*dp[k][n]\n\nprint(res)\n", "n = int(input())\nhist = [[0 for _ in range(10)] for _ in range(10)]\nans = 0\nfor i in range(1,n+1):\n  top = int(str(i)[0])\n  bot = int(str(i)[-1])\n  hist[top][bot] += 1\n  \nfor i in range(1,n+1):\n  top = int(str(i)[0])\n  bot = int(str(i)[-1])\n  ans += hist[bot][top]\n  \nprint(ans)", "N = int(input())\nnum = [[0] * 10 for i in range(10)]\nfor i in range(1, N + 1):\n    num[int(str(i)[0])][int(str(i)[-1])] += 1\n    \nans = 0\nfor i in range(1, N + 1):\n    ans += num[int(str(i)[-1])][int(str(i)[0])]\nprint(ans)", "n = int(input())\n\nli = [0]*100\nfor i in range(n+1):\n    li[int(str(i)[0]+str(i)[-1])]+=1\nans = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        ans += li[int(str(i)+str(j))] * li[int(str(j)+str(i))]\n\nprint(ans)\n", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef f(num):\n    front = num\n    back = num\n    while front >= 10:\n        front //= 10\n    while back >= 10:\n        back %= 10\n    \n    return front, back\n\ndef Main():\n    n = read_int()\n    cnt = [[0] * 10 for _ in range(10)]\n    for x in range(1, n + 1):\n        front, back = f(x)\n        cnt[front][back] += 1\n    \n    ans = 0\n    for x in range(10):\n        for y in range(10):\n            ans += cnt[x][y] * cnt[y][x]\n    print(ans)\n\ndef __starting_point():\n    Main()\n__starting_point()", "#!/usr/bin/env python3\ndef main():\n    import numpy as np\n\n    N = int(input())\n\n    cnt = np.zeros((10, 10), dtype=np.int64)\n    for n in [str(x) for x in range(1, N + 1)]:\n        cnt[int(n[0])][int(n[-1])] += 1\n\n    print(((cnt[:, :] * cnt.T[:, :]).sum()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nnum = [[0] * 10 for i in range(10)]\nfor i in range(1,n+1):\n    j = str(i)\n    x = j[0]\n    y = j[-1]\n    if x != '0' and y != '0':\n        num[int(x)][int(y)] += 1\nans = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        ans += num[i][j] * num[j][i]\nprint(ans)", "n = int(input())\ncnt = [[0]*9 for _ in range(9)]\nfor i in range(1,n+1):\n    s = str(i)\n    if s[-1]!=\"0\":\n        cnt[int(s[0])-1][int(s[-1])-1] += 1\nans = 0\nfor i in range(9):\n    for j in range(9):\n        ans += cnt[i][j]*cnt[j][i]\nprint(ans)", "N = int(input())\ndp = [[0 for i in range(10)] for j in range(10)]\n \nfor i in range(1, N + 1):\n    i = str(i)\n    dp[int(i[0])][int(i[-1])] += 1\n \nans = 0\nfor i in range(1, 10):\n    for j in range(1, 10):\n        ans += dp[i][j] * dp[j][i]\nprint(ans)", "N = int(input())\ncnt = [[0] * 10 for i in range(10)]\nfor n in range(1, N + 1):\n    cnt[int(str(n)[0])][int(str(n)[-1])] += 1\n\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "n=int(input())\na=[[0]*10 for _ in range(10)]\nfor i in range(1,n+1):\n    s=str(i)\n    a[int(s[0])][int(s[-1])]+=1\nc=0\nfor i in range(1,10):\n    for j in range(1,10):\n        c+=a[i][j]*a[j][i]\nprint(c)\n", "N = int(input())\n\ndp = [[0] * 9 for _ in range(9)]\n\nfor i in range(1, N+1):\n  if i % 10:\n    st = str(i)\n    start = int(st[0])\n    end = int(st[-1])\n    dp[start-1][end-1] += 1\n\nans = 0\n\nfor i in range(9):\n  for j in range(9):\n    ans += dp[i][j] * dp[j][i]\n\nprint(ans)\n", "N = int(input())\nnum = [[0] * 10 for i in range(10)]\nfor i in range(1, N + 1):\n    num[int(str(i)[0])][int(str(i)[-1])] += 1\n    \nans = 0\n\nfor i in range(10):\n    for j in range(10):\n        ans += num[i][j] * num[j][i]\nprint(ans)", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\n\nfrom collections import defaultdict\ndic = defaultdict(int)\n\nfor i in range(1, N + 1):\n  s = str(i)\n  dic[(int(s[0]),int(s[-1]))] += 1\n  \nans = 0\nfor i in range(1, 10):\n  for j in range(1, 10):\n    ans += dic[(i,j)] * dic[(j,i)]\n    \nprint(ans)", "n = int(input())\nhist = [[0 for _ in range(10)] for _ in range(10)]\nfor i in range(1,n+1):\n    top = int(str(i)[0])\n    bot = int(str(i)[-1])\n    hist[top][bot] += 1\n    \nans = 0\n\nfor i in range(1,n+1):\n    top = int(str(i)[0])\n    bot = int(str(i)[-1])\n    ans += hist[bot][top]\n\nprint(ans)", "N=int(input())\ndp=[[0]*10 for _ in range(10)]\nfor i in range(1,N+1):\n  a=str(i)\n  dp[int(a[0])][int(a[-1])]+=1\nans=0\nfor i in range(10):\n  for j in range(10):\n    ans+=dp[i][j]*dp[j][i]\nprint(ans)", "from collections import defaultdict\nn = int(input())\nd = defaultdict(int)\nfor i in range(1, n+1):\n    if str(i)[-1] == '0':\n        continue\n    d[int(str(i)[0] + str(i)[-1])] += 1\nans = 0\nfor i in range(11, 100):\n    ans += d[i] * d[int(str(i)[1] + str(i)[0])]\nprint(ans)", "n = int(input())\nnum = [[0 for _ in range(10)] for _ in range(10)]\nfor i in range(1, n + 1):\n    num[int(str(i)[0])][int(str(i)[-1])] += 1\nans = 0\nfor i in range(1, 10):\n    for j in range(1, 10):\n        ans += num[i][j] * num[j][i]\nprint(ans)", "import numpy as np\nN = int(input())\nlist_all =np.zeros((9,9))\nnum_list = [str(i) for i in range(1,N+1)]\noverlap = [0 for i in range(9)]\nfor i in range(N):\n    head = int(num_list[i][0])\n    length = len(num_list[i])\n    tail = int(num_list[i][length -1])\n    if (head == 0) or (tail == 0):\n        continue\n    list_all[head-1,tail -1] += 1\nsum1 = 0\nfor i in range(9):\n    for j in range(i+1):\n        if i ==j:\n            sum1 += (list_all[i,j] * list_all[j,i])\n        else:\n            sum1 += (list_all[i,j] * list_all[j,i]) *2\nprint(int(sum1))", "# \u554f\u984c:\u6587\u5b57\u306e\u5148\u982d\u304c'i'\u3067\u672b\u5c3e\u304c'j', \u4e14\u3064\u6587\u5b57\u306e\u5148\u982d\u304c'j'\u3067\u672b\u5c3e\u304c'i'\u306e\u30da\u30a2\u306f\u3044\u304f\u3064\uff1f\n# 'n'\u4ee5\u4e0b\u306e\u5168\u3066\u306e\u6570\u306b\u3064\u3044\u3066 \u5148\u982d\u3092'i', \u672b\u5c3e\u304c'j'\u3068\u3057\u305fDB\u3092\u4f5c\u6210\n\nn = int(input())\n# cnt[i][j] := \u5148\u982d\u304c'i', \u672b\u5c3e\u304c'j'\u306e\u6570\ncnt = [[0] * 10 for _ in range(10)]\n\nfor i in range(1, n + 1):\n    cnt[int(str(i)[0])][int(str(i)[-1])] += 1\n\n# \u5148\u982d\u304c'i'\u3067\u672b\u5c3e\u304c'j'\u306e\u7dcf\u6570 [\u639b\u3051\u308b] \u5148\u982d\u304c'j'\u3067\u672b\u5c3e\u304c'i'\u306e\u7dcf\u6570\u306e\u7dcf\u548c\u304c'ans'\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\n\n\ndef solve(N: int):\n    m = [0] * 100\n    for n in range(N + 1):\n        s = str(n)\n        h = int(s[0])\n        l = int(s[-1])\n        if l != 0:\n            m[h * 10 + l] += 1\n\n    answer = 0\n    for h in range(1, 10):\n        for l in range(1, 10):\n            answer += m[h * 10 + l] * m[l * 10 + h]\n    return answer\n\n\ndef main():\n    N = int(input())\n    answer = solve(N)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\n\nans = 0\nfor i in range(1, N+1):\n    a = list(map(int, str(i)))\n    x = a[0]\n    y = a[-1]\n    if x == y:\n        ans += 1\n    if y != 0:\n        for j in (5, 4, 3, 2, 1):\n            z = (y+1)*(10**j)\n            if z <= N:\n                ans += 10**(j-1)\n            elif y*(10**j) + x <= N and N < z:\n                s = N-y*(10**j)\n                ans += int(s/10)\n                if N%10 >= x:\n                    ans += 1\n\nprint(ans)", "n=int(input())\ncount=[[0,0,0,0,0,0,0,0,0,0] for _ in range(10)]\nfor i in range(1,n+1):\n    count[int(list(str(i))[0])-1][int(list(str(i))[-1])-1]+=1\nans=0\nfor j in range(10):\n    for k in range(10):\n        ans+=(count[j][k]*count[k][j])\nprint(ans)", "N = int(input())\n\ncnt = [[0] * 10 for _ in range(10)]\n\nfor i in range(1,N+1):\n    x = i\n    while x >= 10:\n        x //= 10\n    cnt[x][i%10] += 1\n\nans = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "n = int(input())\nlst = [[0 for i in range(9)] for j in range(9)]\nfor i in range(1, n + 1):\n    s = str(i)\n    if i % 10:\n        lst[int(s[0]) - 1][i % 10 - 1] += 1\nres = 0\nfor i in range(9):\n    for j in range(9):\n        res += lst[i][j] * lst[j][i]\nprint(res)", "N = int(input())\nresults = {(str(i), str(j)): 0 for i in range(1, 10) for j in range(1, 10)}\n\n\nfor i in range(N+1):\n    s = str(i)\n    if (s[0], s[-1]) in results.keys():\n        results[(s[0], s[-1])] += 1\n\ncnt = 0\nfor i in range(1, 10):\n    for j in range(1, 10):\n        cnt += results[(str(i), str(j))] * results[(str(j), str(i))]\n\nprint(cnt)", "N=int(input())\nd={}\nfor i in range(1,10):\n  for j in range(1,10):\n    d[i*10+j]=0\nfor i in range(1,min(10,N+1)):\n  d[i*10+i]=1\nfor i in range(11,N+1):\n  i=str(i)\n  h,t=int(i[0])*10,int(i[-1])\n  if t!=0:\n    d[h+t]+=1\nans=0\nfor i in range(1,9):\n  for j in range(i+1,10):\n    ans+=(d[i*10+j]*d[j*10+i])*2\nfor i in range(1,10):\n  ans+=d[i*10+i]**2\nprint(ans)", "n=int(input())\n\nl=[[0 for i in range(10)] for j in range(10)]\n\nfor i in range(n+1):\n  i=str(i)\n  l[int(i[0])][int(i[-1:])]+=1\n\nans=0\n\nfor i in range(1,10):\n  for j in range(1,10):\n    ans+=l[i][j]*l[j][i]\nprint(ans)\n", "n=int(input())\nans=[[0]*9 for _ in range(9)]\nfor i in range(1,n+1):\n    s=str(i)\n    if s[0]!=\"0\" and s[-1]!=\"0\":\n        ans[int(s[0])-1][int(s[-1])-1]+=1\ncnt=0\nfor i in range(1,10):\n    for j in range(1,10):\n        cnt+=ans[i-1][j-1]*ans[j-1][i-1]\nprint(cnt)\n", "N = int(input())\n\ncount = [[0] * 10 for _ in range(10)]\nfor i in range(1, N + 1):\n    s = str(i)\n    head = int(s[0])\n    tail = int(s[-1])\n    count[head][tail] += 1\n\nans = 0\nfor a in range(1, N + 1):\n    s = str(a)\n    head = int(s[0])\n    tail = int(s[-1])\n    ans += count[tail][head]\nprint(ans)", "N = int(input())\n\ndp = [[0] * 9 for _ in range(9)]\n\nfor i in range(1, N+1):\n  if i % 10:\n    start = int(str(i)[0])\n    end = int(str(i)[-1])\n    dp[start-1][end-1] += 1\n\nans = 0\n\nfor i in range(9):\n  for j in range(9):\n    ans += dp[i][j] * dp[j][i]\n\nprint(ans)\n", "import math\n\ndef main():\n\tN = int(input())\n\tc = [[0] * 10 for i in range(10)]\n\tfor i in range(1, N + 1):\n\t\tdigit = int(math.log10(i)) + 1\n\t\tc[i // (10 ** (digit - 1))][i % 10] += 1\n\n\tcnt = 0\n\tfor i in range(10):\n\t\tfor j in range(10):\n\t\t\tcnt += c[i][j] * c[j][i]\n\n\tprint(cnt)\n\n\n\nmain()", "def main():\n    N = int(input())\n    comb_count = [[0 for i in range(10)] for j in range(10)]\n    res = 0\n\n    for i in range(1, N + 1):\n        s = str(i)\n        max, min = int(s[0]), int(s[-1])\n        comb_count[max][min] += 1\n\n    for l in range(1, 10):\n        for r in range(1, 10):\n            res += comb_count[l][r] * comb_count[r][l]\n        \n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "def solve():\n    table = [[0] * 10 for _ in range(10)]\n    for i in range(N + 1):\n        s = list(map(int, str(i)))\n        table[s[0]][s[-1]] += 1\n    return sum(table[i][j] * table[j][i] for i in range(1, 10) for j in range(1, 10))\n\n\nN = int(input())\nprint((solve()))\n", "n = int(input())\nt = [0] * 100\nfor i in range(11, 100):\n  msb = i // 10\n  lsb = i % 10\n  if lsb == 0:\n    continue\n  for j in range(1, n+1):\n    if j % 10 == lsb and int(str(j)[0]) == msb:\n      t[i] += 1\n\nans = 0\nfor i in range(11, 100):\n  msb = i // 10\n  lsb = i % 10\n  if lsb == 0:\n    continue\n  if msb == lsb:\n    ans += t[i] ** 2\n  else:\n    ans += t[i] * t[lsb * 10 + msb]\nprint(ans)\n", "import math\ndef comb(n, r):\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\nN = int(input())\nComlist = []\nAns = dict()\nAnswer = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        M = i*10 + j\n        Comlist.append(str(M))\n        Ans[str(M)] = 0\nfor k in range(1,N+1):\n    strk = str(k)\n    if k < 10:\n        Tar = strk + strk\n        Ans[Tar] += 1\n    else:\n        Tar = strk[0] + strk[-1]\n        if Tar in Ans:\n            Ans[Tar] += 1\nAnswer = 0\nfor q in range(len(Comlist)):\n    p = Comlist[q]\n    pin = p[1] + p[0]\n    Answer += Ans[p] * Ans[pin]\nprint(Answer)", "n = int(input()) \n\ncnt = [[0] * 10 for i in range(10)]\n\nfor i in range(n+1):\n    a = int(str(i)[0])\n    b = int(str(i)[-1])\n    if a == 0 or b == 0:\n        continue\n    cnt[a][b] += 1\n\nans = 0\nfor i in range(n+1):\n    a = int(str(i)[0])\n    b = int(str(i)[-1])\n    ans += cnt[b][a]\nprint(ans)", "import sys\nimport collections\nimport bisect\n\n\ndef main():\n    n = int(input())\n    ac, bc = collections.Counter([str(i + 1)[0] + str(i + 1)[-1] for i in range(\n        n)]), collections.Counter([str(i + 1)[-1] + str(i + 1)[0] for i in range(n)])\n    print((sum(ac[i] * bc[i] for i in list(ac.keys()))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nM = [0] * 100\nfor i in range(1, N+1):\n    i = str(i)\n    l, r = int(i[0]), int(i[-1])\n    M[l*10+r] += 1\nans = 0\nfor i, cnt in enumerate(M):\n    l, r = divmod(i, 10)\n    ans += cnt * M[r*10+l]\nprint(ans)\n", "import sys\nimport math\n\n# a != b \u306e\u3068\u304d\n\n\ndef count(a, b, N):\n\n    keta = len(str(N))\n\n    cnt = 0\n\n    # k == 1 \u306a\u3089 a == b\n    if a == b:\n        cnt += 1 if a <= N else 0\n\n    if keta == 1:\n        return cnt\n\n    # k == 2 \u306a\u3089 ba \u306e\u307f\n    if keta == 2:\n        cnt += 1 if b * 10 + a <= N else 0\n        return cnt\n\n    # k \u6841\u3088\u308a\u5c11\u306a\u3044\u6570\u306e\u5834\u5408 : \u597d\u304d\u306a\u6570\u3092\u9593\u306b\u631f\u3080\n    for k in range(2, keta):\n        cnt += 10**(k - 2)\n\n    # k \u6841\u306e\u6570\u5b57\u306e\u5834\u5408\n    s = N // (10**(keta - 1))\n    t = N % 10\n    if b > s:\n        return cnt\n    elif b < s:\n        cnt += 10**(keta - 2)\n    else:\n        tempN = (N - s * (10**(keta - 1)) - t) // 10\n        # print(f\"tempN {tempN}\")\n        cnt += (tempN + 1)  # tempN \u304c 1 \u306a\u3089 0,1 \u3092\u9078\u3079\u308b\n        if a > t:\n            cnt -= 1\n\n    return cnt\n\n\ndef count_aa(a, N):\n\n    keta = len(str(N))\n\n    cnt = 0\n\n    # keta == 1\n    if keta == 1:\n        return 1 if a <= N[-1] else 0\n\n    cnt += 1  # a\n\n    # k == 2 \u306a\u3089 aa \u306e\u307f\n    if keta == 2:\n        return cnt + 1 if a <= N[-1] else 0\n\n    # 3\u6841\u4ee5\u4e0a\n    # k \u6841\u3088\u308a\u5c11\u306a\u3044\u6570\u306e\u5834\u5408\n    for k in range(2, keta):\n        cnt += 10**(k - 2)\n\n    # k \u6841\u306e\u6570\u5b57\u306e\u5834\u5408\n    s = N // (10**(keta - 1))\n    t = N % 10\n    if b > s:\n        return cnt\n    elif b < s:\n        cnt += 10**(keta - 2)\n    else:\n        tempN = (N - s * (10**(keta - 1)) - t) // 10\n        # print(f\"tempN {tempN}\")\n        cnt += (tempN + 1)  # tempN \u304c 1 \u306a\u3089 0,1 \u3092\u9078\u3079\u308b\n        if a > t:\n            cnt -= 1\n\n    return cnt\n\n\nN = int(input())\n\nc = 0\nfor i in range(1,N+1):\n    a = int(str(i)[0])\n    b = i % 10\n    # print(a,b)\n    if b == 0:\n        continue\n    c += count(a,b,N)\n\nprint(c)", "n = int(input())\n\ngraph = [[0] * 9 for i in range(9)]\n\nfor i in range(1, n + 1):\n    if i % 10 != 0:\n        i = str(i)\n        sentou = int(i[0])\n        matubi = int(i[-1])\n        graph[sentou - 1][matubi - 1] += 1\n\nimport numpy as np\n\ngraph = np.array(graph)\n\nprint(np.trace(np.dot(graph, graph)))", "N = int(input())\n# cnt[i][j] := \u5148\u982d\u304ci, \u672b\u5c3e\u304cj\u3067\u59cb\u307e\u308b\u3088\u3046\u306a\u6570\ncnt = [[0] * 10 for i in range(10)]\nfor n in range(1, N + 1):\n    cnt[int(str(n)[0])][int(str(n)[-1])] += 1\n\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "n = int(input())\ncnt = [[0] * 10 for i in range(10)]\n\n#int(str(n)[i]) n\u306ei\u6841\u76ee\nfor n in range(1, n+1):\n  cnt[int(str(n)[0])][int(str(n)[-1])] += 1\n\nans = 0\nfor i in range(10):\n  for j in range(10):\n    ans += cnt[i][j]*cnt[j][i]\n\nprint(ans)\n", "n=int(input())\nl=[[0]*10 for i in range(10)]\n\nfor i in range(1,min(10,n+1),1):\n    l[i][i]+=1\n\nif len(str(n))>=2:\n    for k in range(2,len(str(n)),1):\n        for i in range(1,10,1):\n            for j in range(1,10,1):\n                l[i][j]+=10**(k-2)\n\n    for i in range(1,int(str(n)[0]),1):\n        for j in range(1, 10, 1):\n            l[i][j] += 10**(len(str(n))-2)\n    if len(str(n))>=3:\n        for j in range(1, 10, 1):\n            if j<=int(str(n)[-1]):\n                l[int(str(n)[0])][j]+=int(str(n)[1:-1])+1\n            else:\n                l[int(str(n)[0])][j] += int(str(n)[1:-1])\n    else:\n        for j in range(1, 10, 1):\n            if j<=int(str(n)[-1]):\n                l[int(str(n)[0])][j]+=1\n\nt=0\nfor i in range(1,10,1):\n    for j in range(1,10,1):\n        t+=l[i][j]*l[j][i]\n\nprint(t)", "N = int(input())\nans = 0\nlst = [0]*100\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    if a == b:\n        lst[int(a)] += 1\n\n    if b == '0':\n        pass\n\n    else:\n        lst[int(b+a)] += 1\n\nfor i in range(1, N+1):\n    A = str(i)\n    a, b = A[0], A[-1]\n    c = int(a+b)\n    ans += lst[c]\n\nprint(ans)", "N = int(input())\nbucket = [[0] * 10 for _ in range(10)]\n\nfor n in range(1, N + 1):\n    n = str(n)\n    bucket[int(n[0])][int(n[-1])] += 1\n\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += bucket[i][j] * bucket[j][i]\n\nprint(ans)", "N = int(input())\n\nfrom collections import defaultdict\ndic = defaultdict(int)\n\nfor i in range(1, N + 1):\n  s = str(i)\n  dic[(s[0], s[-1])] += 1\n\nans = 0\nfor key in dic.keys():\n  a,b = key\n  if (b,a) in dic:\n    ans += dic[(a,b)] * dic[(b,a)]\n  \nprint(ans)", "n = int(input())\nc = [[0 for j in range(10)] for i in range(10)]\n\nfor i in range(1,n+1):\n    t = str(i)\n    c[int(t[0])][int(t[-1])] += 1\n    \nans = 0\nfor i in range(1,10):\n    for j in range(1,10):\n        ans += c[i][j]*c[j][i]\nprint(ans)", "N=int(input())\n\ntable=[[0]*9 for i in range(9)]\n\nfor i in range(1,N+1):\n  if int(str(i)[len(str(i))-1])==0:\n    continue\n  table[int(str(i)[0])-1][int(str(i)[len(str(i))-1])-1]+=1\n\nans=0\nfor i in range(9):\n  for j in range(i,9):\n    if i==j:\n      ans+=table[i][j]*table[j][i]\n    else:\n      ans+=table[i][j]*table[j][i]*2\nprint(ans)", "##\u4ee5\u4e0b\u30b0\u30b0\u3063\u305f\uff08https://at274.hatenablog.com/entry/2020/01/24/060000\uff09\nn = int( input() )\n\ncnt = [ [ 0 for i in range( 10 ) ] for j in range( 10 ) ]\n# cnt[ i ][ j ] = \u5148\u982d\u304ci\uff0c\u672b\u5c3e\u304cj\u3067\u3042\u308b\uff0cn\u4ee5\u4e0b\u306e\u6574\u6570\u306e\u500b\u6570\n\nfor k in range( n + 1 ):\n    head = int( str( k )[ 0 ] )\n    foot = int( str( k )[ -1 ] )\n    cnt[ head ][ foot ] += 1\n\nans = 0\nfor i in range( 1, 10 ):\n    for j in range( 1, 10 ):\n        ans += cnt[ i ][ j ] * cnt[ j ][ i ]\n\nprint( ans )", "n=int(input())\nif n<=9:\n    print(n)\n    return\ndp=[[0]*10 for _ in range(10)]\nfor k in range(1,n+1):\n    s=str(k)\n    dp[int(s[0])][int(s[-1])]+=1\nans=0\nfor i in range(10):\n    for j in range(10):\n        ans+=dp[i][j]*dp[j][i]\nprint(ans)", "# import itertools\n# import math\n# from functools import reduce\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\n# def gcd_list(numbers):\n#     return reduce(math.gcd, numbers)\n\n# if gcd_list(A) > 1:\n#     print(\"not coprime\")\n#     return\n\n# \u9ad8\u901f\u7d20\u56e0\u6570\u5206\u89e3\u6e96\u5099\n#MAXN = 10**6+10\n#sieve = [i for i in range(MAXN+1)]\n#p = 2\n#while p*p <= MAXN:\n#    if sieve[p] == p:\n#        for q in range(2*p, MAXN+1, p):\n#            if sieve[q] == q:\n#                sieve[q] = p\n#    p += 1\n\ncnt = [[0] * 10 for i in range(10)]\nfor i in range(1, N + 1):\n    cnt[int(str(i)[0])][int(str(i)[-1])] += 1\n\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j] * cnt[j][i]\n\nprint(ans)", "from collections import defaultdict\nN = int(input())\n\nhead_tail = defaultdict(int)\nfor i in range(1, N + 1):\n    tail = i % 10\n    head = int(str(i)[0])\n    head_tail[(head, tail)] += 1\n\nanswer = 0\nfor i in range(1, N + 1):\n    head = int(str(i)[0])\n    tail = i % 10\n    answer += head_tail[(tail, head)]\nprint(answer)", "N = int(input())\nl = [[0] * 10 for i in range(10)]\n\nfor i in range(1, N+1):\n    s = len(str(i))\n    if s == 1:\n        l[i][i] += 1\n    else:\n        l[i//(10**(s-1))][i%10] += 1\n\nans = 0\n\nfor i in range(1, 10):\n    for j in range(1, 10):\n        ans += l[i][j] * l[j][i]\n\n#for i in range(10):\n#    print(l[i])\n\nprint(ans)", "n = int(input())\n\ncnt = [[0] * 10 for _ in range(10)]\nfor i in range(1, n+1):\n    cnt[int(str(i)[0])][int(str(i)[-1])] += 1\nans = 0\nfor i in range(10):\n    for j in range(10):\n        ans += cnt[i][j]*cnt[j][i]\nprint(ans)", "n=int(input())\ncnt=[[0]*10 for i in range(10)]\nfor i in range(1,n+1):\n  cnt[int(str(i)[0])][int(str(i)[-1])]+=1\nans=0\nfor i in range(1,10):\n  for j in range(1,10):\n    ans+=cnt[i][j]*cnt[j][i]\nprint(ans)    ", "memo = [[0] * 10 for i in range(10)]\n\ndef kazu(start_num,end_num):\n    nonlocal memo\n    if memo[start_num][end_num] > 0:\n        #print('memo',start_num,end_num)\n        return memo[start_num][end_num]\n    else:\n        ans = 0\n        #1\u6841\n        if start_num == end_num:\n            if start_num <= n:\n                #print(start_num)\n                ans += 1\n        #2\u6841\n        if start_num * 10 + end_num <= n:\n            #print(start_num * 10 + end_num)\n            ans += 1\n        #3\u6841\n        for i in range(10):\n            if start_num * 100 + i * 10 + end_num <= n:\n                #print(start_num * 100 + end_num)\n                ans += 1\n            else:\n                break\n        #4\u6841\n        for i in range(100):\n            if start_num * 1000 + i * 10 + end_num <= n:\n                #print(start_num * 1000 + end_num)\n                ans += 1\n            else:\n                break\n        #5\u6841\n        for i in range(1000):\n            if start_num * 10000 + i * 10 + end_num <= n:\n                #print(start_num * 10000 + end_num)\n                ans += 1\n            else:\n                break\n        #6\u6841\n        for i in range(10000):\n            if start_num * 100000 + i * 10 + end_num <= n:\n                #print(start_num * 100000 + end_num)\n                ans += 1\n            else:\n                break\n        memo[start_num][end_num] = ans\n        #print(start_num,end_num,'---',ans)\n        return ans\n\nn = int(input())\nstr_n = str(n)\nkotae = 0\n#print(memo)\nfor a in range(1,n+1):\n    if a%10!=0:\n        str_a = str(a)\n        #print('-----',a,'-----',int(str_a[-1]),int(str_a[0]))\n        kotae += kazu(int(str_a[-1]),int(str_a[0]))\n        #print(memo)\nprint(kotae)", "from collections import defaultdict\nn = int(input())\n\nd = defaultdict(int)\nfor i in range(1, n+1):\n    s = str(i)\n    f = int(s[0])\n    b = int(s[-1])\n    d[(f, b)] += 1\n\nans = 0\nfor a in range(1, 10):\n    for b in range(1, 10):\n        ans += d[(a, b)] * d[(b, a)]\nprint(ans)", "n = int(input())\na = [[0 for i in range(10)] for j in range(10)]\nfor i in range(1, n+1):\n    s = str(i)\n    if s[-1] != '0':\n        a[int(s[0])][int(s[-1])] += 1\nans = 0\nfor i in range(1, 10):\n    for j in range(1, 10):\n        ans += a[i][j] * a[j][i]\nprint(ans)", "N=int(input())\nA=[str(i)for i in range(1,10)]\nans=0\nfor a in A:\n    for b in A:\n        countA=0\n        if a==b and int(a)<=N:\n            countA+=1\n        for i in range(5):\n            m=int(a+'0'*i+b)\n            M=int(a+'9'*i+b)\n            if m<=N:\n                if M<=N:\n                    countA+=10**i\n                else:\n                    while m<=N:\n                        countA+=1\n                        m+=10\n\n        countB=0\n        if b==a and int(b)<=N:\n            countB+=1\n        for i in range(5):\n            m=int(b+'0'*i+a)\n            M=int(b+'9'*i+a)\n            if m<=N:\n                if M<=N:\n                    countB+=10**i\n                else:\n                    while m<=N:\n                        countB+=1\n                        m+=10\n\n        ans+=countA*countB\nprint(ans)", "N=int(input());a,b=divmod(N,10);h=lambda n:h(n//10)if n>9else n;print(a**2+8+sum((h(i)<=b)*(i%10==h(N))*(1+(a!=i//10))for i in range(1,N+1))if a else N)", "#!/usr/bin/env python3\ndef main():\n    import numpy as np\n\n    N = int(input())\n\n    cnt = np.zeros((10, 10), dtype=np.int64)\n    for n in map(str, list(range(1, N + 1))):\n        cnt[int(n[0])][int(n[-1])] += 1\n\n    print((np.sum(cnt * cnt.T)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = int(input())\n    dp = [[0 for i in range(10)] for i in range(10)]\n    for i in range(1,n+1):\n        h,t = int(str(i)[0]), int(str(i)[-1])\n        dp[h][t] += 1\n    ans = 0\n    for i in range(10):\n        for j in range(10):\n            ans += dp[i][j] * dp[j][i]\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\n\nX = [[0 for _ in range(10)] for _ in range(10)]\n\nfor i in range(1, N+1):\n    s = str(i)\n    a, b = int(s[0]), int(s[-1])\n    X[a][b] += 1\n\nans = 0\nfor a in range(10):\n    for b in range(10):\n        ans += X[a][b] * X[b][a]\n\nprint(ans)\n", "N = int(input())\n\nd = dict()\nfor i in range(1, N + 1):\n    _0 = str(i)[0]\n    _1 = str(i)[-1]\n    if _1 == \"0\":\n        continue\n    s = _0 + _1\n    if s in d:\n        d[s] += 1\n    else:\n        d[s] = 1\n\nres = 0\nfor i in range(1, N + 1):\n    _0 = str(i)[0]\n    _1 = str(i)[-1]\n    if _1 == \"0\":\n        continue\n    s = _1 + _0\n    if s in d:\n        res += d[s]\n    \nprint(res)\n", "N=int(input())\nl=[[0]*10 for i in range(10)]\n\n\nfor i in range(1,N+1):\n  l[int(str(i)[0])][int(str(i)[-1])]+=1\n\nans=0\nfor i in range(10):\n  for j in range(10):\n    ans+=l[i][j]*l[j][i]\n  \nprint(ans)\n", "def solve():\n    N = int(input())\n    cnt = [[0]*10 for i in range(10)]\n    for i in range(1, N+1):\n        target_str = str(i)\n        cnt[int(target_str[0])][int(target_str[-1])] += 1\n\n    ans = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            ans += cnt[i][j] * cnt[j][i]\n    print(ans)\n\ndef __starting_point():\n    solve()\n__starting_point()", "N = int(input())\n\nans = 0\ncnt = [[0] * 10 for i in range(10)]\n\nfor i in range(1,N+1):\n    cnt[int(str(i)[0])][int(str(i)[-1])] += 1\n\nfor i in range(1,N+1):\n    ans += cnt[int(str(i)[-1])][int(str(i)[0])]\n\nprint(ans)\n"]