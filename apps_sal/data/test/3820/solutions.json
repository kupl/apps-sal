["#!/usr/bin/env python3\ndef solve(n, m, s, t):\n    if '*' in s:\n        l, r = s.split('*')\n        return len(l) + len(r) <= len(t) and t.startswith(l) and t.endswith(r)\n    else:\n        return s == t\n\nn, m = list(map(int, input().split()))\ns = input()\nt = input()\nprint(['NO', 'YES'][solve(n, m, s, t)])\n", "input()\na = input()\nb = input()\n\nif '*' in a:\n    x, y = a.split('*')\n    if b.startswith(x) and b.endswith(y) and len(b) >= (len(x) + len(y)):\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('YES' if a == b else 'NO')\n", "n, m = list(map(int, input().split()))\ns = input()\nt = input()\n\nif '*' in s:\n    a, b = s.split('*')\n    if len(a) + len(b) <= len(t) and t.startswith(a) and t.endswith(b):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    if s == t:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn, m = mi()\ns = input().strip()\nt = input().strip()\nok = 0\nif '*' not in s:\n    ok = s == t\nelse:\n    i = s.index('*')\n    l = s[:i]\n    r = s[i+1:]\n    if t.startswith(l):\n        t = t[i:]\n        if t.endswith(r):\n            ok = 1\nprint('YES' if ok else 'NO')", "def solve(s,t):\n    ss=s.split('*')\n    if len(ss)==1:\n        return ss[0]==t\n    else:\n        return t.startswith(ss[0]) and t.endswith(ss[1]) and len(t)>=len(s)-1\n\ninput()\ns=input()\nt=input()\nif solve(s,t):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = list(map(int, input().split()))\ns = input()\nt = input()\nk = s.find(\"*\")\nif k == -1 or n > m + 1:\n    if s == t:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    if s[:k] == t[:k] and s[k+1:] == t[m - (n - k - 1):]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "input()\ns = input()\nt = input()\nif s.count('*'):\n  for i in range(len(s)):\n    if s[i] == '*':\n      print('YES' if s[0:i] == t[0:i] and s[i + 1:] == t[len(t) - len(s[i + 1:]):] and i <= len(t) - len(s[i + 1:]) else 'NO')\n      return\nelse:\n  print('YES' if s == t else 'NO')\n", "n,m=list(map(int,input().strip().split()))\nr=input()\ns=input()\nif \"*\" not in r:\n\tif r==s:\n\t\tprint (\"YES\")\n\telse:\n\t\tprint (\"NO\")\n\treturn\nr1,r2=r.split(\"*\")\nif len(s)<(len(r1)+len(r2)):\n\tprint (\"NO\")\nelse:\n\tl1=len(r1)\n\tl2=len(r2)\n\tif s[0:l1]==r1 and s[len(s)-l2:]==r2:\n\t\tprint (\"YES\")\n\telse:\n\t\tprint (\"NO\")\n\n\n", "n, m = list(map(int, input().split()))\ns = input()\nt = input()\n\nif '*' not in s:\n\tif s == t:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\nelse:\n\ta = s.split('*')\n\tif len(t) >= len(s) - 1 and t[:len(a[0])] == a[0] and (len(a[1]) == 0 or t[-len(a[1]):] == a[1]):\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "n,m = list(map(int,input().split()))\ns = input()\nt = input()\nx = s.find('*')\nif(s==t):\n    print('YES')\nelif(x==-1):\n    print('NO')\nelif(n-1>m):\n    print('NO')\nelse:\n    if(s[:x]==t[:x]):\n        z = s[x+1:]\n        z = z[::-1]\n        p = t[::-1]\n        p = p[:len(z)]\n        if(p==z):\n            print('YES')\n        else:\n            print('NO')\n    else:\n        print('NO')\n", "n, m = map(int, input().split())\ns = input()\nt = input()\nif len(s) - 1 > m:\n    print('NO')\nelif s == '*':\n    print('YES')\nelif '*' not in s:\n    if s == t:\n        print('YES')\n    else:\n        print('NO')\nelse:\n    for i in range(len(s)):\n        if s[i] == '*':\n            pos = i\n            break\n    if s[0 : pos] == t[0 : pos] and s[pos + 1:] == t[m - (n - pos) + 1:]:\n        print('YES')\n    else:\n        print('NO')", "n = input()\ns = input()\nt = input()\np = s.find('*')\nif (p == -1):\n\tif (s == t):\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n\treturn\nsl = len(s) - p - 1\nif (s[:p] == t[:p] and t[len(t) - sl:] == s[p + 1:] and len(t) >= len(s) - 1):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "N, M = list(map(int, input().split()))\nS = input().split('*')\nT = input()\n\nif (len(S) == 1):\n  print(\"YES\" if S[0] == T else \"NO\")\nelse:\n  print(\"YES\" if S[0] == T[:len(S[0])] and S[1] == T[len(T) - len(S[1]):] and len(S[0]) + len(S[1]) <= len(T) else \"NO\")\n", "n, m = list(map(int, input().split()))\ns = input()\nt = input()\nif '*' not in s:\n    print('YES' if s == t else 'NO')\nelse:\n    i = s.index('*')\n    print('YES' if i <= m and s[:i] == t[:i] and n - 1 - i <= m - i and s[i + 1:] == t[m - (n - i - 1):] else 'NO')\n", "input()\ns=input()\nt=input()\nif \"*\" not in s:\n    print(\"YES\" if s==t else \"NO\")\nelse:\n    l,r=s.split(\"*\")\n    if t.startswith(l) and t.endswith(r) and len(l) + len(r) <= len(t):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "input()\ns = input()\nt = input()\n\ns = ' ' + s + ' '\nt = ' ' + t + ' '\n\nif '*' in s:\n\tidx = s.find('*')\n\tprefix, suffix = s[:idx], s[idx+1:]\n\tprint('YES' if len(s)-1 <= len(t) and prefix == t[:len(prefix)] and suffix == t[-len(suffix):] else 'NO')\nelse:\n\tprint('YES' if s == t else 'NO')", "n, m = map(int, input().split())\ns = input()\nt = input()\nif '*' not in s:\n    if s == t:\n        print('YES')\n    else:\n        print('NO')\n    return\nind = s.find('*')\nif s[:ind] == t[:ind] and s[ind + 1:] == t[m - n + ind + 1:] and m - n + ind + 1 >= ind:\n    print('YES')\nelse:\n    print('NO')", "USE_STDIO = False\n\nif not USE_STDIO:\n    try: import mypc\n    except: pass\n\ndef main():\n    n, m = list(map(int, input().split(' ')))\n    s = input()\n    t = input()\n\n    i = s.find('*')\n    if i < 0: return s == t\n    return len(t) >= len(s) - 1 and s[:i] == t[:i] and s[i+1:] == t[len(t)-len(s)+i+1:]\n\ndef __starting_point():\n    print(['NO', 'YES'][main()])\n\n\n\n\n__starting_point()", "n, m = map(int, input().split())\ns, t = input(), input()\nif '*' not in s:\n    if s == t:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    return\ns1 = s[:s.find('*')]\ns2 = s[s.find('*') + 1:]\nif t[:len(s1)] == s1 and t[len(t) - len(s2):] == s2 and len(s1) + len(s2) <= len(t):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = [int(x) for x in input().split()]\na = input()\nb = input()\nif \"*\" not in a:\n    if a == b:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    part1,part2 = a.split(\"*\")\n    if b.startswith(part1) and b.endswith(part2) and len(part1)+len(part2)<=len(b):\n        print(\"YES\")\n    else: \n        print(\"NO\")", "n, m = (int(x) for x in input().split())\na = input()\nb = input()\nif '*' not in a:\n    if a == b:\n        print('YES')\n    else:\n        print('NO')\n    quit()\nl, r = a.split('*')\nif len(b) >= len(a) - 1:\n    if l == b[:len(l)] and r == b[len(b) - len(r):]:\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')\n", "# from math import ceil\n#from sys import stdout\n\nt = 1#int(input())\nfor test in range(1,t+1):\n    n,m = (list(map(int, input().split())))\n    s = input()\n    t = input()\n    if n-m>1:\n    \tprint(\"NO\")\n    \tcontinue\n    tmp = s.find('*')\n    if tmp == -1:\n    \tif s==t:\n    \t\tprint(\"YES\")\n    \telse:\n    \t\tprint(\"NO\")\n    else:\n    \tif s[:tmp]==t[:tmp] and s[tmp+1:]==t[m-(n-tmp-1):]:\n    \t\tprint(\"YES\")\n    \telse:\n    \t\tprint(\"NO\")\n", "n, m = map(int,input().split())\ns = input()\nt = input()\nindex = s.find('*')\nif n-m>1:\n    print('NO')\nelse:\n#print(s[:index],t[:index])\n#print(s[index+1:],t[m-len(s[index+1:]):])\n    if s[:index] == t[:index] and s[index+1:] == t[m-len(s[index+1:]):]:\n        print('YES')\n    else:\n        print('NO')", "n,m=list(map(int,input().split()))\ns=input()\nt=input()\ndef f():\n    if \"*\" not in s:\n        return s==t\n    if n-1>m:\n        return False\n    x=s.find(\"*\")\n    return s[:x]==t[:x] and s[x+1:]==t[m-(n-1-x):]\nif f():\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n,m=map(int,input().split())\ns=input()\nt=input()\nk=-1\nfor i in range(n):\n    if s[i]=='*':\n        k=i\n        break\nif s[0:i]==t[0:i] and s[i+1:n]==t[m-n+i+1:m]:\n    if (k==-1 and s!=t) or (n>m+1):\n        print('NO')\n    else:\n        print('YES')\nelse:\n    print('NO')"]