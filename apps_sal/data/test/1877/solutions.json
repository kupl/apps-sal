["n = int(input())\ns = input()\nx = 0\ny = 0\nans = 0\npred = -1\nfor c in s:\n    if c == 'U':\n        y += 1\n    else:\n        x += 1\n    if x == y:\n        continue\n    if x > y:\n        cur = 0\n    else:\n        cur = 1\n    if cur != pred and pred != -1:\n        ans += 1\n    pred = cur\nprint(ans)\n", "N = int(input())\nmoves = input()\n\n# print(N)\n# print(moves)\n\npos_x, pos_y = 0, 0\ncoins = 0\nkingdom = None\nfor m in moves:\n    if m == \"R\":\n        pos_x += 1\n    else:\n        pos_y += 1\n    if pos_x < pos_y:\n        if kingdom == \"lower\":\n            coins += 1\n        kingdom = \"upper\"\n    if pos_x > pos_y:\n        if kingdom == \"upper\":\n            coins += 1\n        kingdom = \"lower\"\n\nprint(coins)\n", "n = int(input())\ns = input()\nbal = 0\nlast = 0\nans = 0\nfor i in s:\n    if i == 'U':\n        bal += 1\n    else:\n        bal -= 1\n    if bal == 0:\n        continue\n    if last * bal < 0:\n        ans += 1\n    last = bal\nprint(ans)", "n = int (input())\ns = input()\n\nplace = 0\nres = 0\nprev_place = 0\n\nfor c  in s:\n    if c == \"U\":\n        place += 1\n    else:\n        place -= 1\n    if place != 0 :\n        if place *prev_place <0:\n            res += 1\n        prev_place = place\n\nprint(res)\n\n", "n=int(input())\ns=input()\nx=0\ny=0\nans=0\nfor i in range(n-1):\n    if s[i]=='U':\n        y+=1\n    else:\n        x+=1\n    if y==x and s[i+1]==s[i]:\n        ans+=1\nprint(ans)\n", "n = int(input())\nst = input()\nisUp = st[0] == 'U'\nx = 0\ny = 0\nif st[0] == 'U':\n\ty += 1\nelse:\n\tx += 1\nc = 0\nfor i in range(1,n):\n\tif isUp and x == y and st[i] == 'R':\n\t\tc += 1\n\t\tisUp = False\n\telif not isUp and x == y and st[i] == 'U':\n\t\tc += 1\n\t\tisUp = True\n\tif st[i] == 'U':\n\t\ty += 1\n\telse:\n\t\tx += 1\nprint(c)", "def getCoord(x, y, t):\n\tif t == 'U':\n\t\treturn (x, y + 1)\n\treturn (x + 1, y)\n\nn = int(input())\ns = input()\nx, y = getCoord(0, 0, s[0])\nt = 1\nif x < y:\n\tt = 0\nans = 0\nfor ch in s[1:]:\n\tx, y = getCoord(x, y, ch)\n\tif x == y:\n\t\tcontinue\n\tnt = 1\n\tif x < y:\n\t\tnt = 0\n\tif t != nt:\n\t\tt = nt\n\t\tans += 1\nprint(ans)", "n = int(input())\ns = input()\nr = 0\nu = 0\ncst = 0\nif s[0] == 'R': r+=1\nelse: u += 1\nfor i in range(1,n-1):\n    if s[i] == 'R': r+=1\n    else: u+=1\n    if u == r and s[i]==s[i+1]:\n        cst += 1\nprint(cst)\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\nS = input().strip()\nx = y = c = 0\nk = None\nfor s in S:\n    if s == 'U':\n        y += 1\n    else:\n        x += 1\n    if y > x:\n        if k == 'D': c += 1\n        k = 'U'\n    elif x > y:\n        if k == 'U': c += 1\n        k = 'D'\n        \nprint(c)", "import sys, math\n\n#f = open('input/input_2', 'r')\nf = sys.stdin\n\nN = int(f.readline())\nS = f.readline().strip()\n\nkingdom = 0\nx = 0\ny = 0\nans = 0\nfor action in S:\n  if x == y and \\\n    ((kingdom == 1 and action == 'U') or\n     (kingdom == 2 and action == 'R')):\n     ans += 1\n\n  if action == 'U':\n    y += 1\n  elif action == 'R':\n    x += 1\n\n  if x > y:\n    kingdom = 1\n  elif x < y:\n    kingdom = 2\n\nprint(ans)\n", "def sgn(x):\n  if x == 0:\n    return 0\n  return 1 if x > 0 else -1\n\nn = int(input())\nx = 0\ny = 0\nres = 0\nlast = 0\nfor ch in input().strip():\n  if ch == 'U':\n    y += 1\n  else:\n    x += 1\n  if sgn(x-y) * last < 0:\n    res += 1\n  if x != y:\n    last = sgn(x-y)\n\nprint(res)\n", "n = int(input())\ns = input()\ncount = 0\nkindom = 0\nx, y = 0, 0\nfor i in s:\n    if i == 'U':\n        y += 1\n    elif i == 'R':\n        x += 1\n    if x > y:\n        if kindom == 2:\n            count += 1\n        kindom = 1\n    if x < y:\n        if kindom == 1:\n            count += 1\n        kindom = 2\nprint(count)\n", "import math\nn = int(input())\nans = 0\nnr = 0\nnu = 0\nside = 0\n\n\nmm = list(input())\nfm = mm[0]\nmm = mm[1:]\n\nif fm == \"U\":\n    side = 1\n    nu = 1\nelse:\n    side = -1\n    nr = 1\n\n\n\nfor m in  mm:\n    if nu==nr:\n\n        if m ==\"U\" and side == -1:\n            ans +=1\n            side = 1\n        elif m == \"R\" and side == 1:\n            ans += 1\n            side = -1\n\n    if m == \"U\":\n        nu += 1\n    else:\n        nr +=1\n\n\nprint(ans)\n\n", "n = int(input())\n\ns = input()\n\nx = 0\ny = 0\n\nk = 0\nfor i in range(len(s) - 1):\n    if s[i] == 'U':\n        y += 1\n    else:\n        x += 1\n    if x == y:\n        if s[i] == s[i + 1]:\n            k += 1\n\nprint(k)\n", "n = int(input())\ns = list(input())\n\ncur = [0,0]\nf  = 0\nc = 0\nfor i in s:\n\tif i=='U':\n\t\tcur[1]+=1\n\telse:\n\t\tcur[0]+=1\n\tif cur[0]>cur[1]:\n\t\tif f==2:\n\t\t\tc+=1\n\t\tf = 1\n\telif cur[1]>cur[0]:\n\t\tif f==1:\n\t\t\tc+=1\n\t\tf = 2\nprint (c)", "n = input()\ns = list(input())\n\nx, y = 0, 0\nk = 0\n\ncc = 0\n\nfor m in s:\n    nk = k\n    if m == 'U':\n        y += 1\n    elif m == 'R':\n        x += 1\n    if y > x:\n        nk = 1\n    elif y < x:\n        nk = -1\n    if nk * k == -1:\n        cc += 1\n    k = nk\n\nprint(cc)\n\n\n\n\n", "input()\nx=y=0\nl=[]\ns=input()\nfor ele in s:\n  if ele=='U':\n    y+=1\n  else:\n    x+=1\n  if x>y:\n    l.append(1)\n  if x==y:\n    l.append(l[-1])\n  if x<y:\n    l.append(0)\ncnt=0\nfor i in range(1,len(l)):\n  if l[i]!=l[i-1]:\n    cnt+=1\nprint(cnt)\n", "n=int(input())\nx=0\ny=0\ns=input()\nl=[]\nfor i in range(0,len(s)):\n    if s[i]=='R':\n        x+=1\n    else:\n        y+=1\n    l.append(x-y)\nif n<=2:\n    print(0)\nelse:\n    c=0\n    for j in range(1,n-1):\n        if l[j]==0 and l[j-1]*l[j+1]<0:\n            c+=1\n    print(c)\n\n", "n = int(input())\ns = input()\nx = y = 0\np = 0\nl = 'X'\nlx = ly = -1\nfor c in s:\n    if c == 'U':\n        y += 1\n    elif c == 'R':\n        x += 1\n    if lx == ly and l == c:\n        p += 1\n    l = c\n    lx = x\n    ly = y\nprint(p)", "n = int(input())\nS = input()\n\nc = ([0, 1], [1, 0])[S[0] == 'R']\nf = c[0] == 1\n\nans = 0\nfor el in S[1:]:\n    if el == 'R':\n        c[0] += 1\n\n        if not f and c[0] - c[1] == 1:\n            ans += 1\n            f = not f\n\n    elif el == 'U':\n        c[1] += 1\n\n        if f and c[1] - c[0] == 1:\n            ans += 1\n            f = not f\n\n    else:\n        exit(100500)\n\nprint(ans)\n", "#This code sucks, you know it and I know it.  \n#Move on and call me an idiot later.\n\nn = int(input())\ns = input()\nx = 0; y = 0\ncnt = 0\nfor i in range(n):\n    if s[i] == \"U\":\n        y += 1\n    else:\n        x += 1\n    if x == y and i+1 < n:\n        if (s[i] == 'U' and s[i+1] == 'U') or (s[i] == 'R' and s[i+1] == 'R'):\n            cnt += 1\nprint(cnt)", "n = int(input())\ns = input()\ncnt = 0\np = True\nx = 0\ny = 0\nfor i in s:\n    if not (x == 0 and y == 0):\n        if p and x == y and i == 'R':\n            cnt += 1\n            p = False\n        elif not p and x == y and i == 'U':\n            cnt += 1\n            p = True\n    elif i == 'R':\n        p = False\n    else:\n        p = True\n\n    if i == 'R':\n        x += 1\n    if i == 'U':\n        y += 1\nprint(cnt)\n", "n = int(input())\ns = input()\nind = \"U\"\nans = 0\nif s[0] == \"R\":\n\tind = \"R\"\ncountr = 0\ncountu = 0\nfor i in s:\n\tif i == \"R\":\n\t\tcountr += 1\n\telse:\n\t\tcountu += 1\n\tif ind == \"U\" and countr > countu:\n\t\tind = \"R\"\n\t\tcountr, countu = 1, 0\n\t\tans += 1\n\telif ind == \"R\"\tand countu > countr:\n\t\tind = \"U\"\n\t\tcountu, countr = 1, 0\n\t\tans += 1\nprint(ans)\t\t\n\n\n\n", "N=int(input())\ns=input()\n\nnow=0\nroot=[]\n\nfor c in s:\n\tif c=='R':\n\t\tnow+=1\n\telse:\n\t\tnow-=1\n\troot.append(now)\n\n\nans=0\nfor i in range(1,N-1):\n\tif root[i]==0:\n\t\tif (root[i+1]>0) != (root[i-1]>0):\n\t\t\tans+=1\n\n\nprint(ans)\n"]