["n, m = map(int, input().split())\nmatr = [list(map(int, input().split())) for _ in range(n)]\n\nfor i, st in enumerate(matr):\n    for j, elem in enumerate(st):\n        if matr[~i][~j] == 0:\n            matr[~i][~j] = min(matr[~i + 1][~j], matr[~i][~j + 1]) - 1\n\n# print(*matr, sep='\\n')\n\nfor i, st in enumerate(matr):\n    for j, elem in enumerate(st):\n        if i != 0 and j != 0:\n            if matr[i][j] <= max(matr[i - 1][j], matr[i][j - 1]):\n                print('-1')\n                return\n        elif i == 0 and j != 0:\n            if matr[i][j] <= matr[i][j - 1]:\n                print('-1')\n                return\n        elif i != 0 and j == 0:\n            if matr[i][j] <= matr[i - 1][j]:\n                print('-1')\n                return\nprint(sum(sum(l) for l in matr))", "n, m = list(map(int, input().split()))\nk = 0\na = [0] * n\nfor i in range(n):\n    a[i] = list(map(int, input().split()))\n\nb = [0] * n\nc = [0] * n\nfor i in range(n):\n    b[i] = [0] * m\n    c[i] = [0] * m\n    for j in range(m):\n        b[i][j] = [0, 0]\n        c[i][j] = [0, 0]\n\nfor i in range(n):\n    for j in range(m - 1):\n        if a[i][j] >= a[i][j + 1] and a[i][j + 1] != 0:\n            k = 1\nfor j in range(m):\n    for i in range(n - 1):\n        if a[i][j] >= a[i + 1][j] and a[i + 1][j] != 0:\n            k = 1\n\nfor i in range( n - 1, 0, -1):\n    for j in range(m - 1, 0, -1):\n        if a[i][j] == 0:\n            a[i][j] = min(a[i + 1][j] - 1, a[i][j + 1] - 1)\n\nfor i in range(n):\n    for j in range(m - 1):\n        if a[i][j] >= a[i][j + 1] and a[i][j + 1] != 0:\n            k = 1\nfor j in range(m):\n    for i in range(n - 1):\n        if a[i][j] >= a[i + 1][j] and a[i + 1][j] != 0:\n            k = 1\n            \nans = 0\nfor i in range(n):\n    ans += sum(a[i])\nif k == 1:\n    print(-1)\nelse:\n    print(ans)\n            \n            \n", "import sys\nn,m=map(int,input().split())\na=[[*map(int,input().split())] for _ in range(n)]\ntry:\n for i in range(n-1,-1,-1):\n  for j in range(m-1,-1,-1):\n   if a[i][j]==0:a[i][j]=min(a[i+1][j],a[i][j+1])-1\n   if i+1<n:assert a[i][j]<a[i+1][j]\n   if j+1<m:assert a[i][j]<a[i][j+1]\n print(sum(map(sum,a)))\nexcept AssertionError:\n print(-1)", "import sys\nn,m = map(int,input().split())\nM = []\nfor i in range(n):\n    M += [list(map(int,input().split()))]\nS = M[-1][-1]\n\nfor j in range(n-2 , -1 , -1):   \n    if M[j][-1] >= M[j+1][-1] :\n        print(-1)\n        return\n    if M[j][-1] == 0:\n        M[j][-1] = M[j-1][-1] - 1  \n    S += M[j][-1]\n    \nfor j in range(m-2 , -1 , -1):\n    if M[-1][j] >= M[-1][j+1] :\n        print(-1)\n        return\n    if M[-1][j] == 0:\n        M[-1][j] = M[-1][j-1] - 1   \n    S += M[-1][j]\n        \nfor k in range(m-2 , -1 , -1):\n    for p in range(n-2 , -1 , -1):\n        if M[p][k] >= min(M[p+1][k] , M[p][k+1]):\n            print(-1)\n            return\n        if M[p][k] == 0:\n            M[p][k] = min(M[p+1][k] , M[p][k+1]) - 1 \n        S += M[p][k]\nprint(S)", "n, m = list(map(int, input().split(' ')))\n\nmatrix = []\nfor i in range(n):\n    row = [int(x) for x in input().split(' ')]\n    matrix.append(row)\n\n\ndef determine(matrix, n, m):\n    sum_max = matrix[n-1][m-1]\n\n    for j in range(m-2, -1, -1):\n        if matrix[n-1][j] < matrix[n-1][j+1]:\n            if matrix[n-1][j] == 0:\n                matrix[n-1][j] = matrix[n-1][j+1]-1\n            sum_max += matrix[n-1][j]\n        else:\n            return -1\n\n    for i in range(n-2, -1, -1):\n        if matrix[i][m-1] < matrix[i+1][m-1]:\n            if matrix[i][m-1] == 0:\n                matrix[i][m-1] = matrix[i+1][m-1]-1\n            sum_max += matrix[i][m-1]\n        else:\n            return -1\n\n    for i in range(n-2, -1, -1):\n        for j in range(m-2, -1, -1):\n            if matrix[i][j] < min(matrix[i+1][j], matrix[i][j+1]):\n                if matrix[i][j] == 0:\n                    matrix[i][j] = min(matrix[i+1][j], matrix[i][j+1])-1\n                sum_max += matrix[i][j]\n            else:\n                return -1\n    return sum_max\n\n\nsum_max = determine(matrix, n, m)\nprint(sum_max)\n        \n", "r,c = map(int,input().split())\ns = [list(map(int,input().split())) for _ in range(r)]\n#print(s)\nre = 0\nfor i in range(r-1,-1,-1):\n    for j in range(c-1,-1,-1):\n        if 0<i<r-1 and 0<j<c-1:\n            if s[i][j]==0:\n                s[i][j] = min(s[i+1][j],s[i][j+1])-1\n            if (s[i-1][j]>0 and s[i-1][j]>=s[i][j]) or (s[i][j-1]>0 and s[i][j-1]>=s[i][j]):\n                print(-1)\n                return\n        if i<r-1 and j<c-1:\n            if s[i][j]>=s[i+1][j] or s[i][j]>=s[i][j+1]:\n                print(-1)\n                return\n        if i<r-1 and j==c-1:\n            if s[i][j]>=s[i+1][j]:\n                print(-1)\n                return\n        if i==r-1 and j<c-1:\n            if s[i][j]>=s[i][j+1]:\n                print(-1)\n                return\n        re += s[i][j]\nprint(re)", "import sys\ndef ma():\n    n,m = map(int,input().split())\n    a = []\n    for i in range(n):\n        a.append([*map(int,sys.stdin.readline().split())])\n    if a[n-1][m-1] <= a[n-2][m-1] or a[n-1][m-1] <= a[n-1][m-2]:\n        return print(-1)\n    for i in range(n-2,0,-1):\n        for j in range(m-2,0,-1):\n            if a[i][j] <= a[i+1][j] or a[i][j] <= a[i][j+1]:\n                mi = min(a[i+1][j],a[i][j+1])-1\n                if a[i][j] == 0:\n                    \n                    a[i][j] = min(a[i+1][j],a[i][j+1])-1\n                if mi <= a[i-1][j] or mi <= a[i][j-1]:\n                        return print(-1)\n            else:\n                return print(-1)\n    su = 0\n    for i in range(n):\n        su += sum(a[i])\n    print(su)\n    \nma()\n", "def comp(A):\n    for i in range(n-2, -1, -1):\n        for j in range(m-2, -1, -1):\n            if (A[i+1][j+1] <= A[i][j+1] or A[i+1][j+1] <= A[i+1][j]):\n                return -1\n            if (A[i][j] == 0):\n                A[i][j] = min (A[i+1][j]-1, A[i][j+1]-1)\n                if (A[i][j] <= A[i-1][j] or A[i][j] <= A[i][j-1] or A[i][j] == 0):\n                    return -1\n    \n    return sum([sum(A[i]) for i in range(n)])\n \nn, m = map(int, input().rstrip().split())\n \nA = []\nfor i in range(n):\n    A.append(list(map(int, input().rstrip().split())))\nres = comp (A)\n \nprint(res)", "def comp(A):\n    s = 0\n    for i in range(n-2, -1, -1):\n        for j in range(m-2, -1, -1):\n            if (A[i+1][j+1] <= A[i][j+1] or A[i+1][j+1] <= A[i+1][j]):\n                return -1\n            if (A[i][j] == 0):\n                A[i][j] = min (A[i+1][j]-1, A[i][j+1]-1)\n                if (A[i][j] <= A[i-1][j] or A[i][j] <= A[i][j-1] or A[i][j] == 0):\n                    return -1\n            s+=A[i][j]\n    \n    return  s + sum(A[n-1]) + sum([A[i][m-1] for i in range(n-1)])\n \nn, m = map(int, input().rstrip().split())\n \nA = []\nfor i in range(n):\n    A.append(list(map(int, input().rstrip().split())))\nres = comp (A)\n \nprint(res)", "n,m=list(map(int,input().split()))\narr=[]\nfor _ in range(n):\n    arr.append(list(map(int,input().split())))\nans=0\nfor i in range(n-1,-1,-1):\n    for j in range(m-1,-1,-1):\n        if(arr[i][j]==0):\n            if(i<n-1 and j<m-1):\n                arr[i][j]=min(arr[i+1][j],arr[i][j+1])-1\n            elif(j<m-1):\n                arr[i][j]=arr[i][j+1]-1\n            else:\n                arr[i][j]=arr[i+1][j]-1\n        ans+=arr[i][j]\nflag=True\nfor i in range(n):\n    for j in range(m):\n        if(i<n-1 and j<m-1):\n            if(arr[i][j]>=arr[i][j+1] or arr[i][j]>=arr[i+1][j] or arr[i][j]>=arr[i+1][j+1]):\n                flag=False\n                break\n        if(i<n-1):\n            if(arr[i][j]>=arr[i+1][j]):\n                flag=False\n                break\n        if(j<m-1):\n            if(arr[i][j]>=arr[i][j+1]):\n                flag=False\n                break\n    if(flag):\n        pass\n    else:\n        break\nif(flag):\n    print(ans)\nelse:\n    print(-1)\n", "\ndef sum_matr(matr):\n    for i in (0, n-1):\n        for j in range(m-1):\n            if matr[i][j] >= matr[i][j+1]:\n                return -1\n    for j in (0, m-1):\n        for i in range(n-1):\n            if matr[i][j] >= matr[i+1][j]:\n                return -1\n    for i in range(n-2,0,-1):\n        for j in range(m-2,0,-1):\n            if matr[i][j] == 0:\n                c = min(matr[i][j+1] - 1, matr[i+1][j] - 1)\n                if c <= matr[i][j-1] or c <= matr[i-1][j]:\n                    return -1\n                else:\n                    matr[i][j] = c\n            elif matr[i][j] >= matr[i+1][j] or matr[i][j] >= matr[i+1][j]:\n                return -1\n    s = 0\n    for i in range(n):\n        for j in range(m):\n            s += matr[i][j]\n    return s\n\nn, m = [int(elem) for elem in input().split()]\nmatr = []\nfor i in range(n):\n    matr.append([int(elem) for elem in input().split()])\n    \nprint(sum_matr(matr))\n", "def __starting_point():\n    n, m = list(map(int, input().split()))\n    matrix = []\n    for i in range(n):\n        matrix.append(list(map(int, input().split())))\n    res = 0\n    for i in range(n - 2, 0, -1):\n        for j in range(m - 2, 0, -1):\n            if matrix[i][j] == 0:\n                new = min(matrix[i + 1][j], matrix[i][j + 1]) - 1\n                if (matrix[i - 1][j] == 0 or new > matrix[i - 1][j]) and (matrix[i][j - 1] == 0 or new > matrix[i][j - 1]):\n                    matrix[i][j] = new\n                else:\n                    res = -1\n                    break\n        if res == -1:\n            break\n    if res != -1:\n        for i in range(n):\n            for j in range(1, m):\n                if matrix[i][j] <= matrix[i][j - 1]:\n                    res = -1\n        if res == -1:\n            print(-1)\n        else:\n            for i in range(m):\n                for j in range(1, n):\n                    if matrix[j][i] <= matrix[j-1][i]:\n                        res = -1\n            if res == -1:\n                print(-1)\n            else:\n                for i in range(n):\n                    res += sum(matrix[i])\n                print(res)\n    else:\n        print(-1)\n\n__starting_point()", "def comp(A):\n    s = 0\n    for i in range(n-2, -1, -1):\n        for j in range(m-2, -1, -1):\n            if (A[i+1][j+1] <= A[i][j+1] or A[i+1][j+1] <= A[i+1][j]):\n                return -1\n            if (A[i][j] == 0):\n                A[i][j] = min (A[i+1][j]-1, A[i][j+1]-1)\n                if (A[i][j] <= A[i-1][j] or A[i][j] <= A[i][j-1] or A[i][j] == 0):\n                    return -1\n            s+=A[i][j]\n    \n    return  s + sum(A[n-1]) + sum([A[i][m-1] for i in range(n-1)])\n \nn, m = map(int, input().rstrip().split())\n \nA = []\nfor i in range(n):\n    A.append(list(map(int, input().rstrip().split())))\nres = comp (A)\n \nprint(res)", "y = [int(x) for x in input().split(' ')]\nn_m = []\nfor i in range(y[0]):\n    p = [int(x) for x in input().split(' ')]\n    n_m.append(p)\nsum = 0\nh = True\nfor i in range(y[0]-1, -1, -1):\n    for j in range(y[1]-1, -1, -1):\n        if n_m[i][j] == 0:\n            if n_m[i+1][j] > n_m[i][j+1]:\n                n_m[i][j] = n_m[i][j+1] - 1 \n            else:\n                n_m[i][j] = n_m[i+1][j] - 1 \n        try:\n            if j == 0:\n                pass\n            elif i == 0:\n                pass\n            elif n_m[i][j] <= n_m[i][j-1]:\n                h = False\n            elif n_m[i][j] <= n_m[i-1][j]:\n                h = False\n        except:\n            pass\n        if h == False:\n            print(-1)\n            return\n        sum += n_m[i][j]\nprint(sum)\n", "__author__ = 'Esfandiar'\nn,m = list(map(int,input().split()))\na = list()\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nsu = 0\nM = -1\nfor i in range(n-1,-1,-1):\n    for j in range(m-1,-1,-1):\n        if a[i][j] == 0:\n            M = a[i][j+1] - 1\n            M = min(M,a[i+1][j] - 1)\n            a[i][j] = M\n        su+=a[i][j]\n\nfor i in range(n):\n\tfor j in range(m-1):\n\t\tif a[i][j] >= a[i][j+1]:\n\t\t\tprint(-1)\n\t\t\treturn\n\nfor i in range(m):\n\tfor j in range(n-1):\n\t\tif a[j][i] >= a[j+1][i]:\n\t\t\tprint(-1)\n\t\t\treturn\nprint(su)\n\n", "n, m = map(int, input().split())\n\nmatrix = [list(map(int, input().split())) for _ in range(n)]\nres = 0\n\nfor i in range(n-2, 0, -1):\n    for j in range(m-1, 0, -1):\n        if matrix[i][j] == 0:\n            mn = min(matrix[i + 1][j], matrix[i][j + 1])\n            if mn != 1:\n                matrix[i][j] = mn - 1\n            else:\n                res = -1\n                break\n    if res == -1:\n        break\nelse:\n    for i in range(n):\n        if [matrix[i][j] for j in range(m-1) if matrix[i][j] >= matrix[i][j+1]]:\n            res = -1\n            break\n    else:\n        for j in range(m):\n            if [matrix[i][j] for i in range(n-1) if matrix[i][j] >= matrix[i+1][j]]:\n                res = -1\n                break\n        else:\n            res = sum((sum(matrix[i]) for i in range(n)))\n\nprint(res)", "n, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\n\ndef result(a, n, m):\n    r = 0\n    for i in range(-1, -m, -1):\n        if a[-1][i] == 0:\n            a[-1][i] = a[-1][i+1] - 1\n        if a[-1][i] <= a[-1][i-1] or a[-1][i] <= a[-2][i]:\n            return -1\n        r = r + a[-1][i]\n    if a[-1][-m] == 0:\n        a[-1][-m] = a[-1][-m+1] - 1\n    if a[-1][-m] <= a[-2][-m]:\n        return -1\n    r = r + a[-1][-m]\n    for i in range(-2, -n, -1):\n        for j in range(-1, -m, -1):\n            if j == -1:\n                if a[i][j] == 0:\n                    a[i][j] == a[i+1][j] - 1\n                if a[i][j] <= a[i][j-1] or a[i][j] <= a[i-1][j]:\n                    return -1\n                r = r + a[i][j]\n                continue\n            if a[i][j] == 0:\n                a[i][j] = min(a[i+1][j] - 1, a[i][j+1] - 1)\n            if a[i][j] <= a[i-1][j] or a[i][j] <= a[i][j-1]:\n                return -1\n            r = r + a[i][j]\n        if a[i][-m] == 0:\n            a[i][-m] = min(a[i+1][-m] - 1, a[i][-m+1] - 1)\n        if a[i][-m] <= a[i-1][-m]:\n            return -1\n        r = r + a[i][-m]\n    if a[0][-1] == 0:\n        a[0][-1] = a[1][-1] - 1\n    if a[0][-1] <= a[0][-2]:\n        return -1\n    r = r + a[0][-1]\n    for i in range(-2, -m, -1):\n        if a[0][i] == 0:\n            a[0][i] = min(a[0][i+1] - 1, a[1][i] - 1)\n        if a[0][i] <= a[0][i-1]:\n            return -1\n        r = r + a[0][i]\n    if a[0][0] == 0:\n        a[0][0] = min(a[0][1] - 1, a[1][0] - 1)\n    r = r + a[0][0]\n    return r\n\n\nprint(result(a, n, m))\n", "n,m = list(map(int,input().split()))\na = [[int(i) for i in input().split()]for _ in range(n)]\nans = 0\nfor i in range(n-1,-1,-1):\n    for j in range(m-1,-1,-1):\n        if a[i][j] == 0:\n            temp = min(a[i+1][j],a[i][j+1])-1\n            if temp > max(a[i-1][j],a[i][j-1]):\n                ans += temp\n                a[i][j] = temp\n            else:\n                print(-1)\n                return\n        else:\n            ans += a[i][j]\n            if 0 < i < n-1:\n                if a[i-1][j] < a[i][j] < a[i+1][j]:\n                    continue\n                else:\n                    print(-1)\n                    return\n            if 0 < j < m-1:\n                if a[i][j-1] < a[i][j] < a[i][j+1]:\n                    continue\n                else:\n                    print(-1)\n                    return\nprint(ans)\n", "a=[int(a)for a in input().split()]\nb=list(list())\nsu=0\nans=0\ncp=0\nfor j in range (a[0]):\n        c=[int(a) for a in input().split()][:a[1]]\n        b.append(c)\nfor i in range(a[0]-1,-1,-1):\n    for j in range(a[1]-1,-1,-1):\n        if b[i][j]==0:\n            b[i][j]=int(min(b[i][j+1],b[i+1][j]))-1\nfor z in b:\n    for r in z:    \n        su+=r\nfor i in range(a[0]):\n    for j in range(a[1]):\n        try:\n            if b[i][j]>=b[i+1][j]:\n                ans=-1\n                break\n        except:\n            cp+=1\n            #print(i,j)\n        try:\n            if b[i][j]>=b[i][j+1]:\n                ans=-1\n                break\n        except:\n            cp+=1\n            #print(i,j)\n\nif ans==-1:\n    print(-1)\nelse:\n    print(su)", "n, m = list(map(int,input().split()))\nmatrix = [0] * n\nok = 0\nfor q in range(0,n):\n    row = list(map(int,input().split()))\n    matrix[q] = row\n\nzero = 0\n# def when_no_zero(n,m):\n#     print(\"n\",n,\"m\",m)\n#     for z in range(0,n-1):\n#         for x in range(0,m-1):\n#             if(matrix[z][x]<matrix[z][x+1] and matrix[z][x]<matrix[z+1][x]):\n#                 pass\n#             else:\n#                 print(\"-1\")\n#                 ok = 1\n#                 break\n\ndef no_zeros(n,m):\n    for g in range(0,n):\n        for k in range(0,m-1):\n            if(matrix[g][k]<matrix[g][k+1]):\n                pass\n            else:\n                return -1\n    for l in range(0,m-1):\n        for m in range(0,n):\n            if(matrix[l][m]<matrix[l+1][m]):\n                pass\n            else:\n                return -1\n    return find_sum(matrix)\n\ndef find_zero_value():\n    for i in range(n-1,0,-1):\n        for j in range(m-1,0,-1):\n            if matrix[i][j] == 0:\n                right = matrix[i][j+1]\n                down = matrix[i+1][j]\n                op_min = min([right,down])\n                up = matrix[i-1][j]\n                left = matrix[i][j-1]\n                op_max = max([up,left])\n                if(op_min-1>op_max):\n                    matrix[i][j] = op_min-1\n                else:\n                    return -1\n    return matrix\n            \ndef find_sum(maz):\n    su = 0\n    for i in range(0,n):\n        for j in range(0,m):\n            su = su + matrix[i][j]\n    return su\n\n\nfor i in range(0,n):\n    for j in range(0,m):\n        if matrix[i][j] == 0:\n            zero = 1\n            break\n\nif(zero==0):\n    print(no_zeros(n,m))\nelse:\n    maz = find_zero_value()\n    if(maz == -1):\n        print(\"-1\")\n    else:\n        summ = find_sum(maz)\n        print(summ)\n", "n, m = map(int, input().split())\nmatrix, result, ck = [], 0, False\nfor _ in range(n):\n    matrix.append(list(map(int, input().split())))\nfor i in range(n-1, -1, -1):\n    for j in range(m-1, -1, -1):\n        if matrix[i][j] == 0:\n            matrix[i][j] = min(matrix[i][j+1], matrix[i+1][j]) - 1\nfor i in range(n-1):\n    for j in range(m-1):\n        if matrix[i][j] >= matrix[i][j+1] or matrix[i][j] >= matrix[i+1][j]:\n            ck = True\n            break\n        if ck:\n            break\nfor row in matrix:\n    result += sum(row)\nif ck or matrix[-1][-1] <= matrix[-2][-1] or matrix[-1][-1] <= matrix[-1][-2]:\n    print(-1)\nelse:\n    print(result)", "def rising(matr, n, m):\n    s = matr[n - 1][m - 1]\n    for j in range(m - 2, -1, -1):\n        if matr[n - 1][j] < matr[n - 1][j + 1]:\n            if matr[n - 1][j] == 0:\n                matr[n - 1][j] = matr[n - 1][j + 1] - 1\n            s += matr[n - 1][j]\n        else:\n            return -1\n    for i in range(n - 2, -1, -1):\n        if matr[i][m - 1] < matr[i + 1][m - 1]:\n            if matr[i][m - 1] == 0:\n                matr[i][m - 1] = matr[i + 1][m - 1] - 1\n            s += matr[i][m - 1]\n        else:\n            return -1\n    for i in range(n - 2, -1, -1):\n        for j in range(m - 2, -1, -1):\n            if matr[i][j] < min(matr[i + 1][j], matr[i][j + 1]):\n                if matr[i][j] == 0:\n                    matr[i][j] = min(matr[i + 1][j], matr[i][j + 1]) - 1\n                s += matr[i][j]\n            else:\n                return -1\n    return s\n\n\nN, M = [int(x) for x in input().split()]\nmatrix = list()\nfor y in range(N):\n    row = [int(y) for y in input().split()]\n    matrix.append(row)\nprint(rising(matrix, N, M))\n", "def solve(arr, n, k):\n\ts = 0\n\tfor i in reversed(list(range(n))):\n\t\tfor j in reversed(list(range(k))):\n\t\t\tif arr[i][j] == 0:\n\t\t\t\tm = min(arr[i+1][j], arr[i][j+1])\n\t\t\t\tif m == 1:\n\t\t\t\t\treturn -1\n\t\t\t\tarr[i][j] = m - 1\n\n\t\t\ts += arr[i][j]\n\t\t\tif j > 0 and arr[i][j-1] >= arr[i][j]:\n\t\t\t\treturn -1\n\t\t\tif i > 0 and arr[i-1][j] >= arr[i][j]:\n\t\t\t\treturn -1\n\n\treturn s\n\nn, k = [int(x) for x in input().split()]\n\narr = []\nfor _ in range(n):\n\tarr.append( [int(x) for x in input().split()] )\n\nres = solve(arr, n, k)\nprint(res)\n", "def ii():\n  return int(input())\ndef ss():\n  return [x for x in input()]\ndef si():\n  return [int(x) for x in input().split()]\ndef mi():\n  return map(int, input().split())\n\na, b = mi()\ns = []\nans = 0\nkey = True\n\nfor i in range(a):\n\ti = si()\n\ts.append(i)\n\tans += sum(i)\n\nfor i in range(a - 1):\n\tif not (s[i][0] < s[i + 1][0] and s[i][-1] < s[i + 1][-1]):\n\t\tans = -1\n\t\tkey = False\n\t\tbreak\nfor i in range(b - 1):\n\tif not (s[0][i] < s[0][i + 1] and s[-1][i] < s[-1][i + 1]):\n\t\tans = -1\n\t\tkey = False\n\t\tbreak\n\nfor i in range(a - 2, 0, -1):\n\tif not key:\n\t\tbreak\n\tfor x in range(b - 2, 0, -1):\n\t\tif s[i][x] < s[i + 1][x] and s[i][x] < s[i][x + 1] and (min(s[i + 1][x], s[i][x + 1]) - max(s[i - 1][x], s[i][x - 1])) > 1:\n\t\t\tif s[i][x] == 0:\n\t\t\t\ts[i][x] = min(s[i + 1][x], s[i][x + 1]) - 1\n\t\t\t\tans += s[i][x]\n\t\telse:\n\t\t\tans = -1\n\t\t\tkey = False\n\t\t\tbreak\nprint(ans)"]