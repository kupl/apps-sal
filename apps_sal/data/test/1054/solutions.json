["n = int(input())\nxa = []\nya = []\nfor _ in range(n):\n\tx, y = map(int,input().split())\n\txa.append(x)\n\tya.append(y)\nprint(max(max(xa)-min(xa),max(ya)-min(ya))**2)", "n = int(input())\nx = [0]*n\ny = [0]*n\nfor i in range(n):\n    x[i],y[i] = map(int,input().split())\nx.sort()\ny.sort()\nres = (max(x[-1]-x[0],y[-1]-y[0]))**2\nprint(res)", "from fractions import gcd\nfrom sys import stdin\n\nlines = list([_f for _f in stdin.read().split('\\n') if _f])\n\ndef parseline(line):\n\treturn list(map(int, line.split()))\n\nlines = list(map(parseline, lines))\n\nn, = lines[0]\n\nINF = 10**9 + 1\n\nmaxx = -INF\nmaxy = -INF\nminx = INF\nminy = INF\n\nfor xi,yi in lines[1:n+1]:\n\tmaxx = max(maxx, xi)\n\tminx = min(minx, xi)\n\tmaxy = max(maxy, yi)\n\tminy = min(miny, yi)\n\nprint( max(maxx - minx, maxy - miny) ** 2)\n", "ps = [tuple(map(int, str.split(input()))) for _ in range(int(input()))]\nlx = rx = ty = by = None\nfoo = lambda v, cv, f: cv if v is None else f(v, cv)\nfor x, y in ps:\n\n    lx = foo(lx, x, min)\n    rx = foo(rx, x, max)\n    by = foo(by, y, min)\n    ty = foo(ty, y, max)\n\nprint(max(abs(lx - rx), abs(by - ty)) ** 2)\n", "n = int(input())\nmaxx = maxy = -10 ** 10\nminx = miny = 10 ** 10\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x > maxx:\n        maxx = x\n\n    if y > maxy:\n        maxy = y\n\n    if y < miny:\n        miny = y\n\n    if x < minx:\n        minx = x\n\nprint(max((maxx - minx), (maxy - miny)) ** 2)\n\n", "#!/usr/bin/env python3\n\nnumber_of_mines = int(input())\nx_coords = []\ny_coords = []\nfor _ in range(number_of_mines):\n    x, y = (int(value) for value in input().split())\n    x_coords.append(x)\n    y_coords.append(y)\nprint(max(abs(max(x_coords) - min(x_coords)), abs(max(y_coords) - min(y_coords))) ** 2)\n    \n\n", "n = int(input())\nminx, maxx, miny, maxy = (10**10), -(10**10), (10**10), -(10**10)\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x > maxx:\n        maxx = x\n    if y > maxy:\n        maxy = y\n    if x < minx:\n        minx = x\n    if y < miny:\n        miny = y\nprint(max(maxx - minx, maxy - miny)**2)", "#fin = open(\"input.txt\")\nn = int(input())\n#n = int(fin.readline())\nX1, Y1, X2, Y2 = 10 ** 9 * 2, 10 ** 9 * 2, -10 ** 9 * 2, -10 ** 9 * 2\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\t#x, y = map(int, fin.readline().split())\n\tX1, Y1, X2, Y2 = min(X1, x), min(Y1, y), max(X2, x), max(Y2, y)\nprint(max((X2 - X1), (Y2 - Y1)) ** 2)\n", "\nn = int(input())\n\n\nmax_r = 0\n\nx, y = map(int, input().split())\nminX = x\nmaxX = x\nminY = y\nmaxY = y\nfor i in range(n - 1):\n    x, y = map(int, input().split())\n    minX = min(minX, x)\n    maxX = max(maxX, x)\n    minY = min(minY, y)\n    maxY = max(maxY, y)\n\nprint(max(maxX- minX, maxY - minY)** 2)", "n = int(input())\nx = []\ny = []\nfor i in range(n):\n    p, q = list(map(int, input().split()))\n    x.append(p)\n    y.append(q)\ndx = max(x) - min(x)\ndy = max(y) - min(y)\nprint(max(dx, dy) ** 2)\n\n\n", "n = int(input())\nmx=10000000000\nmy=10000000000\nvx=-10000000000\nvy=-10000000000\nfor i in range(n):\n    a, b = map(int, input().split())\n    mx = min(mx,a)\n    vx = max(vx,a)\n    my = min(my,b)\n    vy = max(vy,b)\nprint(max(vx-mx,vy-my)*max(vx-mx,vy-my))", "n = int(input())\nx, y = map(int,input().split())\nxmin = x\nxmax = x\nymin = y\nymax = y\nfor i in range(n-1):\n    x, y = map(int,input().split())\n    xmin = min(xmin, x)\n    xmax = max(xmax, x)\n    ymin = min(ymin, y)\n    ymax = max(ymax, y)\nprint(max(ymax - ymin, xmax - xmin) ** 2)", "n = int(input())\nx = []\ny = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    x.append(a)\n    y.append(b)\n\nx.sort()\ny.sort()\n\nprint(max(x[-1] - x[0], y[-1] - y[0]) ** 2)\n", "n=int(input(\"\"))\na=[]\nb=[]\nfor i in range(n):\n    x,y=input(\"\").split()\n    a.append(int(x))\n    b.append(int(y))\nmax=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if (a[i]-a[j])**2>max:\n            max=(a[i]-a[j])**2\n            d={\"a\":max}\n        if (b[i]-b[j])**2>max:\n            max=(b[i]-b[j])**2\n            d={\"a\":max}\n        \n\n            \nprint(d[\"a\"])\n", "n = int(input())\nminX = 1000000005\nminY = minX\nmaxX = -1000000005\nmaxY = maxX\n\nfor i in range(n):\n    t, t2 = list(map(int, input().split()))\n    minY = min(minY, t2)\n    maxY = max(maxY, t2)\n    minX = min(minX, t)\n    maxX = max(maxX, t)\n\nprint(max(maxX-minX,maxY-minY)**2)\n", "def shag (x,y,xmin,ymin):\n    a, b = list(map(int, input(). split()))\n    x=max(a,x)\n    y=max(b,y)\n    xmin=min (a,xmin)\n    ymin=min (b,ymin)\n    return x, y, xmin, ymin\n\nk=int(input())\nx, y = list(map(int, input().split()))\nxmin=x\nymin=y\nfor i in range (1,k,1):\n   x,y,xmin,ymin = shag (x,y,xmin,ymin)\n\nprint(pow(max(x-xmin,y-ymin),2))\n", "a1 = []\na2 = []\nx = int(input())\nfor i in range(x):\n    a, b = map(int, input().split(' '))\n    a1.append(a)\n    a2.append(b)\nprint(max(max(a1)-min(a1), max(a2)-min(a2))**2)", "#!/bin/env python3\nn=int(input())\nx,y=input().split(' ')\nx,y=int(x),int(y)\nmin_y=y\nmax_y=y\nmin_x=x\nmax_x=x\n\nfor x in range(n-1):\n    x,y=input().split(' ')\n    x,y=int(x),int(y)\n    if x>max_x:\n        max_x=x\n    if x<min_x:\n        min_x=x\n    if y>max_y:\n        max_y=y\n    if y<min_y:\n        min_y=y\n\nprint(max((max_y-min_y),(max_x-min_x))**2)\n", "n = int(input())\nxs = []\nys = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    xs.append(x)\n    ys.append(y)\nprint(max(max(xs) - min(xs), max(ys) - min(ys)) **2)", "a = int(input(\"\"))\nXlistOfCoordinates = []\nYlistOfCoordinates = []\nfor value in range(a):\n    y = input(\"\").split(\" \")\n    XlistOfCoordinates.append(int(y[0]))\n    YlistOfCoordinates.append(int(y[1]))\nprint(max(max(XlistOfCoordinates)-min(XlistOfCoordinates),max(YlistOfCoordinates)-min(YlistOfCoordinates))**2)\n", "n = int (input())\npointx,pointy=[],[]\nfor i in range(n):\n    x , y = map(int,input().split())\n    pointx.append(x)\n    pointy.append(y)\nans = max(max(pointx)-min(pointx),max(pointy)-min(pointy))\nprint(ans  * ans)", "n = int(input())\nxl, yl = list(map(int, input().split()))\nxr, yr = list(map(int, input().split()))\nif xl > xr : xl, xr = xr, xl\nif yl > yr : yl, yr = yr, yl\nfor i in range(n-2):\n    x, y = list(map(int, input().split()))\n    xl = min(xl, x)\n    xr = max(xr, x)\n    yl = min(yl, y)\n    yr = max(yr, y)\nprint(max(yr-yl, xr-xl)**2)\n\n    \n", "n = int(input())\npx, py = [], []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    px.append(x)\n    py.append(y)\nprint(max(max(px)-min(px), max(py)-min(py))**2)\n\n\n    \n", "n = int(input())\nx, y = (int(x) for x in input().split())\nx1, y1, x2, y2 = x, y, x, y\nfor i in range(n - 1):\n    x, y = (int(x) for x in input().split())\n    x1 = min(x1, x)\n    x2 = max(x2, x)\n    y1 = min(y1, y)\n    y2 = max(y2, y)\nprint(max(x2 - x1, y2 - y1) ** 2)", "def solve(ps):\n    return max(\n            max(ps, key=lambda x: x[0])[0] - min(ps, key=lambda x: x[0])[0],\n            max(ps, key=lambda x: x[1])[1] - min(ps, key=lambda x: x[1])[1],\n           )**2\n\nn = int(input())\nps = [list(map(int, input().split())) for i in range(n)]\nprint(solve(ps))\n"]