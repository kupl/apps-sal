["#python33\n\ndef program():\n    a=[]\n    t=0\n    n=int(input())\n    for i in range(n):\n        a.append(int(input()))\n    t=a[0]+1\n    for j in range(1,len(a)):\n        t+=abs(a[j]-a[j-1])+2\n    print (t)    \nprogram()       \n", "class Task:\n\th = []\n\tanswer = 0\n\t\n\tdef getData(self):\n\t\th_size = int(input())\n\t\tself.h = [int(input()) for i in range(h_size)]\n\t\n\tdef solve(self):\n\t\tcurrent_level = 0\n\t\tfor i in range (0, len(self.h)):\n\t\t\tself.answer += self.h[i] - current_level + 1\n\t\t\tif i == len(self.h) - 1:\n\t\t\t\treturn\n\t\t\tif self.h[i + 1] < self.h[i]:\n\t\t\t\tself.answer += self.h[i] - self.h[i + 1]\n\t\t\t\tcurrent_level = self.h[i + 1]\n\t\t\telse:\n\t\t\t\tcurrent_level = self.h[i]\n\t\t\tself.answer += 1\n\t\n\tdef printAnswer(self):\n\t\tprint(self.answer)\n\n\ntask = Task();\ntask.getData();\ntask.solve();\ntask.printAnswer();\n", "n = int(input())\ncur = 0\nsum = 0\nfor i in range(n):\n  nxt = int(input())\n  sum += abs(nxt - cur)\n  cur = nxt\n  sum += 1\n  if i + 1 < n: sum += 1\nprint (sum)\n", "import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\nn = f.readline()\nh = [int(i) for i in f.read().strip().split(\"\\n\")]\ncount = h[0]+1\nprev = h[0]\nfor i in range(1, len(h)):\n    if h[i] > prev:\n        count += h[i]-prev+2\n        prev = h[i]\n    elif h[i] < prev:\n        count += prev - h[i] + 2\n        prev = h[i]\n    elif h[i] == prev:\n        count += 2\nprint(count)", "from math import fabs\nwhile(1):\n    try:\n        n=int(input())\n        a=[]\n        for i in range(0,n):\n            a.append(int(input()))\n        summ=a[0]+1\n        for i in range(1,n):\n            summ+=fabs(a[i-1]-a[i])+2\n        print(int(summ))\n    except EOFError:\n        break\n", "n = int(input())\na = int(input())\ns = a\nfor i in range(n - 1):\n    b = int(input())\n    s += abs(b - a)\n    a = b\nprint(s + 2 * n - 1)", "no_tree = int(input())\nlen_tree = []\nfor i in range(no_tree):\n    len_tree.append(int(input()))\ntime = 0\nif len(len_tree) == 1:\n    time=len_tree[0] + 1\nelse:\n    for i in range(no_tree-1):\n        if i== 0 :  \n            time += len_tree[i]+1\n        if len_tree[i] <= len_tree[i+1]:\n             time += abs(len_tree[i]-len_tree[i+1])+2\n             \n        elif len_tree[i] > len_tree[i+1]:\n             time += abs(len_tree[i]-len_tree[i+1])+2\n         \nprint(time)", "import sys\nN=int(sys.stdin.readline())\n\nH=[]\n\nfor i in range(N):\n    h=int(sys.stdin.readline())\n    H.append(h)\n\nans=H[0]+1\np=H[0]\nfor i in range(1,N):\n    if(H[i]>=p):\n        ans+=1+(H[i]-p)+1\n        p=H[i]\n    else:\n        ans+=(p-H[i])+1+1\n        p=H[i]\nprint(ans)\n", "# problem 9\n# Start 8:39\ndef seconds(l):\n    time = 0\n    h = 0\n    for i in range(len(l) - 1):\n        # Climb the tree\n        if h < l[i]:\n            time += l[i] - h\n            h += l[i] - h\n\n        # eat\n        time += 1\n\n        # get down to the height of th enext tree\n        if h > l[i+1]:\n            time += h - l[i+1]\n            h -= h - l[i+1]\n\n        # jump to the next tree\n        time += 1\n\n    # the last tree\n    # Climb the tree\n    if h < l[-1]:\n        time += l[-1] - h\n        h += l[-1] - h\n    # eat\n    time += 1\n\n    return time\n\nm = int(input())\nl = []\nfor i in range(m):\n    l.append(int(input()))\nprint(seconds(l))\n\n# End 8:56\n# Total 17 min\n", "n = int(input())\np = int(input())\ns = p+1\nfor i in range(1, n):\n    c = int(input())\n    s += abs(p-c) + 2\n    p = c\nprint(s)\n\n", "n=int(input())\nr=n*2-1\nh=0\nfor i in range(n):\n t=int(input())\n r+=abs(h-t)\n h=t\nprint(r)\n", "ans = 0\ncurheight = 0\nn = int(input())\n\nfor i in range(n):\n\tx = int(input())\n\tif i > 0: ans += 1\n\n\tif x > curheight:\n\t\tans += (1 + x - curheight)\n\telse:\n\t\tans += (1 + curheight - x)\n\tcurheight = x\n\nprint(ans)", "cur, val = 0, -1\nfor i in range(int(input())):\n    h = int(input())\n    val += abs(cur - h) + 2\n    cur = h\nprint(val)", "import sys\nimport math\n\nn = int(sys.stdin.readline())\n\nc = 0\nres = 0\nfor i in range(n):\n    v = int(sys.stdin.readline())\n    res += int(math.fabs(c - v))\n    c = v\n    \nprint(res + n + (n - 1))\n        \n", "n = int(input())\nh = 0\nres = 0\nfor i in range(n):\n\ts = int(input())\n\tres += abs(s - h) + 1\n\tif i != 0:\n\t\tres += 1\n\th = s\nprint(res)\n", "n=int(input())\nj=0\nl=0\nfor i in range(n):\n    L=int(input())\n    l+=int(i>0)+abs(L-j)+1\n    j=L\nprint(l)\n        \n", "def main():\n    cur, val = 0, -1\n    for i in range(int(input())):\n        h = int(input())\n        val += abs(cur - h) + 2\n        cur = h\n    print(val)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "# coding: utf-8\nn = int(input())\nheigth = int(input())\nans = heigth+1\nfor i in range(n-1):\n    target = int(input())\n    ans += abs(heigth-target)+2\n    heigth = target\nprint(ans)\n", "n=int(input())\na=int(input())\ns=a\nfor i in range(n-1):\n   b=int(input())\n   s+=abs(b-a)\n   a=b\nprint(s+2*n-1)\n", "#!/usr/bin/env python  \n# coding=utf-8\nn=int(input())\na=[]\nfor i in range(0,n):\n\ta.append(int(input()))\nans=0\nans+=a[0]\nans+=1\nfor i in range(0,n-1):\n\tif(a[i]<=a[i+1]):\n\t\tans+=1\n\t\tans+=a[i+1]-a[i]\n\t\tans+=1\n\telse:\n\t\tans+=a[i]-a[i+1]\n\t\tans+=1\n\t\tans+=1\nprint(ans)\n\n", "n = int(input())\na = []\nfor i in range(n):\n    a += [int(input())]\nprint(2 * n - 1 + a[0] + sum(abs(a[i] - a[i - 1]) for i in range(1, n)))\n", "def main():\n    cur, val = 0, -1\n    for i in range(int(input())):\n        h = int(input())\n        val += abs(cur - h) + 2\n        cur = h\n    print(val)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\nresult=n*2-1\nh=0\nfor i in range(n):\n    x=int(input())\n    result+=abs(h-x)\n    h=x\nprint(result)\n", "def main():\n    cur, val = 0, -1\n    for i in range(int(input())):\n        h = int(input())\n        val += abs(cur - h) + 2\n        cur = h\n    print(val)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def foo():\n   n = int(input())\n   h = [int(input()) for i in range(0, n)]\n   curX = 0\n   res = 0\n   for x in h:\n      if x < curX:\n         res += curX - x\n         curX = x\n      res += x - curX\n      curX = x\n      res += 2\n   print(res - 1)\n\n\nfoo()"]