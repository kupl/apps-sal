["n = int(input())\nnums = (abs(int(x)) for x in input().split())\nnums = list(sorted(nums))\nleft = 0\nright = 0\nans = 0\nwhile left < n:\n    while right < n and nums[right] <= 2 * nums[left]:\n        right += 1\n    ans += right - left - 1\n    left += 1\nprint(ans)", "n=int(input())\nA=list(map(int,input().split()))\n\nA=[abs(a) for a in A]\nA.sort()\n\nj=0\nANS=0\n\n\nfor i in range(n-1):\n    while j<n-1 and A[j+1]-A[i]<=A[i]:\n        j+=1\n\n    ANS+=(j-i)\n\nprint(ANS)\n", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\n\nn=nn()\nvals=lm()\n\navals=[abs(v) for v in vals]\n\navals.sort()\n\n\n\ntotal=0\n\nstart=0\n\nend=1\n\n\nwhile end<n:\n\n\tif 2*avals[start]>=avals[end]:\n\t\tend+=1\n\n\n\telse:\n\t\t\n\n\t\ttotal=total+max(0,end-start-1)\n\t\tstart+=1\n\n\nnum=end-start\n\ntotal+=num*(num-1)//2\n\n\nprint(total)\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\nl = sorted([abs(int(i)) for i in input().split()])\nans = 0\ni, j = 0, 0\n\nwhile i < n:\n\twhile j < n and l[i] + l[i] >= l[j]:\n\t\tj += 1\n\tans += j - i - 1\n\ti += 1\n\nprint(ans)", "n=int(input())\nl1=list(map(int,input().split()))\nl2=[]\nfor i in range(0,n):\n    if l1[i]!=0:\n        l2.append(abs(l1[i]))\nimport bisect\nl2.sort()\nans=0\nfor i in range(0,len(l2)):\n    x=bisect.bisect_right(l2,2*l2[i],0,len(l2))\n    ans+=(x-i-1)\nprint(ans)", "def getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\n\nfrom bisect import bisect_right\n\nn = getN()\nnums = [abs(i) for i in getList()]\nnums.sort(reverse=False)\nans = 0\n#print(nums)\nfor i , num in enumerate(nums):\n    ans += bisect_right(nums, num*2) - i - 1\n\nprint(ans )\n", "import bisect\nn = int(input())\na = list(map(int, input().split()))\na = [abs(i) for i in a]\na.sort()\nans = 0\nfor i in range(len(a)):\n    right = a[i]*2\n    ans += bisect.bisect_right(a, right) - (i+1)\n\n\nprint(ans)\n", "n = int(input())\nl = list(map(int,input().split()))\na = [abs(l[i]) for i in range(n)]\na.sort()\nwyn = 0\nwsk1 = 0\nwsk2 = 1\nlicz = 0\nwhile True:\n\tif a[wsk1] * 2 < a[wsk2]:\n\t\twyn += (wsk2-wsk1-1)\n\t\twsk1 += 1\n\telse:\n\t\twsk2 += 1\n\tif wsk2 == n:\n\t\tbreak\nwyn += (n-wsk1)*(n-wsk1-1)//2\nprint(wyn)", "N = int(input())\nA = sorted([abs(int(a)) for a in input().split()])\n\ni = 0\nj = 1\nans = 0\nwhile j < N:\n    while j < N-1 and A[j+1] <= A[i] * 2:\n        j += 1\n    if A[j] <= A[i] * 2:\n        ans += j - i\n    i += 1\n    if j == i:\n        j += 1\n\nprint(ans)\n", "n = int(input())\na = list(map(int,input().split()))\na = sorted([abs(x) for x in a])\n\n\ntotal = 0\ni = 0\nfor j,h in enumerate(a[:-1]):\n    h *= 2\n    while i<(n-1) and a[i+1]<=h:\n        i+=1\n    total += i-j\nprint (total)\n\n\n", "n = int(input())\na = list(map(int, input().split()))\n\na = sorted(map(abs, a))\n\n#print(a)\nans = 0\nj = 1\nfor i in range(n):\n    while j < n and a[j] - a[i] <= a[i]:\n        j += 1\n    #print(i, j)\n    ans += j - i - 1\nprint(ans)\n", "from collections import deque\n\nn = int(input().strip())\nnums = list(map(int, input().strip().split()))\nnums = sorted([abs(num) for num in nums], reverse=True)\n\nres = 0\nmax_index = 0\ncurr_index = 1\nfor curr_index in range(1, n):\n    while nums[curr_index] * 2 < nums[max_index]:\n        max_index += 1\n    res += curr_index - max_index\nprint(res)", "def main():\n    n = int(input())\n    a = sorted(map(abs, list(map(int, input().split()))))\n    i = 0\n    res = 0\n    for j in range(n):\n        while a[i] * 2 < a[j]:\n            i += 1\n        res += j - i\n    print(res)\n\n\nmain()\n", "import bisect\n\ndef main():\n    n = int(input())\n    pts = list(map(int,input().split()))\n    points = []\n    for i in range(n):\n        points.append(abs(pts[i]))\n\n    points.sort()\n    #print(points)\n    pairs = 0\n\n    for i in range(n):\n        x = points[i]\n        index = bisect.bisect(points,2*x)-1\n        #print(x,index)\n        if points[index] <= 2*x:\n            if index >= i:\n                pairs += index-i\n\n    print(pairs)\n        \n\n\nmain()\n", "n=int(input())\na=sorted([int(x) for x in input().split()])\ncounter=0\nanswer=0\nend=1\nfor i in range(n):\n    if a[i]<0:\n        a[i]=a[i]*(-1)\na.sort()\nfor i in range(n):\n    end=max(end,i+1)\n    for j in range(end,n):\n        if a[i]*2<a[j]:\n            end=j\n            break\n        else:\n            counter+=1\n    else:\n        end=j+1\n    answer+=counter\n    counter=max(counter-1,0)\n            \nprint(answer)\n                \n", "'''input\n2\n3 6\n'''\nfrom sys import stdin, setrecursionlimit\nfrom bisect import bisect_right\nimport math\nsetrecursionlimit(15000)\n\n\n# main starts\nn = int(stdin.readline().strip())\narr = list(map(int, stdin.readline().split()))\nfor i in range(n):\n\tarr[i] = abs(arr[i])\narr.sort()\ncount = 0\nfor i in range(n):\n\tindex = bisect_right(arr, arr[i] * 2)\n\tcount += index - i - 1\nprint(count) \n", "from bisect import bisect_right\nn = int(input())\nA = list(map(int, input().split()))\nfor i in range(len(A)):\n    A[i] = abs(A[i])\nA.sort()\ncnt = 0\nfor i in range(len(A)):\n    q = 2 * A[i]\n    j = bisect_right(A, q)\n    cnt += max(0, j - i - 1)\nprint(cnt)", "n = int(input())\n\nL = sorted([abs(int(x)) for x in input().split()])\n\nT = 0\n\nfor i in range(n-1):\n    l,h = i,n-1\n    while h != l:\n        if L[(l+h+1)//2] <= 2*L[i]:\n            l = (l+h+1)//2\n        else:\n            h = (l+h)//2\n    T += l-i\n\nprint(T)", "n = int(input())\nls = list(map(int, input().split()))\nls = [abs(i) for i in ls]\nls.sort()\ni = 0\nj = 1\nres = []\ntry:\n    while True:\n        while ls[j]<=2*ls[i]: j+=1\n        res.append(j-i-1)\n        i+=1\nexcept:\n    while i!=n:\n        res.append(j-i-1)\n        i+=1\nprint(sum(res))\n", "# stdin=open('input.txt')\nfrom sys import stdin, stdout\ndef input():\n\treturn stdin.readline()[:-1]\n\n\n# stdout=open('output.txt',mode='w+')\n\n# def print(x, end='\\n'):\n# \tstdout.write(str(x) +end)\n\n\n# a, b = map(int, input().split())\n\n# l = list(map(int, input().split()))\n\n# n = int(input())\n\n\n\n\n\n# CODE BEGINS HERE.................\n\n# import copy\nimport math\n# import sys\n# sys.setrecursionlimit(10**7)\ndef abs_int(a):\n\treturn abs(int(a))\n\nn = int(input())\na = list(map(abs_int, input().split()))\n\na.sort()\n# print(a)\n\nptr = 0\nhalf = -1\ngt_than_half = [0] * n\nfor i in range(n):\n\thalf = math.ceil(a[i]/2)\n\twhile a[ptr] < half:\n\t\tptr += 1\n\tgt_than_half[i] = i - ptr\n# print(gt_than_half)\n\na.reverse()\n# print(a)\n\nptr = 0\ntwice = -1\nlt_than_twice = [0] * n\nfor i in range(n):\n\ttwice = 2 * a[i]\n\twhile a[ptr] > twice:\n\t\tptr += 1\n\tlt_than_twice[i] = i - ptr\n# print(lt_than_twice)\n\nprint((sum(gt_than_half) + sum(lt_than_twice))//2)\n\n\n#CODE ENDS HERE....................\n\n\n#stdout.close()\n\n", "N = int(input())\nA = list(map(int, input().split()))\n\ndef count(X, Y):\n    res = 0\n    r = 0\n    r2 = 0\n    Y = [-10**10] + Y + [10**10]\n    for l in range(len(X)):\n        xl = X[l]\n        for _ in range(len(Y)):\n            if Y[r+1] <= 2*xl:\n                r += 1\n                continue\n            break\n        for _ in range(len(Y)):\n            if Y[r2+1] < xl:\n                r2 += 1\n                continue\n            break\n        res += max(0, r - r2)\n    return res\n\nAP = [a for a in A if a > 0]\nAP.sort()\nAN = [-a for a in A if a < 0]\nAN.sort()\nprint(count(AP, AP) + count(AP, AN) + count(AN, AP) + count(AN, AN) - len(AN) - len(AP) - len(set(AP) & set(AN)))"]