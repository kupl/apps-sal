["import sys\nimport math\nfrom collections import defaultdict\nfrom collections import deque\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}{}\".format(i, sep))\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nfor _ in range(int(input())):\n  n = int(input())\n  a = list(read())\n  b = list(read())\n\n  arr = []\n  for i in range(n):\n    if a[i] != b[i]:\n      arr.append((i, b[i] - a[i]))\n\n  \n  flag = True \n  s = []\n  for i, j in arr:\n    if j <= 0:\n      flag = False\n      break \n    s.append(j)\n  \n  for i in range(1, len(arr)):\n    if arr[i][0] != arr[i-1][0] + 1:\n      flag = False \n      break \n  \n  if len(set(s)) >= 2:\n    flag = False \n\n  if flag:\n    print(\"YES\")\n  else:\n    print(\"NO\")\n  \n", "for q in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = list(map(int, input().split()))\n    ans = -1\n    for q in range(len(a)):\n        if a[q] != s[q] and ans == -1:\n            ans = s[q]-a[q]\n            if ans < 0:\n                print('NO')\n                break\n        elif a[q] != s[q] and (ans == -2 or ans != s[q] - a[q]):\n            print('NO')\n            break\n        elif a[q] == s[q] and ans > 0:\n            ans = -2\n    else:\n        print('YES')\n", "from sys import stdin\nfrom collections import deque\nt=int(stdin.readline().strip())\n\nfor cas in range(t):\n    n=int(stdin.readline().strip())\n    s=list(map(int,stdin.readline().strip().split()))\n    s1=list(map(int,stdin.readline().strip().split()))\n    aux=deque([])\n    for i in range(n):\n        aux.append(s[i]-s1[i])\n    l=n\n    r=-1\n    for i in range(n):\n        if aux[i]!=0:\n            l=i\n            break\n    for i in range(n-1,-1,-1):\n        if aux[i]!=0:\n            r=i\n            break\n    st=set()\n    for i in range(l,r+1):\n        st.add(aux[i])\n    st=list(st)\n    if len(st)==0 or (len(st)==1 and st[0]<0):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n        \n", "def solve(arr1,arr2,n):\n    index = -1\n    for i in range(n):\n        if arr1[i] != arr2[i]:\n            index = i\n            diff = arr2[i]-arr1[i]\n            break\n\n    if index == -1:\n        print('YES')\n        return\n    if diff < 0:\n        print('NO')\n        return\n    for i in range(index,n):\n        if arr1[i] == arr2[i]:\n            break\n        curr = arr2[i]-arr1[i]\n        if curr != diff:\n            print('NO')\n            return\n        arr2[i] = arr1[i]\n\n    for i in range(n):\n        if arr1[i] != arr2[i]:\n            print('NO')\n            return\n\n    print('YES')\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr1 = list(map(int,input().split()))\n        arr2 = list(map(int,input().split()))\n        solve(arr1,arr2,n)\n\nmain()\n", "q=int(input())\n\nfor qq in range(q):\n    n=int(input())\n    a=list(map(int, input().split()))\n    b=list(map(int, input().split()))\n    started = False\n    ended = False\n    possible = True\n    diff=0\n    for i in range(n):\n        if a[i] != b[i]:\n            if a[i] > b[i]:\n                possible = False\n                break\n            elif ended:\n                possible = False\n                break\n            elif started and b[i] - a[i] != diff:\n                possible = False\n                break\n            elif started:\n                continue\n            elif not started:\n                started = True\n                diff = b[i] - a[i]\n        elif a[i] == b[i] and started:\n            ended = True\n\n    if possible:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "q = int(input())\nfor rwerwe in range(q):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tb = list(map(int,input().split()))\n\tc = [b[i] - a[i] for i in range(n)]\n\tdupa = {}\n\tfor i in range(n):\n\t\tif c[i] != 0:\n\t\t\tdupa[c[i]] = 0\n\tif len(dupa) > 1:\n\t\tprint(\"NO\")\n\tif len(dupa) == 0:\n\t\tprint(\"YES\")\n\tif len(dupa) == 1:\n\t\tif sum(c) < 0:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tfor i in range(n):\n\t\t\t\tif c[i] != 0:\n\t\t\t\t\tstart = i\n\t\t\t\t\tbreak\n\t\t\tfor j in range(n):\n\t\t\t\ti = n - 1 - i\n\t\t\t\tif c[j] != 0:\n\t\t\t\t\tend = j\n\t\t\tif (end-start+1)*c[start] == sum(c):\n\t\t\t\tprint(\"YES\")\n\t\t\telse:\n\t\t\t\tprint(\"NO\")", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\nfor qu in range(T):\n    N = int(readline())\n    A = list(map(int, readline().split()))\n    B = list(map(int, readline().split()))\n    C = [b-a for a, b in zip(A, B)]\n    while C and C[-1] == 0:\n        C.pop()\n    C.reverse()\n    while C and C[-1] == 0:\n        C.pop()\n    \n    if not C or (len(set(C)) == 1 and C[0] > 0):\n        Ans[qu] = 'YES'\n    else:\n        Ans[qu] = 'NO'\n\nprint('\\n'.join(map(str, Ans)))", "from itertools import groupby\n\nfor _ in range(int(input())):\n    n = int(input())\n    a, b = list(map(int, input().split())), list(map(int, input().split()))\n    diff = [y-x for x, y in zip(a, b)]\n\n    if min(diff) < 0:\n        print('NO')\n        continue\n\n    group = [len(tuple(v)) for k, v in groupby(diff) if k > 0]\n    if len(group) > 1:\n        print('NO')\n    else:\n        print('YES')", "for TT in range(1, int(input()) + 1):\n    n = int(input())\n    a = [*map(int, input().split())]\n    b = [*map(int, input().split())]\n    c = [y - x for x, y in zip(a, b)]\n    i = 0\n    while i < n and c[i] == 0: i += 1\n    j = i\n    while j < n and c[j] == c[i]: j += 1\n    k = j\n    while k < n and c[k] == 0: k += 1\n    res = i == n or (c[i] > 0 and k == n)\n    print(\"YES\" if res else \"NO\")", "t = int(input())\nfor daf in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    cs = 0\n    f = True\n    el = -1\n    for i in range(n):\n        if b[i] - a[i] < 0:\n            f = False\n            break\n        if b[i] - a[i] != 0:\n            if cs == 0:\n                cs = 1\n                el = b[i] - a[i]\n            elif cs == 1:\n                if b[i] - a[i] != el:\n                    f = False\n                    break\n            else:\n                f = False\n                break\n        else:\n            if cs == 1:\n                cs = 2\n    if f:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "t = int(input())\n\nfor case in range(t):\n    n = int(input())\n    arr1 = list(map(int, input().split()))\n    arr2 = list(map(int, input().split()))\n    deltas = [0]\n    delta_types = set([0])\n    for i in range(len(arr2)):\n        delta = arr2[i] - arr1[i]\n        deltas.append(delta)\n        delta_types.add(delta)\n    if len(delta_types) > 2:\n        print(\"NO\")\n    elif len(delta_types) == 1:\n        print(\"YES\")\n    else:\n        min_delta = min(delta_types)\n        if min_delta < 0:\n            print(\"NO\")\n        else:\n            num_change = 0\n            for i in range(len(deltas) - 1):\n                if deltas[i] == 0 and deltas[i + 1] != 0:\n                    num_change += 1\n            if num_change == 1:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n", "import math\nfrom decimal import Decimal\nimport heapq\nfrom collections import deque\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n \ndef fact(a, b):\n\tc = []\n\tans = 0\n\tf = int(math.sqrt(a))\n\tfor i in range(1, f + 1):\n\t\tif a % i == 0:\n\t\t\tc.append(i)\n\tl = len(c)\n\tfor i in range(l):\n\t\tc.append(a // c[i])\n\tfor i in range(len(c)):\n\t\tif c[i] <= b:\n\t\t\tans += 1\n\tif a / f == f and b >= f:\n\t\treturn ans - 1\n\treturn ans\n \n\nt = int(input())\nfor i in range(t):\n\tn, a = na()\n\tb = list(map(int, input().split()))\n\tc = []\n\tf = True\n\ts = set()\n\tfor j in range(n):\n\t\tif a[j] != b[j]:\n\t\t\tif a[j] > b[j]:\n\t\t\t\tprint('NO')\n\t\t\t\tf = False\n\t\t\t\tbreak\n\t\t\tc.append(j)\n\t\t\ts.add(a[j] - b[j])\n\tif f:\n\t\t\tif len(s) > 1:\n\t\t\t\tprint('NO')\n\t\t\t\tcontinue\n\t\t\tf = True\n\t\t\tfor j in range(len(c) - 1):\n\t\t\t\tif c[j] != c[j + 1] - 1:\n\t\t\t\t\tf = False\n\t\t\tif f:\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor testcases in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    B=list(map(int,input().split()))\n\n    C=[B[i]-A[i] for i in range(n)]\n\n    MAX=max(C)\n    if min(C)<0:\n        print(\"NO\")\n        continue\n    \n    if MAX==0:\n        print(\"YES\")\n        continue\n\n    for c in C:\n        if 0<c<MAX:\n            print(\"NO\")\n            break\n\n    else:\n        D=[]\n        for i in range(n):\n            if C[i]==MAX:\n                D.append(i)\n\n        if len(D)<=1:\n            print(\"YES\")\n            continue\n\n        for j in range(1,len(D)):\n            if D[j]!=D[j-1]+1:\n                print(\"NO\")\n                break\n        else:\n            print(\"YES\")\n            \n        \n\n    \n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    c = [b[i] - a[i] for i in range(n)]\n    last = None\n    fail = False\n    if any(x < 0 for x in c): fail = True\n    for item in c:\n        if last == None:\n            if item == 0: continue\n            else: last = item\n        else:\n            if item == 0:\n                last = 0\n            else:\n                if item != last:\n                    fail = True\n                    break\n\n    if fail:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n            \n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int,minp().split()))\n\ndef solve():\n\tn = mint()\n\ta = list(mints())\n\tb = list(mints())\n\tdiff = None\n\tlast = 0\n\tfor i in range(n):\n\t\tif b[i] != a[i]:\n\t\t\tlast = i\n\t\n\tfor i in range(n):\n\t\td = b[i] - a[i]\n\t\tif diff != None and i <= last and d != diff:\n\t\t\treturn False\n\t\tif d != 0:\n\t\t\tif d < 0:\n\t\t\t\treturn False\n\t\t\tdiff = d\n\treturn True\n\nfor i in range(mint()):\n\tprint(['NO','YES'][solve()])\n", "# @author \n\nimport sys\n\nclass ASinglePush:\n    def solve(self):\n        t = int(input())\n        for _ in range(t):\n            n = int(input())\n            a = [int(_) for _ in input().split()]\n            b = [int(_) for _ in input().split()]\n            u = [b[i] - a[i] for i in range(n)]\n            l = -1\n            r = -1\n            for i in range(n):\n                if u[i]:\n                    l = i\n                    break\n\n            for i in range(n - 1, -1, -1):\n                if u[i]:\n                    r = i\n                    break\n\n            if l == -1:\n                print(\"YES\")\n            else:\n                assert(l != -1 and r != -1)\n                # print(u[l:r + 1], l, r)\n                print(\"YES\" if u[l] > 0 and u[l:r + 1] == [u[l]] * (r - l + 1) else \"NO\")\n\nsolver = ASinglePush()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "import sys\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f = []\n    p = None\n    for d in (x - y for x, y in zip(a, b)):\n        if d != p and (d != 0 or f):\n            f.append(d)\n        p = d\n    while f and f[-1] == 0:\n        f.pop()\n    print('YES' if not f or len(f) == 1 and f[0] < 0 else 'NO')", "q = int(input())\nfor i in range(q):\n\tn = int(input())\n\tmas1 = list(map(int, input().split()))\n\tmas2 = list(map(int, input().split()))\n\tflag = 0\n\tal = True\n\tp = 0\n\tfor j in range(n):\n\t\tif mas1[j] != mas2[j]:\n\t\t\tif flag == 0:\n\t\t\t\tflag = 1\n\t\t\t\tp = mas1[j] - mas2[j]\n\t\t\t\tif p > 0:\n\t\t\t\t\tal = False\n\t\t\t\t\tbreak\n\t\t\telif flag == 1:\n\t\t\t\tif p != mas1[j] - mas2[j]:\n\t\t\t\t\tal = False\n\t\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tal = False\n\t\t\t\tbreak\n\t\telse:\n\t\t\tif flag == 1:\n\t\t\t\tflag = 2\n\tif al:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint (\"NO\")\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    ans = []\n    for i in range(n):\n        if a[i] != b[i]:\n            ans.append(i)\n    f = False\n    for i in range(1, len(ans)):\n        if ans[i] - ans[i - 1] != 1:\n            f = True\n    if f:\n        print(\"NO\")\n    else:\n        if len(ans) == 0:\n            print(\"YES\")\n        else:\n            f = False\n            now = a[ans[0]] - b[ans[0]]\n            for i in range(1, len(ans)):\n                if now != a[ans[i]] - b[ans[i]]:\n                    f = True\n            if f or now > 0:\n                print(\"NO\")\n            else:\n                print(\"YES\")", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    diff = -1\n    for i in range(n):\n        if a[i] == b[i]:\n            if diff == -1:\n                continue\n            else:\n                diff = 10**9\n        else:\n            if diff == -1:\n                diff = b[i] - a[i]\n                if diff < 0:\n                    print(\"NO\")\n                    break\n            if diff != -1:\n                if diff == b[i] - a[i]:\n                    continue\n                else:\n                    print(\"NO\")\n                    break\n    else:\n        print(\"YES\")", "# from sys import stdin\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport sys\ninput = sys.stdin.readline\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    l1 = list(map(int,input().split()))\n    l2 = list(map(int,input().split()))\n    count = 0\n    i = 0\n    while i<n:\n        if l1[i]!=l2[i]:\n            j = i\n\n            count+=1\n            if count == 2:\n                break\n            seti = set()\n            while l1[j]!=l2[j]:\n                seti.add((l2[j]-l1[j]))\n                j+=1\n                if j == n:\n                    break\n            i = j\n            if j == n:\n               break\n\n        else:\n            i+=1\n\n    # print(seti)\n    if count == 1:\n        if len(seti) == 1:\n            z = seti.pop()\n            if z>0:\n             print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    elif count == 0:\n        print('YES')\n\n    else:\n        print('NO')\n\n\n\n\n", "'''\nName : Jaymeet Mehta\nid :mj_13\nProblem : Single push\n'''\nfrom sys import stdin,stdout\ntest=int(stdin.readline())\nfor _ in range(test):\n    N=int(stdin.readline())\n    A= [int(x) for x in stdin.readline().split()]\n    B= [int(x) for x in stdin.readline().split()]\n    indices=[]\n    values=[]\n    flag=True\n    for i in range(N):\n        if A[i]!=B[i]:\n            if B[i]<A[i]:\n                flag=False\n                break\n            values.append(B[i]-A[i])\n            indices.append(i)\n    if not flag:\n        print(\"NO\")\n        continue\n    if len(set(values))>1:\n        flag=False\n    for i in range(1,len(indices)):\n        if indices[i]-indices[i-1]!=1:\n            flag=False\n            break\n    print(\"YES\") if flag else print(\"NO\")", "import math\n\nt = int(input())\n\nfor f in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    cnt = [0] * n\n\n\n    for i in range(n):\n        cnt[i] = b[i] - a[i]\n\n    u = [True] * n\n    l, r = 0, 0\n    for i in range(n):\n        if cnt[i] != 0:\n            l = i\n            break\n    for i in range(n - 1, -1, -1):\n        if cnt[i] != 0:\n            r = i\n            break\n\n    el = cnt[l]\n    ans = True\n    for i in range(l, r + 1):\n        if cnt[i] != el or cnt[i] < 0:\n            ans = False\n\n    if ans:\n        print('YES')\n    else:\n        print('NO')\n\n\n\n\n\n\n", "from itertools import groupby\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    C = []\n    for a, b in zip(A, B):\n        C.append(b-a)\n    D = []\n    for v, g in groupby(C):\n        D.append(v)\n    if len(D)==1:\n        if D[0] >= 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    elif len(D)==2:\n        if 0 in D:\n            D.remove(0)\n            if D[0]>=0:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            print(\"NO\")\n    elif len(D)==3:\n        if D[0]==D[-1]==0 and D[1]>=0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        print(\"NO\")\n"]