["a, b, p, x = [int(x) for x in input().split()]\n\npowers = [a]\n\nwhile powers[-1] != 1:\n    powers.append(powers[-1] * a % p)\n    \norder = len(powers)\npowers = [powers[-1]] + powers\n\ninverse = pow(order, p-2, p)\n\ndef f(sol):\n    return (x // (p * order)) + (1 if sol <= x % (p * order) else 0)\n\ndef chinese(a, n, b, m):\n    k = inverse * (b - a + m) % m\n    x = k * n + a\n    return x % (n * m)\n\nres = 0\nfor i in range(len(powers)-1):\n    inv = powers[order - i]\n    val = inv * b % p\n    \n    sol = chinese(i, order, val, p)\n    \n    res += f(sol)\n    \nprint(res)\n", "a,b,p,x = list(map(int, input().strip().split()))\n\n\ndef brute(a,b,p,x):\n    for n in range(1, x+1):\n        if (n*pow(a,n,p)) % p == b:\n            print(n)\n\n#brute(a,b,p,x)\n\nsols = 0\n\ninva = pow(a,p-2,p)\n\n##print('a', inva)\n\na2 = 1\nb2 = b\ns = 0\nd1 = -b\nfac = p*(p-1)\nwhile s < p-1:\n    k = (d1 + s) % p\n    u = k\n    L = x - s - (p-1)*k\n    sols += L//fac + 1\n##    while (p-1)*u + s <= x:\n##        n = (p-1)*u + s\n##        print(s, k, n)\n##        print(n)\n##        #print(n*pow(a,n,p) % p, b)\n##        sols += 1\n##        u += p\n    d1 = (d1 * inva) % p\n    s += 1\n\nprint(sols)\n        \n\n        \n    \n\n", "a, b, p, x = list(map(int, input().split()))\nans = 0\nainv = 1\nfor i in range(p - 2):\n    ainv = (ainv * a) % p\nrem = 1\ninv = 1\nlcm = p * (p - 1)\nfor n in range(1, p):\n    rem = (rem * a) % p\n    inv = (inv * ainv) % p\n    i0 = min(p, ((n * rem - b) * inv + p) % p)\n    n0 = n + i0 * (p - 1)\n    ans += max(0, (x - n0 + lcm) // lcm)\nprint(ans)\n", "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 04.02.2018 13:31              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    a, b, p, x = list(map(int, input().split()))\n    ans = 0\n    ainv = 1\n    for i in range(p - 2):\n        ainv = (ainv * a) % p\n    rem = 1\n    inv = 1\n    lcm = p * (p - 1)\n    for n in range(1, p):\n        rem = (rem * a) % p\n        inv = (inv * ainv) % p\n        i0 = min(p, ((n * rem - b) * inv + p) % p)\n        n0 = n + i0 * (p - 1)\n        ans += max(0, (x - n0 + lcm) // lcm)\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n", "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 04.02.2018 13:31              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    a, b, p, x = list(map(int, input().split()))\n    ans = 0\n    ainv = 1\n    for i in range(p - 2):\n        ainv = (ainv * a) % p\n    rem = 1\n    inv = 1\n    lcm = p * (p - 1)\n    for n in range(1, p):\n        rem = (rem * a) % p\n        inv = (inv * ainv) % p\n        i0 = min(p, ((n * rem - b) * inv + p) % p)\n        n0 = n + i0 * (p - 1)\n        ans += max(0, (x - n0 + lcm) // lcm)\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n", "a,b,p,x = [int(x) for x in input().split()]\n\nainv = pow(a,p-2,p)\n\ncount = 0\n\nn = 1\nexp = ainv*b%p\nwhile n<p:\n    m = n\n    if exp>n:\n        m += (n+p-exp)*(p-1)\n    else:\n        m += (n-exp)*(p-1)\n    \n    if m<=x: count += 1 + (x-m)//(p*(p-1))\n    \n    n += 1\n    exp = (exp*ainv)%p\n\nprint(count)", "def congr(a, b, p, x):\n    solutions = 0\n    power = pow(a, p - 2, p)\n    a2, b2, s, d1 = 1, b, 0, -b\n    prod = p * (p - 1)\n    while s < p - 1:\n        k = (d1 + s) % p\n        L = x - s - (p - 1) * k\n        solutions += L // prod + 1\n        d1 = (d1 * power) % p\n        s += 1\n    return solutions\n\n\na, b, p, x = [int(j) for j in input().split()]\nprint(congr(a, b, p, x))\n", "def AC():\n    a, b, p, x = map(int, input().split())\n    ans = 0\n    m = 1\n    for i in range(p - 2):\n        m = (m * a) % p\n    rem = 1\n    inv = 1\n    Ch = p * (p - 1)\n    for n in range(1, p):\n        rem = (rem * a) % p\n        inv = (inv * m) % p\n        cur = min(p, ((n * rem - b) * inv + p) % p)\n        rep = n + cur * (p - 1)\n        ans += max(0, (x - rep + Ch) // Ch)\n    print(ans)\nAC()", "import sys\n\ndef calc(a, b, p, x):\n    ans = 0\n    power = pow(a, p - 2, p)\n    a2, b2, s, d1 = 1, b, 0, -b\n    prod = p * (p - 1)\n    while s < p - 1:\n        k = (d1 + s) % p\n        L = x - s - (p - 1) * k\n        ans += L // prod + 1\n        d1 = (d1 * power) % p\n        s += 1\n    return str(ans)\n \n \na, b, p, x = list(map(int,sys.stdin.readline().split()))\nsys.stdout.write(calc(a, b, p, x))\n\n"]