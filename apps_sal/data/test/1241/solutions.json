["#!/usr/bin/env python3\n\ntry:\n    while True:\n        n, k = map(int, input().split())\n        a = list(map(int, input().split()))\n        left = 0\n        result = -1\n        cur = 0\n        for i in range(n):\n            if not a[i]:\n                if k:\n                    k -= 1\n                else:\n                    if i - left > result:\n                        res_left = left\n                        res_right = i\n                        result = i - left\n                    while left < i and a[left]:\n                        left += 1\n                    left += 1\n\n        if i + 1 - left > result:\n            res_left = left\n            res_right = i + 1\n            result = i + 1 - left\n\n        print(result)\n        for i in range(res_left):\n            print(a[i], end=' ')\n        for i in range(result):\n            print(end=\"1 \")\n        for i in range(res_right, n):\n            print(a[i], end=' ')\n        print()\n\nexcept EOFError:\n    pass\n", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\nki=i=s=0; po=1\nfor j in range(n):\n  s+=(l[j]==0)\n  while s>k: s-=(l[i]==0); i+=1\n  if j-i>ki-po: po,ki=i,j\nprint(ki-po+1)\nl[po:ki+1]=[1]*(ki-po+1)\nprint(' '.join(map(str,l)))", "def main():\n    n, k = list(map(int, input().split()))\n    nums = input().split()\n\n    nums.append('0')\n    n += 1\n    maxr = maxi = front = rear = 0\n    while front < n:\n        for front in range(front, n):\n            if nums[front] == '0':\n                if k > 0:\n                    k -= 1\n                else:\n                    break\n\n        r = front - rear\n        if r > maxr:\n            maxr = r\n            maxi = rear\n\n        if nums[rear] == '0':\n            if front > rear:\n                k += 1\n            else:\n                front += 1\n        rear += 1\n\n    nums.pop()\n    nums[maxi:maxi+maxr] = ('1' for _ in range(maxr))\n    print(maxr)\n    print(' '.join(nums))\n\nmain()\n", "    # 1\n# 0.1\n# True\n# \"sdf\"\n#\n# [1,2,True] : list\n# (1,2,True) : tuple\n# {1, 2, 3} : set\n# {3: 2, True: False} : dict\n# range(10) : range\n\n# l = (1,2,True)\n# print(l[0])\n# l = 3\n#\n# s = {1, 2, True, \"asdf\", 2.1}\n# print(s)\n# d = {3: 2, True: False}\n# print(d)\n#\n# if not (2 == 3 or 1 == 1.0):\n#     print('2 = 3')\n# elif True:\n#     xxxxx\n# else:\n#     print('else')\n#\n# if 3 not in [1,2]:\n#     print('2 not in 1,2')\n#\n# while True:\n#     break\n#     continue\n# sdfadf\n\n# while continue break\n\n# for x in range(10):\n#     if x % 11 == 12:\n#         print(x)\n#         break\n# else:\n#     print('nothing')\n\n# l = []\n# l.append(1)\n# length = len(l)\n# c = chr(96)\n# print(c)\n\n# l = ['a', 'b', 'c']\n# print(l[2:3])\n\n# s = {1, 2}\n# s.add(3)\n# r = {2,4,5,6}\n# print(s | r)\n\n# def f(x):\n#     def mul(x, y):\n#         return x * y\n#     if x == 0:\n#         return 1\n#     else:\n#         return mul(x, f(x-1))\n\n# x = 1\n# def f():\n#     x = 1\n# #     print(x)\n# # f()\n# # print(x)\n#\n# import os.path\n# from os.path import join\n#\n# import numpy as np\n# #import foo\n# #\n# class S:\n#     def __init__(self, x):\n#         self.x = x\n#     def print_x(self):\n#         self.y = 123\n#         print(self.x)\n#\n# o = S(1)\n# o.print_x()\n# print(foo.x)\n# print(np.array([1,2,3]))\n#\n# for x in ['1','2','3']:\n#\n#     print(join('/Users/kaoet', x, 'bar'))\n\n# x = list(range(10))\n# print(x)\n# x = [i + 1 for i in x if i % 2 == 0]\n# print(x)\n# l = [ 1, 2,\n#     1,\n#     2,\n# ]\n#\n# for x in range(10):\n#     s = \"\"\"\n# asdfasdfas\n# df\n# sda\n# f\n# asdf\n# as\n# df\n# asd\n# f\n# \"\"\"\n#\n# print(s)\n\n\n\nn, m = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\nr = -1\n\nans = 0\nans_po = 0\nfor l in range(n):\n    if l > 0:\n        if a[l - 1] == 0:\n            m += 1\n    while (r < n - 1 and (1 - a[r + 1]) <= m):\n        r += 1;\n        if (a[r] == 0):\n            m = m - 1\n            #print(m)\n    \n    \n    if r - l + 1 > ans:\n        ans = r - l + 1\n        ans_po = l\n\n\nprint(ans)\n\n\nfor i in range(ans_po, ans_po + ans):\n    a[i] = 1;\n\n\nprint(' '.join(map(str,a)))\n    \n    \n    \n    \n    \n\n\n\n\n    \n    \n\n\n\n\n", "from collections import Counter\ndef mp():  return list(map(int,input().split()))\ndef lt():  return list(map(int,input().split()))\ndef pt(x):  print(x)\ndef ip():  return input()\ndef it():  return int(input())\ndef sl(x):  return [t for t in x]\ndef spl(x): return x.split()\ndef aj(liste, item): liste.append(item)\ndef bin(x):  return \"{0:b}\".format(x)\ndef printlist(l): print(' '.join([str(x) for x in l]))\n\nn,k = mp()\na = lt()\nc = 0\nmaxx = 0\nj = 0\nindex = None\nif k == 0:\n    w = ''.join([str(x) for x in a])\n    y = max([len(m) for m in w.split(\"0\")])\n    print(y)\n    printlist(a)\n    return\nfor i in range(n):\n    if i >= 1 and a[i-1] == 0:\n        c -= 1\n    while j < n and c <= k:\n        if a[j] == 0:\n            c += 1\n        j += 1\n    if c > k:\n        r = j-i-1\n    else:\n        r = j-i\n    if r > maxx:\n        maxx = r\n        if c > k:\n            index = (i,j-1)\n        else:\n            index = (i,j)\na[index[0]:index[1]] = [1]*(index[1]-index[0])\nprint(maxx)\nprintlist(a)\n", "n,k=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\ni=0\nj=0\nAnsp=[0,0]\nzcnt=0\nmax=0\n\nwhile i<=n-1 :\n    while j<n :\n        if zcnt>=k and a[j]==0 :break\n        j+=1\n        if not a[j-1]:\n            zcnt+=1\n            if zcnt>k :\n                j-=1\n                zcnt-=1\n                break\n    l=j-i\n    #print(i,j,zcnt)\n    if l>max :\n        max=l\n        Ansp=[i,j]\n    if not a[i] :\n        zcnt-=1\n    i+=1\n    \n\nfor i in range(Ansp[0],Ansp[1]) :\n    a[i]=1\n    \nprint(max)\nprint(\" \".join(map(str,a)))", "n,k=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\ni=0\nj=0\nAnsp=[0,0]\nzcnt=0\nmax=0\n\nwhile i<=n-1 :\n    while j<n :\n        if zcnt>=k and a[j]==0 :break\n        j+=1\n        if not a[j-1] and zcnt<k:\n            zcnt+=1\n        elif zcnt>k : break\n    l=j-i\n    #print(i,j,zcnt)\n    if l>max :\n        max=l\n        Ansp=[i,j]\n    if not a[i] :\n        zcnt-=1\n    i+=1\n    \n\nfor i in range(Ansp[0],Ansp[1]) :\n    a[i]=1\n    \nprint(max)\nprint(\" \".join(map(str,a)))\n", "def read_ints():\n    return [int(x) for x in input().split()]\n\n\ndef main():\n    n, k = read_ints()\n    a = read_ints()\n\n    lo = 0\n    hi = 0\n    count = 0\n    x = -1\n    y = -1\n    while hi < n:\n        if count < k or a[hi] != 0:\n            if a[hi] == 0:\n                count += 1\n            if hi - lo >= y - x:\n                x = lo\n                y = hi\n            hi += 1\n        else:\n            if a[lo] == 0:\n                count -= 1\n            lo += 1\n\n    if x != -1:\n        print(y - x + 1)\n        for i in range(x, y + 1):\n            a[i] = 1\n        print(\" \".join(map(str, a)))\n    else:\n        print(0)\n        print(\" \".join(map(str, a)))\n\nmain()\n", "def read_ints():\n    return [int(x)for x in input().split()]\ndef main():\n    n,k = read_ints();\n    a = read_ints()\n    \n    lo = 0\n    hi = 0\n    count = 0\n    x = -1\n    y = -1\n    \n    while hi<n:\n        if count < k or a[hi]!=0:\n            if a[hi] == 0:\n                count += 1\n            if hi - lo >= y - x:\n                x = lo\n                y = hi\n            hi+=1\n        else:\n            if a[lo] == 0:\n                count -= 1\n            lo += 1\n            \n    if x!=-1:\n        print(y-x+1)\n        \n        for i in range(x,y+1):\n            a[i] = 1\n        print(\" \".join(map(str,a)))    \n    else:\n        print(0)\n        print(\" \".join(map(str,a)))\n        \nmain()\n        \n              \n    \n                    \n", "import random\nfrom collections import Counter, namedtuple\n\nArray = namedtuple('Array', ['length', 'start', 'stop'])\n\n\ndef get_solution(n, k, input_list):\n    array = Array(0, 0, 0)\n\n    stop = 0\n    zeros = 0\n\n    for start in range(n):\n        while stop < n:\n            value = input_list[stop]\n            length = stop-start+1\n\n            if value == 0:\n                zeros += 1\n\n            # print(\"start is {}, stop is {}, value is {}, lengt is {}, zeros is {}\".format(\n            #     start, stop, value, length, zeros))\n\n            if zeros > k and value == 0:\n                zeros -= 1\n                break\n            else:\n                if array.length < length:\n                    # print(\"this one is better\")\n                    array = Array(length, start, stop+1)\n                stop += 1\n\n        if input_list[start] == 0:\n            zeros -= 1\n\n        start += 1\n        # while stop - start >= k:\n        #     stop -= 1\n        #     zeros -= 1 is input_list[stop] == 0\n\n    return array\n    # return sorted(arrays, reverse=True)\n\n\ndef solve(n, k, input_list):\n    solution = get_solution(n, k, input_list)\n    if solution:\n        length, start, stop = solution\n        input_list[start:stop] = [1] * (stop - start)\n        print(length)\n    else:\n        print(0)\n\n    print(\" \".join(map(str, input_list)))\n\n\ndef main():\n    n, k = list(map(int, input().split()))\n    input_list = list(map(int, input().split()))\n    solve(n, k, input_list)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nans = 0\n\ndef get(x) :\n    return 1 - x\n\nl = 0\ncnt = 0\nL = n\nR = 0\n\nfor i in range(n) :\n    cnt += get(s[i])\n    while cnt > k :\n        cnt -= get(s[l])\n        l += 1\n    if l <= i :    \n        now = i - l + 1\n        if now > ans :\n            ans = now\n            L = l\n            R = i\n            \nif L <= R :\n    for i in range(L, R + 1) :\n        s[i] = 1\n\nprint(ans)\nprint(' '.join(map(str,s)))\n", "n, k = map(int, input().split())\ns = list(map(int, input().split()))\n\nans = 0\n\ndef get(x) :\n    return 1 - x\n\nl = 0\nr = -1\ncnt = 0\nL = n\nR = 0\n\nwhile l < n :\n    while r + 1 < n and cnt + get(s[r + 1]) <= k : \n        cnt += get(s[r + 1])\n        r += 1\n        \n    now = r - l + 1\n    \n    if now > ans :\n        ans = now\n        L = l\n        R = r\n    cnt -= get(s[l])\n    l += 1\n\nfor i in range(L, R + 1) :\n    s[i] = 1\n\nprint(ans)\nprint(\" \".join(map(str, s)))", "def main():\n    n, k = list(map(int, input().split()))\n    l, x = list(input()[::2]), k + 1\n    l.append('0')\n    n += 1\n    for i, c in enumerate(l):\n        if c == '0':\n            x -= 1\n            if not x:\n                break\n    m, j, ji = i, -1, (-1, i)\n    for i in range(i + 1, n):\n        if l[i] == '0':\n            for j in range(j + 1, n):\n                if l[j] == '0':\n                    if m < i - j:\n                        m, ji = i - j, (j, i)\n                    break\n    j, i = ji\n    j += 1\n    z = i - j\n    l[j:i] = ['1'] * z\n    if z > n:\n        z = n\n    del l[-1]\n    print(z)\n    print(' '.join(l))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "3\n#coding=utf-8\n\n__metaclass__ = type\n__author__ = 'xdlove'\n\nn,k = list(map(int,input().split()))\nres = [int(x) for x in input().split()] \nl,r = -1,-2\n\nL,num_0 = 0,0\nfor R in range(n):\n    if res[R] == 0:\n        num_0 += 1\n    while num_0 > k:\n        if r - l < R - L: #[l,r)\n            l,r = L,R\n        if res[L] == 0:\n            num_0 -= 1\n        L += 1\n    if R == n - 1 and r - l < R + 1 - L:\n        l,r = L,R + 1\n\nprint(r - l)\nfor i in range(n):\n    if l <= i < r:\n        res[i] = 1\n    res[i] = str(res[i])\nprint(' '.join(res))\n", "n = input().split()\nk = int(n[-1])\nn = int(n[0])\na = [int(x) for x in input().split()]\nii = 0\nzero = list()\nfor x in a:\n    if not x:\n        zero.append(ii)\n    ii += 1\n\nif len(zero)-k <= 0:\n    print(n)\n    string = '1'\n    for x in range(1, n):\n        string += ' 1'\n    print(string)\nelif k == 0:\n    string = ''\n    for x in range(len(a)):\n        string += str(a[x])\n    o = ''\n    while string.find(o+'1') != -1:\n        o += '1'\n    print(len(o))\n    print(' '.join(str(x) for x in a))\nelse:\n    maxof1 = 0\n    for i in range(len(zero)-k+1):\n        z = 1\n        l1 = 0\n        while zero[i]-z >= 0 and a[zero[i] - z]:\n            l1 += 1\n            z += 1\n        z = 1\n        l2 = 0\n        while zero[i+k-1]+z <= n-1 and a[zero[i + k-1] + z]:\n            l2 += 1\n            z += 1\n        x = zero[i + k-1] - zero[i] + 1 + l1 + l2\n        if maxof1 < x:\n            maxof1 = x\n            maxn = i\n    print(maxof1)\n    for i in range(maxn, maxn+k):\n        a[zero[i]] = 1\n    string = str(a[0])\n    for x in range(1, len(a)):\n        string += ' '+str(a[x])\n    print(string)", "n,k=map(int,input().split())\nl=list(map(int,input().split()))\nki=i=s=0; po=1\nfor j in range(n):\n  s+=(l[j]==0)\n  while s>k: s-=(l[i]==0); i+=1\n  if j-i>ki-po: po,ki=i,j\nprint(ki-po+1)\nl[po:ki+1]=[1]*(ki-po+1)\nprint(' '.join(map(str,l)))", "n,k=map(int,input().split())\nara=list(map(int,input().split()))\nmax=0\nzero=0\nvalue=0\nend=0\nfor i in range(0,n):\n    if ara[i]==0:\n        zero+=1\n    if zero<=k:\n        max+=1\n        end=i\n    else:\n        if ara[value]==0 :\n            zero-= 1\n        value+= 1\nprint(max)\nfor i in range(end-max+1,end+1):\n    ara[i]=1\nprint(\" \".join(map(str,ara)))", "n,k=list(map(int,input().split()))\nara=list(map(int,input().split()))\nmax=0\nzero=0\nvalue=0\nend=0\nfor i in range(0,n):\n    if ara[i]==0:\n        zero+=1\n    if zero<=k:\n        max+=1\n        end=i\n    else:\n        if ara[value]==0 :\n            zero-= 1\n        value+= 1\nprint(max)\nfor i in range(end-max+1,end+1):\n    ara[i]=1\nprint(\" \".join(map(str,ara)))\n", "n, k = map(int, input().split())\nl = list(map(int, input().split()))\ncnt = i = sm = 0\npos = 1\nfor j in range(n):\n    sm += (l[j] == 0)\n    while sm > k:\n        sm -= (l[i] == 0)\n        i += 1\n    if j - i > cnt - pos:\n        pos, cnt = i, j\nprint(cnt - pos + 1)\nl[pos: cnt + 1] = [1] * (cnt - pos + 1)\nprint(' '.join(map(str, l)))", "mx = 0\n\n\ndef f(need, c, k, n):\n    for i in range(n):\n        if i + need - 1 >= n:\n            break\n        temp = c[i + need - 1]\n        if i > 0:\n            temp -= c[i - 1]\n        if temp + k >= need:\n            return (True, i)\n\n    return (False, None)\n\n\ndef main():\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n\n    c = [0 for i in range(n)]\n\n    c[0] = a[0]\n\n    for i in range(1, n):\n        c[i] = c[i - 1]\n        if a[i] == 1:\n            c[i] += 1\n\n    l, r = k, n + 1\n\n    while r - l > 100:\n        m = (l + r) // 2\n        if f(m, c, k, n)[0]:\n            l = m\n        else:\n            r = m\n\n    for i in range(r, l - 1, -1):\n        res, start = f(i, c, k, n)\n        if res:\n            print(\"%d\" % i)\n            print((\" \".join(str(x)\n                           for x in a[:start] + [1] * i + a[start + i:])))\n            return\n\ndef __starting_point():\n    main()\n    # print(gcd(100, 2))\n\n__starting_point()", "import bisect\n\n\ndef readline():\n    return [int(x) for x in input().strip().split()]\n\n\ndef to_s(iterable):\n    return (str(obj) for obj in iterable)\n\n\nclass Solver:\n    def __init__(self):\n        self.n = None\n        self.k = None\n        self.a = None\n        self.sums = []\n\n    def main(self):\n        self.n, self.k = readline()\n        self.a = [0] + readline()\n        self.sums.append(0)\n        for val in self.a[1:]:\n            self.sums.append(self.sums[-1] + (val == 0))\n\n        best_start, best_end = 0, -1\n        for i in range(1, self.n + 1):\n            end = bisect.bisect_right(self.sums, self.k + self.sums[i - 1], i)\n            if end - i > best_end - best_start:\n                best_start, best_end = i, end\n\n        print(best_end - best_start)\n        for i in range(best_start, best_end):\n            self.a[i] = 1\n        print(' '.join(to_s(self.a[1:])))\n\n\nSolver().main()\n", "L=list(map(int,input().split()))\nn=L[0]\nk=L[1]\na=list(map(int,input().split()))\n\nnbr0=0\nposi=0\ntaillemax=0\np=0\nfor i in range(len(a)):\n    nbr0+=(a[i]==0)\n    if nbr0>k:\n        if (i-posi)>taillemax:\n            \n            p=posi\n            taillemax=i-posi\n           \n        j=posi\n        while 1:\n            if a[j]==0:\n                posi=j+1\n                break\n            j=j+1\n        nbr0-=1\n       \nif i==(n-1) and (i-posi+1)>taillemax:\n    p=posi\n    taillemax=i-posi+1\n    #print(p,posi)\n    \nprint(taillemax)\nch=\"\"\nfor i in range(len(a)):\n    if i>=p and i<(p+taillemax):\n        ch+=\"1 \"\n    else:\n        ch+=str(a[i])+\" \"\nprint(ch)\n", "from sys import stdin, stdout\nL=list(map(int,stdin.readline().split()))\nn=L[0]\nk=L[1]\na=list(map(int,stdin.readline().split()))\n\nnbr0=0\nposi=0\ntaillemax=0\np=0\nfor i in range(len(a)):\n    nbr0+=(a[i]==0)\n    if nbr0>k:\n        if (i-posi)>taillemax:\n            \n            p=posi\n            taillemax=i-posi\n           \n        j=posi\n        while 1:\n            if a[j]==0:\n                posi=j+1\n                break\n            j=j+1\n        nbr0-=1\n       \nif i==(n-1) and (i-posi+1)>taillemax:\n    p=posi\n    taillemax=i-posi+1\n    #print(p,posi)\n    \nprint(taillemax)\nch=\"\"\nfor i in range(len(a)):\n    if i>=p and i<(p+taillemax):\n        ch+=\"1 \"\n    else:\n        ch+=str(a[i])+\" \"\nstdout.write(ch)\n", "from sys import stdin, stdout\nL=list(map(int,stdin.readline().split()))\nn=L[0]\nk=L[1]\n#a=list(map(int,stdin.readline().split()))\na=[int(c) for c in stdin.readline().split()]\n\nnbr0=0\nposi=0\ntaillemax=0\np=0\nfor i in range(len(a)):\n    nbr0+=(a[i]==0)\n    if nbr0>k:\n        if (i-posi)>taillemax:\n            \n            p=posi\n            taillemax=i-posi\n           \n        j=posi\n        while 1:\n            if a[j]==0:\n                posi=j+1\n                break\n            j=j+1\n        nbr0-=1\n       \nif i==(n-1) and (i-posi+1)>taillemax:\n    p=posi\n    taillemax=i-posi+1\n    #print(p,posi)\n    \nprint(taillemax)\nch=\"\"\nfor i in range(len(a)):\n    if i>=p and i<(p+taillemax):\n        ch+=\"1 \"\n    else:\n        ch+=str(a[i])+\" \"\nstdout.write(ch)\n", "from sys import stdin, stdout\nL=list(map(int,stdin.readline().split()))\nn=L[0]\nk=L[1]\n#a=list(map(int,stdin.readline().split()))\na=[int(c) for c in stdin.readline().split()]\n\nnbr0=0\nposi=0\ntaillemax=0\np=0\nfor i in range(len(a)):\n    nbr0+=(a[i]==0)\n    if nbr0>k:\n        if (i-posi)>taillemax:\n            \n            p=posi\n            taillemax=i-posi\n           \n        j=posi\n        while 1:\n            if a[j]==0:\n                posi=j+1\n                break\n            j=j+1\n        nbr0-=1\n       \nif i==(n-1) and (i-posi+1)>taillemax:\n    p=posi\n    taillemax=i-posi+1\n    #print(p,posi)\n    \nprint(taillemax)\nch1=\"\"\nfor i in range(len(a)):\n    if i>=p and i<(p+taillemax):\n        ch1+=\"1 \"\n    else:\n        ch1+=str(a[i])+\" \"\nstdout.write(ch1)\n"]