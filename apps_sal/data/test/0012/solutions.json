["n = int(input())\nA = input()\nx = A.count('G')\nnum_1 = 0\nnum_2 = 0\nmax_num = 0\nflag = 0\nfor i in range(n):\n    if A[i] == 'G' and flag == 0:\n        num_1 += 1\n    elif A[i] == 'G' and flag == 1:\n        num_2 += 1\n    elif A[i] == 'S' and flag == 0:\n        flag = 1\n    else:\n        if num_1 + num_2 + 1 <= x:\n            if num_1 + num_2 + 1 > max_num:\n                max_num = num_1 + num_2 + 1\n            num_1 = num_2\n            num_2 = 0\n            flag = 1\n        else:\n            if num_2 + num_1 > max_num:\n                max_num = num_1 + num_2\n            num_1 = num_2\n            num_2 = 0\n            flag = 1\nif num_1 + num_2 + 1 <= x:\n    if num_1 + num_2 + 1 > max_num:\n        max_num = num_1 + num_2 + 1\nelse:\n    if num_2 + num_1 > max_num:\n        max_num = num_1 + num_2\nprint(max_num)\n", "n = int(input())\ns = input()\n\n\nmax_ans = len([x for x in s if x == 'G'])\nright = 0\ncnt = 0\nans = 0\nfor i in range(n):\n\tassigned = False\n\tfor j in range(right, n, 1):\n\t\tif s[j] == 'S':\n\t\t\tcnt += 1\n\t\tif cnt > 1:\n\t\t\tright = j\n\t\t\tcnt -= 1\n\t\t\tassigned = True\n\t\t\tbreak\n\tif not assigned:\n\t\tright = n\n\t# print(i, right)\n\tans = max(ans, right - i)\n\tif s[i] == 'S':\n\t\tcnt -= 1\nans = min(ans, max_ans)\nprint(ans)", "input()\nres = 0\ncur = 1\ncur_p = 0\ns = input()\nfor c in s:\n\tif c == \"G\":\n\t\tcur += 1\n\t\tcur_p += 1\n\t\tres = max(res, cur)\n\telse:\n\t\tcur = cur_p + 1\n\t\tcur_p = 0\nprint(min(res, s.count(\"G\")))\n", "n=int(input())\nt=input()\nL=[-1]\ns=0\nfor i in range(n):\n    if t[i]=='S':\n        L.append(i)\n        s+=1\nL.append(n)\nm = L[1]-L[0]-1\nfor i in range(len(L)-2):\n    if L[i+2]-L[i]-1 > m:\n        m=L[i+2]-L[i]-1\nprint(min(m,n-s))\n", "n = int(input())\nks  =input().strip()\n\nprev_g_seq_len = 0\ncur__g_seq_len = 0\nprev_is_s = True\n\nres = 0\nfor j in ks:\n    if j == 'S':\n        prev_g_seq_len = cur__g_seq_len\n        cur__g_seq_len = 0\n        # prev_is_s = True\n    else:\n        cur__g_seq_len += 1\n        # prev_is_s = False\n    res = max (res, prev_g_seq_len + cur__g_seq_len + 1)\n\nmmm = ks.count('G')\nres = min(mmm, res)\n\n\n\n\nprint(res)\n\n\n", "n = int(input())\ns = input()\ng1 = 0\ng2 = 0\nans = 0\nnum2 = s.count(\"G\")\nfor  i in range(n):\n    if s[i] == \"G\":\n        g1 += 1\n    else:\n        g2 = g1\n        g1 = 0\n        \n    num = g1  + g2\n    if num2 != num:\n        num+=1\n    ans = max(ans,num)\nprint(min(n,ans))", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn = ii()\ns = input().strip()\n\ng = []\ni = 0\nlng = 0\nwhile i < n:\n    if s[i] == 'S':\n        i += 1\n        continue\n    j = i + 1\n    while j < n and s[j] == 'G':\n        j += 1\n    g.append((i, j))\n    lng = max(lng, j - i)\n    i = j + 1\n\nif not g:\n    ans = 0\nelif len(g) == 1:\n    ans = lng\nelse:\n    extra = len(g) > 2\n    ans = lng + 1\n    for i in range(len(g) - 1):\n        s, e = g[i]\n        s2, e2 = g[i + 1]\n        if s2 != e + 1:\n            continue\n        ans = max(ans, e - s + e2 - s2 + extra)\nprint(ans)\n", "n = int(input())\ns = input()\n\ngolden_sub = s.split('S')\nnG = 0\nfor c in s:\n\tif c == 'G':\n\t\tnG += 1\n\nt = len(golden_sub)\nif t == 1:\n\tprint(len(golden_sub[0]))\nelse:\n\tans = 0\n\tfor i in range(t - 1):\n\t\tl1 = len(golden_sub[i])\n\t\tl2 = len(golden_sub[i + 1])\n\t\tif l1 + l2 < nG:\n\t\t\tans = max(ans, l1 + l2 + 1)\n\t\telse:\n\t\t\tans = max(ans, l1 + l2)\n\tprint(ans)\n", "from itertools import groupby as gb\nn = int(input())\ns = input()\ng = gb(s)\ngl = []\nfor k,v in g:\n    gl.append([k,len(list(v))])\nl = len(gl)\n\nif s[0]=='S':\n    if l==1:\n        print(0)\n        return\n    elif l<=3:\n        print(gl[1][1])\n        return\nif s[0]=='G':\n    if l<=2:\n        print(gl[0][1])\n        return\n\nres = 0\n# 1\nfor i,[k,v] in enumerate(gl):\n    if (k,v) == ('S',1) and i not in (0,l-1):\n        if s[0]=='S' and l<=5:\n            res = max(res, gl[i-1][1]+gl[i+1][1])\n        elif s[0]=='G' and l<=4:\n            res = max(res, gl[i-1][1]+gl[i+1][1])\n        else:\n            res = max(res, gl[i-1][1]+gl[i+1][1] + 1)\n# 2\nfor i,[k,v] in enumerate(gl):\n    if (k) == ('S') and v > 1:\n        if i != 0:\n            res = max(res, gl[i-1][1] + 1)\n        if i != l-1:\n            res = max(res, gl[i+1][1] + 1)\nprint(res)\n", "n=int(input())\ns=str(input())\nlast_seq=0\ncurr_seq=0\nans=0\ngcount=0\ni=0\nwhile i<n-1:\n    if s[i]=='G':\n        gcount+=1\n        curr_seq+=1\n        i+=1\n    else:\n        if curr_seq+last_seq>ans:\n            ans=curr_seq+last_seq\n        if s[i+1]=='G':\n            #gcount+=1\n            last_seq=curr_seq\n            curr_seq=0\n            i+=1\n        else:\n            if curr_seq>ans:\n                ans=curr_seq\n            curr_seq=0\n            last_seq=0\n            i+=2\nif s[-1]=='G':\n    gcount+=1\n    curr_seq+=1\nif curr_seq+last_seq>ans:\n    ans=curr_seq+last_seq\n#print(gcount,ans)\nif gcount>ans:\n    print(ans+1)\nelse:\n    print(ans)\n", "n = int(input())\nseq = input().replace(' ', '')\nnGTotal = seq.count('G')\nnGCur = 0\nright = -1\nresult = 0\nfor left in range(n):\n    if right < left:\n        right = left - 1\n        nGCur = 0\n    while right + 1 < n and ((seq[right + 1] == 'G' and (right - left + 1 - nGCur == 0 or nGCur + 2 <= nGTotal)) or (seq[right + 1] == 'S' and right + 1 - left + 1 - nGCur <= 1 and nGCur + 1 <= nGTotal)):\n        right += 1\n        if seq[right] == 'G':\n            nGCur += 1\n    result = max(right - left + 1, result)\n    if seq[left] == 'G':\n        assert right >= left\n        nGCur -= 1\nprint(result)\n", "n=int(input())\ns=input()\na=[]\nk=1\nfor i in range(n-1):\n    if s[i]=='G' and s[i+1]=='G':\n        k+=1\n    elif s[i]=='G' and s[i+1]=='S':\n        a.append([i,k])\n        k=1\nif s[-1]=='G':\n    a.append([n-1,k])\nif len(a)==0:\n    print(0)\nelif len(a)==1:\n    print(a[0][1])\nelif len(a)==2:\n    ma=0\n    for i in a:\n        ma=max(i[1],ma)\n    ka=0\n    for i in range(len(a)-1):\n        if (a[i+1][0]-a[i+1][1]+1)-a[i][0]==2:\n            ka=max(a[i][1]+a[i+1][1],ka)\n    if ka>ma+1:\n        print(ka)\n    else:\n        print(ma+1)\nelse:\n    ma=0\n    for i in a:\n        ma=max(i[1],ma)\n    ka=0\n    for i in range(len(a)-1):\n        if (a[i+1][0]-a[i+1][1]+1)-a[i][0]==2:\n            ka=max(a[i][1]+a[i+1][1],ka)\n    print(max(ka,ma)+1)\n", "x = int(input())\ns = input()\n\ncnts = s.count('S')\ncntg = s.count('G')\ncnt=0\nmx2 = -55\nfor i in range(len(s)-1):\n\tif(s[i]=='G' and s[i+1]=='G'):\n\t\tcnt+=1\n\telse:\n\t\tcnt=0\n\tmx2 = max(cnt, mx2)\n\nmx2+=1\n\nls=[]\ns+=\"0\"\ns='0'+s\nfor i in range(1, len(s)):\n\tif(s[i-1]=='G' and s[i]=='S' and s[i+1]=='G'):\n\t\tls.append(i)\n\n\ncnt = 0\nmx=-55\nfor i in range(len(ls)):\n\tc = ls[i]-1\n\twhile(s[c]=='G'):\n\t\tcnt+=1\n\t\tc-=1\n\tc = ls[i]+1\n\twhile(s[c]=='G'):\n\t\tcnt+=1\n\t\tc+=1\n\tmx = max(cnt, mx)\n\tcnt=0\n\nmaxx = max(mx, mx2)\nif(cntg==0):\n\tprint(0)\nelif(cntg>maxx and cnts>0):\n\tprint(maxx+1)\nelse:\n\tprint(maxx)", "n = int(input())\ns = input()\nmax = 0\nl = 0\nhas_s = False\ngs = 0\nfor r in range(n):\n    if s[r] == 'G':\n        gs += 1\n    else:\n        if not has_s:\n            has_s = True\n        else:\n            while s[l] == 'G':\n                l += 1\n            l += 1\n    if r-l+1 > max:\n        max = r-l+1\nans = max\nif gs < max:\n    ans -= 1\n\nprint(ans)", "n = int( input() )\ns = input() + 'SS'\n\nd = []\nsilv = 0\ngold = 0\nl = []\nfor c in s:\n    if c == 'G':\n        gold += 1\n        silv = 0\n    else:\n        silv += 1\n        if silv > 1 and len( l ) > 0:\n            d.append(l)\n            l = []\n        if gold > 0:\n            l.append( gold )\n        gold = 0\n\n\n\nif len( d ) == 0:\n    print( 0 )\nelif len( d ) == 1:\n    l = d[ 0 ]\n    if len( l ) == 1 :\n        print( l[ 0 ] )\n    elif len( l ) == 2:\n        print( sum( l ) )\n    else:\n        m = 0\n        last = 0\n        for i in l:\n            m = max(m, last + i + 1 )\n            last = i\n        print( m )\nelse:\n    m = 0\n    for l in d:\n        last = 0\n        for i in l:\n            m = max(m, last + i + 1 )\n            last = i\n    print( m )\n", "import sys\nfrom math import ceil, sqrt\n\ninput = sys.stdin.readline\n\nn = int(input())\ns = input().strip()\n\nlast = \"S\"\nans = []\ncount = 0\nfreq = {'S': 0, 'G': 0}\n\nfor i in range(n):\n    freq[s[i]] += 1\n    if s[i] != last:\n        ans.append((count, last))\n        last = s[i]\n        count = 1\n    else:\n        count += 1\nans.append((count, last))\nans.pop(0)\n\nif freq['G'] == 0:\n    print(0)\n    return\n\nfinal = max([x[0] for x in ans if x[1] == 'G'])\nif freq['G'] > final:\n    final += 1\n\nfor i in range(len(ans) - 2):\n    if ans[i][1] == 'G' and ans[i+1][1] == 'S' and ans[i+1][0] == 1 and ans[i+2][1] == 'G':\n        if freq['G'] > ans[i][0] + ans[i+2][0]:\n            final = max(final, ans[i][0] + ans[i+2][0] + 1)\n        else:\n            final = max(final, ans[i][0] + ans[i+2][0])\nprint(final)", "n=int(input())\ns=input()\na=[0]*100005\nans,maxn=0,0\n\nfor i in range(0,n):\n    if(s[i]=='G'):\n        if i==0:\n            a[0]=1\n        else:\n            a[i]=a[i-1]+1\n        maxn=max(maxn,a[i])\n        ans+=1\nfor i in range(n-2,-1,-1):\n    if (s[i] == 'G'):\n        a[i]=max(a[i],a[i+1])\nfor i in range(0,n):\n    if(i>0 and i <n-1 and s[i]=='S' and s[i-1]=='G'and s[i+1]=='G'and a[i-1]+a[i+1]!=ans):\n        maxn=max(maxn,a[i-1]+a[i+1]+1)\n        continue\n    if (i > 0 and i < n - 1 and s[i] == 'S' and s[i - 1] == 'G' and s[i + 1] == 'G'):\n        maxn = max(maxn, a[i - 1] + a[i + 1])\n        continue\n    if(s[i]=='G' and a[i]!=ans):\n        maxn=max(maxn,a[i]+1)\nprint(maxn)", "3.5\n\nN = int(input())\nA = input()\n\nL = []\ncpt = 1\nret = 0\n\nfor i in range(1, len(A)):\n    if A[i] == A[i-1]:\n        cpt += 1\n    else:\n        L.append(cpt)\n        if A[i] == \"S\":\n            ret = max(ret, cpt)\n            \n        cpt = 1\n\nL.append(cpt)\nif A[-1] == \"G\":\n    ret = max(ret, cpt)\n\nif ret == 0:\n    print(\"0\")\n    return\n\nif A[0] == \"G\":\n    cur = True\nelse:\n    cur = False\n\nfor i in range(0, len(L)):\n    if not cur:\n        if L[i] == 1 and (i+3 < len(L) or i-3 >= 0):\n            new = 1\n            if i > 0:\n                new += L[i-1]\n            if i < len(L)-1:\n                new += L[i+1]\n\n            ret = max(ret, new)\n\n        if L[i] == 1 and i > 0 and i < len(L)-1:\n            ret = max(ret, L[i-1] + L[i+1])\n                \n        if i > 0 and i+1 < len(L):\n            ret = max(ret, L[i-1]+1)\n\n        if i < len(L)-1 and i-1 >= 0:\n            ret = max(ret, L[i+1]+1)\n    \n    cur = not cur\n\nprint(ret)\n", "def solve():\n    n = int(input())\n    s = input()\n    l = []\n    g_seg, s_seg = 0, 0\n    g_count = 0\n    for i in range(n):\n        if s[i] == 'S':\n            if g_seg:\n                g_count += 1\n                l.append((\"G\", g_seg))\n                g_seg = 0\n            s_seg += 1\n        else:\n            if s_seg:\n                l.append((\"S\", s_seg))\n                s_seg = 0\n            g_seg += 1\n    if g_seg:\n        l.append((\"G\", g_seg))\n        g_count += 1\n    # print(l)\n    if not g_count:\n        return 0\n    if len(l) == 1:\n        return l[0][1]\n    elif len(l) == 2:\n        return l[1][1]\n    if g_count == 2:\n        ans = 0\n        for i in range(len(l) - 2):\n            if l[i][0] == 'G':\n                if l[i + 1][1] == 1:\n                    ans = max(ans, l[i][1] + l[i + 2][1])\n                else:\n                    ans = max(ans, l[i][1] + 1, l[i + 2][1] + 1)\n        return ans\n    else:\n        ans = 0\n        for i in range(len(l) - 2):\n            if l[i][0] == 'G':\n                if l[i + 1][1] == 1:\n                    ans = max(ans, l[i][1] + 1 + l[i + 2][1])\n                else:\n                    ans = max(ans, l[i][1] + 1, l[i + 2][1] + 1)\n        return ans\n\n\nprint(solve())", "n=int(input())\ns=input()\nans=0\nsc,gc,pi,ci=0,0,-1,-1\nfor i in range(1,n+1):\n\tif s[i-1]=='G':\n\t\tgc+=1\n\telse:\n\t\tsc+=1\n\t\tif pi==-1:\n\t\t\tans=max(ans,i-1)\n\t\telse:\n\t\t\tans=max(ans,i-1-pi)\n\t\tpi=ci\n\t\tci=i\n\t#print(ans)\n#print(gc,sc)\nif sc==1:\n\tprint(n-1)\n\treturn\nif sc==2 and (s[0]=='S' or s[n-1]=='S'):\n\tprint(n-2)\n\treturn\n\nif pi==-1:\n\tans=max(ans,n)\nelse:\n\tans = max(ans,n-pi)\n\nprint(min(ans,gc))\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[ ]:\n\n\n\nimport math\n\n\n# In[5]:\n\n\nn=int(input())\ndata= list(input())\n\n\n# In[21]:\n\n\nfirstsilver=-1\nsecondsilver=-1\nmdiff=[-1,-1,-1]\n\nfor i in range(0,n):\n    if data[i]=='S' and secondsilver==-1:\n        secondsilver=i\n    elif data[i]==\"S\":\n        firstsilver=secondsilver\n        secondsilver=i\n    diff=i-firstsilver\n    if diff>mdiff[0]:\n        mdiff=[diff,firstsilver,i,secondsilver]\n\n#print(mdiff)        \n        \n\n\n# In[22]:\n\nif mdiff[1]==mdiff[3]:\n    penalty=0\nelse:\n    penalty=1\n    \nfor i in range(0,n):\n    if i not in list(range(mdiff[1]+1,mdiff[2]+1)):\n        if data[i]=='G':\n            penalty=0\n\n\n# In[23]:\n\n\nprint(mdiff[0]-penalty)\n\n\n# In[ ]:\n", "def longestSubSeg(a, n):\n    cnt0 = 0\n    l = 0\n    max_len = 0;\n    ctG=0\n    # i decides current ending point\n    for i in range(0, n):\n        if a[i] == 'S':\n            cnt0 += 1\n        if a[i] =='G':\n            ctG+=1\n        while (cnt0 > 1):\n            if a[l] == 'S':\n                cnt0 -= 1\n            l += 1\n\n        max_len = max(max_len, i - l + 1);\n    if max_len>ctG:\n        return max_len-1\n    return max_len\nn=int(input())\na=list(input())\nprint(longestSubSeg(a,n))", "def mi():\n\treturn list(map(int, input().split()))\n'''\n10\nGGGSGGGSGG\n'''\nn = int(input())\ns = list(input())\nfor i in range(n):\n\tif s[i]=='G':\n\t\ts[i] = 1\n\telse:\n\t\ts[i] = 0\na = []\ni = 0\nwhile i<n:\n\tif s[i]==1:\n\t\tc = 0\n\t\tzc = 0\n\t\tpz = -1\n\t\twhile i<n and zc <=1:\n\t\t\tif s[i]==1:\n\t\t\t\tc+=1\n\t\t\telse:\n\t\t\t\tzc+=1\n\t\t\t\tif zc==1:\n\t\t\t\t\tpz = i\n\t\t\ti+=1\n\t\ta.append(c)\n\t\tif pz!=-1:\n\t\t\ti = pz\n\telse:\n\t\ti+=1\nif len(a)>1:\n\tans = max(a)+1\n\tif ans>s.count(1):\n\t\tprint(s.count(1))\n\telse:\n\t\tprint(max(a)+1)\nelif len(a)==1:\n\tprint(a[0])\nelse:\n\tprint(0)\n", "n =int(input())\ncups = input()\n\ndef maxlength(cups):\n    length = 0\n    for i in cups:\n        if i == 'G':\n            length =  length + 1\n    return length\n  \nll = cups.split('S')\nthemax = maxlength(cups)\nmaxl = 0\nlength =0\nfor i in range(len(ll)):\n    if len(ll[i])>0 and length > 0:\n        length = len(ll[i]) + length\n        if length >maxl :\n            maxl = length\n        length = len(ll[i])\n    if length == 0 or len(ll[i]) ==0:\n        length = len(ll[i])\n    if length> maxl and length<=themax:\n        maxl = length\nif maxl < themax:\n    maxl  = maxl + 1\nprint(maxl)"]