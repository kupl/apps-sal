["\"\"\"\nCodeforces Contest 288 Div 2 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    n = read(0)\n    ld = int(n[-1])\n    last = -1\n    for i in range(len(n)-1):\n        c = int(n[i])\n        if c%2 == 0 and c < ld:\n            return n[:i] + n[-1] + n[i+1:-1] + n[i]\n        if c%2 == 0:\n            last = i\n    if last == -1:\n        return -1\n    return n[:last] + n[-1] + n[last+1:-1] + n[last]\n\n\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "arr = []\nfor i in input():\n    arr.append(int(i))\nans1 = -1\nn = len(arr)\nfor i, x in enumerate(arr):\n    if x % 2 == 0:\n        ans1 = i\nif ans1 == -1:\n    print(-1)\nelse:\n    ans2 = -1\n    for i in range(len(arr) - 1, -1, -1):\n        if arr[i] % 2 == 0 and arr[i] < arr[len(arr) - 1]:\n            ans2 = i\n    if ans2 == -1:\n        arr[n - 1], arr[ans1] = arr[ans1], arr[n - 1]\n    else:\n        arr[n - 1], arr[ans2] = arr[ans2], arr[n - 1]\n    for i in arr:\n        print(i, end = '')", "a = [i for i in input()]\ngod = False\nfor i in range(len(a)):\n    if int(a[i])%2==0:\n        god = True\n        if int(a[i])<=int(a[-1]):\n            a[i], a[-1] = a[-1], a[i]\n            print(''.join(a))\n            quit()\nif not god:\n    print(-1)\n    quit()\nif god:\n    for i in range(len(a)-1, -1, -1):\n        if int(a[i])%2==0:\n            a[i], a[-1] = a[-1], a[i]\n            print(''.join(a))\n            quit()\n", "import sys\nimport math\n\ns = input()\ns = list(s)\n\nfor i in range(len(s)):\n    if int(s[i]) % 2 == 0 and s[i] < s[-1]:\n        s[i], s[-1] = s[-1], s[i]\n        print(\"\".join(s))\n        return\n\nfor i in range(len(s) - 1, -1, -1):\n    if int(s[i]) % 2 == 0:\n        s[i], s[-1] = s[-1], s[i]\n        print(\"\".join(s))\n        return\n\nprint(-1)", "x = input()\n\npos = -1\nlast = ord(x[-1]) - 48\nfor i, c in enumerate(x):\n    cur = ord(c) - 48\n    if not cur & 0b1:\n        pos = i\n        if last > cur:\n            print(x[:i] + x[-1] + x[i+1:-1] + x[i])\n            break\nelse:\n    if pos != -1:\n        print(x[:pos] + x[-1] + x[pos + 1:-1] + x[pos])\n    else:\n        print(-1)\n", "def main():\n    strnum = input()\n    odd = int(strnum[-1])\n    maxpos = -1\n    minpos = -1\n    l = len(strnum)\n    for i in range(l):\n        d = int(strnum[i])\n        if d % 2 == 0:\n            if d < odd:\n                maxpos = i\n                break\n            else:\n                minpos = i\n\n    if maxpos > -1:\n        for i in range(l):\n            if i == maxpos:\n                print(odd, end=\"\")\n            elif i == l-1:\n                print(strnum[maxpos])\n            else:\n                print(strnum[i], end=\"\")\n    elif minpos > -1:\n        for i in range(l):\n            if i == minpos:\n                print(odd, end=\"\")\n            elif i == l-1:\n                print(strnum[minpos])\n            else:\n                print(strnum[i], end=\"\")\n    else:\n        print(-1)\n\n\nmain()\n", "import math\nimport sys\n\ndebug = False\n\nif debug:\n    fin = open('input.txt', 'r')\n    fout = open('output.txt', 'w')\nelse:\n    fin = sys.stdin\n    fout = sys.stdout\n\ns = fin.readline()[:-1]\na = '-1'\nn = len(s)\nj = -1\nfor i in range(len(s)):\n    if int(s[i]) % 2 == 0:\n        if j == -1:\n            j = i\n        elif s[j] > s[-1]:\n            j = i\n\nif j > -1:\n    a = s[0:j] + s[-1] + s[j+1:-1] + s[j]\nfout.write(a)\n\n", "s = list(input())\nd = int(s[-1])\n\nlast_pos = None\n\nfor i, x in enumerate(s[:-1]):\n    if int(x) % 2 == 0:\n        if int(x) < d:\n            s[i] = str(d)\n            s[-1] = x\n            last_pos = None\n            print(''.join(s))\n            break\n        elif int(x) != d:\n            last_pos = i\nelse:\n    if last_pos is None:\n        print('-1')\n    else:\n        t = s[last_pos]\n        s[last_pos] = s[-1]\n        s[-1] = t\n        print(''.join(s))", "n = list(input())\nf = False\nfrst = -10 ** 7\nfor i in range(len(n)):\n    if int(n[i]) % 2 == 0:\n        frst = max(i, frst)\n        if int(n[i]) < int(n[-1]):\n            n[i], n[-1] = n[-1], n[i]\n            f = True\n            break\nif not f and frst != -10 ** 7:\n    n[frst], n[-1] = n[-1], n[frst]\n    f = True\nprint(''.join(n) if f else '-1')\n", "def ans():\n    ap= list(input())\n    #b= a[::-1]\n    a= [int(i) for i in ap]\n    ans= []\n    kkk= -1\n    for i in range(len(a)):\n        if a[i]%2== 0:\n            kkk= i\n            if a[-1]> a[i]:\n                ap[-1], ap[i]= ap[i], ap[-1]\n                print(\"\".join(ap))\n                return\n    \n    \n    if kkk!= -1:\n        ap[kkk], ap[-1]= ap[-1], ap[kkk]\n        print(\"\".join(ap))\n        return\n    print(-1)\n    \n    return\n\nans()      ", "N = input()\nif not('0' in N or '2' in N or '4' in N or '6' in N or '8' in N):\n    print(-1)\n    return\nsmalls = [i for i in '02468'[:(int(N[-1])+1)//2]]\nbigs = [i for i in '02468'[(int(N[-1])+1)//2:]]\n\nfor i in range(len(N)):\n    if N[i] in smalls:\n        N = N[:i]+N[-1]+N[i+1:-1]+N[i]\n        print(N)\n        return\nfor i in range(len(N))[::-1]:\n    if N[i] in bigs:\n        N = N[:i]+N[-1]+N[i+1:-1]+N[i]\n        print(N)\n        return", "s = input()\nmax = len(s) - 1\nfor i in range(len(s) - 1, -1, -1):\n    if int(s[i]) % 2 == 0 and (s[-1] > s[i] or max == len(s) - 1):\n        max = i\nif max == len(s) - 1:\n    print(-1)\nelse:\n    print(s[:max] + s[-1] + s[max + 1 : -1] + s[max])\n", "N = input()\n\narr = []\nfor i in range( 0 , len(N)-1):\n    if int(N[i])%2 == 0:\n        arr.append( {\"index\":i , \"num\":N[i]} )\n#print(arr)\n\nif len(arr) == 0:\n    print(\"-1\")\nelse:\n    lastIndex = len(N) - 1  \n    lastNum = N[len(N)-1]\n    resIndex = -1\n    resNum = -1\n    for numDict in arr:\n        if int(numDict[\"num\"]) < int(lastNum):\n            resIndex = numDict[\"index\"]\n            resNum = numDict[\"num\"]\n            break\n    if resIndex == -1:\n        resIndex = arr[len(arr)-1][\"index\"]\n        resNum = arr[len(arr)-1][\"num\"]\n\n    print( N[0:resIndex] + lastNum + N[resIndex+1:lastIndex] + resNum )\n    \n", "n = input()\np = \"-1\"\ns=0\nfor i in range(0,len(n)-1):\n    if int(n[i])%2==0 and int(n[i])<int(n[len(n)-1]):\n        k = n[i]\n        s=1\n        p=n[0:i]+n[len(n)-1]+n[i+1:len(n)-1]+k\n        break\nif s!=1:\n    for i in range(len(n)-1, -1,-1):\n        if int(n[i])%2==0:\n            k = n[i]\n            p=n[0:i]+n[len(n)-1]+n[i+1:len(n)-1]+k\n            break\nprint(p)\n", "def main():\n\tn = input()\n\tl = len(n)\n\tans = -1\n\tm = -1\n\tfor i in range(l):\n\t\t\n\t\tif int(n[i])%2 == 0 :\n\t\t\tans = i\n\n\t\t\tif int(n[l-1]) > int(n[i]):\n\t\t\t\tm = i\n\t\t\t\tbreak\n\n\tif ans == -1:\n\t\tprint(-1)\n\telse:\n\t\tif m != -1:\n\t\t\tans = m\n\t\tk = list(n)\n\t\tk[l-1], k[ans] = k[ans], k[l-1]\n\t\tprint(\"\".join(k))\n\n\t\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()", "num = input()\n\nres = '-1'\nl = len(num)\na = int(num[l - 1])\nn =[]\nfor i in range(l):\n    n.append(num[i])\n\nflag = 1\n\ni = 0\nwhile flag and i < l:\n    if int(num[i]) % 2 == 0 and int(num[i]) < a:\n         n[l - 1] = n[i]\n         n[i] = str(a)\n         flag = 0\n         s = ''.join(n)\n         res = s\n    i += 1     \n\ni = l - 1\nwhile flag and i >= 0 :\n    if int(num[i]) % 2 == 0:\n        n[l - 1] = n[i]\n        n[i] = str(a)\n        flag = 0\n        s = ''.join(n)\n        res = s\n    i -= 1\nprint(res)\n", "def main():\n    l = list(input())\n    a = l[-1]\n    l.append('8')\n    mask = {'9': ('0', '2', '4', '6', '8'),\n            '7': ('0', '2', '4', '6'),\n            '5': ('0', '2', '4'),\n            '3': ('0', '2',),\n            '1': ('0')}[a]\n    for i, b in enumerate(l):\n        if b in mask:\n            if i < len(l) - 1:\n                del l[-1]\n                l[i], l[-1] = a, b\n                print(''.join(l))\n                return\n    for i in range(len(l) - 2, -2, -1):\n        b = l[i]\n        if b in ('0', '2', '4', '6', '8'):\n            if i != -1:\n                del l[-1]\n                l[i], l[-1] = a, b\n                print(''.join(l))\n                return\n    print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "b = str(input())\nmaxval = str(-1)\nlol = int(b[-1])\n\nfor i in range(len(b)):\n\tif (b[i] == \"0\" or b[i] == \"2\" or b[i] == \"4\" or b[i] == \"6\" or b[i] == \"8\") and (int(b[i]) < lol):\n\t\tc = b[:i] + b[len(b)-1] + b[i+1:len(b)-1] + b[i]\n\t\tmaxval = max(maxval, c)\n\t\tbreak\n\nfor i in range(len(b)-1,-1,-1):\n\tif (b[i] == \"0\" or b[i] == \"2\" or b[i] == \"4\" or b[i] == \"6\" or b[i] == \"8\") and (int(b[i]) > lol):\n\t\td = b[:i] + b[len(b)-1] + b[i+1:len(b)-1] + b[i]\n\t\tmaxval = max(maxval, d)\n\t\tbreak\n\nprint(maxval)", "n=input()\ndigs=[]\nedigs=[]\nfor i in range(len(n)):\n    digs.append(int(n[i]))\n    if int(n[i])%2==0:\n        edigs.append([int(n[i]),i])\nif len(edigs) is 0:\n    print(-1)\nelse:\n    cool=len(edigs)\n    for i in range(len(edigs)):\n        if edigs[i][0]<digs[-1]:\n            cool=min(cool,i)\n    if cool == len(edigs):\n        digs[edigs[-1][1]]=digs[-1]\n        digs[-1]=edigs[-1][0]\n    else:\n        digs[edigs[cool][1]]=digs[-1]\n        digs[-1]=edigs[cool][0]\n    ans=''\n    for element in digs:\n        ans+=str(element)\n    print(ans)", "n = list(input())\nm = -1\nfor i, d in enumerate(n):\n\tif int(d) % 2 == 0:\n\t\tm = i\n\t\tif int(d) < int(n[-1]):\n\t\t\tbreak\nif m < 0:\n\tprint(-1)\nelse:\n\tn[-1], n[m] = n[m], n[-1]\n\tprint(''.join(n))\n", "a = list(input())\nreach = False\nlastnum = -1\nlast = int(a[-1])\nfor x in range(len(a)):\n    if int(a[x]) % 2 == 0 and int(a[x]) < last:\n        reach = True\n        b = a[:]\n        b[-1] = a[x]\n        b[x] = a[-1]\n        print(''.join(b))\n        break\n    elif int(a[x]) % 2 == 0:\n        lastnum = x\n        \nif not(reach):\n    if lastnum == -1:\n        print(-1)\n    else:\n        x = lastnum\n        b = a[:]\n        b[-1] = a[x]\n        b[x] = a[-1]\n        print(''.join(b))\n", "n = input()\nmax = -1\ntemp = \"-1\"\nfor i in range(len(n)):\n    if int(n[i]) % 2 == 0 and int(n[i]) < int(n[-1]):\n        temp = n[0:i]+n[-1]+n[i+1:len(n)-1] + n[i]\n        break\nif temp ==\"-1\":\n    for i in range(len(n)-2, -1, -1):\n        if int(n[i]) % 2 == 0:\n            temp = n[0:i]+n[-1]+n[i+1:len(n)-1] + n[i]\n            break\nprint(temp)", "n = input()\nflag = False\nlast = int(n[-1])\nfor i in range(len(n)):\n\tif int(n[i]) % 2 == 0:\n\t\tif last > int(n[i]):\n\t\t\tflag = True\n\t\t\tprint(n[:i] + str(last) + n[i + 1:-1] + n[i])\n\t\t\tbreak\nif flag is False:\n\tfor i in range(len(n) - 1, -1, -1):\n\t\tif int(n[i]) % 2 == 0:\n\t\t\tflag = True\n\t\t\tprint(n[:i] + str(last) + n[i + 1:-1] + n[i])\n\t\t\tbreak\nif flag == False:\n\tprint(-1)", "raw=input()\nraw=list(raw)\nraw=[int(x) for x in raw]\nflag=0\nlst=[]\n\n\nfor x in raw:\n    if (x % 2 == 0) :\n        flag=1\n        lst.append(x)\n\nif flag==1:\n    \n    lst=sorted(lst)\n    l=raw[-1]\n    if (lst[0]>l):\n        for x in reversed(raw):\n            if (x % 2 == 0) :\n                \n                    s=x\n                    break\n        i=[i for i, x in enumerate(raw) if x == s]\n        \n        raw[i[-1]]=l\n        \n        raw[-1]=s\n        raw=[str(x) for x in raw]\n        print(\"\".join(raw))\n    else:\n        for x in raw:\n            if (x % 2 == 0) :\n                if x<l:\n                    s=x\n                    break\n        raw[-1]=s\n        raw[raw.index(s)]=l\n        raw=[str(x) for x in raw]\n        print(\"\".join(raw))\n\n\nelse:\n    \n    print(-1)\n", "def judge(ss):\n    n=len(ss)\n    for i in range(n):\n        if( (int(ss[i])%2==0) ):  #input() haoxiang doushi str\n            return i\n    return -1\n\ns=input()\np=judge(s)\n#print(p)\nif(p==-1):\n    print(\"-1\")\nelse:\n    n=len(s)\n    flag=0\n    las=n-1\n    for i in range(n):\n        if( int(s[i])%2==0 ):\n            p=i\n            if int(s[i])<int(s[las]) :\n                temp=s[0:i]+s[las]+s[i+1:n-1]+s[i]\n                print(temp)\n                flag=1\n                break;\n\n    if not flag :\n        temp=s[0:p]+s[las]+s[p+1:n-1]+s[p]\n        print(temp)\n\n"]