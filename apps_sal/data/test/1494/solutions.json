["s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n", "s, p = input(), input()\nn, m = len(s) + 1, len(p)\nd = [[0] * n for t in range(n)]\nfor x in range(1, n):\n    i, j = x, m\n    while i and j:\n        j -= s[i - 1] == p[j - 1]\n        i -= 1\n    if not j:\n        for y in range(i + 1): d[x][y + x - i - m] = d[i][y] + 1\n    for y in range(x): d[x][y] = max(d[x][y], d[x - 1][y])\nprint(*d[-1])\n"]