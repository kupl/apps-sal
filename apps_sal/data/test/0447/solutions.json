["#!/usr/bin/env python3\n\n\n\ndef addmod(left, right, modulo=1000000007):\n    res = left + right\n    if res >= modulo:\n        res -= modulo\n    return res\n\ndef counter(a, m, d):\n    res = [0, ] * (2*m)\n    res[0] = 1\n    shift = 1\n    for pos in range(len(a), 0, -1):\n        ptype = pos & 1\n        cur = int(a[pos-1])\n        tres = [0, ] * (2*m)\n        for i in range(10):\n            if ptype==1 and i == d:\n                continue\n            if ptype==0 and i != d:\n                continue\n            k = (i * shift) % m\n            for j in range(m):\n                k2 = k*2\n                j2 = j*2\n                if i < cur:\n                    tres[k2+0] = addmod(tres[k2+0], addmod(res[j2+0], res[j2+1]))\n                elif i == cur:\n                    tres[k2+0] = addmod(tres[k2+0], res[j2+0])\n                    tres[k2+1] = addmod(tres[k2+1], res[j2+1])\n                else:\n                    tres[k2+1] = addmod(tres[k2+1], addmod(res[j2+0], res[j2+1]))\n                k = k+1 if k+1<m else 0\n        res = tres\n        shift = (shift * 10) % m\n    return res[0]\n\n\ndef solver(ifs):\n    m, d = list(map(int, ifs.readline().split()))\n    a = ifs.readline().strip()\n    b = ifs.readline().strip()\n    res = counter(b, m, d)\n    if a != '0':\n        a = str(int(a) - 1)\n        if len(a) < len(b):\n            a = '0' + a\n        modulo = 1000000007\n        res = addmod(res, modulo - counter(a, m, d))\n    print(res)\n\ndef main():\n    import sys\n    if sys.version_info.major == 3:\n        from io import StringIO as StreamIO\n    else:\n         from io import BytesIO as StreamIO\n    \n    with StreamIO(sys.stdin.read()) as ifs, StreamIO() as ofs:\n        _stdout = sys.stdout\n        sys.stdout = ofs\n        solver(ifs)\n        sys.stdout = _stdout\n        sys.stdout.write(ofs.getvalue())\n    return 0\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nm, d = list(map(int, input().split()))\nmod = 10**9 + 7\n\n\ndef solve(a: list):\n    dp = [0]*m\n    border = a[0] % m if a[0] != d else -1\n    m10 = 10 % m\n\n    for i in range(a[0]):\n        if i != d:\n            dp[i % m] += 1\n\n    for i, digit in enumerate(a[1:], start=1):\n        next_dp = [0]*m\n\n        if i & 1:\n            t = d % m\n            for j in range(m):\n                next_dp[t] += dp[j]\n                t = t + m10 if t + m10 < m else t + m10 - m\n\n            if border != -1:\n                if d < digit:\n                    next_dp[(border * 10 + d) % m] += 1\n                    border = -1\n                elif d == digit:\n                    border = (border * 10 + d) % m\n                else:\n                    border = -1\n        else:\n            for j in range(m):\n                if dp[j] == 0:\n                    continue\n                if dp[j] >= mod:\n                    dp[j] -= mod\n\n                t = (j * 10 - 1) % m\n                for k in range(10):\n                    t += 1\n                    if t == m:\n                        t = 0\n                    if k == d:\n                        continue\n                    next_dp[t] += dp[j]\n                    if next_dp[t] >= mod:\n                        next_dp[t] -= mod\n\n            if border != -1:\n                for k in range(digit):\n                    if k == d:\n                        continue\n                    next_dp[(border * 10 + k) % m] += 1\n                if digit != d:\n                    border = (border * 10 + digit) % m\n                else:\n                    border = -1\n\n        dp = next_dp\n\n    return dp[0] + (1 if border == 0 else 0)\n\n\na = list(map(int, input()))\nb = list(map(int, input()))\na[-1] -= 1\n\nfor i in range(len(a)-1, 0, -1):\n    if a[i] < 0:\n        a[i] = 9\n        a[i-1] -= 1\n    else:\n        break\n\nans = solve(b) - solve(a)\nprint(ans % mod)\n"]