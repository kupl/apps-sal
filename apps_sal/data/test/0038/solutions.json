["def main():\n\tn, l = map(int, input().split())\n\n\tx = list(map(int, input().split()))\n\ty = list(map(int, input().split()))\n\n\tx.append(x[0] + l)\n\ty.append(y[0] + l)\n\n\ta = [x[i + 1] - x[i] for i in range(n)]\n\tb = [y[i + 1] - y[i] for i in range(n)]\n\n\tfor i in range(n):\n\t\tif (a == b[i:] + b[:i]):\n\t\t\tprint(\"YES\")\n\t\t\treturn\n\tprint(\"NO\")\n\n\nmain()", "import math, re, itertools as it;prime = lambda n: len([i for i in range(2, int(math.sqrt(n) + 1)) if n % i == 0]) == 0;gcd = lambda a, b: gcd(b, a % b) if b else a;fact = lambda x: x * fact(x - 1) if x else 1;bino = lambda n, k: fact(n) / fact(k) / fact(n - k);fib11 = lambda n: 1 if n < 2 else fib11(n - 1) + fib11(n - 2);fib01 = lambda n: 0 if n == 0 else 1 if n == 1 else fib01(n - 1) + fib01(n - 2);sumofd = lambda x: x if x < 10 else sumofd(x // 10) + x % 10\n\nn, l = map(int, input().split(' '))\nk = list(map(int, input().split()))\ns = list(map(int, input().split()))\nf = False\nfor i in range(l):\n\tfor j in range(len(k)):\n\t\tk[j] -= 1\n\t\t\n\t\tif k[j] < 0:\n\t\t\tk[j] = l - 1\n\tk.sort()\n\tif k == s:\n\t\tf = True\nprint('YES' if f else 'NO')", "def calc_distances(points):\n    distances = [0] * n\n    for i in range(n):\n        dist = points[i] - points[i - 1]\n        if dist < 0:\n            dist += length\n        distances[i] = dist\n    return distances\n\n\ndef rotate(lst, i):\n    return lst[i:] + lst[:i]\n\n\nn, length = list(map(int, input().split()))\na, b = [calc_distances(list(map(int, input().split()))) for i in range(2)]\nfor i in range(n):\n    if b[i] == a[0] and rotate(b, i) == a:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n", "n, l = map(int, input().split())\n\nl1 = [int(x) for x in input().split()]\nl2 = [int(x) for x in input().split()]\n\ns1 = ''\n\nprev = -1\nfor i in range(n):\n\ts1 += '0' * (l1[i] - prev - 1) + '1'\n\tprev = l1[i]\ns1 += '0' * (l - prev - 1)\n\ns2 = ''\n\nprev = -1\nfor i in range(n):\n\ts2 += '0' * (l2[i] - prev - 1) + '1'\n\tprev = l2[i]\ns2 += '0' * (l - prev - 1)\n\ns1 = s1 * 2\n\nif s1.find(s2) != -1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "n,l = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nans1 = [0] * n\nans2 = [0] * n\nfor j in range(n):\n    if j == 0:\n        \n        ans1[j] = A[j] + (l - A[-1-j])\n        ans2[j] = B[j] + (l - B[-1-j])\n    else:\n        ans1[j] = A[j] - A[j-1]\n        ans2[j] = B[j] - B[j-1]\nper = 0\nfor j in range(n):\n    if ans1 == ans2:\n        per = 1\n        break\n    else:\n        s = ans1[0]\n        ans1 = ans1[1:]\n        ans1.append(s)\nif per == 1:\n    print('YES')\nelse:\n    print('NO')", "def track(tr):\n    res = [l - tr[-1] + tr[0]]\n    for i in range(1, n):\n        res.append(tr[i] - tr[i - 1])\n    return res\n\ndef equals(l1, l2):\n    for i in range(n):\n        res = True\n        for k in range(n):\n            res = res and l1[k] == l2[(k + i) % n]\n        if res:\n            return True\n    return False\n\nn, l = list(map(int, input().split()))\na = track(list(map(int, input().split())))\nb = track(list(map(int, input().split())))\nif equals(a, b):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, l = list(map(int, input().split()))\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = [0] * n\nd = [0] * n\nfor i in range(n-1):\n    c[i] = a[i+1] - a[i]\nc[n-1] = l - sum(c)\n\nfor i in range(n-1):\n    d[i] = b[i+1] - b[i]\nd[n-1] = l - sum(d)\n\n\n\nf = False\nfor i in range(0, n):\n    if d == c[i:n] + c[:i]:\n        f = True\n        \nif f:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import sys\nN, L = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor shift in range(N):\n    coincide = True\n    diff = b[shift] - a[0]\n    for i in range(1, N):\n        if (a[i] + diff) % L != b[(i + shift) % N]:\n            coincide = False\n            break\n    if coincide:\n        print(\"YES\")\n        return\n\nprint(\"NO\")\n", "n, L = map(int, input().split())\n\nif n == 1:\n\tprint('YES')\n\treturn\n\nfirst = list(map(int, input().split()))\nsecond = list(map(int, input().split()))\n\ndef shift(lst, value):\n\tfor i in range(len(lst)):\n\t\tlst[i] -= value\n\treturn lst\n\ndef equal(lst1, lst2):\n\tfor i in range(len(lst1)):\n\t\tif lst1[i] != lst2[i]:\n\t\t\treturn False\n\treturn True\n\nfirst = shift(first, first[0])\nsecond = shift(second, second[0])\n\nfor i in range(n):\n\tfirst = shift(first, first[1])\n\tfirst = first[1:] + [L + first[0]]\n\tif equal(first, second):\n\t\tprint(\"YES\")\n\t\treturn\n\nprint('NO')", "n, L = tuple(map(int,input().split()))\nkefa = list(map(int,input().split()))\nsasha = list(map(int,input().split()))\n\ndiffsk, diffss = [],[]\n\nfor k in range(n):\n    diffsk.append(kefa[k%n]-kefa[(k-1)%n])\n    diffss.append(sasha[k%n]-sasha[(k-1)%n])\n\nres = False\nfor j in range(n):\n    tmp = True\n    diff = (diffsk[0]-diffss[j])%L\n    for i in range(n):\n        if (diffsk[i]-diffss[(i+j)%n])%L != diff:\n            tmp = False\n    if tmp:\n        res = True\n\nif res:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "def main():\t\n\ttmp = input()\n\ttmp = tmp.split(\" \")\n\tn = int(tmp[0])\n\tl = int(tmp[1])\n\ttmp = input()\n\ttmp = tmp.split(\" \")\n\ta = []\n\tfor i in tmp : a.append(int(i))\n\ttmp = input()\n\ttmp = tmp.split(\" \")\n\tb = []\n\tfor i in tmp : b.append(int(i))\n\ta1 = []\n\tfor i in range(1,len(a)) : a1.append(a[i]-a[i-1])\n\ta1.append(l-a[-1]+a[0])\n\tb1 = []\n\tfor i in range(1,len(b)) : b1.append(b[i]-b[i-1])\n\tb1.append(l-b[-1]+b[0])\n\ttmp = len(a1)\n\tfor i in range(tmp):\n\t\tlol = a1[0]\n\t\ta1.pop(0)\n\t\ta1.append(lol)\n\t\tif (a1 == b1) : \n\t\t\tprint(\"YES\")\n\t\t\treturn 0\n\tprint(\"NO\")\nmain()", "n, l = list(map(int, input().split()))\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\naa = [0] * n\nbb = [0] * n\naa[0] = l - a[-1] + a[0]\nbb[0] = l - b[-1] + b[0]\nfor i in range(1, n):\n    aa[i] = a[i] - a[i - 1]\n    bb[i] = b[i] - b[i - 1]\nfor i in range(n):\n    if aa == bb:\n        print(\"YES\")\n        break\n    aa.append(aa[0])\n    aa.pop(0)\nelse:\n    print(\"NO\")\n", "\n\n\nn, l = list(map(int, input().split()))\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\n\n\nfirst_diff = A[0]\nA = [x - first_diff for x in A]\n\nfirst_diff = B[0]\nB = [x - first_diff for x in B]\n\nfound = False\n\nfor _ in range(n + 2):\n    if A == B:\n        found = True\n\n    B = B[1:] + [B[0] + l]\n    first_diff = B[0]\n    B = [x - first_diff for x in B]\n\n\nif found:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n", "q,w=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=list(map(int,input().split()))\nz=[0]*q\nfor i in range(1,q):\n    z[i]=a[i]-a[i-1]\nz[0]=w-a[q-1]+a[0]\nz=z+z+z\nx=[0]*q\nfor i in range(1,q):\n    x[i]=s[i]-s[i-1]\nx[0]=w-s[q-1]+s[0]\nb=False\nfor i in range(0,q+1):\n    if z[i:i+q]==x:\n        b=True\nif b:\n    print('YES')\nelse:\n    print('NO')\n", "n, l = map(int, input().split())\nans = False\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nfor i in range(l):\n    c = 1\n    p = b[:]\n    for j in range(n):\n        p[j] = (b[j] + i) % l\n    p.sort()\n    for j in range(n):\n        if a[j] != p[j]:\n            c = 0\n            break\n    if c:\n        print('YES')\n        break\nelse:\n    print('NO')", "import math, sys\n\ndef main():\n\tn,l = list(map(int,input().split()))\n\ta = list(map(int, input().split()))\n\tmask = []\n\tfor i in range(n-1):\n\t\tmask.append(a[i+1]-a[i])\n\tmask.append(l-a[n-1]+a[0])\n\t\n\tb = list(map(int, input().split()))\n\tpath = []\n\tfor i in range(n-1):\n\t\tpath.append(b[i+1]-b[i])\n\tpath.append(l-b[n-1]+b[0])\n\t\n\tfor offset in range(n):\n\t\tflag = True\n\t\tfor i in range(n):\n\t\t\tif mask[(i+offset)%n] != path[i]:\n\t\t\t\tflag = False\n\t\t\t\tbreak\n\t\tif flag:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('NO')\n\t\t\t\n\t\t\n\t\t\n\t\t \n\t\t\t\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "n, L = [int(x) for x in input().split()]\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ns1 = a[n - 1]\ns2 = b[n - 1]\nx1 = L - s1\nx2 = L - s2\nc = []\nd = []\nc.append(a[0] + x1)\nd.append(b[0] + x2)\nfor i in range(n - 1):\n    c.append(a[i + 1] - a[i])\n    d.append(b[i + 1] - b[i])\nfor i in range(n):\n    k = True\n    for j in range(n):\n        if c[j] != d[(j + i) % n]:\n            k = False\n    if (k):\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "n, l = list(map(int, input().split()))\n\nk = list(map(int, input().split()))\ns = list(map(int, input().split()))\n\nki = [k[0]]\nsi = [s[0]]\n\ntmp = 0\nfor i in range(1, n):\n    ki.append(k[i] - k[i - 1])\n    si.append(s[i] - s[i - 1])\nki[0] += l - k[-1]\nsi[0] += l - s[-1]\n\nif ''.join(map(str, ki * 2)).find(''.join(map(str, si))) != -1:\n    print('YES')\nelse:\n    print('NO')\n", "n, L = map(int, input().split())\n\nKef = list(map(int, input().split()))\nSas = list(map(int, input().split()))\n\ndKef = [Kef[i+1]-Kef[i] for i in range(n-1)]\ndKef.append(L - Kef[n - 1] + Kef[0])\n\ndSas= [Sas[i+1]-Sas[i] for i in range(n-1)]\ndSas.append(L - Sas[n - 1] + Sas[0])\n\nif ' '.join(map(str, dKef)) in ' '.join(map(str, dSas * 2)):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "from collections import deque\n\nn, L = list(map(int, input().split()))\nd1 = [int(i) for i in input().split()]\nd2 = deque([int(i) for i in input().split()])\nans = False\nif n == 1:\n    ans = True\n\nfor i in range(n):\n    if ans:\n        break\n    diff = (d1[0]-d2[0])%L\n    fl = True\n    for j in range(n):\n        if (d1[j]-d2[j])%L != diff:\n            fl = False\n    if fl:\n        ans = True\n    d2.rotate(1)\n\nprint([\"NO\",\"YES\"][ans])\n", "k, n = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nd = []\nfor i in range(k - 1):\n    c += [a[i + 1] - a[i] + 1]\n    d += [b[i + 1] - b[i] + 1]\nc += [n - a[-1] + a[0] + 1]\nd += [n - b[-1] + b[0] + 1]\nfor i in range(k):\n    if c == d[i:] + d[:i]:\n        print(\"YES\")\n        break\nelse:\n     print(\"NO\")\n", "import sys\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef solve():\n    n, L = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n\n    for i in range(L):\n        B_r = sorted([(b + i) % L for b in B])\n        if A == B_r:\n            print('YES')\n            break\n    else:\n        print('NO')\n\ndef __starting_point():\n    solve()\n__starting_point()"]