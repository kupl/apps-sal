["p, n = map(int, input().split())\na = [-1 for i in range(p)]\nfor i in range(n):\n    b = int(input())\n    if a[b % p] != -1:\n        print(i + 1)\n        return\n    else:\n        a[b % p] = b\nprint(-1)", "p, _= list(map(int, input().split()))\n\nused = set()\n\nfor i in range(_):\n    x = int(input())\n    if x%p in used:\n        print(i+1)\n        return\n    else:\n        used.add(x%p)\nprint(-1)\n", "p,n=map(int,input().split())\ns=set()\nfor i in range(n):\n    x=int(input())\n    if x%p in s:\n        print(i+1)\n        return\n    else:\n        s.add(x%p)\nprint(-1)", "p, n = list(map(int, input().split()))\narr = [-1 for i in range(1000)]\nfor i in range(n):\n\tx = int(input())\n\tif arr[x % p] != -1:\n\t\tprint(i+1)\n\t\treturn\n\telse:\n\t\tarr[x % p] = x\nprint(-1)\n", "p, n = [int(x) for x in input().split()]\nl = [int(input()) for i in range(n)]\n\ntable = [False for i in range(p)]\ndone = False\nfor i in range(n):\n    if table[l[i]%p]:\n        print(i+1)\n        done = True\n        break\n    else:\n        table[l[i]%p] = True\nif not done:\n    print(-1)\n", "x, n = list(map(int, input().split()))\na = [False for i in range(x)]\n\nfor i in range(n):\n    d = int(input()) % x\n    if a[d]:\n        print(i + 1)\n        break\n    a[d] = True\nelse:\n    print(-1)", "p, n = map(int,input().split())\ns = set()\nex = 0\nfor i in range(n):\n    x = int(input())\n    if x%p in s:\n        print(i+1)\n        ex = 1\n        break\n    s.add(x%p)\nif ex == 0:\n    print(-1)", "p,n=map(int,input().split())\nxlist=[]\nfor i in range(n):\n\txlist.append(int(input()))\n\nremainderlist=[]\nfor i in range(n):\n\tif xlist[i]%p not in remainderlist:\n\t\tremainderlist.append(xlist[i]%p)\n\telse:\n\t\tprint(i+1)\n\t\tquit()\n\nprint(-1)\t", "n = list(map(int,input().split(' ')))\narr = []\nc = False\nfor  i in range(n[1]):\n\tt = int(input())\n\tif(t % n[0] in arr):\n\t\tprint(i+1)\n\t\tc = True\n\t\tbreak\n\telse:\n\t\tarr.append(t % n[0])\nif(c==False):\n\tprint(-1)", "s = input()\np = int(s.split()[0])\nn = int(s.split()[1])\nnn = []\nbb = False\nfor i in range(n):\n    a = int(input()) % p\n    for b in nn:\n        if b == a:\n            print(i + 1)\n            bb = True\n            break\n    else:\n        nn.append(a)\n    if bb:\n        break\nif not bb:\n    print(-1)\n\n\n    \n", "p,n=map(int,input().split())\nx=[0 for i in range(n)]\nfor i in range(n):\n\tx[i]=int(input())\nwas=[0 for i in range(p)]\nk=-1\nfor i in range(n):\n\tif was[x[i]%p]:\n\t\tk=i+1\n\t\tbreak\n\telse:\n\t\twas[x[i]%p]=1\nprint(k)\t", "__author__ = 'Adela'\n\n\ndef main():\n    p, n = (int(k) for k in input().split())\n    full = [False] * p\n    for i in range(n):\n        xi = int(input())\n        mod = xi % p\n        if full[mod]:\n            print(i+1)\n            return\n        full[mod] = True\n\n    print(-1)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "p, n = map(int,input().split())\nx = []\nfor i in range(n):\n    x.append(int(input()))\npos = []\nout = -1\nfor i in range(n):\n    a = x[i] % p\n    if a in pos:\n        out = (i+1)\n        break\n    else:\n        pos.append(a)\n        \nif out == -1 :\n    print(-1)\nelse:\n    print (out)", "# bestwillcui\n# Codeforces Problem 1\n\nAkshajK = input(\"\").split()\n\np = int(AkshajK[0])\nn = int(AkshajK[1])\n\nc = 1\nasdf = []\nl_1 = []\nfor x in range(p):\n    l_1.append(0)\n\nwhile c <= n:\n    s = int(input())\n    if l_1[s % p] == 0:\n        l_1[s % p] = 1\n    else:\n        asdf.append(c)\n    c += 1\nif asdf != []:\n    print(asdf[0])\nelse:\n    print(-1)\n", "p, n = tuple(map(int, input().split(' ')))\nmods = []\nresult = -2\nfinished = False\n\nfor i in range(n):\n    if finished:\n        input()\n    else:\n        tmp = int(input()) % p\n        if tmp in mods:\n            result = i\n            finished = True\n        mods.append(tmp)\n\nprint(result + 1)", "a=input().split()\np=int(a[0])\nn=int(a[1])\nh=[]\nflag=1\nfor i in range(p):\n  h.append(0)\nfor i in range(n):\n  work=int(input())\n  work=work % p\n  if h[work] and flag:\n    answer=i+1\n    flag=0\n  h[work]=1\nif flag:\n  answer=-1\nprint(answer)", "h = []\na = -1\nP, N = list(map(int, input().split()))\nfor i in range(N):\n    v = int(input()) % P\n    if (v in h) and a == -1:\n        a = i + 1\n    h.append(v)\nprint(a)\n", "p, n = map(int, input().split())\nx = [int(input()) for i in range(n)]\nu = [False] * p\nfor i in range(min(p + 1, n)):\n  if u[x[i] % p]:\n    print(i + 1)\n    break\n  u[x[i] % p] = True\nelse:\n  print(-1)", "inp = input().strip().split()\ninp = [int(i) for i in inp]\n\np = inp[0]\nn = inp[1]\n\nhashDict = {}\nconflict = False\ninsertion = 0\nfor i in range(n):\n    num = int(input().strip())\n    num = num%p\n    if num in hashDict:\n        if conflict:\n            continue\n        conflict = True\n        insertion = i\n\n    else:\n        hashDict[num] = True\n\nif conflict:\n    print(insertion+1)\nelse:\n    print(\"-1\")\n\n", "#!/usr/bin/env python\n\n\ndef main():\n    p, n = list(map(int, input().split()))\n    table = set()\n    for i in range(1, n+1):\n        x = int(input())\n\n        if x % p in table:\n            print(i)\n            return\n        else:\n            table.add(x % p)\n\n#        print(\">\", x % p, table)\n\n    print(-1)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#Dead\nimport math\nsa3=[]\nsa2=input().split(' ')\nprime=int(sa2[0])\nnums=int(sa2[1])\nfor x in range(nums):\n    sa=int(input())\n    sa3.append(sa)\nsa4=[]\nsa9001=0\nfor element in range(len(sa3)):\n    sa5=sa3[element]%prime\n    if sa5 in sa4 and sa9001!=1:\n        print(element+1)\n        sa9001=1\n    else:\n        sa4.append(sa3[element]%prime)\nif sa9001==0:\n    print(-1)\n", "import sys\np,n = list(map(int,input().split()))\na = [0] * p;\nfor i in range(n):\n    x = int(input())\n    if (a[x % p] != 0):\n        print(i + 1)\n        return\n    else:\n        a[x % p] = i + 1;\nprint(-1)\n", "import sys\nimport string\nfrom decimal import *\nfrom itertools import *\nfrom math import *\n\ndef solve():\n    p,n = list(map(int,input().split()))\n    x = []\n    for i in range(n):\n        val = int(input())\n        if (val % p) not in x:\n            x.append(val % p)\n        else :\n            print(i+1)\n            return 0\n    print(-1)\nsolve();\n", "import sys\nimport string\nfrom decimal import *\nfrom itertools import *\nfrom math import *\n\ndef solve():\n    p,n = list(map(int,input().split()))\n    x = []\n    for i in range(n):\n        val = int(input())\n        if (val % p) not in x:\n            x.append(val % p)\n        else :\n            print(i+1)\n            return 0;\n    print(-1)\nsolve();\n", "def main():\n    p, n = [int(i) for i in input().split()]\n    \n    d = [0 for i in range(p)]\n    \n    for i in range(n):\n        x = int(input()) % p\n        if d[x]:\n            print(i + 1)\n            return\n        d[x] = 1\n    \n    print(-1)\n\n\nmain()\n"]