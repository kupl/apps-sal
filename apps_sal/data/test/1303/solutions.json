["__author__ = 'sonerik'\n\nimport sys\n\ninp = sys.stdin\n# inp = open(\"a.txt\")\n\np, q, l, r = map(int, inp.readline().strip().split())\n\nz, x = [], []\n\nfor i in range(p):\n    a_i, b_i = map(int, inp.readline().strip().split())\n    z += [i for i in range(a_i, b_i+1)]\n\nz_set = set(z)\n\nfor i in range(q):\n    c_i, d_i = map(int, inp.readline().strip().split())\n    x += [i for i in range(c_i, d_i+1)]\n\ncnt = 0\n\nfor i in range(l, r+1):\n    new_x = [j + i for j in x]\n    new_x_set = set(new_x)\n    if new_x_set.intersection(z_set):\n        cnt += 1\n\nprint(cnt)", "p, q, l, r = list(map(int, input().split()))\na = [0] * p\nb = [0] * p\nc = [0] * q\nd = [0] * q\nfor i in range(p):\n    a[i], b[i] = list(map(int, input().split()))\nfor i in range(q):\n    c[i], d[i] = list(map(int, input().split()))\ncnt = 0\nfor t in range(l, r + 1):\n    events = \\\n        list([(x + 0, +1) for x in a]) + \\\n        list([(x + 0, -1) for x in b]) + \\\n        list([(x + t, +1) for x in c]) + \\\n        list([(x + t, -1) for x in d])\n    events.sort(key=lambda x: (x[0], -x[1]))\n    online = 0\n    for _, i in events:\n        online += i\n        if online > 1:\n            cnt += 1\n            break\nprint(cnt)\n", "p,q,x,y = list(map(int, input().split()))\na = [0 for i in range(p)]\nb = [0 for i in range(p)]\nc = [0 for i in range(q)]\nd = [0 for i in range(q)]\nfor i in range(p):\n    a[i], b[i] = list(map(int, input().split()))\nfor i in range(q):\n    c[i], d[i] = list(map(int, input().split()))\n\n\nans = 0\n\ndef comp(k,l,m,n):\n    if m <= l and k <= n:\n        return 0 #eq\n    elif m >= l:\n        return 1 #ab<cd\n    else:\n        return -1 #ab>cd\n\nfor t in range(x, y+1):\n    i = 0\n    j = 0\n    while i < p and j < q:\n##        print('i = ',i,'; j = ',j)\n        z = comp(a[i], b[i], c[j] + t, d[j] + t)\n##        print('comp(', a[i],',',b[i],',',c[j]+t,',',d[j]+t,') = ',z)\n        \n        if z == 0:\n            ans += 1\n            break\n        elif z == 1:\n            i += 1\n        else:\n            j += 1\n\nprint(ans)\n    \n    \n", "t=list(input().split())\np=int(t[0])\nq=int(t[1])\nl=int(t[2])\nr=int(t[3])\nxv=list()\nzv=list()\nfor i in range(p):\n    t=list(int(x) for x in input().split())\n    zv+=list(x for x in range(t[0],t[1]+1))\nsv=set(zv)\n#print (sv)\n\nfor i in range(q):\n    t=list(int(x) for x in input().split())\n    xv+=list(x for x in range(t[0],t[1]+1))\n#print (xv)\n\nc=0\nfor i in range (l, r+1):\n    for j in range (q):\n        tt=set((x+i) for x in xv)\n        if (tt&sv)!=set():\n            c+=1\n            break       \n\n# for i in range (q):\n    # t=list(int(x) for x in input().split())\n    # for k in range (l,r+1):\n        # tt=set((x+k) for x in range (t[0],t[1]+1))\n        # print (tt)\n        # if (tt&sv)!=set():\n            # c+=1\n            # break\nprint (c)\n", "def inter(A, B, t):\n    for i in B:\n        if (i + t) in A:\n            return True\n    return False\n\n\np, q, r, l = list(map(int, input().split()))\nX = set()\nZ = set()\nfor i in range(p):\n    b, e = list(map(int, input().split()))\n    for i in range(b, e + 1):\n        Z.add(i)\nfor i in range(q):\n    b, e = list(map(int, input().split()))\n    for i in range(b, e + 1):\n        X.add(i) \ncnt = 0\nfor i in range(r, l + 1):\n    if inter(Z, X, i):\n        cnt += 1\nprint(cnt)\n    \n", "x1=[]\nx2=[]\np, q, l, r = list(map(int, input().split(' ')))\nfor i in range(p):\n    a, b = list(map(int, input().split(' ')))\n    x1.append([a, b])\n\nfor i in range(q):\n    a, b = list(map(int, input().split(' ')))\n    x2.append([a, b])\n\nok2 = []\n\nfor a in x1:\n    for b in x2:\n        lo = a[0]-b[1]\n        hi = a[1]-b[0]\n        if hi >= r:\n            hi = r\n        if lo <= l:\n            lo = l\n        ok2.append([lo, hi])\n\nok = [i for i in ok2 if i[1]>=i[0]]\nok.sort()\ntotal = 0\nif len(ok)==0:\n    print(0)\nelse: \n    intv = ok[0]\n    for i in range(1, len(ok)):\n        curr = ok[i]\n        if curr[0] > intv[1]:\n            if intv[1] == intv[0]:\n                total += 1\n            else:\n                total += intv[1]-intv[0]+1\n            intv = curr\n        else:\n            minim = [min(curr[0], intv[0]), max(curr[1], intv[1])]\n            intv = minim\n\n    if intv[1] == intv[0]:\n        total += 1\n    else:\n        total += intv[1]-intv[0]+1\n    print(total)\n", "p, q, l, r = map(int, input().split())\narr_z = [0] * (p * 2)\ni = 0\nfor k in range(p):\n    t = list(map(int, input().split()))\n    arr_z[i], arr_z[i + 1] = (t[0], -1), (t[1], 1)\n    i += 2\narr_z.sort()\narr = [False] * 1001\nfor i in range(q):\n    t = list(map(int, input().split()))\n    t[1] = t[1] - t[0]    \n    f = t[0]\n    for j in range(l, r + 1):\n        t[0] = f + j\n        if arr[j] != True:\n            tl = -1\n            tr = (p * 2)\n            while tr > tl + 1:\n                m = (tr + tl) // 2\n                if t[0] < arr_z[m][0]:\n                    tr = m\n                elif t[0] > arr_z[m][0]:\n                    tl = m\n                else:\n                    if arr_z[m][1] == 1:\n                        tr = m\n                    else:\n                        tl = m\n            if (tr < p * 2 and arr_z[tr][0] <= t[0] + t[1]) or (tr != 0 and arr_z[tr - 1][1] == -1):\n                arr[j] = True\nans = 0\nfor i in arr[l:r + 1]:\n    if i == True:\n        ans += 1\nprint(ans)", "#!/usr/bin/env python3\nfrom sys import stdin\np, q, l, r = map(int, stdin.readline().split())\n\nz_list = []\nx_list = []\nfor x in range(p):\n\ti, j = map(int, stdin.readline().split())\n\tfor x in range(i, j+1):\n\t\tz_list.append(x)\nfor x in range(q):\n\ti, j = map(int, stdin.readline().split())\n\tfor x in range(i, j+1):\n\t\tx_list.append(x)\n\nt = l\nans = 0\nfor x in range(l, r+1):\n\txt_list = [x+t for x in x_list]\n\tt += 1\n\tif len(list(set(z_list) & set(xt_list))) != 0:\n\t\tans += 1\n\nprint(ans)", "def read_to_list(count):\n    s = []\n    for i in range(count):\n        start, stop = [int(i) for i in input().split()]\n        s.extend(list(range(start, stop + 1)))\n    return s\n\n\ndef has_equal_items(first, second):\n    for item in first:\n        if item in second:\n            return True\n    return False\n\n\ndef update_list(l, t):\n    for i in range(len(l)):\n        l[i] += t\n\ndef main():\n    p, q, l, r = [int(i) for i in input().split()]\n    z, x = read_to_list(p), read_to_list(q)\n    if l > 0:\n        update_list(x, l)\n    count = 1 if has_equal_items(z, x) else 0\n    for t in range(l, r):\n        update_list(x, 1)\n        if has_equal_items(x, z):\n            count += 1\n    print(count)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "p, q, l, r = list(map(int, input().split()))\nx = [0] * 10000\ny = []\ncnt = 0\nfor i in range(p):\n    a, b = list(map(int, input().split()))\n    for j in range(a, b + 1):\n        x[j] = 1\nfor i in range(q):\n    a, b = list(map(int, input().split()))\n    y.append((a, b))\n    \nfor i in range(l, r + 1):\n    f = 0\n    for j in range(q):\n        if not f:\n            for k in range(y[j][0] + i, y[j][1] + i + 1):\n                if x[k]:\n                    f = 1\n                    break\n        else:\n            break\n    cnt += f\nprint(cnt)\n    \n    \n", "def main():\n    p, q, l, r = list(map(int, input().split()))\n    Z = set()\n    X = []\n\n    for _ in range(p):\n        ai, bi = list(map(int, input().split()))\n        Z.update(list(range(ai, bi+1)))\n    for _ in range(q):\n        ai, bi = list(map(int, input().split()))\n        X.extend(list(range(ai, bi+1)))\n\n    res = 0\n    for i in range(l, r+1):\n        for j in X:\n            if j + i in Z:\n                res += 1\n                break\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "p, q, l, r = map(int, input().split())\n\nmySet1 = set()\nmySet2 = set()\n\nfor i in range(p):\n    a, b = map(int, input().split())\n    for i in range(a, b+1):\n        mySet1.add(i)\n\n\nfor i in range(q):\n    a, b = map(int, input().split())\n    for i in range(a, b+1):\n        mySet2.add(i)\n\n\nm = max(mySet1)\ncnt = 0\n\nfor t in range(l, r+1):\n    for item in mySet2:\n        if t+item in mySet1:\n            cnt +=1\n            break\n\nprint(cnt)", "p,q,l,r = tuple(map(int, input().split(' ')))\nIP = [False]*1001\nIQ = [False]*1001\nfor i in range(p):\n    a,b = tuple(map(int, input().split(' ')))\n    IP[a:b+1] = [True]*(b-a+1)\n  \nfor i in range(q):\n    a,b = tuple(map(int, input().split(' ')))\n    IQ[a:b+1]=[True]*(b-a+1)\n\nli = []\nli= [1 for i in range(l,r+1) if any([True for j in range(1001-i) if IP[i+j] and IQ[j] ]) ]\n\nprint(sum(li))\n     \n\n", "p,q,l,r = tuple(map(int, input().split(' ')))\nIP = [False]*1001\nIQ = [False]*1001\nfor i in range(p):\n    a,b = tuple(map(int, input().split(' ')))\n    IP[a:b+1] = [True]*(b-a+1)\n  \nfor i in range(q):\n    a,b = tuple(map(int, input().split(' ')))\n    IQ[a:b+1]=[True]*(b-a+1)\n\nli = []\nli= (1 for i in range(l,r+1) if any(True for j in range(1001-i) if IP[i+j] and IQ[j] ) )\n\nprint(sum(li))", "p,q,l,r=list(map(int,input().split(' ')))\nplist=list()\nqlist=list()\nfor i in range(p):\n    plist.append(list( map(int,input().split()) ))\nfor i in range(q):\n    qlist.append(list( map(int,input().split()) ))\n\npset=set()\nqset=set()\nfor j in range(p):\n    pset=pset | set(range( plist[j][0], plist[j][1]+1 ) )\n\nwhengetup=0\nfor i in range(l,r+1):\n    qset=set()\n    for j in range(q):\n        qset=qset | set(range( qlist[j][0]+i, qlist[j][1]+i+1 ) )\n    if len(pset & qset)>0:\n        whengetup+=1\n\nprint(whengetup)\n", "def f (x1, y1, x2, y2):\n    return x1 <= x2 <= y1 or x1 <= y2 <= y1 or x2 <= x1 <= y2\n\np, q, l, r = list(map(int, input().split()))\na1, a2 = [(0, 0)] * p, [(0, 0)] * q\nfor i in range(p):\n    a, b = list(map(int, input().split()))\n    a1[i] = (a, b)\nfor i in range(q):\n    a, b = list(map(int, input().split()))\n    a2[i] = (a, b)\nres = [False] * 2000\nans = 0\nfor i in a1:\n    for j in a2:\n        for k in range(max(0, i[0] - j[1]), i[1] - j[0] + 1):\n            res[k] = True\nfor i in range(l, r + 1):\n    if res[i]:\n        ans += 1\nprint(ans)\n", "p, q, l, r = map(int, input().split())\nt = [0] * 1002\nz = [list(map(int, input().split())) for i in range(p)]\nx = [list(map(int, input().split())) for i in range(q)]\nfor xl, xr in x:\n    for zl, zr in z:\n        a, b = zl - xr, zr - xl + 1\n        if b <= l: continue\n        if a > r: break\n        if a < l: a = l - 1\n        if b <= r: t[b] -= 1\n        t[a] += 1\nfor i in range(l, r + 1): t[i] += t[i - 1]\nprint(r - l + 1 - t[l: r + 1].count(0))", "#Codeforces 469B\n#Chat Online\n\np,q,l,r=input().split()\nfixed=[]\nfor i in range(int(p)):\n    endpoints=input().split()\n    for j in range(int(endpoints[0]),int(endpoints[1])+1):\n        fixed+=[j]\n\ntemp=[]\nfor i in range(int(q)):\n    endpoints=input().split()\n    for j in range(int(endpoints[0]),int(endpoints[1])+1):\n        temp+=[j]\n\ncount=0\nfor time in range(int(l),int(r)+1):\n    new_temp=temp[:]\n    new_temp=[i+time for i in new_temp]\n    for i in new_temp:\n        if i in fixed:\n            count+=1\n            break\n\nprint(count)\n", "p,q,l,r = list(map(int, input().split(' ')))\nP = []\nQ = []\nfor i in range(p) :\n    P.append(list(map(int, input().split(' '))))\nfor i in range(q) :\n    Q.append(list(map(int, input().split(' '))))\nres = 0\nfor i in range(l, r+1) :\n    index_q = 0\n    index_p = 0\n    for j in range(p+q) :\n        if index_q == q or index_p == p : break\n        if P[index_p][1] < Q[index_q][0] + i :\n            index_p += 1\n        elif Q[index_q][1] + i< P[index_p][0] :\n            index_q += 1\n        else :\n            res += 1\n            break\nprint(res)\n        \n", "RMAX = 1000\np, q, l, r = list(map(int, input().split()))\n\ndef rl():\n\ta, b = list(map(int, input().split()))\n\treturn a, b\n\nx = [rl() for _ in range(p)]\nxline = [False] * (RMAX+1)\nfor a, b in x:\n\tfor i in range(a, b+1): xline[i] = True\ny = [rl() for _ in range(q)]\n\ndef test(t):\n\tfor a, b in y:\n\t\tfor i in range(t+a, t+b+1):\n\t\t\tif i > RMAX: break\n\t\t\tif xline[i] == True: return 1\n\treturn 0\n\nans = sum(test(t) for t in range(l, r+1))\nprint(ans)\n", "p, q, l, r = list(map(int, input().split()))\nbestMoments = 0\n\ndef enter(stringNum):\n    res = []\n    for st in range(stringNum):\n        a, b = list(map(int, input().split()))\n        for i in range(a, b+1):\n            res.append(i)        \n    return res\n        \nlittleY = []\nlittleZ = []\n\nlittleY = enter(p)\nlittleZ = enter(q)\n\nlenYandZ = len(littleY) + len(littleZ)\n\nfor i in range(l, r+1):\n    currentZ = list([x+i for x in littleZ])\n    if len(set(currentZ+littleY)) < lenYandZ:\n        bestMoments += 1\n\nprint(bestMoments)\n", "p, q, l, r = (int(x) for x in input().split())\ntx, val = [], [False] * (r - l + 1)\nfor i in range(p):\n    tx.append([int(x) for x in input().split()])\nfor i in range(q):\n    c, d = (int(x) for x in input().split())\n    for x in tx:\n        for j in range(max(l, x[0] - d), min(r, x[1] - c) + 1):\n            val[j - l] = True\nprint(sum(val))", "x1=[]\nx2=[]\np, q, l, r = map(int, input().split(' '))\nfor i in range(p):\n    a, b = map(int, input().split(' '))\n    x1.append([a, b])\n\nfor i in range(q):\n    a, b = map(int, input().split(' '))\n    x2.append([a, b])\n\nok2 = []\n\nfor a in x1:\n    for b in x2:\n        lo = a[0]-b[1]\n        hi = a[1]-b[0]\n        if hi >= r:\n            hi = r\n        if lo <= l:\n            lo = l\n        ok2.append([lo, hi])\n\nok = [i for i in ok2 if i[1]>=i[0]]\nok.sort()\ntotal = 0\nif len(ok)==0:\n    print(0)\nelse: \n    intv = ok[0]\n    for i in range(1, len(ok)):\n        curr = ok[i]\n        if curr[0] > intv[1]:\n            if intv[1] == intv[0]:\n                total += 1\n            else:\n                total += intv[1]-intv[0]+1\n            intv = curr\n        else:\n            minim = [min(curr[0], intv[0]), max(curr[1], intv[1])]\n            intv = minim\n\n    if intv[1] == intv[0]:\n        total += 1\n    else:\n        total += intv[1]-intv[0]+1\n    print(total)", "p, q, l, r = [int(x) for x in input().split()]\na = ''\nb = ''\nfor i in range(p):\n\tx, y = [int(x) for x in input().split()]\n\ta += '0' * (x - len(a))\n\ta += '1' * (y - x + 1)\nfor i in range(q):\n\tx, y = [int(x) for x in input().split()]\n\tb += '0' * (x - len(b))\n\tb += '1' * (y - x + 1)\nans = 0\nfor i in range(l, r + 1):\n\tans += 1 if any([x[0] == '1' and x[1] == '1' for x in zip(a, '0' * i + b)]) else 0\nprint(ans)\n", "def main():\n    p, q, l, r = map(int, input().split())\n    ab, cd = [False] * 1001, [False] * 1001\n    for _ in range(p):\n        a, b = map(int, input().split())\n        for i in range(a, b + 1):\n            ab[i] = True\n    for _ in range(q):\n        a, b = map(int, input().split())\n        for i in range(a, b + 1):\n            cd[i] = True\n    res = 0\n    for i in range(l, r + 1):\n        for t, f in enumerate(ab):\n            if f and cd[t - i] and t >= i:\n                res += 1\n                break\n    print(res)\n\n\ndef __starting_point():\n    main()\n__starting_point()"]