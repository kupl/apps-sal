["n = int(input())\nd = list(map(int, input().split()))\ns = {i:0 for i in set(d)}\nfor i in d:\n\ts[i] += 1\nprint(max(s.values()))", "n = int(input())\n\narr = list(map(int, input().split()))\nd = dict()\n\nfor i in arr:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n\nprint(max(d.values()))\n", "n = int(input())\nL = list(map(int, input().split()))\n\nfreq = {}\n\nfor i in L:\n\tif i not in freq:\n\t\tfreq[i] = 0\n\tfreq[i] += 1\n\nm = 0\n\nfor j in freq:\n\tif freq[j] > m:\n\t\tm = freq[j]\n\nprint(m)", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\nc = Counter(a)\nprint(c.most_common(1)[0][1])", "from collections import Counter as c\nread=lambda: list(map(int,input().split()))\nn=int(input())\na=c(read())\nprint(a.most_common(1)[0][1])", "N = int(input())\nboxes = sorted(list(map(int,input().split())))\n\nhigh = 0\nfor item in boxes:\n    high = max(high, boxes.count(item))\n\nprint(high)\n", "import itertools as it\n\nn = int(input())\n\nA = list(map(int, input().split()))\nA = sorted(A)\n\nprint(max([len(list(x[1])) for x in it.groupby(A)]))\n", "n = int(input())\n\nhuh = list(map(int, input().split()))\na = {}\nfor i in huh:\n    if i in a:\n        a[i] += 1\n    else:\n        a[i] = 1\n        \nmaxx = 0\n\nfor i in a:\n    if a[i] > maxx:\n        maxx = a[i]\nprint(maxx)", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\nfrom collections import Counter\n\nn = ii()\na = li()\nx = Counter(a).most_common(1)[0][1]\nprint(x)", "import sys\np = {}\nn = int(input())\na = [int(i) for i in input().split()]\nans = 0\nfor i in range(n):\n    if a[i] not in p:\n        p[a[i]] = 1\n    else:\n        p[a[i]] += 1\n    ans = max(ans, p[a[i]])\nprint(ans)", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\nprint(max(list(Counter(a).values())))\n", "n=int(input())\nA=[int(i) for i in input().split(\" \")]\nres=1\nA.sort()\nres=0\nfor i in A:\n    res=max(res,A.count(i))\nprint(res)\n\n'''\n2 3 4 2 3 4\n1 1 1 2 2 2\n'''\n", "n = list(map(int, input().strip().split()))[0]\narr = list(map(int, input().strip().split()))\n\ncount = dict()\nfor i in arr:\n    if i in count:\n        count[i] += 1\n    else:\n        count[i] = 1\n\nmaximum = 0\nfor key in count:\n    if count[key] > maximum:\n        maximum = count[key]\n\nprint(maximum)", "from bisect import *\n\nn = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\na = [-int(x) for x in a]\nans = 0\ni = 0\nwhile i < n:\n    idx = bisect_right(a, a[i])\n    ans = max(ans, idx - i)\n    i = idx\nprint(ans)\n", "\nn = input()\na = list(map(int, input().split()))\naa = set(a)\n\n\nb = [a.count(x) for x in aa]\n\nprint(max(b))", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nb = 0\nc = 0\nsetA = set()\nfor i in range(1, n):\n    if a[i] == a[i - 1]:\n        c += 1\n        if b > 0:\n            b -= 1\n            n -= 1\n    else:\n        b += c\n        c = 0\n        n -= 1\nprint(n)\n", "n = int(input())\na = list(map(int, input().split()))\n\na = sorted(a, key=lambda x: -x)\nans = 0\nd = {}\nfor i in a:\n    if i not in d:\n        d[i] = 0\n    d[i] += 1\nfor key in d:\n    ans = max(ans, d[key])\nprint(ans)", "from collections import Counter\nn=int(input())\nli=input().strip().split(' ')\nprint(max(Counter(li).values()))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nt = 1\nmaxi = 1\nfor i in range(1, len(a)):\n    if a[i] == a[i - 1]:\n        t += 1\n    else:\n        maxi = max(maxi, t)\n        t = 1\nmaxi = max(maxi, t)\nprint(maxi)\n", "n=int(input())\na=list(map(int,input().split()))\ns=set(a)\nma=1\nfor i in s:\n\tk=a.count(i)\n\tif k > ma:\n\t\tma=k\nprint(ma)\n\t\n", "n = int(input())\nl = list(map(int, input().split()))\n\nans = 0\nfor k in l :\n  ans = max(l.count(k), ans)\nprint(ans)\n", "n = int(input())\na = [int(i) for i in input().split()]\nmax_frq = 1\nfor i in range(n):\n    frq = 1\n    frq = a.count(a[i])\n    if frq >= max_frq:\n        max_frq = frq\nprint(max_frq)", "from collections import Counter\n\nn = int(input())\na = Counter(list(map(int, input().split())))\n\nprint(a.most_common()[0][1])\n\n", "n = int(input())\nbx = list(map(int, input().split()))\nbx.sort()\nvals = {i: 0 for i in bx}\nfor i in bx:\n    vals[i] += 1\nprint(max(vals.values()))\n"]