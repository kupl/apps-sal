["import sys\nimport math\n\ndef main(arr):\n ans=2\n if len(arr)<2:\n  return 4-len(arr)\n set_arr=set(arr)\n for i in range(len(arr)):\n  for j in range(i+1,len(arr)):\n   need=2\n   x1,y1=arr[i]\n   x2,y2=arr[j]\n   xc = (x1 + x2)/2  ;  yc = (y1 + y2)/2  ;    \n   xd = (x1 - x2)/2  ;  yd = (y1 - y2)/2  ;    \n\n   x3 = xc - yd  ;  y3 = yc + xd;    \n   x4 = xc + yd  ;  y4 = yc - xd;    \n   if (x3,y3) in set_arr:\n    need-=1 \n   if (x4,y4) in set_arr:\n    need-=1\n   ans=min(ans,need)\n return ans\n\narr=[]\nfor i in range(int(input())):\n arr.append(tuple(map(int,input().split())))\nprint(main(arr))\n \n \n    \n\n", "def chefsqua():\n import sys\n def gcd(a,b):\n  while b > 0:\n   a, b = b, a%b\n  return a\n n = int(sys.stdin.readline().strip())\n coords = []\n cset = set()\n orgx, orgy = 0, 0\n basex, basey = 1, 1\n colinear = True\n for i in range(n):\n  (x,y) = tuple(map(int,sys.stdin.readline().strip().split(' ')))\n  if i == 0:\n   orgx, orgy = x, y\n  x, y = x - orgx, y - orgy\n  coords.append((x,y))\n  cset.add((x,y))\n  if i == 1:\n   g = gcd(x,y)\n   basex, basey = x//g, y//g\n  if colinear and i >= 2:\n   g = gcd(x,y)\n   colinear &= (x//g == basex and y//g == basey)\n if n == 0:\n  print(4)\n  return\n if n == 1:\n  print(3)\n  return\n elif n == 2 or colinear:\n  print(2)\n  return\n best = 2\n for i in range(n-1):\n  xi, yi = coords[i][0], coords[i][1]\n  for j in range(i+1,n):\n   xj, yj = coords[j][0], coords[j][1]\n   dx, dy = xj - xi, yj - yi\n   if (xi-dy, yi+dx) in cset:\n    best = 1\n    if (xj-dy, yj+dx) in cset:\n     print(0)\n     return\n   if (xi+dy, yi-dx) in cset:\n    best = 1\n    if (xj+dy, yj-dx) in cset:\n     print(0)\n     return\n   if (xj-dy, yj+dx) in cset:\n    best = 1\n   if (xj+dy, yj-dx) in cset:\n    best = 1\n print(best)\n return\n\nchefsqua()\n"]