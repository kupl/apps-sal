["import math\nimport sys\nfrom collections import Counter\n\ndef solve():\n    n, m = [int(x) for x in input().split()]\n    L, R = 1, n\n    for line in sys.stdin:\n        x, y = [int(x) for x in line.split()]\n        x, y = min(x, y), max(x, y)\n        L, R = max(L, x), min(R, y)\n        \n    return max(R - L, 0)\n\nprint(solve())\n\n", "n, m = [int(i) for i in input().split()]\ns1 = [1]\ns2 = [n]\nfor i in range(m):\n\ta, b = [int(i) for i in input().split()]\n\ts1.append(min(a,b))\n\ts2.append(max(a,b))\ns1.sort()\ns2.sort()\nif s1[-1] < s2[0]:\n\tprint(s2[0]-s1[-1])\nelse:\n\tprint(0)\n", "n, m = list(map(int,input().split()))\nleft = 0\nright = n\nfor i in range(m):\n    ui, vi = list(map(int,input().split()))\n    if ui > vi:\n        left = max(left,vi)\n        right = min(right,ui)\n    else:\n        left = max(left,ui)\n        right = min(right,vi)\nif m == 0:\n    right -= 1\nif right > left:\n    print(right-left)\nelse:\n    print(0)\n", "n, m = list(map(int, input().split()))\n\nif m == 0:\n    print(n - 1)\nelse:\n    div1 = set()\n    min_div1 = 100001\n    div2 = set()\n    max_div2 = -1\n\n    ans = 1\n\n    for i in range(m):\n        a, b = list(map(int, input().split()))\n        x, y = max(a, b), min(a, b)\n\n        if ans:\n            if x < max_div2 or y > min_div1:\n                ans = 0\n\n            if x in div2 or y in div1:\n                ans = 0\n\n            div1.add(x)\n            if x < min_div1:\n                min_div1 = x\n\n            div2.add(y)\n            if y > max_div2:\n                max_div2 = y\n\n    # print(max_div2)\n    # print(min_div1)\n\n    if ans:\n        for i in range(1, n + 1):\n            if i not in div1 and i not in div2:\n                if i > max_div2 and i < min_div1:\n                    ans += 1\n\n\n    print(ans)\n", "n, m = list(map(int, input().split()))\nS = [list(map(int, input().split())) for _ in range(m)]\nD1 = [0 for _ in range(n)]\nD2 = [0 for _ in range(n)]\nfor i in range(m):\n    s = S[i]\n    a = max(s)\n    b = min(s)\n    D1[a-1] += 1\n    D2[b-1] += 1\nok = 1\na1 = -1\na2 = -1\nfor i in range(n):\n    if D1[i] and D2[i]:\n        ok = 0\n    if D1[i] and a1 < 0:\n        a1 = i\n    if D2[i]:\n        a2 = i\nif a1 < a2:\n    ok = 0\nif ok:\n    r = 1\n    G = []\n    b = a1\n    if b == -1:\n        b = n+1\n    for i in range(n):\n        if D1[i] == 0 and D2[i] == 0:\n            #print(i,a1,a2)\n            if i >= a2 and i <= b:\n                r += 1\n    if a1 == -1:\n        r -= 1\n    if a2 == -1:\n        r -= 1\n    print(r)\nelse:\n    print(0)\n", "read = lambda: list(map(int, input().split()))\nn, m = read()\na = [0] * (n + 1)\nb = [0] * (n + 1)\nfor i in range(m):\n    u, v = read()\n    if u > v: u, v = v, u\n    a[u] = b[v] = 1\nL, R = 1, n\nfor i in range(1, n + 1):\n    if b[i] == 1:\n        R = i\n        break\nfor i in range(n, 0, -1):\n    if a[i] == 1:\n        L = i\n        break\nans = max(0, R - L)\nprint(ans)\n", "n,m=map(int,input().split())\na=list(0 for i in range(n))\ne=0\nif m==0:\n    print(n-1)\n    return\nfor i in range(m):\n    q,w=map(int,input().split())\n    if a[min(q,w)-1]==0:\n        a[min(q,w)-1]=1\n    if a[min(q,w)-1]==2:\n        e=1\n        break\n    if a[max(q,w)-1]==0:\n        a[max(q,w)-1]=2\n    if a[max(q,w)-1]==1:\n        e=1\n        break\nc=r=t=0\nif e==1:\n    print(0)\nelse:\n    for i in range(n):\n        if a[i]==1:\n            r=i\n    for i in range(n):\n        if a[i]==2:\n            t=i\n            break\n    print(t-r if t>r else 0)", "\n\n\ndef start() :\n    a = input().split()\n    n = int(a[0])\n    p = int(a[1])\n\n    small1 = n\n    large2 = 0\n\n    arr = []\n    for i in range(0, n):\n        arr.append(0)\n    pairs = []\n    for i in range(0, p):\n        pairs.append(input().split())\n\n\n    if(n<2):\n        print(\"0\")\n\n\n    for i in range(0, p):\n        s = pairs[i]\n        a1 = int(s[0])\n        a2 = int(s[1])\n        if(a1>a2):\n            if(arr[a1-1]==2):\n                print(\"0\")\n                return\n            else:\n                arr[a1-1] = 1\n                if(small1>a1):\n                    small1 = a1\n            if(arr[a2-1]==1):\n                print(\"0\")\n                return\n            else:\n                arr[a2-1] = 2\n                if(large2<a2):\n                    large2 = a2\n        else:\n            if(arr[a1-1]==1):\n                print(\"0\")\n                return\n            else:\n                arr[a1-1] = 2\n                if(large2<a1):\n                    large2 = a1\n            if(arr[a2-1]==2):\n                print(\"0\")\n                return\n            else:\n                arr[a2-1] = 1\n                if(small1>a2):\n                    small1 = a2\n\n    if(small1<=large2):\n        print(\"0\")\n        return\n\n\n\n    w = 1\n    for i in range(0, n):\n        if(arr[i]==0):\n            if(small1>(i+1)):\n                if(large2<(i+1)):\n                    w += 1\n    if(p==0):\n        w -= 1\n    print(str(w))\n\n\n    return\n\nstart()", "import sys\nimport math\nimport itertools as it\nimport operator as op\nimport fractions as fr\n\nn,m = map(int,sys.stdin.readline().split())\n\n\nl,r = 1,n-1\nfor _ in range(m):\n  a,b = map(int,sys.stdin.readline().split())\n  if a > b: a,b = b,a\n  l = max(l,a)\n  r = min(r,b-1)\n\nif l <= r:\n  r = r - l + 1\nelse:\n  r = 0\n\nprint(r)", "n,m = input().split(' ')\nn = int(n)\nm = int(m)\n\nav = []\nbv = []\n\nfor i in range(m):\n\tt = input()\n\ta,b = t.split(' ')\n\ta = int(a)\n\tb = int(b)\n\tif a > b: a,b = b,a\n\tav.append(a)\n\tbv.append(b)\n\nif m == 0:\n\tprint(n-1)\n\treturn\n\nres = min(bv) - max(av)\n\nif res <= 0 : res = 0\n\t\nprint(res)", "n,m=map(int,input().split())\na=[0]*(n+1)\nc=[0]*4\nd=[0]*4\nans=0\nfor i in range(m): \n  x,y=sorted(map(int,input().split()))\n  a[x]|=1\n  a[y]|=2\nfor x in a: c[x]+=1\nif c[3]==0:\n  for i in range(1,n):\n    if a[i]>1: break\n    d[a[i]]+=1\n    c[a[i]]-=1\n    if c[1]>0: continue\n    ans+=1\nprint(ans)", "def solve(data, n, m):\n    i = 1\n    j = n\n    flags1 = [False]*(n+1)\n    flags2 = [False]*(n+1)\n    for x in data:\n        if flags1[x[0]] and flags1[x[1]]:\n            return 0\n        elif flags2[x[0]] and flags2[x[1]]:\n            return 0\n        else:\n            if (x[0] > x[1]):\n                flags1[x[0]] = True\n                flags2[x[1]] = True\n            else:\n                flags2[x[0]] = True\n                flags1[x[1]] = True\n    while i<(n+1) and flags1[i]==False:\n        i+=1\n    while j>0 and flags2[j]==False:\n        j-=1\n    if (j==0):\n        return n-1\n    elif (i < j):\n        return 0\n    else:\n        return i-j\n        \nnumb = [int(x) for x in input().split()]\nn = numb[0]\nm = numb[1]\ndata = []\nfor k in range(m):\n    data.append([int(x) for x in input().split()])\n    \nprint(solve(data,n,m))", "def compute():\n    n, m = [int(s) for s in input().split()]\n    p = {}\n    for i in range(m):\n        u, v = [int(s) for s in input().split()]\n        if u > v:\n            if p.get(u) == 2:\n                return 0\n            if p.get(v) == 1:\n                return 0\n            p[u] = 1\n            p[v] = 2\n        else:\n            if p.get(v) == 2:\n                return 0\n            if p.get(u) == 1:\n                return 0\n            p[v] = 1\n            p[u] = 2\n    div1, div2 = [], []\n    for k, v in list(p.items()):\n        if v == 1:\n            div1.append(k)\n        else:\n            div2.append(k)\n    p_left = [i for i in range(1, n + 1) if i not in p]\n    if not div1:\n        if p_left:\n            div1.append(p_left[-1])\n            p_left.remove(p_left[-1])\n        else:\n            return 0\n    if not div2:\n        if p_left:\n            div2.append(p_left[0])\n            p_left.remove(p_left[0])\n        else:\n            return 0\n    div1_easiest = min(div1)\n    div2_hardest = max(div2)\n    if div2_hardest > div1_easiest:\n        return 0\n\n    res = 1\n    for i in range(len(p_left)):\n        if p_left[i] > div1_easiest:\n            pass\n        elif p_left[i] < div2_hardest:\n            pass\n        else:\n            res += 1\n\n    return res\nres = compute()\nprint(res)\n", "n, m = map(int, input().split())\nuv = []\nfor i in range(m):\n    mapp = list(map(int, input().split()))\n    mapp.sort()\n    uv.append(mapp)\n\nall_tasks = [1, n]\nfor s in uv:\n    all_tasks = [max(all_tasks[0], s[0]), min(all_tasks[1], s[1])]\n\nif all_tasks[1] - all_tasks[0] + 1 < 2:\n    print(0)\nelse:\n    print(all_tasks[1] - all_tasks[0])", "n,m = map(int,input().split())\n#a = [1]*n\ni,j = 2,n\nfor k in range(m):\n    x,y = map(int,input().split())\n    if x>y:x,y = y,x\n    i,j = max(i,x+1), min(j,y)\n#print(j-i+1)\nprint(max(j-i+1,0))", "def main():\n    n, m = list(map(int, input().split()))\n    lo, hi = 1, n\n    for _ in range(m):\n        u, v = list(map(int, input().split()))\n        if u > v:\n            if lo < v:\n                lo = v\n            if hi > u:\n                hi = u\n        else:\n            if lo < u:\n                lo = u\n            if hi > v:\n                hi = v\n    print(max(hi - lo, 0))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n\t(n, m) = (int(x) for x in input().split())\n\tL = [None] * m\n\tfor i in range(m):\n\t\t(x, y) = (int(x) for x in input().split())\n\t\tL[i] = (x, y)\n\tprint(solver(n, L))\n\ndef solver(n, L):\n\tused = [False] * (n + 1)\n\tdiv1 = set()\n\tdiv2 = set()\n\tfor (x, y) in L:\n\t\ta = max(x, y)\n\t\tb = min(x, y)\n\t\tif a in div2 or b in div1:\n\t\t\treturn 0\n\t\tdiv1.add(a)\n\t\tdiv2.add(b)\n\t\tused[a] = True\n\t\tused[b] = True\n\tif len(div1) == 0:\n\t\tdiv1Min = n + 1\n\telse:\n\t\tdiv1Min = min(div1)\n\tif len(div2) == 0:\n\t\tdiv2Max = 0\n\telse:\n\t\tdiv2Max = max(div2)\n\tif div2Max > div1Min:\n\t\treturn 0\n\telse:\n\t\tcount = 0\n\t\tfor i in range(div2Max + 1, div1Min):\n\t\t\tif used[i] == False:\n\t\t\t\tcount += 1\n\t\tif len(div1) == 0 and len(div2) == 0:\n\t\t\treturn count - 1\n\t\telif len(div1) == 0 or len(div2) == 0:\n\t\t\treturn count\n\t\telse:\n\t\t\treturn count + 1\n\t\t#if a < div1Min:\n\t\t#\tdiv1Min \n\nmain()\n# L = [(1, 4), (5, 2)]\n# print(solver(5, L))\n\n# L2 = [(1, 2), (2, 3), (1, 3)]\n# print(solver(3, L2))\n\n# L3 = [(3, 1), (3, 2)]\n# print(solver(3, L3))\n\n#print(solver(2, [(1, 2)]))\n# used = [False, True, True, True]\n# a = [b for b in used if b == True]\n# print(a)\n#print(max({1, 2, 3}))\n", "# coding: utf-8\n\n\n\n\n\nimport math\nimport string\nimport itertools\nimport fractions\nimport heapq\nimport collections\nimport re\nimport array\nimport bisect\n\ndef array2d(d1, d2, init = None):\n    return [[init for _ in range(d1)] for _ in range(d2)]\n\nn, m = list(map(int, input().split(\" \")))\n\ndiv1 = [n]\ndiv2 = [1]\n\nfor i in range(m):\n    u, v = list(map(int, input().split(\" \")))\n    if u > v:\n        u, v = (v, u)\n    div1.append(v)\n    div2.append(u)\n\nmin_div1 = min(div1)\nmax_div2 = max(div2)\nif min_div1 < max_div2:\n    print(0)\nelse:\n    print(min_div1 - max_div2)\n\n", "'''\nCreated on May 8, 2016\n\n@author: Md. Rezwanul Haque\n'''\ndef main():\n    n,m = map(int,input().split())\n    lo, hi = 1, n \n    for _ in range(m):\n        u,v = map(int,input().split())\n        if u>v :\n            if lo<v:\n                lo = v \n            if hi>u:\n                hi = u \n        elif v>u:\n            if lo<u:\n                lo = u \n            if hi>v:\n                hi = v  \n    print( max(hi - lo , 0)) \n            \n\ndef __starting_point():\n    main()\n__starting_point()", "#coding:utf-8\nn, m = map(int,input().split())\nL=1\nR=n\nfor i in range(m):\n\ta, b = map(int,input().split())\n\tif a>b:\n\t\ta,b=(b,a)\n\tL=max(a,L)\n\tR=min(b,R)\nif R-L<=0:\n\tprint(0)\nelse:\n\tprint(R-L)", "n, m = list(map(int, input().split()))\n\nA, B = 1, n\n\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    if u > v:\n        u, v = v, u\n    A = max(A, u)\n    B = min(B, v)\n\nprint(max(B-A, 0))", "inpt = [int(i) for i in input().split(' ')]\na = inpt[0]\nb = 1\ni = 0\nwhile i < inpt[1]:\n    ln = [int(j) for j in input().split(' ')]\n    ln = sorted(ln)\n    if a > ln[1]:\n        a = ln[1]\n    if b < ln[0]:\n        b = ln[0]\n    i += 1\nif (a-b) >= 0:\n    print(a-b)\nelse:\n    print(0)", "n,m=list(map(int,input().split()))\ndiv1=[]\ndiv2=[]\ni=0\nans=-5\nwhile i<m:\n    a,b=list(map(int,input().split()))\n    div1.append(max(a,b))\n    div2.append(min(a,b))\n    i+=1 \n\n\nif m==0:\n    print(n-1)\nelse:\n    ans=min(div1)-max(div2)\n    if ans<=0:\n        print(0)\n    else:\n        print(ans)\n    \n        \n", "n, m = list(map(int, input().split()))\ndiv1 = {}\ndiv2 = {}\ntot = n\nans = False\np = -1 #max div2\nq = 100000000000 #min div1\nfor i in range(m):\n    a, b = list(map(int, input().split()))\n    if b > a:\n        if a in div1:\n            ans = True\n        else:\n            div1[b] = 1\n            div2[a] = 1\n            p = max(a, p)\n            q = min(b, q)\n    else:\n        if a in div2:\n            ans = True\n        else:\n            div1[a] = 1\n            div2[b] = 1\n            p = max(b, p)\n            q = min(a, q)\n\nif ans:\n    print(0)\nelse:\n    tot = q-p-1\n    if tot < 0:\n        print(0)\n    elif tot == 0:\n        print(1)\n        \n    elif len(div1) == 0 and len(div2) == 0:\n        print(n-1)\n\n    else:\n        print(tot+1)\n    \n"]