["def main():\n    n, m = [int(i) for i in input().split()]\n    d = [list(input()) for i in range(n)]\n    \n    a = [0] * m\n    for i in range(m):\n        for j in range(n):\n            if d[j][i] == '*':\n                a[i] += 1\n    \n    x = y = 0\n    for i in range(1, m):\n        if a[i] > a[i - 1]: x = max(x, a[i] - a[i - 1])\n        else: y = max(y, a[i - 1] - a[i])\n    \n    print(x, y)\n    \n    \nmain()", "n, m = map(int, input().split())\na = [0] * m\nfor i in range(n):\n    b = list(input().rstrip())\n    for j in range(m):\n        if (b[j] == '*'):\n            a[j] = max(a[j], n - i)\nma = 0\nmi = 0\nfor i in range(m - 1):\n    ma = max(ma, a[i + 1] - a[i])\n    mi = min(mi, a[i + 1] - a[i])\nprint(ma, -mi)", "n,k=(int(z) for z in input().split())\nh=[0]*k\nfor i in range(n):\n\ts=input()\n\tfor j in range(k):\n\t\tif s[j]=='*':\n\t\t\th[j]+=1\nmi=0\nma=0\nfor i in range(1,k):\n\tif h[i-1]-h[i]>mi:\n\t\tmi=h[i-1]-h[i]\n\tif h[i]-h[i-1]>ma:\n\t\tma=h[i]-h[i-1]\nprint(ma,mi)", "h, w = list(map(int, input().split()))\nhigh = [0 for i in range(w)]\nfor i in range(h, 0, -1):\n    s = input()\n    for j in range(w):\n        if s[j] == '*':\n            high[j] = max(i, high[j])\nmx = 0\nmn = 0\nfor i in range(w - 1):\n    mx = max(mx, high[i + 1] - high[i])\n    mn = min(mn, high[i + 1] - high[i])\nprint(abs(mx), abs(mn))\n", "n, m = list(map(int, input().split()))\np = []\nfor i in range(n):\n    p.append(list(input()))\ne = []\nfor i in range(m):\n    col = 0\n    for t in range(n):\n       if p[t][i] == '*':\n           col += 1\n    e.append(col)\nmax1 = 0\nmax2 = 0\nfor i in range(m - 1):\n    max1 = max(max1, e[i + 1] - e[i])\nfor i in range(1, m):\n    max2 = min(max2, e[i] - e[i - 1])\nprint(max1, -max2)\n           \n", "h, w = list(map(int, input().split()))\n\nmountains = [input() for i in range(h)]\n\nheights = [0 for i in range(w)]\n\nfor x in range(w):\n    for y in range(h):\n        if mountains[h-1-y][x] == '*': heights[x] = y\n\nup = 0\ndown = 0\n\nfor i in range(w-1):\n    a = heights[i]\n    b = heights[i+1]\n    c = abs(a-b)\n    if a > b and c > down: down = c\n    if a < b and c > up: up = c\n\nprint(up, down)\n\n", "n, m = list(map(int, input().split()))\npole = []\nfor i in range(n):\n    s = input()\n    pole.append(s)\nans = []\nfor j in range(m):\n    for i in range(n):\n        if pole[i][j] == '*':\n            ans.append(n - i)\n            break\nans2 = 0\nans1 = 0\nnewans = []\nnewans.append(ans[0])\nfor i in ans:\n    newans.append(i)\nnewans.append(ans[-1])\nfor i in range(1, m + 1):\n    ans1 = max(ans1, newans[i] - newans[i - 1])\n    ans2 = max(ans2, newans[i] - newans[i + 1])\nprint(ans1, ans2)\n", "n,m = map(int, input().split())\nA = [0] * n\nfor i in range(n):\n    per = input()\n    A[i] = per\nt = n\nfor i in range(n):\n    if A[i][0] == '*':\n        t = i\n        break\nper1 = 0\nper2 = 0\n\nfor j in range(1, m):\n    s=m\n    for i in range(n):\n        \n        if A[i][j] == '*':\n            s = i\n            break\n    \n    if t > s:\n        per1 = max(per1, t-s)\n    else:\n        per2 = max(per2, s-t)\n    t=s\nprint(per1,per2)", "n, m = map(int, input().split())\nmaps = []\nfor i in range(n):\n    maps.append(input())\nup, down = 0, 0\nfor i in range(m):\n    current = 0\n    for j in range(n):\n        if maps[j][i] == '*':\n            current += 1\n    if i:\n        up = max(up, current - previous)\n        down = max(down, previous - current)\n    previous = current\nprint(up, down)", "def mapp(s):\n\treturn 1 if s == '*' else 0\n\nn, m = list(map(int, input().split()))\nx = []\nfor i in range(n):\n\tx.append(list(map(mapp, input())))\ns = [0]*m\nfor i in range(m):\n\tfor j in range(n):\n\t\ts[i] += x[j][i]\nh = 0\nf = 0\nfor i in range(1, m):\n\tif s[i] - s[i - 1] > h:\n\t\th = s[i] - s[i - 1]\n\telif s[i] - s[i - 1] < f:\n\t\tf = s[i] - s[i - 1]\nprint(h, abs(f))", "n, m = map(int,input().split(\" \"))\nmatrix = []\nfor i in range(n):\n    matrix.append(input())\n\nm_value = []\n\nfor i in range(m):\n    for j in range(n):\n        if matrix[j][i] == \"*\":\n            m_value.append(n-j)\n            break\n\nmax_up = 0\nmax_down = 0\n\nfor i in range(1, m):\n    if m_value[i]-m_value[i-1] > max_up:\n        max_up = m_value[i]-m_value[i-1]\n    if m_value[i]-m_value[i-1] < max_down:\n        max_down = m_value[i]-m_value[i-1]\n\n\nprint(max_up,-max_down)", "n, m = [int(x) for x in input().split()]\na = [[0] * m for i in range(n)]\nfor i in range(n):\n    a[i] = list(input())\ni = 0\nj = 0\nans1 = 0\nans2 = 0\ncnt = 0\ntemp = [0] * m\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == '*':\n            temp[j] += 1\nfor i in range(1, m):\n    ans1 = max(ans1, temp[i] - temp[i - 1])\n    ans2 = max(ans2, temp[i - 1] - temp[i])\nprint(ans1, ans2)", "n, m = map(int, input().split())\nA = [0]*m\n\nfor i in range(n):\n    B = list(input())\n    for j in range(m):\n        if B[j]=='*':\n            A[j]+=1\nmp = 0\nms = 0\nfor i in range(m-1):\n    if A[i]<A[i+1] and A[i+1]-A[i]>mp:\n        mp = A[i+1]-A[i]\n    elif A[i]>A[i+1] and A[i]-A[i+1]>ms:\n        ms = A[i]-A[i+1]\nprint(mp, ms)", "n, m = map(int, input().split())\nu, d = 0, 0\nans1 = 0\nans2= 0\ndata = [input() for i in range(n)]\nfor i in range(m):\n    help = ''\n    for j in range(n):\n        help += data[j][i]\n    u = d\n    d = n - help.find('*')\n    delt = d - u\n    if i != 0:\n        if delt < 0:\n            ans2 = max(ans2, abs(delt))\n        else:\n            ans1 = max(ans1, abs(delt))\nprint(ans1, ans2)", "n, m = map(int, input().split())\narr = [list(map(str, input())) for i in range(n)]\nans = [0] * m\nfor i in range(n):\n\tfor j in range(m):\n\t\tif (arr[i][j] == '*'):\n\t\t\tans[j] += 1\npos = ans[0]\nup = 0\ndn = 0\nfor i in range(1, m):\n\tnpos = ans[i]\n\tif (npos < pos):\n\t\tdn = max(dn, pos - npos)\n\telse:\n\t\tup = max(up, npos - pos)\n\tpos = npos\nprint(up, dn)", "n,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n    s=input()\n    s=s.replace('',' ')\n    s=s[1:-1]\n    a+=[list(s.split())]\nmp=0\nms=0\nmv=[0]*m\nfor i in range(m):\n    for j in range(n):\n        if a[j][i]=='*':\n            mv[i]=n-j\n            break\nfor i in range(m-1):\n    mp=max(mp,mv[i+1]-mv[i])\n    ms=max(ms,mv[i]-mv[i+1])\nprint(mp,ms)\n        \n    \n", "s = input().split()\nn = int(s[0])\nm = int(s[1])\na = []\nb = []\ndown = []\nup = []\nfor i in range(n):\n    a.append(input())\nfor i in range(m):\n    for j in range(n):\n        if a[j][i] == '*':\n            b.append(n-j)\n            break\n\nfor i in range(len(b)-1):\n    if b[i] <= b[i+1]:\n        up.append(b[i+1]-b[i])\n    else:\n        down.append(b[i] - b[i+1])\nif len(down) == 0:\n    down.append(0)\nif len(up) == 0:\n    up.append(0)\nprint(max(up), max(down))\n        \n", "def getMapH(Map):\n    mapHieght=[]\n    temp=int(0)\n    for x in range(len(Map[0])):\n        for y in range(len(Map)):\n\n            if(Map[y][x]==\".\"):\n                temp+=1\n                continue\n            else:\n                break\n        mapHieght+=[len(Map)-temp]\n        temp=0\n    return mapHieght\n\ndef getMaxdelta(mapH):\n\n    res=int(0)\n    for i in range(len(mapH)-1):\n        if(mapH[i+1]-mapH[i])>0:\n            res=max(res,mapH[i+1]-mapH[i])\n        \n    return res\n\ndef getMindelta(mapH):\n\n    res=int(0)\n    for i in range(len(mapH)-1):\n        if(mapH[i]-mapH[i+1])>0:\n            res=max(mapH[i]-mapH[i+1],res)\n        \n    return res\n\n\ninStr = input()\nn,m=inStr.split()\n#n \u0441\u0442\u0440\u043e\u043a \u043f\u043e m \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439\nmymap=[]\nmapHieght=[]\nfor i in range(int(n)):\n    inStr = input()\n    mymap+=[inStr]\n\n\nprint(getMaxdelta(getMapH(mymap)),getMindelta(getMapH(mymap)))\n\n\n", "n,m=list(map(int,input().split()))\na=[list(input()) for i in range(n)]\np1=0\npp=0\npm=0\nsm=0\nd=[True]*m\nfor i in range(m):\n\tfor j in range(n):\n\t\tif i==0 and a[j][i]=='*' and d[i]:\n\t\t\tpp=n-j\n\t\t\td[i]=False\n\t\telif d[i] and a[j][i]=='*':\n\t\t\tp1=n-j\n\t\t\tif pp>p1 and pp-p1>sm:\n\t\t\t\tsm=pp-p1\n\t\t\tif p1-pp>pm:\n\t\t\t\tpm=p1-pp\n\t\t\tpp=p1\n\t\t\tp1=n-j\n\t\t\td[i]=False\n\nprint(pm,sm)\n", "def read_ints():\n    return [int(x) for x in input(' ').split()]\n\n\ndef main():\n    n, m = read_ints()\n    field = [list(input()) for _ in range(n)]\n    heights = [sum([1 if field[j][i] == '*' else 0 for j in range(n)]) for i in range(m)]\n    INF = 1**10\n    max_up = 0\n    max_down = 0\n    for i in range(m-1):\n        delta = heights[i+1] - heights[i]\n        max_up = max(max_up, delta)\n        max_down = max(max_down, -delta)\n    print(max_up, max_down)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n,m=list(map(int,input().split()))\na=[]\nfor i in range(n):\n    s=input()\n    v=[]\n    for i in s:\n        if i=='.':\n            v.append(0)\n        else:\n            v.append(1)\n    a.append(v)\nsp=0\npod=0\nfor i in range(m-1):\n    s1=0\n    s2=0\n    for j in range(n):\n        s1+=a[j][i]\n        s2+=a[j][i+1]\n        if s1-s2<0 and abs(s1-s2)>pod:\n            pod=abs(s1-s2)\n        elif s1-s2>0 and abs(s1-s2)>sp:\n            sp=abs(s1-s2)\nprint(pod,sp)\n            \n            \n    \n", "strin1 = str(input())\nn = int(strin1.split()[0])\nm = int(strin1.split()[1])\narr = [0]*m\nfor i in range(n):\n    currStr = str(input())\n    for j in range(m):\n        if((currStr[j] == '*') & (arr[j]==0)):\n            arr[j] = n-i\nmaxUp = 0\nmaxDown = 0\nfor i in range(m-1):\n    if(arr[i+1] > arr[i]):\n        maxUp = max(arr[i+1]-arr[i],maxUp) \n    if(( i > 0)&(arr[i]<arr[i-1])):\n        maxDown = max(arr[i-1]-arr[i],maxDown)\n    if (( i == m-2)&(arr[i]>arr[i+1])):\n        maxDown = max(arr[i] - arr[i+1],maxDown)\n        \nprint(maxUp,maxDown)\n", "n, m = map(int, input().split())\na = [0] * m;\nfor i in range(n):\n    s = input()\n    for j in range(m):\n        if s[j] == '*':\n            if a[j] == 0:\n                a[j] = n - i\n\nspusk = 0\npod = 0\nfor i in range(m - 1):\n    p = a[i + 1] - a[i]\n    if p > 0:\n        if p > pod:\n            pod = p\n    else:\n        p *= (-1)\n        if spusk < p:\n            spusk = p\n\nprint(pod, spusk)", "n,m = list(map(int,input().split()))\nA = [list(input()) for i in range(n)]\np = 0\ns = 0\nb = 0\nB =[]\nfor i in range(m):\n    for j in range(n):\n        if A[j][i] == '*':\n            b += 1\n    B.append(b)\n    b = 0\nfor i in range(m-1):\n    if B[i] > B[i+1] and (B[i] - B[i+1]) > s: \n        s = B[i] - B[i+1]\n    elif B[i] < B[i+1] and (B[i+1] - B[i]) > p:\n        p = B[i+1] - B[i]\nprint(p,s)\n\n\n\n\n\n\n\n\n"]