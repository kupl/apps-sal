["n, k = map(int, input().split())\narr = [int(i) for i in input().split()]\nres = [[] for i in range(n)]\nc = 0\nwhile True:\n    z = 0\n    for i in arr:\n        if i > 0:\n            z += 1\n    if z == 0:\n        break\n    if z == n:\n        for i in range(n):\n            arr[i] -= 1\n            res[i].append(1)\n    else:\n        c += 1\n        if c > k:\n            break\n        for i, j in enumerate(arr):\n            if j > 0:\n                arr[i] -= 1\n                res[i].append(c)\nif c > k:\n    print('NO')\nelse:\n    print('YES')\n    for i in res:\n        for j in i:\n            print(j, end = ' ')\n        print()", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nmn = min(a)\nif (max(a) - mn > k):\n\tprint('NO')\nelse:\n\tprint('YES')\n\tfor i in range(n):\n\t\tarr = [1]*mn\n\t\tarr += [1+i for i in range(a[i]-mn)]\n\t\tprint(' '.join(map(str, arr)))", "n, k = [int(x) for x in input().split()]\n\na = [int(x) for x in input().split()]\n\nmn = min(a)\nmx = max(a)\n\nif mx - mn > k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for i in range(n):\n        for j in range(a[i]):\n            l = [1] * a[i]\n            for p in range(mn + 1, a[i]):\n                l[p] += l[p-1]\n        print(\" \".join(str(x) for x in l))\n", "import sys\n\nn, k = list(map(int, input().split()))\nkeeps = list(map(int, input().split()))\nmin_k = min(keeps)\nans = [0] * n\nfor i in range(n):\n\n    ans[i] = (['1'] * (min(min_k + 1, keeps[i])))\n    j = 2\n    while j <= k and len(ans[i]) < keeps[i]:\n        ans[i].append(str(j))\n        j += 1\n    if len(ans[i]) < keeps[i]:\n        print('NO')\n        return\nprint('YES')\nfor i in range(n):\n    print(' '.join(ans[i]))\n\n", "\"\"\"\nCodeforces Contest 289 Div 2 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    n,k = read()\n    a = read()\n    if max(a) - min(a) > k: return \"NO\"\n    print(\"YES\")\n    for i in a:\n        print(\"1 \" * min(a) + \" \".join(map(str, range(1, i-min(a)+1))))\n\n\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "def main():\n    n, k = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    mi, ma = min(l), max(l)\n    if ma - mi > k:\n        print('NO')\n        return\n    print('YES')\n    res = ['1'] * (mi + 1)\n    for i in range(2, k + 1):\n        res.append(str(i))\n    for a in l:\n        print(' '.join(res[:a]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, colors = map(int, input().split())\nlens = list(map(int, input().split()))\nq = [[] for i in range(n)]\n\ndef end():\n    for i in range(n):\n        if lens[i] != len(q[i]):\n            return False\n    return True\n\nmi = min(lens)\nfor i in range(n):\n    while len(q[i]) < min(lens[i], 1 + mi):\n        q[i].append(1)\n\nk = 1\nwhile not end():\n    k += 1\n    for i in range(n):\n        if len(q[i]) < lens[i]:\n            q[i].append(k)\n\nma = max(map(max, q))\nif ma <= colors:\n    print('YES')\n    for w in q:\n        for i in w:\n            print(i, end=' ')\n        print()\nelse:\n    print('NO')", "import sys\nf = sys.stdin\n#f = open('H:\\\\Portable Python 3.2.5.1\\\\test_248B1.txt') \n\nn, k = list(map(int, f.readline().strip().split()))\na = [int(u) for u in f.readline().strip().split()]\n\nmin_a = min(a)\nmax_a = max(a)\n\nif max_a>min_a+k:\n    print('NO')\nelse:\n    print('YES')\n \n    for i in range(n):\n        d = ['']*a[i]\n        for j in range(a[i]):\n            if j<=min_a:\n                d[j] = '1'\n            else:\n                d[j] = str(1 + j - min_a)\n        print(' '.join(d))\n", "#!/usr/bin/env python\n\nn, k = list(map(int, input().split(' ')))\n\nnums = list(map(int, input().split(' ')))\npebbles = [[] for i in range(len(nums))]\n\nsmallest = min(nums)\nprefix = smallest * [1]\nnums = list([x - smallest for x in nums])\n\nfor c in range(1, k+1):\n    for i, e in enumerate(nums):\n        if e != 0:\n            pebbles[i].append(c)\n            nums[i] -= 1\n    \nif any([x > 0 for x in nums]):\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    prefix = ' '.join(map(str, prefix))\n    for p in pebbles:\n        print(prefix + ' ' + ' '.join(map(str, p)))\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nif max(a) - min(a) > k:\n    print('NO')\nelse:\n    print('YES')\n    m = min(a)\n    for num in a:\n        print(*[1] * m + list(range(1, 1 + num - m)))\n", "n, k = map(int, input().split())\ndata = list(map(int, input().split()))\n\nneed = 0\nres = [list() for _ in range(n)]\n\n\ndef custom_min(data):\n    min = None\n    for x in data:\n        if min is None or x < min:\n            min = x\n\n    return 1 if min == 0 else min\n\n\ndef not_all_zeros(data):\n    for x in data:\n        if x != 0:\n            return True\n    return False\n\n\ncolor = 1\nmin_v = custom_min(data)\n\nwhile not_all_zeros(data) != 0:\n    min_v = custom_min(data)\n\n    if color > k:\n        print(\"NO\")\n        break\n\n    for i in range(len(data)):\n        if data[i] != 0:\n            val = min_v + 1 if (data[i] > min_v and color == 1) else min_v\n            data[i] -= val\n            res[i].append((color, val))\n\n    color += 1\nelse:\n    print('YES')\n    for l in res:\n        s = []\n\n        for x in l:\n            s += [str(x[0])] * x[1]\n\n        print(' '.join(s))"]