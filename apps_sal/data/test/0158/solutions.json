["n = int(input())\nz = list(map(int, input().split()))\nz.sort()\nif z[n - 1] < z[n]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n    \n", "n=int(input())\na=sorted(list(map(int,input().split())))\nprint('YES'if a[n-1]<a[n] else 'NO')\n", "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\nif(nums[len(nums)//2 - 1] < nums[len(nums)//2]):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n = int(input())\na = list(map(int, input().split()))\n\nf = True\n\na.sort()\n\nif a[n] == a[n - 1]:\n    f = False\n\nif f == True:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "input()\na = sorted(map(int, input().split()))\n\nif a[len(a)//2 -1] < a[len(a)//2]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n = int (input())\na = sorted([int(i) for i in input().split()])\nif a[n-1] < a[n]:\n    print ('YES')\nelse:\n    print ('NO')", "n = int(input())\na = [int(i) for i in input().split()]\na.sort()\nif a[n] == a[n - 1]:\n\tprint('NO')\nelse:\n\tprint('YES')", "n = int(input())\na = sorted(map(int, input().split()))\nprint('YES' if a[n] > a[n-1] else 'NO')", "n=int(input())\na=list(map(int ,input().strip().split(' ')))\na.sort()\nif a[n-1]<a[n]:\n  print('YES')\nelse:\n  print('NO')", "import sys, os\n\nn = int(input())\nn *= 2\ndata = list(map(int, input().split()))\ndata = sorted(data)\ndata1 = data[:n//2]\ndata2 = data[n//2:]\nfor i in range(n // 2):\n    if data1[i] in data2:\n        print(\"NO\")\n        return\n        sys.exit\n        os.abort()\nprint(\"YES\")\n", "n = int(input())\n\na = list(map(int, input().split()))\n\na.sort()\n\nprint(\"YES\" if a[n] > a[n - 1] else \"NO\") \n", "\nn = int(input())\nplayers = list(map(int, input().split()))\n\nplayers.sort()\n\nif players[n] > players[n - 1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n", "n = int(input())\n\nl=[int(i) for i in input().split()]\n\nl.sort()\n\nif l[n]>l[n-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n = int(input())\nar = list(map(int, input().split()))\nar.sort()\na = ar[:n]\nb = ar[n:]\nif len(set(a) & set(b)) == 0:\n    print('YES')\nelse:\n    print('NO')", "n=int(input())\na=list(map(int, input().split()))\na.sort()\nif a[n-1]<a[n]:\n    print('YES')\nelse:\n    print('NO')\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[n - 1] == a[n]:\n    print('NO')\nelse:\n    print('YES')\n", "n = int(input())\na = [int(x) for x in input().split()]\nassert(len(a) == n+n)\n\na.sort()\nif a[n-1] < a[n]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n = int(input())\nA = sorted([int(i) for i in input().split()])\nif A[n] > A[n-1]:\n    print('YES')\nelse:\n    print('NO')\n\n", "n = int(input())\nl  = sorted(map(int, input().split()))\n\nprint(['NO', 'YES'][l[n] > l[n-1]])\n", "n = int(input())\ndata = list(map(int, input().split()))\ndata.sort()\nif n == 1 and data[0] == data[1] or data[0] == data[-1] or data[n] == data[n - 1]:\n    print('NO')\nelse:\n    print('YES')\n", "def main():\n    nbEquipe=int(input())\n    liste=list(map(int,input().split()))\n    liste.sort()\n    if(liste[nbEquipe]>liste[nbEquipe-1]):\n        print(\"YES\")\n    else:\n        print(\"NO\")\nmain()\n    \n", "# A. Chess Tourney\n\nn = int(input())\nr = list(map(int, input().split()))\n\nr = sorted(r)\n\nf, s = min(r[n:]), max(r[:n])\n\nif f > s:\n\tprint('YES')\nelse:\n\tprint('NO')\n", "n=int(input())\na=[int(i) for i in input().split()]\na=sorted(a)\nb=a[:int(len(a)/2)]\nc=a[int(len(a)/2):]\nif(c[0]>b[len(b)-1]):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\na = list(sorted(list(map(int, input().split())), reverse=True))\n\nif min(a[:n]) > max(a[n:]):\n    print('YES')\nelse:\n    print('NO')\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[n - 1] == a[n]:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n"]