["import sys\n\nrd = lambda : sys.stdin.readline().rstrip()\n\nt = int(rd())\nfor _ in range(t):\n    n = int(rd())\n    a = list(map(int, rd().split()))\n    b = []\n    res_a, res_b = 1, 1e18\n    \n    a = sorted(a)\n    i = 0\n    while i < n-1:\n        if a[i] == a[i+1]:\n            b.append(a[i])\n            i += 1\n            \n        i += 1\n        \n    p2s = lambda x, y : (x+y)**2/(x*y)\n    \n    for i in range(len(b)-1):\n        if p2s(res_a, res_b) > p2s(b[i], b[i+1]):\n            res_a, res_b = b[i], b[i+1]\n            \n    print(res_a, res_a, res_b, res_b)\n    \n", "import sys\nf=sys.stdin\nout=sys.stdout\n\ndef fun(l,b):\n\treturn (((2*(l+b))**2)/(l*b))\n\nt=int(f.readline().rstrip('\\r\\n'))\nfor _ in  range(t):\n\tn=int(f.readline().rstrip('\\r\\n'))\n\ta=list(map(int,f.readline().rstrip('\\r\\n').split()))\n\td={}\n\tarr=[]\n\tfor i in a:\n\t\tif i in d:\n\t\t\td[i]+=1\n\t\telse:\n\t\t\td[i]=1\n\t\t\tarr.append(i)\n\tarr.sort()\n\tmi=float('inf')\n\ttmp=-1\n\tl1,b1=-1,-1\n\tfor i in range(len(arr)):\n\t\tif tmp==-1:\n\t\t\tif d[arr[i]]>=4:\n\t\t\t\ttmp=arr[i]\n\t\t\t\tpmi=mi\n\t\t\t\tmi=min(mi,fun(arr[i],arr[i]))\n\t\t\t\tif pmi!=mi:\n\t\t\t\t\tl1,b1=arr[i],arr[i]\n\t\t\telif d[arr[i]]>=2:\n\t\t\t\ttmp=arr[i]\n\t\telse:\n\t\t\tif d[arr[i]]>=4:\n\t\t\t\ttmp=arr[i]\n\t\t\t\tpmi=mi\n\t\t\t\tmi=min(mi,fun(arr[i],arr[i]))\n\t\t\t\tif pmi!=mi:\n\t\t\t\t\tl1,b1=arr[i],arr[i]\n\t\t\telif d[arr[i]]>=2:\n\t\t\t\tpmi=mi\n\t\t\t\tmi=min(mi,fun(tmp,arr[i]))\n\t\t\t\tif pmi!=mi:\n\t\t\t\t\tl1,b1=tmp,arr[i]\n\t\t\t\ttmp=arr[i]\n\tout.write(str(l1)+\" \"+str(l1)+\" \"+str(b1)+\" \"+str(b1)+\"\\n\")", "import sys\n\nrd = lambda : sys.stdin.readline().rstrip()\n\nt = int(rd())\nfor _ in range(t):\n    n = int(rd())\n    a = list(map(int, rd().split()))\n    b = []\n    res_a, res_b = 1, 1e18\n    \n    a = sorted(a)\n    i = 0\n    while i < n-1:\n        if a[i] == a[i+1]:\n            b.append(a[i])\n            i += 1\n            \n        i += 1\n        \n    p2s = lambda x, y : (x+y)**2/(x*y)\n    \n    for i in range(len(b)-1):\n        if p2s(res_a, res_b) > p2s(b[i], b[i+1]):\n            res_a, res_b = b[i], b[i+1]\n            \n    print(res_a, res_a, res_b, res_b)\n    \n", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print(a[0],a[0],a[0],a[0])\n    else:\n        a.sort()\n        g1 = False\n        d = {}\n        mx = 10001\n        for i in a:\n            if i not in d.keys():\n                d[i] = 1\n            else:\n                d[i] += 1\n            if d[i] == 4:\n                g1 = True\n                if i < mx:\n                    mx = i\n        if g1:\n            print(mx, mx, mx, mx)\n        else:\n            res = []\n            for k in d.keys():\n                if d[k] >= 2:\n                    res.append(k)\n            m = len(res)\n            minj = 0\n            for j in range(m - 1):\n                if res[j]*res[j+1]*(res[minj]**2 + res[minj+1]**2) > res[minj]*res[minj+1]*(res[j]**2+res[j+1]**2):\n                    minj = j\n            print(res[minj],res[minj],res[minj+1],res[minj+1])", "#by Nick \"LordVader\" Proshin.\nimport sys\ninput = sys.stdin.readline\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print(a[0],a[0],a[0],a[0])\n    else:\n        a.sort()\n        g1 = False\n        d = {}\n        mx = 10001\n        for i in a:\n            if i not in d.keys():\n                d[i] = 1\n            else:\n                d[i] += 1\n            if d[i] == 4:\n                g1 = True\n                if i < mx:\n                    mx = i\n        if g1:\n            print(mx, mx, mx, mx)\n        else:\n            res = []\n            for k in d.keys():\n                if d[k] >= 2:\n                    res.append(k)\n            m = len(res)\n            minj = 0\n            for j in range(m - 1):\n                if res[j]*res[j+1]*(res[minj]**2 + res[minj+1]**2) > res[minj]*res[minj+1]*(res[j]**2+res[j+1]**2):\n                    minj = j\n            print(res[minj],res[minj],res[minj+1],res[minj+1])", "#by Nick \"LordVader\" Proshin\nimport sys\ninput = sys.stdin.readline\nout = sys.stdout\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        print(a[0],a[0],a[0],a[0])\n    else:\n        a.sort()\n        g1 = False\n        d = {}\n        mx = 10001\n        for i in a:\n            if i not in list(d.keys()):\n                d[i] = 1\n            else:\n                d[i] += 1\n            if d[i] == 4:\n                g1 = True\n                if i < mx:\n                    mx = i\n        if g1:\n            out.write(str(mx)+\" \"+str(mx)+\" \"+str(mx)+\" \"+str(mx)+\"\\n\")\n        else:\n            res = []\n            for k in list(d.keys()):\n                if d[k] >= 2:\n                    res.append(k)\n            m = len(res)\n            minj = 0\n            for j in range(m - 1):\n                if res[j]*res[j+1]*(res[minj]**2 + res[minj+1]**2) > res[minj]*res[minj+1]*(res[j]**2+res[j+1]**2):\n                    minj = j\n            out.write(str(res[minj])+\" \"+str(res[minj])+\" \"+str(res[minj+1])+\" \"+str(res[minj+1])+\"\\n\")\n", "#by Nick \"LordVader\" Proshin\nimport sys\ninput = sys.stdin.readline\nout = sys.stdout\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if len(set(a)) == 1:\n        out.write(str(a[0])+\" \"+str(a[0])+\" \"+str(a[0])+\" \"+str(a[0])+\"\\n\")\n    else:\n        a.sort()\n        g1 = False\n        d = {}\n        mx = 10001\n        for i in a:\n            if i not in d.keys():\n                d[i] = 1\n            else:\n                d[i] += 1\n            if d[i] == 4:\n                g1 = True\n                if i < mx:\n                    mx = i\n        if g1:\n            out.write(str(mx)+\" \"+str(mx)+\" \"+str(mx)+\" \"+str(mx)+\"\\n\")\n        else:\n            res = []\n            for k in d.keys():\n                if d[k] >= 2:\n                    res.append(k)\n            m = len(res)\n            minj = 0\n            for j in range(m - 1):\n                if res[j]*res[j+1]*(res[minj]**2 + res[minj+1]**2) > res[minj]*res[minj+1]*(res[j]**2+res[j+1]**2):\n                    minj = j\n            out.write(str(res[minj])+\" \"+str(res[minj])+\" \"+str(res[minj+1])+\" \"+str(res[minj+1])+\"\\n\")", "from sys import stdout, stdin\nimport collections\n\n\ndef read():\n    return stdin.readline().rstrip('\\n')\n\n\ndef read_array(sep=None, maxsplit=-1):\n    return read().split(sep, maxsplit)\n\n\ndef read_int():\n    return int(read())\n\n\ndef read_int_array(sep=None, maxsplit=-1):\n    return [int(a) for a in read_array(sep, maxsplit)]\n\n\ndef write(*args, **kwargs):\n    sep = kwargs.get('sep', ' ')\n    end = kwargs.get('end', '\\n')\n    stdout.write(sep.join(str(a) for a in args) + end)\n\n\ndef write_array(array, **kwargs):\n    sep = kwargs.get('sep', ' ')\n    end = kwargs.get('end', '\\n')\n    stdout.write(sep.join(str(a) for a in array) + end)\n\n\ndef f(a, b):\n    return a / b + b / a\n\n\nn = read_int()\nresults = []\nfor _ in range(n):\n    read_int()\n    arr = collections.Counter(read_int_array(sep=' '))\n    prev_el, next_el = None, None\n    min_sticks_el = None\n    min_sticks = None\n    keys = sorted(arr.keys())\n    for k in keys:\n        if arr[k] > 4:\n            arr[k] = 4\n        while arr[k] > 1:\n            arr[k] -= 2\n            prev_el, next_el = next_el, k\n            if prev_el and next_el:\n                if not min_sticks_el:\n                    min_sticks_el = (prev_el, next_el)\n                    min_sticks = f(prev_el, next_el)\n                    continue\n                current_value = f(prev_el, next_el)\n                if min_sticks > current_value:\n                    min_sticks = current_value\n                    min_sticks_el = (prev_el, next_el)\n    results.append(\"{0} {0} {1} {1}\".format(min_sticks_el[0], min_sticks_el[1]))\n\nprint('\\n'.join(results))\n", "from sys import stdout, stdin\n\n\ndef read():\n    return stdin.readline().rstrip('\\n')\n\n\ndef read_array(sep=None, maxsplit=-1):\n    return read().split(sep, maxsplit)\n\n\ndef read_int():\n    return int(read())\n\n\ndef read_int_array(sep=None, maxsplit=-1):\n    return [int(a) for a in read_array(sep, maxsplit)]\n\n\ndef write(*args, **kwargs):\n    sep = kwargs.get('sep', ' ')\n    end = kwargs.get('end', '\\n')\n    stdout.write(sep.join(str(a) for a in args) + end)\n\n\ndef write_array(array, **kwargs):\n    sep = kwargs.get('sep', ' ')\n    end = kwargs.get('end', '\\n')\n    stdout.write(sep.join(str(a) for a in array) + end)\n\n\ndef f(a, b):\n    return a / b + b / a\n\n\nn = read_int()\nresults = []\nfor _ in range(n):\n    read_int()\n    arr = sorted(read_int_array(sep=' '))\n    i = 0\n    len_arr_minus_one = len(arr) - 1\n    prev_el, next_el = None, None\n    min_sticks_el = None\n    min_sticks = None\n    while i < len_arr_minus_one:\n        if arr[i] == arr[i + 1]:\n            prev_el, next_el = next_el, arr[i]\n            i += 2\n            if prev_el and next_el:\n                if not min_sticks_el:\n                    min_sticks_el = (prev_el, next_el)\n                    min_sticks = f(prev_el, next_el)\n                    continue\n                current_value = f(prev_el, next_el)\n                if min_sticks > current_value:\n                    min_sticks = current_value\n                    min_sticks_el = (prev_el, next_el)\n        else:\n            i += 1\n    results.append(\"{0} {0} {1} {1}\".format(min_sticks_el[0], min_sticks_el[1]))\n\nprint('\\n'.join(results))\n", "import sys\nfrom collections import *\nl=sys.stdin.readlines()[2::2]\nr=[]\nfor a in l:\n a=Counter(map(int,a.split()))\n s=sorted([k for k in a if a[k]>1]+[k for k in a if a[k]>3])\n a=min(zip(s,s[1:]),key=lambda a:sum(a)**2/a[0]/a[1])\n r+=['%d %d '%a*2]\nprint('\\n'.join(r))", "import sys\n\nread=lambda :sys.stdin.readline().strip()\nprcs=lambda x,y:(x+y)**2/(x*y)\n\nn=int(read())\nfor i in range(0,n):\n    t=int(read())\n    a=list(map(int,read().split()))\n    a.sort()\n    dub=[]\n    ind=0\n    while(ind<t-1):\n        if(a[ind]==a[ind+1]):\n            dub.append(a[ind])\n            ind+=1\n        ind+=1\n    # print(dub)\n    mn=prcs(dub[0],dub[1])\n    index=0\n    for j in range(0,len(dub)-1):\n        if(mn>prcs(dub[j],dub[j+1])):\n            mn=prcs(dub[j],dub[j+1])\n            index=j\n        # print(dub[j],dub[j+1],prcs(dub[j],dub[j+1]),mn,index)\n    print(dub[index],dub[index],dub[index+1],dub[index+1])\n\n", "import sys\nt=int(sys.stdin.readline())\narrz=[]\nfor l in range(t):\n    n=int(sys.stdin.readline())\n    arr=list(map(int,sys.stdin.readline().split()))\n    arr.sort()\n    flag=0\n    arr2=[]\n    dict1={}\n    for i in range(n):\n        try:\n            dict1[arr[i]]+=1\n            if(dict1[arr[i]]==2):\n                arr2.append(arr[i])\n                dict1[arr[i]]=0\n        except:\n            KeyError\n            dict1[arr[i]]=1\n\n    fans=arr2[1]/arr2[0]\n    index=0\n    for i in range(len(arr2)-1):\n        if(arr2[i+1]/arr2[i]<fans):\n            fans=arr2[i+1]/arr2[i]\n            index=i\n    arrz.append('%d %d %d %d' % (arr2[index],arr2[index],arr2[index+1],arr2[index+1]))\nprint('\\n'.join(arrz))", "super_ans = []\n\nfor i in range(int(input())):\n    n = input()\n    if n == '4':\n        super_ans.append(input())\n        continue\n    elif n == '5':\n        a = sorted(map(int, input().split()))\n        if a[0] == a[1] and a[2] == a[3]:\n            super_ans.append(' '.join([str(a[0]), str(a[0]), str(a[2]), str(a[2])]))\n        elif a[0] == a[1] and a[3] == a[4]:\n            super_ans.append(' '.join([str(a[0]), str(a[0]), str(a[3]), str(a[3])]))\n        else:\n            super_ans.append(' '.join([str(a[-1]), str(a[-1]), str(a[-3]), str(a[-3])]))\n        continue\n\n    d = 10 ** 9\n\n    t = tc = x = y = a1 = a2 = 0\n\n    for ai in sorted(map(int, input().split())):\n        if t == ai:\n            tc += 1\n\n            if tc == 2:\n                x = y\n                y = ai\n\n                if x and y / x < d:\n                    d = y / x\n                    a1, a2 = x, y\n\n            elif tc == 4:\n                a1 = a2 = t\n                break\n        else:\n            t = ai\n            tc = 1\n\n    super_ans.append(' '.join([str(a1), str(a1), str(a2), str(a2)]))\n\nprint('\\n'.join(super_ans))", "super_ans = []\n\nfor i in range(int(input())):\n    n = input()\n\n    if n == '4':\n        super_ans.append(input())\n        continue\n    elif n == '5':\n        a = sorted(map(int, input().split()))\n        if a[0] == a[1] and a[2] == a[3]:\n            super_ans.append(' '.join([str(a[0]), str(a[0]), str(a[2]), str(a[2])]))\n        elif a[0] == a[1] and a[3] == a[4]:\n            super_ans.append(' '.join([str(a[0]), str(a[0]), str(a[3]), str(a[3])]))\n        else:\n            super_ans.append(' '.join([str(a[-1]), str(a[-1]), str(a[-3]), str(a[-3])]))\n        continue\n\n    d = 10 ** 9\n\n    ans = []\n    t = tc = x = y = 0\n\n    for ai in sorted(map(int, input().split())):\n        if t == ai:\n            tc += 1\n\n            if tc == 2:\n                x = y\n                y = ai\n\n                if x and y / x < d:\n                    d = y / x\n                    ans = [x, y]\n\n            elif tc == 4:\n                ans = [t, t]\n                break\n        else:\n            t = ai\n            tc = 1\n\n    super_ans.append(' '.join(map(str, ans * 2)))\n\nprint('\\n'.join(super_ans))\n", "queries = int(input())\noutput  = []\n\nfor i in range(queries):\n    numCount = input()\n\n    if numCount == '4':\n        output.append(input())\n    else:\n        if numCount == '5':\n            l = sorted(map(int, input().split()))\n            x, y = l[1], l[3]\n        else:\n            lastNum = b = x = y = 0\n            d = 10 ** 12\n\n            for num in sorted(map(int, input().split())):\n                if num == lastNum:\n                    count += 1\n\n                    if count == 2:\n                        a = b\n                        b = num\n                        \n                        if a and b / a < d:\n                            d = b / a\n                            x = a\n                            y = b\n\n                    elif count == 4:\n                        x = y = num\n                        break\n\n                else:\n                    lastNum = num\n                    count   = 1\n        output.append(str(x) + ' ' + str(x) + ' ' + str(y) + ' ' + str(y))\nprint('\\n'.join(output))"]