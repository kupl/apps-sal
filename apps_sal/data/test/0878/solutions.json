["N = int(input())\nA = [int(a) for a in input().split()]\n\nfor i in range(1, N):\n    if A[i] + A[i-1] == 5:\n        print(\"Infinite\")\n        break\nelse:\n    ans = 0\n    for i in range(1, N):\n        if A[i] == 2:\n            if i == 1 or A[i-2] == 2:\n                ans += 3\n            else:\n                ans += 2\n        elif A[i] == 3:\n            ans += 4\n        else:\n            if A[i-1] == 2:\n                ans += 3\n            else:\n                ans += 4\n    print(\"Finite\")\n    print(ans)\n", "import sys\nn = int(input())\na = list(map(int,input().split()))\ncount = 0\nfor i in range(n-1):\n    if a[i+1] != 1 and a[i] != 1:\n        print(\"Infinite\")\n        return\n    if a[i] == 1 and a[i+1] == 2:\n        count+=3\n    if a[i] == 1 and a[i+1] == 3:\n        count+=4\n    if a[i] == 2 and a[i+1] == 1:\n        count+=3\n    if a[i] == 3 and a[i+1] == 1:\n        count+=4\nfor i in range(n-2):\n# will have one overlap\n    if a[i] == 3 and a[i+2] == 2:\n        count-=1\nprint(\"Finite\")\nprint(count)", "from math import *\nN = int(input())\nA = list(map(int, input().split()))\n\n\nans = 0\n\nfor i in range(1, len(A)):\n    if A[i] == A[i-1]:\n        ans = inf\n        break\n    if (A[i] == 2 and A[i-1] == 3) or (A[i] == 3 and A[i-1] == 2):\n        ans = inf\n        break\nif ans == inf:\n    print(\"Infinite\")\nelse:\n\n    for i in range(1, len(A)):\n        if A[i] == 1 and A[i-1] == 3:\n            ans += 4\n        elif A[i] == 1 and A[i-1] == 2:        \n            ans += 3\n        elif A[i] == 2:\n            if i < 2 or A[i-2] != 3:\n                ans += 3\n            else:\n                ans += 2\n        else:\n            ans += 4\n\n    print(\"Finite\")\n    print(ans)", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nfrom math import *\nfrom decimal import *\nfrom copy import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN(x = \" \"):\n    return(map(int,sys.stdin.readline().strip().split(x)))\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN():\n    return list(numIN())\n\ndef dis(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n            st = be\n            en = i\n        if meh<0:\n            meh = 0\n            be = i+1\n    return msf,st,en\n\n\ndef res(ans,t):\n    print('Case #{}: {} {}'.format(t,ans[0],ans[1]))\n\n\n\nn = int(input())\ns = ''.join([str(i) for i in arrIN()])\nans = 0\nfor i in range(1,n):\n    if s[i-1]=='1':\n        if s[i]=='2':\n            ans+=3\n        elif s[i]=='3':\n            ans+=4\n        else:\n            print('Infinite')\n            return\n    elif s[i-1]=='2':\n        if s[i]=='2' or s[i]=='3':\n            print('Infinite')\n            return\n        else:\n            ans+=3\n    else:\n        if s[i]=='2' or s[i]=='3':\n            print('Infinite')\n            return\n        else:\n            ans+=4\n\nans-=s.count('312')\nprint('Finite')\nprint(ans)", "def main():\n    count = 0\n    for i in range(1, n):\n        if {a[i - 1], a[i]} == {2, 3}:\n            return 0\n        elif a[i - 1] == 3 and a[i] == 1:\n            count += 4\n        elif a[i - 1] == 2:\n            count += 3\n        else:\n            if i - 2 >= 0 and a[i - 2] == 3 and a[i] == 2:\n                count += 2\n            elif a[i] == 2:\n                count += 3\n            else:\n                count +=4\n    return count\n\n\nn = int(input())\na = list(map(int, input().split()))\np = main()\nprint('Finite\\n{}'.format(p) if p else 'Infinite')", "\n\ndef solve(l):\n    helper = {\n        1: {\n            2: 3,\n            3: 4\n        },\n        2: {\n            1: 3,\n            3: float('inf')\n        },\n        3: {\n            1: 4,\n            2: float('inf')\n        }\n    }\n    p_i, a_i = 0, 1\n    pp_i = -1\n    ppre = None\n    res = 0\n    while a_i < len(l):\n        if a_i > 1:\n            pp_i += 1\n            ppre = l[pp_i]\n        pre, aft = l[p_i], l[a_i]\n        res += helper[pre][aft]\n        if res == float('inf'):\n            return False, None\n        if ppre is not None and (ppre, pre, aft) == (3, 1, 2):\n            res -= 1\n        p_i += 1\n        a_i += 1\n    return True, res\n\n\ndef __starting_point():\n    _ = input()\n    l = [int(x) for x in input().split()]\n    is_finite, res = solve(l)\n    if is_finite:\n        print('Finite')\n        print(res)\n    else:\n        print('Infinite')\n\n__starting_point()", "n = int(input())\ninf = False\nA = list(map(int, input().split()))\nfor i in range(1, n):\n  if (A[i] == 2 and A[i - 1] == 3) or (A[i] == 3 and A[i - 1] == 2):\n    inf = True\nif inf:\n  print('Infinite')\nelse:\n  print('Finite')\n  ans = 0\n  for i in range(1, n):\n    a = A[i - 1]\n    b = A[i]\n    if a > b:\n      a, b =  b, a\n    if a == 1 and b == 2:\n      ans += 3\n    elif a == 1 and b == 3:\n      ans += 4\n    if i > 1 and A[i] == 2 and A[i - 2] == 3:\n      ans -= 1\n  print(ans)\n", "#map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\nans=0\nflag=0\nfor i in range(1,n):\n    if a[i]==2:\n        if a[i-1]==3:\n            print('Infinite')\n            flag=1\n            break\n        else:\n            ans+=3\n            if i>1 and a[i-2]==3:\n                ans-=1\n    elif a[i]==1:\n        if a[i-1]==2:\n            ans+=3\n        else:\n            ans+=4\n    else:\n        if a[i-1]==2:\n            print('Infinite')\n            flag=1\n            break\n        else:\n            ans+=4\nif flag==0:\n    print('Finite')\n    print(ans)", "# Please DON'T hack me! TY!\nimport sys\n\n\ndef unique(lst):\n    return list(dict((o, o) for o in lst).values())\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = self.next_line()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_line(self, _map=str):\n        return list(map(_map, sys.stdin.readline().split()))\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n = self.next_int()\n        x = [self.next_int() for _ in range(0, n)]\n        r = 0\n        for i in range(1, n):\n            if x[i - 1] == 1:\n                if x[i] == 2:\n                    if i >= 2 and x[i - 2] == 3:\n                        r += 2\n                    else:\n                        r += 3\n                elif x[i] == 3:\n                    r += 4\n            elif x[i - 1] == 2:\n                if x[i] == 1:\n                    r += 3\n                elif x[i] == 3:\n                    r = -1\n                    break\n            elif x[i - 1] == 3:\n                if x[i] == 1:\n                    r += 4\n                elif x[i] == 2:\n                    r = -1\n                    break\n        if r == -1:\n            print('Infinite')\n        else:\n            print('Finite')\n            print(r)\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "n = int(input())\nl =list(map(int,input().split()))\nimport sys\nwyn = 0\nfor i in range(1,n):\n\tif l[i] == 1 and l[i-1] == 2:\n\t\twyn += 3\n\tif l[i] == 1 and l[i-1] == 3:\n\t\twyn += 4\n\tif l[i] == 2 and l[i-1] == 1:\n\t\twyn += 3\n\tif l[i] == 2 and l[i-1] == 3:\n\t\tprint(\"Infinite\")\n\t\treturn\n\tif l[i] == 3 and l[i-1] == 1:\n\t\twyn += 4\n\tif l[i] == 3 and l[i-1] == 2:\n\t\tprint(\"Infinite\")\n\t\treturn\nfor i in range(2, n):\n\tif l[i - 2] == 3 and l[i-1] == 1 and l[i] == 2:\n\t\twyn -= 1\nprint(\"Finite\")\nprint(wyn)", "import sys\nn=int(input())\nl=list(map(int,input().split()))\ncount=0\nfor i in range(n-1):\n\tif (l[i+1]==3 and l[i]==2) or (l[i+1]==2 and l[i]==3):\n\t\tprint (\"Infinite\")\n\t\treturn\n\telse:\n\t\tif l[i]==2:\n\t\t\tif l[i+1]==1:\n\t\t\t\tcount+=3\n\t\telif l[i]==1:\n\t\t\tif l[i+1]==2:\n\t\t\t\tif i>0:\n\t\t\t\t\tif l[i-1]==3:\n\t\t\t\t\t\tcount+=2\n\t\t\t\t\telse:\n\t\t\t\t\t\tcount+=3\n\t\t\t\telse:\n\t\t\t\t\tcount+=3\n\t\t\telse:\n\t\t\t\tcount+=4\n\t\telse:\n\t\t\tif l[i+1]==1:\n\t\t\t\tcount+=4\nprint (\"Finite\")\nprint (count)\n", "n=int(input())\nc=0\na=list(map(int,input().split()))\nfor i in range(1,len(a)):\n    if a[i]+a[i-1]==5:\n        c=0\n        break\n    elif a[i]+a[i-1]==4:\n        c+=4\n    elif a[i]+a[i-1]==3:\n        c+=3\n    if a[i-2]==3 and a[i-1]==1 and a[i]==2:\n        c-=1\nif c==0:\n    print('Infinite')\nelse:\n    print('Finite')\n    print(c)", "input()\n\npoints = 0\n\nline = input()\n\nshapes = list(map(int, line.split()))\n\n# circle = 1\n# triangle = 2\n# square = 3\n\nfor a, b in zip(shapes, shapes[1:]):\n\tif a == 1 or b == 1:\n\t\tpoints += a + b\n\telse:\n\t\tpoints = -1\n\t\tbreak\n\nif points == -1:\n\tprint(\"Infinite\")\nelse:\n\tprint(\"Finite\")\n\tprint(points - line.count(\"3 1 2\"))", "n = int(input())\na = list(map(int, input().split()))\nres = 0\nfor i in range(1, n):\n    if a[i]*a[i-1] == 2:\n        res += 3\n        if i >= 2 and a[i-2] == 3:\n            res -= 1\n    elif a[i]*a[i-1] == 3:\n        res += 4\n    else:\n        print('Infinite')\n        return\n\nprint('Finite')\nprint(res)", "n = int(input())\na = list(map(int, input().split(\" \")))\ncond = True\nsum = 0\nfor i in range(1,n):\n      if (a[i-1]==2 and a[i]==3) or (a[i-1]==3 and a[i]==2):\n            cond = False\n            break\n      elif i>1 and (a[i-2]==3 and a[i-1]==1 and a[i]==2):\n            sum+=2\n      elif (a[i-1]==2 and a[i]==1) or (a[i-1]==1 and a[i]==2):\n            sum+=3\n      else:\n            sum+=4\nif cond:\n      print('Finite')\n      print(sum)\nelse:\n      print('Infinite')", "inf = float(\"inf\")\npoints = [\n\t[inf, 3, 4],\n\t[3, inf, inf],\n\t[4, inf, inf]\n]\n\ntot = 0\nn = int(input())\nnums = [*map(int, input().split())]\nfor i in range(1, n):\n\ttot += points[nums[i - 1] - 1][nums[i] - 1]\n\tif i > 1 and (nums[i - 2], nums[i - 1], nums[i]) == (3, 1, 2):\n\t\ttot -= 1\nif tot == inf:\n\tprint(\"Infinite\")\nelse:\n\tprint(\"Finite\")\n\tprint(tot)", "def solve(n,A):\n    cnt=0\n    for i in range(n-1):\n        a0,a1,a2=A[i],A[i+1],A[i+2]\n        if a2==1:\n            if a1==2:\n                cnt+=3\n            else:\n                cnt+=4\n        elif a2==2:\n            if a1==1:\n                if a0==3:\n                    cnt+=2\n                else:\n                    cnt+=3\n            else:\n                print('Infinite')\n                return\n        else:\n            if a1==1:\n                cnt+=4\n            else:\n                print('Infinite')\n                return\n    print('Finite')\n    print(cnt)\n    return\n\nn=int(input())\nA=[0]+list(map(int,input().split()))\nsolve(n,A)", "CIRCLE = 1\nRECTANGLE = 2\nSQUARE = 3\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    answer = 0\n\n    for i in range(1, n):\n        if a[i - 1] == CIRCLE:\n            if a[i] == RECTANGLE:\n                answer += 3\n                if i > 1 and a[i - 2] == SQUARE:\n                    answer -= 1\n            else:\n                answer += 4\n        elif a[i - 1] == RECTANGLE:\n            if a[i] == CIRCLE:\n                answer += 3\n            else:\n                print('Infinite')\n                return\n        elif a[i - 1] == SQUARE:\n            if a[i] == CIRCLE:\n                answer += 4\n            else:\n                print('Infinite')\n                return\n\n    print('Finite')\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = [int(i) for i in input().split()]\n\ntotal = 0\n\nsuma = dict()\nsuma[1, 2] = 3\nsuma[1, 3] = 4\nsuma[2, 1] = 3\nsuma[2, 3] = 9999999999999999999999999999999999999999999999999\nsuma[3, 1] = 4\nsuma[3, 2] = 9999999999999999999999999999999999999999999999999\n\nfor i, j in zip(a[:-1], a[1:]):\n\ttotal += suma[i, j]\n\nfor i in range(len(a)-2):\n\tif a[i] == 3 and a[i+1] == 1 and a[i+2] == 2:\n\t\ttotal -= 1\n\nif total < 99999999999999999999999999999:\n\tprint(\"Finite\")\n\tprint(total)\nelse:\n\tprint(\"Infinite\")", "input()\na = ''.join(input().split())\nres = 0\nfor aij in zip(a, a[1:]):\n    if '1' in aij:\n        res += sum(map(int, aij))\n    else:\n        print('Infinite')\n        break\nelse:\n    print('Finite')\n    print(res - a.count('312'))\n", "import sys\n\nn = int(input())\na = list(map(int,input().split()))\nprev2 = -1\nprev = a[0]\nsol = 0\nfor x in a[1:]:\n    if x+prev == 5:\n        print(\"Infinite\")\n        return\n    if x == 1:\n        if prev == 2:\n            sol += 3\n        if prev == 3:\n            sol += 4\n    if x == 2:\n        sol += 3\n        if prev2 == 3:\n            sol -= 1\n    if x == 3:\n        sol += 4\n    prev2 = prev\n    prev = x\nprint(\"Finite\")\nprint(sol)", "n = int(input())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if a[i] + a[i - 1] == 5:\n        ans = -1\n        break\n    elif a[i] + a[i - 1] == 3:\n        ans += 3\n        if i >= 2 and a[i] == 2 and a[i - 2] == 3:\n            ans -= 1\n    else:\n        ans += 4\nif ans == -1:\n    print('Infinite')\nelse:\n    print('Finite')\n    print(ans)", "n = int(input())\narr = [int(x) for x in input().split()]\nval = 0\nfor i in range(n - 1):\n    if arr[i] == 2 and arr[i + 1] == 3:\n        print('Infinite')\n        return\n    if arr[i] == 3 and arr[i + 1] == 2:\n        print('Infinite')\n        return\n    if arr[i] == 1 and arr[i + 1] == 2:\n        if i > 0 and arr[i - 1] == 3:\n            val += 2\n        else:\n            val += 3\n    if arr[i] == 2 and arr[i + 1] == 1:\n        val += 3\n    if arr[i] == 1 and arr[i + 1] == 3:\n        val += 4\n    if arr[i] == 3 and arr[i + 1] == 1:\n        val += 4\nprint('Finite')\nprint(val)\n"]