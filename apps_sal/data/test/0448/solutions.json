["def main():\n    from collections import deque\n    \n    n, m = [int(i) for i in input().split()]\n    children = deque([0, int(v), i + 1] for i, v in enumerate(input().split()))\n    \n    while len(children) > 1:\n        tmp = children.popleft()\n        tmp[0] += m\n        if tmp[1] > tmp[0]:\n            children.append(tmp)\n    \n    print(children.popleft()[2])\n\n\nmain()\n", "a = input().split(' ')\nn = int(a[0])\nm = int(a[1])\na = input().split(' ')\nfor i in range(n):\n    a[i] = int(a[i])\npre = 0\nwhile True:\n    ans = -1\n    for i in range(n):\n        if a[i]>0:\n            ans = i\n            a[i] -= m\n    if ans==-1:\n        break\n    pre = ans\nprint(pre+1)\n\n", "import collections\nimport itertools\n\n\nn, m = list(map(int, str.split(input())))\na = collections.deque(itertools.starmap(lambda i, s: (i, int(s)), enumerate(str.split(input()))))\n\nwhile len(a) != 1:\n\n    i, c = a.popleft()\n    if c - m > 0:\n\n        a.append((i, c - m))\n\ni, c = a.popleft()\nprint(i + 1)\n", "n,m = map(int,input().split())\na=list(map(int,input().split()))\nimax=0\nfor i in range(1,n):\n\tif a[i]>a[imax]:\n\t\timax=i\nk=(a[imax]-1)//m\ni=n-1\nwhile i>=0:\n\tif (a[i]-1)//m==k:\n\t\tprint(i+1)\n\t\tbreak\n\telse:\n\t\ti-=1", "from collections import deque\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\npairs = deque()\nfor i in range(n):\n    pairs.append([arr[i], (i + 1)])\nwhile len(pairs) > 1:\n    pairs[0][0] -= m\n    if pairs[0][0] > 0:\n        pairs.append(pairs[0])\n    pairs.popleft()\nprint(pairs[0][1])", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nma = a[0] // m + (1 if a[0] % m else 0)\nr = 0\nfor i in range(n):\n    t = a[i] // m + (1 if a[i] % m else 0)\n    if t >= ma:\n        r = i\n        ma = t\nprint(r+1)\n", "x = input().split()\nn = int(x[0])\nm = int(x[1])\n\nl = input().split()\nans = 0\nhigh = 0\nfor x in range(n):\n    l[x] = int(l[x])\n    y = l[x] // m\n    if l[x] // m != l[x] / m:\n        y += 1\n    if y >= high:\n        high = y\n        ans = x + 1\nprint(ans)\n", "from sys import stdin as cin\nfrom fractions import gcd\n\nn,m = list(map(int,cin.readline().split()))\na=list(map(int,cin.readline().split()))\nmax_index=0\nif a[0]%m==0:\n    index = a[0]//m\nelse:\n    index = a[0]//m+1\nfor i in range(n):\n    if a[i]%m==0:\n        temp = a[i]//m\n    else:\n        temp = a[i]//m+1\n    if temp >= index :\n        index = temp\n        max_index = i\nprint(max_index+1)\n\n\n\n\n\n\n\n\n", "n, m = tuple(map(int, input().split(' ')))\na = list(map(int, input().split(' ')))\nresult = -2\nfinished = False\n\nwhile finished == False:\n    #print(a)\n    finished = True\n    last_child = -1\n    for index, el in enumerate(a):\n        if el <= 0:\n            continue\n        #don't go home\n        if el > m:\n            finished = False\n        else:\n            last_child = index + 1\n        a[index] = el - m\n\nprint(last_child)", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = [[a[i] // m + (a[i] % m != 0), i] for i in range(n)]\nb = sorted(b)\nprint(b[-1][1] + 1)", "def main():\n    n, m = input().split()\n    n, m = int(n), int(m)\n    a = []\n    a = input().split()\n    a = list(map(int, a))\n    p = list(range(n))\n    while len(a) > 1:\n        if a[0] <= m:\n            a = a[1:]\n            p = p[1:]\n        else:\n            a[0] -= m\n            a.append(a.pop(0))\n            p.append(p.pop(0))\n\n    print(p[0] + 1)\n\nmain()\n", "from math import ceil\nn, m = map(int,input().split())\na = list(map(int,input().split()))\nb = list()\nfor i in a:\n    b.append(ceil(i/m))\nx = max(b)\nlast = -1\ni = 0\nwhile i < n:\n    if b[i] == x:\n        last = i\n    i += 1\nprint(last+1)", "import math\n##sa2=input().split(' ')\n##candies=int(sa2[1])\n##sa22=input().split(' ')\n##sa3=[int(x) for x in sa22]\n##\n##def do(x, candies):\n##    c2=[]\n##    for element in x:\n##        if element>candies:\n##            c2.append(element-candies)\n##\n##    return c2\n##\n##while len(do(sa3, candies))>0:\n##    sa3=do(sa3, candies)\n##\n\nsa2=input().split(' ')\ncandies=int(sa2[1])\nsa22=input().split(' ')\nsa3=[int(x) for x in sa22]\n\nsa4=[]\nfor element in sa3:\n    sa4.append(math.ceil(element/candies))\nsa4.reverse()\nprint(int(sa2[0])-sa4.index(max(sa4)))\n", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nfor i in range(n):\n  a[i] = (a[i] + m - 1) // m\nx = max(a)\nprint(n - a[::-1].index(x))", "def f(a,m):\n    r=a//m\n    if a%m!=0:\n        r=r+1\n    return r\nn,m=list(map(int,input().split()))\nA=list(map(int,input().split()))\nB=[f(a,m) for a in reversed(A)]\nprint(n-B.index(max(B)))", "import math\nn, m = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nh = max(a)\nif m > h :\n    print(n)\nelse:\n    for i in range(n):\n        a[i] = math.ceil((a[i] / m))\n    chose = max(a)\n    x = 0\n    #print(a)\n    \n    for j in range(n):\n        if a[j] == chose :\n            x = j + 1\n    print(x)\n    \n    \n", "n,m=map(int,input().split())\nl=list(map(int,input().split()))\nl1=[]\nfor i in range(n):\n    temp=l[i]/m\n    l1.append(int(temp+0.9999999))\nm=max(l1)\nind=0\nfor j in range(n):\n    if(l1[j]==m):\n        ind=j+1\nprint(ind)", "n, m = map(int, input().split())\nkids = list(map(int, input().split()))\nkids = [[i+1,x] for i,x in enumerate(kids)]\n\nwhile len(kids) != 1:\n    value = kids[0]\n    if m >= value[1]:\n        kids.pop(0)\n    else:\n        value[1] -= m\n        kids.pop(0)\n        kids.append(value)\n\nprint(kids[0][0])", "a = input().split(' ')\nn = int(a[0])\nm = int(a[1])\na = input().split(' ')\nfor i in range(n):\n    a[i] = int(a[i])\npre = 0\nwhile True:\n    ans = -1\n    for i in range(n):\n        if a[i]>0:\n            ans = i\n            a[i] -= m\n    if ans==-1:\n        break\n    pre = ans\nprint(pre+1)", "n, m = map(int, input().split())\narr = list(map(int, input().split()))\nids = [i for i in range(1, n + 1)]\nwhile len(ids) > 1:\n    index = ids[0]\n    del ids[0]\n    if arr[index - 1] - m > 0:\n        arr[index - 1] -= m;\n        ids.append(index)\nprint(ids[0])", "from collections import deque\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\npairs = deque()\nfor i in range(n):\n    pairs.append([arr[i], (i + 1)])\nwhile len(pairs) > 1:\n    pairs[0][0] -= m\n    if pairs[0][0] > 0:\n        pairs.append(pairs[0])\n    pairs.popleft()\nprint(pairs[0][1])", "n, m = map(int, input().split())\nt = list((i - 1) // m for i in map(int, input().split()))\nt.reverse()\nprint(n - t.index(max(t)))", "data = input().split()\nn = (int)(data[0])\nk = (int)(data[1])\n\n\ndata = input().split()\nfor i in range(len(data)):\n\tdata[i] = (int)(data[i])\n\nans = 0\nlast = (data[0]-1) // k\nfor i in range(1,len(data)):\n\tif (data[i]-1) // k >= last:\n\t\tans = i\n\t\tlast = (data[i]-1) // k \n\nprint (ans+1)", "data = input().split()\nn = (int)(data[0])\nk = (int)(data[1])\n\n\ndata = list(map(int, input().split()))\n#for i in range(len(data)):\n#\tdata[i] = (int)(data[i])\n\nans = 0\nlast = (data[0]-1) // k\nfor i in range(1,len(data)):\n\tif (data[i]-1) // k >= last:\n\t\tans = i\n\t\tlast = (data[i]-1) // k \n\nprint (ans+1)"]