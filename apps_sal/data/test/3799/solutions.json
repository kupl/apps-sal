["s=input();print(['Second','First'][len(s.rstrip(s[0]))%2])", "S = input()\nflag = (S[0] != S[-1]) ^ (len(S) % 2 == 0)\nprint((\"First\" if flag else \"Second\"))\n", "s=list(input())\n\nn=len(s)\n\nif (s[0]==s[n-1] and n%2 ==0) or (s[0] != s[n-1] and n%2 != 0):\n    print(\"First\")\nelse:\n    print(\"Second\")", "s=input()\nprint('Second' if (len(s)%2==0)^(s[0]==s[-1]) else 'First')", "s = input()\nif s[0]==s[-1]:\n    a = 1\nelse:\n    a = 0\nif (len(s)-a)%2==0:\n    print('Second')\nelse:\n    print('First')", "s=input();print('SFeicrosntd'[len(s)+(s[0]==s[-1])&1::2])", "S = input()\nN = len(S)\n\nif S[0] == S[-1]:\n    if N%2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if N%2 == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")", "s = input()\nif (len(s)%2 + int(s[0]==s[-1]))%2:\n    print(\"First\")\nelse:\n    print(\"Second\")", "S = input()\nans = \"First\"\nif (S[0] == S[-1]) ^ (len(S) % 2 == 0):\n    ans = \"Second\"\nprint(ans)\n", "s=input()\n\nif s[0]==s[len(s)-1]:\n    if len(s)%2==1:\n        print(\"Second\")\n    else:\n        print(\"First\")\nelse:\n    if len(s)%2==1:\n        print(\"First\")\n    else:\n        print(\"Second\")", "import sys\n# input = sys.stdin.readline\ns = str(input())\nn = len(s)\nif s[0] == s[n - 1]:\n\tmove = 1\nelse:\n\tmove = 0\nmove = (n - move) % 2\nif move == 1:\n\tprint('First')\nelse:\n\tprint('Second')", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\n#xs,ys,xt,yt = map(int,readline().split())\n\ns = input()\n\nif ((s[0]==s[-1]) + len(s))&1:\n    print(\"First\")\nelse:\n    print(\"Second\")\n\n\n", "S = input()\nprint((\"First\" if (len(S) % 2) ^ (S[0] == S[-1]) else \"Second\"))\n", "#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\ns = input()\nif (len(s) % 2 == 0) and (s[0] == s[-1]):\n    print(\"First\")\nelif (len(s) % 2 == 0) or (s[0] == s[-1]):\n    print(\"Second\")\nelse:\n    print(\"First\")\n", "s = input()\n\nif (len(s) % 2 != 0)^(s[0] == s[-1]):\n    print('First')\nelse:\n    print('Second')\n", "import sys\ninput = sys.stdin.readline\ns = str(input().strip())\nn = len(s)\nif s[0] is s[n - 1]:\n\tmove = 1\nelse:\n\tmove = 0\nmove = (n - move) % 2\nif move is 1:\n\tprint('First')\nelse:\n\tprint('Second')", "s = input()\nprint(['Second', 'First'][(s[0]==s[-1])^(len(s)%2)])", "# -*- coding: utf-8 -*-\ns = input()\nn = len(s)\n\nif n%2==0 and s[0]!=s[n-1]:\n    print(\"Second\")\nelif n%2==1 and s[0]==s[n-1]:\n    print(\"Second\")\nelse:\n    print(\"First\")\n", "def main():\n    s = input()\n\n    if s[0] == s[-1]:\n        ss = 1\n    else:\n        ss = 0\n\n    if len(s) % 2 == ss:\n        print(\"Second\")\n    else:\n        print(\"First\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import collections\n\n\ndef solve():\n    s = input()\n    if s[0] == s[-1]:\n        if len(s)%2 == 0:\n            print(\"First\")\n        else:\n            print(\"Second\")\n    else:\n        if len(s)%2 == 0:\n            print(\"Second\")\n        else:\n            print(\"First\")\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "s = input()\nn = len(s)\n\nif s[0] == s[n-1]:\n    move = 1\nelse:\n    move = 0\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "s = list(input())\nl = len(s)\n\nif s[0] == s[-1]:\n    if l % 2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if l % 2 == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")\n", "S = input()\nstart_end = (S[0] == S[-1])\nodd = (len(S) % 2)\nprint('First' if (start_end and not odd) or (not start_end and odd) else 'Second')", "s = input()\nprint(\"Second\" if ((len(s)%2 == 0) ^ (s[0] == s[-1])) else \"First\")", "s=input()\nrem=3 if s[0]==s[-1] else 2\nif (len(s)-rem)%2==0:\n    print(\"Second\")\nelse:\n    print(\"First\")\n", "s = input()\nplayers = ['First', 'Second']\n\nlast = 1 if s[0] == s[-1] else 0\ncnt = (len(s) - 2 + 1 + last) % 2\nans = players[cnt]\n\nprint(ans)", "import sys\n\ns = str(sys.stdin.readline().strip())\n\nn = len(s)\n\nif s[0] == s[n-1]:\n    move = 1\nelse:\n    move = 0\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "S = input()\nprint('First' if (len(S)%2==0) == (S[0]==S[-1]) else 'Second')", "s = input()\nn = len(s)\nif s[0] == s[-1]:\n  n += 1\n  \nprint(\"First\" if n % 2 else \"Second\")", "s=input()\nprint('SFeicrosntd'[len(s)+(s[0]==s[-1])&1::2])", "n=input()\nif len(n)%2==0:\n    if n[0]!=n[-1]:\n        print(\"Second\")\n    else:\n        print(\"First\")\nelse:\n    if n[0]==n[-1]:\n        print(\"Second\")\n    else:\n        print(\"First\")", "S = list(input())\nN = len(S)\nA = N%2\nB = (S[0]==S[-1])*1\nif A==1 and B==1:\n    print(\"Second\")\nelif A==1 and B==0:\n    print(\"First\")\nelif A==0 and B==1:\n    print(\"First\")\nelif A==0 and B==0:\n    print(\"Second\")\n", "s = input().strip()\nl = len(s)\n \nif (l + (s[0] == s[-1])) % 2:\n  print(\"First\")\nelse:\n  print(\"Second\")", "import sys\nS=input()\nN=len(S)\nif N%2!=0:\n    if S[0]==S[N-1]:\n        print('Second')\n    else:\n        print(\"First\")\nelse:\n    if S[0]==S[N-1]:\n        print('First')\n    else:\n        print('Second')", "s = input()\n\nif (len(s)%2==1 and s[-1]!=s[0]) or (len(s)%2==0 and s[-1]==s[0]):\n    print('First')\nelse:\n    print('Second')", "def remove(s):\n    i=1\n    count=0\n    while i<len(s)-1:\n        if s[i-1]!=s[i+1]:\n            s.pop(i)\n            count+=1\n        i+=1\n    return count\n\ns=list(input())\ncount=0\nwhile True:\n    tmp=remove(s)\n    if tmp==0:\n        break\n    count+=tmp\n\nif count%2==0:\n    print(\"Second\")\nelse:\n    print(\"First\")\n", "S = input().strip()\n\nif S[0] == S[-1]:\n  print(\"First\" if len(S) % 2 == 0 else \"Second\")\nelse:\n  print(\"Second\" if len(S) % 2 == 0 else \"First\")", "s = input()\nl = len(s)\n\nif (s[0] == s[-1] and l % 2 == 0) or (s[0] != s[-1] and l % 2 != 0):\n  print(\"First\")\nelse:\n  print(\"Second\")", "s=input();print(['Second','First'][(len(s)+(s[0]==s[-1]))%2])", "s = input()\nn = len(s)\n\nmove = 0\nif s[0] == s[-1]:\n    move = 1\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "s = input()\na = s[0]\nb = s[len(s)-1]\nn = len(s) % 2\nif n == 1 and a == b:\n    print('Second')\nelif n == 1 and a != b:\n    print('First')\nelif n == 0 and a == b:\n    print('First')\nelse:\n    print('Second')\n", "def __starting_point():\n    S = input()\n    N = len(S)\n    if S[0] == S[-1]:\n        if N % 2 == 0:\n            print(\"First\")\n        else:\n            print(\"Second\")\n    else:\n        if N % 2 == 0:\n            print(\"Second\")\n        else:\n            print(\"First\")\n\n__starting_point()", "S=input()\nN=len(S)\nif N%2==0:\n    if S[0]==S[-1]:\n        print('First')\n    else:\n        print('Second')\nelse:\n    if S[0]==S[-1]:\n        print('Second')\n    else:\n        print('First')", "S = input()\nif (S[0] == S[-1]) ^ (len(S) % 2):\n    print('First')\nelse:\n    print('Second')\n", "def ARC064D():\n    s = list(input())\n    if s[0] == s[-1]:\n        key = 1\n    else:\n        key = -1\n\n    if len(s) % 2 != 0:\n        key *= -1\n\n    if key == 1:\n        print(\"First\")\n    else:\n        print(\"Second\")\n\nARC064D()", "s = input()\nif s[0] == s[-1]:\n    if len(s) % 2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if len(s) % 2 == 1:\n        print(\"First\")\n    else:\n        print(\"Second\")\n", "s = input()\nprint([\"Second\",\"First\"][(len(s) + (s[0] == s[-1])) % 2])", "S=input()\nstart=len(S)%2\nif S[0]==S[-1]:\n    goal=1\nelse:\n    goal=0\ncan=(start+goal)%2\nif can==0:\n    print(\"Second\")\nelse:\n    print(\"First\")", "import sys\ninput = sys.stdin.readline\ns = str(input().strip())\nn = len(s)\nif s[0] is s[n - 1]:\n\tmove = 1\nelse:\n\tmove = 0\nmove = (n - move) % 2\nif move is 1:\n\tprint('First')\nelse:\n\tprint('Second')", "ss = input()\n\nif (ss[0] == ss[-1] and len(ss) % 2 == 0) or (ss[0] != ss[-1] and len(ss) % 2):\n    print('First')\nelse:\n    print('Second')\n", "s=input()\nif(s[0]==s[len(s)-1]):\n    a=len(s)-3\nelse:\n    a=len(s)-2\nif(a%2==0):\n    print(\"Second\")\nelse:\n    print(\"First\")", "s=(input())\nl=len(s)\ne=(s[0]==s[-1])\nprint((\"First\" if (e+l)%2 else \"Second\"))\n", "s=input();x=(len(s)+(s[0]==s[-1]))%2;print('First'*x+'Second'*(1-x))", "s = input()\nn = len(s)\n\nif s[0] == s[-1]:\n    move = 1\nelse:\n    move = 0\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "s = input()\nS = list(s)\nf = False\nk = 1\nflag = False\nwhile len(S) > 2:\n    if k == len(S) - 1:\n        if flag:\n            k = 1\n            flag = False\n            continue\n        break\n    if S[k - 1] != S[k + 1]:\n        S.pop(k)\n        f = not f\n        flag = True\n    else:\n        k += 1\nif f:\n    print('First')\nelse:\n    print('Second')\n", "s = input()\nif s[0] == s[-1]:\n    if len(s)%2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if len(s)%2 == 1:\n        print(\"First\")\n    else:\n        print(\"Second\")\n", "S=input()\nif len(S)%2 == 0:\n  print(('First' if S[0]==S[-1] else 'Second'))\nelse:\n  print(('First' if S[0]!=S[-1] else 'Second'))\n", "# -*- coding: utf-8 -*-\ns = input()\nlr_same = (s[0] == s[-1])\nodd = len(s)%2\n\nif lr_same ^ odd:\n    print(\"First\")\nelse:\n    print(\"Second\")", "import sys\n\ninput = sys.stdin.readline\n\ns = str(input().strip())\n\nn = len(s)\n\nif s[0] == s[n-1]:\n    move = 1\nelse:\n    move = 0\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "import sys\n\ns = sys.stdin.readline().strip()\n\nn = len(s)\n\nif s[0] == s[n-1]:\n    move = 1\nelse:\n    move = 0\n\nmove = (n - move) % 2\n\nif move == 1:\n    print('First')\nelse:\n    print('Second')\n", "s = input()\nif (len(s)%2==0)^(s[0]==s[-1]):\n  print('Second')\nelse:\n  print('First')", "s = input()\ntable = [0] * 30\no = lambda x: ord(x) - ord('a')\nkind = 0\nfor c in s:\n    if table[o(c)] == 0:\n        kind += 1\n    table[o(c)] += 1\n\nif kind > 2 and s[0] != s[-1]:\n    print(\"First\") if len(s) % 2 == 1 else print(\"Second\")\nelif kind > 2 and s[0] == s[-1]:\n    print(\"Second\") if len(s) % 2 == 1 else print(\"First\")\nelse:\n    print(\"Second\")\n", "\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\ns = input()\n\nif s[0] == s[-1]:\n\tif len(s) % 2 == 0:\n\t\tprint(\"First\")\n\telse:\n\t\tprint(\"Second\")\nelse:\n\tif len(s) % 2 == 0:\n\t\tprint(\"Second\")\n\telse:\n\t\tprint(\"First\")", "import sys\nstdin = sys.stdin\n\nsys.setrecursionlimit(10**5) \n \ndef li(): return list(map(int, stdin.readline().split()))\ndef li_(): return [int(x)-1 for x in stdin.readline().split()]\ndef lf(): return list(map(float, stdin.readline().split()))\ndef ls(): return stdin.readline().split()\ndef ns(): return stdin.readline().rstrip()\ndef lc(): return list(ns())\ndef ni(): return int(stdin.readline())\ndef nf(): return float(stdin.readline())\n\ns = lc()\n\nleft = s[0]\nright = s[-1]\n\n# aba\u578b\u306e\u3068\u304d\nif s[0] == s[-1]:\n    if len(s)%2:\n        print(\"Second\")\n    else:\n        print(\"First\")\n\n# ab\u578b\u306e\u3068\u304d    \nelse:\n    if len(s)%2:\n        print(\"First\")\n    else:\n        print(\"Second\")\n", "ar = list(input())\nb = 0\nwhile True:\n    count = 0\n    for i in range(1,len(ar)-1):\n        if ar[i-1] != ar[i+1]:\n            count +=1\n            del ar[i]\n            b += 1\n            break\n    if count == 0:\n        if b % 2 == 1:\n            print(\"First\")\n        else:\n            print(\"Second\")\n        break", "s=input()\nx,y=s[0],s[-1]\nl=len(s)\nif l%2==0:\n  if x==y:\n    print(\"First\")\n  else:\n    print(\"Second\")\n  \nif l%2==1:\n  if x!=y:\n    print(\"First\")\n  else:\n    print(\"Second\")", "S = input()\nif S[0] == S[-1]:\n  if len(S)%2 == 0:\n    print(\"First\")\n  else:\n    print(\"Second\")\nelse:\n  if len(S)%2 == 1:\n    print(\"First\")\n  else:\n    print(\"Second\")\n", "S=input().rstrip()\nprint((\"First\" if (len(S)+(S[0]==S[-1]))%2 else \"Second\"))\n", "s = input()\nif (len(s)+(s[0]==s[-1]))%2==1:\n    print('First')\nelse:\n    print('Second')\n", "S = input()\n\nif S[0] == S[-1]:\n    if len(S) % 2 == 1:\n        print('Second')\n    else:\n        print('First')\nelse:\n    if len(S) % 2 == 0:\n        print('Second')\n    else:\n        print('First')", "s = input()\ntable = [0] * 30\no = lambda x: ord(x) - ord('a')\nkind = 0\nfor c in s:\n    if table[o(c)] == 0:\n        kind += 1\n    table[o(c)] += 1\n\nif kind > 2 and s[0] != s[-1]:\n    print(\"First\") if len(s) % 2 == 1 else print(\"Second\")\nelif kind > 2 and s[0] == s[-1]:\n    print(\"Second\") if len(s) % 2 == 1 else print(\"First\")\nelse:\n    print(\"Second\")\n", "S=input();A=len(S)%2;B=0 if S[0]==S[-1] else 1;print(\"Second\" if A^B else \"First\")", "S = input()\nl = len(S)\nprint(('First' if (l & 1) ^ (S[0] == S[-1]) else 'Second'))\n", "s=input()\nif s[0] == s[-1]:\n    print(('First','Second')[len(s)%2])\nelse:\n    print(('Second','First')[len(s)%2])", "s=input()\nif (len(s)%2==0 and s[0]==s[-1]) or (len(s)%2!=0 and s[0]!=s[-1]):\n\tprint(\"First\")\nelse:\n\tprint(\"Second\")", "a,*s,g=input()\nc=s.count\nif a==g:\n  if(len(s)-c(a)*2)%2:\n    print('Second')\n  else:\n    print('First')\nelse:\n  if(len(s)-max(c(a),c(g))*2)%2:\n    print('First')\n  else:\n    print('Second')", "s = input().strip()\nc1, c2 = s[0], s[-1]\nif c1 == c2:\n    if len(s) % 2:\n        print('Second')\n    else:\n        print('First')\nelse:\n    if len(s) % 2:\n        print('First')\n    else:\n        print('Second')\n", "s=input();l = len;p = print\nif (s[0]==s[-1] and l(s)%2==0) or (s[0]!=s[-1] and l(s)%2==1):\n    p(\"First\")\nelse:\n    p(\"Second\")\n", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: list(map(int, sys.stdin.readline().split()))\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\n# debug = lambda *a, **kw: print(*a, **kw, file=sys.stderr)\n\ns = ins()\n\n\ndef solve():\n    lreq = s[0] == s[-1]\n    odd = len(s) % 2 == 1\n    return odd ^ lreq\n\n\nprint((\"First\" if solve() else \"Second\"))\n", "s=input()\nif len(s)%2==0 and s[0]==s[-1]:\n  print('First')\nelif len(s)%2==1 and s[0]!=s[-1]:\n  print('First')\nelse:\n  print('Second')", "from operator import xor\nS = input()\na = (len(S)+1) % 2\nb = int(S[0] == S[-1])\nans = \"Second\" if xor(a,b) else \"First\"\nprint(ans)", "s = input()\nif ((len(s)%2)+(s[0]==s[-1]))%2:\n    print('First')\nelse:\n    print('Second')", "s = input()\nif s[0] == s[-1]:\n  if len(s) % 2 == 1:\n    print(\"Second\")\n  else:\n    print(\"First\")\nelse:\n  if len(s) % 2 == 1:\n    print(\"First\")\n  else:\n    print(\"Second\")\n", "s=list(input())\nn=len(s)\nflag=1\nif n%2==0:\n  flag=0\nelse:\n  for i in range(n-2):\n    if s[i]!=s[i+2]:\n      flag=1\n  for i in range(1,n-2):\n    if s[i]!=s[i+2]:\n      flag=1\nif s[0]==s[n-1]:\n  flag^=1\nprint('First' if flag==1 else 'Second')", "s = input()\ncount = 0\nplayer = ['First', 'Second']\n\nans = 0\nwhile ans == 0:\n    if len(s) == 2:\n        ans = player[(count+1)%2]\n    else:\n        for i in range(1, len(s)-1):\n            if s[i-1]!=s[i+1]:\n                s = s[:i]+s[i+1:]\n                break\n        else:\n            ans = player[(count+1)%2]\n    count += 1\nprint(ans)#winner", "s = input()\nif s[0] == s[-1]:\n    if len(s) % 2:\n        ans = 'Second'\n    else:\n        ans = 'First'\nelse:\n    if len(s) % 2:\n        ans = 'First'\n    else:\n        ans = 'Second'\nprint(ans)", "S = input()\nif len(S)%2 == 0 and S[0] == S[len(S)-1]:\n  print(\"First\")\nelif len(S)%2 == 0 and S[0] != S[len(S)-1]:\n  print(\"Second\")\nelif len(S)%2 != 0 and S[0] == S[len(S)-1]:\n  print(\"Second\")\nelse:\n  print(\"First\")", "s = input()\nt = (\"First\",\"Second\")\nprint(t[(len(s)%2==0)^(s[0]==s[-1])])", "S = input()\n\nif S[0] == S[-1]:  # \u5947\u6570\u624b\u306e\u8ca0\u3051\n    if len(S) % 2 == 1:\n        print('Second')\n    else:\n        print('First')\nelse:\n    if len(S) % 2 == 0:\n        print('Second')\n    else:\n        print('First')\n", "s=input()\nif (len(s)%2==0)^(s[0]!=s[-1]):\n    print('First')\nelse:\n    print('Second')\n", "s = input()\nn = len(s)\n\nif s[0] == s[n - 1]:\n    if n % 2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if n % 2 == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")", "s=input()\n\ndef solve(s):\n\tif s[0]==s[-1]:\n\t\tA=1 \n\telse:\n\t\tA=0\n\tif len(s)%2==0:\n\t\tB=1\n\telse:\n\t\tB=0\n\tif A+B==1:\n\t\treturn(\"Second\")\n\telse:\n\t\treturn(\"First\")\n\nprint(solve(s))", "s = input()\nans = len(s) & 1\nif (s[0] == s[-1]) ^ ans:\n    print('First')\nelse:\n    print('Second')\n\n", "#D\u554f\u984c\nS = list(str(input()))\nSlen = len(S)\n\nfro = S[0]\nbac = S[-1]\n\nif fro == bac:\n    if Slen%2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    if Slen%2 == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")\n", "s=input();print(\"SFeicrosntd\"[len(s)%2^(s[0]==s[-1])::2])", "a,*s,g=input()\nc=s.count\nif a==g:\n  if(len(s)-c(a)*2)%2:\n    print('Second')\n  else:\n    print('First')\nelse:\n  if(len(s)-max(c(a),c(g))*2)%2:\n    print('First')\n  else:\n    print('Second')", "s = input()\nif s[0] == s[-1] and len(s) % 2 == 0:\n    print('First')\nelif s[0] != s[-1] and len(s) %2 == 1:\n    print('First')\nelse:\n    print('Second')", "s = input()\nif s[0] == s[len(s) - 1]:\n    # a bab a\n    if len(s) % 2 == 0:\n        print(\"First\")\n    else:\n        print(\"Second\")\nelse:\n    # a baba b\n    if len(s) % 2 == 1:\n        print(\"First\")\n    else:\n        print(\"Second\")", "s = input()\nprint(\"First\" if (s[0] == s[-1]) == (len(s) % 2 == 0) else \"Second\")"]