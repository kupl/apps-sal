["n , k = input().split()\n\nn , k = int(n), int(k)\n\nd = {}\n\narr = list(map(int, input().split()))\nfor i in arr:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1;\n\narr = list(set(arr))\narr.sort()\n\ncnt = 0\nfor i in range(len(arr)-1):\n    if (arr[i] + k >= arr[i+1]):\n        cnt += d[arr[i]]\n\nprint(n - cnt)\n", "n, k = [int(x) for x in input().split()]\n\nsize = sorted([int(x) for x in input().split()])\n\nfrom itertools import groupby\nsize = [(k, len(list(l))) for k, l in groupby(size)]\n\nres = size[-1][-1]\nfor i in range(len(size) - 1):\n    if size[i+1][0] > size[i][0] + k:\n        res += size[i][1]\n\nprint(res)\n", "import sys\n\nn, K = list(map(int, sys.stdin.readline().split()))\na = sorted(list(map(int, sys.stdin.readline().split())))\n\neaten = set()\nfor i in range(1, n):\n    x, y = a[i-1], a[i]\n    if y > x and y <= x + K:\n        eaten.add(x)\n\nprint(n - sum(x in eaten for x in a))\n", "#     Educational Codeforces Round 45 (Rated for Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\n \n            \n    \nn,K = getIntList()\n\nz =  getIntList()\nz.sort()\n\n\nres = 0\nlast = -1\nlastc = 0\nfor x in z:\n    if x == last:\n        lastc+=1\n    elif last+K >= x:\n        last = x\n        lastc = 1\n    else:\n        res += lastc\n        last = x\n        lastc = 1\n\nres += lastc\n\nprint(res)\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 998244353\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n,k = LI()\n    a = collections.Counter(LI())\n    r = n\n    ks = sorted(a.keys())\n    for i in range(len(ks)-1):\n        k1 = ks[i]\n        k2 = ks[i+1]\n        if k1 < k2 and k1 + k >= k2:\n            r -= a[k1]\n\n    return r\n\n\nprint(main())\n\n", "def read():\n    return int(input())\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\ndef readmap():\n    return map(int, input().split())\n\n\nN, K = readmap()\nA = readlist()\n\nA.sort()\n\ncount = 0\nsame = 1\nfor i in range(N-1):\n    if A[i] == A[i+1]:\n        same += 1\n    elif A[i+1] <= A[i] + K:\n        count += same\n        same = 1\n    else:\n        same = 1\n\nprint(N - count)", "from collections import Counter\n\nn, K = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na.sort()\nC = Counter(a)\n\nans = n\ns = sorted(C.keys())\nfor i, el in enumerate(s[1:]):\n    if el - s[i] <= K:\n        ans -= C[s[i]]\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\nx = list(map(int, input().split()))\nx.sort()\ny = 0\nd=0\nfor i in range(n-1):\n    if x[i+1]>x[i] and x[i+1]<=x[i]+k:\n        y+=1+d\n        d=0\n    if x[i+1]==x[i]:\n        d+=1\n    if x[i+1]!= x[i]:\n        d=0\nprint(n-y)\n", "n,k=(list(map(int,input().strip().split(' '))))\nbrr=list(map(int,input().strip().split(' ')))\narr=list(set(brr))\narr.sort(reverse=True)\nn=len(arr)\nfor i in range(n-2,-1,-1):\n  if(arr[i]<=arr[i+1]+k):\n    arr[i+1]=-1\nans=[0 for i in range(1000001)]\nfor i in arr:\n  if(i!=-1):\n    ans[i]+=1\nan=[]\nfor i in brr:\n  if(ans[i]!=0):\n    an.append(i)\nprint(len(an))\n\n", "n, k = list( map(int, input().split()))\n\nbact  = list( map(int, input().split()))\nbact.sort()\nres = 0\nlive = 1\nfor i in range(n-1):\n    if bact[i+1] == bact[i]: # cannot consume\n        live += 1\n    elif bact[i+1] - bact[i] > k: # all unconsumed survived\n        res += live\n        live = 1\n    else:\n        live = 1 # current is alive, others eaten\n\nres += live\n\nprint(res)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort(reverse=True)\n\nans = 1\ni = 1\nwhile i < len(a):\n\tif a[i - 1] > a[i]:\n\t\twhile i < len(a) and a[i] + k >= a[i - 1]:\n\t\t\ti += 1\n\ti += 1\n\tif i - 1 < len(a):\n\t\tans += 1\n\nprint(ans)", "#!/usr/bin/env python3\n\n[n, K] = list(map(int, input().strip().split()))\nais = list(map(int, input().strip().split()))\n\nais.sort()\nres = 0\ncnt = 1\nfor i in range(n - 1):\n\tif ais[i + 1] == ais[i]:\n\t\tcnt += 1\n\telse:\n\t\tif ais[i + 1] > ais[i] + K:\n\t\t\tres += cnt\n\t\tcnt = 1\n\nres += cnt\nprint (res)\n", "n,k = list(map(int,input().split()))\nai = list(map(int,input().split()))\nai.sort()\nlast = ai[n-1]\nans = 1\nlastAlive = ai[n-1]\nfor i in range(n-2,-1,-1):\n    if last - k > ai[i] or lastAlive == ai[i]:\n        ans += 1\n        lastAlive = ai[i]\n    last = ai[i]\nprint(ans)\n", "s = input()\nn, K = list(map(int, s.split()))\n\ns = input()\na = list(map(int, s.split()))\n\na = sorted(a)\n\nc = 0\nl = 0\nr = 1\n\nwhile r < len(a):\n    if a[r] == a[l]:\n        r += 1\n    else:\n        if a[l] + K >= a[r]:\n            c += (r - l)\n        l = r\n        r += 1\n\nprint(len(a) - c)", "n , k = list(map(int, input().split()))\ndata =  list(map(int,input().split()))\n\ndata.sort()\ndata = data[::-1]\nans = 1\n\nprev = data[0]\n\nfor i in range(1, n):\n    if not ( data[i] != prev and  data[i] + k >= prev):\n        ans +=1\n\n    if i < n - 1 and data[i] == data[i + 1]:\n        prev = prev\n    else:\n        prev = data[i]\n \nprint(ans)\n    \n", "size, k = input().split()\nsize = int(size)\nk = int(k)\n\nnums = input().split()\nnums = [int(i) for i in nums]\n\noccurances={i:0 for i in nums}\nfor num in nums:\n    occurances[num]+=1\n\nans = []\nnums = sorted(occurances.keys())\nfor i in range(len(nums)-1):\n    if not (nums[i]<nums[i+1] and nums[i]+k>=nums[i+1]):\n        ans.append(nums[i])\n\nans.append(nums[-1])\nans_num=0\nfor i in ans:\n    ans_num += occurances[i]\n\nprint(ans_num)\n", "n, k = list(map(int, input().split()))\nlast = 10000000\nres = 0\ncur_res = 1\nfor cur in sorted(list(map(int, input().split()))):\n\tif cur == last:\n\t\tcur_res += 1\n\telse:\n\t\tif cur > last+k:\n\t\t\tres += cur_res\n\t\tcur_res = 1\n\tlast = cur\nres += cur_res\nprint(res)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n(n, K) = (int(i) for i in input().split())\na   = [int(i) for i in input().split()]\n\nstart = time.time()\n\na.sort()\nans = n\n\nflag = 1\nfor i in range(1, n):\n    if a[i-1] == a[i]:\n        flag +=1\n    elif a[i] <= a[i-1]+K:\n        ans -=flag;\n        flag = 1\n    else:\n        flag = 1\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "n,k=list(map(int,input().strip().split()))\nl=list(map(int,input().strip().split()))\ni=0\nj=1\nl.sort()\nle=len(l)\ndeletion=0\nvalid=[0 for i in range(le)]\nwhile(j<le and i<le):\n\tif (valid[i]==1):\n\t\ti=i+1\n\t\tcontinue\n\telif (i==j):\n\t\tj=j+1\n\t\tcontinue\n\telif (l[i]<l[j] and l[j]<=(l[i]+k)):\n\t\tdeletion=deletion+1\n\t\tvalid[i]=1\n\t\ti=i+1\n\telif (l[i]==l[j]):\n\t\tj=j+1\n\t\tcontinue\n\telse:\n\t\ti=i+1\nprint(le-deletion)\n", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return list(map(int, stdin.readline().split()))\n#lines = stdin.readlines()\n\n\nn, K = rint()\n\na = list(rint())\n\na.sort()\n#print(K)\n#print(a)\n\ncnt = 0\ncnt_same = 1\nfor i in range(n-1):\n    if a[i+1] == a[i]:\n        cnt_same += 1\n        continue\n    if a[i+1] - a[i] <= K:\n        cnt_same = 1\n        continue\n    else:\n        cnt += cnt_same\n        cnt_same = 1\n\n#print(cnt, cnt_same)\nprint(cnt+ cnt_same)\n\n\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn, k = mi()\na = li()\na.sort()\nans = 0\ni = 0\nwhile i < len(a):\n    j = i + 1\n    c = 1\n    while j < len(a) and a[j] <= a[j - 1] + k:\n        if a[j] == a[j - 1]:\n            c += 1\n        else:\n            c = 1\n        j += 1\n    ans += c\n    i = j\nprint(ans)", "n, K = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nk = len(a)\n\ni = 0\nwhile i < len(a):\n    if a[i] == a[-1]:\n        break\n    j = i+1\n    while a[i] == a[j]:\n        j += 1\n    if a[i] + K >= a[j]:\n        k -= j - i\n    i = j\n\nprint(k)", "n, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\na.sort()\nans = n\nc = 1\nfor i in range(0, n-1):\n    if a[i] == a[i+1]:\n        c += 1\n    elif (a[i]+k >= a[i+1]):\n        ans -= c\n        c = 1\n    else:\n        c = 1\nprint(ans)\n", "n, K = [int(i) for i in input().split()]\n\na = input().split()\nfor i in range(n):\n\ta[i] = int(a[i])\n\na.sort()\n\ni = 0\nj = 1\nans = n\n\nwhile True:\n\tif j == n:\n\t\tbreak\n\tif a[j] == a[i]:\n\t\tj += 1\n\telse:\n\t\tif a[i] + K >= a[j]:\n\t\t\tans -= 1\n\t\t\ti += 1\n\t\telse:\n\t\t\ti += 1\n\nprint(ans)"]