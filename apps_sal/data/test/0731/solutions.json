["import math\nw,m,k=list(map(int,input().split()))\n\nx=int(\"1\"+(\"0\"*len(str(m))))\n\nh=x-m\nn=len(str(m))\n\nans=w//(n*k)\n\nif(ans>h):\n    ans=h\n    w-=h*n*k\n    while(w>0):\n        n+=1\n        x=w//(n*k)\n        if(x>=10**(n-1)*9):\n            ans+=(10**(n-1))*(9)\n            w-=(n*k*(10**(n-1))*(9))\n        else:\n            ans+=x\n            break\nprint(ans)\n    \n    \n", "def cnt(x, y):\n  return y-x\n\nw, m, k = list(map(int, input().split()))\np, d, res = 1, 0, 0\nwhile p <= m:\n  p *= 10\n  d += 1\nwhile cnt(m, p)*d*k <= w:\n  w -= cnt(m, p)*d*k\n  res += cnt(m, p)\n  m = p\n  p *= 10\n  d += 1\nres += w//(d*k)\n\nprint(res)\n", "a, b, c = list(map(int, input().split()))\nans = 0\ntemp = len(str(b))\n\nwhile a > 0:\n\tcnt = \"1\" + \"0\" * temp\n\td = int(cnt) - b\n\tcur = a // (temp * c)\n\ta -= min(d, cur) * c * temp\n\tans += min(d, cur)\n\tb = int(cnt)\n\ttemp += 1\n\tif cur == 0:\n\t\tbreak\n\t\nprint(ans)\n", "w, m, k = map(int, input().split())\nL = len(str(m))\nend = m\nflag = False\nwhile True:\n    if w > (10 ** L - end) * k * L:\n        w -= (10 ** L - end) * k * L\n        end = 10 ** L\n        L += 1\n        #if w < L * k:\n            #print(end - m)\n            #flag = True\n            #break\n        #else:\n            #w -= L * k\n            #end = 10 ** L + 1\n    else:\n        end += w // (L * k)\n        break\n\nif not(flag):\n    print(end - m)", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nw, m, k = readln()\ns = 1\nans = 0\nwhile w:\n    while m >= 10 ** s:\n        s += 1\n    cnt = 10 ** s - m\n    if cnt * s * k <= w:\n        ans += cnt\n        w -= cnt * s * k\n        m = 10 ** s\n    else:\n        ans += w // (s * k)\n        w = 0\nprint(ans)\n", "w, m, k = map(int, input().split())\ncost, num = 0, 0\nln = len(str(m))\naim = 10**ln\nif (aim - m)*ln*k <= w:\n    cost += (aim - m)*ln*k\n    num += (aim - m)\n    m = aim\n    ln += 1\n    while True:\n        if ln*k*9*10**(ln-1)+cost <= w:\n            cost += ln*k*9*10**(ln-1)\n            num += 9*10**(ln-1)\n            m = 10**ln\n            ln += 1\n        else:\n            break\nlastm = m\naim = 10**ln\nmid, lastn = 0, 0\nwhile aim != m+1:\n    mid = m + (aim-m)//2\n    if ln*k*(mid-lastm)+cost <= w:\n\n        m = mid\n\n    else:\n        aim = mid\n\nprint(num + m - lastm)", "import sys\n\nw, m, k = map(int, input().split())\n\ndef next(n):\n    a, cnt = 1, 1\n    while a <= n:\n        a *= 10\n        cnt += 1\n    return a, cnt - 1\n\nm0 = m\n\nwhile w > 0:\n    M, s = next(m)\n    if (M - m) * s * k >= w:\n        M = (w + m * s * k) // (s * k)\n        print(M - m0)\n        return\n    else:\n        w -= (M - m) * s * k\n        m = M", "w,m,k=map(int,input().split())\nans=0\nwhile w>=len(str(m))*k:\n    ans+=min(w//(k*len(str(m))),10**len(str(m))-m)\n    w1=w\n    m1=m\n    m+=min(w1//(k*len(str(m1))),10**len(str(m1))-m1)\n    w-=k*len(str(m1))*min(w1//(k*len(str(m1))),10**len(str(m1))-m1)\n    #print(w,m,ans)\nprint(ans)", "(w, m, k) = (int(string) for string in input().split())\nanswer = 0\ndigitCount = len(str(m))\nwhile w > 0:\n    ceiling = 10**digitCount\n    numberCountInThisLength = ceiling - m\n    cost = digitCount * k * numberCountInThisLength\n    if w > cost:\n        w -= cost\n        answer += numberCountInThisLength\n        m = ceiling\n        digitCount += 1\n    else:\n        answer += w / (k*digitCount)\n        break\n\nprint('%d' % answer)\n", "from math import log10\n\nw,m,k = list(map(int,input().split()))\nd = 0\nz = int(log10(m))\nzlom = 10**z\nwhile w > 0 :\n\tz+=1\n\tzlom*=10\n\tc = (zlom-m)*z*k\n\tif c > w :\n\t\tx = w//(z*k)\n\t\td+=x\n\t\tbreak\n\tw-=c\n\td+=(zlom-m)\n\tm = zlom\nprint(d)\n", "w,m,k=list(map(int,input().split()))\n#print('w='+str(w)+' m='+str(m)+' k='+str(k))\nn=m-1\nl=len(str(m))\n#print('l='+str(l))\nwhile w>0:\n    t=((10**l)-n-1)*l*k\n    #print('t='+str(t))\n    if w<=t:\n        n+=w//(l*k)\n        w=0\n    else:\n        n=10**l\n        w=w-t-(l+1)*k\n        l+=1\n    #print('n='+str(n)+' w='+str(w))\nprint(n-m+1)\n", "w, m, k = map(int, input().split())\nans = 0\n\nwhile w > 0:\n    l = len(str(m))\n    ans += min(w / (l * k), (10 ** l - m))\n    w -= k * (10 ** l - m) * l\n    m = 10 ** l\nprint (int(ans))", "w, m, k = input().split()\nk = int(w) // int(k)\nl, m = len(m), int(m)\ns = pow(10, l)\nif (s - m) * l > k: print(k // l)\nelse:\n    k -= (s - m) * l\n    l += 1\n    d = 9 * s\n    while d * l <= k:\n        k -= d * l\n        l += 1        \n        s += d\n        d = 9 * s\n    print(s - m + k // l)", "w, m, k = tuple(map(int,input().split()))\ns = len(str(m))\nt = m\nn = 10 ** s\nr = (n - t) * s * k\nwhile w >= r:\n    w -= r\n    t = n\n    n *= 10\n    s += 1\n    r = (n - t) * s * k\nif w != 0:\n    n //= 10\n    if n < m:\n        n = 0\n    else: n -= m\n    r = s * k\n    n += w // r\nelse: n = n // 10 - m\nprint(n)", "# -*- coding: utf-8 -*-\nimport sys\n\nw, m, k = (int(x) for x in sys.stdin.readline().split(' '))\nn = w // k\n\ndef S(x):\n    i = 0\n    while x:\n        i += 1\n        x //= 10\n    return i\n\nc = 0\nl = S(m)\nwhile True:\n    num = 10 ** l - m\n    if n > num * l:\n        n -= num * l\n        c += num\n        m = 10 ** l\n        l += 1\n    else:\n        c += n // l\n        break\nprint(c)", "def number_of_digits(n):\n    if n == 0:\n        return 0\n    else:\n        return 1 + number_of_digits(n//10)\n\ndef calc(n):\n    if n <= 0:\n        return 0\n    d = number_of_digits(n)\n    ret = 0\n    for i in range(1,d):\n        ret += 9*(10**(i-1))*i\n    ret += (n-(10**(d-1))+1)*d\n\n    return ret\n\n\ndef calc2(f,t):\n    return calc(t) - calc(f-1)\n\ndef solve(w,m,k):\n    lower = 0\n    upper = m+w\n    for i in range(100):\n        mid = (lower+upper)//2\n        cur = calc2(m,mid)\n\n        if k*cur <= w:\n            lower = mid\n        else:\n            upper = mid\n\n    return lower - m + 1\n\ndef main():\n    w,m,k = list(map(int,input().split()))\n    print(solve(w,m,k))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def f(x):\n    digs = len(str(x))\n    \n    ndig = digs*(x - 10**(digs-1) + 1)\n    for i in range(1, digs):\n        ndig += i * 9*10**(i-1)\n    return ndig\n\na, b, c = list(map(int, input().split(' ')))\nnum = a // c\n\nneed = num + f(b-1)\n\nlo = 0\nhi = 10**18\n\nwhile lo < hi:\n    mid = (lo + hi + 1) // 2\n    if f(mid) > need:\n        hi = mid - 1\n    else:\n        lo = mid\nprint(lo-b+1)\n", "import sys\n\ndef solve():\n    w,m,k, = rv()\n    small, large = 0, int(1e16)\n    while small < large:\n        avg = (small + large + 1) // 2\n        if works(avg, w, m, k): small = avg\n        else: large = avg - 1\n    print(small)\n\ndef works(numbers, maxcost, startnum, multiplier):\n    maxnumber = numbers + startnum - 1\n    res = 0\n    for length in range(1, 20):\n        goodoflength = max(0, maxnumber - (pow(10, length - 1) - 1))\n        badoflength = max(0, startnum - (pow(10, length - 1) - 1) - 1)\n        res += (goodoflength - badoflength)\n    return res * multiplier <= maxcost\n\ndef rv(): return list(map(int, input().split()))\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n\n\n", "p=input().split()\nw=int(p[0])\nm=int(p[1])\na=m\ncost=int(p[2])\nc=0\nwhile(m!=0):\n    m=m//10\n    c=c+1\nsum=0\nx=10**c-a\nif cost*c*x>=w:\n    print(w//(cost*c))\nelse:\n    sum=sum+x\n    w=w-cost*c*x\n    for i in range(c+1,18):\n        y=9*(10**(i-1))\n        if(y*i*cost>=w):\n            break\n        else:\n            w=w-cost*y*i\n            sum=sum+y\n    print(sum+w//(cost*i))\n        \n", "def s(n):\n    return len(str(n))\n\ndef main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    [w,m,k]=get()\n    ans=0\n    while w>= (10**s(m)-m)*s(m)*k:\n        w-=(10**s(m)-m)*s(m)*k\n        ans+=(10**s(m)-m)\n        m=10**s(m)\n    w=w//(k*(s(m)))\n    ans+=(w)\n    print(ans)\n    \n    if mode==\"file\":f.close()\n\ndef __starting_point():\n    main()\n\n__starting_point()", "w, m, k = list(map(int, input().split()))\nd, v = len(str(m)), 0\nc = min(10 ** d - m, w // (k * d))\nwhile c:\n    v += c\n    w -= c * k * d\n    m = 10 ** d\n    d += 1\n    c = min(10 ** d - m, w // (k * d))\nprint(v)\n", "def fhelp(a):\n    s = 1\n    f = 10\n    res = 0\n    while a >= s:\n        if (a >= s and a < f):\n            break\n        res += len(str(s)) * k * (f - s)\n        s *= 10\n        f *= 10  \n    res += len(str(a)) * k * (a - s + 1)\n    return res\n\ndef f(a, b):\n    return fhelp(b) - fhelp(a - 1)\n    \nw, m, k = list(map(int, input().split()))\n#print(fhelp(10))\nl = m - 1\nr = 1000000000000000000\nwhile (r - l > 1):\n    c = (r + l) // 2\n    if w >= f(m, c):\n        l = c\n    else:\n        r = c\nprint(l - m + 1)\n", "def fhelp(a):\n    s = 1\n    f = 10\n    res = 0\n    while a >= s:\n        if (a >= s and a < f):\n            break\n        res += len(str(s)) * k * (f - s)\n        s *= 10\n        f *= 10  \n    res += len(str(a)) * k * (a - s + 1)\n    return res\n\ndef f(a, b):\n    return fhelp(b) - fhelp(a - 1)\n    \nw, m, k = map(int, input().split())\nw += fhelp(m - 1)\n#print(fhelp(10))\nsumm = 0\npower = 1\ncount = 9\nwhile summ <= w:\n    q = power * k * count\n    if summ + q > w:\n        break\n    summ += q\n    power += 1\n    count *= 10\ndiff = w - summ\ndiff //= (power * k)\nnum = 10**(power - 1) + diff\nprint(num - m)", "w, m, k = map(int, input().split())\nw //= k\n\npre = 0\ncur = 9\nlen = 1\nsaved_m = m\nwhile m > cur:\n\tpre += cur * len\n\tm -= cur\n\tcur *= 10\n\tlen += 1\npre += (m - 1) * len\n\nw += pre\n\nans = 0\ncur = 9\nlen = 1\nwhile w > cur * len:\n\tw -= cur * len\n\tans += cur\n\tcur *= 10\n\tlen += 1\nans += w // len\n\nprint(ans - saved_m + 1)", "w, m, k = map(int, input().split())\n\n\ndef size(a):\n    return len(str(a))\n\ndef how_many(m, n):\n    len1 = size(m)\n    len2 = size(n)\n    if len1 == len2:\n        return (n - m + 1) * len1\n    else:\n        cnt = 0\n        for len in range(len1, len2 + 1):\n            if len == len1:\n                cnt += (pow(10, len1) - m) * len\n            elif len == len2:\n                cnt += (n - pow(10, len2 - 1)) * len\n            else:\n                cnt += (pow(10, len) - pow(10, len - 1)) * len\n        return cnt + len2\n\ndef check(n):\n    return how_many(m, n) * k <= w\n\n\nl = m\nr = 10 ** 18\nwhile (r - l > 1):\n    n = l + (r - l) // 2\n    if check(n):\n        l = n\n    else:\n        r = n\nif l != m:\n    print(l - m + 1)\nelse:\n    print(int(check(m)))"]