["t=int(input())\nfor j in range(t):\n  a,b,c,d=map(int, input().split())\n  print(b,c,c)", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=int(input())\nfor tt in range(t):\n    #n=int(input())\n    a,b,c,d= map(int, sys.stdin.readline().split(' '))\n    print(b,c,c)\n    #a=list(map(int,sys.stdin.readline().split(' ')))\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n = int(input())\n\nfor i in range(n):\n    a,b,c,d = list(map(int, input().split()))\n    print(b, c, c)\n", "t = int(input())\nfor _ in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    print(b, c, c)\n    \n", "import sys\nimport heapq\nimport math\n\ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n \ndef rinput():\n    return map(int, input().split())\n\ndef rlinput():\n    return list(map(int, input().split()))\n\ndef YES(flag):\n    if flag:\n        return \"YES\"\n    return \"NO\" \n\ndef main():\n    #n = int(sys.stdin.readline().strip())\n    # n = iinput()\n    # n, k = rinput()\n    # n, m, k = rinput()\n    q = rlinput()\n    print(q[1], q[2], q[2])\n    \n        \n    \nfor i in range(iinput()):\n    main()", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\nimport operator\nimport fileinput\nimport copy\n\nORDA = 97\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return [int(i) for i in input().split()]\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nfor _ in range(ii()):\n    a, b, c, d = mi()\n    print(b, c, c)", "t = int(input())\n\nfor g in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    print(b, c, c)\n", "t = int(input())\nwhile t:\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)\n    t -= 1", "t=int(input())\nfor i in range(t):\n    a, b,c, d=list(map(int, input().split()))\n    x=b\n    y=c\n    z=c\n    print(x, y, z)\n", "import sys\n\nfor _ in range(int(sys.stdin.readline())):\n\ta, b, c, d = map(int, sys.stdin.readline().split())\n\tprint(b, c, c)\t", "T = int(input())\nfor i in range(T):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "\"\"\"\nimport atexit\nimport io\nimport sys\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\"\"\"\n\ntestcases = int(input())\n\nfor case in range(testcases):\n    (a,b,c,d)  = [int(zax) for zax in input().split()]\n    print(b,c,c)", "# import bisect\n# import os\n# import io\n# from collections import Counter\nimport bisect\nfrom collections import defaultdict\n# import math\n# import random\n# import heapq as hq\n# from math import sqrt\nimport sys\nfrom functools import reduce, cmp_to_key\nfrom collections import deque\nimport threading\nfrom itertools import combinations\n\n\n# sys.setrecursionlimit(200000)\n# input = io.BytesIO(os.read(0, os.fstat(0).st_size)).readline\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef iinput():\n    return int(input())\n\n\ndef tinput():\n    return input().split()\n\n\ndef rinput():\n    return map(int, tinput())\n\n\ndef rlinput():\n    return list(rinput())\n\n\n# mod = int(1e9)+7\n\n\ndef factors(n):\n    return set(reduce(list.__add__,\n                      ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))\n\n\n# ----------------------------------------------------\n# sys.stdin = open('input.txt', 'r')\n# sys.stdout = open('output.txt', 'w')\n\ndef __starting_point():\n    for _ in range(iinput()):\n        a,b,c,d=rinput()\n        print(b,c,c)\n__starting_point()", "for _ in range(int(input())):\n    a,b,c,d = list(map(int, input().split()))\n    print(b, c, c)\n", "def main():\n    a, b, c, d = list(map(int, input().split()))\n    print(b, c, c)\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()", "t=int(input())\nfor _ in range(t):\n    a,b,c,d=map(int,input().split())\n    print(b,c,c)", "from sys import stdin\ninput = stdin.readline\n\nfor _ in range(int(input())):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "for i in range(int(input())):\n    a,b,c,d=map(int,input().split())\n    print(b,c,c)", "t = int(input())\nfor _ in range(t):\n    a,b,c,d = list(map(int,input().split()))\n    print(b,c,c)\n", "for _ in range(int(input())):\n    a, b, c, d = tuple(map(int, input().split()))\n    print(b, c, c)\n", "t = int(input())\nfor _ in range(t):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "t = int(input())\nfor _ in range(t):\n    a, b, c, d = list(map(int, input().split()))\n    print(b, c, c)\n", "t = int(input())\nfor _ in range(t):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "for i in range(int(input())):\n    a,b,c,d = map(int,input().split())\n    print(b,c,c)", "t = int(input())\nfor i in range(t):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "import sys\ne = int(input())\nfor ee in range(e):\n    a,b,c,d = map(int, input().split())\n    # a = [int(i) for i in input().split(' ', n - 1)]\n    print(b, c, c)", "t=int(input())\nfor _ in range(t):\n    a,b,c,d=list(map(int,input().split()))\n    print(b,c,c)", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    a, b, c, d = map(int, input().split())\n    print(b, c, c)", "# The only beautiful path is the one you create. Maxime Lagac\ufffd\n# by : Blue Edge - Create some chaos\n\nfor _ in range(int(input())):\n    a,b,c,d=list(map(int,input().split()))\n    print(b,c,c)\n"]