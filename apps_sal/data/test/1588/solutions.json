["import sys\n\ndef solve():\n    n = int(input())\n    s = 1000000\n    xset = set(map(int, input().split()))\n    res = set()\n    wantother = 0\n    for i in range(1, s + 1):\n        opposite = s - i + 1\n        if i in xset:\n            if opposite not in xset:\n                res.add(opposite)\n            else:\n                wantother+=1\n    wantother /= 2\n    for i in range(1, s + 1):\n        if wantother == 0: break\n        opposite = s - i + 1\n        if i not in res and opposite not in res and i not in xset and opposite not in xset:\n            res.add(i)\n            res.add(opposite)\n            wantother-=1\n\n    print(len(res))\n    return \" \".join(map(str, res))\n\n\n\n    \nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "import sys\n\ndef solve():\n    n = int(input())\n    s = 1000000\n    xset = set(map(int, input().split()))\n    res = set()\n    wantother = 0\n    for i in range(1, s + 1):\n        opposite = s - i + 1\n        if i in xset:\n            if opposite not in xset:\n                res.add(opposite)\n            else:\n                wantother+=1\n    wantother /= 2\n    for i in range(1, s + 1):\n        if wantother == 0: break\n        opposite = s - i + 1\n        if i not in res and i not in xset and opposite not in xset:\n            res.add(i)\n            res.add(opposite)\n            wantother-=1\n\n    print(len(res))\n    return \" \".join(map(str, res))\n\n\n\n    \nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "import sys\n\ndef solve():\n    n = int(input())\n    s = 1000000\n    xset = set(map(int, input().split()))\n    res = set()\n    wantother = 0\n    for i in range(1, s + 1):\n        opposite = s - i + 1\n        if i in xset:\n            if opposite not in xset:\n                res.add(opposite)\n            else:\n                wantother+=1\n    wantother /= 2\n    for i in range(1, s + 1):\n        if wantother == 0: break\n        opposite = s - i + 1\n        if i not in res and i not in xset and opposite not in xset:\n            res.add(i)\n            res.add(opposite)\n            wantother-=1\n\n    print(len(res))\n    return \" \".join(map(str, res))\n\n\n\n    \nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "def __starting_point():\n    n = int(input())\n    l = [int(i) for i in list(input().split())]\n\n    # mask to indicate if a number is taken\n    size = 10**6\n    mask = [0] * (size+1)\n\n    for i in l:\n        mask[i] = 1\n\n    counter = 0\n\n    result = []\n\n    for i in range(1, size+1):\n        if mask[i] == 1 and mask[size+1-i] == 0:\n            # symmetric one not taken\n            mask[size + 1 - i] = 2\n            result.append(size + 1 - i)\n\n        elif mask[i] == 1 and mask[size+1-i] == 1:\n            # take both one\n            counter += 1\n            mask[size+1-i] = 2\n\n        elif mask[i] == 0 and mask[size+1-i] == 0 and counter > 0:\n            mask[i] = 2\n            mask[size+1-i] = 2\n            result.append(i)\n            result.append(size+1-i)\n            counter -= 1\n\n    print(len(result))\n    print(*result)\n\n__starting_point()"]