["t = int(input())\nfor k in range(t):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n        continue\n    for i in range(1, int(x ** 0.5) + 2):\n        if x % i == 0 and (x // i - i) % 2 == 0 and (x // i - (x // i - i) // 2) ** 2 >= x:\n            a, b = x // i, i\n            y = (a - b) // 2\n            n = a - y\n            if y == 0:\n                continue\n            m = n // y\n            if n // m != y:\n                continue\n            print(n, m)            \n            break\n    else:\n        print(-1)", "import math\nt = int(input())\nfor _ in range(t):\n    suc = False\n    x = int(input())\n    for n in range(int(x**0.5)+1,int((4*x/3)**0.5)+2):\n        if int((n**2-x)**0.5)**2 == n**2-x:\n            mm = int((n**2-x)**0.5)\n            m = math.floor(n/mm)\n            if n**2-(n//m)**2 == x:\n                print(n,m)\n                suc = True\n                break\n    if not suc: print(-1)\n", "from math import sqrt,ceil\n\ndef func(x,):\n\ta = int(ceil(sqrt(x)))\n\tb = int(ceil(sqrt(2*x)))\n\tfor n in range(a,b+1):\n\t\tif n == 0:\n\t\t\treturn 1,1\n\t\ttemp = sqrt((n**2 - x))\n\t\tif temp%1 != 0 or temp == 0:\n\t\t\tpass\n\t\telse:\n\t\t\tm = int(n/temp)\n\t\t\tif int(n/m) == int(temp):\n\t\t\t\treturn n,m\n\treturn -1,-1\n\n\nt = int(input())\nfor i in range(t):\n\tx = int(input())\n\tn,m = func(x)\n\tif n == -1:\n\t\tprint(-1)\n\telse:\n\t\tprint(n,m)\n", "import math\n\ndef nextsquare(x):\n\ty = int(math.sqrt(x))\n\treturn ((y+1)*(y+1))\n\n\n\na = input()\nfor i in range(int(a)):\n\tk = int(input())\n\tj = nextsquare(k)\n\tanswer1 = -1\n\tanswer2 = 0\n\twhile (j <= (4 * k / 3) + 1):\n\t\tl = j - k\n\t\tif not (l == 0):\n\n\t\t\tif (int(math.sqrt(l)) * int(math.sqrt(l)) == l):\n\t\t\t\tn = int(math.sqrt(j))\n\t\t\t\tm = int(math.sqrt(l))\n\t\t\t\tr = n % m\n\t\t\t\tm1 = (n - r)/m\n\t\t\t\tif r < m1:\n\t\t\t\t\tanswer1 = n\n\t\t\t\t\tanswer2 = int(m1)\n\t\tj =nextsquare(j)\n\tif answer1 == -1 :\n\t\tprint(answer1)\n\telse:\n\t\tprint(answer1,answer2)\n", "n = int(input())\nfor x in range(n):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n    else:\n        flag = True\n        for d in range(1, int(x**0.5)+2):\n            if x % d == 0:\n                s = x // d\n                n = (s + d)//2\n                if int(n) != n:\n                    continue\n                nm = s - n\n                if nm <= 0:\n                    continue\n                m = n//nm\n                if (m>0) and (n**2 - (n//m)**2 == x):\n                    print(n, m)\n                    flag = False\n                    break\n        if flag:\n            print(-1)", "n = int(input())\nfor x in range(n):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n    else:\n        flag = True\n        for d in range(1, int(x**0.5)+2):\n            if x % d == 0:\n                s = x // d\n                n = (s + d)//2\n                if int(n) != n:\n                    continue\n                nm = s - n\n                if nm == 0:\n                    continue\n                m = n//nm\n                if (m>0) and (n**2 - (n//m)**2 == x):\n                    print(n, m)\n                    flag = False\n                    break\n        if flag:\n            print(-1)", "n = int(input())\nfor x in range(n):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n    else:\n        flag = True\n        for d in range(1, int(x**0.5)+1):\n            if x % d == 0:\n                s = x // d\n                n = (s + d)//2\n                if int(n) != n:\n                    continue\n                nm = s - n\n                if nm <= 0:\n                    continue\n                m = n//nm\n                if (m>0) and (n**2 - (n//m)**2 == x):\n                    print(n, m)\n                    flag = False\n                    break\n        if flag:\n            print(-1)", "n = int(input())\nfor x in range(n):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n    else:\n        flag = True\n        for d in range(1, int(x**0.5)+1):\n            if x % d == 0:\n                s = x // d\n                n = (s + d)//2\n                if int(n) != n:\n                    continue\n                nm = s -n\n                if nm <= 0:\n                    continue\n                m = n//nm\n                if (m>0) and (n**2 - (n//m)**2 == x):\n                    print(n, m)\n                    flag = False\n                    break\n        if flag:\n            print(-1)", "import time\nimport itertools\n\nimport math\n\nx = 10**9+2\n\n\n\ndef find_factor(x):\n    k = int(math.ceil(math.sqrt(x)))\n    if x//k == k:\n        k -=1\n    for i in range(k,2,-1):\n        if not x%i:\n            yield i\n    yield 1\n\ndef find_factor_div2(x):\n    k = int((math.ceil(math.sqrt(x))//2)*2)\n    if x//k == k:\n        k -=2\n    for i in range(k, 1, -2):\n        if not x%i and not (x//i)%2:\n            yield i\n    return 0\n\ndef _sol_kMn_kPn_for_x(x):\n\n    if x%4 == 0:\n        f = find_factor_div2(x)\n        if f:\n            for k in f:\n                yield k, x/k\n        return 0\n    if x%2 == 0:\n        return 0\n    f = find_factor(x)\n    if f:\n        for k in f:\n\n            yield k, x/k\n    return 0\n\n\ndef sol_k_n_for_x(x):\n    if x < 4:\n        if x == 3:\n            yield (1, 2)\n        elif x == 0:\n            yield (1, 1)\n        else:\n            return 0\n        return\n\n    k_n = _sol_kMn_kPn_for_x(x)\n\n    if not k_n:\n        return 0\n    for _k, _n in k_n:\n        n, k =  ((_n - _k)//2, (_k + _n)//2)\n\n        yield n,k\n\n\ndef sol_m_n(x):\n\n    if x == 0:\n        return (1, 1)\n\n    kn = sol_k_n_for_x(x)\n\n    if not kn:\n        return -1, -1\n    for k, n in kn:\n        l = math.ceil((n+1)/(k+1))\n        r = math.floor((n)/(k))\n    #if l == (n+1)/(k+1):\n     #   l +=1\n\n        if l <= r:\n            return r, n\n    return -1,-1\n\n\ndef __starting_point():\n    n = int(input())\n\n    for i in range(n):\n        q = int(input())\n        m, n = sol_m_n(q)\n        if m == -1:\n            print(-1)\n        else:\n            print(int(n), int(m))\n\n# 5, 8\n\n__starting_point()", "import math\n\nt = int(input())\n\nfor rr in range(t):\n\toc = int(input())\n\tfl = False\n\tif oc != 0:\n\t\tfor i in range(2,40000):\n\t\t\tsq1 = i\n\t\t\tv1 = sq1*sq1 - oc\n\t\t\tif v1 > 0 and int(math.sqrt(v1))**2 == v1:\n\t\t\t\tsv1 = int(math.sqrt(v1))\n\t\t\t\tl = 2\n\t\t\t\tr = sq1\n\t\t\t\twhile (r-l) > 1:\n\t\t\t\t\tmid = int((l+r)/2)\n\t\t\t\t\tvc = int(sq1/mid)\n\t\t\t\t\tif (sq1*sq1 - vc*vc) > oc:\n\t\t\t\t\t\tr = mid - 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tl = mid\n\t\t\t\tcr = int(sq1/r)\n\t\t\t\tcl = int(sq1/l)\n\n\t\t\t\tif (sq1*sq1 - cr*cr) == oc and r <= sq1:\n\t\t\t\t\tfl = True\n\t\t\t\t\tst = str(sq1) +' '+ str(r)\n\t\t\t\t\tprint(st)\t\n\t\t\t\t\tbreak \n\t\t\t\telif (sq1*sq1 - cl*cl) == oc and l <= sq1:\n\t\t\t\t\tfl = True\n\t\t\t\t\tst = str(sq1) +' '+ str(l)\n\t\t\t\t\tprint(st)\n\t\t\t\t\tbreak\n\n\tif not fl:\n\t\tif oc == 0:\n\t\t\tprint(\"1 1\")\n\t\telse:\n\t\t\tprint(-1)", "from math import *\n\ndef calcul(xi):\n\tn=int(sqrt(xi))+1\n\tn2=n**2\n\twhile n2<=2*xi and n<=1000000000:\n\t\tnsm2=n2-xi\n\t\tnsm=sqrt(nsm2)\n\t\tif nsm==int(nsm):\n\t\t\tm=n//nsm\n\t\t\tif n2 - (n//m)**2 == xi:\n\t\t\t\treturn n, int(m)\n\t\tn+=1\n\t\tn2=n**2\n\treturn -1,-1\n\nt=int(input())\nfor _ in range(t):\n\txi=int(input())\n\tif xi==0:\n\t\tprint(\"1 1\")\n\t\tcontinue\n\tn,m=calcul(xi)\n\tif m==-1:\n\t\tprint(-1)\n\telse:\n\t\tprint(n,m)\n", "from math import sqrt\n\n# import sys\n# from io import StringIO\n# sys.stdin = StringIO(open(__file__.replace('.py', '.in')).read())\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n\n    if n == 0:\n        print(1, 1)\n        continue\n\n    sq = int(sqrt(n)) + 1\n    while sq * sq <= 2 * n:\n        zs = sqrt(sq * sq - n)\n        if zs.is_integer():\n            m = sq // zs\n            if sq * sq - (sq // m) ** 2 == n:\n                print(sq, int(m))\n                break\n        sq += 1\n    else:\n        print(-1)\n", "n = int(input())\nfor x in range(n):\n    x = int(input())\n    if x == 0:\n        print(1, 1)\n    else:\n        flag = True\n        for d in range(1, int(x**0.5)+2):\n            if x % d == 0:\n                s = x // d\n                n = (s + d)//2\n               # if int(n) != n:\n                  #  continue\n                nm = s - n\n                if nm == 0:\n                    continue\n                m = n//nm\n                if (m>0) and (n**2 - (n//m)**2 == x):\n                    print(n, m)\n                    flag = False\n                    break\n        if flag:\n            print(-1)", "from math import ceil\nt = int(input())\nfor _ in range(t):\n    x = int(input())\n    if x == 1 or x % 4 == 2:\n        print(-1)\n    elif x == 0:\n        print(1,1)\n    else:\n        z = 0\n        for i in range(ceil((x/3)**0.5),ceil(x**0.5)):\n            if x % i == 0 and (x//i-i) % 2 == 0:\n                n = (i + x//i)//2\n                k = (x//i - i)//2\n                m = n//k\n                if n//m == k:\n                    print(n,m)\n                    z = 1\n                    break\n        if z == 0:\n            print(-1)\n\n", "from math import*\ndef get(x):\n    if x==0:\n        print(1,1)\n        return\n    i=1\n    while i*i<=x:\n        if not(x%i):\n            a,b=int(x/i),i\n            if(not((a+b)%2)):\n                n=int((a+b)/2)\n                n_m=int((a-b)/2)\n                if n_m:\n                    m=int(n/n_m)\n                    if(int(n/m)==n_m and m<=n):\n                        print(n,m)\n                        return\n        i+=1\n    print(-1)\n    return\n\nn=int(input())\nfor i in range(n):get(int(input()))", "def test(x):\n    i=1\n    flag=False\n    while i**2 < x:\n        if x % i==0:\n            a,b=i,x//i\n            if (a+b)%2==0:\n                z=(a+b)//2\n                y=b-z\n                u=z//y\n                if (z//u==y):\n                    y=u\n                    flag=True\n                    break\n        i+=1\n    if flag:\n        print(str(z)+\" \"+str(y))\n\n    else:\n        if x==0:\n            print(\"1 1\")\n        else:\n            print(\"-1\")\nn=int(input())\nfor j in range(n):\n    test(int(input()))\n\n    \n", "from math import*\n\ndef get(x):\n\n    if x==0:\n\n        print(1,1)\n\n        return\n\n    i=1\n\n    while i*i<=x:\n\n        if not(x%i):\n\n            a,b=int(x/i),i\n\n            if(not((a+b)%2)):\n\n                n=int((a+b)/2)\n\n                n_m=int((a-b)/2)\n\n                if n_m:\n\n                    m=int(n/n_m)\n\n                    if(int(n/m)==n_m and m<=n):\n\n                        print(n,m)\n\n                        return\n\n        i+=1\n\n    print(-1)\n\n    return\n\n\n\nn=int(input())\n\nfor i in range(n):get(int(input()))\n\n\n\n# Made By Mostafa_Khaled\n", "import math\nimport sys\n\n\ndef main():\n\n    t = int(input())\n\n    for i in range(t):\n        ones = int(input())\n\n        if ones == 0:\n            print('1 1')\n            continue\n\n        gotem = False\n        for j in range(1, ones):\n            if j * j > ones:\n                break\n            if ones % j == 0:\n                big = ones // j\n\n                if (j + big) % 2 != 0:\n                    continue\n                else:\n                    a = (j + big) // 2\n                    b = big - a\n                    if b <= 0:\n                        continue\n                    n = a\n                    m = n//b\n\n                    if n//m != b or n < 1 or m < 1 :\n                        continue\n\n                    print('%d %d' % (n,m))\n                    gotem = True\n                    break\n\n        if not gotem:\n            print(-1)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import math \n \ndef div(k):\n    res = []\n    for i in range(1,int(math.sqrt(k))+2):\n        if k % i == 0:\n            res.append(i)\n    return res\n            \nt = int(input())\nfor i in range(t):\n    x = int(input())\n    if x == 0:\n        print(\"1 1\")\n    elif x == 1:\n        print(-1)\n    else:    \n        flag = False\n        di = div(x)\n        for d in di:\n            a = x // d\n            if ((a+d) % 2 == 0) and (a > d):\n                n = (a+d)//2\n                lower = (a+d) / (a-d+2)\n                upper = (a+d) / (a-d)\n                if int(lower) < int(upper):\n                    m = int(upper)\n                    res = [n,m]\n                    flag = True\n                    break\n        if flag == True:\n            print(' '.join(map(str, res)))\n        else:\n            print(-1)\n", "#Bhargey Mehta (Junior)\n#DA-IICT, Gandhinagar\nimport sys, math, queue, bisect\n#sys.stdin = open(\"input.txt\", \"r\")\nMOD = 10**9+7\nsys.setrecursionlimit(1000000)\n\nN = 50000\n\nfor _ in range(int(input())):\n    x = int(input())\n    found = None\n    for i in range(1, N):\n        if i*i-x <= 0: continue\n        low, high = 1, N-1\n        while low <= high:\n            mid = (low+high)>>1\n            lhs = i*i - (i//mid)*(i//mid)\n            if lhs == x:\n                found = (i, mid)\n                break\n            elif lhs < x:\n                low = mid+1\n            else:\n                high = mid-1\n        if found is not None:\n            break\n    if found is None: print(-1)\n    else: print(*found)", "def main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\tnum = int(input())\n\t\tif num == 0:\n\t\t\tprint(1, 1)\n\t\telse:\n\t\t\tok = False\n\t\t\tdiv = 1\n\t\t\twhile div * div <= num:\n\t\t\t\tif num % div == 0:\n\t\t\t\t\tadd = max(num // div, div)\n\t\t\t\t\tsub = min(num // div, div)\n\t\t\t\t\tif (add + sub) % 2 == 0:\n\t\t\t\t\t\tn = (add + sub) // 2\n\t\t\t\t\t\tnum_zeros = (add - sub) // 2\n\t\t\t\t\t\tif num_zeros != 0:\n\t\t\t\t\t\t\tk =  n // num_zeros\n\t\t\t\t\t\t\tif n ** 2 - (n // k) ** 2 == num:\n\t\t\t\t\t\t\t\tok = True\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\tdiv += 1\n\t\t\tif ok:\n\t\t\t\tprint(n, k)\n\t\t\telse:\n\t\t\t\tprint(-1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "import math\n\nt = int(input())\n\nfor _ in range(t):\n    x = int(input())\n    \n    found = False\n    for n in range(int(math.sqrt(x))+1, int(10**4.6)):\n        m = n/math.sqrt(n**2-x)\n        m1 = math.ceil(m)\n        m2 = math.floor(m)\n        \n        for m in [m1, m2]:\n            if n**2-(n//m)**2==x:\n                print(n, m)\n                found = True\n                break\n        if found:\n            break\n    if not found:\n        print(-1)            \n", "import sys\nimport math\nlines = sys.stdin.read().splitlines()\nlincnt = -1 \n\ndef input():\n    nonlocal lincnt\n    lincnt += 1\n    return lines[lincnt]\n\ndef solve():\n    x = int(input())\n    for n in range(max(1,int(math.sqrt(x) - 5)),int(10**4.7)):\n        if n ** 2 <= x:\n            continue\n        m = math.sqrt(n** 2 / (n** 2 - x))\n        for k in range(int(m) - 3, int(m) + 3):\n            if k < 1:\n                continue\n            if n ** 2 - (n // k) ** 2 == x:\n                print(n,k)\n                return\n    print(-1)\n\n\nfor _ in range(int(input())):\n    solve()\n"]