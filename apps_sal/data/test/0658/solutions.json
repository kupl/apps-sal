["\nn, w, v, u = list(map(int, input().split()))\nversh = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    versh.append((a, b))\nversh.sort(key=lambda x : x[1])\nfor i in versh:\n    if i[0] / v < i[1] / u:\n        break\nelse:\n    print(w / u)\n    return\ny = 0\ntime = 0\nfor i in versh:\n    x = i[0] - time * v\n    if x < 0:\n        continue\n    if x / v >= (i[1] - y) / u:\n        time += x / v\n        y = i[1]\ntime += (w - y) / u\nprint(time)\n", "n, w, v, u = [int(x) for x in input().split()]\nslant = u/v\nx, y = [int(x) for x in input().split()]\n\nul = dr = v*y - u*x\n\nfor _ in range(1, n):\n    x, y = [int(x) for x in input().split()]\n\n    m, p = v*y - u*x, v*y + u*x\n\n    if m > ul:\n        ul = m\n    if m < dr:\n        dr = m\n\nif ul <= 0 or dr >= 0:\n    print(w/u)\nelse:\n    print(w/u - dr/(u*v))\n", "import sys\n\ndef main():\n\n    n,w,v,u = list(map(int, sys.stdin.readline().split()))\n    \n    c = []\n    for i in range(n):\n        c.append(list(map(int, sys.stdin.readline().split())))\n\n    ymin = 10**9+1\n    iymin = 0\n    ymax = -1\n    iymax = 0\n    xmax = -1\n    ixmax = 0\n    for i in range(n):\n        if c[i][1]<ymin:\n            ymin = c[i][1]\n            iymin = i\n        if c[i][1]>ymax:\n            ymax = c[i][1]\n            iymax = i\n        if c[i][0]>xmax:\n            xmax = c[i][0]\n            ixmax = i\n\n    jmin = (iymin-1+n)%n\n    while ymin==c[jmin][1]:\n        jmin = (jmin-1+n)%n\n    iymin = (jmin+1)%n\n\n    jmax = (iymax+1)%n\n    while ymax==c[jmax][1]:\n        jmax = (jmax+1)%n\n    iymax = (jmax-1+n)%n\n\n    jcur = iymin\n    ok = True\n    finish = (iymax-1+n)%n\n    while jcur != finish:\n        ta = c[jcur][0]/v\n        if ta < c[jcur][1]/u:\n            ok = False\n            break\n        jcur= (jcur-1+n)%n\n\n    if ok:\n        print(\"%.8f\" % (w/u))\n        return\n\n    jmin = (iymin+1)%n\n    while ymin==c[jmin][1]:\n        jmin = (jmin+1)%n\n    iymin = (jmin-1+n)%n\n\n    jmax = (ixmax+1)%n\n    while xmax==c[jmax][0]:\n        jmax = (jmax+1)%n\n    ixmax = (jmax-1+n)%n\n\n    t = 0\n    jcur = iymin\n    cury = 0\n    finish = (ixmax+1)%n\n    while jcur != finish:\n        l = c[jcur][1]-cury\n\n        ta = c[jcur][0]/v\n        tp = l/u\n        t= max(t+tp,ta)\n\n        cury+=l\n        jcur= (jcur+1)%n\n\n    t+= (w-cury)/u    \n\n    print(\"%.8f\" % t)\n\nmain()\n", "#!/usr/bin/env\tpython\n#-*-coding:utf-8 -*-\nn,w,v,u=list(map(int,input().split()))\nv=u/v\nl=r=0\nfor _ in range(n):\n\tx,y=list(map(int,input().split()))\n\ty-=v*x\n\tl=min(l,y)\n\tr=max(r,y)\nprint((w-(l if r else 0))/u)\n", "class vec(object):\n    def __init__(self, x, y):\n        self.x, self.y = x, y\n    def cross(self, k):\n        return self.x * k.y - self.y * k.x\n    def dot(self, k):\n        return self.x * k.x + self.y * k.y\n    def __sub__(self, k):\n        return vec(self.x - k.x, self.y - k.y)\n\nn, w, v, u = list(map(int, input().split(' ')))\np = vec(v, u)\nl = [vec(*list(map(int, input().split(' ')))) for _ in range(n)]\n\nb, c = 0, 0\nfor i in l:\n    if p.cross(i) <= 0:\n        c += 1\n    if p.cross(i) >= 0:\n        b += 1\n\nif b == n or c == n:\n    print('%.8f' % (w / u))\n    return\n\nr = [l[(i + 1) % n] - l[i] for i in range(n)]\ni = 0\nwhile p.cross(r[i % n]) > 0:\n    i += 1\nwhile p.cross(r[i % n]) < 0:\n    i += 1\n\ni %= n\nb = (l[i].cross(p) + v * w) / u / v\n\n\nprint('%.8f' % b)\n", "n,w,v,u = list(map(int,input().split()))\nmaxwait=0.0\ncurr=1;\nfor i in range(n):\n    x,y = list(map(int,input().split()))\n    maxwait=max(maxwait,x/v-y/u)\n    if(x/v<y/u):\n        curr=0\nif(curr==1):\n    maxwait=0\nprint(w/u + maxwait)\n", "n, w, v, u = map(int, input().split())\nmaxwait = 0.0\ncurr = True\nfor i in range(n):\n    x, y = map(int, input().split())\n    maxwait = max(maxwait, x / v - y / u)\n    if x / v < y / u:\n        curr = False\nif curr:\n    maxwait = 0\nprint(w / u + maxwait)", "n, w, v, u = map(int, input().split())\nmaxwait = 0\ncurr = True\nfor i in range(n):\n    x, y = map(int, input().split())\n    maxwait = max(maxwait, x / v - y / u)\n    if x / v < y / u:\n        curr = False\nif curr:\n    maxwait = 0\nprint(w / u + maxwait)", "n,w,v,u=list(map(int,input().split()))\nx,y=list(map(int,input().split()))\nrazn=ozhid=v*y-x*u\nfor i in range(1,n):\n    x,y=list(map(int,input().split()))\n    r=v*y-x*u\n    if r>razn:\n        razn=r\n    if r<ozhid:\n        ozhid=r\nif ozhid>=0 or razn<=0:\n    print(w/u)\nelse:\n    print(w/u-ozhid/(u*v))\n", "n, w, v, u = list(map(int, input().split()))\nans = 0\nflag1 = 0\nflag2 = 0\n\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    if x/v < y/u:\n        flag1 = 1\n    if x/v > y/u:\n        flag2 = 1\n    ans = max(ans, x/v+(w-y)/u)\n\nif flag1+flag2 == 2:\n    print(ans)\nelse:\n    print(w/u)\n", "gcd = lambda a, b: a if b == 0 else gcd(b, a % b)\ndef norm(a, b, c):\n    k = gcd(gcd(a, b), c)\n    return a // k, b // k, c // k\n\ndef line(A, B):\n    a = A[1] - B[1]\n    b = B[0] - A[0]\n    c = -a * A[0] - b * A[1]\n    return norm(a, b, c)\n\ndef dist_line(A, l):\n    x, y = A\n    a, b, c = l\n    d = a * a + b * b\n    res = (a * x + b * y + c) #/ d\n    return res\n\nread = lambda: list(map(int, input().split()))\nn, w, v, u = read()\np = [tuple(read()) for i in range(n)]\nl = line((0, 0), (v, u))\nmind = float('inf')\nmaxd = -float('inf')\nd = 0\nfor P in p:\n    curd = dist_line(P, l)\n    maxd = max(maxd, curd)\n    mind = min(mind, curd)\n    if mind == curd:\n        x = (-l[1] * P[1] - l[2]) / l[0]\n        d = P[0] - x\nans = w / u\nif mind * maxd < 0:\n    ans += d / v\nprint(ans)\n", "n, w, v, u = map(int, input().split())\nmax_t_w = 0\nflag = True\nfor i in range(n):\n    x, y = map(int, input().split())\n    max_t_w = max(max_t_w, x / v - y / u)\n    if x / v < y / u:\n        flag = False\nif flag:\n    max_t_w = 0\nprint(w / u + max_t_w)", "f = lambda: map(int, input().split())\nn, w, v, u = f()\nk = 0\nd = t = w / u\nfor i in range(n):\n    x, y = f()\n    a, b = x / v, y / u\n    k |= a < b\n    t = max(t, a + d - b)\nprint([d, t][k])", "f = lambda: map(int, input().split())\nn, w, v, u = f()\nk = t = 0\nv /= u\nfor i in range(n):\n    x, y = f()\n    d = x / v - y\n    k |= d < 0\n    t = max(t, d)\nif k: w += t\nprint(w / u)", "rd = lambda: list(map(int, input().split()))\nn, w, v, u = rd()\np = []\nfor i in range(n):\n    x, y = rd()\n    p.append([x - y / u * v, x / v, y])\np.sort()\nif all(x >= 0 for x, y, z in p) or all(x <= 0 for x, y, z in p):\n    print(w / u)\nelse:\n    print(p[-1][1] + (w - p[-1][2]) / u)\n", "rd = lambda: list(map(int, input().split()))\nn, w, v, u = rd()\np = []\nfor i in range(n):\n    x, y = rd()\n    p.append([x - y / u * v, x / v, y])\np.sort()\nif all(x >= 0 for x, y, z in p) or all(x <= 0 for x, y, z in p):\n    print(w / u)\nelse:\n    print(p[-1][1] + (w - p[-1][2]) / u)\n", "#!/usr/bin/env\tpython\n#-*-coding:utf-8 -*-\nn,w,v,u=list(map(int,input().split()))\nv=u/v\nl=r=0\nfor _ in range(n):\n\tx,y=list(map(int,input().split()))\n\ty-=v*x\n\tl=min(l,y)\n\tr=max(r,y)\nprint((w-(l if r else 0))/u)\n\n\n\n\n# Made By Mostafa_Khaled\n"]