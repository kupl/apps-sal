["#!/usr/bin/env python\n\nn = int(input())\n\ndef g1(n, p): \n    ''' \n    How many times can n! be divided by p?\n    '''\n    if n == 0:\n        return 0\n    return n//p + g1(n//p, p)\n\ndef g2(n, p): \n    ''' \n    How many times can n!! be divided by p?\n    '''\n    if n%2 == 1:\n        return g1(n, p) - g2(n-1, p)\n\n    res = g1(n//2, p)\n    if p == 2:  \n        res += n//2\n    return res \n\nans = min(g2(n, 5), g2(n, 2)) \nprint(ans)\n", "import sys\n\nn = int(input())\n\n# \u5947\u6570\u59cb\u307e\u308a\u306f\u5fc5\u305a0\nif n % 2 == 1:\n    print(0)\n    return\n\n# 5\u306e\u56e0\u5b50\u3092\u6570\u3048\u308b\n# 5\u306e\u500d\u6570\u306f10\u500b\u3054\u3068\u300125\u306e\u500d\u6570\u306f50\u500b\u3054\u3068\u3001125\u306e\u500d\u6570\u306f250\u500b\u3054\u3068\u306b\u767b\u5834\u3059\u308b\nans = 0\ncnt = 1\nwhile 5**cnt * 2 <= n:\n    ans += n // (5**cnt * 2)\n    cnt += 1\nprint(ans)", "N = int(input())\n\ndef solve_function(N):\n    if N % 2 == 1:\n        return 0\n\n    n = 10\n    ans = 0\n    while True:\n        if n > N:\n            break\n        ans += N//n\n        n *= 5\n    return ans\n\nif solve_function(N):\n    print(solve_function(N))\nelse:\n    print(0)", "# import itertools\n# import math\nimport sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nif N % 2 == 1:\n    print((0))\n    return\n\ntot = 0\ni = 10\nwhile(N >= i):\n    tot += N // i\n    i *= 5\nprint(tot)\n", "n = int(input())\ncnt = 0\nx = len(str(n))\n\nif n % 2 == 1:\n  print((0))\n  return\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\n\n\nprint(cnt)\n", "N = int(input())\n\nif N%2 == 1:\n    print((0))\nelse:\n    ans = 0\n    sum = 0\n    for i in range(26,0,-1):\n        num = N//((5**i)*2)\n        ans += i*(num-sum)\n        sum = num\n    print(ans)\n", "def func(n) :\n    if n % 2 == 1:\n        return 0\n    res = 0\n    n //= 2 \n    while n :\n        res += n //5\n        n //= 5\n    return res \n\nn = int(input())\nprint(func(n))", "N = int(input())\nif N%2==1:\n  print(0)\nelse:\n  ans = 0\n  judge = 10\n  while True:\n    if judge > N:\n      break\n    else:\n      ans += N//judge\n      judge *= 5\n  print(ans)", "N=int(input())\n\nif N % 2 or N < 10:\n  print(0)\n  return\n  \nans = 0\ni = 1\nwhile 2*5**i<=N:\n  ans += N // (2*5**i)\n  i += 1\n  \nprint(ans)", "N = int(input())\nif N % 2 == 0:\n    answer = 0\n    N //= 2\n    for i in range(100):\n        answer += N // 5\n        N //= 5\n    print(answer)\nelse:\n    print('0')", "n = int(input())\nif n % 2: print(0); return\nn //= 2\nans = 0\n\nwhile n >= 5:\n    n //= 5\n    ans += n\nprint(ans)", "# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\n# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N):\n    if N % 2 == 1:\n        print((0))\n        return\n    n = 10\n    ans = 0\n    while n <= N:\n        ans += N // n\n        n *= 5\n    print(ans)\n\n\ndef __starting_point():\n    N = int(input())\n    solve(N)\n\n    # # test\n    # from random import randint\n    # from func import random_str\n    # solve()\n\n__starting_point()", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n\n    if N % 2 == 1:\n        print((0))\n        return\n\n    count = []\n    i = 0\n    while True:\n        q = N // (10 * 5 ** i)\n        if q == 0:\n            break\n        else:\n            count.append((q, i + 1))\n            i += 1\n\n    ans = 0\n    prev_c = 0\n    for c, n_zero in count[::-1]:\n        ans += n_zero * (c - prev_c)\n        prev_c = c\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nif n%2 == 1:\n    print(0)\n\nelse:\n    ans = 0\n    while n >= 5:\n        ans += (n//5)//2\n        n //= 5\n    print(ans)", "n = int(input())\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    t = 10\n    while n >= t:\n        ans += n//t\n        t *= 5\n    print(ans)", "n = int(input())\nif n%2==1:\n    print((0))\nelse:\n    ans = 0\n    ans += n//10\n    n = n//10\n    while n//5>0:\n        ans += n//5\n        n = n//5\n    print(ans)\n", "n = int(input())\nm = n//10\n\nf = []\nwhile m:\n    f.append(m%5)\n    m //= 5\n\nprint(0 if n%2 else sum(a*(5**(i+1)//4) for i, a in enumerate(f)))", "\nn = int(input())\ncnt = 0\ni = 1\nx = 10\nif n % 2 == 1:\n  print(0)\nelse:\n  while x <= n:\n    \n    cnt += n//x\n    x *= 5\n\n\n  print(cnt)", "N = int(input())\nif N % 2 != 0 or N < 10:\n  print(0)\nelse:\n  n = N // 2\n  count5 = 0\n  while n >= 5:\n    n = n // 5\n    count5 += n\n  print(count5)", "n = int(input())\ncnt = 0\nx = len(str(n))\n \nif n % 2 == 1:\n  print(0)\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\n  print(cnt)", "N = int(input())\nif N%2 == 1:\n    print(0)\nelse:\n    cnt = 0\n    for i in range(1,N):\n        if N >= 2*(5**i):\n            cnt += N // (2*(5**i))\n        else:\n            break\n    print(cnt)        ", "import sys\nN = int(input())\nif N %2 !=0:\n    print(0)\n    return\nelse:\n    sum = 0\n    num = N\n    num_tmp = num //5\n    while num_tmp > 0:\n        num_tmp = num // 5\n        sum += num // 10\n        num = num_tmp\nprint(sum)", "N=int(input())\n\nif N%2==0:\n    ans=0\n    x=10\n    while x<=N:\n        ans+=N//x\n        x*=5\nelse:\n    ans=0\n\nprint(ans)", "n = int(input())\n\nans = 0\nif n % 2 == 0:\n    for i in range(1, 36):\n        k = 5**i*2\n        ans += n//k\n    print(ans)\nelse:\n    print(ans)", "\ndef resolve():\n    N = int(input())\n\n    if N % 2 == 1:\n        return print(0)\n\n    ans = 0\n    tmp = N // 2\n    while tmp:\n        tmp //= 5\n        ans += tmp\n    print(ans)\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "n=int(input())\nif n%2==1:\n    ans=0\nelse:\n    fs=[2*5**i for i in range(1,41)]\n    ans=0\n    for i in range(40):\n        ans+=n//fs[i]\nprint(ans)", "n=int(input())\nif n<=4:\n  print((0))\n  return\n  \nif n%2==1:\n  print((0))\n  return\n  \ncnt=10\nans=0\n\nfor i in range(100):\n  ans+=n//cnt\n  cnt*=5\n  \n  \nprint(ans)\n", "n=int(input());ans,m=0,10\nif n%2!=0: print(0);return;\nwhile m<=n:\n  ans+=n//m\n  m*=5\nprint(ans)", "n = int(input())\nif n & 1:\n    print((0))\nelse:\n    ans = 0\n    x = 10\n    while n >= x:\n        ans += n // x\n        x *= 5\n    print(ans)\n", "n = input()\nm = len(n)\nn = int(n)\nif n%2==1:\n    print(0)\nelse:\n    if m==1:\n        print(0)\n    else:\n        ans = 0\n        i = 1\n        while  True:\n            ans_plus=n//(2*5**i)\n            if ans_plus==0:\n                break\n            ans += ans_plus\n            \n            i += 1\n        print(ans)", "n = int(input())\nif n%2 == 1:\n    print(0)\n    return\nnum = 5\ni = 1\nans = 0\nwhile num**i < n:\n    ans += n//num**i//2\n    i += 1\nprint(ans)", "N=int(input())\nif N%2:\n    print(0)\nelse:\n    ans=0\n    tmp=10\n    while tmp<=N:\n        ans+=N//tmp\n        tmp*=5\n    print(ans)", "n=int(input())\nif n%2!=0:\n  print(0)\n  return\nn//=10\n\ndef Base_10_to_n(X, n):\n    X_dumy = X\n    out = ''\n    while X_dumy>0:\n        out = str(X_dumy%n)+out\n        X_dumy = X_dumy//n\n    return out\n\nn=Base_10_to_n(n,5)\nn=reversed(list(n))\ntmp=1\nans=0\n\nfor i in n:\n  ans+=int(i)*tmp\n  tmp=tmp*5+1\nprint(ans)", "n=int(input())\n\n\nans=0\ntmp=0\np=1\nif n%2==0:\n    k=n//2\n    while True:\n        tmp =k//pow(5,p)\n\n        ans+=tmp\n        p+=1\n\n        if tmp==0:\n            break\n\nprint(ans)\n\n\n\n", "n = int(input())\n\nif n % 2 == 1:\n\tprint('0')\n\t\t\nelse:\n\tfive = 0\n\ttwo = 0\n\tfor i in range(1, n):\n\t\tf = n // (2*(5**i))\n\t\tt = n // (2**i)\n\t\tif f == t == 0:\n\t\t\tbreak\n\t\tfive += f\n\t\ttwo += t\n\tprint(min(five, two))", "N = int(input())\nif N%2==1:\n  print(0)\nelse:\n  ans = 0\n  tmp = N//(5*2)\n  i = 1\n  while tmp>0:\n    ans += tmp\n    i += 1\n    tmp = N//(2*5**i)\n  print(ans)", "N=int(input());a=10;b=0\nif N&1==0:\n    while a<=N:b+=N//a;a*=5\nprint(b)", "n=int(input())\nif n%2==1:\n  print((0))\n  return\nelse:\n  ans=0\n  u=10\n  while n//u>=1:\n    ans+=n//u\n    u=u*5\n  print((int(ans)))  \n", "n = int(input())\ncnt = 0\nx = len(str(n))\n\nif n % 2 == 1:\n  print(0)\n  return\nfor i in range(1,26):\n  cnt += n//((5**i)* 2)\n\n\nprint(cnt)", "N = int(input())\nans = 0\nif N%2 == 0:\n  five = 10\n  while N//five > 0:\n    ans += N//five\n    five *= 5\nprint(ans)", "n=input()\nm=len(n)\nn=int(n)\n\nif n%2==1:\n    print(0)\nelse:\n    if m==1:\n        print(0)\n    else:\n        ans=0\n        i=1\n        while True:\n            ans_plus=n//(2*5**i)\n            if ans_plus==0:\n                break\n            ans+=ans_plus\n\n            i+=1\n        print(ans)", "n = int(input())\nif n%2 != 0:\n    print(0)\nelse:\n    ans = 0\n    dum = 5\n    while n > dum:\n        ans += (n//dum)//2\n        dum = dum*5\n    print(ans)", "n = int(input())\nif n % 2 == 1:\n    print(0)\n    return\n#### n is even ####\nans = 0\ncnt = 0\nones = 0\nketa = []\ncnt = 5 * 2\nwhile n >= cnt:\n    ans += n // cnt\n    cnt *= 5\n\nprint(ans)", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    \n    n = I()\n    if n%2 == 0:\n        ans = 0\n        for i in range(1,27):\n            ans += n//(2*pow(5,i))\n        print(ans)\n    else:\n        print((0))\n\nmain()\n", "n = int(input())\n\nif n % 2 == 0:\n    n5 = 1\n    y = 10\n    c = []\n\n    while y <= n:\n        c.append(n//y)\n        if len(c) > 1:\n            c[-2] -= c[-1]\n        y *= 5\n\n    cnt = 0\n    for i in range(len(c)):\n        cnt += c[i]*(i+1)\n\n    print(cnt)\nelse:\n    print(0)", "N = int(input())\nif N%2 == 1:\n    Answer = 0\nelse:\n    Answer = 0\n    for i in range(1,100):\n        Answer += N//(2*5**i)\nprint(Answer)", "import math\nN = int(input())\nans = 0\nif N == 0 or N % 2 == 1:\n    ans = 0\nelse:\n    # means N >= 2 and even\n    digN = round( math.log(N , 5) )\n\n    i = 1\n    while i <= digN:\n        ans +=  ( N //( 5 ** i * 2 ) )\n        i += 1\n\nprint(ans)", "N = int(input())\ncnt = 0\nif N % 2 == 1:\n    print (0)\nelse:\n    for i in range(1,N):\n        if N >= (2*(5**i)):\n            cnt += N//(2*(5**i))\n        else:\n            break\n    print (cnt)", "n = int(input())\n\nif n%2==1:\n    print((0))\n    return\n\nfcnt = 0\ntmp = 5\nwhile n>=tmp:\n    fcnt+=(n//2)//tmp\n    tmp*=5\n\nprint(fcnt)\n", "n = int(input())\n\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    n //= 2\n    while n:\n        ans += n//5\n        n //= 5\n    \n    \n    print(int(ans))", "import sys\npin=sys.stdin.readline\n\ndef main():\n  N=int(pin())\n  if N%2==1:\n    print((0))\n  else:\n    ans=0\n    i=10\n    while True:\n      if N<i:\n        break\n      ans+=N//i\n      i*=5\n    print(ans)\n  return\nmain()\n", "N = int(input())\n\nif N % 2 == 0:\n    tmp = 10\n    ans = 0\n    while tmp <= N:\n        ans += N // tmp\n        tmp = 5 * tmp\n\n    print(ans)\n \nelse:\n    print((0))\n", "import sys, bisect, math, itertools, string, queue, copy\nimport numpy as np\nimport scipy\nfrom collections import Counter,defaultdict,deque\nfrom itertools import permutations, combinations\nfrom heapq import heappop, heappush\n# input = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\nn = inp()\n\nans = 0\nif n % 2 == 1:\n    ans = 0\nelse:\n    div = 10\n    while div <= n:\n        ans += n // div\n        div *= 5\n\nprint(ans)", "N = int(input())\ni = 2\na = 0\nwhile i <= N:\n    a += N // i\n    i *= 2\ni = 2*5\nb = 0\nwhile i <= N:\n    b += N // i\n    i *= 5\nprint(min(a,b) if N % 2 == 0 else 0)", "n = int( input() )\n \nif n % 2 == 1:\n    print( 0 )\n    return\n \nans = 0\nn = n // 2\nwhile n > 0:\n    n = n // 5\n    ans += n\n \nprint( ans )", "n=int(input())\nif n % 2 == 1:\n  print(0)\nelse:\n  ans = 0\n  tmp = 10\n  while True:\n    if tmp > n:\n      print(ans)\n      break\n    else:\n      ans += n//tmp\n      tmp *= 5", "n=int(input())\n\nif n%2==1:\n    print((0))\n    \nelse:\n    ans=0\n    \n    n5 = 10\n    while(n>=n5):\n        ans+=n//n5\n        n5*=5\n        \n    print(ans)\n    \n", "N = int(input())\nif N % 2 == 1:\n    ans = 0\nelse:\n    ans = 0\n    for i in range(1,50):\n        ans += (N//2) // 5**i\nprint(ans)", "n=int(input())\nans=0\nif n%2==1:\n    ans=0\nelse:\n    tmp=10\n    while tmp<=n:\n        ans+=n//tmp\n        tmp*=5\nprint(ans)", "import sys\n\nN = int(input())\n\nif N % 2 == 0:\n    k = N // 2\n    tmp = 5\n    ans = 0\n    while k >= tmp:\n        ans += k // tmp\n        tmp *= 5\nelse:\n    ans = 0\nprint(ans)", "N=int(input())\n\nif N%2 or N<10:\n  print(0)\nelse:\n  cnt,n=0,1\n  while n<=N:\n    cnt+=N//(10*(n))\n    n*=5\n  print(cnt)", "n = int(input())\n\ntwoes = [0]\nfives = [0]\n\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        if n // (2 ** (i +1)) != 0:\n            twoes.append(n // (2 ** (i + 1)))\n            i += 1\n        else:\n            break\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(min(sum(twoes), sum(fives)))    ", "#!/usr/bin/env python\n\nn = int(input())\n\nif n%2 == 1:\n    print((0))\n    return\n\nmp = tmp = 0 \nwhile True:\n    if 5**tmp > n:\n        break\n    mp = tmp \n    tmp += 1\n\nans = 0 \nfor i in range(1, mp+1):\n    ans += n//(2*(5**i))\n\nprint(ans)\n", "n=int(input())\nif n%2==1:\n    print(0)\n    return\nn//=2\nt=1\ncount=-1\nwhile n>=t:\n    t*=5\n    count+=1\nans=0\nfor i in range(1,count+1):\n    ans+=n//(5**i)\nprint(ans)", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\ndef main():\n  n=I()\n  if n%2==1 or n<10:\n    return 0\n\n  st=10\n  ans=[]\n  while st<=n:\n    ans.append(n//st)\n    st*=5\n\n  return sum(ans)\n\n# main()\nprint((main()))\n", "#!/usr/bin/env python3\n\n\ndef solve(N: int):\n    if N % 2 == 0:\n        N = N // 2\n        answer = 0\n        div = 5\n        while N >= div:\n            answer += N // div\n            div *= 5\n        return answer\n\n    else:\n        return 0\n\n    return answer\n\n\ndef main():\n    N = int(input())\n    answer = solve(N)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\n\nif n%2==1:\n    print(0)\nelse:\n    m=n//2\n    ans=0\n    while m>0:\n        ans+=m//5\n        m=m//5\n    print(ans)", "n = int(input())\ncnt = 0\nx = len(str(n))\n\nif n % 2 == 1:\n  print((0))\nelse:\n  for i in range(1,26):\n    cnt += n//((5**i)* 2)\n  print(cnt)\n", "n=int(input())\nif n%2!=0:\n  print((0))\n  return\nn//=10\n\ndef Base_10_to_n(X, n):\n    X_dumy = X\n    out = ''\n    while X_dumy>0:\n        out = str(X_dumy%n)+out\n        X_dumy = X_dumy//n\n    return out\n\nn=Base_10_to_n(n,5)\nn=reversed(list(n))\ntmp=1\nans=0\n\nfor i in n:\n  ans+=int(i)*tmp\n  tmp=tmp*5+1\nprint(ans)\n", "import sys\n\n\nN = int(input())\n\n\nif N % 2 != 0:\n    print((0))\n    return\n\nN //= 10\ncnt = 0\nwhile N > 0:\n    cnt += N\n    N //= 5\n\nprint(cnt)\n", "N = int(input())\n\ndef solve_function(N):\n    if N % 2 == 1:\n        return 0\n\n    it_can_be_divisible = 10\n    ans = 0\n    while True:\n        if it_can_be_divisible > N:\n            break\n        ans += N//it_can_be_divisible\n        it_can_be_divisible *= 5\n\n    return ans\n\nif solve_function(N):\n    print(solve_function(N))\nelse:\n    print(0)", "n = int(input())\n\nif n % 2 != 0:\n    print(0)\nelse:\n    ans = 0\n    tmp = 10\n    while tmp <= n:\n        ans += n//tmp\n        tmp *= 5\n    \n    print(int(ans))", "def main():\n  N = int(input())\n  if N % 2 != 0:\n    print(0)\n    return\n  ans = 0\n  i = 1\n  while 2*5**i<=N:\n    ans += N//(2*5**i)\n    i += 1\n      \n  print(ans)\nmain()", "N = int(input())\n\nif N % 2 == 1:\n    print(0)\n    return\n\nn = 10\nans = 0\nwhile True:\n    if n > N:\n        break\n    ans += N//n\n    n *= 5\n\nprint(ans)", "n = int(input())\nres = 0\nif n % 2 == 0:\n  for i in range(1,30):\n    p = n // (5 ** i)\n    #print(i,p)\n    if p % 2 == 1:\n      res += (p-1) // 2\n    else:\n      res += p // 2\nprint(res)", "n = int(input())\nif n%2!=0:\n    print(0)\nelse:\n    k=10\n    q = 0\n    while k<=n:\n        q += n//k\n        k *= 5\n    print(q)", "n = int( input() )\n\nif n % 2 == 1:\n    print( 0 )\n    return\n\nans = 0\nn = n // 2\nwhile n > 0:\n    n = n // 5\n    ans += n\n\nprint( ans )", "n=int(input())\nif n<2:\n    print(0)\nelse:\n    ans=0\n    if n%2==1:\n        print(0)\n    else:\n        ans+=n//10\n        for i in range(100):\n            ans+=n//(10*(5**(i+1)))\n        print(ans)", "n = int(input())\ni = 10\nans = 0\n\nwhile  i <= n:\n    ans += (n // i)\n    i *= 5\n\nprint((ans if n & 1 == 0 else 0))\n", "n = int(input())\nif n%2 ==1:\n    print(0)\n    return\ncnt = 0\ni = 1\n\nif n%2 == 0:\n    while n//(2*(5**i)) > 0:\n        cnt += n//(2*(5**i))\n        i +=1\nprint(cnt)", "N = int(input())\n\nif N % 2 == 1:\n    ans = 0\nelse:\n    div2 = N // 2\n    n = N // 2\n    k = 1\n    while n // 2**k > 0:\n        div2 += n // 2**k\n        k += 1\n\n    div5 = 0\n    n = N // 2\n    k = 1\n    while n // 5**k > 0:\n        div5 += n // 5**k\n        k += 1\n    \n    ans = min(div2, div5)\n\nprint(ans)", "import math\n\nN = int(input())\n\nif N%2 == 1:\n    print(0)\n    return\n\nans = 0\ni = 1\nwhile 1:\n    a = 2*5**i\n    if N//a == 0:\n        break\n    ans += (N//a)\n    i += 1\nprint(ans)", "#!/usr/bin/env python3\n\n#import\n#import math\n#import numpy as np\nN = int(input())\n\nif N % 2 == 1:\n    print((0))\nelse:\n    ans = 0\n    for i in range(50):\n        ans += N // (10 * 5 ** i)\n    \n    print(ans)\n", "n=int(input())\nif n%2==1:\n    print(\"0\")\n    return\ncount=0\nfor i in range(1,30):\n    count+=n//(2*5**i)\nprint(count)", "n = int(input())\n\nfives = [0]\n\nif n % 2 == 1:\n    print(0)\nelse:\n    i = 0\n    while 1:\n        temp5 = (n // (5** (i +1))) //2\n        if temp5 != 0:\n            fives.append(temp5)\n            i += 1\n        else:\n            break\n    print(sum(fives))    ", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve(n):\n    if n % 2 != 0:\n        return 0\n\n    total = 0\n    now = 5\n    while now <= n:\n        total += n // (now * 2)\n        now *= 5\n\n    return total\n\n\ndef main():\n    N = int(input())\n    print((solve(N)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\n\nif N % 2 == 0:\n    Ans = 0\n    p = 1\n    check = 0\n    while check != 0 or p == 1:\n        check = N // (2 * 5**p)\n        Ans += check\n        p += 1\n    print(Ans)\n\nelse:\n    print(0)", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn = k()\nif n%2==1:\n    print(0)\nelse:\n    for i in range(1,n):\n        if n>=2*(5**i):\n            cnt += n//(2*(5**i))\n        else:\n            break\n    print(cnt)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N = int(readline())\n\n    if N % 2:\n        print((0))\n        return\n\n    ans = 0\n    N //= 2\n    while N:\n        N //= 5\n        ans += N\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nif n%2 == 1:\n    print(0)\nelse:\n    x = 10\n    ans = 0\n    while n >= x:\n        ans += n // x\n        x *= 5\n    print(ans)", "N = int(input())\nif N%2 == 1 :\n    print(0)\n    return\nn = 0\ni = 0\nfor i in range(1,26) :\n    n += N//((5**i)*2)\n\nprint(n)", "import math\nfrom decimal import *\n\ndef cnt_prime(p, n):\n    div = Decimal(str(n))\n    s = 0\n\n    while True:\n        div /= p\n        if div < 1:\n            break\n        if p == 2:\n            s += int(div.quantize(Decimal('0.0'), rounding=ROUND_FLOOR))\n        else:\n            s += int(div.quantize(Decimal('0.0'), rounding=ROUND_FLOOR)) // 2\n    return s\n\nN = int(input())\n\n\nif N % 2 == 1:\n    print(0)\nelse:\n    print(min(cnt_prime(2, N), cnt_prime(5, N)))", "n = int(input())\nif n%2!=0:\n    print(0)\nelse:\n    cnt = 0\n    n = n//2\n    while n>0:\n        cnt = cnt + (n//5)\n        n = n//5\n    print(cnt)", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef f(n):\n    if n <= 2:\n        return n\n    return f(n - 2) * n\n\ndef Main():\n    n = read_int()\n    if n % 2:\n        print(0)\n        return\n\n    ans = 0\n    n //= 2\n    while n >= 5:\n        n //= 5\n        ans += n\n    print(ans)\n\ndef __starting_point():\n    Main()\n__starting_point()", "n = int(input())\n\nif(n % 2 !=0):\n    print(0)\n    return\n\nketasu = len(str(n))\n\nans = 0\nfor i in range(1, 100):\n    ans += n // (2 * 5 **i)\n\nprint(ans)", "#\u307e\u305an\u304c\u5947\u6570\u306a\u3089\u5024\u306f0\n#n\u304c\u5076\u6570\u306a\u3089\u7d20\u56e0\u65705\u306e\u500b\u6570\n#\u7d20\u56e0\u657010\u306e\u500b\u6570\u3092\u6c42\u3081\u305f\u3044\nn=int(input())\nif n%2==1:\n  print((0))\nelse:\n  ans=0\n  num=5\n  n=n//2\n  while num<=n:\n    ans+=n//num\n    num=num*5\n  print(ans)\n", "n = int(input())\nif n%2 == 1:\n    print(0)\nelse:\n    ans = 0\n    cnt = 1\n    while n>=(5**cnt):\n        ans += n//(5**cnt)//2\n        cnt += 1\n    print(ans)", "n = int(input())\nif n % 2 == 1:\n  print(0)\n  return\nans = 0\nex = 1\nwhile True:\n  expo = 2 * 5**ex\n  if n // expo == 0:\n    break\n  ans += n // expo\n  ex += 1\nprint(ans)", "n = int(input())\n\nans = 0\nif n % 2 == 1:\n    ans = 0\nelse:\n    ans += n//10\n    n = n//10\n    while n > 1:\n        ans += n//5\n        n = n//5\n        # print(n)\nprint(ans)\n"]