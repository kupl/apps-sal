["n = int(input())\ns = input()\ntab = []\ncount = 1\nfor i in range(1, n):\n\tif s[i] == s[i-1]:\n\t\tcount += 1\n\telse:\n\t\tif count > 0:\n\t\t\ttab.append(count)\n\t\tcount = 1\nif count > 0:\n\ttab.append(count)\ndis = 0\nk = len(tab)\nif k == 0 or k == 1:\n\tdis = 0\nelse:\n\tdis += tab[1]\n\tdis += tab[-2]\n\tdis -= (k-1)\n\tfor i in range(1, k - 1):\n\t\tdis += tab[i-1]\n\t\tdis += tab[i+1]\nprint(n*(n-1)//2 - dis)", "from sys import *\nfrom heapq import *\nfrom lib2to3.pgen2.token import MINUS\n\n\nn = int(input())\n\nS = input()\n\nminus = n\ncurA = 0\ncurB = 0\nfor s in S:\n    if s == 'A':\n        if curB != 0:\n            minus += curB\n            curB = 0\n            curA = 1\n        else:\n            curA += 1\n    \n    else:\n        if curA != 0:\n            minus += curA\n            curA = 0\n            curB = 1\n        else:\n            curB += 1\ncurA, curB = 0, 0\nfor i in range(n - 1, -1, -1):\n    s = S[i]\n    if s == 'A':\n        if curB > 1:\n            \n            minus += curB - 1\n            curB = 0\n            curA = 1\n        elif curB == 1:\n            curB = 0\n            curA = 1\n        else:\n            curA += 1\n    else:\n        if curA > 1:\n            minus += curA - 1\n            curA = 0\n            curB = 1\n        elif curA == 1:\n            curA = 0\n            curB = 1\n        else:\n            curB += 1\n\n\nprint(n *(n + 1) // 2 - minus)\n'''\n6\nABABAB\n''' ", "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nn = int(I())\ns = I()\nl = []\ncc = 'c'\nfor c in s:\n    if c == cc:\n        l[-1] += 1\n    else:\n        l.append(1)\n    cc = c\n\nans = ( n * (n - 1) ) // 2\nfor i in range(len(l)):\n    if i > 0:\n        ans -= l[ i ] - 1\n    if i < len(l) - 1:\n        ans -= l[ i ]\n\nprint( ans )\n", "n = int(input())\nif n == 1:\n    print(0)\n    return\ns = input()\nK = []\nlc = s[0]\ncnt = 0\nfor i in s:\n    if i == lc:\n        cnt += 1\n    else:\n        K.append(cnt)\n        cnt = 1\n    lc = i\nK.append(cnt)\nbad = 3 * n - K[0] - K[-1] - (len(K) - 1)\nprint(n * (n + 1) // 2 - bad)\n", "import sys\nreadline = sys.stdin.readline\nN = int(readline())\nS = [1 if s == 'A' else 0 for s in readline().strip()]\nans = 0\nL1 = [None]*(N+1)\nL2 = [None]*(N+1)\nfor i in range(N-1, -1, -1):\n    s = S[i]\n    L1[i] = L1[i+1]\n    L2[i] = L2[i+1]\n    if s == 1:\n        L1[i] = i\n    else:\n        L2[i] = i\n    \nfor i in range(N-1):\n    s = S[i]\n    sn = S[i+1]\n    if s == sn:\n        if s == 1:\n            if L2[i] is not None:\n                ans -= 1\n        else:\n            if L1[i] is not None:\n                ans -= 1\n    else:\n        if s == 1:\n            if L1[i+1] is None:\n                ans -= N-i-1\n            else:\n                ans -= L1[i+1] - (i+1)\n        else:\n            if L2[i+1] is None:\n                ans -= N-i-1\n            else:\n                ans -= L2[i+1] - (i+1)\nprint((N-1)*N//2+ans)  ", "import itertools\n\nn = int(input())\n\ns = input()\nx = []\n\nfor k, g in itertools.groupby(s):\n\tl = len(list(g))\n\tx += [l]\n\nbad = 0\nfor f, g in zip(x, x[1:]):\n\tbad += f + g - 1\n\ngood = n * (n+1)//2-n-bad\n\nprint(good)\n", "n=int(input())\ns=input()\nx=s[0]\nl=1\nr=0\nfor i in range(1,n):\n    y=s[i]\n    if x==y:\n        r+=i\n        if l<i:\n            r-=1\n        l+=1\n    else:\n        r+=i-l\n        l=1\n    x=y\nprint(r)\n", "def comp(a):\n\tif a==\"A\":\n\t\treturn \"B\"\n\telse:\n\t\treturn \"A\"\n\nn=int(input())\ns=input()\nans=(n*(n-1))//2\ngroups=[0]\nprev=s[0]\nfor i in range(1,n):\n\tif s[i]!=prev:\n\t\tgroups.append(i)\n\t\tprev=s[i]\nfor i in range(0,len(groups)-2):\n\tans -= (groups[i+2]-groups[i]-1)\nif len(groups)>1:\n\tans -= (n-groups[-2]-1)\nprint (ans)", "import sys\nimport math\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nn = int(input())\ns = input() \narr = [[s[0], 1]]\n\nfor i in s[1:]:\n  if i == arr[-1][0]:\n    arr[-1][1] += 1\n  else:\n    arr.append([i, 1])\n\nans = (n) * (n - 1) // 2 \n\nif len(arr) == 1:\n  print(ans)\n  return\n\nelif len(arr) == 2:\n  ans -= arr[0][1]\n  ans -= arr[1][1]\n  print(ans + 1)\n  return\n\nelse:\n  #print(arr)\n  ans -= arr[1][1]\n  ans -= arr[-2][1]\n  for i in range(1, len(arr) - 1):\n    ans -= arr[i - 1][1]\n    ans -= arr[i + 1][1]\n    ans += 1\n  print(ans + 1)\n  \n", "#n, m = map(int, input().split())\nn = int(input())\n\ns = input()\n\nans = int(n * (n - 1) / 2)\nc = 0\n\nfor i in range(n):\n    if s[i] == 'A':\n        c += 1\n    else:\n        if c > 1:\n            ans -= (c - 1)\n        c = 0\nc = 0\n\nfor i in range(n):\n    if s[i] == 'B':\n        c += 1\n    else:\n        if c > 1:\n            ans -= (c - 1)\n        c = 0\n\ns = s[::-1]\n\nc = 0\nfor i in range(n):\n    if s[i] == 'A':\n        c += 1\n    else:\n        if c > 1:\n            ans -= (c - 1)\n        c = 0\nc = 0\n\nfor i in range(n):\n    if s[i] == 'B':\n        c += 1\n    else:\n        if c > 1:\n            ans -= (c - 1)\n        c = 0\nc = 0\n\nif s[0] == 'A':\n    c += 1\nfor i in range(n):\n    if s[i] == 'A':\n        c += 1\n    elif c >= 1:\n        ans -= 1\n        c = 0\n\nc = 0\nif s[0] == 'B':\n    c += 1\nfor i in range(n):\n    if s[i] == 'B':\n        c += 1\n    elif c >= 1:\n        ans -= 1\n        c = 0\n\nprint(ans)", "n = int(input())\ns = input()\narr = []\nfor i in range(n):\n    c = 0 if s[i] == 'A' else 1\n    if not arr or arr[-1][0] != c:\n        arr.append([c, 1])\n    else:\n        arr[-1][1] += 1\ncnt = (n * n + n) // 2\nif len(arr) == 1:\n    print(cnt - n)\n    return\nfor i in range(0, len(arr)):\n    cnt -= arr[i][1] + (arr[i][1] if i != 0 and i != len(arr) - 1 else 0)\nprint(cnt - n + len(arr) - 1)", "from sys import stdin,stdout\nn=int(stdin.readline().strip())\ns=stdin.readline().strip()\nacumA=[0 for i in range(n+3)]\nacumB=[0 for i in range(n+3)]\ndictA=[-1 for i in range(n+3)]\ndictB=[-1 for i in range(n+3)]\nfor i in range(n):\n    if i!=0:\n        acumA[i]+=acumA[i-1]\n        acumB[i]+=acumB[i-1]\n    if s[i]==\"A\":\n        acumA[i]+=1\n        dictA[acumA[i]]=i\n    \n    if s[i]==\"B\":\n        acumB[i]+=1\n        dictB[acumB[i]]=i\nans=0\nfor i in range(n-1):\n    if s[i]==\"A\":\n        if(dictA[acumA[i]+1]==-1):\n            continue\n        x=dictB[acumB[i]+1]\n        if(x==-1):\n            x=n\n        ans+=(x-i-1)\n        x=dictB[acumB[i]+1]\n        if(x==-1):\n            continue\n        x=max(dictB[acumB[i]+1],dictA[acumA[i]+1]-1)\n\n        ans+=(n-x-1)\n    else:\n        if(dictB[acumB[i]+1]==-1):\n            continue\n        x=dictA[acumA[i]+1]\n        if(x==-1):\n            x=n\n        ans+=(x-i-1)\n        x=dictA[acumA[i]+1]\n        if(x==-1):\n            continue\n        x=max(dictA[acumA[i]+1],dictB[acumB[i]+1]-1)\n        ans+=(n-x-1)\nprint(ans)\n", "import sys\nimport math\ninput = sys.stdin.readline\n\nn=int(input())\ns=input()\ncount=-s.count(\"AB\")-s.count(\"BA\")\ns=list(s)\narr1=[-1]\narr2=[-1]\nfor i in range(n):\n    if s[i]==\"A\":\n        arr1.append(i)\n    else:\n        arr2.append(i)\n\narr1.append(n)\narr2.append(n)\n#print(count)\nfor i in range(1,len(arr1)-1):\n    count+=arr1[i]-arr1[i-1]-1\n#print(count)\nfor i in range(1,len(arr2)-1):\n    count+=arr2[i]-arr2[i-1]-1\n#print(count)\nfor i in range(1,len(arr1)-1):\n    count+=arr1[i+1]-arr1[i]-1\n#print(count)\nfor i in range(1,len(arr2)-1):\n    count+=arr2[i+1]-arr2[i]-1\n#print(count)\nprint(n*(n-1)//2-count)", "n=int(input())\na=list(input())\nA=B=-1\nindex=[0]*n\narr=0\nis_a=-1\nis_b=-1\nfor i in range(n-1,-1,-1):\n    if a[i]=='A':\n        index[i]=A\n        if A==-1:\n            is_a=i\n        A=i\n    else:\n        index[i]=B\n        if B==-1:\n            is_b=i\n        B=i\nfor i in range(n):\n    if index[i]-1==i:\n        if a[i]=='A':\n            if is_b>=i:\n                arr-=1\n        else:\n            if is_a>=i:\n                arr-=1\n    if index[i]!=-1:\n        arr+=n-index[i]\n            \nprint(arr)\n", "from heapq import heappush, heappop\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations\nimport sys\nimport bisect\nimport string\n#import math\n#import time\n#import random\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\n#ts=time.time()\n#sys.setrecursionlimit(10**6)\n#input=sys.stdin.readline\nshow_flg=False\n#show_flg=True\n\n\ndef solve(s):\n    ans=0\n    n=len(s)\n    show(*s,n*(n-1)//2)\n    t=[]\n    if n==1:\n        print(0)\n        return\n    if len(Counter(s))==1:\n        print(n*(n-1)//2)\n        return\n    p=s[0]\n    c=1\n    \n    for i in range(1,n):\n        if s[i]==p:\n            c+=1\n        else:\n            ans+=c\n            p=s[i]\n            t.append(c)\n            c=1\n        show('i,ans,c,p',i,ans,c,p)\n    t.append(c)\n    ans=0\n    for i in range(len(t)-1):\n        ans+=t[i]+t[i+1]-1\n    show(ans,t)\n    print(n*(n-1)//2-(ans))\n    return ans\n   \nq=1\nfor _ in range(q):\n    n=I()\n    s=list(input())\n    #s=[chr(random.randint(1,2)+96-32) for i in range(random.randint(1,6))]\n    solve(s)\n\n\n", "n = int(input())\ns = input()\n\nprev_b = -1\nprev_a = -1\nans = 0\nfor i in range(n):\n    if s[i] == \"B\":\n        ans += prev_b + 1\n        if prev_b + 1 == i and prev_a != -1:\n            ans -= 1\n        prev_b = i \n        \n    else:\n        ans += prev_a + 1\n        if prev_a + 1 == i and prev_b != -1:\n            ans -= 1\n        prev_a = i\nprint(ans)", "n = int(input())\ns = input().rstrip()\ns += \"#\"\nans = (n - 1) * n // 2\nif \"A\" not in s or \"B\" not in s:\n    print(ans)\n    return\n\ncnt = 0\ncounts = []\nfor i, ch in enumerate(s):\n    if i == 0:\n        prev = ch\n        cnt += 1\n        continue\n    if prev == ch:\n        cnt += 1\n    else:\n        counts.append(cnt)\n        cnt = 1\n    prev = ch\n\nfor c1, c2 in zip(counts, counts[1:]):\n    ans -= c1 + c2 - 1\nprint(ans)", "# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nMOD = 10 ** 9 + 7\n\nN = INT()\nS = input()\n\ntotal = (N+1)*N // 2\nans = total - N\n\nL = []\ncnt = 1\nfor i in range(1, N):\n    if S[i-1] == S[i]:\n        cnt += 1\n    else:\n        L.append(cnt)\n        cnt = 1\nR = []\ncnt = 1\nfor i in range(N-2, -1, -1):\n    if S[i+1] == S[i]:\n        cnt += 1\n    else:\n        R.append(cnt)\n        cnt = 1\n\nans -= sum(L) + sum(R) - len(L)\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nS=input().strip()\n\nA=[]\nB=[]\n\nfor i in range(n):\n    if S[i]==\"A\":\n        A.append(i)\n    else:\n        B.append(i)\n\nBE=[-1]*n\n\nfor i in range(1,len(A)):\n    BE[A[i]]=A[i-1]\n\nfor i in range(1,len(B)):\n    BE[B[i]]=B[i-1]\n\n\nLEN=n+10\nBIT=[0]*(LEN+1)\n\ndef update(v,w):\n    while v<=LEN:\n        BIT[v]+=w\n        v+=(v&(-v))\n\ndef getvalue(v):\n    ANS=0\n    while v!=0:\n        ANS+=BIT[v]\n        v-=(v&(-v))\n    return ANS\n\nANS=0\n\nfor i in range(n):\n    \n    if BE[i]!=-1:\n        update(BE[i]+1,1)\n        ANS+=getvalue(BE[i]+1)\n\n    #print(i,ANS)\n\nprint(ANS)\n\n\n\n\n    \n", "import sys\nimport itertools\nimport math\nimport collections\nfrom collections import Counter\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef pow(x, y, mod):\n    r = 1\n    x = x % mod\n    while y > 0:\n        if y & 1:\n            r = (r * x) % mod\n        y = y >> 1\n        x = (x * x) % mod\n    return r\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = prime[1] = False\n    r = [p for p in range(n + 1) if prime[p]]\n    return r\ndef divs(n, start = 1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep = ' '): print(sep.join(map(str, a)))\ndef dd(): return collections.defaultdict(int)\n\nn = ii()\ns = input()\nused = [set() for i in range(n)]\ni = 0\nres = 0\nwhile i < n - 1:\n    if s[i] != s[i + 1]:\n        j = i + 1\n        while j < n and s[j] != s[i]:\n            used[i].add(j)\n            res += 1\n            j += 1\n        i = j - 1\n        continue\n    i += 1\n\ni = n - 1\nwhile i > 1:\n    if s[i] != s[i - 1]:\n        j = i - 1\n        while j >= 0 and s[j] != s[i]:\n            if i not in used[j]:\n                res += 1\n            j -= 1\n        i = j + 1\n        continue\n    i -= 1\n\nprint((n*(n-1))//2 - res)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import sys\nfrom collections import deque\ninput = sys.stdin.readline\nn = int(input())\ns = input()[:-1]\n\nans = 0\n\ni = 0\narr = [0]\nprefix = [0,0]\nwhile i < len(s):\n    n = s[i]\n    cnt = 0\n    while i < len(s) and n == s[i]:\n        cnt+=1\n        i+=1\n    arr.append(cnt)\n    prefix.append(prefix[-1]+cnt)\n    \nans = 0\n#print(prefix)\nfor i in range(len(arr)-1):\n    #print(arr[i+1], prefix[i], prefix[i+1])\n    ans+=arr[i+1]*prefix[i+1]\n    #print(ans, end = \" \")\n    ans-=arr[i]\n    if prefix[i+1] > 0:\n        ans-=(arr[i+1]-1)\n    ans += ((arr[i+1]*(arr[i+1]-1))//2)\n    #print(ans)\nprint(ans)\n\n\n\n\n\n\n", "n = int(input())\ns = input()\n\ndef bin_sear_pos(j, arr):\n\tinitial = 0\n\tfinal = len(arr)-1\n\tmiddle = (initial+final)//2\n\tif arr[final] <= j:\n\t\treturn final+1\n\telif arr[initial]>j:\n\t\treturn initial\n\twhile arr[middle] != j and (arr[middle]>j or arr[middle+1]<=j) :\n\t\tif arr[middle]<j:\n\t\t\tinitial = middle\n\t\t\tmiddle = (initial+final)//2\n\t\telse:\n\t\t\tfinal = middle\n\t\t\tmiddle = (initial+final)//2\n\n\treturn middle+1\n\n\ncount_a = 0\ncount_b = 0\ndic = {0:[], 1:[]}\nfor i in range(n):\n\tif s[i] ==\"A\":\n\t\tcount_a += 1\n\t\tdic[0].append(i)\n\telse:\n\t\tcount_b += 1\n\t\tdic[1].append(i)\n\ncount = 0\ncount += count_a*(count_a-1)//2\ncount += count_b*(count_b-1)//2\nif count_a !=0 and count_b !=0:\n\tfor i in range(len(dic[0])-1):\n\t\t#print(\"IN\")\n\t\tb_pos = bin_sear_pos(dic[0][i], dic[1])\n\n\t\t#print(b_pos)\n\t\tif b_pos<len(dic[1]):\n\t\t\tcount += len(dic[1]) - bin_sear_pos(max(dic[0][i+1], dic[1][b_pos]), dic[1])\n\t\t#print(count)\n\n\tfor i in range(len(dic[1])-1):\n\t\ta_pos = bin_sear_pos(dic[1][i], dic[0])\n\t\tif a_pos < len(dic[0]):\n\t\t\tcount += len(dic[0]) - bin_sear_pos(max(dic[1][i+1], dic[0][a_pos]), dic[0])\n\n\nprint(count)", "from math import *\nn = int(input())\ns = list(input())\nct = 1\nprev = 1\ns1 = 0\na = []\nfor i in range(1,n):\n\tif(s[i] != s[i-1]):\n\t\ta.append(ct)\n\t\t#s1 += 1 - ct - prev\n\t\tprev = ct\n\t\tct = 1\n\telse:\n\t\tct += 1\na.append(ct)\n\n#print(s1,a)\ns2 = 0\nfor i in range(0,len(a)):\n\ts1 -= 2*a[i]\n\ts1 -= a[i]/2\n\ts2 += a[i]\ns1 += s2*s2/2\ns1 += len(a)-1+a[0]+a[-1]\nprint(int(s1))\n", "n=int(input())\na=list(input())\nans=n*(n-1)//2\nl=1\nfor itr in range(1,n):\n    #print(ans)\n    if a[itr]==a[itr-1]: l+=1\n    else: \n        ans-=l\n        l=1\nl=1\na=a[::-1]\nfor itr in range(1,n):\n    if a[itr]==a[itr-1]: l+=1\n    else: \n        ans-=l-1\n        l=1\nprint(ans)", "n = int(input())\ns = input()\n\nans = n*(n+1)/2 - n\n\ncount,i = 0,0\nl = list()\n\nwhile(i<n):\n\tc = s[i]\n\tval = 0\n\twhile(i<n and s[i] == c):\n\t\ti+=1\n\t\tval += 1\n\tl.append(val)\n\ncount += len(l)-1\nl = list(map(list, list(zip(l,l[1:]))))\nfor a,b in l:\n\tcount += a-1 + b-1\n\nprint(int(ans - count))\n"]