["import sys\nn,m,s,f=list(map(int,sys.stdin.readline().split()))\nL=[]\nR=[]\nT=[]\nfor i in range(m):\n    t,l,r=list(map(int,sys.stdin.readline().split()))\n    T.append(t)\n    L.append(l)\n    R.append(r)\n\nif(f>s):\n    i=s\n    step=1\n    ind=0\n    Ans=\"\"\n    while(i!=f):\n        if(ind>=m or T[ind]!=step):\n            Ans+=\"R\"\n            i+=1\n        else:\n            if((i>=L[ind] and i<=R[ind]) or (i+1>=L[ind] and i+1<=R[ind])):\n                Ans+=\"X\"\n            else:\n                Ans+=\"R\"\n                i+=1\n            ind+=1\n        step+=1\nelse:\n    i=s\n    step=1\n    ind=0\n    Ans=\"\"\n    while(i!=f):\n        if(ind>=m or T[ind]!=step):\n            Ans+=\"L\"\n            i-=1\n        else:\n            if((i>=L[ind] and i<=R[ind]) or (i-1>=L[ind] and i-1<=R[ind])):\n                Ans+=\"X\"\n            else:\n                Ans+=\"L\"\n                i-=1\n            ind+=1\n        step+=1\nsys.stdout.write(Ans+\"\\n\")\n", "n,m,s,f = map (int, input().split())\nwatch = {}\nfor i in range (m):\n  t,l,r = map (int, input().split())\n  watch[t] = (l,r)\ncur = s\nmove,symbol = (1,'R') if s < f else (-1,'L')\nstep = 1\nwhile cur != f:\n  if step in watch:\n    l,r = watch[step]\n    if (l <= cur <= r or\n        l <= (cur+move) <= r):\n      print ('X',end='')\n    else:\n      cur += move\n      print (symbol,end='')\n  else:\n    cur += move\n    print (symbol,end='')\n  step += 1\n", "n, m, s, f = [int(x) for x in input().split()]\nnow = 1\nd = 1 if f > s else -1\nstep = 'R' if d == 1 else 'L'\n\nret = \"\"\n\nfor _ in range(m):\n    t, l, r = [int(x) for x in input().split()]\n    if t > now:\n        flag = False\n        while t > now:\n            s += d\n            ret += step\n            now += 1\n            if s == f:\n                flag = True\n                break\n        if flag:\n            break\n    if l <= s <= r or l <= s+d <= r:\n        ret += 'X'\n    else:\n        ret += step\n        s += d\n    if s == f:\n        break\n    now += 1\n\nwhile s != f:\n    s += d\n    ret += step\n\nprint(ret)\n", "\ndef __starting_point():\n    inp = input()\n    arr = inp.split(' ')\n    n = int(arr[0])\n    m = int(arr[1])\n    s = int(arr[2])\n    f = int(arr[3])\n    ans = \"\"\n    ch = 'L'\n    inc = -1\n    if s<f:\n        ch='R'\n        inc = 1\n    tm = 1\n    done = False\n    for i in range(m):\n        inp = input()\n        if done:\n            continue\n        arr = inp.split(' ')\n        ct = int(arr[0])\n        l = int(arr[1])\n        r = int(arr[2])\n        while ct!=tm:\n            ans+=ch\n            tm+=1\n            s+=inc\n            if s==f:\n                break\n        if s!=f and (((s+inc)>=l and (s+inc)<=r)or((s>=l)and(s<=r))):\n            ans += 'X'\n        elif s!=f:\n            ans += ch\n            s += inc\n        tm+=1\n        if s==f:\n            done = True\n    while s!=f:\n        s+=inc\n        ans+=ch\n    print(ans)\n        \n\n__starting_point()", "n,m,s,f=list(map(int,input().split()));\nd={};\nfor i in range(m):\n    t,l,r=list(map(int,input().split()));\n    d[t]=[l,r];\nans=\"\";\nfor i in range(1,n+m):\n    if(s==f):\n        print(ans);\n        return;\n    t=-1;\n    if(f<s):\n        t=s-1;\n    else:\n        t=s+1;\n    if i in d:\n        if((d[i][0]<=s and s<=d[i][1]) or (d[i][0]<=t and t<=d[i][1])):\n            t=-1;\n    if(t==-1):\n        ans+=\"X\";\n    else:\n        if(f<s):\n            ans+=\"L\";\n        else:\n            ans+=\"R\";\n        s=t;\nprint(ans);\n\n", "n,m,s,f=list(map(int,input().split()))\nt={}\nstep=1\nans=''\nif s<f:sig='R'\nelse :sig='L'\nfor i in range(m):\n    t0,l0,r0=list(map(int,input().split()))\n    t[t0]=[l0,r0]\n\nfor i in range(1,n+m+1):\n    if s<f:\n            u=s+1\n            \n    else:u=s-1\n    if i in t:\n      \n        if (t[i][0]<=s<=t[i][1])or(t[i][0]<=u<=t[i][1]):\n            ans+='X'\n        else:\n            ans+=sig\n            s=u\n        \n    else :\n        ans+=sig\n        s=u\n    if s==f:break\n\nprint(ans)    \n", "R = lambda: list(map(int, input().split()))\nn, m, s, f = R()\n\nif s < f:\n  d = 1\n  c = 'R'\nelse:\n  d = -1\n  c = 'L'\n  \nres = \"\"\ni = 1\nj = s\nt, l, r = R()\nk = 1\nwhile j != f:\n  if i > t and k < m:\n    t, l, r = R()\n    k += 1\n  if i == t and (l <= j <= r or l <= j + d <= r):\n    res += 'X'\n  else:\n    res += c\n    j += d\n  i += 1\n    \nprint(res)  \n", "n, m, s, f = list(map(int, input().split()))\n\nans, p = '', 1\nif s < f:\n    for i in range(m):\n        t, l, r = list(map(int, input().split()))\n        if t > p:\n            if t - p < f - s:\n                ans += 'R' * (t - p)\n                s += t - p\n            else:\n                ans += 'R' * (f - s)\n                s = f\n                break\n        p = t + 1\n        if s + 1 < l or s > r:\n            ans += 'R'\n            s += 1\n            if s == f: break\n        else: ans += 'X'\nelse:\n    for i in range(m):\n        t, l, r = list(map(int, input().split()))\n        if t > p:\n            if t - p < s - f:\n                ans += 'L' * (t - p)\n                s -= t - p\n            else:\n                ans += 'L' * (s - f)\n                s = f\n                break\n        p = t + 1\n        if s < l or s - 1 > r:\n            ans += 'L'\n            s -= 1\n            if s == f: break\n        else: ans += 'X'\nprint(ans + ('R' * (f - s) if f > s else 'L' * (s - f)))\n", "import sys\nn,m,s,f=list(map(int,sys.stdin.readline().split()))\nL=[]\nR=[]\nT=[]\nfor i in range(m):\n    t,l,r=list(map(int,sys.stdin.readline().split()))\n    T.append(t)\n    L.append(l)\n    R.append(r)\n\nif(f>s):\n    i=s\n    step=1\n    ind=0\n    Ans=\"\"\n    while(i!=f):\n        if(ind>=m or T[ind]!=step):\n            Ans+=\"R\"\n            i+=1\n        else:\n            if((i>=L[ind] and i<=R[ind]) or (i+1>=L[ind] and i+1<=R[ind])):\n                Ans+=\"X\"\n            else:\n                Ans+=\"R\"\n                i+=1\n            ind+=1\n        step+=1\nelse:\n    i=s\n    step=1\n    ind=0\n    Ans=\"\"\n    while(i!=f):\n        if(ind>=m or T[ind]!=step):\n            Ans+=\"L\"\n            i-=1\n        else:\n            if((i>=L[ind] and i<=R[ind]) or (i-1>=L[ind] and i-1<=R[ind])):\n                Ans+=\"X\"\n            else:\n                Ans+=\"L\"\n                i-=1\n            ind+=1\n        step+=1\nsys.stdout.write(Ans+\"\\n\")\n", "import sys\nfrom itertools import *\nfrom math import *\ndef solve():\n    n,m,s,f = map(int, input().split())\n    s-=1\n    f-=1\n    d = {}\n    for _ in range(m):\n        t,l,r = map(int, input().split())\n        d[t-1] = (l - 1, r - 1)\n    # d = {(t - 1) : (l - 1, r - 1) for t,l,r in map(int, input().split()) for _ in range(m)}\n    step = 0\n    res = list()\n    while s != f:\n        wantnext = s + 1 if s < f else s - 1\n        canmove = True\n        if step in d:\n            l, r = d[step]\n            if (s >= l and s <= r) or (wantnext >= l and wantnext <= r): canmove = False\n        if canmove:\n            res.append('R' if wantnext > s else 'L')\n            s = wantnext\n        else: res.append('X')\n        step += 1\n    print(''.join(map(str, res))) #change to string at end to see if faster\n\n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()", "import sys\nfrom itertools import *\nfrom math import *\ndef solve():\n    n,m,s,f = map(int, input().split())\n    s-=1\n    f-=1\n    d = {}\n    for _ in range(m):\n        t,l,r = map(int, input().split())\n        d[t-1] = (l - 1, r - 1)\n    # d = {(t - 1) : (l - 1, r - 1) for t,l,r in map(int, input().split()) for _ in range(m)}\n    step = 0\n    res = \"\"\n    while s != f:\n        wantnext = s + 1 if s < f else s - 1\n        canmove = True\n        if step in d:\n            l, r = d[step]\n            if (s >= l and s <= r) or (wantnext >= l and wantnext <= r): canmove = False\n        if canmove:\n            res += 'R' if wantnext > s else 'L'\n            s = wantnext\n        else: res += 'X'\n        step += 1\n    print(res)\n    # print(''.join(map(str, res))) #change to string at end to see if faster\n\n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()", "\"\"\"http://codeforces.com/problemset/problem/342/B\"\"\"\n\ndef solve(s, f, t):\n    res = ''\n    step = 1 if s < f else -1\n    i = current = 0\n    while s != f:\n        current += 1\n        ti, l, r = t[i] if i < len(t) else (-1, -1, -1)\n        if ti == current:\n            i += 1\n            if l <= s <= r or l <= s + step <= r:\n                res += 'X'\n                continue\n        s += step\n        res += 'R' if step > 0 else 'L'\n    return res\n\ndef __starting_point():\n    parse = lambda: list(map(int, input().split()))\n    n, m, s, f = parse()\n    l = [parse() for _ in range(m)]\n    print(solve(s, f, l))\n\n__starting_point()", "n, m, s, f = list(map(int, input().split()))\nc, t1 = 1, 0\nans = \"\"\nt = 1\nwhile s != f and t1 < m:\n  t, l, r = list(map(int, input().split()))\n  # print(ans)\n  while t != c:\n    if s < f:\n      ans += \"R\"\n      s += 1\n    else:\n      ans += \"L\"\n      s -= 1\n    if s == f:\n      break\n    c += 1\n  if s < f:\n    if s >= l-1 and s <= r:\n      ans += \"X\"\n    else:\n      ans += \"R\"\n      s += 1\n  elif s > f:\n    if s <= r+1 and s >= l:\n      ans += \"X\"\n    else:\n      ans += \"L\"\n      s -= 1\n  c += 1\n  t1 += 1\nif s < f:\n  ans += \"R\"*(f-s)\nelif s > f:\n  ans += \"L\"*(s-f)\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "R = lambda: map(int, input().split())\nn, m, s, f = R()\n\nif s < f:\n  d = 1\n  c = 'R'\nelse:\n  d = -1\n  c = 'L'\n  \nres = \"\"\ni = 1\nj = s\nt, l, r = R()\nk = 1\nwhile j != f:\n  if i > t and k < m:\n    t, l, r = R()\n    k += 1\n  if i == t and (l <= j <= r or l <= j + d <= r):\n    res += 'X'\n  else:\n    res += c\n    j += d\n  i += 1\n    \nprint(res)  ", "R = lambda: list(map(int, input().split()))\n\nn, m, s, f = R()\n\n\n\nif s < f:\n\n  d = 1\n\n  c = 'R'\n\nelse:\n\n  d = -1\n\n  c = 'L'\n\n  \n\nres = \"\"\n\ni = 1\n\nj = s\n\nt, l, r = R()\n\nk = 1\n\nwhile j != f:\n\n  if i > t and k < m:\n\n    t, l, r = R()\n\n    k += 1\n\n  if i == t and (l <= j <= r or l <= j + d <= r):\n\n    res += 'X'\n\n  else:\n\n    res += c\n\n    j += d\n\n  i += 1\n\n    \n\nprint(res)  \n\n\n\n\n\n# Made By Mostafa_Khaled\n", "n,m,s,f = list(map(int,input().split()))\nl = []\nfor i in range(m):\n         k = list(map(int,input().split()))\n         l.append(k)\n\ncount = 1\nans = ''\ni = 0\nwhile i<m:\n\n\n    if count < l[i][0]:\n        if f>s:\n            ans+='R'*min(l[i][0] - count,f-s)\n            s+=min(l[i][0] - count,f-s)\n            count = l[i][0]\n\n        if f<s:\n            ans+='L'*min(l[i][0] - count,s-f)\n            s-=min(l[i][0] - count,s-f)\n            # print(min(l[i][0] - count,s-f))\n            count = l[i][0]\n\n\n\n\n\n    else:\n        if l[i][1]<=s<=l[i][2]:\n            ans+='X'\n\n        else:\n            if f>s:\n                if l[i][1]<=s+1<=l[i][2]:\n                    ans+='X'\n                else:\n                    ans+='R'\n                    s+=1\n            if f<s:\n                if l[i][1]<=s-1<=l[i][2]:\n                    ans+='X'\n                else:\n                    ans+='L'\n                    s-=1\n        i+=1\n        count+=1\n    # print(s)\n\n    if s == f:\n        break\nif s!=f:\n  if s<f:\n    ans+='R'*(f-s)\n  else:\n      ans+='L'*(s-f)\n\n\nprint(ans)\n\n", "n, m, s, f = map(int, input().split())\nc, t1 = 1, 0\nans = \"\"\nt = 1\nwhile s != f and t1 < m:\n  t, l, r = map(int, input().split())\n  # print(ans)\n  while t != c:\n    if s < f:\n      ans += \"R\"\n      s += 1\n    else:\n      ans += \"L\"\n      s -= 1\n    if s == f:\n      break\n    c += 1\n  if s < f:\n    if s >= l-1 and s <= r:\n      ans += \"X\"\n    else:\n      ans += \"R\"\n      s += 1\n  elif s > f:\n    if s <= r+1 and s >= l:\n      ans += \"X\"\n    else:\n      ans += \"L\"\n      s -= 1\n  c += 1\n  t1 += 1\nif s < f:\n  ans += \"R\"*(f-s)\nelif s > f:\n  ans += \"L\"*(s-f)\nprint(ans)", "import sys\nspies, turns, note, final = list(map(int, input().split()))\nif note < final:\n    next = 1\nelse:\n    next = -1\nanswer = []\n\ndef pass_note(current_turn, next_watch, left, right, note):\n#    print(f'\\n{current_turn}), next watch: {next_watch}, left: {left}, right: {right} has note: {note}, goal: {final}')\n    if current_turn == next_watch:\n#        print('Watched this turn')\n        if note in range(left, right + 1) or note + next in range(left, right + 1):\n#            if note in range(left, right + 1):\n#                print(f'Im being watched')\n#            else:\n#                print(f'Guy to pass it to is being watched')\n            return note, 'X'\n#    print('Not watched, passing note to ', end='')\n    if note < final:\n        note += next\n#        print('right')\n        return note, 'R'\n    else:\n        note += next\n#        print('left')\n        return note, 'L'\n\ncurrent_turn = 0\nfor turn in range(turns):\n    next_watch, left, right = list(map(int, input().split()))\n    while current_turn < next_watch:\n        current_turn += 1\n        note, ans = pass_note(current_turn, next_watch, left, right, note)\n        answer.append(ans)\n        if note == final:\n            print(''.join(answer))\n            return\n\n#print(\"ran out of turns\")\n\nwhile note != final:\n#    print(f'Note at: {note}, goal is {final}')\n    current_turn += 1\n    note, ans = pass_note(current_turn, 0, -1, -1, note)\n    answer.append(ans)\n\nprint(''.join(answer))\n", "n, m, s, f = list(map(int, input().split()))\nif s < f:\n    d = 1\n    c = 'R'\nelse:\n    d = -1\n    c = 'L'\nres = ''\ni, j = 1, s\nt, l, r = list(map(int, input().split()))\nk = 1\nwhile j != f:\n    if i > t and k < m:\n        t, l, r = list(map(int, input().split()))\n        k += 1\n    if i == t and (l <= j <= r or l <= j + d <= r):\n        res += 'X'\n    else:\n        res += c\n        j += d\n    i += 1\nprint(res)\n", "n,m,s,f=list(map(int,input().split()))\np=s\nd=-1\nc='L'\nif s<f:\n    d=1\n    c='R'\nt=1\nts={}\nans=\"\"\nfor _ in range(m):\n    x,y,z=list(map(int,input().split()))\n    ts[x]=(y,z)\nwhile(p!=f):\n    if t in ts:\n        (l,r)=ts[t]\n        if l<=p<=r or l<=p+d<=r:\n            ans+='X'\n        else:\n            p+=d\n            ans+=c\n    else:\n        p+=d\n        ans+=c\n    t+=1\nprint(ans)\n", "def mi():\n        return map(int, input().split())\n'''\n3 5 1 3\n1 1 2\n2 2 3\n3 3 3\n4 1 1\n10 1 3\n'''\nn,m,s,f = mi()\nt = [0]*m\nl = [0]*m\nr = [0]*m\nfor i in range(m):\n        t[i],l[i],r[i] = mi()\ncurp = s\ncurt = 1\ni = 0\na = ''\nif f>s:\n        a = (f-s)*'R'\nelse:\n        a = (s-f)*'L'\nwhile i<m and curp!=f:\n        if t[i]==curt:\n                if a[0]=='R' and curp+1>=l[i] and curp+1<=r[i]:\n                        print ('X', end = '')\n                elif a[0]=='L' and curp-1>=l[i] and curp-1<=r[i]:\n                        print ('X', end = '')\n                elif curp>=l[i] and curp<=r[i]:\n                        print ('X', end = '')\n                elif a[0]=='R':\n                        curp+=1\n                        print(a[0], end = '')\n                else:\n                        curp-=1\n                        print (a[0], end = '')\n                i+=1\n        elif a[0]=='R':\n                curp+=1\n                print(a[0], end = '')\n        else:\n                curp-=1\n                print (a[0], end = '')\n\n        curt+=1\nif f>curp:\n        print ((f-curp)*'R')\nelif curp>f:\n        print ((curp-f)*'L')\n", "n, m, s, f = map(int, input().split())\ndata = {}\nfor _ in range(m):\n    t, l, r = map(int, input().split())\n    data[t] = (l, r)\nk = 1\ncurr = s\nwhile curr != f:\n    if k in data:\n        if data[k][0] <= curr <= data[k][1]:\n            print('X', end='')\n        else:\n            if 1 < curr < n:\n                if curr > f:\n                    if data[k][0] <= curr - 1 <= data[k][1]:\n                        print('X', end='')\n                    else:\n                        print('L', end='')\n                        curr -= 1\n                else:\n                    if data[k][0] <= curr + 1 <= data[k][1]:\n                        print('X', end='')\n                    else:\n                        print('R', end='')\n                        curr += 1\n            elif curr == 1:\n                if data[k][0] <= 2 <= data[k][1]:\n                    print('X', end='')\n                else:\n                    print('R', end='')\n                    curr = 2\n            elif curr == n:\n                if data[k][0] <= curr-1 <= data[k][1]:\n                    print('X', end='')\n                else:\n                    print('L', end='')\n                    curr -= 1\n    else:\n        if curr > f:\n            print('L', end='')\n            curr -= 1\n        else:\n            print('R', end='')\n            curr += 1\n    k += 1\n\n# Mon Aug 12 2019 14:53:46 GMT+0300 (MSK)\n", "n, m, s, f = map(int, input().split())\nq = dict()\nfor i in range(m):\n    t,l,r = map(int, input().split())\n    q[t] = (l, r)\nk=1;pos=s;\nwhile pos!=f:\n    if k in q:\n        if q[k][0] <= pos <= q[k][1]:\n            print('X', end='')\n        else:\n            if 1 < pos < n:\n                if pos > f:\n                    if q[k][0] <= pos-1 <= q[k][1]:\n                        print('X',end='')\n                    else:\n                        print('L',end='')\n                        pos-=1\n                else:\n                    if q[k][0]<=pos+1<=q[k][1]:\n                        print('X',end='')\n                    else:\n                        print('R',end='')\n                        pos+=1\n            elif pos==1:\n                if q[k][0]<=2<=q[k][1]:\n                    print('X',end='')\n                else:\n                    print('R',end='')\n                    pos=2\n            elif pos==n:\n                if q[k][0]<=pos-1<=q[k][1]:\n                    print('X',end='')\n                else:\n                    print('L',end='')\n                    pos-=1\n    else:\n        if pos>f:\n            print('L', end='')\n            pos-=1\n        else:\n            print('R', end='')\n            pos+=1\n    k+=1", "n,m,s,f=map(int,input().split())\nt=dict();\nfor i in range(m):\n    t1,l1,r1=map(int,input().split())\n    t[t1]=(l1,r1);\npos=s;i=1;\nwhile(1):\n    if(pos==f):\n        break\n    if i in t:\n        if t[i][0] <= pos<=t[i][1]:\n            print('X',end='')\n            i+=1\n            continue\n        elif(f-pos>0 and t[i][0]<= pos+1<=t[i][1]):\n            print('X',end='')\n            i+=1\n            continue\n        elif(f-pos<0 and t[i][0] <= pos-1<=t[i][1]):\n            print('X',end='')\n            i+=1\n            continue\n    if(f-pos>0):\n        print('R',end='')\n        pos+=1\n    elif(pos-f>0):\n        print('L',end='')\n        pos-=1\n    i+=1", "R = lambda: list(map(int, input().split()))\n \nn, m, s, f = R()\n \n \n \nif s < f:\n \n  d = 1\n \n  c = 'R'\n \nelse:\n \n  d = -1\n \n  c = 'L'\n \n  \n \nres = \"\"\n \ni = 1\n \nj = s\n \nt, l, r = R()\n \nk = 1\n \nwhile j != f:\n \n  if i > t and k < m:\n \n    t, l, r = R()\n \n    k += 1\n \n  if i == t and (l <= j <= r or l <= j + d <= r):\n \n    res += 'X'\n \n  else:\n \n    res += c\n \n    j += d\n \n  i += 1\n \n    \n \nprint(res)  \n \n \n \n"]