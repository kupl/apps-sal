["r, s, p = list(map(int, input().split()))\ndp = [[[0] * (p+1) for _ in range(s+1)] for _ in range(r+1)]\ndp[r][s][p] = 1\ndef nCk(n, k):\n    if n <= k:\n        return 1\n    res = 1\n    for i in range(k):\n        res *= n-i\n    for i in range(k):\n        res //= (i+1)\n    return res\n\nC = [nCk(i, 2) for i in range(r+s+p+1)]\nfor ri in range(r, -1, -1):\n    for si in range(s, -1, -1):\n        for pi in range(p, -1, -1):\n            t = ri * si + si * pi + pi * ri\n            if t == 0: continue\n            if ri > 0:\n                dp[ri-1][si][pi] += dp[ri][si][pi] * ri * pi / t\n            if si > 0:\n                dp[ri][si-1][pi] += dp[ri][si][pi] * ri * si / t\n            if pi > 0:\n                dp[ri][si][pi-1] += dp[ri][si][pi] * si * pi / t\n        \n        \nr_sum = sum([dp[ri][0][0] for ri in range(r+1)])\ns_sum = sum([dp[0][si][0] for si in range(s+1)])\np_sum = sum([dp[0][0][pi] for pi in range(p+1)])\nprint(r_sum, s_sum, p_sum)\n", "r, s, p = map(int, input().split())\nn = 101\ng = lambda i, j, k: i + n * (j + n * k)\nt = [0] * (n ** 3)\nfor i in range(1, n):\n    for j in range(n):\n        for k in range(n):\n            l = g(i, j, k)\n            if j or k:\n                x, y, z = g(i, j - 1, k), g(i - 1, j, k), g(i, j, k - 1)\n                a, b, c = i * j, i * k, j * k\n                t[l] = (a * t[x] + b * t[y] + c * t[z]) / (a + b + c)\n            else: t[l] = 1\nx, y, z = g(r, s, p), g(s, p, r), g(p, r, s)\nprint(t[x], t[y], t[z])", "r, s, p = map(int, input().split())\nn = 101\nm = n * n\nt = [0] * n * m\nfor i in range(1, n):\n    for j in range(n):\n        for k in range(n):\n            d = i + n * j + m * k\n            a = i * j * t[d - n] + i * k * t[d - 1] + j * k * t[d - m]\n            b = i * j + i * k + j * k\n            t[d] = a / b if j or k else 1\nprint(t[r + n * s + m * p], t[s + n * p + m * r], t[p + n * r + m * s])", "r, s, p = [int(x) for x in input().split()]\ndp = [[[0 for i in range(105)] for j in range(105)] for k in range(105)]\n\ndp[r][s][p] = 1\n\nfor i in range(r, -1, -1):\n    for j in range(s, -1, -1):\n        for k in range(p,-1, -1):\n\n            dnr = i * j + j * k + i * k\n\n            if i > 0 and j > 0:\n                dp[i][j - 1][k] += (i * j * dp[i][j][k]) / dnr\n            if j > 0 and k > 0:\n                dp[i][j][k - 1] += (j * k * dp[i][j][k]) / dnr\n            if k > 0 and i > 0:\n                dp[i - 1][j][k] += (k * i * dp[i][j][k]) / dnr\n\nroc, sci, pap = [0] * 3\n\nfor i in range(105):\n    roc += dp[i][0][0]\n    sci += dp[0][i][0]\n    pap += dp[0][0][i]\n\n\nprint(roc, sci, pap)\n            \n\n            \n", "r, s, p = [int(x) for x in input().split()]\ndp = [[[0 for i in range(105)] for j in range(105)] for k in range(105)]\n \ndp[r][s][p] = 1\n \nfor i in range(r, -1, -1):\n    for j in range(s, -1, -1):\n        for k in range(p,-1, -1):\n \n            dnr = i * j + j * k + i * k\n \n            if i > 0 and j > 0:\n                dp[i][j - 1][k] += (i * j * dp[i][j][k]) / dnr\n            if j > 0 and k > 0:\n                dp[i][j][k - 1] += (j * k * dp[i][j][k]) / dnr\n            if k > 0 and i > 0:\n                dp[i - 1][j][k] += (k * i * dp[i][j][k]) / dnr\n \nroc, sci, pap = [0] * 3\n \nfor i in range(105):\n    roc += dp[i][0][0]\n    sci += dp[0][i][0]\n    pap += dp[0][0][i]\n \n \nprint(roc, sci, pap)", "A, B, C = map(lambda x: int(x)+1, input().split())\nM = max(max(A, B), C)\np = [[[0] * (M) for i in range(M)] for j in range(M)]\n\nfor a in range(M):\n    for b in range(M):\n        for c in range(M):\n            val=0    \n            if a == 0 or b == 0:\n                val=0\n            elif c == 0:\n                val=1\n            else:\n                div = a*b + b*c + c*a\n                val = (a*b) / div * p[a][b-1][c] + \\\n                      (b*c) / div * p[a][b][c-1] + \\\n                      (a*c) / div * p[a-1][b][c]\n            \n            p[a][b][c]=val    \n            \nprint(p[A-1][B-1][C-1], p[B-1][C-1][A-1], p[C-1][A-1][B-1])        "]