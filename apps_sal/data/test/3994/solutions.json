["n = int(input())\ns = input()\nused = [0] * n\nfor i in range(n):\n  if s[i] == '0':\n    used[i] = False\n  else:\n    used[i] = True\na = [0] * n\nb = [0] * n\nfor i in range(n):\n  a[i], b[i] = list(map(int, input().split()))\n\nans = 0\nfor time in range(500):\n  for i in range(n):\n    if time >= b[i] and (time - b[i]) % a[i] == 0:\n      used[i] = not used[i]\n  cnt = 0\n  for i in range(n):\n    if used[i]:\n      cnt += 1\n  ans = max(ans, cnt)\nprint(ans)\n", "#!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\n#A\ndef A():\n    n = I()\n    a = LI()\n    a.sort()\n    f = [1]*n\n    p = 0\n    ans = 0\n    while p < n:\n        while p < n and not f[p]:\n            p += 1\n        if p == n:\n            break\n        ans += 1\n        for i in range(n):\n            if a[i]%a[p] == 0:\n                f[i] = 0\n    print(ans)\n    return\n\n#B\ndef B():\n    n = I()\n    s = list(map(int, input()))\n    g = LIR(n)\n    ans = sum(s)\n    for t in range(30000):\n        for i in range(n):\n            ai,bi = g[i]\n            if t < bi:\n                continue\n            if (t-bi)%ai == 0:\n                s[i] ^= 1\n        su = sum(s)\n        if ans < su:\n            ans = su\n    print(ans)\n    return\n\n#C\ndef C():\n\n    return\n\n#D\ndef D():\n\n    return\n\n#E\ndef E():\n\n    return\n\n#F\ndef F():\n\n    return\n\n#G\ndef G():\n\n    return\n\n#H\ndef H():\n\n    return\n\n#Solve\ndef __starting_point():\n    B()\n\n__starting_point()", "3\n\nn = int(input())\ns = list(map(int, input()))\na = []\nb = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a.append(x)\n    b.append(y)\n\nmx = sum(s)\nfor i in range(1, 5000):\n    for j in range(n):\n        if i >= b[j] and (i - b[j]) % a[j] == 0:\n            s[j] ^= 1\n    mx = max(mx, sum(s))\n\nprint(mx)\n\n", "n=int(input())\ns=input()\ntimeline=[0]*1000\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    if s[i]=='1':\n        for j in range(b):\n            timeline[j]+=1\n        for j in range(b,1000,a):\n            if ((j-b)//a)%2==1:\n                for k in range(j,min(1000,j+a)):\n                    timeline[k]+=1\n    else :\n        for j in range(b,1000,a):\n            if ((j-b)//a)%2==0:\n                for k in range(j,min(1000,j+a)):\n                    timeline[k]+=1\nprint(max(timeline))\n        \n    \n", "a = int(input())\nb = list(input())\nfor i in range(a):\n    b[i] = int(b[i])\nhar = []\nfor i in range(a):\n    c, d = list(map(int,input().split()))\n    har.append((c, d))\nma = sum(b)\nfor i in range(10000):\n    for j in range(a):\n        if i >= har[j][1] and (i - har[j][1]) % har[j][0] == 0:\n            b[j] = 1 - b[j]\n    ma = max(ma, sum(b))\nprint(ma)\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = list(input())\na = []\nb = []\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    a.append(x)\n    b.append(y)\n\ncnt = s.count('1')\nans = cnt\nfor t in range(1, 1000):\n    for i in range(n):\n        if t >= b[i] and (t - b[i]) % a[i] == 0:\n            if s[i] == '1':\n                s[i] = '0'\n                cnt -= 1\n            else:\n                s[i] = '1'\n                cnt += 1\n    ans = max(ans, cnt)\nprint(ans)\n", "n = int(input())\n\ns = list(map(int, list(input())))\n\nlights = []\n\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n\n    lights.append([a, b])\n\nans = sum(s)\n\nfor tick in range(1000):\n    for i in range(n):\n        if tick >= lights[i][1] and (tick - lights[i][1]) % lights[i][0] == 0:\n            s[i] += 1\n            s[i] %= 2\n    ans = max(ans, sum(s))\n\n\nprint(ans)\n", "n = int(input())\ns = [int(q) for q in input()]\na = [list(map(int, input().split())) for _ in range(n)]\nd = s[::]\nans = sum(d)\nfor q in range(1179):\n    for q1 in range(len(a)):\n        if a[q1][1] <= q and (q-a[q1][1]) % a[q1][0] == 0:\n            d[q1] = 1-d[q1]\n    ans = max(ans, sum(d))\nprint(ans)\n", "N = int(input())\nA = [int(a) for a in input()]\nX = []\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    X.append((a, b))\nma = sum(A)\nfor i in range(151):\n    for j in range(N):\n        if i >= X[j][1] and (i-X[j][1]) % X[j][0] == 0:\n            A[j] ^= 1\n    ma = max(ma, sum(A))\n\nprint(ma)\n\n", "n = int(input())\ns = list([c == '1' for c in input().strip()])\nlights = [list(map(int, input().split())) for i in range(n)]\n\nans = 0\nfor time in range(1000):\n    for cur in range(n):\n        if time < lights[cur][1]:\n            continue\n        if (time - lights[cur][1]) % lights[cur][0] == 0:\n            s[cur] = not s[cur]\n    ans = max(ans, sum(int(i) for i in s))\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\ns=input().strip()\n\nAB=[tuple(map(int,input().split())) for i in range(n)]\n\nANS=[[0]*n for i in range(3000)]\n\nfor i in range(n):\n    k=int(s[i])\n    a,b=AB[i]\n\n    t=0\n    while t<3000:\n        if t>=b and (t-b)%a==0:\n            k=1-k\n            \n        ANS[t][i]=k\n        t+=1\n\n\n    \nA=0\nfor t in range(3000):\n    A=max(A,sum(ANS[t]))\n\nprint(A)\n", "#D1_B\n\nlim = 200\narr = [0] * lim\n\nn = int(input())\n\nst = list(input())\n\nfor i in range(0, n):\n    ln = [int(j) for j in input().split(\" \")]\n    a = ln[0]\n    b = ln[1]\n    o = [False, True][int(st[i])]\n    for j in range(0, lim):\n        if j < b:\n            if o:\n                arr[j] += 1\n            continue\n        if (j - b) % a == 0:\n            o = not o\n        if o:\n            arr[j] += 1\n\nprint(max(arr))\n", "n=int(input())\ns=input()\narr=[int(s[i]) for i in range(len(s))]\nt=[]\nfor i in range(n):\n    t.append([int(x) for x in input().split()])\nans=sum(arr)\nfor i in range(2000):\n    for j in range(n):\n        if i>=t[j][1] and (i-t[j][1]) % t[j][0] == 0:\n            if arr[j] == 1:\n                arr[j]=0\n            else:\n                arr[j]=1\n    ans=max(ans,sum(arr))\nprint(ans)", "'''input\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n\n\n'''\nimport sys\nfrom collections import defaultdict as dd\n\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\nn = ri(1)\na = input()\n\nb= []\n\ntime = [0 for i in range(5030)]\n\n\nfor i in range(n):\n\tx,y = ri()\n\tcur = int(a[i])\n\tfor j in range(y):\n\t\ttime[j] += cur\n\tfor j in range(5010):\n\t\tif j%x==0:\n\t\t\tcur = cur^1\n\t\ttime[y+j] += cur\n\t\t\n\nprint(max(time))\n\n\n", "n = int(input())\nstate = [int(e == '1') for e in input()]\nl = [[*map(int, input().split())] for _ in range(n)]\nres = sum(state)\nfor t in range(1, 1000):\n    for i in range(n):\n        if t >= l[i][1] and (t - l[i][1]) % l[i][0] == 0:\n            state[i] ^= 1\n    res = max(res, sum(state))\nprint(res)", "n = int(input())\nt = [int(w) for w in input()]\naar = []\nbar = []\nfor __ in range(n):\n    a, b = map(int, input().split())\n    aar.append(a)\n    bar.append(b)\n\nr = 0\n\nfor __ in range(500):\n    r = max(r, sum(t))\n    for i in range(n):\n        a, b =  aar[i], bar[i]\n        if __ >= b and (__ - b) % a == 0: t[i] ^= 1\n\nprint(r)", "n=int(input())\nl=list(input())\np=[]\nfor i in range(n):\n\tp.append(list(map(int,input().split())))\nd=[0]*100001\nfor i in range(n):\n\ta,b=p[i]\n\ts=int(l[i])\n\tfor j in range(b):\n\t\tif s:\n\t\t\td[j]+=1\n\tfor j in range(b,100001):\n\t\tif (j-b)%a==0:\n\t\t\ts=1-s\n\t\tif s:\n\t\t\td[j]+=1\n\nprint(max(d))\n", "n = int(input())\non_time = [0] * 50010\n\ns = input()\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    sec = 0\n    if s[i] == \"1\":\n        for j in range(b):\n            on_time[j] += 1\n        sec = b+a\n        while sec <= 50000:\n            for j in range(sec, sec+a):\n                on_time[j] += 1\n            sec += 2*a\n    else:\n        sec = b\n        while sec <= 50000:\n            for j in range(sec, sec+a):\n                on_time[j] += 1\n            sec += 2*a\n\nprint(max(on_time))\n", "n = int(input())\ns = input()\nL = []\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    L.append([a, b])\ns = list(map(int, list(s)))\nans = s.count(1)\nz = s.count(1)\nfor i in range(1, 10 ** 5 + 3):\n    for j in range(n):\n        a, b = L[j]\n        if (i - b) % a == 0 and i >= b:\n            s[j] = 1 - s[j]\n            if s[j] == 0:\n                z -= 1\n            else:\n                z += 1\n    ans = max(ans, z)\nprint(ans)\n", "n=int(input())\ns=[int(i) for i in input()]\na=[]\nb=[]\nfor i in range(n):\n    c,d=map(int,input().split())\n    a+=[c]\n    b+=[d]\nk=sum(s)\nfor j in range(10000):\n    l=0\n    for i in range(n):\n        if j<b[i]:\n            l+=s[i]\n        else:\n            l+=(1+s[i]+int((j-b[i])/a[i]))%2\n    if l>k:\n        k=l\nprint(k)", "n = int(input())\nl = [int(i) for i in input()]\nd = []\nfor i in range(n):\n    q = [int(o) for o in input().split()]\n    d.append(q)\n\non = l.count(1)\nans = on\n\nfor t in range(1, 130):\n    # print(t-1, l, ans)\n    for i in range(n):\n        if t >= d[i][1] and (t-d[i][1]) % d[i][0] == 0:\n            if l[i]:\n                l[i] = 0\n                on -= 1\n            else:\n                l[i] = 1\n                on += 1\n    ans = max(on, ans)\n\nprint(ans)", "import sys, math\ndef main():\n    def input():\n        return sys.stdin.readline()[:-1]\n    n = int(input())\n    s = [int(x) for x in input()]\n    l = []\n    for k in range(n):\n        l.append(list(map(int,input().split())))\n    ans = s.count(1)\n    for t in range(1000):\n        for k in range(n):\n            if t < l[k][1]:\n                pass\n            else:\n                if (t-l[k][1])%l[k][0] == 0:\n                    if s[k] == 1:\n                        s[k] = 0\n                    else:\n                        s[k] = 1\n        ans = max(ans,s.count(1))\n    print(ans)\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = input()\non = []\nfor i in s:\n    if i == '0':\n        on.append(0)\n    else:\n        on.append(1)\na = []\nb = []\nfor i in range(n):\n    c,d = map(int, input().strip().split())\n    a.append(c)\n    b.append(d)\nans = 0\nfor i in range(300):\n    temp = 0\n    for j in range(n):\n        if i >= b[j]:\n            temp += ((i-b[j])//a[j] + 1 + on[j])%2\n        else:\n            temp += on[j]\n    ans = max(temp,ans)\nprint(ans)"]