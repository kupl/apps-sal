["import sys\nfrom collections import defaultdict\nfrom copy import copy\n\nR = lambda t = int: t(input())\nRL = lambda t = int: [t(x) for x in input().split()]\nRLL = lambda n, t = int: [RL(t) for _ in range(n)]\n\ndef solve():\n  n, x = RL()\n  A = RL()\n  A.sort(reverse = True)\n  s = c = m = 0\n  for a in A:\n    s += a\n    c += 1\n    if s >= x * c:\n      m = c    \n  print(m)\n      \nT = R()\nfor _ in range(T):\n  solve()\n", "import sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    n, x = list(map(int, input().split()))\n    l = list(map(int,input().split()))\n    l.sort(reverse = True)\n    best = 0\n    s = 0\n    for i in range(n):\n        s += l[i]\n        if s >= x * (i+1):\n            best = i + 1\n        else:\n            break\n    print(best)\n", "from math import *\n\nfor zz in range(int(input())):\n    n, x = list(map(int, input().split()))\n    a = [int(i) for i in input().split()]\n    a.sort(reverse=True)\n    ans = 0\n    cs = 0\n    for i in range(n):\n        if (a[i] < x):\n            break\n        ans += 1\n        cs += a[i]\n\n    if ans == n:\n        print(n)\n    elif ans == 0:\n        print(0)\n    else:\n        h = ans\n        ps = 0\n        for i in range(ans, n):\n            ps += a[i]\n            if (ps + cs) < (i + 1)*x:\n                break\n            h += 1\n\n        print(h)\n", "from collections import *\nimport sys\ntry: inp = raw_input\nexcept: inp = input\ndef err(s):\n    sys.stderr.write('{}\\n'.format(s))\n\ndef ni():\n    return int(inp())\n\ndef nl():\n    return [int(_) for _ in inp().split()]\n\ndef solve():\n    N, X = nl()\n    A = nl()\n    A.sort(reverse=True)\n    SUM = 0\n    NO = 0\n    for a in A:\n        SUM += a\n        NO += 1\n        if SUM < X*NO:\n            print(NO-1)\n            return\n    print(N)\n\n\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "for tc in range(int(input())):\n    n, w = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    ls.sort(reverse=True)\n    sm = 0\n    i = 0\n    while i != n:\n        sm += ls[i]\n        if sm < w * (i+1):\n            break\n        i += 1\n    print(i)\n", "import bisect, collections, heapq\n \n \n \ndef solution():\n    n, xVal = [int(x) for x in input().strip().split()]\n    a = [int(x) for x in input().strip().split()]\n\n    curSum = sum(a)\n    heapq.heapify(a)\n    while a and curSum/len(a) < xVal:\n        curSum -= heapq.heappop(a)\n    print(len(a))\n\n\ndef main():    \n    T = int(input().strip())\n    for _ in range(T):\n        solution()\n\ndef __starting_point():\n    main()\n__starting_point()", "for ahfiuyh in range(int(input())):\n    n, x = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    a.sort(reverse = True)\n    s = 0\n    cc = 0\n    f = True\n    for i in range(n):\n        cc += 1\n        s += a[i]\n        if s // cc < x:\n            print(i)\n            f= False\n            break\n    if f:print(n)\n    \n        \n", "for _ in range(int(input())):\n    n,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    a.sort()\n    s=0\n    k=0\n    for i in range(n-1,-1,-1):\n        s+=a[i]\n        k=n-i\n        if(s//k<x):\n            k-=1\n            break\n    print(k)"]