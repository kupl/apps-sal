["n, m = list(map(int, input().split()))\ns = input()\nmod = 10 ** 9 + 7\nc = b = 0\nfor x in s:\n    c += (x == '(') * 2 - 1\n    b = min(c, b)\nd = [[1]]\nfor i in range(n - m):\n    nd = d[-1][1:] + [0] * 2\n    for j in range(1, i + 2):\n        nd[j] = (nd[j] + d[-1][j-1]) % mod\n    d.append(nd)\nans = 0\nfor i in range(n - m + 1):\n    l = n - m - i\n    for j in range(-b, min(l - c, i) + 1):\n        ans = (ans + d[i][j] * d[l][j + c]) % mod\nprint(ans)\n", "n, m = list(map(int, input().split()))\ns = input()\nmod = 10 ** 9 + 7\nc, b, ans, d, k = 0, 0, 0, [[1]], n - m\nfor i in s:\n    c += (i == '(') * 2 - 1\n    b = min(c, b)\nfor i in range(n - m):\n    nd = d[-1][1:] + [0] * 2\n    for j in range(1, i + 2):\n        nd[j] = (nd[j] + d[-1][j - 1]) % mod\n    d.append(nd)\nfor i in range(k + 1):\n    for j in range(-b, min(k - i - c, i) + 1):\n        ans = (ans + d[i][j] * d[k - i][j + c]) % mod\nprint(ans)\n", "n, m = map(int, input().split())\ns = input()\nmod = 10 ** 9 + 7\nc, b, ans, d, k = 0, 0, 0, [[1]], n - m\nfor i in s:\n    c += (i == '(') * 2 - 1\n    b = min(c, b)\nfor i in range(n - m):\n    nd = d[-1][1:] + [0] * 2\n    for j in range(1, i + 2):\n        nd[j] = (nd[j] + d[-1][j - 1]) % mod\n    d.append(nd)\nfor i in range(k + 1):\n    for j in range(-b, min(k - i - c, i) + 1):\n        ans = (ans + d[i][j] * d[k - i][j + c]) % mod\nprint(ans)", "def ij(s):\n    i = 0\n    j = 0\n    for c in s:\n        if c == ')':\n            if j > 0:\n                j -= 1\n            else:\n                i += 1\n        else:\n            j += 1\n    return i, j\n\n\nK = 10**9 + 7\n\n\ndef ways(n, s):\n    I, J = ij(s)\n    f = n - len(s) - I - J\n    if f < 0 or f%2:\n        return 0\n    E = f//2\n\n    if E == 0:\n        return 1\n\n    C = [1]\n    for n in range(E+max(I,J)+1):\n        C.append(C[n] * 2 * (2*n + 1) // (n+2))\n\n    W = [[c % K for c in C]]\n    W.append(W[0][1:])\n\n    for i in range(2, E+max(I,J)+1):\n        W.append([(W[i-1][e+1]-W[i-2][e+1]) % K\n                  for e in range(E+max(I,J)+1-i+1)])\n\n    result = sum((W[I+k][e-k] * W[J+k][E-e]) % K\n                 for k in range(E+1)\n                 for e in range(k, E+1))\n\n    return result\n\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n    s = input()\n    print(ways(n, s) % K)\n\n\n__starting_point()", "n, m = list(map(int, input().split()))\ns = input()\nmod = 10 ** 9 + 7\nc, b, ans, d, k = 0, 0, 0, [[1]], n - m\nfor i in s:\n    c += (i == '(') * 2 - 1\n    b = min(c, b)\nfor i in range(n - m):\n    nd = d[-1][1:] + [0] * 2\n    for j in range(1, i + 2):\n        nd[j] = (nd[j] + d[-1][j - 1]) % mod\n    d.append(nd)\nfor i in range(k + 1):\n    for j in range(-b, min(k - i - c, i) + 1):\n        ans = (ans + d[i][j] * d[k - i][j + c]) % mod\nprint(ans)\n", "n, m = list(map(int, input().split()))\ns = input()\nmod = 10 ** 9 + 7\nc, b, ans, d, k = 0, 0, 0, [[1]], n - m\nfor i in s:\n    c += (i == '(') * 2 - 1\n    b = min(c, b)\nfor i in range(n - m):\n    nd = d[-1][1:] + [0] * 2\n    for j in range(1, i + 2):\n        nd[j] = (nd[j] + d[-1][j - 1]) % mod\n    d.append(nd)\nfor i in range(k + 1):\n    for j in range(-b, min(k - i - c, i) + 1):\n        ans = (ans + d[i][j] * d[k - i][j + c]) % mod\nprint(ans)\n"]