["n = int(input())\narr = []\nfor i in range(n):\n    s = input()\n    arr.append('<')\n    arr.append('3')\n    for j in range(len(s)):\n        arr.append(s[j])\narr.append('<')\narr.append('3')\ns = input()\ncur = 0\ni = 0\nwhile cur < len(s) and i < len(arr):\n    if s[cur] == arr[i]:\n        i+=1\n    cur+=1\nif i == len(arr):\n    print('yes')\nelse:\n    print('no')", "n=int(input())\ns1=['<3']\nfor i in range(n):\n    s=input()\n    s1.append(s)\n    s1.append('<3')\ns=input()\nj=0\nk=0\nfor i in s:\n    if i==s1[j][k]:\n        if len(s1[j])==k+1:\n            j+=1\n            if j==len(s1):\n                print('yes')\n                return\n            k=0\n        else:\n            k+=1\nif len(s1)==j and len(s1[j])==k:\n    print('yes')\nelse:\n    print('no')", "n=int(input())\n\nencode1=''.join(['<3'+input() for i in range(n)])+'<3'\n\nencode2=input()\n\ni=0\nj=0\nwhile i<len(encode1) and j<len(encode2):\n    if(encode1[i] == encode2[j]):\n        i+=1\n        j+=1\n    else:\n        t=encode2[j]\n        if not (('z'>=t and t>='a') or ('9'>=t and t>='0') or t=='>' or t=='<'):\n            i=999999\n            j=999999\n        j+=1\n\nif i==len(encode1):\n    print('yes')\nelse:\n    print('no')\n", "def readln(): return tuple(map(int, input().split()))\n\nn, = readln()\nsms = '<3'.join([''] + [input() for _ in range(n)] + [''])\ns = 0\nfor c in list(input()):\n    if sms[s] == c:\n        s += 1\n    if s == len(sms):\n        break\nprint('yes' if s == len(sms) else 'no')\n", "def encoded_correcttly(right, message):\n    for word in right: \n        # Find the heart\n        if '<' in message:\n            current_index = message.find('<') + 1\n            message = message[current_index:]\n        else:\n            return False\n\n        # Find the 3\n        if '3' in message:\n            current_index = message.find('3') + 1\n            message = message[current_index:]\n        else:\n            return False\n\n\n        # Find the word\n        for char in word:\n            if char in message:\n                current_index = message.find(char) + 1\n                message = message[current_index:]\n            else:\n                return False\n\n    # Find the last heart and 3\n    \n    # Find the heart\n    if '<' in message:\n        current_index = message.find('<') + 1\n        message = message[current_index:]\n    else:\n        return False\n\n\n    # Find the 3\n    if '3' in message:\n        current_index = message.find('3') + 1\n        message = message[current_index:]\n    else:\n        return False\n\n\n\n    \n    return True\n\nn = int(input())\nl = []\nfor i in range(n):\n    l.append(input())\nmessage = input()\n    \nif (encoded_correcttly(l, message)):\n    print(\"yes\")\nelse:\n    print(\"no\")\n", "def Find(i,x):\n    for z in range(i,len(S)):\n        if(S[z]==x):\n            return z\n    return False\n\n            \n\n\nn=int(input())\n\nL=[]\n\nfor i in range(n):\n    s=input()\n    L.append(s)\n\nS=input()\nind=0\ncase=True\n\nY=\"<3\"\n\nfor item in L:\n    Y+=item\n    Y+=\"<3\"\nind=0\ncase=True\nfor item in Y:\n    x=Find(ind,item)\n    if(type(x)==bool):\n        case=False\n        break\n    ind=x+1\nif(case):\n    print(\"yes\")\nelse:\n    print(\"no\")\n\n\n\n    \n    \n", "# intent is to get a message with heasts to the fron tand the back.\nn=int(input())\nwords=[]\nfor _ in range(n):\n\twords.append(input())\nactual = input()\nexpected = '<3' + '<3'.join(words) + '<3'\nle=len(expected)\nie=0\nfor c in actual:\n\tif ie<le and c == expected[ie]:\n\t\tie+=1\nprint('yes' if ie==le else 'no')\n\n", "n = int(input())\na = '<3'\nfor i in range(n):\n    a = a + input() + '<3'\n\nb = input()\nlenb = len(b)\nfor i in range(lenb):\n    if not ('a' <= b[i] <= 'z' or '0' <= b[i] <= '9' or b[i] == '<' or b[i] == '>'):\n        print('no')\n        break\nelse:\n    j = 0\n    lena = len(a)\n    for i in range(lena):\n        while j < lenb and a[i] != b[j]:\n            j += 1\n        if j == lenb:\n            print('no')\n            break\n        j += 1\n    else: print('yes')\n\n", "n = int(input())\nref = '<3'\nwords = []\n\nfor i in range(n):\n\twords.append(input())\n\nref = ref + '<3'.join(words) + ref\n\nmessage = input()\ni, j = 0, 0\nwhile i < len(ref) and j < len(message):\n\tif ref[i] == message[j]:\n\t\ti += 1\n\tj += 1\n\nif i == len(ref):\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")", "def f():            \n    n = int(input())\n    t = [input() for i in range(n)]\n    p = input()\n    j = 0\n    for i in range(n):\n        for c in '<3':\n            j = p.find(c, j) + 1\n            if j == 0: return 'no'\n        for c in t[i]:\n            j = p.find(c, j) + 1\n            if j == 0: return 'no'\n    for c in '<3':\n        j = p.find(c, j) + 1\n        if j == 0: return 'no'\n    return 'yes'\nprint(f())", "t = '<3' + '<3'.join(input() for i in range(int(input()))) + '<3'\np, s, j = input(), 'yes', 0\nfor c in t:\n    j = p.find(c, j) + 1\n    if j == 0:\n        s = 'no'\n        break\nprint(s)", "words = int(input())\nmessage = \"<3\"\nfor i in range(words):\n\tmessage+= input()\n\tmessage += \"<3\"\n#print(message)\ngivenMessage = input()\ni = 0\nj = 0\nwhile i<len(givenMessage):\n\tif givenMessage[i] == message[j]:\n\t\tj += 1\n\tif j == len(message):\n\t\tbreak\n\ti += 1\nif j == len(message):\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")", "n = int( input() )\nl = []\nfor i in range(n):\n    l.append( input() )\ns = input()\nc = \"<3\"\nfor i in range(n):\n    c += l[i] +\"<3\"\n\nj=0\ni=0\nlc = len(c)\nls = len(s)\nfound = False\nwhile True:\n    if i==lc:\n        print(\"yes\")\n        break\n    if j==ls:\n        print(\"no\")\n        break\n    \n    if c[i]==s[j]:\n        i += 1\n    j +=1\n\n", "def a():\n    n=int(input())\n    a=[input() for _ in range(n)]\n    s=input()\n    j=s.find('<')\n    i=s.find('3',j)\n    for x in a:\n        j=i+1\n        for y in x:\n            j=s.find(y,j)+1\n            if j==0:\n                print('no')\n                return\n        j=s.find('<',j)\n        i=s.find('3',j)\n        if not 0<=j<i:\n            print('no')\n            return\n    print('yes')\n\na()", "n = int(input())\na = \"<3\".join([\"\"] + [input() for _ in range(n)] + [\"\"])\ns = input()\ni = -1\nfor c in a:\n  i = s.find(c, i + 1)\n  if i == -1:\n    print(\"no\")\n    return\nprint(\"yes\")", "n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\ns = \"<3\".join([\"\"]+s+[\"\"])\ntext = input()\ni = 0\nfor ch in s:\n    while i<len(text) and text[i]!=ch:\n        i += 1\n    if i >= len(text):\n        print(\"no\")\n        return\n    i += 1\nprint(\"yes\")\n", "n=int(input())\ntext=\"\"\n\nfor _ in range(n):\n    temp=input()\n    text=text+\"<3\"\n    text=text+temp\ntext=text+\"<3\"\n\ntocmp=input()\n\nj=0\nfor ch in tocmp:\n    if ch==text[j]:\n        j+=1\n    if j==len(text):\n        break\n\nif j==len(text):\n    print(\"yes\")\nelse:\n    print(\"no\")\n", "#!/usr/bin/env python3\nn = int(input())\nts = [input() for i in range(n)]\nt = '<3' + '<3'.join(ts) + '<3'\ns = input()\ni = 0\nj = 0\nwhile i < len(t) and j < len(s):\n    if t[i] == s[j]:\n        i += 1\n    j += 1\nprint(i == len(t) and 'yes' or 'no')\n", "def main():\n    from sys import stdin\n    l = stdin.read().splitlines()\n    sms = iter(l[-1])\n    l[0] = l[-1] = ''\n    good = set(\"abcdefghijklmnopqrstuvwxyz0123456789<>\")\n    try:\n        for a in \"<3\".join(l):\n            b = next(sms)\n            while b != a:\n                b = next(sms)\n                if b not in good:\n                    print('no')\n                    return\n    except StopIteration:\n        print('no')\n    else:\n        try:\n            while True:\n                b = next(sms)\n                if b not in good:\n                    print('no')\n                    return\n        except StopIteration:\n            print('yes')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    from sys import stdin\n    l = stdin.read().splitlines()\n    sms = iter(l[-1])\n    l[0] = l[-1] = ''\n    try:\n        for a in \"<3\".join(l):\n            b = next(sms)\n            while b != a:\n                b = next(sms)\n    except StopIteration:\n        print('no')\n    else:\n        print('yes')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    from sys import stdin\n    l = stdin.read().splitlines()\n    sms = iter(l[-1])\n    l[0] = l[-1] = ''\n    try:\n        for c in \"<3\".join(l):\n            while next(sms) != c:\n                pass\n    except StopIteration:\n        print('no')\n    else:\n        print('yes')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a='<3'\nfor _ in range(int(input())):a+=input()+'<3'\nb=input()\ni,j,c,d=0,0,len(a),len(b)\nwhile i<c and j<d:\n    if a[i]==b[j]:\n        i+=1\n        j+=1\n    else:j+=1\nprint(['no','yes'][i==c])", "def werify_message(words, message):\n    true_message = ''.join(['<3', '<3'.join(words), '<3'])\n\n    # index in true_message\n    i = 0\n    for litera in message:\n        if len(true_message) != i:\n            if litera == true_message[i]:\n                i += 1\n        else:\n            # \u0414\u043e\u0448\u043b\u0438 \u0434\u043e \u043a\u043e\u043d\u0446\u0430 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0438 \u043d\u0435 \u043d\u0430\u0448\u043b\u0438 \u0432\u0441\u0442\u0430\u0432\u043e\u043a\n            return 'yes'\n                \n    if i == len(true_message):\n        return 'yes'\n    else:\n        return 'no'\n\nn = int(input())\nwords = list()\nfor i in range(n):\n    word = input()\n    words.append(word)\n\nmessage = input()\nprint(werify_message(words, message))", "n = int(input())\ns = '<3' + '<3'.join([input() for i in range(n)]) + '<3'\nres = input()\nk = 0\nfor c in res:\n    if len(s)>k and s[k] == c:\n        k+=1\nif len(s)>k:\n    print(\"no\")\nelse:\n    print(\"yes\")"]