["\na,b,n = list(map(int,input().split()))\n\nprint((a*min(b-1,n)//b))\n", "A, B, N = [int(_) for _ in input().split()]\n\ni = min(N, B-1)\nans = (A * i) // B - A * (i // B)\n\nprint(ans)\n", "import math\n\nA, B, N = list(map(int, input().split()))\n\nif N >= B:\n    x = B-1\nelse:\n    x = N\n\nans = math.floor(A*x/B) - A*math.floor(x/B)\n\nprint(ans)\n", "a, b, n = list(map(int, input().split()))\ndef f(a, b, x):\n    return (a*x)//b - a*(x//b)\nprint((f(a, b, min(b-1, n))))\n", "a,b,n = map(int,input().split())\nx=min(b-1,n)\nprint(((a*x)//b) - a*(x//b))", "a,b,n = map(int, input().split())\n\nx = min(b-1,n)\nprint((a*x//b) - a*(x//b))", "import math\n\na, b, n = map(int, input().split())\n\ndef f(x, a, b):\n    return math.floor(a*x/b) - a * math.floor(x/b)\n\nx = min(n, b-1)\n\nprint(f(x, a, b))", "a,b,n = map(int, input().split())\n\nif b == 1:\n  print (0)\n  return\nelse:\n  x = min(b-1,n)\n  ans = (a*x)//b-a*(x//b)\nprint (ans)", "import math\n\nA, B, N = map(int,input().split())\n\nif N < B:\n    temp1 = math.floor(A*1/B) - A*math.floor(1/B)\n    temp2 = math.floor(A*N/B) - A*math.floor(N/B)\n    ans = max(temp1, temp2)\n\nif N >= B:\n    temp1 = math.floor(A*1/B) - A*math.floor(1/B)\n    temp2 = math.floor(A*(B-1)/B) - A*math.floor((B-1)/B)\n    ans = max(temp1, temp2)\n\nprint(ans)", "import sys\ndef input(): return sys.stdin.readline().rstrip()\n \n \ndef main():\n    a,b,n=map(int, input().split())\n    if b<=n:\n        n=b-1\n    print(((a*n)//b) - (a*(n//b)))\n    \n\n    \n \ndef __starting_point():\n    main()\n__starting_point()", "a,b,n=map(int,input().split())\n\nif b>n: print(a*n//b)\nelse : print(a*(b-1)//b)", "A,B,N=map(int,input().split());f=lambda x:int(A*x/B)-A*int(x/B);print((A>1)*(B>1)*f(min(N,B-1)))", "from math import floor\na, b, n = map(int, input().split())\nx = min(n, b-1)\nprint(floor(a * x / b) - a * floor(x / b))", "A,B,N=map(int,input().split())\ndef f(x):return int(A*x/B)-A*int(x/B)\nprint(f(min(B-1,N)))", "a,b,n = map(int,input().split())\nx = min(b-1,n)\nprint(int(a*x/b)-a*int(x/b))", "A, B, N = map(int,input().split())\nx = min(B-1, N)\nprint((A * x) // B)", "import math\na, b, n = map(int, input().split())\n\nif n >= b:\n    x = b - 1\nelse:\n    x = n\n    \nprint(math.floor(a * x / b))", "A,B,N = map(int,input().split())\nif N >= B-1:\n    i = B-1\n    ans = A*i//B - A*(i//B)\nelse:\n    ans = A*N//B - A*(N//B)\nprint(ans)", "import sys\n#import time\nfrom collections import deque, Counter, defaultdict\n#from fractions import gcd\nimport bisect\nimport heapq\nimport math\nimport itertools\nimport numpy as np\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\ninf = 10**18\nMOD = 1000000007\nri = lambda : int(input())\nrs = lambda : input().strip()\nrl = lambda : list(map(int, input().split()))\nmod = 998244353\n\na,b,n = rl()\nif n/b>=1:\n    print(math.floor(a*(b-1)/b))\nelse:\n    print(math.floor(a*n/b))", "A, B, N = [int(x) for x in input().split()]\n\nQ = A // B\nR = A % B\n\nif R == 0:\n    ans = Q * (B - 1)\nelif B <= N:\n    ans = R - 1 + Q * (B - 1)\nelse:\n    ans = int(A * N / B) - A * int(N / B)\n\nprint(ans)", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    a,b,n = LI()\n    ans = 0\n    def f(a,b,x):\n        ans = (a*x)//b - a*(x//b)\n        return ans\n    if b-1<=n:\n        ans = f(a,b,b-1)\n    else:\n        ans = f(a,b,n)\n    print(ans)\nmain()", "A, B, N = map(int, input().split())\n#\u305f\u3057\u304b\u306b\u5468\u671f\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u3053\u306e\u4f8b\u3067\u3044\u3048\u3070x=1~6 (B-1)\u307e\u3067\u3067\u8a66\u305b\u3070\u3088\u3044\u3002\n#\u307e\u305f\u3001\u305d\u306e\u6570\u306f\u5897\u3048\u3066\u3044\u304f\u306e\u3060\u304b\u3089\u3001\n#N\u304cB-1\u3092\u8d85\u3048\u305f\u5834\u5408\u306fB-1\u306e\u5024\u3001N\u304cB-1\u4ee5\u4e0b\u3067\u3042\u308c\u3070x\u306e\u6700\u5927\u5024\u3067\u8a08\u7b97\u3059\u308c\u3070\u3088\u3044\u3002\n\nmin = N\nif N > B-1:\n  min = B-1\nprint(A*min//B - A*(min//B))", "A, B, N = map(int, input().split())\nx = min(B - 1, N)\nans = A * x // B - A * (x// B)\nprint(ans)", "A, B, N = map(int, input().split())\nans = (A*min(N, B-1))//B\nprint(ans)", "a,b,n = map(int,input().split())\n\nnum = min(b-1,n)\n\nprint(int((a*num)/b)-a*int(num/b))", "'''\nCreated on 2020/08/29\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n\n  A,B,N=list(map(int,pin().split()))\n  x=min(B-1,N)\n  ans=int(A*x/B)-A*int(x/B)\n  print(ans)\n  return\nmain()\n#\u89e3\u8aacAC\n", "A, B, N = map(int, input().split())\n\nfrom math import floor\nif B - 1 <= N:\n    x = B - 1\nelse:\n    x = N\n\nprint(floor(A*x/B) - A*floor(x/B))", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\na, b, n = [int(i) for i in input().split()]\n\ntmp = 0\nres = 0\n\nfor x in range(min(b, n), -1, -1):\n    res = floor(a * x / b) - a * floor(x / b)\n    if res > 0:\n        break\n\nprint(res)\n", "def delete_head_zeros(n):\n\tn = str(n)\n\tl = len(n)\n\tif \".\" in n:\n\t\tl = n.find(\".\")\n\thead_zeros = 0\n\tfor i in range(l - 1):\n\t\tif n[i] == \"0\":\n\t\t\thead_zeros += 1\n\t\telse:\n\t\t\tbreak\n\n\treturn n[head_zeros:]\n\n# compare a, b\n# a, b: int or string\ndef bigint_compare(a, b):\n\ta = delete_head_zeros(a)\n\tb = delete_head_zeros(b)\n\tif len(a) > len(b):\n\t\treturn 1\n\telif len(a) < len(b):\n\t\treturn -1\n\telse:\n\t\tif a > b:\n\t\t\treturn 1\n\t\telif a < b:\n\t\t\treturn -1\n\t\telse:\n\t\t\treturn 0\n\n# calculate a + b\n# a, b: int or string\ndef bigint_plus(a, b):\n\ta = str(a)\n\tb = str(b)\n\n\td = max([len(a), len(b)])\n\ta = '0' * (d - len(a)) + a\n\tb = '0' * (d - len(b)) + b\n\n\tans = \"\"\n\tcarry = 0\n\tfor i in range(d):\n\t\ts = int(a[-i-1]) + int(b[-i-1]) + carry\n\t\tcarry = s // 10\n\t\tans = str(s % 10) + ans\n\telse:\n\t\tif carry:\n\t\t\tans = str(carry) + ans\n\n\treturn ans\n\n# calculate a - b\n# a, b: int or string\ndef bigint_minus(a, b): \n\ta = str(a)\n\tb = str(b)\n\tM = []\n\tm = []\n\tsign = \"\"\n\n\tif len(a) > len(b) or (len(a) == len(b) and a >= b):\n\t\t[M, m] = [a, b]\n\telse:\n\t\t[M, m] = [b, a]\n\t\tsign = \"-\"\n\tm = '0' * (len(M) - len(m)) + m\n\n\tans = \"\"\n\tborrow = 0\n\tfor i in range(len(M)):\n\t\ts = int(M[-i-1]) - int(m[-i-1]) - borrow\n\t\tif s < 0:\n\t\t\tborrow = 1\n\t\t\ts += 10\n\t\telse:\n\t\t\tborrow = 0\n\t\tans = str(s) + ans\n\n\treturn sign + delete_head_zeros(ans)\n\n# calculate a * b\n# a, b: int or string\ndef bigint_multiply(a, b):\n\ta = str(a)\n\tb = str(b)\n\n\tmd = []\n\tfor j in range(len(b)):\n\t\tcarry = 0\n\t\tmj = \"\"\n\t\tfor i in range(len(a)):\n\t\t\tm = int(a[-i-1]) * int(b[-j-1]) + carry\n\t\t\tcarry = m // 10\n\t\t\tmj = str(m % 10) + mj\n\t\telse:\n\t\t\tif carry:\n\t\t\t\tmj = str(carry) + mj\n\t\tmd.append(mj)\n\n\tans = 0\n\tfor k in range(len(md)):\n\t\tans = bigint_plus(md[k] + \"0\" * k, ans)\n\n\treturn ans\n\n\n# calculate a / b to d digits after decimal point\n# a, b, d: int or string\ndef bigint_divide(a, b, d = 0):\n\ta = str(a)\n\tb = str(b)\n\td = int(d)\n\tif d < 0:\n\t\td = 0\n\n\tans = \"\"\n\tr = \"\"\n\tfor i in range(len(a) + d):\n\t\tq = 0\n\t\tif i < len(a):\n\t\t\tr += a[i]\n\t\telif i == len(a):\n\t\t\tans += \".\"\n\t\t\tr += \"0\"\n\t\telse:\n\t\t\tr += \"0\"\n\n\t\tif bigint_compare(r, b) == -1:\n\t\t\tans += str(q)\n\t\telse:\n\t\t\twhile bigint_compare(r, b) >= 0:\n\t\t\t\tr = bigint_minus(r, b)\n\t\t\t\tq += 1\n\t\t\tans += str(q)\n\n\treturn delete_head_zeros(ans)\n\ndef main():\n\tA, B, N = [int(x) for x in input().split(\" \")]\n\tr = min([N, B - 1])\n\tprint(bigint_divide(bigint_multiply(A, r), B))\n\nmain()", "import math\na,b,n=map(int,input().split())\n\nif n<b :\n    ans=math.floor(a*n/b)\n\nelse :\n    ans=math.floor(a*(b-1)/b)\n\nprint(ans)", "import math\nA, B, N = map(int, input().split())\nx = min(N, B - 1)\nprint(math.floor((A * x) / B) - A * math.floor(x / B))", "import math\na,b,n = map(int,input().split())\nif n < b-1:\n    x = n\nelse:\n    x = b-1\nans = math.floor(a*x/b) - a * math.floor(x/b)\nprint(ans)", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\n\n# floor(A x / B) - A * floor(x / B)\n#\n# x = B * x1 + x2  : (x2 < B) \u3068\u3059\u308b\n#\n# = floor(A (B*x1+x2) / B) - A floor((B*x1+x2) / B)\n# = A x1 + floor(A x2 / B) - A x1\n# = floor(A x2 / B)\n\n\ndef solve(A: int, B: int, N: int):\n    if N >= B:\n        x2 = B - 1\n    else:\n        x2 = N\n\n    return (A * x2) // B\n\n\ndef main():\n    tokens = chain(*(line.split() for line in sys.stdin))\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    N = int(next(tokens))  # type: int\n    answer = solve(A, B, N)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a, b, n = map(int, input().split())\n  \nif n >= b:\n    x = (a*(b-1))//b - a * ((b-1)//b)\n \nelse:\n    x = (a*n)//b - a * (n//b)\n \nprint(x)", "A,B,N = map(int,input().split())\nx = min(N,B-1)\nprint( int(A*x/B))", "a, b, n = map(int, input().split())\n\nx = min(b-1, n)\n\nprint((a*x)//b)", "import math\n\na, b, n = map(int, input().split())\n\nans = math.floor(a*min(b-1, n)/b)\n\nprint(ans)", "def main():\n    A, B, N = map(int, input().split())\n    x = min(B - 1, N)\n    ans = A * x // B - A * (x // B)\n    print(ans)\n    \n    \ndef __starting_point():\n    main()\n__starting_point()", "# floor(a/b)=(a-(a%b))/b\n# ax%b=a(x%b)%b\na,b,n=map(int,input().split())\nif(n>=b-1):\n    print(a*(b-1)//b)\nelse:\n    print(a*n//b)", "a, b, n = list(map(int, input().split()))\nprint((int(a * min(n, b-1) / b) - a * int(min(n, b-1) / b)))\n", "import math\nA, B, N = list(map(int, input().split()))\n\nx = min(B - 1, N)\n\nprint((math.floor(A * x / B)))\n", "A, B, N = map(int, input().split())\n\nmin = N\nif N > B-1:\n  min = B-1\nprint(A*min//B - A*(min//B))", "import math\nA,B,N = map(int,input().split())\n\nif B > N:\n  ans = math.floor(A * N / B)\nelse:\n  ans = math.floor(A * (B - 1) / B)\n  \nprint(ans)", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n\n# N = int(input())\n# S = input()\n# n, *a = map(int, open(0))\nA, B, N = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\nx = 0\nif N >= B:\n    x = B - 1\nelse:\n    x = N\n\nprint(int(A*x/B))", "import math\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    A, B, N = map(int, input().split())\n\n    x = min(B-1, N)\n    print(math.floor(A*x/B) - A*math.floor(x/B))\n\nmain()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nA, B, N = na()\nif N >= B - 1:\n    print(math.floor(A * (B - 1) / B) - A * math.floor((B - 1) / B))\nelse:\n    print(math.floor(A * (N) / B) - A * math.floor((N) / B))", "a,b,n = map(int,input().split())\n\nk = max(0,(n - b + 1) // b)\nk = min(n,k * b + b - 1)\n\nprint((a * k) // b - a * (k // b))", "A,B,N = map(int,input().split())\nif N >= B - 1:\n    x = B - 1\nelse:\n    x = N \nprint(A*(x%B)//B)", "import math\na,b,n = map(int,input().split())\ni = b -1 \nif i > n:\n    i = n\nprint(math.floor(a*i/b) - a*math.floor(i/b))", "import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5//1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp //= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n \n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n \n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n \n        if x == y:\n            return\n \n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n \n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n \n    def size(self, x):\n        return -self.parents[self.find(x)]\n \n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n \n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n \n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n \n    def group_count(self):\n        return len(self.roots())\n \n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n \n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\nmod = 10**9 + 7\n\n#--maincode----------------\n\na,b,n = inm()\nans = 0\n\nx = min(b-1,n)\nans = max(ans,(a*x)//b-a*(x//b))\n\nprint(ans)", "import math\ndef __starting_point():\n\n    a,b,n = list(map(int,input().split()))\n\n    ans = 0\n    lp = min(b-1,n)\n    ans = math.floor((a*lp)/b) - a*math.floor(lp/b)\n    print(ans)\n\n__starting_point()", "\ndef main():\n    a, b, n = map(int, input().split(\" \"))\n    x = min(b-1,n)\n    print(a*x//b - a*(x//b))\n\ndef __starting_point():\n    main()\n__starting_point()", "import numpy as np\na,b,n= map(int,input().split())\n\nif b-1 <=n:\n    value = np.floor(a*(b-1)/b) - a * np.floor((b-1)/b)\nelse:\n    value = np.floor(a*n/b) - a * np.floor(n/b)\nprint(int(value))", "A, B, N = list(map(int,input().split()))\nx = min(B-1, N)\nprint(((A * x) // B - A * int(x // B)))\n", "a,b,n=map(int,input().split())\n\nif b>n:\n    x=n\nelse:\n    x=b-1\nprint(a*x//b-a*(x//b))", "def f(x):\n    return int(x)\nfrom decimal import Decimal\n\n\nA, B, N = list(map(int,input().split()))\n\nans=0\nif N>=B:\n    X=[1,B-1,N]\nelse:\n    X=[1,N]\nfor x in X:\n    if x == B:\n        culc = 0\n    elif x < B:\n        culc = f(A*Decimal(x/B))\n    else:\n        culc = f(A*Decimal(x/B)) - A * f(Decimal(x/B))\n        \n    if culc > ans:\n        ans = culc\n    # print(culc)\n\nprint(ans)\n", "A,B,N=map(int,input().split())\n\nfrom decimal import Decimal\nA=Decimal(A)\nB=Decimal(B)\n\ni=min(B-1,N)\nprint(int(A*i/B)-A*(i//B))", "A,B,N = map(int,input().split())\nif B-1 <= N:\n    print((A*(B-1))//B)\nelse:\n    print((A*N)//B)", "A,B,N=list(map(int,input().split()))\nprint(((A*min(N,B-1))//B))\n", "import math\nimport collections\nimport itertools\nimport copy\n\ndef YesNo(Bool):\n    if(Bool):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    return\n\ndef resolve():\n\n    A,B,N=list(map(int,input().split()))\n \n    X=min(N,B-1)\n\n    ans=math.floor(A*X/B)\n\n    print(ans)\n\nresolve()\n", "A,B,N=map(int,input().split())\nif B==1:print(0);return\nif N<=B:\n  print(max((A*(N-1))//B-A*((N-1)//B),(A*N)//B-A*(N//B)))\nelse:print(A-1)", "A,B,N=list(map(int, input().split()))\n\nans = 0\nif N < B:\n  ans = int(A*N/B)-A*int(N/B)\nelif N == B:\n  ans = int(A*(N-1)/B)-A*int((N-1)/B)\nelse:\n  ans = int(A*(B-1)/B)-A*int((B-1)/B)\nprint(ans)\n", "def main():\n    a, b, n = map(int, input().split())\n    x = min(b-1, n)\n    ans = a * x // b - a * (x // b)\n    print(ans)\n    \ndef __starting_point():\n    main()\n__starting_point()", "a, b, n = map(int, input().split())\n\nx = min(b-1, n) * 1.0\n\nprint(int(1.0 * a * x / b) - a * int(1.0 * x / b))", "import math\n\n\ndef f(A, B, x):\n    return math.floor(A * x / B) - A * math.floor(x / B)\n\n\ndef main(A, B, N):\n    if N < B:\n        return f(A, B, N)\n    else:\n        return f(A, B, B - 1)\n\n\nA, B, N = list(map(int, input().split()))\nprint((main(A, B, N)))\n", "#!/usr/bin/env python3\n\n#import\n#import math\n#import numpy as np\nA, B, N = map(int, input().split())\n\nx = min(B - 1, N)\nprint(int(A * x / B) - A * int(x / B))", "from math import *\nA,B,N = map(int,input().split())\nprint(floor(A*min(N,B-1)/B))", "a, b, n = list(map(int, input().split()))\nprint((int((a*(min(n,b-1)%b)-(a*min(n,b-1))%b)/b)))\n", "import math\nimport decimal\n\na,b,n=map(int,input().split())\n\nif b<=n:\n  x=decimal.Decimal(a*(b-1)/b)\n  c=math.floor(x)\n  print(c)\n\nelse:\n  x=decimal.Decimal(a*n/b)\n  c=math.floor(x)\n  print(c)", "from math import floor\n\nA, B, N = map(int, input().split())\nf = lambda x: floor(A*x/B) - A*floor(x/B)\n\nif A==1 or B==1: print(0);return\nif N < B: print(f(N));return\nprint(f(B-1))", "A,B,N = map(int,input().split())\nif N<B:\n    print(int(A*N/B)-A*int(N/B))\nif B<=N:\n    print(int(A*(B-1)/B)-A*int((B-1)/B))", "A,B,N=list(map(int,input().split()))\n\nif N<B:\n    print((int(((A*N)/B)-((A*N)/B)%1-A*(N/B-(N/B)%1))))\nelse:\n    print((int(((A*(B-1))/B)-((A*(B-1))/B)%1-A*((B-1)/B-((B-1)/B)%1))))\n", "\ndef solve(A, B, N):\n    #for x in range(1, N+1): print(f\"{x=:2}  {A*x//B=:3} {A*(x//B)}  {A*x//B-A*(x//B)}\")\n    x = min(B-1, N)\n    a = A*x//B-A*(x//B)\n    return a\n\n#solve(10, 12, 25)\nA, B, N = list(map(int, input().split()))\n#solve(5, 7, 4)\nprint((solve(A, B, N)))\n", "a,b,n = map(int,input().split())\n\nif n < b:\n  ans = (a*n)//b - a*(n//b)\nelse:\n  m = b-1\n  ans = (a*m)//b - a*(m//b)\n\nprint(ans)", "a, b, n = map(int, input().split())\nprint((a * min(n, b - 1)) // b - a * (min(n, b - 1) // b))", "A, B, N = map(int, input().split())\n\nx = min(B-1, N)\nval = A*x//B - A*(x//B)\nprint(val)", "import numpy as np\nA,B,N = map(int,input().split())\nif B <= N:\n    x = B-1\n    print(int(np.floor(A*x/B)))\nelse:\n    print(int(np.floor(A*N/B)))", "def f(a, b, n):\n    if b == 1:\n        print((0))\n    else:\n        Max = 0\n        step = 1 if b // a ==  0 else b // a\n        for x in range(b // a, n + step, step):\n            res = (a * x) // b - a * (x // b)\n            if res > Max:\n                Max = res\n        print(Max)\n\na, b, n = list(map(int, input().split())); f(a, b, n)\n", "A,B,N=map(int,input().split())\nprint(int(A*min(B-1,N)/B))", "a,b,n = list(map(int,input().split()))\n\nif b > n :\n  x = n\n\nelse:\n  x = b-1\n  \nans = int(a*x/b)\nprint(ans)\n", "A, B, N = map(int, input().split())\nif N < B:\n    ans = int(A*N/B)\nelse:\n    ans = int(A*(B-1)/B)\nprint(ans)", "a, b, n = map(int, input().split())\nx = b - 1 if n >= b - 1 else n\nprint((a * x) // b - x // b)", "A,B,N=map(int,input().split())\n#if B==1:print(0);return\nif N>=B:print((A*(B-1))//B)\nelse:\n  print((A*N)//B-A*(N//B))", "A,B,N = list(map(int,input().split()))\nif B <= N:\n    a = int(A*(B-1)/B)\n    b = 0\n    print((max(a,b)))\nelse:\n    a = int(A*N/B)\n    b = 0\n    print((max(a,b)))\n", "import math\n\na, b, n = map(int, input().split())\n\nif n < b:\n    c = math.floor(a * n / b)\n    print(c)\nelse:\n    c = math.floor(a * (b-1)/ b)\n    print(c)", "def abc165d_floor_function():\n    a, b, n = map(int, input().split())\n    i = min(n, b-1)\n    max_val = a*i//b - a*(i//b)\n    # for i in range(1, n+1):\n    #     v = a*i//b - a*(i//b)\n    #     max_val = max(max_val, v)\n    print(max_val)\n\nabc165d_floor_function()", "import math\na, b, n = map(int, input().split())\n\nk = min(n, b-1)\nprint(math.floor(a/b*k))", "a,b,n = map(int, input().split())\n\n\nif n >= b-1:\n  print( (a*(b-1)) // b - a * ((b-1)//b))\n\nelse:\n  print( (a*n) // b - a * (n//b))", "import math\nA,B,N=list(map(int, input().split()))\n\nif B<=N:\n    print((math.floor(A*(B-1)/B)-A*math.floor((B-1)/B)))\nelse:\n    print((math.floor(A*N/B)-A*math.floor(N/B)))\n", "a, b, n = map(int, input().split())\n  \nif n >= b:\n    x = (a*(b-1))//b - a * ((b-1)//b)\n\nelse:\n    x = (a*n)//b - a * (n//b)\n\nprint(x)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\n\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\na,b,n = readInts()\nth = b-1\nif n >= th:\n    print((int(math.floor(a*th/b) - a * math.floor(th/b))))\nelse:\n    print((int(math.floor(a*n/b) - a * math.floor(n/b))))\n", "a, b, n = map(int, input().split())\nprint((a * min(n, (b - 1)) // b))", "[A, B, N] = [int(i) for i in input().split()]\nu = 0\ns = float('inf')\nif B-1 <= N:\n    t = (A * (B-1)) // B - A * ((B-1)//B)\nelse:\n    u += 1\nif 2*B - 1 <= N:\n    s = (A * (2*B-1)) // B - A * ((2*B-1)//B)\nelse:\n    u += 1\n\nprint(min(s, t) if u != 2 else (A*N)//B - A*(N//B))", "from math import floor\na,b,n=map(int,input().split())\nx=min(b-1,n)\nprint(floor(a*x/b)-a*floor(x/b))", "from math import floor\ndef f(x):\n    return floor(a*x/b)-a*floor(x/b)\na, b, n = map(int, input().split())\nprint(f(min(b-1, n)))", "a,b,n=map(int,input().split())\nx=min(b-1,n)\nprint((a*x)//b-a*(x//b))", "def main():\n    a, b, n = map(int, input().split())\n    x = min(b - 1, n)\n    floor1 = int(a * x / b)\n    floor2 = int(x / b)\n    print(floor1 - floor2)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "A,B,N= list(map(int,input().split()))\n\nimport math\n\nif B-1 < N:\n    print(math.floor(A*(B-1)/B) - A*math.floor((B-1)/B) )\nelse:\n    print(math.floor(A*N/B) - A*math.floor(N/B))", "A,B,N=list(map(int,input().split()))\nx=min(B-1,N)\nprint((A*x//B-A*(x//B)))\n", "import math\na,b,n=map(int,input().split())\nd=min(b-1,n)\nprint(math.floor(a*d/b)-a*math.floor(d/b))"]