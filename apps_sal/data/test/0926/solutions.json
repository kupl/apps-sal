["n = int(input())\nmv = 0\nmn = []\ndata = {}\nfor i in range (n):\n  cur = list(sorted(map(int, input().split())))\n  key = (cur[1], cur[2])\n  if key in data:\n    old, k = data[key]\n    res = [old + cur[0], cur[1], cur[2]]\n    m = min(res)\n    if m > mv:\n      mv = m\n      mn = [k, i]\n    if old < cur[0]: \n      data[key] = (cur[0], i)\n  else:      \n    data[key] = (cur[0], i)\n    \n  m = cur[0]       \n  if m > mv:\n    mv = m\n    mn = [i]\n\nprint(len(mn))   \nprint(\" \".join(map(lambda x: str(x+1), mn)))   ", "def main():\n    from collections import defaultdict\n    d, m = defaultdict(list), 0\n    for i in range(1, int(input()) + 1):\n        a, b, c = sorted(map(int, input().split()))\n        d[b, c].append((a, i))\n    for (a, b), l in list(d.items()):\n        if len(l) > 1:\n            l.sort()\n            c, i = l[-1]\n            x, j = l[-2]\n            c += x\n        else:\n            c, i = l[0]\n            j = 0\n        if a > m < c:\n            m, res = a if a < c else c, (i, j)\n    print((\"2\\n%d %d\" % res) if res[1] else (\"1\\n%d\" % res[0]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    d, m = {}, 0\n    for i in range(1, int(input()) + 1):\n        a, b, c = sorted(map(int, input().split()))\n        if (b, c) in d:\n            x, y, z, t = d[b, c]\n            if a > z:\n                d[b, c] = (a, i, x, y) if a > x else (x, y, a, i)\n        else:\n            d[b, c] = (a, i, 0, 0)\n    for (a, b), (x, y, z, t) in list(d.items()):\n        if a > m < x + z:\n            m, res = x + z if a > x + z else a, (y, t)\n    print((\"2\\n%d %d\" % res) if res[1] else (\"1\\n%d\" % res[0]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]