["A,B,C=map(int,input().split())\nmod=998244353\nans=A*(A+1)*B*(B+1)*C*(C+1)//8\nprint(ans%mod)", "A, B, C=list(map(int, input().split()))\n\nD=(A*(A+1)//2)*(B*(B+1)//2)*(C*(C+1)//2)\nprint((D % 998244353))\n", "l = list(map(int,input().split()))\nans = (l[0]*(l[0]+1)*l[1]*(l[1]+1)*l[2]*(l[2]+1)//8) % 998244353\nprint(ans)", "A, B, C = map(int,input().split())\n\ns = (A*(A+1)//2)*(B*(B+1)//2)*(C*(C+1)//2)\n\nprint(s%998244353)", "a, b, c = map(int, input().split())\nmod = 998244353\nprint(a * (a + 1) * b * (b + 1) * c * (c + 1) // 8 % mod)", "r = 1\nfor n in list(map(int, input().split())):\n  s = n*(n + 1)//2 % 998244353\n  r=r*s % 998244353\nprint(int(r))", "mod1,mod2=10**9+7,998244353\nmod=mod2\ndef f(a):return int(a)*(int(a)+1)%mod\na,b,c=map(f,input().split())\nd=a*b*c%mod\nprint(d*pow(8,-1,mod)%mod)", "from functools import reduce\nfrom operator import mul\n\nprint((reduce(mul, (i * (1 + i) // 2 for i in map(int, input().split()))) % 998244353))\n", "def f(a):\n  return a*(a+1)//2\na,b,c = map(int,input().split())\nans = f(a)*f(b)*f(c)\nans = ans%998244353\nprint(ans)", "import math\nfrom collections import Counter\nimport itertools\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\na,b,c = mi()\nans = (a*(a+1)//2) * (b*(b+1)//2) * (c*(c+1)//2)\nprint(ans % 998244353)", "A, B, C = map(int, input().split())\n\nS = ((A*(A+1))//2)*((B*(B+1))//2)*((C*(C+1))//2)\nprint(S%998244353)", "a,b,c=list(map(int,input().split()))\nt=(a+1)*a*(b+1)*b*(c+1)*c//8\nans=t%998244353\nprint(ans)\n", "a, b, c = map(int, input().split())\nmod=998244353\nprint((((a*(a+1)//2)%mod)*((b*(b+1)//2)%mod)*((c*(c+1)//2)%mod))%mod)", "a,b,c=list(map(int,input().split()))\nsum=0\nsum=a*b*c*(a+1)*(b+1)*(c+1)//8\nprint((int(sum%998244353)))\n", "A,B,C=map(int,input().split())\nans=A*(A+1)*B*(B+1)*C*(C+1)//8\nwaru=998244353\nprint(ans%waru)", "mod = 998244353\ndef main():\n  a, b, c = map(int, input().split())\n  a = a*(a+1)//2%mod\n  b = b*(b+1)//2%mod\n  c = c*(c+1)//2%mod\n  print(a*b%mod*c%mod)\n  \ndef __starting_point():\n  main()\n__starting_point()", "import sys\ntry:\n    import os\n    f = open('input.txt', 'r')\n    sys.stdin = f\nexcept FileNotFoundError:\n    None\nfrom math import sqrt, ceil, floor\nfrom collections import deque, Counter, defaultdict\n# defaultdict(int)\ninput=lambda: sys.stdin.readline().strip()\nsys.setrecursionlimit(11451419)\nfrom decimal import ROUND_HALF_UP,Decimal  #\u5909\u63db\u5f8c\u306e\u672b\u5c3e\u6841\u30920\u30840.01\u3067\u6307\u5b9a\n  #Decimal((str(0.5)).quantize(Decimal('0'), rounding=ROUND_HALF_UP))\nfrom functools import lru_cache\nfrom bisect import bisect_left as bileft, bisect_right as biright, insort\nfrom itertools import combinations as com, permutations as per\nfrom fractions import Fraction as frac  #frac(a,b)\u3067\u6b63\u78ba\u306aa/b\n# @lru_cache(maxsize=10**10)\n#######\u3053\u3053\u307e\u3067\u30c6\u30f3\u30d7\u30ec#######\n#\u30bd\u30fc\u30c8\u3001\"a\"+\"b\"\u3001\u518d\u5e30\u306a\u3089Python3\u306e\u65b9\u304c\u3044\u3044\n#######\u3053\u3053\u304b\u3089\u5929\u3077\u3089########\n\ndef f(n):\n    return n*(n+1)//2\n\na,b,c=list(map(int,input().split()))\nmod=998244353\nprint((((f(a)%mod)*(f(b)%mod)*(f(c)%mod))%mod))\n", "a, b, c = map(int, input().split())\n\n# \u30b7\u30b0\u30de\u306e\u5206\u89e3\u516c\u5f0f\u304c\u3042\u308b\u3088\u3046\u3060\u3002\u81ea\u529b\u3067\u89e3\u3051\u306a\u304b\u3063\u305f\u3002\n# https://mathtrain.jp/sigma\nmod = 998244353\nprint((a*(a+1)//2)*(b*(b+1)//2)*(c*(c+1)//2)%mod)", "A,B,C=map(int,input().split())\nprint((A*B*C*(A+1)*(B+1)*(C+1)//8)%998244353)", "A,B,C = map(int,input().split())\nprint(A*(A+1)//2*B*(B+1)//2*C*(C+1)//2%998244353)", "A, B, C = list(map(int, input().split()))\nMOD = 998244353\nans = (A*(1+A)//2)*(B*(1+B)//2)*(C*(1+C)//2)%MOD\nprint(ans)\n", "A=list(map(lambda X:X*(X+1)//2, map(int,input().split())))\nprint(A[0]*A[1]*A[2]%998244353)", "MOD = 998244353\n\na, b, c = map(int, input().split())\nsa = a * (a + 1) // 2 % MOD\nsb = b * (b + 1) // 2 % MOD\nsc = c * (c + 1) // 2 % MOD\nans = sa * sb % MOD * sc % MOD\nif ans < 0: ans += MOD\nprint(ans)", "a,b,c = map(int,input().split())\nmod = 998244353\n\nans = 1\n\nans *= a%mod\nans *= (a+1)%mod\nans *= b%mod\nans *= (b+1)%mod\nans *= c%mod\nans *= (c+1)%mod\nans //= 8\nans %= mod\n\nprint(ans)", "A, B, C = list(map(int, input().split()))\nx = 998244353\n\nans = A * (A + 1) * B * (B + 1) * C * (C + 1) // 8\nans %= x\n\nprint(ans)\n", "while True:\n    try:\n        a,b,c=map(int,input().split())\n        print((1+a)*a//2*(1+b)*b//2*(1+c)*c//2%998244353)\n    except:\n        break", "A, B, C = map(int, input().split())\n\ndef func(x):\n    return x * (x + 1) // 2\nmod = 998244353\nans = pow(func(A) * func(B) * func(C), 1, mod)\nprint(ans)", "a,b,c = map(int, input().split())\n\nans = a*(a+1)//2 * b*(b+1) // 2 * c*(c+1)//2\n\nprint(ans % 998244353)", "A,B,C = map(int,input().split())\nD = A * (A + 1) * B * (B + 1) * C * (C + 1) // 8\nprint(D % 998244353)", "a,b,c = map(int,input().split())\np = 998244353\nprint((a*(a+1)*b*(b+1)*c*(c+1)//8)%p)", "def main():\n    law =  998244353\n    a, b, c = list(map(int, input().split()))\n    print(((sum_mod(a, law) * sum_mod(b, law) * sum_mod(c, law)) % law))\n    return\n\ndef sum_mod(max, law):\n    x = max\n    y = max + 1\n    if x % 2 == 0:\n        x //= 2\n    else:\n        y //= 2\n    x = x % law\n    y = y % law\n    return (x * y) % law\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b,c = list(map(int,input().split()))\nmod =  998244353\nans = ((((a * ( a + 1)) // 2) % mod) * (((b * ( b + 1)) // 2) % mod) * (((c * ( c + 1)) // 2) % mod)) % mod\nprint(ans)\n", "a,b,c = map(int,input().split())\nmod = 998244353\nx = a*(a+1)//2\ny = b*(b+1)//2\nz = c*(c+1)//2\nprint((x*y*z)%mod)", "ans = 0\na,b,c=map(int,input().split())\ndef ss(n):\n    return n*(n+1)//2\na = ss(a)\nb = ss(b)\nc = ss(c)\nans=a*b*c\nprint(ans%998244353)", "a, b, c = map(int, input().split(' '))\n\nP = 998244353\n\ndef f(x):\n    return x * (x + 1) // 2 % P\n\nprint(f(a) * f(b) % P * f(c) % P)", "a,b,c=map(int,input().split())\nprint((a*b*c*(a+1)*(b+1)*(c+1)//8)%998244353)", "a,b,c=map(int,input().split())\nprint(int(((a*b*c*(a+1)*(b+1)*(c+1))//8)%998244353))", "a, b, c = map(int, input().split())\nmod = 998244353\n\nans = a*(a + 1)//2*b*(b + 1)//2*c*(c + 1)//2\n\nprint(ans%mod)", "A,B,C = map(lambda x:int(x), input().split())\nSA = ((A+1)*A//2) % 998244353\nSB = ((B+1)*B//2) % 998244353\nSC = ((C+1)*C//2) % 998244353\n\nprint((SA*SB*SC) % 998244353)", "a = list(map(int,input().split()))\n#\u3053\u308c\u306f\u89e3\u8aacAC\u306b\u5206\u985e\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u89e3\u8aac\u3092\u898b\u3066\u304b\u30892\u30b1\u6708\u307b\u3069\u7d4c\u3064\u306e\u3067\u3001\u9811\u5f35\u308a\u307e\u3059\uff01\nz = 998244353\nprint(a[0]*(a[0]+1)*(a[1]+1)*a[1]*a[2]*(a[2]+1)//8%z)", "A, B, C = map(int,input().split())\nM = 998244353\n\nx = (1 + A) * A // 2\ny = (1 + B) * B // 2\nz = (1 + C) * C // 2\nx %= M\ny %= M\nz %= M\nans = (x * y * z) % M\nprint(ans)", "A, B, C = map(int, input().split())\nprint((A * (A + 1) // 2 * B * (B + 1) // 2 * C * (C + 1) // 2) %  998244353)", "a, b, c = list(map(int, input().split()))\nmod = 998244353\nprint((((a*(a+1)//2 % mod) * (b*(b+1)//2 %\n                             mod) * (c*(c+1)//2 % mod)) % mod))\n", "A, B, C = map(int, input().split())\n\nn = A*(A+1)//2 * B*(B+1)//2 * C*(C+1)//2\nans = n % 998244353\n\nprint(ans)", "a, b, c = map(int, input().split())\nMOD = 998244353\nA, B, C = a*(a+1)//2, b*(b+1)//2, c*(c+1)//2\nprint((A*B*C)%MOD)", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**7)\nimport bisect\nimport heapq\nimport itertools\nimport math\nfrom collections import Counter, defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import Decimal\nfrom math import gcd\nfrom operator import add, itemgetter, mul, xor\ndef cmb(n,r,mod):\n  bunshi=1\n  bunbo=1\n  for i in range(r):\n    bunbo = bunbo*(i+1)%mod\n    bunshi = bunshi*(n-i)%mod\n  return (bunshi*pow(bunbo,mod-2,mod))%mod\nmod = 998244353\ndef I(): return int(input())\ndef LI(): return list(map(int,input().split()))\ndef MI(): return list(map(int,input().split()))\ndef LLI(n): return [list(map(int, input().split())) for _ in range(n)]\n\n#bisect.bisect_left(list,key)\u306flist\u306e\u306a\u304b\u3067key\u672a\u6e80\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3064\u307e\u308alist[i] < x \u3068\u306a\u308b i \u306e\u500b\u6570\n#bisect.bisect_right(list, key)\u306flist\u306e\u306a\u304b\u3067key\u4ee5\u4e0b\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3064\u307e\u308alist[i] <= x \u3068\u306a\u308b i \u306e\u500b\u6570\n#\u3053\u308c\u3092\u5fdc\u7528\u3059\u308b\u3053\u3068\u3067\n#len(list) - bisect.bisect_left(list,key)\u306flist\u306e\u306a\u304b\u3067key\u4ee5\u4e0a\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#len(list) - bisect.bisect_right(list,key)\u306flist\u306e\u306a\u304b\u3067key\u3088\u308a\u5927\u304d\u3044\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\u304d\u306f\u3042\u3089\u304b\u3058\u3081list\u3092\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\u3053\u3068\uff01\n\na,b,c = MI()\nsum_a = a*(a+1)//2\nsum_b = b*(b+1)//2\nsum_c = c*(c+1)//2\nsum_a = sum_a%mod\nsum_b = sum_b%mod\nsum_c = sum_c%mod\nprint((sum_a*sum_b*sum_c%mod))\n    \n\n", "a, b, c = map(int, input().split())\nmod = 998244353\nans = (((1+a)*a//2)%mod)*(((1+b)*b//2)%mod)*(((1+c)*c//2)%mod)%mod\nprint(ans)", "a,b,c = map(int,input().split())\n\nprint(((a*(a+1)//2)%998244353)*((b*(b+1)//2)%998244353)*((c*(c+1)//2)%998244353)%998244353)", "def sum_arith_prog(a, b, c):\n    tmp_list = [a, b, c]\n    for i in tmp_list:\n        yield i * (i + 1) // 2\n\n\ndef main():\n    a, b, c = list(map(int, input().split()))\n    a_sum, b_sum, c_sum = sum_arith_prog(a, b, c)\n    a_b_c_multi = a_sum * b_sum * c_sum\n    ans = a_b_c_multi % 998244353\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b,c=map(int,input().split())\nprint((1+a)*a//2*(1+b)*b//2*(1+c)*c//2%998244353)", "A, B, C = map(int, input().split())\n \nans = A * (A + 1) * B * (B + 1) * C * (C + 1) // 8\nans %= 998244353\n \nprint(ans)", "A,B,C = list(map(int,input().split()))\nmod = 998244353\n\n\nA = (((A+1)*A)//2) % mod\nB = (((B+1)*B)//2) % mod\nC = (((C+1)*C)//2) % mod\nprint(((A*B*C) % mod))\n", "a, b, c = map(int, input().split())\nmod = 998244353\n\ndef f(x):\n    return (x * (x+1) // 2) % mod\n\nprint(f(a)*f(b)*f(c)%mod)", "A, B, C =list(map(int, input().split()))\ntotal_c = (1+C)*C//2\ntotal_b = (1+B)*B//2\ntotal_a = (1+A)*A//2\nans = total_a*total_b*total_c%998244353\nprint(ans)\n", "a,b,c=map(int,input().split())\n\nans=a*(a+1)*b*(b+1)*c*(c+1)//8\n\nprint(int(ans%998244353))", "a,b,c = map(int,input().split())\n\nsumA = a*(a+1)//2\nsumB = b*(b+1)//2\nsumC = c*(c+1)//2\n\nprint(sumA*sumB*sumC%998244353)", "a,b,c = map(int, input().split())\nmod = 998244353\nC = c*(c+1) // 2\nB = b*(b+1) // 2\nA = a*(a+1) // 2\nprint(int(A*B*C % mod))", "A, B, C = map(int, input().split())\n\ndef func(x):\n    return x * (x + 1) // 2\nmod = 998244353\nans = func(A) * func(B) * func(C) % mod\nprint(ans)", "a,b,c=list(map(int,input().split()))\na=(a*(a+1)//2)%998244353\nb=(b*(b+1)//2)%998244353\nc=(c*(c+1)//2)%998244353\nprint((a*b*c%998244353))\n", "a,b,c,=list(map(int,input().split()))\n\nans=a*(a+1)*b*(b+1)*c*(c+1)//8\nans%=998244353\nprint(ans)", "A, B, C = map(int, input().split())\nmod = 998244353\nsuma = ((A+1)*A//2)%mod\nsumb = ((B+1)*B//2)%mod\nsumc = ((C+1)*C//2)%mod\nprint((suma*sumb*sumc)%mod)", "A, B, C = list(map(int, input().split()))\nMOD = 998244353\n\nSa = A * (A + 1) // 2\nSb = B * (B + 1) // 2\nSc = C * (C + 1) // 2\n\nprint((Sa * Sb * Sc % MOD))\n", "a,b,c=map(int, input().split())\np=998244353\n\nA=(a*(a+1)//2)%p\nB=(b*(b+1)//2)%p\nC=(c*(c+1)//2)%p\nprint(A*B*C%p)", "a, b, c = map(int, input().split())\nmod = 998244353 \na = a*(a+1)//2 % mod if a != 1 else 1\nb = b*(b+1)//2 % mod if b != 1 else 1\nc = c*(c+1)//2 % mod if c != 1 else 1\nprint((a*b*c)%mod)", "A,B,C=map(int,input().split())\nA=(A*(A+1)//2)%998244353\nB=(B*(B+1)//2)%998244353\nC=(C*(C+1)//2)%998244353\nX=(A*B)%998244353\nX=(X*C)%998244353\nprint(int(X))", "a,b,c = map(int,input().split())\n\nprint((a*b*c*(a+1)*(b+1)*(c+1)//8) % 998244353)", "#!/usr/bin/env python3\n# from typing import *\n\nMOD = 998244353\n\n\n# def solve(A: int, B: int, C: int) -> int:\ndef solve(A, B, C):\n    tmp = 1\n    tmp *= A*(A+1)//2\n    tmp %= MOD\n    tmp *= B*(B+1)//2\n    tmp %= MOD\n    tmp *= C*(C+1)//2\n    tmp %= MOD\n    return tmp\n\n\n# generated by online-judge-template-generator v4.7.1 (https://github.com/online-judge-tools/template-generator)\ndef main():\n    A, B, C = list(map(int, input().split()))\n    a = solve(A, B, C)\n    print(a)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A, B, C = map(int, input().split())\n\ndef modder(x):\n  ans = int(x % 998244353)\n  return ans\n\nA = modder(A)\nB = modder(B)\nC = modder(C)\nresulta = modder(A * (A + 1))\nresultb = modder(B * (B + 1))\nresultc = modder(C * (C + 1))\n\nresultu = modder(resulta * resultb * resultc)\n\nno = 1\nwhile no:\n  if (resultu % 8) != 0:\n    resultu = resultu + 998244353\n  else:\n    no = 0\n    \nresult = int(resultu / 8)\n\nprint(result)", "#n = int(input())\na, b, c = list(map(int, input().split()))\n#al = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#s=[list(map(int,input().split())) for i in range(n)]\n\nmod = 998244353\n\nta = a*(a+1)//2\ntb = b*(b+1)//2\ntc = c*(c+1)//2\n\nans = (ta*tb) % mod\nans = (ans*tc) % mod\n\nprint(ans)\n", "a,b,c = map(int,input().split())\nmod = 998244353\nans = a*(a+1)*b*(b+1)*c*(c+1)//8 % mod\nprint(ans)", "# Simple Math\n\nABC = list(map(int, input().split()))\n\ntotal = 1\nfor i in ABC:\n    total *= i * (i + 1) // 2\n\nprint((total % 998244353))\n", "MOD = 998244353\na, b, c = map(int, input().split())\nprint((a * (a + 1) // 2 * b * (b + 1) // 2 * c * (c + 1) // 2) % MOD)", "a, b, c = list(map(int, input().split()))\nsu = (((a+1)*a)//2)*(((b+1)*b)//2)*(((c+1)*c)//2)\nans = su%998244353\nprint((int(ans)))\n\n", "m = 998244353\na, b, c = map(int, input().split())\n\na %= m\nb %= m\nc %= m\nans = a*(a+1)//2%m\nans *= b*(b+1)//2%m\nans *= c*(c+1)//2%m\nprint(ans%m)", "A, B, C = map(int, input().split())\nMOD = 998244353\n\nc = C * (C + 1) // 2\nb = B * (B + 1) // 2\na = A * (A + 1) // 2\n\nprint(a * b * c % MOD)", "import math,sys\ndef nsum(n):\n    return (n*(n+1))//2\na = list(map(int,input().split()))\na,b,c=a[0],a[1],a[2]\nnum=nsum(a)*nsum(b)*nsum(c)\nprint((num%998244353))\n", "a, b, c = list(map(int, input().split()))\n\nresult = int(((a*(a+1))//2 * (b*(b+1))//2 * (c*(c+1))//2) % 998244353)\nprint(result)\n\n", "A,B,C = map(int,input().split())\n\nMOD = 998244353\n\na = A*(A+1)//2\nb = B*(B+1)//2\nc = C*(C+1)//2\nans = (a*b)%MOD*c%MOD\n\nprint(ans)", "a,b,c = map(int,input().split())\nmod = 998244353\nans = a*(a+1)*b*(b+1)*c*(c+1)//8 % mod\nprint(ans)", "A,B,C = list(map(int,input().split()))\n\nans = A*(A+1)//2 * B*(B+1)//2 * C*(C+1)//2 % 998244353\nans = int(ans)\n\nprint(ans)", "#region Header\n#!/usr/bin/env python3\n# from typing import *\n\nimport sys\nimport io\nimport math\nimport collections\nimport decimal\nimport itertools\nfrom queue import PriorityQueue\nimport bisect\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\nsys.setrecursionlimit(1000000)\n#endregion\n\n# _INPUT = \"\"\"# paste here...\n# \"\"\"\n# sys.stdin = io.StringIO(_INPUT)\n\nMOD = 998244353\n\n# def solve(A: int, B: int, C: int) -> int:\ndef solve(A, B, C):\n    pass  # TODO: edit here\n\ndef main():\n    A, B, C = list(map(int, input().split()))\n    a = (A*(A+1)//2) * (B*(B+1)//2) * (C*(C+1)//2)\n    print((a % MOD))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import itertools\na, b, c = list(map(int, input().split()))\nans = a*b*c*(a+1)*(b+1)*(c+1)//8\nprint((ans % 998244353))\n", "p = 998244353\nA,B,C = map(int,input().split())\nx = ((A*(A+1))//2)%p\nx = (x*(B*(B+1))//2)%p\nx = (x*(C*(C+1))//2)%p\nprint(x)", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrf = lambda: list(map(float, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod1 = 10**9 + 7\nmod2 = 998244353\nal = 'abcdefghijklmnopqrstuvwxyz'\nAl = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\na, b, c = rm()\nans = 1\nc = (c+1)*c//2\nans *= c\nans %= mod2\nb = (b+1)*b//2\nans *= b\nans %= mod2\na = (a+1)*a//2\nans *= a\nans %= mod2\nprint(ans)\n", "a, b, c = map(int, input().split())\nans = a*(a+1)//2*b*(b+1)//2*c*(c+1)//2\nprint(ans%998244353)", "a,b,c = map(int,input().split())\nans = a*(a+1)//2 * b*(b+1)//2 * c*(c+1)//2\nprint(ans%998244353)", "# coding:UTF-8\nimport sys\nfrom math import factorial\n\nMOD = 998244353\n\nINF = float('inf')\n\nA, B, C = list(map(int, input().split()))     # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u9023\u7d9a\u6570\u5b57\n\naa = (A * (A + 1) // 2) % MOD\nbb = (B * (B + 1) // 2) % MOD\ncc = (C * (C + 1) // 2) % MOD\n\nout = (aa * bb * cc) % MOD\n\nprint((\"{}\".format(out)))\n", "a, b, c = map(int,input().split())\nprint(int((a * (a + 1) * b * (b + 1) * c * (c + 1) // 8)  % 998244353))", "import sys\na,b,c=map(int, input().split())\nn=998244353\nprint(a*(a+1)//2%n*b*(b+1)//2%n*c*(c+1)//2%n)", "import sys\n\nsys.setrecursionlimit(10**7)\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef LS2(): return list(sys.stdin.readline().rstrip())\n\n\nA,B,C = MI()\nmod = 998244353\n\nans = A*(A+1)//2*B*(B+1)//2*C*(C+1)//2\nans %= mod\nprint(ans)\n", "a, b, c = map(int, input().split())\n\ntotal = 1\nfor i in [a, b, c]:\n    total *= i * (i + 1) // 2\n \nprint(total % 998244353)", "A, B, C = map(int, input().split())\nsum = A*(A+1)//2 * B*(B+1)//2 * C*(C+1)//2\nprint(sum % 998244353)", "MOD=998244353\na,b,c=map(int,input().split())\nf=lambda x:x*(x+1)//2%MOD\nx,y,z=f(a),f(b),f(c)\nprint(f(a)*f(b)*f(c)%MOD)", "A,B,C = list(map(int, input().split()))\na_sum = A*(A+1)//2\nb_sum = B*(B+1)//2\nc_sum = C*(C+1)//2\nans = a_sum * b_sum * c_sum % 998244353\nprint(ans)\n", "A, B, C = map(int, input().split())\n\nd = 998244353\n\nsumA = (A * (A + 1)) // 2\nsumB = (B * (B + 1)) // 2\nsumC = (C * (C + 1)) // 2\n\nans = (sumA * sumB * sumC) % d\n\nprint(ans)", "a, b, c = map(int, input().split())\n\nsum = (a * (a+1)) // 2\nsum *= (b * (b+1)) // 2\nsum *= (c * (c+1)) // 2\n\nprint(sum % 998244353)", "num = list(map(int, input().split()))\nmod = 998244353\nans = 1\nfor i in num:\n    ans *= i*(i+1)//2\nprint((ans % mod))\n"]