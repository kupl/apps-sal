["n = int(input())\na = list(map(int, input().split()))\na.sort()\nok = False\nfor i in range(n - 2):\n\tif a[i] + a[i + 1] > a[i + 2]:\n\t\tok = True\nprint((\"NO\", \"YES\")[ok])", "read = lambda: map(int, input().split())\nn = int(input())\na = sorted(read())\nfor i in range(2, n):\n    if a[i - 2] + a[i - 1] > a[i]:\n        print('YES')\n        break\nelse:\n    print('NO')", "n = int(input())\nk = sorted(map(int, input().split()))\nfor i in range(n - 2):\n    if (k[i] + k[i + 1] > k[i + 2]):\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")", "input()\na = list(map(int, input().split()))\na.sort()\n\nfor i in range(len(a) - 2):\n\tif a[i] + a[i+1] > a[i+2]:\n\t\tprint('YES')\n\t\treturn\n\nprint('NO')", "n = int(input())\narr = list(map(int, input().split()))\narr.sort()\nfor i in range(n - 2):\n    a, b, c = arr[i], arr[i + 1], arr[i + 2]\n    if a + b > c:\n        print('YES')\n        return\nprint('NO')\n", "\n\nn = int(input())\nA = sorted([int(x) for x in input().split()])\n\n\nfound = False\nfor i in range(n - 2):\n    if A[i] + A[i + 1] > A[i + 2]:\n        found = True\n\nif found:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "def inp():\n    return map(int, input().split(' '))\n\n\ndef is_tr(a, b, c):\n    if a < b + c:\n        if b < a + c:\n            if c < b + a:\n                return True\n    return False\n\n\nn = int(input())\na = list(inp())\na.sort()\n\nfor i in range(n-2):\n    if is_tr(a[i], a[i+1], a[i+2]):\n        print('YES')\n        return\nprint('NO')", "n = int(input())\nx = list(map(int, input().strip().split(' ')))\n\nx.sort()\ntry:\n    znak = True\n    for i in range(len(x)):\n        for j in range(i + 1, len(x) - 1):\n            if x[i] + x[j] > x[j+1]:\n                print('YES')\n                znak = False\n                1/0\n    if znak:\n        print('NO')\n    \nexcept:\n    pass\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nf = False\nfor i in range(n - 2):\n    if a[i] + a[i + 1] > a[i + 2]:\n        f = True\nif f:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#!/bin/python3\nimport sys\nn = int(input())\na = list(map(int, input().split()))\na = sorted(a)\nfor i in range(0,n-2):\n    if a[i] + a[i + 1] > a[i+2]:\n        print(\"YES\")\n        return\nprint(\"NO\")", "\ndef __starting_point():\n\tn, = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tres = False\n\ta.sort()\n\tfor i in range(1, n-1):\n\t\tif a[i-1] + a[i] > a[i+1]:\n\t\t\tres = True\n\t\t\tbreak\n\tif res:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n__starting_point()", "import math, sys, itertools\n\ndef main():\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tfor i in range(n-2):\n\t\tif a[i]+a[i+1]>a[i+2]:\n\t\t\tprint('YES')\n\t\t\treturn\n\tprint('NO')\n\t\t\t\n\t\t\n\t\t\n\t\t \n\t\t\t\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "# Author: Maharshi Gor\n\ndef read(type=int):\n    return type(input())\n\ndef read_arr(type=int):\n    return [type(token) for token in input().split()]\n\nn = read()\nA =  read_arr()\n\nA.sort()\nfound = False\nfor i in range(len(A)-2):\n    if A[i] + A[i+1] > A[i+2]:\n        found = True\n        break\nif found:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "\ndef isPossible(a):\n    n = len(a)\n    for i in range(2,n):\n        if a[i] < a[i-1] + a[i-2]:\n            return True\n    return False\n\n\n\ndef __starting_point():\n    n = int(input().strip())\n    a = list(map(int, input().strip().split()))\n    a = sorted(a)\n\n    if isPossible(a):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\n    \n\n\n__starting_point()", "n = int(input())\na = [int(el) for el in input().split()]\n\na.sort()\nfor i in range(n - 2):\n\tb, c, d = a[i], a[i+1], a[i+2]\n\tif b + c > d:\n\t\tprint('YES')\n\t\tbreak\nelse:\n\tprint('NO')\n", "n = int(input())\na = [int(s) for s in input().split()]\na.sort()\nflag = False\nfor i in range(len(a) - 2):\n    if a[i] + a[i + 1] > a[i + 2]:\n        flag = True\n        break\n\nif (flag):\n    print('YES')\nelse:\n    print('NO')\n", "n = int(input())\n\nd = [int(i) for i in input().split()]\n\nd.sort()\n\nfor i in range(n - 2):\n    a = d[i]\n    b = d[i + 1]\n    c = d[i + 2]\n    if a + b > c and a + c > b and b + c > a:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")", "#!/usr/bin/env python3\ndef ri():\n    return list(map(int, input().split()))\n\nn = int(input())\n\na = list(ri())\n\na.sort()\n\nfor i in range(len(a)-2):\n    if a[i] + a[i+1] > a[i+2]:\n        print(\"YES\")\n        return\n\nprint(\"NO\")\n", "n=int(input())\na=sorted(map(int,input().split(\" \")))\nf=False\nfor i in range(n-2):\n    if a[i]+a[i+1]>a[i+2]:\n        f=True\nprint(\"YES\" if f else \"NO\")", "n = int(input())\na = sorted(map(int,input().split(' ')))\n\nans = \"NO\"\nfor i in range(n-2):\n    if a[i] + a[i+1] > a[i+2]:\n        ans = \"YES\"\nprint(ans)\n", "n=int(input())\nar=list(map(int,input().split()))\nar.sort()\nfl=False\nfor i in range(1,n-1):\n    if ar[n-i]<ar[n-i-1]+ar[n-i-2]:\n        fl=True\n        break\nif fl:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n=int(input())\narr = list(map(int, input().split()))\narr.sort()\n\ni,j=0,1\nans = 'NO'\nwhile(j<n-1):\n    sm = arr[i]+arr[j]\n    if(sm>arr[j+1]):\n        ans = 'YES'\n        break\n    else:\n        i+=1\n        j+=1\nprint(ans)", "n=int(input())\nl=list(map(int,input().split()))\nl=sorted(l)\nc=0\nfor i in range(n-2) :\n    if l[i]+l[i+1]>l[i+2] :\n        c=1\n        break\nif c==1 :\n    print('YES')\nelse :\n    print('NO')\n", "from collections import deque\n\ndef main():\n    from sys import stdin\n    lines = deque(line.strip() for line in stdin.readlines())\n    # lines will now contain all of the input's lines in a list\n    n = int(lines[0])\n    nums = sorted(int(x) for x in lines[1].split())\n    for i in range(2, n):\n        if nums[i-2] + nums[i-1] > nums[i]:\n            print(\"YES\")\n            return\n    print(\"NO\")\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef solve():\n    n = int(input())\n    A = [int(i) for i in input().split()]\n\n    A.sort()\n\n    for i in range(n - 2):\n        if A[i] + A[i + 1] > A[i + 2]:\n            print('YES')\n            return\n    else:\n        print('NO')\n\n\ndef __starting_point():\n    solve()\n__starting_point()"]