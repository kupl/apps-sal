["f =['!x&x', '!(x|y|z)', '!x&!y&z', '!x&!y', '!x&!z&y', '!x&!z', '!(!y&!z|x|y&z)', '!(x|y&z)', '!x&y&z', '!(!y&z|!z&y|x)', '!x&z', '!(!z&y|x)', '!x&y', '!(!y&z|x)', '!x&(y|z)', '!x', '!y&!z&x', '!y&!z', '!(!x&!z|x&z|y)', '!(x&z|y)', '!(!x&!y|x&y|z)', '!(x&y|z)', '!(!x&!y|x&y|z)|!x&!y&z', '!((x|y)&z|x&y)', '!x&y&z|!y&!z&x', '!x&y&z|!y&!z', '!x&z|!y&!z&x', '!x&z|!y&!z', '!x&y|!y&!z&x', '!x&y|!y&!z', '!x&(y|z)|!y&!z&x', '!x|!y&!z', '!y&x&z', '!(!x&z|!z&x|y)', '!y&z', '!(!z&x|y)', '!x&!z&y|!y&x&z', '!x&!z|!y&x&z', '!x&!z&y|!y&z', '!x&!z|!y&z', '!x&y&z|!y&x&z', '!(!x&z|!z&x|y)|!x&y&z', '!(x&y)&z', '!(!z&x|y)|!x&z', '!x&y|!y&x&z', '!(!y&z|x)|!y&x&z', '!x&y|!y&z', '!x|!y&z', '!y&x', '!(!x&z|y)', '!y&(x|z)', '!y', '!x&!z&y|!y&x', '!x&!z|!y&x', '!x&!z&y|!y&(x|z)', '!x&!z|!y', '!x&y&z|!y&x', '!(!x&z|y)|!x&y&z', '!x&z|!y&x', '!x&z|!y', '!x&y|!y&x', '!(!x&!y&z|x&y)', '!x&(y|z)|!y&x', '!x|!y', '!z&x&y', '!(!x&y|!y&x|z)', '!x&!y&z|!z&x&y', '!x&!y|!z&x&y', '!z&y', '!(!y&x|z)', '!x&!y&z|!z&y', '!x&!y|!z&y', '!x&y&z|!z&x&y', '!(!x&y|!y&x|z)|!x&y&z', '!x&z|!z&x&y', '!(!z&y|x)|!z&x&y', '!(x&z)&y', '!(!y&x|z)|!x&y', '!x&z|!z&y', '!x|!z&y', '!z&x', '!(!x&y|z)', '!x&!y&z|!z&x', '!x&!y|!z&x', '!z&(x|y)', '!z', '!x&!y&z|!z&(x|y)', '!x&!y|!z', '!x&y&z|!z&x', '!(!x&y|z)|!x&y&z', '!x&z|!z&x', '!(!x&!z&y|x&z)', '!x&y|!z&x', '!x&y|!z', '!x&(y|z)|!z&x', '!x|!z', '!y&x&z|!z&x&y', '!(!x&y|!y&x|z)|!y&x&z', '!y&z|!z&x&y', '!(!z&x|y)|!z&x&y', '!y&x&z|!z&y', '!(!y&x|z)|!y&x&z', '!y&z|!z&y', '!(!y&!z&x|y&z)', '!x&y&z|!y&x&z|!z&x&y', '!(!x&y|!y&x|z)|!x&y&z|!y&x&z', '!(x&y)&z|!z&x&y', '!(!z&x|y)|!x&z|!z&x&y', '!(x&z)&y|!y&x&z', '!(!y&x|z)|!x&y|!y&x&z', '!(x&y)&z|!z&y', '!x|!y&z|!z&y', '!(y&z)&x', '!(!x&y|z)|!y&x', '!y&z|!z&x', '!y|!z&x', '!y&x|!z&y', '!y&x|!z', '!y&(x|z)|!z&y', '!y|!z', '!(y&z)&x|!x&y&z', '!(!x&y|z)|!x&y&z|!y&x', '!(x&y)&z|!z&x', '!x&z|!y|!z&x', '!(x&z)&y|!y&x', '!x&y|!y&x|!z', '!x&y|!y&z|!z&x', '!(x&y&z)', 'x&y&z', '!(x|y|z)|x&y&z', '!x&!y&z|x&y&z', '!x&!y|x&y&z', '!x&!z&y|x&y&z', '!x&!z|x&y&z', '!(!y&!z|x|y&z)|x&y&z', '!(x|y&z)|x&y&z', 'y&z', '!(x|y|z)|y&z', '!x&z|y&z', '!x&!y|y&z', '!x&y|y&z', '!x&!z|y&z', '!x&(y|z)|y&z', '!x|y&z', '!y&!z&x|x&y&z', '!y&!z|x&y&z', '!(!x&!z|x&z|y)|x&y&z', '!(x&z|y)|x&y&z', '!(!x&!y|x&y|z)|x&y&z', '!(x&y|z)|x&y&z', '!(!x&!y|x&y|z)|!x&!y&z|x&y&z', '!((x|y)&z|x&y)|x&y&z', '!y&!z&x|y&z', '!y&!z|y&z', '!x&z|!y&!z&x|y&z', '!(x&z|y)|y&z', '!x&y|!y&!z&x|y&z', '!(x&y|z)|y&z', '!x&(y|z)|!y&!z&x|y&z', '!x|!y&!z|y&z', 'x&z', '!(x|y|z)|x&z', '!y&z|x&z', '!x&!y|x&z', '!x&!z&y|x&z', '!x&!z|x&z', '!x&!z&y|!y&z|x&z', '!(x|y&z)|x&z', '(x|y)&z', '!(x|y|z)|(x|y)&z', 'z', '!x&!y|z', '!x&y|x&z', '!(!y&z|x)|x&z', '!x&y|z', '!x|z', '!y&x|x&z', '!y&!z|x&z', '!y&(x|z)|x&z', '!y|x&z', '!x&!z&y|!y&x|x&z', '!(x&y|z)|x&z', '!x&!z&y|!y&(x|z)|x&z', '!x&!z|!y|x&z', '!y&x|y&z', '!(!x&z|y)|y&z', '!y&x|z', '!y|z', '!x&y|!y&x|x&z', '!x&!z|!y&x|y&z', '!x&y|!y&x|z', '!x|!y|z', 'x&y', '!(x|y|z)|x&y', '!x&!y&z|x&y', '!x&!y|x&y', '!z&y|x&y', '!x&!z|x&y', '!x&!y&z|!z&y|x&y', '!(x|y&z)|x&y', '(x|z)&y', '!(x|y|z)|(x|z)&y', '!x&z|x&y', '!(!z&y|x)|x&y', 'y', '!x&!z|y', '!x&z|y', '!x|y', '!z&x|x&y', '!y&!z|x&y', '!x&!y&z|!z&x|x&y', '!(x&z|y)|x&y', '!z&(x|y)|x&y', '!z|x&y', '!x&!y&z|!z&(x|y)|x&y', '!x&!y|!z|x&y', '!z&x|y&z', '!(!x&y|z)|y&z', '!x&z|!z&x|x&y', '!x&!y|!z&x|y&z', '!z&x|y', '!z|y', '!x&z|!z&x|y', '!x|!z|y', '(y|z)&x', '!(x|y|z)|(y|z)&x', '!y&z|x&y', '!(!z&x|y)|x&y', '!z&y|x&z', '!(!y&x|z)|x&z', '!y&z|!z&y|x&y', '!x&!y|!z&y|x&z', '(x|y)&z|x&y', '!(x|y|z)|(x|y)&z|x&y', 'x&y|z', '!x&!y|x&y|z', 'x&z|y', '!x&!z|x&z|y', 'y|z', '!x|y|z', 'x', '!y&!z|x', '!y&z|x', '!y|x', '!z&y|x', '!z|x', '!y&z|!z&y|x', '!y|!z|x', 'x|y&z', '!y&!z|x|y&z', 'x|z', '!y|x|z', 'x|y', '!z|x|y', 'x|y|z', '!x|x']\nn = int(input())\nfor i in range(n):\n    s = input()\n    a = 0\n    for j in range(8):\n        a += int(s[j] == '1') << j\n\n    print(f[a])\n", "val='''!x&x\nx&y&z\n!z&x&y\nx&y\n!y&x&z\nx&z\n!y&x&z|!z&x&y\n(y|z)&x\n!y&!z&x\n!y&!z&x|x&y&z\n!z&x\n!z&x|x&y\n!y&x\n!y&x|x&z\n!(y&z)&x\nx\n!x&y&z\ny&z\n!x&y&z|!z&x&y\n(x|z)&y\n!x&y&z|!y&x&z\n(x|y)&z\n!x&y&z|!y&x&z|!z&x&y\n(x|y)&z|x&y\n!x&y&z|!y&!z&x\n!y&!z&x|y&z\n!x&y&z|!z&x\n!z&x|y&z\n!x&y&z|!y&x\n!y&x|y&z\n!(y&z)&x|!x&y&z\nx|y&z\n!x&!z&y\n!x&!z&y|x&y&z\n!z&y\n!z&y|x&y\n!x&!z&y|!y&x&z\n!x&!z&y|x&z\n!y&x&z|!z&y\n!z&y|x&z\n!(!x&!y|x&y|z)\n!(!x&!y|x&y|z)|x&y&z\n!z&(x|y)\n!z&(x|y)|x&y\n!x&!z&y|!y&x\n!x&!z&y|!y&x|x&z\n!y&x|!z&y\n!z&y|x\n!x&y\n!x&y|y&z\n!(x&z)&y\ny\n!x&y|!y&x&z\n!x&y|x&z\n!(x&z)&y|!y&x&z\nx&z|y\n!x&y|!y&!z&x\n!x&y|!y&!z&x|y&z\n!x&y|!z&x\n!z&x|y\n!x&y|!y&x\n!x&y|!y&x|x&z\n!(x&z)&y|!y&x\nx|y\n!x&!y&z\n!x&!y&z|x&y&z\n!x&!y&z|!z&x&y\n!x&!y&z|x&y\n!y&z\n!y&z|x&z\n!y&z|!z&x&y\n!y&z|x&y\n!(!x&!z|x&z|y)\n!(!x&!z|x&z|y)|x&y&z\n!x&!y&z|!z&x\n!x&!y&z|!z&x|x&y\n!y&(x|z)\n!y&(x|z)|x&z\n!y&z|!z&x\n!y&z|x\n!x&z\n!x&z|y&z\n!x&z|!z&x&y\n!x&z|x&y\n!(x&y)&z\nz\n!(x&y)&z|!z&x&y\nx&y|z\n!x&z|!y&!z&x\n!x&z|!y&!z&x|y&z\n!x&z|!z&x\n!x&z|!z&x|x&y\n!x&z|!y&x\n!y&x|z\n!(x&y)&z|!z&x\nx|z\n!(!y&!z|x|y&z)\n!(!y&!z|x|y&z)|x&y&z\n!x&!y&z|!z&y\n!x&!y&z|!z&y|x&y\n!x&!z&y|!y&z\n!x&!z&y|!y&z|x&z\n!y&z|!z&y\n!y&z|!z&y|x&y\n!(!x&!y|x&y|z)|!x&!y&z\n!(!x&!y|x&y|z)|!x&!y&z|x&y&z\n!x&!y&z|!z&(x|y)\n!x&!y&z|!z&(x|y)|x&y\n!x&!z&y|!y&(x|z)\n!x&!z&y|!y&(x|z)|x&z\n!y&(x|z)|!z&y\n!y&z|!z&y|x\n!x&(y|z)\n!x&(y|z)|y&z\n!x&z|!z&y\n!x&z|y\n!x&y|!y&z\n!x&y|z\n!(x&y)&z|!z&y\ny|z\n!x&(y|z)|!y&!z&x\n!x&(y|z)|!y&!z&x|y&z\n!x&(y|z)|!z&x\n!x&z|!z&x|y\n!x&(y|z)|!y&x\n!x&y|!y&x|z\n!x&y|!y&z|!z&x\nx|y|z\n!(x|y|z)\n!(x|y|z)|x&y&z\n!(!x&y|!y&x|z)\n!(x|y|z)|x&y\n!(!x&z|!z&x|y)\n!(x|y|z)|x&z\n!(!x&y|!y&x|z)|!y&x&z\n!(x|y|z)|(y|z)&x\n!y&!z\n!y&!z|x&y&z\n!(!x&y|z)\n!y&!z|x&y\n!(!x&z|y)\n!y&!z|x&z\n!(!x&y|z)|!y&x\n!y&!z|x\n!(!y&z|!z&y|x)\n!(x|y|z)|y&z\n!(!x&y|!y&x|z)|!x&y&z\n!(x|y|z)|(x|z)&y\n!(!x&z|!z&x|y)|!x&y&z\n!(x|y|z)|(x|y)&z\n!(!x&y|!y&x|z)|!x&y&z|!y&x&z\n!(x|y|z)|(x|y)&z|x&y\n!x&y&z|!y&!z\n!y&!z|y&z\n!(!x&y|z)|!x&y&z\n!(!x&y|z)|y&z\n!(!x&z|y)|!x&y&z\n!(!x&z|y)|y&z\n!(!x&y|z)|!x&y&z|!y&x\n!y&!z|x|y&z\n!x&!z\n!x&!z|x&y&z\n!(!y&x|z)\n!x&!z|x&y\n!x&!z|!y&x&z\n!x&!z|x&z\n!(!y&x|z)|!y&x&z\n!(!y&x|z)|x&z\n!(x&y|z)\n!(x&y|z)|x&y&z\n!z\n!z|x&y\n!x&!z|!y&x\n!(x&y|z)|x&z\n!y&x|!z\n!z|x\n!(!y&z|x)\n!x&!z|y&z\n!(!y&x|z)|!x&y\n!x&!z|y\n!(!y&z|x)|!y&x&z\n!(!y&z|x)|x&z\n!(!y&x|z)|!x&y|!y&x&z\n!x&!z|x&z|y\n!x&y|!y&!z\n!(x&y|z)|y&z\n!x&y|!z\n!z|y\n!(!x&!y&z|x&y)\n!x&!z|!y&x|y&z\n!x&y|!y&x|!z\n!z|x|y\n!x&!y\n!x&!y|x&y&z\n!x&!y|!z&x&y\n!x&!y|x&y\n!(!z&x|y)\n!x&!y|x&z\n!(!z&x|y)|!z&x&y\n!(!z&x|y)|x&y\n!(x&z|y)\n!(x&z|y)|x&y&z\n!x&!y|!z&x\n!(x&z|y)|x&y\n!y\n!y|x&z\n!y|!z&x\n!y|x\n!(!z&y|x)\n!x&!y|y&z\n!(!z&y|x)|!z&x&y\n!(!z&y|x)|x&y\n!(!z&x|y)|!x&z\n!x&!y|z\n!(!z&x|y)|!x&z|!z&x&y\n!x&!y|x&y|z\n!x&z|!y&!z\n!(x&z|y)|y&z\n!(!x&!z&y|x&z)\n!x&!y|!z&x|y&z\n!x&z|!y\n!y|z\n!x&z|!y|!z&x\n!y|x|z\n!(x|y&z)\n!(x|y&z)|x&y&z\n!x&!y|!z&y\n!(x|y&z)|x&y\n!x&!z|!y&z\n!(x|y&z)|x&z\n!(!y&!z&x|y&z)\n!x&!y|!z&y|x&z\n!((x|y)&z|x&y)\n!((x|y)&z|x&y)|x&y&z\n!x&!y|!z\n!x&!y|!z|x&y\n!x&!z|!y\n!x&!z|!y|x&z\n!y|!z\n!y|!z|x\n!x\n!x|y&z\n!x|!z&y\n!x|y\n!x|!y&z\n!x|z\n!x|!y&z|!z&y\n!x|y|z\n!x|!y&!z\n!x|!y&!z|y&z\n!x|!z\n!x|!z|y\n!x|!y\n!x|!y|z\n!(x&y&z)\n!x|x'''.split()\n\nfor _ in range(int(input())):\n\tn=0\n\tfor b in input():\n\t\tn<<=1\n\t\tif b=='1':\n\t\t\tn|=1\n\tprint(val[n])\n\n", "sol = {'01010101': 'z', '00110011': 'y', '00001111': 'x', '10101010': '!z', '11001100': '!y', '11110000': '!x', '01110111': 'y|z', '01011111': 'x|z', '00010001': 'y&z', '00000101': 'x&z', '00111111': 'x|y', '00000011': 'x&y', '11111111': '!x|x', '11011101': '!y|z', '11110101': '!x|z', '00000000': '!x&x', '01000100': '!y&z', '01010000': '!x&z', '10111011': '!z|y', '11110011': '!x|y', '00100010': '!z&y', '00110000': '!x&y', '10101111': '!z|x', '11001111': '!y|x', '00001010': '!z&x', '00001100': '!y&x', '01111111': 'x|y|z', '01010111': 'x&y|z', '00011111': 'x|y&z', '00000001': 'x&y&z', '00110111': 'x&z|y', '11110111': '!x|y|z', '01110101': '!x&y|z', '11011111': '!y|x|z', '01011101': '!y&x|z', '11110001': '!x|y&z', '00010000': '!x&y&z', '11001101': '!y|x&z', '00000100': '!y&x&z', '01110011': '!x&z|y', '10111111': '!z|x|y', '00111011': '!z&x|y', '10101011': '!z|x&y', '00000010': '!z&x&y', '01001111': '!y&z|x', '00101111': '!z&y|x', '10001000': '!y&!z', '10100000': '!x&!z', '11101110': '!y|!z', '11111010': '!x|!z', '11000000': '!x&!y', '11111100': '!x|!y', '00010101': '(x|y)&z', '00010011': '(x|z)&y', '00000111': '(y|z)&x', '11010101': '!x&!y|z', '11111101': '!x|!y|z', '01010001': '!x&z|y&z', '00110001': '!x&y|y&z', '00011011': '!z&x|y&z', '00011101': '!y&x|y&z', '01000101': '!y&z|x&z', '00100111': '!z&y|x&z', '00110101': '!x&y|x&z', '00001101': '!y&x|x&z', '01000000': '!x&!y&z', '01010100': '!(x&y)&z', '10110011': '!x&!z|y', '11111011': '!x|!z|y', '01000111': '!y&z|x&y', '01010011': '!x&z|x&y', '00100011': '!z&y|x&y', '00001011': '!z&x|x&y', '00100000': '!x&!z&y', '00110010': '!(x&z)&y', '10001111': '!y&!z|x', '11101111': '!y|!z|x', '00001000': '!y&!z&x', '00001110': '!(y&z)&x', '10000000': '!(x|y|z)', '01110000': '!x&(y|z)', '10101000': '!(x&y|z)', '01001100': '!y&(x|z)', '11100000': '!(x|y&z)', '11111110': '!(x&y&z)', '11001000': '!(x&z|y)', '00101010': '!z&(x|y)', '10100010': '!(!y&x|z)', '10111010': '!x&y|!z', '10001010': '!(!x&y|z)', '10101110': '!y&x|!z', '10110001': '!x&!z|y&z', '10001101': '!y&!z|x&z', '11101010': '!x&!y|!z', '00011001': '!y&!z&x|y&z', '00100101': '!x&!z&y|x&z', '11000100': '!(!z&x|y)', '11011100': '!x&z|!y', '10001100': '!(!x&z|y)', '11001110': '!y|!z&x', '11010001': '!x&!y|y&z', '10001011': '!y&!z|x&y', '11101100': '!x&!z|!y', '01000011': '!x&!y&z|x&y', '11010000': '!(!z&y|x)', '11110100': '!x|!y&z', '10110000': '!(!y&z|x)', '11110010': '!x|!z&y', '11000101': '!x&!y|x&z', '10100011': '!x&!z|x&y', '11111000': '!x|!y&!z', '00010111': '(x|y)&z|x&y', '01110001': '!x&(y|z)|y&z', '01100110': '!y&z|!z&y', '01110010': '!x&z|!z&y', '01110100': '!x&y|!y&z', '01101111': '!y&z|!z&y|x', '01100111': '!y&z|!z&y|x&y', '00000110': '!y&x&z|!z&x&y', '01100000': '!(!y&!z|x|y&z)', '01110110': '!(x&y)&z|!z&y', '01001101': '!y&(x|z)|x&z', '01001110': '!y&z|!z&x', '01011010': '!x&z|!z&x', '01011100': '!x&z|!y&x', '01111011': '!x&z|!z&x|y', '01011011': '!x&z|!z&x|x&y', '00010010': '!x&y&z|!z&x&y', '01011110': '!(x&y)&z|!z&x', '01001000': '!(!x&!z|x&z|y)', '10011001': '!y&!z|y&z', '10011111': '!y&!z|x|y&z', '10010001': '!(x|y|z)|y&z', '10111001': '!(x&y|z)|y&z', '11011001': '!(x&z|y)|y&z', '10100101': '!x&!z|x&z', '10110111': '!x&!z|x&z|y', '10000101': '!(x|y|z)|x&z', '10101101': '!(x&y|z)|x&z', '11100101': '!(x|y&z)|x&z', '00101011': '!z&(x|y)|x&y', '00101110': '!y&x|!z&y', '00111010': '!x&y|!z&x', '00111100': '!x&y|!y&x', '01111101': '!x&y|!y&x|z', '00111101': '!x&y|!y&x|x&z', '00010100': '!x&y&z|!y&x&z', '00101000': '!(!x&!y|x&y|z)', '00111110': '!(x&z)&y|!y&x', '11000011': '!x&!y|x&y', '11010111': '!x&!y|x&y|z', '10000011': '!(x|y|z)|x&y', '11100011': '!(x|y&z)|x&y', '11001011': '!(x&z|y)|x&y', '10011101': '!(!x&z|y)|y&z', '10001001': '!y&!z|x&y&z', '11011000': '!x&z|!y&!z', '00001001': '!y&!z&x|x&y&z', '10110101': '!(!y&z|x)|x&z', '10100001': '!x&!z|x&y&z', '11100100': '!x&!z|!y&z', '00100001': '!x&!z&y|x&y&z', '01000110': '!y&z|!z&x&y', '01100100': '!x&!z&y|!y&z', '01101110': '!y&(x|z)|!z&y', '01010010': '!x&z|!z&x&y', '01011000': '!x&z|!y&!z&x', '01111010': '!x&(y|z)|!z&x', '10011011': '!(!x&y|z)|y&z', '10111000': '!x&y|!y&!z', '11010011': '!(!z&y|x)|x&y', '11000001': '!x&!y|x&y&z', '11100010': '!x&!y|!z&y', '01000001': '!x&!y&z|x&y&z', '00100110': '!y&x&z|!z&y', '01100010': '!x&!y&z|!z&y', '00110100': '!x&y|!y&x&z', '00111000': '!x&y|!y&!z&x', '01111100': '!x&(y|z)|!y&x', '10100111': '!(!y&x|z)|x&z', '10101100': '!x&!z|!y&x', '11000111': '!(!z&x|y)|x&y', '11001010': '!x&!y|!z&x', '00011010': '!x&y&z|!z&x', '01001010': '!x&!y&z|!z&x', '00011100': '!x&y&z|!y&x', '00101100': '!x&!z&y|!y&x', '01111110': '!x&y|!y&z|!z&x', '01010110': '!(x&y)&z|!z&x&y', '00011110': '!(y&z)&x|!x&y&z', '10000001': '!(x|y|z)|x&y&z', '10101001': '!(x&y|z)|x&y&z', '11100001': '!(x|y&z)|x&y&z', '11001001': '!(x&z|y)|x&y&z', '00110110': '!(x&z)&y|!y&x&z', '11100110': '!(!y&!z&x|y&z)', '10000111': '!(x|y|z)|(y|z)&x', '11100111': '!x&!y|!z&y|x&z', '11110110': '!x|!y&z|!z&y', '01100101': '!x&!z&y|!y&z|x&z', '11011010': '!(!x&!z&y|x&z)', '10010011': '!(x|y|z)|(x|z)&y', '11011011': '!x&!y|!z&x|y&z', '11011110': '!x&z|!y|!z&x', '01011001': '!x&z|!y&!z&x|y&z', '11111001': '!x|!y&!z|y&z', '10011000': '!x&y&z|!y&!z', '00011000': '!x&y&z|!y&!z&x', '10010000': '!(!y&z|!z&y|x)', '11101101': '!x&!z|!y|x&z', '10100100': '!x&!z|!y&x&z', '00100100': '!x&!z&y|!y&x&z', '10000100': '!(!x&z|!z&x|y)', '01100011': '!x&!y&z|!z&y|x&y', '10111100': '!(!x&!y&z|x&y)', '10010101': '!(x|y|z)|(x|y)&z', '10111101': '!x&!z|!y&x|y&z', '10111110': '!x&y|!y&x|!z', '00111001': '!x&y|!y&!z&x|y&z', '11101011': '!x&!y|!z|x&y', '11000010': '!x&!y|!z&x&y', '01000010': '!x&!y&z|!z&x&y', '10000010': '!(!x&y|!y&x|z)', '01001011': '!x&!y&z|!z&x|x&y', '00101101': '!x&!z&y|!y&x|x&z', '10001110': '!(!x&y|z)|!y&x', '11101000': '!((x|y)&z|x&y)', '10110010': '!(!y&x|z)|!x&y', '11010100': '!(!z&x|y)|!x&z', '01101010': '!x&!y&z|!z&(x|y)', '01101100': '!x&!z&y|!y&(x|z)', '01111000': '!x&(y|z)|!y&!z&x', '00010110': '!x&y&z|!y&x&z|!z&x&y', '01100001': '!(!y&!z|x|y&z)|x&y&z', '01001001': '!(!x&!z|x&z|y)|x&y&z', '10010111': '!(x|y|z)|(x|y)&z|x&y', '01111001': '!x&(y|z)|!y&!z&x|y&z', '01101101': '!x&!z&y|!y&(x|z)|x&z', '00101001': '!(!x&!y|x&y|z)|x&y&z', '01101011': '!x&!y&z|!z&(x|y)|x&y', '10011100': '!(!x&z|y)|!x&y&z', '10110100': '!(!y&z|x)|!y&x&z', '11000110': '!(!z&x|y)|!z&x&y', '11010010': '!(!z&y|x)|!z&x&y', '10011010': '!(!x&y|z)|!x&y&z', '10100110': '!(!y&x|z)|!y&x&z', '01101000': '!(!x&!y|x&y|z)|!x&!y&z', '11101001': '!((x|y)&z|x&y)|x&y&z', '11010110': '!(!z&x|y)|!x&z|!z&x&y', '10110110': '!(!y&x|z)|!x&y|!y&x&z', '10000110': '!(!x&y|!y&x|z)|!y&x&z', '10011110': '!(!x&y|z)|!x&y&z|!y&x', '10010010': '!(!x&y|!y&x|z)|!x&y&z', '10010100': '!(!x&z|!z&x|y)|!x&y&z', '01101001': '!(!x&!y|x&y|z)|!x&!y&z|x&y&z', '10010110': '!(!x&y|!y&x|z)|!x&y&z|!y&x&z'}\nn = int(input())\nfor i in range(n):\n\tprint(sol[input()])\n", "answers = [\n'!x&x',\n'x&y&z',\n'!z&x&y',\n'x&y',\n'!y&x&z',\n'x&z',\n'!y&x&z|!z&x&y',\n'(y|z)&x',\n'!y&!z&x',\n'!y&!z&x|x&y&z',\n'!z&x',\n'!z&x|x&y',\n'!y&x',\n'!y&x|x&z',\n'!(y&z)&x',\n'x',\n'!x&y&z',\n'y&z',\n'!x&y&z|!z&x&y',\n'(x|z)&y',\n'!x&y&z|!y&x&z',\n'(x|y)&z',\n'!x&y&z|!y&x&z|!z&x&y',\n'(x|y)&z|x&y',\n'!x&y&z|!y&!z&x',\n'!y&!z&x|y&z',\n'!x&y&z|!z&x',\n'!z&x|y&z',\n'!x&y&z|!y&x',\n'!y&x|y&z',\n'!(y&z)&x|!x&y&z',\n'x|y&z',\n'!x&!z&y',\n'!x&!z&y|x&y&z',\n'!z&y',\n'!z&y|x&y',\n'!x&!z&y|!y&x&z',\n'!x&!z&y|x&z',\n'!y&x&z|!z&y',\n'!z&y|x&z',\n'!(!x&!y|x&y|z)',\n'!(!x&!y|x&y|z)|x&y&z',\n'!z&(x|y)',\n'!z&(x|y)|x&y',\n'!x&!z&y|!y&x',\n'!x&!z&y|!y&x|x&z',\n'!y&x|!z&y',\n'!z&y|x',\n'!x&y',\n'!x&y|y&z',\n'!(x&z)&y',\n'y',\n'!x&y|!y&x&z',\n'!x&y|x&z',\n'!(x&z)&y|!y&x&z',\n'x&z|y',\n'!x&y|!y&!z&x',\n'!x&y|!y&!z&x|y&z',\n'!x&y|!z&x',\n'!z&x|y',\n'!x&y|!y&x',\n'!x&y|!y&x|x&z',\n'!(x&z)&y|!y&x',\n'x|y',\n'!x&!y&z',\n'!x&!y&z|x&y&z',\n'!x&!y&z|!z&x&y',\n'!x&!y&z|x&y',\n'!y&z',\n'!y&z|x&z',\n'!y&z|!z&x&y',\n'!y&z|x&y',\n'!(!x&!z|x&z|y)',\n'!(!x&!z|x&z|y)|x&y&z',\n'!x&!y&z|!z&x',\n'!x&!y&z|!z&x|x&y',\n'!y&(x|z)',\n'!y&(x|z)|x&z',\n'!y&z|!z&x',\n'!y&z|x',\n'!x&z',\n'!x&z|y&z',\n'!x&z|!z&x&y',\n'!x&z|x&y',\n'!(x&y)&z',\n'z',\n'!(x&y)&z|!z&x&y',\n'x&y|z',\n'!x&z|!y&!z&x',\n'!x&z|!y&!z&x|y&z',\n'!x&z|!z&x',\n'!x&z|!z&x|x&y',\n'!x&z|!y&x',\n'!y&x|z',\n'!(x&y)&z|!z&x',\n'x|z',\n'!(!y&!z|x|y&z)',\n'!(!y&!z|x|y&z)|x&y&z',\n'!x&!y&z|!z&y',\n'!x&!y&z|!z&y|x&y',\n'!x&!z&y|!y&z',\n'!x&!z&y|!y&z|x&z',\n'!y&z|!z&y',\n'!y&z|!z&y|x&y',\n'!(!x&!y|x&y|z)|!x&!y&z',\n'!(!x&!y|x&y|z)|!x&!y&z|x&y&z',\n'!x&!y&z|!z&(x|y)',\n'!x&!y&z|!z&(x|y)|x&y',\n'!x&!z&y|!y&(x|z)',\n'!x&!z&y|!y&(x|z)|x&z',\n'!y&(x|z)|!z&y',\n'!y&z|!z&y|x',\n'!x&(y|z)',\n'!x&(y|z)|y&z',\n'!x&z|!z&y',\n'!x&z|y',\n'!x&y|!y&z',\n'!x&y|z',\n'!(x&y)&z|!z&y',\n'y|z',\n'!x&(y|z)|!y&!z&x',\n'!x&(y|z)|!y&!z&x|y&z',\n'!x&(y|z)|!z&x',\n'!x&z|!z&x|y',\n'!x&(y|z)|!y&x',\n'!x&y|!y&x|z',\n'!x&y|!y&z|!z&x',\n'x|y|z',\n'!(x|y|z)',\n'!(x|y|z)|x&y&z',\n'!(!x&y|!y&x|z)',\n'!(x|y|z)|x&y',\n'!(!x&z|!z&x|y)',\n'!(x|y|z)|x&z',\n'!(!x&y|!y&x|z)|!y&x&z',\n'!(x|y|z)|(y|z)&x',\n'!y&!z',\n'!y&!z|x&y&z',\n'!(!x&y|z)',\n'!y&!z|x&y',\n'!(!x&z|y)',\n'!y&!z|x&z',\n'!(!x&y|z)|!y&x',\n'!y&!z|x',\n'!(!y&z|!z&y|x)',\n'!(x|y|z)|y&z',\n'!(!x&y|!y&x|z)|!x&y&z',\n'!(x|y|z)|(x|z)&y',\n'!(!x&z|!z&x|y)|!x&y&z',\n'!(x|y|z)|(x|y)&z',\n'!(!x&y|!y&x|z)|!x&y&z|!y&x&z',\n'!(x|y|z)|(x|y)&z|x&y',\n'!x&y&z|!y&!z',\n'!y&!z|y&z',\n'!(!x&y|z)|!x&y&z',\n'!(!x&y|z)|y&z',\n'!(!x&z|y)|!x&y&z',\n'!(!x&z|y)|y&z',\n'!(!x&y|z)|!x&y&z|!y&x',\n'!y&!z|x|y&z',\n'!x&!z',\n'!x&!z|x&y&z',\n'!(!y&x|z)',\n'!x&!z|x&y',\n'!x&!z|!y&x&z',\n'!x&!z|x&z',\n'!(!y&x|z)|!y&x&z',\n'!(!y&x|z)|x&z',\n'!(x&y|z)',\n'!(x&y|z)|x&y&z',\n'!z',\n'!z|x&y',\n'!x&!z|!y&x',\n'!(x&y|z)|x&z',\n'!y&x|!z',\n'!z|x',\n'!(!y&z|x)',\n'!x&!z|y&z',\n'!(!y&x|z)|!x&y',\n'!x&!z|y',\n'!(!y&z|x)|!y&x&z',\n'!(!y&z|x)|x&z',\n'!(!y&x|z)|!x&y|!y&x&z',\n'!x&!z|x&z|y',\n'!x&y|!y&!z',\n'!(x&y|z)|y&z',\n'!x&y|!z',\n'!z|y',\n'!(!x&!y&z|x&y)',\n'!x&!z|!y&x|y&z',\n'!x&y|!y&x|!z',\n'!z|x|y',\n'!x&!y',\n'!x&!y|x&y&z',\n'!x&!y|!z&x&y',\n'!x&!y|x&y',\n'!(!z&x|y)',\n'!x&!y|x&z',\n'!(!z&x|y)|!z&x&y',\n'!(!z&x|y)|x&y',\n'!(x&z|y)',\n'!(x&z|y)|x&y&z',\n'!x&!y|!z&x',\n'!(x&z|y)|x&y',\n'!y',\n'!y|x&z',\n'!y|!z&x',\n'!y|x',\n'!(!z&y|x)',\n'!x&!y|y&z',\n'!(!z&y|x)|!z&x&y',\n'!(!z&y|x)|x&y',\n'!(!z&x|y)|!x&z',\n'!x&!y|z',\n'!(!z&x|y)|!x&z|!z&x&y',\n'!x&!y|x&y|z',\n'!x&z|!y&!z',\n'!(x&z|y)|y&z',\n'!(!x&!z&y|x&z)',\n'!x&!y|!z&x|y&z',\n'!x&z|!y',\n'!y|z',\n'!x&z|!y|!z&x',\n'!y|x|z',\n'!(x|y&z)',\n'!(x|y&z)|x&y&z',\n'!x&!y|!z&y',\n'!(x|y&z)|x&y',\n'!x&!z|!y&z',\n'!(x|y&z)|x&z',\n'!(!y&!z&x|y&z)',\n'!x&!y|!z&y|x&z',\n'!((x|y)&z|x&y)',\n'!((x|y)&z|x&y)|x&y&z',\n'!x&!y|!z',\n'!x&!y|!z|x&y',\n'!x&!z|!y',\n'!x&!z|!y|x&z',\n'!y|!z',\n'!y|!z|x',\n'!x',\n'!x|y&z',\n'!x|!z&y',\n'!x|y',\n'!x|!y&z',\n'!x|z',\n'!x|!y&z|!z&y',\n'!x|y|z',\n'!x|!y&!z',\n'!x|!y&!z|y&z',\n'!x|!z',\n'!x|!z|y',\n'!x|!y',\n'!x|!y|z',\n'!(x&y&z)',\n'!x|x']\n\nN = int(input())\nfor i in range(N):\n    q = int(input(), 2)\n    print(answers[q])\n", "table = \"!x&x x&y&z !z&x&y x&y !y&x&z x&z !y&x&z|!z&x&y (y|z)&x !y&!z&x !y&!z&x|x&y&z !z&x !z&x|x&y !y&x !y&x|x&z !(y&z)&x x !x&y&z y&z !x&y&z|!z&x&y (x|z)&y !x&y&z|!y&x&z (x|y)&z !x&y&z|!y&x&z|!z&x&y (x|y)&z|x&y !x&y&z|!y&!z&x !y&!z&x|y&z !x&y&z|!z&x !z&x|y&z !x&y&z|!y&x !y&x|y&z !(y&z)&x|!x&y&z x|y&z !x&!z&y !x&!z&y|x&y&z !z&y !z&y|x&y !x&!z&y|!y&x&z !x&!z&y|x&z !y&x&z|!z&y !z&y|x&z !(!x&!y|x&y|z) !(!x&!y|x&y|z)|x&y&z !z&(x|y) !z&(x|y)|x&y !x&!z&y|!y&x !x&!z&y|!y&x|x&z !y&x|!z&y !z&y|x !x&y !x&y|y&z !(x&z)&y y !x&y|!y&x&z !x&y|x&z !(x&z)&y|!y&x&z x&z|y !x&y|!y&!z&x !x&y|!y&!z&x|y&z !x&y|!z&x !z&x|y !x&y|!y&x !x&y|!y&x|x&z !(x&z)&y|!y&x x|y !x&!y&z !x&!y&z|x&y&z !x&!y&z|!z&x&y !x&!y&z|x&y !y&z !y&z|x&z !y&z|!z&x&y !y&z|x&y !(!x&!z|x&z|y) !(!x&!z|x&z|y)|x&y&z !x&!y&z|!z&x !x&!y&z|!z&x|x&y !y&(x|z) !y&(x|z)|x&z !y&z|!z&x !y&z|x !x&z !x&z|y&z !x&z|!z&x&y !x&z|x&y !(x&y)&z z !(x&y)&z|!z&x&y x&y|z !x&z|!y&!z&x !x&z|!y&!z&x|y&z !x&z|!z&x !x&z|!z&x|x&y !x&z|!y&x !y&x|z !(x&y)&z|!z&x x|z !(!y&!z|x|y&z) !(!y&!z|x|y&z)|x&y&z !x&!y&z|!z&y !x&!y&z|!z&y|x&y !x&!z&y|!y&z !x&!z&y|!y&z|x&z !y&z|!z&y !y&z|!z&y|x&y !(!x&!y|x&y|z)|!x&!y&z !(!x&!y|x&y|z)|!x&!y&z|x&y&z !x&!y&z|!z&(x|y) !x&!y&z|!z&(x|y)|x&y !x&!z&y|!y&(x|z) !x&!z&y|!y&(x|z)|x&z !y&(x|z)|!z&y !y&z|!z&y|x !x&(y|z) !x&(y|z)|y&z !x&z|!z&y !x&z|y !x&y|!y&z !x&y|z !(x&y)&z|!z&y y|z !x&(y|z)|!y&!z&x !x&(y|z)|!y&!z&x|y&z !x&(y|z)|!z&x !x&z|!z&x|y !x&(y|z)|!y&x !x&y|!y&x|z !x&y|!y&z|!z&x x|y|z !(x|y|z) !(x|y|z)|x&y&z !(!x&y|!y&x|z) !(x|y|z)|x&y !(!x&z|!z&x|y) !(x|y|z)|x&z !(!x&y|!y&x|z)|!y&x&z !(x|y|z)|(y|z)&x !y&!z !y&!z|x&y&z !(!x&y|z) !y&!z|x&y !(!x&z|y) !y&!z|x&z !(!x&y|z)|!y&x !y&!z|x !(!y&z|!z&y|x) !(x|y|z)|y&z !(!x&y|!y&x|z)|!x&y&z !(x|y|z)|(x|z)&y !(!x&z|!z&x|y)|!x&y&z !(x|y|z)|(x|y)&z !(!x&y|!y&x|z)|!x&y&z|!y&x&z !(x|y|z)|(x|y)&z|x&y !x&y&z|!y&!z !y&!z|y&z !(!x&y|z)|!x&y&z !(!x&y|z)|y&z !(!x&z|y)|!x&y&z !(!x&z|y)|y&z !(!x&y|z)|!x&y&z|!y&x !y&!z|x|y&z !x&!z !x&!z|x&y&z !(!y&x|z) !x&!z|x&y !x&!z|!y&x&z !x&!z|x&z !(!y&x|z)|!y&x&z !(!y&x|z)|x&z !(x&y|z) !(x&y|z)|x&y&z !z !z|x&y !x&!z|!y&x !(x&y|z)|x&z !y&x|!z !z|x !(!y&z|x) !x&!z|y&z !(!y&x|z)|!x&y !x&!z|y !(!y&z|x)|!y&x&z !(!y&z|x)|x&z !(!y&x|z)|!x&y|!y&x&z !x&!z|x&z|y !x&y|!y&!z !(x&y|z)|y&z !x&y|!z !z|y !(!x&!y&z|x&y) !x&!z|!y&x|y&z !x&y|!y&x|!z !z|x|y !x&!y !x&!y|x&y&z !x&!y|!z&x&y !x&!y|x&y !(!z&x|y) !x&!y|x&z !(!z&x|y)|!z&x&y !(!z&x|y)|x&y !(x&z|y) !(x&z|y)|x&y&z !x&!y|!z&x !(x&z|y)|x&y !y !y|x&z !y|!z&x !y|x !(!z&y|x) !x&!y|y&z !(!z&y|x)|!z&x&y !(!z&y|x)|x&y !(!z&x|y)|!x&z !x&!y|z !(!z&x|y)|!x&z|!z&x&y !x&!y|x&y|z !x&z|!y&!z !(x&z|y)|y&z !(!x&!z&y|x&z) !x&!y|!z&x|y&z !x&z|!y !y|z !x&z|!y|!z&x !y|x|z !(x|y&z) !(x|y&z)|x&y&z !x&!y|!z&y !(x|y&z)|x&y !x&!z|!y&z !(x|y&z)|x&z !(!y&!z&x|y&z) !x&!y|!z&y|x&z !((x|y)&z|x&y) !((x|y)&z|x&y)|x&y&z !x&!y|!z !x&!y|!z|x&y !x&!z|!y !x&!z|!y|x&z !y|!z !y|!z|x !x !x|y&z !x|!z&y !x|y !x|!y&z !x|z !x|!y&z|!z&y !x|y|z !x|!y&!z !x|!y&!z|y&z !x|!z !x|!z|y !x|!y !x|!y|z !(x&y&z) !x|x\".split()\nn = int(input())\nfor i in range(n):\n\tprint(table[int(input(), 2)])\nreturn\n\n\nE = set()\nT = set()\nF = set('xyz')\nprv = 0\nx = int('00001111', 2)\ny = int('00110011', 2)\nz = int('01010101', 2)\nfam = 2 ** 8\ntmpl = '#' * 99\nans = [tmpl] * fam\n\ndef cmpr(E):\n    nonlocal ans\n    ans = [tmpl] * fam\n    for e in E:\n        res = eval(e.replace('!', '~')) & (fam - 1)\n        if len(ans[res]) > len(e) or len(ans[res]) == len(e) and ans[res] > e:\n            ans[res] = e\n    return set(ans) - {tmpl}\n\ndef cmpr3(E, T, F):\n    return cmpr(E), cmpr(T), cmpr(F)\n\nwhile prv != (E, T, F):\n    prv = E.copy(), T.copy(), F.copy()\n    for f in prv[2]:\n        F.add('!' + f)\n        T.add(f)\n        for t in prv[1]:\n            T.add(t + '&' + f)\n    for t in prv[1]:\n        E.add(t)\n    for e in prv[0]:\n        if e not in F:\n            F.add('(' + e + ')')\n        for t in prv[1]:\n            E.add(e + '|' + t)\n    E, T, F = cmpr3(E, T, F)\n\ncmpr(E)\n\nfor f in ans:\n    print(f)\n    \nprint(ans.count(tmpl), fam - ans.count(tmpl))", "x = int('00001111', 2)\ny = int('00110011', 2)\nz = int('01010101', 2)\nE = set()\nT = set()\nF = {('x', x), ('y', y), ('z', z)}\nprv = (set(), set(), set())\nfam = 2 ** 8\ntmpl = '#' * 99\nans = [tmpl] * fam\ndef cmpr(E):\n    nonlocal ans\n    ans = [tmpl] * fam\n    for e in E:\n        if len(ans[e[1]]) > len(e[0]) or len(ans[e[1]]) == len(e[0]) and ans[e[1]] > e[0]:\n            ans[e[1]] = e[0]\n    return set((j, i) for i, j in enumerate(ans) if j != tmpl)\nwhile prv != (E, T, F):\n    prv = E.copy(), T.copy(), F.copy()\n    for f in prv[2]:\n        F.add(('!' + f[0], ~f[1] & (fam - 1)))\n        T.add(f)\n        for t in prv[1]:\n            T.add((t[0] + '&' + f[0], t[1] & f[1]))\n    for t in prv[1]:\n        E.add(t)\n    for e in prv[0]:\n        if e not in F:\n            F.add(('(' + e[0] + ')', e[1]))\n        for t in prv[1]:\n            E.add((e[0] + '|' + t[0], e[1] | t[1]))\n    E, T, F = cmpr(E), cmpr(T), cmpr(F)\ncmpr(E)\nn = int(input())\nfor i in range(n):\n\tprint(ans[int(input(), 2)])", "from heapq import *\n\nMSIZE = 1 << 8\ndef GetVal(s):\n    ans = 0\n    for i in range(8):\n        if s[i] == '1':\n            ans = ans + (1 << i)\n    return ans\n\ndef GetNot(s):\n    return MSIZE - 1 - s;\n\nxVal = GetVal('00001111')\nyVal = GetVal('00110011')\nzVal = GetVal('01010101')\n\n# 0 - |\n# 1 - &\n# 2 - !\n# 3 - ()\n\ndef Dijkstra():\n    depth = [['Z' * 585 for i in range(4)] for i in range(MSIZE)]\n    depth[xVal][3] = 'x'\n    depth[yVal][3] = 'y'\n    depth[zVal][3] = 'z'\n\n    pq = []\n    def push(kek):\n        heappush(pq, kek)\n    def pop():\n        return heappop(pq)\n    push([1, xVal, 3])\n    push([1, yVal, 3])\n    push([1, zVal, 3])\n    while len(pq) > 0:\n        l, i, j = pop();\n        if len(depth[i][j]) < l: continue\n        for x in range(MSIZE):\n            for y in range(4):\n                nxt1 = depth[i][j] + '|' + depth[x][y]\n                nxt2 = depth[x][y] + '|' + depth[i][j]\n                nxt = min(nxt1, nxt2)\n                val = (i | x)\n                if len(depth[val][0]) == len(nxt) and depth[val][0] > nxt:\n                    depth[val][0] = nxt\n                    push([len(nxt), val, 0])\n                elif len(depth[val][0]) > len(nxt):\n                    depth[val][0] = nxt\n                    push([len(nxt), val, 0])\n        if j > 0:\n            for x in range(MSIZE):\n                for y in range(1, 4):\n                    nxt1 = depth[i][j] + '&' + depth[x][y]\n                    nxt2 = depth[x][y] + '&' + depth[i][j]\n                    nxt = min(nxt1, nxt2)\n                    val = (i & x)\n                    if len(depth[val][1]) == len(nxt) and depth[val][1] > nxt:\n                        depth[val][1] = nxt\n                        push([len(nxt), val, 1])\n                    elif len(depth[val][1]) > len(nxt):\n                        depth[val][1] = nxt\n                        push([len(nxt), val, 1])\n        if j > 2:\n            val = GetNot(i)\n            nxt = '!' + depth[i][j]\n            if len(depth[val][2]) == len(nxt) and depth[val][2] > nxt:\n                depth[val][2] = nxt\n                push([len(nxt), val, 2])\n            elif len(depth[val][2]) > len(nxt):\n                depth[val][2] = nxt\n                push([len(nxt), val, 2])\n        nxt = '(' + depth[i][j] + ')'\n        val = i\n        if len(depth[val][3]) == len(nxt) and depth[val][3] > nxt:\n            depth[val][3] = nxt\n            push([len(nxt), val, 3])\n        elif len(depth[val][3]) > len(nxt):\n            depth[val][3] = nxt\n            push([len(nxt), val, 3])\n    answer = []\n    for i in range(MSIZE):\n        ans = 'Z' * 585\n        for j in range(4):\n            if len(ans) > len(depth[i][j]):\n                ans = depth[i][j]\n            elif len(ans) == len(depth[i][j]) and ans > depth[i][j]:\n                ans = depth[i][j]\n        answer.append(ans)\n    return answer\nkek = Dijkstra()\n\nq = int(input())\nfor i in range(q):\n    print(kek[GetVal(input())])"]