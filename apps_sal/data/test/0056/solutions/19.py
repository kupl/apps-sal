from copy import deepcopy


def main():
    (n, k) = list(map(int, input().split()))
    arr = [[1], [0.5, 0.5], [0.25, 0.5, 0.25], [0.125, 0.375, 0.375, 0.125], [0.0625, 0.25, 0.375, 0.25, 0.0625], [0.03125, 0.15625, 0.3125, 0.3125, 0.15625, 0.03125], [0.015625, 0.09375, 0.234375, 0.3125, 0.234375, 0.09375, 0.015625], [0.0078125, 0.0546875, 0.1640625, 0.2734375, 0.2734375, 0.1640625, 0.0546875, 0.0078125], [0.00390625, 0.03125, 0.109375, 0.21875, 0.2734375, 0.21875, 0.109375, 0.03125, 0.00390625], [0.001953125, 0.017578125, 0.0703125, 0.1640625, 0.24609375, 0.24609375, 0.1640625, 0.0703125, 0.017578125, 0.001953125]]
    opyramid = [[1], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
    finish_times = [[1], [0, 0], [0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
    opyramid[0][0] = 1
    countarr = [0, 1]
    for x in range(2, 10001):
        opyramid[0][0] += 1
        for y in range(1, len(opyramid)):
            opyramid[y][0] += max(opyramid[y - 1][0] - 1, 0) * 0.5
            opyramid[y - 1][0] -= max(opyramid[y - 1][0] - 1, 0) * 0.5
            for z in range(1, y):
                opyramid[y][z] += max(opyramid[y - 1][z - 1] - 1, 0) + max(opyramid[y - 1][z] - 1, 0) * 0.5
                opyramid[y - 1][z - 1] -= max(opyramid[y - 1][z - 1] - 1, 0)
                opyramid[y - 1][z] -= max(opyramid[y - 1][z] - 1, 0) * 0.5
            opyramid[y][y] += max(opyramid[y - 1][y - 1] - 1, 0)
            opyramid[y - 1][y - 1] -= max(opyramid[y - 1][y - 1] - 1, 0)
        count = 0
        for x in range(n):
            for y in opyramid[x]:
                if y >= 1:
                    count += 1
        countarr.append(count)
    print(countarr[k])


main()
