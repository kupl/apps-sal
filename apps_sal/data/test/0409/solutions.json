["a = []\nb = []\nx = input()\nfor i in range(len(x)-1):\n    if x[i]+x[i+1] == 'AB':\n        a.append(i)\n    elif x[i]+x[i+1] == 'BA':\n        b.append(i)\n\nif a == [] or b == []:\n    print(\"NO\")\n    quit()\n    \nif abs(min(a)-max(b))>1 or abs(max(a)-min(b))>1:\n    print(\"YES\")\n    quit()\nprint(\"NO\")\n", "S = input()\nif S.count(\"AB\") == 0 or S.count(\"BA\") == 0 :\n    print(\"NO\")\nelse :\n    if S[S.index(\"AB\")+2:].count(\"BA\") > 0 or S[S.index(\"BA\")+2:].count(\"AB\") > 0 :\n            print(\"YES\")\n    else :\n        print(\"NO\")\n", "def ok(s,a,b):\n    indexa = s.find(a)\n    if indexa == -1:\n        return False\n    return s.find(b,indexa+2) != -1\n    \ndef __starting_point():\n    s = input().strip()\n    if ok(s , \"AB\",\"BA\") or ok(s,\"BA\",\"AB\"):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n__starting_point()", "import sys\n\n\n\ninput       = []\ninput_index = 0\n\ndef next(type, number = None):\n\tdef next():\n\t\tnonlocal input, input_index\n\t\t\n\t\t\n\t\twhile input_index == len(input):\n\t\t\tif sys.stdin:\n\t\t\t\tinput       = sys.stdin.readline().split()\n\t\t\t\tinput_index = 0\n\t\t\telse:\n\t\t\t\traise Exception()\n\t\t\t\t\n\t\t\t\t\n\t\tinput_index += 1\n\t\t\n\t\treturn input[input_index - 1]\n\t\t\n\t\t\n\tif number is None:\n\t\tresult = type(next())\n\telse:\n\t\tresult = [type(next()) for _ in range(number)]\n\t\t\n\treturn result\n\t\n\t\n\t\ns = next(str)\n\n_abs = []\n_bas = []\n\nfor index in range(1, len(s)):\n\tif s[index - 1:index + 1] == \"AB\":\n\t\t_abs.append(index)\n\telif s[index - 1:index + 1] == \"BA\":\n\t\t_bas.append(index)\n\t\t\nif _abs and _bas and abs(min(_abs) - max(_bas)) >= 2:\n\tprint(\"YES\")\nelif _abs and _bas and abs(max(_abs) - min(_bas)) >= 2:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "inputstr = input()\nstrlen = len(inputstr)\n\nab = []\nba = []\n\nimport re\nfor m in re.finditer('AB', inputstr):\n\tab.append([ m.start(), m.end()-1 ])\nfor m in re.finditer('BA', inputstr):\n\tba.append([ m.start(), m.end()-1 ])\n\nfound = False\nfor i in range(len(ab)):\n\tfor j in range(len(ba)):\n\t\tif ab[i][0] != ba[j][0] and ab[i][0] != ba[j][1] and ab[i][1] != ba[j][0] and ab[i][1] != ba[j][1]:\n\t\t\tfound = True\n\t\t\tbreak\n\tif found:\n\t\tbreak\n\nif found:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "s=input()\nab=0\nba=0\naba=0\nbab=0\nn=len(s)\nif n<4:\n\tprint(\"NO\")\nelse:\n\tfor i in range(n-1):\n\t\tif s[i:i+2]==\"AB\":ab+=1\n\tfor i in range(n-1):\n\t\tif s[i:i+2]==\"BA\":ba+=1\n\tfor i in range(n-2):\n\t\tif s[i:i+3]==\"ABA\":aba+=1\n\tfor i in range(n-2):\n\t\tif s[i:i+3]==\"BAB\":bab+=1\n\tif ab==0 or ba==0:\n\t\tprint(\"NO\")\n\telif ab==1 and ba==1:\n\t\tif bab==1 or aba==1:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\telif ab==1 and ba==2:\n\t\tif bab==1 and aba==1:print(\"NO\")\n\t\telse:print(\"YES\")\n\telif ab==2 and ba==1:\n\t\tif bab==1 and aba==1:print(\"NO\")\n\t\telse:print(\"YES\")\n\telse:print(\"YES\")", "def main():\n    import sys\n    \n    s = sys.stdin.read().strip()\n    n = len(s)\n    \n    result = False\n    flag = False\n    i = 0\n    while i < n - 1:\n        if not flag and s[i: i + 2] == \"AB\":\n            flag = True\n            i += 2\n        elif flag and s[i: i + 2] == \"BA\":\n            result = True\n            break\n        else:   \n            i += 1\n    flag = False\n    i = 0\n    while i < n - 1:\n        if not flag and s[i: i + 2] == \"BA\":\n            flag = True\n            i += 2\n        elif flag and s[i: i + 2] == \"AB\":\n            result = True\n            break\n        else:   \n            i += 1\n\n    print(\"YES\" if result else \"NO\")\n\nmain()\n", "def __starting_point():\n    s = input()\n\n    a = None\n    b = None\n\n    for i in range(len(s) - 1):\n        if s[i] == 'A' and s[i + 1] == 'B':\n            if a is None:\n                a = i\n\n            if b is not None and abs(i - b) > 1:\n                print('YES')\n                return\n\n        if s[i] == 'B' and s[i + 1] == 'A':\n            if b is None:\n                b = i\n\n            if a is not None and abs(a - i) > 1:\n                print('YES')\n                return\n\n\n    print('NO')\n\n\n__starting_point()", "def ham(a,b):\n    if a[1]==b[0] or b[1]==a[0]:\n        return 0\n    return 1\na = input()\nab = []\nba = []\nfor i in range(len(a)-1):\n    if a[i:i+2]==\"AB\":\n        ab.append([i,i+1])\n    if a[i:i+2]==\"BA\":\n        ba.append([i,i+1])\ns = 0\nfor i in range(len(ab)):\n    for l in range(len(ba)):\n        if ham(ab[i],ba[l]):\n            print(\"YES\")\n            s = 1\n            break\n    if s==1:\n        break\nif s==0:\n    print(\"NO\")\n    \n", "s = input()\n\nabfound = bafound = -1\nfor i in range(len(s) - 1):\n    if abfound == -1 and s[i] == 'A' and s[i + 1] == 'B':\n        abfound = i\n    elif bafound == -1 and s[i] == 'B' and s[i + 1] == 'A':\n        bafound = i\n    if abfound != -1 and bafound != -1:\n        break\n\nif abfound == -1 or bafound == -1:\n    print(\"NO\")\n    return\n\nif abfound == bafound + 1 or bafound == abfound + 1:\n    for i in range(max(bafound + 2, abfound + 2), len(s) - 1):\n        if s[i] == 'A' and s[i + 1] == 'B':\n            newabfound = True\n            print(\"YES\")\n            return\n        elif s[i] == 'B' and s[i + 1] == 'A':\n            newbafound = True\n            print(\"YES\")\n            return\nelse:\n    print(\"YES\")\n    return\n\nprint(\"NO\")\n", "s = input()\ns1 = s.find(\"AB\")\nwhile s1 != -1:\n    if (s[:s1].find(\"BA\") != -1) or (s[s1+2:].find(\"BA\") != -1):\n        print(\"YES\")\n        return\n    s1 = s.find(\"AB\", s1+1)\nprint(\"NO\")\n", "s = input()\n\nyes = False\ntry:\n    ab = s.index('AB')\n    ba = s.rindex('BA')\n    if ba-ab > 1:\n        yes = True\n\n    ab = s.index('BA')\n    ba = s.rindex('AB')\n    if ba-ab > 1:\n        yes = True\nexcept ValueError:\n    pass\n\nprint('YES' if yes else 'NO')", "inp = input().strip()\n\nif len(inp) < 4:\n\tprint(\"NO\")\nelse:\n\tif inp.count(\"AB\") == 1 and inp.count(\"BA\") == 1:\n\t\tif inp.count(\"ABA\") + inp.count(\"BAB\") >= 1:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")\n\telif inp.count(\"AB\") < 1 or inp.count(\"BA\") < 1:\n\t\tprint(\"NO\")\n\telif inp.count(\"AB\") + inp.count(\"BA\") == 3 and inp.count(\"ABAB\") + inp.count(\"BABA\") >= 1:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")", "import copy\nsi = list(input())\ns = copy.deepcopy(si)\n\nc1 = 0\ni = 0\nwhile i < (len(s)-1):\n    if s[i:i+2] == ['A', 'B']:\n        s[i] = '.'\n        s[i+1] = '.'\n        c1 = 1\n        break\n    i += 1\nc2 = 0\ni = 0\nwhile i < (len(s)-1):\n    if s[i:i+2] == ['B', 'A']:\n        s[i] = '.'\n        s[i+1] = '.'\n        c2 = 1\n        break\n    i += 1\n\nif c1 and c2:\n    c3 = 1\nelse:\n    c3 = 0\n\ns = copy.deepcopy(si)\nc2 = 0\ni = 0\nwhile i < (len(s)-1):\n    if s[i:i+2] == ['B', 'A']:\n        s[i] = '.'\n        s[i+1] = '.'\n        c2 = 1\n        break\n    i += 1\nc1 = 0\ni = 0\nwhile i < (len(s)-1):\n    if s[i:i+2] == ['A', 'B']:\n        s[i] = '.'\n        s[i+1] = '.'\n        c1 = 1\n        break\n    i += 1\n\nif (c1 and c2) or c3:\n    print('YES')\nelse:\n    print('NO')", "s = input()\npos = -1\npos1 = -1\nfor i in range(len(s) - 1):\n    if s[i] == 'A' and s[i + 1] == 'B':\n        pos = i\n        break\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == 'A' and s[i - 1] == 'B':\n        pos1 = i - 1\n        break\npos2 = -1\npos3 = -1\nfor i in range(len(s) - 1):\n    if s[i] == 'B' and s[i + 1] == 'A':\n        pos2 = i\n        break\nfor i in range(len(s) - 1, 0, -1):\n    if s[i] == 'B' and s[i - 1] == 'A':\n        pos3 = i - 1\n        break\nif pos == -1 or pos1 == -1:\n    flag = False\nelse:\n    if abs(pos - pos1) > 1:\n        flag = True\n    else:\n        flag = False\nif flag:\n    print('YES')\nelse:\n    if pos2 == -1 or pos3 == -1:\n        print('NO')\n    else:\n        if abs(pos2 - pos3) > 1:\n            print('YES')\n        else:\n            print('NO')   ", "s = input()\n\ni1 = s.find('AB')\ni2 = s.find('BA')\nfound = False\nif i1 >= 0:\n    i3 = s.find('BA', i1+2)\n    if i3 != -1:\n        print(\"YES\")\n        found = True\nif not found and i2 >= 0:\n    i3 = s.find('AB', i2 + 2)\n    if i3 != -1:\n        print(\"YES\")\n        found = True\nif not found:\n    print(\"NO\")", "def is_ab(prev, current):\n    return prev == 'A' and current == 'B'\n\n\ndef is_ba(prev, current):\n    return prev == 'B' and current == 'A'\n\n\ndef is_matched(prev, current):\n    return is_ab(prev, current) or is_ba(prev, current)\n\n\ndef main():\n    s = input()\n    i = 0\n    total_ab = 0\n    total_ba = 0\n    total_confused = 0\n\n    current_len = 0\n\n    prev = ''\n\n    while i < len(s):\n        current = s[i]\n        if current_len != 0:\n            if is_matched(prev, current):\n                current_len += 1\n            else:\n                if current_len == 2:\n                    if is_ab(s[i - 2], s[i - 1]):\n                        total_ab += 1\n                    elif is_ba(s[i - 2], s[i - 1]):\n                        total_ba += 1\n                elif current_len == 3:\n                    total_confused += 1\n                elif current_len == 4:\n                    total_confused += 1\n                elif current_len > 4:\n                    total_confused += 2\n                if current == 'A' or current == 'B':\n                    current_len = 1\n                else:\n                    current_len = 0\n        elif current == 'A' or current == 'B':\n            current_len = 1\n\n        prev = current\n        i += 1\n\n    if len(s) >= 2 and current_len >= 2:\n        current = s[len(s) - 1]\n        prev = s[len(s) - 2]\n        if current_len == 2:\n            if is_ab(prev, current):\n                total_ab += 1\n            elif is_ba(prev, current):\n                total_ba += 1\n        elif current_len == 3:\n            total_confused += 1\n        elif current_len == 4:\n            total_confused += 1\n        elif current_len > 4:\n            total_confused += 2\n\n    # print(total_ba, total_confused, total_ab)\n    if total_ba >= 1 and total_ab >= 1:\n        print('YES')\n    elif total_confused >= 2:\n        print('YES')\n    elif (total_ab >= 1 or total_ba >= 1) and total_confused >= 1:\n        print('YES')\n    else:\n        print('NO')\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\nimport re\nS = input()\n\nif S.find(\"AB\") >= 0 and \"BA\" in S[S.find(\"AB\") + 2:]:\n    print(\"YES\")\nelif S.find(\"BA\") >= 0 and \"AB\" in S[S.find(\"BA\") + 2:]:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "s = input()\nlenS = len(s)\ni = 0\nt = s[:]\nif 'AB' in t:\n    i = t.index('AB')\n    t = t[:i] + 'CC' + t[i+2:]\n    if 'BA' in t:\n        print('YES')\n        return\nt = s[:]\nif 'BA' in t:\n    i = t.index('BA')\n    t = t[:i] + 'CC' + t[i+2:]\n    if 'AB' in t:\n        print('YES')\n        return\nprint('NO')\n", "s = input()\ni = 0\nab = False\nba = False\no = 0\nwhile i < len(s) - 1:\n    if i < len(s) - 2 and (not o and not ab and not ba) and (s[i:i + 2] == 'AB' and s[i + 1:i + 3] == 'BA') or (s[i:i + 2] == 'BA' and (s[i + 1:i + 3] == 'AB')):\n        o += 1\n        i += 2\n    elif s[i:i + 2] == 'AB' and not ab:\n        ab = True\n        i += 1\n    elif s[i:i + 2] == 'BA' and not ba:\n        ba = True\n        i += 1\n    i += 1\nif ab + ba + o >= 2:\n    print('YES')\nelse:\n    print('NO')", "s = input()\nif s.find('AB') != -1 and s[s.find('AB') + 2:].find('BA') != -1 or \\\n   s.find('BA') != -1 and s[s.find('BA') + 2:].find('AB') != -1:\n    print('YES')\nelse:\n    print('NO')", "import sys\ns = sys.stdin.readline()\ni = s.find('AB')\nj = s.find('BA')\nif i != -1 and s.find('BA', i + 2) != -1:\n    sys.stdout.write('YES\\n')\nelif j != -1 and s.find('AB', j + 2) != -1:\n    sys.stdout.write('YES\\n')\nelse:\n    sys.stdout.write('NO\\n')\n", "import sys\ns = sys.stdin.readline()\ni = s.find('AB')\nj = s.find('BA')\nif i != -1 and s.find('BA', i + 2) != -1:\n    sys.stdout.write('YES\\n')\nelif j != -1 and s.find('AB', j + 2) != -1:\n    sys.stdout.write('YES\\n')\nelse:\n    sys.stdout.write('NO\\n')\n", "s = input()\ni = s.find('AB')\nj = s.find('BA')\nif i != -1 and s.find('BA', i + 2) != -1:\n    print('YES')\nelif j != -1 and s.find('AB', j + 2) != -1:\n    print('YES')\nelse:\n   print('NO')\n", "s = input()\ni = s.find('AB')\nj = s.find('BA')\nif i != -1 and s.find('BA', i + 2) != -1:\n    print('YES')\nelif j != -1 and s.find('AB', j + 2) != -1:\n    print('YES')\nelse:\n   print('NO')\n"]