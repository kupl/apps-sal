["n, m, sx, sy = list(map(int, input().split()))\n\nprint(sx, sy)\n\n# its row\nfor j in range(1, m+1):\n    if j != sy:\n        print(sx, j)\n\n# other rows\ncurr = m\nfor i in range(1, n+1):\n    if i != sx:\n        if curr == m:\n            for j in range(m, 0, -1):\n                print(i, j)\n                curr = 0\n        else:\n            for j in range(1, m+1):\n                print(i, j)\n                curr = m\n", "w,h,sx,sy = list(map(int,input().split()))\n\nfor x in range(sx, w+1):\n    for y in range(sy, h+1):\n        print(x,y)\n    for y in range(1, sy):\n        print(x,y)\n    sy = y\nfor x in range(1, sx):\n    for y in range(sy, h+1):\n        print(x,y)\n    for y in range(1, sy):\n        print(x,y)\n    sy = y\n", "n,m,x,y=list(map(int,input().split()))\nii=y\nprint(x,y)\nfor c in range(1,m+1):\n    if y!=c:\n        print(x,c)\n        ii=c\nfor r in range(1,n+1):\n    if x!=r:\n        print(r,ii)\n        ij=0\n        for c in range(1,m+1):\n            if ii!=c:\n                print(r,c)\n                ij=c\n        ii=ij\n", "mod = 10**9 + 7\ndef solve():\n    n, m, x, y = map(int, input().split())\n    for i in range(n):\n        for j in range(m):\n            print(x, y)\n            if j + 1 == m:\n                continue\n            y = y + 1\n            if y > m:\n                y = 1\n        x = x + 1\n        if x > n:\n            x = 1\nt = 1\nfor _ in range(t):\n    solve()", "n, m, x, y = list(map(int, input().split()))\n\nresult = [(x, y)]\n\nfor j in range(1, m + 1):\n    if j == y:\n        continue\n    result.append((x, j))\nfor i in range(1, n + 1):\n    if i == x:\n        continue\n    last = result[-1][1]\n    result.append((i, last))\n    for j in range(1, m + 1):\n        if j == last:\n            continue\n        result.append((i, j))\n\nfor t in result:\n    print(t[0], t[1])\n        \n        \n", "mod=10**9+7\nn,m,x,y=map(int,input().split())\nfor i in range (y,m+1):\n    print(x,i)\nfor i in range (y-1,0,-1):\n    print(x,i)\nch=0\nfor i in range (x+1,n+1):\n    if ch==0:\n        for j in range (1,m+1):\n            print(i,j)\n    else:\n        for j in range (m,0,-1):\n            print(i,j)\n    ch=1-ch\nfor i in range (x-1,0,-1):\n    if ch==0:\n        for j in range (1,m+1):\n            print(i,j)\n    else:\n        for j in range (m,0,-1):\n            print(i,j)\n    ch=1-ch", "n,m,sx,sy = map(int,input().split())\nmoves = [(sx,sy)]\nif sx != 1:\n    moves.append((1,sy))\nfor i in range(1,m+1):\n    if i!= sy:\n        moves.append((1,i))\nswitch = 1\nfor row in range(2,n+1):\n    if switch == 1:\n        for col in range(m, 0, -1):\n            if (row, col) == (sx,sy):\n                continue\n            moves.append((row,col))\n    else:\n        for col in range(1, m+1):\n            if (row, col) == (sx,sy):\n                continue\n            moves.append((row,col))\n    switch = 1- switch\nfor move in moves:\n    print(move[0],move[1])", "n, m, Sx, Sy = (int(i) for i in input().split())\n\nprint(Sx, Sy)\n\nfor x in range(1, n + 1):\n    if x == Sx:\n        continue\n    \n    print(x, Sy)\n\nfor y in range(1, m + 1):\n    if y == Sy:\n        continue\n\n    if x == 1:\n        for x in range(1, n + 1):\n            print(x, y)\n    elif x == n:\n        for x in reversed(range(1, n + 1)):\n            print(x, y)\n    else:\n        assert False", "x,y,x0,y0 = map(int,input().split())\nprint(x0,y0)\nprint(1,y0)\nprint(1,1)\nno = [(x0,y0),(1,y0),(1,1)]\nltor = True\nfor a in range(1,x+1):\n\tif ltor:\n\t\tfor b in range(1,y+1):\n\t\t\tif (a,b) not in no:\n\t\t\t\tprint(a,b)\n\telse:\n\t\tfor b in range(y,0,-1):\n\t\t\tif (a,b) not in no:\n\t\t\t\tprint(a,b)\n\tltor = not ltor", "n, m, x, y = list(map(int, input().split()))\n\nprint(x, y)\nfor i in range(1, m + 1):\n    if i == y:\n        continue\n    print(x, i)\n\ny_last = m\nfor i in range(1, n + 1):\n    # print(\"> ---\")\n    if i == x:\n        continue\n    if y_last == m:\n        for j in range(m, 0, -1):\n            print(i, j)\n        y_last = 1\n        continue\n    if y_last == 1:\n        for j in range(1, m + 1):\n            print(i, j)\n        y_last = m\n", "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\ndef solve():\n\tn, m, x, y = mi()\n\n\tprint(x,y)\n\tfor i in range(1,m+1):\n\t\tif not i==y:\n\t\t\tprint(x,i)\n\tpar = 1\n\tfor j in range(1,n+1):\n\t\tif not j==x:\n\t\t\tif par==0:\n\t\t\t\tfor i in range(1,m+1):\n\t\t\t\t\tprint(j,i)\n\t\t\tif par==1:\n\t\t\t\tfor i in reversed(list(range(1,m+1))):\n\t\t\t\t\tprint(j,i)\n\t\t\tpar=(par+1)%2\n\n\treturn\n\nq=1\nfor _ in range(q):\n\tsolve()\n", "from sys import stdin\n\"\"\"\nn=int(stdin.readline().strip())\nn,m=map(int,stdin.readline().strip().split())\ns=list(map(int,stdin.readline().strip().split()))\n\"\"\"\nn,m,x,y=list(map(int,stdin.readline().strip().split()))\nr=[y]\nl=[x]\nfor i in range(1,m+1):\n    if i==y:\n        continue\n    r.append(i)\nfor i in range(1,n+1):\n    if i==x:\n        continue\n    l.append(i)\nr1=r.copy()\nr1=r1[::-1]\nx=0\nfor i in l:\n    if x%2==0:\n        for j in r:\n            print(i,j)\n    else:\n        for j in r1:\n            print(i,j)\n    x+=1\n    \n    \n    \n", "lst = [0, 0, 4, 8]\nmod = 10 ** 9 + 7\nfor i in range(4, 10 ** 6 + 1):\n    lst.append((lst[-1] * 2) % mod)\n\n\ndef main(case):\n    n, m, x, y = list(map(int,input().split()))\n    line = str(x) + \" \" + str(y) + \"\\n\"\n    for i in range(1, m + 1):\n        if i != y:\n            line += str(x) + \" \" + str(i) + \"\\n\"\n    cur = -1\n    for i in range(1, n + 1):\n        if i != x:\n            if cur == -1:\n\n                for k in range(m, 0, -1):\n                    line += str(i) + \" \" + str(k) + \"\\n\"\n                cur = 1\n            else:\n                for k in range(1, m + 1):\n                    line += str(i) + \" \" + str(k) + \"\\n\"\n                cur = -1\n    line.strip(\"\\n\")\n    print(line)\ndef __starting_point():\n    t = 1\n    for i in range(t):\n        main(i + 1)\n\n__starting_point()", "import os\nimport sys\nimport math\nimport heapq\nfrom decimal import *\nfrom io import BytesIO, IOBase\nfrom collections import defaultdict, deque\n\ndef r():\n    return int(input())\ndef rm():\n    return list(map(int,input().split()))\ndef rl():\n    return list(map(int,input().split()))\n\nn,m,x,y=rm()\nprint(x,y)\nprint(1,y)\ngo=True\nfor i in range(1,n+1):\n    if go:\n        for j in range(1,m+1):\n            if (i==x and j==y) or (i==1 and j==y):\n                continue\n            print(i,j)\n    else:\n        for j in range(m,0,-1):\n            if (i==x and j==y) or (i==1 and j==y):\n                continue\n            print(i,j)\n    go = not go\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn, m, x, y = map(int, input().split())\nx -= 1; y -= 1\nans = []\nfor _ in range(n):\n    for j in range(m):\n        ans.append((x+1, y+1))\n        if j != m - 1:\n            y = (y + 1) % m\n        else:\n            x = (x + 1) % n\n\nfor x, y in ans:\n    print(x, y)", "n,m,sx,sy = list(map(int, input().split()))\n\ndef do_row(sx, vis):\n    last = -1\n    for j in range(1, m+1):\n        if (sx, j) not in vis:\n            print(sx, j)\n            vis.add((sx, j))\n            last = j\n    return last\n\nvis = set()\nvis.add((sx,sy))\nprint(sx,sy)\nl = sy\nl2 = do_row(sx, vis)\nif l2 != -1:\n    l = l2\nfor i in range(1,n+1):\n    if (i, l) in vis:\n        continue\n    print(i, l)\n    vis.add((i, l))\n    l2 = do_row(i, vis)\n    if l2 != -1:\n        l = l2\n\n\n", "n, m, sx, sy = map(int, input().split())\nused = [[False] * m for i in range(n)]\nprint(sx, sy)\nfor j in range(1, sy):\n    print(sx, j)\nfor j in range(sy + 1, m + 1):\n    print(sx, j)\nfor i in range(n, 0, -1):\n    if i != sx:\n        print(i, m)\nj = m - 1\nk = 0\nwhile j:\n    k += 1\n    if k % 2 == 1:\n        for i in range(1, n + 1):\n            if i != sx:\n                print(i, j)\n    else:\n        for i in range(n, 0, -1):\n            if i != sx:\n                print(i, j)\n    j -= 1", "import math\nfrom collections import deque\nfrom sys import stdin, stdout\nfrom string import ascii_letters\ninput = stdin.readline\n#print = stdout.write\nletters = ascii_letters[:26]\n\nn, m, x, y = list(map(int, input().split()))\nprint(x, y)\nfor i in range(x, n + 1):\n    if i % 2:\n        for g in range(1, m + 1):\n            if (i, g) == (x, y):\n                continue\n            print(i, g)\n    else:\n        for g in range(m, 0, -1):\n            if (i, g) == (x, y):\n                continue\n            print(i, g)\ninv = n % 2\nfor i in range(1, x):\n    if (i % 2) if not inv else (1 - (i % 2)):\n        for g in range(1, m + 1):\n            if (i, g) == (x, y):\n                continue\n            print(i, g)\n    else:\n        for g in range(m, 0, -1):\n            if (i, g) == (x, y):\n                continue\n            print(i, g)\n", "n, m, x, y = list(map(int, input().split()))\nprint(x, y)\nprint(1, y)\nfor i in range(1, m+1):\n    if i!=y:\n        print(1, i)\ncurr = 0\nfor i in range(2, n+1):\n    if curr%2==0:\n        for j in range(m, 0,-1):\n            if i!=x or j!=y:\n                print(i, j)\n    else:\n        for j in range(1, m+1):\n            if i!=x or j!=y:\n                print(i, j)\n    curr+=1\n", "n, m, x, y = map(int, input().split())\nprint(x, y)\nfor i in range(1, m + 1):\n    if i  != y:\n        print(x, i)\nt = False\nfor i in range(1, n + 1):\n    if i != x:\n        if t:\n            for j in range(1, m + 1):\n                print(i, j)\n        else:\n            for j in range(m, 0, -1):\n                print(i, j)\n                \n        t = not t", "import sys\nimport heapq, functools, collections\nimport math, random\nfrom collections import Counter, defaultdict\n\n# available on Google, not available on Codeforces\n# import numpy as np\n# import scipy\n\n\ndef solve(h,w,x,y):  # fix inputs here\n    console(\"----- solving ------\")\n    x,y = x-1,y-1\n\n    for _ in range(h):\n        for _ in range(w):\n            print(\"{} {}\".format(x+1,y+1))\n            y = (y+1)%w\n        y = (y-1)%w\n        x = (x+1)%h\n    \n    return\n\ndef console(*args):  # the judge will not read these print statement\n    print('\\033[36m', *args, '\\033[0m', file=sys.stderr)\n    return\n\n# fast read all\n# sys.stdin.readlines()\n\n# for case_num in range(int(input())):\n    # read line as a string\n    # strr = input()\n\n    # read line as an integer\n    # k = int(input())\n    \n    # read one line and parse each word as a string\n    # lst = input().split()\n\n    # read one line and parse each word as an integer\nh,w,x,y = list(map(int,input().split()))\n\n    # read matrix and parse as integers (after reading read nrows)\n    # lst = list(map(int,input().split()))\n    # nrows = lst[0]  # index containing information, please change\n    # grid = []\n    # for _ in range(nrows):\n    #     grid.append(list(map(int,input().split())))\n\nsolve(h,w,x,y)  # please change\n    \n    # Google - case number required\n    # print(\"Case #{}: {}\".format(case_num+1, res))\n\n    # Codeforces - no case number required\n    # print(res)\n"]