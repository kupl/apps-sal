["n = int(input())\nl = tuple(map(int, input().split()))\n\na = []\nfor i in range(n - 1):\n    a.append(abs(l[i] - l[i + 1]))\n\nev = [(a[i] if i % 2 == 0 else -a[i]) for i in range(n - 1)]\nod = [-i for i in ev]\nod[0] = 0\n\ndp = [ev[0]]\nst = [\"ev\"]\n\n# print(a)\n# print(ev)\n# print(od)\n\nvmax = dp[0]\n\nevsum = evans = 0\nodsum = odans = 0\n\nfor i in range(0, n - 1):\n    evsum += ev[i]\n    odsum += od[i]\n    evans = max(evsum, evans)\n    odans = max(odsum, odans)\n    if evsum < 0 and i % 2 == 1:\n        evsum = 0\n    if odsum < 0 and i % 2 == 0:\n        odsum = 0\n\n# print(evans, odans)\n\nprint(max(evans, odans))\n", "n = int(input())\nl = tuple(map(int, input().split()))\n\na = []\nfor i in range(n - 1):\n    a.append(abs(l[i] - l[i + 1]))\n\nev = [(a[i] if i % 2 == 0 else -a[i]) for i in range(n - 1)]\nod = [-i for i in ev]\nod[0] = 0\n\ndp = [ev[0]]\nst = [\"ev\"]\n\n# print(a)\n# print(ev)\n# print(od)\n\nvmax = dp[0]\n\nevsum = evans = 0\nodsum = odans = 0\n\nfor i in range(0, n - 1):\n    evsum += ev[i]\n    odsum += od[i]\n    evans = max(evsum, evans)\n    odans = max(odsum, odans)\n    if evsum < 0 and i % 2 == 1:\n        evsum = 0\n    if odsum < 0 and i % 2 == 0:\n        odsum = 0\n\n# print(evans, odans)\n\nprint(max(evans, odans))\n", "def f(a):\n    c, v, m = 0, 0, 1\n    for i in range(len(a) - 1):\n        x = m * abs(a[i] - a[i + 1])\n        c = max(c + x, x)\n        v = max(v, c)\n        m *= -1\n    return v\nn, a = int(input()), list(map(int, input().split()))\nprint(max(f(a), f(a[1:])))", "def getNum():\n    inp = input()\n    return int(inp)\n\ndef getArrNum():\n    inp = input()\n    A = [int(x) for x in inp.split(' ')]\n    return A\n    \ndef getMaximal(arr):\n    best = 0\n    curBest = 0\n    for x in arr:\n        if curBest>=0:\n            curBest += x\n        else:\n            curBest = x\n        best = max(best,curBest)\n    return best\n\n\ndef __starting_point():\n    N = getNum()\n    arr = getArrNum()\n    odd = []\n    even = []\n    for i in range(N-1):\n        nm = abs(arr[i]-arr[i+1])\n        neg = nm*-1\n        if i%2==0:\n            odd.append(nm)\n            even.append(neg)\n        else:\n            odd.append(neg)\n            even.append(nm)\n    ans = max(getMaximal(odd),getMaximal(even))\n    print(ans)\n\n\n\n    \n\n__starting_point()", "n = int(input())\na = list(map(int, input().split(' ')))\n\n\ndef sign(n):\n    return [1, -1][n % 2]\n\nb1 = [abs(a[i]-a[i-1]) for i in range(1, len(a))]\nb1 = [sign(i)*b1[i] for i in range(len(b1))]\nb2 = [-x for x in b1]\n\nmax_ending_here = b1[0]\nmax_so_far = b1[0]\n\nfor i, x in enumerate(b1):\n    if i == 0:\n        continue\n\n    if i % 2 == 1:\n        max_ending_here += x\n    else:\n        if x > max_ending_here + x:\n            max_ending_here = x\n        else:\n            max_ending_here += x\n\n    max_so_far = max(max_so_far, max_ending_here)\n\nb1 = b2\n\nmax_ending_here = b1[0]\nmax_so_far2 = b1[0]\n\nfor i, x in enumerate(b1):\n    if i == 0:\n        continue\n\n    if i % 2 == 0:\n        max_ending_here += x\n    else:\n        if x > max_ending_here + x:\n            max_ending_here = x\n        else:\n            max_ending_here += x\n\n    max_so_far2 = max(max_so_far2, max_ending_here)\n\nprint(max(max_so_far, max_so_far2))\n", "import math\nimport sys\n\nn = int(input())\na = []\nb = [None] * n\nc = [None] * n\n\nfor x in input().split():\n    a.append(int(x))\nfor i in range(0, n - 1):\n    b[i] = c[i] = abs(a[i + 1] - a[i])\n    b[i] *= math.pow(-1, i)\n    c[i] *= math.pow(-1, i + 1)\n\nmaxCurrB = b[0]\nmaxB = b[0]\nmaxCurrC = c[0]\nmaxC = c[0]\n\nfor i in range (1, n - 1):\n    maxCurrB = max(b[i], maxCurrB + b[i])\n    maxB = max(maxB, maxCurrB)\n    maxCurrC = max(c[i], maxCurrC + c[i])\n    maxC = max(maxC, maxCurrC)\n\nprint(int(max(maxB, maxC)))\n\n", "n=int(input())\na=list(map(int, input().split()))\narr=[abs(a[i]-a[i+1])*(-1)**i for i in range(n-1)]\nmaximum=0\nsumm=0\nfor j in arr:\n    if j>0 or abs(j)<abs(summ):\n        summ+=j\n    else:\n        summ=0\n    maximum=max(maximum, abs(summ))\nsumm=0\nfor k in arr[1:]:\n    if k<0 or abs(k)<abs(summ):\n        summ+=k\n    else:\n        summ=0\n    maximum=max(maximum, abs(summ))\nprint(maximum)\n    \n", "n=int(input())\na=input().split()\narr=[abs(int(a[i])-int(a[i+1]))*(-1)**i for i in range(n-1)]\nmaximum=0\nsumm=0\nfor j in arr:\n    if j>0 or abs(j)<abs(summ):\n        summ+=j\n    else:\n        summ=0\n    maximum=max(maximum, abs(summ))\nsumm=0\nfor k in arr[1:]:\n    if k<0 or abs(k)<abs(summ):\n        summ+=k\n    else:\n        summ=0\n    maximum=max(maximum, abs(summ))\nprint(maximum)\n    \n", "n = int(input())\na = list(map(int, input().split()))\nb = []\nf = 1\nfor i in range(len(a) - 1):\n    b.append(abs(a[i] - a[i + 1]) * f)\n    f *= -1\nmax1, max2 = 0, 0\na1, a2 = 0, 0\nfor i in range(n - 1):\n    if a1 + b[i] > 0:\n        a1 += b[i]\n    else:\n        a1 = 0\n    max1 = max(a1, max1)\n    if a2 - b[i] > 0:\n        a2 -= b[i]\n    else:\n        a2 = 0\n    max2 = max(a2, max2)\nprint(max(max1, max2))\n", "import math\nn=int(input())\na=list(map(int,input().split()))\nb=[]\ndp1=[]\ndp2=[]\nc=[]\nd=[]\nfor i in range(n-1):\n    b.append(abs((a[i+1]-a[i])))\nfor j in range(n-1): \n    if(j%2):\n        c.append(b[j])\n        d.append(-1*b[j])\n    else:\n        c.append(-1*b[j])\n        d.append(b[j])\n\ndp1.append(c[0])\ndp2.append(d[0])\n\nfor i in range(1,n-1):\n    dp1.append(max(c[i],dp1[i-1]+c[i]))\n    dp2.append(max(d[i],dp2[i-1]+d[i]))\nprint(max(max(dp1),max(dp2)))\n", "def main():\n    input()\n    aa = list(map(int, input().split()))\n    a, s = aa[0], 1\n    u = c = mi = ma = 0\n    for b in aa:\n        c += abs(a - b) * s\n        a = b\n        s *= -1\n        if ma < c:\n            ma = c\n            u = ma - mi\n        elif mi > c:\n            mi = c\n    a, s = aa[0], -1\n    v = c = mi = ma = 0\n    for b in aa:\n        c += abs(a - b) * s\n        a = b\n        s *= -1\n        if ma < c:\n            ma = c\n            v = ma - mi\n        elif mi > c:\n            mi = c\n    print(max(u, v))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\n\na=list(map(int,input().split()))\n\nda,p=[],1\n\nfor i in range(n-1):\n\n    da.append(p*abs(a[i]-a[i+1]));p*=-1\n\nm1,m2,s1,s2=0,0,0,0\n\nfor x in da:\n\n    s1+=x\n\n    if s1<0: s1=0\n\n    s2-=x\n\n    if s2<0: s2=0\n\n    m1=max(m1,s1);m2=max(m2,s2)\n\nprint(max(m1,m2))\n\n\n\n# Made By Mostafa_Khaled\n", "# n, m = [int(x) for x in input().split(\" \")]\n# s = set()\n# ls = [0]*(n+1)\n# in_C = input().split(\" \")\n#\n# for x in range(len(in_C)-1, -1, -1):\n#     s.add(int(in_C[x]))\n#     ls[x+1] = len(s)\n# [print(ls[int(input())]) for i in range(m)]\n#\n# in_x = input()\n# n = list(in_x)\n# length = len(n)\n# counter = 0\n# counter_2 = 0\n# for _ in range(length):\n#     temp = n[:]\n#     if counter > 0:\n#         temp.pop(counter)\n#     counter += 1\n#     for j in range(0, len(temp)):\n#         if j > 0:\n#             temp.pop((length - 1) - j)\n#         num = int(\"\".join(temp))\n#         if num % 8 == 0:\n#             print(f\"YES\\n{num}\")\n#             return\n#     temp = n[:]\n#     if counter_2 > 0:\n#         temp.pop(counter_2)\n#     counter_2 += 1\n#     # print(temp)\n#     for j in range(len(temp), 1, -1):\n#         temp.pop(j - len(temp))\n#         num = (int(\"\".join(temp)))\n#         # print(num)\n#         if num % 8 == 0:\n#             print(f\"YES\\n{num}\")\n#             return\n# print(\"NO\")\nn = int(input())\nnums = input().split(\" \")\nsumas = [0] * (n+1)\ndp = [[0] * 2 for _ in range(n+1)]\nres = -1e11\nfor x in range(0, n):\n    if x > 0:\n        sumas[x] = abs(int(nums[x]) - int(nums[x - 1]))\nfor x in range(1, n+1):\n    dp[x][0] = max(sumas[x], dp[x - 1][1] + sumas[x])\n    dp[x][1] = max(-sumas[x], dp[x - 1][0] - sumas[x])\n    res = max(max(dp[x][0], dp[x][1]), res)\nprint(res)", "# n, m = [int(x) for x in input().split(\" \")]\n# s = set()\n# ls = [0]*(n+1)\n# in_C = input().split(\" \")\n#\n# for x in range(len(in_C)-1, -1, -1):\n#     s.add(int(in_C[x]))\n#     ls[x+1] = len(s)\n# [print(ls[int(input())]) for i in range(m)]\n#\n# in_x = input()\n# n = list(in_x)\n# length = len(n)\n# counter = 0\n# counter_2 = 0\n# for _ in range(length):\n#     temp = n[:]\n#     if counter > 0:\n#         temp.pop(counter)\n#     counter += 1\n#     for j in range(0, len(temp)):\n#         if j > 0:\n#             temp.pop((length - 1) - j)\n#         num = int(\"\".join(temp))\n#         if num % 8 == 0:\n#             print(f\"YES\\n{num}\")\n#             return\n#     temp = n[:]\n#     if counter_2 > 0:\n#         temp.pop(counter_2)\n#     counter_2 += 1\n#     # print(temp)\n#     for j in range(len(temp), 1, -1):\n#         temp.pop(j - len(temp))\n#         num = (int(\"\".join(temp)))\n#         # print(num)\n#         if num % 8 == 0:\n#             print(f\"YES\\n{num}\")\n#             return\n# print(\"NO\")\n\nn = int(input())\nnums = input().split(\" \")\nsumas = [0] * (n+1)\ndp = [[0] * 2 for _ in range(n+1)]\nres = -1e11\nfor x in range(0, n):\n    if x > 0:\n        sumas[x] = abs(int(nums[x]) - int(nums[x - 1]))\nfor x in range(1, n+1):\n    dp[x][0] = max(sumas[x], dp[x - 1][1] + sumas[x])\n    dp[x][1] = max(-sumas[x], dp[x - 1][0] - sumas[x])\n    res = max(max(dp[x][0], dp[x][1]), res)\nprint(res)", "n = int(input())\na = list(map(int, input().split()))\n\naux = 0\nminaux = 0\nmaxim = 0\nresults = []\n\nfor i in range(1, n):\n    results.append(abs(a[i-1] - a[i]))\n\n\nfor i in range(0,n-1):\n    if i%2 == 1:\n        condition = -results[i]\n    else:\n        condition = results[i]\n    aux += condition\n    minaux -= condition\n    if aux > maxim:\n        maxim = aux\n    if condition > maxim:\n        maxim = condition\n    if minaux > maxim:\n        maxim = minaux\n    if minaux < 0:\n        minaux = 0\n    if aux < 0:\n        aux = 0\n\nprint (maxim)\n", "import math\ndef getMax(a, n):\n    MAX = -1*pow(10, 9)\n    memoize = [[0 for x in range(2)] for y in range(n)]\n    difference = [0 for x in range(n)]\n    for i in range(n):\n        if i > 0:\n            difference[i] = abs(a[i]-a[i-1])\n    for i in range(1, n):\n        memoize[i][0] = max(difference[i], memoize[i-1][1] + difference[i])\n        memoize[i][1] = max(-difference[i], memoize[i-1][0] - difference[i])\n        MAX = max(memoize[i][1], MAX)\n        MAX = max(memoize[i][0], MAX)\n    return MAX\nn = int(input())\na = [int(x) for x in input().split()]\nprint(getMax(a, n))", "input()\nnumbers = [int(x) for x in input().split()]\ndiffs = []\nsum_odd, sum_even = 0, 0\nfor x in range(len(numbers)-1):\n\tdiffs.append(abs(numbers[x] - numbers[x+1]))\n_max = 0\nfor x in range(len(diffs)):\n\taux = diffs[x]\n\tif x % 2 == 1: aux *= -1\n\tsum_even += aux\n\tsum_odd -= aux\n\tif sum_even < 0: sum_even = 0\n\tif sum_odd < 0: sum_odd = 0\n\t_max = max([sum_even, sum_odd, _max])\n\nprint(_max)\n", "lectura= lambda:map (int, input().split())\nn= (list(lectura())[0])\nlista= list(lectura())\nfDescrita=0\nalt1=1\nmaxV1=0\nmaxV2=0\nC1=0\nC2=0\nfor i in range(0, n -1):\n    fDescrita= abs(lista[i] - lista[i + 1]) * alt1\n    maxV1=max(maxV1 + fDescrita, fDescrita)\n    maxV2 = max(maxV2, maxV1)\n    alt1 = alt1 * (-1)\n    #print(fDescrita,maxV1,maxV2)\nC1=maxV2\nmaxV1=0\nmaxV2=0\nalt1=1\nfor i in range(1, n -1):\n    fDescrita= abs(lista[i] - lista[i + 1]) * alt1\n    maxV1=max(maxV1 + fDescrita, fDescrita)\n    maxV2 = max(maxV2, maxV1)\n    alt1 = alt1 * (-1)\n    #print(fDescrita,maxV1,maxV2)\nC2=maxV2\nprint(max(C1,C2))", "import math\n\ninput()\nseq = [0] + [ int(i) for i in input().split() ]\ncum = [0] + [ abs(seq[i - 1] - seq[i]) if i > 1 else 0 for i in range(1, len(seq)) ]\n\nmx = -math.inf\n\neve = [0] * len(cum)\nodd = [0] * len(cum)\n\nfor i in range(2, len(cum)):\n    eve[i] = max( cum[i], odd[i - 1] + cum[i])\n    odd[i] = max(-cum[i], eve[i - 1] - cum[i])\n    mx = max(mx, odd[i], eve[i])\n\nprint(mx)\n\n", "n = int(input())\n_l = list(map(int, input().split()))\nl = [abs(_l[i] - _l[i + 1]) for i in range(n - 1)]\np, n, res = 0, 0, 0\nfor e in l:\n    _p = max(0, n + e)\n    _n = max(0, p - e)\n    p, n = _p, _n\n    res = max(p, n, res)\nprint(res)", "n=int(input())\n*a,=map(int,input().split())\nl=[abs(a[i]-a[i-1]) for i in range(1,n)]\nans=0\nx=y=0\nfor i in range(n-1):\n    t=[l[i],-l[i]][i%2]\n    x+=t\n    y-=t\n    ans=max(ans,x,y)\n    x=max(x,0)\n    y=max(y,0)\nprint(ans)", "#\t!/bin/env python3\n#\tencoding: UTF-8\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology and Management,Gwalior\n\n#\tQuestion Link\n#\thttps://codeforces.com/problemset/problem/788/A\n#\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\ninf = float(\"inf\")\nmod = 1000000007\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef input(): return sys.stdin.readline()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    n = int(input())\n    arr = get_array()\n    ans = 0\n    prefix_odd = [0]*n\n    for i in range(n-1):\n        prefix_odd[i] = abs(arr[i+1]-arr[i])*pow(-1, i)\n    prefix_even = [0]*n\n    for i in range(n-1):\n        prefix_even[i] = abs(arr[i+1]-arr[i])*pow(-1, i+1)\n\n    curr_mx, mx = prefix_odd[0], prefix_odd[0]\n    for i in range(1, n):\n        curr_mx = max(prefix_odd[i], prefix_odd[i]+curr_mx)\n        mx = max(curr_mx, mx)\n\n    curr_mx = prefix_even[0]\n    for i in range(1, n):\n        curr_mx = max(prefix_even[i], prefix_even[i]+curr_mx)\n        mx = max(curr_mx, mx)\n    print(mx)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]