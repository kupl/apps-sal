["N, M = map(int, input().split())\nif N == 1 and M == 1:\n    ans = 1\nelif N == 1:\n    ans = M-2\nelif M == 1:\n    ans = N-2\nelse:\n    ans = (N-2)*(M-2)\nprint(ans)", "n,m = map(int,input().split())\nif (n,m) == (1,1):\n    print(1)\nelif n == 1 or m == 1:\n    print(max(1,n-2)*max(1,m-2))\nelse:\n    print((n-2)*(m-2))", "'''\n[C - Flip,Flip, and Flip......](https://atcoder.jp/contests/arc091/tasks/arc091_a)\n'''\n\nn, m = list(map(int, input().split()))\n\ninner_num = (n - 2) * (m - 2)\n\nans = 0\nif n == 1 and m == 1:\n    ans = 1\nelif n == 1:\n    ans = m - 2\nelif m == 1:\n    ans = n - 2\nelse:\n    outter_num = 0\n    ans = inner_num\n\nprint(ans)\n", "n,m=map(int, input().split())\nif n==1 and m==1:\n    print (1)\n    return\nif n==1 or m==1:\n    print (min(n,m)*(max(n,m)-2))\n    return\nprint ((n-2)*(m-2))", "N, M = list(map(int, input().split()))\nif N > M:\n    N, M = M, N\nres = 0\nif N == 1 and M == 1:\n    res = 1\nelif N == 2:\n    res = 0\nelse:\n    res = max(1, N - 2) * max(1, M - 2)\nprint(res)\n", "N,M=map(int,input().split())\nprint(abs((N-2)*(M-2)))", "import sys\npin=sys.stdin.readline\n\ndef main():\n  N,M=map(int,pin().split())\n  print(abs((N-2)*(M-2)))\n  return\nmain()", "N, M = list(map(int, input().split()))\n\nif N > 1 and M > 1:\n    print(((N - 2)*(M - 2)))\nelse:\n    print((abs(max([M, N]) - 2)))\n", "import sys\n\ninput = sys.stdin.readline\nn,m = list(map(int,input().split()))\nif n == m == 1:\n    print((1))\nelif min(n,m) == 1:\n    print((max(n,m)-2))\nelse:\n    print(((n-2)*(m-2)))\n", "n,m=map(int,input().split())\nif n==m==1:\n    print(1)\nelif n==1 or m==1:\n    if max(n,m)==2:\n        print(0)\n    else:\n        print(max(n,m)-2)\nelse:\n    print(n*m-(n*2+(m-2)*2))", "n, m = map(int, input().rstrip().split(\" \"))\n\nans = 0\nif(n == 1) and (m == 1):\n    ans = 1\nelif(n == 1):\n    ans = m - 2\nelif(m == 1):\n    ans = n - 2\nelse:\n    ans = (n - 2) * (m - 2)\nprint(ans)", "n, m = list(map(int, input().split()))\nif n + m == 2:\n    print((1))\nelif n == 1:\n    print((m - 2))\nelif m == 1:\n    print((n - 2))\nelif n == 2 or m == 2:\n    print((0))\nelse:\n    print(((n - 2) * (m - 2)))\n", "n,m=list(map(int,input().split()))\n\nif n==1 :\n    if m>=2 :\n        print((m-2))\n        return\n    else :\n        print((1))\n        return\nelif n==2 :\n    print((0))\n\nelse :\n    if m==1 :\n        print((n-2))\n        return\n    elif m==2 :\n        print((0))\n        return\n    else :\n        print((m*n-2*m-2*n+4))\n        return\n", "n,m=map(int,input().split())\nprint(abs((n-2)*(m-2)))", "N, M = map(int,input().split())\nif N == 1 and M == 1:\n    print(1)\nelif N == 1:\n    print(M-2)\nelif M == 1:\n    print(N-2)\nelse:\n    print(N*M-(N+M-2)*2)", "n,m = map(int,input().split())\nif(n==1)&(m==1):\n    ans = 1\nelif(n==1)|(m==1):\n    ans = n+m-3\nelse:\n    ans = (n-2)*(m-2)\nprint(ans)", "n,m = map(int,input().split())\nq = [n,m]\nif n == 1 and m == 1:\n    print(1)\n    return\nif 1 in q:\n    print(n*m-2)\n    return\nif 2 in q:\n    print(0)\n    return\nprint((n-2)*(m-2))", "n, m = map(int, input().split())  \nret = 0\nif (n == 1) and (m == 1):\n    #\u70b9\n    ret = 1\nelif (n == 1) or (m == 1):\n    #\u7dda\n    ret = n*m -2\nelse:\n    #\u9762\n    ret = m*n-m*2-n*2+4\nprint(ret)", "# author:  Taichicchi\n# created: 28.09.2020 23:24:54\n\nimport sys\n\nn, m = list(map(int, input().split()))\n\nif (n == 1) & (m == 1):\n    print((1))\nelif n == 1:\n    print((m - 2))\nelif m == 1:\n    print((n - 2))\nelse:\n    print(((n - 2) * (m - 2)))\n", "# 30\nn, m = map(int, input().split())\n\nans = 0\nif n == 1 or m == 1:\n    if n == 1 and m == 1: ans = 1\n    else: ans = abs(n - m) - 1\nelse:\n    ans = n*m - (2*n + 2*m) + 4\n\nprint(ans)", "N,M = [int(n) for n in input().split()]\n\nif N==1 and M==1:\n    print((1))\nelif N==2 and M==1:\n    print((0))\nelif N==1 and M==2:\n    print((0))\nelif N==2 and M==2:\n    print((0))\nelif N==1 and M>2:\n    print((M-2))\nelif N>2 and M==1:\n    print((N-2))\nelse:\n    print(((N-2)*(M-2)))\n", "N,M = map(int,input().split())\nif N == M == 1:\n    print(1)\nelif N == 1 or M == 1:\n    print(N*M-2)\nelse:\n    print((N-2)*(M-2))", "n, m = map(int, input().split())\nprint(abs(n-2)*abs(m-2))", "n,m = map(int,input().split())\n\nif m>=2 and n>=2:\n    ans = (n-2)*(m-2)\nelif m==1 and n==1:\n    ans = 1\nelif m==1 or n==1:\n    ans = n*m-2\nelse:\n    ans = 0\n    \nprint(ans)", "n, m = list(map(int, input().split()))\n\n# \u9047\u6570\u56de\u53e9\u304b\u308c\u305f\u3089\u8868\u306b\u306a\u308b\n# \u5947\u6570\u56de\u53e9\u304b\u308c\u305f\u3089\u88cf\u306b\u306a\u308b\n\nif n == 1 and m == 1:\n    print(1)\nelif n == 1:\n    print(m - 2)\nelif m == 1:\n    print(n-2)\nelse:\n    print((n-2)*(m-2))", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, M: int):\n    N, M = min(N, M), max(N, M)\n\n    if N == 1 and M == 1:\n        print((1))\n        return\n\n    if N == 1: # M > 1\n        print((M - 2)) # \u4e21\u7aef\n        return\n\n    ans = (N - 2) * (M - 2)\n    print(ans)\n\n    return\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    M = int(next(tokens))  # type: int\n    solve(N, M)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# coding: utf-8\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    if N == 1 or M == 1:\n        ans = N * M - 2\n        if ans < 0: ans = 1\n    else:\n        ans = N * M - (N + M) * 2 + 4\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\nN, M = list(map(int,input().split()))\n\nif(N*M==2):\n    print((0))\n    return\nif(N*M==1):\n    print((1))\n    return\nif(N==1):\n    print((M-2))\n    return\nif(M==1):\n    print((N-2))\n    return\nprint(((N-2)*(M-2)))\n\n", "import sys\nimport math\nimport itertools\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, M = MI()\n    if N == 1 and M == 1:\n        print(1)\n        return\n    elif N == 1:\n        print(M-2)\n        return\n    elif M == 1:\n        print(N-2)\n        return\n        \n    print((M-2)*(N-2))\n        \ndef __starting_point():\n    main()\n__starting_point()", "\nN,M = map(int,input().split())\n\nif N == 1:\n    if M > 2:\n        print(M-2)\n    else:\n        if M == 1:\n            print(1)\n        else:\n            print(0)\nelif N == 2 or M == 2:\n    print(0)\nelse:\n    if M > 2:\n        print((N-2)*(M-2))\n    else:\n        if M == 1:\n            print((N-2))", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nn, m = list(map(int, input().split()))\nif n == 1 and m == 1:\n    print((1))\n    return\nif n == 1:\n    print((m - 2))\n    return\nif m == 1:\n    print((n - 2))\n    return\n\nprint((n * m - (n * 2 + m * 2 - 4)))\n", "n,m=map(int,input().split())\nif n==1 and m==1:\n    print(1)\nelif n==1:\n    print(m-2)\nelif m==1:\n    print(n-2)\nelse:\n    print((n-2)*(m-2))", "n, m = list(map(int, input().split()))\nif n + m == 2:\n  print((1))\nelif n == 1 or m == 1:\n  print((n + m - 3))\nelse:\n  print(((n - 2) * (m - 2)))\n", "row, col = map(int, input().split(' '))\n#up boundary 0\n#down boundary n - 1\n#left boundary 0\n#right boundary m - 1\nres = 0\n\nif row > 1 and col > 1:\n    res = (row - 2) * (col - 2)\nelif row == 1 and col == 1:\n    res = 1\nelif row == 1:\n    res = col - 2\nelse:\n    res = row - 2\n    \nprint(res)", "N, M = map(int, input().split())\n\nif N == 1:\n    if M == 1:\n        print(1)\n    else:\n        print((N-2)*(M-2)*(-1))\nelse:\n    if M == 1:\n        print((N-2)*(M-2)*(-1))\n    else:\n        print((N-2)*(M-2))", "n,m = map(int,input().split())\nif n == 1 and m == 1:\n    print(1)\nelif n == 1 or m == 1:\n    print(max(n,m) - 2)\nelif n == 2 or m == 2:\n    print(0)\nelse:\n    print(m * n - (2 * n + 2 * m - 4))", "N, M = map(int,input().split())\nif N >= 2:\n  N-=2\nif M >= 2:\n  M-=2\nprint(N*M)", "n, m = map(int, input().split())\n\nif n == m == 1:\n    print(1)\nelif n == 1 or m == 1:\n    print(max(n,m)-2)\nelse:\n    print((n-2)*(m-2))", "N, M = map(int,input().split())\n\nif N>1 and M>1:\n    print((N-2)*(M-2))\nelif N == 1 and M>1:\n    print(M-2)\nelif N>1 and M==1:\n    print(N-2)\nelif N == 1 and M == 1:\n    print(1)", "N,M=map(int,input().split())\nprint(abs((N-2)*(M-2)))", "a,b = map(int,input().split())\nprint(abs(a * b - (2 * a + 2 * b - 4)))", "N, M = map(int, input().split())\nif N == 1 or M == 1:\n    print(1 if N * M == 1 else N * M - 2)\nelse:\n    print((N-2) * (M-2))", "n, m = map(int, input().split())\nif n == 1 and m == 1:\n    print(1)\nelif n == 1 or m == 1:\n    print(max(n,m)-2)\nelse:\n    print((n-2)*(m-2))", "n, m = map(int,input().split())\nprint(abs((n-2)*(m-2)))", "n,m=list(map(int,input().split()))\n\nif n>=3 and m>=3:\n  a=n*m\n  b=n*2+m*2-4\n  ans=a-b\nelif n==1 and m==1:\n  ans=1\nelif n==1 or m==1:\n  a=n*m\n  b=2\n  ans=a-b\nelif n==2 or m==2:\n  ans=0\n  \nprint(ans)\n", "#template\nimport sys\nsys.setrecursionlimit(10**9)\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\nread_int = lambda: int(readline())\nread_ints = lambda: map(int,readline().split())\nread_ints_list = lambda: list(map(int,readline().split()))\nread_ints_grid = lambda h:list(list(map(int,readline().split())) for _ in range(h))\nread_strs_list = lambda: list(map(str,readline().rstrip().split()))\nread_strs_grid = lambda h:list(list(map(str,readline().rstrip().split())) for _ in range(h))\n\ndef read_allints_grid(w):\n    grid = map(int,read().split())\n    grid = list(map(list,zip(*(grid for _ in range(w)))))\n    return grid\n\ndef read_allstrs_grid(w):\n    grid = map(str,read().split())\n    grid = list(map(list,zip(*(grid for _ in range(w)))))\n    return grid\n\n#import\n# from copy import deepcopy\n# from decimal import Decimal\n# from math import ceil,floor\n# from collections import deque,Counter\n# from heapq import heapify,heappop,heappush\n# from itertools import accumulate,product,permutations,combinations,combinations_with_replacement\n# from bisect import bisect_left,bisect_right\n\n#solution\ndef sol():\n    return None\n\ndef main():\n    #input data\n    n,m = read_ints()\n    #solve\n    if n==m==1:\n        print(1)\n    elif n==1 or m==1:\n        print(max(n,m)-2)\n    else:\n        print((n-2)*(m-2))\n\n    return None\n\ndef __starting_point():\n    main()\n__starting_point()", "#https://qiita.com/goto_yuta_/items/1c104e332351ab9389a6\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\nimport sys\nsys.setrecursionlimit(10 ** 6)#pypy3\u306fnumpy\u3092\u4f7f\u3048\u306a\u3044\uff0c\u3053\u306e\u884c\u3092\u6d88\u3059\u3053\u3068\uff0e\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef II(): return int(sys.stdin.readline())\n# \u5165\u529b\u5168\u3066\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LI(): return list(map(int, sys.stdin.readline().split()))\n# \u5165\u529b\u306e\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LC(): return list(input())\n# \u5165\u529b\u306e\u6570\u5b57\u5217\u30921\u6841\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef IC():return [int(c) for c in input()]\n#\u5c11\u306a\u30441\u884c\u306eint\u5909\u6570\u306b\u5165\u308c\u308b\u69d8\u306e\u5165\u529b\uff0e\u4f8b:N, A, B = map(int, input().split())\ndef MI(): return map(int, input().split())\ndef solve():\n    N,M = MI()\n    if(N==M==1):\n        print(1)\n    elif(N==1):\n        print(M-2)\n    elif(M==1):\n        print(N-2)\n    else:\n        print(N*M-(2*N+2*M-4))\n    return\nsolve()", "n, m = map(int, input().split())\n\nif n >= 2 and m >= 2:\n    print((n-2)*(m-2))\nelif (n == 1 and m >= 3) or (n >= 3 and m == 1):\n    print(max(n, m)-2)\nelif (n == 1 and m == 2) or (n == 2 and m == 1):\n    print(0)\nelif (n == 1 and m == 1):\n    print(1)", "n,m=list(map(int,input().split()))\n\nif n>=2 and m>=2:\n    print(((n-2)*(m-2)))\n    return\nif n==1 and m>=2:\n    print((m-2))\nelif n>=2 and m==1:\n    print((n-2))\nelse:\n    print((1))\n\n", "N, M = list(map(int, input().split()))\nif N < 2 or M < 2:\n    if N==M:\n        print((1))\n    else:\n        print((max(N,M)-2))\nelif N == 2 or M == 2:\n    print((0))\nelse:\n    #\u4e2d\u7a7a-\u56db\u8fba+\u89d2\u306b\u306a\u308b\n    print(((N-2)*(M-2)))\n", "N, M = map(int, input().split())\nif (N==2 or M==2) or N*M == 2:\n    print(0)\nelse:\n    N = N-2 if N>2 else 1\n    M = M-2 if M>2 else 1\n    print(N*M)", "N,M=map(int,input().split())\nif N==1 or M==1:\n  if N==1 and M==1:\n    print(1)\n  else:\n    print(max(N,M)-2)\nelse:\n  ans=(N-2)*(M-2)\n  print(ans)", "N,M=list(map(int,input().split()))\nif N==1 and  M==1:print((1))\nelif N==1:print((M-2))\nelif M==1:print((N-2))\nelif N==2 or M==2:print((0))\nelse:print(((M-2)*(N-2)))\n", "N,M = map(int,input().split())\nif N == 1 and M == 1:\n    print(1)\nelif N == 1 or M == 1:\n    print(max(N,M)-2)\nelse:\n    print((N-2)*(M-2))", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tsample\n# CreatedDate:  2020-12-28 15:44:13 +0900\n# LastModified: 2020-12-28 20:02:31 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    if N == 1 and M == 1:\n        print((1))\n    elif (N == 1 and M != 1):\n        print((M-2))\n    elif (N != 1 and M == 1):\n        print((N-2))\n    else:\n        print(((N-2)*(M-2)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m=list(map(int,input().split()))\nif n==1 and m==1:\n    print((1))\nelif n==1:\n    print((m-2))\nelif m==1:\n    print((n-2))\nelse:\n    ans=(n-2)*(m-2)\n    print(ans)\n", "n,m = list(map(int,input().split()))\n\nif n == 1:\n  if m == 1:\n    print((1))\n  else:\n    print((m-2))\nelif n == 2:\n  print((0))\nelse:\n  if m == 1:\n    print((n-2))\n  else:\n    print(((n-2)*(m-2)))\n", "n, m = map(int, input().split())\nif n > 2 and m > 2:\n  ans = (n-2)*(m-2)\nelif n == 2 or m == 2:\n  ans = 0\nelif n == 1 and m == 1:\n  ans = 1\nelif n == 1:\n  ans = m - 2\nelif m == 1:\n  ans = n - 2\n\nprint(ans)", "n, m = map(int, input().split())\n\nif n >= 2 and m >= 2:\n    print((n - 2) * (m - 2))\nif n >= 2 and m == 1:\n    print(n - 2)\nif n == 1 and m >= 2:\n    print(m - 2)\nif n == 1 and m == 1:\n    print(1)", "n = list(map(int,input().split()))\n\n\nif(n[0]==1 or n[1]==1):\n    tmp = max(n)\n    if(tmp == 1):\n        print(\"1\")\n    elif(tmp == 2):\n        print(\"0\")\n    else:\n        print(tmp-2)\nelif((n[0] == 2 or n[1] == 2)and(n[0]!=1 and n[1]!=1)):\n    print(\"0\")\nelse:\n    print((n[0]-2)*(n[1]-2))", "from sys import stdin, stdout # only need for big input\nfrom itertools import permutations\n\ndef read_int_from_line():\n    return list(map(int, input().split()))\n\ndef solve():\n    n, m = read_int_from_line()\n    if n > m :\n        n, m = m, n\n    # print(f'n {n} m {m}')\n    if n == 1:\n        if m == 1:\n            print(1) \n        else:\n            print(m-2)\n    else:\n        print( (n-2) * (m-2) )\ndef main():\n    solve()\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\n\nif n == 1 and m == 1:\n    print(1)\nelif n == 1 or m == 1:\n    print(max(n, m)-2)\nelif n >= 3 and m >= 3:\n    print((n-2)*(m-2))\nelse:\n    print(0)", "n,m=map(int,input().split())\nprint(abs((n-2)*(m-2)))", "N,M=map(int,input().split())\n\nif N==2 or M==2 :\n    B=0\nelif N==1 or M==1 :\n    if N==M :\n        B=1\n    elif N<M:\n        B=M-2\n    else:\n        B=N-2\nelse:\n    B=N*M-M*2-N*2+4\n    \nprint(B)", "N, M = map(int, input().split())\n\nif N == 1:\n    if M == 1:\n        print(1)\n    else:\n        print(M - 2)\n    return\nelif M == 1:\n    print(N - 2)\n    return\nelif N == 2 or M == 2:\n    print(0)\n    return\nelse:\n    print((N - 2) * (M - 2))", "N, M = map(int, input().split())\n\nif N == 1:\n    if M == 1:\n        ans = 1\n    else:\n        ans = M-2\nelif M == 1:\n    ans = N-2\nelse:\n    ans = M*N - (2*N + 2*M - 4)\n\nprint(ans)", "a,b=map(int,input().split())\nif a>=2 and b>=2:\n  print((a-2)*(b-2))\nelif a==1 and b==1:\n  print(1)\nelse:\n  print(a*b-2)", "N,M = list(map(int,input().split()))\n\nif N ==1 and M == 1:\n    print((1))\nelif N == 1 or M == 1:\n    print((N*M - 2))\nelse:\n    print(((N-2)*(M-2)))\n", "N, M = list(map(int, input().split()))\n\nif (N >= 2 and M >= 2):\n    print(((N - 2) * (M - 2)))\n\nelse:\n    if (N == 1 and M >= 2):\n        print((M-2))\n    elif (N >= 2 and M == 1):\n        print((N-2))\n    else:  #N==M==1\n        print(\"1\")\n", "A, B = map(int, input().split())\n\nif (A > 1):\n  if (B > 1):\n    a = (A - 2)*(B - 2)\n  elif B==1:\n    a = (A - 2)\n  else:\n    a = 0\nelse:\n  if B > 1 :\n    a = (B - 2)\n  elif B==1:\n    a = 1\n  else:\n    a = 0\n\nprint(a)", "n, m = list(map(int, input().split()))\nif n == 1 and m == 1:\n    print((1))\nelif n == 1 or m == 1:\n    print((max(n, m) - 2))\nelse:\n    print((n*m-(n+m)*2+4))\n", "n,m=list(map(int, input().split()))\n\nif n==1 and m==1:\n    print((1))\nelif n==1 or m==1:\n    print((max(n,m)-2))\nelif n==2 or m==2:\n    print((0))\nelse:\n    print(((n-2)*(m-2)))\n", "n,m = map(int,input().split())\nans = 0\nif n == 1 and m == 1:\n  ans = 1\nelif n == 1:\n  ans = m-2\nelif m == 1:\n  ans = n-2\nelse:\n  ans = n*m-2*n-2*m+4\nprint(ans)", "N, M = list(map(int, input().split()))\nif N == 1 and M == 1:\n    ans = 1\nelif N == 1:\n    ans = M - 2\nelif M == 1:\n    ans = N - 2\nelif N == 2 or M == 2:\n    ans = 0\nelse:\n    ans = (N * M) - (2 * N + 2 * M - 4)\n\nprint(ans)\n", "n,m = list(map(int,input().split()))\ntotal = n*m\n\nif n==1 and m==1:\n  print((1))\n  \nelif n == 1 or m == 1:\n  print((total - 2))\n\nelse:\n  print((total - (2*(n+m-2))))\n  \n", "n,m = list(map(int,input().split()))\nn, m = min(n,m),max(n,m)\n\nif n == 1 and m == 1:\n    print((1))\nelif n == 1:\n    print((m-2))\nelif n == 2:\n    print((0))\nelse:\n    print(((n*m)-(2*n)-(2*m)+4))\n", "d=list(map(int,input().split()))\nN=min(d)\nM=max(d)\nif N>=2:\n    print((N-2)*(M-2))\nelse:\n    if M==1:\n        print(1)\n    else:\n        print(M-2)", "# coding: utf-8\n# Your code here!\n\nN, M = map(int, input().split())\n\n\n\nX = N * M\nY = abs((N-2) * (M-2))\n\nprint(Y)", "n, m = map(int, input().split())\n\nif n > 2 and m > 2:\n    print((n-2)*(m-2))\nelse:\n    if n == 1 and m == 1:\n        print(1)\n    elif n == 2 or m == 2:\n        print(0)\n    elif n == 1:\n        print(max(m-2, 0))\n    elif m == 1:\n        print(max(n-2,0))\n    else:\n        print(0)", "import sys\n\nN,M = map(int,input().split())\n\nif N==1 and 3<=M:\n    print(M-2)\n    return\nif M==1 and 3<=N:\n    print(N-2)\n    return\nprint(M*N - (2*N+2*M-4))", "N, M = map(int, input().split())\n\nif N == 1 and M == 1:\n    print(1)\nelif min(N, M) == 1:\n    print(N + M - 3)\nelif min(N, M) == 2:\n    print(0)\nelse:\n    print((N-2)*(M-2))", "a,b=map(int,input().split())\nif min(a,b)>=3:\n    print( (a-2)*(b-2))\n    return\nif a>b: a,b=b,a\nif a==1 and b>=3:\n    print(b-2)\nif a==2 and b>=3:\n    print(0)\n\n\nif [a,b]==[1,1]:\n    print(1)\nif [a,b]==[1,2]:\n    print(0)\nif [a,b]==[2,2]:\n    print(0)", "n, m = map(int, input().split())\nif n != 1 and m != 1:\n    print((n-2)*(m-2))\nelse:\n    n, m = max(n, m), min(n, m)\n    if m == 1 and n != 1:\n        print(n-2)\n    else:\n        print(1)", "N, M = list(map(int,input().split()))\n\nif N == 1 and M == 1:\n  print((1))\nelif N == 1:\n  print((M-2))\nelif M == 1:\n  print((N-2))\nelse:\n  print(((M-2)*(N-2)))\n", "n, m = map(int, input().split())\n\nif n*m == 1:\n    print(1)\nelif n == 1 or m == 1:\n    print(max(n, m)-2)\nelse:\n    print((n-2)*(m-2))", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn,m = list(map(int,readline().split()))\n\nif n==1 and m==1:\n    print((1))\nelif n==1 or m==1:\n    print((max(n,m)-2))\nelse:\n    print(((n-2)*(m-2)))\n\n\n\n\n\n", "N, M = map(int, input().split())\nif N == 1:\n    if M == 1:\n        print(1)\n    else:\n        print(M-2)\nelif N == 2:\n    print(0)\nelse:\n    if M == 1:\n        print(N-2)\n    else:\n        print((N-2)*(M-2))", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC_fix\n# CreatedDate:  2020-10-01 22:03:15 +0900\n# LastModified: 2020-10-01 22:18:35 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    if N >= 2 and M >= 2:\n        print(((N-2)*(M-2)))\n    elif N < 2 and M >= 2:\n        print((M-2))\n    elif N >= 2 and M < 2:\n        print((N-2))\n    else:\n        print((1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = map(int,input().split())\n\nif N ==1 and M ==1 :\n    ans = 1\n    \nelif N == 1 or M == 1 :\n    ans = N*M - 2\n    \nelse :\n    ans = (N-2)*(M-2)\n\n\nprint(ans)", "n, k = map(int, input().split())\nif n > 2 and k > 2:\n    center = n * k - ( (k * 2) + (n-2)*2 )\n    print(center)\nelse:\n    if n == 1 and k == 1:\n        print(1)\n    elif n == 1 or k == 1:\n        if n > k:\n            print(n-2)\n        else:\n            print(k-2)\n    else:\n        print(0)", "n,m = list(map(int,input().split()))\nif n >= 2 and m >= 2 :\n    print(((n-2)*(m-2)))\nelif n == 1 and m ==1 :\n    print((1))\nelif n == 1 and m > 1 :\n    print((m-2))\nelif n > 1 and m == 1 :\n    print((n-2))\n", "n, m = list(map(int, input().split()))\nprint((abs((n - 2) * (m - 2))))\n", "import sys\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right #func(\u30ea\u30b9\u30c8,\u5024)\nfrom heapq import heapify, heappop, heappush\nfrom math import *\n\nsys.setrecursionlimit(10**6)\nINF = 10**20\neps = 1.0e-20\nMOD = 10**9+7\n\ndef mint():\n    return map(int,input().split())\ndef lint():\n    return list(map(int,input().split()))\ndef ilint():\n    return int(input()), list(map(int,input().split()))\ndef judge(x, l=['Yes', 'No']):\n    print(l[0] if x else l[1])\ndef lprint(l, sep='\\n'):\n    for x in l:\n        print(x, end=sep)\n\nN,M = mint()\nif N==M==1:\n    print(1)\nelse:\n    print(abs(N-2)*abs(M-2))", "def lmi():\n    return list(map(int, input().split()))\n\n\ndef main():\n    N, M = lmi()\n    if N == 1 or M == 1:\n        print((abs(N - 2) * abs(M - 2)))\n    else:\n        print(((N - 2) * (M - 2)))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "N,M=map(int,input().split())\n\nif N==1 and M==1:\n    print(1)\nelif N==1 or M==1:\n    print(max(N,M)-2)\n\nelse:\n    print(N*M-(2*(N+M)-4))", "N, M = list(map(int, input().split()))\nif N == 2 or M == 2:\n    ans = 0\nelif N == 1:\n    ans = M - 2\nelif M == 1:\n    ans = N - 2\nelse:\n    ans = (N - 2) * (M - 2)\nif ans < 0:\n    ans = 1\nprint(ans)\n", "N,M=map(int,input().split())\nif N==1:\n  if M==1:\n    print(1)\n  else:\n    print(M-2)\nelse:\n  if M==1:\n    print(N-2)\n  else:\n    print((N-2)*(M-2))", "n,m = map(int,input().split())\nprint(abs((n-2)*(m-2)))", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(N: int, M: int):\n    if N == 1 and M == 1:\n        print((1))\n    elif N == 1 or M == 1:\n        print((max(N, M)-2))\n    else:\n        print(((N * M) - (2*N) - (2 * M) + 4))\n    return\n\n\n# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    M = int(next(tokens))  # type: int\n    solve(N, M)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque,defaultdict,Counter\nfrom heapq import heapify,heappop,heappush,heappushpop\nfrom copy import copy,deepcopy\nfrom itertools import product,permutations,combinations,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom math import sqrt,gcd,ceil,floor,factorial\n# from fractions import gcd\nfrom functools import reduce\nfrom pprint import pprint\nfrom statistics import mean,median,mode\nimport sys\nsys.setrecursionlimit(10 ** 6)\n\nINF = float('inf')\nmod = 10**9 + 7\n\ndef mycol(data,col):\n    return [ row[col] for row in data ]\n\ndef mysort(data,col,reverse=False):\n    data.sort(key=lambda x:x[col],reverse=revese)\n    return data\n\ndef mymax(data):\n    M = -1*float('inf')\n    for i in range(len(data)):\n        m = max(data[i])\n        M = max(M,m)\n    return M\n\ndef mymin(data):\n    m = float('inf')\n    for i in range(len(data)):\n        M = min(data[i])\n        m = min(m,M)\n    return m\n\ndef mycount(ls,x):\n    # ls\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\n    l = bisect_left(ls,x)\n    r = bisect_right(ls,x)\n    return (r-l)\n\ndef mydictvaluesort(dictionary):\n    return sorted( list(dictionary.items()), key=lambda x:x[1] )\n\ndef mydictkeysort(dictionary):\n    return sorted( list(dictionary.items()), key=lambda x:x[0] )\n\ndef myoutput(ls,space=True):\n    if space:\n        if len(ls)==0:\n            print(' ')\n        elif type(ls[0])==str:\n            print((' '.join(ls)))\n        elif type(ls[0])==int:\n            print((' '.join(map(str,ls))))\n        else:\n            print('Output Error')\n    else:\n        if len(ls)==0:\n            print('')\n        elif type(ls[0])==str:\n            print((''.join(ls)))\n        elif type(ls[0])==int:\n            print((''.join(map(str,ls))))\n        else:\n            print('Output Error')\n\ndef I():\n    return int(input())\n\ndef MI():\n    return list(map(int,input().split()))\n\ndef RI():\n    return list(map(int,input().split()))\n\ndef CI(n):\n    return [ int(input()) for _ in range(n) ]\n\ndef LI(n):\n    return [ list(map(int,input().split())) for _ in range(n) ]\n\ndef S():\n    return input()\n\ndef MS():\n    return input().split()\n\ndef RS():\n    return list(input())\n\ndef CS(n):\n    return [ input() for _ in range(n) ]\n\ndef LS(n):\n    return [ list(input()) for _ in range(n) ]\n\n# ddict = defaultdict(lambda: 0)\n# ddict = defaultdict(lambda: 1)\n# ddict = defaultdict(lambda: int())\n# ddict = defaultdict(lambda: list())\n# ddict = defaultdict(lambda: float())\n\n\n\nn,m = MI()\n\nif n==1 and m==1:\n    print((1))\nelif n==1 and m>=2:\n    print((m-2))\nelif n>=2 and m==1:\n    print((n-2))\nelse:\n    print(((n-2)*(m-2)))\n"]