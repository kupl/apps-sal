["n = int(input())\na = [int(x) for x in input().split()]\nalive = 0\nleft = n\nfor i in range(n - 1, -1, -1):\n    if i < left:\n        alive += 1\n    left = min(left, i - a[i])\nprint(alive)\n", "import math, functools as ft, itertools as it\n\nn = int(input())\na = list(map(int, input().split()))\ncur = a[-1]\nres = 0\nfor i in range(len(a) - 2, -1, -1):\n\tif cur > 0:\n\t\tres += 1\n\tcur = max(cur - 1, a[i])\nprint(n - res)", "n = int(input())\nl = list(map(int, input().split()))\n\nmn = n-1 - l[-1]\nans = 1\nfor i in range(n-2, -1, -1):\n    if i < mn:\n        ans += 1\n    mn = min(mn, i - l[i])\nprint(ans)", "q=int(input())\na=list(map(int,input().split()))\nans=0\nt=q\nfor i in range(q-1,-1,-1):\n    if t>i:\n        ans+=1\n    t=min(t,i-a[i])\nprint(ans)\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn = ii()\nL = li()\nL.reverse()\nt = 0\np = -1\nfor i in range(n):\n    if i > p:\n        t += i - p\n    p = max(p, i + L[i])\nprint(t)\n", "from sys import stdin, stdout\nfrom random import randrange\n\nn = int(stdin.readline())\ncounting = [0 for i in range(n + 10)]\nvalues = list(map(int, stdin.readline().split()))\n\nfor i in range(n):\n    v = values[i]\n    counting[max(0, i - v)] += 1\n    counting[i] -= 1\n\ncnt = n\nfor i in range(n):\n    counting[i] += counting[i - 1]\n    \n    if counting[i]:\n        cnt -= 1\n\nstdout.write(str(cnt))", "n = int(input())\na = [int(i) for i in input().split()][::-1]\nal = 0\ni = 0\nmk = 0\nwhile i < n:\n    if mk == 0:\n        al += 1\n    mk = max(0, mk - 1)\n    mk = max(mk, a[i])\n    i += 1\nprint(al)", "n = int(input())\na = [int(x) for x in input().split()]\nalive = 0\nminKillIndex = n\nfor i in range(n - 1, -1, -1):\n    if i < minKillIndex:\n        alive += 1\n    minKillIndex = min(i - a[i], minKillIndex)\n\nprint(alive)\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    l = list(map(int, sys.stdin.readline().split()))\n    alive = 0\n    alive_indx = n\n    for indx in reversed(list(range(n))):\n        if alive_indx > indx:\n            alive += 1\n        alive_indx = min(alive_indx, indx - l[indx])\n    print(alive)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nl = [int(x) for x in input().split(\" \")]\ns = [1 for i in range(n)]\n\np = n-1\nq = n-1\n\nwhile p>0:\n    while q>p-l[p] and q>0:\n        q -= 1\n        s[q] = 0\n    p-=1\n    q = min(p,q)\n\nprint(sum(s))\n", "n = int(input())\n\nlengths = list(map(int, input().split()))\nlimit = n - 1\nresult = 1\n\nfor i in range(len(lengths) - 1, -1, -1):\n    if limit > i:\n        result += 1\n\n    if limit > i - lengths[i]:\n        limit = i - lengths[i]\n\nprint(result)\n", "N = int(input())\nA = list(map(int, input().split()))\nP = [0 for n in range(N)]\nB = [True for n in range(N)]\nfor n in range(N):\n\tP[n] += -1\n\tP[max(0, n - A[n])] += 1\ntotal = 0\nfor n in range(N):\n\tif n > 0:\n\t\tP[n] += P[n - 1]\n\tif P[n] > 0:\n\t\tB[n] = False\n\nfor n in range(N):\n\tif B[n]:\n\t\ttotal += 1\nprint(total)\n", "n = int(input())\na = list(map(int,input().split()))\nb = [1 for i in range(n)]\nl = n\ni = n - 1\nwhile i>=0:\n    l = max(min(l, i-a[i]),0)\n    r = i-1\n    for i in range(r, l-1, -1):\n        b[i]=0\n        l = max(min(l, i-a[i]),0)\n    if r <=l-1: i -= 1\n\nans = 0\nfor i in b:\n    if i: ans += 1\nprint(ans)", "n = int(input())\nl = list(map(int, input().split()))\n\nans = 0\nc = n\nfor i in range(n - 1, -1, -1):\n    if i < c:\n        ans += 1\n    c = min(c, i - l[i])\nprint(ans)\n\n", "n = int(input())\ndata = list(map(int, input().split()))\ndata.reverse()\nr = data[0]\nans = 1\nfor i in range(1, n):\n    if i > r:\n        ans += 1\n    r = max(r, data[i] + i)\nprint(ans)", "n = int(input())\nm = list(map(int, input().split()))\nlt = m[-1]\nit = len(m) - 1\nans = 1\nfor j in range(len(m) - 2, -1, -1):\n    if j >= it - lt:\n        ans += 0\n    else:\n        ans += 1\n    if j - m[j] < it - lt:\n        it = j\n        lt = m[j]\nprint(ans)", "n = int(input())\nkog = list(map(int, input().split()))\n\nalive = 1\nkill = kog[n - 1]\nfor i in range(n - 2, -1, -1):\n\tif kill == 0:\n\t\talive = alive + 1\n\tkill = max(kill - 1, kog[i])\n\nprint(alive)\n", "n = int(input())\nval = list(map(int, input().split()))\nalive = 0\nmn = n\nfor i in reversed(list(range(n))):\n    if mn == i+1:\n        alive += 1\n        mn = i - val[i]\n    else:\n        mn = min(mn, i-val[i]) if i - val[i] >= 0 else 0\nprint(alive)\n\n", "n = int(input())\nshit = [0 for i in range(n + 1)]\nline = input().split()\nfor i in range(n):\n    claw = int(line[i])\n    shit[i] -= 1\n    pre = i - claw\n    if pre < 0:\n        pre = 0\n    shit[pre] += 1\n    continue\nans = n\ntmp = 0\nfor i in range(n):\n    tmp += shit[i]\n    if tmp > 0:\n        ans -= 1\n    continue\nprint(ans)", "n = int(input())\n\na = list(map(int, input().split()))\n\ndead = 0\ni = n-1\nchange = 1\nwhile i >= 0:\n    change -= 1\n    if change > 0:\n        dead += 1\n    change = max(change, a[i] + 1)\n    i -= 1\n\nprint(n-dead)", "n = int(input())\np = [int(i) for i in input().split()]\n\nkills = 0\nclaw = p[-1]\nfor i in range(n - 2, -1, -1):\n    if claw > 0:\n        kills += 1\n    claw -= 1\n    if p[i] > claw:\n        claw = p[i]\n\nprint(n-kills)\n", "n = int(input())\nL = [int(_) for _ in input().split()]\nalive = 0\nclaw = 0\nfor i in range(len(L)-1,-1,-1):\n    #print(\"i = \"+str(i))\n    if claw == 0:\n        alive += 1\n        claw = L[i]\n        #print(L[i])\n    else:\n        claw -=1\n        if L[i] > claw:\n            claw = L[i]\nprint(alive)\n", "n = int(input())\nppl_delta = [0] * n\nfor i, claw_len in enumerate(map(int, input().split())):\n\tppl_delta[i] += 1\n\tif i - claw_len >= 0:\n\t\tppl_delta[i - claw_len] -= 1\n\nans = 0\ncurrent = 0\n\nfor i in range(n-1, -1, -1):\n\t# print(current, ans)\n\tif current == 0:\n\t\tans += 1\n\tcurrent += ppl_delta[i]\n\nprint(ans)", "t = int(input())\na = list(map(int,input().split()))\ns = len(a)\nx = s-a[s-1]\nalive = s\nfor i in range(s-2,-1,-1):\n    if i+1>=x:\n        alive-=1\n    x = min(x,i-a[i]+1)\n    #print(i,x,alive)\nprint(alive)\n\n", "n = int(input())\na = [int(i) for i in input().split()]\ncount = 0\nleast = n\ni=n\nwhile i>0:\n\ti-=1\n\tif i<least:\n\t\tcount+=1\n\tleast = min( i-a[i],least)\nprint(count)"]