["n = int(input())\none = sum([int(x) for x in input().strip().split()])\ntwo = sum([int(x) for x in input().strip().split()])\nthree = sum([int(x) for x in input().strip().split()])\nprint(one-two)\nprint(two-three)\n\n", "n = int(input())\ne = [sum(map(int, input().split())) for i in range(3)]\nprint(e[0] - e[1])\nprint(e[1] - e[2])\n", "from collections import Counter\ninput()\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nprint(next(iter((Counter(a) - Counter(b)).keys())))\nprint(next(iter((Counter(b) - Counter(c)).keys())))", "\na = int(input())\nx = list(map(int, input().split(' ')))\ny = list(map(int, input().split(' ')))\nz = list(map(int, input().split(' ')))\n\nx.sort()\ny.sort()\ngod = False\nfor i in range(min(len(x), len(y))):\n    if x[i] != y[i]:\n        print(x[i])\n        god = True\n        break\n    \nif not god:\n    print(x[-1])\nz.sort()\ngod = False\nfor i in range(min(len(z), len(y))):\n    if y[i] != z[i]:\n        print(y[i])\n        god = True\n        break\n\nif not god:\n    print(y[-1])\n", "import sys\nread = lambda t=int: list(map(t,sys.stdin.readline().split()))\narray = lambda *ds: [array(*ds[1:]) for _ in range(ds[0])] if ds else 0\n\nfrom collections import Counter\n\n_ = read()\nxs = Counter(read())\nys = Counter(read())\nzs = Counter(read())\nprint(next((xs-ys).elements()))\nprint(next((ys-zs).elements()))\n", "n = int(input().strip())\nattempt1, attempt2, attempt3 = {}, {}, {}\nfor e in map(int, input().strip().split()):\n    attempt1[e] = attempt1.get(e, 0) + 1\n\nfor e in map(int, input().strip().split()):\n    attempt2[e] = attempt2.get(e, 0) + 1\n\nfor e in map(int, input().strip().split()):\n    attempt3[e] = attempt3.get(e, 0) + 1\n\nfor e in attempt1:\n    if e not in attempt2 or attempt2[e] < attempt1[e]:\n        print(e)\n        break\n\nfor e in attempt2:\n    if e not in attempt3 or attempt3[e] < attempt2[e]:\n        print(e)\n        break\n", "n = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nA.sort()\nB.sort()\nC.sort()\n\nans1 = -1\nans2 = -1\na = b = c = 0\nfor i in range(n-1) :\n    if A[a] == B[b] :\n        a += 1\n    else :\n        ans1 = A[a]\n        break\n    b += 1\nif ans1 == -1 :\n    ans1 = A[-1]\n\na = b = c = 0\nfor i in range(n-2) :\n    if B[b] == C[c] :\n        b += 1\n    else :\n        ans2 = B[b]\n        break\n    c += 1\nif ans2 == -1 :\n    ans2 = B[-1]\n\nprint(ans1)\nprint(ans2)\n", "import functools\n\ndef intput():\n    return [int(x) for x in input().split(\" \")]\n\ndef parse():\n    _ = input()\n    first = intput()\n    second = intput()\n    third = intput()\n\n    return first, second, third\n\ndef main(f, s, t):\n    def xor_fold(ls):\n        return functools.reduce(lambda x, y: x ^ y, ls)\n\n    f_sum = xor_fold(f)\n    s_sum = xor_fold(s)\n    t_sum = xor_fold(t)\n\n    print(f_sum ^ s_sum)\n    print(s_sum ^ t_sum)\n\n\nmain(*parse())\n", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\na.sort()\nb.sort()\nfor i in range(n):\n    if i == n - 1:\n        print(a[i])\n    else:\n        if a[i] != b[i]:\n            print(a[i])\n            break\na = [int(x) for x in input().split()]\na.sort()\nfor i in range(n - 1):\n    if i == n - 2:\n        print(b[i])\n    else:\n        if b[i] != a[i]:\n            print(b[i])\n            break\n", "n = input()\nerrors1 = sorted(list(map(int, input().split())), reverse=True)\nerrors2 = sorted(list(map(int, input().split())), reverse=True)\nerrors3 = sorted(list(map(int, input().split())), reverse=True)\n\nlast = True\nfor i in range(len(errors2)):\n    if errors1[i] != errors2[i]:\n        print(errors1[i])\n        last = False\n        break\n\nif last == True:\n    print(errors1[-1])\n\nlast = True\nfor i in range(len(errors3)):\n    if errors2[i] != errors3[i]:\n        print(errors2[i])\n        last = False\n        break\n\nif last == True:\n    print(errors2[-1])\n", "import collections\n\n\ninput()\na = b = None\nfor _ in range(3):\n\n    a, b = b, collections.Counter(str.split(input()))\n    if a is not None:\n\n        print(next(iter(a - b)))\n", "import sys\nfrom collections import Counter\nn=int(sys.stdin.readline())\ni=list(map(float,sys.stdin.readline().split()))\npt=list(map(float,sys.stdin.readline().split()))\no=list(map(float,sys.stdin.readline().split()))\na=Counter(i)\n\nb=Counter(pt)\nq=Counter(o)\n\ngg=a-b\nfor i in gg:\n  print(int(i))\ngg=b-q\nfor i in gg:\n  print(int(i))", "n = int(input())\ninStr = input()\nd0 = {}\nfor e in inStr.split():\n    en = int(e)\n    if not en in d0:\n        d0[int(e)] = 0\n    else:\n        d0[int(e)] = d0[int(e)] + 1\n\ninStr = input()\nd1 = {}\nfor e in inStr.split():\n    en = int(e)\n    if not en in d1:\n        d1[int(e)] = 0\n    else:\n        d1[int(e)] = d1[int(e)] + 1\n\ninStr = input()\nd2 = {}\nfor e in inStr.split():\n    en = int(e)\n    if not en in d2:\n        d2[int(e)] = 0\n    else:\n        d2[int(e)] = d2[int(e)] + 1\n\nans0 = -1\nfor en in d0:\n    if not en in d1 or not d0[en] == d1[en]:\n        ans0 = en\n        break\n\nans1 = -1\nfor en in d1:\n    if not en in d2 or not d1[en] == d2[en]:\n        ans1 = en\n        break\n\nprint(ans0)\nprint(ans1)", "def main():\n    n = int(input())\n    aa = list(map(int, input().split()))\n    bb = list(map(int, input().split()))\n    ai = sorted(range(len(aa)), key=aa.__getitem__)\n    bi = sorted(range(len(bb)), key=bb.__getitem__)\n    res = []\n    for a, b in zip(ai, bi):\n        if aa[a] != bb[b]:\n            break\n    else:\n        a = ai[-1]\n    res.append(aa[a])\n    del aa\n    del ai\n    cc = list(map(int, input().split()))\n    ci = sorted(range(len(cc)), key=cc.__getitem__)\n    for b, a in zip(bi, ci):\n        if bb[b] != cc[a]:\n            break\n    else:\n        b = bi[-1]\n    res.append(bb[b])\n\n    print('\\n'.join(map(str, res)))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=input()\nn=list(input().split())\nm=list(input().split())\nl=list(input().split())\nn.sort()\nm.sort()\nl.sort()\ni=0\nwhile i<len(n):\n    if i==len(m):\n        q=n[i]\n        break\n    elif n[i]!=m[i]:\n        q=n[i]\n        break\n    i+=1\ni=0\nwhile i<len(m):\n    if i==len(l):\n        w=m[i]\n        break\n    elif m[i]!=l[i]:\n        w=m[i]\n        break\n    i+=1\nprint(q)\nprint(w)\n", "from collections import *\nn = input()\nl = [(),(),()]\nfor i in range(3):\n    l[i] = Counter(input().split())\nfor t in l[0]-l[1]:\n    print(int(t))\nfor t in l[1]-l[2]:\n    print(int(t))\n", "# sorry for the source code iam a newbie in Python\nimport collections\nn = int(input())\ns = []\nfor i in range(3):\n    s.append(list(map(int,input().split())))\nprint(list(collections.Counter(s[0]) - collections.Counter(s[1]))[0])\nprint(list(collections.Counter(s[1]) - collections.Counter(s[2]))[0])\n\n", "n=int(input())\na=[input() for i in range(3)]\nfor i in range(3):\n    a[i]=a[i].split()\nfor i in range(3):\n    for j in range(len(a[i])):\n        a[i][j]=int(a[i][j])\nfor i in a:\n    i.sort()\ner1=-1; er2=-1\nfor i in range(n-1):\n    if i<n-1 and er1==-1 and a[0][i]!=a[1][i]:\n        er1=a[0][i]\n    if i<n-2 and er2==-1 and a[1][i]!=a[2][i]:\n        er2=a[1][i]\nif er1==-1: er1=a[0][n-1]\nif er2==-1: er2=a[1][n-2]\nprint(er1)\nprint(er2)", "def leng(x1, y1, x2, y2):\n    return (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\ndef check(x1, y1, x2, y2, x, y):\n    return ((x - x1) / (x2 - x1) * (y2 - y1) + y1 >= y);\nn = int(input())\n\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nd = {}\nd1 = {}\nfor i in range(n):\n    try:\n        d[a[i]] += 1\n    except:\n        d[a[i]] = 1\nfor i in range(n - 1):\n    try:\n        d1[b[i]] += 1\n    except:\n        d1[b[i]] = 1  \n    d[b[i]] -= 1\nfor i in range(n - 2):\n    d1[c[i]] -= 1\nfor i in list(d.keys()):\n    if (d[i] != 0):\n        print(i)\n        break\nfor i in list(d1.keys()):\n    if (d1[i] != 0):\n        print(i)\n        break\n\n\n    \n\n", "a = int(input())\nf = list(map(int, input().split()))\ns = list(map(int, input().split()))\nt = list(map(int, input().split()))\nf.sort()\ns.sort()\nt.sort()\nflag = 0\nfor i in range(len(s)):\n    if f[i] != s[i]:\n        flag = 1\n        x = f[i]\n        break\nif flag == 0:\n    x = f[-1]\nflag = 0\nprint(x)\nfor i in range(len(t)):\n    if s[i] != t[i]:\n        flag = 1\n        x = s[i]\n        break\nif flag == 0:\n    x = s[-1]\nprint(x)", "n = int(input())\ndict_1 = {}\nres1, res2 = 0, 0\nfor i in input().split():\n     if i not in dict_1:\n         dict_1[i] = 1\n     else:\n         dict_1[i] += 1\n\ndict_2 = dict_1.copy()\n#print(dict_1, dict_2)\n\nfor i in input().split():\n    dict_1[i] -= 1\n\nfor i in dict_1:\n    if dict_1[i]:\n        #print(i)\n        res1 = i\n        break\n\ndict_2[res1] -= 1\n\nfor i in input().split():\n    dict_2[i] -= 1\nfor i in dict_2:\n    if dict_2[i]:\n        #print(i)\n        res2 = i\n        break\n\nprint(res1)\nprint(res2)", "n = int(input())\nl1 = list(sorted(list(map(int,input().split()))))\nl2 = list(sorted(list(map(int,input().split()))))+[-1]\nl3 = list(sorted(list(map(int,input().split()))))+[-1,-1]\n\nfor i in range(n):\n    if l1[i] != l2[i]:\n        w = l1[i]\n        break\n\nfor i in range(n):\n    if l2[i] != l3[i]:\n        x = l2[i]\n        break\n\nprint(w)\nprint(x)\n", "n = int(input())\nmylist = [0,0,0]\nimport math\nfor i in range(3):\n    num = input()\n    num = num.split()\n    for j in range(len(num)):\n        num[j] = int(num[j])\n    mylist[i] = sum(num)\nprint(mylist[0] - mylist[1])\nprint(mylist[1] - mylist[2])\n\n    \n            \n", "n = int(input())\na = sorted(map(int, input().split(' ')))\nb = sorted(map(int, input().split(' ')))\nc = sorted(map(int, input().split(' ')))\n\nfor i in range(len(a)) :\n  if i == n - 1 or a[i] != b[i] :\n    print(a[i])\n    break\n\nfor i in range(len(b)) :\n  if i == n - 2 or b[i] != c[i] :\n    print(b[i])\n    break\n\n", "starterrors = int(input())\nerrors1 = input()\nerrors2 = input()\nerrors3 = input()\nerrors = []\n\nnowspace = -1\nerrors.append([])\nfor i in range(starterrors):\n    nextspace = errors1.find(' ', nowspace+1)\n    if nextspace == -1:\n        errors[0].append(int(errors1[nowspace+1:]))\n    else:\n        errors[0].append(int(errors1[nowspace+1:nextspace]))\n    nowspace = nextspace\n\nnowspace = -1\nerrors.append([])\nfor i in range(starterrors-1):\n    nextspace = errors2.find(' ', nowspace+1)\n    if nextspace == -1:\n        errors[1].append(int(errors2[nowspace+1:]))\n    else:\n        errors[1].append(int(errors2[nowspace+1:nextspace]))\n    nowspace = nextspace\n\nnowspace = -1\nerrors.append([])\nfor i in range(starterrors-2):\n    nextspace = errors3.find(' ', nowspace+1)\n    if nextspace == -1:\n        errors[2].append(int(errors3[nowspace+1:]))\n    else:\n        errors[2].append(int(errors3[nowspace+1:nextspace]))\n    nowspace = nextspace\n\nfor i in range(3):\n    errors[i].sort()\n\nfor i in range(starterrors-1):\n    if errors[0][i] != errors[1][i]:\n        print(errors[0][i])\n        break\n    if i == starterrors-2:\n        print(errors[0][i+1])\n        break\n\nfor i in range(starterrors-2):\n    if errors[1][i] != errors[2][i]:\n        print(errors[1][i])\n        break\n    if i == starterrors-3:\n        print(errors[1][i+1])\n        break\n"]