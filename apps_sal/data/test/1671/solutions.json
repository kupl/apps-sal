["diff=0\nx = int(input())\nl = list(map(int, input().split(' ')))\ns = sum(l)\nk = s//x\nknum = (k+1)*x-s\nkpnum = x - knum\na = knum * [k] + [k+1] * kpnum\na.sort()\nl.sort()\nfor i in range(len(a)):\n    diff += abs(a[i]-l[i])\nprint(int(diff/2))", "#!/usr/bin/env python3\n\ndef solve():\n    N = int(input())\n    tasks = list(map(int, input().split()))\n    avg = sum(tasks)//N\n    missing = [max(avg - t, 0) for t in tasks]\n    remaining = [max(t - avg - 1, 0) for t in tasks]\n\n    print(max(sum(missing), sum(remaining)))\n\n\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n=int(input())\nL=[int(x) for x in input().split(' ')]\nL.sort()\ntot=sum(L)\nsmall=tot//n\nnumsmall=n-(tot-small*n)\nans=0\nfor i in range(0,numsmall):\n    ans+=max(0,small-L[i])\nfor i in range(numsmall,n):\n    ans+=max(0,small+1-L[i])\nprint(ans)\n", "def grimper(M):\n    k = 1\n    while M[k]<M[k-1]:\n        M[k],M[k-1] = M[k-1],M[k]\n        k+=1\n    k = n-1\n    while M[k]<M[k-1]:\n        M[k],M[k-1] = M[k-1],M[k]\n        k-=1\n    return M\n\nn = int(input())\nM = list(map(int, input().split()))\ns = sum(M)\nm = s//n\nif s % n:\n    c = 1\nelse:\n    c = 0\nr1 = 0\nr2 = 0\nfor k in range(n):\n    if M[k]<m:\n        r1 += m - M[k]\n    if M[k]>m+c:\n        r2 += M[k] - (m+c)\nprint(max([r1,r2]))\n        \n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nsum = 0\nfor i in range(n):\n    sum += a[i]\nz1 = sum // n\nz2 = sum // n + 1\ncol = sum % n\ncol = n - col\nans = 0\nfor i in range(col):\n    ans += abs(z1 - a[i])\nfor t in range(col, n):\n    ans += abs(a[t] - z2)\nprint(ans // 2)\n", "n = int(input())\nl = list(map(int, input().split()))\ns = sum(l)\nlo = s//n\nhi = s//n + 1\nlo_n = -1\nfor i in range(len(l)+1):\n    if lo*i + hi*(len(l)-i) == s:\n        lo_n = i\n        break\nif lo_n < 0 or lo_n > len(l):\n    assert(False)\nhi_n = n-lo_n\nl = sorted(l)\nl2 = []\nfor i in range(lo_n):\n    l2.append(lo)\nfor i in range(hi_n):\n    l2.append(hi)\nans = 0\nfor i in range(len(l)):\n    ans += abs(l[i]-l2[i])\nprint(ans//2)\n", "n = int(input())\nm = [int(x) for x in input().split()]\nm.sort()\nsum_m = sum(m)\nmean = sum_m // n\ndif = sum_m - mean * n\nres = 0\nfor i in range(n):\n    if i < n - dif:\n        res += abs(m[i] - mean)\n    else:\n        res += abs(m[i] - mean - 1)\nprint(res // 2)\n", "n=int(input())\na=[int(i) for i in input().split()]\na.sort()\nYu=sum(a)%n\npin=sum(a)//n\nre=0\n\nfor i in a:\n    if i<pin:\n        re+=pin-i\n    else:\n        break\n\nif Yu==0:\n    print(re)\nelse:\n    re_2=0\n    for i in a:\n        if i <=pin+1:\n            continue\n        else:\n            re_2+=i-pin-1\n    print(max(re,re_2))\n            \n", "def inpList():\n    return list(map(int,input().split()))\ndef inp():\n    return int(input())\nn=inp()\na=inpList()\nx=sum(a)\np=x//n\nt=x%n\na.sort()\nsuma=0\nfor i in range(n-t):\n    suma+=abs(p-a[i])\nfor i in range(n-t,n):\n    suma+=abs(a[i]-p-1)\nprint(suma//2)\n", "n=int(input())\nl=input().split()\ns=0\nfor i in range(n):\n    l[i]=int(l[i])\n    s+=l[i]\nif(s%n==0):\n    q=s//n\n    r=0\n    for i in range(n):\n        if(l[i]>q):\n            r+=l[i]-q\n    print(r)\nelse:\n    p=s%n\n    q=(s-s%n)//n\n    r=0\n    l.sort()\n    l.reverse()\n    for i in range(n):\n        if(i<p):\n            if(l[i]>q+1):\n                r+=l[i]-q-1\n        else:\n            if(l[i]>q):\n                r+=l[i]-q\n    print(r)", "n=int(input())\na=list(map(int,input().split()))\ns=0\na.sort(reverse=True)\nfor i in range (n):\n    s+=a[i]\ncel=int(s/n)\nost=s%n\ni=0\nkol=0\nwhile a[i]>cel:\n    if ost!=0:\n        kol+=a[i]-cel-1\n        ost-=1\n    else:\n        kol+=a[i]-cel\n    i+=1\nprint(kol)\n", "n, m = int(input()), list(map(int, input().split()))\na, b = sum(m) // n, (sum(m) + n - 1) // n\nprint(max(sum(a - x for x in m if x < a), sum(x - b for x in m if x > b)))\n", "#!/usr/bin/env python3\n\nn = int(input())\narr = list(map(int, input().split()))\nassert len(arr) == n\n\ntotal = sum(arr)\navg1 = total // n\navg2 = avg1 + (0 if total % n == 0 else 1)\n\nseconds = 0\noffset = 0\nfor n in arr:\n    if n < avg1:\n        seconds += (avg1 - n)\n        offset += (avg1 - n)\n    elif n > avg2:\n        seconds += (n - avg2)\n        offset += (avg2 - n)\n\nseconds = (seconds + abs(offset)) // 2\nprint(seconds)\n", "import math\n\nn = int(input())\nlst = [int(i) for i in input().split()]\nlst.sort()\ntotal = sum(lst)\nmore = total - math.floor(total / n) * n\nresult = [ math.floor(total / n) for i in range(n) ]\nfor i in range(n - more, n):\n    result[i] += 1\nsum_move = 0\nfor (ori, res) in zip(lst, result):\n    if ori > res:\n        sum_move = sum_move + (ori - res)\nprint(sum_move)\n", "import math\n\ndef average(args):\n\tsum = 0\n\tcount = 0\n\tfor arg in args:\n\t\tsum += arg\n\t\tcount += 1\n\tif count > 0:\n\t\tsum = sum / count\n\treturn sum\n\nn = int(input())\nargs = [int(x) for x in input().split()]\n\navg = average(args)\n\nup = 0\ndown = 0\nfor arg in args:\n\tif arg > avg:\n\t\tdown += arg - math.ceil(avg)\n\telif arg < avg:\n\t\tup += math.floor(avg) - arg\n\nprint(max(up, down))", "n = int(input())\nm = list(map(int,input().split()))\nss = sum(m)\ndd = ss // n\nmaxdd = ss % n\nmindd = n-maxdd\nans = 0\nfor a in m:\n\tif a>=dd and maxdd == 0:\n\t\tans += a-dd\n\t\tmindd -= 1\n\telif a>dd:\n\t\tif maxdd >0:\n\t\t\tans += a - (dd+1) \n\t\t\tmaxdd -= 1\n\t\telse:\n\t\t\tans ++ a - dd\n\t\t\tmindd -= 1\nprint(ans)\n", "def main():\n    def solve2():\n        a = m[:]\n        cnt = 0\n        t = 1 if Sum % n else 0\n        while max(a) - min(a) != t:\n            mn = a.index(min(a))\n            mx = a.index(max(a))\n            a[mn] += 1\n            a[mx] -= 1\n            cnt += 1\n        return cnt\n    n = int(input())\n    m = list(map(int, input().split()))\n    Sum = sum(m)\n    mid = Sum // n\n    if Sum % n == 0:\n        ans = sum(abs(i - mid) for i in m) // 2\n    else:\n        cntscd = Sum % n\n        cnt = ans = 0\n        for i in m:\n            if i > mid and cnt < cntscd:\n                cnt += 1\n                ans += i - mid - 1\n            else:\n                ans += abs(mid - i)\n        ans += cntscd - cnt\n        ans = ans // 2\n    print(ans)\nmain()\n", "n = int(input())\nservers = list(map(int, input().split()))\ns = sum(servers)\nm = s // n\nmod = s % n\ntotal = 0\nservers.sort()\nfor i in range(n - 1, n - mod - 1, - 1):\n    total += abs(servers[i] - m - 1)\nfor i in range(n - mod - 1, -1, -1):\n    total += abs(servers[i] - m)\nprint(total // 2)", "import math\n\nn = int(input())\nm = input().split()\n\nend = []\n\nfor i in range(len(m)):\n    m[i] = int(m[i])\n\nmin_req = math.floor(sum(m)/len(m))\nremainder = sum(m) % len(m)\n\nm.sort()\n\nfor i in range(len(m)):\n    end.append(min_req)\n\nfor i in range(remainder):\n    end[i] += 1\n\nend.sort()\n\ncounter = 0\n\nfor i in range(len(m)):\n    counter += abs(m[i] - end[i])\n\ncounter /= 2\n\nprint(int(counter))", "from math import *\nn=int(input())\na=list(map(int,input().split(' ')))\nb=[]\nx=0;y=0;sm=0;k=0;o=0\nfor i in range(n):\n    sm+=a[i]\nk=sm//n\nfor i in range(n):\n    b.append(k)\n    if (i<sm%n):\n        b[i]+=1\na.sort()\nb.sort()\nfor i in range(n):\n    o+=abs(a[i]-b[i])\nprint(o//2)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\nn   = int(input())\nm   = [int(i) for i in input().split()]\n\nstart = time.time()\n\ns = divmod(sum(m),n)[0]\n\na1 = 0\na2 = 0\n\nfor i in m:\n    if i < s:\n        a1 += s-i\n\n    if i > s+1:\n        a2 += i-s-1\nprint(max(a1, a2))\nfinish = time.time()\n#print(finish - start)\n", "from math import *\nn=int(input())\na=list(map(int,input().split(' ')))\nb=[]\nx=0;y=0;sm=0;k=0;o=0\nfor i in range(n):\n    sm+=a[i]\nk=sm//n\nfor i in range(n):\n    b.append(k)\n    if (i<sm%n):\n        b[i]+=1\na.sort()\nb.sort()\nfor i in range(n):\n    o+=abs(a[i]-b[i])\nprint(o//2)", "n = int(input())\na =  list(map(int, input().split()))\ns = sum(a)\nl = s // n\nif s % n == 0:\n    r = l\nelse:\n    r = l + 1\nk1 = k2 = 0\nfor x in a:\n    if x < l:\n        k1 += l - x\n    elif x > r:\n        k2 += x - r\nprint(max(k1,k2))", "\nn = int(input())\nservers = list(map(int, input().split()))\nSum = sum(servers)\naverage = Sum//n\nflag = Sum%n == 0\nans = 0\ncnt = 0\nfor i in range(n):\n\tif servers[i] <= average:\n\t\tans += average - servers[i]\n\t\tcnt += 1\nleft = n - cnt\nif not flag:\n\tans += max(Sum%n - left, 0)\n\nprint(ans)\n\n\n"]