["def main():\n    import sys\n    sys.setrecursionlimit(10**9)\n    input = sys.stdin.readline\n\n    N = int(input())\n    S = list(map(int, input().split()))\n    T = list(map(int, input().split()))\n    U = list(map(int, input().split()))\n    V = list(map(int, input().split()))\n\n    range_N = list(range(N))\n    ans = [[0]*N for _ in range_N]\n    # \u8ad6\u7406\u7a4d\n    for i in range_N:\n        if S[i] == 0:\n            for j in range_N:\n                ans[i][j] = ans[i][j] | U[i]\n        if T[i] == 0:   \n            for j in range_N:\n                ans[j][i] = ans[j][i] | V[i]\n    for i in range_N:\n        for j in range_N:\n            if (U[i] & V[j]):\n                ans[i][j] = ans[i][j] | (U[i] & V[j])\n\n    # \u8ad6\u7406\u548c\n    for x in range_N:\n        if S[x] == 0:\n            continue\n        x_sum = ans[x][0]\n        for y in range_N:\n            x_sum = x_sum | ans[x][y]\n        if x_sum == U[x]:\n            continue\n        up = U[x] - x_sum\n        for y in range_N:\n            if T[y]:\n                continue\n            y_mul = ans[0][y]\n            for i in range_N:\n                if i == x:\n                    continue\n                y_mul = y_mul & ans[i][y]\n            up_y = (~y_mul) & up\n            ans[x][y] += up_y\n            up -= up_y\n            if up == 0:\n                break\n\n    for y in range_N:\n        if T[y] == 0:\n            continue\n        y_sum = ans[0][y]\n        for x in range_N:\n            y_sum = y_sum | ans[x][y]\n        if y_sum == V[y]: \n            continue\n        up = V[y] - y_sum\n        for x in range_N:\n            if S[x]:\n                continue\n            x_mul = ans[x][0]\n            for j in range_N:\n                if y == j:\n                    continue\n                x_mul = x_mul & ans[x][j]\n            up_x = (~x_mul) & up\n            ans[x][y] += up_x\n            up -= up_x\n            if up == 0:\n                break\n\n    # \u30c1\u30a7\u30c3\u30af\n    for i in range_N:\n        check_xs = ans[i][0]\n        check_ys = ans[0][i]\n        check_xm = ans[i][0]\n        check_ym = ans[0][i]\n        for j in range_N:\n            check_xs = check_xs | ans[i][j]\n            check_ys = check_ys | ans[j][i]\n            check_xm = check_xm & ans[i][j]\n            check_ym = check_ym & ans[j][i]\n        if (S[i] and U[i] != check_xs) \\\n        or (T[i] and V[i] != check_ys) \\\n        or (S[i] == 0 and U[i] != check_xm) \\\n        or (T[i] == 0 and V[i] != check_ym) :\n            print((-1))\n            return       \n\n    for i in range_N:\n        print((*ans[i]))\n\nmain()\n", "import numpy as np\n\nN = int(input())\n\nS = list(map(int,input().split()))\nT = list(map(int,input().split()))\nU = np.array(list(map(int,input().split())),dtype = np.uint64)\nV = np.array(list(map(int,input().split())),dtype = np.uint64)\n\nans = np.zeros((N,N),dtype = np.uint64)\n\nfor n in range(64):\n  u = (U>>n)&1\n  v = (V>>n)&1\n  su = [int(S[i]*2+u[i]) for i in range(N)]\n  tv = [int(T[i]*2+v[i]) for i in range(N)]\n  suzerozero = []\n  suoneone = []\n  tvzerozero = []\n  tvoneone = []\n  for i in range(N):\n    if su[i] == 0:\n      suzerozero.append(i)\n    if su[i] == 3:\n      suoneone.append(i)\n  for i in range(N):\n    if tv[i] == 0:\n      tvzerozero.append(i)\n    if tv[i] == 3:\n      tvoneone.append(i)\n  \n  b = np.zeros((N,N),dtype = np.uint64)\n  ###\u884c\u306eAND=1\u3068OR=0\u3092\u57cb\u3081\u308b###\n  for i in range(N):\n    if su[i] == 1:\n      b[i] = np.ones(N,int)\n  ###\u5217\u306eAND=1\u3068OR=0\u3092\u57cb\u3081\u308b###\n  for i in range(N):\n    if tv[i] == 1:\n      b[:,i] = np.ones(N,int)\n  ###\u884c\u3068\u5217\u306e\u5024\u304c\u4e00\u81f4\u3059\u308b\u3068\u3053\u308d\u3092\u57cb\u3081\u308b###  \n  b |= np.dot(np.array([u]).T,np.ones((1,N),dtype = np.uint64)) & np.dot(np.array([v]).T,np.ones((1,N),dtype = np.uint64)).T\n  ###\u884c\u306eOR=1\u3092\u6e80\u305f\u3057\u3066\u3044\u304f### \n  if 1 not in tv and 3 not in tv:\n    m = len(tvzerozero)\n    now = 0\n    for i in suoneone:\n      b[i][tvzerozero[now%m]] += 1\n      now += 1\n  ###\u5217\u306eOR=1\u3092\u6e80\u305f\u3057\u3066\u3044\u304f### \n  if 1 not in su and 3 not in su:\n    m = len(suzerozero)\n    now = 0\n    for i in tvoneone:\n      b[suzerozero[now%m]][i] += 1\n      now += 1\n  ans += b<<n\n\ndef end():\n  print((-1))\n  return\nfor i in range(N):\n  if S[i] == 0:\n    now = ans[i][0]\n    for j in range(1,N):\n      now &= ans[i][j]\n  if S[i] == 1:\n    now = ans[i][0]\n    for j in range(1,N):\n      now |= ans[i][j]\n  if now != U[i]:\n    end()\nfor i in range(N):\n  if T[i] == 0:\n    now = ans[0][i]\n    for j in range(1,N):\n      now &= ans[j][i]\n  if T[i] == 1:\n    now = ans[0][i]\n    for j in range(1,N):\n      now |= ans[j][i]\n  if now != V[i]:\n    end()\n\nfor item in ans:\n  print((*list(item)))\n", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\n\ndef main():\n    n = int(input())\n    ans = [[0 for _ in range(n)] for _ in range(n)]\n    s = list(map(int, input().split()))\n    t = list(map(int, input().split()))\n    u = list(map(int, input().split()))\n    v = list(map(int, input().split()))\n    for i in range(n):\n        if not s[i]:\n            for j in range(n):\n                ans[i][j] = ans[i][j]|u[i]\n        if not t[i]:   \n            for j in range(n):\n                ans[j][i] = ans[j][i]|v[i]\n    for i in range(n):\n        for j in range(n):\n            if (u[i] & v[j]):\n                ans[i][j] = ans[i][j]|(u[i]&v[j])\n    for x in range(n):\n        if not s[x]:\n            continue\n        x_sum = ans[x][0]\n        for y in range(n):\n            x_sum = x_sum|ans[x][y]\n        if x_sum == u[x]: \n            continue\n        up = u[x] - x_sum\n        for y in range(n):\n            if t[y]:\n                continue\n            y_mul = ans[0][y]\n            for i in range(n):\n                if i == x:\n                    continue\n                y_mul = y_mul&ans[i][y]\n            up_y = (~y_mul)&up\n            ans[x][y] += up_y\n            up -= up_y\n            if not up:\n                break\n    for y in range(n):\n        if not t[y]:\n            continue\n        y_sum = ans[0][y]\n        for x in range(n):\n            y_sum = y_sum|ans[x][y]\n        if y_sum == v[y]: \n            continue\n        up = v[y] - y_sum\n        for x in range(n):\n            if s[x]:\n                continue\n            x_mul = ans[x][0]\n            for j in range(n):\n                if y == j:\n                    continue\n                x_mul = x_mul&ans[x][j]\n            up_x = (~x_mul)&up\n            ans[x][y] += up_x\n            up -= up_x\n            if not up:\n                break\n    for i in range(n):\n        check_xs = ans[i][0]\n        check_ys = ans[0][i]\n        check_xm = ans[i][0]\n        check_ym = ans[0][i]\n        for j in range(n):\n            check_xs = check_xs|ans[i][j]\n            check_ys = check_ys|ans[j][i]\n            check_xm = check_xm&ans[i][j]\n            check_ym = check_ym&ans[j][i]\n        if s[i] and u[i] != check_xs:\n            print(-1)\n            return       \n        if t[i] and v[i] != check_ys:\n            print(-1)\n            return       \n        if not s[i] and u[i] != check_xm:\n            print(-1)\n            return       \n        if not t[i] and v[i] != check_ym:\n            print(-1)\n            return\n    for i in range(n):\n        print(*ans[i])\n\ndef __starting_point():\n    main()\n__starting_point()"]