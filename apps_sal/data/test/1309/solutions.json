["n = int(input())\n#n = 2*n\nx = list(map(int, input().split()))\n\nx.sort()\n\nmn = 10**10\nfor a in range(2*n):\n\tfor b in range(a+1, 2*n):\n\t\t# exclude a, b\n\t\tp = x[:a] + x[a+1:b] + x[b+1:]\n\t\t#print(a, b, p)\n\t\tsm = 0\n\t\tfor i in range(n-1):\n\t\t\tsm += p[2*i+1] - p[2*i]\n\t\tmn = min(mn, sm)\n\nprint(mn)\n", "\nN = 2*int(input())\nW = list(map(int,input().split()))\nW.sort()\n\nfrom itertools import combinations\n\ndef it():\n\n  for i,j in combinations(list(range(N)),r=2):\n    k = 0\n    cnt = 0\n    w = None\n    for k in range(N):\n      if not (k == i or k == j):\n        if w is None:\n          w = W[k]\n        else:\n          cnt += abs(w-W[k])\n          w = None\n\n    yield cnt\n\nprint(min(it()))\n", "def solve():\n\n    n = int(input())\n    w = [int(st) for st in input().split(\" \")]\n    w.sort()\n\n    ans = 2**31\n    ansi, ansj = None, None\n    for i in range(0, 2*n-1, 2):\n        for j in range(i+1, 2*n, 2):\n            # pick i and j\n            #print(\"Looking\", i, j)\n            s = 0\n            for k in range(0, i-1, 2):\n                #print(k, k+1)\n                s += w[k+1] - w[k]\n            for k in range(i+1, j-1, 2):\n                #print(k, k+1)\n                s += w[k+1] - w[k]\n            for k in range(j+1, 2*n-1, 2):\n                #print(k, k+1)\n                s += w[k+1] - w[k]\n\n            if s < ans:\n                ans = s\n                ansi = i\n                ansj = j\n                \n    #print(ansi, ansj)\n\n    return ans\n\nprint(solve())\n", "n = int(input())\nw = list(map(int, input().split()))\nw.sort()\nans = 50000\nfor i in range(2 * n - 1):\n    for j in range(i + 1, 2 * n):\n        tmp = 0\n        for k in range(2 * n):\n            if k < i or j < k:\n                if k % 2 == 0:\n                    tmp -= w[k]\n                else:\n                    tmp += w[k]\n            elif i < k < j:\n                if k % 2 == 1:\n                    tmp -= w[k]\n                else:\n                    tmp += w[k]\n        ans = min(ans, tmp)\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\ncap = []\nres = []\nfor i in range(0, 2*n - 1, 2):\n    for j in range(i+1, 2*n, 2):\n        f = 0\n        first = 1\n        cap = []\n        for k in range(2*n):\n            if k == i or k == j:\n                continue\n            if first:\n                f = a[k]\n                first = 0\n            else:\n                first = 1\n                cap.append(abs(a[k] - f))\n        result = sum(cap)\n        res.append(result)\n\nprint(min(res))\n\n\n", "n = int(input())\nn *= 2\na = [int(i) for i in input().split()]\na.sort()\nans = 100000000\nfor i in range(n):\n    for j in range(i + 1, n):\n        b = a[:i] + a[i+1:j] + a[j + 1:]\n        cr = 0\n        for k in range(1, len(b), 2):\n            cr += b[k] - b[k - 1]\n        ans = min(ans, cr)\nprint(ans)\n", "n=int(input())\nw=list(map(int,input().split()))\nw.sort()\nstab1=0\nstab2=0\nstab3=0\nstabmin=99999999999999999\n\nfor i in range(2*n):\n    for j in range(i+1,2*n):\n        temp=w.copy()\n        del temp[i]\n        del temp[j-1]\n        stab1=0\n        \n        for k in range(n-1):\n            stab1+=temp[2*k+1]-temp[2*k]\n        stabmin=min(stab1,stabmin)\nprint(stabmin)\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nan = 10 ** 9\n\nfor i in range(2 * n):\n    for j in range(i + 1, 2 * n):\n        if i == j:\n            continue\n        b = a[:]\n        del b[j], b[i]\n        c = 0\n        for k in range(0, 2 * n - 2, 2):\n            c += abs(b[k] - b[k + 1])\n        an = min(an, c)\n        #print(an, b)\nprint(an)\n", "n = int(input())\ns = list(map(int, input().split()))\ns = list(sorted(s))\nansm = 100000000\nfor i in range(len(s)):\n    s1 = s[:i] + s[i+1:]\n    for j in range(len(s1)):\n        s2 = s1[:j]+s1[j+1:]\n        ans = 0\n        for i in range(1, 2*n - 2, 2):\n            ans += s2[i] - s2[i-1]\n        if ans < ansm:\n            ansm = ans\nprint(ansm)", "#!/usr/bin/env python3\n# encoding: utf-8\n\n\n\n#----------\n# Constants\n#----------\n\n\n\n#----------\n# Functions\n#----------\n\n# Reads a string from stdin, splits it by space chars, converts each\n# substring to int, adds it to a list and returns the list as a result.\ndef get_ints():\n    return [ int(n) for n in input().split() ]\n\n\n# Reads a string from stdin, splits it by space chars, converts each substring\n# to floating point numbber, adds it to a list and returns the list as a result.\ndef get_floats():\n    return [ float(n) for n in input().split() ]\n\n\ndef calc(w, rid):\n    plus = True\n    val = 0\n    for i, t in enumerate(w):\n        if i not in rid:\n            if plus:\n                val += t\n            else:\n                val -= t\n            plus = not plus\n    return val\n\n\n#----------\n# Execution start point\n#----------\n\ndef __starting_point():\n    a = get_ints()\n    assert len(a) == 1\n    n = a[0]\n    count = 2 * n\n\n    w = get_ints()\n    assert len(w) == count\n    w.sort(reverse=True)\n\n    best = list()\n    for i in range(count):\n        for j in range(i+1, count):\n            best.append(calc(w, [i, j]))\n\n    print(min(best))\n\n__starting_point()", "n = int(input())\nv = [int(i) for i in input().split()]\nv = sorted(v)\n\ndef dp(i, chosen):\n    if chosen == 0:\n        d = 0\n        while i < len(v):\n            d += v[i+1] - v[i]\n            i += 2\n        return d\n    if i >= len(v) - 1:\n        return 0\n    return min(v[i+1] - v[i] + dp(i+2, chosen), dp(i+1, chosen-1))\n\nprint(dp(0, 2))\n", "import itertools\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nans=10000000\nfor i in range(2*n):\n    for j in range(i+1,2*n):\n        x=0\n        b=a+[]\n        del b[i],b[j-1]\n        for k in range(0,2*(n-1),2):\n            x+=abs(b[k]-b[k+1])\n        if x<ans:\n            ans=x\nprint(ans)\n            \n", "n = int(input())\nw = list(map(int,input().split()))\nw.sort()\ninstability = list()\nfor i in range(2*n):\n    for j in range(i+1, 2*n):\n        cnt = 0\n        for k in range(2*n):\n            if k < i or k > j:\n                if k % 2 == 0:\n                    cnt -= w[k]\n                else:\n                    cnt += w[k]\n            if k > i and k < j:\n                if k % 2 == 0:\n                    cnt += w[k]\n                else:\n                    cnt -= w[k]\n        instability.append(cnt)\nprint(min(instability))\n                \n                \n        \n", "n = int(input())\n\nw = sorted(map(int, input().split()))\nans = 1e100\nfor i in range(2 * n):\n\tfor j in range(i + 1, 2 * n):\n\t\tprev = -1\n\t\ts = 0\n\t\tfor k in range(2 * n):\n\t\t\tif k == i or k == j:\n\t\t\t\tcontinue\n\t\t\tif prev == -1:\n\t\t\t\tprev = w[k]\n\t\t\telse:\n\t\t\t\ts += w[k] - prev\n\t\t\t\tprev = -1\n\t\tans = min(ans, s)\nprint(ans)", "n = int(input())\n\nw = sorted(map(int, input().split()))\nans = 1e100\nfor i in range(2 * n):\n\tfor j in range(i + 1, 2 * n):\n\t\tprev = -1\n\t\ts = 0\n\t\tfor k in range(2 * n):\n\t\t\tif k == i or k == j:\n\t\t\t\tcontinue\n\t\t\tif prev == -1:\n\t\t\t\tprev = w[k]\n\t\t\telse:\n\t\t\t\ts += w[k] - prev\n\t\t\t\tprev = -1\n\t\tans = min(ans, s)\nprint(ans)", "from itertools import combinations, chain\nfrom math import inf\n\ndef take(s):\n    return sum([abs(s[i] - s[i+1]) for i in range(0, 2*n-2, 2)])\n\nn = int(input())\nwi = sorted(map(int, input().split()))\nminimum = inf\nfor lonely_couple in combinations(list(range(2*n)), 2):\n    sample = list(chain(wi[:lonely_couple[0]], wi[lonely_couple[0]+1:lonely_couple[1]], wi[lonely_couple[1]+1:]))\n    minimum = min(minimum, take(sample))\nprint(minimum)\n\n\n\n\"\"\"\n4\n1 3 4 6 3 4 1000 200\n\"\"\"\n", "from sys import stdin, stdout\n\nn = int(stdin.readline())\nvalues = sorted(list(map(int, stdin.readline().split())))\nans = float('inf')\n\nfor i in range(2 * n):\n    for j in range(i + 1, 2 * n):     \n        res = []\n        \n        for z in range(2 * n):\n            if z == i or z == j:\n                continue\n            \n            res.append(values[z])\n        \n        cnt = 0\n        for q in range(0, len(res), 2):\n            cnt += res[q + 1] - res[q]\n        \n        ans = min(ans, cnt)\n\nstdout.write(str(ans))", "n = int(input())\narr = [int(el) for el in input().split()]\narr.sort()\nd_rez = []\nm = 99999999\nl = len(arr)\nfor i in range(0, l - 1):\n    for j in range(i + 1, l):\n        a = arr.pop(i)\n        b = arr.pop(j - 1)\n        size = l - 2\n        diff = []\n        s = 0\n\n        for h in range(0,size,2):\n            s = s + arr[h+1]-arr[h]\n\n        if s < m:\n            m = s\n            d_rez = arr\n        arr.append(a)\n        arr.append(b)\n        arr.sort()\nprint(m)", "def readln(): return list(map(int, input().rstrip().split()))\n\n\ndef cal(dt):\n    rs = 0\n    for i in range(len(dt) // 2):\n        rs += abs(dt[2 * i] - dt[2 * i + 1])\n    return rs\n\n\nn = int(input())\ndata = list(readln())\ndata.sort()\n\nminw = 500000\n\nfor i in range(0, 2 * n - 1):\n    for j in range(i + 1, 2 * n):\n        dt = list(data)\n        dt.pop(max(i, j))\n        dt.pop(min(i, j))\n        rs = cal(dt)\n        if rs < minw:\n            minw = rs\n\nprint(minw)\n", "n=2*int(input())\nw=sorted(map(int,input().split()))\nr=10000\nfor i in range(n):\n    wi=w.pop(i)\n    for j in range(i):\n        wj=w.pop(j)\n        d=[w[i+1]-w[i] for i in range(0,n-3,2)]\n        r=min(r,sum(d))\n        w.insert(j,wj)\n    w.insert(i,wi)\nprint(r)\n", "n=2*int(input())\nw=sorted(map(int,input().split()))\nr=10000\nfor i in range(n):\n    wi=w.pop(i)\n    for j in range(i):\n        wj=w.pop(j)\n        r=min(r,sum(w[i+1]-w[i] for i in range(0,n-3,2)))\n        w.insert(j,wj)\n    w.insert(i,wi)\nprint(r)\n", "n = int(input())\nval = list(map(int, input().split()))\nval.sort()\nb_a = 10 ** 9\nfor i in range(len(val) - 1):\n    for j in range(i + 1, len(val)):\n        if i == j:\n            continue\n        ans = 0\n        a, b = val[i], val[j]\n        val.pop(j)\n        val.pop(i)\n        ans = 0\n        for k in range(len(val)):\n            if k % 2 == 0:\n                ans += abs(val[k + 1] - val[k])\n        b_a = min(b_a, ans)\n        val.insert(i, a)\n        val.insert(j, b)\nprint(b_a)", "n = int(input())\nw = list(map(int, input().split()))\n\nw.sort()\n\nd = []\n\n# \u0420\u0435\u0448\u0430\u0435\u043c \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u043e\u043c, \u0432\u044b\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u043c \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430 2 \u043a\u0430\u044f\u043a\u0435\u0440\u043e\u0432 \u0438\n# \u043d\u0430\u0445\u043e\u0434\u0438\u043c \u0441\u0443\u043c\u043c\u0443 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0435\u0439 \u0432\u0435\u0441\u043e\u0432 \u0443 \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0445\u0441\u044f, \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044e\nfor i in range(0, 2 * n):\n    for j in range(i + 1, 2 * n):\n        if i == j:\n            continue\n\n        tw = list(w)\n        tw.pop(i)\n        tw.pop(j - 1)\n\n        td = 0  \n        for k in range(0, len(tw), 2):\n            td += tw[k + 1] - tw[k]\n\n        d.append(td)\n\nprint(min(d))\n", "n=2*int(input())\nw=sorted(map(int,input().split()))\nr=10000\nfor i in range(n):\n    for j in range(i):\n        u=[w[k] for k in range(n) if i!=k!=j]\n        r=min(r,sum(u[i+1]-u[i] for i in range(0,n-3,2)))\nprint(r)\n", "n=2*int(input())\nw=sorted(map(int,input().split()))\nr=10000\nfor i in range(n):\n    for j in range(i):\n        u=w[:j]+w[j+1:i]+w[i+1:]\n        r=min(r,sum(u[i+1]-u[i] for i in range(0,n-3,2)))\nprint(r)\n"]