["mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    N, K = list(map(int, input().split()))\n\n    if K == 1:\n        if N == 1:\n            print((1))\n        else:\n            print((pow(2, N - 2, mod)))\n        return\n\n    dp = [[0] * (N+1) for _ in range(K-1)]\n    for j in range(2, N+1):\n        dp[0][j] = 1\n    for i in range(1, K-1):\n        cs = [0] * (N+1)\n        for j in range(1, N+1):\n            cs[j] = (cs[j-1] + dp[i-1][j])%mod\n        for j in range(2, N+1):\n            if j != N - i + 1:\n                dp[i][j] = (dp[i][j] + dp[i-1][j])%mod\n            dp[i][j] = (dp[i][j] + cs[-1] - cs[j])%mod\n    ans = 0\n    for j in range(2, N+1):\n        ans = (ans + dp[-1][j])%mod\n    if K != N:\n        ans = (ans * pow(2, N - K - 1, mod))%mod\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,K=map(int,input().split())\nG=[1]+[0]*N\nfor i in range(K):\n for j in range(i,N):G[j+1]+=G[j]\nprint((G[-2]<<N-K-(K<N))%(10**9+7))", "N,K=map(int,input().split())\nG=[1]+[0]*N\nfor i in range(K):\n for j in range(i,N):G[j+1]+=G[j]\nprint((G[-2]<<max(0,N+~K))%(10**9+7))", "def cmb(n, r, mod):#\u30b3\u30f3\u30d3\u30cd\u30fc\u30b7\u30e7\u30f3\u306e\u9ad8\u901f\u8a08\u7b97\u3000\n    if ( r<0 or r>n ):\n        return 0\n    r = min(r, n-r)\n    return g1[n] * g2[r] * g2[n-r] % mod\n\nmod = 10**9+7 #\u51fa\u529b\u306e\u5236\u9650\nN = 5000\ng1 = [1, 1] # \u5143\u30c6\u30fc\u30d6\u30eb\ng2 = [1, 1] #\u9006\u5143\u30c6\u30fc\u30d6\u30eb\ninverse = [0, 1] #\u9006\u5143\u30c6\u30fc\u30d6\u30eb\u8a08\u7b97\u7528\u30c6\u30fc\u30d6\u30eb\n\nfor i in range( 2, N + 1 ):\n    g1.append( ( g1[-1] * i ) % mod )\n    inverse.append( ( -inverse[mod % i] * (mod//i) ) % mod )\n    g2.append( (g2[-1] * inverse[-1]) % mod )\n\nN,K=map(int,input().split())\n\nif N==1:\n    print(1)\nelif K==1:\n    print(pow(2,N-2,mod))\nelif K==N:\n    dp=[[0 for i in range(K+1)] for j in range(K)]\n    imos=[0]*(K+1)\n\n    dp[0][K]=1\n    imos[K]=1\n\n    for i in range(1,K):\n        for j in range(K-i,K+1):\n            if j==K-i:\n                dp[i][j]=(imos[K]-imos[j])%mod\n            else:\n                dp[i][j]=(dp[i-1][j]+imos[K]-imos[j])%mod\n        imos=[dp[i][j] for j in range(K+1)]\n        for j in range(1,K+1):\n            imos[j]+=imos[j-1]\n            imos[j]%=mod\n    print(dp[N-1][1])\nelse:\n    dp=[[0 for i in range(K+1)] for j in range(K)]\n    imos=[0]*(K+1)\n\n    dp[0][K]=1\n    imos[K]=1\n\n    for i in range(1,K):\n        for j in range(K-i,K+1):\n            if j==K-i:\n                dp[i][j]=(imos[K]-imos[j])%mod\n            else:\n                dp[i][j]=(dp[i-1][j]+imos[K]-imos[j])%mod\n        imos=[dp[i][j] for j in range(K+1)]\n        for j in range(1,K+1):\n            imos[j]+=imos[j-1]\n            imos[j]%=mod\n\n    ans=0\n    for M in range(N-K+1,N+1):\n        id=M-N+K\n        ans+=dp[K-1][id]*cmb(M-2,N-K-1,mod)\n\n    ans*=pow(2,N-K-1,mod)\n    print(ans%mod)"]