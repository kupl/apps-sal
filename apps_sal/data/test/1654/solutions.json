["s = input()\nt = input()\nabc = 'abcdefghijklmnopqrstuvwxyz'\ndabc ={}\nfor i in range(26):\n\tdabc[abc[i]] = i\n\nlt = {}\nls = {}\ndd = {}\nls['?'] = 0\nfor i in abc:\n\tlt[i] = 0\n\tls[i] = 0\n\tdd[i] = 0\nfor letter in t:\n\tlt[letter] += 1\nfor letter in s:\n\tls[letter] +=1\n\nX = ls['?']\ndef check(ans):\n\tnonlocal ls, lt, abc, X\n\treturn -sum(min(0, ls[l] - lt[l] * ans) for l in abc) <= X\n\nstart, end = [0, 2000000]\ni = 0\nwhile start < end:\n\tst = start + end\n\tans = (st + st%2)//2\n\tif check(ans):\n\t\tstart = ans\n\telse:\n\t\tend = ans - 1\nans = start\n\n\nfor letter in abc:\n\tdd[letter] = max(0, lt[letter] * ans - ls[letter])\n\tX -= max(0, lt[letter] * ans - ls[letter])\n\ns1 = ['']\nj = 0\nfor i in s:\n\tif i != '?':\n\t\ts1.append(i)\n\telse:\n\t\ttry:\n\t\t\twhile dd[abc[j]] == 0:\n\t\t\t\tj +=1\n\t\t\ts1.append(abc[j])\n\t\t\tdd[abc[j]] -= 1\n\t\texcept:\n\t\t\ts1.append('z')\n\nprint(''.join(s1))\n", "s = list(input())\nt = input()\nabc = 'abcdefghijklmnopqrstuvwxyz'\ndabc ={}\nfor i in range(26):\n\tdabc[abc[i]] = i\n\nlt = {}\nls = {}\ndd = {}\nls['?'] = 0\nfor i in abc:\n\tlt[i] = 0\n\tls[i] = 0\n\tdd[i] = 0\nfor letter in t:\n\tlt[letter] += 1\nfor letter in s:\n\tls[letter] +=1\n\nX = ls['?']\ndef check(ans):\n\tnonlocal ls, lt, abc, X\n\treturn -sum(min(0, ls[l] - lt[l] * ans) for l in abc) <= X\n\nstart, end = [0, 2000000]\ni = 0\nwhile start < end:\n\tst = start + end\n\tans = (st + st%2)//2\n\tif check(ans):\n\t\tstart = ans\n\telse:\n\t\tend = ans - 1\nans = start\n\n\nfor letter in abc:\n\tdd[letter] = max(0, lt[letter] * ans - ls[letter])\n\tX -= max(0, lt[letter] * ans - ls[letter])\n\nj = 0\nfor i in range(len(s)):\n\tif s[i] == '?':\n\t\ttry:\n\t\t\twhile dd[abc[j]] == 0:\n\t\t\t\tj +=1\n\t\t\ts[i] = abc[j]\n\t\t\tdd[abc[j]] -= 1\n\t\texcept:\n\t\t\ts[i] = 'z'\nprint(''.join(s))\n", "from collections import Counter\n\nA = input()\nAC = Counter(A)\n\nB = input()\nBC = Counter(B)\n\nletters = [chr(ord('a') + i) for i in range(ord('z') - ord('a') + 1)]\n\nresult = 0\n\na, b, c = 0, len(A) + 1, 0\n\n#for k in range(len(A) - len(B) + 1):\n#    needed = 0\n#    for x in letters:\n#        needed += max([0, k * BC[x] - AC[x]])\n#\n#    if needed <= AC['?']:\n#        result = k\n#    else:\n#        break\n\nwhile a < b:\n    c = (a + b) // 2\n\n    needed = 0\n    for x in letters:\n        needed += max([0, c * BC[x] - AC[x]])\n\n    if needed <= AC['?']:\n        a = c + 1\n    else:\n        b = c\n\nresult = a - 1\n\nC = list(A)\n\ni = 0\nfor x in letters:\n    cneed = max([0, result * BC[x] - AC[x]])\n    while cneed > 0:\n        if C[i] == '?':\n            C[i] = x\n            cneed -= 1\n        i += 1\n\nwhile i < len(A):\n    if C[i] == '?':\n        C[i] = 'z'\n    i += 1\n\nprint(''.join(C))\n", "from collections import Counter\n\nA = input()\nAC = Counter(A)\n\nB = input()\nBC = Counter(B)\n\nletters = [chr(ord('a') + i) for i in range(ord('z') - ord('a') + 1)]\n\nresult = 0\n\na, b, c = 0, len(A) + 1, 0\n\n#for k in range(len(A) - len(B) + 1):\n#    needed = 0\n#    for x in letters:\n#        needed += max([0, k * BC[x] - AC[x]])\n#\n#    if needed <= AC['?']:\n#        result = k\n#    else:\n#        break\n\nwhile a < b:\n    c = (a + b) // 2\n\n    needed = 0\n    for x in letters:\n        needed += max([0, c * BC[x] - AC[x]])\n\n    if needed <= AC['?']:\n        a = c + 1\n    else:\n        b = c\n\nresult = a - 1\n\nC = list(A)\n\ni = 0\nfor x in letters:\n    cneed = max([0, result * BC[x] - AC[x]])\n    while cneed > 0:\n        if C[i] == '?':\n            C[i] = x\n            cneed -= 1\n        i += 1\n\nwhile i < len(A):\n    if C[i] == '?':\n        C[i] = 'z'\n    i += 1\n\nprint(''.join(C))\n"]