["import sys\nreadline = sys.stdin.readline\n\ndef parorder(Edge, p):\n    N = len(Edge)\n    par = [0]*N\n    par[p] = -1\n    stack = [p]\n    order = []\n    visited = set([p])\n    ast = stack.append\n    apo = order.append\n    while stack:\n        vn = stack.pop()\n        apo(vn)\n        for vf in Edge[vn]:\n            if vf in visited:\n                continue\n            visited.add(vf)\n            par[vf] = vn\n            ast(vf)\n    return par, order\n\ndef getcld(p):\n    res = [[] for _ in range(len(p))]\n    for i, v in enumerate(p[1:], 1):\n        res[v].append(i)\n    return res\n\n\nN = int(readline())\nMOD = 998244353\nEdge = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, readline().split())\n    a -= 1\n    b -= 1\n    Edge[a].append(b)\n    Edge[b].append(a)\n\nP, L = parorder(Edge, 0)\nC = getcld(P)\n\ndp = [[1, 1, 0, 0, 1] for _ in range(N)]\nfor p in L[::-1]:\n    if not C[p]:\n        continue\n    res = 1\n    res2 = 1\n    res3 = 1\n    for ci in C[p]:\n        res = (res*(dp[ci][2] + dp[ci][3] + dp[ci][4])) % MOD\n        res2 = (res2*(dp[ci][1] + dp[ci][2] + 2*dp[ci][3] + dp[ci][4])) % MOD\n        res3 = (res3*(sum(dp[ci]) + dp[ci][2] + dp[ci][3])) % MOD\n    dp[p][0] = res\n    dp[p][1] = res\n    dp[p][2] = (res2 - res)%MOD\n    dp[p][3] = (res3 - res)%MOD\n    dp[p][4] = res\nprint((dp[0][2] + dp[0][3] + dp[0][4] - 1) %MOD)", "import sys\nreadline = sys.stdin.readline\n \ndef parorder(Edge, p):\n    N = len(Edge)\n    par = [0]*N\n    par[p] = -1\n    stack = [p]\n    order = []\n    visited = set([p])\n    ast = stack.append\n    apo = order.append\n    while stack:\n        vn = stack.pop()\n        apo(vn)\n        for vf in Edge[vn]:\n            if vf in visited:\n                continue\n            visited.add(vf)\n            par[vf] = vn\n            ast(vf)\n    return par, order\n \ndef getcld(p):\n    res = [[] for _ in range(len(p))]\n    for i, v in enumerate(p[1:], 1):\n        res[v].append(i)\n    return res\n \n \nN = int(readline())\nMOD = 998244353\nEdge = [[] for _ in range(N)]\nfor _ in range(N-1):\n    a, b = map(int, readline().split())\n    a -= 1\n    b -= 1\n    Edge[a].append(b)\n    Edge[b].append(a)\n \nP, L = parorder(Edge, 0)\nC = getcld(P)\n \ndp = [[1, 1, 0, 0, 1] for _ in range(N)]\nfor p in L[::-1]:\n    if not C[p]:\n        continue\n    res = 1\n    res2 = 1\n    res3 = 1\n    for ci in C[p]:\n        res = (res*(dp[ci][2] + dp[ci][3] + dp[ci][4])) % MOD\n        res2 = (res2*(dp[ci][1] + dp[ci][2] + 2*dp[ci][3] + dp[ci][4])) % MOD\n        res3 = (res3*(sum(dp[ci]) + dp[ci][2] + dp[ci][3])) % MOD\n    dp[p][0] = res\n    dp[p][1] = res\n    dp[p][2] = (res2 - res)%MOD\n    dp[p][3] = (res3 - res)%MOD\n    dp[p][4] = res\nprint((dp[0][2] + dp[0][3] + dp[0][4] - 1) %MOD)"]