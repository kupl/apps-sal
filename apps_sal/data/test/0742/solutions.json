["from sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\ndef solve(n, b):\n    f = [True for i in range(2*n+1)]\n    for x in b:\n        if not f[x]:\n            return [-1]\n        f[x] = False\n    a = []\n    for x in b:\n        a.append(x)\n        for y in range(x+1, 2*n+1):\n            if f[y]:\n                a.append(y)\n                f[y] = False\n                break\n        else:\n            return [-1]\n    return a\n\nt, = rl()\nfor _ in range(t):\n    print(*solve(rl()[0], rl()))\n", "# \u041a\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 Python 3\nimport sys\nimport bisect\n\ndef main():\n    n =  int(sys.stdin.readline())\n    q = [int(i) for i in sys.stdin.readline().split()]\n    w = []\n    for i in range(1, 2 * n + 1):\n        if i not in q:\n            w.append(i)\n    w.sort()\n    res = [0 for i in range(2*n)]\n    for i in range(n):\n        res[i * 2] = q[i]\n    for i in range(n - 1):\n        e = bisect.bisect(w, q[i])\n        if e != n - i:\n            r = w[e]\n            del w[e]\n            res[i * 2 + 1] = r\n        else:\n            print(-1)\n            return 0\n    if w[-1] < q[-1]:\n        print(-1)\n        return 0\n    else:\n        res[-1] = w[-1]\n        print(*res)\n    \n        \nfor test in range(int(sys.stdin.readline())):\n    main()", "t=int(input())\n\ndef f():\n    n=int(input())\n    b=list(map(int,input().split()))\n    a=[b[i//2] if i % 2==0 else 0 for i in range(n*2)]\n    used = 2*n*[0]+[0]\n    for i in a:\n        used[i] = 1\n    for i in range(1,2*n,2):\n        l = a[i-1]\n        j=l+1\n        while j<=2*n and used[j]:\n            j+=1\n        if j>2*n:\n            print(-1)\n            return\n        a[i] = j\n        used[j]=1\n    print(*a)\n\nfor tt in range(t):\n    f()", "# from collections import defaultdict\n\nfor _ in range(int(input())):\n\tn = int(input())\n\tb = list(map(int, input().split()))\n\ta = []\n\ttaken = [False] * (2*n+1)\n\tfor bi in b: taken[bi] = True\n\t\n\tfor bi in b:\n\t\ta.append(bi)\n\t\tnext = bi+1\n\t\twhile next <= 2*n and taken[next]:\n\t\t\tnext += 1\n\n\t\tif next <= 2*n:\n\t\t\ta.append(next)\n\t\t\ttaken[next] = 1\n\t\telse:\n\t\t\tbreak\n\n\tif len(a) == 2*n:\n\t\tprint(' '.join(map(str, a)))\n\telse:\n\t\tprint(-1)\n\n", "for t in range(int(input())):\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    visited = [0 for i in range(2 * n)]\n    res = []\n    for i in l:\n        visited[i - 1] = 1\n    for i in l:\n        temp = i\n        while (temp < 2 * n and visited[temp]):\n            temp += 1\n        if (temp >= 2 * n):\n            res = [-1]\n            break\n        visited[temp] = 1\n        res.append(i)\n        res.append(temp + 1)\n    print(*res)\n", "\n\n\"\"\"\nNTC here\n\"\"\" \nimport sys\ninp= sys.stdin.readline\ninput = lambda : inp().strip()\n# flush= sys.stdout.flush\n# import threading\n# sys.setrecursionlimit(10**6)\n# threading.stack_size(2**26)\n\ndef iin(): return int(input())\ndef lin(): return list(map(int, input().split()))\n\n\n\ndef main():\n    T = iin()\n    while T:\n        T-=1\n        n = iin()\n        a = lin()\n        l = 2*n+1\n        done = [0]*(l)\n        ans = []\n        for i in a:\n            done[i]=1\n        for i in a:\n            ans.append(i)\n            for j in range(i+1, l):\n                if done[j]==0:\n                    done[j]=1\n                    ans.append(j)\n                    break\n            else:\n                print(-1)\n                break\n        else:\n            print(*ans)\n\n\n\nmain()\n\n#threading.Thread(target=main).start()\n\n", "from math import *\nfrom collections import *\nt = int(input())\nfor y in range(t):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tch = [0 for i in range(2*n+1)]\n\tb = [-1 for i in range(2*n)]\n\tfor i in range(n):\n\t\tch[a[i]] = 1\n\t\tb[2*i] = a[i]\n\tflag = 0\n\tfor i in range(0,2*n,2):\n\t\tm = -1\n\t\tfor j in range(b[i],2*n+1):\n\t\t\tif(ch[j] == 0):\n\t\t\t\tch[j] = 1\n\t\t\t\tm = j\n\t\t\t\tbreak\n\t\tif(m == -1):\n\t\t\tflag = -1\n\t\t\tbreak\n\t\tb[i+1] = m\n\t\t#print(ch)\n\tif(flag == -1):\n\t\tprint(-1)\n\telse:\n\t\tfor i in b:\n\t\t\tprint(i,end = \" \")\n\t\tprint()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    b = list(map(int, input().split()))\n    m = [1 for j in range(2 * n)]\n    for k in b:\n        m[k - 1] = 0\n    a = []\n    mega_bul = True\n    for el in b:\n        a.append(el)\n        ind = 0\n        bul = False\n        while ind < 2 * n:\n            if ind + 1 > el and m[ind] == 1:\n                m[ind] = 0\n                a.append(ind + 1)\n                bul = True\n                break\n            ind += 1\n        if not bul:\n            mega_bul = False\n            break\n    if mega_bul:\n        print(\" \".join(map(str, a)))\n    else:\n        print(-1)\n", "t = int(input())\nfor _ in range(t):\n  n = int(input())\n  a = list(map(int,input().split()))\n  b = sorted(a)\n  used = [0 for i in range(2*n+1)]\n  flg = 1\n  for i in range(n):\n    if b[i] > i*2+1:\n      print(-1)\n      flg = 0\n      break\n    used[b[i]] = 1\n  if flg == 0:\n    continue\n  ans = []\n  for i in range(n):\n    ans.append(a[i])\n    for j in range(a[i],2*n+1):\n      if used[j] == 0:\n        ans.append(j)\n        used[j] = 1\n        break\n  print(*ans)", "for _ in range(int(input())):\n    n, b = int(input()), list(map(int, input().split()))\n\n    d = {e: True for e in range(1, 2*n + 1)}\n\n    a = [0] * (2 * n)\n    for i in range(n):\n        a[2*i] = b[i]\n        d[b[i]] = False\n\n    ok = True\n    for i in range(1, 2*n, 2):\n        e = a[i-1] + 1\n        while e <= 2*n:\n            if d[e]:\n                a[i] = e\n                d[e] = False\n                break\n            e += 1\n\n        if e > 2*n:\n            ok = False\n            break\n\n    if not ok:\n        print(-1)\n    else:\n        print(*a)", "from math import *\n\nzzz = int(input())\nfor zz in range(zzz):\n    n = int(input())\n    b = [int(i) for i in input().split()]\n    a = [0] * (2 * n)\n    sl = set([i + 1 for i in range(2*n)])\n    ha = True\n    for i in range(n):\n        a[2*i] = b[i]\n        try:\n            sl.remove(b[i])\n        except:\n            ha = False\n            break\n    if ha:\n        sl = list(sl)\n        sl.sort()\n        for i in range(n):\n            j = 0\n            while j < len(sl) and sl[j] < b[i]:\n                j += 1\n            if j == len(sl):\n                ha = False\n                break\n            else:\n                a[2*i + 1] = sl.pop(j)\n\n    if ha:\n        print(' '.join(map(str, a)))\n    else:\n        print(-1)\n    \n", "for i in range(int(input())):\n    n = int(input())\n    s = list(map(int, input().split()))\n    elems = [0 for i in range(2 * n + 1)]\n    ans = []\n    for i in range(len(s)):\n        elems[s[i]] = 1\n    for i in range(len(s)):\n        ans.append(s[i])\n        ch = s[i] + 1\n        while ch <= 2 * n and elems[ch] != 0:\n            ch += 1\n        if ch > 2 * n:\n            ans = -1\n            break\n        else:\n            elems[ch] = 1\n            ans.append(ch)\n    if ans == -1:\n        print(-1)\n    else:\n        print(*ans)"]