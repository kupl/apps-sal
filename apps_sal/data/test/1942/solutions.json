["from collections import *\nimport sys\ntry: inp = raw_input\nexcept: inp = input\ndef err(s):\n    sys.stderr.write('{}\\n'.format(s))\n\ndef ni():\n    return int(inp())\n\ndef nl():\n    return [int(_) for _ in inp().split()]\n\n\ndef solve():\n    n, L, R = nl()\n    L -= 1\n    R -= 1\n    SM = 0\n    out = []\n    for i in range(1, n):\n        no = (n - i)*2\n        if no + SM <= L:\n            SM += no\n            continue\n        if SM > R: continue\n        ARR = [i if j%2 == 0 else i + j//2 + 1 for j in range(no)]\n        start = max(0, L - SM)\n        end = R - SM + 1\n        out.extend(ARR[start:end])\n        SM += no\n    if R == SM:\n        out.append(1)\n    print(' '.join(map(str, out)))\n\n\n\n\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "t = int(input())\nfor case_num in range(t):\n    n, l, r = list(map(int, input().split(' ')))\n    if l == n * (n-1) + 1:\n        print(1)\n        continue\n    total = 0\n    unvisited = n - 1\n    while total < l:\n        total += unvisited * 2\n        unvisited -= 1\n    unvisited += 1\n    total -= unvisited * 2\n    current = n - unvisited\n    nxt = current + 1\n    ans = []\n    while total < r:\n        total += 1\n        now = current if total % 2 == 1 else nxt\n        if now == nxt:\n            nxt += 1\n            if nxt > n:\n                current += 1\n                nxt = current + 1\n                if current == n:\n                    current = 1\n        if total >= l:\n            ans.append(now)\n    print(' '.join(map(str, ans)))\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 998244353\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n,l,r = li()\n    orig = r\n    l -= 1\n    r -= l\n\n\n    currleft = 0\n    curs = n - 1\n    while curs and currleft + 2*curs <= l:\n        currleft += 2*curs\n        curs -= 1\n    \n    start = n - curs\n    ans = []\n    head = start\n    l -= currleft\n\n    last = head + 1\n    half = 0\n    while l:\n        half = 1\n        start = last\n        last += 1\n        l -= 1\n        if not l:break\n        half = 0\n        start = head\n        l -= 1\n\n    if half:\n        ans.append(start)\n        if last == n + 1:\n            head += 1\n            last = head + 1\n        start = head\n        r -= 1\n\n    while r:\n        ans.append(start)\n        r -= 1\n        if not r:break\n        start = last\n        ans.append(start)\n        last += 1\n        if last == n + 1:\n            head += 1\n            last = head + 1\n        r -= 1\n        start = head\n    \n    if orig == n*(n-1) + 1:\n        ans[-1] = 1\n\n    print(*ans)\n        \n\n    \n\n    \n", "import sys\ninput = sys.stdin.readline\n\nT=int(input())\nfor tests in range(T):\n    n,l,r=list(map(int,input().split()))\n\n    begin=1\n    while l>(n-begin)*2+1:\n        if begin==n:\n            break\n\n        l-=(n-begin)*2\n        r-=(n-begin)*2\n        begin+=1\n\n    #print(begin,l,r)\n\n    if begin==n:\n        ANS=[n,1]\n    else:\n\n        ANS=[]\n        while len(ANS)<=r:\n            if begin==n:\n                ANS.append(1)\n                break\n            \n            for j in range(begin+1,n+1):\n                ANS.append(begin)\n                ANS.append(j)\n            begin+=1\n\n            #print(ANS)\n\n    print(*ANS[l-1:r])\n    \n        \n", "def slv(n,l, r):\n    l-=1\n    r-=1\n    c = 0\n    ans = []\n    for i in range(1, n):\n        nl,nr = c, c + 2*(n-i)-1\n        c = nr+1\n        if l > nr:\n            continue\n        for j in range(max(l, nl), min(r, nr)+1):\n            if j %2 == 0:\n                ans.append(i)\n            else:\n                ans.append(i + (j-nl+1)//2)\n    if r == n*(n-1):\n        ans.append(1)\n    print(' '.join([str(i) for i in ans]))\n\n\nt = int(input())\nfor _ in range(t):\n    n,l,r = list(map(int, input().split()))\n    slv(n,l,r)\n"]