["# \u7d20\u56e0\u6570\u5206\u89e3\ndef prime_decomposition(n):\n    i = 2\n    table = []\n    while i * i <= n:\n        while n % i == 0:\n            n //= i\n            table.append(i)\n        i += 1\n    if n > 1:\n        table.append(n)\n    return table\nimport sys\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int, input().split()))\n# \u304b\u3051\u3089\u3092\u79fb\u52d5\u3055\u305b\u3066\u5171\u901a\u56e0\u6570\u3092\u6301\u3064\u3088\u3046\u306b\u3059\u308b\nsu = sum(A)\nif su == 1:\n    print(-1)\n    return\nprimes = sorted(set(prime_decomposition(su)))\nans = 10**18\n\nfor p in primes:\n    an = 0\n    half = p >> 1\n    cnt = 0\n    for a in A:\n        a %= p\n        cnt += a\n        if cnt <= half:\n            an += cnt\n        else:\n            if cnt < p:\n                an += p - cnt\n            else:\n                cnt -= p\n                if cnt <= half:\n                    an += cnt\n                else:\n                    an += p - cnt\n        if ans <= an:\n            break\n    else:\n        ans = min(ans, an)\nprint(ans)\n", "def simple_div(x):\n    if not x & 1:\n        yield 2\n        while not x & 1:\n            x >>= 1\n    i = 3\n    while i * i <= x:\n        if x % i == 0:\n            yield i\n            while x % i == 0:\n                x //= i\n        i += 2\n    if x != 1:\n        yield x\n\ndef __main__():\n    n = int(input())\n    a = list(map(int, input().split()))\n    sa = sum(a)\n    a.pop()\n    if sa == 1:\n        print(-1)\n        return\n    res = 1 << 64\n    for d in simple_div(sa):\n        tmp = 0\n        m = 0\n        half = d >> 1\n        for x in a:\n            m = (x + m) % d\n            tmp += m if m <= half else d - m\n            if res <= tmp:\n                break\n        else:\n            res = tmp\n    print(res)\n\n__main__()\n"]