["n=int(input())\nprint(pow(5,n,100))\n", "import sys\n\nn = int(sys.stdin.readline())\n\nprint(25)", "print(25)", "n = int(input())\nprint(25)\n", "n = int(input())\nprint(pow(5, n, 100))\n        \n        \n    \n", "print(25)", "n = int(input())\nprint(25)\n", "input()\nprint(25)\n", "n = int(input())\nprint(25)\n", "print(\"25\")", "print (\"25\")", "print(pow(5, int(input()), 100))", "print(25, end='')", "print(25)", "print(25)", "print(25)", "n = input()\nprint(\"25\")", "n = int(input())\nprint(25)", "n=int(input())\nprint(pow(5,n,100))\n\n\n", "n = int(input())\nif n == 1:\n    print(5)\nelse:\n    print(25)", "n=int(input())\nprint(25)\n", "import re, sys, string, operator, functools, fractions, collections\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda x=' ': list(map(int,input().split(x)))\nRS=lambda x=' ': input().rstrip().split(x)\nmod=int(1e9+7)\neps=1e-6\n#################################################\nprint(25)\n\n\n\n\n\n", "n = int(input())\nprint(5**n if n < 2 else 25)", "print(pow(5, int(input()), 100))\n", "3\n\nn = int(input())\n\nprint(\"25\")\n"]