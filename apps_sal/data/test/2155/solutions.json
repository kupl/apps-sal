["from math import sqrt\nfrom collections import Counter\n\n\ndef f(h, w, y, x):\n    return h * w * (h + w - (x + y + 1) * 2) // 2 + h * x * (x + 1) + w * y * (y + 1)\n\n\ndef check(h, w, y, x, cnt):\n    for i in range(1, y + 1):\n        for j in range(i + 1, i + x + 1):\n            cnt[j] -= 1\n        for j in range(i, i + w - x):\n            cnt[j] -= 1\n    for i in range(h - y):\n        for j in range(i + 1, i + x + 1):\n            cnt[j] -= 1\n        for j in range(i, i + w - x):\n            cnt[j] -= 1\n    if any(cnt.values()):\n        return\n    print(f'{h} {w}\\n{y+1} {int(x)+1}')\n    raise TabError\n\n\ndef getyx(h, w, tot, cnt):\n    b = (w - 1) * .5\n    c = h * (tot - h * (w * w - 2 * w * (1 - h) - 1) * .25)\n    for y in range((h + 3) // 2):\n        d = (c - h * y * (w * y - h * w + w))\n        if d >= 0:\n            x = b - sqrt(d) / h\n            if x.is_integer() and x >= 0.:\n                check(h, w, y, int(x), cnt.copy())\n\n\ndef main():\n    n, l = int(input()), list(map(int, input().split()))\n    cnt, r, R, tot = Counter(l), 1, max(l), sum(l)\n    for r in range(1, R + 1):\n        if cnt[r] < r * 4:\n            break\n    try:\n        for h in range(r * 2 - 1, int(sqrt(n)) + 1):\n            if not n % h:\n                w = n // h\n                if f(h, w, h // 2, w // 2) <= tot <= f(h, w, 0, 0):\n                    getyx(h, w, tot, cnt)\n    except TabError:\n        return\n    print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nfrom collections import Counter\nfrom itertools import chain\n\ndef i_ints():\n    return map(int, sys.stdin.readline().split())\n\ndef check(w, h, x, y, c):\n    counts = Counter(chain.from_iterable(range(abs(i-x), abs(i-x)+y) for i in range(1, w+1)))\n    counts += Counter(chain.from_iterable(range(abs(i-x)+1, abs(i-x)+1+(h-y)) for i in range(1, w+1)))\n    return c == counts\n\n\nt, = i_ints()\na = Counter(i_ints())\n\ni = 0\nfor i in range(1, t+1):\n    if a[i] != 4 * i:\n        break\nx = i\nB = max(a)\n\ndef main():\n    \n    for w in range(2*x-1, int(t**0.5)+2):\n        if t % w:\n            continue\n        h = t // w\n        \n        y = w + h - B - x\n        if y >= x and h >= 2*y-1 and check(w, h, x, y, a):\n            return \"%s %s\\n%s %s\" % (w, h, x, y)\n        \n        w, h = h, w\n        y = w + h - B - x\n        if y >= x and h >= 2*y-1 and check(w, h, x, y, a):\n            return \"%s %s\\n%s %s\" % (w, h, x, y)\n        \n        \n    return -1\n\nprint(main())", "import math\nt = int(input())\nL = [int(x) for x in input().split()]\nL.sort()\nma = max(L)\nS = 2*sum(L)\nDiv = []\n\nfor i in range(1,int(math.sqrt(t))+1):\n    if t%i == 0:\n        Div.append(i)\n        Div.append(t//i)\n\nif len(Div) >= 2:\n    if Div[-1] == Div[-2]:\n        Div.pop()\n\nDiv.sort()\n\nD = {}\n\nfor i in L:\n    if i in D:\n        D[i] += 1\n    else:\n        D[i] = 1\n\nCandidates = []\n\nfor i in range(len(Div)):\n    n = Div[i]\n    m = Div[-i-1]\n    for j in range(ma,ma-m,-1):\n        if D.get(j,-1) > ma-j+1:\n            break\n    else:\n        j -= 1\n    good = ma-j\n    y = 1+(m-good)//2\n    x = m+n-ma-y\n    T = x+y\n    if y >= 1:\n        if y <= (m+1)//2:\n            if x <= (n+1)//2:\n                if m*(x*(x-1)+(n-x)*(n-x+1))+n*((T-x)*(T-x-1)+(m-T+x)*(m-T+x+1)) == S:\n                    temp = []\n                    for j in range(m*n):\n                        temp.append(abs(1+(j%n)-x)+abs(1+(j//n)-y))\n                    temp.sort()\n                    if temp == L:\n                        print(n,m)\n                        print(x,y)\n                        break\nelse:\n    print(-1)"]