["l = int(input())\nn = input()\nbest = int(n)\np = (l - 1) // 2\nfor i in range(p, -1, -1):\n\tif (n[i + 1] == '0'):\n\t\tcontinue\n\n\tbest = min(best, int(n[0:(i + 1)]) + int(n[i + 1:]))\n\tbreak\n\np = l // 2\nfor i in range(p, l):\n\tif (n[i] == '0'):\n\t\tcontinue\n\n\tbest = min(best, int(n[0:i]) + int(n[i:]))\n\tbreak\n\nprint(best)", "def f(R):\n\tif R==0:\n\t\treturn 0\n\tF=0;S=0;cur=1\n\tfor i in range(150):\n\t\tt=min(cur,R-F-S)\n\t\t#print(str(i)+' '+str(F)+' '+str(S)+' '+str(t))\n\t\tif i%2==0:\n\t\t\tF=F+t\n\t\telse:\n\t\t\tS=S+t\n\t\tcur=cur*2\n\t\tif R==F+S:\n\t\t\tbreak\n\tans=F*F+S*S+S\n\treturn ans\n\n#L,R = map(int,input().strip().split())\n#L = L-1\n#ans = f(R)-f(L)\n#ans = ans%1000000007\n#print(ans)\n\nimport math\n\n\nn=int(input())\ns=input()\nans=int(s)\nfor i in range(n//2,n):\n        if s[i]!='0':\n                a=int(s[:i])\n                b=int(s[i:])\n                ans=min(ans,a+b)\n                break\nfor i in range(n//2,0,-1):\n        if s[i]!='0':\n                a=int(s[:i])\n                b=int(s[i:])\n                ans=min(ans,a+b)\n                break\nfor i in range(n//2+1,n):\n        if s[i]!='0':\n                a=int(s[:i])\n                b=int(s[i:])\n                ans=min(ans,a+b)\n                break\nfor i in range(n//2+1,0,-1):\n        if s[i]!='0':\n                a=int(s[:i])\n                b=int(s[i:])\n                ans=min(ans,a+b)\n                break\nprint(ans)\n##V=[1]\n##it=1\n##den=1\n##flag=0\n##x=0\n##for i in range(N):\n##    s=input()\n##    s+=\" last\"\n##    s=s.strip().split()\n##    if s[0]==\"for\":\n##        n=int(s[1].strip())\n##        if it>2**32:\n##            n=1\n##        it*=n\n##        V.append(n)\n##    elif s[0]==\"add\":\n##        x+=it\n##        if x>=2**32:\n##            flag=1\n##            break\n##    elif s[0]==\"end\":\n##        it/=V[-1]\n##        V.pop()\n##    #print(str(s)+\" \"+str(x)+\" \"+str(it)+\" \"+str(V))\n##if flag==1:\n##    print(\"OVERFLOW!!!\")\n##else:\n##    print(int(x))\n##t=[1]\n##while t[len(t)-1]*2<=n:\n##\tt.append(t[-1]*2)\n##x=0\n##i=0\n##while i<len(t) and x+t[i]<=n:\n##\tx=x+t[i]\n##\ti=i+1\n##\n##if n&(n+1)==0:\n##\tprint n\n##elif k==1:\n##\tprint n\n##else:\n##\tprint 2*t[-1]-1\n", "l = int(input())\ns = input()\n\nbest = 0\nbest2 = None\nfor sl in range(1, l):\n    if s[sl] != '0':\n        if max(sl, l - sl) < max(best, l - best):\n            best = sl\n            best2 = None\n        elif max(sl, l - sl) == max(best, l - best):\n            best2 = sl\n\nf = s[:best]\nb = s[best:]\n\nres = int(s[:best]) + int(s[best:])\nif best2 is None:\n    print(res)\nelse:\n    res2 = int(s[:best2]) + int(s[best2:])\n    print(min(res, res2))\n", "n = int(input())\ns = input()\nans = 10**(10**5 + 1)\ni = n // 2 + 1\nwhile i < n and s[i] == '0':\n    i += 1\nif i < n:\n    ans = min(ans, int(s[:i]) + int(s[i:]))\ni = n // 2\nwhile s[i] == '0':\n    i -= 1\nif i > 0:\n    ans = min(ans, int(s[:i]) + int(s[i:]))\nprint(ans)", "len = int(input())\ns = input()\n\nans = int(s)\n\nfor i in range((len - 1) // 2, 0, -1):\n    if s[i] != '0':\n        ans = min(ans, int(s[:i]) + int(s[i:]))\n        break\n\n\nfor i in range(len // 2 + 1, len):\n    if s[i] != '0':\n        ans = min(ans, int(s[:i]) + int(s[i:]))\n        break\n\nif len % 2 == 0 and s[len // 2] != '0':\n\ti = len // 2\n\tans = min(ans, int(s[:i]) + int(s[i:]))\n\nprint(ans)", "def do(s, j):\n    return int(s[:j]) + int(s[j:])\n\n\ndef main():\n    n = int(input())\n    x = input()\n    mid = n // 2\n    cnt = 0\n    best = None\n    for i in range(mid + 2):\n        j = mid + i\n        if j < n and x[j] != '0':\n            val = do(x, j)\n            cnt += 1\n            if best is None:\n                best = val\n            else:\n                best = min(best, val)\n        \n        j = mid - i\n        if j > 0 and x[j] != '0':\n            val = do(x, j)\n            cnt += 1\n            if best is None:\n                best = val\n            else:\n                best = min(best, val)\n\n        if cnt >= 7:\n            break\n    print(best)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n = int(input())\ns = input()\nl = int(n / 2)\nr = int((n + 1) / 2)\nwhile (l and s[l] == '0'):\n    l -= 1\nwhile (r != n - 1 and s[r] == '0'):\n    r += 1\nif (l == 0 or r == n - 1):\n    if (l == 0):\n        ans = int(s[:r]) + int(s[r:])\n    else:\n        ans = int(s[:l]) + int(s[l:])\nelse:\n    ans = min(int(s[:l]) + int(s[l:]), int(s[:r]) + int(s[r:]))\nprint(ans)", "n = int(input())\ns = input()\na = [i for i in range(1, n) if s[i] != '0']\na.sort(key=lambda i: abs(i - n / 2))\nans = float(\"inf\")\nfor i in a[:6]:\n  ans = min(ans, int(s[:i]) + int(s[i:]))\nprint(ans)\n", "L = int(input())\nX = input()\n\nans = float('inf')\ncnt = 0\nidx = L // 2\n\nwhile cnt < 5 and idx >= 1:\n    if X[idx] != '0':\n        ans = min(ans, int(X[:idx]) + int(X[idx:]))\n        cnt += 1\n    idx -= 1\n\ncnt = 0\nidx = L // 2\n\nwhile cnt < 5 and idx < L:\n    if X[idx] != '0':\n        ans = min(ans, int(X[:idx]) + int(X[idx:]))\n        cnt += 1\n    idx += 1\n\nprint(ans)", "l = int(input())\nn = str(input())\nbest_len = l\nbest = int(n)\nto_try = []\nfor i in range(l - 1):\n    if n[i + 1] != '0':\n        candidate = max(i + 1, l - i - 1) + 1\n        if candidate < best_len:\n            to_try.clear()\n            to_try.append(i+1)\n            best_len = candidate\n        elif candidate == best_len:\n            to_try.append(i+1)\nfor i in to_try:\n    best = min(best, int(n[:i]) + int(n[i:]))\nprint(best)", "n = int(input())\na = input()\n\npos = n // 2\n\nans = -1\n\nfor it in range(n // 2, n // 2 - 5, -1):\n\twhile pos >= 0 and a[pos] == '0':\n\t\tpos -= 1\n\n\tif (pos < 0):\n\t\tbreak\n\n\tif pos > 0:\n\t\tcur = int(a[0:pos]) + int(a[pos:len(a)])\n\t\tif ans == -1:\n\t\t\tans = cur\n\t\telse:\n\t\t\tans = min(ans, cur)\n\n\tpos -= 1\n\npos = n // 2\n\nfor it in range(n // 2, n // 2 + 5):\n\twhile pos < n and a[pos] == '0':\n\t\tpos += 1\n\n\tif (pos >= n):\n\t\tbreak\n\n\tif pos > 0:\n\t\tcur = int(a[0:pos]) + int(a[pos:len(a)])\n\t\tif ans == -1:\n\t\t\tans = cur\n\t\telse:\n\t\t\tans = min(ans, cur)\n\n\tpos += 1\n\nprint(ans)", "l = int(input())\nn = input()\nmid = l // 2\n\ndef f(pos):\n    if pos == 0 or pos == l or n[pos] == '0':\n        return False\n    return True\n\narr = []\n\nfor i in range((l+1)//2):\n    pos = mid - i\n    if not (pos == 0 or pos == l or n[pos] == '0'):\n        arr.append(pos)\n    pos = mid + i\n    if not (pos == 0 or pos == l or n[pos] == '0'):\n        arr.append(pos)\n    if len(arr) > 2:\n        break\n\nbest_ans = int(n + '00')\nfor pos in arr:\n    ans = int(n[:pos]) + int(n[pos:])\n    best_ans = min(best_ans, ans)\nprint(best_ans)\n", "n = int(input())\ns = input()\nal_l = []\nal_r = []\n\nfor i in range(1, n):\n\tif(int(s[i]) > 0 and i <= n//2):\n\t\tal_l.append(i)\n\t\n\tif(int(s[i]) > 0 and i > n//2):\n\t\tal_r.append(i)\n\tif(len(al_r) == 3):\n\t\tbreak\n\tif(len(al_l) == 3):\n\t\tdel al_l[0]\n\n\nans = int(s)\nfor x in al_l:\n\tans = min(ans, int(s[0:x]) + int(s[x:]))\n\nfor x in al_r:\n\tans = min(ans, int(s[0:x]) + int(s[x:]))\n\n\t\nprint(ans)", "n=int(input())\ns=input()\ngood=[]\nfor i in range(1,n):\n  if(s[i] != '0'):\n    good.append([max(n - i, i), i])\ngood = sorted(good)\nif len(good) == 0:\n  good.append([n - 1, n - 1])\nans = int(s[:good[0][1]:]) + int(s[-(n-good[0][1]):])\nfor i in range(0, min(len(good), 3)):\n  ans = min(ans, int(s[:good[i][1]:]) + int(s[-(n-good[i][1]):]))\nprint(ans)", "l = int(input())\nn = input()\n\nind = []\n\nfor i in range(1, l):\n    if n[i] == '0': continue\n    ind.append((abs(i - (l / 2)), i))\n\nind.sort()\nsol = -1\n\nfor i in range(min(4, len(ind))):\n    (x, y) = ind[i]\n    curr = int(n[:y]) + int(n[y:])\n    if sol == -1 or curr < sol:\n        sol = curr\n\nprint(sol)\n", "n = int(input())\ns = input()\n\nlen1 = n // 2\nlen2 = (n + 1) // 2\nS = 10**100000\n\ndef calc (d):\n    nonlocal S\n    h = d\n    while (h < n and s[h] == '0'):\n        h += 1\n\n    if (h < n):\n        S = min(S, int(s[h:]) + int(s[:h]))\n\n    h = d\n    while (0 <= h and s[h] == '0'):\n        h -= 1\n\n    if (0 < h):\n        S = min(S, int(s[h:]) + int(s[:h]))\n\ncalc(len1)\ncalc(len2)\nprint(S)\n", "import sys\nimport math\n\nN=int(input())\nS=input().strip()\nC=10**121212\n\nmi=101010\nfor i in range(1,N):\n\tif S[i]!='0':\n\t\tmi=min(mi,max(i,N-i)+2)\n\nfor i in range(1,N):\n\tif S[i]!='0' and max(i,N-i)<=mi:\n\t\tT=int(S[0:i])+int(S[i:])\n\t\tC=min(C,T)\n\nprint(C)\n", "n = int(input())\na = input()\nl = (n - 1) // 2\nr = n // 2;\nwhile(a[l] == '0' and a[r] == '0') :\n    l -= 1\n    r += 1\n\n# print(l)\n# print(r)\nans = -1\n\nif(a[l] != '0' and l > 0):\n    x = int(a[0:l])\n    y = int(a[l:len(a)])\n    if(ans == -1 or ans > (x + y)) :\n        ans = x + y\n\nif(a[r] != '0'):\n    x = int(a[0:r])\n    y = int(a[r:len(a)])\n    if(ans == -1 or ans > x + y) :\n        ans = x + y\n        \nl -= 1\nr += 1\n\n\nif(l > 0 and a[l] != '0'):\n    x = int(a[0:l])\n    y = int(a[l:len(a)])\n    if(ans == -1 or ans > (x + y)) :\n        ans = x + y\n\nif(r < len(a) and a[r] != '0'):\n    x = int(a[0:r])\n    y = int(a[r:len(a)])\n    if(ans == -1 or ans > x + y) :\n        ans = x + y\n\nprint(ans)", "n=int(input())\ns=input()\nx=n//2\nans=int(s)\nif(s[x]!='0'):\n\tans=min(ans,int(s[:x])+int(s[x:]))\nfor i in range(x+1,n):\n\tif(s[i]!='0'):\n\t\tans=min(ans,int(s[:i])+int(s[i:]))\n\t\tbreak\nfor i in range(x-1,0,-1):\n\tif(s[i]!='0'):\n\t#\tprint(i,s[:i],s[i:])\n\t\tans=min(ans,int(s[:i])+int(s[i:]))\n\t\tbreak\nprint(ans)", "import math\nn = int(input())\nk = input()\n\ndef st(s):\n    if(s == ''):\n        return 0\n    return int(s)\ndef cal(pos):\n    if(k[pos] == '0'):\n        return 1 << 400000\n    return st(k[:pos]) + st(k[pos:])\n\n\nmid_L = (n + 1) // 2\nmid_R = n // 2\nsum = -1;\nwhile(k[mid_L] == k[mid_R] == '0'):\n    mid_L-=1\n    mid_R+=1\n\nsum = min(cal(mid_L), cal(mid_R))\nprint(sum)", "T = int(input())\ns = input()\nmid = len(s) // 2\nMIN = -1\n\nif len(s) < 3:\n\tprint(int(s[0]) + int(s[1]))\n\treturn\n\nfor i in range(mid, -1, -1):\n\tif s[i+1] != '0':\n\t\tMIN = int(s[:i+1]) + int(s[i+1:])\n\t\tbreak\n\nfor i in range(mid, len(s)):\n\tif s[i] != '0':\n\t\ttmp = int(s[:i]) + int(s[i:])\n\t\tif MIN > tmp:\n\t\t\tMIN = tmp\n\t\tbreak\n\nif MIN == -1:\n\tMIN = int(s[:len(s)-1]) + int(s[len(s)-1:])\n\nprint(MIN)", "l = int(input())\ns = input()\n\nmi = int(s)\n\nc=0\nfor i in range(int(l/2+1),l):\n    if(s[i] == '0'):\n        continue\n    n1 = int(s[:i])\n    n2 = int(s[i:])\n\n    mi = min(mi, n1 + n2);\n    c += 1\n    if(c>=2):\n        break\n\nc=0\nfor i in range(int(l/2),0,-1):\n    if(s[i] == '0'):\n        continue\n    n1 = int(s[:i])\n    n2 = int(s[i:])\n\n    mi = min(mi, n1 + n2);\n    break\n    c += 1\n    if(c>=2):\n        break\n\nprint(mi)\n", "import math\n\nn = int(input())\ns = input()\n\nmini = math.inf\ndigits = 10**5 + 10\n\nfor i in range(n//2, n):\n    if s[i] != '0':\n        a = i\n        b = n - i\n        if max(a, b) > digits + 2:\n            continue\n        else:\n            mini = min(mini, int(s[:i]) + int(s[i:]))\n            digits = math.log10(mini) + 1\n\nfor i in range(n//2 - 1, 0, -1):\n    if s[i] != '0':\n        a = i\n        b = n - i\n        if max(a, b) > digits + 2:\n            continue\n        else:\n            mini = min(mini, int(s[:i]) + int(s[i:]))\n            digits = math.log10(mini) + 1\n\n\nprint(mini)", "l = int(input()) \nnum = input()\n\nsmallest = 1000000\npoints = []\nfor i,c in enumerate(num):\n    if i == 0: continue\n    if (c != '0'):\n        if max(i,l-i) < smallest:\n            smallest = max(i,l-i)\n            points.clear()\n        if max(i,l-i) == smallest:\n            points.append(i)\n\n\nans = int(\"9\" * 100000)\nfor val in points:\n    ans = min(ans,int(num[:val]) + int(num[val:]))\n\nprint(ans)"]