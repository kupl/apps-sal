["n, k = map(int, input().split())\nprint(('abcdefghijklmnopqrstuvwxyz'[:k] * n)[:n])", "n, k = input().split()\nn, k = int(n), int(k)\ns = []\nfor i in range(n):\n\ts.append(chr((i % k + ord('a'))))\nprint(''.join(s))", "n, k = map(int, input().split())\nconst = ''\nans = ''\nfor i in range(k):\n    const += chr(i + 97)\nans = (n // k) * const\nans += const[:n % k]\nprint(ans)", "import string\n\nn, k = map(int, input().split())\n\nsymbs = []\nletters = string.ascii_lowercase[:k]\nlast = 0\nfor i in range(n):\n\tsymbs.append(letters[last])\n\tlast+=1\n\tif last==k:\n\t\tlast = 0\nprint(''.join(symbs))", "import string\n\nn, k = (int(i) for i in input().split())\nstr = string.ascii_lowercase[:k]\n\nans = str * (n // k) + str[:(n % k)]\n\nprint(ans)\n", "#This code is dedicated to Olya S.\n\npassword=''\nn,k=list(map(int,input().split()))\nalph=[chr(i) for i in range(97,97+k)]\n\nfor i in range(n):\n    password+=alph[i%k]\n\nprint(password)\n    \n\n", "(lambda n, k: print(*([chr(i + ord('a')) for i in range(k)] * (n // k + 1))[:n], sep=''))(*map(int, input().split()))", "n, k = map(int, input().split())\n\nabc = 'abcdefghijklmnopqrstuvwxyz'\n\nfor i in range(n):\n\tprint(abc[i % k], end = '')\n\nprint()\n", "n, k = list(map(int, input().split()))\ns = []\nl = \"\"\nfor i in range(k):\n    s.append(chr(97 + i))\nfor i in range(len(s)):\n    l += s[i]\nfor i in range(n//k):\n    print(l,end='')\nfor i in range(n%k):\n    print(s[i],end='')", "\"\"\" Created by Shahen Kosyan on 3/11/17 \"\"\"\n\ndef __starting_point():\n    n, k = [int(x) for x in input().split()]\n    kc = k\n\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    alphabet = list(alphabet)\n    password = ''\n\n    i = 0\n    while kc > 0:\n        password += alphabet[i]\n        kc -= 1\n        i += 1\n\n    i = 0\n    while len(password) < n:\n        if i == k:\n            i = 0\n        password += password[i]\n        i += 1\n\n    print(password)\n\n__starting_point()", "n, k = list(map(int, input().split()))\ns = 'abcdefghijklmnopqrstuvwxyz'\nres = \"\"\nfor i in range(n):\n    res += s[i%k]\n\nprint(res)\n", "import string\n\nalphabet = string.ascii_lowercase\n\nn, k = map(int, input().split())\n\nle = min(k, 26)\n\nindex = 0\nresult = ''\n\nfor i in range(1, n+1):\n    result+=alphabet[int(index)]\n    index+=1\n    if index >= k:\n        index = 0\nprint(result)", "n,k=[int(c) for c in input().split(' ')]\naCode=ord('a')\npasswd,temp='',''\nfor i in range(0,k):\n    temp+=chr(aCode+i)\ncount=n//k\nrest=n%k\npasswd=temp*count\nif rest>0:\n    passwd+=temp[:rest]\nprint(passwd)", "n,k = map(int, input().split()) \ns = '' \nx = n // k \ny = n % k \nfor i in range(x): \n    for j in range(k): \n        p = str(chr(97 + j)) \n        s = s + p \nfor i in range(y): \n    p = str(chr(97 + i)) \n    s = s + p \nprint(s)", "a,b = map(int, input(). split())\nA=['a','b', 'c', 'd', 'e', 'f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nif a==b:\n    for i in range(a):\n        print(A[i],end='')\nelse:\n    while a>=b:\n        for i in range(b):\n            print(A[i],end='')\n        a=a-b\n    for j in range(a):\n        print(A[j],end='')\n", "nk=input().split()\nn=int(nk[0])\nk=int(nk[1])\npassword=''\ni=0\nj=0\nfor i in range(n):\n    if j<k:\n        password=password+chr(97+j)\n        j+=1\n    else:\n        j=0\n        password=password+chr(97+j)\n        j+=1\nprint(password)\n", "n,k=list(map(int, input().split()))\nchars=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\nuse_chars=chars[:k]\npassword=\" \"\nx=0\nfor char_i in range(1,n+1):\n    current_char=use_chars[x]\n    if password[char_i-1] == current_char:\n        current_char=use_chars[x]\n    if x+1 == k:\n        x=0\n    else:\n        x+=1\n    password+=current_char\nprint(password[1:])\n"]