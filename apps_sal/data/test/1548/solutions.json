["n = int(input())\nl = list(map(int,input().split()))\nl.sort()\na = l[:n//2]\nb = l[n//2:]\nprint(sum(a)**2+sum(b)**2)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nx = sum(a[:n//2])\n# print(x)\nprint(x**2 + (sum(a) - x)**2)", "N = int(input())\nsticks = sorted(list(map(int, input().split())))\nlo, hi = 0, N - 1\n\nX = 0\nY = 0\n\nstep = 0\nwhile lo <= hi:\n    if step == 0:\n        # horizontal\n        X += sticks[hi]\n        hi -= 1\n    else:\n        # vertical\n        Y += sticks[lo]\n        lo += 1\n    step = 1 - step\n\nprint(X * X + Y * Y)\n", "n = int(input())\na = sorted(list(map(int, input().split())))\n\nx = sum(a[:n // 2])\ny = sum(a[n // 2:])\n\nprint(x ** 2 + y ** 2)\n", "def mi():\n        return list(map(int, input().split()))\n'''\n3\n1 2 3\n4\n1 1 2 2\n'''\nn = int(input())\na = list(mi())\n\na.sort()\nf,l = 0,0\nfor i in range(n//2):\n    f+=a[i]\n    l+=a[n-1-i]\nif n%2:\n    if f>l:\n        f+=a[n//2]\n    else:\n        l+=a[n//2]\nprint(f**2+l**2)\n", "n=int(input())\ny=[int(x) for x in input().split()]\ny.sort()\na=y[:int(n/2)]\nb=y[int(n/2):]\nprint(sum(a)**2+sum(b)**2)\n", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\n# print = stdout.write\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda : map(int, input().split())\nn = int(input())\na = listin()\na.sort()\nx, y = 0, 0\na = deque(a)\nfor i in range(n):\n    if i%2:\n        y+=a.popleft()\n    else:\n        x+=a.pop()\nprint(x**2+y**2)", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nprint(sum(a[:n//2])**2 + sum(a[n//2:])**2)\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int, input().split()))\n\na = sorted(a, reverse = True)\nans1 = sum(a[0:(n+1)//2])\nans2 = sum(a[(n+1)//2:n])\nprint(ans1**2 + ans2**2)", "n=int(input())\ncounter=0\na=sorted([int(x) for x in input().split()])\nfor i in range(n//2):\n    counter+=a[i]\ns=sum(a)\nprint((s-counter)**2+counter**2)\n", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nval = n//2\nx = 0\ny = 0\nfor i in range(val):\n\tx+=l[i]\nfor i in range(val, n):\n\ty+=l[i]\nprint((x**2)+(y**2))\n", "import sys\n\n\ndef main():\n    n = int(input())\n    a = list(map(int, sys.stdin.readline().split()))\n    a.sort(reverse=True)\n    x = y = 0\n    i = 0\n    while i < n - i - 1:\n        x += a[i]\n        y += a[n - i - 1]\n        i += 1\n    if (n % 2):\n        x += a[i]\n    print(x * x + y * y)\n\nmain()\n", "from collections import deque\nn = int(input())\n\nsticks = list(map(int, input().split()))\ndq = deque(sorted(sticks))\n\nlenx=0\nleny=0\nwhile len(dq) > 0:\n    lenx+=dq.pop()\n    if len(dq)>0:\n        leny+=dq.popleft()\nprint(lenx**2+leny**2)\n\n\n", "n = int(input())\nskaitli = list(map(int, input().split()))\nisakais = n // 2\nskaitli.sort()\nisie = skaitli[0:isakais]\ngarie = skaitli[isakais:]\nissum = sum(isie)\ngarsum = sum(garie)\nsuma =  issum * issum + garsum * garsum\nprint(suma)", "n=int(input())\na=list(map(int,input().split()))\na=sorted(a)\nx,y=0,0\nfor i in range(n//2):\n    x += a[i]\nfor i in range(n//2,n):\n    y += a[i]\nprint(pow(x,2)+pow(y,2))", "import sys\nimport math\nimport itertools\nimport collections\n\ndef getdict(n):\n    d = {}\n    if type(n) is list or type(n) is str:\n        for i in n:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d:\n                d[t] += 1\n            else:\n                d[t] = 1\n    return d\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a*b) // math.gcd(a, b)\ndef wr(arr): return '\\n'.join(map(str, arr))\ndef revn(n): return int(str(n)[::-1])\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\n\n\nn = ii()\na = li()\na.sort(reverse=True)\nprint(sum(a[:n//2 + n % 2]) ** 2 + sum(a[n//2 + n % 2:]) ** 2)", "n = int(input())\na = list(map(int, input().split(\" \")))\na = sorted(a)\nx = 0\ny = 0\nfor i in range(n//2):\n    y += a[i]\nfor i in range(n//2, n):\n    x += a[i]\nres = x*x + y*y\nprint(res)", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\nn = len(a)\nx = sum(a[:n//2])\ny = sum(a[n//2:])\nprint(x ** 2 + y ** 2)", "import sys\n\ninput = sys.stdin.readline\n\n\ndef read_i():\n    return list(map(int, input().split()))\n\n\ndef read_is(n=1):\n    return [read_i() for _ in range(n)]\n\n\nn = int(input())\nls = read_i()\nls.sort()\nprint(sum(ls[:n // 2])**2 + sum(ls[n // 2:])**2)", "'''input\n4\n1 1 2 2\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nfrom  heapq import heappush as hpush\nfrom heapq import heappop as hpop\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\n\nn = ri(1)\na = ri()\na.sort(reverse =True)\n\nans = 0\n\nfirst = 0\n\nif n%2==1:\n\tfor i in range(n//2+1):\n\t\tfirst+=a[i]\nelse:\n\tfor i in range(n//2):\n\t\tfirst +=a[i]\n\nsecond = sum(a)-first\n\nprint(first**2 + second**2)\n", "n = int(input())\na = list(map(int,input().split()))\na.sort()\ns = sum(a)\nh = sum(a[n//2:])\nv = s-h\nprint(h*h+v*v)\n", "Scount = int(input())\nsticks = [int(x) for x in input().split(' ')]\nsticks.sort()\nhorizontal = 0\nfor i in range(Scount - 1, Scount // 2 - 1, -1):\n    horizontal += sticks[i]\nvertical = 0\nfor i in range(Scount // 2 - 1, -1, -1):\n    vertical += sticks[i]\nprint(horizontal ** 2 + vertical ** 2)\n"]