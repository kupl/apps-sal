["import os, sys\n\n# zeilen = [l.strip() for l in sys.stdin.readlines()]\n\nq = int(sys.stdin.readline().strip())\n\n\n\nfor _ in range(q):\n  a, b = list(map(int, sys.stdin.readline().strip().split()))\n  word = sys.stdin.readline().strip()\n  gaps = sorted([len(gap) for gap in word.split('X') if len(gap)>= b])\n  if len(gaps) == 0:\n    print('NO')\n  elif gaps[0] < a:\n    print('NO')\n  elif len(gaps) > 1 and gaps[-2] >= 2*b:\n    print('NO')\n  elif gaps[-1] < 2*b: # no problematic, need only count\n    print('YES' if (len(gaps) % 2) else 'NO')\n  else: # exactly one problematic gap\n    p = gaps[-1]\n    if (len(gaps) % 2): # A tries to make this gap into zero or two\n      if p <= (a + 2*b - 2): # short enough for 0\n        print('YES')\n      elif p < 3*a: # we have to try two\n        print('NO') # not long enough\n      elif p > (a + 4*b - 2): # too long\n        print('NO')\n      else:\n        print('YES')\n    else: # A tries to make this gap into one\n      if p < 2*a: # too short\n        print('NO')\n      elif p > (a + 3*b - 2):# too long\n        print('NO')\n      else:\n        print('YES')\n\n", "# import sys\n# input = sys.stdin.readline\n\nQ = int(input())\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    S = input() + \"X\"\n    s = 0\n    x = x1 = x2 = x3 = xx = 0\n    for i in range(len(S)):\n        if S[i] == \"X\":\n            if s < b:\n                pass\n            elif a <= s < 2*b:\n                x += 1\n            elif a < 2*b and (3*a <= s < a+3*b-1 or 2*a <= s < a+2*b-1):\n                xx += 1\n            elif a < 2*b and 3*a <= s < a+4*b-1:\n                x3 += 1\n            elif a < 2*b and 2*a <= s < a+3*b-1:\n                x2 += 1\n            elif a <= s < a+2*b-1:\n                x1 += 1\n            else:\n                # print(\"a, b, s =\", a, b, s)\n                print(\"NO\")\n                break\n            s = 0\n        else:\n            s += 1\n    else:\n        # print(\"x, x1, x2, x3 =\", x, x1, x2, x3)\n        if xx+x1+x2+x3 >= 2:\n            print(\"NO\")\n        elif xx:\n            print(\"YES\")\n        elif (x + x1 + x2*2 + x3*3) % 2 == 0:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nQ = int(input())\nfor _ in range(Q):\n    a, b = list(map(int, input().split()))\n    S = input() + \"X\"\n    s = 0\n    x = x1 = x2 = x3 = xx = 0\n    for i in range(len(S)):\n        if S[i] == \"X\":\n            if s < b:\n                pass\n            elif a <= s < 2*b:\n                x += 1\n            elif a < 2*b and (3*a <= s < a+3*b-1 or 2*a <= s < a+2*b-1):\n                xx += 1\n            elif a < 2*b and 3*a <= s < a+4*b-1:\n                x3 += 1\n            elif a < 2*b and 2*a <= s < a+3*b-1:\n                x2 += 1\n            elif a <= s < a+2*b-1:\n                x1 += 1\n            else:\n                # print(\"a, b, s =\", a, b, s)\n                print(\"NO\")\n                break\n            s = 0\n        else:\n            s += 1\n    else:\n        # print(\"x, x1, x2, x3 =\", x, x1, x2, x3)\n        if xx+x1+x2+x3 >= 2:\n            print(\"NO\")\n        elif xx:\n            print(\"YES\")\n        elif (x + x1 + x2*2 + x3*3) % 2 == 0:\n            print(\"NO\")\n        else:\n            print(\"YES\")\n", "import sys\ninput = sys.stdin.readline\n\nq=int(input())\n\nfor testcases in range(q):\n    a,b=list(map(int,input().split()))\n    S=input().strip()\n    S+=\"X\"\n\n    T=[]\n\n    NOW=0\n    for s in S:\n        if s==\".\":\n            NOW+=1\n        else:\n            if NOW!=0:\n                T.append(NOW)\n            NOW=0\n\n    count=0\n    noflag=0\n    other=[]\n    \n    for t in T:\n        if b<=t<a:\n            noflag=1\n            break\n        if a<=t<2*b:\n            count+=1\n        elif t>=2*b:\n            other.append(t)\n\n    if len(other)>=2:\n        noflag=1\n\n    if noflag==1:\n        print(\"NO\")\n        continue\n    if len(other)==0:\n        if count%2==1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n        continue\n\n    OTHER=other[0]\n\n    for left in range(OTHER-a+1):\n        right=OTHER-a-left\n\n        if left>=2*b or right>=2*b or b<=left<a or b<=right<a:\n            continue\n\n        count2=count\n\n        if left>=a:\n            count2+=1\n        if right>=a:\n            count2+=1\n\n        if count2%2==0:\n            print(\"YES\")\n            break\n\n    else:\n        print(\"NO\")\n        \n        \n", "def solve(a, b, s):\n\tl = [len(x) for x in s.split('X')]\n\ttot = 0\n\tmx = 0\n\t\n\tfor j in l:\n\t\tif j < b:\n\t\t\tcontinue\n\t\tif j < a:\n\t\t\treturn 'NO'\n\t\tif j >= 2 * b:\n\t\t\tif mx > 0:\n\t\t\t\treturn 'NO'\n\t\t\tmx = j\n\t\ttot += 1\n\t\n\tif mx > 0:\n\t\tif a < 2 * b:\n\t\t\tone = mx >= a and mx <= a + 2 * b - 2\n\t\t\ttwo = mx >= 2 * a and mx <= a + 3 * b - 2\n\t\t\tthree = mx >= 3 * a and mx <= a + 4 * b - 2\n\t\t\t\n\t\t\tif not (one or two or three):\n\t\t\t\treturn 'NO'\n\t\t\tif (one and two) or (two and three):\n\t\t\t\treturn 'YES'\n\t\t\tif two:\n\t\t\t\ttot += 1\n\t\t\t\t\n\t\tif a >= 2 * b:\n\t\t\tif not (mx >= a and mx <= a + 2 * b - 2):\n\t\t\t\treturn 'NO'\n\t\t\n\tif tot % 2 == 1:\t\n\t\treturn 'YES'\n\telse:\n\t\treturn 'NO'\n\t\t\t\nq = int(input())\n\n\nfor i in range(q):\n\ta, b = list(map(int, input().split()))\n\ts = input()\n\tprint(solve(a, b, s))\n", "def removeX(s,p):\n\tif (p==len(s)):\n\t\treturn s\n\twhile s[p]!='X':\n\t\tp+=1\n\t\tif (p==len(s)):\n\t\t\treturn s\n\tj=0\n\twhile s[p+j]=='X':\n\t\tj+=1\n\t\tif (p+j==len(s)):\n\t\t\tbreak\n\treturn removeX(s[0:p+1]+s[p+j:],p+1)\n\ndef doable(lenght,a,b,parity):\n\tfor x in range((lenght-a)//2+1): \n\t\ty=lenght-a-x\n\t\t#print(x,y)\n\t\tif ((not((x>=b) & (x<a)))&(not(x>=2*b))&(not((y>=b) & (y<a)))&(not(y>=2*b))):\n\t\t\te=0\n\t\t\t#print('oui')\n\t\t\tif((x>=a)&(x<2*b)):\n\t\t\t\te+=1\n\t\t\tif((y>=a)&(y<2*b)):\n\t\t\t\te+=1\n\t\t\tif((parity+e)%2==0):\n\t\t\t\treturn 1\n\treturn 0\n\nfor i in range(int(input())):\n\ta,b=[int(x) for x in input().split()]\n\tv=[0,0,0]\n\ts=removeX(input(),0)\n\tfor y in s.split('X'):\n\t\tk=len(y)\n\t\tif ((k>=b) & (k<a)):\n\t\t\tv[0]+=1\n\t\telif ((k>=a) & (k<2*b)):\n\t\t\tv[1]+=1\n\t\telif (k>=2*b):\n\t\t\tv[2]+=1\n\t\t\tlenght=k\n\t#print(v)\n\tif ((v[0]>0) | (v[2]>1)):\n\t\tprint('NO')\n\telif (v[2]==1):\n\t\tif (lenght-a>=4*b):\n\t\t\tprint('NO')\n\t\telse:\n\t\t\tif (doable(lenght,a,b,v[1]%2)==1):\n\t\t\t\tprint('YES')\n\t\t\telse:\n\t\t\t\tprint('NO')\n\telse:\n\t\tif (v[1]%2==0):\n\t\t\tprint('NO')\n\t\telse:\n\t\t\tprint('YES')\n\n", "test_case = int(input())\n\n\ndef solve():\n    a, b = list(map(int, input().split()))\n    s = input().split('X')\n    lens = [len(dot) for dot in s]\n    cnt = 0\n    tmp = 0\n    for le in lens:\n        if le < b:\n            continue\n        if le < a:\n            return \"NO\"\n        if le >= 2 * b:\n            if tmp > 0:\n                return \"NO\"\n            tmp = le\n        else:\n            cnt += 1\n\n    if tmp is not 0:\n        win = False\n        for i in range(tmp+1):\n            part2 = tmp - i - a\n            if i > part2 or i >= 2 * b:\n                break\n            if 2*b <= part2 or b <= i < a or b <= part2 < a:\n                continue\n            ncnt = cnt\n            if i >= a:\n                ncnt += 1\n            if part2 >= a:\n                ncnt += 1\n            if ncnt % 2 is 0:\n                win = True\n    else:\n        win = cnt % 2 == 1\n    return \"YES\" if win else \"NO\"\n\n\nfor _ in range(test_case):\n    print(solve())\n", "def sol():\n    a, b = map(int, input().split())\n    s = input().replace(\"X\", \" \")\n    small_segs = 0\n    critical_region = -1\n\n    for p in map(len, s.split()):\n        if p < b:\n            continue\n        if p < a and p >= b:\n            return False\n        if ((p - a) % 2 == 0 and (p >= a + 4 * b)) or ((p - a) % 2 == 1 and p >= a + 4 * b - 1):\n            return False\n        if p >= 2*b:\n            if critical_region != -1:\n                return False\n            critical_region = p\n        elif p >= a:\n            small_segs += 1\n    \n    if critical_region == -1:\n        return small_segs % 2 == 1\n\n    can = [0] * 3\n    for l in range(critical_region+1-a):\n        r = critical_region - l - a\n        if (l >= b and l < a) or l >= 2 * b:\n            continue\n        if (r >= b and r < a) or r >= 2 * b:\n            continue\n        canl = int(l >= a)\n        canr = int(r >= a)\n        can[canl + canr] = 1\n\n    for choice, val in enumerate(can):\n        if val and (small_segs + choice) % 2 == 0:\n            return True\n\n    return False\n\n\n\nn = int(input())\n\nfor _ in range(n):\n    print(\"YES\" if sol() else \"NO\")", "def sol():\n    a, b = map(int, input().split())\n    s = input().replace(\"X\", \" \")\n    small_segs = 0\n    critical_region = -1\n     \n    for p in map(len, s.split()):\n        if p < b:\n            continue\n        if p < a and p >= b:\n            return False\n        if ((p - a) % 2 == 0 and (p >= a + 4 * b)) or ((p - a) % 2 == 1 and p >= a + 4 * b - 1):\n            return False\n        if p >= 2*b:\n            if critical_region != -1:\n                return False\n            critical_region = p\n        elif p >= a:\n            small_segs += 1\n    \n    if critical_region == -1:\n        return small_segs % 2 == 1\n     \n    can = [0] * 3\n    for l in range(critical_region+1-a):\n        r = critical_region - l - a\n        if (l >= b and l < a) or l >= 2 * b:\n            continue\n        if (r >= b and r < a) or r >= 2 * b:\n            continue\n        canl = int(l >= a)\n        canr = int(r >= a)\n        can[canl + canr] = 1\n     \n    for choice, val in enumerate(can):\n        if val and (small_segs + choice) % 2 == 0:\n            return True\n     \n    return False\n\nn = int(input())\n     \nfor _ in range(n):\n    print(\"YES\" if sol() else \"NO\")", "test_case = int(input())\n \n \ndef solve():\n    a, b = list(map(int, input().split()))\n    s = input().split('X')\n    lens = [len(dot) for dot in s]\n    cnt = 0\n    tmp = 0\n    for le in lens:\n        if le < b:\n            continue\n        if le < a:\n            return \"NO\"\n        if le >= 2 * b:\n            if tmp > 0:\n                return \"NO\"\n            tmp = le\n        else:\n            cnt += 1\n \n    if tmp is not 0:\n        win = False\n        for i in range(tmp+1):\n            part2 = tmp - i - a\n            if i > part2 or i >= 2 * b:\n                break\n            if 2*b <= part2 or b <= i < a or b <= part2 < a:\n                continue\n            ncnt = cnt\n            if i >= a:\n                ncnt += 1\n            if part2 >= a:\n                ncnt += 1\n            if ncnt % 2 is 0:\n                win = True\n    else:\n        win = cnt % 2 == 1\n    return \"YES\" if win else \"NO\"\n \n \nfor _ in range(test_case):\n    print(solve())\n", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  a,b = map(int,input().split())\n  s = input()\n  n = len(s)\n  ls = []\n  if s[0] == \".\":\n    cnt = 1\n  else:\n    cnt = 0\n  for i in range(1,n+1):\n    if i < n and s[i] == \".\":\n      cnt += 1\n    else:\n      if cnt >= b:\n        ls.append(cnt)\n      cnt = 0\n  if not ls:\n    print(\"NO\")\n    continue\n  ls.sort()\n  if a >= 2*b:\n    if len(ls) >= 2 or ls[0] > a+(b-1)*2 or ls[0] < a:\n      print(\"NO\")\n    else:\n      print(\"YES\")\n  else:\n    if ls[0] < a:# or ls[-1] > a+(2*b-1)*2:\n      print(\"NO\")\n    elif len(ls) >= 2 and ls[-2] >= 2*b:\n      print(\"NO\")\n    else:\n      l = len(ls)-1\n      t = ls[-1]\n      for i in range(t):\n        if i+a <= t:\n          p,q = i,t-(i+a)\n          if not (b<=p<a or b<=q<a or p>=2*b or q>=2*b):\n            x = l+(a<=p<2*b)+(a<=q<2*b)\n            if x%2 == 0:\n              print(\"YES\")\n              break\n      else:\n        print(\"NO\")", "import sys\ninput = sys.stdin.readline\n\ndef solve_case():\n    a, b = [int(x) for x in input().split()]\n    s = [len(x) for x in input().rstrip().split('X')]\n    \n    c, m = 0, 0\n    \n    for x in s:\n        if x < b:\n            continue\n        elif x < a:\n            print('NO')\n            return\n        elif x < 2*b:\n            c += 1\n        elif m:\n            print('NO')\n            return\n        else:\n            m = x\n    \n    if not m:\n        if c & 1:\n            print('YES')\n        else:\n            print('NO')\n    else:\n        for x in range((m - a) // 2 + 1):\n            if (b <= x and x < a) or (x >= 2*b) or (b <= m - x - a and m - x - a < a) or (m - x - a >= 2*b):\n                continue\n            cur = c + (x >= a) + (m - x - a >= a)\n            if not cur & 1:\n                print('YES')\n                return\n        print('NO')\n            \nfor _  in range(int(input())):\n    solve_case()"]