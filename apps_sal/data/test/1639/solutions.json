["n = input()\nv = list(map(int, input().split()))\n\nbest = 1\ncurrent = 1\nfor i in range(1, len(v)):\n    if v[i-1] <= v[i]:\n        current += 1\n    else:\n        current = 1\n    best = max(best, current)\n\nprint(best)\n", "n = int(input())\na = list(map(int, input().split()))\n\nresult = 1\ncur = 1\nprev = a[0]\nfor x in a[1:]:\n    if x >= prev:\n        cur += 1\n    else:\n        cur = 1\n    result = max(result, cur)\n    prev = x\nprint(result)\n", "n = int(input())\na = list(map(int, input().split()))\nd = 1\nm = 0\nfor i in range(1,n):\n    if a[i] >= a[i-1]:\n        d += 1\n    else:\n        m = max(m,d)\n        d = 1\nm = max(m,d)\nprint(m)\n", "n=int(input())\nt=[int(i) for i in input().split()]\nv=1\nj=1\nfor i in range(1,n):\n\tif t[i]>=t[i-1]:\n\t\tj+=1\n\telse:\n\t\tv=max(v,j)\n\t\tj=1\nv=max(v,j)\nprint(v)", "n = int(input())\na = list(map(int, input().split()))\nk = 1\nm = 0\nfor i in range(1, n):\n    if a[i] >= a[i - 1]:\n        k += 1\n    else:\n        m = max(m, k)\n        k = 1\nprint(max(m, k))\n", "a = int(input())\na = list(map(int, input().split()))\nt = 1\nmaxt = 0\nfor i in range(1, len(a)):\n    if a[i] >= a[i-1]:\n        t += 1\n    else:\n        maxt = max(t, maxt)\n        t = 1\nmaxt = max(maxt, t)\nprint(maxt)", "import math\nimport sys\nwithFile = 0\n\nif(withFile == 1):\n    fin     = open('input.txt', 'r')\n    fout    = open('output.txt', 'w')\n\ndef getl():\n    if(withFile == 0):\n        return input()\n    else:\n        return fin.readline()\ndef printl(s):\n    if(withFile == 0):\n        print(s)\n    else:\n        fout.write(str(s))\ndef get_arr():\n    x = getl().split(' ')\n    if(x[-1] == ''):\n        x = x[:-1]\n    return list(map(int, x))\n\nn = get_arr()[0]\na = get_arr()\nf = [1 for i in range(n)]\nfor i in range(n):\n    if(i == 0):\n        continue;\n    if(a[i] >= a[i-1]):\n        f[i] += f[i-1];\n\nprint(max(f))\n\nif(withFile == 1):\n    fin.close()\n    fout.close()", "n = int(input())\narr = [int(x) for x in input().split()]\n\nans = 1\nnow = 1\nfor i in range(1, n):\n    if arr[i] >= arr[i - 1]:\n        now += 1\n    else:\n        ans = max(ans, now)\n        now = 1\n        \nans = max(ans, now)\nprint(ans)", "n = int(input())\nans = 0\ncnt = 0\nlast = 0\nfor i in map(int, input().split()):\n    if i >= last:\n        cnt += 1\n    else:\n        ans = max(ans, cnt)\n        cnt = 1\n    last = i\nans = max(ans, cnt)\nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\ndp=[0]*(n)\ndp[0]=1\nfor i in range(1,n):\n    if(a[i]>=a[i-1]):\n        dp[i]=dp[i-1]+1\n    else:\n        dp[i]=1\nprint(max(dp))", "n = int(input())\narr =[int(x) for x in input().split()]\nprev = arr[0]\nans = 1\nc = 1\nfor i in range(1, n):\n    if arr[i] >= arr[i-1]:\n        c += 1\n    else:\n        c = 1\n    ans = max(ans, c)\nprint(ans)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn = int(input())\nA = list(map(int,input().split()))\n\ncount = 0\nans = 0\nprev = -1\nfor a in A:\n    if prev <= a:\n        count += 1\n        ans = max(ans, count)\n    else:\n        count = 1\n    prev = a\n\nprint(ans)\n", "n = int(input())\narr =[int(x) for x in input().split()]\nprev = arr[0]\nans = 1\nc = 1\nfor i in range(1, n):\n    if arr[i] >= arr[i-1]:\n        c += 1\n    else:\n        c = 1\n    ans = max(ans, c)\nprint(ans)", "__author__ = 'kolya'\nn = int(input())\nm = [int(i) for i in input().split()]\n\ncounter = 1\nmax = 1\nf = m[0]\nfor i in range(1, n):\n    if m[i] >= f:\n        counter += 1\n    else:\n        if counter > max:\n            max = counter\n        counter = 1\n    f = m[i]\nif(counter > max):\n    max = counter\nprint(max)", "n=int(input())\na=[]\na=[int(x) for x in input().split()]\nc=1\nmax1=0\nfor i in range(1,len(a)):\n    if a[i]>=a[i-1]:\n        c=c+1\n    else:\n        if c>max1:\n            max1=c\n        c=1\nif c>max1:\n    max1=c\nprint(max1)        \n", "__author__ = 'pxy'\ni=int(input())\ng=[int(j) for j in input().split()]\nk=1\nmaxx=0\nfor j in range(i-1):\n    if g[j]<=g[j+1]:\n        k+=1\n    else:\n        if(k>maxx):\n            maxx=k\n        k=1\nprint(max(k,maxx))", "n = int(input())\nL = list(map(int, input().split()))\na = 1\nm = 0\nv = L[0]\nfor i in range(1,n):\n    if L[i]>=v:\n        a+=1\n    else:\n        if a > m:\n            m = a\n        a = 1\n    v = L[i]\nprint(max([a,m]))", "n = int(input())\na = list(map(int, input().split()))\nmax_len = 0\ncur_len = 0\ncur = -1\nfor i in range(n):\n    if a[i] >= cur:\n        cur_len += 1\n        cur = a[i]\n        max_len = max(max_len, cur_len)\n    else:\n        cur = a[i]\n        cur_len = 1\nprint(max_len)\n", "#!/usr/bin/env python\n# 580A_steps.py - Codeforces.com/problemset/problem/580/A by Sergey 2015\n\nimport unittest\nimport sys\n\n###############################################################################\n# Steps Class (Main Program)\n###############################################################################\n\n\nclass Steps:\n    \"\"\" Steps representation \"\"\"\n\n    def __init__(self, test_inputs=None):\n        \"\"\" Default constructor \"\"\"\n\n        it = iter(test_inputs.split(\"\\n\")) if test_inputs else None\n\n        def uinput():\n            return next(it) if it else sys.stdin.readline().rstrip()\n\n        # Reading single elements\n        [self.n] = list(map(int, uinput().split()))\n\n        # Reading a single line of multiple elements\n        self.nums = list(map(int, uinput().split()))\n\n    def calculate(self):\n        \"\"\" Main calcualtion function of the class \"\"\"\n\n        maxsf = 0\n        maxc = 0\n\n        for i in range(len(self.nums)):\n            if i != 0:\n                if self.nums[i] >= self.nums[i-1]:\n                    maxc += 1\n                    maxsf = max(maxsf, maxc)\n                else:\n                    maxc = 0\n\n        return str(maxsf+1)\n\n###############################################################################\n# Unit Tests\n###############################################################################\n\n\nclass unitTests(unittest.TestCase):\n\n    def test_single_test(self):\n        \"\"\" Steps class testing \"\"\"\n\n        # Constructor test\n        test = \"6\\n2 2 1 3 4 1\"\n        d = Steps(test)\n        self.assertEqual(d.n, 6)\n        self.assertEqual(d.nums[0:3], [2, 2, 1])\n\n        # Sample test\n        self.assertEqual(Steps(test).calculate(), \"3\")\n\n        # Sample test\n        test = \"3\\n2 2 9\"\n        self.assertEqual(Steps(test).calculate(), \"3\")\n\n        # Sample test\n        test = \"2\\n0\"\n        self.assertEqual(Steps(test).calculate(), \"1\")\n        test = \"2\\n0 0\"\n        self.assertEqual(Steps(test).calculate(), \"2\")\n        test = \"3\\n0 -1 1 1\"\n        self.assertEqual(Steps(test).calculate(), \"3\")\n\n        # My tests\n        test = \"\"\n        # self.assertEqual(Steps(test).calculate(), \"0\")\n\n        # Time limit test\n        # self.time_limit_test(5000)\n\n    def time_limit_test(self, nmax):\n        \"\"\" Timelimit testing \"\"\"\n        import random\n        import timeit\n\n        # Random inputs\n        test = str(nmax) + \" \" + str(nmax) + \"\\n\"\n        numnums = [str(i) + \" \" + str(i+1) for i in range(nmax)]\n        test += \"\\n\".join(numnums) + \"\\n\"\n        nums = [random.randint(1, 10000) for i in range(nmax)]\n        test += \" \".join(map(str, nums)) + \"\\n\"\n\n        # Run the test\n        start = timeit.default_timer()\n        d = Steps(test)\n        calc = timeit.default_timer()\n        d.calculate()\n        stop = timeit.default_timer()\n        print((\"\\nTimelimit Test: \" +\n              \"{0:.3f}s (init {1:.3f}s calc {2:.3f}s)\".\n              format(stop-start, calc-start, stop-calc)))\n\ndef __starting_point():\n\n    # Avoiding recursion limitaions\n    sys.setrecursionlimit(100000)\n\n    if sys.argv[-1] == \"-ut\":\n        unittest.main(argv=[\" \"])\n\n    # Print the result string\n    sys.stdout.write(Steps().calculate())\n\n__starting_point()", "n = int(input())\nal = list(map(int, input().split()))\nres, t = 0, 0\nlast = -1\nfor i in al:\n    if i >= last:\n        t += 1\n    else:\n        res = max(t, res)\n        t = 1\n    last = i\nprint(max(t, res))\n", "n = int(input())\nnums = list(map(int, input().split()))\n\ndp = [0]*n\ndp[0] = 1\nfor i in range(1, n):\n    if nums[i]>=nums[i-1]:\n        dp[i] = dp[i-1]+1\n    else:\n        dp[i] = 1\nprint(max(dp))\n", "#In the name of Allah\n\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nn = int(input())\na = [float(\"inf\")] + list(map(int, input().split()))\n\nans = 1\nt = 1\n\nfor i in range(1, n + 1):\n        if a[i] < a[i - 1]:\n                ans = max(ans, t)\n                t = 1\n        else:\n                t += 1\n\nstdout.write(str(max(ans, t)))\n", "3\n# -*- coding: <utf-8> -*-\n\nimport itertools as ittls\nfrom collections import Counter\n\ndef sqr(x):\n    return x*x\n\ndef inputarray(func = int):\n    return list(map(func, input().split()))\n\n# -------------------------------\n# -------------------------------\n\nN = int(input())\nA = list(inputarray())\n\nmaxv = 1\ncurrmaxv = 1\nfor i in range(1, len(A)):\n    if A[i] >= A[i - 1]:\n        currmaxv = currmaxv + 1\n    else:\n        currmaxv = 1\n    maxv = max(maxv, currmaxv)\n\nprint(maxv)\n\n", "n = input()\nax = list(map(int, input().split()))\n\nc = 0\nlast = -1\ncmax = 0\n\nfor a in ax:\n    if a >= last:\n        c += 1\n    else:\n        cmax = max(c, cmax)\n        c = 1\n    last = a\n\ncmax = max(c, cmax)\nprint(cmax)\n", "n=int(input())\narr=list(map(int, input().split()))\nans=1\ntemp=1\nfor i in range(1,n):\n    if arr[i]>=arr[i-1]:\n        temp+=1\n    else:\n        if temp>ans:\n            ans=temp\n        temp=1\nprint(max(ans, temp))\n"]