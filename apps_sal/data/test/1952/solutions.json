["from collections import Counter\nn, k = map(int, input().split())\nm = sorted(list(map(int, input().split())), reverse=True)\nc = [n] + list(map(int, input().split()))\ncnt = Counter(m)\ntmp = 0\nsize = 1\nfor i in range(k, 0, -1):\n\ttmp += cnt[i]\n\tsize = max(size, (tmp-1)//c[i]+1)\n\nans = [[] for _ in range(size)]\nfor i, x in enumerate(m):\n\tans[i%size].append(x)\n\nprint(size)\nfor a in ans:\n\tprint(len(a), *a)", "import sys\nreadline = sys.stdin.readline\n\n\nN, K = list(map(int, readline().split()))\nA = list(map(int, readline().split()))\nC = [None] + list(map(int, readline().split()))\ntable = [0]*(K+1)\nfor a in A:\n    table[a] += 1\nfor i in range(K-1, -1, -1):\n    table[i] += table[i+1]\n    \nok = N\nng = 0\nwhile abs(ok-ng)>1:\n    med = (ok+ng)//2\n    if all(-(-table[k]//med) <= C[k] for k in range(1, K+1)):\n        ok = med\n    else:\n        ng = med\n\nA.sort(reverse = True)\nAns = [[] for _ in range(ok)]\n\nfor i in range(N):\n    Ans[i%ok].append(A[i])      \n\nsys.stdout.write('{}\\n'.format(ok))\nfor i in range(ok):\n    sys.stdout.write('{} '.format(len(Ans[i])))\n    sys.stdout.write('{}\\n'.format(' '.join(map(str, Ans[i]))))\n    \n", "\nn,k = list(map(int,input().split()))\n\nm = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nmi = []\nfor i in range(n):\n    mi.append([m[i],i])\nmi.sort()\nmi.reverse()\n\nans = [[]]\n\nfor loop in range(n):\n\n    now,ind = mi[loop]\n\n    l = -1\n    r = len(ans)\n\n    while r-l != 1:\n\n        mid = (l+r)//2\n        if len(ans[mid]) < c[now-1]:\n            r = mid\n        else:\n            l = mid\n\n    if r == len(ans):\n        ans.append([now])\n    else:\n        ans[r].append(now)\n\nprint(len(ans))\nfor i in ans:\n    print(len(i),*i)\n", "from bisect import bisect_left as bl, bisect_right as br\nN, K = list(map(int, input().split()))\nM = sorted([int(a) for a in input().split()])[::-1]\nC = [0] + [int(a) for a in input().split()]\nANS = [{}]\nS = [0]\nfor m in M:\n    a = br(S, -C[m])\n    if a >= len(ANS):\n        ANS.append({})\n        S.append(0)\n    if m not in ANS[a]:\n        ANS[a][m] = 1\n    else:\n        ANS[a][m] += 1\n    S[a] -= 1\n\nprint(len(ANS))\nfor ans in ANS:\n    L = []\n    for a in ans:\n        L += [a] * ans[a]\n    print(len(L), *L)\n", "n, k = map(int, input().split())\nm = list(map(int, input().split()))\nc = list(map(int, input().split()))\nm.sort()\ncount = 0\nresult = 0\nfor i in range(n):\n    count += 1\n    reqd = count//(c[m[~i] - 1])\n    if count%(c[m[~i] - 1])!=0:\n        reqd +=1\n    result = max(result, reqd)\n\narrays = [[] for _ in range(result)]\ncount = [0] * k\nfor i in range(n):\n    count[m[i] - 1] += 1\ntemp = 0\n\nfor i in range(k -1, -1, -1):\n    \n    for j in range(count[i]):\n        \n        arrays[temp%result].append(i + 1)\n        temp += 1\n    \nprint(result)\nfor arr in arrays:\n    print(len(arr), *arr)", "n, k = list(map(int, input().split()))\nms = sorted(list(map(int, input().split())))\ncs = list(map(int, input().split()))\n\nd = [0] * (k + 1)\nfor m in ms:\n    d[m] += 1\n\nsums = [0] * (k + 1)\nsums[k] = d[k]\nfor i in range(k - 1, 0, -1):\n    sums[i] = sums[i + 1] + d[i]\n\nsums = sums[1:]\nans = -1\nfor i in range(k):\n    ans = max(ans, (sums[i] + cs[i] - 1) // cs[i])\n\nprint(ans)\nfor i in range(ans):\n    res = [str(ms[j]) for j in range(n - 1 - i, -1, -ans)]\n    print(len(res), end=\" \")\n    print(\" \".join(res))\n", "n, k = list(map(int, input().split()))\nm = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nnum = [0]*(k+1)\nfor i in m:\n    num[i] += 1\n\nfor i in range(k-1, -1, -1):\n    num[i] += num[i+1]\n\nnum = num[1:]\nmaxi = 0\nfor i in range(k):\n    maxi = max((num[i]-1)//c[i]+1, maxi)\n\nans = [[] for i in range(maxi)]\nm.sort(reverse = True)\nfor i in range(len(m)):\n    ans[i%maxi].append(m[i])\n\nprint(len(ans))\nfor i in range(maxi):\n    print(\" \".join(map(str, [len(ans[i])] + ans[i])))\n"]