["n = int(input())\nbs = []\nfor _ in range(n):\n    bs.append(list(map(int, input().split())))\n\nans = 0\nfor i in range(n):\n    for j in range(n):\n        if i != j and bs[i][0] == bs[j][1]:\n            ans += 1\n            break\n\nprint(n - ans)\n", "n = int(input())\nl = [0] * n\nr = [0] * n\nnum = [0] * 10000\nfor i in range(n):\n\tl[i], r[i] = list(map(int, input().split()))\n\tnum[r[i]] += 1\nans = n\nfor i in range(n):\n\tif (num[l[i]] ==\t1) and (l[i] == r[i]): continue\n\n\tif (num[l[i]] < 1): continue\n\tans -= 1\n\nprint(ans)\n", "n = int(input())\nA = []\n\nfor i in range(n):\n    A.append(list(map(int, input().split())))\nres = 0\n\nfor i in range(n):\n    flag = 0\n\n    for j in range(n):\n        if A[j][1] == A[i][0] and i != j:\n            flag = 1\n    res += 1 - flag\nprint(res)\n", "n = int(input())\na = [0] * n\nb = [0] * n\nans = 0\nfor i in range(n):\n  a[i], b[i] = map(int, input().split())\nfor i in range(n):\n  for j in range(n):\n    if i != j and b[j] == a[i]:\n      break\n  else:\n    ans += 1\nprint(ans)", "from sys import stdin\nn = int(stdin.readline())\na=[-1]*n;b=[-1]*n;opened=[0]*n\nfor i in range(n):\n a_,b_=[int(v) for v in stdin.readline().split()]\n a[i]=a_;b[i]=b_\no1=[-1]*1001;o2=[-1]*1001\nfor i in range(n):\n if o1[b[i]] != -1:\n  o2[b[i]] = i\n else:\n  o1[b[i]] = i\nsol = 0\nfor i in range(n):\n if o1[a[i]]==-1 or o1[a[i]]==i and o2[a[i]]==-1:\n  sol += 1\nprint(sol)", "n=int(input())\na=[]\nfor _ in range (n):\n    a.append(list(map(int,input().split())))\nk=0\nfor i in range (n) :\n    for j in range (n) :\n        if i != j and a[i][0] == a[j][1]:\n            k+=1\n            break\n       \nprint (n-k)", "n=int(input())\nL=[]\nfor i in range(n):\n    l=list(input().split())\n    for j in range(2): l[j]=int(l[j])\n    L.append(l)\nans=0\nfor i in range(n):\n    exist=False\n    for j in range(n):\n        if L[i][0]==L[j][1] and i!=j:\n            exist=True\n            break\n    if not(exist): ans+=1\nprint(ans)", "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nt = set()\nfor i in range(n):\n    for j in range(n):\n        if i != j and a[i][1] == a[j][0]: t.add(j)\nprint(n - len(t))", "n = int(input())\na = []\nb = []\nfor i in range(n):\n    aa, bb = list(map(int, input().split()))\n    a.append(aa)\n    b.append(bb)\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        if a[j] == b[i]:\n            a[j] = -1\ncount = 0\nfor i in range(n):\n    if a[i] != -1:\n        count += 1\nprint(count)\n", "n = int(input())\na, b, p = [0] * n, [0] * n, {}\nfor i in range(n):\n    a[i], b[i] = input().split()\n    p[b[i]] = (a[i] != b[i] or b[i] in p)\nprint(sum(not a[i] in p or (p[a[i]] == 0 and a[i] == b[i]) for i in range(n)))", "def main():\n    n = int (input())\n    t = n;\n    A = []\n    B = []\n    while ( t > 0):\n        a,b = list(map(int,input().split()))\n        A.append(a)\n        B.append(b)\n        t = t - 1\n    x = 0\n    for u in range(n):\n        for v in range(n):\n            if (A[u] == B[v] and u!=v):\n                 x = x + 1\n                 break\n    print(n - x)\n            \ndef __starting_point():\n    main()\n\n\n__starting_point()", "n=int(input())\nO=[0]*n\nB=list(O)\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    O[i]=b\n    B[i]=a\nans=n\nfor i in range(n):\n    for j in range(n):\n        if(j==i):\n            continue\n        if(O[j]==B[i]):\n            ans-=1\n            break\nprint(ans)\n", "n = int(input())\nbottle = []\nfor i in range(n):\n    bottle.append(list(map(int, input().split())))\ncount = 0\ncheck = []\nfor i in range(n):\n    check.append(False)\nfor i in range(n):\n    for j in range(n):\n        if i == j :\n            continue\n        else:\n            if bottle[i][1] == bottle[j][0] and check[j] == False:\n                count += 1\n                check[j] = True\n            \nprint(n-count)", "import sys\nimport math\n\n\nn = int(sys.stdin.readline())\n\nk = [0] * 1001\nl = []\nfor i in range(n):\n    a, b = [int(x) for x in (sys.stdin.readline()).split()]\n    k[b] += 1\n    \n    l.append((a, b))\n    \nres = 0\nfor i in l:\n    if(i[0] == i[1] and k[i[0]] == 1):\n        res += 1\n        \n    if(k[i[0]] == 0):\n        res += 1\n        \nprint(res)\n", "a = int(input())\nbad = []\nfor i in range(a):\n    x, y = list(map(int, input().split(' ')))\n    bad.append([x, y, 0])\n\nfor i in range(a):\n    for j in range(a):\n        if i != j:\n            if bad[j][1] == bad[i][0]:\n                bad[i][2] = 1\n\nct = 0   \nfor i in bad:\n    if i[2] == 1:\n        ct += 1\n\nprint(a - ct)\n", "n = int(input())\ne = 0\na = []\nb = [ [] for i in range(1001) ]\nfor i in range(n):\n    s,t = map(int,input().split())\n    a.append([i,s])\n    b[t].append(i)\nfor i in range(len(a)):\n    c1 = 0\n    for j in range(len(b[a[i][1]])):\n        if (b[a[i][1]][j] != i):\n            c1 = -1\n    if (c1 != -1):\n        e = e + 1\nprint(e)", "from collections import defaultdict as ddict\n\nN = int(input())\ncount = ddict(int)\nbottles = []\nfor i in range(N):\n    ai, bi = map(int, input().split())\n    count[bi] += 1\n    bottles.append((ai, bi))\n\nres = 0\nfor ai, bi in bottles:\n    if count[ai] == 0 or (count[ai]==1 and bi==ai):\n        res += 1\nprint(res)", "def main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    #f.readline()\n    #input()\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    [n]=get()\n    found=[]\n    opener=set()\n    count=0\n    other=[]\n    for i in range(n):\n        [a,b]=get()\n        if a==b:\n            found.append(a)\n            other.append(b)\n            continue\n        found.append(a)\n        opener.add(b)\n    c=set(found)\n    final=c-opener\n    for i in final:\n        count+=found.count(i)\n    for i in other:\n        count-=(found.count(i)-1)\n    print(max(count,0))\n    if mode==\"file\":f.close()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def mainn():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    #f.readline()\n    #input()\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    [n]=get()\n    found=[]\n    opener=set()\n    count=0\n    other=[]\n    for i in range(n):\n        [a,b]=get()\n        if a==b:\n            found.append(a)\n            other.append(b)\n            continue\n        found.append(a)\n        opener.add(b)\n    c=set(found)\n    final=c-opener\n    for i in final:\n        count+=found.count(i)\n    for i in other:\n        count-=(found.count(i)-1)\n    print(max(0,count))\n    \n    if mode==\"file\":f.close()\n\ndef __starting_point():\n    mainn()\n\n__starting_point()", "def main():\n    n, aa, bb = int(input()), [], []\n    for _ in range(n):\n        a, b = input().split()\n        aa.append(a)\n        bb.append(b)\n    print(n - len({i for i, a in enumerate(aa) for j, b in enumerate(bb) if i != j and a == b}))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nbottles = [list(map(int, input().split())) for i in range(n)]\nopened = set()\n\nfor i in range(n):\n    for j in range(n):\n        if i != j and bottles[i][1] == bottles[j][0]:\n            opened.add(j)\nprint(n - len(opened))\n", "\"\"\"\n\tAuthor\t\t: Arif Ahmad\n\tDate  \t\t: \n\tAlgo  \t\t: \n\tDifficulty\t: \n\"\"\"\n\ndef main():\n\tn = int(input())\n\t\n\ta = [None] * n\n\tb = [None] * n\n\tfor i in range(n):\n\t\ta[i], b[i] = list(map(int, input().split()))\n\t\t\n\tfor i in range(n):\n\t\tfor j in range(n):\n\t\t\tif i == j: continue\n\t\t\tif a[j] == b[i]: a[j] = -1\n\n\tans = 0\n\tfor item in a:\n\t\tif item != -1: ans += 1\n\t\n\tprint(ans)\n\n\ndef __starting_point():\n    main()\n    \n\n__starting_point()", "n = int(input())\nk = []\nt = []\nfor i in range(n):\n    p, m = map(int, input().split())\n    k.append(p)\n    t.append(m)\nans = n\nfor i in range(len(k)):\n    for j in range(len(t)):\n        if i == j:\n            continue\n        if k[i] == t[j]:\n            ans -= 1\n            break\nprint(ans)", "from collections import defaultdict\n\ndef serej(bottles):\n    #set of bottles that need to be opened\n\n    unopened = defaultdict(set)\n\n    for i, bottle in enumerate(bottles):\n        unopened[bottle[0]].add(i+1)\n\n    for i, bottle in enumerate(bottles):\n        if bottle[1] in unopened:\n            unopened[bottle[1]] = unopened[bottle[1]].intersection({i+1})\n\n    return sum(len(x) for x in list(unopened.values()))\n\nn = int(input())\n\nbottles = []\nfor _ in range(n):\n    bottles.append([int(x) for x in input().split(' ')])\n\nprint(serej(bottles))\n", "n = int(input())\na = [0] * 1000\nb = [0] * 1000\nlst = [0] * 1001\nfor x in range(n):\n    a[x], b[x] = map(int,input().split())\n    lst[b[x]] += 1\nans = 0\nfor x in range(n):\n    lst[b[x]] -=  1\n    if lst[a[x]] == 0:\n        ans += 1\n    lst[b[x]] += 1\nprint(ans)"]