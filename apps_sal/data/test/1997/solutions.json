["import sys\nfin = sys.stdin\nn = int(fin.readline())\nut = [-1] * n\nvc = [[] for i in range(0, n)]\ncvc = [[] for i in range(0, n)]\nnr = [0] * n\nfor i in range(0, n - 1):\n    a, b = [int(number) for number in fin.readline().split()]\n    a -= 1\n    b -= 1\n    vc[a].append(b)\n    cvc[b].append(a)\n    nr[a] += 1\nsize = [0] * n\nmx = [0] * n\ndef nonzero(x):\n    if not x:\n        return 0\n    return 1\nstk = []\nsize = [0] * n\nfor i in range(0, n):\n    if nr[i] == 0:\n        stk.append(i)\n        size[i] = 1\norder = []\nwhile nonzero(stk):\n    x = stk.pop(-1)\n    order.append(x)\n    for p in cvc[x]:\n        nr[p] -= 1\n        if nr[p] == 0:\n            stk.append(p)\nh = [0] * n\nfor i in range(n - 1, -1, -1):\n    x = order[i]\n    for p in vc[x]:\n        h[p] = h[x] + 1\n#parcurg\nfor x in order:\n    for p in vc[x]:\n        size[x] += size[p]\n#maximum\ndef solv(tp, mx):\n    for x in order:\n        if h[x] % 2 == tp:\n            r = 999999999\n            for p in vc[x]:\n                r = min(r, size[p] - mx[p] + 1)\n            if r == 999999999:\n                r = 1\n            mx[x] = r\n        else:\n            r = 0\n            for p in vc[x]:\n                r += size[p] - mx[p]\n            mx[x] = r + 1\nsolv(0, mx)\nprint(size[0] - mx[0] + 1, end = ' ')\nsolv(1, mx)\nprint(size[0] - mx[0] + 1)\n"]