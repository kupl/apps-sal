["n = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nA2 = [A[0]]\nfor a in A[1:]:\n    A2.extend([a, a])\nans = 0\nfor a in A2[:n-1]:\n    ans += a\nprint(ans)", "n = int(input())\nlst = list(map(int,input().split()))\n\nlst.sort(reverse=True)\nif n % 2 == 0:\n  a = n//2-1\n  s = lst[0]\n  for i in range(a):\n    s += 2*(lst[i+1])\n  \nelse:\n  b = (n-1) //2\n  s = lst[0]\n  for j in range(b):\n    s += 2*(lst[j+1])\n  s -= lst[b]\n  \nprint(s)", "from collections import deque\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\na = deque(A)\n\narrival = 1\nans = 0\n\nwhile arrival < N:\n    score = a.popleft()\n    if arrival == 1:\n        ans += score\n        arrival += 1\n    else:\n        ans += score*min(2, N - arrival)\n        arrival += 2\n\nprint(ans)", "N=int(input())\n*A,=sorted(map(int,input().split()), reverse=True)\n\nn=N-2\na=A[0]\ni=1\nwhile 1<n:\n  a+=A[i]*2\n  i+=1\n  n-=2\nprint(a if n==0 else a+A[i])", "N=int(input())\n*A,=sorted(map(int,input().split()), reverse=True)\n\nprint(sum([A[i//2] for i in range(1,N)]))", "N = int(input())\nA = sorted(list(map(int,input().split())),reverse=True)\nans = A[0]\nfor i in range(1,N//2):\n    ans += 2* A[i]\nif N%2 == 1:\n    ans += A[N//2]\nprint(ans)\n", "n=int(input())\nA=tuple(sorted(map(int,input().split() ),reverse=1))\nz=n-2\nans=A[0]\nnow=1\nwhile z:\n    if z==1:print(A[now]+ans);return\n    else:\n        z-=2\n        ans+=A[now]*2\n        now+=1\nprint(ans)", "n = int(input())\na = [int(i) for i in input().split()]\n\n\n# print(n)\n# print(a)\n\nsort_a = sorted(a, reverse=True)\n# print(sort_a)\n\nnow_list = []\nnext_insert = []\ncomfort = []\n# print('start')\nfor index, i in enumerate(sort_a):\n    if len(now_list) == 0:\n        now_list += [i]\n        next_insert += [1]\n        comfort += [i]\n    else:\n        if len(next_insert) >= n:\n            break\n        else:\n            next_insert += [1, 1]\n            comfort += [i, i]\n\n\n# print(comfort, next_insert)\nprint((sum(comfort[:n-1])))\n", "n = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\nans = a[0]\nfor i in range(2, n):\n    ans += a[i // 2]\n    #print(ans)\n\nprint(ans)\n", "N = int(input())\nA = list(map(int,input().split()))\nA = sorted(A,reverse=True)\n\nans = 0\nfor i in range(1,N):\n    ans += A[i//2]\nprint(ans)", "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef main():\n    n = int(input())\n    A = list(map(int,input().split()))\n    A.sort(reverse = True)\n    ans = A[0]\n    for i in range(n-2):\n        ans += A[i//2 + 1]\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))*2\nA.sort()\nprint((sum(A[N:-1])))\n", "n = int(input())\nA = sorted(map(int, input().split()), reverse=True)\nans = A[0] + sum(2 * a for a in A[1:n//2])\nif n % 2 == 1:\n  ans += A[n//2]\nprint(ans)", "n = int(input())\na = list(map(int,input().split()))\na = sorted(a,reverse = True)\nans = 0\nif n%2 == 0:\n    for i in range(n//2):\n        if i == 0:\n            ans += a[i]\n            continue\n        ans += a[i]*2\nelse:\n    for i in range(n//2+1):\n        if i == 0:\n            ans += a[i]\n            continue\n        ans += a[i]*2\nif n %2== 1:\n    ans -= a[i]\nprint(ans)", "N=int(input())\nA=list(map(int,input().split()))\n\nA.sort()\nans=0\nfor i in range(N-1):\n    ans+=A[N-1-(i+1)//2]\nprint(ans)", "import heapq\n\nn=int(input())\na=list(map(int,input().split()))\na=list([x*(-1) for x in a])\n\nheapq.heapify(a)\ntotal=0\ntotal+=(-1)*heapq.heappop(a)\n\nif n%2==1 :\n    for i in range(1,n//2+1) :\n        if i==n//2 :\n            total+=(-1)*heapq.heappop(a)\n        else :\n            total+=(-2)*heapq.heappop(a)\n    print(total)\n\nelse :\n    for i in range(1,n//2) :\n        total+=(-2)*heapq.heappop(a)\n    print(total)\n", "import math\n\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort(reverse = True)\n    \n    A_half = math.ceil(N/2)\n    A_pre = A[:A_half]\n    A_post = A[A_half:]\n    \n    ret = sum(A_pre)\n    for i in range(len(A_post)-1):\n        ret += min(A_pre[i],A_pre[(i+1)%A_half])\n        \n    print(ret)\n    \nsolve()", "N = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nans = 0\nfor i in range(N-1):\n  ans += A[(i+1)//2]\n  \nprint(ans)", "from math import floor, log2\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\n\nm = floor(log2(N))\nprint(sum(A[i//2] for i in range(1, N)))", "n=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\nans=0\nfor i in range(1,n):\n  ans+=a[i//2]\nprint(ans)", "import sys\n\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\nA.reverse()\n\nans = 0\nfor i in range(N//2):\n    ans += A[i]\n\nfor i in range(N-N//2-1):\n    ans += A[i+1]\n\nprint(ans)\n", "m=len(bin(n:=int(input())))-4;A=sorted([*map(int,input().split())])[::-1];print(2*sum(A[:(x:=2**m-(-n+2**-~m)//2)])-A[0]-n%2*A[x-1])", "n = int(input())\na = sorted(list(map(int, input().split())))\ns = a[::]\nans = 0\nc = 0\nfor i in range(n-1):\n    if i == 0:\n        ans += s.pop()\n    else:\n        if c == 0:\n            ans += s[-1]\n            c += 1\n        elif c == 1:\n            ans += s.pop()\n            c = 0\n\nprint(ans)", "n=int(input())\na=sorted(list(map(int, input().split())), reverse=True)\ncur=1\ncnt=0\nans=a[0]\nfor i in range(1, n-1):\n    ans+=a[cur]\n    cnt+=1\n    if cnt==2:\n        cur+=1\n        cnt=0\nprint(ans)", "n=int(input())\na=sorted([int(x) for x in input().split()],reverse=True)\nans=a[0]\ncnt=idx=1\nwhile idx<n-1:\n  for i in range(2):\n    ans+=a[idx]\n    cnt+=1\n    if cnt==n-1: break;\n  else:\n    idx+=1\n    continue\n  break\n  \nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nans = a[0]\nnum = 2\nidx = 1\nwhile num<n:\n    if num+1==n:\n        ans += a[idx]\n        num += 1\n    else:\n        ans += a[idx]*2\n        num += 2\n        idx += 1\nprint(ans)", "def ans():\n    from math import floor\n    N = int(input())\n    A = [0] + list(map(int, input().split()))\n    A = sorted(A)\n\n    sum_conf = 0\n    for k in range(1, N):\n        sum_conf += A[N - floor(k / 2)]\n\n    print(sum_conf)\n\n\ndef __starting_point():\n    ans()\n__starting_point()", "N = int(input())\nA = sorted([int(i) for i in input().split()], reverse=True)\nprint(sum([A[(i+1)//2] for i in range(N-1)]))", "N = int(input())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor k in range(1, N): ans += A[N-k//2-1]\nprint(ans)", "N = int(input())\nA = [int(_) for _ in input().split()]\n\nA.sort(reverse=True)\n\nans = 0\nfor i in range(N-1):\n    ans += A[(i+1) // 2]\nprint(ans)\n", "from collections import deque\n\nn = int(input())\na = sorted(list(map(int, input().split())), reverse=True)\n\nq = deque()\nq.append(a[0])\nans = 0\nfor i in range(1, n):\n    b = q.popleft()\n    ans += b\n    b = min(b, a[i])\n    for _ in range(2):\n        q.append(b)\nprint(ans)\n", "import sys\nimport numpy as np\nfrom math import ceil as C, floor as F, sqrt\nfrom collections import defaultdict as D, Counter as CNT\nfrom functools import reduce as R\nimport heapq as H\n  \nALP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nalp = 'abcdefghijklmnopqrstuvwxyz'\ndef _X(): return sys.stdin.readline().rstrip().split(' ')\ndef _S(ss): return tuple(ss) if len(ss) > 1 else ss[0]\ndef S(): return _S(_X())\ndef Ss(): return list(S())\ndef _I(ss): return tuple([int(s) for s in ss]) if isinstance(ss, tuple) else int(ss)\ndef I(): return _I(S())\ndef _Is(ss): return list(ss) if isinstance(ss, tuple) else [ss]\ndef Is(): return _Is(I())\ndef rec(h, w): return [[0] * w for i in range(h)] \n\nn = I()\nxs = Is()\n\nxs = sorted(xs, reverse=True)\n\nseats = [-xs[0]]\nH.heapify(seats)\n\nans = 0\nfor x in xs[1:]:\n  ans -= H.heappop(seats)\n  H.heappush(seats, -x)\n  H.heappush(seats, -x)\n\nprint(ans)", "N = int(input())\nAn = list(map(int, input().split()))\nAn.sort(reverse=True)\nanswer = 0\nt = N-1\nfor i, Ai in enumerate(An):\n    lim = 2\n    if i==0:\n        lim = 1\n    for j in range(lim):\n        if t > 0:\n            answer += Ai\n        t -= 1\nprint(answer)\n", "n = int(input())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\n\nif n % 2 == 0:\n  cnt = n // 2\n  cnf = a[0] + sum(a[1:cnt]) * 2\n\nelse:\n  cnt = n //2\n  cnf = a[0] + sum(a[1:cnt]) * 2 + a[cnt]\n\nprint(cnf)\n", "n=int(input())\nA=list(map(int, input().split()))\nA=sorted(A, reverse=True)\nans=0\nfor i in range(1,n):\n    ans+=A[i//2]\nprint(ans)", "def chat_in_a_circle():\n    N = int(input())\n    A = list(map(int,input().split()))\n    A.sort()\n    res = A.pop(-1)\n    t = len(A) % 2 == 0\n    a = 0\n    for i in range(len(A) // 2):\n        a = A.pop(-1)\n        res += a*2\n    if t:\n        res -= a\n        \n    print(res)\n\nchat_in_a_circle()", "import math\nN = int(input())\nA = list(map(int,input().split()))\n\nlist.sort(A, reverse=True)\nans = 0\n\nfor i in range(N-1):\n#    print(A[math.ceil(i/2)])\n    ans += A[math.ceil(i/2)]\n\nprint(ans)\n", "n=int(input())\na=[int(i) for i in input().split()]\na.sort()\n\nans=0\nfor i in range(1,n):\n    if i==1:\n        ans+=a[-i]\n    else:\n        ans += a[-((i-2)//2+2)]\nprint(ans)", "a = input()\nN = int(a)\nA = list(map(int,input().split()))\nA.sort()\n\nx = A[N-1]\n\nfor i in range(1,(N-2)//2+1):\n    x = x + 2*A[N-1-i]\nif (N-2) % 2 == 1:\n    x = x + A[N-2-(N-2)//2]\n\nprint(x)\n", "def main():\n\tN = int(input())\n\tfriendliness = [int(a) for a in input().split(\" \")]\n\n\tfriendliness.sort(reverse=True)\n\tput = 1\n\tcomfort = 0\n\tfor i in range(len(friendliness)):\n\t\tif i == 0:\n\t\t\tput += 1\n\t\t\tcomfort += friendliness[0]\n\t\telif put + 2 <= len(friendliness):\n\t\t\tput += 2\n\t\t\tcomfort += 2 * friendliness[i]\n\t\telse:\n\t\t\tcomfort += (len(friendliness) - put) * friendliness[i]\n\t\t\tbreak\n\n\tprint(comfort)\n\nmain()", "N = int(input())\nA = sorted(list(map(int, input().split())), reverse=True)\n\nans = 0\ncnt = 1\n# \u6700\u5927\u5024\u306f\u4e00\u56de\u3060\u3051\nans += A[0]\n\n# N-2\u500b\u306f\u30012,2,3,3,..i,i,...\u306e\u3088\u3046\u306b\u53d6\u308b\nflag = False\nfor i in range(1, len(A)-1):\n    ans += A[cnt]\n    if flag == False:\n        flag = True\n    else:\n        flag = False\n        cnt += 1\nprint(ans)", "from collections import deque\n\nn = int(input())\na = sorted(list(map(int, input().split())), reverse=True)\nq = deque([a[0]])\nans = 0\nfor i in range(n-1):\n    ans += q.popleft()\n    q.extend([a[i+1], a[i+1]])\nprint(ans)", "n = int(input())\nfriendry = list(map(int,input().split()))\nfriendry.sort()\nfriendry.reverse()\n# print(friendry)\nans = 0\nt = n-1\nfor i in range(n-1):\n    lim = 2\n    if(i == 0):\n        lim = 1\n    for j in range(lim):\n        if(t > 0):\n            ans += friendry[i]\n            t -= 1\n\nprint(ans)\n\n", "n = int(input())\na = sorted(list(map(int,input().split())),reverse=True)\np = 0\nans = 0\nfor i in range(n):\n  if i==0:continue\n  ans += a[p]\n  if i%2==1:\n    p += 1\nprint(ans)", "n=int(input())\na=sorted(list(map(int,input().split())))\nans=a.pop()\nfor i in range(n//2-1):\n    ans+=2*a.pop()\nif n%2==1:\n    ans+=a.pop()\nprint(ans)", "N=int(input())\nA = sorted(map(int, input().split()), reverse=True)\nif N%2==1:\n  print((sum(A[0:(N-1)//2])+sum(A[1:(N+1)//2])))\nelse:\n  print((sum(A[0:N//2])+sum(A[1:N//2])))\n", "n = int(input())\na = list(map (int,input().split()))\na.sort()\nif n % 2 == 0:\n    print((sum(a)-sum(a[:n//2]))*2-max(a))\nelse:\n    print((sum(a)-sum(a[:n//2]))*2-max(a)- a[n//2])", "import sys\nimport re\nimport queue\nimport collections\nfrom math import ceil, floor, sqrt, pi, factorial, gcd\nfrom copy import deepcopy\nfrom collections import Counter, deque\nfrom heapq import heapify, heappop, heappush\nfrom itertools import accumulate, product, combinations, combinations_with_replacement\nfrom bisect import bisect, bisect_left, bisect_right\nfrom functools import reduce\nfrom decimal import Decimal, getcontext\n# input = sys.stdin.readline\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\ndef lcm(a, b): return a * b // gcd(a, b)\nsys.setrecursionlimit(10 ** 8)\nINF = float('inf')\nMOD = 10 ** 9 + 7\nnum_list = []\nstr_list = []\n\n\ndef main():\n\tN = i_input()\n\tA = i_list()\n\n\tlist.sort(A)\n\tsum = 0\n\tfor i in range(1,N):\n\t\tsum += A[N-1 - floor(i/2)]\n\n\tprint(sum)\n\n\treturn\n\ndef __starting_point():\n\tmain()\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\n\nA.sort()\nretval = 0\nfor i in range(1,N):\n  retval+=A[N-i//2-1]\n  #print(N-i//2-1)\nprint(retval)", "n = int(input())\na_list = sorted([int(x) for x in input().split()])\nans = a_list.pop()\nn -= 2\nwhile n > 0:\n    a = a_list.pop()\n    ans += a\n    n -= 1\n    if n > 0:\n        ans += a\n        n -= 1\nprint(ans)", "import math\nimport sys\nimport os\nfrom operator import mul\n\nsys.setrecursionlimit(10**7)\n\ndef _S(): return sys.stdin.readline().rstrip()\ndef I(): return int(_S())\ndef LS(): return list(_S().split())\ndef LI(): return list(map(int,LS()))\n\nif os.getenv(\"LOCAL\"):\n    inputFile = basename_without_ext = os.path.splitext(os.path.basename(__file__))[0]+'.txt'\n    sys.stdin = open(inputFile, \"r\")\nINF = float(\"inf\")\n\nN = I()\nA = LI()\n\nA.sort(reverse=True)\nhalf, isOdd = divmod(len(A),2)\n\nans = A[0]\nfor i in range(1,half):\n    ans += 2 * A[i]\n\nif isOdd == 1:\n    ans += A[half]\n\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse = True)\n\nans = 0\n\ni = 0  # \u4f55\u4eba\u76ee\u306e\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u3055\u304c\u30d7\u30e9\u30b9\u3055\u308c\u308b\u304b\nnokori = N - 1 # \u6b8b\u308a\u5165\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u4eba\u6570\nwhile nokori > 0:\n    if i == 0:  # \u6700\u3082\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u4eba\u306f\u521d\u3081\u306b\u5165\u308c\u308b\n        ans += A[i]\n        nokori -= 1\n    else:\n        if nokori == 1:\n            ans += A[i]\n            nokori -= 1\n        else:\n            ans += 2 * A[i]\n            nokori -= 2\n    i += 1\n\nprint(ans)\n", "N=int(input())\nA=list(map(int,input().split()))\nA=sorted(A,reverse=True)\n\nN-=1\ni=1\nkoko=A[0]\nf=0\nwhile 1:\n  for _ in range(2):\n    N-=1\n    if N==0:\n      f=1\n      break\n    koko+=A[i]\n  if f==1:\n    break\n  i+=1\nprint(koko)", "n = int(input())\na = list(map (int,input().split()))\na.sort()\nif n % 2 == 0:\n    print((sum(a)-sum(a[:n//2]))*2-max(a))\nelse:\n    print((sum(a)-sum(a[:n//2]))*2-max(a)- a[n//2])", "n = int(input())\na = list(map(int, input().split()))\na.sort()\n\nans = 0\nfor i in range(1, n):\n    ans += a[n - i//2 - 1]\n\nprint(ans)\n", "n = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nans = A[0] + sum(2 * a for a in A[1:n//2])\nif n % 2 == 1:\n  ans += A[n//2]\nprint(ans)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef S_MAP(): return map(str, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nA = LIST()\n\nA.sort(reverse=True)\nans = A[0]\ncnt = 1\n\nfor x in A[1:]:\n    if cnt == N - 1:\n        break\n    if cnt == N - 2:\n        ans += x\n        cnt += 1\n        # \u5947\u6570\u306e\u5834\u5408\n    else:\n        ans += 2 * x\n        cnt += 2\nprint(ans)", "N=int(input())\nA=sorted(list(map(int,input().split())),reverse=True)\n\nans=0\nfor i in range(1,N):\n  ans+=A[i//2]\nprint(ans)", "\nN = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\ncircle =[]\n\nsum_val = 0\nfor idx in range(1, len(A)):\n    sum_val += A[idx//2]\n    # circle, val = insert_val(circle, a)\n    # sum_val += val\n\nprint(sum_val)\n", "\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n    a.sort(reverse = True)\n    ans = a[0]\n    t = N - 2\n\n    for i in range(1, N):\n        for _ in range(2):\n            if t > 0:\n                ans += a[i]\n                t -= 1\n    print(ans)\n        \n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nA = sorted(list(map(int, input().split())))[::-1]\n\nif n % 2 == 0:\n    print(sum(A[:n//2] * 2) - A[0])\nelse:\n    print(sum(A[:n//2] * 2) - A[0] + A[n//2])", "import sys\nstdin = sys.stdin\nsys.setrecursionlimit(10**6)\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnn = lambda: list(stdin.readline().split())\nns = lambda: stdin.readline().rstrip()\n\nn = ni()\na = na()\na = sorted(a)[::-1]\nans = sum(a[:(n+1)//2])*2-a[0]\nans = ans if n%2==0 else ans-a[(n+1)//2-1]\n\nprint(ans)\n", "import heapq\n\nN = int(input())\nA = [int(x) * -1 for x in input().split()]\nheapq.heapify(A)\nconf = heapq.heappop(A) * -1\n\nfor i in range(N - 2):\n    feel = heapq.heappop(A) * -1\n    conf += feel\n    if i % 2 == 0:\n        heapq.heappush(A, feel * -1)\n\nprint(conf)\n", "N = int(input())\nA = list(map(int, input().split()))\nB = []\nfor a in A:\n    B.append(a)\n    B.append(a)\nB.sort()\nB.pop()\nans = 0\nfor i in range(N - 1):\n    ans += B.pop()\nprint(ans)\n", "n = int(input())\na = list(map(int,input().split()))\na.sort(reverse = True)\nif n % 2:\n    print(a[0]+a[n//2]+2*(sum(a[1:(n-1)//2])))\nelse:\n    print(a[0]+2*(sum(a[1:n//2])))", "N=int(input())\nA=list(map(int,input().split()))\nA.sort()\nans=0\nfor i in range(N-1):ans+=A[N-(i+1)//2-1]\nprint(ans)", "N = int(input())\nA = sorted(list(map(int,input().split())),reverse=True)\nans = A[0]\nfor i in range(1,N//2):\n    ans += 2* A[i]\nif N%2 == 1:\n    ans += A[N//2]\nprint(ans)", "N=int(input())\n*A,=sorted(map(int,input().split()), reverse=True)\n\nn=N-2\na=A[0]\ni=1\nwhile 0<n:\n  if n==1:\n    a+=A[i]\n    break\n  a+=A[i]*2\n  i+=1\n  n-=2\nprint(a)", "n = int(input())\np_list = input().split()\np_list = map(int,p_list)\np_list = sorted(p_list,reverse=True)\nans_list = []\nans = 0\nfor i in range(0,len(p_list)):\n  if i!=0:\n    ans_list.append(p_list[i])\n    ans_list.append(p_list[i])\n  else:\n    ans_list.append(p_list[i])\nfor i in range(0,n-1):\n\tans += int(ans_list[i])\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nA = sorted(A, reverse=True)\nans = 0\nfor i in range(1, N):\n    ans += A[i//2]\nprint(ans)", "import math\n\nn = int(input())\nf = list(map(int,input().split()))\nf.sort()\nans = 0\n\nfor i in range(1,n):\n    ans += f[n-math.floor(i/2)-1]\n\nprint(ans)", "n = int(input())\nf = list(map(int,input().split()))\nf.sort(reverse = True)\nans = 0\nif n%2 == 0:\n    for i in range(n//2):\n        ans += f[i] * 2\n    ans -= f[0]\nelse:\n    for i in range(n//2):\n        ans += f[i] * 2\n    ans += f[n//2]-f[0]\n\nprint(ans)\n", "import math\nimport sys\nimport os\nfrom operator import mul\n\nsys.setrecursionlimit(10**7)\n\ndef _S(): return sys.stdin.readline().rstrip()\ndef I(): return int(_S())\ndef LS(): return list(_S().split())\ndef LI(): return list(map(int,LS()))\n\nif os.getenv(\"LOCAL\"):\n    inputFile = basename_without_ext = os.path.splitext(os.path.basename(__file__))[0]+'.txt'\n    sys.stdin = open(inputFile, \"r\")\nINF = float(\"inf\")\n\nN = I()\nA = LI()\n\nA.sort(reverse=True)\n# print(A)\n# half = math.ceil(len(A)/2)\nq, mod = divmod(len(A),2)\n\nif mod == 0:\n    ans = A[0]\n    for i in range(1,q):\n        ans += 2 * A[i]\nelse:\n    ans = A[0]\n    for i in range(1,q):\n        ans += 2 * A[i]\n    ans += A[q]\n\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\n#n = int(input())\n#l = list(map(int, input().split()))\n\n'''\na=[]\nb=[]\nfor i in range():\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\n\n\nn=int(input())\na=list(map(int,input().split()))\na.sort()\n#print(a)\nans=0\nfrom math import floor\nfor i in range(1,n):\n    ans+=a[n-1-floor(i/2)]\n    #print(ans)\nprint(ans)\n", "import math\n\nN = int(input())\nA = list(map(int,input().split()))\n\nA.sort(reverse=True)\n\ncomfortPoint = A[0]\n\nfor i in range(N-1)[1::]:\n    comfortPoint += A[math.ceil(i/2)]\n\nprint(comfortPoint)\n", "N = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\narrival = 1\nans = 0\n\nwhile arrival < N:\n    score = a.pop()\n    if arrival == 1:\n        ans += score\n        arrival += 1\n    else:\n        ans += score*min(2, N - arrival)\n        arrival += 2\n\nprint(ans)", "n = int(input())\nli_a = list(map(int, input().split()))\nli_a.sort(reverse=True)\nans = 0\nfor i in range(1, n):\n    ans += li_a[i//2]\nprint(ans)\n", "N = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nans = A[0] #\u6700\u5927\u5024\u3060\u30511\u56de\nfor i in range(N-2):\n    ans += A[i//2 + 1]\nprint(ans)", "n = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nans = A[0]\nif n%2 == 0:\n    ans += sum(A[1:n//2])*2\nelse:\n    ans += sum(A[1:n//2])*2 + A[n//2]\n\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\nscore = [A[0]]\nfor i in range(1, N):\n    for j in range(2):\n        score.append(A[i])\n\n    if len(score) >= N:\n        break\n\nprint((sum(score[:N-1])))\n", "n = int(input())\np = list(map(int, input().split()))\np.sort(reverse=True)\n#\u8ffd\u52a0\u3057\u3066\u3044\u304f\u969b\u306b\u8ffd\u52a0\u3057\u305f\u6570\u306e\u4e21\u8107\u3092\u56fa\u3081\u308b\ns = 0\nfor i in range(1,n):\n    s += p[i//2]\n\nprint(s)", "n = int(input())\nA = list(map(int, input().split()))\nif n == 2:\n  print(max(A))\nelse:\n  A.sort(reverse=True)\n  ans = A[0]\n  for a in A[1:n//2]:\n    ans += 2 * a\n  if n % 2 == 1:\n    ans += A[n//2]\n  print(ans)", "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    A.sort(reverse=True)\n    ans = A[0] + sum(A[i//2+1] for i in range(N-2))\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\n\na.sort(reverse=True)\n\nans=a[0]\nch=1\n\nfor i in range(1,n):\n  if ch==n-1:\n    break\n  else:\n    ans+=a[i]\n    ch+=1\n    \n  if ch==n-1:\n    break\n  else:\n    ans+=a[i]\n    ch+=1\n    \nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nif n % 2 == 0:\n    suma = 2*sum(a[-int((n/2)):])-a[-1]\nelse:\n    suma = 2*sum(a[-int(((n+1)/2)):])-a[-1]-a[-int(((n+1)/2))]\n\nprint(suma)", "from collections import deque\n\nn = int(input())\na = sorted(list(map(int, input().split())), reverse=True)\n\nq = deque()\nq.append(a[0])\nans = 0\nfor i in range(1, n):\n    b = q.popleft()\n    ans += b\n    b = min(b, a[i])\n    for _ in range(2):\n        q.append(b)\nprint(ans)", "N=int(input())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\nif N%2==0:\n    x=A[0]\n    x+=sum(A[1:N//2])*2\n    print(x)\nelse:\n    x=A[0]\n    x+=sum(A[1:(N-1)//2])*2\n    x+=A[(N-1)//2]\n    print(x)\n", "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nfrom collections import deque\ndef main():\n    n, *a = list(map(int, read().split()))\n    a.sort(reverse=True)\n    a = deque(a)\n    circle_joined = deque()\n    next_score = a.popleft()\n    r = 0\n    flag = False\n    while a:\n        circle_joined.append(a.popleft())\n        if flag:\n            next_score = circle_joined.popleft()\n            r += next_score\n            flag = False\n        else:\n            r += next_score\n            flag = True\n    print(r)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\n\na.sort(reverse=True)\n\ncnt=a[0]\n\nif n%2==0:\n    for i in range(1,n//2):\n        cnt+=a[i]*2\nelse:\n    for i in range(1,(n-1)//2):\n        cnt+=a[i]*2\n    cnt+=a[(n-1)//2]\n\nprint(cnt)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn = int(input())\nA = [int(i) for i in input().split()]\n\ntmp = 0\nres = 0\n\nA = sorted(A, reverse=True)\nres = A[0] + 2 * sum(A[1:n // 2]) + n % 2 * A[n // 2]\n\nprint(res)\n", "N=int(input())\n*A,=sorted(map(int,input().split()), reverse=True)\n\nn=N-2\na=A[0]\ni=1\nwhile 1<n:\n  a+=A[i]*2\n  i+=1\n  n-=2\nprint(a+A[i] if n else a)", "n = int(input())\nA = sorted(list(map(int, input().split())), reverse=True)\n\nm = (n + 1) // 2\nif n % 2 == 0:\n    print(sum(A[:m - 1]) + sum(A[1:m]) + A[m - 1])\nelse:\n    print(sum(A[:m - 1]) + sum(A[1:m]))", "N = int(input())\nA = 2*list(map(int, input().split()))\nA.sort()\nprint(sum(A[N:-1]))", "n=int(input())\na=sorted([int(x) for x in input().split()],reverse=True)\nans=0\nfor i in range(n-1):\n  ans+=a[(i+1)//2]\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\n\nlen_A = len(A)\nans = 0\nfor i in range(1, len_A):\n  ans += A[len_A-1-int(i/2)]\n\nprint(ans)", "n=int(input())\na=sorted([int(x) for x in input().split()],reverse=True)\nans=sum([a[(i+1)//2] for i in range(n-1)])\nprint(ans)", "N = int(input())\n\nA = [int(x) for x in input().split()]\n\nans = 0\nA.sort(reverse=True)\n#print(A)\nans += sum(A[:(N+1)//2-1])\nfor i in range((N+1)//2 - 1):\n    ans += min(A[i],A[i+1])\n    \nif N%2 == 0:\n    ans += A[N//2 - 1]\n\nprint(ans)", "import heapq as hq\n\nn = int(input())\na = [int(_) for _ in input().split()]\n\na.sort()\np = a.pop()\nq = []\nhq.heappush(q, (-p, -p))\nans = 0\nfor _ in range(n - 1):\n    p = a.pop()\n    b1, b2 = hq.heappop(q)\n    ans += -b1\n    hq.heappush(q, sorted((b1, -p), reverse=True))\n    hq.heappush(q, sorted((b2, -p), reverse=True))\nprint(ans)\n", "n = int(input())\na = list(map(int,input().split()))\na.sort(reverse=True)\nans = a[0]\nif n == 2:\n  print(ans)\nelif n%2 == 0:\n  ans += sum(a[1:n//2])*2\n  print(ans)\nelse:\n  ans += sum(a[1:n//2])*2\n  ans += a[n//2]\n  print(ans)", "\nN = int(input())\na = list(map(int, input().split()))\n\n\na = sorted(a, reverse = True)\nans = 0\n\nindex_val = int(N//2)\nans += a[0]\nfor i in range(1, index_val):\n    ans += (2 * a[i])\nif N % 2 != 0:\n    index_val = N//2\n    ans += a[index_val]\n\nprint(ans)"]