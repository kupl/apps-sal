["from itertools import *\n\n\nk, p = list(map(int, input().split()))\nss = 0\nfor i in range(1, k + 1):\n    s = str(i)\n    num = int(s + ''.join(reversed(s)))\n    ss += num\n    ss %= p\nprint(ss)\n", "import sys\nsys.setrecursionlimit(100000000)\n# def input(): return sys.stdin.readline()[:-1]\ndef iin(): return int(input())\ndef impin(): return list(map(int, input().split()))\ndef irrin(): return [int(x) for x in input().split()]\ndef imrin(n): return [int(input()) for _ in range(n)]\n\n\ns = 0\nk, p = impin()\nfor i in range(1, k+1):\n    s = (s+i*10**len(str(i))+int(str(i)[::-1]))%p\nprint(s)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/12/2 22:09\n\n\"\"\"\n\nK, P = map(int, input().split())\n\nans = 0\nfor v in range(1, K+1):\n    x = str(v)\n    x = x + x[::-1]\n    x = int(x)\n    ans += x\n    ans %= P\nprint(ans)", "k, p = list(map(int, input().split()))\nc = 0\nfor i in range(1, k + 1):\n\ts = str(i)\n\ts_ = s[::-1]\n\tc += int(s + s_)\n\tc %= p\nprint(c)", "k, p = map(int, input().split())\nans = 0\nfor i in range(1, k+1):\n    n = i\n    n = str(i) + str(i)[::-1]\n    n = int(n)\n    ans += n\nprint(ans%p)", "k,p = list(map(int,input().split()))\n\ni = 1\nS = 0\nwhile k>0:\n    S += int(str(i)+str(i)[::-1])\n    i += 1\n    k -= 1\nprint(S%p)\n", "K, P = list(map(int, input().split()))\nsums = 0\n\nfor i in range(1, K+1):\n    sums += int(str(i)+str(i)[::-1])\n    sums %= P\nprint(sums)\n", "k, p = map(int, input().split())\n\ndef zcy(n):\n    ans = str(n) + str(n)[::-1]\n    return int(ans)\n\nans = 0\nfor i in range(1, k + 1):\n    ans = (ans + zcy(i)) % p\n\nprint(ans)", "\n\n\ndef main():\n    k, p = map(int, input().split())\n    s = 0\n    for i in range(1, k + 1):\n        r = str(i)\n        w = r[::-1]\n        n = int(r + w)\n        s += n\n\n    print(s % p)\n\n\n\n\ndef __starting_point():\n    try:\n        main()\n    except KeyboardInterrupt:\n        pass\n__starting_point()", "k, p = list(map(int, input().strip().split()))\n\n\nvsota = 0\n\ncount = 0\n\nx = 1\nwhile True:\n    u = int(str(x) + str(x)[::-1])\n    vsota += u\n    count += 1\n    if count == k:\n        break\n    x += 1\nprint(vsota % p)\n\n        \n\n", "k, p = [int(x) for x in input().split()]\n\ns = 0\n\nfor i in range(k):\n    n = str(i + 1)\n    n += n[::-1]\n    s = (s + int(n)) % p\n\nprint(s)\n", "n=input()\nx,y=n.split()\ny=int(y)\nsu=0\nfor i in range(1,int(x)+1):\n    z=int(str(i)+str(i)[::-1])\n    su+=z\n    su%=y\nprint(su)\n", "k, p = list(map(int, input().split()))\nans = 0\nfor n in range(1, k + 1):\n    x = n\n    y = 0\n    z = n\n    while 0 < x:\n        y *= 10\n        y += x % 10\n        x //= 10\n        z *= 10\n    z += y\n    ans += z\n    ans %= p\nprint(ans)\n", "k, p = list(map(int, input().split()))\ns = 0\nfor i in range(1, k+1):\n    s = (s+int(str(i)+str(i)[::-1]))%p\nprint(s)\n", "maxk = 100001\n\nn = 1\nzcy = []\nwhile len(zcy) <= maxk:\n    zcy.append(int(str(n) + str(n)[::-1]))\n    n += 1\n\ns = input().strip().split()\nk = int(s[0])\np = int(s[1])\nans = 0\n\nfor i in range(k):\n    ans = (ans + zcy[i]) % p\n\nprint(ans)\n", "k, p = map(int, input().split())\nz = 9\nres = 0\nmn = 11\ni = 1\ndef x(i):\n\treturn int(str(i)[::-1])\nfor i in range(1, k + 1):\n\tif i < 10:\n\t\tres += i * 11\n\telif i < 100:\n\t\tres += i * 100 + x(i)\n\telif i < 10**3:\n\t\tres += i * 10**3 + x(i)\n\telif i < 10**4:\n\t\tres += i * 10**4 + x(i)\n\telif i < 10**5:\n\t\tres += i * 10**5 + x(i)\n\telse:\n\t\tres += i * 10**6 + x(i)\nprint(res % p)", "def get_zcy(a):\n    s = str(a)\n    ln = len(s)\n    return a * 10 ** ln + int(s[::-1])\n\n\nk, p = list(map(int, input().split()))\n\nprint(sum([get_zcy(x) for x in range(1, k + 1)]) % p)\n", "import math\nA = input().split()\nk = int(A[0])\np = int(A[1])\npalin = [0]*k\nfor i in range (0,k):\n    digit = int(math.log(i+1) // math.log(10))\n    L = list(str(i+1))\n    M = L[::-1]\n    fin = L+M\n    num = ''.join(fin)\n    palin[i] = int(num)\nsum = 0\nfor i in range (0,k):\n    sum = (sum + palin[i])%p\nprint(sum)", "k, p = list(map(int, input().split()))\n\ndef cd(n):\n\tres = 0\n\twhile n > 0:\n\t\tres += 1\n\t\tn //= 10\n\treturn res\n\ndef rev(n):\n\tres = 0\n\twhile n > 0:\n\t\tres*= 10\n\t\tres += n % 10\n\t\tres %= p\n\t\tn //= 10\n\treturn res\n\nans = 0\nfor i in range(1, k + 1):\n\tans += i * 10**cd(i) + rev(i)\n\tans %= p\nprint(ans)", "k, p = list(map(int, input('').strip().split()))\nanswer = 0\nbefore = 0\nfor i in range(k):\n    if before == 0:\n        before = 1\n    else:\n        before += 1\n    now = int(str(before) + str(before)[::-1])\n    answer = (answer + now) % p\nprint(answer)", "l=[]\ni=0\ns='1'\nwhile i<100002:\n    l.append(s+s[::-1])\n    s=int(s)\n    s+=1\n    i+=1\n    s=str(s)\nn,m=map(int,input().split());\np=0\ni=0 \nwhile i<n:\n    p=(p+int(l[i])%m)%m;\n    i+=1\nprint(p)", "k, p = [int(i) for i in input().split()]\nans = 0\nfor i in range(1,k+1):\n    tmp = str(i)\n    n = len(tmp)\n    rev = tmp[::-1]\n    ans += (i * 10**(n) + int(rev)) % p\nprint(ans % p)", "k , p = map(int,input().split())\n\nans = 0 \nfor i in range(1,k+1):\n  string = str(i) + str(i)[::-1]\n  ans += int(string)\n  ans %= p  \n  \nprint(ans)", "#k, p = 10, 10000\n\nk, p = list(map(int,input().strip().split()))\n\n\nres = 0\n\nfor i in range(1,k+1):\n\n  x = str(i)\n\n  x = x + x[::-1]\n\n\n  res = (res+ int(x)) % p\n\nprint(res)\n", "k, p = map(int, input().split())\nans = 0\nfor i in range(1, k + 1):\n    ans += int(str(i) + str(i)[::-1])\n    ans %= p\nprint(ans)"]