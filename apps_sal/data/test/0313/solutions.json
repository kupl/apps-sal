["n = int(input())\na = list(map(int, input().split()))\nc = 0\nl = 0\nb = 0\nwhile c < len(a) and a[c] == 0:\n    c += 1\n    b += 1\n\nif c == len(a):\n    print(0)\n    return\n\nd = len(a) - 1\nwhile a[d] != 1:\n    d -= 1\n    b += 1\n\nwhile c <= d:\n    if a[c] == 0:\n        l += 1\n    else:\n        if l > 1:\n            b += l\n        l = 0\n    c += 1\n\nprint(n - b)", "input()\nl = list(map(int, input().split()))\nwhile l and l[0] == 0:\n\tl = l[1:]\nwhile l and l[-1] == 0:\n\tl = l[:-1]\nfor i in range(1, len(l) - 1):\n\tif l[i-1] == 1 and l[i] == 0 and l[i+1] == 1:\n\t\tl[i] = 1\nprint(l.count(1))\n\t\t\n", "n = int(input())\nmas=list(map(int,input().split(\" \")))\np=0\nres=0\nfor i in range(n):\n    if mas[i]==0:\n        if i>0 and i<n-1:\n            if mas[i-1]==1 and mas[i+1]==1:\n                mas[i]=1\nprint(sum(mas))\n", "n=int(input())\nl=list(map(int,input().split()))\nfor i in range(2,n):\n    if l[i]==1 and l[i-1]==0 and l[i-2]==1: l[i-1]=1\nprint(l.count(1))", "n = int(input())\na = [int(v) for v in input().split()]\n\nfor i in range(1, len(a) - 1):\n\tif a[i - 1] == 1 and a[i + 1] == 1:\n\t\ta[i] = 1\n\nprint(sum(a))", "n = int(input())\na = list(map(int, input().split()))\ncount = 0\ni = 0\nwhile i < n and a[i] == 0:\n    i += 1\nwhile i < n:\n    if a[i] == 1:\n        i += 1\n        count += 1\n    else:\n        tmp = 0\n        while i < n and a[i] == 0:\n            tmp += 1\n            i += 1\n        if i != n and tmp < 2:\n            count += tmp\nprint(count)", "n = int(input())\n\ns = input()\n\na = s.split(\" \")\n\na = [int(i) for i in a]\nc = 0\nr = 0\nfor i in range(n):\n    if i == n-1:\n        if a[i] == 1:\n            c += 1\n        \n    elif r>0:\n        if a[i] == 0 and a[i+1] == 0:\n            r = 0\n        else:\n            c += 1\n    else:\n        if a[i] == 1:\n            c += 1\n            r = 1\nprint (c)\n", "input()\npprev, prev = None, None\nans = 0\nfor i in input().split():\n    if i == '1':\n        ans += 1\n        if prev == '0' and pprev == '1':\n            ans += 1\n    pprev, prev = prev, i\nprint(ans)\n", "import sys\nimport re\nsys.stdin.readline()\ns = sys.stdin.readline()\ns = re.sub('[^01]','',s)\ns = s.strip('0')\ns = re.sub('0{2,}','',s)\n#print(repr(s))\nprint(len(s))\n\n", "n = int(input())\na = [int(i) for i in input().split(\" \")]\nwas_one = False;\nres = sum(a)\nzeros = 0;\nfor i in a:\n\tif (i == 1):\n\t\twas_one = True\n\t\tif (zeros == 1):\n\t\t\tres += 1\n\t\tzeros = 0\n\tif (was_one and i == 0):\n\t\tzeros += 1\nprint(res)", "n = int(input())\narray = list(map(int, input().split()))\ncount = sum(array)\nfor i in range(1, n - 1):\n    #if (array[i - 1] == array[i]) and array[i] == 0:\n     #   print(i, 'TUTA')\n      #  count += 1\n    if array[i] == 0 and array[i - 1] == 1 and array[i + 1] == 1:\n        count += 1\nprint(count)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn = int(input())\nA = list(map(int,input().split()))\n\nattends = 0\ni = 0\nwhile i < n:\n    if A[i] == 1:\n        attends += 1\n    else:\n        if 0 < i < n - 1 and A[i-1] == 1  and A[i+1] == 1:\n            attends += 2\n            i += 1\n    i += 1\nprint(attends)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport re\n\nN = int(input())\nS = input()\nS = S.replace(\" \", \"\")\nS = S.strip(\"0\")\n\nret = 0\nfor seg in re.split(\"00+\", S):\n    ret += len(seg)\n\nprint(ret)\n\n", "n = int(input())\nlst = [int(x) for x in input().split()]\n\n\natuniversity = False\nbreak_length = 0\ntime = 0\n\nfor lesson in lst:\n\tif lesson == 1:\n\t\tatuniversity = True\n\t\tbreak_length = 0\n\telif lesson == 0:\n\t\tbreak_length += 1\n\t\tif break_length >= 2:\n\t\t\tif atuniversity:\n\t\t\t\ttime -= 1\n\t\t\tatuniversity = False\n\n\tif atuniversity:\n\t\ttime += 1\n\ntry:\n\tif lst[-1] == 0 and lst[-2] == 1:\n\t\ttime -= 1\nexcept IndexError:\n\tpass\n\nprint(time)", "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i, e in enumerate(a):\n    if e == 1:\n        ans += 1\n    else:\n        if i < len(a) - 1 and i > 0 and\\\n         a[i + 1] == 1 and a[i - 1] == 1:\n            ans += 1\n\nprint(ans)\n", "def read_numbers():\n    return list(map(int, input().split()))\n\ndef f(pairs):\n    while pairs and pairs[0] == 0:\n        pairs.pop(0)\n    while pairs and pairs[-1] == 0:\n        pairs.pop()\n\n    count = 0\n    parity = False\n    tmp_count = 0\n    for i in pairs:\n        if i:\n            if parity:\n                tmp_count += 1\n            parity = False\n            tmp_count += 1\n        else:\n            if not parity:\n                parity = True\n            else:\n                count += tmp_count\n                tmp_count = 0\n            if tmp_count == 0:\n                parity = False\n\n    count += tmp_count\n    return count\n\n\n\ndef __starting_point():\n    n = int(input())\n    numbers = read_numbers()\n    print(f(numbers))\n\n__starting_point()", "n = int(input())\na = [int(x) for x in input().split()]\nk = 0\nwhile k < n and a[k] != 1:\n    k += 1\nm = n - 1\nwhile m >= 0 and a[m] != 1:\n    m -= 1\nans = m - k + 1\nfor i in range(k + 1, m):\n    if a[i] == 0 and (a[i - 1] == 0 or a[i + 1] == 0):\n        ans -= 1\nprint(max(0, ans))", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\nn   = int(input())\na   = [int(i) for i in input().split()]\n\nstart = time.time()\nans = 0\ni   = 0\n\nwhile(i < len(a)):\n    if a[i] == 1:\n        break\n    i += 1\n\n\nwhile(i < len(a)-1):\n    if a[i] == 0 and a[i+1] == 1 and a[i-1] == 1:\n        a[i] = 1\n        i\n    i += 1\n\nprint(sum(a))\n\nfinish = time.time()\n#print(finish - start)\n", "n = int(input())\na = list(map(int, input().split()))\nans = sum(a)\nfor i in range(1, n - 1):\n    if a[i] == 0 and a[i + 1] == 1 and a[i - 1] == 1:\n        ans += 1\nprint(ans)\n", "n = input()\nlessons = input().split()\nprev = '0'\nhome = True\ncnt = 0\nfor l in lessons:\n    if l == '0' and prev == '0':\n        home = True\n    elif l == '1':\n        cnt += 1\n        if prev == '0' and not home:\n            cnt += 1\n        home = False\n    prev = l\nprint(cnt)\n\n\n", "n=int(input())\na=input()\na=a.replace(' ','')\na=a+'00'\nc=2\nh=0\nfor i in a:\n    if i=='0':\n        c+=1\n    else:\n        if c==1:\n            h+=2\n        else:\n            h+=1\n        c=0\nprint(h)", "n = int(input())\na = list(map(int, input().split(' ')[:n]))\nres = 0\nstate = 0\nfor x in a:\n    if state == 0:\n        if x == 0:\n            pass\n        else:\n            state = 1\n            res += 1\n    elif state == 1:\n        if x == 0:\n            state = 2\n        else:\n            res += 1\n    elif state == 2:\n        if x == 0:\n            state = 0\n        else:\n            state = 1\n            res += 2\n\nprint(res)\n", "n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\n#print(l)\nstop = -1\nfor i in range(n):\n    if l[i] == 1:\n        break\n    else:\n        stop = i\nwhile l and l[-1] == 0:\n    l.pop(-1)\n#print(l)\nfor i in range(stop+1, len(l)):\n    #print(i)\n    if i <= len(l)-2:\n        if (i<len(l)-1 and l[i] == 0 and l[i+1] == 0) or (i>0 and l[i] == 0 and l[i-1]==0):\n            pass\n            #print(\"bob\")\n        elif l[i] == 1 or l[i+1] == 1 or l[i+2] == 1:\n            cnt += 1\n            #print(\"add\")\n    elif i <= len(l)-2:\n        if l[i+1] == 1:\n            #print(\"add\")\n            cnt += 1\n    elif l[i] == 1:\n        #print(\"add\")\n        cnt += 1\n        \nprint(cnt)\n", "n = int(input())\nl = list(map(int, input().split()))\nres = 0\nfor i in range(n):\n    if l[i]: res += 1\n    elif i > 0 and i < n - 1 and l[i - 1]and l[i + 1]: res += 1\n    else: continue\nprint(res)    \n", "n = int(input())\na = [int(x) for x in input().split()]\ntime = 0\ntry:\n    start = a.index(1)\nexcept:\n    print(0)\n    return\ncurrent = a[start]\nzero_in_row = 0\nf = lambda x: 1 if x == 1 else 0\n\nfor i in range(start, n):\n    if a[i] == 1:\n        time += f(zero_in_row)\n        zero_in_row = 0\n        time += 1\n    else:\n        zero_in_row += 1\n\nprint(time)\n"]