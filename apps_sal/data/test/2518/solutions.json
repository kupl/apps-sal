["import heapq\n\nn, a, b = map(int, input().split())\nh = []\nfor i in range(n):\n    h.append(int(input()))\nac = (max(h) - 1) // b + 1\nwa = 0\nwhile ac - wa > 1:\n    wj = (ac + wa) // 2\n    num = 0\n    for i in range(n):\n        num += max((h[i] - b * wj - 1) // (a - b) + 1, 0)\n    if num <= wj:\n        ac = wj\n    else:\n        wa = wj\nprint(ac)", "N, A, B = list(map(int, input().split()))\nH = [0] * (N)\nfor i in range(N):\n  H[i] = int(input())\n\n#\u3081\u3050\u308b\u5f0f\u4e8c\u5206\u63a2\u7d22\n#index\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u5224\u5b9a\ndef isOK(index, H):\n  now_min = index * B\n  all_H = []\n  for i in range(len(H)):\n    if H[i] > now_min:\n      all_H.append(H[i] - now_min)\n  count = 0 \n  for j in all_H:\n    if j % (A - B) == 0:\n      count += int(j // (A - B))\n    else:\n      count += int(j // (A - B)) + 1\n  if count <= index:\n    return True\n  else:\n    return False\n  \n#\u306b\u3076\u305f\u3093\n#A : \u914d\u5217\ndef binary_search(H):\n  N = 10 ** 9 + 1\n  ng = -1\n  ok = N\n  while (abs(ok - ng) > 1):\n    mid = int((ok + ng) / 2)\n    if isOK(mid, H):\n      ok = mid\n    else:\n      ng = mid\n  return ok\n  \n\nprint((binary_search(H)))  \n", "N,A,B=map(int,input().split())\nH=[int(input()) for _ in range(N)]\n\ndef judge(t):\n    base_damage=B*t\n    add_attack=0\n    for hi in H:\n        if hi <= base_damage:\n            continue\n        res=hi-base_damage\n        q,r=divmod(res,A-B)\n        add_attack+=q\n        if r:\n            add_attack+=1\n    return add_attack<=t\n\nMAX=max(H)\nmax_attack=MAX//B+1\nmin_attack=0\nwhile True:\n    mid=(min_attack+max_attack)//2\n    if mid==min_attack:\n        break\n    else:\n        if judge(mid):\n            max_attack=mid\n        else:\n            min_attack=mid\nprint(max_attack)", "import numpy as np\n\nn,a,b = map(int,input().split())\nh = [int(input()) for _ in range(n)]\nh = np.array(h)\n\nhi = 10**10\nlow = -1\n\ndef calc(x):\n    y = h-x*b\n    y[y<0] = 0\n    f = np.ceil(y/(a-b)).sum()\n    return f\n\nwhile hi-low > 1:\n    ave = (hi+low)//2\n    if calc(ave) <= ave:\n        hi = ave\n    else:\n        low = ave\n    \nprint(hi)", "n,a,b=map(int,input().split())\nl=[int(input())for i in range(n)]\na-=b\ndef  enough(x):\n    return sum(max((h-b*x+a-1)//a,0) for h in l)<=x\n#(ng,ok]type\nok,ng=10**9,-1\n# [ok,ng)type->eraseng,ok=ok,ng\neps=10**(-10)\nwhile abs(ok-ng)>1:\n    mid=(ok+ng)//2\n    if enough(mid):ok=mid\n    else:ng=mid\nprint(ok)", "def main():\n    from math import ceil\n    n, a, b, *k = list(map(int, open(0).read().split()))\n    k.sort()\n\n    l = 0\n    r = k[-1]\n    m = (l + r) // 2\n    while l + 1 < r:\n        c = sum(ceil((i - m * b) / (a - b)) if i - m * b > 0 else 0 for i in k)\n        if c <= m:\n            r = m\n        else:\n            l = m\n        m = (l + r) // 2\n\n    print(r)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def binsearch(good, bad, fn):\n    while abs(good - bad) > 1:\n        m = (good + bad) // 2\n        if fn(m):\n            good = m\n        else:\n            bad = m\n    return good\n\ndef main():\n    N, A, B = list(map(int, input().split()))\n    H = [int(input()) for _ in range(N)]\n    c = A - B\n    def helper(x):\n        r = 0\n        for h in H:\n            r += max((h - B * x + c - 1) // c, 0)\n        return r <= x\n\n    return binsearch(10**9, 0, helper)\n\nprint((main()))\n", "N, A, B = list(map(int, input().split()))\nH = [int(input()) for _ in range(N)]\nok = 10**9\nng = 0\nwhile ng + 1 < ok:\n    c = ok + ng >> 1\n    G = [max(0, h-c*B) for h in H]\n    n = sum(-(-g//(A-B)) for g in G)\n    if c >= n:\n        ok = c\n    else:\n        ng = c\nprint(ok)\n", "def main():\n    from math import ceil\n    from copy import deepcopy\n    n, a, b, *k = list(map(int, open(0).read().split()))\n    k.sort()\n\n    def check(x):\n        q = deepcopy(k)\n        cnt = 0\n        while q:\n            p = q.pop() - x * b\n            if p <= 0:\n                break\n            cnt += ceil(p / (a - b))\n\n        return cnt <= x\n\n    l = 0\n    r = k[-1]\n    m = (l + r) // 2\n    while l + 1 < r:\n        if check(m):\n            r = m\n        else:\n            l = m\n        m = (l + r) // 2\n\n    print((m+1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput=sys.stdin.readline\nn,a,b=map(int,input().split())\nh=[]\nfor i in range(n):\n    h.append(int(input()))\n\ndef enough(t):\n    tmp=0\n    for i in range(n):\n        if h[i]>b*t:\n            tmp+=(h[i]-b*t)//(a-b)+(1 if (h[i]-b*t)%(a-b)>0 else 0)\n    return True if tmp<=t else False\n\nok=max(h)\nng=0\nmid=(ok-ng)//2\nwhile abs(ok-ng)>1:\n    if enough(mid):\n        ok=mid\n    else:\n        ng=mid\n    mid=(ok+ng)//2\nprint(ok)", "n,a,b = map(int,input().split())\nh_list = []\nfor _ in range(n):\n    h = int(input())\n    h_list.append(h)\n\ndef ba(s):\n    count = 0\n    for i in h_list:\n        i -= s*b\n        if i > 0:\n            count += -(-i//(a-b))\n    if count <= s:\n        return True\n    else:\n        return False\n\n\nng = 0\nok = 10**9\nwhile ok  > ng +1 :\n    mid = (ng+ok)//2\n    if ba(mid):\n        ok = mid\n    else:\n        ng = mid\n\nprint(ok)", "n,a,b=list(map(int,input().split()))\nh=[int(input())for _ in range(n)]\nh.sort(reverse=True)\nl=-1\nr=10**9\nwhile r-l>1:\n\tmid=(l+r)//2\n\tcnt=0\n\tfor i in range(n):\n\t\tif h[i]-b*mid<=0:\n\t\t\tbreak\n\t\telse:\n\t\t\tcnt+=(h[i]-b*mid-1)//(a-b)+1\n\tif cnt>mid:\n\t\tl=mid\n\telse:\n\t\tr=mid\nprint(r)\n\n", "def main():\n    from math import ceil\n    n, a, b, *k = list(map(int, open(0).read().split()))\n    k.sort()\n\n    l = k[-1] // a - 1\n    r = k[-1] // b + 1\n    m = (l + r) // 2\n    while l + 1 < r:\n        c = sum(ceil((i - m * b) / (a - b)) if i - m * b > 0 else 0 for i in k)\n        if c <= m:\n            r = m\n        else:\n            l = m\n\n        m = (l + r) // 2\n\n    print(r)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nfrom bisect import bisect_right\n\n\ndef solve(t):\n    nonlocal A, B, C\n    k = bisect_right(H, B * t)\n    cnt = 0\n    for i in range(k, N):\n        h = H[i]\n        h -= B * t\n        cnt += (h + C - 1) // C\n    return cnt <= t\n\n\nN, A, B = list(map(int, input().split()))\nC = A - B\nH = [int(s) for s in sys.stdin.readlines()]\n\nH.sort()\n\n# [ok, ng) - Maximum\n# (ng, ok] - Minimum\n# ok \u304c \u6700\u7d42\u7684\u306a\u7b54\u3048\nng = 0\nok = 10 ** 9 + 1000\nk = 0\nwhile abs(ok - ng) > 1:\n    mid = (ok + ng) // 2\n    if solve(mid):\n        ok = mid\n    else:\n        ng = mid\n\nprint(ok)\n", "n,a,b=list(map(int,input().split()))\nh=[int(input()) for _ in range(n)]\ndef bisearch(k):# k\u56de\u3067\u5012\u305b\u308b\u304b\u3069\u3046\u304b\n  ret=0\n  for hi in h:\n    ret+=max(0,(hi-b*k+a-b-1)//(a-b))\n  return ret<=k\nl,r=0,pow(10,9)\nwhile r-l>1:\n  x=(l+r+1)//2\n  if bisearch(x):\n    r=x\n  else:\n    l=x\n\nprint(r)\n", "N, A, B = map(int, input().split())\ndiff = A - B\nH = [int(input()) for i in range(N)]\n\ndef check(x):\n  time = 0\n  _H = [h-B*x for h in H]\n  for _h in _H:\n    if _h > 0:\n      time += -(-_h//diff)\n  return time <= x\n\nleft = 0 # False\nright = 10**10 # True\nwhile left + 1 < right:\n  mid = (left + right) // 2\n  if check(mid):\n    right = mid\n  else:\n    left = mid\n\nprint(right)", "def main():\n    from math import ceil\n    n, a, b, *k = list(map(int, open(0).read().split()))\n    k.sort()\n\n    l = k[-1] // a\n    r = k[-1] // b + 1\n    m = (l + r) // 2\n    while l + 1 < r:\n        c = sum(ceil((i - m * b) / (a - b)) if i - m * b > 0 else 0 for i in k)\n        if c <= m:\n            r = m\n        else:\n            l = m\n\n        m = (l + r) // 2\n\n    print(r)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def resolve():\n    def f(mid):\n        return sum([(x - mid * b + a - b - 1) // (a - b) for x in h if x > mid * b]) <= mid\n    n, a, b = list(map(int, input().split()))\n    h = [int(input()) for _ in range(n)]\n    ok, ng = 10 ** 10, 0\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if f(mid):\n            ok = mid\n        else:\n            ng = mid\n    print(ok)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    #from collections import defaultdict\n    from itertools import combinations, permutations, accumulate, groupby\n    #from itertools import product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    #from operator import itemgetter\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    n,a,b = map(int, input().split())\n    h = [int(input()) for _ in range(n)]\n\n    # x\u56de\u3067\u51fa\u6765\u308b\u304b\n    def check(x):\n        cnt = 0\n        for i in h:\n            nokori = i - b*x\n            if nokori > 0:\n                cnt += nokori // (a-b)\n                if nokori % (a-b) != 0:\n                    cnt += 1\n            if cnt > x:\n                return False\n        return True\n\n    l = 0\n    r = 10**10\n    while r-l > 1:\n        mid = (l+r) // 2\n        if check(mid):\n            r = mid\n        else:\n            l = mid\n\n    print(r)\n\ndef __starting_point():\n    main()\n__starting_point()", "N,A,B = list(map(int,input().split()))\nH = []\nfor _ in range(N):\n    H.append(int(input()))\nH = sorted(H)\ndef check(x):\n    cnt = 0\n    for h in H:\n        if h > x * B:\n            tmp = (h - x*B) // (A-B)\n            #\u5207\u308a\u4e0a\u3052\n            if tmp * (A-B) != h - x*B: tmp += 1\n            cnt += tmp\n    if cnt <= x:\n        return True\n    else:\n        return False\n# (l,r]\ndef bisect(l,r):\n    if r - l == 1: return r\n    mid = (l+r) // 2\n    if check(mid):\n        return bisect(l,mid)\n    else:\n        return bisect(mid,r)\n    \nprint((bisect(0,10**28)))\n", "n, a, b = map(int, input().split())\nc = a-b\nh = sorted([int(input()) for _i in range(n)], reverse=True)\nleft, right = 0, 10**9\nwhile left < right:\n    middle = (left+right)//2\n    counter = 0\n    checker = middle*b\n    i = 0\n    while checker < h[i]:\n        counter -= (-h[i]+checker)//c\n        i += 1\n        if i >= n:\n            break\n    if counter <= middle:\n        right = middle\n    else:\n        left = middle + 1\nprint(right)", "import sys\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict\nimport numpy as np\n\ndef main():\n    finput=lambda :sys.stdin.readline().strip()\n    n,a,b=list(map(int,finput().split()))\n    h=[int(finput()) for _ in range(n)]\n    gs=lambda a,b:a//b+(a%b>0)\n    def enough(t):\n        s=np.sum([gs(max(x-t*b,0),a-b) for x in h])\n        if s<=t:\n            return True\n        else:\n            return False\n    #def biser(t,l):\n    #    if l==0:\n    #        return t\n    #    t=t+l//2\n    #    if enough(t):\n    #        return biser(t-l//2,l//2)\n    #    else:\n    #        return biser(t+1,l-l//2)\n    l=max(h)//b+1\n    t=0\n    while l>0:\n        t=t+l//2\n        if enough(t):\n            t=t-l//2\n            l=l//2\n        else:\n            t+=1\n            l=l-l//2\n    print(t)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict\n\ndef main():\n    finput=lambda :sys.stdin.readline().strip()\n    n,a,b=list(map(int,finput().split()))\n    h=[int(finput()) for _ in range(n)]\n    gs=lambda a,b:a//b+(a%b>0)\n    def enough(t):\n        s=sum([gs(max(x-t*b,0),a-b) for x in h])\n        if s<=t:\n            return True\n        else:\n            return False\n    def biser(t,l):\n        if l==0:\n            return t\n        t=t+l//2\n        if enough(t):\n            return biser(t-l//2,l//2)\n        else:\n            return biser(t+1,l-l//2)\n    l=max(h)//b+1\n    t=biser(0,l)\n    #while l>0:\n    #    t=t+l//2\n    #    if enough(t):\n    #        t=t-l//2\n    #        l=l//2\n    #    else:\n    #        t+=1\n    #        l=l-l//2\n    print(t)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n, a, b = map(int, input().split())\nh_s = [int(input()) for _ in range(n)]\n\nl = (min(h_s) - 1) // a + 1\nr = (max(h_s) - 1) // b + 1\n\nc = a - b\nwhile l != r:\n    pos = (l + r) // 2\n    cnt = 0\n    base = b * pos\n    for h in h_s:\n        rem = h - base\n        cnt += max(0, (rem - 1) // c + 1)\n    if cnt <= pos:\n        r = pos\n    else:\n        l = pos + 1\nprint(r)", "def abc063_d():\n    n, a, b = map(int, input().split())\n    H = [int(input()) for _ in range(n)]\n    lower, upper = 0, 10**16\n    d = a - b\n    while upper - lower > 1:\n        x = (upper + lower) // 2\n        v = 0\n        for hi in H:\n            v += (max(0, hi - x*b) + d - 1) // d\n        if v <= x: upper = x\n        else: lower = x\n    print(upper)\n\ndef __starting_point():\n    abc063_d()\n__starting_point()", "import math\nn,a,b=map(int,input().split())\nh=[int(input()) for i in range(n)]\nl,r=0,10**9\nwhile r-l>1:\n    m=(l+r)//2\n    count=0\n    for i in h:\n        count+=max(math.ceil((i-b*m)/(a-b)),0)\n    if count<=m:\n        r=m\n    else:\n        l=m\nprint(r)", "n, a, b = list(map(int,input().split()))\nh = [ int(input()) for i in range(n)]\nmaxim_h =  max(h)\n\nok = (maxim_h + a - 1) // a * n\nng = 0\nwhile abs(ok - ng) > 1:\n\n    X = (ok + ng) // 2\n    #X\u56de\u7206\u767a\u3092\u8d77\u3053\u3059\u5fc5\u8981\u304c\u3042\u308b\u3068\u4eee\u5b9a\u3059\u308b\n\n    cnt = 0\n    flag = 1\n    for val in h:\n        if val <= b * X:continue\n        temp = (val - b * X + a - b - 1) // (a - b)\n        cnt += temp\n\n        if cnt > X:\n            flag = 0\n            break\n\n    #print(X, cnt, ok)\n    if flag:ok = X\n    else:ng = X\nprint(ok)\n", "n, a, b = list(map(int, input().split()))\nh_s = [int(input()) for _ in range(n)]\n\nl = (min(h_s) - 1) // a + 1\nr = (max(h_s) - 1) // b + 1\n\nc = a - b\nwhile l != r:\n    pos = (l + r) // 2\n    cnt = 0\n    base = b * pos\n    for h in h_s:\n        rem = h - base\n        cnt += max(0, (rem - 1) // c + 1)\n    if cnt <= pos:\n        r = pos\n    else:\n        l = pos + 1\nprint(r)\n", "n,a,b= list(map(int,input().split()))\nsh = sorted([int(input()) for i in range(n)],reverse=True)\nsumh = sum(sh)\ndef nibu(t):\n    rt=0\n    for i in range(n):\n        temp = -1*(-1*max(0,sh[i]-t*b)//(a-b))\n        if temp>0:rt+=temp\n        else:break\n        if rt>t:return False\n    return True if t>=rt else False\nl=max(sh)//a\nr=max(sh)//b+1\nwhile r-l!=1:\n    m = (l+r)//2\n    if nibu(m):r=m\n    else:l=m\nprint(r)\n", "n,a,b= map(int,input().split())\nsh = sorted([int(input()) for i in range(n)],reverse=True)\nsumh = sum(sh)\ndef nibu(t):\n    rt=0\n    for i in range(n):\n        temp = -1*(-1*max(0,sh[i]-t*b)//(a-b))\n        if temp>0:rt+=-1*(-1*max(0,sh[i]-t*b)//(a-b))\n        else:break\n        if rt>t:return False\n    return True if t>=rt else False\nl=max(sh)//a\nr=max(sh)//b+1\nwhile r-l!=1:\n    m = (l+r)//2\n    if nibu(m):r=m\n    else:l=m\nprint(r)", "N,A,B = map(int,input().split())\nH = [int(input()) for n in range(N)]\nL = 0\nR = 10**9\n\nwhile 1<R-L:\n  m = (L+R)//2\n  if m<-sum(min(0,(h-m*B)//(B-A)) for h in H):\n    L = m\n  else:\n    R = m\n\nprint(R)", "from math import ceil\n\ndef is_ok(m):\n\n    tmp = h[:]\n\n    for i in range(N):\n        tmp[i] -= m*B\n\n    if not any(tmp):\n        return True\n\n    rem = 0\n    for i in tmp:\n        if i > 0:\n            rem += ceil(i/(A-B))\n\n    if rem > m:\n        return False\n\n    return True\n\nN,A,B = map(int,input().split())\nh = list(int(input()) for _ in range(N))\ns = sum(h)\n##\u4e8c\u5206\u6563\u7b56\n\nr = 10**10\nl = 0\n\nwhile abs(l-r) > 1:\n\n    m = (r+l)//2\n\n    if is_ok(m):\n        r = m\n    else:\n        l = m\n\nprint(r)", "from math import ceil\n\ndef is_ok(m):\n\n    tmp = h[:]\n\n    for i in range(N):\n        tmp[i] -= m*B\n    \n    flag = True\n\n    for i in tmp:\n        if i > 0:\n            flag = False\n            break\n\n    if flag:##\u5168\u90e80\u4ee5\u4e0b\n        return True\n    else:\n        rem = 0\n        for i in tmp:\n            if i > 0:\n                rem += ceil(i/(A-B))\n\n        if rem > m:\n            return False\n\n        return True\n\nN,A,B = map(int,input().split())\nh = list(int(input()) for _ in range(N))\ns = sum(h)\n##\u4e8c\u5206\u6563\u7b56\n\nr = 10**10\nl = 0\n\nwhile abs(l-r) > 1:\n\n    m = (r+l)//2\n\n    if is_ok(m):\n        r = m\n    else:\n        l = m\n\nprint(r)", "n,a,b=list(map(int,input().split()))\nh=[int(input())for _ in range(n)]\nh.sort(reverse=True)\nl=-1\nr=(max(h)-1)//b+1\nwhile r-l>1:\n\tmid=(l+r)//2\n\tcnt=0\n\tfor i in range(n):\n\t\tif h[i]-b*mid<=0:\n\t\t\tbreak\n\t\telse:\n\t\t\tcnt+=(h[i]-b*mid-1)//(a-b)+1\n\tif cnt>mid:\n\t\tl=mid\n\telse:\n\t\tr=mid\nprint(r)\n\n", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\n\n# import numpy as np\n\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list([int(x) - 1 for x in sys.stdin.readline().rstrip().split()])\n\n\n# ===CODE===\n\ndef main():\n    n, a, b = ns()\n\n    h = [ni() for _ in range(n)]\n\n    upper = 10 ** 9\n    lower = 0\n\n    while upper - lower > 1:\n        mid = (upper + lower) // 2\n        cnt = 0\n        for hi in h:\n            cnt += int(math.ceil(max(0, hi - b * mid) / (a - b)))\n        if cnt <= mid:\n            upper = mid\n        else:\n            lower = mid\n    print(upper)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\n\nn,a,b = list(map(int, input().split()))\nh = list(int(input()) for i in range(n))\n\ndiff = a-b\n\nhmax = max(h)\n\nsaiaku = -(-hmax//b)\n\ndef isok(ans):\n    count = 0\n    for i in range(n):\n        count += max(-(-(h[i]-b*ans)//diff),0)\n    if count > ans:\n        return False\n    return True\n\nok = saiaku\nng = -1 # -1\u306b\u3057\u3068\u3051\u3070\u7b54\u3048\u304c0\u306e\u6642\u3082\u666e\u901a\u306b\u6271\u3048\u308b\u306a\n\nwhile ok - ng > 1:\n    m = (ok+ng)//2\n    if isok(m):\n        ok = m\n    else:\n        ng = m\nprint(ok)\n", "import sys\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict\n\n\ndef main():\n    finput=lambda :sys.stdin.readline().strip()\n    n,a,b=list(map(int,finput().split()))\n    h=[int(finput()) for _ in range(n)]\n    gs=lambda a,b:a//b+(a%b>0)\n    def enough(t):\n        s=sum([gs(max(x-t*b,0),a-b) for x in h])\n        if s<=t:\n            return True\n        else:\n            return False\n    l=max(h)//b+1\n    t=0\n    while l>0:\n        t=t+l//2\n        if enough(t):\n            t=t-l//2\n            l=l//2\n        else:\n            t+=1\n            l=l-l//2\n    print(t)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\nreadline = sys.stdin.readline\n\nN,A,B = map(int,readline().split())\nH = [int(readline()) for i in range(N)]\n\n# A\u3092A - B\u3068\u8aad\u307f\u66ff\u3048\u3001\u4e00\u56de\u306e\u653b\u6483\u3067\u5168\u4f53\u306bB\u30c0\u30e1\u30fc\u30b8\u30681\u4f53\u306bA\u30c0\u30e1\u30fc\u30b8\u3068\u8003\u3048\u308b\n# X\u56de\u3067\u9054\u6210\u3067\u304d\u308b\u304b\u306e\u4e8c\u5206\u63a2\u7d22\n\nA -= B\n\nng = 0\nok = 10 ** 9\ndef isOk(x):\n  # \u5404H_i\u3092\u5012\u3059\u306e\u306b\u5fc5\u8981\u306a\u653b\u6483A\u306e\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\n  cnt = 0\n  for i in range(len(H)):\n    h = H[i] - x * B\n    if h > 0:\n      cnt += (h + A - 1) // A\n  return cnt <= x\n  \nwhile abs(ok - ng)>1:\n  mid = abs(ok + ng) // 2\n  if isOk(mid):\n    ok = mid\n  else:\n    ng = mid\n\nprint(ok)", "def main():\n    from math import ceil\n    n, a, b, *k = list(map(int, open(0).read().split()))\n    k.sort()\n\n    l = k[-1] // a\n    r = k[-1] // b + 1\n    m = (l + r) // 2\n    while l + 1 < r:\n        c = sum(ceil((i - m * b) / (a - b)) if i - m * b > 0 else 0 for i in k)\n        (l, r) = (l, m) if c <= m else (m, r)\n        m = (l + r) // 2\n\n    print(r)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,a,b = list(map(int,input().split()))\nH = [int(input()) for _ in range(n)]\n\ndef ok(x):\n    cnt = 0\n    for h in H:\n        cnt += max(0, (h - b*x-1)//(a-b)+1)\n    return cnt <= x\n\ntop = 10**9\nbottom = 0\nwhile top - bottom > 1:\n    mid = (top + bottom)//2\n    if ok(mid):\n        top = mid\n    else:\n        bottom = mid\nprint(top)\n", "import math\n\nN, A, B = map(int, input().split())\nh = [int(input()) for i in range(N)]\n\ndef C(T):\n    t = 0\n    for i in range(N):\n        if h[i] > B*T:\n            t += math.ceil((h[i]-B*T)/(A-B))\n    if t <= T:\n        return True\n    else:\n        False\nl, r = 0, 10**18\nwhile r - l > 1:\n    mid = (l+r) // 2\n    if C(mid):\n        r = mid\n    else:\n        l = mid\n\n\nprint(r)", "import math\ndef binsearch(l, r, fn):\n    while r - l > 1:\n        m = (l + r) // 2\n        if fn(m):\n            l = m\n        else:\n            r = m\n    return l\n\ndef main():\n    N, A, B = list(map(int, input().split()))\n    l = []\n    C = A - B\n    for _ in range(N):\n        h = int(input())\n        l.append(h)\n    def func(i):\n        if max(l) <= B*i:\n            return False\n        r = 0\n        for j in l:\n            r += max(math.ceil((j - B*i) / C), 0)\n        if r <= i:\n            return False\n        return True\n    return 1 + binsearch(0, 1000000000, func)\n\nprint((main()))\n", "import math\nimport io\n\nnim, mike, kite = list(map(int, input().split()))\nH = [int(input()) for _ in range(nim)]\n\nOK = max(H)//kite+1\nNG = 0\n\nans = OK\nwhile OK-NG > 1:\n    mid = (OK+NG)//2  # \u8a66\u884c\u3059\u308b\u5024\n    cnt = 0\n\n    for h in H:\n        if h > mid*kite:\n            cnt += math.ceil((h-mid*kite)/(mike-kite))\n\n    if cnt <= mid:\n        OK = mid\n    else:\n        NG = mid\n\nprint(OK)\n", "import sys\nfrom bisect import bisect_right\n\n\ndef solve(t):\n    nonlocal A, B, C\n    k = bisect_right(H, B * t)\n    cnt = 0\n    for i in range(k, N):\n        h = H[i]\n        h -= B * t\n        cnt += (h + C - 1) // C\n    return cnt <= t\n\n\nN, A, B = list(map(int, input().split()))\nC = A - B\nH = [int(s) for s in sys.stdin.readlines()]\n\nH.sort()\n\n# [ok, ng) - Maximum\n# (ng, ok] - Minimum\n# ok \u304c \u6700\u7d42\u7684\u306a\u7b54\u3048\nng = 0\nok = H[-1] // B + 1\nk = 0\nwhile abs(ok - ng) > 1:\n    mid = (ok + ng) // 2\n    if solve(mid):\n        ok = mid\n    else:\n        ng = mid\n\nprint(ok)\n", "def judge(x):\n    count = 0\n    for hi in h:\n        count += max(hi - b*x + c-1, 0)//c \n    if count<=x:\n        return True\n    else:\n        return False\n\nn,a,b=map(int,input().split())\nh = [int(input()) for _ in range(n)]\n\nc= a-b\n\nng = 0\nok = 10**9\n\nwhile ok - ng > 1:\n    mid = (ng+ok)//2\n    if judge(mid):\n        ok = mid\n    else:\n        ng = mid\n        \nprint(ok)", "n,a,b = map(int,input().split())\nh = [int(input()) for i in range(n)]\nh.sort()\nt = a-b\nr = 10**9+5\nl = 0\n\nwhile r-l > 1:\n    m = (r+l)//2\n    mi = m*b\n    count = 0\n    for i in h:\n        if i > mi:\n            count += (i-mi+t-1)//t\n    if count <= m:\n        r = m\n    else:\n        l = m\nprint(r)", "import sys\nfrom math import ceil\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef check(k):\n    tmp = list(h)\n    for i in range(N):\n        tmp[i] -= B*k\n    \n    flag = False\n    for i in tmp:\n        if i > 0:\n            flag = True\n            break\n    if not flag:\n        return True\n\n    lf = 0\n    for i in tmp:\n        if i > 0:\n            lf += ceil(i/(A-B))\n\n    if lf <= k:\n        return True\n    else:\n        return False\n\nN,A,B = map(int,input().split())\nh = tuple(int(input()) for _ in range(N))\n\nleft = -1\nright = 1e9\n\nwhile abs(left-right) > 1:\n\n    mid = (left+right)//2\n    if check(mid):\n        right = mid\n    else:\n        left = mid\n\nprint(int(right))", "n,a,b = map(int,input().split())\nh = [int(input()) for _ in range(n)]\nl = 0\nr = max(h)\n\ndef f(x):\n    res = 0\n    for i in range(n): res += max(0,(h[i]-b*x+a-b-1))//(a-b)\n    return res <= x\n\nwhile l+1 < r:\n    m = (l+r)//2\n    if f(m): r = m\n    else: l = m\nprint(r)", "def isok(arg):\n    count = arg\n    for i in range(n):\n        if -(-(h[i]-b*arg)//(a-b)) >= 0:\n            count -= -(-(h[i]-b*arg)//(a-b))\n    if count >= 0:\n        return True\n    else:\n        return False\n\ndef bisect(ng, ok):\n    while (abs(ok - ng) > 1):\n        mid = (ok + ng) // 2\n        if isok(mid):\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nn,a,b = list(map(int,input().split()))\nh = []\nfor i in range(n):\n    h.append(int(input()))\nprint((bisect(0,10**9)))\n", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    def meguru_bisect(ok, ng):\n        \"\"\"\n        is_ok\u3092\u5b9a\u7fa9\u3057\u3066\u4e0b\u3055\u3044\n        :param ok: \u53d6\u308a\u3046\u308b\u6700\u5c0f\u306e\u5024-1\n        :param ng: \u53d6\u308a\u3046\u308b\u6700\u5927\u306e\u5024+1\n        :return: is_ok\u3092\u6e80\u305f\u3059\u6700\u5c0f(\u3082\u3057\u304f\u306f\u6700\u5927)\u306e\u5024\n        \"\"\"\n        while abs(ok - ng) > 1:\n            mid = (ok + ng) // 2\n            if is_ok(mid):\n                ok = mid\n            else:\n                ng = mid\n        return ok\n\n    def is_ok(x):\n        cnt = 0\n        for h in H:\n            h -= b * x\n            if h > 0:\n                cnt += (h + ab - 1) // ab\n        return cnt <= x\n\n    n, a, b = list(map(int, input().split()))\n    ab = a - b\n    H = list(int(input()) for _ in range(n))\n\n    res = meguru_bisect(10 ** 9 + 1, 0)\n    print(res)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "from math import ceil\ndef f(x,hp):\n  hp=[hh-(b*x) for hh in hp]\n  c=0\n  for p in hp:\n    if p<=0:continue\n    c+=ceil(p/(a-b))\n  return c<=x\n\nn,a,b=list(map(int,input().split()))\nh=[int(input()) for i in range(n)]\nng=0\nok=10**9\nwhile ok-ng>1:\n  mid=(ok+ng)//2\n  if f(mid,h):\n    ok=mid\n  else:\n    ng=mid\nprint(ok)\n\n\n\n\n", "\ndef submit():\n    n, a, b = (int(e) for e in input().split())\n    h = [int(input()) for _ in range(n)]\n\n    # t\u56de\u3067\u5012\u305b\u308b\u304b\u5426\u304b\u3092\u5224\u5b9a\u3059\u308b\u51e6\u7406\u3092\u5b9f\u65bd\u3057\u3001\n    # t\u306b\u3064\u3044\u30662\u5206\u63a2\u7d22\u3059\u308b\n\n    def judge(t):\n        base_damage = b * t\n        add_attack = 0\n        for hi in h:\n            if hi <= base_damage:\n                continue\n            res = hi - base_damage\n            q, r = divmod(res, a - b)\n            add_attack += q\n            if r:\n                add_attack += 1\n        return add_attack <= t\n\n    max_attack = 0\n    for hi in h:\n        max_attack += hi // a + 1\n    min_attack = 0\n    while True:\n        mid = (min_attack + max_attack) // 2\n        if mid == min_attack:\n            break\n        else:\n            if judge(mid):\n                max_attack = mid\n            else:\n                min_attack = mid\n\n    print(max_attack)\n\n             \ndef __starting_point():\n    submit()\n__starting_point()", "nim, mike, kite = map(int, input().split())\nH = [int(input()) for _ in range(nim)]\nC = mike - kite\nl, r = 0, 1<<30\nwhile r - l > 1:\n    m = (l + r) // 2\n    if sum([max((h - kite * m + C - 1) // C, 0) for h in H]) <= m:\n        r = m\n    else:\n        l = m\nprint(r)", "\"\"\"\nhttps://atcoder.jp/contests/abc063/submissions/5538114\n\"\"\"\n\nfrom numpy import ceil,array,sum\nimport sys\n\ndef input():\n    return sys.stdin.readline().strip()\n\ndef is_ok(m):\n    tmp = h - m*B\n    tmp[tmp<0] = 0\n    \n    if ceil(tmp/(A-B)).sum() > m:\n        return False\n    return True\n\nN,A,B = map(int,input().split())\nh = array(list(int(input()) for _ in range(N)))\n##\u4e8c\u5206\u6563\u7b56\n\nr = 10**9\nl = 0\n\nwhile abs(l-r) > 1:\n\n    m = (r+l)//2\n\n    if is_ok(m):\n        r = m\n    else:\n        l = m\n\nprint(r)", "import numpy as np\nN, A, B = map(int, input().split())\nh = np.sort([int(input()) for i in range(N)])\n\ndef enough(A, B, h, T):\n    h = np.ceil((h - B * T) / (A - B))\n    count = sum(h[h > 0])\n    \n    return True if count <= T else False\nright = 10 ** 9\nleft = 1\nwhile right != left:\n    mid = (left + right) // 2\n    if enough(A, B, h, mid):\n        right = mid\n    else:\n        left = mid + 1\n\nprint(left)", "import math\nn, a, b = list(map(int, input().split()))\nh_list = [int(input()) for _ in range(n)]\n\nlb = 0\nub = 10**9 # \u3053\u308c\u3060\u3051\u5531\u3048\u308c\u3070\u78ba\u5b9f\u306b\u5168\u6ec5\u3059\u308b\n\ndef is_ok(m):\n    # m\u56de\u306e\u653b\u6483\u3067\u30e2\u30f3\u30b9\u30bf\u30fc\u304c\u5168\u6ec5\u3059\u308b\u304b\n    tmp_ans = 0\n    for h in h_list:\n        tmp_h = max(h-m*b, 0) # \u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u6b8b\u308a\u4f53\u529b\n        tmp_ans += math.ceil(tmp_h/(a-b)) # \u7206\u767a\u306e\u4e2d\u5fc3\u306b\u306a\u308b\u56de\u6570\n    if tmp_ans <= m:\n        return True\n    else:\n        return False\n\n\nng = lb\nok = ub + 1\nwhile ok - ng > 1:\n    m = (ok + ng) // 2\n    if is_ok(m):\n        ok = m\n    else:\n        ng = m\n\nprint(ok)\n", "from math import ceil\nn,a,b = map(int,input().split())\nh = [int(input()) for _ in range(n)]\nl = 0\nr = max(h)\n\ndef f(x):\n    res = 0\n    for i in range(n): res += ceil(max(0,(h[i]-b*x))/(a-b))\n    return res <= x\n\nwhile l+1 < r:\n    m = (l+r)//2\n    if f(m): r = m\n    else: l = m\nprint(r)", "n, a, b = list(map(int, input().split()))\nh = [int(input()) for i in range(n)]\nng = 0\nok = 10 ** 9\nwhile ok - ng > 1:\n  mid = (ok + ng) // 2\n  s = 0\n  for i in h:\n    s += max(0, (i - mid * b + a - b - 1) // (a - b))\n  if s <= mid:\n    ok = mid\n  else:\n    ng = mid\nprint(ok)\n", "N,A,B=map(int, input().split())\nD=[int(input()) for i in range(N)]\n\ndef f(a):\n  E=[]\n  for i in range(N):\n    if D[i]-a*B>0:\n      E.append(D[i]-a*B)\n  cnt=0\n  for i in E:\n    cnt+=-(-i//(A-B))\n  if cnt<=a:\n    return True\n  else:\n    return False\nl,r=0,10**9\nfor i in range(50):\n  mid=(l+r)//2\n  if f(mid):\n    r=mid\n  else:\n    l=mid\nprint(r)", "import sys\ninput = sys.stdin.readline\n\nN, A, B = map(int, input().split())\nH = [int(input()) for _ in range(N)]\nC = A - B\n\nhi = 10**9 + 1\nlo = -1\n\nwhile hi - lo > 1:\n    mid = (hi + lo) // 2\n    rem = 0\n    for i in range(N):\n        rem += max(0, (H[i] - B * mid + C - 1) // C)\n    if rem <= mid:\n        hi = mid\n    else:\n        lo = mid\n\nprint(hi)", "import sys\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict\nfinput=lambda :sys.stdin.readline().strip()\n\ndef main():\n    n,a,b=list(map(int,finput().split()))\n    h=[int(finput()) for _ in range(n)]\n    gs=lambda a,b:a//b+(a%b>0)\n    def enough(t):\n        s=sum([gs(max(x-t*b,0),a-b) for x in h])\n        if s<=t:\n            return True\n        else:\n            return False\n    l=max(h)//b+1\n    t=0\n    while l>0:\n        t=t+l//2\n        if enough(t):\n            t=t-l//2\n            l=l//2\n        else:\n            t+=1\n            l=l-l//2\n    print(t)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "# ABC063 D\nN, A, B = map(int, input().split())\nh = [0] * N\nfor i in range(N):\n    h[i] = int(input())\n\nL = 0\nR = sum((h[i]-1) // A + 1 for i in range(N)) + 1\nwhile R - L > 1:\n    M = (L+R-1) // 2 + 1\n    count = sum((h[i] - B*M - 1) // (A-B) + 1 for i in range(N) if h[i] - B*M > 0)\n#     print(L, R, M, count)\n    if count > M:\n        L = M\n    else:\n        R = M\nprint((L+R-1) // 2 + 1)", "N,A,B=map(int,input().split())\nhs = [int(input()) for _ in range(N)]\nl=0\nr=max(hs)\n\ndef enough(x):\n  res = 0\n  for i in range(N):\n    res += max(0,(hs[i]-B*x+A-B-1))//(A-B)\n  return res <= x\n\nwhile l+1 < r:\n  m = (l+r)//2\n  if enough(m):\n    r = m\n  else:\n    l = m\n\nprint(r)", "N,A,B = map(int, input().split())\nH = []\nfor _ in range(N):\n  H.append(int(input()))\n\ndef is_ok(arg):\n  # \u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u3069\u3046\u304b\uff1f\u554f\u984c\u3054\u3068\u306b\u5b9a\u7fa9\n  cnt = 0\n  C = A-B\n  for h in H:\n    wk = h - B*arg\n    if wk<0:\n      continue\n    else:\n      cnt += (wk+C-1) // C\n  return cnt <= arg\n\ndef meguru_bisect(ng, ok):\n  '''\n    \u521d\u671f\u5024\u306eng,ok\u3092\u53d7\u3051\u53d6\u308a,is_ok\u3092\u6e80\u305f\u3059\u6700\u5c0f(\u6700\u5927)\u306eok\u3092\u8fd4\u3059\n    \u307e\u305ais_ok\u3092\u5b9a\u7fa9\u3059\u3079\u3057\n    ng ok \u306f  \u3068\u308a\u5f97\u308b\u6700\u5c0f\u306e\u5024-1 \u3068\u308a\u5f97\u308b\u6700\u5927\u306e\u5024+1\n    \u6700\u5927\u6700\u5c0f\u304c\u9006\u306e\u5834\u5408\u306f\u3088\u3057\u306a\u306b\u3072\u3063\u304f\u308a\u8fd4\u3059\n  '''\n  while (abs(ok - ng) > 1):\n    mid = (ok + ng) // 2\n    if is_ok(mid):\n      ok = mid\n    else:\n      ng = mid\n  return ok\n\nng = 0\nok = 10**16\n\nprint(meguru_bisect(ng,ok))", "def abc063_d():\n    n, a, b = map(int, input().split())\n    H = [int(input()) for _ in range(n)]\n    lower, upper = 0, 10**16\n    d = a - b\n    while upper - lower > 1:\n        x = (upper + lower) // 2\n        v = 0\n        for hi in H:\n            v += (max(0, hi - x*b) + d - 1) // d\n            if v > x: break\n        if v <= x: upper = x\n        else: lower = x\n    print(upper)\n\ndef __starting_point():\n    abc063_d()\n__starting_point()", "import sys\nsys.setrecursionlimit(10000000)\ninput = sys.stdin.readline\nn, a, b = list(map(int, input().split()))\na -= b\nh = [int(input()) for i in range(n)]\n\n\ndef check(k):\n    # k\u56de\u3067\u53ef\u80fd\u304b?\n    tmp = list([x - b * k for x in h])\n    return sum(0 - -i // a for i in tmp if i > 0) <= k\n\n\nng, ok = 0, 10 ** 18\nwhile ng + 1 < ok:\n    mid = (ng + ok) // 2\n    if check(mid):\n        ok = mid\n    else:\n        ng = mid\nprint(ok)\n", "# \u6c7a\u3081\u6253\u3061\u4e8c\u5206\u63a2\u7d22\n# \u5168\u54e1\u306bB\u30c0\u30e1\u30fc\u30b8\u3001\u305d\u306e\u5f8c1\u4f53\u9078\u3093\u3067(A-B)\u30c0\u30e1\u30fc\u30b8\u3068\u8aad\u307f\u66ff\u3048\u308b\uff08\u5bfe\u79f0\u6027\u306e\u78ba\u4fdd\u3002lesson.md\u53c2\u7167\uff09\n# \u3042\u3068\u306fk\u56de\u4ee5\u4e0b\u3067\u5012\u305b\u308b\u304b\u3092\u8a08\u7b97\u3057\u3066\u4e8c\u5206\u63a2\u7d22\n# Gluttony\u3068\u540c\u69d8\u306e\u69cb\u9020\u306a\u306e\u3067\u3001\u3042\u3061\u3089\u3068\u540c\u69d8\u306bTLE\u306b\u306f\u6ce8\u610f\u3057\u3066\u66f8\u304f\u3053\u3068\n\nn, a, b =list(map(int, input().split()))\nhitpoints = [int(input()) for _ in range(n)]\n\nadditional = a - b\n\ndef feasible(k):\n    additional_num = sum([max((hp-(b*k) + additional - 1) // additional, 0) for hp in hitpoints])\n    return additional_num <= k\n\nok = 10**9+1\nng = 0\n\n# \u3081\u3050\u308b\u5f0f\u4e8c\u5206\u63a2\u7d22\nwhile abs(ok - ng) > 1:\n    mid = (ok + ng) // 2\n    if feasible(mid):\n        ok = mid\n    else:\n        ng = mid\n\nprint(ok)\n", "N,A,B = list(map(int,input().split()))\nH = []\nfor _ in range(N):\n    H.append(int(input()))\nH = sorted(H)\ndef check(x):\n    cnt = 0\n    for h in H:\n        if h > x * B:\n            tmp = (h - x*B) // (A-B)\n            #\u5207\u308a\u4e0a\u3052\n            if tmp * (A-B) != h - x*B: tmp += 1\n            cnt += tmp\n    if cnt <= x:\n        return True\n    else:\n        return False\n# (l,r]\ndef bisect(l,r):\n    if r - l == 1: return r\n    mid = (l+r) // 2\n    if check(mid):\n        return bisect(l,mid)\n    else:\n        return bisect(mid,r)\n    \nprint((bisect(0,10**12)))\n", "import math\nn,a,b=map(int,input().split())\nh=[int(input()) for i in range(n)]\n\ndef explode(x):\n    nonlocal n\n    c=0\n    for i in range(n):\n        if h[i]-x*b>0:\n            c+=math.ceil((h[i]-x*b)/(a-b))\n    return c<=x\n\n#\u4e8c\u5206\u63a2\u7d22\u7528\u306e\u30b3\u30fc\u30c9\n\n#(1)l,r\u306f\u4e21\u7aef\u70b9\u3067l<=r\nl,r=0,10**9\n#(2)l=r\u3082\u3057\u304f\u306fl=r-1\u306e\u3068\u304d\u306bbreak\nwhile l+1<r:\n    #(3)\u305d\u306e\u9589\u533a\u9593\u306e\u4e2d\u70b9(\u306e\u5c0f\u6570\u90e8\u5206\u3092\u5207\u308a\u6368\u3066\u305f\u3082\u306e)\n    #\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8003\u616e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u66f8\u304d\u65b9\u306b\u306a\u308b\n    k=l+(r-l)//2\n    #\u3053\u3053\u3067\u306f\u5883\u76ee\u4ee5\u4e0a\u306ex\u3067\u771f\u306b\u306a\u308b\u306e\u3067\u3001\n    #x=k\u3067\u771f\u306e\u5834\u5408\u306f\u5927\u304d\u3044\u65b9\u306e\u7aef\u70b9\u3092k\u306b\u3057\u3001x=k\u3067\u507d\u306e\u5834\u5408\u306f\u5c0f\u3055\u3044\u65b9\u306e\u7aef\u70b9\u3092k\u306b\u3059\u308b\n    if explode(k):\n        r=k\n    else:\n        l=k\n\nprint(r)", "from bisect import bisect_right\n\nN, A, B, *h = list(map(int, open(0).read().split()))\n\nh.sort()\nd = A - B\n\nng = (h[-1] + (A - 1)) // A - 1\nok = (h[-1] + (B - 1)) // B\nwhile ok - ng > 1:\n    m = (ok + ng) // 2\n    b = B * m\n    if m >= sum((h[i] - b + (d - 1)) // d for i in range(bisect_right(h, b), N)):\n        ok = m\n    else:\n        ng = m\nprint(ok)\n", "import math\nN, A, B = map(int, input().split())\nh = [int(input()) for _ in range(N)]\n\nx = A-B\n\ndef func(cnt):\n    dmg = B*cnt\n    tmp = [max(0, val-dmg) for val in h]\n    cnt2 = sum([math.ceil(val/x) for val in tmp])\n    if cnt2 > cnt:\n        return False\n    else:\n        return True\n\nok = 10**9 # exist\nng = 0 # not exist\nwhile abs(ok-ng) > 1:\n    cnt = (ok + ng) // 2\n    if func(cnt):\n        ok = cnt\n    else:\n        ng = cnt\nprint(ok)", "N, A, B = map(int,input().split())\nH = [int(input()) for _ in range(N)]\n\ndef solve(k):\n    cnt = 0\n    for i in range(N):\n        if H[i] > B * k:\n            cnt += (H[i] - B * k - 1) // (A - B) + 1\n    return cnt <= k\n\n\nleft = 0\nright = 10 ** 9 + 1\n\nwhile left + 1 < right:\n    mid = (left + right) // 2\n    if solve(mid):\n        right = mid\n    else:\n        left = mid\n\nprint(right)", "import sys\nreadline = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\n#mod = 998244353\nINF = 10**9\neps = 10**-7\n\nN,A,B = list(map(int,readline().split()))\n\nh = [int(readline()) for i in range(N)]\n\nC = A-B\nng = 0 #\u6761\u4ef6\u3092\u5e38\u306b\u6e80\u305f\u3055\u306a\u3044\nok = INF #\u6761\u4ef6\u3092\u5e38\u306b\u6e80\u305f\u3059\n\ndef judge(mid):\n    ans = 0\n    for hi in h:\n        ans += max(0,(hi-mid*B+C-1)//C)\n    if ans <= mid:\n        return True\n    return False\n\nwhile ok - ng > 1:\n    mid = (ok + ng) // 2\n    if judge(mid):\n        ok = mid\n    else:\n        ng = mid\n    #ok\u304c\u7b54\u3048\u3068\u306a\u308b\nprint(ok)\n\n", "# Proble D - Widespread\n\nimport math\n\n# input\nN, A, B = list(map(int, input().split()))\nh_list = [0]*N\nfor i in range(N):\n    h = int(input())\n    h_list[i] = h\n\n# initialization\nleft = 0\nright = 10**10\n\n# count\nwhile right-left>1:\n    mid = (right + left) // 2\n\n    # check\n    count = 0\n    for h in h_list:\n        h = h - B * mid\n\n        if h<0:\n            h = 0\n\n        tmp_count = math.ceil(h / (A - B))\n        count += tmp_count\n\n    if count>mid:\n        left = mid\n    else:\n        right = mid\n\n# output\nprint(right)\n", "import math\nN, A, B = list(map(int, input().split()))\nall_attack = 0\nenemy = [int(input()) for i in range(N)]\n\n\ndef possible_kill_all(attack):\n    tmp_enemy = [v-B*attack for v in enemy]\n    tmp_needed_attack = 0\n    for v in tmp_enemy:\n        if v>0:\n            tmp_needed_attack += math.ceil(v/(A-B))\n    if tmp_needed_attack <= attack:\n        return True\n    else:\n        return False\n\n\n\npossible = 10**14\nimpossible = 0\n\nwhile possible - impossible > 1:\n    M = (possible+impossible)//2\n    if possible_kill_all(M):\n        possible = M\n    else:\n        impossible = M\n\nprint(possible)\n\n", "from math import ceil\n\nn, a, b = list(map(int, input().split()))\nhs = [int(input()) for _ in range(n)]\n\n\ndef defeatable(k):\n    hb = [max([h - k * b, 0]) for h in hs]\n    n_attack = sum([ceil(h / (a - b)) for h in hb])\n    return n_attack <= k\n\n\nl, r = 0, ceil(max(hs) / b)\n\nwhile r - l > 1:\n    m = (l + r) // 2\n\n    if defeatable(m):\n        r = m\n    else:\n        l = m\n\nprint(r)\n\n", "N,A,B = list(map(int,input().split()))\nH = []\nfor _ in range(N):\n    H.append(int(input()))\nH = sorted(H)\ndef check(x):\n    cnt = 0\n    for h in H:\n        if h > x * B:\n            tmp = (h - x*B) // (A-B)\n            #\u5207\u308a\u4e0a\u3052\n            if tmp * (A-B) != h - x*B: tmp += 1\n            cnt += tmp\n    if cnt <= x:\n        return True\n    else:\n        return False\n# (l,r]\ndef bisect(l,r):\n    if r - l == 1: return r\n    mid = (l+r) // 2\n    if check(mid):\n        return bisect(l,mid)\n    else:\n        return bisect(mid,r)\n    \nprint((bisect(0,10**31)))\n", "import math\n\ndef enough(HP,A,B,X):\n    q = 0\n    for i in range(len(HP)):\n        q += max(math.ceil((HP[i] - B * X) / (A - B)),0)\n    if q <= X:\n        return True\n    else:\n        return False\n    \n\nover = 10 ** 9\nunder = 0\nHP = []\nN,A,B = list(map(int,input().rstrip().split(\" \")))\nfor i in range(N):\n    HP.append(int(input()))\n\nwhile abs(over - under) > 1:\n    mid = (over + under) // 2\n    if enough(HP,A,B,mid):\n        over = mid\n    else:\n        under = mid\nprint(over)\n", "n, a, b = list(map(int, input().split()))\ndab = a - b\nH = []\nfor _ in range(n):\n    H.append(int(input()))\nmaxh = max(H)\n\nl = 0\nr = -(-maxh//b)\ndef ht(mid):\n    cnt = 0\n    for h in H:\n        rem = h - b*mid\n        if rem > 0:\n            cnt += -(-rem//dab)\n    return cnt <= mid\n\nwhile (r-l) > 1:\n    mid = (l + r) // 2\n    if ht(mid):\n        r = mid\n    else:\n        l = mid\nprint(r)\n", "import sys\nfrom math import ceil\n\"\"\"\ndef input():\n    return sys.stdin.readline().strip()\n\"\"\"\ndef check(k):\n    tmp = list(h)\n    for i in range(N):\n        tmp[i] -= B*k\n    \n    flag = False\n    for i in tmp:\n        if i > 0:\n            flag = True\n            break\n    if not flag:\n        return True\n\n    lf = 0\n    for i in tmp:\n        if i > 0:\n            lf += ceil(i/(A-B))\n\n    if lf <= k:\n        return True\n    else:\n        return False\n\nN,A,B = map(int,input().split())\nh = tuple(int(input()) for _ in range(N))\n\nleft = -1\nright = 1e9\n\nwhile abs(left-right) > 1:\n\n    mid = (left+right)//2\n    if check(mid):\n        right = mid\n    else:\n        left = mid\n\nprint(int(right))", "import math\nn,a,b=map(int,input().split())\nh=[int(input()) for i in range(n)]\n\ndef explode(x):\n    nonlocal n\n    c=0\n    for i in range(n):\n        if h[i]-x*b>0:\n            c+=math.ceil((h[i]-x*b)/(a-b))\n    return c<=x\n\n#\u4e8c\u5206\u63a2\u7d22\u7528\u306e\u30b3\u30fc\u30c9\n\n#(1)l,r\u306f\u4e21\u7aef\u70b9\u3067l<=r\nl,r=1,10**9\n#(2)l=r\u3082\u3057\u304f\u306fl=r-1\u306e\u3068\u304d\u306bbreak\nwhile l+1<r:\n    #(3)\u305d\u306e\u9589\u533a\u9593\u306e\u4e2d\u70b9(\u306e\u5c0f\u6570\u90e8\u5206\u3092\u5207\u308a\u6368\u3066\u305f\u3082\u306e)\n    #\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8003\u616e\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u66f8\u304d\u65b9\u306b\u306a\u308b\n    k=l+(r-l)//2\n    #\u3053\u3053\u3067\u306f\u5883\u76ee\u4ee5\u4e0a\u306ex\u3067\u771f\u306b\u306a\u308b\u306e\u3067\u3001\n    #x=k\u3067\u771f\u306e\u5834\u5408\u306f\u5927\u304d\u3044\u65b9\u306e\u7aef\u70b9\u3092k\u306b\u3057\u3001x=k\u3067\u507d\u306e\u5834\u5408\u306f\u5c0f\u3055\u3044\u65b9\u306e\u7aef\u70b9\u3092k\u306b\u3059\u308b\n    if explode(k):\n        r=k\n    else:\n        l=k\n\nprint(l if explode(l) else r)", "with open(0) as f:\n    N, A, B, *H = map(int, f.read().split())\n\ndiff = A - B #\u8ffd\u52a0\u30c0\u30e1\u30fc\u30b8\nT = (max(H)+B-1)//B #\u7b54\u3048\u306fT\u4ee5\u4e0b\n\ndef clearable(t): #t\u56de\u4ee5\u5185\u3067\u6575\u3092\u5168\u6ec5\u3067\u304d\u308b\u304b\u5224\u5b9a\n    Higher = [h-B*t for h in H if h-B*t > 0]\n    return True if sum([(h+diff-1)//diff for h in Higher]) <= t else False\n\ndef binary_search(a, b, judge): #b must be a or higher\n    if a == b:\n        return a, b\n    \n    c = a + (b - a)// 2\n    return (a, c) if judge(c) else (c+1, b)\n\na, b = 0, T\nwhile a != b:\n    a, b = binary_search(a, b, clearable)\nprint(a) ", "import numpy as np\n\nN, A, B = map(int, input().split())\n\nH = []\n\nfor i in range(N):\n    H.append(int(input()))\n\nH = np.array(H)\n\ndef binary_search(x):\n    H_tmp = H - B * x\n    H_tmp = H_tmp[H_tmp > 0]\n    count = ((H_tmp + A - B - 1) // (A - B)).sum()\n    return x >= count\n\nleft = 0\nright = 10**10\n\nwhile(right - left > 1):\n    mid = (left + right) // 2\n    ret = binary_search(mid)\n    if ret:\n        right = mid\n    else:\n        left = mid\n\nprint(right)", "from math import ceil\n\ndef f(x,h):\n    hp = h\n    hp = [hh-(b*x)  for hh in hp]\n    count = 0\n    for hh in hp:\n        if hh <=0: continue\n        count += ceil(hh/(a-b))\n    return x >= count\n\nn,a,b = map(int,input().split())\nh = [int(input()) for i in range(n)]\n\nng = 0\nok = 10**9\nwhile abs(ok-ng)>1:\n    m = (ok+ng)//2\n    if f(m,h):\n        ok = m\n    else:\n        ng = m\n\nprint(ok)", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N, A, B = [int(x) for x in input().split()]\n    H = [int(input()) for _ in range(N)]\n\n    def isOK(mid):\n        cnt = 0\n        for h in H:\n            if h > B * mid:\n                sabun = h - B * mid\n                cnt += 0 - - sabun // (A - B)\n                if cnt > mid:\n                    return False\n        return True\n\n    ok = 10 ** 9\n    ng = 0\n\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) // 2\n        if isOK(mid):\n            ok = mid\n        else:\n            ng = mid\n\n    print(ok)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import numpy as np\n\nN, A, B = list(map(int, input().split()))\nH = np.zeros(shape=N, dtype='int64')\nfor _ in range(N):\n    h = int(input())\n    H[_] = h\n\n\ndef calc(num, a):\n    a -= num * B\n    a = (a - 1)//(A - B) + 1\n    if sum(a[a > 0]) <= num:\n        return True\n    else:\n        return False\n\n\nstart = 0\nend = 10 ** 10\n\nwhile end - start > 1:\n    mid = (start + end) // 2\n    if calc(mid, H.copy()):\n        end = mid\n    else:\n        start = mid\n\nprint(end)\n", "N,A,B = list(map(int,input().split()))\nH = []\nfor _ in range(N):\n    H.append(int(input()))\nH = sorted(H)\ndef check(x):\n    cnt = 0\n    for h in H:\n        if h > x * B:\n            tmp = (h - x*B) // (A-B)\n            #\u5207\u308a\u4e0a\u3052\n            if tmp * (A-B) != h - x*B: tmp += 1\n            cnt += tmp\n    if cnt <= x:\n        return True\n    else:\n        return False\n# (l,r]\ndef bisect(l,r):\n    if r - l == 1: return r\n    mid = (l+r) // 2\n    if check(mid):\n        return bisect(l,mid)\n    else:\n        return bisect(mid,r)\n    \nprint((bisect(0,10**20)))\n", "import math\n\n\ndef check(k, A, B, H):\n    return sum([max([0, math.ceil((h - B * k) / (A - B))]) for h in H]) <= k\n\n\ndef main():\n    N, A, B = list(map(int, input().split(' ')))\n    H = [int(input()) for _ in range(N)]\n    ng, ok = 0, 10**9\n    while ok - ng > 1:\n        mid = (ok + ng) // 2\n        if check(mid, A, B, H):\n            ok = mid\n        else:\n            ng = mid\n    print(ok)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, a, b = map(int, input().split())\nh = []\nfor i in range(n):\n    h.append(int(input()))\nac = (max(h) - 1) // b + 1\nwa = 0\nwhile ac - wa > 1:\n    wj = (ac + wa) // 2\n    num = 0\n    for i in range(n):\n        num += max((h[i] - b * wj - 1) // (a - b) + 1, 0)\n    if num <= wj:\n        ac = wj\n    else:\n        wa = wj\nprint(ac)", "n, a, b = map(int, input().split())\nh = [int(input()) for i in range(n)]\nl, r = 0, max(h)\nwhile l + 1 < r:\n    m = (l + r) // 2\n    cnt = 0\n    for i in range(n):\n        cnt += max(0, h[i] - b * m + a - b - 1) // (a - b)\n    if cnt <= m:\n        r = m\n    else:\n        l = m\nprint(r)", "import sys\n\ninput = sys.stdin.readline\n\ndef main():\n  n, a, b = map(int, input().split())\n  h = [int(input()) for _ in range(n)]\n  h.sort()\n  \n  l, r = -1, h[-1]+1\n  while r-l > 1:\n    key = (r+l)//2\n    count = 0\n    for i in range(n):\n      if h[i] <= key*b:\n        continue\n      else:\n        count += (h[i]-key*b-1)//(a-b)+1\n    if count <= key:\n      r = key\n    else:\n      l = key\n  print(r)\n  \ndef __starting_point():\n  main()\n__starting_point()", "def check(T):\n    res = 0\n    for h in H:\n        tmp = (h - B * T + A - B - 1) // (A - B)\n        if tmp <= 0:\n            break\n        res += tmp\n    return True if res <= T else False\n\nN, A, B = list(map(int, input().split()))\nH = [int(input()) for _ in range(N)]\nH.sort(reverse=True)\nres = 0\nleft = 0\nright = 10 ** 9\nwhile right != left:\n    mid = (left + right) // 2\n    if check(mid):\n        right = mid\n    else:\n        left = mid + 1\nprint(left)\n", "\nfrom math import ceil\ndef resolve():\n    def chick(k):\n        cnt = 0\n        for i in range(N):\n            h = ceil((H[i] - B * k) / (A - B))\n            cnt += max(0, h)\n        return cnt <= k\n\n    N, A, B = list(map(int, input().split()))\n    H = [int(input()) for _ in range(N)]\n\n    # \u6700\u5c0f\u306e\u653b\u6483\u56de\u6570\u3092\u6c42\u3081\u308b\n    # \u9b54\u6cd5\u653b\u6483\u306e\u56de\u6570\u3092k\u3068\u3057\u305f\u6642\u3001\u3059\u3079\u3066\u306e\u9b54\u7269\u306f\u5c11\u306a\u304f\u3068\u3082kB\u306e\u4f53\u529b\u304c\u524a\u3089\u308c\u3066\u3044\u308b\n    # H[i] - kB > 0 \u3067\u3042\u308b\u3088\u3046\u306a\u5404i\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u6575\u306b\u5bfe\u3057\u3066A-B\u306e\u653b\u6483\u3092\u4f55\u56de\u5f53\u3066\u308c\u3070\u4f53\u529b\u304c0\u306b\u306a\u308b\u304b\u304c\u7b97\u51fa\u3055\u308c\u308b\u3002\n    # \u4e0a\u8a18\u306e\u8a08\u7b97\uff1a(H[i] - kB) / (A-B) (\u305f\u3060\u3057\u5207\u308a\u4e0a\u3052)\u3092\u8a08\u7b97\u3057\u3066\u548c\u3092\u53d6\u308b\n    ok = 10 ** 10\n    ng = 0\n    while ok - ng > 1:\n        k = (ok + ng) // 2\n        if chick(k):\n            ok = k\n        else:\n            ng = k\n\n    print(ok)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import sys\nfrom heapq import heapify, heappop, heappush\nfrom collections import defaultdict\n\ndef main():\n    finput=lambda :sys.stdin.readline().strip()\n    n,a,b=list(map(int,finput().split()))\n    h=[int(finput()) for _ in range(n)]\n    gs=lambda a,b:a//b+(a%b>0)\n    def enough(t):\n        s=sum([max(x-t*b,0)//(a-b)+(max(x-t*b,0)%(a-b)>0) for x in h])\n        if s<=t:\n            return True\n        else:\n            return False\n    #def biser(t,l):\n    #    if l==0:\n    #        return t\n    #    t=t+l//2\n    #    if enough(t):\n    #        return biser(t-l//2,l//2)\n    #    else:\n    #        return biser(t+1,l-l//2)\n    l=max(h)//b+1\n    t=0\n    while l>0:\n        t=t+l//2\n        if enough(t):\n            t=t-l//2\n            l=l//2\n        else:\n            t+=1\n            l=l-l//2\n    print(t)\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn, a, b = list(map(int, input().split()))\nR = [int(input()) for i in range(n)]\n\nl = 0\nr = 10 ** 9 + 1\n\n\n# x \u56de\u3067\u5168\u6ec5\u3067\u304d\u308b\u304b\u5426\u304b\ndef check(x):\n    cnt = 0\n    for ri in R:\n        if ri - x * b > 0:\n            cnt += (ri - x * b + a-b - 1) // (a-b)\n    return cnt <= x\n\nwhile True:\n    if r - l <= 1:\n        break\n    mid = (l + r) // 2\n    if check(mid):\n        r = mid\n    else:\n        l = mid\n\nif check(l):\n    print(l)\nelse:\n    print(r)\n"]