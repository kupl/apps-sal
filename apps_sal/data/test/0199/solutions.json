["def doit():\n    xx = input().split()\n    n = int(xx[0])\n    s = int(xx[1])\n    v = [int(k) for k in input().split()]\n\n    S = sum(v)\n    newS = S - s\n    if newS < 0:\n        return -1\n    return min(newS//n, min(v))\n        \nprint(doit())\n", "n, s = list(map(int, input().split()))\n\nv = list(map(int, input().split()))\n\nif sum(v) < s:\n    print(-1)\n    return\n\nmv = min(v)\n\nfor i in range(n):\n    s -= v[i] - mv\n\nif s < 1:\n    print(mv)\n    return\n\nans = mv - s // n\nif s % n != 0:\n    ans -= 1\n\nprint(ans)\n\n\n\n", "from sys import stdin, stdout\nfrom math import sin, tan, cos, pi, atan2, sqrt, acos, atan, factorial\n\n\nn, s = map(int, stdin.readline().split())\nvalues = list(map(int, stdin.readline().split()))\n\nl, r = -1, min(values) + 1\nwhile r - l > 1:\n    m = (l + r) >> 1\n    \n    cnt = 0\n    for v in values:\n        cnt += v - m\n    \n    if cnt >= s:\n        l = m\n    else:\n        r = m\n\nif l == -1:\n    stdout.write('-1\\n')\nelse:\n    stdout.write(str(l) + '\\n')", "n, s = list(map(int, input().split()))\n\nallCups = list(map(int, input().split()))\nsumK = sum(allCups)\nminK = min(allCups)\nif sumK < s:\n    print(-1)\n\nelse:\n    if sumK - (minK * n) >= s:\n        print(minK)\n    else:\n        s = s - (sumK - (minK * n))\n        #print(s)\n        if s % n == 0:\n            print(minK - (s // n))\n        else:\n            print(minK - (s // n) - 1)\n", "n, s = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nd = sum(a)\nif d >= s:\n    r = d - s\n    ans = min(r // n, a[0])\nelse:\n    ans = -1\n\nprint(ans)\n", "n, s = map(int, input().split())\nnum = list(map(int, input().split()))\nx = sum(num)\nif x < s:\n    print(-1)\nelse:\n    k = min(num)\n    for i in range(n):\n        s -= abs(num[i] - k)\n        num[i] = k\n    if s <= 0:\n        print(k)\n    else:\n        q = s // n\n        k -= q\n        if s % n == 0:\n            print(k)\n        else:\n            print(k - 1)", "from math import ceil\n\nn, s = list(map(int, input().split()))\nA = list(map(int, input().split()))\nif sum(A) < s:\n    print(-1)\nelse:\n    x = min(A)\n    y = 0\n    for k in range(n):\n        y += (A[k] - x)\n    if y >= s:\n        print(x)\n    else:\n        a = s - y\n        print(x - ceil(a / n))", "n,s=map(int,input().split())\na=list(map(int,input().split()))\ny=min(a)*n\nx=sum(a)\nif x<s:\n    print(-1)\nelse:\n    if s<=x-y:\n        print(y//n)\n    else:\n       s=s-(x-y)\n       print((y-s)//n)", "import math\nn,s=map(int,input().split())\nv=list(map(int,input().split()))\nx=sum(v)\nif s>x:\n    print(-1)\nelse:\n    a=min(v)\n    if s<x-n*a:\n        print(a)\n    else:\n        b=x-n*a\n        c=s-b\n        print(a-math.ceil(c/n))", "n, s = list(map(int, input().split()))\nv = list(map(int, input().split()))\nsm = sum(v)\nsm -= s\nif sm < 0:\n    print(-1)\nelse:\n    mn = min(v)\n    r = min(mn, sm // n)\n    print(r)\n", "import math, sys, itertools\n\ndef mp():\n    return list(map(int, input().split()))\n\ndef main():\n    n, s = mp()\n    a = mp()\n    sm = sum(a)\n    if sm < s:\n        print(-1)\n        return\n    ans = (sum(a) - s) // n\n    print(min(ans, min(a)))\n        \n\ndeb = 0\nif deb:\n    file = open('input.txt', 'r')\n    input = file.readline\nelse:\n    input = sys.stdin.readline\n    \nmain()", "n, s = list(map(int, input().split()))\nv = [int(k) for k in input().split()]\nv.sort(reverse=True)\nfor i in range(n):\n    s -= v[i] - v[-1]\n    v[i] = v[-1]\nif s <= 0:\n    print(v[-1])\nelse:\n    if s > n * v[0]:\n        print(-1)\n    else:\n        print(v[0] - (s + n - 1) // n)  \n", "import math\nn,s = list(map(int,input().split()))\nv = input().split()\nmini = math.inf\nfor i in range(n):\n    mini = min(int(v[i]),mini)\ns += mini*n\nfor i in range(n):\n    s -= int(v[i])\nif s < 0:\n    print(mini)\nelif s > mini*n:\n    print(-1)\nelif s%n == 0:\n    print(mini-s//n)\nelse:\n    print(mini-s//n-1)\n", "n, s = list(map(int, input().split()))\nv = [int(x) for x in input().split()]\nt = sum(v)\nif sum(v) < s:\n\tprint(-1)\n\treturn\nb = min(v)\nkol = t - b * n\ns -= kol\nif s <= 0:\n\tprint(b)\n\treturn\ntmp = (s + n - 1) // n\nprint(b - tmp)\n", "n, s = map(int, input().split())\nl = [*map(int, input().split())]\nsm = sum(l)\nif sm < s:\n    print(-1)\n    return\nm = min(l)\ns -= sm - m * n\nif s <= 0:\n    print(m)\nelse:\n    print(m - (s + n - 1)//n)", "n, s = map(int, input().split())\nk = list(map(int, input().split()))\nsumk = sum(k)\nmink = min(k)\nif sumk < s:\n    print(-1)\n    return\nif sumk-n*mink >= s:\n    print(mink)\nelse:\n    s -= sumk-n*mink\n    if s%n == 0:\n        print(mink-s//n)\n    else:\n        print(mink-s//n-1)", "import math\nn,q=list(map(int,input().split()))\nh=list(map(int,input().split()))\nt=0\nfor i in range (n):\n    t+=h[i]\nif t<q:\n    print(-1)\n    return\nlow=min(h)\nfor i in range (n):\n    q-=(h[i]-low)\nif q<=0:\n    print(low)\n    return\nlow-=math.ceil(q/n)\nprint(low)\n", "n,s = map(int,input().split())\nl = list(map(int, input().split()))\n\nif sum(l) < s:\n\tprint(-1)\n\treturn\nq = sum(l) - min(l) * n\nif q>=s:\n\tprint(min(l))\n\treturn\nprint(min(l)-(s-q+n-1)//n)", "n, S = [int(x) for x in input().split()]\n\nA = [int(x) for x in input().split()]\n\ndef ans():\n  nonlocal S\n  to_min = sum(A) - n*min(A)\n  S -= to_min\n  if S <= 0:\n    return min(A)\n  if n*min(A) < S: return -1\n  return (n*min(A) - S) // n\n\nprint(ans())\n", "n, s = list(map(int, input().split()))\nu = list(map(int, input().split()))\nmu = min(u)\nsu = sum(u)\nif su < s:\n    print(-1)\nelse:\n    s -= (su - mu * n)\n    if s <= 0:\n        print(mu)\n    else:\n        k = s // n\n        if s % n != 0:\n            k += 1\n        print(mu - k)\n", "n, k = list(map(int, input().split(' ')))\n\na = list(map(int, input().split(' ')))\n\nminV = min(a)\n\ns = sum(a)\n\nif(k > s):\n  print(-1)\nelse:\n  rest = s - minV * n\n  if(rest >= k):\n    print(minV)\n  else:\n    k -= rest\n    \n    sol = k // n\n    if(k % n):\n      sol += 1\n\n    print(minV - sol)", "def ifPoss(arr,v,h):\n    tot = 0\n    for i in arr:\n        tot += (i-h)\n    return tot>=v\ndef prog():\n    n,v = map(int,input().split())\n    arr = [int(x) for x in input().split()]\n    minLev = -1\n    l,h = 0,min(arr)\n    while(l<=h):\n        m = int((l+h)/2)\n        if(ifPoss(arr,v,m)):\n            minLev = max(minLev,m)\n            l = m+1\n        else:\n            h = m-1\n    return minLev\nprint(prog())", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[15]:\n\n\nimport math\nns=list(map(int, input().rstrip().split()))\nn=ns[0]\ns=ns[1]\n\ndata=list(map(int, input().rstrip().split()))\n\n\n# In[16]:\n\n\ndata.sort()\n\n\n# In[17]:\n\n\nextras=[i-data[0] for i in data]\n\n\n# In[18]:\n\n\ntotal=sum(data)\nextratotal=sum(extras)\n\n\n# In[ ]:\n\n\n\n\n\n# In[19]:\n\n\nif s>total:\n    print(-1)\nelif extratotal>=s:\n    print(data[0])    \nelse:\n    sub=math.ceil((s-extratotal)/n)\n    print(data[0]-sub)\n    \n\n\n# In[ ]:\n\n", "import sys\nfrom math import ceil\n\n\ndef main():\n    n, s = map(int, sys.stdin.readline().split())\n    arr = list(map(int, sys.stdin.readline().split()))\n    if s > sum(arr):\n        print(-1, sep=' ', end='\\n', file=sys.stdout, flush=False)\n    else:\n        count = 0\n        arr.sort(reverse=True)\n        for i in range(n-1):\n            if count == s:\n                break\n            if count+(arr[i]-arr[-1]) <= s:\n                count += arr[i]-arr[-1]\n                arr[i] = arr[-1]\n            elif count+(arr[i]-arr[-1]) > s:\n                count = s\n                arr[i] -= (s-count)\n        if count == s:\n            print(arr[-1])\n        else:\n            factor = (s-count)/n\n\n            print(arr[-1]-ceil(factor), sep=' ', end='\\n', file=sys.stdout, flush=False)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]