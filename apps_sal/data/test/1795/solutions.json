["n = int(input())\na = list([int(x) - 1 for x in input().split()])\n\nans = False\n\nfor i in range(n):\n    if a[a[a[i]]] == i:\n        ans = True\n        break\n\nprint('YES' if ans else 'NO')\n", "n=int(input())\nA=[int(i) for i in input().split(\" \")]\nfor i in range(n):\n    A[i]-=1\nc=0\nfor i in range(n):\n    if i==A[A[A[i]]]:\n        c=1\nif c:\n    print('YES')\nelse:\n    print('NO')\n", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef is_triangle(nums):\n    for index, num in enumerate(nums):\n        if nums[nums[num-1]-1] - 1 == index:\n            return 'YES'\n    return 'NO'\n\n\ndef main():\n    input()\n    nums = read_nums()\n    print(is_triangle(nums))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\na = list(map(lambda x: x - 1, a))\nf = False\nfor i in a:\n    if a[a[a[i]] ] == i:\n        f = True\n        break\nprint(\"YES\" if f else \"NO\")", "n = int(input())\na = list(map(int,input().split()))\nif n==2:\n    print ('NO')\nelse:\n    f=0\n    for i in range(n):\n        a[i]-=1\n    for i in range(n):\n        if a[a[a[i]]] == i:\n            f=1\n            break\n    if f:\n        print ('YES')\n    else:\n        print ('NO')\n\n", "n = int(input())\na = [int(z) for z in input().split()]\na = [0] + a\nfor i in range(1, n):\n    if (a[a[a[i]]] == i):\n        print(\"YES\")\n        return\nprint(\"NO\")", "def run():\n    input()\n    s = [int(x) for x in input().split()]\n\n    for i in range(len(s)):\n        s1 = s[i]\n        s2 = s[s1-1]\n        s3 = s[s2-1]\n        if s3-1==i:\n            print('YES')\n            return\n    print('NO')\nrun()", "n = int(input())\nx = list(map(int,input().split()))\nfor i in range(n):\n\tif i == x[x[x[i]-1]-1]-1:\n\t\tprint('YES')\n\t\tbreak\nelse:\n\tprint('NO')", "import sys, math\n\n#f = open('input_0', 'r')\nf = sys.stdin\n\nn = int(f.readline())\nl = list(map(int, f.readline().split()))\nl = [x-1 for x in l]\n\nfound = False\nfor i in range(n):\n  if l[i] != i and l[l[i]] != i and l[l[i]] != l[i] and l[l[l[i]]] == i:\n    found = True\n    print('YES')\n    break\nif not found:\n  print('NO')\n", "n = int(input())\na = [int(i) - 1 for i in input().split()]\nfor i in range(n):\n    if a[a[a[i]]] == i:\n        print(\"YES\")\n        return\nprint(\"NO\")", "n = int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n\tif l[i] == l[l[l[l[i] - 1] - 1] - 1]:\n\t\tprint('YES')\n\t\tn = -1\n\t\tbreak\nif n != -1:\n\tprint('NO')", "n = int(input())\na = list(map(int, input().split()))\n\nfor i in range(len(a)):\n    if a[a[i] - 1] - 1 != i and a[a[a[i] - 1] - 1] - 1 == i:\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "import sys\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return [int(x) for x in input().split()]\n\nn = read_int()\na = read_ints()\n\nfor i in range(n):\n    if a[a[a[i] - 1] - 1] == i + 1:\n        print('YES')\n        return\n\nprint('NO')\n", "n = int(input())\ns = [int(i)-1 for i in input().split()]\nc = [s[s[s[i]]] for i in range(n)]\nfor i in range(n):\n    if c[i] == i:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")", "n = int(input())\na = [int(x) for x in input().split()]\nflag = False\nfor i in range(n):\n    if (a[a[a[i] - 1] - 1] - 1) == i:\n        flag = True\n        break\nprint('YES' if flag else 'NO')", "\nn = int(input())\n\nf = list([int(x) - 1 for x in input().split()])\n\nfor i in range(len(f)):\n    if f[f[f[i]]] == i and f[f[i]] != i:\n        print('YES')\n        return\n\nprint('NO')\n", "#This code sucks, you know it and I know it.  \n#Move on and call me an idiot later.\n\nn = int(input())\n\nl = list(map(int, input().split()))\n\nfor i in l:\n    a = i\n    b = l[a-1]\n    c = l[b-1]\n    if a == l[c-1] and a!=b and b!=c and c!=a:\n        print(\"YES\")\n        return\nprint(\"NO\")", "R = lambda : list(map(int, input().split()))\n\nn = int(input())\nf = list(R())\nd = {}\n\nfor i in range(n):\n    d[i+1] = f[i]\n\ndef solve(d,n):\n    for i in range(n):\n        b = d[i+1]\n        c = d[b]\n        a = d[c]\n        if i + 1 == a:\n            return \"YES\"\n    \n    return \"NO\"\n\nprint(solve(d,n))\n        \n\n", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return map(int, stdin.readline().split())\n#lines = stdin.readlines()\n\nn = int(input())\nf = list(rint())\nf = [-1] + f\nfor i in range(1,n+1):\n    a = i\n    b = f[a]\n    c = f[b]\n    d = f[c]\n    if a == d:\n        print(\"YES\")\n        return\n\nprint(\"NO\")", "def func(v):\n    n = len(v)\n    for i in range(n):\n        if v[v[v[i]]] == i:\n            return True\n    return False\ndef __starting_point():\n    n = int(input())\n    v = list(map(int, input().split()))\n    for i in range(len(v)):\n        v[i] -= 1\n    if func(v):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n__starting_point()", "n=int(input())\nl = list(map(int,input().split()))\nfor i in range(n):\n    if l[l[l[i-1]-1]-1]==i:\n        print('YES')\n        quit()\nprint('NO')\n", "n = int(input())\nl = list(map(int, input().split()))\n\nflag = False\nfor i in range(n):\n    if l[l[l[i] - 1] - 1] == i + 1:\n        print('YES')\n        flag = True\n        break\n\nif not flag:\n    print('NO')\n", "n = int(input())\nL = list(map(int, input().split()))\nf = False\nfor i in range(n):\n    j = L[i]\n    k = L[j - 1]\n    m = L[k - 1]\n    if i == m - 1:\n        f = True\n        break\nprint('YES' if f else 'NO')", "n = int(input())\n\nlst = []\nfor x in input().split():\n    lst.append(int(x) - 1)\n\nflag = False\nfor x in range(len(lst)):\n    if x == lst[lst[lst[x]]]:\n        flag = True\n        break\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "s = int(input())\na = [int(i) for i in input().split()]\nfor idx, num in enumerate(a):\n    if a[a[num-1]-1]==idx+1:\n        print(\"YES\")\n        return\nprint(\"NO\")\n"]