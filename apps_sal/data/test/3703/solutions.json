["from math import sqrt, ceil\n\nMAX_N = 10 ** 6 * 2 \n\n\nprime = []\nisPrime = [True for i in range(MAX_N)]\n\nfor i in range(2, MAX_N):\n    if isPrime[i]:\n        prime.append(i)\n        for j in range(i * i, MAX_N, i):\n            isPrime[j] = False\n\n\ndef factor(a):\n    divs = []\n    for i in prime:\n        cnt = 0\n        while a % i == 0:\n            a //= i\n            cnt += 1\n\n        if cnt:\n            divs.append((i, cnt,))\n\n    if a > 1:\n        divs.append((a, 1,))\n\n    return divs\n\n\ndef f(n):\n    ans = 1\n    for div in factor(n):\n        ans *= div[0] ** (div[1] - 1) * (div[0] - 1)\n\n    return ans\n\ndef g(n):\n    return n\n\ndef F(n, k):\n    cur = n\n    for i in range(1, k + 1):\n        #print(i)\n        #print(factor(cur))\n        if i == 1:\n            cur = f(g(cur))\n        elif i % 2 == 0:\n            cur = g(cur)\n        else:\n            cur = f(cur)\n\n        #print(i, cur)\n\n        if cur == 1:\n            break\n\n    return cur % (10 ** 9 + 7)\n\nn, k = [int(i) for i in input().split(' ')]\n#print(factor(n - 1))\nprint(F(n, k))\n", "MOD = 1000000007\ndef phi(n):\n    res = n\n    for i in range(2,int(n**(0.5)+1)):\n        if n % i == 0:\n            while n % i == 0:\n                n = n//i\n            res -= res//i\n    if n > 1:\n        res -= res//n\n    return res\n\nn,k = list(map(int,input().split()))\nk = (k+1)//2\nans = n\nfor _ in range(k):\n    if ans > 1:\n        ans = phi(ans)\n    else:\n        break\nprint(ans % MOD)\n", "N = 10 ** 6 * 2 \nMOD = 1000000007\nprime = []\nisPrime = [True for i in range(N)]\nfor i in range(2, N):\n    if isPrime[i]:\n        prime.append(i)\n        for j in range(i * i, N, i):\n            isPrime[j] = False\ndef phi(n):\n    ans = 1\n    for i in pf(n):\n        ans *= pow(i[0],i[1]-1)*(i[0]-1)\n    return ans\ndef pf(n):\n    for i in prime:\n        cnt = 0\n        if n % i == 0:\n            while n % i == 0:\n                n //= i\n                cnt += 1\n            yield (i,cnt)\n    if n > 1:\n        yield (n,1)\nn,k = list(map(int,input().split()))\nk = (k+1)//2\nans = n\nfor i in range(k):\n    ans = phi(ans)\n    if ans == 1:\n        break\nprint(ans % MOD)\n", "phi = [0 for i in range(100100)]\nphi[1] = 1\nfor i in range(2, 100050):\n    if (phi[i] == 0):\n        for j in range(i, 100051, i):\n            if (phi[j] == 0):\n                phi[j]=j\n            phi[j] = phi[j]//i*(i-1)\n\ndef Fenjie(n):\n    k = {}\n    if (n == 1):\n        return {}\n    a = 2\n    while (n >= 2):\n        b = n%a\n        if (a*a > n):\n            if (n in k):\n                k[n] += 1\n            else:\n                k[n] = 1\n            break\n        if (b == 0):\n            if (a in k):\n                k[a] += 1\n            else:\n                k[a] = 1\n            n = n//a\n        else:\n            a += 1\n    return k\n\ndef Euler(k):\n    if (len(k) == 0):\n        return 1\n    ans = 1\n    for i in k:\n        s = k[i]\n        ans *= pow(i, s)\n        ans = ans//i*(i-1)\n    return ans\n\nn, k = list(map(int, input().split()))\nk = (k+1)//2\nwhile (k):\n    k -= 1\n    n = Euler(Fenjie(n))\n    if (n==1):\n        break\nprint(n%(10**9+7))\n", "import math\ndef phi(n):\n    res = n\n    for i in range(2, int(math.sqrt(n)) + 1):\n        if(n % i == 0):\n            while(n % i == 0):\n                n /= i\n            res -= res/i\n    if(n > 1):\n        res -= int(res / n)\n    return res\nn, k = map(int, input().split())\nres = n\nk = int((k + 1) / 2)\nwhile(res != 1 and k != 0):\n    res = phi(res)\n    k -= 1\nprint(\"{}\".format(int(res % (1e9 + 7))))"]