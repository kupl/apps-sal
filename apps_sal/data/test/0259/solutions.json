["# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def cal(self, s):\n        if len(s) == 1:\n            return s[0]\n        if s[0] == 0:\n            return self.cal(s[1:])\n        v = 1\n        for c in s:\n            v *= c\n        return v\n\n    def solve(self):\n        n = self.next_int()\n        t = self.next_int()\n        ii = 0\n        tt = 10000000\n        for i in range(0, n):\n            fr = self.next_int()\n            d = self.next_int()\n            if fr < t:\n                fr += (t - fr + d - 1) // d * d\n            if fr < tt:\n                tt = fr\n                ii = i\n        print(ii + 1)\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "n, t = list(map(int, input().split()))\nnearest_t = 200000\nans = 0\nfor i in range(n):\n    s, d = list(map(int, input().split()))\n    if s >= t and s < nearest_t:\n        nearest_t = s\n        ans = i + 1\n    elif s < t:\n        k = (t - s) // d\n        if (t - s) % d:\n            k += 1\n        cur_t = s + d * k\n        if cur_t < nearest_t:\n            nearest_t = cur_t\n            ans = i + 1\nprint(ans)\n", "import sys\nfrom math import ceil\n\ninput = sys.stdin.readline\n\nn, t = map(int, input().split())\n\nchoose = []\n\nfor i in range(1, n+1):\n    a, b = map(int, input().split())\n    if a < t:\n        a += ceil((t-a)/b) * b\n    \n    choose.append((a-t, i))\nchoose.sort()\n\nprint(choose[0][1])", "def main():\n    n, t = map(int, input().split())\n    mi = 1000000\n    ans = 0\n    for i in range(n):\n        s, d = map(int, input().split())\n        L = -1\n        R = 1000000\n        while R - L != 1:\n            M = L + R >> 1\n            if s + d * M < t:\n                L = M\n            else:\n                R = M\n        if mi > s + d * R:\n            mi = s + d * R\n            ans = i + 1\n    print(ans)\n    return 0\nmain()", "\nn,t=[int(k) for k in input().split(\" \")]\nmw=100000000000000\nnbest=-1\n\nfor i in range(n):\n    s,d=[int(k) for k in input().split(\" \")]\n    if t<s:\n        w=s-t\n    else:\n        w=(d-(t-s))%d\n    #print(s,d,w,mw,nbest)\n    if w<mw:\n        mw=w\n        nbest=i+1\nprint(nbest)\n", "from sys import stdin, stdout\nn,t=map(int,input().split())\ntime=1000000\nbusroute=0\nimport math\nfor i in range(n):\n         x,y=map(int,input().split())\n         if(t<=x):\n                  curr=x\n         else:\n                  curr=math.ceil((t-x)/y)*y +x\n         if(curr<time):\n                  time=curr\n                  busroute=i+1\nprint(busroute)", "N, T = list(map(int, input().split()))\n\nans = 0\ncurM = None\nfor n in range(N):\n    s, d = list(map(int, input().split()))\n    if T <= s or (T - s) % d == 0:\n        s = s\n    else:\n        incre = ((T - s) // d + 1) * d\n        s += incre\n    if curM == None:\n        curM = s\n        \n    else:\n        if curM > s:\n            ans = n\n            curM = s\nprint(ans + 1) \n        \n", "N, T = list(map(int, input().split()))\nmi = 10**100\nfor i in range(N):\n    s, d = list(map(int, input().split()))\n    if s >= T:\n        a = s - T\n    else:\n        a = (s - T) % d\n    if a < mi:\n        mi = a\n        ans = i + 1\nprint(ans)\n", "from math import sqrt, ceil, floor\nfrom sys import stdin, stdout\nfrom heapq import heapify, heappush, heappop\nimport string\nimport bisect  \n\n\nn, t = list(map(int, stdin.readline().split()))\nans = 1\nans_t = 9999999\nfor i in range(n):\n    s, d = list(map(int, stdin.readline().split()))\n    if s < t:\n        s = s + ceil((t - s) / d) * d\n    if ans_t > s:\n        ans = i + 1\n        ans_t = s\nprint(ans)\n", "n, t = list(map(int, input().split()))\nans = 10**6\nansi = 0\nfor i in range(n):\n    s, d = list(map(int, input().split()))\n    s = max(0, t - s + d - 1) // d * d + s\n    # print(s)\n    if ans > s:\n        ans = s\n        ansi = i\nprint(ansi+1)\n", "n, t = map(int, input().split())\nres = [float('inf'), 0]\nfor i in range(1, n + 1):\n    s, d = map(int, input().split())\n    x = max((t - s + d - 1) // d, 0)\n    v = s + d * x\n    # print(i, x, v)\n    if res[0] > v:\n        res = [v, i]\nprint(res[1])", "n,t=[int(i) for i in input().split()]\nsd =[[int(i) for i in input().split()] for j in range(n)]\n\nres = -1\nbest = 10**10\n\nfor i in range(n):\n    s,d=sd[i]\n    if t<=s:\n        if s<best:\n            best=s\n            res=i\n    else:\n        left = t-s\n        times = left//d\n        if left%d!=0:\n            times+=1\n        s+=d*times\n        if s<best:\n            best=s\n            res=i\nprint(res+1)\n", "N, T = map(int, input().split())\nans = 10**10\nAns = None\nfor i in range(1, N+1):\n    a, b = map(int, input().split())\n    if a >= T:\n        if a < ans:\n            Ans = i\n            ans = a\n    else:\n        k = -((-(T-a))//b)\n        if a + k*b < ans:\n            Ans = i\n            ans = a + k*b\nprint(Ans)", "n, t = map(int, input().strip().split())\nmn = 10000000\nnum = 0\nfor i in range(n):\n    s,d = map(int, input().strip().split())\n    temp = 0\n    if s >= t:\n        temp= s - t\n    else:\n        g = t - s\n        md = g % d\n        if md != 0:\n            temp = d - md\n        else:\n            temp = 0\n    if temp < mn:\n        mn = temp\n        num = i+1\nprint(num)", "kk=lambda:map(int,input().split())\n# k2=lambda:map(lambda x:int(x)-1, input().split())\nll=lambda:list(kk())\nn,t = kk()\nmv,j = 10000000000,-1\nfor i in range(n):\n\ts,d = kk()\n\twhile s < t: s+=d\n\tif s < mv: mv,j = s,i\nprint(j+1)", "N, T = list(map(int, input().split()))\nbt = -1\nbr = -1\nfor n in range(N):\n    s, d = list(map(int, input().split()))\n    if s >= T:\n        a = s\n    else:\n        a = (T-s+d-1) // d\n        a = s+d*a\n    if bt == -1 or a < bt:\n        bt = a\n        br = n+1\nprint(br)\n", "# -*- coding: utf-8 -*-\n# @Time    : 2019/4/13 22:05\n# @Author  : LunaFire\n# @Email   : gilgemesh2012@gmail.com\n# @File    : A. Serval and Bus.py\n\nimport math\n\n\ndef main():\n    n, t = list(map(int, input().split()))\n    ret, best_time = 0, float('inf')\n    for i in range(n):\n        s, d = list(map(int, input().split()))\n        if s < t:\n            k = int(math.ceil((t - s) / d))\n            s += k * d\n        if s < best_time:\n            ret = i + 1\n            best_time = s\n    print(ret)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,t=map(int,input().split())\nl=[]\nfor i in range(n):\n    s,d=map(int,input().split())\n    if s<t:\n        if (t-s)%d==0:q=(t-s)//d\n        else:q=(t-s)//d+1\n        l.append([s+q*d,i+1])\n    else:l.append([s,i+1])\nl.sort(key=lambda x:x[0])\nprint(l[0][1])", "import math\n\ndef main():\n    n,t = list(map(int,input().split()))\n    buses = []\n    min_ans = float('inf')\n    index = -1\n    for i in range(n):\n        s,d = list(map(int,input().split()))\n        if s >= t:\n            k = 0\n        else:\n            k = math.ceil((t-s)/d)\n        wait = s+(k*d)\n        ans = wait-t\n        if ans < min_ans:\n            min_ans = ans\n            index = i+1\n\n    print(index)\n\n\nmain()\n"]