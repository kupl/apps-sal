["def key_tri(argument):\n    return argument[1]\n\nn = int(input())\nL = [list(map(int, input().split())) for _ in range(n)]\nL.sort(key=key_tri)\nr = 1\nt = L[0][1]\nfor k in range(1,n):\n    if L[k][0]>t:\n        r+=1\n        t = L[k][1]\nprint(r)\n", "def snd(lst):\n    return lst[1]\nn = int(input())\nl = []\nfor i in range(0, n):\n    l.append([int(i) for i in input().split()])\nl.sort(key=snd)\ne = 0\nans = 0\nfor p in l:\n    if (p[0] > e):\n        ans+=1\n        e = p[1]\nprint(ans)\n", "r = lambda: list(map(int, input().split()))\n\nn, = r()\na = sorted(tuple(r()) for _ in range(n))[::-1]\n\nret, left = 0, 10**9 + 1\nfor l, r in a:\n\tif r < left:\n\t\tret += 1\n\t\tleft = l\n\nprint(ret)\n", "n = int(input())\n\na = [tuple(map(int, input().split())) for _ in range(n)]\n#print(a)\na.sort(key = lambda x : x[1])\nmax_r = -10**10\nans = 0\nfor l, r in a:\n     if l > max_r:\n         ans += 1\n         max_r = r\nprint(ans)\n    \n", "n = int(input())\nrg = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    rg.append((a, b))\nrg.sort()\nlast = rg[0][1]\nans = 1\nfor i in rg[1:]:\n    if i[0] > last:\n        last = i[1]\n        ans += 1\n    elif i[1] < last:\n        last = i[1]\nprint(ans)", "\n\n\ndef __starting_point():\n    n = int(input())\n    orders = []\n    for _ in range(n):\n        a,b = list(map(int,input().split()))\n        orders.append((b,a))\n\n    sorders = sorted(orders)\n    cnt = 0\n    now = 1\n    for i in range(0,len(sorders)):\n        #print(now)\n        if sorders[i][1]>now or i==0:\n            cnt += 1\n            now = sorders[i][0]\n    print(cnt)\n\n__starting_point()", "r = lambda: map(int, input().split())\n\nn, = r()\na = sorted(tuple(r()) for _ in range(n))[::-1]\n\nret, left = 0, 10**9 + 1\nfor l, r in a:\n\tif r < left:\n\t\tret += 1\n\t\tleft = l\n\nprint(ret)", "ints = lambda:list(map(int,input().split()))\nrd = lambda:input()\nn=ints()[0]\nA = []\nfor i in range(n):\n    l,r = ints()\n    A.append((r,r-l))\nA.sort()\ncnt,ct = 0,0\nfor p in A:\n    if ct + p[1] > p[0]:\n        continue\n    else:\n        ct = p[0] + 1\n        cnt+=1\nprint (cnt)\n", "n = int(input())\nA = [0] * n\n\nfor i in range(n):\n    A[i] = tuple(map(int, input().split()))\n\nA.sort(key = lambda x: x[1])\nnow, res = 0, 0\n\nfor i in range(n):\n    if A[i][0] > now:\n        now = A[i][1]\n        res += 1\n      \nprint(res)", "\"\"\"\nCodeforces Testing Round #12\n\nProblem 597B. Restaurant\n\n@author yamaton\n@date 2015-11-11\n\"\"\"\n\nimport math\nimport operator\nimport random\nimport sys\nimport functools\nimport collections\n\n\ndef solve(pairs):\n    pairs.sort(key=operator.itemgetter(1))\n    progress = -1\n    cnt = 0\n    for (s, f) in pairs:\n        if progress < s:\n            progress = f\n            cnt += 1\n    return cnt\n\n\ndef solve0(pairs):\n    pairs.sort()\n    d = collections.defaultdict(int)\n    maxval = 0\n    for (s, f) in pairs:\n        d[f] = 1 + max((d[k] for k in d.keys() if k < s), default=0)\n        maxval = max(maxval, d[f])\n    return maxval\n\n\ndef p(*args, **kwargs):\n    return print(file=sys.stderr, *args, **kwargs)\n\n\ndef main():\n    n = int(input())\n    pairs = [tuple(int(i) for i in input().strip().split()) for _ in range(n)]\n    result = solve(pairs)\n    print(result)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\norder = [[int(__) for __ in input().split()] for _ in range(n)]\norder.sort(key=lambda x: x[1])\n\nans = 0\nright = -1\nfor i in order:\n\tif right < i[0]:\n\t\tans += 1\n\t\tright = i[1]\nprint(ans)", "r = lambda: map(int, input().split())\n\nn, = r()\na = sorted(tuple(r()) for _ in range(n))[::-1]\n\nret, left = 0, 10**9 + 1\nfor l, r in a:\n    if r < left:\n        ret += 1\n        left = l\n\nprint(ret)", "r = lambda: map(int, input().split())\n\nn, = r()\na = sorted(tuple(r()) for _ in range(n))[::-1]\n\nret, left = 0, 10**9 + 1\nfor l, r in a:\n    if r < left:\n        ret += 1\n        left = l\n\nprint(ret)", "a=int(input())\nb=[]\ntotal=0\nfor i in range(a):\n    x,y=list(map(int,input().split()))\n    b.append([x,y])\nb.sort(key=lambda x: x[1])\nending=0\nfor i in b:\n    if i[0]>ending:\n        total+=1\n        ending=i[1]\nprint(total)\n", "n=int(input())\nl=[]\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    l.append([a,b])\nl.sort(key=lambda x: x[1])\nc=t=0\nfor i in range(len(l)):\n    if t<int(l[i][0]):\n        t=int(l[i][1])\n        c+=1\nprint(c)\n\n", "n = int(input())\n\ndata = []\n\nfor num in range(n):\n    t = input()\n    (l, r) = t.split(\" \")\n    l = int(l)\n    r = int(r)\n    data.append((l, r))\n\ndata = sorted(data, key = lambda s : s[1])\n\nnum = 1\n\nci = data[0]\n\nfor item in data:\n    (il, ir) = item\n    (cl, cr) = ci\n    if (il > cr):\n        ci = item\n        num += 1\n\nprint(num)\n", "def main():\n    tt = list(tuple(map(int, input().split())) for _ in range(int(input())))\n    tt.sort(key=lambda e: e.__getitem__(1))\n    res = t = 0\n    for l, r in tt:\n        if t < l:\n            t = r\n            res += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    res = t = 0\n    for r, l in sorted((tuple(map(int, reversed(input().split()))) for _ in range(int(input())))):\n        if t < l:\n            t = r\n            res += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    res = t = 0\n    for l, r in sorted((tuple(map(int, input().split())) for _ in range(int(input()))), key=lambda e: e[1]):\n        if t < l:\n            t = r\n            res += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "cin = lambda:map(int,input().split())\nn, = cin()\na=[]\ncount=1\nfor i in range(0,n):\n       a.append(tuple(list(cin())[::-1]))\na.sort()   \nref = a[0][0]\nfor i in range(1,len(a)):\n    if a[i][1]>ref:\n        count+=1\n        ref=a[i][0] \nprint(count)", "r = lambda: map(int, input().split())\n\nn, = r()\na = sorted(tuple(r()) for _ in range(n))[::-1]\n\nret, left = 0, 10**9 + 1\nfor l, r in a:\n\tif r < left:\n\t\tret += 1\n\t\tleft = l\n\nprint(ret)", "n=int(input())\na=[]\nfor _ in range(n):\n    x,y=map(int,input().split())\n    a.append((x,y))\na=sorted(a,key=lambda y: (y[0],y[1]-y[0]))\nprev=(0,0)\norders=0\nfor order in a:\n    s,e=order\n    if s>prev[1]:\n        prev=order\n        orders+=1\n    elif e<prev[1]:\n        prev=order\nprint(orders)", "def f(x):\n    return x[1]\n\nn = int(input())\nL = []\nfor i in range(n):\n    order = [int(s) for s in input().split()]\n    L.append(order)\nL = sorted(L,key=f)\nlast = [L[0][1]]\nitem = 1\nwhile item < n:\n    while item < n-1 and (L[item][1] <= last[-1] or L[item][0] <= last[-1]):\n        item += 1\n    if L[item][1] > last[-1] and L[item][0] > last[-1]:\n        last.append(L[item][1])\n    item += 1\nprint(len(last))", "n=int(input())\na=[]\nfor i in range(n):\n\tx,y=list(map(int,input().split()))\n\ta.append((y,x))\na.sort()\ncnt=0;cur=-10\ni=0\nwhile i<n:\n\tif cur<a[i][1]:\n\t\tcur=a[i][0]\n\t\tcnt+=1\n\ti+=1\nprint(cnt)\n", "n=int(input())\na=[]\nfor i in range(n):\n\ta.append(tuple(map(int,input().split())))\na.sort(key=lambda x:x[1])\ncnt=0;cur=-10\ni=0\nwhile i<n:\n\tif cur<a[i][0]:\n\t\tcur=a[i][1]\n\t\tcnt+=1\n\ti+=1\nprint(cnt)\n"]