["t = int(input())\nwhile t:\n    arr = list(map(int, input().split()))\n    c = 0\n    for i in arr:\n        if i % 2 == 1:\n            c += 1\n    if c <= 1:\n        print(\"Yes\")\n    else:\n        if arr[0] and arr[1] and arr[2]:\n            arr[3] += 3\n            arr[0] -= 1\n            arr[1] -= 1\n            arr[2] -= 1\n            c = 0\n            for i in arr:\n                if i % 2 == 1:\n                    c += 1\n            if c <= 1:\n                print(\"Yes\")\n            else:\n                print(\"No\")\n        else:\n            print(\"No\")\n    t -= 1", "for t in range(int(input())):\n    r,g,b,w = list(map(int, input().split()))\n    if r==0 or g==0 or b==0:\n        if r%2+g%2+b%2+w%2 <= 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n    else:\n        if r%2+g%2+b%2+w%2 == 2:\n            print(\"No\")\n        else:\n            print(\"Yes\")\n", "mod = 10**9 + 7\ndef solve():\n    r, g, b, w = map(int, input().split())\n    ok = False\n    for i in range(20):\n        if (r % 2 + g % 2 + b % 2 + w % 2) <= 1:\n            ok = True\n        mn = min(r, g, b, 1)\n        r -= mn\n        g -= mn\n        b -= mn\n        w += 3 * mn\n    print('Yes' if ok else 'No')\nt = 1\nt = int(input())\nfor _ in range(t):\n    solve()", "def count():\n\tans = 0\n\tif not r%2:\n\t\tans += 1\n\tif not g%2:\n\t\tans += 1\n\tif not b%2:\n\t\tans += 1\n\tif not w%2:\n\t\tans += 1\n\treturn ans\n\nfor nt in range(int(input())):\n\tr,g,b,w = map(int,input().split())\n\tif count()>=3:\n\t\tprint (\"Yes\")\n\t\tcontinue\n\tif min(r,g,b)>0:\n\t\tr -= 1\n\t\tg -= 1\n\t\tb -= 1\n\t\tw += 3\n\t\tif count()>=3:\n\t\t\tprint (\"Yes\")\n\t\telse:\n\t\t\tprint (\"No\")\n\t\tcontinue\n\tprint (\"No\")", "t = int(input())\n\nfor _ in range(t):\n    r,g,b,w = list(map(int,input().split()))\n    if r%2 + g%2 + b%2 + w%2 <= 1:\n        print('Yes')\n        continue\n    if r>0 and g>0 and b>0:\n        r -= 1\n        g -= 1\n        b -= 1\n        w += 3\n        if r%2 + g%2 + b%2 + w%2 <= 1:\n            print('Yes')\n        else:\n            print('No')\n    else:\n        print('No')\n", "import sys\n# sys.setrecursionlimit(10**6) \ninput=sys.stdin.readline\nt=int(input())\ndef check(r,g,b,w):\n    if(r>=0 and g>=0 and b>=0 and w>=0):\n        c=0\n        if(r%2!=0):\n            c+=1\n        if(g%2!=0):\n            c+=1\n        if(b%2!=0):\n            c+=1\n        if(w%2!=0):\n            c+=1\n        if(c==0 or c==1):\n            return True\n    \n    return False\nfor t1 in range(t):\n    r,g,b,w=list(map(int,input().split(\" \")))\n    if(check(r,g,b,w) or check(r-1,g-1,b-1,w+1)):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        R, G, B, W = [int(x) for x in input().split()]\n        if R % 2 + G % 2 + B % 2 + W % 2 <= 1:\n            print(\"Yes\")\n        else:\n            if R >= 1 and G >= 1 and B >= 1:\n                R -= 1\n                G -= 1\n                B -= 1\n                W += 3\n                if R % 2 + G % 2 + B % 2 + W % 2 <= 1:\n                    print(\"Yes\")\n                else:\n                    print(\"No\")\n            else:\n                print(\"No\")\n\n        \n    \n\ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "mod=10**9+7\nfor _ in range (int(input())):\n    r,g,b,w=map(int,input().split())\n    ch=0\n    if w%2==1 and r%2==g%2==b%2==0:\n        ch=1\n    elif w%2==0 and (r%2+g%2+b%2)<=1:\n        ch=1\n    if r>0 and g>0 and b>0:\n        r-=1\n        g-=1\n        b-=1\n        w+=3\n    \n    if w%2==1 and r%2==g%2==b%2==0:\n        ch=1\n    elif w%2==0 and (r%2+g%2+b%2)<=1:\n        ch=1\n    if ch==1:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "t = int(input())\nfor case in range(t):\n    r, g, b, w = list(map(int, input().split()))\n    nodd = (r % 2) + (g % 2) + (b % 2) + (w % 2)\n    # print(\"nodd:\", nodd)\n    if nodd == 2:\n        print(\"No\")\n    elif nodd <= 1:\n        print(\"Yes\")\n    else:\n        if r == 0 or g == 0 or b == 0:\n            print(\"No\")\n        else:\n            print(\"Yes\")", "def a(x):\n    n_e = 0\n    n_o = 0\n    for a in x:\n        if a % 2 == 1:\n            n_o += 1\n        else:\n            n_e += 1\n    return (n_o, n_e)\n\nT = int(input())\nfor _ in range(T):\n    r,g,b,w = list(map(int,input().split()))\n    z = a([r,g,b,w])\n    if z[0] <= 1:\n        print(\"Yes\")\n        continue\n    elif r >= 1 and g >= 1 and b >= 1:\n        w += 1\n        r -= 1\n        g -=1 \n        b -= 1\n        z = a([r,g,b,w])\n        if z[0] <= 1:\n            print(\"Yes\")\n            continue\n    print(\"No\")\n        \n\n", "lst = [0, 0, 4, 8]\nmod = 10 ** 9 + 7\nfor i in range(4, 10 ** 6 + 1):\n    lst.append((lst[-1] * 2) % mod)\n\n\ndef main(case):\n    r, g, b, w = list(map(int, input().split()))\n    if (r % 2) + (g % 2) + (b % 2) + (w % 2) <= 1:\n        print(\"Yes\")\n    else:\n\n        d = min(r, g, b, 1)\n        w += d * 3\n        r -= d\n        g -= d\n        b -= d\n        if (r % 2) + (g % 2) + (b % 2) + (w % 2) <= 1:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main(i + 1)\n\n__starting_point()", "#!/usr/bin/env pypy3\n\nT = int(input())\n\ndef ok(r,g,b,w):\n    if min(r,g,b,w) < 0: return False\n\n    odds = [x for x in [r,g,b,w] if x % 2 == 1]\n\n    return len(odds) <= 1\n\ndef ans(r,g,b,w):\n    for _ in range(200):\n        if ok(r,g,b,w): return True\n        r -= 1\n        g -= 1\n        b -= 1\n        w += 1\n    return False\n\nfor t in range(T):\n    r, g, b, w = input().split()\n    r = int(r)\n    g = int(g)\n    b = int(b)\n    w = int(w)\n\n    if ans(r,g,b,w):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "from collections import defaultdict as dd\nimport math\nimport sys\nimport string\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\ndef solve():\n\n\tr,g,b,w = mi()\n\tpar = r%2+g%2+b%2+w%2\n\tif par<=1:\n\t\tprint('Yes')\n\t\treturn\n\telif r>=1 and g>=1 and b>=1:\n\t\tif par==3 or par==4:\n\t\t\tprint('Yes')\n\t\t\treturn\n\tprint('No')\nq=nn()\n\nfor _ in range(q):\n\tsolve()\n", "for _ in range(int(input())):\n    r,g,b,w = list(map(int,input().split()))\n    works = False\n    if sum([i%2 for i in [r,g,b,w]]) <= 1:\n        works = True\n    if min(r,g,b) > 0:\n        r-=1\n        b-=1\n        g-=1\n        w+=1\n        if sum([i%2 for i in [r,g,b,w]]) <= 1:\n            works = True\n    if works:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\ndef is_ok(r, g, b, w):\n    odd_cnt = 0\n    if r % 2 == 1:\n        odd_cnt += 1\n    if g % 2 == 1:\n        odd_cnt += 1\n    if b % 2 == 1:\n        odd_cnt += 1\n    if w % 2 == 1:\n        odd_cnt += 1\n    if odd_cnt <= 1:\n        return True\n    else:\n        return False\n\nt = int(input())\nfor _ in range(t):\n    r, g, b, w = map(int, input().split())\n    if is_ok(r, g, b, w):\n        print(\"Yes\")\n        continue\n    ok = False\n    for _ in range(4):\n        if r > 0 and g > 0 and b > 0:\n            r -= 1; g -= 1; b -= 1; w += 1\n            ok = is_ok(r, g, b, w)\n        if ok:\n            break\n    if ok:\n        print(\"Yes\")\n    else:\n        print(\"No\")", "import math as mt\ndef tran(arr):\n    if arr[0]==0 or arr[1]==0 or arr[2]==0:\n        o=0\n        for i in arr:\n            if i%2==1:\n                o+=1\n        if o>1:\n            return \"No\"\n        else:\n            return \"Yes\"\n    else:\n        o = 0\n        for i in arr:\n            if i % 2 == 1:\n                o += 1\n        if o==2:\n            return \"No\"\n        else:\n            return \"Yes\"\ndef __starting_point():\n    t = int(input())\n    ans = []\n    for i in range(t):\n        nk = list(map(int, input().rstrip().split()))\n        r = tran(nk)\n        ans.append(r)\n    for i in ans:\n        print(i)\n\n__starting_point()", "#\n#    ------------------------------------------------\n#           ____          _     Generatered using\n#          / ___|        | |\n#         | |    __ _  __| | ___ _ __  ______ _\n#         | |   / _` |/ _` |/ _ \\ '_ \\|_  / _` |\n#         | |__| (_| | (_| |  __/ | | |/ / (_| |\n#          \\____\\____|\\____|\\___|_| |_/___\\____|\n#\n#      GNU Affero General Public License v3.0\n#    ------------------------------------------------\n#    Author   : prophet\n#    Created  : 2020-08-12 10:41:11.229095\n#    UUID     : H1wm7mv97N5BgWH3\n#    ------------------------------------------------\n#\nproduction = True\n\nimport sys, math, collections, bisect, itertools, heapq, decimal, random, copy, re\n\ndef input(f = 0, m = 0):\n\n    if m > 0: return [input(f) for i in range(m)]\n    else:\n        l = sys.stdin.readline()[:-1]\n\n        if f >= 10:\n            u = False\n            f = int(str(f)[-1])\n        else: u = True\n\n        if f == 0: p = [l]\n        elif f == 1: p = list(map(int, l.split()))\n        elif f == 2: p = list(map(float, l.split()))\n        elif f == 3: p = list(l)\n        elif f == 4: p = list(map(int, list(l)))\n        elif f == 5: p = l.split()\n\n        return p if u else p[0]\n\ndef out(l, f = 0, n = True):\n\n    if f == 0: p = str(l)\n    elif f == 1: p = \" \".join(map(str, l))\n    elif f == 2: p = \"\\n\".join(map(str, l))\n    elif f == 3: p = \"\".join(map(str, l))\n\n    print(p, end = \"\\n\" if n else \"\")\n\ndef log(*args):\n    if not production:\n        print(\"$$$\", end = \"\")\n        print(*args)\n\nenu = enumerate\nter = lambda a, b, c: b if a else c\nceil = lambda a, b: -(-a // b)\n\ndef mapl(i, f = 0):\n\n    if f == 0: return list(map(int, i))\n    elif f == 1: return list(map(str, i))\n    elif f == 2: return list(map(list, i))\n\n#\n#   >>>>>>>>>>>>>>> START OF SOLUTION <<<<<<<<<<<<<<\n#\n\n\ndef solve():\n\n    r, g, b, w = input(1)\n\n    if r + g + b + w == 0:\n        out(\"Yes\")\n        return\n\n    y = 0\n    for i in (r, g, b, w):\n        if i & 1:\n            y += 1\n\n    if y < 2:\n        out(\"Yes\")\n        return\n\n    if r and g and b:\n        r -= 1\n        g -= 1\n        b -= 1\n        w += 3\n\n    y = 0\n    for i in (r, g, b, w):\n        if i & 1:\n            y += 1\n\n    if y < 2:\n        out(\"Yes\")\n        return\n    else:\n        out(\"No\")\n\n    return\n\n\nfor i in range(input(11)): solve()\n\n#\n#   >>>>>>>>>>>>>>>> END OF SOLUTION <<<<<<<<<<<<<<<\n#\n", "def solve():\n    r, g, b, w = list(map(int, input().split()))\n    if min([r, g, b]) == 0:\n        if r % 2 + g % 2 + b % 2 + w % 2 > 1:\n            print('No')\n        else:\n            print('Yes')\n    else:\n        r2, g2, b2, w2 = r - 1, g - 1, b - 1, w + 3\n        if (r2 % 2 + g2 % 2 + b2 % 2 + w2 % 2 > 1) and (r % 2 + g % 2 + b % 2 + w % 2) > 1:\n            print('No')\n        else:\n            print('Yes')\n\n[solve() for x in range(int(input()))]\n", "t=int(input())\nfor _ in range(t):\n\tr,g,b,w=map(int,input().split())\n\tif(r%2==0 and g%2==0 and b%2==0 and w%2==0):\n\t\tprint(\"Yes\")\n\telif(r%2==0 and g%2==0 and b%2==0):\n\t\tprint(\"Yes\")\n\telif(r%2==0 and g%2==0 and w%2==0):\n\t\tprint(\"Yes\")\n\telif(r%2==0 and b%2==0 and w%2==0):\n\t\tprint(\"Yes\")\n\telif(w%2==0 and g%2==0 and b%2==0):\n\t\tprint(\"Yes\")\n\telse:\n\t\tif(r>0 and g>0 and b>0):\n\t\t\tr-=1\n\t\t\tg-=1\n\t\t\tb-=1\n\t\t\tw+=3\n\t\t\tif(r%2==0 and g%2==0 and b%2==0 and w%2==0):\n\t\t\t\tprint(\"Yes\")\n\t\t\telif(r%2==0 and g%2==0 and b%2==0):\n\t\t\t\tprint(\"Yes\")\n\t\t\telif(r%2==0 and g%2==0 and w%2==0):\n\t\t\t\tprint(\"Yes\")\n\t\t\telif(r%2==0 and b%2==0 and w%2==0):\n\t\t\t\tprint(\"Yes\")\n\t\t\telif(w%2==0 and g%2==0 and b%2==0):\n\t\t\t\tprint(\"Yes\")\n\t\t\telse:\n\t\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"No\")"]