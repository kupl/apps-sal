["n=int(input())\ninp=input().split()\nl=[]\nfor val in inp:\n\tl.append(int(val))\nl.sort()\ncount=3\nwhile(count<n and l[count]==l[count-1]):\n\tcount+=1\nif(l[2]!=l[1]):\n\tprint(count-2)\nelif(l[2]!=l[0]):\n\tprint(((count-1)*(count-2))//2)\nelse:\n\tprint((count*(count-1)*(count-2))//6)", "n = int(input())\nai = list(map(int,input().split()))\nai.sort()\ni = ai[0]\nj = ai[1]\nk = ai[2]\nans = 0\nfor num in range(2,n):\n        if k == ai[num]:\n            ans += 1\nif j == k:\n    if i == j:\n        num2 = ans\n        ans = 0\n        for num in range(1,num2+2):\n            ans += (num*(num-1))//2\n    else:\n        ans = (ans*(ans+1))//2\nprint(ans)\n", "import math\n\ndef newton(n, k):\n    if k == n:\n        return 1\n    if k == 1:\n        return n\n    if k > n:\n        return 0\n    a = math.factorial(n)\n    b = math.factorial(k)\n    c = math.factorial(n - k)\n    return (a//(b * c))\n\n\nn = int(input())\n\nS = dict()\n\nL = sorted(list(map(int, input().split())))\n\nfor e in L:\n    if e in S:\n        S[e] += 1\n    else:\n        S[e] = 1\n\nL = sorted(set(L))\n\n\ncnt = 0\ncnt2 = 0\nfor e in L:\n    cnt += S[e]\n    if cnt >= 3:\n        print(newton(S[e], S[e] - (3 - cnt2)))\n        break\n    cnt2 += S[e]\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nx = a[0]\ny = a[1]\nz = a[2]\nif x < y and y < z:\n\tprint(a.count(z))\nelif x < y and y == z:\n\tt = a.count(y)\n\tprint(t * (t - 1) // 2)\nelif x == y and y < z:\n\tprint(a.count(z))\nelse:\n\tt = a.count(x)\n\tprint(t * (t - 1) * (t - 2) // 6)\n", "def c(n, k):\n\tr = 1\n\tfor i in range(k):\n\t\tr *= n\n\t\tn -= 1\n\tfor i in range(2, k + 1):\n\t\tr //= i\n\treturn r\n\nn = int(input())\nl = sorted(map(int, input().split()))\nprev = l[0]\nbeg = 0\ncnt = 0\nans = 1\nfor i in range(n):\n\tif l[i] == prev:\n\t\tcnt += 1\n\telse:\n\t\tans *= c(i - beg, min(3, i) - beg)\n\t\tcnt = 1\n\t\tprev = l[i]\n\t\tbeg = i\n\t\tif i > 2:\n\t\t\tbreak\nif beg < 3:\n\tans *= c(n - beg, 3 - beg)\n\nprint(ans)", "n=int(input())\na=sorted(list(map(int, input().split())))\nif a[0]!=a[1] and a[1]!=a[2]:\n    print(a.count(a[2]))\nelif a[0]!=a[1] and a[1]==a[2]:\n    t=a.count(a[1])\n    print((t*(t-1))//2)\nelif a[0]==a[1] and a[1]!=a[2]:\n    print(a.count(a[2]))\nelse:\n    t=a.count(a[0])\n    print((t*(t-1)*(t-2))//6)", "def f(n, r):\n    if r == 1:\n        return n\n    elif r == 2:\n        return n * (n - 1) // 2\n    else:\n        return n * (n - 1) * (n - 2) // 6\n\nn = int(input())\na = list(map(int, input().split()))\n\ndic = {}\nfor ai in a:\n    if ai in dic:\n        dic[ai] += 1\n    else:\n        dic[ai] = 1\na = list(sorted(set(a)))\n\nans = 1\ni = 0\ncnt = 3\nwhile 0 < cnt:\n    x = dic[a[i]]\n    if cnt < x:\n        ans *= f(x, min(x, cnt))\n    cnt -= x\n    i += 1\n\nprint(ans)\n", "## 2\n\ndef c(x, y):\n    a = b = 1\n    for i in range(y):\n        a *= x-i\n        b *= y-i\n    return int(a/b)\n\nn = int(input())\na = list(map(int, input().split()))\nif n < 3:\n    print(0)\na.sort()\nx1, x2, x3 = a[0], a[1], a[2]\ncount = 0\nfor i in range(n):\n    if a[i] == x3:\n        count += 1\nif x1==x2 and x2==x3:\n    print(c(count, 3))\nelif x1<x2 and x2==x3:\n    print(c(count, 2))\nelse:\n    print(count)\n    \n", "from collections import Counter\n\ndef main():\n    int(input())\n    a = list(map(int, input().split()))\n\n    a.sort()\n    x, y, z = a[:3]\n    freq = Counter(a)\n\n    if x == y and y == z:\n        ans = freq[x] * (freq[x] - 1) * (freq[x] - 2) // 6\n    elif x == y:\n        ans = freq[x] * (freq[x] - 1) * freq[z] // 2\n    elif x == z:\n        ans = freq[x] * (freq[x] - 1) * freq[y] // 2\n    elif y == z:\n        ans = freq[y] * (freq[y] - 1) * freq[x] // 2\n    else:\n        ans = freq[x] * freq[y] * freq[z]\n\n    print(ans)\n\nmain()\n", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\nl = [a[0],a[1],a[2]]\nmx = 0\nval = l.count(l[0])\nval2 = l.count(l[1])\nval3 = l.count(l[2])\nif val==2:\n\tval = a.count(l[2])\n\tmx = max(mx,val)\nelif val==3:\n\tval = a.count(l[0])\n\tval = (val*(val-1)*(val-2))//6\n\tmx = max(mx,val)\nelif val2==2:\n\tval = a.count(l[1])\n\tval = (val*(val-1))//2\n\tmx = max(mx,val)\nelse:\n\tfor i in l:\n\t\tmx = max(mx,a.count(i))\nprint(mx)\n", "from math import factorial as f\nfrom functools import reduce\n\ndef C(n, k):\n    return f(n) // f(k) // f(n - k)\n\ninput()\na = list(map(int, input().split()))\nless = sorted(a)[:3]\ns = set(less)\nm = [less.count(i) for i in s]\nn = [a.count(i) for i in s]\n\nprint(reduce(lambda x, y: x * y, list(map(lambda x, y: C(x, y), n, m)), 1))\n\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jun 15 20:41:20 2017\n\n@author: prophet\n\"\"\"\n\nn = input()\na = input().split()\na = [int(x) for x in a]\na.sort()\ny=a[2]\narr = [x for x in a if x==y]\nns = len(arr)\nif(a[0]==y):\n    print(int(ns*(ns-1)*(ns-2)/6))\nelif(a[1]==y):\n    print(int(ns*(ns-1)/2))\nelse:\n    print(ns)", "from math import factorial as f\n\ninfinity = 10 ** 9 + 1\n\ndef find_min(arr, exclude):\n    min_elem = infinity\n    count = 0\n    for elem in arr:\n        if elem not in exclude and elem < min_elem:\n            min_elem = elem\n            count = 1\n        elif elem == min_elem:\n            count += 1\n    if min_elem == infinity:\n        min_elem, count = 0, 0\n    return (min_elem, count)\n        \n_ = int( input() )\narr = [int(i) for i in input().split()]\n\na_min, a_count = find_min(arr, [])\nb_min, b_count = find_min(arr, [a_min])\nc_min, c_count = find_min(arr, [a_min, b_min])\n\ncombinations = lambda n, m: f(n) // f(m) // f(n - m)\n\nmins = [a_count, b_count, c_count]\nsum_count = 0\nres = 1\n\ni = 0\nwhile sum_count < 3 and i < len(mins):\n    can_take = mins[i]\n    can_take = min(can_take, 3 - sum_count)\n    sum_count += can_take\n    res *= combinations(mins[i], can_take)\n    i += 1\n\nprint (res)\n    \n\n\n", "import operator as op\nfrom functools import reduce\ndef comb(n, r):\n    r = min(r, n-r)\n    if r == 0: return 1\n    numer = reduce(op.mul, range(n, n-r, -1))\n    denom = reduce(op.mul, range(1, r+1))\n    return numer//denom\nn=int(input())\nl=[int(i)for i in input().split()]\nd=sorted(l)\na=d[0]\nb=d[1]\nc=d[2]\nif a == b and b==c :\n\tprint(comb(l.count(a),3))\nelif a == b: \n\tprint(l.count(c))\nelif b==c:\n\tprint(comb(l.count(c),2))\nelse:\t\n\tprint(l.count(c))", "n = int(input())\na = list(map(int,input().split()))\n\npre = a[:]\ncnt1 = [1]*n\nfor i in range(len(a)):\n    if i==0:\n        continue\n    pre[i]=pre[i-1]\n    cnt1[i] = cnt1[i-1]\n    if a[i]<pre[i]:\n        pre[i]=a[i]\n        cnt1[i]=1\n    else:\n        if a[i]==pre[i]:\n            cnt1[i]+=1\n    \npre2 = [10**30]*n \ncnt2 = [0]*n\nfor i in range(n):\n    if(i==0):\n        continue\n    pre2[i]=pre2[i-1] \n    cnt2[i] = cnt2[i-1]\n    te = a[i]*pre[i-1]\n    if te<pre2[i]:\n        pre2[i] = te\n        cnt2[i] = cnt1[i-1]\n    else:\n        if te==pre2[i]:\n            cnt2[i] += cnt1[i-1]\n\nans = 10**30\ncnt = 0\nfor i in range(n):\n    if(i<2):\n        continue\n    t = a[i]*pre2[i-1]\n    if(t<ans):\n        ans = t \n        cnt = cnt2[i-1]\n    else:\n        if ans==t:\n            cnt+=cnt2[i-1]\n\nprint(cnt)", "from math import factorial\nn=int(input())\na=[int(x) for x in input().split()]\nweb=3\nwhile web>0:\n    if a.count(min(a))>=web:\n        r=a.count(min(a))\n        e=factorial(r)\n        f=factorial(web)*factorial(r-web)\n        e/=f\n        print(int(e))\n        return\n    else:\n        web-=a.count(min(a))\n        e=min(a)\n        while e in a:\n            a.remove(e)", "R = lambda: list(map(int, input().split()))\nn= int(input())\na= list(R())\na.sort()\nx,c= a[0],3\nif n==3 or a[2]<a[3]:\n    print(\"1\")\n    return\nelif a[1]<a[2]:\n    x=a[2]\n    c=1\nelif a[0]<a[1]:\n    x=a[1]\n    c=2\nt = sum(x==y for y in a)\nf=1\nfor i in range(c):\n    f = f* (t-i) / (i+1)\nprint(int(f))\n", "n = int(input())\na = sorted(list(map(int,input().split())))\nmin1 = a[0];min2 = a[1];min3 = a[2]\nt = True\nif(min1 == min2 and min2 == min3):\n    cnt = 0\n    for i in a:\n        if i == min1:\n            cnt += 1\n    cnt = cnt * (cnt-1) * (cnt-2)\n    print(cnt // 6)\n    t = False\n\nif(min1 == min2 and t):\n    cnt12 = 0\n    cnt3 = 0\n    for i in a:\n        if i == min1:\n            cnt12 += 1\n        if i == min3:\n            cnt3 += 1\n    print((cnt12 * (cnt12 - 1) // 2 ) * cnt3)\n\n\nif(min1 == min3 and t):\n    cnt13 = 0\n    cnt2 = 0\n    for i in a:\n        if i == min1:\n            cnt13 += 1\n        if i == min2:\n            cnt2 += 1\n    print((cnt13 * (cnt13 - 1) // 2 ) * cnt2)\n\n\n\n\nif(min3 == min2 and t):\n    cnt32 = 0\n    cnt1 = 0\n    for i in a:\n        if i == min3:\n            cnt32 += 1\n        if i == min1:\n            cnt1 += 1\n    print((cnt32 * (cnt32 - 1) // 2 ) * cnt1)\n\nif(min1 != min2 and min2 != min3 and min1 != min3):\n    cnt1 = 0;cnt2 = 0;cnt3 = 0\n    for i in a:\n        if i == min1:cnt1+=1\n        if i == min2:cnt2+=1\n        if i == min3:cnt3+=1\n    print(cnt1*cnt2*cnt3)\n", "import os\nn =int(input())\narr=[int(x) for x in input().strip().split()]\n\n# arr=[1 for x in range(0,100000)]\narr.sort()\ncount=0\nfirstindex=-1\nfor i in range(0,n):\n    if arr[i]==arr[2]:\n        if firstindex ==-1:\n            firstindex=i\n        count=count+1\n    elif arr[i]>arr[2]:\n        break\n    else:\n        continue\nchoosenum=2-firstindex+1\nresult=1\ntmp=1\nfor i in range(0,choosenum):\n    result*=(count-i)\n    tmp*=(choosenum-i)\nprint(int(result/tmp))\n\n\n\n", "from collections import Counter\nn = int(input())\na = list(map(int,input().split()))\na.sort()\nb = list(set(a))\nb.sort()\nc = Counter(a)\nif c[b[0]] >= 3:\n    k = c[b[0]]\n    print(int(k*(k-1)*(k-2)/6))\nelse:\n    k = c[b[0]]\n    if len(b) == 1:\n        j = 0\n    else:\n        j = c[b[1]]\n    if k == 2:\n        print(j)\n    elif k == 1:\n        if j >= 3:\n            print(int(j*(j-1)/2))\n        elif j == 2:\n            print(1)\n        else:\n            if len(b) <= 2:\n                print(0)\n            else:\n                print(c[b[2]])\n", "n=int(input())\nl=list(map(int,input().strip().split(' ')))\nl1=sorted(l)\na=l1[0]\nb=l1[1]\nc=l1[2]\nif a==b and b==c:\n    ans=l.count(a)\n    a=ans\n    print((a*(a-1)*(a-2))//6)\nelif b!=c:\n    ans=l.count(c)\n    c=ans\n    print(c)\nelse:\n    ans=l.count(b)\n    b=ans\n    print((b*(b-1))//2)\n", "n = int(input())\na = sorted(map(int, input().split()))\nx, y, z = a[0], a[1], a[2]\nif x < y < z:\n  print(a.count(z))\nelif x < y <= z:\n  c = a.count(y)\n  print(c*(c-1)//2)\nelif x <= y < z:\n  print(a.count(z))\nelse:\n  c = a.count(z)\n  print(c*(c-1)*(c-2)//6)\n", "from math import factorial\n\n\ndef c(n, k):\n    return (factorial(n) // factorial(k)) // factorial(n - k)\n\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nf, s, t = 0, 0, 0\ni, j, k = 0, 0, 0\nf = a[:3].count(a[0])\nif f == 1:\n    s = a[:3].count(a[1])\n    if s == 1:\n        t = 1\nelif f == 2:\n    s = 1\np = 1\nwhile p < n and a[p] == a[p - 1]:\n    p += 1\ni = p\nif p < n:\n    p += 1\n    while p < n and a[p] == a[p - 1]:\n        p += 1\n    j = p - i\n    if p < n:\n        p += 1\n        while p < n and a[p] == a[p - 1]:\n            p += 1\n        k = p - j - i\nprint(c(i, f) * c(j, s) * c(k, t))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nfir = a.count(a[0])\nsec = a.count(a[1])\nth = a.count(a[2])\nif a[0] == a[1] and a[1] == a[2]:\n    print(fir * (fir - 1) * (fir - 2) // 6)\nelif a[0] == a[1]:\n    print(fir * (fir - 1) // 2 * th)\nelif a[1] == a[2]:\n    print(fir * sec * (sec - 1) // 2)\nelse:\n    print(fir * sec * th)\n    \n", "from math import factorial as fact\nfrom math import inf\n\nN = int(input())\nnums = list(map(int, input().split(' ')))\nmins = [inf, inf, inf]\nfor a in nums:\n    if a < mins[0]:\n        mins[2] = mins[1]\n        mins[1] = mins[0]\n        mins[0] = a\n    elif a < mins[1]:\n        mins[2] = mins[1]\n        mins[1] = a\n    elif a < mins[2]:\n        mins[2] = a\n\nif mins[0] == mins[1]:\n    if mins[1] == mins[2]:\n        reps = {mins[0] : 3}\n    else:\n        reps = {mins[0] : 2, mins[2] : 1}\nelse:\n    if mins[1] == mins[2]:\n        reps = {mins[0] : 1, mins[1]: 2}\n    else:\n        reps = {mins[0] : 1, mins[1]: 1, mins[2] : 1}\n\nans = 1\nfor key, m in reps.items():\n    n = nums.count(key)\n    ans *= fact(n) / (fact(m) * fact(n - m))\n\nprint(int(ans))"]