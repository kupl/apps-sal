["\n\nn, B = list(map(int, input().split()))\n\nA = [int(x) for x in input().split()]\n\nodd, even = 0, 0\n\ncuts = []\n\nfor i in range(n - 1):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\n    if odd == even:\n        cuts += [(abs(A[i] - A[i + 1]), i)]\n\ncuts.sort()\n\nresult = 0\n\nfor cost, _ in cuts:\n    if cost <= B:\n        B -= cost\n        result += 1\n\n\nprint(result)\n", "n, b = map(int, input().split())\na = list(map(int, input().split()))\n\nce, co = 0, 0\nd = []\nfor i in range(n - 1):\n    if a[i] % 2 == 1: co += 1\n    else: ce += 1\n    if (ce == co): d.append(abs(a[i] - a[i + 1]))\n\nd.sort()\n\nres = 0\nfor i in range(len(d)):\n    if b >= d[i]:\n        res += 1\n        b -= d[i]\nprint(res)", "from copy import deepcopy\nimport itertools\nfrom bisect import bisect_left\nfrom bisect import bisect_right\nimport math\nfrom collections import deque\nfrom collections import Counter\n\n\ndef read():\n    return int(input())\n\n\ndef readmap():\n    return map(int, input().split())\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\nN, B = readmap()\nA = readlist()\n\neven = 0\nodd = 0\ncost = []\nfor i in range(0, N - 1):\n    if A[i] % 2 == 0:\n        even += 1\n    else:\n        odd += 1\n    if even == odd:\n        cost.append(abs(A[i] - A[i + 1]))\n\ncost.sort()\nans = 0\nfor c in cost:\n    if c > B:\n        break\n    else:\n        ans += 1\n        B -= c\n\nprint(ans)", "#!/usr/bin/env python3\n\n[n, B] = list(map(int, input().strip().split()))\nais = list(map(int, input().strip().split()))\n\nc = [0, 0]\ncutcost = []\nfor i in range(n - 1):\n\tc[ais[i] % 2] += 1\n\tif c[0] == c[1]:\n\t\tcutcost.append(abs(ais[i] - ais[i + 1]))\n\ncutcost.sort()\ncnt = 0\nfor cost in cutcost:\n\tif cost <= B:\n\t\tcnt += 1\n\t\tB -= cost\n\nprint (cnt)\n", "n, b = [int(v) for v in input().split()]\na = [int(v) for v in input().split()]\n\nn_odd, n_even = 0, 0\ncosts = []\n\nfor i in range(n - 1):\n    if a[i] % 2 == 0:\n        n_even += 1\n    else:\n        n_odd += 1\n    if n_even == n_odd:\n        costs.append(abs(a[i] - a[i + 1]))\n\ncosts.sort()\n\nans = 0\nwhile ans < len(costs) and costs[ans] <= b:\n    b -= costs[ans]\n    ans += 1\n\nprint(ans)\n", "n, B = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\n\nodd = 0\ns = []\nfor i in range(n - 1):\n    if a[i] % 2 == 1:\n        odd += 1\n    else:\n        odd -= 1\n    if odd == 0:\n        s.append(abs(a[i] - a[i + 1]))\n\ns.sort()\nk = 0\ni = 0\nwhile i < len(s) and k + s[i] <= B:\n    k += s[i]\n    i += 1\nprint(i)", "n, m = list(map(int, input().split()))\n\nls = [int(i) for i in input().split()]\n\nodd_num, even_num = 0, 0\n\ncur_odd = 0\ncur_even = 0\n\nans = []\n\nfor i in range(n - 2):\n    if ls[i] & 1:\n        cur_odd += 1\n    else:\n        cur_even += 1\n\n    if i >= 1 and cur_odd == cur_even:\n        ans.append(abs(ls[i+1] - ls[i]))\n\nans.sort()\n\nres = 0\nfor i in ans:\n    if m - i >= 0:\n        m -= i\n        res += 1\n    else:\n        break\n\nprint(res)\n", "n, B = list(map(int, input().split()))\na = list(map(int, input().split()))\n# print(n, B, a)\n\noMe = 0\nBs = []\nfor i in range(n):\n    if a[i] % 2 == 0:\n        oMe -= 1\n    else:\n        oMe += 1\n    if oMe == 0 and i + 1 != n:\n        Bs.append(abs(a[i] - a[i+1]))\nBs = sorted(Bs)\nans = 0\nfor i in range(len(Bs)):\n    if B - Bs[i] >= 0:\n        B -= Bs[i]\n        ans += 1\nprint(ans)\n", "n,m=map(int,input().strip().split())\nodd=0\neven=0\nl=list(map(int,input().strip().split()))\nl1=[]\nfor i in range(n-1):\n\tif l[i]%2==0:\n\t\teven=even+1\n\telse:\n\t\todd=odd+1\n\tif odd==even:\n\t\tif (l[i]-l[i+1])<0:\n\t\t\tl1.append(l[i+1]-l[i])\n\t\telse:\n\t\t\tl1.append(l[i]-l[i+1])\nl1.sort()\ncount=0\nsum1=0\nfor i in l1:\n\tsum1=sum1+i\n\tif sum1<=m:\n\t\tcount=count+1\n\telse:\n\t\tbreak\nprint (count)", "q,w = list(map(int,input().split()))\na = list(map(int,input().split()))\nd = []\nk = 0\nfor i in range(q-1):\n    k+=a[i]%2\n    if k==i-k+1:\n        d.append(abs(a[i]-a[i+1]))\nd.sort()\nk = 0\ni = 0\nwhile (i<len(d))&(k<=w):\n    k+=d[i]\n    i+=1\nif k>w:\n    print(i-1)\nelse:\n    print(i)\n    \n", "n, b = [int(c) for c in input().split(\" \")]\na = [int(c) for c in input().split(\" \")]\n\nevenodd = []\n\nevenodd_cur = 0\nfor i in range(n):\n    if a[i] % 2 == 0: evenodd_cur += 1\n    else: evenodd_cur -= 1\n    evenodd.append(evenodd_cur)\n\nwatchlist = []\nfor i in range(n-1):\n    if evenodd[i] == 0:\n        watchlist.append((abs(a[i] - a[i+1]), i))\n\nwatchlist.sort()\n# print(watchlist)\n\ntotalcount = 0\nfor price, index in watchlist:\n    if b >= price:\n        totalcount += 1\n        b -= price\n    else:\n        break\n\nprint(totalcount)", "n, b = map(int, input().split())\narr = list(map(int, input().split()))\nne = 0\nch = 0\nmass = []\nfor i in range(n - 1):\n    if(arr[i] % 2 == 0):\n        ch += 1\n    else:\n        ne += 1\n    if(ch == ne):\n        mass.append(abs(arr[i] - arr[i + 1]))\nans = 0\nmass.sort()\nfor i in mass:\n    if(i <= b):\n        b -= i\n        ans += 1\nprint(ans)", "n,k = list(map(int, input().split()))\nseq = list(map(int, input().split()))\n\ncurr = 0\ncut = []\n\nfor i in range(n-1):\n    if seq[i]%2:\n        curr += 1\n    else:\n        curr -= 1\n\n    if curr == 0:\n        cut.append(abs(seq[i]-seq[i+1]))\n\ncut.sort()\nans = 0\ncurrsum = 0\n\nfor i in cut:\n    currsum += i\n    if currsum > k:\n        break\n    else:\n        ans += 1\n\nprint(ans)\n", "from math import ceil\n\nt = 1\nfor test in range(t):\n    n,b = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    countOdd = 0\n    countEven = 0\n    cuts = []\n    prev = 0\n    for i in a:\n        if countEven==countOdd:\n            cuts.append(abs(prev-i))\n        if i%2 == 0:\n            countEven+=1\n        else:\n            countOdd+=1\n        prev = i\n    cuts[0] = 200 #useless\n    cuts.sort()\n    ans=0\n    cost = 0\n    for i in cuts:\n        if cost+i>b:\n            break\n        else:\n            ans+=1\n            cost+=i\n    print(ans)\n", "n, B = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef solve(a, B):\n    diff, k = [], 0\n    for i in range(0, len(a)-1):\n        if a[i] % 2 == 0: k += 1\n        else: k -= 1\n        if k == 0:\n            diff.append(abs(a[i+1] - a[i]))\n    diff.sort()\n    s = 0\n    for i in range(len(diff)):\n        s += diff[i]\n        if s > B:return i\n    return len(diff)\n\nprint(solve(a, B))", "#Round 493\n#B\nfrom sys import stdin, stdout\nfrom queue import PriorityQueue\n\ndef main():\n    n, b = [int(i) for i in stdin.readline().split()]\n    a = [int(i) for i in stdin.readline().split()]\n\n    q = PriorityQueue()\n    evens = 0\n    for i in range(n-1):\n        if a[i]%2 == 0:\n            evens += 1\n        else:\n            evens -= 1\n        if evens == 0:\n            q.put(abs(a[i]-a[i+1]))\n\n    count = 0\n    while not q.empty():\n        smallest = q.get()\n        if b >= smallest:\n            b -= smallest\n            count += 1\n        else:\n            break\n\n    print(count)\n    \nmain()\n\n", "def main():\n    n, b = list(map(int, input().split()))\n    numbers = list(map(int, input().split()))\n\n    values = []\n    count = 0\n    last_item = 0\n    start = False\n    for item in numbers:\n        if start and count == 0:\n            values += [abs(item - last_item)]\n        \n        if item % 2 == 0:\n            count += 1\n        else:\n            count -= 1\n            \n        last_item = item\n        start = True\n    \n    answer = 0\n    answer_count = 0\n    for value in sorted(values):\n        if answer + value <= b:\n            answer += value\n            answer_count += 1\n            \n    print(answer_count)\n    \nmain()", "n,b = [int(x) for x in input().strip().split(' ')]\na=[int(x) for x in input().strip().split(' ')]\nodd=0\neve=0\nc=[]\nfor i in range(n):\n    if a[i]&1:\n        odd+=1\n    else:\n        eve+=1\n    if i<(n-1) and odd==eve:\n        c.append(abs(a[i+1]-a[i]))\nc.sort()\nl = len(c)\nj=0\nans=0\nwhile j<l:\n    b-=c[j]\n    if b>=0:\n        ans+=1\n    else:\n        break\n    j+=1\nprint(ans)", "n,c=[int(x) for x in input().split()]\nns=[int(x)for x in input().split()]\nodd=0\ncost=[]\nfor i in range(n):\n    if (ns[i]&1)==1:\n        odd+=1\n    else:\n        odd-=1\n    if odd==0:\n        if i<n-1:\n            cost.append(abs(ns[i+1]-ns[i]))\n# print(cost)\ncost.sort()\nsum=0\np=False\nfor i in range(len(cost)):\n    sum+=cost[i]\n    if sum>c:\n        print(i)\n        p=True\n        break\nif not p:\n    print(len(cost))", "n, b = input().split()\nn = int(n)\nb = int(b)\na = [int(x) for x in input().split()]\nodd = 0\nnot_odd = 0\npos = list()\nfor i in range(n-1):\n    if a[i] % 2 == 0:\n        not_odd += 1\n    else:\n        odd += 1\n    if not_odd == odd:\n          pos.append(abs(a[i+1] - a[i]))\npos.sort()\nsum = 0\ncount = 0\nfor i in range(len(pos)):\n    if sum + pos[i] <= b:\n        sum += pos[i]\n        count += 1\nprint(count)\n", "n,b = list(map(int,input().split()))\nai = list(map(int,input().split()))\nai2 = [0] * n\ntemp1 = 0\nfor i in range(n-1):\n    if ai[i] % 2 == 0:\n        temp1 += 2\n    if temp1 == i + 1:\n        ai2[i] = 1\n        \nai4 = []\n\ntemp1 = 0\nfor i in range(n-1,0,-1):\n    if ai[i] % 2 == 0:\n        temp1 += 2\n    if temp1 == n - i:\n        if ai2[i-1] == 1:\n            ai4 += [abs(ai[i] - ai[i-1])]\nai4.sort()\nans = 0\ni = 0\nwhile  i < len(ai4) and b >= ai4[i]:\n    b -= ai4[i]\n    ans += 1\n    i += 1\nprint(ans)\n", "n, b = list(map(int, input().split()))\na = list(map(int, input().split()))\ne = [0] * len(a)\no = [0] * len(a)\n\nfor i, elem in enumerate(a):\n    e[i] = e[i - 1]\n    o[i] = o[i - 1]\n\n    if elem % 2 == 0:\n        e[i] += 1\n    else:\n        o[i] += 1\n\ncuts = 0\nprice = 0\n\nwhile True:\n    min_i = -1\n    min_val = 1e9\n    for i in range(len(a) - 1):\n        if e[i] == o[i]:\n            if abs(a[i] - a[i + 1]) < min_val:\n                min_val = abs(a[i] - a[i + 1])\n                min_i = i\n    if min_i != -1 and price + min_val <= b:\n        cuts += 1\n        price += min_val\n        a[min_i] = 1e9\n    else:\n        break\n\nprint(cuts)\n"]