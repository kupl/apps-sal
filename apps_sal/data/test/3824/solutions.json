["Q = input().split(\" \")\nF = input().split(\" \")\nxQ = int(Q[0])\nyQ = int(Q[1])\nxF = int(F[0])\nyF = int(F[1])\n\nif xQ == xF:\n    print((abs(yQ-yF)+1)*2+4)\nelif yQ == yF:\n    print((abs(xQ-xF)+1)*2+4)\nelse:\n    print((abs(xQ-xF)+1)*2+(abs(yQ-yF)+1)*2)\n", "x1,y1=map(int,input().split())\nx2,y2=map(int,input().split())\ndx=max(2,abs(x1-x2)+1)\ndy=max(2,abs(y1-y2)+1)\nprint(2*dx+2*dy)", "import math\nimport re\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\ndef ri():\n    return int(input())\n\n\ndef rfa():\n    return [float(i) for i in input().split()]\n\n\neps = 1e-9\n\n\ndef is_equal(a, b):\n    return abs(a - b) <= eps\n\n\ndef distance(p0, p1):\n    return math.sqrt((p0[0] - p1[0]) ** 2 + (p0[1] - p1[1]) ** 2)\n\n\nxq, yq = ria()\nxp, yp = ria()\nar = [(xp + 1, yp+1), (xp - 1, yp-1), (xp-1, yp + 1), (xp+1, yp - 1)]\n\nif xp == xq:\n    print(2 * 2 + (abs(yp - yq) + 1) * 2)\n    return\nif yp == yq:\n    print(2 * 2 + (abs(xp - xq) + 1) * 2)\n    return\nmni = 1e+9\n\nfor i in ar:\n    x1, y1 = i\n    mxx, mxy, mnx, mny = max(x1, xq), max(y1, yq), min(x1, xq), min(y1, yq)\n    #print(mxx,mxy,mnx,mny)\n    if mxx > xp and mxy > yp and mnx < xp and mny < yp:\n        mni = min(mni, (mxx - mnx) * 2 + (mxy - mny) * 2)\nprint(mni)\n", "import math\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nif x1 == x2:\n    ans = 2*abs(y1-y2)+6\nelif y1 == y2:\n    ans = 2*abs(x1-x2)+6\nelse:\n    ans = 2 * (abs(x1 - x2) + 1 + abs(y1 - y2) + 1)\nprint(ans)", "x1,y1=map(int,input().split())\nx2,y2=map(int,input().split())\nprint(2*(max(abs(x1-x2)+1,2)+max(abs(y1-y2)+1,2)))", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nprint(2 * max(abs(x2 - x1), 1) + 2 * max(abs(y2 - y1), 1) + 4)\n\n\n", "x,y=map(int,input().split())\nx1,y1=map(int,input().split())\nans1=abs(x-x1)+1\nans2=abs(y-y1)+1\nif x==x1 or y==y1:\n    ans1+=1\nprint(ans1*2+ans2*2)", "x,y = list(map(int,input().split()))\nfx,fy = list(map(int,input().split()))\nans = 0 \nif x == fx or y==fy :\n\tans=2\nans +=  abs(fx-x)*2 + abs(fy-y)*2 + 4\nprint(ans)\n", "a,b = map( int, input().split(' '))\nc,d = map(int, input().split(' '))\nj = 0\nif c==a or b==d : j=2\nprint((abs(c-a)+1)*2 + 2*(abs(b-d)+1)+j)", "\nn,k=map(int,input().strip().split(' '))\na,b=map(int,input().strip().split(' '))\nprint(2*(max(2,abs(a-n)+1)+max(2,abs(b-k)+1)))", "a, b = input().split()\na, b = int(a), int(b)\nc, d = input().split()\nc, d = int(c), int(d)\n\nif abs(a - c) == 0:\n    print(2 * abs(b - d) + 6)\nelif abs(b - d) == 0:\n    print(2 * abs(a - c) + 6)\nelse:\n    print(2 * abs(a - c) + 2 * abs(b-d) + 4)\n", "x1,y1=[int(i) for i in input().split()]\nx2,y2=[int(i) for i in input().split()]\nif (x1==x2):\n    print (4+2*(abs(y1-y2)+1))\nelif (y1==y2):\n    print (4+2*(abs(x1-x2)+1))\nelse:\n    print (2*(abs(x1-x2)+1) + 2*(abs(y1-y2)+1))", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\ndx = max(2, abs(x1-x2) + 1)\ndy = max(2, abs(y1-y2) + 1)\nprint(dx*2 + dy*2)\n    \n", "\nxs, ys = list(map(int, input().split()))\nxf, yf = list(map(int, input().split()))\n\nif xs == xf:\n    print((abs(yf - ys) + 1) * 2 + 4)\n    return\nelif ys == yf:\n    print((abs(xf - xs) + 1) * 2 + 4)\n    return\n\nxs, xf = sorted([xs, xf])\nys, yf = sorted([ys, yf])\n\nxf += 1\nyf += 1\n\nprint(2 * (xf - xs) + 2 * (yf - ys))\n", "x1,y1 = list(map(int,input().split()))\nx2,y2 = list(map(int,input().split()))\n\nif x1 == x2:\n    print(4+2*(abs(y2-y1)+1))\nelif y1==y2:\n    print(4+2*(abs(x2-x1)+1))\nelse:\n    print(2*(abs(x2-x1)+1)+2*(abs(y2-y1)+1))\n", "a,b = map( int, input().split())\nc,d = map(int, input().split())\nk = 0\nif c==a or b==d : k=2\nprint((abs(c-a)+1)*2 + 2*(abs(b-d)+1)+k)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Oct 21 11:00:49 2017\n\n@author: sven\n\"\"\"\nx1,y1=list(map(int,input().split()))\nx2,y2=list(map(int,input().split()))\n\nx=max(abs(x2-x1)+1,2)\ny=max(abs(y2-y1)+1,2)\nprint((x+y)*2)\n", "first = list(map(int, input().split()))\nsecond = list(map(int, input().split()))\n\nx_len = abs(first[0] - second[0]) \ny_len = abs(first[1] - second[1])\nlen_to_point = x_len + y_len\nif len_to_point == 1:\n  print(8)\nelse:\n  if x_len == 0 or y_len == 0:\n    print((len_to_point - 1) *2 + 8)\n  else:\n    print((len_to_point - 2) *2 + 8)", "x1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nans = 2 * ( abs(x1-x2) + abs(y1-y2)-1 ) + 6 \nif x1 == x2 or y1 == y2:\n    ans+=2\nprint(ans)", "x_1, y_1 = input().split()\nx_2,y_2 = input().split()\nx_1 = int(x_1)\nx_2 = int(x_2)\ny_1 = int(y_1)\ny_2 = int(y_2)\n\nif x_1 == x_2:\n    jwb = 2*(abs(y_2-y_1)+1) + 4\n\nelif y_1 == y_2:\n    jwb = 2*(abs(x_2-x_1)+1) + 4\n\nelse:\n    jwb = 2*(abs(x_2-x_1)+1) + 2*(abs(y_2-y_1)+1)\n\nprint(jwb)\n", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nx = 1 if not abs(x1-x2) else abs(x1-x2)\ny = 1 if not abs(y1-y2) else abs(y1-y2)\nprint((x+1)*2 + (y+1)*2)\n", "x1,y1=list(map(int,input().split()))\nx2,y2=list(map(int,input().split()))\n\nif x1==x2:\n    print(4+(abs(y2-y1)+1)*2)\nelif y1==y2:\n    print((abs(x2-x1)+1)*2+4)\nelse:\n    print((abs(x2-x1)+1)*2+(abs(y2-y1)+1)*2)\n", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\nprint(2 * (max(2, abs(x1 - x2) + 1) + max(2, abs(y1 - y2) + 1)))", "def main():\n\tx1,y1 = map(int,input().split())\n\tx2,y2 = map(int,input().split())\n\tres = (abs(x2-x1) + abs(y2 - y1) +2)*2\n\tif x1==x2:\n\t\tres +=2\n\tif y1 == y2:\n\t\tres +=2\n\tprint( res)\n\nmain()", "#!/usr/bin/env python3\n\ndef main():\n    x0, y0 = list(map(int, input().split()))\n    x1, y1 = list(map(int, input().split()))\n    print((max(abs(x1 - x0), 1) + max(abs(y1 - y0), 1)) * 2 + 4)\n\ntry:\n    while True:\n        main()\nexcept EOFError:\n    pass\n"]