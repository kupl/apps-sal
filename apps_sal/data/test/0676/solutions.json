["n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))\na = sorted(a)\n#print(a)\nif n == 0:\n    print('YES')\n    print(1)\n    print(1)\n    print(3)\n    print(3)\nelif n == 1:\n    print('YES')\n    print(a[0])\n    print(3 * a[0])\n    print(3 * a[0])\nelif n == 2:\n    if a[0] * 3 >= a[1]:\n        print('YES')\n        print(a[0] * 3)\n        print(a[0] * 4 - a[1])\n    elif a[1] % 3 == 0 and a[1] // 3 <= a[0]:\n        print('YES')\n        print(a[1] // 3)\n        print(a[1] + a[1] // 3 - a[0])\n    elif (a[0] + a[1]) % 4 == 0 and (a[0] + a[1]) // 4 <= a[0]:\n        print('YES')\n        print((a[0] + a[1]) // 4)\n        print(3 * ((a[0] + a[1]) // 4))\n    else:\n        print('NO')\nelif n == 3:\n    if a[0] * 3 >= a[2] and 4 * a[0] == a[1] + a[2]:\n        print('YES')\n        print(a[0] * 3)\n    elif a[2] % 3 == 0 and a[2] // 3 <= a[0] and a[2] + a[2] // 3 == a[0] + a[1]:\n        print('YES')\n        print(a[2] // 3)\n    elif a[2] == a[0] * 3:\n        print('YES')\n        print(4 * a[0] - a[1])\n    else:\n        print('NO')\nelif n == 4:\n    if a[3] == 3 * a[0] and a[0] + a[3] == a[1] + a[2]:\n        print('YES')\n    else:\n        print('NO')", "n = int(input())\na = []\nfor i in range(n):\n    a.append(int(input()))    \na.sort()    \nres = None\nif n == 0:\n    res = [1, 1, 3, 3]\nelif n == 1:\n    res = [a[0], 3*a[0], 3*a[0]]\nelif n == 2 and a[1] <= 3*a[0]:\n    res = [a[0]*4 - a[1], a[0]*3]\nelif n == 3:\n    for v in range(1501):\n        s = a + [v]\n        s.sort()\n        if s[0]*3 == s[3] and s[1] + s[2] == 4*s[0]:\n            res = [v]\n            break\nelif n == 4 and a[0]*3 == a[3] and a[1] + a[2] == 4*a[0]:\n    res = []\nif res == None:\n    print('NO')\nelse:\n    print('YES')\n    for b in res:\n        print(b)\n\n", "def check(a, b, c, d):\n    bad = [a, b, c, d]\n    bad.sort()\n    x, y, z, w = bad[0], bad[1], bad[2], bad[3]\n    if w == 3*x and x+w==y+z:\n        return True\n    return False\na = int(input())\nif a == 0:\n    print(\"YES\")\n    print(\"1\")\n    print(\"1\")\n    print(\"3\")\n    print(\"3\")\nif a == 1:\n    x = int(input())\n    print(\"YES\")\n    print(x)\n    print(3*x)\n    print(3*x)\nif a == 2:\n    x = int(input())\n    y = int(input())\n    x, y = min(x, y), max(x, y)\n    if y > 3 * x:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(4*x-y)\n        print(3*x)\nif a == 3:\n    nums = [int(input()) for i in range(3)]\n    nums.sort()\n    x, y, z = nums[0], nums[1], nums[2]\n    for i in range(1, 10**5):\n        if check(x, y, z, i):\n            print(\"YES\")\n            print(i)\n            quit()\n    print(\"NO\")\nif a == 4:\n    nums = [int(input()) for i in range(4)]\n    nums.sort()\n    if nums[-1] == 3 * nums[0] and nums[0]+nums[3] == nums[1]+nums[2]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n = int(input())\nx = []\nfor i in range(n):\n    x.append(int(input()))\nx = sorted(x)\na = []\ngood = False\nif len(x) == 0:\n    a = [1, 1, 3, 3]\n    good = True\nelif len(x) == 1:\n    a = [x[0], 3 * x[0], 3 * x[0]]\n    good = True\nelif len(x) == 2:\n    if 4 * x[0] - x[1] > 0:\n        a = [4 * x[0] - x[1], 3 * x[0]]\n        good = True\nelif len(x) == 3:\n    if x[2] == 4 * x[0] - x[1]:\n        good = True\n        a = [3 * x[0]]\n    elif x[2] == 3 * x[0]:\n        good = True\n        a = [4 * x[0] - x[1]]\n    elif x[2] % 3 == 0 and x[1] == 4 * (x[2] // 3) - x[0]:\n        good = True\n        a = [x[2] // 3]\nelif len(x) == 4:\n    if (x[2] == 4 * x[0] - x[1]) and (3 * x[0] == x[3]):\n        good = True\n\nif good:\n    print(\"YES\")\n    for i in a:\n        print(i)\nelse:\n    print(\"NO\")", "'''\nx1 + x2 + x3 + x4 = 4 * x\nx1 + x4 = 2 * x\nx4 - x1 = x\n\nx1 = 0.5 * x\nx2 + x3 = 2 * x\nx4 = 1.5 * x\n'''\n\nimport itertools\n\n\ndef check(*xs):\n\n    return sum(xs) == 2 * sum(xs[1:3]) == 4 * (xs[-1] - xs[0]) and all([0 < x <= 10 ** 6 for x in xs]) and tuple(sorted(xs)) == xs\n\n\ndef solve(x1=None, x2=None, x3=None, x4=None):\n\n    x = None\n    if x1 is not None:\n\n        x = 2 * x1\n        if x4 is not None and 3 * x1 != x4:\n\n            return\n\n        x4 = 3 * x1\n\n    if x4 is not None:\n\n        if 2 * x4 % 3 != 0:\n\n            return\n\n        x = 2 * x4 // 3\n        if x1 is not None and x // 2 != x1:\n\n            return\n\n        x1 = x // 2\n\n    if x is None:\n\n        if (x2 + x3) % 2 != 0:\n\n            return\n\n        x = (x2 + x3) // 2\n        if x % 2 != 0:\n\n            return\n\n        x1 = x // 2\n        x4 = 3 * x1\n\n    else:\n\n        if x2 is not None and x3 is None:\n\n            x3 = 2 * x - x2\n\n        elif x3 is not None and x2 is None:\n\n            x2 = 2 * x - x3\n\n    if check(x1, x2, x3, x4):\n\n        return x1, x2, x3, x4\n\nn = int(input())\nif n == 0:\n\n    print(\"YES\")\n    print(str.join(\"\\n\", list(map(str, (1, 1, 3, 3)))))\n\nelif n == 1:\n\n    a = int(input())\n    print(\"YES\")\n    print(str.join(\"\\n\", [str(x * a) for x in (1, 3, 3)]))\n\nelif n == 4:\n\n    a = []\n    for _ in range(n):\n\n        a.append(int(input()))\n\n    print(\"YES\" if check(*sorted(a)) else \"NO\")\n\nelse:\n\n    a = [None] * 4\n    for i in range(n):\n\n        a[i] = int(input())\n\n    for comb in itertools.permutations(a, 4):\n\n        nums = list(filter(bool, comb))\n        if nums != sorted(nums):\n\n            continue\n\n        r = solve(*comb)\n        if r is not None:\n\n            print(\"YES\")\n            for x, xc in zip(r, comb):\n\n                if xc is None:\n\n                    print(x)\n\n            return\n\n    else:\n\n        print(\"NO\")\n", "n=int(input())\na=sorted([int(input()) for _ in range(n)])\nb=[]\n\nif n==0: b=[1,1,3,3]\nelif n==1: b=[a[0],a[0]*3,a[0]*3]\nelif n==2: \n  x,y=a\n  if x==y: b=[x*3,x*3]\n  elif x*3>=y: b=[x*3,4*x-y]\nelif n==3:\n  x,y,z=a\n  if x*3>=z and 4*x==y+z: b=[3*x]\n  elif z%3==0 and (z+z//3)==x+y: b=[z//3]\n  elif z==3*x: b=[4*x-y]\nelif n==4:\n  if a[3]!=a[0]*3 or a[0]*4!=a[1]+a[2]: b=[-1]\n\nif len(b)+len(a)==4:\n  print('YES')\n  for x in b: print(x)\nelse:\n  print('NO')", "n=int(input())\na=sorted([int(input()) for _ in range(n)])\nb=None\n\nif n==0: \n  b=[1,1,3,3]\nelif n==1: \n  x=a[0]\n  b=[x,x*3,x*3]\nelif n==2: \n  x,y=a\n  if x==y: b=[x*3,x*3]\n  elif x*3>=y: b=[x*3,x*4-y]\nelif n==3:\n  x,y,z=a\n  if x*3>=z and x*4==y+z: b=[x*3]\n  elif z+z/3==x+y: b=[z//3]\n  elif z==x*3: b=[x*4-y]\nelif n==4:\n  x,y,z,v=a\n  if v==x*3 and x*4==y+z: b=[]\n\nif b != None:\n  print('YES')\n  for x in b: print(x)\nelse:\n  print('NO')\n", "\nn = int(input())\n\nar = [int(input()) for x in range(n)]\n\nar.sort()\n\ndef out(*g):\n\tg = list(g)\n\tg.sort()\n\tprint(\"YES\")\n\tfor x in g:\n\t\tprint(x)\n\ndef check(x1,x2,x3,x4):\n\tl = [x1,x2,x3,x4]\n\ts = sum(l) /4\n\tif s != int(s):\n\t\treturn False\n\tl.sort()\n\tm = (l[1]+l[2])/2\n\tif m != int(m):\n\t\treturn False\n\td = l[3] - l[0]\n\t\n\tif not (s==m==d):\n\t\treturn False\n\treturn True\n\ndef _0():\n\tprint('YES')\n\tprint(1)\n\tprint(1)\n\tprint(3)\n\tprint(3)\n\ndef _1():\n\tx = ar[0]\n\tprint(\"YES\")\n#\tprint(x)\n\tprint(x)\n\tprint(3*x)\n\tprint(3*x)\n\ndef _2():\n\tx,y = ar\n\tif x*3 < y:\n\t\tprint(\"NO\")\n\telse:\n\t\t\n\t\tprint('YES')\n#\t\tprint(x)\n#\t\tprint(y)\n\t\tprint(4*x-y)\n\t\tprint(3*x)\ndef _3():\n\tx = ar[0]\n\ty = ar[1]\n\tz = ar[2]\n\tif x*3 < z:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint('YES')\n#\t\tprint(x)\n#\t\tprint(y)\n#\t\tprint(z)\n\t\tprint(3*x)\n\ndef _3():\n\tar.sort()\n\tm = (max(ar)+10)*10\n\tfor x in range(1, m):\n\t\tif check(x, *ar):\n\t\t\tout(x)\n\t\t\treturn\n\t\t\t\n\tprint(\"NO\")\n\n\ndef _4():\n\tr = check(*ar)\n\tif r == False:\n\t\tprint('NO')\n\telse:\n\t\tprint(\"YES\")\n#\t\tfor x in ar:  print(x)\n\n\nvars()['_' + str(n)]()", "n=int(input())\nif n==0:\n    print('YES')\n    print(1)\n    print(1)\n    print(3)\n    print(3)\nelse:\n    lis=[]\n    for i in range(n):\n        lis.append(int(input()))\n    lis.sort()\n\n    if n==1:\n        print('YES')\n        print(lis[0])\n        print(3*lis[0])\n        print(3*lis[0])\n\n    if n==2:\n        if lis[1]-lis[0]>2*lis[0]:\n            print('NO')\n        else:\n            print('YES')\n            print(4*lis[0]-lis[1])\n            print(3*lis[0])\n    if n==3:\n        if lis[1]+lis[2]==4*lis[0] and max(lis[1],lis[2])<=3*lis[0]:\n            print('YES')\n            print(3*lis[0])\n        elif lis[2]==3*lis[0]:\n            print('YES')\n            print(4*lis[0]-lis[1])\n        elif (lis[0]+lis[1])*3==4*lis[2]:\n            print('YES')\n            print(int(lis[2]/3))\n        else:\n            print('NO')\n    if n==4:\n        if lis[3]==3*lis[0] and lis[1]+lis[2]==4*lis[0]:\n            print('YES')\n        else:\n            print('NO')\n        \n", "n=int(input())\na=[]\nfor i in range(n):\n    a.append(int(input()))\na=sorted(a)\nif n==0:\n    b=[1,1,3,3]\nelse:\n    if n==1:\n        b=[a[0],a[0]*3,a[0]*3]\n    else:\n        if n==2:\n            if a[0]==a[1]:\n                b=[a[1]*3,a[1]*3]\n            else:\n                if a[0]*3>=a[1]:\n                    b=[a[0]*3,a[0]*4-a[1]]\n                else:\n                    b=None\n        else:\n            if n==4:\n                if a[0]*3==a[3] and a[0]*4==a[1]+a[2]:\n                    b=[]\n                else:\n                    b=None\n            else:\n                if a[0]*3>=a[2] and a[0]*4==a[1]+a[2]:\n                    b=[a[0]*3]\n                else:\n                    if a[0]*3==a[2]:\n                        b=[a[0]*4-a[1]]\n                    else:\n                        if a[2]*4/3==a[0]+a[1]:\n                            b=[a[2]//3]\n                        else:\n                            b=None\nif b==None:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    for x in b:\n        print(x)\n                \n                \n", "n=int(input())\na=sorted([int(input()) for _ in range(n)])\nb=None\n\nif n==0: \n  b=[1,1,3,3]\nelif n==1: \n  x=a[0]\n  b=[x,x*3,x*3]\nelif n==2: \n  x,y=a\n  if x==y: b=[x*3,x*3]\n  elif x*3>=y: b=[x*3,x*4-y]\nelif n==3:\n  x,y,z=a\n  if x*3>=z and x*4==y+z: b=[x*3]\n  elif z+z/3==x+y: b=[z//3]\n  elif z==x*3: b=[x*4-y]\nelif n==4:\n  x,y,z,v=a\n  if v==x*3 and x*4==y+z: b=[]\n\nif b != None:\n  print('YES')\n  for x in b: print(x)\nelse:\n  print('NO')\n", "\nn = int(input())\n\nar = [int(input()) for x in range(n)]\n\nar.sort()\n\nfoobar = 1\n\ndef out(*g):\n\tg = list(g)\n\tg.sort()\n\tprint(\"YES\")\n\tfor x in g:\n\t\tprint(x)\n\ndef check(x1,x2,x3,x4):\n\tl = [x1,x2,x3,x4]\n\ts = sum(l) /4\n\tif s != int(s):\n\t\treturn False\n\tl.sort()\n\tm = (l[1]+l[2])/2\n\tif m != int(m):\n\t\treturn False\n\td = l[3] - l[0]\n\t\n\tif not (s==m==d):\n\t\treturn False\n\treturn True\n\ndef _0():\n\tprint('YES')\n\tprint(1)\n\tprint(1)\n\tprint(3)\n\tprint(3)\n\ndef _1():\n\tx = ar[0]\n\tprint(\"YES\")\n#\tprint(x)\n\tprint(x)\n\tprint(3*x)\n\tprint(3*x)\n\ndef _2():\n\tx,y = ar\n\tif x*3 < y:\n\t\tprint(\"NO\")\n\telse:\n\t\t\n\t\tprint('YES')\n#\t\tprint(x)\n#\t\tprint(y)\n\t\tprint(4*x-y)\n\t\tprint(3*x)\ndef _3():\n\tx = ar[0]\n\ty = ar[1]\n\tz = ar[2]\n\tif x*3 < z:\n\t\tprint(\"NO\")\n\telse:\n\t\tprint('YES')\n#\t\tprint(x)\n#\t\tprint(y)\n#\t\tprint(z)\n\t\tprint(3*x)\n\ndef _3():\n\tar.sort()\n\tm = (max(ar)+10)*10\n\tfor x in range(1, m):\n\t\tif check(x, *ar):\n\t\t\tout(x)\n\t\t\treturn\n\t\t\t\n\tprint(\"NO\")\n\n\ndef _4():\n\tr = check(*ar)\n\tif r == False:\n\t\tprint('NO')\n\telse:\n\t\tprint(\"YES\")\n#\t\tfor x in ar:  print(x)\n\n\nvars()['_' + str(n)]()", "n = int(input())\nt = sorted([int(input()) for i in range(n)])\ns = None\n\nif n == 0:\n    s = [1, 1, 3, 3]\nelif n == 1:\n    a = t[0]\n    s = [a, 3 * a, 3 * a]\nelif n == 2:\n    a, b = t\n    if a * 3 >= b: s = [3 * a, 4 * a - b]\nelif n == 3:\n    a, b, c = t\n    if 4 * a == b + c: s = [3 * a]\n    elif 4 * c / 3 == a + b: s = [c // 3]\n    elif c == 3 * a: s = [4 * a - b]\nelif n == 4:\n    a, b, c, d = t\n    if d + a == 4 * a == b + c: s = []\n\nif s != None:\n    print('YES')\n    for a in s: print(a)\nelse:\n    print('NO')"]