["n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nmx = a[-1]\nt = 0\nans = 0;\nfor i in a:\n    if i > 0:\n        if i > t:\n            t += 1\n        ans += i - 1\nans -= mx - t\nprint(ans)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, M = getIntList()\n\nza  = getIntList()\nza.sort(reverse = True)\n\nre = 0\n\nfor i in range(N-1):\n    a = za[i]\n    b = za[i+1]\n    g = b\n    if g>=a:\n        t = a-1\n        if t<1: t = 1\n        re +=  g-t\n        za[i+1] = t\n        re += a - 1\n    else:\n        re += g\nprint(re)\n\n\n\n\n\n\n", "3\n\nimport math\nimport sys\n\n\nDEBUG = False\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef solve(N, M, A):\n    A.sort(reverse=True)\n\n    lh = A[0]\n    cnt = 1\n    for a in A[1:]:\n        if lh == 1:\n            cnt += 1\n        elif lh - 1 <= a:\n            cnt += 1\n            lh -= 1\n        else:\n            cnt += lh - a\n            lh = a\n\n    cnt += lh - 1\n\n    return sum(A) - cnt\n\n\ndef main():\n    N, M = [int(e) for e in inp().split()]\n    A = [int(e) for e in inp().split()]\n    assert len(A) == N\n    print(solve(N, M, A))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort(reverse=True)\nworst=0\nmaxi=a[0]\na.append(0)\nfor i in range(n+1):\n    bad=maxi-a[i]-i\n    worst=max(worst,bad)\nprint(sum(a)-n-worst)", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nh = 0\nans = 0\nfor i in range(n - 1):\n    ans += a[i] - 1\n    if a[i] > h:\n        h += 1\nif h < max(a):\n    ans += h\nelse:\n    ans += a[-1] - 1\nprint(ans)\n        \n", "n, m = list(map( int, input().split() ))\na = list( map( int, input().split() ) )\n\nans = sum( a )\na.sort()\nlastlevel = 0\nlevel = 0\ngot = 0\n\nfor i in a:\n    got = max( got, i )\n    level = min( level + 1, got )\n    if i > 0:\n        ans -= 1\n        lastlevel = level\n\nans -= ( got - level )\nprint( ans )\n", "n, m = list(map(int, input().split()))\na = sorted(map(int, input().split()))\nans = 0\ncur = 0\nfor b in a:\n  if b > cur:\n    ans += 1\n    cur += 1\n  else:\n    ans += 1\nprint(sum(a) - (ans + max(a) - cur))\n", "from collections import Counter as C\nn, m = map(int, input().split())\nl = [*map(int, input().split())]\nc = sorted(C(l).items())\n\nres = 0\nj = 0\nfor hi, ni in c:\n    # print(hi, ni, j)\n    h = min(hi - j, ni) + j\n    res += (hi - 1) * ni \n    if h > j:\n        j = h\nm = max(l)\nif j < m:\n    res -= m - j\nprint(res)", "import math as ma\nimport sys\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li():\n\treturn list(map(int , input().split()))\n\n\ndef num():\n\treturn map(int , input().split())\n\n\ndef nu():\n\treturn int(input())\n\n\nn,m=num()\na=li()\nind=-1\nz=0\nll=sorted(a)\nmx=ll[n-1]-1\ncc=0\nfor i in range(n-2,-1,-1):\n\tif (ll[i] == 0):\n\t\tcontinue\n\tif(mx==0):\n\t\tcc += ll[i] - 1\n\t\tcontinue\n\n\tif(ll[i]>=mx):\n\t\tcc+=1\n\t\tmx-=1\n\t\tcc+=ll[i]-1\n\t\tll[i]=1\n\telse:\n\t\tmx=ll[i]\n\t\tcc+=1\n\t\tmx-=1\n\t\tcc += ll[i] - 1\n\t\tll[i] = 1\n\nprint(cc)", "n, m = list(map(int, input().split()))\na = [int(x) for x in input().split()]\nc = sum(a)\nif n == 1:\n\tprint(0)\n\treturn\na.sort()\nres = 0\npocl = a[n - 1]\nf = False\nfor i in range(n - 2, -1, -1):\n\tif pocl > 1:\n\t\tif a[i] >= pocl:\n\t\t\tres += 1\n\t\t\tpocl -= 1\n\t\t\tres += (a[i] - 1)\n\t\telse:\n\t\t\tf = True\n\t\t\tpocl = a[i]\n\t\t\tres += 1\n\t\t\tres += (a[i] - 1)\n\t\t\tpocl -= 1\n\telif pocl == 1:\n\t\tif f:\n\t\t\tres += 1\n\t\tres += (a[i] - 1)\n\t\tpocl -= 1\n\telse:\n\t\tres += (a[i] - 1)\n\t#print(res, pocl)\nprint(res)\n\t\n", "import sys\ninput_file = sys.stdin\n\n[n,m] = list(int(x) for x in input_file.readline().split())\nstacks = list(int(x) for x in input_file.readline().split())\nstacks.sort()\n\nans = 0\ncur_stack = 0\ncur_h = 0\n\nwhile cur_stack < n:\n    ans += 1\n    if stacks[cur_stack] >= cur_h + 1:\n        cur_h += 1\n    cur_stack += 1\nans += stacks[-1] - cur_h \n    \nprint(sum(stacks) - ans)\n", "n, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nres = 0\nsame = 0\np = 1\nfor h in a:\n\tif p <= h:\n\t\tp += 1\n\telse:\n\t\tsame += 1\nres = a[-1] + same\nprint(sum(a) - res)", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nh = max(a)\na.sort()\na.reverse()\na.append(0)\nans = sum(a)\nfor i in range(n):\n    if a[i + 1] >= a[i]:\n        a[i + 1] = a[i] - 1\n    ans -= max(a[i] - a[i + 1], 1)\nprint(ans)", "import math\nn, m=map(int, input().split())\na=sorted(list(map(int, input().split())))\nres=0\nnr=1\nf=1\nfor i in range(len(a)-1):\n  if (a[i]!=0):\n    if (a[i]==1):\n      nr=2\n      continue\n    if (nr>a[i]):\n      res+=max(0, max(0, nr-1)-1)\n    else:\n      res+=max(0, a[i]-nr)+max(0, nr-1)\n    if (a[i]-nr>=0):\n      f=0\n    if (f==0):\n      nr+=1\n      f=1\nif (nr>a[-1]):\n  res+=max(0, max(0, nr-1)-1)\nelse:\n  res+=max(0, nr-1)\nprint (res)", "n,m=map(int,input().split())\narr=[ int(x) for x in input().split()]\n\narr=sorted(arr,reverse=True)\narr.append(0)\n#print(arr)\nisum=sum(arr)\nans=[]\ntop=arr[0]\nfor i in range(n):\n\tif(arr[i]==1):\n\t\tans.append(1)\n\t\tarr[i+1]=1\n\t\tcontinue\n\tif(arr[i+1] >arr[i]):\n\t\tarr[i+1]=arr[i]\n\tif arr[i]-arr[i+1]==0:\n\t\tans.append(1)\n\t\th=1\n\telse:\n\t\tans.append(arr[i]-arr[i+1])\n\t\th=arr[i]-arr[i+1]\n\n\ttop=arr[i]-h\n\tarr[i+1]=top\n# \tprint(\"top:\",top)\n# \tprint(\"arr:\",arr)\n# \tprint(\"ans:\",ans)\n# print(ans)\nprint(isum-sum(ans))", "n, m = map(int, input().split())\na = [0] + list(map(int, input().split()))\na.sort()\nans = 0\nh = a[-1]\nfor i in range(n, 0, -1):\n\tif a[i - 1] < h - 1:\n\t\tans = ans + a[i] - h + a[i - 1]\n\t\th = a[i - 1]\n\telse:\n\t\tans = ans + a[i] - 1\n\t\th = h - 1\nprint(ans)", "import sys\n\nn,m=list(map(int,input().split()))\nA=list(map(int,input().split()))\n\nif n==1:\n    print(0)\n    return\n\nA.sort(reverse=True)\n\nNOW=A[0]\nANS=1\ni=1\nwhile i<n:\n    if A[i]==A[i-1]:\n        NOW=max(1,NOW-1)\n        ANS+=1\n    else:\n        if A[i]>=NOW-1:\n            ANS+=1\n            NOW=max(NOW-1,1)\n        else:\n            ANS+=max(1,NOW-A[i])\n            NOW=A[i]\n    i+=1\n    #print(i,ANS,NOW)\n\nANS+=(NOW-1)\nprint(sum(A)-ANS)\n", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    #n=int(input())\n    #a=list(map(int,sys.stdin.readline().split(' ')))\n    n,k= list(map(int, sys.stdin.readline().split(' ')))\n    a=list(map(int,sys.stdin.readline().split(' ')))\n    a.sort()\n\n    ans=0\n    c=1\n\n    for i in range(n):\n    \tif(c>a[n-1] or c>a[i]):\n    \t\tans+=a[i]-1\n    \t\tcontinue\n    \tif(i!=n-1):\n    \t\tans+=a[i]-1\n    \t\tc+=1\n    \telse:\n    \t\tans+=c-1\n    print(ans)\n\n\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()\n", "n, m = [int(x) for x in input().split()]\n\na = [int(x) for x in input().split()]\n\na.sort()\nlast = 0\ntotal = 0\nfor i in range(n - 1):\n    if a[i]>0 :\n        total += a[i] - 1\n        last = min(last + 1, a[i])\n\nprint(total + max(a[n-1] - max(1, a[n - 1] - last), 0))", "n,m=[int(x) for x in input().split()]\na=[int(x) for x in input().split()]\ns=sum(a)\nneed=0\na.sort()\nj=1\nflag=0\nk=max(a)\nif n==1:\n    print(0)\nelse:\n    for i in range(n):\n        if a[i]<j:\n            flag=1\n        else:\n            flag=0\n        if a[i]==1:\n            need+=1\n        elif a[i]>=j and i!=n-1:\n            need+=1\n        elif a[i]>=j and i==n-1 and j<=k:\n            need+=k-j+1\n        else:\n            need+=1\n        if flag!=1:\n            j+=1\n    print(s-need)\n        \n        \n", "n,m=map(int,input().split())\narr=list(map(int,input().split()))\narr.sort()\nans=0\nheight=0\nfor i in range(n):\n    if(arr[i]>height):\n        ans+=1\n        height+=1\n    else:\n        ans+=1\n\nif(arr[-1]>height):\n    ans+=(arr[-1]-height)\nprint(sum(arr)-ans)", "a,b = map(int,input().split())\nlist1 = [*map(int,input().split())]\nlist1.sort(reverse= True)\nans = 0\nneededHeight = list1[0]\nfor i,j in enumerate(list1[1:]):\n\tneededHeight = max(min(j, list1[i]-1),1)\n\tans += j-neededHeight\n\tif list1[i]>1:\n\t\tans+= neededHeight\n\tlist1[i+1] = neededHeight\nprint(ans)", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nif n==1:\n\tprint(0)\n\treturn\nans = 0\na.sort(reverse=True)\np=a[0]\nfor j in range(n-1):\n\t#k=a[j]-a[j+1]\n\tif p<=0:\n\t\tans+=a[j]-1\n\t\tcontinue\n\tif a[j+1]>=p-1:\n\t\tans+=a[j]-1\n\t\tp-=1\n\telse:\n\t\tk=p-a[j+1]\n\t\tans+=a[j]-k\n\t\tp-=k\n\t\n\t#p=a[j+1]\n\t#print(ans,p)\nif p<0:\n\tp=0\nans+=a[-1]-max(p,1)\nprint(ans)\n", "#a = [int(i) for i in input().split()]\n#n = input()\nn,m = map(int,input().split())\na = sorted([int(i) for i in input().split()])\nans = 0\n\nc = a[n-1]\nif n==1:\n\tprint(0)\n\traise SystemExit\n\n\n\nfor i in range(n-1,-1,-1):\n\tif i>0 and a[i-1]<c-1:\n\t\ta[i] -= (c-1)-a[i-1]\n\t\tans += a[i]-1\n\t\tc = a[i-1]\n\telse:\n\t\tif a[i]>=c:\n\t\t\tans+=a[i]-c\n\t\t\tif i:\n\t\t\t\tans+=max(c-1,0)\n\t\t\tc-=1\n\tc = max(c,1)\n\n\nprint(ans)", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nc=max(l)\nlow=0\nans=0\nfor i in range(n-1):\n    if l[i]>low:\n        ans+=l[i]-1\n        low+=1\n    else:\n        ans+=l[i]-1\nif low==c:\n    ans+=low-1\nelse:\n    ans+=low\nprint(ans)\n        \n    \n"]