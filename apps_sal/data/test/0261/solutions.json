["kk=0\nx = int(input())\ny = input()\nz = [i for i in range(len(y)) if y[i] == '*']\nfor i in range(0, 100):\n    for j in range(1, 100):\n        if i in z and i+j in z and i+2*j in z and i+3*j in z and i+4*j in z:\n            kk=1\nif kk==1:\n    print(\"yes\")\nelse:\n    print(\"no\")\n", "n = int(input())\ns = input()\nfor ln in range(1, n):\n    for i in range(n):\n        if i + ln * 4 < n:\n            if s[i] == s[i + ln] == s[i + ln * 2] == s[i + ln * 3] == s[i + ln * 4] == '*':\n                print('yes')\n                return\nprint('no')", "n = int(input())\ns = input() + '.' * 600\n\nhas = False\nfor dif in range(1, 101):\n    for st in range(100):\n        if s[st] == s[st + dif] == s[st + 2 * dif] == s[st + 3 * dif] == s[st + 4 * dif] == '*':\n            has = True\n\nprint('yes' if has else 'no')\n", "import sys\nn = int(input())\nS = input()\nfor l in range(n):\n    if S[l] == \"*\":\n        d = 1\n        while l + 4 * d < n:\n            if S[l + d] == S[l + 2 * d] == S[l + 3 * d] == S[l + 4 * d] == \"*\":\n                print(\"yes\")\n                return\n            d += 1\nprint(\"no\")\n\n\n", "n = int(input())\ns = input().rstrip()\nd = [[1 for i in range(n)] for i in range(n)]\nmaxx = 0\nfor i in range(n):\n    if s[i] == '.':\n        continue\n    maxx = max(maxx, max(d[i]))\n    for j in range(n):\n        if i + j >= n:\n            break\n        d[i + j][j] = max(d[i + j][j], d[i][j] + 1)\nprint('yes' if maxx >= 5 else 'no')", "n = int(input())\ns = input()\n\nans = \"no\"\nfor i in range(len(s)):\n    if(s[i]=='.'):\n        continue\n    for d in range(1, 100):\n        cnt = 1\n        j = i + d\n        while(cnt < 5):\n            if(j >= len(s)):\n                break\n            if(s[j] == '.'):\n                break\n            cnt+=1\n            j+=d\n        if(cnt==5):\n            ans = \"yes\"\n            break\n    if(ans==\"yes\"):\n        break\n                \nprint(ans)\n", "n = int(input())\ns = input().strip()\nfor i in range(n):\n\tDP = [0] * n\n\tfor j in range(n):\n\t\tif s[j] == \"*\":\n\t\t\tDP[j] = 1\n\t\t\tif j >= i and s[j - i] == '*':\n\t\t\t\tDP[j] += DP[j - i]\n\tif max(DP) >= 5:\n\t\t#print(i,max(DP))\n\t\tprint(\"yes\")\n\t\treturn\nprint('no')", "n = int(input())\nlevel = input().strip()\nfor l in range(1, n + 1):\n    for i in range(n - l + 1):\n        for j in range(5):\n            if i + l * j >= n or level[i + l * j] == '.':\n                break\n        else:\n            print('yes')\n            return\nprint('no')\n", "import sys\nn = int (sys.stdin.readline())\ns = sys.stdin.readline().strip()\nres = 'no'\nfor start in range (n):\n  for l in range (1,n):\n    for j in range (start, start+l*5, l):\n      if j >= n:\n        break\n      if s[j] == '.':\n        break\n      if j == start + l * 4:\n        res = 'yes'\nprint (res)\n\n\n", "def main():\n    n = int(input())\n    s = input().rstrip()\n    ar = [0] * n\n    for i in range(n):\n        for l in range(1, n):\n            j = i\n            sum1 = 0\n            while j >= 0:\n                if s[j] == '*':\n                    sum1 += 1\n                else:\n                    break\n                j -= l\n            if sum1 >= 5:\n                print('yes')\n                return\n    print('no')\nmain()\n\n", "n = int(input())\ns = input().strip()\n\nresult = False\nfor i in range(n-4):\n    for j in range(1, (n - i - 1) // 4 + 1):\n        #print(s[i:i + 4*j+1:j])\n        if s[i:i + 4*j + 1:j] == '*****':\n            result = True\nif result:\n    print(\"yes\")\nelse:\n    print(\"no\")\n", "\nn = int(input())\ns = input()\nflag = False\nfor i in range(n):\n\tfor k in range(1,n):\n\t\tif i + 4*k < n:\n\t\t\tif s[i] == '*' and s[i + k] == '*' and s[i + 2*k] == '*' and s[i + 3*k] == '*' and s[i + 4*k] == '*':\n\t\t\t\tflag = True  \nif flag == True:\n\tprint('yes')\nelse:\n\tprint('no')", "n = int(input())\narr = list(input())\nflag = False\nfor i in range(n):\n    if arr[i] == '*':\n        for d in range(1, n):\n            begin = i\n            for k in range(4):\n                if (begin + d) < n and arr[begin + d] == '*':\n                    begin += d\n                else:\n                    break\n            else:\n                flag = True\n                break\n    if flag:\n        break\nif flag:\n    print('yes')\nelse:\n    print('no')", "import itertools\ndef king():\n    n= int(input())\n    s= input()\n    a= []\n    for i in range(len(s)):\n        if s[i]== \"*\":\n            a.append(i+1)\n            \n    #print(a)\n    if len(a)< 5:\n        print(\"no\")\n        return\n    for arr in itertools.combinations(a, 5):\n        arr= sorted(arr)\n        mine= []\n        for i in range(4):\n            mine.append(arr[i+1]- arr[i])\n        if len(set(mine))== 1:\n            print(\"yes\")\n            return\n    \n    print(\"no\")\n    return\nking()", "import sys, os\nimport fileinput\nn = int(input())\ns = input().strip()\n\nfor i in range(1, n + 1):\n\tfor j in range(1, n + 1):\n\t\tif j - 1 >= n or j - 1 + i >= n or j - 1 + 2*i >= n or j - 1 + 3*i >= n or j - 1 + 4*i >= n: break\n\t\tt = \"%s%s%s%s%s\" % (s[j - 1], s[j - 1 + i], s[j - 1 + 2*i], s[j - 1 + 3*i], s[j - 1 + 4*i])\n\t\tif t == \"*****\":\n\t\t\tprint(\"yes\")\n\t\t\treturn\n\nprint(\"no\")", "def solve(level):\n    level_size = len(level)\n\n    def check(k, l):\n        c = 0\n        while k + l < level_size and '*' == level[k+l]:\n            c += 1\n            k += l\n        return c >= 4\n\n    for i in range(level_size):\n        if '*' == level[i]:\n            for j in range(i+1, level_size):\n                if '*' == level[j] and check(i, j-i):\n                    return 'yes'\n    return 'no'\n\n\ninput()\nprint(solve(input().strip()))\n", "n = int(input())\narr = list(input())\nans = False\nfor i in range(n):\n    if arr[i] == \"*\":\n        for j in range(1, n // 4 + 1):\n            x = 0\n            for z in range(i, n, j):\n                if arr[z] == \"*\":\n                    x += 1\n                else:\n                    break\n            if x >= 5:\n                ans = True\nif ans:\n    print(\"yes\")\nelse:\n    print(\"no\")", "def main():\n    n = int(input())\n    S = input()\n    fl = 0\n    for i in range(len(S)-3):\n        if S[i] == '.':\n            continue\n        else:\n            for j in range(1, len(S)//4+1):\n                for k in range(5):\n                    if i+k*j >= len(S) or S[i+k*j] == '.':\n                        break\n                else:\n                    fl = 1\n                    break\n        if fl:\n            break\n    if fl:\n        print('yes')\n    else:\n        print('no')\ndef __starting_point():\n    main()\n\n__starting_point()", "import collections\n\n\ninput()\nm = collections.defaultdict(set)\nfor i, ch in enumerate(input()):\n\n    if ch == \"*\":\n\n        m[i]\n        for j in tuple(m):\n\n            if i != j:\n\n                m[min(i, j)].add(max(i, j) - min(i, j))\n\nfor node in sorted(m):\n\n    for size in m[node]:\n\n        count = 0\n        current_node = node\n        while count != 4:\n\n            if size in m[current_node]:\n\n                current_node += size\n                count += 1\n\n            else:\n\n                break\n\n        if count == 4:\n\n            print(\"yes\")\n            return\n\nprint(\"no\")\n", "#!python3\nn = input()\ns = input()\n\ngood = False\n\nfor i in range(0, int(n)):\n  for j in range(1, 27):\n    try:\n      if s[i]=='*' and s[i+j]=='*' and s[i+2*j]=='*' and s[i+3*j]=='*' and s[i+4*j]=='*':\n        good = True\n    except:\n      pass\n\nif good:\n  print(\"yes\")\nelse: \n  print(\"no\")", "#fin = open(\"input.txt\")\n#n = int(fin.readline())\n#s = list(fin.readline())\nn = int(input())\ns = list(input())\nF = False\nfor k in range(1, (n + 3) // 4 + 1):\n\tfor i in range(n - 3):\n\t\t#print(i)\n\t\tflag = True\n\t\tfor j in range(5):\n\t\t\t#print(i + j * k + 1, end = \" \")\n\t\t\tif i + j * k >= n or s[i + j * k] == \".\":\n\t\t\t\tflag = False\n\t\t#print(flag)\n\t\tif flag:\n\t\t\tF = True\n\t\t\tbreak\n\tif F:\n\t\tbreak\nif F:\n\tprint(\"yes\")\nelse:\n\tprint(\"no\")\n", "n = int(input())\nline = input()\ncheck = False\nfor i in range(1, (n // 4) + 1):\n    for j in range((n - i * 4)):\n        if line[j] == \"*\":\n            if line[j] == line[j + i] == line[j + 2 * i] == line[j + 3 * i] == line[j + 4 * i]:\n                print(\"yes\")\n                check = True\n                break\n    if check:\n        break\nif not check:\n    print(\"no\")", "n = int(input())\nlvl = input()\n\nfor start in range(0,107):\n    for jump in range(1,40):\n        if start+jump+jump+jump+jump >= len(lvl):\n            break\n        if lvl[start] == lvl[start+jump] == lvl[start+jump+jump] == lvl[start+jump+jump+jump]== lvl[start+jump+jump+jump+jump] == '*':\n            print('yes')\n            return\n\nprint('no')\n"]