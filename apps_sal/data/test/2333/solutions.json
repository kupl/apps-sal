["import  sys\nimport  math\ninput=sys.stdin.readline\n#sys.setrecursionlimit(1000000)\nmod=int(1000000007)\ni=lambda :map(int,input().split())\nn=int(input())\na=[int(x) for x in input().split()]\nt=[[0]*21 for i in range(300005)]\nfor i in range(n):\n    t[i][0]=a[i]\n\ndef build(n):\n    for j in range(1,20):\n        for i in range(n):\n            if i+(1<<j)-1>n-1:\n                break;\n            t[i][j]=max(t[i][j-1],t[i+(1<<(j-1))][j-1])\n\ndef query(p,q):\n    p,q=int(p),int(q)\n    log=int(math.log2(q-p+1))\n    m=t[p][log]\n    n=t[q-(1<<log)+1][log]\n    return max(m,n)\n\nb=[-1]*(n+2)\nbuild(n)\nmax1=-1\nans=0\nfor i in range(n):\n    max1=max(max1,b[a[i]])\n    b[a[i]]=i\n    x=b[1]\n    while x>max1:\n        if x<=max1:\n            break\n        p=query(x,i)\n        if p==i-x+1:\n            ans+=1\n            x=b[p+1]\n        else:\n            x=i-p+1\nprint(ans)", "#import  sys\nimport  math\n#input=sys.stdin.readline\n#sys.setrecursionlimit(1000000)\nmod=int(1000000007)\ni=lambda :map(int,input().split())\nn=int(input())\na=[int(x) for x in input().split()]\nt=[[0]*21 for i in range(300005)]\nfor i in range(n):\n    t[i][0]=a[i]\n\ndef build(n):\n    for j in range(1,20):\n        for i in range(n):\n            if i+(1<<j)-1>n-1:\n                break;\n            t[i][j]=max(t[i][j-1],t[i+(1<<(j-1))][j-1])\n\ndef query(p,q):\n    p,q=int(p),int(q)\n    log=int(math.log2(q-p+1))\n    m=t[p][log]\n    n=t[q-(1<<log)+1][log]\n    return max(m,n)\n\nb=[-1]*(n+2)\nbuild(n)\nmax1=-1\nans=0\nfor i in range(n):\n    max1=max(max1,b[a[i]])\n    b[a[i]]=i\n    x=b[1]\n    while x>max1:\n        if x<=max1:\n            break\n        p=query(x,i)\n        if p==i-x+1:\n            ans+=1\n            x=b[p+1]\n        else:\n            x=i-p+1\nprint(ans)"]