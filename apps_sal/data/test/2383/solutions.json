["N=int(input())\na=list(map(int,input().split()))\ncnt=0\nfor i in range(N):\n    if cnt+1==a[i]:\n        cnt+=1\nif cnt==0:\n    print((-1))\nelse:\n    print((N-cnt))\n", "n = int(input())\na = list(map(int, input().split()))\nif 1 not in a:\n    print((-1))\nelse:\n    m = 1\n    ans = 0\n    for i in a:\n        if i == m:\n            m += 1\n        else:\n            ans += 1\n    print(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nres = 0\nnum = 1\nif 1 not in a:\n    print(-1)\nelse:\n    for ai in a:\n        if ai == num: num += 1\n        else: res += 1\n    print(res)", "N = int(input())\nS = list(map(int, input().split()))\na=1\nfor i in range(N):\n    if S[i]==a:\n        a=a+1\nif a==1:\n    print(-1)\nelse:\n    print(N-a+1)", "N = int(input())\nS = list(map(int, input().split()))\na=1\nfor i in range(N):\n    if S[i]==a:\n        a=a+1\nif a==1:\n    print(-1)\nelse:\n    print(N-a+1)", "N = int(input())\n\na = map(int, input().split())\nA = []\ncount = 0\nfor i in a:\n    if i == count + 1:\n        A.append(i)\n        count += 1\nif A:\n    print(N - count)\nelse:\n    print('-1')", "N = int(input())\nL = list(map(int, input().split()))\nc = 1\nfor l in L:\n  if l == c:\n    c += 1\nr = N - c + 1\nif r == N:\n  print(-1)\nelse:\n  print(r)", "n=int(input())\na=list(map(int,input().split()))\ncnt=0\nfor i in a:\n    if i==cnt+1:\n        cnt+=1\nif cnt==0:\n    print('-1')\nelse:\n    print(n-cnt)", "n = int( input() )\na = list( map( int, input().split() ) )\n\ncount = 1\nfor i in range( n ):\n    if a[ i ] == count:\n        count += 1\n\nif count == 1:\n    print( -1 )\nelse:\n    print( n - count + 1 )", "N = int(input())\nA = list(map(int, input().split()))\n\nl = 1\ns = 0\n\nfor i in A:\n  if i == l:\n      #print(i)\n      l += 1\n      #print(l)\n\nif l == 1:\n\tans = -1\nelse:\n\tans = N-l+1\n\nprint(ans)", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nnum = 1\nfor i in A:\n    if i == num:\n        num += 1\nif num == 1:\n    print((-1))\nelse:\n    print((N - (num - 1)))\n", "# D\nN = int(input())\nA = list(map(int,input().split()))\n\nnext_number = 1\ncnt = 0\nfor a in A:\n  if a == next_number:\n    next_number += 1\n  else:\n    cnt += 1\nif cnt == len(A):\n  print('-1')\nelse:\n  print(cnt)", "n = int(input())\nA = list(map(int,input().split()))\nif not 1 in A:\n    print((-1))\n    return\nnum = 1\ncnt = 0\nfor a in A:\n    if a == num:\n        num += 1\n    else:\n        cnt += 1\nprint(cnt)\n", "#!/usr/bin/env python3\ndef main():\n    N = int(input())\n    a = [int(x) for x in input().split()]\n\n    cnt = 0\n    for num in a:\n        if num == cnt + 1:\n            cnt += 1\n    if cnt == 0:\n        print((-1))\n    elif cnt == N:\n        print((0))\n    else:\n        print((N - cnt))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\n\nans = 1\ncnt = 0\n\nif ans not in a:\n  print(-1)\n  return\nfor i in a:\n  if i == ans:\n    ans += 1\n    continue\n  cnt += 1\n  \nprint(cnt)", "n = int(input())\na = list(map(int, input().split()))\n\nc = 1\nfor i in a:\n    if i == c:\n        c += 1\nprint(n-c+1 if c > 1 else -1)", "n = int(input())\nnum_list = list(map(int, input().split()))\n\nmin = num_list[0]\nfor j in range(1, n, 1):\n    if num_list[j] < min:\n        min = num_list[j]\n\nif min != 1:\n    ans = -1\nelse:\n    target = 1\n    cnt = 0\n    for i in range(len(num_list)):\n        if num_list[i] == target:\n            target += 1\n        else:\n            cnt += 1\n    ans = cnt\n\nprint(ans)", "N=int(input());A=list(map(int,input().split()));j=1;fg=0\nif N==1:\n    if A[0]==1:print(0)\n    else: print(-1)\nelse:\n    for i in A:\n        if i==j:j+=1\n        else:fg+=1\n    if j>1:print(fg)\n    else: print(-1)", "n = int(input())\na = [int(i) for i in input().split()]\nk = 0\nflg = False\nfor ai in a:\n  if ai == k + 1:\n    k += 1\n  else:\n    flg = True\nif k == 0 and flg:\n  print(-1)\nelse:\n  print(n - k)", "import math\nimport statistics\na=int(input())\n#b=int(input())\n# c=[]\n# for i in b:\n#     c.append(i)\n# e1,e2 = map(int,input().split())\nf = list(map(int,input().split()))\n#j = [input() for _ in range(3)]\n# h = []\n# for i in range(e1):\n#     h.append(list(map(int,input().split())))\nans=0\ncount=0\nfor i in range(a):\n    if ans+1 == f[i]:\n        ans=f[i]\n        count+=1\nif count>0:   \n    print(len(f)-count)\nelse:\n    print(-1)", "N = int(input())\nA = list(map(int, input().split()))\nn = 1\nans = -1\nfor i in range(N):\n  if A[i] == n:\n    n += 1\nif n == 1:\n  print(-1)\nelse:\n  print(N + 1 - n)", "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\ncnt = 0\nfor i in a:\n    if i == cnt+1:\n        cnt += 1\n    else:\n        ans += 1\nprint(ans if cnt else -1)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main2():\n    numbers=[]\n    N = int(input())\n    numbers=list(map(int,input().split()))\n    n=1\n\n#\u6761\u4ef6\u304c1<=n<=200k\u306e\u305f\u30811\u304b\u3089\u9806\u306b\u6570\u3048\u3066list\u5185\u3092\u8abf\u67fb\u3057\u305f\u5834\u5408\u306e\u6700\u5927\u5024+1\u3092n\u306b\u8a18\u5165\n    for x in numbers:\n        if x ==n:\n            n+=1\n\n#\u6761\u4ef6\u304b\u3089+1\u307e\u3067\u6570\u3048\u3066\u3057\u307e\u3046\u305f\u3081\u3001n\u3092+1\u3057\u3066\u8abf\u6574\n    answer = N - n +1\n\n    if answer==N:\n        answer=-1\n    print(answer)\n\ndef main():\n    numbers=[]\n    n = int(input())\n    numbers=list(map(int,input().split()))\n    buffer=[0]\n    for i in range(1,n+1):\n        search_range=numbers[i-1:]\n        out_range=len(numbers[:i-1])\n        if i not in search_range and len(buffer)==1:\n            print(-1)\n            return\n        elif i not in search_range or i==n:\n            break\n        else:\n            index=search_range.index(i)\n            buffer.append(index-sum(buffer))\n    print(sum(buffer))\n\ndef __starting_point():\n    main2()\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\ncount = 0\ntmp = 0\n\nfor i in range(n):\n    if a[i] == tmp + 1:\n        tmp = a[i]\n    else:\n        count += 1\nprint(count if count != n else -1)", "n = int(input())\nA = list(map(int, input().split()))\nmx = 0\ntot = 0\n\nfor i in range(n):\n    if(A[i] != mx + 1) :\n        continue\n    mx = A[i]\n    tot += 1\n\nif(tot == 0) :\n    ans = -1\nelse :\n    ans = n - tot\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\n\ncnt=0\nm=1\n\nfor i in range(n):\n    if a[i]==m:\n        cnt+=1\n        m+=1\n        \nif cnt==0:\n    print((-1))\nelse :\n    print((n-cnt))\n", "import sys\n\nN = int(input())\nA = list(map(int,input().split()))\n\n\nif A.count(1) == 0:\n  print((-1))\n  return\nelse:\n  \n  cnt = 0\n  for a in range(len(A)):\n    if A[a] == cnt+1:\n      cnt += 1\n  print((len(A)-cnt))\n\n", "N = int(input())\nA = list(map(int, input().split()))\nn = 1\nfor i in range(N):\n  if A[i] == n:\n    n += 1\nif n != 1:\n  print(N + 1 - n)\nelse:\n  print(-1)", "n = int(input())\nA = list(map(int, input().split()))\n\nm = 1\nans = 0\nfor a in A:\n    if a == m:\n        m += 1\n    else:\n        ans += 1\nif ans < n:\n    print(ans)\nelse:\n    print(-1)", "N = int(input())\nA = list(map(int, input().split()))\n\ncount = 1\nans = 0\nfor i in range(N):\n    a = A[i]\n    if count == a:\n        count += 1\n    else:\n        ans += 1\nif ans == N:\n    print(-1)\nelse:\n    print(ans)", "a = int(input())\nb = list(map(int,input().split()))\nc = 1\nans = 0\nfor i in b:\n    if i == c:\n        c += 1\n    else:\n        ans += 1\nif ans == a:\n    ans = -1\nprint(ans)", "import math\nn=int(input())\nA=list(map(int,input().split()))\nnum=1\nbrk=0\nfor i in range(n):\n  if A[i]==num:\n    num+=1\n  else:\n    brk+=1\n\nif num==1 and brk!=0:\n  print(-1)\nelse:\n  print(brk)", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\n\n\ndef solve(N: int, A: \"List[int]\"):\n    cnt = 0\n    for a in A:\n        if a == cnt + 1:\n            cnt += 1\n\n    if cnt == 0:\n        return -1\n    return N - cnt\n\n\ndef main():\n    tokens = chain(*(line.split() for line in sys.stdin))\n    N = int(next(tokens))  # type: int\n    A = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    answer = solve(N, A)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\na = list(map(int,input().split()))\nk = 1\nans = 0\nfor i in a:\n    if i == k:\n        k += 1\n    else:\n        ans +=1\nif ans == N:\n    ans = -1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nc = 1\nfor j in a:\n    if j==c:\n        c += 1\n \nif c==1:\n    print(-1)\nelse:\n    print(n-c+1)", "n=int(input())\na=list(map(int,input().split()))\ni,ans,j=1,0,0\n\nwhile j<n:\n    if a[j]==i:\n        i+=1\n    else:\n        ans+=1\n    j+=1\nif ans==n:\n    print(-1)\nelse:\n    print(ans)", "# AtCoder Beginner Contest 148\n# D - Brick Break\n\nN=int(input())\na=list(map(int,input().split()))\n\ntargetnum=1\nbreaknum=0\n\nfor i in range(N):\n    if a[i]==targetnum:\n        targetnum+=1\n    else:breaknum+=1\nif breaknum==N:\n    print((-1))\nelse:\n    print(breaknum)\n", "N = int(input())\na = list(map(int, input().split()))\nn = 1\nC = 0\nfor ai in a:\n    if ai != n:\n        C += 1\n    else:\n        n += 1\nif n == 1:\n    print('-1')\nelse:\n    print(C)", "n=int(input())\na = list(map(int,input().split()))\n\nnum=1\nfor i in range(n):\n\tif a[i]==num:\n\t\tnum+=1\nprint(n-(num-1) if num!=1 else -1)", "N = int(input())\n\na = map(int, input().split())\n\ncount = 0\nfor i in a:\n    if i == count + 1:\n        count += 1\nif count != 0:\n    print(N - count)\nelse:\n    print('-1')", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Sep  9 01:08:27 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\ncount = 1\nfor a in A:\n    if a == count:\n        count += 1\nif count == 1:\n    ans = -1\nelse:\n    ans = N - count + 1\nprint(ans)", "n = int(input())\na = [int(x) for x in input().split()]\nc = 1\nb = 0\nfor i in range(n):\n  if a[i] == c:\n    c += 1\n  else:\n    b += 1\nif c == 1:\n  res = -1\nelse:\n  res = b\nprint(res)", "n = int(input())\nl = list(map(int,input().split()))\nans = 0\nx = 1\nfor i in l:\n    if i == x:\n        x += 1\n    else:\n        ans += 1\n\nif ans == len(l):\n    print((-1))\nelse:\n    print (ans)\n", "n = int(input())\na_l = list(map(int, input().split()))\n\nans = 0\ni = 0\nj = 0\nwhile i < n:\n    if a_l[i] == j+1:\n        j += 1\n        i += 1\n        continue\n    ans += 1\n    i += 1\nif ans > n-1:\n    print('-1')\nelse:\n    print(ans)", "N = int(input())\nA = list(map(int, input().split()))\nn = 1\nfor i in range(N):\n  if A[i] == n:\n    n += 1\nif n == 1:\n  print(-1)\nelse:\n  print(N + 1 - n)", "n = int(input())\narr = list(map(int, input().split()))\n\ni = 1\ncnt = 0\n\nfor char in arr:\n    if char == i:\n        i += 1\n    else:\n        cnt += 1\n\nif i == 1:\n    print((-1))\nelse:\n    print(cnt)\n", "n=int(input())\na=list(map(int,input().split()))\ncnt=0\nnum=1\nfor i in range(len(a)):\n    if a[i]!=num:\n        cnt+=1\n    else:\n        num+=1\nif num==1:\n    print(-1)\nelse:\n    print(cnt)", "N = int(input())\nli = list(map(int, input().split()))\nli_com = [i+1 for i in range(N)]\nan = 0\ncom = 0\nfor i in range(N):\n    if li_com[com] == li[i]:\n        com += 1\n    else:\n        an += 1\n\nif com == 0:\n    print(-1)\nelse:\n    print(an)", "N = int(input())\na = [int(i) for i in input().split()]\nans = 0\nl = 1\nfor i in range(N):\n    if l == a[i]:\n        l += 1\n    else:\n        ans += 1\nif ans == N:\n    print(-1)\nelse:\n    print(ans)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve():\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    t = 1\n    for i in range(N):\n        if A[i] == t:\n            t += 1\n\n    if t == 1:\n        print((-1))\n    else:\n        print((N - (t - 1)))\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nList = list(map(int, input().split()))\nj = 1\nres = 0\nfor i in range(N):\n  if List[i] == j:\n    j+=1\n  else:\n    res += 1\nif j == 1:\n  res = -1\nprint(res)", "N = int(input())\na = list(map(int,input().split()))\n\nif not(1 in a):\n    print(-1)\n    return\n\nl = []\nmin_num = 0\nfor i in a:\n    if i == min_num + 1:\n        l.append(i)\n        min_num += 1\n\nprint(N-len(l))", "N = int(input())\na_list = list(map(int, input().split()))\n\nnum = 1\nans = 0\nfor i in range(N):\n    if a_list[i] != num:\n        ans += 1\n    else:\n        num += 1\nif num == 1:\n    print(-1)\nelse:\n    print(ans)", "N = int(input())\na = map(int, input().split())\ncounter = 0\nfor ai in a:\n    if counter + 1 == ai:\n        counter += 1\nprint(N - counter if counter != 0 else '-1')", "n = int(input())\na = list(map(int, input().split()))\ncount = 1\n\nfor i in a:\n    if i == count:\n        count += 1\nif count == 1:\n    print(-1)\nelse:\n    print(n - count + 1)", "n = int(input())\nA = list(map(int,input().split()))\ntmp, cnt = 1, 0\n\nfor a in A:\n  if a != tmp: cnt += 1\n  else: tmp +=1\n\nprint(-1 if A.count(1) == 0 else cnt)", "n=int(input())\nA=list(map(int,input().split()))\n\nans=0\nfind = 1\nfor i in range(n):\n    \n    if A[i]==find:\n        find+=1\n    else:\n        ans+=1\n    \n\nif find==1:\n    ans=-1\nprint(ans)", "N = int(input())\nlsa = list(map(int,input().split()))\na = 1\nfor i in range(N):\n    if lsa[i] == a:\n        a += 1\nif a == 1:\n    ans = -1\nelse:\n    ans = N-(a-1)\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\nans = 0\nn = 1\n\nfor a in A:\n  if a==n:\n    n+=1\n  else:\n    ans+=1\n\nif ans==N:\n  print(-1)\nelse:\n  print(ans)", "import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5//1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp //= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n \n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n \n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n \n        if x == y:\n            return\n \n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n \n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n \n    def size(self, x):\n        return -self.parents[self.find(x)]\n \n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n \n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n \n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n \n    def group_count(self):\n        return len(self.roots())\n \n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n \n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\nmod = 10**9 + 7\nsigma = lambda x : x*(x+1)//2\n\n#--maincode----------------\n\nn = ini()\na = inl()\np = 1\nans = 0\nfor i in range(n):\n    if a[i] == p:\n        p += 1\n    else:\n        ans += 1\nans = -1 if p == 1 else ans\nprint(ans)", "def main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    s = 1\n    ans =0\n    for i in range(n):\n        if a[i]!=s:\n            ans += 1\n        else:\n            s += 1\n    if ans==n:\n        print((-1))\n    else:\n        print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\na=list(int(x) for x in input().split())\n\ncount=0\nz=True\nj=0\n\nif  1 not in a:\n    print(-1)\nelse:\n    for k in range(j,n):\n        if a[k]==count+1:\n            j=k\n            count=count+1\n\n    print(n-count)", "n=int(input())\na=list(map(int,input().split()))\ncount=1\nchk=False\nfor i in range(1,n+1):\n  if a[i-1]==count:\n    chk=True\n    count+=1\nprint(n-count+1 if chk else -1)", "N=int(input())\n*A,=map(int,input().split())\n\nb=0\ni=1\nfor a in A:\n   if a==i:\n    i+=1\n   else:\n    b+=1\nprint(b if b!=N else -1)", "N = int(input())\nA = list(map(int, input().split()))\nmin = 1\ncheck = True\ncount = 0\nfor i in range(N):\n  if A[i] != min:\n    A[i] = 0\n    count += 1\n  elif A[i] == min:\n    min += 1\nif A == [0] * N:\n  print(-1)\nelse:\n  print(count)", "n,a,b=int(input()),[*map(int,input().split())],1\nfor i in range(n):\n  if b==a[i]: b+=1\nprint([n-b+1,-1][b==1])", "n = int(input())\nbrick = list(map(int,input().split()))\n\nif 1 not in brick:\n  print((-1))\nelse:\n  a = 1\n  for x in brick:\n    if x == a:\n      a += 1\n  print((n-a+1))\n      \n    \n", "N = int(input())\nA = list(map(int, input().split()))\n\nnow = 0\nans = 0\nfor i in range(N):\n  if A[i] == now+1:\n    now += 1\n  else:\n    ans += 1\nif ans==N:\n  print(-1)\nelse:\n  print(ans)", "n = int(input())\na = list(map(int,input().split()))\ncnt = 0\ni,j = 0,0\nwhile i<n and j<n:\n    if a[i]==j+1:\n        cnt+=1\n        j+=1\n    i+=1\nprint(-1 if 1 not in a else n - cnt)", "n = int(input())\na = list(map(int, input().split()))\nc = 1\nfor j in a:\n    if j==c:\n        c += 1\n\nif c==1:\n    print((-1))\nelse:\n    print((n-c+1))\n", "n=int(input())\na=list(map(int,input().split()))\nnow=1\nfor i in a:\n    if i==now:\n        now+=1\nif now==1:\n    print(-1)\nelse:\n    print(n-now+1)", "n=int(input())\na=list(map(int,input().split()))\nb=len(a)\nresult=1\ni=0\nj=0\nwhile True:\n    if a[i]==result:\n        result+=1\n    i+=1\n    if i>=b:\n        break\nif result==1:\n    print(-1)\nelse:\n    print(b-result+1)", "n = int(input())\nnum = list(map(int,input().split()))\ncnt = 1\nans = 0\nif 1 not in num:\n    print(-1)\n    return\nfor i in range(n):\n    if num[i] == cnt:\n        cnt += 1\n    else:\n        ans += 1\nprint(ans)", "n=int(input())\nA=list(map(int,input().split()))\n\nif not 1 in A:\n  print(-1)\nelse:\n  c=1\n  for i in range(n):\n    if A[i]==c:\n      c+=1\n  print(n-c+1)", "N = int(input())\nblock = list(map(int,input().split()))\na = 1\nfor i in block:\n  if i == a:\n    a += 1\nif a==1:\n  print(-1)\nelse:\n  print(len(block)-a+1)", "import sys\n\n\ndef resolve(in_):\n    N = int(next(in_))\n    A = tuple(map(int, next(in_).split()))\n    \n    ans = 0\n    x = 1\n    for a in A:\n        if x == a:\n            x += 1\n        else:\n            ans += 1\n\n    if N == ans:\n        ans = -1\n    return ans\n\n\ndef main():\n    answer = resolve(sys.stdin)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nal = list(map(int, input().split()))\n\nif n == 1 and al[0] == 1:\n    print(0)\nelse:\n    i, j, num, ans = 0, 0, 1, 0\n    while i < n:\n        if al[i] != num:\n            i += 1\n        else:\n            ans += i-j\n            j = i+1\n            num += 1\n            i += 1\n\n    # print(i, j, ans)\n\n    if num != 1 and j != n:\n        ans += i-j\n\n    if num == 1:\n        print(-1)\n    else:\n        print(ans)", "def main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    breakcount = 0\n    cnt = 1\n    for i in range(N):\n        if A[i] != cnt:\n            breakcount += 1\n        else:\n            cnt += 1\n    if cnt == 1:\n        print((-1))\n        return\n    print(breakcount)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nA=list(map(int,input().split()))\n\nif 1 not in A:\n    ans=-1\nelse:\n    now=1\n    ans=0\n    for i in range(N):\n        if A[i]==now:\n            now+=1\n        else:\n            ans+=1\n\nprint(ans)", "n = int(input())\na = list(map(int,input().split()))\nans = 0\nm = 1\nfor i in range(n):\n    if a[i] == m:\n        m += 1\n    else:\n        ans += 1\nif ans == n:\n    ans = -1\n    \nprint(ans)\n\n", "N = int(input())\na = [int(n) for n in input().split()]\n\ni = 1\nfor j in range(N):\n    if a[j] == i:\n        i += 1\n\nprint(-1 if i == 1 else N - i + 1)", "N = int(input())\nA = list(map(int, input().split()))\n\ntarget = 1\nans = 0\nfor a in A:\n    if a == target:\n        target += 1\n    else:\n        ans += 1\n\nprint(ans if target != 1 else -1)", "N = int(input())\na = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(len(a)):\n    if i+1-cnt != a[i]:\n        cnt += 1\n\nif cnt == N:\n    print(-1)\nelse:\n    print(cnt)", "N = int(input())\na = list(map(int,input().split()))\ni = 1\ncount = 0\nfor j in a:\n  if i == j: i += 1\n  else: count += 1\nif N == count: print(-1)\nelse: print(count)", "N = int(input())\nA = list(map(int, input().split()))\n\ncnt = 0\nidx = 1\nfor i, a in enumerate(A):\n    if idx == a:\n        idx += 1\n    else:\n        cnt += 1\n\nif cnt == N:\n    print(-1)\nelse:\n    print(cnt)", "n,a,b=int(input()),[*map(int,input().split())],1\nfor i in range(n):\n  if b==a[i]:b+=1\nprint([n-b+1,-1][b==1])", "n=int(input())\nai=list(map(int, input().split()))\n\ntmp=1\nans=0\nfor i in range(n):\n    if ai[i] == tmp:\n        tmp+=1\n    else:\n        ans+=1\n\nif tmp==1:\n    ans=-1\n\nprint(ans)", "N = int(input())\na = list(map(int,input().split()))\n\nif not(1 in a):\n    print(-1)\n    return\n\ncnt = 0\nfor i in a:\n    if i == cnt + 1:\n        cnt += 1\n\nprint(N-cnt)", "\nN = int(input())\nl = list(map(int,input().split()))\n\nflag_ary = [0] * (N+1)\n\ncounter = 0\ncur = 1\nfor i in l:\n    if i == cur:\n        counter += 1\n        cur += 1\nif counter == 0:\n    print((-1))\nelse:\n    print((N - counter))\n", "n = int(input())\na = list(map(int,input().split()))\nj = 1\nans = 0\nfor i in a:\n    if i == j:\n        j += 1\n    else:\n        ans += 1\nif j == 1:\n    print(-1)\nelse:\n    print(ans)", "n = int(input())\na = [int(s) for s in input().split()]\n\nnum = 0\ncurrent = 1\nfor i in range(n):\n    if a[i] == current:\n        current += 1\n    else:\n        num += 1\nprint(num) if num != n else print(-1)", "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in a:\n    if i==c+1:\n        c+=1\nprint(-1 if c==0 else n-c)", "n = int(input())\na = list(map(int,input().split()))\nnow = 1\nans = 0\nfor i in range(n):\n    if a[i]!=now:\n        ans += 1\n    else:\n        now += 1\nif now==1:\n    print(-1)\nelse:\n    print(ans)", "N = int(input())\ncon = 1\nset = 0\ns = list(map(int, input().split()))\nfor i in s:\n  if con == i:\n    set += 1\n    con += 1\nif set == 0:\n  print((-1))\nelse:\n  ans = len(s) - set\n  print(ans)\n    \n    \n\n", "n = int(input())\nA = list(map(int,input().split()))\n\nif 1 not in A:\n    print(-1)\n    return\n\nchk = 1\ncnt = 0\nfor i in range(n):\n    if A[i] == chk:\n        cnt += 1\n        chk += 1\n\nprint(len(A) - cnt)", "N = int(input())\nA = list(map(int,input().split()))\ncount = 0\nj = 1\n\nfor i in range(N):\n  if A[i] == j:\n    count += 1\n    j += 1\n\nif count != 0:\n  print(N-count)\nelse:\n  print(-1)", "# coding: utf-8\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    ans = -1\n    tmp = 1\n    flg = False\n\n    for a in A:\n        if a == tmp:\n            tmp += 1\n            flg = True\n\n    if flg:\n        ans = N - tmp + 1\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nA = list(map(int, input().split()))\nprev = -1\ncnt = [0]\ni = 0\nfor a in A:\n    if prev==-1 and a==1:\n        prev = a\n    elif a == prev+1:\n        prev = a\n    else:\n        i += 1\nif prev == -1:\n    print(-1)\nelse:\n    print(i)", "n=int(input())\na=[-1]+list(map(int,input().split()))\nnow=0\nfor i in range(1,n+1):\n    if now+1==a[i]:\n        now+=1\nif now==0:\n    print(-1)\nelse:\n    print(n-now)", "n=int(input())\nl=list(map(int,input().split()))\nif 1 not in l:\n  print(-1)\nelse:\n  i=0\n  j=1\n  cnt=0\n  while i<n:\n    if l[i]==j:\n      j+=1\n    else:\n      cnt+=1\n    i+=1\n  print(cnt)"]