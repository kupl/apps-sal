["#python33\ndef program():\n    num=-1\n    R=[]\n    L=[]\n    n=int (eval(input ()))\n    for i in range(n):\n        l,r=((list(map(int,input().split()))))  \n        R.append(r)\n        L.append(l)  \n    MAXR=max(R)\n    MINL=min(L)\n\n    for i in range(n):\n        if R[i] == MAXR and L[i] == MINL:\n            print(i+1)\n            return \n\n    print(num)    \nprogram()       \n", "import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\nn = int(f.readline().strip())\nl, r = [], []\nfor line in f:\n    l.append(int(line.strip().split()[0]))\n    r.append(int(line.strip().split()[1]))\nls = list(set(l))\nrs = list(set(r))\nls.sort(); rs.sort(reverse=True)\nind = -1\nfor i in range(n):\n    if l[i] <= ls[0] and r[i] >= rs[0]:\n        ind = i+1\nprint(ind)", "n=int(input())\nans=0\na,b=0,0\nmina,maxb=list(map(int,input().split()))\nfor i in range(1,n):\n    a,b=list(map(int,input().split()))\n    if a<mina:\n        mina=a\n        ans=-1\n    if b>maxb:\n        maxb=b\n        ans=-1\n    if a==mina and b==maxb:\n        ans=i\nif ans==-1:\n    print(ans)\nelse:\n    print(ans+1)\n\n    \n", "A, B, ans = 1000000000, 1, -1\nfor i in range(1, int(input()) + 1):\n    a, b = map(int, input().split())\n    if a < A:\n        A = a\n        ans = -1\n    if b > B:\n        B = b\n        ans = -1\n    if a == A and b == B: ans = i\nprint(ans)", "A, B, ans = 1000000000, 1, -1\nfor i in range(1, int(input()) + 1):\n    a, b = map(int, input().split())\n    if a > A:\n        if b > B:\n            B = b\n            ans = -1\n    else:\n        if b >= B:\n            B = b\n            ans = i\n        elif a != A: ans = -1\n        A = a\nprint(ans)", "A, B, ans = 1000000000, 1, -1\nfor i in range(1, int(input()) + 1):\n    a, b = map(int, input().split())\n    if a > A:\n        if b > B: B, ans = b, -1\n    else:\n        if b >= B: A, B, ans = a, b, i\n        elif a != A: A, ans = a, -1\nprint(ans)", "def Q(x):\n    return x[1]-x[0]+1\nn=int(input())\nL=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    L.append((x,y,i+1))\n\nL.sort(key=Q,reverse=True)\nans=L[0][2]\nfor i in range(1,n):\n    if(L[i][0]>=L[0][0] and L[i][1]<=L[0][1]):\n        continue\n    ans=-1\nprint(ans)\n", "vl, vr, vi, maxr = 1000000001, 0, 0, 0\nfor i in range(1, int(input()) + 1):\n    l, r = (int(x) for x in input().split())\n    if l < vl or (l == vl and r > vr):\n        vl, vr, vi = l, r, i\n    maxr = max(maxr, r)\nprint(vi if vr >= maxr else -1)", "import sys\nimport math\n\nn = int(sys.stdin.readline())\nd = []\n\nvmin = 1000000001\nvmax = 0\n\nfor i in range(n):\n    l, r = [int(x) for x in (sys.stdin.readline()).split()]\n    d.append((i + 1, (l, r)))\n    if(l < vmin):\n        vmin = l\n    if(r > vmax):\n        vmax = r\n        \nd.sort(key = lambda x: x[1][0])   \n\nk = -1\nfor i in d:\n    if(i[1][0] <= vmin):\n        if(i[1][1] >= vmax):\n            k = i[0]\n    else:\n        break\n\nprint(k)    \n", "import sys\nimport math\n\nn = int(sys.stdin.readline())\nd = []\n\nvmin = 1000000001\nvmax = 0\n\nfor i in range(n):\n    l, r = [int(x) for x in (sys.stdin.readline()).split()]\n    d.append((i + 1, (l, r)))\n    if(l < vmin):\n        vmin = l\n    if(r > vmax):\n        vmax = r\n        \n#d.sort(key = lambda x: x[1][0])   \n\nk = -1\nfor i in d:\n    if(i[1][0] <= vmin and i[1][1] >= vmax):\n        k = i[0]\n\nprint(k)    \n", "n = int(input())\nl = []\nbest = [0, -1]\nk = -1\nfor i in range(n):\n\tl.append([int(x) for x in input().split()])\n\tif l[-1][1] - l[-1][0] > best[1] - best[0]:\n\t\tbest = l[-1]\n\t\tk = i\nfor a, b in l:\n\tif a < best[0] or best[1] < b:\n\t\tprint(-1)\n\t\treturn\nprint(k + 1)\n", "def main():\n    n = int(input())\n    mi, ma = 10000000001, 0\n    l = []\n    for _ in range(n):\n        a, b = map(int, input().split())\n        if mi > a:\n            mi = a\n        if ma < b:\n            ma = b\n        l.append((a, b))\n    l.append((mi, ma))\n    idx = l.index((mi, ma))\n    print(-1 if idx == n else idx + 1)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n = int(input())\n    l, r = [], []\n    for _ in range(n):\n        a, b = map(int, input().split())\n        l.append(a)\n        r.append(b)\n    l.append(min(l))\n    r.append(max(r))\n    l = list(zip(l, r))\n    idx = l.index(l[-1])\n    print(-1 if idx == n else idx + 1)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n = int(input())\n    l, r = [], []\n    for _ in range(n):\n        a, b = map(int, input().split())\n        l.append(a)\n        r.append(b)\n    m = min(l), max(r)\n    for i, a in enumerate(zip(l, r)):\n        if a == m:\n            print(i + 1)\n            return\n    print(-1)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "maxx = -1\nminn = 10**10\nbad = []\na = int(input())\nfor i in range(a):\n    x, y = list(map(int, input().split(' ')))\n    bad.append([x, y])\n    maxx = max(maxx, y)\n    minn = min(minn, x)\n\nfor i in range(a):\n    if bad[i][0] <= minn <= maxx <= bad[i][1]:\n        print(i+1)\n        quit()\nprint(-1)\n", "num = int(input())\nl = []\nk = []\nmi = 100000000000\nma = 0\nfor i in range(num):\n\ta,b = input().split()\n\ta = int(a)\n\tb = int(b)\n\tif a < mi:\n\t\tmi = a\n\tif b > ma:\n\t\tma = b\n\tl.append((a,b))\nif (mi,ma) in l:\n\tprint(l.index((mi,ma))+1)\nelse:\n\tprint('-1')", "# coding: utf-8\nn = int(input())\nsegments = [[int(i) for i in input().split()] for j in range(n)]\nleft = segments[0][0]\nright = segments[0][1]\nfor seg in segments:\n    if seg[0]<left:\n        left = seg[0]\n    if seg[1]>right:\n        right = seg[1]\nfor i in range(n):\n    if segments[i][0]<=left and segments[i][1]>=right:\n        print(i+1)\n        break\nelse:\n    print(-1)\n", "n = int(input())\nsegments = [list(map(int, (input() + \" \" + str(i + 1)).split())) for i in range(n)]\nssegments = sorted(segments, key = lambda seg: seg[1], reverse = True)\nssegments = sorted(ssegments, key = lambda seg: seg[0])\n\ngood = True\nfor s in ssegments:\n    if ssegments[0][0] > s[0] or ssegments[0][1] < s[1]:\n        good = False\n        break\n\nif good:\n    print(ssegments[0][2])\nelse:\n    print(-1)\n\n", "from collections import defaultdict, deque, Counter, OrderedDict\n\ndef main():\n    n = int(input())\n    mi,ma = 10**10,-1\n    l = []\n    for i in range(n):\n        a,b = map(int,input().split())\n        mi = min(mi,a)\n        ma = max(ma,b)\n        l.append((a,b))\n\n    check,ind = False,0\n    for i,v in enumerate(l):\n        if check: break\n        check |= (v[0] <= mi and v[1] >= ma)\n        ind = i+1\n\n    print(ind if check else -1)\n\n\ndef __starting_point():\n    \"\"\"sys.setrecursionlimit(400000)\n    threading.stack_size(40960000)\n    thread = threading.Thread(target=main)\n    thread.start()\"\"\"\n    main()\n__starting_point()", "n = int(input())\nret = -1\nleft = []\nright = []\n\nfor i in range(n):\n\ta, b = map(int, input().split(\" \"))\n\tleft.append(a)\n\tright.append(b)\nml = left[0]\nmr = right[0]\nfor i in range(n):\n\tif(left[i] < ml):\n\t\tml = left[i]\n\tif(right[i] > mr):\n\t\tmr = right[i]\nfor i in range(n):\n\tif(left[i] <= ml and mr <= right[i]):\n\t\tret = i+1\nprint(ret)", "R=input\nI=lambda:map(int,R().split())\nn=int(R())\na=[]\nb=[]\nfor i in range(n):x,y=I();a.append(x);b.append(y)\nx=min(a)\ny=max(b)\nfor i in range(n):\n\tif a[i]==x and b[i]==y:print(i+1);return\nprint(-1)", "n=int(input())\nl=[]\nmi,ma=11**11,0\nfor _ in range(n):\n    x,y=map(int,input().split())\n    if x<mi: mi=x\n    if y>ma: ma=y\n    l+=[(x,y)]\nif (mi,ma) in l: print(l.index((mi,ma))+1)\nelse: print(-1)", "n=int(input())\nv1,v2=[],[]\nfor i in range(n):\n\ta,b=map(int,input().split(' '))\n\tv1.append(a)\n\tv2.append(b)\na,b=min(v1),max(v2)\nt=0\nfor i in range(n):\n\tif(v1[i]<=a and v2[i]>=b):\n\t\tprint(i+1)\n\t\tt=1\n\t\tbreak\nif(t==0):\n\tprint(-1)", "n = int(input())\n\nminn, maxn = (int(i) for i in input().split())\nnumbers = {(minn, maxn):0}\n\nfor j in range(1, n):\n    a, b = (int(i) for i in input().split())\n    numbers[(a,b)] = j \n\n    if b > maxn: maxn = b\n    if a < minn: minn = a\n\nif (minn, maxn) in numbers:\n    print(numbers[(minn, maxn)] + 1)\nelse:\n    print(-1)\n", "n = int(input())\n\nL = []\nR = []\npair = []\nfor i in range(n):\n\tl, r = input().split()\n\tL.append(int(l))\n\tR.append(int(r))\n\tpair.append(l + '-'+ r)\n\nminL = min(L)\nmaxR = max(R)\n\nif (str(minL) + '-' + str(maxR)) in pair:\n\tprint(pair.index(str(minL) + '-' + str(maxR)) + 1)\nelse:\n\tprint(-1)"]