["import sys\nimport math\n\n\ndef main():\n    n,t,k = map(int,sys.stdin.readline().split())\n    a = list(map(int,sys.stdin.readline().split()))\n\n    g = [[] for i in range(t+1)]\n    g[0].append([1,-1,0])\n    c = 1\n    for i in range(t):\n        for j in range(a[i]):\n            c+=1\n            g[i+1].append([c,0,0])\n            g[i][0][2]+=1\n\n    l=0\n    for i in range(1,t+1):\n        for j in range(len(g[i])):\n            if g[i][j][2]==0:\n                l+=1\n    if l< k:\n        print(-1)\n        return\n\n    i=0\n    j=0\n    m = 1\n    while l>k and m<t:\n        while i< len(g[m]) and g[m][i][2]>0:\n            i+=1\n        if i>=len(g[m]):\n            i=0\n            j=0\n            m+=1\n            continue\n        while j<len(g[m+1]) and g[m][g[m+1][j][1]][2]<2:\n            j+=1\n        if j>=len(g[m+1]):\n            i=0\n            j=0\n            m+=1\n            continue\n        g[m][i][2]+=1\n        g[m][g[m+1][j][1]][2]-=1\n        g[m+1][j][1] = i\n        l-=1\n        i+=1\n        j+=1\n\n    if l!=k:        \n        print(-1)\n        return\n    print(n)\n    for i in range(1,t+1):\n        for j in range(len(g[i])):\n            print(g[i][j][0], g[i-1][g[i][j][1]][0])\n\n\nmain()", "\ndef __starting_point():\n\tn, t, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tb = [0 for _ in range(t)]\n\tb[t-1] = a[t-1]\n\tmaxk = a[t-1]\n\tfor i in range(t-2, -1, -1):\n\t\tb[i] = b[i+1]\n\t\tif a[i+1] < a[i]:\n\t\t\tb[i] += a[i] - a[i+1]\n\t\tmaxk += a[i]-1\n\tif b[0] > k or maxk < k:\n\t\tprint(-1)\n\telse:\n\t\tprint(n)\n\t\tcurr = 2\n\t\tfor _ in range(a[0]):\n\t\t\tprint(1, curr)\n\t\t\tcurr += 1\n\t\tfor lvl in range(t-1):\n\t\t\tchildless = min(a[lvl]-1, k-b[lvl+1])\n\t\t\tparent = curr-1\n\t\t\tfor _ in range(a[lvl]-childless):\n\t\t\t\tprint(parent, curr)\n\t\t\t\tcurr += 1\n\t\t\t\tparent -= 1\n\t\t\tparent += 1\n\t\t\tfor _ in range(a[lvl+1]-(a[lvl]-childless)):\n\t\t\t\tprint(parent, curr)\n\t\t\t\tcurr += 1\n\t\t\tk -= childless\n\n\n\n'''\n\t\t\tparent = curr-1\n\t\t\tchildren = min(a[lvl+1], k-b[lvl]+1)\n\t\t\tprint(\"#DEBUG\", lvl, children)\n\t\t\tfor _ in range(children):\n\t\t\t\tprint(parent, curr)\n\t\t\t\tcurr += 1\n\t\t\tparent -= 1\n\t\t\tk -= a[lvl]+1\n\t\t\tfor _ in range(a[lvl]-children):\n\t\t\t\tprint(parent, curr)\n\t\t\t\tparent -= 1\n\t\t\t\tcurr += 1\n\t\t\t\tk += 1\n'''\n__starting_point()", "n, t, k = list(map(int, input().split()))\na   =   list(map(int, input().split()))\np   =   {}\ncnt =   0\n\ncur   = 1\nfloor = [[1]]\n\nfor ak in a:\n    arr  = [cur+i for i in range(1, ak+1)]\n    floor.append(arr)\n    cur += ak\n    \nfor i in range(1, t+1):\n    cnt += len(floor[i]) - 1\n    \n    if i == t:\n        cnt += 1\n        \n    for u in floor[i]:\n        p[u] = floor[i-1][0]\n        \nfor i in range(2, t+1):\n    if cnt <= k :\n        break\n        \n    j      =  1\n    min_   =  min(len(floor[i]), len(floor[i-1]))\n    \n    while j < min_ and cnt > k:\n        p[floor[i][j]] = floor[i-1][j]\n        cnt-=1\n        j+=1\n    \nif cnt == k:\n    print(n)\n    print('\\n'.join([str(u) + ' ' + str(v) for u, v in list(p.items())]))\nelse:\n    print(-1)\n# 7 3 3\n# 2 3 1\n\n#14 5 6\n#4 4 2 2 1\n\n# 10 3 9 \n# 3 3 3\n"]