["arr = []\nfor i in input():\n    arr.append(i)\nn = len(arr)\nres = 0\nadd = [0] * (n + 10)\nadd[n] = 1 / n\nfor i in range(n - 1, 0, -1):\n    add[i] = add[i + 1] + 1 / i\nfor i in range(n):\n    if arr[i] in ['I', 'E', 'A', 'O', 'U', 'Y']:\n        x = min(i, n - i - 1)\n        y = max(i, n - i - 1)\n        res += x + 1\n        res += (x + 1) * (add[x + 2] - add[y + 1])\n        res += (n + 1) * add[y + 1] - (n - y)\nprint(res)", "\"\"\"\nCodeforces Contest 289 Div 2 Problem E\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    s = read(0)\n    m = [1 if i in \"AEIOUY\" else 0 for i in s]\n    n = len(m)\n    m1 = [0]\n    m2 = [0]\n    for i in range(n):\n        m1.append(m1[-1] + 1/(1+i))\n        m2.append(m2[-1] + 1/(n-i))\n    mlast = m1[-1]\n    for i in range(1,n+1):\n        m1[i] = m1[i-1]+m1[i]\n        m2[i] = m2[i-1]+m2[i]\n    sm = 0\n    for i in range(n):\n        sm += m[i] * ((i+1)*mlast - m1[i] - m2[i])\n    print(sm)\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "string = input().strip()\ns = [0]\nfor c in string:\n    s.append(s[-1] + (c in 'IEAOUY'))\nresult, cur = 0, 0\nfor l in range(1, len(string) + 1):\n    cur += s[-l] - s[l - 1]\n    result += cur / l\nprint(result)\n", "song = input()\nle = len(song)\nsu = 0\nfor x in range(1,le+1):\n    su += 1/x\nl = [0]*le\nl[0] = su\ndiff = su\nfor x in range(1,int((le+1)/2)):\n    diff -= (1/x + 1/(le+1-x))\n    l[x] = l[x-1] + diff\nfor x in range(int((le+1)/2),le):\n    l[x] = l[le-1-x]\n\n\nans = 0\nfor x in range(le):\n    let = song[x]\n    if let in ['A','E','I','O','U','Y']:\n        ans += l[x]\n\nprint(ans)\n", "def main():\n    s = input()\n    n = len(s)\n    b = [1.0 / (i + 1) for i in range(n)]\n    d = [(n - i) / (i + 1) for i in range(n)]\n    d = d[::-1]\n    for i in range(1, n):\n        b[i] += b[i - 1]\n        d[i] += d[i - 1]\n    res = 0.0\n    for i in range(n):\n        if not(s[i] == 'I' or s[i] == 'E' or s[i] == 'A' or s[i] == 'O' or s[i] == 'U' or s[i] == 'Y'):\n            continue\n        z = [i + 1, n - i]\n        z.sort()\n        res += z[0] * (b[z[1] - 2] - b[z[0] - 1] + 1) + d[z[0] - 1]\n    if len(s) == 1 and res > 0:\n        res -= 1\n    print(res)\nmain()\n", "i = input()\nl = len(i)\nrun = [0]*(l+1)\nfor a in range(1, l+1):\n    if i[a-1] in ['A', 'E', 'I', 'O', 'U', 'Y']:\n        run[a] = run[a-1] + 1\n    else:\n        run[a] = run[a-1]\ntot = 0\n\nfore = 0\nfor i in range(1, l+1):\n    fore -= 1/i\n\ney = [fore] + [0] * (l)\nfor i in range(1, l+1):\n    ey[i] = ey[i-1] + 1 / (l+1-i)+1/i\n\nfor i in range(1, l+1):\n    tot += ey[i] * run[i]\nprint(tot)\n##god = {}\n##god2 = {}\n##for i in range(0, 15):\n##    god[i] = []\n##    god2[i] = []\n##for i in range(1, l+1):\n##    for j in range(i, l+1):\n##        god[j].append(\"1/\"+str(j-i+1))\n##        god[i-1].append(\"-1/\"+str(j-i+1))\n##        god2[j].append(1/(j-i+1))\n##        god2[i-1].append(-1/(j-i+1))\n##        tot += (run[j]-run[i-1])/(j-i+1)\n##print(tot)\n", "from math import fsum\n\n\ndef main():\n    l, x = [0, 0], 0\n    for c in input():\n        if c in ('I', 'E', 'A', 'O', 'U', 'Y'):\n            x += 1\n        l.append(x)\n    n = l[-1]\n    res = [float(n)]\n    for m in range(2, len(l) - 1):\n        n += l[-m] - l[m]\n        res.append(n / m)\n    print('{:.7f}'.format(fsum(res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "ss = list(map(lambda c: c in \"IEAOUY\", input()))\n\nn = len(ss)\nw = [0] * n\n\nfor i in range(1, n+1):\n    w[0] += 1 / i\nw[n-1] = w[0]\n\nsigma = w[0]\n\nfor i in range(1, (n - 1) // 2 + 1):\n    sigma -= 1 / i + 1 / (n + 1 - i)\n    w[n-i-1] = w[i] = w[i-1] + sigma\n\nans = 0\nfor i in range(0, n):\n    ans += ss[i] * w[i]\n    \nprint(ans)", "s = input()\nlst=[0]\nfor i in range(1,len(s)+1):\n    lst.append(lst[-1]+1/i)\nx=lst[len(s)]\nres=0\nfor i,j in enumerate(s):\n    if j in 'AEIOUY':\n        res+=x\n    x+=lst[len(s)-i-1]-lst[i+1]\nprint(res)", "lst = [0] + [_ in \"IEAOUY\" for _ in input()]\nn = len(lst) - 1\nfor _ in range(1, n + 1):\n    lst[_] += lst[_ - 1]\nans = 0\ns = 0\nfor l in range(1, n // 2 + 1):\n    s += lst[n - l + 1] - lst[l - 1]\n    ans += s / l + s / (n - l + 1)\nif n % 2:\n    s += lst[n // 2 + 1] - lst[n // 2]\n    ans += s / (n // 2 + 1)\nprint('%0.9f' % ans)", "__author__ = 'PrimuS'\n\ns = input()\nn = len(s)\n\na = [0] * n\nps = [0] * n\n\nfor i in range(n):\n    if s[i] in \"IEAOUY\":\n        a[i] = 1\n\nps[0] = a[0]\nfor i in range(1, n):\n    ps[i] = ps[i-1] + a[i]\n\nimport math\nup = math.ceil((n - 1) / 2)\nss = [0] * up\nprev = 0\nfor i in range(up):\n    ss[i] = (a[i] + a[n - i-1]) * (i + 1)\n    if i == n - i - 1:\n        ss[i] /= 2\n    ss[i] += prev\n    prev = ss[i]\n\n\nres = 0\nx = 0\nres = ps[n-1]\nfor i in range(2, n):\n    k = n - i + 1\n    cur = 0\n    if k < i:\n        cur += (ps[n - k] - ps[k-2]) * k\n        cur += ss[k-2]\n    else:\n        cur += (ps[n - i] - ps[i-2]) * i\n        cur += ss[i-2]\n\n    res += cur / i\n\nif n > 1:\n    res += ps[n-1] / n\n\nprint(res)", "from itertools import accumulate\nvowels = set('AIUEOY')\ns = input()\nn = len(s)\nvs = list(accumulate(0 if i == 0 else 1 / i for i in range(n + 1)))\nr = 0\nv = 0\nfor i in range(n):\n    v += vs[n - i] - vs[i]\n    if s[i] in vowels:\n        r += v\nprint(r)", "from itertools import accumulate\nvowels = set('AIUEOY')\ns = input()\nn = len(s)\nvs = list(accumulate(0 if i == 0 else 1 / i for i in range(n + 1)))\nr = 0\nv = 0\nfor i in range(n):\n    v += vs[n - i] - vs[i]\n    if s[i] in vowels:\n        r += v\nprint(r)", "word = input()\nn = len(word)\ndef vowel(x):\n    if x in [\"A\",\"E\",\"I\",\"O\",\"U\",\"Y\"]:\n        return 1\n    else:\n        return 0\nsums = [0]*n\nsums[n-1] = 1/n\nfor k in range(n-2,-1,-1):\n    sums[k] = sums[k+1]+(1/(k+1))\ndef numb(k):\n    if k <= (n+1)//2:\n        return (k+1)*(sums[k+1]-sums[n-k-1]) + (n+1)*sums[n-k-1]\n    else:\n        return numb(n-k-1)\nres = 0\nif n == 1:\n    res = vowel(word[0])\nelif n == 2:\n    res = (vowel(word[0])+vowel(word[1]))*3/2\nelif n == 3:\n    res = (vowel(word[0])+vowel(word[2]))*(1+1/2+1/3) + 7/3*vowel(word[1])\nelse:\n    for k in range(n):\n        res += vowel(word[k])*numb(k)\nprint(\"%.7f\" % res)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "m, t = 0, [q in 'IEAOUY' for q in input()]\nd = s = sum(t)\nfor k in range(len(t), 0, -1):\n    m += d / k\n    s -= t[k - 1] + t[-k]\n    d += s\nprint(m)\n", "def sum_vowels(s, i, j):\n\tans = 0\n\n\tfor index in range(i, j + 1):\n\t\tif s[index] in \"AEIOUY\":\n\t\t\tans += 1\n\n\treturn ans\n\ndef __starting_point():\n\ts = input()\n\tn = len(s)\n\n\tans = 0\n\n\tnum = 0\n\tden_inv = 0\n\tprev_sum = sum_vowels(s, 0, n - 1)\n\tfor i in range(int(n / 2)):\n\t\tnum += prev_sum\n\t\tden_inv = 1 / (i + 1) + 1 / (n - i)\n\n\t\tans += num * den_inv\n\n\t\tif s[i] in \"AEIOUY\": prev_sum -= 1\n\t\tif s[n - 1 - i] in \"AEIOUY\": prev_sum -= 1\n\n\tif (n % 2 == 1):\n\t\ti = int(n / 2)\n\t\tnum += sum_vowels(s, i, i)\n\t\tden_inv = 1 / (i + 1)\n\n\t\tans += num * den_inv\n\n\tprint(\"{:.6f}\".format(ans))\n__starting_point()"]