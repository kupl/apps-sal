["n, k = [int(i) for i in input().split()]\n\nw = [int(i) for i in input().split()]\n\ntot = 0\nfor wi in w:\n    tot += (wi+k-1)//k\n\nans = (tot+1)//2\nprint(ans)\n", "n,k=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\nx=0\nfor i in range(n):\n    x+=(a[i]+k-1)//k\nprint((x+1)//2)", "N, K = list(map(int, input().split()))\nW = [int(x) for x in input().split()]\nans = 0\nfor w in W:\n    if w % K == 0:\n        ans += w // K\n    else:\n        ans += w // K + 1\nif ans % 2 == 0:\n    print(ans // 2)\nelse:\n    print(ans // 2 + 1)\n", "from sys import stdin\nimport math\n\nN, K = list(map(int, stdin.readline().split()))\npebbles = list(map(int, stdin.readline().split()))\n\nprint(math.ceil(sum(math.ceil(p / K) for p in pebbles) / 2))\n", "n, k = map(int, input().split())\narray = list(map(int, input().split()))\nans = 0\nfor i in range (n):\n    ans += (array[i] + k - 1) // k\nprint((ans + 1) // 2)", "n, k = map(int, input().split(' '))\na = list(map(int, input().split(' ')))\nres = 0\nfor i in a:\n    res += (i+k-1) // k\n\nprint((res+1)//2)", "from sys import stdin, stdout\n\n\nn, k = list(map(int, stdin.readline().rstrip().split()))\n\npebbleList = [int(a) for a in stdin.readline().rstrip().split()]\n\nnTrips=[]\nfor i in range(n):\n    nTrips.append(pebbleList[i]//k)\n    if pebbleList[i]%k!=0:\n        nTrips[i]+=1\n\ntotal = sum(nTrips)//2 + sum(nTrips)%2\nprint(total)\n", "\n\nn, k = list(map(int, input().split()))\n\nws = list(int(x) for x in input().split())\n\nresult = 0\nfree_pocket = False\n\n\nfor w in ws:\n    needed_pockets = (w + k - 1) // k\n    if needed_pockets % 2 == 0:\n        result += needed_pockets // 2\n    else:\n        if free_pocket:\n            result += (needed_pockets - 1) // 2\n        else:\n            result += (needed_pockets + 1) // 2\n        free_pocket = not free_pocket\n\nprint(result)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans += (a[i] - 1) // k + 1\n    \nprint((ans - 1) // 2 + 1)", "import sys\nn,k = list(map(int, input().split()))\nw = list(map(int, input().split()))\nrem = 0\nans = 0\nfor i in range(n):\n    \n    if w[i] % k != 0:\n        rem +=1\n    ans += w[i] // k;\nres = 0\nres += ans// 2\nif ans % 2 != 0:\n    rem += 1\nres += rem // 2\nif rem % 2 != 0:\n    res += 1\nprint(res)\n", "n,k=map(int,input().split())\nip=list(map(int,input().split()))\ncount=0\nfor i in ip:\n    if i%k==0:\n        count+=i//k\n    else:\n        count+=(i//k)+1\nif count %2==0:\n    print(count//2)\nelse:\n    print(count//2 + 1)", "import math\nn,k=list(map(int,input().split()))\nw=[int(i) for i in input().split()]\nres=[]\nfor i in range(n):\n    res.append(w[i]//k)\n    res.append(bool(w[i]%k))\nprint(math.ceil(sum(res)/2))\n", "n, k = map(int, input().split())\ndays = 0\nw = list(map(int, input().split()))\nfor wi in w:\n    days += (wi - 1) // k + 1\nprint((days - 1) // 2 + 1)", "n,k=map(int,input().split())\nl=sorted(map(int,input().split()))\nans=0\nfor i in range(n):\n    ans+=-(-l[i]//k)\nprint(-(-ans//2))", "n,k=map(int,input().split())\nl=[int(i) for i in input().split()]\nans=[]\nfor i in l:\n    ans.append((i+k-1)//k)\nprint((sum(ans)+1)//2)", "#!/usr/bin/env python3\n\n\ndef ri():\n    return list(map(int, input().split()))\n\n\nn, k = ri()\n\nw = list(ri())\n\nans = 0\nfor ww in w:\n    if ww % k == 0:\n        ans += ww//k\n    else:\n        ans += ww//k + 1\n\nif ans%2:\n    print(ans//2+1)\nelse:\n    print(ans//2)\n\nprint()\n\n", "n,k=map(int,input().split())\nd=0\nt = sum(((i-1)//k + 1) for i in map(int,input().split()))\nprint((t-1)//2 + 1)", "from math import *\nn,k = list(map(int,input().split()))\n*m,=list(map(int,input().split()))\nd=0.0\nfor i in m:\n    d+=ceil(i/k)\nprint(ceil(d/2))\n", "n, k = [int(i) for i in input().split()]\nw = [int(i) for i in input().split()]\nw.sort()\nm = 0\nfor i in w:\n    m += (i + k - 1) // k\n\nprint((m + 1) // 2)", "from math import ceil\n\nn, s = list(map(int, input().split()))\n\npeb = list(map(int, input().split()))\n\nd = 0\n\nfor p in peb:\n    d += ceil(p / s)\n\nprint(ceil(d/2))\n", "def R():\n    return [int(x) for x in input().split()]\n\ndef __starting_point():\n    n, k = R()\n    w = R()\n    result = 0\n    for _w in w:\n        if _w < k:\n            result += 1\n        elif _w % k == 0:\n            result += _w // k\n        else:\n            result += _w // k + 1\n\n    if result % 2 == 0:\n        print(result // 2)\n    else: \n        print(result // 2 + 1)\n\n__starting_point()", "from collections import deque\nfrom sys import stdin\nfrom math import ceil\nlines = deque(line.strip() for line in stdin.readlines())\n\ndef nextline():\n    return lines.popleft()\n\ndef types(cast):\n    return tuple(int(x) for x in nextline().split())\n\ndef ints():\n    return types(int)\n\ndef strs():\n    return nextline().split()\n\ndef main():\n    # lines will now contain all of the input's lines in a list\n    n, k = ints()\n    ws = ints()\n    count = ceil(sum(ceil(x/k) for x in ws)/2)\n    print(count)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nimport math\n\nfin = sys.stdin\nfout = sys.stdout\nn, k = list(map(int, fin.readline().split()))\na = list(map(int, fin.readline().split()))\nans = 0\ni = 0\nwhile i < n:\n    ans += math.ceil(a[i] / k)\n    i += 1\nfout.write(str(math.ceil(ans / 2)))\n", "import math\nn,k=list(map(int,input().split()))\nline=list(map(int,input().split()))\ncnt=0\nfor x in line:\n\tcnt+=math.ceil(x/k)\nprint(math.ceil(cnt/2))\n", "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\ncounterS = 0\ncounterL = 0\n\nfor i in arr:\n    if i <= k:\n        counterS += 1\n    else:\n        if i <= 2 * k:\n            counterL += 1\n        else:\n            counterL += (i // (2 * k))\n            y = i - (i // (2 * k))*(2*k)\n            if y <= k:\n                if y != 0:\n                    counterS += 1\n            else:\n                counterL += 1\nlastCounter = (counterS // 2) + (counterS % 2) + counterL\nprint(lastCounter)\n"]