["for _ in range(int(input())):\n    n = int(input())\n    r1 = list(map(int, input().split()))\n    m = int(input())\n    r2 = list(map(int, input().split()))\n    o11 = sum(t % 2 for t in r1) # Counts odd number\n    o12 = n - o11\n    o21 = sum(t % 2 for t in r2) # Counts odd number\n    o22 = m - o21\n    print (o11 * o21 + o12 * o22)", "T = int(input())\nfor i in range(T):\n    N = int(input())\n    ps = list(map(int, input().split()))\n    M = int(input())\n    qs = list(map(int, input().split()))\n\n    peven = 0\n    podd = 0\n    for i in ps:\n        if i % 2 == 0:\n            peven += 1\n        else:\n            podd += 1\n\n    qeven = 0\n    qodd = 0\n    for i in qs:\n        if i % 2 == 0:\n            qeven += 1\n        else:\n            qodd += 1\n\n    print(qeven * peven + qodd * podd)\n", "from bisect import bisect\nfrom collections import defaultdict\n# l = list(map(int,input().split()))\n# map(int,input().split()))\nfrom math import gcd,sqrt,ceil,inf\nfrom collections import Counter\nimport sys\nsys.setrecursionlimit(1000000)\nfrom bisect import bisect\nfrom collections import defaultdict\n# l = list(map(int,input().split()))\n# map(int,input().split()))\nfrom math import gcd,sqrt,ceil,inf,factorial,log2\nfrom collections import Counter\n# import sys\n# sys.setrecursionlimit(10**9)\n#\n#\n# def update(i,z,bit):\n#\n#     # print(i)\n#     while i<len(bit):\n#         bit[i]+=z\n#         i+=i&-i\n#         # print(i)\n# def query(i,bit):\n#     sum = 0\n#\n#     while i>0:\n#         sum+=bit[i]\n#         i-=i&-i\n#\n#     return sum\n#\n#\n# n,q = map(int,input().split())\n#\n# l = list(map(int,input().split()))\n# bit = [0]*(n+1)\n# for i in range(n):\n#     update(i+1,l[i],bit)\n# pref = [0]\n# la = l.copy()\n# la.reverse()\n# for i in la:\n#     pref.append(pref[-1]+i)\n#\n# bit2 = [0]*(n+1)\n# for i in range(n):\n#     update(i+1,la[i],bit2)\n#\n# for _ in range(q):\n#     yo = list(map(int,input().split()))\n#     if la[0] == 1:\n#         a,b,c,d = yo\n#         x,y = c,d\n#         i = b\n#         z1 = (query(y,bit) - query(x-1,bit))*(x-i)\n#         x+=1\n#         i = n-y\n#         j = n-x\n#         z2 = (query(j,bit2) - query(i-1,bit2))\n#         print(z1-z2)\n#     else:\n#         a,b,c = yo\n#         update(b,c,bit)\n#         z1 = query(n,bit2) - query(b-1,bit2)\n#         j = n-b\n#         update(j,z1,bit2)\n\n\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    l1 = list(map(int,input().split()))\n    m = int(input())\n    l2 =  list(map(int,input().split()))\n    count1 = 0\n    for i in l2:\n        if i%2 == 0:\n            count1+=1\n    count2 = m-count1\n    ans = 0\n    for i in l1:\n        if i%2 == 0:\n            ans+=count1\n        else:\n            ans+=count2\n    print(ans)\n\n\n", "def mi():\n        return list(map(int, input().split()))\n'''\n3\n3\n1 3 2\n2\n0 3\n1\n1\n1\n1\n1\n2\n1\n1\n'''\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(mi())\n    m = int(input())\n    b = list(mi())\n\n    oa,ob,ea,eb=0,0,0,0\n    for i in a:\n        if i%2:\n            oa+=1\n        else:\n            ea+=1\n    for i in b:\n        if i%2:\n            ob+=1\n        else:\n            eb+=1\n\n    print(ea*eb+oa*ob)\n", "for _ in range(int(input())):\n    n = int(input())\n    o1 = e1 = 0\n    for i in list(map(int,input().split())):\n        if i%2==1:\n            o1+=1\n    e1 = n-o1\n    o2 = e2 = 0\n    m = int(input())\n    for i in list(map(int,input().split())):\n        if i%2==1:\n            o2+=1\n    e2 = m-o2\n    print(e1*e2 + o1*o2)", "t = int(input())\nfor wefe in range(t):\n\tn = int(input())\n\tl = list(map(int,input().split()))\n\tm = int(input())\n\tk = list(map(int,input().split()))\n\tparl = 0\n\tpark = 0\n\tfor i in l:\n\t\tif i % 2 == 0:\n\t\t\tparl += 1\n\tfor i in k:\n\t\tif i % 2 == 0:\n\t\t\tpark += 1\n\tprint(parl*park + (n-parl)*(m-park))", "t=int(input())\nfor nt in range(t):\n\tn=int(input())\n\tln=list(map(int,input().split()))\n\tm=int(input())\n\tlm=list(map(int,input().split()))\n\tlne,lno,lme,lmo=0,0,0,0\n\tfor i in ln:\n\t\tif i%2==0:\n\t\t\tlne+=1\n\t\telse:\n\t\t\tlno+=1\n\tfor i in lm:\n\t\tif i%2==0:\n\t\t\tlme+=1\n\t\telse:\n\t\t\tlmo+=1\n\tprint (lne*lme+lno*lmo)\t", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    m = int(input())\n    q = list(map(int, input().split()))\n    cnt_p0 = 0\n    cnt_p1 = 0\n    cnt_q0 = 0\n    cnt_q1 = 0\n    for i in range(n):\n        if p[i] % 2 == 0:\n            cnt_p0 += 1\n        else:\n            cnt_p1 += 1\n    for i in range(m):\n        if q[i] % 2 == 0:\n            cnt_q0 += 1\n        else:\n            cnt_q1 += 1\n    print(cnt_p0*cnt_q0 + cnt_p1*cnt_q1)", "def get_cnt():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    cnt = [0, 0]\n    for x in a:\n        cnt[x % 2] += 1\n\n    return cnt\n\nfor _ in range(int(input())):\n    p = get_cnt()\n    q = get_cnt()\n\n    ans = p[0] * q[0] + p[1] * q[1]\n    print(ans)\n", "import sys\nimport math\nimport itertools\nimport collections\n\ndef getdict(n):\n    d = {}\n    if type(n) is list or type(n) is str:\n        for i in n:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d:\n                d[t] += 1\n            else:\n                d[t] = 1\n    return d\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return map(int, input().split())\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a*b) // math.gcd(a, b)\ndef wr(arr): return '\\n'.join(map(str, arr))\ndef revn(n): return int(str(n)[::-1])\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\n\n\nt = ii()\nfor i in range(t):\n    n = ii()\n    p = li()\n    m = ii()\n    q = li()\n    po = pe = qo = qe = 0\n    for i in range(n):\n        if p[i] % 2 == 0:\n            po += 1\n        else:\n            pe += 1\n    for i in range(m):\n        if q[i] % 2 == 0:\n            qo += 1\n        else:\n            qe += 1\n    print(qo * po + qe * pe)", "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    oa, ea, ob, eb = 0, 0, 0, 0\n    for i in a:\n        if i%2:\n            oa+=1\n        else:\n            ea+=1\n    for i in b:\n        if i%2:\n            ob+=1\n        else:\n            eb+=1\n    print(oa*ob + ea*eb)", "# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(200000)\ninput = sys.stdin.readline\ndef ii(): return int(input())\ndef mi(): return map(int, input().rstrip().split())\ndef lmi(): return list(map(int, input().rstrip().split()))\ndef fi(): return float(input())\ndef mfi(): return map(float, input().rstrip().split())\ndef lmfi(): return list(map(float, input().rstrip().split()))\ndef li(): return list(input().rstrip())\ndef debug(*args, sep=\" \", end=\"\\n\"): print(\"debug:\", *args, file=sys.stderr, sep=sep, end=end) if not __debug__ else None\ndef exit(*arg): print(*arg); return\n# template\n\n\ndef main():\n    t = ii()\n    for _ in range(t):\n        n = ii()\n        p = lmi()\n        m = ii()\n        q = lmi()\n        op = 0\n        oq = 0\n        ep = 0\n        eq = 0\n        for x in p:\n            if x % 2 == 0:\n                ep += 1\n            else:\n                op += 1\n        for x in q:\n            if x % 2 == 0:\n                eq += 1\n            else:\n                oq += 1\n        print(op * oq + ep * eq)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t=int(input())\nwhile t>0:\n    t-=1\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    m=int(input())\n    b=[int(x) for x in input().split()]\n    e1=o1=e2=o2=0\n    for i in a:\n        if i%2==0:\n            e1+=1\n        else:\n            o1+=1\n    for i in b:\n        if i%2==0:\n            e2+=1\n        else:\n            o2+=1  \n    s=e1*e2+o1*o2\n    print(s)", "import sys\n\nt=int(sys.stdin.readline())\n\nans_arr=[]\n\nfor w in range(t):\n\tn=int(sys.stdin.readline())\n\n\tp=[int(i) for i in sys.stdin.readline().split()]\n\n\tm=int(sys.stdin.readline())\n\n\tq=[int(i) for i in sys.stdin.readline().split()]\n\n\tpeven=0\n\tpodd=0\n\n\tfor e in range(n):\n\t\tif(p[e]%2==0):\n\t\t\tpeven+=1\n\t\telse:\n\t\t\tpodd+=1\n\n\tqeven=0\n\tqodd=0\n\n\tfor f in range(m):\n\t\tif(q[f]%2==0):\n\t\t\tqeven+=1\n\t\telse:\n\t\t\tqodd+=1\n\n\tans_arr.append(str(podd*qodd+peven*qeven))\n\nprint(\"\\n\".join(ans_arr))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    p = list(map(int, input().split()))\n    m = int(input())\n    q = list(map(int, input().split()))\n    oddp = 0\n    evenp = 0\n    oddq = 0\n    evenq = 0\n    for i in range(n):\n        if p[i] % 2 == 0:\n            evenp += 1\n        else:\n            oddp += 1\n    for i in range(m):\n        if q[i] % 2 == 0:\n            evenq += 1\n        else:\n            oddq += 1\n\n    print(evenp*evenq + oddp*oddq)\n", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n    m = int(input())\n    b = list(map(int, input().split(\" \")))\n    odda = 0\n    evena = 0\n    oddb = 0\n    evenb = 0\n    res = 0\n    for i in range(n):\n        if a[i] % 2 == 0:\n            evena+=1\n        else:\n            odda+=1\n    for i in range(m):\n        if b[i] % 2 == 0:\n            evenb += 1\n        else:\n            oddb += 1\n    res += (evena * evenb)\n    res += (odda * oddb)\n    print(res)", "t = int(input())\nans = []\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = int(input())\n    b = list(map(int, input().split()))\n\n    f = [0,0]\n    for el in a:\n        f[el%2]+=1\n    e = [0,0]\n    for el in b:\n        e[el%2]+=1\n    ans.append(e[1]*f[1]+e[0]*f[0])\n\nfor el in ans:\n    print(el)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    pis = list(map(int, input().split()))\n    m = int(input())\n    qis = list(map(int, input().split()))\n    \n    even = sum([1 if pi % 2 == 0 else 0 for pi in pis])\n    odd = sum([1 if pi % 2 == 1 else 0 for pi in pis])\n    ans = 0\n    for qi in qis:\n        if qi % 2 == 0:\n            ans += even\n        else:\n            ans+=odd\n    print(ans)\n", "n=int(input())\nfor i in range(n):\n    a=int(input())\n    f=[int(x) for x in input().split()]\n    b=int(input())\n    g=[int(x) for x in input().split()]    \n    odd1=0\n    even1=0\n    for h in range(a):\n        if f[h] % 2 == 0:\n            even1+=1\n    odd1=a-even1\n    odd2=0\n    even2=0\n    for h in range(b):\n        if g[h] % 2 == 0:\n            even2+=1\n    odd2=b-even2\n    print(odd2*odd1+even1*even2)\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n    a1 = 0\n    for x in a:\n        if x % 2 == 0:\n            a1 += 1\n    b1 = 0\n    for x in b:\n        if x % 2 == 0:\n            b1 += 1\n    print(a1 * b1 + (len(a) - a1) * (len(b) - b1))\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    narr = list(map(int, input().split()))\n    m = int(input())\n    marr = list(map(int, input().split()))\n    n0 = sum([1 for p in narr if p % 2 == 0])\n    n1 = len(narr) - n0\n    m0 = sum([1 for p in marr if p % 2 == 0])\n    m1 = len(marr) - m0\n    print(n0 * m0 + n1 * m1)"]