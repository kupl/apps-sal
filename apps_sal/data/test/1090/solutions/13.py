# 「操作を最大 K 回まで行うことができる」という問題設定は、アルゴリズム的にできることがとても限られてくる
# ・1回操作するごとに、何らかの値が規則的に変化していく
# ・なんらかの意味で Greedy に、順にやっていくとよい
# とにかく、操作の意味をわかりやすく言い換える
# 文字列S(長さN)のスコアは、「文字と文字との間の隙間(N-1個)」のうちLとRが隣接しているもの(a個とする)を除いた、N−1−a
# 一回の反転操作で、LとRの変わり目を2箇所減らすことができる
# よって、求める最大値は N−1−max(a−2K,0)
N, K = list(map(int, input().split()))
S = input()

cnt = 0
for i in range(N - 1):
    if S[i] != S[i + 1]:
        cnt += 1

ans = N - 1 - max(cnt - 2 * K, 0)
print(ans)
