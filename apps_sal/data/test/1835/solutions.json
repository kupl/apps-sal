["import sys\nimport math\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : list(map(int, input().split()))\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nfor _ in range(int(input())):\n  n = int(input())\n  arr = sorted([input() for i in range(n)], key=lambda x:len(x))\n\n  zero_cnt, one_cnt = 0, 0\n  for i in arr:\n    zero_cnt += i.count('0')\n    one_cnt += i.count('1')\n  total = (zero_cnt//2) + (one_cnt//2)\n  \n  ans = 0\n\n  for i in arr:\n    if total >= len(i)//2:\n      total -= len(i)//2 \n      ans += 1\n  \n  print(ans)\n", "from collections import Counter\n\nfor _ in range(int(input())):\n    n = int(input())\n    lens = []\n    cnt = Counter()\n    for _ in range(n):\n        s = input()\n        lens.append(len(s))\n        cnt += Counter(s)\n    pairs = 0\n    singles = 0\n    for v in list(cnt.values()):\n        div, mod = divmod(v, 2)\n        pairs += div\n        singles += mod\n    ans = 0\n    lens.sort()\n    for len_ in lens:\n        div, mod = divmod(len_, 2)\n        pairs -= div\n        if mod:\n            if singles:\n                singles -= 1\n            else:\n                singles = 1\n                pairs -= 1\n        if pairs < 0:\n            break\n        ans += 1\n    print(ans)\n", "import sys\ndef I():\n    return sys.stdin.readline().rstrip()\n\nq = int( I() )\nfor _ in range( q ):\n    n = int( I() )\n    one, zero, odd = 0, 0, 0\n    for _ in range( n ):\n        s = I()\n        odd += len( s ) & 1\n        for c in s:\n            if c == '0':\n                zero += 1\n            else:\n                one += 1\n    if ( one & 1 ) == 1 and ( zero & 1 ) == 1 and odd == 0:\n        n -= 1\n    print( n )\n", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    it=[]\n    co=0\n    coo=0\n    for i in range(n):\n        a=input()\n        co+=a.count(\"1\")\n        coo+=a.count(\"0\")\n        it.append([a.count(\"1\"),a.count(\"0\")])\n    it.sort(key=lambda x:x[0]+x[1])\n    ans=0\n    for i in range(n):\n        m=it[i][0]+it[i][1]\n        if co==0 and coo==0:\n            break\n        if m%2==1:\n            if co%2==1:\n                co-=1\n            elif coo%2==1:\n                coo-=1\n            m-=1\n            st=True\n            while m>0:\n                if co>1:\n                    co-=2\n                    m-=2\n                    continue\n                if coo>1:\n                    coo-=2\n                    m-=2\n                    continue\n                st=False\n                break\n            if st:\n                ans+=1\n                continue\n            else:\n                break\n        else:\n            st=True\n            while m>0:\n                if co>1:\n                    co-=2\n                    m-=2\n                    continue\n                if coo>1:\n                    coo-=2\n                    m-=2\n                    continue\n                st=False\n                break\n            if st:\n                ans+=1\n                continue\n            else:\n                break\n    print(ans)\n                    \n    \n", "Q = int(input())\nfor _ in range(Q):\n    N = int(input())\n    X = []\n    zeros = 0\n    odds = 0\n    for __ in range(N):\n        s = input()\n        odds += len(s) % 2\n        zeros += s.count(\"0\")\n    \n    if odds or (zeros % 2 == 0):\n        print(N)\n    else:\n        print(N-1)\n", "import sys\ninput = sys.stdin.readline\n\nQ=int(input())\n\nfor test in range(Q):\n\n    n=int(input())\n    S=[input().strip() for i in range(n)]\n\n    zero=0\n    #ones=0\n    lenflag=0\n\n    for s in S:\n        zero+=s.count(\"0\")\n        #ones+=s.count(\"1\")\n\n        if len(s)%2==1:\n            lenflag=1\n\n    if lenflag==1:\n        print(n)\n    else:\n        if zero%2==0:\n            print(n)\n        else:\n            print(n-1)\n\n    \n", "Q = int(input())\nfor _ in range(Q):\n    n = int(input())\n    zero, one = 0, 0\n    odd = 0\n    for _ in range(n):\n        s = input()\n        if len(s) % 2:\n            odd = 1\n        zero += s.count('0')\n        one += s.count('1')\n\n    if odd or zero % 2 == 0:\n        print(n)\n    else:\n        print(n-1)", "def sv():\n\tN = int(input())\n\ttot0 = 0\n\tallEven = True\n\tfor n in range(N):\n\t\ts = input()\n\t\tif len(s) % 2: allEven = False\n\t\ttot0 += sum(1 for c in s if c == '0')\n\tprint((N-1) if allEven and tot0 % 2 else N)\nTC = int(input())\nfor tc in range(TC):\n\tsv()\n", "import sys\nfrom collections import Counter\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\ndef getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\n\ndef solve():\n    n = getN()\n    iso = False\n    ise = False\n    cnt1, cnt0 = 0, 0\n    for _ in range(n):\n        s = input().strip()\n        if len(s) % 2 == 1:\n            iso = 1\n        else:\n            ise = 1\n\n        cnt = Counter(s)\n        cnt1 += cnt[\"1\"]\n        cnt0 += cnt[\"0\"]\n\n    # print(iso, ise, cnt1, cnt0)\n    if not iso and cnt1 % 2 and cnt0 % 2:\n        print(n - 1)\n    else:\n        print(n)\n\ndef main():\n    t = getN()\n    for times in range(t):\n        solve()\n\n\ndef __starting_point():\n    main()\n__starting_point()", "q = int(input())\n\nfor _ in range(q):\n    n = int(input())\n    cnt = {'0': 0, '1': 0}\n    even = []\n    odd = []\n    for _ in range(n):\n        s = input()\n        if len(s) & 1:\n            odd.append(len(s))\n        else:\n            even.append(len(s))\n        cnt['0'] += s.count('0')\n        cnt['1'] += s.count('1')\n    ans = n\n    if cnt['0'] & 1 and cnt['1'] & 1 and len(odd) == 0:\n        ans = n - 1\n    print(ans)\n", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = [input() for i in range(n)]\n    cnt1 = 0\n    cnt0 = 0\n    cnt_odd = 0\n    for i in range(n):\n        if len(s[i]) % 2 == 1:\n            cnt_odd += 1\n        for j in range(len(s[i])):\n            if s[i][j] == \"1\":\n                cnt1 += 1\n            else:\n                cnt0 += 1\n    \n    if cnt_odd == 0:\n        if cnt0 % 2 == 1 and cnt1 % 2 == 1:\n            print(n-1)\n        else:\n            print(n)\n    else:\n        print(n)", "for _ in range(int(input())):\n\tc0=0\n\tc1=0\n\tcods=0\n\tn=int(input())\n\tfor y in range(n):\n\t\ts = input()\n\t\tzr=s.count('0')\n\t\tc0+=zr\n\t\tc1+=len(s)-zr\n\t\tcods += len(s)%2\n\tif c0%2+c1%2 <= cods:\n\t\tprint(n)\n\telse:\n\t\tprint(n-1)", "import sys\nfrom collections import deque\nreadline = sys.stdin.readline\nq = int(readline())\n\nfor _ in range(q):\n    n = int(readline())\n    tmp = []\n    ans = False\n    c = 0\n    for i in range(n):\n        s = str(readline().split()[0])\n        tmp.append(s)\n        if len(s) % 2 == 1:\n            ans = True\n        for ss in s:\n            if ss == '1':\n                c+=1\n    if ans or c % 2 == 0:\n        print(n)\n    else:\n        print(n-1)\n", "n = int(input())\n\nwhile(n):\n    \n    n -= 1\n    \n    p = int(input())\n    zeroes = 0\n    ones = 0\n    Lo = []\n    Le = []\n    for i in range(p):\n        S = input()\n        z = S.count('0')\n        zeroes += z\n        ones += len(S) - z\n        if len(S) % 2:\n            Lo.append(len(S))\n        else:\n            Le.append(len(S))\n    Le.sort()\n    Lo.sort()\n\n\n    if zeroes % 2 == 0 and ones % 2 == 0:\n        print(p)\n    elif zeroes % 2 == 1 and ones % 2 == 1:\n        if len(Lo) > 0:\n            print(p)\n        else:\n            print(p - 1)\n    else:\n        print(p)\n", "Q = int(input())\nfor _ in range(Q):\n    n = int(input())\n    zs = 0\n    os = 0\n    odd = 0\n    for k in range(n):\n        s = input()\n        zs += s.count('0')\n        os += s.count('1')\n        odd += len(s) % 2\n    #print(zs,os,odd)\n    if zs % 2 == 1 and os % 2 == 1 and odd == 0:\n        print(n-1)\n    else:\n        print(n)\n", "q = int(input())\nfor i in range(q):\n    amount = 0\n    n = int(input())\n    flag = 0\n    for j in range(n):\n        s = input()\n        for k in range(len(s)):\n            if s[k] == '1':\n                amount += 1\n        if len(s) % 2:\n            flag = 1\n   # print(flag, amount)\n    if not flag and amount % 2:\n        print(n - 1)\n    else:\n        print(n)\n", "Q = int(input())\nfor q in range(Q):\n    n = int(input())\n    arr = [input() for i in range(n)]\n\n    lens = [len(i) % 2 for i in arr]\n    counts = [i.count('1') for i in arr]\n    if sum(counts) % 2 == 0:\n        print(n)\n    else:\n        if 1 in lens:\n            print(n)\n        else:\n            print(n - 1)\n", "#!/usr/bin/env python3\nimport sys\n\n#lines = stdin.readlines()\ndef rint():\n    return list(map(int, sys.stdin.readline().split()))\n\ndef input():\n    return sys.stdin.readline().rstrip('\\n')\n\ndef oint():\n    return int(input())\n\n\nq = oint()\n\nfor _ in range(q):\n    n = oint()\n    odd = 0\n    ss = ''\n    for _ in range(n):\n        s = input()\n        ss = ss + s\n        if len(s)%2:\n            odd = 1\n    if odd:\n        print(n)\n    else:\n        if ss.count('1')%2:\n            print(n-1)\n        else:\n            print(n)\n", "'''\nCreated on 2019. 9. 21.\n\n@author: kkhh88\n'''\n#q = int(input())\n#x, y = map(int,input().split(' '))\n\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    l = [0] * n\n    cnt0 = 0\n    cnt1 = 0\n    cntodd = 0\n    \n    for i in range(n):\n        s = input()\n        l[i] = len(s)\n        if l[i] % 2 == 1:\n            cntodd = cntodd + 1\n        for c in s:\n            if c == '0':\n                cnt0 = cnt0 + 1\n            else:\n                cnt1 = cnt1 + 1\n                \n    if cnt0 % 2 == 1 and cntodd > 0:\n        cnt0 = cnt0 - 1\n        cntodd = cntodd - 1 \n    if cnt1 % 2 == 1 and cntodd > 0:\n        cnt1 = cnt1 - 1\n        cntodd = cntodd - 1\n        \n    if cnt0 % 2 == 1 or cnt1 % 2 == 1:\n        print(n - 1)\n    else:\n        print (n)\n", "for _ in range(int(input())):\n    n = int(input())\n    s = [list(input()) for _ in range(n)]\n    for elem in s:\n        elem.sort()\n    numberZeroes = 0\n    numberOnes = 0\n    numOdd = 0\n    for elem in s:\n        if (len(elem) % 2) == 1:\n            numOdd += 1\n        for num in elem:\n            if num == \"0\":\n                numberZeroes += 1\n            else:\n                numberOnes += 1\n\n    while numOdd > 1:\n        if numberOnes > 1:\n            numberOnes -= 1\n        else:\n            numberZeroes -= 1\n        numOdd -= 1\n\n    if numOdd == 1:\n        if numberOnes % 2 == 1:\n            numberOnes -= 1\n        elif numberZeroes % 2 == 1:\n            numberZeroes -= 1\n        elif numberOnes > 0:\n            numberOnes -= 1\n        else:\n            numberZeroes -= 1\n\n    if numberOnes % 2 == 0 and numberZeroes % 2 == 0:\n        print(n)\n    else:\n        print(n-1)\n", "from collections import *\nfrom math import *\nt = int(input())\nfor y in range(t):\n    n = int(input())\n    l = []\n    for i in range(n):\n        l.append(list(input()))\n    ct = 0\n    s = 0\n    flag = 0\n    for i in l:\n        ct += i.count('1')\n        s += len(i)\n        if len(i) % 2 == 1:\n            flag = 1\n    if s%2 == 1:\n        print(n)\n    elif ct%2 == 0 or flag == 1:\n        print(n)\n    else:\n        print(n-1)", "for _ in range(int(input())):\n    n = int(input())\n    l = [input().strip() for i in range(n)]\n    prob = 0\n    odd = 0\n    for i in range(n):\n        z = l[i].count(\"0\")\n        o = l[i].count(\"1\")\n        if len(l[i]) % 2 == 1:\n            odd = 1\n            break\n        else:\n            if z % 2 == 1:\n                prob += 1\n    if odd == 1:\n        print(n)\n    else:\n        if prob % 2 == 1:\n            print(n-1)\n        else:\n            print(n)\n", "for i in range(int(input())):\n    n=int(input())\n    cnt0,cnt1,cnt2=0,0,0\n    for i in range(n):\n        x=input()\n        cnt2+=len(x)&1\n        for i in x:\n            if i=='0':\n                cnt0+=1\n            else:\n                cnt1+=1\n   # print(cnt0,cnt1,cnt2)\n    if((cnt2-(cnt0&1)-(cnt1&1))%2==1) or (cnt0&1 and cnt1&1 and cnt2==0):\n        print(n-1)\n    else:\n        print(n)", "q = int(input())\nfor fwefe in range(q):\n\tn = int(input())\n\tj = 0\n\tz = 0\n\tpar = []\n\tnpar = []\n\tfor i in range(n):\n\t\ts = input()\n\t\tje = s.count('1')\n\t\tze = s.count('0')\n\t\tj += je\n\t\tz += ze\n\t\tif len(s) % 2 == 0:\n\t\t\tpar.append(len(s))\n\t\telse:\n\t\t\tnpar.append(len(s))\n\tpar.sort()\n\twyn = 0\n\tfor i in par:\n\t\tif j < 0 or z < 0:\n\t\t\tbreak\n\t\tkz = 0\n\t\twhile z - kz > j - (i - kz) and z - kz >= 0 and kz <= i:\n\t\t\tkz += 2\n\t\tz -= kz\n\t\tj -= (i-kz)\n\t\twyn += 1\n\t\tif j < 0 or z < 0:\n\t\t\twyn -= 1\n\twyn += len(npar)\n\tprint(wyn)\n\t\t\t\n\t\n", "q = int(input())\nwhile q:\n    q -= 1\n    n = int(input())\n    a = 0\n    b = 0\n    c = 0\n    for i in range(n):\n        s = input()\n        c1 = 0\n        c2 = 0\n        for i in s:\n            if i == '1': c1 += 1\n            else: c2 += 1\n        if c1 % 2 and c2 % 2: a += 1\n        elif c1 % 2 == 0 and c2 % 2 == 0: c += 1\n        else: b += 1\n    if a % 2 == 0: print(n)\n    else:\n        if b > 0: print(n)\n        else: print(n - 1)"]