["n = int(input())\na = list(map(int, input().split()))\n\nm = int(input())\nb = list(map(int, input().split()))\n\nptra = 1\nptrb = 1\nsa = a[0] \nsb = b[0]\nans = 0\n\nwhile ptra != n and ptrb != m:\n    if sa == sb:\n        ans += 1\n        sa = a[ptra]\n        sb = b[ptrb]\n        ptra += 1\n        ptrb += 1\n        continue\n    if sa < sb:\n        sa += a[ptra]\n        ptra += 1\n    else:\n        sb += b[ptrb]\n        ptrb += 1\nwhile ptra != n:\n    sa += a[ptra]\n    ptra += 1\nwhile ptrb != m:\n    sb += b[ptrb]\n    ptrb += 1\nif sa != sb:\n    print(-1)\n    return\nprint(ans + 1)\n\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\nza = getIntList()\n\nM, = getIntList()\nzb = getIntList()\n\nif sum(za) != sum(zb):\n    print(-1)\n    return\n\nia = 0\nib = 0\nta = 0\ntb = 0\nr = N\nwhile ia<N or ib <M:\n    if ta== tb:\n        if ia==N: break\n        ta = za[ia]\n        tb = zb[ib]\n        ia +=1\n        ib +=1\n        \n    elif ta< tb:\n        ta += za[ia]\n        ia+=1\n        r-=1\n    else:\n        tb+=zb[ib]\n        ib+=1\n        \nprint(r)            \n        \n\n\n\n\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\nif sum(a) != sum(b):\n    print(-1)\n    return\ni = 0\nj = 0\nwhile i < n and j < m:\n    while a[i] != b[j] and i < n and j < m:\n        if i < n - 1 and a[i] < b[j]:\n            a[i + 1] += a[i]\n            a[i] = -1\n            i += 1\n        elif j < m - 1:\n            b[j + 1] += b[j]\n            b[j] = -1\n            j += 1\n    if a[i] == b[j]:\n        i += 1\n        j += 1\n    else:\n        print(-1)\n        return\nans = 0\nfor i in a:\n    if i != -1:\n        ans += 1\nprint(ans)\n\n    \n", "import sys\n\nn=int(input())\nA=list(map(int,input().split()))\nm=int(input())\nB=list(map(int,input().split()))\n\ni=0\nj=0\nx=A[0]\ny=B[0]\nACHECK=0\n\nwhile True:\n    if x==y:\n        i+=1\n        j+=1\n        if i==n and j==m:\n            print(n-ACHECK)\n            return\n\n        elif i==n and j<m:\n            print(-1)\n            return\n\n        elif i<n and j==m:\n            print(-1)\n            return\n            \n        x=A[i]\n        y=B[j]\n\n    elif x>y:\n        j+=1\n\n        if j==m:\n            print(-1)\n            return\n        y+=B[j]\n\n    elif x<y:\n        i+=1\n\n        if i==n:\n            print(-1)\n            return\n        x+=A[i]\n        ACHECK+=1\n        \n\n\n", "from collections import deque\nfrom sys import stdin\nlines = deque(line.strip() for line in stdin.readlines())\n\ndef nextline():\n    return lines.popleft()\n\ndef types(cast, sep=None):\n    return tuple(cast(x) for x in strs(sep=sep))\n\ndef ints(sep=None):\n    return types(int, sep=sep)\n\ndef strs(sep=None):\n    return tuple(nextline()) if sep == '' else tuple(nextline().split(sep=sep))\n\ndef main():\n    # lines will now contain all of the input's lines in a list\n    n = int(nextline())\n    a = ints()\n    m = int(nextline())\n    b = ints()\n    count = 1\n    i, j = 0, 0\n    a_sum, b_sum = 0, 0\n    a_total, b_total = 0, 0\n    while i < n and j < m:\n        if a_sum < b_sum:\n            a_total += a[i]\n            a_sum += a[i]\n            i += 1\n        else:\n            b_total += b[j]\n            b_sum += b[j]\n            j += 1\n        if a_sum == b_sum:\n            count += 1\n            a_sum, b_sum = 0, 0\n    while i < n and a_total < b_total:\n        a_total += a[i]\n        i += 1\n    while j < m and b_total < a_total:\n        b_total += b[j]\n        j += 1\n    if i == n and j == m and a_total == b_total:\n        return count\n    return -1\n\ndef __starting_point():\n    print(main())\n\n__starting_point()", "def __starting_point():\n    n1 = int(input().strip())\n    a1 = [int(__) for __ in input().strip().split()]\n    n2 = int(input().strip())\n    a2 = [int(__) for __ in input().strip().split()]\n    s1, s2 = sum(a1), sum(a2)\n    if a1 == a2:\n        print(n1)\n    elif sum(a1) != sum(a2):\n        print(-1)\n    else:\n        s1, s2 = 0, 0\n        e1, e2 = n1 - 1, n2 - 1\n        ans = 0\n        while a1[s1] == a2[s2]:\n            s1 += 1\n            s2 += 1\n            ans += 1\n        while a1[e1] == a2[e2]:\n            e1 -= 1\n            e2 -= 1\n            ans += 1\n        p1 = [a1[s1]]\n        p2 = [a2[s2]]\n        for i in range(s1 + 1, e1 + 1):\n            p1.append(p1[-1] + a1[i])\n        for i in range(s2 + 1, e2 + 1):\n            p2.append(p2[-1] + a2[i])\n        d = {}\n        for x in p1:\n            d[x] = 1\n        for x in p2:\n            if x in d:\n                ans += 1\n        print(ans)\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\nif (sum(a) != sum(b)):\n    print(-1)\nelse:\n    i = 0\n    j = 0\n    suma = 0\n    sumb = 0\n    ans = 0\n    while (i < n or j < m):\n        if (suma == sumb and suma != 0):\n            suma = 0\n            sumb = 0\n            ans += 1\n            if (i == n and j == m):\n                break\n        elif (suma == sumb):\n            suma += a[i]\n            i += 1\n            sumb += b[j]\n            j += 1\n            if (i == n and j == m):\n                break            \n        elif (suma < sumb):\n            suma += a[i]\n            i += 1\n        elif (suma > sumb):\n            sumb += b[j]\n            j += 1\n    if (suma == sumb and suma != 0):\n        ans += 1\n    print(ans)", "n=int(input())\nalist=list(map(int,input().split()))\nm=int(input())\nblist=list(map(int,input().split()))\n\nprea = [alist[0]]\nfor i in range(1,n):\n\tprea.append(prea[-1]+alist[i])\n\npreb = [blist[0]]\nfor i in range(1,m):\n\tpreb.append(preb[-1]+blist[i])\n#print(prea,preb)\nif prea[-1]!=preb[-1]:\n\tprint(-1)\n\nelse:\n\tx=0\n\ty=0\n\tcount=0\n\twhile x<n and y<m:\n\n\t\tif prea[x]==preb[y]:\n\n\t\t\tcount+=1\n\t\t\tx+=1\n\t\t\ty+=1\n\t\telif prea[x]<preb[y]:\n\t\t\tx+=1\n\t\telse:\n\t\t\ty+=1\n\n\tprint(count)\n\n\n", "n = int(input())\narrA = list(map(int, input().split()))\nm = int(input())\narrB = list(map(int, input().split()))\nresult = 0\ni = 0\nj = 0\nsumA = 0\nsumB = 0\nwhile (i < n and j < m):\n    sumA += arrA[i]\n    sumB += arrB[j]\n    if (sumA == sumB):\n        sumA = 0\n        sumB = 0\n        i += 1\n        j += 1\n        result += 1\n    elif sumA > sumB:\n        sumA -= arrA[i]\n        j += 1\n    else:\n        sumB -= arrB[j]\n        i += 1\nif (j == m and i == n): \n    print(result)\nelse:\n    print(\"-1\")\n", "import math\n\nla = int(input())\na = list(map(int, input().split()))\n\nlb = int(input())\nb = list(map(int, input().split()))\n\nxa = 0\nxb = 0\n\nsuma = 0\nsumb = 0\n\nresult = 0\nwhile (xa < la or sumb < suma) and  (xb < lb or suma < sumb):\n    if suma == sumb:\n        suma += a[xa]\n        sumb += b[xb]\n        xa += 1\n        xb += 1\n        result += 1\n\n    elif suma > sumb:\n        sumb += b[xb]\n        xb += 1\n\n    elif suma < sumb:\n        suma += a[xa]\n        xa += 1\n\nif xa == la and xb == lb and suma == sumb:\n    print(result)\nelse:\n    print(-1)\n", "import sys\nf=sys.stdin\nout=sys.stdout\n\nn=int(f.readline().rstrip('\\r\\n'))\na=list(map(int,f.readline().rstrip('\\r\\n').split()))\nm=int(f.readline().rstrip('\\r\\n'))\nb=list(map(int,f.readline().rstrip('\\r\\n').split()))\n\ni=n-1\nj=m-1\nc=0\nwhile i>=0 and j>=0:\n\tif a[i]==b[j]:\n\t\tc+=1\n\t\ti-=1\n\t\tj-=1\n\telif a[i]<b[j]:\n\t\ta[i-1]+=a[i]\n\t\ti-=1\n\telse:\n\t\tb[j-1]+=b[j]\n\t\tj-=1\nif i==-1 and j==-1:\n\tout.write(str(c))\nelse:\n\tout.write(\"-1\")", "import atexit\nimport io\nimport sys\n# import os\n\n# from bisect import *\n# from collections import *\n# from fractions import gcd\n# from fractions import Fraction as fr_\n# from itertools import *\n# import math\n\ninf = float('inf')  # sys.maxint in py2\ninf_neg = float('-inf')  # sys.maxsize = 9*1e18\nrange_5 = int(1e5 + 1)\nrange_6 = int(1e6 + 1)\nrange_7 = int(1e7 + 1)\nrange_8 = int(1e8 + 1)\n# sys.setrecursionlimit(range_8)\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n\ndef main():\n    # ll = list(map(int, input().split()))\n    # print(f\"{ ll }\")\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n\n    if sum(a) != sum(b):\n        print(-1)\n    else:\n        i, j = 0, 0\n        temp = 0\n        while (i < n or j < m):\n            if a[i] == b[j]:\n                temp += 1\n                if (i < n and j < m):\n                    i += 1\n                    j += 1\n                else:\n                    break\n            elif (a[i] < b[j] and (i + 1) < n):\n                a[i + 1] += a[i]\n                i += 1\n            elif (a[i] < b[j] and (i + 1) > n - 1):\n                temp += 1\n                break\n            elif (a[i] > b[j] and (j + 1) < m):\n                b[j + 1] += b[j]\n                j += 1\n            elif (a[i] > b[j] and (j + 1) > m - 1):\n                temp += 1\n                break\n        print(temp)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import atexit\nimport io\nimport sys\n# import os\n\n# from bisect import *\n# from collections import *\n# from fractions import gcd\n# from fractions import Fraction as fr_\n# from itertools import *\n# import math\n\ninf = float('inf')  # sys.maxint in py2\ninf_neg = float('-inf')  # sys.maxsize = 9*1e18\nrange_5 = int(1e5 + 1)\nrange_6 = int(1e6 + 1)\nrange_7 = int(1e7 + 1)\nrange_8 = int(1e8 + 1)\n# sys.setrecursionlimit(range_8)\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\n\ndef main():\n    # ll = list(map(int, input().split()))\n    # print(f\"{ ll }\")\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    b = list(map(int, input().split()))\n\n    if sum(a) != sum(b):\n        print(-1)\n    else:\n        i, j = 0, 0\n        temp = 0\n        while (i < n or j < m):\n            if a[i] == b[j]:\n                temp += 1\n                if (i < n and j < m):\n                    i += 1\n                    j += 1\n                else:\n                    break\n            elif (a[i] < b[j] and (i + 1) < n):\n                a[i + 1] += a[i]\n                i += 1\n            elif (a[i] < b[j] and (i + 1) > n - 1):\n                temp += 1\n                break\n            elif (a[i] > b[j] and (j + 1) < m):\n                b[j + 1] += b[j]\n                j += 1\n            elif (a[i] > b[j] and (j + 1) > m - 1):\n                temp += 1\n                break\n        print(temp)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\narr = [int(i) for i in input().split()]\nm = int(input())\nar = [int(i) for i in input().split()]\na = arr[0]\nb = ar[0]\naa = 1\nbb = 1\nans = 0\nwhile (aa != n and bb != m):\n\tif a == b:\n\t\ta += arr[aa]\n\t\taa += 1\n\t\tans += 1\n\t\tcontinue\n\tif a < b:\n\t\ta += arr[aa]\n\t\taa += 1\n\telse:\n\t\tb += ar[bb]\n\t\tbb += 1\n\nwhile (aa != n):\n\ta += arr[aa]\n\taa+=1\nwhile (bb != m):\n\tb += ar[bb]\n\tbb += 1\nif a == b:\n\tprint(ans + 1)\nelse:\n\tprint(-1) ", "m=int(input())\na=list(map(int,input().split()))\nn=int(input())\nb=list(map(int,input().split()))\nif(sum(a)!=sum(b)):\n    print(-1)\nelse:\n    ans=sum1=sum2=0\n    i=j=0\n    while(i<m and j<n):\n        if(sum1<sum2):\n            sum1+=a[i]\n            i+=1\n        elif(sum1>sum2):\n            sum2+=b[j]\n            j+=1\n        else:\n            ans+=1\n            sum1=a[i]\n            sum2=b[j]\n            i+=1\n            j+=1\n    print(ans)", "n = int(input())\nA = list(map(int,input().split()))\nm = int(input())\nB = list(map(int,input().split()))\n\ni =0\nj =0\nans = 0\nsa = 0\nsb = 0\nwhile i < n or j < m:\n    if sa < sb:\n        if i>= n:\n            break\n        sa += A[i]\n        i += 1\n    else:\n        if j >= m:\n            break\n        sb += B[j]\n        j += 1\n    if sa == sb:\n        ans += 1\n        sa = 0\n        sb = 0\n\nif i == n and j == m and sa == 0 and sb == 0: \n    print(ans)\nelse:\n    print(-1)\n", "n = int(input())\nline_a = list(map(int, input().split()))\nm = int(input())\nline_b = list(map(int, input().split()))\nif sum(line_a) != sum(line_b):\n    print(-1)\nelse:\n    sa = 0\n    sb = 0\n    l = 0\n    r = 0\n    size = 0\n    while l != n and r != m:\n        #print(sa, sb)\n        if sa + line_a[l] > sb + line_b[r]:\n            sb += line_b[r]\n            r += 1\n        elif sa + line_a[l] < sb + line_b[r]:\n            sa += line_a[l]\n            l += 1\n        elif sa + line_a[l] == sb + line_b[r]:\n            size += 1\n            l += 1\n            r += 1\n            sa = 0\n            sb = 0\n    print(size)", "'''input\n2\n1 2\n2\n1 2\n'''\n\nimport math\nfrom collections import defaultdict as dd\nimport heapq\n\t\nn = int(input())\na = [int(i) for i in input().split(\" \")]\nm = int(input())\nb = [int(i) for i in input().split(\" \")]\n\nx = [a[0]]\ny = [b[0]]\nif sum(a) != sum(b):\n\tprint(-1)\nelse:\n\tfor i in range(1, n):\n\t\tx.append(x[-1] + a[i])\n\tfor i in range(1, m):\n\t\ty.append(y[-1] + b[i])\n\tx = set(x)\n\ty = set(y)\n\tprint(len(x.intersection(y)))", "\n\nn = int(input())\na = list(map(int,input().split(\" \")))\nm = int(input())\nb = list(map(int,input().split(\" \")))\n\ni,j = 0,0\nres = 0\nx,y = 0,0\nlast_i,last_j = -1,-1\nwhile(i < n and j < m):\n\t# print(i,j,x,y)\n\tif(last_i != i):\n\t\tx += a[i]\n\tif(last_j != j):\n\t\t\ty += b[j]\n\tlast_i,last_j = i,j\n\tif(x == y):\n\t\ti += 1\n\t\tj += 1\n\t\tres += 1\n\t\tx = 0\n\t\ty = 0\n\tif(x<y):\n\t\ti += 1\n\tif(x>y):\n\t\tj += 1\n\nif(i == n and j == m):\n\tprint(res)\nelse:\n\tprint(\"-1\")", "n=int(input())\na=[int(i) for i in input().split(' ')]\n\nm=int(input())\nb=[int(i) for i in input().split(' ')]\n\n\naa=[a[0]]\nbb=[b[0]]\n\nfor i in range(1,n):\n    aa.append(aa[-1]+a[i])\n\nfor i in range(1,m):\n    bb.append(bb[-1]+b[i])\n\na1=set(aa)\na2=set(bb)\nif sum(a)!=sum(b):\n    print(-1)\nelse:\n    print(len((a1.intersection(a2))))\n\n        \n", "'''input\n3\n1 2 3\n3\n1 2 3\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nmod=10**9+7\n\n\nn=int(input())\na=[int(i) for i in input().split()]\nm=int(input())\nb=[int(i) for i in input().split()]\n\nfor i in range(1,n):\n\ta[i]+=a[i-1]\nfor i in range(1,m):\n\tb[i]+=b[i-1]\n\nif a[-1]!=b[-1]:\n\tprint(-1)\nelse:\n\ta=set(a)\n\tb=set(b)\n\n\tans=len(a.intersection(b))\n\n\tif ans==0 :\n\t\tprint(-1)\n\telse:\n\t\tprint(ans)\n\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nif sum(a) != sum(b):\n    print(-1)\nelse:\n    L = 0\n    while a or b:\n        if a[-1] == b[-1]:\n            del a[-1]\n            del b[-1]\n            L += 1\n        elif a[-1] < b[-1]:\n            a[-2] += a[-1]\n            del a[-1]\n        else:\n            b[-2] += b[-1]\n            del b[-1]\n    print(L)\n", "def go():\n    n = int(input())\n    a = [int(i) for i in input().split(' ')]\n    m = int(input())\n    b = [int(i) for i in input().split(' ')]\n    i = 0\n    so_far_i = 0\n    j = 0\n    so_far_j = 0\n    while i < n and so_far_i < n and j < m and so_far_j < m:\n        if a[i] == b[j]:\n            i = so_far_i\n            j = so_far_j\n            i += 1\n            j += 1\n            so_far_i = i\n            so_far_j = j\n        else:\n            if a[i] > b[j]:\n                if so_far_j + 1 < m:\n                    b[j] += b[so_far_j + 1]\n                    so_far_j += 1\n                    b[so_far_j] = None\n                else:\n                    break\n            else:\n                if so_far_i + 1 < n:\n                    a[i] += a[so_far_i + 1]\n                    so_far_i += 1\n                    a[so_far_i] = None\n                else:\n                    break\n    if sum([i for i in a if i is not None]) != sum([i for i in b if i is not None]):\n        return -1\n    return len([i for i in a if i is not None])\n\nprint(go())\n", "n1 = int(input())\na1 = list(map(int, input().split()))\nn2 = int(input())\na2 = list(map(int, input().split()))\nif n1 < n2:\n    a1, a2 = a2, a1\nif sum(a1) != sum(a2):\n    print(-1)\nelse:\n    c = 1\n    f = 0\n    s = 0\n    c1 = a1[f]\n    c2 = a2[s]    \n    while s + 1 < len(a2) and f + 1 < len(a1):\n        if c1 == c2:\n            f += 1\n            s += 1              \n            c += 1\n            c1 = a1[f]\n            c2 = a2[s]             \n        elif c1 > c2:\n            s += 1\n            c2 += a2[s]            \n        else:\n            f += 1\n            c1 += a1[f]\n    print(c)"]