["q=list(map(int,input().split()))\na=[]\ns=[]\nfor i in range(0,q[0]):\n    s+=[min(list(map(int,input().split())))]\nprint(max(s))\n", "read = lambda: list(map(int, input().split()))\nn, m = read()\nc = [tuple(read()) for i in range(n)]\nans = 0\nfor i in range(n):\n    cur = min(c[i])\n    if cur > ans: ans = cur\nprint(ans)\n", "n, m = list(map(int, input().split()))\na = []\nb = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\n    b.append(min(a[i]))\nprint(max(b))\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n\n\n(n, m) = (int(i) for i in input().split())\nans    = 0\n\nfor i in range(n):\n    b = min([int(j) for j in input().split()])\n    if b > ans:\n        ans = b\n\nstart = time.time()\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2016 missingdays <missingdays@missingdays>\n#\n# Distributed under terms of the MIT license.\n\n\"\"\"\n\n\"\"\"\n\nn, m = [int(i) for i in input().split()]\n\ncity = []\n\nfor i in range(n):\n    city.append([int(i) for i in input().split()])\n\nma = 0\n\nfor i in range(n):\n    ml = 1e10 # bigger than any\n\n    for j in range(m):\n        ml = min(ml, city[i][j])\n\n    ma = max(ma, ml)\n\nprint(ma)    \n", "n, m = list(map(int, input().split()))\n\nstreets = []\n\nfor a in range(0, n):\n    street = list(map(int, input().split()))\n    streets.append(min(street))\n\nprint(max(streets))\n", "n, m = map(int, input().split())\n\nmas = []\n\nfor i in range(n):\n    cur = list(map(int, input().split()))\n    mas.append(min(cur))\n\nprint(max(mas))", "n, m = list(map(int, input().split()))\nstreets = [list(map(int, input().split())) for _ in range(n)]\nprint(max([min(x) for x in streets]))\n", "n, m = map(int, input().split())\n\nmat = []\nmaxi = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    mini = min(a)\n    maxi = max(maxi, mini)\nprint(maxi)", "n, m = [int(i) for i in input().split()]\na = [[int(j) for j in input().split()] for i in range(n)]\nprint(max([min(i) for i in a]))\n", "n, m = map(int, input().split())\nprint(max(min(map(int, input().split())) for i in range(n)))", "n, m = list(map(int, input().split(' ')[:2]))\n\nc = [list(map(int, input().split(' ')[:m])) for _ in range(n)]\n\nmins = list(map(min, c))\n\nprint(max(mins))\n", "n, m = (int(i) for i in input().split())\nmasha = {}\npasha = {}\nmax = 0\nvybor = 0\nfor i in range(1, n+1):\n    street = [int(i) for i in input().split()]\n    mininstreet = min(street)\n    pasha.update({i:mininstreet})\n    if max <= mininstreet:\n        max = mininstreet\n        vybor = i\nprint(pasha[vybor])", "import sys\nn,m = list(map(int,sys.stdin.readline().split()))\nt = -1\nfor i in range(n):\n    a = [1] * m\n    a = list(map(int,sys.stdin.readline().split()))\n    k = min(a)\n    t = max(k,t)\nprint(t)\n\n", "n, m = map(int, input().split())\nprint(max([min(list(map(int, input().split()))) for i in range(n)]))", "n, m = [int(_) for _ in input().split()]\n\nans = []\nfor i in range(n):\n\tary = []\n\tinp = input().split()\n\tfor q in inp:\n\t\tary.append(int(q))\n\tans.append(min(ary))\n\nprint(max(ans))\n", "def main():\n    n, m = map(int, input().split())\n    l = []\n\n    for _ in range(n):\n        a = list(map(int, input().split()))\n        l.append(min(a))\n\n    print(max(l))\n\ndef __starting_point():\n    main()\n__starting_point()", "n,m=list(map(int,input().split()))\nmn=0\nfor i in range(n):\n    mas=list(map(int,input().split()))\n    if mn<min(mas):\n        mn=min(mas)\nprint(mn)\n\n", "n, m = map(int, input().split())\nans = 0\nfor i in range(n):\n    ans = max(ans, min((map(int, input().split()))))\nprint(ans)", "s=input().split()\nn=int(s[0])\nm=int(s[1])\ntown=[]\ntown = []\nminpricestreet=[]\nfor i in range(n):\n    row = input().split()\n    for k in range(len(row)):\n        row[k] = int(row[k])\n    town.append(row)\n    minpricestreet.append(min(row))\n \nmaxposprice=0\n  \nfor i in (list(range(n))):\n    if minpricestreet[i]>maxposprice:\n        street_num=i\n        maxposprice=minpricestreet[i]\n\nprice=min(town[street_num])\n    \n        \nprint(price)        \n", "n, m = map(int, input().split())\nmin1 = -1\nfor i in range(n):\n    help = list(map(int, input().split()))\n    min1 = max(min1, min(help))\nprint(min1)", "n, m = [int(x) for x in input().split()]\nX = []\nfor i in range(n):\n    X.append([int(x) for x in input().split()])\n\nprint(max(min(Xi) for Xi in X))\n", "n,m = map(int,input().split())\nprint(max([min(list(map(int,input().split()))) for _ in range(n)]))", "n , m = tuple(map(int, input().split()))\nl = [list(map(int, input().split())) for i in range(n)]\nmins = [min(l[i]) for i in range(n)]\nprint(max(mins))", "r,c =list(map(int,input().split()))\nop=[]\nfor i in range(r):\n    ip=list(map(int,input().split()))\n    op.append(min(ip))\nprint(max(op))\n    \n"]