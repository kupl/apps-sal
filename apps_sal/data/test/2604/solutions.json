["R=lambda:list(map(int,input().split()))\nr,d=R()\ndef ok():\n  x,y,z=R()\n  return 1 if (r-d+z)**2<=x*x+y*y<=(r-z)**2 else 0\nprint(sum(ok() for i in range(int(input()))))\n", "read = lambda: map(int, input().split())\nR, d = read()\nn = int(input())\ncnt = 0\nfor i in range(n):\n    x, y, r = read()\n    p = (x ** 2 + y ** 2) ** 0.5\n    if p - r >= R - d and p + r <= R:\n        cnt += 1\nprint(cnt)", "r,d=list(map(int,input().split()))\ncount=0\nfor i in range(int(input())):\n    x,y,r1 = list(map(int,input().split()))\n    k = (x*x+y*y)**0.5\n    if (k-r1)>=(r-d) and (k+r1)<=r:\n        count+=1\nprint(count)\n", "from sys import stdin, stdout\n\nr,d = list(map(int,stdin.readline().rstrip().split()))\nn = int(stdin.readline().rstrip())\ncrust = 0\n\nfor _ in range(n):\n    x,y,ri = list(map(int,stdin.readline().rstrip().split()))\n    z = (x**2+y**2)**0.5\n    if z-ri>=(r-d) and z+ri<=r:\n        crust+=1\n\nprint(crust)\n", "r,d=map(int,input().split())\nr-=d\nn=int(input())\nk=0\nfor _ in range(n):\n    x,y,h=map(int,input().split())\n    l=(x**2+y**2)**(1/2)\n    if l-h>=r and l+h<=r+d:\n        k+=1\nprint(k)", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return map(int,input().split())\ndef map_string():\n    return input().split()\n    \ndef incrust(d,r,dist):\n    return r-d <= dist and dist <= r \n    \nfrom math import sqrt    \n    \nr,d = map_input()\nn = int(input())\nans = 0\nfor i in range(n):\n    x,y,z = map_input()\n    if incrust(d,r,sqrt(x**2+y**2)+z) and incrust(d,r,sqrt(x**2+y**2)-z):\n        ans += 1 \n        # print(i)\nprint(ans)    ", "from sys import stdin\nfrom math import hypot\nr, d = [int(i) for i in stdin.readline().split()]\nr1 = r - d\nn = int(stdin.readline())\nans = 0\neps = 0.0000001\n\ndef ge0(a):\n    return (a >= 0 or abs(a) <= eps)\n\nfor i in range(n):\n    x, y, r2 = [int(i) for i in stdin.readline().split()]\n    d = hypot(x, y)\n    if ge0(d - r1 - r2) and ge0(r - d - r2):\n        ans += 1\n\nprint(ans)\n    \n", "from sys import stdin\nfrom math import sqrt\n\nr, d = list(map(int, stdin.readline().split()))\nn = int(stdin.readline())\ndata = []\nfor i in range(0, n):\n    data.append(list(map(int, stdin.readline().split())))\n\nrs = 0\nfor i in range(0, n):\n    D = sqrt(data[i][0] ** 2 + data[i][1] ** 2)\n    rs += 1 if (r - d <= D - data[i][2] and r >= D + data[i][2]) else 0\n\nprint(rs)\n", "from math import *\nimport itertools as it\nfrom collections import *\n\nEPS = 1e-9\ndef get_int()   : return int(input().strip())\ndef get_string(): return input().strip()\ndef get_array() : return list(map(int, input().strip().split(' ')))\n\ndef print_array(a, glue = ' '):\n    print(glue.join(map(str, a)))\n\ndef print_grid(grid, glue = ' '):\n    for row in grid:\n        print_array(row, glue)\n\n#====================================#\n\ndef solve():\n    R, D = get_array()\n    n = get_int()\n    r = []\n    cnt = 0\n    for i in range(n):\n        x, y, z = get_array()\n        d = sqrt(x ** 2 + y ** 2)\n        if d + z <= R and d - z >= R- D:\n            cnt += 1\n    return cnt\n    \n\nntest = 1\n# ntest = get_int()\nfor _ in range(ntest):\n    print(solve())\n", "3\n\ndef read_ints():\n\treturn [int(i) for i in input().split()]\n\nr, d = read_ints()\nn = int(input())\ncnt = 0\nfor i in range(n):\n\tx, y, r_i = read_ints()\n\tif (\n\t\tx ** 2 + y ** 2 >= (r - d + r_i) ** 2\n\t\tand x ** 2 + y ** 2 <= (r - r_i) ** 2\n\t):\n\t\tcnt += 1\n\nprint(cnt)", "R, d = list(map(int, input().split(\" \")))\nn = int(input())\n\ncaught = 0\n\nfor i in range(n):\n\n    x,y,r = list(map(int, input().split(\" \")))\n\n    if (R-d+r)*(R-d+r) <= x*x+y*y and x*x+y*y <= (R-r)*(R-r):\n\n        caught +=1\n\nprint(caught)\n\n", "r, d = list(map(int, input().split()))\nn = int(input())\nans = 0\nfor _ in range(n):\n    xi, yi, ri = list(map(int, input().split()))\n    if (r - d + ri)**2 <= xi**2 + yi**2 and xi**2 + yi**2 <= (r - ri)**2:\n        ans += 1\nprint(ans)\n", "# your code goes here\nimport math\narr = input().split()\nr = int(arr[0])\nd = int(arr[1])\n\nn = int(input())\nctr = 0\nfor i in range(n):\n\tarr = input().split()\n\tx = int(arr[0])\n\ty = int(arr[1])\n\tz = int(arr[2])\n\t\n\tx = abs(x)\n\ty = abs(y)\n\t\n\tl = math.sqrt(x*x + y*y)\n\tl -= z\n\tm = l + z + z\n\tif l >= r-d and m <= r:\n\t\tctr += 1\nprint(str(ctr))", "import math\nr, d = map(int, input().split())\nn = int(input())\nc = 0\nfor i in range(n):\n    x, y, z = map(int, input().split())\n    if math.sqrt(x**2 + y**2) - z >= r - d and math.sqrt(x**2 + y**2) + z <= r:\n        c += 1\nprint(c)", "from sys import stdin, stdout \nfrom math import sqrt\n\ndef main():\n    rayon, croute = map(int, stdin.readline().split())\n    nbSaus = int(stdin.readline())\n    diff = rayon-croute\n    total = 0\n    for _ in range(nbSaus):\n        x, y, r = map(int, stdin.readline().split())\n        dist = sqrt(x**2+y**2)\n        distMin = dist-r\n        distMax = dist+r \n        if distMin>=diff and distMax>=diff and distMin<=rayon and distMax<=rayon:\n            total+=1\n              \n        \n    stdout.write(str(total)) \n    \nmain()", "from math import sqrt\nr,d = map(int, input().split())\nn = int(input())\n\nans = 0\nfor i in range(n):\n    x,y,c = map(int, input().split())\n    if max(sqrt(x**2 + y**2) - c, 0) >= (r-d) and sqrt(x**2 + y**2) + c <= r:\n        ans += 1\nprint(ans)", "R,D = map(int,input().split())\nD = R-D\nn = int(input())\n\nfrom math import sqrt\n\ncnt = 0\nfor i in range(n):\n  x,y,r = map(int,input().split())\n\n  p = x*x+y*y\n  if (D+r)**2 <= p <= (R-r)**2:\n    cnt += 1\n\nprint(cnt)", "\nr, d = list(map(int, input().split()))\nn = int(input())\ncounter = 0\nfor i in range(n):\n    x,y,r_k = list(map(int, input().split()))\n    if (x**2 + y**2)**(1.0/2.0) - r_k >= r-d and (x**2 + y**2)**(1.0/2.0) + r_k <= r:\n        counter += 1\nprint(counter)\n\n", "ls=list(map(int,input().split()))\nr=ls[0]\nd=ls[1]\nn=int(input())\nans=0\nfor i in range(n):\n    l=list(map(int,input().split()))\n    x=l[0]\n    y=l[1]\n    rd=l[2]\n    ds=(((abs(x)**2)+(abs(y)**2))**0.5)\n    if ds-rd>=r-d and ds+rd<=r:\n        ans+=1\nprint(ans)\n", "radius, width = input().split()\nradius, width = int(radius), int(width)\n\nsausages = int(input())\ncount = 0\n\nfor _ in range(sausages):\n    x, y, r = input().split()\n    x, y, r = int(x), int(y), int(r)\n\n    dist = (x**2 + y**2)**0.5\n\n    if ((dist - r) >= radius - width) and ((dist + r) <= radius):\n        count += 1\n\nprint(count)\n", "r,d=map(int,input().split())\nn=int(input())\nk=0\nfor i in range(n):\n\tx,y,w=map(int,input().split())\n\tl=(x**2+y**2)**(1/2)\n\tif l-w>=r-d and l+w<=r:\n\t\tk+=1\nprint(k)", "q,w=list(map(int,input().split()))\ne=0\nr=q-w\nfor i in range(0,int(input())):\n    a,s,d=list(map(int,input().split()))\n    f=(a*a+s*s)**0.5\n    if ((f+d<=q)&(f-d>=r)):\n        e+=1\nprint(e)\n", "from math import sqrt\n\ndef dist(x1, y1):\n    return sqrt(x1*x1 + y1*y1)\n\n\n\nr, d = list(map(int, input().split()))\nn = int(input())\nres = 0\nfor i in range(n):\n    x, y, i = list(map(int, input().split()))\n    if((dist(x, y) - i) >= (r - d)) and ((dist(x, y) + i) <= r):\n        res+=1\nprint(res)\n", "from sys import stdin\nimport math\n\ndef distance(x,y):\n\treturn abs(math.sqrt(x*x+y*y)) \n\ndef check(x,y,rad):\n\tdist = distance(x,y)\n\tif((dist+rad)<=r and dist-rad>=(r-d)):\n\t\treturn True\n\telse:\n\t\treturn False\n\n\nr,d=list(map(int,input().split()))\nn=int(input())\ncount=0\nfor u in range(n):\n\tx,y,rad=list(map(int,input().split()))\n\tif(check(x,y,rad)):\n\t\tcount+=1\nprint(count)", "R, d = list(map(int, input().split()))\nn = int(input())\ncnt = 0\nfor _ in range(n):\n    x, y, r = list(map(int, input().split()))\n    s = (x**2 + y**2)**(1/2)\n    if s + r <= R and s - r >= R - d:\n        cnt += 1\nprint(cnt)\n\n\n"]