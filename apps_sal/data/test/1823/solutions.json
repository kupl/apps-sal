["n, k = map(int, input().split())\nt = list(map(int, input().split()))\nt = [t[0]] + [t[i] for i in range(1, len(t)) if t[i] != t[i - 1]]\np = [0] * (k + 1)\nfor i in range(1, len(t) - 1):\n    if t[i - 1] == t[i + 1]: p[t[i]] += 2\n    else: p[t[i]] += 1\np[t[0]] += 1\np[t[-1]] += 1\nprint(p.index(max(p)))", "import sys\n\ndef solve():\n    n, k = map(int, input().split())\n    bada = list(map(int, input().split()))\n    a = list()\n    for i in range(len(bada)):\n        if len(a) > 0 and bada[i] == a[-1]: continue\n        a.append(bada[i])\n    bad = [0] * (k + 1)\n    for i, val in enumerate(a):\n        if i + 1 >= len(a) and i == 0: continue\n        if i + 1 >= len(a):\n            bad[val] += 1\n        elif i == 0:\n            bad[val] += 1\n        else:\n            before = a[i-1]\n            after = a[i+1]\n            bad[val] += 2 if before == after else 1\n    which = -1\n    howmany = -1\n    for i in range(len(bad)):\n        if bad[i] > howmany:\n            which = i\n            howmany = bad[i]\n    print(which)\n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()", "__author__ = 'Michael Ilyin'\n\n\ndef prepare(a):\n    na = []\n    last = 0\n    for i in range(0, len(a)):\n        if last != a[i]:\n            na.append(a[i])\n            last = a[i]\n    return na\n\n\nheader = input()\nfilms = int(header[:header.find(' ')])\ngenres = int(header[header.find(' '):])\nnumbers = [int(x) for x in input().split()]\nres = [[genre, 0] for genre in range(1, genres + 1)]\nnumbers = prepare(numbers)\nfilms = len(numbers)\n\nfor i, obj in enumerate(numbers):\n    if i == 0:\n        res[obj - 1][1] += 1\n        continue\n    if i == films - 1:\n        res[obj - 1][1] += 1\n        continue\n    if numbers[i - 1] == numbers[i + 1]:\n        res[obj - 1][1] += 2\n    else:\n        res[obj - 1][1] += 1\nres = sorted(res, key=lambda x: x[0], reverse=False)\nres = sorted(res, key=lambda x: x[1], reverse=True)\nprint(str(res[0][0]))", "# 1  2  3  2  3  1  3\n#  12 23 32 23 31 13\n# 1 1 2 3 2 3 3 1 1 3\n#      112 123 232 323 233 331 311 113\n# 12/21  1   0   0   0   0   1   0   0\n# 23/32  0   1   1   1   0   0   0   0\n# 13/31  0   1   0   0   0   1   0   0\n\n\n# 1 2 3 1 2 3 1 2 3| 1\n# \t    123 231 312 123 231 312 123 231\n# 12/21  1   1   1   0   1   1   0   1    \n# 23/32  1   1   0   1   0   1   1   0\n# 13/31  1   1   0   1   1   0   1   1\n\n# with open('h.in', 'r') as inputFile, open('h.out', 'w') as outputFile:\n\t# (n,k) = [int(x) for x in inputFile.readline().strip().split(' ')]\n\t# dataF = inputFile.readline().strip().split(' ');\n(n,k) = [int(x) for x in input().strip().split(' ')]\ndataF = input().strip().split(' ');\ndataF = [int(x) for x in dataF]\ndata = [0]\nfor i in range(len(dataF)):\n\tif (data[len(data)-1] != dataF[i]):\n\t\tdata.append(dataF[i])\ndata = data[1:]\nres = {x:0 for x in set(data)}\nres[data[0]] += 1\nres[data[len(data)-1]] += 1\nfor i in range(0,len(data)-2,1):\n\tprev = data[i]\n\tcurr = data[i+1]\n\tnext = data[i+2]\n\tif (prev == next):\n\t\tres[curr] += 2\n\tif (prev != next):\n\t\tres[curr] += 1\nprint(max(res, key=res.get))\n\n\t\n", "num_days, num_genres = list(map(int, input().split()))\nschedule = list(map(int, input().split()))\n\ncompressed = []\ncurrent = schedule[0]\npos = 1\nwhile True:\n    compressed.append(current)\n    while pos < num_days and schedule[pos] == current:\n        pos += 1\n    if pos < num_days:\n        current = schedule[pos]\n    else:\n        break\n\nscore = (num_genres + 1) * [ 0 ]\nscore[compressed[0]] += 1\nfor i in range(2, len(compressed)):\n    score[compressed[i - 1]] += 1\n    if compressed[i - 2] == compressed[i]:\n        score[compressed[i - 1]] += 1\nscore[compressed[len(compressed) - 1]] += 1\n\nbest_score, best_genre = -1, -1\nfor genre in range(1, num_genres + 1):\n    if score[genre] > best_score:\n        best_score = score[genre]\n        best_genre = genre\nprint(best_genre)\n", "num_days, num_genres = list(map(int, input().split()))\nschedule = list(map(int, input().split()))\n\ncompressed = []\ncurrent = schedule[0]\npos = 1\nwhile True:\n    compressed.append(current)\n    while pos < num_days and schedule[pos] == current:\n        pos += 1\n    if pos < num_days:\n        current = schedule[pos]\n    else:\n        break\n\nscore = (num_genres + 1) * [ 0 ]\nscore[compressed[0]] += 1\nfor i in range(2, len(compressed)):\n    score[compressed[i - 1]] += 1\n    if compressed[i - 2] == compressed[i]:\n        score[compressed[i - 1]] += 1\nscore[compressed[len(compressed) - 1]] += 1\n\nbest_score, best_genre = -1, -1\nfor genre in range(1, num_genres + 1):\n    if score[genre] > best_score:\n        best_score = score[genre]\n        best_genre = genre\nprint(best_genre)\n\n\n\n\n# Made By Mostafa_Khaled\n", "n,k=map(int,input().split())\na=[int(i) for i in input().split()]\na=[0]+a+[0]\ni=1 \ntot=0 \nj=1 \ncnt=[0]*(k+1)\nwhile i<=n:\n    while j<=n and a[j]==a[i]: j+=1 \n    tot+=1 \n    if a[i-1]==a[j]:\n        cnt[a[i]]+=2 #gain a strain of 2 if we remove a[i]\n    else:\n        cnt[a[i]]+=1 \n    i=j \ntot-=1 \nans=tot\n#print(cnt)\nfor i in range(1,k+1):\n    if ans>tot-cnt[i]:\n        ans=tot-cnt[i]\n        res=i \nprint(res)", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\nn, k = mints()\na = list(mints())\ni = 0\nc = [0]*(k+1)\nwhile i < n:\n\tj = i\n\twhile j < n and a[j] == a[i]:\n\t\tj += 1\n\tif i - 1 >= 0:\n\t\tif j < n:\n\t\t\tif a[i-1] != a[j]:\n\t\t\t\tc[a[i]] += 1\n\t\t\telse:\n\t\t\t\tc[a[i]] += 2\n\t\telse:\n\t\t\tc[a[i]] += 1\n\telif j < n:\n\t\t\tc[a[i]] += 1\n\ti = j\nz = 1\nfor i in range(k+1):\n\tif c[z] < c[i]:\n\t\tz = i\nprint(z)\n", "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\ns = [0 for i in range(k)]\nb = [a[0]]\nfor i in range(1, n):\n    if a[i] == b[-1]:\n        continue\n    else:\n        b.append(a[i])\ny = len(b)\nfor i in range(y):\n    if i == 0 and b[i] != b[i + 1]:\n        s[a[0] - 1] += 1\n    elif i == y - 1 and b[i] != b[i - 1]:\n        s[b[y - 1] - 1] += 1\n    else:\n        if b[i - 1] == b[i + 1]:\n            s[b[i] - 1] += 2\n        else:\n                s[b[i] - 1] += 1\nx = max(s)\nprint(s.index(x) + 1)", "n, k = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt = [t[0]] + [t[i] for i in range(1, len(t)) if t[i] != t[i - 1]]\np = [0] * (k + 1)\nfor i in range(1, len(t) - 1):\n    if t[i - 1] == t[i + 1]:\n        p[t[i]] += 2\n    else:\n        p[t[i]] += 1\np[t[0]] += 1\np[t[-1]] += 1\nprint(p.index(max(p)))\n", "n,k=map(int,input().split())\nlst=[*map(int,input().split())]\na,length=[lst[0]],0\nfor i,x in enumerate(lst[1:]):\n    if x!=lst[i]:a.append(x);length+=1\nd={i:length for i in range(1,k+1)}\nd[a[0]]-=1\nfor i,x in enumerate(a[1:-1]):\n    if a[i]==a[i+2]:d[x]-=2\n    else:d[x]-=1\nd[a[-1]]-=1\nres=min(d.values())\nfor i,x in enumerate(d):\n    if d[x]==res:\n        print(x);break", "n,k = list(map(int,input().split()))\nlis=list(map(int,input().split()))\nans=[]\nfreq=[0]*(k+1)\nfor i in range(n-1):\n    if lis[i]!=lis[i+1]:\n        ans.append(lis[i])\nif lis[-1]!=ans[-1]:\n    ans.append(lis[-1])\n#print(ans,freq)\nl=len(ans)\nfor i in range(1,l-1):\n    if ans[i-1]==ans[i+1]:\n        freq[ans[i]]+=2\n    else:\n        freq[ans[i]]+=1\nfreq[ans[-1]]+=1\nfreq[ans[0]]+=1        \nprint(freq.index(max(freq)))            \n        \n\n\n", "import math\n#n,m=map(int,input().split())\nfrom collections import Counter\n#for i in range(n):\nimport math\n#for _ in range(int(input())):\n#n = int(input())\n#for _ in range(int(input())):\n#n = int(input())\nimport bisect\n'''for _ in range(int(input())):\n\n    n=int(input())\n\n    n,k=map(int, input().split())\n\n    arr = list(map(int, input().split()))'''\n#n, m, k = [int(x) for x in input().split()]\nn,m=list(map(int,input().split()))\narr=list(map(int,input().split()))\nls=[0]*(10**5+1)\npre=arr[0]\nfor i in range(1,n-1):\n    if arr[i]!=arr[i+1]:\n        ls[arr[i]]+=2 if arr[i+1]==pre else 1\n        pre=arr[i]\n\nif arr[0]!=arr[-1]:\n    ls[arr[-1]]+=1\n    if arr[0]!=arr[1]:\n        ls[arr[0]]+=1\n\nvar=ls.index(max(ls))\nmm=max(ls)\n#print(ls[:4])\nif m==2:\n    if 1 in arr and 2 in arr:\n        print(1)\n    else:\n        print(0)\nelse:\n    for i in range(len(ls)):\n        if ls[i] == mm:\n            print(i)\n            break\n\n\n\n\n\n\n\n\n\n\n\n", "n,k=map(int,input().split())\nr=list(map(int,input().split()))\ndist=[]\nans=[0]*(k+1)#precomp\nfor i in range(n):\n\tif i == 0 or r[i] != r[i - 1]:\n\t\tdist.append(r[i])\n# dist = distinct\nfor i in range(len(dist)):\n\tif 0 < i < len(dist) - 1 and dist[i - 1] == dist[i + 1]:\n\t\tans[dist[i]] += 2 # removing dist[i] subtracts 2\n\telse:\n\t\tans[dist[i]] += 1\nu, v = -1, -1\nfor k in range(1, k + 1):\n\tif ans[k] > u: u, v = ans[k], k\nprint (v)"]