["import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, x = list(map(int, input().split()))\n    x -= 1\n\n    degree = [0] * n\n    edges = [(0,0)]*(n-1)\n    for i in range(n - 1):\n        u, v = list(map(int, input().split()))\n        edges[i] = (u-1,v-1)\n        degree[u-1] += 1\n        degree[v-1] += 1\n\n    if degree[x] == 1 or degree[x] == 0:\n        print('Ayush')\n    else:\n        print('Ashish' if n % 2 else 'Ayush')\n", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,x = map(int,input().split())\n  ab = [list(map(int,input().split())) for i in range(n-1)]\n  graph = [[] for i in range(n+1)]\n  for a,b in ab:\n    graph[a].append(b)\n    graph[b].append(a)\n  if len(graph[x]) == 1 or n == 1:\n    print(\"Ayush\")\n    continue\n  if n%2:\n    print(\"Ashish\")\n  else:\n    print(\"Ayush\")", "from collections import Counter\nT = int(input().strip())\nfor t in range(T):\n    hh = Counter()\n    n, x = list(map(int, input().split()))\n    for i in range(n-1):\n        a, b = list(map(int, input().split()))\n        hh[a] += 1\n        hh[b] += 1\n    if hh[x] <=1:\n        print('Ayush')\n    elif n % 2:\n        print('Ashish')\n    else:\n        print('Ayush')\n", "T = int(input())\nfor _ in range(T):\n    N, s = map(int, input().split())\n    s -= 1\n    X = [[] for _ in range(N)]\n    for i in range(N - 1):\n        a, b = map(int, input().split())\n        a, b = a-1, b-1\n        X[a].append(b)\n        X[b].append(a)\n    \n    if len(X[s]) <= 1:\n        print(\"Ayush\")\n        continue\n    \n    if (N - 3) % 2:\n        print(\"Ayush\")\n    else:\n        print(\"Ashish\")", "class Node:\n    def __init__(self):\n        self.adj = []\n\ndef solve():\n    n, x = list(map(int, input().split()))\n    x -= 1\n    nodes = [Node() for _ in range(n)]\n\n    for _ in range(n - 1):\n        u, v = list(map(int, input().split()))\n        u -= 1\n        v -= 1\n        nodes[u].adj.append(v)\n        nodes[v].adj.append(u)\n\n    if len(nodes[x].adj) == 1 or n == 1:\n        return \"Ayush\"\n\n    return 'Ashish' if n % 2 == 1 else 'Ayush'\n\n\nt = int(input())\n\nfor _ in range(t):\n    print(solve())\n", "for t in range(int(input())):\n    n, x = map(int,input().split())\n    nm = 0\n    for i in range(n - 1):\n        a,b = map(int,input().split())\n        if a == x: nm += 1\n        elif b == x: nm += 1\n    if nm < 2:\n        print(\"Ayush\")\n    else:\n        if n % 2:\n            print(\"Ashish\")\n        else:\n            print(\"Ayush\")", "for _ in range(int(input())):\n    n, x = list(map(int, input().split()))\n    neighbors = [[] for _ in range(n)]\n    for _ in range(n-1):\n        u, v = list(map(int, input().split()))\n        neighbors[u-1].append(v-1)\n        neighbors[v-1].append(u-1)\n    x-=1\n\n    if len(neighbors[x]) < 2:\n        print(\"Ayush\")\n        continue\n\n    if n % 2 == 1:\n        print(\"Ashish\")\n    else:\n        print(\"Ayush\")\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,x=list(map(int,input().split()))\n    ANS=0\n    \n    for i in range(n-1):\n        u,v=list(map(int,input().split()))\n        if u==x or v==x:\n            ANS+=1\n\n    if ANS<=1:\n        print(\"Ayush\")\n        continue\n\n    if n%2==0:\n        print(\"Ayush\")\n    else:\n        print(\"Ashish\")\n        \n", "t=int(input())\nfor _ in range(t):\n    n,x=map(int,input().split())\n    adj=[[] for i in range(n+1)]\n    for i in range(n-1):\n        u,v=map(int,input().split())\n        adj[u].append(v)\n        adj[v].append(u)\n    if n<=2:\n        print(\"Ayush\")\n    else:\n        if len(adj[x])<=1:\n            print(\"Ayush\")\n        else:\n            if n&1:\n                print('Ashish')\n            else:\n                print(\"Ayush\")"]