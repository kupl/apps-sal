["import bisect\n\n_ = input()\na = sorted(map(int, input().split()))\n\nn = a[-1]\n\nm = n / 2\nb = bisect.bisect(a, m)\ns = a[b - 1]\nt = a[b]\nif m - s <= t - m:\n    print(n, s)\nelse:\n    print(n, t)", "n=int(input())\nl=sorted(map(int,input().split()))\nm=l.pop()\nt=h=m/2\nr=0\nfor i in l:\n  if (s:=abs(i-h))<t: t,r=s,i\nprint(m,r)", "N=int(input())\na=list(map(int,input().split()))\n\na.sort(reverse=True)\nhalf=a[0]/2\nans1=a[0]\nflag=10**9+10\n\nfor i in range(1,N):\n    if flag>abs(a[i]-half):\n        ans2=a[i]\n        flag=abs(a[i]-half)\n\nprint(ans1,ans2)", "n = int(input())\na = list(map(int,input().split()))\na.sort()\nj = a[-1]\nfor i in range(n):\n    if a[i]*2 > j:\n        break\nif j - a[i-1]*2 > a[i]*2 - j:\n    print(j,a[i])\nelse:\n    print(j,a[i-1])", "from bisect import bisect_right\nn=int(input())\na=sorted(list(map(int,input().split())))\nx=a[-1]\nc=bisect_right(a,x//2)\nif x%2==0:\n    if x//2 in a:\n        print(\"{} {}\".format(x,x//2))\n    else:\n        if a[c]-x//2>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))\n\n        \nelse:\n    if x//2 in a :\n        print(\"{} {}\".format(x,x//2))\n    elif x//2+1 in a:\n        print(\"{} {}\".format(x,x//2+1))\n    else:\n        if a[c]-(x//2+1)>=x//2-a[c-1]:\n            print(\"{} {}\".format(x,a[c-1]))\n        else:\n            print(\"{} {}\".format(x,a[c]))", "n = int(input())\na = list(map(int, input().split()))\nma = max(a)\na = a[:a.index(ma)] + a[a.index(ma)+1:]\nl = []\nfor i in range(n-1):\n    l.append([abs(ma-2*a[i]), \"-\" if ma-2*a[i] >= 0 else \"+\"])\nl.sort()\nprint(ma,end=\" \")\nprint((ma-l[0][0])//2) if l[0][1] == \"-\" else print((ma+l[0][0])//2)", "import bisect\nn,*A=map(int,open(0).read().split());A.sort();m=A[-1];i=bisect.bisect_right(A,m/2)\nprint(m,[A[i-1],A[i]][abs(A[i-1]-m/2)>abs(A[i]-m/2)])", "import bisect\nn=input()\na=sorted(map(int,input().split()))\nm=a[-1]\nq=bisect.bisect_right(a,m/2)\np=q-1\nif abs(m/2-a[p])>abs(m/2-a[q]):print(m,a[q])\nelse:print(m,a[p])", "n = int(input())\na = list(map(int,input().split()))\nai = max(a)\na.remove(ai)\naj = a[0]\nfor i in a:\n    if abs(ai/2-i) < abs(ai/2-aj):\n        aj = i\nprint(ai,aj)", "n = int(input())\naa = sorted(list(map(int, input().split())))\nlist1 = []\nma = aa[-1]\nfor i in range(n):\n  d = abs(aa[i]-(ma+1)//2)\n  list1.append([d,i])\nmd = min(list1, key=lambda x:x[0])\n\nprint(ma, aa[md[1]])", "import bisect\nN = int(input())\nA = sorted(list(map(int, input().split())))\nm = A[-1]\ni = bisect.bisect_left(A, m/2)\nif i == 0:\n  print(m, A[0])\n  return\nif i == N-1:\n  print(m, A[-2])\n  return\na, b = A[i-1], A[i]\nif abs(a*2-m) > abs(b*2-m):\n  print(m, b)\nelse:\n  print(m, a)", "from bisect import bisect_left\nN = int(input())\na = list(map(int,input().split()))\na.sort()\nx = a[-1]\ni = bisect_left(a, x/2, hi=N-2)\nfor j in [i-1, i, i+1]:\n    if 0 <= j < N and abs(a[j]-x/2) < abs(a[i]-x/2):\n        i = j\nprint(x, a[i])", "n = int(input())\naa = list(sorted(map(int, input().split())))\nx = max(aa)\ny = aa[0]\nfor i in range(1, n - 1):\n    if abs(x / 2 - y) > abs(x / 2 - aa[i]):\n        y = aa[i]\nprint((\"{} {}\".format(x, y)))\n", "n = int(input())\nlist_A = list(map(int, input().split()))\nm = max(list_A)\nr, k = 0, 0\nfor a in list_A:\n    if min(m-a, a) > k:\n        r = a\n        k = min(m-a, a)\n \nprint(m, r)", "import bisect\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nnum=a[-1]/2\nb=bisect.bisect_left(a,num)\nif abs(num-a[b])<abs(num-a[b-1]):\n  print(a[-1],a[b])\nelse:\n  print(a[-1],a[b-1])", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nans_n = a[-1]\ndel a[-1]\nans_r = a[0]\n\ndif = 1001001000\nfor i in range(n-1):\n    if dif > abs(ans_n / 2 - a[i]):\n        ans_r = a[i]\n        dif = abs(ans_n / 2 - a[i])\n\nprint('%d %d' % (ans_n, ans_r))", "n=int(input())\nl=sorted(map(int,input().split()))\nm=l.pop()\nh=m/2\nt,r=h,0\nfor i in l:\n  if (s:=abs(i-h))<t: t,r=s,i\nprint(m,r)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nl = a[-1]\ndef bigger(ind):\n    nonlocal a, n, l\n    if a[ind] > l / 2:\n        return True\n    else:\n        return False\ntop = n\nbottom = -1\nwhile top - bottom > 1:\n    mid = (top + bottom) // 2\n    if bigger(mid):\n        top = mid\n    else:\n        bottom = mid\nif a[top] + a[bottom]> l or a[top] == l:\n    print(l, a[bottom])\nelse:\n    print(l, a[top])", "def main():\n    _ = int(input())\n    a = [int(an) for an in input().split()]\n    a.sort()\n    half_val = -(-a[-1] // 2)\n    dist_list = [abs(half_val - an) for an in a[:-1]]\n    min_index = dist_list.index(min(dist_list))\n    print(f'{a[-1]} {a[min_index]}')\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\n\n\ndef solve(n,a):\n  a = list(sorted(a,reverse=True))\n  first = a[0]\n  b = a[1:]\n  delta = [abs(x-first//2) for x in b]\n  second = b[delta.index(min(delta))]\n  return first,second\n\ndef main():\n  N = int(input())\n  a = list(map(int,input().split()))\n  print(*solve(N,a))\n\ndef __starting_point():\n  main()\n__starting_point()", "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef get_primenumber(number):#\u7d20\u6570\u5217\u6319\n    prime_list = []\n    search_list = list(range(2,number+1))\n    #search_list\u306e\u5148\u982d\u306e\u5024\u304c\u221an\u306e\u5024\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\n    while search_list[0] <= math.sqrt(number):\n      #search_list\u306e\u5148\u982d\u306e\u5024\u304c\u221an\u306e\u5024\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\n      #search_list\u306e\u5148\u982d\u3092prime_list\u306b\u5165\u308c\u3066\u3001\u5148\u982d\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u524a\u9664\n        head_num = search_list.pop(0)\n        prime_list.append(head_num)\n        #head_num\u306e\u500d\u6570\u3092\u9664\u53bb\n        search_list = [num for num in search_list if num % head_num != 0]\n    #prime_list\u306bsearch_list\u3092\u7d50\u5408\n    prime_list.extend(search_list)\n    return prime_list\ndef factrization_prime(number):#\u7d20\u56e0\u6570\u5206\u89e3\n    factor = {}\n    div = 2\n    s = math.sqrt(number)\n    while div < s:\n        div_cnt = 0\n        while number % div == 0:\n            div_cnt += 1\n            number //= div\n        if div_cnt != 0:\n            factor[div] = div_cnt\n        div += 1\n    if number > 1:\n        factor[number] = 1\n    return factor\ndef v(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 6)\nmod = 10**9+7\ncnt = 0\nans = 0\nnum = []\ninf = float(\"inf\")\nal = \"abcdefghijklmnopqrstuvwxyz\"\nAL = al.upper()\n\nn = k()\na = l()\n\na.sort()\na = a[::-1]\nA = a[0]\ndel a[0]\nb = inf\nc = 0\n\nfor i in a:\n    if b > abs(A//2-i):\n        b = min(b,abs(A//2-i))\n        c = i\n\nprint(f\"{A} {c}\")", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\n\nnum = a[0]\ntmp = a[1]\nfor j in range(1, n):\n  if abs(tmp-num/2) >= abs(a[j]-num/2):\n    tmp = a[j]\n  else:\n    break\nans = [num, tmp]\nprint(*ans)", "n=int(input())\na=list(map(int,input().split()))\n\na.sort()\n\nmaxa=max(a)\nans=0\nch=0\n\nfor i in range(n-1):\n  b=maxa-a[i]\n  c=min(b,a[i])\n  if c>=ch:\n    ans=a[i]\n    ch=c\n    \nprint(str(maxa)+' '+str(ans))", "import bisect\nimport math\n\nN = int(input())\na = list(map(int, input().split()))\na.sort()\nn = a[-1]\nharf = n/2\nri = bisect.bisect_left(a, harf)\nr = a[ri]\nif ri > 0 and abs(harf-r) >= abs(harf-a[ri-1]):\n  r = a[ri-1]\nprint(n, r)", "import sys\n\nN = int(sys.stdin.readline())\nA = list(map(int, sys.stdin.readline().split()))\n\nn = max(A)\nmid = n / 2\nr = float(\"inf\")\nfor a in A:\n    if a == n:\n        continue\n    if abs(mid - r) > abs(mid - a):\n        r = a\n\nprint(n, r)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nm = a[-1]\nmid = m / 2\n\nd = 10 ** 9\nfor ai in a[:-1]:\n    x = abs(mid - ai)\n    if x < d:\n        ans = ai\n        d = x\n\nprint(m, ans)", "n = int(input())\na = list(map(int,input().split()))\na.sort()\nl = a[-1]\nx = l // 2\ny = 10 ** 12\nz = 0\nfor i in range(n-1):\n    if y >= abs(x-a[i]):\n        y = abs(x-a[i])\n        z = i\nprint(l,a[z])", "def solve():\n  N = int(input())\n  A = [-float('inf')]+list(map(int, input().split()))\n  A.sort()\n  ans = [A[-1]]\n  n = A[-1]//2\n  for i in range(1,N+1):\n    if A[i]>n or i==N-1:\n      if A[i]-n>n-A[i-1]:\n        ans.append(A[i-1])\n      else:\n        ans.append(A[i])\n      break\n  return ans\nprint(*solve())", "N = int(input())\nA = list(map(int, input().split()))\n\nA.sort()\nx = A[-1]\nA.pop()\n\nz = x*10\n\nfor a in A:\n    if abs(x-a*2) < abs(x-z*2):\n        z = a\n\nprint(x, z)", "from bisect import bisect_left, bisect_right\nn = int(input())\na = [int(x) for x in input().split()]\na.sort()\nn = a[-1]\nmid = a[-1] // 2\ni = bisect_left(a[:-1], mid)\n\nif i >= len(a) - 1:\n    r = a[i - 1]\nelif i == 0 or a[i] == mid:\n    r = a[i]\nelif a[i] - mid <= mid - a[i - 1]:\n    r = a[i]\nelse:\n    r = a[i - 1]\n\nprint(n, r)", "n = int(input())\na = list(map(int, input().split()))\n\nmax_a = max(a)\n\nans = 0\nfor i in range(n):\n    if abs(ans - max_a/2) > abs(a[i] - max_a/2):\n        ans = a[i]\n\nprint(max_a, ans)", "n=int(input())-1\na=sorted(list(map(int,input().split())))\nk=a[-1]\nkk=k//2\nx,b=10**9,10**9\nfor i in range(n):\n    if abs(a[i]-kk)<=x:\n        x=abs(a[i]-kk)\n        b=a[i]\nprint(k,b)", "import bisect\nn = int(input())\nA = list(map(int,input().split()))\nA.sort()\nif n == 2:\n  ans = [A[1],A[0]]\n  print(*ans)\n  return\nMAX = A[-1]\ntarget = MAX//2\nok = 0\nng = n\nwhile abs(ok-ng)>1:\n  mid = (ok+ng)//2\n  if A[mid] <= target:\n    ok = mid\n  else:\n    ng = mid\nans = [MAX,A[ok]]\n\nnxt = ok+1\n#print(A[nxt])\nif nxt < n:\n  dif0 = min(MAX-A[ok],A[ok])\n  dif1 = min(MAX-A[nxt],A[nxt])\n  if dif0 < dif1:\n    ans[1] = A[nxt]\nprint(*ans)", "N = int(input())\nA = list(map(int,input().split()))\nA.sort()\nn = A[-1]\n\nd = n\nr = -1\nfor a in A[:-1]:\n    if n%2==0:\n        t = abs(a - n//2)\n        if t < d:\n            d = t\n            r = a\n    else:\n        t = min(abs(a - n//2), abs(a - (n//2+1)))\n        if t < d:\n            d = t\n            r = a\nprint(n,r)", "def getval():\n    n = int(input())\n    a = list(map(int,input().split()))\n    return n,a\n\ndef main(n,a):\n    a.sort()\n    c = a[n-1]\n    R = c/2\n    r = 0\n    for i in a:\n        if abs(R-i)<abs(R-r):\n            r = i \n    print(\"{x} {y}\".format(x=c,y=r))\n\ndef __starting_point():\n    n,a = getval()\n    main(n,a)\n__starting_point()", "N=int(input())\nA=list(map(int,input().split()))\n\nif N == 2:\n  print(*(max(A),min(A)))\n  return\n  \nm = max(A)/2\nnearest=-1\nfor i in range(N):\n  if abs(A[i]-m)<abs(nearest-m):\n    nearest = A[i]\n\nprint(*(max(A),nearest))", "N = int(input())\na = list(map(int,input().split()))\nma = max(a)\na.remove(ma)\nnum = 0\nind = 0\na.sort()\nfor i in range(N-1):\n    if a[i] < ma//2:\n        ind += 1\n\nif ind == 0:\n    print(ma,a[0])\n    return\nelif ind == N-1:\n    print(ma,a[-1])\n    return\n\nif abs(ma//2 - a[ind-1]) < abs(ma//2 - a[ind]):\n    print(ma,a[ind-1])\nelse:\n    print(ma,a[ind])", "n = int(input())\nlist_A = list(map(int, input().split()))\nm = max(list_A)\nr, k = 0, 0\nfor a in list_A:\n    if min(m-a, a) > k:\n        r = a\n        k = min(m-a, a)\n\nprint(m, r)", "n = int(input())\nL = list(map(int,input().split()))\nL .sort()\n\nmaxL = L[-1]\nli = [abs(x-maxL/2) for x in L]\n\na = li.index(min(li))\nprint(maxL,L[a])", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n\n\n    n = I()\n    a = LI()\n\n    mx = max(a)\n    a.remove(mx)\n\n    r = (float(\"inf\"), -1)\n    half = mx//2\n    \n    if mx%2 == 0:\n        for x in a:\n            sa = abs(x-half)\n            if sa < r[0]:\n                r = (sa, x)\n    else:\n        for x in a:\n            sa = min(abs(x-half), abs(x-(half+1)))\n            if sa < r[0]:\n                r = (sa, x)\n\n    ans = (mx, r[1])\n    print((*ans))\n            \n\n                    \n\n\nmain()\n", "_=int(input())\na=list(map(int,input().split()))\na.sort()\nn=max(a)\na=a[:-1]\n\nrc=float('inf')\nrd=0\nr=0\nfor i in a:\n  if rc>abs(i-n/2):\n    r=i\n  rc=min(rc,abs(i-n/2))\n  \nprint(n,r)", "N = int(input())\nA = sorted(list(map(int,input().split())))\nB = A[-1]\nprint(B,min(A,key=lambda x: abs(B-2*x)))", "import bisect\n\ndef main():\n    n=int(input())\n    a=sorted(map(int,input().split()))\n    if len(a) < 3:\n        print(a[1], a[0])\n        return\n    N = a[-1]\n    a = a[:-1]\n    r = bisect.bisect(a, N/2)\n    if r == 0:\n        R = a[0]\n    if r == len(a):\n        R = a[r-1]\n    else:\n        R = a[r] if abs(a[r-1] - N/2) > abs(a[r] - N/2) else a[r-1]\n    print(N, R)\n        \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nr = a.pop(0)\ns = r\ntemp = 0\nfor i in range(n-1):\n    if abs(r - 2*a[i]) < s:\n        s = abs(r - 2*a[i])\n        temp = a[i]\nprint(r, temp)", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\n\nans = a[1]\nfor i in range(1, n-1):\n  if abs(a[0]/2 - a[i]) > abs(a[0]/2 - a[i+1]):\n    ans = a[i+1]\n  else:\n    break\nprint(a[0], ans)", "n=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\ncand=a[1]\nfor i in range(1,n-1):\n  if abs(a[0]/2 - a[i]) > abs(a[0]/2 - a[i+1]):\n    cand = a[i+1]\n  else:\n    break\nprint(a[0], cand)", "n = int(input())\na = sorted(map(int, input().split()))\np = a[-1]\nc = 0\nfor i in range(n-1):\n  if abs(a[i+1]-p/2) < abs(a[i]-p/2):\n    c = a[i+1]\n  else:\n    break\nprint(p,c)", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\nm = max(a) // 2\nres = 0\nc = max(a)\nfor i in range(n-1):\n  if abs(m - a[i]) <= c:\n    res = a[i]\n    c = abs(m - a[i])\nprint(max(a),res)", "import bisect\n\n_ = int(input())\na = sorted(map(int, input().split()))\n\nn = a[-1]\n\nm = n / 2\nb = bisect.bisect(a, m)\ns = a[b - 1]\nt = a[b]\nif m - s <= t - m:\n    print(n, s)\nelse:\n    print(n, t)", "import itertools\nn = int(input())\na = list(map(int, input().split()))\nm = max(a)\nt = (10**9)+1\nfor i in a:\n    if abs(i-(m//2)) < t and i != m:\n        t = abs(i-(m//2))\n        s = i\nprint(m,s)", "from bisect import bisect_left, bisect_right\n\nn = int(input())\nal = list(map(int, input().split()))\nal.sort()\nai = al[-1]\nif ai%2 == 0:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n\n    if abs(aj_best-val1) <= abs(aj_best-val2):\n        aj = val1\n    else:\n        aj = val2\n\n\nelse:\n    aj_best = ai//2\n    ind = bisect_right(al, aj_best) - 1\n    ind = ind if 0 <= ind < n else None\n    val1 = al[ind] if ind is not None else 0\n\n    ind = bisect_left(al, aj_best)\n    ind = ind if 0 <= ind < n else None\n    val2 = al[ind] if ind is not None else ai\n\n    if abs(aj_best-val1) <= abs(aj_best+1-val2):\n        aj = val1\n    else:\n        aj = val2\n\nprint(ai,aj)", "import bisect\n\nN = int(input())\nA = list(map(int, input().split()))\nA.sort()\n\nt, r = divmod(A[-1], 2)\nidx = bisect.bisect_left(A, t)\n\nif r == 1:\n    if idx != 0:\n        if abs(A[idx - 1] - t) < abs(A[idx] - t):\n            idx = idx - 1\nelse:\n    if idx != 0:\n        if abs(A[idx - 1] - t) <= abs(A[idx] - t):\n            idx = idx - 1\n\nprint((' '.join([str(A[-1]), str(A[idx])])))\n\n", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nb=a[-1]/2\ntmp=a[-1]\nfor i in range(n):\n  if tmp>abs(b-a[i]):\n    ans=a[i]\n    tmp=abs(b-a[i])\nprint(a[-1],ans)", "n = int(input())\na = list(map(int,input().split()))\nma = max(a)\ncnt = 10**9\nmid = ma/2\nfor i in range(n):\n    if abs(cnt - mid) >= abs(mid - a[i]):\n        cnt = a[i]\nprint(max(ma,cnt),min(ma,cnt))", "n=int(input())\na=list(map(int,input().split()))\na.sort()\ns=a[-1]/2\nb=[[i,abs(i-s)] for i in a]\nb.sort(key=lambda z:z[1])\nprint(a[-1],b[0][0])", "N = int(input())\nlsa = list(map(int,input().split()))\nn = max(lsa)\nr = 0\nfor i in range(N):\n    r1 = lsa[i]\n    if min(r1,n-r1) >= min(r,n-r):\n        r = r1\nprint(n,r)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nA.append(10**12)\nMAX = A[N-1]\nans = N\nfor i in range(N):\n    if abs(A[i] - MAX/2) < abs(A[ans] - MAX/2):\n        ans = i\nprint(MAX,A[ans])", "import bisect\nn = int(input())\na = sorted(list(map(int, input().split())))\nx = a[-1]\nN = a[-1]//2\n\na = a[:-1]\ny = bisect.bisect_left(a,N)\nif len(a) <= y: ans = a[y-1]\nelse:\n    ans = a[y]\n    if 0 < y and abs(N-ans) > abs(N-a[y-1]): ans = a[y-1]\n    if y < len(a)-1 and abs(N-ans) > abs(N-a[y+1]): ans = a[y+1]\nprint(x,ans)", "N = int(input())\nA = list(map(int,input().split()))\n\nA_max = max(A)\n\nA.remove(A_max)\n\nX = [abs(a-(A_max//2)) for a in A]\n\nX_min_id = X.index(min(X))\n\nprint(A_max,A[X_min_id])", "import bisect\n\n_ = input()\na = [int(i) for i in input().split()]\n\na.sort()\nn = a[-1]\n\nm = n / 2\nb = bisect.bisect(a, m)\ns = a[b - 1]\nt = a[b]\nif m - s <= t - m:\n    print(n, s)\nelse:\n    print(n, t)", "def main():\n\tn = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\tA.sort(reverse=True)\n\tans = []\n\tf = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800]\n\tif A[0] <= 10:\n\t\tfor i in range(n):\n\t\t\tfor j in range(i + 1, n):\n\t\t\t\tans.append({\n\t\t\t\t\t\"max\" : A[i],\n\t\t\t\t\t\"min\" : A[j],\n\t\t\t\t\t\"comb\" : int(f[A[i]] / (f[A[j]] * f[A[i] - A[j]]))\n\t\t\t\t})\n\t\tans.sort(key=lambda s : -s[\"comb\"])\n\t\tprint(ans[0][\"max\"], ans[0][\"min\"])\n\t\treturn 0\n\n\ti = 0\n\tj = 1\n\twhile i < n and j < n:\n\t\tM = A[i]\n\t\tm = A[j]\n\t\tif abs(A[i] / 2 - A[j]) <= 0.5:\n\t\t\tans.append({\"max\": A[i], \"min\": A[j], \"dif\": abs(A[i] / 2 - A[j]), \"k\": min([A[j], A[i] - A[j]])})\n\t\t\ti += 1\n\t\telif A[i] / 2 < A[j]:\n\t\t\tif j < n - 1:\n\t\t\t\tj += 1\n\t\t\telse:\n\t\t\t\tans.append({\"max\": A[i], \"min\": A[j], \"dif\": abs(A[i] / 2 - A[j]), \"k\": min([A[j], A[i] - A[j]])})\n\t\t\t\tj += 1\n\t\telif A[i] / 2 > A[j]:\n\t\t\tif abs(A[i] / 2 - A[j - 1]) > abs(A[i] / 2 - A[j]) or j == i + 1:\n\t\t\t\tans.append({\"max\": A[i], \"min\": A[j], \"dif\": abs(A[i] / 2 - A[j]), \"k\": min([A[j], A[i] - A[j]])})\n\t\t\telse:\n\t\t\t\tans.append({\"max\": A[i], \"min\": A[j - 1], \"dif\": abs(A[i] / 2 - A[j - 1]), \"k\": min([A[j - 1], A[i] - A[j - 1]])})\n\t\t\ti += 1\n\t\tif i == j:\n\t\t\tj += 1\n\n\tans.sort(key=lambda s: (-s[\"k\"], -s[\"max\"]))\n\tk_cand1 = ans[0][\"k\"]\n\tans2_idx = 0\n\n\tfor i in range(len(ans)):\n\t\tif ans[i][\"k\"] == k_cand1 - 1:\n\t\t\tans2_idx = i\n\tif ans2_idx and ans[0][\"max\"] < ans[i][\"max\"]:\n\t\tprint(ans[i][\"max\"], ans[i][\"min\"])\n\telse:\n\t\tprint(ans[0][\"max\"], ans[0][\"min\"])\n\n\n\nmain()", "n = int(input())\na = list(map(int, input().split()))\n\nnmax = max(a)\ntarget = nmax/2\n\ncur = a[0] if a[0] != nmax else a[1]\ncurdiff = abs(cur-target)\n\nfor i in range(n):\n    if a[i] == nmax:\n        continue\n\n    diff = abs(a[i]-target)\n\n    if diff < curdiff:\n        curdiff = diff\n        cur = a[i]\n\nprint(nmax, cur)", "N = int(input())\nA = list(map(int,input().split()))\n\nA.sort()\nmax_el = A[-1]\nmedian = max_el//2\nimport bisect\nmedian_ind = bisect.bisect_left(A,median)\n\nif median_ind == 0:\n    print(A[-1],A[0])\n    return\nif median_ind == N-1:\n    print(A[-1],A[-2])\n    return\n\nabs_right = abs(A[median_ind]-median)\nabs_left = abs(A[median_ind-1]-median)\n\nif abs_right>abs_left:\n    print(A[-1],A[median_ind-1])\n    return\n\nprint(A[-1], A[median_ind])"]