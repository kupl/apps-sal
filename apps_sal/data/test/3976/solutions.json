["from collections import defaultdict\n\nn, m, p = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nu = defaultdict(int)\nfor i in b: u[i] += 1\n\nans = []\nfor q in range(p):\n    c = a[q: n: p]\n    if len(c) < m: break\n\n    v = defaultdict(int)\n    for i in c[: m]: v[i] += 1\n\n    d = q + 1\n    if u == v: ans.append(d)\n\n    for j, k in zip(c[: len(c) - m], c[m: ]):\n        v[j] -= 1\n        if v[j] == 0: v.pop(j)\n        v[k] += 1\n\n        d += p\n        if u == v: ans.append(d)\n\nans.sort()\nprint(len(ans))\nprint(' '.join(map(str, ans)))", "from collections import Counter\n\nn, m, p = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\ndef try_from(start, a, b):\n    result = []\n    seq = a[start::p]\n    i = 0\n    if len(seq) < len(b):\n        return []\n\n    counts_a = Counter(seq[:len(b)])\n    counts_b = Counter(b)\n    if counts_a == counts_b:\n        result.append(start)\n\n    for i in range(1, len(seq) - len(b) + 1):\n        counts_a[seq[i-1]] -= 1\n        counts_a[seq[i+len(b) - 1]] += 1\n        if not counts_a[seq[i-1]]:\n            del counts_a[seq[i-1]]\n\n        ok = counts_a == counts_b\n        #ok = sorted(seq[i:i+len(b)]) == sorted(b)\n\n        if ok:\n            result.append(start + p * i)\n\n    return [x + 1 for x in result]\n\n\nresult = []\nfor start in range(p):\n    result += try_from(start, a, b)\n\nprint(len(result))\nprint(' '.join(map(str, sorted(result))))\n\n\n\n\n\n# Made By Mostafa_Khaled\n"]