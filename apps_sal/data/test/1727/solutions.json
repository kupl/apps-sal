["n = int(input())\np = -float(\"INF\")\nans = 1\nA = []\nfor i in range(n) :\n    x, h = list(map(int, input().split()))\n    A.append([x,h])\nfor i in range(n-1) :\n    x, h = A[i]\n    if x-h > p :\n        ans += 1\n        p = x\n    elif x+h < A[i+1][0] :\n        ans += 1\n        p = x+h\n    else :\n        p = x\nprint(ans)\n", "n = int(input())\nk = []\nfor i in range(n):\n    k.append(list(map(int, input().split())))\n\nif n == 1:\n    print(1)\nelse:\n    ans = 2\n    for i in range(1, n-1):\n        if k[i][0]-k[i][1] > k[i-1][0]:\n            ans += 1\n        elif k[i][0]+k[i][1] < k[i+1][0]:\n            k[i][0] += k[i][1]\n            ans += 1\n    print(ans)", "n = int(input())\nx = [0] * (n + 1)\nh = [0] * (n + 1)\n\nfor i in range(n):\n    x[i], h[i] = (int(c) for c in input().split())\n\nh[n] = 1\nx[n] = x[n-1] + h[n-1] + 1\n\nif n == 1:\n    print(1)\n    return\n\nleft = [0] * n\nright = [0] * n\n\nleft[0] = 1\nif x[0] + h[0] < x[1]:\n    right[0] = 1\n\nfor i in range(1, n):\n    if x[i] + h[i] < x[i + 1]:\n        right[i] = max(right[i-1], left[i-1]) + 1\n    else:\n        right[i] = max(right[i-1], left[i-1])\n\n    if x[i] - h[i] > x[i-1] + h[i-1]:\n        left[i] = max(right[i-1], left[i-1]) + 1\n    elif x[i] - h[i] > x[i-1]:\n        left[i] = left[i-1] + 1\n    else:\n        left[i] = max(right[i-1], left[i-1])\n\nprint(max(left[n-1], right[n-1]))", "a = int(input())\ntrees = []\nfor i in range(a):\n    trees.append([int(x) for x in input().split()])\ntrees.append([1000000000000, 1])\nleft = -10000000000\nc = 0\nfor i in range(a):\n    if trees[i][0] - trees[i][1] > left:\n        left = trees[i][0]\n        c += 1\n    elif trees[i][0] + trees[i][1] < trees[i + 1][0]:\n        left = trees[i][0] + trees[i][1]\n        c += 1\n    else:\n        left = trees[i][0]\nprint(c)", "\n\nn = int(input())\n\narr = [0] * (n + 2)\narr[0] = [-2000000001, -2000000001, 0]\narr[-1] = [2000000001, 2000000001, 0]\nfor i in range(1, n + 1):\n   s = list(map(int, input().split()))\n   arr[i] = [s[0], s[0], s[1]]\nc = 0\nfor i in range(1, n + 1):\n   if (arr[i - 1][0] < (arr[i][0] - arr[i][2])) and (arr[i - 1][1] < (arr[i][0] - arr[i][2])):\n      arr[i][1] = arr[i][0] - arr[i][2]\n      c += 1\n   elif (arr[i + 1][0] > (arr[i][0] + arr[i][2])) and (arr[i + 1][1] > (arr[i][0] + arr[i][2])):\n      arr[i][1] = arr[i][0] + arr[i][2]\n      c += 1\n      #print(i)\nprint(c)", "n = int(input())\ndata = []\nfor i in range(n):\n    x, h = [int(y) for y in input().split()]\n    data.append([x, h])\nlastOccupied = -99999999999\nanswer = 0\nif n == 1:\n    print(1)\n    return\nif n == 2:\n    print(2)\n    return\nfor i in range(n - 1):\n    if data[i][0] - data[i][1] > lastOccupied:\n        answer += 1\n        lastOccupied = data[i][0]\n    elif data[i][0] + data[i][1] < data[i + 1][0]:\n        lastOccupied = data[i][0] + data[i][1]\n        answer += 1\n    else:\n        lastOccupied = data[i][0]\n\nanswer += 1\nprint(answer)\n", "n = int(input())\nar = []\nfor i in range(n):\n    ar.append(list(map(int, input().split())))\nar = list(sorted(ar))\nif n == 1:\n    print(1)\nelse:    \n    sum1 = 0\n    ind = [0] * n\n    r = ar[0][0]\n    for i in range(1, n - 1):\n        if ar[i][0] - ar[i][1] > max(r, ar[i - 1][0]):\n            sum1 += 1\n        elif ar[i][0] + ar[i][1] < ar[i + 1][0]:\n            sum1 += 1\n            r = max(r, ar[i][0] + ar[i][1] )\n        \n    print(sum1 + 2)", "from fileinput import *\n\ndata = []\nfor line in input():\n    if lineno() == 1:\n        [n] = list(map(int, line.split()))\n    else:\n        data.append(list(map(int, line.split())))\n\nif n <= 2:\n    o = n\n\nelse:\n    o = 2\n\n    for i in range(1, n - 1):\n        rminus = data[i][0] - data[i][1]\n        rplus = data[i][0] + data[i][1]\n\n        if rminus > data[i-1][0]:\n            o += 1\n        elif rplus < data[i+1][0]:\n            o += 1\n            data[i][0] = rplus\n\nprint(o)\n", "n = int(input())\n\na = []\nb = []\n\nfor i in range(n):\n\tx,y = map(int,input().split())\n\ta.append(x)\n\tb.append(y)\n\nif(n >= 2):\n\ttotal = 2\nelif(n == 1):\n\ttotal = 1\n\np = a[0]\n\nfor i in range(1,n-1):\n\tc = a[i] - b[i]\n\td = a[i]+b[i]\n\tif(c > 0 and c > p):\n\t\tp = a[i]\n\t\ttotal += 1\n\telif(d < a[i+1]):\n\t\tp = d\n\t\ttotal += 1\n\telse:\n\t\tp = a[i]\n\nprint(total)", "n = int(input())\ns=[]\nfor i in range(n):\n    s.append([tuple(map(int, input().split())), 's'])\nif n >= 2:\n    s[0][1]='l'\n    s[-1][1]='r'\n    ans=2\n    for i in range(1, len(s)-1):\n        l = s[i][0][0]-s[i-1][0][0]\n        r = s[i+1][0][0]-s[i][0][0]\n        if s[i-1][1]=='r':\n            l-=s[i-1][0][1]\n        #print(l, r, s[i][0][1])\n        if s[i][0][1] < l:\n            s[i][1]='l'\n            ans+=1\n            #print(i, end=' ')\n        elif s[i][0][1]<r:\n            s[i][1]='r'\n            ans+=1\n            #print(i+1, end=' ')\n        #print()\n    #print(s)\n    print(ans)\nelse:\n    print(1)\n#print(s)\n", "a=int(input())\nif a==1:\n    b1, c1=map(int, input().split())\n    print(1)\nelse:\n    b1, c1=map(int, input().split())\n    ch=2\n    b2, c2=map(int, input().split())\n    for i in range(a-2):\n        b3, c3=map(int, input().split())\n        if c2<(b2-b1):\n            ch=ch+1\n        elif c2<(b3-b2):\n            ch=ch+1\n            b2=b2+c2\n        b1=b2\n        c1=c2\n        b2=b3\n        c2=c3\n    print(ch)", "n=int(input())\ninp=[[int(x) for x in input().split()] for i in range(n)]\nans=0\nleast=0\nfor i in range(0,n):\n\tif i==0 or least<inp[i][0]-inp[i][1]:\n\t\tans+=1\n\t\tleast=inp[i][0]\n\telif i==n-1 or i+1<n and inp[i][0]+inp[i][1]<inp[i+1][0]:\n\t\tleast=inp[i][0]+inp[i][1]\n\t\tans+=1\n\telse:\n\t\tleast=inp[i][0]\nprint(ans)\n", "n = int(input())\n\ndata = []\nfor i in range(n):\n    a, b =  list(map(int, input().split()))\n    data.append([a,b,0])\n    \nif (n==1):\n    count = 1\nelse:\n    count = 2\n\nfor i in range(1,n-1):\n    if (data[i][0]-data[i-1][0]>data[i][1]):\n        count += 1\n    elif (data[i+1][0]-data[i][0]>data[i][1]):\n        count += 1\n        data[i][0] += data[i][1]\n\nprint(count)\n", "N = int(input())\ntrees = [list(map(int, input().split())) for _ in range(N)]\n\nans = 2 if N >= 2 else 1\nfor i in range(1, N-1):\n    x, h = trees[i]\n    px, ph = trees[i-1]\n    nx, nh = trees[i+1]\n    if px < x - h:\n        ans += 1\n    elif x + h < nx:\n        trees[i][0] = x + h\n        ans += 1\nprint(ans)\n        \n    \n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\n\nn  = int(input())\nX = []\nH = []\n\nfor i in range(n):\n    (x, h) = (int(i) for i in input().split())\n    X += [x]\n    H += [h]\n\nif n < 3:\n    tr = n\nelse:\n    tr = 2\n    min = X[0]\n    for i in range(1, n-1):\n        if min < X[i] - H[i] :\n            tr += 1\n            min = X[i]\n        elif X[i+1]> X[i] + H[i]:\n            tr +=1\n            min = X[i]+H[i]\n        else:\n            min = X[i]\n\nprint(tr)\n\n\n\n", "n = int(input())\nh = [0]*n\nx = [0]*n\nfor i in range(n):\n    x[i], h[i] = list(map(int, input().split()))\nans = 2 if n >= 2 else 1\nfor i in range(1, n-1):\n    if x[i] - x[i-1] > h[i]:\n        ans += 1\n    elif x[i+1] - x[i] > h[i]:\n        ans += 1\n        x[i] += h[i]\nprint(ans)\n", "n = int(input())\n\ncoordinates = []\nheights = []\nfor i in range(n):\n\tx, h = map(int, input().split())\n\tcoordinates.append(x)\n\theights.append(h)\n\nif n == 1:\n\tanswer = 1\nelse:\n\tanswer = 2\nfor i in range(1, n-1):\n\tif coordinates[i]-heights[i] > coordinates[i-1]:\n\t\tanswer += 1\n\telif coordinates[i]+heights[i] < coordinates[i+1]:\n\t\tanswer += 1\n\t\tcoordinates[i] += heights[i]\nprint(answer)", "def solve():\n    n=int(input());\n    h=[0]*n;\n    x=[0]*n;\n    for i in range(n):\n        x[i],h[i]=map(int,input().split());\n    ans=2;\n    for i in range(1,n-1):\n        if(x[i]-x[i-1]>h[i]): ans+=1;\n        elif (x[i+1]-x[i]>h[i]):\n            ans+=1;\n            x[i]+=h[i];\n    if(n<=2): ans=n;\n    print(ans);\nsolve();", "n = int(input())\nposi = []\nhigh = []\nfor _ in range(n):\n    [a,b] = input().strip().split()\n    posi.append(int(a))\n    high.append(int(b))\n\nif 2<n:\n    ans = 0\n    last = posi[0]\n    for i in range(1,n-1):\n        h = high[i]\n        if posi[i]-h>last:\n            ans+=1\n            last = posi[i]\n        elif posi[i]+h < posi[i+1]:\n            ans+=1\n            last = posi[i]+h\n        else:\n            last = posi[i]\n    ans+=2\nelse:\n    ans = n\nprint(ans)\n        \n\n                \n                \n                \n    \n", "n = int(input())\n\ntrees = []\nfor i in range(n):\n    xi, hi = list(map(int, input().split()))\n    trees.append((xi, hi))\n\nif n == 1:\n    print(1)\nelif n == 2:\n    print(2)\nelse:\n    count = 2\n    last = trees[0][0]\n\n    for i in range(1, n - 1):\n        x, h = trees[i]\n        next = trees[i + 1][0]\n        if (x - h) > last:\n            #print(\"last\", trees[i], last, next)\n            count += 1\n            last = x\n        elif (x + h) < next:\n            #print(\"next\", trees[i], last, next)\n            count += 1\n            last = x + h\n        else:\n            last = x\n\n    print(count)\n", "n = int(input())\nl = []\nfor i in range(n):\n    l.append(list(map(int, input().split(\" \"))))\n\nc = 0\nleft = 0\nfor i in range(n):\n    if i == 0:\n        c+= 1\n        left = l[0][0]\n        continue\n    else:\n        if l[i][0] - l[i][1] > left:\n            c+=1\n            left = l[i][0]\n            continue\n        elif not i == n-1:    \n            if l[i][0] + l[i][1] < l[i+1][0]:\n                c+=1\n                left = l[i][0] + l[i][1]\n                continue\n            else: left = l[i][0]\n        elif i == n-1:\n            c+=1\n            break\n        else:\n            left = l[i][0]\n            continue\nprint(c)", "n = int(input())\nx = [0] * n\nh = [0] * n\nfor i in range(n):\n    x[i], h[i] = map(int, input().split())\nans = min(n, 2)\nk = x[0]\nfor i in range(1, n - 1):\n    if x[i] - h[i] > k:\n        ans += 1\n        k = x[i]\n    elif x[i] + h[i] < x[i + 1]:\n        ans += 1\n        k = x[i] + h[i]\n    else:\n        k = x[i]\nprint(ans)", "n = int(input())\ntrees = [ tuple(map(int, input().split())) for i in range(n) ]\n\nprevx = -1e15;\nans = 0\nfor i in range(n):\n    if i == n-1: \n        ans+=1\n        break\n    x,h = trees[i]\n    if x - h > prevx:\n        prevx = x\n        ans += 1\n    elif x + h < trees[i+1][0]: \n        ans += 1\n        prevx = x + h\n    else: prevx = x\nprint(ans)", "n = int(input())\nif(n == 1):\n\tprint(1)\n\treturn\na = [0 for x in range(n)]\nh = [0 for x in range(n)]\nfor x in range(n):\n\ta[x], h[x] = map(int,input().split())\n\ndp = [[0 for x in range(3)] for x in range(n)]\n## 0 left 1 stay 2 right\nL = 0\nS = 1\nR = 2\ndp[0][L] = 1\ndp[0][S] = 0\ndp[0][R] = 1 if a[0] + h[0] < a[1] else 0\nfor x in range(1,n):\n\t## Stay\n\tdp[x][S] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\t\n\t## Left\n\tif(a[x] - h[x] > a[x-1]):\n\t\tdp[x][L] = max(dp[x-1][L],dp[x-1][S]) ## S L\n\t\tif(a[x-1] + h[x-1] < a[x] - h[x]):\n\t\t\tdp[x][L] = max(dp[x][L], dp[x-1][R]) ## R L\n\t\tdp[x][L] += 1\n\telse:\n\t\tdp[x][L] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\t\n\t## Right\n\tif(x + 1 >= n or a[x] + h[x] < a[x+1]):\n\t\tdp[x][R] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R]) + 1\n\telse:\n\t\tdp[x][R] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\t\n\t## print(dp[x][L],dp[x][S],dp[x][R])\n\nprint(max(dp[n-1][L],dp[n-1][S],dp[n-1][R]))", "n = int(input())\nif(n == 1):\n\tprint(1)\n\treturn\na = [0 for x in range(n)]\nh = [0 for x in range(n)]\nfor x in range(n):\n\ta[x], h[x] = list(map(int,input().split()))\n\ndp = [[0 for x in range(3)] for x in range(n)]\n## 0 left 1 stay 2 right\nL = 0\nS = 1\nR = 2\ndp[0][L] = 1\ndp[0][S] = 0\ndp[0][R] = 1 if a[0] + h[0] < a[1] else 0\nfor x in range(1,n):\n\t## Stay\n\tdp[x][S] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\t\n\t## Left\n\tif(a[x] - h[x] > a[x-1]):\n\t\tdp[x][L] = max(dp[x-1][L],dp[x-1][S]) ## S L\n\t\tif(a[x-1] + h[x-1] < a[x] - h[x]):\n\t\t\tdp[x][L] = max(dp[x][L], dp[x-1][R]) ## R L\n\t\tdp[x][L] += 1\n\telse:\n\t\tdp[x][L] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\t\n\t## Right\n\tif(x + 1 >= n or a[x] + h[x] < a[x+1]):\n\t\tdp[x][R] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R]) + 1\n\telse:\n\t\tdp[x][R] = max(dp[x-1][L],dp[x-1][S],dp[x-1][R])\n\nprint(max(dp[n-1][L],dp[n-1][S],dp[n-1][R]))\n"]