["N = int(input())\ncnt = [0] * N\nfor n in range(N - 1):\n    u, v = list(map(int, input().split()))\n    cnt[u - 1] += 1\n    cnt[v - 1] += 1\n\nprint(sum(x == 1 for x in cnt))\n", "n = int(input().strip())\ngraph = [[] for i in range(n)]\nfor _ in range(n-1):\n    a, b = map(int, input().split())\n    graph[a-1].append(b-1)\n    graph[b-1].append(a-1)\ncount = 0\nfor g in graph:\n    if len(g) < 2:\n        count += 1\nprint(count)", "N = int(input())\nsrc = [tuple([int(x)-1 for x in input().split()]) for i in range(N-1)]\nes = [[] for i in range(N)]\nfor a,b in src:\n    es[a].append(b)\n    es[b].append(a)\nans = 0\nfor e in es:\n    if len(e) == 1:\n        ans += 1\nprint(ans)\n", "graph, num = {}, 0\nn = int(input())\nfor i in range(n-1):\n  a, b = [int(i) for i in input().split()]\n  if a not in graph: graph[a] = []\n  graph[a].extend([b])\n  if b not in graph: graph[b] = []\n  graph[b].extend([a])\n  \nfor key in graph:\n  if len(graph[key]) == 1: num += 1\n\nprint(num)", "from collections import Counter\nn = int(input())\nC = Counter()\nfor _ in range(n - 1):\n  C.update(list(map(int, input().split())))\nprint(sum(1 for a, b in list(C.items()) if b == 1)) \n", "n=int(input())\na,d,f=[],0,0\nfor i in range(n-1):\n    k,l=list(map(int,input().split()))\n    a.append(k)\n    a.append(l)\nfor i in range(len(a)):\n    d=0\n    for j in range(len(a)):\n        if i!=j and a[i]==a[j]:d=d+1\n    if d==0:f=f+1\nprint(f)\n", "n=int(input())\narr=[]\nfor _ in range(n):\n    arr.append(0)\nfor _ in range(n-1):\n    a,b=list(map(int,input().split()))\n    arr[a-1]+=1 \n    arr[b-1]+=1 \nprint(arr.count(1))\n", "n = int(input())\n\nq = [0] * n\n\nfor i in range(n - 1):\n    u, v = list(map(int, input().split()))\n\n    q[u - 1] += 1\n    q[v - 1] += 1\n\nprint(q.count(1))\n", "n=int(input())\ngraph=[[] for i in range(n)]\nfor i in range(n-1):\n\tx,y=map(int,input().split())\n\tgraph[x-1].append(y)\n\tgraph[y-1].append(x)\nc=0\nfor i in range(n):\n\tif len(graph[i])==1:\n\t\tc+=1\nprint(c)", "n = int(input())\nmyList = []\nfor k in range(0, n):\n    myList.append(0)\ncounter = 0\nfor i in range(0, n - 1):\n    a, b = list(map(int, input().split()))\n    myList[a - 1] += 1\n    myList[b - 1] += 1\nfor j in range(0, len(myList)):\n    if myList[j] == 1:\n        counter += 1\nprint(counter)\n", "n = int(input())\ntun = {}\nfor i in range(n):\n    tun[i+1] = 0\nfor i in range(n-1):\n    u,v = map(int,input().split())\n    tun[u] += 1\n    tun[v] += 1\nans = 0\nfor i in range(1,n+1):\n    if tun[i] == 1:\n        ans += 1\nprint(ans)", "n = int(input())\ndic = {}\nfor i in range(1, n+1):\n  dic.update({i:0})\nfor i in range(n-1):\n  s = input().split()\n  dic[int(s[0])]+=1\n  dic[int(s[1])]+=1\n\ncount = 0 \nfor x in dic.keys():\n  if dic[x]==1:\n    count+=1\n    \nprint(count)", "N = int(input())\n\noutput = [0] * N\n\nfor i in range(N - 1):\n    u, v = [int(v) for v in input().split(' ')]\n    output[u - 1] += 1\n    output[v - 1] += 1\n\nprint(output.count(1))", "n = int(input())\ntree = [0] * (n+1)\nfor i in range(n-1):\n    vex1, vex2= list(map(int,input().split()))\n    tree[vex1] += 1\n    tree[vex2] += 1\nans = 0\nfor i in range(n+1):\n    if tree[i] == 1:\n        ans += 1\nprint(ans)\n", "n = int(input())\ncounter = 0\na = [[0 for j in range(n)] for i in range(n)]\nfor i in range(n - 1):\n    i, j = map(int, input().split())\n    a[i - 1][j - 1] = 1\n    a[j - 1][i - 1] = 1\n\nfor element in a:\n    if element.count(1) == 1:\n        counter += 1\n\nprint(counter)", "n = int(input())\nm = [0 for i in range(n)]\nfor i in range(n - 1):\n    u, v = list(map(int, input().split()))\n    m[u - 1] += 1\n    m[v - 1] += 1\nprint(m.count(1))\n", "p=int(input())\na=[]\nx=0\nfor i in range(p-1):\n    a+=input().split()\nfor i in range(p):\n    if a.count(str(i+1))==1:\n        x+=1\nprint(x)\n", "n = int(input())\nli = [0] * n\n\nfor x in range(0,n-1):\n    line = (input().split())\n    for x in line:\n        li[int(x)-1] += 1\n\nprint(li.count(1))", "import sys\nfrom collections import Counter\n\ndef main(args):\n    n = int(input())\n    counter = Counter()\n    \n    for _ in range(n - 1):\n        u, v = list(map(int, input().split()))\n        counter[u] += 1\n        counter[v] += 1\n    \n    s = 0\n    for c in range(n + 1):\n        s += (counter[c] == 1)\n    \n    print(s)\ndef __starting_point():\n    return(main(sys.argv))\n\n__starting_point()", "# -*- coding: utf - 8 -*-\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n|    author: mr.math - Hakimov Rahimjon     |\n|    e-mail: mr.math0777@gmail.com          |\n|    created: 14.04.2018 16:50              |\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n# inp = open(\"input.txt\", \"r\"); input = inp.readline; out = open(\"output.txt\", \"w\"); print = out.write\nTN = 1\n\n\n# ===========================================\n\n\ndef solution():\n    n = int(input())\n    l = [[0 for j in range(n)] for i in range(n)]\n    ans = 0\n    for i in range(n-1):\n        u, v = list(map(int, input().split()))\n        l[u-1][v-1] = 1\n        l[v-1][u-1] = 1\n    for i in l:\n        if i.count(1) == 1: ans+=1\n    print(ans)\n\n\n# ===========================================\nwhile TN != 0:\n    solution()\n    TN -= 1\n# ===========================================\n# inp.close()\n# out.close()\n", "n = int(input())\na = [0] * (n + 1)\nfor i in range(n - 1):\n    v1, v2 = [int(i) for i in input().split()]\n    a[v1] += 1\n    a[v2] += 1\nprint(a.count(1))\n", "# from dust i have come dust i will be\n\nn=int(input())\n\na=[0]*(n+1)\nfor i in range(n-1):\n    u,v=list(map(int,input().split()))\n    a[u]+=1\n    a[v]+=1\n\ncnt=0\nfor i in range(1,n+1):\n    if a[i]==1:\n        cnt+=1\n\nprint(cnt)\n\n\n", "n = int(input())\nd = {}\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n    if u not in d:\n        d[u] = 1\n    else:\n        d[u] += 1\n    if v not in d:\n        d[v] = 1\n    else:\n        d[v] += 1\nans = 0\nfor i in range(1, n + 1):\n    if d[i] == 1:\n        ans += 1\nprint(ans)", "N = int(input())\npairs = [tuple(map(int, input().split())) for i in range(N - 1)]\n\ngraph = {i: list() for i in range(1, N + 1)}\n\nfor el in pairs:\n    x, y = el\n\n    graph[x].append(y)\n    graph[y].append(x)\n\nprint(sum(1 for i in range(1, N + 1) if len(graph[i]) == 1))\n", "n = int(input())\nli = [0] * n\n\nfor x in range(0,n-1):\n    line = (input().split())\n    for x in line:\n        li[int(x)-1] += 1\n\nprint(li.count(1))\n"]