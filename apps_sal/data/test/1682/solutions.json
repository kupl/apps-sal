["read = lambda: map(int, input().split())\nn, k = read()\na = list(read())\nb = list(read())\nc = [(a[i], b[i]) for i in range(n)]\nc.sort(key = lambda x: x[0] - x[1])\nans = sum(c[i][0] for i in range(k))\nfor i in range(k, n):\n    ans += min(c[i][0], c[i][1])\nprint(ans)", "n,k = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nque = [0] * n\nfor j in range(n):\n    que[j] = [A[j] - B[j],j]\nque.sort()  \nans = 0\nfor j in range(n):\n    if que[j][0] <= 0:\n        k-=1\n        ans += A[que[j][1]]\n    else:\n        if k >0:\n            k-=1\n            ans+=A[que[j][1]]\n        else:\n            j -=1\n            break\n\nfor i in range(j+1,n):\n    ans += B[que[i][1]]\nprint(ans)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = sorted([(a[i]-b[i], a[i], b[i]) for i in range(n)])\ntotal = 0\nfor e in c[:k]:\n    total += e[1]\nfor e in c[k:]:\n    total += min(e[1], e[2])\nprint(total)\n", "import sys\nn,k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndif = [] \nfor i in range(n):\n    dif.append((a[i] - b[i],a[i], b[i]))\ndif.sort()\nans = 0\nfor i in range(0,k):\n    ans += dif[i][1]\n \nfor i in range(k,n):\n    ans += min(dif[i][1],dif[i][2])\nprint(ans)\n \n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [[b[i] - a[i], i] for i in range(n)]\nc.sort()\nc = c[::-1]\nans = 0\nfor i in range(k):\n    ans += a[c[i][1]]\ni = k\nwhile i < n and c[i][0] > 0:\n    ans += a[c[i][1]]\n    i += 1\nwhile i < n:\n    ans += b[c[i][1]]\n    i += 1\nprint(ans)\n", "from bisect import bisect\n\nn, k = list(map(int, input().split()))\n\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\n\ndd = sorted(a - b for a, b in zip(aa, bb))\nk = max(k, bisect(dd, 0))\n\nprint(sum(bb) + sum(dd[:k]))\n", "from sys import stdin, stdout\n\n\nn, k = map(int, stdin.readline().split())\npricesb = list(map(int, stdin.readline().split()))\npricesa = list(map(int, stdin.readline().split()))\ncnt = []\n\nfor i in range(n):\n    cnt.append((pricesb[i] - pricesa[i], i))\n\ncnt.sort()\n\nans = 0\nfor i in range(n):\n    if i < k or cnt[i][0] < 0:\n        ans += pricesb[cnt[i][1]]\n    else:\n        ans += pricesa[cnt[i][1]]\n\n\nstdout.write(str(ans))", "read=lambda:list(map(int,input().split()))\nn,k=read()\na=list(read())\nb=list(read())\nc=[[a[i]-b[i],i] for i in range(len(a))]\nc.sort()\ns=0\ni=0\nA=[]\nwhile i<len(a) and(c[i][0]<=0 or i<k):A.append(c[i][1]);i+=1\nB=list(set([i for i in range(n)])-set(A))\n\nprint(sum([a[i] for i in A])+sum([b[i] for i in B]))\n\n\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nd = list(map(lambda x, y: x-y, a, b))\nd.sort()\nkk = sum([x < 0 for x in d])\nkk = max(k, kk)\nprint(sum(b) + sum(d[:kk]))      \n", "from sys import stdin, stdout\n\nn,k = list(map(int, stdin.readline().rstrip().split()))\n\na = stdin.readline().rstrip().split()\na = [int(num) for num in a]\n\nb = stdin.readline().rstrip().split()\nb = [int(num) for num in b]\n\ncostDiff=[b[i]-a[i] for i in range(n)]\nsortedCostDiff=sorted(costDiff,reverse=True)\n\nsavingMade=len([i for i in costDiff if i>=0])\nif savingMade>=k: # Then he simply spends on all item which are cheaper\n    totalSpend=0\n    for i in range(n):\n        totalSpend+=min([a[i],b[i]])\nelse: # Now we need to find the k biggest cost differential\n    maxCost=sortedCostDiff[k-1]\n    cutoffSortedDiff=sortedCostDiff[:k]\n    minCount=cutoffSortedDiff.count(maxCost)\n    totalSpend=0\n    for i in range(n):\n        if b[i]-a[i]>maxCost:\n            totalSpend+=a[i]\n        elif b[i]-a[i]==maxCost and minCount>0:\n            totalSpend+=a[i]\n            minCount-=1\n        else:\n            totalSpend+=b[i]\n\nprint(totalSpend)\n    \n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [0] * n\nans = sum(b)\nfor i in range(n):\n    c[i] = a[i] - b[i]\nc.sort()\ni = 0\nwhile (i < k) or (i < n and c[i] < 0):\n    ans += c[i]\n    i += 1\nprint(ans)", "n,k = map(int,input().split())\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nd = [[a[i],b[i],a[i]-b[i]] for i in range(n)]\ndel a,b\nd = sorted(d , key = lambda x : x[2])\ns = 0\nfor i in range(n) : \n\tif  k > 0  : \n\t\ts += d[i][0]\n\t\tk -= 1\n\telse:\n\t\ts += min(d[i][0],d[i][1])\nprint(s)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc = list()\nfor i in range(n):\n    c.append((i, b[i]-a[i]))\nc.sort(key=lambda x: x[1])\nc = c[::-1]\n\nr = 0\nfor i in range(n):\n    if i < k or c[i][1] > 0:\n        r += a[c[i][0]]\n    else:\n        r += b[c[i][0]]\n\nprint(r)", "import sys\n\n\ndef make_gen(str):\n    arr = str.split(\" \")\n    for item in arr:\n        yield int(item)\n\n\ns = input()\ns = make_gen(s)\nn = next(s)\nk = next(s)\n\ndisc_price = [0] * n\nnorm_price = [0] * n\n\ns = input()\ns = make_gen(s)\nfor i in range(0, n):\n    disc_price[i] = next(s)\n\ns = input()\ns = make_gen(s)\nfor i in range(0, n):\n    norm_price[i] = next(s)\n\ntotal = sum(norm_price)\nnew_price = []\n\nfor i in range(0, n):\n    new_price.append(norm_price[i] - disc_price[i])\nnew_price.sort(reverse=True)\n\nwin_sum = 0\nfor i in range(0, k):\n    win_sum += new_price[i]\n\nwhile k < n and new_price[k] > 0:\n    win_sum += new_price[k]\n    k += 1\n\nprint(total - win_sum)\n", "n, k = [int(x) for x in input().strip().split(' ', 1)]\na = [int(x) for x in input().strip().split(' ')]\nb = [int(x) for x in input().strip().split(' ')]\nc = [(xb-xa, xa, xb) for xa, xb in zip(a,b)]\nc.sort(key=lambda x: x[0], reverse=True)\n# print(c)\ncnt = sum([cx[1] for cx in c[:k]])\n\nwhile k < n and c[k][0] >= 0:\n    cnt += c[k][1]\n    k = k+1\nif k < n:\n    cnt += sum(cx[2] for cx in c[k:])\nprint(cnt)\n", "n, k = map(int, input().split())\n\ncnt = [[0 for i in range(0, 3)] for j in range(0, n)]\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(0, n):\n    cnt[i][0] = b[i] - a[i]\n    cnt[i][1] = a[i]\n    cnt[i][2] = b[i]\n\ncnt.sort()\nans= 0\n\nfor i in range(n - 1, n - k - 1,-1):\n    ans += cnt[i][1]\n\nfor i in range(n - k - 1, -1,-1):\n    ans += min(cnt[i][1], cnt[i][2])\n\nprint(ans)", "n,k=list(map(int,input().split()))\nd=list(map(int,input().split()))\nnd=list(map(int,input().split()))\ndiff=[]\nfor i in range(n):\n    diff.append((d[i]-nd[i], i))\nans=0\ndiff=sorted(diff, key=lambda x:x[0])\nfor i in range(k):\n    temp,ind=diff[i]\n    ans+=d[ind]\nfor i in range(k,n):\n    temp,ind=diff[i]\n    if temp<0:\n        ans+=d[ind]\n    else:\n        ans+=nd[ind]\nprint(ans)\n", "n,k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb=[int(x) for x in input().split()]\nc=[]\n\nfor i in range(n):\n    c.append([b[i]-a[i],a[i],b[i]])\n\n\nc=sorted(c, key=lambda x : -x[0])\nm=0\nfor i in range(n):\n    if i<k or c[i][1]<=c[i][2]:\n        m+=c[i][1]\n    else:\n        m+=c[i][2]\nprint(m)\n", "n, k = list(map(int, input().split(' ')))\na = list(map(int, input().split(' ')))\nb = list(map(int, input().split(' ')))\nc = [a[i] - b[i] for i in range(n)]\nans = sum(b)\nc.sort()\nans += sum(c[:k])\ni = k\nwhile i < n and c[i] < 0:\n    ans += c[i]\n    i += 1\nprint(ans)\n", "n, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ndiff = [x - y for x, y in zip(a, b)]\n\n#print(k)\n#print(a)\n#print(b)\n#print(diff)\n\nindex = sorted(list(range(len(diff))), key=lambda x: diff[x])\n#print(index)\n\ncheat = len([x for x in diff if x < 0])\n#print(cheat)\nk = max(k, cheat)\n\nbnow = index[:k]\nblater = index[k:]\n\nbnow = [a[x] for x in bnow]\nblater = [b[x] for x in blater]\n\n#print(bnow)\n#print(blater)\n\nprint(sum(bnow) + sum(blater))\n\n", "import sys\n\ndef input():\n    return sys.stdin.readline()\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nprices_n_sales = sorted(list(zip(b,(i-j for i,j in zip(a,b)))), key = lambda x:x[1])\n# \u043a\u0443\u043f\u0438\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 k \u0442\u043e\u0432\u0430\u0440\u043e\u0432\ntotal = sum(ps[0] + ps[1] for ps in prices_n_sales[:k])\ni = k\nif i == n:\n    print(total)\n    return\nwhile prices_n_sales[i][1] < 0:\n    total += prices_n_sales[i][0] + prices_n_sales[i][1]\n    i += 1\n    if i >= n: break\nprint(total + sum(ps[0] for ps in prices_n_sales[i:]))\n\n", "import sys\nfrom itertools import accumulate\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef solve():\n    n, k = map(int, input().split())\n    A = [int(i) for i in input().split()]\n    B = [int(i) for i in input().split()]\n    sumB = sum(B)\n    dif = [a - b for a, b in zip(A, B)]\n    dif.sort()\n    dif = [0] + list(accumulate(dif))\n\n    ans = float('inf')\n\n    for i in range(k, n + 1):\n        ans = min(ans, sumB + dif[i])\n\n    print(ans)\n    \n\ndef __starting_point():\n    solve()\n__starting_point()", "def solve():\n\tN, K = list(map(int, input().split()))\n\tA = list(map(int, input().split()))\n\tB = list(map(int, input().split()))\n\t# K <= N <= 2*10^5\n\t# Ai, Bi <= 10^4\n\n\tC = [a[0]-a[1] for a in zip(A, B)] \n\n\tD = list(zip(list(range(N)), C)) # (index, loss)\n\n\tD.sort(key=lambda tup: tup[1])\n\n\tcost = 0\n\tfor i in range(K):\n\t    cost += A[D[i][0]]\n\n\tj = K\n\twhile j<N and D[j][1] <= 0 :\n\t    cost += A[D[j][0]]\n\t    j += 1\n\n\tfor i in range(j, N):\n\t    cost += B[D[i][0]]\n\n\tprint(cost)\n\nsolve()\n\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ndif = []\n\nfor i in range(n):\n    dif.append((a[i]-b[i], i))\n\ndif.sort()\ns = 0\n\nfor i in range(k):\n    s += a[dif[i][1]]\n    a[dif[i][1]] = b[dif[i][1]] = 0\n\nfor i in range(len(a)):\n    s += min(a[i], b[i])\n\nprint(s)\n"]