["q = int(input())\n\ndef racunaj():\n\ts = []\n\tfor i in range(27):\n\t\td = 2\n\t\tn = 2**i - 1\n\t\tz = 1\n\t\twhile d*d <= n:\n\t\t\tif n % d == 0:\n\t\t\t\tz = n // d\n\t\t\t\tbreak\n\t\t\td += 1\n\t\ts.append(z)\n\treturn s\n\nnajdel = racunaj()\n# print(najdel)\n\nfor _q in range(q):\n\tn = int(input())\n\tz = 1\n\tc = 1\n\twhile z < n:\n\t\tz = 2*z+1\n\t\tc += 1\n\tif z > n:\n\t\tprint(z)\n\telse:\n\t\tprint(najdel[c])", "import math\nq=int(input())\nfor u in range(q):\n    a=int(input())\n    if math.log2(a+1)==int(math.log2(a+1)):\n        q=1\n        found=False\n        while q<a**0.5:\n            q+=1\n            if a%q==0:\n                found=True\n                break\n        if found:\n            print(a//q)\n        else:\n            print(1)\n    else:\n        print(2**math.ceil(math.log2(a+1))-1)", "from sys import setrecursionlimit, stderr\nfrom functools import reduce\nfrom itertools import *\nfrom collections import defaultdict, Counter\nfrom bisect import bisect\n\nsetrecursionlimit(10**7)\n\ndef read():\n  return int(input())\n\ndef reads():\n  return [int(x) for x in input().split()]\n\ndef largest_factor(x):\n  ans = 1\n  for y in range(2, 2**13):\n    if x % y == 0:\n      ans = max(ans, x // y)\n  return ans\n\ndef solve(a):\n  highest_bit = max(1 << i for i in range(30) if ((1 << i) & a) > 0)\n  M = highest_bit * 2 - 1\n  return M if a != M else largest_factor(M)\n\nq = read()\nfor _ in range(q):\n  a = read()\n  print(solve(a))", "for i in range(int(input())):\n    n = int(input())\n    lol = str(bin(n))[2:]\n    if '0' in lol:\n        print(2 ** (len(lol)) - 1)\n    else:\n        fl = 0\n        hom = (2 ** len(lol)) - 1\n        for z in range(3, int(hom**0.5) + 1):\n            if hom % z == 0:\n                print(hom // z)\n                fl = 1\n                break\n        if not fl:\n            print(1)", "ii = lambda: int(input())\nmi = lambda: list(map(int, input().split()))\nli = lambda: list(mi())\n\nd = {\n    1: 0,\n    3: 1,\n    7: 1,\n    15: 5,\n    31: 1,\n    63: 21,\n    127: 1,\n    255: 85,\n    511: 73,\n    1023: 341,\n    2047: 89,\n    4095: 1365,\n    8191: 1,\n    16383: 5461,\n    32767: 4681,\n    65535: 21845,\n    131071: 1,\n    262143: 87381,\n    524287: 1,\n    1048575: 349525,\n    2097151: 299593,\n    4194303: 1398101,\n    8388607: 178481,\n    16777215: 5592405,\n    33554431: 1082401,\n}\n\nfor _ in range(ii()):\n    n = ii()\n    if n in d:\n        ans = d[n]\n    else:\n        ans = 2 ** (n.bit_length()) - 1\n    print(ans)\n", "from math import sqrt\nq = int(input())\nfor _ in range(q):\n\ta = int(input())\n\tbi = format(a, 'b')\n\tif bi.count(\"0\") == 0:\n\t\tfor i in range(2, int(sqrt(a))+1):\n\t\t\tif a%i == 0:\n\t\t\t\tprint(a//i)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(1)\n\telse:\n\t\tprint(pow(2, len(bi)) - 1)", "ans = {3: 1, 7: 1, 15: 5, 31: 1, 63: 21, 127: 1, 255: 85, 511: 73, 1023: 341, 2047: 89, 4095: 1365, 8191: 1, 16383: 5461, 32767: 4681, 65535: 21845, 131071: 1, 262143: 87381, 524287: 1, 1048575: 349525, 2097151: 299593, 4194303: 1398101, 8388607: 178481, 16777215: 5592405, 33554431: 1082401}\n\nfor i in range(int(input())):\n    n = int(input())\n    if n in ans:\n        print(ans[n])\n    else:\n        x = 3\n        while x <= n:\n            x = 2*x+1\n        print(x)\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef gcd(a,b):\n\twhile b != 0:\n\t\ta,b = b,a%b\n\treturn a\n\ndef stupid(x):\n\tr = 1\n\tfor i in range(1, x):\n\t\tr = max(r, gcd(i&x, i^x))\n\treturn r\n\nd = dict()\nd[511] = 73\nd[2047] = 89\nd[32767] = 4681\nd[2097151] = 299593\nd[8388607] = 178481\nd[33554431] = 1082401\ndef smart(x):\n\tif x in d:\n\t\treturn d[x]\n\tif (x & (x+1)) == 0:\n\t\ti = 0\n\t\twhile ((1<<i)-1) != x:\n\t\t\ti += 1\n\t\tif i % 2 == 0:\n\t\t\tz = 0\n\t\t\tfor i in range(0,i,2):\n\t\t\t\tz += (1<<i)\n\t\t\treturn z\n\t\telse:\n\t\t\treturn 1\n\telse:\n\t\ti = 1\n\t\tz = 0\n\t\twhile i < x:\n\t\t\tif (i & x) == 0:\n\t\t\t\tz += i\n\t\t\ti *= 2\n\t\treturn x+z\n\nq = mint()\nfor i in range(q):\n\tx = mint()\n\tprint(smart(x))\n\t#if (x & (x+1)) == 0:\n\t#\ta = stupid(x)\n\t#\tb = smart(x)\n\t#\tif a != b:\n\t#\t\tprint(x,a,b)\n", "import sys\ninput=sys.stdin.readline\n\nq=int(input())\nx=[]\nfor i in range(q):\n    v=int(input())\n    tv=v\n    cnt,len=0,0\n    while tv>0:\n        if tv&1: cnt+=1\n        len+=1\n        tv//=2\n    if cnt!=len:\n        print(2**len-1)\n    else:\n        a=1\n        i=2\n        while i*i<=v:\n            if v%i==0:\n                a=v//i\n                break\n            i+=1\n        print(a)", "import math\nq = int(input())\n\nfor _ in range(q):\n    n = int(input())\n    i = 0\n    while 2**i <= n:\n        i += 1\n    if n == 2**i-1:\n        for j in range(2,max(2,int(math.sqrt(n))+1)):\n            if n%j == 0:\n                print(n//j)\n                break\n        else:\n            print(1)\n    else:\n        print(2**i-1)\n", "def gcd(a,b):\n    if b > a:\n        return gcd(b,a)\n    if b == 0:\n        return a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n\ndef f(a):\n    best = -1\n    tag = None\n\n    for b in range(1,a):\n        d = gcd(a^b, a&b)\n        if d > best:\n            best = d\n            tag = b\n    return best, tag\n\ndef f2(a):\n    for b in range(a-1,0,-1):\n        if a % b == 0:\n            return b\n\nspecial = dict()\n\n# for i in range(2, 26):\n#     num = 2**i - 1\n#     best = f2(num)\n#     special[num] = best\n\n# print(special)\nspecial = {3: 1, 7: 1, 15: 5, 31: 1, 63: 21, 127: 1, 255: 85, 511: 73, 1023: 341, 2047: 89, 4095: 1365, 8191: 1, 16383: 5461, 32767: 4681, 65535: 21845, 131071: 1, 262143: 87381, 524287: 1, 1048575: 349525, 2097151: 299593, 4194303: 1398101, 8388607: 178481, 16777215: 5592405, 33554431: 1082401}\n    \nq = int(input())\n\nfor test in range(q):\n    a = int(input())\n    if a in special:\n        print(special[a])\n    else:\n        length = len(bin(a)) - 2\n        print(2**length - 1)\n\n", "import sys\nsys.setrecursionlimit(200000)\ninput = sys.stdin.readline\nn = int(input())\na = [int(input()) for i in range(n)]\nb = [2**i for i in range(30)]\nc  = []\nans=[1,\n 1,\n 1,\n 1,\n 5,\n 1,\n 21,\n 1,\n 85,\n 73,\n 341,\n 89,\n 1365,\n 1,\n 5461,\n 4681,\n 21845,\n 1,\n 87381,\n 1,\n 349525,\n 299593,\n 1398101,\n 178481,\n 5592405,\n 1082401,\n 22369621,\n 19173961,\n 89478485,\n 2304167]\nfor i in range(30):\n        c.append(b[i]-1)\nfor i in range(n):\n        if a[i] in c:\n                print(ans[c.index(a[i])])\n        else:\n                j = 0\n                while b[j] <= a[i]:\n                        j+=1\n                print(c[j])", "l = {}\nll = {3: 1, 7: 1, 15: 5, 31: 1, 63: 21, 127: 1, 255: 85, 511: 73, 1023: 341, 2047: 89, 4095: 1365, 8191: 1, 16383: 5461, 32767: 4681, 65535: 21845, 131071: 1, 262143: 87381, 524287: 1, 1048575: 349525, 2097151: 299593, 4194303: 1398101, 8388607: 178481, 16777215: 5592405, 33554431: 1082401}\ndef gcd(a,b):\n    if b == 0 :\n        return a \n    else:\n        return gcd(b,b%a)\nq = int(input())\nfor i in range(q):\n    x = int(input())\n    if x in ll.keys():\n        print(ll[x])\n        continue\n    y = 0 \n    for j in range(30):\n        xx = 2**j \n        if xx & x :\n            y = j\n    y += 1\n    ans = 2**y - 1\n    print(ans)", "dic={3:1,7:1,15:5,31:1,63:21,127:1,255:85,511:73,1023:341,2047:89,4095:1365,8191:1,16383:5461,32767:4681,65535:21845,131071:1,262143:87381,524287:1,1048575:349525,2097151:299593,4194303:1398101,8388607:178481,16777215:5592405,33554431:1082401}\nl=[3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535, 131071, 262143, 524287, 1048575, 2097151, 4194303, 8388607, 16777215, 33554431, 67108863]\ndef f(i):\n    for j in l:\n        if j==i:\n            return dic[j]\n        elif j>i:\n            return j\nn=int(input())\nfor query in range(n):\n    print(f(int(input())))", "# -*- coding: utf-8 -*-\n# @Time    : 2019/2/7 22:08\n# @Author  : LunaFire\n# @Email   : gilgemesh2012@gmail.com\n# @File    : C. Meaningless Operations.py\n\nimport math\n\ndef main():\n    num_dict = {\n        2: 3,\n        3: 1,\n        7: 1,\n        15: 5,\n        31: 1,\n        63: 21,\n        127: 1,\n        255: 85,\n        511: 73,\n        1023: 341,\n        2047: 89,\n        4095: 1365,\n        8191: 1,\n        16383: 5461,\n        32767: 4681,\n        65535: 21845,\n        131071: 1,\n        262143: 87381,\n        524287: 1,\n        1048575: 349525,\n        2097151: 299593,\n        4194303: 1398101,\n        8388607: 178481,\n        16777215: 5592405,\n        33554431: 1082401,\n    }\n\n    q = int(input())\n    for _ in range(q):\n        a = int(input())\n        if a in num_dict:\n            print(num_dict[a])\n        else:\n            temp = int(math.log(a, 2))\n            print(pow(2, temp + 1) - 1)\n\n    # for i in range(2, 500):\n    #     f = 0\n    #     for j in range(1, i):\n    #         f = max(f, math.gcd(i ^ j, i & j))\n    #     print(i, 'F(A)', f)\n    #\n    # for k in range(1, 26):\n    #     i = pow(2, k) - 1\n    #     f = 0\n    #     for j in range(1, i):\n    #         f = max(f, math.gcd(i ^ j, i & j))\n    #     print(i, ':', f, ',')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "Q=int(input())\nA=[int(input()) for i in range(Q)]\n\nOTHER={2**i-1 for i in range(2,26)}\nOT=[2**i-1 for i in range(1,26)]\nANSDICT={3: 1, 7: 1, 15: 5, 31: 1, 63: 21, 127: 1, 255: 85, 511: 73, 1023: 341, 2047: 89, 4095: 1365, 8191: 1, 16383: 5461, 32767: 4681, 65535: 21845, 131071: 1, 262143: 87381, 524287: 1, 1048575: 349525, 2097151: 299593, 4194303: 1398101, 8388607: 178481, 16777215: 5592405, 33554431: 1082401}\n\nfor a in A:\n    if a in OTHER:\n        print(ANSDICT[a])\n    else:\n        for i in range(30):\n            if a<OT[i]:\n                print(OT[i])\n                break\n\n\n        \n", "import math\n\ndef find_largest_non_trivial_divisor(n):\n    bound = min(math.ceil(math.sqrt(n) + 2) + 1, n)\n    for d in range(2, bound):\n        if n % d == 0:\n            return d\n    return n\n\nnum_tests = int(input())\nfor _ in range(num_tests):\n    n = int(input())\n\n\n\n    larg_bit_pos = 0\n    x = n\n    while x > 1:\n        x //= 2\n        larg_bit_pos += 1\n\n    best0 = 2**(larg_bit_pos+1) - 1\n    if n != best0:\n        print(best0)\n    else:\n        d = find_largest_non_trivial_divisor(n)\n        print(n // d)\n\n", "import math\n\ndef solve(n):\n    if n == 2:\n        return 3\n    bad = [1, 1, 5, 1, 21, 1, 85, 73, 341, 89, 1365, 1, 5461, 4681, 21845, 1, 87381, 1, 349525, 299593, 1398101, 178481, 5592405, 1082401]\n    if 2 ** math.floor(math.log2(n)) <= n <= 2 ** (math.floor(math.log2(n)) + 1) - 2:\n        return (2 ** math.ceil(math.log2(n)) - 1)\n    else:\n        return bad[math.floor(math.log2(n)) - 1]\n        \nq = int(input())\nfor i in range(q):\n    print(solve(int(input())))", "q = int(input())\nA = [1] * 26\nfor i in range(1, 26):\n\tfor j in range(2, int((2 ** i - 1) ** 0.5) + 1):\n\t\tif (2 ** i - 1) % j == 0:\n\t\t\tA[i] = (2 ** i - 1) // j\n\t\t\tbreak\nfor i in range(q):\n\tn = int(input())\n\ts = bin(n)[2:]\n\tif s != '1' * len(s):\n\t\tprint(2 ** len(s) - 1)\n\telse:\n\t\tprint(A[len(s)])", "3\n\nq = int(input())\nfor i in range(q):\n    a = int(input())\n    ans = 1\n    while ans <= a:\n        ans *= 2\n    if a < ans - 1:\n        print(ans - 1)\n    else:\n        ans = 1\n        d = 2\n        while d * d <= a:\n            if a % d == 0:\n                ans = a // d\n                break\n            d += 1\n        print(ans)\n", "def find_log(number):\n    counter = 1\n    while number > 1:\n        number = number // 2\n        counter += 1\n    return counter\n\ndef __starting_point():    \n    \n    q = int(input())\n    a = [0 for i in range(q)]\n    for i in range(q):\n        a[i] = int(input())\n    \n    NUMS = [0 for i in range(24)]\n    for i in range(24):\n        NUMS[i] = 2**(i+2)-1\n    PRIMES = [3, 7, 3, 31, 3, 127, 3, 7, 3, 23, 3, 8191, 3, 7, 3, 131071, 3, 524287, 3, 7, 3, 47, 3, 31]\n    \n    for i in range(q):\n        if a[i] not in NUMS:\n            k = find_log(a[i])\n            print(2**k-1)\n        else:\n            index = -1\n            found = False\n            while not found:\n                index += 1\n                if NUMS[index] == a[i]:\n                    found = True\n            print(int(a[i]/PRIMES[index]))\n__starting_point()", "def intlog2(n):\n    if n <= 0:\n        return -1\n    i = 0\n    while 2**i <= n:\n        i += 1\n    return i-1\n\ndef isfull(n):\n    a = intlog2(n)\n    if n == (1<<a+1) - 1:\n        return 1\n    else:\n        return 0\n\ndef calc(n):\n    a  = intlog2(n)\n    if isfull(n):\n        return [1, 1, 5, 1, 21, 1, 85, 73, 341, 89, 1365, 1, 5461, 4681, 21845, 1, 87381, 1, 349525, 299593, 1398101, 178481, 5592405, 1082401][a-1]\n    else:\n        return (1<<a+1)-1\n\nq = int(input())\nfor _ in range(q):\n    a = int(input())\n    print(calc(a))\n", "q = int(input())\nfor i in range(q):\n    a = int(input())\n    a_bin = format(a, \"b\")\n    if len(a_bin) == a_bin.count(\"1\"):\n        flag = 0\n        for j in range(2, int(a**(1/2))+2):\n            if a % j == 0:\n                print(a//j)\n                flag = 1\n                break\n        if flag == 0:\n            print(1)\n    else:\n        print(2**(len(a_bin))-1)\n"]