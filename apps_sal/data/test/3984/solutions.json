["s = input()\nm = chr(ord('z') + 1)\nans = []\nf = 0\nfor i in s:\n    if i > m:\n        ans.append('Ann')\n    else:\n        ans.append('Mike')\n    m = min(m, i)\nprint('\\n'.join(ans))", "s = input()\nchuj = [ord(s[i]) for i in range(len(s))]\nn = len(chuj)\nprint(\"Mike\")\nmini = 100000\nfor i in range(1, n):\n\tmini = min(mini, chuj[i - 1])\n\tif mini < chuj[i]:\n\t\tprint(\"Ann\")\n\telse:\n\t\tprint(\"Mike\")\n", "s = input()\nmin = s[0]\nl = []\nfor i in s:\n    if(min < i):\n        l.append(\"Ann\")\n    else:\n        l.append(\"Mike\")\n        min = i\nfor i in l:\n    print(i)", "s = input()\nmi = 'z'\nfor x in s:\n    if x > mi:\n        print('Ann')\n    else:\n        print('Mike')\n    mi = min(x, mi)\n", "s = input()\nmin_letter = 'z'\nfor k in range(len(s)):\n    if min_letter < s[k]:\n        print(\"Ann\")\n    else:\n        print(\"Mike\")\n    min_letter = min(min_letter, s[k])", "s = input()\nmin_val = 9999\nfor c in s:\n    if min_val < ord(c):\n        print('Ann')\n    else:\n        print('Mike')\n    min_val = min(min_val, ord(c))", "s=input()\nmi=s[0]\nfor i in s:\n    if mi>=i:\n        mi=i\n        print(\"Mike\")\n    else:\n        print(\"Ann\")\n        \n", "s = input()\nmn = 1000\nfor elem in s:\n    if mn < ord(elem):\n        print('Ann')\n    else:\n        print('Mike')\n        mn = ord(elem)\n", "s = input()\nl = len(s)\nd = [s[0] for i in range(l)]\nprint('Mike')\nfor i in range(1, l):\n    d[i] = min(d[i - 1], s[i])\n    if d[i] < s[i]:\n        print('Ann')\n    else:\n        print('Mike')", "s = input()\nwin1 = \"Ann\"\nwin2 = \"Mike\"\nalth = \"abcdefghijklmnopqrstuvwxyz\"\nnum = alth.find(s[0])\nfor i in s:\n    num2 = alth.find(i)\n    if num < num2:\n        print(win1)\n    else:\n        print(win2)\n    num = min(num,num2)", "s = input()\npref = [s[0]]\nfor i in range(1, len(s)):\n    pref.append(min(pref[i - 1], s[i]))\nfor k in range(len(s)):\n    if pref[k] >= s[k]:\n        print('Mike')\n    else:\n        print('Ann')\n", "a = input()\nl = []\nmi = 999999999999999\nfor i in a:\n    k = ord(i) - 97\n    if k > mi:\n        l.append(\"1\")\n    else:\n        l.append(\"0\")\n        mi = k\nfor i in l:\n    print(i.replace(\"1\", \"Ann\").replace(\"0\", \"Mike\"))", "s = input()\nm = ord(s[0])\nfor i in range(0, len(s)):\n\ta = ord(s[i])\n\tf = False\n\tif a > m:\n\t\tf = True\n\telse:\n\t\tm = a\n\tprint('Mike' if not f else 'Ann')", "s=input()\nn=len(s)\nsmallest=ord(s[0])\nprint (\"Mike\")\nfor i in range(1,n):\n\tif smallest<ord(s[i]):\n\t\tprint (\"Ann\")\n\telse:\n\t\tprint (\"Mike\")\n\t\tsmallest=ord(s[i])\n", "l = input()\nmini = 1000000\nfor i in range(len(l)):\n    if ord(l[i]) > mini:\n        print(\"Ann\")\n    else:\n        print(\"Mike\")\n    mini = min(mini, ord(l[i]))", "S = input()\n\nmax_before = [] \nsmallest_so_far = S[0]\n\nprint(\"Mike\")\n\nfor s in S[1:]:\n    if s > smallest_so_far:\n        print(\"Ann\")\n    else:\n        print(\"Mike\")\n    smallest_so_far = min(smallest_so_far, s)\n", "a=list(input())\narr='z'\nfor item in a:\n    if arr<item:\n        print('Ann')\n    else:\n        print('Mike')\n    if item<arr:\n        arr=item\n", "import sys\n\n\nfor line in sys.stdin:\n    lexfirst = '{'\n    for c in line[:-1]:\n        if lexfirst >= c:\n            print('Mike')\n            lexfirst = c\n        else:\n            print('Ann')\n    quit()\n", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\n\ns=input().strip('\\n')\nc=Counter(s)\nl=sorted(list(c))\nans=[]\n# print(s)\nmi=[1]*(len(s))\ncurr = s[0]\nfor i in range(1,len(s)):\n    if curr<s[i]:mi[i]=0\n    curr=min(curr,s[i])\n    \n    \nfor i in range(len(s)):\n    # print(i)\n    if i==0 or mi[i]:\n        ans.append('Mike')\n    else:\n        ans.append('Ann')\nfor i in ans:print(i)\n", "s = input().rstrip()\nminimum = \"z\"\nfor ch in s:\n    if ch > minimum:\n        print(\"Ann\")\n    else:\n        print(\"Mike\")\n        minimum = ch", "A = input()\n\nn = len(A)\n\nm = A[0]\n\nprint(\"Mike\")\n\nfor i in range(1, n):\n\tif m < A[i]:\n\t\tprint(\"Ann\")\n\telse:\n\t\tprint(\"Mike\")\n\n\tm = min(m, A[i])\n", "s = input()\na = [ord(c) - ord('a') + 1 for c in s]\n#print(a)\n\nres = [0] * len(s)\nmi = a[0]\nprint(\"Mike\")\nfor i in range(1, len(s)):\n\t#print(a[i], i, mi)\n\tif a[i] > mi:\n\t\tprint(\"Ann\")\n\telse:\n\t\tmi = a[i]\n\t\tprint(\"Mike\")\n", "import math\nfrom decimal import Decimal\nimport heapq\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \ndef lol(lst,k):\n\tk=k%len(lst)\n\tret=[0]*len(lst)\n\tfor i in range(len(lst)):\n\t\tif i+k<len(lst) and i+k>=0:\n\t\t\tret[i]=lst[i+k]\n\t\tif i+k>=len(lst):\n\t\t\tret[i]=lst[i+k-len(lst)]\n\t\tif i+k<0:\n\t\t\tret[i]=lst[i+k+len(lst)]\n\treturn(ret)\ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \ndef Factor(n):\n\tAns = []\n\td = 2\n\twhile d * d <= n:\n\t\tif n % d == 0:\n\t\t\tAns.append(d)\n\t\t\tn //= d\n\t\telse:\n\t\t\td += 1\n\tif n > 1:\n\t\tAns.append(n)\n\treturn Ans\n\n\ns = input()\na1 = 'Mike'\na2 = 'Ann'\nif len(s) == 1:\n\tprint(a1)\n\treturn\nprint(a1)\ntc = s[0]\npre = []\nn = len(s)\nfor i in range(1, n):\n\td = min(s[i], tc)\n\tpre.append(d)\n\ttc = d\nfor i in range(1, n):\n\tif pre[i - 1] < s[i]:\n\t\tprint(a2)\n\telse:\n\t\tprint(a1)\n", "s = input()\nminc = s[0]\nfor c in s:\n    print('Ann' if minc < c else 'Mike')\n    minc = min(c, minc)", "\"\"\"\nNTC here\n\"\"\"\nfrom sys import setcheckinterval, stdin, setrecursionlimit\nsetcheckinterval(1000)\nsetrecursionlimit(10**7)\n \n# print(\"Case #{}: {} {}\".format(i, n + m, n * m))\n \n \ndef iin(): return int(stdin.readline())\n \n \ndef lin(): return list(map(int, stdin.readline().split()))\n\ns=input()\na=[]\ni=0\nl=len(s)\nleast='z'\nwhile i<l:\n    x=s[i]\n    least=min(x,least)\n    while i<l and s[i]==x:\n        if least<x:\n            a.append('Ann')\n        else:\n            a.append('Mike')\n        i+=1\nprint(*a,sep='\\n')\n"]