["t = int(input())\n\nfor case in range(0,t):\n\tx, n = map(int, input().split())\n\tprint(n+(x-1)*9)", "for _ in range(int(input())):\n  k,x=list(map(int, input().split()))\n  print((k-1)*9+x)\n", "for i in range(int(input())):\n    n,k=[int(x) for x in input().split()]\n    print(9*(n-1)+k)\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nfor n in range(ii()):\n    k, x = mi()\n    ans = 9 * (k - 1) + x\n    print(ans)\n", "n=int(input())\nfor x in range(n):\n    k,x=map(int,input().split())\n    print(9*(k-1)+x)", "for i in range(int(input())):\n    k, x = list(map(int, input().split()))\n    print(9*(k - 1) + x)\n\n", "n = int(input())\n\nfor _ in range(n):\n    k,x = [int(x) for x in input().split()]\n    print(x+9*(k-1))\n", "q = int(input())\n\nfor _ in range(q):\n    a, b = map(int, input().split())\n    print((a-1)*9+b)", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=int(input())\nfor tt in range(t):\n    #n=int(input())\n    k,x= map(int, sys.stdin.readline().split(' '))\n    if(x%9):\n        print(9*(k-1)+(x%9))\n    else:\n        print(9*k)\n    #a=list(map(int,sys.stdin.readline().split(' ')))\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "q = int(input())\nfor i in range(q) :\n    a, b = list(map(int, input().split()))\n    print((a - 1) * 9 + b)\n", "for _ in range(int(input())):\n    k,x = list(map(int,input().split()))\n    print(9*k-9+x)\n", "for _ in[0]*int(input()):\n k,x=list(map(int,input().split()))\n print(x+(k-1)*9)\n", "import math\nimport bisect\nimport itertools\nimport sys\nI=lambda : sys.stdin.readline()\nmod=10**9 +7\n'''fact=[1]*100001\nifact=[1]*100001\nfor i in range(1,100001):\n    fact[i]=((fact[i-1])*i)%mod\n    ifact[i]=((ifact[i-1])*pow(i,mod-2,mod))%mod\ndef ncr(n,r):\n    return (((fact[n]*ifact[n-r])%mod)*ifact[r])%mod\ndef npr(n,r):\n    return (((fact[n]*ifact[n-r])%mod))\n    '''\n\n\ndef mindiff(a):\n    b=a[:]\n    b.sort()\n    m=10000000000\n    for i in range(len(b)-1):\n        if b[i+1]-b[i]<m:\n            m=b[i+1]-b[i]\n    return m\n    \ndef lcm(a,b):\n    return a*b//math.gcd(a,b)\n\n    \ndef merge(a,b):\n    i=0;j=0\n    c=0\n    ans=[]\n    while i<len(a) and j<len(b):\n        if a[i]<b[j]:\n            ans.append(a[i])\n            i+=1\n        else:\n            ans.append(b[j])\n            c+=len(a)-i\n            j+=1\n    ans+=a[i:]\n    ans+=b[j:]\n    return ans,c\ndef mergesort(a):\n    if len(a)==1:\n        return a,0\n    mid=len(a)//2   \n    left,left_inversion=mergesort(a[:mid])\n    right,right_inversion=mergesort(a[mid:])\n    m,c=merge(left,right)\n    c+=(left_inversion+right_inversion)\n    return m,c\n    \ndef is_prime(num):\n    if num == 1: return False\n    if num == 2: return True\n    if num == 3: return True\n    if num%2 == 0: return False\n    if num%3 == 0: return False\n    t = 5\n    a = 2\n    while t <= int(math.sqrt(num)):\n        if num%t == 0: return False\n        t += a\n        a = 6 - a\n    return True\n    \n  \ndef ceil(a,b):\n    if a%b==0:\n        return a//b\n    else:\n        return (a//b + 1)\n\ndef binsearch(arr,b,low,high):\n    if low==high:\n        return low\n    if arr[math.ceil((low+high)/2)]<b:\n        return binsearch(arr,b,low,math.ceil((low+high)/2) -1 )\n    else:\n        return binsearch(arr,b,math.ceil((low+high)/2),high)\ndef ncr1(n,r):\n    s=1\n    for i in range(min(n-r,r)):\n        s*=(n-i)\n        s%=mod\n        s*=pow(i+1,mod-2,mod)\n        s%=mod\n    return s\n    \ndef calc(n,m,r):\n    s=0\n    for i in range(0,r+1,2):\n        s+=ncr1(n,i)*ncr1(m,i)\n        s%=mod\n    return s    \n    \ndef modu(a,n):\n    if a%n==0:\n        return n\n    return a%n\n\n#/////////////////////////////////////////////////////////////////////////////////////////////////\n\nfor i in range(int(input())):\n    k,n=list(map(int,input().split()))\n    print(n + 9*(k-1))\n    \n", "def get():\n    return list(map(int,input().split()))\nn=int(input())\nfor i in range(n):\n    a,b=get()\n    print(9*(a-1)+b)\n", "a=int(input())\nfor i in range(a):\n    b,c=list(map(int,input().split()))\n    print(b*9-9+c)\n", "for _ in range(int(input())):\n  n,k=map(int,input().split())\n  print(9*n+k-9)", "for _ in range(int(input())):\n    k,x=map(int,input().split())\n    print(9*(k-1)+x)", "for _ in range(int(input())):\n    k,x=map(int,input().split())\n    print((k-1)*9+x)", "n=int(input())\nfor i in range(n):\n\tk,x=map(int,input().split())\n\tprint(x+(k-1)*9)", "n = int(input())\nfor i in range(n):\n    k,x = map(int, input().split())\n    print(x + 9*(k-1))", "import re, math, decimal, bisect\ndef read(): return input().strip()\ndef iread(): return int(input().strip())\ndef viread(): return [int(_) for _ in input().strip().split()]\n\nfor _ in range(iread()):\n\tk, x = viread()\n\tprint(x + 9 * (k - 1))\n", "n=int(input())\n\nfor i in range(n):\n\tk,x=map(int,input().split())\n\n\tprint(9*(k-1)+x)", "t=int(input())\nfor z in range(t):\n    k,x=[int(x) for x in input().split()]\n    for i in range(x+1,x+10):\n        p=i%9\n        if p==0:\n            p=9\n        if p==x:\n            diff=i-x\n            break\n    ans=x+(k-1)*diff\n    #print(diff)\n    print(ans)\n\n        \n            \n"]