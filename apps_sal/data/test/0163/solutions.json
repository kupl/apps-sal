["from math import *\nfrom sys import *\nfrom queue import *\nfrom decimal import *\n\nn,k=(int(z) for z in input().split())\ns=input()\ni=0\nwhile i<len(s) and s[i] not in [\"G\",\"T\"]:\n  i+=1\ni+=k\nwhile i<len(s) and s[i] not in [\"G\",\"T\",\"#\"]:\n  i+=k\nif i>=len(s) or s[i]==\"#\":\n  print(\"NO\")\nelse:\n  print(\"YES\")", "n,k=[int(i) for i in input().split()]\ns=input()\nf=s.find('G')\nt=s.find('T')\nif f<t:\n    f,t=t,f\nif (f-t)%k:\n    print('NO')\nelse:\n    for i in range(t+k,f,k):\n        if s[i]=='#':\n            print('NO')\n            break\n    else:\n        print('YES')\n", "import sys\nn, k = list(map(int, input().split()))\ns = input()\na = s.index('G')\nb = s.index('T')\nwhile a < b:\n    b = b - k\n    pos = b\n    if pos >= 0 and (s[pos] == '.' or s[pos] == 'T'):\n        pass\n    else:\n        break\nwhile a > b:\n    b = b + k\n    pos = b\n    if pos < n and (s[pos] == '.' or s[pos] == 'T'):\n        pass\n    else:\n        break\nif a != b:\n    print('NO')\nelse:\n    print('YES')\n    \n", "n, k = list(map(int, input().split()))\nstring = input()\ngood = False\nanswer = True\ncounter = 0\nwhile True:\n    if counter >= n:\n        answer = False\n        break\n    if not good and string[counter] in \"GT\":\n        good = True\n        counter += k\n    elif not good:\n        counter += 1\n    else:\n        if string[counter] == \"#\":\n            answer = False\n        if string[counter] in \"GT\":\n            break\n        counter += k\nif answer:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, k = map(int, input().split())\ns = input()\nid1 = s.find('G')\nid2 = s.find('T')\nif abs(id1 - id2) % k:\n    print(\"NO\")\n    return\ncoef = 1\nif id2 < id1:\n    coef = -1\nwhile id1 != id2 and s[id1] in ('G', '.', 'T'):\n    id1 += coef * k\nif id1 == id2:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n,k = list(map(int,input().split()))\na = list(input())\ni = a.index(\"G\")\nj = a.index(\"T\")\nif i > j:\n\ti,j = j,i\nwhile True:\n\tif i == j:\n\t\tprint(\"YES\")\n\t\tbreak\n\telif i >= j or a[i] == \"#\":\n\t\tprint(\"NO\")\n\t\tbreak\n\telse:\n\t\ti += k\n\n", "def main():\n    n, k = list(map(int, input().split()))\n    a = input()\n    l = 0\n    r = 0\n    for i in range(n):\n        if (a[i] == 'G'):\n            l = i\n        elif (a[i] == 'T'):\n            r = i\n    if (l < r):\n        if ((r - l) % k == 0):\n            for i in range(l, r + 1, k):\n                if (a[i] == '#'):\n                    print(\"NO\")\n                    return\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if ((r - l) % k == 0):\n            for i in range(r, l + 1, k):\n                if (a[i] == '#'):\n                    print(\"NO\")\n                    return\n            print(\"YES\")\n        else:\n            print(\"NO\")\nmain()", "n,k = list(map(int,input().split()))\na = input()\ng = 0\nt = 0\n\nfor j in range(n):\n    if a[j] == 'G':\n        g = j\n    if a[j] == 'T':\n        t = j\nif g < t:\n    g, t = t, g\nif (g - t) % k == 0:\n    per = 0\n    for j in range(t, g+1, k):\n        if a[j] == '#':\n            per = 1\n            break\n    if per == 1:\n        print('NO')\n    else:\n        print('YES')\nelse:\n    print('NO')\n", "n,k=[int(item) for item in input().split()]\ns=list(input())\n\ng = s.index(\"G\")\nt = s.index(\"T\")\nv = 0\nif g < t: v = k\nelse : v = -k\ni = g\nwhile i >= 0 and i < n:\n    if i == t:\n        print(\"YES\")\n        break\n    elif s[i] == \"#\":\n        print(\"NO\")\n        break\n    i += v\nelse:\n    print(\"NO\")", "n, k = [int(x) for x in input().split()]\nd = [False] * n\nt = input()\ntmp = t.index('G')\ni = tmp + k\ncan = True\nans = False\nwhile i < n and can:\n    if (t[i] == '#'):\n        can = False\n    else:\n        d[i] = True\n        i += k\ni = tmp - k\ncan = True\nwhile i > - 1 and can:\n    if (t[i] == '#'):\n        can = False\n    else:\n        d[i] = True\n        i -= k\ntd = t.index('T')\nif (d[td] == True):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, k = map(int, input().split())\ns = input()\nans = True\nif s.find(\"G\") > s.find(\"T\"):\n\ts = s[::-1]\ns = s[s.find(\"G\")::k]\nif s.find(\"T\") != -1:\n\ts = s[:s.find(\"T\") + 1]\n\tif \"#\" in s:\n\t\tans = False\nelse:\n\tans = False\nif ans:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "from sys import stdin\n\nn, k = list(map(int, stdin.readline().split()))\n\ns = stdin.readline().strip()\n\nindex = s.find('G')\nindex2 = s.find('T')\n\nif index > index2:\n    s = ''.join(reversed(s))\n\n\nindex = s.find('G') + k\n\nwhile index < n:\n    if s[index] == 'T':\n        print('YES')\n        break\n    if s[index] == '#':\n        print('NO')\n        break\n    index += k\nelse:\n    print('NO')\n", "n, k = list(map(int, input().split()))\nst = list(input())\ng = st.index(\"G\")\nt = st.index(\"T\")\n\nif abs(g - t) % k != 0:\n    print(\"NO\")\nelse:\n    start = min(g, t)\n    end = max(g, t)\n    while start != end:\n        start += k\n        if st[start] == '#':\n            print(\"NO\")\n            return\n    print(\"YES\")\n", "n, k = map(int, input().split())\ns = input()\ni = s.find(\"G\")\nans = False\nwhile i < n:\n    if s[i] == \"#\":\n        break\n    if s[i] == \"T\":\n        ans = True\n        break\n    i += k\ni = s.find(\"G\")\nwhile i > -1:\n    if s[i] == \"#\":\n        break\n    if s[i] == \"T\":\n        ans = True\n        break\n    i -= k\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, k = map(int, input().split())\ns = input()\na = []\ng = 0\nt = 0\nfor i in range(n):\n    if s[i] == '#':\n        a.append(i)\n    if s[i] == 'G':\n        g = i\n    if s[i] == 'T':\n        t = i\nif abs((t - g) % k != 0):\n    print(\"NO\")\n    raise SystemExit\nif t > g:\n    for i in range(g, t, k):\n        if i in a:\n            print(\"NO\")\n            raise SystemExit\nelse:\n    for i in range(t, g, k):\n        if i in a:\n            print(\"NO\")\n            raise SystemExit\nprint(\"YES\")", "\n\nn,k=list(map(int,input().split()))\nligne=input()\n\nfor i in range(n):\n    car=ligne[i]\n    if car==\"G\":\n        depart=i\n    elif car==\"T\":\n        arrive=i\ni=depart\nwhile n>i and (ligne[i]==\".\" or ligne[i]==\"G\"):\n    i+=k\nj=depart\n\nwhile j>0 and (ligne[j]==\".\" or ligne[j]==\"G\"):\n    j-=k\n    \nif j==arrive or i==arrive:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, k = list(map(int, input().split()))\ns = input()\ng = s.index(\"G\")\nt = s.index(\"T\")\nif (g>t):\n  g,t = t,g\nif (t-g)%k:\n  print(\"NO\")\nelif \"#\" in s[g+k:t:k]:  \n  print(\"NO\")\nelse:\n  print(\"YES\")\n", "n, k = [int(x) for x in input().split()]\ns = input()\n\nstart, target = 0, 0\nfor i, c in enumerate(s):\n    if c == 'G':\n        start = i\n    if c == 'T':\n        target = i\n\nvisited = set()\n\ndef dfs(i):\n    if i in visited:\n        return False\n    if i == target:\n        return True\n    if not (0 <= i < len(s)) or s[i] == '#':\n        return False\n    visited.add(i)\n    return dfs(i-k) or dfs(i+k)\n\nprint('YES' if dfs(start) else 'NO')\n", "def main():\n    n, k = list(map(int, input().split()))\n    s = input()\n    g, t = s.find('G'), s.find('T')\n    if g < t:\n        s = s[g:t + 1:k]\n    else:\n        s = s[t:g + 1:k][::-1]\n    print((\"NO\", \"YES\")[s[0] == 'G' and s[-1] == 'T' and '#' not in s])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = map(int, input().split())\na = input()\npos = -1\nfor i in range(n):\n    if a[i] == \"G\":\n        pos = i\n        break\nfor i in range(pos, len(a), k):\n    if a[i] == \"T\":\n        print(\"YES\")\n        return\n    if a[i] == \"#\":\n        break\nfor i in range(pos, -1, -k):\n    if a[i] == \"T\":\n        print(\"YES\")\n        return\n    if a[i] == \"#\":\n        break\nprint(\"NO\")", "'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\ndef __starting_point():\n    main()\n'''\n#372\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    n,c=map(int,stdin.readline().split())\n    tup=tuple(map(int,stdin.readline().split()))\n    counter=1\n    for i in range(1,n):\n        if tup[i]-tup[i-1]<=c:\n            counter+=1\n        else:\n            counter=1\n    stdout.write(str(counter))\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    s=stdin.readline().strip().lower()\n    dic={}\n    qcounter=0\n    for i in 'qwertyuiopasdfghjklzxcvbnm':\n        dic[i]=0\n    if len(s)<26:\n        stdout.write('-1')\n    else:\n        for i in s:\n            if i=='?':\n                qcounter+=1\n            else:\n                dic[i]+=1\n        l=[]\n        x=list(dic.values()).count(0)\n        if qcounter==26 and x==26:\n            stdout.write('qwertyuiopasdfghjklzxcvbnm'.upper())\n        elif x==0 and qcounter==0:\n            stdout.write(s.upper())\n        elif qcounter>=x:\n            for i in 'qwertyuiopasdfghjklzxcvbnm':\n                if dic[i]==0:\n                    l.append(i.upper())\n            m=len(l)\n            i=0\n            t=''\n            for j in range(len(s)):\n                if s[j]=='?':\n                    if i>=m:\n                        i=0\n                    t=t[:j]+l[i]\n                    i+=1\n                else:\n                    t+=s[j].upper()\n            stdout.write(t)\n        else:\n            stdout.write('-1')\ndef __starting_point():\n    main()\n'''\n#373\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    tup=tuple(map(int,stdin.readline().split()))\n    if n==1:\n        if tup[0]==0:\n            stdout.write('UP')\n        elif tup[0]==15:\n            stdout.write('DOWN')\n        else:\n            stdout.write('-1')\n    else:\n        if tup[-1]-tup[-2]>0:\n            if tup[-1]==15:\n                stdout.write('DOWN')\n            else:\n                stdout.write('UP')\n        else:\n            if tup[-1]==0:\n                stdout.write('UP')\n            else:\n                stdout.write('DOWN')\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    s=stdin.readline().strip()\n    rcount=s.count('r')\n    bcount=s.count('b')\n    #print(rcount,bcount)\n    if n&1:\n        count=0\n        if abs(rcount-bcount)==1:\n            if rcount>bcount:\n                for i in s[::2]:\n                    if i!='r':\n                        count+=1\n            else:\n                for i in s[::2]:\n                    if i!='b':\n                        count+=1\n        else:\n            mid=n//2+1\n            xtra=max(rcount,bcount)-mid\n            if rcount>bcount:\n                 for i in s[::2]:\n                    if i!='r':\n                        count+=1\n            else:\n                 for i in s[::2]:\n                    if i!='b':\n                        count+=1\n            count+=xtra\n    else:\n        count=0\n        if bcount==rcount:\n            if s[0]=='r':\n                for i in s[::2]:\n                    if i!='r':\n                        count+=1\n            else:\n                for i in s[::2]:\n                    if i!='b':\n                        count+=1\n        else:\n            count=abs(bcount-acount)\n    stdout.write(str(count))\ndef __starting_point():\n    main()\n'''\n#3\n'''\ndef main():\n    from sys import stdin,stdout\n    n,t=map(int,stdin.readline().split())\n    s=stdin.readline().strip()\n    d=s.index('.')\n    p=s\n    #print(p,s,d)\n    for _ in range(t):\n        n=len(s)\n        #print(n)\n        for i in range(d+1,n):\n            #print(i)\n            if int(s[i])>=5:\n                if i-1==d:\n                    t=int(s[i-2])+1\n                    s=s[:i-2]+str(t)\n                    break\n                else:\n                    t=int(s[i-1])+1\n                    s=s[:i-1]+str(t)\n                    break\n        if p==s:\n            break\n        else:\n            p=s\n    stdout.write(s)\ndef __starting_point():\n    main()\n'''\n#ENCODE 16.1\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    for _ in range(int(stdin.readline())):\n        s='pikachu'\n        t=stdin.readline().strip()\n        for i in t:\n            if len(s)==0:\n                break\n            if i in s:\n                s=s.replace(i,'')\n        if(len(s)):\n            stdout.write('NO\\n')\n        else:\n            stdout.write('YES\\n')\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    for _ in range(int(stdin.readline())):\n        n=int(stdin.readline())\n        n=n*(n+1)*(2*n+1)\n        n//=6\n        stdout.write(str(n)+'\\n')\ndef __starting_point():\n    main()\n'''\n#5\n'''\ndef main():\n    def gcd(a,b):\n        if b:\n            return gcd(b,a%b)\n        else:\n            return a\n    from sys import stdin,stdout\n    n,q=map(int,stdin.readline().split())\n    tup=tuple(map(int,stdin.readline().split()))\n    for _ in range(q):\n        c=0\n        i=int(stdin.readline())\n        if i!=1:\n            for k in range(i-1):\n                if gcd(tup[k],tup[i-1])!=1:\n                    c+=1\n        if c:\n            stdout.write(str(c)+'\\n')\n        else:\n            stdout.write('-1\\n')\ndef __starting_point():\n    main()\n'''\n#374\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    s=stdin.readline().strip().lower()\n    l=[]\n    counter=0\n    for i in range(n):\n        if s[i]=='b':\n            counter+=1\n        else:\n            if counter:\n                l.append(counter)\n                counter=0\n    if counter:\n        l.append(counter)\n    if len(l):\n        stdout.write(str(len(l))+'\\n')\n        for i in l:\n            stdout.write(str(i)+' ')\n    else:\n        stdout.write('0')\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    n,k=map(int,stdin.readline().split())\n    p=[]\n    for _ in range(n):\n        p.append(stdin.readline().strip())\n    p.sort(key=len)\n    P=stdin.readline().strip()\n    j=0\n    count=0\n    for i in p:\n        j+=1\n        if len(i)==len(P):\n            count+=1\n            minim=count\n            break\n        else:\n            count+=1\n            if j%k==0:\n                count+=5\n    count=0\n    j=0\n    for i in p:\n        j+=1\n        if len(i)>len(P):\n            if (j-1)%k==0:\n                count-=5\n            maxim=count\n            break\n        else:\n            if i==p[-1]:\n                maxim=count+1\n                break\n            else:\n                count+=1\n                #print(count,end=', ')\n                if j%k==0:\n                    count+=5\n                #print(count)\n    stdout.write(str(minim)+' '+str(maxim))\ndef __starting_point():\n    main()\n'''\n#375\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    x,y,z=map(int,stdin.readline().split())\n    minim=min(x,y,z)\n    maxim=max(x,y,z)\n    minimum=-1\n    for i in range(minim,maxim+1):\n        if minimum<0:\n            minimum=abs(i-x)+abs(i-y)+abs(i-z)\n        else:\n            minimum=min(minimum,abs(i-x)+abs(i-y)+abs(i-z))\n    stdout.write(str(minimum))\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    s=stdin.readline()\n    bra=[]\n    line=set()\n    w=''\n    braketflag=False\n    for i in s:\n        if i=='_':\n            if w!='':\n                if not braketflag:\n                    line.add(w)\n                else:\n                    bra.append(w)\n            w=''\n        elif i=='(':\n            braketflag=True\n            if w!='':\n                line.add(w)\n            w=''\n        elif i==')':\n            braketflag=False\n            if w!='':\n                bra.append(w)\n            w=''\n        elif i=='\\n':\n            if w!='':\n                line.add(w)\n        else:\n            w+=i\n    maxi=0\n    for i in line:\n        maxi=max(maxi,len(i))\n    stdout.write(str(maxi)+' '+str(len(bra)))\ndef __starting_point():\n    main()\n'''\n'''\n#3\ndef main():\n    from sys import stdin,stdout\n    n,m=map(int,stdin.readline().split())\n    l=list(map(int,stdin.readline().split()))\n    dic={}\n    for j in range(1,m+1):\n        dic[j]=0\n    for i in l:\n        if i in dic.keys():\n            dic[i]+=1\n        else:\n            dic[i]=1\n    eq=n//m\n    c=0\n    for j in range(1,m+1):\n        if dic[j]<eq:\n            break\n    i=0\n    while i<n:\n        if l[i]>m:\n            if dic[j]<eq:\n                l[i]=j\n                dic[j]+=1\n                c+=1\n                i+=1\n            else:\n                j+=1\n                if j>m:\n                    break\n        else:\n            i+=1\n    flag=True\n    for j in range(1,m+1):\n        if dic[j]<eq:\n            flag=False\n            break\n    if flag:\n        stdout.write(str(eq)+' '+str(c)+'\\n')\n        for i in l:\n            stdout.write(str(i)+' ')\n    else:\n        i=0\n        while(i<n):\n            if dic[l[i]]>eq:\n                if j<=m and dic[j]<eq:\n                    l[i]=j\n                    dic[j]+=1\n                    c+=1\n                elif j<=m:\n                    j+=1\n                else:\n                    break\n            i+=1\n        stdout.write(str(eq)+' '+str(c)+'\\n')\n        for i in l:\n            stdout.write(str(i)+' ')\ndef __starting_point():\n    main()\n'''\n#377\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    k,r=map(int,stdin.readline().split())\n    rem=k%10\n    if rem:\n        if rem==r:\n            stdout.write('1')\n        else:\n            if rem ==5:\n                a=2\n            elif rem == 2:\n                a=5\n            else:\n                a=11\n            for i in range(1,10):\n                if (rem*i) %10==r:\n                    break\n            stdout.write(str(min(a,i)))\n    else:\n        stdout.write('0')\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    n,k=map(int,stdin.readline().split())\n    t=tuple(map(int,stdin.readline().split()))\n    l=[]\n    c=0\n    l+=[t[0]]\n    for i in range(1,n):\n        s=l[i-1]+t[i]\n        if s<k:\n            c+=(k-s)\n            l.append(t[i]+(k-s))\n        else:\n            l.append(t[i])\n    stdout.write(str(c)+'\\n')\n    for i in l:\n        stdout.write(str(i)+' ')\ndef __starting_point():\n    main()\n'''\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    for _ in range(int(stdin.readline())):\n        m1,m2,m3=map(int,stdin.readline().split())\n        o1,o2,o3=map(int,stdin.readline().split())\n        p1,p2,p3=map(int,stdin.readline().split())\n        t=(sum((m1,m2,m3)),sum((o1,o2,o3)),sum((p1,p2,p3)),sum((m1,o1,p1)),sum((m2,o2,p2)),sum((m3,o3,p3)))\n        s=max(filter(lambda x: x&1 ,t))\n        stdout.write(str(s)+'\\n')\ndef __starting_point():\n    main()\n'''\n#378\n#1\n'''\ndef main():\n    from sys import stdin,stdout\n    s=stdin.readline().lower()\n    maxjump=0\n    j=1\n    for i in s:\n        if i=='a' or i=='e' or i=='i' or i=='o' or i=='u' or i=='y' or i=='\\n':\n            maxjump=max(maxjump,j)\n            j=1\n        else:\n            j+=1\n    stdout.write(str(maxjump))\ndef __starting_point():\n    main()\n'''\n#2\n'''\ndef main():\n    from sys import stdin,stdout\n    c=[]\n    for _ in range(int(stdin.readline())):\n        l,r=map(int,stdin.readline().split())\n        c.append(l-r)\n    flag=1\n    for i in c:\n        if i<0:\n            flag=0\n            break\n    if flag:\n        stdout.write('0')\n    else:\n        flag=2\n        for i in c:\n            if i>0:\n                flag=0\n                break\n        if flag:\n            stdout.write('0')\n        else:\n            index=1\n            csum=sum(c)\n            msum=csum\n            for i in range(len(c)):\n                nsum=abs(csum-c[i]*(-2))\n                if nsum > msum:\n                    index=i+1\n                    msum=nsum\n            stdout.write(str(index))\ndef __starting_point():\n    main()\n'''\n#NOVEMBER LONG 2016\n#ALEXTASK\n'''\ndef main():\n    from sys import stdin,stdout\n    from fractions import gcd\n    for _ in range(int(stdin.readline())):\n        n=int(stdin.readline())\n        tup=tuple(map(int,stdin.readline().split()))\n        lcm=(tup[0]*tup[1])//gcd(tup[0],tup[1])\n        for x in range(len(tup)):\n            for y in range(len(tup)):\n                if y>x:\n                    lcm=min(lcm,(tup[x]*tup[y])//gcd(tup[x],tup[y]))\n        stdout.write(str(lcm)+'\\n')\ndef __starting_point():\n    main()\n'''\n#CPERM\n'''\ndef main():\n    from sys import stdin,stdout\n    MOD=int(1e9)+7\n    def power(a,b):\n        if b==0:\n            return 1\n        if b & 1:\n            return (a*power(a,b-1))%MOD\n        else:\n            return power((a*a)%MOD,b>>1)%MOD\n    for _ in range(int(stdin.readline())):\n        n=int(stdin.readline())\n        n-=2\n        if n>0:\n            n=((power(2,n)-1)%MOD<<1)%MOD\n        else:\n            n=0\n        stdout.write(str(n)+'\\n')\ndef __starting_point():\n    main()\n'''\n#CHSQR\n'''\ndef main():\n    from sys import stdin,stdout\n    for _ in range(int(stdin.readline())):\n        n=int(stdin.readline())\n        #arr=list(list(0 for x in range(n)) for x in range(n))\n        l=[]\n        i=0\n        j=2\n        while i<n-1:\n            if j > n:\n                j=n-2\n            l.append(n-j)\n            if j&1:\n                j-=2\n            else:\n                j+=2\n            i+=1\n        l+=([n]+l)\n        #print(l)\n        for i in range(n):\n            for j in range(n):\n                stdout.write(str(l[i+j])+' ')\n            stdout.write('\\n')\ndef __starting_point():\n    main()\n'''\n#URBANDEV\n'''\ndef main():\n    from sys import stdin,stdout\n    h=[]\n    v=[]\n    order=[]\n    n=int(stdin.readline())\n    for i in range(n):\n        a,b,x,y=map(int,stdin.readline().split())\n        if a-x:\n            h.append((min(a,x),max(a,x),y))\n            order.append(1)\n        else:\n            v.append((min(y,b),max(y,b),x))\n            order.append(0)\n    #print(l,r)\n    hd=list(0 for x in range(len(h)))\n    vd=list(0 for x in range(len(v)))\n    lightcounter=0\n    for i in range(len(v)):\n        for j in range(len(h)):\n            y=h[j][2]\n            x=v[i][2]\n            miny=v[i][0]\n            maxy=v[i][1]\n            minx=h[j][0]\n            maxx=h[j][1]\n            if y>miny and y<maxy and x>minx and x<maxx:\n                lightcounter+=1\n                hd[j]+=1\n                vd[i]+=1\n            elif x==minx:\n                if y>miny and y<maxy:\n                    lightcounter+=1\n                    hd[j]+=1\n                    vd[i]+=1\n            elif x==maxx:\n                if y>miny and y<maxy:\n                    lightcounter+=1\n                    hd[j]+=1\n                    vd[i]+=1\n            elif miny==y:\n                if x>minx and x<maxx:\n                    lightcounter+=1\n                    hd[j]+=1\n                    vd[i]+=1\n            elif maxy==y:\n                if x>minx and x<maxx:\n                    lightcounter+=1\n                    hd[j]+=1\n                    vd[i]+=1\n    stdout.write(str(lightcounter)+'\\n')\n    for i in range(n):\n        if order[i]:\n            stdout.write(str(hd[0])+' ')\n            hd=hd[1:]\n        else:\n            stdout.write(str(vd[0])+' ')\n            vd=vd[1:]\ndef __starting_point():\n    main()\n'''\n#FRIEMEET\n'''\nfrom collections import *\nclass Graph:\n    def __init__(self):\n        self.nodes = set()\n        self.edges = defaultdict(list)\n        self.distances = {}\n\n    def add_node(self, value):\n        self.nodes.add(value)\n\n    def add_edge(self, from_node, to_node, distance):\n        self.edges[from_node].append(to_node)\n        self.edges[to_node].append(from_node)\n        self.distances[(from_node, to_node)] = distance\n        self.distances[(to_node, from_node)] = distance\n\n\ndef dijsktra(graph, initial):\n    visited = {initial: 0}\n    path = {}\n\n    nodes = set(graph.nodes)\n\n    while nodes: \n        min_node = None\n        for node in nodes:\n            if node in visited:\n                if min_node is None:\n                    min_node = node\n                elif visited[node] < visited[min_node]:\n                    min_node = node\n\n        if min_node is None:\n            break\n\n        nodes.remove(min_node)\n        current_weight = visited[min_node]\n\n        for edge in graph.edges[min_node]:\n            weight = current_weight + graph.distances[(min_node, edge)]\n            if edge not in visited or weight < visited[edge]:\n                visited[edge] = weight\n                path[edge] = min_node\n\n    return visited, path\n\ndef main():\n    from sys import stdin,stdout\n    from fractions import Fraction\n    for _ in range(int(stdin.readline())):\n        G=Graph()\n        n,m=map(int,stdin.readline().split())\n        for x in range(1,n+1):\n            G.add_node(x)\n        for _ in range(n-1):\n            a,b,l=map(int,stdin.readline().split())\n            G.add_edge(a,b,l)\n        l=tuple(map(int,stdin.readline().split()))\n        ksum=0\n        for i in range(len(l)-1):\n            d,p=dijsktra(G,l[i])\n            for j in range(i+1,len(l)):\n                ksum+=d[l[j]]*2\n        ans=Fraction(ksum,m*m)\n        stdout.write(str(ans.numerator)+' '+str(ans.denominator)+'\\n')\ndef __starting_point():\n    main()\n'''\n#734A\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    s=stdin.readline().strip()\n    dcount=s.count('D')\n    acount=s.count('A')\n    if dcount>acount:\n        stdout.write('Danik')\n    elif dcount<acount:\n        stdout.write('Anton')\n    else:\n        stdout.write('Friendship')\ndef __starting_point():\n    main()\n'''\n#734B\n'''\ndef main():\n    from sys import stdin,stdout\n    a,b,c,d=map(int,stdin.readline().split())\n    min256=min(a,c,d)\n    ksum=256*min256\n    a-=min256\n    min32=min(a,b)\n    ksum+=min32*32\n    stdout.write(str(ksum))\ndef __starting_point():\n    main()\n'''\n#381\n#A\n'''\ndef main():\n    from sys import stdin,stdout\n    n,a,b,c=map(int,stdin.readline().split())\n    rem=n%4\n    if rem:\n        if rem & 1:\n            if rem==1:\n                minim=min((3*a,c,b+a))\n                stdout.write(str(minim))\n            else:\n                minim=min(a,c+b)\n                stdout.write(str(minim))\n        else:\n            minim=min((b,2*a,2*c))\n            stdout.write(str(minim))\n    else:\n        stdout.write('0')\ndef __starting_point():\n    main()\n'''\n#B\n'''\ndef main():\n    from sys import stdin,stdout\n    n,m=map(int,stdin.readline().split())\n    t=tuple(map(int,stdin.readline().split()))\n    maxim=0\n    for i in range(m):\n        l,r=map(int,stdin.readline().split())\n        s=sum(t[l-1:r])\n        if s>0:\n            maxim+=s\n    stdout.write(str(maxim))\ndef __starting_point():\n    main()\n'''\n#C\n'''\ndef main():\n    from sys import stdin,stdout\n    n,m=map(int,stdin.readline().split())\n    minim=n\n    a=list(n for x in range(n))\n    #print(a)\n    for i in range(m):\n        l,r=map(int,stdin.readline().split())\n        if r-l < minim:\n            minim=r-l\n            minimpair=(l-1,r)\n    a[minimpair[0]:minimpair[1]]=list(i for i in range(minim+1))\n    stdout.write(str(minim+1)+'\\n')\n    for i in a:\n        stdout.write(str(i)+' ')\ndef __starting_point():\n    main()\n'''\n'''\n#L42\n#1\ndef main():\n    from sys import stdin,stdout\n    for _ in range(int(stdin.readline())):\n        s=stdin.readline().strip()\n        t=''\n        for i in s:\n            if i=='<':\n                t+='>'\n            elif i=='>':\n                t+='<'\n            else:\n                t+=i\n        stdout.write(str(t.count('><'))+'\\n')\ndef __starting_point():\n    main()\n'''\n#382\n#1\ndef main():\n    from sys import stdin,stdout\n    n,k=list(map(int,stdin.readline().split()))\n    s=stdin.readline().strip()\n    g=s.index('G')\n    t=s.index('T')\n    if abs(t-g)%k:\n        stdout.write('NO')\n    else:\n        minim=min(t,g)\n        maxim=max(t,g)\n        flag=1\n        while minim<maxim:\n            if s[minim]=='#':\n                flag=0\n                break\n            minim+=k\n        if flag:\n            stdout.write('YES')\n        else:\n            stdout.write('NO')\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\ndef solve(n, k, s):\n    i, j = s.index('G'), s.index('T')\n    if (i - j) % k != 0:\n        return False\n    for k in range(i, j, (k if i < j else -k)):\n        if k >= n or k < 0 or s[k] == '#':\n            return False\n    return True\n\nn, k = [int(x) for x in input().split()]\ns = input()\nprint('YES' if solve(n, k, s) else 'NO')\n    \n", "n, k = list(map(int, input().split()))\ns = input()\na = s.index('G')\nb = s.index('T')\nd = [0] * 1000\nd[a] = 1\nfor j in range(200):\n    for i in range(n):\n        if i - k >= 0 and d[i - k] == 1 and s[i] != '#':\n            d[i] = 1\n        if d[i + k] == 1 and s[i] != '#':\n            d[i] = 1\nif d[b]:\n    print('YES')\nelse:\n    print('NO')\n", "n, k = list(map(int, input().split()))\n\nline = input()\n\nfor x in range(n):\n    if line[x] == \"G\":\n        g = x    \n    elif line[x] == \"T\":\n        t = x\n\nif (g - t) % k == 0:\n    if g > t:\n        while g > t:\n            if g - k == t:\n                print(\"YES\")\n                return\n            elif line[g - k] == \"#\":\n                print(\"NO\")\n                return\n            else:\n                g = g - k\n    else:\n        while g < t:\n            if g + k == t:\n                print(\"YES\")\n                return\n            elif line[g + k] == \"#\":\n                print(\"NO\")\n                return\n            else:\n                g = g + k\nelse:\n    print(\"NO\")\n    return\n", "n,k=list(map(int,input().split()))\ns=input()\ng,t=0,0\nfor i in range(len(s)):\n    if s[i]=='G':\n        g=i\n    if s[i]=='T':\n        t=i\nif (t-g)%k==0:\n    if t>g:\n        i=g\n        B=True\n        while i<t:\n            if s[i]==\"#\":\n                B=False\n                break\n            i+=k\n    else:\n        i=t\n        B=True\n        while i<g:\n            if s[i]==\"#\":\n                B=False\n                break\n            i+=k\n    if B:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelse:\n    print(\"NO\")\n"]