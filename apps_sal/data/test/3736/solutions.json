["s=input()\nM={\"A\",\"H\",\"I\",\"M\",\"O\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\"}\nans=\"YES\"\nn=len(s)\nfor i in range(len(s)//2):\n    x=s[i]\n    y=s[n-i-1]\n    if(x!=y or x not in M):\n        ans=\"NO\"\n        break\nif(n%2==1):\n    if(s[n//2] not in M):\n        ans=\"NO\"\nprint(ans)\n    \n", "a = input()\nfor i in range(len(a)):\n\tif a[i] != a[len(a) - i - 1] or a[i] not in ('A','H','I','M','O','T','U','V','W','X','Y'):\n\t\tprint(\"NO\")\n\t\treturn\nprint(\"YES\")", "s=input()\nz=['A','H','M','T','U','V','W','O','I','X','Y']\n\nf1=True\nif (s[::-1]==s):\n    f1=True\nelse:\n    f1=False\n\n\nsa=set()\nv=True\nfor i in range (0,len(s)):\n    sa.add(s[i])\n\nsals=list(sa)\nfor i in range (0,len(sals)):\n    if (sals[i] in z):\n        v=True\n    else:\n        v=False\n        break\n\nif (f1==True and v==True):\n    print (\"YES\")\nelse:\n    print (\"NO\")\n", "l = ['A', 'H', 'I', 'M', 'O', 'T', 'U', 'V', 'W', 'X', 'Y']\n\ns = input()\n\nif s == s[::-1] and len(set(s) | set(l)) == len(l): print('YES')\nelse:print('NO')", "\n\ngood = set('AHIMOTUVWXY')\n\nin_str = input(\"\")\n\nstr_len = len(in_str)\n\nresult = \"\"\n\ni = 0\n\nwhile(i < str_len/2):\n    if((in_str[i] in good) and (in_str[i] == in_str[-1-i])):\n        i += 1\n    else:\n        result = \"NO\"\n        break\n\nif(result != \"NO\"):\n    result = \"YES\"\n\nprint(result)\n        \n", "good = ['A', 'H', 'I', 'M', 'O', 'T', 'U', 'W', 'V', 'X', 'Y']\ns = input().strip()\nf = 1\nfor i in range(len(s)):\n    if s[i] not in good:\n        f = 0\nif f and s == s[::-1]:\n    print('YES')\nelse:\n    print('NO')\n", "p, t = 'AHIMOTUVWXY', input()\nn = len(t) // 2\nprint('YES' if all(c in p for c in t) and (n < 1 or t[: n][:: -1] == t[-n :]) else 'NO')", "import sys\n\ndef check(text):\n    legal = 'AHIMOTUVWXY'\n    for i in text:\n        if i not in legal:\n            return False\n    rev = list(text)\n    rev.reverse()\n    if text != ''.join(rev):\n        return False\n    return True\n\ndef __starting_point():\n    text = sys.stdin.readline().split()[0]\n    if check(text):\n        print('YES')\n    else:\n        print('NO')\n\n__starting_point()", "s = input()\nif s == s[::-1] and not 'N' in s and not 'L' in s and not'G' in s and not 'F' in s and not 'R' in s and not 'S' in s and not 'C' in s and not 'Q' in s and not 'B' in s and not 'E' in s and not 'D' in s and not 'J' in s and not 'K' in s and not 'Z' in s and not 'P' in s:\n    print('YES')\nelse:\n    print('NO')", "s = input().strip()\na = [0]*26\nfor i in range(len(s)):\n    a[ord(s[i]) - ord('A')] += 1\nif sum(a) - a[0] - a[7] - a[8] - a[12] - a[14] - a[19] - a[20] - a[21] - a[22] - a[23] - a[24] == 0 and s == ''.join(reversed(list(s))):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "x = input();\nis_mirror=\"YES\"\nbad_list=[\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"J\",\"K\",\"L\",\"N\",\"P\",\"Q\",\"R\",\"S\",\"Z\"]\nfor letter in x:\n    if letter in bad_list:\n        is_mirror=\"NO\"\n        break\nlist=[]\nif is_mirror==\"YES\":\n    for letter in x:\n        list.append(letter)\nn=len(list)\nfor i in range(n-1):\n    if list[i]!=list[n-1-i]:\n        is_mirror=\"NO\"\nprint(is_mirror)\n", "s = input().strip()\nfl = True\nfor i in s:\n    if i not in 'AHIMOTUVWXY':\n        fl = False\n        break\nif (s == s[::-1] and fl):\n    print('YES')\nelse:\n    print('NO')", "def test_achiral(ch, achiral):\n    for i in ch:\n        if i in achiral:\n            print(\"NO\")\n            return()\n        \n    ch1=\"\"\n    j=-1\n    while j>=-len(ch):\n        ch1=ch1+ch[j]\n        j-=1\n    if ch1==ch:\n        print(\"YES\")\n        return()\n    else:\n        print(\"NO\")\n        return()\nachiral=\"BCDEFGJKLNPQRSZ\"\nch=input()\ntest_achiral(ch,achiral)\n", "n=input()\ni=0\nk=len(n)-1\n_b=True\nwhile i<=k and _b:\n\tif n[i]==n[k] and n[i] in ['A','H','I','M','O','T','U','V','W','X','Y']:\n\t\t_b=True\n\t\ti+=1\n\t\tk-=1\n\telse:\n\t\t_b=False\nif _b: print('YES')\nelse: print('NO')", "def main():\n    name = input()\n    s = ('B', 'C', 'D', 'E', 'F', 'G', 'J', 'K', 'L', 'N', 'P', 'Q', 'R', 'S', 'Z')\n    for ch in s:\n        if ch in name:\n            print('NO')\n            return\n    if name[:len(name) // 2] != name[::-1][:len(name) // 2]:\n        print('NO')\n        return\n    print('YES')\n\nmain()\n", "from sys import stdin\n\n__author__ = 'artyom'\n\nexclusions = 'BCDEFGJKLNPQRSZ'\nst = stdin.readline().strip()\nl = len(st)\np = l // 2\nfor i in range(l):\n  if st[i] in exclusions or (i <= p and st[i] != st[l - i - 1]):\n    print('NO')\n    return\n\nprint('YES')", "\nimport sys\nimport math\n  \nst = sys.stdin.readline()\nl = len(st) - 1\n\ndct = {'A' : 1, 'B': 0, 'C': 0, 'D': 0, 'E': 0, 'F': 0, 'G': 0, 'H': 1, 'I': 1,\n        'J': 0, 'K': 0, 'L': 0, 'M': 1, 'N': 0, 'O': 1, 'P': 0, 'Q': 0, 'R': 0, 'S': 0,\n        'T': 1, 'U': 1, 'V': 1, 'W': 1, 'X': 1, 'Y': 1, 'Z': 0 }\n\nif(l % 2 != 0):\n    if(dct[st[int(l / 2)]] == 0):\n        print(\"NO\")\n        return\n\nj = l\nfor i in range(int(l / 2)):\n    if(st[i] != st[j - 1] or dct[st[i]] == 0):\n        print(\"NO\")\n        return\n        \n    j -= 1\n        \nprint(\"YES\")\n\n", "def palindrome(n):\n    for i in range(0,len(n)):\n        if n[i] != n[-(i+1)]:\n            return 0\n    return 1\n\nlessgo = ['a','h','i','m','o','t','u','v','w','x','y']\ni = list(input())\nfor j in range(len(i)):\n    i[j] = i[j].lower()\n\nmir = 1\nfor j in range(len(i)):\n    if i[j] not in lessgo:\n        mir = 0\nif palindrome(i) == 1 and mir == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "word = list(input())\ndef poop(word):\n    correct = ['A','H','I','M','O','T','U','V','W','X','Y']\n    for i in word:\n        if i not in correct:\n            return \"NO\"\n    if list(reversed(word)) == word:\n        return \"YES\"\n    return \"NO\"\nprint(poop(word)) ", "import sys\n\ndef check(text):\n    legal = 'AHIMOTUVWXY'\n    for i in text:\n        if i not in legal:\n            return False\n    rev = list(text)\n    rev.reverse()\n    if text != ''.join(rev):\n        return False\n    return True\n\ndef __starting_point():\n    text = sys.stdin.readline().split()[0]\n    if check(text):\n        print('YES')\n    else:\n        print('NO')\n\n\n__starting_point()", "sl, s = 'AHIMOTUVWXY', input()\nprint('YES' if all(s[i] in sl and s[i] == s[len(s) - i - 1] for i in range(len(s))) else 'NO')", "s = input()\nk = 'AHIMOTUVWXY'\nr = True\nfor c in s:\n    r &= c in k\n    if not r: break\nif r and s == s[::-1]:\n    print('YES')\nelse:\n    print('NO')\n", "def isMirror(s):\n\tx = s[::-1]\n\tif(x != s):\n\t\treturn False\n\tn = s.count('A') + s.count('H') + s.count('I') + s.count('M') + s.count('O') + s.count('T') + s.count('U') + s.count('V') + s.count('W') + s.count('X') + s.count('Y')\n\tif(n != len(s)):\n\t\treturn False\n\treturn True\t\n\ns = input()\n\nif(isMirror(s) == True):\n\tprint('YES')\nelse:\n\tprint('NO')", "def main():\n    s = input()\n    print((\"NO\", \"YES\")[s == s[::-1] and all(c in \"AHIMOTUVWXY\" for c in s)])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# Name : Sachdev Hitesh\n# College : GLSICA\n\nuser = input()\nresu = user[::-1]\ns = len(user)\n#print(s)\nc = 0\nif user == resu:\n\tfor i in user:\n\t\tif i == 'A' or i == 'H' or i == 'I' or i == 'O' or i == 'T' or i == 'V' or \\\n\t\ti == 'W' or i == 'X' or i == 'Y' or i == 'M' or i == 'U'  :\n\t\t\tc = c + 1\nif c == s:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")"]