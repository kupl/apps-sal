["import re\nimport itertools\nfrom collections import Counter\n\nclass Task:\n    n, m = 0, 0\n    petyaScore = 0\n    vasyaScore = 0\n\t\n    def getData(self):\n        self.n, self.m = [int(x) for x in input().split(\" \")]\n\t\n    def solve(self):\n        n = self.n\n        m = self.m\n\n        if n != m:\n            self.vasyaScore = min(n, m)\n        else:\n            self.vasyaScore = min(n, m)\n        self.petyaScore = self.n + self.m - 1 - self.vasyaScore \n\n    def printAnswer(self):\n        print(self.petyaScore, self.vasyaScore)\n\ntask = Task();\ntask.getData();\ntask.solve();\ntask.printAnswer();\n", "3\n\nn, m = tuple(map(int, input().split()))\n\ndef solve(start, r, b):\n    i = 0\n    while r and b:\n        i += 1\n        if i % 2 == 0:\n            #if start[-1] == 'r' and r > 0 or start[-1] == 'b' and b == 0:\n            if (start[-1] == 'r'):\n                start.append('r')\n                r -= 1\n            else:\n                start.append('b')\n                b -= 1\n        else:\n            #if start[-1] == 'r' and b > 0 or start[-1] == 'b' and r == 0:\n            if (start[-1] == 'r'):\n                start.append('b')\n                b -= 1\n            else:\n                start.append('r')\n                r -= 1\n    if r: start.extend(['r'] * r)\n    if b: start.extend(['b'] * b)\n    return (len([1 for f, s in zip(start[:-1], start[1:]) if f == s]), len([1 for f, s in zip(start[:-1], start[1:]) if f != s]))\n\nprint(*max(solve(['r'], n - 1, m), solve(['b'], n, m - 1)))\n", "a, b = map(int, input().split())\nc = min(a, b)\nprint(a + b - 1 - c, c)", "def t(b, pr):\n    i, p = 1, [0, 0]\n    while b[0] or b[1]:\n        if i == 0:\n            c = pr if b[pr] else 1 - pr\n        else:\n            c = 1 - pr if b[1 - pr] else pr\n        p[c != pr] += 1\n        b[c] -= 1\n        i, pr = 1 - i, c\n    return p\n\nn, m = list(map(int, input().split()))\nv1, v2 = t([n - 1, m], 0), t([n, m - 1], 1)\nprint(' '.join(map(str, v1 if v1[0] >= v2[0] else v2)))\n", "a, b = map(int, input().split())\nprint(a + b - 1 - min(a, b), min(a, b))", "p,q=input().split()\np=int(p)\nq=int(q)\nhigh=max(p,q)\nlow=min(p,q)\nprint(\"%d %d\"%(p+q-1-low,low))", "n,m=map(int,input().split())\nprint(max(n,m)-1,min(n,m))", "n, m = list(map(int, input().split()))\nn1, m1, n2, m2 = n - 1, m, n, m - 1\ns1, s2 = \"R\", \"B\"\nturn = 2\nfor i in range(n + m - 1):\n\tif turn == 1:\n\t\tif s1[-1] == \"R\" and n1 >= 1:\n\t\t\tn1 -= 1\n\t\t\ts1 += \"R\"\n\t\telif m1 >= 1:\n\t\t\tm1 -= 1\n\t\t\ts1 += \"B\"\n\t\telse:\n\t\t\tn1 -= 1\n\t\t\ts1 += \"R\"\n\n\t\tif s2[-1] == \"R\" and n2 >= 1:\n\t\t\tn2 -= 1\n\t\t\ts2 += \"R\"\n\t\telif m2 >= 1:\n\t\t\tm2 -= 1\n\t\t\ts2 += \"B\"\n\t\telse:\n\t\t\tn2 -= 1\n\t\t\ts2 += \"R\"\n\telse:\n\t\tif s1[-1] == \"R\" and m1 >= 1:\n\t\t\tm1 -= 1\n\t\t\ts1 += \"B\"\n\t\telif n1 >= 1:\n\t\t\tn1 -= 1\n\t\t\ts1 += \"R\"\n\t\telse:\n\t\t\tm1 -= 1\n\t\t\ts1 += \"B\"\n\t\t\t\n\t\tif s2[-1] == \"R\" and m2 >= 1:\n\t\t\tm2 -= 1\n\t\t\ts2 += \"B\"\n\t\telif n2 >= 1:\n\t\t\tn2 -= 1\n\t\t\ts2 += \"R\"\n\t\telse:\n\t\t\tm2 -= 1\n\t\t\ts2 += \"B\"\n\tturn = 3 - turn\nans1 = sum([1 for i in range(n + m - 1) if s1[i] == s1[i + 1]])\nans2 = sum([1 for i in range(n + m - 1) if s2[i] == s2[i + 1]])\nans = max(ans1, ans2)\nprint(ans, n + m - 1 - ans)\n", "a,b=list(map(int,input().split()))\nprint(max(a,b)-1,min(a,b))\n", "a,b=list(map(int,input().split()))\nprint(max(a,b)-1,min(a,b))\n", "a,b=list(map(int,input().split()))\nprint(max(a,b)-1,min(a,b))\n", "a,b=sorted(map(int,input().split()))\nprint(b-1,a)\n##\n", "# your code goes here\narr = input().split()\na = int(arr[0])\nb = int(arr[1])\n#print('a = ' + str(a) + 'b = ' + str(b))\n\nif a%2 == 1 and b%2 == 1:\n\tif a < b:\n#\t\tprint('a')\n\t\ta -= 1\n\t\tflag = 1\n\telse:\n#\t\tprint('b')\n\t\tb -= 1\n\t\tflag = 2\nelif a%2 == 1:\n\ta -= 1\n\tflag = 1\nelif b%2 == 1:\n\tb -= 1\n\tflag = 2\nelse:\n\tif a > b:\n\t\ta -= 1\n\t\tflag = 1\n\telse:\n\t\tb -= 1\n\t\tflag = 2\nif flag == 1:\n\ts = 'a'\nelse:\n\ts = 'b'\nplay = 2\nwhile a > 0 and b > 0:\n\tif flag == 1:\n\t\tif play == 2:\n\t\t\ts += 'b'\n\t\t\tb -= 1\n\t\t\tplay = 1\n\t\t\tflag = 2\n\t\telse:\n\t\t\ts += 'a'\n\t\t\ta -= 1\n\t\t\tplay = 2\n\t\t\t\n\telse:\n\t\tif play == 2:\n\t\t\ts += 'a'\n\t\t\ta -= 1\n\t\t\tplay = 1\n\t\t\tflag = 1\n\t\telse:\n\t\t\ts += 'b'\n\t\t\tb -= 1\n\t\t\tplay = 2\n\t\t\nwhile a > 0:\n\ts += 'a'\n\ta -= 1\nwhile b > 0:\n\ts += 'b'\n\tb -= 1\ns = list(s)\nprev = s[0]\nn = len(s)\na = 0\nb = 0\nfor i in range(1,n):\n\tif s[i] == prev:\n\t\ta += 1\n\telse:\n\t\tb += 1\n\tprev = s[i]\nprint(str(a) + ' ' + str(b))", "def main(n, m):\n    if n == m:\n        return (n - 1, m)\n    if n > m:\n        temp = n\n        n = m\n        m = temp\n    return (m - 1, n)\n\n\nprint(\"{} {}\".format(*main(*list(map(int, input().split(' '))))))\n", "def test(begin, r, b):\n    bl = b\n    rl = r\n    if begin == 'b':\n        bl -= 1\n    else:\n        rl -= 1\n    last = begin\n    pt = 0\n    for i in range(r+b-1):\n        if i%2 == 0:\n            if last == 'b':\n                if rl > 0:\n                    rl -= 1\n                    last = 'c'\n                else:\n                    bl -= 1\n                    pt += 1\n            else:\n                if bl > 0:\n                    bl -= 1\n                    last = 'b'\n                else:\n                    rl -= 1\n                    pt += 1\n        else:\n            if last == 'b':\n                if bl > 0:\n                    bl -= 1\n                    pt += 1\n                else:\n                    rl -= 1\n                    last = 'c'\n            else:\n                if rl > 0:\n                    rl -= 1\n                    pt += 1\n                else:\n                    bl -= 1\n                    last = 'b'\n    return pt\n    \ninp = input().split(' ')\nr = int(inp[0])\nb = int(inp[1])\n\nbest = max(test('b', r, b), test('r', r, b))\nprint(best, r+b-best-1)\n\n                \n", "a,b=list(map(int,input().split()))\nc=min(a,b)\nprint(a+b-1-c,c)\n", "n,m=map(int,input().split())\nprint(n+m-1-min(n,m),min(n,m))", "n,m=map(int,input().split())\nprint(max(n,m)-1,min(n,m))", "from sys import stdin\nimport functools\nimport math\n\ndef read(): return list(map(int, stdin.readline().split()))\n\nn, m = read()\n\nb = min(n,m)\na = n+m-1-b\nprint( \"{0} {1}\".format(a,b) )\n", "n, m = list(map(int, input().split()))\nprint(max(n,m) - 1, min(n,m))\n\n", "from sys import stdin\nn, m = map(int, stdin.readline().split() )\nprint(max(n,m) - 1, min(n,m))", "n,m=map(int,input().split())\nprint(max(n,m)-1,min(n,m))", "m, n = map(int, input().split())\nprint(str(max(m, n)-1) + ' ' + str(min(m, n)))"]