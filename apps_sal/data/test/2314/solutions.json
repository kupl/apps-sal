["import sys\nreadline = sys.stdin.readline\n\ndef accumulate2d(X):\n    N = len(X)\n    M = len(X[0])\n    \n    for i in range(0, N):\n        for j in range(1, M):\n            X[i][j] += X[i][j-1]\n    \n    for j in range(0, M):\n        for i in range(1, N):\n            X[i][j] += X[i-1][j]\n    \n    return X\n\nN, M, Q = map(int, readline().split())\ntable = [None]*100\ntable[ord('R')] = 0\ntable[ord('G')] = 1\ntable[ord('B')] = 2\ntable[ord('Y')] = 3\n\nINF = 10**3\nD = [[table[ord(s)] for s in readline().strip()] for _ in range(N)]\nG = [[0]*M for _ in range(N)]\n\nBS = 25\ncandi = []\ngeta = M\nfor i in range(N-1):\n    for j in range(M-1):\n        if D[i][j] == 0 and D[i][j+1] == 1 and D[i+1][j+1] == 2 and D[i+1][j] == 3:\n            G[i][j] = 1\n            nh, nw = i, j\n            while True:\n                k = G[nh][nw]\n                fh, fw = nh-k, nw-k\n                k2 = 2*(k+1)\n                kh = k+1\n                if fh < 0 or fw < 0 or N < fh+k2-1 or M < fw+k2-1:\n                    break\n                if any(D[fh][j] != 0 for j in range(fw, fw+kh)) or\\\n                any(D[j][fw] != 0 for j in range(fh, fh+kh)) or\\\n                any(D[fh][j] != 1 for j in range(fw+kh, fw+k2)) or\\\n                any(D[j][fw+k2-1] != 1 for j in range(fh, fh+kh)) or\\\n                any(D[j][fw+k2-1] != 2 for j in range(fh+kh, fh+k2)) or\\\n                any(D[fh+k2-1][j] != 2 for j in range(fw+kh, fw+k2)) or\\\n                any(D[fh+k2-1][j] != 3 for j in range(fw, fw+kh)) or\\\n                any(D[j][fw] != 3 for j in range(fh+kh, fh+k2)):\n                    break\n                G[nh][nw] += 1\n            if G[nh][nw] > BS:\n                candi.append((nh, nw))\n\n \nGnum = [None] + [[[0]*M for _ in range(N)] for _ in range(BS)]\nfor h in range(N):\n    for w in range(M):\n        if G[h][w] > 0:\n            for k in range(1, min(BS, G[h][w])+1):\n                Gnum[k][h][w] = 1\n\nGnum = [None] + [accumulate2d(g) for g in Gnum[1:]]\n\n\nAns = [None]*Q\nfor qu in range(Q):\n    h1, w1, h2, w2 = map(lambda x: int(x)-1, readline().split())\n    res = 0\n    for k in range(min(BS, h2-h1+1, w2-w1+1), 0, -1):\n        hs, ws = h1+k-1, w1+k-1\n        he, we = h2-k, w2-k\n        if hs <= he and ws <= we:\n            cnt = Gnum[k][he][we]\n            if hs:\n                cnt -= Gnum[k][hs-1][we]\n            if ws:\n                cnt -= Gnum[k][he][ws-1]\n            if hs and ws:\n                cnt += Gnum[k][hs-1][ws-1]\n            if cnt:\n                res = k\n                break\n    \n    for nh, nw in candi:\n        if h1 <= nh <= h2 and w1 <= nw <= w2:\n            res = max(res, min(nh-h1+1, h2-nh, nw-w1+1, w2-nw, G[nh][nw]))\n    Ans[qu] = 4*res**2\nprint('\\n'.join(map(str, Ans)))"]