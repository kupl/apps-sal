["n, k, m = list(map(int, input().split()))\nw = list(input().split())\n\nlk = {}\nfor i in range(n):\n    lk[w[i]] = i\n\nc = list(map(int, input().split()))\n\nm = [10**19] * k\ngr = [0] * n\n\nfor i in range(k):\n    g = list(map(int, input().split()))\n    for j in g[1:]:\n        m[i] = min(m[i], c[j - 1])\n        gr[j - 1] = i\n\nlet = input().split()\nres = 0\nfor word in let:\n    res += m[gr[lk[word]]]\n\nprint(res)\n", "n,k,m = map(int, input().split())\nwords = input().split()\ncost = list(map(int, input().split()))\nnew_cost = {}\nfor _k in range(k):\n    a = list(map(int, input().split()))[1:]\n    c = min(cost[i-1] for i in a)\n    for i in a:\n        new_cost[words[i-1]] = c\ntext = input().split()\nres = 0\nfor word in text:\n    res += new_cost[word]\nprint(res)", "import atexit\nimport io\nimport sys\n\n# Buffering IO\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n    \n\ndef main():\n    n, k, m = [int(x) for x in input().split()]\n    s = input().split()\n    mm = {}\n    a = [int(x) for x in input().split()]\n    group = []\n    for i in range(k):\n        ii = [int(x) - 1 for x in input().split()][1:]\n        mc = min(a[x] for x in ii)\n        for iii in ii:\n            mm[s[iii]] = mc\n        \n    print(sum(mm[x] for x in input().split()))\n\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "def find_min_cost_word(words, group_words, costs):\n    cost_min = 10000000000\n    for word_ind in group_words:\n        cost_word = costs[word_ind-1]\n        cost_min = min(cost_min, cost_word)\n    return cost_min\n\nn, k, m = list(map(int, input().split()))\nwords = input().split()\ncosts = list(map(int, input().split()))\ngroups = []\nd = {}\nfor i in range(k):\n    tmp = list(map(int, input().split()))\n    x, group_words = tmp[0], tmp[1:]\n    min_cost_word = find_min_cost_word(words, group_words, costs)\n    for word_ind in group_words:\n        word = words[word_ind-1]\n        d[word] = min_cost_word\nmessage = input().split()\nc = 0\nfor w in message:\n    c += d[w]\nprint(c)", "import sys\nimport math\n\n\nn,k,m = list(map(int,sys.stdin.readline().strip().split(' ')))\nword_indexes = {word:i for i,word in enumerate(sys.stdin.readline().strip().split(' '))}\ncosts = list(map(int,sys.stdin.readline().strip().split(' ')))\nmin_costs = costs[:]\nfor ki in range(k):\n    group = list(map(int,sys.stdin.readline().strip().split(' ')))\n    min_so_far = float('inf')\n    for i in group[1:]:\n        min_so_far = min(min_so_far, costs[i-1])\n    for i in group[1:]:\n        min_costs[i-1] = min_so_far\nsentence = sys.stdin.readline().strip().split(' ')\n\nres = 0\nfor word in sentence:\n    word_index = word_indexes[word]\n    res += min_costs[word_index]\nprint(res)\n", "n,k,m=list(map(int,input().split()))\na=list(input().split())\n\nb=list(map(int,input().split()))\nwhile k:\n    k-=1\n    o=list(input().split())\n    x=int(o[0])\n    c=list(map(int,o[1:]))\n    mini=min([b[i-1] for i in c])\n    for i in c:\n        b[i-1]=mini\np=list(input().split())\nma={}\nfor i in range(len(a)):\n    ma[a[i]]=b[i]\ns=0\nfor i in p:\n   s+=ma[i]\nprint(s)\n\n", "n, k, m = map(int, input().split())\narr = list(map(str, input().split()))\nd = dict()\nfor i in range(n):\n    d[arr[i]] = i\ncoin = list(map(int, input().split()))\ncoin2 = [0 for i in range(n)]\nfor i in range(k):\n    mass = list(map(int, input().split()))\n    mass2 = []\n    for j in range(1, len(mass)):\n        mass2.append(mass[j] - 1)\n    mi = coin[mass2[0]]\n    for j in range(len(mass2)):\n        if(mi > coin[mass2[j]]):\n            mi = coin[mass2[j]]\n    for j in range(len(mass2)):\n        coin2[mass2[j]] = mi\narr2 = list(map(str, input().split()))\nans = 0\nfor i in range(m):\n    ind = d[arr2[i]]\n    ans += coin2[ind]\nprint(ans)", "n, k, m = list(map(int,input().split()))\nd = list(map(str,input().split()))\ndic = dict()\nco = list(map(int,input().split()))\nfor i in range(k):\n\tl = list(map(int,input().split()))\n\tp = []\n\tfor i in range(1, l[0] + 1):\n\t\tp += [[co[l[i] - 1], d[l[i] - 1]]]\n\tu = min(p)\n\tfor i in range(1, l[0] + 1):\n\t\tdic[d[l[i] - 1]] = u\npoi = list(map(str,input().split()))\ncost = 0\nfor i in range(m):\n\tcost += dic[poi[i]][0]\nprint(cost)\n", "n, k, m = list(map(int, input().strip().split(' ')))\n\nwordlist = list(map(str, input().strip().split(' ')))\n\nwordcost = list(map(int, input().strip().split(' ')))\n\nl = list()\nfor i in range(k):\n\tnewlist = list(map(int, input().strip().split(' ')))\n\n\tl.append(newlist[1:])\n\nmessage = list(map(str, input().strip().split(' ')))\n\nd = dict()\n\nupdcost = list()\nfor i in range(k):\n\tmini = float('inf')\n\tfor ele in l[i]:\n\t\tmini = min(mini, wordcost[ele-1])\n\tfor ele in l[i]:\n\t\td[wordlist[ele-1]] = mini\ns = 0\nfor ele in message:\n\ts += d[ele]\n\nprint(s)", "n, k, m = tuple(map(int, input().split()))\n\nwords = input().split()\nwtoi = dict()\nfor i in range(n):\n    wtoi[words[i]] = i + 1\n\ncosts = list(map(int, input().split()))\n\nfor i in range(k):\n    words_in_group = list(map(int, input().split()[1:]))\n    cost = min([costs[i - 1] for i in words_in_group])\n    for w in words_in_group:\n        costs[w - 1] = cost\n\nmessage = list([wtoi[w] for w in input().split()])\n\ncost = sum([costs[i - 1] for i in message])\nprint(cost)\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn, k, m = mi()\ns = [''] + input().split()\na = [0] + li()\ng = [0] * (k + 1)\np = {}\nfor i in range(1, k + 1):\n    b = li()[1:]\n    g[i] = min(a[x] for x in b)\n    for x in b: p[s[x]] = i\nmsg = input().split()\nans = sum(g[p[w]] for w in msg)\nprint(ans)\n", "l = input().split(' ')\nn = int(l[0])\nk = int(l[1])\nm = int(l[2])\nL = input().split(' ')\nM = input().split(' ')\nfor i in range(len(M)):\n    M[i] = int(M[i])\nG = [0] * k\ndico = {}\nfor i in range(k):\n    t = input().split(' ')\n    G[i] = M[int(t[1]) - 1]\n    dico[L[int(t[1]) - 1]] = i\n    for j in range(2, len(t)):\n        dico[L[int(t[j]) - 1]] = i\n        if M[int(t[j]) - 1] < G[i]:\n            G[i] = M[int(t[j]) - 1]\ns = input().split(' ')\nc = 0\nfor e in s:\n    c += G[dico[e]]\nprint(c)\n", "rd = lambda: list(map(int, input().split()))\nn, k, m = rd()\na = input().split()\nb = list(rd())\nd = dict(list(zip(a, b)))\nfor _ in range(k):\n    x = list(rd())[1:]\n    m = min(b[i - 1] for i in x)\n    for i in x:\n        d[a[i - 1]] = m\nprint(sum([d[x] for x in input().split()]))\n", "n, k, m = list(map(int, input().split()))\nw = input().split()\na = list(map(int, input().split()))\nd = dict(list(zip(w, a)))\n\nfor i in range(k):\n    s = list(map(int, input().split()[1:]))\n\n    m = min(d[w[x-1]] for x in s)\n    for x in s:\n        d[w[x-1]] = m\n\nprint(sum(d[x] for x in input().split()))\n", "n,k,m=list(map(int,input().split()))\nL=input().split()\nA=list(map(int,input().split()))\nfor i in range(k):\n    inp=list(map(int,input().split()))\n    X=[]\n    ind=1\n    for i in range(2,inp[0]+1):\n        if A[inp[i]-1]<A[inp[ind]-1]:\n            ind=i\n    #print(ind)\n    for i in range(1,inp[0]+1):\n        A[inp[i]-1]=A[inp[ind]-1]\n    #print(A)\n\ndic=dict()\nfor i in range(n):\n    dic[L[i]]=A[i]\n\n\nmes=input().split()\nout=0\nfor i in mes:\n    out+=dic[i]\nprint(out)\n    \n", "(n, k, m) = list(map(int, input().split()))\n\nd1 = {}\nacc = 0\nfor x in input().split():\n    d1[x] = acc\n    acc += 1\n\narray = []\nfor x in input().split():\n    array.append(int(x))\n\nmass = []\nfor x in range(k):\n    mass.append([])\n\nd2 = {}\nfor x in range(k):\n    temp = list(map(int, input().split()))\n    for y in temp[1:]:\n        mass[x].append(array[y - 1])\n        d2[y - 1] = x\n    mass[x].sort()\n\nans = 0\nfor x in input().split():\n    ans += mass[d2[d1[x]]][0]\n\nprint(ans)\n", "n, k, m = list(map(int, input().split()))\npalabras = {x: y + 1 for y, x in enumerate(input().split())}\ncostos = [int(x) for x in input().split()]\ntraspasos = [x for x in range(n + 1)]\ncostos_minimos = costos[:]\nfor e in range(k):\n    lista = [int(x) for x in input().split()]\n    lista.pop(0)\n    m = 10 ** 10\n    for q in lista:\n        if costos[q - 1] < m:\n            m = costos[q - 1]\n    for q in lista:\n        costos_minimos[q - 1] = m\nmensaje = input().split()\nsuma = 0\nfor e in mensaje:\n    suma += costos_minimos[palabras[e] - 1]\nprint(suma)\n", "from sys import stdin\n\nwords, groups, n = map(int, stdin.readline().split())\nwords = stdin.readline().split()\n\nprice = dict()\n\npr = list(map(int, stdin.readline().split()))\n\nfor i in range(len(words)):\n    price[words[i]] = pr[i]\n\nfor i in range(groups):\n    group = list(map(int, stdin.readline().split()))[1:]\n    minpr = 10 ** 18\n    for elem in group:\n        minpr = min(minpr, price[words[elem - 1]])\n    for elem in group:\n        price[words[elem - 1]] = minpr\n        \nmess = stdin.readline().split()\n\nres = 0\nfor elem in mess:\n    res += price[elem]\n    \nprint(res)", "n, k, m = map(int, input().split(' '))\nlw = list(input().split(' '))\nlp = list(map(int, input().split(' ')))\nfor i in range(k):\n    tl = list(map(lambda x: int(x) - 1, input().split(' ')))\n    tl.pop(0)\n    tpl = list()\n    for i in tl:\n        tpl.append(lp[i])\n    m = min(tpl)\n    for i in tl:\n        lp[i] = m\nel = list(input().split(' '))\nd = dict()\nfor i in range(n):\n    d[lw[i]] = lp[i]\ns = 0\nfor i in el:\n    s += d[i]\nprint(s)", "n, k, m = [int(x) for x in input().strip().split()]\nwords = input().strip().split()\nwd = {}\nwi = 1\nfor w in words:\n    wd[w] = wi\n    wi += 1\na = [int(x) for x in input().strip().split()]\ngroup = {}\nfor i in range(k):\n    grp = [int(x) for x in input().strip().split()][1:]\n    mincost = a[grp[0]-1]\n    for g in grp:\n        mincost = min(mincost, a[g-1])\n    for g in grp:\n        group[g] = mincost\ninp = input().strip().split()\ncost = 0\nfor w in inp:\n    idx = wd[w]\n    cost += group[idx]\nprint(cost)\n", "n, k, m = map(int, input().split())\nword = input().split()\ncost = list(map(int, input().split()))\nfor i in range(k):\n    arr = list(map(int,input().split()))\n    m = cost[arr[1] - 1]\n    for j in range(1,len(arr)):\n        if cost[arr[j] - 1] < m:\n            m = cost[arr[j] - 1]\n    for j in range(1, len(arr)):\n        cost[arr[j] - 1] = m\nd = {word[i]: cost[i] for i in range(len(word))}\nmessage = input().split()\nprice = 0\nfor i in message:\n    price = price + d[i]\nprint(price)", "from sys import stdin\n\nall_in = stdin.read().split('\\n')\n\nn, k, m = list(map(int, all_in[0].split()))\ndict_ = {s: i for i, s in enumerate(all_in[1].split(), 1)}\na = list(map(int, all_in[2].split()))\ns = all_in[k + 3].split()\n\nfor i in range(3, k + 3):\n    x, *set_ = list(map(int, all_in[i].split()))\n\n    mn = min([a[j - 1] for j in set_])\n\n    for j in set_:\n        a[j - 1] = mn\n\nprint(sum([a[dict_[el] - 1] for el in s]))\n", "n, k, m = [int(x) for x in input().split()]\nw = [x for x in input().split()]\na = [int(x) for x in input().split()]\ncost = {w[i]: a[i] for i in range(n)}\ngroup = {}\nminis = []\nfor i in range(k):\n    inp = [int(x) - 1 for x in input().split()]\n    mini = 10000000000\n    mini_w = None\n    for j in range(1, inp[0] + 2):\n        if cost[w[inp[j]]] < mini:\n            mini_w = cost[w[inp[j]]]\n            mini = cost[w[inp[j]]]\n        group[w[inp[j]]] = i\n    minis.append(mini_w)\nletter = [x for x in input().split()]\nsumma = 0\nfor wor in letter:\n    summa += minis[group[wor]]\nprint(summa)", "n, k, m = list(map(int, input().split()))\nlang = input().split()\ncost = list(map(int, input().split()))\n\ngroups = {}\nmincost = {}\n\nfor g in range(k):\n    x, *ind = list(map(int, input().split()))\n    for index in ind:\n        groups[lang[index-1]] = g + 1\n    m = 10000000000\n    for index in ind:\n        if cost[index - 1] < m: m = cost[index - 1]\n    mincost[g + 1] = m\n    \nmessage = input().split()\n\ntotal = 0\n\nfor word in message:\n    total += mincost[groups[word]]\n\nprint(total)\n\n\n\n\n                                      \n"]