["from collections import Counter\nn, m = map(int, input().split())\nl = [input() for _ in range(n)]\nv = [*map(int, input().split())]\nres = 0\nfor i in range(m):\n    res += v[i] * max(Counter(s[i] for s in l).values())\nprint(res)", "from sys import stdin, stdout, exit\n\nn,m = list(map(int, stdin.readline().split()))\ncts = [[0]*5 for i in range(m)]\nfor i in range(n):\n    s = stdin.readline().strip()\n    for j,c in enumerate(s):\n        cts[j][ord(c)-ord('A')] += 1\n\na = list(map(int, stdin.readline().split()))\nans = 0\nfor j in range(m):\n    ans += max(cts[j])*a[j]\n\nstdout.write(str(ans) + \"\\n\")\n", "from collections import Counter\nn,m = list(map(int,input().split()))\ns = [input() for _ in range(n)]\ns = [*list(zip(*s))]\na = [*list(map(int,input().split()))]\nprint(sum(x.most_common(1)[0][1] * y for x, y in zip(list(map(Counter, s)), a)))\n", "n, m = map(int, input().split())\n\ncount = []\nfor i in range(m):\n\tcount.append([0]*5)\n\nfor i in range(n):\n\ts = input()\n\tfor j, c in enumerate(s):\n\t\tcount[j][\"ABCDE\".index(c)] += 1\n\npoints = list(map(int, input().split()))\n\ntotal = sum(point * max(c) for point, c in zip(points, count))\n\nprint(total)", "from collections import defaultdict as dd, deque, Counter\n\nn,m = list(map(int,input().split()))\n\nA = [input() for _ in range(n)]\nP = [int(x) for x in input().split()]\n\nr = 0\nfor a in zip(list(zip(*A)), P):\n    c = Counter(a[0])\n    r += c.most_common()[0][1]*a[1]\nprint(r)\n", "n,m=map(int,input().split())\na=[]\nans1=0\nfor i in range(n):\n    a.append(input())\nans=list(map(int,input().split()))\nfor i in range(m):\n    d={}\n    ma=-1\n    for j in range(n):\n        d[a[j][i]]=d.get(a[j][i],0) + 1\n        ma=max(ma,d[a[j][i]])\n    ans1+=ma*ans[i]\nprint(ans1)    ", "n, m = map(int, input().split())\na = [list(input()) for i in range(n)]\ncount = [[0 for i in range(5)] for i in range(m)]\nb = list(map(int, input().split()))\nfor i in range(n):\n    for j in range(m):\n        count[j][ord(a[i][j]) - ord(\"A\")] += 1\nans = 0\nfor i in range(m):\n    ans += max(count[i]) * b[i]\nprint(ans)", "n, m = list(map(int, input().split()))\nu = []\nfor i in range(n):\n    u.append(list(input()))\na = list(map(int, input().split()))\nans = 0\nfor j in range(m):\n    d = {'A': 0, 'B': 0, 'C': 0, 'D': 0, 'E': 0}\n    for i in range(n):\n        d[u[i][j]] += 1\n    ans += a[j] * max(d['A'], d['B'], d['C'], d['D'], d['E'])\nprint(ans)\n", "def mp():\n    return map(int, input().split())\n\nn, m = mp()\ns = [input() for i in range(n)]\na = list(mp())\n\nans = 0\nfor j in range(m):\n    cnt = [0] * 5\n    for i in range(n):\n        cnt[ord(s[i][j]) - 65] += 1\n    ans += a[j] * max(cnt)\n    #print(j + 1, cnt, ans)\n\nprint(ans)", "import math\nfrom decimal import Decimal\nimport heapq\ndef na():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\treturn n,b\n \n \ndef nab():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tc = [int(x) for x in input().split()]\n\treturn n,b,c\n \n \ndef dv():\n\tn, m = list(map(int, input().split()))\n\treturn n,m\n \n \ndef dva():\n\tn, m = list(map(int, input().split()))\n\ta = [int(x) for x in input().split()]\n\tb = [int(x) for x in input().split()]\n\treturn n,m,b\n \n \ndef eratosthenes(n): \n\tsieve = list(range(n + 1))\n\tfor i in sieve:\n\t\tif i > 1:\n\t\t\tfor j in range(i + i, len(sieve), i):\n\t\t\t\tsieve[j] = 0\n\treturn sorted(set(sieve))\n \n \n \ndef nm():\n\tn = int(input())\n\tb = [int(x) for x in input().split()]\n\tm = int(input())\n\tc = [int(x) for x in input().split()]\n\treturn n,b,m,c\n \n \ndef dvs():\n\tn = int(input())\n\tm = int(input())\n\treturn n, m \n\n\nn, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n\ts = input()\n\ta.append(s)\nb = list(map(int, input().split()))\nans = 0\nfor j in range(m):\n\td = {}\n\tfor i in range(n):\n\t\tc = a[i][j]\n\t\td[c] = d.get(c, 0) + 1\n\ttc = max(d.values()) * b[j]\n\tans += tc\nprint(ans)\n", "def increase(cnt, letter):\n    if letter not in cnt:\n        cnt[letter] = 1\n    else:\n        cnt[letter] += 1\n\nn, m = list(map(int, input().split()))\n\nstrings = []\n\nfor i in range(n):\n    strings.append(input())\n\npoints = list(map(int, input().split()))\n\nans = 0\n\nfor qu in range(m):\n    cnt = {}\n    mx = 0\n    for person in range(n):\n        increase(cnt, strings[person][qu])\n        mx = max(mx, cnt[strings[person][qu]])\n    ans += points[qu] * mx\n\nprint(ans)\n    \n", "import sys \nimport itertools\ninput = lambda: sys.stdin.readline().rstrip()\n\nn, m = list(map(int, input().split()))\narr = [input() for i in range(n)]\nscore = list(map(int, input().split()))\n\nans = 0\nfor i in range(m):\n  a = [s[i] for s in arr]\n  b = max([a.count(k) for k in \"ABCDE\"])\n  ans += score[i] * b \n\nprint(ans)\n", "#577_A\n\nimport sys\n\nln = [int(i) for i in input().split(\" \")]\n\nn = ln[0]\nm = ln[1]\n\nans = []\n\nfor i in range(0, n):\n    ans.append(list(sys.stdin.readline().rstrip()))\n\narr = [\"A\", \"B\", \"C\", \"D\", \"E\"]\n\npts = [int(i) for i in input().split(\" \")]\n\ns = 0\n\nfor i in range(0, m):\n    cts = [0, 0, 0, 0, 0]\n    for j in range(0, n):\n        cts[arr.index(ans[j][i])] += 1\n    s += max(cts) * pts[i]\n\nprint(s)\n", "n, m = map(int, input().split())\nd = [{'A': 0, 'B':0, 'C':0, 'D':0, 'E':0} for i in range(m)]\nfor i in range(n):\n    s = input()\n    for j in range(len(s)):\n        d[j][s[j]] += 1\narray = list(map(int, input().split()))\ns = 0\nfor i in range(m):\n    ma = 0\n    for el in d[i]:\n        if d[i][el] > ma:\n            ma = d[i][el]\n    s += ma*array[i]\nprint(s)", "def main():\n    import sys\n    # input = sys.stdin.readline\n    \n    n, m = map(int, input().split())\n    \n    strs = [input() for _ in range(n)]\n    scores = list(map(int, input().split()))\n    \n    ans = 0\n    for i in range(m):\n        cnt = [0] * 5\n        for j in range(n):\n            cnt[ord(strs[j][i]) - ord('A')] += 1\n        ans += scores[i] * max(cnt)\n    \n    print(ans)\n    \n    return 0\n\nmain()", "n, m = list(map(int,input().split()))\n\na = [[0 for j in range(5)] for i in range(m)]\n\nfor i in range(n):\n    s = input()\n    for j in range(m):\n        a[j][ord(s[j]) - ord('A')] += 1\nsum1  = 0\nb=  list(map(int,input().split()))\nfor i in range(m):\n    sum1 += b[i] * max(a[i])\nprint(sum1)\n", "from collections import defaultdict\nX = list(map(int, input().split()))\nAnswers = []\nfor i in range(X[0]):\n    Answers.append(input())\npoints = list(map(int, input().split()))\nSum = 0\nfor i in range(X[1]):\n    Temp = defaultdict(int)\n    for j in range(X[0]):\n        Temp[Answers[j][i]]+=1\n    Sum+=points[i]*max(Temp.values())\nprint(Sum)\n\n# UB_CodeForces\n# Advice: Gain your experience with participating in CodeForces contests\n# Location: Behind my desk\n# Caption: Contest time\n# CodeNumber: 556\n", "import sys\ninput = sys.stdin.readline\n\nn,m=list(map(int,input().split()))\n\nfrom collections import Counter\n\nLIST=[[] for i in range(m)]\n\nfor i in range(n):\n    s=input()\n    for j in range(m):\n        LIST[j].append(s[j])\n\nSCORE=list(map(int,input().split()))\nANS=0\n\nfor i in range(m):\n    ANS+=max(Counter(LIST[i]).values())*SCORE[i]\n\nprint(ANS)\n    \n", "from collections import Counter\n\nn, m = list(map(int, input().split()))\nl = [Counter() for i in range(m)]\nfor i in range(n):\n    a = input()\n    for c, d in zip(a, l):\n        d[c] += 1 \n\nans = 0\nfor p, d in zip(list(map(int, input().split())), l):\n    ans += p * max(d.values())\n\nprint(ans)\n", "n,m=list(map(int,input().split()))\narr = []\nfor i in range(n):\n    arr.append(input())\nans = 0\nent = list(map(int,input().split()))\ncount = [0]*5\nfor i in range(m):\n    for j in range(n):\n        count[ord(arr[j][i])-65] += ent[i]\n    ans += max(count)\n    count = [0,0,0,0,0]\nprint(ans)\n\n\n", "import sys\n\nn, m = list(map(int, sys.stdin.readline().strip().split()))\ns = []\nfor i in range (0, n):\n    s.append(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\nans = 0\nfor j in range (0, m):\n    A, B, C, D, E = 0, 0, 0, 0, 0\n    for i in range (0, n):\n        if s[i][j] == 'A':\n            A = A + 1\n        if s[i][j] == 'B':\n            B = B + 1\n        if s[i][j] == 'C':\n            C = C + 1\n        if s[i][j] == 'D':\n            D = D + 1\n        if s[i][j] == 'E':\n            E = E + 1\n    ans = ans + max([A, B, C, D, E]) * a[j]\n\nprint(ans)\n", "a = input()\na = a.split()\nstudents = int(a[0])\nquestions = int(a[1])\nans = []\nfor i in range(students):\n    x = input()\n    ans.append(x)\nweights = input()\nweights = weights.split()\nfor i in range(len(weights)):\n    weights[i] = int(weights[i])\nn = []\nfor i in range(questions):\n    a = 0\n    b = 0\n    c = 0\n    d = 0\n    e = 0\n    for j in range(students):\n        if ans[j][i] == \"A\":\n            a += 1\n        if ans[j][i] == \"B\":\n            b += 1\n        if ans[j][i] == \"C\":\n            c += 1\n        if ans[j][i] == \"D\":\n            d += 1\n        if ans[j][i] == \"E\":\n            e += 1\n    n.append(max(a, b, c, d, e))\ntotal = 0\nfor i in range(len(n)):\n    total += n[i]*weights[i]\nprint (total)", "import sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\nl = []\nfor x in range(n):\n\tl.append(input().strip())\npoints = list(map(int, input().split()))\ncnts = [0 for i in range(m)]\nt = [0, 0, 0, 0, 0]\nfor i in range(m):\n\tt = [0, 0, 0, 0, 0]\n\tfor x in l:\n\t\tchoice = x[i]\n\t\tt[ord(choice) - 65] += 1\n\tcnts[i] = max(t)\n#print(cnts)\nprint(sum(i[0] * i[1] for i in zip(points, cnts)))", "#    ~####~~~#####~~~~####~~~######~~#####~~~#####~~~##~~##\n#    ##~~##~~##~~##~~##~~##~~~~~##~~~##~~##~~##~~~~~~##~##\n#    ##~~##~~#####~~~######~~~~##~~~~#####~~~####~~~~####\n#    ##~~##~~##~~##~~##~~##~~~##~~~~~##~~##~~##~~~~~~##~##\n#    ~####~~~##~~##~~##~~##~~######~~#####~~~#####~~~##~~##\n\n\nclass Read:\n    @staticmethod\n    def int():\n        return int(input())\n\n    @staticmethod\n    def list(sep=' '):\n        return input().split(sep)\n\n    @staticmethod\n    def list_int(sep=' '):\n        return list(map(int, input().split(sep)))\n\n\ndef solve():\n    n, m = Read.list_int()\n\n    ans = []\n    for i in range(n):\n        ans.append(input())\n\n    b = Read.list_int()\n    result = 0\n    for i in range(m):\n        f = {\n            'A': 0,\n            'B': 0,\n            'C': 0,\n            'D': 0,\n            'E': 0\n        }\n        for j in range(n):\n            f[ans[j][i]] += 1\n\n        max_f = 0\n        for k in list(f.values()):\n            if k > max_f:\n                max_f = k\n        result += max_f * b[i]\n    print(result)\n\n\nquery_count = 1\n# query_count = Read.int()\nfor j in range(query_count):\n    solve()\n"]