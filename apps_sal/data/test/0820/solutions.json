["ct = 0\nx = int(input())\ny = int(input())\nz = [int(input()) for i in range(x)]\nz.sort()\nz.reverse()\nfor i in z:\n    if y <= 0:\n        print(ct)\n        quit()\n        \n    y-=i\n    ct+=1\nprint(ct)\n", "#!/usr/bin/env python3\n\ndef solve():\n    N = int(input())\n    M = int(input())\n    sizes = [int(input()) for _ in range(N)]\n\n    sizes.sort(reverse=True)\n\n    cnt = 0\n    while M > 0:\n        M -= sizes[cnt]\n        cnt +=1\n    print(cnt)\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n = int(input())\nm = int(input())\n\nv = []\nfor i in range(n):\n    v.append(int(input()))\n\nv = sorted(v)[::-1]\n\nsol = 0\nfor i in range(0, len(v)):\n    if m <= 0:\n        break\n\n    sol += 1\n    m -= v[i]\n\nprint(sol)\n", "n = int(input())\nm = int(input())\np = []\nfor i in range(n):\n    k = int(input())\n    p.append(k)\np.sort()\ncol = 0\npos = n - 1 \nwhile m > 0:\n    m -= p[pos]\n    pos -= 1\n    col += 1\nprint(col)\n", "n = int(input())\nm = int(input())\nL = [int(input()) for _ in range(n)]\nr = 1\nL.sort()\nwhile m > 0:\n    m = m - L[n-r]\n    r+=1\nprint(r-1)\n", "n=int(input())\nm=int(input())\na=[0]*n\nfor i in range(n):\n    a[i]=int(input())\na.sort(reverse=True)\nk=0\nz=0\nwhile z<m:\n    z+=a[k]\n    k+=1\nprint(k)", "from bisect import *\ndef inpList():\n    return list(map(int,input().split()))\ndef inp():\n    return int(input())\nn=inp()\nm=inp()\na=[]\nfor i in range(n):\n    a.append(inp())\na.sort()\na.reverse()\nfor i in range(1,n):\n    a[i]+=a[i-1]\nprint(bisect_left(a,m)+1)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\nn   = int(input())\nm   = int(input())\na   = []\n\nfor i in range(n):\n    x = int(input())\n    a.append(x)\n\nstart = time.time()\n\na   = sorted(a, key = lambda x: -x)\nans = 0\n\nwhile(m > 0):\n    m   -= a[ans]\n    ans += 1\n\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "n, m, v = int(input()), int(input()), 0\nfor i, c in enumerate(sorted((int(input()) for i in range(n)), reverse=True)):\n    v += c\n    if v >= m:\n        print(i + 1)\n        break\n", "n = int(input())\nm = int(input())\nflash = []\nfor i in range(n):\n    flash.append(int(input()))\nflash.sort(key = lambda x : -x)\nprefix = 0\nfor i in range(n):\n    prefix += flash[i]\n    if m <= prefix:\n        print(i+1)\n        break\nelse:\n    print('?')\n", "#In the name of Allah\n\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nn = int(input())\nm = int(input())\n\na = [int(input())for i in range(n)]\n\na.sort(reverse = True)\n\ni = 0\ncap = 0\nwhile cap < m:\n        cap += a[i]\n        i += 1\nstdout.write(str(i))\n", "__author__ = 'Utena'\nn=int(input())\nm=int(input())\nx=sorted([int(input())for i in range(n)])\nt=0\nfor j in range(n):\n    m-=x[n-j-1]\n    t+=1\n    if m<=0:\n        break\nprint(t)", "n=int(input())\nm=int(input())\nL=[]\nfor i in range(n):\n    L.append(int(input()))\nL.sort()\nans=0\nwhile m>0:\n    ans+=1\n    m-=L.pop()\nprint(ans)\n", "n = int(input())\nsize = int(input())\nk = []\nfor m in range(n):\n\tk.append(int(input()))\nk.sort()\nnum = 0\nwhile size > 0:\n\tsize = size - k.pop()\n\tnum = num + 1\nprint(num)", "n=int(input())\nm=int(input())\nl=[]\nfor i in range(n):\n    l.append(int(input()))\n\nl.sort()\nk=0\nr=0\ni=n-1\nwhile(i>=0):\n    k+=l[i]\n    r+=1\n    if(k>=m):\n        break\n    i-=1\n\nprint(r)", "n = int(input())\nm = int(input())\nflashed = [int(input()) for i in range(n)]\n\nflashed.sort(reverse=True)\ncounter, sumSize = 0, 0\nfor size in flashed:\n    sumSize += size\n    counter += 1\n    if sumSize >= m:\n        break\nprint(counter)\n", "r = lambda: int(input())\nn = r()\nm = r()\na = sorted([r() for i in range(n)], reverse = 1)\ncnt = cur = i = 0\nwhile cur < m:\n    cur += a[i]\n    cnt += 1\n    i += 1\nprint(cnt)\n", "n = int(input())\nsize = int(input())\nary = [int(input()) for _ in range(n)]\n\nary.sort()\nary.reverse()\n\ncount = 0\nwhile size > 0:\n\tcount += 1\n\tsize -= ary[count - 1]\n\nprint(count)\n", "n=int(input())\nm=int(input())\nUSB=[]\nfor i in range(n):\n    USB.append(int(input()))\nUSB.sort()\nfor i in range(n):\n    nu=i\n    m-=USB[n-1-i]\n    if m<=0:\n        break\nprint(nu+1)\n        \n", "n=int(input())\nm=int(input())\nk=0;c=0;o=0\na=[]\nfor i in range(n):\n    k=int(input())\n    a.append(k)\na.sort()\nfor i in range(n-1,-1,-1):\n    c+=a[i]\n    o+=1\n    if c>=m:\n        print(o)\n        break\n", "USBs = int(input())\nfileSize = int(input())\nUSBList = []\nfor USB in range(USBs):\n    USBList.append(int(input()))\n\nUSBCount = 0\nstoredAmount = 0\nwhile storedAmount < fileSize:\n    USBCount += 1\n    currentUSB = max(USBList)\n    storedAmount += currentUSB\n    USBList.remove(currentUSB)\n\nprint(USBCount)", "n = int(input())\nm = int(input())\na = [0]*n\nfor i in range(n):\n\ta[i] = int(input())\n\na.sort(reverse=True)\nfor i in range(0, n):\n\tm -= a[i]\n\tif m <= 0:\n\t\tprint(i+1)\n\t\tbreak\n", "n = int(input())\nm = int(input())\n\nlst = []\nrem = m\n\nfor i in range(n):\n    tmp = int(input())\n    lst.append(tmp)\n\nlst.sort(reverse=True)\n\nfor i, x in enumerate(lst):\n    rem -= x\n    if rem <= 0:\n        break\n\nprint(i+1)\n", "n=int(input())\nm=int(input())\nk=sorted([int(input()) for i in range(n)])[::-1]\nb=k[0]\ns=1\nfor i in range(1,n+1):\n    if b>m or b==m:\n        print(s)\n        break\n    else:\n        b+=k[i]\n        s+=1", "n = int(input())\nm = int(input())\na = []\ncounter = 0\n\nfor i in range(n):\n    a.append(int(input()))\n\na.sort()\n\nfor i in reversed(a):\n    if m> 0:\n        m -= i\n        counter += 1\n\nprint(counter)"]