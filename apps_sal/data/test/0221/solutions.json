["n, k = map(int, input().split())\nif n <= k + k + 1:\n    print(1)\n    print((n + 1) // 2)\nelse:\n    answer = -1\n    answer_n = 10**100\n    for i in range(min(k + 1, n)):\n        t = n - (k + i + 1)\n        if t % (k + k + 1) >= k + 1:\n            if 2 + t // (k + k + 1) < answer_n:\n                answer = i + 1\n                answer_n = 2 + t // (k + k + 1)\n        if t % (k + k + 1) == 0:\n            if 1 + t // (k + k + 1) < answer_n:\n                answer = i + 1\n                answer_n = 1 + t // (k + k + 1)            \n    print(answer_n)\n    while answer <= n:\n        print(answer, end = ' ')\n        answer += k + k + 1\n        ", "#import sys\n#sys.stdin = open(\"in.txt\", \"r\")\n\nn, k = map(int, input().split())\none = k*2+1\n\nans = 0\nif n % one == 0: ans = n // one\nelse: ans = n // one + 1\nprint(ans)\ncnt = 1\narr = []\nt = one//2 + 1\nminus = 0\nwhile cnt <= ans:\n    if t > n:\n        minus = t - n\n    arr += [t]\n    #print(\"%d\" % t, end=\" \")\n    t += one\n    cnt += 1\n\nfor s in arr:\n    print(\"%d\" % (s-minus), end=\" \")\n", "n, k = map(int, input().split())\nans = []\nif (n % (2 * k + 1) >= (k + 1) or n % (2 * k + 1) == 0):\n    for i in range(n):\n        if (i % (2 * k + 1) == k):\n            ans.append(i)\nelse:\n    ans.append(0)\n    for i in range(k + 1, n):\n        if (i % (2 * k + 1) == 0):\n            ans.append(i)\nprint(len(ans))\nfor el in ans:\n    print(el + 1, end=' ')", "def __starting_point():\n    n, k = map(int, input().split())\n    width = 2 * k + 1\n    rem = n % width\n    print(n // width + bool(rem))\n    shift = k if 0 < rem <= k else 0\n    current = k + 1 - shift\n    while current <= n:\n        print(current, end=\" \")\n        current += width\n    print()\n\n__starting_point()", "#!/usr/bin/env python3\nn, k = list(map(int, input().split()))\nx = 2*k+1\nr = (n - 1) // x + 1\nd = r*x-n\ns = max(1, k+1-d)\nprint(r)\nprint(' '.join([str(s+x*i) for i in range(r)]))\n", "n,k=map(int,input().strip().split())\nf=2*k+1\ng=n//f\nh=n%f\nif (h==0):\n    print (g)\n    c1=k+1\n    print (c1,end=\" \")\n    for i in range(1,g):\n        print (c1+f*i,end=\" \")\n    print()\n    return\nif (h>k):\n    print (g+1)\n    e=h-k\n    print (e,end=\" \")\n    for i in range(1,g+1):\n        print (e+f*i,end=\" \")\n    print ()\n    return\nif (h<=k):\n    print (g+1)\n    t=h+2*k+1\n    e=1\n    print (1,end=\" \")\n    for i in range(1,g+1):\n        print (e+f*i,end=\" \")\n    print ()\n    return", "n, k = [int(i) for i in input().split()]\n\n'''\n1 2 3 4 5 6 7\n1 2 3 | 4 5 6 7\nsplit into 2k groups\n\nif last group < k then problem\n\nif k = 3, n = 7\n\n1 2 3 4 5 6 7\n\n1 2 3 4 5\n\nfirst sz varies from k+1 to 2*k+1\n\n\n1 (k+1 - 2k+1) + x(2*k) + 1(2k+1 - k+1)\n1 2 3 4 5 6 7 8 9 10\n\n11,2 = 1 6 10\n8, 2 = 1 6\n'''\n\nplaces, placee = 0, 0\nans = 2*n\nfor start in range(k+1, 2*k+2):\n    for end in range(k+1, 2*k+2):\n        if (n - (start) - (end))%(2*k+1) == 0:\n            if 2 + (n-(start)-(end))//(2*k+1) < ans:\n                ans = min(ans, 2 + (n-(start)-(end))//(2*k+1))\n                places = start\n                placee = end\n\nprint(ans)\nprint(places-k, end=' ')\nif ans>1:\n    for j in range((n-places-placee)//(2*k+1)):\n        print(places-k + (j+1)*(2*k+1),end=' ')\n    last = placee - k -1 \n    print(n-last)\n    #print(places - k + (j+1)*(2*k+1)) \n", "n,k = map(int, input().split())\nrem = n % (2*k+1)\n\nif n <= k+1:\n\tans = [1]\nelif rem <= k and rem != 0:\n\tans = range(k+1-(k+1-rem), n+1, 2*k+1)\nelse:\n\tans = range(k+1, n+1, 2*k+1)\n\nprint(len(ans))\nprint(' '.join(str(k) for k in ans))", "\ndef mi():\n\treturn map(int, input().split())\n\nn,k = mi()\n\nt = 2*k+1\nfirst = (t+1)//2\nout = []\nwhile first<=n:\n\tout.append(first)\n\tfirst+=t\nif out==[]:\n\tout = [n]\nif len(out) and (out[-1]+k<n):\n\tout.append(n)\n\nif len(out)>1 and out[-1]-k<=out[-2]+k:\n\tdiff = (out[-2]+k)-(out[-1]-k)+1\n\tif diff:\n\t\tfor i in range(len(out)-1):\n\t\t\tout[i]-=diff\nprint (len(out))\nprint (*out)", "s=input().split()\nn,k=int(s[0]),int(s[1])\nl=2*k+1\nm=n%l\nif m==0:\n    m=2*k+1\nif m<=k+1:\n    pos=1\nelse:\n    pos=m-k\nres=n//l\nif n%l!=0:\n    res+=1\nprint(res)\nfor i in range(res):\n    print(pos+l*i,end=\" \")\nprint(\"\")\n", "\nn, k = map(int, input().split())\n\nif n <= 2 * k + 1:\n\tprint(1)\n\tprint(n // 2 + 1)\n\treturn\n\nl = 2 * (k + 1)\nr = 2 * (2 * k + 1)\ncnt = 0\nwhile not (l <= n <= r):\n\tcnt += 1\n\tl += 2 * k + 1\n\tr += 2 * k + 1\n\nprint(cnt + 2)\n\nm = n - cnt * (2 * k + 1)\na = m // 2\nans = [a - k - 1]\nr = ans[0] + k\n\nwhile r < n - 1:\n\tif r + k + 1 < n:\n\t\tans.append(r + k + 1)\n\tr = ans[-1] + k\n\nfor i in ans:\n\tprint(i + 1, end=' ')\nprint()", "import math\nn,k=map(int,input().split())\np=math.ceil(n/(2*k + 1))\na=[]\nt=max(1,k+1-(2*k +1 - n%(2*k + 1)) )\nif n%(2*k + 1)==0:\n    t=k+1\nfor i in range(p):\n    a.append(t)\n    t+=(2*k + 1)\nprint(p)\nprint(*a)", "from math import *\nn,k=list(map(int,input().split()))\nif(k>=n):\n    print(1)\n    print(1)\nelse:\n    arr=[]\n    count=ceil(n/(2*k+1))\n    val1=n%(2*k+1)\n    if(val1>=k+1 or val1==0):\n        i=0\n        val=0\n    else:\n        i=1\n        val=k+1-(k+1-val1)+k\n        arr.append(k+1-(k+1-val1))\n    while(i<count):\n        if(val+k+1<=n):\n            arr.append(val+k+1)\n        else:\n            arr.append(n)\n        val+=2*k+1\n        i+=1\n    print(count)\n    print(*arr)\n", "n, k = [int(v) for v in input().split()]\nif 2 * k + 1 >= n:\n    ans = [n // 2]\nelse:\n    rem = n % (2 * k + 1)\n    if rem == 0:\n        ans = list(range(k, n, 2 * k + 1))\n    else:\n        ans = list(range(rem // 2, n, 2 * k + 1))\n\nprint(len(ans))\nprint(' '.join(str(v + 1) for v in ans))\n", "import math\nn,k=map(int,input().split())\n\n\na=math.ceil(n/(2*k+1))\nprint(a)\n\nx=a*(2*k+1)-n\n\nif x>=k:\n    start=1\nelse:\n    start=1+(k-x)\n\nfor i in range(start,n+1,2*k+1):\n    print(i,end=\" \")\n\n\n\n\n\n", "n, k = map(int, input().split())\nfor i in range(k + 1):\n    #print(i + 1 + k)\n    ost = n - (i + 1 + k)\n    ost = ost % (k * 2 + 1)\n    #print(ost)\n    if k + 1 <= ost or ost == 0:\n        ans = []\n        for j in range(i, n, k * 2 + 1):\n            ans.append(j + 1)\n    #print(ans)\nif k == 0:\n    ans = [i + 1 for i in range(n)]\nprint(len(ans))\nprint(*ans)", "\nn,k=tuple(map(int,input().strip().split(\" \")))\nl=0\narr=[]\ncu=0\nyo=n%((2*k)+1)\nif(yo>=k+1 or yo==0):\n    for t in range(k+1,n+1,(2*k)+1):\n        arr.append(t)\nelse:\n    for t in range(1,n+1,(2*k)+1):\n        arr.append(t)\nprint(len(arr))\nfor k in arr:\n    print(k,\" \",end='')\n", "n, k = map(int, input().split())\n\nr = n % (2*k + 1)\n\nout = []\n\nif r >= k + 1:\n    cnt = r - k\n    while cnt < n:\n        out.append(cnt)\n        cnt += 2*k + 1\nelse:\n    cut1 = (r + 2*k + 1) // 2\n    cut2 = (r + 2*k + 2) // 2\n    cnt = cut1 - k\n    if cnt == 0:\n        cnt += k + 1\n    while cnt <= n:\n        out.append(cnt)\n        cnt += 2*k + 1\n\nprint(len(out))\nout = map(str, out)\nprint(' '.join(out))", "import math\n\nn, k = map(int, input().split())\nans = []\ni = k + 1\nif i > n:\n    print(1)\n    print(math.ceil(n / 2))\n    return\nwhile i <= n:\n    ans.append(i)\n    i += 2 * k + 1\nif ans[-1] + k < n:\n    ned = 2 * k - (n - ans[-1]) + 1\n    print(len(ans) + 1)\n    for i in ans:\n        print(i - ned, end = \" \")\n    print(n)\nelse:\n    print(len(ans))\n    print(*ans)\n", "n,k=list(map(int,input().split()))\n#b=[i for i in range(1,n+1)]\nr=n%(2*k+1)\na=[]\nif n<=2*k+1:\n    a.append((n+1)//2)\n    print(len(a))\n    print(*a)\n    return\nif r>=k+1 or r==0:\n    l=[i for i in range(k+1,n+1,2*k+1)]\n    print(len(l))\n    print(*l)\nelse:\n    d=k+1-r\n    s=k+1-d\n    l=[i for i in range(s,n+1,2*k+1)]\n    print(len(l))\n    print(*l)\n", "from functools import reduce\n\nn, k = map(int, input().split())\n\nflip = 2*k+1\n\nl = -(-n//flip)\n\nmax = (k+1) + (l-1) * flip\ni = k+1\nif max > n:\n\ti -= (max-n)\n\narr = []\n# if n%flip > k:\n\t# i = k+1\nwhile i <= n:\n\tarr.append(i)\n\ti += flip\n# else:\n\t# i = 1\n\t# while i <= n:\n\t\t# arr.append(i)\n\t\t# i += flip\n\ns = reduce(lambda x, y : str(x)+' '+str(y), arr)\nprint(l)\nprint(s)", "n, k = map(int, input().split())\na = 1000000\naf = []\nfor i in range(k+1):\n    f = []\n    for j in range(i+1, n+1, 2*k+1):\n        f.append(j)\n    if i+1 > n:\n        break\n    if f[-1]+k >= n:\n        if a > len(f):\n            a = len(f)\n            af = f[:]\nprint(a)\nprint(*af)", "from math import ceil\n\nn, k = map(int, input().split(' '))\n\ncover = 2 * k + 1\n\nturns = ceil(n / cover)\nprint(turns)\n\nshift = turns * cover - n\nfirst_index = k - shift\n\nif first_index >= 0:\n    for i in range(turns):\n        print(first_index + 1 + i * cover, end=' ')\nelse:\n    for i in range(turns):\n        print(0 + 1 + i * cover, end=' ')", "n,k = list(map(int,input().split()))\nans=[]\nif n%(2*k+1)>=k+1 or n%(2*k+1)==0:\n    i=k+1\n    while i<=n:\n        ans.append(i)\n        i+=2*k+1\nelse:\n    i=1\n    while i<=n:\n        ans.append(i)\n        i+=2*k+1\nprint(len(ans))\nprint(*ans)\n", "n, k = map(int, input().split())\nif n % (2 * k + 1) == 0 or n % (2 * k + 1) >= k + 1:\n    if n % (2 * k + 1) == 0:\n        print(n // (2 * k + 1))\n    else:\n        print(n // (2 * k + 1) + 1)\n    j = k + 1\n    while j <= n:\n        print(j, end = ' ')\n        j += 2 * k + 1\nelse:\n    print(n // (2 * k + 1) + 1)\n    j = 1\n    while j <= n:\n        print(j, end = ' ')\n        j += 2 * k + 1\n"]