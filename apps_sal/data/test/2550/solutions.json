["for _ in range(int(input())):\n    n, m = map(int, input().split())\n    l1 = list(map(int,input().split()))\n    print(min(sum(l1),m))", "q = int(input())\nfor rwer in range(q):\n\tn,m = map(int,input().split())\n\tl = list(map(int,input().split()))\n\tprint(min(m, sum(l)))", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef solve():\n    n,m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    ans = min(sum(a), m)\n    print(ans)\n\nt = int(input())\nfor i in range(t):\n    solve()\n", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=int(input())\nfor tt in range(t):\n    #n=int(input())\n    n,m= map(int, sys.stdin.readline().split(' '))\n    a=list(map(int,sys.stdin.readline().split(' ')))\n    s=sum(a)-a[0]\n\n    print(min(m,a[0]+s))\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "# -*- coding: utf-8 -*-\n\nimport sys\nfrom collections import Counter\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\n# sys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nfor _ in range(INT()):\n    N, K = MAP()\n    A = LIST()\n\n    print(min(sum(A), K))\n", "from math import *\n\nT = int(input())\nwhile T:\n    T -= 1\n    n, m = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if sum(a) >= m:\n        print(m)\n    else:\n        print(sum(a))\n", "t=int(input())\nwhile t:\n    n,m=map(int,input().split())\n    a=list(map(int,input().split()))\n    print(min(sum(a),m))\n    t-=1", "from math import *\n\nzzz = int(input())\nfor zz in range(zzz):\n    n, m = list(map(int, input().split()))\n    a = [int(i) for i in input().split()]\n    print(int(min(sum(a), m)))\n", "\n\n\"\"\"\nNTC here\n\"\"\"\nimport sys\ninp = sys.stdin.readline\ndef input(): return inp().strip()\n# flush= sys.stdout.flush\n# import threading\n# sys.setrecursionlimit(10**6)\n# threading.stack_size(2**26)\n\n\ndef iin(): return int(input())\n\n\ndef lin(): return list(map(int, input().split()))\n\n\ndef main():\n    T = iin()\n    while T:\n        T-=1\n        n, m = lin()\n        a = lin()\n        ans = sum(a)\n        print(min(ans, m))\n\n\nmain()\n\n# threading.Thread(target=main).start()\n\n\n\"\"\"\n1\n5\n1 3\n1 4\n1 6\n2 6\n0 5\n\"\"\"", "t = int(input())\nfor _ in range(t):\n  n,m = list(map(int,input().split()))\n  s = list(map(int,input().split()))\n  print(min(m,sum(s)))\n", "import sys\ninput=sys.stdin.readline\nt=int(input())\nwhile(t):\n    t-=1\n    n,m=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    if(sum(a)>=m):\n        print(m)\n    else:\n        print(sum(a))\n", "import string\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    sm = 0\n    for i in lst:\n        sm += i\n    print(min(sm, m))\n\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()", "from math import ceil,sqrt,gcd,log,floor\nfrom collections import deque\ndef ii(): return int(input())\ndef si(): return input()\ndef mi(): return map(int,input().strip().split(\" \"))\ndef li(): return list(mi())\ndef msi(): return map(str,input().strip().split(\" \"))\ndef lsi(): return list(msi())\nfor _ in range(ii()):\n    n,m=mi()\n    a=li()\n    s=a[0]+sum(a[1:])\n    print(min(s,m))", "import math,sys\nfrom collections import Counter, defaultdict, deque\nfrom sys import stdin, stdout\ninput = stdin.readline\nli = lambda:list(map(int,input().split()))\n\ndef case():\n    n,m=li()\n    a=li()\n    s=sum(a)\n    print(min(s,m))\n\nfor _ in range(int(input())):\n    case()"]