["r, c = list(map(int, input().split()))\nls = [[c for c in input()] for i in range(r)]\nfor i in range(r):\n    dead = False\n    for j in range(c):\n        if ls[i][j] == 'W':\n            if i != 0 and ls[i - 1][j] == 'S': dead = True\n            if i != r - 1 and ls[i + 1][j] == 'S': dead = True\n            if j != 0 and ls[i][j - 1] == 'S': dead = True\n            if j != c - 1 and ls[i][j + 1] == 'S': dead = True\n            if dead: \n                break\n        elif ls[i][j] == '.':\n            ls[i][j] = 'D'\n    if dead:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n    for i in range(r):\n        print(''.join(ls[i]))\n\n", "r,c = (int(x) for x in input().split())\n\ng = []\nfor i in range(r):\n    g.append(input())\n\n# res = True\n\ndef fn():\n    # nonlocal res\n    for rr in range(r):\n        for cc in range(c):\n            if g[rr][cc] != 'W':\n                continue\n            if cc > 0 and g[rr][cc-1] == 'S':\n                # res = False\n                return False\n            if cc < c-1 and g[rr][cc+1] == 'S':\n                return False\n            if rr > 0 and g[rr-1][cc] == 'S':\n                return False\n            if rr < r-1 and g[rr+1][cc] == 'S':\n                return False\n    return True\n\nres = fn()\nif not res:\n    print('No')\nelse:\n    print('Yes')\n    for row in g:\n        print(row.replace('.', 'D'))\n", "import sys\n\ns = input().split()\nr,c = list(map(int, s))\nf = ['']*r\nfor x in range(r):\n    f[x] = input().replace('.', 'D')\n    if 'WS' in f[x] or 'SW' in f[x]:\n        print('No')\n        return\n    if x > 0:\n        for y in range(c):\n            up = f[x][y]+f[x-1][y]\n            if up in ['SW', 'WS']:\n                print('No')\n                return\nprint('Yes')\nfor x in range(r):\n    print(f[x])\n", "def A():\n    R,C = map(int, input().split())\n    pasture = []\n    for _ in range(R):\n        line = input().replace('.','D')\n        if 'WS' in line or 'SW' in line:\n            return False\n        pasture.append(line)\n\n    #Check columns\n    for i in range(C):\n        column = ''.join([l[i] for l in pasture])\n        if 'WS' in column or 'SW' in column:\n            return False\n\n    #Here it is ok\n    return '\\n'.join(pasture)\n\nres = A()\nif res:\n    print('Yes')\n    print(res)\nelse:\n    print('No')", "r, c = list(map(int, input().split()))\ncells = [list(input()) for _ in range(r)]\n\nans = \"Yes\"\nfor i in range(r):\n    for j in range(c):\n        if cells[i][j] == '.':\n            cells[i][j] = 'D'\nfor i in range(r - 1):\n    for j in range(c):\n        if cells[i][j] == 'S' and cells[i + 1][j] == 'W':\n            ans = \"No\"\n        if cells[i][j] == 'W' and cells[i + 1][j] == 'S':\n            ans = \"No\"\nfor i in range(r):\n    for j in range(c - 1):\n        if cells[i][j] == 'S' and cells[i][j + 1] == 'W':\n            ans = \"No\"\n        if cells[i][j] == 'W' and cells[i][j + 1] == 'S':\n            ans = \"No\"\nprint(ans)\nif ans == \"Yes\":\n    for i in range(r):\n        print(''.join(cells[i]))\n", "#!/usr/bin/env python3\n\nimport sys\n\n[R, C] = list(map(int, sys.stdin.readline().strip().split()))\nfield = [sys.stdin.readline().strip() for _ in range(R)]\n\nfor line in field:\n\tif ('WS' in line) or ('SW' in line):\n\t\tprint ('No')\n\t\treturn\nfor l1, l2 in zip(field[1:], field[:-1]):\n\tfor c1, c2 in zip(l1, l2):\n\t\tif (c1 == 'W' and c2 == 'S') or (c1 == 'S' and c2 == 'W'):\n\t\t\tprint ('No')\n\t\t\treturn\n\nfor i in range(R):\n\tfield[i] = field[i].replace('.', 'D')\n\nprint ('Yes')\nfor line in field:\n\tprint (line)\n", "R, C = list(map(int, input().split()))\nr = []\nf = 0\nfor i in range(R):\n    r.append(input())\n    for j in range(C):\n        if r[i][j] == 'W':\n            if j and r[i][j - 1] == 'S':\n                f = 1\n                break\n            if j + 1 < C and r[i][j + 1] == 'S':\n                f = 1\n                break\n    if f:\n        break\nif not f:\n    for i in range(C):\n        for j in range(R):\n            if r[j][i] == 'W':\n                if j and r[j - 1][i] == 'S':\n                    f = 1\n                    break\n                if j + 1 < R and r[j + 1][i] == 'S':\n                    f = 1\n                    break\n        if f:\n            break\nif f:\n    print('No')\nelse:\n    print('Yes')\n    for i in range(R):\n        print(r[i].replace('.','D'))\n\n", "R,C = list(map(int , input().split()))\nprev = input().replace('.', 'D')\n\nres  = [prev]\nfor cnt in range(C-1):\n    if (prev[cnt] == 'W' and prev[cnt+1] == 'S') or (prev[cnt] == 'S' and prev[cnt+1] == 'W'):\n        print('No')\n        return\nfor row in range(R-1):\n    cur = input().replace('.', 'D')\n    res.append(cur)\n    if C==1 :\n        if (prev[0] == 'W' and cur[0] == 'S') or (prev[0] == 'S' and cur[0] == 'W'):\n            print('No')\n            return\n\n    for cnt in range(C-1):\n        if (cur[cnt] == 'W' and cur[cnt+1] == 'S') or (cur[cnt] == 'S' and cur[cnt+1] == 'W'):\n            print('No')\n            return\n\n\n    for cnt in range(C):\n        if (prev[cnt] == 'W' and cur[cnt] == 'S') or (prev[cnt] == 'S' and cur[cnt] == 'W'):\n            print('No')\n            return\n\n    prev = cur\n\nprint('Yes')\nfor c in res:\n    print(c)\n\n", "r, c = map(int, input().split())\nnum = [[1] * (c + 2)]\nfor i in range(r):\n    s = input()\n    ans = [1]\n    for j in range(len(s)):\n        if s[j] == '.':\n            ans.append('D')\n        else:\n            ans.append(s[j])\n    ans.append(1)\n    num.append(ans)\nnum.append([1] * (c + 2))\nfl = True\nfor i in range(1, len(num) - 1):\n    for j in range(1, len(num[i]) - 1):\n        if num[i][j] == 'S' and (num[i][j - 1]== 'W' or num[i][j + 1]== 'W' or num[i - 1][j]== 'W' or num[i + 1][j]== 'W'):\n            fl = False\nif fl:\n    print('Yes')\n    for i in range(1, len(num) - 1):\n        for j in range(1, len(num[i]) - 1):\n            print(num[i][j], end='')\n        print()\nelse:\n    print('No')", "r, c = [int(x) for x in input().split()]\ntable = [[c for c in input()] for i in range(r)]\n\ndef check(i, j):\n    if i > 0:\n        if table[i-1][j] == 'W':\n            return False\n    if i < r - 1:\n        if table[i+1][j] == 'W':\n            return False\n    if j > 0:\n        if table[i][j-1] == 'W':\n            return False\n    if j < c - 1:\n        if table[i][j+1] == 'W':\n            return False\n    return True\n    \nno = False\n\nfor i in range(r):\n    for j in range(c):\n        if (table[i][j] == 'S') and check(i,j) is False:\n            print('No')\n            no = True\n            break\n    if no:\n        break\n\nif not no:\n    print('Yes')\n    for i in range(r):\n        s = \"\"\n        for j in range(c):\n            s += ('D' if table[i][j] == '.' else table[i][j])\n        print(s)", "\nR, C = list(map(int, input().split()))\nfield = []\nfor i in range(R):\n    line = input()\n    f = []\n    for ch in line:\n        f.append(ch)\n    field.append(f)\n\nlu = [[1, 0], [-1, 0], [0, 1], [0, -1]]\ndef main():\n    for i in range(R):\n        for j in range(C):\n            item = field[i][j]\n            if item == '.':\n                field[i][j] = 'D'\n            if item == 'S':\n                for [di, dj] in lu:\n                    di += i; dj += j\n                    if di in range(R) and dj in range(C):\n                        if field[di][dj] == 'W':\n                            print('No')\n                            return\n\n    print('Yes')\n    for line in field:\n        print(''.join(line))\n\nmain()\n"]