["import sys\ninput = sys.stdin.readline\n\nn = int(input())\nx = sorted(list(map(int, input().split())))\na, b = x[:n//2], x[n//2:]\ntmp = []\nfor i in range(n//2):\n    tmp.append(b[i])\n    tmp.append(a[i])\nif n % 2:\n    tmp.append(b[-1])\ncnt = 0\nfor i in range(1, n-1, 2):\n    if tmp[i+1] > tmp[i] < tmp[i-1]:\n        cnt += 1\nprint(cnt)\nprint(*tmp)", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nans=[0]*n\nfor i in range(n//2):\n  ans[1+i*2]=a[i]\nfor i in range(n//2,n):\n  ans[(i-n//2)*2]=a[i]\nco=0\nfor i in range(1,n-1):\n  if ans[i-1]>ans[i] and ans[i]<ans[i+1]:co+=1\nprint(co)\nprint(*ans)", "n = int(input())\na = sorted(map(int, input().split()))\nb = [0] * n\nb[1::2], b[::2] = a[:n//2], a[n//2:]\nprint(sum(b[i-1] > b[i] < b[i+1] for i in range(1, n - 1)))\nprint(*b)\n", "n=int(input())\na=sorted(map(int,input().split()))\nl=[a[(1-i%2)*(n//2)+i//2]for i in range(n)]\nc=0\nfor i in range(1,n-1):\n if l[i-1]>l[i]<l[i+1]:c+=1\nprint(c)\nprint(' '.join(map(str,l)))", "N = int(input())\nList = [int(x) for x in input().split()]\nList.sort()\ncount = 0\narr = [0] * N\nindex = 0\nfor i in range(1,N,2):\n    arr[i] = List[index]\n    index += 1\nfor i in range(0,N,2):\n    arr[i] = List[index]\n    index += 1\ncount = 0\nfor i in range(1,N-1):\n    if(arr[i]<arr[i-1] and arr[i]<arr[i+1]):\n        count+=1\nprint(count)\nprint(*arr)\n", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nlo = 0\nhi = (n+1)//2\nwhile hi - lo > 1:\n    test = (hi + lo)//2\n    smol = a[:test]\n    large = a[-test-1:]\n    rest = a[test:-test-1]\n    works = True\n    for i in range(test):\n        if smol[i] == large[i] or smol[i] == large[i+1]:\n            works = False\n    if works:\n        lo = test\n    else:\n        hi = test\nsmol = a[:lo]\nlarge = a[-lo-1:]\nrest = a[lo:-lo-1]\no = []\nwhile smol:\n    o += [large.pop()]\n    o += [smol.pop()]\no += large\no += rest\nprint(lo)\nprint(' '.join(map(str,o)))\n", "# Fast IO (be careful about bytestring, not on interactive)\n\n# import os,io\n# input=io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\n\nn = int(input())\na = list(map(int,input().split()))\n\na.sort()\nb = [0] * n\nfor i in range((n + 1) // 2 - 1):\n    b[2 * i + 1] = a[i]\nif n % 2 == 0:\n    b[n - 1] = a[n // 2 - 1]\nfor i in range((n + 1) // 2 - n % 2 ,n):\n    b[2 * i - 2 * ((n + 1) // 2 - n % 2)] = a[i]\ncnt = 0\nfor i in range(n):\n    if i > 0 and i < n-1 and b[i] < b[i - 1] and b[i] < b[i + 1]:\n        cnt += 1 \nprint(cnt)\nprint(\" \".join(map(str,b)))", "n = int(input())\nA = [int(x) for x in input().split()]\nA.sort()\nR = [None]*n\n\nR[1::2] = A[:n//2]\nR[0::2] = A[n//2:]\nr = 0\nfor i in range(1,n-1):\n    r += R[i-1] > R[i] < R[i+1];\nprint(r)\nprint(*R)\n", "n = int(input())\na = list(map(int,input().split()))\na = sorted(a)\nx = a[:n//2]\na = a[n//2:]\nl,k,m = [],0,0\nfor i in range(n):\n     if i%2==0:\n          l.append(a[k])\n          k+=1\n     else:\n          l.append(x[m])\n          m+=1\nm=0\nfor i in range(1,n-1):\n     if(l[i]<l[i-1] and l[i]<l[i+1]):\n          m+=1\nprint(m)   \nfor i in l:\n     print(i,end=\" \")", "n = int(input())\narr = list(map(int, input().split()))\nres = [0] * n\narr.sort()\nfor i in range(n):\n    if i < n//2:\n        res[i*2+1] = arr[i]\n    else:\n        res[(i-n//2)*2] = arr[i]\n\nx = 0\nfor i in range(1, n-1):\n    if res[i-1] > res[i] < res[i+1]:\n        x += 1\nprint(x)\nprint(*res)\n", "import sys\ninput = sys.stdin.readline\n\n\nn = int(input())\na = list(map(int, input().split()))\n\nres = [0] * n\na = sorted(a, reverse=True)\nai = 0\n\nfor i in range(0, n, 2):\n    res[i] = a[ai]\n    ai += 1\nif n % 2 == 0:\n    res[-1] = a[ai]\n    ai += 1\nfor i in range(1, n - 1, 2):\n    res[i] = a[ai]\n    ai += 1\n\nans = 0\nfor i in range(n):\n    if not(i - 1 >= 0 and i + 1 < n):\n        continue\n    if res[i] < res[i - 1] and res[i] < res[i + 1]:\n        ans += 1\nprint(ans)\nprint(*res)", "from collections import defaultdict as dd\nimport math\nimport sys\nimport heapq\nimport copy\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\ndef solve():\n\tn = nn()\n\n\tice= lm()\n\n\tice.sort()\n\tout = []\n\tfor i in range(n):\n\t\tif i%2==1:\n\t\t\tout.append(ice[i//2])\n\n\t\telse:\n\t\t\tout.append(ice[((i//2+n//2))])\n\tgood= 0\n\tfor i in range(n-1):\n\t\tif i%2==1:\n\t\t\tif out[i]<out[i+1] and out[i]<out[i-1]:\n\t\t\t\tgood+=1\n\tprint(good)\n\tprint(*out)\nsolve()\n", "import sys\nreadline = sys.stdin.readline\n\nN = int(readline())\nA = list(map(int, readline().split()))\nA.sort()\nAns = [None]*N\nA1 = A[:(N-1)//2][::-1]\nA2 = A[(N-1)//2:]\nfor i in range((N-1)//2):\n    Ans[2*i+1] = A1[i]\nfor i in range(N):\n    if Ans[i] is None:\n        Ans[i] = A2.pop()\nans = 0\nfor i in range(1, N-1):\n    if Ans[i-1] > Ans[i] and Ans[i] < Ans[i+1]:\n        ans += 1\nprint(ans)\nprint(*Ans)\n", "n = int(input())\narr = sorted(list(map(int, input().split())), reverse=True)\n\nt = n - (n - 1) // 2\nans = [0 for _ in range(n)]\nfor i in range(t):\n    x = i * 2\n    if x == n:\n        x -= 1\n    ans[x] = arr[i]\n\ncur = 1\ncur2 = n - 2\nif n % 2 == 0:\n    cur2 -= 1\nfor i in range(t, n):\n    if ans[cur - 1] > arr[i] < ans[cur + 1]:\n        ans[cur] = arr[i]\n        cur += 2\n    else:\n        ans[cur2] = arr[i]\n        cur2 -= 2\n\nanswer = sum(ans[i - 1] > ans[i] < ans[i + 1] for i in range(1, n - 1))\nprint(answer)\nprint(*ans)\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\na = [int(item) for item in input().split()]\na.sort()\n\nans = [-1] * n\nnum = 0\nif n % 2 == 1:\n    for i in range(0,n,2):\n        ans[i] = a.pop()\n    for i in range(1,n,2):\n        if ans[i-1] > a[-1] < ans[i+1]:\n            num += 1\n        ans[i] = a.pop()\n    print(num)\n    print(*ans)\nelse:\n    for i in range(0,n,2):\n        ans[i] = a.pop()\n    ans[-1] = a.pop()\n    for i in range(1,n-1,2):\n        if ans[i-1] > a[-1] < ans[i+1]:\n            num += 1\n        ans[i] = a.pop()\n    print(num)\n    print(*ans)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = []\n\nif n%2 == 1:\n    ans.append(l[n//2])\n    for i in range(n//2):\n        ans.append(l[i])\n        ans.append(l[(n+1)//2 + i])\nelse:\n    for i in range(n//2):\n        ans.append(l[(n+1)//2 + i])\n        ans.append(l[i])\nnum = 0\nfor i in range(1,n-1):\n    if ans[i] < min(ans[i-1],ans[i+1]):\n        num+=1\nprint(num)\nprint(' '.join(map(str,ans)))", "from math import *\nfrom random import *\nfrom bisect import *\nfrom math import *\nn = int(input())\nmas = sorted(list(map(int, input().split())))\notv = [0 for i in range(n)]\nnxt = 0\nfor i in range(1, n, 2):\n    otv[i] = mas[nxt]\n    nxt += 1\nfor i in range(0, n, 2):\n    otv[i] = mas[nxt]\n    nxt += 1\nres = 0\nfor i in range(1, n - 1):\n    if otv[i] < otv[i + 1] and otv[i] < otv[i - 1]:\n        res += 1\nprint(res)\nprint(' '.join(map(str, otv)))", "from collections import Counter\n\ndef read_line():\n    return list(map(int, input().split()))\n\n\nn = int(input())\nl = sorted(read_line())\ndef ok(ans):\n    nums = l[:ans]\n    rest = l[ans:]\n    if len(rest) < ans + 1:\n        return None\n    rest = rest[-(ans + 1):]\n    l2 = []\n    for i in range(len(nums)):\n        if nums[i] < rest[i] and nums[i] < rest[i+1]:\n            l2.append(rest[i])\n            l2.append(nums[i])\n        else:\n            return None\n    l2.append(rest[-1])\n    r = Counter(l)\n    s = Counter(l2)\n    for v in r:\n        k = r[v] - s[v]\n        l2 += [v] * k\n    return l2\n\ndef _ok(ans):\n    nums = l[:ans]\n    rest = l[ans:]\n    if len(rest) < ans + 1:\n        return None\n    rest = rest[-(ans + 1):]\n    for i in range(len(nums)):\n        if nums[i] < rest[i] and nums[i] < rest[i+1]:\n            pass\n        else:\n            return None\n    return 1\n\n\nlo = 0\nhi = n\nwhile lo <= hi:\n    mid = (lo + hi) // 2\n    if _ok(mid) is not None:\n        lo = mid + 1\n    else:\n        hi = mid - 1\na = ok(hi)\nprint(hi)\nprint(\" \".join(map(str, a)))\n"]