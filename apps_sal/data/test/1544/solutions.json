["n = int(input())\nc1 = n\nc2 = (n * (n-1)) // 2\nc3 = (n * (n-1) * (n-2)) // (2*3)\nc4 = (n * (n-1) * (n-2) * (n-3)) // (2*3*4)\nc5 = (n * (n-1) * (n-2) * (n-3) * (n-4)) // (2*3*4*5)\nw1 = 0\nw1 += c1\nw1 += c2 * 2\nw1 += c3 \nw2 = 0\nw2 += c1\nw2 += c2 * 4\nw2 += c3 * 6\nw2 += c4 * 4\nw2 += c5\nprint(w1*w2)", "n = int(input())\n\nprint((n+2)*(n+1)*n//6 * (n+4)*(n+3)*(n+2)*(n+1)*n//120)", "from functools import reduce\nfrom math import factorial\nn = int(input())\nC_n_k = lambda n, k: reduce(lambda x, y: x*y, list(range(n, n-k, -1))) // factorial(k)\nprint(C_n_k(n+4, 5) * C_n_k(n+2, 3))\n", "n = int(input())\n\ndef fact(n):\n    return 1 if n == 0 else (n * fact(n - 1))\n\ndef c(n, k):\n    return fact(n) // (fact(k) * (fact(n - k)))\ndef f(n, x):\n    return c(x + n - 1, n - 1)\n\nprint(f(n, 3) * f(n, 5))\n", "n = int(input())\nprint (n * (n + 1) * (n + 2) * (n + 3) * (n + 4) // 120 * n * (n + 1) * (n + 2) // 6)", "import math\nn = int(input())\nprint(math.factorial(n+4)//(math.factorial(5)*math.factorial(n-1))*math.factorial(n+2)//(math.factorial(3)*math.factorial(n-1)))\n", "def fact(i):\n  ans = 1\n  for j in range(1, i + 1):\n    ans *= j\n  return ans\n\ndef c(i, j):\n  return fact(i + j - 1) // (fact(j) * fact(i - 1))\n\nn = int(input())\nprint(c(n, 5) * c(n, 3))", "def C(frm, what):\n    ans = 1\n    for i in range(what):\n        ans *= frm - i\n        ans = ans // (i + 1)\n    return ans\n\nn = int(input())\nprint (C(4 + n, n - 1) * C(2 + n, n - 1))", "from math import factorial\n\ndef C(n, k):\n    return factorial(n) // factorial(k) // factorial(n - k)\n\ndef main():\n    n = int(input())\n    print(C(n+4, 5) * C(n+2, 3))\n\ndef __starting_point():\n    main()\n__starting_point()", "def pol(n,k):\n    ans = 1\n    for i in range(k):\n        ans *= (n-i)/(i+1)\n    k = int(ans)\n    if abs(k - ans) < 1/2:\n        return k\n    return k + 1\nn = int(input())\npr = pol(n + 2,3) * pol(n+4,5)\nprint(pr)", "n = int(input())\n\n#C(n + 5 - 1, n - 1) = C(n + 4, 5)\n\nans1 = 1\nfor i in range(5):\n\tans1 *= (n + 4 - i)\nfor i in range(1, 6):\n\tans1 //= i\n\nans2 = 1\nfor i in range(3):\n\tans2 *= (n + 2 - i)\nfor i in range(1, 4):\n\tans2 //= i\n\nprint(ans1 * ans2)\n", "n = int(input())\na = n*(n+1)*(n+2)*(n+3)*(n+4) // 120\nb = n*(n+1)*(n+2) // 6\nprint(a*b)", "n = int(input())\n\nr1 = n * (n + 1) * (n + 2) * (n + 3) * (n + 4) // 120\nr2 = n * (n + 1) * (n + 2) // 6\nprint(r1 * r2)", "def C(n,m):\n    if m > n:\n        return 0\n    elif m == n:\n        return 1\n    elif m == 1:\n        return n\n\n    a = 1\n    b = 1\n    for i in range(1,m+1):\n        a *= n+1-i\n        b *= i\n    return a//b\n\ndef __starting_point():\n\n    n = int(input())\n\n    a = C(n,1) + 4*C(n,2) + 6*C(n,3) + 4*C(n,4) + C(n,5)\n    b = C(n,1) + 2*C(n,2) + C(n,3)\n\n    print(a*b)\n__starting_point()", "n=int(input())\nfrom math import factorial\ndef c(n, r):\n    return factorial(n) // factorial(r) // factorial(n-r)\nprint(c(n+5-1,5) * c(n+3-1,3))\n", "n=int(input())\nd=1\nans1=ans2=0\nfor i in range(n, n+5):\n\td*=i\nans1=d//120\nd=1\nfor i in range(n, n+3):\n\td*=i\nans2=d//6\nprint(ans1*ans2)", "n = int(input())\ncn1 = n\ncn2 = (n * (n - 1)) // 2\ncn3 = (cn2 * (n - 2)) // 3\ncn4 = (cn3 * (n - 3)) // 4\ncn5 = (cn4 * (n - 4)) // 5\na = cn1 + 4 * cn2 + 6 * cn3 + 4 * cn4 + cn5\nb = cn1 + 2 * cn2 + cn3\nprint(a * b)\n", "n = int(input())\ndp = [[0] * (n + 7) for i in range(7)]\n\nfor j in range(n + 1):\n\tdp[0][j] = 1\n\nfor i in range(5):\n\tfor j in range(1, n + 1):\n\t\tfor k in range(5):\n\t\t\tdp[i][j] += dp[i - k][j - 1]\n\nprint(dp[2][n] * dp[4][n])\n", "import re, sys, string, operator, functools, fractions, collections\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda x=' ': list(map(int,input().split(x)))\nRS=lambda x=' ': input().rstrip().split(x)\nmod=int(1e9+7)\neps=1e-6\n#################################################\nn=RI()[0]\nv1=1\nv2=1\nfor i in range(n-1):\n    v1*=(6+i)\n    v2*=(4+i)\nfor i in range(1,n):\n    v1//=i\n    v2//=i\nprint(v1*v2)\n", "from math import factorial as f\n\nn = int(input())\n\ndef b(n, k):\n\treturn f(n)//f(k)//f(n-k)\n\t\ns5 = n\nif (n > 1):\n\ts5 += n*(n-1)*2\n\tif (n > 2):\n\t\ts5 += n*(n-1)*(n-2)//2*2\n\t\tif (n > 3):\n\t\t\ts5 += n*(n-1)*(n-2)*(n-3)//f(3)\n\t\t\tif (n > 4):\n\t\t\t\ts5 += n*(n-1)*(n-2)*(n-3)*(n-4)//f(5)\n\t\t\ns3 = n\nif (n > 1):\n\ts3 += n*(n-1)\n\tif (n > 2):\n\t\ts3 += n*(n-1)*(n-2)//6\n\t\t\n#print(s5, s3)\nprint(s5*s3)", "n = int(input())\n\na = (n + 4) * (n + 3) * (n + 2) * (n + 1) * n // 2 // 3 // 4 // 5\nb = (n + 2) * (n + 1) * n // 2 // 3\n\nprint(a * b)", "import math\n\ndef choose(n,r):\n\treturn math.factorial(n) // math.factorial(r) // math.factorial(n-r)\n\nn = int(input())\n\nf = math.factorial\n\nresult = choose(n-1+5,5)*choose(n-1+3,3)\n\n#result = n**8 // (f(3)*f(5))\n\nprint(result)", "import math\nf = math.factorial\ndef C(n, k):\n    if k > n:\n        return 1\n    return f(n) // f(k) // f(n - k)\n\nn = int(input())\n\nans1 = C(n, 1)\nif n > 1:\n    ans1 += 2 * C(n, 2)\nif n > 2:\n    ans1 += C(n, 3)\n\nans2 = C(n, 1)\nif n > 1:\n    ans2 += 4 * C(n, 2)\nif n > 2:\n    ans2 += 6 * C(n, 3)\nif n > 3:\n    ans2 += 4 * C(n, 4)\nif n > 4:\n    ans2 += C(n, 5)\n\nprint(ans1 * ans2)\n", "n = int(input())\nans = 0\nt = n+4\nw = 5\nq = 1\nwhile (w>0):\n\tq*=t\n\tt-=1\n\tw-=1\nans = q//120\nans *= n*(n+1)*(n+2)\nans = ans//6\nprint (ans)"]