["\nfrom collections import Counter\nfrom itertools import accumulate\nfrom math import sqrt\nfrom operator import itemgetter\nimport sys\n \nn = int(input())\ncnt = Counter(map(int, input().split()))\nnums, counts = zip(*sorted(cnt.items(), key=itemgetter(1)))\nacc = [0] + list(accumulate(counts))\narea = 1\nh, w = 1, 1\ni = len(counts)\n \nfor y in range(int(sqrt(n)), 0, -1):\n    while i and counts[i-1] > y:\n        i -= 1\n    total = acc[i] + (len(counts) - i) * y\n    x = total // y\n    if y <= x and area < x * y:\n        h, w, area = y, x, x*y\n \nans = [[0]*w for _ in range(h)]\ni = len(counts)-1\nnum, count = nums[i], min(h, counts[i])\n \nfor x in range(w):\n    for y in range(h):\n        ans[y][(x + y) % w] = num\n \n        count -= 1\n        if count == 0:\n            i -= 1\n            num, count = nums[i], h if h < counts[i] else counts[i]\n \nprint(area)\nprint(h, w)\nfor y in range(h):\n    sys.stdout.write(' '.join(map(str, ans[y])) + '\\n')", "import sys\ninput = sys.stdin.readline\n \nn=int(input())\nA=list(map(int,input().split()))\n\nfrom collections import Counter\n \nC=Counter(A)\n\nimport math\n\nMAXV=max(max(C.values()),int(math.sqrt(n)))\n \nVCOUNT=[0]*(MAXV+1)\n \nfor v in list(C.values()):\n    VCOUNT[v]+=1\n    \nSUM=n\n \nfrom itertools import accumulate\n \nACC=list(accumulate(VCOUNT[::-1]))[::-1]\n \n \nANS=0\n \nfor i in range(MAXV,0,-1):\n    if SUM//i>=i:\n        if ANS<i*(SUM//i):\n            ANS=i*(SUM//i)\n            ANSX=i,(SUM//i)\n \n    SUM-=ACC[i]\n \nprint(ANS)\n \nX,Y=ANSX[0],ANSX[1]\nprint(X,Y)\n \nA=[[0]*Y for i in range(X)]\n \ni=0\nj=0\nnowj=0\ncolored=0\nsame=0\nLIST=list(C.most_common())\nind=0\n \nwhile colored<ANS:\n    A[i][j],MAX=LIST[ind]\n    colored+=1\n    i+=1\n    j=(j+1)%Y\n    if i==X:\n        i=0\n        nowj+=1\n        j=nowj\n    same+=1\n \n    if same==min(X,MAX):\n        ind+=1\n        same=0\n \nfor a in A:\n    sys.stdout.write(\" \".join(map(str,a))+\"\\n\")\n", "from collections import Counter\nfrom itertools import accumulate\nfrom math import sqrt\nfrom operator import itemgetter\nimport sys\n \nn = int(input())\ncnt = Counter(map(int, input().split()))\nnums, counts = zip(*sorted(cnt.items(), key=itemgetter(1)))\nacc = [0] + list(accumulate(counts))\narea = 1\nh, w = 1, 1\ni = len(counts)\n \nfor y in range(int(sqrt(n)), 0, -1):\n    while i and counts[i-1] > y:\n        i -= 1\n    total = acc[i] + (len(counts) - i) * y\n    x = total // y\n    if y <= x and area < x * y:\n        h, w, area = y, x, x*y\n \nans = [[0]*w for _ in range(h)]\ni = len(counts)-1\nnum, count = nums[i], min(h, counts[i])\n \nfor x in range(w):\n    for y in range(h):\n        ans[y][(x + y) % w] = num\n \n        count -= 1\n        if count == 0:\n            i -= 1\n            num, count = nums[i], h if h < counts[i] else counts[i]\n \nprint(area)\nprint(h, w)\nfor y in range(h):\n    sys.stdout.write(' '.join(map(str, ans[y])) + '\\n')"]