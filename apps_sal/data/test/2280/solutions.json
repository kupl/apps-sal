["t = int(input())\nfor i in range(t):\n    n = int(input())\n    arr = [int(x) for x in input().split()]\n    arr.sort(reverse=True)\n    print(min(arr[1] - 1, len(arr) - 2))", "import sys\n\nT = int(sys.stdin.readline().strip())\nfor t in range (0, T):\n    n = int(sys.stdin.readline().strip())\n    a = list(map(int, sys.stdin.readline().strip().split()))\n    a.sort()\n    print(min([len(a)-2, a[-2]-1]))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = sorted(map(int, input().split()), reverse=True)\n    print(min(n - 2, a[1] - 1))\n", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    ar=list(map(int,input().split()))\n    if(n<=2):\n        print(0)\n        continue\n    ar=sorted(ar)[::-1]\n    ans=0\n    for i in range(1,n-1):\n        if(ar[0]>i and ar[1]>i):\n            ans=i\n    print(ans)\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    ai = list(map(int,input().split()))\n    ai.sort()\n    print(min(n-2,ai[-2]-1))\n    \n", "# @author \n\nimport sys\n\nclass ADIYWoodenLadder:\n    def solve(self):\n        t = int(input())\n        for _ in range(t):\n            n = int(input())\n            a = [int(_) for _ in input().split()]\n            a.sort()\n            print(min(a[-2] - 1, n - 2))\n\nsolver = ADIYWoodenLadder()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "n = int(input())\nfor i in range(n):\n    p = int(input())\n    a = list(map(int,input().split()))\n    a = sorted(a)\n    if p == 2:\n        print(0)\n        continue\n    k = a[-2] - 1\n    print(min(k, p - 2))", "n = int(input())\nfor i in range(n):\n    k = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    print(min(k-2,s[k-2]-1))\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort()\n    if a[-2]>n-2:\n        print(n-2)\n    else:\n        print(a[-2]-1)", "def main():\n    def solve():\n        n = int(input())\n        arr = sorted(map(int, input().split()))\n        a = arr[-2]\n        print(min(n - 2, a - 1))\n    \n    import sys\n    input = sys.stdin.readline\n    \n    for _ in range(int(input())):\n        solve()\n    \n    return 0\n\nmain()", "t=int(input())\nfor l in range(t):\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tarr.sort()\n\ta=arr[-2]\n\tprint(min(a-1,n-2))\n", "for TT in range(1, int(input()) + 1):\n    n = int(input())\n    l = sorted(map(int, input().split()))\n    k = max(0, min(n - 2, l[-2] - 1))\n    print(k)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = sorted(a)\n    print(min(a[-2]-1, n-2))\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n\n    lens = sorted(map(int, input().split()))\n    cnt = len(list(filter(lambda x: x> 0, lens[:-2])))\n\n    print(min(cnt, lens[-2]-1))", "import math\nimport sys\nimport collections\n\n# imgur.com/Pkt7iIf.png\n\ndef getdict(n):\n    d = {}\n    if type(n) is list:\n        for i in n:\n            if i in d:\n                d[i] += 1\n            else:\n                d[i] = 1\n    else:\n        for i in range(n):\n            t = ii()\n            if t in d:\n                d[t] += 1\n            else:\n                d[t] = 1\n    return d\ndef cdiv(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\n\nt = ii()\nfor i in range(t):\n    n = ii()\n    d = sorted(li())\n    print(min(d[-2] - 1, n - 2))\n", "from sys import stdin\nc=int(stdin.readline().strip())\nfor i in range(c):\n    n=int(stdin.readline().strip())\n    #n,m=map(int,stdin.readline().strip().split())\n    s=list(map(int,stdin.readline().strip().split()))\n    s.sort()\n    l=min(s[-1],s[-2])\n    ans=min(l-1,n-2)\n    print(ans)\n", "T = int(input())\nfor i in range(T):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort()\n\tprint(min(len(a) - 2, max(a[-2] - 1, 0)))\n\n", "for _ in range(int(input())):\n    n = int(input())\n    li = sorted(list(map(int, input().split())))\n    print(min(li[n - 2] - 1, n - 2))\n", "for _ in range(int(input())):\n    n = int(input())\n    a = sorted([int(i) for i in input().split()])\n    k = min(a[-1]-1,a[-2]-1,len(a)-2)\n    print(k)\n\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split(' ')]\n    a.sort()\n    maxK = a[-2]-1\n    ans = min(maxK,len(a)-2)\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(0)\n    else:\n        max1 = max2 = -1\n        for q in a:\n            if q > max1:\n                max1, max2 = q, max1\n            elif q > max2:\n                max2 = q\n        print(max(0, min(max2-1, len(a)-2)))\n", "q = int(input())\nfor i in range(q):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    ans = 0\n    for i in range(n - 2):\n        if (ans + 1 == l[-2]):\n            break\n        else:\n            ans += 1\n    print(ans)", "for i in range(int(input())):\n    num = int(input())\n    data = [int(i) for i in input().split()]\n    data.sort()\n    k0 = min(data[-2] - 1, num - 2)\n    print(max(0, k0))\n", "test_count = int(input())\nfor _ in range(test_count):\n\tn = int(input())\n\tarr = list(map(int, input().split()))\n\tarr.sort()\n\tprint(max(min(n - 2, arr[-2] - 1), 0))\n"]