["a, d = list(map(float, input().split()))\nn = int(input())\n\ndef coordinates(s):\n    if s <= a:\n        return (s, 0)\n    elif s <= 2*a:\n        return (a, s-a)\n    elif s <= 3*a:\n        return (3*a - s, a)\n    else:\n        return (0, 4*a - s)\n\nfor i in range(1, n+1):\n    print(\"%f %f\" % coordinates(i*d % (4*a)))\n", "from math import floor\na, d = map(float, input().split())\nn = int(input())\n\nres = []\nfor i in range(n):\n  rec = i*d + d\n  tra = floor(rec/a) % 4\n  seg = rec - floor(rec/a)*a\n  # print(\"D>\",rec, tra, seg)\n  if tra == 0:\n    res.append(\"%.8f %.8f\" % (seg, 0.0))\n  elif tra == 1:\n    res.append(\"%.8f %.8f\" % (a, seg))\n  elif tra == 2:\n    res.append(\"%.8f %.8f\" % (a-seg, a))\n  elif tra == 3:\n    res.append(\"%.8f %.8f\" % (0.0, a-seg))\n    \nprint(\"\\n\".join(res))", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    a, d =map(float, input().split(' '))\n    a *= 10000\n    d *= 10000\n    ans = []\n\n    for i in range(1, int(input()) + 1):\n        cur_round_pos = d * i % (a * 4)\n        if cur_round_pos <= a:\n            y = 0\n            x = cur_round_pos / 10000\n        elif cur_round_pos <= a * 2:\n            x = a / 10000\n            y = (cur_round_pos - a) / 10000\n        elif cur_round_pos <= a * 3:\n            y = a / 10000\n            x = (a - (cur_round_pos - a * 2)) / 10000\n        elif cur_round_pos < a * 4:\n            x = 0\n            y = (a - (cur_round_pos - a * 3)) / 10000\n        ans.append('{} {}'.format(x, y))\n    print('\\n'.join(ans))\n\ndef __starting_point():\n    return(main())\n__starting_point()", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    a, d =[float(x) * 10000 for x in input().split(' ')]\n    ans = []\n\n    for i in range(1, int(input()) + 1):\n        t = d * i % (a * 4)\n        if t <= a:\n            y = 0\n            x = t / 10000\n        elif t <= a * 2:\n            x = a / 10000\n            y = (t - a) / 10000\n        elif t <= a * 3:\n            y = a / 10000\n            x = (a - (t - a * 2)) / 10000\n        elif t < a * 4:\n            x = 0\n            y = (a - (t - a * 3)) / 10000\n        ans.append('{} {}'.format(x, y))\n\n    print('\\n'.join(ans))\n\ndef __starting_point():\n    return(main())\n\n__starting_point()", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    a, d =[int(float(x) * 10000 + 1e-6) for x in input().split(' ')]\n    ans = []\n\n    for i in range(1, int(input()) + 1):\n        cur_round_pos = d * i % (a * 4)\n        if cur_round_pos <= a:\n            y = 0\n            x = cur_round_pos / 10000\n        elif cur_round_pos <= a * 2:\n            x = a / 10000\n            y = (cur_round_pos - a) / 10000\n        elif cur_round_pos <= a * 3:\n            y = a / 10000\n            x = (a * 3 - cur_round_pos) / 10000\n        elif cur_round_pos < a * 4:\n            x = 0\n            y = (a * 4 - cur_round_pos) / 10000\n        ans.append('{} {}'.format(x, y))\n\n    print('\\n'.join(ans))\n\ndef __starting_point():\n    return(main())\n\n__starting_point()", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport sys\n\n\ndef main():\n    a, d =[int(round(float(x) * 10000)) for x in input().split(' ')]\n    ans = []\n\n    for i in range(1, int(input()) + 1):\n        cur_round_pos = d * i % (a * 4)\n        if cur_round_pos <= a:\n            y = 0\n            x = cur_round_pos / 10000\n        elif cur_round_pos <= a * 2:\n            x = a / 10000\n            y = (cur_round_pos - a) / 10000\n        elif cur_round_pos <= a * 3:\n            y = a / 10000\n            x = (a * 3 - cur_round_pos) / 10000\n        elif cur_round_pos < a * 4:\n            x = 0\n            y = (a * 4 - cur_round_pos) / 10000\n        ans.append('{} {}'.format(x, y))\n\n    print('\\n'.join(ans))\n\ndef __starting_point():\n    return(main())\n\n__starting_point()", "def setPoint(point, a):\n    p = point\n    x = 0\n    y = 0\n    if p <= a:\n        x = p\n        y = 0\n    elif p <= a*2:\n        x = a\n        y = p - a\n    elif p <= a*3:\n        x = a*3 - p\n        y = a\n    else:\n        x = 0\n        y = a*4 - p\n    x = int(x*100000)/100000\n    y = int(y*100000)/100000\n    return str(x) + ' ' + str(y)\n\na, d = list(map(float, input().split()))\nn = int(input())\ncurP = 0\n\nfor l in range(0, n):\n    curP += d\n    curP = curP % (a*4)\n    print(setPoint(curP, a))\n"]