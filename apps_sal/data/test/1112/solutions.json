["import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\na = [list(map(int, i.split())) for i in f.read().strip().split(\"\\n\")]\ndef solve():\n    s = a[0][2] + a[2][0]\n    for i in range(1, s):\n        a[0][0] = i\n        a[2][2] = s-i\n        if sum(a[0]) == sum(a[2]):\n            break\n    a[1][1] = sum(a[0]) - sum(a[1])\n    for i in a:\n        print(*i)\nsolve()", "a, b, c = list(map(int, input().split())), list(map(int, input().split())), list(map(int, input().split()))\nx, y, z, u = a[1] + a[2], b[0] + b[2], c[0] + c[1], a[2] + c[0]\nt = (u + x + z) // 2 \na[0], b[1], c[2] = t - x, t - y, t - z\nprint(' '.join(str(i) for i in a))\nprint(' '.join(str(i) for i in b))\nprint(' '.join(str(i) for i in c))", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\ns = [list(readln()) for _ in range(3)]\nfor x in range(1, 10**5 + 1):\n    ss = x + s[0][1] + s[0][2]\n    y = ss - s[1][0] - s[1][2]\n    z = ss - s[2][0] - s[2][1]\n    if x + y + z == ss:\n        s[0][0] = x\n        s[1][1] = y\n        s[2][2] = z\n        for _ in s:\n            print(*tuple(_))\n", "A=list(map(int,input().split()))\n\nB=list(map(int,input().split()))\n\nC=list(map(int,input().split()))\n\ny=(A[1]+A[2]+(C[0]+C[1]-(B[0]+B[2])))//2\n\nx=y+B[0]+B[2]-(A[1]+A[2])\n\nz=y+B[0]+B[2]-(C[0]+C[1])\n\nA[0]=x\nB[1]=y\nC[2]=z\n\nprint(A[0],A[1],A[2])\nprint(B[0],B[1],B[2])\nprint(C[0],C[1],C[2])\n", "a = []\nfor i in range(3):\n    a.append(list(map(int, input().split())))\n\np = sum(a[2]) - sum(a[0])\nq = a[0][2] + a[2][0]\na[0][0] = (p + q) // 2;\na[2][2] = q - a[0][0]\na[1][1] = sum(a[0]) - sum(a[1])\n\nfor i in range(3):\n    print(\"%d %d %d\" % (a[i][0], a[i][1], a[i][2]))\n\n", "k=[list(map(int, input().split())) for x in range(3)]\nk[0][0] = 1\nk[1][1] = sum(k[0])-sum(k[1])\nk[2][2] = sum(k[0])-sum(k[2])\ns = k[0][1] + k[0][2]\nx = min(k[0][0], k[1][1], k[2][2])-1\nif x <= 0:\n    k[0][0] -= x\n    k[1][1] -= x\n    k[2][2] -= x\nwhile k[1][1] + k[2][2] != s:\n    k[0][0] += 1\n    k[1][1] += 1\n    k[2][2] += 1\n    \nfor i in k:\n    for j in i:\n        print(j, end=' ')\n    print()\n", "import sys\nimport math\n\nd = []\nfor i in range(3):\n    d.append([int(x) for x in (sys.stdin.readline()).split()])\n    \na1 = sum(d[0]) - sum(d[1])\na2 = sum(d[1]) - sum(d[2])\n\nfor i in range(100000, 0, -1):\n    d[0][0] = i\n    d[1][1] = d[0][0] + a1\n    d[2][2] = d[1][1] + a2\n    if(d[0][0] + d[1][1] + d[2][2] == sum(d[0])):\n        break\n    \nfor i in range(3):\n    print(\" \".join([str(x) for x in d[i]]))\n    \n\n\n\n         \n", "arr = [[int(x) for x in input().split()] for i in range(3)]\ns = sum(sum(x) for x in arr) // 2\narr[0][0] = s - sum(arr[0])\narr[1][1] = s - sum(arr[1])\narr[2][2] = s - sum(arr[2])\nprint('\\n'.join(' '.join([str(x) for x in l]) for l in arr))\n", "def main():\n    l = [list(map(int, input().split())) for _ in range(3)]\n    s = sum(map(sum, l)) // 2\n    for i, row in enumerate(l):\n        row[i] = s - sum(row)\n        print(*row)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "a=[list(map(int,input().split())) for i in range(3)]\na[0][0]=int((sum(a[1])+sum(a[2])-sum(a[0]))/2)\nsum_1=sum(a[0])\na[1][1]= sum_1-sum(a[1])\na[2][2]= sum_1-sum(a[2])\nfor i in range(3):\n    print(a[i][0],a[i][1],a[i][2])", "# coding: utf-8\ns = [[int(i) for i in input().split()] for j in range(3)]\nx = 0\nwhile True:\n    x += 1\n    sumk = x + s[0][1] + s[0][2]\n    y = sumk - s[1][0] - s[1][2]\n    z = sumk - s[2][0] - s[2][1]\n    if x+s[1][0]+s[2][0]==sumk and\\\n       s[0][1]+y+s[2][1]==sumk and\\\n       s[0][2]+s[1][2]+z==sumk and\\\n       x+y+z==sumk and\\\n       s[0][2]+y+s[2][0]==sumk:\n        s[0][0] = x\n        s[1][1] = y\n        s[2][2] = z\n        break\nfor i in range(3):\n    print(' '.join([str(j) for j in s[i]]))\n", "a = []\nfor i in range(3):\n    a.append(list(map(int, input().split())))\n\np = sum(a[2]) - sum(a[0])\nq = a[0][2] + a[2][0]\na[0][0] = (p + q) // 2;\na[2][2] = q - a[0][0]\na[1][1] = sum(a[0]) - sum(a[1])\n\nfor i in range(3):\n    print(\"%d %d %d\" % (a[i][0], a[i][1], a[i][2]))", "firstRow = list(map(int, input().split()))\nsecondRow = list(map(int, input().split()))\nthirdRow = list(map(int, input().split()))\n\ny = 1\n    \nwhile True:\n    summ = secondRow[0] + secondRow[2] + y\n    x = summ - (firstRow[1] + firstRow[2])\n    z = summ - (thirdRow[0] + thirdRow[1]) \n    \n    secondRow[1] = y\n    firstRow[0] = x\n    thirdRow[2] = z\n    \n    if sum(firstRow) == sum(secondRow) == sum(thirdRow)\\\n    == sum([firstRow[0],secondRow[1],thirdRow[2]]) == sum([firstRow[2],secondRow[1],thirdRow[0]]):\n        print(firstRow[0],firstRow[1],firstRow[2])\n        print(secondRow[0],secondRow[1],secondRow[2])\n        print(thirdRow[0],thirdRow[1],thirdRow[2])\n        break\n    else:\n        y += 1", "a,b,c = list(map(int,input().split()))\nd,e,f = list(map(int,input().split()))\ng,h,i = list(map(int,input().split()))\na = g + ((h - b) / 2)\ni = c + ((b - h) / 2)\ne = b + c - i\n\nprint(int(a),\" \",b,\" \",c)\nprint(d,\" \",int(e),\" \",f)\nprint(g,\" \",h,\" \",int(i))\n", "a = []\nfor i in range(3):\n    a.append(list(map(int, input().split())))\n\np = sum(a[2]) - sum(a[0])\nq = a[0][2] + a[2][0]\na[0][0] = (p + q) // 2;\na[2][2] = q - a[0][0]\na[1][1] = sum(a[0]) - sum(a[1])\n\nfor i in range(3):\n    print(\"%d %d %d\" % (a[i][0], a[i][1], a[i][2]))", "__author__ = 'Rajan'\n\nx=0\ny=0\nz=0\na1,b1,c1 = map(int,input().split())\nx = b1+c1\na2,b2,c2 = map(int,input().split())\ny = a2+c2\na3,b3,c3 = map(int,input().split())\nz = a3+b3\n\nsum = (x+y+z)//2\n\na1 = sum-x\nb2 = sum-y\nc3 = sum-z\n\nprint(a1,b1,c1)\nprint(a2,b2,c2)\nprint(a3,b3,c3)", "'''\ndef main():\n    from sys import stdin,stdout\ndef __starting_point():\n    main()\n'''\n#401\n'''\ndef main():\n    import sys\n    a,b=map(int,sys.stdin.readline().split())\n    if a>b:\n        if a-b==1:\n            s=''\n            for i in range(a+b):\n                if i&1:\n                    s+='1'\n                else:\n                    s+='0'\n        else:\n            s='-1'\n    elif b>a:\n        if b<=2*(a+1):\n            s=''\n            if b-a==1:\n                for i in range(a+b):\n                    if i&1:\n                        s+='0'\n                    else:\n                        s+='1'\n            else:\n                n=b-a-1\n                i=0\n                flag=0\n                while i<a+b:\n                    if flag&1:\n                        s+='0'\n                    else:\n                        if n:\n                            s+='11'\n                            n-=1\n                            i+=1\n                        else:\n                            s+='1'\n                    i+=1\n                    flag=~flag\n        else:\n            s='-1'\n    else:\n        s=''\n        for i in range(a+b):\n            if i&1:\n                s+='1'\n            else:\n                s+='0'\n    sys.stdout.write(s)\ndef __starting_point():\n    main()\n'''\n#508B\n'''\ndef main():\n    import sys\n    n=sys.stdin.readline().strip()\n    lodd=int(n[-1])\n    odd=0\n    even=0\n    s=''\n    j=0\n    for i in n:\n        if ord(i)&1:\n            odd+=1\n        else:\n            even+=1\n            feven=int(i)\n            feindex=j\n            if(feven<lodd):\n                break\n        j+=1\n    if even:\n        for i in range(len(n)):\n            if i==feindex:\n                sys.stdout.write(n[-1])\n            elif i==len(n)-1:\n                sys.stdout.write(str(feven))\n            else:\n                sys.stdout.write(n[i])\n    else:\n        sys.stdout.write('-1')\ndef __starting_point():\n    main()\n'''\n#447B\n'''\ndef main():\n    import sys\n    s=sys.stdin.readline().strip()\n    n=int(sys.stdin.readline())\n    tup=tuple(map(int,sys.stdin.readline().split()))\n    maxim=max(tup)\n    score=0\n    for i in range(len(s)):\n        score+=(i+1)*tup[ord(s[i])-97]\n    d=n*(2*len(s)+n+1)//2\n    score+=maxim*d\n    sys.stdout.write(str(score))\ndef __starting_point():\n    main()\n'''\n#507B\n'''\ndef main():\n    from sys import stdin,stdout\n    from math import ceil,sqrt\n    def sqr(a):\n        return a*a\n    r,x,y,a,b=map(int,stdin.readline().split())\n    mid=((x+a)/2,(y+b)/2)\n    #print(mid)\n    dis=sqrt(sqr(x-mid[0])+sqr(y-mid[1]))\n    #print(dis)\n    n=ceil(dis/r)\n    stdout.write(str(n)+'\\n')\ndef __starting_point():\n    main()\n'''\n#454B\n#SORT BY SHIFT\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    tup=tuple(map(int,stdin.readline().split()))\n    minim=min(tup)\n    maxim=max(tup)\n    maximindex=tup.index(maxim)\n    flag=1\n    i=0\n    pv=tup[-1]\n    while i<n:\n        if tup[i]<pv:\n            if tup[i]==minim and pv==maxim:\n                l=i+1\n                while l<max(maximindex,n):\n                    if tup[l]<tup[l-1]:\n                        flag=0\n                        break\n                    l+=1\n                break\n            else:\n                flag=0\n                break\n        pv=tup[i]\n        i+=1\n    #print(i)\n    if flag:\n        if i:\n            stdout.write(str(n-i))\n        else:\n            stdout.write('0')\n    else:\n        stdout.write('-1')\ndef __starting_point():\n    main()\n'''\n#450B\n'''\ndef main():\n    from sys import stdin,stdout\n    MOD=int(1e9)+7\n    x,y=map(int,stdin.readline().split())\n    n=(int(stdin.readline())-1)%6\n    tup=(x,y,y-x,-x,-y,x-y)\n    stdout.write(str(tup[n]%MOD))\ndef __starting_point():\n    main()\n'''\n#265B\n'''\ndef main():\n    from sys import stdin,stdout\n    n=int(stdin.readline())\n    ksum=n\n    for i in range(n):\n        x=int(stdin.readline())\n        if i:\n            if x<p:\n                ksum+=1+(p-x)\n                p=x\n            else:\n                ksum+=(1+x-p)\n                p=x\n        else:\n            ksum+=x\n            p=x\n    stdout.write(str(ksum))\ndef __starting_point():\n    main()\n'''\n#448B\n'''\ndef main():\n    from sys import stdin,stdout\n    import collections\n    s=stdin.readline().strip()\n    t=stdin.readline().strip()\n    if set(t).issubset(set(s)) and len(t)<=len(s):\n        sp=0\n        tp=0\n        sc=collections.Counter(s)\n        tc=collections.Counter(t)\n        while sp<len(s) and tp<len(t):\n            if s[sp]==t[tp]:\n                tp+=1\n                sp+=1\n            else:\n                sp+=1\n        if tp==len(t):\n            stdout.write('automaton')\n        else:\n            if len(t)==len(s):\n                if sc!=tc:\n                    stdout.write('need tree')\n                else:\n                    stdout.write('array')\n            else:\n                flag=1\n                for i in sc:\n                    if sc[i]<tc[i]:\n                        flag=0\n                if flag:\n                    stdout.write('both')\n                else:\n                    stdout.write('need tree')\n    else:\n        stdout.write('need tree')\ndef __starting_point():\n    main()\n'''\n#479C\n'''\ndef main():\n    from sys import stdin,stdout\n    import collections\n    myDic=collections.defaultdict(set)\n    for _ in range(int(stdin.readline())):\n        a,b=map(int,stdin.readline().split())\n        myDic[a].add(b)\n    index=max(myDic[min(myDic)])\n    for i in sorted(myDic):\n        if max(myDic[i])<index:\n            index=i\n        else:\n            index=max(myDic[i])\n    stdout.write(str(index))\n    \ndef __starting_point():\n    main()\n'''\n#455A\n'''\ndef main():\n    from sys import stdin,stdout\n    import collections\n    n=int(stdin.readline())\n    tup=tuple(map(int,stdin.readline().split()))\n    maxim=max(tup)\n    cnt=collections.Counter(tup)\n    f=[0,cnt[1]]\n    for i in range(2,maxim+1):\n        f.append(max(f[i-1],f[i-2]+cnt[i]*i))\n    stdout.write(str(f[maxim]))\ndef __starting_point():\n    main()\n'''\n#151A\n'''\ndef main():\n    from sys import stdin,stdout\n    n,k,l,c,d,p,nl,np=map(int,stdin.readline().split())\n    stdout.write(str(min((k*l//nl,c*d,p//np))//n))\ndef __starting_point():\n    main()\n'''\n#313B\n'''\ndef main():\n    from sys import stdin,stdout\n    s=stdin.readline().strip()\n    tup=()\n    for _ in range(int(stdin.readline())):\n        a,b=map(int,stdin.readline().split())\n        counter=0\n        for i in range(a-1,b-1):\n            if s[i]==s[i+1]:\n                counter+=1\n        tup+=(counter,)\n    for i in tup:\n        stdout.write(str(i)+'\\n')\ndef __starting_point():\n    main()\n'''\n#259B\ndef main():\n    from sys import stdin,stdout\n    x,a,b=list(map(int,stdin.readline().split()))\n    c,y,d=list(map(int,stdin.readline().split()))\n    e,f,z=list(map(int,stdin.readline().split()))\n    x=(2*b+d-c)//2\n    z=b+e-x\n    y=x+c+e-f-a\n    stdout.write(str(x)+' '+str(a)+' '+str(b)+'\\n')\n    stdout.write(str(c)+' '+str(y)+' '+str(d)+'\\n')\n    stdout.write(str(e)+' '+str(f)+' '+str(z))\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\n# codeforces little elephant and magic square\n\nimport sys\n\nrow1 = list(map(int, sys.stdin.readline().strip().split(' ')))\nrow2 = list(map(int, sys.stdin.readline().strip().split(' ')))\nrow3 = list(map(int, sys.stdin.readline().strip().split(' ')))\nrows = [row1, row2, row3]\n\ns1 = sum(row1)\ns2 = sum(row2)\ns3 = sum(row3)\n\ndef P(row, ix, num):\n\tif ix == 0:\n\t\tprint('{} {} {}'.format(num, row[1], row[2]))\n\telif ix == 1:\n\t\tprint('{} {} {}'.format(row[0], num, row[2]))\n\telse:\n\t\tprint('{} {} {}'.format(row[0], row[1], num))\t\n\nz = (s2 + s1 - s3) // 2\ny = s1 - z\nx = s3 - y\nvals = [x, y, z]\n\nfor ix, r in enumerate(rows):\n\tP(r, ix, vals[ix])\n\n'''\nT = x + y + z\ny + z = sum(Row1)\nx + z = sum(Row2)\nx + y = sum(Row3)\n\n'''\n", "\"\"\"http://codeforces.com/problemset/problem/259/B\"\"\"\n\ndef solve(s):\n    rows = list(map(sum, [s[i] for i in range(3)]))\n    r = sorted(rows)\n    d1 = r[1] - r[0]\n    d2 = r[2] - r[1]\n    m = 3 * (r[0] - d2) / 2 + 2*d2 + d1\n    m = int(m)\n    for i in range(3):\n        s[i][i] = m - rows[i]\n    return s\n\ndef __starting_point():\n    res = solve([list(map(int, input().split())) for _ in range(3)])\n    for i in range(3):\n        print(' '.join(map(str, res[i])))\n\n__starting_point()", "li1=list(map(int, (input()).split()))\nli2=list(map(int, (input()).split()))\nli3=list(map(int, (input()).split()))\nli=[li1]+[li2]+[li3]\nfor x in range(10**6):\n    li[0][0]=x\n    a=sum(li[0])\n    li[1][1]=a-li[1][0]-li[1][2]\n    li[2][2]=a-li[2][0]-li[2][1]\n    if (li[0][0]+li[1][1]+li[2][2]==a and\n        li[0][2]+li[1][1]+li[2][0]==a and\n        sum(li[0])==a and\n        sum(li[1])==a and\n        sum(li[2])==a and\n        li[0][0]+li[1][0]+li[2][0]==a and\n        li[0][1]+li[1][1]+li[2][1]==a and\n        li[0][2]+li[1][2]+li[2][2]==a):\n        print(('''%d %d %d\n%d %d %d\n%d %d %d''' % (li[0][0],li[0][1],li[0][2],li[1][0],li[1][1],li[1][2],li[2][0],li[2][1],li[2][2])))\n        break\n\n\n", "rows = [list(map(int, input().split())) for x in range(3)]\na, b, c, d = rows[0][2], rows[1][2], rows[1][0], rows[2][0]\nsums = [c + d, a + d, a + b]\ns = sum(sums) // 2\nfor x in range(3):\n    rows[x][x] = s - sums[x]\nfor x in rows:\n    print(\" \".join(map(str, x)))", "# Description of the problem can be found at http://codeforces.com/problemset/problem/259/B\n\ng = []\no_s = 0\nf_s = 0\np_s = 0\nt_s = 0\nfor i in range(3):\n    l = list(map(int, input().split()))\n    s = sum(l)\n    \n    if i == 0:\n        p_s = s\n        f_s = s\n    else:\n        t_s += o_s + p_s - s\n        o_s += p_s - s\n        p_s = s\n    g.append(l)\n\nc_s = f_s + (f_s - t_s) // 2\n\nfor l_i in g:\n    s = sum(l_i)\n    a = list()\n    for n in l_i:\n        if n == 0:\n            a.append(c_s - s)\n        else:\n            a.append(n)\n    print(\" \".join(str(x) for x in a))", "grid = []\nfor x in range(3):\n    j = input().split()\n    grid.append([int(i) for i in j])\n\ns = [sum(i) for i in grid]\n\ngrid[0][0] = max(s)-s[0]+1\ngrid[1][1] = max(s)-s[1]+1\ngrid[2][2] = max(s)-s[2]+1\n\ndiag = grid[0][0]+grid[1][1]+grid[2][2]\ntr = sum(grid[0])\n\n\nwhile (tr>diag):\n    grid[0][0]+=1\n    grid[1][1]+=1\n    grid[2][2]+=1\n\n    diag = grid[0][0]+grid[1][1]+grid[2][2]\n    tr = sum(grid[0])\n    \nfor i in grid:\n    print(\" \".join([str(x) for x in i]))\n", "def main():\n    def is_valid(grid):\n        if sum(grid[0]) != sum(grid[1]) or sum(grid[1]) != sum(grid[2]):\n            return False\n        if grid[0][0] + grid[1][1] + grid[2][2] != grid[0][2] + grid[1][1] + grid[2][0]:\n            return False\n        return True\n\n    grid = []\n    for i in range(3):\n        grid.append(list(map(int, input().split(' '))))\n    m = [sum(grid[i]) for i in range(3)]\n    for i in range(int(1e6)):\n        grid[0][0] = i - sum(grid[0])\n        grid[1][1] = i - sum(grid[1])\n        grid[2][2] = i - sum(grid[2])\n\n        if is_valid(grid) and grid[0][0] != 0:\n            break\n        grid[0][0] = 0\n        grid[1][1] = 0\n        grid[2][2] = 0\n\n    for i in range(3):\n        print(' '.join(list(map(str,grid[i]))))\nmain()\n", "def main():\n    def is_valid(grid):\n        if sum(grid[0]) != sum(grid[1]) or sum(grid[1]) != sum(grid[2]):\n            return False\n        if grid[0][0] + grid[1][1] + grid[2][2] != grid[0][2] + grid[1][1] + grid[2][0]:\n            return False\n        return True\n\n    grid = []\n    for i in range(3):\n        grid.append(list(map(int, input().split(' '))))\n\n    s = sum(grid[0]) + sum(grid[1]) + sum(grid[2])\n    grid[0][0] = s//2 - sum(grid[0])\n    grid[1][1] = s//2 - sum(grid[1])\n    grid[2][2] = s//2 - sum(grid[2])\n\n    for i in range(3):\n        print(' '.join(list(map(str,grid[i]))))\nmain()\n"]