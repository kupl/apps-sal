["#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\nre = 0\nfor i in range(2,N):\n\n    t = N // i -1\n    re += t * i\n\nprint(re *4)\n\n\n\n\n\n\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\nans = 0\nfor i in range(2, n):\n    for j in range(2 * i, n + 1, i):\n        ans += j // i\nprint(ans * 4)", "import sys\nn=int(input())\n\nif n<=3:\n    print(0)\n    return\n\nscore=0\nimport math\ndef score(x):\n    ANS=0\n    xr=math.ceil(math.sqrt(x))\n\n    LIST=[]\n    for i in range(1,xr+3):\n        if x%i==0:\n            LIST.append(i)\n            LIST.append(x//i)\n\n    LIST=sorted(list(set(LIST)))\n\n    for l in LIST[1:-1]:\n        ANS+=x//l\n\n    return ANS\n\nANS=0\nfor i in range(4,n+1):\n    ANS+=score(i)\n\nprint(ANS*4)\n    \n\n", "i = input()\ni = int(i)\nv = 0\ng = 2\ns = 4\nwhile g <= i:\n\twhile s <= i:\n\t\tv = v + int(s / g * 4)\n\t\ts = s + g\n\tg = g + 1\n\ts = g * 2\nprint(str(v))", "n = int(input())\nr = 0\ni = 2\nwhile i*2 <=n:\n\ta = int(n/i)\n\tr += (a+2)*(a-2+1)/2\n\ti += 1\nprint(int(4*r))\n", "n = int(input())\nsum = 0\n\nfor i in range(2, n + 1):  \n  j = 2\n  while(j * i <= n):\n    sum += i\n    j += 1\nprint(4 * sum)", "from math import sqrt, floor, ceil\nn = int(input())\n\nran = list(range(2, 1+n//2))\nxx = [ d*(n//d-1)     for d in ran]\nprint(sum(xx)*4)\n", "n = int(input())\nans = 0\nfor i in range(2, n + 1):\n    for j in range(i + i, n + 1, i):\n        ans += 4 * j // i\nprint(ans)\n", "n = int(input())\nrang = list(range(2,n//2+1))\na = [i*(n//i-1) for i in rang]\nprint(sum(a)*4)\n", "n = int(input())\nprint(4 * sum(x*((n-x)//x) for x in range(2, n)))\n\n", "# -*- coding:utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 11/19/18\n\n\"\"\"\n\nN = int(input())\n\nans = 0\nfor i in range(2, N+1):\n    ans += 4 * i * (N//i-1)\nprint(ans)", "n=int(input())\nans=0\nif(n<4):\n\tprint('0')\n\treturn\nfor i in range(2,(n//2)+1):\n\tk=n//i;\n\tans+=(k*(k+1))//2-1\nprint(4*ans)", "n=int(input())\nprint(4*sum(i*(n//i-1) for i in range(2,n)))", "from sys import *\nn = int(stdin.readline())\nans = 0\nfor i in range(2,n+1):\n    for j in range(i*2,n+1,i):\n        ans += 4 * (j // i)\nprint(ans)\n", "n = int(input())\n\nans = 0\nfor i in range(2,n//2+1):\n    x = n // i \n    ans +=  ( x * (x+1) // 2 - 1 ) * 4\nprint(ans)    \n", "n=int(input())\nans=0\nfor i in range(2,n+1):\n\tfor j in range(2*i,n+1,i):\n\t\tans+=(4*(j//i))\nprint(ans)", "n = int(input())\nres = 0\nfor i in range(n-2):\n    if int(n/(i+2)-1):\n        res += 4*(i+2)*int(n/(i+2)-1)\nprint(res)\n", "n=int(input())\nans=0\nif(n==2 or n==3):\n\tprint(0)\nelse:\n\ti=2\n\twhile(i<=n):\n\t\tj=2\n\t\tnum=n//i\n\t\tans+=(2*num*(num+1))\n\t\tans-=4\n\t\ti+=1\n\t\t#print(2*j*(j+1))\n\tprint(ans)\n", "n=int(input())\nans=0\nif(n==2 or n==3):\n\tprint(0)\nelse:\n\ti=2\n\twhile(i<=n):\n\t\tj=2\n\t\twhile(j*i<=n):\n\t\t\tans+=(j*4)\n\t\t\tj+=1\n\t\ti+=1\n\tprint(ans)\n", "class IntegersFun():\n    def __init__(self, n):\n        self.n = n\n\n    def get_value(self):\n        sm = 0\n        for i in range(2,self.n+1):\n            for j in range(2*i, self.n+1, i):\n                sm += 4*j/i\n        return int(sm)\n\nn = int(input())\nprint(IntegersFun(n).get_value())", "# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\n# TAIWAN NUMBER ONE!!!!!!!!!!!!!!!!!!!\nfrom sys import stdin, stdout\nimport collections\n\nN = int(input())\n#s = input()\n#N,Q = [int(x) for x in stdin.readline().split()]\n\nres = 0\nfor m in range(2,N+1):\n    d = N//m\n    d -= 1\n    res += d*m\n    \n    if d==0:\n        break\n    \nprint(4*res)", "from sys import stdin\nfrom collections import deque\nmod = 10**9 + 7\nimport sys\nsys.setrecursionlimit(10**5)\nfrom queue import PriorityQueue\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport heapq\n# input = lambda: sys.stdin.readline().rstrip()\ninput = lambda : sys.stdin.readline().rstrip()\nfrom sys import stdin, stdout\nfrom heapq import heapify, heappush, heappop\n\n\nn = int(input())\n\nans = 0\n\nfor i in range(2,n+1):\n    ans+=i*(n//i - 1)\n\nprint(ans*4)\n\n\n", "n = int(input())\nprint(sum([i * (int(n / i) - 1) for i in range(2, n + 1)]) * 4)\n\n# run : python wtf.py\n", "n = int(input())\n\nans = 0\nfor i in range(2, n + 1):\n    cur = n // i\n    if cur == 1:\n        continue\n    summ = (cur + 2) * (cur - 1) // 2\n    ans += summ\n\nprint(ans * 4)\n", "n = int(input())\nans = 0\nfor i in range(2, n + 1):\n    for j in range(i + i, n + 1, i):\n        ans += 4 * j // i\nprint(ans)\n"]