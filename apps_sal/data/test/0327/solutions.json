["R=lambda:list(map(int,input().split()))\nn,k=R()\nif k==1:print(n)\nelse:\n    i=0\n    while (1<<i)<=n:i+=1\n    print((1<<i)-1)\n", "n, k = map(int, input().split())\nif k == 1:\n    print(n)\nelse:\n    j = 1\n    while j - 1 < n:\n        j *= 2\n    print(j - 1)", "from sys import stdin, stdout\n\nn,k = list(map(int, stdin.readline().rstrip().split()))\n\nif k==1:\n    print(n)\nelse:\n    x=1\n    while 2*x<=n:\n        x*=2\n    print(2*x-1)\n\n", "N, K = list(map(int, input().split()))\n\nif K == 1:\n    print(N)\nelse:\n    cnt = 0\n    while N > 0:\n        N >>= 1\n        cnt += 1\n    print((1<<cnt)-1)\n", "n, k = [int(v) for v in input().split()]\n\nif k == 1:\n    print(n)\nelse:\n    nn = n\n    p = 0\n    while nn:\n        nn //= 2\n        p += 1\n    print(2**p - 1)\n", "n, k = list(map(int, input().split()))\n\nif k == 1:\n\tprint(n)\nelse:\n\tbin_n = bin(n)[2:]\n\tmax_deg = len(bin_n)\n\tprint((1 << (max_deg)) - 1)\n", "n, k= list(map(int,input().split()))\n\nr = 0\nnn = n\nwhile nn:\n    nn >>= 1\n    r += 1\n\nprint((1<<r)-1 if k>1 else n)\n", "n, k = list(map(int, input().split()))\n\nif k == 1:\n    print(n)\nelse:\n    print(int('1' * len(bin(n)[2:]), 2))\n", "n,k = list(map(int, input().split(' ')))\nx = 1\nwhile x < n:\n    x *= 2\n\nif x > n:\n    x //= 2\n\nif k > 1:\n    print(x + x - 1)\nif k == 1:\n    print(n)\n", "n, k = map(int, input().split())\nif k == 1:\n    print(n)\n    return\nans = 1\nwhile 2**ans <= n:\n    ans += 1\nans = 2**ans - 1\nprint(ans)", "def problemB():\n    n, k = list(map(int, input().strip().split()))\n    if k == 1:\n        print(n)\n    else:\n        bas = 1\n        while n > 0:\n            n //=2\n            bas *=2\n        print(bas-1)\n\n\ndef __starting_point():\n    problemB()\n\n__starting_point()", "def read():\n    return list(map(int,input().split()))\nn,k=read()\nif k==1:\n    print(n)\nelse:\n    ans=0\n    for i in range(len(bin(n)[2:])):\n        ans+=2**i\n    print(ans)\n        \n        \n", "import sys\nsys.setrecursionlimit(1000000)\nread = sys.stdin.readline\n\nN, K = map(int, read().split())\nif K == 1:\n    print(N)\n    return\nallOne = 1\nwhile((allOne<<1) <= N):\n    allOne <<= 1\nallOne<<=1\nallOne -= 1\nprint(allOne)", "import sys\nimport itertools\nimport functools\n\ndef brute_exact(n, k):\n    ar = list(range(1, n + 1))\n    combinations = list(itertools.combinations(ar, k))\n    if not combinations:\n        return 0\n    \n    xor_conv = lambda ar: functools.reduce(lambda x,y : x^y, ar)\n    return max([xor_conv(combination) for combination in combinations]) \n\ndef brute_atleast(n, k):\n    return max([brute_exact(n, i) for i in range(1, k + 1)])\n\ndef solve(n, k):\n    if k == 1:\n        return n\n    \n    return 2**(n.bit_length()) - 1\n\ndef main():\n    n, k = list(map(int, input().split()))\n    print(solve(n, k))\n\t\ndef __starting_point():\n    main() \n    \n\n__starting_point()", "n, k = map(int, input().split())\n\nif k == 1:\n\tprint(n)\nelse:\n\tpr = 1;\n\twhile (pr <= n):\n\t\tpr *= 2\n\tprint(pr - 1)", "n,k = map(int,input().split(\" \"))\nif k == 1:\n\tprint(n)\n\nelse:\n\tnum = 1\n\twhile num <= n:\n\t\tnum <<= 1\n\n\tprint(num-1)", "n, k = list(map(int, input().split()))\nif k == 1:\n    print(n)\nelse:\n    ans = bin(n)[2:]\n    ans = ans.replace(\"0\", \"1\")\n    ans = int(ans, 2)\n    print(ans)\n", "n,k=map(int,input().split())\nif k==1:\n  print(n)\nelse:\n  bits=len(bin(n)[2:])\n  print(2**bits-1)", "n, k = list(map(int, input().split()))\ncnt = 0\nif k == 1:\n    print(n)\n    return\nwhile(n):\n    n //= 2\n    cnt += 1\nans = 0\nwhile(cnt):\n    ans += 2 ** (cnt - 1)\n    cnt -= 1\nprint(ans)\n", "n,k=[int(i)for i in input().split()]\n\nif k==1:\n\tprint(n)\nelse:\n\tans=1\n\twhile ans<=n:\n\t\tans*=2\n\tans-=1\n\tprint(ans)\n", "n, k = list(map(int, input().split()))\nif k == 1:\n    print(n)\nelse:\n    i = 0\n    while 2 ** (i + 1) <= n:\n        i += 1\n    ans = 2 ** (i + 1) - 1\n    print(ans)\n", "n, k = map(int, input().split())\n\nif k == 1:\n    print(n)\nelse:\n    print(int(bin(n)[2:].replace('0', '1'), 2))", "n, k = list(map(int, input().split()))\n\nif k == 1:\n    ans = n\nelse:\n    ans = 1\n    while ans <= n:\n        ans *= 2\n    ans -= 1\nprint(ans)\n", "x, y = [int(x) for x in input().split()]  \nif y==1:\n    print(x)\nelse:\n    nb=x.bit_length()\n    print((2**nb)-1)", "n,k=[int(x) for x in input().split()]\nif k==1:\n   print(n)\n   return\na=1\ns=0\nwhile a<=n:\n   s+=a\n   a*=2\nprint(s)\n"]