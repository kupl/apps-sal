["#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\ndef f(first, s):\n    second = 'r' if first == 'b' else 'b'\n    alt = [first, second]\n\n    error = [0, 0]\n    for i,ch in enumerate(s):\n        shouldbe = alt[i % 2]\n        if ch != shouldbe:\n            error[i % 2] += 1\n\n    return max(error)\n\ndef main():\n    n = int(input())\n    s = input()\n    print(min(f('r', s), f('b', s)))\n\nmain()    \n", "def fbf():\n    bbad = 0\n    rbad = 0\n    for i in range(n):\n        if (i % 2 == 0 and a[i] == 'r'):\n            rbad += 1\n        if (i % 2 == 1 and a[i] == 'b'):\n            bbad += 1\n    return max(bbad, rbad)\ndef frf():\n    bbad = 0\n    rbad = 0\n    for i in range(n):\n        if (i % 2 == 1 and a[i] == 'r'):\n            rbad += 1\n        if (i % 2 == 0 and a[i] == 'b'):\n            bbad += 1\n    return max(bbad, rbad)\nn = int(input())\na = input()\nprint(min(fbf(), frf()))", "N = int(input())\nS = input()\n\n# first: r\nnot_r = 0\nnot_b = 0\nfor i, s in enumerate(S):\n    if i % 2 == 0:\n        if s != \"r\":\n            not_r += 1\n    else:\n        if s != \"b\":\n            not_b += 1\nans = max(not_r, not_b)\n\n# first: b\nnot_r = 0\nnot_b = 0\nfor i, s in enumerate(S):\n    if i % 2 == 0:\n        if s != \"b\":\n            not_b += 1\n    else:\n        if s != \"r\":\n            not_r += 1\nans = min(ans, max(not_r, not_b))\nprint(ans)\n", "n=int(input())\nm=input()\nrb={'r':0,'b':0}\nbr={'r':0,'b':0}\nfor i in range(n):\n\tif i%2:\n\t\tif m[i]=='b':\n\t\t\tbr['b']+=1\n\t\telse:\n\t\t\trb['r']+=1\n\telse:\n\t\tif m[i]=='r':\n\t\t\tbr['r']+=1\n\t\telse:\n\t\t\trb['b']+=1\nrbs=min(rb['b'],rb['r'])+abs(rb['b']-rb['r'])\nbrs=min(br['b'],br['r'])+abs(br['b']-br['r'])\nprint(min(rbs,brs))\n", "n = int(input())\ns = input()\n\ncwred = 0\ncwblack = 0\n\nres = 0\n\n#red first\nfor i in range(n):\n    if i % 2 == 0 and s[i] == 'b':\n        cwblack += 1\n    if i % 2 == 1 and s[i] == 'r':\n        cwred += 1\n\nres = min(cwblack, cwred) + abs(cwblack - cwred)\n\ncwred = 0\ncwblack = 0\n\n#black first\nfor i in range(n):\n    if i % 2 == 1 and s[i] == 'b':\n        cwblack += 1\n    if i % 2 == 0 and s[i] == 'r':\n        cwred += 1\n\nif res > min(cwblack, cwred) + abs(cwblack - cwred):\n    res = min(cwblack, cwred) + abs(cwblack - cwred)\n\nprint(res)\n\n\n\n", "# You lost the game.\n\nn = int(input())\ns = str(input())\n\nr = b = 0\nm = 0\nm2 = 0\nfor i in range(n):\n    if s[i] == \"r\":\n        r += 1\n    else:\n        b += 1\n\nif n % 2:\n    if r > b:\n        for i in range(n):\n            if s[i] == \"b\" and i % 2 == 0:\n                m += 1\n        for i in range(n):\n            if s[i] == \"b\" and i % 2:\n                m2 += 1\n        print(min(m+(n-1)//2-b,m2+(n+1)//2-b))\n\n    else:\n        for i in range(n):\n            if s[i] == \"r\" and i % 2 == 0:\n                m += 1\n        for i in range(n):\n            if s[i] == \"r\" and i % 2:\n                m2 += 1\n        print(min(m+(n-1)//2-r,m2+(n+1)//2-r))\n\nelse:\n    if r > b:\n        for i in range(n):\n            if s[i] == \"b\" and i % 2 == 0:\n                m += 1\n        for i in range(n):\n            if s[i] == \"b\" and i % 2:\n                m2 += 1\n        print(min(m,m2)+n//2-b)\n    else:\n        for i in range(n):\n            if s[i] == \"r\" and i % 2 == 0:\n                m += 1\n        for i in range(n):\n            if s[i] == \"r\" and i % 2:\n                m2 += 1\n        print(min(m,m2)+n//2-r)  \n", "n = int(input())\nw = input().strip()\n\nred_1 = 0\nred_2 = 0\nbck_1 = 0\nbck_2 = 0\n\nfor i in range(len(w)):\n    if (w[i] == 'r'):\n        if i % 2:\n            red_2 += 1\n        else:\n            red_1 += 1\n    if (w[i] == 'b'):\n        if i % 2:\n            bck_2 += 1\n        else:\n            bck_1 += 1\nprint(min(max(red_2, bck_1), max(bck_2, red_1)))", "n = int(input().strip())\na = list([{'r':0, 'b':1}[x] for x in input()])\ncb = 0\ncr = 0\nccb = 0\nccr = 0\nfor i,c in enumerate(a):\n    cb += (i&1)&(c^0)\n    cr += (~(i&1))&(c^1)\n    ccb += (i&1)&(c^1)\n    ccr += (~(i&1))&(c^0)\nans1 = cb+cr - min(cb,cr)\nans2 = ccb+ccr-min(ccb,ccr)\nprint(min(ans1,ans2))\n", "n = int(input())\ns = input()\n\nr,b = 0,0\nfor x in s:\n    if(x=='r'):\n        r += 1\n    else:\n        b += 1\n\ntrr = [x for x in s]\nif(n):\n    krr = trr[:]\n    c = 0\n\n    i = 0\n    for p in range(0,n,2):\n        if(krr[p]=='b'):\n            i +=1\n    j = 0\n    for p in range(1,n,2):\n        if(krr[p]=='r'):\n            j += 1\n\n    krr = trr[:]\n    lrr = [max(i,j)]\n    c = 0\n    \n    i = 0\n    for p in range(0,n,2):\n        if(krr[p]=='r'):\n            i +=1\n    j = 0\n    for p in range(1,n,2):\n        if(krr[p]=='b'):\n            j += 1\n\n\n    lrr.append(max(i,j))\n    print(min(lrr))", "from math import ceil\n\nn=int(input())\ncol=list(input())\n\nnr=col.count('r')\nnb=col.count('b')\n\ndif=int(abs(nr-nb)/2)\n\nc1=0\nc2=0\n\nfor i in range(len(col)):\n\tif i%2==0:\n\t\tif col[i]=='b':\n\t\t\tc1+=1\n\t\telse:\n\t\t\tc2+=1\n\telse:\n\t\tif col[i]=='r':\n\t\t\tc1+=1\n\t\telse:\n\t\t\tc2+=1\n\nc=min(c1,c2)\n\nprint(int(ceil((c-dif)/2))+dif)", "n=int(input())\ns=input()\nab=0\nar=0\nab1=0\nar1=0\nif s[0]=='b':\n\tfor i in range(n):\n\t\tif (i+1)%2==1:\n\t\t\tif s[i]!='b':\n\t\t\t\tab+=1\n\t\telse:\n\t\t\tif s[i]!='r':\n\t\t\t\tar+=1\n\tfor i in range(n):\n\t\tif (i+1)%2==1:\n\t\t\tif s[i]!='r':\n\t\t\t\tar1+=1\n\t\telse:\n\t\t\tif s[i]!='b':\n\t\t\t\tab1+=1\nelse:\n\tfor i in range(n):\n\t\tif (i+1)%2==1:\n\t\t\tif s[i]!='r':\n\t\t\t\tab+=1\n\t\telse:\t\n\t\t\tif s[i]!='b':\n\t\t\t\tar+=1\t\n\tfor i in range(n):\n\t\tif (i+1)%2==1:\n\t\t\tif s[i]!='b':\n\t\t\t\tab1+=1\n\t\telse:\n\t\t\tif s[i]!='r':\n\t\t\t\tar1+=1\nif max(ab1,ar1)>max(ab,ar):\n\tprint(max(ab,ar))\nelse:\n\tprint(max(ab1,ar1))", "n = int(input())\nstring = input()\nm11, m12, m21, m22 = 0, 0, 0, 0\nfor i in range(n):\n    if i % 2 == 0 and string[i] == \"b\":\n        m21 += 1\n    elif i % 2 != 0 and string[i] == \"r\":\n        m22 += 1\n    elif i % 2 == 0:\n        m11 += 1\n    else:\n        m12 += 1        \nmin1 = min(m21, m22)\nm21, m22 = m21 - min1, m22 - min1\nr1 = max(m21, m22) + min1\nmin2 = min(m11, m12)\nm11, m12 = m11 - min2, m12 - min2\nr2 = max(m11, m12) + min2\nprint(min(r1, r2))\n        \n\n        \n    \n\n", "import math\n\nn = int(input())\ninsects = input()\nresr1 = 0\nresb1 = 0\nfor i in range(n):\n    if i % 2 == 0 and insects[i] == \"r\":\n        resr1 += 1\n    elif i % 2 == 1 and insects[i] == \"b\":\n        resb1 += 1\nres1 = min(resr1, resb1) + abs((resr1 - resb1))\nresr2 = 0\nresb2 = 0\nfor i in range(n):\n    if i % 2 == 0 and insects[i] == \"b\":\n        resb2 += 1\n    elif i % 2 == 1 and insects[i] == \"r\":\n        resr2 += 1\nres2 = min(resr2, resb2) + abs((resr2 - resb2))\nprint(min(res1, res2))", "def B():\n    n = int(input())\n    lst = list(input())\n\n    for i in range(len(lst)):\n        if lst[i] == \"r\":\n            lst[i] = 1\n        else:\n            lst[i] = -1\n\n    rCo = 0\n    bCo = 0\n    co = 0\n    cur = lst[0]\n\n    if n == 1:\n        print(\"0\")\n        return 0\n\n    for i in range(len(lst)):\n        if lst[i] == cur:\n            cur *= -1\n            continue\n        else:\n            if lst[i] == 1:\n                if bCo != 0:\n                    bCo -= 1\n                else:\n                    rCo += 1\n                    co += 1\n            else:\n                if rCo != 0:\n                    rCo -= 1\n                else:\n                    bCo += 1\n                    co += 1\n            cur *= -1\n\n    first = co\n\n    rCo = 0\n    bCo = 0\n    co = 0\n    cur = lst[0] * -1\n    for i in range(len(lst)):\n        if lst[i] == cur:\n            cur *= -1\n            continue\n        else:\n            if lst[i] == 1:\n                if bCo != 0:\n                    bCo -= 1\n                else:\n                    rCo += 1\n                    co += 1\n            else:\n                if rCo != 0:\n                    rCo -= 1\n                else:\n                    bCo += 1\n                    co += 1\n            cur *= -1\n\n    print(min(co, first))\n    return 0\n\ndef __starting_point():\n    B()\n__starting_point()", "from sys import stdin, stdout\nn = int(stdin.readline())\ncolours = stdin.readline().strip()\ncntf, cnts = 0, 0\n\nlabel = colours[0]\n\nfor i in range(n):\n    if i % 2 and label == colours[i]:\n        cntf += 1\n    elif not i % 2 and label != colours[i]:\n        cnts += 1\nans = max(cntf, cnts)\n\ncntf, cnts = 0, 0\nfor i in range(n):\n    if i % 2 and label != colours[i]:\n        cntf += 1\n    elif not i % 2 and label == colours[i]:\n        cnts += 1\nans = min(ans, max(cntf, cnts))\n\n\nstdout.write(str(ans))   ", "n = int(input())\ns1 = input()\ns2a = ''\nda = 0\nar = 0\nab = 0\ns2b = ''\ndb = 0\nbr = 0\nbb = 0\npairs = int(n // 2)\ncarry = n % 2\nfor _ in range(pairs):\n    s2a += 'rb'\n    s2b += 'br'\nif carry:\n    s2a += 'r'\n    s2b += 'b'\n\nif s1 == s2a or s1 == s2b:\n    print(0)\n    return\n\nfor i in range(n):\n    if not s1[i] == s2a[i]:\n        da += 1\n        if s1[i] == 'r':\n            ar += 1\n        else:\n            ab += 1\n    if not s1[i] == s2b[i]:\n        db += 1\n        if s1[i] == 'r':\n            br += 1\n        else:\n            bb += 1\n\nda -= min(ar, ab)\ndb -= min(br, bb)\nprint(min(da, db))\n", "n = int(input())\ns = input()\n\nl1 = \"br\" * (n // 2) + \"b\" * (n % 2)\nl2 = \"rb\" * (n // 2) + \"r\" * (n % 2)\n\nb1 = [0] * ((n // 2) +  (n % 2))\nb2 = [0] * (n // 2) \nr1 = [0] * (n // 2) \nr2 = [0] * ((n // 2) +  (n % 2))\n\ncounter1 = 0\ncounter2 = 0\n\nm1 = 0\nm2 = 0\nk1 = 0\nk2 = 0\n\nfor i in range(n):\n    if l1[i] == s[i]:\n        if i % 2 == 0:\n            b1[m1] = 1\n            m1 += 1\n        else:\n            r1[k1] = 1\n            k1 += 1            \n    if l2[i] == s[i]:\n        if i % 2 == 0:\n            r2[m2] = 1\n            m2 += 1\n        else:\n            b2[k2] = 1\n            k2 += 1  \n\n\na1 = b1.count(0)\na2 = r1.count(0)\n\ncounter1 = abs(a2 - a1) + min(a1,a2)\n\na1 = b2.count(0)\na2 = r2.count(0)\n\ncounter2 = abs(a2 - a1) + min(a1,a2)\n\nprint(min(counter1, counter2))\n\n\n\n", "from math import *\nn = int(input())\nA = input()\nr = 0\nb = 0\nif n % 2 == 0:\n    a1 = 'br' * (n//2)\n    a2 = 'rb' * (n//2)\nelse:\n    a1 = 'b' + 'rb' * ((n-1) // 2)\n    a2 = 'r' + 'br' * ((n-1) // 2)\nans1 = 0\nans2 = 0\nfor j in range(n):\n    if A[j] == 'b':\n        b+=1\n    else:\n        r +=1\n    \n    if A[j] != a1[j]:\n        ans1 +=1\n    if A[j] != a2[j]:\n        ans2 +=1\n    \n\nif ans1 == 0 or ans2 == 0:\n    \n    print(0)\nelse:\n    r1 = n//2\n    b1 = n% 2 + n//2\n    b2 = n//2\n    r2 = n% 2 + n//2     \n    min1 = 0\n    min2 = 0\n    if r1 >r:\n        min1 += (r1 - r)\n    if b1 > b:\n        min1 += (b1 -b)\n    if r2 > r:\n        min2+= (r2 -r)\n    if b2 > b:\n        min2 += (b2-b)    \n    print(min(ceil(min1 + (ans1 - min1) // 2), ceil(min2 + (ans2 - min2) // 2)))\n    \n", "n = int(input())\ns = input()\nsrr = 0\nsrb = 0\nsbr = 0\nsbb = 0\nansr = 0\nansb = 0\nans = 0\n\nfor i in range(n):\n    if s[i] == 'r':\n        if (i + 1) % 2 == 0:\n            srr += 1\n        else:\n            sbr += 1\n\n    else:\n        if (i + 1) % 2 == 0:\n            sbb += 1\n        else:\n            srb += 1   \n            \nif (srr + srb) < (sbr + sbb):\n    ansr, ansb = srr, srb\nelse:\n    ansr, ansb = sbr, sbb\n\nx = min(ansr, ansb)\nans = x + (max(ansr, ansb) - x)   \nprint(ans)", "n=int(input())\nch=input()\nr1,r2,b1,b2=0,0,0,0\nfor i in range(n):\n    if (i%2==0):\n        if (ch[i]!='r'):\n            r1+=1\n        if (ch[i]!='b'):\n            b2+=1\n\n    if (i%2!=0):\n        if (ch[i]=='r'):\n            b1+=1\n        if (ch[i]=='b') :\n            r2+=1\n\nprint(min(max(r1,b1),max(r2,b2)))\n", "def main():\n    n = int(input())\n\n    s = input()\n\n    rodd = 0\n    bodd = 0\n    reven = 0\n    beven = 0\n    \n    for (i,c) in enumerate(s):\n        if i % 2 == 1:\n            if c == 'r':\n                rodd += 1\n            else:\n                bodd += 1\n        else:\n            if c == 'r':\n                reven += 1\n            else:\n                beven += 1\n\n    print((min(abs(bodd-reven) + min(bodd, reven),\n              abs(rodd-beven) + min(rodd, beven))))\nmain()\n", "n = int(input())\ns = input()\n\nif n % 2 == 0:\n    a = 'rb' * (n//2)\n    b = 'br' * (n//2)\nelse:\n    a = 'rb' * ((n-1)//2) + 'r'\n    b = 'br' * ((n-1)//2) + 'b'\nrr = 0\nbb = 0\nres = []\nfor i in range(n):\n    if a[i] == 'r' and s[i] == 'b':\n        rr += 1\n        continue\n    elif a[i] == 'b' and s[i] == 'r':\n        bb += 1\n        continue\n\nres.append(max(rr,bb))\nrr = 0\nbb = 0\nfor i in range(n):\n    if b[i] == 'r' and s[i] == 'b':\n        rr += 1\n        continue\n    elif b[i] == 'b' and s[i] == 'r':\n        bb += 1\n        continue\n\nres.append(max(rr,bb))\n\nprint(min(res))", "n = int(input())\nroaches = input()\n\nb_roaches_total = 0\nb_roaches_even = 0\nr_roaches_total = 0\nr_roaches_even = 0\n\nfor i in range(len(roaches)):\n    if roaches[i] == 'b':\n        b_roaches_total += 1\n        if i % 2 == 0:\n            b_roaches_even += 1\n    else:\n        r_roaches_total += 1\n        if i % 2 == 0:\n            r_roaches_even += 1\n\nb_roaches_odd = b_roaches_total - b_roaches_even\nr_roaches_odd = r_roaches_total - r_roaches_even\n\nif b_roaches_odd >= b_roaches_even and r_roaches_even >= r_roaches_odd:\n    print(max(b_roaches_even, r_roaches_odd))\nelse: \n    print(max(b_roaches_odd, r_roaches_even))", "a = input()\n\n\ndef a0o1(character):\n\tif character == \"r\":\n\t\treturn 0\n\tif character == \"b\":\n\t\treturn 1\n\ndef isPar(par):\n\treturn par == 0\n\n\n\nb = list(map(a0o1, input()))\n\npar = 0\n\n#a1 = 0101010101010101\n#a2 = 1010101010101010\na1_miss_0 = 0\na1_miss_1 = 0\na2_miss_0 = 0\na2_miss_1 = 0\n\nfor x in b:\n\t\n\ta1_miss_0 += (x== 0 and  isPar(par))\n\ta1_miss_1 += (x== 1 and not isPar(par))\n\ta2_miss_0 += (x== 0 and not isPar(par))\n\ta2_miss_1 += (x== 1 and  isPar(par))\n\n\n\tpar = (par+1)%2\n\t\n\na1_changes = abs(a1_miss_0 - a1_miss_1)\na1_swaps = max(a1_miss_0, a1_miss_1) - a1_changes\na_1 = a1_changes + a1_swaps\n\n\na2_changes = abs(a2_miss_0 - a2_miss_1)\na2_swaps = max(a2_miss_0, a2_miss_1) - a2_changes\na_2 = a2_changes + a2_swaps\n\nprint(min(a_1,a_2))", "n=input()\ntext=input()\nswitcher=-1\n#b=1\n#r=-1\nlastbad=0\ntries=10000000\ntriecount=0\ntriecount2=0\ncounter=-1\nabad1=0\nabad2=0\nfor a in text:\n\tcounter+=1\n\tswitcher*=-1\n\t\n\tif a=='r' and switcher==-1:\n\t\tabad1+=1\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\n\tif a=='b' and switcher==1:\n\t\tabad2+=1\n\nif abad1>=abad2:\n\ttriecount=abad1\nelse:\n\ttriecount=abad2\n\n\nif triecount<tries:\n\ttries==triecount\ntc1=triecount\n\n\nswitcher=-1\nabad1=0\nabad2=0\nfor a in text:\n\tcounter+=1\n\tswitcher*=-1\n\t\n\tif a=='b' and switcher==-1:\n\t\tabad1+=1\n\t\t\t\n\t\t\n\t\t\t\n\t\t\t\n\tif a=='r' and switcher==1:\n\t\tabad2+=1\n\nif abad1>=abad2:\n\ttriecount2=abad1\nelse:\n\ttriecount2=abad2\n\n#print('tc1-'+str(triecount)+'tc2-'+str(triecount2))\ntc1=triecount\ntc2=triecount2\n\n\nif tc1<=tc2:\n\tprint(tc1)\nelse:\n\tprint(tc2)\n"]