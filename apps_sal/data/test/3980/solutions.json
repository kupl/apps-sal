["n = int(input())\np = [i for i in range(n + 1)]\n\nk = 1\nwhile(2 * k <= n):\n  k *= 2\nm = n + 1\nwhile m > 0:\n  while k >= m:\n    k //= 2\n  for i in range(m - k):\n    if k - i - 1 >= 0:\n      p[k + i], p[k - i - 1] = p[k - i - 1], p[k + i]\n  m = k - i - 1\n\nprint(n * (n + 1))\nprint(' '.join(map(str, p)))", "n = int(input()) + 1\nprint(n * n - n)\nt = []\nk = 1 << 20\n\nwhile n:\n    while k >> 1 >= n: k >>= 1\n    t = [(k - 1) ^ i for i in range(k - n, n)] + t\n    n = k - n\n\nprint(' '.join(map(str, t)))", "s = n = int(input()) + 1\nt, r = [], list(range(n))[::-1]\nk = 2 ** 20\n\nwhile s:\n    while k >= 2 * s: k //= 2\n    t = r[n - s: n + s - k] + t\n    s = k - s\n\nprint(n * n - n)\nprint(' '.join(map(str, t)))", "s = n = int(input()) + 1\nt, r = [], list(range(n))[::-1]\nk = 2 ** 20\n\nwhile s:\n    while k >= 2 * s: k //= 2\n    t = r[n - s: n + s - k] + t\n    s = k - s\n\nprint(n*(n-1))\nprint(*t)", "import math \ndef ones(n): \n    number_of_bits = (int)(math.floor(math.log(n) /\n                                math.log(2))) + 1;   \n    return [((1 << number_of_bits) - 1) ^ n,(1 << number_of_bits) - 1]; \nn = int(input())\nhas=[0]*(n+1)\nans=[0]*(n+1)\nfin=0\nfor i in range(n,0,-1):\n    if has[i]==0:\n        com,fi = ones(i)\n#        print(com,fi,i)\n        has[com]=1\n        fin+=2*fi\n        ans[com]=i\n        ans[i]=com\nprint(fin)\nprint(*ans)\n\n\n"]