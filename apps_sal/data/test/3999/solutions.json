["from collections import defaultdict\nN, = list(map(int, input().split()))\n\ndef normal(xs):\n    return tuple(min((xs[j:] + xs[:j] for j in range(1, 5))))\n\ndd = defaultdict(int)\ncc = dict()\nnorm = dict()\nss = []\nfor _ in range(N):\n    xs = list(map(int, input().split()))\n    cnd = [tuple(xs[j:] + xs[:j]) for j in range(1, 5)]\n    x = min(cnd)\n    for item in cnd:\n        norm[item] = x\n    dd[x] += 1\n    cc[x] = (4 if x[0] == x[1] else 2)if x[0] == x[2] and x[1] == x[3] else 1\n    ss.append(x)\n\ndef icr(x):\n    dd[x] += 1\n\ndef dcr(x):\n    dd[x] -= 1\n\ndef f(ff, gg):\n    a,b,c,d=ff\n    e,h,g,f=gg\n    tl = [(a,e,f,b), (b,f,g,c), (c,g,h,d), (d,h,e,a)]\n    for cp in tl:\n        if cp not in norm:\n            return 0\n    r = 1\n    for cp in tl:\n        cp = norm[cp]\n        r *= dd[cp]*cc[cp]\n        dcr(cp)\n    for cp in tl:\n        cp = norm[cp]\n        icr(cp)\n    return r\n\nr = 0\nfor i in range(N):\n    ff = ss[i]\n    dcr(ff)\n    for j in range(i+1, N):\n        sl = ss[j]\n        dcr(sl)\n        x, y, z, w = sl\n        sls = [(x,y,z,w), (y,z,w,x), (z,w,x,y), (w,x,y,z)]\n        for s in sls:\n            r += f(ff, s)\n        icr(sl)\n    icr(ff)\nprint((r//3))\n", "from collections import defaultdict\nN, = list(map(int, input().split()))\n\ndd = defaultdict(int)\ncc = dict()\nnorm = dict()\nss = []\nfor _ in range(N):\n    xs = list(map(int, input().split()))\n    cnd = [tuple(xs[j:] + xs[:j]) for j in range(1, 5)]\n    x = min(cnd)\n    for item in cnd:\n        norm[item] = x\n    dd[x] += 1\n    cc[x] = (4 if x[0] == x[1] else 2)if x[0] == x[2] and x[1] == x[3] else 1\n    ss.append(x)\n\ndef f(ff, gg):\n    a,b,c,d=ff\n    e,h,g,f=gg\n    tl = [(a,e,f,b), (b,f,g,c), (c,g,h,d), (d,h,e,a)]\n    for i in range(4):\n        if tl[i] not in norm:\n            return 0\n        tl[i] = norm[tl[i]]\n    r = 1\n    for cp in tl:\n        r *= dd[cp]*cc[cp]\n        dd[cp] -= 1\n    for cp in tl:\n        dd[cp] += 1\n    return r\n\nr = 0\nfor i in range(N):\n    ff = ss[i]\n    dd[ff]-=1\n    for j in range(i+1, N):\n        sl = ss[j]\n        x, y, z, w = sl\n        dd[sl]-=1\n        sls = [(x,y,z,w), (y,z,w,x), (z,w,x,y), (w,x,y,z)]\n        for s in sls:\n            r += f(ff, s)\n        dd[sl]+=1\n    dd[ff]+=1\nprint((r//3))\n", "from collections import deque\nN = int(input())\nC = []\nM = {}\nfor i in range(N):\n    *c, = list(map(int, input().split()))\n    c = tuple(min(c[j:] + c[:j] for j in range(1, 5)))\n    C.append(c)\n    if c not in M:\n        M[c] = deque([i])\n    else:\n        M[c].append(i)\ndef count(p, q, r, s):\n    if p == q == r == s:\n        return 4\n    if p == r and q == s:\n        return 2\n    return 1\ndef solve(ci, cj, k):\n    R = {}\n    for l in range(4):\n        #  [l]   [l-1]\n        # [l+k] [l+k+1]\n        c = ci[l], ci[l-1], cj[k-l], cj[k-l-1]\n        c = tuple(min(c[j:] + c[:j] for j in range(1, 5)))\n        if c not in M:\n            return 0\n        R[c] = R.get(c, 0) + 1\n    res = 1\n    for c in R:\n        m = M[c]\n        cnt = len(m)\n        if c == cj:\n            cnt -= 1\n        if cnt < R[c]:\n            return 0\n        k = count(*c)\n        for p in range(cnt-R[c]+1, cnt+1):\n            res *= p * k\n    return res\n\nans = 0\nfor i in range(N):\n    ci = C[i]\n    q = M[ci]; q.popleft()\n    if not q:\n        del M[ci]\n    for j in range(i+1, N):\n        cj = C[j]\n        for k in range(4):\n            ans += solve(ci, cj, k)\nprint(ans)\n", "import sys\nfrom collections import Counter\nreadline = sys.stdin.readline\n\ndef compress(L):\n    L2 = list(set(L))\n    L2.sort()\n    C = {v : k for k, v in enumerate(L2, 1)}\n    return L2, C\n\ndef order(a, b, c, d):\n    if a == b == c == d:\n        return 4\n    if a == c and b == d:\n        return 2\n    return 1\n\n\nlimit = 5\ncalc = [[None]*limit for _ in range(limit*400)]\nfor i in range(limit*400):\n    calc[i][1] = i\n    for j in range(2, limit):\n        calc[i][j] = calc[i][j-1]*(i-j+1)\npp = [[pow(i, j) for j in range(10)] for i in range(10)]\n\nN = int(readline())\nC = [tuple(map(int, readline().split())) for _ in range(N)]\nD = Counter()\n\n\n\nRot = []\nfor i in range(N):\n    a, b, c, d = C[i]\n    Rot.append((a, b, c, d))\n    Rot.append((d, a, b, c))\n    Rot.append((c, d, a, b))\n    Rot.append((b, c, d, a))\nLc, Cr = compress(Rot)\nLc = [None] + Lc\nCc = []\n\nOd = Counter()\nBase = Counter()\nD = Counter()\nfor i in range(N):\n    a, b, c, d = C[i]\n    a, b, c, d = min((a, b, c, d), (b, c, d, a), (c, d, a, b), (d, a, b, c))\n    od = order(a, b, c, d)\n    r1 = Cr[(a, b, c, d)]\n    r2 = Cr[(b, c, d, a)]\n    r3 = Cr[(c, d, a, b)]\n    r4 = Cr[(d, a, b, c)]\n    Base[r1] = r1\n    Base[r2] = r1\n    Base[r3] = r1\n    Base[r4] = r1\n    Od[r1] = od\n    Od[r2] = od\n    Od[r3] = od\n    Od[r4] = od\n    Cc.append((r1, r2, r3, r4))\n    D[r1] += 1\n\n\nans = 0\nfor i in range(N):\n    D[Cc[i][0]] -= 1\n    a, b, c, d = Lc[Cc[i][0]]\n    for j in range(i+1, N):\n        D[Cc[j][0]] -= 1\n        for idx in range(4):\n            e, f, g, h = Lc[Cc[j][idx]]\n            E = Counter()\n            r1 = (b, e, h, c)\n            if r1 not in Cr:\n                continue\n            r1 = Base[Cr[r1]]\n            r2 = (a, f, e, b)\n            if r2 not in Cr:\n                continue\n            r2 = Base[Cr[r2]]\n            r3 = (d, g, f, a)\n            if r3 not in Cr:\n                continue\n            r3 = Base[Cr[r3]]\n            r4 = (c, h, g, d)\n            if r4 not in Cr:\n                continue\n            r4 = Base[Cr[r4]]\n            \n            E[r1] += 1\n            E[r2] += 1\n            E[r3] += 1\n            E[r4] += 1            \n            res = 1\n            for k, n in list(E.items()):\n                res *= calc[D[k]][n] * pp[Od[k]][n]\n            ans += res\n        \n        D[Cc[j][0]] += 1\n\nprint(ans)\n", "from collections import defaultdict\nN, = list(map(int, input().split()))\n\ndef normal(xs):\n    mnx = min(xs)\n    xi = xs.index(mnx)\n    if xs[(xi+3)%4] == mnx:\n        if xs[(xi+2)%4] == mnx:\n            xi = (xi+2)%4\n        else:\n            xi = (xi+3)%4\n    if xs[(xi+1)%4] > xs[(xi+3)%4]:\n        xi = (xi+2)%4\n    return (xs[xi%4], xs[(xi+1)%4], xs[(xi+2)%4], xs[(xi+3)%4])\n#x = (0,2,2,0)\n#print(normal(x))\n\ndd = defaultdict(int)\ncc = defaultdict(int)\nss = []\nfor _ in range(N):\n    a, b, c, d = list(map(int, input().split()))\n    x = normal([a,b,c,d])\n    n=1\n    if x[0] == x[2] and x[1] == x[3]:\n        n *= 2\n        if x[0] == x[1]:\n            n *= 2\n    dd[x] += 1\n    cc[x] = n\n    ss.append(x)\n\ndef icr(x):\n    dd[x] += 1\n\ndef dcr(x):\n    dd[x] -= 1\n\ndef f(ff, gg):\n    #print(dd)\n    a,b,c,d=ff\n    e,h,g,f=gg\n    tl = list(map(normal, [(a,e,f,b), (b,f,g,c), (c,g,h,d), (d,h,e,a)]))\n    r = 1\n    for cp in tl:\n        if cp not in dd:\n            r = 0\n            break\n        r *= dd[cp]*cc[cp]\n        dcr(cp)\n    for cp in tl:\n        if cp not in dd:\n            break\n        icr(cp)\n    return r\n\nr = 0\nfor i in range(N):\n    ff = ss[i]\n    dcr(ff)\n    for j in range(i+1, N):\n        sl = ss[j]\n        dcr(sl)\n        x, y, z, w = sl\n        sls = [(x,y,z,w), (y,z,w,x), (z,w,x,y), (w,x,y,z)]\n        for s in sls:\n            r += f(ff, s)\n        icr(sl)\n    icr(ff)\nprint((r//3))\n", "from collections import defaultdict\nN, = map(int, input().split())\n\ndd = defaultdict(int)\ncc = dict()\nnorm = dict()\nss = []\nfor _ in range(N):\n    xs = list(map(int, input().split()))\n    cnd = [tuple(xs[j:] + xs[:j]) for j in range(1, 5)]\n    x = min(cnd)\n    for item in cnd:\n        norm[item] = x\n    dd[x] += 1\n    cc[x] = (4 if x[0] == x[1] else 2)if x[0] == x[2] and x[1] == x[3] else 1\n    ss.append(x)\n\ndef f(ff, gg):\n    a,b,c,d=ff\n    e,h,g,f=gg\n    tl = [(a,e,f,b), (b,f,g,c), (c,g,h,d), (d,h,e,a)]\n    for i in range(4):\n        if tl[i] not in norm:\n            return 0\n        tl[i] = norm[tl[i]]\n    r = 1\n    for cp in tl:\n        r *= dd[cp]*cc[cp]\n        dd[cp] -= 1\n    for cp in tl:\n        dd[cp] += 1\n    return r\n\nr = 0\nfor i in range(N):\n    ff = ss[i]\n    dd[ff]-=1\n    for j in range(i+1, N):\n        sl = ss[j]\n        x, y, z, w = sl\n        dd[sl]-=1\n        sls = [(x,y,z,w), (y,z,w,x), (z,w,x,y), (w,x,y,z)]\n        for s in sls:\n            r += f(ff, s)\n        dd[sl]+=1\nprint(r)", "from collections import defaultdict\nN, = map(int, input().split())\ndd = defaultdict(int)\ncc = dict()\nnrm = dict()\nss = []\nfor _ in range(N):\n  xs = list(map(int, input().split()))\n  cnd = [tuple(xs[j:]+xs[:j])for j in range(4)]\n  x = min(cnd)\n  for item in cnd:\n    nrm[item] = x\n  dd[x] += 1\n  cc[x] = (4 if x[0]==x[1]else 2)if x[0]==x[2]and x[1]==x[3]else 1\n  ss.append(x)\ndef f(ff, gg):\n  a,b,c,d=ff\n  e,h,g,f=gg\n  tl = [(a,e,f,b), (b,f,g,c), (c,g,h,d), (d,h,e,a)]\n  q = defaultdict(int)\n  for p in tl:\n    if p not in nrm:\n      return 0\n    q[nrm[p]] += 1\n  r= 1\n  for p, c in q.items():\n    for i in range(c):\n      r *= dd[p]-i\n    r *= cc[p]**c\n  return r\nr = 0\nfor i in range(N):\n  ff = ss[i]\n  dd[ff]-=1\n  for j in range(i+1, N):\n    sl = ss[j]\n    x, y, z, w = sl\n    dd[sl]-=1\n    r += sum(f(ff,tuple(sl[j:]+sl[:j]))for j in range(4))\n    dd[sl]+=1\nprint(r)"]