["a,b=list(map(int,input().split()))\ndef gcd(a,b):\n    if(b==0):\n        return a\n    return gcd(b,a%b)\ndef burn(n):\n    c=0\n    while(n%2==0):\n        c+=1\n        n=n//2\n    while(n%3==0):\n        c+=1\n        n=n//3\n    while(n%5==0):\n        c+=1\n        n=n//5\n    return [c,n]\nif(a==b):\n    print(0)\nelse:\n    g=gcd(a,b)\n    c=a//g\n    d=b//g\n    l1=burn(c)\n    l2=burn(d)\n    if(l1[1]==1 and l2[1]==1):\n        print(l1[0]+l2[0])\n    else:\n        print(-1)\n", "from math import *\n\n[n, k] = [int(i) for i in input().split()]\narr = [[0 for i in range(6)] for j in range(2)]\nfor i in [2, 3, 5]:\n    while n % i == 0:\n        n /= i\n        arr[0][i] += 1\nfor i in [2, 3, 5]:\n    while k % i == 0:\n        k /= i\n        arr[1][i] += 1\n  \nif n != k:\n    print(-1)\nelse:\n    r = abs(arr[1][5] - arr[0][5])\n    r += abs(arr[1][3] - arr[0][3])\n    r += abs(arr[1][2] - arr[0][2])\n    print(r)\n", "from fractions import gcd\na,b = map(int,input().split())\nif a==b:\n    print(0)\n    return\nc =  gcd(a, b)\ndiv1 = dict()\ndiv2 = dict()\na1 = a\nb1 = b\nc1 = c\nfor i in [2,3,5]:\n    div1[i]=0\n    while a1%i==0:\n        div1[i]+=1\n        a1//=i\n    div2[i]=0\n    while b1%i==0:\n        div2[i]+=1\n        b1//=i\nans = 0\nfor i in [2,3,5]:\n    while div1[i]!=div2[i]:\n        if div1[i]>div2[i]:\n            a//=i\n            ans+=1\n            div1[i]-=1\n        else:\n            b//=i\n            ans+=1\n            div2[i]-=1\nif a!=b:\n    print(-1)\nelse:\n    print(ans)", "import math\nimport fractions\na,b=list(map(int,input().split()))\na2=0\na3=0\na5=0\nb2=0\nb3=0\nb5=0\nwhile a%2==0:\n    a=a/2\n    a2=a2+1\nwhile a%3==0:\n    a=a/3\n    a3=a3+1\nwhile a%5==0:\n    a=a/5\n    a5=a5+1\nwhile b%2==0:\n    b=b/2\n    b2=b2+1\nwhile b%3==0:\n    b=b/3\n    b3=b3+1\nwhile b%5==0:\n    b=b/5\n    b5=b5+1\nif a!=b:print(-1)\nelse:\n    print(math.ceil(math.fabs(b2-a2)+math.fabs(b5-a5)+math.fabs(b3-a3)))\n", "a, b = map(int, input().split())\nk = a\nl = b\na2, a3, a5 = 0, 0, 0\nb2, b3, b5 = 0, 0, 0\nwhile k : \n    if k % 2 == 0 :\n        a2 += 1\n        k = k / 2\n    elif k % 3 == 0 :\n        a3 += 1\n        k = k / 3\n    elif k % 5 == 0 :\n        a5 += 1\n        k = k / 5\n    else : break\n     \nwhile l : \n    if l % 2 == 0 :\n        b2 += 1\n        l = l / 2\n    elif l % 3 == 0 :\n        b3 += 1\n        l = l / 3\n    elif l % 5 == 0 :\n        b5 += 1\n        l = l / 5\n    else : break\nif k != l :\n    print(-1)\nelse :\n    print(max(a2, b2) - min(a2, b2) + max(a3, b3) - min(a3, b3) + max(a5, b5) - min(a5, b5))", "import sys\n#sys.stdin = open('prefrev.in', 'r')\n#sys.stdout = open('prefrev.out', 'w')\nn, m = map(int, input().split())\ndivs=[2,3,5]\nar=[0]*6\nbr=[0]*6\ntn=n; tm=m\nfor i in divs:    \n    while tn % i == 0 and tn > 0:\n        ar[i] += 1\n        tn //= i\n    while tm % i == 0 and tm > 0:\n        br[i] += 1\n        tm //= i\nprint\nif tn != tm:\n    print('-1')\nelse:\n    #print('ok')\n    ans = 2e9\n    for i in range(min(br[2], ar[2])+1):\n        for j in range(min(br[3], ar[3])+1):\n            for k in range(min(br[5],ar[5])+1):\n                if ar[2]-i+br[2]-i+ar[3]-j+br[3]-j+ar[5]-k+br[5]-k<ans:\n                    ans=ar[2]-i+br[2]-i+ar[3]-j+br[3]-j+ar[5]-k+br[5]-k\n    print(ans)                ", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nmem = dict()\n\ndef calc(a, b):\n    if a == b:\n        return 0\n    if (a, b) in mem:\n        return mem[(a, b)]\n    var = [2**30]\n    if a % 2 == 0:\n        var.append(calc(a // 2, b))\n    if a % 3 == 0:\n        var.append(calc(a // 3, b))\n    if a % 5 == 0:\n        var.append(calc(a // 5, b))\n    if b % 2 == 0:\n        var.append(calc(a, b // 2))\n    if b % 3 == 0:\n        var.append(calc(a, b // 3))\n    if b % 5 == 0:\n        var.append(calc(a, b // 5))\n    mem[(a, b)] = min(var) + (min(var) < 2**30)\n    return mem[(a, b)]\n\na, b = readln()\nres = calc(a, b)\nprint(-1 if res == 2**30 else res)\n", "import math\nfrom fractions import gcd\n\ndef primes(limit):\n    Ans=[]\n    C=[True]*(limit+1)\n    L=list(range(2,limit+1))\n    for item in L:\n        if(C[item]):\n            i=2\n            while(item*i<=limit):\n                C[item*i]=False\n                i+=1\n    for item in L:\n        if(C[item]):\n            Ans+=[item]\n    return Ans\n\n\na,b=list(map(int,input().split()))\naa=a\nbb=b\nA=[]\nB=[]\n\np=primes(int(math.sqrt(10**9)))\n\nfor i in range(len(p)):\n    if(p[i]>a):\n        break\n    while(a%p[i]==0):\n        A.append(p[i])\n        a//=p[i]\nif(a!=1):\n    A.append(a)\n\n\nfor i in range(len(p)):\n    if(p[i]>b):\n        break\n    while(b%p[i]==0):\n        B.append(p[i])\n        b//=p[i]\nif(b!=1):\n    B.append(b)\n\nif(aa==1 and bb==1):\n    print(0)\n\nelif(aa==1):\n    Done=True\n    for item in B:\n        if(item>5):\n            Done=False\n            break\n    if(Done):\n        print(len(B))\n    else:\n        print(-1)\nelif(bb==1):\n    Done=True\n    for item in A:\n        if(item>5):\n            Done=False\n            break\n    if(Done):\n        print(len(A))\n    else:\n        print(-1)\n\nelse:\n\n    B.sort()\n    A.sort()\n    Done=True\n    ind=0\n    ans=0\n    while(A!=B):\n        if(ind>=len(A) and ind>=len(B)):\n            Done=False\n            break\n        elif(ind>=len(A)):\n            if(B[-1]>5):\n                Done=False\n                break\n            else:\n                ans+=len(B)-ind\n                break\n        elif(ind>=len(B)):\n            if(A[-1]>5):\n                Done=False\n                break\n            else:\n                ans+=len(A)-ind\n                break\n        if(A[ind]==B[ind]):\n            ind+=1\n            continue\n        \n        if(A[ind]<B[ind]):\n            if(A[ind]>5):\n                Done=False\n                break\n            else:\n                ans+=1\n                A.pop(ind)\n        else:\n            if(B[ind]>5):\n                Done=False\n                break\n            else:\n                ans+=1\n                B.pop(ind)\n    if(Done):\n        print(ans)\n    else:\n        print(-1)\n\n        \n", "def gcd(a, b): return gcd(b, a % b) if b else a\na, b = map(int, input().split())\nk = 2 ** 30 * 3 ** 19 * 5 ** 13\nu, v = gcd(k, a), gcd(k, b)\nif a * v != b * u: print(-1)\nelse:\n    s, c = 0, u * v // (gcd(u, v) ** 2)\n    for i in [2, 3, 5]:\n        while c % i == 0:\n            c //= i\n            s += 1\n    print(s)", "# -*- coding: utf-8 -*-\n\ndef gcd(a, b):\n    if a > b:\n        a, b = b, a\n    while True:\n        t = b % a\n        if t == 0:\n            return a\n        a, b = t, a\n    return 1\n\na, b = map(int, input().split())\ng = gcd(a, b)\nm = a/g * b/g\nn = 0\nwhile m % 2 == 0:\n    m /= 2\n    n += 1\nwhile m % 3 == 0:\n    m /= 3\n    n += 1\nwhile m % 5 == 0:\n    m /= 5\n    n += 1\nprint(n if m == 1 else -1)", "a, b = map(int, input().split())\nx = y = z = 0\nwhile a % 2 == 0:\n  x += 1\n  a //= 2\nwhile a % 3 == 0:\n  y += 1\n  a //= 3\nwhile a % 5 == 0:\n  z += 1\n  a //= 5\nwhile b % 2 == 0:\n  x -= 1\n  b //= 2\nwhile b % 3 == 0:\n  y -= 1\n  b //= 3\nwhile b % 5 == 0:\n  z -= 1\n  b //= 5\nprint(abs(x) + abs(y) + abs(z) if a == b else -1)", "a, b = list(map(int, input().split()))\nres = 0\n\nfor x in (2, 3, 5):\n\twhile a % x == 0 and b % x == 0:\n\t\ta //= x\n\t\tb //= x\n\twhile a % x == 0:\n\t\ta //= x\n\t\tres += 1\n\twhile b % x == 0:\n\t\tb //= x\n\t\tres += 1\n\nif a == b:\n\tprint(res)\nelse:\n\tprint(-1)\n", "def d(q,d):\n\tc=0\n\twhile q%d == 0:\n\t\tq//=d\n\t\tc+=1\n\t\tpass\n\treturn (c,q)\n\tpass\n\ndef main():\n\ta2=0\n\ta3=0\n\ta5=0\n\tb2=0\n\tb3=0\n\tb5=0\n\ta,b=map(int,input().split(\" \"))\n\tif a == b:\n\t\tprint (0)\n\t\treturn\n\t\tpass\n\tat,bt=a,b\n\ta2,a=d(a,2)\n\ta3,a=d(a,3)\n\ta5,a=d(a,5)\n\tb2,b=d(b,2)\n\tb3,b=d(b,3)\n\tb5,b=d(b,5)\n\tif a != b:\n\t\tprint (-1)\n\t\treturn\n\t\tpass\n\tprint (abs(a2-b2)+abs(a3-b3)+abs(a5-b5))\n\tpass\n\nmain()", "import math\nimport fractions\n\ndef pFactors(n):\n        \"\"\"Finds the prime factors of 'n'\"\"\"\n        from math import sqrt\n        pFact, limit, check, num = [], int(sqrt(n)) + 1, 2, n\n        if n == 1: return []\n        for check in range(2, limit):\n             while num % check == 0:\n                pFact.append(check)\n                num /= check\n        if num > 1:\n          pFact.append(num)\n        return pFact\n\ndef solve():\n    a , b = map(int, input().split())\n    if a == b:\n        print(0)\n        return\n    gcd = fractions.gcd(a, b)\n    af = pFactors(a//gcd)\n    bf = pFactors(b//gcd)\n    res = 0\n    for val in af:\n        if val == 2 or val == 3 or val == 5:\n            res+=1\n        else:\n            print(-1)\n            return\n    for val in bf:\n        if val == 2 or val == 3 or val == 5:\n            res+=1\n        else:\n            print(-1)\n            return\n    ares = gcd\n    for val in af:\n        ares *= val\n    bres = gcd\n    for val in bf:\n        bres *= val\n    if ares != a or bres != b:\n        #print(ares, bres)\n        print(-1)\n        return\n    print(res)\n\n\nsolve()", "from fractions import gcd\ndef o(n):\n    v = 0\n    for f in (2, 3, 5):\n        while n % f == 0:\n            n //= f\n            v += 1\n    return v if n == 1 else -1\na, b = map(int, input().split())\nf = gcd(a, b)\nv1, v2 = o(a // f), o(b // f)\nprint(v1 + v2 if v1 >= 0 and v2 >= 0 else -1)", "def gcd(a, b):\n    while(b != 0):\n        a %= b\n        t = a\n        a = b\n        b = t\n    return a\n\ndef main():\n    a, b = list(map(int, input().split(' ')))\n    gg = gcd(a, b)\n    ans = 0\n    can = 1\n    A = []\n    A.append(a / gg)\n    A.append(b / gg)\n    for g in A:\n        while(g != 1):\n            ok = 0\n            if g % 2 == 0:\n                g = g / 2\n                ok = 1\n                ans = ans + 1\n            if g % 3 == 0:\n                g = g / 3\n                ok = 1\n                ans = ans + 1\n            if g % 5 == 0:\n                g = g / 5\n                ok = 1\n                ans = ans + 1\n            if ok == 0:\n                can = 0\n                break\n    \n    if can == 0:\n        print(\"-1\")\n    else:\n        print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    from math import gcd\n    a, b = list(map(int, input().split()))\n    g, res = gcd(a, b), 0\n    for x in a // g, b // g:\n        for p in 2, 3, 5:\n            while not x % p:\n                x //= p\n                res += 1\n        if x != 1:\n            print(-1)\n            return\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def scan(type):\n    return list(map(type, input().split()))\n\na, b = scan(int)\n\na2 = a3 = a5 = b2 = b3 = b5 = 0\n\nwhile a%2 == 0:\n    a /= 2\n    a2 += 1\nwhile a%3 == 0:\n    a /= 3\n    a3 += 1\nwhile a%5 == 0:\n    a /= 5\n    a5 += 1\n\nwhile b%2 == 0:\n    b /= 2\n    b2 += 1\nwhile b%3 == 0:\n    b /= 3\n    b3 += 1\nwhile b%5 == 0:\n    b /= 5\n    b5 += 1\n\nans = 0\nif a != b:\n    print(-1)\nelse:\n    ans += max(a2,b2) - min(a2,b2)\n    ans += max(a3,b3) - min(a3,b3)\n    ans += max(a5,b5) - min(a5,b5)\n    print(ans)\n\n\n\n\n\n", "def scan(type):\n    return list(map(type, input().split()))\n\na, b = scan(int)\n\na2 = a3 = a5 = b2 = b3 = b5 = 0\n\nwhile a%2 == 0:\n    a /= 2\n    a2 += 1\nwhile a%3 == 0:\n    a /= 3\n    a3 += 1\nwhile a%5 == 0:\n    a /= 5\n    a5 += 1\n\nwhile b%2 == 0:\n    b /= 2\n    b2 += 1\nwhile b%3 == 0:\n    b /= 3\n    b3 += 1\nwhile b%5 == 0:\n    b /= 5\n    b5 += 1\n\nans = 0\nif a != b:\n    print(-1)\nelse:\n    ans += max(a2,b2) - min(a2,b2)\n    ans += max(a3,b3) - min(a3,b3)\n    ans += max(a5,b5) - min(a5,b5)\n    print(ans)\n\n\n\n\n\n\n# 1482718805944\n", "a,b=list(map(int,input().split()))\n\na2=0\na3=0\na5=0\nb2=0\nb3=0\nb5=0\n\nwhile a%2==0:\n    a//=2\n    a2+=1\nwhile a%3==0:\n    a//=3\n    a3+=1\nwhile a%5==0:\n    a//=5\n    a5+=1\nwhile b%2==0:\n    b//=2\n    b2+=1\nwhile b%3==0:\n    b//=3\n    b3+=1\nwhile b%5==0:\n    b//=5\n    b5+=1\n\ntot=max(a2-min(a2,b2),b2-min(a2,b2))+max(a3-min(a3,b3),b3-min(a3,b3))+max(a5-min(a5,b5),b5-min(a5,b5))\nif a==b:\n    print(tot)\nelse:print(-1)\n", "import math\na, b = map(int, input().split())\nc = math.gcd(a, b)\na //= c\nb //= c\nans = 0\ndef d(x, t):\n    nonlocal ans\n    while(x > 1 and x % t == 0):\n        x //= t\n        ans += 1\n    return x\nfor i in [2, 3, 5]:\n    a = d(a, i)\n    b = d(b, i)\nprint([-1, ans][a == 1 and b == 1])", "a,b=map(int,input().split())\nif a==b :\n    print(0)\n    return\na1,a3,a5,b1,b3,b5=0,0,0,0,0,0\n\nwhile a!=0 :\n    if a%2==0 : a,a1= a/2 ,a1+1\n    elif a%3==0 :   a,a3= a/3 ,a3+1\n    elif a%5==0 : a,a5= a/5 ,a5+1\n    else :  break\nwhile b!=0 :\n    if b%2==0 :     b,b1= b/2 ,b1+1\n    elif b%3==0 :   b,b3= b/3 ,b3+1\n    elif b%5==0 :   b,b5= b/5 ,b5+1\n    else :  break\nif a!=b : print(-1)\nelse : print(abs(a1-b1) + abs(a3-b3) + abs(a5-b5))", "a, b = map(int, input().split())\nres = 0\n\nfor x in (2, 3, 5):\n\twhile a % x == 0 and b % x == 0:\n\t\ta //= x\n\t\tb //= x\n\twhile a % x == 0:\n\t\ta //= x\n\t\tres += 1\n\twhile b % x == 0:\n\t\tb //= x\n\t\tres += 1\n\nif a == b:\n\tprint(res)\nelse:\n\tprint(-1)", "from math import gcd\na, b = map(int, input().split())\ng, ans = gcd(a, b), 0\na, b = a // g, b // g\nwhile a % 2 == 0:\n  a //= 2\n  ans += 1\nwhile a % 3 == 0:\n  a //= 3\n  ans += 1\nwhile a % 5 == 0:\n  a //= 5\n  ans += 1\nwhile b % 2 == 0:\n  b //= 2\n  ans += 1\nwhile b % 3 == 0:\n  b //= 3\n  ans += 1\nwhile b % 5 == 0:\n  b //= 5\n  ans += 1\nprint(-1 if a != 1 or b != 1 else ans)", "MAX = 1e9 + 7\nm = {}\ndef main():\n    nonlocal m\n    def f(a, b):\n        if (a, b) in m:\n            return m[(a, b)]\n        if a == b:\n            return 0\n        if a < 0 or b < 0:\n            return int(MAX)\n        if a < b:\n            return f(b, a)\n        ret = int(MAX)\n        if a % 2 == 0:\n            ret = min(ret, 1 + f(a/2, b))\n        if a % 3 == 0:\n            ret = min(ret, 1 + f(a/3, b))\n        if a % 5 == 0:\n            ret = min(ret, 1 + f(a/5, b))\n        m[(a, b)] = ret\n        return ret\n    (a, b) = list(map(int, input().split(' ')))\n    x = f(a, b)\n    if x == MAX:\n        return -1\n    return x\n\nprint(main())\n"]