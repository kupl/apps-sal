["import sys\nimport string\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn = ria()[0]\nar = ria()\n\nif n == 1:\n    print(ar[0])\n    return\n\nonlyNegs = True\nonlyPos = True\n\nif max(ar) >= 0:\n    onlyNegs = False\nif min(ar) <= 0:\n    onlyPos = False\n\nif onlyNegs:\n    print(abs(sum(ar)) + max(ar) * 2)\n    return\n\nif onlyPos:\n    print(abs(sum(ar)) - min(ar) * 2)\n    return\n\nprint(sum([abs(i) for i in ar]))\n", "n = int(input())\na = list(map(int, input().split()))\nif n == 1:\n\tprint(a[0])\nelse:\n\tprod_minus = False\n\tfor i in range(n - 1):\n\t\tif a[i] * a[i + 1] <= 0:\n\t\t\tprod_minus = True\n\t\t\tbreak\n\tMin_abs = float(\"inf\")\n\tSum = 0\n\tfor num in a:\n\t\tSum += abs(num)\n\t\tif abs(num) < Min_abs:\n\t\t\tMin_abs = abs(num)\n\n\tif prod_minus:\n\t\tprint(Sum)\n\telse:\n\t\tprint(Sum - 2 * Min_abs)", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n\nza = getIntList()\nif N==1:\n    print(za[0])\n    return\nt1 = max(za)\nt2 = min(za)\nif t2>=0:\n    print(sum(za) - 2*t2)\n    return\nif t1<=0:\n    print(2*t1 - sum(za))\n    return\n\nres = 0\nfor x in za:\n    res+= abs(x)\n\nprint(res)\n\n\n\n\n\n\n\n", "import sys\nimport os\n\ndef solve(slimes):\n    if len(slimes) == 1:\n        return slimes[0]\n\n    havePos = False\n    haveNeg = False\n\n    for s in slimes:\n        if s > 0:\n            havePos = True\n        elif s < 0:\n            haveNeg = True\n\n    if havePos and haveNeg:\n        return sum(map(abs, slimes))\n    elif not havePos:\n        m = max(slimes)\n        return sum(list(map(abs, slimes))) + 2 * m\n    elif not haveNeg:\n        m = min(slimes)\n        return sum(list(map(abs, slimes))) - 2 * m\n    else:\n        return 0\n\ndef main():\n    n = int(input())\n    slimes = list(map(int, input().split()))\n    print(solve(slimes))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "if input()=='1':\n print(input())\nelse:\n x,*a,y=sorted(map(int,input().split()))\n print(y-x+sum(map(abs,a)))", "#Problem D: Slime\n\nn = int(input())\n\na = input().split()\n\nfor i in range(n):\n    a[i] = int(a[i])\n\nif(n==1):\n    print(a[0]) #Obvious Case\nelse:\n    sm = 0\n    havePositive = False\n    haveNegative = False\n\n    for c in a:\n        if(c==0):\n            haveNegative = True\n            havePositive = True\n        elif(c>0):\n            havePositive = True\n            sm += c\n        else:\n            haveNegative = True\n            sm -= c\n\n    if(haveNegative and havePositive):\n        print(sm) #Final Answer\n    else:\n        for i in range(n):\n            a[i] = abs(a[i])\n        #Get the minimum\n        ans = sum(a)\n        low = a[0]\n        for c in a:\n            low = min(low,c)\n        #Final Answer\n        print(ans-2*low)\n", "n=int(input())\nA=list(map(int,input().split()))\n\nif n==1:\n    print(A[0])\n\nelif n==2:\n    print(abs(A[0]-A[1]))\n\nelse:\n    SUM=0\n    for i in range(n):\n        SUM+=abs(A[i])\n    ANS=0\n\n    for i in range(n-1):\n        if ANS<SUM-abs(A[i])-abs(A[i+1])+abs(A[i]-A[i+1]):\n            ANS=SUM-abs(A[i])-abs(A[i+1])+abs(A[i]-A[i+1])\n\n    print(ANS)\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn = ii()\na = li()\nb = [abs(x) for x in a] \nif n == 1:\n    ans = a[0]\nelif all(x > 0 for x in a) or all(x < 0 for x in a):\n    b.sort()\n    ans = sum(b) - 2 * b[0]\nelse:\n    ans = sum(b)\nprint(ans)\n", "n = int(input())\narr = list(map(int, input().strip().split()))\nk = min(arr)\nh = max(arr)\ns = 0\nfor i in arr:\n    if i >= 0:\n        s += i\n    else:\n        s -= i\n\nif n == 1:\n    print(arr[0])\nelif ((k < 0 and h >= 0)):\n    print(s)\nelse:\n    if (k >= 0):\n        print(s - 2 * k)\n    else:\n        print(s + 2 * h)", "n = int(input())\nxs = [int(x) for x in input().split()]\nprefix = [-1 for i in range(n)]\nsuffix = [-1 for i in range(n)]\nprefix[0] = 0\npre_has_neg = [False for i in range(n)]\nsuffix[-1] = 0\nsuf_has_neg = [False for i in range(n)]\nfor i in range(n):\n\tif i == 0:\n\t\tprefix[i] = xs[i]\n\telse:\n\t\tprefix[i] = prefix[i-1] + xs[i]\nfor i in reversed(range(n)):\n\tif i == n-1:\n\t\tsuffix[i] = xs[i]\n\telse:\n\t\tsuffix[i] = suffix[i+1] + xs[i]\nfor i in range(n):\n\tif i == 0:\n\t\tpre_has_neg[i] = xs[i] <= 0\n\telse:\n\t\tpre_has_neg[i] = pre_has_neg[i-1] or xs[i] <= 0\nfor i in reversed(range(n)):\n\tif i == n-1:\n\t\tsuf_has_neg[i] = xs[i] <= 0\n\telse:\n\t\tsuf_has_neg[i] = suf_has_neg[i+1] or xs[i] <= 0\n\nprebignum = [None for i in range(n)]\nsufbignum = [None for i in range(n)]\nfor i in range(n):\n\tif i == 0:\n\t\tprebignum[i] = xs[i]\n\telse:\n\t\tprebignum[i] = min(prebignum[i-1], xs[i])\nfor i in reversed(range(n)):\n\tif i == n-1:\n\t\tsufbignum[i] = xs[i]\n\telse:\n\t\tsufbignum[i] = min(sufbignum[i+1], xs[i])\n\nneg_pre = [100000 for i in range(n)]\nneg_suf = [100000 for i in range(n)]\n\nfor i in range(n):\n\tif i == 0:\n\t\tneg_pre[i] = min(xs[i], -xs[i])\n\telse:\n\t\tneg_pre[i] = neg_pre[i-1] + min(xs[i], -xs[i])\n\nfor i in reversed(range(n)):\n\tif i == n-1:\n\t\tneg_suf[i] = min(xs[i], -xs[i])\n\telse:\n\t\tneg_suf[i] = neg_suf[i+1] + min(xs[i], -xs[i])\n\nans = -100000000000000000\nfor i in range(n):\n\t#print(i, \"----\")\n\ttans = xs[i]\n\tif i == 0:\n\t\tpass\n\telif pre_has_neg[i-1]:\n\t\ttans -= neg_pre[i-1]\n\telse:\n\t\ttans += prefix[i-1]\n\t\ttans -= prebignum[i-1]*2\n\n\tif i == n-1:\n\t\tpass\n\telif suf_has_neg[i+1]:\n\t\ttans -= neg_suf[i+1]\n\telse:\n\t\ttans += suffix[i+1]\n\t\ttans -= sufbignum[i+1]*2\n\t\t#print(suffix[i+1], sufbignum[i+1])\n\tans = max(ans, tans)\n\nprint(ans)", "#from random import random, randint\n#from sys import stdout\n\n#n, k = map(int, input().split())\nn = int(input())\n\nif n==1:\n    a = input()\n    print(a)\nelse:    \n    a = list(map(int, input().split()))\n    b = [abs(i) for i in a]\n    if min(a)*max(a) > 0:\n        print(sum(b)-2*min(b))\n    else:\n        print(sum(b))\n", "import math\nn=int(input())\narr=list(map(int,input().split()))\ncp=0\ncn=0\nfor i in range(len(arr)):\n\tif arr[i]>=0:\n\t\tcp+=1\n\telse:\n\t\tcn+=1\nb=[]\nfor i in range(len(arr)):\n\tb.append(abs(arr[i]))\nm=min(b)\nif n==1:\n\tprint(arr[0])\nelse:\n\tif cp>0 and  cn>0:\n\t\tprint(sum(b))\n\telse:\n\t\tnrt=2*(min(b))\n\t\tprint(sum(b)-nrt)", "n = int(input())\ns = list(map(int,input().split()))\n\nans = 0\nsmax = -10**9\nsmin = 10**9\n\nfor i in s:\n\tif i > smax:\n\t\tsmax = i\n\tif i < smin:\n\t\tsmin = i\n\nf1 = False\nf2 = False\n\nfor i in s:\n\tif (not f1) and (i == smax):\n\t\tans += smax\n\t\tf1 = True\n\t\tcontinue\n\n\tif (not f2) and (i == smin):\n\t\tans -= smin\n\t\tf2 = True\n\t\tcontinue\n\n\tif i > 0:\n\t\tans += i\n\telse:\n\t\tans -= i;\n\nprint(ans);\n  \n", "n = int(input())\narr = list(map(int, input().split()))\nif n == 1:\n    print(arr[0])\nelse:\n    brr = [abs(i) for i in arr]\n    fl = False\n    for i in range(n - 1):\n        if arr[i] * arr[i + 1] < 0:\n            fl = True\n    if not fl:\n        print(sum(brr) - 2 * min(brr))\n    else:\n        print(sum(brr))\n    \n'''\nn = int(input())\narra = list(map(int, input().split()))\narrb = list(map(int, input().split()))\narra.sort()\narrb.sort()\na = 0\nb = 0\nfor i in range(2 * n):\n    if i % 2 == 0:\n        if len(arra) == 0:\n            arrb.pop()\n        elif len(arrb) == 0 or arra[-1] >= arrb[-1]:\n            a += arra[-1]\n            arra.pop()\n        else:\n            arrb.pop()\n    else:\n        if len(arrb) == 0:\n            arra.pop()\n        elif len(arra) == 0 or arrb[-1] >= arra[-1]:\n            b += arrb[-1]\n            arrb.pop()\n        else:\n            arra.pop()\nprint(a - b)\n'''\n'''\nn = int(input())\nif n == 1 or n == 2:\n    print('No')\nelse: #if n % 2 == 1:\n    print('Yes')\n    print((n + 1) // 2, end = ' ')\n    for i in range(1, n + 1, 2):\n        print(i, end = ' ')\n    print()\n    print(n // 2, end = ' ')\n    for i in range(2, n + 1, 2):\n        print(i, end = ' ')\n'''\n'''\nn, k = map(int, input().split())\ns = input()\nd = [0 for _ in range(k)]\nfor i in s:\n    d[ord(i) - ord('A')] += 1\n#al = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n#for i in \nprint(min(d) * k)\n'''", "n = int(input())\na = [int(w) for w in input().split()]\n\ns = sum(abs(x) for x in a)\nif len(a) == 1:\n    print(a[0])\nelif all(x>0 for x in a) or all(x<0 for x in a):\n    print(max(abs(s-2*abs(x)) for x in a))\nelse:\n    print(s)\n", "\ndef mi():\n\treturn map(int, input().split())\n\nn = int(input())\na = list(mi())\n\ncp,cn=0,0\nfor i in a:\n\tif i>=0:\n\t\tcp+=1\n\tif i<=0:\n\t\tcn+=1\ns = 0 \nif n==1:\n\tprint (a[0])\n\treturn\nfor i in a:\n\ts+=abs(i)\nif cn and cp:\n\tprint (s)\nelse:\n\tm = -1e100\n\tfor i in a:\n\t\tm = max(m,s-2*abs(i))\n\tprint (m)", "n=int(input())\nl=list(map(int,input().split()))\npos=0\nneg=0\nw=[]\nfor i in range(n):\n    if l[i]>=0:\n        pos+=1\n    else:\n        neg+=1\n    w.append(abs(l[i]))\nif n==1:\n    print(l[0])\nelif neg!=0 and pos==0:\n    print(sum(w)-min(w)*2)\nelif pos!=0 and neg==0:\n     print(sum(w)-min(w)*2)\nelse:\n    print(sum(w))\n    \n", "n = int(input())\narr = list(map(int, input().split()))\nabsArr = list(map(abs, arr))\npositiveCount, negativeCount = 0, 0\nfor num in arr:\n    if num > 0:\n        positiveCount += 1\n    elif num < 0:\n        negativeCount += 1\nif n == 1:\n    print(arr[0])\nelif positiveCount == n or negativeCount == n:\n    print(sum(absArr) - 2 * min(absArr))\nelse:\n    print(sum(absArr))\n", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nx=0\ny=0\ns=0\nif n==1:\n    print(a[0])\n    return\nfor i in a:\n    if i>0:\n        x+=1\n    if i<0:\n        y+=1\n    s=s+abs(i)\nif x==n or y==n:\n    if x==n:\n        print(s-2*a[0])\n    if y==n:\n        print(s+2*a[n-1])\nelse:\n    print(s)", "n = int(input())\nlis = list(map(int,input().split()))\nif(len(lis))==1:print(lis[0])\nelse:\n    lis.sort()\n    a=-lis[0]+lis[-1]\n    lis = list(map(abs,lis))\n    print(a+sum(lis[1:-1]))", "n = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n\tprint(sum(a))\n\treturn\n\nmn = min(a)\nmx = max(a)\ns = 0\n\nfor i in a:\n\ts += abs(i)\n\nprint(s - abs(mn) - abs(mx) + mx - mn)", "if input()=='1':\n print(input())\nelse:\n x,*a,y=sorted(map(int,input().split()))\n print(y-x+sum(map(abs,a)))", "n = int(input())\n\na = list(map(int, input().split()))\n\nif n == 1:\n\tprint(a[0])\nelif n == 2:\n\tprint(max(a[0] - a[1], a[1] - a[0]))\nelse:\n\tx = min(a)\n\ty = max(a)\n\ta = list(map(abs, a))\n\tprint(sum(a) - (2 * min(a) if x * y > 0 else 0))", "import sys\nn = int(input())\nA = list(map(int,input().split()))\n\nif n == 1:\n    print(A[0])\n    return\n\nsuma = 0\nmine = 1000000001\nd = False\n\nfor i in range(0,n):\n    mine = min(mine,abs(A[i]))\n    suma += abs(A[i])\n    if i > 0 and ((A[i] >=0 and A[i-1] < 0) or (A[i]<0 and A[i-1]>=0)):\n        d = True\n\nif d:\n    print(suma)\nelse:\n    print(suma-2*mine)\n\n"]