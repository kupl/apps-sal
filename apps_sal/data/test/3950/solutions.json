["import sys\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\ncur_max = 0\nlast_max = 1\nlast = dict()\nzeros = []\n\nfor i in range(len(a))[::-1]:\n    if a[i] == 0:\n        zeros.append(i)\n    elif a[i] not in last:\n        last[a[i]] = i\n\nstack = []\n\nfor i in range(len(a)):\n    if a[i] == 0:\n        a[i] = max(cur_max, 1)\n    elif a[i] > cur_max and last[a[i]] != i:\n        stack.append(cur_max)\n        cur_max = a[i]\n    elif cur_max != 0 and i == last[cur_max]:\n        cur_max = stack.pop()\n    elif a[i] < cur_max:\n        print(\"NO\")\n        return\n\nif k > max(a):\n    if zeros:\n        print(\"YES\")\n        a[zeros[0]] = k\n        print(*a)\n    else:\n        print(\"NO\")\nelif k == max(a):\n    print(\"YES\")\n    print(*a)\nelif k < max(a):\n    print(\"NO\")", "import sys\nn,q = list(map(int,input().split()))\na = list(map(int,input().split()))\nl = len(a)\n\nzeros = []\nlast = dict()\ncur_max = 0\nlast_max = 1\n\nstack = []\n\nfor i in range(l-1,-1,-1):\n    if a[i] == 0:\n        zeros.append(i)\n    elif a[i] not in last:\n        last[a[i]] = i\nfor i in range(l):\n    #print(\"********\")\n    #print(last)\n    #print(a[i])\n    if a[i] == 0:\n        a[i] = max(cur_max,1)\n    elif a[i] > cur_max and last[a[i]] != i: # \u6ce2\u5cf0\n        stack.append(cur_max)\n        cur_max = a[i]\n    elif cur_max != 0 and i == last[cur_max]:\n        cur_max = stack.pop()\n    elif a[i] < cur_max: # \u6ce2\u8c37\n        print(\"NO\")\n        return\n    #print(a[i])\n    #print(cur_max)\n    #print(stack)\n    #print(\"--------\")\n#print(\"########\")\n#print(a)\n#print(zeros)\nif q > max(a):\n    if zeros:\n        print(\"YES\")\n        a[zeros[0]] = q\n        print(*a)\n    else:\n        print(\"NO\")\nelif q == max(a):\n    print(\"YES\")\n    print(*a)\nelif q < max(a):\n    print(\"NO\")\n", "import sys\nn,q = map(int,input().split())\na = list(map(int,input().split()))\nl = len(a)\n\nzeros = []\nlast = dict()\ncur_max = 0\nlast_max = 1\n\nstack = []\n\nfor i in range(l-1,-1,-1):\n    if a[i] == 0:\n        zeros.append(i)\n    elif a[i] not in last:\n        last[a[i]] = i\nfor i in range(l):\n\n    if a[i] == 0:\n        a[i] = max(cur_max,1)\n    elif a[i] > cur_max and last[a[i]] != i:\n        stack.append(cur_max)\n        cur_max = a[i]\n    elif cur_max != 0 and i == last[cur_max]:\n        cur_max = stack.pop()\n    elif a[i] < cur_max: \n        print(\"NO\")\n        return\n\nif q > max(a):\n    if zeros:\n        print(\"YES\")\n        a[zeros[0]] = q\n        print(*a)\n    else:\n        print(\"NO\")\nelif q == max(a):\n    print(\"YES\")\n    print(*a)\nelif q < max(a):\n    print(\"NO\")", "def getRawInteger():\n    return [int(x) for x in input().split()]\n\n\nn, q = getRawInteger()\na = getRawInteger()\n\nif n != len(a):\n    raise ValueError('n is not correct.')\n\nl, r = [n] * (q + 5), [0] * (q + 5)\nf = [i for i in range(n + 5)]\n\n\ndef getRoot(u):\n    while f[u] != u:\n        f[u] = f[f[u]]\n        u = f[f[u]]\n    return u\n\n\nfor i in range(n):\n    l[a[i]] = min(l[a[i]], i)\n    r[a[i]] = max(r[a[i]], i)\nif l[q] > r[q]:\n    if l[0] > r[0]:\n        print('NO')\n        return\n    a[l[0]] = q\n    f[l[0]] = getRoot(l[0] + 1)\nfor i in reversed(list(range(1, q + 1))):\n    it = getRoot(l[i])\n    while it <= r[i]:\n        if a[it] < i and a[it]:\n            print('NO')\n            return\n        a[it] = i\n        f[it] = getRoot(it + 1)\n        it = getRoot(it)\nout = 'YES\\n'\nfor x in a:\n    if x:\n        out += str(x) + ' '\n    else:\n        out += '1 '\nprint(out)\n"]