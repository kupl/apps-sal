["n, m = map(int,input().split())\nfor i in range(m):\n    a, *b = map(int,input().split())\n    b = set(b)\n    for j in b:\n        if -j in b:\n            break\n    else:\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")", "n, m = map(int, input().split())\nans = \"NO\"\nfor i in range(m):\n    v = set(list(map(int, input().split()))[1:])\n    ans = \"YES\"\n    for vi in v:\n        if -vi in v:\n            ans = \"NO\"\n            break\n    if ans == \"YES\":\n        break\nprint(ans)", "n, m = map(int, input().split())\nflag1 = 0\nfor i in range(m):\n\ta = list(map(int, input().split()))\n\ta = set(a[1:])\n\tflag = 0\n\tfor x in a:\n\t\tif -x in a:\n\t\t\tflag = 1\n\t\t\tbreak\n\tif not flag:\n\t\tflag1 = 1\n\t\tbreak\nprint('YES' if flag1 else 'NO')", "import sys\n\nn, m = list(map(int, input().split()))\n\nfor _ in range(m):\n    l = [int(x) for x in input().split()][1:]\n    s = set(l)\n    ok = False\n    for i in l:\n        if -i in s:\n            ok = True\n            break\n    if not ok:\n        print(\"YES\")\n        return\n\nprint(\"NO\")\n       \n", "from sys import stdin, stdout\n\ndoomed=False\nn, m = list(map(int, stdin.readline().rstrip().split()))\n\nfor _ in range(m):\n    groupInfo = [int(a) for a in stdin.readline().rstrip().split()]\n    groupSet=set()\n    doomGroup=True\n    for i in groupInfo[1:]:\n        if -i in groupSet:\n            doomGroup=False\n            break\n        else:\n            groupSet.add(i)\n    if doomGroup:\n        doomed=True\n\nif doomed:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, m = list(map(int, input().split()))\nfor i in range(m):\n    good = 0\n    morty = set()\n    rick = set()\n    now = list(map(int, input().split()))[1:]\n    for c in now:\n        if c < 0:\n            morty.add(abs(c))\n            if abs(c) in rick:\n                good = 1\n        if c > 0:\n            rick.add(abs(c))\n            if abs(c) in morty:\n                good = 1\n    if not good:\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "n, m = list(map(int, input().split()))\n\nbad = 0\nfor _ in range(m):\n    v = [0]*(n+1)\n    ok = 0\n    for u in [int(i) for i in input().split()[1:]]:\n        au = abs(u)\n        su = 1 if u < 0 else 2\n        v[au] |= su\n        if v[au] == 3: ok = 1\n    if not ok: bad = 1\n\nprint(\"YES\" if bad else \"NO\")\n", "n,m=list(map(int,input().split()))\nflag = 0\nfor i in range(m):\n    s=0\n    q = set()\n    a = list(map(int,input().split()))\n    for item in a[1:]:\n        if(-item in q):\n            s=1\n        q.add(item)\n    if(s==0):\n        flag=1\nif(flag):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n        \n", "n, m = map(int, input().split())\n\nans = 'NO'\nfor i in range(m):\n    a = list(map(int, input().split()))[1: ]\n    s = set()\n    new_ans = False\n    for j in range(len(a)):\n        s.add(a[j])\n        if -a[j] in s:\n            new_ans = True\n            break\n    \n    if not new_ans:\n        ans = 'YES'\n        break\n\nprint(ans)", "import sys\n\ndef isDoomed(l):\n    s = set(l)\n    for e in s:\n        if -e in s:\n            return False\n    return True\n\nn, m = map(int, input().split())\nfor mm in range(m):\n    l = list(map(int, input().split()))[1:]\n    if isDoomed(l):\n        print('YES')\n        return\nprint('NO')", "def main():\n    n,m = list(map(int,input().split()))\n\n    for i in range(0,m):\n        mk = True\n        mp = set()\n        ar = [int(i) for i in input().split()[1:]]\n        #print(ar)\n        for i in ar:\n            if (-i) in mp:\n                mk = False\n                break\n            mp.add(i)\n        if mk:\n            print(\"YES\")\n            return;\n    print(\"NO\")\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\nn,m=map(int,input().split())\nfor _ in range(m):\n    k,*l=map(int,input().split())\n    l=set(l)\n    for x in l:\n        if -x in l: break\n    else: print('YES'); break\nelse: print('NO')", "\n\nn, m = list(map(int, input().split()))\n\ndont_end = True\n\nfor _ in range(m):\n    k, *elements = list(map(int, input().split()))\n    some_set = set(elements)\n    good = False\n    for x in some_set:\n        if (-x) in some_set:\n            good = True\n            break\n    if not good:\n        dont_end = False\n\nif dont_end:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n", "n, m = list(map(int, input().split()))\nans = \"NO\"\nfor i in range(m):\n    a = set()\n    line = list(map(int, input().split()))\n    answer = False\n    for j in range(1, len(line)):\n        if -line[j] in a:\n            answer = True\n            break\n        a.add(line[j])\n    if not answer:\n        ans = \"YES\"\n        break\nprint(ans)", "import sys\n\nn, m = list(map(int, input().split()))\n\na = []\nfor _ in range(m):\n    a.append(set(map(int, input().split()[1:])))\n\nfor i in a:\n    for j in i:\n        if -j in i:\n            break\n    else:\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "n, m = map(int, input().split())\nfor i in range(m):\n\tl = list(map(int, input().split()))\n\tl = set(l[1:])\n\tfor e in l:\n\t\tif (-e) in l:\n\t\t\tbreak\n\telse:\n\t\tprint(\"YES\")\n\t\treturn\nprint(\"NO\")", "n, m = map(int, input().split())\n\n\ndef main():\n    for i in range(m):\n        g = list(map(int, input().split()))\n        k = g[0]\n\n        free = set()\n        maybe = True\n        for j in range(1, k + 1):\n            if -g[j] in free:\n                maybe = False\n                break\n            else:\n                free.add(g[j])\n\n        if (len(free) > 0) and maybe:\n            return \"YES\"\n\n    return \"NO\"\n\nprint(main())", "n, m = [int(i) for i in input().split()]\n\ndef check(line):\n\tfor i in line:\n\t\tif -i in line:\n\t\t\treturn True\n\treturn False\n\t\nfor _ in range(m):\n\tline = set([int(i) for i in input().split()][1:])\n\tif not check(line):\n\t\tprint('YES')\n\t\treturn\n\nprint('NO')\n", "n,m = list(map(int, input().split()))\nfor i in range(m):\n    a = list(map(int, input().split()))\n    s = set()\n    for i in range(1,len(a)):\n        s.add(a[i])\n    k = list(s)\n    isok = 0\n    for i in range(len(k)):\n        if -k[i] in s:\n            isok = 1\n    if not isok:\n        print(\"YES\")\n        return\nprint(\"NO\")\n            \n        \n    \n", "\"\"\" Created by Henrikh Kantuni on 3/23/17 \"\"\"\n\ndef __starting_point():\n    n, m = list(map(int, input().split()))\n\n    destroy = False\n    while m > 0:\n        group = [int(g) for g in input().split()][1:]\n\n        if len(group) == 1:\n            destroy = True\n            break\n\n        group = [abs(g) for g in list(set(group))]\n        old_size = len(group)\n        group = list(set(group))\n\n        if len(group) == old_size:\n            destroy = True\n            break\n\n        m -= 1\n\n    if destroy:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n__starting_point()", "n,m = map(int,input().split())\nf=1\nwhile m>0:\n\tm-=1\n\tl = list(map(int,input().split()))\n\tn = l[0]\n\tl = l[1:]\n\tpos = set()\n\tneg = set()\n\tfor i in l:\n\t\tif i<0:\n\t\t\tneg.add(i)\n\t\telse:\n\t\t\tpos.add(i)\n\tgflag = 0\n\tfor i in pos:\n\t\tif(0-i in neg):\n\t\t\tgflag = 1\n\t\t\tbreak\n\tfor i in neg:\n\t\tif(0-i in pos):\n\t\t\tgflag = 1\n\t\t\tbreak\n\tif(gflag==0):\n\t\tf = 0\n\t\tbreak\nif(f==0):\n\tprint('YES')\nelse:\n\tprint('NO')", "import sys\n\ndef solve():\n    n, m = map(int, input().split())\n\n    for i in range(m):\n        k, *a = [int(j) for j in input().split()]\n        a.sort(key=abs)\n        # print(a)\n\n        if k == 1:\n            print('YES')\n            return\n\n        for j in range(len(a) - 1):\n            if a[j] == -a[j + 1]:\n                break\n        else:\n            print('YES')\n            return\n\n    print('NO')\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef __starting_point():\n    solve()\n__starting_point()", "n, m = list(map(int, input().split()))\nfor g in range(m):\n    l = list(map(int, input().split()))\n    s = set(l[1:])\n    found = False\n    for e in l[1:]:\n        f = -e\n        if f in s:\n            found = True\n            break\n    if not found:\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "# -*- coding: utf-8 -*-\nn, m = map(int, input().split(' '))\nt = []\nr = \"NO\"\nfor i in range(m):\n    l = list(map(int, input().split(' ')))[1::]\n    t.append(l)\nfor i in t:\n    rik = []\n    morti = []\n    if r == \"YES\": break\n    for j in i:\n        if j<0 and j not in rik:\n            j = abs(j)\n            rik.append(j)\n            if j in morti:\n                r = \"NO\"\n                break\n            else:\n                r = \"YES\"\n        elif j>0 and j not in morti:\n            morti.append(j)\n            if j in rik:\n                r = \"NO\"\n                break\n            else:\n                r = \"YES\"\nprint(r)"]