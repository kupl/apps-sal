["N = int(input())\nA = tuple(map(int, input().split(' ')))\n\nbits = [0] * (N + 1)\n\ni = N\nwhile i > 0:\n    j = i\n    ones = 0\n    while j <= N:\n        ones += bits[j]\n        j += i\n    if ones % 2 != A[i - 1]:\n        bits[i] = 1\n    i -= 1\n\nindexes = []\nfor i in range(1, N + 1):\n    if bits[i] == 1:\n        indexes.append(i)\n\nprint((len(indexes)))\nif indexes:\n    print((*indexes))\n", "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd, ceil, atan, pi\ndef input(): return sys.stdin.readline()[:-1] # warning not \\n\n# def input(): return sys.stdin.buffer.readline().strip() # warning bytes\n# def input(): return sys.stdin.buffer.readline().decode('utf-8')\nimport string\n# string.ascii_lowercase\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache\nMOD = int(1e9)+7\nINF = float('inf')\n\n\ndef solve():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    xd = [0] * n\n    ans = []\n    for i in range(n-1,-1,-1):\n        cnt = 0\n        for j in range(i, n, i + 1):\n            cnt += xd[j]\n        cnt %= 2\n        if cnt != a[i]:\n            ans.append(i + 1)\n            xd[i] = 1\n    ans.reverse()\n    print((len(ans)))\n    if ans:\n        print((*ans))\n        \n\n    \nt = 1\n# t = int(input())\nfor case in range(1,t+1):\n    ans = solve()\n\n\n\"\"\"\n\n\n\"\"\"\n", "N = int(input())\nA = [int(_) for _ in input().split()]\n\nX = [0 for _ in range(N)]\nans = []\nfor i in range(N)[::-1]:\n    v = 0\n    for j in range(i, N, i+1):\n        v += X[j]\n    if v % 2 != A[i]:\n        X[i] = 1\n        ans.append(i+1)\n\nprint((len(ans)))\nfor i in ans:\n    print(i)\n", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n# import sympy\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nA.insert(0, 0)\nB = [0] * (N + 1)\n\nfor i in range(N, 0, -1):\n    j = 1\n    cnt = 0\n    while(i * j <= N):\n        cnt += B[i * j]\n        j += 1\n    flg = cnt % 2\n    if A[i] != flg:\n        B[i] = 1\n\n# print(B)\nprint(sum(B))\nfor i, b in enumerate(B):\n    if b == 1:\n        print(i)", "#\u5165\u529b\nn=int(input())\na=list(map(int,input().split()))\n#dp\u30c6\u30fc\u30d6\u30eb dp[i-1]\u306fi\u756a\u76ee\u306e\u7bb1\u306b\u5165\u3063\u3066\u3044\u308b\u30dc\u30fc\u30eb\u306e\u6570\ndp=[0 for i in range(n)]\n#\u521d\u671f\u6761\u4ef6\ndp[n-1]=a[n-1]\n\nfor i in range(n,0,-1):\n  num=0\n  for j in range(i*2,n+1,i):\n    num=num+dp[j-1]\n  if num%2==a[i-1]:\n    dp[i-1]=0\n  else:\n    dp[i-1]=1\n\nprint(dp.count(1))\nfor i in range(n):\n  if dp[i]==1:\n    print(i+1,end=\" \")\n    \n\n    ", "n = int(input())\na = list(map(int, input().split()))\n\nans = [False] * n\n\nfor i in range(n//2, n):\n    ans[i] = a[i]\n\nfor i in range(n//2-1, -1, -1):\n    mod = False\n    for j in range(i, n, i+1):\n        if ans[j] == 1:\n            mod = not mod\n\n    mod = 1 if mod else 0\n\n    ans[i] = True if mod != a[i] else False\n\ncnt = 0\nind = []\nfor i in range(n):\n    if ans[i] == True:\n        cnt += 1\n        ind.append(i+1)\n\nprint(cnt)\nif cnt > 0:\n    print(\" \".join(map(str, ind)))", "n = int(input())\narr = list(map(int, input().split()))\ncount = 0\narr3 = [0]*n\narr5 = []\nif list(set(arr)) == [0]:\n    print(0)\n    return\nfor j in range(n, 0, -1):\n    cancer = 0\n    pre = 0\n    for k in range(j, n+1, j):\n        pre += arr3[k - 1]\n    if pre % 2 != arr[j-1]:\n        count += 1\n        arr5.append(j)\n        arr3[j-1] += 1\nprint(count)\nfor aa in arr5:\n    print(aa)", "N = int(input())\nAli = list(map(int,input().split()))\nbli = [0]*(N+1)\nM = 0\n\nfor z in range(N):\n  i = N-z\n  #i\u306e\u500d\u6570\u306e\u7bb1\u306e\u548c%2\u304cAli\u3068\u540c\u3058\u304b\u8abf\u3079\u308b\n  sb = 0\n  for j in range(i*2,N+1,i):\n    sb += bli[j]\n  if sb%2 != Ali[i-1]:\n    bli[i] = 1\n    M += 1\n    \nprint(M)\n\ncnt = 0\nfor i in range(N+1):\n  if bli[i] == 1:\n    cnt += 1\n    if cnt == M:\n      print(i)\n    else:\n      print(i,end=\" \")", "from copy import deepcopy\n\nN=int(input())\nA=list(map(int,input().split()))\nans=[0]*(N//2+1)+A[N//2:]\nA=[0]+A\n\nok=1\nfor i in range(N//2,0,-1):\n  if sum(ans[i*2:i*(N//i)+1:i])%2==0:\n    ans[i]=A[i]\n  else:\n    ans[i]=1-A[i]\n\nans2=[]\nfor i in range(1,N+1):\n  if ans[i]==1:\n    ans2.append(i)\n\nprint(len(ans2))\nif len(ans2)>0:print(*ans2)", "N = int(input())\nA = [0] + list(map(int,input().split()))\nans = [0]*(N+1)\nfor i in reversed(range(1,N+1)):\n  tot = 0\n  for j in range(i+i,N+1, i):\n    tot+=ans[j]\n  if tot%2 != A[i]:\n    ans[i] = 1\nM = sum(ans)\nres = []\nfor i in range(1,N+1):\n  if ans[i] == 1:\n    res.append(str(i))\nprint(M)\nprint(' '.join(res))", "N = int(input())\nA = list(map(int,input().split()))\nB = (N+1)*[0]\n\nfor n in range(N,0,-1):\n  B[n] = (sum(B[n::n])+A[n-1])%2\n\nprint(B.count(1))\nfor n in range(N+1):\n  if B[n]:\n    print(n,end=\" \")", "'''\n\u7814\u7a76\u5ba4PC\u3067\u306e\u89e3\u7b54\n'''\nimport math\n#import numpy as np\nimport queue\nimport bisect\nfrom collections import deque,defaultdict\nimport heapq as hpq\nfrom sys import stdin,setrecursionlimit\n#from scipy.sparse.csgraph import dijkstra\n#from scipy.sparse import csr_matrix\nipt = stdin.readline\nsetrecursionlimit(10**7)\nmod = 10**9+7\n\ndef main():\n    n = int(ipt())\n    a = [int(i) for i in ipt().split()]\n    p2 = [0]*(n+1)\n    for i in range(n,0,-1):\n        sm = 0\n        for j in range(i,n+1,i):\n            sm += p2[j]\n        p2[i] = (a[i-1]-sm)%2\n\n    sm = sum(p2)\n    print(sm)\n    ans = []\n    for i,pi in enumerate(p2):\n        if pi:\n            ans.append(str(i))\n\n    print((\" \".join(ans)))\n    return None\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\nA=list(map(int,input().split()))\n\nB=[0 for i in range(n)]\nB[n//2:]=A[n//2:]\n\nfor i in range(n//2,0,-1):\n    B[i-1]= (sum(B[i*2-1::i])%2 != A[i-1])\n\nprint(sum(B))\nfor i,j in enumerate(B):\n    if j==1:\n        print(i+1)", "N = int(input())\na = list(map(int, input().split()))\n\n# 1\u958b\u59cb\u306b\u3059\u308b\nA = [0]+a\n# \u3044\u3044\u5165\u308c\u65b9\uff081\u306f\u30dc\u30fc\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\uff09\nB = [0]*(N+1)\n# \u30dc\u30fc\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\u7bb1\u306e\u756a\u53f7\nans = []\n\n# N\u304b\u30891\u307e\u3067\u30eb\u30fc\u30d7\nfor i in range(N, 0, -1):\n    # i\u306e1\u3064\u76ee\u306e\u500d\u6570\u304b\u3089N\u307e\u3067\u306e\u500d\u6570\u306e\u7bb1\u306b\u30dc\u30fc\u30eb\u304c\u5165\u3063\u3066\u3044\u308b\u7bb1\u306e\u500b\u6570\u3092\u6c42\u3081\u308b\n    tmp = 0\n    for j in range(i*2, N+1, i):\n        tmp += B[j]\n\n    # \u5408\u8a08%2\u304cA[i]\u3068\u4e0d\u4e00\u81f4\u306a\u3089\u30dc\u30fc\u30eb\u3092\u5165\u308c\u308b\n    if tmp % 2 != A[i]:\n        B[i] = 1\n        ans.append(i)\n\nif len(ans) == 0:\n    print((0))\nelse:\n    print((len(ans)))\n    print((' '.join(map(str, ans))))\n", "n = int(input())\na = list(map(int, input().split()))\n\nball = [0 for i in range(n)]\n\nfor i in reversed(range(n)):\n  if n//2 < i:\n    ball[i] = a[i]\n  else:\n    if (sum(ball[i::(i+1)]) - a[i]) % 2 == 0:\n      ball[i] = 0\n    else:\n      ball[i] = 1\n\n\nnum = [str(i+1) for i, x in enumerate(ball) if x == 1]\n\nif len(num) == 0:\n  print('0')\nelse:\n  print(len(num))\n  num = ' '.join(num)\n  print(num)", "n=int(input())\nbits = list(map(int,input().split()))\nans = set()\nfor i in reversed(range(n)):\n  for j in range(i+(i+1),n,i+1):\n    bits[i] ^= bits[j]\n  if bits[i] == 1:\n    ans.add(i+1)\nprint(len(ans))\nprint(*ans)", "N=int(input())\nA=list(map(int,input().split()))\nans=[0]*N\nfor i in range(N):\n  n=N-i\n  add=A[n-1]\n  n_tmp=n\n  while True:\n    n_tmp+=n\n    if n_tmp>N:break\n    if ans[n_tmp-1]:\n      add=0 if add else 1\n  if add:\n    ans[n-1]=1\nprint(ans.count(1))\nans2=[]\nfor i,v in enumerate(ans):\n  if v:\n    ans2.append(i+1)\nprint(*ans2)", "n = int(input())\na = list(map(int, input().split()))\na = [0] + a\nl = [0]*(n + 1)\n\nfor i in range(n, 0, -1):\n    if i > 0 - -n//2:\n        l[i] = a[i]\n    else:\n        if a[i] != sum(l[i::i])%2:\n            l[i] = 1\n\nprint(l.count(1))\n\nfor i in range(1, n + 1):\n    if l[i] == 1:\n        print(i)", "def solve():    \n    n = int(input())\n    a = list(map(int,input().split()))\n    b = [0]*n\n    ans = []    \n    for i in range(n-1, -1, -1):\n        if sum(b[i::i+1])%2 != a[i]:\n            b[i] = 1\n            ans.append(i+1)\n    print(len(ans))\n    if len(ans):\n        print(*ans)\n        \ndef __starting_point():\n    solve()\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nb = [0]*n\nans = []    \nfor i in range(n-1, -1, -1):\n    if sum(b[i::i+1])%2 != a[i]:\n        b[i] = 1\n        ans.append(i+1)\nprint(len(ans))\nif len(ans):\n    print(*ans)", "N = int(input())\na = [0]+list(map(int, input().split()))\nb = [0 for _ in range(N+1)]\n\nfor i in reversed(range(1, N+1)):\n    tmp = 0\n    for j in range(i, N+1, i):\n        tmp += b[j]\n            \n    if(tmp%2 == a[i]):\n        b[i] = 0\n    else:\n        b[i] = 1\n\n\nans = []\nfor i, j in enumerate(b):\n    if(j == 1):\n        ans.append(i)\nprint(len(ans))\nif(len(ans)):\n    print(*ans)", "import math\nN = int(input())\nA = [0] + list(map(int, input().split( )))\nB = [0]*(N+1)\ns = 0\nfor i in reversed(range(1, N+1)):\n  ball = 0  \n  for j in range(i,N+1,i):\n    ball += B[j]\n  if ball%2 != A[i]:\n    B[i] = 1\n    s += 1\n\nprint(s)\nprint(*[i for i, b in enumerate(B) if b == 1], sep=' ')", "N = int(input())\na = list(map(int, input().split()))\n\nb = [0] * N\nfor i in range(N):\n  tmp = 0\n  n = N-i\n  for j in range(n*2-1, N, n):\n    if b[j] == 1:\n      tmp += 1\n  if a[n-1] != tmp%2:\n    b[n-1] = 1\n\nans = []\nfor i in range(N):\n  if b[i] == 1:\n    ans.append(i+1)\nif ans != []:\n  print(len(ans))\n  print(*ans)\nelse:\n  print(0)", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    ans = set()\n    \n    for i in range(n, 0, -1):\n        now = 0\n        for j in range(2*i, n+1, i):\n            if j in ans:\n                now += 1\n        if now % 2 != a[i-1]:\n            ans.add(i)\n    \n    return ans\n\ndef __starting_point():\n    x = solve()\n    print(len(x))\n    print(*x, sep=' ')\n__starting_point()", "N = int(input())\na = [0]+list(map(int,input().split()))\nls = [0]*(N+1)\nfor i in range(N, 0, -1):\n    sm = 0\n    for j in range(i, N+1, i):\n        sm += ls[j]\n    ls[i] = (sm % 2) ^ a[i]\nb = [i for i in range(N+1) if ls[i] == 1]\nprint(len(b))\nprint(*b)", "N=int(input())\n*A,=map(int,input().split())\nD=[[1]for _ in range(N+1)]\nfor i in range(2,N+1):\n    j=1\n    while i*j<=N:\n        D[i*j].append(i)\n        j+=1\n\nD=D[1:]\nB=[0]*N\nans=[]\ni=1\nwhile i<=N:\n    B[-i]%=2\n    if B[-i]==A[-i]:\n        i+=1\n        continue\n    else:\n        ans.append(N-i+1)\n        for d in D[-i]:\n            B[d-1]+=1\n        B[-i]%=2\n    i+=1\n        \nM=len(ans)\nans.sort()\nprint(M)\nprint(*ans)", "N = int(input())\na = list(map(int,input().split()))\nb = [0] * N\nans = 0 \nfrom collections import deque        \nansL = deque()\nfor i in range(N):\n    m = N - i \n    count = 0\n    for k in range(1,N//m+1):\n        count += b[m*k-1]\n    if count % 2 != a[m-1]:\n        b[m-1] = 1\n        ans += 1\n        ansL.appendleft(m)    \nprint(ans)\nprint((*ansL)) \n    \n\n", "n = int(input())\nlist_A = list(map(int, input().split()))\nlist_N = [0]*n\n\nfor i in range(n, 0, -1):\n    k, cnt = 0, 0\n    while True:\n        if k+i > n:\n            break\n        if list_N[k+i-1] == 1:\n            cnt += 1\n        k += i\n    list_N[i-1] = (list_A[i-1]+cnt) % 2\n\nans = []\nfor i in range(n):\n    if list_N[i] == 1:\n        ans.append(i+1)\nprint(len(ans))\nprint(*ans)", "N = int(input())\na = list(map(int, input().split()))\n\nb = [0] * (N + 1)\n\nfor i in range(N, 0, -1):\n    if sum(b[::i]) % 2 != a[i-1]:\n        b[i] = 1\n\ns = sum(b)\nprint(sum(b))\nif s != 0:\n    for i in range(N+1):\n        if b[i] == 1:\n            print(i, end=\" \")", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    a = tuple(map(int, input().split()))\n\n    b = []\n    box = [0] * (N + 1)\n    for i, r in zip(reversed(list(range(1, N + 1))), a[::-1]):\n        total_r = sum(box[j] for j in range(i, N + 1, i)) % 2\n        if r == 0 and total_r == 1:\n            box[i] = 1\n            b.append(i)\n        elif r == 1 and total_r == 0:\n            box[i] = 1\n            b.append(i)\n\n    M = len(b)\n    if M == 0:\n        print((0))\n    else:\n        print(M)\n        print((\" \".join(map(str, b))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\na=list(map(int,input().split()))\n\nans=[0 for _ in range(n+1)]\nt=[]\nS=0\n\nfor i in range(n):\n  b=n-i\n  c=(n-i)*2\n  ch=0\n  while c<=n:\n    ch+=ans[c]\n    c+=b\n    \n  if ch%2==0:\n    if a[b-1]==1:\n      ans[b]+=1\n      S+=1\n      t.append(str(b))\n  else:\n    if a[b-1]==0:\n      ans[b]+=1\n      S+=1\n      t.append(str(b))\n      \n\nprint(S)\nif S>0:\n  \n  print((' '.join(t)))\n", "n = int(input())\na = list(map(int,input().split()))\nb = [0] * n\nans = 0\nfor i in range(n)[::-1]:\n    t = 0\n    j = (i+1)*2\n    while j <= n:\n        t += b[j-1]\n        j += (i+1)\n    if a[i] == 0:\n        if t % 2 == 0:\n            b[i] = 0\n        else:\n            b[i] = 1\n            ans += 1\n    else:\n        if t % 2 == 0:\n            b[i] = 1\n            ans += 1\n        else:\n            b[i] = 0\nprint(ans)\nl = []\nfor i in range(n):\n    if b[i] == 1:\n        l.append(str(i+1))\nprint(' '.join(l))", "import sys\nn = int(input())\na = list(map(int, input().split()))\nb = [0 for _ in range(n)]\n\nfor i in range(n, 0, -1):\n    val = 0\n    for j in range(i, n+1, i):\n        val += b[j-1]\n    if val%2 != a[i-1]:\n        b[i-1] += 1\n\nnum = sum(b)\nif num == 0:\n    print((0))\nelse:\n    print(num)\n    for i in range(n):\n        if b[i] != 0:\n            print((i+1))\n            \n", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    \n    n = I()\n    a = [0] + LI()\n    ans = [0 for _ in range(n+1)]\n\n    for i in range(n,0,-1):\n        cnt = 0\n        for j in range(i,n+1,i):\n            cnt += ans[j]\n        if cnt%2 != a[i]:\n            ans[i] = 1\n    \n    ans_lst = []\n    for i in range(1,n+1):\n        if ans[i] == 1:\n            ans_lst.append(i)\n\n    print((len(ans_lst)))\n    print((*ans_lst))\n\n    \nmain()\n", "n = int(input())\nb = list(map(int, input().split()))\na = [0] * (n + 1)\nfor i in range(1, n + 1):\n    a[i] = b[i - 1]\n\n\nball = [0] * (n + 1)\nans = []\n\nfor i in range(n, 0, -1):\n    s = 0\n    j = i * 2\n    while j <= n:\n        s += ball[j]\n        j += i\n\n    if s % 2 != a[i]:\n        ball[i] += 1\n        ans.append(i)\n\nprint((len(ans)))\nfor e in ans:\n    print(e)\n", "import sys\ninput = sys.stdin.readline\n\nN=int(input().rstrip('\\n'))\nAs = [int(x) for x in input().rstrip('\\n').split()]\nres = [0]*N\nfor i in range(N,0,-1):\n  now = sum(res[i-1::i])%2\n  if now!=As[i-1]:\n    res[i-1] += 1\nprint(sum(res))\nprint(*[x+1 for x in range(N) if res[x]>0])", "n = int(input())\na = list(map(int, input().split()))\n\nb = [0] * n\nc = []\nfor i in range(n-1, -1, -1):\n    v = i + 1\n    s = 0\n    for j in range(1, 10**6):\n        if v*j > n:\n            break    \n        s += b[v*j-1]\n    if s % 2 != a[i]:\n        b[i] = 1\n        c.append(v)\nprint(len(c))\nfor i in reversed(c):\n    print(i)", "n=int(input())\na=list(map(int,input().split()))\nd=[0 for i in range(n+1)]\nans=[0 for i in range(n+1)]\nfor i in range(n,0,-1):\n  c=0\n  for j in range(i*2,n+1,i):\n    c+=ans[j]\n  if (c%2)^a[i-1]:\n    ans[i]=1\n\nr=\"\"\nc=0\nfor i in range(1,n+1):\n  if ans[i]:\n    c+=1\n    r+=str(i)+\" \"\nprint(c)\nprint((r[:-1]))\n  \n", "import sys,math,collections,itertools\ninput = sys.stdin.readline\n\nN = int(input())\na = list(map(int,input().split()))\na.insert(0,0)\nb = []\nc = [0 for _ in range(N+1)]\nfor i in range(N,0,-1):\n    cnt = 0\n    for j in range(2*i,N+1,i):\n        if c[j] == 1:\n            cnt +=1\n    if (cnt%2==1 and a[i] == 0) or (cnt%2==0 and a[i] == 1):\n        b.append(i)\n        c[i] = 1\nprint((len(b)))\nprint((*b))\n", "def resolve():\n    '''\n    code here\n    '''\n    N = int(input())\n    As = [int(item) for item in input().split()]\n\n    box = set()\n\n    for i in range(N):\n        num = N -i\n        sum_num  = 0\n        for j in range(1, N//num +1):\n            if j*num in box:\n                sum_num += 1\n\n        if As[num-1] != sum_num % 2:\n            box.add(num)\n\n    print((len(box)))\n\n    for item in box:\n        print(item)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n =int(input())\nA = list(map(int,input().split()))\n\nB = [0]*n\n\nfor i in range(n)[::-1]:\n  tmp = 0\n  j = i+1\n  \n  while j<=n:    \n    tmp += B[j-1]\n    j += i+1\n    \n  if tmp%2 != A[i]:    \n    B[i] = 1\n\nprint(sum(B))\nprint(*[i+1 for i in range(n) if B[i]])", "n=int(input())\nl=list(map(int,input().split()))\nbox=[0]*(n+1)\nfor i in range(n):\n    k=n-i\n    count=0\n    for j in range(k,n+1,k):\n        count+=box[j]\n    if count%2!=l[k-1]:\n        box[k]=1\nll=[]\nfor i in range(1,n+1):\n    if box[i]==1:\n        ll.append(i)\nprint(box.count(1))\nprint(*ll) ", "import sys\n# import math\n# import bisect\n# import numpy as np\n# from decimal import Decimal\n# from numba import njit, i8, u1, b1 #JIT compiler\n# from itertools import combinations, product\n# from collections import Counter, deque, defaultdict\n\n# sys.setrecursionlimit(10 ** 6)\nMOD = 10 ** 9 + 7\nINF = 10 ** 9\nPI = 3.14159265358979323846\n\ndef read_str():      return sys.stdin.readline().strip()\ndef read_int():      return int(sys.stdin.readline().strip())\ndef read_ints():     return map(int, sys.stdin.readline().strip().split())\ndef read_ints2(x):   return map(lambda num: int(num) - x, sys.stdin.readline().strip().split())\ndef read_str_list(): return list(sys.stdin.readline().strip().split())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef GCD(a: int, b: int) -> int: return b if a%b==0 else GCD(b, a%b)\ndef LCM(a: int, b: int) -> int: return (a * b) // GCD(a, b)\n\ndef Main():\n    n = read_int()\n    a = read_int_list()\n    b = [0] * n\n    ans = []\n    for i in range(n - 1, -1, -1):\n        if sum(b[i::i + 1]) % 2 != a[i]:\n            b[i] = 1\n            ans.append(i + 1)\n    print(len(ans))\n    if len(ans): print(*ans)    \n    \ndef __starting_point():\n    Main()\n__starting_point()", "N=int(input())\nA=[0] + list(map(int,input().split()))\nB=[0]*(N+1)#\u30dc\u30fc\u30eb\u306e\u7ba1\u7406\n\n#\u5927\u304d\u3044\u6570\u5b57\u304b\u30891\u307e\u3067\u9806\u306b\u898b\u3066\u3044\u304f\nfor i in reversed(range(1,N+1)):\n  ball=0\n  base=i+1\n\n  #i\u304b\u3089N\u307e\u3067i\u305a\u3064\u898b\u3066\u30dc\u30fc\u30eb\u3092\u8db3\u3059(j=i\u306e\u500d\u6570)\n  for j in range(i,N+1,i):\n    ball+=B[j]\n\n  #\u3082\u3057\u8db3\u3057\u305f\u30dc\u30fc\u30eb\u306e\u6570%2\u304cA[i]\u3068\u5408\u308f\u306a\u3044\u306a\u3089\u5408\u308f\u305b\u308b\n  if ball%2 != A[i]:\n    B[i] = 1\n\nprint(sum(B))#\u30dc\u30fc\u30eb\u306e\u5165\u3063\u305f\u7bb1\u306e\u7dcf\u6570\n#\u3082\u3057B\u306b1\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u6240\u304c\u3042\u308c\u3070\u305d\u306e\u5834\u6240\u3092\u51fa\u529b\nprint(*[i for i,b in enumerate(B) if b==1],sep=' ')", "def main():\n    n = int(input())\n    a = list(map(int,input().split()))\n    ans = [-1 for i in range(n)]\n    for i in range(n):\n        c = n//(n-i)\n        if c<2:\n            if a[n-1-i] == 1:\n                ans[n-1-i] = 1\n            else:\n                ans[n-1-i] = 0\n        else:\n            s = 0\n            for j in range(2,c+1):\n                s += ans[j*(n-i)-1]\n            ans[n-i-1] = (s+a[n-1-i])%2 \n    a = []\n    for i in range(n):\n        if ans[i] == 1:\n            a.append(i+1)\n    if len(a)==0:\n        print((0))\n    else:\n        print((len(a)))\n        print((' '.join(list(map(str,a)))))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nA=[0]+list(map(int, input().split()))\nB=[0]*(N+1)\nS=set()\nfor i in range(N,0,-1):\n  if sum(B[i::i])%2!=A[i]:\n    B[i]=1\n    S.add(i)\nprint(len(S))\nprint(*S)", "N = int(input())\nA = list(map(int, input().split()))\nB = [0] * N\n\nfor i in range(N - 1, -1, -1):\n    tmp_sum = 0\n    for j in range((i + 1) * 2 - 1, N, i + 1):\n        tmp_sum += B[j]\n        tmp_sum %= 2\n    B[i] = tmp_sum ^ A[i]\n\nprint(sum(B))\nprint(*[i + 1 for i, b in enumerate(B) if b == 1])", "n =int(input())\nA = list(map(int,input().split()))\n\nans = [0]*n\n\nfor i in range(n)[::-1]:\n  if i >= n//2:\n    ans[i] = A[i]\n  else:\n    tmp = 0\n    j = i+1\n    while j<=n:\n      tmp += ans[j-1]\n      j += i+1\n    if A[i] == 1:\n      if tmp % 2 != A[i]:\n        ans[i] = A[i]              \n    else:      \n      if tmp % 2 == 1:\n        ans[i] = 1\n    \nprint(sum(ans))\nprint(*[i+1 for i in range(n) if ans[i] == 1])", "N=int(input())\nA=list(map(int,input().split()))\nA=[0]+A\nB=[0]*(N+1)\nfor i in range(N):\n  k=N-i \n  c=0\n  for j in range(k,N+1,k):\n    c+=B[j]\n    c%=2\n  if A[k]!=c:\n    B[k]=1\n    \nprint(sum(B))\nfor i in range(len(B)):\n  if B[i]==1:\n    print(i)", "#!/usr/bin/env python3\nn = int(input())\n*a, = list(map(int, input().split()))\nb = [0]*(n//2) + a[n//2:]\nfor i in reversed(list(range(n//2))):\n    b[i] = sum(b[(i+1)*(j+1)-1] for j in range(n//(i+1)))&1 ^ a[i]\nprint((sum(b)))\nprint((*[i+1 for i in range(n) if b[i]==1]))\n", "N = int(input())\na = list(map(int, input().split()))\n\nbox = [-1] * (N + 1)\nball_in_list = []\n# \u7bb1\u306b\u3064\u3044\u3066(i = N, N-1, ..., 1)\nfor i in range(N, 0, -1):\n    cnt = 0\n    # (N//i)*i, ..., 3*i, 2*i\n    for j in range((N // i) * i, 2 * i - 1, -i):\n        cnt += box[j]\n\n    # \u5076\u5947\u304c\u540c\u3058\u306a\u3089\u30dc\u30fc\u30eb\u306f\u5165\u308c\u306a\u3044\n    if cnt % 2 == a[i - 1]:\n        box[i] = 0\n    # \u5076\u5947\u304c\u7570\u306a\u308b\u6642\u3001\u30dc\u30fc\u30eb\u3092\u5165\u308c\u308b\u3001\u305d\u306e\u884c\u70ba\u3092\u8a18\u9332\n    else:\n        box[i] = 1\n        ball_in_list.append(i)\n\nprint((len(ball_in_list)))\nprint((*ball_in_list))\n", "n=int(input())\na=list(map(int,input().split()))\n\nans=[]\nb=[0]*n\nfor i in reversed(list(range(n))):\n  if sum(b[i::i+1])%2!=a[i]:\n    b[i]+=1\n    ans.append(i+1)\n        \nprint((sum(b)))\nprint((*sorted(ans)))       \n", "N = int(input())\nA = list(map(int,input().split()))\nans = [0] * N\nindex = []\nM = 0\nfor i in range(N-1,-1,-1):\n    a = ans[i:N:i+1]\n    if sum(a) % 2 == A[i]:\n        ans[i] = 0\n    else:\n        ans[i] = 1\n        index.append(i+1)\n        M += 1\nprint(M)\nprint(*index[::-1])", "N = int(input())\nA = tuple(map(int, input().split()))\n\nstate = [0] * (N + 1)\nfor i in range(N, 0, -1):\n    if N < i + i:\n        state[i] = A[i-1]\n    else:\n        state[i] = A[i-1]\n        j = i + i\n        while j <= N:\n            state[i] ^= state[j]\n            j += i\nans = [str(i) for i, x in enumerate(state) if x == 1]\nprint(len(ans))\nif ans:\n    print(\" \".join(ans))", "N = int(input())\nA = list(map(int,input().split()))\n\nans = [0] * N\nfor i,a in enumerate(A[::-1]):\n    n = m = N-i\n    s = 0\n    while m <= N:\n        s += ans[m-1]\n        m += n\n    ans[n-1] = (s%2)^a\n\nans = [i+1 for i,a in enumerate(ans) if a]\nprint(len(ans))\nif ans:\n    print(*ans, sep='\\n')", "N = int(input())\nAlist = list(map(int,input().split()))\nAnswer = [0]*(N+1)\nM = 0\nfor i in range(1,len(Alist)+1):\n    A = Alist[-i]\n    n = (N+1)-i\n    if sum(Answer[n::n])%2 != A:\n        Answer[-i] = 1\n        M += 1\nprint(M)\nAns = []\nfor k in range(len(Answer)):\n    if Answer[k] == 1:\n        Ans.append(k)\nprint(*Ans[0:],end=\"\\t\")    ", "import math\n\ndef main():\n\tN = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\tB = [0] * N\n\tif N == 1:\n\t\tif A[0] == 1:\n\t\t\tprint((1))\n\t\t\tprint((1))\n\t\telse:\n\t\t\tprint((0))\n\t\treturn 0\n\tfor i in range(1, N):\n\t\tfor j in range(math.ceil(N / (i + 1)), math.floor(N / i) + 1):\n\t\t\tball = 0\n\t\t\tfor k in range(2 * j, N + 1, j):\n\t\t\t\tball += B[k - 1]\n\t\t\tB[j - 1] = (ball % 2 + A[j - 1]) % 2\n\tans = [str(x + 1) for x, v in enumerate(B) if v == 1]\n\tprint((len(ans)))\n\tif len(ans) > 0:\n\t\tprint((\" \".join(ans)))\n\nmain()\n", "N = int(input())\nA = list(map(int,input().split()))\nA = [0] + A\nres = [0]*(N+1)\nM = 0\n\nfor i in range(N,0,-1):\n  if sum(res[j] for j in range(i,N+1,i)) % 2 != A[i]:\n    res[i] = 1\n    M += 1\n    \nprint(M)\nprint(*[k for k, r in enumerate(res) if r])", "n = int(input())\nA = list(map(int, input().split()))\n\nimport numpy as np\nB = [0 for _ in range(n)]\nans = []\nfor i, a in enumerate(A[::-1]):\n  i = len(A) - i - 1\n  B[i] = int(np.array(B[i::i+1]).sum() % 2 != a)\n  if B[i] == 1:\n    ans.append(i+1)\nprint(len(ans))\nif len(ans) > 0:\n  print(*ans)", "n = int(input())\na = list(map(int,input().split()))\nbox = set([])\nfor i in range(n,0,-1):\n  cnt = 0\n  for j in range(1,n//i+1):\n    if i*j in box:\n      cnt += 1\n  if cnt%2 != a[i-1]:\n    box.add(i)\nprint(len(box))\nprint(*box)", "N = int(input())\nA = list(map(int, input().split()))\nB = [0] * N\n\nfor i in range(N - 1, -1, -1):\n    B[i] = (sum(B[2 * (i + 1) - 1::i + 1]) % 2) ^ A[i]\n\nprint(sum(B))\nprint(*[i+1 for i in range(N) if B[i] == 1])", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    M = i_input()\n    B = [0] + i_list()\n\n    N = [0]*(M+1)\n    for i in range(M,0,-1):\n        k = 2*i\n        trial = 0\n        while k <= M:\n             trial += N[k]\n             k += i\n        if trial % 2 == B[i]:\n            continue\n        else:\n            N[i] = 1\n    s = sum(N)\n    print(s)\n    if s > 0:\n        for i,k in enumerate(N):\n            if k > 0:\n                print(i)\n\n\n \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = [0] + list(map(int, input().split()))\nb = [0]*(n+1)\nb[-1] = a[-1]\nans = []\nfor i in range(n, 0, -1):\n    cnt = 0\n    bi = i\n    i += bi\n    while i <= n:\n        cnt += b[i]\n        i += bi\n\n    if (cnt%2) == a[bi]:\n        b[bi] = 0\n    else:\n        b[bi] = 1\n        ans.append(bi)\n\nprint(len(ans))\nif ans:\n    print(*ans)", "N=int(input())\nA=[0]+list(map(int, input().split()))\nB=[0]*(N+1)\nS=set()\nfor i in range(N,0,-1):\n  if sum(B[i::i])%2!=A[i]:\n    B[i]=1\n    S.add(i)\nprint(len(S))\nprint(*S)", "# 1\u304b\u3089N\u307e\u3067\u306e\u6570\u5b57\u305d\u308c\u305e\u308c\u306e\u7d04\u6570\u3092\u6c42\u3081\u308b\n# N\u304b\u3089(\u5927\u304d\u3044\u5024\u304b\u3089)\u898b\u3066\u3044\u304d\u30011\u3067\u3042\u308c\u3070\u5165\u308c\u308b\n# \u6570\u5b57i\u3092\u5165\u308c\u305f\u5834\u5408\u3001i\u306e\u7d04\u6570\u306e\u6570\u3092+1\n# \u305d\u308c\u305e\u308c\u306e\u6570\u306fdict\u3067\u4fdd\u6301\u3059\u308b\n\nN = int(input())\nA = list(map(int, input().split()))\n\nans = [0 for _ in range(N)]\n\nans_num = 0\nans_list = \"\"\nfor i in range(N):\n    tmp = N - i\n    s = 0\n    for j in range(tmp, N+1, tmp):\n        s += ans[j-1]\n\n    if s % 2 != A[tmp - 1]:\n        ans[tmp - 1] = 1\n        ans_num += 1\n        ans_list += str(tmp)\n        ans_list += \" \"\n\n\nprint(ans_num)\nprint(ans_list[:-1])", "n = int(input())\nalst = list(map(int, input().split()))\ndivisor_lst = [[0] for _ in range(n)]\nans = []\nfor i in range(2, n + 1):\n    for k in range(i * 2, n + 1, i):\n        divisor_lst[k - 1].append(i - 1)\nfor i in range(n - 1, -1, -1):\n    if alst[i] == 1:\n        for j in divisor_lst[i]:\n            alst[j] += 1\n            alst[j] %= 2\n        ans.append(i + 1)\nprint(len(ans))\nprint(*ans)", "n=int(input())\na=[0]+list(map(int,input().split()))\nb=[0]*(n+1)\nfor i in reversed(list(range(1,n+1))):\n    ans=0\n    for j in range(i,n+1,i):\n        ans+=b[j]\n    if ans%2==a[i]:\n        b[i]=0\n    else:\n        b[i]=1\nc_=[]\nfor c,d in enumerate(b):\n    if d==1:\n        c_.append(str(c))\nprint((len(c_)))\nprint((' '.join(c_)))\n        \n\n\n\n\n", "n=int(input())\n\na=list(map(int,input().split()))\n\nl=[-1 for _ in range(n)]\nfor i in reversed(range(1,n+1)):\n    si=0\n    j=2*i-1\n    while j<=n-1:\n        si+=l[j]\n        j+=i\n    si=si%2\n    if si==0:\n        l[i-1]=a[i-1]\n    elif a[i-1]==0:\n        l[i-1]=1\n    else:\n        l[i-1]=0\n\nb=[]\nfor i in range(n):\n    if l[i]==1:\n        b.append(i+1)\n\nprint(len(b))\nif len(b)!=0:\n    print(*b)", "N, *A = list(map(int, open(0).read().split()))\n\nA = [0] + A\nB = [0] * (N + 1)\nsum_B = 0\nfor i in range(N, 0, -1):\n    if sum(B[j] for j in range(i, N + 1, i)) % 2 != A[i]:\n        B[i] = 1\n        sum_B += 1\nprint(sum_B)\nprint((*[i for i, b in enumerate(B) if b]))\n", "n = int(input())\na = [int(x) for x in input().split()]\nm = []\nfor i in range(n, 0, -1):\n    t = 0\n    for j in range(i, n + 1, i):\n        t = t + a[j-1]\n    if t % 2 != a[i-1]:\n        if a[i-1] == 1:\n            a[i-1] = 0\n        else:\n            a[i-1] = 1\n    if a[i-1] == 1:\n        m.append(i)\nprint(len(m))\nfor i in m:\n    print(i)\n    print(\" \")", "N = int(input())\nA = list(map(int, input().split()))\nB = [0]*(N+1)\nfor i in range(N, 0, -1):\n    B[i] = sum(B[x] for x in range(i, N+1, i)) % 2 != A[i-1]\nprint(sum(B))\nprint(*[i for i, v in enumerate(B) if v])", "N = int(input())\nA = [0] + list(map(int, input().split()))\nAns = [0] * (N+1)\nfor i, a in zip(list(range(N, 0, -1)), A[:0:-1]):\n    n = 0\n    for aj in Ans[i*2::i]:\n        n ^= aj\n    Ans[i] = n ^ a\nAns = [i for i, a in enumerate(Ans[1:], 1) if a]\nprint((len(Ans)))\nprint((\" \".join(map(str, Ans))))\n", "#!/usr/bin/env python3\nn = int(input())\n*a, = list(map(int, input().split()))\nb = [0]*(n//2) + a[n//2:]\nfor i in reversed(list(range(n//2))):\n    b[i] = sum(b[(i+1)*(j+1)-1] for j in range(n//(i+1)))%2 ^ a[i]\nprint((sum(b)))\nprint((*[i+1 for i in range(n) if b[i]==1]))\n", "def main():\n    import sys\n\n    def input(): return sys.stdin.readline().rstrip()\n\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n    for i in range(n, 0, -1):\n        k = 1\n        flag = 0\n        while i*k <= n:\n            flag ^= a[i*k]\n            k += 1\n        if flag != a[i]:\n            a[i] ^= 1\n    ans = [i for i in range(n+1) if a[i] == 1]\n    if ans == []:\n        print(0)\n    else:\n        print(len(ans))\n        print(*ans)\n    \ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = [0]*(n+1)\n    ans = []\n    for i in range(n, 0, -1):\n        if sum(b[i::i])%2 != a[i-1]:\n            ans.append(i)\n            b[i] = (b[i]+1)%2\n    print(len(ans))\n    if len(ans):\n        print(*reversed(ans))\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\nres = [-1]*N\n\nfor i in reversed(range(1, N + 1)):\n    p = (N // i) * i\n    s = 0\n    while res[p - 1] != -1:\n        s += res[p - 1]\n        s %= 2\n        p -= i\n    res[p - 1] = (A[p - 1] - s) % 2\n\nprint(sum(res))\nfor i in range(N):\n    if res[i] == 1:\n        print(i + 1)", "n = int(input())\nA = list(map(int,input().split()))\n\ndp = [0]*(n+2)\nA = [0]+A\n\nfor i in range(n,0,-1):\n    tmp = 0\n    # print(i)\n    for j in range(i,n+1,i):\n        # print(i,j)\n        tmp += dp[j]\n    # print(111,tmp,A[i],i)\n    if A[i]!=(tmp%2):\n        # print(i)\n        dp[i] = 1\nl = []\n# print(dp)\nfor i in range(1,n+1):\n    if dp[i] == 1 :\n        l.append(i)\nif len(l) == 0 :print(len(l))\nelse:\n    print(len(l))\n    print(*l)", "N = int(input())\na = list(map(int,input().split()))\nans = [0 for i in range(N+1)]\n\nfor i in range(N,0,-1):\n    res = 0\n    for j in range(1,N+1):\n        if i*j>N:\n            break\n        else:\n            res += ans[i*j]\n      \n    if res%2 != a[i-1]:\n        ans[i] += 1\n        \nprint((sum(ans)))\nA = []\nfor i,v in enumerate(ans):\n    if v>0:\n        A.append(i)\n        \n        \nprint((*A))\n    \n\n\n\n\n", "N = int(input())\nA = [int(x) for x in input().split()]\n\nM = 0\nfor i in range(N, 0, -1):\n    t = 0\n    for j in range(i, N + 1, i):\n        t += A[j - 1]\n    if t % 2 != A[i - 1]:\n        A[i - 1] = (A[i - 1] + 1) % 2\n    if A[i - 1]:\n        M += 1\n\nprint(M)\nif M > 0:\n    for i in range(N):\n        if A[i]:\n            print(i + 1, \"\", end=\"\")\n    print()\n", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    a = list(map(int, input().split()))\n\n    b = []\n    box = [0] * (N + 1)\n    for i, r in zip(reversed(list(range(1, N + 1))), a[::-1]):\n        total_r = sum(box[j] for j in range(i, N + 1, i)) % 2\n        if r == 0 and total_r == 1:\n            box[i] = 1\n            b.append(i)\n        elif r == 1 and total_r == 0:\n            box[i] = 1\n            b.append(i)\n\n    M = len(b)\n    if M == 0:\n        print((0))\n    else:\n        print(M)\n        print((\" \".join(map(str, b))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    N = int(input())\n    A = reversed(list(map(int, input().split())))\n    balls = [0] * (N + 1)\n    for i, a in enumerate(A):\n        s = sum([balls[j] for j in range((N-i)*2, N+1, (N-i))])\n        if (a == 1 and s % 2 == 0) or (a == 0 and s % 2 == 1):\n            balls[N-i] = 1\n    print((sum(balls)))\n    idx = [str(i) for i, flag in enumerate(balls) if flag == 1]\n    print((' '.join(idx)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,*a=map(int,open(0).read().split())\nb=[0]*(n+1)\nfor i in range(1,n+1)[::-1]:\n b[i]+=(sum(b[j] for j in range(i,n+1,i))+a[i-1])%2\nprint(sum(b))\nprint(*[i for i in range(n+1) if b[i]>0])", "n = int(input())\na = list(map(int,input().split()))\n\nhako = [0]*n\n\nfor i in range(n,0,-1):\n    tmp = i\n    su = 0\n    while tmp<=n:\n        su += hako[tmp-1]\n        tmp += i\n    if su % 2 == a[i-1]:\n        continue\n    else:\n        hako[i-1] = 1\n\nprint(hako.count(1))\nfor i in range(n):\n    if hako[i] == 1:\n        print(i+1,end=\" \")", "N = int(input())\nlsa = list(map(int,input().split()))\nls = [0]*(N+1)\nfor i in range(N,0,-1):\n    k = 0\n    c = 2*i\n    while c <= N:\n        k += ls[c]\n        c += i\n    if k % 2 == lsa[i-1] % 2:\n        continue\n    ls[i] = 1\nls.pop(0)\nM = ls.count(1)\nprint(M)\nif M != 0:\n    ls1 = []\n    for i in range(N):\n        if ls[i] == 1:\n            ls1.append(i+1)\n    ls2 = [str(i) for i in ls1]\n    print(' '.join(ls2))", "n = int(input())\na = list(map(int, input().split()))\nans = [0]*n\nfor i in range(n-1, -1, -1):\n    count = 0\n    for j in range(i, n, i+1):\n        count += ans[j]\n    if count % 2 != a[i]:\n        ans[i] = 1\n\nif sum(ans) == 0:\n    print(0)\n    return\n\nprint(sum(ans))\nfor i in range(n):\n    if ans[i] == 1:\n        print(i+1, end=\" \")\n", "N = int(input())\nA = list(map(int, input().split()))\nA.insert(0, 0)\nball = [0]*(N+1)\nM = 0\nans = []\nfor i in reversed(range(1, N+1)):\n  j = 2\n  total = 0\n  while i*j <= N:\n    total += ball[i*j]\n    j += 1\n  if total%2 != A[i]:\n    ball[i] = 1\n    M += 1\nfor i in range(1, N+1):\n  if ball[i] == 1:\n    ans.append(i)\nprint(M)\nprint(*ans)", "icase=0\nif icase==0:\n    n=int(input())\n    a=[0]+list(map(int,input().split()))\nelif icase==3:\n    f=open(r\"C:\\Users\\nishi\\999atcoder\\ABCD040-151\\ABC134D\\testcase_12.in\")\n    ll=f.readline()\n    n=int(ll)\n    ll=f.readline()\n    a=[0]+list(map(int,ll.split()))\n    f.close()\nb=[0]*(n+1)\nfor i in range(n//2+1,n+1):\n    b[i]=a[i]\n#    print(i,a[i])\n    \nfor i in range(n//2,0,-1):\n    i2=i*2\n    asum=0\n    while i2<=n:\n        asum+=b[i2]\n        i2+=i\n    b[i]=(asum+a[i])%2\n#    print(i,b[i],a[i],asum)\n    \nprint(sum(b))\nfor i in range(1,len(b)):\n    if b[i]==1:\n        print(i,end=\" \")\nprint(\" \")", "N = int(input())\naaa = list(map(int, input().split()))\nM = 0\nbbb = [0] * (N + 1)\nfor i in range(N, 0, -1):\n    if (aaa[i-1] + sum(bbb[i::i])) % 2 == 1:\n        M += 1\n        bbb[i] = 1\nprint(M)\nif M > 0:\n    ans = [i for i, b in enumerate(bbb) if b]\n    print((*ans))\n", "N = int(input())\nA = [0] + list(map(int, input().split()))\n \nB = [0] * (N + 1)\nfor i in reversed(range(1, N + 1)):\n    ball = 0\n    base = i + 1\n \n    for j in range(i, N + 1, i):\n        ball += B[j]\n \n    if ball % 2 != A[i]:\n        B[i] = 1\n \nprint(sum(B))\nprint(*[i for i, b in enumerate(B) if b == 1], sep=' ')", "N,*aa = map(int, open(0).read().split())\n\nans = [None]*(N//2) + aa[N//2:]\n\nfor i in range(N//2,0,-1):\n    ans[i-1] = (sum(ans[2*i-1::i])%2)^aa[i-1]\n\np = sum(ans)\nprint(p)\nif p:\n    print(*(i+1 for i,v in enumerate(ans) if v))", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[3]:\n\n\nN = int(input())\na = list(map(int, input().split()))\n\n\n# In[6]:\n\n\nmylist = [0]*(N+1)\ni = N\nwhile i > 0:\n    idx = i\n    x = 0\n    while idx <= N:\n        x += mylist[idx]\n        idx += i\n    if x%2 != a[i-1]:\n        mylist[i] = 1\n    i -= 1\nans = []\nfor i in range(1,N+1):\n    if mylist[i] == 1:\n        ans.append(i)\nprint((len(ans)))\nif ans:\n    print((*ans))\n\n\n# In[ ]:\n\n\n\n\n", "#import math\n#import itertools\n#import numpy as np\n#from collections import deque\n# sys.setrecursionlimit(10 ** 6)\n#mod = 10 ** 9 + 7\n#INF = 10 ** 9\n#PI = 3.14159265358979323846\n\nINT = lambda: int(input())\nINTM = lambda: map(int,input().split())\nSTRM = lambda: map(str,input().split())\nSTR = lambda: str(input())\nLIST = lambda: list(map(int,input().split()))\nLISTS = lambda: list(map(str,input().split()))\n\ndef do():\n    n=INT()\n    A=LIST()\n    flg=True\n    la=len(A)\n    bool=[False]*(n+1)\n    B=[]\n    for i in range(la-1,-1,-1):\n        a=A[i]\n        s=i+1\n        temp=0\n        for j in range(n//s+1):\n            if j==0:\n                continue\n            if bool[j*s]:\n                temp+=1\n        \n        if temp%2!=a:\n            B.append(s)\n            bool[s]=True\n    \n    B=sorted(B)\n    print(len(B))\n    if len(B)!=0:\n        print(*B)\n\n            \n\ndef __starting_point():\n    do()\n__starting_point()", "n = int(input())\nlis =[0]+list(map(int, input().split()))\n\nb = [0]*(n+1)\n\nfor i in reversed(range(1,n+1)):\n    ball = 0\n    base = i+1\n\n    for j in range(i,n+1,i):\n        ball += b[j]\n    \n    if ball % 2 != lis[i]:\n        b[i] = 1\n\nprint(sum(b))\nprint(*[i for i ,b in enumerate(b) if b == 1], sep=' ')", "N = int(input())\na = list(map(int, input().split()))\n\n# \u7bb1\u306b\u66f8\u304b\u308c\u305f\u6570\u5b57\u304c\u5927\u304d\u3044\u9806\u306b\u30dc\u30fc\u30eb\u3092\u5165\u308c\u308b\u304b\u6c7a\u5b9a\u3057\u3066\u3044\u304f\u3068i\u4ee5\u4e0a\u306ei\u306e\u500d\u6570\n# \u306b\u3064\u3044\u3066\u306f\u3059\u3067\u306b\u30dc\u30fc\u30eb\u3092\u5165\u308c\u308b\u304b\u5165\u308c\u306a\u3044\u304b\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u308b\n\nans = [0] * N\nfor i in range(N - 1, -1, -1):\n    if (i == N - 1):\n        if (a[i] == 0):\n            continue\n        else:\n            ans[i] = 1\n            continue\n\n    elif (i == 0):\n        sum_a = sum(ans)\n    else:\n        sum_a = sum(ans[i::(i + 1)])\n\n    if (a[i] == 0 and sum_a % 2 == 0):\n        continue\n    elif(a[i] == 0 and sum_a % 2 == 1):\n        ans[i] = 1\n    elif (a[i] == 1 and sum_a % 2 == 0):\n        ans[i] = 1\n    elif (a[i] == 1 and sum_a % 2 == 1):\n        continue\n    else:\n        print((-1))\n        return\n\nM = 0\nnew_ans = []\nfor i in range(N):\n    if (ans[i] == 1):\n        M += 1\n        new_ans.append(i + 1)\n\nif (M == 0):\n    print(M)\n    return\nprint(M)\nprint((*new_ans))\n", "import sys\n\n\ndef IN_I(): return int(sys.stdin.readline().rstrip())\ndef IN_LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef IN_S(): return sys.stdin.readline().rstrip()\ndef IN_LS(): return list(sys.stdin.readline().rstrip().split())\n\n\nN = IN_I()\na = [0] + IN_LI()\nb = [0] * (N + 1)\nans = []\n\nfor i in range(N, 0, -1):\n    tmp = 0\n    for j in range(2 * i, N + 1, i):\n        tmp += b[j]\n    if tmp % 2 != a[i]:\n        b[i] = 1\n        ans.append(i)\nif len(ans) == 0:\n    print((0))\nelse:\n    print((len(ans)))\n    print((' '.join(map(str, ans))))\n"]