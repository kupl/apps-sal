["M = 10 ** 9 + 7\ndef solve1(x):\n    n = len(x)\n    x = int(x, 2)\n    ans = 0\n    for a in range(2 ** n):\n        for c in range(2 ** n):\n            b = a ^ x\n            d = c ^ x\n            if a < c and b > d:\n                ans += 1\n    return ans % M\n\ndef solve2(x):\n    return int(x, 2) * pow(2, (len(x) - 1), M) % M\n\nx = input()\n# print(solve1(x))\nprint(solve2(x))\n\n\n", "MODULO = 1000000007\n\ndef solve(mask):\n    n = len(mask)\n    return sum((2 ** k) * (4 ** (n - k - 1)) for k in range(n) if mask[k] == '1') % MODULO\n\ndef __starting_point():\n    mask = input()\n    complexity = solve(mask)\n    print(complexity)\n\n__starting_point()", "s = input()\nans = 0\nfor i, c in enumerate(s):\n    if c == '1':\n        ans += 1 << (2 * len(s) - i - 2)\nprint(ans % (10 ** 9 + 7))", "t = input()\nn, d = len(t), 1000000007\ndef f(k): return 0 if k == n else 2 * f(k + 1) + (pow(2, 2 * (n - k - 1), d) if t[k] == '1' else 0)\nprint(f(0) % d)", "#!/usr/bin/env python3\np = 1000000007\ns = input()\nprint(int(s,2) * pow(2, len(s) - 1) % p)\n", "mod = 10 ** 9 + 7\n\nx = input()[::-1]\nn = len(x)\n\nans = 0\n\nfor i, t in enumerate(x):\n    if t == '1':\n        ans = (ans + pow(2, n - 1 + i)) % mod\n\nprint(ans)", "mod = int(1e9 +7)\ns = input()\ns = s[::-1]\nans = 0\nfor i in range(len(s)):\n\tans *= 2\n\tif s[i] == '1':\n\t\tans += pow(2,2*i,mod)\n\tans %= mod\nprint(ans)", "s,m,ans=input()[::-1],int(1e9+7),0\nfor i in range(len(s)):\n  if s[i]=='1':ans=(ans+pow(2,i,m))%m\nprint(ans*pow(2,len(s)-1,m)%m)", "s,m,ans=input()[::-1],int(1e9+7),0\nfor i in range(len(s)):\n  ans*=2\n  if s[i]=='1':ans+=pow(2,2*i,m)\n  ans%=m\nprint(ans)", "# coding = utf-8\ndiv = 1000000007\ns = input()\nn = len(s)\nans = 0\n\nmi = [1]\n\nfor i in range(100):\n\tmi.append(mi[-1]*2%div)\n\nfor i in range(n):\n\tif s[n-1-i] == '1':\n\t\tret = mi[i]*mi[i]%div*mi[n-1-i]%div\n\t\tans = (ans+ret)%div\nprint(ans)\n", "MOD = 1000000007\n\ns = input()\nn = len(s)\np = [1]\nfor i in range(301):\n  p.append((2*p[-1]) %MOD)\n\n\nres = 0\nm = n\ng = 0\nfor i in range(n):\n  if s[i] == '1':\n    res += (p[g] * (p[2*m-2]%MOD)) % MOD\n    res = res % MOD\n  g += 1\n  m -= 1\n  \nprint(res)", "p = 1000000007\ns = input()\nprint(int(s,2) * pow(2, len(s) - 1) % p)", "s = str(input())\na = len(s)\nx = 2**(a - 1)\nx %= 1000000007\ny = 0; z = 0\nfor i in range(a - 1, -1, -1):\n    if(s[i] == \"1\"):\n        z += (2**y)\n        z %= 1000000007\n    y += 1\nprint((x * z) % 1000000007)", "s=input()\na=int(s,2)\nn=len(s)\nprint((a*(2**(n-1)))%1000000007)\n\n", "p = 1000000007\n\ns = input()\n\nprint(int(s,2) * pow(2, len(s) - 1) % p)", "s = input()\nres = pow(2, len(s)-1)*(int(s, 2))\nprint (res%1000000007)", "x =input()\nprint((int(x,2) << (len(x) - 1))%1000000007)", "MOD = 1000000007\nstr = input()\nl = len(str)\ndef b2d(str):\n\tans = 0\n\tcnt = 0\n\tstr=str[::-1]\n\tfor k in str:\n\t\tif k == '1':\n\t\t\tans += pow(2,cnt)\n\t\t\tans %= MOD\n\t\tcnt+=1\n\treturn ans\n\nprint((b2d(str)*pow(2,l-1))%MOD)\n", "MOD = int(1e9 + 7)\nx = input()[::-1]\nn = len(x)\nres = 0\nfor i, t in enumerate(x):\n    if t == '1':\n        res = (res + (1 << (n - 1 + i))) % MOD\nprint(res)\n", "pri=pow(10,9)+7\n\ns=input()\nm=len(s)\nval=int(s,2)\nprint((pow(2,m-1,pri)*val)%pri)\n"]