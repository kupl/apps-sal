["g = \"ACTG\"\n\ndef dist(a, b):\n    p = abs(ord(a) - ord(b))\n    return min(p, 26 - p)\n\ndef price(s):\n    return sum(dist(x, y) for x, y in zip(g, s))\n\nn = int(input())\ns = input()\nans = 100000\nfor i in range(len(s) - 3):\n    ans = min(ans, price(s[i:i+4]))\nprint(ans)\n", "n = int(input())\ns = input()\ngen = 'ACTG'\nans = 10000000000\nfor i in range(n - 3):\n    t = s[i:i+4]\n    cnt = 0\n    for i in range(4):\n        x = abs(ord(gen[i]) - ord(t[i]))\n        cnt += min(x, 26 - x)\n    ans = min(ans, cnt)\nprint(ans)", "n=int(input())\ns=input()\ng='ACTG'\nm = 10000000\nfor i in range(n - 3):\n\tt = 0\n\tfor j in range(4):\n\t\tk = abs(ord(s[i + j]) - ord(g[j]))\n\t\tt += min(k, 26 - k)\n\tm = min(m, t)\nprint(m)", "n = int(input())\ns = input()\nA,C,T,G = [], [], [], []\n\ndef dis(n, c):\n    return min((ord(n) - ord(c)) % 26, (ord(c) - ord(n)) % 26)\n\nfor c in s:\n    A.append(dis(c, 'A'))\n    C.append(dis(c, 'C'))\n    T.append(dis(c, 'T'))\n    G.append(dis(c, 'G'))\n\nres = 10 ** 1000\nfor i in range(n - 3):\n    res = min(res, A[i] + C[i + 1] + T[i + 2] + G[i + 3])\nprint(res)\n", "n = int(input())\nt = list(input())\n\ndef dist(a, b):\n\treturn min((ord(a) - ord(b) + 26) % 26, (ord(b) - ord(a) + 26) % 26)\n\nm = 'ACTG'\n\ndef solve(s):\n\tres = 0\n\tfor i in range(4):\n\t\tres += dist(t[s + i], m[i])\n\treturn res\n\nans = 30 * n\nfor s in range(n - 3):\n\tans = min(ans, solve(s))\n\nprint(ans)", "import getpass\nimport sys\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n\nimport math\nimport string\nimport re\nimport math\nimport random\nfrom decimal import Decimal, getcontext\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn = ria()[0]\nst = input()\nmn = 10 ** 9\nfor i in range(len(st) - 3):\n    cr = st[i:i + 4]\n    crs = 0\n    for j in range(4):\n        crs += min([abs(ord(cr[j]) - ord('ACTG'[j])-26),abs(ord(cr[j]) - ord('ACTG'[j])+26),abs(ord(cr[j]) - ord('ACTG'[j]))])\n    mn = min(mn, crs)\nprint(mn)\n", "input()\ns = input()\n\ndef min_d(a, b):\n    a, b = ord(a), ord(b)\n    a, b = a - b, b - a\n    if a < 0:\n        a += 26\n    if b < 0:\n        b += 26\n    return min(a, b)\n\nans = 999\nfor a, b, c, d in zip(s, s[1:], s[2:], s[3:]):\n    ans = min(ans, sum(min_d(x, y) for x, y in ((a, 'A'), (b, 'C'), (c, 'T'), (d, 'G'))))\n\nprint(ans)\n", "def main():\n    n = int(input())\n    s = input()\n    g = \"ACTG\"\n    mi = 1000000000\n    for i in range(n - 3):\n        a = s[i: i + 4]\n        arr = [ord(g[i]) - ord(a[i]) for i in range(4)]\n        kek = [ord(a[i]) - ord(g[i]) for i in range(4)]\n        ans = 0\n        for i in range(4):\n            if arr[i] < 0: arr[i] += 26\n            if kek[i] < 0: kek[i] += 26\n            ans += min(arr[i], kek[i])\n        mi = min(mi, ans)\n    print(mi)\n    return 0\nmain()", "n=int(input())\ns=input()\nfor i in range(0,n-3):\n    if i==0:\n        ans=min(abs(ord('A')-ord(s[i])),26-abs(ord('A')-ord(s[i]))) +min(abs(ord('C')-ord(s[i+1])),26-abs(ord('C')-ord(s[i+1]))) +min(abs(ord('T')-ord(s[i+2])),26-abs(ord('T')-ord(s[i+2]))) +min(abs(ord('G')-ord(s[i+3])),26-abs(ord('G')-ord(s[i+3])))\n    else :\n        ans=min(ans,min(abs(ord('A')-ord(s[i])),26-abs(ord('A')-ord(s[i]))) +min(abs(ord('C')-ord(s[i+1])),26-abs(ord('C')-ord(s[i+1]))) +min(abs(ord('T')-ord(s[i+2])),26-abs(ord('T')-ord(s[i+2]))) +min(abs(ord('G')-ord(s[i+3])),26-abs(ord('G')-ord(s[i+3]))))\nprint(ans)\n", "n = int(input())\ns = input()\n\nalp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef make(a, b):\n    if ord(b) < ord(a):\n        a, b = b, a\n    return min(ord(b) - ord(a), ord('Z') - ord(b) + ord(a) - ord('A') + 1)\n\ndef change(x):\n    final = 'ACTG'\n    ans = 0\n    c = 0\n    for i in x:\n        ans += make(i, final[c])\n        c+=1\n    return ans\nans = 10**5\n\nfor i in range(n):\n    if i+3<n:\n        cur = s[i:i+4]\n        ans = min(ans, change(cur))\nprint(ans)\n", "f = 'ACTG'\nn = int(input())\ns = input()\nans = n * 26\nfor i in range(n - 3):\n    s1 = s[i:i+4]\n    cnt = 0\n    for i in range(4):\n        cnt += min(min(abs(ord(f[i]) - ord(s1[i])), ord('Z') - ord(s1[i]) + 1 + ord(f[i]) - ord('A')), ord(s1[i]) - ord('A') + 1 + ord('Z') - ord(f[i]))\n    ans = min(ans, cnt)\nprint(ans)", "n = int(input())\ns = input()\ng = 'ACTG'\nres = float('inf')\nfor i in range(n - 3):\n    val = 0\n    for j in range(4):\n        kek = abs(ord(g[j]) - ord(s[i + j]))\n        val += min(kek, 26 - kek)\n    res = min(res, val)\nprint(res)\n", "n = int(input())\n# = map(int, input().split())\n# = list(map(int, input().split()))\ns = input()\nans = 10 ** 10\nfor i in range(len(s) - 3):\n    p = 0\n    a = abs(ord(s[i]) - ord('A'))\n    a = min(a, 26 - a)\n    p += a\n    a = abs(ord(s[i + 1]) - ord('C'))\n    a = min(a, 26 - a)\n    p += a\n    a = abs(ord(s[i + 2]) - ord('T'))\n    a = min(a, 26 - a)\n    p += a\n    a = abs(ord(s[i + 3]) - ord('G'))\n    a = min(a, 26 - a)\n    p += a\n    ans = min(p, ans)\nprint(ans)\n", "alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ndef distance(char1,char2):\n\tx = abs(alphabet.index(char1)-alphabet.index(char2))\n\treturn min(x,26-x)\n\ndef changesneeded(s):\n\treturn sum([distance(s[i],'ACTG'[i]) for i in range(4)])\n\ndef f(s):\n\tbest = 99999999999\n\tfor i in range(len(s)-3):\n\t\tbest = min(best,changesneeded(s[i:i+4]))\n\treturn best\n\nn = int(input())\nprint(f(input()))", "genome = \"ACTG\"\n\n\ndef diff(u):\n    x = 0\n    for i in range(4):\n        a, b = ord(genome[i]) - ord('A'), ord(u[i]) - ord('A')\n        x += min(abs(a - b),\n                 abs(26 - max(a, b) + min(a, b)))\n    return x\n\n\nn = int(input())\ns = input()\n\nans = float(\"inf\")\n\nfor i in range(len(s) - 3):\n    ans = min(ans, diff(s[i:i + 4]))\n\nprint(ans)\n", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\nn=nn()\n\ns=input()\nmdiff=4*26\ntarget='ACTG'\nfor i in range(n-3):\n\tdiff=0\n\tfor j in range(0,4):\n\t\td=min(abs(ord(target[j])-ord(s[i+j])),26-abs(ord(target[j])-ord(s[i+j])))\n\n\t\tdiff+=d\n\tmdiff=min(mdiff,diff)\n\nprint(mdiff)\n", "n = int(input())\ns = input()\nres = 10**8\nr = 'ACTG'\ndef f(a, b):\n    u = 0\n    for i in range(4):\n        u += c(a[i], b[i])\n    return u\ndef c(a, b):\n    if a > b:\n        return c(b, a)\n    return min(ord(b) - ord(a), ord('Z') - ord(b) + ord(a) - ord('A') + 1)\nfor i in range(4, len(s) + 1):\n    t = s[i - 4:i]\n    res = min(res, f(t, r))\nprint(res)\n", "def check(s):\n    ss='ACTG'\n    ans=0\n    for i in range(4):\n        x=abs(ord(s[i])-ord(ss[i]))\n        ans+=min(x,26-x)\n        # print(ans)    \n    return ans    \n        \n        \nn=int(input())\ns=input()\nma=10**9\nfor i in range(n-3):\n    ma=min(ma,check(s[i:i+4]))\nprint(ma)   \n    \n    \n", "n = int(input())\ns = input()\ngenome = 'ACTG'\n\n\ndef cnt(a, b):\n    a, b = ord(a) - 65, ord(b) - 65\n    return min(abs(b - a), 26 - abs(b - a))\nmn = 1 << 30\nfor i in range(n - 3):\n    mn = min(mn, sum([cnt(s[i + j], genome[j]) for j in range(4)]))\nprint(mn)\n", "input()\ns = input()\nn = len(s)\n\na = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n\ndef f(x, y):\n    x, y = min(x, y), max(x, y)\n    return min(a.index(y) - a.index(x), a.index(x) + len(a) - a.index(y))\n\n\nz = 10**18\nfor i in range(n - 4 + 1):\n    c = f(s[i], \"A\") + f(s[i + 1], \"C\") + f(s[i + 2], \"T\") + f(s[i + 3], \"G\")\n    z = min(z, c)\n\nprint(z)\n", "def __starting_point():\n\tn = int(input())\n\tarr = input()\n\tresult = -1\n\tcompstr = 'ACTG'\n\tfor i in range(len(arr) - 3):\n\t\tsubstr = arr[i:i+4]\n\t\ttemp = 0\n\t\tfor j in range(len(substr)):\n\t\t\tx = abs(ord(compstr[j]) - ord(substr[j]))\n\t\t\tif x > 13:\n\t\t\t\tx = 26 - x\n\t\t\ttemp += x\n\t\tif result == -1 or result > temp:\n\t\t\tresult = temp\n\tprint(result)\n__starting_point()", "N = int(input())\nS = [ord(c) for c in input()]\nTS = [ord(c) for c in 'ACTG']\nans = 1000000000000\nfor i in range(0, N-4+1):\n    ca = 0\n    for j in range(4):\n        dl = abs(S[i+j] - TS[j])\n        ca += min(dl, 26-dl)\n    ans = min(ans, ca)\nprint(ans)\n", "n = int(input())\nstring = input()\n\nchaine = \"ACTG\"\nmini = float(\"inf\")\nfor i in range(len(string) - 3):\n    mini =  min(mini, sum([min( abs(ord(string[ind]) - ord(a)), 26 -  abs(ord(string[ind]) - ord(a))) for a, ind in zip(chaine, list(range(i, i+4)))]))\n\nprint(mini)\n", "n = int(input())\ns = input()\n\ndef dif(x, a):\n\tnum1 = ord(x) - ord(\"A\")\n\tnum2 = ord(a) - ord(\"A\")\n\treturn min(abs(num1 - num2), 26 - abs(num1 - num2))\n\nA = []\nfor x in s:\n\tB = [dif(x, \"A\"), dif(x, \"C\"), dif(x, \"T\"), dif(x, \"G\")]\n\tA.append(B)\n\nans = 10**10\nfor i in range(n - 3):\n\tm = A[i][0] + A[i + 1][1] + A[i + 2][2] + A[i + 3][3]\n\tif m < ans:\n\t\tans = m\nprint(ans)\n"]