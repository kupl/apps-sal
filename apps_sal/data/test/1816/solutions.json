["k=0\n\nd = [0] * 200005\nx = int(input())\np = list(map(int, input().split(' ')))\nfor i in range(len(p)):\n    d[p[i]] = i\n\nfor i in range(1, x):\n    k += abs(d[i+1] - d[i])\n\nprint(k)\n", "n = int(input())\na = [int(i) for i in input().split()]\nb = [0 for i in range(n)]\nfor i, j in enumerate(a):\n    b[j-1] = i\nsum = 0\nfor i in range(1, n):\n    sum += abs(b[i]-b[i-1])\nprint(sum)\n\n", "import sys\n#fin = open(\"ecr4b.in\", \"r\")\nfin = sys.stdin\n\nn = int(fin.readline())\nfile = [None] * n\ndisk = tuple(map(int, input().split()))\nfor i in range(n):\n    file[disk[i] - 1] = i\nctime = 0\nfor i in range(1, n):\n    ctime += abs(file[i] - file[i - 1])\nprint(ctime)", "n=int(input())\nthing=input().split(' ')\n\nl=[]\nfor i in range (n):\n    l.append(int(thing[i]))\n\nm=[-1]*n\n\nfor i in range (n):\n    m[l[i]-1]=i\n\nt=0\nfor i in range (n-1):\n    t+=abs(m[i]-m[i+1])\n\nprint(t)\n", "n = int(input())\nlst = list(map(int, input().split()))\nd = []\nfor i in range(n):\n    d.append((lst[i], i))\nd.sort()    \ns = 0\nfor i in range(1, n):\n    s += abs(d[i][1] - d[i - 1][1])\nprint(s)    \n    \n", "n = int(input())\nf = input().split(\" \")\npos = [0 for i in range(n)]\nfor i in range(n):\n    pos[int(f[i])-1]=i\nret = 0\nfor i in range(n-1):\n    ret += abs(pos[i+1]-pos[i])\nprint(ret)\n    \n", "n = int(input())\na = [0] * n\nfor i, x in enumerate(map(int, input().split())):\n    a[x - 1] = i\nprint(sum(abs(a[i + 1] - a[i]) for i in range(n - 1)))", "n = int(input())\nindex = [0 for i in range(n + 1)]\na = list(map(int, input().split()))\nfor i in range(n):\n    index[a[i]] = i\n\nans = 0\nlab = 1\nwhile lab != n:\n    ans += abs(index[lab] - index[lab + 1])\n    lab += 1\n    \nprint(ans)", "import math\n\nn = int(input())\nf = [int(x) for x in input().split()]\nl = list(sorted(enumerate(f), key = lambda x : x[1]))\ns = 0\nfor i in range(1,n):\n    s += abs(l[i][0] - l[i-1][0])\nprint(s)\n    \n", "n = int(input())\n\nc = [0 for i in range(n)]\n\nf = list([int(x) - 1 for x in input().split()])\n\nfor i in range(n):\n    c[f[i]] = i\n\nsum = 0\nfor i in range(n - 1):\n    sum += abs(c[i] - c[i + 1])\n\nprint(sum)\n", "input()\nl = list(map(int, input().split()))\nans = 0\nl2 = [0]*int(2e5+5)\nfor i in range(len(l)):\n    l2[l[i]] = i+1\nfor i in range(1, len(l)):\n    ans += abs(l2[i]-l2[i+1])\nprint(ans)\n", "def solve():\n    N = int(input())\n    F = list(map(int, input().split()))\n    G = []\n\n    for i in range(N):\n        G.append((F[i], i))\n\n    G.sort()\n\n    p = G[0][1]\n    ans = 0\n\n    for f, np in G:\n        ans += abs(np - p)\n        p = np\n\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n=int(input())\na=[];v=[];o=0\na=list(map(int,input().split()))\nfor i in range(0,n+1):\n    v.append(0)\nfor i in range(n):\n    v[a[i]]=i+1\nfor i in range(1,n):\n    o+=abs(v[i]-v[i+1])\nprint(o)\n    \n", "n = int(input())\nf = list(map(int, input().split()))\na = [None] * n\nfor i in range(n):\n    a[f[i] - 1] = i\nans = sum(abs(a[i] - a[i - 1]) for i in range(1, n))\nprint(ans)\n", "n=int(input())\nls=list(map(int,input().split()))\narr=[0]*n\nfor x in range(n):\n\tarr[ls[x]-1]=x\nsu=0\nfor x in range(1,n):\n\tsu+=abs(arr[x]-arr[x-1])\nprint(su)", "##n,p,q=map(int,input().split())\n##\n##s=input()\n##\n##l=list()\n##\n##while len(s):\n##    if len(s)%p!=0 and len(s)>=q:\n##        l.append(s[0:q])\n##        s=s[q:]\n##    elif len(s)%p==0 and len(s)>=p:\n##        l.append(s[0:p])\n##        s=s[p:]\n##    else:\n##        break\n##if len(s):\n##    print(-1)\n##else:\n##    print(len(l))\n##    for x in l:\n##        print(x)\n\nn=input()\ns=list(input().split())\n\ni=1\nl=list()\nfor x in s:\n    l.append((int(x),i))\n    i+=1\nl.sort()\nans=0\nfor i in range(1,len(l)):\n    ans+=abs(l[i][1]-l[i-1][1])\n    \nprint(ans)\n", "# Input starts.\nn = int(input())\nf = [int(s) for s in str(input()).split()]\n\n# print('n', n)\n# print('f', f)\n\n# Input ends.\n\n# Solution starts.\nsortedF = [None] * n\nfor i in range(n):\n    sortedF[f[i] - 1] = i\n\n# print('sortedF', sortedF)\n\nmoves = 0\nfor i in range(n - 1):\n    moves += abs(sortedF[i + 1] - sortedF[i])\nprint(moves)\n\n# print('moves', moves)\n\n# Solution ends.\n", "import sys\nn=int(sys.stdin.readline())\nl=list(map(int,sys.stdin.readline().split()))\nk=0\nq=0\nz=[0]*n\nfor i in range(n):\n    z[l[i]-1]=i\nans=0\nwhile k<n-1:\n    ans+=abs(z[k]-z[k+1])\n    k+=1\nprint(ans)", "# import sys \n# import os\n# import time\n# from DataStructs import FenwickTree, SegTree, DWGraph\nfrom _ast import arg, GtE\nwithFile = 0\n\nif(withFile == 1):\n    fin     = open('input.txt', 'r')\n    fout    = open('output.txt', 'w')\n\ndef getl():\n    nonlocal withFile\n    if(withFile == 0):\n        return input()\n    else:\n        return fin.readline()\n    \ndef printl(s):\n    nonlocal withFile\n    if(withFile == 0):\n        print(s)\n    else:\n        fout.write(str(s))\n\ndef get_arr():\n    nonlocal withFile\n    x = getl().split(' ')\n    if(x[-1] == ''):\n        x.pop()\n    return list(map(int, x))\n\ndef __starting_point():\n#     die(12)\n    n = get_arr()[0]\n    a   = sorted([[x, i] for i, x in enumerate(get_arr())])\n    res = 0\n    for i in range(1, len(a)):\n        res += abs(a[i][1] - a[i-1][1])\n    print(res)\n    \nif(withFile == 1):\n    fin.close()\n    fout.close()\n__starting_point()", "a,b,t=int(input()),list(map(int,input().split())),0\nc=[0]*a\nfor i in range(a):c[b[i]-1]=i\nfor i in range(a-1):t+=abs(c[i]-c[i+1])\nprint(t)", "import sys\nif False:\n\tinp = open('A.txt', 'r')\nelse:\n\tinp = sys.stdin\n\nn = int(inp.readline())\nsectors = list(zip(list(map(int, inp.readline().split())), [x+1 for x in range(n)]))\n\nsectors.sort(key = lambda x: x[0])\nans = 0\nfor i in range(n-1):\n\tans += max(sectors[i][1]-sectors[i+1][1], sectors[i+1][1] - sectors[i][1])\nprint(ans)\n\n\n\n\n", "from bisect import bisect\nfrom itertools import permutations,combinations\nn=int(input())\na=list(map(int,input().split()))\n\ncnt=1\nb = []\nfor x in a:\n    b.append([x,cnt])\n    cnt+=1\nb.sort()\nres = 0\nfor i in range(1,n):\n    res+=abs(b[i][1]-b[i-1][1])\nprint(res)", "n=int(input())\nf=list(map(int,input().split()))\nt=[]\nfor i in range(n):\n    t.append((f[i],i))\nt=sorted(t,key=lambda x:x[0])\nans=0\nfor i in range(1,n):\n    ans+=abs(t[i][1]-t[i-1][1])\nprint(ans)", "n = int(input())\nlocation = {int(val): i for i, val in enumerate(input().split())}\nresult = sum((abs(location[i] - location[i-1]) for i in range(2, n+1)))\nprint(result)\n"]