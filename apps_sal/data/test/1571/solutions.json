["S = input()\nT = input()\nbase = 998244353\ndp = [[0 for _ in range(len(S) + 1)] for _ in range(len(S) + 1)]\nfor j in range(1, len(S) + 1):\n    if (j > len(T)) or (S[0] == T[j - 1]):\n        dp[1][j] = 2\nfor i in range(2, len(S) + 1):\n    for j in range(1, len(S) - i + 1 + 1):\n        if (j > len(T)) or (S[i - 1] == T[j - 1]):\n            dp[i][j] = (dp[i][j] + dp[i - 1][j + 1]) % base\n        if (j + i - 1 > len(T)) or (S[i - 1] == T[j + i - 1 - 1]):\n            dp[i][j] = (dp[i][j] + dp[i - 1][j]) % base\nans = 0\nfor i in range(len(T), len(S) + 1):\n    ans = (ans + dp[i][1]) % base\nprint(ans)", "import sys\nreadline = sys.stdin.readline\n\nS = input()\nT = '*' + input()\nn, m = len(S), len(T)\nmod = 998244353\ndp = [[0]*(n+5) for _ in range(n+5)]\nfor i in range(n+1):\n    dp[i][i+1] = 1\n\nfor i, c in enumerate(S, start=1):\n    for l, r in zip(list(range(0, n+1)), list(range(i, n+2))):\n        if l >= m or 0 < l and T[l] == c:\n            dp[l-1][r] += dp[l][r] % mod\n        if r >= m or T[r] == c:\n            dp[l][r+1] += dp[l][r] % mod\n\nprint(sum(dp[0][m:]) % mod)\n", "import sys\n\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef main():\n    md = 998244353\n    s = SI()\n    t = SI()\n    sn = len(s)\n    tn = len(t)\n    # dp[i][j]...s\u3092i\u756a\u76ee\u307e\u3067\u307f\u305f\u3068\u304d\u306et[j:j+i]\u306e\u4f5c\u308a\u65b9\n    dp = [[0] * sn for _ in range(sn + 1)]\n    for j in range(sn): dp[1][j] = 2 if j >= tn or t[j] == s[0] else 0\n    for i, c in enumerate(s[1:], 1):\n        for j in range(sn):\n            pre = dp[i][j]\n            if pre == 0: continue\n            # \u5de6\u306b\u8ffd\u52a0\u3059\u308b\u5834\u5408\n            if j > 0 and (j - 1 >= tn or t[j - 1] == c):\n                dp[i + 1][j - 1] = (dp[i + 1][j - 1] + pre) % md\n            # \u53f3\u306b\u8ffd\u52a0\u3059\u308b\u5834\u5408\n            if j + i < sn and (j + i >= tn or t[j + i] == c):\n                dp[i + 1][j] = (dp[i + 1][j] + pre) % md\n    ans = sum(dp[i][0] for i in range(tn, sn + 1)) % md\n    print(ans)\n\nmain()\n"]