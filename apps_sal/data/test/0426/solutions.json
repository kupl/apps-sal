["n, k = list(map(int, input().split()))\ns = list(input())\nif len(s) == 1 and k:\n\tprint(0)\n\treturn\nif s[0] != '1' and k:\n\tk -= 1\n\ts[0] = '1'\nfor i in range(1, len(s)):\n\tif s[i] != '0' and k:\n\t\ts[i] = '0'\n\t\tk -= 1\n\tif not k:\n\t\tbreak\nprint(''.join(s))\n\n", "n, k = map(int, input().split())\ns = input()\n\nif k == 0:\n    print(s)\n    return\nif n == 1:\n    print(0)\n    return\n\nfirst = True\nans = []\ncnt = 0\nfor i in s:\n    if first and i != '1' and cnt < k:\n        print(1, end='')\n        cnt += 1\n    elif not first and i != '0' and cnt < k:\n        print(0, end='')\n        cnt += 1\n    else:\n        print(i, end='')\n    \n    first = False\n", "n, k = list(map(int, input().split()))\nu = list(map(int, list(input())))\nif k == 0:\n    print(''.join(map(str, u)))\n    return\nif n == 1:\n    print(0)\n    return\nif u[0] != 1:\n    u[0] = 1\nelse:\n    k += 1\ni = 1\nwhile i < k and i < n:\n    if u[i] != 0:\n        u[i] = 0\n    else:\n        k += 1\n    i += 1\nprint(''.join(map(str, u)))\n", "# -*- coding: utf-8 -*-\nimport sys\nfrom operator import itemgetter\nfrom fractions import gcd\nfrom math import ceil, floor, sqrt\nfrom copy import deepcopy\nfrom collections import Counter, deque\nimport heapq\nfrom functools import reduce\nsys.setrecursionlimit(200000)\ninput = sys.stdin.readline\ndef ii(): return int(input())\ndef mi(): return map(int, input().rstrip().split())\ndef lmi(): return list(map(int, input().rstrip().split()))\ndef fi(): return float(input())\ndef mfi(): return map(float, input().rstrip().split())\ndef lmfi(): return list(map(float, input().rstrip().split()))\ndef li(): return list(input().rstrip())\ndef debug(*args, sep=\" \", end=\"\\n\"): print(\"debug:\", *args, file=sys.stderr, sep=sep, end=end) if not __debug__ else None\ndef exit(*arg): print(*arg); return\n# template\n\n\ndef main():\n    n, k = mi()\n    s = li()\n    if k == 0:\n        print(''.join(s))\n        return\n    if n == 1:\n        print(0)\n        return\n    cnt = 0\n    if s[0] != \"1\":\n        s[0] = \"1\"\n        cnt += 1\n    i = 1\n    while cnt < k:\n        if i > n - 1:\n            break\n        else:\n            if s[i] != \"0\":\n                s[i] = \"0\"\n                cnt += 1\n        i += 1\n    print(''.join(s))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n#\n# a, b, c, d = sorted(list(map(int, input().split())))\n# if a + b == c + d or a + c == b + d or a + d == b + c:\n#     print(\"YES\")\n# else:\n#     print(\"NO\")\nn, k = map(int, input().split())\ns = input()\nif len(s) == 1 and k > 0:\n    print(0)\n    return\nif s[0] != \"1\":\n    if k > 0:\n        k -= 1\n        print(\"1\", end=\"\")\n    else:\n        print(s[0], end=\"\")\nelse:\n    print(\"1\", end=\"\")\nfor i in s[1:]:\n    if i == \"0\":\n        print(0, end=\"\")\n    else:\n        if k > 0:\n            k -= 1\n            print(0, end=\"\")\n        else:\n            print(i, end=\"\")\n", "import random\nimport sys\n\n\ndef get_many_ints():\n    return list(map(int, input().split()))\n\n\ndef get_int():\n    return int(input())\n\n\nN, K = get_many_ints()\nS = list(input())\n\nif N == 1 and K > 0:\n    print(\"0\")\n    return\n\nif K > 0:\n    if S[0] != \"1\":\n        S[0] = \"1\"\n        K -= 1\n    for i in range(1, N):\n        if S[i] != \"0\" and K > 0:\n            K -= 1\n            S[i] = \"0\"\n\nprint(\"\".join(S))\n", "n,k=map(int,input().split())\ns=input()\nif n==1 and k>=1:\n    print(\"0\")\n    quit()\nfor i in range(n):\n    if i==0:\n        if s[0]=='1':\n            print(s[0],end=\"\")\n            continue\n        elif k>0:\n            print(1,end=\"\")\n            k-=1\n        else:\n            print(s[i],end=\"\")\n    else:\n        if s[i]=='0':\n            print(0,end=\"\")\n            continue\n        elif k>0:\n            print(0,end=\"\")\n            k-=1\n        else:\n            print(s[i],end=\"\")\n", "import sys\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\ndef write(*args, sep=\" \"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nn, k = list(map(int, input().split()))\ns = input()\n\nif n == 1 and k > 0:\n  print('0')\n  return\n\nif s[0] == '1':\n  write('1', sep=\"\")\nelif (s[0] != '1' and k != 0):\n  write('1', sep=\"\")\n  k -= 1\nelse:\n  write(s[0], sep=\"\")\n\n\nfor i in s[1:]:\n  if i == '0':\n    write('0', sep=\"\")\n  elif (i != '0' and k != 0):\n    write('0', sep=\"\")\n    k -= 1\n  elif i != '0' and k == 0:\n    write(i, sep=\"\")\n", "a = list(map(int, input().split()))\nn = a[0]\nk = a[1]\ns = input()\ns1 = ''\nchanged = 0\nfor i in range(len(s)):\n    if changed >= k:\n        for j in range(i, len(s)):\n            s1 += s[j]\n        break\n    if i == 0 and i < len(s) - 1:\n        if s[i] != '1':\n            s1 += '1'\n            changed += 1\n        else:\n            s1 += s[i]\n    else:\n        if s[i] != '0':\n            s1 += '0'\n            changed += 1\n        else:\n            s1 += s[i]\nprint(s1)", "n, k = map(int, input().split())\ns = list(input())\nif not k:\n    print(''.join(s))\n    return\n\nif n == 1:\n    print(0)\n    return\n\nif s[0] != '1':\n    s[0] = '1'\n    k -= 1\nif not k:\n    print(''.join(s))\n    return\n\nfor i in range(1, n):\n    if s[i] == '0':\n        continue\n    s[i] = '0'\n    k -= 1\n    if not k:\n        break\n    \nprint(''.join(s))", "n,s=[int(x) for x in input().split()]\na=[int(x) for x in list(input())]\ncounter=0\nfor i in range(n):\n    if counter==s:\n        break\n    if i==0:\n       if a[i]!=1:\n           a[i]=1\n           counter+=1\n    else:\n        if a[i]!=0:\n            a[i]=0\n            counter+=1\nif len(a)==1 and s>=1:\n    print(0)\nelse:    \n    for item in a:\n        print(item,end='')\n", "import math\n\ndef main():\n    (n, k) = tuple([int(x) for x in input().split()])\n    s = input()\n\n    if n == 1:\n        opt = '0'\n    else:\n        opt = '1' + '0' * (n - 1)\n\n    r = []\n    left = k\n    for i in range(n):\n        if s[i] != opt[i] and left > 0:\n            left -= 1\n            r.append(opt[i])\n        else:\n            r.append(s[i])\n\n    print(''.join(r))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def gns():\n    return list(map(int,input().split()))\nn,k=gns()\ns=input()\n\nif k==0:\n    print(s)\n    quit()\nif len(s)==1:\n    print(0)\n    quit()\n\ns=[int(x) for x in s]\nif s[0]>1:\n    k-=1\n    s[0]=1\nfor i in range(1,n):\n    if k==0:\n        break\n    if s[i]==0:\n        continue\n    s[i]=0\n    k-=1\nprint(''.join(map(str,s)))\n\n\n", "'''input\n1 0\n1\n\n'''\nimport sys\nfrom collections import defaultdict as dd\nfrom itertools import  permutations as pp\nfrom itertools import combinations as cc\nfrom collections import Counter as ccd\nfrom random import randint as rd\nfrom bisect import bisect_left as bl\nfrom  heapq import heappush as hpush\nfrom heapq import heappop as hpop\nmod=10**9+7\n\ndef ri(flag=0):\n\tif flag==0:\n\t\treturn [int(i) for i in sys.stdin.readline().split()]\n\telse:\n\t\treturn int(sys.stdin.readline())\n\n\nn , k = ri()\na = input()\nb = list(a)\ncnt = 0\nfor i in range(n):\n\tif cnt>=k:\n\t\tbreak\n\tif i==0:\n\t\tif b[i]!=\"1\":\n\t\t\tb[i]=\"1\"\n\t\t\tcnt+=1\n\telse:\n\t\tif b[i]!=\"0\":\n\t\t\tb[i]=\"0\"\n\t\t\tcnt+=1\nif n==1 and k>=1:\n\tprint(\"0\")\nelse:\n\tprint(\"\".join(b))\n", "import sys\ninput = lambda: sys.stdin.readline().strip()\n\nn, k = list(map(int, input().split()))\nS = list(input())\nif n==1 and k==1: print(0)\nelif k==0: print(''.join(S))\nelse:\n    cnt = 0\n    if S[0]!='1':\n        S[0] = '1'\n        cnt+=1\n    for i in range(1, n):\n        if cnt==k: break\n        if S[i]!='0':\n            S[i] = '0'\n            cnt+=1\n    print(''.join(S))\n", "def main():\n    n,k=map(int,input().split())\n    S=input().strip()\n    if n==1:\n        if k==0:\n            return S\n        return 0\n    cnt=0\n    ret=''\n    for i,s in enumerate(S):\n        if cnt==k:\n            ret+=s\n        elif i==0:\n            ret+='1'\n            if s!='1':\n                cnt+=1\n        else:\n            ret+='0'\n            if s!='0':\n                cnt+=1\n    return ret\n    \ndef __starting_point():\n    print(main())\n__starting_point()", "n,k=[int(i) for i in input().split()]\ns=list(input())\nif len(s) == 1 and k:\n    s='0'\n    k-=1\nelif int(s[0])>1 and k:\n    k-=1\n    s[0]='1'\ni=1\nwhile k and i<len(s):\n    if s[i]!='0':\n        s[i]='0'\n        k-=1\n    i+=1\n\nprint(''.join(str(e) for e in s))", "n, k = list(map(int, input().split()))\ns = list(input())\n\nif n == 1 and k>0:\n    print(0)\n    return\n\n\nif k > 0 and s[0] != '1':\n    s[0] = '1'\n    k -= 1\n\ni = 1\n\n\nwhile k > 0 and i < n:\n    if s[i] != '0':\n        s[i] = '0'\n        k -= 1\n    i += 1\n\nprint(''.join(s))\n", "from collections import defaultdict as DD\nfrom bisect import bisect_left as BL\nfrom bisect import bisect_right as BR\nfrom itertools import combinations as IC\nfrom itertools import permutations as IP\nfrom random import randint as RI\nimport sys\nMOD=pow(10,9)+7\n\ndef IN(f=0):\n    if f==0:\n        return ( [int(i) for i in sys.stdin.readline().split()] )\n    else:\n        return ( int(sys.stdin.readline()) )\n\nn,k=IN()\ns=input()\ns=[int(i) for i in s]\nr=\"\"\ni=0\np=0\nif len(s)==1 and k>0:\n    print(0)\nelif len(s)==1 and k==0:\n    print(s[0])\nelse:\n    while(i<n and p<k):\n        if i==0:\n            if s[i]!=1:\n                s[i]=1\n                p+=1\n        else:\n            if s[i]!=0:\n                s[i]=0\n                p+=1\n        i+=1\n    r=[str(i) for i in s]\n    print(''.join(r))\n        \n        \n    \n    \n", "n,k=map(int,input().split())\ns=input()\nif n==1:\n    if k>=1:\n        print(0)\n        return\n    else:\n        print(s)\n        return\nelse:\n    s=list(s)\n    if k>n:\n        k=n \n    ans=[]\n    for i in range(n):\n        if k==0:\n            break \n        if i==0:\n            if s[i]!='1':\n                s[i]='1'\n                k-=1 \n        else:\n            if s[i]!='0':\n                s[i]='0'\n                k-=1 \n    print(''.join(s))", "a,b=list(map(int,input().split()))\narray=list(input())\nchanges=0\nx=0\nwhile changes<b:\n    if x==a:\n        break\n    if x==0:\n        if array[x]==\"1\":\n            pass\n        else:\n            array[x]=\"1\"\n            changes+=1\n    else:\n        if array[x]==\"0\":\n            pass\n        else:\n            array[x]=\"0\"\n            changes+=1\n    x+=1\nif a==1:\n    if b>0:\n        print(0)\n    else:\n        print(array[0])\nelse:\n    answer=\"\".join(array)\n    print(answer)\n", "import sys\nimport heapq\nimport math\nfrom collections import defaultdict as dd\n\nn, k = [int(i) for i in input().split()]\ns = [i for i in input()]\n\nif len(s) == 1 and k:\n    print('0')\nelif len(s) == 1 and k == 0:\n    print(s[0])\nelse:\n\n    if s[0] > '1' and k and len(s) > 1:\n        s[0] = '1'\n        k -= 1\n    for i in range(1, n):\n        if k:\n            if s[i] > '0':\n                s[i] = '0'\n                k -= 1\n\n        else:\n            break\n    print(\"\".join(s))", "n,k=map(int,input().split())\ns=input()\nif len(s)==1:\n\tif k>=1:\n\t\tprint('0')\n\telse:\n\t\tprint(s[0])\n\treturn\ncc=0\narr=[]\nfor i in s:\n\tarr.append(i)\nif k==0:\n\tprint(s)\n\treturn\nif int(arr[0])>1:\n\tarr[0]='1'\n\tcc+=1\nfor i in range(1,len(s)):\n\tif cc==k:\n\t\tbreak\n\tif int(arr[i])!=0:\n\t\tarr[i]='0'\n\t\tcc+=1\n\tif cc==k:\n\t\tbreak\nprint(''.join(arr))", "n, k = map(int, input().split())\nS = list(input())\ni = 0\nif n == 1:\n    if k:\n        print(0)\n    else:\n        print(''.join(S))\nelse:\n    while k:\n        if i == n: break\n        if i == 0:\n            if S[i] == '1': \n                i += 1\n                continue\n            else:\n                S[i] = '1'\n        else:\n            if S[i] == '0':\n                i += 1\n                continue\n            else:\n                S[i] = '0'\n        k -= 1\n        i += 1\n    print(''.join(S))"]