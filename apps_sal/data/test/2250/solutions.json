["import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input().strip()\n\n    lengths = []\n    curr = s[0]\n    currLen = 0\n    for c in s:\n        if c == curr:\n            currLen += 1\n        else:\n            lengths.append(currLen)\n            currLen = 1\n            curr = c\n    if currLen < n and s[0] == s[-1]:\n        lengths[0] += currLen\n    else:\n        lengths.append(currLen)\n\n\n    out = 0\n    if len(lengths) == 1 and n >= 3:\n        out = 1\n        lengths[0] -= 1\n        lengths.append(1)\n        \n\n    for v in lengths:\n        out += v // 3\n    print(out)\n    \n", "def ne(c):\n    if c == 'L':\n        return 'R'\n    return 'L'\n\n# for _ in range(1):\nfor _ in range(int(input())):\n    # n, k = map(int, input().split())\n    n = int(input())\n    s = input()\n    ans = 0\n    if s[0] * n == s:\n        ans += 1\n        s = ne(s[0]) + s[0] * (n - 1)\n    if s[0] == s[-1]:\n        i = 0\n        while s[i] == s[0]:\n            i += 1\n        s = s[i:] + s[:i]\n    lst = '#'\n    cnt = 0\n    for i in range(n):\n        if lst != s[i]:\n            lst = s[i]\n            ans += cnt // 3\n            cnt = 1\n        else:\n            cnt += 1\n    ans += cnt // 3\n    print(ans)\n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = input()\n    X = []\n    prev = S[0]\n    c = 0\n    for i, s in enumerate(S):\n        if s == prev:\n            c += 1\n        else:\n            X.append(c)\n            prev = s\n            c = 1\n    if not X:\n        X.append(N + 2)\n    elif prev == S[0]:\n        X[0] += c\n    else:\n        X.append(c)\n    print(sum([x // 3 for x in X]))\n\n", "for _ in range(int(input())):\n    x = int(input())\n    s = input()\n    if 'R' in s and \"L\" in s:\n        A = []\n        if s[0] == 'R':\n            A.append([1, 1])\n        else:\n            A.append([2, 1])\n        for i in range(1, len(s)):\n            if A[-1][0] == 1:\n                if s[i] == 'R':\n                    A[-1][1] += 1\n                else:\n                    A.append([2, 1])\n            else:\n                if s[i] == 'L':\n                    A[-1][1] += 1\n                else:\n                    A.append([1, 1])\n        if A[0][0] == A[-1][0]:\n            A[0][1] += A[-1][1]\n            A.pop()\n        Ans = 0\n        for i in range(len(A)):\n            Ans += A[i][1] // 3\n        print(Ans)\n    else:\n        print((len(s) + 2) // 3)", "def solve():\n    n = int(input())\n    lst = list(input())\n    if len(set(lst)) == 1:\n        print(n//3 + ((n%3) != 0))\n        return 0\n\n    for i in range(n - 1):\n        if lst[i] != lst[i + 1]:\n            q = i + 1\n            break\n    lst = [lst[i] for i in range(q, n)] + [lst[i] for i in range(q)]\n    rcnt = 0\n    lcnt = 0\n    ans = 0\n    for i in lst:\n        if i == \"R\":\n            rcnt += 1\n            lcnt = 0\n        else:\n            lcnt += 1\n            rcnt = 0\n        if rcnt == 3:\n            rcnt = 0\n            ans += 1\n        if lcnt == 3:\n            lcnt = 0\n            ans += 1\n    print(ans)\nfor i in range(int(input())):\n    solve()", "from sys import exit,stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nT, = rl()\nfor _ in range(T):\n    n, = rl()\n    s = stdin.readline().rstrip()\n    l = 1\n    while l < n and s[l] == s[0]:\n        l += 1\n    if l == n:\n        print((n + 2) // 3)\n        continue\n    r = n\n    while s[r-1] == s[0]:\n        r -= 1\n    y = (n - r + l) // 3\n    k = l\n    for i in range(l, r):\n        if s[i] != s[k]:\n            y += (i - k) // 3\n            k = i\n    y += (r - k) // 3\n    print(y)\n", "import sys\n\nT = int(sys.stdin.readline().strip())\nfor t in range (0, T):\n    n = int(sys.stdin.readline().strip())\n    s = sys.stdin.readline().strip()\n    ans = 0\n    c = 1\n    L = []\n    for i in range (1, n):\n        if s[i] == s[i-1]:\n            c = c + 1\n        else:\n            L.append(c)\n            c = 1\n    if len(L) == 0:\n        if c <= 2:\n            print(0)\n        else:\n            print((c + 2) // 3)\n    else:\n        if len(L) % 2 == 0:\n            L[0] = L[0] + c\n        else:\n            L.append(c)\n        for l in L:\n            ans = ans + l // 3\n        print(ans)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = list(input())\n\n    ans = 0\n    # print(set(s))\n    if len(set(s)) != 1:\n        ind = 0\n        for i in range(1, n):\n            if s[i] != s[i-1]:\n                ind = i\n                break\n        S = s[ind:] + s[:ind]\n        A = [1]\n        for i in range(1, n):\n            if S[i] != S[i-1]:\n                A.append(1)\n            else:\n                A[-1] += 1\n        # print(A)\n        for i in range(len(A)):\n            ans += A[i]//3\n    \n    else:\n        ans = 1\n        n -= 1\n\n        ans += n//3\n    print(ans)", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input()\n    change=-1\n    for i in range(n-1):\n      if s[i]!=s[i+1]:\n        change=i\n        break\n    if change==-1:\n      \n      print(-((-n)//3))\n      continue\n    streak=1\n    ans=0\n    for i in range(change,change+n):\n      if s[(i)%n]==s[(i+1)%n]:\n        streak+=1\n      else:\n        ans+=streak//3\n        streak=1\n    ans+=streak//3\n    print(ans)", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if len(set(s)) == 1:\n        print((n+2)//3)\n        continue\n    cur = 1\n    arr = []\n    for i in range(n):\n        if s[i] == s[(i+1)%n]:\n            cur += 1\n        else:\n            arr.append(cur)\n            cur = 1\n    if s[-1] == s[0]:\n        arr[0] += cur-1\n    res = 0\n    for e in arr:\n        res += e//3\n    print(res)\n", "from collections import defaultdict as dd\nimport math\nimport sys\nimport heapq\nimport copy\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\ndef solve():\n\n\tn =nn()\n\n\ts = input()\n\n\tstreaks = []\n\tst = 1\n\tfor i in range(n-1):\n\t\tif s[i]==s[i+1]:\n\t\t\tst+=1\n\t\telse:\n\t\t\tstreaks.append(st)\n\t\t\tst = 1\n\n\t#print(st, s[0], s[n-1])\n\tif s[0]==s[n-1] and len(streaks)>0:\n\t\tstreaks[0]+= st\n\telse:\n\t\tstreaks.append(st)\n\t#print(streaks)\n\tmoves= 0\n\t#print(streaks)\n\tif len(streaks)==1:\n\t\tmoves = (streaks[0]-1)//3+1\n\telse:\n\t\tfor num in streaks:\n\t\t\tmoves += num//3\n\n\tprint(moves)\n\n\n\n\nq=nn()\n\nfor _ in range(q):\n\tsolve()\n", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n=int(input())\n    s=input()\n    s=s[0:n]\n    mn=n\n    for i in range(4):\n        mins=[n]*4\n        mins[i]=0\n        if i<2 and s[0]==\"L\":\n            mins[i]=1\n        if i>1 and s[0]==\"R\":\n            mins[i]=1\n        for j in range(1,n):\n            nmins=[n]*4\n            nmins[0]=min(mins[2],mins[3])\n            nmins[1]=mins[0]\n            nmins[2]=mins[3]\n            nmins[3]=min(mins[0],mins[1])\n            if s[j]==\"L\":\n                nmins[0]+=1\n                nmins[1]+=1\n            else:\n                nmins[2]+=1\n                nmins[3]+=1\n            for k in range(4):\n                mins[k]=nmins[k]\n        if i==0:\n            mn=min(mn,mins[2],mins[3])\n        if i==1:\n            mn=min(mn,mins[0])\n        if i==2:\n            mn=min(mn,mins[3])\n        if i==3:\n            mn=min(mn,mins[0],mins[1])\n    print(mn)\n", "def subsolve(a):\n    n = len(a)\n    dp = [[0] * 4 for _ in range(n + 1)]\n    if a[0] == 'R':\n        dp[0] = [0, n, n, n]\n    else:\n        dp[0] = [1, n, n, n]\n    for i in range(1, n):\n        dp[i][0] = min(dp[i - 1][2], dp[i - 1][3]) + int(a[i] != 'R')\n        dp[i][1] = min(dp[i - 1][0], n) + int(a[i] != 'R')\n        dp[i][2] = min(dp[i - 1][0], dp[i - 1][1]) + int(a[i] != 'L')\n        dp[i][3] = min(dp[i - 1][2], n) + int(a[i] != 'L')\n    return min(dp[n - 1][2], dp[n - 1][3], n)\n\ndef solve():\n    n = int(input())\n    a = input()\n    a += a\n    ans = n\n    for i in range(min(n, 4)):\n        ans = min(ans, subsolve(a[i:i + n]))\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "def calc_one(n):\n    frac = n / 3\n    if frac % 1 == 0:\n        return int(frac)\n    return int(frac + 1)  # ceil\n\ndef calc_ops(L):\n    frac = (L - 2) / 3\n    if frac % 1 == 0:\n        return int(frac)\n    return int(frac + 1)    # ceil\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        s = input()\n        l = []; c = 1\n        for i in range(1, n):\n            if s[i] == s[i - 1]:\n                c += 1\n            else:\n                l.append(c)\n                c = 1\n        if s[0] == s[-1]:\n            if len(l) == 0:\n                l.append(c)\n            else:\n                l[0] += c\n        else:\n            l.append(c)\n        if len(l) == 1:\n            print(calc_one(n))\n        else:\n            total = 0\n            for j in l:\n                total += calc_ops(j)\n            print(total)\nmain()", "from itertools import groupby\n\ndef solve():\n    n = int(input())\n    s = input()\n\n    if all(i == s[0] for i in s):\n        print((n + 2) // 3)\n        return\n    \n    if s[0] == s[-1]:\n        if s[0] == 'R':\n            idx = s.index('L')\n            s = s[idx:] + 'R' * idx\n        else:\n            idx = s.index('R')\n            s = s[idx:] + 'L' * idx\n    \n    res = 0\n    for _, v in groupby(s):\n        sz = len(list(v))\n        res += sz // 3\n    print(res)\n\nfor _ in range(int(input())):\n    solve()\n", "\nfrom sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    n = int(stdin.readline())\n    S = stdin.readline()\n    S = S[:-1]\n\n    rnum = 0\n    lnum = 0\n\n    if \"L\" not in S or \"R\" not in S:\n        print((n+2) // 3)\n        continue\n\n    for i in range(n-1):\n        if S[i] != S[i+1]:\n            S = S[i+1:] + S[:i+1]\n            break\n\n    ans = 0\n    #print (S)\n    for i in S:\n        if i == \"R\":\n            rnum += 1\n            ans += (lnum)//3\n            lnum = 0\n        else:\n            lnum += 1\n            ans += (rnum)//3\n            rnum = 0\n            \n    if lnum >= 3:\n        ans += (lnum)//3\n    if rnum >= 3:\n        ans += (rnum)//3\n\n    print (ans)\n        \n        \n"]