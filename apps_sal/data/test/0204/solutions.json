["def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\na, b, x, y = list(map(int, input().split()))\n\ng = gcd(x, y)\nx //= g\ny //= g\n\n\nprint(min(a // x, b // y))\n", "from sys import stdin, stdout\n\n\ndef gcd(a, b):\n    if not b:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\na, b, x, y = map(int, stdin.readline().split())\ng = gcd(x, y)\nx //= g\ny //= g\n\nl, r = 0, 10 ** 18 + 1\nwhile r - l > 1:\n    m = (l + r) >> 1\n    \n    if m * x <= a and m * y <= b:\n        l = m\n    else:\n        r = m\n\nstdout.write(str(l))", "from math import gcd\n\na, b, x, y = map(int, input().split())\nx, y = x // gcd(x, y), y // gcd(x, y)\nprint(min(a // x, b // y))", "from fractions import gcd as g\n\n(a, b, x, y) = list(map(int, input().split()))\n\nk = g(x, y)\n\nx //= k\ny //= k\n\nprint(min(a // x, b // y))\n", "USE_STDIO = False\n\nif not USE_STDIO:\n    try: import mypc\n    except: pass\n\ndef gcd(x, y):\n    if x % y == 0: return y\n    return gcd(y, x % y)\n\ndef main():\n    a, b, x, y = list(map(int, input().split(' ')))\n    g = gcd(x, y)\n    x, y = x // g, y // g\n    ans = min(a // x, b // y)\n    print(ans)\n\ndef __starting_point():\n    main()\n\n\n\n\n__starting_point()", "a, b, x, y = list(map(int, input().split()))\n\nfrom fractions import gcd\n\nx, y = x // gcd(x, y), y // gcd(x, y)\n\nprint(min(a // x, b // y))\n", "import math\nimport sys\na, b, x, y = list(map(int, input().split()))\ng = math.gcd(x, y)\nx //= g\ny //= g\nl = 0\nr = 10**18\nwhile r - l > 1:\n    mid = (r + l) // 2\n    if x * mid > a or y * mid > b:\n        r = mid\n    else:\n        l = mid\nif x * r > a or y * r > b:\n    print(l)\nelse:\n    print(r)\n", "a,b,x,y = list(map(int,input().rsplit()))\ndef gdc(a,b):\n\tif b == 0:\n\t\treturn a\n\treturn gdc(b,a%b)\n\ng = gdc(x,y)\nx //= g\ny //= g\n\nprint(min(a//x,b//y))", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\na, b, x, y = map(int, input().split())\nk = gcd(x, y)\nx //= k\ny //= k\nprint(min(a // x, b // y))", "def gcd(x, y):\n    return x if y == 0 else gcd(y, x % y)\n\na,b,x,y = list(map(int,input().split()))\n\n\nval  = gcd(x, y)\nx //= val\ny //= val\n\na_min = a // x\nb_min = b // y\n\nprint(min(a_min, b_min))\n", "from copy import deepcopy\nimport itertools\nfrom bisect import bisect_left\nfrom bisect import bisect_right\nimport math\nfrom collections import deque\nfrom collections import Counter\n\n\ndef read():\n    return int(input())\n\n\ndef readmap():\n    return map(int, input().split())\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\na, b, x, y = readmap()\n\ng = math.gcd(x, y)\n\nprint(min(a // (x // g), b // (y // g)))", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    #a=list(map(int,sys.stdin.readline().split(' ')))\n    a,b,x,y= map(int, sys.stdin.readline().split(' '))\n    g=math.gcd(x,y)\n    x=x//g\n    y=y//g\n\n    print(min(a//x,b//y))\n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "def gcd(a, b):\n\twhile b != 0:\n\t\ta %= b\n\t\ta, b = b, a\n\treturn a\n\na, b, x, y = [int(i) for i in input().split()]\n\ng = gcd(x, y)\nx //= g\ny //= g\n\nprint(min(a // x, b // y))", "a, b, x, y = list(map(int, input().split()))\nfrom math import gcd\ng = gcd(x, y)\nx //= g\ny //= g\nprint(min(a // x, b // y))\n", "#autogenerated (:'D)\nread_numbers = lambda: list(map(int, input().split()))\nINF = 1 << 64\n\n#main\nfrom fractions import gcd\n\na, b, x, y = read_numbers()\ng = gcd(x, y)\nx, y = x // g, y // g\nprint(min(a // x, b // y))", "from fractions import gcd\n\ndef __starting_point():\n    a, b, x, y = list(map(int, input().split()))\n    c = gcd(x, y)\n    x, y = x // c, y // c\n    answer = min(a // x, b // y)\n    print(answer)\n\n__starting_point()", "import fractions\n\na, b, x, y = list(map(int, input().split()))\n\nd = fractions.gcd(x, y)\nx //= d\ny //= d\nans = min(a // x, b // y)\nprint(ans)\n", "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x%y)\n\na, b, x, y = map(int, input().split())\n\ng = gcd(x, y)\nx //= g\ny //= g\n\nprint(min(a//x, b//y))", "from sys import stdin,stdout,exit\ndef sin(): \n\treturn stdin.readline().rstrip()\ndef listInput():\n\treturn list(map(int,sin().split()))\ndef printBS(li):\n\tif not li: return\n\tfor i in range(len(li)-1):\n\t\tstdout.write(\"%d \"%(li[i]))\n\tstdout.write(\"%d\\n\"%(li[-1]))\n\na,b,x,y = listInput()\nfrom fractions import gcd\ng = gcd(x,y)\nx//=g\ny//=g\nprint(min(a//x,b//y))", "\"\"\"#T=int(input())\n#for i in range(0,T):\nN=int(input())\n#a,b=map(int,input().split())\ns=[int(x) for x in input().split()]\nmn=min(s)\nmx=max(s)\ndiff=mx-mn+1\nans=diff-len(s)\nprint(ans)\n#for j in range(0,len(s)):\"\"\"\n\n\nimport math\na,b,x,y=list(map(int,input().split()))\ng=math.gcd(x,y)\nx=x//g\ny=y//g\na1=a//x\na2=b//y\nans=min(a1,a2)\nprint(ans)\n    \n", "from math import gcd\na,b,x,y=map(int,input().split())\nr=gcd(x,y)\nx//=r;y//=r\nprint(min(a//x,b//y))", "from fractions import gcd\na,b,x,y = list(map(int,input().split()))\n\ngcd_val = gcd(x, y)\nx //= gcd_val\ny //= gcd_val\n\nprint(min(a//x,b//y))\n", "from math import gcd\n\na, b, x, y = map(int, input().split(' '))\n\ng = gcd(x, y)\n\nn1 = (a*g)//x\nn2 = (b*g)//y\n\nprint(min(n1,n2))", "def gcd(a, b):\n    while (b != 0):\n        x = a % b\n        a = b\n        b = x\n    return a\n\na, b, x, y = list(map(int, input().strip().split(' ')))\n\nd = gcd(x, y)\nx1 = x // d\nx2 = y // d\n\nprint(min(a//x1, b//x2))\n", "import sys\nfrom fractions import Fraction\na,b,x,y=list(map(int,sys.stdin.readline().strip().split()))\nf=str(Fraction(x,y)).split('/')\nif(len(f)==1):\n    x=int(f[0])\n    y=1\nelse:\n    x=int(f[0])\n    y=int(f[1])\n\nprint(min(int(a/x),int(b/y)))\n\n"]