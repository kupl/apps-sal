["#!/usr/bin/env python3\n\n\nM = 10 ** 9 + 7\n\n\ndef solve(n, m, s, lst):\n\n    cnt = [0] * n\n    t = 0\n    for i in range(n):\n        if s[i] == '1':\n            t += 1\n        cnt[i] = t\n\n\n    dp = [[0] * (n + 1) for _ in range(n + 1)]\n    dp[0][0] = 1\n    r = 0\n    j = 0\n    for i in range(n):\n        while j < m:\n            lj, rj = lst[j]\n            if lj <= i:\n                r = max(r, rj)\n                j += 1\n            else:\n                break\n        if r <= i:\n            c = cnt[i]\n            if 0 < c:\n                dp[i + 1][cnt[i]] = (dp[i][c] + dp[i][c - 1]) % M\n            else:\n                dp[i + 1][0] = dp[i][0]\n        else:\n            for k in range(max(0, cnt[r] - r + i), min(i + 1, cnt[r]) + 1):\n                if 0 < k:\n                    dp[i + 1][k] = (dp[i][k] + dp[i][k - 1]) % M\n                else:\n                    dp[i + 1][0] = dp[i][0]\n\n    return dp[n][cnt[n - 1]]\n\n\ndef main():\n    n, m = input().split()\n    n = int(n)\n    m = int(m)\n    s = input()\n    lst = []\n    for _ in range(m):\n        l, r = input().split()\n        l = int(l) - 1\n        r = int(r) - 1\n        lst.append((l, r))\n\n    print((solve(n, m, s, lst)))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nimport numpy as np\n\nMOD = 10**9 + 7\n\nN,M = map(int,input().split())\nS = np.array(list(input().rstrip()),dtype='U1')\nLR = [[int(x) for x in input().split()] for _ in range(M)]\n\ncnt_0 = (S=='0').cumsum()\ncnt_1 = (S=='1').cumsum()\ncanuse_0 = cnt_0\ncanuse_1 = cnt_1\nfor L,R in LR:\n    canuse_0[L-1] = max(canuse_0[L-1],cnt_0[R-1])\n    canuse_1[L-1] = max(canuse_1[L-1],cnt_1[R-1])\nnp.maximum.accumulate(canuse_0,out=canuse_0)\nnp.maximum.accumulate(canuse_1,out=canuse_1)\n\n# 1\u3092\u4f7f\u3063\u305f\u500b\u6570\u3067\ndp = np.zeros(N+1,dtype=np.int64)\ndp[0] = 1\nfor i in range(N):\n    prev = dp\n    dp = np.zeros(N+1,dtype=np.int64)\n    # i\u756a\u76ee\u3092\u7f6e\u3044\u305f\u5f8c\u3067\u30011\u306e\u500b\u6570\u306e\u7bc4\u56f2\n    left = max(0,(i+1)-canuse_0[i])\n    right = canuse_1[i]\n    # 0\u3092\u4f7f\u3046\n    dp[left:right+1] += prev[left:right+1]\n    # 1\u3092\u4f7f\u3046\n    left = max(1,left)\n    dp[left:right+1] += prev[left-1:right]\n    dp %= MOD\n\nanswer = dp.sum()\nprint(answer)", "import sys\nreadline = sys.stdin.readline\n\nMOD = 10**9+7\nN, M = list(map(int, readline().split()))\nS = list(map(int, readline().strip()))\nQuery = [tuple([int(x) - 1 for x in readline().split()]) for _ in range(M)]\n\nPP = S.count(1)\n\nLi = [None]*PP\nRi = [None]*PP\n\nT1 = S[:]\nfor l, r in Query:\n    cnt = 0\n    for i in range(l, r+1):\n        cnt += T1[i]\n    for i in range(l, l+cnt):\n        T1[i] = 1\n    for i in range(l+cnt, r+1):\n        T1[i] = 0\nT2 = S[:]\nfor l, r in Query:\n    cnt = 0\n    for i in range(l, r+1):\n        cnt += 1 - T2[i]\n    for i in range(l, l+cnt):\n        T2[i] = 0\n    for i in range(l+cnt, r+1):\n        T2[i] = 1\n\ncnt = 0\nfor i in range(N):\n    if T1[i]:\n        Li[cnt] = i\n        cnt += 1\ncnt = 0\nfor i in range(N):\n    if T2[i]:\n        Ri[cnt] = i+1\n        cnt += 1\n\ndp = [0]*N\nfor i in range(Li[0], Ri[0]):\n    dp[i] = 1\n\nfor j in range(1, PP):\n    dp2 = [0] + dp[:-1]\n    for i in range(1, N):\n        dp2[i] = (dp2[i]+dp2[i-1])%MOD\n    for i in range(Li[j]):\n        dp2[i] = 0\n    for i in range(Ri[j], N):\n        dp2[i] = 0\n    dp = dp2[:]\nres = 0\nfor d in dp:\n    res = (res+d)%MOD\nprint(res)\n    \n", "mod=10**9+7\n\nN,M=map(int,input().split())\nL=-1;R=-1\nS=input()\nope=[]\nfor i in range(M):\n    l,r=map(int,input().split())\n    l-=1;r-=1\n    if L<=l and r<=R:\n        continue\n    else:\n        L,R=l,r\n        ope.append((l,r))\n\nM=len(ope)\ndata=[-1]*N\nfor i in range(M):\n    l,r=ope[i]\n    for j in range(l,r+1):\n        data[j]=i\n\ndp=[[0 for i in range(N+1)] for j in range(N+1)]\n\nfor j in range(N+1):\n    dp[-1][j]=1\n\nfor i in range(N-1,-1,-1):\n    id=data[i]\n    if id!=-1:\n        l,r=ope[id]\n        temp1=sum(int(S[k]) for k in range(r+1))\n        temp0=r+1-temp1\n        for j in range(temp1+1):\n            np1=temp1-j\n            np0=temp0-(i-j)\n            if np1==0:\n                if np0>0:\n                    dp[i][j]=dp[i+1][j]\n            else:\n                if np0>0:\n                    dp[i][j]=(dp[i+1][j+1]+dp[i+1][j])%mod\n                elif np0==0:\n                    dp[i][j]=dp[i+1][j+1]\n    else:\n        if S[i]==\"1\":\n            for j in range(N):\n                dp[i][j]=dp[i+1][j+1]\n        else:\n            for j in range(N+1):\n                dp[i][j]=dp[i+1][j]\n\nprint(dp[0][0])"]