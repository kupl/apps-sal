["n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\nans=arr[0]//k\nval=arr[0]%k\nfor i in range(1,n):\n    if(val==0):\n        ans+=arr[i]//k\n        val=arr[i]%k\n    else:\n        val+=arr[i]\n        if(val<k):\n            val=0\n            ans+=1\n        else:\n            ans+=val//k\n            val=val%k\nif(val!=0):\n    ans+=1\nprint(ans)\n", "from math import ceil\nn, k = list(map( int, input().split() ))\na = [ 0 ] + list( map( int, input().split() ) )\n\nlast = 0\nbags = 0\nfor i in range( n + 1 ):\n    if i == n:\n        last += a[ i ]\n        bags += ceil( last / k )\n    else:\n        b = ceil( last / k )\n        bags += b\n        l = b * k - last\n        last = a[ i ] - min( a[ i ], l )\n\nprint( bags )\n\n", "n,k=[int(x) for x in input().split()]\na=[int(x) for x in input().split()]\nans=0\npre=0\nfor i in range(n):\n    if pre!=0:\n        ans+=1\n        a[i]-=(k-pre)\n        if a[i]<0:a[i]=0\n    ans+=a[i]//k\n    pre=a[i]-a[i]//k*k\nif pre!=0 : ans+=1\nprint(ans)", "n, k = map(int, input().split())\nl = [*map(int, input().split())]\nc = 0\nres = 0\nfor i, e in enumerate(l):\n    if (e + c) < k and c > 0:\n        res += int((e + c) > 0)\n        c = 0\n    else:\n        res += (e + c) // k\n        c = (e + c) % k\nif c > 0: res += 1\nprint(res)", "import math as ma\nimport sys\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\ndef li():\n\treturn list(map(int , input().split()))\n\ndef num():\n\treturn map(int , input().split())\n\ndef nu():\n\treturn int(input())\n\ndef find_gcd(x , y):\n\twhile (y):\n\t\tx , y = y , x % y\n\treturn x\n\nn,k=num()\na=li()\nz=0\nx=0\nfor i in range(n):\n\tif(z%k==0):\n\t\tx+=int(ma.ceil(z/k))+a[i]//k\n\t\tz = a[i] % k\n\telse:\n\t\tcp=z%k\n\t\tzz=a[i]-(k-cp)\n\t\tif(zz<0):\n\t\t\tzz=0\n\t\tx+=int(ma.ceil(z/k))+zz//k\n\t\tz=zz%k\nif(z>0):\n\tx+=1\nprint(x)", "from math import floor\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nans=0\ni=0\nrem=0\nwhile i<n:\n    if i<n-1:\n        if a[i]+rem<=k and rem!=0:\n            ans+=1\n            i+=1\n            rem=0\n        else:\n            ans+=floor((a[i]+rem)/k)\n            rem=(a[i]+rem)%k\n            i+=1\n    elif i==n-1:\n        ans+=floor((a[i]+rem)/k)\n        rem=(a[i]+rem)%k\n        i+=1\nif rem!=0:\n    ans+=1\nprint(ans)", "n, k = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\np = 0\ncp = 0\nsdg = 0\nfdg = 0\ntg = 0\nfplp = 0\nfor d in range(n-1):\n    fdg = a[d]\n    cp = sdg // k + (0 if sdg % k == 0 else 1)\n    fplp = k - sdg % k\n    if fplp == k:\n        fplp = 0\n    fdg -= min(fplp, fdg)\n    cp += fdg // k\n    fdg -= (fdg // k) * k\n    p += cp\n    sdg = fdg\nfdg = a[n-1]\np += (sdg + fdg) // k + (0 if (sdg + fdg) % k == 0 else 1)\nprint(p)\n", "n,k = list(map(int,input().split()))\narr = list(map(int,input().split()))\nprev = 0;\nbags = 0;\nfor i in range(n):\n\tif (arr[i]+prev)//k == 0:\n\t\tif prev > 0:\n\t\t\tbags+=1;\n\t\t\tprev=0;\n\t\telse:\n\t\t\tprev = arr[i];\n\telse:\n\t\tbags += (arr[i]+prev)//k;\n\t\tprev = (arr[i]+prev)%k\nif prev!=0:\n\tbags+=1\nprint(bags)\n\n\n", "import math\nn,k=[int(s) for s in input().split()]\n\na=[int(s) for s in input().split()]\n\ndef check():\n    n=len(a)\n    res=0\n    sum0=0\n    for i in range(n):\n        res0=res\n        if res==0 :\n            if a[i]<k:\n                res=a[i]\n                if i==n-1 and a[i]!=0:\n                    sum0+=1\n            else:\n                if i==n-1:\n                    sum0+=math.ceil((a[i])/k)\n                else:\n                    sum0 += int((a[i]) / k)\n                res=a[i]%k\n        else:\n            if i == n - 1:\n                sum0+=math.ceil((a[i]+res)/k)\n            else:\n                sum0 += max(int((a[i] + res) / k),1)\n            #print(res, max(int((a[i] + res) / k), 1))\n            res = (a[i] + res) % k if a[i] + res >= k else 0\n        #print(res0,sum0)\n    print(sum0)\n\ncheck()", "n, k = [int(x) for x in input().split()]\nlst = [int(x) for x in input().split()]\nx=0\ns=0\nans=0\nfor i in range(n):\n        if x==0:\n                s+=lst[i]\n                ans+=(s//k)\n                s=s%k\n                if s>0: x=1\n        elif x==1:\n                if (s+lst[i]<k):\n                        ans+=1\n                        s=0\n                        x=0\n                else:\n                        s+=lst[i]\n                        ans+=s//k\n                        s=s%k\n                        if s>0: x=1\n                        else: x = 0\n        #print(s,ans)\n                        \n                        \nif(s>0):\n        print(ans+1)\nelse:\n        print(ans)\n                \n", "n, m = map(int, input().split())\n\na = list(map(int, input().split()))\n\nres = 0\nsum = 0\ncan = True\n\nfor i in range(n):\n    if sum > 0:\n        sum = sum + a[i]\n        if sum < m:\n            res = res + 1\n            sum = 0\n        else:\n            res = res + sum // m\n            sum = sum % m\n    else:\n        sum = sum + a[i]\n        res = res + sum // m\n        sum = sum % m\n        \nif sum > 0:\n    res = res + 1\nprint(res)", "n,k =list(map(int,input().split()))\n\na=[int(x) for x in input().split()]\nbag=a[0]//k\nremain=a[0]%k\nfor i in range(1,n):\n    tk=a[i]+remain\n    remain=tk%k\n    if remain>a[i]:\n        bag+=1\n        remain=0\n    else:\n        bag+=tk//k\n    \nif remain==0:\n    print(bag)\n   \n        \nelse:  \n        \n    print(bag+1)        \n", "def read():\n    return list(map(int, input().split()))\n\ndef solve(n, k, A):\n    ans, prev = 0, 0\n    for a in A:\n        total = prev + a\n        if prev and total < k:\n            ans += 1\n            total = 0\n        elif total >= k:\n            ans += total // k\n            total %= k\n        prev = total        \n    ans += prev // k\n    ans += 1 if prev % k > 0 else 0\n    return ans\n\nn, k = read()\nA = read()\nprint(solve(n, k, A))", "import math\nn,k=map(int,input().split(\" \"))\nplan=list(input().split())\nplan=[int(x) for x in plan]\ncount=0\ntemp=0\nfor i in range(len(plan)):\n    if i==n-1:\n        if temp==0:\n            count+=math.ceil(plan[i]/k)\n            break\n        else:\n            plan[i]-=(k-temp)\n            count+=1\n            temp=0\n            if plan[i]<0:\n                plan[i]=0\n            count+=math.ceil(plan[i]/k)\n            break\n    if temp!=0:\n        plan[i]-=(k-temp)\n        count+=1\n        temp=0\n        if plan[i]<0:\n            plan[i]=0\n    count+=int(plan[i]/k)\n    temp=plan[i]%k\nprint(int(count))", "v = []\nn,k = list(map(int, input().split()))\ns = 0\nv = [int(x) for x in input().split()]\nq = 0\ncarry = 0\nfor i in range(len(v)):\n    prev_carry = carry\n    garbage = v[i] + carry\n    boxes = garbage // k\n    carry = garbage % k\n    if i > 0 and boxes == 0 and carry > 0 and prev_carry > 0:\n        carry = 0\n        boxes = 1\n    q += boxes\nif carry > 0:\n    q += 1\nprint(q)\n", "n, k = list(map(int,input().split()))\na = [int(x) for x in input().split()]\nres = 0\nfor i in range(1, n):\n\ts = a[i - 1] + a[i]\n\tq = s // k\n\tres += q\n\n\tif q == 0 and a[i - 1] != 0:\n\t\tres += 1\n\t\ta[i] = 0\n\telse:\n\t\ta[i] = a[i] - (q * k - a[i - 1])\nres += (a[n - 1] + k - 1) // k\nprint(res)\n", "n,k = list(map(int, input().split()))\ns = list(map(int,input().split()))\n\nold = 0\ncurrent = 0\nidx = 0\nans = 0\nwhile idx < len(s):\n    if(old != 0 and s[idx] // k == 0):\n        ans+= 1\n        old = max(s[idx] - (k-old),0)\n        idx+=1\n        continue\n    ans += (s[idx]+old) // k\n    old = (s[idx]+old) % k\n    idx+=1\nif(old>0):\n    ans+=1\nprint(ans)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(0, len(a) - 1):\n    \n    ans += a[i] // k\n    ans += int((a[i] % k) != 0)\n    a[i + 1] += a[i] % k\n    a[i + 1] = max(a[i + 1] - int((a[i] % k) != 0) * k, 0)\nans += a[len(a) - 1] // k + int(a[-1] % k != 0)\nprint(ans)", "\n\n\nn, k = list(map(int, input().split()))\ndays = list(map(int, input().split()))\n\nnb_bags=0\ncrt_cap=0\nfor i in range(n):\n\tif crt_cap !=0:\n\t\tdays[i] = max(days[i]-(k-crt_cap), 0)\n\t\tcrt_cap = 0\n\t\tnb_bags += 1\n\tnb_bags += int(days[i]/k)\n\tcrt_cap = days[i]%k\n\nif crt_cap !=0:\n\tnb_bags += 1\n\nprint(nb_bags)\n\t\n\n\n", "n, k = list(map(int, input().split()))\na = [0] + list(map(int, input().split()))\na.append(0)\nans = 0\nfor i in range(1, n + 2):\n    t = (a[i - 1] + a[i]) // k\n    if t > 0:\n        ans += t\n        t = (t * k) - a[i - 1]\n        a[i] -= t\n    else:\n        if a[i - 1] > 0:\n            ans += 1\n            a[i] = 0\nprint(ans)\n", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))+[0]\nans = 0\nr = 0\nfor i in range(n-1,-1,-1):\n    s = a[i]\n    s = max(0,a[i]-r)\n    x = (s+k-1)//k\n    ans+=x\n    r = x*k-s\n    \nprint(ans)\n        \n        \n", "from math import ceil\n\nn, k = tuple(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nr = 0\nfor i in range(n - 1, -1, -1):\n    a[i] = max(0, a[i] - r)\n    s += int(ceil(a[i] / k))\n    if (a[i] % k) != 0:\n        r = k - (a[i] % k)\n    else:\n        r = 0\nprint(s)\n", "n, k = map(int, input().split())\nl =  [*map(int, input().split())]\nc = 0\nres = 0\n\nfor i,val in enumerate(l):\n    if (val + c) < k and c > 0:\n        res += int((val+c)>0)\n        c = 0\n    else:\n        res += (val+c)//k\n        c = (val+c)%k\nif c > 0: res += 1\nprint(res)", "n, k = map(int, input().split())\n\nr = 0\nm = 0\n\nfor i in input().split():\n  a = int(i) + m\n  if (a < k):\n    if (m != 0):\n      r += 1\n      m = 0\n    else:\n      m = a\n  \n  else:\n    r += a // k\n    m = a % k\n\nr += (m + k - 1) // k\nprint(r)", "n,k = map(int, input().split())\na = [0]+list(map(int, input().split()))\na.append(0)\nbag = 0\nfor i in range(1, n + 2):\n    t = (a[i-1]+a[i])//k\n    if(t>0):\n        bag += t\n        t = (t*k)-a[i-1]\n        a[i] -= t\n    else:\n        if(a[i-1]>0):\n            bag += 1\n            a[i] = 0\nprint(bag)"]