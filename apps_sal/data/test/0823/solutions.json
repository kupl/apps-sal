["3\n\nfrom math import sin, cos, pi, atan2\n\nx, y = tuple(map(int, input().split()))\nif (x, y) in ((0, 0), (1, 0)):\n    print(0)\nelif x >= 1 and -x + 1 < y <= x:\n    print(1 + 4 * (x - 1))\nelif x < 0 and x <= y < -x:\n    print(3 + 4 * (-x - 1))\nelif y > 0 and -y <= x < y:\n    print(2 + 4 * (y - 1))\nelse:\n    print(-4 * y)\n", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)\n", "(x, y) = list(map(int, input().split()))\n\nif y >= x and y < -x: print(-4*x-1)\nelif y > x and y >= -x: print(4*y-2)\nelif y <= x and y > 1-x: print(4*x-3)\nelif y < x and y <= 1-x: print(-4*y)\nelse: print(0)\n", "x, y = map(int, input().split())\nu, v = abs(x), abs(y)\na = max(u, v)\ns = 4 * (a - 1)\n\nif u >= v and x > 0 and y > 1 - a: s += 1\nelif v >= u and y > 0: s += 2\nelif u >= v and x < 0: s += 3\nelif v >= u and y < 0: s += 4\n\nprint(s if a > 0 else 0) ", "\ndef main():\n    a,b=list(map(int,input().split()))\n    if(a==0 and b==0):\n        return 0\n    x=0\n    y=0\n    step=1\n    rep=0\n    direction=0\n    ans=0\n    while(x!=a or y!=b):\n        if(direction==0):\n            for i in range(step):\n                x+=1\n                if(x==a and y==b):\n                    return ans\n            direction=1\n            ans+=1\n        elif(direction==1):\n            for i in range(step):\n                y+=1\n                if(x==a and y==b):\n                    return ans\n            direction=2\n            step+=1\n            ans+=1\n        elif(direction==2):\n            for i in range(step):\n                x-=1\n                if(x==a and y==b):\n                    return ans\n            direction=3\n            ans+=1\n        else:\n            for i in range(step):\n                y-=1\n                if(x==a and y==b):\n                    return ans\n            direction=0\n            step+=1\n            ans+=1\nprint(main())      \n        \n", "#4304263\t Aug 17, 2013 7:17:58 PM\tfuwutu\t 279A - The Point on the Spiral\t Python 3\tAccepted\t 124 ms\t 0 KB\nl = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)\n", "x,y=input().split()\nx,y=int(x),int(y)\nif x==y==0:\n    print(0)\nif y>=-x and y>x:\n    print(4*y-2)\nif x+y<0 and y>=x:\n    print(4*abs(x)-1)\nif y<x and x+y<=1:\n    print(4*abs(y))\nif x+y>1 and y<=x:\n    print(4*x-3)\n    \n", "x, y = list(map(int, input().split()))\ndx, dy = [1, 0, -1, 0], [0, 1, 0, -1]\n\ndef onl(x1, y1, x2, y2):\n    if x1 == x2:\n        return x == x1 and y in range(min(y1, y2), max(y1, y2) + 1)\n    elif y1 == y2:\n        return y == y1 and x in range(min(x1, x2), max(x1, x2) + 1)\n\ndef sp(cx, cy, t):\n    l = t // 2 + 1\n    nx, ny = cx + dx[t % 4] * l, cy + dy[t % 4] * l\n    return t if onl(cx, cy, nx, ny) else sp(nx, ny, t + 1)\n\nprint(sp(0, 0, 0))\n", "\ns = input().split()\nx = (int(s[0]))\ny = (int(s[1]))\n\ndirx = [1,0,-1,0]\ndiry = [0,1,0,-1]\n\nif x==0 and y==0:\n    print(0)\nelse:\n    cx = 0\n    cy = 0\n    dir = 0\n    steps = 1\n    count = 0\n    done = False\n    while not done:\n        for i in range(steps):\n            cx+=dirx[dir]\n            cy+=diry[dir]\n            if cx==x and cy==y:\n                print(count)\n                done = True\n                break\n        count+=1\n        dir = (dir+1)%4\n        if dir == 0 or dir==2:\n            steps+=1", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)", "#WsSc0L\nx,y = map(int,input().split())\nif y>x and x>=-y: print(y*4-2)\nelif y<x and x<=-y+1: print(-y*4)\nelif y<=x and x>-y+1: print(x*4-3)\nelif y>=x and x<-y: print(-1-4*x)\nelse: print(0)", "def main():\n    x, y = list(map(int, input().split()))\n    r, t = max(abs(x), abs(y)), 0\n    if x == r == 1 - y:\n        t = 4\n    elif x == r > -y:\n        t = 3\n    elif y == r > x:\n        t = 2\n    elif -x == r > y:\n        t = 1\n    print(({(0, 0): 0, (1, 0): 0, (1, 1): 1, (0, 1): 2, (-1, 1): 2, (-1, 0): 3, (-1, -1): 3,\n           (0, -1): 4, (1, -1): 4}[x, y] if r < 2 else r * 4 - t))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)", "\ndest = list(map(int, input().split()))\n\nside_len = 0\npos = [0, 0]\nturns = 0\n\nwhile True:\n    side_len += 1\n    if dest[1] == pos[1] and pos[0] <= dest[0] <= pos[0] + side_len:\n        break\n    turns += 1\n    pos[0] += side_len\n    if dest[0] == pos[0] and pos[1] <= dest[1] <= pos[1] + side_len:\n        break\n    turns += 1\n    pos[1] += side_len\n    side_len += 1\n    if dest[1] == pos[1] and pos[0] >= dest[0] >= pos[0] - side_len:\n        break\n    turns += 1\n    pos[0] -= side_len\n    if dest[0] == pos[0] and pos[1] >= dest[1] >= pos[1] - side_len:\n        break\n    turns += 1\n    pos[1] -= side_len\n\nprint(turns)\n\n\n\n", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)\n\n", "U=1\nD=-1\nx,y=map(int,input().split())\nk=A=B=0\nwhile 1:\n\ta,b=U,B;k+=1\n\tif (A<=x<=a or a<=x<=A)and(B<=y<=b or b<=y<=B):break\n\tA=a;b=U;k+=1\n\tif (A<=x<=a or a<=x<=A)and(B<=y<=b or b<=y<=B):break\n\tB=b;a=D;k+=1\n\tif (A<=x<=a or a<=x<=A)and(B<=y<=b or b<=y<=B):break\n\tA=a;b=D;k+=1\n\tif (A<=x<=a or a<=x<=A)and(B<=y<=b or b<=y<=B):break\n\tA,B=a,b\n\tU+=1;D-=1\nif k<1:k=1\nprint(k-1)", "'''input\n37 -100\n'''\np = [(0, 0)]\na, b = 0, 0\nc = 1\nwhile c < 202:\n\tfor i in range(c-1):\n\t\ta += 1\n\t\tp.append((a, b))\n\tp.append((a+1, b, \"*\"))\n\ta += 1\n\tfor j in range(c-1):\n\t\tb += 1\n\t\tp.append((a, b))\n\tp.append((a, b+1, \"*\"))\n\tb += 1\n\tfor k in range(c):\n\t\ta -= 1\n\t\tp.append((a, b))\n\tp.append((a-1, b, \"*\"))\n\ta -= 1\n\tfor l in range(c):\n\t\tb -= 1\n\t\tp.append((a, b))\n\tp.append((a, b-1, \"*\"))\n\tb -= 1\n\tc += 2\nx, y = list(map(int, input().split()))\nif (x, y) in p:\n\tz = p.index((x, y))\nelif (x, y, \"*\") in p:\n\tz = p.index((x, y, \"*\"))\nt = 0\nfor w in p[:z]:\n\tif len(w) == 3:\n\t\tt += 1\nprint(t)\n\n\n\n\n\n\n\n\n\n", "#4304263\t Aug 17, 2013 7:17:58 PM\tfuwutu\t 279A - The Point on the Spiral\t Python 3\tAccepted\t 124 ms\t 0 KB\nl = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)\n", "from math import floor\n\ndef main(xx, yy):\n    if xx == 0 and yy == 0:\n        return 0\n    if xx == 1 and yy == 0:\n        return 0\n    x = 0\n    y = 0\n    i = 0\n    g = [(1, 0), (0, 1), (-1, 0), (0, -1)]\n    while not (x == xx and y == yy):\n        prev_x = x\n        prev_y = y\n        x += (int(floor(i / 2) + 1) * g[i % 4][0])\n        y += (int(floor(i / 2) + 1) * g[i % 4][1])\n        i += 1\n        if xx >= x and xx <= prev_x and yy >= y and yy <= prev_y:\n            return i - 1\n        if xx <= x and xx >= prev_x and yy <= y and yy >= prev_y:\n            return i - 1\n    return i - 1\n\nprint(main(*list(map(int, input().split(' ')))))\n", "'''l = [[(0, 0), (1, 0)],\n     [(1,\u20090),\u2009(1,\u20091)],\n     [(1,\u20091),\u2009(-1,\u20091)],\n     [(-1,\u20091),\u2009(-1,\u2009-1)],\n     [(-1,\u2009-\u20091),\u2009(2,\u2009-1)],\n     [(2,\u2009-1),\u2009(2,\u20092)]]\n'''\n'''\npattern er shudhone na paria\nlast e net theke copy marcha\npattern copy marcha re.\n'''\nx,y = list(map(int, input().split()))\nif y >= x and y < -x:\n    print(-4*x-1)\nelif y > x and y >= -x:\n    print(4*y-2)\nelif y <= x and y > 1-x:\n    print(4*x-3)\nelif y < x and y <= 1-x:\n    print(-4*y)\nelse:\n    print(0)\n", "x,y = map(int, input().split())\n\nisCorner = (x == y) or (-x == y and y > 0) or (y == -x + 1 and x is not 0)\n\n\nreachX = (0 if x == 0 else 1+(x-1)*4 if x > 0 else 3 + (abs(x) - 1)*4)\nreachY = (0 if y == 0 else 2+(y-1)*4 if y > 0 else abs(y)*4)\nif isCorner:\n    print(min(reachX,reachY))\nelse:\n    print(max(reachX,reachY))", "l = input().split(' ')\nx, y = int(l[0]), int(l[1])\nif y <= 0 and x >= 1 + y and x <= 1 - y:\n    print((-y) * 4)\nelif x > 0 and y >= 2 - x and y <= x:\n    print(x * 4 - 3)\nelif y > 0 and x >= -y and x <= y - 1:\n    print(y * 4 - 2)\nelif x < 0 and y >= x and y <= -1 - x:\n    print((-x) * 4 - 1)\nelse:\n    print(0)\n", "x,y=input().split()\nx=int(x)\ny=int(y)\np,q,z,i,j=0,0,0,1,1\ndef GT(n):\n\tt=0\n\tfor i in range(1,n+1):\n\t\tif(i%2!=0):\n\t\t\tt+=i\n\t\telse:\n\t\t\tt+=(-i)\n\treturn t\nwhile (1):\n\tx1,y1=max(GT(i),GT(i-1)),min(GT(i),GT(i-1))\n\tx2,y2=max(GT(j),GT(j-1)),min(GT(j),GT(j-1))\n\tif(z%2==0):\n\t\tp=GT(i)\n\t\ti+=1\n\tif(z%2!=0):\n\t\tq=GT(j)\n\t\tj+=1\n\tz+=1\n\tif(x>=y1 and x<=x1 and y==q):\n\t\tbreak\n\tif(y>=y2 and y<=x2 and x==p):\n\t\tbreak\nif((x==0 and y==0)or(x==1 and y==0)):\n\tprint(0)\nelse:\t\n\tprint(z)\n", "# python 3\n\"\"\"\nFrom tutorial: The starting position can be anywhere with a footprint. The footprints can be categorized into 3 types.\n\nonly L s\nonly R s\nR s followed by L s\n\nIn case 1, we end in the left of all footprints.\nIn case 2, we end in the right of all footprints.\nIn case 3, we either end in the rightmost R or the leftmost L\n\nMine is different from the tutorial, based on intuition, hard to prove its correctness.\n\"\"\"\n\n\ndef point_on_spiral(x_int, y_int) -> int:\n    if x_int == 0 and y_int == 0 or x_int == 1 and y_int == 0:\n        return 0\n    count = 0\n    x_prev, y_prev = 0, 0\n    while True:\n        spiral, count_mod_4 = divmod(count + 4, 4)\n        if count_mod_4 == 0:\n            x_curr, y_curr = spiral, -(spiral - 1)\n        elif count_mod_4 == 1:\n            x_curr, y_curr = spiral, spiral\n        elif count_mod_4 == 2:\n            x_curr, y_curr = -spiral, spiral\n        else:\n            x_curr, y_curr = -spiral, -spiral\n        dist_to_prev = abs(x_int - x_prev) + abs(y_int - y_prev)\n        dist_to_curr = abs(x_int - x_curr) + abs(y_int - y_curr)\n        dist_prev_curr = abs(x_curr - x_prev) + abs(y_curr - y_prev)\n\n        if dist_to_curr + dist_to_prev == dist_prev_curr:\n            # print(x_prev, y_prev), (x_curr, y_curr), (x_int, y_int)\n            return count\n        count += 1\n        x_prev, y_prev = x_curr, y_curr\n\n\ndef __starting_point():\n    \"\"\"\n    Inside of this is the test. \n    Outside is the API\n    \"\"\"\n    x, y = list(map(int, input().split()))\n\n    print(point_on_spiral(x, y))\n\n__starting_point()"]