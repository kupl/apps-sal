["n,k=list(map(int, input().split()))\ns=0\nfor i in range(k,n+2):\n  s+=i*(n-i+1)+1\nprint((s%(10**9+7)))\n\n", "N, K = map(int, input().split())\nmod = 10**9 + 7\n\nAns = 0\n\nfor m in range(K,N+2): # m\u500b\u9078\u3076 m = K ~ N+1\n    # 1\u523b\u307f\u3067\u5168\u3066\u306e\u6570\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n    # \u3088\u3063\u3066\u7b54\u3048\u306f\u3001\u4f5c\u308c\u308b\u6570\u306e\u3000(\u6700\u5927\u5024) - (\u6700\u5c0f\u5024) \u901a\u308a\u3068\u306a\u308b\n\n    # \u6700\u5927\u5024 = \u5927\u304d\u3044\u65b9\u304b\u3089m\u500b\u9078\u3076 = N-m+1 ~ N \u307e\u3067\u306e\u548c\n    maxi = m*(N-m+1 + N)/2\n\n    # \u6700\u5c0f\u5024 = \u5c0f\u3055\u3044\u65b9\u304b\u3089m\u500b\u9078\u3076 = 0~m-1\u3092\u9078\u3076\n    mini = m*(0 + m-1)/2\n\n    Ans += int(maxi - mini + 1)\n    Ans %= mod\n    \nprint(Ans)", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n\nimport numpy as np\nimport sys\nimport math\nimport collections\n\nn,k = L()\nn += 1\nl = [i for i in range(n)]\nl = np.cumsum(l)\nl %= mod\nsum = 1\nfor i in range(k,n):\n    sa = l[n-1]-l[n-1-i]-l[i-1] + 1\n    sum += sa\n    sum %= mod\n    #print(k,sa)\nprint(sum)", "n,k=map(int,input().split())\nmod=10**9+7\n\nsm=0\nfor i in range(k,n+2):\n    sm+=n*(n+1)//2\n    sm-=(n-i)*(n-i+1)//2\n    sm-=(i-1)*i//2\n    sm+=1\n    sm%=mod\n\nprint(sm)", "N,K=map(int,input().split())\np=10**9 + 7\nans=0\nfor i in range(K-1,N+1):\n  L_min=i*(i+1)//2\n  L_max=(N*(N+1)//2)-((N-i-1)*(N-i)//2)\n  ans += (L_max-L_min+1)%p\nprint(ans%p)", "MODINT = 1000000007\nn,k = map(int,input().split())\nprod = [0]*(n+1)\n\nfor i in range(1,n+1):\n    prod[i] = prod[i-1]+i\n# print(prod)\nans = 0\nfor s in range(k-1,n+1):\n    L = prod[s]\n    R = prod[n] - prod[n-s] + (n-s)\n    # print(L,R)\n    ans += R-L+1\n    ans %= MODINT\nprint(ans)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nN, K = na()\nans = 1\nfor i in range(K, N+1):\n    mae = i * (i - 1) // 2\n    ato = i * (N + N - i + 1) // 2\n    ans += ato - mae + 1\n    ans %= mod\nprint(ans)", "N,K = map(int,input().split())\nans = 1\n\nfor i in range(K,N+1):\n  ans += N*i-i*i+i+1\n\nprint(ans%1000000007)", "# https://drken1215.hatenablog.com/entry/2020/04/20/003900\n# k  \u500b\u8db3\u3057\u3066\u3067\u304d\u308b\u6700\u5c0f\u306e\u6574\u6570\u3092\u6c42\u3081\u308b (a \u3068\u3059\u308b)\n# k \u500b\u8db3\u3057\u3066\u3067\u304d\u308b\u6700\u5927\u306e\u6574\u6570\u3092\u6c42\u3081\u308b (b \u3068\u3059\u308b)\n# \u51fa\u6765\u4e0a\u304c\u308b\u6574\u6570\u306f b\u2212a+1 \u500b\u3067\u3042\u308b\n\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\n\nans = 0\nfor k in range(K, N+2):\n    mx = k * (2 * N - k + 1) / 2\n    mi = k * (k - 1) / 2\n    add = mx - mi + 1\n    ans += add\n    ans %= mod\nprint(int(ans))", "N, K = map(int,input().split())\nans = 0\nfor i in range(K,N+2):\n    ans += i*N -(i-1)*i +1  \nprint(ans%(10**9+7)) ", "def main():\n  N, K = map(int, input().split())\n  N = N + 1\n  A=[n for n in range(N)]\n  S=[0]*(N+1)\n  for a in A:\n    S[a+1]+=S[a]+a\n  ans=0\n  for k in range(K, N+1):\n    maxS, minS=S[-1], S[k]\n    offset=S[-k-1]\n    ans+=(maxS - offset) - minS + 1\n  print(ans%(1000000007))\n  \ndef __starting_point():\n  main()\n__starting_point()", "n, k = map(int, input().split())\nmod = 10**9+7\nans = 0\nfor i in range(k, n+2):\n    ans += (n+n-i+1)*i//2 - (i-1)*i//2+1\n    ans = ans%mod\nprint(ans%mod)", "def main():\n\tN, K = [int(x) for x in input().split(\" \")]\n\tp = 1000000007\n\tcnt = 0\n\tfor i in range(K, N + 2):\n\t\tcnt = (cnt + (i * N) - i * i + i + 1) % p\n\n\tprint(cnt)\n\nmain()", "N, K = list(map(int, input().split()))\nans = 0\nmod = 10**9+7\nfor k in range(K, N+2):\n    ans += max((N-k+1)*k+1, 0)\nprint((ans%mod))\n", "n,k=map(int,input().split())\ndef f(n):\n  return n*(n+1)/2\n\nsum=0\nfor i in range(k,n+2):\n  sum+=f(n)-f(n-i)-f(i-1)+1\nprint(int(sum%(10**9+7)))", "N, K = map(int, input().split())\n\nmod = 10 ** 9 + 7\nans = 0\n\nfor i in range(K, N+2):\n  ans += ((N + 1) * i - i ** 2 + 1) % mod\n  \nprint(ans % mod)", "n, k = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(k, n + 2):\n    minimum = (i - 1) * i // 2\n    maximum = (2 * n - i + 1) * i // 2\n    cnt += maximum - minimum + 1\n    cnt %= 10 ** 9 + 7\n\nprint(cnt)", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    from itertools import accumulate\n    import sys\n    input = sys.stdin.readline\n\n    n, k = list(map(int, input().split()))\n    mod = 10 ** 9 + 7\n    a = list(accumulate([0] + [i for i in range(n + 1)]))\n    ans = 0\n\n    for j in range(k, n + 2):\n        max_value = a[-1] - a[n + 1 - j]\n        min_value = a[j]\n        ans += (max_value - min_value) + 1\n        ans %= mod\n\n    print((ans % mod))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = list(map(int, input().split()))\nx = 10\ny = 10 + N\n\nans = 0\na = x\nb = y\nfor i in range(1, N + 2):\n    if i >= K:\n        ans += b - a + 1\n    a += (x + i)\n    b += (y - i)\n\nprint((ans % (10 ** 9 + 7)))\n", "N,K=list(map(int,input().split()))\np=10**9 + 7\nL_min,L_max=0,0\nfor i in range(K-1,N+1):\n  L_min+=i*(i+1)//2 - 1\n  L_max+=(N*(N+1)//2)-((N-i-1)*(N-i)//2)\nans = (L_max-L_min)%p\nprint(ans)\n", "N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\ns = [0] * (N + 1)\nfor i in range(1, N + 1):\n    s[i] = s[i-1] + i\n\nans = 0\nfor n in range(K, N + 2):\n    mn = s[n-1] - s[0]\n    mx = s[N] - s[max(N-n, 0)]\n    count = mx - mn + 1\n    ans += count\n    ans %= MOD\nprint(ans)", "N,K=map(int,input().split())\nmod=10**9+7\nans=0\nfor i in range(K,N+2):\n    ans+=i*(N-i+1)%mod+1\n    ans%=mod\nprint(ans)", "n,k = [int(x) for x in input().split()]\na = [0] * (n + 1)\nfor i in range(1,n+1):\n  a[i] = a[i-1] + i\n#print(a)\nres = 0\nfor i in range(k,n+1):\n  ma = a[n] - a[n-i]\n  mi = a[i-1]\n  res += ma - mi + 1\n  #print(i,res,ma,mi)\nres += 1\nres %= 10 ** 9 + 7\nprint(res)", "N, K = map(int, input().split())\nmin_val = 0\nmax_val = 0\nfor i in range(K):\n    max_val += N - i\n    min_val += i\n# print(min_val)\n# print(max_val)\n\nans = 0\nmod = 10 ** 9 + 7\nfor i in range(K, N + 2):\n    ans += max_val - min_val + 1\n    ans %= mod\n    min_val += i\n    max_val += N - i\nprint(ans)", "n, k = map(int, input().split())\n\nmod = 10 ** 9 + 7\ninv = pow(2, mod - 2, mod=mod)\n\ndef calc(b, e, c):\n    nonlocal mod\n    nonlocal inv\n    res = (e + b) % mod\n    res = ((res * c) % mod ) * inv\n    return res % mod\n\nans = 0\nfor i in range(k, n + 2):\n    min_val = calc(0, i - 1, i)\n    max_val = calc(n - i + 1, n, i)\n    ans += (max_val - min_val + 1) % mod\n    ans %= mod\n\nprint(ans)", "N, K = map(int, input().split())\nbig = 10**9+7\nans = 0\ndef sum2(begin,end):\n  return (begin+end)*(end-begin+1)//2\nfor k in range(K,N+2):\n  ans += (sum2(N+1-k+1,N+1)-sum2(1,k)+1)%big\nprint(ans%big)", "#amari = (10**100)%(10**9+7)\ndef sm(i):\n    tmpp = 0\n    for j in range(i):\n        tmpp += j\n    return tmpp,j\n\ndef bi(i,N):\n    tmpp = 0\n    for j in range(i):\n        tmpp += N-j\n\n    return tmpp,N-j\n\ndef main():\n    N,K = list(map(int,input().split()))\n    ans = 0\n    #loopnum = (N+1) - K + 1\n    for i in range(K,N+2,1):\n        if i == K:\n            small,numsmall = sm(i)\n            big,numbig = bi(i,N)\n            #print(numsmall,numbig)\n        else:\n            small += numsmall+1\n            numsmall += 1\n            big += numbig - 1\n            numbig -= 1\n        ans += big - small + 1\n\n    return (ans%(10**9+7))\n\nprint((main()))\n", "n,k=map(int,input().split())\n\nM=[n]*(n+1)\nm=[0]*(n+1)\nfor i in range(1,n+1):\n    M[i]=M[i-1]+n-i\n    m[i]=m[i-1]+i\n\nmod=10**9+7\nans=0\nfor i in range(k-1,n+1):\n    tmp=M[i]-m[i]+1\n    ans=(ans+tmp)%mod\nans=ans%mod\nprint(ans)", "def main():\n    n, k = map(int, input().split())\n    mod = 10 ** 9 + 7\n    cnt = 0\n    for i in range(k, n+2):\n        l = (i-1)*i//2\n        h = (n+n-i+1)*i//2\n        cnt += h - l + 1\n    print(cnt % mod)\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\n\nMOD = 10**9+7\nn += 1\nans = 0\nfor i in range(k, n+1):\n    p = i*(2*n - (i-1)) // 2\n    m = i*(2 + i-1) // 2\n    ans += p - m + 1\nprint(ans % MOD)", "n, k = map(int, input().split())\n\nMOD = 10 ** 9 + 7\n\nH = 0\nL = 0\nfor i in range(k):\n    L += i\n    H += (n - i)\n\nans = 0\na = k\nb = n - k\nfor i in range(n+2-k):\n    #print(a, b, H, L)\n    ans += H - L + 1\n    L += a\n    H += b\n    a += 1\n    b -= 1\n    ans %= MOD\n\nprint(ans)", "n,k=map(int,input().split())\nmod=10**9+7\nans=0\nfor i in range(k,n+2):\n  l=i*(1+i)//2\n  r=i*((n+1-i)+1+(n+1))//2\n  ans=(ans+r-l+1)%mod\nprint(ans)", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    n, k = LI()\n    N = 10**9+7\n    ans = 0\n    start = sum([i for i in range(0,k-1)])\n    goal = sum([i for i in range(n,n-k+1,-1)])\n\n    for i, j in zip(range(k-1,n+1), range(n-k+1,-1,-1)):\n        start += i\n        goal  += j\n        cnt = (goal-start+1)%N\n        ans += cnt\n        ans %= N\n\n    print(ans)\nmain()", "N, K = map(int, input().split())\nM = 10**9 + 7\nA = [0 for _ in range(N+1)]\nRA = [0 for _ in range(N+1)]\nfor i in range(1, N+1):\n    A[i] = A[i-1] + i\n\nRA[0] = N\nfor j in range(1, N+1):\n    RA[j] = N-j + RA[j-1]\n\nans = 0\n# print(A)\n# print(RA)\nfor k in range(K, N+2):\n    minv = A[k-1]\n    maxv = RA[k-1]\n    ans += ((maxv - minv) + 1)%M\n    ans %= M\n    # print(k, (maxv-minv)+1)\n\nprint(ans)", "N, K = map(int, input().split())\nA = [i for i in range(N+1)]\nmod = 10**9+7\nans = 0\nhead = sum(A[:K-1]) if K > 1 else 0\ntail = sum(A[-K+1:]) if K > 1 else 0\nfor i in range(K, N+2):\n    head += A[i-1]\n    tail += A[-i] \n    ans += tail-head+1\n    ans = ans % mod\n\nprint(ans)", "n, k = map(int, input().split())\nans = 0\nfor i in range(k, n+2):\n    ans += (n+n-i+1)*i//2 -  (i-1)*i//2 + 1\nprint(ans%(10**9+7))", "MOD=10**9+7\n\nN,K=map(int,input().split())\nans=0\nans+=N-K+2\nans+=(N+1)*(N+1+K)*(N-K+2)//2\nans%=MOD\nans-=(N+1)*(N+2)*(2*N+3)//6\nans%=MOD\nans+=K*(K-1)*(2*K-1)//6\nans%=MOD\nprint(ans)", "mod=10**9+7\nN,k=map(int,input().split())\nans=0\nfor j in range(k,N+2):\n  ans+=(N-j+1)*j\n  ans+=1\n  ans%=mod\nprint(ans%mod)", "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**7)\nimport bisect\nimport heapq\nimport itertools\nimport math\nfrom collections import Counter, defaultdict, deque\nfrom copy import deepcopy\nfrom decimal import Decimal\nfrom math import gcd\nfrom operator import add, itemgetter, mul, xor\ndef cmb(n,r,mod):\n  bunshi=1\n  bunbo=1\n  for i in range(r):\n    bunbo = bunbo*(i+1)%mod\n    bunshi = bunshi*(n-i)%mod\n  return (bunshi*pow(bunbo,mod-2,mod))%mod\nmod = 10**9+7\ndef I(): return int(input())\ndef LI(): return list(map(int,input().split()))\ndef MI(): return list(map(int,input().split()))\ndef LLI(n): return [list(map(int, input().split())) for _ in range(n)]\n\n#bisect.bisect_left(list,key)\u306flist\u306e\u306a\u304b\u3067key\u672a\u6e80\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3064\u307e\u308alist[i] < x \u3068\u306a\u308b i \u306e\u500b\u6570\n#bisect.bisect_right(list, key)\u306flist\u306e\u306a\u304b\u3067key\u4ee5\u4e0b\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3064\u307e\u308alist[i] <= x \u3068\u306a\u308b i \u306e\u500b\u6570\n#\u3053\u308c\u3092\u5fdc\u7528\u3059\u308b\u3053\u3068\u3067\n#len(list) - bisect.bisect_left(list,key)\u306flist\u306e\u306a\u304b\u3067key\u4ee5\u4e0a\u306e\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#len(list) - bisect.bisect_right(list,key)\u306flist\u306e\u306a\u304b\u3067key\u3088\u308a\u5927\u304d\u3044\u6570\u5b57\u304c\u3044\u304f\u3064\u3042\u308b\u304b\u3092\u8fd4\u3059\n#\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\u304d\u306f\u3042\u3089\u304b\u3058\u3081list\u3092\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\u3053\u3068\uff01\nn,k = MI()\nans = 0\nfor i in range(k,n+2):\n    ans += i*(n-i+1)%mod + 1\nprint((ans%mod))\n", "N, K = map(int, input().split())\n\nMOD = 10**9 + 7\nn_sum = [0]\n\nfor i in range(N):\n    n_sum.append(n_sum[i] + i+1)\n#print(n_sum)\n\nans = 0\nfor i in range(K-1,N):\n    #print(n_sum[i], n_sum[N]-n_sum[N-i-1])\n    ans += (n_sum[N] - n_sum[N-i-1] - n_sum[i] + 1)\n    ans %= MOD\n\nprint((ans+1)%MOD)", "n,m = list(map(int,input().split()))\n\nmod =10**9+7\nsum = 0\nmin = 0\nmax = 0\n\nfor k in range(1,n+2):\n    min += k-1\n    max += n-(k-1)\n\n    if k >= m:\n        sum = (sum + max-min+1) % mod\nprint(sum)\n", "n,k = map(int,input().split())\n\nans=0\nmod = 10**9+7\nfor i in range(k,n+2):\n  a0=(i*(i-1))//2\n  an=i*n-a0\n  ans+=an-a0+1\n\nprint(ans%mod)", "n,k = map(int,input().split())\nmod = 10**9 + 7\n\nans = 1\nfor i in range(k,n+1):\n    low = i*(i-1)//2\n    high = n*(n+1)//2 - (n-i)*(n-i+1)//2\n    ans += high - low + 1\n    ans %= mod\nprint(ans)", "n,k=map(int,input().split())\nL=list(range(n+1))\n\ncnt=0\nans=0\n\ndef calc(i):\n    smallest=(i-1)*i//2\n    largest=(2*n-i+1)*i//2\n    return largest-smallest+1\n\n\nfor i in range(k,n+2):\n    cnt+=calc(i)\n    cnt%=(10**9+7)\n    \n\nprint(cnt)", "N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\nans = 1\nfor i in range(K, N + 1):\n    ans += i * (2 * N - i + 1) // 2 % MOD - i * (i - 1) // 2 % MOD + 1\n    ans %= MOD\nprint(ans)", "n, k = map(int,input().split())\n\ncnt = []\n\nfor i in range(k,n+2):\n    cnt.append(i*n -(i-1)*i +1)\n    \nprint(sum(cnt)%(10**9+7))    ", "mod = 10 ** 9 + 7\nN, K = map(int, input().split())\nans = 1\ndef main(i):\n  m = i * (i - 1) // 2\n  M = m + i * (N - i + 1)\n  return M - m + 1\n\nfor i in range(K, N+1):\n  ans += main(i)\n  \nprint(ans%mod)", "n,k = map(int,input().split())\nans = 1\ny = sum(list(range(n-k+2,n+1)))\nj = n - k + 1\nfor i in range(k,n+1):\n    x = (1+(i-1))*(i-1)//2\n    y += j\n    j -= 1\n    ans += y - x + 1\n    ans %= 10 ** 9 + 7\nprint(ans)", "N, K = map(int, input().split())\n\ntmp = [0 for _ in range(10 ** 5 * 3 + 1)]\nfor i in range(10 ** 5 * 3):\n    tmp[i + 1] = tmp[i] + (i + 1)\n\nans = 1\nfor i in range(K, N + 1):\n    tmp_max = tmp[N] - tmp[N - i]\n    ans += tmp_max - tmp[i-1] + 1\n\nprint(ans % (10 ** 9 + 7))", "import itertools\nn,k=map(int,input().split())\nmod=10**9+7\nans=0\nfor i in range(k,n+2):\n  l=i*(1+i)//2\n  r=i*((n+1-i)+1+(n+1))//2\n  ans=(ans+r-l+1)%mod\nprint(ans)", "#!/usr/bin/env python3\nimport sys\n\ninput = sys.stdin.readline\nmod = 1000000007\n\n\ndef ST():\n    return input().rstrip()\n\n\ndef I():\n    return int(input())\n\n\ndef MI():\n    return list(map(int, input().split()))\n\n\ndef LI():\n    return list(MI())\n\n\nN, K = MI()\nMAX = sum(range(N - K + 2, N + 1))\nMIN = sum(range(0, K - 1))\n\nans = 0\n\nfor k in range(K, N + 2):\n    MAX += N - k + 1\n    MIN += k - 1\n    ans += (MAX - MIN + 1) % mod\n\nprint((ans % mod))\n", "# 10^100\u306e\u30af\u30bd\u30c7\u30ab\u6570\u5024\u304c\u30af\u30bd\u30c7\u30ab\u3059\u304e\u308b\u305f\u3081\u3001+0,+1..+N\u304c\u675f\u306b\u306a\u3063\u3066\u3082\u3044\u305f\u304f\u3082\u75d2\u304f\u3082\u306a\u3044\n# \u306a\u306e\u3067\u3082\u306f\u3084\u7121\u8996\u3057\u3066\u3044\u3044\n# \u6700\u521d\u306e\u4f8b\u3067\u3044\u3046\u3068\u30012\u3064\u9078\u3076\u306e\u306f[0,1,2,3]\u304b\u3089\u306a\u306e\u3067\u3001\u548c\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u306f\u6700\u5c0f\u50241~\u6700\u5927\u50245\u306e5\u3064\n# 3\u3064\u9078\u3076\u306e\u306f\u6700\u5c0f\u50243~\u6700\u5927\u50246\u306e4\u3064\n# 4\u3064\u9078\u3076\u306e\u306f1\u3064\n# \u6bce\u56de\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u8a08\u7b97\u3057\u3066\u5dee+1\u3092\u52a0\u3048\u3066\u3084\u308b\u3068\u3067\u304d\u3042\u304c\u308a\n# \u8a08\u7b97\u306b\u306f\u6570\u5217\u306e\u548c\u3092\u4f7f\u3046\n\nn, k = list(map(int, input().split()))\nmod = 10**9 + 7\n\nans = 1\nfor i in range(k, n + 1):\n    # \u521d\u98050,\u516c\u5dee1,\u672b\u9805i-1\u307e\u3067\u306e\u548c\n    min_s = i * (i - 1) // 2\n    # \u521d\u9805n+1-i, \u516c\u5dee1, \u672b\u9805i-1\u307e\u3067\u306e\u548c\n    max_s = i * (2 * (n + 1 - i) + (i - 1)) // 2\n    ans += max_s - min_s + 1\n    ans %= mod\nprint(ans)\n", "N,K = map(int,input().split())\na = 0\nfor i in range(K,N+2):\n  a += 1 + (N+1-i)*i\nprint(a%(10**9+7))", "n,k = map(int,input().split())\nmod = 10**9 +7\n\nsum1 = 0\nfor i in range(k,n+2):\n    sum1 +=(-i*(i-1)//2 + i*(2*n-i+1)//2+1)%mod\n    \nprint(sum1%mod)", "MOD=10**9+7\nN,K=map(int,input().split())\nans=0\nfor k in range(K,N+2):\n  ans+=(N-k+1)*k+1\n  ans%=MOD\nprint(ans)", "n, k = map(int,input().split())\ncnt = 0\nfor i in range(k,n+2):\n    cnt += i*n -(i-1)*i +1  \nprint(cnt%(10**9+7)) ", "#import math\n#import collections\nn,k = map(int, input().split( ))\n#A = list(map(int, input().split( )))\nmod = 10**9+7\nans = 0\nl,h = 0,0\nfor x in range(1,n+2):\n  l += x -1\n  h += n -x +1\n  if x >= k:\n    ans += (h-l+1)\n    ans = ans%mod\nprint(ans)", "n, k = list(map(int, input().split()))\nmod = 10 ** 9 + 7\n\nans = 0\n\nfor p in range(k, n+2):\n    minimum = p * (p-1) // 2  # 0\u301c(p-1)\u306e\u548c\n    maximum = p * (2*n - p + 1) // 2  # (n-p+1)\u301cn\u306e\u548c\n    ans += maximum - minimum + 1\n    ans %= mod\n\nprint(ans)\n", "from itertools import accumulate\nN,K = map(int,input().split())\nacc = list(accumulate(range(N+1), lambda x,y:x+y))\nans = 0\nmod = 10**9+7\nfor i in range(K, N+1):\n    r = acc[N] - acc[N-i]\n    l = acc[i-1]\n    ans = (ans+r-l+1) % mod\nans += 1\nprint(ans % mod)", "N, K = [int(_) for _ in input().split()]\n\ns = 0\ne = 0\nans = 0\n\nMOD = 10 ** 9 + 7\n\nfor i in range(N+1):\n    s += i \n    e += N - i \n    if i + 1 >= K:\n        ans += e - s + 1\n        ans %= MOD\nprint(ans)\n", "n,k=map(int,input().split());print(sum((n+1-i)*i+1for i in range(k,n+2))%(10**9+7))", "from scipy.special import comb\nn, k = list(map(int, input().split()))\nnum, ans = 0, 0\n\nfor i in range(n+1):\n    num += n-2*i\n    if i >= k-1:\n        ans += num+1\nans = ans%(10**9+7)\nprint(ans)\n\n", "N,K = list(map(int,input().split()))\nans = 0\nfor i in range(K,N+2):\n    ans += (((2*N-i+1)*i) // 2 - ((i-1)*i)//2)+1\n    ans = ans % (10**9+7)\nprint(ans)\n", "N,K=map(int,input().split());f=lambda i:i*(i+1)//2;print(sum(f(N)-f(N-i)-f(i-1)+1for i in range(K,N+2))%(10**9+7))", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\n\n# import numpy as np\n# from itertools import combinations as comb\n# from bisect import bisect_left, bisect_right, insort_left, insort_right\n# from collections import Counter\n\nMOD = 1000000007  # type: int\nOFFSET = 10 ** 100\n\n\ndef k_in_n(k, n):\n    \"\"\"0\u301cn \u307e\u3067\u306e\u6570\u304b\u3089\u3061\u3087\u3046\u3069 k \u500b\u306e\u6570\u3092\u9078\u3076\u6642\u306e\u6700\u5927\u6700\u5c0f\"\"\"\n    minimum = (k * (k - 1)) // 2\n    maximum = (k * (2 * n - k + 1)) // 2\n    return (minimum, maximum)\n\n\ndef solve(N: int, K: int):\n    keep = None  # \u307e\u3060\u52a0\u7b97\u3055\u308c\u3066\u3044\u306a\u3044\u7bc4\u56f2\n    answer = 0\n    for k in range(K, N + 2):\n        if keep is None:\n            keep = k_in_n(k, N)\n        else:\n            minmax = k_in_n(k, N)\n            if minmax[0] + OFFSET <= keep[1]:\n                keep[0] -= OFFSET\n                keep[1] = minimum[1]\n            else:\n                answer = (answer + keep[1] - keep[0] + 1) % MOD\n                keep = minmax\n\n    if keep is not None:\n        answer = (answer + keep[1] - keep[0] + 1) % MOD\n    return answer\n\n\ndef main():\n    tokens = chain(*(line.split() for line in sys.stdin))\n    # N, K = map(int, input().split())\n    # N, K = input().strip()\n    # N, K = int(input())\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    answer = solve(N, K)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = list(map(int, input().split()))\n\n\ndef sub_sum(l, r):\n    return (l + r) * (r - l + 1) / 2\n\n\nans = 0\n\nfor i in range(K, N+2):\n    l = sub_sum(0, i-1)\n    r = sub_sum(N-i+1, N)\n    ans += r - l + 1\n\nans = ans % (10**9+7)\n\nprint((int(ans)))\n", "N, K = list(map(int, input().split()))\nMOD = 10**9+7\n\nac = [0]*(N+1)\nfor i in range(1, N+1):\n    ac[i] = ac[i-1]+i\n\nans = 1\nfor i in range(K, N+1):\n    r = ac[-1]-ac[N-i]\n    l = ac[i-1]\n    ans += (r-l+1) % MOD\nprint((ans % MOD))\n", "def resolve():\n    n, k = map(int,input().split())\n    a = 10**9+7\n    ans =0\n    for K in range(k,n+2):\n        ans += n*K - K**2 + K + 1\n        ans %= a\n    print(ans)\nresolve()", "N,K=list(map(int,input().split()))\nb=0\nc=0\nans=0\n\nfor i in range(0,K):\n    b+=i\n    c+=(N-i)\nans=c-b+1\n\n\nfor i in range(K,N+1):\n    b+=i\n    c+=N-i\n    ans+=c-b+1\n\nprint((ans%(10**9+7)))\n \n", "N, K = map(int, input().split())\nmod = 10**9 + 7\n\ndef ksum(n):\n    return n*(n+1)//2\n\nans = 0\nmsum = ksum(N)\nfor i in range(K, N+2):\n    ans += msum - ksum(N - i) - ksum(i-1) + 1\n    #print(i, ans)\n    ans %= mod\n\nprint(ans)", "n, k = map(int, input().split())\n\np = 10**9+7\nans = 1\nfor i in range(k, n+1):\n    ans += (i/2 * ((n-i+1+n) - (0+i-1))) + 1\n    ans %= p\nprint(int(ans))", "n,k = list(map(int,input().split()))\ns = 0\nfor i in range(k,n+2):\n    s += i*(n*2+1-i)//2 - i*(i-1)//2 + 1\nprint((s%1000000007))\n", "n,k=map(int,input().split())\nd,u=0,10**1000\nans=0\nwhile d<u:\n    d=(k*(k-1))//2\n    u=(2*k*n-k**2+k)//2\n    ans+=u-d+1\n    k+=1\nprint(ans%(10**9+7))", "def rui_sum(n,k):\n    k_lsum = (k-1)*k//2\n    k_usum = k*n - (k-1)*k//2    \n    return k_usum - k_lsum + 1\n\nn, k = map(int,input().split())\n\ncnt = []\n\nfor i in range(k,n+2):\n    cnt.append(rui_sum(n,i))\n    \nprint(sum(cnt)%(10**9+7))", "N,K = map(int,input().split())\nprint(sum((N+1-n)*n+1 for n in range(K,N+2))%(10**9+7))", "def main():\n    n,k = list(map(int,input().split()))\n    mod = 10**9+7\n    ans = 0\n    for i in range(k,n+2):\n        ans += (i*(n-i+1)+1) % mod\n        ans = ans % mod\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = map(int, input().split())\n\ndef sigma(N, k):\n  a = (k*(k+1)*(2*k+1)//6)%(10**9+7)\n  b = (k*(k+1)//2)%(10**9+7)\n  c = k\n  return -a + (N+1)*b + c\n\nprint((sigma(N,N+1)-sigma(N, K-1))%(10**9+7))", "N, K = map(int, input().split())\nstart = sum(range(K))\nend = sum(range(N-K+1, N+1))\ncount = 0\n#print(start, end)\nfor k in range(K, N + 2):\n    count += end - start + 1\n    count %= 1000000007\n    start += k\n    end += (N-k)\n    \nprint(count)", "n,k = map(int,input().split())\n\na = (n-k+2)*(((k+n+1)*(n+1))+2)//2\nb = (((n+1)*(n+2)))*(2*n+3)//6\nc = (((k-1)*k))*(2*k-1)//6\n\nprint((a-b+c)%(10**9+7))", "n,k=map(int,input().split())\nmod=10**9+7\nans=0\nfor i in range(k,n+2):\n  l=i*(1+i)//2\n  r=i*((n+1-i)+1+(n+1))//2\n  ans=(ans+r-l+1)%mod\nprint(ans)", "from math import factorial\nn, k = [int(i) for i in input().split()]\nmod = 10 ** 9 + 7\n\ndef s(n, m=0): # m~n\u306e\u7dcf\u548c\n    nonlocal mod\n    return (n * (n+1) // 2 - (n-m) * (n-m+1) // 2) % mod\n\nsm = 0\nfor i in range(k, n+1):\n    sm = (sm + s(n, i) - s(i-1, i-1) + 1) % mod\n\nprint((sm+1) % mod)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 19:24:24 2020\n\n@author: liang\n\"\"\"\n\nkey = 10**9 + 7\nT, K = list(map(int, input().split()))\nN = list(range(T+1))\nlower = sum(N[:K])\nhigher = sum(N[-K::1])\nans = 0\nans = (higher - lower + 1)%key\nfor i in range(K+1,T+2):\n    lower += N[i-1]\n    higher += N[-i]\n    ans += higher - lower + 1\n    ans %= key\nprint(ans)\n#print(lower)\n#print(higher)\n", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\nimport numpy as np\n# import heapq\n# from collections import deque\n\n# N = int(input())\n# S = input()\n# n, *a = map(int, open(0))\nN, K = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nA = [i for i in range(N + 1)]\nA = np.array(A)\ncum_A = np.cumsum(A)\n\ncnt = 0\nfor i in range(K, N + 1):\n    cnt += (cum_A[N] - cum_A[N - i]) - cum_A[i - 1] + 1\nprint((cnt + 1) % (10**9 + 7))", "N,K=map(int,input().split())\nmod=10**9+7\ns=0\nfor i in range(K,N+2):\n  s+=(2*N-i+1)*i//2-i*(i-1)//2+1\nprint(s%mod)", "n, k = list(map(int, input().split()))\n\nMOD = (10 ** 9) + 7\nans = 0\n\nmin_val = 0\nmax_val = n\np = 1\n\nfor i in range(n + 1):\n    # print(min_val, max_val)\n    if i + 1 >= k:\n        ans += max_val - min_val + 1\n        ans = ans % MOD\n    min_val += p\n    max_val += n - p\n    p += 1\n\nprint(ans)\n", "N, K = map(int,input().split())\nans = 0\nwhile K <= N+1:\n  ans += ((N+1)*(N+2) - (N-K+1)*(N-K+2) - K*(K+1)) // 2 + 1\n  K += 1\nprint(ans % (10 ** 9 + 7))", "n,k = map(int,input().split())\nmod = 10**9+7\n\nans = 0\nfor i in range(k,n+2):\n  ans += n*i - i*(i-1) + 1\n  ans %= mod\nprint(ans)", "import bisect, collections, copy, heapq, itertools, math, numpy, string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return map(int, sys.stdin.readline().rstrip().split())\ndef LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\n\nmod = 10 ** 9 + 7\nN, K = MI()\ndef num(self):\n    return (-2 * pow(self, 3) + 3 * N * pow(self, 2) + (3 * N + 8) * self) // 6\nans = num(N + 1) - num(K - 1)\nprint(ans % mod)", "N, K = [int(x) for x in input().split()]\n\nans = 0\nfor k in range(K, N + 2):\n    ans = (ans + k * (N - k + 1) + 1) % (10 ** 9 + 7)\n\nprint(ans)", "def solve():\n    N,K = [int(i) for i in input().split()]\n    ans = 0\n    mod = 10**9 + 7\n    for M in range(K, N+2):\n        min_sum = (M-1) * M // 2\n        max_sum = (2*N-(M-1)) * M // 2\n        cnt = max_sum - min_sum + 1\n        ans += cnt\n        ans %= mod\n    print(ans)\n\ndef __starting_point():\n    solve()\n__starting_point()", "N, K = map(int, input().split())\nans = 0\nbigint = 10**9+7\nfor k in range(K,N+2):\n    ans += N-k+2+(N-k+1)*(k-1)\n    ans %= bigint\nprint(ans)", "N,K=map(int,input().split())\ns=0\nfor i in range(K,N+2):\n  s+=i*(N-i+1)+1\nprint(s%(10**9+7))", "#!/usr/bin/env python3\ndef main():\n    N, K = list(map(int, input().split()))\n    mod = 7 + 10 ** 9\n\n    res = 0\n    for k in range(K, N + 2):\n        res += ((k * (2 * N - k + 1) / 2) - (k * (k - 1) / 2) + 1)\n        res %= mod\n    print((int(res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from itertools import accumulate\n\n# k\u500b\u9078\u3093\u3060\u6642\u306e\u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u304c\u5206\u304b\u308c\u3070\u3001\u500b\u6570\u304c\u5206\u304b\u308b\uff1f\uff1f\nn,k = list(map(int, input().split()))\ncumsum   = list(accumulate(range(n+1)))\ncumsum_r = list(accumulate(range(n+1)[::-1]))\n\nMOD = 10**9 + 7\nans = 0\nfor i in range(k, n+2):\n    _min, _max = cumsum[i-1], cumsum_r[i-1]\n    ans = (ans + _max - _min + 1) % MOD\n\nprint(ans)", "n, k = map(int, input().split())\nmod = 1000000007\nans = 0\nfor i in range(k, n+2):\n  minSum = (i*(i-1))//2\n  maxSum = (i*(2*n-i+1))//2\n  ans += maxSum - minSum + 1\n  ans %= mod\nprint(ans)", "n, k = list(map(int, input().split()))\nmod = 10**9 + 7\n\ns = [0]*(n+1)\ns[0] = n + 1\nfor i in range(1, n+1):\n    s[i] = (s[i-1] + n - 2 * i) % mod\n\nans = 0\nfor i in range(k-1, n+1):\n    ans += s[i]\n    ans %= mod\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\ns = [0]\nfor i in range(1,n+1):\n    s.append(s[i-1] + i)\n\nans = 0\nfor i in range(k,n+1):\n    ans += ((s[n]-s[n-i]) - s[i-1])+ 1\nprint(((ans+1) % (10**9 + 7)))\n", "n, k = map(int, input().split())\nans = 0\nfor i in range(k, n + 2):\n    ans += (n + (n - i + 1)) * i // 2 - (0 + (i - 1)) * i // 2 + 1\nprint(ans % (10 ** 9 + 7))", "import math\nN,K=list(map(int, input().split()))\n\nlist1=list(range(N+1))\nlist2=[]\nfor i in range(K,N+2):\n    min=math.floor(i*(list1[0]+list1[i-1])/2)\n    max=math.floor(i*(list1[N-i+1]+list1[N])/2)\n    list2.append(max-min+1)\n\nprint((sum(list2)%(10**9+7)))\n"]