["hola = 0\na = int(input())\nd = len(str(a))\nk = 10**(d-1)\nfor i in range(1, d):\n    hola += i * (10**(i-1)*9)\n\nhola += d * (a-k+1)\nprint(hola)", "n=int(input())\n\nv=0\ni=1\nwhile(n>=10**i):\n\tif i==1:v+=9\n\telse:v+=(10**i-10**(i-1))*i\n\ti+=1\n\t\nx=n-10**(i-1)+1\nv+=i*x\n\nprint(v)", "n = int(input())\nres = min(9, n)\nfor i in range(1, 10):\n    #print(res)\n    res += max(min(9*(10**i), n-10**i+1), 0)*(i+1)\n   # print(9*(10**i), n-10**i)\nprint(res)\n", "def f(n):\n\tif n < 10:\n\t\treturn n\n\tk = 10 ** (len(str(n)) - 1)\n\treturn len(str(n)) * ((n % k) + 1) + f(n - (n % k) - 1)\n\nn = int(input())\nprint(f(n))", "n = int(input())\n\ndef countd(n):\n    d = 0\n    while n >= 10**d:\n        d += 1\n    count = 0\n    while d > 0:\n        tens = 10 ** (d - 1)\n        count += (n - tens + 1) * d\n        n = tens - 1\n        d -= 1\n    return count\n\nprint(countd(n))", "n = int(input())\ntotal = 0\n\nif(n < 10):\n\tprint(n)\n\treturn\n\ntotal += 9\n\nif(n < 100):\n\ttotal += (n - 9)*2\n\tprint(total)\n\treturn\n\ntotal += 90*2\n\nif(n < 1000):\n\ttotal += (n-99)*3\n\tprint(total)\n\treturn\n\ntotal += (900)*3\n\nif(n < 10000):\n\ttotal += (n-999)*4\n\tprint(total)\n\treturn\n\ntotal += (9000)*4\n\nif(n < 100000):\n\ttotal += (n-9999)*5\n\tprint(total)\n\treturn\n\ntotal += (90000)*5\n\nif(n < 1000000):\n\ttotal += (n-99999)*6\n\tprint(total)\n\treturn\n\ntotal += (900000)*6\n\nif(n < 10000000):\n\ttotal += (n-999999)*7\n\tprint(total)\n\treturn\n\ntotal += (9000000)*7\n\nif(n < 100000000):\n\ttotal += (n-9999999)*8\n\tprint(total)\n\treturn\n\ntotal += (90000000)*8\n\nif(n < 1000000000):\n\ttotal += (n-99999999)*9\n\tprint(total)\n\treturn\n\ntotal += (900000000)*9\n\nif(n < 10000000000):\n\ttotal += (n-999999999)*10\n\tprint(total)\n\treturn\n\ntotal += (9000000000)*10\n\nprint(total)", "n = int(input())\nans = 0\nA = [9 * 10 ** i for i in range(10)]\nfor i in range(10):\n    if n <= A[i]:\n        print(ans + n * (i + 1))\n        break\n    else:\n        ans += A[i] * (i + 1)\n        n -= A[i]\n", "def f(a):\n    k = 0\n    s = len(str(a))\n    for i in range(1, s):\n        k += (int(\"9\" * i) - int(\"1\" + \"0\" * (i - 1)) + 1) * i\n    k += (a - int(\"1\" + \"0\" * (s - 1)) + 1) * s\n    return(k)\na = int(input())\nprint(f(a))", "from heapq import heapify, heappush, heappop\nfrom collections import Counter, defaultdict, deque, OrderedDict\nfrom sys import setrecursionlimit, maxsize\nfrom bisect import bisect_left, bisect, insort_left, insort\nfrom math import ceil, log, factorial, hypot, pi\nfrom fractions import gcd\nfrom copy import deepcopy\nfrom functools import reduce\nfrom operator import mul\nfrom itertools import product, permutations, combinations, accumulate, cycle\nfrom string import ascii_uppercase, ascii_lowercase, ascii_letters, digits, hexdigits, octdigits\n\nprod = lambda l: reduce(mul, l)\nprodmod = lambda l, mod: reduce(lambda x, y: mul(x,y)%mod, l)\n\ndef read_list(t): return [t(x) for x in input().split()]\ndef read_line(t): return t(input())\ndef read_lines(t, N): return [t(input()) for _ in range(N)]\n\nN = read_line(int)\nans = 0\nfor i in range(len(str(N))):\n    ans += N - 10**i + 1\nprint(ans)\n    \n", "def f(n):\n    n1 = n\n    r = 0\n    t = 0\n    for i in range(0, 15):\n        if n >= 10 ** i:\n            r = r + n - 10 ** i + 1\n    return r\nn = int(input())\nprint(f(n))\n", "def __starting_point():\n    n_books = int(input())\n    x = 0\n    length = 1\n    while n_books > 10**length - 1:\n        x += (10**length - 10**(length-1))*length\n        length += 1\n    x += (n_books - 10**(length-1) + 1)*length\n    print(x)\n\n__starting_point()", "__author__ = 'KostikBigOne'\n\ndef main():\n    n = int(input())\n    power, cnt = 1, 9\n    ans = 0\n    length = 1\n    while True:\n        if n >= 10 * power:\n            ans += length * cnt\n            cnt *= 10\n            power *= 10\n            length += 1\n        else:\n            ans += length * (n - power + 1)\n            break\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "def f(m, n):\n    if len(str(m)) < len(str(n)):\n        return f(m, int('9' * (len(str(n)) - 1))) + f(int('9' * (len(str(n)) - 1)) + 1, n)\n    else:\n        return len(str(n)) * (n- m + 1)\n\nn = int(input())\nm = 1\nprint(f(1, n))", "a = input()\nsumm = 0\nlena = len(a)\nfor i in range(1, lena):\n    summ += 10 ** (i - 1) * 9 * i\nsumm += lena * (int(a) - 10 ** (lena - 1) + 1)\nprint(summ)\n\n", "n = int(input())\n\nnumbers = 0\nadd = 9\nmult = 1\nmult2 = 1\nwhile (n >= mult2 * 10):\n    numbers += 9 * mult * mult2\n    mult += 1\n    mult2 *= 10\n\nnumbers += (n - mult2 + 1) * mult\n\nprint(numbers)", "def f(n):\n    if n < 10:\n        return n\n    if n < 100:\n        return 9 + 2 * (n - 9)\n    if n < 1e3:\n        return f(99) + 3 * (n - 99)\n    if n < 1e4:\n        return f(999) + 4 * (n - 999)\n    if n < 1e5:\n        return f(9999) + 5 * (n - 9999)\n    if n < 1e6:\n        return f(99999) + 6 * (n - 99999)\n    if n < 1e7:\n        return f(999999) + 7 * (n - 999999)\n    if n < 1e8:\n        return f(9999999) + 8 * (n - 9999999)\n    if n < 1e9:\n        return f(99999999) + 9 * (n - 99999999)\n    return f(999999999) + 10 * (n - 999999999)\n\nn = int(input())\nprint(f(n))\n", "def xxx(n):\n    total = 0\n    curr = 9\n    for i in range(n):\n        total += curr * (i + 1)\n        curr *= 10\n\n    return total\n\n\ndef __starting_point():\n    n = int(input())\n    l = len(str(n))\n    a = xxx(l - 1)\n    b = (n - 10 ** (l - 1) + 1) * l\n    print(a + b)\n__starting_point()", "n = int(input())\ns = 9\nans = 0\ni = 1\nwhile (n > 0):\n    n -= s\n    ans += s * i\n    i += 1\n    s *= 10\nans += n * (i - 1)\nprint(ans)\n    \n", "n,s=int(input()),0\nfor b in range(10,-1,-1):\n    if n >= 10**b:\n        s += (b+1)*(n-10**b+1)\n        n = 10**b - 1\nprint(s)\n", "n = int(input())\nans = 0\nfor i in range(1, len(str(n))):\n    ans += 9 * i * (10 ** (i - 1))\nans += len(str(n)) * (n - (10 ** (len(str(n)) - 1)) + 1)\nprint(ans)", "s = input()\nsize = 1\nans = 0\nwhile len(s) > size:\n    ans += ((10 ** size) - (10 ** (size - 1))) * size\n    size += 1\ns = int(s) - (10 ** (size - 1)) + 1\nans += s * size\nprint(ans)", "import math\nimport sys\n\nn=int(input())\ns=str(n)\nl=len(s)\n\n\n\nk=1\nans=0\nfor i in range(0,l-1):\n    ans+=9*k*(i+1)\n    k*=10\nm=n-k\n\n\nans+=(m+1)*l\n\n\nif l==1:\n    ans=n\nprint(ans)\n            \n", "n, v, p = int(input()), 0, 1\nwhile n >= 10 ** p:\n    v += p * 9 * 10 ** (p - 1)\n    p += 1\nv += (n - 10 ** (p - 1) + 1) * p\nprint(v)", "n = input()\nk = 9\nl = len(n)\nif l == 1:\n    print(n)\nelse:\n    c = (int(n)-int('9'*(l-1)))*l\n    for i in range(l-1):\n        c += k*(i+1)\n        k *= 10\n    # \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    print(c)"]