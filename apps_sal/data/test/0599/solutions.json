["import sys\ns = input().strip()\n\ndef isPalin(n):\n    if n[::-1] == n:\n        return True\n    return False\n\nfor i in range(len(s)+1):\n    for j in \"abcdefghijklmnopqrstuvwxyz\":\n        if isPalin(s[:i] + j + s[i:]):\n            print(s[:i] + j + s[i:])\n            return\n\nprint(\"NA\")\n", "def palindrome(s):\n    if list(s) == list(reversed(list(s))):\n        return 1\n    return 0\n\ns = input()\ndone = 0\nfor i in range(0,len(s)+1):\n    for j in range(97,123):\n        l = s[:i]+chr(j)+s[i:]\n        if palindrome(l) == 1 and done == 0:\n            print(l)\n            done = 1\nif done == 0:\n    print(\"NA\")\n", "def is_palindrome(s):\n    return s == s[::-1]\n\ns = input()\nletters = set(s)\nfound = False\nfor letter in letters:\n    for i in range(len(s)+1):\n        temp = s[:i] + letter + s[i:]\n        if is_palindrome(temp):\n            print(temp)\n            found = True\n            break\n    if found:\n        break\nif not found:\n    print('NA')\n", "def ptest(l):\n    m = l[:]\n    m.reverse()\n    if m == l:\n        return True\n    return False\n\n\na = input()\na = list(a)\nlett = set(a)\ndone = False\nfor x in range(len(a)+1):\n    b = a[:]\n    for t in lett:\n        c = b[:x] + [t] + b[x:]\n        c.reverse()\n        if ptest(c):\n            done = True\n            print(''.join(c))\n            break\n    if done:\n        break\nif not(done):\n    print(\"NA\")\n", "palindrom = lambda s: s == s[::-1]\nprintans = lambda l: print(''.join(l))\ns = list(input())\n\nfor i in range(len(s)+1):\n    for letter in 'abcdefghijklmnopqrstvwuxyz':\n        tmp = s[:]\n        tmp.insert(i,letter)\n        if palindrom(tmp):\n            printans(tmp)\n            return\n\nprint('NA')", "#input\ns=str(input())\n\n#variables\ndef ispalindrome(s):\n\tif s==s[::-1]:\n\t\treturn True\n\treturn False\n\n#main\nfor i in range(len(s)+1):\n\tif i<len(s)/2:\n\t\tt=s[:i]+s[len(s)-i-1]+s[i:]\n\telse:\n\t\tt=s[:i]+s[len(s)-i]+s[i:]\n\tif ispalindrome(t):\n\t\tprint(t)\n\t\tquit()\n\n#output\nprint('NA')", "def f(s):\n    at = -1\n    for i, v in enumerate(s):\n        if v == '@':\n            at = i\n            continue\n        if v != s[-i - 1] and s[-i - 1] != '@':\n            return False\n    s[at] = s[-at - 1]\n    return ''.join(s)\n\ns = list(input())\nfor i in range(len(s) + 1):\n    s.insert(i, '@')\n    a = f(s)\n    if a:\n        print(a)\n        break\n    del s[i]\nelse:\n    print('NA')\n", "def palindrom(s):\n    n = len(s)\n    for num in range(n):\n        if s[num] != s[n - num - 1]:\n            return 0\n    return 1\ns = input()\nn = len(s)\nwords = \"abcdefghjklmnpoqrstvwxyziuy\"\nyes = 0\ns1 = \"\"\nfor i in range(n+1):\n    for j in words:\n        if palindrom(s[:i]+j+s[i:]) == 1:\n            s1 = s[:i]+j+s[i:]\n            yes = 1\n            break\n    if yes == 1:\n        break\nif s1 == \"\":\n    print(\"NA\")\nelse:\n    print(s1)\n", "s=input();\nlens=len(s);\nflag=0;\nfor i in range(0,lens+1):\n    for j in range(ord('a'),ord('z')+1):\n        s1=s;\n        s1=s[:i]+chr(j)+s[i:];\n        s2=s1[::-1];\n        if(s1==s2):\n            print(s1);\n            flag=1;\n            break;\n    if(flag==1):break;\nif(flag==0):print(\"NA\");\n", "s = input()\ns1 = s[::-1]\np = False\n\ndef try1(a):\n    q = s[:a] + s1[a] + s[a::]\n    q1 = q[::-1]\n    for i in range(a + 1, len(q) // 2):\n        if q[i] != q1[i]:\n            return False\n    return True\n\ndef try2(a):\n    q = s[:len(s) - a] + s[a] + s[len(s) - a::]\n    q1 = q[::-1]\n    for i in range(a + 1, len(q) // 2):\n        if q[i] != q1[i]:\n            return False\n    return True\n\nfor i in range(len(s) // 2):\n    if s[i] != s1[i]:\n        if try1(i):\n            q = s[:i] + s1[i] + s[i::]\n            print(q)\n            return\n        elif try2(i):\n            q = s[:len(s) - i] + s[i] + s[len(s) - i::]\n            print(q)\n            return\n        else:\n            p = True\n            break\nif p:\n    print(\"NA\")\nelse:\n    d = s[:len(s) // 2] + s[len(s) // 2] + s[len(s) // 2::]\n    print(d)\n", "def ptest(l):\n\tm = l[:]\n\tm.reverse()\n\tif m == l:\n\t\treturn True\n\treturn False\n \n \na = input()\na = list(a)\nlett = set(a)\ndone = False\nfor x in range(len(a) + 1):\n\tb = a[:]\n\tfor t in lett:\n\t\tc = b[:x] + [t] + b[x:]\n\t\tc.reverse()\n\t\tif ptest(c):\n\t\t\tdone = True\n\t\t\tprint(''.join(c))\n\t\t\tbreak\n\tif done:\n\t\tbreak\nif not(done):\n\tprint(\"NA\")"]