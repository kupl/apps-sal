["n = int(input())\nans = 1\ni = 2\nwhile i * i <= n:\n    if n % i == 0:\n        ans *= i\n    while n % i == 0:\n        n //= i\n    i += 1\nans *= n\nprint(ans)", "from math import ceil\nn = int(input())\nn1 = n\np = 1\nmas = set()\nfor i in range(2, ceil(n**.5) + 1):\n    cnt = 0\n    while n % i == 0:\n        n = n//i\n        mas.add(i)\n        p *= i\nmas.add(n1 // p)\np = 1\nfor i in mas:\n    p *= i\nprint(p)\n", "n = int(input())\ndivs = set()\ndiv = 2\nwhile div <= n ** 0.5:\n    if n % div == 0:\n        divs.add(div)\n        n //= div\n    else:\n        div += 1\nif n > 1:\n    divs.add(n)\nans = 1\nfor div in divs:\n    ans *= div\nprint(ans)", "n=int(input())\ns=set()\nfor i in range(2,int(n**0.5)+1):\n    while n%i==0: s|={i}; n//=i\ns|={n}\nd=1\nfor x in s: d*=x\nprint(d)", "def factorize(n):\n    result = { }\n    i = 2\n    while i * i <= n:\n        d, m = divmod(n, i)\n        if m == 0:\n            count = 0\n            while m == 0:\n                count += 1\n                n = d\n                d, m = divmod(n, i)\n            result[i] = count\n        i += 1\n    result[n] = 1\n    return result\n\nn = int(input())\nresult = 1\nfor k, v in list(factorize(n).items()):\n    result *= k\nprint(result)\n", "n = int(input())\n\nfor_ans = set()\ni = 2\n\nwhile i <= n ** 0.5:\n    if n % i == 0:\n        for_ans.add(i)\n        n //= i\n    else:\n        i += 1\n\nans = 1\nfor_ans.add(n)\n\nfor e in for_ans:\n    ans *= e\n\nprint(ans)", "def fct(n):\n    r = []\n    for i in range(1,int(n**.5)+1):\n        if n%i == 0:\n            r.append(i)\n            r.append(int(n/i))\n    return r\n\ndef lov(n):\n    i = 2\n    f = 0\n    while i**2<=n:\n        if n%i**2 == 0:\n            \n            f = 1\n            break\n        i += 1\n    return f\n\nn = int(input())\n\na = fct(n)\na = sorted(a,reverse=True)\nres = 0\nfor i in a:\n    if lov(i) == 0:\n        res = i\n        break\n        \nprint (res)\n", "from itertools import accumulate,chain,cycle\nn=int(input())\ndef prime_powers_iter(n):\n    for c in accumulate(chain([2, 1, 2], cycle([2,4]))):\n        if c*c > n: break\n        if n%c: continue\n        d,p = (), c\n        while not n%c:\n            n,p,d = n//c, p*c, d + (p,)\n        yield(d)\n    if n > 1: yield((n,))\ndef prime_powers(n):\n    return list(i[0] for i in list(prime_powers_iter(n)))\nmul=1\nfor i in prime_powers(n):\n    mul*=i\nprint(mul)\n", "ans = 1\nflag = False\nn = int(input())\nwhile n%2==0:\n    if flag == False:\n        flag = True\n        ans*=2\n    n = n//2\nflag = False\ni = 3\nwhile i*i <= n:\n    while n%i==0:\n        if flag == False:\n            flag = True\n            ans*=i\n        n=n//i\n    flag = False\n    i+=2\nif n>2:\n    ans*=n\nprint(ans)", "def factor(n):\n    ans = set()\n    q = 2\n    while q * q <= n:\n        if n % q == 0:\n            ans.add(q)\n            n //= q\n        else:\n            q += 1\n    if n > 1:\n        ans.add(n)\n    return ans\nn = int(input())\nnum = 1\nq_n_set = factor(n)\nfor i in q_n_set:\n    num *= i\nprint(num)\n", "import math\nn = int(input())\nres = 1\nfor i in range(2, round(math.sqrt(n)) + 1):\n    if n % i == 0:\n        res *= i\n        while n % i == 0:\n            n = n // i\nif n != 0:\n    res *= n\nprint(res)\n\n\n", "import sys\n\n\n#sys.stdin = open(\"input.txt\")\n#sys.stdout = open(\"output.txt\", \"w\")\n\nn = int(input())\n\ndi = [1]\ni = 2\nwhile n > 1:\n\tif i*i > n:\n\t\tbreak\n\tif n % i == 0:\n\t\tdi += [i]\n\t\twhile n % i == 0 and n > 1:\n\t\t\tn //= i\n\ti += 1\n\nif n != 1:\n\tdi += [n]\n\nans = 1\nfor item in di:\n\tans *= item\nprint(ans)", "def Factor(n):\n    Ans = 1\n    d = 2\n    used = []\n    while d * d <= n:\n        if n % d == 0:\n            if d not in used:\n                Ans *= d\n                used.append(d)\n            n //= d\n        else:\n            d += 1\n    if n > 1:\n        if n not in used:\n            Ans *= n\n    return Ans\n\nprint(Factor(int(input())))\n", "from math import sqrt\n\nf = {}\ndef factor(n):\n    if n in f:\n        return f[n]\n    \n    factors = set()\n    for x in range(1, int(sqrt(n)) + 1):\n        if n % x == 0:\n            factors.add(x)\n            factors.add(n//x)\n\n    factors = sorted(factors, reverse = True)\n    f[n] = factors\n            \n    return factors\n  \nn = int(input())\n\nfor i in factor(n):\n    is_success = True\n    for j in factor(i):\n        if j > 1:\n            s = sqrt(j)\n            if s == int(s):\n                is_success = False\n                break\n    if is_success:\n        print(i)\n        return\n", "def __starting_point():\n    n = int(input())\n    total = 1\n    for i in range(2, int(pow(n, 0.5)) + 2):\n        if n % i == 0:\n            total *= i\n\n        while n % i == 0:\n            n //= i\n\n    print(total * n)\n\n__starting_point()", "from math import sqrt\nfrom sys import stdin\n\na = set()\n\nn = int(stdin.readline())\n\nn2 = sqrt(n)\nt = 2;\nwhile t <= n2 and n > 1:\n    if n % t == 0:\n        n //= t\n        a.add(t)\n        t = 1\n        n2 = sqrt(n)\n    t += 1\n\na.add(n)\nq = 1\nfor x in a:\n    q *= x\n\nprint(q)", "        \nn = int(input())\n\nfor i in range(2, min(1000001, n) ) :\n    while n % (i*i) == 0 :\n        n //= i\n\nprint(n)\n", "n = int(input())\n\nsol = 1\ni = 2\n\nwhile i*i <= n:\n    if n % i == 0:\n        sol *= i\n    while n % i == 0:\n        n //= i\n    i += 1\n\nif n != 1 and sol % n != 0:\n    sol *= n\n\nprint(sol)\n", "'''\nCreated on Oct 15, 2015\n\n@author: Ismael\n'''\nfrom collections import Counter\nn=int(input())\ndef prime_factors(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\ndef product(l):\n    p = 1\n    for i in l:\n        p *= i\n    return p\n\nprint(product(Counter(prime_factors(n)).keys()))", "#!/usr/bin/env python3\nfrom functools import reduce\nfrom operator import mul\n\n\ndef get_value(function):\n    return function()\n\n\n@get_value\ndef primes(size=10**6):\n    sieve = [True for _ in (list(range(size)))]\n    sieve[0] = False\n    sieve[1] = False\n    prime = 2\n    while prime < size:\n        for compound in range(2*prime, size, prime):\n            sieve[compound] = False\n        try:\n            prime = sieve.index(True, prime + 1)\n        except ValueError:\n            break\n    return [number for number, is_prime in enumerate(sieve) if is_prime]\n\n\ndef factorized(number):\n    if number == 1:\n        return [1]\n    factors = []\n    for prime in primes:\n        if prime**2 > number:\n            break\n        while number % prime == 0:\n            factors += [prime]\n            number //= prime\n    if number > 1:\n        factors += [number]\n    return factors\n\n\ndef main():\n    print(reduce(mul, set(factorized(int(input())))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nn = int(input())\nmaxval = n\ni = 2\nwhile i*i <= n:\n    while maxval%(i*i)==0:\n        maxval //= i\n    i+=1\n\nprint(maxval)\n\n        \n", "n = int(input())\nfrom math import sqrt\nfrom math import ceil\n\n    \n\ndef prim(n):\n    i = 2\n    while i * i <= n:\n        if n % (i**2) == 0:\n            return i\n        i += 1\n    return 1\nk = n\nwhile  k > 1:\n    k = prim(n)\n    n = n // k\n    \n\nprint(n)\n\n\n", "import math\nfrom sys import stdin, stdout\n\ndef check(k):\n    i = 2\n    i2 = i*i\n    while i2 <= k:\n        if k % i2 == 0:\n            return False\n        i += 1\n        i2 = i*i\n        \n    return True\n\nline = stdin.readline()\nn = int(line)\n\nans = 0\nsq_n = int(math.sqrt(n))\ni = 1\nwhile i <= sq_n:\n    if n % i != 0:\n        i += 1\n        continue\n\n    if check(i) == True:\n        ans = max(ans, i)\n\n    j = int(n / i)\n    if check(j) == True:\n        ans = max(ans, j)\n    i += 1\n\nprint(ans)\n", "__author__ = 'yarsanich'\nimport math\nn = int(input())\n\"\"\"\nFlag = False\nk = 0\ncheck = (0**n) % n\nans = 1\nwhile Flag == False:\n      k += 1\n      #print((k**n)%n)\n      if ((k**n)%n == check):\n          print(ans)\n          break\n      else:\n          ans += 1\n\"\"\"\nans = 1\nif (n%2 == 0):\n    ans *= 2\n    while n%2 == 0:\n        n /= 2\ni = 3\nwhile i<=int(math.sqrt(n))+1:\n    if (n % i == 0):\n        ans *= i\n        while (n % i == 0):\n            n /= i\n    i += 2\nif (n > 2):\n    ans *= n\nprint(int(ans))", "import sys\nfrom math import ceil, sqrt\n\ndef factor(n):\n    if n <= 1: return []\n    prime = next((x for x in range(2, ceil(sqrt(n))+1) if n%x == 0), n)\n    return [prime] + factor(n//prime)\n\nn = int(sys.stdin.readline().rstrip('\\n'))\nsetprimes = set(factor(n))\ncumul = 1\nfor p in setprimes:\n    cumul *= p\nprint(cumul)"]