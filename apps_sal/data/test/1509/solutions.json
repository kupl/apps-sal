["n = int(input())\nv = [0] + [int(e) for e in input().split()]\nans = 0\nfor a, b in zip(v[:-1], v[1:]):\n    if a < b:\n        ans += (b-a)*(n-b+1)\n    else:\n        ans += b*(a-b)\nprint(ans)\n", "N = int(input())\nA = [int(a) for a in input().split()]\n\ndef calc(a0, b0):\n    a, b = min(a0, b0), max(a0, b0)\n    return b-1 + (a-1) * (b-a-1) + N-a + (b-a-1) * (N-b)\n\ndef calc0(a):\n    return N+(a-1)*(N-a)\n\ns = calc0(A[0]) + calc0(A[-1])\nfor i in range(N-1):\n    s += calc(A[i], A[i+1])\n\nprint(s//2)\n", "import sys\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\n\ns = a[0] * (n - a[0] + 1)\nfor i in range (1, n):\n    if a[i - 1] < a[i]:\n        s = s + (a[i] - a[i-1]) * (n - a[i] + 1)\n    if a[i - 1] > a[i]:\n        s = s + a[i] * (a[i-1] - a[i])\n\nprint(s)\n\n", "n = int(input()) + 1\nres = 0\na = tuple(map(int, input().split()))\nfor ai in a:\n    res += ai * (n - ai)\nfor ai, aj in map(sorted, list(zip(a, a[1:]))):\n    res -= ai * (n - aj)\nprint(res)\n", "n=int(input())\nd=list(map(int,input().split()))\na=[0]\na.extend(d)\nan=0\nfor i in range(n+1):\n    if a[i]>a[i-1]:\n        an+=(a[i]-a[i-1])*(n-a[i]+1)\n    if a[i]<a[i-1]:\n        an+=(a[i])*(a[i-1]-a[i])\n##    print(an)\nprint(an)\n", "from collections import defaultdict\nn = int(input())\na = list(map(int, input().split()))\n\nb = []\nfor x in a:\n    if not b or b[-1] != x:\n        b.append(x)\np = defaultdict(list)\nfor i in range(len(b)):\n    p[b[i]].append(i)\n\nans = cur = 0\nfor r in range(1, n + 1):\n    for i in p[r]:\n        cur += r\n        if len(b) == 1:\n            pass\n        elif i == 0:\n            if b[i + 1] < b[i]:\n                cur -= b[i + 1]\n        elif i == len(b) - 1:\n            if b[i - 1] < b[i]:\n                cur -= b[i - 1]\n        else:\n            mx = max(b[i - 1], b[i + 1])\n            mn = min(b[i - 1], b[i + 1])\n            if mx < b[i]:\n                cur -= mx + mn\n            elif mn < b[i]:\n                cur -= mn\n    ans += cur\nprint(ans)", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n = self.next_int()\n        x = [self.next_int() for _ in range(0, n)]\n        ans = 0\n        for i in range(0, n):\n            ans += x[i] * (n - x[i] + 1)\n            if i > 0:\n                ans -= min(x[i], x[i - 1]) * (n - max(x[i], x[i - 1]) + 1)\n        print(ans)\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nans = a[0] * (n-a[0]+1)\nfor i in range(1, n):\n    if a[i-1] == a[i]: continue\n    elif a[i-1] < a[i]: ans+= (a[i]-a[i-1]) * (n-a[i]+1)\n    elif a[i-1] > a[i]: ans+= a[i] * (a[i-1]-a[i])\nprint(ans)", "n=int(input())\nt=input().split()\nt[0]=int(t[0])\ns=t[0]*(n-t[0]+1)\nfor i in range(1,n):\n t[i]=int(t[i])\n if t[i]>t[i-1]:s=s+(t[i]-t[i-1])*(n-t[i]+1)\n else:s=s+t[i]*(t[i-1]-t[i])\nprint(s)", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=[0]+list(map(int,input().split()))\n\nANS=0\nfor i in range(1,n+1):\n    if A[i]>A[i-1]:\n        ANS+=(n-A[i]+1)*(A[i]-A[i-1])\n    else:\n        ANS+=A[i]*(A[i-1]-A[i])\n\nprint(ANS)\n", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.insert(0, 0)\n\n    total = 0\n    for i in range(1, n + 1):\n        if a[i - 1] > a[i]:\n            total += a[i] * (a[i - 1] - a[i])\n        elif a[i - 1] < a[i]:\n            total += (a[i] - a[i - 1]) * (n - a[i] + 1)\n\n    print(total)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nans = n*n*(n+1)//2\nrd = 0\nfor i in range(n-1):\n    l = min(a[i],a[i+1])\n    r = max(a[i],a[i+1])\n    rd += l*(n-r+1)\nfor i in range(n):\n    rd += max((a[i]-2)*(a[i]-1)//2,0)\n    rd += n-1\n    rd += (n-a[i])*(n-a[i]-1)//2\nans -= rd\nprint(ans)\n", "def in_int():\n    return int(input())\ndef in_list():\n    return [int(x) for x in input().split()]\nn=in_int()\nns=in_list()\n\nans=0\nfor i in range(n-1):\n    # a=min(ns[i],ns[i+1])\n    # b=max(ns[i],ns[i+1])\n    a,b=ns[i],ns[i+1]\n    if a>b:\n        ans+=(a-b)*(n-a+1)\n    else:\n        ans+=a*(b-a)\n    # print(ans)\n    # ans+=a*(b-a)\n    # ans+=(n-b+1)*(b-a)\n    # print(ans)\na=ns[-1]\nans+=a*(n-a+1)\n# print(ans)\n# ans+=n*(n+1)//2\nprint(ans)\n\n# 2 1 3\n# 1 2 3 4 5 6 7\n# 3 5\n", "# \u8a08\u7b97\u8a72\u9ede \u5de6\u908a\u4e0d\u5305\u4f46\u5305\u81ea\u5df1\u7684\u5340\u9593\u6578\nn = int(input())\nnums = list(map(int,input().split()))\n\n# count the first one\nans = nums[0] * (n - nums[0] + 1)\n\nfor i in range(1,n):\n    if nums[i] > nums[i-1]:\n        ans += (nums[i] - nums[i-1]) * (n - nums[i] + 1)\n    elif nums[i] < nums[i-1]:\n        ans += (nums[i-1] - nums[i]) * nums[i]\nprint(ans)\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"Codeforces Round #553 (Div. 2)\n\nProblem E. Number of Components\n\n:author:         Kitchen Tong\n:mail:    kctong529@gmail.com\n\nPlease feel free to contact me if you have any question\nregarding the implementation below.\n\"\"\"\n\n__version__ = '1.0'\n__date__ = '2019-04-20'\n\nimport sys\n\n\ndef count_contribution(n, ax, ay):\n    if ay > ax:\n        return (ay - ax) * (n - ay + 1)\n    elif ay < ax:\n        return ay * (ax - ay)\n    else:\n        return 0\n\ndef solve(n, a):\n    result = a[0] * (n - a[0] + 1)\n    for i in range(1, len(a)):\n        result += count_contribution(n, a[i-1], a[i])\n    return result\n\n\ndef main(argv=None):\n    n = int(input())\n    a = list(map(int, input().split()))\n    print(solve(n, a))\n    return 0\n\n\ndef __starting_point():\n    STATUS = main()\n    return(STATUS)\n\n\n__starting_point()", "\n\nn = int(input())\narr = list(map(int,input().split()))\n\nans = 0\nans += arr[0]*(n-arr[0]+1)\nfor i in range(1,n):\n    if(arr[i-1] < arr[i]):\n        ans += (arr[i] - arr[i-1])*(n - arr[i] +1)\n\n    if(arr[i-1] > arr[i]):\n        ans += arr[i]*( arr[i-1] - arr[i])\n\nprint(ans)\n\n    \n", "n = int(input())\na = [int(x) for x in input().split()]\n\nans = a[0] * (n - a[0] + 1)\nfor i in range(1, n):\n  if a[i] > a[i - 1]:\n    ans += (a[i] - a[i - 1]) * (n - a[i] + 1)\n  elif a[i] < a[i - 1]:\n    ans += a[i] * (a[i - 1] - a[i])\nprint(ans)", "n = int(input())\na = [int(x) for x in input().split()]\ns = 0\ns = a[0] * (n - a[0] + 1)\nfor i in range(len(a)-1):\n   if a[i] < a[i+1]:\n      s += (a[i+1]-a[i])*(n-a[i+1]+1)\n   elif a[i] > a[i+1]:\n      s += (a[i]-a[i+1])*a[i+1]\nprint(s)\n", "n = int(input())\na = [0]\nb = [int(i) for i in input().split()]\na+=b\nans = 0\nfor i in range(1,n+1):\n\tif(a[i-1]<a[i]):\n\t\tans+=(a[i]-a[i-1])*(n-a[i]+1)\n\telse:\n\t\tans+=a[i]*(a[i-1]-a[i])\nprint(ans)\n", "n = int(input())\na = [0] + list(map(int, input().split()))\n\nans = 0\n\nfor i, j in zip(a[:-1], a[1:]):\n    if i < j:\n        ans += (j - i) * (n - j + 1)\n    else:\n        ans += j * (i - j)\nprint(ans)\n", "n = int(input()) + 1\nres = 0\na = tuple(map(int, input().split()))\nfor ai in a:\n    res += ai * (n - ai)\nfor ai, aj in map(sorted, zip(a, a[1:])):\n    res -= ai * (n - aj)\nprint(res)", "n = int(input()) + 1\nres = 0\na = tuple(map(int, input().split()))\nfor ai in a:\n    res += ai * (n - ai)\nfor ai, aj in map(sorted, list(zip(a, a[1:]))):\n    res -= ai * (n - aj)\nprint(res)\n###\n", "n = int(input()) + 1\nres = 0\na = tuple(map(int, input().split()))\nfor ai in a:\n    res += ai * (n - ai)\nfor ai, aj in map(sorted, list(zip(a, a[1:]))):\n    res -= ai * (n - aj)\nprint(res)\n#\n", "n = int(input()) + 1\nres = 0\na = tuple(map(int, input().split()))\nfor ai in a:\n    res += ai * (n - ai)\nfor ai, aj in map(sorted, list(zip(a, a[1:]))):\n    res -= ai * (n - aj)\nprint(res)\n##\n"]