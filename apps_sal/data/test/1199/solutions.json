["3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, m = readln()\ncnt = [0] * (m + 1)\nfor c in readln():\n    cnt[c] += 1\nans = [0] * n\nj = 0\nfor _ in range(1, m + 1):\n    v = max(cnt)\n    i = cnt.index(v)\n    while cnt[i]:\n        ans[j] = i\n        cnt[i] -= 1\n        j += 2\n        if j >= n:\n            j = 1\nprint(len([1 for i in range(n) if ans[i] != ans[(i + 1) % n]]))\nfor i in range(n):\n    print(ans[i], ans[(i + 1) % n])\n", "n, m = map(int, input().split())\np = [0] * (m + 1)\nfor i in map(int, input().split()): p[i] += 1\nr, q = [], sorted((p[i], i) for i in range(1, m + 1))\nk = q[m - 1][0]\nprint(n - max(2 * k - n, 0))\nfor i in q: r.extend([str(i[1])] * i[0])\nprint('\\n'.join(i + ' ' + j for i, j in zip(*(r, r[k: ] + r[: k]))))", "n, m = [int(i) for i in input().split()]\nc1 = [int(i) for i in input().split()]\nc1.sort()\nms = 0\ni = 0\nwhile i < n - 1:\n    start = i\n    while i < n - 1 and c1[i] == c1[i + 1]:\n        i += 1\n    ms = max(ms, i - start)\n    i += 1\nms += 1\nc2 = c1[-ms:] + c1[:-ms]\ncnt = 0\nfor i in range(n):\n    if c1[i] != c2[i]:\n        cnt += 1\nprint(cnt)\nfor i in range(n):\n    print(c1[i], c2[i])\n", "from collections import Counter\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n\n    c = list(map(int, input().split()))\n\n    sc = sorted(list(range(n)), key=lambda x: c[x])\n    mc = Counter(c).most_common(1)[0][1]\n\n    print(n if mc <= n - mc else 2*(n - mc))\n    \n    for i in range(n):\n        print(c[sc[i]], c[sc[i-mc]])\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "from collections import Counter\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n\n    c = list(map(int, input().split()))\n\n    sc = sorted(list(range(n)), key=lambda x: c[x])\n    mc = Counter(c).most_common(1)[0][1]\n\n    print(n if mc <= n - mc else 2*(n - mc))\n    \n    for i in range(n):\n        print(c[sc[i]], c[sc[i-mc]])\n\n\ndef __starting_point():\n    main()\n\n\n\n\n\n# Made By Mostafa_Khaled\n\n__starting_point()", "def takefirst(eml):\n    return eml[0]\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=[]\na.append(0)\nmax1=0\nc=0\nfor i in range(len(a)-1):\n    if a[i]!=a[i+1]:\n        c+=1\n        max1=max(max1,c)\n        c=0\n    else:\n        c+=1\na.pop()\nans=[]\ntotal=0\nfor i in range(len(a)):\n    ans.append((a[i],a[(i+max1)%len(a)]))\n    if a[i]!=a[(i+max1)%len(a)]:\n        total+=1\nprint(total)\nfor i in range(len(ans)):\n    print('{0} {1}'.format(ans[i][0],ans[i][1]))", "n, m = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\nmit = 1\ncol = 1\nfor i in range(1, m+1):\n  t =arr.count(i)\n  if t > col:\n    mit = i\n    col = t\nprint(n-max(0, col-(n-col)))\nfor i in range(n):\n  print(arr[(i+col) % n], arr[i])"]