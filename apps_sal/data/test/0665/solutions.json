["t = int(input())\nfor i in range(t):\n    n, s = [int(x) for x in input().split()]\n    a= [int(x) for x in input().split()]\n    need = -1\n    if (sum(a)) <= s:\n        print(0)\n    else:\n        for i in range(n):\n            if a[i] > need:\n                need= a[i]\n                index = i\n            if s - a[i] < 0:\n                print(index + 1)\n                break\n            s -= a[i]\n        \n", "t=int(input())\nfor i in range(t):\n    n,s=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    mx,sm,mxi=0,0,0\n    k=True\n    for ii in range(len(a)):\n        i=a[ii]\n        sm+=i\n        if i > mx:\n            mx,mxi=i,ii\n        if sm>s:\n            break\n    else:\n        k=False\n    if k==False:\n        print(0)\n    else:\n        sm-=mx\n        ad=0\n        for ij in range(ii,len(a)):\n            j=a[ij]\n            ad+=1\n            sm+=i\n            if sm>s:\n                break\n        if ad==0:\n            print(0)\n        else:\n            print(mxi+1)\n", "import sys\nfrom collections import Counter\nfrom math import *\n\n# sys.stdin = open(\"in.txt\")\n\nfor _ in range(int(input())):\n    n, s = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    if sum(a) <= s:\n        print(0)\n        continue\n    L = 0\n    R = n + 1\n    ans = 0\n    while R - L > 1:\n        m = (L + R) // 2\n        if sum(a[:m]) - max(a[:m]) > s:\n            R = m\n        else:\n            L = m\n            ans = a.index(max(a[:m]))\n    print(ans + 1)\n", "T = int(input())\nfor _ in range(T):\n    N, S = map(int, input().split())\n    A = [int(a) for a in input().split()]\n    if S >= sum(A):\n        print(0)\n    else:\n        ma = 0\n        mai = -1\n        s = 0\n        for i in range(N):\n            s += A[i]\n            if A[i] > ma:\n                ma = A[i]\n                mai = i+1\n            if s > S:\n                print(mai)\n                break", "for tc in range(int(input())):\n    n,tottime = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    if sum(ls) <= tottime:\n        print(0)\n        continue\n    mxseen = 0\n    mxidx = 0\n    totsofar = 0\n    for i,e in enumerate(ls):\n        if totsofar + e - max(e,mxseen) > tottime:\n            break\n        totsofar += e\n        if mxseen < e:\n            mxseen = e\n            mxidx = i+1\n        if totsofar-mxseen > tottime:\n            break\n    print(mxidx)\n", "for __ in range(int(input())):\n    n, s = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    if sum(ar) <= s:\n        print(0)\n    else:\n        ans = 0\n        lol = ar[0]\n        kek = 0\n        ans1 = 0\n        flag = 0\n        for i in range(n):\n            if ar[i] > lol and  flag == 0:\n                lol = ar[i]\n                kek = i\n            if s - ar[i] >= 0 and flag == 0:\n                ans += 1\n                s -= ar[i]\n            elif s - ar[i] >= 0:\n                ans1 += 1\n                s -= ar[i]\n            elif flag == 1:\n                break\n            else:\n                ans1 = ans - 1\n                s += lol\n                flag = 1\n                if s - ar[i] >= 0:\n                    ans1 += 1\n                    s -= ar[i]\n                else:\n                    break\n        print(kek + 1)", "import sys\n\n\n# inf = open('input.txt', 'r')\n# reader = (map(int, line.split()) for line in inf)\nreader = (list(map(int, line.split())) for line in sys.stdin)\ninput = reader.__next__\n\nt, = input()\nfor _ in range(t):\n    n, s = input()\n    a = list(input())\n    i = 0\n    left = 0\n    maxSt = 0\n    maxId = -1\n    while i < n:\n        left += a[i]\n        if maxSt < a[i]:\n            maxSt = a[i]\n            maxId = i\n        if left > s:\n            break\n        i += 1\n    if i == n:\n        print(0)\n    else:\n        print(maxId + 1)\n    \n# inf.close()\n", "\"\"\"#!/usr/bin/env pypy\"\"\"\nimport collections\n#import random\nimport heapq\nimport bisect\nimport math\nimport time\n\n\nclass Solution2:\n    def solve(self, A1, A2):\n        pass\n\n\ndef gcd(a, b):\n    if not b: return a\n    return gcd(b, a%b)\ndef lcm(a, b):\n    return b*a//gcd(b,a)\n\n\nclass Solution:\n\n    def solve(self, A, s):\n        if sum (A) <= s: return 0\n        out = 0\n        used = 0\n        max_seen = 0\n        for i, n in enumerate(A):\n            if n > max_seen:\n                used += max_seen\n                max_seen = n\n                if used > s: break\n                out = i+1\n            else:\n                used += n\n            if used > s: break\n        return out\n\nsol = Solution()\nsol2 = Solution2()\n\nTT = int(input())\nfor test_case in range(TT):\n    N, K=input().split()\n    #s = input()\n    #a = []\n    #for _ in range(int(N)):\n        #a.append([int(c) for c in input().split()])\n    b = [int(c) for c in input().split()]\n\n    out = sol.solve(b, int(K))\n    print(str(out))\n    #print(str(out))\n\n    # out2 = sol2.solve(s)\n\n\n# for _ in range(100000):\n#     rand = [random.randrange(60) for _ in range(10)]\n#     out1 = sol.solve(rand)\n#     out2 = sol2.solve(rand)\n#     if out1 != out2: \n#         print(rand, out1, out2)\n#         break\n", "for _ in range(int(input())):\n    n, s = list(map(int, input().split()))\n    a = tuple(map(int, input().split()))\n    ans = 0\n    ans1 = 0\n    s1 = 0\n    for i in range(n):\n        if a[i] > a[ans]:\n            ans = i\n        s1 += a[i]\n        if s1 > s:\n            break\n        ans1 += 1\n    ans2 = 0\n    s2 = 0\n    for i in range(n):\n        if i == ans:\n            continue\n        s2 += a[i]\n        if s2 > s:\n            break\n        ans2 += 1\n    if ans1 > ans2:\n        print('0')\n    else:\n        print(ans + 1)\n", "T = int(input())\nfor t in range(T):\n    n, s = map(int, input().split())\n    v = list(map(int, input().split()))\n    \n    tot = 0\n    j = 0\n    for i in range(n):\n        tot += v[i]\n        if tot - max(v[i], v[j]) > s:\n            tot -= v[i]\n            break\n        if v[i] > v[j]:\n            j = i\n        \n    if tot <= s:\n        print(0)\n    else:\n        print(j+1)", "def sol():\n    n, s = list(map(int, input().split()))\n    pref = list(map(int, input().split()))\n    mx = [pref[0]]\n    ind = [0]\n    for j in range(1, n):\n        if pref[j] > mx[-1]:\n            ind.append(j)\n        else:\n            ind.append(ind[-1])\n        mx.append(max(mx[-1], pref[j]))\n        pref[j] += pref[j - 1]\n    jnd = 0\n    for j in range(n):\n        if pref[j] <= s:\n            jnd = 0\n        elif pref[j] - mx[j] <= s:\n            jnd = ind[j] + 1\n    print(jnd)\n\n\nfor i in range(int(input())):\n    sol()\n"]