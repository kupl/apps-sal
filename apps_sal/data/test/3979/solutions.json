["from collections import defaultdict, deque\n\ndef main():\n    n,m = map(int, input().split())\n    cap = [None]*(m+1)\n    same_cap = defaultdict(list)\n    q = deque()\n\n    def apply_cap(a, c):\n        if cap[a] is not None:\n            return cap[a] == c\n        q.append((a,c))\n        while q:\n            b = q.pop()\n            if b[1] == c:\n                if cap[b[0]] is None:\n                    cap[b[0]] = c\n                    q.extend(same_cap[b[0]])\n                    same_cap[b[0]] = []\n                elif cap[b[0]]!=c:\n                    return False\n\n        return True\n\n    def same(a,b):\n        same_cap[b].append((a,True))\n        same_cap[a].append((b,False))\n\n        if cap[a] == False:\n            return apply_cap(b, False)\n\n        if cap[b] == True:\n            return apply_cap(a, True)\n\n        return True\n\n    def process(p,c):\n        lp = p[0]\n        lc = c[0]\n        for i in range(1, min(lp,lc)+1):\n            if p[i]>c[i]:\n                return apply_cap(p[i], True) and apply_cap(c[i], False)\n            if p[i]<c[i]:\n                return same(p[i], c[i])\n        return lp<=lc\n\n    p = list(map(int, input().split()))\n    for i in range(n-1):\n        c = list(map(int, input().split()))\n        if not process(p, c):\n            print ('No')\n            break\n        p = c\n    else:\n        print ('Yes')\n        res = []\n        for i,b in enumerate(cap):\n            if b:\n                res.append(i)\n        print(len(res))\n        print(' '.join(map(str,res)))\n\nmain()", "# -*- coding: utf-8 -*-\n\n\n\nimport math\n\nimport collections\n\nimport bisect\n\nimport heapq\n\nimport time\n\nimport random\n\nimport itertools\n\n\n\n\"\"\"\n\ncreated by shhuan at 2017/10/18 16:22\n\n\n\n\"\"\"\n\n\n\nM, N = list(map(int, input().split()))\n\n\n\nwords = []\n\nfor i in range(M):\n\n    words.append([int(x) for x in input().split()][1:])\n\n\n\n# all elements in C should be capitalized\n\nC = set()\n\n\n\n# E[u][v] means if we capitalize u, we must capitalize v\n\nE = collections.defaultdict(list)\n\n\n\nfor i in range(M-1):\n\n    w1 = words[i]\n\n    w2 = words[i+1]\n\n\n\n    if len(w1) > len(w2) and w1[:len(w2)] == w2:\n\n        print('No')\n\n        return\n\n    for j in range(min(len(w1), len(w2))):\n\n        if w1[j] < w2[j]:\n\n            E[w2[j]].append(w1[j])\n\n            break\n\n        elif w1[j] > w2[j]:\n\n            C.add(w1[j])\n\n            break\n\n\n\n# add all letters should be capitalized based on E\n\nA = {u for u in C}\n\nwhile A:\n\n    B = set(itertools.chain.from_iterable([E[u] for u in A]))\n\n    A = B - C\n\n    C |= B\n\n\n\n# check\n\nfor i in range(M-1):\n\n    w1 = words[i]\n\n    w2 = words[i+1]\n\n\n\n    for j in range(min(len(w1), len(w2))):\n\n        a, b = w1[j], w2[j]\n\n        d = [a in C, b in C]\n\n        if a < b:\n\n            if d == [False, True]:\n\n                print('No')\n\n                return\n\n            break\n\n        elif a > b:\n\n            if d != [True, False]:\n\n                print('No')\n\n                return\n\n            break\n\n\n\nprint('Yes')\n\nprint(len(C))\n\nif C:\n\n    print(\" \".join(map(str, sorted(C))))\n\n\n\n\n\n# Made By Mostafa_Khaled\n"]