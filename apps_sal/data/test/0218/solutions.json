["a, b, c = map(int, input().split(' '))\nx = input()\nfor i in range(105):\n    for j in range(105):\n        if i*b+j*c == a:\n            print(i+j)\n            for k in range(i):\n                print(x[:b])\n                x = x[b:]\n            for l in range(j):\n                print(x[:c])\n                x = x[c:]\n            quit()\nprint(-1)", "n, p, q = list(map(int, input().split(\" \")))\ns=input()\n\nc=-1\n\nfor i in range (n+1):\n    for j in range (n+1):\n        if p*i+q*j==n:\n            c=i\n            d=j\n            break\n    if c!=-1:\n        break\n\nif c==-1:\n    print(-1)\nelse:\n    print(c+d)\n    for i in range (c):\n        print(s[p*i:p*(i+1)])\n    e=c*p\n    for j in range (d):\n        print(s[e+q*j:e+q*(j+1)])\n", "def main():\n    items=input().split()\n    n=int(items[0])\n    p=int(items[1])\n    q=int(items[2])\n    s=input()\n    A=int(n/p)\n    for a in range(A+1):\n        forq=n-a*p\n        if forq%q==0:\n            b=int(forq/q)\n            print(a+b)\n            for i in range(a):\n                print(s[i*p:(i+1)*p])\n            for i in range(b):\n                print(s[a*p+i*q:a*p+(i+1)*q])\n            return\n    print(-1)\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "n,p,q=list(map(int, input().split(\" \")))\ns = input()\nasdf = False\nfor i in range(n//p+1):\n    for j in range((n-i*p)//q+1):\n        if i*p+j*q == n and asdf == False:\n            print(i+j)\n            asdf = True\n            for a in range(i):\n                print(s[a*p:(a+1)*p])\n            for b in range(j):\n                print(s[p*i+b*q:p*i+(b+1)*q])\nif asdf == False:\n    print(-1)\n            \n", "n, p, q = map(int, input().split())\ns = input()\nfor i in range(n // p + 1):\n    if (n - i * p) % q == 0:\n        print(i + (n - i * p) // q)\n        for j in range(i):\n            print(s[j * p:j * p + p])\n        for j in range((n - i * p) // q):\n            print(s[i * p + j * q: i * p + j * q + q])\n        return\nprint(-1)", "n, a, b = map(int, input().split())\ns = input()\nk1, k2 = 0, 0\nfor i in range(n + 1):\n    for j in range(n + 1):\n        if i * a + j * b == n:\n            k1 = i\n            k2 = j\n            break\n    if k1 or k2:\n        break\nelse:\n    print('-1')\n\nif k1 or k2:\n    print(k1 + k2)\n    i = 0\n    while k1:\n        print(s[i: i + a])\n        k1 -= 1\n        i += a\n    while k2:\n        print(s[i: i + b])\n        k2 -= 1\n        i += b", "#The Text Splitting.py\nimport os\nn, a, b = list(map(int, input().split()))\ns = input()\nmaxn = n // a\n# print(s)\nx = -1\nfor i in range(0, maxn+1):\n\ttmp = n - a*i\n\tif tmp % b == 0:\n\t\tx = i\n\t\tbreak\nif x != -1:\n\tprint(x + (n - a*x) // b)\n\tout = \"\"\n\tfor i in range(0, x):\n\t\tout = s[a*i:(i+1)*a]\n\t\tprint(out)\n\ty = (n - a*x) // b\n\tfor i in range(0, y):\n\t\tout = s[b*i+a*x:(i+1)*b+a*x]\n\t\tprint(out)\nelse:\n\tprint(\"-1\")\n#os.system(\"pause\")\n", "import math\n\ndef euclid_algorithm(a, b):\n    t1, t2 = abs(a), abs(b)\n    #saving equalities:\n    #t1 == x1 * a + y1 * b,\n    #t2 == x2 * a + y2 * b. \n    x1, y1, x2, y2 = int(math.copysign(1, a)), 0, 0, int(math.copysign(1, b))\n    if t1 < t2:\n        t1, t2 = t2, t1\n        x1, y1, x2, y2 = x2, y2, x1, y1\n\n    while t2 > 0:\n        if x1 * a + y1 * b != t1:\n            print('inshalla')\n        k = int(t1 // t2)\n        t1, t2 = t2, t1 % t2\n        #t1 - k * t2 == (x1 - k * x2) * a + (y1 - k * y2) * b\n        x1, y1, x2, y2 = x2, y2, x1 - k * x2, y1 - k * y2\n\n    return t1, x1, y1\n\ndef opposite_element(x, p):\n    gcd, k, l = euclid_algorithm(x, p)\n    if gcd != 1:\n        return -1\n    return k % p\n\ndef fact_mod(n, p):\n    prod = 1\n    for i in range(2,n+1):\n        prod *= i\n        prod %= p\n    return prod\n\nn, p, q = [int(x) for x in input().split()]\ns = input().rstrip()\nfor i in range(n // p + 1):\n    if (n - p*i) % q == 0:\n        j = (n - p*i) // q\n        print(i+j)\n        for k in range(i):\n            print(s[k*p:(k+1)*p])\n        for k in range(j):\n            print(s[p*i + k*q: p*i + (k+1)*q])\n        break\nelse:\n    print(-1)\n    \n", "n, a, b = list(map(int, input().split(' ')))\n\ns = input()\n\nc = 0\nwhile c * a <= n and (n - c * a) % b != 0:\n    c += 1\n\nif c * a > n:\n    print(-1)\nelse:\n    cb = (n - a * c) // b\n    print(c + cb)\n    for i in range(c):\n        print(s[a * i: a * (i + 1)])\n    for i in range(cb):\n        print(s[c * a + b * i: c * a + b * (i + 1)])\n", "n, p, q = list(map(int, input().split()))\ns = input()\n\nk1 = 0\nk = 0\n\nr = n // p\n\nfor i in range(r, -1, -1):\n    if (n - p * i) % q == 0:\n        k1 = i\n        k = k1 + ((n - p * i) // q)\n\n\nif k == 0:\n    print(-1)\nelse:\n    print(k)\n    for i in range(k1):\n        print(s[i*p: (i+1)*p])\n    for i in range(k - k1):\n        print(s[p*k1 + i*q: p*k1 + (i + 1)*q])\n", "n, p, q = list(map(int, input().split()))\ns = input()\nm = 0\nwhile m * p <= n:\n    if (n - m * p) % q == 0:\n        k = m + (n - m * p) // q\n        print(k)\n        for i in range(m):\n            print(s[p * i: p * (i + 1)])\n        for i in range(k - m):\n            print(s[p * m + q * i: p * m + q * (i + 1)])\n        break\n    m += 1\nelse:\n    print(-1)\n", "def main():\n    n, p, q = list(map(int, input().split()))\n    s = input()\n\n    for i in range(0, n + 1):\n        for j in range(0, n + 1):\n            if p * i + q * j == n:\n                print(i + j)\n                for k in range(i):\n                    print(s[:p])\n                    s = s[p:]\n                for k in range(j):\n                    print(s[:q])\n                    s = s[q:]\n                return 0\n\n    print(-1)\n    return 0\n\nmain()\n", "import sys\n# fin = open(\"ecr4a.in\", \"r\")\nfin = sys.stdin\n\nn, p, q = map(int, fin.readline().split())\ns = fin.readline().rstrip()\n\n\nkp, kq = None, None\nfor i in range(0, n // p + 1):\n    if not (n - i*p) % q:\n        kp, kq = i, (n - i*p) // q\n        break\nelse:\n    print(-1)\n    return\n\nprint(kp+kq)\ncpos, m = 0, p*kp\nwhile (cpos < m):\n    print(s[cpos:cpos + p])\n    cpos += p\nwhile (cpos < n):\n    print(s[cpos:cpos + q])\n    cpos += q", "import sys\nif False:\n\tinp = open('A.txt', 'r')\nelse:\n\tinp = sys.stdin\n\nn, p, q = list(map(int, inp.readline().split()))\nstring = inp.readline().strip()\n\nlength = n\nans = -1\nfor i in range(n//p + 1):\n\tlength = n-p*i\n\tif length%q == 0:\n\t\tans = i\n\t\tbreak\nif ans == -1:\n\tprint(-1)\nelse:\n\tprint(ans + length//q)\n\tfor i in range(ans):\n\t\tprint(string[:p])\n\t\tstring = string[p:]\n\tfor i in range(length//q):\n\t\tprint(string[:q])\n\t\tstring = string[q:]\n\n\n\n\n", "n, p, q = map(int, input().split())\ns = input()\nfor i in range(n // p + 1):\n    if (n - i * p) % q == 0:\n        print(i + (n - i * p) // q)\n        for j in range(i):\n            print(s[j * p:j * p + p])\n        for j in range((n - i * p) // q):\n            print(s[i * p + j * q: i * p + j * q + q])\n        return\nprint(-1)"]