["n=int(input())\nl=[int(c) for c in input().split()]\nll=[]\nres=[]\nhead=0\ndia=0\nfor i in range(1,n):\n    if l[i]==1:\n        l[i]=0\n        ll.append(i)\n    else:\n        res.append((head+1,i+1))\n        l[head]-=1\n        dia+=1\n        head=i\n        l[head]-=1\nif l[head]>0 and len(ll)>0:\n    res.append((ll[0]+1,head+1))\n    l[head]-=1\n    del(ll[0])\n    dia+=1\nif l[0]>0 and len(ll)>0:\n    res.append((ll[0]+1,1))\n    l[0]-=1\n    del(ll[0])\n    dia+=1\nfor i in ll:\n    for j in range(n):\n        if l[j]>0:\n            res.append((j+1,i+1))\n            l[j]-=1\n            break\nif len(res)<n-1:\n    print(\"NO\")\nelse:\n    print(\"YES \"+str(dia))\n    print(n-1)\n    for p in res:\n        print(p[0],end =\" \")\n        print(p[1])", "n = int(input())\na = [0]\nsum = 0\nfor i in map(int, input().split()) :\n    a.append(i)\n    sum += i\nlast = 0\nans = 0\nedge = []\nfor i in range(1, n + 1, 1) :\n    if(a[i] == 1) :\n        last = i\na[last] = 0\nfor i in range(1, n + 1, 1) :\n    if(a[i] > 1) :\n        if(last) :\n            edge.append([last, i])\n            ans += 1\n        last = i\nfor i in range(1, n + 1, 1) :\n    if(a[i] == 1 and last) :\n        edge.append([last, i])\n        last = 0\n        a[i] = 0\n        ans += 1\nfor i in range(1, n + 1, 1) :\n    for j in range(1, n + 1, 1) :\n        if(a[j] == 1 and a[i] > 2) :\n            edge.append([i, j])\n            a[i] -= 1\n            a[j] -= 1\nif(len(edge) != n - 1) :\n    print(\"NO\")\nelse :\n    print(\"YES\", ans)\n    print(len(edge))\n    for i in edge :\n        print(i[0], i[1])\n\n", "n = int(input())\na, edge = [0], []\nlast, sum, ans = 0, 0, 0\nfor i in map(int, input().split()) :\n    a.append(i)\n    sum += i\nfor i in range(1, n + 1) :\n    if(a[i] == 1) :\n        last = i\na[last] = 0\nfor i in range(1, n + 1) :\n    if(a[i] > 1) :\n        if(last) :\n            edge.append([last, i])\n            ans += 1\n        last = i\nfor i in range(1, n + 1) :\n    if(a[i] == 1 and last) :\n        edge.append([last, i])\n        last = 0\n        a[i] = 0\n        ans += 1\nfor i in range(1, n + 1) :\n    for j in range(1, n + 1) :\n        if(a[j] == 1 and a[i] > 2) :\n            edge.append([i, j])\n            a[i] -= 1\n            a[j] -= 1\nif(len(edge) != n - 1) :\n    print(\"NO\")\nelse :\n    print(\"YES\", ans)\n    print(len(edge))\n    for i in edge :\n        print(i[0], i[1])\n", "def solve():\n    N = int(input())\n    A = [int(k) for k in input().split()]\n    \n    sumA = sum(A)\n    \n    if sumA < 2*N - 2:\n        print (\"NO\")\n        return\n    \n    ones = []\n    \n    for i in range(N):\n        if A[i] == 1:\n            A[i] = 0\n            ones.append(i)\n            \n    t = len(ones)\n    dm = (N - t) - 1 + min(2, t)\n    \n    results = []\n    results.append(\"YES \" + str(dm))    \n    results.append(str(N-1))\n    \n    lst = -1\n    if t > 0:\n        lst = ones[-1]\n        ones.pop()\n        \n    for i in range(N):\n        if A[i] > 1:\n            if lst != -1:\n                A[lst] -= 1\n                A[i] -= 1\n                results.append(str(lst + 1) + \" \" + str(i + 1))\n            \n            lst = i\n            \n    for i in range(N-1, -1, -1):\n        while ones and A[i] > 0:\n            A[i] -= 1\n            results.append(str(i + 1) + \" \" + str(ones[-1] + 1))\n            ones.pop()\n    \n    print ('\\n'.join(k for k in results))\n\ndef __starting_point():\n    solve()\n__starting_point()"]