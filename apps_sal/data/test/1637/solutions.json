["import sys\nn,m = [int(x) for x in input().split()]\n\ninp = []\ns = sys.stdin.read()\ni = 0\nwhile True:\n    while i<len(s) and s[i]<'-':i+=1\n    if i==len(s):break\n    j = i\n    while j<len(s) and not(s[j]<'-'):j+=1\n    inp.append(int(s[i:j]))\n    i = j\n\norder = sorted(range(n),key=lambda i:inp[2*i]-inp[2*i+1])\n\nscore = [0]*n\nval = sum(inp[1:2*n:2])\nfor ind in range(n):\n    i = order[ind]\n\n    # Do second problem together with order[:ind]\n    # Do first problem together with order[ind:]\n    score[i] += val + inp[2*i+1]*(ind-1) + inp[2*i]*(n-ind-1)\n    val += inp[2*i]-inp[2*i+1]\n\nfor _ in range(m):\n    u = inp[2*n+2*_]-1\n    v = inp[2*n+2*_+1]-1\n    s = min(inp[2*u]+inp[2*v+1],inp[2*v]+inp[2*u+1])\n    score[u] -= s\n    score[v] -= s\n\nsys.stdout.write(' '.join(str(x) for x in score))", "import sys\ninput = sys.stdin.readline\n\nn,m = [int(x) for x in input().split()]\n\ns = sys.stdin.read()\n\ni = 0\nj = 1\ninp = []\nwhile i<len(s):\n    while s[j]>='-':j+=1\n    inp.append(int(s[i:j]))\n    j+=1\n    i=j\n\norder = sorted(range(n),key=lambda i:inp[2*i]-inp[2*i+1])\n\nscore = [0]*n\nval = sum(inp[1:2*n:2])\nfor ind in range(n):\n    i = order[ind]\n\n    # Do second problem together with order[:ind]\n    # Do first problem together with order[ind:]\n    score[i] += val + inp[2*i+1]*(ind-1) + inp[2*i]*(n-ind-1)\n    val += inp[2*i]-inp[2*i+1]\n\nfor _ in range(m):\n    u = inp[2*n+2*_]-1\n    v = inp[2*n+2*_+1]-1\n    s = min(inp[2*u]+inp[2*v+1],inp[2*v]+inp[2*u+1])\n    score[u] -= s\n    score[v] -= s\n\nsys.stdout.write(' '.join(str(x) for x in score))", "import sys\ninput = sys.stdin.readline\n\nn,m = [int(x) for x in input().split()]\n\n\ns = sys.stdin.read()\n\nj = 0\ninp = []\nnumb = 0\n\nif s[j]=='-':\n    sign = -1\n    j += 1\nelse:\n    sign = 1\n\nwhile j<len(s)-1:\n    numb = 10*numb + ord(s[j])-48\n    j+=1\n    \n    if s[j]<'-':\n        inp.append(sign*numb)\n        j+=1\n        if j<len(s) and s[j]=='-':\n            sign = -1\n            j += 1\n        else:\n            sign = 1\n        numb=0\nif j==len(s)-1:\n    numb = 10*numb + ord(s[j])-48\n    inp.append(sign*numb)\n\norder = sorted(range(n),key=lambda i:inp[2*i]-inp[2*i+1])\n\nscore = [0]*n\nval = sum(inp[1:2*n:2])\nfor ind in range(n):\n    i = order[ind]\n\n    # Do second problem together with order[:ind]\n    # Do first problem together with order[ind:]\n    score[i] += val + inp[2*i+1]*(ind-1) + inp[2*i]*(n-ind-1)\n    val += inp[2*i]-inp[2*i+1]\n\nfor _ in range(m):\n    u = inp[2*n+2*_]-1\n    v = inp[2*n+2*_+1]-1\n    s = min(inp[2*u]+inp[2*v+1],inp[2*v]+inp[2*u+1])\n    score[u] -= s\n    score[v] -= s\n\nsys.stdout.write(' '.join(str(x) for x in score))", "import sys\n\nn,m = [int(x) for x in input().split()]\n\ns = sys.stdin.read()\n\ninp = []\nnumb = 0\nsign = 1\n \nfor i in range(len(s)):\n    if s[i]>='0':\n        numb = 10*numb + ord(s[i])-48\n    else:\n        if s[i]=='-':\n            sign = -1\n        else:\n            inp.append(sign*numb)\n            numb = 0\n            sign = 1\nif s[-1]>='0':\n    inp.append(sign*numb)\n\norder = sorted(range(n),key=lambda i:inp[2*i]-inp[2*i+1])\n\nscore = [0]*n\nval = sum(inp[1:2*n:2])\nfor ind in range(n):\n    i = order[ind]\n\n    # Do second problem together with order[:ind]\n    # Do first problem together with order[ind:]\n    score[i] += val + inp[2*i+1]*(ind-1) + inp[2*i]*(n-ind-1)\n    val += inp[2*i]-inp[2*i+1]\n\nfor _ in range(m):\n    u = inp[2*n+2*_]-1\n    v = inp[2*n+2*_+1]-1\n    s = min(inp[2*u]+inp[2*v+1],inp[2*v]+inp[2*u+1])\n    score[u] -= s\n    score[v] -= s\n\nsys.stdout.write(' '.join(str(x) for x in score))"]