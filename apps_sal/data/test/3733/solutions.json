["N, I = list(map(int, input().split()))\nA = sorted([int(a) for a in input().split()])\nB = []\nj = 0\nfor i in range(N):\n    if i == 0 or A[i] == A[i-1]:\n        B.append(j)\n    else:\n        j += 1\n        B.append(j)\n\ndef calc(k):\n    K = 1<<k\n    i = 0\n    j = 0\n    ma = 0\n    while j < N:\n        if B[j]-B[i] <= K - 1:\n            ma = max(ma, j-i+1)\n            j += 1\n        else:\n            i += 1\n    return N-ma\n\nans = 10**100\nfor i in range(31):\n    if i * N <= 8 * I:\n        ans = min(ans, calc(i))\n\nprint(ans)\n\n\n", "from itertools import groupby as gb\n\nN, I = map(int,input().split())\nA = list(map(int,input().split()))\nA = sorted(A)\nl = []\nG = gb(A)\nfor k, v in G:\n    l.append(len(list(v)))\n\nk = 100\nwhile True:\n    if N * k > 8 * I:\n        k -= 1\n    else:\n        break\nK = 2 ** k\n\nNN = len(l)\nif NN <= K:\n    print(0)\n    return\n\nsm = sum(l[:K])\nmx = sm\n\nfor i in range(K, NN):\n    sm += l[i] - l[i - K]\n    mx = max(mx, sm)\n\nprint(sum(l) - mx)", "from math import log, floor\nn,I = list(map(int, input().split()))\na = [int(s) for s in input().split()]\nb = []\na.sort()\nb.append([-1, 0])\nfor i in range(0, n):\n    if a[i] == b[-1][0]:\n        b[-1][1] += 1\n    else:\n        b.append([a[i], b[-1][1]+1])\nmaxk = I*8//n\nmaxK = 1<<maxk\n# print(maxk, maxK)\nans = n\n# print(b)\nif len(b)-1 < maxK:\n    ans = 0\nelse:\n    for i in range(len(b)-maxK):\n        chg = n-(b[i+maxK][1]-b[i][1])\n        if chg < ans:\n            ans = chg\nprint(ans)\n", "import math\n\nimport sys\ninput = sys.stdin.readline\n\nn, I = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nk = math.floor((I*8)/n)\nK = 2**min(k, 20)\n\n# find distinct\ns = sorted(set(A))\ndis = len(s)\n\n# count occurence\ncount = {}\n\nfor i in range(n):\n    if A[i] not in count:\n        count[A[i]] = 1\n    else:\n        count[A[i]] += 1\n\n# test eliminating\ndiff = max(dis - K, 0)\n\nct = 0\nfor i in range(diff):\n    ct += count[s[i]]\nans = ct\n\nfor i in range(diff-1, -1, -1):\n    ct -= count[s[i]]\n    ct += count[s[i+K]]\n    ans = min(ans, ct)\n\nprint(ans)\n", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\n\ndef main():\n    n, I = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    K = 2**min(20, 8*I//n)\n\n    a.sort()\n    c = []\n    pos = 0\n    while pos < n:\n        r = pos\n        while r+1 < n and a[pos] == a[r+1]:\n            r += 1\n        c.append(r-pos+1)\n        pos = r + 1\n\n    if K > len(c):\n        print(0)\n    else:\n        pref = c.copy()\n        suff = c.copy()\n        for i in range(1, len(c)):\n            pref[i] += pref[i-1]\n        for i in range(len(c)-2, -1, -1):\n            suff[i] += suff[i+1]\n\n        res = sum(c)\n        l = 0\n        r = K-1\n        while r < len(c):\n            s1 = 0 if l == 0 else pref[l-1]\n            s2 = 0 if r == len(c)-1 else suff[r+1]\n            res = min(res, s1+s2)\n            l += 1\n            r += 1\n\n        print(res)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "R=lambda:map(int,input().split())\nn,I=R()\na=sorted(R())\nb=[0]+[i+1for i in range(n-1)if a[i]<a[i+1]]\nprint(n-max(y-x for x,y in zip(b,b[1<<8*I//n:]+[n])))", "R=lambda:map(int,input().split())\nn,I=R()\na=-1,*sorted(R())\nb=[i for i in range(n)if a[i]<a[i+1]]\nprint(n-max(y-x for x,y in zip(b,b[1<<8*I//n:]+[n])))", "R=lambda:map(int,input().split())\nn,I=R()\na=[-1]+sorted(R())\nb=[i for i in range(n)if a[i]<a[i+1]]\nprint(n-max(y-x for x,y in zip(b,b[1<<8*I//n:]+[n])))", "from sys import stdin\ninput=stdin.readline\nn,I=map(int,input().split())\na=sorted(list(map(int,input().split())))\nkey=[]\nk=min(I*8//n,20)\nK=min(2**k,n)\nlast=-1\nfor i in range(n):\n    if a[i]==last:\n        key[-1]+=1\n    else:\n        key.append(1)\n        last=a[i]\nnow=0\nbest=0\nfor i in range(len(key)):\n    if i<K:\n        now+=key[i]\n    else:\n        now+=key[i]\n        now-=key[i-K]\n    best=max(now,best)\nprint(n-best)", "from sys import stdin\ninput=stdin.readline\nn,I=map(int,input().split())\na=sorted(list(map(int,input().split())))\nkey=[]\nk=min(I*8//n,20)\nK=min(2**k,n)\nlast=-1\nfor i in range(n):\n    if a[i]==last:\n        key[-1]+=1\n    else:\n        key.append(1)\n        last=a[i]\nnow=best=0\nfor i in range(len(key)):\n    if i<K:\n        now+=key[i]\n    else:\n        now+=key[i]\n        now-=key[i-K]\n    best=max(now,best)\nprint(n-best)", "import math\nn,I=[int(x) for x in input().split()]\nlis=[int(x) for x in input().split()]\n\n\n\ndic=dict()\n\nfor i in lis:\n    if i in dic:\n        dic[i]+=1\n    else:\n        dic[i]=1\n\n\ndisLis=sorted(dic)\nnowK=len(disLis)\n\nif math.log2(nowK)>(I*8)//n:\n\n    maxK=2**((I*8)//n)\n    needMin=nowK-maxK\n    \n    minChange=0\n    \n    for i in range(needMin):\n        minChange+=dic[disLis[i]]\n    \n    befChange=minChange\n    \n    for i in range(1,needMin+1):\n        befChange=befChange-dic[disLis[needMin-i]]+dic[disLis[-i]]\n        if befChange<minChange:\n            minChange=befChange\n\n    print(minChange)\nelse:\n    print(0)\n", "import math\n\nn, I = map(int, input().split())\nif I >= n*round(math.log(n,2)+0.5)/8:\n    print(0)\nelse:\n    a = sorted([x for x in map(int, input().split())])\n    a=[-1]+a\n    b=[i for i in range(n) if a[i] < a[i+1]]\n    ans = set()\n    for x in zip(b, b[2**(I*8//n):]+[n]):\n        ans.add(x[1]-x[0])\n    print(n-max(ans))", "n,i=list(map(int,input().split()))\nk=2**(8*i//n) if 8*i//n < 20 else n\na=[int(x) for x in input().split()]\na.sort()\nfreq = [1]\nfor i in range(1, len(a)):\n\tif a[i-1] == a[i]:\n\t\tfreq[-1] += 1\n\telse:\n\t\tfreq.append(1)\nwindow = sum(freq[:k])\nans = window\nfor i in range(k, len(freq)):\n\twindow += freq[i]\n\twindow -= freq[i-k]\n\tans = max(ans, window)\n\nprint(n-ans)\n", "n,i=list(map(int,input().split()))\nk=2**(8*i//n) if 8*i//n < 20 else n\na=[int(x) for x in input().split()]\na.sort()\nfreq = [1]\nfor i in range(1, len(a)):\n\tif a[i-1] == a[i]:\n\t\tfreq[-1] += 1\n\telse:\n\t\tfreq.append(1)\nwindow = sum(freq[:k])\nans = window\nfor i in range(k, len(freq)):\n\twindow += freq[i]\n\twindow -= freq[i-k]\n\tans = max(ans, window)\n\nprint(n-ans)\n", "import math\n\nn, m = list(map(int, input().split()))\nlst = list(map(int, input().split()))\n\nlst.sort()\nlast_val = -1\nfreq_list = []\n\nfor i in range(n):\n\tif lst[i] != last_val:\n\t\tlast_val = lst[i]\n\t\tfreq_list.append(1)\n\telse:\n\t\tfreq_list[-1] += 1\n\nk = len(freq_list)\n\nfor i in range(k, 0, -1):\n\tif n * math.ceil(math.log2(i)) <= m * 8:\n\t\tk = i\n\t\tbreak\n\nmx = 0\ntot = sum(freq_list[:k])\nmx = max(tot, mx)\nfor i in range(k, len(freq_list)):\n\ttot = tot + freq_list[i] - freq_list[i-k]\n\tmx = max(mx, tot)\n\nprint(n-mx)\n\n\n", "R=lambda:map(int,input().split())\nn,I=R()\na=-1,*sorted(R())\nb=[i for i in range(n)if a[i]<a[i+1]]\nprint(n-max(y-x for x,y in zip(b,b[1<<8*I//n:]+[n])))", "from itertools import groupby\n\n\ndef mp3(n, I, a):\n    k = int((I * 8) / n)\n    d = 1 << k\n    c = [len(list(group)) for (key, group) in groupby(sorted(a))]\n    chgs = sum(c[d:])\n    ans = chgs\n    for i in range(0, len(c) - d):\n        chgs += c[i]\n        chgs -= c[i + d]\n        ans = min(ans, chgs)\n    return ans\n\n\ndef __starting_point():\n    nn, II = list(map(int, input().split()))\n    aa = list(map(int, input().split()))\n    print(mp3(nn, II, aa))\n__starting_point()"]