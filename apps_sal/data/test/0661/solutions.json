["#!/usr/bin/env python3\ndef main():\n    M, K = map(int, input().split())\n    if K == 0:\n        print(*[i//2 for i in range(2**(M+1))])\n    else:\n        if K >= 2**M or M <= 1:\n            print(-1)\n        else:\n            nums = []\n            for i in range(2**M):\n                if i != K:\n                    nums.append(i)\n            a = [nums[0], K, nums[0]]\n            b = []\n            for i in range(1,2**M-1):\n                b.append(nums[i])\n            b.append(K)\n            for i in range(1,2**M-1):\n                b.append(nums[2**M-1-i])\n            print(*a,*b)\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    M, K = list(map(int, input().split()))\n    if M == 1:\n        if K == 0:\n            print('0 0 1 1')\n        else:\n            print('-1')\n        return\n    if K >= 2 ** M:\n        print((-1))\n        return\n    r = []\n    for i in range(2 ** M):\n        if i != K:\n            r.append(i)\n    r.append(K)\n    for i in reversed(list(range(2 ** M))):\n        if i != K:\n            r.append(i)\n    r.append(K)\n    print((' '.join(str(i) for i in r)))\nmain()\n", "m, k = list(map(int, input().split()))\n\nif m == 0:\n    if k == 0:\n        print('0 0')\n    else:\n        print('-1')\nelif m == 1:\n    if k == 0:\n        print('0 0 1 1')\n    elif k >= 1:\n        print('-1')\nelse:\n    if k < 2 ** m:\n        l = list(range(2 ** m))\n        l.pop(k)\n        ans = l + [k] + l[::-1] + [k]\n        print((' '.join(map(str, ans))))\n    else:\n        print((-1))\n\n", "m, k = list(map(int, input().split()))\nif m == 1 and k == 1:\n    print((-1))\nelif m == 1 and k == 0:\n    print(\"0 0 1 1\")\nelif 2**m > k:\n    ans = str(k)\n    y = []\n    for i in range(2**m):\n        if i == k:\n            continue\n        y.append(str(i))\n    ans =  ' '.join(reversed(y)) + ' ' + ans + ' ' + ' '.join(y) + ' ' +ans\n    print(ans)\nelse:\n    print((-1))\n", "M,K = map(int, input().split())\n\nif K >= pow(2, M):\n    print(-1)\nelif K == 0:\n    ans = []\n    for i in range(pow(2, M)):\n        ans.append(i)\n        ans.append(i)\n    print(*ans)\nelse:\n    num = 0\n    L = []\n    for i in range(pow(2, M)):\n        if i == K:\n            continue\n        num ^= i\n        L.append(i)\n    if num == K:\n        L2 = list(reversed(L))\n        ans = L + [K] + L2 + [K]\n        print(*ans)\n    else:\n        print(-1)", "m, k = map(int, input().split())\nif not (0<=k<2**m):\n  print(-1)\n  return\nif m == 1:\n  if k == 0:\n    print(0, 0, 1, 1)\n  else:\n    print(-1)\nelse:\n  L = []\n  for i in range(2**m):\n    if i != k:\n      L.append(i)\n  L.append(k)\n  for i in range(2**m-1, -1, -1):\n    if i != k:\n      L.append(i)\n  L.append(k)\n  print(*L)", "# \u89e3\u8aacAC\nM,K = map(int, input().split())\n\nif M == 1:\n    if K == 0:\n        print(\"0 0 1 1\")\n    else:\n        print(-1)\nelse:\n    if (1 << M) <= K:\n        print(-1)\n    else:\n        ans = [n for n in range(1 << M) if n != K]\n        ans.append(K)\n        ans += [n for n in range((1 << M) - 1, -1, -1) if n != K]\n        ans.append(K)\n        print(*ans)", "# coding: utf-8\nimport sys\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nM, K = lr()\nif K >= 2 ** M:\n    print((-1)); return\nif M == 1:\n    if K == 0:\n        print(\"0 0 1 1\")\n    else:\n        print((-1))\n    return\nA = [x for x in range(2 ** M) if x != K]\nanswer = A + [K] + A[::-1] + [K]\nprint((*answer))\n# 22\n", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*x+x[::-1]if k<1else x[:k:-1]+x[k-1::-1]+[k]+x[:k]+x[k+1:]+[k]if(k<2**m)&(m>1)else[-1])", "m,k = map(int,input().split())\nif m == 0:\n    if k == 0:\n        print(0,0)\n    else:\n        print(-1)\n    return\nif m == 1:\n    if k== 0:\n        print(0,0,1,1)\n    else:\n        print(-1)\n    return\nif k < 2**m:\n    l = [i for i in range(2**m) if i != k ]\n    l = l + [k] + l[::-1] + [k]\n    print(*l)\nelse:\n    print(-1)", "import sys\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nM, K = lr()\n\nif 2**M <= K or (M == 1 and K == 1):\n    print((-1)); return\n\nif K == 0:\n    answer = [x//2 for x in range(2**(M+1))]\n\nelse:\n    answer = []\n    A = [x for x in range(2**M) if x != K]\n    answer.extend(A)\n    if K != 0:\n        answer.append(K)\n    answer.extend(A[::-1])\n    if K != 0:\n        answer.append(K)\n\nprint((*answer))\n", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*k<1and x+x[::-1]or k<1<<m>2and[k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1]or[-1])", "import sys\ninput = sys.stdin.readline\n\nM,K = list(map(int,input().split()))\n\nif M==1:\n    if K==0:\n        print((0,0,1,1))\n    else:\n        print((-1))\nelse:\n    if K >= (1<<M):\n        print((-1))\n    else:\n        a = list(range(1<<M))\n        a.remove(K)\n        ans = a + [K] + a[::-1] + [K]\n        print((\" \".join(map(str,ans))))\n", "m, k = list(map(int, input().split()))\n\nif m == 0:\n    if k == 0:\n        ans = [0, 0]\n    else:\n        ans = []\n\nelif m == 1:\n    if k == 0:\n        ans = [0, 0, 1, 1]\n    else:\n        ans = []\n\nelif k < 2 ** m:\n    li = list(range(2 ** m))\n    li.remove(k)\n    ans = li + [k] + li[::-1] + [k]\n\nelse:\n    ans = []\n\nif ans:\n    print((*ans))\nelse:\n    print((-1))\n", "m, k = map(int, input().split())\nif m == 0:\n    if k == 0:\n        print(0, 0)\n    else:\n        print(-1)\nelif m == 1:\n    if k == 0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\nelse:\n    if k>=2**m:\n        print(-1)\n    else:\n        L = [i for i in range(2 ** m) if i != k]\n        ans = L + [k] + L[::-1] + [k]\n        print(*ans, sep=' ')\n    ", "from itertools import chain\nm,k=map(int,input().split())\nif 0<k<2**m and m>=2:\n    print(*[str(i) for i in chain(range(0,k),range(k+1,2**m),[k],range(2**m-1,k,-1),range(k-1,-1,-1),[k])])\nelif k==0:\n    print(*[str(i) for i in chain(range(0,2**m),range(2**m-1,-1,-1))])\nelse:\n    print(-1)", "m, k = map(int, input().split())\nif k >= 2**m:\n  print(-1)\nelif m == 0:\n  print(0, 0)\nelif m == 1:\n  if k == 0:\n    print(0, 0, 1, 1)\n  else:\n    print(-1)\nelse:\n  for i in range(2**m):\n    if i == k:\n      continue\n    print(i, end=\" \")\n  print(k, end=\" \")\n  for i in range(2**m-1, -1, -1):\n    if i == k:\n      continue\n    print(i, end=\" \")\n  print(k)", "M, K = map(int, input().split())\n\n#K \u3068 K \u306e\u9593\u3067 K \u3092\u4f5c\u308c\u308c\u3070\u3001\u6570\u5217\u306f\u5b58\u5728\u3059\u308b\u3002  \n#\u7d76\u5bfe\u306b\u4f5c\u308c\u306a\u3044\u30d1\u30bf\u30fc\u30f3\nif K >= 2 ** M:\n  print(\"-1\")\n  return\nif M == 0:\n  print(0, 0)\n  return\nelif M == 1:\n  if K == 0:\n    print(0, 0, 1, 1)\n  else:\n    print(-1)\n  return\n#K \u3068 K \u306e\u9593\u3067 K \u3092\u4f5c\u308c\u308c\u3070\u3001\u6570\u5217\u306f\u5b58\u5728\u3059\u308b\u3002  \n  \nnow = 0  \nfor i in range(2 ** M):\n  if i != K:\n    now = now^i\n  #print(now)\n#print(now)\n\nprint(K, end = \" \")\nfor i in range(2 ** M):\n  if i != K:\n    print(i, end = \" \")\nprint(K, end = \" \")\nfor i in range(2 ** M):\n  if (2 ** M - 1 - i) != K:\n    print(2 ** M - 1 - i, end = \" \")\n  \n  \n  \n\n  \n  ", "from itertools import permutations\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nfrom bisect import *\nfrom collections import *\nfrom heapq import *\n\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef SI(): return sys.stdin.readline()[:-1]\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\nint1 = lambda x: int(x) - 1\ndef MI1(): return map(int1, sys.stdin.readline().split())\ndef LI1(): return list(map(int1, sys.stdin.readline().split()))\np2D = lambda x: print(*x, sep=\"\\n\")\ndij = [(1, 0), (0, 1), (-1, 0), (0, -1)]\n\ndef main():\n    m,k=MI()\n    if (m,k)==(1,1) or k>=2**m:ans=[-1]\n    elif k==0:\n        ans=list(range(1<<m))\n        ans+=ans[::-1]\n    else:\n        ans=[]\n        for i in range(1<<m):\n            if i==k:continue\n            ans.append(i)\n        rev=ans[::-1]\n        ans.append(k)\n        ans+=rev\n        ans.append(k)\n    print(*ans)\n\nmain()\n", "M,K = list(map(int, input().split()))\n\nif 2 ** M <= K:\n  print((-1))\n  return\n  \nif M == 0:\n  print((0,0))\nelif M == 1 and K == 0:\n  print((0,0,1,1))\nelif M == 1 and K >= 1:\n  print((-1))\nelse:\n  A = list(range(2**M))\n  B = A[:K] + A[K+1:]\n  C = list(map(str, B + [K] + B[::-1] + [K]))\n  print((\" \".join(C)))\n  \n", "import sys\nfrom itertools import permutations\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    M, K = list(map(int, readline().split()))\n\n    if M == 0:\n        if K == 0:\n            print((0, 0))\n            return\n        else:\n            print((-1))\n            return\n    elif M == 1:\n        if K == 0:\n            print((0, 0, 1, 1))\n            return\n        else:\n            print((-1))\n            return\n    elif K >= pow(2, M):\n        print((-1))\n        return\n\n    vec = [i for i in range(pow(2, M)) if i != K]\n    ans = vec + [K] + vec[::-1] + [K]\n\n    print((' '.join(map(str, ans))))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    M, K = list(map(int, input().split(' ')))\n    if K >= 2 ** M:\n        print((-1))\n        return\n    if M == 0:\n        print('0 0')\n        return\n    if M == 1:\n        if K == 0:\n            print('0 0 1 1')\n        else:\n            print((-1))\n        return\n    # M >= 2 and K < 2 ** M\n    arr = list(map(str, [i for i in range(2 ** M) if i != K]))\n    rev_arr = arr.copy()\n    rev_arr.reverse()\n    ans = arr + [str(K)] + rev_arr + [str(K)]\n    print((' '.join(ans)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "m,k=map(int,input().split())\nif 2**m<=k:\n    print(-1)\nelif m==1:\n    if k==0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\nelse:\n    a=[i for i in range(2**m) if i!=k]\n    ans=[k]+a+[k]+a[::-1]\n    print(*ans)  ", "def solve():\n    M, K = map(int, input().split())\n    if K>=1<<M:\n        return [-1]\n    if M==1:\n        if K==0:\n            return [1,0,0,1]\n        return [-1]\n    ans = [K]\n    for i in range(1<<M):\n        if i!=K:\n            ans.append(i)\n    ans.append(K)\n    for i in range((1<<M)-1,-1,-1):\n        if i!=K:\n            ans.append(i)\n    return ans\nprint(*solve())", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*(x+x[::-1])*(k<1)or([k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1])*(m>1<=k<1<<m)or[-1])", "M, K = map(int, input().split())\n\nif K==0:\n    l = []\n    for i in range(2**M):\n        l += [i, i]\n    print(*l)\nelif M==0 or M==1:\n    print(-1)\nelif 1<=K<2**M:\n    l = []    \n    for i in range(2**M):\n        if i!=K:\n            l += [i]\n    l += [K]\n    for i in range(2**M)[::-1]:\n        if i!=K:\n            l += [i]\n    l += [K]\n    print(*l)\nelse:\n    print(-1)", "m,k=map(int,input().split())\nx=list(range(2**m))\nprint(*x[::-1]+x if k==0 else x[:k:-1]+x[k-1::-1]+[k]+x[:k]+x[k+1:]+[k] if k<2**m and m>1 else[-1])", "m,k=map(int,input().split())\nif k>2**m-1:\n  print(-1)\nelif k==0:\n  ans=[i for i in range(2**m)]\n  ans=ans+ans[::-1]\n  print(*ans)\nelse:\n  if m==1:\n    print(-1)\n  else:\n    ans=[]\n    for i in range(2**m):\n      if i==k:\n        continue\n      ans.append(i)\n    ans=[k]+ans+[k]+ans[::-1]\n    print(*ans)", "M, K = map(int, input().split())\n\nans = [-1]\nif M == 1:\n  if K == 0:\n    ans = [0, 0, 1, 1]\nelse:\n  if K < 2**M:\n    b = [i for i in range(2**M) if i != K]\n    ans = b + [K] + b[::-1] + [K]\n\nprint(*ans)", "import sys\ninput = sys.stdin.readline\nfrom functools import reduce\nfrom operator import xor\n\n\ndef read():\n    M, K = list(map(int, input().strip().split()))\n    return M, K\n\n\ndef solve(M, K):\n    seq = [str(0) for i in range(2**(M+1))]\n    if K == 0:\n        for i in range(2**M):\n            seq[2*i] = str(i)\n            seq[2*i+1] = str(i)\n    else:\n        if K >= 2**M:\n            return -1\n        # (A) K ... 0 K 0 rev(...), xor(...) == K \u306e\u5f62\u3092\u4f5c\u308c\u308c\u3070OK\n        S = [a for a in range(2**M) if a not in (0, K)]\n        if len(S) == 0 or reduce(xor, S) != K:\n            return -1\n            \n        j = 0\n        for i in range(2**M-2):\n            j += 1\n            if j == K:\n                j += 1\n            seq[i+1] = str(j)\n            seq[2**(M+1) - i - 1] = str(j)\n        seq[0] = str(K)\n        seq[2**M] = str(K)\n        \n    return \" \".join(seq)\n\n\ndef __starting_point():\n    inputs = read()\n    print((solve(*inputs)))\n\n__starting_point()", "M, K = (int(i) for i in input().split())\n\nif M == 1:\n    if K == 0:\n        print(\"0 0 1 1\")\n    else:\n        print(\"-1\")\nelse:\n    N = 2**M\n    if K >= N:\n        print(\"-1\")\n    elif K == 0:\n        l = list(range(N))\n        ll = l + l[::-1]\n        ll = [str(a) for a in ll]\n        print(\" \".join(ll))\n    else:\n        l = list(range(N))\n        l = l[:K] + l[K+1:]\n        ll = [0, K] + l + [K] + l[::-1][:-1]\n        ll = [str(a) for a in ll]\n        print(\" \".join(ll))   ", "m,k=list(map(int,input().split()))\nif 2**m<=k:print((-1));return\nif m==1:\n  if k==0:print((0,0,1,1))\n  else:print((-1))\n  return\na=[i for i in range(2**m) if i!=k]\nans=[k]+a+[k]+a[::-1]\nprint((*ans))\n", "m,k=list(map(int,input().split()))\nif 2**m<=k or m*k==1:\n    print((-1))\nelif m==1 and k==0:\n    print(\"0 0 1 1\")\nelse:\n    ans=[-1 for i in range(2**(m+1))]\n    sta=2**m-1\n    cnt=0\n    for i in range(1,2**m):\n        if cnt==k:\n            cnt+=1\n        ans[sta+i]=cnt\n        ans[sta-i]=cnt\n        cnt+=1\n    ans[sta]=k\n    ans[-1]=k\n    \n    print((\" \".join([str(i) for i in ans])))\n    \n", "m,k=map(int,input().split())\nif k>=2**m or m==k==1:\n\tprint(-1)\nelif m==1:\n\tprint(\"1 1 0 0\")\nelse:\n\tl=list(range(k))+list(range(k+1,2**m))\n\tprint(*(l+[k]+l[::-1]+[k]))", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*x[::-1]+x if k<1else x[:k:-1]+x[k-1::-1]+[k]+x[:k]+x[k+1:]+[k]if(k<2**m)&(m>1)else[-1])", "M,K = map(int,input().split())\n\nnum = 2**(M+1)\n\nif K >= num//2 or (M==1 and K==1):\n    ans = [-1]\nelif M==1 and K==0:\n    ans = [0,0,1,1]\nelse:\n    ans = [0]*num\n    for i in range(2**M):\n        if i==K: continue\n        ans[i-(i>K)] = i\n        ans[num-2-i+(i>K)] = i\n    ans[num//2-1] = K\n    ans[-1] = K\n    \nprint(*ans)", "M, K = list(map(int, input().split()))\n\nif K >= 2 ** M:\n    print((-1))\nelif (M, K) == (1, 0):\n    print((*(0, 0, 1, 1)))\nelif (M, K) == (1, 1):\n    print((-1))\nelse:\n    # 3, 5 -> [7 6 4 3 2 1 0 5 0 1 2 3 4 6 7 5]\n    ans = [0] * (2 ** (M + 1))\n    ans[2 ** M - 1] = ans[-1] = K\n\n    num = 0\n    for i in range(2 ** M - 1):\n        if num == K:\n            num += 1\n        ans[2 ** M - i - 2] = ans[2 ** M + i] = num\n        num += 1\n    print((*ans))\n", "from itertools import chain\nm,k=map(int,input().split())\nif k==0:\n    print(\" \".join([str(i) for i in chain(range(0,2**m),range(2**m-1,-1,-1))]))\nelif 0<k<2**m:\n    s=0\n    for i in range(0,2**m):\n        if i!=k:\n            s^=i\n    if s==k:\n        print(\" \".join([str(i) for i in chain(range(0,k),range(k+1,2**m),[k],range(2**m-1,k,-1),range(k-1,-1,-1),[k])]))\n    else:\n        print(-1)\nelse:\n    print(-1)", "def power(n, m):\n    ret = 1\n    for i in range(m):\n        ret *= n\n    return ret\n\nM, K = map(int, input().split())\nif K >= power(2, M):\n    print(-1)\nelse:\n    if M == 0:\n        print(0, 0)\n    elif M == 1:\n        if K == 1:\n            print(-1)\n        else:\n            print(0, 0, 1, 1)\n    else:\n        ans = []\n        N = power(2, M)\n        if K % 2 == 1:\n            ans.append(K)\n            ans.append(K - 1)\n            for i in range(0, N):\n                if i == K or i == K - 1:\n                    continue\n                ans.append(i)\n            ans.append(K)\n            for i in range(N - 1, -1, -1):\n                if i == K or i == K - 1:\n                    continue\n                ans.append(i)\n            ans.append(K - 1)\n        else:\n            ans.append(K)\n            ans.append(K + 1)\n            for i in range(0, N):\n                if i == K or i == K + 1:\n                    continue\n                ans.append(i)\n            ans.append(K)\n            for i in range(N - 1, -1, -1):\n                if i == K or i == K + 1:\n                    continue\n                ans.append(i)\n            ans.append(K + 1)\n        print(\" \".join(map(str, ans)))", "M, K = map(int, input().split())\n\nif M == 0:\n  if K == 0:\n    print(0, 0)\n  else:\n    print(-1)\nelif M == 1:\n  if K == 0:\n    print(0, 0, 1, 1)\n  else:\n    print(-1)\nelif K < (1 << M):\n  for i in range(1 << M):\n    if i != K:\n      print(i, end=\" \")\n  print(K, end=\" \")\n  for i in range((1 << M) - 1, -1, -1):\n    if i != K:\n      print(i, end=\" \")\n  print(K)\nelse:\n  print(-1)", "m, k = map(int, input().split())\nif 2**m <= k:\n    print(-1)\n    return\nelif m == 0 and k == 0:\n    print(\"0 0\")\n    return\nelif m == 1 and k == 1:\n    print(-1)\n    return\nelif m == 1 and k == 0:\n    print(\"1 1 0 0\")\n    return\nl = [i for i in range(2**m) if i != k]\nrev_l = sorted(l, reverse=True)\nans = l + [k] + rev_l + [k]\nprint(\" \".join(map(str, ans)))", "import sys\nM, K = map(int,input().split())\nif M == 0:\n    if K == 0:\n        print(*[0, 0])\n    else:\n        print(-1)\n    return\n\nif M == 1:\n    if K == 0:\n        print(*[0, 1, 1, 0])\n    else:\n        print(-1)\n    return\n\nN = 2 ** M\n\nif K >= N:\n    print(-1)\n    return\n\nans = []\n\nfor i in range(N):\n    if i != K:\n        ans.append(i)\n\nans.append(K)\n\nfor i in range(N-1,-1,-1):\n    if i != K:\n        ans.append(i)\n\nans.append(K)\n\nprint(*ans)", "m, k = list(map(int, input().split()))\n\nif m == 0:\n    if k == 0:\n        print('0 0')\n    else:\n        print('-1')\nelif m == 1:\n    if k == 0:\n        print('0 0 1 1')\n    elif k >= 1:\n        print('-1')\nelse:\n    if k < 2 ** m:\n        l = []\n        for i in range(2 ** m):\n            if i != k:\n                l.append(i)\n\n        ans = l + [k] + l[::-1] + [k]\n\n        ans2 = ''\n        for a in ans:\n            ans2 += str(a) + ' '\n        print((ans2[:-1]))\n    else:\n        print((-1))\n", "m,k=map(int,input().split())\nif k>2**m-1:\n    print(-1)\nelif m==1 and k==1:\n    print(-1)\nelse:\n    a,b=0,0\n    i=0\n    while k>0:\n        if k%2:\n            a+=2**i\n        k//=2\n        i+=1\n    #print(a)\n    if a==0:\n        ans=[]\n        for i in range(2**m):\n            ans.append(i)\n            ans.append(i)\n    else:\n        ans=[0]*2**(m+1)\n        ans[2**m-1]=b\n        ans[-1]=a\n        ans[2**m]=a\n        ans[0]=b\n        s={a,b}\n        idx=0\n        #print(ans)\n        for i in range(2**m):\n            if i not in s:\n                ans[idx+1]=i\n                ans[-2-idx]=i\n                idx+=1\n    print(*ans)", "m,k=list(map(int,input().split()))\nif k>=2**m:\n    print((-1))\nelif m==1:\n    if k==0: print((0,0,1,1))\n    else: print((-1))\nelse:\n    tmp=k\n    for i in range(1,2**m):\n        tmp^=i\n    ans=[i for i in range(2**m) if i!=k]+[k]+[i for i in range(2**m-1,-1,-1) if i!=k]+[k]\n    print((*ans))\n", "MOD = 10 ** 9 + 7\nINF = 10 ** 10\nimport sys\nsys.setrecursionlimit(100000000)\ndy = (-1,0,1,0)\ndx = (0,1,0,-1)\n\ndef main():\n    m,k = map(int,input().split())\n    if k >= pow(2,m):\n        print(-1)\n        return\n    if m == 1:\n        if k == 1:\n            print(-1)\n        else:\n            print('{0} {0} {1} {1}'.format(0,1))\n        return\n    \n    ans = [k]\n    ans2 = [k]\n    lim = pow(2,m)\n    for i in range(lim):\n        if i != k:\n            ans.append(i)\n        if lim - i - 1 != k:\n            ans2.append(lim - i - 1)\n    ans += ans2\n    print(*ans)  \n\ndef __starting_point():\n    main()  \n__starting_point()", "m, k = list(map(int, input().split()))\nif m == 1:\n    if k == 0:\n        print((0, 0, 1, 1))\n    else:\n        print((-1))\nelse:\n    s = 2 ** m\n    if k >= s:\n        print((-1))\n    else:\n        ans = [k]\n        for i in range(s):\n            if i != k:\n                ans.append(i)\n        ans.append(k)\n        for i in range(s - 1, -1, -1):\n            if i != k:\n                ans.append(i)\n        print((*ans))\n", "import sys\n\ninput = sys.stdin.readline\n\n\n# Editorial AC\ndef main():\n    M, K = list(map(int, input().split()))\n\n    if K >= 2 ** M:\n        print((-1))\n        return\n\n    if M == 1:\n        if K == 0:\n            print((0, 0, 1, 1))\n        else:\n            print((-1))\n        return\n\n    A = list(range(2 ** M))\n    B = list(reversed(list(range(2 ** M))))\n    A.remove(K)\n    B.remove(K)\n\n    ans = A + [K] + B + [K]\n    print((\" \".join(map(str, ans))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "M, K = list(map(int, input().split()))\n\nif M <= 1:\n    if K > 0:\n        print(-1)\n        return\n    else:\n        if M == 1:\n            print(\" \".join([\"0\", \"0\" , \"1\", \"1\"]))\n            return\n        else:\n            print(\"0 0\")\n            return\nelif K >= 2 ** M:\n        print(-1)\n        return\nans = [str(K)]\nexclude_k = [str(i) for i in range(2 ** M) if i != K]\nans.extend(exclude_k)\nans.append(str(K))\nans.extend(exclude_k[::-1])\nprint(\" \".join(ans))", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*(([-1],[k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1])[k<1<<m>2],x+x[::-1])[k<1])", "m,k=map(int,input().split())\nif m==1:\n  if k!=0:\n    print(-1)\n  else:\n    print(0,0,1,1)\n  return\nelif 2**m<=k:\n  print(-1)\n  return\nb=[]\nfor i in range(2**m):\n  if i!=k:\n    b.append(i)\nc=b[::-1]\nd=b+[k]+c+[k]\nprint(*d)", "M, K = map(int, input().split())\ndef binary_digits(n):\n  cnt = 0\n  while n != 0:\n    cnt += 1\n    n //= 2\n  return cnt\nif binary_digits(K) > M:\n  print(-1)\nelse:\n  if M == 1:\n    if K == 1:\n      print(-1)\n    elif K == 0:\n      print(0, 0, 1, 1)\n  else:\n    b = 2**(M+1)\n    if K == 0:\n      for i in range(b):\n        if i != b - 1:\n          print(i // 2, end = ' ')\n        else:\n          print(i // 2)\n    else:\n      A = [0 for i in range(b)]\n      A[1], A[b//2+1] = K, K\n      p = 1\n      for i in range(1, b//2):\n        if i != K:\n          A[b//2-p+1], A[b//2+p+1] = i, i\n          p += 1\n      for i in range(b):\n        if i != b - 1:\n          print(A[i], end = ' ')\n        else:\n          print(A[i])", "import itertools\nM,K=map(int,input().split())\n\nif M==1 and K==1:\n  print(-1)\nelif K==0:\n  ans_list=[]\n  for i in range(2**M):\n    ans_list.extend([i,i])\n  print(*ans_list)\nelif K<2**M:\n  ans_list=[]\n  for i in range(K+1):\n    ans_list.append(i)\n  for i in reversed(range(K)):\n    ans_list.append(i)\n  for i in reversed(range(K,2**M)):\n    ans_list.append(i)\n  for i in range(K+1,2**M):\n    ans_list.append(i)\n  print(*ans_list)\nelse:\n  print(-1)", "m, k = list(map(int, input().split()))\n\nif m == 1:\n    if k == 0:\n        ans = [0, 0, 1, 1]\n    else:\n        ans = []\n\nelif k < 2 ** m:\n    li = list(range(2 ** m))\n    li.remove(k)\n    ans = li + [k] + li[::-1] + [k]\n\nelse:\n    ans = []\n\nif ans:\n    print((*ans))\nelse:\n    print((-1))\n", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*x+x[::-1]if k<1else[k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1]if(k<2**m)&(m>1)else[-1])", "m, k = [int(x) for x in input().split()]\nif m == 1:\n    if k == 0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\nelse:\n    if k < 1 << m:\n        a = [str(i) for i in range(1 << m) if i != k]\n        print(' '.join(a), k, ' '.join(reversed(a)), k)\n    else:\n        print(-1)", "m, k = map(int, input().split())\nif m == 0:\n    if k == 0:\n        print(0, 0)\n    else:\n        print(-1)\nelif m == 1:\n    if k == 0:\n        print(0, 1, 1, 0)\n    else:\n        print(-1)\nelse:\n    a = 2 ** m - 1\n    if k > a:\n        print(-1)\n    else:\n        for num in range(a + 1):\n            if num == k:\n                continue\n            print(num, end = \" \")\n        print(k, end = \" \")\n        for num in range(a, -1, -1):\n            if num == k:\n                continue\n            print(num, end = \" \")\n        print(k)", "m, k = map(int, input().split())\nif k >= 2**m:\n  print(-1)\n  return\nif m == 0:\n  print(0, 0)\nelif m == 1:\n  if k == 0:\n    print(0, 1, 1, 0)\n  else:\n    print(-1)\nelse:\n  b = [i for i in range(2**m) if i != k]\n  c = b[::-1]\n  A = b + [k] + c + [k]\n  print(*A)", "def xor_matching(M, K):\n    # 0\u30681\u306f\u30b3\u30fc\u30ca\u30fc\u30b1\u30fc\u30b9\u3063\u307d\u3044\n    if M == 0:\n        return [0, 0] if K == 0 else [-1]\n    if M == 1:\n        return [0, 1, 1, 0] if K == 0 else [-1]\n\n    if K >= (1 << M):\n        return [-1]\n\n    values = list(range(1 << M))\n    Amax = values[-1]\n    res = []\n    res.append(K)\n    for v in values:\n        if v == K:\n            continue\n        res.append(v)\n    res.append(K)\n    for v in values[::-1]:\n        if v == K:\n            continue\n        res.append(v)\n    return res\n\n\ndef __starting_point():\n    M, K = list(map(int, input().split()))\n    ans = xor_matching(M, K)\n    print((*ans))\n\n__starting_point()", "M,K=map(int,input().split())\nif M==0 and K==0:\n  ans=[0,0]\nelif M==1:\n  if K==0:\n    ans=[0,0,1,1]\n  else:\n    ans=[-1]\nelif K>=2**M:\n  ans=[-1]\nelse:\n  ans=[]\n  for i in range(2**M):\n    if i!=K:\n      ans.append(i)\n  ans.append(K)\n  for j in range(2**M-1,-1,-1):\n    if j!=K:\n      ans.append(j)\n  ans.append(K)\nfor i in ans:\n  print(i,end=' ')", "M, K = list(map(int, input().split()))\n\nif M < 2:\n    if K != 0:\n        print((-1))\n    else:\n        anss = []\n        for A in range(2**M):\n            anss += [A, A]\n        print((' '.join(map(str, anss))))\nelse:\n    if K > 2**M - 1:\n        print((-1))\n    else:\n        anss = []\n        for A in range(2**M):\n            if A == K: continue\n            anss.append(A)\n        anss = anss + [K] + anss[::-1] + [K]\n        print((' '.join(map(str, anss))))\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    m,k = map(int, input().split())\n    if m == 0:\n        if k == 0:\n            print(0, 0)\n        else:\n            print(-1)\n    elif m == 1:\n        if k == 0:\n            print(0,0,1,1)\n        else:\n            print(-1)\n    else:\n        if k >= 2**m:\n            print(-1)\n        else:\n            res = []\n            for i in range(2**m):\n                if i != 0 and i != k:\n                    res.append(i)\n            if k == 0:\n                res = res + [0] + res[::-1] + [0]\n            else:\n                res = res + [0, k] + res[::-1] + [k, 0]\n            print(*res)\n\ndef __starting_point():\n    main()\n__starting_point()", "m, k = map(int, input().split())\nret = []\nif k >= 2 ** m or (m == 1 and k == 1):\n    ret.append(-1)\nelif m == 1:\n    ret = [0, 0, 1, 1]\nelse:\n    ret.append(k)\n    for i in range(2 ** m):\n        if i != k:\n            ret.append(i)\n    ret.append(k)\n    for i in range(2 ** m - 1, -1, -1):\n        if i != k:\n            ret.append(i)\nprint(' '.join(map(str, ret)))", "M, K = map(int,input().split())\n\nif K >= 2**M:\n    print(-1)\n    return\nelif M == 0:\n    print(\"0 0\")\nelif M == 1:\n    if K == 0:\n        print(\"0 0 1 1\")\n    else:\n        print(-1)\nelse:\n    A = [i for i in range(2**M) if i != K]\n    B = A[::-1]\n\n    for a in A: print(a, end = \" \")\n    print(K, end=\" \")\n    for b in B: print(b, end=\" \")\n    print(K)\n", "m,k=map(int,input().split())\nx=list(range(2**m))\nprint(*x[::-1]+x if k<1 else x[:k:-1]+x[k-1::-1]+[k]+x[:k]+x[k+1:]+[k]if(k<2**m)&(m>1)else[-1])", "M, K = map(int, input().split())\n\nif K>=(2**M):\n    print(-1)\nelif M==0:\n    if K==0:\n        print(0, 0)\n    else:\n        print(-1)\nelif M==1:\n    if K==0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\nelse:\n    b = [str(i) for i in range(2**M) if not i==K]\n    c = [str(i) for i in range(2**M-1, -1, -1) if not i==K]\n    ans = b+[str(K)]+c+[str(K)]\n    print(' '.join(ans))", "import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\nfrom itertools import accumulate\nfrom itertools import permutations\nfrom itertools import combinations\nfrom collections import defaultdict\nfrom collections import Counter\nimport fractions\nimport math\nfrom collections import deque\nfrom bisect import bisect_left\nfrom bisect import insort_left\nimport itertools\nfrom heapq import heapify\nfrom heapq import heappop\nfrom heapq import heappush\nimport heapq\nimport numpy as np\nINF = float(\"inf\")\n#d = defaultdict(int)\n#d = defaultdict(list)\n#N = int(input())\n#A = list(map(int,input().split()))\n#S = list(input())\n#S.remove(\"\\n\")\n#N,M = map(int,input().split())\n#S,T = map(str,input().split())\n#A = [int(input()) for _ in range(N)]\n#S = [input() for _ in range(N)]\n#A = [list(map(int,input().split())) for _ in range(N)]\nM,K = map(int,input().split())\nif M == 1:\n    if K == 0:\n        ans = [0,0,1,1]\n        print(*ans)\n    else:\n        print(-1)\nelse:\n    if K > 2**M - 1 :\n        print(-1)\n    else:\n        if K == 0:\n            ans = []\n            for i in range(2**M):\n                ans.append(i)\n                ans.append(i)\n            print(*ans)\n        else:\n            ans = deque([K])\n            for i in range(2**M):\n                if i == K:\n                    continue\n                ans.append(i)\n                ans.appendleft(i)\n            ans.append(K)\n            print(*ans)", "#!python3\n\ndef LI():\n    return list(map(int, input().split()))\n\n# input\nM, K = LI()\n\n\ndef solve():\n    n = 2 ** M\n    l = [i for i in range(n) if i != K]\n    ret = l + [K] + l[::-1] + [K]\n    return ret\n\n\ndef main():\n    if K >= 2 ** M:\n        ans = [-1]\n    elif M == 1:\n        if K == 0:\n            ans = [0, 0, 1, 1]\n        else:\n            ans = [-1]\n    else:\n        ans = solve()\n\n    print((*ans))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*(x+x[::-1])*(k<1)or([k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1])*(k<1<<m>2)or[-1])", "import sys\nM,K=[int(i) for i in input().split()]\n#M,K=1,0\nif K>=2**M:\n    print(-1)\n    return\n    \nif M==1:\n    if K==0:\n        print(*[0,0,1,1])\n        return\n    else:\n        print(-1)\n        return\nL=[]\nl=[int(i) for i in range(2**M) if i !=K]\nL.extend(l)\nL.append(K)\nL.extend(l[::-1])\nL.append(K)\n\nprint(*L)", "m,k = map(int,input().split())\nif m*k == 1:\n  print(-1)\n  return\n  \nif k == 0:\n  ans = []\n  for i in range(2**m):\n    ans.append(i)\n    ans.append(i)\n  print(*ans)\n  return\n  \nif 2**m <= k:\n  print(-1)\nelse:\n  ans = [k]\n  chk = list(range(2**m))\n  chk.remove(k)\n  ans = ans+chk+[k]+chk[::-1]\n  print(' '.join(map(str,ans)))", "M, K = map(int, input().split())\n\nif M == 0:\n\tif K == 0:\n\t\tprint(0, 0)\n\telse:\n\t\tprint(-1)\n\treturn\n\nif M == 1:\n\tif K == 0:\n\t\tprint(0, 0, 1, 1)\n\telse:\n\t\tprint(-1)\n\treturn\n\nN = 2 ** M\nif N <= K:\n\tprint(-1)\n\treturn\n\nans = []\nans.append(K)\n\nfor i in range(N):\n\tif i == K:\n\t\tcontinue\n\tans.append(i)\n\nans.append(K)\n\nfor i in range(N-1, -1, -1):\n\tif i == K:\n\t\tcontinue\n\tans.append(i)\n\nfor i in ans:\n\tprint(i, end=' ')", "m,k=map(int,input().split())\nif 1<<m<=k:print(-1);return()\nif m==1:print(*[-1]if k else [0,0,1,1]);return\nl=[i for i in range(1<<m)if i!=k]\nprint(*(l+[k]+l[::-1]+[k]))", "# #!/usr/bin/env python3\n# # -*- coding: utf-8 -*-\n# # \u554f\u984c\uff1ahttps://atcoder.jp/contests/abc126/tasks/abc126_f\n# # \u89e3\u8aac\u52d5\u753b\u3092\u898b\u306a\u304c\u3089\u5b9f\u88c5\n\nimport sys\n\nm, k = map(int, input().strip().split())\nmax_num = 2**m\nif k >= max_num:\n    print(-1)\n    return\n\nif m == 0:\n    print('0 0')\n    return\n\nif m == 1:\n    if k == 0:\n        print('0 0 1 1')\n    else:\n        print('-1')\n    return\n\nres = []\nfor i in range(max_num):\n    if i == k:\n        continue\n    res.append(i)\nres.append(k)\nfor i in range(max_num):\n    j = max_num - i - 1\n    if j == k:\n        continue\n    res.append(j)\nres.append(k)\nfor i in range(2**(m+1)):\n    print(res[i], end=' ')\n", "M, K = list(map(int, input().split()))\n\nif K >= 2**M:\n    print((-1))\nelif M == 0:\n    if K == 0:\n        print((0,0))\n    else:\n        print((-1))\nelif M == 1:\n    if K >= 1:\n        print((-1))\n    else:\n        print((0,0,1,1))\nelse:\n    li = [i for i in range(2**M) if i != K]\n    ans = li + [K] + list(reversed(li)) + [K]\n    print((*ans))\n", "m,k = map(int, input().split())\nif k >= 2 ** m:\n  print(-1)\n  return\nif m == 1:\n  if k == 0:\n    print(0,0,1,1)\n  if k == 1:\n    print(-1)\n  return\nbase = [i for i in range(2**m) if i != k]\nans = base + [k] + base[::-1] + [k]\nprint(*ans)", "def main():\n    M, K = list(map(int, input().split()))\n    if M == 1:\n        if K == 0:\n            print('0 0 1 1')\n            return\n        if K == 1:\n            print('-1')\n            return\n    if (2**M) - 1 < K:\n        print('-1')\n        return\n    l = [i for i in range(K)] + [i for i in range(K+1, (2**M))] + [K] + [i for i in reversed(list(range(K+1, (2**M))))] + [i for i in reversed(list(range(K)))] + [K]\n    print((' '.join(str(i) for i in l)))\nmain()\n", "# F - XOR Matching\nfrom collections import deque\n\nm, k = map(int, input().split())\n\n# k>=2^m\u306e\u6642\u306f\u6210\u7acb\u3057\u306a\u3044\nif k>=pow(2,m):\n    print(-1)\n\n# m=0\u306e\u6642\nelif m==0:\n    print(0, 0)\n\n# m=1\u306e\u6642\nelif m==1:\n    if k==0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\n\n# m>=2\u306e\u6642\nelse:\n    ans = deque()\n    ans.append(k)\n    for i in range(pow(2,m)):\n        if i!=k:\n            ans.append(i)\n            ans.appendleft(i)\n    ans.append(k)\n    print(' '.join(map(str, ans)))", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef debug(L, k):\n    n = len(L)\n    used = set()\n    for i in range(n):\n        if L[i] in used:\n            continue\n        used.add(L[i])\n        t = L[i]\n        for j in range(i + 1, n):\n            t ^= L[j]\n            if L[i] == L[j]:\n                break\n        if t != k:\n            return False\n    return True\n\n\ndef resolve():\n    m, k = list(map(int, input().split()))\n\n    MAX = pow(2, m)\n    if MAX <= k or (m == 1 and k == 1):\n        print((-1))\n        return\n\n    if m == 1 and k == 0:\n        print(\"0 0 1 1\")\n        return\n\n    res = []\n    for i in range(MAX):\n        if i == k:\n            continue\n        res.append(i)\n    res.append(k)\n    for i in reversed(list(range(MAX))):\n        if i == k:\n            continue\n        res.append(i)\n    res.append(k)\n    print((*res))\n    # print(debug(res, k))\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "m, k = list(map(int, input().split()))\nif m==1 and k==0:\n    print((0,0,1,1))\n    return\nif m==k==1:\n    print((-1))\n    return\n\nif 2**m<=k:\n    print((-1))\n    return\nans = [k]\nfor i in range(2**m):\n    if i != k:\n        ans.append(i)\nans.append(k)\nfor i in reversed(list(range(2**m))):\n    if i != k:\n        ans.append(i)\nprint((*ans))\n", "M,K= list(map(int,input().split()))\n\nif K >= 2**M:\n    print((-1))\n    return\n\nif M == 0:\n    print(\"0 0\")\n    return\n\nif M == 1:\n    if K == 0:\n        print(\"0 0 1 1\")\n    if K == 1:\n        print((-1))\n    return\n\nleft = [i for i in range(2**M) if not i == K]\n\nans = left + [K] + left[::-1] + [K]\n\nprint((*ans))\n\n\n", "M,K = map(int, input().split())\nif M==1:\n  if K==0:\n    print(0,0,1,1)\n  else:\n    print(-1)\nelif K>=2**M:\n  print(-1)\nelse:\n  ls = list(range(2**M))\n  ls.remove(K)\n  ans = [K]+ls+[K]+ls[::-1]\n  print(' '.join(map(str,ans)))", "def test(m):\n    t = [i for i in range(2**m)]\n    for i in range(2**m):\n        t.append(i)\n    t.sort()\n    st = set()\n    bt = set()\n    from itertools import permutations\n    for v in permutations(t):\n        taget = v[0]\n        x = 0\n        idx = 1\n        while idx < len(v) and v[idx] != taget:\n            x = x ^ v[idx]\n            idx += 1\n        if x in st or x in bt:\n            continue\n        f = True\n        for i in range(1, len(v)):\n            g = False\n            y = 0\n            idx = i+1\n            while idx < len(v):\n                if v[i] == v[idx]:\n                    g = True\n                    break\n                y = y ^ v[idx]\n                idx += 1\n            if g:\n                if y != x:\n                    f = False\n                    break\n        if f:\n            st.add(x)\n            print(x, v)\n\ndef main():\n    m, k = map(int, input().split())\n#    test(m)\n    x = 0\n    for i in range(2**m):\n        if i == k:\n            continue\n        x ^= i\n    if k == 0:\n        for i in range(2**m):\n            print(i, i, end=\" \")\n    elif x == k:\n        for i in range(2**m):\n            if i == k:\n                continue\n            print(i, end=\" \")\n        print(k, end=\" \")\n        for i in reversed(range(2**m)):\n            if i == k:\n                continue\n            print(i, end=\" \")\n        print(k)\n    else:\n        print(-1)\n\ndef __starting_point():\n    main()\n__starting_point()", "m, k = list(map(int, input().split()))\n\nif k >= 2**m:\n    print((-1))\n    return\n\nif m == 0:\n    print((0, 0))\n    return\nif m == 1:\n    if k == 0:\n        print((0, 0, 1, 1))\n        return\n    else:\n        print((-1))\n        return\n\nA = [k]\nfor i in range(2**m):\n    if i == k:\n        continue\n    A.append(i)\nA.append(k)\nfor i in range(2**m - 1, -1, -1):\n    if i == k:\n        continue\n    A.append(i)\n\nprint((*A))\n", "import math\nimport sys\nimport numpy as np\nsys.setrecursionlimit(10 ** 7)\n\ndef int_input():\n    return list(map(int, input().split()))\n\nm, k = int_input()\nif k == 0:\n    l = []\n    for i in range(2 ** m):\n        l.append(i)\n    m = l[:]\n    m.reverse()\n    ans = m + l\n    print((*ans))\nelse:\n    v = 0\n    l = []\n    for i in range(2 ** m):\n        if i != k:\n            l.append(i)\n            v ^= i\n    m = l[:]\n    m.reverse()\n    ans = m + [k] + l + [k]\n    if v == k: print((*ans))\n    else: print((-1))\n\n", "m, k = map(int, input().split())\n\nif m == 0:\n    if k == 0:\n        print(0, 0)\n    else:\n        print(-1)\n\nelif m == 1:\n    if k == 0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)\n\nelse:\n    if k >= 2 ** m:\n        print(-1)\n        return\n\n    res = []\n    for i in range(2 ** m):\n        if i == k:\n            continue\n        res.append(i)\n\n    ans = [k] + res + [k] + res[::-1]\n    print(*ans)", "def main():\n  M,K=map(int,input().split())\n  if K == 0:\n    ans = []\n    for i in range(2**M):\n        ans.extend([i, i])\n    print(*ans)\n    return 0\n  if 2**M <= K:\n    print(-1)\n    return 0\n  if M==1:\n    if K==1:\n      print(-1)\n      return 0\n\n  ans=[str(x) for x in range(2**M) if x!=K]\n  ans_b=[str(x) for x in range(2**M-1,-1,-1) if x!=K]\n  print(str(K)+\" \"+\" \".join(ans)+\" \"+str(K)+\" \"+\" \".join(ans_b))\nmain()", "m,k=map(int,input().split())\nx=[*range(1<<m)]\nprint(*(x+x[::-1])*(k<1)or([k]+x[k+1:]+x[:k]+[k]+x[k-1::-1]+x[:k:-1])*(k<2**m)*(m>1)or[-1])", "import bisect\nimport sys\n\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\n\n\nclass v:\n    def __init__(self, f):\n        self.f = f\n        self.v = None\n\n    def __str__(self):\n        return str(self.v)\n\n    def ud(self, n):\n        if self.v is None:\n            self.v = n\n        else:\n            self.v = self.f(self.v, n)\n\n\ndef read_values():\n    return list(map(int, input().split()))\n\n\ndef read_list():\n    return list(read_values())\n\n\ndef main():\n    M, K = read_values()\n    if K >= 2 ** M:\n        print((-1))\n        return\n\n    if M == 1:\n        print((\"0 0 1 1\" if K == 0 else -1))\n        return\n\n    X = [str(i) for i in range(2 ** M) if i != K]\n    res = X + [str(K)] + X[::-1] + [str(K)]\n    print((\" \".join(res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "M, K = list(map(int, input().split()))\n\nif K == 0:\n    print((*(list(range(2 ** M)) + list(range(2 ** M - 1, -1, -1)))))\nelse:\n    if M <= 1:\n        print((-1))\n    elif K.bit_length() > M:\n        print((-1))\n    else:\n        index = 0\n        used = [False] * (2 ** M)\n        ans = []\n        for _ in range(2 ** (M-2)):\n            while index < 2 ** M and used[index]:\n                index += 1\n            A = index\n            C = index ^ K\n            used[index] = True\n            used[index^K] = True\n            while index < 2 ** M and used[index]:\n                index += 1\n            B = index\n            D = index ^ K\n            used[index] = True\n            used[index^K] = True\n            ans += [A, C, B, D, C, A, D, B]\n        print((*ans))\n", "M,K = map(int,input().split())\n\nif M == 0:\n    if K == 0:\n        print(0,0)\n    else:\n        print(-1)\nelif M == 1:\n    if K == 0:\n        print(0,0,1,1)\n    else:\n        print(-1)\nelse:\n    if K == 0:\n        A = [i//2 for i in range(2**(M+1))]\n        print(*A)\n    elif 0 < K < 2**M:\n        A = []\n        for i in range(K):\n            A.append(i)\n        for i in range(2**M-K-1):\n            A.append(2**M-i-1)\n        A.append(0)\n        for i in range(2**M-K):\n            A.append(K+i)\n        for i in range(K-1):\n            A.append(K-i-1)\n        A.append(K)\n        print(*A)\n    else:\n        print(-1)", "import sys\ninput = sys.stdin.buffer.readline\n\ndef main():\n    M,K = map(int,input().split())\n    if M == 0:\n        if K == 0:\n            print(0,0)\n        else:\n            print(-1)\n    elif M == 1:\n        if K == 0:\n            print(0,0,1,1)\n        else:\n            print(-1)\n    else:\n        if 2**M <= K:\n            print(-1)\n        else:\n            use = [i for i in range(2**M)]\n            use.pop(K)\n            _use = list(reversed(use))\n            ans = use+[K]+_use+[K]\n            print(*ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "m, k = map(int, input().split())\nif pow(2, m) <= k:\n    print(-1)\nelif not m == 1:\n    ans = [k] * pow(2, m + 1)\n    i = 0\n    for j in range(pow(2, m) - 1):\n        if i == k:\n            i += 1\n        ans[j] = i\n        ans[pow(2, m + 1) - 2 - j] = i\n        i += 1\n    print(*ans)\nelse:\n    if k == 0:\n        print(0, 0, 1, 1)\n    else:\n        print(-1)", "m,k = map(int,input().split())\nif m == 1:\n    if k == 0:\n        print(0,0,1,1)\n    else:\n        print(-1)\nelif 2**m <= k:\n    print(-1)\nelse:\n    remain = set(range(2**m))\n    use = set()\n    count = 0\n    while k:\n        if k & 1:\n            remain.remove(2**count)\n            use.add(2**count)\n        k >>= 1\n        count += 1\n    ans = []\n    remain = list(remain)\n    use = list(use)\n    for i in remain:\n        ans.append(str(i))\n    for i in use:\n        ans.append(str(i))\n    for i in remain[::-1]:\n        ans.append(str(i))\n    for i in use[::-1]:\n        ans.append(str(i))\n    print(\" \".join(ans))", "m, k = map(int, input().split())\nv = []\nif k == 0:\n  for i in range(0, 2**m):\n    v.append(i)\n    v.append(i)\nelif k < 2**m and m > 1:\n  for i in range(0, 2**m):\n    if i != k:\n      v.append(i)\n  v.append(k)\n  for i in range(2**m-1, -1, -1):\n    if i != k:\n      v.append(i)\n  v.append(k)\nif len(v) == 0:\n  print(-1)\nelse:\n  for i in range(0, len(v)):\n    print(v[i])\n    if i == len(v)-1:\n      print(\"\\n\")\n    else:\n      print(\" \")", "m,k=map(int,input().split());x=list(range(2**m));print(*x[::-1]+x if k<1 else x[:k:-1]+x[k-1::-1]+[k]+x[:k]+x[k+1:]+[k]if(k<2**m)&(m>1)else[-1])", "#!/usr/bin/env python3\nimport sys\n\n\ndef solve(M: int, K: int):\n    if K >= (1 << M):\n        print(-1)\n        return\n    if M == 1:\n        if K == 0:\n            print(0, 0, 1, 1)\n        else:\n            print(-1)\n        return\n    for i in range(1 << M):\n        if i != K:\n            print(i, end=\" \")\n    print(K, end=\" \")\n    for i in reversed(range(1 << M)):\n        if i != K:\n            print(i, end=\" \")\n    print(K)\n\n\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    M = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    solve(M, K)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# #!/usr/bin/env python3\n# # -*- coding: utf-8 -*-\n# # \u554f\u984c\uff1ahttps://atcoder.jp/contests/abc126/tasks/abc126_f\n# # \u89e3\u8aac\u52d5\u753b\u3092\u898b\u306a\u304c\u3089\u5b9f\u88c5\n\nimport sys\n\nm, k = map(int, input().strip().split())\nmax_num = 2**m\nif k >= max_num:\n    print(-1)\n    return\n\n# if m == 0:\n#     print(0)\n#     return\n\nif m == 1:\n    if k == 0:\n        print('0 0 1 1')\n    else:\n        print('-1')\n    return\n\nres = []\nfor i in range(max_num):\n    if i == k:\n        continue\n    res.append(i)\nres.append(k)\nfor i in range(max_num):\n    j = max_num - i - 1\n    if j == k:\n        continue\n    res.append(j)\nres.append(k)\nfor i in range(2**(m+1)):\n    print(res[i], end=' ')\n", "m,k=map(int,input().split())\nif k<=2**m-1 and m>1:\n    lists=[]\n    for i in range(2**m-1,-1,-1):\n        if i!=k:\n            lists.append(i)\n    lists.append(k)\n    for i in range(2**m):\n        if i!=k:\n            lists.append(i)\n    lists.append(k)\n    print(*lists)\nelif k<=2**m-1 and m==0:\n    print(*[0,0])\n    \nelif k<=2**m-1 and m==1:\n    if k==0:\n        print(*[0,0,1,1])\n    elif k==1:\n        print(-1)\n\nelse:\n    print(-1)", "m,k = map(int, input().split())\n\nif k >= 2**m:\n    print(-1)\n\nelif m == 1:\n    if k == 0:\n        print(0, 0, 1, 1)\n\n    else:\n        print(-1)\n\nelse:\n    a = [i for i in range(2**m) if i != k]\n    ans = [k] + a + [k] + a[::-1]\n    print(*ans)"]