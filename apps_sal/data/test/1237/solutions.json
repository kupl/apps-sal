["n, up = map(int, input().split())\nres = 0\nfor i in range(n):\n    fl, t = map(int, input().split())\n    res = max(res, max(t, up - fl) + fl)\nprint(res)", "3\n\nn, s = list(map(int, input().split()))\n\nlast = [0 for i in range(s + 1)]\n\nfor i in range(n):\n    f, t = list(map(int, input().split()))\n    last[f] = max(last[f], t)\n\nans = -1\nfor i in range(s, -1, -1):\n    ans += 1\n    ans = max(ans, last[i])\n\nprint(ans)\n", "read = lambda: list(map(int, input().split()))\nn, s = read()\nans = s\nfor i in range(n):\n    f, t = read()\n    ans = max(ans, f + t)\nprint(ans)\n", "import math\n\n\nn, s = tuple(map(int, input().split()))\nfloors = [0 for i in range(s + 1)]\n\nfor i in range(n):\n    floor, time = tuple(map(int, input().split()))\n    floors[floor] = max(floors[floor], time)\n\nres = s\nfor i in range(s + 1):\n    res = max(res, floors[i] + i)\n\nprint(res)\n    \n", "n, s = list(map(int, input().split()))\nmaxi = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    maxi = max(maxi, max(b - (s - a), 0))\nprint(maxi + s)\n", "n, s = list(map(int, input().split()))\nL = [list(map(int, input().split())) for _ in range(n)]\n\nT = [s-k for k in range(s+1)]\nfor A in L:\n    T[A[0]] = max([T[A[0]], A[1]])\nr = 0\nfor k in range(s,0,-1):\n    r = max([r,T[k]])\n    r+=1\nprint(r)\n", "k = []\na, b = list(map(int, input().split(' ')))\nfor i in range(a):\n    x, y = list(map(int, input().split(' ')))\n    k.append([x,y])\nk.append([0, -1])\nk.sort()\nk.reverse()\n\ncurr = b\nt = 0\nfor i in k:\n    d = curr - i[0]\n    curr = i[0]\n    t = max(i[1], t+d)\nprint(t)\n", "#!/bin/python\nimport collections\nimport random\nimport sys\ntry:\n    from tqdm import tqdm\nexcept:\n    def tqdm(iterable):\n        return iterable\n\n\n__taskname = ''\nif __taskname:\n    sys.stdin = open(__taskname + '.in')\n    sys.stdout = open(__taskname + '.out', 'w')\n\nn, s = list(map(int, input().split()))\ntime = 0\nfor f, t in sorted(list(map(int, input().split())) for x in range(n)):\n    time = max(time + s - f, t)\n    s = f\nprint(time + s)\n", "#!/usr/bin/env python3\n\nN, S = list(map(int, input().split()))\n\nstuff = [list(map(int, input().split())) for i in range(N)]\nanswer = S\nfor a, k in stuff:\n    answer = max(answer, a + k)\n\nprint(answer)\n", "s, n = [int(i) for i in input().split()]\nout = 0\nfor j in range(s):\n\ta, b = [int(i) for i in input().split()]\n\tout+=(n-a)\n\tout=max(out, b)\n\tn = a\nout +=n\nprint(out)\n\t\n", "#!/usr/bin/env python3\n\n# N = number of passengers\n# S = level of top floor\nN, S = list(map(int, input().split()))\n\narrivals = [0 for i in range(S+1)]\nfor i in range(N):\n    # f = floor\n    # t = time of arrival\n    f, t = list(map(int, input().split()))\n    arrivals[f] = max(arrivals[f], t)\n\nfor i in range(S, 0, -1):\n    arrivals[i - 1] = max(arrivals[i - 1], arrivals[i] + 1)\nprint(arrivals[0])\n", "n,s=map(int, input().split())\nd=[]\nfor i in range(n):\n    a,b=map(int, input().split())\n    d.append((a,b))\nd.sort(reverse=True)\nans=0\ncurr=s\ni=0\nwhile i<n:\n    ans+=(curr-d[i][0])\n    curr=d[i][0]\n    if d[i][1]>ans:\n        ans=d[i][1]\n    i+=1\nprint(ans+d[n-1][0])", "n, s = map(int, input().split())\na = [0] * (s + 1)\nfor i in range(n):\n    x, y = map(int, input().split())\n    a[x] = max(a[x], y)\nans = -1\nfor i in range(s, 0, -1):\n    ans = max(ans + 1, a[i])\nprint(ans + 1)", "n, s = list(map(int, input().split(\" \")))\n\nl=[0]*(s+1)\n\nfor i in range (n):\n    f, t = list(map(int, input().split(\" \")))\n    if l[f]<t:\n        l[f]=t\n\ncurrent=-1\n\nfor i in range (s, -1, -1):\n    current += 1\n    if current < l[i]:\n        current = l[i]\n\nprint(current)\n", "def solve():\n    N, S = list(map(int, input().split()))\n\n    PS = []\n    for i in range(N):\n        f, t = list(map(int, input().split()))\n        PS.append((f, t))\n\n    PS.sort(key=lambda p: -p[0])\n\n    ans = 0\n    for f, t in PS:\n        ans += S - f\n        S = f\n        if ans < t:\n            ans = t\n\n    if S != 0:\n        ans += S\n\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n,s=(list(map(int,input().split())))\ncurtime=0\na=[]\nfor _ in range(n):\n    a.append(tuple(map(int,input().split())))\na.sort()\na.reverse()\nfor i in a:\n    curtime+=max(s-i[0],i[1]-curtime)\n    s=i[0]\nprint(curtime+a[-1][0])\n", "n, s = list(map(int, input().split()))\ncf, ct = s, 0\nfor f, t in sorted((list(map(int, input().split())) for i in range(n)), reverse=True):\n    ct = max(ct + cf - f, t)\n    cf = f\nprint(ct + cf)\n", "N, top = list(map(int, input().split()))\npa = dict()\nfor i in range(N):\n    f, t = list(map(int, input().split()))\n    pa[f] = max(pa.get(f, 0), t)\nnow, time = top, 0\nfor f, t in sorted(list(pa.items()), reverse=True):\n    time += now - f\n    now = f\n    time = max(t, time)\nelse:\n    time += now\nprint(time)\n    \n", "n, s = map(int, input().split())\nmaxSmt = 0\nfor i in range(n):\n    f, t = map(int, input().split())\n    maxSmt = max(maxSmt, max(t - (s - f), 0))\nprint(s + maxSmt)", "n, s = map(int, input().split())\n\nflats = {}\n\nfor i in range(n):\n    f, t = map(int, input().split())\n    if f not in flats:\n        flats[f] = 0\n    flats[f] = max(flats[f], t)\n\ncurr_time = 0\nfor i in range(s, -1, -1):\n    if i in flats:\n        if curr_time < flats[i]:\n            curr_time = flats[i]\n    curr_time += 1\n\nprint(curr_time - 1)", "n, s = list(map(int, input().split()))\na, c = [0] * 1010, s\nfor _ in range(n):\n    y, x = list(map(int, input().split()))\n    c    = max(c, y + x)\nprint(c)\n", "class Event:\n    def __init__(self, floor, time):\n        self.floor, self.time = floor, time\n\nn, floor = list(map(int, input().split()))\nevents = [ Event(*list(map(int, input().split()))) for i in range(n) ]\nevents.sort(key=lambda event: (-event.floor, event.time))\n\ntime = 0\nfor event in events:\n    time = max(event.time, time + floor - event.floor)\n    floor = event.floor\ntime += floor\nprint(time)\n", "__author__ = 'Utena'\nimport operator\nn,s=map(int,input().split())\np=[list(map(int,input().split()))for i in range(n)]\np=sorted(p,key=operator.itemgetter(0,1),reverse=0)\nt=[]\nfor j in range(n):\n    t.append(p[j][0]+p[j][1])\nprint(max((max(t)),s))", "n, s = list(map(int, input().split(' ')[:2]))\n\nres = 0\n\nfor i in range(n):\n    f, t = list(map(int, input().split(' ')[:2]))\n    time = max(t, s-f) + f\n    res = max(res, time)\n\nprint(res)\n", "import sys\nif False:\n\tinp = open('A.txt', 'r')\nelse:\n\tinp = sys.stdin\n\nn, s = list(map(int, inp.readline().split()))\n\nans = s\nfor i in range(n):\n\tfloor, time = list(map(int, inp.readline().split()))\n\tif s-floor < time:\n\t\tans = max(ans, time + floor)\n\telse:\n\t\tpass\nprint(ans)\n\n"]