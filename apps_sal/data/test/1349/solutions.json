["t = int(input())\nfor tc in range(t):\n    n,k=list(map(int, input().split()))\n    tap = list(map(int, input().split()))\n    sol=0\n    for i in range(1, n+1):\n        d=1000000\n        for j in tap:\n            d=min(d, abs(j-i)+1)\n        sol=max(sol, d)\n    print(sol)\n", "t = int(input())\n\nfor _ in range(t):\n    n, k = [int(v) for v in input().split()]\n    x = [int(v) - 1 for v in input().split()]\n\n    ans = 0\n    covered = [False] * n\n    while not all(covered):\n        for xi in x:\n            for pos in range(max(0, xi - ans), min(n - 1, xi + ans) + 1):\n                covered[pos] = True\n        ans += 1\n\n    print(ans)\n", "\n\nt = int(input())\n\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    taps = [int(x) for x in input().split()]\n    result = 0\n    for i in range(1, n + 1):\n        best = n + 1\n        for x in taps:\n            best = min([best, abs(x - i)])\n        result = max([result, best])\n    print(result + 1)\n", "def main():\n    t = int(input())\n    for _ in range(t):\n        n, k = [int(x) for x in input().split()]\n        x = [int(x) for x in input().split()]\n        \n        mm = x[0] - 1 + 1\n        for i in range(1, k):\n            mm = max(mm, 1+ (x[i] - x[i - 1])//2)\n        mm=max(mm, n - x[-1] +1 )\n        print(mm)\n\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nINF = 548\nfor z in range(t):\n    n, k = map(int, input().split())\n    a = [INF] * n\n    c = [int(x) for x in input().split()]\n    for i in c:\n        a[i - 1] = 0\n    last = -INF\n    for i in range(n):\n        if a[i] == 0:\n            last = i\n        else:\n            a[i] = min(a[i], i - last)\n    last = INF\n    for i in range(n - 1, -1, -1):\n        if a[i] == 0:\n            last = i\n        else:\n            a[i] = min(a[i], last - i)\n    print(max(a) + 1)", "T = int(input())\nfor _ in range(T):\n    n,k = list(map(int,input().split()))\n    c = list(map(int,input().split()))\n    a = []\n    for i in c: a.append(i-1)\n    b = [-1]*n\n    for i in range(n):\n        m = 300\n        for j in a:\n            m = min(abs(i-j)+1,m)\n        b[i] = m\n    print(max(b))\n", "t = int(input())\nfor i in range(t):\n    n,m = map(int, input().split())\n    a = set((map(int, input().split())))\n    ans = [100000 for i in range(n)]\n    l = -1\n    for i in range(n):\n        if i+1 in a:\n            l=0\n        if l != -1:\n            l+=1\n        if l != -1:\n            ans[i] = min(ans[i], l)\n    l = -1\n    for i in range(n-1,-1,-1):\n        if i+1 in a:\n            l=0\n        if l != -1:\n            l+=1\n        if l != -1:\n            ans[i] = min(ans[i], l)\n    print(max(ans))", "t = list(map(int, input().strip().split()))[0]\nfor i in range(t):\n    n, p = list(map(int, input().strip().split()))\n    dp = dict()\n    for i in range(1, n + 1):\n        dp[i] = 1\n    k = list(map(int, input().strip().split()))\n    plus = []\n    minus = []\n    for j in k:\n        plus.append(j)\n        minus.append(j)\n    second = 0\n    while len(dp) > 0:\n        for i in plus:\n            if i + second in dp:\n                dp.pop(i + second)\n        for i in minus:\n            if i - second in dp:\n                dp.pop(i - second)\n        second += 1\n    print(second)", "import sys\nimport math\n\nt=int(input())\nfor i in range(t):\n  n,k=list(map(int,input().split()))\n  x=list(map(int,input().split()))\n  h=[0 for i in range(n)]\n  tm=0\n  while 1:\n    for j in x:\n      if j-tm-1>=0:\n        h[j-tm-1]=1\n      if j+tm-1<n:\n        h[j-1+tm]=1\n    if sum(h)==n:\n      print(tm+1)\n      break\n    tm+=1\n    \n", "def true_array(b):\n\tfor i in range(len(b)):\n\t\tif b[i]==0:\n\t\t\treturn 0\n\treturn 1\nt=int(input())\nfor q in range(t):\n\tn,k=map(int,input().split())\n\ta=list(map(int,input().split()))\n\tb=[0 for i in range(n)]\n\tt=0\n\twhile true_array(b)!=1:\n\t\tfor m in a:\n\t\t\tfor i in range(max(m-t-1,0),min(m+t,n)):\n\t\t\t\tb[i]=1\n\t\tt+=1\n\tprint(t)", "import getpass\nimport sys\nimport math\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nfiles = True\n\nif getpass.getuser() == 'frohenk' and files:\n    sys.stdin = open(\"test.in\")\n\nt = ria()[0]\nfor kekas in range(t):\n    n, k = ria()\n    ar = ria()\n    maxi = max(ar[0], n - ar[len(ar) - 1] + 1)\n    for j in range(1, k):\n        maxi = max(maxi, 1 + math.floor((ar[j] - ar[j - 1]) / 2))\n    print(maxi)\n", "t = int(input())\n\nfor test in range(t):\n  n, k = list(map(int, input().split()))\n  poss = list(map(int, input().split()))\n  \n  res = max(poss[0], n - poss[-1] + 1)\n  for i in range(1, k):\n    res = max(res, (poss[i] - poss[i - 1] + 2) // 2)\n  print(res)\n", "# cook your dish here\n# from math import * \nfor _ in range(int(input().strip())):\n    n,k=map(int,input().split())\n    l=[int(x) for x in input().split()]\n    l.sort()\n    ans=max(l[0],n-l[-1]+1)\n    for i in range(1,k):\n        ans = max(((l[i]-l[i-1])//2)+1 , ans)\n    print(ans)", "read = lambda: list(map(int, input().split()))\nT = int(input())\nfor ____ in range(T):\n    r = 0\n    n, k = read()\n    a = [1] * n\n    b = list(read())\n    i = 0\n    while sum(a):\n        for _ in b:\n            _ -= 1\n            if _ - i >= 0:\n                a[_ - i] = 0\n            if _ + i < n:\n                a[_ + i] = 0\n        i += 1\n        r += 1\n    print(r)\n", "\ndef solve(n,X):\n\n  a = X[0]-1\n  b = n-X[-1]\n  c = max((X[i+1]-X[i] for i in range(len(X)-1)),default=0)//2\n\n  return max(a,b,c)+1\n\n\n\n\n\nT = int(input())\nfor _ in range(T):\n  n,k = map(int,input().split())\n  X = tuple(map(int,input().split()))\n  print(solve(n,X))", "import math\nt = int(input())\nfor i in range(t):\n    n, k = map(int, input().split())\n    x = list(map(int, input().split()))\n    mx = max(x[0], n - x[-1] + 1)\n    for i in range(1, k):\n        mx = max(math.floor((x[i] - x[i - 1]) / 2) + 1, mx)\n    print(mx)", "t = int(input())\n\nfor _ in range(t):\n    n, k = list(map(int, input().split()))\n    x = [int(x)-1 for x in input().split()]\n\n    b = [False] * n\n    tn = 0\n\n    while not all(b):\n        tn += 1\n        for i in x:\n            for j in range(max(0, i - (tn - 1)), min(i + (tn - 1) + 1, n)):\n                b[j] = True\n    print(tn)\n", "t = int(input())\nfor _ in range(t):\n    n, k = [int(i) for i in input().split()]\n    x = [int(i)-1 for i in input().split()]\n    boundary_maxdiff = max(x[0], n-1-x[-1])\n    maxdiff = max(x[i+1]-x[i] for i in range(len(x)-1)) if len(x) >= 2 else 0  # 0-0 1-0 2-1 3-1 4-2 5-2\n    maxdiff = maxdiff // 2\n    print(max(maxdiff, boundary_maxdiff) + 1)", "t = int(input())\nfor _ in range(t):\n\tn, k = map(int, input().split())\n\tx = list(map(int, input().split()))\n\td = []\n\tfor i in range(1, len(x)):\n\t\td.append((x[i] - x[i - 1]) // 2 + 1)\n\td.append(x[0])\n\td.append(n - x[-1] + 1)\n\tprint(max(d))", "t = int(input())\nfor i in range(t):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    cont = 0\n    r = 0\n    b = [0 for i in range(n)]\n    while cont < n:\n        r += 1\n        for i in a:\n            if b[max(0, i - r)] == 0:\n                cont += 1\n                b[max(0, i - r)] = 1\n            if b[min(n - 1, i + r - 2)] == 0:\n                cont += 1\n                b[min(n - 1, i + r - 2)] = 1\n    print(r)\n\n\n", "t = int(input())\nfor o in range(t):\n    n, k = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = a[0]\n    for i in range(1, k):\n        ans = max(ans, (a[i] - a[i - 1] + 2)//2)\n    ans = max(ans, n - a[k - 1] + 1)\n    print(ans)\n", "t = int(input())\nans = []\nfor i in range(t):\n    n, k = [int(i) for i in input().split()]\n    x = [int(i) for i in input().split()]\n    max_delta = 0\n    for j in range(k - 1):\n        delta = x[j + 1] - x[j]\n        if delta > max_delta:\n            max_delta = delta\n    t_ans = max(max_delta // 2 + 1, x[0], n - x[-1] + 1)\n    ans.append(t_ans)\n    \nfor a in ans:\n    print(a)", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return list(map(int, stdin.readline().split()))\n#lines = stdin.readlines()\n\n\nt = int(input())\n\nfor i in range(t):\n    n, k = rint()\n    x = []\n    x = list(rint())\n    ans = 0\n    ans = max(ans, x[0])\n    ans = max(ans, n-x[-1]+1)\n\n    if k < 1:\n        print(ans)\n        continue\n\n    for ii in range(0, k-1):\n        ans = max(ans, (x[ii+1]-x[ii])//2+1)\n    print(ans)\n\n\n", "t = int(input())\n\nfor _ in range(t):\n    n, _ = list(map(int, input().split()))\n    ks = list(map(int, input().split()))\n    s = set()\n    c = 0\n    while len(s) < n:\n        for k in ks:\n            if k - c > 0:\n                s.add(k-c)\n            if k + c <= n:\n                s.add(k+c)\n        c += 1\n    print(c)\n", "def true_array(b):\n\tfor i in range(len(b)):\n\t\tif b[i]==0:\n\t\t\treturn 0\n\treturn 1\nt1=int(input())\nfor q in range(t1):\n\tn,k=map(int,input().split())\n\ta=list(map(int,input().split()))\n\tb=[0 for i in range(n)]\n\tt=0\n\twhile true_array(b)!=1:\n\t\tfor m in a:\n\t\t\tfor i in range(max(m-t-1,0),min(m+t,n)):\n\t\t\t\tb[i]=1\n\t\tt+=1\n\tprint(t)"]