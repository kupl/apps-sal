["x=int(input())\ndef s(a):\n  r=0\n  while a>0:\n    r+=a%10\n    a//=10\n  return r\ndef d(a,b):\n  r=0\n  for i in range(6):\n    if a%10!=b%10:\n      r += 1\n    a//=10\n    b//=10\n  return r\nc=6\nfor i in range(1000000):\n  if s(i%1000)==s(i//1000):\n    c=min(c,d(x,i))\nprint(c)\n", "s = input()\n\nans = 6\n\nfor i in range (0, 10):\n    for j in range (0, 10):\n        for k in range(0, 10):\n            for f in range (0, 10):\n                for f1 in range(0, 10):\n                    for f2 in range(0, 10):\n                        if(i + j + k == f + f1 + f2):\n                            cnt = 0\n                            if i != (ord(s[0]) - ord('0')):\n                                cnt = cnt + 1\n                            if j != (ord(s[1]) - ord('0')):\n                                cnt = cnt + 1\n                            if k != (ord(s[2]) - ord('0')):\n                                cnt = cnt + 1\n                            if f != (ord(s[3]) - ord('0')):\n                                cnt = cnt + 1\n                            if f1 != (ord(s[4]) - ord('0')):\n                                cnt = cnt + 1\n                            if f2 != (ord(s[5]) - ord('0')):\n                                cnt = cnt + 1\n                        ans = min(ans, cnt)\nprint(ans)", "def f(x):\n\treturn sum(x[:3]) == sum(x[3:])\n\ndef main():\n\ta = [int(i) for i in input()]\n\tif f(a):\n\t\treturn 0\n\tfor i in range(6):\n\t\tfor j in range(10):\n\t\t\tb = a[:]\n\t\t\tb[i] = j\n\t\t\tif f(b):\n\t\t\t\treturn 1\n\tfor i in range(6):\n\t\tfor j in range(i):\n\t\t\tfor k in range(10):\n\t\t\t\tfor l in range(10):\n\t\t\t\t\tb = a[:]\n\t\t\t\t\tb[i] = k\n\t\t\t\t\tb[j] = l\n\t\t\t\t\tif f(b):\n\t\t\t\t\t\treturn 2\n\treturn 3\n\nprint(main())\n\n", "s = input()\nl = []\nfor d in s[:3]:\n  l.append(int(d))\nu = []\nfor d in s[3:]:\n  u.append(int(d))\n  \nif sum(l) == sum(u):\n  print(0)\nelse:\n  if sum(l) > sum(u):\n    l, u = u, l\n  \n  diffs = sorted(list([9-x for x in l]) + u)[::-1]\n  #print(diffs)\n  for i in range(1,7):\n    if sum(diffs[:i]) >= sum(u) - sum(l):\n      print(i)\n      break\n  \n", "s = input()\n\nl1 = [int(s[i]) for i in range(3)]\nl2 = [int(s[3 + i]) for i in range(3)]\n\ns1 = sum(l1)\ns2 = sum(l2)\n\nif (s1 < s2):\n\tl1, l2 = l2, l1\n\ts1, s2 = s2, s1\n\nl1.sort(reverse = True)\nl2.sort()\n\nans = 0\n\np1 = 0\np2 = 0\n\nwhile s1 > s2:\n\tif l1[p1] > 9 - l2[p2]:\n\t\ts1 -= l1[p1]\n\t\tp1 += 1\n\telse:\n\t\ts2 += 9 - l2[p2]\n\t\tp2 += 1\n\tans += 1 \n\nprint(ans)", "from functools import reduce\ne = input()\n\nmi = 6\n\nfor i in range(1000000):\n    a = str(i).zfill(6)\n\n    s = ord((a)[0])+ ord((a)[1]) + ord((a)[2])\n    t = ord((a)[3])+ ord((a)[4]) + ord((a)[5])\n\n    if s == t:\n        l = sum(list([0 if x[0] == x[1] else 1 for x in zip(a, e)]))\n        mi = min(mi, l)\n\nprint(mi)\n", "s=input()\na=[0,0,0,0,0,0]\nt=[]\nans=3\nfor i in s:\n    t.append(ord(i)-ord('0'))\n\nfor a[0] in range(10):\n    for a[1] in range(10):\n        for a[2] in range(10):\n            for a[3] in range(10):\n                for a[4] in range(10):\n                    for a[5] in range(10):\n                        anss=6\n                        if a[0]+a[1]+a[2] == a[3]+a[4]+a[5]:\n                            for i in range(6):\n                                if a[i]==t[i]:\n                                    anss=anss-1\n                        if anss<ans:\n                            ans=anss\nprint(ans)\n", "s = input()\na = list(map(int, s[:3]))\nb = list(map(int, s[3:]))\nal = sum(a)\nbl = sum(b)\ndif = al - bl\ncnt = 0\nwhile dif < 0:\n    cnt += 1\n    if 9 - min(a) > max(b):\n        dif += min(-dif, 9 - min(a))\n        a[a.index(min(a))] = 9\n    else:\n        dif += min(-dif, max(b))\n        b[b.index(max(b))] = 0\n\nc = b[:]\nb = a[:]\na = c[:]\nwhile dif > 0:\n    cnt += 1\n    if 9 - min(a) > max(b):\n        dif -= min(dif, 9 - min(a))\n        a[a.index(min(a))] = 9\n    else:\n        dif -= min(dif, max(b))\n        b[b.index(max(b))] = 0\n\nprint(cnt)", "def comp(n, m):\n    rtn = 0\n    for i in range(6):\n        if n[i] != m[i]:\n            rtn += 1\n    return rtn\n\n\nn = list(map(int, list(input())))\nans = 6\nfor i in range(1000000):\n    m = []\n    for _ in range(6):\n        m.append(i % 10)\n        i //= 10\n    m = list(reversed(m))\n    if sum(m[:3]) == sum(m[3:]):\n        ans = min(ans, comp(n, m))\n\nprint(ans)\n\n", "import sys\n\ndef debug(*args, **kwargs):\n    print(*args, file=sys.stderr, **kwargs)\n\na = [int(ch) for ch in input()]\nassert(len(a) == 6)\nb1 = a[0:3]\nb2 = a[3:6]\nif sum(b1) > sum(b2):\n    b1, b2 = b2, b1\ndiff = sum(b2) - sum(b1)\n# debug(\"diff =\", diff)\n\ndeltas = sorted([9-x for x in b1 if x < 9] + [x for x in b2 if x > 0], reverse=True)\n# debug(\"deltas =\", deltas)\ncum_deltas = [0] + deltas[:]\n\nfor i in range(1, len(cum_deltas)):\n    cum_deltas[i] += cum_deltas[i-1]\nfor i, x in enumerate(cum_deltas):\n    if cum_deltas[i] >= diff:\n        break\n\n# debug(\"cum_deltas =\", cum_deltas)\nprint(i)\n", "digits = [int(x) for x in input()]\n\n\ndifference = sum(digits[0:3]) - sum(digits[3:])\n\nhelper = []\nif difference < 0:\n    helper = [9 - x for x in digits[:3]] + digits[3:]\nelse:\n    helper = digits[:3] + [9 - x for x in digits[3:]]\n\nhelper = sorted(helper)[::-1]\nn = 0\n\nsum_ = 0\nfor x in helper:\n    if sum_ >= abs(difference):\n        break\n\n    sum_ += x\n    n += 1\n\nprint(n)\n", "# IAWT\nS = input()\na = S[:3]\nb = S[3:]\n\ndef Sum(st):\n    n = 0\n    for x in st:\n        n += int(x)\n    return n\n\ndef g(s, t): # s < t\n    diff = int(t[0])+int(t[1])+int(t[2])-int(s[0])-int(s[1])-int(s[2])\n    ma = 9 - int(s[0])\n    c = 0\n    if 9 - int(s[1]) > ma:\n        c = 1\n        ma = 9 - int(s[c])\n    if 9 - int(s[2]) > ma:\n        c = 2\n        ma = 9 - int(s[c])\n    \n    mm = int(t[0])\n    c2 = 0\n    if int(t[1]) > mm:\n        mm = int(t[1])\n        c2 = 1\n    if int(t[2]) > mm:\n        mm = int(t[2])\n        \n        c2 = 2\n    if ma > mm:\n        C = str(int(s[c]) + min(diff, ma))\n        s = s[:c] + C + s[c+1:]\n    else:\n        C = str(int(t[c2]) - min(diff, mm))\n        t = t[:c2] + C + t[c2+1:]\n    return s, t\n\n\ndef f():\n    nonlocal a, b\n    if Sum(a) == Sum(b):\n        print(0)\n        return\n    if Sum(a) < Sum(b):\n        n = 0\n        while (Sum(a) != Sum(b)):\n            a, b = g(a, b)\n            n += 1\n        print(n)\n        return\n    n = 0\n    while (Sum(a) != Sum(b)):\n        b, a = g(b, a)\n        n += 1\n    print(n)\n\nf()\n", "ticket = input()\nq1, q2 = [(int(i), j) for j, i in enumerate(ticket[:3])], [(int(i), j) for j, i in enumerate(ticket[3:])]\np1, p2 = [i for i, j in q1], [i for i, j in q2]\n\nif sum(p1) > sum(p2):\n\tp1, p2 = p2, p1\n\tq1, q2 = q2, q1\n\nif sum(p1) == sum(p2):\n\tprint(0)\n\treturn\n\nfor i in range(20):\n\tif 9 - min(p1) > max(p2):\n\t\tpos = min(q1)[1]\n\t\tp1[pos] = 9\n\t\tq1[pos] = (9, pos)\n\telse:\n\t\tpos = max(q2)[1]\n\t\tp2[pos] = 0\n\t\tq2[pos] = (0, pos)\n\tif sum(p1) >= sum(p2):\n\t\tprint(i + 1)\n\t\treturn\n", "\ndigit_set = set(range(10))\ndouble_digit_set = set(range(19))\nA = [int(i) for i in input()]\nfirst_sum = sum(A[:3])\nsecond_sum = sum(A[3:])\none_flag = True\nexit_flag = False\nif first_sum == second_sum:\n    print(0)\nelse:\n    for i in range(6):\n        if i < 3:\n            if second_sum - (first_sum - A[i]) in digit_set:\n                print(1)\n                one_flag = False\n                break\n        else:\n            if first_sum - (second_sum - A[i]) in digit_set:\n                print(1)\n                one_flag = False\n                break\n    if one_flag:\n        for i in range(6):\n            for j in range(i+1, 6):\n                if i < 3 and j < 3:\n                    if second_sum - (first_sum - A[i] - A[j]) in double_digit_set:\n                        print(2)\n                        exit_flag = True\n                        break\n                if i >= 3 and j >= 3:\n                    if first_sum - (second_sum - A[i] - A[j]) in double_digit_set:\n                        print(2)\n                        exit_flag = True\n                        break\n                elif abs(first_sum - A[i] - second_sum + A[j]) <= 9:\n                    print(2)\n                    exit_flag = True\n                    break\n            if exit_flag:\n                break\n        else:\n            print(3)\n\n\n\n\n\n", "i = list([int(c) for c in input()])\n\nd = sum([i[3]-i[0], i[4]-i[1], i[5]-i[2]])\n\nif(d < 0):\n    i.reverse()\n    d *= -1\n\nfor z in range(3):\n    i[z] = 9 - i[z]\n\ni = sorted(i)\ni.reverse()\n\nir = 0\nfor (ind, z) in enumerate(i):\n    if ir >= d:\n        print(ind)\n        break\n    ir += z\n\n", "\ndef lucky(s):\n    ds = []\n\n    while s:\n        ds.append(s % 10)\n        s //= 10\n\n    while len(ds) < 6:\n        ds.append(0)\n\n\n    return ds[0] + ds[1] + ds[2] == ds[3] + ds[4] + ds[5]\n\n\ndef difs(a, b):\n    d = 0\n\n    while a or b:\n        if a % 10 != b % 10:\n            d += 1\n\n        a //= 10\n        b //= 10\n\n    return d\n\n\ndef main():\n    s = int(input())\n\n    min_difs = 10\n    end = 10 ** 6\n\n    for s_t in range(0, end):\n        if lucky(s_t):\n#            import pdb; pdb.set_trace()\n            min_difs = min(min_difs, difs(s, s_t))\n            \n            if min_difs == 0:\n                break\n\n    print(min_difs)\n\n\ndef __starting_point():\n    main()\n\n\n\n\n\n__starting_point()", "def change_num(left_arr, right_arr, count):\n    min_n, max_n = 10, -1\n        \n    if sum(left_arr) > sum(right_arr):\n        max_arr = left_arr\n        min_arr = right_arr\n    else:\n        max_arr = right_arr\n        min_arr = left_arr\n        \n    diff = sum(max_arr) - sum(min_arr)\n    \n    for i in range (3):\n        if min_n > min_arr[i]:\n            min_n = min_arr[i]\n            min_i = i\n        if max_n < max_arr[i]:\n            max_n = max_arr[i]\n            max_i = i\n    if diff <= 9-min_n:\n        count += 1\n        return count\n    elif diff <= max_n:\n        count += 1\n        return count\n    elif max_n >= 9-min_n:\n        max_arr[max_i] = 0\n    else:\n        min_arr[min_i] = 9\n    count += 1\n    return change_num(min_arr, max_arr, count)\n\nmsg = input() \n\nleft = msg[:3]\nright = msg[3:]\n\nleft_arr = []\nright_arr = []\n\nfor char in left:\n    left_arr.append(int(char))\nfor char in right:\n    right_arr.append(int(char))\n\nif sum(left_arr) == sum(right_arr):\n    print(0)\nelse:\n    print(change_num(left_arr, right_arr, 0))\n\n", "s = input()\narr = [int(i) for i in s]\ncount = 0\nwhile count < 4:\n    a = arr[0] + arr[1] + arr[2]\n    b = arr[3] + arr[4] + arr[5]\n    r = abs(a - b)\n    if a == b:\n        print(count)\n        return\n    if a < b:\n        num_min = arr.index(min(arr[0], arr[1], arr[2]))\n        num_max = arr.index(max(arr[3], arr[4], arr[5]))\n    else:\n        num_min = arr.index(min(arr[3], arr[4], arr[5]))\n        num_max = arr.index(max(arr[0], arr[1], arr[2]))\n\n    if r <= arr[num_max]:\n        print(count + 1)\n        return\n    if r <= 9 - arr[num_min]:\n        print(count + 1)\n        return\n    if 9 - arr[num_min] > arr[num_max]:\n        arr[num_min] = 9\n    else:\n        arr[num_max] = 0\n    count += 1\nprint(count)\n", "digs = list(map(int, input()))\n\nl, r = min(digs[:3], digs[3:], key=sum), max(digs[:3], digs[3:], key=sum)\n\nans = 0\nwhile sum(r) - sum(l) > 0:\n    if 9 - min(l) >= max(r):\n        diff = 9 - min(l)\n        l[l.index(min(l))] = 9\n    else:\n        diff = max(r)\n        r[r.index(max(r))] = 0\n    ans += 1\n\nprint(ans)\n", "def work():\n    s = input()\n    a = [int(s[0]), int(s[1]), int(s[2])]\n    b = [int(s[3]), int(s[4]), int(s[5])]\n    if sum(a) == sum(b):\n        print(0)\n        return\n    if sum(a) > sum(b):\n        a, b = b, a\n    # now sum(a) < sum(b)\n    a = sorted(a)\n    b = sorted(b)\n    ben = [9-a[0], 9-a[1], 9-a[2], b[0], b[1], b[2]]\n    ben = sorted(ben)[::-1]\n    k = sum(b) - sum(a)\n    t = 0\n    i = 0\n    while t < k:\n        t += ben[i]\n        i += 1\n    print(i)\n    return\n        \n\nwork()\n", "n = input()\na, b, c, d, e, f = list(map(int, n))\n\ndef g(a, b, c, s):\n    m1, m2, m3 = sorted([a, b, c])\n    if s == a + b+ c:\n        return 0\n    elif s > a+ b+c:\n        s1 = a + b + c\n        if m2 + m3 + 9 >= s:\n            return 1\n        if m3 + 18 >= s:\n            return 2\n        else:\n            return 3\n    else:\n        if m1 + m2 <= s:\n            return 1\n        if m1 <= s:\n            return 2\n        return 3\n\nll = []\nfor s in range(28):\n    ll.append(g(a, b, c, s) + g(d, e, f, s))\n\nprint(min(ll))\n\n\n", "n = input()\na, b, c, d, e, f = list(map(int, n))\n\ndef g(a, b, c, s):\n    m1, m2, m3 = sorted([a, b, c])\n    if s == a + b+ c:\n        return 0\n    elif s > a+ b+c:\n        s1 = a + b + c\n        if m2 + m3 + 9 >= s:\n            return 1\n        if m3 + 18 >= s:\n            return 2\n        else:\n            return 3\n    else:\n        if m1 + m2 <= s:\n            return 1\n        if m1 <= s:\n            return 2\n        return 3\n\nll = []\nfor s in range(28):\n    ll.append(g(a, b, c, s) + g(d, e, f, s))\n\nprint(min(ll))\n", "'''a = int(input())\nwow = input()\n\nfor i in wow:\n    i = int(i)'''\n\nwow = [int(e) for e in input()]\n\na1 = [wow[0],wow[1],wow[2]]\na2 = [wow[3],wow[4],wow[5]]\n\nsum1 = sum(a1)\nsum2 = sum(a2)\n\nif(sum1 == sum2):\n    print(0)\nelse:\n    if(sum1 < sum2):\n        noi = sum1\n        mak = sum2\n        fnoi = list(a1)\n        fmak = list(a2)\n        pontang = sum2-sum1\n    if(sum2 < sum1):\n        noi = sum2\n        mak = sum1\n        fnoi = list(a2)\n        fmak = list(a1)\n        pontang = sum1-sum2\n\n    fnoi.sort()\n    fmak.sort()\n\n    ptfnoi = [0]*3\n    ptfmak = [0]*3\n\n    '''for i in range(3):\n        ptfnoi.append(9-fnoi[i])\n        ptfmak.append(fmak[i]-0)'''\n\n    ptfnoi[0] = 9 - fnoi[0]\n    ptfnoi[1] = 9 - fnoi[1]\n    ptfnoi[2] = 9 - fnoi[2]\n    ptfmak[0] = fmak[0]\n    ptfmak[1] = fmak[1]\n    ptfmak[2] = fmak[2]\n\n    '''print(ptfnoi)\n    print(ptfmak)'''\n\n    lis = [ptfnoi[0],ptfnoi[1],ptfnoi[2],ptfmak[0],ptfmak[1],ptfmak[2]]\n    lis.sort()\n    mx1 = lis[5]\n    mx2 = lis[4]\n\n    if(mx1>=pontang):\n        print(1)\n    elif(mx1+mx2>=pontang):\n        print(2)\n    else:\n        print(3)\n        \n\n\n", "a=[int(i) for i in input()]\nif sum(a[3:])>sum(a[:3]):\n    a[:3],a[3:]=a[3:],a[:3]\na[:3]=sorted(a[:3],reverse=True)\na[3:]=sorted(a[3:],reverse=True)\n#print(a)\n\nans=0\ni=0; j=5\n\nwhile sum(a[:3])>sum(a[3:]):\n    ans+=1\n    #print(sum(a[:3]),sum(a[3:]),'i',i,'j',j)\n    #print(a,'\\n')\n    if a[i]>9-a[j]:\n        a[i]=0\n        i+=1\n    else:\n        a[j]=9\n        j-=1\n\n#print(a,'\\n')\nprint(ans)\n", "l=list(input())\na=[]\nb=[]\nfor i in range(3):\n    a.append(int(l[i]))\nfor i in range(3,6):\n    b.append(int(l[i]))\na.sort()\nb.sort()\ns1=sum(a)\ns2=sum(b)\n\nif(s1==s2):\n    print(0)\nelse:\n    if(s1<s2):\n        diff=s2-s1\n        a.sort()\n        b.sort(reverse=True)\n        c=[]\n        t=0\n        for i in range(3):\n            c.append(9-a[i])\n            c.append(b[i])\n        c.sort(reverse=True)\n        for i in range(6):\n            t=t+c[i]\n            if(t>=diff):\n                break\n        print(i+1)\n    else:\n        \n        diff=s1-s2\n        t=0\n        a.sort(reverse=True)\n        b.sort()\n        c=[]\n        for i in range(3):\n            c.append(a[i])\n            c.append(9-b[i])\n        c.sort(reverse=True)\n        for i in range(6):\n            \n            t=t+c[i]\n            if(t>=diff):\n                break\n        print(i+1)\n    \n        \n\n"]