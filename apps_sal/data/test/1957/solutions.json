["n, a, b = [int(x) for x in input().split()]\n\nhs = [int(x) for x in input().split()]\n\ntarget = 1.0 * hs[0] * a / b\n\nleft = sorted(hs[1:])\ns = sum(hs)\n\nres = 0\nwhile s > target:\n    res += 1\n    s -= left[-res]\n\nprint(res)\n", "n,i,o = list(map(int,input().split()))\na = list(map(int,input().split()))\nf = a[0]\na.pop(0)\na.sort(reverse = True)\ns = sum(a)+f\nt = 0\ny = i*f\n#print(y/s)\nwhile(y / s < o):\n    s -= a[t]\n    t+=1\nprint(t)\n", "n,A,B = map(int, input().split())\nL = list(map(int, input().split()))\na = L[0]\nS = sum(L)\nL = sorted(L[1:],reverse=True)\ncount = 0\nfor i in L:\n    if a/S*A>=B:\n        break\n    else:\n        S-=i\n        count+=1\nprint(count)", "n, a, b = [int(x) for x in input().split()]\no = []\ns = 0\nfor x in input().split():\n    s += int(x)\n    o.append(int(x))\n\ns1 = o[0]\no[0] = 0\no.sort()\ncount = 0\nwhile(s1*a < b*s):\n    s -= o.pop()\n    count+=1\nprint(count)\n", "import sys\nimport math\n\n#n = int(sys.stdin.readline().strip())\nn, A, B = list(map(int, sys.stdin.readline().strip().split(' ')))\narr = list(map(int, sys.stdin.readline().strip().split(' ')))\nfirst_hole = arr[0]\nsum_holes = sum(arr)\nsorted_arr = sorted(arr[1:], reverse = True)\n\nidx = 0\nans = 0\nwhile (first_hole * A) / sum_holes < B:\n\tsum_holes -= sorted_arr[idx]\n\tidx += 1\n\tans += 1\nprint(ans)\n\n\n\n", "n, A, B = [int(w) for w in input().split()]\ns = [int(w) for w in input().split()]\n\nS = sum(s)\ns1, *s = s\ns.sort()\ns.reverse()\n#s1*A/S >= B => S*B <= s1*A\nn = 0\nwhile S*B > s1*A:\n    S -= s[n]\n    n += 1\n\nprint(n)\n", "n,a,b=list(map(int,input().split()))\nx=[int(x) for x in input().split()]\np=x[0]\nd=sum(x)\nx.remove(x[0])\nc=0\nx.sort(reverse=True)\n\nfor i in x:\n    if((a*p)/d>=b):\n        break\n    else:\n        d-=i\n        c+=1\nprint(c)\n", "def run():\n    n, a, b = [int(x) for x in input().split()]\n    d = [int(x) for x in input().split()]\n\n    main = d[0]\n    other = d[1:]\n    other.sort()\n    ans = n-1\n    s = main\n    for x in other:\n        if main * a < b * (s+x):\n            print(ans)\n            return\n        s += x\n        ans -= 1\n    print(0)\n\n\nrun()", "num_holes, total_volume, desired_volume = (int(x) for x in input().split())\nhole_sizes = [int(x) for x in input().split()]\n\nunblocked_sizes = sum(hole_sizes)\nsizes_to_block = list(reversed(sorted(hole_sizes[1:])))\nnum_blocked = 0\n\nwhile hole_sizes[0] * total_volume < desired_volume * unblocked_sizes:\n    unblocked_sizes -= sizes_to_block[num_blocked]\n    num_blocked += 1\n\nprint(num_blocked)\n", "n,A,B=map(int,input().split())\nhole=[*enumerate(map(int,input().split()))]\nsi=hole[0][1]\nhole.sort(reverse=True,key=lambda x:x[1])\ns=0\nans=0\nfor n,i in hole: s+=i\nfor n,i in hole:\n  if (si*A)//s>=B: break\n  if n==0: continue\n  s-=i\n  ans+=1\n\nprint(ans)", "n, A, B = list(map(int, input().split()))\ns = list(map(int, input().split()))\nsu = 0\nfor i in range(n):\n    su += s[i]\ns2 = s[1:]\nwe = 0\ns2.sort()\ns2 = s2[::-1]\nkol = 0\nif A * s[0] / su >= B:\n    print(0)\nelse:\n    for i in range(len(s2)):\n        su -= s2[i]\n        kol += 1\n        if A * s[0] / su >= B:\n            print(kol)\n            we = 1\n            break\n", "n, a, b = list(map(int, input().split()))\nss = list(map(int, input().split()))\ns = sum(ss)\ns1 = ss[0]\nss = list(reversed(sorted(ss[1:])))\n\nans = n - 1\nfor i in range(n):\n    if b * s <= a * s1:\n        ans = i\n        break\n    s -= ss[i]\nprint(ans)\n\n", "n, a, b = list(map(int, input().split()))\ns = list(map(int, input().split()))\nx = s[0]\nsumm = sum(s)\ny = []\nfor i in range(n):\n\ty.append([s[i], i])\ny.sort(reverse = True)\ncount = 0\nindex = 0\nwhile (x * a) / summ < b:\n\tcount += 1\n\tif y[index][1] == 0:\n\t\tindex += 1\n\tsumm -= y[index][0]\n\tindex += 1\nprint(count)\t\t\n\n", "def main():\n    [n, a, b] = [int(i) for i in input().split()]\n    s = [int(i) for i in input().split()]\n    sumAll = 0\n    for i in range(n):\n        sumAll += s[i]\n    rest = s[1:]\n    rest.sort(reverse=True)\n    thresh = sumAll - s[0] * a / b\n    i = 0\n    sumBlocked = 0\n    while sumBlocked < thresh:\n        sumBlocked += rest[i]\n        i += 1\n    print(i)\ndef __starting_point():\n    main()\n\n__starting_point()", "n, A, B = input().split(' ')\nn, A, B = int(n), int(A), int(B)\ns = [int(i) for i in input().split(' ')]\nnum = sum(s)\nfirst = s[0]\nafter = s[1:]\nafter.sort()\nrst = 0\nptr = len(after) - 1\nwhile first / num < B / A:\n    num -= after[ptr]\n    ptr -= 1\n    rst += 1\nprint(rst)\n# print(after)\n", "n, a, b = map(int, input().split())\nnum = list(map(int, input().split()))\nx = num.pop(0)\nnum.sort()\nsum1 = sum(num)\nnum.reverse()\nif (x * a) / (sum1 + x) >= b:\n    print(0)\nelse:\n    for i in range(len(num)):\n        sum1 -= num[i]\n        if (x * a) / (sum1 + x) >= b:\n            print(i + 1)\n            break", "\nn, a, b = [int(i) for i in input().split(' ')]\nsizes = [int(i) for i in input().split(' ')]\nst = sum(sizes)\ns = (sizes[0] * a) / b\nsb = st - s\n\nblockable = sorted(sizes[1:], reverse=True)\nblocked_no = 0\nblocked_amount = 0\nfor i in range(len(blockable)):\n    if blocked_amount < sb:\n        blocked_no += 1\n        blocked_amount += blockable[i]\n    else:\n        break\n\nprint(blocked_no)\n", "# python3\n\ndef readline(): return tuple(map(int, input().split()))\n\n\ndef main():\n    n, a, b = readline()\n    s1, *s = readline()\n\n    bound = s1 * (a - b) / b\n    for si in sorted(s):\n        bound -= si\n        if bound < 0:\n            break\n        n -= 1\n    print(n - 1)\n\n\nmain()\n", "n, a, b = list(map(int, input().split()))\nholes = list(map(int, input().split()))\ns = sum(holes)\nf = holes[0]\ndel holes[0]\nholes = sorted(holes)[::-1]\nh = 0\nfor x in range(len(holes)):\n    if f * a / s >= b:\n        break\n    s -= holes[x]\n    h += 1\nprint(h)", "n, A, B = list(map(int,input().split()))\notv = list(map(int,input().split()))\none = otv.pop(0)\notv.sort()\nsu = sum(otv) + one\nres = 0\nwhile B * su > A * one:\n    res += 1\n    su -= otv.pop()\nprint(res)\n", "_, a, b = list(map(int, input().split()))\ns = list(map(int, input().split()))\ni = iter(sorted(s[1:], reverse=True))\nssum = sum(s[1:])\ns0 = s[0]\ncnt = 0\n\nwhile s and (s0 * a) / (ssum + s0) < b:\n    ni = next(i)\n    ssum -= ni\n    cnt += 1\n\nprint(cnt)\n", "n,a,b = map(int, input().split())\ns = list(map(int, input().split()))\nsm = sum(s)\ns0 = s.pop(0)\ns = sorted(s)\nfor i in range(n):\n    if i == 0:\n        if a * s0 / sm >= b:\n            print(0)\n            break\n    else:\n        sm -= s[-i]\n        if a * s0 / sm >= b:\n            print(i)\n            break"]