["from operator import attrgetter, itemgetter\nn = int(input());\narr = [[int(x) for x in input().split(' ')] for y in range(n)];\narr = sorted(arr, key=itemgetter(1,0,2), reverse=True);\ndp = [0 for x in range(n)];\ns = [];\nfor i in range(n):\n\twhile (s != [] and arr[s[-1]][0] >= arr[i][1]):\n\t\ts.pop();\n\tif (s != []):\n\t\tdp[i] = dp[s[-1]];\n\tdp[i] += arr[i][2];\n\ts.append(i);\nprint(max(dp));", "#!/usr/bin/env python3\ndef ri():\n    return list(map(int, input().split()))\n\nn = int(input())\n\nr = []\nT = []\nmaxt = -1\nfor i in range(n):\n    r.append(list(ri()))\n\nr.sort(key=lambda e: (e[1], e[0]))\n\nT.append([r[0][2], r[0][1]])\nfor i in range(1, n):\n    tmp = r[i][2]\n    l = len(T)\n    for j in range(l):\n        if r[i][0] >= T[-1][1]:\n            T.append([tmp, r[i][1]])\n            break\n        else:\n            tmp = max(T[-1][0]+r[i][2], tmp)\n            T.pop()\n    else:\n        T.append([tmp, r[i][1]])\n\n\nprint(max(T)[0])\n\n\n", "import operator\nn = int(input()) \narr=[]\nfor i in range(n):\n    arr.append([int(element) for element in input().split()])\narr = sorted(arr, key=operator.itemgetter(1,0,2), reverse= True) \nheigh = [0 for i in range(n)] \nseq = [] \nfor i in range(n):\n    while len(seq) > 0 and arr[seq[-1]][0] >= arr[i][1] :\n        seq.pop()\n    if len(seq) > 0 :\n        heigh[i] = heigh[seq[-1]] \n    heigh[i] += arr[i][2] \n    seq.append(i)\nprint(max(heigh))\n", "from bisect import *\nfrom sys import *\np = list(map(int, stdin.read().split()))\nt = [(p[i + 1], p[i], p[i + 2]) for i in range(1, len(p), 3)]\nt.sort(reverse=True)\ns = [(0, 0), (1e9, 1e16)]\nfor b, a, h in t:\n    i = bisect(s, (b,))\n    h += s[i - 1][1]\n    j = bisect(s, (a,))\n    while s[j][1] <= h: s.pop(j)\n    s.insert(j, (a, h))\nprint(s[-2][1])\n", "t = [(9e9, 0, 0)]\nn = int(input())\nfor i in range(n):\n    a, b, h = map(int, input().split())\n    t.append((b, a, h))\nt.sort(reverse=True)\ns, p = [0], [0] * (n + 1)\nfor i in range(1, n + 1):\n    while t[s[-1]][1] >= t[i][0]: s.pop()\n    p[i] = p[s[-1]] + t[i][2]\n    s.append(i)\nprint(max(p))", "aux = [(9e9, 0, 0)]\nn = int(input())\n \nfor i in range(n):\n    a, b, h = map(int, input().split())\n    aux.append((b, a, h)) #sort padrao eh pelo item 0 da tupla\n \naux.sort(reverse=True)\n \ns, p = [0], [0] *(n + 1)\n \nfor i in range(1, n + 1):\n    while aux[s[-1]][1] >= aux[i][0]:\n        s.pop()\n        \n    p[i] = p[s[-1]] + aux[i][2]\n    s.append(i)\n \nprint(max(p))", "aux = [(9e9, 0, 0)]\nn = int(input())\n \nfor i in range(n):\n    a, b, h = map(int, input().split())\n    aux.append((b, a, h)) #sort padrao eh pelo item 0 da tupla\n \naux.sort(reverse=True)\n \ns, p = [0], [0] *(n + 1)\n \nfor i in range(1, n + 1):\n    while aux[s[-1]][1] >= aux[i][0]:\n        s.pop()\n        \n    p[i] = p[s[-1]] + aux[i][2]\n    s.append(i)\nprint(max(p))", "n = int(input())\nd = []\nfor i in range(n):\n    a, b, h = map(int, input().split())\n    d.append((b, a, h))\n    \nd.sort()\n\n\nht = d[len(d) - 1][2]\n\nans = ht\n\ns = []\ns.append(d[len(d) - 1])\n\n\nfor i in range(n - 2, -1, -1):\n    while s and d[i][0] <= s[len(s) - 1][1]:\n        ht -= s.pop()[2]\n    s.append(d[i])\n    ht += d[i][2]\n    if ans < ht:\n        ans = ht\n        \nprint(ans)", "n = int(input())\nd = []\nfor i in range(n):\n    a, b, h = map(int, input().split())\n    d.append((b, a, h))\n    \nd.sort()\n \n \nht = d[len(d) - 1][2]\n \nans = ht\n \ns = []\ns.append(d[len(d) - 1])\n \n \nfor i in range(n - 2, -1, -1):\n    while s and d[i][0] <= s[len(s) - 1][1]:\n        ht -= s.pop()[2]\n    s.append(d[i])\n    ht += d[i][2]\n    if ans < ht:\n        ans = ht\n        \nprint(ans)", "n = int(input())\nd = []\nfor i in range(n):\n    a, b, h = map(int, input().split())\n    d.append((b, a, h))\nd.sort()\nht = d[len(d) - 1][2]\nans = ht\ns = [d[len(d) - 1]]\n\nfor i in range(n - 2, -1, -1):\n    while s and d[i][0] <= s[len(s) - 1][1]:\n        ht -= s.pop()[2]\n    s.append(d[i])\n    ht += d[i][2]\n    if ans < ht:\n        ans = ht\nprint(ans)"]