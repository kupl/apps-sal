#!/usr/bin/env python3
import sys


def solve(N: int, K: int, a: "List[int]"):
    su, left, ans = 0, 0, 0
    for right in range(N):
        su += a[right]
        while (su - a[left]) >= K:
            su -= a[left]
            left += 1
        ans += left + (su >= K)
        right += 1
    return ans

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)


def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print((solve(N, K, a)))


def __starting_point():
    main()


__starting_point()
