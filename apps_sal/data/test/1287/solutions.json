["import sys\n\nn = int(input())\nprob = [list(map(float, input().split())) for _ in range(n)]\ndp = [[0.0]*n for _ in range(1 << n)]\ndp[1][0] = 1.0\n\nfor mask in range(3, 1 << n):\n    for i in range(n):\n        if not (mask & (1 << i)):\n            continue\n        for j in range(n):\n            if i != j and mask & (1 << j):\n                dp[mask][i] = max(\n                    dp[mask][i],\n                    dp[mask - (1 << j)][i] * prob[i][j]\n                    + dp[mask - (1 << i)][j] * prob[j][i]\n                )\n\nprint(max(dp[-1]))\n", "import sys\n\nn = int(input())\nprob = [list(map(float, input().split())) for _ in range(n)]\ndp = [[0.0]*(1 << n) for _ in range(n)]\ndp[0][1] = 1.0\n\nfor mask in range(3, 1 << n):\n    for i in range(n):\n        if not (mask & (1 << i)):\n            continue\n        for j in range(n):\n            if i != j and mask & (1 << j):\n                dp[i][mask] = max(\n                    dp[i][mask],\n                    dp[i][mask - (1 << j)] * prob[i][j]\n                    + dp[j][mask - (1 << i)] * prob[j][i]\n                )\n\nprint(max(dp[i][-1] for i in range(n)))\n"]