["n = int(input())\nnim = []\nfor i in range(n):\n  a,k = map(int,input().split())\n  while a%k != 0 and a>k:\n    t = a//k\n    if t+1>=a%k:\n      a -= t+1\n    else:\n      y = a%k\n      a -= y//(t+1)*(t+1)\n  if a<k:\n    x = 0\n  elif a%k == 0:\n    x = a//k\n  nim.append(x)\nans = 0\nfor i in nim:\n  ans ^= i\nif ans == 0:\n  print(\"Aoki\")\nelse:\n  print(\"Takahashi\")", "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nn = int(readline())\ndata = list(map(int,read().split()))\n\ndef calc_g(x,k):\n    while(x>=k):\n        if(x%k==0):\n            return x//k\n        fn = x//k\n        x1 = x - (fn + 1)\n        x2 = fn*k + (x%k)%(fn+1)\n        x = min(x1,x2)\n    return 0\n\ngrundy = 0\nit = iter(data)\nfor a,k in zip(it,it):\n    grundy = grundy ^ calc_g(a,k)\n\nif(grundy==0):\n    print('Aoki')\nelse:\n    print('Takahashi')", "def main():\n    n = int(input())\n    res = 0\n    for (a, k) in [map(int, input().split()) for _ in range(n)]:\n        while a >= k:\n            m = a // k\n            if a % k == 0:\n                res ^= m\n                break\n            x = (a - k * m - 1) // (m + 1)\n            a -= max(1, x) * (m + 1)\n    print('Takahashi' if res != 0 else 'Aoki')\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from math import ceil\nn = int(input())\ndef solve(a, k):\n\tif a < k:\n\t\treturn 0\n\twhile a%k != 0:\n\t\ta -= ceil((a%k)/((a//k)+1)) * ((a//k)+1)\n\treturn a//k\nans = 0\nfor _ in range(n):\n\ta, k = map(int, input().split())\n\tans ^= solve(a, k)\nif ans == 0:\n\tprint(\"Aoki\")\nelse:\n\tprint(\"Takahashi\")", "N = int(input())\ng = 0\nfor _ in range(N):\n    x, k = map(int, input().split())\n    while x % k != 0:\n        x = x - (x // k + 1) * max(1, (x - x // k * k) // (x // k + 1))\n    g ^= x // k\nprint('Takahashi' if g != 0 else 'Aoki')", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef grundy(a,k):\n    while 1:\n        if a<k:return 0\n        if a%k==0:return a//k\n        once=a//k+1\n        seg=a%k\n        cnt=(seg+once-1)//once\n        a-=cnt*once\n\nwin=0\nfor _ in range(II()):\n    a,k=MI()\n    win^=grundy(a,k)\n\nif win:print(\"Takahashi\")\nelse:print(\"Aoki\")\n", "\"\"\"\n\u5404\u5c71\u306egrundy\u6570\u304c\u308f\u304b\u308c\u3070\u3088\u3044\n\n\u57fa\u672c\u7684\u306b\u30eb\u30fc\u30d7\u3059\u308b\n\"\"\"\n\nN = int(input())\n\nans = 0\n\nfor i in range(N):\n\n    A,K = list(map(int,input().split()))\n\n    \n\n    while True:\n\n        if A % K == 0:\n            ans ^= A // K\n            break\n\n        elif A == K-1:\n            ans ^= 0\n            break\n\n        else:\n\n            if A // K != (A - A//K -1) // K:\n                A = A - A // K - 1\n            else:\n                A -= (A - (A // K) * K) // (A // K+1) * (A//K+1)\n\n    \n\nif ans == 0:\n    print (\"Aoki\")\nelse:\n    print (\"Takahashi\")\n", "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nimport numpy as np\n\nN = int(readline())\nAK = np.array(read().split(),np.int32)\n\nA = AK[::2]; K = AK[1::2]\n\nG = 0\n\nfor t in range(50000):\n    q = A//K; r = A%K\n    q += 1\n    r += (-r)%q\n    A -= r\n    if t%1000==0:\n        ind = r!=0\n        if np.count_nonzero(~ind):\n            G ^= np.bitwise_xor.reduce(A[~ind]//K[~ind])\n            A=A[ind];K=K[ind]\n            if len(A)==0:\n                break\n\nanswer = 'Takahashi' if G else 'Aoki'\nprint(answer)", "\nimport sys\nsys.setrecursionlimit(10**7)\ndef main1(n,a,k):\n  ret=True\n  # \u5404\u5c71\u306eGrundy\u6570\u3092\u6c42\u3081\u3001xor\u548c\u3092\u3068\u308b\u3002\n  # N<=200,a<=10^9,k<=10^9\n  ary=[0]*n\n  for i in range(n):\n    if k[i]==1:\n      ary[i]=a[i]\n    elif a[i]%k[i]==0:\n      ary[i]=a[i]//k[i]\n    else:\n      m=a[i]//k[i]\n      # 0,1,..,m\u306e\u3044\u305a\u308c\u304b\n      # m+1\u5468\u671f\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n      # t=(a[i]%k[i])%(m+1)\n      # \u5468\u671f\u306eidx=t\u306e\u6570\u5b57\u306f\u4f55\u304b\u3002\n      # t=0\u306a\u3089m\n      # t\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3068\u30010,..,m-1\u306em\u5468\u671f\u4e0a\u306eidx\u306b\u306a\u308b\n\n      def func(t,m):# m+1\u5468\u671f\u306eidx=t\u306e\u5024\u3092\u8fd4\u3059\u3002\n        t%=(m+1)\n        if t==0:return m\n        j=(m+1-t+k[i]-1)//k[i]\n        tt=t-j\n        tt+=k[i]*j\n        ret=func(tt,m-j)\n        return ret\n      t=(a[i]%k[i])%(m+1)\n      ary[i]=func(t,m)\n  ret=0\n  for x in ary:ret^=x\n  return ret>0\n\ndef __starting_point():\n  n=int(input())\n  a,k=[],[]\n  for _ in range(n):\n    x,y=list(map(int,input().split()))\n    a.append(x)\n    k.append(y)\n  print(('Takahashi' if main1(n,a,k) else 'Aoki'))\n\n__starting_point()", "import sys\nsys.setrecursionlimit(10 ** 8)\n\n\nn = int(input())\ninfo = [list(map(int, input().split())) for i in range(n)]\n\n\n# \u611a\u76f4\u89e3\ndef mex(array):\n    if not array:\n        return 0\n    set_ = set(array)\n    for i in range(10000):\n        if i not in set_:\n            return i\n\"\"\"\nres = 0\nfor a, k in info:\n    grundy = [0] * (a + 1)\n    for num in range(1, a + 1):\n        length = num // k\n        grundy[num] = mex(grundy[num - length:num])\n    res ^= grundy[-1]\n\nif res == 0:\n    print(\"Aoki\")\nelse:\n    print(\"Takahashi\")\n\"\"\"\n\n\n\n# a(3n)=n, otherwise a(n)=a(floor(2n/3))\n\"\"\"\ndef solve(n, k):\n    if n % k == 0:\n        return n // k\n    return solve(n * (k - 1) // k, k)\n\"\"\"\n\ndef solve(n, k):\n    if n % k == 0:\n        return n // k\n    diff = (n // k) + 1\n    target = n - n % k\n    if (n - target) % diff == 0:\n        return solve(target, k)\n    n -= -((-(n - target)) // diff) * diff\n    return solve(n, k)\n\nres = 0\nfor a, k in info:\n    res ^= solve(a, k)\nif res == 0:\n    print(\"Aoki\")\nelse:\n    print(\"Takahashi\")", "\"\"\"\nq, r = divmod(a, k)\u3068\u3057\u3066\u3001floor(r/(q+1))\u56de\u307e\u3067\u306fq=a//k\u306e\u307e\u307e->\u307e\u3068\u3081\u3066\u5f15\u304f\n\"\"\"\ndef f(a, k):\n    while a >= k and a%k:\n        q, r = divmod(a, k)\n        a -= (r+q)//(q+1)*(q+1)\n    if a < k:\n        return 0\n    return a//k\nx = 0\nn = int(input())\nfor _ in range(n):\n    a, k = map(int, input().split())\n    x ^= f(a, k)\nif x:\n    print(\"Takahashi\")\nelse:\n    print(\"Aoki\")", "\"\"\"\ndef grundy(a,k): #\u77f3 a \u500b\u3001\u6700\u5927 x//k \u307e\u3067\u3068\u308c\u308b\n    #print(a,k)\n    if a < k:\n        return 0\n    if a%k==0:\n        return a//k\n    q = a//k\n    #v = (a-q*k)//q - (1 if (a-q*k)%q==0 else 0)\n    return grundy(a-1-q,k)\n\"\"\"\ndef grundy(a,k): #\u77f3 a \u500b\u3001\u6700\u5927 x//k \u307e\u3067\u3068\u308c\u308b\n    #print(a,k)\n    if a < k:\n        return 0\n    q = a//k\n    r = (a-q*k)%(q+1)\n    if r==0:\n        return a//k\n    v = (a-q*k)//(q+1) + 1\n    #print(a,k,q,v)\n    return grundy(a-(q+1)*v,k)\n\n\n\"\"\"\nK = 10\nN = 50\nV = 5\nfor k in range(V,V+1):\n    a = [0]*N\n    for i in range(1,N):\n        s = set()\n        for j in range(1,1+i//k):\n            s.add(a[i-j])\n        for j in range(N):\n            if j not in s:\n                a[i] = j\n                break\n    \n    #print(k,a)\n    #for i in range(N//V):\n    #    print(a[i*V:(i+1)*V])\n\n    \n    b = [grundy(i,k) for i in range(N)]\n    print(a)\n    print(b)\n    assert a==b\n\"\"\"\n# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\nsys.setrecursionlimit(10**8)\n\nn, = list(map(int,readline().split()))\ng = 0\nfor _ in range(n):\n    a,k = list(map(int,readline().split()))\n    g ^= grundy(a,k)\nif g:\n    print(\"Takahashi\")\nelse:\n    print(\"Aoki\")\n\n\n\n\n\n", "def extgcd(a, b):\n    if b:\n        d, y, x = extgcd(b, a%b)\n        y -= (a/b)*x\n        return d, x, y\n    else:\n        return a, 1, 0\nN = int(input())\ngrundy = 0\nfor i in range(N):\n    a, k = map(int, input().split())\n    while a % k:\n        p, q = divmod(a, k)\n        a -= (p + 1)*((q+p)//(p+1))\n\n    grundy ^= a // k\nprint('Takahashi' if grundy else 'Aoki')", "N = int(input())\ngrundy = 0\nfor i in range(N):\n    a, k = list(map(int, input().split()))\n    while a % k:\n        p, q = divmod(a, k)\n        a -= (p + 1)*((p+q)//(p+1))\n    grundy ^= a // k\nprint(('Takahashi' if grundy else 'Aoki'))\n", "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nimport numpy as np\n\nN = int(readline())\nAK = np.array(read().split(),np.int32)\n\nA = AK[::2]; K = AK[1::2]\n\nfor _ in range(50000):\n    q = A//K; r = A%K\n    q += 1\n    r += (-r)%q\n    A -= r\n\nA //= K #grundy\ng = np.bitwise_xor.reduce(A)\n\nanswer = 'Takahashi' if g else 'Aoki'\nprint(answer)", "def grundy(a, k):\n    while a >= k and a % k:\n        b = a % k\n        c = a//k + 1\n        a += c * (-b // c)\n    if a % k == 0:\n        return a // k\n    return 0\n    \nN = int(input())\ns = 0\nfor _ in range(N):\n    a, k = map(int, input().split())\n    s ^= grundy(a, k)\n\nprint(\"Takahashi\" if s else \"Aoki\")", "import sys\n\nsys.setrecursionlimit(10000000)\nfrom math import ceil\n\n\ndef grundy(a, k):\n    if a < k:\n        return 0\n    d, m = divmod(a, k)\n    if m == 0:\n        return d\n    d1 = d + 1\n    if d > k:\n        return grundy(a - d1, k)\n    e = ceil(m / d1) * d1\n    return grundy(a - e, k)\n\n\nn = int(input())\nnim = 0\nfor _ in range(n):\n    a, k = list(map(int, input().split()))\n    nim ^= grundy(a, k)\nprint(('Takahashi' if nim > 0 else 'Aoki'))\n", "N=int(input())\nres=0\nfor i in range(N):\n    n,k=list(map(int,input().split()))\n    while n%k!=0 and n//k>0:\n        q=n//k\n        r=n%k\n        R=r%(q+1)\n        if r>q+1:\n            n=q*k+R\n        else:\n            n=q*k+r-(q+1)\n    if n%k==0:\n        res^=n//k\n\nif res==0:\n    print(\"Aoki\")\nelse:\n    print(\"Takahashi\")\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nAK = [list(map(int, input().split())) for _ in range(N)]\n# N = 40\n# AK = [(i+1, 4) for i in range(N)]\n\ndef grundy(A, K):\n    if K == 1:\n        return A\n    X = (A+K-1)//K\n    num = X*K - A\n    while X*K-num > K*K:\n        #print(X, num)\n        if num%K == 0:\n            return X - num//K\n        if num//K == X//K:\n            num = num%K\n        else:\n            num = X%K+1 + (K-1)*(num//K) + (num%K-1)\n        X = X - X//K\n    \n    S = X*K - num\n    while S >= K:\n        if S%K == 0:\n            return S//K\n        delta = S//K + 1\n        S -= max(((S%K)//delta)*delta, delta)\n    return 0\n    \ng = 0\nfor A, K in AK:\n    # print(A, A//K, grundy(A, K))\n    # print()\n    g ^= grundy(A, K)\n\nprint(\"Takahashi\" if g else \"Aoki\")", "def main():\n    import sys\n    input = sys.stdin.buffer.readline\n\n    N = int(input())\n    win = 0\n    for _ in range(N):\n        a, k = list(map(int, input().split()))\n        while True:\n            if a < k:\n                g = 0\n                break\n            elif a % k == 0:\n                g = a // k\n                break\n            else:\n                d = (a//k) + 1\n                a -= d * ((a - k * (a//k))//d)\n                if a < k:\n                    g = 0\n                    break\n                elif a % k == 0:\n                    g = a // k\n                    break\n                else:\n                    a -= d\n\n        win ^= g\n    if win:\n        print('Takahashi')\n    else:\n        print('Aoki')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "A,I=0,input\nfor i in range(int(I())):\n a,k=map(int,I().split())\n g=0\n while 1:\n  if a<k:g=0;break\n  if a%k==0:g=a//k;break\n  c=(a//k+a%k)//(a//k+1)\n  a-=c*(a//k+1)\n A^=g\nprint(\"Takahashi\"if A else \"Aoki\")", "def grundy(N, K):\n    if N < K:\n        return 0\n    while N % K:\n        hi = N / (N / K + 1) \n        lo = 1\n        while hi - lo > 1:\n            mid = (hi + lo) / 2\n            M = N - mid * (N/ K + 1)\n            if M / K == N / K:\n                lo = mid\n            else:\n                hi = mid\n        m = N / K + 1\n        N -= m * lo\n    return N / K\n\nN = input()\nans = 0\nfor i in range(N):\n    a, k = list(map(int, input().split()))\n    ans ^= grundy(a, k)\nprint(\"Takahashi\" if ans else \"Aoki\")\n", "N = int(input())\n\ndef grundy(x, k):\n    while x % k != 0:\n        p = max(1, (x - x // k * k) // (x // k + 1))\n        x = x - (x // k + 1) * p\n    return x // k\n\ng = 0\n\nfor _ in range(N):\n    a, k = map(int, input().split())\n    g ^= grundy(a, k)\n\nprint('Takahashi' if g != 0 else 'Aoki')", "from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\n\ndef solve(n, k):\n    if n % k == 0:\n        return n // k\n    diff = (n // k) + 1\n    target = n - n % k\n    if (n - target) % diff == 0:\n        return solve(target, k)\n    n -= -((-(n - target)) // diff) * diff\n    return solve(n, k)\n\n\nn = I()\nret = 0\nfor i in range(n):\n    a, k = LI()\n    ret ^= solve(a, k)\n\nprint(\"Takahashi\" if ret else \"Aoki\")", "def grundy(a,k):\n    while a >= k:\n        q = a//k\n        if (a-q*k)%(q+1)==0: return a//k\n        a -= (q+1)*((a-q*k)//(q+1) + 1)\n    return 0\n\nn, = map(int,input().split())\ng = 0\nfor _ in range(n):\n    g ^= grundy(*map(int,input().split()))\nprint(\"Takahashi\" if g else \"Aoki\")", "from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\n\ndef solve(n, k):\n    if n % k == 0:\n        return n // k\n    diff = (n // k) + 1\n    target = n - n % k\n    r = n % k\n    if r % diff == 0:\n        return solve(n - r, k)\n    n -= (r // diff + 1) * diff\n    return solve(n, k)\n\n\nn = I()\nret = 0\nfor i in range(n):\n    a, k = LI()\n    ret ^= solve(a, k)\n\nprint((\"Takahashi\" if ret else \"Aoki\"))\n", "from math import ceil\nn = int(input())\ndef solve(a, k):\n\tif a < k:\n\t\treturn 0\n\twhile a%k != 0:\n\t\ta -= ceil((a%k)/((a//k)+1)) * ((a//k)+1)\n\treturn a//k\nans = 0\nfor _ in range(n):\n\ta, k = map(int, input().split())\n\tans ^= solve(a, k)\nif ans == 0:\n\tprint(\"Aoki\")\nelse:\n\tprint(\"Takahashi\")", "from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\n\ndef solve(n, k):\n    if n % k == 0:\n        return n // k\n    diff = (n // k) + 1\n    target = n - n % k\n    r = n % k\n    if r % diff == 0:\n        return solve(target, k)\n    n -= -((-(n - target)) // diff) * diff\n    return solve(n, k)\n\n\nn = I()\nret = 0\nfor i in range(n):\n    a, k = LI()\n    ret ^= solve(a, k)\n\nprint((\"Takahashi\" if ret else \"Aoki\"))\n", "from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.buffer.readline().rstrip().decode('utf-8').split()\ndef S(): return sys.stdin.buffer.readline().rstrip().decode('utf-8')\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\n\ndef f(ai, ki):\n    if ai < ki: return 0\n    elif ai % ki == 0 :return ai // ki\n    d = ai // ki + 1\n    if ai % ki % d:\n        return f(ai - (ai % ki // d + 1) * d, ki)\n    return f(ai - ai % k, k)\n\n\nn = I()\nret = 0\nfor i in range(n):\n    a, k = LI()\n    ret ^= f(a, k)\n\nprint((\"Takahashi\" if ret else \"Aoki\"))\n", "N = int(input())\ngrundy = 0\nfor i in range(N):\n    a, k = map(int, input().split())\n    while a % k:\n        p, q = divmod(a, k)\n        a -= (p + 1)*((p+q)//(p+1))\n    grundy ^= a // k\nprint('Takahashi' if grundy else 'Aoki')", "def main():\n    n = int(input())\n    res = 0\n    for (a, k) in [map(int, input().split()) for _ in range(n)]:\n        while a > k and a % k != 0:\n            m = a // k\n            x = (a - k * m - 1) // (m + 1)\n            a -= max(1, x) * (m + 1)\n        res ^= a // k\n    print('Takahashi' if res != 0 else 'Aoki')\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    def calc_grundy(x, k):\n        while True:\n            if x < k:\n                return 0\n            rem, quot = x % k, x//k\n            if rem == 0:\n                return quot\n            else:\n                if rem <= quot+1:\n                    x -= quot+1\n                else:\n                    x = quot*k+(rem % (quot+1))\n\n    n = int(input())\n    ab = [list(map(int, input().split())) for _ in [0]*n]\n\n    grundy = 0\n    for a, b in ab:\n        grundy = grundy ^ (calc_grundy(a, b))\n\n    print(([\"Aoki\", \"Takahashi\"][grundy > 0]))\n\n\nmain()\n", "import sys\nsys.setrecursionlimit(10**6)\ndef grun(A, K):\n    if A < K:\n        return 0\n    a, b = divmod(A, K)\n    if b == 0:\n        return a\n    a += 1\n    r = A % a\n    return grun((((a-1)*K-r)//a)*a+r, K)\ndef solve():\n    N = int(input())\n    X = 0\n    for _ in range(N):\n        A, K = map(int, input().split())\n        X ^= grun(A, K)\n    print('Takahashi' if X else 'Aoki')\n\ndef __starting_point():\n    solve()\n__starting_point()"]