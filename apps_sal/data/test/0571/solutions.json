["n = q = int(input())\nk = list(input())\ncntl = k.count('(')\ncntr = k.count(')')\ncntq = k.count('?')\nfor i in range(n):\n    if k[i] == '?':\n        if cntl < q // 2 and cntr + cntq >= q // 2:\n            k[i] = '('\n            cntl += 1\n            cntq -= 1\n        else:\n            k[i] = ')'\n            cntr += 1\n            cntq -= 1\n        \ndef check():\n    cnt = 0\n    m = 0\n    for i in k:\n        m += 1\n        if i == '(':\n            cnt += 1\n        else:\n            cnt -= 1\n        if cnt == 0 and m < n or cnt < 0:\n            return False\n    return cnt == 0\n\nprint(''.join(k) if check() else ':(')\n            \n            \n", "def main():\n    n = int(input())\n    arr = list(input())\n    if n & 1:\n        print(\":(\")\n        return 0\n    left = n // 2 - arr.count('(')\n    for i in range(n):\n        if arr[i] == '?':\n            if left:\n                arr[i] = '('\n                left -=  1\n            else:\n                arr[i] = ')'\n    if arr[0] == ')' or arr[-1] == '(':\n        print(\":(\")\n        return 0\n    left = 1\n    right = 0\n    for i in range(1, n):\n        if right == left:\n            print(\":(\")\n            return 0\n        if arr[i] == '(':\n            left += 1\n        else:\n            right += 1\n    if left != right:\n        print(\":(\")\n        return 0\n    print(\"\".join(arr))\n    return 0\nmain()", "n = int(input())\nif n%2:\n    print (\":(\")\n    return\ns = [c for c in input()]\nif s[0] == \")\" or s[-1] == \"(\":\n    print (\":(\")\n    return\ns[0] = \"(\"\ns[-1] = \")\"\n\ncount_open = s.count(\"(\")\ncount_close = s.count(\")\")\nhalf = n//2\nif count_close>half or count_open>half:\n    print (\":(\")\n    return\navailable = half-count_open\ncurrent = 0\nfor i,x in enumerate(s):\n    if x == \"(\":\n        current += 1\n    elif x == \")\":\n        current -= 1\n    else:\n        if available:\n            current+=1\n            available-=1\n            s[i] = \"(\"\n        else:\n            current -= 1\n            s[i] = \")\"\n    if current == 0 and i!=n-1:\n        print (\":(\")\n        return\n\nprint (\"\".join(s))", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def cal(self, s):\n        if len(s) == 1:\n            return s[0]\n        if s[0] == 0:\n            return self.cal(s[1:])\n        v = 1\n        for c in s:\n            v *= c\n        return v\n\n    def solve(self):\n        n = self.next_int()\n        s = [x for x in next(self)]\n        w = s.count('?')\n        z = s.count('(')\n        y = n - w - z\n        ss = [x for x in s]\n        if ss[0] == '?':\n            ss[0] = '('\n            z += 1\n        if ss[-1] == '?':\n            ss[-1] = ')'\n            y += 1\n        flag = (n % 2 == 0 and ss[0] != ')' and ss[-1] != '(' and z * 2 <= n and y * 2 <= n)\n\n        c = 1\n        for i in range(1, n - 1):\n            if not flag:\n                break\n            if ss[i] == '(':\n                c += 1\n            elif ss[i] == ')':\n                c -= 1\n            elif z * 2 < n:\n                ss[i] = '('\n                c += 1\n                z += 1\n            else:\n                ss[i] = ')'\n                c -= 1\n                y -= 1\n\n            if c == 0:\n                flag = False\n\n        if not flag:\n            print(':(')\n        else:\n            print(''.join(ss))\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "import sys\n# import math\n\n# sys.stdin = open('c-test.txt')\n\ndef check(s):\n\tstatus = 0\n\tfor char in s[:-1]:\n\t\tif char == '(':\n\t\t\tstatus += 1\n\t\telse:\n\t\t\tstatus -= 1\n\t\tif status <= 0:\n\t\t\treturn ':('\n\treturn s\n\nn = int(input())\ns = input()\nif n % 2 != 0:\n\tprint(':(')\nelse:\n\tleftcount = 0\n\trightcount = 0\n\tfor char in s:\n\t\tif char == '(':\n\t\t\tleftcount += 1\n\t\tif char == ')':\n\t\t\trightcount += 1\n\tneeded = n // 2\n\tif max(leftcount,rightcount) > needed:\n\t\tprint(':(')\n\telse:\n\t\tleftneeded = (n // 2) - leftcount\n\t\tleftadded = 0\n\t\tnewchars = []\n\t\tfor char in s:\n\t\t\tif char == '?':\n\t\t\t\tif leftadded < leftneeded:\n\t\t\t\t\tnewchars.append('(')\n\t\t\t\t\tleftadded += 1\n\t\t\t\telse:\n\t\t\t\t\tnewchars.append(')')\n\t\t\telse:\n\t\t\t\tnewchars.append(char)\n\t\tprint(check(''.join(newchars)))", "import sys\nsys.setrecursionlimit(20000000)\ninput = sys.stdin.readline\nn = int(input())\ns = input().rstrip()\nans = []\ncount = 0\nfor i in s:\n    if i == \"(\":\n        ans.append(1)\n    elif i == \")\":\n        ans.append(-1)\n    else:\n        ans.append(0)\n        count +=1\nx = sum(ans)\nif abs(x) > count or  x%2 != count%2:\n    print(\":(\")\n    return\nhi = (x + count)//2\nmi = count - hi\nfor i in range(n):\n    if ans[i] == 0 and mi:\n        ans[i] = 1\n        mi-=1\n    elif ans[i] == 0:\n        ans[i] = -1\nrui = [0]*(n+1)\nfor i in range(n):\n    rui[i+1] = rui[i]+ans[i]\n    if rui[i+1] <= 0 and i != n-1:\n        print(\":(\")\n        return\n    if ans[i] == 1:\n        ans[i] = \"(\"\n    else:\n        ans[i] = \")\"\nprint(\"\".join(ans))", "n = int(input())\ns = list(input())\nif n % 2 == 1:\n    print(\":(\")\nelse:\n    op = n // 2 - s.count(\"(\")\n    for i in range(n):\n        if s[i] == \"?\":\n            if op > 0:\n                s[i] = \"(\"\n            else:\n                s[i] = \")\"\n            op -= 1\n    #print(\"\".join(s))\n    b = 0\n    for i in range(n):\n        if s[i] == \")\":\n            b -= 1\n        else:\n            b += 1\n        if i != n - 1 and b <= 0:\n            print(\":(\")\n            break\n    else:\n        if b == 0:\n            print(\"\".join(s))\n        else:\n            print(\":(\")\n", "n = int(input())\ns = list(input())\ndef findbal(a, th=0):\n    b = 0\n    for c in a:\n        if c == '(':\n            b += 1\n        elif c == ')':\n            b -= 1\n            if th > 0 and b < th:\n                return b\n    return b\n\ncan = s[ 0 ] != ')' and s[ -1 ] != '(' and (n%2) == 0\nif can:\n    s[ 0 ] = '('\n    s[ -1 ] = ')'\n    b = findbal(s)\n    q = sum([1 if c == '?' else 0 for c in s])\n    q -= b\n    q = q // 2\n    if q < 0:\n        can = False\n    for i in range( n ):\n        if s[ i ] == '?':\n            s[ i ] = '(' if q > 0 else ')'\n            q -= 1\n    can = findbal(s[:-1], 1) == 1\n\nif can:\n    print(\"\".join(s))\nelse:\n    print(\":(\")\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\ns=list(input().strip())\n\nif n%2==1:\n    print(\":(\")\n    return\n\nif n==2:\n    if s[0]==\")\" or s[1]==\"(\":\n        print(\":(\")\n        return\n\n    else:\n        print(\"()\")\n        return\n\nif s[0]==\")\" or s[1]==\")\" or s[-1]==\"(\" or s[-2]==\"(\":\n    print(\":(\")\n    return\n\ns[0]=\"(\"\ns[1]=\"(\"\ns[-1]=\")\"\ns[-2]=\")\"\n\nr=s.count(\"(\")\nl=s.count(\")\")\nq=s.count(\"?\")\n\nx=(l-r+q)//2\ny=(r-l+q)//2\n\nif x<0 or y<0:\n    print(\":(\")\n    return\n    \ncount=0\nfor i in range(n):\n    if s[i]==\"?\":\n        s[i]=\"(\"\n        count+=1\n\n    if count==x:\n        break\n\nfor j in range(i,n):\n    if s[j]==\"?\":\n        s[j]=\")\"\n\n\nNOW=1\nfor i in range(1,n-1):\n    if s[i]==\"(\":\n        NOW+=1\n    else:\n        NOW-=1\n\n    if NOW==0:\n        print(\":(\")\n        return\n\nprint(\"\".join(s))\n\n        \n", "n = int(input())\nif n % 2:\n    print(':(')\n    return\ns = list(input())\nans = ''\nc1, c2 = s.count('('), s.count(')')\ncnt90 = 0\ncnt9, cnt0 = 0, 0\nfor i in s[:-1]:\n    if i == '(':\n        cnt90 += 1\n        if cnt9 + cnt90 > n // 2:\n            print(':(')\n            return\n        ans += i\n    elif i == ')':\n        cnt0 += 1\n        if cnt0 > n // 2:\n            print(':(')\n            return\n        ans += i\n    else:\n        if cnt9 + c1 < n // 2:\n            ans += '('\n            cnt9 += 1\n        else:\n            ans += ')'\n            cnt0 += 1\n    if cnt90 + cnt9 <= cnt0:\n        print(':(')\n        return\nif s[-1] == '(' or cnt9 + cnt90 != n // 2:\n    print(':(')\n    return\nprint(ans + ')')", "input()\ns = input()\nif len(s) & 1:\n    print(':(')\n    raise SystemExit(0)\nmax_open, min_open = 0, 0\nstarted = False\n\nq_mark = 0\nop = 0\ncl= 0\nended = False\n\nfor c in s:\n    if ended:\n        print(':(')\n        raise SystemExit(0)\n    if min_open <= 0 and started:\n        min_open = 1\n    started = True\n    if c == '(':\n        op += 1\n        max_open += 1\n        min_open += 1\n    elif c == ')':\n        cl += 1\n        max_open -= 1\n        min_open -= 1\n    else:\n        q_mark += 1\n        max_open += 1\n        min_open -= 1\n    if max_open < 1:\n        ended = True\n\nif min_open != 0:\n    print(':(')\n    raise SystemExit(0)\n\ns = list(s)\nopen_count = len(s) // 2 - op\nfor i in range(len(s)):\n    if s[i] == '(':\n        op -= 1\n    elif s[i] == ')':\n        cl -= 1\n    elif s[i] == '?':\n        if open_count == 0:\n            s[i] = ')'\n        else:\n            s[i] = '('\n            open_count -= 1\nprint(''.join(s))\n", "n = int(input())\nl = list(input())\n\nif n % 2 == 1:\n    print(':(')\n    return\n\nif n == 2:\n    if l[0] == ')' or l[1] == '(':\n        print(':(')\n    else:\n        print('()')\n    return\n\nif l[0] == ')' or l[1] == ')' or l[-1] == '(' or l[-2] == '(':\n    print(':(')\n    return\n\nl[0] = '('\nl[1] = '('\nl[-1] = ')'\nl[-2] = ')'\n\np = l.count(')') - l.count('(')\nq = l.count('?')\n\na = (q + p) // 2\nb = q - a\n\ncnt = 0\nfor i in range(len(l)):\n    if l[i] == '?':\n        if cnt < a:\n            l[i] = '('\n        else:\n            l[i] = ')'\n        cnt += 1\n\ncnt = 0\nfor p,i in enumerate(l):\n    if i == '(':\n        cnt += 1\n    else:\n        cnt -= 1\n    if cnt == 0 and p != n - 1:\n        print(':(')\n        return\nelse:\n    if cnt != 0:\n        print(':(')\n        return\n\nprint(''.join(l))\n", "from itertools import accumulate\nN = int(input())\nS = input()\nif S[0] == ')' or S[-1] == '(' or N % 2 == 1:\n    print(':(')\n    return\nL = [0]*N\nposi = 0\nnega = 0\nfor i, s in enumerate(S):\n    if s == '(':\n        posi += 1\n        L[i] = 1\n        continue\n    elif s == ')':\n        nega += 1\n        L[i] = -1\n        continue\nrem = N - posi - nega\nsp = nega - posi\npi = (rem + sp)//2\nni = (rem - sp)//2\nif pi < 0 or ni < 0:\n    print(':(')\n    return\nLP = L.copy()\nfor i, a in enumerate(L):\n    if not a:\n        if pi > 0:\n            pi -= 1\n            LP[i] = 1\n        else:\n            LP[i] = -1\nif all([i > 0 for i in list(accumulate(LP))[:-1]]):\n    print(''.join([('', '(', ')')[l] for l in LP]))\n    return\nprint(':(')", "n = int(input())\ns = list(input())\nif n % 2:\n    print(':(')\n    return\nleft = s.count('(')\nright = s.count(')')\nplus = 0\nfor i in range(n):\n    if s[i] == '?':\n        if left < n // 2:\n            s[i] = '('\n            left += 1\n        else:\n            s[i] = ')'\n            right += 1\n    if s[i] == '(':\n        plus += 1\n    else:\n        plus -= 1\n    if i != n - 1 and plus <= 0:\n        print(':(')\n        return\nif left == n // 2 and right == n // 2:\n    print(''.join(s))\nelse:\n    print(':(')\n", "def fix(S):\n    N = len(S)\n    s=0\n    minS=0\n    for n in range(N):\n        if S[n] == '(':\n            s += 1\n        elif S[n] == ')':\n            s -= 1\n        minS = min(minS, s)\n    if minS < 0:\n        for n in range(N):\n            if S[n] == '?':\n                S[n] = '('\n                minS += 1\n                s += 1\n                if not minS: break\n    if s > 0:\n        for n in range(N-1,-1,-1):\n            if S[n] == '?':\n                S[n] = ')'\n                s -= 1\n                if not s: break\n    nq = 0\n    for n in range(N):\n        if S[n] == '?': nq += 1\n    if nq % 2: return False\n    added = 0\n    for n in range(N):\n        if S[n] == '?':\n            if added < nq//2:\n                S[n] = '('\n            else:\n                S[n] = ')'\n            added += 1\n    s=0\n    for n in range(N):\n        if S[n] == '(':\n            s += 1\n        else:\n            s -= 1\n        if s < 0: return False\n    if s: return False\n    return S\n\ndef sv():\n    N = int(input())\n    S = list(input())\n    if N%2: return False\n    if S[0] == ')' or S[N-1] == '(': return False\n    if N == 2:\n        print('()')\n        return True\n    f = fix(S[1:-1])\n    if not f: return False\n    print('(%s)' % ''.join(f))\n    return True\n\nif not sv():\n    print(':(')\n", "n=int(input().strip())\nss=input().strip()\nq=0\nfor k in range(n):\n    if(ss[k]==\"(\"):\n        q+=1\nii=(n//2)-q\ncount=0\ns=\"\"\nif(n%2!=0):\n    print(\":(\")\nelif(ii<0):\n    print(\":(\")\nelse:\n for k in range(n):\n    if(ss[k]==\"?\" and count<ii):\n        s=s+\"(\"\n        count+=1\n    elif(ss[k]==\"?\" and count>=ii):\n        s=s+\")\"\n    elif(ss[k]==\"(\"):\n        s=s+\"(\"\n    else:\n        s=s+\")\"\n c2=0\n c3=0\n for  k in range(n-1):\n     if s[k]==\"(\":\n       c2+=1\n     else:\n       c3+=1\n     if(c3>=c2):\n         print(\":(\")\n         break\n else:\n     if s[n-1]==\"(\":\n       c2+=1\n     else:\n       c3+=1\n     if(c2!=c3):\n         print(\":(\")\n     else:\n         print(s)", "n = int(input())\ns = list(input())\nl, r = s.count('('), s.count(')')\nfor i in range(n):\n\tif s[i] == '?':\n\t\tif l + l < n:\n\t\t\ts[i] = '('\n\t\t\tl += 1\n\t\telse:\n\t\t\ts[i] = ')'\ncnt = 0\nfor i in range(n):\n\tcnt += 1 if s[i] == '(' else -1\n\tif cnt < 1 and i < n - 1:\n\t\tprint(':(')\n\t\treturn\n\telif cnt != 0 and i == n - 1:\n\t\tprint(':(')\n\t\treturn\nprint(''.join(s))", "from collections import Counter\nn = int(input())\ns = input()\nc = Counter(s)\nif n & 1 or c['('] > (n // 2) or c[')'] > (n // 2):\n    print(\":(\")\nelse:\n    f1 = n // 2 - c['(']\n    f2 = n // 2 - c[')']\n    r = []\n    for v in s:\n        if v == \"?\":\n            if f1 > 0:\n                r.append(\"(\")\n                f1 -= 1\n            else:    \n                r.append(\")\")\n                f2 -= 1\n        else:\n            r.append(v)\n    cnt = 0        \n    for i, v in enumerate(r):\n        if v == \"(\":\n            cnt += 1\n        else:    \n            cnt -= 1\n        if i < n-1 and cnt <= 0:\n            print(\":(\")\n            break\n    else:\n        print(\"\".join(r))\n\n", "import io, sys, atexit, os\n\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\nmm = 1000000007\n\n\n\ndef solve ():\n\tt = 1\n\tfor it in range (t):\n\t\tn=nu()\n\t\ts=list(input())\n\t\tif(n%2==1):\n\t\t\tprint(\":(\")\n\t\telse:\n\t\t\tgg=0\n\t\t\tfor i in range(n):\n\t\t\t\tif(s[i]==\"(\"):\n\t\t\t\t\tgg+=1\n\t\t\tif(gg>n//2):\n\t\t\t\tprint(\":(\")\n\t\t\t\tcontinue\n\t\t\tdd=n//2-gg\n\t\t\tfor i in range(n):\n\t\t\t\tif(s[i]==\"?\"):\n\t\t\t\t\tif(dd>0):\n\t\t\t\t\t\ts[i]=\"(\"\n\t\t\t\t\t\tdd-=1\n\t\t\t\t\telse:\n\t\t\t\t\t\ts[i]=\")\"\n\t\t\txc=[0]*n\n\t\t\tss=0\n\t\t\tfor i in range(n):\n\t\t\t\tif(s[i]==\"(\"):\n\t\t\t\t\tss+=1\n\t\t\t\telse:\n\t\t\t\t\tss-=1\n\t\t\t\txc[i]=ss\n\t\t\tfl=True\n\t\t\tfor i in range(n-1):\n\t\t\t\tif(xc[i]<=0):\n\t\t\t\t\tfl=False\n\t\t\tif(xc[n-1]!=0):\n\t\t\t\tfl=False\n\t\t\tif(fl):\n\t\t\t\tfor i in range(n):\n\t\t\t\t\tprint(s[i],end=\"\")\n\t\t\t\tprint()\n\t\t\telse:\n\t\t\t\tprint(\":(\")\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "import sys\n\ndef main():\n\tn = int(input())\n\t\n\ts = list(sys.stdin.readline())\n\tf, ouv = 0, 0\n\t\n\tfor i in range(n):\n\t\tif s[i] == '?' or s[i] == '(':\n\t\t\touv += 1\n\t\telse:\n\t\t\tf +=1\n\t\t\touv -= 1\n\t\t#print(i, f, ouv, file = sys.stderr)\n\t\tif i < n-1 and ouv <= 0:\n\t\t\tprint(':(')\n\t\t\treturn\n\n\tf, ouv = 0, 0\n\n\tfor i in range(n):\n\t\tif s[n-1-i] == '?' or s[n-1-i] == ')':\n\t\t\tf += 1\n\t\telse:\n\t\t\touv +=1\n\t\t\tf -= 1\n\t\t#print(n-1-i, f, ouv, file = sys.stderr)\n\t\tif i < n-1 and f <= 0:\n\t\t\tprint(':(')\n\t\t\treturn\n\n\tif n%2 == 1:\n\t\tprint(':(')\n\t\treturn\n\n\tk = n//2 - ouv\n\n\tfor i in range(n):\n\t\tif s[i] == '?' and k != 0:\n\t\t\ts[i] = '('\n\t\t\tk-=1\n\t\telif s[i] == '?':\n\t\t\ts[i] = ')'\n\n\tprint(*s, sep='')\n\nmain()", "length=int(input())\nstring=input()\nLeftParens=0\nquestionMarks=0\nimposs=False\nmoreLeftAndQ=0\nmoreRightAndQBack=0\nif length % 2 == 1:\n    imposs=True\nfor i in range(length-1):\n    if string[i]==\"(\":\n        LeftParens+=1\n        moreLeftAndQ+=1\n    elif string[i]==\")\":\n        moreLeftAndQ-=1\n        if moreLeftAndQ<1:\n            imposs=True\n            break\n    else:\n        moreLeftAndQ+=1\n    if string[length-i-1]==\"(\":\n        moreRightAndQBack-=1\n        if moreRightAndQBack<1:\n            imposs=True\n            break\n    elif string[length-i-1]==\")\":\n        moreRightAndQBack+=1\n    else:\n        moreRightAndQBack+=1\n        \nif imposs:\n    print(\":(\")\nelse:\n    newString=\"\"\n    for i in range(length):\n            if string[i]==\"?\":\n                if (length/2)-LeftParens>0:\n                    newString=newString+\"(\"\n                    LeftParens+=1\n                else:\n                    newString=newString+\")\"\n            else:\n                newString=newString+string[i]\n    print(newString)", "# -*- coding: utf-8 -*-\n# @Time    : 2019/4/13 22:44\n# @Author  : LunaFire\n# @Email   : gilgemesh2012@gmail.com\n# @File    : C. Serval and Parenthesis Sequence.py\n\n\ndef main():\n    n = int(input())\n    s = list(input())\n\n    temp_count = 0\n    for c in s:\n        if c == '(':\n            temp_count += 1\n\n    stack = []\n    for i in range(n):\n        if i == n - 1 and (len(stack) != 1 or s[i] == '('):\n            print(':(')\n            return\n\n        if s[i] == '(':\n            stack.append(s[i])\n        elif s[i] == ')':\n            if not stack:\n                print(':(')\n                return\n            stack.pop()\n        else:\n            if i != n - 1 and temp_count < n // 2:\n                s[i] = '('\n                stack.append('(')\n                temp_count += 1\n            else:\n                s[i] = ')'\n                stack.pop()\n\n        if i != n - 1 and not stack:\n            print(':(')\n            return\n        # print(s)\n\n    print(''.join(s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import string, copy\n\n\ndef solution(s):\n    if len(s) == 0:\n        return ''\n    if len(s) % 2 == 1:\n        return ':('\n\n    if s[0] not in '(?':\n        return ':('\n    if s[-1] not in ')?':\n        return ':('\n\n    s = s[1:-1]\n    n = len(s)\n    n1 = s.count('(')\n    n2 = s.count(')')\n\n    if n1 > n // 2 or n2 > n // 2:\n        return ':('\n\n    n1 = n // 2 - n1\n    n2 = n // 2 - n2\n    ans = []\n    for i in range(len(s)):\n        if s[i] != '?':\n            ans.append(s[i])\n        elif n1 > 0:\n            ans.append('(')\n            n1 -= 1\n        else:\n            ans.append(')')\n\n    n = 0\n    for c in ans:\n        if c == '(':\n            n += 1\n        else:\n            n -= 1\n        if n < 0:\n            return ':('\n\n    if n != 0:\n        return ':('\n\n    return \"(%s)\" % ''.join(ans)\n\n\ndef parser():\n    n = int(input())\n    s = input()\n    return s\n\n\ndef output(s):\n    print(s)\n\n\ndef main():\n   args = parser()\n   result = solution(args)\n   output(result)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\nimport sys\n\ndef rint():\n    return list(map(int, sys.stdin.readline().split()))\n#lines = stdin.readlines()\n\nn = int(input())\ns = input()\n\no = s.count('(')\nc = s.count(')')\nans = []\ncnt = 0\n\nok = 0\nfor i in range(n):\n    ans.append(s[i])\n\noc = o - c\nif oc > 0:\n    for i in range(n-1, -1, -1):\n        if oc == 0:\n            break\n        if ans[i] =='?':\n            ans[i] = ')'\n            oc -= 1\n    if oc !=0:\n        print(':(')\n        return\n#print(ans)\nqc = n - o - c - (o-c)\n#print(qc)\nif qc%2:\n    print(':(')\n    return\n\nq = 0\nfor i in range(n):\n    if q == qc:\n        break\n    if ans[i] == '?':\n        if q < qc//2:\n            ans[i] = '('\n        else:\n            ans[i] = ')'\n        q += 1\n#print(ans)\ncnt = 0\nfor i in range(n):\n    if ans[i] == '(':\n        cnt += 1\n    elif ans[i] == ')':\n        cnt -= 1\n    if cnt <= 0 and i != n-1:\n        print(':(')\n        return\n#print(cnt)\nif cnt != 0:\n    print(':(')\n    return\nprint(''.join(ans))\n\n\n\n\n"]