["def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\na = li()\nans = 0\ncnt = [0] * (10 ** 5 + 10)\ncur = set()\nfor ai in a:\n    cnt[ai] = len(cur)\n    cur.add(ai)\nans = sum(cnt)\nprint(ans)", "def main():\n    #string     input()\n    #strList    input().split()\n    n = int(input())\n    #integers   map(int, input().split())\n    a = list(map(int, input().split()))\n    uniques = [0] * (n - 1) + [1]\n    bools = [True] * 100001\n    bools2 = [True] * 100001\n    bools[a[-1]] = False\n    for i in range(n - 2, 0, -1):\n        temp = 0\n        if bools[a[i]]:\n            bools[a[i]] = False\n            temp = 1\n        uniques[i] = uniques[i + 1] + temp\n    ret = 0\n    for i in range(n - 1):\n        if bools2[a[i]]:\n            bools2[a[i]] = False\n            ret += uniques[i + 1]\n    print(ret)\n    return 0\nmain()\n", "n = int(input())\na = [int(x) for x in input().strip().split()]\n\nf = dict()\nb = dict()\nfor i in range(len(a)):\n    if a[i] not in f:\n        f[a[i]] = i\n    if a[n-1-i] not in b:\n        b[a[n-1-i]] = n-1-i\n\nf = sorted([v, k] for k, v in list(f.items()))\nb = sorted([v, k] for k, v in list(b.items()))\n\nans = 0\nbi = 0\nfor i, v in f:\n    while bi < len(b) and i >= b[bi][0]:\n        bi += 1\n    ans += len(b) - bi\n\nprint(ans)\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nMAX_NUM = 100010\nmet_forw = [False] * MAX_NUM\nmet_backw = [False] * MAX_NUM\nunique_n_backw = [0] * n\n\nfor i in range(n - 1, -1, -1):\n    if i < n - 1:\n        unique_n_backw[i] = unique_n_backw[i + 1]\n    if not met_backw[a[i]]:\n        met_backw[a[i]] = True\n        unique_n_backw[i] += 1\n\nanswer = 0\nfor i in range(n - 1):\n    if not met_forw[a[i]]:\n        met_forw[a[i]] = True\n        answer += unique_n_backw[i + 1]\n\nprint(answer)\n", "n = int(input())\nl = [int(el) for el in input().split()]\ncol = 0\na = [0] * 100001\ns = set()\nfor i in range(n):\n    if a[l[i]] == 0:\n        col += len(s)\n        a[l[i]] += len(s)\n        s.add(l[i])\n    else:\n        col += len(s) - a[l[i]]\n        a[l[i]] = len(s)\n        s.add(l[i])\nprint(col)\n", "n=int(input())\na=list(map(int,input().split()))\nb=set()\nc=[]\ns=0\nfor i in a:\n\tif not i in b:\n\t\ts+=1\n\t\tb.add(i)\n\tc.append(s)\nb=set()\nans=0\nfor i in range(n-1,0,-1):\n\tif not a[i] in b:\n\t\tans+=c[i-1]\n\t\tb.add(a[i])\nprint(ans)", "import sys\nimport os\n\ndef extract(a):\n    d = dict()\n    r = []\n    for e in a:\n        if not e in d:\n            r.append(1)\n            d[e] = d\n        else:\n            r.append(0)\n\n    return r\n\ndef sonyaAndRobots(n, a):\n    t1 = extract(a)\n    t2 = list(reversed(extract(reversed(a))))\n\n    for i in range(n - 1):\n        t1[i + 1] += t1[i]\n\n    result = 0\n    for i in range(n - 1):\n        result += t1[i] * t2[i + 1]\n\n    return result\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(sonyaAndRobots(n, a))\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\nright = list()\ns = set()\n\nfor el in a[::-1]:\n    s.add(el)\n    right.append(len(s))\n\nright = right[::-1]\n\ns = set()\nans = 0\n\nfor i, el in enumerate(a[:-1]):\n    if el not in s:\n        ans += right[i + 1]\n\n    s.add(el)\n\nprint(ans)\n", "n=int(input())\narr=list(map(int,input().split()))\ndic={}\ndic2={}\nansar=[]\nfor i in range(n):\n\tdic[arr[i]]=0\n\tdic2[arr[i]]=0\n\tansar.append(0)\ncount=0\nfor i in range(n-1,0,-1):\n\tif dic[arr[i]]==0:\n\t\tcount+=1\n\t\t\n\t\tdic[arr[i]]=1\n\tansar[i-1]=count\t\n#print(ansar)\nanswer=0\nfor i in range(n-1):\n\tif dic2[arr[i]]==0:\n\t\tanswer+=ansar[i]\n\t\tdic2[arr[i]]=1\nprint(answer)\t", "n = int(input())\na = list(map(int, input().split()))\n\ndic = {}\nfor i in range(len(a) - 1):\n    if a[i] not in dic:\n        dic[a[i]] = 1\n    else:\n        dic[a[i]] += 1\n\nbeen = set([])\ncnt = 0\nfor i in range(len(a) - 1, 0, -1):\n    if a[i] not in been:\n        cnt += len(dic)\n        been.add(a[i])\n    dic[a[i - 1]] -= 1\n    if (dic[a[i - 1]] == 0):\n        del dic[a[i - 1]]\nprint(cnt)\n", "n=int(input())\na=list(map(int,input().split()))\nb=a[:]\ns=set()\nfor i in range(n):\n    if(a[i] in s):\n        a[i]=0\n    else:\n        s.add(a[i])\ns=set()\nc=[0]*n\nc[n-1]=1\nfor i in range(n-1,-1,-1):\n    if(b[i] in s):\n        b[i]=0\n        c[i]=c[i+1]\n    else:\n        s.add(b[i])\n        if(i<n-1):\n            c[i]=c[i+1]+1\nans=0\nfor i in range(n-1):\n    if(a[i]):\n        ans+=c[i+1]\nprint(ans)", "n = int(input())\na = [int(x) for x in input().split()]\ns = set()\nd = dict()\nc = [0] * n\nfor i in range(n-1, -1, -1):\n    c[i] = len(s)\n    s.add(a[i])\n    d[a[i]] = i\nans = 0\nfor k in list(d.keys()):\n    pos = d[k]\n    ans += c[pos]\nprint(ans)\n\n", "from collections import defaultdict\nn = int(input())\narr = list(map(int,input().split()))\nlist1 = [False]*(10**5+1)\nd = defaultdict(int)\ncount = 0 \nfor i in range(n):\n\td[arr[i]] += 1\nfor i in range(n-1):\n\td[arr[i]] -= 1\n\tif(d[arr[i]] == 0):\n\t\tdel(d[arr[i]])\n\tif list1[arr[i]] == False:\n\t\tcount += len(list(d.items()))\n\t\tlist1[arr[i]] = True\n\n\nprint(count)\n", "from collections import defaultdict\n\nn = int(input())\n\na = list(map(int, input().split()))\n\ncounts = defaultdict(int)\n\nfor x in a:\n    counts[x] += 1\n\nkeys = set()\nc = len(counts)\nans = 0\n\nfor x in a[:-1]:\n    if x not in keys:\n        keys.add(x)\n        counts[x] -= 1\n        if counts[x] == 0:\n            c -= 1\n        ans += c\n    else:\n        counts[x] -= 1\n        if counts[x] == 0:\n            c -= 1\nprint(ans)", "\n\ndef main():\n\tn = int(input())\n\ta = tuple(map(int, input().split()))\n\tseen = set()\n\tcount = 0\n\tdistinct = [0]\n\tfor x in reversed(a):\n\t\tif x in seen:\n\t\t\tdistinct.append(distinct[-1])\n\t\t\tcontinue\n\t\tseen.add(x)\n\t\tdistinct.append(distinct[-1]+1)\n\tdistinct.pop()\n\tseen.clear()\n\t#print(tuple(reversed(distinct)))\n\tfor x, distinct_right in zip(a, reversed(distinct)):\n\t\t#print(x, distinct_right)\n\t\tif x in seen:\n\t\t\tcontinue\n\t\tseen.add(x)\n\t\tcount += distinct_right\n\n\tprint(count)\nmain()", "n = int(input())\nA = list(map(int, input().split()))\nleft = [0 for _ in range(10**5 + 1)]\nright = [0 for _ in range(10**5 + 1)]\nr_non0 = 0\nfor a in A:\n    if right[a] == 0:\n        r_non0 += 1\n    right[a] += 1\nans = 0\nfor i in range(n):\n    left[A[i]] += 1\n    right[A[i]] -= 1\n    if right[A[i]] == 0:\n        r_non0 -= 1\n    if left[A[i]] == 1:\n        ans += r_non0\nprint(ans)", "n = int(input())\npositions = input().split()\ns1 = set()\nl1 = [1] * (n - 1)\ns2 = set()\nl2 = []\ncount = 0\nfor i in range(n - 1):\n    if positions[i] in s1:l1[i] = 0\n    s1.add(positions[i])\nfor i in range(n - 1):\n    s2.add(positions[-1 - i])\n    l2.append(len(s2))\nfor i in range(n - 1):\n    count+=l1[i] * l2[-1 - i]\nprint(count)", "from collections import defaultdict\n\nn = int(input())\na = [int(i) for i in input().split()]\n\ndone = set()\nd = defaultdict(int)\n\nfor i in a:\n    d[i] += 1\n\nc = len(list(d.keys()))\ntotal = 0\nfor i in (a):\n    d[i] -= 1\n    if d[i] == 0:\n        c -= 1\n\n    if i not in done:\n        total += c\n        done.add(i)\n\n\nprint(total)\n\n\n", "n = int(input())\na = input().split(\" \")\nfor i in range(n):\n    a[i] = int(a[i])\nlu = {}\nfor i in range(n):\n    lu[a[i]] = []\nfor i in range(n):\n    lu[a[i]].append(i)\nmins = []\nmaxes = []\nfor val in lu.values():\n    mins.append(min(val))\n    maxes.append(max(val))\nkey_num = len(lu.keys())\nmins.sort()\nmaxes.sort()\n# print(mins)\n# print(maxes)\nind = 0\npairs = 0\ncounter = key_num\nfor i in range(len(mins)):\n    while maxes[ind] <= mins[i]:\n        if ind == len(maxes) - 1:\n            counter = 0\n            break\n        else:\n            ind += 1\n            counter -= 1\n    pairs += counter\n    # print(counter)\nprint(pairs)", "n=int(input())\nl=list(map(int,input().split()))\nmaxl=max(l)+1\ndp=[]\nfor i in range(maxl):\n    dp.append([-1,-1])\nfor i in range(n):\n    dp[l[i]][1]=i\nfor i in range(n-1,-1,-1):\n    dp[l[i]][0]=i\nll=[]\nlr=[]\nfor i in range(n):\n    ll.append(0)\n    lr.append(0)\ncnt = 0\nfor i in range(maxl):\n    if(dp[i][0]!=-1):\n        ll[dp[i][0]]=1\n        lr[dp[i][1]]=1\n        cnt+=1\nans = 0\n\nfor i in range(n):\n    if(lr[i]==1):\n        cnt-=1\n    if(ll[i]==1):\n        ans+=cnt\nprint(ans)", "n = int(input())\nA = list(map(int, input().split()))\nres_set = set()\ntmp_set = set()\nNumList = [0 for i in range(n)]\nfor i in range(n - 1, -1, -1):\n    tmp_set.add(A[i])\n    NumList[i] = len(tmp_set)\nans = 0\nfor i in range(n - 1):\n    if not (A[i] in res_set):\n        res_set.add(A[i])\n        ans += NumList[i + 1]\n#print(NumList)\n#print(res_set)\nprint(ans)\n", "n=int(input())\ns=list(map(int,input().split()))\ndist=[]\np=[0 for i in range(100005)]\ndiff=0\nfor i in range(n-1,-1,-1):\n    if p[s[i]]==0:\n        p[s[i]]=1\n        diff+=1\n    else:\n        p[s[i]]+=1\n    dist+=[diff]\nvis=[0 for i in range(100005)]\nans=0\nfor i in range(n-1):\n    if vis[s[i]]==0:\n        ans+=dist[n-i-2]\n        vis[s[i]]=1\nprint(ans)", "n=int(input())\nnums = list(map(int, input().split()))\nleft = {}\n\nfor i in range(n):\n    if nums[i] in list(left.keys()):\n        left[nums[i]] += 1\n    else:\n        left[nums[i]] = 1\n\ncount = 0\ndone = set()\nfor i in nums:\n    left[i] -= 1\n    if left[i] == 0:\n        del left[i]\n    if i not in done:\n        count += len(list(left.keys()))\n        done.add(i)\n\nprint(count)\n", "n = int(input())\na = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    if d.get(a[i]) == None:\n        d[a[i]] = 1\n    else:\n        d[a[i]] += 1\ncount = 0\nused = set()\nfor i in range(n):\n    d[a[i]] -= 1\n    if d[a[i]] == 0:\n        del d[a[i]]\n    if a[i] not in used:\n        count += len(d)\n    used.add(a[i])\nprint(count)\n"]