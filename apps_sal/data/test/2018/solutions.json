["from math import gcd\nn, m, q = map(int, input().split())\nd = gcd(n, m)\nx = n // d\ny = m // d\nfor _ in range(q):\n    sx, sy, ex, ey = map(int, input().split())\n    p1 = 0\n    p2 = 0\n    if sx == 1:\n        p1 = (sy - 1) // x\n    else:\n        p1 = (sy - 1) // y\n    if ex == 1:\n        p2 = (ey - 1) // x\n    else:\n        p2 = (ey - 1) // y\n    if p1 == p2:\n        print('YES')\n    else:\n        print('NO')", "from math import gcd\nn, m, q = map(int, input().split())\ng = gcd(n, m)\nlc = n // g * m\nfor __ in range(q):\n    sx, sy, ex, ey = map(int, input().split())\n    sy -= 1\n    ey -= 1\n    sy *= m if sx == 1 else n\n    ey *= m if ex == 1 else n\n    print('YES' if sy // lc == ey // lc else 'NO')", "def main():\n    import sys\n    input = sys.stdin.readline\n    \n    def gcd(a, b):\n        while b:\n            a, b = b, a % b\n        return a\n    \n    n, m, q = map(int, input().split())\n    g = gcd(n, m)\n    n //= g\n    m //= g\n    \n    for i in range(q):\n        s, x, t, y = map(int, input().split())\n        x -= 1\n        y -= 1\n        if s == 1:\n            x //= n\n        else:\n            x //= m\n        if t == 1:\n            y //= n\n        else:\n            y //= m\n        if x == y:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    \n    return 0\n\nmain()", "def solve(x1, y1, x2, y2):\n    if x1 == x2:\n        if x1 == 1:\n            return (y1 - 1) // n1 == (y2 - 1) // n1\n        else:\n            return (y1 - 1) // m1 == (y2 - 1) // m1\n    else:\n        if x1 == 1:\n            return (y1 - 1) // n1 == (y2 - 1) // m1\n        else:\n            return (y1 - 1) // m1 == (y2 - 1) // n1\n\ngcd = lambda a, b: a if b == 0 else gcd(b, a % b)\nn, m, q = map(int, input().split())\nk = gcd(n, m)\nn1 = n // k\nm1 = m // k\nres = []\nfor i in range(q):\n    sx, sy, ex, ey = map(int, input().split())\n    res.append(\"YES\" if solve(sx, sy, ex, ey) else \"NO\")\nprint('\\n'.join(res))", "import math\n\nn, m, q = list(map(int, input().split()))\nd = math.gcd(n, m)\nnd, md = n // d, m // d\n\nfor _ in range(q):\n    x, y, u, v = list(map(int, input().split()))\n    y -= 1\n    v -= 1\n    if x == 1:\n        y //= nd\n    else:\n        y //= md\n    if u == 1:\n        v //= nd\n    else:\n        v //= md\n    if y == v:\n        print('YES')\n    else:\n        print('NO')\n", "from math import gcd\n\n\nn, m, q = list(map(int, input().split()))\ng = gcd(n, m)\nsn, sm = n // g, m // g\nfor i in range(q):\n\tsx, sy, ex, ey = list(map(int, input().split()))\n\tif sx == 1:\n\t\tt1 = (sy - 1) // sn\n\telse:\n\t\tt1 = (sy - 1) // sm\n\tif ex == 1:\n\t\tt2 = (ey - 1) // sn\n\telse:\n\t\tt2 = (ey - 1) // sm\n\tif t1 == t2:\n\t\tprint('YES')\n\telse:\n\t\tprint('NO')\n", "n, m, q = map(int, input().split())\nfrom math import gcd\ng = gcd(n, m)\nout = []\nn //= g\nm //= g\nfor _ in range(q):\n    sx, sy, ex, ey = map(int, input().split())\n    sy -= 1\n    ey -= 1\n    sp = sy // (n if sx == 1 else m)\n    ep = ey // (n if ex == 1 else m)\n    out.append('YES' if sp == ep else 'NO')\nprint(*out, sep='\\n')", "import math\n\n(n, m, q) = list(map(int, input().split(' ')))\nlcm = n * m // math.gcd(n, m)\n\nfor i in range(0, q):\n    (x1, y1, x2, y2) = list(map(int, input().split(' ')))\n    p1 = int(0)\n    p2 = int(0)\n    if x1 == 1:\n        p1 = y1 * m\n    else:\n        p1 = y1 * n\n    if x2 == 1:\n        p2 = y2 * m\n    else:\n        p2 = y2 * n\n    if ((p1 - 1) // lcm) == ((p2 - 1) // lcm):\n        print('YES')\n    else:\n        print('NO')\n", "import math\n\ndef lcm(a, b):\n    return (a*b) // math.gcd(a, b)\n\nn, m, q = map(int, input().split())\n\nl = lcm(n, m)\n\nfor _ in range(q):\n\tsx, sy, ex, ey = map(int, input().split())\n\n\tsy -= 1\n\tey -= 1\n\n\tif sx==1:\n\t\ts_area = (m * sy) // l\n\telif sx==2:\n\t\ts_area = (n * sy) // l\n\tif ex==1:\n\t\te_area = (m * ey) // l\n\telif ex==2:\n\t\te_area = (n * ey) // l\n\n\tif s_area == e_area:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")", "import sys\ndef input():\n    return sys.stdin.readline()[:-1]\n\nn,m,q = list(map(int,input().split()))\n\ndef gcd(a,b):\n    a,b = max(a,b),min(a,b)\n    while a%b!=0:\n        a,b = b,a%b\n    return b\n\ng = gcd(n,m)\n\nfor i in range(q):\n    s1,s2,e1,e2 = list(map(int,input().split()))\n    if s1 == 1:\n        scheck = n//g\n    else:\n        scheck = m//g\n\n    if e1 == 1:\n        echeck = n//g\n    else:\n        echeck = m//g\n\n    if (s2-1)//scheck==(e2-1)//echeck:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "from math import gcd\nn, m, q = list(map(int, input().split()))\nkabe = gcd(n, m)\nn //= kabe\nm //= kabe\nfor i in range(q):\n    sx, sy, ex, ey = list(map(int, input().split()))\n    sy -= 1\n    ey -= 1\n    if sx == 1:\n        if ex == 1:\n            if sy//n == ey//n:\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if sy//(n) == ey//(m):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n    else:\n        if ex == 1:\n            if sy//(m) == ey//(n):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n        else:\n            if sy//(m) == ey//(m):\n                print(\"YES\")\n            else:\n                print(\"NO\")\n", "import math\n\nn, m, q = list(map(int, input().split()))\ng = math.gcd(n, m)\nnm1 = [1, 1, 1]\nnm1[1] = n // g\nnm1[2] = m // g\n\n\ndef bsn(x, y):\n    return (y - 1) // nm1[x]\n\n\nfor _ in range(q):\n    sx, sy, ex, ey = list(map(int, input().split()))\n    print(\"YES\" if bsn(sx, sy) == bsn(ex, ey) else \"NO\")\n", "import math\n(n,m,q)=map(int,input().split(' '))\nl=n*m//math.gcd(n,m)\nfor i in range(q):\n    (x1,y1,x2,y2)=map(int,input().split(' '))\n    f1=y1*m\n    f2=y2*m\n    if x1==2:\n        f1=y1*n\n    if x2==2:\n        f2=y2*n\n    if (f1-1)//l!=(f2-1)//l:\n        print('NO')\n    else:\n        print('YES')", "import sys\ninput = sys.stdin.readline\n\nn,m,q=list(map(int,input().split()))\n\nimport math\nGCD=math.gcd(n,m)\nk=n//GCD\nl=m//GCD\n\ndef div(x,y):\n    if x==1:\n        return (y-1)//k\n    else:\n        return (y-1)//l\n\n\nfor testcases in range(q):\n    sx,sy,ex,ey=list(map(int,input().split()))\n\n    if div(sx,sy)==div(ex,ey):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n\n\n\n    \n", "from sys import stdin\nfrom sys import setrecursionlimit as SRL; SRL(10**7)\nrd = stdin.readline\nrrd = lambda: list(map(int, rd().strip().split()))\n\n\ndef gcd(a,b):\n    if a%b==0:\n        return b\n    return gcd(b,a%b)\n\n\nn,m,q = rrd()\n\ng = gcd(n,m)\nn = n//g\nm = m//g\n\nwhile q:\n    sx, sy, ex, ey = rrd()\n    sy -= 1\n    ey -= 1\n    if sx == 1:\n        sy = sy//n\n    else:\n        sy = sy//m\n\n    if ex == 1:\n        ey = ey // n\n    else:\n        ey = ey // m\n\n    if sy == ey:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n    q -= 1\n\n\n\n", "import math\n\n(n, m, q) = input().split()\nn = int(n)\nm = int(m)\nq = int(q)\n\ngcd = math.gcd(n, m)\nlcm = n * m // gcd\nblock = lcm // gcd\nfor i in range(q):\n\ta, b, c, d = input().split()\n\n\ta = int(a)\n\tb = int(b)\n\tpa = 0\n\tpb = 0\n\n\tif a == 1:\n\t\tpa = lcm // n * b\n\telse:\n\t\tpa = lcm // m * b\n\n\tc = int(c)\n\td = int(d)\n\tif c == 1:\n\t\tpb = lcm // n * d\n\telse:\n\t\tpb = lcm // m * d\n\n\tif (pa - 1) // block == (pb - 1) // block:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "from fractions import gcd\n\narr=[int(x) for x in input().split()]\nt=gcd(arr[0],arr[1])\na=arr[0]//t\nb=arr[1]//t\nfor i in range(arr[2]):\n    nums=[int(x) for x in input().split()]\n    w=nums[1]-1\n    y=nums[3]-1\n    if nums[0]==1:\n        w=w//a\n    else:\n        w=w//b\n    if nums[2]==1:\n        y=y//a\n    else:\n        y=y//b\n    if w==y:\n        print(\"YES\")\n    else:\n        print(\"NO\")", "import sys\ninput=sys.stdin.readline\ndef gcd(x,y):\n    if x<y:\n        x,y=y,x\n    if y==0:\n        return x\n    return gcd(y,x%y)\n\nn,m,q=map(int,input().split())\ng=gcd(n,m)\nn_wall=n//g; m_wall=m//g\nfor _ in range(q):\n    a,b,c,d=map(int,input().split())\n    if a==1:\n        r1=(b+n_wall-1)//n_wall\n    else:\n        r1=(b+m_wall-1)//m_wall\n    if c==1:\n        r2=(d+n_wall-1)//n_wall\n    else:\n        r2=(d+m_wall-1)//m_wall\n    print('YES' if r1==r2 else 'NO')", "import math\n\ndef func(x, y):\n    return (x - 1) // y\n\n(n, k, q) = map(int, input().split(' '))\ngg = n * k // math.gcd(n, k)\nt = int(0)\nt = 1 * 2\nt = 3 * 4\nfor i in range(0, q):\n    (a, b, c, d) = map(int, input().split(' '))\n    y = int(0)\n    x = int(0)\n    if a == 1:\n        x = b * k\n    else:\n        x = b * n\n    if c == 1:\n        y = d * k\n    else:\n        y = d * n\n    if func(x, gg) == func(y, gg):\n        print('YES')\n    else:\n        print('NO')", "def gcd(a, b):\n    if a%b == 0:\n        return b\n    else :\n        return gcd(b, a % b)\n        \nn, m, q = list(map(int, input().split()))\ng = gcd(n, m)\nal = n * m // g\nxx = al // m\nyy = al // n\n\n\nwhile (q > 0):\n    q -= 1\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    if (x1 == 1):\n        a1 = (y1 - 1) // xx + 1\n    else:\n        a1 = (y1 - 1) // yy + 1\n\n    if (x2 == 1):\n        a2 = (y2 - 1) // xx + 1\n    else:\n        a2 = (y2 - 1) // yy + 1\n    \n    if (a1 == a2):\n        print('YES')\n    else:\n        print('NO')\n\n\n\n", "import math\nn, m, q = list(map(int, input().split()))\ng = math.gcd(n, m)\nfor qq in range(q):\n    a, b, c, d = list(map(int, input().split()))\n    if a == 1:\n        x = (b-1)//(n//g)\n    else:\n        x = (b-1)//(m//g)\n    if c == 1:\n        y = (d-1)//(n//g)\n    else:\n        y = (d-1)//(m//g)\n    if x == y:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n", "from sys import stdin\ndef gcd(a,b):\n    while b!=0:\n        t=int(a)\n        a=int(b)\n        b=t%a\n    return int(a)\ndef lcm(a, b):\n    return int((a*b)/gcd(a, b))\nn,m,q=list(map(int,stdin.readline().strip().split()))\nb=lcm(n,m)//n\na=lcm(n,m)//m\nfor i in range(q):\n    x,y,x1,y1=list(map(int,stdin.readline().strip().split()))\n    if (x==2):\n        w=y//b\n        if (y%b!=0):\n            w+=1\n    else:\n        w=y//a\n        if (y%a!=0):\n            w+=1\n\n    if (x1==2):\n        w1=y1//b\n        if (y1%b!=0):\n            w1+=1\n    else:\n        w1=y1//a\n        if (y1%a!=0):\n            w1+=1\n    if w==w1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n, m, q = list(map(int, input().split()))\n\n\ndef gcd(a, b):\n    while a != 0 and b != 0:\n        if a > b:\n            a = a % b\n        else:\n            b = b % a\n    return a + b\n\n\nouter_inner_gcd = gcd(n, m)\nline_outer_each = m // outer_inner_gcd\nline_inner_each = n // outer_inner_gcd\n\nfor _ in range(q):\n    sx, sy, ex, ey = list(map(int, input().split()))\n    if sx == 1:\n        lines_before_s = (sy - 1) // line_inner_each\n    elif sx == 2:\n        lines_before_s = (sy - 1) // line_outer_each\n\n    if ex == 1:\n        lines_before_e = (ey - 1) // line_inner_each\n    elif ex == 2:\n        lines_before_e = (ey - 1) // line_outer_each\n\n    if lines_before_e == lines_before_s:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "import sys\ninput = sys.stdin.readline\n\ndef gcd( a, b ):\n    if a < b:\n        a, b = b, a\n    while b:\n        a, b = b, a % b\n    return a\n\nn, m, q = list(map( int, input().split() ))\ng = gcd(n, m)\nn = n // g\nm = m // g\n\nfor _ in range( q ):\n    sx, sy, ex, ey = list(map( int, input().split() ))\n    a = ( sy - 1 ) // ( n if sx == 1 else m )\n    b = ( ey - 1 ) // ( n if ex == 1 else m )\n    print( \"YES\" if a == b else \"NO\" )\n"]