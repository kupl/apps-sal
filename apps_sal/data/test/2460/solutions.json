["import sys\nimport string\nfrom math import gcd\nimport getpass\nimport math\nfrom decimal import Decimal\nimport pprint\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n# sys.stdout = open('output.txt', 'w')\n\n\nn, m = ria()\nar = ria()\narc = []\nart = []\nres = []\nfor n, i in enumerate(ria()):\n    if i == 1:\n        art.append(ar[n])\n        res.append(0)\n    else:\n        arc.append(ar[n])\nnt = 0\nfor i in arc:\n    while nt != len(art) - 1 and abs(art[nt] - i) > abs(art[nt + 1] - i):\n        nt += 1\n    res[nt] += 1\n\nfor i in res:\n    print(i,end= ' ')", "n, m = list(map(int, input().split()))\nxs = list(map(int, input().split()))\nts = list(map(int, input().split()))\n\nps = [x for x, t in zip(xs, ts) if t == 0]\nds = [x for x, t in zip(xs, ts) if t == 1]\nans = [0] * m\n\ndi = 0\nfor pi, p in enumerate(ps):\n    while di < m - 1 and abs(ds[di] - p) > abs(ds[di + 1] - p):\n        di += 1\n\n    if di >= m:\n        ans[m - 1] += n - pi\n        break\n\n    ans[di] += 1\n\n\nprint(' '.join(map(str, ans)))\n", "n, m = list(map(int, input().split()))\nxs = [int(k) for k in input().split()]\nts = [int(k) for k in input().split()]\npos = [-1 for i in range(n + m)]\nif ts[0]:\n    pos[0] = 0\nfor i in range(1, n + m):\n    pos[i] = pos[i - 1]\n    if ts[i]:\n        pos[i] += 1\nresult = [0 for i in range(m)]\nleft = 0\nleftC = 0\nright = 0\nrightC = 0\nfor i in range(n + m):\n    if ts[i] == 0:\n        right = max(i, right)\n        while right + 1 < n + m and not ts[right]:\n            right += 1\n        mP, mD = 0, 20000000\n        if ts[left]:\n            mP = pos[left]\n            mD = xs[i] - xs[left]\n        if ts[right] and xs[right] - xs[i] < mD:\n            mD = xs[right] - xs[i]\n            mP = pos[right]\n        result[mP] += 1\n    else:\n        left = i\nprint(*result)\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nn,m = mints()\na = list(mints())\nb = list(mints())\nl = [None]*(n+m)\nr = [None]*(n+m)\nc = [0]*(n+m)\nx = None\nfor i in range(len(a)):\n\tl[i] = x\n\tif b[i] == 1:\n\t\tx = i\nx = None\nfor i in range(len(a)-1,-1,-1):\n\tr[i] = x\n\tif b[i] == 1:\n\t\tx = i\nfor i in range(len(a)):\n\tif b[i] == 0:\n\t\taa = a[i]\n\t\tll = l[i]\n\t\trr = r[i]\n\t\tif ll == None:\n\t\t\tif rr != None:\n\t\t\t\tc[rr] += 1\n\t\telif rr == None:\n\t\t\tc[ll] += 1\n\t\telse:\n\t\t\tif aa-a[ll] <= a[rr]-aa:\n\t\t\t\tc[ll] += 1\n\t\t\telse:\n\t\t\t\tc[rr] += 1\n\nfor i in range(len(a)):\n\tif b[i] == 1:\n\t\tprint(c[i], end=' ')\n", "def solve(n, m, x, t):\n    r = [0] * n\n    d = [0] * m\n    ans = [0] * m\n    cr = 0\n    cd = 0\n    for i in range(n+m):\n        if t[i]:\n            d[cd] = x[i]\n            cd += 1\n        else:\n            r[cr] = x[i]\n            cr += 1\n    cn = 0\n    for i in range(m-1):\n        mid = (d[i] + d[i+1]) // 2\n        while cn < n and r[cn] <= mid:\n            cn += 1\n            ans[i] += 1\n    ans[-1] += n - sum(ans)\n    return ' '.join(str(i) for i in ans)\n\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    x = [int(i) for i in input().split()]\n    t = [int(i) for i in input().split()]\n    print(solve(n, m, x, t))\n\n\nmain()\n", "n,m = map(int,input().split())\nxi = list(map(int,input().split()))\nti = list(map(int,input().split()))\nai = [0] * (m+2)\nar = [0] * (m+2)\nar[-1] = 10**11\nar[0] = -100000000000\nj = 1\nn2 = n + m\nfor i in range(n2):\n    if ti[i] == 1:\n        ar[j] = xi[i]\n        j += 1\ni1 = 0\ni2 = 1\nfor i in range(n2):\n        if ti[i] == 1:\n            i2 += 1\n            i1 += 1\n            continue\n        num = xi[i] - ar[i1]\n        num2 = ar[i2] - xi[i]\n        if num <= num2:\n            ai[i1] += 1\n        else:\n            ai[i2] += 1\nfor i in range(1,m+1):\n    print(ai[i],end=\" \")\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\nans = [0] * m\np = []\nfor i in range(n + m):\n    if t[i] == 1:\n        p.append(i)\nans[0] = p[0]\nfor i in range(m):\n    if i == m - 1:\n        ans[i] += n + m - p[i] - 1\n    else:\n        for j in range(p[i] + 1, p[i + 1]):\n            if a[j] - a[p[i]] <= a[p[i + 1]] - a[j]:\n                ans[i] += 1\n            else:\n                ans[i + 1] += 1\nprint(' '.join(map(str, ans)))\n", "n, m = map(int, input().split())\ndist = [int(x) for x in input().split()]\ntaxi = [int(x) for x in input().split()]\ndists = {}\nd = []\nfor person in range(len(taxi)):\n    if taxi[person]:\n        dists[dist[person]] = 0\n        d.append(dist[person])\nstart = 0\nd.append(10**11)\nfor person in range(len(taxi)):\n    if taxi[person] == 0:\n        while dist[person] > d[start + 1]:\n            start += 1\n        if abs(dist[person] - d[start]) <= abs(dist[person] - d[start + 1]):\n            dists[d[start]] += 1\n        else:\n            dists[d[start + 1]] += 1\nfor d in dists:\n    print(dists[d] if d!=10**11 else '', end=' ')\n\n", "import sys\n\nnum_riders, _ = list(map(int, next(sys.stdin).split()))\n\nhouses = list(map(int, next(sys.stdin).split()))\nis_rider = list(map(int, next(sys.stdin).split()))\n\ncurrent_left_driver = None\ncurrent_citizens = []\n\nresult = []\n\nfor house, is_rider in zip(houses, is_rider):\n    if is_rider:\n        if current_left_driver is None:\n            result.append(len(current_citizens))\n        else:\n            result.append(0)\n            for citizen in current_citizens:\n                if abs(citizen - current_left_driver) <= abs(citizen - house):\n                    result[-2] += 1\n                else:\n                    result[-1] += 1\n\n        current_citizens = []\n        current_left_driver = house\n    else:\n        current_citizens.append(house)\n\nresult[-1] += len(current_citizens)\n\nprint(' '.join(map(str, result)))\n", "n, m = list(map(int, input().split(' ')))\n\ndistances = list(map(int, input().split(' ')))\ntaxiDriver = list(map(int, input().split(' ')))\n\npeople = []\ndrivers = []\nresult = [0] * m\n\nfor i in range(len(distances)):\n  if(taxiDriver[i]):\n    drivers.append(distances[i])\n  else:\n    people.append(distances[i])\n\nj = 0\n\nfor person in people:\n  if (j + 1) < len(drivers):\n    while (j + 1) < len(drivers) and (drivers[j] - person) < (person - drivers[j + 1]) :\n      j += 1\n    \n    result[j] += 1\n  else:\n    result[j] += 1\n\nprint(' '.join(map(str, result)))\n\n", "n, m = list(map(int, input().split()))\narr = list(map(int, input().split()))\nt = list(map(int, input().split()))\ntaxi = list()\nfor i in range(len(arr)):\n    if t[i] == 1:\n        taxi.append(arr[i])\ntaxi2 = list()\nkek = 1\nfor i in range(len(taxi) - 1):\n    taxi2.append([kek, taxi[i] + (taxi[i + 1] - taxi[i]) // 2])\n    kek = taxi[i] + (taxi[i + 1] - taxi[i]) // 2 + 1\ntaxi2.append([kek, arr[-1]])\ntaxi3 = [0] * m\nj = 0\nfor i in range(len(arr)):\n    if arr[i] > taxi2[j][1]:\n        j += 1\n    if t[i] != 1:\n        taxi3[j] += 1\nprint(\" \".join(map(str, taxi3)))\n", "n,m=list(map(int,input().split()))\narr1=list(map(int,input().split()))\narr2=list(map(int,input().split()))\nj=0\nansarr=[0]*m\ntemparr=[]\nfor i in range(n+m):\n    if(arr2[i]==1):\n        temparr.append(arr1[i])\n#print(*temparr)\nprevi=-1\nfor i in range(n+m):\n    #print(j)\n    if(arr2[i]==1):\n        j+=1\n    else:\n        if(j==0):\n            ansarr[j]+=1\n        elif(j==m):\n            ansarr[j-1]+=1\n        else:\n            dist1=temparr[j]-arr1[i]\n            dist2=abs(arr1[i]-temparr[j-1])\n            #print(dist1,dist2,j,'Yo')\n            if(dist1>=dist2):\n                ansarr[j-1]+=1\n            else:\n                ansarr[j]+=1\nprint(*ansarr)\n\n", "n, m = [int(x) for x in input().split()]\nxs = [int(x) for x in input().split()]\nts = [int(x) for x in input().split()]\n\n\ntaxi_idx = sorted([xs[idx] for idx in range(n + m) if ts[idx] == 1])\npassenger_idx = sorted([xs[idx] for idx in range(n + m) if ts[idx] == 0])\n\na_is = [0] * len(taxi_idx)\nt_idx = 0\np_idx = 0\n\nwhile True:\n    if p_idx >= len(passenger_idx):\n        break\n\n    if t_idx == len(taxi_idx) - 1:\n        a_is[t_idx] += 1\n    else:\n        while t_idx < len(taxi_idx) - 1:\n            d1 = abs(passenger_idx[p_idx] - taxi_idx[t_idx])\n            d2 = abs(passenger_idx[p_idx] - taxi_idx[t_idx + 1])\n            # print(t_idx, d1, d2)\n            if d1 > d2:\n                t_idx += 1\n            else:\n                break\n\n        a_is[t_idx] += 1\n\n    p_idx += 1\n\nprint(' '.join([str(x) for x in a_is]))\n", "q,w = map(int,input().split())\na = list(map(int,input().split()))\ns = list(map(int,input().split()))\nd = []\nk = 0\nfor i in range(0,q+w):\n    if (s[i]):\n        d.append(a[i])\n        k = i\nd.append(100000000000)\nt = 0\nt1 = 1\ng = 0\nfor i in a:\n    if (i==d[t]):\n        continue\n    elif (i - d[t] <= d[t1] - i):\n        g += 1\n    else:\n        print(g, end = \" \")\n        if (d[t1]==i):\n            g = 0\n        else:\n            g = 1\n        t += 1\n        t1 += 1\nprint(g)\n", "def main():\n    # n = int(input())\n    # a, b = list(map(int, input().split()))\n    # if abs(a - 1) + abs(b - 1) <= abs(n - a) + abs(n - b) + 1:\n    #     print(\"White\")\n    # else:\n    #     print(\"Black\")\n    one = list(map(int, input().split()))\n    location = list(map(int, input().split()))\n    flag = list(map(int, input().split()))\n    drivers = [location[i] for i in range(len(location)) if flag[i]]\n    res = [0] * len(drivers)\n\n    def bs(value):\n        lo, hi = 0, len(drivers) - 1\n        while lo < hi:\n            mid = (lo + hi) // 2\n            if drivers[mid] < value:\n                lo = mid + 1\n            else:\n                hi = mid\n        return lo\n\n    for i in range(len(location)):\n        if not flag[i]:\n            lo = bs(location[i])\n            if lo != 0 and drivers[lo] - location[i] >= location[i] - drivers[lo-1]:\n                res[lo - 1] += 1\n            else:\n                res[lo] += 1\n\n    print(' '.join(list(map(str, res))))\n\n\nmain()\n", "import sys\n\nn,m=map(int,sys.stdin.readline().split())\nX=list(map(int,sys.stdin.readline().split()))\nT=list(map(int,sys.stdin.readline().split()))\n\nTaxi=[]\nRes=[]\n\nfor i in range(n+m):\n    if T[i]==1:\n        Taxi.append(X[i])\n    else:\n        Res.append(X[i])\n\n\nTMAP=[[0,0] for i in range(m)]\n\nfor i in range(m-1):\n    TMAP[i][1]=(Taxi[i]+Taxi[i+1])//2\n    TMAP[i+1][0]=(Taxi[i]+Taxi[i+1])//2+1\n\nTMAP[m-1][1]=X[-1]\n\nTCOUNT=[0 for i in range(m)]\n\n\ni=0\nfor j in Res:\n    while True:\n        if TMAP[i][0]<=j<=TMAP[i][1]:\n            TCOUNT[i]+=1\n            break\n        else:\n            i+=1\n\nfor t in TCOUNT:\n    print(t,end=\" \")\n    \n\n    \n", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom math import *\n\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n\n    return True\n\ndef mhd(a,b,x,y):\n\n    return abs(a-x)+abs(b-y)\n\n\nta = []\npa = []\nd = {}\nn,m = map(int,input().split())\na = list(map(int,input().split()))\nt = list(map(int,input().split()))\nfor i in range(n+m):\n    if(t[i]==1):\n        ta.append(a[i])\n        d[a[i]] = 0\n    else:\n        pa.append(a[i])\nif(m==1):\n    print(n)\nelse:\n    ta.sort()\n    for i in pa:\n        li = bl(ta,i)\n        if(li==0):\n            d[ta[li]]+=1\n        elif(li==m):\n            d[ta[li-1]]+=1\n        else:\n            x = abs(ta[li-1]-i)\n            y = abs(ta[li]-i)\n            if(x<=y):\n                d[ta[li-1]]+=1\n            else:\n                d[ta[li]]+=1\n    for i in range(n+m):\n        if(t[i]==1):\n            print(d[a[i]],end=' ')", "import sys\n\nn, m = [int(w) for w in input().split()]\nx = [int(w) for w in input().split()]\nt = [int(w) for w in input().split()]\n\nif m == 1:\n    print(n)\n    return\n\np = []\ntx = []\nfor i in range(n+m):\n    (tx if t[i] == 1 else p).append(x[i])\n\na = [0] * m\ni = 0\nfor pi in p:\n    while i < m-1 and pi > (tx[i]+tx[i+1])/2:\n        i += 1\n    a[i] += 1\n\nprint(\" \".join(str(ai) for ai in a))\n", "import bisect\nn,m=map(int,input().split())\nrid=[None for i in range(n)]\ntax=[None for i in range(m)]\nres=[0 for i in range(m)]\nss=input().split()\ns=input().split()\nindrid=0\nindtax=0\nfor i in range(n+m):\n    if s[i]==\"0\":\n        rid[indrid]=int(ss[i])\n        indrid+=1\n    else:\n        tax[indtax]=int(ss[i])\n        indtax+=1\nfor x in rid:\n    ind=bisect.bisect_left(tax,x)\n    if ind==0:\n        res[0]+=1\n        continue\n    if ind==m:\n        res[m-1]+=1\n        continue\n    if tax[ind]-x<x-tax[ind-1]:\n        res[ind]+=1\n    else:\n        res[ind-1]+=1\nfor i in res:\n    print(i,end=\" \")\nprint(\"\")\n", "#n=int(input())\nn,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\ndef next(k,a):\n    i=k+1\n    while a[i]!=1: i+=1\n    return i\n\nans=[0]*(m+1)\n\nk=-1\nk=next(k,b)\nans[1]=k\nfor i in range(2,m+1):\n    kk=next(k,b)\n    for j in range(k+1,kk):\n        if a[j]-a[k]<=a[kk]-a[j]:\n            ans[i-1]+=1\n        else:\n            ans[i]+=1\n    k=kk\n    \n\nans[m]+=(n+m-1-k)\n\nfor i in range(1,m+1):\n    print(ans[i],end=' ')\n", "n, m = map(int, input().split())\ndist = list(map(int, input().split()))\ntaxists = list(map(int, input().split()))\nleft = [0] * (n + m)\nright = [0] * (n + m)\nMAX = 10000000000000000000\nvalue = -MAX\ncnt = 0\nfor i in range(n + m):\n    if taxists[i] == 1:\n        cnt += 1\n        value = i\n    left[i] = value\n\nvalue = MAX\nfor i in range(n + m - 1, -1, -1):\n    if taxists[i] == 1:\n        value = i\n    right[i] = value\n\n\nanswer = [0] * (n + m)\nfor i in range(n + m):\n    if left[i] == -MAX:\n        answer[right[i]] += 1\n        continue\n    if right[i] == MAX:\n        answer[left[i]] += 1\n        continue\n    if abs(dist[left[i]] - dist[i]) <= abs(dist[i] - dist[right[i]]):\n        answer[left[i]] += 1\n    else:\n        answer[right[i]] += 1\nfor i in answer:\n    if i:\n        print(i - 1, end = \" \")\n", "n, m = list(map(int,input().split()))\nx = list(map(int,input().split()))\nt = list(map(int,input().split()))\narr = []\npep = {}\nfor i in range(n+m):\n    if t[i] == 0:\n        arr.append(i)\n        pep[x[i]] = 0\n    else:\n        for j in arr:\n            pep[x[j]] = i\n        arr = []\nfor i in range(n+m-1, -1, -1):\n    if t[i] == 0:\n        arr.append(i)\n    else:\n        for j in arr:\n            if abs(x[j] - x[i]) <= abs(x[pep[x[j]]] - x[j]):\n                pep[x[j]] = i\n        arr = []\nans = []\nfor i in range(n+m):\n    if t[i]:\n        ans.append(1)\n    else:\n        ans.append(0)\nfor i in pep:\n    ans[pep[i]] += 1\nfor i in ans:\n    if i:\n        print(i-1, end = ' ')\n\n\n", "n,m = list(map(int,input().split()))\nx = input().split()\nt = input().split()\nr = [0]*n\nd = [0]*m\ncountr = 0\ncountd = 0\nfor i in range(n+m):\n    if int(t[i]) == 1:\n        d[countd] = int(x[i])\n        countd += 1\n    else:\n        r[countr] = int(x[i])\n        countr += 1\ncurrent = 0\ncount = [0]*m\nfor i in range(n):\n    while current < m-1:\n        if d[current+1] >= r[i]:\n            break\n        current += 1\n    if current == m-1:\n        count[m-1] += (n-i)\n        break\n    if 2*r[i] <= (d[current]+d[current+1]):\n        count[current] += 1\n    else:\n        count[current+1] += 1\ns = \"\"\nfor i in range(m):\n    s += str(count[i])+\" \"\nprint(s[:-1])\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = list(map(int, input().split()))\nd = [0]*m\nf = []\nfor q in range(len(s)):\n    if s[q] == 1:\n        f.append(a[q])\nq2, q1 = -float('inf'), f[0]\nq3, q4 = -1, 0\nfor q in range(len(a)):\n    if s[q] == 1:\n        q2, q1 = a[q], f[q4+1] if len(f) > q4+1 else float('inf')\n        q3, q4 = q3+1, q4+1\n    else:\n        if q2 == -float('inf'):\n            d[q4] += 1\n        elif q1 == float('inf'):\n            d[q3] += 1\n        else:\n            if a[q]-q2 <= q1-a[q]:\n                d[q3] += 1\n            else:\n                d[q4] += 1\nprint(*d)\n", "n, m = map(int, input().split())\ns = n + m\nx = list(map(int, input().split()))\nloc = input().split()\nt = []\nfor i in range(s):\n    if loc[i] == '1':\n        t.append(i)\nfor i in range(m):\n    ans = 0\n    if i != 0:\n        for j in range(t[i - 1] + 1, t[i]):\n            if x[j] - x[t[i - 1]] > x[t[i]] - x[j]:\n                ans += 1\n    else:\n        ans += t[i]\n    \n    if i != m - 1:\n        for j in range(t[i] + 1, t[i + 1]):\n            if x[j] - x[t[i]] <= x[t[i + 1]] - x[j]:\n                ans += 1\n    else:\n        ans += s - t[i] - 1\n    \n    print(ans, end = ' ')"]