["# python3\n# utf-8\n\nn, a, b = (int(x) for x in input().split())\n\nl = -1\nfor k in range(n // a + 1):\n    if (n - k * a) % b == 0:\n        l = (n - k * a) // b\n        break\nif l == -1:\n    print(-1)\n    quit()\n\nperm = []\ncurr_last_op = 1\nfor i in range(k):\n    curr_cycle = [curr_last_op + j for j in range(a)]\n    curr_last_op = curr_last_op + a\n    perm += curr_cycle[1:] + curr_cycle[:1]\n\nfor i in range(l):\n    curr_cycle = [curr_last_op + j for j in range(b)]\n    curr_last_op = curr_last_op + b\n    perm += curr_cycle[1:] + curr_cycle[:1]\n\nprint(*perm)\n", "ans = []\n\ndef go(base, n):\n    ans.append(base + n - 1)\n    for i in range(base, base + n - 1):\n        ans.append(i)\n\ndef solve(n, a, b, x):\n    cur_start = 1\n    y = (n - a * x) // b\n\n    for i in range(x):\n        go(cur_start, a)\n        cur_start += a\n\n    for i in range(y):\n        go(cur_start, b)\n        cur_start += b\n\nn, a, b = list(map(int, input().split()))\n\n\n\nfor x in range(0, 10 ** 6 + 1):\n    if (n - x * a) % b == 0 and n - x * a >= 0:\n        solve(n, a, b, x)\n        print(' '.join(map(str, ans)))\n        break\nelse:\n    print(-1)\n", "n, a, b = [int(x) for x in input().split()]\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        g, y, x = egcd(b % a, a)\n        return (g, x - (b // a) * y, y)\n\ng, a_1, b_1 = egcd(a, b)\nif n % g:\n    print(-1)\n    return\n\nfac = n // g\na_1 *= fac\nb_1 *= fac\nif a_1 < 0:\n    while a_1 < 0:\n        a_1 += b//g\n        b_1 -= a//g\n    if b_1 < 0:\n        print(-1)\n        return\nelif b_1 < 0:\n    while b_1 < 0:\n        b_1 += a//g\n        a_1 -= b//g\n    if a_1 < 0:\n        print(-1)\n        return\n\nres = []\ni = 1\nfor _ in range(a_1):\n    for j in range(a-1):\n        i += 1\n        res.append(i)\n    res.append(i - a + 1)\n    i += 1\n    \nfor _ in range(b_1):\n    for j in range(b-1):\n        i += 1\n        res.append(i)\n    res.append(i - b + 1)\n    i += 1\n    \nprint(\" \".join(map(str, res)))", "n, a, b = list(map(int, input().strip().split()))\n\ndef pp(seq):\n    return ' '.join(map(str, seq))\n\ndef cycle(start, size):\n    return list(range(start+1, start+size)) + [start]\n\ndef fail_sequence(target, acc=[]):\n    ''' recursion failure, bloody python '''\n\n    if target % a == 0:\n        return acc + [a] * (target//a)\n    if target % b == 0:\n        return acc + [b] * (target//b)\n\n    if a <= target:\n        acc.append(a)\n        res = sequence(target-a, acc)\n        if res:\n            return res\n        acc.pop()\n    if b <= target:\n        acc.append(b)\n        return sequence(target-b, acc)\n    return []\n\ndef sequence(target, a, b):\n    dp = {0:(0,0)}  # num of (a, b) needed to reach sum\n    for i in range(1, target+1):\n        if i-a in dp:\n            na, nb = dp[i-a]\n            dp[i] = (na+1, nb)\n        elif i-b in dp:\n            na, nb = dp[i-b]\n            dp[i] = (na, nb+1)\n    na, nb = dp.get(target, (0,0))\n    return [a]*na + [b]*nb\n\ndef sol():\n   seq = sequence(n, a, b)\n\n   if seq:\n      res = []\n      i = 1\n      for size in seq:\n        res.extend(cycle(i, size))\n        i += size\n      return pp(res)\n   else:\n      return -1\n\nprint(sol())\n", "#This code sucks, you know it and I know it.  \n#Move on and call me an idiot later.\n\ndef solve(a, b, n):\n \n    i = 0\n    while i * a <= n:\n         \n        if (n - (i * a)) % b == 0:\n            x = i\n            y = (n - (i * a)) // b\n            return (x, y)\n        i = i + 1\n     \n    return (-1, -1)\n\nn, a, b = map(int, input().split())\naa, bb = solve(a, b, n)\nl = []\nif (aa, bb) == (-1, -1):\n    print(-1)\nelse:\n\n    for i in range(1,aa+1):\n        x = a*(i-1) + 1\n        y = a*i\n        l += [y]\n        l += [j for j in range(x, y)]\n\n    for i in range(1,bb+1):\n        x = a*aa + b*(i-1) + 1\n        y = a*aa + b*i\n        l += [y]\n        l += [j for j in range(x, y)]\n    \n    print(\" \".join(map(str, l)))", "n, a, b = map(int, input().split())\nr = []\ndef f(a, l, r=r):\n    r += [a + l - 1] + list(range(a, a + l - 1))\ni = 1\nwhile n > 0:\n    if n % b is 0:\n        break\n    f(i, a)\n    i += a\n    n -= a \nwhile n > 0:\n    f(i, b)\n    i += b\n    n -= b\nprint(-1) if n else print(*r)\n", "#!/usr/bin/env python3\n\nimport sys\n\nn, a, b = list(map(int, sys.stdin.readline().strip().split()))\n\n# supposed a>=0, b>=0, a+b>0\n# returns (d, p, q) where d = gcd(a, b) = a*p + b*q\ndef euc(a, b):\n    if b > a:\n        (d, p, q) = euc(b, a)\n        return (d, q, p)\n    if b == 0:\n        return (a, 1, 0)\n    s = a // b\n    (d, sp, sq) = euc(a - s * b, b)\n    return (d, sp, sq - s * sp)\n\ndef normalize(n, a, b, d, p, q):\n    if p < 0:\n        (sp, sq) = normalize(n, b, a, d, q, p)\n        return (sq, sp)\n    elif q >= 0:\n        return (p, q)\n    # p>=0, q < 0\n    r = - (q // (a // d))\n    sp = p - r * (b // d)\n    sq = q + r * (a // d)\n    if sp < 0:\n        raise ValueError\n    else:\n        return (sp, sq)\n\n(d, p, q) = euc(a, b)\nif n % d != 0:\n    print ('-1')\n    return\nm = n // d\np, q = m * p, m * q\ntry:\n    (p, q) = normalize(n, a, b, d, p, q)\nexcept ValueError:\n    print ('-1')\n    return\n\nres = []\nlast = 1\nfor _ in range(p):\n    res.extend(list(range(last + 1, last + a)))\n    res.append(last)\n    last += a\nfor _ in range(q):\n    res.extend(list(range(last + 1, last + b)))\n    res.append(last)\n    last += b\n\nprint(' '.join(map(str, res)))\n", "res=[]\ndef solve(Ax,A,sum=0):\n\tfor i in range(0,Ax):\n\t\tfor k in range(0,A):\n\t\t\tif (k==0):\n\t\t\t\tres.append(sum+A)\n\t\t\telse:\n\t\t\t\tres.append(sum+k)\n\t\tsum+=A\n\treturn sum\n\ns=input().split()\nN=int(s[0])\nA=int(s[1])\nB=int(s[2])\nAx=Bx=0\nwhile 1 :\n\tif Ax*A>N:\n\t\tbreak;\n\tBx=N-Ax*A\n\tif Bx%B==0 :\n\t\tBx//=B\n\t\tbreak\n\tAx+=1\nif (Ax*A+Bx*B!=N):\n\tprint('-1')\nelse:\n\tsolve(Bx,B,solve(Ax,A))\n\tprint (' '.join(map(str, res)))", "def exgcd(a,b):\n    if b > 0:\n        y,x,g = exgcd(b,a%b)\n        y -= a//b * x\n        return x,y,g\n    else:\n        return 1,0,a\nn,a,b = map(int,input().split())\nx0,y0,g = exgcd(a,b)\nif n % g != 0:\n    print(-1)\n    return\na //= g\nb //= g\nk = n//g\n#print(a,x0,b,y0,g)\nr = k * x0 // b\nl = (k * -y0 + a - 1) // a\nif l > r:\n    print(-1)\n    return\nx = k * x0 - b * l\ny = k * y0 + a * l\na *= g\nb *= g\n#print(a,x,b,y,n)\nfor i in range(x):\n    for j in range(a-1):\n        print(i*a + j + 2,end=' ')\n    print(i*a+1,end=' ')\nfor i in range(y):\n    for j in range(b-1):\n        print(x*a + i*b + j + 2,end=' ')\n    print(x*a + i*b+1,end=' ')\nprint()\n", "ans = []\n\ndef go(base, n):\n    ans.append(base + n - 1)\n    for i in range(base, base + n - 1):\n        ans.append(i)\n\ndef solve(n, a, b, x):\n    cur_start = 1\n    y = (n - a * x) // b\n\n    for i in range(x):\n        go(cur_start, a)\n        cur_start += a\n\n    for i in range(y):\n        go(cur_start, b)\n        cur_start += b\n\nn, a, b = list(map(int, input().split()))\n\n\n\nfor x in range(0, 10 ** 6 + 1):\n    if (n - x * a) % b == 0 and n - x * a >= 0:\n        solve(n, a, b, x)\n        print(' '.join(map(str, ans)))\n        break\nelse:\n    print(-1)\n\n\n\n\n# Made By Mostafa_Khaled\n", "n, a, b = map(int, input().split())\nx, y = 0, 0\nok = False\nfor i in range(n // a + 1):\n    if (n - a * i) % b == 0:\n        ok = True\n        x, y = i, (n - a * i) // b\n        break\nif not ok:\n    print(-1)\n    return\npos = 1\nfor i in range(x):\n    print(pos + a - 1, end=' ')\n    for j in range(a - 1):\n        print(pos + j, end=' ')\n    pos += a\n\nfor i in range(y):\n    print(pos + b - 1, end=' ')\n    for j in range(b - 1):\n        print(pos + j, end=' ')\n    pos += b\n", "from math import gcd as gcd\nn,a,b=list(map(int,input().split()))\nma=max(a,b)\nmi=min(a,b)\nt=1\nif n%gcd(a,b)!=0:\n    print(-1)\nelse:\n    ab=[0]*(n+1)\n    for i in range(0,10**6 + 1):\n        if (n-ma*i)%mi==0 and (n-ma*i)//mi>=0:\n            x=i\n            y=(n-ma*i)//mi\n            t=0\n            break\n    if t:\n        print(-1)\n    else:\n            \n        # print(x,y)\n        ind=0\n        for i in range(x):\n            for j in range(ma*i + 1,(ma)*(i+1) + 1):\n                # print(j)\n                if j>1000000:\n                    print(j)\n                ab[j]=(j+1)\n                if j%ma==0:\n                    ab[j]=(j-ma) + 1\n                # print(ab)    \n        k=ma*x\n        for i in range(y):\n            for j in range(mi*i + 1,(mi)*(i+1) + 1):\n                ab[k+j]=(k+j+1)\n                if j%mi==0:\n                    ab[k+j]=(k+j-mi) + 1\n                \n        print(*ab[1:])            \n                    \n                \n", "#  =========     /\\       /|    |====/|\n#      |        /  \\       |    |   / |\n#      |       /____\\      |    |  /  |\n#      |      /      \\     |    | /   |\n#  ========= /        \\  =====  |/====|  \n#  code\n\ndef main():\n    n , a , b = map(int , input().split())\n    if a < b:\n        a , b = b , a\n    s = []\n    k = 1\n    ok = False\n    x = 0\n    y = 0\n    for j in range(n):\n        kk = n - a * j\n        if kk >= 0:\n            if kk % b == 0:\n                ok = True\n                x = j\n                y = kk // b\n                break\n    if not ok:\n        print(-1)\n        return\n    for j in range(x):\n        for i in range(a - 1):\n            s.append(k + i + 1)\n        s.append(k)\n        k += a\n        n -= a\n    for j in range(y):\n        for i in range(b - 1):\n            s.append(k + i + 1)\n        s.append(k)\n        k += b\n        n -= b\n    print(*s)\n    return\n\ndef __starting_point():\n    main()\n__starting_point()", "from sys import stdin, stdout\n\nn, a, b = map(int, input().split())\nfound = False\nfor x in range(n+1):\n    if (n - a * x) % b == 0:\n        y = (n - a * x) // b\n        if y >= 0:\n            found = True\n            break\nif not found:\n    print(-1)\n    return\nans = []\nl, r = 0, 1\nfor _ in range(x):\n    l = r\n    r = l + a\n    for i in range(l, r):\n        if i+1 == r:\n            ans.append(l)\n        else:\n            ans.append(i+1)\n\nfor _ in range(y):\n    l = r\n    r = l + b\n    for i in range(l, r):\n        if i+1 == r:\n            ans.append(l)\n        else:\n            ans.append(i+1)\n\nprint(*ans)", "N, A, B = map(int, input().split())\n\nfor i in range(N//A+1):\n    if (N-i*A)%B==0:\n        ans = []\n        \n        for j in range(i):\n            l = []\n            \n            for k in range(1, A+1):\n                l.append(j*A+k)\n                \n            ans += l[1:]+[l[0]]\n        \n        for j in range((N-i*A)//B):\n            l = []\n            \n            for k in range(1, B+1):\n                l.append(i*A+j*B+k)\n            \n            ans += l[1:]+[l[0]]\n        \n        print(*ans)\n        break\nelse:\n    print(-1)", "n,a,b=map(int,input().split())\np=[i+1 for i in range(n)]\nf=0\na,b=min(a,b),max(a,b)\nfor i in range(0,n+1,a):\n\tif (n-i)%b==0:\n\t\tx=((n-i)//b)\n\t\tf=1\n\t\tbreak\nif f:\n\tfor i in range(0,b*x,b):\n\t\tp[i:i+b]=[p[i+b-1]]+p[i:i+b-1]\n\tfor j in range(b*x,n,a):\n\t\tp[j:j+a]=[p[j+a-1]]+p[j:j+a-1]\n\tprint(*p)\n\nelse:\n\tprint(-1)", "def main():\n    n,a,b = map(int,input().split())\n    found = False\n    for x in range(n+1):\n        rem = n-a*x\n        if rem >= 0 and rem%b == 0:\n            y = rem//b\n            found = True\n            break\n        \n    if not found:\n        print(-1)\n        return\n\n    ans = []\n    if a == 1 or b == 1:\n        for i in range(n):\n            ans.append(i+1)\n    else:\n        start = 1\n        for i in range(x):\n            arr = [start+1]\n            for j in range(a-2):\n                arr.append(arr[-1]+1)\n\n            arr.append(start)\n            start = arr[-2]+1\n            ans.extend(arr)\n\n        for i in range(y):\n            arr = [start+1]\n            for j in range(b-2):\n                arr.append(arr[-1]+1)\n\n            arr.append(start)\n            start = arr[-2]+1\n            ans.extend(arr)\n        \n    for i in ans:\n        print(i,end = ' ')\n\nmain()\n", "n,a,b=map(int,input().split())\ncop=n\nif a>b:\n    a,b=b,a\nj=-1\nke=-1\nwhile(n>=0):\n    if n%a==0:\n        j=n//a\n        ke=(cop-a*j)//b\n        #print(j,ke)\n        break\n    else:\n        n-=b\n#print(n,j,ke)\nif j==-1:\n    print(-1)\nelse:\n    ans=[]\n    t=1\n    for yu in range(j):\n       for ty in range(a):\n           k=t+(ty+1)%a\n           if k==0:\n               k+=a\n           ans.append(k)\n       t+=a \n       #print(t)\n    for yu in range(ke):\n       for ty in range(b):\n           k=t+(ty+1)%b\n           if k==0:\n               k+=b\n           ans.append(k)\n       t+=b \n    print(*ans,sep=\" \")\n    \n        ", "n, a, b = list(map(int, input().split()))\nfor i in range(n//a + 1):\n    if (n - i*a) % b == 0:\n        res = []\n        for j in range(i):\n            t = [j*a + k for k in range(1, a+1)]\n            res += t[1:] + [t[0]]\n        for j in range((n - i*a) // b):\n            t = [i*a + j*b + k for k in range(1, b+1)]\n            res += t[1:] + [t[0]]        \n        print(*res)\n        break\nelse:\n    print(-1)\n", "n,a,b = list(map(int,input().split()))\n#Pick any i,j such that i*a + j*b == n\nchoose = None\nfor i in range(n+1):\n    if a*i > n:\n        continue\n    j = (n-a*i)//b\n    if i*a + j*b == n:\n        choose = (i,j)\nif choose:\n    i,j = choose\n    arr = []\n    for t in range(i):\n        arr.append(a)\n    for t in range(j):\n        arr.append(b)\n    got = 0\n    answer = []\n    # print(arr)\n    for x in arr:\n        cur = []\n        for i in range(got+1,got+x+1):\n            cur.append(i)\n        cur = cur[1:] + [cur[0]]\n        got += x\n        answer += cur\n    print(' '.join(map(str,answer)))\n\nelse:\n    print(-1)\n\n"]