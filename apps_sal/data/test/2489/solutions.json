["n = int(input())\na = list(map(int, input().split()))\nMAX = 10 ** 6 + 5\ncnt = [0] * MAX\nok = [True] * MAX\nfor x in a:\n    cnt[x] += 1\nans = 0\nfor i in range(1, MAX):\n    if cnt[i] > 0:\n        for j in range(i * 2, MAX, i):\n            ok[j] = False       \n        if ok[i] and cnt[i] == 1:\n            ans += 1\nprint(ans)", "N = int(input())\n*A,=map(int,input().split())\nA = sorted(A)\n\nif N == 1:\n  print(1)\n  return\n\nflag = [0]*(10**6+5)\nfor i in range(N):\n  flag[A[i]] = 1\n\nfor i in range(N):\n  if flag[A[i]] == 0:\n    continue\n  if i>0 and A[i]==A[i-1]:\n    flag[A[i]] = 0\n    continue\n  for num in range(A[i]*2,A[-1]+1,A[i]):\n    flag[num] = 0\n  \nprint(sum(flag))", "#https://at274.hatenablog.com/entry/2020/06/29/181102\nimport collections\nN=int(input())\nA=list(map(int,input().split()))\nc=collections.Counter(A)\nA=set(A)\nMAX_A=10**6\nX=[0]*(MAX_A + 1)#0-MAX_A\u307e\u3067\u306e\u6574\u6570\u304cA\u306e\u500d\u6570\u3067\u4f55\u56de\u5272\u3089\u308c\u308b\u304b\nfor i in A:\n  for j in range(i,MAX_A + 1,i):\n    X[j]+=1\n\n#\u5272\u3089\u308c\u305f\u56de\u6570\u304c1\u3064\u3057\u304b\u306a\u3044\u3082\u306e\u306f\u305d\u306e\u6570\u81ea\u8eab\u3067\u5272\u3063\u305f\u306e\u3067\u30ab\u30a6\u30f3\u30c8\n#\u305f\u3060\u3057\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u9664\u5916\nans = len([a for a in A if (X[a] == 1) and (c[a] == 1)])\nprint(ans)", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nimport numpy as np\ndef main():\n    a = np.array(read().split(), np.int32)[1:]\n    count = np.zeros(10**6+1, np.int32)\n    for ae in a:\n        if count[ae] <= 1:\n            count[::ae] += 1\n    r = 0\n    for ae in a:\n        r += count[ae] == 1\n    print(r)\n\ndef __starting_point():\n    main()\n__starting_point()", "N=int(input())\nA=sorted(list(map(int,input().split())))\nB=[0]*(A[-1]+1)\n\nfor i in A:\n  j=i\n  while j<=A[-1]:\n    B[j]+=1\n    j+=i\ns=0\nfor i in A:\n  if B[i]==1:\n    s+=1\nprint(s)", "N = int(input())\nA = list(map(int, input().split()))\n \nM = 10**6 + 1\n \ncnt = [0] * M\n \nfor a in A:\n    if cnt[a] != 0:\n        cnt[a] += 1\n        continue\n    for b in range(a, M, a):\n        cnt[b] += 1\n \nans = 0\nfor a in A:\n    if cnt[a] == 1:ans += 1\n \nprint(ans)\n", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\nimport numpy as np\nfrom collections import Counter\ndef main():\n    n, *a = list(map(int, read().split()))\n\n    if 1 in a:\n        count1 = a.count(1)\n        if count1 == 1:\n            print((1))\n            return\n        else:\n            print((0))\n            return\n    a = np.array(a)\n    maxa = a.max()\n    seq = np.zeros(maxa + 1, np.int32)\n    u, cnt = np.unique(a, return_counts=True)\n    for ue, cnte in zip(u, cnt):\n        if cnte == 1:\n            seq[ue] = 1\n    for ae in a:\n        t = ae * 2\n        while t <= maxa:\n            seq[t] = 0\n            t += ae\n    r = seq.sum()\n    print(r)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nA = list(map(int,input().split()))\nA.sort()\n# print(A)\nmultiple = [0]*(A[-1]+1)\nfor i in range(n):\n    now = A[i]\n    while(now <= A[-1]):\n        multiple[now] += 1\n        now += A[i]\nans = 0\nfor i in range(n):\n    if(multiple[A[i]] == 1):\n        ans += 1\n# print(multiple)\nprint(ans)", "import collections\n# Your code her\na = int(input())\nb = [int(s) for s in input().split()]\nb = sorted(b)\nmod = int(1000000)\nd = {}\ne = collections.Counter(b)\nX = int(0)\nans = int(0)\n\nfor i in range(a):\n    if d.get(b[i]) == None:\n        if e.get(b[i]) != 1:\n            d[b[i]] = 1\n        X = b[i]\n        while X <= (mod-b[i]):\n            X += b[i]\n            d[X] = 1\n        X = 0\n    else:\n        pass\n\nfor i in range(a):\n    if d.get(b[i]) == None:\n        ans += 1\n\nprint(ans)", "import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5//1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp //= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n\n        if x == y:\n            return\n\n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n\n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n\n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n\n    def group_count(self):\n        return len(self.roots())\n\n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n\n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\nmod = 10**9 + 7\n\n#maincode-------------------------------------------------\n\nn = ini()\na = inl()\nA = 10**6 + 5\nb = [0] * A\nans = 0\n\nfor i in a:\n    if b[i] != 0:\n        b[i] = 2\n        continue\n    for i in range(i,A,i):\n        b[i] += 1\n\nfor i in a:\n    if b[i] == 1:\n        ans += 1\n\nprint(ans)", "N = int(input())\nA = [int(x) for x in input().split()]\nM = max(A)\n\ncount = [0] * (M + 1)\nfor i in range(N):\n    count[A[i]] += 1\n\ncheck = [True] * (M + 1)\nfor a in range(1, M + 1):\n    if count[a] > 0 and check[a] == True:\n        for k in range(2, M // a + 1):\n            check[a * k] = False      \n\nans = 0\nfor i in range(N):\n    if count[A[i]] == 1 and check[A[i]] == True:\n        ans += 1\n\nprint(ans)", "#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nfrom math import floor,sqrt,factorial,hypot,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\nfrom fractions import gcd\nfrom random import randint\ndef ceil(a,b): return (a+b-1)//b\ninf=float('inf')\nmod = 10**9+7\ndef pprint(*A): \n    for a in A:     print(*a,sep='\\n')\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    N=I()\n    A=sorted(LI())\n\n    MAX=10**6\n    divible=[False]*(MAX+1)\n\n    ans = 0\n    for i,a in enumerate(A):\n        if(i+1<N and A[i+1]==a or divible[a]):\n            pass\n        else:\n            ans += 1\n            \n        b = a\n        if(not divible[a]):#\u30a8\u30e9\u30c8\u30b9\u30c6\u30cd\u30b9\u306e\u7be9\u3068\u540c\u3058\u8a08\u7b97\u91cf\u89e3\u6790.\n            while(b<=MAX): \n                divible[b] = True\n                b += a\n    print(ans)\n        \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = sorted(list(map(int,input().split())))\nB = (10**6+1)*[0]\n\nfor a in A:\n  B[a]+=1\n  if B[a]==1:\n    for n in range(2*a,10**6+1,a):\n      B[n]+=2\n\nprint(B.count(1))", "n = int(input())\na = list(map(int, input().split()))\nMAX = 10 ** 6 + 5\ncnt = [0] * MAX\nok = [True] * MAX\nfor x in a:\n    cnt[x] += 1\nans = 0\nfor i in range(1, MAX):\n    if cnt[i] > 0:\n        for j in range(i * 2, MAX, i):\n            if cnt[j] > 0:\n                ok[j] = False       \n        if ok[i] and cnt[i] == 1:\n            ans += 1\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nMAX = 10**6+1\ncnt = [0]*MAX\n\nfor x in A:\n  if cnt[x] != 0:\n  \tcnt[x] = 2\n  else:\n    for i in range(x, MAX, x):\n      cnt[i] += 1\n  \nans = 0\nfor x in A:\n  # 2\u56de\u4ee5\u4e0a\u901a\u3063\u305f\u6570\u5b57 (cnt[x]>1) \u306f\uff0c\u305d\u306e\u6570\u5b57\u3088\u308a\u5c0f\u3055\u3044\u7d04\u6570\u304c\u5b58\u5728\u3059\u308b (\u5272\u308a\u5207\u308c\u308b\u4ed6\u306e\u6570\u304c\u5b58\u5728\u3059\u308b)\u3002\n  if cnt[x] == 1:  \n    ans += 1\n    \nprint(ans)", "n=int(input())\na=sorted(map(int,input().split()))\ns=[0]*(m:=a[-1]+1)\nfor x in a:s[x]+=1\nfor x in a:\n  for j in range(x*2,m,x):s[j]=0\nprint(s.count(1))", "#!/usr/bin/env python3\nimport sys\ndef input(): return sys.stdin.readline().rstrip()\n\n\ndef main():\n    n=int(input())\n    A=list(map(int, input().split()))\n    counts=[0]*(10**6+5)\n    for AA in A:\n        counts[AA]+=1\n    ans=0\n    for i in range(1,10**6+5):\n        if counts[i]>0:\n            for j in range(i+i,10**6+5,i):\n                counts[j]=-1\n        if counts[i]==1:\n            ans+=1\n    print(ans)\n        \n\n        \n    \n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "from collections import Counter \nn = int(input())\na = list(map(int, input().split()))\ns = set(a)\nc = Counter(a)\nt = [0] * (10**6 + 1)\nfor i in s:\n    for j in range(i, 10**6+1, i):\n        t[j] += 1\n\nans = len([1 for i in s if t[i] == 1 and c[i] == 1])\nprint(ans)\n\n", "import numpy as np\nn = int(input())\nli_a = list(map(int, input().split()))\nm = max(li_a)\ne = np.zeros(m)\ndup = []\nfor a in li_a:\n    if(e[a-1]==1):\n        dup.append(a-1)\n        continue\n    e[a-1] = 1\n\nfor i in dup:\n    e[i] = 0\n\nfor a in set(li_a):\n    origin = a\n    while a <= m:\n        if a==origin:\n            a += origin\n            continue\n        e[a-1]=0\n        a += origin\nprint(int(sum(e)))", "#D - Not Divisible\nimport collections\nN = int(input())\na = list(map(int,input().split()))\na = sorted(a,reverse = False)\n\n#collections.Counter\u306f\u5b58\u5728\u3057\u306a\u3044\u5024\u3092\u6307\u5b9a\u3059\u308b\u30680\u3092\u8fd4\u3059\ncnt = collections.Counter(a)\nm = max(a)+1\nfor i in a:\n    if cnt[i] >= 2:\n        del cnt[i]\n    for j in range(i*2,m,i):\n        del cnt[j]\nprint(len(cnt.keys()))", "N = int(input())\nA = [int(_) for _ in input().split()]\n\nA.sort()\nM = max(A)\nX = [True for _ in range(M + 1)]\n\nfor a in set(A):\n    if not X[a]:\n        continue\n    for v in range(2 * a, M + 1, a):\n        X[v] = False\n\nfor i in range(N-1):\n    if A[i] == A[i+1]:\n        X[A[i]] = False\n\nans = 0\nfor a in A:\n    if X[a]:\n        ans += 1\nprint(ans)\n", "# import itertools\nimport math\nfrom functools import reduce\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\n# def gcd_list(numbers):\n#     return reduce(math.gcd, numbers)\n\n# if gcd_list(A) > 1:\n#     print(\"not coprime\")\n#     return\n\n# \u9ad8\u901f\u7d20\u56e0\u6570\u5206\u89e3\u6e96\u5099\n#MAXN = 10**6+10\n#sieve = [i for i in range(MAXN+1)]\n#p = 2\n#while p*p <= MAXN:\n#    if sieve[p] == p:\n#        for q in range(2*p, MAXN+1, p):\n#            if sieve[q] == q:\n#                sieve[q] = p\n#    p += 1\n\nA.sort()\nMAXN = A[-1]\nsieve = [1] * (MAXN + 1)\nst = set()\nfor a in A:\n    if a in st:\n        sieve[a] = 0\n    if sieve[a] == 1:\n        for q in range(2*a, MAXN+1, a):\n            if sieve[q] == 1:\n                sieve[q] = 0\n    st.add(a)\n\nans = 0\nfor a in A:\n    ans += sieve[a]\nprint(ans)", "import collections\n\nn=int(input())\narr=list(map(int,input().split()))\narr=sorted(arr) #\u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\ns=set()\ncnt=collections.Counter(arr) #\u5404\u8981\u7d20\u306e\u500b\u6570\u3092\u4e8b\u524d\u306b\u6570\u3048\u3066\u304a\u304f\nfor i in range(n):\n if arr[i] in s: #Ai\u304c\u3059\u3067\u306b\u5217\u6319\u3057\u305f\u6570\u306b\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u51e6\u7406\u3092\u884c\u308f\u306a\u3044\n   continue\n if cnt[arr[i]]>=2: #Ai\u304c2\u500b\u4ee5\u4e0a\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u304d\u3001Ai\u81ea\u8eab\u3092\u5217\u6319\u3057\u305f\u6570\u306b\u52a0\u3048\u308b\n   s.add(arr[i])\n for j in range(2,10**6//arr[i]+1): #Ai\u81ea\u8eab\u3092\u9664\u304fAi\u306e\u500d\u6570\u3092\u5217\u6319\u3059\u308b\n   s.add(arr[i]*j)\nans=0\nfor i in range(n): #\u5217\u6319\u3057\u305f\u6570\u306b\u542b\u307e\u308c\u306a\u3044Ai\u306e\u500b\u6570\u3092\u6570\u3048\u308b\n if arr[i] in s:\n   continue\n ans+=1\nprint(ans)", "n = int(input())\na = list(map(int,input().split()))\na.sort()\n\ndp = [0]*a[-1]\nfor x in a:\n\tif dp[x-1] == 0:\n\t\ty = 2*x\n\t\twhile y <= a[-1]:\n\t\t\tdp[y-1] = 1\n\t\t\ty += x\n\nsum = 0\nd = [0]*a[-1]\nfor i in a:\n\tif dp[i-1] == 0:\n\t\td[i-1] += 1\nfor i in a:\n\tif d[i-1] == 1:\n\t\tsum += 1\nprint(sum)", "# coding: utf-8\nn = int(input())\nA = list(map(int,input().split()))\na_ = max(A)\nA_ = list(set(A))\ndp = [True] * (a_+1)\nC = [0] * (a_+1)\nfor a in A:\n    C[a]+=1\nA_.sort()\nans = 0\n\nfor a in A_:\n    tmp = a\n    if dp[tmp]:\n        tmp += a\n        while tmp <= a_:\n            dp[tmp] = False\n            tmp += a\n#print(dp)\nfor a in A_:\n    if dp[a]:\n        if C[a]==1:\n            ans += 1\nprint(ans)", "n = int(input())\na = sorted(list(map(int, input().split())))\nans = 0\ndp = [0]*(a[-1]+1)\n \nfor i in a:\n    for j in range(i, a[-1]+1, i):\n        dp[j] += 1\n \nfor i in a:\n    if dp[i]==1:\n        ans += 1\nprint(ans)", "N = int(input())\na = list(map(int, input().split()))\n\ncnt = {}\n\nfor item in a:\n    if item not in cnt:\n        cnt[item] = 0\n    cnt[item] += 1\n\nA = list(set(a))\n\ncandidate = []\n\nfor item in A:\n    if cnt[item] == 1:\n        candidate.append(item)\n\njudge = [True] *(10**6 + 1)\n\nfor item in A:\n    for i in range(2, ((10**6)//item) + 1):\n        judge[item*i] = False\n\nans = 0\n\nfor item in candidate:\n    if judge[item]:\n        ans += 1\n\nprint(ans)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#import sympy\n#from scipy.sparse.csgraph import breadth_first_order, depth_first_order, shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\n\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nN = ni()\nA = na()\nd = collections.Counter(A)\ndp = [0] * (10 ** 6 + 10)\nA.sort()\npre = -1\nans = 0\nfor ai in A:\n    if pre == ai:\n        continue\n    pre = ai\n    if dp[ai] == 0 and d[ai] == 1:\n        ans += 1\n    for j in range(ai, 10 ** 6 + 1, ai):\n        dp[j] = 1\nprint(ans)\n", "#!/usr/bin/env python3\nimport sys\nimport collections\n\ninput = sys.stdin.readline\n\n\ndef ST():\n    return input().rstrip()\n\n\ndef I():\n    return int(input())\n\n\ndef MI():\n    return list(map(int, input().split()))\n\n\ndef LI():\n    return list(MI())\n\n\nN = I()\nA = LI()\nA.sort()\ncnt = collections.Counter(A)\nMAX = A[-1] + 1\n# end = A[-1] ** 0.5\n\nfor a in A:\n    if cnt[a] >= 2:\n        del cnt[a]\n    for i in range(a * 2, MAX, a):\n        del cnt[i]\n\nprint((sum(cnt.values())))\n", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nminNum = A[0]\nmaxNum = A[N - 1]\ncountList = [0]*(10**6 + 1)\nanswer = 0\n\n# A\u306bn\u304cm\u500b\u3042\u308b\u3068\u304dcountList[n] = m\nfor i in A:\n  countList[i] += 1\n\nfor j in range(minNum, maxNum + 1):\n  # A\u306bj\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3001j\u306e\u500d\u6570\u3092\u3059\u3079\u3066countList\u304b\u3089\u9664\u5916\n  # j\u306e\u500d\u6570p\u306fj\u3067\u5272\u308a\u5207\u308c\u308b\u306e\u3067\u9664\u5916\u53ef\u80fd\n  # p\u306e\u500d\u6570q\u306fj\u3067\u3082\u5272\u308a\u5207\u308c\u308b\u306e\u3067j\u306e\u6642\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u9664\u5916\u3055\u308c\u308b\n  if countList[j] > 0:\n    for k in range(2 * j, 10**6 + 1, j):\n      countList[k] = 0\n  # j\u304c2\u500b\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306b\u306f\u305d\u308c\u3092\u6b63\u89e3\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\n  if countList[j] == 1:\n      answer += 1\n\nprint(answer)", "N=int(input())\nA=list(map(int,input().split()))\n\nA.sort()\n\ndp=[False]*(10**6*2)\nans=0\nfor idx,i in enumerate(A):\n  if dp[i]:continue\n  tmp=i\n  ans+=1\n  while tmp<10**6*2-1:\n    dp[tmp]=True\n    tmp+=i\n  if idx!=len(A)-1 and A[idx+1]==i:\n    ans-=1\nprint(ans)", "def resolve():\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    M=int(1e6+1)\n    f=[0]*M\n    for x in a:\n        if f[x]!=0:\n            f[x]+=1\n            continue\n        for nx in range(x,M,x):\n            f[nx]+=1\n    ans=0\n    for x in a:\n        if f[x]==1:ans+=1\n    print(ans)\nresolve()\n", "n = int(input())\na = list(map(int, input().split()))\ndp = [0] * (max(a) + 1)\na.sort()\n\nfor i in a:\n  temp = i\n  while temp <= a[-1]:\n    dp[temp] += 1\n    temp += i\nans = 0\nfor i in a:\n  if dp[i] == 1:\n    ans += 1\n             \nprint(ans)", "n=int(input())\na=sorted(list(map(int,input().split())))\ndp=[0]*(m:=a[-1]+1)\nfor i in a:\n  for j in range(i,m,i):\n    dp[j]+=1\nans=0\nfor i in a:\n  if dp[i]==1:\n    ans+=1\nprint(ans)", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\n\nc = Counter(a)\nk = sorted(list(c.keys()))\n\nkl =k[-1]\nb = [1] * kl\ncnt = 0\nfor i in k:\n    if c[i] == 1 and b[i-1] == 1:\n        cnt += 1\n    for j in range(1, kl+1):\n        if i*j > kl:\n            break\n        else:\n            b[i*j-1] = 0\nprint(cnt)", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nam=max(a)\ndp=[[True,0] for _ in range(am+1)]\ncount=0\nfor i in a:\n    if dp[i][0]==False:\n        continue\n    else:\n        if dp[i][1]==1:\n            dp[i][0]=False\n            count-=1\n        else:\n            dp[i][1]=1\n            count+=1\n            for j in range(2*i,am+1,i):\n                dp[j][0]=False\nprint(count)", "n = int(input())\na = list(map(int,input().split()))\na.sort()\nma = a[-1]\n\ndp = [0]*(ma+1)\n\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        dp[a[i]]=1\n\nfor i in a:\n    for j in range(i*2,ma+1,i):\n        #if dp[j]==1:\n            #break\n        dp[j]=1\n        \nans = 0\nfor i in a:\n    if dp[i]==0:\n        ans+=1\n        \nprint(ans)", "#!/usr/bin/env python3\nimport sys\nimport collections\n\ninput = sys.stdin.readline\n\n\ndef ST():\n    return input().rstrip()\n\n\ndef I():\n    return int(input())\n\n\ndef MI():\n    return list(map(int, input().split()))\n\n\ndef LI():\n    return list(MI())\n\n\nN = I()\nA = LI()\nA.sort()\ncnt = collections.Counter(A)\nend = A[-1] + 1\n\nfor a in A:\n    if cnt[a] >= 2:\n        del cnt[a]\n    for i in range(a * 2, end, a):\n        del cnt[i]\n\nprint((sum(cnt.values())))\n", "from collections import Counter\nN = int(input())\nA = list(map(int,input().split()))\nC = Counter(A)\nA = set(A)\nB = [True] * (10 ** 6 + 1)\nfor a in A:\n    for i in range(2 * a,10**6 + 1 ,a):\n        B[i] = False\ncnt = 0\nfor a in A:\n    if (B[a] == True) and (C[a] == 1):\n        cnt += 1\nprint(cnt)", "N = int(input())\nA = list(map(int, input().split()))\n\nM = 10**6 + 1\n\ncnt = [0] * M\n\nfor a in A:\n    if cnt[a] != 0:\n        cnt[a] += 1\n        continue\n    for b in range(a, M, a):\n        cnt[b] += 1\n\nans = 0\nfor a in A:\n    if cnt[a] == 1:ans += 1\n\nprint(ans)\n", "import numpy as np\nfrom collections import Counter\n\nn = int(input())\nA = list(map(int,input().split()))\n\ncnt = Counter(A)\n\nb = np.array([0]*(max(A)+1))\n\nA.sort()\nans = 0\nfor a in A:\n    if cnt[a] == 1 and not b[a]:\n        ans += 1\n    b[a::a] = 1\n\nprint(ans)", "import numpy as np\nimport random\n\nrand = False\nif rand:\n    N = 10 ** 5\n    A = random.choices(list(range(1, 10**6)), k=N)\nelse:\n    N = int(input())\n    A = list(map(int, input().split()))\n\nA.sort()\nMX = max(A)\nret = np.zeros(MX+1, dtype=np.bool)\nA = np.array(A, dtype=np.int32)\nret[ A ] = True\n\nfor i in range(N-1):\n    m = A[i] * 2\n    if A[i] == A[i+1]: m = A[i]\n    ret[ np.arange(m, MX+1, A[i]) ] = False\n\nprint((np.sum(ret)))\n\n    \n\n\n", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nINF = 10**6+1\nlis = [1]*INF\nexist = [0]*INF\nfor i in range(N):\n    a = A[i]\n    if lis[a] and exist[a] < 1:\n        q = 2\n        while a*q < INF:\n            lis[a*q] = 0\n            q += 1\n    exist[a] += 1\ncnt = 0\nfor a in A:\n    if lis[a] and exist[a] == 1:\n        cnt += 1\nprint(cnt)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nminNum = A[0]\nmaxNum = A[N - 1]\ncountList = [0]*(10**6 + 1)\nanswer = 0\n\n# A\u306bn\u304cm\u500b\u3042\u308b\u3068\u304dcountList[n] = m\nfor i in A:\n  countList[i] += 1\n\nfor j in range(minNum, maxNum + 1):\n  # A\u306bj\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3001j\u306e\u500d\u6570\u3092\u3059\u3079\u3066countList\u304b\u3089\u9664\u5916\n  # j\u306e\u500d\u6570p\u306fj\u3067\u5272\u308a\u5207\u308c\u308b\u306e\u3067\u9664\u5916\u53ef\u80fd\n  # p\u306e\u500d\u6570q\u306fj\u3067\u3082\u5272\u308a\u5207\u308c\u308b\u306e\u3067j\u306e\u6642\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u9664\u5916\u3055\u308c\u308b\n  if countList[j] > 0:\n    for k in range(2 * j, maxNum + 1, j):\n      countList[k] = 0\n  # j\u304c2\u500b\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306b\u306f\u305d\u308c\u3092\u6b63\u89e3\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\n  if countList[j] == 1:\n      answer += 1\n\nprint(answer)", "#!/usr/bin/env python\n\nn = int(input())\na = list(map(int, input().split()))\n\na = sorted(a)\nma = a[-1]\ndiv = [0 for _ in range(ma+1)]\n\nfor i in range(n):\n    for j in range(a[i], ma+1, a[i]):\n        div[j] += 1\n\nans = 0 \nfor i in range(n):\n    if div[a[i]] == 1:\n        ans += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nMAX = 10 ** 6 + 5\ncnt = [0] * MAX\nok = [True] * MAX\n\nfor x in a:\n    cnt[x] += 1\n\nans = 0\n\nfor i in range(1,MAX):\n    if cnt[i] > 0:\n        for j in range(i*2, MAX, i):\n            ok[j] = False\n        if ok[i] and cnt[i] == 1:\n            ans += 1\nprint(ans)", "#!/usr/bin/env python3\nimport sys\nfrom itertools import chain\nimport numpy as np\n\n# from itertools import combinations as comb\n# form bisect import bisect_left, bisect_right, insort_left, insort_right\n# from collections import Counter\n\n\ndef solve(N: int, A: \"List[int]\"):\n    check = np.zeros(max(A) + 1, dtype=np.uint8)\n    for ai in A:\n        if check[ai] == 0:\n            check[ai::ai] += 1\n        else:\n            check[ai] = 2\n\n    answer = 0\n    for ai in A:\n        if check[ai] == 1:\n            answer += 1\n\n    return answer\n\n\ndef main():\n    tokens = chain(*(line.split() for line in sys.stdin))\n    # N, A = map(int, line.split())\n    N = int(next(tokens))  # type: int\n    A = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    answer = solve(N, A)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\nd = {}\nfor x in a:\n    d[x] = d.get(x, 0) + 1\n\nans = 0\nok = [1] * (10 ** 6 + 1)\nfor x in list(d.keys()):\n    if ok[x]:\n        for j in range(2, (10 ** 6) // x + 1):\n            ok[j * x] = 0\n        if d[x] == 1:\n            ans += 1\n\nprint(ans)\n", "n = int(input())\nnums = list(map(int,input().split()))\nnums.sort()\nans = 0\ncnt = {}\nflag = [0]*1000005\nfor i in nums:\n  cnt[i] = cnt.get(i,0) + 1\n\nfor i in nums:\n  if flag[i] == 0 and cnt[i] == 1:\n    ans += 1\n  if flag[i] == 1:\n    continue\n  for j in range(i,1000001,i):\n    flag[j] = 1\n\nprint(ans)", "import sys\nimport math\ndef input(): return sys.stdin.readline().rstrip()\nfrom decimal import Decimal\n\nM = 10 ** 6 + 5\nN = int(input())\nA = list(map(int, input().split()))\n\ncount = [0] * M\nfor a in A:\n    if count[a] != 0:\n        count[a] = 2\n        continue\n    for i in range(1, M):\n        if i * a >= M:\n            break\n        count[a*i] += 1\n\nans = 0\nfor a in A:\n    if count[a] == 1:\n        ans += 1\n    \nprint(ans)", "from collections import Counter as c\nn = int(input())\na = list(map(int,input().split()))\na.sort()\n\ncount, a_max = 0, a[-1]\nli = [True] * (a_max+1)\n\nfor i in a:\n  if li[i] == \"x\":\n    count -= 1\n    li[i] = \"y\"\n\n  if li[i] == True:\n    count += 1\n    li[i] = \"x\"\n\n  j = 2\n  while i * j <= a_max:\n    li[i*j] = False\n    j += 1\n\nprint(count)", "import sys\n\nn = int(input())\narr= list(map(int,sys.stdin.readline().split()))\narr = sorted(arr)\nmax_num = max(arr)\ndp = [0 for i in range(max_num+1)]\nfor i in arr:\n    j = i\n    while j<=max_num:\n        dp[j]+=1\n        j+=i\nans = 0\nfor i in arr:\n    if dp[i] == 1:\n        ans+=1\nprint(ans)", "import collections\nn = int(input())\nline = list(map(int, input().split( )))\narr = sorted(line)\ncoll = collections.Counter(arr)\n#\u6700\u5927\u5024\nMa = arr[-1]\n#\u30bd\u30fc\u30c8\u3057\u305fn\u756a\u76ee\u306e\u3084\u3064\u306e\u5224\u5b9a\u306fn+1\u4ee5\u964d\u3067\u304a\u3063\u3051\u3044. \n#\u540c\u3058\u6570\u5b57\u304c\u3042\u308b\u6575\u306f\u7121\u8996\ns = set()\nfor i in range(n):\n  if coll[arr[i]] >= 2:\n    s.add(arr[i])\n  for j in range(2, Ma//arr[i]+1):\n    s.add(arr[i]*j)\ncnt = 0\n\n#print(s)\nfor a in arr:\n  if a in s: continue\n  cnt += 1\nprint(cnt)", "n=int(input())\nan=[int(i) for i in input().split()]\nan.sort()\nmaxA=an[-1]\n\nans_table=[0]*(maxA+1)\n\n\nfor ai in an:\n    for k in range(1,int(maxA/ai)+1):\n        ans_table[ai*k]+=1\nans=0\nfor ai in an:\n    if ans_table[ai]==1:\n        ans+=1\n\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\ncountList = [0]*(10**6 + 1)\nanswer = 0\n\n# A\u306bn\u304cm\u500b\u3042\u308b\u3068\u304dcountList[n] = m\nfor i in A:\n  countList[i] += 1\n\nfor j in range(10**6 + 1):\n  # A\u306bj\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3001j\u306e\u500d\u6570\u3092\u3059\u3079\u3066countList\u304b\u3089\u9664\u5916\n  # j\u306e\u500d\u6570p\u306fj\u3067\u5272\u308a\u5207\u308c\u308b\u306e\u3067\u9664\u5916\u53ef\u80fd\n  # p\u306e\u500d\u6570q\u306fj\u3067\u3082\u5272\u308a\u5207\u308c\u308b\u306e\u3067j\u306e\u6642\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u9664\u5916\u3055\u308c\u308b\n  if countList[j] > 0:\n    for k in range(2 * j, 10**6 + 1, j):\n      countList[k] = 0\n  # j\u304c2\u500b\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306b\u306f\u305d\u308c\u3092\u6b63\u89e3\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\n  if countList[j] == 1:\n      answer += 1\n\nprint(answer)", "from collections import Counter\nN = int(input())\nA = list(map(int, input().split()))\nC = Counter(A)\n\nA = set(A)\nMAX_A = 10 ** 6\nX = [0] * (MAX_A + 1)\nfor a in A:\n    for i in range(a, MAX_A + 1, a):\n        X[i] += 1\n\nans = len([a for a in A if (X[a] == 1) and (C[a] == 1)])\nprint(ans)", "from collections import Counter\nn = int(input())\nA = sorted(map(int, input().split()))\nm = A[-1]\nC = Counter(A)\nflags = [True for _ in range(m + 1)]\nfor a in A:\n    if flags[a]:\n        i = 2\n        x = a * i\n        while x <= m:\n            flags[x] = False\n            i += 1\n            x = a * i\nans = 0\nfor a in set(A):\n    if C[a] == 1 and flags[a]:\n        ans += 1\nprint(ans)\n", "N=int(input())\nA=list(map(int,input().split()))\nA.sort()\nAmax=A[-1]\ndp=[True]*(Amax+1)\nans=0\nfor i in range(N-1):\n    p=A[i]\n    if dp[p]:\n        for j in range(1,Amax//p+1):\n            dp[p*j]=False\n        if p!=A[i+1]:\n            ans+=1\nif dp[Amax]:\n    ans+=1\nprint(ans)\n\n        \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n        \n\n    \n\n\n\n\n\n\n\n\n\n    \n\n        \n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n    \n\n\n\n\n\n    \n\n\n\n\n\n\n        \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n    \n\n\n    \n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n", "def main():\n  n=int(input())\n  a=sorted([int(x) for x in input().split()])\n  cnt=[0]*(10**6+5)\n  ans=0\n  for ai in a:\n    j,x=2,ai\n    while x<=10**6:\n      if j==2 and cnt[x]>=1: cnt[x]+=1; break;\n      cnt[x]+=1\n      x=ai*j; j+=1;\n \n  for ai in a:\n    if cnt[ai]<=1: ans+=1;\n      \n  print(ans)\n      \ndef __starting_point():\n  main()\n__starting_point()", "n = int(input())\na = sorted(map(int, input().split()))\nl = [0]*(10**6+1)\nM = max(a)\n\nfor i in a:\n  if l[i] == 0:\n    l[i] = 1\n    for j in range(i*2, M+1, i):\n      l[j] = -1\n  else:\n    l[i] = -1\nprint(l.count(1))", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\na.sort()\ndp = [0] * a[-1]\nc = Counter(a)\nfor i in a:\n    for j in range(i, a[-1]+1, i):\n        dp[j-1] += 1\nans = 0\nfor i in a:\n    if dp[i-1] == 1 and c[i]:\n        ans += 1\nprint(ans)", "import collections\nn = int(input())\na = sorted([int(i) for i in input().split()])\ncnt = collections.Counter(a)\nmax_i = a[-1] + 1\nfor i in a:\n  if cnt[i] >= 2:\n    del cnt[i]\n  for j in range(i*2, max_i, i):\n    del cnt[j]\nprint(len(cnt))", "n = int(input())\na = list(map(int,input().split()))\n\ncnt = [0] * 1000005\nfor x in a:\n    if cnt[x] != 0: \n        cnt[x] = 2\n    else: \n        for i in range(x,1000005,x):\n            cnt[i] += 1\n\nans = 0\nfor x in a:\n    if cnt[x] == 1:\n        ans += 1\n\nprint(ans)\n", "N = int(input())\nA = list(map(int, input().split()))\n\n\ndef solve2(N, A):\n    A.sort()\n    amax = A[-1]\n    dp = [True] * (amax + 1)\n    cnt = [0] * (amax + 1)\n\n    for a in A:\n        cnt[a] += 1\n\n    for i in range(amax):\n        x = i + 1\n        if cnt[x] > 1:\n            dp[x] = False\n\n        if cnt[x] > 0:\n            y = x * 2\n            while y <= amax:\n                dp[y] = False\n                y += x\n\n    ansval = [x for x in A if dp[x]]\n\n    # print(ansval)\n    ans = len(ansval)\n\n    return ans\n\n\ndef solve1(N, A):\n    ans = 0\n    for i in range(N):\n        is_ans = True\n        for j in range(N):\n            if i != j:\n                if A[i] % A[j] == 0:\n                    is_ans = False\n                    break\n\n        if is_ans:\n            ans += 1\n\n    return ans\n\n\nprint((solve2(N, A)))\n", "from collections import Counter\nN = int(input())\nA = list(map(int, input().split()))\nC = Counter(A)\n\nA = set(A)\nMAX_A = 10 ** 6\nX = [0] * (MAX_A + 1)\nfor a in A:\n    for i in range(a, MAX_A + 1, a):\n        X[i] += 1\n\nans = len([a for a in A if (X[a] == 1) and (C[a] == 1)])\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nM = 10**6 + 1\ncnt = [0] * M\nfor a in A:\n    if cnt[a] != 0:\n        cnt[a] += 1\n        continue\n    for b in range(a, M, a):\n        cnt[b] += 1\nans = 0\nfor a in A:\n    if cnt[a] == 1:ans += 1\nprint(ans)\n", "def abc170d_not_divisible():\n    n = int(input())\n    cnt = 0\n    a = sorted(list(map(int, input().split())))\n    flgs = [True] * (a[-1]+1)\n    if n == 1:\n        print(1)\n        return\n    for i in range(n):\n        if i != n - 1 and a[i] == a[i + 1]:\n            flgs[a[i]] = False\n            continue\n        for j in range(a[i] * 2, a[-1] + 1, a[i]):\n            flgs[j] = False\n        if flgs[a[i]]:\n            cnt += 1\n    print(cnt)\n\n\nabc170d_not_divisible()", "import math\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nmaxa=max(a)\narr=[0]*(maxa+1)\nfor i in a:\n  if arr[i]==0:\n    t=math.ceil((maxa+1)/i)\n    for j in range(t):\n      arr[i*j]+=1\n  elif arr[i]==1:\n    arr[i]=2\nans=0\nfor i in a:\n  if arr[i]==1:\n    ans+=1\nprint(ans)", "N = int(input())\nA = sorted(list(map(int,input().split())))\nlim = max(A)\nB = [0] * (lim+1)\nfor i in range(N):\n    B[A[i]] += 1\nans = N\nfor i in range(1,lim+1):\n    if B[i] == 0:\n        continue\n    if B[i] >= 2:\n        ans -= B[i]\n        B[i] = 0\n    for j in range(i*2,lim+1,i):\n        ans -= B[j]\n        B[j] = 0\n\nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\n\na.sort()\n\nx=a[-1]\n\ndp=[0 for _ in range(x+1)]\n\nfor b in a:\n  y=b\n  while y<=x:\n    dp[y]+=1\n    y+=b\n\n    \nans=0\nfor c in a:\n  if dp[c]==1:\n    ans+=1\n    \nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\na=sorted(a)\nb=list(set(a))\nm=len(b)\n\np=[0]*(10**6+1)\nfor i in b:\n    if p[i]==0:\n        j=2\n        while i*j<=10**6:\n            p[i*j]=1\n            j+=1\na.append(-1)\na.insert(0,-1)\nans=0\nfor i in range(1,n+1):\n    if a[i]!=a[i+1] and a[i]!=a[i-1] and p[a[i]]==0:\n        ans+=1\nprint(ans)\n", "import collections\nn = int(input())\nA = list(map(int, input().split()))\nA.sort()\ncnt = collections.Counter(A)\n#print(cnt)\nfor a in A:\n    if cnt[a] >= 2:\n        del cnt[a]\n    for j in range(2*a, A[-1]+1, a):\n        del cnt[j]\n#print(cnt)\nprint((len(cnt)))\n", "n = int(input())\na = sorted(list(map(int, input().split())))\nans = 0\ndp = [0]*(a[-1]+1)\n\nfor i in a:\n    for j in range(i, a[-1]+1, i):\n        dp[j] += 1\n\nfor i in a:\n    if dp[i]==1:\n        ans += 1\nprint(ans)\n", "import collections as c\nn,a1=int(input()),[*map(int,input().split())]\na2,a3,b=set(a1),c.Counter(a1),[0]*(10**6+1)\nfor i in a2:\n  for j in range(i,10**6+1,i):\n    b[j]+=1\nprint(sum(b[i]==1 and a3[i]==1 for i in a2))", "import bisect\nN=int(input())\nA=[int(x) for x in input().split()]\nA=sorted(A)\nmaxA=max(A)\nans=0\nso_list=[1]*(maxA+1)\nindex=0\ni=0\n\nwhile(i<N):\n    flag=0\n    now=A[i]\n    if so_list[now]==1:\n        index=0\n        flag=1\n        while(index+now<=maxA):\n            so_list[index+now]=0\n            index+=now\n    right=bisect.bisect_right(A,now)#\u540c\u3058\u6570\u5b57\u306f\u3044\u304f\u3064\u3042\u308b\uff1f\n    if right-i==1:\n        if flag==1:\n            ans+=1\n            #print(now)\n        i=right\n    else:\n        i+=1\n\nprint(ans)", "def main():\n\tN = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\tA.sort()\n\tl = A[-1]\n\tp = [1] * l\n\tfor i in range(len(A)):\n\t\ta = A[i]\n\t\tif p[a-1] == 1:\n\t\t\tp[a-1] = 2\n\t\t\tfor j in range(2 * a - 1, l, a):\n\t\t\t\tp[j] = 0\n\t\telif p[a-1] == 2:\n\t\t\tp[a-1] = 0\n\tprint(len([x for x in A if p[x - 1] in [1, 2]]))\n\nmain()", "def main():\n\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    A = sorted(A)\n    Amax = A[-1]\n    count = [0 for _ in range(Amax+1)]\n\n    for a in A:\n        for i in range(1, Amax//a+1):\n            count[i*a] += 1\n\n    ans = 0\n    for i in range(N):\n        a = A[i]\n        if count[a] == 1:\n#            print(i)                                                                                                                                            \n            ans += 1\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\nA.sort()\nM = 10**6+5\ncnt = [0]*M\nfor x in A:\n    if cnt[x] != 0:\n        cnt[x] = 2\n        continue\n    for i in range(x,M,x):\n        cnt[i] += 1\nans = 0\nfor i in A:\n    if cnt[i] == 1:\n        ans += 1\nprint(ans)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n  N = i_input()\n  A = i_list()\n\n  P = [True]*(10**6+1)\n  C = Counter(A)\n\n  s = list(set(A))\n\n  for x in s:\n    t = x*2\n    while t<= 10**6:\n      P[t] = False\n      t += x\n  ans = 0\n  for x in A:\n    if C[x] == 1 and P[x] == True:\n      ans += 1\n  print(ans)\n\n \n \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nMAX = 10**6\ntable = [0]*(MAX+1)\nfor x in map(int,input().split()):\n    table[x] += 1\nfor i in range(MAX+1):\n    if table[i]:\n        for j in range(2*i if table[i] == 1 else i, MAX+1, i):\n            table[j] = 0\nprint(sum(table))", "n = int(input())\na = list(map(int,input().split()))\n\nma = max(a)\nm = [0]*(ma + 1)\n\nfor i in a:\n    if m[i] == 1:\n        m[i] = 2\n        continue\n    for j in range(i,ma+1,i):\n        m[j]+=1\nans = 0\nfor i in a:\n    if m[i] == 1:\n        ans += 1\nprint(ans)", "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef main():\n    n = int(input())\n    A = list(map(int,input().split()))\n    A.sort()\n    max_A = max(A)\n    dp = [True] * (max_A+1) # i\u3088\u308a\u5c0f\u3055\u3044i\u306e\u7d04\u6570\u304cA\u306b\u5b58\u5728\u3057\u306a\u3044\n    multi = [0] * (max_A+1) #\u91cd\u8907\u500b\u6570\n    for a in A:\n        multi[a] += 1\n        if multi[a] > 1: continue\n        x = a\n        while x + a <= max_A:\n            x += a\n            dp[x] = False\n    ans = 0\n    for a in A:\n        if dp[a] and multi[a]==1:\n            ans += 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\nmax_a = max(A) + 1\ncounter = [0 for _ in range(max_a)]\n\nfor i in A:\n    for j in range(i, max_a, i):\n        counter[j] += 1\n\nres = 0\n\nfor a in A:\n    if counter[a] == 1:\n        res += 1\n\nprint(res)\n", "'''\nCreated on 2020/08/23\n\n@author: harurun\n'''\ndef main():\n  from collections import Counter\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n\n  ans=0\n  N=int(pin())\n  A=list(map(int,pin().split()))\n  c=Counter(A)\n  t=max(A)\n  dp=[True]*t\n  for i in A:\n    if dp[i-1]:\n      n=2*i\n      while n<=t:\n        dp[n-1]=False\n        n+=i\n  for k in A:\n    if c[k]==1 and dp[k-1]:\n      ans+=1\n  print(ans)\n  return\nmain()\n", "N = int(input())\nA = list(map(int, input().split()))\n \nM = 10**6 + 1\n \ncnt = [0] * M\n \nfor a in A:\n    if cnt[a] != 0:\n        cnt[a] += 1\n        continue\n    for b in range(a, M, a):\n        cnt[b] += 1\n \nans = 0\nfor a in A:\n    if cnt[a] == 1:ans += 1\n \nprint(ans)", "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int, input().split()))\na.sort()\nm=max(a)\narr=[0]*(m+1)\nflag=[True]*(m+1)\nans=0\nfor i in range(n):\n    if flag[a[i]]:\n        arr[a[i]]+=1\n        if not arr[a[i]]==1:\n            continue\n        for j in range(a[i]*2,m+1,a[i]):\n            flag[j]=False\nprint(arr.count(1))", "import sys\ninput = sys.stdin.readline\n\n#n = int(input())\n#l = list(map(int, input().split()))\n\n'''\na=[]\nb=[]\nfor i in range():\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\ndef cal(n,li):\n    lis=[True]*(n+1)\n    for item in li:\n        if lis[item]:\n            for i in range(item*2,n+1,item):\n                lis[i]=False\n    return lis\nfrom collections import Counter\n\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nl=cal(a[-1],a)\nll=Counter(a)\n#print(l,ll)\nans=0\nfor i in range(n):\n    if ll[a[i]]==1:\n        if l[a[i]]:\n            ans+=1\n\nprint(ans)\n", "N = int(input())\nA_list = list(map(int, input().split()))\n\nyakusu = [0] * (10 ** 6 + 10)\nfor i in range(N):\n    a = A_list[i]\n    if yakusu[a] != 0:\n        yakusu[a] = 2\n        continue\n    for j in range(a, 10 ** 6 + 10, a):\n        yakusu[j] += 1\n\nans = 0\nfor a in A_list:\n    if yakusu[a] == 1:\n        ans += 1\nprint(ans)", "n = int(input())\na = list(map(int,input().split()))\nm = max(a)\nflag = [True]*(m+1)\nc = [0]*(m+1)\nb = list(sorted(a))\nfor i in b:\n    x = i + i\n    while x <= m:\n        flag[x] = False\n        x += i\n    c[i] += 1\nans = 0\nx = 0\nl = []\nans = 0\nfor i in a:\n    if flag[i] and c[i] <= 1:\n        ans += 1\nprint(ans)", "from collections import Counter\nN = int(input())\nA = list(map(int, input().split()))\nC = Counter(A)\n\nA = set(A)\nMAX_A = 10 ** 6\nX = [0] * (MAX_A + 1)\nfor a in A:\n    for i in range(a, MAX_A + 1, a):\n        X[i] += 1\n\nans = len([a for a in A if (X[a] == 1) and (C[a] == 1)])\nprint(ans)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nINF = float('inf')\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\nn = I()\n\nA = readInts()\n\nis_ok = [0] * (10**6+1)\nse = set(A)\nC = Counter(A)\nfor a in se:\n    for b in range(a,10**6+1,a):\n        is_ok[b] += 1\nans = 0\nfor i in range(n):\n    if C[A[i]] >= 2:\n        continue\n    if is_ok[A[i]] == 1:\n        ans += 1\nprint(ans)\n", "N = int(input())\nA = list(map(int, input().split()))\nA = sorted(A)\nL = [0] * (A[-1]+1)\nfor a in A:\n    L[a] = 1\n\nfor p in A:\n    if not L[p]: continue \n    L[p] += 1\n    n = 2\n    while p*n <= A[-1]:\n        L[p*n] = 0\n        n += 1\n\nans = L.count(2)\nprint(ans)", "from collections import Counter\nn,*a = map(int,open(0).read().split())\ns = set(a)\nc = Counter(a)\nm = max(s)\nl = [True]*(m+1)\nans = 0\nfor i in range(1,m+1):\n  if i in s and l[i]:\n    if c[i] == 1:\n      ans += 1\n    for j in range(1,m//i+1):\n      l[i*j] = False\nprint(ans)", "n=int(input())\na=sorted(list(map(int,input().split())))\ndp=[0]*(m:=a[-1]+1)\nfor i in a:\n  dp[i]+=1\nfor i in a:\n  for j in range(i*2,m,i):\n    dp[j]+=1\nans=0\nfor i in a:\n  if dp[i]==1:\n    ans+=1\nprint(ans)", "#!/usr/bin/env python\n\nn = int(input())\na = list(map(int, input().split()))\na = sorted(a)\nma = a[-1]\n\ndup = [0 for _ in range(ma+1)]\ndiv = [0 for _ in range(ma+1)]\n\nfor i in range(n):\n    dup[a[i]] += 1\n#print('dup =', dup)\n\nfor i in range(n):\n    for j in range(a[i], ma+1, a[i]):\n        div[j] += 1\n#print('div =', div)\n\nans = 0 \nfor i in range(n):\n    if div[a[i]] == 1:\n        ans += 1\nprint(ans)\n", "n=int(input())\na=list(map(int,input().split()))\nans=0\na.sort()\nnum=a[-1]\ndp=[True]*num\nseen=[0]*num\nfor i in range(n):\n    num2=a[i]\n    if dp[num2-1]==True:\n        if seen[num2-1]==1:\n            dp[num2-1]=False\n        for j in range(2,num//num2+1):\n            dp[j*num2-1]=False\n    seen[a[i]-1]=1\nans=0\nfor i in range(n):\n    if dp[a[i]-1]==True:\n        ans+=1\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Sep 12 00:21:05 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nA = [int(x) for x in input().split()]\n\nA.sort()\nA += [-1]\ndp = [0] + [True]*10**6\ndef Solve():\n    if A[0] == 1:\n        if len(A) >= 2 and A[1] == 1:\n            return 0\n        else:\n            return 1\n    k = 0\n    for i in range(1,10**6+1):\n        if i == A[k]:\n            #print(\"A\",i)\n            #k\u306e\u51e6\u7406\n            tmp = A[k]\n            cnt = 0\n            while k <= N-1 and A[k] == tmp:\n                #print(\"B\",k,tmp)\n                cnt += 1\n                if cnt == 2:\n                    dp[tmp] = False\n                k += 1\n            #\u500d\u6570\u306e\u6d88\u53bb\n            for j in range(2*i,10**6+1,i):\n                #print(\"C\")\n                dp[j] = False\n    ans = 0\n    for a in A[:-1]:\n        if dp[a]:\n            ans += 1\n    return ans\n\nans = Solve()\nprint(ans)"]