["def det(s, i, j):\n    ans = 0\n    curr = i\n    for a in s:\n        if a == curr:\n            ans += 1\n            if curr == i: curr = j\n            else: curr = i\n\n    if i == j: return ans\n    return ans // 2 * 2\n\nfor t in range(int(input())):\n    s = list(map(int, list(input())))\n    ans = 0\n    \n    for i in range(10):\n        for j in range(10):\n            ans = max(ans, det(s, i, j))\n\n    print(len(s)-ans)\n", "for _ in range(int(input())):\n    s=input()\n    n=len(s)\n    s=[int(s[i]) for i in range(n)]\n    ans=2\n    for a in range(10):\n        for b in range(10):\n            temp=0\n            sign=\"a\"\n            for i in range(n):\n                if sign==\"a\":\n                    if s[i]==a:\n                        temp+=1\n                        sign=\"b\"\n                else:\n                    if s[i]==b:\n                        temp+=1\n                        sign=\"a\"\n            if a==b:\n                ans=max(ans,temp)\n            else:\n                temp-=temp%2\n                ans=max(ans,temp)\n    print(n-ans)\n", "from collections import Counter\n\nt = int(input())\n\nfor _ in range(t):\n    s = input()\n    best = len(s) - max(Counter(s).values())\n    longest = [[0 for _ in range(10)] for _ in range(10)]\n    for c in s:\n        ci = int(c)\n        for j in range(10):\n            if longest[ci][j] % 2 == 0:\n                longest[ci][j] += 1\n            if longest[j][ci] % 2:\n                longest[j][ci] += 1\n\n    # print(longest)\n    best = min(best, len(s) - max(longest[i][j] - (longest[i][j] % 2) for i in range(10) for j in range(10) if i != j))\n    print(best)\n", "import math\nimport sys\ninput = sys.stdin.readline\n\nT = int(input())\n\nfor t in range(T):\n    s = input()[:-1]\n\n    answer = math.inf\n    for n1 in range(10):\n        sn1 = str(n1)\n        for n2 in range(10):\n            sn2 = str(n2)\n            lookn1 = True\n            current = 0\n            for c in s:\n                if c == sn1 and lookn1:\n                    lookn1 = False\n                    current += 1\n                elif c == sn2 and not lookn1:\n                    lookn1 = True\n                    current += 1\n            if current % 2 and n1 != n2:\n                current -= 1\n\n            answer = min(answer, len(s)-current)\n\n    print(answer)\n"]