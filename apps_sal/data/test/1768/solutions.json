["import sys\n\n\n\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\n\ndp = [[-1] * (n + 1) for i in range(26)]\n\n\nfor c in range(26):\n    for j in range(n):\n        tst = 1 if s[j] == chr(c + 97) else 0\n        dp[c][1 - tst] = max(dp[c][1 - tst], 1)\n        for k in range(j + 1, n):\n            if s[k] == chr(c + 97):tst += 1\n            dp[c][k - j + 1 - tst] = max(dp[c][k - j + 1 - tst], k - j + 1)\n\n#for c in range(26):\n#    for j in range(n):\n#        dp[c][j + 1] = max(dp[c][j], dp[c][j + 1])\n\nq = int(sys.stdin.readline().strip())\n\nfor i in range(q):\n    m, c = [item for item in sys.stdin.readline().strip().split()]\n    m = int(m)\n    #print(max([dp[ord(c) - 97][u] for u in range(m + 1)]))\n    print(dp[ord(c) - 97][m]) if dp[ord(c) - 97][m] != -1 else print(n)", "import sys\n\ndef solve():\n    n = int(sys.stdin.readline().rstrip())\n    s = sys.stdin.readline().rstrip()\n    q = int(sys.stdin.readline().rstrip())\n\n    pfs = [[0]*(n + 1) for i in range(26)]\n    for i in range(n):\n        ch = ord(s[i]) - ord('a')\n\n        for j in range(26):\n            if j == ch:\n                pfs[j][i + 1] = pfs[j][i] + 1\n            else:\n                pfs[j][i + 1] = pfs[j][i]\n\n    '''\n    for i in range(26):\n        print(chr(i + ord('a')), *pfs[i])\n    print()\n    '''\n\n    dp = [[0]*(n + 1) for i in range(26)]\n\n    for c in range(26):\n        for l in range(n + 1):\n            for r in range(l, n + 1):\n                tc = r - l - (pfs[c][r] - pfs[c][l])\n                dp[c][tc] = max(dp[c][tc], r - l)\n\n        for i in range(1, n + 1):\n            dp[c][i] = max(dp[c][i], dp[c][i - 1])\n\n    '''\n    for i in range(26):\n        print(chr(i + ord('a')), *dp[i])\n    '''\n\n    for qi in range(q):\n        mi, ci = sys.stdin.readline().split()\n        mi = int(mi)\n        ci = ord(ci) - ord('a')\n        ans = dp[ci][mi]\n        print(ans)\n\ndef __starting_point():\n    solve()\n__starting_point()", "import sys\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nans = [[-1]*(n+1) for x in range(26)]\n\nfor c in range(26):\n    for l in range(n):\n        nrOfC = 0 \n        for r in range(l, n):\n            if s[r] == chr(97 + c):\n                nrOfC += 1\n            ans[c][r - l + 1 - nrOfC] = max(ans[c][r - l + 1 -nrOfC], r-l+1)\n\nfor i in range(int(sys.stdin.readline().strip())):\n    m,c = sys.stdin.readline().strip().split()\n    m = int(m)\n    print(ans[ord(c) - 97][m] if ans[ord(c) - 97][m] != -1 else n)", "import sys\nn = int(sys.stdin.readline().strip())\ns = sys.stdin.readline().strip()\nans = [[-1]*(n+1) for x in range(26)]\n\nfor c in range(26):\n    for l in range(n):\n        nrOfC = 0 \n        for r in range(l, n):\n            if s[r] == chr(97 + c):\n                nrOfC += 1\n            ans[c][r - l + 1 - nrOfC] = max(ans[c][r - l + 1 -nrOfC], r-l+1)\n\nfor i in range(int(sys.stdin.readline().strip())):\n    m,c = sys.stdin.readline().strip().split()\n    m = int(m)\n    print(ans[ord(c) - 97][m] if ans[ord(c) - 97][m] != -1 else n)\n", "import string\nimport bisect\nimport sys\n\ndef main():\n  lines = sys.stdin.readlines()\n  n = int(lines[0])\n  s = lines[1]\n\n  vals = {}\n  for c in string.ascii_lowercase:\n    a = [i for i, ch in enumerate(s) if ch == c]\n    m = len(a)\n    b = [0]\n    for length in range(1, m + 1):\n      best = n\n      for i in range(m - length + 1):\n        j = i + length - 1\n        best = min(best, (a[j] - j) - (a[i] - i))\n      b.append(best)\n    vals[c] = b\n  q = int(lines[2])\n  r = []\n  idx = 3\n  while q > 0:\n    q -= 1\n    query = lines[idx].split()\n    idx += 1\n    m = int(query[0])\n    c = query[1]\n    i = bisect.bisect_right(vals[c], m)\n    r.append(str(min(n, i + m - 1)))\n  print('\\n'.join(r))\n\nmain()", "import sys\nfrom math import log2,floor,ceil,sqrt\n# import bisect\n# from collections import deque\n\nRi = lambda : [int(x) for x in sys.stdin.readline().split()]\nri = lambda : sys.stdin.readline().strip()\n \ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nINF = 10 ** 18\nMOD = 10**9+7\n\nn = int(ri())\nst = ri()\nst = [ord(st[i])-ord('a') for i in range(len(st))]\n\ndp = list2d(26,n+1,0)\nfor i in range(0,26):\n    for j in range(n):\n        cnt=  0\n        for k in range(j,n):\n            if st[k] != i:\n                cnt+=1\n            dp[i][cnt] = max(k-j+1,dp[i][cnt])\n\nfor i in range(26):\n    for j in range(1,n+1):\n        dp[i][j] = max(dp[i][j-1],dp[i][j])\n\n# print(dp)\n\nqq = int(ri())\nfor i in range(qq):\n    temp= ri().split()\n    ch = ord(temp[1])-ord('a')\n    # print(dp[ch])\n    m = int(temp[0])\n    if m > n:\n        m = n\n    # print(ch,m)\n    print(dp[ch][m])\n", "n = int(input())\ns = input()\ndp = [[-1]*(n+1) for x in range(26)]\n\nfor c in range(26):\n    for l in range(n):\n        n_c = 0 \n        for r in range(l, n):\n            if s[r] == chr(ord('a') + c):\n                n_c += 1\n            dp[c][r-l+1-n_c] = max(dp[c][r-l+1-n_c], r-l+1)\n\nall_res = []\nfor i in range(int(input())):\n    m, c = input().split()\n    m = int(m)\n    idx = ord(c) - ord('a')\n    all_res.append(dp[idx][m] if dp[idx][m] != -1 else n)\n\nprint('\\n'.join(map(str, all_res)))\n", "import sys\ninput = sys.stdin.readline\nN = int(input())\nS = list(map(lambda x: ord(x) - ord(\"a\"), list(input())[: -1]))\nres = [[0] * (N + 1) for _ in range(26)]\nfor c in range(26):\n  for l in range(N):\n    x = 0\n    for r in range(l + 1, N + 1):\n      x += S[r - 1] != c\n      res[c][x] = max(res[c][x], r - l)\n  for i in range(N): res[c][i + 1] = max(res[c][i + 1], res[c][i])\nfor _ in range(int(input())):\n  x, s = input().split()\n  x = int(x)\n  s = ord(s) - ord(\"a\")\n  print(res[s][x])", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\ns = input()[:-1]\nans = [[-1]*(n+1) for _ in range(26)]\n\nfor c in range(26):\n    for i in range(n):\n        cnt = 0\n        \n        for j in range(i, n):\n            if ord(s[j])-ord('a')!=c:\n                cnt += 1\n                \n            ans[c][cnt] = max(ans[c][cnt], j-i+1)\n            \nfor c in range(26):\n    for i in range(1, n+1):\n        ans[c][i] = max(ans[c][i], ans[c][i-1])\n\nfor _ in range(int(input())):\n    m, c = input().split()\n    print(ans[ord(c)-ord('a')][int(m)])", "import sys\nii = lambda: sys.stdin.readline().strip()\nidata = lambda: [int(x) for x in ii().split()]\n\n# \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\nn = int(ii())\ns = ii()\n\n# \u0411\u0443\u0434\u0435\u043c \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e \"\u0441\u0435\u0442\" - \u043f\u043e\u0434\u043e\u0442\u0440\u0435\u0437\u043e\u043a, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u0431\u0443\u043a\u0432\n# \u0414\u0430\u043b\u0435\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0438 \u0432\u043d\u0435\u0441\u0435\u043d\u0438\u0435 \u0432 \u043d\u0435\u0433\u043e \u0434\u0430\u043d\u043d\u044b\u0445:\nslov = {}\n# \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u0435 \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e \u0431\u0443\u043a\u0432\u0443 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0441\u043f\u0438\u0441\u043a\u0430, \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f\n#   \u0447\u0438\u0441\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0430\u044e\u0442 \u043d\u0430\u043c \u0440\u0430\u0437\u043c\u0435\u0440\u044b \"\u0441\u0435\u0442\u043e\u0432\", \u0430 \u0432\u0442\u043e\u0440\u043e\u0439\n#       \u0441\u043f\u0438\u0441\u043e\u043a - \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \"\u0441\u0435\u0442\u0430\u043c\u0438\" (\u043f\u0435\u0440\u0432\u044b\u0439 \u0438\n#           \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u044d\u0442\u043e\u0433\u043e \u0441\u043f\u0438\u0441\u043a\u0430 - \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u0432\u0441\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043f\u0435\u0440\u0432\u044b\u043c\n#               \"\u0441\u0435\u0442\u043e\u043c\" \u0438 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u043a\u043e\u043d\u0446\u043e\u043c \u0432\u0441\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u043c \"\u0441\u0435\u0442\u043e\u043c\")\nfor i in range(97, 97 + 26):\n    slov[chr(i)] = [[], [1]]\nslov[s[0]] = [[1], [0, 0]]  # \u041f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0438\u043c \u0432\u043d\u0435 \u0446\u0438\u043a\u043b\u0430, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0437\u0436\u0435 \u043d\u0435 \u043c\u0430\u044f\u0442\u044c\u0441\u044f \u0441 \u043d\u0435\u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044f\u043c\u0438\n\nfor j in range(1, n):\n    if slov[s[j]][1][-1] == 0:  # \u0422\u043e \u0435\u0441\u0442\u044c, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043c\u0435\u0436\u0434\u0443 \u0434\u0430\u043d\u043d\u043e\u0439 \u0431\u0443\u043a\u0432\u043e\u0439 \u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u043c \"\u0441\u0435\u0442\u043e\u043c\"\n        slov[s[j]][0][-1] += 1\n    else:  # \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \"\u0441\u0435\u0442\u0430\"\n        slov[s[j]][0] += [1]\n        slov[s[j]][1] += [0]\n\n    # \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 for - \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0441\u0442\u043e\u044f\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \"\u0441\u0435\u0442\u0430\u043c\u0438\" \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0445 \u0431\u0443\u043a\u0432\n    for i in range(97, 97 + 26):\n        if chr(i) != s[j]:\n            slov[chr(i)][1][-1] += 1\n\n# \u041f\u043e\u0448\u043b\u0430 \u0436\u0430\u0440\u0430. \u0417\u0434\u0435\u0441\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u043b\u0430\u043d\u043e\u0432 \u041d\u0430\u0434\u0435\u043a\u043e\nfor t in range(int(ii())):\n    m, c = ii().split()\n    m = int(m)\n    a, b = slov[c]\n    if sum(b) <= m:\n        print(n)\n    else:\n        if not bool(a):  # \u0415\u0441\u043b\u0438 \u043d\u0435\u0442 \"\u0441\u0435\u0442\u043e\u0432\" \u0441 \u0434\u0430\u043d\u043d\u043e\u0439 \u0431\u0443\u043a\u0432\u043e\u0439\n            print(m)\n        elif len(a) == 1:  # \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \"\u0441\u0435\u0442\" \u0432\u0441\u0435\u0433\u043e \u043e\u0434\u0438\u043d\n            print(a[0] + m)\n        else:\n            l, r = 0, 0\n            ans = 0  # \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442\n            summ_a, summ_b = 0, 0\n            used = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0443\u043a\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0437\u0430\u043c\u0435\u043d\u0438\u043b\u0438\n            b1 = b[::]\n            b1[0], b1[-1] = 0, 0\n            count = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \"\u0441\u0435\u0442\u043e\u0432\", \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442\n            while r != len(a):\n                if summ_b + b1[r] <= m:\n                    summ_b += b1[r]\n                    summ_a += a[r]\n                    r += 1\n                    ans = max(ans, m + summ_a)\n                else:\n                    summ_a -= a[l]\n                    l += 1\n                    summ_b -= b1[l]\n            print(ans)", "import sys\nn=int(input())\ns=input()\npfs=[[0 for _ in range(n+1)]for _ in range(26)]\nfor i in range(n):\n  ch=ord(s[i])-ord('a')\n  for  j in range(26):\n    if j==ch:pfs[j][i+1]=pfs[j][i]+1\n    else:pfs[j][i+1]=pfs[j][i]\n#print(pfs)\ndp=[[0 for _ in range(n+1)]for _ in range(26)]\nfor  c in range(26):\n  for  l in range(n+1):\n    for  r in range(l,n+1):\n      tc=r-l-(pfs[c][r]-pfs[c][l])\n      dp[c][tc]=max(dp[c][tc],r-l)\n  for i  in range(1,n+1):\n    dp[c][i]=max(dp[c][i],dp[c][i-1])\n\n#print(dp)\nA=[]\nfor q in range(int(input())):\n  m,c=sys.stdin.readline().split()\n  m=int(m)\n  c=ord(c)-ord('a')\n  ans=dp[c][m]\n  print(ans)\n", "import sys\nn=int(input())\ns=input()\npfs=[[0 for _ in range(n+1)]for _ in range(26)]\nfor i in range(n):\n  ch=ord(s[i])-ord('a')\n  for  j in range(26):\n    if j==ch:pfs[j][i+1]=pfs[j][i]+1\n    else:pfs[j][i+1]=pfs[j][i]\n#print(pfs)\ndp=[[0 for _ in range(n+1)]for _ in range(26)]\nfor  c in range(26):\n  for  l in range(n+1):\n    for  r in range(l,n+1):\n      tc=r-l-(pfs[c][r]-pfs[c][l])\n      dp[c][tc]=max(dp[c][tc],r-l)\n  for i  in range(1,n+1):\n    dp[c][i]=max(dp[c][i],dp[c][i-1])\n\n#print(dp)\nA=[]\nfor q in range(int(input())):\n  m,c=sys.stdin.readline().split()\n  m=int(m)\n  c=ord(c)-ord('a')\n  ans=dp[c][m]\n  A.append(ans)\nfor i in A:\n  print(i)\n"]