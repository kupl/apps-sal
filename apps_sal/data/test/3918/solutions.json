["n, k1, k2 = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nr = sorted([abs(a[i] - b[i]) for i in range(n)], reverse=True)\nfor it in range(k1 + k2):\n    if r[0] == 0:\n        r[0] = 1\n    else:\n        r[0] -= 1\n        for i in range(n - 1):\n            if r[i] < r[i + 1]:\n                r[i], r[i + 1] = r[i + 1], r[i]\nprint(sum(x**2 for x in r))\n", "n,k1,k2 = list(map(int,input().split()))\ns = []\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nfor i in range(n):\n    s.append(abs(a[i]-b[i]))\nfor i in range(k1+k2):\n    ma = s[0]\n    ind = 0\n    for j in range(n):\n        if s[j] > ma:\n            ma = s[j]\n            ind = j\n    if ma == 0:s[ind] = 1\n    else:s[ind] -= 1\nt=0\nfor i in s:t+=i**2\nprint(t)\n", "n, k1, k2 = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nwhile k1 + k2 > 0:\n    max_dif = -10000000000000\n    ind = -1    \n    for i in range(n):\n        if (a[i] - b[i]) ** 2 > max_dif:\n            max_dif = (a[i] - b[i]) ** 2\n            ind = i\n    if k1 != 0:\n        k1 -= 1\n        if a[ind] > b[ind]:\n            a[ind] -= 1\n        else:\n            a[ind] += 1\n    elif k2 != 0:\n        k2 -= 1\n        if b[ind] > a[ind]:\n            b[ind] -= 1\n        else:\n            b[ind] += 1\nans = 0\nfor i in range(n):\n    ans += (a[i] - b[i]) ** 2\nprint(ans)", "n,k1,k2=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nd=[abs(a[i]-b[i]) for i in range(n)]\nd=sorted(d)[::-1]\nk=k1+k2\nwhile k>0:\n    if d[0]==0:\n        break\n    if k>0:\n        d[0]-=1\n        k-=1\n        d=sorted(d)[::-1]\nprint(sum([i**2 for i in d])+k%2)\n\n", "N,K1,K2=map(int,input().split())\nA,B=[*map(int,input().split())],[*map(int,input().split())]\n\nfor i in range(K1):\n max_pos,max_diff=-1,0\n for j in range(N):\n  if abs(A[j]-B[j])>=max_diff:\n   max_pos,max_diff=j,abs(A[j]-B[j])\n if A[max_pos]>=B[max_pos]: A[max_pos]-=1\n else: A[max_pos]+=1\n\nfor i in range(K2):\n max_pos,max_diff=-1,0\n for j in range(N):\n  if abs(A[j]-B[j])>=max_diff:\n   max_pos,max_diff=j,abs(A[j]-B[j])\n if B[max_pos]>=A[max_pos]: B[max_pos]-=1\n else: B[max_pos]+=1\n\nans=0\nfor i in range(N):\n ans+=(A[i]-B[i])**2\nprint(ans)", "n, k1, k2 = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nd = [abs(a[i] - b[i]) for i in range(n)]\nfor i in range(k1):\n    ind = d.index(max(d))\n    d[ind] = abs(d[ind] - 1)\nfor i in range(k2):\n    ind = d.index(max(d))\n    d[ind] = abs(d[ind] - 1)\ns = 0\nfor i in range(n):\n    s += d[i] ** 2\nprint(s)", "n,k1,k2=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\narr=[]\nfor i in range(n):\n    arr.append(abs(a[i]-b[i]))\n\narr=sorted(arr,reverse=True)\n\nfor i in range(k1+k2):\n    arr[0]=abs(arr[0]-1)\n    j=0\n    while(j<(n-1) and arr[j]<arr[j+1]):\n        arr[j],arr[j+1]=arr[j+1],arr[j]\n        j+=1\n\nans=0\nfor i in range(n):\n    ans=ans+(arr[i]*arr[i])\n\nprint(ans)\n", "def decrease_max(C, D):\n    mx = (-1, -1)\n    for i, e in enumerate(abs(c - d) for c, d in zip(C, D)):\n        if e > mx[1]:\n            mx = (i, e)\n    i = mx[0]\n    if C[i] > D[i]:\n        C[i] -= 1\n    else:\n        C[i] += 1\n\ndef solution(k1, k2, A, B):\n    for _ in range(k1):\n        decrease_max(A, B)\n    for _ in range(k2):\n        decrease_max(B, A)\n    return sum((a - b)**2 for a, b in zip(A, B))\n\nn, k1, k2 = map(int, input().split())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nprint(solution(k1, k2, A, B), end=\"\")\n", "R = lambda: list(map(int, input().split()))\n\nn, k1, k2 = R()\nk = k1 + k2\nA = list(R())\nB = tuple(R())\nfor i in range(n): A[i] = abs(A[i] - B[i])\nfor _ in range(k):\n    idx = A.index(max(A))\n    A[idx] = abs(A[idx] - 1)\ns = 0\nfor a in A: s += a*a\nprint(s)\n", "n, k1, k2 = [int(x) for x in input().split()]\na = input().split()\nb = input().split()\nd = [abs(int(x) - int(y)) for x, y in zip(a,b)]\nfor i in range(k1 + k2):\n    m = 0\n    max_ind = 0\n    for j in range(n):\n        if d[j] >= m:\n            m = d[j]\n            max_ind = j\n    d[max_ind] = abs(d[max_ind] - 1)\nprint(sum(x*x for x in d))\n", "n, k1, k2 = input().split()\na = input().split()\nb = input().split()\nc = [abs(int(a[i])-int(b[i])) for i in range(int(n))]\nfor i in range(int(k1)+int(k2)):\n   c.sort()\n   c[int(n)-1] = abs(c[int(n)-1] - 1)\ne = 0\nfor i in range(int(n)):\n   e += c[i]**2\nprint(e)\n", "# -*- coding: UTF-8 -*-\n\nimport math\n\nn, k1, k2 = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nx = []\nfor i in range(n):\n    x.append(int(math.fabs(a[i] - b[i])))\n\nk = k1 + k2\nwhile k > 0:\n    max_num = 0\n    idx = -1\n    for i in range(n):\n        if x[i] > max_num:\n            max_num = x[i]\n            idx = i\n    if idx == -1:\n        break\n    x[idx] -= 1\n    k -= 1\n\nret = 0\nfor i in range(n):\n    ret += x[i] * x[i]\nif k % 2 == 1:\n    ret += 1\nprint(ret)", "n, k1, k2 = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nk = k1 + k2\n\nd = [abs(a[i] - b[i]) for i in range(n)]\n\nif sum(d) > k:\n    for i in range(k):\n        m = max(d)\n        d.remove(m)\n        d.append(m - 1)\n\n    ans = sum(x ** 2 for x in d)\n    print(ans)\n\nelse:\n    print((k - sum(d)) % 2)\n", "n,k1,k2=[int(x)for x in input().split()[:3]]\nks1=[int(x) for x in input().split()[:n]]\nks2=[int(x) for x in input().split()[:n]]\nerr=[abs(ks1[i]-ks2[i]) for i in range(n)]\nnum=k1+k2\nrest1=False\nif num%2 != sum(err)%2:\n    rest1=True\n\ndef kill():\n    nonlocal num\n    maxx=max(err)\n    if maxx==0 or num==0:\n        return False\n    for i in range(len(err)):\n        if err[i] == maxx:\n            err[i]-=1\n            num-=1\n            if num==0:\n                return False\n    return True\nwhile kill():\n    pass\nsumm=sum([x**2 for x in err])\nif summ==0 and rest1:\n    print(1)\nelse:\n    print(summ)", "n, k, l = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nd = [abs(x - y) for x, y in zip(a, b)]\n\nmoves = k + l\n\nd.sort()\nd.reverse()\n\nwhile moves > 0:\n    if d[0] == 0:\n        print(moves%2)\n        break\n\n    d[0] -= 1\n\n    c = 0\n\n    while c < n - 1 and d[c] < d[c + 1]:\n        d[c], d[c + 1] = d[c + 1], d[c]\n        c += 1\n\n    moves -= 1\nelse:\n    print(sum([x**2 for x in d]))", "n,k1,k2 = list(map(int,input().split()))\nai = list(map(int,input().split()))\nbi = list(map(int,input().split()))\nci = [0]*n\nk = k1 + k2\nfor i in range(n):\n    ci[i] = abs(ai[i]-bi[i])\nci.sort()\nci2 = [0]*n\nci3 = [0]*n\nci2[0] = ci[0]\nci3[0] = 1\nj = 0\nfor i in range(1,n):\n    if ci[i] == ci[i-1]:\n        ci3[j] += 1\n    else:\n        j += 1\n        ci2[j] = ci[i]\n        ci3[j] = 1\ntemp2 = -1\ntemp3 = 0\nfor i in range(j,0,-1):\n    if k  >= ci3[i] * (ci2[i]-ci2[i-1]):\n        k -= ci3[i] * (ci2[i]-ci2[i-1])\n        ci3[i-1] += ci3[i]  \n        ci3[i] = 0\n    else:\n        temp = k // ci3[i]\n        temp2 = k % ci3[i]\n        temp3 = i\n        ci2[i] -= temp\n        break\nif temp2 != -1:\n    ans = 0\n    for i in range(temp3):\n        ans += ci3[i]*(ci2[i]**2)\n    print(ans+(ci3[temp3]-temp2)*(ci2[temp3]**2) + temp2*((ci2[temp3]-1))**2)\nelse:\n    if k >= ci3[0] * ci2[0]:\n        k -= ci3[0] * ci2[0]\n        print(k%2)\n    else:\n        temp = k // ci3[0]\n        temp2 = k % ci3[0]\n        print((ci3[0]-temp2)*((ci2[0]-temp)**2) + temp2*((ci2[0]-temp-1))**2)\n    \n", "import heapq\n\nn, k1, k2 = list(map(int, input().strip().split()))\na = list(map(int, input().strip().split()))\nb = list(map(int, input().strip().split()))\n\nerr = [abs(x-y) for x,y in zip(a,b)]\n\nif k1+k2 >= sum(err):\n    print((k1+k2-sum(err))%2)\n\nelse:\n\n    moves = k1+k2\n    err = [-a for a in err]\n    heapq.heapify(err)\n\n    while moves:\n        x = heapq.heappop(err)\n        x += 1\n        heapq.heappush(err, x)\n        moves -= 1\n\n    print(sum([x**2 for x in err]))\n", "import operator\n\nn,k1,k2 = list(map(int,input().split(\" \")))\narrayA = list(map(int,input().split(\" \")))\narrayB = list(map(int,input().split(\" \")))\n\narraydiff = list(map(operator.sub,arrayA,arrayB))\narraydiff = list(map(abs,arraydiff))\n\nfor i in range(k1+k2):\n\tindex = arraydiff.index(max(arraydiff))\n\tif arraydiff[index] == 0:\n\t\tarraydiff[index] += 1\n\telse:\n\t\tarraydiff[index] -= 1\nprint(sum([x*x for x in arraydiff]))\n\n\n", "from collections import defaultdict as dd, deque\n\nn,k1,k2 = list(map(int,input().split()))\nk = k1+k2\n\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\n\nD = dd(int)\n\nfor i in range(n):\n    D[abs(A[i]-B[i])] += 1\n\nx = sorted([[k,v] for k,v in list(D.items())], reverse=True)\n\nops = 0\ni = 0\nwhile x[i][0]>0:\n    if i<len(x)-1:\n        if x[i][0]==x[i+1][0]:\n            x[i+1][1] += x[i][1]\n            x[i][1] = 0 # oops\n            i += 1\n    diff,cnt = x[i]\n    if k - ops >= cnt:\n        x[i][0] -= 1\n        ops += cnt\n    else:\n        x.append((diff-1,k-ops))\n        x[i][1] -= k-ops\n        ops += k-ops\n        break\n\nif ops!=k:\n    print(1 if (k-ops)%2 else 0)\nelse:\n    ans = 0\n    for diff,cnt in x:\n        ans += cnt*(diff)**2\n    print(ans)\n", "a,b,c=map(int,input().split())\nk=b+c\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\ni=0\nz=[]\nwhile i<len(x):\n    z=z+[max(x[i],y[i])-min(x[i],y[i])]\n    i=i+1\nz.sort()\ni=0\nwhile i<k:\n    if z[len(z)-1]!=0:\n        z[len(z)-1]=z[len(z)-1]-1\n    else:\n        if (k-i)%2==1:\n            z=[1]\n        break\n    z.sort()\n    i=i+1\ns=0\nfor elem in z:\n    s=s+elem**2\nprint (s)", "n,k1,k2 = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nc = sorted([abs(a[i] - b[i]) for i in range(n)])[::-1]\nk = k1+k2\ncur = 0\nfor i in range(k):\n    if c[0] == 0:break\n    cur+=1\n    c[0]-=1\n    j=0\n    while j+1 < n and c[j] < c[j+1]:\n        c[j],c[j+1] = c[j+1],c[j]\n        j+=1\nk-=cur\nif k > 0:\n    print(k%2)\nelse:\n    ans = 0\n    for i in c:\n        ans += i**2\n    print(ans)", "n, k1, k2 = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nd = [abs(a[i]-b[i]) for i in range(n)]\nk = k1 + k2\nfor _ in range(k):\n    mx = max(d)\n    id = d.index(mx)\n    if mx == 0:\n        d[id] += 1\n    else:\n        d[id] -= 1\nprint(sum([x ** 2 for x in d]))\n", "n, k1, k2 = map(int, input().split())\n\nA = map(int, input().split())\nB = map(int, input().split())\n\nC = [x - y for x, y in zip(B, A)]\n\nk = k1 + k2\nfor i in range(k):\n    if min(C) >= 0:\n        C[C.index(max(C))] -= 1\n    elif abs(max(C)) <= abs(min(C)):\n        C[C.index(min(C))] += 1\n    else:\n        C[C.index(max(C))] -= 1\nans = 0\nfor i in C:\n    ans += i**2\n\nprint(ans)", "def main():\n    n, k1, k2 = map(int, input().split())\n    a = [int(x) for x in input().split()]\n    b = [int(x) for x in input().split()]\n    c = [(abs(a[i] - b[i])) for i in range(n)]\n    s = sum(c)\n    if s >= (k1 + k2):\n        op = (k1 + k2)\n        while op > 0:\n            c = sorted(c)\n            c[-1] -= 1\n            op -= 1\n        ans = sum([x**2 for x in c])\n    else:\n        after = (k1 + k2) - s\n        if after % 2 == 0:\n            ans = 0\n        else:\n            ans = 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\n\nimport sys\n\n[n, k1, k2] = list(map(int, sys.stdin.readline().strip().split()))\nais = list(map(int, sys.stdin.readline().strip().split()))\nbis = list(map(int, sys.stdin.readline().strip().split()))\n\nk = k1 + k2\ncis = [abs(ai - bi) for ai, bi in zip(ais, bis)]\ncis.sort(reverse=True)\ncis.append(0)\n\ns = 0\ni = 1\ndone = False\nwhile i < n + 1:  # 0 at the end appended\n\ts += i * (cis[i - 1] - cis[i])\n\tif s >= k:\n\t\tdone = True\n\t\tbreak\n\ti += 1\n\nif not done:\n\tif (k - s) % 2 == 0:\n\t\tprint(0)\n\telse:\n\t\tprint(1)\nelse:\n\td = s - k\n\th = d // i\n\tn1 = d % i\n\tn0 = i - n1\n\tprint(sum(ci**2 for ci in cis[i:]) + n0 * (cis[i] + h)**2 + n1 * (cis[i] + h + 1)**2)\n\n"]