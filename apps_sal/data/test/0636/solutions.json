["n, k = map(int, input().split())\narr = [int(i) for i in input().split()]\narr2 = []\nfor i in range(n):\n    arr2.append((arr[i], i))\narr2.sort()\nans = []\nfor i in arr2:\n    if k >= i[0]:\n        k -= i[0]\n        ans.append(i[1])\nprint(len(ans))\nfor i in ans:\n    print(i + 1, end = ' ')", "n,k=map(int,input().split())\nL=list(map(int,input().split()))\nfor i in range(n):\n    L[i]=(L[i],i)\nL.sort()\nans=0\nA=[]\nind=0\nwhile(ind<len(L) and k>=L[ind][0]):\n    ans+=1\n    A.append(L[ind][1]+1)\n    k-=L[ind][0]\n    ind+=1\nprint(ans)\nfor item in A:\n    print(item,end=\" \")\n", "n, k = map(int, input().split())\ndata = list(map(int, input().split()))\n\ndata = sorted(zip(data, range(1, len(data) + 1)), key=lambda x: x[0])\n\ninst = []\nfor x in data:\n    if k < x[0]:\n        break\n\n    inst.append(x[1])\n    k -= x[0]\n\nprint(len(inst))\nprint(' '.join(map(str, inst)))", "n, k = [int(i) for i in input().split()]\na = [(int(v), i) for i, v in enumerate(input().split())]\n\na.sort()\nresult = []\nfor v, i in a:\n    k -= v\n    if k < 0: break\n    result.append(i + 1)\n\nresult.sort()\nprint(len(result))\nprint(' '.join(str(i) for i in result))\n", "n, k = map(int, input().split())\nl = [(int(x),i) for i,x in enumerate(input().split())]\nl.sort()\n\ndays = 0\nans = []\nfor i in range(len(l)):\n    days += l[i][0]\n\n    if days <= k:\n        ans.append(str(l[i][1]+1))\n\nprint(len(ans))\nif len(ans) > 0:\n    print(' '.join(ans))", "n, k = list(map(int, input().split()))\ndays = [(int(x), cnt) for cnt, x in enumerate(input().split())]\ndays.sort()\nans = []\nfor day, inst in days:\n    if day > k:\n        break\n    else:\n        ans.append(str(inst+1))\n        k -= day\nprint(len(ans))\nif ans != []:\n    print(' '.join(ans))\n", "n,k = list(map(int, input().split()))\nar = list(map(int, input().split()))\nar2 = sorted(ar)\nar3 = sorted(list(enumerate(ar)), key=lambda pair: pair[1])\nx = max(i for i in range(len(ar2) + 1) if sum(ar2[:i]) <= k)\nprint (x)\nprint(\" \".join([str(pair[0] + 1) for pair in ar3[:x]]))\n", "n,m=map(int,input().split())\nK=list(map(int,input().split()))\nl=L=len(K)\nk=[]\nwhile L:\n\tL-=1\n\tk.append([K[L],L+1])\nk.sort()\ns=i=0\nwhile i<l:\n\ts+=k[i][0]\n\tif s>m:\n\t\ts-=k[i][0]\n\t\tbreak\n\ti+=1\nprint(i)\nwhile i:\n\ti-=1\n\tif i:print(k[i][1],end=\" \")\n\telse:print(k[i][1])\n\n", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\narr = [(arr[i], i) for i in range(n)]\narr.sort()\nt = 0\nres = []\nfor i in arr:\n\tres.append(i)\n\tif(sum([i[0] for i in res])>k):\n\t\tres = res[:-1]\n\t\tbreak\n\nif(len(res)==0):\n\tprint('0')\nelse:\n\tprint(len(res))\n\tprint(' '.join([str(i[1]+1) for i in res]))", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = sorted(a)\nresult = []\ndays_used = 0\nfor i in range(n):\n    if days_used + b[i] <= k:\n        days_used += b[i]\n        result.append(a.index(b[i])+1)\n        a[a.index(b[i])] = 0\n    else:\n        break\nprint(len(result))\nprint(' '.join(str(i) for i in result))\n", "n, k = list(map(int, input().split()))\na = [(value, index) for index, value in enumerate(map(int, input().split()), 1)]\na.sort()\nresult = [ ]\ni = 0\nwhile i < len(a) and k >= a[i][0]:\n    result.append(a[i][1])\n    k -= a[i][0]\n    i += 1\nprint(len(result))\nprint(' '.join(map(str, result)))\n", "n,k = list(map(int,input().split()))\nins = list(map(int,input().split()))\nindex = list(range(n))\nindex.sort(key = lambda x: ins[x])\ndays = 0\ni = 0\nans = []\nwhile True:\n\tif i >= n:\n\t\tbreak\n\tdays += ins[index[i]]\n\tif days > k:\n\t\tbreak\n\telse:\n\t\tans.append(index[i]+1)\n\ti += 1\n\nprint(i)\nif i != 0:\n\tprint(\" \".join(map(str,ans)))\n\n", "n, k = map(int, input().split())\nM = list(map(int, input().split()))\nfor i in range(n):\n    M[i] = (M[i], i + 1)\nM.sort()\nif M[0][0] > k:\n    print(0)\nelse:\n    used = 0\n    i = 0\n    Ans = []\n    while i < n and used + M[i][0] <= k:\n        Ans.append(M[i][1])        \n        used += M[i][0]\n        i += 1\n    print(len(Ans))\n    print(\" \".join(map(str, Ans)))", "n,k = map(int, input().split())\nl = list(map(int, input().split()))\nq = [[1000000000,10000]]\nans = 0\ns = \"\"\nfor i in range(n):\n    q.append([l[i], i+1])\nq = list(sorted(q))\nwhile q[0][0] <= k:\n    k -= q[0][0]\n    ans += 1\n    s += str(q[0][1])+\" \"\n    q.pop(0)\nprint(ans)\nprint(s.strip())", "def mn(ms):\n    ret = min(ms)\n    index = ms.index(ret)\n    ms[index] = 101\n    return [ret, index]\n    \nn, k = [int(i) for i in input().split()]\nms = [int(i) for i in input().split()]\nmx = max(ms)\nret = []\ndays = 0\np = 0\nfor i in range(len(ms)):\n    box = mn(ms)\n    if days + box[0] <= k:\n        days += box[0]\n        ret.append(box[1] + 1)\n        p += 1\nprint(p)\nif ret != []:\n    for i in ret:\n        print(i, end = ' ')", "nk = input()\nn, k = [int(i) for i in nk.split(\" \")]\na = input()\na = [int(i) for i in a.split(\" \")]\nb = []\nfor i in range(len(a)):\n    b += [(i, a[i])]\nb.sort(key = lambda x:x[1])\nm = 0\nno = 0\np = []\nfor i in range(n):\n    m += b[i][1]\n    if m <= k:\n        no += 1\n        p.append(b[i][0])\n    else:\n        break\nif len(p)>0:\n    print(no)\n    for i in p:\n        print (i+1, end=\" \")\nelse:\n    print(0)\n", "from operator import itemgetter\n\n__author__ = 'Konrad Strack'\n\n\ndef solve():\n    n, k = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n\n    indexed = [(i + 1, x) for i, x in enumerate(a)]\n\n    sum = 0\n    selected = []\n    for i, v in sorted(indexed, key=itemgetter(1)):\n        if sum + v <= k:\n            sum += v\n            selected.append(str(i))\n        else:\n            break\n\n    print(len(selected))\n    if len(selected) > 0:\n        print(\" \".join(selected))\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "__author__ = 'Hippskill'\ndef main():\n    rdl = list(map(int,input().split()))\n    rdl1 = list(map(int,input().split()))\n    kl = 0\n    need = []\n    while rdl[1] > 0:\n        current = find_min(rdl1)\n        if rdl[1] - rdl1[current] >= 0:\n            kl += 1\n            need.append(current+1)\n            rdl[1] -= rdl1[current]\n        else:\n            break\n        rdl1[current] = 10000000\n    print(kl)\n    for i in need:\n        if i != need[len(need)-1]:\n            print(i, end = \" \")\n        else:\n            print(i, end = \"\")\ndef find_min(vect):\n    mins = 10000000000\n    toOut = 0\n    for i in range(len(vect)):\n        if mins > vect[i]:\n            mins = vect[i]\n            toOut = i\n    return toOut\nmain()", "n, m = map(int,input().split())\nlist1 = list(map(int, input().split()))\nlist2 = []\nsum = 0\ncount = len(list1)\nfor i in range(len(list1)):\n    if (min(list1) > m) and i == 0:\n        print(0)\n        return\n    if sum + min(list1) <= m:\n        sum += min(list1)\n\n        list2.append(list1.index(min(list1))+1)\n        list1[list1.index(min(list1))] = 999999999999\nprint(len(list2))\nprint(' '.join(map(str, list2)))", "import sys\n\n\ndef main():\n\t[k, n] = list(map(int, sys.stdin.readline().split()))\n\tinstr_list = list(map(int, sys.stdin.readline().split()))\n\n\tarr1 = [(x, i+1) for (i, x) in enumerate(instr_list)]\n\n\tarr2 = sorted(arr1)\n\t# print(\"arr2 = \")\n\t# print(arr2)\n\n\tsumm = 0\n\tres = []\n\tfor (x, pos) in arr2:\n\t\tif summ + x > n:\n\t\t\tbreak\n\t\telse:\n\t\t\tsumm += x\n\t\t\tres.append(pos)\n\n\n\tprint(len(res))\n\tif res:\n\t\tprint(\" \".join(map(str, res)))\n\n\n\n\nmain()\n\n", "instr, days = (int(x) for x in input().split())\n# print (instr, days)\narr = [(int(y), x + 1) for x, y in enumerate(input().split())]\narr.sort()\nif arr[0][0] > days:\n\tprint(0)\nelse:\n\tresult = []\n\tfor hard in arr:\n\t\tdays -= hard[0]\n\t\tif days >= 0:\n\t\t\tresult.append(str(hard[1]))\n\t\telse:\n\t\t\tbreak\n\tprint(len(result))\n\tprint(\" \".join(result))\n", "def main():\n\tn, k = (map(int, input().split()))\n\ta = list(map(int, input().split()))\n\td = {}\n\tfor i in range(n):\n\t\tif a[i] in d:\n\t\t\td[a[i]].append(i+1)\n\t\telse:\n\t\t\td[a[i]] = [i +1]\n\tcount = 0\n\n\tans = []\n\t\n\n\t#print(count)\n\t\n\n\ta.sort()\n\ts = 0\n\tcount = 0\n\tb = []\n\ti = 0\n\twhile (s + a[i]) <= k :\n\t\ts += a[i]\n\t\ti += 1\n\t\tif i == n:\n\t\t\tbreak\n\n\tif i == n:\n\t\tcount = n\n\t\tprint (n)\n\telse:\n\t\tprint(i )\n\tfor x in range(i):\n\t\tprint(d[a[x]][0],end = \" \")\n\t\td[a[x]].remove(d[a[x]][0])\n\n\ndef __starting_point():\n\tmain()\n\n\n__starting_point()", "N, K = list(map(int, input().split()))\ns = list(sorted([(int(n), i) for i, n in enumerate(input().split())]))\n\nans = []\nn = 0\nfor c, i in s:\n    if n + c > K:\n        break\n    ans.append(i + 1)\n    n += c\nprint(len(ans))\nif ans:\n    print(' '.join(map(str, ans)))\n", "(n, k) = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\ns = 0\nans = []\nans_ = []\nb = sorted(a)\n\nfor B in b:\n    if s+B <= k:\n        s += B\n        ans_.append(B)\n    else:\n        break\nlen_ans_ = len(ans_)\nif len_ans_ == 0:\n    print(0)\n    return\nans.append(a.index(ans_[0])+1)\nfor i in range(1,len_ans_):\n    if ans_[i] == ans_[i-1]:\n        ans.append(a[ans[-1]:].index(ans_[i]) + ans[-1] + 1)\n    else:\n        ans.append(a.index(ans_[i])+1)\nans.sort()\n\nprint(len(ans))\nif len(ans) > 0:\n    print(*ans)\n", "line = input().split()\n\nn = int(line[0])\nk = int(line[1])\n\nline = input().split()\nlst = list()\nfor i in range(1, n + 1):\n    lst.append((int(line[i - 1]), i))\n\nlst.sort()\ns = 0\nc = 0\ni = 0\nans = ''\nwhile s < k and i < n:\n    if s + lst[i][0] <= k:\n        ans = ans + str(lst[i][1]) + ' '\n        s += lst[i][0]\n        c += 1\n    else:\n        break\n    i += 1\nprint(str(c))\nif c > 0:\n    print(ans)\n"]