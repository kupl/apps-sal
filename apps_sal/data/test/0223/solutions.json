["p=10**9+7\nimport math\ndef inv(k,p):\n    prod=1\n    while k>1:\n        prod*=(p//k+1)\n        k=(k*(p//k+1))%p\n    return prod%p\nn=int(input())\na=[]\nk=int(math.log2(n))\nx=n\nwhile x>0:\n    y=x//2\n    a.append(x-y)\n    x=y\nc=[sum(a[i:]) for i in range(k+1)]\nb=[n//(3*2**i)-n//(6*2**i) for i in range(k+1)]\nd=[n//2**i-n//(3*2**i) for i in range(k+1)]\nfacs=[1]*(n+1)\nfor i in range(2,n+1):\n    facs[i]=(i*facs[i-1])%p\nif n<3*(2**(k-1)):\n    start=k\nelse:\n    start=0\ntot=0\nfor j in range(start,k+1):\n    prod=1\n    for i in range(j,k):\n        prod*=b[i]\n    prod*=d[j]\n    for i in range(j):\n        prod*=a[i]\n    prod%=p\n    prod*=facs[n]\n    e=[a[i] for i in range(j)]+[d[j]]+[b[i] for i in range(j,k)]\n    f=[sum(e[:i+1]) for i in range(k+1)]\n    g=1\n    for guy in f:\n        g*=guy\n    prod*=inv(g,p)\n    prod%=p\n    tot+=prod\nprint(tot%p)", "p=10**9+7\nimport math\ndef prod(l):\n    x=1\n    for m in l:\n        x*=m\n    return x\nn=int(input())\na=[]\nk=int(math.log2(n))\nx=n\nwhile x>0:\n    y=x//2\n    a.append(x-y)\n    x=y\nc=[sum(a[i:]) for i in range(k+1)]\nb=[n//(3*2**i)-n//(6*2**i) for i in range(k+1)]\nd=[n//2**i-n//(3*2**i) for i in range(k+1)]\nfacs=[1]*(n+1)\nfor i in range(2,n+1):\n    facs[i]=(i*facs[i-1])%p\nstart=k if n<3*(2**(k-1)) else 0\ntot=0\nfor j in range(start,k+1):\n    e=[a[i] for i in range(j)]+[d[j]]+[b[i] for i in range(j,k)]\n    x=(facs[n]*prod(e))%p\n    f=prod([sum(e[:i+1]) for i in range(k+1)])\n    while f>1:\n        x*=p//f+1\n        f=(f*(p//f+1))%p\n    tot+=x%p\nprint(tot%p)", "p=10**9+7\nimport math\ndef prod(l):\n    x=1\n    for m in l:\n        x=x*m%p\n    return x\nn=int(input())\na,k,x,t=[],int(math.log2(n)),n,0\nwhile x>0:\n    a.append(x-x//2)\n    x//=2\nc=[sum(a[i:]) for i in range(k+1)]\nb=[n//(3*2**i)-n//(6*2**i) for i in range(k+1)]\nd=[n//2**i-n//(3*2**i) for i in range(k+1)]\ny=prod([i for i in range(2,n+1)])\ns=k if n<3*(2**(k-1)) else 0\nfor j in range(s,k+1):\n    e=[a[i] for i in range(j)]+[d[j]]+[b[i] for i in range(j,k)]\n    x=(y*prod(e))%p\n    f=prod([sum(e[:i+1]) for i in range(k+1)])\n    while f>1:\n        x*=p//f+1\n        f=(f*(p//f+1))%p\n    t+=x%p\nprint(t%p)", "p=10**9+7\nimport math\ndef r(l):\n    x=1\n    for m in l:\n        x=x*m%p\n    return x\nn=int(input())\na,k,x,t=[],int(math.log2(n)),n,0\nwhile x>0:\n    a.append(x-x//2)\n    x//=2\nb=[n//(3*2**i)-n//(6*2**i) for i in range(k+1)]\nd=[n//2**i-n//(3*2**i) for i in range(k+1)]\ny=r([i for i in range(2,n+1)])\ns=k if n<3*2**(k-1) else 0\nfor j in range(s,k+1):\n    e=[a[i] for i in range(j)]+[d[j]]+[b[i] for i in range(j,k)]\n    x=y*r(e)%p\n    f=r([sum(e[:i+1]) for i in range(k+1)])\n    while f>1:\n        x*=p//f+1\n        f=f*(p//f+1)%p\n    t+=x%p\nprint(t%p)", "p=10**9+7\nimport math\ndef r(l):\n    x=1\n    for m in l:\n        x=x*m%p\n    return x\nn=int(input())\na,k,x,t=[],int(math.log2(n)),n,0\nwhile x>0:\n    a.append(x-x//2)\n    x//=2\nb=[n//(3*2**i)-n//(6*2**i) for i in range(k+1)]\nd=[n//2**i-n//(3*2**i) for i in range(k+1)]\ny=r(i for i in range(2,n+1))\ns=k if n<3*2**(k-1) else 0\nfor j in range(s,k+1):\n    e=[a[i] for i in range(j)]+[d[j]]+[b[i] for i in range(j,k)]\n    x=y*r(e)%p\n    f=r(sum(e[:i+1]) for i in range(k+1))\n    while f>1:\n        x*=p//f+1\n        f=f*(p//f+1)%p\n    t+=x%p\nprint(t%p)", "def binpow(x, t, mod):\n    if t == 0:\n        return 1\n    if t % 2 == 0:\n        return binpow(x * x % mod, t//2, mod)\n    return binpow(x, t-1, mod) * x % mod\n\ndef calc(a, f, rv, n):\n    mod = 10 ** 9 + 7\n    s = 0\n    ans = 1\n    for i in range(len(a)-1, -1, -1):\n        cur = n//a[i]\n        if i > 0:\n            cur -= n//a[i-1]\n        t = cur-1\n        s += t\n        ans = ans * cur * f[s] * rv[s-t] % mod\n        #print(a[i], cur, s, f[s], rv[s-t])\n        s += 1\n    return ans\nn = int(input())\nx = n\nc = 0\nwhile x > 1:\n    x //= 2\n    c+=1\nf = [1] * 1000100\nmod = 10**9 + 7\nfor i in range(1, len(f)):\n    f[i] = f[i-1] * i % mod\nrv = [1] * 1000100\nrv[-1] = binpow(f[-1], mod-2, mod)\nfor i in range(len(f)-2, 0, -1):\n    rv[i] = rv[i+1] * (i+1) % mod\na = []\nfor i in range(c, -1, -1):\n    a.append(2**i)\nans=calc(a, f, rv, n)\nif (2**(c-1)) * 3 <= n:\n    c -= 1\n    a = []\n    while c >= 0:\n        a.append((2**c) * 3)\n        b = a.copy()\n        for i in range(c, -1, -1):\n            b.append(2**i)\n        ans = (ans + calc(b, f, rv, n)) % mod\n        c -= 1\nprint(ans)", "def perm(a,b):\n    ret = 1\n    for i in range(a, a - b, -1):\n        ret = (ret * i)%1000000007\n    return ret\n\nnum = int(input())\nnum2 = num\nc = 0\nwhile num2:\n    c += 1\n    num2 >>= 1\npow2 = 1 << (c-1)\narray = [pow2]\nfor i in range(c-1):\n    array.append(array[-1]>>1)\n\ndef calc(arr):\n    data = []\n    #sm = 0\n    av = num\n    for i in range(c):\n        data.append((num // arr[i] - (num - av), av))\n        av -= data[-1][0]\n\n\n    #print(data)\n\n    ans = 1\n    for d in data:\n        ans = (ans * (d[0] * perm(d[1] - 1, d[0] - 1)))%1000000007\n    return ans\n\nanswer = calc(array)\n\nif num >= pow2 // 2 * 3:\n    for i in range(1,c):\n        dat = [1]\n        for j in range(1, c):\n            if j == i:\n                dat = [3*dat[0]] + dat\n            else:\n                dat = [2*dat[0]] + dat\n        #print(dat)\n        a = calc(dat)\n        answer += a\n\nprint(answer%1000000007)\n\n"]