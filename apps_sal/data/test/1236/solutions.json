["def main():\n    n, k = list(map(int, input().split()))\n    even = 0\n    odd = 0\n    for elem in input().split():\n        if int(elem) % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    turns = n - k\n    if turns == 0:\n        if odd % 2 == 1:\n            return \"Stannis\"\n        else:\n            return \"Daenerys\"\n    if turns % 2 == 0:\n        if k % 2 == 1 and even <= turns // 2:\n            return \"Stannis\"\n        else:\n            return \"Daenerys\"\n    else:\n        if k % 2 == 0 and even <= turns // 2 or odd <= turns // 2:\n            return \"Daenerys\"\n        else:\n            return \"Stannis\"\nprint(main())\n\n\n\n", "def f(n, k, l, r):\n    if n & 1:\n        if k == n:\n            return bool(l & 1)\n        elif k & 1:\n            return n + k <= 2 * l\n        else:\n            return 2 * l < n + k and 2 * l > n - k - 1\n    else:\n        if k == n:\n            return bool(l & 1)\n        elif k & 1:\n            return n - k + 1 <= 2 * l\n        else:\n            return False\n\nn, k = list(map(int, input().split(' ')))\na = list(map(int, input().split(' ')))\n\nl = list([i & 1 for i in a]).count(1)\nr = n - l\n\nprint('Stannis' if f(n, k, l, r) else 'Daenerys')\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict, deque\n\ndef VI(): return list(map(int,input().split()))\n\ndef main(n,k,a):\n    now = sum(a)\n    even = sum([x%2==0 for x in a])\n    odd = sum([x%2==1 for x in a])\n    d = n-k\n    D = \"Daenerys\"\n    S = \"Stannis\"\n    if n==k:\n        ans = [S,D][now%2==0]\n    elif d%2==0: # Daenerys last\n        if k%2==0: ans = D\n        elif even <= d//2: ans = S\n        else: ans = D\n    else: # Stannis last\n        if k%2==0:\n            if odd <= d//2 or even <= d//2: ans = D\n            else: ans = S\n        else:\n            if odd <= d//2: ans = D\n            else: ans = S\n    print(ans)\n\n\ndef main_input(info=0):\n    n,k = VI()\n    a = VI()\n    main(n,k,a)\n\ndef __starting_point():\n    main_input()\n\n__starting_point()", "import sys\n\n\n\ninput       = []\ninput_index = 0\n\ndef next(type, number = None):\n\tdef next():\n\t\tnonlocal input, input_index\n\t\t\n\t\t\n\t\twhile input_index == len(input):\n\t\t\tif sys.stdin:\n\t\t\t\tinput       = sys.stdin.readline().split()\n\t\t\t\tinput_index = 0\n\t\t\telse:\n\t\t\t\traise Exception()\n\t\t\t\t\n\t\t\t\t\n\t\tinput_index += 1\n\t\t\n\t\treturn input[input_index - 1]\n\t\t\n\t\t\n\tif number is None:\n\t\tresult = type(next())\n\telse:\n\t\tresult = [type(next()) for _ in range(number)]\n\t\t\n\treturn result\n\t\n\t\n\t\nn, k = next(int, 2)\nbs = next(int, n)\n\noc = 0\nfor b in bs:\n\toc += 1 if b % 2 == 1 else 0\nec = n - oc\n\ndh = (n - k) // 2\nsh = (n - k) - dh\n\n\nif n == k:\n\tif oc % 2 == 0:\n\t\tprint(\"Daenerys\")\n\telse:\n\t\tprint(\"Stannis\")\nelse:\n\tif k % 2 == 0:\n\t\tif dh == sh:\n\t\t\tprint(\"Daenerys\")\n\t\telse:\n\t\t\tif dh >= oc or dh >= ec:\n\t\t\t\tprint(\"Daenerys\")\n\t\t\telse:\n\t\t\t\tprint(\"Stannis\")\n\telse:\n\t\tif dh == sh:\n\t\t\tif sh >= ec:\n\t\t\t\tprint(\"Stannis\")\n\t\t\telse:\n\t\t\t\tprint(\"Daenerys\")\n\t\telse:\n\t\t\tif dh >= oc:\n\t\t\t\tprint(\"Daenerys\")\n\t\t\telse:\n\t\t\t\tprint(\"Stannis\")\n", "def main():\n    n, k = map(int, input().split())\n    even = 0\n    odd = 0\n    for elem in input().split():\n        if int(elem) % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    turns = n - k\n    if turns == 0:\n        if odd % 2 == 1:\n            return \"Stannis\"\n        else:\n            return \"Daenerys\"\n    if turns % 2 == 0:\n        if k % 2 == 1 and even <= turns // 2:\n            return \"Stannis\"\n        else:\n            return \"Daenerys\"\n    else:\n        if k % 2 == 0 and even <= turns // 2 or odd <= turns // 2:\n            return \"Daenerys\"\n        else:\n            return \"Stannis\"\nprint(main())", "n, k = list(map(int, input().split()))\no = sum(int(x) & 1 for x in input().split())\ne, k = n - o, n - k\nif not k:\n    w = o & 1\nelif k & 1:\n    if ((n - k) & 1) and o <= (k >> 1):\n        w = 0\n    elif min(o, e) <= (k >> 1) and not ((n - k) & 1):\n        w = 0\n    else:\n        w = 1\nelif ((n - k) & 1) and e <= (k >> 1):\n    w = 1\nelse:\n    w = 0\nprint(['Daenerys', 'Stannis'][w])\n", "import sys\n\ndef solve():\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    odds = sum([x % 2 for x in a])\n    evens = n - odds\n    if n == k: return \"Daenerys\" if odds % 2 == 0 else \"Stannis\"\n    moves = n - k\n    if moves % 2 == 0: #equal number of moves and Daenerys moves last, stannis wants to destory all evens and have parity be good\n        eachmove = moves // 2\n        if evens <= eachmove:\n            remodds = k\n            if remodds % 2 == 1:\n                return \"Stannis\"\n        return \"Daenerys\"\n    else: #Stannis moves last, Danerys wants to destroy all of the odds\n        dmoves = moves//2\n        if odds <= dmoves or (evens <= dmoves and (n - moves) % 2 == 0):\n            return \"Daenerys\"\n        return \"Stannis\"\n\n\n\n                \n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "R = lambda:list(map(int,input().split()))\nn,k = R()\na = R()\nnch = 0\nfor i in a:\n    if i % 2 == 1:\n        nch += 1\nch = n - nch\nc = n - k\nc_dn = c // 2\nc_st = c - c_dn\n\nif c == 0:\n    if nch % 2 == 1:\n        print('Stannis')\n    else:\n        print('Daenerys')\nelif c_dn >= nch:\n    print('Daenerys')\nelse:\n    if c_dn == c_st:\n        if ch <= c_st and k % 2 == 1:\n            print('Stannis')\n        else:\n            print('Daenerys')\n    else:  \n        if c_dn >= ch and k % 2 == 0: \n            print('Daenerys')\n        else: \n            print('Stannis')", "n,k=input().split()\nn=int(n)\nk=int(k)\ns=input()\na=[int(i) for i in s.split()]\nnodd=0\nfor i in a:\n    if(i%2!=0):\n        nodd+=1\nneven=len(a)-nodd\nif(n==k):\n    if(nodd%2==0):\n        print(\"Daenerys\")\n    else:\n        print(\"Stannis\")\nelse:\n    if(nodd<=int((n-k)/2)):\n        print(\"Daenerys\")\n\n    elif(neven<=int((n-k)/2)):\n        if(k%2==0):\n            print(\"Daenerys\")\n        else:\n            print(\"Stannis\")\n    else:\n        if((n-k)%2==0):\n            print(\"Daenerys\")\n        else:\n            print(\"Stannis\")", "n, k = map(int, input().split())\na = list(map(int, input().split()))\ncnt = n - k\neven = sum([i % 2 == 0 for i in a])\nodd = sum([i % 2 == 1 for i in a])\nf1 = cnt % 2 == 0 and k % 2 == 1 and even <= cnt // 2\nf2 = cnt % 2 == 1 and not (k % 2 == 0 and even <= cnt // 2 or odd <= cnt // 2)\nf3 = cnt == 0 and odd % 2 == 1\nans = 'Stannis' if f1 or f2 or f3 else 'Daenerys'\nprint(ans)", "n, k = map(int, input().split())\no = sum(int(x) & 1 for x in input().split())\ne, k = n - o, n - k\nif not k:\n    w = o & 1\nelif k & 1:\n    if ((n - k) & 1) and o <= (k >> 1):\n        w = 0\n    elif min(o, e) <= (k >> 1) and not ((n - k) & 1):\n        w = 0\n    else:\n        w = 1\nelif ((n - k) & 1) and e <= (k >> 1):\n    w = 1\nelse:\n    w = 0\nprint(['Daenerys', 'Stannis'][w])", "n,k=[int(i) for i in input().split()]\nl=[int(i) for i in input().split()]\nno=0\nfor i in l:\n    no+=i%2\nne=n-no\nif n==k:\n    if no%2:\n       print(\"Stannis\")\n    else:\n       print(\"Daenerys\")\nelse:\n    if no<=(n-k)//2:\n        print(\"Daenerys\")\n    else:\n        if no%2:\n            if (n-k)%2 and ne<=(n-k)//2 and ne%2==0:\n                print(\"Daenerys\")\n            elif (n-k)%2==0 and (ne>(n-k)//2 or ne%2):\n                print(\"Daenerys\")\n            else:\n                print(\"Stannis\")\n        else:\n            if (n-k)%2 and ne<=(n-k)//2 and ne%2:\n                print(\"Daenerys\")\n            elif (n-k)%2==0 and (ne>(n-k)//2 or ne%2==0):\n                print(\"Daenerys\")\n            else:\n                print(\"Stannis\")\n        \n", "f = lambda: map(int, input().split())\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])", "f = lambda: map(int, input().split())\n\nn, k = f()\nd = n - k\ns = d >> 1\n\ny = sum(q & 1 for q in f())\nx = n - y\n\nt = s < y and (k & 1 or s < x) if d & 1 else k & 1 and s >= x if d else y & 1\nprint(['Daenerys', 'Stannis'][t])", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\nn, k = f()\nd = sum(q & 1 for q in f())\ns = n - k >> 1\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\nif n == k: q = d & 1\nprint(['Daenerys', 'Stannis'][q])\n", "f = lambda: list(map(int, input().split()))\n\nn, k = f()\n\nd = sum(q & 1 for q in f())\n\ns = n - k >> 1\n\nq = s < d and (k & 1 or s < n - d) if n - k & 1 else k & 1 and s >= n - d\n\nif n == k: q = d & 1\n\nprint(['Daenerys', 'Stannis'][q])\n\n\n\n\n# Made By Mostafa_Khaled\n", "n, k = list(map(int,input().split()))\n\na = list(map(int,input().split()))\n\ncnt1 = 0\nfor i in range(n):\n    cnt1 += a[i] % 2\nans = ['Daenerys' , 'Stannis']\nif(n == k):\n    print(ans[sum(a)%2])\n    return\nif(cnt1 > (n - k)//2 and (n - cnt1) > (n - k)//2):\n    print(ans[(n - k) % 2])\nelse:\n    if(cnt1 > (n - k) //2):\n        cnt0 = n - cnt1\n        print(ans[(sum(a) - ((n - k) - cnt0))%2])\n        \n    else:\n        \n        print(ans[(sum(a) - cnt1)%2])\n\n        \n\n    \n", "n,m=map(int,input().strip().split())\na=list(map(int,input().strip().split()))\nx=0\nfor i in range(n):\n    if (a[i]&1):\n        x=x+1\n# print(x)\nif (n==m):\n    if (x&1):\n        print(\"Stannis\")\n    else:\n        print(\"Daenerys\")\nelif ((n-m)&1):\n    if (m&1):\n        if ((n-m)//2>=x):\n            print(\"Daenerys\");\n        else:\n            print(\"Stannis\");\n    else:\n        if ((n-m)//2>=x or (n-m)//2>=(n-x)):\n            print(\"Daenerys\")\n        else:\n            print(\"Stannis\");\nelse:\n    if (m&1):\n        if ((n-m)//2>=(n-x)):\n            print(\"Stannis\")\n        else:\n            print(\"Daenerys\")\n    else:\n        print(\"Daenerys\")"]