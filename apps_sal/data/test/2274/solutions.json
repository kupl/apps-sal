["# for _ in range(1):\nfor _ in range(int(input())):\n    a, b = list(map(int, input().split()))\n    # n = int(input())\n    # arr = list(map(int, input().split()))\n    # s = input()\n    ans = 0\n    for i in range(a - 1):\n        s = input()\n        if s[-1] != 'D':\n            ans += 1\n    s = input()\n    for i in range(b - 1):\n        if s[i] != 'R':\n            ans += 1\n    print(ans)\n", "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    ans=0\n    for i in range(n-1):\n        s=input()\n        if s[-1]=='R':ans+=1\n    ans+=input()[:-1].count('D')\n    print(ans)", "def solv():\n    x,y=map(int,input().split())\n    grid=[input() for n in range(x)]\n    res=0\n    for n in range(x-1):\n        if grid[n][-1]=='R':\n            res+=1\n    for n in range(y-1):\n        if grid[-1][n]!='R':res+=1\n\n    print(res)\n\nfor _ in range(int(input())):\n    solv()", "t = int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    l=[]\n    for i in range(n):\n        l.append(input())\n    ans=0\n    for i in range(n-1):\n        if l[i][-1]!='D':\n            ans+=1\n    for i in range(m-1):\n        if l[-1][i]!='R':\n            ans+=1\n    print(ans)", "def solve():\n    n, m = map(int, input().split())\n    lastline = []\n    lastcol = []\n    for _ in range(n):\n        s = input()\n        if _ + 1 < n:\n            lastcol.append(s[-1])\n        else:\n            lastline = list(s)[:-1]\n    print(lastcol.count('R') + lastline.count('D'))\n\nt = int(input())\nfor _ in range(t):\n    solve()", "a=int(input())\nfor i in range(a):\n    x,y=list(map(int,input().split()))\n    ans=[]\n    for i in range(x):\n        s=input()\n        ans.append(s[-1])\n    \n    print(s.count('D')+ans.count('R'))\n", "#\n#    ------------------------------------------------\n#           ____          _     Generatered using\n#          / ___|        | |\n#         | |    __ _  __| | ___ _ __  ______ _\n#         | |   / _` |/ _` |/ _ \\ '_ \\|_  / _` |\n#         | |__| (_| | (_| |  __/ | | |/ / (_| |\n#          \\____\\____|\\____|\\___|_| |_/___\\____|\n#\n#      GNU Affero General Public License v3.0\n#    ------------------------------------------------\n#    Author   : prophet\n#    Created  : 2020-08-09 10:41:06.753267\n#    UUID     : exYAacOx6D2XBvTK\n#    ------------------------------------------------\n#\nproduction = True\n\nimport sys, math, collections, bisect, itertools, heapq, decimal, random, copy, re\n\ndef input(f = 0, m = 0):\n\n    if m > 0: return [input(f) for i in range(m)]\n    else:\n        l = sys.stdin.readline()[:-1]\n\n        if f >= 10:\n            u = False\n            f = int(str(f)[-1])\n        else: u = True\n\n        if f == 0: p = [l]\n        elif f == 1: p = list(map(int, l.split()))\n        elif f == 2: p = list(map(float, l.split()))\n        elif f == 3: p = list(l)\n        elif f == 4: p = list(map(int, list(l)))\n        elif f == 5: p = l.split()\n\n        return p if u else p[0]\n\ndef out(l, f = 0, n = True):\n\n    if f == 0: p = str(l)\n    elif f == 1: p = \" \".join(map(str, l))\n    elif f == 2: p = \"\\n\".join(map(str, l))\n    elif f == 3: p = \"\".join(map(str, l))\n\n    print(p, end = \"\\n\" if n else \"\")\n\ndef log(*args):\n    if not production:\n        print(\"$$$\", end = \"\")\n        print(*args)\n\nenu = enumerate\nter = lambda a, b, c: b if a else c\nceil = lambda a, b: -(-a // b)\n\ndef mapl(i, f = 0):\n\n    if f == 0: return list(map(int, i))\n    elif f == 1: return list(map(str, i))\n    elif f == 2: return list(map(list, i))\n\n#\n#   >>>>>>>>>>>>>>> START OF SOLUTION <<<<<<<<<<<<<<\n#\n\n\ndef solve():\n\n    n, m = input(1)\n    a = input(3, n)\n\n    t = 0\n\n    for i in a[-1]:\n        if i == \"D\":\n            t += 1\n\n    for i in range(n):\n        if a[i][-1] == \"R\":\n            t += 1\n\n    out(t)\n\n    log()\n    return\n\n\nfor i in range(input(11)): solve()\n\n#\n#   >>>>>>>>>>>>>>>> END OF SOLUTION <<<<<<<<<<<<<<<\n#\n", "t = int(input())\n\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    a = []\n    for __ in range(n):\n        a.append(list(input()))\n\n    o = 0\n    for i in range(n):\n        if a[i][-1] == 'R': o += 1\n\n    for i in range(m):\n        if a[-1][i] == 'D': o += 1\n\n    print(o)\n", "from collections import *\nfrom sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nt, = rl()\nfor _ in range(t):\n    n, m = rl()\n    a = [stdin.readline().rstrip() for _ in range(n)]\n    r = 0\n    for c in a[-1]:\n        if c == 'D':\n            r += 1\n    for l in a:\n        if l[-1] == 'R':\n            r += 1\n    print(r)\n"]