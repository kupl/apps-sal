["inp=lambda :map(int,input().split())\ndef sol():\n    x,y,on,tw=inp()\n    res=0\n    for n in range(x):\n        s=input()\n        sm=0\n        for n in s:\n            if n=='.':\n                sm+=1\n            else:\n                a=sm*on\n                b=(sm//2)*tw+(sm%2)*on\n                res+=min(a,b)\n                sm=0\n        a=sm*on\n        b=(sm//2)*tw+(sm%2)*on\n        res+=min(a,b)\n    print(res)\n\nfor n in range(int(input())):\n    sol()", "t=int(input())\n\ndef solve(s):\n\tf=len(s)\n\tdp=[0]*(f+1)\n\tfor i in range(f):\n\t\tif s[i]=='.':\n\t\t\tdp[i+1]=dp[i]+x\n\t\t\tif i>=1 and s[i-1]=='.':\n\t\t\t\tdp[i+1]=min(dp[i+1],dp[i-1]+y)\n\t\telse:\n\t\t\tdp[i+1]=dp[i]\n\treturn dp[f]\n\nfor i in range(t):\n\tn,m,x,y=map(int,input().split())\n\tans=0;\n\tfor j in range(n):\n\t\tans+=solve(input())\n\tprint(ans)", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, m, x, y = read_ints()\n    a = []\n    cost = 0\n    for i in range(n):\n        row = input() + '*'\n        white = 0\n        for c in row:\n            if c == '*':\n                if white > 0:\n                    cost += min(white * x, white // 2 * y + white % 2 * x)\n                white = 0\n            else:\n                white += 1\n    print(cost)\n", "\ndef solv():\n    x,y,on,tw=map(int,input().split())\n    ans=0\n    for n in range(x):\n        s=input()\n        tot=0\n        for n in s:\n            if n=='.':\n                tot+=1\n            else:\n                a=tot*on\n                b=(tot//2)*tw+(tot%2)*on\n                ans+=min(a,b)\n                tot=0\n        a=tot*on\n        b=(tot//2)*tw+(tot%2)*on\n        ans+=min(a,b)\n    print(ans)\n\nfor n in range(int(input())):\n    solv()", "t = int(input())\n\nfor _ in range(t):\n    n, m, x, y = [int(x) for x in input().split()]\n    mp = [input() for _ in range(n)]\n    if y >= 2*x:\n        print(x*sum(sum(1 for x in row if x == \".\") for row in mp))\n    else:\n        tot = 0\n        for row in mp:\n            i = 0\n            while i < m:\n                if i + 1 < m and row[i] == row[i+1] == \".\":\n                    tot += y\n                    i += 2\n                elif row[i] == \".\":\n                    tot += x\n                    i += 1\n                else:\n                    i += 1\n        print(tot)\n", "import sys\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n, m, x, y = nm()\n    y = min(y, 2*x)\n    ans = 0\n    for _ in range(n):\n        s = ns().split('*')\n        for f in s:\n            ans += len(f)//2*y + len(f)%2*x\n    print(ans)\n    return\n\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n,m,x,y=map(int,input().split())\n    y=min(y,2*x)\n    cost=0\n    for i in range(n):\n        r=input()\n        white=False\n        for j in range(m):\n            if r[j]==\".\":\n                if white:\n                    cost+=y\n                    cost-=x\n                    white=False\n                else:\n                    cost+=x\n                    white=True\n            else:\n                white=False\n    print(cost)", "import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\n\ndef solve():\n  n, m, x, y = I()\n  ans = 0\n  for i in range(n):\n    s = input()\n    count = 0\n    for j in range(m):\n      if s[j] == '.':\n        count += 1\n      else:\n        ans += min(x * count, count // 2 * y + (count % 2) * x)\n        count = 0\n    ans += min(x * count, count // 2 * y + (count % 2) * x)\n  print(ans)\n\nt, = I()\nwhile t:\n  t -= 1\n  solve()", "\nfor _ in range(int(input())):\n    n, m, x, y = list(map(int, input().split()))\n    # n = int(input())\n    # arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        s = input()\n        be = s.count('.')\n        ch = m - be\n        if x * 2 <= y:\n            ans += be * x\n            continue\n        j = 0\n        while j < m:\n            if s[j] == '*':\n                j += 1\n                continue\n            if j + 1 == m or s[j + 1] == '*':\n                ans += x\n                j += 1\n                continue\n            ans += y\n            j += 2\n    print(ans)\n", "for gfhua in range(int(input())):\n    n,m,x,y = list(map(int,input().split()))\n    if y > x * 2:\n        y = x * 2\n    ans = 0\n    for i in range(n):\n        s = input()\n        l = 0\n        for j in s:\n            if j == \".\":\n                l += 1\n            else:\n                ans += l // 2 * y + l % 2 * x\n                l = 0\n        ans += l // 2 * y + l % 2 * x\n    print(ans)\n", "t = int(input())\nfor _ in range(t):\n\tn, m, x, y = map(int, input().split())\n\tans = 0\n\tif y > 2*x:\n\t\ty = 2*x\n\n\tfor i in range(n):\n\t\tarr = input()\n\n\t\ti = 0\n\t\twhile i < m:\n\t\t\tif arr[i] == \"*\":\n\t\t\t\ti += 1\n\t\t\telse:\n\t\t\t\tif i + 1 < m and  arr[i+1] == \".\":\n\t\t\t\t\tans += y\n\t\t\t\t\ti += 2\n\t\t\t\telse:\n\t\t\t\t\tans += x\n\t\t\t\t\ti += 1\n\n\tprint(ans)", "from math import *\n\ndef r1(t):\n    return t(input().strip())\n\ndef r2(t):\n    return [t(i) for i in input().strip().split()]\n\ndef r3(t):\n    return [t(i) for i in input().strip()]\n\nfor _ in range(int(input())):\n    n, m, x, y = r2(int)\n    ans = 0\n    cnt = 0\n    for i in range(n):\n        for j in input():\n            if j == '.':\n                cnt += 1\n                if 2*x <= y:\n                    ans += x\n                    cnt = 0\n                elif cnt == 2:\n                    ans += y\n                    cnt = 0\n            else:\n                if cnt == 1:\n                    ans += x\n                    cnt = 0\n        if cnt == 1:\n            ans += x\n        cnt = 0\n        \n    print(ans)\n", "for _ in range(int(input())):\n    n, m, x, y = tuple(map(int, input().split()))\n    y = min(y, 2 * x)\n\n    ans = 0\n    for _ in range(n):\n        line = [i for i in input()]\n\n        i = 0\n        while i < m:\n            if line[i] == '.':\n                if i != m - 1 and line[i + 1] == '.':\n                    ans += y\n                    i += 2\n                else:\n                    ans += x\n                    i += 1\n            else:\n                i += 1\n\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n, m, x, y = list(map(int, input().split()))\n    if y > 2 * x:\n        y = 2 * x\n    out = 0\n    for i in range(n):\n        line = input().strip()\n\n        curr = 0\n        for c in line:\n            if c == '.':\n                out += y * curr\n                curr = 1 - curr\n            else:\n                out += x * curr\n                curr = 0\n        out += x * curr\n    print(out)\n", "def solve():\n    n, m, x, y = map(int, input().split())\n    y = min(y, x * 2)\n    a = [input() for _ in range(n)]\n    ans = 0\n    for i in range(n):\n        j = 0\n        while j < m:\n            if a[i][j] == '*':\n                j += 1\n                continue\n            k = j\n            while k < m and a[i][k] == '.':\n                k += 1\n            w = k - j\n            ans += w // 2 * y + w % 2 * x\n            j = k\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "T = int(input())\n\nfor t in range(T):\n    N, M, x, y = [int(_) for _ in input().split()]\n    answer = 0\n    for i in range(N):\n        row = input().split('*')\n        for el in row:\n            if el:\n                l = len(el)\n                b2 = l//2\n                answer += min(2*x*b2, y*b2)\n                if l % 2:\n                    answer += x\n    print(answer)\n"]