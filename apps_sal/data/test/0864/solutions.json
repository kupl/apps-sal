["n, k = map(int, input().split())\na = list(map(int, input().split()))\nday = 1\ndef poss(day):\n\tq = 0\n\tmp = dict()\n\tfor el in a:\n\t\tif el not in mp:\n\t\t\tmp[el] = 1\n\t\telse:\n\t\t\tmp[el] += 1\n\tfor el in mp:\n\t\tq += mp[el] // day\n\treturn q >= n\n\nwhile poss(day):\n\tday += 1\n\nprint(day - 1)", "n,m = list(map(int,input().split()))\nlinp = list(map(int,input().split()))\n\nl = [0]*101\nfor i in linp:\n    l[i] += 1\n\ntest = 100\nwhile test > 0:\n    l2 = [i//test for i in l]\n    peop = sum(l2)\n    if peop >= n:\n        break\n    else:\n        test -= 1\n\nprint(test)\n", "n, m = list(map(int, input().split()))\nd = {}\ns = list(map(int, input().split()))\nfor c in s:\n    if c in d:\n        d[c] += 1\n    else:\n        d[c] = 1\n\nd = list(d.values())\n\nfor k in range(m, 0, -1):\n    l = 0\n    for v in d:\n        l += v // k\n        if l >= n:\n            print(k)\n            return\nprint(0)\n", "n, m = list(map(int, input().split()))\na = [0] * 100\ninp = list(map(int, input().split()))\n\nfor i in inp:\n    a[i - 1] += 1\n    \ngo = True\nans = 0\nfor i in range(1000):\n    \n    b = [i for i in a]\n    \n    cnt = 0\n    for j in b:\n        cnt += j // (i + 1)\n        \n    go = cnt >= n\n    \n    if not go:\n        ans = i\n        break\nprint(i)\n", "from collections import defaultdict as dd, deque\n\nn,m = list(map(int,input().split()))\nA = [int(x) for x in input().split()]\n\nC = dd(int)\nfor a in A:\n    C[a] += 1\n\npsize = 1\nwhile True:\n    packs = 0\n    for c in C:\n        packs += C[c]//psize\n    if packs < n: # Previous possible, this one not\n        break\n    psize += 1\nprint(psize - 1)\n\n", "from collections import Counter\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nC = Counter(a)\n\n\ndef check(p):\n    return sum(el // p for el in list(C.values())) >= n\n\n\ndef binSearch(a, b):\n    left, right = a - 1, b + 1\n\n    while right - left > 1:\n        mid = (left + right) // 2\n\n        if check(mid):\n            left = mid\n\n        else:\n            right = mid\n\n    return left\n\n\nprint(binSearch(1, 100))\n", "import sys\nimport os\n\ndef test(food, n, day):\n    p = 0\n    for i in food:\n        p += i // day\n    return p >= n\n\ndef solve(package, n):\n    food = dict()\n    for f in package:\n        if f in food:\n            food[f] += 1\n        else:\n            food[f] = 1\n\n    r = list(food.values())\n\n    left = 0\n    right = 1000\n    while right > left + 1:\n        mid = (left + right) // 2\n        if test(r, n, mid):\n            left = mid\n        else:\n            right = mid\n\n    return left\n\n\ndef main():\n    n, m = map(int, input().split())\n    package = list(map(int, input().split()))\n    print(solve(package, n))\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nd = {}\nfor i in a:\n    try:\n        d[i] += 1\n    except KeyError:\n        d[i] = 1\n\n# print(d)\n\nmx = m // n\n\nwhile mx != 0:\n    cur = 0\n    for i in d:\n        t = d[i] // mx\n        cur += t\n    if cur >= n:\n        break\n    else:\n        mx -= 1\n\nprint(mx)", "n,m=map(int,input().split())\narr=list(map(int,input().split()))\nd={}\nfor i in arr:\n  if i in d.keys():\n    d[i]+=1\n  else:\n    d[i]=1\ndays=1\nwhile True:\n  count=0\n  for i in d.keys():\n    count+=d[i]//days \n  if count<n:\n    break \n  days+=1\nprint(days-1)", "from collections import Counter\n\n\ndef read():\n    return int(input())\n\n\ndef readmap():\n    return map(int, input().split())\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\nn, m = readmap()\nA = readlist()\nc = Counter(A)\nfreq = []\nfor v in c.values():\n    freq.append(v)\nfreq.sort(reverse=True)\n\n\ndef ok(i):\n    j = n\n    for f in freq:\n        j -= f // i\n    if j <= 0:\n        return True\n    else:\n        return False\n\n\nfor i in reversed(range(1, m+1)):\n    if ok(i):\n        print(i)\n        quit()\n\nprint(0)", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nc = dict()\n\nfor i in a:\n    if i in c:\n        c[i] += 1\n    else:\n        c[i] = 1\n\nc = sorted(list(c.values()))\n\ndef check(p):\n    d = c[:]\n    for _ in range(n):\n        while d and d[-1] < p:\n            del d[-1]\n        if not d:\n            return False\n        d[-1] -= p\n    return True\n\nfor k in range(m, -1, -1):\n    if check(k):\n        print(k)\n        break\nelse:\n    print(0)\n", "n, m = list(map(int, input().split()))\nN = list(map(int, input().split()))\nA = [0] * 100\nfor i in range(m):\n    A[N[i] - 1] += 1\nX = [0] * 100\nf = 0\nr = 100000\ng = 0\nfor i in range(n):\n    f = 0\n    for k in range(100):\n        if A[k] // (X[k] + 1) > f:\n            f = A[k] // (X[k] + 1)\n            g = k\n    X[g] += 1\n    r = min(r, A[g] // X[g])\nprint(r)\n            \n", "n,m=map(int,input().strip().split())\nl=list(map(int,input().strip().split()))\nl1=[0 for i in range(101)]\nfor i in l:\n    l1[i]=l1[i]+1\nfor i in range(100,0,-1):\n    r=0\n    for j in range(1,101):\n        r=r+l1[j]//i\n    if (r>=n):\n        print (i)\n        return\nprint (0)", "def check(x):\n    ans = 0\n    for i in range(101):\n        ans += cnt[i] // x\n    return ans >= n\n\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\ncnt = [0] * 101\nfor elem in a:\n    cnt[elem] += 1\nl = 0\nr = m + 1\nwhile r - l > 1:\n    mid = (r + l) // 2\n    if not check(mid):\n        r = mid\n    else:\n        l = mid\nprint(l)", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ncnt = [0 for _ in range(101)]\nfor ai in a:\n    cnt[ai] += 1\nl = 0\nr = 101\nwhile l + 1 < r:\n    c = (l + r) // 2\n    k = 0\n    for i in range(1, 101):\n        k += cnt[i] // c\n    if n <= k:\n        l = c\n    else:\n        r = c\nprint(l)\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\ncnt=[0]*101\nfor i in a:\n    cnt[i]+=1\ncnt.sort(reverse=True)\nans=0\nfor i in range(1,101):\n    k=0\n    for j in range(101):\n        k+=cnt[j]//i\n        if k>=n:\n            ans=max(ans,i)\n            break\nprint(ans)\n            \n", "from collections import defaultdict\n\nn, m = [int(i) for i in input().split()]\nx = [int(i) for i in input().split()]\nfood = [0 for i in range(101)]\nusers = [0 for i in range(101)]\n\nfor i in x:\n    food[i] += 1\ndays = 1000\nfor i in range(n):\n    best = 0\n    cand = -1\n    for j in range(101):\n        if (food[j] // (users[j] + 1)) > best:\n            best = food[j] // (users[j] + 1)\n            cand = j\n    users[cand] += 1\n    days = min(days, best)\n\nprint(days)\n", "from collections import Counter\nn, m  = list(map(int, input().split()))\n\nb = Counter(list(map(int, input().split())))\n\n# print(b.values())\n\nres = 0\nfor days in range(1, m//n +1 ):\n    parts = 0\n    for j  in list(b.values()):\n        parts += j // days\n    if parts >= n:\n        res = days\n\nprint(res)\n\n\n\n\n\n\n\n\n", "d = {}\n\ns = input().split()\nn = int(s[0])\nm = int(s[1])\n\ns = input().split()\n\nfor item in s:\n    if item not in d.keys():\n        d.update(dict([(item, 1)]))\n    else:\n        d[item] += 1\n\ncur = 0\n\nwhile True:\n    num = 0\n    for item in d.values():\n        num += item // (cur + 1)\n    if num < n:\n        break\n    cur += 1\n\nprint(cur)", "m,n=input().strip().split(' ')\nm,n=int(m),int(n)\narr=list(map(int,input().strip().split(' ')))\ndays=0\nif(m>n):\n    print(0)\nelse:\n    mp={}\n    for i in arr:\n        if(i in mp):\n            mp[i]+=1\n        else:\n            mp[i]=1\n    temp=[]\n    for i in mp:\n        temp.append(mp[i])\n    temp.sort()\n    days=0\n    j=1\n    #print(temp)\n    while(1):\n        cnt=0\n        #print(j)\n        for i in temp:\n            cnt+=i//j\n            if(cnt>=m):\n                break\n        if(cnt<m):\n            break\n        days+=1\n        j+=1\n    print(days)\n", "n, m = list(map(int, input().split()))\nc = list(map(int , input().split()))\nm = max(c)\na = []\nfor i in range(m+1):\n    a.append(c.count(i))\np = [0]*(m+1)\ncurmax = 10**9\nfor i in range(n):\n    ind = 0\n    best_result = 0\n    for j in range(m+1):\n        current_result = 10**9\n        for k in range(m+1):\n            mn = p[k]\n            if k == j:\n                mn += 1\n            if mn == 0:\n                continue\n            current_result = min(current_result, a[k]//mn)\n        if current_result > best_result:\n            best_result = current_result\n            ind = j\n    p[ind] += 1\nans = 10**9\nfor i in range(m+1):\n    if p[i] > 0:\n        ans = min(ans, a[i]//p[i])\nprint(ans)\n", "n,m=list(map(int,input().split()))\ns=list(map(int,input().split()))\nd=dict()\nfor i in s:\n    try:\n        d[i]+=1\n    except:\n        d.update({i:1})\ns1=[]\nfor i in d:\n    s1.append(d[i])\ns1.sort()\nans=0\nfor i in range(1, 101):\n    t=s1.copy()\n    x=0\n    while len(t)>0 and x!=n:\n        if t[-1]<i:\n            t.pop()\n        else:\n            t[-1]-=i\n            x+=1\n    if x==n:\n        ans=max(ans,i)\n        \nprint(ans)\n", "n, m = list(map(int, input().split()))\na = [int(el) for el in input().split()]\nb = [0] * 101\nfor i in range(m):\n    b[a[i]] += 1\nd = []\nfor i in b:\n    if i != 0:\n        d.append([i, 0])\n\n\ndef f(df):\n    return -df[0]\n\n\nd.sort(key = f)\n\n\nk = 0\nl = 0\nfor i in range(n):\n    nm = 0\n    mm = d[0][0] // (d[0][1] + 1)\n    for j in range(len(d)):\n        if mm < d[j][0] // (d[j][1] + 1):\n            nm = j\n            mm = d[j][0] // (d[j][1] + 1)\n    d[nm][1] += 1\nprint(mm)\n"]