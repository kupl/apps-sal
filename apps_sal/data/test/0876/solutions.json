["n,k = list(map(int,input().split()));\na = list(map(int,input().split()));\n\nif max(a) >= k:\n    print(0)\n    return\n\nlx = 0\nwhile a[lx] == 0:\n    lx+=1\n\nlo,hi = 1,k\n\ndef can(x):\n    bc = 1\n    tot = 0\n    for i in range(n-lx):\n        if(bc >= k):\n            return True\n        tot += bc*a[n-1-i]\n        bc *= (x+i)\n        bc = bc//(i+1)\n        if(tot >= k):\n            return True\n    return tot >= k\n\nwhile lo < hi :\n    mid = (lo+hi)//2\n    cancan = can(mid)\n    #print(mid,cancan)\n    if cancan : hi = mid\n    else : lo = mid + 1\n\nprint(lo)\n", "from itertools import *\nn, k = list(map(int, input().split()))\n*A, = list(map(int, input().split()))\nalc = 0\nfor v in A:\n    if v > 0:\n        alc += 1\nif max(A) >= k:\n    print(0)\nelif alc <= 20:\n    l = 0\n    r = int(1e18)\n    while l + 1 < r:\n        m = (l + r) // 2\n        s = 0\n        for i in range(n):\n          if A[i] > 0:\n            s2 = 1\n            for j in range(n - i - 1):\n                s2 *= m + j\n                s2 //= j + 1\n                if s2 >= k:\n                    break\n            s += s2 * A[i]\n            if s >= k:\n                break\n        if s >= k:\n            r = m\n        else:\n            l = m\n    print(r)\nelse:\n    ans = 0\n    while True:\n        ans += 1\n        for i in range(1, n):\n            A[i] += A[i - 1]\n        if A[-1] >= k:\n            break\n    print(ans)\n           \n", "n, k = list(map(int, input().split(\" \")))\nl = list(map(int, input().split(\" \")))\n\nv = []\nfor x in l:\n    if x != 0 or v:\n        v.append(x)\n\ndef bruteforce(v, k):\n    ret = 0\n    while True:\n        accm = 0\n        for i in range(len(v)):\n            if v[i] >= k: return ret\n            accm += v[i]\n            v[i] = accm\n        ret += 1\n    return ret\n\ndef smarty(v, k):\n    def triang(x):\n        return x*(x+1)//2\n    l, r = 0, 10**18\n    ans = 10**18\n    while l<=r:\n        h = (l+r)//2\n        f0 = v[0]\n        f1 = h*v[0] + v[1]\n        f2 = triang(h)*v[0] + h*v[1] + v[0] if n == 3 else 0\n        if max(f0, f1, f2) >= k:\n            r = h-1\n            ans = min(ans, h)\n        else:\n            l = h+1\n    return ans\n\nn = len(v)\nif n>3:\n    print(bruteforce(v, k))\nelse:\n    print(smarty(v, k))\n", "'''\n\n0  |  a1       a2         a3\n1  |  a1       a1+a2      a1+ a2+a3\n2  |  a1      2a1+a2     3a1+2a2+a3\n...      ...        ...\ncada celda depende de la izq y la superior, es como numeros\ncombinatorios, el a1 es triang(k) en 3, y los inmediatamente anteriores\npor k (con k=0 es perm original!)\n'''\nn, k = list(map(int, input().split(\" \")))\nl = list(map(int, input().split(\" \")))\n\nv = []\nfor x in l:\n    if x != 0 or v:\n        v.append(x)\n\ndef bruteforce(v, k):\n    ret = 0\n    while True:\n        accm = 0\n        for i in range(len(v)):\n            if v[i] >= k: return ret\n            accm += v[i]\n            v[i] = accm\n        ret += 1\n    return ret\n\ndef smarty(v, k):\n    def triang(x):\n        return x*(x+1)//2\n    l, r = 0, 10**18\n    ans = 10**18\n    while l<=r:\n        h = (l+r)//2\n        f0 = v[0]\n        f1 = h*v[0] + v[1]\n        f2 = triang(h)*v[0] + h*v[1] + v[0] if n == 3 else 0\n        if max(f0, f1, f2) >= k:\n            r = h-1\n            ans = min(ans, h)\n        else:\n            l = h+1\n    return ans\n\nn = len(v)\nif n>3:\n    print(bruteforce(v, k))\nelse:\n    print(smarty(v, k))\n", "s=input().split()\nn=int(s[0])\nk=int(s[1])\nL=list(map(int,input().split()))\n\nlx=0\nwhile L[lx]==0:\n    lx+=1\nA=[]\nfor i in range(lx,n):\n    A.append(L[i])\nn=len(A)\nn=len(A)\ndef good(l):\n    coeff=1\n    tot=0\n    for i in reversed(list(range(n))):\n        tot+=coeff*A[i]\n        if tot>=k:\n            return True\n        coeff=(coeff*(n-i-1+l))//(n-i)\n    return False\nans=0\nfor i in range(1,10):\n    if good(i):\n        ans=i\n        break\nif ans==0:\n    l=1\n    r=k\n    while True:\n        if l==r:\n            ans=l\n            break\n        if l+1==r:\n            if good(l):\n                ans=l\n            else:\n                ans=r\n            break\n        m=(l+r)//2\n        if good(m):\n            r=m\n        else:\n            l=m+1\nfor i in range(n):\n    if A[i]>=k:\n        ans=0\nprint(ans)\n", "def p(arr):\n\tfor i in range(1,len(arr)):\n\t\tarr[i]+=arr[i-1]\n\treturn arr\n\ndef max_element(arr):\n\tx=0\n\tfor i in arr:\n\t\tx=max(x,i)\n\treturn x\n\ndef kek(a,b):\n\tif (a<=b):\n\t\treturn 1\n\telse:\n\t\treturn 0\n\n[n,k]=[int(x) for x in input().split()]\n\ndef matmul(m1,m2):\n\ts=0     #\u0441\u0443\u043c\u043c\u0430\n\tt=[]    #\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430\n\tm3=[] # \u043a\u043e\u043d\u0435\u0447\u043d\u0430\u044f \u043c\u0430\u0442\u0440\u0438\u0446\u0430\n\tif len(m2)!=len(m1[0]):\n\t\tprint(\"333\")       \n\telse:\n\t\tr1=len(m1) #\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u043f\u0435\u0440\u0432\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u0435\n\t\tc1=len(m1[0]) #\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 1   \n\t\tr2=c1           #\u0438 \u0441\u0442\u0440\u043e\u043a \u0432\u043e 2\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u0435\n\t\tc2=len(m2[0])  # \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432\u043e 2\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u0435\n\t\tfor z in range(0,r1):\n\t\t\tfor j in range(0,c2):\n\t\t\t\tfor i in range(0,c1):\n\t\t\t\t\ts=s+m1[z][i]*m2[i][j]\n\t\t\t\t\ts=min(s,k)\n\t\t\t\tt.append(s)\n\t\t\t\ts=0\n\t\t\tm3.append(t)\n\t\t\tt=[]           \n\treturn m3\t\n\ndef exp(m,p):\n\tif (p==1):\n\t\treturn m\n\tif (p%2==0):\n\t\tw=exp(m,p//2)\n\t\treturn matmul(w,w)\n\telse:\n\t\treturn matmul(m,exp(m,p-1))\n\n\n\na=[int(x) for x in input().split()]\nind=0\nwhile a[ind]==0:\n\tind+=1\na=a[ind:]\nn=len(a)\nif (max_element(a)>=k):\n\tprint(0)\nelse:\n\ta=[a]\n\tif (n>=10):\n\t\tres=0\n\t\twhile(max_element(a[0])<k):\n\t\t\tres+=1\n\t\t\ta[0]=p(a[0])\n\t\tprint(res)\n\telif n==2:\n\t\tx1=a[0][0]\n\t\tx2=a[0][1]\n\t\tprint((k-x2+x1-1)//x1)\n\telse:\n\t\tm=[]\n\t\tfor i in range(n):\n\t\t\tm+=[[kek(i,j) for j in range(n)]]\n\t\tl=0;\n\t\tr=10**18\n\t\twhile(l+1<r):\n\t\t\tmid=(l+r)//2;\n\t\t\tb=matmul(a,exp(m,mid))\n\t\t\tif max_element(b[0])<k:\n\t\t\t\tl=mid\n\t\t\telse:\n\t\t\t\tr=mid\n\t\tprint(r)\n\t\t\n\t\n", "from sys import stdin, stdout\nfrom math import factorial\nfrom math import log10\n\n\ndef check(pw, values, k):\n    n = len(values)\n    \n    matr = [[0 for i in range(n)] for j in range(n)]\n    res = [[0 for i in range(n)] for j in range(n)]\n    pp = [[0 for i in range(n)] for j in range(n)]\n    \n    for i in range(n):\n        for j in range(n):\n            matr[i][j] = int(i >= j)\n    \n    for i in range(n):\n        res[i][i] = 1\n        \n    while pw:\n        if pw & 1:\n            for i in range(n):\n                for j in range(n):\n                    pp[i][j] = 0\n            \n            for i in range(n):\n                for j in range(n):\n                    for z in range(n):\n                        pp[i][j] += res[i][z] * matr[z][j]\n            \n            for i in range(n):\n                for j in range(n):\n                    res[i][j] = pp[i][j]\n        \n        for i in range(n):\n            for j in range(n):\n                pp[i][j] = 0        \n\n        for i in range(n):\n            for j in range(n):\n                for z in range(n):\n                    pp[i][j] += matr[i][z] * matr[z][j]        \n\n        \n        for i in range(n):\n            for j in range(n):\n                matr[i][j] = pp[i][j]\n\n        pw >>= 1\n    \n    ans = 0\n    for i in range(n):\n        ans += values[i] * res[i][0]\n            \n    \n    return ans >= k\n\n\ndef stupid(values, n, k):\n    ans = values[:]\n    \n    if max(ans) >= k:\n        return 0\n    \n    cnt = 0\n    while ans[-1] < k:\n        for i in range(1, n):\n            ans[i] += ans[i - 1]\n        \n        cnt += 1\n        q = ans[-1]\n    \n    return cnt\n\n\ndef clever(values, n, k):\n    if max(values) >= k:\n        return 0\n    \n    l, r = 0, 10 ** 18 + 100\n    \n    while r - l > 1:\n        m = (l + r) >> 1\n        \n        if check(m, values, k):\n            r = m\n        else:\n            l = m\n            \n    return r\n\n\ndef main():\n    n, k = map(int, stdin.readline().split())\n    values = list(map(int, stdin.readline().split()))[::-1]\n    \n    while not values[-1]: #\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0442\u043e\u043c \u0447\u0442\u043e \u0442\u044b \u0443\u0434\u0430\u043b\u044f\u0435\u0448\u044c\n        values.pop()\n    \n    n = len(values)\n\n    \n    if n >= 10:\n        stdout.write(str(stupid(values[::-1], n, k)) + '\\n')\n    else:\n        stdout.write(str(clever(values, n, k)) +  '\\n')\n    \n    \nmain()", "n, k = list(map(int,input().split()))\na = list(map(int,input().split()))\n\nptr = 0\nwhile a[ptr]==0:\n  ptr += 1\n\ndef check(x):\n  \n  if x==0:\n    return max(a) >= k\n    \n  binomial = 1\n  sum = 0\n  \n  for i in range(n-ptr):\n    if binomial >= k:\n      return True\n    sum += binomial * a[n-i-1]\n    binomial *= (x+i)\n    binomial //= (i+1)\n    if sum >= k:\n      return True\n  return False\n\nlo,hi = 0, k\n\nwhile lo < hi:\n\n  md = (lo+hi) // 2\n  \n  if check(md):\n    hi = md;\n  else:\n    lo = md + 1\n    \nprint(lo)\n", "s = input().split()\nn = int(s[0]); k = int(s[1])\ns = input().split()\na = [1]\nfor i in range(1, n + 1):\n\ta.append(int(s[i - 1]))\n\nfor i in range(1, n + 1):\n\tif (a[i] >= k):\n\t\tprint((0)); return\n\ndef C(nn, kk):\n\tnonlocal k\n\tprod = 1\n\tkk = min(kk, nn - kk)\n\t# print(nn, nn - kk + 1)\n\tfor i in range(1, kk + 1):\n\t\t# print(\"///\" + str(i))\n\t\tprod *= nn - i + 1\n\t\tprod = prod // i\n\t\tif (prod >= k):\n\t\t\treturn -1\n\tif (prod >= k):\n\t\treturn -1\n\treturn prod\n\ndef holyshit(pwr):\n\tnonlocal n, k, a\n\tsum = 0\n\tfor i in range(n, 0, -1):\n\t\tif (a[i] == 0):\n\t\t\tcontinue\n\t\tprod = C(pwr - 1 + n - i, pwr - 1)\n\t\tif (prod == -1): \n\t\t\treturn True\n\t\tsum += prod * a[i]\n\t\tif (sum >= k):\n\t\t\treturn True\n\t# print(\"wait, the sum is...\" + str(sum))\n\treturn False\n\nleft = 1; right = int(1e19); ans = int(1e19)\nwhile left <= right:\n\tmid = (left + right) >> 1\n\t# print(\"/\" + str(left) + \" \" + str(mid) + \" \" + str(right))\n\tif (holyshit(mid)):\n\t\t# print(\"////okay\")\n\t\tans = mid\n\t\tright = mid - 1\n\telse:\n\t\t# print(\"////notokay\")\n\t\tleft = mid + 1\nprint(ans)\n# print(int(1e19))\n# k = int(1e18)\n# # print(C(6, 3))\n# # print(C(10, 1))\n# # print(C(7, 5))\n# # print(C(8, 2))\n", "from math import factorial\ndef ncr(n, r):\n    ans = 1\n    for i in range(r):\n        ans*=n-i\n    for i in range(r):\n        ans//=i+1\n    return ans\n\nn,k = list(map(int, input().split()))\ninp = list(map(int,input().split()))\nnz = 0\nseq = []\nfor i in range(n):\n    if(inp[i]!=0):\n        nz = 1\n    if(nz!=0):\n        seq.append(inp[i])\n\nif(max(seq) >= k):\n    print(\"0\")\n    return\n\nif(len(seq) <= 8):\n    seq.reverse()\n    mn = 1\n    mx = pow(10,18)\n    while(mn < mx):\n        mid = (mn + mx)//2\n        curr = 0\n        for i in range(len(seq)):\n            curr+=seq[i]*ncr(mid+i-1, i)\n        if(curr>=k):\n            mx = mid\n        else:\n            mn = mid + 1\n    print(mn)\n    return\nfor i in range(1000):\n    for j in range(1,len(seq)):\n        seq[j]+=seq[j-1]\n    if(max(seq) >= k):\n        print(i+1)\n        return\n\n\n\n\n\n\n"]