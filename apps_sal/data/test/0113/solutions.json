["def main():\n\tn, k = map(int, input().split())\n\tnum_2 = 0\n\tnum_5 = 0\n\tx = n\n\twhile (x % 2 == 0):\n\t\tnum_2 += 1\n\t\tx //= 2\n\t\t\n\twhile (x % 5 == 0):\n\t\tnum_5 += 1\n\t\tx //= 5\n\tnum_2 = k - min(num_2, k)\n\tnum_5 = k - min(num_5, k)\n\tprint(n * 5 ** num_5 * 2 ** num_2)\n\n\nmain()", "a, b = map(int, input().split(' '))\naa=a\nfives = 0\nwhile a%5==0:\n\tfives += 1\n\ta /= 5\ntwos = 0\nwhile a%2==0:\n\ttwos += 1\n\ta /= 2\nx=1\n\nif fives<b:\n\tx *= 5**(b-fives)\nif twos<b:\n\tx *= 2**(b-twos)\n\nprint(x*aa)", "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn, k = list(map(int, input().split()))\nprint(n // gcd(n, 10**k) * 10 ** k)", "a,b=list(map(int,input().split()))\nfor i in range(b):\n    if a%2==0:\n        a//=2\n    if a%5==0:\n        a//=5\nb=10**b\nprint(a*b)\n", "n, k = map(int, input().split())\nk = 10 ** k\n\ndef gcd(a, b):\n\twhile b:\n\t\ta, b = b, a % b\n\treturn a\n\nprint(n // gcd(n, k) * k)", "n,k=map(int,input().split())\na=10**k\ndef lcm(a,b):\n    m = a*b\n    while a != 0 and b != 0:\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    return m // (a+b)\nprint(lcm(n,a))", "n, k = [int(i) for i in input().split()]\nt1 = 0\nwhile t1 < k and n % 5 == 0:\n    t1 += 1\n    n //= 5\nt1 = 0\nwhile t1 < k and n % 2 == 0:\n    t1 += 1\n    n //= 2\nprint(n * (10**k))\n", "\ndef nod(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef nok(a, b):\n    return a * b // nod(a, b)\n\nn, k = list(map(int, input().split()))\nprint(nok(n, 10 ** k))\n", "def gsd(a,b):\n    if b == 0:\n        return a\n    return gsd(b, a % b)\nn, k = list(map(int, input().split()))\nprint(n * (10 ** k // gsd(n, 10**k)))\n", "from math import gcd\nn, k = list(map(int, input().split()))\nprint(10 ** k * n // gcd(10 ** k, n))\n", "n, k = [int(x) for x in input().split()]\nn1 = n\ncnt5 = cnt2 = 0\nfor i in range(k):\n    if n1 % 2 == 0:\n        n1 //= 2\n        cnt2 += 1\n    else:\n        break\nfor i in range(k):\n    if n1 % 5 == 0:\n        n1 //= 5\n        cnt5 += 1\n    else:\n        break\nif cnt2 >= k and cnt5 >= k:\n    print(n)\nelse:\n    print(n * 2 ** (k - cnt2) * 5 ** (k - cnt5))", "def gcd(a, b):\n    if (b == 0):\n        return a\n    else:\n        return gcd(b, a % b)\n\nn, k = map(int, input().split())\nl = 1\nfor i in range(k):\n    l *= 10\nprint(str(n // gcd(n, l)) + \"0\" * k)", "def nok(a,b):\n    m = a*b\n    while a != 0 and b != 0:\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    return m // (a+b)\nn,k = list(map(int, input().split()))\nprint(nok(n,10**k))\n", "def nok(a, b):\n    c = a*b\n    while (a!=0) and (b!=0):\n        if a>b: a%=b;\n        else: b%=a;\n    return c//(a+b);\n\nnk = input().split()\nn, k = int(nk[0]), int(nk[1])\nprint (nok(10**k, n))", "n, k = [int(i) for i in input().split()]\nkol2 = 0\nkol5 = 0\nn1 = n\nwhile (n1 % 5 == 0):\n    n1 /= 5\n    kol5 += 1\nn1 = n\nwhile (n1 % 2 == 0):\n    n1 /= 2\n    kol2 += 1\nwhile (k - kol2 > 0):\n    n *= 2\n    kol2 += 1\nwhile (k - kol5 > 0):\n    n *= 5\n    kol5 += 1\nprint(n)", "def gcd(a,b):\n    while b!=0:\n        a,b=b,a%b\n    return a\n\n\nn, k = map(int, input().split())\nn1 = n\nk1 = k\na = n1 // gcd(n, 10 ** k) * 10 ** k1\nprint(a)", "def gcd(a, b):\n    if(b == 0):\n        return a\n    else:\n        return(gcd(b, a % b))\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b\n\na, b = map(int, input().split())\nb = 10**b\nprint(lcm(max(a, b), min(a, b)))", "import math\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn,k=ria()\n\ng=math.gcd(n,10**k)\nprint(n*(10**k)//g)", "n, k = map(int, input().split())\nfor i in range(k):\n    if n % 5 == 0:\n        n //= 5\n    if n % 2 == 0:\n        n //= 2\nprint(n * 10 ** k)", "m, k = list(map(int, input().split()))\nn = m\ntwos = 0\nfives = 0\nwhile(n%2==0) or (n%5==0):\n    if n%2 == 0:\n        twos += 1\n        n //= 2\n    if n%5 == 0:\n        fives += 1\n        n //= 5\nfinal = n * 2 ** max(k, twos) * 5 ** max(k,fives)\nprint(final)\n", "from math import gcd\n\nn, k = list(map(int , input().split()))\nl = n * (10 ** k)\ng = gcd(n, 10 ** k)\nprint(l // g)", "n,k=map(int,input().split())\n\ndef gcd(x, y):\n   while(y):\n       x, y = y, x % y\n   return x\n\ndef lcm(x, y):\n   lcm = (x*y)//gcd(x,y)\n   return lcm\n\n\nprint(lcm(n,10**k))", "def rec(i):\n    nonlocal a\n    return i\nimport sys\nfrom collections import Counter\nsys.setrecursionlimit(10**6)\n#n=int(input())\na,b=list(map(int,input().split()))\nz=a\nc=0\nwhile a%5==0:\n    c=c+1\n    a=a//5\nd=0\nwhile a%2==0:\n    d=d+1\n    a=a//2\n#c=min(b,c)\n#d=min(b,d)\nfor i in range(b-c):\n    z=z*5\nfor i in range(b-d):\n    z=z*2\nprint(z)\n", "q,w=list(map(int,input().split()))\nz,x=0,0\ne=q\nwhile e%5==0:\n    z+=1\n    e//=5\nwhile e%2==0:\n    x+=1\n    e//=2\nif w>z:\n    z=w-z\nelse:\n    z=0\nif w>x:\n    x=w-x\nelse:\n    x=0\nprint(q*(5**z)*(2**x))\n", "import math\n\na,b = list(map(int, input().split()))\nd = a\ncnt_2 = 0\ncnt_5 = 0\nwhile a % 2 == 0:\n    a /= 2\n    cnt_2 += 1\n\nwhile a % 5 == 0:\n    a /= 5\n    cnt_5 += 1\numn = 1\ncnt_2_raz = max(b - cnt_2, 0)\ncnt_5_raz = max(b - cnt_5, 0)\n\nwhile cnt_2_raz > 0:\n    umn *= 2\n    cnt_2_raz -= 1\n\nwhile cnt_5_raz > 0:\n    umn *= 5\n    cnt_5_raz -= 1\nprint(d * umn)\n"]