["# You lost the game.\nn,k = map(int, input().split())\nr = 0\nfor i in range(min(k,n//2)):\n    r += (n-2*i-1) + (n-2*i-2)\nprint(r)", "def main():\n    n, k = map(int, input().split())\n    if k > (n // 2):\n        k = n // 2\n    ans = 0\n    for i in range(k):\n        ans += 2 * (n - 2 * i - 2) + 1\n    print(ans)\n    \nmain()", "n, k = [int(i) for i in input().split()]\nans = 0\nfor i in range(min(n // 2, k)):\n    ans += (n - i * 2 - 2) * 2\n    ans += 1\nprint(ans)", "#!/usr/bin/env python3\n\nn, k = list(map(int, input().split()))\n\nk = min(k, n // 2)\nprint(k * (n - k) + (n - 2 * k) * k + k * (k - 1))\n", "n, k = list(map(int, input().split()))\nk = min(k, n // 2)\nprint((2 * n  - 2 * k - 1) * k)\n", "n, k = list(map(int, input().split()))\nif (k > n//2):\n    k = n // 2\nif n == 1 or k == 0:\n    print(0)\nelse:\n    print(k * (2 * n - 2 * k - 1))\n", "n,k=(int(z) for z in input().split())\nif 2*k>=n-1:\n\tprint(n*(n-1)//2)\nelse:\n\tprint(n*(n-1)//2-(n-2*k)*(n-2*k-1)//2)", "import sys\nsys.setrecursionlimit(10000000)\nfrom math import pi\nn, k = map(int, input().split())\nans = 0\nfor i  in range(min(n//2, k)):\n    ans += (n - 2*i-1) + (n-2*i-2)\nprint(ans)", "#[int(i) for i in input().split()]\nn, k = [int(i) for i in input().split()]\ni = 0\nres = 0\nfor j in range(min(n // 2, k)):\n    res += n - j - 1 - j\n    res += n - 2 - j - j\nprint(res)\n", "3\n\ndef readln(): return list(map(int, input().split()))\n\ndef main():\n    n, k = readln()\n    if k >= n // 2:\n        print((n - 1) * n // 2)\n    else:\n        k = n - 2 * k\n        print((n - 1) * n // 2 - k * (k - 1) // 2)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k = map(int, input().split())\nper = n*(n-1)//2\nif k >= (n//2):\n    print(per)\nelse:\n    print(per - ((n-k*2-1) * (n-k*2)//2))", "s = input().split(' ')\nn = int(s[0])\nk = int(s[1])\n\nif(k > n / 2):\n    print(n * (n - 1) // 2)\nelse:\n    print(2 * k * n - k * (2 * k + 1))", "n, k = list(map(int, input().split()))\nc = [i for i in range(1, n+1)]\nret = 0\nm = n\nfor i in range(min(k, n // 2)):\n    ret += m - 1 + m - 2\n    m -= 2\nprint(ret)\n", "n, k = map(int, input().split())\n\nresult = 0\ncurVal = n\nfor i in range(k):\n    if curVal <= 1:\n        break\n    result += 2 * curVal - 3\n    curVal -= 2\n\nprint(result)", "n, k = list(map(int, input().split()))\ncnt = 0\nwhile k > 0 and n >= 2:\n    cnt += (n - 1) * 2 - 1\n    n -= 2\n    k -= 1\nprint(cnt)", "n, k = list(map(int, input().split()))\n\nans = 0\n\ncur = 1\nleft = n\nwhile k > 0 and cur <= n // 2:\n    ans += left + left - 3\n    left -= 2\n    cur += 1\n    k -= 1\n\nprint(ans)\n", "n, k = [int(s) for s in input().split()]\nk = min(n // 2, k)\n\n\nprint((2 * n - 2 * k - 1) * k)\n", "n, k = list(map(int, input().split()))\n\na = [0] * (n+1)\nfor i in range(1,n+1):\n    a[i] = i\n\nm = min(k, n >> 1)\nfor i in range(1,m+1):\n    a[i], a[n-i+1] = a[n-i+1], a[i]\n\nA = (n * (n - 1)) >> 1\nl = n - m - m\nl = (l * (l - 1)) >> 1\nprint(A - l)\n", "import math\ndata = input()\nn, k = data.split(' ')\n\nn = int(n)\nk = int(k)\nm = n\nchaos = 0\nfor i in range(k):\n    if i < math.floor(n/2):\n        chaos += 2*m - 3\n        m -= 2\n    else:\n        break\nprint(chaos)", "n, k = map(int, input().split())\nif n == 1:\n    print(0)\nelse:\n    if k >= n // 2:\n        print(n*(n-1)//2)\n    else:\n        s = 0\n        for i in range(1, k + 1):\n            s += 1 + 2 * (n - 2*i)\n        print(s)", "#!/usr/bin/env python3\n\nn, k = [int(x) for x in input().split()]\n\n# 1 2 3 4 5\n# 5 2 3 4 1\n\nif n == 1:\n    print(0)\nelse:\n    result = 0\n    l = n\n    for i in range(0, min(n // 2, k)):\n        result += (l - 1) + (l - 2)\n        l -= 2\n    print(result)\n", "n,k = (int(i) for i in input().split())\nans = 0\nd = n\nfor i in range(min(k,n//2)):\n    ans+=(d*2-3)\n    d-=2\nprint(ans)", "number, time = map(int, input().split())\nif time >= number // 2:\n    ans = (number - 1) * number // 2\nelse:\n    ans = (number - 1 + number - time) * time // 2\n    count = time\n    for i in range(time + 1, number):\n        ans += count\n        if i >= number - time:\n            count -= 1\nprint(ans)", "n, k = list(map(int, input().split()))\nk = min(k, n // 2)\nans = 0\nfor i in range(1, k + 1):\n    ans += (n - i)\nt = ans\n\nans += ((n - 2 * k) * k)\n\nprint(ans + (k * (k - 1) // 2))\n"]