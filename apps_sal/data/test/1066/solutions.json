["N,K=input().split()\nN,K=int(N),int(K)\n\nif(N%2==0):\n    if(K<=N//2):\n        print(2*K-1)\n    else:\n        K-=N//2\n        print(2*K)\n\nelse:\n    if(K<=N//2+1):\n        print(2*K-1)\n    else:\n        K-=N//2+1\n        print(2*K)\n\n", "x= input()\nn,k= x.split()\nn=int(n)\nk=int(k)\nif(n%2==0):\n    if(k<=n/2):\n        ans=2*k-1\n    else:\n        ans= 2+(k-(int(n/2))-1)*2\nelse:\n    if(k<=(n/2+1)):\n        ans=2*k-1\n    else:\n       ans= 2+(k-(int(n/2)+1)-1)*2\nprint(int(ans))       \n", "s = input().split()\nn, k = (int(i) for i in s)\ncnt1 = n - (n // 2)\nif k <= cnt1:\n    print(-1 + k * 2)\nelse:\n    k -= cnt1\n    print(k * 2)", "n,k=list(map(int,input().split()))\nd=n+1>>1\nprint((k*2-1,(k-d)*2)[k>d])\n", "a,b=list(map(int,input().split()))\nc=b-(a+1)//2\nprint(2*c if c>0 else 2*b-1)\n", "a,b=list(map(int,input().split()))\nc=b-(a+1)//2\nprint([2*b-1,2*c][c>0])\n", "n, k = list(map(int, input().split()))\nm = n // 2 + n % 2\nif k <= m:\n    print(2 * k - 1)\nelse:\n    print(2 * (k - m))\n", "#!/usr/bin/env python 3\n\nimport sys\n\nn = sys.stdin.read()\na = n.split()\n\nn = int(a[0])\nk = int(a[1])\n\nif k <= (n + 1) // 2:\n    print(2 * k - 1)\nelse:\n    print((k - (n + 1) // 2) * 2)\n", "n, k = map(int, input().split())\nif k <= int((n + n % 2) / 2):\n    print(2 * (k - 1) + 1)\nelse:\n    tmp = k - int(n / 2) - n % 2\n    print(2 * tmp)", "n, k = [int(x) for x in input().split()]\neven = n // 2\nodd = n - even\nif k <= odd:\n  print(2*k-1)\nelse:\n  print(2*(k-odd))\n", "n, k = [int(x) for x in input().strip().split()]\nif k > (n + 1) // 2:\n\tk -= (n + 1) // 2\n\tprint(2 * k)\nelse:\n\tprint(2 * k - 1)\n\n", "a,b=list(map(int,input().split()))\nmid=(int)(a/2+a%2)\nif b<=mid:\n    print(b*2-1)\nelse:\n    N=(int)(b-mid)*2\n    print(N)\n", "L=list(input().split())\nn, k=int(L[0]), int(L[1])\nif n%2==0:\n    if k<=int(n/2): print(2*k-1)\n    else: print(2*(k-int(n/2)))\nelse:\n    if k<=int((n+1)/2): print(2*k-1)\n    else: print(2*(k-int((n+1)/2)))", "3\n\nn, k = tuple(map(int, input().split()))\nif k <= n - n // 2:\n    print(2 * k - 1)\nelse:\n    print(2 * (k - n + n // 2))\n", "n, k = [int(x) for x in input().split()]\n\nif k <= (n + 1) // 2:\n    print(2 * (k - 1) + 1)\nelse:\n    k -= (n + 1) // 2\n    print(2 * k)\n", "def task1(string):\n    n=int(string[:string.index(' ')])\n    k=int(string[string.index(' '):])\n    if n%2 == 0:\n        if k <= n/2:\n            return 2*k-1\n        else:\n            return 2*(k - n//2)\n    else:\n        if k <= n//2+1:\n            return 2*k-1\n        else:\n            return 2*(k - n//2 - 1)\n\nprint(task1(input()))\n\n", "n,k = list(map (int, input().split()))\nhalf = int(n/2) + n%2\nif k > half:\n  k -= half\n  print(2*k)\nelse:\n  print(2*k-1)\n", "x = input().split()\nn = int(x[0])\nk = int(x[1])\n\nfirst_even_position = (n+1)//2 + 1\nif (k < first_even_position) :\n    number = k * 2 - 1\nelse:\n    number = (k - first_even_position + 1) * 2\n\nprint(number)", "n, k = list(map(int, input().split()))\n\nif k <= (n + 1) // 2:\n    print(k * 2 - 1)\nelse:\n    print((k - (n + 1) // 2) * 2)\n", "import sys\n\t\ndef main():\n\tn, k = list(map(int, sys.stdin.readline().split()))\n\tmax_odd_pos = int(n/2)\n\tif n % 2 == 1:\n\t\tmax_odd_pos += 1\n\t\n\tif k <= max_odd_pos:\n\t\tprint(k*2 - 1)\n\telse:\n\t\tprint((k - max_odd_pos) * 2)\n\t\ndef __starting_point():\n    return(main())\n\n__starting_point()", "n,k=list(map(int,input().split()))\na=(n+1)//2\nif (k<=a) :\n\tprint(k*2-1)\nelse :\n\tprint((k-a)*2)\n", "n, k = map(int, input().split())\nif k <= (n + 1) // 2:\n    print(k + k - 1)\nelse:\n    k -= (n + 1) // 2\n    print(k + k)", "n, k = list(map(int, input().split()))\nl = (n + 1) >> 1\nprint(k + k - 1 if k <= l else (k - l) << 1)\n", "import sys\nfrom math import ceil\nmy_file = sys.stdin\n#my_file = open(\"input.txt\", \"r\")\nline = my_file.readline().split()\nn, k = int(line[0]), int(line[1])\n\nif n%2 == 0:\n    if k <= n/2:\n        print(k*2-1)\n    else:\n        print(int((k-n/2)*2))\nelse:\n    if k <= ceil(n/2):\n        print(k*2-1)\n    else:\n        print(int((k-ceil(n/2))*2))", "n, k = map(int, input().split())\nif k > (n + 1) // 2: print(2 * (k - (n + 1) // 2))\nelse: print(2 * k - 1)"]