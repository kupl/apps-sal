["n = int(input())\na = sorted(list(map(int, input().split())))\n\nans = 0\nif n == 1:\n    ans = a[0]\nelse:\n    mult = 2\n    for i in range(n - 1):\n        ans += mult * a[i]\n        mult += 1\n    ans += (mult - 1) * a[-1]\nprint(ans)\n\n", "n = int(input())\na = sorted(list(map(int, input().split())))\nans = sum(a)\nfor i in range(n):\n    ans += a[i] * (i + 1)\nprint(ans - a[n - 1])\n", "n=int(input())\ndata=list(map(int,input().split()))\ndata.sort()\nans=0\nfor (i,x) in enumerate(data,2):\n    ans+= x*i\nans-=data[-1]\nprint(ans)\n", "def main():\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    \n    a.sort()\n    \n    if len(a) == 1:\n        print(a[0])\n    else:\n        a[-2] += a[-1]; a.pop()\n        result = 0\n        for i in range(n - 1):\n            result += a[i] * (i + 2)\n        print(result)\n\n\nmain()\n", "n = int(input())\na = [int(x) for x in input().split()]\na.sort()\n\nprint(sum([(i+1)*a[i] for i in range(n)])+sum(a[:-1]))\n", "n = int(input())\nx = list(map(int, input().split()))\nx.sort()\nres = 0\nfor s,i in enumerate(x, 2):\n    res += min(n, s) * i\nprint(res)\n", "n = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\ns = sum(a)\n\nres = s\n\nwhile len(a) > 1:\n    res += s\n    s -= a.pop()\n\nprint(res)\n", "inp = input()\nn = int(inp)\nline=input()\nmyarray = line.split(' ')\nmyarray = list(map(int,myarray))\nmyarray=sorted(myarray)\nscore=0\nif(n==1):\n    print((int(myarray[0])));\nelif(n==2):\n    print(2*(int(myarray[1])+int(myarray[0])))\nelse:\n    minimum=0;\n    for x in range(len(myarray)):\n        score = score+ (x+2)*(int(myarray[x]))\n    score = score-int(int(myarray[n-1]))\n    print(score)\n", "Inpt=int(input())\nMainlist=sorted(list(map(int,input().split(' '))))\nScore=0\nif Inpt==1:\n    print(int(Mainlist[0]))\nelif Inpt==2:\n    print(2*(int(Mainlist[1])+int(Mainlist[0])))\nelse:\n    for i in range(len(Mainlist)):\n        Score+=(i+2)*(int(Mainlist[i]))\n    Score-=int(Mainlist[Inpt-1])\n    print(Score)\n", "import sys, os\n\ndef myreadline():\n\n    #testFile = \"461A-t\"\n    testFile = \"\"\n\n    if testFile:\n        if not hasattr(myreadline, \"fTest\"):\n            myreadline.fTest = open(os.path.join(os.path.dirname(__file__), testFile))\n        return myreadline.fTest.readline()\n    else:\n        return input()\n\ndef myreadlineint():\n    return [int(x) for x in myreadline().split()]\n\nn, = myreadlineint()\nl = myreadlineint()\nl.sort()\n\nsm = sum(l)\n#print(sm)\nres = 0\nres += sm*2\nfor x in l:\n    sm -= x\n    #print(sm)\n    res += sm\nres -= l[len(l)-1]\n\nprint(res)\n\n\n\n\n\n\n\n\n\n\n", "input()\nt = list(map(int, input().split()))\nt.sort()\nprint(sum(i * x for i, x in enumerate(t, 2)) - t[-1])", "from sys import stdin\n\nfrom heapq import heappush, heappop\ndef main():\n    inp=stdin\n    numero=inp.readline()\n    while (numero !=\"\" ):\n        numero=int(numero.strip())\n        juego= inp.readline().strip().split()      \n        print(solucion(juego))\n        numero=inp.readline()\n        \ndef solucion(Arreglo):\n    juego=[]\n    for i in range(len(Arreglo)):\n        heappush(juego,int(Arreglo[i]))\n    total=sum(juego)\n    contador=0\n    while (juego):\n        contador+=total\n        ultimo=heappop(juego)\n        contador+=ultimo\n        total-=ultimo\n    contador-=ultimo\n    return contador\n\nmain()", "input()\na = list(map(int,input().split()))\na.sort()\ns = 0\nfor i in enumerate(a, 2):\n    s += i[0] * i[1]\nprint(s - a[-1])", "def sum_l(lst):\n    temp = 0\n    for i in lst:\n        temp += i\n    return temp\n\nl1 = input()\nl1 = int(l1)\na = input()\nl2 = [int(x) for x in a.split()]\nl2.sort()\nans = 0\nif len(l2) == 1:\n    ans += l2[0]\nelse:\n    n = 0\n    for i in l2:\n        ans += i * (n + 2)\n        n += 1\n    ans -= l2[-1]\n\n#ans = sum_l(l2)\n#for i in range(l1-1):\n#    ans += sum_l(l2)\n#    l2.pop(0)\n    \nprint (ans)\n    \n\n\n", "n=int(input())\ns=input()\nx=list()\nx=s.split()\ny=sorted(x,key=int)\nans=0\nfor i in range(n):\n\tans+=int(y[i])*(i+2)\n\nans-=int(y[n-1])\nprint(ans)\n", "n = int(input())\narr = list(map(int, input().split()))\nans, cursum = 0, 0\narr.sort()\n\nfor i in range(n):\n\tcursum += arr[i]\n\nfor i in range(n):\n\tans += cursum\n\tif i < n - 1:\n\t\tans += arr[i]\n\tcursum -= arr[i]\n\nprint(ans)", "import sys\nimport math\n\nn = int(sys.stdin.readline())\n\nin_str = [int(x) for x in (sys.stdin.readline()).split()]\n\nin_str.sort(reverse=True)\n\nresult = int(math.fsum(in_str))\nk = result\n\nmv = len(in_str) - 1\n\nwhile(mv > 0):\n    result += in_str[mv]\n    k = int(k - in_str[mv])\n    result += k\n    mv -= 1\n    \nprint (result)", "#!/usr/bin/env python\n# encoding: utf-8\n\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n - 1):\n    ans = ans + (i + 2) * a[i]\nans = ans + n * a[n - 1]\nprint(ans)\n", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\n\n\n\nsum=0\nif n!=1:\n    for i in range(2,n+1):\n        sum+=i*l[i-2]\n    sum+=n*l[n-1]\n    print(sum)\nelse: print(l[0])", "import math\n\nn=int(input())\ndata=list(map(int,input().split()))\n\nsum=0\nfor i in range(n):\n    sum+=data[i]\n\nans=sum\ndata.sort()\n\nfor i in range(n-1):\n    #print(ans)\n   # print(data[i:])\n    ans+=sum\n    sum-=data[i]\n\nprint(ans)", "n=int(input())\nar=list(map(int,input().split()))\nar.sort()\ns=0\nsu=sum(ar)\nfor x in range(n):\n    s+=ar[x]\n    s+=su\n    su-=ar[x]\nprint(s-ar[n-1])\n", "input()\nq = [int(x) for x in input().split()]\nq.sort()\n\ns = delta = sum(q)\nfor item in q:\n    s += delta\n    delta -= item\nprint(s - q[-1])\n", "n=int(input())\nlis=input().split()\nfor i in range(n):\n    lis[i]=int(lis[i])\nlis.sort()\nm=max(lis)\ns=0\nfor i in range(len(lis)):\n   s+=lis[i]*(i+2) \nprint(s-m)\n", "from sys import stdin\n\n\ndef main():\n    stdin.readline()\n    l = sorted(list(map(int, stdin.readline().strip().split())))\n    tot = delta = sum(l)\n    for x in l:\n        tot += delta\n        delta -= x\n    return tot - x\n\n\nprint(main())\n"]