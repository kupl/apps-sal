#!/usr/bin/env python3
import sys

def solve(N: int, A: "List[int]"):
    ans, t, s = 0, 0, 0
    for h in range(N):
        while t < N and s ^ A[t] == s + A[t]:
            s += A[t]
            t += 1
        ans += t - h
        s -= A[h]
    return ans

# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    print((solve(N, A)))

def test():
    import doctest
    doctest.testmod()

def __starting_point():
    #test()
    main()

__starting_point()
