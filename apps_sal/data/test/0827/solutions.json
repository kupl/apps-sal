["n = int(input())\nt = input()\nif n == 1:\n    if t == \"0\":\n        print((10 ** 10))\n    else:\n        print((2 * 10 ** 10))\nelif n == 2:\n    if t == \"00\":\n        print((0))\n    elif t == \"01\":\n        print((10 ** 10 - 1))\n    elif t == \"10\":\n        print((10 ** 10))\n    else:  # 11\n        print((10 ** 10))\nelse:\n    repeat_num = (n + 6) // 3\n    ref = \"110\" * repeat_num\n    num_in_ref = 0\n    flag_over = 0  #\n    if ref[:n] == t:\n        num_in_ref += 1\n        if n % 3 == 0:\n            flag_over = 1\n    elif ref[1 : n + 1] == t:\n        num_in_ref += 1\n    elif ref[2 : n + 2] == t:\n        num_in_ref += 1\n        if n % 3 == 2:\n            flag_over = -1\n    # print(ref[: n + 1], t)\n    print((num_in_ref * (10 ** 10 - repeat_num + 2) + flag_over))\n\n", "n = int(input())\n\nt = input()\n\nif t == \"1\":\n    print((10 ** 10 * 2))\nelif t == \"11\":\n    print((10 ** 10))\nelse:\n    if \"00\" in t or \"111\" in t or \"010\" in t:\n        print((0))\n    else:\n        a = t.count(\"0\")\n        if t[-1] == \"1\":\n            print((10 ** 10 - a))\n        else:\n            print((10 ** 10 - a + 1))\n", "#https://qiita.com/goto_yuta_/items/1c104e332351ab9389a6\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\nimport sys\nsys.setrecursionlimit(10 ** 6)#pypy3\u306fnumpy\u3092\u4f7f\u3048\u306a\u3044\uff0c\u3053\u306e\u884c\u3092\u6d88\u3059\u3053\u3068\uff0e\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef II(): return int(sys.stdin.readline())\n# \u5165\u529b\u5168\u3066\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LI(): return list(map(int, sys.stdin.readline().split()))\n# \u5165\u529b\u306e\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LC(): return list(input())\n# \u5165\u529b\u306e\u6570\u5b57\u5217\u30921\u6841\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef IC():return [int(c) for c in input()]\n#\u5c11\u306a\u30441\u884c\u306eint\u5909\u6570\u306b\u5165\u308c\u308b\u69d8\u306e\u5165\u529b\uff0e\u4f8b:N, A, B = map(int, input().split())\ndef MI(): return map(int, input().split())\ndef solve():\n    N = II()\n    T = input()\n    if(N==1):\n        if(T=='0'):\n            print(10000000000)\n            return\n        elif(T=='1'):\n            print(20000000000)\n            return\n    elif(N==2):\n        if(T=='11' or T =='10'):\n            print(10000000000)\n            return\n        elif(T=='01'):\n            print(9999999999)\n            return\n        else:\n            print(0)\n            return\n    else:\n        First = T[:3]\n        if(First != \"110\" and First != \"101\" and First != \"011\"):\n            print(0)\n            return\n        for i in range(3,N-2,3):#\u9014\u4e2d\u307e\u3067\u306e\u78ba\u8a8d\n            if(First != T[i:i+3]):\n                print(0)\n                return\n        #\u672b\u5c3e\u306e\u51e6\u7406\n        if(N%3 == 1):\n            if(First[0] != T[-1]):#\u6700\u521d\u306e1\u6587\u5b57\u3068\u672b\u5c3e\u306e1\u6587\u5b57\u306e\u4e00\u81f4\n                print(0)\n                return\n        elif(N%3 == 2):\n            if(First[0:2] != T[-2:]):#\u6700\u521d\u306e2\u6587\u5b57\u3068\u672b\u5c3e\u306e2\u6587\u5b57\u306e\u4e00\u81f4\n                print(0)\n                return\n        from math import ceil, floor\n        if(First == \"110\"):\n            print(10000000000-floor((N-1)/3))\n            return\n        elif(First == \"101\" or First == \"011\"):\n            print(9999999999 - floor((N-2) / 3))\n            return\n    return\nsolve()", "import math\n\nn = int(input())\nt = str(input())\n\nlen_t = len(t)\n\nlen_s = math.ceil(len_t/3)\n\nif t == '1':\n    print(((10**10)*2))\n    return\n\ns = ''\n\nfor i in range(len_s):\n    s+='110'\n\nif t not in s:\n    len_s+=1\n    s+='110'\n\nif t in s:\n    s.find('110')\n    print((10**10 - len_s + 1))\nelse:\n    print((0))\n", "N=int(input())\nT=list(map(int,list(input())))\n\nif N==1:\n  if T==[1]:\n    print(2*10**10)\n  else:\n    print(10**10)\n  return\nelif N==2:\n  if T==[1,0] or T==[1,1]:\n    print(10**10)\n  elif T==[0,1]:\n  \tprint(10**10-1)\n  else:\n    print(0)\n  return\n\n\n\nfor i in range(N):\n  if i==0:\n    if T[i]==0:\n      if T[i+1]==0:\n        print(0)\n        return\n      else:\n        T[i]=3\n    else:\n      if T[i+1]==0:\n        T[i]=2\n      else:\n        T[i]=1\n  else:\n    if T[i]==0:\n      if T[i-1]==3:\n        print(0)\n        return\n      elif T[i-1]==2:\n        T[i]=3\n      else:\n        print(0)\n        return\n    else:\n      if T[i-1]==3:\n        T[i]=1\n      elif T[i-1]==2:\n        print(0)\n        return\n      else:\n        T[i]=2\n\nA=N-T.index(1)-list(reversed(T)).index(3)\nA=A//3\nif T[0]==1 and T[-1]==3:\n  print(10**10-A+1)\nelif T[0]==1 or T[-1]==3:\n  print(10**10-A)\nelse:\n  print(10**10-A-1)", "def main():\n    num = 10**10\n    startnum = 0\n    iio = \"110\"\n    N = int(input())\n    T = input()\n    if T == \"1\": return print(num*2)\n    if T == \"0\": return print(num)\n    if T == \"11\" : return print(num)\n    if T[0] == \"1\" and T[1] == \"1\" and T[2] == \"0\":\n        startnum = 0\n    if T[0] == \"1\" and T[1] == \"0\":\n        startnum = 1\n    if T[0] == \"0\":\n        startnum = 2\n    for i in range(N):\n        if T[i] != iio[(i+startnum)%3]:\n            return print(0)\n    if (N - (3-startnum))%3 == 0:\n        return print(num - (N-(3-startnum))//3)\n    else:\n        return print(num - (N-(3-startnum))//3 - 1)\n    \ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nt = input()\ns = '110'\n\nif t =='0':\n    print((10**10))\n    return\nelif t=='1':\n    print((2*10**10))\n    return\n\nres = 0\nfor i in range(3):\n    a = (n+i+2)//3\n    add = 10**10-a+1\n    ok = True\n    for j in range(n):\n        if t[j] != s[(i+j)%3]:\n            ok = False\n    if ok:\n        res += add\nprint(res)\n", "N = int(input())\nT = input()\n\nS = \"110\" * N\n\nans = 0\nfor i in range(3):\n    if S[i:i + N] == T:\n        ans += 10 ** 10 + (-(i + N) // 3) + 1\n\nprint(ans)", "import sys\n\n\ndef input(): return sys.stdin.readline().strip()\ndef I(): return int(input())\ndef LI(): return list(map(int, input().split()))\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef S(): return input()\ndef LS(): return input().split()\n\n\nINF = float('inf')\n\n# 50\nn = I()\nt = S()\nif n == 1:\n    if t == '0':\n        print((10 ** 10))\n    else:\n        print((2 * 10**10))\nelif '00' in t or '010' in t or '111' in t:\n    print((0))\nelse:\n    start = t[:2]\n    if start == '11':\n        if n % 3 == 0:\n            print((10**10 - n//3 + 1))\n        else:\n            print((10**10 - n//3))\n    elif start == '10':\n        print((10**10 - n//3))\n    else:\n        if n % 3 == 2:\n            print((10**10 - n//3 - 1))\n        else:\n            print((10**10 - n//3))\n", "n=int(input())\nT=input()\n\nb=10**10\nD={'0':b,'1':b*2,'11':b,'10':b,'01':b-1,'00':0}\nif n<3:\n  print((D[T]))\n  return\n\nP=[\"110\",\"101\",\"011\"]\nh,t=-1,-1\nfor i in range(3):\n  if T[:3]==P[i]:\n    h=3-i\n  if T[-3:]==P[i]:\n    t=i\n\na=0\nif t!=-1 and h!=-1 and (n-h-t)%3==0:\n  for i in range((n-h-t)//3):\n    if T[h+3*i:h+3*-~i]!=P[0]:\n      break\n  else:\n    a=10**10+1-(1 if t else 0)-(1 if h else 0)-(n-h-t)//3\n\nprint(a)\n", "n = int(input())\nt = input()\n\nans = 10**10\nif t == '0': print(ans); return\nif t == '1': print((ans*2)); return\nif t == '11': print(ans); return\nif t == '10': print(ans); return\nif t == '01': print((ans-1)); return\nif t == '00': print((0)); return\n\nl = 0; r = n # M=[l,r)\nif t[:3] == '110': l = 3\nelif t[:3] == '101': l = 2\nelif t[:3] == '011': l = 1\nelse: print((0)); return\n\nif t[n-3:] == '110': r = n\nelif t[n-3:] == '101': r = n-1\nelif t[n-3:] == '011': r = n-2\nelse: print((0)); return\n\nL = t[:l]; M = t[l:r]; R = t[r:]\n\nif len(M)%3: print((0)); return\nfor i in range(len(M)//3):\n    if M[i*3 : i*3+3] != '110': print((0)); return\n\nS = '110110'; LR = L + R\nans -= 2 + len(M)//3\nfor l in range(6):\n    if S[l:l+len(LR)] == LR: ans += 1\nprint(ans)\n", "\nn = int(input())\nt = input()\nans = 0\n\ns = \"110\" * 10 ** 6\n\nif s[0:n] == t:\n    ans += 10**10 - (n - 1) // 3\n\nif s[1:n+1] == t:\n    ans += 10**10 - n // 3\n\nif s[2:n+2] == t:\n    ans += 10**10 - (n+1) // 3\n\nprint(ans)\n", "n=int(input())\nt=input()\nif t=='1':\n  print(20000000000)\nelif n%3==0:\n  if t=='110'*(n//3):\n    print(10000000000-n//3+1)\n  elif t=='101'*(n//3) or t=='011'*(n//3):\n    print(10000000000-n//3)\n  else:\n    print(0)\nelif n%3==1:\n  if t+'10'=='110'*(n//3+1) or '1'+t+'0'=='110'*(n//3+1) or '11'+t=='110'*(n//3+1):\n    print(10000000000-n//3)\n  else:\n    print(0)\nelse:\n  if t+'0'=='110'*(n//3+1) or '1'+t=='110'*(n//3+1):\n    print(10000000000-n//3)\n  elif '11'+t+'10'=='110'*(n//3+2):\n    print(10000000000-n//3-1)\n  else:\n    print(0)", "N = int(input())\nT = input()\nif T == '1':\n    print((2*(10**10)))\nelif T == '11':\n    print((10**10))\nelse:\n    s = '110'\n    for i in range(N//3+2):\n        if T in s:\n            print((10**10-i))\n            return\n        else:\n            s += '110'\n    print((0))\n", "def do():\n    n = int(input())\n    s = input()\n    if s == \"1\":\n        print((2 * 10**10))\n        return\n    if s == \"0\":\n        print((1 * 10 ** 10))\n        return\n    if s == \"10\":\n        print((1 * 10 ** 10))\n        return\n\n    def do(offset):\n        can = True\n        x = 0\n        if offset == 1 or offset == 2:\n            x += 1\n        for i in range(n):\n            offset %= 3\n            if offset == 0 or offset == 1:\n                if s[i] == \"1\":\n                    offset += 1\n                    continue\n                else:\n                    can = False\n            if offset == 2:\n                if s[i] == \"0\":\n                    offset += 1\n                    if i > 1 and s[i-2] == s[i-1] == \"1\":\n                        x += 1\n                    continue\n                else:\n                    can = False\n        if offset == 1 or offset == 2:\n            x += 1\n        return can, x\n\n    for i in range(3):\n        can, x = do(i)\n        if can:\n            #print(\"offset\", i, x)\n            print((10**10 - x + 1))\n            return\n    print((0))\n\n\n\ndo()\n", "# B - Many 110\nN = int(input())\nT = input()\nans = 10 ** 10\n\nif T == '1':\n  print((ans * 2))\nelif T == '0' or T == '11' or T == '110':\n  print(ans)\nelse:\n  if T.startswith('10'):\n    T = T[2:]\n    ans -= 1\n  elif T.startswith('0'):\n    T = T[1:]\n    ans -= 1\n    \n  if T.endswith('11'):\n    T = T[:len(T)-2]\n    ans -= 1\n  elif T.endswith('1'):\n    T = T[:len(T)-1]\n    ans -= 1\n\n  if len(T) % 3 == 0:\n    for i in range(0, len(T), 3):\n      if T[i:i+3] == '110':\n        ans -= 1\n      else:\n        print((0))\n        return\n    \n    print((ans+1))\n  else:\n    print((0))\n", "n=int(input())\nt=input()\ns=\"110\"*(10**5)\nc=0\nfor i in range(3):\n    if s[i:i+n]==t:\n        c+=10**10-(n+i-1)//3\nprint(c)", "import sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for k in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10**9)\nINF = 10**19\nMOD = 10**9 + 7\nEPS = 10**-10\n\nN = INT()\nT = input()\n\nK = 10**10\nmod = 3\nS = '110'\n\nif T == '1':\n    print((K*2))\n    return\nif T == '11' or T == '10' or T == '0':\n    print(K)\n    return\n\ndef check(m):\n    for i in range(N):\n        if T[i] != S[(i+m)%mod]:\n            return False\n    return True\n\nfor m in range(mod):\n    if check(m):\n        N -= 3-m\n        ans = K - ceil(N, 3)\n        print(ans)\n        break\nelse:\n    print((0))\n", "N = int(input())\nT = input()\nS = \"110\"*(10**5)\nans = 0\n\nfor n in range(3):\n  if S[n:n+N]==T:\n    ans+=10**10-(N+n-1)//3\n\nprint(ans)", "N=int(input())\nS=input()\nfrom collections import Counter\nn = (Counter(S))['0']\nif S in \"110\"*(n*3+3):\n  if S == '1':\n    print((2*(10**10)))\n  else:\n    ans = 10**10 - n\n    if S[-1] == '0':\n      ans += 1\n    print(ans)\nelse:\n  print((0))\n", "N = int(input())\nT = str(input())\n\nmozi = \"110\" * (N//3+2)\n\na = mozi.find(T)\n\nif a == -1:\n    print(0)\nelif T == \"1\":\n    print(10**10*2)\nelse:\n    print(10**10-int((a+N-1)/3))", "N = int(input())\nS = '110'*N\nT = input()\nans = 0\nfor i in range(3):\n  if S[i:i+N]==T:\n    ans = pow(10,10)-(i+N-1)//3-i//3\n    break\nif T=='1':\n  ans = 2*pow(10,10)\nprint(ans)", "N = int(input())\nT = input()\nS = \"110\" * (N + 2)\n \nif T == \"1\":\n    print((10 ** 10) * 2)\nelif T == \"00\":\n    print(0)\nelif N == 2:\n    print(10 ** 10 if T != \"01\" else (10 ** 10) - 1)\nelif T in S:\n    if S.startswith(T):\n        print(10 ** 10 - (N + 2) // 3 + 1)\n    elif S[1:].startswith(T):\n        print(10 ** 10 - (N + 3) // 3 + 1)\n    else:\n        print(10 ** 10 - (N + 4) // 3 + 1)\nelse:\n    print(0)", "def main():\n    N = int(input())\n    T = input()\n    if T == \"1\":\n        print((10**10*2))\n        return\n    elif T == \"0\" or T == \"11\":\n        print((10**10))\n        return\n    elif \"0\" not in T:\n        print((0))\n        return\n    T = \"1\" * (2 - T.index(\"0\")) + T\n    for i in range(len(T)):\n        if T[i] != (\"0\" if i % 3 == 2 else \"1\"):\n            print((0))\n            return\n    ans = 10**10 - (len(T) - 1) // 3\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nsys.setrecursionlimit(700000)\n\ndef s_in():\n    return input()\n\ndef n_in():\n    return int(input())\n\ndef l_in():\n    return list(map(int, input().split()))\n\nn=n_in()\ns=s_in()\n\nN=3*(10**10)\nt = '110'*2*n\n\nres = 0\n\nif s == \"0\":\n    print((10**10))\n    return\n\nif s == \"1\":\n    print((2*10**10))\n    return\n\nif s == \"10\":\n    print((10**10))\n    return\n\nif s == \"11\":\n    print((10**10))\n    return\n\nif s == \"00\":\n    print((0))\n    return\n\nif s == \"01\":\n    print((10**10-1))\n    return\n    \n\n\nif s == t[:n]:\n    res += (N-n)//3+1\nif s == t[1:n+1]:\n    res += (N-n-1)//3+1\nif s == t[2:n+2]:\n    res += (N-n-2)//3+1\n\nprint(res)\n\n    \n    \n    \n", "\"\"\"\nprefix: \"0\", \"10\"\nsufix:  \"1\", \"11\"\n\"\"\"\ndef main():\n    ans = 10**10 + 1\n    N = int(input())\n    T = input()\n\n    if T == '1':\n        print((2*10**10))\n        return\n\n    if T and T[0] == \"0\":\n        T = T[1:]\n        ans -= 1\n    elif 2 <= len(T) and T[0:2] == '10':\n        T = T[2:]\n        ans -= 1\n    \n    if 2 <= len(T) and T[-2:] == '11':\n        T = T[:-2]\n        ans -= 1\n    elif T and T[-1] == \"1\":\n        T = T[:-1]\n        ans -= 1\n\n    for i in range(0,len(T),3):\n        if not T[i:i+3] == '110':\n            print((0))\n            return\n    print((ans - len(T)//3))\n        \nmain()\n    \n\n", "import sys\ninput=sys.stdin.readline\n#print=sys.stdout.write\n#sys.setrecursionlimit(100000)\n#from heapq import *\n#from collections import deque as dq\n#from math import ceil,floor,sqrt,gcd,log\n#import bisect as bs\n#from collections import Counter\n#from collections import defaultdict as dc \n#from functools import reduce\n#from functools import lru_cache\nri=lambda:int(input())\nrl=lambda:list(map(int,input().split()))\nrs=lambda:input().strip(\"\\r\\n\")\nfor _ in range(1):\n    n=ri()\n    t=rs()\n    copies=1e10\n    ans=0\n    s='110'*(n)\n    for i in range(3):\n        if t!=s[i:i+n]:continue\n        ans+=copies-(i+n-1)//3\n    print(int(ans))", "n = int(input())\nt = input()\ns = \"110\" * (10 ** 5)\nans = 0\nfor i in range(3):\n  if s[i:i + n] == t:\n    ans += 10 ** 10 - (n + i - 1) // 3\nprint(ans)", "N=int(input())\nT=input()\nS=T.replace(\"110\",\"\")\nM=(len(T)-len(S))//3\nINF=10**10\nif N==1:\n    if T==\"1\":\n        print((2*INF))\n    else:\n        print(INF)\n    return\nif N==2:\n    if T==\"11\":\n        print(INF)\n    elif T==\"00\":\n        print((0))\n    elif T==\"10\":\n        print(INF)\n    else:\n        print((INF-1))\n    return\n\nsuffix=[\"\",\"0\",\"10\",\"110\"]\nprefix=[\"110\",\"11\",\"1\",\"\"]\nfor x in suffix:\n    for y in prefix:\n        if T==(x+\"110\"*M+y):\n            if x==\"\" and y==\"\":\n                print((INF-M+1))\n            elif x!=\"\" and y==\"\":\n                print((INF-M))\n            elif x==\"\" and y!=\"\":\n                print((INF-M))\n            else:\n                print((INF-M-1))\n            return\nprint((0))\n", "N = int(input())\nT = input()\n\nif N > 2:\n    for i in range(N-2):\n        if int(T[i]) + int(T[i+1]) + int(T[i+2]) != 2:\n            print((0))\n            return\nelif T == '00':\n    print((0))\n    return\n\nif T == '1':\n    ans = 2*10**10\nelif T == '11':\n    ans = 10**10\nelse:\n    cnt = T.count('0')\n    if T[-1] == '0':\n        ans = 10**10 - (cnt - 1)\n    else:\n        ans = 10**10 - cnt\nprint(ans)\n", "n = int(input())\nt = input()\n\ns = \"110\" * 100000\nsz = (10**10) * 3\n\n# print(len(s))\n\nst = -1\ned = -1\nfor i in range(3):\n    if s[i:i+len(t)] == t:\n        st = i\n        ed = i + len(t) - 1\n        break\n\n# print(\"st = \", st)\nif t == '1':\n    print(2 * (10 ** 10))\nelif t == '0':\n    print(10 ** 10)\nelif st == -1:\n    print(0)\nelse:\n    a = st+1\n    d = 3\n    l = 1\n    r = 10**11\n    m = -1\n    ans = 0\n    while l <= r:\n        m = (l+r)//2\n        st = a + (m-1)*d\n        # print(m, st, st+len(t)-1)\n        if st + len(t)-1 > sz:\n            r = m-1\n        else:\n            ans = m\n            l = m+1\n    print(ans)", "N = int(input())\nT = input()\n\nNUM = 10 ** 10\nS = '110' * 2 * 10 ** 5\n\nif '111' in T or '00' in T or '010' in T:\n    print(0)\nelif T == '1':\n    print(NUM * 2)\nelif T == '11':\n    print(NUM)\nelse:\n    zero_cnt = T.count('0')\n    # print(zero_cnt)\n    if T[-1] == '0':\n        print(NUM - zero_cnt + 1)\n    else:\n        print(NUM - zero_cnt)", "n = int(input())\nt = input()\nt = str(t)\nt = list(t)\nt.append(\"#\")\nif t[0] == \"0\":\n  for i in range(0,n,3):\n    if t[i] != \"0\":\n      if t[i] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    if t[i+1] != \"1\":\n      if t[i+1] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    if t[i+2] != \"1\":\n      if t[i+2] == \"#\":\n        break\n      else:\n        print((0))\n        return\nif t[0] == \"1\" and t[1] == \"1\":\n  for i in range(0,n,3):\n    if t[i] != \"1\":\n      if t[i] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    elif t[i+1] != \"1\":\n      if t[i+1] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    if t[i+2] != \"0\":\n      if t[i+2] == \"#\":\n        break\n      else:\n        print((0))\n        return\nif t[0] == \"1\" and t[1] == \"0\":\n  for i in range(0,n,3):\n    if t[i] != \"1\":\n      if t[i] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    if t[i+1] != \"0\":\n      if t[i+1] == \"#\":\n        break\n      else:\n        print((0))\n        return\n    if t[i+2] != \"1\":\n      if t[i+2] == \"#\":\n        break\n      else:\n        print((0))\n        return\nif n  == 1:\n  if t[0] == \"1\":\n    print((2*(10**10)))\n    return\n  else:\n    print((10**10))\n    return\nif n ==2:\n  if t[0] == \"0\" and t[1] == \"1\":\n    print((10**10-1))\n    return\n  else:\n    print((10**10))\n    return\nif n%3 == 0:\n  if t[n-1] == \"0\" :\n    p = n//3\n    print((10**10-p+1))\n  else:\n    p = n//3\n    print((10**10-p))\nelif n%3 == 2:\n  if t[0] == \"0\" and t[n-1] ==\"1\":\n    p = ((n-2)//3)+2\n    print((10**10-p+1))\n  else:\n    p = n//3\n    print((10**10-p))\nelse:\n  p = n//3\n  print((10**10-p))\n\n\n", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[1]:\n\n\nN = int(input())\nT = input()\n\n\n# In[2]:\n\n\nl=10**10\ns='110'*((10**5)+1)\nans=0\nif T=='1':\n  ans=l*2\nelse:\n  for i in range(3):\n    if s[i:N+i]==T:\n      ans = l - ((i+N-1)//3)\n      break\nprint(ans)\n\n\n# In[ ]:\n\n\n\n\n", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    n = int(input())\n    t = list(input())\n\n    if n < 3:\n        if n == 1 and t[0] == \"0\":\n            print((10 ** 10))\n            return\n        elif n == 1 and t[0] == \"1\":\n            print((2 * 10 ** 10))\n            return\n        elif n == 2 and t[0] == \"1\":\n            print((10 ** 10))\n            return\n\n    count = 0\n    left = 0\n    right = n\n\n    if t[0] == \"0\":\n        left += 1\n        count += 1\n    elif t[0] == \"1\" and t[1] == \"0\":\n        left += 2\n        count += 1\n\n    if t[-2] == \"1\" and t[-1] == \"1\":\n        right -= 2\n        count += 1\n    elif t[-2] == \"0\" and t[-1] == \"1\":\n        right -= 1\n        count += 1\n\n    diff = right - left\n\n    if diff % 3 != 0:\n        print((0))\n        return\n\n    for i in range(diff // 3):\n        j = 3 * i + left\n\n        if t[j] == \"1\" and t[j + 1] == \"1\" and t[j + 2] == \"0\":\n            count += 1\n        else:\n            print((0))\n            return\n\n    print((10 ** 10 - count + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nT = input()\n\nmax_num = len(T)//3 + 2\nif max_num >= 10**10:\n    max_num = 10**10\ncheck = '110' * max_num\nif T not in check:\n    print((0))\n    return\nelif N == 1 and T[0] == '1':\n    print((2*10**10))\n    return\nelse:\n    cnt = 0\n    for i in range(len(T)):\n        if T[i] == '0':\n            cnt += 1\n    if T[-1] != '0':\n        cnt += 1\nans = 10**10 - cnt + 1\nprint(ans)\n", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    n = int(input())\n    t = list(input())\n\n    if n < 3:\n        if n == 1 and t[0] == \"0\":\n            print((10 ** 10))\n            return\n        elif n == 1 and t[0] == \"1\":\n            print((2 * 10 ** 10))\n            return\n        elif n == 2 and t[0] == \"1\":\n            print((10 ** 10))\n            return\n        elif n == 2 and t[0] == \"0\" and t[1] == \"1\":\n            print((10 ** 10 - 1))\n            return\n\n    count = 0\n    left = 0\n    right = n\n\n    if t[0] == \"0\":\n        left += 1\n        count += 1\n    elif t[0] == \"1\" and t[1] == \"0\":\n        left += 2\n        count += 1\n\n    if t[-2] == \"1\" and t[-1] == \"1\":\n        right -= 2\n        count += 1\n    elif t[-2] == \"0\" and t[-1] == \"1\":\n        right -= 1\n        count += 1\n\n    diff = right - left\n\n    if diff % 3 != 0:\n        print((0))\n        return\n\n    for i in range(diff // 3):\n        j = 3 * i + left\n\n        if t[j] == \"1\" and t[j + 1] == \"1\" and t[j + 2] == \"0\":\n            count += 1\n        else:\n            print((0))\n            return\n\n    print((10 ** 10 - count + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nS = input()\n\nif N == 1:\n    if S == '0':\n        print(10**10)\n    else:\n        print(2 * 10**10)\n\nelse:\n    if S[:2] == '11':\n        for i in range(N):\n            if i % 3 == 2 and S[i] == '1':\n                print(0)\n                break\n            if i % 3 != 2 and S[i] == '0':\n                print(0)\n                break\n        else:\n            print((3 * 10**10 - N) // 3 + 1)\n            \n    elif S[:2] == '10':\n        for i in range(N):\n            if i % 3 == 1 and S[i] == '1':\n                print(0)\n                break\n            if i % 3 != 1 and S[i] == '0':\n                print(0)\n                break\n        else:\n            print((3 * 10**10 - N - 1) // 3 + 1)\n            \n    elif S[:2] == '01':\n        for i in range(N):\n            if i % 3 == 0 and S[i] == '1':\n                print(0)\n                break\n            if i % 3 != 0 and S[i] == '0':\n                print(0)\n                break\n        else:\n            print((3 * 10**10 - N - 2) // 3 + 1)\n            \n    else:\n        print(0)", "N = int(input())\nT = str(input())\n\nmozi = \"110\" * (N//3+2)\ncount = 0\n\nfor i in range(3):\n    if mozi[i:i+len(T)] == T:\n        count += 1\nif count == 0:\n    result = 0\nelif T == \"1\":\n    result = 10 ** 10\n    result *= 2\nelif T == \"11\":\n    result = 10**10\nelse:\n    K = 0\n    for t in T:\n        if t == \"0\":\n            K += 1\n    if T[-1] == \"0\":\n        result = 10**10-K+1\n    else:\n        result = 10**10-K\n\nprint(result)", "n = int(input())\nt = input()\nans = 0\n\ns = \"110\" * 10**6\n\n\nif s[0:n] == t:\n    ans += 10**10 - (n-1)//3\n    # if n%3 == 0:\n    #     ans += 1\n\nif s[1:n+1] == t:\n    ans += 10**10 - n//3\n    # if n%3 == 0:\n    #     ans += 1\n    \nif s[2:n+2] == t:\n    ans += 10**10 - (n+1)//3\n    # if n%3 == 0:\n    #     ans += 1\n\nprint(ans)", "#template\ndef inputlist(): return [int(j) for j in input().split()]\n#template\nN = int(input())\nT = input()\n\nif N ==1:\n    if T == '1':\n        print((2*(10**10)))\n    else:\n        print((10**10))\n    return\n\nif N == 2:\n    if T == '11':\n        print((10**10))\n        return\n    if T == '10':\n        print((10**10))\n        return\n    if T == '01':\n        print((10**10-1))\n        return\n    print((0))\n    return\n\nfrom collections import deque\nque = deque()\n\nfor i in range(N):\n    if (i+1) % 3 == 0:\n        que.append('0')\n    else:\n        que.append('1')\n\n\n\ncount = 0\nans = -1\nwhile count < 3:\n    flag = 0\n    if count == 0:\n        li = list(que)\n        t = ''.join(li)\n        if T == t:\n            flag = 1\n        count +=1\n    else:\n        que.popleft()\n        if (N+count) % 3 != 0:\n            que.append('1')\n        else:\n            que.append('0')\n        t = ''.join(list(que))\n        if T == t:\n            flag = 1\n        count +=1\n    if flag == 1:\n        ans = len(que) + count - 1\n        break\n\nif ans == -1:\n    print((0))\n    return\n\nn = (3*(10**10) - ans + 3)//3\n\nprint(n)\n", "import sys, re\nfrom math import ceil, floor, sqrt, pi, factorial, gcd\nfrom copy import deepcopy\nfrom collections import Counter, deque, defaultdict\nfrom heapq import heapify, heappop, heappush #\u512a\u5148\u5ea6\u4ed8\u304d\u30ad\u30e5\u30fc\nfrom itertools import accumulate #\u7d2f\u7a4d\u548c\nfrom itertools import product, combinations, combinations_with_replacement #\u9806\u5217\u3092\u5217\u6319\nfrom bisect import bisect, bisect_left, bisect_right\nfrom functools import reduce\nfrom decimal import Decimal, getcontext\n# input = sys.stdin.readline \nsys.setrecursionlimit(1000000)\nMOD = 10 ** 9 + 7\nINF = float('inf')\nnum_list = []\nstr_list = []\n\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input() for _ in range(N)]\ndef s_row_list(N): return [s_list() for _ in range(N)]\ndef s_row_str(N): return [list(s_input()) for _ in range(N)]\ndef lcm(a, b): return a * b // gcd(a, b)\n\ndef main():\n    n = i_input()\n    t = s_input()\n\n    S = \"110\"\n    #s = \"110\" * (n // 3 * 2)\n\n    ok = False\n    for i in range(3):\n        for j in range(len(t)):\n            if t[j] != S[(j+i)%3]:\n                break\n        else:\n            ok = True\n    \n    if not ok:\n        print((0))\n        return\n    else:\n        if t == \"1\":\n            print((2 * 10 ** 10))\n        elif t == \"11\":\n            print((10 ** 10))\n        else:\n            c = t.count(\"0\")\n            if t[-1] == \"0\":\n                print((10**10 - c + 1))\n            else:\n                print((10**10 - c))\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nT = input()\n\nif T == '1':\n    print((10**10*2))\n    return\nelif T == '0' or T == '10' or T == '11':\n    print((10**10))\n    return\nelif T == '01':\n    print((10**10 - 1))\n    return\nelif T == '00':\n    print((0))\n    return\n    \n\nleft = T[:3]\nif left == '110':\n    l = 0\nelse:\n    l = 1\n\nright = T[-3:]\nif right == '110':\n    r = 0\nelse:\n    r = 1\n\nf = '110'\ncnt = 0\ni = 0\nwhile True:\n    if i+3 > N:\n        break\n    s = T[i:i+3]\n    if s == f:\n        cnt += 1\n        i += 3\n    elif int(s[0]) + int(s[1]) + int(s[2]) != 2:\n        print((0))\n        return\n    else:\n        i += 1\n\nans = 10**10 - (cnt-1) - l - r\nprint(ans)\n    \n", "from math import ceil\n\nN = int(input())\nT = input()\n\nif T == \"1\":\n    print(20000000000)\nelse:\n    s = \"110\" * ceil(2 * N / 3)\n    if T not in s:\n        print(0)\n    else:\n        if T[-1] == \"0\":\n            print(10000000000 - (N - 1) // 3)\n        else:\n            print(10000000000 - T.count(\"0\"))", "def solve():\n    N = int(input())\n    T = input()\n    if N == 1:\n        return 20_000_000_000 if T == \"1\" else 10_000_000_000\n    T = T.replace(\"110\", \"T\")\n    if T.startswith(\"10\"):\n        T = \"T\" + T[2:]\n    elif T.startswith(\"0\"):\n        T = \"T\" + T[1:]\n    if T.endswith(\"11\"):\n        T = T[:-2] + \"T\"\n    elif T.endswith(\"1\"):\n        T = T[:-1] + \"T\"\n    if all(t == \"T\" for t in T):\n        return 10_000_000_000 - (len(T) - 1)\n    else:\n        return 0\n\n\nprint(solve())", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nT = input()[:-1]\nS = ['110']*N\nS = ''.join(S)\nans = 0\n\nif S[:N]==T:\n    ans += (3*10**10-N)//3+1\n\nif S[1:1+N]==T:\n    ans += (3*10**10-1-N)//3+1\n\nif S[2:2+N]==T:\n    ans += (3*10**10-2-N)//3+1\n\nprint(ans)", "n = int(input())\nt = input()\nif n == 1:\n    if t == \"0\":\n        print(10 ** 10)\n    else:\n        print(2 * 10 ** 10)\nelif n == 2:\n    if t == \"00\":\n        print(0)\n    elif t == \"01\":\n        print(10 ** 10 - 1)\n    elif t == \"10\":\n        print(10 ** 10)\n    else:  # 11\n        print(10 ** 10)\nelse:\n    repeat_num = (n + 6) // 3\n    ref = \"110\" * repeat_num\n    num_in_ref = 0\n    flag_over = 0\n    if ref[:n] == t:\n        num_in_ref = 1\n        if n % 3 == 0:\n            flag_over = 1\n    if ref[1 : n + 1] == t:\n        num_in_ref = 1\n    if ref[2 : n + 2] == t:\n        num_in_ref = 1\n        if n % 3 == 2:\n            flag_over = -1\n    print(num_in_ref * (10 ** 10 - n//3) + flag_over)", "n = int(input())\ns = input()\n\nif n==1:\n\tif s==\"1\": print((10**10*2))\n\telse: print((10**10))\nelif n==2:\n\tif s==\"11\": print((10**10))\n\telif s==\"10\": print((10**10))\n\telif s==\"01\": print((10**10-1))\n\telse: print((0))\nelif n==3:\n\tif s==\"110\": print((10**10))\n\telif s==\"101\": print((10**10-1))\n\telif s==\"011\": print((10**10-1))\n\telse: print((0))\nelif n==4:\n\tif s in (\"1101\",\"1011\",\"0110\"):\n\t\tprint((10**10-1))\n\telse: print((0))\nelse:\n\tb = s.split(\"110\")\n\ttry:\n\t\ta = b.pop(0)\n\t\tc = b.pop()\n\texcept:\n\t\tprint((0))\n\t\treturn\n\tif not a in (\"\", \"0\", \"10\"):\n\t\tprint((0))\n\t\treturn\n\tif not c in (\"\", \"1\", \"11\"):\n\t\tprint((0))\n\t\treturn\n\tif \"\".join(b):\n\t\tprint((0))\n\t\treturn\n\n\tcnt = len(b) + 1\n\tif a: cnt += 1\n\tif c: cnt += 1\n\tprint((10**10 + 1 - cnt))\n", "import sys\nn = int(input())\nt = input()\n\nif t == '0':\n    print((10**10))\nelif t == '1':\n    print((2*(10**10)))\nelse:\n    s = 0\n    e = 0\n    if t[:2] == '11':\n        s = 0\n    elif t[:2] == '10':\n        s = 1\n    elif t[:2] == '01':\n        s = 2\n    else:\n        print((0))\n        return\n    \n    check = '110'\n    e = s + n - 1\n    \n    for i in range(2,n):\n        if t[i] != check[(i+s)%3]:\n            print((0))\n            return\n\n    print(((3 * (10 ** 10) -1 - e) // 3+1))\n", "N = int(input())\nT = input()\nS = \"110\"*(int(N/3)+3)\n\na = S.find(T)\nif a == -1:\n    print(0)\nelif T == \"1\":\n    print(10**10*2)\nelse:\n    print(10**10 - int((a+N-1)/3))", "n = int(input())\nt = input()\n\ns = \"110\" * (10 ** 5)\n\nif t == \"1\":\n    print(2 * 10 ** 10)\n    return\n\n\nfor i in range(3):\n    if t == s[i : i + n]:\n        print(1 + (3 * 10 ** 10 - (i + n)) // 3)\n        return\n\nprint(0)", "# -*- coding: utf-8 -*-\n\n\ndef main():\n    n = int(input())\n    t = list(input())\n\n    if n < 3:\n        if n == 1 and t[0] == \"0\":\n            print((10 ** 10))\n            return\n        elif n == 1 and t[0] == \"1\":\n            print((2 * 10 ** 10))\n            return\n        elif n == 2 and t[0] == \"1\":\n            print((10 ** 10))\n            return\n        elif n == 2 and t[0] == \"0\" and t[1] == \"1\":\n            print((10 ** 10 - 1))\n            return\n\n    count = 0\n    left = 0\n    right = n\n\n    if t[0] == \"0\":\n        left += 1\n        count += 1\n    elif t[0] == \"1\" and t[1] == \"0\":\n        left += 2\n        count += 1\n\n    if t[-2] == \"1\" and t[-1] == \"1\":\n        right -= 2\n        count += 1\n    elif t[-2] == \"0\" and t[-1] == \"1\":\n        right -= 1\n        count += 1\n\n    diff = right - left\n\n    if diff % 3 != 0:\n        print((0))\n        return\n\n    for i in range(diff // 3):\n        j = 3 * i + left\n\n        if t[j] == \"1\" and t[j + 1] == \"1\" and t[j + 2] == \"0\":\n            count += 1\n        else:\n            print((0))\n            return\n\n    print((10 ** 10 - count + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nt = input()\n\n\nif \"111\" in t or \"00\" in t or \"010\" in t:\n    ans = 0\nelif t == \"1\":\n    ans = 2 * (10 ** 10)\nelif t == \"11\":\n    ans = 10 ** 10\nelif t[-1] == \"0\":\n    ans = 10 ** 10 - t.count(\"0\") + 1\nelif t[-1] == \"1\":\n    ans = 10 ** 10 - t.count(\"0\")\n    \nprint(ans)\n", "n = int(input())\nt = input()\n\nx = '110' * ((n + 2) // 3)\ny = x + '110'\n\nif t == '1':\n    ans = 10**10 * 2\nelif t in x:\n    ans = 10**10 - (n + 2) // 3 + 1\nelif t in y:\n    ans = 10**10 - (n + 2) // 3\nelse:\n    ans = 0\n\nprint(ans)\n", "import sys\nn = int(input())\ns = input()\n\nM = 10000000000\n\nif s == '1':\n    print((2 * M))\n    return\nelif s == '0':\n    print(M)\n    return\nelse:\n    for i in range(n-1):\n        if s[i] == '0' and s[i+1] == '0':\n            print((0))\n            return\n    for i in range(n-2):\n        if s[i] == '1' and s[i+1] == '1' and s[i+2] == '1':\n            print((0))\n            return\n        elif s[i] == '0' and s[i+1] == '1' and s[i+2] == '0':\n            print((0))\n            return\n\nif s[-1] == '0':\n    m = s.count('0')\n    print((M - (m - 1)))\nelse:\n    m = s.count('0') + 1\n    print((M - (m - 1)))\n\n", "import bisect,collections,copy,heapq,itertools,math,numpy,string,sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\n\nN = I()\nT = S()\nif T=='1':\n    print((10**10*2))\n    return\nans = 0\nX = (-N//3)*(-1)\nind_X = ('110'*(X)).find(T)\nind_X1 = ('110'*(X+1)).find(T)\nif not ind_X==-1:\n    ans = 10**10-(X-1)\nelif not ind_X1==-1:\n    ans = 10**10-(X-1)-1\nprint(ans)\n", "n=int(input())\ns='110'\nt=input()\nsn=s*((n+2)//3+1)\nret=0\nfor i in range(3):\n    if sn[i:i+n]==t:\n        ret += pow(10,10)-(i+n-1)//3\nprint(ret)", "\ndef main():\n    n = int(input())\n    t = input()\n    if t == '1':\n        print((2*10**10))\n        return\n\n    splitted_t = t.split('0')\n\n    if len(splitted_t[0]) > 2 or len(splitted_t[-1]) > 2:\n        print((0))\n        return\n\n    for sp_ti in splitted_t[1: -1]:\n        if len(sp_ti) != 2:\n            print((0))\n            return\n\n    if splitted_t[-1] == \"\":\n        splitted_t = splitted_t[:-1]\n\n    print((10**10 - len(splitted_t) + 1))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = int(input())\n    t = input()\n    v = 10 ** 10\n\n    # t\u304cS\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\n    is_included = False\n    first_threes = [\"110\", \"101\", \"011\"]\n    for first_three in first_threes:\n        if t == first_three * (n // 3) + first_three[:n % 3]:\n            is_included = True\n            break\n\n    if not is_included:\n        print((0))\n    else:\n        if t == \"1\":\n            print((2 * v))\n        elif t == \"11\":\n            print(v)\n        else:\n            num_0 = t.count(\"0\")\n            if t[-1] == \"0\":\n                print((v - num_0 + 1))\n            else:\n                print((v - num_0))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "input()\ns = input()\nif s == \"1\":\n    print((2 * 10 ** 10))\n    return\nif s[:2] == \"10\":\n    s = \"1\" + s\nif s[0] == \"0\":\n    s = \"11\" + s\nif s[-2:] == \"11\":\n    s = s + \"0\"\nif s[-2:] == \"01\":\n    s = s + \"10\"\nif s != \"110\" * (len(s) // 3):\n    print((0))\n    return\nprint((10 ** 10 - len(s) // 3 + 1))\n", "#!/usr/bin/env python3\n# from typing import *\n\nimport io\nimport sys\nimport math\nimport collections\nimport decimal\nimport itertools\n\nsys.setrecursionlimit(1000000)\n\n# _INPUT = \"\"\"2\n# 01\n# \"\"\"\n# sys.stdin = io.StringIO(_INPUT)\n\ndef is_T_ok(T):\n    if T[0] == 0:\n        k = 0\n    elif T[1] == 0:\n        k = 1\n    elif T[2] == 0:\n        k = 2\n    else:\n        return False\n\n    for i in range(len(T)):\n        if i % 3 == k:\n            if T[i] != 0:\n                return False\n        else:\n            if T[i] != 1:\n                return False\n\n    return True\n\ndef solve(N, T):\n\n    if T == [0]:\n        return 10**10\n    elif T == [1]:\n        return 10**10 * 2\n    elif T == [1, 1]:\n        return 10**10\n\n    if not is_T_ok(T):\n        return 0\n\n    count0 = T.count(0)\n    if T[-1] == 0:\n        return 10**10 - count0 + 1\n    else:\n        return 10**10 - count0\n\n\ndef main():\n    N = int(input())\n    T = list(map(int, input()))\n    a = solve(N, T)\n    print(a)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nT = input()\n\nl = 10**10\n\nbad_cases = ['00','010','111']\n\nfor i in bad_cases:\n    if i in T:\n        print(0)\n        return\n\nif '0' in T:\n    zero_cnt = T.count('0')\n    if T[N-1] == '0':\n        print(l-zero_cnt+1)\n    else:\n        print(l-zero_cnt)\nelif T == '1':\n    print(l*2)\nelse:\n    print(l)", "N=int(input())\nT=str(input());S=str();cnt=0;p=0;q=0\n\nfor i in range(N):\n  S=S+\"110\"\n#print(S)\nfor i in range(3):\n  #print(i,S[i:N+i],T)\n  if S[i:N+i]==T:\n    p=i\n    q=i+N-1\n    cnt=cnt+1\n    #print(\"p\",i)\n    break\nz=q//3+1\n\n#print(z)\n#print(cnt)\n\nif cnt==0:\n  print(0)\nelse:\n  if T==\"1\":\n    print(2*10**10)\n  else:\n    print(10**10-(z-1))", "import sys\ninput=sys.stdin.readline\n#print=sys.stdout.write\n#sys.setrecursionlimit(100000)\n#from heapq import *\n#from collections import deque as dq\n#from math import ceil,floor,sqrt,gcd,log\n#import bisect as bs\n#from collections import Counter\n#from collections import defaultdict as dc \n#from functools import reduce\n#from functools import lru_cache\nri=lambda:int(input())\nrl=lambda:list(map(int,input().split()))\nrs=lambda:input().strip(\"\\r\\n\")\nfor _ in range(1):\n    n=ri()\n    t=rs()\n    copies=1e10\n    ans=0\n    s='110'*(n)\n    for i in range(3):\n        if t!=s[i:i+n]:continue\n        ans+=copies-(i+n-1)//3\n    print(int(ans))", "N = int(input())\nT = input()\nS = \"110\" * (N + 2)\n\nif T == \"1\":\n    print(((10 ** 10) * 2))\nelif T == \"00\":\n    print((0))\nelif N == 2:\n    print((10 ** 10 if T != \"01\" else (10 ** 10) - 1))\nelif T in S:\n    if S.startswith(T):\n        print((10 ** 10 - (N + 2) // 3 + 1))\n    elif S[1:].startswith(T):\n        print((10 ** 10 - (N + 3) // 3 + 1))\n    else:\n        print((10 ** 10 - (N + 4) // 3 + 1))\nelse:\n    print((0))\n", "n = int(input())\nT = input()\nS = '110'*(10**5)\nans = 0\nl = 10**10\nfor i in range(3):\n  if S[i:i+len(T)]==T:\n    ans += l - (n+i-1)//3\nprint(ans)", "N = int(input())\nT = input()\n\nif N == 1:\n    if T == \"0\":\n        print((10**10))\n    else:\n        print((10**10*2))\n    return\n\nif N == 2:\n    if T == \"00\":\n        print((0))\n    if T == \"01\":\n        print((10**10-1))\n    if T == \"10\":\n        print((10**10))\n    if T == \"11\":\n        print((10**10))\n    return\n\nzi = 0\nfor i in range(3):\n    if T[i] == \"0\":\n        zi = i\n        break\nelse:\n    print((0))\n    return\n\nfor i in range(N):\n    if i%3 == zi:\n        if T[i] != \"0\":\n            print((0))\n            return\n    else:\n        if T[i] != \"1\":\n            print((0))\n            return\n\nm = (N+(3-zi+2)%3+2)//3\nprint((10**10-m+1))\n", "import logging\nimport sys\nfrom inspect import currentframe\n\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\n\nlogging.basicConfig(level=logging.DEBUG)\n\n\ndef dbg(*args):\n    id2names = {id(v): k for k, v in list(currentframe().f_back.f_locals.items())}\n    logging.debug(\n        \", \".join(id2names.get(id(arg), \"???\") + \" = \" + repr(arg) for arg in args)\n    )\n\n\ndef solve(n, t):\n    s = \"110\"\n    num = 1e10\n    if t == \"0\":\n        return num\n    elif t == \"1\":\n        return 2 * num\n    ans = 0\n    for i in range(3):\n        num110 = (len(t) + i + 2) // 3\n        ok = True\n        for j in range(len(t)):\n            if t[j] != s[(i + j) % 3]:\n                ok = False\n        if ok:\n            ans += num - num110 + 1\n    return ans\n\n\ndef main():\n    n = int(input())\n    t = input()\n    dbg(len(t))\n    t = t.strip()\n    dbg(len(t))\n    print((int(solve(n, t))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\n\nt = input()\n\ns = '110'\ncom = ''\n\n#print((n*2)//3)\n#\u5207\u308a\u4e0a\u3052\u500b\u6570\n#print(-(-(n*2)//3))\n\na = -(-(n*2)//3)\n\nfor i in range(a):\n    com += s\n\ncount = 0\nfor i in range(a*3-n+1):\n    \n    if com[i:n+i] == t:\n        count += 1\n\nif count == 0:\n    print(0)\n\nelif len(com) <= 3:\n    print(pow(10,10) * count)\nelse:\n    print(pow(10,10)-(a-count))", "N = int(input())\nT = input()\n\nl = len(T)\n\nif l == 1:\n    if T == \"1\":\n        print(2*10**10)\n    elif T == '0':\n        print(10**10)\nelif l == 2:\n    if T == '11':\n        print(10**10)\n    elif T == '10':\n        print(10**10)\n    elif T == '01':\n        print(10**10-1)\n    elif T == '00':\n        print(0)\nelif l >= 3:\n    s = '110'\n    flag = False\n    flag110 = False\n    index = 0\n    for j in range(3):\n        index = j\n        f = True\n        for i in range(l):\n            if s[index] != T[i]: f = False\n            index = (index + 1) % 3\n        \n        if f: flag = True\n        if j == 0 and f and l % 3 == 0: flag110 = True\n    if flag110:\n        print(10**10-l//3+1)\n    elif flag and T[0] == '0': \n        print(10**10-(l+1)//3)\n    elif flag:\n        print(10**10-l//3)\n    else: print(0)", "n = int(input())\nt = input()\n\nif n == 1:\n    if t == '0':\n        print((10 ** 10))\n    elif t == '1':\n        print((2 * (10 ** 10)))\n\nelif n == 2:\n    if t == '11' or t == '10':\n        print((10 ** 10))\n    elif t == '01':\n        print((10 ** 10 - 1))\n    else:\n        print((0))\n\nelif n == 3:\n    if t not in ['110', '101', '011']:\n        print((0))\n        return\n\n    if t == '110':\n        print((10 ** 10))\n    else:\n        print((10 ** 10 - 1))\n\nelse:\n    check_num_zero = list(set(t.split('1')))\n    check_num_one = list(set(t.split('0')))\n    for i in check_num_zero:\n        if i not in ['', '0']:\n            print((0))\n            return\n    for i in check_num_one:\n        if i not in ['', '1', '11']:\n            print((0))\n            return\n\n    ans = t.split('110')\n    if set(ans) == {''}:\n        ans = 10 ** 10 - len(ans) + 2\n    elif ans[0] == '' or ans[-1] == '':\n        ans = 10 ** 10 - len(ans) + 1\n    else:\n        ans = 10 ** 10 - len(ans)\n\n    print(ans)\n", "n = int(input())\nt = input()\n\nbaseS = \"110\"\nlenS = 10**10\nif t == \"0\":\n    out = lenS \nelif t == \"1\":\n    out = lenS*2 \n#elif t == \"11\":\n#    out = lenS*2\nelse:\n    out = 0 \n    for chOffset in range(3):\n        iter = (chOffset + n +2)//3\n        num1 = lenS - iter + 1\n        \n        isMatched = True\n        for j in range(n):\n            if t[j] != baseS[(j+chOffset)%3]:\n                isMatched = False\n        \n        if isMatched:\n            out += num1\n\nprint(out)\n\n", "import sys\nN = int(input())\nT = input()\n\nif T == \"0\":\n    print(10 ** 10)\n    return\nelif T == \"1\":\n    print(2 * 10 ** 10)\n    return\nelif T == \"11\" or T == \"10\":\n    print(10 ** 10)\n    return\nelif T == \"01\":\n    print(10 ** 10 - 1)\n    return\n    \nif T[0] == \"0\":\n    T = \"11\" + T\nelif T[0] == \"1\" and T[1] == \"0\":\n    T = \"1\" + T \n\nfor i in range(len(T)):\n    if i % 3 == 2 and T[i] != \"0\":\n        print(0)\n        return\n    elif i % 3 != 2 and T[i] != \"1\":\n        print(0)\n        return\n\nT_amnt = len(T)    \nT_sho = T_amnt // 3\nT_amari = T_amnt % 3\n\nif T_amari == 0:\n    amari = 1\nelse:\n    amari = 0\nprint(10**10 - T_sho + amari)", "d = 3*10**10\nn=int(input())\ns=input()\na=0\nb=0\ni=0\nj=n-1\nwhile i<n and s[i]=='1':\n    i+=1\n    a+=1\nwhile j>=0 and s[j]=='1':\n    b+=1\n    j-=1\nif n==1 and s[0]=='1':\n    print(((d//3)*2))\nelif a<=2 and b<=2:\n    if not (j-i)%3:\n        x='011'*((j-i)//3)\n        if x==s[i:j]:\n            \n            maxindex = d+1-n\n            if n==1:\n                if s[0]=='1':\n                    print(((d//3)*2))\n                else:\n                    print((d//3))\n            elif a==0:\n                print((maxindex//3))\n            elif a==1:\n                print(((maxindex+1)//3))\n            else:\n                print(((maxindex+2)//3))\n        else:\n            print((0))\n \n    else:\n        print((0))\nelse:\n    print((0))\n\n", "from sys import stdin, setrecursionlimit\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heappush, heappop\nfrom itertools import accumulate, combinations, combinations_with_replacement, permutations\nfrom math import ceil, sqrt, pi, radians, sin, cos, log # log(25, 5) = 5.0\nfrom sys import stdin, setrecursionlimit\nsetrecursionlimit(10 ** 7)\n\nINF = 10 ** 18\n\nN = int(input())\nT = input()\n\nif N == 1:\n    if T == \"0\":\n        print(10**10)\n    else:\n        print(10**10*2)\n    return\n    \nif N == 2:\n    if T == \"00\":\n        print(0)\n    elif T == \"01\":\n        print(10**10-1)\n    elif T == \"10\":\n        print(10**10)\n    else:\n        print(10**10)\n    return\n\ndef f(T):\n    U = (N // 3 + 5) * \"110\"\n    #print(U)\n    for i in range(3):\n        flag = True\n        for j in range(len(T)):\n            if T[j] != U[i + j]:\n                flag = False\n                break\n        if flag:\n            l, r = (3 - i) % 3, (i + len(T)) % 3\n            tmp = (N - l - r) // 3\n            if l: tmp+=1\n            if r: tmp+=1\n            return (10 ** 10 - tmp + 1)\n\n    #\u4e00\u81f4\u305b\u305a\n    return 0\n\nprint(f(T))", "from sys import stdin\npin=stdin.readline\ndef main():\n  N=int(pin())\n  T=pin().rstrip()\n  if N==1:\n    if T[0]==\"0\":\n      print(pow(10,10))\n    else:\n      print(2*pow(10,10))\n  elif N==2:\n    if T[0]==\"0\":\n      if T[1]==\"0\":\n        print(0)\n      else:\n        print(pow(10,10)-1)\n    else:\n      if T[1]==\"0\":\n        print(pow(10,10))\n      else:\n        print(pow(10,10))\n  else:\n    if T[0]==\"1\" and T[1]==\"1\" and T[2]==\"0\":\n      #\u7e70\u308a\u8fd4\u3057\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\n      for i in range(N):\n        if i%3 in [0,1]:\n          if T[i]!=\"1\":\n            print(0)\n            return\n        if i%3==2:\n          if T[i]!=\"0\":\n            print(0)\n            return\n      t=N%3\n      s=N//3\n      if t==0:\n        print(pow(10,10)-s+1)\n      else:\n        print(pow(10,10)-s)\n    elif T[0]==\"1\" and T[1]==\"0\" and T[2]==\"1\":\n      #\u7e70\u308a\u8fd4\u3057\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\n      for i in range(N):\n        if i%3 in [0,2]:\n          if T[i]!=\"1\":\n            print(0)\n            return\n        if i%3==1:\n          if T[i]!=\"0\":\n            print(0)\n            return\n      t=N%3\n      s=N//3\n      if t==0:\n        #\u3053\u3053\u304c\u30d0\u30b0\u3063\u3066\u308b\n        print(pow(10,10)-s)\n      else:\n        print(pow(10,10)-s)\n    elif T[0]==\"0\" and T[1]==\"1\" and T[2]==\"1\":\n      #\u7e70\u308a\u8fd4\u3057\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\n      for i in range(N):\n        if i%3 in [1,2]:\n          if T[i]!=\"1\":\n            print(0)\n            return\n        if i%3==0:\n          if T[i]!=\"0\":\n            print(0)\n            return\n      t=N%3\n      s=N//3\n      if t==2:\n        print(pow(10,10)-s-1)\n      else:\n        print(pow(10,10)-s)\n    else:\n      print(0)\n  return\n\nmain()", "n=int(input())\nt=input()\ns=\"110\"*(10**5)\nc=0\nfor i in range(3):\n    if s[i:i+n]==t:\n        c+=10**10-(n+i-1)//3\nprint(c)", "N = int(input())\nT = input()\n\nif T == '1':\n  print(2*10**10)\n  return\n  \nc = 1\nif T[0] == '0':\n  c1 = 0\nelse:\n  c1 = 1\n  \nT = T[1:]\n\nfor t in T:\n  if t == '1':\n    if c1 == 2:\n      print(0)\n      return\n    elif c1 == 0:\n      c += 1\n    c1 += 1\n  if t == '0':\n    if c1 == 0 or (c > 1 and c1 == 1):\n      print(0)\n      return\n    c1 = 0\n    \nprint(10**10 - c + 1)", "N=int(input())\nT=input()\nnums=[1,1,0]\nans1=[]\nans2=[]\nans3=[]\nfor n in range(N):\n    ans1.append(str(nums[n%3]))\nfor n in range(1,N+1):\n    ans2.append(str(nums[n%3]))\nfor n in range(2,N+2):\n    ans3.append(str(nums[n%3]))\ns_ans1=''.join(ans1)\ns_ans2=''.join(ans2)\ns_ans3=''.join(ans3)\nif T=='1':\n    print((pow(10,10)*2))\nelif T=='11':\n    print((pow(10,10)))\nelif T=='0':\n    print((pow(10,10)))\nelif s_ans1==T or s_ans2==T or s_ans3==T:\n    if T[-1]=='0':\n        print((pow(10,10)-T.count('0')+1))\n    else:\n        print((pow(10,10)-T.count('0')))\nelse:\n    print((0))\n", "n = int(input())\ns = input()\n\nflag = True\nif n == 1:\n    if s == '0':\n        print(pow(10, 10))\n    elif s == '1':\n        print(pow(10, 10) * 2)\nelif n == 2:\n    if s in ['11', '10']:\n        print(pow(10, 10))\n    elif s == '01':\n        print(pow(10, 10) - 1)\n    else:\n        print(0)\nelse:\n    flag = True\n    f = n // 3\n    r = n % 3\n    for i in range(0, n, 3):\n        if i == 0:\n            ans = s[0:3]\n            if ans not in ['110', '101', '011']:\n                flag = False\n                break\n        elif i < 3 * f:\n            tmp = s[i:i + 3]\n            if tmp != ans:\n                flag = False\n                break\n        else:\n            tmp = s[i:n]\n            if tmp != ans[0:n - i]:\n                flag = False\n                break\n    if not flag:\n        print(0)\n    else:\n        if ans == '110':\n            if r == 0:\n                print(pow(10, 10) - f + 1)\n            else:\n                print(pow(10, 10) - f)\n        elif ans == '101':\n            print(pow(10, 10) - f)\n        elif ans == '011':\n            if r < 2:\n                print(pow(10, 10) - f)\n            else:\n                print(pow(10, 10) - f - 1)", "import sys\nimport os\nfrom copy import copy\nimport operator\nimport time\nimport datetime\nimport math\nfrom math import floor, ceil, sqrt, log\nimport statistics\nfrom statistics import mean, median\nfrom decimal import Decimal as D\nfrom fractions import Fraction as F\nimport functools\nimport random\nfrom random import randint, shuffle\nimport bisect\nimport string\nfrom collections import deque\nimport collections\nimport itertools\nimport heapq\n\nsys.setrecursionlimit(4100000)\nproduct = functools.partial(functools.reduce, operator.mul)\nINF = float(\"inf\")\n\n\nclass UnionFind:\n    def __init__(self, n):\n        self.parents = [-1] * n\n\n    def union(self, x, y):\n        x, y = self.find(x), self.find(y)\n        if x != y:\n            if self.parents[x] > self.parents[y]:\n                x, y = y, x\n            self.parents[x] += self.parents[y]\n            self.parents[y] = x\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        self.parents[x] = self.find(self.parents[x])\n        return self.parents[x]\n\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n\n    def roots(self):\n        return list(filter(lambda x: x < 0, self.parents))\n\n    def group_count(self):\n        return len(self.roots())\n\n    def max_size(self):\n        return -min(self.parents)\n\n    def min_size(self):\n        return -max(self.roots())\n\n    def append(self, n):\n        self.parents += [-1] * n\n\n\nclass Imos:\n    def __init__(self, n):\n        self.val = [0] * n\n\n    def add(self, x, y, n=None):\n        if n is None:\n            n = 1\n        self.val[x] += n\n        if len(self.val) > y + 1:\n            self.val[y + 1] -= n\n\n    def imos(self):\n        for i in range(1, len(self.val)):\n            self.val[i] += self.val[i - 1]\n\n    def max(self):\n        return max(self.val)\n\n    def min(self):\n        return min(self.val)\n\n\nclass CS:\n    def __init__(self, grid):\n        self.cs = grid\n        for i0 in range(len(grid)):\n            for i1 in range(len(grid[0])):\n                if i0 == 0:\n                    if i1 == 0:\n                        continue\n                    self.cs[i0][i1] += self.cs[i0][i1 - 1]\n                else:\n                    if i1 == 0:\n                        self.cs[i0][i1] += self.cs[i0 - 1][i1]\n                    else:\n                        self.cs[i0][i1] += self.cs[i0 - 1][i1] + self.cs[i0][i1 - 1] - \\\n                                           self.cs[i0 - 1][i1 - 1]\n\n    def sum(self, start_0, start_1, end_0, end_1):\n        if start_0 == 0:\n            if start_1 == 0:\n                return self.cs[end_0][end_1]\n            return self.cs[end_0][end_1] - self.cs[end_0][start_1 - 1]\n        if start_1 == 0:\n            return self.cs[end_0][end_1] - self.cs[start_0 - 1][end_1]\n        start_0 -= 1\n        start_1 -= 1\n        return self.cs[end_0][end_1] - self.cs[start_0][end_1] - self.cs[end_0][\n            start_1] + self.cs[start_0][start_1]\n\n\ndef mod(n):\n    return n % (10 ** 9 + 7)\n\n\ndef sinput():\n    return sys.stdin.readline()[:-1]\n\n\ndef input():\n    inputs = list(map(int, sys.stdin.readline().split()))\n    if len(inputs) == 1:\n        return inputs[0]\n    return inputs\n\n\ndef listban(l):\n    return list(map(list, set(map(tuple, l))))\n\n\ndef div(n):\n    lower_divisors, upper_divisors = [], []\n    i = 1\n    while i * i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n // i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\n\ndef prime(n):\n    a = []\n    while n % 2 == 0:\n        a.append(2)\n        n //= 2\n    f = 3\n    while f * f <= n:\n        if n % f == 0:\n            a.append(f)\n            n //= f\n        else:\n            f += 2\n    if n != 1:\n        a.append(n)\n    return a\n\n\ndef div_counter(l, n):\n    return prime(l).count(n)\n\n\ndef lcm(x, y):\n    return (x * y) // math.gcd(x, y)\n\n\ndef C(n, r):\n    if n < r:\n        return 0\n    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))\n\n\ndef P(n, r):\n    if n < r:\n        return 0\n    return math.factorial(n) // math.factorial(n - r)\n\n\ndef H(n, r):\n    return C(n + r - 1, r)\n\n\ndef cos(x, y, a):\n    return (x ** 2 + y ** 2 - 2 * x * y * math.cos(math.radians(a))) ** 0.5\n\n\ndef DFS(g, s, pos=None):\n    if pos is None:\n        pos = set()\n    pos.add(s)\n    for i in g[s]:\n        if not (i in pos):\n            DFS(g, i, pos)\n    return pos\n\n\ndef DFS_one(g, s, pos=None):\n    if pos is None:\n        pos = set()\n    pos = copy(pos)\n    pos.add(s)\n    b = copy(pos)\n    m = copy(pos)\n    for i in g[s]:\n        if not (i in pos):\n            b = DFS(g, i, pos)\n            if len(m) < len(b):\n                m = b\n    return m\n\n\ndef BFS(g, q, pos=None):\n    if pos is None:\n        pos = set()\n    if type(q) == deque:\n        pos.add(q)\n        q = deque([q])\n    pos.add(q[-1])\n    for i in g[q.pop()]:\n        if not i in pos:\n            q.append(i)\n    while q != deque():\n        pos, q = BFS(g, q, pos)\n    return pos, q\n\n\ndef SSP(a, li=None):\n    if li is None:\n        li = []\n    if len(a) == 1:\n        return [a[0]]\n    return list(set(\n        li + SSP(a[1:], li) + list(map(lambda x: x + a[0], SSP(a[1:], li))) + [a[0]]))\n\n\ndef dijkstra(g, s):\n    n = len(g)\n    dist = [10 ** 100] * n\n    hq = [(0, s)]\n    dist[s] = 0\n    seen = [False] * n\n    while hq:\n        v = heapq.heappop(hq)[1]\n        seen[v] = True\n        for to, cost in g[v]:\n            if seen[to] == False and dist[v] + cost < dist[to]:\n                dist[to] = dist[v] + cost\n                heapq.heappush(hq, (dist[to], to))\n    return dist\n\n\ndef LIS(b):\n    l = [b[0]]\n    for i in b:\n        if i > l[-1]:\n            l += [i]\n        else:\n            l[bisect.bisect_left(l, i)] = i\n    return len(l)\n\n\ndef yn(b):\n    if b:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\ndef op(s):\n    print(s)\n    return\n\n\nn = input()\nt = sinput()\nif \"00\" in t:\n    print(0)\nelif \"111\" in t:\n    print(0)\nelif \"010\" in t:\n    print(0)\nelif t == \"0\":\n    print(10**10)\nelif t == \"1\":\n    print(10**10*2)\nelse:\n    if t[-2:] == \"11\":\n        t = t + \"0\"\n    elif t[-2:] == \"01\":\n        t = t + \"10\"\n    if t[:2] == \"10\":\n        t = \"1\" + t\n    elif t[:2] == \"01\":\n        t = \"11\" + t\n    print(10**10 + 1 - len(t) // 3)", "# TODO refactor\n\nn = int(input())\nt = input()\n\nif t == '1':\n    print((2 * 10**10))\nelse:\n    if '0' in t:\n        first_zero = t.index('0')\n    else:\n        first_zero = n\n    if first_zero < 3 and all(c == '1' for c in t[:first_zero]):\n        num_of_110 = 0\n        curr = t[first_zero+1:]\n        while len(curr) > 3 and curr.startswith('110'):\n            num_of_110 += 1\n            curr = curr[3:]\n        if curr in ['1', '11', '110']:\n            num_of_110 += 1\n        elif not curr:\n            pass\n        else:\n            print((0))\n            import sys\n            return\n        print((10**10-num_of_110))\n    else:\n        print((0))\n", "n = int(input())\nt = input()\n\np = '110' * (n // 3 + 2)\n\nif p[:n] != t and p[1:n+1] != t and p[2:n+2] != t:\n    ans = 0\n    \nelif t == '1':\n    ans = 2 * 10 ** 10\n    \nelif t == '11':\n    ans = 10 ** 10\n    \nelse:\n    k = 0\n    for c in t:\n        if c == '0':\n            k += 1\n\n    if t[-1] == '0':\n        ans = 10 ** 10 - (k - 1)\n    else:\n        ans = 10 ** 10 - k\n    \nprint(ans)\n", "N=int(input())\nT=input()\nV=10**10\nif T==\"1\":\n  print(2*V);return\nelif T==\"11\"  or T==\"0\":\n  print(V);return\nelse:\n    K=T.count(\"0\")\n    data = '110'*(K+1)\n    if data.count(T)==0:\n        print(0)\n    else:  \n      \n      if T[-1]=='0':\n         print(10**10-K+1)\n      else:\n         print(10**10-K)", "n = int(input())\nt = input()\nif t == \"1\":\n    print((10**10*2))\nelif t == \"0\":\n    print((10**10))\nelif t == \"11\" or t ==\"10\":\n    print((10**10))\nelif t == \"01\":\n    print((10**10-1))\nelif t == \"110\":\n    print((10**10))\nelif t == \"101\" or t == \"011\":\n    print((10**10-1))\n    \nelif \"00\" in t or \"010\" in t or \"111\" in t:\n    print((0))\n    \nelif t[0:2]==\"11\" and n%3==0:\n    print((10**10-n//3+1))\nelif t[0:2]==\"01\" and n%3==2:\n    print((10**10-n//3-1))\nelse:\n    print((10**10-n//3))\n\n", "from sys import stdin, setrecursionlimit\nimport bisect, collections, copy, heapq, itertools, math, string\nsetrecursionlimit(10**8)\n\nINF = float(\"inf\")\nMOD = 1000000007\n\n\ndef input():\n    return stdin.readline().strip()\n\n\n\ndef main():\n\n    \n\n    n = int(input())\n    t = input()\n    a = 10**10\n    ans = 0\n\n    if n==1:\n        if t == \"1\": ans = a*2\n        elif t == \"0\": ans = a\n    elif n==2:\n        if t in {\"11\", \"10\"}: ans = a\n        elif t == \"01\": ans = a-1\n    elif n==3:\n        if t == \"110\": ans = a\n        elif t in {\"101\", \"011\"}: ans = a-1\n    else:\n        now = 0\n        pre = t[:2]\n        if pre == \"11\": now = 0\n        elif pre == \"10\": now = 1\n        elif pre == \"01\": now = 2\n        else:\n            print((0))\n            return\n        \n        for char in t:\n            flag = False\n            if now in {0, 1}:\n                if char != \"1\": flag = True\n            if now == 2:\n                if char != \"0\": flag = True\n            now += 1\n            if now == 3: now = 0\n            if flag:\n                print((0))\n                return\n        \n        x = n if pre == \"11\" else n+1 if pre == \"10\" else n+2\n        ans = a - ((x+3-1)//3-1)\n\n    print(ans)\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nt = input()\nif n == 1:\n  if t == \"1\":\n    print((2*10**10))\n  else:\n    print((10**10))\nelif n == 2:\n  if t == \"11\" or t == \"10\":\n    print((10**10))\n  elif t == \"01\":\n    print((10**10-1))\n  else:\n    print((0))\nelse:\n  if t[:3] == \"110\":\n    a = 0\n  elif t[:3] == \"101\":\n    a = 1\n  elif t[:3] == \"011\":\n    a = 2\n  else:\n    print((0))\n    return\n  b = a\n  for i in t[3:]:\n    if i != \"110\"[b%3]:\n      print((0))\n      return\n    b += 1\n  print((10**10-(a+n-1)//3))\n", "n = int(input())\nT = input()\n\nmod = None\n\nfor i in range(n):\n    if T[i] == '0':\n        mod = i % 3\n        break\n\nif mod is None:\n    if n == 1:\n        print((2 * 10**10))\n    elif n == 2:\n        print((10**10))\n    else:\n        print((0))\n    return\n\nfor i in range(n):\n    if (T[i] == '0') != (i % 3 == mod):\n        print((0))\n        return\n\nprint((10**10 - (n - mod + 4) // 3 + 1))\n", "def solve():\n    N = int(input())\n    T = input()\n\n    if T == '1':\n        print((10**10*2))\n        return\n\n    splited = T.split('0')\n    if len(splited[0]) > 2 or len(splited[-1]) > 2:\n        print('0')\n        return\n    \n    for i in range(1,len(splited)-1):\n        if len(splited[i]) != 2:\n            print('0')\n            return\n\n    if len(splited)-1 > 10**10:\n        print('0')\n        return\n    \n    if T[-1] == '0':\n        print((10**10 - (len(splited)-1) + 1))\n    \n    else:\n        print((10**10 - (len(splited)-1)))\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "n=int(input())\ns=input()\n\nx=-(-n//3)\nif s not in '110'*(x+1):\n    print(0)\nelif s=='0'or s=='11' or s=='10':\n    print(10**10)\nelif s=='1':\n    print(10**10*2)\nelif s=='01':\n    print(10**10-1)\nelse:\n    if s in x*'110':\n        print(10**10-x+1)\n    else:\n        print(10**10-x)", "N = int(input())\nT = input()\nS = \"110\" * 10**6\n\nif T == \"0\":\n    print(10**10)\nelif T == \"1\":\n    print(2*10**10)\nelif T == \"11\":\n    print(10**10)\nelse:\n    for i in range(3):\n        if S[i:N+i] == T:\n            print(10**10 - ((N+2) // 3 - 1) - ((i+N+2) // 3 > (N+2) // 3))\n            return\n    print(0)", "def solve(n, t):\n    m = 10**10\n    ans = 0\n    s = \"110\" * n\n    for i in range(3):\n        if s[i:len(t)+i] == t:\n            ans += (3*m - i - n) // 3 + 1\n    return ans\n\nn = int(input())\nt = input()\nprint(solve(n, t))", "# import sys\n# input = sys.stdin.readline\nimport math\nimport copy\nimport bisect\nfrom itertools import accumulate\nfrom collections import Counter, defaultdict, deque\ndef mp():return list(map(int,input().split()))\ndef lmp():return list(map(int,input().split()))\ndef ceil(U,V):return (U+V-1)//V\ndef modf1(N,MOD):return (N-1)%MOD+1\n\nn = int(input())\nt = input()\nif n == 1:\n    if t == \"0\":\n        print((int(1e10)))\n        return\n    else:\n        print((int(2e10)))\n        return\nif n == 2:\n    if t == \"11\"or t == \"10\":\n        print((int(1e10)))\n        return\n    elif t == \"01\":\n        print((int(1e10-1)))\n        return\n    else:\n        print((0))\n        return\n\nif t[:3] == \"110\":\n    if n % 3 == 0:\n        if t != \"110\"*(n//3):\n            print((0))\n            return\n    elif n % 3 == 1:\n        if t != \"110\"*(n//3)+\"1\":\n            print((0))\n            return\n    elif n % 3 == 2:\n        if t != \"110\"*(n//3)+\"11\":\n            print((0))\n            return\n    print((int(1e10)-ceil(n,3)+1))\n\nelif t[:3] == \"101\":\n    if n % 3 == 0:\n        if t != \"101\"*(n//3):\n            print((0))\n            return\n        print((int(1e10) - ceil(n, 3)))\n    elif n % 3 == 1:\n        if t != \"101\"*(n//3)+\"1\":\n            print((0))\n            return\n        print((int(1e10) - ceil(n, 3) + 1))\n    elif n % 3 == 2:\n        if t != \"101\"*(n//3)+\"10\":\n            print((0))\n            return\n        print((int(1e10)-ceil(n,3)+1))\n\nelif t[:3] == \"011\":\n    if n % 3 == 0:\n        if t != \"011\"*(n//3):\n            print((0))\n            return\n        print((int(1e10) - ceil(n, 3)))\n    elif n % 3 == 1:\n        if t != \"011\"*(n//3)+\"0\":\n            print((0))\n            return\n        print((int(1e10) - ceil(n, 3)+1))\n    elif n % 3 == 2:\n        if t != \"011\"*(n//3)+\"01\":\n            print((0))\n            return\n        print((int(1e10)-ceil(n,3)))\nelse:\n    print((0))\n\n\n\n", "N = int(input())\nT = input()\nS = '110'*N\nif T == '1':\n    print(2*10**10)\n    return\n\nfor i in range(3):\n    if S[i:N+i] == T:\n        print((3*10**10-N-i)//3 + 1)\n        return\nprint(0)"]