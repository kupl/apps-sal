["n = int(input())\na = list(map(int, input().split()))\n\nmxa = max(a)\nv = 1 << 30\nwhile v > mxa:\n    v >>= 1\n\nwhile True:\n    d = -1\n    for i in range(n):\n        if a[i] & v:\n            d &= a[i]\n    if d % v == 0:\n        break\n    v >>= 1\n\nb = [i for i in a if i & v]\nprint(len(b))\nprint(' '.join(map(str,b)))\n", "n = int(input())\nt = list(map(int, input().split()))\n\np = [bin(i) for i in t]\np = ['0' * (32 - len(i)) + i[2: ] for i in p]\np = [''.join(i) for i in zip(*p)]\n\nx = 0\nfor i in range(30):\n    x = p[i]\n    if '1' in x and not any(all(x[k] == y[k] for k in range(n) if x[k] == '1') for y in p[i + 1: ]): break        \n\nt = [str(t[k]) for k in range(n) if x[k] == '1']\nprint(len(t))\nprint(' '.join(t))", "n = int(input())\na = list(map(int, input().split()))\n \nmxa = max(a)\nv = 1 << 30\nwhile v > mxa:\n    v >>= 1\n \nwhile True:\n    d = -1\n    for i in range(n):\n        if a[i] & v:\n            d &= a[i]\n    if d % v == 0:\n        break\n    v >>= 1\n \nb = [i for i in a if i & v]\nprint(len(b))\nprint(' '.join(map(str,b)))", "x=int(input())\ns=list(map(int,input().split()))\nres=[]\n\nfor u in range(0,30):\n    cur=(1<<(u))\n    v=(1<<(u+1))-1\n    tem=[]\n    for n in s:\n        if n&(cur):\n            tem.append(n)\n\n    for n in tem:\n        v&=n\n    if v%(1<<(u))==0:\n        res=tem\n\nprint(len(res))\nprint(*res)\n", "import functools\nn = int(input())\n\nnums = list(map(int, input().split()))\n\nbits = [\"{0:b}\".format(num) for num in nums]\n\ndef possible(v):\n    possible_vals = [\n        nums[x]\n        for x in range(n)\n        if len(bits[x]) > v and bits[x][len(bits[x])-v-1] == '1'\n    ]\n    if len(possible_vals) == 0:\n        return False, []\n    res = functools.reduce((lambda x, y: x&y), possible_vals, pow(2, v+1)-1)\n    return bool(res & ((1 << (v+1))-1) == (1 << v)), possible_vals\n\nfor x in range(30, -1, -1):\n    p, vals = possible(x)\n    if p:\n        print(len(vals))\n        print(' '.join(list(map(str, vals))))\n        break"]