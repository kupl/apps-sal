["def main():\n\tn, k = map(int, input().split())\n\tfor i in range(1, k + 1):\n\t\tif (n % i != (i - 1)):\n\t\t\tprint(\"No\")\n\t\t\treturn\n\tprint(\"Yes\")\n\nmain()", "#! /usr/bin/env python3\n\nimport math\nimport sys\n\n\ndef lcm(u, v):\n    return u * v // math.gcd(u, v)\n\n\ndef main():\n    n, k = list(map(int, input().split()))\n    m = 1\n    for i in range(1, k + 1):\n        m = lcm(m, i)\n        if m - 1 > n:\n            print('No')\n            return\n    if (n + 1) % m == 0:\n        print('Yes')\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n, k = input().split()\nn, k = int(n), int(k)\n\nans = True\n\nn += 1\nfor i in range(1, min(100, k+1)):\n    if (n % i) != 0:\n        ans = False\n\nif ans:\n    print('Yes')\nelse:\n    print('No')\n", "n, k = input().split()\nn = int(n)\nk = int(k)\n\nif n < 0 or k < 0:\n    pass\nelse:\n    rem = []\n    found = False\n    for i in range(1, k+1):\n        check = n % i\n        if check in rem:\n            print(\"No\\n\")\n            found = True\n            break\n        rem.append(check)\n    if not found:\n        print(\"Yes\\n\")\n", "n, k = map(int, input().split())\nmas = []\nfor i in range(1, k + 1):\n    q = n%i\n    if q in mas:\n        print(\"No\")\n        return\n    else:\n        mas.append(q)\nprint(\"Yes\")", "n, k = map(int, input().split())\n\ns = set()\n\nfor i in range(1, k + 1):\n\tcur = n % i\n\tif cur in s:\n\t\tprint('No')\n\t\treturn\n\ts.add(cur)\n\nprint('Yes')", "import sys\n\n#f = open('input', 'r')\nf = sys.stdin\n\nn,k = list(map(int, f.readline().split()))\n\nans = 'Yes'\nfor tk in range(1, k+1):\n  if len(set(n%(i+1) for i in range(tk))) != tk:\n    ans = 'No'\n    break\n\nprint(ans)\n", "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b;\n\nn, k = list(map(int, input().split()))\ninf = 10 ** 18\nx = 1\n\nfor i in range(1, k + 1):\n    x = lcm(x, i)\n    if x > inf:\n        break\n\nif x > inf or n % x != x - 1:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n\n", "def remainderSet(n, k):\n    rem=set()\n    for i in range(1,k+1):\n        r=n%i\n        if r in rem:\n            return False\n        else:\n            rem.add(r)\n    return True\n\ndef test():\n    print(remainderSet(4,4))\n    print(remainderSet(5,3))\n\ndef nia():\n    s=input()\n    while len(s)==0:\n        s=input()\n    s=s.split()\n    iVal=[];\n    for i in range (len(s)):\n        iVal.append(int(s[i]))\n    return iVal\n\ndef solve():\n    arr=nia()\n    if remainderSet(arr[0], arr[1]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n        \nsolve()\n", "s=input()\ns=s.split()\nn=int(s[0])\nk=int(s[1])\nb=1\na=[]\nfor i in range(1,k+1):\n    c=n%i\n    a.append(c)\n    if c in a[:-1]:\n        print('No')\n        b=0\n        break\nif b==1:\n    print('Yes')\n", "n,k=list(map(int,input().split()))\nl=[]\nc=0\nfor i in range(1,k+1):\n    l.append(n%i)\n    p=set(l)\n    if len(p)!=len(l):\n        print (\"No\")\n        c=1\n        break\nif c==0:\n    print (\"Yes\")\n\n", "n, k = [int(i) for i in input().split()]\n\ns = set()\n\nfor i in range(1, k+1):\n    if n % i in s:\n        print(\"No\")\n        break\n    s.add(n % i)\nelse:\n    print(\"Yes\")", "n,k=list(map(int,input().split()))\na=set()\nfor i in range(1,k+1):\n    if n%i in a:\n        print('No')\n        return\n    else:\n        a.add(n%i)\nprint('Yes')\n", "n, k = list(map(int, input().split()))\n\nans = \"Yes\"\nfor i in range(2, k + 1):\n    if n % i != i - 1:\n        ans = \"No\"\n        break\n    elif 1e6 < i:\n        break\nprint(ans)\n", "n,k = list(map(int,input().split()))\n\nfor i in range(1,min(k+1,10000000)):\n    if n%i != i-1:\n        print('No')\n        break\nelse:\n    print('Yes')\n", "\ndef __starting_point():\n    n,k = input().strip().split()\n    n=int(n) ; k=int(k)\n    a = {}\n    for i in range(1,k+1):\n        if n%i in a:\n            print('No')\n            return\n        else:\n            a[n%i] = 1\n    print('Yes')\n__starting_point()", "n, k = list(map(int, input().split()))\nc = 1\nz = 1\nok = 1\n\nfor i in range(1, k + 1):\n    c = z\n    while z % i != 0:\n        z += c\n    if z > n + 10:\n        ok = 0\n        break\nif (n + 1) % z == 0 and ok:\n    print('Yes')\nelse:\n    print('No')\n", "from fractions import gcd\ndef lcm(a, b):\n    return (a // gcd(a, b)) * b\n    \nn, k = map(int, input().split())\nif k == 1:\n    print(\"Yes\")\n    return\nn1 = 1\nfor i in range(1, k + 1):\n    n1 = lcm(n1, i)\n    if n % n1 != n1 - 1:\n        print(\"No\")\n        return\nif n % n1 == n1 - 1:\n    print(\"Yes\")\n    return\nprint(\"No\")", "n, k = map(int, input().strip().split())\n\nif k == 1:\n    print('Yes')\nelse:\n    # k! - 1 must divide into n\n    '''\n        prod = 1\n    count = 2\n    while prod < n:\n        prod *= count\n        if n % (prod - 1) == 0 and count >= k:\n            #res = n // (prod - 1)\n            # note: existance means k must be really small\n            rems = [n % i for i in range(1, k + 1)]\n            #print(rems)\n            if len(set(rems)) == len(rems):\n                print('Yes')\n                break\n        count += 1\n    else:\n        print('No')\n    '''\n    if k > 50000:\n        print('No')\n    else:\n        rems = [n % i for i in range(1, k + 1)]\n        #print(rems)\n        print('Yes' if len(set(rems)) == len(rems) else 'No')"]