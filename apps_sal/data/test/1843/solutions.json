["from math import floor,log\nfor _ in range(int(input())):\n    n=int(input())\n    p=(n*(n+1))//2\n    f=floor(log(n,2))\n    p-=2*(2**(f+1)-1)\n    print(p)\n", "T = int(input())\nfor cas in range(T):\n    n = int(input())\n    res = n * (n + 1) // 2\n    for i in range(40):\n        if (1<<i) > n:\n            break\n        else:\n            res -= 2 * (1<<i)\n    print (res)", "def solve(n):\n    r = n*(n+1)//2\n    i = 1\n    while i <= n:\n        r -= i * 2\n        i *= 2\n    return r\n\nt = int(input())\nfor i in range(t):\n    print(solve(int(input())))\n", "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = 1\n    cnt = 0\n    while a <= n:\n        a *= 2\n        cnt += 1\n    print(n*(n + 1)//2 - 2 * (2**cnt - 1))\n    \n        \n    \n", "for _ in range(int(input())):\n    N = int(input())\n    ans = N * (N + 1) // 2\n    i = 1\n    while i <= N:\n        ans -= 2 * i\n        i <<= 1\n    print(ans)\n", "import math\nfrom decimal import *\nimport sys\nfrom fractions import Fraction\n\nT=int(input())\n\nfor j in range(0,T):\n\n    n = int(input())\n\n    t = 1\n    lt = 0\n    while 2*t <= n:\n        t*=2\n        lt+=1\n\n\n    n2 = Fraction(n*(n+1))/Fraction(2)\n    print(n2 - 2*(2*t-1))\n\n\n    \n    \n", "def sum_n(n):\n    return n*(n+1)//2\ndef main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    get = lambda :[int(x) for x in (f.readline() if mode==\"file\" else input()).split()]\n    [t]=get()\n    for z in range(t):\n        [n]=get()\n        hold = sum_n(n)\n        j = 1\n        while j<=n:\n            j = j<<1\n            hold-=j\n        print(hold)\n    \n\n\n    if mode==\"file\":f.close()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    sum = n * (n + 1) // 2\n    j = 0\n    while 2 ** j <= n:\n        sum -= (2 ** j) * 2\n        j += 1\n    print(sum)\n", "t = int(input())\nfor i in range(t):\n\tn = int(input())\n\tn1 = n\n\tq = 1\n\twhile n1 != 0:\n\t\tn1 = n1 // 2\n\t\tq *= 2\n\tq = q // 2\n\tprint(n * (n + 1) // 2 - 2 * (2 * q - 1))", "import math\n\ndef cal(val):\n    k = int(math.log2(val))\n    return (1 + val) * val // 2 - 2 * (2 ** (k + 1) - 1)\n\nN = int(input())\nfor i in range(N):\n    print(cal(int(input())))", "for t in range(int(input())):\n    n = int(input())\n    v, p2 = n * (n + 1) // 2, 1\n    while p2 <= n:\n        v -= 2 * p2\n        p2 *= 2\n    print(v)", "\"\"\"\nCodeforces Educational Round\n\nProblem 598 A Tricky Sum\n\n@author yamaton\n@date 2015-11-12\n\"\"\"\n\nimport itertools as it\nimport functools\nimport operator\nimport collections\nimport math\nimport sys\n\n\ndef solve(x):\n    simple_sum = x * (x + 1) // 2\n\n    pow = -1\n    while x > 0:\n        x >>= 1\n        pow += 1\n\n    sum_power_of_twos = 2**(pow + 1) - 1\n    return simple_sum - 2 * sum_power_of_twos\n\n\ndef p(*args, **kwargs):\n    return print(*args, file=sys.stderr, **kwargs)\n\ndef main():\n    t = int(input())\n    xs = [int(input()) for _ in range(t)]\n\n    results = [solve(x) for x in xs]\n    for res in results:\n        print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# import sys\n# sys.stdin = open('cf598a.in')\n\ndef smaller_power(n):\n\tcpow = -1\n\twhile n:\n\t\tn >>= 1\n\t\tcpow += 1\n\treturn 1 << cpow\n\nt = int(input())\n\nfor _ in range(t):\n\tn = int(input())\n\tsum_full = n * (n + 1) // 2\n\tsum_powers = (smaller_power(n) << 1) - 1\n\tprint(sum_full - (sum_powers << 1))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    result = n * (n + 1) // 2\n    j = 1\n    while j <= n:\n        result -= 2 * j\n        j *= 2\n    print(result)", "import math\nt = int(input())\nfor i in range(t):\n\tk = int(input())\n\tans = k * (k + 1) // 2\n\tpw = 2 ** (math.floor(math.log2(k)) + 1) - 1\n\tprint(ans - 2 * pw)", "T = int(input())\n\nfor t in range(T):\n    n = int(input())\n    sum = n * (n + 1) // 2\n    x = 1\n    while x <= n:\n        sum -= 2 * x\n        x *= 2\n    print(sum)\n", "def log2(n):\n    i = 1\n    while i <= n:\n        i *= 2\n    return i\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(n*(n+1)//2 - 2*(log2(n)-1))\n", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    summ = (n + 1) * (n // 2)\n    if (n % 2 != 0): summ += (n + 1) // 2\n    x = 1\n    while x <= n:\n        summ -= 2 * x\n        x *= 2\n    print(summ)\n", "n = int(input())\ndegs = [1]\ncur = 1\nwhile (cur < 1000000000):\n    cur *= 2\n    degs.append(cur)\nfor _ in range(n):\n    k = int(input())\n    ar = k * (k + 1) // 2\n    #print(ar)\n    pos = 0\n    while degs[pos] <= k:\n        pos += 1\n    geom = 2 ** pos - 1\n    #print(geom)\n    print(ar -2 * geom)\n", "def solve():\n    n = int(input())\n    sm = (1 + n) * n // 2\n    i = 1\n    while i <= 1073741824:\n        if i <= n:\n            sm -= 2*i\n        else:\n            break\n        i *= 2\n    print(sm)\nt = int(input())\nfor i in range(t):\n    solve()\n", "def main():\n    sm = 0\n    a = [ 2**i for i in range(31)]\n    t = int(input())\n    for j in range(t):\n        n = int(input())\n        sm = n * (n + 1) // 2\n        i = 0\n        while a[i] <= n:\n            sm-= 2*a[i]\n            i += 1\n        print(sm)\n\n\nmain()\n    \n", "t = int(input())\nfor _ in range(t):\n    inp = int(input())\n    print(inp * (inp + 1) // 2 - 2 * (2 ** (len(bin(inp)) - 2) - 1))\n", "T = int(input())\n\nfor _ in range(T):\n  N = int(input())\n  tmpN = N\n  p = 0\n  while tmpN > 0:\n    tmpN = tmpN >> 1\n    p += 1\n\n  x = N*(N+1)//2\n  y = (1 << (p+1))-2\n  print(x-y)", "from math import log2\nt = int(input())\n\nfor _ in range(t):\n\tn = int(input())\n\tk = int(log2(n))\n\tans = n * (n+1) // 2  # sum all from 1 to n\n\tans -= 2 * (2**(k+1) - 1)  # subtract twice sum of 2^n for n from 0 to k\n\n\tprint(ans)\n"]