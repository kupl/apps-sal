["import sys\nimport math\n\ndef factorization(n):\n    res = []\n    limit = math.ceil(math.sqrt(n))\n    p = 2\n    cnt = 0\n\n    while n % p == 0:\n        cnt += 1\n        n //= p\n\n    if cnt > 0:\n        res.append((p, cnt))\n\n    cnt = 0\n    for p in range(3, limit + 1, 2):\n        if n % p == 0:\n            while n % p == 0:\n                cnt += 1\n                n //= p\n\n            res.append((p, cnt))\n        cnt = 0\n\n    if n > 1:\n        res.append((n, 1))\n\n    return res\n\ndef divisor(n):\n    res = set()\n\n    factor = factorization(n)\n\n    for p, c in factor:\n        if res == set():\n            for i in range(c + 1):\n                res.add(p ** i)\n        else:\n            t = set()\n            for i in range(1, c + 1):\n                for m in res:\n                    t.add(m * p**i)\n            res = res | t\n\n    res = list(sorted(res))\n    return res\n\nn, k = map(int, input().split())\n\n# print(factorization(n), file=sys.stderr)\n# print(divisor(n), file=sys.stderr)\n\nn_div = divisor(n)\n\nif n == 1:\n    if k == 1:\n        ans = 1\n    else:\n        ans = -1\nelif k > len(n_div):\n    ans = -1\nelse:\n    ans = n_div[k - 1]\n\nprint(ans)", "import sys\nfrom math import sqrt, floor\nfrom collections import Counter\n\ndef factorize(n):\n    limit = floor(sqrt(n))\n    factor = Counter()\n\n    p = 2\n    while n % p == 0:\n        factor[p] += 1\n        n //= p\n\n    for p in range(3, limit + 1, 2):\n        while n % p == 0:\n            factor[p] += 1\n            n //= p\n    if n > 1:\n        factor[n] += 1\n\n    return factor\n\ndef make_divisors(n):\n    result = [1]\n\n    for p, e in factorize(n).items():\n        result = [x * p**i for i in range(e + 1) for x in result]\n\n    return sorted(result)\n\nn, k = map(int, input().split())\n\ndivisors = make_divisors(n)\n\nif k > len(divisors):\n    ans = -1\nelse:\n    ans = divisors[k - 1]\n\nprint(ans)"]