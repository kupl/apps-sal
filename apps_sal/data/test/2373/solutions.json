["import sys\ninput = sys.stdin.readline\nfrom collections import deque\n\n\ndef read():\n    N = int(input().strip())\n    P = list(map(int, input().strip().split()))\n    return N, P\n\n\ndef solve(N, P):\n    ans = 0\n    p = deque(P)\n    q = deque()\n    q.append(p.popleft())\n    for i in range(1, N):\n        if i == q[-1]:\n            c = q.pop()\n            q.append(p.popleft())\n            q.append(c)\n            ans += 1\n        else:\n            q.append(p.popleft())\n    if q[-1] == N:\n        c = q.pop()\n        d = q.pop()\n        q.append(c)\n        q.append(d)\n        ans += 1\n    return ans\n\n\ndef __starting_point():\n    inputs = read()\n    print((solve(*inputs)))\n\n__starting_point()", "n = int(input())\np = [int(x) for x in input().split()]\n\nans = 0\ncnt = 0\n'''\nindex = 0\nwhile index <= n-1:\n    if p[index] == index+1:\n        if p[index+1] != index+2:\n            index += 1\n        else:\n            index += 2\n        ans += 1\n    else:\n        index += 1\n'''\n\nfor i in range(n-1):\n    if p[i] == i+1:\n        p[i], p[i+1] = p[i+1], p[i]\n        cnt += 1\n\nif p[-1] == n:\n    cnt += 1\n\nprint(cnt)", "N = int(input())\nA = list(map(int,input().split()))\nans = 0\nls = []\nans = 0\nfor i in range(N):\n  if i == N-1:\n    if A[i] == i+1:\n      A[i],A[i-1] = A[i-1],A[i]\n      ans += 1\n  else:\n    if A[i] == i+1:\n      A[i],A[i+1] = A[i+1],A[i]\n      ans += 1\nprint(ans)", "n = int(input())\np = list(map(int,input().split()))\n\ncnt = 0\nmode = 0\nfor j in range(n):\n\tif mode == 0:\n\t\tif j+1 == p[j]:\n\t\t\tcnt += 1\n\t\t\tmode = 1\n\telse:\n\t\tmode = 0\n\nprint(cnt)", "n=int(input())\np=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n  q=p[i]\n  if p[i]==i+1:\n    p[i]=p[i+1]\n    p[i+1]=q\n    ans+=1\nif p[n-1]==n:\n  ans+=1\nprint(ans)", "N = int(input())\np = list(map(int, input().split()))\nans = 0\nfor i in range(N-1):\n  if p[i] == i+1:\n    p[i], p[i+1] = p[i+1], p[i]\n    ans += 1\nif p[N-1]==N:\n    ans+=1\nprint(ans)", "N=int(input())\np=list(map(int,input().split()))\n\ncount=0\nflag=0\nfor i in range(N):\n  if flag:\n    flag=0\n    continue\n  if p[i]==i+1:\n    count += 1\n    if i < N-1 and p[i+1]==i+2:flag=1\n      \nprint(count)", "#!/usr/bin/env python3\n\n# from numba import njit\n\n# input = stdin.readline\n\n# @njit\ndef solve(n,a):\n  checkarr = [\"o\" if a[i] != i+1 else \"x\" for i in range(n)]\n  res = 0\n  for i in range(n):\n    if checkarr[i] == \"x\":\n      res += 1\n      checkarr[i] = \"o\"\n      if i != n-1:\n        checkarr[i+1] = \"o\"\n  return res\n\n\n\ndef main():\n  N = int(input())\n  # N,M = map(int,input().split())\n  a = list(map(int,input().split()))\n  print((solve(N,a)))\n  return\n\ndef __starting_point():\n  main()\n\n__starting_point()", "n = int(input())\np = list(map(int,input().split()))\n\ncnt = 0\ntmp = [-1,-1]\nfor i in range(n):\n  if p[i] == i+1:\n    if i+1 == tmp[0]+1 and p[i]==tmp[1]+1:\n      cnt+=0\n      tmp = [-1, -1]      \n    else:\n      cnt+=1\n      tmp = [i+1,p[i]]\n#    print(p[i],tmp,cnt)\nprint(cnt)", "n=int(input())\np=list(map(int,input().split()))\ncnt=0\nfor i in range(n):\n    if i+1==p[i]:\n        if i<n-1:\n            p[i+1]=p[i]\n        cnt+=1\n    \nprint(cnt)\n\n", "N = int(input())\nA = list(map(int, input().split()))\ncnt = 0\nfor i, a in enumerate(A, 1):\n  if a == i:\n    if i != len(A):\n      x = A[i - 1]\n      y = A[i]\n      A[i - 1] = y\n      A[i] = x    \n      cnt += 1\n    else:\n      x = A[i - 2]\n      y = A[i - 1]\n      A[i - 2] = y\n      A[i - 1] = x    \n      cnt += 1\nprint(cnt)", "n = int(input())\np = list(map(int, input().split()))\ncount = 0\nfor i in range(n-1):\n    if p[i] - 1 == i:\n        count += 1\n        p[i] ,p[i + 1] = p[i + 1], p[i]\nif p[n - 1] - 1 == n - 1:\n    count += 1\nprint(count)", "import sys\n\ndef I(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef main():\n    n = I()\n    p = LI()\n    ans = 0\n    for i in range(1, n):\n        if p[i-1] == i:\n            temp = p[i-1]\n            p[i-1] = p[i]\n            p[i] = temp\n            ans += 1\n    if p[n-1] == n:\n        ans += 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "N=int(input())\np=list(map(int,input().split()))\ncount=0\nf=0\nfor i in range(N):\n    if f:\n        f=0\n        continue\n    if p[i]==i+1:\n        count+=1\n        f=1\nprint(count)", "N=int(input())\np=list(map(int,input().split()))\ntemp=1\nans=0\nfor i in range(N):\n    if p[i]==(i+1):\n        temp+=1\n    else:\n        if temp==1:\n            pass\n        else:\n            ans+=temp//2\n        temp=1\nans+=temp//2\n\nprint(ans)\n", "n = int(input())\np = list(map(int, input().split()))\n\nans = 0\nfor i in range(n-1):\n    if i+1 == p[i]:\n        tmp = p[i]\n        p[i] = p[i+1]\n        p[i+1] = tmp\n        ans += 1\n\nif n == p[n-1]:\n    tmp = p[n-1]\n    p[n-1] = p[n-2]\n    p[n-2] = tmp\n    ans += 1\n\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\nans = 0\nls = []\nans = 0\nfor i in range(N):\n  if i == N-1:\n    if A[i] == i+1:\n      A[i],A[i-1] = A[i-1],A[i]\n      ans += 1\n  else:\n    if A[i] == i+1:\n      A[i],A[i+1] = A[i+1],A[i]\n      ans += 1\nprint(ans)\n", "n=int(input())\np=list(map(int,input().split()))\nans=0\ncount=0\nfor i in range(n):\n  if p[i] == i+1:\n    ans+=1\n    count+=1\n  else:\n    count=0\n  if count==2:\n    ans-=1\n    count=0\nprint(ans)", "# \u524d\u304b\u3089\u9806\u756a\u306b\u5f8c\u308d\u306b\u5411\u3051\u3066swap\nn = int(input())\nps = list(map(int, input().split()))\n\ncnt = 0\nfor i in range(n-1):\n    if i + 1 == ps[i]:\n        tmp = ps[i]\n        ps[i] = ps[i+1]\n        ps[i+1] = tmp\n        cnt += 1\n# \u6700\u5f8c\u6b8b\u3063\u3066\u3044\u305f\u3089\u76f4\u524d\u3068swap\nif ps[n-1] == n:\n    cnt += 1\n\nprint(cnt)\n", "n = int(input())\np = [0] + list(map(int,input().split()))\nans = 0\nfor i in range(1,n+1):\n    if p[i]==i:\n        if i!=n:\n            tmp = p[i]\n            p[i] = p[i+1]\n            p[i+1] = tmp\n            ans += 1\n        else:\n            tmp = p[i]\n            p[i] = p[i-1]\n            p[i-1] = tmp\n            ans += 1\n#print(p[1:])\nprint(ans)\n", "n = int(input())\np = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    if p[i] == i+1:\n        if i == n-1:\n            ans += 1\n        else:\n            p[i],p[i+1], = p[i+1],p[i]\n            ans += 1\nprint(ans)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom functools import reduce\nfrom bisect import bisect_left, insort_left\nfrom heapq import heapify, heappush, heappop\n\nINPUT = lambda: sys.stdin.readline().rstrip()\nINT = lambda: int(INPUT())\nMAP = lambda: list(map(int, INPUT().split()))\nS_MAP = lambda: list(map(str, INPUT().split()))\nLIST = lambda: list(map(int, INPUT().split()))\nS_LIST = lambda: list(map(str, INPUT().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef main():\n    N = INT()\n    P = LIST()\n\n    P.append(-1)\n    cnt = 0\n    for i in range(N):\n        if P[i] == i + 1:\n            cnt += 1\n            P[i+1] = P[i]\n\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python\n\nn = int(input())\np = list(map(int, input().split()))\n\nans = 0 \ni = 0 \nwhile i<n:\n    if p[i] == i+1:\n        ans += 1\n        i += 2\n    else:\n        i += 1\n\nprint(ans)\n", "n = int(input())\n\na = list(map(int, input().split()))\nans = 0\nflag = False\nfor index, i in enumerate(a, start = 1):\n  target = i\n  if flag:\n    target = a[i-2]\n\n  if index == target:\n    ans += 1\n    flag = True\n  else:\n    flag = False\nprint(ans)", "\nurl = \"https://atcoder.jp//contests/abc072/tasks/arc082_b\"\n\ndef main():\n    n = input()\n    p = list(map(int, input().split()))\n    count = 0\n    for i, v in enumerate(p):\n        if i == len(p)-1 and i+1 == v:\n            count += 1\n            break\n        if i+1 == v:\n            p[i] = p[i+1]\n            p[i+1] = v\n            count += 1\n    print(count)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n=int(input())\np=list(map(int,input().split()))\n\nicnt=0\ni=0\nwhile i<n:\n    if p[i]==i+1:\n        if i<n-1 and p[i+1]==i+2:\n            icnt+=1\n            i+=1\n        else:\n            icnt+=1            \n    i+=1            \n\nprint(icnt)\n", "n = int(input())\np = list(map(int, input().split()))\n\nans = 0\nfor i in range(n-1):\n  if p[i] == i+1:\n    p[i],p[i+1] = p[i+1],p[i]\n    ans += 1\nif p[n-1] == n: ans += 1 # \u9806\u5217\u6700\u5f8c\u306e\u5024\u3092\u78ba\u8a8d\nprint(ans)", "N=int(input())\np=list(map(int,input().split()))\n\nans=0\nfor i in range(N-1):\n    if p[i]==i+1:\n        p[i],p[i+1]=p[i+1],p[i]\n        ans+=1\n\nif p[N-1]==N:\n    ans+=1\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\n# D - Derangement\ndef swap(index, swap_with_right):\n  nonlocal p\n\n  if swap_with_right:\n    l = index\n    r = index + 1\n  else:\n    l = index - 1\n    r = index\n\n  pl = p[l]\n  pr = p[r]\n  p[l] = pr\n  p[r] = pl\n\n\nN = int(input())\np = list(map(int, input().split()))\n\np.insert(0, 0)\nans = 0\n\nif p[1] == 1:\n  swap(1, True)\n  ans += 1\n\nfor i in range(2, N+1):\n\tif i < N:\n\t\tif i == p[i] and i+1 == p[i+1]:\n\t\t\tswap(i, True)\n\t\t\tans += 1\n\t\telif i == p[i]:\n\t\t\tans += 1\n\telif i == p[i]:\n\t\tans += 1\n\nprint(ans)", "n = int(input())\np = list(map(int, input().split()))\n\nfor i in range(n):\n    p[i] -= 1\n\nans = 0\nfor i in range(n-1):\n    if p[i] == i:\n        ans += 1\n        p[i], p[i+1] = p[i+1], p[i]\n\nif p[n-1] == n-1:\n    ans += 1\nprint(ans)\n", "# -*- coding: utf-8 -*-\nimport numpy as np\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\nimport heapq\nimport collections\nimport itertools\nimport bisect\nfrom scipy.special import comb\nimport copy\nsys.setrecursionlimit(10**6)\n\n\ndef zz():\n    return list(map(int, sys.stdin.readline().split()))\n\n\ndef z():\n    return int(sys.stdin.readline())\n\n\ndef S():\n    return sys.stdin.readline()[:-1]\n\n\ndef C(line):\n    return [sys.stdin.readline() for _ in range(line)]\n\n\nN = z()\nP = zz()\nchange_lis = []\nans = 0\nfor i in range(N-1):\n    if (P[i] == (i + 1)):\n        P[i], P[i+1] = P[i+1], P[i]\n        ans += 1\nif (P[-1] == N):\n    ans += 1\nprint(ans)\n", "n = int(input())\np = list(map(int,input().split()))\n\ncnt = 0\ntmp = -1\nfor i in range(n):\n  if p[i] == i+1:\n    if i+1 == tmp+1:\n      cnt+=0\n      tmp = -1     \n    else:\n      cnt+=1\n      tmp = i+1\nprint(cnt)", "N = int(input())\nP = list(map(int, input().split()))\n\nt = []\nfor i, p in enumerate(P):\n    if (i + 1) == p:\n        t.append(i)\n\nans = 0\nchecked = [False] * len(t)\nfor i in range(len(t)):\n    if checked[i]:\n        continue\n    if i + 1 < len(t) and t[i] + 1 == t[i + 1]:\n        checked[i] = True\n        checked[i + 1] = True\n    else:\n        checked[i] = True\n    ans += 1\nprint(ans)\n\n", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n = ini()\n    p = [x - 1 for x in inl()]\n    cnt = 0\n    i = 0\n    while i < n:\n        if i != p[i]:\n            i += 1\n        elif i + 1 < n and (i + 1) == p[i + 1]:\n            cnt += 1\n            i += 2\n        else:\n            cnt += 1\n            i += 1\n\n    return cnt\n\n\nprint(solve())\n", "n = int(input())\np = list(map(int, input().split()))\nnum_list = [0] * (n + 1)\n\nfor i in range(n):\n    if p[i] == i + 1:\n        num_list[p[i] - 1] = 1\n\ncounter = 0\nres = 0\nfor i in range(n + 1):\n    if num_list[i] == 1:\n        counter += 1\n    else:\n        res += (counter + 2 - 1) // 2\n        counter = 0\n\nprint(res)\n", "n=int(input())\np=list(map(int,input().split()))\nr=0\nans=0\nwhile r<n:\n  if p[r]==r+1:\n    ans+=1\n    r+=1\n  r+=1\n\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\nflg = False\nfor i in range(n):\n    if flg:\n        flg = False\n        continue\n    if a[i] == i+1:\n        if i < n-1 and a[i+1] == i+2:\n            ans += 1\n            flg = True\n        else:\n            ans += 1\nprint(ans)\n", "N = int(input())\nP = list(map(int,input().split()))\nans = 0\n\nfor n in range(N-1):\n  if P[n]==n+1 and P[n+1]==n+2:\n    ans+=1\n    P[n+1] = n+1\n  elif P[n]==n+1 and P[n+1]!=n+2:\n    ans+=1\n\nif P[-1]==N:\n  print(ans+1)\nelse:\n  print(ans)", "N=int(input())\nS=[]\nfor x,y in zip(map(int,input().split()), range(1,N+1)):\n if x==y: S.append(y)\n\nS.append('$')\nL=len(S)\n\nl=[S[0]]\ni=1\na=0\nwhile i<L:\n  if S[i]=='$':a+=1\n  elif l[0]+1!=S[i]:\n     a+=1\n     l=[S[i]]\n  else:l.append(S[i])\n  i+=1\nprint(a)", "N=int(input())\n*P,=map(int,input().split())\n\ni=c=0\nwhile i<N:\n  if P[i]==i+1:\n    c+=1\n    i+=1\n  i+=1\nprint(c)", "n = int(input())\nlis = [0]+list(map(int, input().split())) +[0]\n\ntotal = 0\n\nfor i in range(1, n+1):\n    if i == lis[i]:\n        t = lis[i]\n        lis[i] = lis[i+1]\n        lis[i+1] = t\n        total += 1\n\nprint(total)", "#!/usr/bin/env python\n\nn = int(input())\np = list(map(int, input().split()))\n\ndup = []\nfor i in range(n):\n    if i+1 == p[i]:\n        dup.append(0)\n    else:\n        dup.append(1)\n\nans = 0 \ni = 0 \nwhile i < n-1:\n    if dup[i] == dup[i+1] == 0:\n        ans += 1\n        i += 2\n    elif dup[i] == 0 and dup[i+1] == 1:\n        ans += 1\n        i += 2\n    else:\n        i += 1\n\nif i == n-1: \n    if dup[-1] == 0:\n        ans += 1\n\nprint(ans)\n", "n=int(input())\np=[int(x) for x in input().rstrip().split()]\n\ncnt=0\nfor i in range(n-1):\n  if p[i]==i+1:\n    now=p[i+1]\n    p[i+1]=p[i]\n    p[i]=now\n    cnt+=1\nif p[n-1]==n:\n  cnt+=1\n\nprint(cnt)\n", "n = int(input())\na = [int(x) for x in input().split()]\n \nres = 0\nfor i in range(n):\n  if a[i] == i+1:\n    res += 1\n    if i + 1 < n:\n      a[i+1] = 0\n\nprint(res)", "from collections import Counter\n\nn = int(input())\nP = [x-1 for x in map(int, input().split())]\n\nctr = Counter()\nseq = 0\nfor i, p in enumerate(P):\n    if i == p:\n        seq += 1\n    else:\n        ctr[seq] += 1\n        seq = 0\n\nctr[seq] += 1\n\nans = 0\nfor k, v in ctr.items():\n    ans += (k+1)//2 * v\n\nprint(ans)", "n = int(input())\npp = list(map(int, input().split()))\ncnt = 0\n\nfor i in range(n-1):\n  if pp[i] == i+1:\n    pp[i], pp[i+1] = pp[i+1], pp[i]\n    cnt += 1\n    \nif pp[-1] == n:\n  cnt += 1\n  \nprint(cnt)", "def main():\n    n = int(input())\n    ps = list(map(int, input().split()))\n    ans = 0\n    for i in range(n):\n        if ps[i] == i+1:\n            if ps[i] == n:\n                ps[i-1], ps[i] = ps[i], ps[i-1]\n            else:\n                ps[i], ps[i+1] = ps[i+1], ps[i]\n            ans += 1\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nls = list(map(int,input().split()))\ndi = []\nans = 0 \nnow = 0\nfor i in range(n):\n    if ls[i] == i+1:\n        now += 1\n    else:\n        if now != 0:\n            di.append(now)\n            now = 0\nif now != 0:\n    di.append(now)\nfor j in di:\n    if j % 2 == 0:\n        ans += j//2\n    else:\n        ans += (j//2) + 1\nprint(ans)\n", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nlast = -2\n\nfor i in range(n):\n    if p[i] == i+1:\n        if last == i-1:\n            cnt += 0\n            last = -2\n        else:\n            cnt += 1\n            last = i\n    else:\n        last = -2\n\nprint(cnt)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom bisect import bisect, bisect_left, bisect_right\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef S_MAP(): return list(map(str, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nL = LIST()\ncnt = 0\ntmp = 0\ni = 0\n# for i, a in enumerate(L):\nwhile i < N:\n    if L[i] == i + 1:\n        cnt += 1\n        i += 1\n    i += 1\nprint(cnt)\n    \n\n", "N = int(input())\nP = list(map(int, input().split()))\ncnt = 0\ni = 0\nwhile i <= N-1:\n    if i == N-1 and P[i] == i+1:\n        cnt += 1\n    elif P[i] == i+1 and P[i+1] == i+2:\n        cnt += 1\n        i += 1\n    elif P[i] == i+1:\n        cnt += 1\n    i += 1\nprint(cnt)\n", "N=int(input())\np=list(map(int,input().split()))\n\nans=0\ni=0\nwhile i<N:\n    if p[i]==i+1:\n        ans+=1\n        i+=2\n    else:\n        i+=1\nprint(ans)\n", "N = int(input())\np = list(map(int,input().split()))\ncnt = 0\nbol = 0\nfor i in range(N-1):\n    if bol == 1:\n        bol = 0\n        continue\n    if p[i] == i+1 and p[i+1] == i+2:\n        cnt += 1\n        bol = 1\n    elif p[i] == i+1:\n        cnt += 1\nif bol == 0 and p[N-1] == N:\n    cnt += 1\nprint(cnt)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom functools import reduce\nfrom bisect import bisect_left, insort_left\nfrom heapq import heapify, heappush, heappop\n\nINPUT = lambda: sys.stdin.readline().rstrip()\nINT = lambda: int(INPUT())\nMAP = lambda: list(map(int, INPUT().split()))\nS_MAP = lambda: list(map(str, INPUT().split()))\nLIST = lambda: list(map(int, INPUT().split()))\nS_LIST = lambda: list(map(str, INPUT().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef main():\n    N = INT()\n    P = LIST()\n\n    P.append(-1)\n    cnt = 0\n    i = 0\n    while i < N:\n        if P[i] == i + 1:\n            cnt += 1\n            i += (P[i+1] == i + 2)\n        i += 1\n\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\n\ninint = lambda: int(sys.stdin.readline())\ninintm = lambda: map(int, sys.stdin.readline().split())\ninintl = lambda: list(inintm())\ninstrm = lambda: map(str, sys.stdin.readline().split())\ninstrl = lambda: list(instrm())\n\nn = inint()\nP = inintl()\n\nans = 0\n\nfor i in range(n-1):\n    a = P[i]\n    b = P[i+1]\n    if a == i+1:\n        P[i] = b\n        P[i+1] = a\n        ans += 1\n\nif P[-1] == n:\n    ans += 1\n\nprint(ans)", "n = int(input())\nm = [i for i in range(1,n)]\np = list(map(int,input().split()))\ncnt = 0\nfor i in m:\n    if p[i-1] == i:\n        p[i-1] = p[i]\n        p[i] = i\n        cnt += 1\n\nif p[-1] == n:\n    cnt += 1\nprint(cnt)", "N=int(input())\np=list(map(int,input().split()))\ncnt = 0\nans = 0\nfor i in range(1,len(p)+1):\n    if i == p[i-1]:\n        cnt += 1\n    elif cnt == 1:\n        ans += 1\n        cnt = 0\n    if cnt == 2:\n        ans += 1\n        cnt = 0\nif cnt == 1:\n    ans += 1\nprint(ans)", "def main():\n    n = int(input())\n    p = [int(pn) for pn in input().split()]\n    ans = 0\n    is_changed = False\n    for i in range(n):\n        if is_changed:\n            is_changed = False\n        elif p[i] == i + 1:\n            is_changed = True\n            ans += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nP = list(map(int,input().split()))\n\nls = [\"\"] * N\ncnt = 0\n\nfor i in range(N):\n  if P[i] == i + 1:\n    ls[i] = \"#\"\n  else:\n    ls[i] = \".\"\n    \nif ls[-1] == \"#\":\n  if ls[-2] == \"#\":\n    ls[-1], ls[-2] = \".\", \".\"\n  else:\n    ls[-1] = \".\"\n  cnt += 1\n\nfor j in range(N-1):\n  if ls[j] == \"#\":\n    if ls[j+1] == \"#\":\n      ls[j+1] = \".\"\n    cnt += 1\n    \nprint(cnt)", "input()\ncnt, ans = 0, 0\nfor i, p in enumerate(map(int, input().split()), start=1):\n    if i == p:\n        cnt += 1\n    else:\n        ans += (cnt + 1) // 2\n        cnt = 0\nelse:\n    ans += (cnt + 1) // 2\nprint(ans)", "n=int(input())\nP=list(map(int,input().split()))\nans=0\ni=0\nwhile i<n:\n    if P[i]==i+1:\n        ans+=1\n        i+=2\n    else:\n        i+=1\n\nprint(ans)", "\nN = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\n\nfor i in range(len(p)):\n    if p[i] == i+1:\n        if p[i] == N:\n            p[i-1], p[i] = p[i], p[i-1]\n        else:\n            p[i], p[i+1] = p[i+1], p[i]\n        cnt += 1\n\nprint(cnt)\n", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nincreased = False\nfor i in range(n):\n    if increased:\n        increased = False\n        continue\n\n    if p[i] == i+1:\n        cnt += 1\n        i += 1\n        increased = True\n\nprint(cnt)", "N = int(input())\nA = list(map(int,input().split()))\n\ncnt = 0\nfor i in range(N-1):\n    if A[i] == i+1:\n        A[i],A[i+1] = A[i+1],A[i]\n        cnt += 1\n        i += 1\nif A[N-1]==N:\n    cnt += 1\nprint(cnt)", "from itertools import count\nwith open(0) as f:\n    N, *p = map(int, f.read().split())\np.append(N+1)\nans = 0\nfor i in count(0):\n    if i == N:\n        break\n    if p[i] == i+1:\n        p[i] = p[i+1]\n        p[i+1] = i+1\n        ans += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\n\nl = [0] * (n + 1)\nfor i in range(n):\n    if a[i] == i + 1:\n        l[i] = 1\ncount = 0\nfor i in range(n):\n    if l[i] == 1:\n        l[i] = 0\n        l[i + 1] = 0\n        count += 1\nprint(count)", "n = int(input())\np = list(map(int, input().split()))\ntotal = 0\ncnt = 0\nfor idx, value in enumerate(p, start=1):\n    if idx == value:\n        cnt += 1\n    elif idx != value and cnt != 0:\n        if cnt % 2 == 1:\n            total += cnt // 2 + 1\n        else:\n            total += cnt // 2\n        cnt = 0\nif cnt % 2 == 1:\n    total += cnt // 2 + 1\nelse:\n    total += cnt // 2\nprint(total)", "def main():\n    n = int(input())\n    p_lst = list(map(int, input().split()))\n    count = 0\n\n    tmp = 0\n    for i in range(n):\n        p = p_lst[i]\n\n        if p == (i + 1):\n            if tmp == 1:\n                tmp = 0\n            else:\n                count += 1\n                tmp += 1\n        else:\n            tmp = 0\n\n    print(count)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\narr = list(map(int, input().split()))\nans = 0\nfor i in range(n-1):\n    if arr[i] == i + 1:\n        ans += 1\n        arr[i+1], arr[i] = arr[i], arr[i+1]\nif arr[n-1] == n:\n    ans += 1\nprint (ans)   ", "import math\nn = int(input())\nP = list(map(int, input().split()))\n\nsame = 0\ncnt = 0\nfor i in range(n):\n    if P[i] == i+1:\n        same += 1\n    else:\n        cnt += math.ceil(same/2)\n        same = 0\n\nif same > 0:\n    cnt += math.ceil(same/2)\n\nprint(cnt)", "import math\n\nn = int(input())\np = [x- 1 for x in map(int, input().split())]\n\ncnt, flag = 0, 0\nans = 0\nfor i in range(n):\n    if p[i] == i and flag:\n        cnt += 1\n    elif p[i] == i:\n        cnt += 1\n        flag = 1\n    elif p[i] != i and flag:\n        if cnt == 1:\n            ans += 1\n        else:\n            ans += math.ceil(cnt/2)\n\n        cnt, flag = 0, 0\nif flag:\n    if cnt == 1:\n        ans += 1\n    else:\n        ans += math.ceil(cnt/2)\n\nprint(ans)", "import math\nn = int(input())\np = list(map(int, input().split()))\nc = 0\ns = []\nfor i in range(n):\n  if p[i] == i+1:\n    c +=1\n  else:\n    if c>0:\n      s.append(c)\n      c = 0\nif c > 0:\n  s.append(c)\nans = 0\nfor i in s:\n  if i == 1:\n    ans += 1\n  else:\n    ans += math.ceil(i/2)\nprint (ans)", "import sys\nread=sys.stdin.read\n\nn,*p=map(int,read().split())\np.append(-1)\ncl=[]\nf=0\nfor i in range(n+1):\n  if p[i]==i+1:\n    if f==0:\n      cl.append(1)\n      f=1\n    else:\n      cl[-1]+=1\n  else:\n    if f==1:\n      cl[-1]=cl[-1]//2+(cl[-1]%2)\n    f=0\n\nprint(sum(cl))", "n = int(input())\np = list(map(int, input().split()))\n\nans = 0\nfor i in range(n-1):\n  if i+1 == p[i]:\n    p[i],p[i+1] = p[i+1],p[i]\n    ans += 1\nif n == p[-1]: ans += 1\nprint(ans)", "n=int(input())\nc=list(map(int, input().split()))\nans = 0\n\nfor i in range(n-1):\n    if c[i] == i+1 :\n        c[i],c[i+1]= c[i+1],c[i]\n        ans += 1\nif c[n-1] == n:\n    ans += 1\nprint(ans)", "N = int(input())\n\np = list(map(int, input().split()))\n\nres = 0\n\nif p[0] == 1:\n    p[0] = p[1]\n    p[1] = 1\n    res += 1\n\nif p[N - 1] == N:\n    p[N - 1] = p[N - 2]\n    p[N - 2] = N\n    res += 1\n\n\nfor i in range(1, N - 1):\n    if p[i] == i + 1:\n        p[i + 1] = i + 1\n        res += 1\n\nprint(res)", "def main():\n    N = int(input())\n    P = list(map(int, input().split()))\n    cnt = 0\n    for i in range(N - 1):\n        if P[i] == i + 1:\n            cnt += 1\n            P[i + 1], P[i] = P[i], P[i + 1]\n    if P[N - 1] == N:\n        cnt += 1\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nP = list(map(int, input().split()))\nli = [0]*n\ncnt = 0\nfor i in range(n):\n    if P[i]==i+1:\n        li[i]=1\n        cnt += 1\nfor i in range(n-1):\n    if li[i+1] and li[i]:\n        li[i+1] = 0\n        li[i] = 0\n        cnt -= 1\nprint(cnt)\n", "import math\nn=int(input())\na=list(map(int,input().split()))\n\nl=\"\".join([\"o\" if i+1==a[i] else \"x\" for i in range(n)])\nsl=l.split(\"x\")\nss=[len(x) for x in sl]\nans=[math.ceil(i/2) for i in ss]\nprint(sum(ans))", "def solve():\n  N = int(input())\n  P = list(map(int, input().split()))\n  ans = 0\n  i = 1\n  while i<=N:\n    if i==P[i-1]:\n      ans += 1\n      i += 1\n    i += 1\n  return ans\nprint(solve())", "n = int(input())\np = list(map(int,input().split()))\ncnt_1 = 0\ncnt_2 = 0\nTF = False\nfor i in range(n):\n    if (i + 1) == p[i]:\n        if TF:\n            TF = False\n            cnt_2 += 1\n            cnt_1 -= 1\n        else:\n            TF = True\n            cnt_1 += 1\n    else:\n        TF = False\nprint(cnt_1 + cnt_2)", "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nP = LIST()\n\nP.append(-1)\n\nans = 0\ni = 0\n\nwhile i < N:\n    if P[i] == i+1:\n        ans += 1\n        if P[i+1] == i+2:\n            i += 1\n    i += 1\n\nprint(ans)\n", "#59 D - Derangement\nN = int(input())\nP = list(map(int,input().split()))\n\ncnt = 0\nfor i,j in enumerate(P):\n    if (i+1) == j and i == N-1:\n        P[i-1],P[i] = P[i],P[i-1]\n        cnt += 1\n        continue\n    if (i+1) == j:\n        P[i+1],P[i] = P[i],P[i+1]\n        cnt += 1\nprint(cnt)", "import sys,math,collections,itertools\ninput = sys.stdin.readline\n\nN=int(input())\np=list(map(int,input().split()))\npa = []\ncnt = 0\nfor i in range(N):\n    if i+1 == p[i]:\n        cnt +=1\n    elif i+1 != p[i] and cnt>0:\n        pa.append(cnt)\n        cnt =0\nif cnt >0:\n    pa.append(cnt)\ncnt = 0\nfor cn in pa:\n    cnt += cn//2+cn%2\nprint(cnt)\n", "N = int(input())\nP = [int(x) for x in input().split()]\n\nans = 0\nfor i in range(N-1):\n    if P[i] == i+1:\n        temp = P[i]\n        P[i] = P[i+1]\n        P[i+1] = temp\n        ans += 1\nif P[N-1] == N:\n        ans += 1\nprint(ans)", "N = int(input())\np = list(map(int,input().split()))\nans = 0\nfor i in range(N):\n    if p[i] == i+1:\n        if i != N-1 and p[i+1] == i+2:\n            p[i+1] = p[i]\n        ans += 1\nprint(ans)", "N = int(input())\nP = list(map(int, input().split()))\nans = 0\nfor i in range(N):\n    if i == N-1:\n        if P[i] == i+1:\n            ans +=1\n        break\n    a, b = P[i], P[i + 1]\n    if a == i + 1:\n        ans += 1\n        P[i] = b\n        P[i + 1] = a\nprint(ans)\n", "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN = INT()\nP = LIST()\n\nP.append(-1)\n\n## pattern 1\n# ans = 0\n# i = 0\n#\n# while i < N:\n#     if P[i] == i+1:\n#         ans += 1\n#         if P[i+1] == i+2:\n#             i += 1\n#     i += 1\n#\n# print(ans)\n\n## pattern 2\nans = 0\ni = 0\nfor i in range(N):\n    if P[i] == i+1:\n        P[i], P[i+1] = P[i+1], P[i]\n        ans += 1\n\nprint(ans)\n", "N = int(input())\nP = list(map(int,input().split()))\n\nans = 0\n\nif P[-1] == N:\n  ans += 1\n  P[-1] = -1\n  if P[-2] == N - 1:\n    P[-2] = -1\n\nfor i in range(N-1):\n  if P[i] == i + 1:\n    ans += 1\n    if P[i+1] == i + 2:\n      P[i+1] = -1\n      \nprint(ans)", "N = int(input())\nP = list(map(int,input().split()))\nfor i in range(N):\n  if P[i] == i+1:\n    P[i] = True\n  else:\n    P[i] = False\nans = 0\nfor i in range(N):\n  if P[i]:\n    ans+=1\n    if i+1 < N and P[i+1]:\n      P[i+1] = False\nprint(ans)", "N=int(input())\nP=map(int,input().split())\nS=[]\nfor x,y in zip(P, range(1,N+1)):\n    if x==y: S.append(y)\n\nS.append('$')\nL=len(S)\n\nlake=[]\nlake.append(S[0])\ni=1\na=0\nwhile i<L:\n    if S[i]=='$':\n     a+=1\n    elif lake[0]+1!=S[i]:\n     a+=1\n     lake=[]\n     lake.append(S[i])\n    else:\n     lake.append(S[i])\n    i+=1\nprint(a)", "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i,p in enumerate(l):\n    if i+1==p:\n        if i!=n-1:\n            l[i+1]=p\n        c+=1\nprint(c)\n", "def main():\n    N = int(input())\n    p = list(map(int, input().split()))\n    ans = 0; cnt = 0\n    for i, q in enumerate(p):\n        if q == i + 1:\n            cnt += 1\n            if cnt == 3:\n                cnt = 1\n                ans += 1\n        else:\n            if cnt == 0:\n                continue\n            cnt = 0\n            ans += 1\n    if cnt in [1, 2]:\n        ans += 1\n    print(ans)\n        \ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nls = list(map(int,input().split()))\nii = 0\nfor i in range(N-1):\n    if i+1 == ls[i]:\n        ii += 1\n        ls[i+1] = 0\nif N == ls[N-1]:\n    ii +=1\nprint(ii)", "n = int(input())\np = list(map(int, input().split()))\n\ncnt = 0\nincreased = False\n\nfor i in range(n):\n    if increased:\n        increased = False\n\n    elif p[i] == i+1:\n        cnt += 1\n        increased = True\n\nprint(cnt)\n", "n = int(input())\nP = list(map(int, input().split()))\n\nCnt = []\ncnt = 0\nans = 0\nfor idx, p in enumerate(P, 1):\n    if idx == p:\n        Cnt.append(idx)\n        cnt += 1\n    else:\n        cnt = 0\n    if cnt == 2:\n        ans -= 1\n        cnt = 0\n\nans += len(Cnt)\nprint(ans)", "N = int(input())\nA = list(map(int,input().split()))\nans = 0\nfor i in range(N-1):\n  if A[i] == i + 1:\n    ans += 1\n    A[i+1] = A[i]\nif A[-1] == N:\n  ans += 1\nprint(ans)", "N = int(input())\nP = list(map(int,input().split()))\nc = 0\n\nfor n in range(N-1):\n  if P[n]==n+1:\n    P[n],P[n+1] = P[n+1],P[n]\n    c+=1\n\nif P[-1]==N:\n  print(c+1)\nelse:\n  print(c)", "def __starting_point():\n    N = int(input())\n    P = list(map(int, input().split()))\n    ans = 0\n    for i in range(N-1):\n        if P[i] == i+1:\n            tmp = P[i]\n            P[i] = P[i+1]\n            P[i+1] = tmp\n            ans += 1\n    if P[-1] == N:\n        tmp = P[-1]\n        P[-1] = P[-2]\n        P[-2] = tmp\n        ans += 1\n    print(ans)\n\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\n\ncount = 0\n\nfor i in range(N):\n    realnum = int(i+1)\n    \n    if A[i] == realnum:\n        if A[i] == N:\n            A[i-1],A[i] = A[i],A[i-1]\n        else:\n            A[i],A[i+1] = A[i+1],A[i]\n        \n        count = count + 1\n\nprint(count)\n"]