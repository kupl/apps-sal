["n = int(input())\na = [[], []]\na[0] = list(map(int, input().split()))\na[1] = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = float('+inf')\nfor i in range(n):\n\tfor j in range(n):\n\t\tif i == j:\n\t\t\tcontinue\n\t\tcur = sum(a[1][i:]) + sum(a[0][:i]) + sum(a[0][:j]) +  sum(a[1][j:]) + b[i] + b[j]\n\t\tans = min(ans, cur)\nprint(ans)\n", "n = int(input())\na1 = [int(v) for v in input().split()]\na2 = [int(v) for v in input().split()]\nb = [int(v) for v in input().split()]\n\ndef make_prefixes(a):\n\tpref = [0, a[0]]\n\tfor v in a[1:]:\n\t\tpref.append(pref[-1] + v)\n\treturn pref\n\nprefa1 = make_prefixes(a1)\nprefa2 = make_prefixes(a2)\n\ncrosstimes = [prefa1[i] + b[i] + (prefa2[-1] - prefa2[i]) for i in range(n)]\ncrosstimes.sort()\n\nprint(crosstimes[0] + crosstimes[1])", "n = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = None\ntopBottom = sum(a2)\nfor i in range(n):\n    bottomTop = sum(a2)\n    for j in range(n):\n        if j != i:\n            cur = topBottom + b[i] + bottomTop + b[j]\n            ans = cur if ans == None else min(ans, cur)\n        if (j < n - 1):\n            bottomTop = bottomTop + a1[j] - a2[j]\n    if i < n - 1:\n        topBottom = topBottom + a1[i] - a2[i]\nprint(ans)\n", "n = int(input())\nmas1=list(map(int,input().split(\" \")))\nmas2=list(map(int,input().split(\" \")))\nmas3=list(map(int,input().split(\" \")))\nsum1=0\nsum2=sum(mas2)\nres=list()\nfor i in range(n):\n    res.append(sum1+sum2+mas3[i])\n    if i<n-1:\n        sum2-=mas2[i]\n        sum1+=mas1[i]\nres.sort()\nprint(res[0]+res[1])", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nN = int(input())\n\nA1s = list(map(int,input().split()))\nA2s = list(map(int,input().split()))\nBs = list(map(int,input().split()))\n\nscores = []\nscore = 0\nfor n in range(N):\n    if n == 0:\n        score = Bs[0] + sum(A2s)\n    else:\n        score -= Bs[n-1]\n        score += Bs[n]\n        score -= A2s[n-1]\n        score += A1s[n-1]\n    scores.append(score)\nscores.sort()\nprint(sum(scores[:2]))\n\n", "n=int(input())\na=list(map(int,input().split(' ')))\nb=list(map(int,input().split(' ')))\ncr=list(map(int,input().split(' ')))\nval=[]\nfor i in range(n):\n    val.append(sum(a[0:i])+cr[i]+sum(b[i::]))\nval.sort()\nprint(val[0]+val[1])", "import sys\nread = lambda: list(map(int, sys.stdin.readline().split()))\nn, = read()\na0s = read()\na1s = read()\nbs = read()\nbest = 10**8\nfor i in range(n):\n   for j in range(i+1, n):\n      res = sum(a0s[:i]) + sum(a0s[:j]) \\\n            + bs[i] + bs[j] \\\n            + sum(a1s[i:]) + sum(a1s[j:])\n      #print(i, j, res)\n      if res < best:\n         best = res\n\nprint(best)\n\n", "n = int(input())\na1 = [int(i) for i in input().split(\" \")]\na2 = [int(i) for i in input().split(\" \")]\nb = [int(i) for i in input().split(\" \")]\n\nres = 1111111111111;\nfor i in range(0, n):\n\tfor j in range (i+1, n):\n\t\t# print(i, j)\n\t\ttmp = b[i] + b[j] + sum(a1[:i]) + sum(a2[i:]) + sum(a1[:j]) + sum(a2[j:]);\n\t\tif (tmp < res):\n\t\t\tres = tmp;\nprint(res)", "n = int(input())\na1 = [int(x) for x in input().split()]\na2 = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\n\nbest, best_cross = float('inf'), -1\n\nfor i in range(n):\n\ttmp = sum(a1[:i]) + sum(a2[i:]) + b[i]\n\n\tif tmp < best:\n\t\tbest = tmp\n\t\tbest_cross = i\n\nbest2 = float('inf')\nfor i in range(n):\n\tif i == best_cross: continue\n\n\ttmp = sum(a1[:i]) + sum(a2[i:]) + b[i]\n\n\tif tmp < best2:\n\t\tbest2 = tmp\n\nprint(best + best2)\n", "def read_numbers():\n    return list(map(int, input().split()))\n\n\ndef f(n, a1, a2, b):\n    ways = [sum(a1[:h]) + b[h] + sum(a2[h:]) for h in range(n)]\n    ways.sort()\n    return sum(ways[:2])\n\n\ndef __starting_point():\n    n = int(input())\n    a1 = read_numbers()\n    a2 = read_numbers()\n    b = read_numbers()\n    print(f(n, a1, a2, b))\n\n__starting_point()", "n = int(input())\na = []\nfor _ in range(2):\n    a.append(list(map(int, input().split())))\n\nb = list(map(int, input().split()))\n\nans = []\nfor i, e in enumerate(b):\n    ans.append(e + sum(a[0][:i]) + sum(a[1][i:]))\n\nprint(sum(sorted(ans)[0:2]))\n", "#!/usr/bin/env python\n\nfrom sys import stdin\n\nn = int(stdin.readline())\na1 = [int(x) for x in stdin.readline().split()]\na2 = [int(x) for x in stdin.readline().split()]\nb = [int(x) for x in stdin.readline().split()]\n\ncum1 = a1[:]\ncum2 = a2[:]\nfor i in range(1, n - 1):\n    cum1[i] += cum1[i-1]\nfor i in range(n - 3, -1, -1):\n    cum2[i] += cum2[i+1]\n\nmin1, min2 = 1000000, 1000000\nfor i in range(n):\n    c = b[i]\n    if i:\n        c += cum1[i-1]\n    if i < n-1:\n        c += cum2[i]\n\n    if c <= min1:\n        min2 = min1\n        min1 = c\n    elif c < min2:\n        min2 = c\n\nprint(min1 + min2)", "n = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = []\nk = 0\nfor i in range(2):\n    c.append([0] * n)\nc[1][0] = b[0]\nfor i in range(1, n):\n    c[0][i] = c[0][i - 1] + a1[i - 1]\n    if c[1][i - 1] + a2[i - 1] > c[0][i] + b[i]:\n        k = i\n    c[1][i] = min(c[1][i - 1] + a2[i - 1], c[0][i] + b[i])\nans = 0\nans += c[-1][-1]\nb[k] = 1000\nc = []\nfor i in range(2):\n    c.append([0] * n)\nc[1][0] = b[0]\nfor i in range(1, n):\n    c[0][i] = c[0][i - 1] + a1[i - 1]\n    c[1][i] = min(c[1][i - 1] + a2[i - 1], c[0][i] + b[i])\nans += c[-1][-1]\nprint(ans)\n", "n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\ns = [int(x) for x in input().split()]\np1 = [0]\nfor i in range(n - 1):\n    p1.append(p1[-1] + a[i])\np2 = [0]\nfor i in range(n - 1):\n    p2.append(p2[-1] + b[-i - 1])\nmin1 = 10000000\nmin2 = 10000000\nfor i in range(n):\n    summ = p1[i] + p2[n - i - 1] + s[i]\n    if summ < min1:\n        min2 = min1\n        min1 = summ\n    elif summ < min2:\n        min2 = summ\nprint(min1 + min2)", "n = int(input())\ntop = [0]\nbot = [0]\ntop += [int(i) for i in input().split()]\nbot += [int(i) for i in input().split()]\ncross = [int(i) for i in input().split()]\n\nfor i in range(1,n):\n    top[i] += top[i-1]\n    bot[i] += bot[i-1]\n\nbest = 11111111111111;\nbest2 = 11111111111111;\n\nfor i in range(n):\n    dist = top[i] + cross[i] + (bot[n-1] - bot[i])\n    if dist < best2:\n        if dist <= best:\n            best2 = best\n            best = dist\n        else:\n            best2 = dist\n\nprint(best+best2)\n", "n=int(input())\nf=[0]+list(map(int,input().split()))\ns=list(map(int,input().split()))+[0]\na=list(map(int,input().split()))\nl=sorted([sum(f[:i+1])+a[i]+sum(s[i:]) for i in range(n)])\nprint(l[0]+l[1])\n", "N=int(input())\nA=list(map(int, input().split()))\nB=list(map(int, input().split()))\nC=list(map(int, input().split()))\ncost = [[0],[0]]\nfor i in range(N-1):\n    cost[0].append(cost[0][i]+A[i])\n    cost[1].append(cost[1][i]+B[N-2-i])\ncost[1].reverse()\nmin_cost = 99999999999\nmin_i=-1\nfor i in range(N):\n    if min_cost > cost[0][i]+cost[1][i]+C[i]:\n        min_cost = cost[0][i]+cost[1][i]+C[i]\n        min_i = i\nmin_cost2 = 99999999999\nfor i in range(N):\n    if min_cost2 > cost[0][i]+cost[1][i]+C[i] and i!=min_i:\n        min_cost2 = cost[0][i]+cost[1][i]+C[i]\n\nprint(min_cost+min_cost2)\n", "n = int(input())\nrow1 = list(map(int, input().split()))\nrow2 = list(map(int, input().split()))\nvert = list(map(int, input().split()))\nlo = float('inf')\nres = 0\nfirstcross = 0\nsecondcross = 0\nfor i in range(n):\n    #print(\"i\", i)\n    cur = vert[i]\n    cur += sum(row2[i:])\n    cur += sum(row1[:i])\n    #print(cur)\n    if cur < lo:\n        firstcross = i\n        lo = cur\n#print(\"cross\", firstcross)\nres += lo\nlo = float('inf')\nfor i in range(n):\n    #print(\"i\", i)\n    cur = vert[i]\n    for j in range(i):\n        #print(\"j row1\", j)\n        cur += row1[j]\n    for j in range(i, n-1):\n        #print(\"j row2\", j)\n        cur += row2[j]\n    #print(cur)\n    if cur < lo and i != firstcross:\n        lo = cur\n        secondcross = i\n#print(\"cross\", secondcross)\n        \nres += lo\nprint(res)\n        \n", "n = int(input())\na1 = list(map(int, input().split()))\na2 = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\npref1 = [0] * n\nfor i in range(1, n):\n    pref1[i] = pref1[i - 1] + a1[i - 1]\npref2 = [0] * n\nfor i in range(1, n):\n    pref2[i] = pref2[i - 1] + a2[i - 1]\npost2 = [sum(a2)] * n\nfor i in range(n):\n    post2[i] -= pref2[i]\n\nminimum = -1\nfor i in range(n):\n    for j in range(n):\n        if j != i:\n            if minimum == -1:\n                minimum = pref1[i] + post2[i] + b[i] + pref1[j] + post2[j] + b[j]\n            else:\n                minimum = min(pref1[i] + post2[i] + b[i] + pref1[j] + post2[j] + b[j], minimum)\nprint(minimum)\n", "n = int(input())\nH1 = list(map(int, input().split()))\nH2 = list(map(int, input().split()))\nav = list(map(int, input().split()))\nans = []\nfor i in range(n - 1):\n    ans.append(sum(H1[:i]) + av[i] + sum(H2[i:]))\nans.append(sum(H1) + av[-1])\nans.sort()\nprint(ans[0] + ans[1])\n", "n = int(input())\n\nshop_row = [0] + list(map(int, input().split()))\nhouse_row = list(map(int, input().split())) + [0]\nperek = list(map(int, input().split()))\n\nfor i in range(len(house_row) - 2, -1, -1):\n    house_row[i] += house_row[i + 1]\nfor i in range(1, len(shop_row)):\n    shop_row[i] += shop_row[i - 1]\nrez = [None] * n\nfor i in range(n):\n    rez[i] = house_row[i] + shop_row[i] + perek[i]\nrez.sort()\n\nif len(rez) > 1:\n    print(rez[0] + rez[1])\nelse:\n    print(rez[0] + rez[0])\n\n\n\n", "n = int(input())\na1 = list(map(int, input().split(' ')[:n-1]))\na2 = list(map(int, input().split(' ')[:n-1]))\nb = list(map(int, input().split(' ')[:n]))\n\nx1 = 0\nx2 = b[0]\ncross = 0\n\nfor i in range(1, n):\n    x1 = x1 + a1[i-1]\n    cross_way = x1 + b[i]\n    pass_way = x2 + a2[i-1]\n    if cross_way < pass_way:\n        cross = i\n        x2 = cross_way\n    else:\n        x2 = pass_way\n\nb[cross] = float(\"inf\")\nw1 = x2\n\nx1 = 0\nx2 = b[0]\n\nfor i in range(1, n):\n    x1 = x1 + a1[i-1]\n    cross_way = x1 + b[i]\n    pass_way = x2 + a2[i-1]\n    x2 = min(cross_way, pass_way)\n\nprint(w1 + x2)\n", "__author__ = 'Om Kumar Sahoo'\nn=int(input())\nfirst=[0]+[int(x) for x in input().split()]\nsecond=[int(x) for x in input().split()]+[0]\nst=[int(x) for x in input().split()]\nfirsts=[0]*n\nseconds=[0]*n\nfor i in range(1,n):\n    firsts[i]=firsts[i-1]+first[i]\nfor i in range(n-2,-1,-1):\n    seconds[i]=seconds[i+1]+second[i]\ntime=[0]*n\nfor i in range(n):\n    time[i]=firsts[i]+seconds[i]+st[i]\nm1=min(time)\ntime.remove(m1)\nm2=min(time)\nprint(m1+m2)", "n = int(input())\nup = [int(item)  for item in input().split()]\ndown = [int(item)  for item in input().split()]\nj = [int(item)  for item in input().split()]\ntime = 0\nmas = []\nfor idx in range(n - 1, -1, -1):\n    mas.append(j[idx] + sum([n for n in up[0:idx]]) + sum([n for n in down[idx:]]))\nmas.sort()\nprint(mas[0] + mas[1])", "N=int(input())\nx=[[0]*N,[0]*N]\na=list(map(int,input().split()))\nadash=[0]\nfor i in range(N-1):\n    adash.append(adash[-1]+a[i])\nb=list(map(int,input().split()))\nbdash=[0]\nfor i in range(N-1):\n    bdash.append(bdash[-1]+b[i])\nc=list(map(int,input().split()))\nkachra=[]\nfor i in range(N):\n    kachra.append(adash[i]+c[i]+bdash[-1]-bdash[i])\nkachra.sort()\nprint(kachra[0]+kachra[1])\n"]