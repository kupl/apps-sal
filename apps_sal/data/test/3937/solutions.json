["'''\nCreated on Aug 28, 2016\n\n@author: Md. Rezwanul Haque\n'''\ndef gcd(a,b):\n    if b == 0:\n        return a \n    return gcd(b, a%b) \ndef extend_euclid(a,b):\n    if b == 0:\n        return 1,0 \n    else:\n        y,x = extend_euclid(b, a%b)\n        y = y - (a//b)*x\n        return x,y \n\nn,m,k = map(int,input().split())\na = list(map(int,input().split()))\n\nlcm = 1\nfor i in a:\n    lcm = (lcm*i)//gcd(lcm, i)\n    if lcm>n:\n        print('NO')\n        return\nj = 0\nm1 = 1\ns = True\nfor i in range(k):\n    x,y = extend_euclid(m1, a[i])\n    res = m1*x + a[i]*y \n    if (-i-j)%res != 0:\n        s = False\n        break\n    res = (-i-j)//res \n    x,y = x*res , y*res \n    j += m1*x \n    t = m1*a[i]\n    if j>t:\n        j -= (j//t)*t \n    if j<0:\n        j += ((-j+t-1)//t)*t \n    if j == 0:\n        j = t \n    m1 = (m1*a[i])//gcd(m1, a[i])\n    \nif j+k-1 >m or s == False:\n    print('NO')\n    return\nb = [gcd(lcm, j+i) for i in range(k)]\nfor i in range(k):\n    if (a[i] != b[i]):\n        print('NO')\n        return\nprint('YES')", "def gcd(a,b):\n\tif a<b:\n\t\tc=b\n\t\tb=a\n\t\ta=c\n\twhile b!=0:\n\t\tt=b\n\t\tb=a%b \n\t\ta=t\n\treturn int(a)\ndef extendedEuclides(a,b):\n\txx=y=0\n\tyy=x=1\n\twhile b!=0:\n\t\tq=int(a/b)\n\t\tt=b\n\t\tb=a%b\n\t\ta=t\n\t\tt=xx\n\t\txx=x-q*xx\n\t\tx=t\n\t\tt=yy\n\t\tyy=y-q*yy\n\t\ty=t\n\treturn [a,x,y]\ndef chineseRemainder(x,y,a,b):\n\t[d,s,t]=extendedEuclides(x,y)\n\tif(a%d!=b%d):\n\t\treturn [0,-1]\n\treturn [int(((s*b*x+t*a*y)%(x*y))/d),x*y/d]\n[n,m,k]=input().split(' ')\nn=eval(n)\nm=eval(m)\nk=eval(k)\narr=list(map(int,input().split(' ')))\nI=1\nfor el in arr:\n\tI=I*(el/gcd(I,el))\n\tif I>n:\n\t\tbreak\nif I==1:\n\tprint(\"YES\")\nelif I>n:\t\n\tprint(\"NO\")\nelse:\n\tcan=1\n\tauxI=I\n\tfat=[]\n\toccur=[]\n\tfor i in range(2,1010000):\n\t\tif auxI%i==0:\n\t\t\tv=1\n\t\t\twhile auxI%i==0:\n\t\t\t\tv=v*i\n\t\t\t\tfat.append(v)\n\t\t\t\toccur.append(-1)\n\t\t\t\tauxI=int(auxI/i)\n\tif auxI>1:\n\t\tfat.append(auxI)\n\t\toccur.append(-1)\n\tfor i,x in enumerate(fat):\n\t\tfor j in range(0,min(k,x)):\n\t\t\tif(gcd(arr[j],x)==x):\n\t\t\t\toccur[i]=j\n\t\tif occur[i]==-1:\n\t\t\tcan=0\n\tfor i,x in enumerate(fat):\t\t\n\t\tfor j in range(0,k):\n\t\t\tif ((gcd(arr[j],x)!=x and j%x==occur[i])or(gcd(arr[j],x)==x and j%x!=occur[i])):\n\t\t\t\tcan=0\n\tI=1\n\tJ=1\n\tlrem=0\n\tfor i,x in enumerate(fat):\n\t\trem=(x-occur[i])%x\n\t\tg=gcd(I,x)\n\t\tauxI=I*int(x/g)\n\t\txxx=chineseRemainder(I,x,lrem%I,rem)\n\t\tlrem=xxx[0]\n\t\tI=auxI\n\t\t#print(lrem,rem,x,I)\n\tif lrem==0:\n\t\tlrem=I\n\tif int(lrem)>m-k+1:\n\t\tcan=0\n\tif can==0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n# 1491583140056\n", "def gcd(a,b):\n\tif a<b:\n\t\tc=b\n\t\tb=a\n\t\ta=c\n\twhile b!=0:\n\t\tt=b\n\t\tb=a%b \n\t\ta=t\n\treturn int(a)\ndef extendedEuclides(a,b):\n\txx=y=0\n\tyy=x=1\n\twhile b!=0:\n\t\tq=int(a/b)\n\t\tt=b\n\t\tb=a%b\n\t\ta=t\n\t\tt=xx\n\t\txx=x-q*xx\n\t\tx=t\n\t\tt=yy\n\t\tyy=y-q*yy\n\t\ty=t\n\treturn [a,x,y]\ndef chineseRemainder(x,y,a,b):\n\t[d,s,t]=extendedEuclides(x,y)\n\tif(a%d!=b%d):\n\t\treturn [0,-1]\n\treturn [int(((s*b*x+t*a*y)%(x*y))/d),x*y/d]\n[n,m,k]=input().split(' ')\nn=eval(n)\nm=eval(m)\nk=eval(k)\narr=list(map(int,input().split(' ')))\nI=1\nfor el in arr:\n\tI=I*(el/gcd(I,el))\n\tif I>n:\n\t\tbreak\nif I==1:\n\tprint(\"YES\")\nelif I>n:\t\n\tprint(\"NO\")\nelse:\n\tcan=1\n\tauxI=I\n\tfat=[]\n\toccur=[]\n\tfor i in range(2,1010000):\n\t\tif auxI%i==0:\n\t\t\tv=1\n\t\t\twhile auxI%i==0:\n\t\t\t\tv=v*i\n\t\t\t\tfat.append(v)\n\t\t\t\toccur.append(-1)\n\t\t\t\tauxI=int(auxI/i)\n\tif auxI>1:\n\t\tfat.append(auxI)\n\t\toccur.append(-1)\n\tfor i,x in enumerate(fat):\n\t\tfor j in range(0,min(k,x)):\n\t\t\tif(gcd(arr[j],x)==x):\n\t\t\t\toccur[i]=j\n\t\tif occur[i]==-1:\n\t\t\tcan=0\n\tfor i,x in enumerate(fat):\t\t\n\t\tfor j in range(0,k):\n\t\t\tif ((gcd(arr[j],x)!=x and j%x==occur[i])or(gcd(arr[j],x)==x and j%x!=occur[i])):\n\t\t\t\tcan=0\n\tI=1\n\tJ=1\n\tlrem=0\n\tfor i,x in enumerate(fat):\n\t\trem=(x-occur[i])%x\n\t\tg=gcd(I,x)\n\t\tauxI=I*int(x/g)\n\t\txxx=chineseRemainder(I,x,lrem%I,rem)\n\t\tlrem=xxx[0]\n\t\tI=auxI\n\t\t#print(lrem,rem,x,I)\n\tif lrem==0:\n\t\tlrem=I\n\tif int(lrem)>m-k+1:\n\t\tcan=0\n\tif can==0:\n\t\tprint('NO')\n\telse:\n\t\tprint('YES')\n\n# 1491583330722\n"]