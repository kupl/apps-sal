["n = int(input())\nx = 0\ncur = 1\nlst = 1\nwhile cur + lst <= n:\n    cur, lst = cur + lst, cur\n    x += 1\nprint(x)\n", "n=int(input())\na,b=1,1\nans=0\nwhile b<=n:\n    a,b=b,a+b\n    ans+=1\nprint(ans-1)\n", "from math import *\nfrom sys import *\nfrom queue import *\nfrom decimal import *\n\nn=int(input())\nf2=1\nf3=2\ni=0\nwhile f3<=n:\n  i+=1\n  f2,f3=f3,f2+f3\nprint(i)  ", "n = int(input())\nprev, cur = 1, 2\niters = 0\nwhile (cur < n):\n    prev, cur = cur, cur + prev\n    iters += 1\nans = iters + bool(cur == n)\nprint(ans)", "def solve(n):\n    k = 0\n    f1, f2 = 1, 2\n    while not f1 <= n < f2:\n        k += 1\n        t = f1\n        f1 = f2\n        f2 = f1 + t\n    return k\n\nn = int(input())\nprint(solve(n))\n", "n = int(input())\n\ndp = {1: 2, 2: 3}\n\ndef cost(i):\n    if i not in dp:\n        dp[i] = cost(i-1) + cost(i-2)\n    return dp[i]\n\nans = 1\n\nwhile cost(ans) <= n:\n    ans += 1\n\nprint(ans-1)\n", "# You lost the game.\n\nn = int(input())\n\nT = {}\n\n\nT[1] = 2\nT[2] = 3\nT[3] = 5\nT[4] = 8\n\nt = 1\nr = 0\nwhile r < 4 and t <= n:\n    r += 1\n    t = T[r]\n    \nwhile t <= n:\n    r += 1\n    t += T[r-2]\n    T[r] = t\n    \nprint(r-1)\n", "from sys import stdin\nfrom sys import stdout\nn = int(stdin.readline().strip())\n\nm = 1\na = 1\nb = 2\nwhile b < n:\n    m += 1\n    a, b = b, a+b\nif b > n:\n    m -= 1\nstdout.write(str(m))\n", "a = int(input())\nfib=[1,2]\nfor i in range(100):\n    fib.append(fib[-1]+fib[-2])\n\nfor i in range(1, 1000):\n    if fib[i]<=a<fib[i+1]:\n        print(i)\n        quit()", "n=int(input())\nif n==2:\n    print(1)\nelse:\n    ans=3\n    oldans=2\n    count=2\n    b=0\n    while ans<=n:\n        if ans==n:\n            b=1\n            print(count)\n            break\n        else:\n            oldans,ans=ans,ans+oldans\n            count+=1\n    if b==0:\n        print(count-1)\n        \n            \n", "n = int(input())\n\nl = []\nl.append(0)\nl.append(1)\nl.append(2)\n\nk = 2\nm = 1\n\nwhile k < n:\n    k = k + l[m]\n    m = m + 1\n    l.append(k)\n    \nif k > n:\n    m = m - 1\n\nprint(m)", "n = int(input())\nfib = [1, 2]\nfor i in range(2, 10000):\n    fib.append(fib[i - 1] + fib[i - 2])\nl = 0\nr = 10000\nwhile (r - l > 1):\n    mid = (r + l) // 2\n    if (fib[mid] > n):\n        r = mid\n    else:\n        l = mid\nprint(l)", "def h(z):\n  a = 0\n  b = 1\n  res = 1\n  while True:\n    a, b = b, a + b + 1\n    if b >= z:\n      break\n    res += 1  \n  return res\n  \nn = int(input())\nprint(h(n))  ", "n = int(input())\ngames = n - 1\nmassiv = [2]\nwhile massiv[-1] <= games:\n    if len(massiv) == 1:\n        massiv += [4]\n    else:    \n        massiv += [massiv[-1] + massiv[-2] + 1]\nprint(len(massiv))    ", "from math import *\n\ndef main():\n    n=int(input())\n    prev,fib=1,2\n    count=0\n    while fib<=n:\n        prev,fib=fib,prev+fib\n        count+=1\n    print(count)\n    \nmain()\n", "def cost(nk):\n    \n    ns = max(0, k - 1)\n    if ns > n - 2:\n        return 0\n    \n    return f(n - ns - 1, k + 1) + 1\n\n\nn = int(input())\nF = [0] * 100\nF[0] = 1\nF[1] = 2\nans = 1\n\nfor i in range(2, 100):\n    F[i] = F[i - 1] + F[i - 2]\n    if F[i] <= n:\n        ans = i\n        \nprint(ans)", "n = int(input())\n\nif n == 2:\n\tprint(1)\nelif n == 3:\n\tprint(2)\nelse:\n\tx = 2\n\ty = 3\n\tcounter = 0\n\twhile x+ y <= n:\n\t\tx, y = y, x+y\n\t\tcounter += 1\n\tprint(2+counter)", "n = int(input())\nf = [1, 1]\nwhile f[-1] < n:\n\tf += [f[-1] + f[-2]]\nif f[-1] == n:\n\tprint(len(f) - 2)\nelse:\n\tprint(len(f) - 3)", "n = int(input())\n\nlst1 = 1\nlst2 = 1\n\ncnt = 0\n\nwhile (True):\n    cnt += 1\n    lst1, lst2 = lst2, lst1\n    if (lst1 + lst2 == n):\n        print(cnt)\n        return\n    if (lst1 + lst2 > n):\n        print(cnt - 1)\n        return\n    lst2 = lst1 + lst2", "n = int(input())\nf = []\nans = 1\nf.append(1)\nf.append(2)\nwhile f[ans] < n:\n    f.append(f[ans] + f[ans - 1])\n    ans += 1\nif f[ans] == n:\n    print(ans)\nelse:\n    print(ans - 1)", "a = []\na.append(1)\na.append(1)\nn = int(input())\nif (n == 2):\n    print(1)\n    return\ni = 2\nwhile(1):\n    a.append(a[i - 1] + a[i - 2])\n    if (a[i] >= n):\n        print(i - 2 + int(a[i] == n))\n        break\n    i += 1", "import math,sys,re,itertools,pprint,collections,copy\nrs,ri,rai,raf=input,lambda:int(input()),lambda:list(map(int, input().split())),lambda:list(map(float, input().split()))\n\nt = [2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946,\n17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309,\n3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141,\n267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049,\n12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717,\n365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842,\n10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994,\n190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050,\n3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685,\n37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585,\n420196140727489673, 679891637638612258, 1100087778366101931, 1779979416004714189, 2880067194370816120,\n4660046610375530309, 7540113804746346429]\n\nn = ri()\n\nfor i in range(len(t)):\n    if n < t[i]:\n        print(i)\n        break\n", "n = int(input())\n\nf = 2\ng = 1\nc = 0\n\nwhile f <= n:\n\tf, g = f+g, f\n\tc += 1\n\nprint(c)", "def tennis(n):\n    u,v = 1,2\n    j = 1\n    while v <= n:\n        u,v = v, u+v\n        j += 1\n    return j-1\n\nprint(tennis(int(input())))\n", "fmap = lambda f, l: list(map(f, l))\nparse_int = lambda: fmap(int, input().split())\n\nDEBUG = False#True#\n\n\nn = int(input())\n\ncost_of = [0, 1, 2, 4, 7, 12, 20, 33, 54, 88, 143, 232, 376, 609, 986, 1596, 2583, 4180, 6764, 10945, 17710, 28656, 46367, 75024, 121392, 196417, 317810, 514228, 832039, 1346268, 2178308, 3524577, 5702886, 9227464, 14930351, 24157816, 39088168, 63245985, 102334154, 165580140, 267914295, 433494436, 701408732, 1134903169, 1836311902, 2971215072, 4807526975, 7778742048, 12586269024, 20365011073, 32951280098, 53316291172, 86267571271, 139583862444, 225851433716, 365435296161, 591286729878, 956722026040, 1548008755919, 2504730781960, 4052739537880, 6557470319841, 10610209857722, 17167680177564, 27777890035287, 44945570212852, 72723460248140, 117669030460993, 190392490709134, 308061521170128, 498454011879263, 806515533049392, 1304969544928656, 2111485077978049, 3416454622906706, 5527939700884756, 8944394323791463, 14472334024676220, 23416728348467684, 37889062373143905, 61305790721611590, 99194853094755496, 160500643816367087, 259695496911122584, 420196140727489672, 679891637638612257, 1100087778366101930, 1779979416004714188]\n\nfor i in range(len(cost_of)):\n    if cost_of[i]>n-1: break\nprint(i-1)\n"]