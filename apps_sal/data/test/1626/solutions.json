["import math\n\nn, k = [int(x) for x in input().split()]\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nc = 1\nfor i in range(n // k):\n    count = (10 ** k - 1) // a[i] + 1\n    mmin = b[i] * (10 ** (k-1))\n    mmax = (b[i] + 1) * (10 ** (k-1)) - 1\n    mcount = mmax // a[i] - math.ceil(mmin / a[i]) + 1\n    c = (c * (count - mcount)) % ((10 ** 9) + 7)\n\nprint(c)\n", "n, k = map(int, input().split())\nAs = list(map(int, input().split()))\nBs = list(map(int, input().split()))\n\ndef solve(n, k, As, Bs):\n    mod = 10 ** 9 + 7\n    c = 1\n    for a, b in zip(As, Bs):\n        c *= f(a, b, k, mod)\n        c %= mod\n    return c\n\ndef f(a, b, k, mod):\n    total = (10 ** k - 1) // a + 1\n    p = ((b + 1) * (10 ** (k-1)) - 1) // a\n    q = (b * (10 ** (k-1)) - 1) // a\n    return (total - p + q) % mod\n\n\nprint(solve(n, k, As, Bs))", "# import sys\n# n = int(input())\n# s = input().strip()\n# a = [int(tmp) for tmp in input().split()]\n# for i in range(n):\nn, k = [int(tmp) for tmp in input().split()]\na = [int(tmp) for tmp in input().split()]\nb = [int(tmp) for tmp in input().split()]\nBIG = 10 ** 9 + 7\nm = n // k\nans = [0] * m\nfor i in range(m):\n    ans[i] = (10 ** k + a[i] - 1) // a[i]\n    x = 10 ** (k - 1) * b[i] % a[i]\n    if x != 0:\n        ans[i] -= (10 ** (k - 1) + x + a[i] - 1) // a[i] - 1\n    else:\n        ans[i] -= (10 ** (k - 1) + x + a[i] - 1) // a[i]\nall_ans = 1\nfor i in range(m):\n    all_ans = (all_ans * ans[i]) % BIG\nprint(all_ans)", "from math import ceil\nfrom math import floor\n\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nln = n // k\np = 1\nmod = 1000000007\n\nfor i in range(ln):\n    tmp = (10 ** k - 1) // a[i] + 1\n    l = ceil(b[i] * (10 ** (k - 1)) / a[i])\n    r = floor(((b[i] + 1) * (10 ** (k - 1)) - 1) / a[i])\n    tmp -= r - l + 1\n    p = (p * tmp) % mod\n\nprint(p)\n\n", "\"\"\"\nCodeforces Round #330 (Div. 2)\n\nProblem 595 B\n\n@author yamaton\n@date 2015-11-08\n\"\"\"\n\nimport itertools as it\nimport functools\nimport operator\nimport collections\nimport math\nimport sys\n\nBASE = 1000000007\n\ndef count(k, a, b):\n    x = count_multiples(a, 0, 10**k-1)\n    y = count_multiples(a, b * 10**(k-1), (b + 1) * 10**(k-1) - 1)\n    return  x - y\n\n\ndef count_multiples(a, _from, _to):\n    if _from == 0:\n        return _to // a - (_from - 1) // a\n    else:\n        return _to // a - (_from - 1) // a\n\n\ndef solve(xs, ys, n, k):\n    result = 1\n    for (a, b) in zip(xs, ys):\n        result = (result * count(k, a, b)) % BASE\n    return result\n\ndef main():\n    [n, k] = [int(i) for i in input().strip().split()]\n    xs = [int(i) for i in input().strip().split()]\n    ys = [int(i) for i in input().strip().split()]\n    assert len(xs) == len(ys) == n // k\n    result = solve(xs, ys, n, k)\n    print(result)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nn, k = sys.stdin.readline().split()\nn = int(n)\nk = int(k)\n\na = [int(x) for x in sys.stdin.readline().split()]\nb = [int(x) for x in sys.stdin.readline().split()]\n\nMOD = (10 ** 9) + 7\nres = 1\n\nfor i in range(0, n // k):\n\tlo =  b[i]      * (10 ** (k - 1)) - 1\n\tup = (b[i] + 1) * (10 ** (k - 1)) - 1\n\ttmp = ( ((10 ** k) - 1) // a[i]) - (up // a[i]) + (lo // a[i]) + 1\n\tres = res * tmp\n\tres = res % MOD\n\nprint(res)", "def get_multypler(k, a, b):\n    res = (10 ** k - 1) // a + 1\n    bad_residue = (a - ((10 ** (k - 1)) * b) % a) % a\n    suf = (10 ** (k - 1)) - 1\n    minus = suf // a + (1 if (bad_residue <= suf % a) else 0)\n    return res - minus\n\n\n\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 1\nfor i in range(n // k):\n    ans *= get_multypler(k, a[i], b[i])\n    ans %= 10 ** 9 + 7\n\nprint(ans)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\nMM = 1000000007\n\ndef func(a, b, k):\n    if b == 0:\n        return(divmod(10**k-1, a)[0]-divmod(10**(k-1)-1, a)[0])\n    else:\n        return(divmod(10**k-1, a)[0]-divmod((b+1)*10**(k-1)-1, a)[0]+divmod(b*10**(k-1)-1, a)[0])+1\n\n(n, k) = (int(i) for i in input().split())\na      = [int(i) for i in input().split()]\nb      = [int(i) for i in input().split()]\n\nstart = time.time()\n\ns = 1\nfor i in range(divmod(n, k)[0]):\n    s *= func(a[i], b[i], k)\n    s = divmod(s, MM)[1]\n\n\nprint(s)\nfinish = time.time()\n#print(finish - start)\n", "n, k = [int(i) for i in input().split()]\nsum = 1\na = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nfor i in range(n // k):\n    if n == 0:\n        x = (10 ** k - 1) // a[i] - ((b[i] + 1) * 10 ** (k-1) - 1) // a[i]\n    else:\n        x = (10 ** k - 1) // a[i] - ((b[i] + 1) * 10 ** (k-1) - 1) // a[i] + (b[i] * 10 ** (k-1) - 1) // a[i] + 1\n    sum *= x\n    sum %= 10 ** 9 + 7\nprint(sum)\n", "from math import ceil\n\nn,k = list(map(int,input().split()))\n\narr1 = list(map(int,input().split()))\narr2 = list(map(int,input().split()))\n\np = 10**k\n\nans = 1\n\nfor i in range(n//k):\n    x,y = arr1[i],arr2[i]\n    a,b = y * 10**(k - 1),(y + 1) * 10**(k - 1)\n    ans *= ceil(p / x) - (ceil(b / x) - ceil(a / x))\n    ans %= 10**9 + 7\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nt = 10 ** (k - 1)\nres = 1;\nq = 10 ** 9 + 7\nfor i in range(n // k):\n    res1 = (((t * 10) - 1) // a[i] + 1) % q;\n    z = ((t * b[i]) - 1) // a[i] + 1\n    if (b[i] == 0):\n        z = 0\n    x = (((t * b[i] + t - 1) // a[i])) + 1\n    res1 = (res1 - x + z) % q\n    res = (res * res1) % q\nprint(res)\n", "from math import *\nN, K = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 1\nM = 10**9 + 7\np = 10**K - 1\nu = 10**(K - 1)\nfor i in range(N // K):\n    ans *= (p // a[i] + 1 - ((u * (b[i] + 1) + a[i] - 1) // a[i] - (b[i] * u + a[i] - 1) // a[i]))\n    ans %= M\nprint((ans + M) % M)", "n,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nanswer = list()\n\nfor i in range(n//k):\n    res = 0\n    m = '1'+'0'*k\n    m = int(m)-1\n    q = str(b[i]) + '9' * (k-1)\n    q = int(q)\n    c = str(b[i]-1) + '9' * (k-1)\n    c = int(c)\n    c = max(c,-1)\n    #print(m,q,c)\n    res = (m//a[i]+1) - q//a[i] + c//a[i]\n    answer.append(res)\n\nresa = 1\n#print(answer)\nif sum(answer)==0:\n    print(0)\nelse:\n    for i in answer:\n        resa = (resa*i)%1000000007\n    print(resa)", "n, k = list(map(int, input().split()))\nara = list(map( int, input().split()))\narb = list(map( int, input().split()))\nsum1 = 1;\np_k = 10**k\np_k1 = 10**(k - 1)\np_k2 = 10**(k - 2)\nM = 10**9 + 7\nfor i in range(n // k):\n    k = 0\n    if (p_k % ara[i] == 0):\n        k = -1\n    if ((arb[i] + 1) * p_k1 % ara[i] == 0):\n        k = k + 1\n    if ((arb[i]) * p_k1 % ara[i] == 0):\n        k = k - 1\n    sum1 *= p_k // ara[i] - p_k1 * (arb[i] + 1) // ara[i] + p_k1 * (arb[i]) // ara[i] + k + 1\n    #first = p_k1 * arb[i] // ara[i] * (ara[i] + 1)\n    #print(p_k // ara[i] + k + 1, p_k1 * (arb[i] + 1) // ara[i], p_k1 * (arb[i]) // ara[i])\n    #sum1 *= p_k // ara[i] + 1 - p_k1 // first\n    \n    sum1 = sum1 % M\nprint(sum1 % (10**9+7))\n", "import math\nn,k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\n\ndef calc_ans(k,a,b):\n\tdiv = (10**k-1)//a + 1\n\t\n\tb_min = b*10**(k-1)\n\tb_max = (b+1)*10**(k-1) - 1\n\n\n\td_min_inc = math.ceil(b_min/a)\n\td_max_inc = math.floor(b_max/a)\n\t# if d_min_inc*a > b_max:\n\t# \treturn div\n\t# else:\n\n\n\t# print (k,a,b,div,div - (d_max_inc - d_min_inc + 1))\n\n\treturn div - (d_max_inc - d_min_inc + 1)\n\np = 10**9 + 7\n\nans = 1\nfor ai,bi in zip(a,b):\n\tans = (ans*calc_ans(k, ai, bi)) % p\n\nprint(ans)\n\ndef easy_calc(k,a,b):\n\tans = 0\n\tfor i in range(10**k):\n\t\tc = str(i)\n\t\tfirst = int(c[0]) if len(c) == k else 0\n\t\tif i%a == 0 and not first==b:\n\t\t\tans += 1\n\treturn ans\n\n# import random\n# for i in range(100):\n# \tk = random.randrange(4,5)\n# \ta = random.randrange(1,10**k)\n# \tb = random.randrange(0, 10)\n# \tif easy_calc(k,a,b) != calc_ans(k,a,b):\n# \t\tprint(k,a,b, easy_calc(k,a,b), calc_ans(k,a,b))\n# \t\t1/0\n", "s=input()\nast=s.split(' ')\nn,k=int(ast[0]),int(ast[1])\ns=input()\na=[int(i) for i in s.split(' ')]\ns=input()\nb=[int(i) for i in s.split(' ')]\nL=n//k\np=10**k\nr=10**(k-1)\nrez=1\nfor i in range(L):\n    cnt=0\n    if b[i]>0:\n        cnt+=(b[i]*r-1)//a[i]\n        cnt+=(p-1)//a[i]\n        cnt-=((b[i]+1)*r-1)//a[i]\n        rez*=cnt+1\n    else:\n        cnt+=(p-1)//a[i]\n        cnt-=(r-1)//a[i]\n        rez*=cnt\n    rez=rez%(10**9+7)\nprint(rez)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = n//k\nans = 1\nfor i in range(c):\n    t_ans = ((10**k - 1)//a[i]+1) + (b[i]*10**(k-1))//a[i] - ((b[i]+1)*10**(k-1))//a[i]\n    if (b[i]*10**(k-1))%a[i] == 0:\n        t_ans -= 1\n    if ((b[i]+1)*10**(k-1))%a[i] == 0:\n        t_ans += 1    \n    ans *= t_ans\n    ans = ans%(10**9 +7)\nprint(ans)\n    \n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn,k = list(map(int,input().split()))\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\nans = 1\n\nfor i in range(n//k):\n    count = 1 + (10**k - 1)//A[i]\n    count -= (10**(k-1) * (B[i] + 1) - 1) // A[i] - (10**(k-1) * B[i] - 1) // A[i]\n\n    ans = ans * count % (10**9 + 7)\n\nprint(ans)\n", "n,k = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nmod = 1000000007\nans = 1\nfor x in range(0,n//k):\n    po = 10**(k-1)\n    p = c[x]*po\n    q = (c[x]+1)*po\n    res = 0\n    if p%b[x] == 0:\n        res -= 1\n    if q%b[x] == 0:\n        res += 1\n    if (po*10)%b[x] == 0:\n        res -= 1\n    res += 1\n    res += 10*po//b[x] - q//b[x] + p//b[x]\n    ans = ((ans%mod)*(res%mod))%mod\nprint(ans)\n", "p = 10**9+7\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nans = 1\nfor i in range(n//k):\n\tcnt = (10**k-1)//a[i] - (10**(k-1)*(b[i]+1)-1)//a[i]\n\tif b[i] != 0:\n\t\tcnt += (10**(k-1)*b[i]-1)//a[i] + 1\n\tans = ans * cnt % p\nprint (ans)", "n,k = map(int,input().split())\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nmod = 1000000007\nans = 1\nfor x in range(0,n//k):\n    po = 10**(k-1)\n    p = c[x]*po\n    q = (c[x]+1)*po\n    res = 0\n    if p%b[x] == 0:\n        res -= 1\n    if q%b[x] == 0:\n        res += 1\n    if (po*10)%b[x] == 0:\n        res -= 1\n    res += 1\n    res += 10*po//b[x] - q//b[x] + p//b[x]\n    ans = ((ans%mod)*(res%mod))%mod\nprint(ans)", "p = 10**9+7\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nans = 1\nfor i in range(n//k):\n    cnt = (10**k-1)//a[i] - (10**(k-1)*(b[i]+1)-1)//a[i]\n    if b[i] != 0:\n        cnt += (10**(k-1)*b[i]-1)//a[i] + 1\n    ans = ans * cnt % p\nprint (ans)", "from math import *\nMOD=10**9+7\nn,k=list(map(int, input().split()))\na=list(map(int, input().split()))\nb=list(map(int, input().split()))\ntemp= pow(10,k-1)\nans=1\nfor i in range(len(a)):\n\ttotDiv = ceil((temp*10)/a[i])\n\tnum1= temp*(b[i])\n\tnum2= temp*(b[i]+1)\n\tsmaller= ceil(num1/a[i])\n\tlarger=ceil(num2/a[i])\n\ttotDiv+=(smaller-larger)\n\tans= (ans*totDiv)%MOD\nprint(int(ans))\n", "mask = 10 ** 9 + 7\n\ndef count(a, x):\n\treturn x // a + 1\n\nn, k = list(map(int, input().split()))\naa = list(map(int, input().split()))\nbb = list(map(int, input().split()))\n\nbig = 10 ** k - 1\nsmall = 10 ** (k - 1)\nresult = 1\n\nfor i in range(n // k):\n\ta, b = aa[i], bb[i]\n\tsum = 0\n\tsum += count(a, big)\n\tsum -= count(a, (b + 1) * small - 1)\n\tif b != 0:\n\t\tsum += count(a, b * small - 1)\n\tresult = (result * sum) % mask\n\nprint(result)\n"]