["n=int(input())\na=sorted(map(int,input().split()))\nm=int(input())\nb=sorted(map(int,input().split()))\nc=0\nfor i in range(n):\n  for j in range(m):\n    if abs(a[i]-b[j]) <= 1:\n      b[j]=-10\n      c+=1\n      break\nprint(c)", "n = int(input())\nboys = [int(x) for x in input().split()]\nm = int(input())\ngirls = [int(x) for x in input().split()]\n\n# we sort the lads\nboys.sort()\ngirls.sort()\n\ncount = 0\nlast_girl = -1\n\nfor boy in boys:\n    # try to find a match, if we find, we increment the namber\n    for gi in range(last_girl+1, len(girls)):\n        girl = girls[gi]\n        if (girl+1 == boy) or girl == boy or girl-1 == boy:\n            count += 1\n            last_girl = gi\n            break\n\nprint(count)\n", "n = int(input())\nns = sorted(map(int, str.split(input())))\nm = int(input())\nms = sorted(map(int, str.split(input())))\nni = mi = pairs = 0\nwhile ni < n and mi < m:\n\n    if abs(ns[ni] - ms[mi]) <= 1:\n\n        pairs += 1\n        ni += 1\n        mi += 1\n\n    elif ns[ni] <= ms[mi]:\n\n        ni += 1\n\n    else:\n\n        mi += 1\n\nprint(pairs)\n", "def dfs(u):\n\tif used[u]:\n\t\treturn False\n\tused[u] = 1\n\tfor i in range(m):\n\t\tif abs(a[u] - b[i]) < 2 and (pair[i] == -1 or dfs(pair[i])):\n\t\t\tpair[i] = u\n\t\t\treturn True\n\treturn False\n\nn, a, m, b = int(input()), list(map(int, input().split())), int(input()), list(map(int, input().split()))\npair = [-1] * m\nfor i in range(n):\n\tused = [0] * n\n\tdfs(i)\nprint(sum(1 for p in pair if p != -1))\n", "\nn = int(input())\na = [int(s) for s in input().split()]\nm = int(input())\nb = [int(s) for s in input().split()]\n\na.sort()\nb.sort()\n\ni = 0\nj = 0\ncount = 0\nwhile i<n and j<m:\n    if abs(a[i]-b[j])<=1:\n        count += 1\n        i += 1\n        j += 1\n    elif a[i]<b[j]:\n        i += 1\n    else:\n        j += 1\n        \nprint(count)\n\n\n    \n\n", "n = int(input())\nad = list(sorted(list(map(int, input().split()))))\nm = int(input())\nam = list(sorted(list(map(int, input().split()))))\ni = 0\nj = 0\nsum1 = 0\nwhile i < n and j < m:\n    if abs(ad[i] - am[j]) < 2:\n        sum1 += 1\n        i += 1\n        j += 1\n    elif ad[i] < am[j]:\n        i += 1\n    else:\n        j += 1\nprint(sum1)\n", "__author__ = 'valeriy.shevchuk'\n\ninput()\nb = sorted(list(map(int, input().split())))\ninput()\ng = sorted(list(map(int, input().split())))\n\nc = 0\nwhile b and g:\n    bb = b[0]\n    gg = g[0]\n    if abs(bb - gg) <= 1:\n        c += 1\n        b.pop(0)\n        g.pop(0)\n    else:\n        b.pop(0) if bb < gg else g.pop(0)\n\nprint(c)", "a = int(input())\na = list(map(int, input().split()))\nb = int(input())\nb = list(map(int, input().split()))\na=sorted(a)\nb=reversed(sorted(b))\nx=[0]*200;\nfor t in a:\n    x[t] += 1\n\nans = 0\nfor t in b:\n    if x[t+1]:\n        ans +=1\n        x[t+1]-=1\n        continue\n    if x[t]:\n        ans +=1\n        x[t]-=1\n        continue\n    if x[t-1]:\n        ans +=1\n        x[t-1]-=1\n        continue\n\nprint(ans)\n", "__author__ = 'Rakshak.R.Hegde'\nn = int(input())\nA = list(map(int, input().split()))\nA.sort()\nm = int(input())\nB = list(map(int, input().split()))\nB.sort()\npairs = 0\nwhile len(A) and len(B):\n    if abs(A[0] - B[0]) <= 1:\n        pairs += 1\n        del A[0]\n        del B[0]\n    elif A[0] < B[0]:\n        del A[0]\n    else:\n        del B[0]\nprint(pairs)", "n = int(input())\nna = sorted(list(map(int, input().split())))\n\nm = int(input())\nma = sorted(list(map(int, input().split())))\nans = 0\n\nfor i in range(n):\n    for j in range(m):\n        if abs(ma[j] - na[i]) <= 1:\n            ans += 1\n            ma[j] = -100\n            na[i] = -100500\n\nprint(ans)\n\n\n\n", "#!/usr/bin/env python\n\nnb = int(input())\nboys = list(map(int, input().split(' ')))\nng = int(input())\ngirls = list(map(int, input().split(' ')))\n\n\nmatches = [ [] for i in range(nb) ]\nfor bi, boy in enumerate(boys):\n    for i in range(ng):\n        if girls[i] >= boy - 1 and girls[i] <= boy + 1:\n            matches[bi].append(i)\n\n\ndef find(idx, taken, tried):\n    for girl in matches[idx]:\n        if not girl in tried:\n            tried.add(girl)\n            if not girl in taken or find(taken[girl], taken, tried):\n                taken[girl] = idx\n                return True\n    return False\n\ndef getmax():\n    result = 0\n    taken = {}\n    for bi, boy in enumerate(boys):\n        tried = set()\n        if find(bi, taken, tried):\n            result += 1\n\n    return result\n\nprint(getmax())\n", "\nR = lambda : map(int, input().split())\n\nn = int(input())\nm_skills = sorted(list(R()))\n\nm = int(input())\nw_skills = sorted(list(R()))\n\nN = max(m,n)\nj_list = []\ni_list = []\nres    = 0\nfor i in range(n):\n    for j in range(m):\n        if abs(m_skills[i] - w_skills[j]) in [0,1] and j not in j_list:\n            j_list.append(j)\n            res += 1\n            break\n\nprint(res)", "n = int(input())\narr1 = list(map(int, input().split()))\nm = int(input())\narr2 = list(map(int, input().split()))\ngraph = [[False]*(m+n) for _ in range(m+n)]\nfor i in range(n):\n\tfor j in range(m):\n\t\tif(abs(arr1[i]-arr2[j])<=1):\n\t\t\tgraph[i][j+n] = True\n\t\t\tgraph[j+n][i] = True\n# print(str(graph).replace('], [','],\\n[')[1:].replace('True','1').replace('False','-'))\nu = [False]*(m+n)\nto = [-1]*m\n\ndef match(v1):\n\ti = 0\n\tif u[v1]:\n\t\treturn 0\n\tu[v1] = True\n\tfor i2 in range(m):\n\t\tif(graph[v1][i2+n] and (to[i2] == -1 or match(to[i2]))):\n\t\t\tto[i2] = v1\n\t\t\treturn 1\n\treturn 0\nres = 0\nfor i1 in range(n+m):\n\tu = [False]*(m+n)\n\tres += match(i1)\nprint(res)", "n = int(input())\na = list(map(int,input().split()))\nm = int(input())\nb = list(map(int,input().split()))\na.sort()\nb.sort()\ncount = 0\nwhile a and b:\n    if abs(a[0]-b[0]) <= 1:\n        count += 1\n        a.pop(0)\n        b.pop(0)\n    elif a[0] < b[0]:\n        a.pop(0)\n    else:\n        b.pop(0)\nprint(count)       \n", "n = int(input())\nai = sorted(list(map(int, input().split())))\nm = int(input())\nbi = sorted(list(map(int, input().split())))\ni = 0\nj = 0\nni = 0\nwhile i < n and j < m:\n    if ai[i]<bi[j]-1:\n        while i < n and ai[i]<bi[j]-1 :\n            i+=1\n    elif ai[i]-1>bi[j]:\n        while j < m and ai[i]-1>bi[j]:\n            j+=1\n    if i < n and j < m and (ai[i] == bi[j] or ai[i] - 1 == bi[j]\n                            or ai[i] == bi[j] - 1):\n        ni+=1\n        i+=1\n        j+=1\nprint(ni)\n\n", "from sys import stdin\n\nlines = list([_f for _f in stdin.read().split('\\n') if _f])\n\ndef parseline(line):\n\treturn list(map(int, line.split()))\n\nlines = list(map(parseline, lines))\n\nn, = lines[0]\na = lines[1]\nm, = lines[2]\nb = lines[3]\nassert len(a) == n and len(b) == m\n\nMax = 100 + 1\n\nai_count = [0] * Max\nbi_count = [0] * Max\n\nfor ai in a:\n\tai_count[ai] += 1\n\nfor bi in b:\n\tbi_count[bi] += 1\n\nmatch = [[] for i in range(Max)]\nused = None\n\ndef dfs(v):\n\tif used[v] >= ai_count[v]:\n\t\treturn False\n\tused[v] += 1\n\tfor to in range(max(0, v-1), min(Max, v + 2)):\n\t\tif len(match[to]) < bi_count[to]:\n\t\t\tmatch[to].append(v)\n\t\t\treturn True\n\t\tfor i, to_i in enumerate(match[to]):\n\t\t\tif dfs(to_i):\n\t\t\t\tmatch[to][i] = v\n\t\t\t\treturn True\n\treturn False\n\nfor i in range(Max):\n\tfor _ in range(ai_count[i]):\n\t\tused = [0] * Max\n\t\tdfs(i)\n\nprint(sum(len(l) for l in match))\n", "def main():\n    nm=int(input())\n    m=list(map(int,input().split()))\n    nw=int(input())\n    w=list(map(int,input().split()))\n    m.sort()\n    w.sort()\n    i=j=ans=0\n    while(i<nm and j<nw):\n        if(-1<=m[i]-w[j]<=1):\n            ans+=1\n            i+=1\n            j+=1\n        elif(m[i]>w[j]):\n            j+=1\n        else:\n            i+=1\n    print(ans)\n    \ndef __starting_point():\n    main()\n\n\n__starting_point()", "def solve(bs, gs):\n    bs.sort()\n    gs.sort()\n    ret = 0\n    while gs and bs:\n        if -2 < gs[-1] - bs[-1] < 2:\n            ret += 1\n            bs.pop()\n            gs.pop()\n        elif bs[-1] > gs[-1]:\n            bs.pop()\n        else:\n            gs.pop()\n    return ret\n    \ndef __starting_point():\n    input()\n    bs = list(map(int, input().split()))\n    input()\n    gs = list(map(int, input().split()))\n    print(solve(bs, gs))\n__starting_point()", "n = int(input())\na = sorted(int(x) for x in input().split())\nm = int(input())\nb = sorted(int(x) for x in input().split())\ni, j, val = 0, 0, 0\nwhile i < n and j < m:\n    if a[i] < b[j] - 1:\n        i += 1\n    elif b[j] < a[i] - 1:\n        j += 1\n    else:\n        i += 1\n        j += 1\n        val += 1\nprint(val)", "x = input()\nboys = list(map(int, input().split(' ')))\ny = input()\ngirls = list(map(int, input().split(' ')))\nboys.sort()\ngirls.sort()\nok = 0\nfor i in boys[:]:\n    if i-1 in girls:\n        girls.remove(i-1)\n        boys.remove(i)\n        ok += 1\n    elif i in girls:\n        girls.remove(i)\n        boys.remove(i)\n        ok += 1\n    elif i+1 in girls:\n        girls.remove(i+1)\n        boys.remove(i)\n        ok += 1\nprint(ok)\n", "males = int(input())\nmales_ability = [int(m) for m in input().split()]\nfemales = int(input())\nfemales_ability = [int(m) for m in input().split()]\nmales_ability.sort()\nfemales_ability.sort()\npairs = 0\nfor x in males_ability:\n    for y in females_ability:\n        if y in range(x-1, x+2):\n            females_ability.remove(y)\n            pairs += 1\n            break\nprint(pairs)\n\n\n", "n = int(input())\na = sorted([int(x) for x in input().split()])\nm = int(input())\nb = sorted([int(x) for x in input().split()])\ni, j = 0, 0\nans = 0\nwhile i < n and j < m:\n\tif abs(a[i] - b[j]) <= 1:\n\t\tans += 1\n\t\ti += 1\n\t\tj += 1\n\telif a[i] < b[j]:\n\t\ti += 1\n\telse:\n\t\tj += 1\nprint(ans)\n", "def Fabs(a):\n    if a<0:\n        return -a\n    else:\n        return a\n\ndef solve(listB, listG):\n    res=0;\n    cntb=0\n    \n    while cntb<len(listB):\n        cntg=0\n        while cntg<len(listG):\n            if Fabs(listB[cntb]-listG[cntg])<=1:\n                res+=1\n                listG[cntg]=10000\n                listB[cntb]=10000\n            cntg+=1\n        cntb+=1\n    return res\n    \nlistB=[]\nlistG=[]\nb=input()\nlistB=list(map(int, input().split()))\ng=input()\nlistG=list(map(int, input().split())) \nlistB=sorted(listB)\nlistG=sorted(listG)\nprint(solve(listB, listG))", "n = int(input())  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\na = input().split()\nfor i in range(n):\n    a[i] = int(a[i])\na = sorted(a)\n\nm = int(input())  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nb = input().split()\nfor i in range(m):\n    b[i] = int(b[i])\nb = sorted(b)\n\npos1 = 0  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\npos2 = 0  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nk = 0  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\n\nwhile (pos1 < n) and (pos2 < m):\n    if abs(a[pos1]-b[pos2]) <= 1:  # \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\n        k += 1\n        pos1 += 1\n        pos2 += 1\n    else:\n        if a[pos1] > b[pos2]:  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n            pos2 += 1\n        else:\n            pos1 += 1\n            \nprint(k)"]