["s,p=map(int,input().split())\nimport math\nfor i in range(1,math.floor(p**0.5)+1):\n    if p%i==0 and p//i+i==s:\n        print(\"Yes\")\n        return\nprint(\"No\")", "import sys\ns,p = map(int,input().split())\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    divisors.sort()\n    return divisors\nls = make_divisors(p)\nfor i in ls:\n    if i + p//i == s:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s,p = map(int,input().split())\n\nn = (s+(s**2-4*p)**(1/2))/2\n\nif n%1 == 0 and n > 0:\n    if s-n > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    print(\"No\")", "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef make_divisors(n): #https://qiita.com/LorseKudos/items/9eb560494862c8b4eb56\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n        i += 1\n    return lower_divisors\n\ndef main():\n    s, p = map(int,input().split())\n    dev = make_divisors(p)\n    for d in dev:\n        if s - d == p//d:\n            print(\"Yes\")\n            break\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()", "[s, p] = list(map(int, input().split()))\n\n\ndef search(s, p):\n    for n in range(1, int(s/2)+1):\n        if n * (s-n) == p:\n            return True\n        if n * (s-n) > p:\n            return False\n    return False\n\n\nif search(s, p):\n    print('Yes')\nelse:\n    print('No')\n", "from sys import stdin\ninput = stdin.readline\n\nS,P = list(map(int,input().split()))\nN = 1\n\ncan = 0\nwhile(N*N <= P):\n  if(P%N == 0):\n    M = P//N\n    \n    if(M+N == S):\n      can = 1\n      break\n      \n  N += 1\n  \nprint((\"Yes\" if can else \"No\"))\n", "s,p=map(int,input().split())\nd=s**2-4*p\ndef sd(a):\n  s=int(a**.5)\n  while (1+s)**2<=a:s+=1\n  return s\nx=sd(d)\nif s>=x>=0 and d==x**2 and (x+s)%2==0:print(\"Yes\")\nelse:print(\"No\")", "S,P = map(int,input().split())\n\ndef yakusu(n):\n    ans=[]\n    for i in range(1,int(n**0.5)+1):\n        if n%i==0:\n            ans.append(i)\n            if n!=i**2:\n                ans.append(n//i)\n#    ans.sort()\n    return ans\ny = yakusu(P)\n\nans=False\nfor yy in y:\n    if yy + P//yy==S:\n        ans=True\n        break\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s, p = map(int, input().split())\ndelta = s**2 - 4*p\nm = (s + (delta)**0.5)/2\nn = (s - (delta)**0.5)/2\n# print(m)\n# print(n)\nif (m+n==s and m*n==p):\n    print('Yes')\nelse:\n    print('No')", "s,p=list(map(int,input().split()))\nd=s*s-4*p\np=round(d**0.5)\nfor i in range(-1,3):\n    if (p+i)**2==d:\n        print('Yes')\n        return\nprint('No')\n", "S,P = map(int, input().split())\nfor i in range(1000050):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s, p = map(int,input().split())\nfor i in range(1, int(p**0.5)+1):\n    j = p//i\n    if i+j == s and i*j == p:\n        print(\"Yes\")\n        return\nprint('No')", "import math\n\nS, P = list(map(int, input().split()))\ni_max = int(math.sqrt(P))+1\n\nans = \"No\"\nfor i in range(1, i_max):\n    if P % i == 0:\n        q = P // i\n        if (i + q) == S:\n            ans = \"Yes\"\n            break\n\nprint(ans)\n", "def main():\n    S, P = list(map(int, input().split()))\n    n = 1\n    while n**2 <= P:\n        m = S - n\n        if P % n == 0 and P // n == m:\n            print(\"Yes\")\n            return\n        n += 1\n    print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "f=0\nS,P= map(int, input().split())\nx=int(P**0.5)\nfor i in range(1,x+1):\n  if P%i==0 and P//i+i==S:\n    f=1\nprint(\"Yes\" if f==1 else \"No\")", "S,P = list(map(int, input().split()))\nmaxn = pow(10,6)+5\nfor i in range(maxn):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "S, P = map(int, input().split())\n\n\ndef divisor(n): #n\u306e\u7d04\u6570\u3092\u5168\u3066\u6c42\u3081\u308b\n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\n\n\nD = divisor(P)\n\nfor d in D:\n    tmp = P // d\n    if tmp + d == S:\n        print(\"Yes\")\n        return\nelse:\n    print(\"No\")", "s, p = map(int, input().split())\n\nfor i in range(1, int(p**0.5)+1):\n    if p % i == 0 and i + p//i == s:\n        print('Yes')\n        return\n\nprint('No')", "import math\n\ndef factor(n):\n    l=[]\n    for i in range(1,int(math.sqrt(n))+1):\n        if n%i==0:\n            l.append(i)\n    if n>2:\n        l.append(n)\n    return l\n\ns,p=map(int,input().split())\nl=factor(p)\n#print(l)\nn=len(l)\nfor i in range(n):\n    x=(p//l[i])+l[i]\n    if x==s:\n        flag=True\n        break\n    else:\n        flag=False\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import math\ns, p = map(int, input().split())\nfor i in range(1, int(math.sqrt(p))+1):\n    if p%i == 0 and i+(p//i) == s:\n        print(\"Yes\")\n        return\nelse:\n    print(\"No\")", "def make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\ns, p = map(int, input().split())\na = make_divisors(p)\nans = 0\nfor i in range(len(a)):\n    b = p // a[i]\n    if b + a[i] == s:\n        ans += 1\n        break\n\nif ans == 0:\n    print('No')\nelse:\n    print('Yes')", "def main():\n    import math\n    S, P = map(int, input().split())\n    x = (S + math.sqrt(S**2 - 4 * P))/2\n    y = (S - math.sqrt(S**2 - 4 * P))/2\n    if x != int(x): return print(\"No\")\n    if x <= 0 or y <= 0: return print(\"No\")\n    print(\"Yes\")\n\ndef __starting_point():\n    main()\n__starting_point()", "S,P = map(int,input().split())\n\nfor M in range(1,10**6+1):\n    if S-M >= 0 and (S-M)*M == P:\n        print('Yes')\n        return\n\nprint('No')", "s,p=map(int,input().split())\n\ndef make_divisors(n):\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n            if i != n // i:\n                upper_divisors.append(n//i)\n        i += 1\n    return lower_divisors + upper_divisors[::-1]\n\nl = make_divisors(p)\n\nfor i in l:\n\t  if s-i in l:\n\t  \t  print('Yes')\n\t  \t  return\n\t  \t  \nprint('No')", "def solve():\n    s, p = list(map(int, input().split()))\n    sqrt = int(p ** 0.5) + 1\n    for i in range(1, sqrt):\n        if p % i == 0:\n            if i * (s - i) == p or (p // i) * (s - p // i) == p:\n                print(\"Yes\")\n                return \n\n    print(\"No\")\n\nsolve()\n", "def resolve():\n   \n    s,p=map(int,input().split())\n    ans='No'\n    for n in range(1,int(p**(1/2))+1):\n        if p%n==0:\n            if (p//n)+n==s:\n                ans='Yes'\n                break\n    print(ans)\n\ndef __starting_point():\n    resolve()\n__starting_point()", "S,P = map(int,input().split())\ncnt = 0\nfor i in range(1,int(P**0.5)+1):\n    if P%i==0:\n        n = i\n        m = P//i\n        if n+m==S:\n            cnt += 1\nif cnt>0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s,p = map(int, input().split())\nx = int(p**0.5)\nans = \"No\"\nfor a in range(1, x+1):\n    if p%a!=0: continue\n    b = p//a\n    if a+b == s:\n        ans = \"Yes\"\n        break\nprint(ans)", "s, p = map(int, input().split())\n\nfor i in range(1, int(p**0.5)+1):\n    if i * (s-i) == p and s-i>0:\n        print('Yes')\n        return\nprint('No')", "s,p = list(map(int, input().split()))\nfor i in range(1,10000001):\n    if p % i == 0:\n        if i + (p//i) == s:\n            print('Yes')\n            return\nprint('No')\n", "s,p = map(int,input().split())\nflg = False\nfor m in range(1, 10**6+1):\n    n = s - m\n    if n > 0 and m*n == p:\n        print('Yes')\n        flg = True\n        break\nif not flg:\n     print('No')", "import math\na,b = map(int,input().split())\n\np = a*a-4*b\nq = math.sqrt(p)\nq = math.floor(q)\nif q*q == p:\n  print(\"Yes\")\nelse:\n        print(\"No\")", "def main():\n  s, p = map(int, input().split())\n  n = 1\n  flag = False\n  while (n**2 <= p):\n    if p % n == 0 and n + p//n == s:\n      flag = True\n      break\n    n += 1\n  if flag:\n    print(\"Yes\")\n  else:\n    print(\"No\")\n\ndef __starting_point():\n  main()\n__starting_point()", "#\n#\n#\n# \u7b11\u3048\u3001\u541b\u304c\u597d\u304d\u306a\u3088\u3046\u306b\u3002\n#                         \u7b11\u3044\u306f\u4e16\u754c\u3092\u6551\u3046\u3002\n#                                           \u3042\u306a\u305f\u304c\u7b11\u3063\u3066\u304f\u308c\u308b\u306a\u3089\u3002\n#\n#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product, combinations_with_replacement # (string,3) 3\u56de\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n# set\u578b\u3060\u3068\u3001 | \u3068 & \u304c\u4f7f\u3048\u308b\u3088\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\n# \u6574\u6570\u304b\u5224\u5b9a\u3059\u308b\n# nanka.is_integer()\n# ref https://atcoder.jp/contests/abc133/tasks/abc133_b\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n# mod = 9982443453\n# mod = 998244353\nINF = float('inf')\ndx = [0,1,0,-1]\ndy = [1,0,-1,0]\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\ndef f(n):\n    return int(math.ceil(n-0.5))\n#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom math import gcd\nfrom itertools import combinations,permutations,accumulate, product, combinations_with_replacement # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\nimport heapq\n#\n# set\u578b\u3060\u3068\u3001 | \u3068 & \u304c\u4f7f\u3048\u308b\u3088\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\n# \u6574\u6570\u304b\u5224\u5b9a\u3059\u308b\n# nanka.is_integer()\n# ref https://atcoder.jp/contests/abc133/tasks/abc133_b\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n# mod = 9982443453\n# mod = 998244353\nINF = float('inf')\ndx = [0,1,0,-1]\ndy = [1,0,-1,0]\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n    return int(readline())\ndef f(n):\n    return int(math.ceil(n-0.5))\nS,P = readInts()\ni = 1\nwhile i*i <= P:\n    if P%i == 0:\n        if i + (P//i) == S:\n            print('Yes')\n            return\n    i += 1\nprint('No')\n", "s, p = map(int, input().split())\n\nDel = s*s - 4*p\nm = (s + Del**(1/2)) / 2\nm2 = (s - Del**(1/2)) / 2\n\nif int(m) == m and int(m2) == m2 and m > 0 and m2 > 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "s,p = list(map(int,input().split()))\nimport sys\nfor i in range(1,int(p**0.5)+1):\n    m=s-i\n    if i*m==p:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "from decimal import Decimal\n\ns, p = list(map(int, input().split()))\nif Decimal(s ** 2 - 4 * p) ** Decimal(1 / 2) - int((s ** 2 - 4 * p) ** (1 / 2)) == 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "def solve():\n    S, P = map(int, input().split())\n    for i in range(1, int(P ** 0.5) + 1):\n        if P % i == 0 and P // i + i == S:\n            return True\n    return False\n\n\nprint(\"Yes\") if solve() else print(\"No\")", "#n = int(input())\nimport sys\ns, p = list(map(int, input().split()))\n#al = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n#s=[list(map(int,input().split())) for i in range(n)]\ni = 1\nnl = []\nml = []\nwhile i*i <= p:\n    if p % i == 0:\n        nl.append(i)\n        ml.append(p//i)\n    i += 1\nfor n, m in zip(nl, ml):\n    if n+m == s:\n        print('Yes')\n        return\nprint('No')\n", "def resolve():\n#====input code===\n    s,p = map(int, input().split())\n    for i in range(1000002):\n        if (s - i)*i == p:\n            print(\"Yes\")\n            return\n    else:\n        print(\"No\")\n#================\nresolve()", "from math import sqrt\ns,p=input().split()\ns=int(s)\np=int(p)\na=int(sqrt(s*s-4*p))\nif(a*a!=s*s-4*p):\n    print(\"No\")\nelse:\n    if((a+s)%2!=0):\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "##divisor func.\ndef div(n):\n    res=[]\n    i=int(1)\n    while i*i<=n:\n        if n%i==0:\n            res.append(i)\n            if n!=i**2:\n                res.append(n//i)\n        i+=1\n    res.sort()\n    return res\n\ns,p=map(int,input().split())\nA=div(p)\nfor a in A:\n    if a+p//a==s:\n        print('Yes')\n        return\nprint('No')", "S,P = map(int, input().split())\nfor i in range(1000050):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")", "def factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5//1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp //= i\n            arr.append([i, cnt])\n \n    if temp!=1:\n        arr.append([temp, 1])\n \n    if arr==[]:\n        arr.append([n, 1])\n \n    return arr\n \ndef product(iterable):\n    p = 1\n    for n in iterable:\n        p *= n\n    return p\n \nS, P = map(int, input().split())\na = factorization(P)\nnums = [1]\n \nfor i in a:\n    for _ in range(i[1]):\n        nums.append(i[0])\n \nn = len(nums)\n \nfor i in range(2 ** n):\n    a = []\n    b = []\n    for j in range(n):\n        if ((i >> j) & 1):\n            a.append(nums[j])\n        else:\n            b.append(nums[j])\n \n    N = product(a)\n    M = product(b)\n \n    if N > 0 and M > 0:\n        if N + M == S:\n            print(\"Yes\")\n            return\n \nprint(\"No\")", "S,P=map(int,input().split())\nr=(S**2 - 4*P)**(1/2)\nM1=(S+r)/2\nM2=(S-r)/2\nN1=S-M1\nN2=S-M2\nif (M1%1==0 and 1<=M1<S) or (M2%1==0 and 1<=M1<S):\n  print('Yes')\nelse:\n  print('No')", "s,p = map(int, input().split())\n\nfor i in range(1, int(p**0.5) + 5):\n    if p%i == 0 and (i + p//i) == s:\n        print('Yes')\n        return\nelse:\n    print('No')", "S, P = map(int, input().split())\nc = 0\nrouteP = int(P**0.5)\nfor N in range(1, routeP+1):\n    if P % N == 0:\n        M = int(P/N)\n        if N + M == S:\n            print('Yes')\n            c += 1\n            return\nif c == 0:\n    print('No')", "S, P = list(map(int, input().split()))\nv = S**2 - 4*P\nif v < 0:\n    print(\"No\")\nelif v == 0:\n    print(\"Yes\")\nelse:\n    left = 1\n    right = v\n    while right - left > 1:\n        mid = (left+right)//2\n        if mid**2 > v:\n            right = mid\n        else:\n            left = mid\n    if left**2 == v:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "m, n = map(int, input().split())\nfor i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n        if i + (n // i) == m:\n            print(\"Yes\")\n            return\nprint(\"No\")", "S,P = map(lambda x:int(x), input().split())\nans = \"No\"\n\nfor n in range(1, int(P**(1/2))+1):\n  if n + P/n == S:\n    ans = \"Yes\"\n    \nprint(ans)", "s, p = map(int, input().split())\nans = 'No'\nfor i in range(1, 1000050):\n    if i * (s - i) == p:\n        ans = 'Yes'\n        break\nprint(ans)", "import copy\nimport math\nimport time\nimport statistics\nimport math\nimport itertools\nimport bisect\nimport sys\nfrom decimal import *\nfrom collections import deque\n\n\ndef get_int():\n    return int(input())\n\ndef get_string():\n    return input()\n\ndef get_int_list():\n    return [int(x) for x in input().split()]\n\ndef get_string_list():\n    return input().split()\n\ndef get_int_multi():\n    return list(map(int, input().split()))\n\ndef get_string_char_list():\n    return list(str(input()))\n\n# print(\"{} {}\".format(a, b))\n# a_list = [0] * a\n# dp = [[0] * a for _ in range(b)]\n# pow(8, -1, c_mod)) \u9006\u5143\u3002MOD\u8a08\u7b97\u306e\u5272\u308a\u7b97\u306e\u969b\u306b\u304b\u3051\u308b\n\nsys.setrecursionlimit(10 ** 6)\n\n\ndef main():\n    start = time.time()\n\n    s, p = get_int_multi()\n\n    m1 = (s + (s ** 2 - 4*p) ** (1/2)) / 2\n    m2 = (s - (s ** 2 - 4*p) ** (1/2)) / 2\n\n    if round(m1) == m1 and round(m2) == m2 and m1 > 0 and m2 > 0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s,p=[int(x) for x in input().split()]\ni = 1\nwhile i*i <= p:\n    if p % i == 0:\n        if i+p//i==s:\n            print(\"Yes\")\n            return\n    i += 1\nprint(\"No\")", "s,p=map(int,input().split())\nfor i in range (10**6+10):\n    if i*(s-i)==p:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s, p = map(int, input().split())\n\ndef divisor(n): \n    i = 1\n    table = []\n    while i * i <= n:\n        if n%i == 0:\n            table.append(i)\n            table.append(n//i)\n        i += 1\n    table = list(set(table))\n    return table\n\nl = divisor(p)\nl = sorted(l)\nlen_l = len(l)\ncheck = 0\nif len(l) % 2 == 0:\n    for i in range(0, len_l//2):\n        a, b = l[i], l[len_l-i-1]\n        if a + b == s:\n            check = 1\nelse:\n    for i in range(0, len_l//2):\n        a, b = l[i], l[len_l-i-1]\n        if a + b == s:\n            check = 1\n    if l[len_l//2]*2 == s:\n        check = 1\n\nif check:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "import math as ma\na,b=map(int,input().split())\nx=int(ma.sqrt(b))+1\nf=False\nfor i in range(1,x):\n\tif b%i==0:\n\t\tif (b//i)+i==a:\n\t\t\tf=True\n\t\t\tbreak\nif f:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "a, b = list(map(int, input().split()))\nimport math\n\n\ndef ok(n):\n    ret = [1, n]\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            ret.append(i)\n            ret.append(n // i)\n            if i + n // i == a:\n                return \"Yes\"\n    return \"No\"\n\n\nprint((ok(b)))\n\n", "s, p = list(map(int, input().split()))\nfor n in range(1, int(p ** 0.5) + 1):\n    if p % n == 0:\n        m = p // n\n        if n + m == s:\n            print('Yes')\n            break\nelse:\n    print('No')\n\n", "s,p = map(int,input().split())\nfor n in range(1,1000005):\n    m = s - n\n    if n*m == p:\n        print('Yes')\n        return\nprint('No')", "S,P = list(map(int, input().split()))\n\ni=1\nwhile i*i<=P:\n    if P%i==0 and i+P//i==S:\n        print(\"Yes\")\n        return\n    i+=1\nprint(\"No\")\n", "s,p=map(int,input().split())\nx=1\nwhile x**2<=p:\n  if p%x==0:\n    y=p//x\n    if x+y==s:\n      print(\"Yes\")\n      return\n  x+=1\nprint(\"No\")", "import math\n\ndef main():\n\n    s, p = list(map(int, input().split()))\n    try:\n        ans_1 = math.floor(s + math.sqrt(s**2 - 4 * p)) // 2\n    except:\n        print(\"No\")\n        return\n    \n    for _ in range(-1, 2):\n\n        ans_2 = s - ans_1\n        \n        if ans_2 > 0 and ans_1 * ans_2 == p:\n            print(\"Yes\")\n            return\n        \n    print(\"No\")\n    return\n\nmain()\n\n", "s, p = map(int, input().split())\nfor n in range(1, p+1):\n    if n*n > p: break\n    if p%n == 0 and n + p//n == s:\n            print('Yes')\n            return\n\nprint('No')", "S, P = map(int, input().split())\nfor i in range(1, 10**7):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")", "import math\n\ns,p = map(int,input().split())\nans = False\nfor i in range(1,int(math.sqrt(p)) + 1):\n  if p % i == 0:\n    if s == ((p / i) + i):\n      ans = True\n      break\n\nif ans:\n  print('Yes')\nelse:\n  print('No')", "s, p = map(int, input().split())\nans = 'No'\nfor i in range(1000050):\n    if i * (s - i) == p:\n        ans = 'Yes'\n        break\nprint(ans)", "S,P=map(int,input().split())\n\nif S==0 and P==0:\n    print('Yes')\nelse:\n    N=(-S+pow(S**2-4*P,0.5))/2\n    M=(-S-pow(S**2-4*P,0.5))/2\n    if int(N)==0 or int(M)==0:\n        print('No')\n    elif N.is_integer()== False or M.is_integer()== False:\n        print('No')\n    else:\n        print('Yes')", "import math\nimport numpy as np\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    s, p = list(map(int,input().split()))\n    i=1\n    while(i**2<=p):\n        if(s == i+p/i):\n            print(\"Yes\")\n            return 0\n        i+=1\n    print(\"No\")\nmain()", "\ndef __starting_point():\n    s, p = list(map(int, input().split()))\n    x = s * s - 4 * p\n    x_ = int(x**0.5)\n    if(x_ * x_ != x):\n        print(\"No\")\n    else:\n        x = (int)(s + x_) / 2\n        print((\"Yes\" if x * (s - x) == p else \"No\"))\n\n__starting_point()", "import math\ns,p=map(int,input().split())\nl=[]\nfor i in range(1,int(math.sqrt(p))+1):\n    if p%i==0:\n        l.append(i)\nfor i in l:\n    j=p//i\n    if i+j==s:\n        print(\"Yes\")\n        return\nprint(\"No\")", "S, P = map(int, input().split())\n\nfor i in range(2000000):\n    if i*(S - i) == P:\n        print(\"Yes\")\n        return\n\nprint(\"No\")", "##divisor func.\ndef div(n):\n    res=[]\n    i=int(1)\n    while i*i<=n:\n        if n%i==0:\n            res.append(i)\n            if n!=i**2:\n                res.append(n//i)\n        i+=1\n    res.sort()\n    return res\n\ns,p=map(int,input().split())\nA=div(p)\nfor i in range(len(A)):\n    if A[i]+p//A[i]==s:\n        print('Yes')\n        return\nprint('No')", "s,p = map(int,input().split())\nfor n in range(1,1000005):\n    if n*(s-n) == p:\n        print('Yes')\n        return\nprint('No')", "s, p = list(map(int, input().split()))\n\nimport math\ntmp = s * s - 4 * p\nif tmp < 0:\n  print('No')\n  return\nm1 = (s + math.sqrt(tmp)) / 2\nm2 = (s - math.sqrt(tmp)) / 2\nif tmp == int(tmp):\n  if m1 == int(m1) and m1 > 0:\n    if s - int(m1) > 0:\n      print('Yes')\n      return\n  if m2 == int(m2) and m2 > 0:\n    if s - int(m2) > 0:\n      print('Yes')\n      return\nprint('No')\n", "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: list(map(int, sys.stdin.readline().split()))\nrf = lambda: list(map(float, sys.stdin.readline().split()))\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod1 = 10**9 + 7\nmod2 = 998244353\nal = 'abcdefghijklmnopqrstuvwxyz'\nAl = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\ns, p = rm()\nfor i in range(1, 10**6+1):\n    if p%i == 0 and i + p//i == s:\n        print('Yes')\n        return\nprint('No')\n", "s, p = map(int, input().split())\nans = 'No'\nfor i in range(1, int(p ** 0.5)+1):\n    if i * (s - i) == p:\n        ans = 'Yes' \nprint(ans)", "s, p = map(int, input().split(' '))\n\nfor n in range(1, s):\n    m = s - n\n    if m * n == p:\n        print('Yes')\n        return\n    if m * n > p:\n        break\nprint('No')", "S,P=map(int,input().split())\na=0\nfor i in range(1,min(10**6,S//2)+1):\n  if i*(S-i)==P:\n    a+=1\nif a==0:\n  print('No')\nelse:\n  print('Yes')", "def prime_decomposition(n):\n    ans = []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            ans.append((i, n/i))\n        i += 1\n    return ans\n\ndef main():\n    S, P = map(int, input().split())\n    kouho = prime_decomposition(P)\n    a = \"No\"\n    for i in kouho:\n        if sum(i) == S:\n            a = \"Yes\"\n    print(a)\n\ndef __starting_point():\n    main()\n__starting_point()", "S,P=map(int,input().split())\nfor i in range(1,int(P**0.5)+1):\n    if i*(S-i)==P:\n        print(\"Yes\")\n        return\nprint(\"No\")", "import math\ns,p = map(int,input().split())\nb,c = -s,p\n\ntmp1 = (-b + math.sqrt(b ** 2 - 4 * c)) / 2\ntmp2 = (-b - math.sqrt(b ** 2 - 4 * c)) / 2\n\nn1 = s - tmp1\nn2 = s - tmp2\n\ncheck = False\nif int(n1) == n1 and n1 > 0:\n  check = True\nif int(n1) == n2 and n2 > 0:\n  check = True\n  \nprint(\"Yes\" if check else \"No\")", "import math as ma\na,b=map(int,input().split())\nx=int(ma.sqrt(b))+1\nf=False\nfor i in range(1,x):\n\tif b%i==0:\n\t\tif (b//i)+i==a:\n\t\t\tf=True\n\t\t\tbreak\nif f:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "s, p = map(int, input().split())\nfor i in range(1, 1000001):\n\tif p % i != 0:\n\t\tcontinue\n\telif i + p // i == s:\n\t\tprint(\"Yes\")\n\t\tbreak\nelse:\n\tprint(\"No\")", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\n\n\ndef input():\n    return sys.stdin.readline().strip()\n\n\ndef main():\n    S, P = list(map(int, input().split()))\n\n    cand = []\n    for i in range(1, int(P ** 0.5) + 1):\n        if P % i == 0:\n            cand.append((i, P // i))\n\n    for n, m in cand:\n        if n + m == S:\n            print(\"Yes\")\n            return\n\n    print(\"No\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "S,P = list(map(int, input().split()))\nfor i in range(1000050):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")\n\n", "def resolve():\n    #n=int(input())\n    #a,b=map(int,input().split())\n    #x=list(map(int,input().split()))\n    #a=[list(map(lambda x:int(x)%2,input().split())) for _ in range(h)]\n    s,p=map(int,input().split())\n    ans='No'\n    for n in range(1,int(p**(1/2))+1):\n        if p%n==0:\n            if (p//n)+n==s:\n                ans='Yes'\n                break\n    print(ans)\n\ndef __starting_point():\n    resolve()\n__starting_point()", "n, m = map(int,input().split())\ni = 1\nwhile i ** 2 <= m:\n  if m % i  == 0:\n    if i + m // i == n:\n      print(\"Yes\")\n      return\n  i += 1\nprint(\"No\")", "import math\nfrom collections import Counter\nimport itertools\nfrom math import sqrt\n\nii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\ns,p = mi()\n\nfor i in range(1,1000010):\n    if i*(s-i) == p:\n        print(\"Yes\")\n        return\nprint(\"No\")", "S,P = list(map(int, input().split()))\nfor i in range(1000050):\n    if i*(S-i) == P:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "import sys\ns, p = map(int, input().split())\n\nfor i in range(1, int(p ** 0.5) + 1):\n  if p % i == 0 and s - i == p // i:\n    print('Yes')\n    return\n    \n  \nprint('No')", "import math\n\n\ns, p = list(map(int, input().split()))\nmax_range = math.sqrt(10 ** 13)\nfor i in range(int(max_range)):\n    if i * (s - i) == p:\n        print(\"Yes\")\n        return\nprint(\"No\")\n", "S, P = list(map(int,input().split()))\nfor i in range(1, 10 ** 6 + 1):\n    if i * (S - i) == P:\n        print('Yes')\n        return\nprint('No')\n\n", "import sys\ndef input(): return sys.stdin.readline().rstrip()\ndef make_divisors(n): #https://qiita.com/LorseKudos/items/9eb560494862c8b4eb56\n    lower_divisors , upper_divisors = [], []\n    i = 1\n    while i*i <= n:\n        if n % i == 0:\n            lower_divisors.append(i)\n        i += 1\n    return lower_divisors\n\ndef main():\n    s, p = map(int,input().split())\n    dev = make_divisors(p)\n    for d in dev:\n        if s - d == p//d:\n            print(\"Yes\")\n            break\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()", "s, p = list(map(int, input().split()))\nn1 = (s+((-s)**2-4*p)**.5)/2\nn2 = (s-((-s)**2-4*p)**.5)/2\nn1 = int(n1)\nn2 = int(n2)\nm1 = s-n1\nm2 = s-n2\nif n1+m1 == s and n1*m1 == p:\n    print('Yes')\nelif n2+m2 == s and n2*m2 == p:\n    print('Yes')\nelse:\n    print('No')\n", "s,p = map(int,input().split())\nfor i in range(2000000):\n    if (s-i)*i == p:\n        print(\"Yes\")\n        return\nprint(\"No\")", "s, p = map(int,input().split())\nans = False\ni = 1\nwhile (i * i <= p):\n    if i * (s - i) == p:\n        ans = True\n    i += 1\nprint(\"Yes\" if ans else \"No\")", "s, p = list(map(int, input().split()))\nfl = 0\nfor i in range(1, 1000050):\n    if i * (s - i) == p:\n        print(\"Yes\")\n        fl = 1\n        break\nif not fl:\n    print(\"No\")\n", "s, p = list(map(int, input().split()))\n\ndet = s**2 - 4 * p\n\nif det >= 0 and int(det**0.5)**2 == det:\n    ans = 'Yes'\nelse:\n    ans = 'No'\n\nprint(ans)\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    S, P = [int(x) for x in input().strip().split()]\n    for i in range(1, int(P**.5)+1):\n        if P % i > 0:\n            continue\n        if i + P // i == S:\n            print('Yes')\n            return True\n    else:\n        print('No')\n\ndef __starting_point():\n    main()\n__starting_point()", "S, P = list(map(int, input().split()))\nans = False\nfor n in range(1, int(P ** (0.5)) + 1):\n    if P % n == 0:\n        m = P // n\n        if n + m == S:\n            ans = True\nif ans:\n    print('Yes')\nelse:\n    print('No')\n"]