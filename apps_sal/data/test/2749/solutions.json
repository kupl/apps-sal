["h, w = map(int, input().split())\nn = int(input())\nA = tuple(map(int, input().split()))\n\nM = [[0] * w for _ in range(h)]\nii = 0\nij = 0\nfor i, a in enumerate(A):\n    i += 1\n    for _ in range(a):\n        M[ij][ii] = i\n\n        if ij%2 == 0:\n            ii += 1\n            if ii == w:\n                ij += 1\n                ii = w-1\n        else:\n            ii -= 1\n            if ii == -1:\n                ij += 1\n                ii = 0\nfor l in M:\n    print(*l)", "def main():\n    H, W = list(map(int, input().split(' ')))\n    N = int(input())\n    A = list(map(int, input().split(' ')))\n    colors = list()\n    for i, a in enumerate(A):\n        c = i + 1\n        for _ in range(a):\n            colors.append(c)\n    assert len(colors) == H * W\n    ans = [[0 for _ in range(W)] for _ in range(H)]\n    # \u86c7\u8179\u72b6\u306b\u306c\u3063\u3066\u3044\u304f\n    for i, c in enumerate(colors):\n        w = i // H\n        h = min([i % (2 * H), 2 * H - 1 - (i % (2 * H))])\n        ans[h][w] = c\n    for row in ans:\n        print((' '.join(map(str, row))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\nA.insert(0, 0)\n\nans = [[-1 for _ in range(W)] for _ in range(H)]\ncolor = 1\n\nfor i in range(H):\n    for j in range(W):\n        if A[color] == 0:\n            color += 1\n        A[color] -= 1\n        ans[i][j] = color\n\nfor i in range(H):\n    a = ans[i]\n    if i % 2 == 1:\n        a = a[::-1]\n    print(\" \".join(map(str, a)))", "H,W=map(int,input().split())\nN=int(input())\na=list(map(int,input().split()))\n\nc=[[0 for i in range(W)] for i in range(H)]\nk=0\nfor i in range(H):\n    if i%2==0:\n        for j in range(W):\n            c[i][j]=k+1\n            a[k]-=1\n            if a[k]==0:\n                k+=1\n    else:\n        for j in range(W-1,-1,-1):\n            c[i][j]=k+1\n            a[k]-=1\n            if a[k]==0:\n                k+=1\nfor i in range(H):\n    for j in range(W):\n        print(c[i][j],end=' ')\n    print()\n", "H, W = [int(x) for x in input().split()]\nN = int(input())\na = [0] + [int(x) for x in input().split()]\n\nans = [[0 for _ in range(W)] for _ in range(H)]\nc = 1  # \u8272\nn = 0  # c\u8272\u3067\u5857\u3089\u308c\u305f\u6570\nfor i in range(H):\n    if i % 2 == 0:\n        start = 0\n        end = W\n        by = 1\n    else:\n        start = W - 1\n        end = -1\n        by = -1\n    for j in range(start, end, by):\n        ans[i][j] = c\n        n += 1\n        if n >= a[c]:\n            c += 1\n            n = 0\n\nfor i in range(H):\n    print(*ans[i])", "def main():\n    h, w, n, *a = list(map(int, open(0).read().split()))\n    s = sum([[i + 1] * a[i] for i in range(n)], [])\n\n    for i in range(h):\n        print((' '.join(map(str, s[i * w:(i + 1) * w])) if i % 2 == 0 else ' '.join(map(str, s[i * w:(i + 1) * w][::-1]))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H,W = list(map(int,input().split()))\nN = int(input())\na = list(map(int,input().split()))\ns = []\nfor i in range(1,N+1):\n    for j in range(a[i-1]):\n        s.append(i)\n##print(s)\nnum = 0\nfor i in range(H):\n    tmp = []\n    for j in range(W):\n        tmp.append(s[num])\n        num += 1\n    \n    if i%2 == 1:\n        tmp.reverse()\n    print((*tmp))\n", "h,w = map(int,input().split())\nn = int(input())\nA = [int(i) for i in input().split()]\ndic = {}\nfor i in range(n):\n    dic[i+1] = A[i]\n\nMap = [0 for i in range(h*w)]\nheight = 0\nwidth = 0\nnow = 0\ncolor = list(dic.keys())\n\ncolor_num = 0\nwhile now < h*w:\n    if height%2==0:\n        Map[now] = color[color_num]\n        dic[color[color_num]] -= 1\n        if dic[color[color_num]]==0:\n            color_num += 1\n        width += 1\n        if width==w:\n            height += 1\n            width = w-1\n    else:\n\n        Map[now] = color[color_num]\n        dic[color[color_num]] -=1\n        if dic[color[color_num]]==0:\n            color_num += 1\n        width -= 1\n        if width==-1:\n            height += 1\n            width = 0\n    now = height*w + width\nst = 0\n\nfor i in range(h):\n    print(*Map[st:st+w])\n    st = st+w", "H,W = map(int,input().split())\nN = int(input())\na = list(map(int,input().split()))\nb = []\nfor i in range(N):\n    for j in range(a[i]):\n        b.append(i+1)\ns = 0\nfor i in range(H):\n    if i % 2== 0:\n        print(*b[s:s+W])\n    else:\n        print(*b[s+W-1:s-1:-1])\n    s += W", "h,w=map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\n\nans=[[0]*w for _ in range(h)]\ni=0\nj=0\njugh=0\n\n\nif w==1:\n    for i in range(n):\n        for j in range(a[i]):\n            print(i+1)\n    return\n\n\n\nfor z in range(n):\n    count=0\n    while count<a[z]:\n       # print(i,j,z+1)\n        if jugh==0:\n            ans[i][j]=z+1\n            j+=1\n            c=0\n        elif jugh==2:\n            if j==0:\n                jugh=0\n                c=1\n                ans[i][j]=z+1\n                j+=1\n            else:\n                \n                jugh=1\n                c=1\n                \n                ans[i][j]=z+1\n                j-=1\n        else:\n            ans[i][j]=z+1\n            j-=1\n            c=0\n\n        if j==w and c==0:\n            i+=1\n            j-=1\n            jugh=2\n        if j==-1 and c==0:\n            i+=1\n            j+=1\n            jugh=2\n            \n        count+=1\n\nfor i in range(h):\n    for j in range(w):\n        print(ans[i][j],end=\" \")\n    print()\n", "import sys\n\nH, W = map(int, sys.stdin.readline().split())\nN = int(sys.stdin.readline())\nA =  list(map(int, sys.stdin.readline().split()))\n\ngrid = [[0 for _ in range(W)] for _ in range(H)]\npoint = A[0]\ncolor = 0\nfor i in range(H):\n    for j in range(W):\n        # \u8272i\u304c\u63a5\u3059\u308b\u3088\u3046\u306b\u3001\u5de6 -> \u53f3 -> \u4e0b\u306e\u5217\u3092\u53f3\u304b\u3089\u3001\u3068\u67d3\u3081\u3066\u3044\u304f\n        if i % 2 == 0:\n            x = j\n        else:\n            x = W - j - 1\n        if point == 0:\n            color += 1\n            point = A[color]\n\n        grid[i][x] = color + 1\n        point -= 1\n\nfor i in range(H):\n    print(*grid[i])", "\ndef solve():\n    h, w = map(int, input().split())\n    n = int(input())\n    a = list(map(int, input().split()))\n    a_line = []\n    for i, i_cnt in enumerate(a):\n        color = i+1\n        for j in range(i_cnt):\n            a_line.append(color)\n    # w\u3054\u3068\u306b\u533a\u5207\u3063\u3066list\u306b\u8a70\u3081\u308b\n    ans = [['']*w for _ in range(h)]\n    cur = 0\n    for i in range(h):\n        for j in range(w):\n            ans[i][j] = str(a_line[cur])\n            cur += 1\n    for i in range(h):\n        print(' '.join(ans[i] if i%2==0 else reversed(ans[i])))\n\nsolve()", "from collections import deque\n\nH, W = 2, 2\nN = 3\nARR = [2, 1, 1]\n\nH, W = 3, 5\nN = 5\nARR = [1, 2, 3, 4, 5]\n\nH, W = 1, 1\nN = 1\nARR = [1]\n\nH, W = list(map(int, input().split()))\nN = int(input())\nARR = list(map(int,input().split()))\n\ndef calculate(h, w, n, arr):\n    resources = deque()\n\n    for index, ar in enumerate(arr):\n        for m in range(ar):\n            resources.append((index + 1))\n\n    nodeStatus = [[False for i in range(w)] for j in range(h)]\n    for j in range(h):\n        if j % 2 == 0:\n            startIndex = 0\n            for i in range(startIndex, w, 1):\n                nodeStatus[j][i] = str(resources.popleft())\n        else:\n            startIndex = w - 1\n            for i in range(startIndex, -1, -1):\n                nodeStatus[j][i] = str(resources.popleft())\n\n    for j in range(h):\n        print((\" \".join(nodeStatus[j])))\n\n\ncalculate(H, W, N, ARR)\n", "h, w = list(map(int, input().split()))\nn = int(input())\na = [int(i) for i in input().split()]\n\ncolor = [[None] * w for _ in range(h)]\n\n\ndef zigzag(h, w):\n    ih, iw = 0, 0\n\n    while ih < h:\n        yield (ih, iw)\n\n        if ih % 2 == 0:\n            if iw == w - 1:\n                ih += 1\n            else:\n                iw += 1\n        else:\n            if iw == 0:\n                ih += 1\n            else:\n                iw -= 1\n\n\nia = 0\nic = 0\n\nfor ih, iw in zigzag(h, w):\n    ia += 1\n    if ia > a[ic]:\n        ic += 1\n        ia = 1\n\n    color[ih][iw] = ic + 1\n\n\nfor row in color:\n    print((' '.join(map(str, row))))\n", "h, w, n, *a = map(int, open(0).read().split())\nl = []\nfor c, a in enumerate(a, 1):\n    l += [c] * a\nfor p in range(h):\n    print(*l[p*w:-~p*w][::[1, -1][p%2]])", "h,w=map(int,input().split());input();a,d,MAP,w1,h1=list(map(int,input().split())),[],[[0 for i in range(w)] for j in range(h)],0,0\nfor i,j in enumerate(a):\n  for _ in range(j):\n    if w1<w:\n      MAP[h1][w1]= i+1\n      w1+=1\n      if w1==w:\n        w1=0\n        h1+=1\nfor i in range(h):\n  if i%2!=0: MAP[i] = MAP[i][::-1]\n[print(*i,sep=' ') for i in MAP]", "H,W=map(int,input().split())\nN=int(input())\na=list(map(int,input().split()))\n\nans=[]\nfor i in range(N):\n  ans.extend([i+1]*a[i])\n  \nfor i in range(H):\n  if i % 2 == 0:\n    print(*ans[i*W:(i+1)*W])\n  else:\n    print(*ans[i*W:(i+1)*W][::-1])", "h,w = map(int,input().split())\nn = int(input())\na = list(map(int,input().split()))\nans = [[0] * w for i in range(h)]\ni = 0\nj = 0\nk = 0\nflg = True\nwhile i < h:\n    ans[i][j] = str(k+1)\n    a[k] -= 1\n    if a[k] == 0:\n        k += 1\n    if flg:\n        j += 1\n        if j == w:\n            j -= 1\n            i += 1\n            flg = False\n    else:\n        j -= 1\n        if j == -1:\n            j += 1\n            i += 1\n            flg = True\nfor i in range(h):\n    print(' '.join(ans[i]))", "H, W = map(int, input().split())\nN = int(input())\na = list(map(int, input().split()))\ni = 0\n\nfor x in range(H):\n    c = []\n    for y in range(W):\n        c.append(i + 1)\n        a[i] -= 1\n        if a[i] == 0:\n            i += 1\n            \n    if x % 2 == 0:\n        print(*c)\n    else:\n        print(*c[::-1])", "h,w,n,*l=map(int,open(0).read().split())\ng=[[] for i in range(h)]\nr=t=0\nfor i,c in enumerate(l):\n  i+=1\n  while c>=(s:=w-t):\n    if r%2: g[r]+=[i]*s\n    else: g[r]=[i]*s+g[r]\n    r+=1\n    c-=s\n    t=0\n  if c:\n    if r%2: g[r]+=[i]*c\n    else: g[r]=[i]*c+g[r]\n    t+=c\nfor r in g: print(*r)", "h,w=list(map(int,input().split()))\nn=int(input())\na = list(map(int,input().split()))\nmat = [[0]*w for i in range(h)]\nidx = 0\nfor y in range(h):\n  for x in range(w):\n    if y % 2 == 0:\n      mat[y][x] = idx+1\n    else:\n      mat[y][w-1-x] = idx+1\n    a[idx] -= 1\n    if a[idx] == 0:\n      idx += 1\n\nfor y in range(h):\n  print((\" \".join(list(map(str, mat[y])))))\n", "h,w = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\n\nl = [[] for _ in range(h)]\nx = 0\ny = 0\nfor i in range(n):\n  for _ in range(a[i]):\n    l[y].append(i+1)\n    x += 1\n    if x == w:\n      x = 0\n      y += 1\nfor i in range(h):\n  if i%2 == 0: print((*l[i]))\n  else: print((*reversed(l[i])))\n", "from numpy import *\nH,W = map(int,input().split())\nN = int(input())\nA = list(map(int,input().split()))\nB = []\nans = zeros((H,W),int64)\n\nfor n in range(N):\n  B.extend(A[n]*[n+1])\n\nn = 0\nfor h in range(H):\n  for w in range(W):\n    if h%2==0:\n      ans[h][w] = B[n]\n    else:\n      ans[h][-(w+1)] = B[n]\n    n+=1\n\nfor h in range(H):\n  print(*ans[h])", "\nh,w=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\n\nbb=[[0]*w for i in range(h)]\nidx=0\nkk=0\nfor i in range(h):\n    if i%2==0:\n        wst=0\n        wed=w\n        wpt=1\n    else:\n        wst=w-1\n        wed=-1\n        wpt=-1\n        \n    for j in range(wst,wed,wpt):\n        if kk>=a[idx]:\n            idx+=1\n            kk=0\n        bb[i][j]=str(idx+1)\n        kk+=1\n        \nfor i in range(h):\n    print((\" \".join(bb[i])))    \n", "H,W=map(int,input().split())\nN=int(input())\nalist=list(map(int,input().split()))\n\ncmat=[[-1]*W for _ in range(H)]\n\nx,y=0,0\nc=1\nfor a in alist:\n  while a:\n    #print(x,y)\n    cmat[x][y]=c\n    y+=1\n    a-=1\n    \n    if y==W:\n      x+=1\n      y=0\n  c+=1\n      \n#print(cmat)\nfor i in range(H):\n  if i%2==1:\n    cmat[i].reverse()\n  print(*cmat[i])", "H,W=map(int, input().split())\nN=int(input())\nA=list(map(int, input().split()))\n \nans = []\nfor i, a in enumerate(A):\n  ans.extend([str(i+1)] * a)\n  \nfor i in range(H):\n  l = ans[i*W : (i+1)*W ]\n  if i%2:\n    l.reverse()\n  print(' '.join(l))", "from collections import defaultdict\nh, w=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\n\nans=[0]*h\nfor i in range(h):\n    ans[i]=[0]*w\n\nb=[]\nfor i in range(n):\n    for k in range(a[i]):\n        b.append(i+1)\n\nhidx=0\nwidx=0\nfor i in range(len(b)):\n    ans[hidx][widx]=b[i]\n    if hidx%2==0:\n        widx+=1\n    else:\n        widx-=1\n    if widx==w:\n        widx=-1\n        hidx+=1\n    if widx==-(w+1):\n        widx=0\n        hidx+=1\n\nfor i in range(h):\n    answer=ans[i]\n    L=[str(a) for a in answer]\n    L=\" \".join(L)\n    print(L)\n\n\n", "import numpy as np\nH,W = map(int,input().split())\nN = int(input())\nlsa = list(map(int,input().split()))\nls2 = []\nfor i in range(N):\n    ls2 += [i+1]*lsa[i]\narr = np.array(ls2)\narr = arr.reshape(H,W).tolist()\narr2 = []\nfor i in range(H):\n    if i % 2 == 0:\n        arr2.append(arr[i])\n    else:\n        arr[i].reverse()\n        arr2.append(arr[i])\nfor i in range(H):\n    arr2[i] = [str(j) for j in arr2[i]]\n    print(' '.join(arr2[i]))", "H, W = map(int, input().split())\nN = int(input())\na = list(map(int, input().split()))\ndef main():\n  ans = [[0]*W for _ in range(H)]\n  color = 0\n  num = 0\n  for i in range(H):\n    if i % 2 == 0:\n      for j in range(W):\n        ans[i][j] = color+1\n        num += 1\n        if num == a[color]:\n          color += 1\n          num = 0\n    else:\n      for j in range(W-1, -1, -1):\n        ans[i][j] = color+1\n        num += 1\n        if num == a[color]:\n          color += 1\n          num = 0\n  for i in range(H):\n    print(*ans[i])\n  \ndef __starting_point():\n  main()        \n__starting_point()", "h,w,n,*l=map(int,open(0).read().split())\ng=[[] for i in range(h)]\nr=t=0\nfor i,c in enumerate(l):\n  i+=1\n  while c>=w-t:\n    g[r]+=[i]*(w-t)\n    r+=1; c-=w-t; t=0\n  if c:\n    g[r]+=[i]*c\n    t+=c\nfor i in range(h): print(*g[i][::2*(i%2)-1])", "\nH,W=list(map(int,input().split()))\nN=int(input())\nS=list(map(int,input().split()))\n\nT = [[0 for j in range(W)] for i in range(H)]\nposx=1\nposy=1\nfor i in range(N):\n    tmp=S[i]\n    cnt=0\n    while tmp>cnt:\n        T[posy-1][posx-1]=i+1\n        if posy%2!=0:\n            posx+=1\n            if posx>W:\n                posy+=1\n                posx-=1\n        else:\n            posx-=1\n            if posx<1:\n                posy+=1\n                posx+=1\n        cnt+=1  \n\nfor i in T:\n    print((*i))\n\n", "def main():\n\tH, W = [int(x) for x in input().split(\" \")]\n\tN = int(input())\n\tA = [int(a) for a in input().split(\" \")]\n\tc = [[0] * W for i in range(H)]\n\tk = 0\n\tfor i in range(len(c)):\n\t\tfor j in range(len(c[i])):\n\t\t\tif i % 2 == 0:\n\t\t\t\tc[i][j] = str(k + 1)\n\t\t\t\tA[k] -= 1\n\t\t\telif i % 2 == 1:\n\t\t\t\tc[i][-j-1] = str(k + 1)\n\t\t\t\tA[k] -= 1\n\t\t\tif A[k] == 0:\n\t\t\t\tk += 1\n\tprint(\"\\n\".join([\" \".join(ci) for ci in c]))\n\nmain()", "from collections import deque\nh,w=map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\nc=1\nfor i in range(h):\n    row=deque()\n    for j in range(w):\n        if i%2==0:\n            row.append(c)\n            a[c-1]-=1\n            if a[c-1]==0:\n                c+=1\n        else:\n            row.appendleft(c)\n            a[c-1]-=1\n            if a[c-1]==0:\n                c+=1\n    print(*row)", "h,w,n,*a=map(int,open(0).read().split())\nl=[]\nfor i in range(n): l+=[i+1]*a[i]\nfor i in range(h): print(*l[i*w:i*w+w][::1-i%2*2])", "h,w = map(int,input().split())\nn = int(input())\na = map(int,input().split())\n\nans = sum(([i]*ai for i,ai in enumerate(a,1)),[])\nans = [ans[i*w:(i+1)*w] if i%2 ==0 else ans[(i+1)*w-1:i*w-1:-1] for i in range(h)]\nfor c in ans:\n    print(*c)", "h,w = list(map(int,input().split()))\nn = int(input())\nls = list(map(int,input().split()))\ndi = []\ndef split_list(l, n):\n    for idx in range(0, len(l), n):\n        yield l[idx:idx + n]\nfor i in range(n):\n    for j in range(ls[i]): \n        di.append(i+1)\nnew = list(split_list(di, w))\nfor j in range(len(new)):\n    if j % 2 == 0:\n        new[j].sort(reverse=True)\nfor k in range(len(new)):\n    print((*new[k]))\n", "H,W,N,*A = map(int,open(0).read().split())\nB = []\n\nfor n in range(N):\n  B+=A[n]*[n+1]\n\nfor h in range(H):\n  print(*B[h*W:h*W+W][::1-h%2*2])", "H, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\nans = []\n\nfor i in range(N):\n  for _ in range(A[i]):\n    ans.append(i+1)\n  \nfor i in range(H):\n  if i%2 == 0:\n    print(*ans[i*W:(i+1)*W])\n  else:\n    print(*reversed(ans[i*W:(i+1)*W]))", "h,w=map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\nc=[0]*(w*h)\nk=0\nfor l,i in enumerate(a):\n  for j in range(i):\n    c[k]=l+1\n    k+=1\ndef split_list(l, n):\n    for idx in range(0, len(l), n):\n        yield l[idx:idx + n]\nans = list(split_list(c, w))\nfor i,j in enumerate(ans):\n  if i%2==0:\n    print(*j)\n  else:\n    print(*j[::-1])", "H, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\n\nB = [[0] * W for _ in range(H)]\n\nX = []\nfor i, a in enumerate(A):\n    X += [i + 1] * a\n\nfor i in range(H):\n    for j in range(W):\n        if i % 2 == 0:\n            B[i][j] = X[i * W + j]\n        else:\n            B[i][W - j - 1] = X[i * W + j]\nfor i in range(H):\n    print(*B[i])", "h , w = list(map(int, input().split()))\nn = int(input())\na = list(map(int,input().split()))\np = []\np2 = []\nj = 1\nfor i in a:\n    p+=[str(j)]*i\n    j+=1\nfor i in range(h):\n    p2.append(p[i*w:i*w+w])\nfor i in range(h):\n    if i%2==1:\n        p2[i].reverse()\nfor i in p2:\n    print((\" \".join(i)))\n", "h,w=map(int,input().split());input();a,MAP,w1,h1=list(map(int,input().split())),[[0 for i in range(w)] for j in range(h)],0,0\nfor i,j in enumerate(a):\n  for _ in range(j):\n    if w1<w:\n      MAP[h1][w1]= i+1\n      w1+=1\n      if w1==w:\n        w1=0\n        h1+=1\nfor i in range(h):\n  if i%2!=0: MAP[i]=MAP[i][::-1]\n[print(*i,sep=' ') for i in MAP]", "h,w=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\nans=[[0]*w for _ in range(h)]\nnum=-1\nfor i in range(n):\n    for j in range(a[i]):\n        num+=1\n        if (num//h)%2==1:\n            ans[h-1-num%h][num//h]=i+1\n        else:\n            ans[num%h][num//h]=i+1\nfor i in range(h):\n    print((*ans[i]))\n", "h,w = map(int,input().split())\nn = int(input())\na = list(map(int,input().split()))\nl = []\n\nfor i in range(len(a)):\n  l += [(i+1)]*a[i]\n  \nfor i in range(h):\n  if i%2 == 0:\n    print(*l[i*w:(i+1)*w])\n  else:\n    print(*list(reversed(l[i*w:(i+1)*w])))", "H, W = list(map(int, input().split()))\nN = int(input())\nfrom collections import deque\n\nA = deque(list(map(int, input().split())))\nnuriwake = 1\nans = []\nfor i in range(H):\n    t = []\n    for j in range(W):\n        if A[0] == 0:\n            A.popleft()\n            nuriwake += 1\n        A[0] -= 1\n        t.append(nuriwake)\n    if i % 2 != 0:\n        t = reversed(t)\n    ans.append(t)\nfor a in ans:\n    print((' '.join(map(str, a))))\n", "H, W = map(int, input().split())\nN = int(input())\n\na = list(map(int, input().split()))\n\nl_list = []\n\nfor i in range(N):\n    l_list += [i+1] * a[i]\n\njudge = 0\nfor i in range(H):\n    p_list = l_list[i*W:(i+1)*W]\n    if judge % 2 == 1:\n        p_list = p_list[::-1]\n    for j in p_list:\n        print(j, end=' ')\n    print()\n    judge += 1", "H,W=map(int,input().split())\nN=int(input())\na=list(map(int,input().split()))\n\nans=[[0]*W for _ in range(H)]\np=[0,0]\nfor i in range(N):\n    cnt=a[i]\n    while cnt>0:\n        ans[p[0]][p[1]]=i+1\n        if p[1]%2==0:\n            if p[0]==H-1:\n                p[1]+=1\n            else:\n                p[0]+=1\n        else:\n            if p[0]==0:\n                p[1]+=1\n            else:\n                p[0]-=1\n        cnt-=1\n\nfor i in range(H):\n    print(*ans[i])", "import sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\ndef s(): return input()\ndef i(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nINF = 10**9\nmod = 10**9+7\n\nH,W = I()\nN = i()\na = l()\nlist = []\nfor i in range(N):\n    for j in range(a[i]):\n        list.append(i+1)\nans = [[] for _ in range(H)]\nfor i in range(H):\n    for j in range(W):\n        ans[i].append(list.pop(0))\nfor i in range(H):\n    if i%2 == 1:\n        print(*ans[i][::-1])\n    else:\n        print(*ans[i])", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    h,w = i_map()\n    n = i_input()\n\n    a = i_list()\n    ans = []\n    for m,i in enumerate(a):\n        ans.extend([str(m+1)]*i)\n    ans = list(ans)\n    for i in range(1,h+1):\n        if i%2 == 0:\n            print((\" \".join(ans[w*(i-1):w*(i-1)+w])))\n        else:\n            print((\" \".join(ans[w*(i-1):w*(i-1)+w][::-1])))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import deque\nH,W=map(int,input().split())\nN=int(input())\na=list(map(int,input().split()))\n\n#print(a)\nj=1\nfor i in range(H):\n    x=deque()\n    while len(x)<W:\n        if i%2==0:\n            a[j-1]-=1\n            x.append(str(j))\n        else:\n            a[j-1]-=1\n            x.appendleft(str(j))\n        if a[j-1]==0:\n            j+=1\n    A=\" \".join(list(x))\n    print(A)", "h,w = map(int,input().split())\nn = int(input())\na = list(map(int,input().split()))\n\nans = []\nfor i in range(n):\n  ans += [i+1]*a[i]\n\nans = [ans[i*w:(i+1)*w] if i%2 ==0 else ans[(i+1)*w-1:i*w-1:-1] for i in range(h)]\nfor c in ans:\n    print(*c)", "def main():\n    h, w, n, *a = list(map(int, open(0).read().split()))\n    l = [[i + 1] * a[i] for i in range(n)]\n    s = sum(l, [])\n\n    f = False\n    ans = ''\n    for i in range(h):\n        x = s[i * w: (i + 1) * w]\n        if f:\n            x = x[::-1]\n        f = not f\n        ans += ' '.join(map(str, x)) + '\\n'\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H, W = list(map(int, input().split()))\nN = int(input())\na = [int(x) for x in input().split()]\ntemp = []\nfor i in range(N):\n    for _ in range(a[i]):\n        temp.append(i+1)\nans = []\nfor i in range(H):\n    ans = temp[i*W:(i+1)*W]\n    if i&1:\n        ans.reverse()\n    print((*ans))\n", "H, W = map(int,input().split())\nN = int(input())\na = list(map(int,input().split()))\nc = [[None]*W for _ in range(H)]\ndirs = [(0,1),(1,0),(0,-1),(-1,0)]\ni,j = 0,0\nd = 0\ncolor = 0\nfor _ in range(H*W):\n    c[i][j] = color+1\n    a[color] -= 1\n    if a[color] == 0:\n        color += 1\n    di,dj = dirs[d]\n    ni,nj = i+di,j+dj\n    if 0 <= ni < H and 0 <= nj < W and c[ni][nj] == None:\n        i,j = ni,nj\n        continue\n    d = (d+1) % 4\n    di,dj = dirs[d]\n    i,j = i+di,j+dj\nfor l in c:\n    print(*l)", "h, w = map(int, input().split())\nn = int(input())\ncolors = list(map(int, input().split()))\ncmap = [(i+1,a) for i,a in enumerate(colors)]\ncampus=[0]*(h*w)\n\ndef printmtrx(campus):\n    ts=\"\"\n    for idx,i in enumerate(campus):\n        if((idx+1)%w==1):\n            if idx==0:\n                ts += str(i) + \" \"\n            else:\n                ts+=\"\\n\"+str(i)+\" \"\n        else:\n            if (idx+1)%w==0:\n                ts += str(i)\n            else:\n                ts+=str(i)+\" \"\n    print(ts)\n\ndef printmtrx2(campus):\n    cnt=0\n    for i in range(h):\n        ts=\"\"\n        for j in range(w):\n            if not j==0:\n                ts+=\" \"\n            ts+=str(campus[cnt])\n            cnt+=1\n        print(ts)\n\n#print(cmap)\n#print(campus)\n\ncnt=cmap[0][1]\nidx=0\ncampusidx=0\ndirect=0\nwhile cnt:\n    #print(campusidx)\n    #printmtrx(campus)\n    #print(\"\")\n    campus[campusidx]=cmap[idx][0]\n    cnt-=1\n    if(cnt<1):\n        idx+=1\n        if(idx>=len(cmap)):\n            break\n        cnt=cmap[idx][1]\n    campusidx+=1-2*direct\n    if campusidx%w==0 and direct==0:\n        campusidx+=w-1\n        direct=1\n    elif campusidx%w==w-1 and direct==1:\n        campusidx+=w+1\n        direct=0\nprintmtrx2(campus)", "h, w = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\nret = [[0] * w for i in range(h)]\n\nline = []\n\nfor i, item in enumerate(a):\n    line.extend([i+1] * item)\n\nfor i, item in enumerate(line):\n    sho = i // w\n    amari = i % w\n    if sho % 2 == 0:\n        ret[sho][amari] = item\n    else:\n        ret[sho][w-1-amari] = item\n\nfor item in ret:\n    print((' '.join(map(str, item))))\n", "h, w = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\nc = []\nfor i in range(len(a)):\n  c += [i + 1] * a[i]\nfor i in range(h):\n  if i % 2 == 0:\n    print((*c[i*w:(i+1)*w]))\n  else:\n    print((*c[(i+1)*w-1:i*w-1:-1]))\n", "def resolve():\n    H, W = list(map(int, input().split()))\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = [[0 for _ in range(W)] for __ in range(H)]\n    color = 1\n    reverse = False\n    cnt = 0\n    for i in range(H):\n        for j in range(W):\n            if reverse:\n                _j = W-1 - j\n            else:\n                _j = j\n            C[i][_j] = color\n            cnt += 1\n            if cnt == A[color-1]:\n                color += 1\n                cnt = 0\n        reverse = not reverse\n    [print(\" \".join(map(str, C[i]))) for i in range(H)]\n        \n\nif '__main__' == __name__:\n    resolve()", "H,W,N,*a = map(int, open(0).read().split())\nans = [[0] * W for _ in range(H)]\ncount = 0\nusing = 0\nfor i in range(H*W):\n    dm = divmod(i,W)\n    h = dm[0]\n    if h % 2 == 0:\n        w = dm[1]\n    else:\n        w = (dm[1]+1) * (-1)\n    ans[h][w] = using + 1\n    count += 1\n    if count == a[using]:\n        using += 1\n        count = 0\nfor x in ans:\n    print(*x)", "h, w = [int(x) for x in input().split()]\nn = int(input())\na = [int(x) for x in input().split()]\n \nans = [[\"0\"] * w for x in range(h)]\n \nnow = 0\nfor i in range(n):\n  for j in range(a[i]):\n    cc = now\n    x = cc // w\n    cc %= w\n    if x % 2 == 0:\n      y = cc\n    else:\n      y = w - cc - 1\n    #print(now,i,x,y)\n    ans[x][y] = str(i + 1)\n    now += 1\n \nfor i in range(h):\n  print(\" \".join(ans[i]))", "from collections import deque\nh,w=list(map(int,input().split()))\nn=int(input())\na=list(map(int,input().split()))\nae=[]\nans=[]\nrl=0\nfor i in range(n):\n  ae.extend([i+1]*a[i])\nfor x in range(h):\n  if x%2==0:\n    ans.append(ae[w*x:w*(x+1)])\n  else:\n    ans.append(reversed(ae[w*x:w*(x+1)]))\n\nfor r in ans:\n  print((' '.join(list(map(str,r)))))\n  \n  \n  \n", "import numpy as np\n\nH, W = list(map(int, input().split()))\nN = int(input())\nA = list(map(int, input().split()))\n\nout = []\n\nfor i, a in enumerate(A):\n    for j in range(a):\n        out.append(i + 1)\n\n# print(out)\nout = np.array(out).reshape((H, W))\n# print(out, out.shape)\n\nsign = 1\nfor li in out:\n    print((*li[::sign]))\n    sign *= -1\n", "h,w=map(int,input().split());input();a,MAP,w1,h1=list(map(int,input().split())),[[0 for i in range(w)] for j in range(h)],0,0\nfor i,j in enumerate(a):\n  for _ in range(j):\n    if w1<w:\n      MAP[h1][w1]= i+1\n      w1+=1\n      if w1==w:\n        w1=0\n        h1+=1\nfor i in range(h):\n  if i%2!=0: MAP[i] = MAP[i][::-1]\n[print(*i,sep=' ') for i in MAP]", "\n\ndef fill(color_no,color_count,pos_x,pos_y,W,grid):\n  \n  while color_count > 0:\n    grid[pos_y][pos_x] = color_no\n    #print(pos_x,pos_y,grid)\n    ## \u53f3\u7aef\u306b\u5230\u9054\n    if pos_x == W-1  and pos_y%2 == 0:\n      pos_y = pos_y+1\n    ## \u5de6\u7aef\u306b\u5230\u9054\n    elif pos_x == 0  and pos_y%2 == 1:\n      pos_y = pos_y+1\n    ##\u53f3\u304b\u3089\u5de6\u3078\n    elif pos_y%2 == 0:\n      pos_x = pos_x+1\n    ##\u5de6\u304b\u3089\u53f3\u3078\n    elif pos_y%2 == 1:\n      pos_x = pos_x-1\n    color_count = color_count-1\n    \n  return pos_x,pos_y,grid\nH,W = list(map(int,input().split()))\nN = int(input())\nA = list(map(int,input().split()))\n\nGrid = [[0]*W for i in range(H)]\npos_x = 0\npos_y = 0\nfor i in range(N):\n  pos_x,pos_y,Grid = fill(i+1,A[i],pos_x,pos_y,W,Grid)\n\nfor i in range(H):\n  print((*Grid[i]))\n", "import sys\nreadline = sys.stdin.readline\n\ndef main():\n    H, W = map(int, readline().rstrip().split())\n    N = int(readline())\n    A = list(map(int, readline().rstrip().split()))\n    res = [[-1] * W for _ in range(H)]\n    ht, wt = 0, 0\n    for i, a in enumerate(A):\n        while a:\n            res[ht][wt] = i+1\n            a -= 1\n            if (ht % 2 == 0 and wt == W-1) or (ht % 2 == 1 and wt == 0):\n                ht += 1 \n            elif  ht % 2 == 0:\n                wt += 1\n            else:\n                wt -= 1\n                \n    for l in res:\n        print(*l, sep=' ')\n\ndef __starting_point():\n    main()\n__starting_point()", "H, W = map(int, input().split())\nN = int(input())\na = list(map(int, input().split()))\ndata = [[] for _ in range(H)]\n\nk = 0\nfor i in range(N):\n    for j in range(a[i]):\n        data[k].append(i + 1)\n        if len(data[k]) == W:\n            k += 1\n\nfor i in range(H):\n    if i % 2 == 0:\n        for j in range(W):\n            print(data[i][j],'', end = '')\n    else:\n        for j in range(W):\n            print(data[i][W - j - 1],'', end = '')\n    print()\n\n\n\n", "import numpy as np\nH, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\n\nB = []\nfor i, a in enumerate(A, start=1):\n    for _ in range(a):\n        B.append(i)\n\nB = np.array(B)\nB = B.reshape(H, W)\n\nfor h in range(H):\n    if h % 2 == 1:\n        B[h] = B[h, ::-1]\n\nfor b in B:\n    print(*b)", "H,W=map(int,input().split())\nN=int(input())\nalist=list(map(int,input().split()))\n\ncmat=[]\nfor i in range(H):\n  cmat.append([-1]*W)\n\nx,y=0,0\nc=1\nfor a in alist:\n  while a:\n    if y<W:\n      #print(x,y)\n      cmat[x][y]=c\n      y+=1\n      a-=1\n    \n    if y==W:\n      x+=1\n      y=0\n  \n  c+=1\n      \n#print(cmat)\nfor i in range(1,H,2):\n  cmat[i].reverse()\n#print(cmat)\n      \nfor i in range(H):\n  print(*cmat[i])", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return list(zip(*(MAP() for _ in range(n))))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7 \n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nH, W = MAP()\nN = INT()\na = LIST()\n\ncnt = 0\nans = [[-1]*W for _ in range(H)]\ntmp = a.pop(0)\ncolor = 1\nflg = 0\n\nfor i in range(H):\n\tfor j in range(W):\n\t\tif i%2 == 1:\n\t\t\tj = -j-1\n\t\tans[i][j] = color\n\t\ttmp -= 1\n\t\tif tmp == 0:\n\t\t\tif not a:\n\t\t\t\tbreak\n\t\t\ttmp = a.pop(0)\n\t\t\tcolor += 1\n\n\n\nfor i in ans:\n\tprint((\" \".join([str(x) for x in i])))\n", "with open(0) as f:\n    H, W, N, *a = map(int, f.read().split())\n\nline = []\nfor i in range(N):\n    line += [i+1] * a[i]\nans = [line[i*W:(i+1)*W] for i in range(H)]\nfor i, v in enumerate(ans):\n    if i&1:\n        v.reverse()\n    print(*v)", "h,w = map(int,input().split())\nn = int(input())\na = list(map(int,input().split()))\nR = []\nfor i in range(n):\n    for j in range(a[i]):\n        R.append(i+1)\nE = []\nfor i in range(h):\n    E.append(R[i*w:(i*w)+w])\nfor i in range(h):\n    if i%2:\n        print(\" \".join(map(str,reversed(E[i]))))\n    else:\n        print(\" \".join(map(str,E[i])))", "H, W = list(map(int, input().split()))\nN = int(input())\nA = list(map(int, input().split()))\nans = [[0]*W for _ in range(H)]\nh = 0\nw = 0\nfor i, a in enumerate(A):\n    for _ in range(a):\n        if w == W:\n            h += 1\n            w = 0\n        \n        if h % 2 != 0:\n            ind = W-w-1\n        else:\n            ind = w\n        ans[h][ind] = i+1\n        w += 1\nfor _ in range(H):\n    print((*ans[_]))\n", "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\ndef dp3(ini, i, j, k): return [[[ini]*i for _ in range(j)] for _ in range(k)]\n#import bisect #bisect.bisect_left(B, a)\n#from collections import defaultdict #d = defaultdict(int) d[key] += value\n#from itertools import accumulate #list(accumulate(A))\n\nH, W = mi()\nN = ii()\nA = li()\n\ntable = dp2(0, W, H)\ni = -1\nj = 0\nfor ind in range(N):\n    a = A[ind]\n    while a > 0:\n        if i+1 < H and not table[i+1][j]:\n            table[i+1][j] = ind+1\n            i += 1\n        elif j+1 < W and not table[i][j+1]:\n            table[i][j+1] = ind+1\n            j += 1\n        else:\n            if i > 0 and not table[i-1][j]:\n                table[i-1][j] = ind+1\n                i -= 1\n            elif j > 0 and not table[i][j-1]:\n                table[i][j-1] = ind+1\n                j -= 1\n        a -= 1\n\nfor i in range(H):\n    for j in range(W):\n        print(table[i][j], '', end='')\n    print('')", "H,W=map(int,input().split())\nL=[[0 for j in range(W)] for i in range(H)]\nN=int(input())\nR=list()\na=list(map(int,input().split()))\nfor i in range(N):\n  R+=[i+1]*a[i]\nfor i in range(H):\n  if i%2==0:\n    s=list(R[i*W:(i+1)*W])\n    s=list(map(str,s))\n    print(\" \".join(s))\n  else:\n    s=list(R[i*W:(i+1)*W])\n    s=list(reversed(s))\n    s=list(map(str,s))\n    print(\" \".join(s))", "import sys\n\n\nstdin = sys.stdin\ndef ns(): return stdin.readline().rstrip()\ndef ni(): return int(stdin.readline().rstrip())\ndef nm(): return list(map(int, stdin.readline().split()))\ndef nl(): return list(map(int, stdin.readline().split()))\n\n\ndef nextidx(h, x, y, dir):\n    if y == h - 1 and dir == -1:\n        return x + 1, y, 1\n    elif y == 0 and dir == 1:\n        return x + 1, y, -1\n    else:\n        return x, y - dir, dir\n\n\ndef main():\n    h, w = nm()\n    n = ni()\n    A = nl()\n    M = [[0] * w for _ in range(h)]\n    dir = -1\n    x = 0\n    y = 0\n    for i in range(n):\n        for j in range(A[i]):\n            M[x][y] = i + 1\n            y, x, dir = nextidx(h, y, x, dir)\n    for m in M:\n        print((*m))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h, w = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\nfor i, ai in enumerate(a):\n  ans.extend([str(i+1)] * ai)\n  \nfor i in range(h):\n  l = ans[i * w : (i + 1) * w ]\n  if i % 2:\n    l.reverse()\n  print(' '.join(l))", "h,w = map(int, input().split())\nn = int(input())\nal = list(map(int, input().split()))\n\nres=[]\n\nfor i in range(n):\n    for j in range(al[i]):\n        res.append((i+1))\n\nfor k in range(h):\n    temp = res[k*w:(k+1)*w]        \n    if k % 2==1:\n        temp = list(reversed(temp))\n    else:\n        pass\n    print(str(temp).replace(\"[\",\"\").replace(\"]\",\"\").replace(\",\",\" \"))", "h,w=map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\nans=[[0 for i in range(w)] for j in range(h) ]\n\nv=0\nd=0\ndf=0\nfor i in range(n):\n    t=i+1\n    f=0\n    while f<a[i]:\n        if df==0:\n            ans[v][d]=t\n\n        elif df==1:\n\n            ans[v][w-1-d]=t\n        f+=1\n        d+=1\n        if df==0 and d==w:\n            v+=1\n            df^=1\n            d=0\n        if df==1 and w-d==0:\n            v += 1\n            df ^= 1\n            d = 0\nfor h in ans:\n    print(*h)", "h, w = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\ns = []\nfor i in range(n):\n    for j in range(a[i]):\n        s.append(i+1)\nfor i in range(h):\n    x = []\n    for j in range(w):\n        x.append(s[w*i+j])\n    if i % 2 == 0:\n        print(*x)\n    else:\n        print(*x[::-1])", "h,w=map(int,input().split());input();a,d,MAP,w1,h1=list(map(int,input().split())),[],[[0 for i in range(w)] for j in range(h)],0,0\nfor i,j in enumerate(a):\n  for _ in range(j):\n    if w1<w:\n      MAP[h1][w1]= i+1\n      w1+=1\n      if w1==w:\n        w1=0\n        h1+=1\nif h>2 and w>2:\n  for i in range(h):\n    if i%2!=0:\n      MAP[i] = MAP[i][::-1]\n[print(*i,sep=' ') for i in MAP]", "H, W = map(int, input().split())\nN = int(input())\nA = list(map(int, input().split()))\nD = {}\nfor i in range(N):\n    D[i + 1] = A[i]\nC = []\nfor k, v in D.items():\n    [C.append(k) for _ in range(v)]\nh = 0\nwhile True:\n    h += 1\n    for i in range(W):\n        print(C[i], end=' ')\n    print('')\n    [C.pop(0) for _ in range(W)]\n    if h == H:\n        break\n    h += 1\n    for i in reversed(range(W)):\n        print(C[i], end=' ')\n    print('')\n    [C.pop(0) for _ in range(W)]\n    if h == H:\n        break", "h, w = [int(x) for x in input().split()]\nn = int(input())\na = [int(x) for x in input().split()]\n\nans = [[\"0\"] * w for x in range(h)]\n\nnow = 0\nfor i in range(n):\n  for j in range(a[i]):\n    cc = now\n    x = cc // w\n    cc %= w\n    if x % 2 == 0:\n      y = cc\n    else:\n      y = w - cc - 1\n    #print(now,i,x,y)\n    ans[x][y] = str(i + 1)\n    now += 1\n\nfor i in range(h):\n  print(\" \".join(ans[i]))", "h,w,n,*l=map(int,open(0).read().split())\ng=[[] for i in range(h)]\nr=t=0\nfor i,c in enumerate(l):\n  i+=1\n  while c>=(s:=w-t):\n    g[r]+=[i]*s\n    r+=1; c-=s; t=0\n  if c:\n    g[r]+=[i]*c\n    t+=c\nfor i in range(h): print(*g[i][::2*(i%2)-1])", "h,w = map(int,input().split())\nn = int(input())\na = list(map(int,input().split()))\n\nb = []\n\nans = [[0]*w]*h\n\nfor i in range(n):\n\tb += [i+1]*a[i]\n\nfor i in range(h):\n\tif i%2 == 0:\n\t\tans[i] = b[i*w : (i+1)*w]\n\telse:\n\t\tans[i] = reversed(b[i*w : (i+1)*w])\n\nfor i in range(h):\n\tprint(*ans[i])", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\nfrom operator import itemgetter\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nH, W = na()\nN = ni()\na = na()\nans = []\nfor i in range(N):\n    for _ in range(a[i]):\n        ans.append(i+1)\nfor i in range(H):\n    if i % 2 == 0:\n        print(*ans[i*W:(i+1)*W])\n    else:\n        print(*ans[i*W:(i+1)*W][::-1])", "def main():\n    def flatten_list(l):\n        for el in l:\n            if isinstance(el, list):\n                yield from flatten_list(el)\n            else:\n                yield el\n    H, W = list(map(int, input().split()))\n    n = int(input())\n    A = list(map(int, input().split()))\n    ans = []\n    for i, a in enumerate(A):\n        ans .append([str(i + 1)] * a)\n    ans = list(flatten_list(ans))\n    ans = [ans[i:i + W] if i // W % 2 == 0 else ans[i + W - 1:i - 1:-1] for i in range(0, len(ans), W)]\n    [print(' '.join(a)) for a in ans]\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, log\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return list(zip(*(MAP() for _ in range(n))))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nH, W = MAP()\nN = INT()\na = LIST()[::-1]\n\nans = [[0]*W for _ in range(H)]\ntmp = a.pop()\ncolor = 1\ncnt = 0\nfor i in range(H):\n    for j in range(W):\n        if i%2:\n            j = W-j-1\n        ans[i][j] = color\n        cnt += 1\n        if cnt == tmp and a:\n            cnt = 0\n            tmp = a.pop()\n            color += 1\n\nfor i in ans:\n    print((\" \".join([str(x) for x in i])))\n", "h, w = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\nmat = [[0] * w for _ in range(h)]\n\ni = 0\nj = 0\nnum = 1\nwhile True:\n    mat[j][i] = num\n    a[num-1] -= 1\n    if a[num-1] == 0:\n        num += 1\n    if i <= w-2:\n        i += 1\n    elif i == w-1:\n        if j == h-1:\n            break\n        i = 0\n        j += 1\n\nfor i in range(h):\n    if i % 2 == 1:\n        tmp = mat[i]\n        tmp.reverse()\n        mat[i] = tmp\n\nfor i in range(h):\n    for j in range(w-1):\n        print(mat[i][j], end = ' ')\n    print(mat[i][-1])", "h,w=map(int,input().split())\nn=int(input())\na=list(map(int,input().split()))\ntemp=[]\nfor i in range(n):\n    for _ in range(a[i]):\n        temp.append(i+1)\n\nans=[]\nfor j in range(h):\n    if j%2==0:\n        ans.append(list(temp[j*w:(j+1)*w]))\n    else:\n        ans.append(list(temp[(j+1)*(w)-1:j*w-1:-1]))\n   \n        \n\nfor k in ans:\n    ans2=[str(v) for v in k]\n    print(\" \".join(ans2))", "import numpy as np\n\nH, W = list(map(int, input().split()))\nN = int(input())\na = list(map(int, input().split()))\n\ncolors = np.array([[0]*W]*H)\n\ni = 0\nj = 0\nflag = True\ncount = 0\nfor k in range(N):\n    for m in range(a[k]):\n        colors[i, j] = str(k+1)\n        count += 1\n        if count % W == 0:\n            i += 1\n            if flag == True:\n                flag = False\n            else:\n                flag = True\n            continue\n        if flag == True:\n            j += 1\n        else:\n            j -= 1\n\nfor i in range(H):\n    s = list(colors[i])\n    for j in range(W):\n        s[j] = str(s[j])\n    p = ' '.join(s)\n    print(p)\n", "h, w, n, *a = map(int, open(0).read().split())\nl = []\nfor c, a in enumerate(a):\n    l += [c + 1] * a\nfor p in range(h):\n    print(*l[p*w:-~p*w][::[1, -1][p%2]])", "H,W = map(int,input().split())\nN = int(input())\na = list(map(int,input().split()))\nnow = 0\ngrid = [0]*(H*W)\n\nfor i in range(N):\n  for j in range(now,now+a[i]):\n    grid[j] = i+1\n  now += a[i]\n\nreverse = 0\n\nfor k in range(0,H*W,W):\n  if reverse:\n    print(*grid[k+W-1:k-1:-1])\n    reverse = 0\n  else:\n    print(*grid[k:k+W])\n    reverse = 1", "from collections import deque\nH,W = map(int,input().split())\nn = int(input())\na_ls = list(map(int, input().split()))\ncolor_q = deque()\nfor color, times in enumerate(a_ls,1):\n    for _ in range(times):\n        color_q.append(color)\nans_mat = [[0] * W for _ in range(H)]\nfor y in range(H):\n    for x in range(W):\n        ans_mat[y][x] = color_q.popleft()\nfor i,y in enumerate(range(H)):\n    ans_ls = ans_mat[y]\n    if i % 2 == 1:\n        ans_ls = ans_ls[::-1]\n    ans_ls = list(map(str,ans_ls))\n    print(' '.join(ans_ls))", "h,w,_,*a=map(int,open(0).read().split())\nl=[]\nfor i,c in enumerate(a): l+=[i+1]*c\nfor i in range(h): print(*l[i*w:-~i*w][::2*(i%2)-1])", "H, W = map(int, input().split())\nN = int(input())\na = list(map(int,input().split()))\n\ng = [[1]*(W+2)]\nfor i in range(H):\n    g.append([1] + [0]*W + [1])\ng.append([1]*(W+2))\n\ntemp = [[1, 1]]\ng[1][1] = 1\nc, cnt = 1, 0\nwhile temp:\n    p = temp.pop()\n    for y, x in [[0, 1], [0, -1], [1, 0]]:\n        if g[p[0]+y][p[1]+x] == 0:\n            temp.append([p[0]+y, p[1]+x])\n            if c == a[cnt]:\n                cnt += 1\n                c = 1\n            else: c += 1\n            g[p[0]+y][p[1]+x] = cnt+1\n            break\nfor gg in g[1:-1]:\n    print(*gg[1:-1])", "h,w = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\n\nans = []\nfor i in range(n):\n  for _ in range(a[i]):\n    ans.append(i+1)\n  \nfor i in range(h):\n  if i%2 == 0: print(*ans[i*w:(i+1)*w])\n  else: print(*reversed(ans[i*w:(i+1)*w]))", "import numpy as np\n\ndef abc069_d():\n    H, W = map(int, input().split())\n    _ = int(input())\n    A = list(map(int, input().split()))\n\n    # \u3044\u3063\u305f\u30931\u6b21\u5143\u306b\u4e26\u3079\u308b\n    flat = []\n    for i, a in enumerate(A):\n        flat += [i+1] * a\n\n    # 2\u6b21\u5143\u306b\u5909\u5f62\u3057\u3066\u30011\u884c\u98db\u3070\u3057\u3067\u53cd\u8ee2(\u6298\u308a\u8fd4\u3057\u3066\u5f80\u5fa9\u3059\u308c\u3070\u3064\u306a\u304c\u308b)\n    grid = np.array(flat, dtype=int).reshape((H, W))\n    for i in range(H):\n        if i % 2 == 0:\n            print(*grid[i], sep=' ')\n        else:\n            print(*grid[i, ::-1], sep=' ')\n\nabc069_d()", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    H, W, N, *A = list(map(int, read().split()))\n\n    C = [[0] * W for _ in range(H)]\n    vec = [i for i, a in enumerate(A, 1) for _ in range(a)]\n\n    for i in range(H):\n        for j in range(W):\n            color = vec[i * W + j]\n            if i % 2 == 0:\n                C[i][j] = color\n            else:\n                C[i][W - j - 1] = color\n\n    for row in C:\n        print((*row))\n\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h, w = map(int, input().split())\nn = int(input())\na = list(map(int, input().split()))\ncol = []\nfor i in range(n):\n    for j in range(a[i]):\n        col.append(i+1)\ncnt = 0\nfor i in range(h):\n    p = col[cnt: cnt+w]\n    if i%2 == 0:\n        print(*p)\n    else:\n        p = p[::-1]\n        print(*p)\n    cnt += w", "h, w = list(map(int, input().split()))\nn = int(input())\na = list(map(int, input().split()))\ncolor = [[0]*w for i in range(h)]\nloch = 0\nlocw = 0\nfor i in range(n):\n  for j in range(a[i]):\n    color[loch][locw]=str(i+1)\n    if loch % 2 == 0:\n      if locw != w-1:\n        locw+=1\n      else:\n        loch+=1\n    else: \n      if locw != 0:\n        locw-=1\n      else:\n        loch+=1\n\nfor i in range(h):\n  print((\" \".join(color[i])))\n"]