["s = input()\nn = len(s)\np = [0] * (n+1)\nfor x in range(1, n):\n\ty = 0\n\tif s[x] == 'v' and s[x-1] == 'v':\n\t\ty = 1\n\tp[x+1] = p[x] + y\nq = 0\nsol = 0\nfor x in range(n-3, -1, -1):\n\tif s[x+1] == 'v' and s[x+2] == 'v':\n\t\tq += 1\n\tif s[x] == 'o':\n\t\tsol += q*p[x]\nprint(sol)\n", "s = input()\nn = len(s)\n\nout = 0\nwCount = 0\noPlace = []\nfor i in range(n-1):\n    if s[i] == 'o':\n        oPlace.append(wCount)\n    elif s[i] == 'v' and s[i+1] == 'v':\n        wCount += 1\n\nprint(sum([x*(wCount-x) for x in oPlace]))\n", "s=[max(0,len(x)-1) for x in input().split('o')]\nR=sum(s)\nL=0\nans=0\nfor x in s:\n    L+=x\n    R-=x\n    ans+=L*R\n    \nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ns=input().strip()\nANS=0\nBEFORE=0\nOCOUNT=0\n\nLEN=len(s)\n\nfor i in range(1,LEN):\n    if s[i]==\"v\" and s[i-1]==\"v\":\n        BEFORE+=1\n\n        ANS+=OCOUNT\n\n    if s[i]==\"o\":\n        OCOUNT+=BEFORE\n\nprint(ANS)\n\n    \n", "from itertools import accumulate\n\nv = ord('v')\no = ord('o')\nS = [o]+[ord(s) for s in input().strip()]\n\nstack = []\npre = None\ncnt = 0\nfor s in S:\n    if s == pre:\n        cnt += 1\n    else:\n        pre = s\n        stack.append(cnt)\n        cnt = 1\nstack.append(cnt)\nstack = stack[1:]\n\nLS = len(stack)\nw = 0\nsp = [stack[i]-1 if i % 2 else 0 for i in range(LS)]\nsr = list(accumulate(sp))\nsl = list(accumulate(sp[::-1]))[::-1]\nans = 0\nfor i in range(0, LS, 2):\n    ans += sr[i]*sl[i]*stack[i]\nprint(ans)\n", "import sys\n\ns = sys.stdin.readline().strip()\nn = len(s)\n\nw = 0\nwo = 0\nwow = 0\n\nfor i in range (1, n):\n    if s[i] == \"v\" and s[i-1] == \"v\":\n        w = w + 1\n        wow = wow + wo\n    if s[i] == \"o\":\n        wo = wo + w\n\nprint(wow)", "s = input()\nl, n = [], len(s)\ni = 0\nwhile i < n:\n    j = i\n    while j < n and s[j] == 'v':\n        j += 1\n    l.append(max(j - i - 1, 0))\n    i = j\n    while j < n and s[j] == 'o':\n        j += 1\n    l.append(j - i)\n    i = j\ndp = [0, 0, 0]\nfor i in range(len(l)):\n    if i & 1:\n        dp[1] += dp[0] * l[i]\n    else:\n        dp[2] += dp[1] * l[i]\n        dp[0] += l[i]\n# print(*l)\nprint(dp[-1])", "s = input()\nN = len(s)\nd1 = [0] * N\nd2 = [0] * N\nfor i in range(N - 1):\n    if s[i: i + 2] == 'vv':\n        d1[i] += 1\n\nfor i in range(1, N):\n    d1[i] += d1[i - 1]\n\nfor i in range(N - 1, 0, -1):\n    if s[i] == 'v' and s[i - 1] == 'v':\n        d2[i] = 1\n\nfor i in range(N - 2, -1, -1):\n    d2[i] += d2[i + 1]\n\nans = 0\nfor i in range(N):\n    if s[i] == 'o':\n        ans += d1[i] * d2[i]\n\nprint(ans)", "s = input()\nw, wo, wow = 0, 0, 0\nlast = None\nfor c in s:\n    if c == 'v' and last == 'v':\n        w += 1\n        wow += wo\n    elif c == 'o':\n        wo += w\n    last = c\n\nprint( wow )\n", "s = input()\n\nn = len(s)\n\nldp = [0 for i in range(n)]\nrdp = [0 for i in range(n)]\n\nconsec = 0\nfor i in range(n):\n    if(s[i] == 'v'):\n        consec += 1\n    else:\n        consec = 0\n    if(consec > 1):\n        ldp[i] = ldp[i - 1] + 1\n    else:\n        ldp[i] = ldp[i - 1]\nconsec = (s[-1] == 'v')\nfor i in range(n-2, -1, -1):\n    if(s[i] == 'v'):\n        consec += 1\n    else:\n        consec = 0\n    if(consec > 1):\n        rdp[i] = rdp[i + 1] + 1\n    else:\n        rdp[i] = rdp[i + 1]\nans = 0\n#print(ldp)\n#print(rdp)\nfor i in range(n):\n    if(s[i] == 'o'):\n        ans += ldp[i] * rdp[i]\n\nprint(ans)\n\n", "s = input()\nprev = \"\"\ncnt = 0\nfor elem in s:\n    if elem == \"v\" and prev == \"v\":\n        cnt += 1\n    prev = elem\nn = 0\nprev = \"\"\nans = 0\nfor elem in s:\n    if elem == \"v\" and prev == \"v\":\n        n += 1\n    if elem == \"o\":\n        ans += n*(cnt-n)\n    prev = elem\nprint(ans)", "3\n\nimport math\nimport sys\n\n\nDEBUG = False\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef solve(S):\n    vv = 0\n    o = 0\n    cnt = 0\n\n    N = len(S)\n    for i in range(N):\n        if S[i:i + 2] == 'vv':\n            cnt += o\n            vv += 1\n        elif S[i] == 'o':\n            o += vv\n\n    return cnt\n\n\ndef main():\n    S = inp()\n    print(solve(S))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nwcount = 0\nfor i in range(len(s)-1):\n    if s[i+1] == \"v\" and s[i] == \"v\":\n        wcount += 1\n\nans = 0\nwcountl = 0\nfor i in range(len(s)-1):\n    if s[i+1] == \"v\" and s[i] == \"v\":\n        wcountl += 1\n        wcount -= 1\n    elif s[i+1] == \"o\":\n        ans += wcountl*wcount\n\nprint(ans)\n", "import io, sys, atexit, os\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\ndef lcm ( x, y ):\n\tgg = find_gcd (x, y)\n\treturn (x * y // gg)\n\n\nmm = 1000000007\nyp = 0\ndef solve ():\n\tt = 1\n\tfor tt in range (t):\n\t\ts=input()\n\t\tn=len(s)\n\t\tl=[0]*n\n\t\tfor i in range(n-1):\n\t\t\tif(s[i]==s[i+1] and s[i]==\"v\"):\n\t\t\t\tl[i]=1\n\t\tpre=[0]*n\n\t\tsuf=[0]*n\n\t\tpre[0]=l[0]\n\t\tfor i in range(1,n):\n\t\t\tpre[i]=pre[i-1]+l[i]\n\t\tsuf[n-1]=l[n-1]\n\t\tfor i in range(n-2,-1,-1):\n\t\t\tsuf[i]=suf[i+1]+l[i]\n\t\tans=0\n\t\tfor i in range(n):\n\t\t\tif(s[i]==\"o\"):\n\t\t\t\tif(i-1>=0 and i+1<n):\n\t\t\t\t\tans+=pre[i-1]*suf[i+1]\n\t\tprint(ans)\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "s=str(input())\narr1=[]\narr2=[]\ncountx=0\ni=0\nwhile(i<len(s)):\n\tif(s[i]=='o'):\n\t\tarr1.append(countx)\n\t\ti+=1\n\telse:\n\t\tj=i\n\t\twhile(j<len(s) and s[j]=='v'):\n\t\t\tj+=1\n\t\tdiff=j-i\n\t\tcountx+=(diff-1)\n\t\ti=j\nans=0\n#print(*arr1)\nfor i in range(len(arr1)):\n\tans+=(arr1[i]*(countx-(arr1[i])))\n\nprint(ans)", "# @author \n\nimport sys\n\nclass BWOWFactor:\n    def solve(self):\n        s = input()\n        n = len(s)\n        vv_pre = [0] * (n + 1)\n        vv_suf = [0] * (n + 1)\n\n        for i in range(n - 1):\n            vv_pre[i + 1] = vv_pre[i]\n            if s[i] == s[i + 1] == 'v':\n                vv_pre[i + 1] += 1\n\n        for i in range(n - 1, 0, -1):\n            vv_suf[i - 1] = vv_suf[i]\n            if s[i] == s[i - 1] == 'v':\n                vv_suf[i - 1] += 1\n\n\n        ans = 0\n        for i in range(2, n - 2):\n            if s[i] == 'o':\n                ans += vv_pre[i - 1] * vv_suf[i + 1]\n\n        \n        print(ans)\n\nsolver = BWOWFactor()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "s = input()\nwtot = 0\nfor i in range(1, len(s)):\n    if s[i] == 'v' and s[i-1] == 'v':\n        wtot += 1\nwleft = 0\nans = 0\nfor i in range(len(s)):\n    if i > 0 and s[i] == 'v' and s[i-1] == 'v':\n        wleft += 1\n    elif s[i] == 'o':\n        ans += wleft*(wtot-wleft)\nprint(ans)", "ll= lambda : list(map(int,input().split()))\ntestcases=1\n# testcases=int(input())\nfor testcase in range(testcases):\n\ts=input()\n\tn=len(s)\n\tdp=[0]\n\t# print(dp)\n\tfor i in range(n-1):\n\t\tif s[i]=='v' and s[i+1]=='v':\n\t\t\tdp.append(dp[-1]+1)\n\t\telse:\n\t\t\tdp.append(dp[-1])\n\t# print(dp)\n\tans=0\n\tfor i in range(0,n):\n\t\tif s[i]=='o':\n\t\t\tans+=(dp[i]*(dp[-1]-dp[i]))\n\tprint(ans)\n\n", "s = input()\ns = s.strip('o')\nv = []\no = []\n\ncnt_v = 0\ncnt_o = 0\nfor i in range(len(s)):\n    if s[i] == 'v':\n        if cnt_o:\n            o.append(cnt_o)\n            cnt_o = 0\n        cnt_v += 1\n    else:\n        if cnt_v:\n            v.append(cnt_v)\n            cnt_v = 0\n        cnt_o += 1\n\nv.append(cnt_v)\n\nleft = v[0]\nleft_cnt = 1\nans = 0\nall_v = sum(v)\nlen_v = len(v)\n\nfor i in range(len(o)):\n    ans += (left - left_cnt) * o[i] * (all_v - left - len_v + left_cnt)\n    left += v[i + 1]\n    left_cnt += 1\n\nprint(ans)\n", "s = input()\nans = 0\narr = s.split('o')\nwsall = 0\nfor i in arr:\n    if len(i)>1:\n        wsall+=len(i)-1\nws=0\nfor i in range(len(arr)-1):\n    if len(arr[i])>1:\n        ws+=len(arr[i])-1\n        wsall-=(len(arr[i])-1)\n    ans += ws * wsall\nprint(ans)\n\n\n\n", "s = input().split()[0]\nwos = []\n\nsum_w = 0\nsum_o = 0\nfor i in range(len(s)):\n    if s[i] == 'o':\n        wos.append(sum_w + (0 if len(wos) == 0 else wos[-1]))\n        sum_o += 1\n    elif s[i] == 'v':\n        wos.append(0 if len(wos) == 0 else wos[-1])\n        if i == 0 or s[i - 1] != 'v':\n            pass\n        else:\n            sum_w += 1\n\nanswer = 0\nfor i in range(len(s)):\n    if s[i] == 'o':\n        pass\n    elif s[i] == 'v':\n        if i == 0 or s[i - 1] != 'v':\n            pass\n        else:\n            answer += wos[i]\n\nprint(answer)", "from sys import stdin\n\ns=stdin.readline().strip()\nn=len(s)\nl=[0 for i in range(n)]\nr=[0 for i in range(n)]\ndef cal(x):\n    return (x*(x-1))//2\nfor i in range(n):\n    if i==0:\n        continue\n    if s[i]==\"v\" and s[i-1]==\"v\":\n        l[i]+=1\n    l[i]+=l[i-1]\nfor i in range(n-1,-1,-1):\n    if i==n-1:\n        continue\n    if s[i]==\"v\" and s[i+1]==\"v\":\n        r[i]+=1\n    r[i]+=r[i+1]\nans=0\nfor i in range(n):\n    if s[i]==\"o\":\n        ans+=l[i]*r[i]\nprint(ans)\n    \n", "s = input()\nn = len(s)\ncount_o = []\ncount_w = 0\ncount = 0\nfor i in range(1, n):\n    if s[i] == 'v' and s[i-1] == 'v':\n        count_w += 1\n    elif s[i] == 'o':\n        count_o.append(count_w)\nfor c in count_o:\n    count += c * (count_w-c)\nprint(count)\n", "s = input()\nn = len(s)\n\nfirst = [0]*n\nlast = [0]*n\n\np = 0\nc = 0\nfor i in range(n):\n    if s[i] == 'v':\n        p += 1\n    else:\n        if p:\n            c += p-1\n        p = 0\n    if s[i] == 'o':\n        first[i] = c\n\np = 0\nc = 0\nfor i in range(n-1, -1, -1):\n    if s[i] == 'v':\n        p += 1\n    else:\n        if p:\n            c += p-1\n        p = 0\n    if s[i] == 'o':\n        last[i] = c\n\nresult = 0\nfor i in range(n):\n    if s[i] =='o':\n        result += first[i]*last[i]\n\nprint(result)", "s=input()\npre=[0]\ncurr=-1\nn=len(s)\nfor i in range(1,n):\n\tif s[i]=='v' and s[i-1]=='v':\n\t\tpre.append(pre[-1]+1)\n\telse:\n\t\tpre.append(pre[-1])\ncurr=0\nans=0\nfor i in range(n-2,-1,-1):\n\tif s[i]=='v' and s[i+1]=='v':\n\t\tcurr+=1\n\telif s[i]=='o':\n\t\tans+=(curr)*(pre[i])\nprint(ans)\n"]