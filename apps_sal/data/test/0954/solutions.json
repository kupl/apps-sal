["s = input()\nres = set()\nfor i in range(len(s) + 5):\n    s = s[1:] + s[0]\n    res.add(s)\nprint(len(list(res)))", "s = input()\nres = set()\nfor i in range(100):\n    res.add(s)\n    s = s[-1] + s[:-1]\nprint(len(res))", "s = input()\nn = len(s)\nS = {s}\nfor i in range(n):\n    s = s[-1] + s[:-1]\n    S.add(s)\nprint(len(S))\n", "#!/usr/bin/env python3\n\ndef main():\n    try:\n        while True:\n            s = input()\n            a = set()\n            for i in range(len(s)):\n                a.add(s)\n                s = s[1:] + s[0]\n\n            print(len(a))\n\n    except EOFError:\n        pass\n\nmain()\n", "s=input()\na=[s[i:]+s[:i] for i in range(len(s))]\nprint(len(set(a)))\n", "s = input()\nres = set()\nfor i in range(len(s)):\n    res.add(s[i:] + s[:i])\nprint(len(res))", "s = input()\ne = s\nss = set()\nfor i in range(len(s)):\n    e = e[-1] + e[:-1]\n    ss.add(e)\nprint(len(ss))\n", "a = set()\nstring = input()\nfor i in range(len(string)):\n    string = string[-1] + string[:-1]\n    a.add(string)\nprint(len(a))", "w = input()\ns = set()\nfor shift in range(len(w)):\n    s.add(w[-shift:] + w[:-shift])\nprint(len(s))\n", "s = input()\n\nse = set()\nfor _ in range(51):\n    se.add(s)\n    sl = s[1:]\n    s =  sl + s[0]\nprint(len(se))", "import math,sys,re,itertools,pprint,collections,copy\nrs,ri,rai,raf=input,lambda:int(input()),lambda:list(map(int, input().split())),lambda:list(map(float, input().split()))\n\nt = input()\nres = {t}\nfor i in range(52):\n    t = t[-1] + t[:-1]\n    res.add(t)\n\nprint(len(res))\n", "string = input()\ns = set()\nfor i in range(len(string)):\n    if string not in s:\n        s.add(string)\n    string = string[len(string)-1]+string[:-1]\nprint(len(s))\n", "x = input()\nlst = []\nfor i in range(len(x)):\n    if x[i:]+x[:i] not in lst:\n        # print(x[i:]+x[:i])\n        lst.append(x[i:]+x[:i])\nprint(len(lst))", "a = input()\na = a.strip()\nrazlicni = set()\nrazlicni.add(a)\nfor _ in range(len(a)):\n    a = a[-1] + a[:-1]\n    razlicni.add(a)\nprint(len(razlicni))\n\n", "string = input()\na = set()\nfor i in range(len(string)):\n    a.add(string[i:] + string[:i])\nprint(len(a))\n\n", "keke = dict()\nans = 0\ns = input().strip()\nfor i in range(0, len(s)):\n    if not s in keke:\n        keke[s] = 1\n        ans+= 1\n    s = s[-1] + s[:-1]\nprint(ans)", "s = input()\nn = len(s)\ns += s\ndl = len(s)\nd = set()\nans = 0\nfor i in range(dl - n):\n    str = s[i : i + n ]\n    if not str in d:\n        ans += 1\n        d.add(str)\nprint(ans)\n", "s = input()\nprint(len({s[i:]+s[:i] for i in range(len(s))}))", "#CF YL1\ns=input()\nc={s}\ndef cyc(s2):return s2[-1]+s2[:-1]\nfor i in range(len(s)):\n    s=cyc(s)\n    c.add(s)\nprint(len(c))\n", "s = input()\n\nknown = set()\n\nfor i in range(len(s)):\n    p = s[i:]+ s[:i]\n    known.add(p)\n\nprint(len(known))\n", "s = input()\n\nn = len(s)\n\ni = 0\na = []\nwhile i < 50:\n    s = s[-1] + s[:n-1]\n    if s not in a:a.append(s)\n    i += 1\nprint(len(a))", "st = input()\narr = []\nfor i in range(len(st)):\n\tarr.append(st[i:] + st[:i])\narr = sorted(arr)\ncnt = 1\nfor i in range(1,len(st)):\n\tif(arr[i] != arr[i-1]):\n\t\tcnt = cnt + 1\nprint(cnt)", "s = input()\nn = len(s)\nt = {}\nt[s] = True\nfor i in range(n):\n\ts = s[1:] + s[0]\n\tt[s] = True\nprint(len(t))", "# You lost the game.\n\ns = str(input())\nn = len(s)\nL = [s]\n\ndef ok(L,s):\n    for x in L:\n        if x == s:\n            return 0\n    return 1\nfor i in range(n):\n    s = s[1:]+s[0]\n    if ok(L,s):\n        L += [s]\n\nprint(len(L))\n", "s = input()\na = set()\nfor i in range(len(s)):\n    a.add(s[i:] + s[:i])\nprint(len(a))"]