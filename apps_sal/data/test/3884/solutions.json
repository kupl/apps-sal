["#      \nimport collections, atexit, math, sys\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\ndef memo(func):  \n    cache={}  \n    def wrap(*args):  \n        if args not in cache:  \n            cache[args]=func(*args)  \n        return cache[args]  \n    return wrap\n\n@memo\ndef comb (n,k):\n    if k==0: return 1\n    if n==k: return 1\n    return comb(n-1,k-1) + comb(n-1,k)\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\nM, = getIntList()\nza = getIntList()\nzb = getIntList()\n\nif 1 in za or 1 in zb:\n    print(-1)\n    return\n    \n\ndef trywork(fuel):\n    for i in range(N):\n        now = fuel + M\n        cost = now / za[i]\n        fuel-=cost\n        if fuel <0: return False\n        now = fuel +M\n        cost = now / zb[ (i+1)%N]\n        fuel-=cost\n        if fuel<0: return False\n    return True\n\nr0 = 0\nr1 = 10**9+1\n\n\nwhile r1-r0 > 1e-7 and (r1-r0) *10000000 >r1:\n    m = (r1+r0)/2\n    f = trywork(m)\n    if f:\n        r1 = m\n    else:\n        r0 = m\n\nprint(r1)\n    \n\n\n\n\n\n\n\n\n\n", "from functools import reduce\nn=int(input())\nm=int(input())\na=input().split()\na=[int(x) for x in a]\nb=input().split()\nb=[int(x) for x in b]\nk=m\ny=1\nfor i in range(len(a)):\n    k=k*a[i]*b[i]\na=[int(x)-1 for x in a]\nb=[int(x)-1 for x in b]\nfor i in range(len(a)):\n    y=y*a[i]*b[i]\nif(y==0):\n    print(-1)\nelse:\n    print((k/y)-m)\n    \n", "input()\nm=int(input())\nv=m\ntry:\n for a in map(int, input().split() + input().split()):\n   v*=a\n   v/=a-1\n print(v-m)\nexcept ZeroDivisionError:\n print(-1)", "input()\nm=int(input())\nv=m\ntry:\n for a in map(int, input().split() + input().split()):\n   v*=a/(a-1)\n print(v-m)\nexcept ZeroDivisionError:\n print(-1)", "i=input\ni()\nm=int(i())\nv=m\ntry:\n for a in map(int, (i()+' '+i()).split()):v*=a/(a-1)\n print(v-m)\nexcept:\n print(-1)", "i=input\ni()\nm=int(i())\nv=m\ntry:\n for a in map(int, (i()+' '+i()).split()):v*=a/(a-1)\nexcept:v=m-1\nprint(v-m)", "t=int(input())\nmass=int(input())\narr=list(map(int,input().split()))\nbrr=list(map(int,input().split()))\nflag=1\nfor i in range(t):\n\tif arr[i]==1 or brr[i]==1:\n\t\tflag=0\n\t\tbreak\nif flag:\n\tans=mass*brr[0]/(brr[0]-1)\n\tfor i in range(t-1,0,-1):\n\t\tans=ans*arr[i]/(arr[i]-1)\n\t\tans=ans*brr[i]/(brr[i]-1)\n\tans=ans*arr[0]/(arr[0]-1)\n\tprint(ans-mass)\nelse:\n\tprint(\"-1\")", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jul 26 20:46:22 2018\n\n@author: chirayu jain\n\"\"\"\n#PROBLEM A FLY\n#DIVISION 1 499 CODEFORCES\nplanet = int(input())\nmass = int(input())\ncase = 0\nA = [int(x) for x in input().split()]\nB = [int(x) for x in input().split()]\nfor i in range(0,planet):\n    if A[i] == 1 or B[i] == 1:\n        case = 1\n        break\nif case==0:\n   temp = mass*1.0\n   temp = temp / (1.0 - 1.0/(1.0*B[0]))\n   for i in range(planet-1,0,-1):\n       temp = temp / (1.0 - 1.0/(A[i]*1.0))\n       temp = temp / (1.0 - 1.0/(B[i]*1.0))\n    \n   temp = temp / (1.0 - 1.0/(A[0]*1.0))\n   temp = temp - mass*1.0\nif case==1:\n    print(\"-1\")\nelse:\n    print(temp)", "from decimal import *\ngetcontext().prec = 28\nn,m=int(input()),int(input())\nlift=list(map(int,input().split()))\ndrop=list(map(int,input().split()))\nfuel=0\nif drop[0]==1:\n    print(-1);return()\nelse:\n    r=Decimal(m)/Decimal(drop[0]-1)\n    m+=r;fuel+=r\nlift=lift[::-1];drop=drop[::-1]\nfor i in range(n-1):\n    if lift[i]==1:\n        print(-1);return()\n    else:\n        r=Decimal(m)/Decimal(lift[i]-1)\n        m+=r;fuel+=r\n    if drop[i]==1:\n        print(-1);return()\n    else:\n        r=Decimal(m)/Decimal(drop[i]-1)\n        m+=r;fuel+=r\nif lift[n-1]==1:\n    print(-1);return()\nelse:\n    r=Decimal(m)/Decimal(lift[n-1]-1)\n    m+=r;fuel+=r\nprint(fuel)", "from decimal import *\ngetcontext().prec = 28\nn,m=int(input()),int(input())\nlift=list(map(int,input().split()))\ndrop=list(map(int,input().split()))\nfuel=0\nif drop[0]==1:\n    print(-1);return()\nelse:\n    r=Decimal(m)/Decimal(drop[0]-1)\n    m+=r;fuel+=r\nlift=lift[::-1];drop=drop[::-1]\nfor i in range(n-1):\n    if lift[i]==1:\n        print(-1);return()\n    else:\n        r=Decimal(m)/Decimal(lift[i]-1)\n        m+=r;fuel+=r\n    if drop[i]==1:\n        print(-1);return()\n    else:\n        r=Decimal(m)/Decimal(drop[i]-1)\n        m+=r;fuel+=r\nif lift[n-1]==1:\n    print(-1);return()\nelse:\n    r=Decimal(m)/Decimal(lift[n-1]-1)\n    m+=r;fuel+=r\nprint(fuel)", "\n\ni=input\ni()\nm=int(i())\nv=m\ntry:\n for a in map(int, (i()+' '+i()).split()):v*=a/(a-1)\nexcept:v=m-1\nprint(v-m)", "n = int(input())\nm = int(input())\na = list(map(int, input().rstrip().split()))\nb = list(map(int, input().rstrip().split()))\nfuel_used = 0\nfor i in range(n-1):\n\tfuel_used += (1-fuel_used)/a[i]\n\tfuel_used += (1-fuel_used)/b[i+1]\nfuel_used += (1-fuel_used)/a[n-1]\nfuel_used += (1-fuel_used)/b[0]\ntry:\n\tfuel_required = m*(fuel_used)/(1-fuel_used)\n\tprint(fuel_required)\nexcept ZeroDivisionError:\n\tprint(-1)", "R = lambda: map(int, input().split())\nn = int(input())\nm = int(input())\na, b = list(R()), list(R())\nb = b[1:] + b[:1]\nl, r = 0, 2 * 10**9\nwhile (r - l) / max(1, r) >= 1e-7 and l < 10**9 + 1:\n    rem = mid = (l + r) / 2\n    for i in range(n):\n        rem -= (m + max(0, rem)) / a[i]\n        rem -= (m + max(0, rem)) / b[i]\n    if rem < 0:\n        l = mid\n    else:\n        r = mid\nprint(l if l < 10**9 + 1 else -1)", "def main():\n    input()\n    x = m = float(input())\n    try:\n        for s in input(), input():\n            for a in map(float, s.split()):\n                x *= a / (a - 1.)\n        print(x - m)\n    except ZeroDivisionError:\n        print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nM = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\nimp = fuel = 0\nfor i in range(N, 0, -1):\n    if i == N: i = 0\n    if B[i] == 1:\n        imp = 1\n        break\n    fuel += (M + fuel) / (B[i] - 1)\n    if A[i - 1] == 1:\n        imp = 1\n        break\n    fuel += (M + fuel) / (A[i - 1] - 1)\nprint(-1 if imp else '{:.7f}'.format(fuel))", "import sys;\nimport math;\n\n\ndef solution( n, m, a, b):\n    a += [a[0]];\n    b += [b[0]];\n    mass = [0] * len(a);\n    mass[len(a)-1] = m;\n    for i in range(len(a)-1, 0, -1):\n        tmp = mass[i];\n        if b[i]-1<=0:\n            return -1;\n        extra_fuel = tmp/(b[i]-1);\n        tmp+=extra_fuel;\n        if a[i-1]-1<=0:\n            return -1;\n        extra_fuel = tmp/(a[i-1]-1);\n        tmp+=extra_fuel;\n        mass[i-1] = tmp;\n\n    return mass[0] - m;\n\nn = int(sys.stdin.readline().rstrip() );\nm = int(sys.stdin.readline().rstrip() );\n\na = [ int(x) for x in sys.stdin.readline().rstrip().split() ];\nb = [ int(x) for x in sys.stdin.readline().rstrip().split() ];\n\nres = solution( n, m, a, b );\n\nsys.stdout.write(str(res));\n\n", "i=input\ni()\nm=int(i())\nv=m\ntry:\n for a in map(int, (i()+' '+i()).split()):v*=a/(a-1)\nexcept:v=m-1\nprint(v-m)", "import sys\n\ndef __starting_point():\n\tn = int(sys.stdin.readline().strip())\n\tm = int(sys.stdin.readline().strip())\n\teps = 2e-7\n\toff, land = [], []\n\toff = list(map(int,sys.stdin.readline().strip().split(' ')))\n\tland = list(map(int,sys.stdin.readline().strip().split(' ')))\n\tif 1 in off or 1 in land:\n\t\tprint(-1)\n\telse:\n\t\tl, r = 0, 10**9\n\t\t#print (10/3)\n\t\tdef is_ok(target):\n\t\t\ttotal = m + target\n\t\t\tremain = total\n\t\t\tfor i in range(n):\n\t\t\t\tremain -= remain/off[i]\n\t\t\t\t#print (remain)\n\t\t\t\tif remain < m and abs(remain - m) > eps:\n\t\t\t\t\treturn False\n\t\t\t\tremain -= remain / land[(i+1)%n]\n\t\t\t\t#print (remain)\n\t\t\t\tif remain < m and abs(remain - m) > eps:\n\t\t\t\t\treturn False\n\t\t\treturn True\n\t\t#is_ok(6)\n\t\twhile True:\n\t\t\tmid = (l + r) / 2\n\t\t\tif abs(r-l) <= eps:\n\t\t\t\tprint (mid)\n\t\t\t\tbreak\n\t\t\tif is_ok(mid):\n\t\t\t\tr = mid\n\t\t\telse:\n\t\t\t\tl = mid\n\n\n__starting_point()", "n = int(input())\nm = int(input())\na = list(map(float, input().split()))\nb = list(map(float, input().split()))\nif 1 in a or 1 in b:\n    print(-1)\n    return\npayload = m\npayload += payload / (a[0] - 1)\nfor i in range(n - 1, 0 , -1):\n    payload += payload / (a[i] - 1)\n    payload += payload / (b[i] - 1)\npayload += payload / (b[0] - 1)\nprint(payload - m)\n", "n=int(input())\nm=int(input())\na=list(map(float,input().split()))\nb=list(map(float,input().split()))\ni=n\nf=0\nwhile i>=1 :\n    if (a[i-1] != 1) and (b[i-1] != 1) :\n        f=(1/(1- 1/a[i-1]))*(f+(m/a[i-1]))\n        f=(1/(1- 1/b[i-1]))*(f+(m/b[i-1]))\n        i-=1\n    else :\n        break\nif f<=(10**9) and i==0 :\n    print(f)\nelse :\n    print(-1)\n\n", "rd = lambda: list(map(int, input().split()))\nn, m = rd(), rd()[0]\nr = m\nfor x in rd() + rd():\n    if x > 1:\n        r *= x\n        r /= x - 1\n    else:\n        print(-1)\n        return\nprint(r - m)\n", "n, m = int(input()), int(input())\na, b = [int(i) for i in input().split()], [int(i) for i in input().split()]\n\ndef check(t):\n    for i in range(n):\n        t -= (t + m) / a[i]\n        if t < 0:\n            return 0\n        t -= (t + m) / b[(i + 1) % n]\n        if t < 0:\n            return 0\n    return 1\n\nl, r = 0, 10 ** 10\nif not check(r):\n    print(-1)\nelse:\n    for i in range(300):\n        mid = (l + r) / 2\n        if check(mid):\n            r = mid\n        else:\n            l = mid\n    print(l)\n", "n = int(input())\nm = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nb = b[1:]+b[0:1]\nc = m\nd = 0\nfor i in range(n):\n    k = n-1-i\n    if b[k] <= 1 or a[k] <= 1:\n        d = -1\n    else:\n        c = c*(1+1/(b[k]-1))*(1+1/(a[k]-1))\nif d == -1:\n    print(d)\nelse:\n    print(c-m)", "import sys\n\nn = int(input())\nm = float(input())\na = list(map(float,input().split()))\nb = list(map(float,input().split()))\n\nfor i in a:\n\tif i <= 1.0:\n\t\tprint(str(-1))\n\t\treturn\nfor i in b:\n\tif i <= 1.0:\n\t\tprint(str(-1))\n\t\treturn\n\ns = m\ns += s/(b[0] - 1.0)\n\nfor i in range(n-1,0,-1):\n\ts += s/(a[i] - 1.0)\n\ts += s/(b[i] - 1.0)\n\ns += s/(a[0] - 1.0)\nprint(\"{0:.10f}\".format(s - m))", "i=input\n\ni()\n\nm=int(i())\n\nv=m\n\ntry:\n\n for a in map(int, (i()+' '+i()).split()):v*=a/(a-1)\n\nexcept:v=m-1\n\nprint(v-m)\n\n\n\n# Made By Mostafa_Khaled\n"]