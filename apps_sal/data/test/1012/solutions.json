["# map(int, input())\nt = int(input())\nfor i in range(t):\n\ts = sorted(input())\n\tif s[0] == s[-1]:\n\t\tprint(-1)\n\t\tcontinue\n\tprint(''.join(s))", "import math, sys\n\ndef mp():\n    return list(map(int, input().split()))\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        a = list(input().strip())\n        a.sort()\n        if a[0] == a[-1]:\n            print(-1)\n        else:\n            print(''.join(a))\n        \ndeb = 0\nif deb:\n    file = open('input.txt', 'w')\nelse:\n    input = sys.stdin.readline\n    \nmain()", "for _ in range(int(input())):\n\ts = ''.join(sorted(input()))\n\tif s[0] == s[-1]:\n\t\tprint('-1')\n\telse:\n\t\tprint(s)\n", "def mi():\n\treturn list(map(int, input().split()))\n'''\n3\naa\nabacaba\nxdd\n'''\nfrom collections import Counter as c\nfor _ in range(int(input())):\n\tli = list(input())\n\ts = c(li)\n\tif len(s)==1:\n\t\tprint(-1)\n\telse:\n\t\tprint(''.join(sorted(li)))\n", "read = lambda: [int(i) for i in input().split()]\n\nt = int(input())\nwhile t > 0:\n    t -= 1\n    s = input()\n    s_sort = sorted(s)\n    if s_sort[0] == s_sort[-1]:\n        print(-1)\n    else:\n        print(''.join(s_sort))", "t = int(input())\nfor i in range(t):\n    s = input()\n    if s != s[0] * len(s):\n        print(''.join(sorted(s)))\n    else:\n        print(-1)", "def solve(s):\n\ts = \"\".join(sorted(s))\n\tif s==s[::-1]:\n\t\treturn -1\n\telse:\n\t\treturn s\n\nt = int(input())\nfor _ in range(t):\n\tx = input()\n\tprint(solve(x))", "n = int(input())\n\nfor i in range(n):\n  s = input()\n\n  arr = sorted(s)\n\n  if (arr[0] == arr[-1]):\n    print(-1)\n  else:\n    print(''.join(arr))\n\n", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operatins###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\n\n \n \n##### Main ####\nt=int(input())\nfor tt in range(t):\n    s=str(input())\n    s=list(s)\n    s.sort()\n    if(s==s[::-1]):\n        print(-1)\n    else:\n        b=\"\"\n        for ss in s:\n            b+=ss\n        print(b)\n        \n    #a=list(map(int,sys.stdin.readline().split(' ')))\n    #n,k,s= map(int, sys.stdin.readline().split(' '))\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n=int(input())\nfor x in range(n):\n    s=input()\n    s=''.join(sorted(list(s)))\n    if(s==s[::-1]):\n        print(-1)\n    else:\n        print(s)", "t=int(input())\nfor i in range(t):\n    s=list(input())\n    if len(set(s))==1:print(-1)\n    else:\n        s.sort()\n        a=''\n        for i in s:a+=i\n        print(a)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2018/12/15 22:40\n\n\"\"\"\n\n\ndef check(val):\n    l, r = 0, len(val)-1\n\n    while l < r:\n        if val[l] != val[r]:\n            return True\n        l += 1\n        r -= 1\n\n    return False\n\nT = int(input())\nfor ti in range(T):\n    s = list(input())\n    s.sort()\n    if check(s):\n        print(''.join(s))\n    else:\n        print(-1)", "import sys\nfrom math import ceil, floor\n\ninput = sys.stdin.readline\n\nt = int(input())\nfor zzz in range(t):\n    s = list(input().strip())\n    s.sort()\n    i = 0\n    j = len(s) - 1\n    valid = True\n    while (i <= j):\n        if s[i] != s[j]:\n            valid = False\n            break\n        i += 1\n        j -= 1\n    if not valid:\n        print(''.join([str(x) for x in s]))\n    else:\n        print(-1)", "t = int(input())\nfor q in range(t):\n    s = sorted(list(input()))\n    if s[0] == s[-1]:\n        print(-1)\n    else:\n        print(*s, sep='')\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\n\nfor _ in range(N):\n    s = input()\n    c = s[0]\n    ok = False\n    for x in s:\n        if x!=c:\n            g = list(s)\n            g.sort()\n            s = ''.join(g)\n            print(s)\n            ok = True\n            break\n    if not ok:\n        print(-1)\n\n\n", "n = int(input())\nfor i in range(n):\n    d = input()\n    u = sorted(d)\n    if u == u[::-1]:\n        print(-1)\n    else:\n        print(\"\".join(u))", "n = int(input())\nfor i in range(n):\n    s = input()\n    se = set()\n    a = []\n    for j in s:\n        se.add(j)\n        a.append(j)\n    if len(se) == 1:\n        print(-1)\n    else:\n        a.sort()\n        for j in a:\n            print(j, end = '')\n        print()\n", "t = int(input())\nfor i in range(t):\n    s = input()\n    r = ''.join(sorted(list(s)))\n    if r[0] == r[-1]:\n        print(-1)\n    else:\n        print(r)\n\n", "t=int(input())\nA=[input() for i in range(t)]\n\n\nfor a in A:\n    ANS=sorted(list(a))\n\n    if ANS[0]==ANS[-1]:\n        print(-1)\n        continue\n\n    else:\n        for a in ANS:\n            print(a,end=\"\")\n\n        print()\n"]