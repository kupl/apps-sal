["import sys, logging\nlogging.basicConfig(level=logging.INFO)\nlogging.disable(logging.INFO)\n\ndef build(S, n):\n    Z = [0 for i in range(3 * n + 3)]\n    #logging.info(S)\n    n = len(S)\n    L = 0\n    R = 0\n    Z[0] = n\n    for i in range(1, n):\n        if(i > R):\n            L = R = i\n            while(R < n and S[R] == S[R - L]):\n                R += 1\n            Z[i] = R - L\n            R -= 1\n        else:\n            k = i - L\n            if(Z[k] < R - i + 1):\n                Z[i] = Z[k]\n            else:\n                L = i\n                while(R < n and S[R] == S[R - L]):\n                    R += 1\n                Z[i] = R - L\n                R -= 1\n    return Z\n\ndef update1(n, x, val):\n    while(x <= n + 1):\n        bit1[x] += val\n        x += x & -x\n\ndef get1(n, x):\n    ans = 0\n    while(x > 0):\n        ans += bit1[x]\n        x -= x & -x\n    return ans\n\ndef update2(n, x, val):\n    while(x <= n + 1):\n        bit2[x] += val\n        x += x & -x\n\ndef get2(n, x):\n    ans = 0\n    while(x > 0):\n        ans += bit2[x]\n        x -= x & -x\n    return ans\n\ndef process(n, m, fa, fb):\n    r2 = int(1)\n    ans = 0\n    for l1 in range(1, n + 1):\n        while(r2 <= min(n, l1 + m - 2)):\n            update1(n, m - fb[r2] + 1, 1)\n            update2(n, m - fb[r2] + 1, fb[r2] - m + 1)\n            r2 += 1\n        ans += get1(n, fa[l1] + 1) * fa[l1] + get2(n, fa[l1] + 1)\n        update1(n, m - fb[l1] + 1, -1)\n        update2(n, m - fb[l1] + 1, m - 1 - fb[l1])\n    print(ans)\n\ndef main():\n    n, m = map(int, sys.stdin.readline().split())\n    a = sys.stdin.readline()\n    b = sys.stdin.readline()\n    s = sys.stdin.readline()\n    a = a[:(len(a) - 1)]\n    b = b[:(len(b) - 1)]\n    s = s[:(len(s) - 1)]\n    fa = build(s + a, n)\n    kb = build(s[::-1] + b[::-1], n)\n    fb = [0 for k in range(n + 2)]\n    for i in range(m, m + n):\n        fa[i - m + 1] = fa[i]\n        if(fa[i - m + 1] >= m):\n            fa[i - m + 1] = m - 1\n        fb[m + n - i] = kb[i]\n        if(fb[m + n - i] >= m):\n            fb[m + n - i] = m - 1\n    logging.info(fa[1:(n + 1)])\n    logging.info(fb[1:(n + 1)])\n    process(n, m, fa, fb)\n\nbit1 = [0 for i in range(500004)]\nbit2 = [0 for i in range(500004)]\n\ndef __starting_point():\n    try:\n        sys.stdin = open('input.txt', 'r')\n        sys.stdout = open('output.txt', 'w')\n    except:\n        pass\n    main()\n__starting_point()"]