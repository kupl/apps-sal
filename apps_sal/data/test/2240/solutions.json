["import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\ndef add(a,b):\n\treturn (a+b)%1000000007\n\ndef sub(a,b):\n\treturn (a+1000000007-b)%1000000007\n\ndef mul(a,b):\n\treturn (a*b)%1000000007\n\np = 102367\ns = list(map(int,minp()))\nt = list(map(ord,minp()))\nh = [0]*(len(t)+1)\npp = [1]*(len(t)+1)\nfor i in range(len(t)):\n\th[i+1] = add(mul(h[i], p), t[i])\n\tpp[i+1] = mul(pp[i], p)\n\ndef cmp(a, b, l):\n\tif a > b:\n\t\ta, b = b, a\n\th1 = sub(h[a+l], mul(h[a], pp[l]))\n\th2 = sub(h[b+l], mul(h[b], pp[l]))\n\treturn h2 == h1\n\nc = [0,0]\nidx = [-1,-1]\nfor i in range(len(s)):\n\tc[s[i]] += 1\n\tif idx[s[i]] < 0:\n\t\tidx[s[i]] = i\nMv = max(c)\nmv = min(c)\nMi = c.index(Mv)\nmi = (Mi^1)\nlt = len(t)\nsp = [0,0]\nres = 0\nfor k in range(1,lt//Mv+1):\n\tl = [0,0]\n\tx = (lt-k*Mv)//mv\n\tif x > 0 and x*mv + k*Mv == lt:\n\t\tl[Mi] = k\n\t\tl[mi] = x\n\t\tif idx[0] < idx[1]:\n\t\t\tsp[0] = 0\n\t\t\tsp[1] = idx[1]*l[0]\n\t\telse:\n\t\t\tsp[1] = 0\n\t\t\tsp[0] = idx[0]*l[1]\n\t\tok = True\n\t\tj = 0\n\t\tfor i in range(len(s)):\n\t\t\tif not cmp(sp[s[i]], j, l[s[i]]):\n\t\t\t\tok = False\n\t\t\t\tbreak\n\t\t\tj += l[s[i]]\n\t\tif l[0] == l[1] and cmp(sp[0], sp[1], l[0]):\n\t\t\tok = False\n\t\tif ok:\n\t\t\tres += 1\nprint(res)", "def gethash(l,r):\n\treturn (ha[r]-((ha[l]*p[r-l])%mod)+mod)%mod\n\ndef check(lenx,leny):\n\tha_0=-1\n\tha_1=-1\n\tj=0\n\tfor i in range(m):\n\t\tif s[i]==\"0\":\n\t\t\ttmp=gethash(j,j+lenx)\n\t\t\tif ha_0==-1:\n\t\t\t\tha_0=tmp\n\t\t\telif ha_0!=tmp:\n\t\t\t\treturn 0\n\t\t\tj+=lenx\n\t\telse:\n\t\t\ttmp=gethash(j,j+leny)\n\t\t\tif ha_1==-1:\n\t\t\t\tha_1=tmp\n\t\t\telif ha_1!=tmp:\n\t\t\t\treturn 0\n\t\t\tj+=leny\n\treturn ha_0!=ha_1\n\t\ns=list(input())\nt=list(input())\nm=len(s)\nn=len(t)\n\np=[1]\nbas=2333\nmod=(1<<50)-2\nfor i in range(1,n+1):\n\tp.append((p[i-1]*bas)%mod)\nha=[0]\nfor i in range(1,n+1):\n\tha.append((ha[i-1]*bas+ord(t[i-1]))%mod)\ncnt_0=0\ncnt_1=0\nfor x in s:\n\tif x==\"0\":\n\t\tcnt_0+=1\n\telse:\n\t\tcnt_1+=1\n\nans=0\nfor i in range(1,n//cnt_0+1):#length of r_0\n\tj=n-cnt_0*i\n\tif j%cnt_1==0 and j!=0:\n\t\tj//=cnt_1\n\t\tans+=check(i,j)\nprint(ans)", "s = input()\nt = input()\n\nn,m = len(s), len(t)\na = s.count('0')\nb = len(s) - a\n\n\npow = [1] * m\nh = [0] * (m+1)\np, mod = 31, 10**9+9\nfor i in range(1, m):\n    pow[i] = pow[i-1] * p % mod\n\nfor i in range(m):\n    h[i+1] = (h[i] + (ord(t[i])-ord('a')+1) * pow[i]) % mod\n\n\ndef get_hash(i, j):\n    hash_value = (h[j] - h[i] + mod) % mod\n    hash_value = (hash_value * pow[m-i-1]) % mod\n    return hash_value\n\n\ndef check(x, y):\n    index = 0\n    hash_x = hash_y = -1\n    for i in range(n):\n        if s[i] == '0':\n            if hash_x == -1:\n                hash_x = get_hash(index, index+x)\n            else:\n                if get_hash(index, index+x) != hash_x: return False\n            index += x\n        else:\n            if hash_y == -1:\n                hash_y = get_hash(index, index+y)\n            else:\n                if get_hash(index, index+y) != hash_y: return False\n            index += y\n    return hash_x != hash_y\n\n\nres = 0\nfor x in range(1, m//a+1):\n    if (m - a*x) % b == 0:\n        y = (m - a*x) // b\n        if y == 0: continue\n        if check(x ,y):\n            res += 1\n\nprint(res)"]