["n = int(input())\na = list(map(int, input().split()))\ns = set(a)\nm = {i: 0 for i in s}\nfor i in a:\n\tm[i] += 1\nwin = ''\nfor i in sorted(m)[::-1]:\n\tif m[i] % 2:\n\t\twin = 'Conan'\n\t\tbreak\nif win:\n\tprint(win)\nelse:\n\tprint('Agasa')", "n = int(input())\na = [int(i) for i in input().split()]\nm = [0] * (10 ** 5 + 2)\nfor i in a:\n    m[i] += 1\nfor i in range(10 ** 5 + 2):\n    if m[i] % 2 != 0:\n        print(\"Conan\")\n        return\nprint(\"Agasa\")\n", "n = int(input())\na = list(map(int, input().split()))\nfrom collections import Counter\nc = Counter(a)\nm = max(a)\nfail = False\nfor k in c:\n    if c[k] % 2 == 1:\n        print('Conan')\n        fail = True\n        break\nif not fail:\n    print('Agasa')", "read = lambda: list(map(int, input().split()))\nn = int(input())\na = sorted(read())\nN = (10**5) + 10\nc = [0] * N\nfor i in a: c[i] += 1\nans = 'Agasa'\nfor i in a:\n    if c[i] % 2:\n        ans = 'Conan'\nprint(ans)\n", "n = int(input())\nvals = list(map(int, input().split()))\n\ncounts = {}\nfor x in vals:\n  counts[x] = counts.get(x, 0) + 1\n\nif any([x % 2 == 1 for x in list(counts.values())]):\n  print(\"Conan\")\nelse:\n  print(\"Agasa\")\n", "_ = input()\n\naa = list(map(int, input().split()))\n\ndd = {}\n\nfor a in aa:\n    if a not in dd:\n        dd[a] = 1\n    else:\n        dd[a] += 1\n\nodd_found = False\n\nfor k in list(dd.keys()):\n    if dd[k] % 2 == 1:\n        odd_found = True\n\nif odd_found:\n    print(\"Conan\")\nelse:\n    print(\"Agasa\")\n", "from collections import Counter\nn = input()\nxs = Counter([int(x) for x in input().split()])\nif any(xs[x]%2 == 1 for x in xs):\n    print(\"Conan\")\nelse:\n    print(\"Agasa\")\n", "from collections import Counter\nn=int(input())\na=list(map(int,input().split()))\nc=Counter(a)\ndef CON():\n    print('Conan')\ndef AGA():\n    print('Agasa')\nc=dict(c)\nc=[[key,val]for key,val in list(c.items())]\nc.sort()\nc=c[::-1]\nq=c[0][1]\nb=False\nfor i in c:\n    if i[1]%2:\n        b=True\n    \nif b:\n    CON()\nelse:\n    AGA()\n", "from collections import Counter\n\n_ = input()\ncount = Counter([int(x) for x in input().split()])\n\nfor key in sorted(count.keys())[::-1]:\n    if count[key] % 2 == 1:\n        print('Conan')\n        break\nelse:\n    print('Agasa')\n", "import collections\n\ninput()\nc = collections.Counter(list(map(int, input().split())))\nfor x in sorted(c, reverse=True):\n    if c[x] % 2 == 1:\n        print(\"Conan\")\n        break\nelse:\n    print(\"Agasa\")\n", "n = int(input())\nl = list(map(int, input().split()))\nl1 = [0] * (max(l) + 1)\nfor i in range(n):\n    l1[l[i]] += 1\nfor elem in l1:\n    if elem % 2 == 1:\n        print('Conan')\n        break\nelse:\n    print('Agasa')", "from collections import Counter\n\nn = int(input())\na = [int(v) for v in input().split()]\n\ncnt = Counter(a)\n\nprint('Agasa' if all(v % 2 == 0 for v in list(cnt.values())) else 'Conan')\n", "n = int(input())\ncards = list(map(int, input().split()))\nis_odd = {}\nfor card in cards:\n    if card in is_odd:\n        is_odd[card] = not is_odd[card]\n    else:\n        is_odd[card] = False\nfor card in is_odd:\n    if not is_odd[card]:\n        print('Conan')\n        return\nprint('Agasa')\n", "import math\nn=int(input())\na=list(map(int,input().split()))\na.sort(reverse=True)\n\nb=[]\ncount=1\nfor i in range(n-1):\n    if(a[i]==a[i+1]):\n        count+=1\n    else:\n        b.append(count)\n        count=1\nb.append(count)\nflag=True\nfor i in b:\n    if(i%2):\n        print('Conan')\n        flag=False\n        break\nif(flag):\n    print('Agasa')", "# int(input())\n# [int(i) for i in input().split()]\n\nn = int(input())\na = [int(i) for i in input().split()]\n\na.sort()\n\ncounts = []\ncurr = 1\n\nfor i in range(1,n):\n    if a[i-1] != a[i]:\n        counts.append(curr)\n        curr = 1\n    else: curr += 1\n\ncounts.append(curr)\n#print(counts)\n\nm = len(counts)\n\nans = False\nfor i in range(m):\n    \n    if counts[i] % 2 == 1:\n        ans = True\n        continue\n\nif ans: print(\"Conan\")\nelse: print(\"Agasa\")\n", "from itertools import groupby\n\nn = int(input())\na = sorted([int(x) for x in input().strip().split()], reverse=True)\nb = [len([ci for ci in c]) for g, c in groupby(a)]\n\nall_even = True\nfor bi in b:\n    if bi & 1:\n        all_even = False\n        break\n\nprint('Conan' if not all_even else 'Agasa')\n", "from collections import Counter\nn = input()\na = list(map(int, input().split()))\n\ncounter = Counter(a)\nf = 1\nfor i in counter.values():\n    if i % 2:\n        print(\"Conan\")\n        f = 0\n        break\n\n\n\nif f:\n    print(\"Agasa\")", "n=int(input())\na=list(map(int,input().strip().split(' ')))\na.sort()\nb=[]\nx=-1\nc=0\nfor i in a:\n    if x==-1:\n        x=i\n        c=1\n    elif x==i:\n        c+=1\n    else:\n        b.append((x,c))\n        x=i\n        c=1\nb.append((x,c))\nn=len(b)\nf=0\nfor i in range(n):\n    if b[i][1]%2==1:\n        f=1\n        print(\"Conan\")\n        break\nif f==0:\n    print(\"Agasa\")", "#!/usr/bin/env python3\n#! -*- coding: utf-8 -*-\nfrom collections import Counter\n\n\ndef main():\n\tn = int(input())\n\tcnt = Counter(map(int, input().split()))\n\tfor a, val in cnt.items():\n\t\tif val % 2 == 1:\n\t\t\tprint(\"Conan\")\n\t\t\treturn\n\tprint(\"Agasa\")\n\ndef __starting_point():\n\tmain()\n__starting_point()", "n = int(input())\na = [int(i) for i in input().split()]\nmaxa = max(a)\ncnt = a.count(maxa)\nif n == cnt:\n    if cnt % 2:\n        print(\"Conan\")\n    else:\n        print(\"Agasa\")\n    return\np = [0] * (10**5 + 1)\nfor i in a:\n    p[i] += 1\nfor i in range(10**5, 0, -1):\n    if p[i] % 2:\n        print(\"Conan\")\n        break\nelse:\n    print(\"Agasa\")\n", "n = int(input().strip())\nns = list(map(int, input().strip().split()))\n\nfrom collections import Counter\n\ncards = Counter(ns)\n#print(cards)\n\n# given largest cards, invariant is parity of copies\nparities = sorted([item for item in cards.items()], reverse=True)\nfor val, copies in parities:\n    if copies % 2:  # odd copies off largest card\n        print('Conan')\n        break\nelse:\n    print('Agasa')", "n = int(input())\na = [0] * 100001\nfor x in map(int, input().split()):\n  a[x] += 1\nprint('Conan' if 1 in [x%2 for x in a]else 'Agasa')\n", "n = int(input())\na = list(map(int, input().split()))\na.sort(reverse=True)\nnum = [a[0]]\ncnt = [1]\nfor i in range(1, len(a)):\n    if a[i] == num[-1]:\n        cnt[-1] += 1\n        continue\n    num.append(a[i])\n    cnt.append(1)\nans = \"Agasa\"\nfor i in cnt:\n    if i%2 == 1:\n        ans = \"Conan\"\nprint(ans)\n", "n = int(input())\na = [int(i) for i in input().split()]\nb = [0] * 200000\nfor i in a:\n    b[i] += 1\nf = 0\nfor i in b:\n    if i % 2 == 1:\n        f = 1\nif f:\n    print(\"Conan\")\nelse:\n    print(\"Agasa\")\n"]