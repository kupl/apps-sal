["n,m,k = [int(x) for x in input().split()]\n\nif k+2>n+m:\n    print(-1)\nelse:\n    if k >= n:\n        alpha = m // (k-n+2)\n    else:\n        alpha = m * (n // (k+1))\n    if k >= m:\n        beta = n // (k-m+2)\n    else:\n        beta = n * (m // (k + 1))\n    print(max(alpha, beta))\n", "n, m, k = map(int, input().split())\nif m > n:\n\tn, m = m, n\nans = -1\nif k < n:\n\tans = m * (n // (k + 1))\n\tif k < m:\n\t\tans = max(ans, n * (m // (k + 1)))\nelif k <= (n - 1) + (m - 1):\n\tans = m // ((k + 1 - n) + 1)\nprint(ans)", "\"\"\"\nCodeforces Round 257 Div 1 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0:\n        return inputs\n    if mode == 1:\n        return inputs.split()\n    if mode == 2:\n        return [int(x) for x in inputs.split()]\n\ndef write(s=\"\\n\"):\n    if isinstance(s, list): s = \" \".join(map(str,s))\n    s = str(s)\n    print(s, end=\"\")\n\n################################################### SOLUTION\nn,m,k = read()\n\nif n+m-2 < k:\n    print(-1)\nelse:\n    mx = 0\n    if n > k:\n        mx = max(mx, (n//(k+1)) * m)\n    else:\n        mx = max(mx, 1 * (m // (k-n+2)))\n    if m > k:\n        mx = max(mx, (m//(k+1)) * n)\n    else:\n        mx = max(mx, 1 * (n // (k-m+2)))\n    print(mx)", "n, m, k = map(int, input().split())\n\nif k <= n + m - 2:\n    x = min(k + 1, n)\n    y = k + 2 - x\n    a = (n // x) * (m // y)\n    y = min(k + 1, m)\n    x = k + 2 - y\n    b = (n // x) * (m // y)\n    print(max(a, b))\nelse:\n    print(-1)", "n, m, k=list(map(int,input().split()))\nif  n+m-2<k:\n    print(\"-1\\n\")\nelse:\n    x=min(n-1,k)\n    y=max(0,k-x)\n    ans=(n//(x+1))*(m//(y+1))\n    y=min(m-1,k)\n    x=max(0,k-y)\n    ans=max(ans,(n//(x+1))*(m//(y+1)))\n    print(ans,'\\n')\n", "from sys import stdin as cin\nfrom fractions import gcd\nmod = 1000000007\nn, m, k = map(int,cin.readline().split())\n\nif k>(n+m-2):\n    print(-1)\n\nelse:\n    if n < m:\n        n,m = m,n\n    max_min_area = max((n*(m//(k+1))),(m*(n//(k+1))))\n    if (k+1) > m:\n        max_min_area = max(max_min_area,n//(k-m+2))\n    if (k+1) > n:\n        max_min_area = max(max_min_area,m//(k-n+2))\n    print(max_min_area)", "def split1(m,n,k):\n  if m%(k+1) == 0:\n   return n*(m//(k+1))\n  if k < m:\n    return (m//(k+1))*n\n  else:\n    k2 = k - m + 1\n    return n // (k2+1)\n\ndef split(m,n,k):\n  r =  max(split1(m,n,k), split1(n,m,k))\n  return r if r else -1\n\nargs = input().split()\nprint(split(*list(map(int, args))))\n#assert split(2,3,4) == 0\n#assert split(6,4,5) == 4\n#assert split(98283,999283848,23) == 4092192268041\n#assert split(6,4,6) == 2\n", "def split1(m,n,k):\n  if k < m:\n    return (m//(k+1))*n\n  else:\n    return n // (k-m+2)\n\ndef split(m,n,k):\n  r =  max(split1(m,n,k), split1(n,m,k))\n  return r if r else -1\n\nargs = input().split()\nprint(split(*list(map(int, args))))\n#assert split(2,3,4) == 0\n#assert split(6,4,5) == 4\n#assert split(98283,999283848,23) == 4092192268041\n#assert split(6,4,6) == 2\n", "n,m,k = list(map(int,input().split()))\nans = -1\nif n>=k+1:\n    ans = max(ans,n//(k+1)*m)\nelif m>=k-n+2:\n    ans=max(ans,m//(k-n+2))\n\nn,m = m,n\n\nif n>=k+1:\n    ans = max(ans,n//(k+1)*m)\nelif m>=k-n+2:\n    ans=max(ans,m//(k-n+2))\n\nprint(ans)\n", "n, m, k = map(int, input().split())\nif k > n + m - 2: print(-1)\nelse:\n    a, b = m * (n // (k + 1)), n * (m // (k + 1))\n    if a == 0: a = m // (k - n + 2)\n    if b == 0: b = n // (k - m + 2)\n    print(max(a, b))", "n, m, k = map(int, input().split())\nn, m = min(n, m), max(n, m)\ndef p(i, j):\n    return (n // (i + 1)) * (m // (j + 1))\n\nif k < n:\n    print(max(p(k, 0), p(0, k)))\nelif k < m:\n    print(p(0, k))\nelif k <= n + m - 2:\n    print(p(k - (m - 1), m - 1))\nelse:\n    print(-1)", "def main():\n    a, b, c = list(map(int, input().split()))\n    res, c = [-1], c + 1\n    if c < a + b:\n        for n, m, k in (a, b, c), (b, a, c):\n            if n < k:\n                k -= n - 1\n                n, m = m, 1\n            res.append(n // k * m)\n    print(max(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# Python is the best\n\ndef Calc(n, m, k):\n    if n + m - 2 < k:\n        return -1\n    if k <= n - 1:\n        return n // (k + 1) * m\n    return m // (k - n + 2)\n\n\nn, m, k = [int(x) for x in input().split()]\n\nprint(max(Calc(n, m, k), Calc(m, n, k)))\n", "n, m, k = list(map(int, input().split()))\n\nif m > n:\n\n\tn, m = m, n\n\nans = -1\n\nif k < n:\n\n\tans = m * (n // (k + 1))\n\n\tif k < m:\n\n\t\tans = max(ans, n * (m // (k + 1)))\n\nelif k <= (n - 1) + (m - 1):\n\n\tans = m // ((k + 1 - n) + 1)\n\nprint(ans)\n\n\n\n# Made By Mostafa_Khaled\n", "l = input().split()\nn = int(l[0])\nm = int(l[1])\nk = int(l[2])\n\nif ( k <= n+m-2 ):\n    if ( k < n ):\n        outn = int((n / (k + 1))) * m\n    else:\n        outn = int(m / (k - n + 2))\n    if ( k < m):\n        outm = int( m / ( k + 1)) * n\n    else:\n        outm = int( n / ( k - m + 2 ))\n    print (\"\", max( outn, outm), sep = '')\nelse:\n    print ( \"-1\")", "import math\nn,m,k=list(map(int,input().split()))\nif k>n+m-2 :\n    print(-1)\n    return\nif n%(k+1)==0 :\n    print(int(n/(k+1))*m)\n    return\nif m%(k+1)==0 :\n    print(int(m/(k+1))*n)\n    return\nr=max(n//(k+1),1)\nr1=max(0,k-n+1)\nr2=m//(1+r1)\nans=r*r2\nr=max(m//(k+1),1)\nr1=max(0,k-m+1)\nr2=n//(1+r1)\nans=max(ans,r*r2)\nprint(int(ans))\n        \n    \n", "n, m, k = map(int, input().split())\n \nif k <= n + m - 2:\n    x = min(k + 1, n)\n    y = k + 2 - x\n    a = (n // x) * (m // y)\n    y = min(k + 1, m)\n    x = k + 2 - y\n    b = (n // x) * (m // y)\n    print(max(a, b))\nelse:\n    print(-1)", "n,m,k=[int(s) for s in input().split()]\nn,m=max(n,m),min(n,m)\nif n+m-2<k:print(-1)\nelif n-1<k:\n    print(m//(k-n+2))\nelif m-1<k:print(n//(k+1)*m)\nelse:\n    print(max(n//(k+1)*m,m//(k+1)*n))\n", "n, m, k = map(int, input().split())\n\nif n + m - 2 < k:\n\tprint(-1)\n\treturn\n\ndef divisors(n):\n\tdiv = set()\n\n\tfor i in range(1, int(n ** (1 / 2)) + 1):\n\t\tif n % i == 0:\n\t\t\tdiv.add(i)\n\t\t\tdiv.add(n // i)\n\n\treturn [*div]\n\ndef solve(n, m, k):\n\tdiv = divisors(n)\n\tans = 0\n\n\tfor i in div:\n\t\tif i - 1 > k: continue\n\t\tans = max(ans, (n // i) * (m // (k - i + 2)))\n\n\treturn ans\n\nprint(max(solve(n, m, k), solve(m, n, k)))", "a,b,k = list(map(int,input().split()))\nif a+b-2<k:\n\tprint(-1)\n\treturn\nk+=2\nif a>b:\n\ta,b=b,a\n\ni = 1\nmaxi = -1\nwhile (i*i<=a):\n\n\ty=min(i,k-1)\n\tval1 = (a//y)*(b//(k-y))\n\tif maxi<val1:\n\t\tmaxi = val1\n\n\tj = min(a//i,k-1)\n\tval2 = (a//j)*(b//(k-j))\n\tif maxi<val2:\n\t\tmaxi=val2\n\ti+=1\nprint(maxi)\n", "n,m,k = list(map(int,input().split()))\nans,ans1=0,0\nif n+m-2<k:\n    print(-1)\n    return\nelse:\n    k1=k\n    if k<n:\n        ans=(n//(k+1))*m\n    else:\n        k-=(n-1)\n        ans = (m//(k+1))\n    if k1<m:\n        ans1 = (m//(k1+1))*n\n    else:\n        k1-=(m-1)\n        ans1 = (n//(k1+1))\nprint(max(ans1,ans))            \n\n\n"]