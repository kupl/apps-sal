["n,m,i,j,a,b=list(map(int,input().split()))\n\nans=100000000000\n\nif((i,j)==(n,1) or (i,j)==(1,1) or (i,j)==(1,m) or (i,j)==(n,m)):\n    print(0)\n\nelse:\n    #Corner (1,1)\n\n    hor=i-1\n    ver=j-1\n\n    if(hor%a==0 and ver%b==0):\n        x=hor//a\n        y=ver//b\n        if(x%2==y%2 and a<=n-1 and b<=m-1):\n            ans=min(ans,max(x,y))\n\n    #Corner (n,m)\n\n    hor=abs(i-n)\n    ver=abs(j-m)\n\n    if(hor%a==0 and ver%b==0):\n        x=hor//a\n        y=ver//b\n        if(x%2==y%2 and a<=n-1 and b<=m-1):\n            ans=min(ans,max(x,y))\n\n    #Corner (1,m)\n\n    hor=i-1\n    ver=abs(j-m)\n\n    if(hor%a==0 and ver%b==0):\n        x=hor//a\n        y=ver//b\n        if(x%2==y%2 and a<=n-1 and b<=m-1):\n            ans=min(ans,max(x,y))\n\n    #Corner (n,1)\n\n    hor=abs(n-i)\n    ver=j-1\n\n    if(hor%a==0 and ver%b==0):\n        x=hor//a\n        y=ver//b\n        if(x%2==y%2 and a<=n-1 and b<=m-1):\n            ans=min(ans,max(x,y))\n    if(ans!=100000000000):\n        print(ans)\n    else:\n        print(\"Poor Inna and pony!\")\n        \n", "3\n\ndef readln(): return list(map(int, input().split()))\n\nn, m, i, j, a, b = readln()\n\ndef solve(w, h):\n    if w == 0 and h == 0:\n        return 0\n    if w == 0 and a < n and h % 2 == 0:\n        return h\n    if h == 0 and b < m and w % 2 == 0:\n        return w\n    if w == 0 or h == 0:\n        return 1 << 30\n    if (w + h) % 2 == 0:\n        return max(w, h)\n    return 1 << 30\n\nans = min([1 << 30] + [solve(abs(i - p) // a, abs(j - q) // b) for p, q in ((1, 1), (1, m), (n, 1), (n, m)) if abs(i - p) % a == 0 and abs(j - q) % b == 0])\nprint('Poor Inna and pony!' if ans == 2**30 else ans)\n", "n, m, i, j, a, b = map(int, input().split())\nGood = lambda i, a, n, d: None if abs(i-d)%a != 0 else (abs(i-d)//a%2 if abs(i-d)//a >= 1 else (0 if i+a <= n or i-a >= 1 else -1))\nres = None\nxx, yy = [1, n], [1, m]\nfor dx in xx:\n    for dy in yy:\n        tx, ty = Good(i, a, n, dx), Good(j, b, m, dy)\n        if tx is None or ty is None:\n            continue\n        if tx == -1 or ty == -1:\n            if (tx == -1 and abs(j-dy)//b == 0) or (ty == -1 and abs(i-dx)//a == 0):\n                res = 0\n            continue\n        if tx != ty:\n            continue\n        new_res = max(abs(i-dx)//a, abs(j-dy)//b)\n        res = new_res if res is None or res > new_res else res\nprint('Poor Inna and pony!' if res is None else res)", "def num_steps(x, y):\n    if i == x and j == y:\n        return 0\n    \n    dx = abs(j-y)\n    dy = abs(i-x)\n\n    if (dy == 0 and i-a < 1 and i+a > n) or (dx == 0 and j-b < 1 and j+b > m):\n        return -1\n\n    if dy % a != 0 or dx % b != 0:\n        return -1\n\n    ny = dy // a\n    nx = dx // b\n\n    if nx % 2 != ny % 2:\n        return -1\n\n    return max(nx, ny)\n\nn, m, i, j, a, b = map(int, input().split())\ncand = list(filter(lambda x: x >= 0, (num_steps(1, 1), num_steps(n, 1), num_steps(1, m), num_steps(n, m))))\n\nif not cand:\n    print(\"Poor Inna and pony!\")\nelse:\n    print(min(cand))", "n, m, i, j, a, b = map(int, input().split())\nx, y, t = [i - 1, n - i], [j - 1, m - j], []\nif all(i < a for i in x) or all(j < b for j in y):\n    if 0 in x and 0 in y: t = [0]\nelse:\n    u = [d // a for d in x if d % a == 0]\n    v = [d // b for d in y if d % b == 0]\n    t = [max(i, j) for i in u for j in v if (i + j) % 2 == 0]\nprint(min(t) if t else 'Poor Inna and pony!')", "inf = 1000 * 1000 * 1000\ndef calc(x, y):\n\tif(x % a != 0 or y % b != 0):\n\t\treturn inf\n\ts = x / a + y / b\n\tif(s % 2 == 1):\n\t\treturn inf\n\treturn max(x / a, y / b)\nn, m, x, y, a, b = map(int, input().split())\nif(x == 1 and y == 1 or x == 1 and y == m or x == n and y == 1 or x == n and y == m):\n\tprint(0)\n\treturn\nif(x - a <= 0 and x + a > n or y + b > m and y - b <= 0):\n\tprint('Poor Inna and pony!')\n\treturn\t\nans = calc(x-1, y-1)\nans = min(ans, calc(x-1, m-y))\nans = min(ans, calc(n-x, y-1))\nans = min(ans, calc(n-x, m-y))\nans = int(ans)\nprint(ans if ans != inf else 'Poor Inna and pony!')", "import sys\n\ndef solve():\n    n, m, i, j, a, b = map(int, input().split())\n    i -= 1\n    j -= 1\n    n -= 1\n    m -= 1\n    if (i == 0 or i == n) and (j == 0 or j == m): return 0\n    # print(i, j)\n    if (i - a < 0 and i + a > n) or (j - b < 0 and j + b > m): return \"Poor Inna and pony!\"\n    uprow = i\n    downrows = n - i\n    leftcol = j\n    rightcol = m - j\n    # print(uprow, downrows, leftcol, rightcol)\n    ans = 10000000000\n    if uprow % a == 0 and leftcol % b == 0 and abs(uprow//a - leftcol//b) % 2 == 0: #upperleft\n        ans = min(ans, max(uprow//a,leftcol//b))\n    if uprow % a == 0 and rightcol % b == 0 and abs(uprow//a - rightcol//b) % 2 == 0: #upperright\n        ans = min(ans, max(uprow//a,rightcol//b))\n    if downrows % a == 0 and leftcol % b == 0 and abs(downrows//a - leftcol//b) % 2 == 0: #lowerleft\n        ans = min(ans, max(downrows//a ,leftcol//b))\n    if downrows % a == 0 and rightcol % b == 0 and abs(downrows//a - rightcol//b) % 2 == 0: #lowerright\n        ans = min(ans, max(downrows//a , rightcol//b))\n\n    return ans if ans != 10000000000 else \"Poor Inna and pony!\"\n\n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "n, m, i, j, a, b = list(map(int, input().split()))\ndef f(x, y):\n    dx, dy = abs(x - i), abs(y - j)\n    if dx % a or dy % b:\n        return -1\n    elif dx // a % 2 != dy // b % 2:\n        return -1\n    elif dx == 0 and dy == 0:\n        return 0\n    elif (i - a < 1 and i + a > n) or (j - b < 1 and j + b > m):\n        return -1\n    else:\n        return max(dx // a, dy // b)\nv = -1\nfor p in ((1, m), (n, 1), (n, m), (1, 1)):\n    c = f(*p)\n    if c != -1 and (v == -1 or c < v):\n        v = c\nprint(v if v != -1 else 'Poor Inna and pony!')\n", "from sys import setrecursionlimit, exit\nfrom math import ceil, floor, acos, pi\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom fractions import gcd\nfrom functools import reduce\nimport itertools\nsetrecursionlimit(10**7)\nRI=lambda x=' ': list(map(int,input().split(x)))\nRS=lambda x=' ': input().rstrip().split(x)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nmod=int(1e9+7)\neps=1e-6\nMAX=1e9\n#################################################\nn, m, i, j, a, b = RI()\nmin_val=MAX\nif (i,j)==(1,1) or (i,j)==(1,m) or (i,j)==(n,1) or (i,j)==(n,m):\n    print(0)\nelse:\n    if (n-i)%a==0 and (m-j)%b==0 and  ((n-i)//a - (m-j)//b)%2==0 and a<=n-1 and b<=m-1:\n        min_val=min(min_val, max((n-i)//a,(m-j)//b))\n    if (i-1)%a==0 and (m-j)%b==0 and  ((i-1)//a - (m-j)//b)%2==0 and a<=n-1 and b<=m-1:\n        min_val=min(min_val, max((i-1)//a,(m-j)//b))\n    if (n-i)%a==0 and (j-1)%b==0 and  ((n-i)//a - (j-1)//b)%2==0 and a<=n-1 and b<=m-1:\n        min_val=min(min_val, max((n-i)//a,(j-1)//b))\n    if (i-1)%a==0 and (j-1)%b==0 and  ((i-1)//a - (j-1)//b)%2==0 and a<=n-1 and b<=m-1:\n        min_val=min(min_val, max((i-1)//a,(j-1)//b))\n    if min_val==MAX:\n        print(\"Poor Inna and pony!\")\n    else:\n        print(min_val)\n", "n, m, i, j, a, b = list(map(int, input().split()))\np = [(1, m), (n, 1), (n, m), (1, 1)]\nc = 0\nmn = 1e9\nfnd = False\nfor c in range(4):\n    if abs(p[c][0] - i) % a == 0 and abs(p[c][1] - j) % b == 0 and ((p[c][0] - i) / a + (p[c][1] - j) / b) % 2 == 0:\n        a1 = abs(p[c][0] - i) / a\n        b1 = abs(p[c][1] - j) / b\n        if (1 <= i - a or i + a <= n or max(a1, b1) == 0)and(1 <= j - b or j + b <= m or max(a1, b1) == 0) :\n            mn = min(mn, int(max(a1, b1)))\n            fnd = True\nif fnd:\n    print(mn)\nelse:\n    print('Poor Inna and pony!')\n", "n, m, i, j, a, b = map(int, input().split())\nx, y, t = [i - 1, n - i], [j - 1, m - j], []\nif all(i < a for i in x) or all(j < b for j in y):\n    if 0 in x and 0 in y: t = [0]\nelse:\n    u = [d // a for d in x if d % a == 0]\n    v = [d // b for d in y if d % b == 0]\n    t = [max(i, j) for i in u for j in v if (i + j) % 2 == 0]\nprint(min(t) if t else 'Poor Inna and pony!')", "def main():\n    (n, m, x, y, a, b) = list(map(int, input().split(' ')))\n    mi = int(1e9)\n    for x2, y2 in [(1, m), (n, 1), (n, m), (1, 1)]:\n        if x == x2 and y == y2:\n            return 0\n        if abs(x2 - x) % a != 0 or abs(y2 - y) % b != 0:\n            continue\n        o = abs(x2 - x) // a\n        p = abs(y2 - y) // b\n        if not o % 2 == p % 2:\n            continue\n        mi = min(mi, max(o, p))\n    if int(mi) == int(1e9) or n <= a or m <= b:\n        return \"Poor Inna and pony!\"\n    return int(mi)\nprint(main())\n", "lst = list(map(int, input().strip().split()))\nn = lst[0]\nm = lst[1]\ncorners = [[1, 1], [1, m], [n, m], [n, 1]]\npoint = [lst[2], lst[3]]\na = lst[4]\nb = lst[5]\ncorners2 = []\nfor corner in corners:\n    if (corner[0] - point[0]) % a == 0 and (corner[1] - point[1]) % b == 0 and corner not in corners2:\n        corners2.append(corner)\ncorners.clear()\n\n#print(corners2)\n\nif not corners2:\n    print(\"Poor Inna and pony!\")\nelse:\n    for i in range(len(corners2)):\n        corner = corners2[i]\n        if point in corners2:\n            corners.append(0)\n        else:\n            move1 = abs(corner[0] - point[0]) // a\n            move2 = abs(corner[1] - point[1]) // b\n            if (move1 - move2) % 2 == 0 and (point[0] + a in range(1, n+1) or point[0] - a  in range(1, n+1)) and (point[1] + b in range(1, m+1) or point[1] - b in range(1, m+1)):\n                corners.append(max(move1, move2))\n            #print(move1, move2)\n    if not corners:\n        print(\"Poor Inna and pony!\")\n    else:\n        print(min(corners))", "# Made By Mostafa_Khaled \nbot = True \nn, m, i, j, a, b = list(map(int, input().split()))\n\nx, y, t = [i - 1, n - i], [j - 1, m - j], []\n\nif all(i < a for i in x) or all(j < b for j in y):\n\n    if 0 in x and 0 in y: t = [0]\n\nelse:\n\n    u = [d // a for d in x if d % a == 0]\n\n    v = [d // b for d in y if d % b == 0]\n\n    t = [max(i, j) for i in u for j in v if (i + j) % 2 == 0]\n\nprint(min(t) if t else 'Poor Inna and pony!')\n\n# Made By Mostafa_Khaled\n", "n, m, i, j, a, b = list(map(int, input().split()))\n\ndef solve(x, y):\n    dx, dy = abs(x - i), abs(y - j)\n    if dx % a or dy % b:\n        return -1\n    elif dx // a % 2 != dy // b % 2:\n        return -1\n    elif dx == 0 and dy == 0:\n        return 0\n    elif (i - a < 1 and i + a > n) or (j - b < 1 and j + b > m):\n        return -1\n    else:\n        return max(dx // a, dy // b)\n\nres = -1\nfor k in ((1, m), (n, 1), (n, m), (1, 1)):\n    curr = solve(k[0], k[1])\n    if curr != -1 and (res == -1 or curr < res):\n        res = curr\nprint(res if res != -1 else 'Poor Inna and pony!')\n", "n,m,i,j,a,b = list(map(int,input().split()))\n\npath1=path2=path3=path4=10000000000\n\ntemp1 =temp2=temp3=temp4=0\nif int((i-1)/a) == (i-1)/a and int((j-1)/b) == (j-1)/b:\n\n\n    path1 = (i-1)/a\n    path_1 = (j-1)/b\n    # print(path1,path_1)\n    if path1%2 == 0 and path_1%2 == 0 :\n        path1 = max(path1,path_1)\n        temp1 = 1\n    elif path1%2 != 0 and path_1%2 !=0 :\n        path1 = max(path1,path_1)\n        temp1 = 1\n\n    else:\n        path1 = 100000000000\n        temp1 = 0\n\nif int((i-1)/a) == (i-1)/a and int((m-j)/b) == (m-j)/b:\n    temp = 1\n    path2 = (i-1)/a\n    path_2 = (m-j)/b\n    if path2%2 == 0 and path_2%2 ==0 :\n        path2 = max(path2,path_2)\n        temp2 = 1\n    elif path2%2 != 0 and path_2%2 !=0 :\n        path2 = max(path2,path_2)\n        temp2 = 1\n\n    else:\n        path2 = 100000000000\n        temp2 = 0\n\n\n\nif int((n-i)/a) == (n-i)/a and int((j-1)/b) == (j-1)/b:\n    temp = 1\n    path3 = (n-i)/a\n    path_3 = (j-1)/b\n    if path3%2 == 0 and path_3%2 ==0 :\n        path3 = max(path3,path_3)\n        temp3 = 1\n\n    elif path3%2 != 0 and path_3%2 !=0 :\n        path3 = max(path3,path_3)\n        temp3 = 1\n\n    else:\n        path3 = 10000000000000\n        temp3 = 0\n\nif int((n-i)/a) == (n-i)/a and int((m-j)/b) == (m-j)/b:\n    temp = 1\n    path4 = (n-i)/a\n    path_4 = (m-j)/b\n    if path4%2 == 0 and path_4%2 ==0 :\n        path4 = max(path4,path_4)\n        temp4 = 1\n    elif path4%2 != 0 and path_4%2 !=0 :\n        path4 = max(path4,path_4)\n        temp4 = 1\n    else:\n        path4 = 1900000000000\n        temp4 = 0\n\nmini = min(path1,path2,path3,path4)\nif ((i + a > n and i - a < 1) or (j+b > m and j-b < 1)) and mini!=0:\n    print(\"Poor Inna and pony!\")\n\nelif temp1==0 and temp2==0 and temp3==0 and temp4==0:\n    print(\"Poor Inna and pony!\")\nelse:\n    print(int(min(path1,path2,path3,path4)))\n", "bot = True \nn, m, i, j, a, b = map(int, input().split())\n\nx, y, t = [i - 1, n - i], [j - 1, m - j], []\n\nif all(i < a for i in x) or all(j < b for j in y):\n\n    if 0 in x and 0 in y: t = [0]\n\nelse:\n\n    u = [d // a for d in x if d % a == 0]\n\n    v = [d // b for d in y if d % b == 0]\n\n    t = [max(i, j) for i in u for j in v if (i + j) % 2 == 0]\n\nprint(min(t) if t else 'Poor Inna and pony!')", "n,m,i,j,a,b=map(int,input().split())\nans=n*m+1\nif (i-1)%a==0 and (m-j)%b==0:\n    x=min( (i-1)//a,(m-j)//b)\n    y=max( (i-1)//a,(m-j)//b)\n    if (y-x)%2==0:\n        if (y-x)==0 or ( ((i-a)>=1 or(i+a)<=n) and ((j+b)<=m or (j-b)>=1) ):\n            ans=min(ans,x+(y-x))\nif (n-i)%a==0 and (j-1)%b==0:\n    x=min( (n-i)//a,(j-1)//b)\n    y=max( (n-i)//a,(j-1)//b)\n    if (y-x)%2==0:\n        if (y-x)==0 or ( ((i-a)>=1 or(i+a)<=n) and ((j+b)<=m or (j-b)>=1) ):\n            ans=min(ans,x+(y-x))\nif (i-1)%a==0 and (j-1)%b==0:\n    x=min( (i-1)//a,(j-1)//b)\n    y=max( (i-1)//a,(j-1)//b)\n    if (y-x)%2==0:\n        if (y-x)==0 or ( ((i-a)>=1 or(i+a)<=n) and ((j+b)<=m or (j-b)>=1) ):\n            ans=min(ans,x+(y-x))\nif (n-i)%a==0 and (m-j)%b==0:\n    x=min( (n-i)//a,(m-j)//b)\n    y=max( (n-i)//a,(m-j)//b)\n    if (y-x)%2==0 :\n        if (y-x)==0 or ( ((i-a)>=1 or(i+a)<=n) and ((j+b)<=m or (j-b)>=1) ):\n            ans=min(ans,x+(y-x))\nif ans!=(n*m+1):\n    print(ans)\nelse :\n    print(\"Poor Inna and pony!\")", "n,m,i,j,a,b=list(map(int,input().split()))\nl=[]\nif (i-1)%a==0 and (j-1)%b==0:\n    s1=(i-1)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i-1)%a==0 and (m-j)%b==0:\n    s1=(i-1)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (j-1)%b==0:\n    s1=(n-i)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (m-j)%b==0:\n    s1=(n-i)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i,j)==(0,0) or (i,j)==(n,m) or (i,j)==(n,1) or (i,j)==(1,m):print(0)\nelif i+a>n and i-a<1:print( \"Poor Inna and pony!\")\nelif j+b>m and j-b<1:print( \"Poor Inna and pony!\")\nelif len(l)==0:print( \"Poor Inna and pony!\")\nelse:print(min(l))\n", "n,m,i,j,a,b=map(int,input().split())\nl=[]\nif (i-1)%a==0 and (j-1)%b==0:\n    s1=(i-1)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i-1)%a==0 and (m-j)%b==0:\n    s1=(i-1)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (j-1)%b==0:\n    s1=(n-i)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (m-j)%b==0:\n    s1=(n-i)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i,j)==(0,0) or (i,j)==(n,m) or (i,j)==(n,1) or (i,j)==(1,m):print(0)\nelif i+a>n and i-a<1:print( \"Poor Inna and pony!\")\nelif j+b>m and j-b<1:print( \"Poor Inna and pony!\")\nelif len(l)==0:print( \"Poor Inna and pony!\")\nelse:print(min(l))", "n, m, i, j, a, b = map(int, input().split())\nx, y, t = [i - 1, n - i], [j - 1, m - j], []\nif all(i < a for i in x) or all(j < b for j in y):\n    if 0 in x and 0 in y: t = [0]\nelse:\n    u = [d // a for d in x if d % a == 0]\n    v = [d // b for d in y if d % b == 0]\n    t = [max(i, j) for i in u for j in v if (i + j) % 2 == 0]\nprint(min(t) if t else 'Poor Inna and pony!')", "n,m,i,j,a,b=map(int,input().split())\nl=[]\nif (i-1)%a==0 and (j-1)%b==0:\n    s1=(i-1)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i-1)%a==0 and (m-j)%b==0:\n    s1=(i-1)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (j-1)%b==0:\n    s1=(n-i)//a\n    s2=(j-1)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (n-i)%a==0 and (m-j)%b==0:\n    s1=(n-i)//a\n    s2=(m-j)//b\n    if (s1+s2)%2==0:l.append(max(s1,s2))\nif (i,j)==(0,0) or (i,j)==(n,m) or (i,j)==(n,1) or (i,j)==(1,m):print(0)\nelif i+a>n and i-a<1:print( \"Poor Inna and pony!\")\nelif j+b>m and j-b<1:print( \"Poor Inna and pony!\")\nelif len(l)==0:print( \"Poor Inna and pony!\")\nelse:print(min(l))", "n, m, i, j, a, b = map(int, input().split())\ncorners = [(1, 1), (1, m), (n, 1), (n, m)]\nresult = False\nans = -1\nfor cnt in corners:\n    if (abs(cnt[0] - i) % a == 0) and (abs(cnt[1] - j) % b == 0):\n        result = True\n        t1, t2 = abs(cnt[0] - i) // a, abs(cnt[1] - j) // b\n        if (t1 + t2) % 2 == 0:\n            if ans == -1:\n                ans = max(abs(cnt[0] - i) // a, abs(cnt[1] - j) // b)\n            else:\n                ans = min(max(abs(cnt[0] - i) // a, abs(cnt[1] - j) // b), ans)\nif ans == 0:\n    print(ans)\nelif not result or (i+a > n and i-a < 1) or (j+b > m and j-b < 1) or ans == -1:\n    print(\"Poor Inna and pony!\")\nelse:\n    print(ans)", "#import math\n#n, m = input().split()\n#n = int (n)\n#m = int (m)\n#n, m, k= input().split()\n#n = int (n)\n#m = int (m)\n#k = int (k)\n#l = int(l)\n#m = int(input())\n#s = input()\n##t = input()\n#a = list(map(char, input().split()))\n#a.append('.')\n#print(l)\n#a = list(map(int, input().split()))\n#c = sorted(c)\n#x1, y1, x2, y2 =map(int,input().split())\n#n = int(input())\n#f = []\n#t = [0]*n\n#f = [(int(s1[0]),s1[1]), (int(s2[0]),s2[1]), (int(s3[0]), s3[1])]\n#f1 = sorted(t, key = lambda tup: tup[0])\nx1, y1, x3, y3, x2, y2 = input().split()\nx1 = int(x1)\nx2 = int(x2)\nx3 = int(x3)\ny1 = int(y1)\ny2 = int(y2)\ny3 = int(y3)\nmi =  x1*y1\nif((x3-1) % x2 == 0 and (y3-1) % y2 == 0 and ((x3-1) / x2) %2 == ((y3-1)/ y2)%2):\n    mi = min(mi, max((x3-1)/x2,(y3-1)/y2))  \nif((x3-1) % x2 == 0 and (y1-y3) % y2 == 0 and ((x3-1) / x2) %2 == ((y1-y3)/ y2)%2):\n    mi = min(mi, max((x3-1)/x2,(y1-y3)/y2))  \nif((x1-x3) % x2 == 0 and (y3-1) % y2 == 0 and ((x1-x3) / x2) % 2 == ((y3-1)/ y2)%2):\n    mi = min(mi, max((x1-x3)/x2,(y3-1)/y2)) \nif((x1-x3) % x2 == 0 and (y1-y3) % y2 == 0 and ((x1-x3) / x2)%2 == ((y1-y3)/ y2)%2):\n    mi = min(mi, max((x1-x3)/x2,(y1-y3)/y2))   \nif (mi == x1*y1 or ( (x2 >= x3 and x2 > x1-x3)  and mi != 0)or ((y2 >= y3 and y2 > y1-y3)  and mi != 0)):\n    print(\"Poor Inna and pony!\")\nelse:\n    print(int(mi))\n"]