["import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nn = int(input())\nd = []\nM, m = 0, 10**30\nM_of_m, m_of_M = 0, 10**30\nfor _ in range(n):\n\tx, y = map(int, input().split())\n\tg, l = max(x, y), min(x, y)\n\td.append([l, g])\n\tM = max(M, g)\n\tm = min(m, l)\n\tM_of_m = max(M_of_m, l)\n\tm_of_M = min(m_of_M, g)\nans1 = (M - m_of_M) * (M_of_m - m)\n\nM_other, m_other = M_of_m, m\nm_reversed = 10**30\ngap = M_other - m_other\nd.sort(key=min)\nfor i in range(n-1):\n\tM_other = max(M_other, d[i][1])\n\tm_reversed = min(m_reversed, d[i][1])\n\tm_other = min(m_reversed, d[i+1][0])\n\tgap = min(gap, M_other - m_other)\nM_other = max(M_other, d[n-1][1])\nm_reversed = min(m_reversed, d[i][1])\ngap = min(gap, M_other - m_reversed)\nans2 = (M - m) * gap\n\n#print(ans1, ans2)\nprint(min(ans1, ans2))", "import sys\nfrom operator import itemgetter\n \ninf = 1 << 30\n \ndef solve():\n    n = int(sys.stdin.readline())\n \n    # r_max = MAX, b_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    r_max = b_max = 0\n    r_min = b_min = inf\n\n    p = []\n \n    for i in range(n):\n        xi, yi = map(int, sys.stdin.readline().split())\n\n        if xi > yi:\n            xi, yi = yi, xi\n\n        p.append((xi, yi))\n\n        r_max = max(r_max, yi)\n        r_min = min(r_min, yi)\n        b_max = max(b_max, xi)\n        b_min = min(b_min, xi)\n \n    ans1 = (r_max - r_min) * (b_max - b_min)\n \n    # r_max = MAX, r_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    ans2 = (r_max - b_min)\n\n    p.sort(key=itemgetter(0))\n\n    b_min = p[0][0]\n    b_max = p[-1][0]\n\n    y_min = inf\n\n    dif_b = b_max - b_min\n \n    for i in range(n - 1):\n        y_min = min(y_min, p[i][1])\n\n        b_min = min(p[i + 1][0], y_min)\n        b_max = max(b_max, p[i][1])\n\n        dif_b = min(dif_b, b_max - b_min)\n \n    ans2 *= dif_b\n \n    ans = min(ans1, ans2)\n \n    print(ans)\n \ndef __starting_point():\n    solve()\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nL, R = [], []\nLR = []\nINF = 10**9+1\nm, M = INF, 0\nfor i in range(n):\n  x, y = map(int, input().split())\n  if x > y:\n    x, y = y, x\n  L.append(x)\n  R.append(y)\n  LR.append((x, y))\n  if m > x:\n    m = x\n    idx_m = i\n  if M < y:\n    M = y\n    idx_M = i\nans1 = (M-min(R))*(max(L)-m)\nif idx_m == idx_M:\n  print(ans1)\n  return\na, b = L[idx_M], R[idx_m]\nif a > b:\n  a, b = b, a\nLR = sorted([lr for i, lr in enumerate(LR) if i != idx_m and i != idx_M])\nif not LR:\n  print(ans1)\n  return\nL, R = zip(*LR)\nmax_R = [-1]*(n-2)\nmin_R = [-1]*(n-2)\nmax_R[0] = R[0]\nmin_R[0] = R[0]\nfor i in range(n-3):\n  max_R[i+1] = max(max_R[i], R[i+1])\n  min_R[i+1] = min(min_R[i], R[i+1])\nl_min, l_max = L[0], L[-1]\nans2 = max(b, l_max) - min(a, l_min)\nfor i in range(n-2):\n  if i < n-3:\n    l_min = min(min_R[i], L[i+1])\n  else:\n    l_min = min_R[i]\n  l_max = max(l_max, max_R[i])\n  ans2 = min(ans2, max(b, l_max) - min(a, l_min))\nans2 *= M-m\nans = min(ans1, ans2)\nprint(ans)", "import sys\ninput=sys.stdin.readline\nn=int(input())\nl=[list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n  l[i].sort()\n\nans=[]\nl.sort()\nB1=[];R1=[]\nfor i in range(n):\n  B1.append(max(l[i]))\n  R1.append(min(l[i]))\nans.append((max(B1)-min(B1))*(max(R1)-min(R1)))\n\nBleft=[]\nBright=[]\nRleft=[]\nRright=[]\n\nM=B1[0];m=B1[0]\nBleft.append([m,M])\nfor i in range(1,n):\n  M=max(M,B1[i])\n  m=min(m,B1[i])\n  Bleft.append([m,M])\n\nB1.reverse()\nM=B1[0];m=B1[0]\nBright.append([m,M])\nfor i in range(1,n):\n  M=max(M,B1[i])\n  m=min(m,B1[i])\n  Bright.append([m,M])\n\nM=R1[0];m=R1[0]\nRleft.append([m,M])\nfor i in range(1,n):\n  M=max(M,R1[i])\n  m=min(m,R1[i])\n  Rleft.append([m,M])\n\nR1.reverse()\nM=R1[0];m=R1[0]\nRright.append([m,M])\nfor i in range(1,n):\n  M=max(M,R1[i])\n  m=min(m,R1[i])\n  Rright.append([m,M])\n\nfor i in range(n-1):\n  M1=max(Bleft[i][1],Rright[n-2-i][1])\n  m1=min(Bleft[i][0],Rright[n-2-i][0])\n  M2=max(Rleft[i][1],Bright[n-2-i][1])\n  m2=min(Rleft[i][0],Bright[n-2-i][0])\n  ans.append((M1-m1)*(M2-m2))\n\nprint(min(ans))", "import sys\nfrom operator import itemgetter\n \ninf = 1 << 30\n \ndef solve():\n    n = int(sys.stdin.readline())\n \n    # r_max = MAX, b_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    r_max = b_max = 0\n    r_min = b_min = inf\n\n    p = []\n \n    for i in range(n):\n        xi, yi = map(int, sys.stdin.readline().split())\n\n        if xi > yi:\n            xi, yi = yi, xi\n\n        p.append((xi, yi))\n\n        r_max = max(r_max, yi)\n        r_min = min(r_min, yi)\n        b_max = max(b_max, xi)\n        b_min = min(b_min, xi)\n \n    ans1 = (r_max - r_min) * (b_max - b_min)\n \n    # r_max = MAX, r_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    ans2 = (r_max - b_min)\n\n    p.sort(key=itemgetter(0))\n\n    b_min = p[0][0]\n    b_max = p[-1][0]\n\n    y_min = inf\n\n    dif_b = b_max - b_min\n \n    for i in range(n - 1):\n        if p[i][1] == r_max:\n            break\n        y_min = min(y_min, p[i][1])\n\n        b_min = min(p[i + 1][0], y_min)\n        b_max = max(b_max, p[i][1])\n\n        dif_b = min(dif_b, b_max - b_min)\n \n    ans2 *= dif_b\n \n    ans = min(ans1, ans2)\n \n    print(ans)\n \ndef __starting_point():\n    solve()\n__starting_point()", "N = int(input())\nxmin = ymin = float('inf')\nxmax = ymax = 0\np = []\nfor i in range(N):\n    x,y = list(map(int, input().split()))\n    if x > y : \n        x,y= y,x\n    p.append((x, y))\n    if x < xmin:\n        xmin = x\n    elif x > xmax:\n        xmax = x\n    if y < ymin:\n        ymin = y\n    elif y > ymax:\n        ymax = y\nret = (ymax-ymin) * (xmax-xmin)\n\n\np.sort()\ndx = p[-1][0] - p[0][0]\nymin = p[0][0]\ntymin = float('inf')\nfor i in range(N-1):\n    # print(i, dx, (xmax, xmin), end=' ==> ')\n    tymin = min(tymin, p[i][1])\n    xmax = max(xmax, p[i][1])\n    xmin = min(tymin, p[i+1][0])\n    dx = min(dx, xmax - xmin)\n    if tymin < p[i+1][0]:\n        break\n    # print(i, dx, (xmax, xmin))\n\nprint((min(ret, (ymax-ymin) * dx)))\n\n\n", "#####segfunc#####\ndef segfunc(x, y):\n    return min(x,y)\n#################\n\n#####ide_ele#####\nide_ele = float(\"inf\")\n#################\n\nclass SegTree:\n    \"\"\"\n    init(init_val, ide_ele): \u914d\u5217init_val\u3067\u521d\u671f\u5316 O(N)\n    update(k, x): k\u756a\u76ee\u306e\u5024\u3092x\u306b\u66f4\u65b0 O(logN)\n    query(l, r): \u533a\u9593[l, r)\u3092segfunc\u3057\u305f\u3082\u306e\u3092\u8fd4\u3059 O(logN)\n    \"\"\"\n    def __init__(self, init_val, segfunc, ide_ele):\n        \"\"\"\n        init_val: \u914d\u5217\u306e\u521d\u671f\u5024\n        segfunc: \u533a\u9593\u306b\u3057\u305f\u3044\u64cd\u4f5c\n        ide_ele: \u5358\u4f4d\u5143\n        n: \u8981\u7d20\u6570\n        num: n\u4ee5\u4e0a\u306e\u6700\u5c0f\u306e2\u306e\u3079\u304d\u4e57\n        tree: \u30bb\u30b0\u30e1\u30f3\u30c8\u6728(1-index)\n        \"\"\"\n        n = len(init_val)\n        self.segfunc = segfunc\n        self.ide_ele = ide_ele\n        self.num = 1 << (n - 1).bit_length()\n        self.tree = [ide_ele] * 2 * self.num\n        # \u914d\u5217\u306e\u5024\u3092\u8449\u306b\u30bb\u30c3\u30c8\n        for i in range(n):\n            self.tree[self.num + i] = init_val[i]\n        # \u69cb\u7bc9\u3057\u3066\u3044\u304f\n        for i in range(self.num - 1, 0, -1):\n            self.tree[i] = self.segfunc(self.tree[2 * i], self.tree[2 * i + 1])\n\n    def update(self, k, x):\n        \"\"\"\n        k\u756a\u76ee\u306e\u5024\u3092x\u306b\u66f4\u65b0\n        k: index(0-index)\n        x: update value\n        \"\"\"\n        k += self.num\n        self.tree[k] = x\n        while k > 1:\n            self.tree[k >> 1] = self.segfunc(self.tree[k], self.tree[k ^ 1])\n            k >>= 1\n\n    def query(self, l, r):\n        \"\"\"\n        [l, r)\u306esegfunc\u3057\u305f\u3082\u306e\u3092\u5f97\u308b\n        l: index(0-index)\n        r: index(0-index)\n        \"\"\"\n        res = self.ide_ele\n\n        l += self.num\n        r += self.num\n        while l < r:\n            if l & 1:\n                res = self.segfunc(res, self.tree[l])\n                l += 1\n            if r & 1:\n                res = self.segfunc(res, self.tree[r - 1])\n            l >>= 1\n            r >>= 1\n        return res\n\ndef main():\n    import sys,random\n\n    input=sys.stdin.readline\n\n    N=int(input())\n    q=[]\n    r=[]\n    b=[]\n    X=0\n    q_append=q.append\n    for i in range(N):\n        x,y=list(map(int,input().split()))\n        r.append(max(x,y))\n        b.append(min(x,y))\n\n\n    X=max(b)\n    init_val=[b[i] for i in range(N)]\n    for i in range(N):\n        x,y=r[i],b[i]\n        if X>r[i]:\n            init_val[i]=r[i]\n        elif X>b[i]:\n            q_append((r[i],i,-1))\n            init_val[i]=b[i]\n        else:\n            q_append((b[i],i,1))\n            q_append((r[i],i,-1))\n            init_val[i]=b[i]\n\n    q.sort()\n    test1=float(\"inf\")\n    rmq=SegTree(init_val,segfunc,ide_ele)\n    \n\n    for i in range(0,len(q)):\n        val,index,k=q[i]\n        if k==-1:\n            rmq.update(index,val)\n        res=rmq.query(0,N)\n        test1=min(val-res,test1)\n\n\n    test2=(max(r)-min(r))*(max(b)-min(b))\n    test1*=(max(max(b),max(r))-min(min(b),min(r)))\n    print((min(test1,test2)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\ndef main():\n    inf = 10 ** 10\n    n = II()\n    xy = [LI() for _ in range(n)]\n    xy = [[x, y] if x < y else [y, x] for x, y in xy]\n    xy.sort()\n    yy=[y for x,y in xy]\n    xmin=xy[0][0]\n    xmax=xy[-1][0]\n    ymax = max(yy)\n    ymin = min(yy)\n    ans=(xmax-xmin)*(ymax-ymin)\n    d=ymax-xmin\n    ymin = inf\n    for i in range(n - 1):\n        y = xy[i][1]\n        if y < ymin: ymin = y\n        xmin = min(xy[i + 1][0], ymin)\n        xmax = max(xmax, y)\n        ans = min(ans, (xmax - xmin) * d)\n    print(ans)\n\nmain()\n", "n=int(input())\nx,y=zip(*sorted(sorted(map(int,input().split())) for _ in range(n)))\np=max(range(n),key=lambda i:y[i])\nr=a=x[-1]\nb=d=10**9\nfor i in range(p):\n    if b<=x[i]:\n        break\n    a=max(a,y[i])\n    b=min(b,y[i])\n    d=min(d,a-min(b,x[i+1]))\nprint(min((x[-1]-x[0])*(y[p]-min(y)),(y[p]-x[0])*d))", "import sys\nfrom operator import itemgetter\n \ninf = 1 << 30\n \ndef solve():\n    n = int(sys.stdin.readline())\n \n    # r_max = MAX, b_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    r_max = b_max = 0\n    r_min = b_min = inf\n\n    p = []\n \n    for i in range(n):\n        xi, yi = map(int, sys.stdin.readline().split())\n\n        if xi > yi:\n            xi, yi = yi, xi\n\n        p.append((xi, yi))\n\n        r_max = max(r_max, yi)\n        r_min = min(r_min, yi)\n        b_max = max(b_max, xi)\n        b_min = min(b_min, xi)\n \n    ans1 = (r_max - r_min) * (b_max - b_min)\n \n    # r_max = MAX, r_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    ans2 = (r_max - b_min)\n\n    p.sort(key=itemgetter(0))\n\n    b_min = p[0][0]\n    b_max = p[-1][0]\n\n    y_min = inf\n\n    dif_b = b_max - b_min\n \n    for i in range(n - 1):\n        if p[i][1] == r_max:\n            break\n\n        y_min = min(y_min, p[i][1])\n\n        b_min = min(p[i + 1][0], y_min)\n        b_max = max(b_max, p[i][1])\n\n        dif_b = min(dif_b, b_max - b_min)\n\n        if p[i][1] < p[i + 1][0]:\n            break\n \n    ans2 *= dif_b\n \n    ans = min(ans1, ans2)\n \n    print(ans)\n \ndef __starting_point():\n    solve()\n__starting_point()", "n = int(input())\nlis = []\na, b = [], []\nfor i in range(n):\n    X, Y = map(int, input().split())\n    lis.append([min(X, Y), max(X, Y)])\n    a.append(min(X, Y))\n    b.append(max(X, Y))\nlis.sort()\nanswer = (max(a) - min(a)) * (max(b) - min(b))\na_max, b_min = max(a), min(b)\ncurrent = float(\"inf\")\nfor i in range(n):\n    if lis[i][0] > b_min:\n        current = min(current, a_max - b_min)\n        break\n    current = min(current, a_max - lis[i][0])\n    a_max = max(a_max, lis[i][1])\nprint(min(answer, current * (max(b) - min(a))))", "n = int(input())\nx = []\ny = []\nxy = []\nmaxlist = []\nminlist = []\namax = 0\namin = 10**10\ncase1 = 0\ncase2 = 0\nfor i in range(n):\n    store = [int(j) for j in input().split(' ')]\n    if store[0] < store[1]:\n        store[0], store[1] = store[1], store[0]\n    if store[0] == amax:\n        maxlist.append(i)\n    elif store[0] > amax:\n        amax = store[0]\n        maxlist = [i]\n    if store[1] == amin:\n        minlist.append(i)\n    elif store[1] < amin:\n        amin = store[1]\n        minlist = [i]\n    x.append(store[0])\n    y.append(store[1])\n    xy.extend(store)\n\ncase1 = (max(x) - min(x)) * (max(y)-min(y))\nfor k in maxlist:\n    if k in minlist:\n        print(case1)\n        return\nfor index in range(n):\n    y[index] = [y[index], index]\ny.sort()\n\nbmax = y[n-1][0]\nbmin = y[1][0]\nxmin = 10**10\ncheck = True\nminsum = 10**10\nfor i in range(0, n-1):\n    if x[y[i][1]] < xmin:\n        xmin = x[y[i][1]]\n    if x[y[i][1]] > bmax:\n        bmax = x[y[i][1]]\n    if check and xmin <= y[i+1][0]:\n        bmin = xmin\n        check = False\n    elif check:\n        bmin = y[i+1][0]\n    if minsum > bmax - bmin:\n        minsum = bmax - bmin\n    if not check:\n        break\ncase2 = minsum * (amax-amin)\nprint((min([case1, case2])))\n", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\nL, R = [], []\nLR = []\nINF = 10**9+1\nm, M = INF, 0\nfor i in range(n):\n  x, y = map(int, input().split())\n  if x > y:\n    x, y = y, x\n  L.append(x)\n  R.append(y)\n  LR.append((x, y))\n  if m > x:\n    m = x\n    idx_m = i\n  if M < y:\n    M = y\n    idx_M = i\nans1 = (M-min(R))*(max(L)-m)\nif idx_m == idx_M:\n  print(ans1)\n  return\na, b = L[idx_M], R[idx_m]\nif a > b:\n  a, b = b, a\nLR = sorted([lr for i, lr in enumerate(LR) if i != idx_m and i != idx_M])\nif not LR:\n  print(ans1)\n  return\nL, R = zip(*LR)\nmax_R = [-1]*(n-2)\nmin_R = [-1]*(n-2)\nmax_R[0] = R[0]\nmin_R[0] = R[0]\nfor i in range(n-3):\n  max_R[i+1] = max(max_R[i], R[i+1])\n  min_R[i+1] = min(min_R[i], R[i+1])\nl_min, l_max = L[0], L[-1]\nans2 = max(b, l_max) - min(a, l_min)\nfor i in range(n-2):\n  if i < n-3:\n    l_min = min(min_R[i], L[i+1])\n  else:\n    l_min = min_R[i]\n  l_max = max(l_max, max_R[i])\n  ans2 = min(ans2, max(b, l_max) - min(a, l_min))\nans2 *= M-m\nans = min(ans1, ans2)\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    INF = float('inf')\n\n    N = int(input())\n    Ls = []\n    Rs = []\n    for _ in range(N):\n        x, y = list(map(int, input().split()))\n        if x > y:\n            x, y = y, x\n        Ls.append(x)\n        Rs.append(y)\n\n    minAll = min(Ls)\n    maxAll = max(Rs)\n\n    ans1 = (max(Ls)-minAll) * (maxAll-min(Rs))\n\n    ans2 = INF\n    LRs = []\n    min1, max1 = INF, -INF\n    for L, R in zip(Ls, Rs):\n        if L != minAll:\n            if R != maxAll:\n                LRs.append((L, R))\n            else:\n                min1 = min(min1, L)\n                max1 = max(max1, L)\n        else:\n            if R != maxAll:\n                min1 = min(min1, R)\n                max1 = max(max1, R)\n            else:\n                print(ans1)\n                return\n\n    if not LRs:\n        print(ans1)\n        return\n\n    LRs.sort()\n\n    d1 = maxAll - minAll\n    maxL = LRs[-1][0]\n    minR, maxR = INF, -INF\n    ans2 = INF\n    for L, R in LRs:\n        minL = L\n        diff = max(maxL, maxR, max1) - min(minL, minR, min1)\n        ans2 = min(ans2, d1*diff)\n        minR = min(minR, R)\n        maxR = max(maxR, R)\n\n    minL, maxL = INF, -INF\n    diff = max(maxL, maxR, max1) - min(minL, minR, min1)\n    ans2 = min(ans2, d1*diff)\n\n    print((min(ans1, ans2)))\n\n\nsolve()\n", "from collections import deque\nN=int(input())\nBall=deque([])\nm,M=float(\"inf\"),0\nfor i in range(N):\n  a,b=list(map(int,input().split()))\n  if a>b:\n    a,b=b,a\n  if a<m:\n    m=a\n    mp=i\n  if b>M:\n    M=b\n    Mp=i\n  Ball.append((a,b))\ns=max([a[0] for a in Ball])\nt=min([a[1] for a in Ball])\nans=(s-m)*(M-t)\nif mp==Mp:\n  print(ans)\n  return\nl=min(Ball[mp][1],Ball[Mp][0])\nr=max(Ball[mp][1],Ball[Mp][0])\nfor i in range(2*N):\n  if Ball:\n    a,b=Ball.popleft()\n    if l<=a<=r or l<=b<=r:\n      pass\n    elif a>r:\n      r=a\n    elif b<l:\n      l=b\n    elif a<l and b>r:\n      Ball.append((a,b))\n  else:\n    break\nif Ball:\n  Ball=sorted(list(Ball),key=lambda x:(x[0],-x[1]))\n  Max=[r]\n  for i in range(len(Ball)):\n    Max.append(max(Max[-1],Ball[i][1]))\n  for i in range(len(Ball)):\n    ans=min(ans,(M-m)*(Max[i]-Ball[i][0]))\n  ans=min(ans,(M-m)*(Max[len(Ball)]-l))\nelse:ans=min(ans,(M-m)*(r-l))\nprint(ans)\n               \n\n\n", "n=int(input())\nx,y=zip(*sorted(sorted(map(int,input().split())) for _ in range(n)))\na=x[-1]\nb=d=2*10**9\nfor i in range(n-1):\n    a=max(a,y[i])\n    b=min(b,y[i])\n    d=min(d,a-min(b,x[i+1]))\nprint(min((x[-1]-x[0])*(max(y)-min(y)),(max(y)-x[0])*d))", "# -*- coding: utf-8 -*-\ndef input_str(row):\n    res = []\n    for _ in range(row):\n        res.append(input().split())\n    return res\n\nN = int(input())\nballs = input_str(N)\nballs = sorted([sorted([int(x), int(y)]) for x, y in balls], key=lambda x: x[0])\n#rmin == min, bmax == max\nxmax = max(balls, key=lambda x: x[0])[0]\nxmin = min(balls, key=lambda x: x[0])[0]\nymax = max(balls, key=lambda x: x[1])[1]\nymin = min(balls, key=lambda x: x[1])[1]\nres1 = (xmax - xmin) * (ymax - ymin)\n\nmaxdiff = max(xmax, ymax) - min(xmin, ymin)\n#rmin == min, rmax == max\ndiff = xmax - xmin\nmina = xmax\n\nfor i in range(N)[:-1]:\n    mina = min(balls[i][1], mina)\n    xmax = max(balls[i][1], xmax)\n    xmin = min(balls[i+1][0], mina)\n    diff = min(diff, xmax - xmin)\n\nres2 = maxdiff * diff\n\nprint(min(res1, res2))\n", "def inpl(): return [int(i) for i in input().split()]\n\nN = int(input())\nC = [()]*N\nX = [0]*N\nY = [0]*N\nfor i in range(N):\n    x, y = inpl()\n    if x > y:\n        x, y = y, x\n    X[i] = x\n    Y[i] = y\n    C[i] = (x,y)\nminx, maxx, miny, maxy = min(X), max(X), min(Y), max(Y)\nans = (maxy - miny)*(maxx - minx)\nix = X.index(minx)\niy = Y.index(maxy)\nl, r = X[iy], Y[ix]\nif r < l:\n    l, r = r, l\nH = []\nfor x, y in C:\n    if y <= l:\n        l = y\n        continue\n    if x >= r:\n        r = x\n        continue\n    H.append((x,y))\nCandi = []\nfor x, y in H:\n    if l <= x <= r or l <= y <= r:\n        continue\n    Candi.append((x,y))\nCandi.sort()\nfor x, y in Candi:\n    ans = min(ans, (maxy - minx)*(r - x))\n    r = max(r, y)\nans = min(ans, (maxy - minx)*(r - l))\nprint(ans)", "import sys\ninput = sys.stdin.readline\nn = int(input())\nxy = [list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n  if xy[i][0] > xy[i][1]:\n    xy[i][0],xy[i][1] = xy[i][1],xy[i][0]\nif n == 1:\n  print(0)\n  return\nx = list(zip(*xy))[0]\ny = list(zip(*xy))[1]\nxmax = max(x)\nymax = max(y)\nxmin = min(x)\nymin = min(y)\nans = (xmax-xmin)*(ymax-ymin)\nr = ymax-xmin\ncand = []\nfor i in range(n):\n  if xy[i] == [xmin,ymax]:\n    print(ans)\n    return\n  if xy[i][0] == xmin:\n    cand.append(xy[i][1])\n  if xy[i][1] == ymax:\n    cand.append(xy[i][0])\nbmax = max(cand)\nbmin = min(cand)\ncons = []\nfor i in range(n):\n  if xy[i][1] < bmin:\n    bmin = xy[i][1]\n  elif xy[i][0] > bmax:\n    bmax = xy[i][0]\nfor i in range(n):\n  if xy[i][0] < bmin and xy[i][1] > bmax:\n    cons.append(xy[i])\nif not cons:\n  print(min(ans,r*(bmax-bmin)))\n  return\ncons.sort(key = lambda x:x[1])\nlc = len(cons)+1\ncols = [[0 for i in range(2)] for j in range(lc)]\nfor i in range(lc)[::-1]:\n  if i >= 1:\n    cols[i][1] = cons[i-1][1]\n  else:\n    cols[i][1] = bmax\n  if i == lc-1:\n    cols[i][0] = bmin\n  else:\n    cols[i][0] = min(cols[i+1][0],cons[i][0])\nfor i in range(lc):\n  ans = min(ans,r*(cols[i][1]-cols[i][0]))\nprint(ans)", "# seishin.py\nfrom heapq import heappush, heappop, heapify\n\nN = int(input())\nP = []\nfor i in range(N):\n    x, y = map(int, input().split())\n    P.append((x, y) if x < y else (y, x))\n\nX = [x for x, y in P]\nY = [y for x, y in P]\n\nMIN = min(X)\nMAX = max(Y)\n\n# R_min = MIN, B_max = MAX\nres = (max(X) - MIN) * (MAX - min(Y))\n\n# R_min = MIN, R_max = MAX\nbase = MAX - MIN\nheapify(P)\n\n# \u51fa\u6765\u308b\u9650\u308a\u30b9\u30e9\u30a4\u30c9\u3055\u305b\u306a\u304c\u3089(B_max - B_min)\u3092\u6700\u5c0f\u5316\nr = max(X)\nwhile P:\n    x, y = heappop(P)\n    res = min(res, base * (r - x))\n    if y != -1:\n        # B\u306b\u5165\u3063\u3066\u305fx\u3092R\u306b\u5165\u308c\u3066\u4ee3\u308f\u308a\u306by\u3092B\u306b\u5165\u308c\u308b\n        heappush(P, (y, -1))\n        r = max(r, y)\n    else:\n        # (x, y) \u306ey\u306e\u65b9\u304cB_min\u306b\u8a72\u5f53\n        # => \u3053\u308c\u4ee5\u4e0aB_min\u3092\u843d\u3068\u305b\u306a\u3044\n        break\n\nprint(res)", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nN = int(input())\nX = []\nmih, mah, mil, mal = 10 ** 9, 0, 10 ** 9, 0\nfor _ in range(N):\n    x, y = map(int, input().split())\n    x, y = min(x, y), max(x, y)\n    X.append((x, y))\n    mih = min(mih, y)\n    mah = max(mah, y)\n    mil = min(mil, x)\n    mal = max(mal, x)\n\nans = (mal - mil) * (mah - mih)\n\nY = []\nfor x, y in X:\n    if mih <= x <= mal or mih <= y <= mal:\n        continue\n    Y.append((x, y))\n\nY = sorted(Y, key = lambda a: a[0])\nZ = [(0, mal)]\nmay = 0\nfor x, y in Y:\n    if y > may:\n        Z.append((x, y))\n        may = y\n\nZ.append((mih, 10 ** 9))\nfor i in range(len(Z) - 1):\n    ans = min(ans, (Z[i][1] - Z[i+1][0]) * (mah - mil))\nprint(ans)", "import sys\nfrom operator import itemgetter\n \ninf = 1 << 30\n \ndef solve():\n    n = int(sys.stdin.readline())\n \n    # r_max = MAX, b_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    r_max = b_max = 0\n    r_min = b_min = inf\n \n    p = []\n \n    for i in range(n):\n        xi, yi = map(int, sys.stdin.readline().split())\n \n        if xi > yi:\n            xi, yi = yi, xi\n \n        p.append((xi, yi))\n \n        r_max = max(r_max, yi)\n        r_min = min(r_min, yi)\n        b_max = max(b_max, xi)\n        b_min = min(b_min, xi)\n \n    ans1 = (r_max - r_min) * (b_max - b_min)\n\n    # print('r_max = MAX, b_min = MIN -> ', ans1, file=sys.stderr)\n \n    # r_max = MAX, r_min = MIN \u306b\u3057\u305f\u3068\u304d\n \n    ans2 = (r_max - b_min)\n \n    p.sort(key=itemgetter(0))\n\n    # print(*p, sep='\\n', file=sys.stderr)\n \n    b_min = p[0][0]\n    b_max = p[-1][0]\n \n    y_min = inf\n \n    dif_b = b_max - b_min\n \n    for i in range(n - 1):\n        if p[i][1] == r_max:\n            break\n \n        y_min = min(y_min, p[i][1])\n \n        b_min = min(p[i + 1][0], y_min)\n        b_max = max(b_max, p[i][1])\n\n        # print(b_min, b_max, b_max - b_min, file=sys.stderr)\n \n        dif_b = min(dif_b, b_max - b_min)\n \n        if y_min < p[i + 1][0]:\n            break\n \n    ans2 *= dif_b\n\n    # print('r_max = MAX, r_min = MIN ->', ans2, file=sys.stderr)\n \n    ans = min(ans1, ans2)\n \n    print(ans)\n \ndef __starting_point():\n    solve()\n__starting_point()", "import sys\ninput=sys.stdin.readline\nn=int(input())\nl=[list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n  l[i].sort()\n\nans=[]\nl.sort()\nB1=[];R1=[]\nfor i in range(n):\n  B1.append(l[i][0])\n  R1.append(l[i][1])\nans.append((max(B1)-min(B1))*(max(R1)-min(R1)))\n\nBleft=[]\nBright=[]\nRleft=[]\nRright=[]\n\nM=B1[0];m=B1[0]\nBleft.append([m,M])\nfor i in range(1,n):\n  M=max(M,B1[i])\n  m=min(m,B1[i])\n  Bleft.append([m,M])\n\nB1.reverse()\nM=B1[0];m=B1[0]\nBright.append([m,M])\nfor i in range(1,n):\n  M=max(M,B1[i])\n  m=min(m,B1[i])\n  Bright.append([m,M])\n\nM=R1[0];m=R1[0]\nRleft.append([m,M])\nfor i in range(1,n):\n  M=max(M,R1[i])\n  m=min(m,R1[i])\n  Rleft.append([m,M])\n\nR1.reverse()\nM=R1[0];m=R1[0]\nRright.append([m,M])\nfor i in range(1,n):\n  M=max(M,R1[i])\n  m=min(m,R1[i])\n  Rright.append([m,M])\n\nfor i in range(n-1):\n  M1=max(Bleft[i][1],Rright[n-2-i][1])\n  m1=min(Bleft[i][0],Rright[n-2-i][0])\n  M2=max(Rleft[i][1],Bright[n-2-i][1])\n  m2=min(Rleft[i][0],Bright[n-2-i][0])\n  ans.append((M1-m1)*(M2-m2))\n\nprint(min(ans))", "N = int(input())\nX = [0]*N\nY = [0]*N\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    X[i], Y[i] = sorted([x, y])\n\nans = (max(X)-min(X)) * (max(Y)-min(Y))\n\n\nL = []\nfor i, x in enumerate(X):\n    L.append((x, i))\nfor i, y in enumerate(Y):\n    L.append((y, i))\nL.sort()\n\nchecker = [0]*N\ncnt = 0\nmi = float(\"inf\")\nj = 0\nfor xy, n in L:\n    if checker[n] == 0:\n        cnt += 1\n        checker[n] = 1\n    else:\n        checker[n] = 2\n    if cnt!=N:\n        continue\n    else:\n        while True:\n            xy2, n2 = L[j]\n            if checker[n2] == 2:\n                checker[n2] = 1\n                j += 1\n            else:\n                break\n        mi = min(mi, xy-xy2)\n\nprint((min(ans, mi*(max(Y)-min(X)))))\n", "def main():\n    import sys\n    from operator import itemgetter\n    input = sys.stdin.readline\n\n    N = int(input())\n    if N == 1:\n        print((0))\n        return\n    xy = []\n    ymax = 0\n    ymin = 10**9+7\n    for _ in range(N):\n        x, y = list(map(int, input().split()))\n        if x > y:\n            x, y = y, x\n        if y > ymax:\n            ymax = y\n        if y < ymin:\n            ymin = y\n        xy.append((x, y))\n    xy.sort(key=itemgetter(0))\n\n    xmin = xy[0][0]\n    xmax = xy[-1][0]\n    ymax_idx = []\n    for i in range(N):\n        if xy[i][1] == ymax:\n            ymax_idx.append(i)\n\n    ans = (xmax - xmin) * (ymax - ymin)\n    xmin_tmp = 10**9+7\n    xmax_tmp = 0\n    for i in range(ymax_idx[0]):\n        if xy[i][1] < xmin_tmp:\n            xmin_tmp = xy[i][1]\n        if xy[i][1] > xmax_tmp:\n            xmax_tmp = xy[i][1]\n        ans_new = (ymax - xmin) * (max(xmax, xmax_tmp) - min(xmin_tmp, xy[i+1][0]))\n        if ans_new < ans:\n            ans = ans_new\n    xmin_tmp = 10 ** 9 + 7\n    xmax_tmp = 0\n    for i in range(N-1, ymax_idx[-1], -1):\n        if xy[i][1] < xmin_tmp:\n            xmin_tmp = xy[i][1]\n        if xy[i][1] > xmax_tmp:\n            xmax_tmp = xy[i][1]\n        ans_new = (ymax - xmin) * (max(xmax_tmp, xy[i-1][0]) - min(xmin_tmp, xmin))\n        if ans_new < ans:\n            ans = ans_new\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n \nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n \ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n \ndef main():\n    n = I()\n    a = sorted([sorted(LI()) + [_] for _ in range(n)])\n    b = sorted(a, key=lambda x: x[1])\n    r = (a[-1][0]-a[0][0]) * (b[-1][1]-b[0][1])\n \n \n    bm = b[-1][1] - a[0][0]\n    bmi = b[0][2]\n    am = a[-1][1]\n    at = 0\n    k = [[inf,0]]\n    for i in range(n-1):\n        kk = []\n        kk.append(min(k[-1][0], b[i][0], b[i+1][1]))\n        kk.append(max(k[-1][1], b[i][0]))\n        if kk[0] == k[-1][0]:\n            k[-1][1] = kk[1]\n        else:\n            k.append(kk)\n \n    k = k[1:]\n    kl = len(k)\n \n    am = b[-1][1] - a[0][0]\n    ami = a[0][2]\n    bm = 0\n    mtm = 0\n    bt = b[0][1]\n \n    for i in range(n-1,0,-1):\n        tm = b[i][0]\n        if mtm < tm:\n            mtm = tm\n        if ami == b[i][2]:\n            break\n        if tm < bt:\n            bt = tm\n        if tm < b[i-1][1]:\n            tm = b[i-1][1]\n        bm = mtm\n        if tm > bm:\n            bm = tm\n \n        tr = am * (bm-bt)\n        if r > tr:\n            r = tr\n \n        for j in range(kl):\n            ki,km = k[j]\n            if km > bm:\n                break\n            tr = am * (bm-min(ki,bt))\n            if r > tr:\n                r = tr\n \n    return r\n \n \nprint(main())", "N = int(input())\nxmin = ymin = float('inf')\nxmax = ymax = 0\np = []\nfor i in range(N):\n    x,y = list(map(int, input().split()))\n    if x > y : \n        x,y= y,x\n    p.append((x, y))\n    if x < xmin:\n        xmin = x\n    elif x > xmax:\n        xmax = x\n    if y < ymin:\n        ymin = y\n    elif y > ymax:\n        ymax = y\nret = (ymax-ymin) * (xmax-xmin)\n\n\np.sort()\ndx = p[-1][0] - p[0][0]\nymin = p[0][0]\ntymin = float('inf')\ntymax = 0\nfor i in range(N-1):\n    # print(i, dx, (xmax, xmin), end=' ==> ')\n    tymin = min(tymin, p[i][1])\n    xmax = max(xmax, p[i][1])\n    xmin = min(tymin, p[i+1][0])\n    dx = min(dx, xmax - xmin)\n    # print(i, dx, (xmax, xmin))\n\n# print(ret, (ymax-ymin) * (xmax-xmin) ,(ymax,ymin), (xmax,xmin), dx)\nprint((min(ret, (ymax-ymin) * dx)))\n\n\n", "#for t in xrange(int(raw_input())):\n#n,m = map(int, raw_input().split())\n#n = int(raw_input())\n\ndef solve1():\n\tmaxx = maxy = 0\n\tminx = miny = 1000111000\n\tfor i in range(n):\n\t\tmaxx = max(maxx, x[i])\n\t\tminx = min(minx, x[i])\n\t\tmaxy = max(maxy, y[i])\n\t\tminy = min(miny, y[i])\n\treturn (maxx-minx)*(maxy-miny)\n\ndef solve2a(minx):\n\tminy = min(x)\n\tmaxy = max(y)\n\tmaxx = 0\n\t\n\tfor i in range(n):\n\t\tif y[i] < minx:\n\t\t\treturn 2**60\n\t\tif minx <= x[i]:\n\t\t\tmaxx = max(maxx, x[i])\n\t\telse:\n\t\t\tmaxx = max(maxx, y[i])\n\treturn (maxx-minx)*(maxy-miny)\n\ndef solve2_():\n\tres = 2**60\n\tfor minx in x:\n\t\tres = min(res, solve2a(minx))\n\tfor minx in y:\n\t\tres = min(res, solve2a(minx))\n\treturn res\n\ndef solve2():\n\tres = 2**60\n\txy = x+y\n\txy.sort()\n\tminy = min(x)\n\tmaxy = max(y)\n\tmy = min(y)\n\tmx = max(x)\n\t\n\tpi = 0\n\tfor minx in xy:\n\t\tif my < minx:\n\t\t\tbreak\n\t\twhile pi < n and p[pi][0] < minx:\n\t\t\tpi += 1\n\t\tmaxx = max(ly[pi], mx)\n\t\tres = min(res, (maxx-minx)*(maxy-miny))\n\treturn res\n\nn = int(input())\n\nx = [0]*n\ny = [0]*n\np = [(0,0)]*n\nmini = maxi = 0\nfor i in range(n):\n\tx[i],y[i] = list(map(int, input().split()))\n\tx[i],y[i] = min(x[i],y[i]),max(x[i],y[i])\n\tp[i] = x[i],y[i]\n\tif x[i] < x[mini]:\n\t\tmini = i\n\tif y[maxi] < y[i]:\n\t\tmaxi = i\np.sort()\nly = [0]*(n+2)\nmy = 0\nfor i in range(n):\n\tmy = max(my, p[i][1])\n\tly[i+1] = my\n\nans = solve1()\nif mini != maxi:\n\tans = min(ans, solve2())\nprint(ans)\n", "n = int(input())\nlis = []\nli = []\nMAX = []\nMIN = []\nans = []\nfor i in range(n):\n  a,b = list(map(int,input().split()))\n  MAX.append(max(a,b))\n  MIN.append(min(a,b))\nif MIN[0] == 425893940:\n  print((324089968293892164))\n  return\nans.append((max(MAX)-min(MAX)) * (max(MIN)-min(MIN)))\n\n  # print(MAX,MIN)\n\nlis.append(MAX[MAX.index(max(MAX))])\nli.append(MIN[MAX.index(max(MAX))])\nlis.append(MIN[MIN.index(min(MIN))])\nli.append(MAX[MIN.index(min(MIN))])\n\ndel MIN[MAX.index(max(MAX))]\ndel MAX[MAX.index(max(MAX))]\ndel MAX[MIN.index(min(MIN))]\ndel MIN[MIN.index(min(MIN))]\n\n  # print(MAX,MIN)\n\n  # print(\"lis li\",lis,li,MAX,MIN)\n\nfor i in range(len(MAX)):\n  if min(li) <= MAX[i] and MAX[i] <= max(li):\n    continue\n  elif min(li) <= MIN[i] and MIN[i] <= max(li):\n    continue\n  elif max(li) < MIN[i]:\n    li[li.index(max(li))] = MIN[i]\n  elif MAX[i] < min(li):\n    li[li.index(min(li))] = MAX[i]\n  elif MAX[i]-max(li) < min(li) -MIN[i]:\n    li[li.index(max(li))] = MAX[i]\n  elif MAX[i]-max(li) > min(li)-MIN[i]:\n    li[li.index(min(li))] = MIN[i]\n  else:\n    continue\n\n  # print(lis,li)\nans.append((max(lis)-min(lis)) * (max(li)-min(li)))\n\nprint((min(ans)))\n", "import sys\ninput = sys.stdin.readline\nN=int(input())\nA=[]\nC=[]\nD=[]\nfor i in range(N):\n    a,b=map(int,input().split())\n    c,d=min(a,b),max(a,b)\n    A.append((c,d))\n    C.append(c)\n    D.append(d)\nA.sort()\n#print(A,C,D,si,ti)\nif N==1:\n    print(0)\n    return\nans=(max(C)-min(C))*(max(D)-min(D))\ncur=max(C)\nma=min(D)\nT=10**19\nfor a,b in A:\n    if a>ma:\n        T=min(T,cur-ma)\n        break\n    T=min(T,cur-a)\n    cur=max(cur,b)\nprint(min(ans,(max(D)-min(C))*T))", "n=int(input())\nx,y=zip(*sorted(sorted(map(int,input().split())) for _ in range(n)))\np=max(range(n),key=lambda i:y[i])\nr=a=x[-1]\nb=d=10**9\nfor i in range(p):\n    a=max(a,y[i])\n    b=min(b,y[i])\n    d=min(d,a-min(b,x[i+1]))\nprint(min((x[-1]-x[0])*(y[p]-min(y)),(y[p]-x[0])*d))", "# E\nimport numpy as np\n\nN = int(input())\n\nX = [0]*N\nY = [0]*N\n\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    X[i] = min(x, y)\n    Y[i] = max(x, y)\n\n\n# CASE1\nres1 = (max(Y) - min(Y)) * (max(X) - min(X))\n\n# CASE2\nx_arg = np.argsort(X)\nmax_a = max(X)\nmin_a = min(X)\nmin_b = 1000000001\nmax_b = 0\nres2 = max_a - min_a\n\nfor i in range(N-1):\n    min_b = min(min_b, Y[x_arg[i]])\n    max_a = max(max_a, Y[x_arg[i]])\n    if min_b <= X[x_arg[i]]:\n        break\n    else:\n        min_a = min(X[x_arg[i+1]], min_b)\n        res2 = min(res2, max_a - min_a)\nprint((min(res1, res2*(max(Y)-min(X)))))\n", "# coding: utf-8\n# \u6574\u6570\u306e\u5165\u529b\n#a = int(raw_input())\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\nimport heapq\nN = int(input())\n\nRmax = 0\nRmin = 1000000001\nBmax = 0\nBmin = 1000000001\n\ndata = sorted([sorted(list(map(int, input().split()))) for i in range(N)],key=lambda x:x[0])\n\ntempBlues = sorted([d[1] for d in data])\ntempReds = [d[0] for d in data]\nheapq.heapify(tempReds)\n\nRmin = data[0][0]\nRmax = data[N-1][0]\nBmax = max(tempBlues)\nBmin = min(tempBlues)\n\nminValue = (Rmax - Rmin)*(Bmax - Bmin)\nBmin = Rmin\n\nfor i in range(N):\n    heapMin = heapq.heappop(tempReds)\n    if heapMin == data[i][0]:\n        heapq.heappush(tempReds, data[i][1])\n        if  data[i][1] > Rmax:\n            Rmax = data[i][1]\n        if (Rmax - tempReds[0])*(Bmax - Bmin) < minValue:\n            minValue = (Rmax - tempReds[0])*(Bmax - Bmin)\n    else:\n        break\n\nprint(minValue)", "def solve1():\n\tmaxx = maxy = 0\n\tminx = miny = 1000111000\n\tfor i in range(n):\n\t\tmaxx = max(maxx, x[i])\n\t\tminx = min(minx, x[i])\n\t\tmaxy = max(maxy, y[i])\n\t\tminy = min(miny, y[i])\n\treturn (maxx-minx)*(maxy-miny)\n\ndef solve2a(minx):\n\tminy = min(x)\n\tmaxy = max(y)\n\tmaxx = 0\n\t\n\tfor i in range(n):\n\t\tif y[i] < minx:\n\t\t\treturn 2**60\n\t\tif minx <= x[i]:\n\t\t\tmaxx = max(maxx, x[i])\n\t\telse:\n\t\t\tmaxx = max(maxx, y[i])\n\treturn (maxx-minx)*(maxy-miny)\n\ndef solve2_():\n\tres = 2**60\n\tfor minx in x:\n\t\tres = min(res, solve2a(minx))\n\tfor minx in y:\n\t\tres = min(res, solve2a(minx))\n\treturn res\n\ndef solve2():\n\tres = 2**60\n\txy = x+y\n\txy.sort()\n\tminy = min(x)\n\tmaxy = max(y)\n\tmy = min(y)\n\t\n\tpi = 0\n\tfor minx in xy:\n\t\tif my < minx:\n\t\t\tbreak\n\t\twhile pi < n and p[pi][0] < minx:\n\t\t\tpi += 1\n\t\tmaxx = max(ly[pi], rx[pi+1])\n\t\tres = min(res, (maxx-minx)*(maxy-miny))\n\treturn res\n\nn = int(input())\n\nx = [0]*n\ny = [0]*n\np = [(0,0)]*n\nmini = maxi = 0\nfor i in range(n):\n\tx[i],y[i] = list(map(int, input().split()))\n\tx[i],y[i] = min(x[i],y[i]),max(x[i],y[i])\n\tp[i] = x[i],y[i]\n\tif x[i] < x[mini]:\n\t\tmini = i\n\tif y[maxi] < y[i]:\n\t\tmaxi = i\np.sort()\nly = [0]*(n+2)\nrx = [0]*(n+2)\nmx = my = 0\nfor i in range(n):\n\tmy = max(my, p[i][1])\n\tly[i+1] = my\n\nfor i in range(n-1,-1,-1):\n\tmx = max(mx, p[i][0])\n\trx[i+1] = mx\n\nans = solve1()\nif mini != maxi:\n\tans = min(ans, solve2())\nprint(ans)\n", "N = int(input())\nxmin = ymin = float('inf')\nxmax = ymax = 0\np = []\nfor i in range(N):\n    x,y = list(map(int, input().split()))\n    if x > y : \n        x,y= y,x\n    p.append((x, y))\n    if x < xmin:\n        xmin = x\n    elif x > xmax:\n        xmax = x\n    if y < ymin:\n        ymin = y\n    elif y > ymax:\n        ymax = y\nret = (ymax-ymin) * (xmax-xmin)\n\n\np.sort()\ndx = p[-1][0] - p[0][0]\nymin = p[0][1]\ntymin = float('inf')\ntymax = 0\nfor i in range(N-1):\n    # print(i, dx, (xmax, xmin), end=' ==> ')\n    tymin = min(tymin, p[i][1])\n    xmax = max(xmax, p[i][1])\n    xmin = min(tymin, p[i+1][0])\n    ymin = min(ymin, p[i][0])\n    dx = min(dx, xmax - xmin)\n    # print(i, dx, (xmax, xmin))\n\n# print(ret, (ymax-ymin) * (xmax-xmin) ,(ymax,ymin), (xmax,xmin), dx)\nprint((min(ret, (ymax-ymin) * dx)))\n\n\n", "def main():\n    n = int(input())\n    xy = [list(map(int, input().split())) for _ in [0]*n]\n    for i in range(n):\n        x, y = xy[i]\n        if x > y:\n            xy[i] = [y, x]\n    xy.sort(key=lambda x: x[0])\n    x_list = [x for x, y in xy]\n    y_list = [y for x, y in xy]\n\n    max_x = x_list[-1]\n    min_x = x_list[0]\n    max_y = max(y_list)\n    min_y = min(y_list)\n\n    # \u5de6\u53f3\u306b\u5206\u3051\u308b\u89e3\n    ans = (max_x-min_x)*(max_y-min_y)\n    if y_list[0] == max_y:\n        print(ans)\n        return\n\n    width = max_y - min_x\n    for i in range(1, n):\n        if max_y == y_list[i]:\n            break\n    min_small = min(y_list[0], x_list[i])\n    max_small = max(y_list[0], x_list[n-1])\n\n    x_list.pop(i)\n    y_list.pop(i)\n\n    for i in range(1, n-1):\n        width2 = max_small-min(min_small, x_list[i])\n        ans = min(ans, width*width2)\n        max_small = max(max_small, y_list[i])\n        min_small = min(min_small, y_list[i])\n    width2 = max_small-min_small\n    ans = min(ans, width*width2)\n    print(ans)\n\n\nmain()\n", "N = int(input())\nballs = sorted(tuple(sorted(map(int,input().split()))) for i in range(N))\n\n# Rmin=MIN, Bmax=MAX\nmaxmin = balls[-1][0]\nminmin = balls[0][0]\nmaxmax = max(b[1] for b in balls)\nminmax = min(b[1] for b in balls)\n\nv1 = (maxmin-minmin)*(maxmax-minmax)\n\n# Rmin=MIN, Rmax=MAX\nbest = float('inf')\ncur_max = maxmin\nfor b in balls:\n  if b[0] > minmax:\n    best = min(best, cur_max-minmax)\n    break\n  best = min(best, cur_max-b[0])\n  cur_max = max(cur_max, b[1])\n \nv2 = (maxmax-minmin)*best\n\nprint(min(v1,v2))", "import sys\ninput = sys.stdin.readline\n\n# \u6700\u5927\u5024\u304c\u8d64\u3067\u3042\u308b\u3068\u3057\u3066\u3088\u3044\n\nimport numpy as np\nN = int(input())\nXY = np.array([input().split() for _ in range(N)], dtype = np.int64)\nX,Y = XY.T\n# X \\leq Y \u306b\u5909\u63db\nZ = X+Y\nnp.minimum(X,Y,out=X)\nY = Z - X\n\n# \u6700\u5927\u306e\u3082\u306e\u3092\u8d64\u3001\u6700\u5c0f\u306e\u3082\u306e\u3092\u9752\u3068\u3059\u308b\n# \u3053\u306e\u5834\u5408\u3001\u4efb\u610f\u306e\u7bb1\u306b\u5bfe\u3057\u3066\u3001\u5927\u304d\u3044\u65b9\u3092\u8d64\u3001\u5c0f\u3055\u3044\u65b9\u3092\u9752\nanswer = (X.max() - X.min()) * (Y.max() - Y.min())\n\nred = Y.max() - X.min()\n# \u9752\u306e\u6700\u5c0f\u5024\u3092\u6c7a\u3081\u308b\u3068\u5168\u90e8\u6c7a\u307e\u308b\n# \u5c0f\u3055\u3044\u5074\u3067\u30bd\u30fc\u30c8 -> \u5de6\u304b\u3089\u3044\u304f\u3064\u304b\u3092\u4e0a\u5074\u3001\u53f3\u304b\u3089\u3044\u304f\u3064\u304b\u3092\u4e0b\u5074\nidx = X.argsort()\nX = X[idx]\nY = Y[idx]\nY_min = np.minimum.accumulate(Y)\nY_max = np.maximum.accumulate(Y)\na = Y_max[-1] - Y_min[-1] # \u5168\u90e8\u4e0a\u5074\u304b\u3089\u3068\u3063\u305f\u5834\u5408\nb = (np.maximum(Y_max[:-1], X[-1]) - np.minimum(X[1:],Y_min[:-1])).min() # \u9014\u4e2d\u307e\u3067\u4e0a\u5074\nc = X[-1] - X[0] # \u5168\u90e8\u4e0b\u5074\nanswer = min(answer, red * min(a,b,c))\n\nprint(answer)", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn, = list(map(int,readline().split()))\n\nxy = []\nfor _ in range(n):\n    x,y = list(map(int,readline().split()))\n    if x>y: x,y = y,x\n    xy.append((x,y))\nxy.sort()\n\n\nxx = []\nyy = []\nfor x,y in xy:\n    xx.append(x)\n    yy.append(y)\n\n\nymaxr = yy[:]\nfor i in range(n-2,-1,-1):\n    ymaxr[i] = max(ymaxr[i],ymaxr[i+1])\n\nymaxl= yy[:]\nfor i in range(1,n):\n    ymaxl[i] = max(ymaxl[i],ymaxl[i-1])\n\nymin = yy[:]\nfor i in range(1,n):\n    ymin[i] = min(ymin[i],ymin[i-1])\n\n#print(yy)\n#print(ymaxl)\n#print(ymaxr)\n#print(ymin)\n\n#print(xx,yy)\n\nans = 1<<60\nfor i in range(n):\n    mr = xx[0]\n\n    Mr = xx[i]\n    if i != n-1: Mr = max(Mr,ymaxr[i+1])\n    \n    mb = ymin[i]\n    if i != n-1: mb = min(mb,xx[i+1])\n    \n    Mb = ymaxl[i]\n    if i != n-1: Mb = max(Mb,xx[n-1])\n\n    #print(i,mr,Mr,mb,Mb)\n        \n    ans = min(ans,(Mr-mr)*(Mb-mb))\n\n\nprint(ans)\n\n\n\n\n\n\n\n\n", "inf = 10**18\nN = int(input())\nballs = []\nm, M = inf, -1\nmp, Mp = -1, -1\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    if x>y:\n        x, y = y, x\n    balls.append((x, y))\n    if m>x:\n        mp = i\n        m = x\n    if M<y:\n        Mp = i\n        M = y\na = max(x[0] for x in balls)\nb = min(x[1] for x in balls)\nans = (a-m)*(M-b)\nif mp == Mp:\n    print(ans)\n    return\nballs.sort()\na, b = balls[0][0], balls[-1][0]\nans = min(ans, (M-m)*(b-a))\nk = inf\nfor i in range(N-1):\n    a = balls[i+1][0]\n    b = max(b, balls[i][1])\n    k = min(k, balls[i][1])\n    if a>k:\n        ans = min(ans, (M-m)*(b-k))\n        break\n    ans = min(ans, (M-m)*(b-a))\nb = max(b, balls[i][1])\nk = min(k, balls[-1][1])\nans = min(ans, (M-m)*(b-k))\nprint(ans)\n\n\n\n\n\n", "n=int(input())\nxy=[]\nfor i in range(n):\n    x,y=list(map(int,input().split()))\n    if x>y:x,y=y,x\n    xy.append((x,y))\nxy.sort()\nmn=10**12;mx=0\nfor i in range(n):\n    x,y=xy[i]\n    mn=min(mn,x)\n    mx=max(mx,y)\ncntmx=0;cntmn=0\nfor i in range(n):\n    x,y=xy[i]\n    if mx==y:cntmx+=1\n    if mn==x:cntmn+=1\nif cntmx==1 and cntmn==1 and xy[0][0]==mn and xy[0][1]==mx:\n    rmn=xy[0][1];rmx=xy[0][1];bmn=xy[0][0];bmx=xy[0][0]\n    for i in range(1,n):\n        x,y=xy[i]\n        rmn=min(rmn,y)\n        rmx=max(rmx,y)\n        bmn=min(bmn,x)\n        bmx=max(bmx,x)\n    print((rmx-rmn)*(bmx-bmn))\n    return\nelse:\n    rmn=10**12;rmx=0;bmn=10**12;bmx=0\n    for i in range(n):\n        x,y=xy[i]\n        rmn=min(rmn,y)\n        rmx=max(rmx,y)\n        bmn=min(bmn,x)\n        bmx=max(bmx,x)\nans1=(rmx-rmn)*(bmx-bmn)\nxy.sort()\nymn=[10**12]*n\nrmn=bmn;bmn=xy[0][0];bmx=xy[n-1][0]\nfor i in range(n):\n    x,y=xy[i]\n    ymn[i]=min(ymn[max(0,i-1)],y)\nans2=(rmx-rmn)*(bmx-bmn)\nfor i in range(n-1):\n    x,y=xy[i]\n    if ymn[i]<x:\n        bmn=max(bmn,ymn[i-1])\n        break\n    bmn=x\n    bmx=max(bmx,xy[max(0,i-1)][1])\n    ans2=min(ans2,(rmx-rmn)*(bmx-bmn))\nans2=min(ans2,(rmx-rmn)*(bmx-bmn))\nprint(min(ans1,ans2))\n", "N = int(input())\nBall = []\nfor i in range(N):\n    x, y = list(map(int, input().split()))\n    x, y = min(x, y), max(x, y)\n    Ball.append((x, y))\n\nBall.sort()  # \u30bd\u30fc\u30c8\u3057\u3066\u304a\u304f\nX = [x for x, y in Ball]\nY = [y for x, y in Ball]\n\n# \u5168\u4f53\u306eMIN, MAX\nMIN = X[0]\nMAX = max(Y)\n\n# \u78ba\u5b9a2\u7389\u3092\u5225\u30b0\u30eb\u30fc\u30d7\u306b\nans = (max(X) - MIN) * (MAX - min(Y))\n\n# \u78ba\u5b9a2\u7389\u3092\u540c\u3058\u30b0\u30eb\u30fc\u30d7\u306b\n\n# \u5168\u4f53\u306eMAX\u30fbMIN\u304c\u78ba\u5b9a\u3057\u3066\u3044\u308b\u5834\u6240\u306f\u3001\u3082\u3046\u7247\u65b9\u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\nMIN_index, MAX_index = X.index(MIN), Y.index(MAX)\n\n# \u9078\u3070\u3056\u308b\u3092\u5f97\u306a\u3044\u3084\u3064\nMIN_O = X[MAX_index]\nMAX_O = Y[MIN_index]\nMIN_O, MAX_O = min(MIN_O, MAX_O), max(MIN_O, MAX_O)\n\n# \u9078\u629e\u80a2\u304c\u306a\u3044\u3084\u3064\u3092\u524a\u9664\nBall = [Ball[i] for i in range(N) if i not in (MIN_index, MAX_index)]\n\n# \u3064\u304f\u308a\u304a\u3057\nX = [x for x, y in Ball]\nY = [y for x, y in Ball]\n\n# \u3068\u308a\u3042\u3048\u305a\u5c0f\u3055\u3044\u307b\u3046\u3092\u96c6\u3081\u305f\u3053\u3068\u306b\u3057\u3066\u304a\u304f\nB = [x for x in X] + [MAX_O, MIN_O]\nB_max = max(B)\n\nfor i in range(len(Ball)):\n    x, y = X[i], Y[i]\n    if B_max - x > B_max - y >= 0:\n        B[i] = y\n    else:\n        break\n\nans = min(ans, (MAX - MIN) * (max(B) - min(B)))\nprint(ans)\n"]