["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    t = input()\n\n    d = {}\n    for i in range(ord('a'), ord('z') + 1):\n        d[chr(i)] = 0\n\n    for cs in s:\n        d[cs] += 1\n    for ct in t:\n        d[ct] += 1\n\n    ok = True\n    for e in d:\n        if d[e] % 2 == 1:\n            ok = False\n\n    if not ok:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n\n        changes = []\n\n        s, t = list(s), list(t)\n        for i in range(n-1):\n            if s[i] != t[i]:\n                r = (0, -1)\n                for j in range(i+1, n):\n                    if s[j] == t[i]:\n                        r = (j, 0)\n\n                for j in range(i+1, n):\n                    if t[j] == t[i]:\n                        r = (j, 1)\n\n                if r[1] == 0:\n                    changes += [(r[0], i+1), (i, i+1)]\n                    s[r[0]], t[i+1] = t[i+1], s[r[0]]\n                    s[i], t[i+1] = t[i+1], s[i]\n                elif r[1] == 1:\n                    changes += [(i, r[0])]\n                    s[i], t[r[0]] = t[r[0]], s[i]\n\n        print(len(changes))\n        for change in changes:\n            x, y = change\n            print(x+1, y+1)", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\nfrom fractions import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 1000010\nMOD = 10**9+7\nspf = [i for i in range(MAXN)]\ndef sieve():\n    for i in range(2,MAXN,2):\n        spf[i] = 2\n    for i in range(3,int(MAXN**0.5)+1):\n        if spf[i]==i:\n            for j in range(i*i,MAXN,i):\n                if spf[j]==j:\n                    spf[j]=i\ndef fib(n,m):\n    if n == 0:\n        return [0, 1]\n    else:\n        a, b = fib(n // 2)\n        c = ((a%m) * ((b%m) * 2 - (a%m)))%m\n        d = ((a%m) * (a%m))%m + ((b)%m * (b)%m)%m\n        if n % 2 == 0:\n            return [c, d]\n        else:\n            return [d, c + d]\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\ndef flush():\n    return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nfor _ in range(int(input())):\n    n = int(input())\n    s = [i for i in input()]\n    t = [i for i in input()]\n    d = defaultdict(int)\n    for i in range(n):\n        d[s[i]]+=1\n        d[t[i]]+=1\n    if len(list(d.keys()))>n or sum(i%2 for i in list(d.values())):\n        print('No')\n    else:\n        ans = []\n        for i in range(n):\n            if s[i]!=t[i]:\n                for j in range(i+1,n):\n                    if s[j]!=t[j]:\n                        if s[i]==s[j]:\n                            ans.append([j,i])\n                            s[j],t[i] = t[i],s[j]\n                            break\n                        elif s[i]==t[j]:\n                            ans.append([j,j])\n                            s[j],t[j] = t[j],s[j]\n                            ans.append([j,i])\n                            s[j],t[i] = t[i],s[j]\n                            break\n                        elif t[i]==t[j]:\n                            ans.append([i,j])\n                            s[i],t[j] = t[j],s[i]\n                            break\n                        elif t[i]==s[j]:\n                            ans.append([j,j])\n                            s[j],t[j] = t[j],s[j]\n                            ans.append([i,j])\n                            s[i],t[j] = t[j],s[i]\n                            break\n            #assert(s[i]==t[i])\n        #assert(len(ans)<=2*n)\n        print('Yes')\n        print(len(ans))\n        for i in ans:\n            print(i[0]+1,i[1]+1)\n\n\n\n\n        \n\n\n"]