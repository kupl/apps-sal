["def fastpow(base, power):\n result = 1\n while power > 0:\n  if power % 2 == 0:\n   power = power // 2\n\n   base = base * base\n  else:\n   power = power - 1\n   result = result * base\n   power = power // 2\n   base = base * base\n return result\n\nt=int(input())\nfor i in range(t):\n a=list(map(int,input().split()))\n n,r=a[0],a[1]\n w=(n*(fastpow(n-1,r)))%((10**9)+7)\n \n print(w)", "t=int(input())\nfor i in range(t):\n a=list(map(int,input().split()))\n n,r=a[0],a[1]\n w=(n*((n-1)**(r)))%((10**9)+7)\n \n print(w)", "t=int(input())\nfor i in range(t):\n a=list(map(int,input().split()))\n n,r=a[0],a[1]\n w=n*((n-1)**(r))\n \n print(w%((10**9)+7))", "from math import factorial\n\ndef p(n,r):\n return factorial(n)//(factorial(n-r))\n \nt=int(input())\nfor i in range(t):\n a=list(map(int,input().split()))\n n,r=a[0],a[1]\n w=n*((n-1)**(r))\n \n print(w%((10**9)+7))", "mod = 10**9 + 7\n\ndef solve(n, m):\n ans = n*(n-1) % mod\n if m==1:\n  print(ans)\n  return\n else:\n  ans = (ans * pow(n-1, m-1, mod)) % mod\n\n print(ans)\n \nfor case in range(int(input())):\n n,m = list(map(int, input().split()))\n\n solve(n, m)\n", "\nmod = 1000000007\ndef power(n,m):\n if m == 0:\n  return 1\n if m%2 == 0:\n  temp = power(n,m//2)\n  return temp*temp%mod\n else:\n  temp = power(n,m//2)\n  return temp*n*temp%mod\n\n\n\nfor _ in range(int(input())):\n n,m = list(map(int,input().split()))\n print((n*(n-1)*power(n-1,m-1))%mod)\n", "# cook your dish here\nt = int(input())\nfor i in range(t):\n n,m = list(map(int,input().split()))\n ans = n * pow(n-1,m, 10**9+7) % (10**9+7)\n print(ans)\n"]