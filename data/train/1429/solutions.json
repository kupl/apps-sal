["# cook your dish here\nt=int(input())\nwhile(t>0):\n n=int(input())\n b=[int(x) for x in input().split()]\n p=[float(x) for x in input().split()]\n s=[0]*(10)\n yet=2\n mx=0\n for i in range(n):\n  st=bin(b[i])\n  rng=len(st)-2\n  if(rng+2>yet):\n   for ml in range(rng+2-yet):\n    s.append(0)\n  if(rng>mx):\n   mx=rng\n  for k in range(2,rng+2):\n   if(st[k]=='1'):\n    s[rng-k+1]=(s[rng-k+1]*(1-p[i]))+((1-s[rng-k+1])*(p[i]))\n   # else:\n   #     s[k-2]=(s[k-2]*1)\n # print(s)\n # print(mx)\n mult=1\n ans=0\n for i in range(0,mx):\n  ans+=mult*s[i]\n  mult=mult*2\n print(\"%.16f\" % ans)\n t-=1", "# cook your dish here\nt=int(input())\nwhile t:\n x=0\n n=int(input())\n b=list(map(int,input().strip().split()))\n p=list(map(float,input().strip().split()))\n for i in range(30):\n  pb=0.0\n  for j in range(n):\n   if b[j]&(1<<i):\n    pb=pb*(1-p[j])+(1-pb)*p[j]\n  x+=(1<<i)*pb\n print(x)\n t-=1", "for _ in range(int(input())):\n n = int(input())\n B = [int(x) for x in input().split()]\n P = [float(x) for x in input().split()]\n tl = [0]*30\n for b,p in zip(B,P):\n  bs = bin(b)[2:][::-1]\n  for i in range(len(bs)):\n   if bs[i]=='1':\n    tl[29-i] = (1-tl[29-i])*p + (1-p)*tl[29-i]\n ans = 0\n for i in range(29,-1,-1):\n  ans += (2**(29-i))*tl[i]\n print(ans)", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n xl = [int(x) for x in input().split()]\n pl = [float(x) for x in input().split()]\n tl = [0]*30\n for x,p in zip(xl,pl):\n  bs = bin(x)[2:][::-1]\n  for i in range(len(bs)):\n   if bs[i]=='1':\n    tl[i] = (1-tl[i])*p + (1-p)*tl[i]\n ans = 0\n for i in range(30):\n  ans += (2**i)*tl[i]\n print(ans)", "for _ in range(int(input())):\n n=int(input())\n xl=[int(x) for x in input().split()]\n pl=[float(x) for x in input().split()]\n tl=[0]*30\n for x,p in zip(xl,pl):\n  bs=bin(x)[2:][::-1]\n  for i in range(len(bs)):\n   if bs[i]=='1':\n    tl[i]=(1-tl[i])*p+(1-p)*tl[i]\n ans=0\n for i in range(30):\n  ans+=(2**i)*tl[i]\n print(ans)", "# cook your dish here\nk = 30 \nfor _ in range(int(input())):\n n = int(input())\n l1 = list(map(int, input().split()))\n l2 = list(map(float, input().split()))\n ans = 0\n for i in range(k):\n  p = 0\n  for j in range(n):\n   if(l1[j] & (1<<i)):\n    p = p*(1-l2[j])+(1-p)*l2[j]\n  ans += p*(1<<i)\n \n print(\"%.15f\"%ans)", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nfrom math import *\nfrom decimal import *\nfrom copy import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 10**6+10\nMOD = 10**9+7\ndef isprime(n):\n n = abs(int(n))\n if n < 2:\n  return False\n if n == 2: \n  return True \n if not n & 1: \n  return False\n for x in range(3, int(n**0.5) + 1, 2):\n  if n % x == 0:\n   return False\n return True\n\ndef mhd(a,b):\n return abs(a[0]-b[0])+abs(b[1]-a[1])\n\ndef numIN(x = \" \"):\n return(map(int,sys.stdin.readline().strip().split(x)))\n\ndef charIN(x= ' '):\n return(sys.stdin.readline().strip().split(x))\n\ndef arrIN():\n return list(numIN())\n\ndef dis(x,y):\n a = y[0]-x[0]\n b = x[1]-y[1]\n return (a*a+b*b)**0.5\n\ndef lgcd(a):\n g = a[0]\n for i in range(1,len(a)):\n  g = math.gcd(g,a[i])\n return g\n\ndef ms(a):\n msf = -MAX\n meh = 0\n st = en = be = 0\n for i in range(len(a)):\n  meh+=a[i]\n  if msf<meh:\n   msf = meh\n   st = be\n   en = i\n  if meh<0:\n   meh = 0\n   be = i+1\n return msf,st,en\n\ndef flush():\n return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*\u00a0\u00a0\u00a0\u00a0'''\n\nfor _ in range(int(input())):\n n = int(input())\n a = arrIN()\n p = list(map(float,input().split()))\n dp = [0]*32\n for i in range(32):\n  for j in range(n):\n   if ((a[j]) & (1<<i)):\n    dp[i] = (1-p[j])*dp[i]+(1-dp[i])*p[j]\n ans = 0\n for i in range(32):\n  ans+=dp[i]*(1<<i)\n print(ans)", "T=int(input())\nfor i in range(0,T):\n N=int(input())\n b=[int(x) for x in input().split()]\n p=[float(x) for x in input().split()]\n arr=[0]*32\n for j in range(0,len(b)):\n  st=bin(b[j])\n  st=st[2:]\n  #print(st)\n  for k in range(1,len(st)+1):\n   if(st[-k]=='1'):\n    arr[k-1]=((1-arr[k-1])*p[j])+((1-p[j])*arr[k-1])\n  #for k in range(len(st)-1,-1,-1):\n   #if(st[k]=='1'):\n    #arr[N-k-1]=(arr[N-k-1]*(1-p[j]))+((1-arr[N-k-1])*p[j])\n    #print(N-k,arr)\n #print(arr)\n\n exp=0\n xr=1\n for j in range(0,len(arr)):\n  exp=exp+(xr*arr[j])\n  xr=xr*2\n\n print(exp)\n\n\n", "# cook your dish here\nl=[1]\nfor k in range(31):\n l.append(l[-1]*2)\ndef convert(s):\n while len(s)!=32:\n  s='0'+s\n ans=\"\"\n for i in s:\n  ans=i+ans\n return ans\ndef main():\n for _ in range(int(input())):\n  n=int(input())\n  val=list(map(int,input().split()))\n  p=list(map(float,input().split()))\n  res=0\n  for i in range(32):\n   x=0\n   for j in range(n):\n    if val[j] & (1<<i):\n     x=(p[j]*(1-x))+(1-p[j])*(x)\n   res+=(l[i]*x)\n  print(\"%.6f\"%res)\ndef __starting_point():\n main()\n     \n\n__starting_point()", "for _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n b=list(map(float,input().split()))\n ans=0\n for i in range(30):\n  temp=0\n  for j in range(n):\n   if (a[j]&(1<<i)):\n    temp=temp*(1-b[j])+(1-temp)*b[j]\n  ans+=temp*(1<<i)\n print(ans)", "\nt = int(input())\nwhile(t>0 ):\n n= int(input())\n #b = [0]*n;\n B=list(map(int,input().strip().split(' ')))\n P=list(map(float,input().strip().split(' ')))\n l = [0]*32\n ans = 0 \n cur_bit = 1\n for i in range(0,31):\n  # print(cur_bit,end =\" \")\n  cur_prob = 0.0\n  for j in range(0,len(B)):\n   if(cur_bit&B[j]):\n    cur_prob = cur_prob*(1-P[j]) + (1-cur_prob)*P[j]\n  cur_bit = cur_bit << 1\n  # print(cur_prob)\n  ans = ans + cur_prob* (2**i)\n\n print(ans)\n\n\n t-=1;", "t=int(input())\nwhile(t>0):\n n=int(input())\n b=[int(x) for x in input().split()]\n p=[float(x) for x in input().split()]\n s=[0]*(10)\n yet=2\n mx=0\n for i in range(n):\n  st=bin(b[i])\n  rng=len(st)-2\n  if(rng+2>yet):\n   for ml in range(rng+2-yet):\n    s.append(0)\n  if(rng>mx):\n   mx=rng\n  for k in range(2,rng+2):\n   if(st[k]=='1'):\n    s[rng-k+1]=(s[rng-k+1]*(1-p[i]))+((1-s[rng-k+1])*(p[i]))\n   # else:\n   #     s[k-2]=(s[k-2]*1)\n # print(s)\n # print(mx)\n mult=1\n ans=0\n for i in range(0,mx):\n  ans+=mult*s[i]\n  mult=mult*2\n print(\"%.16f\" % ans)\n t-=1", "for _ in range(int(input())):\n n = int(input())\n xl = [int(x) for x in input().split()]\n pl = [float(x) for x in input().split()]\n tl = [0]*30\n for x,p in zip(xl,pl):\n  bs = bin(x)[2:][::-1]\n  for i in range(len(bs)):\n   if bs[i]=='1':\n    tl[i] = (1-tl[i])*p + (1-p)*tl[i]\n ans = 0\n for i in range(30):\n  ans += (2**i)*tl[i]\n print(ans)"]