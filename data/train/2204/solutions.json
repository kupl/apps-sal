["import sys\ninput = sys.stdin.readline\nimport heapq\n\nmod=998244353\n\nn,m=list(map(int,input().split()))\n\nE=[[] for i in range(n+1)]\nE2=[[] for i in range(n+1)]\n\nfor i in range(m):\n    x,y=list(map(int,input().split()))\n    E[x].append(y)\n    E2[y].append(x)\n\nTIME=[1<<29]*(n+1)\nTIME[1]=0\n\ndef shuku(x,y):\n    return (x<<20)+y\n\nQ=[]\nANS=[]\n\nfor k in range(n+1):\n    NQ=[]\n\n    if k<=1:\n        heapq.heappush(Q,shuku(0,1))\n\n    if k%2==0:\n        while Q:\n            #print(Q)\n            x=heapq.heappop(Q)\n            time=x>>20\n            town=x-(time<<20)\n\n            #print(x,time,town)\n\n            if TIME[town]<time:\n                continue\n\n            for to in E[town]:\n                if TIME[to]>time+1:\n                    TIME[to]=time+1\n                    heapq.heappush(Q,shuku(TIME[to],to))\n                    heapq.heappush(NQ,shuku(TIME[to],to))\n\n    else:\n        while Q:\n            x=heapq.heappop(Q)\n            time=x>>20\n            town=x-(time<<20)\n\n            #print(x,time,town)\n\n            if TIME[town]<time:\n                continue\n\n            for to in E2[town]:\n                if TIME[to]>time+1:\n                    TIME[to]=time+1\n                    heapq.heappush(Q,shuku(TIME[to],to))\n                    heapq.heappush(NQ,shuku(TIME[to],to))\n\n    #print(k,TIME)\n\n    Q=NQ\n    ANS.append(TIME[n])\n\n    if k>=100 and TIME[n]!=1<<29:\n        break\n\nA=ANS[0]\nfor k in range(1,len(ANS)):\n    if ANS[k]==1<<29:\n        continue\n\n    if ANS[k-1]==1<<29:\n        A=(ANS[k]+pow(2,k,mod)-1)%mod\n\n    if k<60 and ANS[k-1]-ANS[k]>pow(2,k-1):\n        A=(ANS[k]+pow(2,k,mod)-1)%mod\n\nprint(A)\n    \n\n\n    \n    \n        \n                    \n                \n\n        \n"]