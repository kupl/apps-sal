["from math import *\nt=int(input())\nfor i in range(t):\n m,b=input().split()\n m=int(m)\n b=int(b)\n print(2*gcd(m,b))", "from math import*\nn=int(input())\nfor i in range(n):\n b,m=input().split()\n b=int(b)\n m=int(m)\n print(2*gcd(b,m))", "from math import*\nfor i in range(int(input())):\n m,b=input().split()\n m=int(m)\n b=int(b)\n print(2*gcd(m,b))", "from math import *\nt=int(input())\nfor i in range(t):\n m,b=input().split()\n m=int(m)\n b=int(b)\n print(2*gcd(m,b))", "def gcd(a, b):\n if b == 0:\n  return a\n return gcd(b, a%b)\n\nfor _ in range(int(input())):\n a, b = map(int, input().split())\n\n print(2 * gcd(a, b))", "from math import *\nt=int(input())\nfor i in range(t):\n a,b=map(int,input().split())\n a=int(a)\n b=int(b)\n print(2*gcd(a,b))", "# cook your dish here\ndef gcd(a, b):\n if b==0:\n  return a \n return gcd(b, a%b)\n\nfor _ in range(int(input())):\n M, B = map(int, input().split())\n g = gcd(M, B)\n print(2 * g)", "# cook your dish here\ndef fun(M,B):\n if M==B:\n  return M*2\n elif M==0:\n  return B*2\n elif B==0:\n  return M*2\n else:\n  if M>B:\n   return fun(M%B,B)\n  else:\n   return fun(M,B%M)\nt = int(input())\nfor i in range(t):\n M,B=list(map(int,input().split()))\n  \n print(fun(M,B))\n", "# cook your dish here\ndef gcd(a, b):\n if b==0:\n  return a \n return gcd(b, a%b)\n\nfor _ in range(int(input())):\n M, B = map(int, input().split())\n g = gcd(M, B)\n print(2 * g)", "from math import *\nt=int(input())\nfor i in range(t):\n m,b=input().split()\n m=int(m)\n b=int(b)\n print(2*gcd(m,b))", "# cook your dish here\nfor _ in range(int(input())):\n [m,b]=[int(i) for i in input().split()]\n def E(m,b):\n  if m<b:\n   return E(b,m)\n  if b==0:\n   return m\n  return E(b,m%b)\n print(2*E(m,b))", "# cook your dish here\ndef chocoValue(a,b):\n if a<b:\n  a,b=b,a\n if b==0: \n  return a\n return chocoValue(b,a%b)\n\n\nfor x in range(int(input())):\n m,b=map(int,input().split())\n if m or b:\n  sumValue= chocoValue(m,b)\n  print(2*sumValue)\n else:\n  print(0)", "def gcd(a,b):\n if a<b:\n  a,b=b,a\n if b==0:\n  return a\n return gcd(b,a%b)\n \nfor _ in range(int(input())):\n a,b=map(int,input().split())\n if a or b:\n  c=gcd(a,b)\n  print(2*c)\n else:\n  print(0)", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n m, b = map(int,input().split())\n print(2*math.gcd(m, b))", "# cook your dish here\nimport math\nfor i in range(int(input())):\n n,m=map(int,input().split())\n if n==m or n==0 or m==0:\n  print(n+m)\n else:\n  a=math.gcd(n,m)\n  print(2*a)", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n n,m=map(int,input().split())\n if n==m or n==0 or m==0:\n  print(n+m)\n else:\n  x=math.gcd(n,m)\n  print(2*x)", "t=int(input())\nfor _ in range(t):\n a,b=list(map(int,input().split()))\n while a!=0 and b!=0 and a!=b:\n  if(a>b):\n   a=a%b\n  else:\n   b=b%a\n if(a==0 or b==0):\n  print((a+b)*2)\n elif(a==b):\n  print(a+b)\n", "# cook your dish here\ndef gcd(m,b):\n if m==0:\n  return b\n return gcd(b%m,m)\n\ntest = int(input())\n\nwhile test!=0:\n m,b = list(map(int,input().split()))\n result = gcd(m,b)\n print(result*2)\n test-=1\n\n", "def gcd(m,b):\n if m==0:\n  return b\n return gcd(b%m,m)\n\ntest = int(input())\n\nwhile test!=0:\n m,b = list(map(int,input().split()))\n result = gcd(m,b)\n print(result*2)\n test-=1\n\n\n", "from math import gcd\nfor i in range(int(input())):\n a,s=list(map(int,input().split()))\n print(gcd(a,s)*2)", "t = int(input())\n\ndef gcd(a, b):\n if(b==0):\n  return a\n else:\n  return gcd(b, a%b)\n\nfor _ in range(t):\n x, y = [int(a) for a in input().split()]\n \n print(gcd(x, y)*2)", "from math import gcd\nfor _ in range(int(input())) :\n a, b = map(int, input().split())\n print(2 * gcd(a, b))", "# cook your dish here\nfrom math import gcd\nfor _ in range(int(input())):\n x,y= map(int,input().split())\n if x==y:\n  print(x+y)\n else:\n  print(2*gcd(x,y))", "# cook your dish here\nfor _ in range(int(input())):\n x, y = list(map(int, input().split()))\n \n while(y):\n  x, y = y, x % y\n \n print(2*x)"]