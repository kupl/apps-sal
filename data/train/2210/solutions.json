["import sys\n\ninput=sys.stdin.readline\n\nn=int(input())\nb=list(map(int,input().split()))\nope=[[] for i in range(n)]\nQ=int(input())\nfor i in range(Q):\n    l,r=list(map(int,input().split()))\n    ope[r-1].append(l-1)\n\nres=b.count(0)\n\nData=[(-1)**((b[i]==1)+1) for i in range(n)]\nfor i in range(1,n):\n    Data[i]+=Data[i-1]\nData=[0]+Data\n\nfor i in range(n):\n    ope[i].sort(reverse=True)\n\n# N: \u51e6\u7406\u3059\u308b\u533a\u9593\u306e\u9577\u3055\nN=n+1\nN0 = 2**(N-1).bit_length()\ndata = [None]*(2*N0)\nINF = (-2**31, -2**31)\n# \u533a\u9593[l, r+1)\u306e\u5024\u3092v\u306b\u66f8\u304d\u63db\u3048\u308b\n# v\u306f(t, value)\u3068\u3044\u3046\u5024\u306b\u3059\u308b (\u65b0\u3057\u3044\u5024\u307b\u3069t\u306f\u5927\u304d\u304f\u306a\u308b)\ndef update(l, r, v):\n    L = l + N0; R = r + N0\n    while L < R:\n        if R & 1:\n            R -= 1\n            if data[R-1]:\n                data[R-1] = max(v,data[R-1])\n            else:\n                data[R-1]=v\n\n        if L & 1:\n            if data[L-1]:\n                data[L-1] = max(v,data[L-1])\n            else:\n                data[L-1]=v\n            L += 1\n        L >>= 1; R >>= 1\n# a_i\u306e\u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97\ndef _query(k):\n    k += N0-1\n    s = INF\n    while k >= 0:\n        if data[k]:\n            s = max(s, data[k])\n        k = (k - 1) // 2\n    return s\n# \u3053\u308c\u3092\u547c\u3073\u51fa\u3059\ndef query(k):\n    return _query(k)[1]\n\nfor i in range(n+1):\n    update(i,i+1,(-Data[i],-Data[i]))\nif ope[0]:\n    update(1,2,(0,0))\n\nfor i in range(1,n):\n    val=query(i)\n    update(i+1,i+2,(val+Data[i]-Data[i+1],val+Data[i]-Data[i+1]))\n    for l in ope[i]:\n        val=query(l)\n        update(l+1,i+2,(val,val))\n\n\n\nprint((n-(res+query(n)+Data[n])))\n", "n=int(input())\nb=list(map(int,input().split()))\nope=[[] for i in range(n)]\nQ=int(input())\nfor i in range(Q):\n    l,r=map(int,input().split())\n    ope[r-1].append(l-1)\n\nres=b.count(0)\n\nData=[(-1)**((b[i]==1)+1) for i in range(n)]\nfor i in range(1,n):\n    Data[i]+=Data[i-1]\nData=[0]+Data\n\nfor i in range(n):\n    ope[i].sort(reverse=True)\n\n# N: \u51e6\u7406\u3059\u308b\u533a\u9593\u306e\u9577\u3055\nN=n+1\nN0 = 2**(N-1).bit_length()\ndata = [None]*(2*N0)\nINF = (-2**31, -2**31)\n# \u533a\u9593[l, r+1)\u306e\u5024\u3092v\u306b\u66f8\u304d\u63db\u3048\u308b\n# v\u306f(t, value)\u3068\u3044\u3046\u5024\u306b\u3059\u308b (\u65b0\u3057\u3044\u5024\u307b\u3069t\u306f\u5927\u304d\u304f\u306a\u308b)\ndef update(l, r, v):\n    L = l + N0; R = r + N0\n    while L < R:\n        if R & 1:\n            R -= 1\n            if data[R-1]:\n                data[R-1] = max(v,data[R-1])\n            else:\n                data[R-1]=v\n\n        if L & 1:\n            if data[L-1]:\n                data[L-1] = max(v,data[L-1])\n            else:\n                data[L-1]=v\n            L += 1\n        L >>= 1; R >>= 1\n# a_i\u306e\u73fe\u5728\u306e\u5024\u3092\u53d6\u5f97\ndef _query(k):\n    k += N0-1\n    s = INF\n    while k >= 0:\n        if data[k]:\n            s = max(s, data[k])\n        k = (k - 1) // 2\n    return s\n# \u3053\u308c\u3092\u547c\u3073\u51fa\u3059\ndef query(k):\n    return _query(k)[1]\n\nfor i in range(n+1):\n    update(i,i+1,(-Data[i],-Data[i]))\nif ope[0]:\n    update(1,2,(0,0))\n\nfor i in range(1,n):\n    val=query(i)\n    update(i+1,i+2,(val+Data[i]-Data[i+1],val+Data[i]-Data[i+1]))\n    for l in ope[i]:\n        val=query(l)\n        update(l+1,i+2,(val,val))\n\n\n\nprint(n-(res+query(n)+Data[n]))"]