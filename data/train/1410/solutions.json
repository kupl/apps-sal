["nCr = [[0 for x in range(1001)] for x in range(1001)]\n \nfor i in range (0,1001):\n nCr[i][0]=1\n nCr[i][i]=1\nfor i in range (1,1001):\n for j in range (1,1001):\n  if i!=j:\n   nCr[i][j] = nCr[i-1][j] + nCr[i-1][j-1]\n \nt=eval(input())\nfor rajarshisarkar in range(0,t):\n s,n,m,k=list(map(int,input().split(' ')))\n foo=0.000000\n tot = float(nCr[s-1][n-1])\n if s==n:\n   print(\"1.000000\\n\")\n   continue\n if k>n:\n   print(\"0.000000\\n\")\n   continue\n if m>n:\n  wola=n\n else:\n  wola=m\n for i in range(k,wola):\n  foo+= ((nCr[m-1][i])*(nCr[s-m][n-i-1]))\n print(\"%f\\n\"% (float(foo/tot)))", "\n\nnCr = [[0 for x in range(1001)] for x in range(1001)]\n \nfor i in range (0,1001):\n nCr[i][0]=1\n nCr[i][i]=1\nfor i in range (1,1001):\n for j in range (1,1001):\n  if i!=j:\n   nCr[i][j] = nCr[i-1][j] + nCr[i-1][j-1]\n\ndef main():\n t=int(input())\n for i in range(t):\n  num=0\n  line = input().split(\" \")\n  s = int(line[0])\n  n = int(line[1])\n  m = int(line[2])\n  k = int(line[3])\n  if k>n-1:\n   print(\"0.000000\")\n  else:\n   j=k\n   while j<n and j<m :\n    p = int(nCr[m-1][j])\n    q = int((nCr[s-m][n-j-1]))\n    #print p,q\n    num = int(num) + (p*q)\n    j=j+1\n   den=int(nCr[s-1][n-1])\n   ans=float(num)/den\n   print('{0:.11f}'.format(ans))\n \ndef __starting_point():\n main()\n__starting_point()", "#from __future__ import division\n\n\nnCr = [[0 for x in range(1001)] for x in range(1001)]\n \nfor i in range (0,1001):\n nCr[i][0]=1\n nCr[i][i]=1\nfor i in range (1,1001):\n for j in range (1,1001):\n  if i!=j:\n   nCr[i][j] = nCr[i-1][j] + nCr[i-1][j-1]\n'''\ndef comb(n,r):\n    if r>n :\n     return 0\n    else :\n     i = n\n     j = 0\n     p = 1\n     if r>n-r :\n      r=n-r\n     t=range(1,r+1)\n     #print t\n     for j in t:\n      p=p*i\n      p=p/j\n      i=i-1\n     return p\n'''\ndef main():\n t=int(input())\n #print t\n for i in range(t):\n  num=0\n  line = input().split(\" \")\n  #print line\n  s = int(line[0])\n  n = int(line[1])\n  m = int(line[2])\n  k = int(line[3])\n  #print k\n  if k>n-1:\n   print(\"0.000000\")\n  else:\n   j=k\n   while j<n and j<m :\n    p = int(nCr[m-1][j])\n    q = int((nCr[s-m][n-j-1]))\n    #print p,q\n    num = int(num) + (p*q)\n    j=j+1\n   den=int(nCr[s-1][n-1])\n   #print num,den\n   ans=float(num)/den\n   print('{0:.10f}'.format(ans))\n # my code here\n \ndef __starting_point():\n main()\n__starting_point()", "nCr = [[0 for x in range(1001)] for x in range(1001)]\n\nfor i in range (0,1001):\n nCr[i][0]=1\n nCr[i][i]=1\nfor i in range (1,1001):\n for j in range (1,1001):\n  if i!=j:\n   nCr[i][j] = nCr[i-1][j] + nCr[i-1][j-1]\n\n#print(nCr[4][2])\n\nt=eval(input())\nfor __ in range(0,t):\n s=input().split()\n s,n,m,k=int(s[0]),int(s[1]),int(s[2]),int(s[3])\n if (s==n):\n  print(\"1.000000\")\n  continue\n \n foo=float(0.0000000)\n s=s-1\n n=n-1\n m=m-1\n bar=float(nCr[s][n])\n x=k-1\n if(k>n):\n  print(\"0.000000\")\n  continue\n for i in range(0,x+1):\n  foo=foo+(nCr[m][i]*nCr[s-m][n-i])\n \n ans= float(1- (foo/bar))\n print(ans)\n \n", "nCr = [[0 for x in range(1001)] for x in range(1001)]\n\nfor i in range (0,1001):\n nCr[i][0]=1\n nCr[i][i]=1\nfor i in range (1,1001):\n for j in range (1,1001):\n  if i!=j:\n   nCr[i][j] = nCr[i-1][j] + nCr[i-1][j-1]\nt=eval(input())\nfor _ in range(0,t):\n s,n,m,k=list(map(int,input().split(' ')))\n y=0\n if s==n:\n  print(\"1.000000\")\n  continue\n if (k>m or k>n):\n  print(\"0.000000\")\n  continue\n total = float(nCr[s-1][n-1])\n if m>n:z=m\n else:z=n\n for i in range(k,z):\n  y+=((nCr[m-1][i])*(nCr[s-m][n-i-1]))\n print(\"%.6f\" % (float(y/total))) \n", "import sys\ndef foo(a,b):\n i=a\n c=b\n n=1\n an=1\n if(a-b)<c:\n  c=a-b\n while(n<=c):\n  an=(an*i)/n\n  i-=1\n  n+=1\n return an\ntc=eval(input())\nfor i in range(tc):\n a=input().split()\n total=int(a[0])-1\n selection=int(a[1])-1\n friends=int(a[2])-1\n need=int(a[3])\n res=0\n maxi=foo(total,selection)\n if(need>selection): print(\"0\")\n elif(need<(friends-need)):\n  for j in range(need):\n   if(((selection-j)>=0) and (total-friends)>=(selection-j)):\n    res+=(foo(friends,j)*foo(total-friends,selection-j))\n  res=(float)(res)/maxi\n  print(1.0000000000-res)\n else:\n  for j in range(need,friends+1,1):\n   if((selection-j)>=0 and (total-friends)>=(selection-j)):\n    res+=(foo(friends,j)*foo(total-friends,selection-j))\n  res=float(res)/maxi\n  print(res)", "a = [[0]*1010 for x in range(1010)]\nfor i in range (1007):\n a[0][i]=0\nfor i in range (1007):\n a[i][0]=1\nfor i in range(1,1005):\n for j in range(1,i+1):\n  a[i][j]=a[i-1][j-1]+a[i-1][j]\n \ntest = int(input())\nwhile test>0:\n sum=0.0\n s, n, m, k=list(map(int, input().split()))\n if(s==1):\n  print(1.000000)\n  test=test-1\n  continue\n r=a[s][n]\n for i in range(k,m):\n  p=a[m][i+1]\n  if((n<i+1) or (s-m)<(n-(i+1))):\n   q=0\n  else:\n   q=a[s-m][n-(i+1)]\n  sum=sum+(float(p*q*(i+1)*s))\n sum=sum/(float(r*m*n))\n print(\"%.6f\" % sum)\n test=test-1", "def nck(n, k):\n if k>n or k<0:\n  return 0\n if k<n-k:\n  k = n-k\n ans = 1.0\n for i in range(1, n-k+1):\n  ans = ans * (k+i) / i\n return ans\n\ntc=int(input())\nwhile tc:\n s,n,m,k=input().split()\n s,n,m,k=int(s),int(n),int(m),int(k)\n prob=0.0\n i=k\n while i<m:\n  prob=prob+nck(m-1,i)/nck(s-1,n-1)*nck(s-m,n-i-1)\n  i=i+1\n print(\"{0:.6f}\".format(prob))\n tc=tc-1\n  \n", "import sys\ndef main():\n maxN = 1010\n c = [[0]*maxN for x in range(maxN)]\n for i in range(maxN):\n  c[i][0]=1\n  c[i][i]=1\n for i in range(1,maxN):\n  for j in range(1,maxN):\n   if i!=j:\n    c[i][j] = c[i-1][j] + c[i-1][j-1]\n t = int(sys.stdin.readline())\n for i in range(t):\n  s,n,m,k=list(map(int, sys.stdin.readline().split(' ')))\n  D = float (c[s-1][n-1])\n  #print D\n  N = 0.000000\n  if s == n:\n   print(1.000000)\n   continue\n  if k > n:\n   print(0.000000)\n   continue\n  upper = min(m, n)\n  for j in range(k, upper):\n   N += c[m-1][j] * c[s-m][n-1-j]\n  #print N\n  ans = float (N/D)\n  print(\"%f\" %ans)\nmain()", "def main():\n maxN = 1010\n c = [[0]*maxN for x in range(maxN)]\n for i in range(maxN):\n  c[i][0]=1\n  c[i][i]=1\n for i in range(1,maxN):\n  for j in range(1,maxN):\n   if i!=j:\n    c[i][j] = c[i-1][j] + c[i-1][j-1]\n t = int(input())\n for i in range(t):\n  s,n,m,k=list(map(int,input().split(' ')))\n  D = float (c[s-1][n-1])\n  #print D\n  N = 0.000000\n  if s == n:\n   print(1.000000)\n   continue\n  if k > n:\n   print(0.000000)\n   continue\n  upper = min(m, n)\n  for j in range(k, upper):\n   N += c[m-1][j] * c[s-m][n-1-j]\n  #print N\n  ans = float (N/D)\n  print(\"%f\" %ans)\nmain()", "def nCk(N, K):\n nn=N\n klim = min(K, N-K)+1\n res = 1\n #print \" res = \" + str(res)\n for kk in range(1, klim):\n  res *= nn\n  #print \" res = \" + str(res)\n  res /= kk\n  #print \" res = \" + str(res)\n  nn -= 1\n #print str(N) + \" choose \" + str(K) + \" = \" + str(res)\n return res\n\n\ndef doTest():\n CC = input()\n CCT = CC.split()\n S = int(CCT[0])\n N = int(CCT[1])\n M = int(CCT[2])\n K = int(CCT[3])\n #print \"S=\" + str(S) + \" N = \" + str(N) + \" M = \"  + str(M) + \" K = \" + str(K\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0)\n den = nCk(S-1, N-1)\n #print \"den = \" + str(den)\n klim = min(M, N)\n num = 0\n for kk in range(K, klim):\n  if ((S-M) < (N-kk-1)):\n   continue\n  num += nCk(M-1, kk)*nCk(S-M, N-kk-1)\n\n #print \"num = \" + str(num)\n ans = num/float(den)\n print(\"%.9f\" % ans)\n\n\n# MAIN\nT = int(input())\n#print \"T = \" + str(T)\nfor tt in range(0, T):\n doTest()\n\n", "import math\nf=[1]\nfor i in range(1,1002):\n f.append(i*f[i-1])\ndef c(n,r):\n if n<r:\n  return 0\n else:\n  return float(f[n]/(f[n-r]*f[r]))\nt=int(input())\nwhile t>0:\n [s,n,m,k]=[int(i) for i in input().split()]\n ways=0.0\n if k==0 or s==n:\n  print(float(1))\n elif k>=n:\n  print(float(0))\n else:\n  if n-k<m-k:\n   j=k-1\n   flag=0\n   while s-m>=0 and j>=0 and n-j-1>=0:\n    ways=ways+c(m-1,j)*c(s-m,n-j-1)\n    j-=1\n  else:    \n   j=k\n   flag=1\n   while s-m>=0 and j<m and n-j-1>=0:\n    ways=ways+c(m-1,j)*c(s-m,n-j-1)\n    j+=1\n  p=ways/c(s-1,n-1)\n  if flag==0:\n   p=1-p\n  print(p)\n t-=1\n", "import math\nf=[1]\nfor i in range(1,1002):\n f.append(i*f[i-1])\ndef c(n,r):\n if n<r:\n  return 0\n else:\n  return float(f[n]/(f[n-r]*f[r]))\nt=int(input())\nwhile t>0:\n [s,n,m,k]=[int(i) for i in input().split()]\n ways=0.0\n if k==0 or s==n:\n  print(float(1))\n elif k>=n:\n  print(float(0))\n else:\n  j=k-1\n  flag=0\n  while s-m>=0 and j>=0 and n-j-1>=0:\n   ways=ways+c(m-1,j)*c(s-m,n-j-1)\n   j-=1\n  p=ways/c(s-1,n-1)\n  p=(1-p)\n  print(p)\n t-=1\n"]