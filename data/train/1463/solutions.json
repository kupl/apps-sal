["def ugcd(n):\r\n  ans = [[1]]\r\n  if(n==1):\r\n    return ans\r\n  elif(n%2==1):\r\n    ans = [[1, 2, n]]\r\n  else:\r\n    ans = [[1, 2]]\r\n  for k in range(1, int(n//2)):\r\n    ans.append([k*2+1, k*2+2])\r\n  return ans\r\nt = int(input())\r\nfor i in range(t):\r\n  n = int(input())\r\n  s = (ugcd(n))\r\n  print(len(s))\r\n  for j in range(len(s)):\r\n    print(len(s[j]), end=\" \")\r\n    print(*s[j])", "def ugcd(n):\r\n  ans = [[1]]\r\n  if(n==1):\r\n    return ans\r\n  elif(n%2==1):\r\n    ans = [[1, 2, n]]\r\n  else:\r\n    ans = [[1, 2]]\r\n  for k in range(1, int(n//2)):\r\n    ans.append([k*2+1, k*2+2])\r\n    \r\n  return ans\r\n\r\ntest = int(input())\r\nfor i in range(test):\r\n  n = int(input())\r\n  p = (ugcd(n))\r\n  print(len(p))\r\n  for j in range(len(p)):\r\n    print(len(p[j]), end=\" \")\r\n    print(*p[j])", "try:\r\n    for _ in range(int(input())):\r\n        n = int(input())\r\n        if n == 1:\r\n            print(1)\r\n            print(1, 1)\r\n        elif n == 2:\r\n            print(1)\r\n            print(2, 1, 2)\r\n        elif n == 3:\r\n            print(1)\r\n            print(3, 1, 2, 3)\r\n        else:\r\n            days = int(n / 2)\r\n            if n % 2 == 0:\r\n                print(days)\r\n                for j in range(1, n + 1, 2):\r\n                    print(2, j, j + 1)\r\n            else:\r\n                print(days)\r\n                print(3, 1, 2, 3)\r\n                for j in range(4, n + 1, 2):\r\n                        print(2, j, j + 1)\r\nexcept EOFError as e:\r\n    print(end=\" \")\r\n", "from itertools import combinations\r\n\r\ntry:\r\n    for _ in range(int(input())):\r\n        def gcd(a, b):\r\n            if a == 0 or b == 0: \r\n                return 0\r\n            if a == b: \r\n                return a\r\n            if a > b:\r\n                return gcd(a - b, b)\r\n            return gcd(a, b - a)\r\n\r\n\r\n        def areNocoprime(arr):\r\n            if gcd(arr[0], arr[1]) == 1:\r\n                return True\r\n            else:\r\n                return False\r\n\r\n\r\n        def iscoprime(arr):\r\n            arr2 = list(combinations(arr, 2))\r\n            arr3 = [areNocoprime(i) for i in arr2]\r\n            if False in arr3:\r\n                return False\r\n            return True\r\n\r\n\r\n        def isarraycoprime(arr, n):\r\n            arr2 = []\r\n            arr2.extend(arr)\r\n            arr2.append(n)\r\n            if iscoprime(arr2) is True:\r\n                return arr2\r\n            else:\r\n                return arr\r\n            \r\n        sum = 0\r\n        n = int(input())\r\n        pages = [i for i in range(1, n + 1)]\r\n        big_arr = []\r\n        small_arr = []\r\n        summ = 0\r\n        while pages.count(0) != n:\r\n            for i in range(0, n):\r\n                if pages[i] != 0:\r\n                    x = len(small_arr)\r\n                    small_arr = isarraycoprime(small_arr, pages[i])\r\n                    y = len(small_arr)\r\n                    if x != y:\r\n                        pages[i] = 0\r\n            big_arr.append(small_arr)\r\n            small_arr = []\r\n        print(len(big_arr))\r\n        for i in big_arr:\r\n            print(len(i), *i)\r\n\r\nexcept EOFError as e:\r\n    print(end=\" \")", "from itertools import combinations\r\n\r\ntry:\r\n    for _ in range(int(input())):\r\n        def __gcd(a, b):\r\n            if a == 0 or b == 0: return 0\r\n            if a == b: return a\r\n            if a > b:\r\n                return __gcd(a - b, b)\r\n            return __gcd(a, b - a)\r\n\r\n\r\n        def areNocoprime(arr):\r\n            if __gcd(arr[0], arr[1]) == 1:\r\n                return True\r\n            else:\r\n                return False\r\n\r\n\r\n        def iscoprime(arr):\r\n            arr2 = list(combinations(arr, 2))\r\n            arr3 = [areNocoprime(i) for i in arr2]\r\n            if False in arr3:\r\n                return False\r\n            return True\r\n\r\n\r\n        def isarraycoprime(arr, n):\r\n            arr2 = []\r\n            arr2.extend(arr)\r\n            arr2.append(n)\r\n            if iscoprime(arr2) is True:\r\n                return arr2\r\n            else:\r\n                return arr\r\n            \r\n        sum = 0\r\n        n = int(input())\r\n        pages = [i for i in range(1, n + 1)]\r\n        big_arr = []\r\n        small_arr = []\r\n        summ = 0\r\n        while pages.count(0) != n:\r\n            for i in range(0, n):\r\n                if pages[i] != 0:\r\n                    x = len(small_arr)\r\n                    small_arr = isarraycoprime(small_arr, pages[i])\r\n                    y = len(small_arr)\r\n                    if x != y:\r\n                        pages[i] = 0\r\n            big_arr.append(small_arr)\r\n            small_arr = []\r\n        print(len(big_arr))\r\n        for i in big_arr:\r\n            print(len(i), *i)\r\n\r\nexcept EOFError as e:\r\n    print(end=\" \")", "# cook your dish here\ntest=int(input())\nwhile test>0:\n  n=int(input())\n  if n==1:\n    print(1)\n    print(1,1)\n  else:\n    print(n//2)\n    if n%2==0:\n      i=1\n      while i<=n:\n        print(2,end=' ')\n        print(i,end=' ')\n        i+=1\n        print(i,end=' ')\n        i+=1\n        print()\n    else:\n      i=1\n      print(3,end=' ')\n      print(i,end=' ')\n      i+=1\n      print(i,end=' ')\n      i+=1\n      print(i,end=' ')\n      i+=1\n      print()\n      while i<=n:\n        print(2,end=' ')\n        print(i,end=' ')\n        i+=1\n        print(i,end=' ')\n        i+=1\n        print()\n  test-=1\n", "# cook your dish here\nfor _ in range(int(input())):\n    N=int(input())\n    seq=N//2\n    if(N==1):\n        print(1)\n        print(1,1)\n    elif(N==2):\n        print(seq)\n        print(2,1,2)\n    elif(N%2!=0):\n        print(seq)\n        for i in range(1,N+1,2):\n            if(i==1):\n                print(3,1,i+1,i+2)\n            elif(i>=4):\n                print(2,i-1,i)\n    else:\n        print(seq)\n        for i in range(1,N+1,2):\n            if(i==1):\n                print(2,1,i+1)\n            elif(i>=3):\n                print(2,i,i+1)", "# cook your dish here\nimport math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = []\n    if n<=3:\n        print(1)\n        print(1,n)\n    else:\n        l.append([3,1,2,3])\n        for i in range(4,n,2):\n            l.append([2,i,i+1])\n        if n%2==0:\n            l.append([1,n])\n        print(len(l))\n        for i in l:\n            print(*i)\n        \n", "def gcd(a, b): \n    if (b == 0): \n         return a \n    return gcd(b, a%b)\n\ntestcase = int(input())\nfor tes in range(testcase) :\n    n = int(input())\n    arr = []\n    for i in range(2, n+1, 2) :\n        arr.append([i])\n    leng = len(arr)\n    for i in range(1, n+1, 2) :\n        flag1 = False\n        for j in range(leng) :\n            flag2 = True\n            for k in arr[j] :\n                if gcd(i, k) != 1 and i!=1 and k!=1 :\n                    flag2 = False\n                    break\n            if flag2 :\n                arr[j].append(i)\n                flag1 = True\n                break\n        if not flag1 :\n            arr.append([i])\n            leng += 1\n    print(len(arr))\n    for ele in arr :\n        print(len(ele), end=' ')\n        for i in ele :\n            print(i, end=' ')\n        print()", "# cook your dish here\ndef gcd(a, b):\n    while True :\n        if (b == 0): \n            return a\n        c = b\n        b = a%b\n        a = c\ntestcase = int(input())\nfor tes in range(testcase) :\n    n = int(input())\n    arr = []\n    left = [i for i in range(3, n+1, 2)]\n    for i in range(2, n+1, 2) :\n        arr.append([i])\n    leng = len(arr)\n    if n > 1 :\n        arr[0].append(1)\n    if n == 1 :\n        arr.append([1])\n    num = 0\n    np = 3\n    while len(left) > 0 :\n        if num == 0 or num > n :\n            num = left[0]\n            pnum = num\n            i = 0\n            p = np\n            np += 2\n        if num in left :\n            left.remove(num)\n            flag1 = False\n            while i<len(arr) :\n                flag2 = True\n                for j in arr[i] :\n                    if num%j==0 or ( j!=1 and gcd(num, j) != 1) :\n                        flag2 = False\n                        break\n                if flag2 :\n                    arr[i].append(num)\n                    num = (p*pnum)\n                    p += 2\n                    flag1 = True\n                    break\n                i += 1\n            if not flag1 :\n                arr.append([i])\n                num = (p*pnum)\n                p += 2\n        else :\n            num = (p*pnum)\n            p += 2\n    print(len(arr))\n    for ele in arr :\n        print(len(ele), end=' ')\n        for i in ele :\n            print(i, end=' ')\n        print()", "# cook your dish here\nimport math\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = []\n    if n <= 3:\n        print(1)\n        print(n, end=\" \")\n        for i in range(1, n + 1):\n            print(str(i), end=\" \")\n        print()\n    else:\n        print(math.ceil((n - 3) / 2) + 1)\n        a = [\"3 1 2 3\"]\n        for i in range(4, n, 2):\n            a.append(\"2 \" + str(i) + \" \" + str(i + 1))\n        if (n & 1) == 0:\n            a.append(\"1 \"+str(n))\n        print(*a, sep=\"\\n\")\n", "# cook your dish here\nfor _ in range(int(input())):\n    \n    n=int(input())\n    if n<=3:\n        print(1)\n        ans=[]\n        for i in range(n):\n            ans.append(i+1)\n        print(n,*ans)\n    \n    else:\n        print(n//2)\n        if n%2==0:\n            for i in range(1,n+1,2):\n                print(2,i,i+1)\n        else:\n            print(3,1,2,3)\n            for i in range(4,n+1,2):\n                print(2,i,i+1)\n\n", "# cook your dish here\nfor _ in range(int(input())):\n    \n    n=int(input())\n    if n<=3:\n        print(1)\n        ans=[]\n        for i in range(n):\n            ans.append(i+1)\n        print(n,*ans)\n    \n    else:\n        print(n//2)\n        if n%2==0:\n            for i in range(1,n+1,2):\n                print(2,i,i+1)\n        else:\n            print(3,1,2,3)\n            for i in range(4,n+1,2):\n                print(2,i,i+1)\n", "t=int(input())\r\nwhile(t>=1):\r\n  t-=1\r\n  a=int(input())\r\n  if(a==1):\r\n    print(1)\r\n    print(*[1,1])\r\n  else:\r\n    print(a//2)\r\n    for i in range(a//2-1):\r\n      print(*[2,i*2+1,i*2+2])\r\n    if(a%2==0):\r\n      print(*[2,a-1,a])\r\n    else:\r\n      print(*[3,a-2,a-1,a])\r\n ", "import math\nfor _ in range(int(input())):\n    x=int(input())\n    if x==1:\n        print(\"1\")\n        print(\"1\"+' 1')\n    elif x==2:\n        print('1')\n        print('2'+' 1'+' 2')\n    elif x==3:\n        print('1')\n        print('3'+' 1'+' 2'+' 3')\n    else:\n        c=x//2\n        if x%2==0:\n            print(c)\n            for i in range(1,x,2):\n                print(\"2\",end=' ')\n                print(i,end=' ')\n                print(i+1)\n             \n        else:\n            print(c)\n            print('3'+' 1'+' 2'+' 3')\n            for i in range(4,x,2):\n                print('2',end=' ')\n                print(i,end=' ')\n                print(i+1)\n                \n        \n            ", "for _ in range(int(input())):\n    n=int(input())\n    if n%2==0:\n        print(n//2)\n        for i in range(1,n,2):\n            print(2,i,i+1)\n    else:\n        if n==1:\n            print(1)\n            print(1,1)\n        else:\n            print(n//2)\n            print(3,1,2,3)\n            for i in range(4,n+1,2):\n                print(2,i,i+1)\n            \n", "for _ in range(int(input())):\n    n=int(input())\n    if n%2==0:\n        print(n//2)\n        for i in range(1,n+1,2):\n            print(2,i,i+1)\n    else:\n        if n==1:\n            print(1)\n            print(1,1)\n        else:\n            print(n//2)\n            print(3,1,2,3)\n            for i in range(4,n+1,2):\n                print(2,i,i+1)\n            \n", "# cook your dish here\nt=int(input())\nwhile (t>0):\n    t=t-1\n    n=int(input())\n    if n==1:\n        print(1)\n        print(1,1)\n    else:\n        print(n//2)\n        if (n%2==0):\n            for j in range(1,n,2):\n                print(2,end=' ')\n                print(j,j+1)\n        else:\n            print(3,1,2,3)\n            j=4\n            while(j<n):\n                print(2,end=' ')\n                print(j,j+1)\n                j=j+2", "# cook your dish here\n\nfor j in range(int(input())):\n    n=int(input())\n    if n==1:\n        print(1)\n        print(1,1)\n    else:\n        print(n//2)\n        if (n%2==0):\n            for j in range(1,n,2):\n                print(2,end=' ')\n                print(j,j+1)\n        else:\n            print(3,1,2,3)\n            j=4\n            while(j<n):\n                print(2,end=' ')\n                print(j,j+1)\n                j=j+2", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    if n%2==0:\n        print(n//2)\n        for i in range(1,n+1,2):\n            print(2,i,i+1)\n    else:\n        if n==1:\n            print(1)\n            print(1,1)\n        elif n>=3:\n            print(n//2)\n            print(3,1,2,3)\n            for i in range(4,n+1,2):\n                print(2,i,i+1)\n        \n        ", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        l = []\n        for y in range(1,n+1):\n            l.append(y)\n        if(n<4):\n            print(1)\n            print(n,end=\" \")\n            for i in range(1,n+1):\n                print(i,end = \" \")\n            print()\n        else:\n            if(n%2==0):\n                print(n//2)\n                for i in range(1,n+1,2):\n                    print(2,i,i+1)\n            else:\n                print(n//2)\n                print(3,1,2,3)\n                for i in range(4,n,2):\n                    print(2,i,i+1)\nexcept:\n    pass", "for _ in range(int(input())):\n    n=int(input())\n    if n==1:\n        print(1)\n        print(1,1)\n        continue\n    j=0\n    if n%2==0:\n        print(n//2)\n        s=[[2,i,i+1] for i in range(1,n+1,2)]\n        for i in s:\n            print(*i)\n    else:\n        print(n//2)\n        s=[[2,i,i+1] for i in range(4,n+1,2)]\n        s.insert(0,[3,1,2,3])\n        for i in s:\n            print(*i)", "t=int(input())\nwhile(t>0):\n    n=int(input())\n    if(n==1):\n        print(1)\n        print(1,1)\n    else:\n        print(n//2)\n        l=[]\n        for i in range(1,n,2):\n            l.append([i,i+1])\n        if(n%2!=0):\n            l[-1].append(n)\n            for i in range(len(l)-1):\n                print(2,*l[i])\n            print(3,*(l[-1]))\n        else:\n            for i in l:\n                print(2,*i)\n    t-=1", "t = int(input())\r\nwhile(t):\r\n    t-=1\r\n    n = int(input())\r\n    if n>1:\r\n        print(n//2)\r\n    else:\r\n        print(\"1\")\r\n    if n<3:\r\n        print(n,end = \" \")\r\n        for i in range(1,n+1):\r\n            print(i,end = \" \")\r\n    if n==3:\r\n        print(\"3\",end = \" \")\r\n        print(\"1\",end = \" \")\r\n        print(\"2\",end = \" \")\r\n        print(\"3\")\r\n    if n>3:\r\n        print(\"3\",end = \" \")\r\n        print(\"1\",end = \" \")\r\n        print(\"2\",end = \" \")\r\n        print(\"3\")\r\n        for i in range(4,n,2):\r\n            print(\"2\",end = \" \")\r\n            print(i,end = ' ')\r\n            print(i+1)\r\n        if(n%2 == 0):\r\n            print(\"1\",end = \" \")\r\n            print(n)"]