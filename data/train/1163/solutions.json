["T = int(input())\nfor j in range(0,T):\n line1, line2 = input(), input()\n seq = line2.split()\n current_min = 1000001\n current_max = 0\n max_spread = 0\n for i in range(0,len(seq)):\n  current_value = int(seq[i])\n  if current_min > current_value:\n   current_min = current_value\n   current_max = current_value\n  elif current_max < current_value:\n   current_max = current_value\n   if max_spread < (current_max - current_min):\n    max_spread = current_max - current_min \n if max_spread > 0:\n  print(max_spread)\n else:\n  print(\"UNFIT\")", "import sys\n\ndef main():\n t=int(input())\n while(t>0):\n  size=input()\n  n=input().split()\n  nmin = int(n[0])\n  ndiff =0\n  for i in range(1,len(n)):\n   k=int(n[i])\n   if k < nmin:\n    nmin = k\n   else:\n    if (k-nmin) > ndiff:\n     ndiff = k-nmin\n  if ndiff > 0:\n   print(ndiff)\n  else:\n   print(\"UNFIT\")\n  t-=1\n\n\ndef __starting_point():\n main()\n return\n__starting_point()", "tc = int(input()) \n\nfrom sys import stdin\n\nlines = stdin.readlines()\nout = \"\"\ni = 0\nfor line in lines:\n if i % 2 == 0:\n  i += 1\n  continue\n\n  \n nn = list(map (int, line.split()))\n greatest = 0\n least = nn[0]\n diff = 0\n for n in nn:\n  if n > least and n - least > diff:\n   diff = n - least;\n  elif n < least:\n   least = n\n   \n if diff > 0:\n  out+=str(diff) + \"\\n\"\n else:\n  out += \"UNFIT\\n\"\n i += 1\nprint(out)", "#!/usr/bin/env python\n\ndef process(t, N, G):\n Improvment = 0\n CurrentMin = G[0]\n CurrentMax = G[0]\n for n in range(1, N):\n  if CurrentMax < G[n]:\n   CurrentMax = G[n]\n   Improvment = max(Improvment, CurrentMax-CurrentMin)\n  elif CurrentMin > G[n]:\n    CurrentMin = G[n]\n    CurrentMax = G[n]\n return Improvment or 'UNFIT'\n\ndef main():\n T = int(input())\n for t in range(T):\n  N = int(input())\n  G = list(map(int, input().strip().split()[:N]))\n  if len(G) != N: print(1 / 0)\n  print(process(t, N, G))\n\nmain()\n\n", "#!/usr/bin/env python\n\ndef process(t, N, G):\n Improvment = 0\n CurrentMin = G[0]\n CurrentMax = G[0]\n for n in range(1, N):\n  if CurrentMax < G[n]:\n   CurrentMax = G[n]\n   Improvment = max(Improvment, CurrentMax-CurrentMin)\n  elif CurrentMin > G[n]:\n    CurrentMin = G[n]\n    CurrentMax = G[n]\n return Improvment or 'UNFIT'\n\ndef main():\n T = int(input())\n for t in range(T):\n  N = int(input())\n  G = list(map(int, input().strip().split()[:N]))\n  print(process(t, N, G))\n\nmain()\n\n"]