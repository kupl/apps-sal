["T = int(input())\r\n\r\nans = []\r\nfor _ in range(T):\r\n\tz = int(input())\r\n\r\n\tfor k in range(z):\r\n\t\ts = input()\r\n\r\n\tans.append((z*(z+1))//2)\r\n\r\nfor ele in ans:\r\n\tprint(ele)", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    l =[]\n    for j in range(n):\n        l.append(list(input()))\n    if(n==1):\n        print(1)\n        continue\n    elif(n==2):\n        print(3)\n        continue\n    else:\n        val = int((n*(n+1))/2)\n        count = (n-3)+1\n        flagl = 1\n        flagr = 1\n        for j in range(n):\n            if(flagl==0 and flagr==0):\n                break\n            if(l[j][j]=='0'):\n                flagl=0\n            if(l[n-j-1][n-j-1]=='0'):\n                flagr=0\n        if(flagl==0 and flagr==0):\n            print(val-count)\n        else:\n            print(val)\n", "t=int(input())\r\nfor i in range(0,t):\r\n    l=[]\r\n    N=int(input())\r\n    for j in range(0,N):\r\n        x=input()\r\n        l.append(x)\r\n    print(int(N*(N+1)/2))", "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    ind=[]\n    \n    for i in range(0,n):\n        l1=input()\n        x=list(l1)\n        y=x.index('1')\n        ind.append(y)\n        \n    count=n+1\n\n    flag=0        \n    for i in range(1,n):\n        if ind[i]==ind[i-1]+1:\n            flag=1\n        else:\n            flag=0\n            break\n    if flag==1:\n        print(int((n*(n+1))/2))\n        continue \n    \n    for i in range(2,n):\n        for j in range(0,n):\n            if (j+i)>n:\n                break\n            s=sum(ind[j:j+i])\n            f=min(ind[j:j+i])\n            if (s-i*f)==(int(((i-1)*(i))/2)):\n                count+=1\n    print(count)            \n           \n                \n        \n", "# cook your dish here\nfor _ in range(int(input())) :\n    N = int(input())\n    field = []\n    for i in range(N) :\n        field.append(list(map(int, input())))\n    print(N*(N+1)//2)", "# cook your dish here\n# cook your dish here\nfor _ in range(int(input())):\n    size=int(input())\n    power=[]\n    for i in range(size):\n        power.append(input())\n    diag=True\n    for i in range(size):\n        if power[i][i]=='0':\n            diag=False\n            break\n    if diag:\n        print((size*(size+1))//2)\n    else:\n        print(size)", "import sys\r\nfrom collections import defaultdict\r\nfrom itertools import permutations, combinations\r\nimport string\r\nfrom heapq import heapify, heappush, heappop\r\n\r\n\r\ndef solve():\r\n    sys.setrecursionlimit(int(1e5))\r\n    MOD = int(1e9) + 7\r\n    alphabets = string.ascii_lowercase; digits = string.digits\r\n    glo = globals; loc = locals;\r\n    get_arr = lambda type_=int: list(map(type_, sys.stdin.readline().rstrip('\\n').split()))\r\n    inp = lambda type_=int: type_(sys.stdin.readline().rstrip('\\n'))\r\n    pair = lambda type_=int: list(map(type_, sys.stdin.readline().rstrip('\\n').split(' ')))\r\n    debug = lambda *args: [(args[i], eval(args[i], args[-1])) for i in range(len(args)-1)]\r\n    filter_ = lambda fn, arr: list(filter(fn, arr))\r\n    map_ = lambda fn, arr: list(map(fn, arr))\r\n    t = inp()\r\n    for _ in range(t):\r\n        n = inp()\r\n        grid = []\r\n        for i in range(n):\r\n            grid.append(inp(str))\r\n        d = defaultdict(int)\r\n        res = n\r\n        l = []\r\n        for i in range(n):\r\n            s = grid[i]\r\n            for j in range(n):\r\n                if s[j] == '1':\r\n                    d[i] = j\r\n                    l.append(j)\r\n                    break\r\n        #print(d)\r\n        # print(l)\r\n        for i in range(len(grid)):\r\n            my_set = set()\r\n            my_set2 = set()\r\n            for j in range(i, len(grid)):\r\n                my_set.add(l[j])\r\n                my_set2.add(d[l[j]])\r\n                if my_set == my_set2 and len(my_set) > 1:\r\n                    res += 1\r\n        print(res)\r\n\r\n\r\nsolve()\r\n", "t=int(input())\r\nwhile t!=0:\r\n    sum1=0\r\n    n=int(input())\r\n    for i in range(1,n+1):\r\n\r\n        m=input()\r\n        sum1+=i\r\n    print(sum1)\r\n\r\n    t-=1", "try:\r\n    for i in range(int(input())):\r\n        n=int(input())\r\n        c=0\r\n        for k in range(n):\r\n            s=str(input())\r\n            a=s.find(\"1\")\r\n            if(a!=k):\r\n               c=c+1\r\n        a=((n*(n+1))//2)\r\n        print(a-c)\r\nexcept:\r\n    pass\r\n", "def fact(n):\r\n\tfactorial = 1\r\n\tif int(n) >= 1:\r\n\t\tfor i in range (1,int(n)+1):\r\n\t\t\tfactorial = factorial * i\r\n\treturn factorial\r\n\r\nt = int(input())\r\nfor i in range(t):\r\n\tn = int(input())\r\n\ts = []\r\n\tfor j in range(n):\r\n\t\ts.append(input())\t\r\n\tprint(int((fact(n)/(fact(n-2)))/2) + n)", "t=int(input())\r\nfor _ in range (t):\r\n    n=int(input())\r\n    l=[]\r\n    for i in range(n):\r\n        l.append(input())\r\n    x=int(n*(n+1)/2)\r\n    print(x)\r\n", "t = int(input())\r\n\r\nwhile t > 0:\r\n    n = int(input())\r\n    a = []\r\n    for i in range(n):\r\n        temp = input()\r\n        a.append(temp)\r\n\r\n    print((n*n+n)//2)\r\n    t-=1", "# cook your dish here\n\ndef foo(temp,p):\n    flag=True\n    for d in range(p):\n        yet = temp[d]\n        if 1 not in yet:\n            flag=False\n            break\n    return flag\n    \nT = int(input())\nfor t in range(T):\n    N = int(input())\n    lst = []\n    count=0\n    temp = []\n    for n in range(N):\n        num = list(map(int,str(input())))\n        x = num.index(1)\n        y = (n,x)\n        temp.append(y)\n        lst.append(num)\n    \n    print(int(N*(N+1)/2))", "t=int(input())\r\nfor _ in range(t):\r\n    m=[]\r\n    n=int(input())\r\n    for i in range(n):\r\n        s=input()\r\n        l=list(s)\r\n        m.append(l)\r\n\r\n    q,ans=[],[]\r\n    for i in range(len(m)):\r\n        for j in range(len(m)):\r\n            if m[i][j]==\"1\":\r\n                ans.append((i+1,j+1))\r\n                q.append([i+1,j+1])\r\n\r\n\r\n    for i in range(len(q)):\r\n        for j in range(i+1,len(q)):\r\n            x,y=[0,0],[0,0]\r\n            r=abs(q[i][0]-q[j][0])\r\n            c=abs(q[i][1]-q[j][1])\r\n            shift=abs(r-c)\r\n\r\n            if shift==0:\r\n                x=min(q[i][0],q[i][1])\r\n                y=max(q[j][0],q[j][1])\r\n                p=((x,x),(y,y))\r\n            else:\r\n                if r>c:\r\n                    a1,a2=min(q[i][1],q[j][1]),max(q[i][1],q[j][1])\r\n                    if a2+shift<=n:\r\n                        x[1]=a1\r\n                        y[1]=a2+shift\r\n                        x[0]=min(q[i][0],q[j][0])\r\n                        y[0]=max(q[i][0],q[j][0])\r\n                    elif a1-shift>=1:\r\n                        x[1]=a1-shift\r\n                        y[1]=a2\r\n                        x[0]=min(q[i][0],q[j][0])\r\n                        y[0]=max(q[i][0],q[j][0])\r\n                else:\r\n                    if q[i][0]-shift>=1:\r\n                        x[0]=q[i][0]-shift\r\n                        x[1]=min(q[i][1],q[j][1])\r\n                        y[0]=q[j][0]\r\n                        y[1]=max(q[i][1],q[j][1])\r\n                    elif q[j][0]+shift<=n:\r\n                        x[0]=q[i][0]\r\n                        x[1]=min(q[i][1],q[j][1])\r\n                        y[1]=max(q[i][1],q[j][1])\r\n                        y[0]=q[j][0]+shift\r\n\r\n                p=((x[0],x[1]),(y[0],y[1]))\r\n            ans.append(p)\r\n\r\n    d={}\r\n    for i in ans:\r\n        d[i]=1\r\n    print(len(d))", "from collections import Counter\r\n\r\nfor t in range(int(input())):\r\n    n = int(input())\r\n    pos = [(i, input().strip().find('1')) for i in range(n)]\r\n    c = n\r\n    for i in range(2, n + 1):\r\n        multiset = Counter()\r\n        for k in range(i):\r\n            multiset[pos[k][0]] += 1\r\n            multiset[pos[k][1]] += 1\r\n        if len(multiset) == i:\r\n            c += 1\r\n        for j in range(1, n - i + 1):\r\n            multiset[pos[j - 1][0]] -= 1\r\n            if multiset[pos[j - 1][0]] == 0:\r\n                del multiset[pos[j - 1][0]]\r\n            multiset[pos[j - 1][1]] -= 1\r\n            if multiset[pos[j - 1][1]] == 0:\r\n                del multiset[pos[j - 1][1]]\r\n            multiset[pos[j + i - 1][0]] += 1\r\n            multiset[pos[j + i - 1][1]] += 1\r\n            if len(multiset) == i:\r\n                c += 1\r\n    print(c)\r\n", "# cook your dish here\nfor _ in range(int(input())):\n    a=[]\n    n=int(input())\n    for i in range(n):\n        s=input()\n        a.append(s)\n    print((n*(n+1))//2)", "for __ in range(int(input())):\r\n    n=int(input())\r\n    for i in range(n):\r\n        s=input()\r\n    c=int(n*(n+1)/2)\r\n    print(c)    \r\n\r\n\r\n", "from sys import stdin as s\nt =int(s.readline())\nwhile t:\n\tt-=1\n\tn=int(s.readline())\n\tfor _ in  range(n):\n\t\ta = s.readline()\n\tprint(n*(n+1)//2)", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    swa=0\n    suma=0\n    for j in range(0,n):\n        s=input()\n        for k in range(0,n):\n            if s[k]=='1':\n                swa=swa+(abs(k-j))\n    while n>=1:\n        suma+=n \n        n=n-1\n    if swa==0:\n        print(suma)\n    else:\n        print(suma-swa+1)", "T=int(input())\nfor i in range(0,T):\n    lst2=[]\n    N=int(input())\n    for j in range(0,N):\n        lst=input()\n        lst2.append(lst)\n    print(int(N*(N+1)/2))\n", "# cook your dish here\nT=int(input())\nfor i in range(0,T):\n    lst2=[]\n    N=int(input())\n    for j in range(0,N):\n        lst=input()\n        lst2.append(lst)\n    print(int(N*(N+1)/2))", "for _ in range(int(input())):\n    n=int(input())\n    for q in range(n):\n        data=input()\n    count=0\n    ans=(n*(n+1))//2\n    print(ans)\n    # cook your dish here\n", "_ = int(input())\r\n\r\nwhile _ > 0:\r\n    n = int(input())\r\n    a = []\r\n    for i in range(n):\r\n        temp = input()\r\n        a.append(temp)\r\n    print((n*n+n)//2)\r\n    \r\n    _-=1", "for _ in range(int(input())):\r\n    n=int(input())\r\n    power=[]\r\n    for i in range(n):\r\n        power.append(input())\r\n    d = True\r\n    for i in range(n):\r\n        if(power[i][i]!='1'):\r\n            d = False\r\n            break\r\n    if(d):\r\n        ans = (n*(n+1))//2\r\n        print(ans)\r\n    else:\r\n        print(0)", "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=[]\n    for i in range(0,n):\n        l1=input()\n        l.append(l1)\n    ind=[]\n    count=n+1\n    for i in range(0,n):\n        x=list(l[i])\n        y=x.index('1')\n        ind.append(y)\n    flag=0        \n    for i in range(1,n):\n        if ind[i]==ind[i-1]+1:\n            flag=1\n        else:\n            flag=0\n            break\n    if flag==1:\n        print(int((n*(n+1))/2))\n        continue \n    \n    for i in range(2,n):\n        for j in range(0,n):\n            nl=[]\n            if (j+i)>n:\n                break\n            s=sum(ind[j:j+i])\n            f=min(ind[j:j+i])\n            if (s-i*f)==(int(((i-1)*(i))/2)):\n                count+=1\n    print(count)            \n           \n                \n        \n"]