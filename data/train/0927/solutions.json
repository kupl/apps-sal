["n, m = map(int, input().split())\nl = n\nf = 1\ns = ((n)*(n+1))//2 - l - f\nfor _ in range(m):\n k = int(input())\n if 2 <= k <= n-1 or k in [f, l]:\n  l, f = f, l\n else:\n  l = k\n print(s+l+f)", "# cook your dish here\n\nn,m=tuple(map(int,input().split()))\nif(n>2):\n arr=[1,n]\nelif(n==1):\n arr=[1]\nelif(n==2):\n arr=[1,2]\n\nfor i in range(m):\n k=int(input())\n if(n==1):\n  if(k!=arr[0]):\n   arr[0]=k\n  print(arr[0])\n elif(n==2):\n  if(k==arr[0] or k==arr[1]):\n   temp=arr[0]\n   arr[0]=arr[1]\n   arr[1]=temp\n  else:\n   arr[1]=k\n  \n  print(arr[0]+arr[1])\n \n else:\n  ans=int(n*(n+1)/2)-1-n\n  if(k==arr[0] or k==arr[1]):\n   temp=arr[0]\n   arr[0]=arr[1]\n   arr[1]=temp\n  elif(k>1 and k<n):\n   temp=arr[0]\n   arr[0]=arr[1]\n   arr[1]=temp\n  else:\n   arr[1]=k\n  ans+=arr[0]+arr[1]\n  print(ans)\n  \n   \n   \n \n", "x, y = input().split()\nx = int(x)\ny = int(y)\n\nA = []\nn = int()\nn = x*(x+1)/2\nA = [1,x]\n\nans= []\nfor i in range(y):\n a = int(input())\n\n\n\n\n if((a not in A) and (a>=x)):\n  n = n+a-A[-1]\n  A[-1]=a\n  ans.append(n)\n  \n else:\n  ans.append(n)\n  temp = A[0]\n  A[0]=A[-1]\n  A[-1]=temp\n  \n  \nfor t in ans: \n print(int(t))\n \n\n", "# cook your dish here\ntry:\n def performOperations(N, op):\n # Write your code here\n # print(N, op)\n  a = [i for i in range(1, N + 1)]\n  m = set(a)\n  s = sum(a)\n  ans = []\n  for i in op:\n   if i in m:\n    a[0], a[N-1] = a[N-1], a[0]\n   else:\n    s -= a[N - 1]\n    s += i\n    m.remove(a[N - 1])\n    m.add(i)\n    a[N-1] = i\n   ans.append(s)\n  return ans\n op=[]\n N,m=map(int,input().split())\n for _ in range(m):\n  op.append(int(input()))\n answ=performOperations(N, op)\n for i in answ: print(i)\n  \n\nexcept EOFError as error : pass", "from collections import defaultdict \n\n\ndef logic(temp, last, n, m):\n  if m < 1:\n   return \n  \n  hash = defaultdict(bool) \n  for i in range(1, n + 1):\n   hash[i] = True \n   \n  temp -= last \n  first = 1 \n\n  for i in range(m): \n\n   mohit_question = int(input() )\n \n   if hash[mohit_question ]  : \n  \n     temp += last \n     temp -= first \n     first, last = last, first #swap \n     print(temp + last)\n     \n     \n   else:\n     hash[last] = False \n     last = mohit_question \n     hash[last] = True \n     print(temp + last)\n     \n  \n  \n  \n  \ndef main():       \n  \n  \n  n, m = list(map(int, input(). split() ))\n  \n  \n  \n  \n  temp = (n * (n + 1)) // 2 #total sum \n  \n  last = n\n  \n  logic(temp,  last, n, m)\n   \n\ndef __starting_point():\n  main() \n\n\n__starting_point()", "from collections import Counter\nn, m = list(map(int, input().split()))\n\nc = Counter(list(range(1, n + 1)))\n\ns = n*(n + 1) // 2\n\nlast = n\nfirst = 1\n\nd = set(list(range(1, n + 1)))\n\nfor i in range(m):\n k = int(input())\n \n if k in d:\n  last, first = first, last\n  print(s)\n else:\n  s -= last\n  d.remove(last)\n  d.add(k)\n  s += k\n  last = k \n  print(s)\n", "\ndic = {}\nn, m = list(map(int, input().split()))\narr = list(range(1, n+1))\nsm = 0\nfor i in range(1, n+1):\n sm += i\n dic[i] = 1\n\nfor i in range(m):\n el = int(input())\n if el in dic:\n  ## swap\n  arr[0], arr[-1] = arr[-1], arr[0]\n  print(sm)\n\n else:\n  prev = arr[-1]\n  arr[-1] = el\n  sm = sm - prev + el\n\n  dic[el] = 1\n  del dic[prev]\n\n  print(sm)\n\n", "# cook your dish here\n# cook your dish here\ntry:\n n, m=map(int,input().split())\n sum1=((n*(n+1))/2)\n prev_last=n\n prev_first=1\n sum_mid=sum1-(prev_first+prev_last)\n while m:\n  k=int(input())\n  if (k>=2 and k<=n-1) or (k==prev_first) or (k==prev_last):\n   prev_last,prev_first=prev_first,prev_last\n  else:\n   prev_last=k\n  print(int(sum_mid+prev_last+prev_first))\n  m-=1\nexcept:\n pass"]