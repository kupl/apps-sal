["from sys import stdin\r\n\r\nfor _ in range(int(stdin.readline())):\r\n    n = int(stdin.readline())\r\n    n //= 2\r\n    k = 2 * int(n**0.5)\r\n    print(k)\r\n", "# cook your dish here\nfrom math import sqrt\ndef solve(N):\n\n    return int(sqrt(N/2)) * 2\n\n\nt = int(input())\n\nfor i in range(t):\n    N = int(input())\n    print(solve(N))", "# cook your dish here\nfrom math import floor,sqrt\nfor _ in range(int(input())):\n    n=int(input())\n\n    x=floor(sqrt(n/2))\n    print(x*2)", "# cook your dish here\nfrom math import floor,sqrt\nfor _ in range(int(input())):\n    n=int(input())\n    y=n/2\n    x=floor(sqrt(y))\n    print(x*2)", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: list(map(int,input().split()))\r\nmif    =lambda: list(map(float,input().split()))\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n=ii()\r\n    n//=2\r\n    a=n**(1/2)\r\n    a=int(a)\r\n    print(2*a)\r\n    \r\n", "from math import sqrt\nt = int(input())\nfor _ in range(t):\n  n = int(input())\n  print(int(sqrt(n >> 1)) << 1)", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: list(map(int,input().split()))\r\nmif    =lambda: list(map(float,input().split()))\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n=ii()\r\n    n//=2\r\n    a=n**(1/2)\r\n    a=int(a)\r\n    print(2*a)\r\n    \r\n", "# cook your dish here\nfrom collections import defaultdict \nimport sys\nimport math \nimport random\ndef get_array(): return list(map(int , sys.stdin.readline().strip().split()))\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef input(): return sys.stdin.readline().strip()\n\n\n\nfor _ in range(int(input())):\n    n = int(input())\n\n\n    print(2*int(math.sqrt(n//2)))", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\nfrom math import sqrt\nfor _ in range(inp()):\n    n = inp()\n    t = int(sqrt(n//2)//1)\n    print(2*t)\n", "for _ in range(int(input())):\n    n=int(input())\n    n=n//2\n    from math import sqrt as sq \n    \n    print(2*int(sq(n)))", "# cook your dish here\nimport math\n\nt = int(input())\nwhile t:\n    n = int(input())\n    xx = math.sqrt(n / 2);\n    print(int(2 * int(xx)))\n    t-= 1", "t = int(input())\r\nfor _ in range(t):\r\n\tn = int(input())\r\n\r\n\ts, e = 0, n\r\n\twhile s <= e:\r\n\t\tmid = (s+e)//2\r\n\t\tif n >= 2*mid*mid:\r\n\t\t\tans = mid\r\n\t\t\ts = mid+1\r\n\t\telse:\r\n\t\t\te = mid-1\r\n\tprint(2*ans)\t", "from math import sqrt\r\n\r\nfor _ in range(int(input())):\r\n    N = int(input()) // 2\r\n    print(int(sqrt(N)) * 2)", "\r\nimport math\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    n//=2\r\n    ans=0\r\n    ans+=int(math.sqrt(n))\r\n    print(int(2*ans))", "\r\nimport math\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    n//=2\r\n    ans=0\r\n    ans+=int(math.sqrt(n))\r\n    print(int(2*ans))", "'''\r\n    Auther: ghoshashis545 Ashis Ghosh\r\n    College: jalpaiguri Govt Enggineering College\r\n\r\n'''\r\nfrom os import path\r\nimport sys\r\nfrom heapq import heappush,heappop\r\nfrom functools import cmp_to_key as ctk\r\nfrom collections import deque,defaultdict as dd \r\nfrom bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\r\nfrom itertools import permutations\r\nfrom datetime import datetime\r\nfrom math import ceil,sqrt,log,gcd\r\ndef ii():return int(input())\r\ndef si():return input().rstrip()\r\ndef mi():return map(int,input().split())\r\ndef li():return list(mi())\r\nabc='abcdefghijklmnopqrstuvwxyz'\r\nmod=1000000007\r\n# mod=998244353\r\ninf = float(\"inf\")\r\nvow=['a','e','i','o','u']\r\ndx,dy=[-1,1,0,0],[0,0,1,-1]\r\n\r\ndef bo(i):\r\n    return ord(i)-ord('a')\r\n\r\nfile=1\r\n\r\n\r\n\r\n\r\n\r\n    \r\ndef solve():\r\n\r\n    for _ in range(ii()):\r\n        \r\n        n = ii()\r\n        x = n//2\r\n        c = int(sqrt(x))\r\n        print(2*c)\r\n\r\n\r\n        \r\ndef __starting_point():\r\n\r\n    if(file):\r\n\r\n        if path.exists('input.txt'):\r\n            sys.stdin=open('input.txt', 'r')\r\n            sys.stdout=open('output.txt','w')\r\n        else:\r\n            input=sys.stdin.readline\r\n    solve()\n__starting_point()", "from math import sqrt\nt=int(input())\nfor _ in range (t):\n    n=int(input())\n    room=int(sqrt(n//2))\n    print(room*2)\n", "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\tp=n//2\n\tprint(math.floor(math.sqrt(p))*2)", "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\tp=n//2\n\tprint(math.floor(math.sqrt(p))*2)", "import math\nt=int(input())\nfor _ in range(t):\n\tn=int(input())\n\tz=2*int(math.sqrt(n/2))\n\tprint(int(z))", "import math\r\nfor t in range(int(input())):\r\n    n=int(input())\r\n    print(math.floor(math.sqrt(n//2))*2)", "import math\r\ntest = int(input())\r\nfor t in range(test):\r\n\tn = int(input())\r\n\tx = int(math.sqrt(n//2))\r\n\tprint(x*2)"]