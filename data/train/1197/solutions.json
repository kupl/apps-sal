["lst=[1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    sum=0\r\n    for i in range(n):\r\n        print(lst[i],end=\" \")\r\n        sum+=lst[i]\r\n    print()\r\n    print(sum)", "#import sys,math,collections\r\nimport math,sys\r\n#from itertools import permutations,combinations\r\n\r\ndef file():\r\n\tsys.stdin = open('input.py', 'r')\r\n\tsys.stdout = open('output.py', 'w') \r\n\t\r\n\r\ndef get_array():\r\n\tl=list(map(int, input().split()))\r\n\treturn l\r\n#file()\t\r\ndef main():\r\n\t#a,b=map(int, input().split())\r\n\tfor _ in range(int(input())):\r\n\t\tn=int(input())\r\n\t\tc=0\r\n\t\tl=[1,2,4,8,13,21,31,45,66,81,97,123,148,182,204,252,290,361,401,475,565,593,662,775,822,916,970,1016,1159,1312,1395,1523,1572,1821,1896,2029,2254,2379,2510,2780,2925,3155,3354,3591,3797,3998,4297,4433,4779,4851,5123,5243,5298,5751,5998,6374,6801,6925,7460,7547,7789,8220,8503,8730,8942,9882,10200,10587,10898,11289,11614,11876,12034,12931,13394,14047,14534,14901,15166,15688,15972,16619,17355,17932,18845,19071,19631,19670,20722,21948,22526,23291,23564,23881,24596,24768,25631,26037,26255,27219,28566,29775,30094,31311,32217,32620,32912,34277,35330,35469,36204,38647,39160,39223,39943,40800,41882,42549,43394,44879,45907,47421,47512,48297,50064,50902,52703,52764,54674,55307,56663,58425,59028,60576,60995,62205,63129,64488,66999,67189,68512,68984,70170,71365,75618,76793,77571,79047,80309,83179,84345,87016,87874,88566,89607,91718,92887,93839,95103,97974,99583,101337,102040,103626,104554,106947,107205,108622,111837,112800,113949,114642,116291,117177,121238,125492,126637,129170,130986,131697,134414,134699,136635,139964,143294,144874,146605,147499,148593,150146,152318,152834,156836,157150,160782,163010,163502,164868,170984,172922,174171,177853,180249,182071,185403,188314,190726,190894,193477,196832,199646,201472,202699,205325,206811,208748,214435,217182,218011,225350,226682,229163,231694,233570,234619,235152,238727,240814,247822,253857,254305,260433,261620,262317,266550,269195,271511,274250,274753,280180,284289,290005,293034,295037,296506,298414,302663,305782,308841,317739,321173,323672,324806,329181,331018,336642,340901,343359,347001,348110,348899,362520,366119,368235,370696,371542,377450,380366,382012,382245,384957,387479,390518,391462,399174,403920,411847,412671,416880,417991,422453,433973,434773,440619,441148,443779,446065,456289,458426,462402,470670,474668,475800,481476,482868,498435,501084,508193,511258,514644,524307,527197,535369,536903,538331,542020,555275,564016,566106,567408,572027,582478,583407,585871,593257,596837,598426,599784,607794,610404,621790,624574,627703,633442,640047,648858,659179,663558,667337,672815,673522,686013,691686,693169,694279,696931,703162,711364,723249,729860,731008,739958,740124,744403,753293,768134,770113,773912,779917,787407,794900,797567,800658,813959,814414,827123,829129,839728,847430,850695,851627,862856,880796,884725,889285,896691,897160,904970,909586,915254,922852,935695,937825,938876,959937,961353,964857,970227,976356,980581,986799,1008106,1009835,1016906,1020306,1028612,1033242,1036012,1042818,1050881,1051783,1060844,1086402,1092043,1096162,1103456,1123464,1134057,1136410,1144080,1145152,1147774,1156687,1164278,1166255,1174751,1187057,1195316,1201262,1207345,1212654,1218610,1225019,1227887,1240777,1247071,1258235,1265462,1274089,1279515,1288613,1298980,1306248,1326918,1333809,1341190,1343482,1367480,1372734,1374779,1384952,1388147,1394240,1395346,1409612,1417336,1418943,1423296,1446209,1448494,1462599,1468933,1474698,1496110,1502217,1508335,1513944,1549693,1552361,1558304,1567726,1578307,1593543,1594370,1596552,1604567,1611655,1638201,1657904,1661549,1668344,1684653,1700848,1704061,1712218,1733148,1744400,1756959,1766186,1770297,1774640,1783782,1790804,1797186,1819167,1822095,1835790,1838687,1840248,1843265,1858487,1871701,1874449,1907155,1933219,1941873,1953108,1960964,1970086,1995385,2005526,2006388,2012407,2022419,2027444,2032071,2046348,2049691,2081218,2085045,2107005,2111011,2117147,2128804,2130734,2133565,2163069,2165643,2183398,2186582,2200866,2228833,2238757,2260397,2287997,2303690,2306210,2311079,2319657,2347177,2348345,2364629,2380657,2386691,2392303,2413369,2429645,2435861,2445907,2454603,2461156,2481207,2493269,2496558,2526270,2549274,2559084,2565601,2571993,2574622,2589585,2602736,2606052,2635578,2636056,2649712,2667175,2697913,2705598,2716472,2726625,2740640,2748032,2769317,2773637,2777175,2796454,2808141,2818050,2822209,2828335,2853048,2858954,2879003,2898699,2906226,2928135,2935468,2950167,2955230,2959204,2981209,2999992,3013106,3016185,3016728,3033485,3041287,3046405,3085842,3097363,3129048,3137101,3148974,3153026,3165425,3172200,3187649,3208795,3228028,3239797,3265353,3281537,3310390,3330139,3349916,3351744,3360950,3366598,3375910,3382995,3411775,3438201,3447140,3453811,3471520,3485127,3522748,3569412,3575690,3578298,3585562,3593337,3624737,3626198,3651501,3667524,3674434,3675907,3738616,3754186,3765841,3786330,3807381,3818043,3829535,3831874,3838373,3862508,3910613,3942689,3950184,3954465,3978469,3992767,4014701,4032219,4033924,4065368,4078004,4089606,4101646,4119004,4155098,4166329,4176904,4182945,4197748,4211593,4218728,4253237,4275441,4288635,4298689,4301972,4329866,4357640,4392330,4403327,4415543,4434657,4454780,4460817,4467239,4489541,4518764,4526891,4541320,4560957,4568090,4582032,4609341,4631837,4683082,4688874,4714962,4728230,4733954,4744119,4797763,4819301,4823437,4850997,4865482,4886981,4907820,4931122,4957782,5005971,5014678,5031077,5054902,5059300,5088659,5119815,5135680,5153376,5210102,5213548,5253584]\r\n\t\tfor i in range(n):\r\n\t\t\tc+=l[i]\r\n\t\t\tprint(l[i],end=\" \")\r\n\t\tprint()\r\n\t\tprint(c)\r\n\r\n\r\n\r\n\r\n\r\n\t'''def one_miss(a,b):\r\n\t\t\r\n\t\tc=0\r\n\t\tfor i in range(len(a)):\r\n\t\t\tif(a[i]!=b[i]):\r\n\t\t\t\tc+=1\r\n\t\t\tif(c>1):\r\n\t\t\t\treturn False\t\r\n\t\treturn True\t\t\r\n\tdef word_miss(a,b):\r\n\t\t#print(\"a\",a,\"b\",b)\r\n\t\tif(a[0]!=b[0]):\r\n\t\t\ta=a[1:]\r\n\t\t\tc=0\r\n\t\t\tfor i in range(len(b)):\r\n\t\t\t\tif(a[i]!=b[i]):\r\n\t\t\t\t\treturn False\r\n\t\t\treturn True\t\t\r\n\t\telse:\r\n\t\t\tc=0\r\n\t\ti,j=0,0\r\n\t\twhile(True):\r\n\t\t\tif(j>=len(b)):\r\n\t\t\t\tbreak\r\n\t\t\tif(a[i]!=b[j]):\r\n\t\t\t\tc+=1\r\n\t\t\t\ti+=1\r\n\t\t\telse:\r\n\t\t\t\ti+=1\r\n\t\t\t\tj+=1\t\r\n\t\t\tif(c>1):\r\n\t\t\t\treturn False\r\n\t\treturn True\t\t\t\t\r\n\t\r\n\t\r\n\r\n\r\n\tfor _ in range(int(input())):\r\n\t\tp,q=map(int, input().split())\r\n\t\tl,l2,dic,ans=[],[],{},[]\r\n\t\tfor i in range(p):\r\n\t\t\tl.append(input())\t\r\n\t\t\tdic[l[-1]]=1\r\n\t\tfor i in range(q):\r\n\t\t\tl2.append(input())\t\t\r\n\t\tfor i in range(q):\r\n\t\t\ttry:\r\n\t\t\t\tif(dic[l2[i]]==1):\r\n\t\t\t\t\tans.append(l2[i])\r\n\t\t\texcept:\r\n\t\t\t\tfor j in range(p):\r\n\t\t\t\t\t\tif(len(l[j])==len(l2[i])):\r\n\t\t\t\t\t\t\tif(one_miss(l[j],l2[i])):\r\n\t\t\t\t\t\t\t\tans.append(l[j])\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\telse:\t\t\r\n\t\t\t\t\t\t\tif(word_miss(l[j],l2[i])):\r\n\t\t\t\t\t\t\t\tans.append(l[j])\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\tfor i in ans:\r\n\t\t\tprint(i)'''\r\n\r\n\t\t\r\n\r\n\t\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\r\n\r\n\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\r\n\t\t\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()", "from itertools import count, islice, chain\r\nimport time\r\n \r\ndef mian_chowla():\r\n    mc = [1]\r\n    yield mc[-1]\r\n    psums = set([2])\r\n    newsums = set([])\r\n    for trial in count(2):\r\n        for n in chain(mc, [trial]):\r\n            sum = n + trial\r\n            if sum in psums:\r\n                newsums.clear()\r\n                break\r\n            newsums.add(sum)\r\n        else:\r\n            psums |= newsums\r\n            newsums.clear()\r\n            mc.append(trial)\r\n            yield trial\r\n \r\ndef pretty(s, f):\r\n    arr=[]\r\n    for n in (islice(mian_chowla(), s, f)):\r\n        arr.append(int(n))\r\n    return arr\r\n \r\ndef __starting_point():\r\n    for _ in range(int(input())):\r\n        n=int(input())\r\n        lst=pretty(0, n)\r\n        sum=0\r\n        for i in range(n):\r\n            print(lst[i],end=\" \")\r\n            sum+=lst[i]\r\n        print()\r\n        print(sum)\n__starting_point()", " \r\nfrom itertools import (islice)\r\n \r\ndef mianChowlas():\r\n    '''Mian-Chowla series - Generator constructor\r\n    '''\r\n    mcs = [1]\r\n    sumSet = set([2])\r\n    x = 1\r\n    while True:\r\n        yield x\r\n        (sumSet, mcs, x) = nextMC(sumSet, mcs, x)\r\ndef nextMC(setSums, mcs, n):\r\n    def valid(x):\r\n        for m in mcs:\r\n            if x + m in setSums:\r\n                return False\r\n        return True\r\n \r\n    x = until(valid)(succ)(n)\r\n    setSums.update(\r\n        [x + y for y in mcs] + [2 * x]\r\n    )\r\n    return (setSums, mcs + [x], x)\r\n \r\n \r\ndef main(t):\r\n    genMianChowlas = mianChowlas()\r\n    n = int(input())\r\n    k=take(n)(genMianChowlas)\r\n    print(*k)\r\n    print(sum(k))\r\n    \r\n    if t>1:\r\n        main(t-1)\r\n\r\n \r\ndef drop(n):\r\n    '''The suffix of xs after the\r\n       first n elements, or [] if n > length xs'''\r\n    def go(xs):\r\n        if isinstance(xs, list):\r\n            return xs[n:]\r\n        else:\r\n            take(n)(xs)\r\n            return xs\r\n    return lambda xs: go(xs)\r\n \r\ndef succ(x):\r\n    return 1 + x\r\n \r\n \r\ndef take(n):\r\n    '''The prefix of xs of length n,\r\n       or xs itself if n > length xs.'''\r\n    return lambda xs: (\r\n        xs[0:n]\r\n        if isinstance(xs, list)\r\n        else list(islice(xs, n))\r\n    )\r\n \r\n \r\ndef until(p):\r\n    def go(f, x):\r\n        v = x\r\n        while not p(v):\r\n            v = f(v)\r\n        return v\r\n    return lambda f: lambda x: go(f, x)\r\n \r\n \r\ndef __starting_point():\r\n    main(int(input()))\n__starting_point()", "li =[1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\ndef main(t):\n    nonlocal li\n    n = int(input())\n    print(*li[:n])\n    print(sum(li[:n]))\n    if t>1:\n        main(t-1)\nmain(int(input()))", "from itertools import count, islice, chain\r\nimport time\r\n \r\ndef mian_chowla():\r\n    mc = [1]\r\n    yield mc[-1]\r\n    psums = set([2])\r\n    newsums = set([])\r\n    for trial in count(2):\r\n        for n in chain(mc, [trial]):\r\n            sum = n + trial\r\n            if sum in psums:\r\n                newsums.clear()\r\n                break\r\n            newsums.add(sum)\r\n        else:\r\n            psums |= newsums\r\n            newsums.clear()\r\n            mc.append(trial)\r\n            yield trial\r\n \r\ndef pretty(s, f):\r\n    arr=[]\r\n    for n in (islice(mian_chowla(), s, f)):\r\n        arr.append(int(n))\r\n    return arr\r\n \r\ndef __starting_point():\r\n    lst=pretty(0, 80)\r\n    for _ in range(int(input())):\r\n        n=int(input())\r\n        sum=0\r\n        for i in range(n):\r\n            print(lst[i],end=\" \")\r\n            sum+=lst[i]\r\n        print()\r\n        print(sum)\n__starting_point()", "# cook your dish here\nli = [1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584, 5256709, 5275137, 5284688, 5286718, 5341967, 5350920, 5353400, 5361563, 5373858, 5379212, 5383044, 5459084, 5471526, 5494715, 5516357]\n\ntc = int(input())\nwhile tc:\n    tc-=1\n    n = int(input())\n    s = 0\n    for i in range(n):\n        s+=li[i]\n        print(li[i],end=\" \")\n    print()\n    print(s)", "try:\r\n    from collections import Counter\r\n    from sys import stdin, stdout\r\n    def get_ints(): return map(int, stdin.readline().strip().split())\r\n    def get_list(): return list(map(int, stdin.readline().strip().split()))\r\n    def get_string(): return stdin.readline().strip()\r\n    def get_singleInt(): return int(stdin.readline())\r\n    def main():\r\n        testCases=get_singleInt()\r\n        a=reqNumbers()\r\n        for i in range(testCases):\r\n            limit=get_singleInt()\r\n            for i in range(limit):\r\n                print(a[i],end=\" \")\r\n            print()\r\n            print(sum(a[:limit]))\r\n\r\n    def reqNumbers():\r\n        reqList = [1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998,\r\n                   4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355]\r\n        return reqList\r\n        \"\"\"uniqueList=[]#for storing all such values\r\n        lis1=[]#for storing all the sum values and double of those values\r\n        uniqueList.append(1)\r\n        uniqueList.append(2)\r\n        uniqueList.append(4)\r\n        lis1.append(2)\r\n        lis1.append(4)\r\n        lis1.append(8)\r\n        lis1.append(3)\r\n        lis1.append(5)\r\n        lis1.append(6)\r\n        for number in range(5,100000):\r\n            lis2 = []  # for storing the sums obtained by summing with current denomination \r\n            x=number\r\n            for i in range(len(uniqueList)):\r\n                lis2.append(x+uniqueList[i])\r\n            lis2.append(x+x)\r\n            count=0\r\n            for j in range(len(lis2)):\r\n                f=lis2[j]\r\n                if f in lis1:\r\n                    pass\r\n                else:\r\n                    count=count+1\r\n            if count==len(lis2):               \r\n                uniqueList.append(x)\r\n                lis1.append(x+x)\r\n                for k in range(len(uniqueList)-1):\r\n                    lis1.append(x+uniqueList[k])\r\n                print(x)\r\n        print(len(uniqueList))\r\n        return uniqueList\"\"\"\r\n\r\n    def __starting_point():\r\n        main()\r\nexcept Exception:\r\n    pass\r\n\r\n\r\n\n__starting_point()", "# cook your dish here\nlst = [1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\n\nfor _ in range(int(input())):\n    n = int(input())\n    print(*lst[:n])\n    print(sum(lst[:n]))", "import sys\r\nimport math\r\nimport heapq\r\nfrom collections import defaultdict, deque\r\nfrom decimal import *\r\ninput = sys.stdin.readline\r\n\r\ndef r():\r\n    return int(input())\r\ndef rm():\r\n    return map(int,input().split())\r\ndef rl():\r\n    return list(map(int,input().split()))\r\n\r\nfor _ in range(r()):\r\n    n=r()\r\n    already=defaultdict(int)\r\n    res=[]\r\n    sumi=0\r\n    i=1\r\n    len=0\r\n    while len!=n:\r\n        chk=True\r\n        for j in res:\r\n            if already[i+j]==1:\r\n                chk=False\r\n                break\r\n        if chk:\r\n            for j in res:\r\n                already[i+j]=1\r\n            already[i+i]=1\r\n            res.append(i)\r\n            len+=1\r\n        i+=1\r\n    print(*res)\r\n    print(sum(res))", "t=int(input())\nfor i in range(t):\n    n=int(input())\n    j=1\n    a=2\n    ans=[1]\n    sum1=set([1,2])\n    while(j<n):\n        sum2=set()\n        for k in range(len(ans)):\n            sum2.add(ans[k]+a)    \n        if(len(sum2.intersection(sum1))==0):\n            ans.append(a)\n            sum1=sum1.union(sum2)\n            sum1.add(a*2)\n            j+=1\n        else:\n            a+=1\n    for k in range(len(ans)):\n        print(ans[k],end=\" \")\n    print()\n    print(sum(ans))\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    total = 1\n    coins = [1]\n    sums = set([2])\n    num = 2\n    while len(coins) < n:\n        notIn = True\n        if 2 * num not in sums:\n            sumx = set()\n            for i in coins:\n                if i + num not in sums:\n                    sumx.add(i + num)\n                else:\n                    notIn = False\n                    break\n            if notIn:\n                sumx.add(2 * num)\n                sums = sums.union(sumx)\n                #print(sums)\n                coins.append(num)\n        num += 1\n    for i in coins:\n        print(i, end = \" \")\n    print(\"\\n\" + str(sum(coins)))", "from array import *\r\ndef main():\r\n    t=int(input())\r\n    if 1<=t<=700:\r\n        s=array(\"i\",[])\r\n        ql=array(\"i\",[])\r\n        for x in range(t):\r\n            ql.append(int(input()))\r\n        n=max(ql)\r\n        if 1<=n<=700:\r\n            l=array(\"i\",[1])\r\n            i=2\r\n            a=c=set()\r\n            b={2}\r\n            while len(l)<n:\r\n                if i-1 in l:\r\n                    c=c.union(a.union(b))\r\n                d=set()\r\n                for j in l:\r\n                    d=d.union({i+j})\r\n                if len(c.intersection({2*i}.union(d)))==0:\r\n                    b=d\r\n                    a={2*i}\r\n                    l.append(i)\r\n                i=i+1\r\n            prev=0\r\n            for j in l:\r\n                s.append(prev+j)\r\n                prev=prev+j\r\n            for j in ql:\r\n                for i in range(j):\r\n                    print(l[i],end=\" \")\r\n                print()\r\n                print(s[j-1])\r\nmain()\r\n", "temp=[1,2,4,8]\ndata=[0]*1000000\ndata[2]=1;data[3]=1;data[5]=1;data[9]=1;data[4]=1;data[6]=1;data[10]=1;data[8]=1;data[12]=1;data[16]=1;\nwhile(len(temp)<=100):\n    for i in range(temp[len(temp)-1],2*temp[len(temp)-1]+1):\n        c=0\n        for j in range(0,len(temp)):\n            if (data[i+temp[j]]==0):\n                c+=1\n        if (c==len(temp)):\n            temp.append(i)\n            for j in range(0,len(temp)):\n                data[i+temp[j]]=1\n            break\nfor i in range(int(input())):\n    n=int(input())\n    print(*temp[0:n],sep=\" \")\n    print(sum(temp[0:n]))", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\nx = [1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\n\nfor _ in range(inp()):\n    n = inp()\n    print(*x[:n])\n    print(sum(x[:n]))\n    \n", "# Why do we fall ? So we can learn to pick ourselves up.\r\n\r\nans = [0, 1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584, 5256709]\r\nanss = [0, 1, 3, 7, 15, 28, 49, 80, 125, 191, 272, 369, 492, 640, 822, 1026, 1278, 1568, 1929, 2330, 2805, 3370, 3963, 4625, 5400, 6222, 7138, 8108, 9124, 10283, 11595, 12990, 14513, 16085, 17906, 19802, 21831, 24085, 26464, 28974, 31754, 34679, 37834, 41188, 44779, 48576, 52574, 56871, 61304, 66083, 70934, 76057, 81300, 86598, 92349, 98347, 104721, 111522, 118447, 125907, 133454, 141243, 149463, 157966, 166696, 175638, 185520, 195720, 206307, 217205, 228494, 240108, 251984, 264018, 276949, 290343, 304390, 318924, 333825, 348991, 364679, 380651, 397270, 414625, 432557, 451402, 470473, 490104, 509774, 530496, 552444, 574970, 598261, 621825, 645706, 670302, 695070, 720701, 746738, 772993, 800212, 828778, 858553, 888647, 919958, 952175, 984795, 1017707, 1051984, 1087314, 1122783, 1158987, 1197634, 1236794, 1276017, 1315960, 1356760, 1398642, 1441191, 1484585, 1529464, 1575371, 1622792, 1670304, 1718601, 1768665, 1819567, 1872270, 1925034, 1979708, 2035015, 2091678, 2150103, 2209131, 2269707, 2330702, 2392907, 2456036, 2520524, 2587523, 2654712, 2723224, 2792208, 2862378, 2933743, 3009361, 3086154, 3163725, 3242772, 3323081, 3406260, 3490605, 3577621, 3665495, 3754061, 3843668, 3935386, 4028273, 4122112, 4217215, 4315189, 4414772, 4516109, 4618149, 4721775, 4826329, 4933276, 5040481, 5149103, 5260940, 5373740, 5487689, 5602331, 5718622, 5835799, 5957037, 6082529, 6209166, 6338336, 6469322, 6601019, 6735433, 6870132, 7006767, 7146731, 7290025, 7434899, 7581504, 7729003, 7877596, 8027742, 8180060, 8332894, 8489730, 8646880, 8807662, 8970672, 9134174, 9299042, 9470026, 9642948, 9817119, 9994972, 10175221, 10357292, 10542695, 10731009, 10921735, 11112629, 11306106, 11502938, 11702584, 11904056, 12106755, 12312080, 12518891, 12727639, 12942074, 13159256, 13377267, 13602617, 13829299, 14058462, 14290156, 14523726, 14758345, 14993497, 15232224, 15473038, 15720860, 15974717, 16229022, 16489455, 16751075, 17013392, 17279942, 17549137, 17820648, 18094898, 18369651, 18649831, 18934120, 19224125, 19517159, 19812196, 20108702, 20407116, 20709779, 21015561, 21324402, 21642141, 21963314, 22286986, 22611792, 22940973, 23271991, 23608633, 23949534, 24292893, 24639894, 24988004, 25336903, 25699423, 26065542, 26433777, 26804473, 27176015, 27553465, 27933831, 28315843, 28698088, 29083045, 29470524, 29861042, 30252504, 30651678, 31055598, 31467445, 31880116, 32296996, 32714987, 33137440, 33571413, 34006186, 34446805, 34887953, 35331732, 35777797, 36234086, 36692512, 37154914, 37625584, 38100252, 38576052, 39057528, 39540396, 40038831, 40539915, 41048108, 41559366, 42074010, 42598317, 43125514, 43660883, 44197786, 44736117, 45278137, 45833412, 46397428, 46963534, 47530942, 48102969, 48685447, 49268854, 49854725, 50447982, 51044819, 51643245, 52243029, 52850823, 53461227, 54083017, 54707591, 55335294, 55968736, 56608783, 57257641, 57916820, 58580378, 59247715, 59920530, 60594052, 61280065, 61971751, 62664920, 63359199, 64056130, 64759292, 65470656, 66193905, 66923765, 67654773, 68394731, 69134855, 69879258, 70632551, 71400685, 72170798, 72944710, 73724627, 74512034, 75306934, 76104501, 76905159, 77719118, 78533532, 79360655, 80189784, 81029512, 81876942, 82727637, 83579264, 84442120, 85322916, 86207641, 87096926, 87993617, 88890777, 89795747, 90705333, 91620587, 92543439, 93479134, 94416959, 95355835, 96315772, 97277125, 98241982, 99212209, 100188565, 101169146, 102155945, 103164051, 104173886, 105190792, 106211098, 107239710, 108272952, 109308964, 110351782, 111402663, 112454446, 113515290, 114601692, 115693735, 116789897, 117893353, 119016817, 120150874, 121287284, 122431364, 123576516, 124724290, 125880977, 127045255, 128211510, 129386261, 130573318, 131768634, 132969896, 134177241, 135389895, 136608505, 137833524, 139061411, 140302188, 141549259, 142807494, 144072956, 145347045, 146626560, 147915173, 149214153, 150520401, 151847319, 153181128, 154522318, 155865800, 157233280, 158606014, 159980793, 161365745, 162753892, 164148132, 165543478, 166953090, 168370426, 169789369, 171212665, 172658874, 174107368, 175569967, 177038900, 178513598, 180009708, 181511925, 183020260, 184534204, 186083897, 187636258, 189194562, 190762288, 192340595, 193934138, 195528508, 197125060, 198729627, 200341282, 201979483, 203637387, 205298936, 206967280, 208651933, 210352781, 212056842, 213769060, 215502208, 217246608, 219003567, 220769753, 222540050, 224314690, 226098472, 227889276, 229686462, 231505629, 233327724, 235163514, 237002201, 238842449, 240685714, 242544201, 244415902, 246290351, 248197506, 250130725, 252072598, 254025706, 255986670, 257956756, 259952141, 261957667, 263964055, 265976462, 267998881, 270026325, 272058396, 274104744, 276154435, 278235653, 280320698, 282427703, 284538714, 286655861, 288784665, 290915399, 293048964, 295212033, 297377676, 299561074, 301747656, 303948522, 306177355, 308416112, 310676509, 312964506, 315268196, 317574406, 319885485, 322205142, 324552319, 326900664, 329265293, 331645950, 334032641, 336424944, 338838313, 341267958, 343703819, 346149726, 348604329, 351065485, 353546692, 356039961, 358536519, 361062789, 363612063, 366171147, 368736748, 371308741, 373883363, 376472948, 379075684, 381681736, 384317314, 386953370, 389603082, 392270257, 394968170, 397673768, 400390240, 403116865, 405857505, 408605537, 411374854, 414148491, 416925666, 419722120, 422530261, 425348311, 428170520, 430998855, 433851903, 436710857, 439589860, 442488559, 445394785, 448322920, 451258388, 454208555, 457163785, 460122989, 463104198, 466104190, 469117296, 472133481, 475150209, 478183694, 481224981, 484271386, 487357228, 490454591, 493583639, 496720740, 499869714, 503022740, 506188165, 509360365, 512548014, 515756809, 518984837, 522224634, 525489987, 528771524, 532081914, 535412053, 538761969, 542113713, 545474663, 548841261, 552217171, 555600166, 559011941, 562450142, 565897282, 569351093, 572822613, 576307740, 579830488, 583399900, 586975590, 590553888, 594139450, 597732787, 601357524, 604983722, 608635223, 612302747, 615977181, 619653088, 623391704, 627145890, 630911731, 634698061, 638505442, 642323485, 646153020, 649984894, 653823267, 657685775, 661596388, 665539077, 669489261, 673443726, 677422195, 681414962, 685429663, 689461882, 693495806, 697561174, 701639178, 705728784, 709830430, 713949434, 718104532, 722270861, 726447765, 730630710, 734828458, 739040051, 743258779, 747512016, 751787457, 756076092, 760374781, 764676753, 769006619, 773364259, 777756589, 782159916, 786575459, 791010116, 795464896, 799925713, 804392952, 808882493, 813401257, 817928148, 822469468, 827030425, 831598515, 836180547, 840789888, 845421725, 850104807, 854793681, 859508643, 864236873, 868970827, 873714946, 878512709, 883332010, 888155447, 893006444, 897871926, 902758907, 907666727, 912597849, 917555631, 922561602, 927576280, 932607357, 937662259, 942721559, 947810218, 952930033, 958065713, 963219089, 968429191, 973642739, 978896323, 984153032]\r\n\r\n\r\nt = int(input())\r\nfor _ in range(0,t):\r\n    n = int(input())\r\n    print(*ans[1:n+1])\r\n    print(anss[n])\r\n\r\n\r\n\"\"\"\r\n\r\n4\r\n1\r\n2\r\n3\r\n4\r\n\r\n\r\n\"\"\"", "l=[1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688]\n\ntry:\n    for _ in range(int(input())):\n        n=int(input())\n        print(*l[:n])\n        print(sum((l[:n])))    \n                    \n                            \n        \n    \nexcept:\n    pass", "arr=[1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    sum=0\n    for j in range(n):\n        sum+=arr[j]\n        print(arr[j],end=\" \")\n    print(\"\")\n    print(sum)", "import sys\r\n# sys.stdin = open('input.txt', 'r') \r\n# sys.stdout = open('output.txt', 'w')\r\n \r\nimport math\r\nimport collections\r\nfrom sys import stdin,stdout,setrecursionlimit\r\nimport bisect as bs\r\nsetrecursionlimit(2**20)\r\nM = 10**9+7\r\n    \r\nT = int(stdin.readline())\r\n# T = 1\r\n\r\na = [1, 2, 4, 8, 13, 21, 31, 45, 66, 81, 97, 123, 148, 182, 204, 252, 290, 361, 401, 475, 565, 593, 662, 775, 822, 916, 970, 1016, 1159, 1312, 1395, 1523, 1572, 1821, 1896, 2029, 2254, 2379, 2510, 2780, 2925, 3155, 3354, 3591, 3797, 3998, 4297, 4433, 4779, 4851, 5123, 5243, 5298, 5751, 5998, 6374, 6801, 6925, 7460, 7547, 7789, 8220, 8503, 8730, 8942, 9882, 10200, 10587, 10898, 11289, 11614, 11876, 12034, 12931, 13394, 14047, 14534, 14901, 15166, 15688, 15972, 16619, 17355, 17932, 18845, 19071, 19631, 19670, 20722, 21948, 22526, 23291, 23564, 23881, 24596, 24768, 25631, 26037, 26255, 27219, 28566, 29775, 30094, 31311, 32217, 32620, 32912, 34277, 35330, 35469, 36204, 38647, 39160, 39223, 39943, 40800, 41882, 42549, 43394, 44879, 45907, 47421, 47512, 48297, 50064, 50902, 52703, 52764, 54674, 55307, 56663, 58425, 59028, 60576, 60995, 62205, 63129, 64488, 66999, 67189, 68512, 68984, 70170, 71365, 75618, 76793, 77571, 79047, 80309, 83179, 84345, 87016, 87874, 88566, 89607, 91718, 92887, 93839, 95103, 97974, 99583, 101337, 102040, 103626, 104554, 106947, 107205, 108622, 111837, 112800, 113949, 114642, 116291, 117177, 121238, 125492, 126637, 129170, 130986, 131697, 134414, 134699, 136635, 139964, 143294, 144874, 146605, 147499, 148593, 150146, 152318, 152834, 156836, 157150, 160782, 163010, 163502, 164868, 170984, 172922, 174171, 177853, 180249, 182071, 185403, 188314, 190726, 190894, 193477, 196832, 199646, 201472, 202699, 205325, 206811, 208748, 214435, 217182, 218011, 225350, 226682, 229163, 231694, 233570, 234619, 235152, 238727, 240814, 247822, 253857, 254305, 260433, 261620, 262317, 266550, 269195, 271511, 274250, 274753, 280180, 284289, 290005, 293034, 295037, 296506, 298414, 302663, 305782, 308841, 317739, 321173, 323672, 324806, 329181, 331018, 336642, 340901, 343359, 347001, 348110, 348899, 362520, 366119, 368235, 370696, 371542, 377450, 380366, 382012, 382245, 384957, 387479, 390518, 391462, 399174, 403920, 411847, 412671, 416880, 417991, 422453, 433973, 434773, 440619, 441148, 443779, 446065, 456289, 458426, 462402, 470670, 474668, 475800, 481476, 482868, 498435, 501084, 508193, 511258, 514644, 524307, 527197, 535369, 536903, 538331, 542020, 555275, 564016, 566106, 567408, 572027, 582478, 583407, 585871, 593257, 596837, 598426, 599784, 607794, 610404, 621790, 624574, 627703, 633442, 640047, 648858, 659179, 663558, 667337, 672815, 673522, 686013, 691686, 693169, 694279, 696931, 703162, 711364, 723249, 729860, 731008, 739958, 740124, 744403, 753293, 768134, 770113, 773912, 779917, 787407, 794900, 797567, 800658, 813959, 814414, 827123, 829129, 839728, 847430, 850695, 851627, 862856, 880796, 884725, 889285, 896691, 897160, 904970, 909586, 915254, 922852, 935695, 937825, 938876, 959937, 961353, 964857, 970227, 976356, 980581, 986799, 1008106, 1009835, 1016906, 1020306, 1028612, 1033242, 1036012, 1042818, 1050881, 1051783, 1060844, 1086402, 1092043, 1096162, 1103456, 1123464, 1134057, 1136410, 1144080, 1145152, 1147774, 1156687, 1164278, 1166255, 1174751, 1187057, 1195316, 1201262, 1207345, 1212654, 1218610, 1225019, 1227887, 1240777, 1247071, 1258235, 1265462, 1274089, 1279515, 1288613, 1298980, 1306248, 1326918, 1333809, 1341190, 1343482, 1367480, 1372734, 1374779, 1384952, 1388147, 1394240, 1395346, 1409612, 1417336, 1418943, 1423296, 1446209, 1448494, 1462599, 1468933, 1474698, 1496110, 1502217, 1508335, 1513944, 1549693, 1552361, 1558304, 1567726, 1578307, 1593543, 1594370, 1596552, 1604567, 1611655, 1638201, 1657904, 1661549, 1668344, 1684653, 1700848, 1704061, 1712218, 1733148, 1744400, 1756959, 1766186, 1770297, 1774640, 1783782, 1790804, 1797186, 1819167, 1822095, 1835790, 1838687, 1840248, 1843265, 1858487, 1871701, 1874449, 1907155, 1933219, 1941873, 1953108, 1960964, 1970086, 1995385, 2005526, 2006388, 2012407, 2022419, 2027444, 2032071, 2046348, 2049691, 2081218, 2085045, 2107005, 2111011, 2117147, 2128804, 2130734, 2133565, 2163069, 2165643, 2183398, 2186582, 2200866, 2228833, 2238757, 2260397, 2287997, 2303690, 2306210, 2311079, 2319657, 2347177, 2348345, 2364629, 2380657, 2386691, 2392303, 2413369, 2429645, 2435861, 2445907, 2454603, 2461156, 2481207, 2493269, 2496558, 2526270, 2549274, 2559084, 2565601, 2571993, 2574622, 2589585, 2602736, 2606052, 2635578, 2636056, 2649712, 2667175, 2697913, 2705598, 2716472, 2726625, 2740640, 2748032, 2769317, 2773637, 2777175, 2796454, 2808141, 2818050, 2822209, 2828335, 2853048, 2858954, 2879003, 2898699, 2906226, 2928135, 2935468, 2950167, 2955230, 2959204, 2981209, 2999992, 3013106, 3016185, 3016728, 3033485, 3041287, 3046405, 3085842, 3097363, 3129048, 3137101, 3148974, 3153026, 3165425, 3172200, 3187649, 3208795, 3228028, 3239797, 3265353, 3281537, 3310390, 3330139, 3349916, 3351744, 3360950, 3366598, 3375910, 3382995, 3411775, 3438201, 3447140, 3453811, 3471520, 3485127, 3522748, 3569412, 3575690, 3578298, 3585562, 3593337, 3624737, 3626198, 3651501, 3667524, 3674434, 3675907, 3738616, 3754186, 3765841, 3786330, 3807381, 3818043, 3829535, 3831874, 3838373, 3862508, 3910613, 3942689, 3950184, 3954465, 3978469, 3992767, 4014701, 4032219, 4033924, 4065368, 4078004, 4089606, 4101646, 4119004, 4155098, 4166329, 4176904, 4182945, 4197748, 4211593, 4218728, 4253237, 4275441, 4288635, 4298689, 4301972, 4329866, 4357640, 4392330, 4403327, 4415543, 4434657, 4454780, 4460817, 4467239, 4489541, 4518764, 4526891, 4541320, 4560957, 4568090, 4582032, 4609341, 4631837, 4683082, 4688874, 4714962, 4728230, 4733954, 4744119, 4797763, 4819301, 4823437, 4850997, 4865482, 4886981, 4907820, 4931122, 4957782, 5005971, 5014678, 5031077, 5054902, 5059300, 5088659, 5119815, 5135680, 5153376, 5210102, 5213548, 5253584]\r\ns = [1]\r\nfor i in range(699):\r\n    s.append(s[i]+a[i+1])\r\n\r\nfor _ in range(T):\r\n    n = int(stdin.readline())\r\n    # p,q = list(map(int,stdin.readline().split()))\r\n    # a = list(map(int,stdin.readline().split()))\r\n    # w = list(map(int,stdin.readline().split()))\r\n    # q = list(map(int,stdin.readline().split()))\r\n    # b = list(map(int,stdin.readline().split()))\r\n    # s = stdin.readline().strip('\\n')  \r\n    for i in range(n):\r\n        print(a[i],end=' ')\r\n    print('')\r\n    print(s[n-1])\r\n"]