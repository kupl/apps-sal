["#!/usr/bin/env python3\n\nimport re\n\ntry:\n    while True:\n        s = input()\n        m = re.search(r\"[^a]\", s)\n        if m is None:\n            print(s[:-1], end=\"z\\n\")\n        else:\n            j = s.find('a', m.end())\n            if j == -1:\n                j = len(s)\n            print(end=s[:m.start()])\n            for i in range(m.start(), j):\n                print(end=chr((ord(s[i]) - 98) % 26 + 97))\n            print(s[j:])\n\nexcept EOFError:\n    pass\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Aug 24 13:19:53 2016\n\n@author: Felicia\n\"\"\"\n\ns = input()\nn = len(s)\nhea = -1\ntai = -1\nnew = list(s)\n\nfor i in range(n):\n    if new[i]!='a':\n        hea = i\n        for j in range(i+1,n):\n            if new[j]=='a':\n                tai = j-1\n                break\n        else:\n            tai = n-1\n        for k in range(hea,tai+1):\n            temp = ord(new[k])-1\n            new[k] = chr(temp)\n        break\n\nif hea ==-1:\n    new[n-1] = 'z'\n    \nnews = ''.join(new)\nprint(news)\n", "def shift():\n    word = input()\n    i = 0\n    shifted = ''\n    while i < len(word) - 1:\n        if word[i] != 'a':\n            break\n        shifted += word[i]\n        i += 1\n    if i == len(word) - 1 and word[i] == 'a':\n        shifted += 'z'\n        return shifted\n    while i < len(word):\n        if word[i] == 'a':\n            shifted += word[i:]\n            break\n        shifted += chr(ord(word[i]) - 1)\n        i += 1\n    return shifted\n\nprint(shift())\n", "st = input()\nst1 = \"\"\nothers = False\nlength = len(st)\nfor i in range(0, length):\n    if i == length - 1 and others is False:\n        st1 += str(chr(((ord(st[i]) - 98) % 26) + 97))\n        break\n    if st[i] == 'a':\n        if others is True:\n            st1 += st[i:length]\n            break\n        st1 += str(st[i])\n    else:\n        others = True\n        st1 += str(chr(ord(st[i]) - 1))\nprint(st1)\n", "s = input()\ntable = \"abcdefghijklmnopqrstuvwxyz\"\n\n\ndef nextchar(x):\n    index = table.index(x)\n    return table[index - 1]\nans, start = \"\", 0\nfor i in range(len(s)):\n    if s[i] != 'a':\n        ans += nextchar(s[i])\n        start = 1\n        continue\n    if s[i] == 'a' and start == 1:\n        ans += s[i:len(s)]\n        break\n    ans += s[i]\nif str(s).count('a') == len(s):\n    ans = str(s)[0:len(s) - 1] + \"z\"\nprint(ans)", "import sys\n\ndef shl(s, be, en):\n    t = s[:be];\n    for i in range(be, en):\n        if s[i]=='a':\n            t += 'z'\n        else:\n            t += chr(ord(s[i])-1)\n    return t+s[en:]\n\ns = input()\ni = 0\nL = len(s)\nwhile i<L and s[i]=='a':\n    i += 1\nif i==L:\n    print(s[:L-1]+'z')\n    return\n    \nj = i+1\nwhile j<L and s[j]!='a':\n    j += 1\nprint(shl(s,i,j))\n", "def findNot(string, char):\n    for i in range(len(string)):\n        if string[i] != char:\n            return i\n    return len(string) - 1\n\ns = input()\nbeg = findNot(s, \"a\")\nres = s[0:beg]\nfor i in range(beg, len(s)):\n    if i != beg and s[i] == \"a\":\n        res += s[i:]\n        break\n    if s[i] == \"a\":\n        res += \"z\"\n    else:\n        res += chr(ord(s[i]) - 1)\nprint(res)", "letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g','h', 'i', 'j', 'k', 'l', 'm', 'n', \\\n'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\ndataIn = str(input())\ndata = []\nfor i in dataIn:\n    data.append(i)\n\ncount = 0\nbegin = 0\n\nif len(data) == 1:\n    if data[0] == 'a':\n        data[0] = 'z'\n    else:\n        for j in range(len(letters)):\n            if letters[j] == data[0]:\n                data[0] = letters[j-1]\nelse:\n    i = 0\n    begin = False\n    while i < len(data) - 1:\n        if data[i] == 'a':\n            i += 1\n        else:\n            break\n    for k in range(i, len(data)):\n        if data[k] == 'a' and k != len(data) - 1:\n            break\n        elif data[k] == 'a' and k == len(data) -1:\n            if not begin: data[k] = 'z'\n        else:\n            begin = True\n            for j in range(len(letters)):\n                if letters[j] == data[k]:\n                    data[k] = letters[j-1]\n\nresult = ''\nfor i in data:\n    result += i\n\nprint(result)\n", "letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g','h', 'i', 'j', 'k', 'l', 'm', 'n', \\\n'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\ndataIn = str(input())\ndata = []\nfor i in dataIn:\n    data.append(i)\n\ncount = 0\nbegin = 0\n\nif len(data) == 1:\n    if data[0] == 'a':\n        data[0] = 'z'\n    else:\n        for j in range(len(letters)):\n            if letters[j] == data[0]:\n                data[0] = letters[j-1]\nelse:\n    i = 0\n    begin = False\n    while i < len(data) - 1:\n        if data[i] == 'a':\n            i += 1\n        else:\n            break\n    for k in range(i, len(data)):\n        if data[k] == 'a' and k != len(data) - 1:\n            break\n        elif data[k] == 'a' and k == len(data) -1:\n            if not begin: data[k] = 'z'\n        else:\n            begin = True\n            for j in range(len(letters)):\n                if letters[j] == data[k]:\n                    data[k] = letters[j-1]\n\nresult = ''.join(data)\n\n\nprint(result)\n", "s = input()\nt = \"\"\n\nl = len(s)\na = 'a' * l\n\nif s == a:\n    t = 'a' * (l-1) + 'z'\nelse:\n    i = 0\n    while i < l:\n        if s[i] == 'a':\n            t += 'a'\n        else:\n            break\n        i += 1\n\n    while i < l:\n        if s[i] != 'a':\n            t += str(chr(ord(s[i]) - 1))\n        else:\n            break\n        i += 1\n\n    while i < l:\n        t += str(s[i])\n        i += 1\n\nprint(t)\n", "\ns = list(input())\n\nf = False\nc = False\n\nfor i in range(len(s)):\n\tss = s[i]\n\tif ss == 'a':\n\t\tif f is True:\n\t\t\tprint(''.join(s))\n\t\t\treturn\n\t\telse:\n\t\t\tcontinue\n\telse:\n\t\ts[i] = chr(ord(ss)-1)\n\t\tf = True\n\t\tc = True\n\t\t\nif c is False:\n\ts[-1] = 'z'\n\nprint(''.join(s))", "def change (c):\n    if c == 'a':\n        return 'z'\n    else:\n        return chr(ord(c)-1)\n\ns = list(input())\nL = len(s)\nflag = False\nfor i in range(L-1):\n    if s[i] != 'a':\n        flag = True\n        while i < L:\n            if s[i] == 'a':\n                break\n            s[i] = change(s[i])\n            i = i + 1\n        break\n    \nif not flag:\n    s[L-1] = change(s[L-1])\n\nprint(''.join(s))\n", "s=list(input())\ni=f=0\nwhile(i<len(s)):\n\twhile(i<len(s) and s[i]!='a'):\n\t\ts[i]=chr(ord(s[i])-1)\n\t\tf=1\n\t\ti+=1\n\tif(f):\n\t\tbreak\n\ti+=1\nif(f==0):\n\ts[len(s)-1]='z'\nprint(\"\".join(s))\n", "def __starting_point():\n    refer_dict = {\n        'a': 'z',\n        'b': 'a',\n        'c': 'b',\n        'd': 'c',\n        'e': 'd',\n        'f': 'e',\n        'g': 'f',\n        'h': 'g',\n        'i': 'h',\n        'j': 'i',\n        'k': 'j',\n        'l': 'k',\n        'm': 'l',\n        'n': 'm',\n        'o': 'n',\n        'p': 'o',\n        'q': 'p',\n        'r': 'q',\n        's': 'r',\n        't': 's',\n        'u': 't',\n        'v': 'u',\n        'w': 'v',\n        'x': 'w',\n        'y': 'x',\n        'z': 'y',\n    }\n    s = str(input())\n    line = s.split('a')\n    size = len(line)\n    flag = True\n    for it in range(size):\n        if line[it] != '':\n            temp = str()\n            for i in line[it]:\n                temp += refer_dict[i]\n            line[it] = temp\n            flag = False\n            break\n    if flag:\n        print(s[:-1] + 'z')\n    else:\n        print('a'.join(line))\n\n__starting_point()", "s=input()\nn=len(s)\np=list(s)\ni=0\nwhile(s[i]=='a'):\n    i+=1\n    if i==n:\n        p[n-1]='z'\n        s=\"\".join(p)\n        print(s)\n        return\nwhile(s[i]!='a'):\n    p[i]=chr(ord(s[i])-1)\n    i+=1\n    if i==n:\n        break\ns=\"\".join(p)\nprint(s)\n", "#in the nmae of god\n#Mr_Rubik\nrefer_dict = {'a': 'z','b': 'a','c': 'b','d': 'c','e': 'd','f': 'e','g': 'f','h': 'g','i': 'h','j': 'i','k': 'j','l': 'k','m': 'l','n': 'm','o': 'n','p': 'o','q': 'p','r': 'q','s': 'r','t': 's','u': 't','v': 'u','w': 'v','x': 'w','y': 'x','z': 'y',}\ns=str(input())\nline=s.split('a')\nsize=len(line)\nflag=True\nfor it in range(size):\n    if line[it] != '':\n        temp = str()\n        for i in line[it]:\n            temp += refer_dict[i]\n        line[it] = temp\n        flag = False\n        break\nif flag:\n    print(s[:-1] + 'z')\nelse:\n    print('a'.join(line))", "# print(\"Input the string\")\nst = input()\n\nif st == 'a':\n    print('z')\nelse:\n    apos = st.find('a')\n    if apos == -1:\n        #  No as in the word at all--shift everything down\n        answerlist = []\n        for ch in st:\n            newch = chr(ord(ch)-1)\n            answerlist.append(newch)\n        print(''.join(answerlist))\n    elif apos > 0:\n        #  Shift everything up to the first a\n        answerlist = []\n        for i in range(0, apos):\n            newch = chr(ord(st[i])-1)\n            answerlist.append(newch)\n        print(''.join(answerlist) + st[apos:])\n    else:\n        #  The hard case--it starts with an a\n        #  Find the first non-a\n        pos = 1\n        while pos < len(st) and st[pos] == 'a':\n            pos += 1\n        if pos == len(st):  # All letters are a--must change last letter to z\n            print(st[0:len(st)-1] + 'z')\n        else:\n            # Change everything from pos to the next a\n            nextapos = st.find('a', pos+1)\n            if nextapos == -1:  # No more as--change to the end\n                answerlist = []\n                for i in range(pos, len(st)):\n                    newch = chr(ord(st[i])-1)\n                    answerlist.append(newch)\n                print(st[0:pos] + ''.join(answerlist))\n            else:   # Change everything between pos and nextapos\n                answerlist = []\n                for i in range(pos, nextapos):\n                    newch = chr(ord(st[i])-1)\n                    answerlist.append(newch)\n                print(st[0:pos] + ''.join(answerlist) + st[nextapos:])\n             \n            \n        \n        \n", "s = list(input())\n\n\nf = False\nfor i in range(len(s)):\n    \n    if s[i] != \"a\":\n        s[i] = chr(ord(s[i]) - 1)\n        f = True\n    else:\n        if f:\n            break\n        elif i == len(s) - 1:\n            s[i] = \"z\"\n\nprint(\"\".join(s))\n", "s=list(input())\na=0\nif set(s)=={'a'}: s[-1]='{'\nfor i in range(len(s)):\n   if a==0:\n      if s[i]=='a': continue\n      else:\n         s[i]=chr(ord(s[i])-1)\n         a=1\n   else:\n      if s[i]=='a': break\n      else:\n         s[i]=chr(ord(s[i])-1)\nprint(''.join(s))", "import sys\nn = input()\ni=0\nn=n+'a'\nm=\"\"\nwhile n[i]==\"a\" and len(n)>i+1:\n    i+=1\n    m=m+'a'\nif i+1==len(n):\n    w=m[0:len(m)-1]+'z'\n    print(w)\n    return\nwhile n[i]!=\"a\" and len(n)>i:\n    m=m+chr(ord(n[i])-1)\n    i+=1\nm=m+n[i:len(n)-1]\n\nprint(m)", "import sys\nslowo = input()\nslowo=slowo+'a'\nret = \"\"\ni =0\nwhile slowo[i]==\"a\" and len(slowo)>i+1:\n    i+=1\n    ret+='a'\nif i+1==len(slowo):\n    w=slowo[0:len(slowo)-2]+'z'\n    print (w)\n    return\nwhile slowo[i]!='a' and len(slowo)>i:\n    ret=ret+chr(ord(slowo[i])-1)\n    i+=1\nret=ret+slowo[i:len(slowo)-1]\nprint(ret)", "import sys\na = list(input())\nb = \"\"\nl = 0\no = 0\nfor x in range (len(a)):\n\n    if a[x] == 'a' and l == 1:\n        break\n    elif a[x] != 'a':\n        a[x] = chr(ord(a[x])-1)\n        l = 1\n        o = 1\n\nif o == 0:\n    a[len(a)-1] = \"z\"\nprint(\"\".join(a))", "import sys\nn=input()\ni=0\nn=n+'a'\nm=\"\"\nwhile n[i]=='a' and len(n)>i+1:\n    i+=1\n    m=m+'a'\nif i+1==len(n):\n    w=m[0:len(m)-1]+'z'\n    print(w)\n    return\nwhile n[i]!='a' and len(n)>i:\n    m=m+chr(ord(n[i])-1)\n    i+=1\nm=m+n[i:len(n)-1]\n\nprint(m)\n", "S=input().split('a')\nma=1000000000000\nR='abcdefghijklmnopqrstuvwxyz'\nfor x in S :\n    if len(x)>0 :\n        ma=len(x)\n        break\nS1=''\nc=1\np=len(S)\nfor x in S :\n    if len(x)==ma and c==1 :\n        c=0\n        for i in range(len(x)) :\n            S1=S1+R[R.index(x[i])-1]\n    else :\n        S1=S1+x\n    if p!=1 :\n        S1=S1+'a'\n        p=p-1\n    \nif S1.count('a')==len(S1) and c==1 :\n    S1=S1[:len(S)-2]+'z'\nprint(S1)\n    \n        \n    \n", "'''input\naaaaaaaaaa\n'''\ndef lexi_sum(s):\n\ta = \"abcdefghijklmnopqrstuvwxyz\"\n\tt = 0\n\tfor l in s:\n\t\tt += a.index(l) + 1\n\treturn t\ndef shift(s):\n\ta = \"abcdefghijklmnopqrstuvwxyz\"\n\ts1 = \"\"\n\tfor l in s:\n\t\ts1 += a[a.index(l)-1]\n\treturn s1\ns = input()\nif set(s) == set(\"a\"):\n\tprint(s[:-1] + \"z\")\n\tquit()\ns = s.split(\"a\")\nm = s[0]\nk = 1\nwhile len(m) < 1:\n\tm = s[k]\n\tk += 1\nm1 = s.index(m)\ns[m1] = shift(m)\nprint(\"a\".join(s))\n\n\n\n\n\n"]