["v = int(input())\neps = 170\n\ndef ans(a):\n    a.sort()\n    if len(a) % 2 == 0:\n        med = a[len(a)//2]\n    else:\n        med = (a[len(a)//2] + a[len(a)//2 - 1]) // 2\n\n    l = med - med // 2\n    r = med + med // 2\n\n    c1 = c2 = 0\n\n    for i in a:\n        if i >= l and i <= r:\n            c1 += 1\n        else:\n            c2 += 1\n\n    if abs(c1 - c2) <= eps:\n        return (med, \"uniform\")\n    else:\n        return (med, \"poisson\")\n\n    \n\nfor i in range(v):\n    cur = [int(i) for i in input().split()]\n    b = ans(cur)\n    if b[1] == \"poisson\":\n        print(b[0])\n    else:\n        print((max(cur) - min(cur)) // 2)\n        \n        \n", "def sampleVariance(V):\n    X = sum(V) / len(V)\n    S = 0.0\n    for x in V:\n        S += (X-x)**2\n\n    S /= (len(V)-1)\n    return (X, S)\n\n#That awkward moment when you realized that variance is sigma^2 but you just took the stat course this semester\nfor i in range(int(input())):\n    V = list(map(int, input().split()))\n    X, S = sampleVariance(V)\n    v1 = X\n    v2 = (2*X) ** 2 / 12\n\n    if abs(v1-S) < abs(v2-S):\n        print(int(X))\n    else:\n        print(max(V)+min(V) // 2)", "from statistics import mean\nfrom math import factorial, log, ceil\n\n_lf = []\ndef logfact(n):\n    nonlocal _lf\n    CALCLEN = 2200\n    if not _lf:\n        _lf = [0]*CALCLEN\n        for i in range(2, CALCLEN):\n            _lf[i] = _lf[i-1] + log(i)\n    return _lf[n]\n\ndef unif_ml(xs):\n    #p1 = mean(xs)\n    p2 = max(xs) / 2\n    pmle = p2 #max(p1, p2) # probably actually not mle and biased towards 0\n    loglh = len(xs) * log(2*pmle + 1)\n    return loglh, pmle\n\ndef poiss_ml(xs):\n    pml = mean(xs)\n    loglh = len(xs)*pml + sum([-x*log(pml) + logfact(x) for x in xs])\n    return loglh, pml\n\ndef solve(xs):\n    ul, Pu = unif_ml(xs)\n    pl, Pp = poiss_ml(xs)\n    #print('dbg:', ul, pl)\n    if ul < pl:\n        p = 1.01*Pu\n    else:\n        p = Pp\n    print(ceil(p))\n\ndef __starting_point():\n    v = int(input())\n    for i in range(v):\n        xs = [int(x) for x in input().split()]\n        solve(xs)\n\n__starting_point()"]