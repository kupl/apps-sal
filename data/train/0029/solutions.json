["input=__import__('sys').stdin.readline\nfor _ in range(int(input())):\n\tn=int(input())\n\ts=list(map(int,input().split()))\n\tg=[[-1]for _ in range(n+1)]\n\tfor i in range(n):\n\t\tg[s[i]].append(i)\n\tinf=10**10\n\tans=[-1]*n\n\tlstunused=n\n\tfor i in range(1,n+1):\n\t\tg[i].append(n)\n\t\tmx=0\n\t\tfor j in range(1,len(g[i])):\n\t\t\tmx=max(mx,g[i][j]-g[i][j-1]-1)\n\t\tfor j in range(mx,lstunused):\n\t\t\tans[j]=i\n\t\tlstunused=min(lstunused,mx)\n\tprint(*ans)", "import sys\n\n    \ndef main():\n    #n = iinput()\n    #k = iinput() \n    #m = iinput() \n    n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    q = list(map(int, sys.stdin.readline().split()))\n    #q = linput()\n    clovar, p, x = {}, [], 1e9\n    for i in range(n):\n        if q[i] in clovar:\n            clovar[q[i]].append(i)\n        else:\n            clovar[q[i]] = [i]\n    for o in clovar:\n        t = clovar[o]\n        ma = max(t[0] + 1, n - t[-1])\n        dlinat = len(t) - 1\n        for i in range(dlinat): \n            ma = max(t[i + 1] - t[i], ma)\n        p.append([ma, o])\n    p.sort()\n    ans = [p[0]]\n    dlinap = len(p)\n    for i in range(1, dlinap):\n        if ans[-1][0] != p[i][0]:\n            ans.append(p[i])\n    ans.append([n + 1, 1e9])\n    dlina_1 = ans[0][0] - 1\n    print(*[-1 for i in range(dlina_1)], end=\" \")\n    dlinaans = len(ans) - 1\n    for i in range(dlinaans):\n        x = min(x, ans[i][1])\n        dlinax = ans[i + 1][0] - ans[i][0]\n        print(*[x for o in range(dlinax)], end=\" \")\n    print()\n           \n        \n            \n    \n    \n    \n    \n    \n    \n            \n                \n        \n    \n            \n        \n\n            \n        \n    \n                \n    \n    \n    \n            \n    \n        \n    \n\nfor i in range(int(sys.stdin.readline().strip()) ):\n    main()\n    \n", "import sys\nimport math\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    \n    S = {}\n    for el in arr:\n        S[el] = [0]\n        \n    for i in range(len(arr)):\n        S[arr[i]].append(i+1)\n        \n    G = {}\n    \n    for key in S:\n        S[key].append(n+1)\n        best = 0\n        for i in range(len(S[key]) - 1):\n            gap = abs(S[key][i] - S[key][i+1])\n            best = max(gap, best)\n        G[key] = best\n        \n    #print(G)\n    B = {}\n    for key in G:\n        l = G[key]\n        if l not in B:\n            B[l] = key\n        else:\n            B[l] = min(B[l], key)\n            \n    ans = []\n    for key in B:\n        ans.append((key, B[key]))\n        \n    ans.sort()\n    \n    pp = []\n    low = 9999999999999999\n    j = 0\n    for i in range(1, n+1):\n        if j<len(ans) and i==ans[j][0]:\n            if ans[j][1] < low:\n                low = ans[j][1]\n            j += 1\n        if low > 10**10:\n            pp.append(-1)\n        else:\n            pp.append(low)\n            \n    print(*pp)\n        \n        \n", "from collections import defaultdict\n\nT = int(input())\n\nfor t in range(T):\n    N = int(input())\n    A = [int(_) for _ in input().split()]\n\n    els = sorted(set(A))\n\n    pos = defaultdict(list)\n    for i, el in enumerate(A):\n        pos[el].append(i)\n\n    DMAX = {}\n    for el in list(pos.keys()):\n        dmax = -1\n        arr = [-1] + sorted(pos[el]) + [N]\n        for i in range(1, len(arr)):\n            dmax = max(dmax, arr[i] - arr[i-1])\n        DMAX[el] = dmax\n\n    ci = 0\n    answer = []\n\n    for i in range(N-1, -1, -1):\n        while ci < len(els) and DMAX[els[ci]] > i+1:\n            ci += 1\n        if ci >= len(els):\n            answer.append(-1)\n        else:\n            answer.append(els[ci])\n\n    print(' '.join(map(str, answer[::-1])))\n", "t = int(input())\n\nfor case in range(t):\n    n = int(input())\n    a = [int(x) - 1 for x in input().split()]\n\n    last_occ = [-1 for _ in range(n)]\n    max_dist = [float('-inf') for _ in range(n)]\n\n    for i, x in enumerate(a):\n        max_dist[x] = max(max_dist[x], i - last_occ[x])\n        last_occ[x] = i\n\n    for x in a:\n        max_dist[x] = max(max_dist[x], n - last_occ[x])\n        \n    inverted = [float('inf') for _ in range(n)]\n\n    for x in a:\n        inverted[max_dist[x] - 1] = min(inverted[max_dist[x] - 1], x)\n\n    best = float('inf')\n    for x in inverted:\n        if x != float('inf'):\n            best = min(x, best)\n\n        if best == float('inf'):\n            print(-1, end=' ')\n        else:\n            print(best + 1, end=' ')\n\n    print()\n            \n", "import sys\nsys.setrecursionlimit(1000000)\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    a = [int(x) - 1 for x in input().split()]\n    prev = [-1 for _ in range(n)]\n    val = [1 for _ in range(n)]\n    for i, x in enumerate(a):\n        delta = i - prev[x]\n        val[x] = max(val[x], delta)\n        prev[x] = i\n    for i in range(n):\n        val[i] = max(val[i], n - prev[i])\n    ans = [-1 for _ in range(n + 1)]\n    r = n + 1\n    for i in range(n):\n        if val[i] < r:\n            for j in range(val[i], r):\n                ans[j] = i + 1\n            r = val[i]\n    print(' '.join([str(x) for x in ans[1:]]))\n", "for qq in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    last = [-1] * (n+1)\n    dura = [-1] * (n+1)\n    for i in range(n):\n        dura[a[i]] = max(dura[a[i]], i-last[a[i]]-1)\n        last[a[i]] = i\n    for i in range(n+1):\n        dura[i] = max(dura[i], n-last[i]-1)\n\n    ans = [n+1] * n\n    for i in range(n+1):\n        if dura[i]==n: continue\n        ans[dura[i]] = min(ans[dura[i]], i)\n    for i in range(n-1):\n        ans[i+1] = min(ans[i+1], ans[i])\n    for i in range(n):\n        if ans[i]==n+1: ans[i] = -1\n    print(*ans)", "INF = 10 ** 15\n\n\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n\n    d = {i: 0 for i in arr}\n    last = {i: -1 for i in arr}\n    for i in range(n):\n        if last[arr[i]] == -1:\n            d[arr[i]] = max(d[arr[i]], i + 1)\n        else:\n            d[arr[i]] = max(d[arr[i]], i - last[arr[i]])\n        last[arr[i]] = i\n\n    for i in list(last.keys()):\n        d[i] = max(d[i], n - last[i])\n\n    # print(d)\n\n    d2 = {}\n    for k, v in list(d.items()):\n        if v not in d2:\n            d2[v] = INF\n        d2[v] = min(d2[v], k)\n\n    # print(d2)\n\n    ans = [INF] * n\n    for i in range(1, n + 1):\n        can = INF\n        if i != 1:\n            can = ans[i - 2]\n        if i in list(d2.keys()):\n            can = min(can, d2[i])\n        ans[i - 1] = can\n\n    for i in range(n):\n        if ans[i] == INF:\n            ans[i] = -1\n\n    print(*ans)\n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn map(int, sys.stdin.readline().split())\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n    n = II()\n    a = LI()\n    d = [[] for i in range(n+1)]\n    d2 = [0]*(n+1)\n    dp = [0]*(n+1)\n    for i in range(n):\n        if d2[a[i]] == 0:\n            d2[a[i]] = 1\n            d[a[i]].append(i)\n            dp[a[i]] = i+1\n        else:\n            d2[a[i]]+=1\n            dp[a[i]] = max(dp[a[i]], i-d[a[i]][-1])\n            d[a[i]].append(i)\n    for i in range(n):\n        dp[a[i]] = max(dp[a[i]], n-d[a[i]][-1])\n    ans = [-1]*(n+1)\n    temp = -1\n    for i in range(n+1):\n        if ans[dp[i]] == -1:\n            ans[dp[i]] = i\n    temp = -1\n    for i in range(1,n+1):\n        if ans[i]!=-1:\n            if temp == -1:\n                temp = ans[i]\n            elif ans[i]<temp:\n                temp = ans[i]\n            else:\n                ans[i] = temp\n        else:\n            ans[i] = temp\n    print(*ans[1:])", "for anynumber in range(int(input())):\n    n = int(input())\n    l = list(map(int,input().split()))\n    d = {}\n    for (index, i) in enumerate(l):\n        if i not in d.keys():\n            d[i] = [index+1,index]\n        else:\n            d[i] = [max(index-d[i][1], d[i][0]),index]\n    for i in d.keys():\n        d[i] = max(d[i][0], n-d[i][1])\n    ans = [-1 for i in range(n)]\n    for i in sorted(d.keys(), reverse=True):\n        ans[d[i]-1] = i\n    for i in range(1,n):\n        if ans[i] == -1:\n            ans[i] = ans[i-1]\n        elif ans[i-1] != -1:\n            if ans[i-1]<ans[i]:\n                ans[i] = ans[i-1]\n    for i in range(n-1):\n        print(ans[i],end=\" \")\n    print(ans[n-1])", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    dct = {}\n    for i in a:\n        dct[i] = (-1, 0)\n    now = 0\n    for i in a:\n        dct[i] = [now, max(dct[i][1], now - dct[i][0])]\n        now += 1\n    for i in dct:\n        dct[i] = max(dct[i][1], (n - dct[i][0]))\n    a = [(dct[i], i) for i in dct]\n    a.sort()\n    mini = 1000000000000000\n    now = 0\n    q = len(a)\n    for i in range(1, n + 1):\n        while now < q and a[now][0] == i:\n            mini = min(mini, a[now][1])\n            now += 1\n        if mini == 1000000000000000:\n            print(-1,end=' ')\n        else:\n            print(mini,end=' ')\n    print()", "t = int(input())\n\nfor w in range(t):\n    n = int(input())\n    a = tuple(map(int, input().split()))\n\n    d = {}\n    for i, x in enumerate(a):\n        if x not in d:\n            d[x] = [i + 1, i + 1]\n        else:\n            d[x] = [i + 1, max(d[x][1], i + 1 - d[x][0])]\n\n    l = len(a) + 1\n    for i in d:\n        d[i] = max(d[i][1], l - d[i][0])\n\n    z = {}\n    for i, x in list(d.items()):\n        if x in z:\n            if z[x] > i:\n                z[x] = i\n        else:\n            z[x] = i\n\n    q = [-1 for x in range(n)]\n    for i, x in list(z.items()):\n        q[i - 1] = x\n\n    q1 = []\n    m = -1\n    for x in q:\n        if x == -1:\n            q1.append(m)\n        else:\n            if m != -1:\n                m = min(m, x)\n            else:\n                m = x\n            q1.append(m)\n\n    print(' '.join(str(x) for x in q1))\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [0] + list(map(int, input().split()))\n\n    period = [0 for i in range(n+1)]\n    first = [-1 for i in range(n+1)]\n    last = [-1 for i in range(n+1)]\n    for i in range(1, len(a)):\n        b = a[i]\n        if first[b] == -1:\n            first[b] = i\n            last[b] = i\n        else:\n            period[b] = max(period[b], i - last[b])\n            last[b] = i\n    \n    for i in range(1, len(period)):\n        period[i] = max(period[i], n-last[i]+1)\n    \n    period = period[1:]\n    l = sorted(list(e if e[0] > first[e[1]] else (first[e[1]], e[1]) for e in zip(period, list(range(1, n+1))) if e[0] > 0))\n\n    ans = []\n    AA = n+5\n    ind = 0\n    for i in range(1, n+1):\n        if ind < len(l) and l[ind][0] == i:\n            AA = min(AA, l[ind][1])\n        ans.append(-1 if AA == n+5 else AA)\n        while ind < len(l) and l[ind][0] == i:\n            ind += 1\n            \n    print(*ans)\n        \n        \n"]