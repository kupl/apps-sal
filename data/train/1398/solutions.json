["def solve(S):\n a = set(S)\n return len(a)\n \n \nt = int(input())\n\nfor _ in range(t):\n s = input()\n print(solve(s))", "# cook your dish her\nfor _ in range(int(input())):\n s = input()\n print(len(set(s)))", "# cook your dish here\nfor test in range(int(input())):\n longest_distint_set = set(input())\n print(len(longest_distint_set))\n", "# cook your dish here\nt = 0 \ntry:\n t = int(input())\nexcept:\n pass\n\nfor _ in range(t):\n a = input()\n \n print(len(set(a)))", "from sys import stdin as sin\ndef aint():return int(input())\ndef amap():return map(int,sin.readline().split())\ndef alist():return list(map(int,sin.readline().split()))\ndef astr():return input()\n\n\n\nfor _ in range(int(input())):\n s=input()\n print(len(set(s)))", "from sys import stdin as sin\ndef aint():return int(input())\ndef amap():return map(int,sin.readline().split())\ndef alist():return list(map(int,sin.readline().split()))\ndef astr():return input()\n\n\n\nfor _ in range(int(input())):\n s=input()\n f=[0]*26\n m=0\n for i in range(len(s)):\n  if not f[ord(s[i])-97]:\n   m+=1\n   f[ord(s[i])-97]=1\n   \n print(m)", "t=int(input())\nfor _ in range(t):\n n=input()\n l1=[]\n for i in n:\n  if i not in l1:\n   l1.append(i)\n print(len(l1))", "for _ in range(int(input())):\n N=input()\n l=[ ]\n for i in N:\n  if i in l:\n   pass\n  else:\n   l.append(i)\n print(len(l))", "try:\n t = int(input())\n for w in range(t):\n  s = str(input())\n  k = list(s)\n  q = []\n  for i in range(0,len(k)):\n   if (k[i] in k):\n    if (k[i] not in q):\n     q.append(k[i])\n  \n  print(len(q)) \n \nexcept EOFError as e:\n pass", "for _ in range(int(input())):\n l=list(input())\n l2=[]\n for i in l:\n  if i not in l2:\n   l2.append(i)\n print(len(l2))", "T = int(input())\nans = []\n\nfor _ in range(T):\n A = input()\n ans.append(len(set(list(A))))\n\nfor i in ans:\n print(i)\n", "for _ in range(int(input())):\n s = set()\n for i in input():\n  s.add(i)\n print(len(s))\n", "for _ in range(int(input())):\n s=input()\n print(len(set(s)))", "from math import ceil\nfor _ in range(int(input())):\n a=list(input())\n print(len(set(a)))\n  \n", "from math import ceil\nfor _ in range(int(input())):\n a=list(input())\n print(len(set(a)))\n  \n", "t=int(input())\nfor i in range(t):\n a=input()\n print(len(set(a)))\n \n", "from collections import Counter\nt=int(input())\nfor i in range(t):\n a=input()\n print(len(set(a)))\n \n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n arr=input()\n lis=[]\n for ele in arr:\n  if ele not in lis:\n   lis.append(ele)\n print(len(lis))\n   \n \n", "T = int(input())\nfor t in range(T):\n my_str = input()\n unique_list = []\n for ch in my_str:\n  if ch not in unique_list:\n   unique_list.append(ch)\n print(len(unique_list))", "t=int(input())\nfor itr in range(t):\n s=input()\n print(len(set(s)))", "import sys, os, io\ndef rs(): return sys.stdin.readline().rstrip()\ndef ri(): return int(sys.stdin.readline())\ndef ria(): return list(map(int, sys.stdin.readline().split()))\ndef ws(s): sys.stdout.write(s + '\\n')\ndef wi(n): sys.stdout.write(str(n) + '\\n')\ndef wia(a): sys.stdout.write(' '.join([str(x) for x in a]) + '\\n')\nfrom collections import defaultdict\n\nfor _ in range(int(input())):wi(len(set(rs())))", "# cook your dish here\nfor _ in range(int(input())):\n s=input()\n a=set()\n for i in s:\n  a.add(i)\n print(len(a))", "for _ in range(int(input())):\n s = input()\n arr =[]\n for i in range(len(s)):\n  if s[i] in arr:\n   pass\n  else:\n   arr.append(s[i])\n print(len(arr))\n", "for _ in range(int(input())):\n s = input()\n print(len(set(s)))"]