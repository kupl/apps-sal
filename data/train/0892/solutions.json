["from sys import setrecursionlimit\r\nsetrecursionlimit(10 * 9)\r\n\r\ndef solve(i):\r\n    if i + k >= n:\r\n        return 1\r\n\r\n    if i in dp:\r\n        return dp[i]\r\n\r\n    mini = float('inf')\r\n    for j in range(i+1, min(n, i+k+1)):\r\n        if i == -1 or a[i] == a[j]:\r\n            mini = min(mini, solve(j) + 1)\r\n\r\n    dp[i] = mini\r\n    return dp[i]\r\n\r\n\r\nfor _ in range(int(input())):\r\n    n, k = map(int, input().split())\r\n    a = list(map(lambda x: int(x) % 2, input().split()))\r\n\r\n    le = lo = -1\r\n    se = so = -1\r\n\r\n    for i in range(n-k, n):\r\n        if a[i] == 0:\r\n            le = i\r\n            break\r\n\r\n    for i in range(n-k, n):\r\n        if a[i] == 1:\r\n            lo = i\r\n            break\r\n\r\n    m1 = float('inf')\r\n    if le != -1:\r\n        m1 = 0\r\n        while True:\r\n            lle = -1\r\n\r\n            for i in range(se + 1, se + k + 1):\r\n                if i == le:\r\n                    m1 += 2\r\n                    break\r\n\r\n                if a[i] == 0:\r\n                    lle = i\r\n\r\n            else:\r\n                if lle == -1:\r\n                    m1 = float('inf')\r\n                    break\r\n\r\n                se = lle\r\n                m1 += 1\r\n                continue\r\n\r\n            break\r\n\r\n    m2 = float('inf')\r\n    if lo != -1:\r\n        m2 = 0\r\n        while True:\r\n            llo = -1\r\n\r\n            for i in range(so + 1, so + k + 1):\r\n                if i == lo:\r\n                    m2 += 2\r\n                    break\r\n\r\n                if a[i] == 1:\r\n                    llo = i\r\n\r\n            else:\r\n                if llo == -1:\r\n                    m2 = float('inf')\r\n                    break\r\n\r\n                so = llo\r\n                m2 += 1\r\n                continue\r\n\r\n            break\r\n\r\n    if min(m1, m2) != float('inf'):\r\n        print(min(m1, m2))\r\n    else:\r\n        print(-1)", "def f(c):\r\n  t = s + c\r\n  i = 0\r\n  r = 1\r\n  while i < len(t):\r\n    j = t.rfind(c, i, i + k)\r\n    if j < 0:\r\n      return n \r\n    r += 1\r\n    i = j + 1\r\n  return r\r\n\r\nR = lambda: list(map(int, input().split()))\r\nt, = R()\r\nfor _ in range(t):\r\n  n, k = R()\r\n  n += 3\r\n  s = ''.join(f'{x%2}' for x in R())\r\n  print(min(list(map(f, '01'))) % n - 1)\r\n", "def f(c):\r\n  t = s + c\r\n  i = 0\r\n  r = 1\r\n  while i < len(t):\r\n    j = t.rfind(c, i, i + k)\r\n    if j < 0:\r\n      return n \r\n    r += 1\r\n    i = j + 1\r\n  return r\r\n\r\nR = lambda: list(map(int, input().split()))\r\nt, = R()\r\nfor _ in range(t):\r\n  n, k = R()\r\n  n += 2\r\n  s = ''.join(f'{x%2}' for x in R())\r\n  print(min(list(map(f, '01'))) % n - 1)\r\n", "def f(c):\r\n  t = s + c\r\n  i = 0\r\n  r = 1\r\n  while i < len(t):\r\n    j = t.rfind(c, i, i + k)\r\n    if j < 0:\r\n      return n \r\n    r += 1\r\n    i = j + 1\r\n  return r\r\n\r\nR = lambda: list(map(int, input().split()))\r\nt, = R()\r\nfor _ in range(t):\r\n  n, k = R()\r\n  n += 3\r\n  s = ''.join(f'{x%2}' for x in R())\r\n  print(min(list(map(f, '01'))) % n - 1)\r\n", "def f(c):\r\n  t = s + c\r\n  i = 0\r\n  r = 1\r\n  while i < len(t):\r\n    j = t.rfind(c, i, i + k)\r\n    if j < 0:\r\n      return n \r\n    r += 1\r\n    i = j + 1\r\n  return r\r\n\r\nR = lambda: list(map(int, input().split()))\r\nt, = R()\r\nfor _ in range(t):\r\n  n, k = R()\r\n  n += 3\r\n  s = ''.join(f'{x%2}' for x in R())\r\n  print(min(f(c) for c in '01') % n - 1)\r\n", "def f(s):\r\n  i = 0\r\n  r = 1\r\n  while i < len(s):\r\n    j = s.rfind(s[-1], i, i + k)\r\n    if j < 0:\r\n      return n\r\n    r += 1\r\n    i = j + 1\r\n  return r\r\n\r\nR = lambda: list(map(int, input().split()))\r\nt, = R()\r\nfor _ in range(t):\r\n  n, k = R()\r\n  n += 3\r\n  s = ''.join(f'{x%2}' for x in R())\r\n  print(min(f(s + c) for c in '01') % n - 1)\r\n", "# cook your dish here\n#2\n\nfor t in range(int(input())):\n    n, k = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n\n    if k > n:\n        print(1)\n        continue\n    #even \n    curr = -1\n    i = 0\n    temp_even_place = -1\n    ans_of_even = 0\n    while curr + k < n: #need to find a stop \n        while i-curr <= k:\n            if A[i]%2 == 0:\n                temp_even_place = i\n            i+=1\n        if temp_even_place == curr: #no new stop found\n            ans_of_even = -1\n            break\n        else:\n            ans_of_even += 1\n            curr = temp_even_place\n    if ans_of_even != -1:\n        ans_of_even += 1\n\n    #odd \n    curr = -1\n    i = 0\n    temp_odd_place = -1\n    ans_of_odd = 0\n    while curr + k < n: #need to find a stop \n        while i-curr <= k:\n            if A[i]%2 == 1:\n                temp_odd_place = i\n            i+=1\n        if temp_odd_place == curr: #no new stop found\n            ans_of_odd = -1\n            break\n        else:\n            ans_of_odd += 1\n            curr = temp_odd_place\n    if ans_of_odd != -1:\n        ans_of_odd += 1\n\n    if ans_of_even == -1 and ans_of_odd == -1:\n        print(-1)\n    elif ans_of_odd == -1 and ans_of_even != -1:\n        print(ans_of_even)\n    elif ans_of_odd != -1 and ans_of_even == -1:\n        print(ans_of_odd)\n    elif ans_of_odd != -1 and ans_of_even != -1:\n        print(min(ans_of_even,ans_of_odd) )\n    \n    \n", "import sys\r\n# sys.stdin = open('input.txt', 'r') \r\n# sys.stdout = open('output.txt', 'w')\r\n \r\nimport math\r\nimport collections\r\nfrom sys import stdin,stdout,setrecursionlimit\r\nimport bisect as bs\r\nsetrecursionlimit(2**20)\r\nM = 10**9+7\r\n    \r\nT = int(stdin.readline())\r\n# T = 1\r\n\r\nfor _ in range(T):\r\n    # n = int(stdin.readline())\r\n    n,k = list(map(int,stdin.readline().split()))\r\n    a = list(map(int,stdin.readline().split()))\r\n    # w = list(map(int,stdin.readline().split()))\r\n    # q = list(map(int,stdin.readline().split()))\r\n    # b = list(map(int,stdin.readline().split()))\r\n    # s = stdin.readline().strip('\\n')\r\n    p = [[0]]; p.append([0])\r\n    for i in range(n):\r\n        p[a[i]%2].append(i+1)\r\n    p[0].append(n+1); p[1].append(n+1)\r\n    res = [True, True]\r\n    for j in range(2):\r\n        for i in range(len(p[j])-1):\r\n            if(p[j][i+1] - p[j][i] > k):\r\n                res[j] = False\r\n                break\r\n    mn = 500000\r\n    for j in range(2):\r\n        if(not res[j]):\r\n            continue\r\n        i = 1; s = 0; m=0\r\n        while(i<len(p[j])):\r\n            if(p[j][i]-s > k):\r\n                s = p[j][i-1]\r\n                m += 1\r\n            else:\r\n                i += 1\r\n        m += 1\r\n        mn = min(mn,m)\r\n    if(mn == 500000):\r\n        print(-1)\r\n    else:\r\n        print(mn)", "import sys\r\n# sys.stdin = open('input.txt', 'r') \r\n# sys.stdout = open('output.txt', 'w')\r\n \r\nimport math\r\nimport collections\r\nfrom sys import stdin,stdout,setrecursionlimit\r\nimport bisect as bs\r\nsetrecursionlimit(2**20)\r\nM = 10**9+7\r\n    \r\nT = int(stdin.readline())\r\n# T = 1\r\n\r\nfor _ in range(T):\r\n    # n = int(stdin.readline())\r\n    n,k = list(map(int,stdin.readline().split()))\r\n    a = list(map(int,stdin.readline().split()))\r\n    # w = list(map(int,stdin.readline().split()))\r\n    # q = list(map(int,stdin.readline().split()))\r\n    # b = list(map(int,stdin.readline().split()))\r\n    # s = stdin.readline().strip('\\n')\r\n    p = [[0]]; p.append([0])\r\n    for i in range(n):\r\n        p[a[i]%2].append(i+1)\r\n    p[0].append(n+1); p[1].append(n+1)\r\n    res = [True, True]\r\n    for j in range(2):\r\n        for i in range(len(p[j])-1):\r\n            if(p[j][i+1] - p[j][i] > k):\r\n                res[j] = False\r\n                break\r\n    mn = 500000\r\n    for j in range(2):\r\n        if(not res[j]):\r\n            continue\r\n        i = 1; s = 0; m=0\r\n        while(i<len(p[j])):\r\n            if(p[j][i]-s > k):\r\n                s = p[j][i-1]\r\n                m += 1\r\n            else:\r\n                i += 1\r\n        m += 1\r\n        mn = min(mn,m)\r\n    if(mn == 500000):\r\n        print(-1)\r\n    else:\r\n        print(mn)"]