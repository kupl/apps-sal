["# cook your dish here\ndef count(k,n,m):\n    sum1=(m*(m+1))//2\n    sum2=(m*(m-1))//2\n    ct=0\n    for i in range(n):\n        for j in range(n):\n            if i<j and k[i]>k[j]:\n                ct+=sum1\n            elif j<i and k[i]>k[j]:\n                ct+=sum2\n    return ct\n\ntest=int(input())\nfor _ in range(test):\n    n,m=map(int,input().split())\n    k=list(map(int,input().split()))\n    print(count(k,n,m))\n", "# cook your dish here\n# cook your dish here\ndef sree(k, n, m):\n    sum1 = (m*(m+1))//2\n    sum2 = (m*(m-1))//2\n    shanth = 0\n    for i in range(n):\n        count = 0\n        for j in range(n):\n            if i < j and k[i] > k[j]:\n                shanth += sum1\n            elif j < i and k[i] > k[j]:\n                shanth += sum2\n    return shanth\n\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    k = list(map(int, input().split()))\n    print(sree(k, n, m))\n", "# cook your dish here\ndef sree(k, n, m):\n    sum1 = (m*(m+1))//2\n    sum2 = (m*(m-1))//2\n    shanth = 0\n    for i in range(n):\n        count = 0\n        for j in range(n):\n            if i < j and k[i] > k[j]:\n                shanth += sum1\n            elif j < i and k[i] > k[j]:\n                shanth += sum2\n    return shanth\n\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    k = list(map(int, input().split()))\n    print(sree(k, n, m))\n", "# cook your dish here\ndef sree(k, n, m):\n    sum1 = (m*(m+1))//2\n    sum2 = (m*(m-1))//2\n    shanth = 0\n    for i in range(n):\n        count = 0\n        for j in range(n):\n            if i < j and k[i] > k[j]:\n                shanth += sum1\n            elif j < i and k[i] > k[j]:\n                shanth += sum2\n    return shanth\n\n\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    k = list(map(int, input().split()))\n    print(sree(k, n, m))\n", "import sys\r\nimport math\r\nfrom collections import defaultdict\r\n\r\ndef fout(s, end='\\n'): sys.stdout.write(str(s) + end)\r\ndef fin(): return sys.stdin.readline().strip()\r\nmod = pow(10, 9)+7\r\nt = int(fin())\r\nwhile t>0:\r\n    t -= 1\r\n    n, k = map(int, fin().split())\r\n    a = [int(x) for x in fin().split()]\r\n    ans = 0\r\n    for i in range(n):\r\n        c = 0\r\n        for j in range(i):\r\n            if a[i] < a[j]:\r\n                c += 1\r\n        ans += k*(c)\r\n        for j in range(i+1, n):\r\n            if a[j] > a[i]:\r\n                c += 1\r\n        ans += k*(k-1)*(c)//2\r\n    print(ans)\r\n\r\n", "# cook your dish here\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x, suffix = 0, 0\n    for i, a_i in enumerate(arr):\n        for j, a_j in enumerate(arr):\n            if a_i > a_j: x += 1\n            if j > i:\n                if a_i > a_j: suffix += 1\n    print(x*( (k*(k-1))//2 ) + suffix*k)", "# cook your dish here\nfor _ in range(int(input())):\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    x, suffix = 0, 0\n    for i in range(n):\n        for j in range(n):\n            if arr[i] > arr[j]: x += 1\n            if j > i:\n                if arr[i] > arr[j]: suffix += 1\n    print(x*( (k*(k-1))//2 ) + suffix*k)", "# cook your dish here\nfor _ in range(int(eval(input()))):\n    n, k = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    x, suffix = 0, 0\n    for i, a_i in enumerate(arr):\n        for a_j in arr:\n            if a_i > a_j: x += 1\n        for j in range(i+1, n):\n            if a_i > arr[j]: suffix += 1\n            \n    ans = x*( (k*(k-1))//2 ) + suffix*k\n    print(ans)", "from math import *\r\nfrom collections import *\r\nfrom itertools import *\r\nfrom bisect import *\r\nfrom heapq import *\r\nfrom operator import *\r\nfrom sys import *\r\nsetrecursionlimit(1000000)\r\nd=defaultdict(lambda:0,{})\r\ndef io():\r\n    return map(int,input().split())\r\ndef op():\r\n    return list(map(int,input().split()))\r\ndef o():\r\n    return int(input())\r\ndef r(x):\r\n    if type(x)==int:\r\n        return range(x)\r\n    else:return range(len(x))\r\ndef kl(con,x=0):\r\n    if x==0:print('Yes') if con else print('No')\r\n    elif x==1:print('yes') if con else print('no')\r\n    elif x==2:print('YES') if con else print('NO')\r\nMOD = 1000000007\r\nMAX=float('inf')\r\nMIN=-float('inf')\r\np=input\r\nfor _ in r(o()):\r\n    n,k=io()\r\n    l=op()\r\n    ans=0\r\n    for i in r(l):\r\n        for j in r(l):\r\n            if l[i]>l[j]:\r\n                if i>j:\r\n                    ans+=k*(k-1)/2\r\n                elif i<j:\r\n                    ans+=k*(k+1)/2\r\n    print(int(ans))\r\n\r\n", "t = int(input())\r\nfor jack in range(t):\r\n    n, k = map(int, input().split())\r\n    a = list(map(int, input().split()))\r\n    r1 = 0\r\n    for i in range(n - 1):\r\n        m = 0\r\n        for j in range(i + 1, n):\r\n            if a[i] > a[j]:\r\n                m += 1\r\n        r1 += m\r\n    a.sort()\r\n    last, r2 = 0, 0\r\n    for i in range(n):\r\n        if a[i] != a[i - 1]:\r\n            r2 += i\r\n            last = i\r\n        else:\r\n            r2 += last\r\n    r = r1 * k + (k * (k - 1) * r2) // 2\r\n    print(r)", "for i in range(int(input())):\n    n,k=map(int,input().split())\n    s,a,l = 0,0,list(map(int,input().split()))\n    l2=2*l\n    for i in range(n-1):\n        for j in range(i+1,n):\n            if(l[i]>l[j]):a+=1\n    for i in range(n):\n        for j in range(n,2*n):\n            if(l2[i]>l2[j]):s+=1\n    print(((k*(k-1))//2)*s+k*a)", "# cook your dish here\nfor i in range(int(input())):\n    n,k=map(int,input().split())\n    s=0\n    a=0\n    l=list(map(int,input().split()))\n    l2=2*l\n    for i in range(n-1):\n        for j in range(i+1,n):\n            if(l[i]>l[j]):\n                a+=1\n    for i in range(n):\n        for j in range(n,2*n):\n            if(l2[i]>l2[j]):\n                s+=1\n    print(((k*(k-1))//2)*s+k*a)", "t = int(input())\nfor _ in range(t):\n  n, rep = map(int, input().split())\n  a = list(map(int, input().split()))\n  ans = 0\n  for i in range(len(a)):\n    l = 0\n    r = 0\n    for j in range(i, -1, -1):\n      if(a[j] < a[i]):\n        l += 1\n    for j in range(i, n, 1):\n      if(a[j] < a[i]):\n        r += 1\n    tot = l + r\n    lt = tot * (rep - 1) + r\n    ans += (rep / 2.0) * (r + lt)\n  print(int(ans))\n        \n  \n  ", "for T in range(int(input())):\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    C = [0, 0]\n    for Z in range(2):\n        L = N * (Z + 1)\n        A *= Z + 1\n        for I in range(L-1):\n            for J in range(I+1, L):\n                if A[I] > A[J]:\n                    C[Z] += 1\n    print(C[0] + (K - 1) * (C[1] + (K - 1) * (C[1] - 2 * C[0])) // 2)", "t = int(input())\r\nfor _ in range(t):\r\n    n, k = map(int, input().split())\r\n    num = list(map(int, input().split()))\r\n    sum = 0\r\n    for i in range(1, n+1):\r\n        c = num[i-1]\r\n        count_for = 0\r\n        count_bac = 0\r\n        for j in range(i, n):\r\n            if num[j] < c:\r\n                count_for += 1\r\n        for j in range(i):\r\n            if num[j] < c:\r\n                count_bac += 1\r\n        count = count_for + count_bac\r\n        p = (k*(k+1))//2 * count\r\n        p = p - k * count_bac\r\n        sum = sum + p\r\n    print(sum)\r\n\r\n", "t = int(input())\r\nfor _ in range(t):\r\n    n, k = map(int, input().split())\r\n    num = list(map(int, input().split()))\r\n    sum = 0\r\n    for i in range(1, n+1):\r\n        c = num[i-1]\r\n        count_for = 0\r\n        count_bac = 0\r\n        for j in range(i, n):\r\n            if num[j] < c:\r\n                count_for += 1\r\n        for j in range(i):\r\n            if num[j] < c:\r\n                count_bac += 1\r\n        count = count_for + count_bac\r\n        p = (k*(k+1))//2 * count\r\n        p = p - k * count_bac\r\n        sum = sum + p\r\n    print(sum)\r\n\r\n", "for _ in range(int(input())):\n    N,K=map(int,input().split())\n    ll=list(map(int,input().split()))\n    c1=0\n    c2=0\n    for i in range(N):\n        for j in range(i+1,N):\n            if ll[i]>ll[j]:\n                c1+=1\n    for i in range(N):\n        for j in range(N):\n            if ll[i]>ll[j]:\n                c2+=1\n    print(c1*K+c2*K*(K-1)//2)", "# cook your dish here\nt=int(input())\nwhile(t):\n\tt-=1\n\tn,k=map(int,input().split())\n\tarr=list(map(int,input().split()))\n\tans=[0]*n\n\tans2=[0]*n\n\tfor i in range(n):\n\t\tfor j in range(n):\n\t\t\tif(i<j and arr[i]>arr[j]):\n\t\t\t\tans[i]=ans[i]+1\n\t\t\tif(i>j and arr[i]>arr[j]):\n\t\t\t\tans2[i]=ans2[i]+1\n\t#print(ans)\n\t#print(ans2)\t\n\tfor i in range(n):\n\t\tif(ans[i]!=0):\n\t\t\tans[i]=(ans[i]*k*(k+1))//2\n\t\tif(ans2[i]!=0):\n\t\t\tans2[i]=(ans2[i]*k*(k-1))//2\n\tprint(sum(ans)+sum(ans2))", "# cook your dish here\nt=int(eval(input()))\nfor i in range(t):\n    inp = list(map(int,input().split()))\n    n=inp[0]\n    k=inp[1]\n    inp = list(map(int,input().split()))\n    before=[]\n    after=[]\n    ans=0\n    for p in range(len(inp)):\n        bef_count=0\n        af_count=0\n        for q in range(len(inp)):\n            if(q>p and inp[q]<inp[p]):\n                af_count+=1\n            elif(q<p and inp[q]<inp[p]):\n                bef_count+=1\n        ans+=af_count*(k*(k+1))//2\n        ans+=bef_count*(k*(k-1))//2\n    print(ans)", "import sys\nfrom random import choice,randint\ninp=sys.stdin.readline\nout=sys.stdout.write\nflsh=sys.stdout.flush\n \nsys.setrecursionlimit(10**9)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n \ndef MI(): return map(int, inp().strip().split())\ndef LI(): return list(map(int, inp().strip().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines().strip()]\ndef LI_(): return [int(x)-1 for x in inp().strip().split()]\ndef LF(): return [float(x) for x in inp().strip().split()]\ndef LS(): return inp().strip().split()\ndef I(): return int(inp().strip())\ndef F(): return float(inp().strip())\ndef S(): return inp().strip()\ndef pf(s): return out(s+'\\n')\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\ndef main():\n    t = I()\n    l = []\n    for _ in range(t):\n        n,k=MI()\n        a=LI()\n        lcf=[0]*n\n        lce=[0]*n\n        for i in range(n):\n            cnt1,cnt2=0,0\n            for j in a[:i]:\n                if j<a[i]:\n                    cnt1+=1\n            for j in a[i:]:\n                if j<a[i]:\n                    cnt2+=1\n            lcf[i]=cnt1\n            lce[i]=cnt2\n        ans=0\n        for i in range(n):\n            ans += lcf[i]*((k*(k-1))//2)\n        for i in range(n):\n            ans += lce[i]*((k*(k+1))//2)\n        l.append(ans)\n\n    for i in range(t):\n        pf(str(l[i]))\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\r\n    t = int(input())\r\n    \r\n    while t>0:\r\n        n,k = map(int,input().split())\r\n        l = list(map(int,input().split()))\r\n        \r\n        ll = sorted(l)\r\n        count1 = 0\r\n        \r\n        for i,val in enumerate(ll):\r\n            count1 = count1 + ( i - (ll[:i]).count(val) )\r\n        \r\n        ans = 0\r\n        \r\n        ans = ans + ( count1 * k * (k-1) ) // 2\r\n        \r\n        count2 = 0\r\n        \r\n        for i,val in enumerate(l):\r\n            temp = sum( 1 for j in l[i+1:] if j < val)\r\n            count2 = count2 + ( temp )\r\n        \r\n        ans = ans + count2*k\r\n        \r\n        print(ans)\r\n        t-=1\r\n    \r\ndef __starting_point():\r\n    main()\n__starting_point()", "#!/usr/bin/env python\r\nimport os\r\nimport sys\r\n\r\ndef main():\r\n    t = int(input())\r\n    \r\n    while t>0:\r\n        n,k = map(int,input().split())\r\n        l = list(map(int,input().split()))\r\n        \r\n        ll = sorted(l)\r\n        count1 = 0\r\n        \r\n        for i,val in enumerate(ll):\r\n            count1 = count1 + ( i - (ll[:i]).count(val) )\r\n        \r\n        ans = 0\r\n        \r\n        ans = ans + ( count1 * k * (k-1) ) // 2\r\n        \r\n        count2 = 0\r\n        \r\n        for i,val in enumerate(l):\r\n            temp = sum( 1 for j in l[i+1:] if j < val)\r\n            count2 = count2 + ( temp )\r\n        \r\n        ans = ans + count2*k\r\n        \r\n        sys.stdout.write(str(ans)+\"\\n\")\r\n        t-=1\r\n    \r\ndef __starting_point():\r\n    main()\n__starting_point()"]