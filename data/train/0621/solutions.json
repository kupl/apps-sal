["t = eval(input())\nfor _ in range(t):\n n = eval(input())\n a = input().strip().split()\n cb, cs = 0, \"\"\n for i in range(len(a[0])):\n  for j in range(i+1,len(a[0])+1):\n   al = True\n   s = a[0][i:j]\n   for k in a[1:]:\n    if s not in k:\n     al = False\n     break\n   if al:\n    if j-i>=cb:\n     cb = max(cb, j-i)\n     if len(cs) < cb:\n      cs = a[0][i:j]\n     elif len(cs) == cb:\n      cs = min(cs,a[0][i:j])\n print(cs)", "s = [ ]\n\ndef chk(st,n):\n  for x in s:\n    if st not in x :\n      return 0\n  return 1\n\nfor t in range(eval(input())):\n  n=eval(input())\n  s = list( input().split() )\n  \n  mx = -1\n  ans = \"\"\n  \n  for i in range(len(s[0])):\n    for j in range(i,len(s[0])):\n      if chk( s[0][i:j+1], n ):\n        if mx == j+1-i :\n          ans = min( ans, s[0][i:j+1] )\n        if mx < j+1-i :\n          mx = j+1-i\n          ans = s[0][i:j+1]\n  \n  print(ans)", "import sys\n\nfor __ in range(eval(input())):\n n = eval(input())\n lists = list(map(str,sys.stdin.readline().split()))\n lists.sort(key=lambda x:len(x))\n stem , stems = lists[0] , []\n for k in range(len(lists[0])) :\n  for j in range(k+1,len(lists[0])) :\n   ctr = 0\n   for i in lists[1:] :\n    if stem[k:j+1] in i :\n     ctr += 1\n   if ctr == n-1 :\n    stems.append(stem[k:j+1])\n \n stems.sort(key=lambda x:len(x),reverse = True)\n stems = [x for x in stems if len(x)==len(stems[0])]\n stems.sort()\n print(stems[0] if len(stems)>0 else \"\")\n", " # your code goes here\nt = int(input())\nwhile(t>0):\n n = int(input())\n s = input().split(\" \")\n dic = {} \n for i in range(len(s[0])):\n  for j in range(i,len(s[0])):\n   dic[s[0][i:j+1]]=1\n#   print dic\n for i in range(1,len(s)):\n  for j in range(len(s[i])):\n   for k in range(j,len(s[i])):\n    x = dic.get(s[i][j:k+1],-1)\n    if(x==i):\n     dic[s[i][j:k+1]]+=1\n  #//print dic\n ans = \"\"\n #print \"SsSSSSS\"\n #print dic\n for x in dic:\n  if(dic[x]==n):\n   if(len(x)>=len(ans)):\n    ans = x\n for x in dic:\n  if(len(x) == len(ans) and dic[ans] == dic[x]):\n   ans = min(ans,x)\n print(ans)\n t-=1", "t=int(input())\nwhile t>0:\n t-=1\n l1=[\"\" for _ in range(21)]\n n=int(input())\n l=input().split()\n ma=0\n ans=\"\"\n for i in range(0,len(l[0])):\n  s=\"\"\n  for j in range(i,len(l[0])):\n   s+=l[0][j]\n   fl=1\n   for k in range(1,len(l)):\n    if s not in l[k]:\n     fl=0\n   if fl:\n    le=len(s)\n    if l1[le]==\"\":\n     l1[le]=s\n    else:\n     l1[le]=min(l1[le],s)\n    #print s,l1\n for i in range(20,0,-1):\n  if l1[i]!=\"\":\n   ans=l1[i]\n   break\n print(ans)", "t = int(input())\nfor _ in range(t):\n best = ''\n n = int(input())\n words = input().split()\n min = 20\n min_index = 0\n for i, word in enumerate(words):\n  if len(word) < min:\n   min = len(word)\n   min_index = i\n for i in range(min, 0, -1):\n  found = False\n  for j in range(min-i+1):\n   all = True\n   sub = words[min_index][j:j+i]\n   for word in words:\n    if sub not in word:\n     all = False\n     break\n   if all:\n    if best == '' or best>sub:\n     best = sub\n     found = True\n  if found:\n   break\n print(best)\n\n\n", "t=eval(input())\nwhile t:\n t-=1\n ans=[]\n n=eval(input())\n ls=input().split(' ')\n l=len(ls[0])\n for i in range(l):\n  for j in range(i,l+1):\n   tmp=ls[0][i:j]\n#            print tmp\n   flg=0\n   for k in range(n):\n    if ls[k].count(tmp)>0 and len(tmp)>0:\n     pass\n    else:\n     flg=1\n   if flg==0:\n    ans.append(tmp)\n#    print ans\n ans=sorted(ans)\n print(max(ans,key=len))\n", "for i in range(eval(input())):\n n=eval(input())\n w=input().split()\n q=[]\n q.append(w[0])\n p=q[0]\n l=len(p)\n for j in range(l-1,0,-1):\n  for k in range(0,l-j+1):\n   q.append(p[k:k+j])\n ans=[]\n l=0\n for j in q:\n  ct=0\n  if(l>len(j)):\n   break\n  \n  for k in w:\n   if(k.find(j)!=-1):\n    ct+=1\n    \n  if(ct==n):\n   ans.append(j)\n   l=len(j)\n   \n print(min(ans))\n \n   \n  \n    \n    \n     \n", "t=int(input())\nwhile t>0:\n n=int(input())\n s=input()\n words=s.split()\n#    print words\n substrings=[]\n for i in words:\n  tmp=[]\n  for j in range(len(i)):\n   for k in range(j+1,len(i)+1):\n    tmp.append(i[j:k])\n  substrings.append(tmp)\n#    print substrings[0]\n stem=\"\"\n for i in substrings[0]:\n  flag=True\n  for j in words:\n   if i not in j:\n    flag=False\n  if(flag==True and len(i)>len(stem)):\n   stem=i\n  elif(flag==True and len(i)==len(stem) and i<stem):\n   stem=i\n print(stem)\n t=t-1 ", "def sub(s1, s2):\n m = [[0] * (1 + len(s2)) for i in range(1 + len(s1))]\n longest, x_longest = 0, 0\n for x in range(1, 1 + len(s1)):\n  for y in range(1, 1 + len(s2)):\n   if s1[x - 1] == s2[y - 1]:\n    m[x][y] = m[x - 1][y - 1] + 1\n    if m[x][y] > longest:\n     longest = m[x][y]\n     x_longest = x\n   else:\n    m[x][y] = 0\n return s1[x_longest - longest: x_longest]\n\ntest = eval(input())\nwhile test:\n  test-=1\n  n = eval(input())\n  arr1 = list(map(str,input().split()))\n  arr = []\n  for i in range(n):\n    ans = arr1[i]\n    for j in range(n):\n      ans = sub(ans, arr1[j])\n    arr.append(ans)\n  oth_arr =[]\n  length = 0\n  for i in range(len(arr)):\n    length = max(length, len(arr[i]))\n  for i in range(len(arr)):\n    if len(arr[i])==length:\n      oth_arr.append(arr[i]) \n  oth_arr.sort()\n  print(oth_arr[0])\n  \n", "t = int(input())\nfor _ in range(t):\n n = int(input())\n w = input().split()\n x = w.pop(0)\n l = len(x)\n ans = \"\"\n for i in range(l):\n  for j in range(i, l+1):\n   common = True\n   sub = x[i:j]\n   for string in w:\n    if sub not in string:\n     common = False\n     break\n   if common:\n    if len(sub) > len(ans) or (len(sub) == len(ans) and ans > sub):\n     ans = sub\n print(ans)\n", "T = int(input())\n\nwhile T>0:\n n = int(input())\n words = input().split()\n words.sort(key = lambda s: len(s))\n temp = words[0]\n l = len(temp)\n \n ans = []\n for i in range(0,l+1):\n  ans = []\n  for j in range(0,i+1):\n   t = temp[j:l-i+j]\n   check = True\n   for k in range(1,n):\n    if t in words[k]:\n     continue\n    else :\n     check =False\n     break\n   if check:\n    ans.append(t)\n  \n  if len(ans)>0:\n   break\n \n ans.sort()\n print(ans[0])\n \n T =T-1", "# STEM.py\n\ndef main():\n t = int(input())\n for _ in range(t):\n  n = int(input())\n  arr = input().split();      \n  min_length = 30;\n  index = -1;\n  for i in range(n):\n   x = arr[i];     \n   # print x,len(x)    \n   if len(x) < min_length:\n    index = i;\n    min_length = len(x);\n\n  \n  s = arr[index];\n  # print s\n  # max_len = len(s)+1;\n  answers = []\n  l = len(s);\n  while l > 0:\n   for i in range(len(s)):            \n    if i+l > len(s):\n     break;\n    flag = True;\n    sub = s[i:i+l];\n\n    for j in arr:\n     if j.find(sub) == -1:\n      # print sub,j\n      flag = False;\n      break;\n    if flag :\n     # print 'Answer Found',sub\n     answers.append(sub);\n   l -=1;\n   if len(answers) > 0 :\n    break;\n\n  \n  answers.sort();     \n  print((answers[0]));\nmain();\n", "t=int(input())\nwhile(t>0):\n n=int(input())\n tcase=input().split(' ')\n ans=''\n alen=0\n for i in range(len(tcase[0])+1):\n  for j in range(i+1):\n   if all(tcase[0][j:i] in b for b in tcase):\n    if(len(tcase[0][j:i])>alen):\n     ans=tcase[0][j:i]\n     alen=len(ans)\n    elif len(tcase[0][j:i])==alen:\n     if tcase[0][j:i]<ans:\n      ans=tcase[0][j:i]\n print(ans)\n t=t-1 \n\n", "# your code goes here\n\nt = int(input())\nfor i in range(t):\n n = int(input())\n words = input().split()\n ans = ''\n for i in range(0, len(words[0])):\n  for j in range(i+1, len(words[0])+1):\n   found = True\n   for word in words[1:]:\n    if not words[0][i:j] in word:\n     found = False\n     break\n   if found:\n    if len(ans) == len(words[0][i:j]) and ans > words[0][i:j]:\n     ans = words[0][i:j]\n    elif len(ans) < len(words[0][i:j]):\n     ans = words[0][i:j]\n print(ans)\n    \n", "t = int(input())\nfor _i in range(t):\n n = int(input())\n words = input().split()\n \n words = sorted(words, key=lambda x: len(x))\n mw = words[0]\n words = words[1:]\n \n ans,alen = '',0\n for i in range(len(mw)):\n  for j in range(i,len(mw)):\n   ss = mw[i:j+1]\n   \n   found = True \n   for word in words:\n    if ss not in word:\n     found = False\n     break\n   \n   if found:\n    if len(ss) > alen:\n     ans,alen = ss,len(ss)\n    elif len(ss) == alen and ss < ans:\n     ans,alen = ss,len(ss)\n \n print(ans)\n", "t = eval(input())\nwhile t != 0:\n md = {}\n t -= 1\n n = eval(input())\n wrds = input().split()\n c = 0\n for w in wrds:\n  c += 1\n  for i in range(len(w)):\n   for j in range(i,len(w)):\n    sub = w[i:j+1]\n    if sub not in md:\n     md[sub] = 1\n    elif sub in md and md[sub] == c-1:\n     md[sub] = c \n res = \"\"\n for k in list(md.keys()):\n  if md[k] == n:\n   if len(k) > len(res):\n    res = k\n   elif len(k) == len(res) and k < res:\n    res = k\n print(res)\n\n", "t = int(input())\nfor tc in range(t):\n n = int(input())\n stem = ''\n arr = input().split()\n size = len(arr[0])\n max_length = 0\n for i in range(size):\n  for j in range(i, size+1):\n   temp = arr[0][i:j]\n   check = True \n   for x in range(1, n):\n    if temp in arr[x]:\n     pass\n    else:\n     check = False\n   if check:\n    if max_length < j-i+1:\n     stem = temp\n     max_length = j-i+1\n    elif max_length == j-i+1 and stem > temp:\n     stem = temp\n print(stem)\n"]