["import math\n\nfor i in range(int(input())):\n p,q=list(map(int,input().split()))\n c=0\n h=0\n \n while(q>=0):\n  if(q==0):\n   h+=1\n   break\n  \n  d=int(math.log2(q+1))\n  if(d==0):\n   h+=1\n   break\n  y=(2**d)-1\n  q-=y+1\n  if(q==-1):\n   h+=1\n   break\n  h+=1\n  \n while(p>=0):\n  if(p==0):\n   c+=1\n   break\n  else:\n   rem=int(math.log2(p+1))\n  \n   if(rem==0):\n    c+=1\n    break\n   \n   y=(2**rem)-1\n   p-=y+1\n   if(p==-1):\n    c+=1\n    break\n   c+=1\n\n if(c==h):\n  print(0,0)\n if(c<h):\n  print(1,h-c)\n if(c>h):\n  print(2,c-h)\n", "import math\nt=int(input())\nfor i in range(t):\n p,q=list(map(int,input().split()))\n c=0\n h=0\n while(p>=0):\n  if(p==0):\n   c+=1\n   break\n  \n  else:\n   d=int(math.log(p+1,2))\n  \n   if(d==0):\n    c+=1\n    break\n   \n   y=(2**d)-1\n   p-=y+1\n   if(p==-1):\n    c+=1\n    break\n   c+=1\n while(q>=0):\n  if(q==0):\n   h+=1\n   break\n  \n  d=int(math.log(q+1,2))\n  if(d==0):\n   h+=1\n   break\n  y=(2**d)-1\n  q-=y+1\n  if(q==-1):\n   h+=1\n   break\n  h+=1\n if(c==h):\n  print(0,0)\n else:\n  if(c<h):\n   print(1,h-c)\n  else:\n   print(2,c-h)\n  \n  \n \n \n  \n  \n  \n \n", "l = [(2**i -1) for i in range(0,25)]\nfor _ in range(int(input())):\n x, y = list(map(int,input().split()))\n x_l = [i for i in l if i <= x]\n y_l = [i for i in l if i <= y]\n count_x, count_y, final_x, final_y = 0, 0, x+1, y+1\n while True:\n  temp = 0\n  for i in range(len(x_l)-1,-1,-1):\n   if temp+(x_l[i]+1) <= final_x:\n    temp += (x_l[i]+1)\n    count_x += 1\n    if temp == final_x:\n     break\n  break\n while True:\n  temp = 0\n  for i in range(len(y_l)-1,-1,-1):\n   if temp+(y_l[i]+1) <= final_y:\n    temp += (y_l[i]+1)\n    count_y += 1\n    if temp == final_y:\n     break\n  break\n if count_x == count_y:\n  print(0,0)\n elif count_x < count_y:\n  print(1, count_y-count_x)\n else:\n  print(2, count_x-count_y)\n  \n  \n", "#=============templates==============#\ntakeArr = lambda: list(map(int,input().split()))\ntakeList = lambda: list(map(int,input().split()))\nimport sys\nsys.setrecursionlimit(10**6)\n# import itertools\n# import collections\n#==================MAIN==================# \nfrom math import floor,ceil,log2 \ndef powOfPositive(n) :  \n pos = floor(log2(n));  \n return 2**pos;  \ndef powOfNegative(n) : \n pos = ceil(log2(n));  \n return (-1 * pow(2, pos));   \ndef highestPowerOf2(n) :  \n if (n > 0) : \n  return powOfPositive(n);  \n else :   \n  n = -n;  \n  return powOfNegative(n);  \ndef main(t):\n x,y = takeArr()\n a,b = x+1,y+1\n sa = sb = 0\n while a:\n  a -= highestPowerOf2(a)\n  sa += 1\n while b:\n  b -= highestPowerOf2(b)\n  sb += 1\n \n winner = 2 if sa>sb else 1 if sb>sa else 0\n score = abs(sa-sb) if winner else 0\n print(winner,score)\n if t>1:\n  main(t-1)\nmain(int(input()))\n \n#==================END==================#\n", "import sys\ninput = sys.stdin.readline\n\nT = int(input().strip())\n\nfor _ in range(T):\n X,Y = list(map(int,input().split()))\n x = X+1\n y = Y +1\n def bit(x):\n  a = []\n  while x>0:\n   a.append(x&1)\n   x = x//2\n\n  return sum(a)\n \n count_x = bit(x)\n count_y = bit(y)\n\n\n # while(x>0):\n #   n = bit(x)\n #   # print('n_x ' , n)\n #   if x == 2**(n+1)-1:\n #       count_x += 1\n #       break\n #   elif 2**n -1 < x:\n #       x = (x-(2**n-1))\n #       count_x +=1\n #       if x != 1:\n #           x = x-1\n #       else:\n #           count_x += 1\n #           break\n   \n \n # while y>0:\n #   n = bit(y)\n #   # print('n ' , n)\n #   if y == 2**(n+1)-1:\n #       count_y += 1\n #       break\n #   elif 2**n -1 < y:\n #       y = (y-(2**n-1))\n #       count_y += 1\n #       if y != 1:\n #           y = y-1\n #       else:\n #           count_y += 1\n #           break\n # print('x',count_x, count_y)\n\n if count_x < count_y:\n  print('1',count_y-count_x)\n elif count_y < count_x:\n  print('2',count_x-count_y)\n else:\n  print('0','0')\n\n", "t = int(input())\nfor _ in range(t):\n x,y = list(map(int,input().split()))\n p = 0\n mx = max(x,y)\n while 2**p<=mx:\n  p+=1\n px = p\n py = p\n x_m = 0\n y_m = 0\n x+=1\n y+=1\n while x:\n  while 2**px>x:\n   px-=1\n  x -= 2**px\n  x_m += 1\n while y:\n  while 2**py>y:\n   py-=1\n  y -= 2**py\n  y_m += 1\n if x_m==y_m: print(0,0)\n else:\n  if x_m>y_m:\n   print(2, abs(x_m - y_m))\n  else:\n   print(1, abs(x_m - y_m))\n", "t = int(input())\nfor _ in range(t):\n x,y = list(map(int,input().split()))\n x += 1\n y += 1\n ans1,ans2 = bin(x)[2:].count('1'),bin(y)[2:].count('1')\n if ans1 == ans2:\n  print(0,0)\n elif ans1 > ans2:\n  print(2,abs(ans1-ans2))\n else:\n  print(1,abs(ans1-ans2))\n", "\nt=int(input())\nfor _ in range(t):\n\n x,y=list(map(int,input().split()))\n if x==y:\n  print(0,0)\n else:\n  x_count=bin(x+1).count('1')\n  y_count=bin(y+1).count('1')\n  if x_count==y_count:\n   print(0,0)\n  elif x_count<y_count:\n   print(1,y_count-x_count)\n  else:\n   print(2,x_count-y_count)\n  \n", "for _ in range(int(input())):\n x, y = map(int, input().split())\n x = (bin(x+1)[2:]).count('1')\n y = (bin(y+1)[2:]).count('1')\n \n if x == y:\n  print(0, 0)\n elif x < y:\n  print(1, abs(x-y))\n else:\n  print(2, abs(x-y))", "def jumpsto(n):\n if n == 0:\n  return 0\n elif n & n-1 == 0:\n  return 1 \n jump = 0 \n powe = 0\n n1 = n \n while n1 != 0:\n  n1 = n1//2\n  powe += 1 \n powe -= 1 \n jump += 1 \n return jump + jumpsto(n- 2**powe)\n\n\nfor _ in range(int(input())):\n # = int(input())\n x, y = list(map(int, input().strip().split()))\n x += 1 \n y += 1 \n # = list(map(int, input().strip().split()))\n jumpx = jumpsto(x)\n jumpy = jumpsto(y)\n if jumpx == jumpy :\n  print(0,0)\n elif jumpx < jumpy:\n  print(1, jumpy - jumpx)\n else:\n  print(2, jumpx - jumpy)\n \n \n \n \n \n \n", "# cook your dish here\nimport math\n\ndef jump(x, t=1):\n if x <= 0:\n  return t + x\n n = int(math.log(x+1, 2))\n n = x - 2**n\n return jump(n, t+1)\n\nt = int(input())\nfor _ in range(t):\n x, y = list(map(int, input().split()))\n x = jump(x)\n y = jump(y)\n if x == y:\n  print(\"0 0\")\n elif x > y:\n  print(2, x-y)\n else:\n  print(1, y-x)\n", "from sys import stdin\nimport math\n# Input data\n#stdin = open(\"input\", \"r\")\n\n\ndef func(x):\n count = 0\n while(x > 0):\n  n = int(math.log2(x + 1))\n  k = 2**n\n  count += 1\n  if k > x:\n   k //= 2\n  x -= k\n return count\n\nfor _ in range(int(stdin.readline())):\n x, y = list(map(int, stdin.readline().split()))\n a, b = func(x + 1), func(y + 1)\n if a == b:\n  print(0, 0)\n else:\n  if a > b:\n   print(2, a - b)\n  else:\n   print(1, b - a)\n", "import math\nd=10**8\ne=[0]\np=1\nwhile p<d:\n  p*=2\n  e.append(p-1)\ne=e[::-1]\nfor _ in range(int(input())):\n  li=list(map(int,input().split()))\n  ans1=0\n  n1=li[0]+1\n  ans2=0\n  n2=li[1]+1\n  for i in e:\n    if (n1-i-1)>=0:\n      n1-=i\n      n1-=1\n      ans1+=1\n  ans1+=n1\n  for i in e:\n    if (n2-i-1)>=0:\n      n2-=i\n      n2-=1\n      ans2+=1\n  ans2+=n1\n  if(ans1==ans2):\n    print(0,0)\n  elif ans1>ans2:\n    print(2,ans1-ans2)\n  else:\n    print(1,ans2-ans1)\n  \n\n  \n", "# cook your dish here\nfor _ in range(int(input())):\n a,b=list(map(int,input().split()))\n c=list(bin(a+1)[2:])\n d=list(bin(b+1)[2:])\n e=c.count('1')\n f=d.count('1')\n if e==f:\n  print(0,0)\n elif e<f:\n  print(1,f-e)\n else:\n  print(2,e-f)", "# cook your dish here\ndef fuck_off(x,y):\n X=bin(x+1)[2:]\n Y=bin(y+1)[2:]\n count1,count2=0,0\n for i in X:\n  if i=='1':\n   count1+=1\n for i in Y:\n  if i=='1':\n   count2+=1\n if count1==count2:\n  print(0,\" \",0)\n if count1>count2:\n  print(2,\" \",abs(count1-count2))\n if count1<count2:\n  print(1,\" \",abs(count2-count1))\nt=int(input())\nfor i in range(t):\n x,y=input().split()\n fuck_off(int(x),int(y))", "'''\nName : Vasu Gamdha\ncodechef id :vasu_vg\nProblem : CRCLJUMP\n\n##############################\n### LOGIC STAYS BETWEEN US ###\n##############################\n'''\n\nfrom sys import stdin as sin, stdout as sout\nMOD=1000000007\nfor _ in range(int(sin.readline())):\n x,y=map(int,sin.readline().split())\n x,y=x+1,y+1\n xx,yy=bin(x).count(\"1\"),bin(y).count(\"1\")\n ans= str(xx) + \" \" + str(yy)\n if xx==yy: sout.write(str(\"0 0\")+\"\\n\")\n elif xx>yy: sout.write(str(\"2 \")+ str(xx-yy) +\"\\n\")\n else: sout.write(str(\"1 \")+ str(yy-xx) +\"\\n\")", "# cook your dish here\nfor _ in range (int(input())) :\n a,b = list(map(int,input().split()))\n c = list(bin(a+1)[2:])\n d = list(bin(b+1)[2:])\n e = c.count('1')\n f = d.count('1')\n if e == f :\n  print(0,0)\n elif e<f :\n  print(1,f-e)\n else :\n  print(2,e-f)\n", "# cook your dish here\nimport math \n \n\ndef Log2(x): \n return (math.log10(x) / \n   math.log10(2))\ndef isPowerOfTwo(n): \n return (math.ceil(Log2(n)) == math.floor(Log2(n)))\nt=int(input())\nfor i in range(t):\n x,y=list(map(int,input().split()))\n step_x=0\n step_y=0\n if(isPowerOfTwo(x+1)):\n  step_x=1\n else:\n  while(x>=0):\n   nx=Log2(x+1)\n   s=int(nx)\n   x-=(2**s)\n   step_x+=1\n if(isPowerOfTwo(y+1)):\n  step_y=1\n else:\n  while(y>=0):\n   ny=Log2(y+1)\n   s_y=int(ny)\n   y-=(2**s_y)\n   step_y+=1\n if(step_x==step_y):\n  print(0,0)\n elif(step_x>step_y):\n  print(2,abs(step_x-step_y))\n  \n else:\n  print(1,abs(step_x-step_y))\n  \n", "# cook your dish here\nfrom math import log2,floor\nfor _ in range(int(input())):\n x,y=list(map(int,input().split()))\n count1,count2=0,0\n while True:\n  z=floor(log2(x+1))\n  #print(z)\n  x=x-((2**z)-1)\n  x-=1\n  count1 += 1\n\n  if x<0:\n   break\n  ##print(x)\n  ##count1+=1\n\n while True:\n  ##print(y)\n  z = floor(log2(y + 1))\n\n  y = y - ((2 ** z) - 1)\n  y-=1\n  count2 += 1\n\n  if y<0:\n   break\n\n ##print(count1,count2)\n if count1==count2:\n  print(0,0)\n if count1>count2:\n  print(2,abs(count1-count2))\n if count2>count1:\n  print(1,count2-count1)\n\n", "# cook your dish here\ntest_cases=int(input())\nfor i in range(test_cases):\n X,Y=map(int,input().split())\n X+=1\n Y+=1\n x=str(bin(X))\n y=str(bin(Y))\n count1=0\n count2=0\n for i in x:\n  if(i=='1'):\n   count1+=1\n for i in y:\n  if(i=='1'):\n   count2+=1\n if(count1>count2):\n  print(2,abs(count1-count2))\n elif(count2>count1):\n  print(1,abs(count1-count2))\n else:\n  print(0,0)", "def main():\n T = int(input())\n while T:\n  a,b = list(map(int, input().split()))\n  c1 = bin(a+1).count('1')\n  c2 = bin(b+1).count('1')\n  if c1 > c2:\n   print(2,c1-c2)\n  elif c1 < c2:\n   print(1, c2-c1)\n  else:\n   print(\"0 0\")\n  T-=1\ndef __starting_point():\n main()\n__starting_point()", "# cook your dish here\nfrom math import log\nfor _ in range(int(input())):\n x,y = map(int,input().split())\n x += 1\n y += 1\n c1,c2 = 0,0\n while x>0:\n  x = x - 2**int(log(x,2))\n  c1 += 1\n while y>0:\n  y = y - 2**int(log(y,2))\n  c2 += 1\n if c1==c2:\n  print(0,0)\n elif c1>c2:\n  print(2,c1-c2)\n else:\n  print(1,c2-c1)"]