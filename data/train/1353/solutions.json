["# cook your dish here\ndef check(px,x):\n if px[1]==x[1]:\n  return (x[2]-px[2])<=(x[0]-px[0]) and (x[2]>=px[2])\n else:\n  return (x[2]-px[2]+1)<=(x[0]-px[0]) and (x[2]>=px[2])\n  \ndef checkdouble(px,x):\n if px[3]==x[3]:\n  return (x[4]-px[4])<=(x[0]-px[0]) and (x[4]>=px[4])\n else:\n  return (x[4]-px[4]+1)<=(x[0]-px[0]) and (x[4]>=px[4])\n  \n\nfor _ in range(int(input())):\n px=[0,1,1,2,1]\n g=True\n for _ in range(int(input())):\n  x=list(map(int,input().split()))\n  if x[1]==x[3] and x[2]==x[4]:\n   g=False\n  if not g:\n   continue\n  g=check(px,x)\n  if g:\n   g=checkdouble(px,x)\n  px=x\n if not g:\n  print(\"no\")\n else:\n  print(\"yes\")\n \n \n \n \n \n \n", "def check(px,x):\n if px[1]==x[1]:\n  return (x[2]-px[2])<=(x[0]-px[0]) and (x[2]>=px[2])\n else:\n  return (x[2]-px[2]+1)<=(x[0]-px[0]) and (x[2]>=px[2])\n  \ndef checkdouble(px,x):\n if px[3]==x[3]:\n  return (x[4]-px[4])<=(x[0]-px[0]) and (x[4]>=px[4])\n else:\n  return (x[4]-px[4]+1)<=(x[0]-px[0]) and (x[4]>=px[4])\n  \n\nfor _ in range(int(input())):\n px=[0,1,1,2,1]\n g=True\n for _ in range(int(input())):\n  x=list(map(int,input().split()))\n  if x[1]==x[3] and x[2]==x[4]:\n   g=False\n  if not g:\n   continue\n  g=check(px,x)\n  if g:\n   g=checkdouble(px,x)\n  px=x\n if not g:\n  print(\"no\")\n else:\n  print(\"yes\")\n", "def check1(t,x,y,px,py):\n if x==px:\n  return y-py<=t and py<=y\n return y-py+1<=t and py<=y\ndef check(px,x):\n t=x[0]-px[0]\n return (check1(t,x[1],x[2],px[1],px[2])\n  and check1(t,x[3],x[4],px[3],px[4]))\nfor _ in range(int(input())):\n px=[0,1,1,2,1]\n g=True\n for _ in range(int(input())):\n  x=list(map(int,input().split()))\n  if x[1]==x[3] and x[2]==x[4]:\n   g=False\n  if g:\n   g=check(px,x)\n  px=x\n if g:\n  print(\"yes\")\n else:\n  print(\"no\") ", "def time(x1,y1,x2,y2):\n if x1==x2:\n  return y2-y1\n return y2-y1+1\n\nans=['no','yes'] \nfor _ in range(int(input())):\n t, fx, fy, sx, sy, f=0, 1, 1, 2, 1, 1\n for _ in range (int(input())):\n  a=[int(x) for x in input().split()]\n  if f:\n   if a[1]==a[3] and a[2]==a[4]:\n    f=0\n    continue\n   if fy>a[2] or sy>a[4]:\n    f=0\n    continue\n   t1=time(fx,fy,a[1],a[2])\n   t2=time(sx,sy,a[3],a[4])\n   _t=a[0]-t\n   if t1>_t or t2>_t:\n    f=0\n  t, fx, fy, sx, sy=a\n print(ans[f])\n \n\n"]