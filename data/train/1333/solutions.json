["mod=10**9+7\ndef pow2(x):\n p,n=1,2\n while(x):\n  if(x & 1): p=((p%mod) * (n%mod))%mod\n\n  n=((n%mod) * (n%mod))%mod\n  x//=2\n\n return p\n\ndef count_bit(val):\n bit=0\n while(val):\n  bit+=1\n  val &=(val-1)\n return bit\n   \ndef answer():\n\n val=b[0]\n po2=0\n for i in range(1,len(b)):\n  if(val > b[i]):return 0\n  po2+=count_bit(val & b[i])\n  val=b[i]\n\n return pow2(po2)%mod\n\n\nfor T in range(int(input())):\n n=int(input())\n b=list(map(int,input().split()))\n\n print(answer())\n \n", "mod=10**9+7\ndef pow2(x):\n p,n=1,2\n while(x):\n  if(x & 1): p=((p%mod) * (n%mod))%mod\n\n  n=((n%mod) * (n%mod))%mod\n  x//=2\n\n return p\n\ndef count_bit(val):\n bit=0\n for i in range(30):\n  if(val >> i & 1):bit+=1\n\n return bit\n   \ndef answer():\n\n val=b[0]\n po2=0\n for i in range(1,len(b)):\n  if(val > b[i]):return 0\n  po2+=count_bit(val & b[i])\n  val=b[i]\n\n return pow2(po2)%mod\n\n\nfor T in range(int(input())):\n n=int(input())\n b=list(map(int,input().split()))\n\n print(answer())\n \n", "def solve(lis, n):\n cnt = 0 \n for i in range(1, n):\n  val = lis[i] & lis[i - 1]\n  if val != lis[i - 1]:\n   return -1\n  for i in range(32):\n   if (1 << i) & val > 0:\n    cnt += 1\n return (2 ** cnt) % mod\n\nfor t in range(int(input())):\n n = int(input())\n lis = list(map(int, input(). split()))\n mod = int(1e9) + 7\n ans = solve(lis, n)\n print(0 if ans == -1 else ans)", "def solve(lis, n):\n cnt = 0 \n for i in range(1, n):\n  val = lis[i] & lis[i - 1]\n  if val != lis[i - 1]:\n   return -1\n  cnt += bin(val).count('1')\n return (2 ** cnt) % mod\n\nfor t in range(int(input())):\n n = int(input())\n lis = list(map(int, input(). split()))\n mod = int(1e9) + 7\n ans = solve(lis, n)\n print(0 if ans == -1 else ans)", "def bi(n): \n count = 0\n while (n): \n  count += 1\n  n =n&(n-1)\n return count \n\nt=int(input())\nfor q in range(t):\n n=int(input())\n b=list(map(int,input().split()))\n ans=1\n mod=(10**9)+7\n end=0\n for i in range(1,n):\n  if b[i]|b[i-1]!=b[i]:\n   end=1\n   print(0)\n   break\n  else:\n   k=bi(b[i]&b[i-1])\n   ans=(ans*(2**k))%mod\n if end==0:\n  print(ans)", "import sys\nsys.setrecursionlimit(10**3)\nimport math\n\"\"\"def fast_expo(n):\n    mod=10**9+7\n    if n==1:\n     return 2\n    x=(fast_expo(n//2)%mod)\n    if n%2==0:\n     return (x*x)%(10**9+7)\n    else:\n     return (x*x*2)%(10**9+7)\"\"\"\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n p=0\n c=0\n flag=0\n mod=10**9+7\n for i in range(1,len(l)):\n  if l[i-1]>l[i]:\n   flag=1\n   break\n  p+=list(bin(l[i]&l[i-1])[2:]).count('1')\n if flag==1:\n  print(0)\n  continue\n t_2=pow(2,p,mod)\n print(t_2)", "import sys\nsys.setrecursionlimit(10**3)\nimport math\n\"\"\"def fast_expo(n):\n    mod=10**9+7\n    if n==1:\n     return 2\n    x=(fast_expo(n//2)%mod)\n    if n%2==0:\n     return (x*x)%(10**9+7)\n    else:\n     return (x*x*2)%(10**9+7)\"\"\"\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n p=0\n c=0\n flag=0\n mod=10**9+7\n for i in range(len(l)-1):\n  t_1=list(bin(l[i])[2:]).count('1')\n  if c<=t_1:\n   c=t_1\n  else:\n   flag=1\n  p+=t_1\n if flag==1:\n  print(0)\n  continue\n t_2=pow(2,p,mod)\n print(t_2)", "import sys\nsys.setrecursionlimit(10**3)\ndef fast_expo(n):\n mod=10**9+7\n if n==1:\n  return 2\n x=(fast_expo(n//2)%mod)\n if n%2==0:\n  return (x*x)%(10**9+7)\n else:\n  return (x*x*2)%(10**9+7)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n p=0\n c=0\n flag=0\n mod=10**9+7\n for i in range(len(l)-1):\n  t_1=list(bin(l[i])[2:]).count('1')\n  if c<=t_1:\n   c=t_1\n  else:\n   flag=1\n  p+=t_1\n if flag==1:\n  print(0)\n  continue\n t_2=fast_expo(p)%mod\n print(t_2)", "m = pow(10,9)+7\nt = int(input())\nwhile t>0:\n n = int(input())\n a = list(map(int,input().split()))\n c = 1\n f = a[0]\n for i in range(1,n):\n  # p = bin(f)[2:]\n  # q = bin(a[i])[2:]\n  p = f\n  q = a[i]\n  g = p&q\n  if g != p:\n   c = 0\n   break\n  # print(pow(2,bin(f)[2:].count(\"1\")))\n  f = a[i]\n  c = c*pow(2,bin(g)[2:].count(\"1\"))%m\n  # print(c)\n print(c)\n t = t-1", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n = int(input())\n str1 = input().split(' ')\n a = [int(num) for num in str1]\n sum1 = 1\n M = 1000000007\n count=0 \n for i in range(0,len(a)-1,1):\n  if bin(a[i] & (~a[i+1])).count(\"1\") > 0:\n   count=-1\n   break\n  count += bin(a[i] & a[i+1]).count(\"1\")\n \n if(count==-1):\n  sum1=0 \n else:\n  sum1 = (2**count)%M\n print(sum1)\n", "# cook your dish here\ntest=int(input());\nfor _ in range(test):\n n=int(input());\n a=list([int(j) for j in input().split()]);\n count=1;\n res=1;\n if n > 1:\n  for j in range(n-1):\n   if a[j+1]|a[j] > a[j+1]:\n    res = 0;\n    break;\n   x = str(bin(a[j+1])[2:]).count('1');\n   y = str(bin(a[j+1]-a[j])[2:]).count('1');\n   count *= pow(2,x-y,1000000007);\n   count %= 1000000007;\n if res == 0:\n  print(0%1000000007);\n else:\n  print(count%1000000007);", "t = int(input());\nfor i in range(t):\n n = int(input());\n a = list([int(j) for j in input().split()]);\n count = 1;\n res = 1;\n if n > 1:\n  for j in range(n-1):\n   if a[j+1]|a[j] > a[j+1]:\n    res = 0;\n    break;\n   x = str(bin(a[j+1])[2:]).count('1');\n   y = str(bin(a[j+1]-a[j])[2:]).count('1');\n   count *= pow(2,x-y,1000000007);\n   count %= 1000000007;\n if res == 0:\n  print(0%1000000007);\n else:\n  print(count%1000000007);", "for afskafshjd in range(int(input())):\n n=int(input())\n b=list(map(int,input().split()))\n count=0\n flag=0\n for i in range(1,n):\n  if b[i]<b[i-1]:\n   flag=1\n   break\n  x=bin(b[i]&b[i-1])\n\n  count=count+x.count('1')\n if flag==1:\n  print('0')\n  continue\n print((pow(2,count,10**9+7)))# cook your dish here\n", "t = int(input());\nfor i in range(t):\n n = int(input());\n a = list([int(j) for j in input().split()]);\n count = 1;\n res = 1;\n if n > 1:\n  for j in range(n-1):\n   if a[j+1]|a[j] > a[j+1]:\n    res = 0;\n    break;\n   x = str(bin(a[j+1])[2:]).count('1');\n   y = str(bin(a[j+1]-a[j])[2:]).count('1');\n   count *= pow(2,x-y,1000000007);\n   count %= 1000000007;\n if res == 0:\n  print(0%1000000007);\n else:\n  print(count%1000000007);", "M=1000000007\nT=int(input())\nfor _ in range(T):\n n=int(input())\n l=[int(i) for i in input().split()]\n count1=0\n for i in range(1,n):\n  if((l[i-1]&l[i])!=l[i-1]):\n   count1=0\n   break\n  else:\n   count1+=(bin(l[i-1]&l[i]).count(\"1\"))\n \n if(count1==0):\n  print(count1)\n else:\n  print((2**count1)%M)", "m=pow(10,9)+7\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n t=1\n y=0\n for i in range(n-1):\n  if(l[i]<=l[i+1] and l[i]&l[i+1]==l[i]):\n   y=y+bin(l[i]).count('1')\n  else:\n   t=0\n   break\n t=(t*pow(2,y,m))%m\n print(t%m)", "m=pow(10,9)+7\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n t=1\n for i in range(n-1):\n  if(l[i]<=l[i+1] and l[i]&l[i+1]==l[i]):\n   y=bin(l[i]).count('1')\n   t=(t*pow(2,y,m))%m\n  else:\n   t=0\n   break\n print(t%m)", "\ndef solve(n, b):\n for i in range(n - 1):\n  if (b[i] & b[i + 1] != b[i]):\n   print(0)\n   return\n x = 0\n for i in range(n - 1):\n  x += bin(b[i]).count('1')\n\n ans = 1\n while (x):\n  if (x > 30):\n   ans *= twopow[30]\n   ans %= mod\n   x -= 30\n  else:\n   ans *= twopow[x]\n   ans %= mod\n   x = 0\n print(ans % mod)\n\n\nmod = 10 ** 9 + 7\ntwopow = {x: (1 << x) % mod for x in range(35)}\nfor _ in range(int(input())):\n n = int(input())\n b = list(map(int, input().split()))\n solve(n, b)\n", "\ndef solve(n, b):\n for i in range(n - 1):\n  if (b[i] & b[i + 1] != b[i]):\n   print(0)\n   return\n x = 0\n for i in range(n - 1):\n  x += bin(b[i]).count('1')\n print(pow(2, x, mod))\n\n\nmod = 10 ** 9 + 7\nfor _ in range(int(input())):\n n = int(input())\n b = list(map(int, input().split()))\n solve(n, b)\n", "\ndef solve(n, b):\n for i in range(n - 1):\n  if (b[i] & b[i + 1] != b[i]):\n   print(0)\n   return\n x = 0\n for i in range(n - 1):\n  x += bin(b[i]).count('1')\n print(str((1 << x) % mod))\n\n\nmod = 10 ** 9 + 7\ntwopow = {x: pow(2, x) % mod for x in range(35)}\nfor _ in range(int(input())):\n n = int(input())\n b = list(map(int, input().split()))\n solve(n, b)\n", "def get_num_of_ones(x):\n c = 0\n while (x):\n  x &= x-1\n  c += 1 \n return c\n\n\nmod = 10 ** 9 + 7\ntwopow = {x: pow(2, x) % mod for x in range(35)}\nfor _ in range(int(input())):\n n = int(input())\n b = list(map(int, input().split()))\n ones_in_prev = 0\n ones_in_current = 0\n ans = 1\n flag = True\n ones_in_current = get_num_of_ones(b[0])\n ones_in_prev = ones_in_current\n for i in range(1, n):\n  ans *= twopow[ones_in_prev]\n  ans %= mod\n  ones_in_current = get_num_of_ones(b[i])\n  ones_in_prev = ones_in_current\n  if (b[i] < b[i - 1]):\n   flag = False\n   break\n if(flag):\n  print(ans % mod)\n else:\n  print(0)\n"]