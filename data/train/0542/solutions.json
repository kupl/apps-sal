["# cook your dish here\nimport sys\nimport math\n\ndef main(grid):\n    ans=0\n    for i in range(len(grid)):\n        for j in range(len(grid[0])):\n            first_point=grid[i][j]\n            for k in range(j+1,len(grid[0])):\n                second_point=grid[i][k]\n                if first_point==second_point:\n                    dist=k-j\n                    if i+dist<len(grid):\n                        thrid_point=grid[i+dist][j]\n                        fourth_point=grid[i+dist][k] \n                        if second_point==thrid_point and second_point==fourth_point:\n                            ans+=1\n    return ans\n    \ntest=int(input())\nfor _ in range(test):\n    n,m=input().split()\n    n=int(n)\n    arr=[]\n    for b in range(n):\n        arr.append(list(input()))\n    print(main(arr))", "import sys\nimport math\n\ndef main(grid):\n    \n    ans=0\n    for i in range(len(grid)):\n        \n        for j in range(len(grid[0])):\n            first_point=grid[i][j]\n            for k in range(j+1,len(grid[0])):\n                second_point=grid[i][k]\n                \n                if first_point==second_point:\n                    dist=k-j\n                    \n                    if i+dist<len(grid):\n                        \n                        thrid_point=grid[i+dist][j]\n                        fourth_point=grid[i+dist][k] \n                        if second_point==thrid_point and second_point==fourth_point:\n                            ans+=1\n    return ans\nfor _ in range(int(input())):\n    n,m=input().split()\n    n=int(n)\n    arr=[]\n    for b in range(n):\n        arr.append(list(input()))\n    print(main(arr))\n                \n            \n\n        ", "for _ in range(int(input())):\r\n    N, M = map(int, input().split())\r\n    array = []\r\n    for i in range(N):\r\n        array.append(list(input().strip()))\r\n    count = 0\r\n    for i in range(N-1):\r\n        for j in range(M-1):\r\n            for k in range(j+1, min(j + N - i, M)):\r\n                if array[i][j] == array[i][k] and array[i][j] == array[i+k-j][j] and array[i][j] == array[i+k-j][k]:\r\n                    count += 1\r\n    print(count)", "for _ in range(int(input())):\n    N,M = [int(x) for x in input().split()]\n    List = []\n    for i in range(N):\n        Temp = [x for x in input()]\n        List.append(Temp)\n    Ans = 0\n    for i in range(N):\n        for j in range(M):\n            x=1\n            while(i+x<N and j+x<M):\n                if(List[i][j]==List[i][j+x]==List[i+x][j]==List[i+x][j+x]):\n                    Ans+=1\n                x+=1\n    print(Ans)\n                ", "def check(z,i,j,r):\n    x = j-i\n    if r[z][i]==r[z][j]==r[z+x][i]==r[z+x][j]:\n        return True\n    return False \nt = int(input())\nwhile(t):\n    t-=1\n    count = 0\n    a = list((map(int , input().split())))\n    r = []\n    for h in range(a[0]):\n        p = list(input())\n        r.append(p)\n    #print(r)    \n    for z in range(a[0]):\n        for i in range(a[1]):\n            for j in range(i+1,a[1]):\n                x = j-i\n                if x<=(a[0]-z-1):\n                    if check(z,i,j,r)==True:\n                        count+=1\n                else:\n                    break\n    print(count)              \n            \n    ", "def check_square(arr,nn,mm):\r\n    total = 0\r\n    for dim in range (2,mm+1):\r\n        for row in range(nn-dim+1):\r\n            for col in range(mm-dim+1):\r\n                if arr[row][col]== arr[row][col+dim-1]==arr[row+dim-1][col]==arr[row+dim-1][col+dim-1]:\r\n                    total+=1\r\n            \r\n    return total\r\n\r\nfor _ in range(int(input())):\r\n    n,m = map(int,input().split())\r\n    garden = []\r\n    for i in range(n):\r\n        garden.append(input())\r\n    if n==1 or m == 1:\r\n        print(0)\r\n    else:\r\n        print(check_square(garden,n,m))"]