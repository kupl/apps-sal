["class Solution:\n     def smallestDistancePair(self, nums, k):\n         \"\"\"\n         :type nums: List[int]\n         :type k: int\n         :rtype: int\n         \"\"\"\n         nums.sort()\n         l, r = 0, nums[-1] - nums[0]\n         \n         while l < r:\n             m = l + (r - l) // 2\n             count = 0\n             left = 0\n             for right in range(len(nums)):\n                 while nums[right] - nums[left] > m: left += 1\n                 count += (right - left)        \n             if count < k :\n                 l = m+1\n             else:\n                 r = m\n         return l\n \n          \n", "class Solution(object):\n     def smallestDistancePair(self, nums, k):\n         def possible(guess):\n             #Is there k or more pairs with distance <= guess?\n             count = left = 0\n             for right, x in enumerate(nums):\n                 while x - nums[left] > guess:\n                     left += 1\n                 count += right - left\n             return count >= k\n \n         nums.sort()\n         lo = 0\n         hi = nums[-1] - nums[0]\n         while lo < hi:\n             mi = (lo + hi) // 2\n             if possible(mi):\n                 hi = mi\n             else:\n                 lo = mi + 1\n \n         return lo"]