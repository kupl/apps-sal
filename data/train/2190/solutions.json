["n = int(input())\nans = 0\nstk = []\nfor v in map(int, input().split()):\n    last = 0\n    while len(stk) and stk[-1][0] < v and stk[-1][1]:\n        last = max(last, stk[-1][1])\n        del stk[-1]\n\n    if not len(stk) or stk[-1][0] < v:\n        stk.append((v, 0))\n    else:\n        stk.append((v, last + 1)); ans = max(ans, last + 1)\nprint(ans)\n", "n, t = int(input()), list(map(int, input().split()))\np, s, r = [0] * n, [0] * n, t[0]\nfor i in range(n - 1):\n    j = i + 1\n    x = t[j]\n    if x > r: r = x\n    else:\n        while t[i] < x: s[j], i = max(s[j], s[i]), p[i]\n        p[j] = i\n        s[j] += 1\nprint(max(s))", "n = int(input())\nans = 0\nstk = []\nfor v in map(int, input().split()):\n    last = 0\n    while len(stk) and stk[-1][0] < v and stk[-1][1]:\n        last = max(last, stk[-1][1])\n        del stk[-1]\n\n    if not len(stk) or stk[-1][0] < v:\n        stk.append((v, 0))\n    else:\n        stk.append((v, last + 1));\n        ans = max(ans, last + 1)\nprint(ans)", "n, t = int(input()), list(map(int, input().split()))\n\np, s, r = [0] * n, [0] * n, t[0]\n\nfor i in range(n - 1):\n\n    j = i + 1\n\n    x = t[j]\n\n    if x > r: r = x\n\n    else:\n\n        while t[i] < x: s[j], i = max(s[j], s[i]), p[i]\n\n        p[j] = i\n\n        s[j] += 1\n\nprint(max(s))\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\nA = [int(i) for i in input().split()]\nans = 0\n\nst = [0]\n\ntdeath = [-1 for i in range(n)]\n\nfor i in range(1, n):\n    tdeath[i] = 0\n    while len(st) > 0 and A[st[-1]] < A[i]:\n        tdeath[i] = max(tdeath[i], tdeath[st[-1]]+1)\n        st.pop()\n    if len(st)==0:\n        tdeath[i] = -1\n    st.append(i)\n    ans = max(ans, tdeath[i]+1)\n    \nprint(ans)\n", "n = int(input())\nA = list(map(int,input().strip().split()))[::-1]\np = 0\np_max = 0\nX = []\nfor i in A:\n    # print(X)\n    while(len(X)>0 and X[-1][0]<i):\n        p = max((p+1,X[-1][1]))\n        X.pop()\n    X.append((i,p))\n    if p>p_max:\n        p_max = p\n    p=0\nprint(p_max)\n", "N=int(input())\npsychos=list(map(int, input().split(\" \")))\ntime_of_death=[0 for i in range(N)]\n\nstack=[(psychos[0], 0)]\nfor index, p in enumerate(psychos):\n    if index==0:\n        continue\n    if p<stack[-1][0]:\n        stack.append((p, 1))\n        time_of_death[index]=1\n\n    elif p>stack[-1][0]:\n        max_time=-1\n        while stack!=[] and p>stack[-1][0]:\n            max_time=max(max_time, stack[-1][1])\n            del stack[-1]\n        if stack==[]:\n            # will never die, no bigger psychos to left\n            stack.append((p, 0)) \n            time_of_death[index]=0 \n        else:\n            # will die, bigger psycho to left\n            stack.append((p, max_time+1))\n            time_of_death[index]=max_time+1\n\nprint(max(time_of_death))\n    \n\n'''\n7\n15 9 5 10 7 11 14\n'''", "def main():\n\n    from bisect import bisect_left as bl, bisect_right as br, insort\n    import sys,math\n    #from heapq import heapify, heappush, heappop\n    from collections import defaultdict as dd, deque\n    def data(): return sys.stdin.readline().strip()\n    def mdata(): return list(map(int, data().split()))\n    out = sys.stdout.write\n    # sys.setrecursionlimit(100000)\n    INF = float(\"INF\")\n    mod = int(1e9)+7\n\n    n=int(data())\n    l=mdata()\n    cnt=0\n    m=0\n    max1=0\n    X=[]\n    for i in l[::-1]:\n        while len(X) and X[-1][0]<i:\n            m=max(m+1,X[-1][1])\n            X.pop()\n        X.append([i, m])\n        if m>max1:\n            max1=m\n        m=0\n    print(max1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import sqrt,ceil,gcd\nfrom collections import defaultdict\n\n\n\ndef modInverse(b,m):\n    g = gcd(b, m)\n    if (g != 1):\n        # print(\"Inverse doesn't exist\")\n        return -1\n    else:\n        # If b and m are relatively prime,\n        # then modulo inverse is b^(m-2) mode m\n        return pow(b, m - 2, m)\n\ndef sol(n,m,rep):\n\n    r = 1\n    for i in range(2,n+1):\n        j = i\n        while j%2 == 0 and rep>0:\n\n            j//=2\n            rep-=1\n\n        r*=j\n        r%=m\n\n    return r\n\n\n\n\n\ndef solve():\n\n   n = int(input())\n   l = list(map(int,input().split()))\n   st = []\n   ans = 0\n   hash = defaultdict(lambda : -1)\n   for i in range(n):\n       hash[i] = 0\n\n\n       while st!=[] and l[st[-1]]<l[i]:\n               z = st.pop()\n               hash[i] = max(hash[i],hash[z]+1)\n\n\n       if st == []:\n           hash[i] = -1\n       st.append(i)\n       ans = max(ans,hash[i]+1)\n   print(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# t = int(input())\n# for _ in range(t):\nsolve()\n\n\n\n\n\n\n\n\n\n"]