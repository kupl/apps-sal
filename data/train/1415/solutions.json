["for _ in range(int(input())):\n s=str(input())\n n=len(s)\n k=s[::-1]\n a,b=\"\",\"\"\n for i in range(n):\n  if s[i]!=k[i]:\n   a+=s[i+1:]\n   b+=k[i+1:]\n   break\n  else:\n   a+=s[i]\n   b+=k[i]\n #print(a,b)\n if a==a[::-1] or b==b[::-1]:\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "for _ in range(int(input())):\n s=str(input())\n k=s[::-1]\n n=len(s)\n grid=[[0]*(n+1) for i in range(n+1)]\n for i in range(n+1):\n  for j in range(n+1):\n   if i==0 or j==0:\n    grid[i][j]=0\n   elif s[i-1]==k[j-1]:\n    grid[i][j]=grid[i-1][j-1]+1\n   else:\n    grid[i][j]=max(grid[i-1][j],grid[i][j-1])\n if n-grid[n][n]<=1:\n  print(\"YES\")\n else:\n  print(\"NO\")\n  \n  \n", "# cook your dish here\ndef solve():\n s=input().strip()\n i=0\n j=len(s)-1\n a=''\n b=''\n while i<=j:\n  if s[i]!=s[j]:\n   a=s[:i]+s[i+1:]\n   b=s[:j]+s[j+1:]\n   break\n  i+=1\n  j-=1\n if a==a[::-1] or b==b[::-1]:\n  print(\"YES\")\n else:\n  print(\"NO\")\n\ntest=int(input())\nfor _ in range(test):\n solve()", "def solve():\n s=input().strip()\n i=0\n j=len(s)-1\n a=''\n b=''\n while i<=j:\n  if s[i]!=s[j]:\n   a=s[:i]+s[i+1:]\n   b=s[:j]+s[j+1:]\n   break\n  i+=1\n  j-=1\n if a==a[::-1] or b==b[::-1]:\n  print(\"YES\")\n else:\n  print(\"NO\")\n\ndef __starting_point():\n t=int(input())\n for _1 in range(t):\n  solve()\n__starting_point()", "import sys\n\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\n\nfor _ in range(int(input())):\n flag1=1\n flag2=1\n s = input()\n i = 0\n j = len(s)-1\n while(i<=j):\n  if(s[i]!=s[j]):\n   break\n  i=i+1\n  j=j-1\n if(i>j):\n  print('YES')\n  continue\n k=i\n m=j\n i=i+1\n while(i<=j):\n  if(s[i]!=s[j]):\n   flag1=0\n   break\n  i += 1\n  j -= 1\n i=k\n j=m-1\n while(i<=j):\n  if(s[i]!=s[j]):\n   flag2=0\n   break\n  i += 1\n  j -= 1\n  \n if(flag1 or flag2):\n  print('YES')\n else:\n  print('NO')", "def isp(s):\n return s==s[::-1]\nfor _ in range(int(input())):\n s=input()\n s=list(s)\n if s==s[::-1]:\n  print('YES')\n  continue \n f=0 \n n=len(s)\n for i in range(n):\n  if s[i]!=s[n-i-1]:\n   ind=i \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n   ind=n-i-1 \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n\n   break \n print('YES' if f else 'NO')", "for _ in range(int(input())):\n S=list(input())\n N=len(S)\n c=False\n for i in range(N):\n  p=S.copy()\n  del p[i:i+1]\n  if p==p[::-1]:\n   c=True\n   break\n if c:\n  print('YES')\n else:\n  print('NO')", "from collections import Counter\nfor _ in range(int(input())):\n data = input().strip()\n each_char_count = Counter(data)\n count_ = 0\n ans = 'YES'\n for i in each_char_count:\n  if each_char_count[i]%2!=0:\n   count_ += 1\n  if count_ > 2:\n   ans = 'NO'\n   break\n print(ans)\n", "from collections import Counter\nfor _ in range(int(input())):\n data = input()\n each_char_count = Counter(data)\n count_ = 0\n ans = 'YES'\n for i in each_char_count:\n  if each_char_count[i]%2!=0:\n   count_ += 1\n  if count_ > 2:\n   ans = 'NO'\n   break\n print(ans)\n", "from collections import Counter\nfor _ in range(int(input())):\n data = input()\n each_char_count = Counter(data)\n count_ = 0\n status = False\n for i in each_char_count:\n  if each_char_count[i]%2!=0:\n   count_ += 1\n  if count_ > 2:\n   status = True\n   break\n if status == False:\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "def pal(s):\n f=0\n for i in range(len(s)//2):\n  if s[i]!=s[len(s)-i-1]:\n   f=1\n   break\n if f==0:\n  return 1\n else:\n  return 0\nfor _ in range(int(input())):\n s=input()\n a=pal(s)\n if a==1:\n  print(\"YES\")\n else:\n  f=0\n  for i in range(len(s)-1):\n   s2=s[0:i]+s[i+1:len(s)]\n   a=pal(s2)\n   if a==1:\n    f=1\n    break\n  if f==0:\n   print(\"NO\")\n  else:\n   print(\"YES\")", "def pal(s):\n f=0\n for i in range(len(s)//2):\n  if s[i]!=s[len(s)-i-1]:\n   f=1\n if f==0:\n  return 1\n else:\n  return 0\nfor _ in range(int(input())):\n s=input()\n a=pal(s)\n if a==1:\n  print(\"YES\")\n else:\n  f=0\n  for i in range(len(s)-1):\n   s2=s[0:i]+s[i+1:len(s)]\n   a=pal(s2)\n   if a==1:\n    f=1\n    break\n  if f==0:\n   print(\"NO\")\n  else:\n   print(\"YES\")", "def palindrome(ch):\n t=False\n if ch==ch[::-1]:\n  t=True\n return t\ndef deel(ch,i):\n gh=ch[:i]+ch[i+1:]\n return gh\nfor i in range(int(input())):\n ch=input()\n f=0\n for j in range(len(ch)):\n  \n  gh=deel(ch,j)\n  if palindrome(gh):\n   f=1\n   print('YES')\n   break\n if f==0:\n  print('NO')\n  \n", "t = int(input())\n\n\ndef fun(s):\n for i in range(len(s) - 1):\n  s1 = s[:i] + s[i+1:]\n  if s1 == s1[::-1]:\n   return True\n\n s1 = s[:len(s)-1]\n if s1 == s1[::-1]:\n  return True\n return False\n\n\nfor _ in range(t):\n s = input()\n if fun(s):\n  print(\"YES\")\n else:\n  print(\"NO\")", "# cook your dish here\nt = int(input())\n\n\ndef fun(s):\n for i in range(len(s) - 1):\n  s1 = s[:i] + s[i+1:]\n  if s1 == s1[::-1]:\n   return True\n\n s1 = s[:len(s)]\n if s1 == s1[::-1]:\n  return True\n return False\n\n\nfor _ in range(t):\n s = input()\n if fun(s):\n  print(\"YES\")\n else:\n  print(\"NO\")", "def isp(s):\n return s==s[::-1]\nfor _ in range(int(input())):\n s=input()\n s=list(s)\n if s==s[::-1]:\n  print('YES')\n  continue \n f=0 \n n=len(s)\n for i in range(n):\n  if s[i]!=s[n-i-1]:\n   ind=i \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n   ind=n-i-1 \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n\n   break \n print('YES' if f else 'NO')", "def is_pal(s):\n if len(s)==1:\n  return 1\n else:\n  count=0\n  for i in range(int(len(s)/2)):\n   if s[i]==s[len(s)-1-i]:\n    count+=1\n  if count==int(len(s)/2):\n   return 1\n  else:\n   return 0\nt = int(input())\nfor i in range(t):\n count=0\n s = input()\n c = list()\n d = list()\n f = 0\n if is_pal(s):\n  print('YES')\n else:\n  for j in range(len(s)):\n   c.append(s[j])\n   d.append(s[j])\n  \n  n = len(s)\n  for j in range(n):\n   if s[j]!=s[n-j-1]:\n    c.pop(j)\n    x = is_pal(c)\n    if x==1:\n     f=1\n     break\n    else:\n     c.clear()\n     for i in range(len(d)):\n      c.append(d[i])\n     c.pop(n-j-1)\n     x = is_pal(c)\n     if x==1:\n      f=1\n      break\n     else:\n      c.clear()\n      for i in range(len(d)):\n       c.append(d[i])\n  if f==1:\n   print('YES')\n  else:\n   print('NO')\n", "def is_pal(s):\n if len(s)==1:\n  return 1\n else:\n  count=0\n  for i in range(int(len(s)/2)):\n   if s[i]==s[len(s)-1-i]:\n    count+=1\n  if count==int(len(s)/2):\n   return 1\n  else:\n   return 0\nt = int(input())\nfor i in range(t):\n count=0\n s = input()\n c = list()\n d = list()\n for j in range(len(s)):\n  c.append(s[j])\n  d.append(s[j])\n#     print(c)\n#     print(d)\n for j in range(len(s)):\n  c.pop(j)\n  x = is_pal(c)\n  if x==1:\n   print('YES')\n   break\n  else:\n#             print(c)\n   count+=1\n   c.clear()\n   for i in range(len(d)):\n    c.append(d[i])\n#             print(c)\n if count==len(s):\n  print('NO')", "t = int(input())\nfor T in range(t):\n s = input()\n alpha = [0] * 26\n odd = 0\n for i in s:\n  alpha[ord(i) - 97] += 1\n for i in range(26):\n  alpha[i] = alpha[i] % 2\n  if alpha[i] == 1:\n   odd += 1\n if odd <= 2:\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "def isp(s):\n return s==s[::-1]\nfor _ in range(int(input())):\n s=input()\n s=list(s)\n if s==s[::-1]:\n  print('YES')\n  continue \n f=0 \n n=len(s)\n for i in range(n):\n  if s[i]!=s[n-i-1]:\n   ind=i \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n   ind=n-i-1 \n   if isp(s[:ind]+s[ind+1:]):\n    f=1 \n\n   break \n print('YES' if f else 'NO')", "def isp(s):\n return s==s[::-1]\nfor _ in range(int(input())):\n s=input()\n s=list(s)\n if s==s[::-1]:\n  print('YES')\n  continue \n f=0 \n n=len(s)\n for i in range(n):\n  if isp(s[:i]+s[i+1:]):\n   f=1 \n   break \n print('YES' if f else 'NO')", "from collections import Counter\nfor _ in range(int(input())):\n s=input()\n Length=len(s)\n List=list(s)\n even=0\n odd=0\n Dict=Counter(List)\n Len=len(Dict)\n if(Length%2!=0):\n  for i in Dict:\n   if(Dict[i]%2==0):\n    even+=1\n   else:\n    odd+=1\n  if(odd==1):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n   \n else:\n  for i in Dict:\n   if(Dict[i]%2==0):\n    even+=1\n   else:\n    odd+=1\n  if(odd==0 or odd==2):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n\n   \n \n \n", "from collections import Counter\nfor _ in range(int(input())):\n s=input()\n Length=len(s)\n List=list(s)\n even=0\n odd=0\n Dict=Counter(List)\n Len=len(Dict)\n if(Length%2!=0):\n  for i in Dict:\n   if(Dict[i]%2==0):\n    even+=1\n   else:\n    odd+=1\n  if(odd==1):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n   \n else:\n  for i in Dict:\n   if(Dict[i]%2==0):\n    even+=1\n   else:\n    odd+=1\n  if(odd<=2):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n\n   \n \n \n", "for _ in range(int(input())):\n s=input()\n p=int(len(s))\n r=list(s)\n w=0\n if r==r[::-1]:\n  print('YES')\n else:\n  for i in range(p):\n   w=2\n   r.pop(i)\n   if r==r[::-1]:\n    w=1\n    break\n   r=list(s)\n if w==1:\n  print(\"YES\")\n elif w==2:\n  print(\"NO\") \n", "for _ in range(int(input())):\n s=input()\n p=len(s)\n r=list(s)\n w=0\n if r==r[::-1]:\n  print('YES')\n else:\n  for i in range(p):\n   w=2\n   r.pop(i)\n   if r==r[::-1]:\n    w=1\n    break\n   r=list(s)\n if w==1:\n  print(\"YES\")\n elif w==2:\n  print(\"NO\") "]