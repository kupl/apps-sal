["from functools import reduce\nfrom operator import mul\n\ndef insane_inc_or_dec(x):   \n    return (reduce(mul,[x + i + i * (i == 10) for i in range(1, 11)]) // 3628800 - 10 * x - 2) % 12345787    ", "MOD = 12345787\n\ndef n_choose_k(n,k):\n    if not k or n == k: return 1\n    if k < 0 or k > n: return 0\n    if 2*k > n: k = n - k\n    ans = 1\n    for i in range(k):\n        ans = (ans*(n-i)//(i+1))\n    return ans\n    \ndef insane_inc_or_dec(x):\n    return (n_choose_k(9+x,x) + n_choose_k(10+x,x) - 10*x - 2) % MOD\n", "def insane_inc_or_dec(m):\n    num = den = 1\n    for i in range(1, 11):\n        num *= m + i + i * (i >= 10)\n        den *= i\n    return (num // den - 10 * m - 2) % 12345787", "p = 12345787\n\ndef insane_inc_or_dec(m):\n    num = den = 1\n    for i in range(1, 11):\n        num *= m + i + i * (i == 10)\n        den *= i\n    return (num // den - 10 * m - 2) % p", "insane_inc_or_dec = lambda Q : (reduce(lambda D,V : D * (1 + V + Q),range(9),1) * (20 + Q) / 3628800 - 10 * Q - 2) % 12345787", "from functools import reduce\ncomb = lambda n: reduce(lambda x,y:x*y, range(n+9, n+1, -1))//40320\nf = lambda n: (n**2 + 21*n + 20)*comb(n)//90 - 10*n -2\ndef insane_inc_or_dec(x):\n    return f(x) % 12345787", "import operator as op\nfrom functools import reduce\n\ndef Combi(n, k):\n    if k > n: return 0\n    k1, k2 = sorted((k, n-k))\n    num = reduce(op.mul, range(n, k2, -1), 1)\n    d = reduce(op.mul, range(1, k1+1), 1)\n    return num//d\n\ndef insane_inc_or_dec(n):\n    return (Combi(n+10, 10)+Combi(n+9,9)-2-10*n)%12345787", "from scipy.special import comb\n\nMOD = 12345787\n\ndef insane_inc_or_dec(n):\n    n %= MOD\n    return (comb(n+10,10,exact=1) + comb(n+9,9,exact=1) - 10*n - 2) % MOD", "def comb(n,k):\n    c=1\n    for i in range(n,n-k,-1):\n        c*=i\n    for i in range(1,k+1):\n        c//=i\n    return c\n\ndef insane_inc_or_dec(max_digits):\n    increasing=comb(max_digits+9,9)-1\n    decreasing=comb(max_digits+10,10)-max_digits-1\n    return (increasing+decreasing-9*max_digits+1-1)%12345787", "def insane_inc_or_dec(n):\n    modulo = 12345787\n    a, b, k = n+1, 1, 9\n    for r in range(2, k+1):\n        a *= n+r\n        b *= r\n    binomial = a//b # is (n+k)-choose-k with k=9\n    return (binomial + binomial*(n+10)//10 - 10*n - 2) % modulo\n"]