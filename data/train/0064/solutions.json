["import sys\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return list(map(int, tinput()))\n\ndef fiinput():\n    return list(map(float, tinput()))\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():\n    n, l = rinput()\n    #n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    q = rlinput()\n    #q = linput()\n    q = [0] + q + [l]\n    w, e = [0] * (n + 2), [0] * (n + 2)\n    \n    for i in range(1, n + 2):\n        e[n + 1 - i] = e[n + 2 - i] + ((q[-i] - q[-1 - i]) / i)\n        w[i] = w[i - 1] + ((q[i] - q[i - 1]) / i)\n        \n    left, right = 0, n + 2\n    while right > left + 1:\n        mid = (right + left) // 2\n        if w[mid] >= e[mid]:\n            right = mid\n        else:\n            left = mid\n            \n    print((q[right] - q[right - 1] - (max(0, w[right - 1] - e[right]) * (n - right + 2) + max(0, e[right] - w[right - 1]) * right)) / (n + 2) + max(w[right - 1], e[right]))\n        \n\n            \n        \n    \n                \n    \n    \n    \n            \n    \n        \n    \n\nfor i in range(iinput()):\n    main()\n", "for __ in range(int(input())):\n    n, l = list(map(int, input().split()))\n    ar = list(map(int, input().split()))\n    i, j = 0, n - 1\n    x, y = 0, l\n    v1, v2 = 1, 1\n    ans = 0\n    while i <= j and x < y:\n        if (ar[i] - x) / v1 < (y - ar[j]) / v2:\n            ans += (ar[i] - x) / v1\n            y -= v2 * (ar[i] - x) / v1\n            x = ar[i]\n            v1 += 1\n            i += 1\n        else:\n            ans += (y - ar[j]) / v2\n            x += v1 * (y - ar[j]) / v2\n            y = ar[j]\n            v2 += 1\n            j -= 1\n    ans += (y - x) / (v1 + v2)\n    print(ans)", "for _ in range(int(input())):\n  n,l=map(int,input().split())\n  a=[0]+list(map(int,input().split()))+[l]\n  b=[a[i+1]-a[i] for i in range(n+1)]\n  ansl=0\n  le=0\n  lf=1\n  ansr=0\n  ri=n\n  rf=1\n  while le!=ri:\n    if ansl+b[le]/lf<ansr+b[ri]/rf:\n      ansl+=b[le]/lf\n      le+=1\n      lf+=1\n    else:\n      ansr+=b[ri]/rf\n      ri-=1\n      rf+=1\n  t=b[le]\n  ans=max(ansl,ansr)\n  if ansl<ansr:\n    t-=(ansr-ansl)*lf\n  if ansl>ansr:\n    t-=(ansl-ansr)*rf\n  print(ans+t/(lf+rf))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, l = map(int, input().split())\n    alst = list(map(int, input().split()))\n    ll = 0\n    rr = n - 1\n    l_pos = 0\n    r_pos = l\n    l_speed = 1\n    r_speed = 1\n    ans = 0\n    while rr >= ll:\n        l2 = (alst[ll] - l_pos) * r_speed\n        r2 = (r_pos - alst[rr]) * l_speed\n        if r2 == l2:\n            ans += (alst[ll] - l_pos) / l_speed\n            r_pos = alst[rr]\n            l_pos = alst[ll]\n            r_speed += 1\n            l_speed += 1\n            rr -= 1\n            ll += 1\n        elif r2 < l2:\n            ans += (r_pos - alst[rr]) / r_speed\n            l_pos += (r_pos - alst[rr]) / r_speed * l_speed\n            r_pos = alst[rr]\n            r_speed += 1\n            rr -= 1\n        else:\n            ans += (alst[ll] - l_pos) / l_speed\n            r_pos -= (alst[ll] - l_pos) / l_speed * r_speed\n            l_pos = alst[ll]\n            l_speed += 1\n            ll += 1\n\n    ans += (r_pos - l_pos) / (r_speed + l_speed)\n    print(ans)\n    \nfor _ in range(int(input())):\n    main()", "from sys import stdin\ninput = stdin.readline\n\n\ndef myk(l, stops, czas):\n    pos = 0\n    v = 1.0\n    for stop in stops:\n        dist = stop - pos\n        if czas * v > dist:\n            czas -= dist/v\n            pos = stop\n            v += 1\n        else:\n            return pos + czas * v\n    return pos + czas * v\n\n\ndef solve():\n    n, l = [int(x) for x in input().split()]\n    a = [int(x) for x in input().split()]\n    b = [l - x for x in a[::-1]]\n    pocz = 0.0\n    kon = l/2.0\n    eps = 1e-7\n    while pocz + eps < kon:\n        mid = (pocz + kon) / 2.0\n        pos1 = myk(l, a, mid)\n        pos2 = l - myk(l, b, mid)\n        if pos1 < pos2:\n            pocz = mid\n        else:\n            kon = mid\n    print(kon)\n\n\nt = int(input())\n\nfor _ in range(t):\n    solve()", "import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    n,l = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    a = [0] + a + [l]\n\n    s = [0 for i in range(n+2)]\n    e = [0 for i in range(n+2)]\n    for i in range(1,n+2):\n        s[i] = (a[i] - a[i-1])/i\n        s[i] += s[i-1]\n    a = a[::-1]\n    for i in range(1,n+2):\n        e[i] = (a[i-1] - a[i])/i\n        e[i] += e[i-1]\n    e = e[::-1]\n    #print(s)\n    #print(e)\n    a = a[::-1]\n\n    for i in range(1,n+2):\n        if s[i]>=e[i]:\n            #i-1~i\n            #print(i)\n            s_speed = i\n            e_spped = n+2-i\n            if s[i-1]<=e[i]:\n                L = a[i] - a[i-1] - s_speed * (e[i] - s[i-1])\n                t = L/(n+2)\n                ans = e[i] + t\n                print(ans)\n                break\n            else:\n                L = a[i] - a[i-1] - e_spped * (s[i-1] - e[i])\n                t = L/(n+2)\n                ans = s[i-1] + t\n                print(ans)\n                break\n", "t = int(input())\nfor i in range(t):\n\tn, l = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\ttmp1 = 0\n\ttmp2 = n - 1\n\tt = 0\n\tv1 = 1\n\tv2 = 1\n\tx1 = 0\n\tx2 = l\n\twhile (tmp2 - tmp1) > -1:\n\t\tt1 = (a[tmp1] - x1) / v1\n\t\tt2 = (x2 - a[tmp2]) / v2\n\t\tif t1 > t2:\n\t\t\tx1 += v1 * t2\n\t\t\tx2 -= v2 * t2\n\t\t\tv2 += 1\n\t\t\tt += t2\n\t\t\ttmp2 -= 1\n\t\telif abs(t1 - t2) < 0.000000001:\n\t\t\tx1 += v1 * t1\n\t\t\tx2 -= v2 * t2\n\t\t\tv1 += 1\n\t\t\tv2 += 1\n\t\t\tt += t1\n\t\t\ttmp2 -= 1\n\t\t\ttmp1 += 1\n\t\telse:\n\t\t\tx1 += v1 * t1\n\t\t\tx2 -= v2 * t1\n\t\t\tv1 += 1\n\t\t\tt += t1\n\t\t\ttmp1 += 1\n\tt += (x2 - x1) / (v1 + v2)\n\tprint(\"{:.07f}\".format(t))\n\t\t\n", "for _ in range(int(input())):\n    n, l = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    ls, rs, lx, rx, li, ri = 1, 1, 0, l, 0, n\n    total = 0\n    while li != ri:\n        if (arr[li]-lx)/ls < (rx-arr[ri-1])/rs:\n            total += (arr[li]-lx)/ls\n            rx -= (arr[li]-lx)/ls*rs\n            lx = arr[li]\n            li += 1\n            ls += 1\n        else:\n            total += (rx-arr[ri-1])/rs\n            lx += (rx-arr[ri-1])/rs*ls\n            rx = arr[ri-1]\n            ri -= 1\n            rs += 1\n    total += (rx-lx)/(ls+rs)\n    print(total)\n", "import sys\ninput = sys.stdin.readline\n\nfrom bisect import bisect_right\n\nfor _ in range(int(input())):\n\tn, l = list(map(int, input().split()))\n\tA = list(map(int, input().split()))\n\n\tc1 = []\n\tspeed = 1\n\tx = 0\n\tt = 0.\n\tfor a in A:\n\t\tt += (a-x)/speed\n\t\tc1.append(t)\n\t\tspeed += 1\n\t\tx = a\n\n\tc2 = []\n\tspeed = 1\n\tx = l\n\tt = 0.\n\tfor a in reversed(A):\n\t\tt += (x-a)/speed\n\t\tc2.append(t)\n\t\tspeed += 1\n\t\tx = a\n\n\tlo = 0.\n\thi = float(l)\n\n\twhile hi - lo > 1e-7:\n\t\tm = (lo + hi) / 2\n\n\t\ti1 = bisect_right(c1, m)-1\n\t\tif i1 == -1:\n\t\t\tx1 = m\n\t\telse:\n\t\t\ttpass = c1[i1]\n\t\t\ttextra = m - tpass\n\t\t\tx1 = A[i1] + textra * (i1+2)\n\n\t\ti2 = bisect_right(c2, m)-1\n\t\tif i2 == -1:\n\t\t\tx2 = l-m\n\t\telse:\n\t\t\ttpass = c2[i2]\n\t\t\ttextra = m - tpass\n\t\t\tx2 = A[-1-i2] - textra * (i2+2)\n\n\t\tif x1 < x2: lo = m\n\t\telse: hi = m\n\n\tprint((lo+hi)/2)\n", "y=lambda:[*map(int,input().split())]\nfor _ in range(int(input())):\n    n,t=map(int,input().split())\n    a=[0]+y()+[t]\n    l,h=0,n+1\n    tl=th=0\n    while h-l>1:\n        dl=(a[l+1]-a[l])/(l+1)\n        dh=(a[h]-a[h-1])/(n+2-h)\n        if tl+dl>th+dh:th+=dh;h-=1\n        else:tl+=dl;l+=1\n    sh,sl=n+2-h,l+1\n    if tl>th:tl,th=th,tl;sh,sl=sl,sh\n    print(th+(a[h]-a[l]-(th-tl)*sl)/(sh+sl))", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nT = int(input())\nfor _ in range(T):\n    N, L = list(map(int, input().split()))\n    N += 2\n    A = [0] + [int(a) for a in input().split()] + [L]\n    x1 = 0\n    x2 = N - 1\n    t1, t2 = 0, 0\n    while x2 - x1 > 1:\n        a1 = t1 + (A[x1+1] - A[x1]) / (x1 + 1)\n        a2 = t2 + (A[x2] - A[x2-1]) / (N - x2)\n        if a1 < a2:\n            t1 = a1\n            x1 += 1\n        else:\n            t2 = a2\n            x2 -= 1\n    if t1 < t2:\n        ans = t2 + ((A[x2] - A[x1]) - (x1 + 1) * (t2 - t1)) / (x1 + 1 + N - x2)\n    else:\n        ans = t1 + ((A[x2] - A[x1]) - (N - x2) * (t1 - t2)) / (x1 + 1 + N - x2)\n    print(ans)\n\n"]