["for _ in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    su=l[0]\r\n    for i in range(1,n):\r\n        su^=l[i]\r\n    print(su)", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    x = 0\n    for i in range(0,len(a)):\n        x = x^a[i]\n    print(x)", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    x = 0\n    for i in range(0,len(a)):\n        x = x^a[i]\n    print(x)", "for _ in range(int(input())):\n    n=int(input())\n    a=[int(X ) for X in input().split()]\n    x=0\n    for i in a:\n       x^=i\n    print(x)# cook your dish here\n", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=0\n    for i in l:\n        s^=i\n    print(s)", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    li=list(map(int,input().split()))\n    l=len(li)\n    res=li[0]\n    for i in range(1,l):\n        res=res^li[i]\n    print(res)", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=0\n    l.sort()\n    for i in range(n):\n        s=s^l[i]\n        #s=s^i\n    print(s)        ", "from functools import reduce\nfor _ in range(int(input())) :\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    print(reduce(lambda x, y: x^y, arr))", "# cook your dish here\nt=int(input())\nwhile(t):\n    n=int(input())\n    #n,k=map(int,input().split())\n    l=list(map(int,input().split()))\n    ans=0\n    for i in range(len(l)):\n        #print(ans^l[i])\n        ans=(ans^l[i])\n        \n    print(ans)\n    t-=1", "t=int(input())\r\n\r\nfor t1 in range(t):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    s=bin(a[0])[2:]\r\n    s1=a[0]\r\n    for i in range(1,n):\r\n        x=bin(a[i])[2:]\r\n        \r\n        if len(s)>len(x):\r\n            j=1\r\n            s1=''\r\n            while j<=len(x):\r\n                if s[-j]==x[-j]:\r\n                    s1+=\"0\"\r\n                else:\r\n                    s1+=\"1\"\r\n                j+=1\r\n            \r\n            while j<=len(s):\r\n                s1+=s[-j]\r\n                j+=1\r\n            \r\n            s=s1[::-1]\r\n        else:\r\n            j=1\r\n            s1=''\r\n            while j<=len(s):\r\n                if s[-j]==x[-j]:\r\n                    s1+=\"0\"\r\n                else:\r\n                    s1+=\"1\"\r\n                j+=1\r\n\r\n            while j<=len(x):\r\n                s1+=x[-j]\r\n                j+=1\r\n            \r\n            s=s1[::-1]\r\n            \r\n    s=\"0b\"+s\r\n    print(int(s,2))\r\n\r\n                \r\n\r\n\r\n", "t=int(input())\r\n\r\nfor t1 in range(t):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    s=bin(a[0])[2:]\r\n    s1=a[0]\r\n    for i in range(1,n):\r\n        x=bin(a[i])[2:]\r\n        \r\n        if len(s)>len(x):\r\n            j=1\r\n            s1=''\r\n            while j<=len(x):\r\n                if s[-j]==x[-j]:\r\n                    s1+=\"0\"\r\n                else:\r\n                    s1+=\"1\"\r\n                j+=1\r\n            \r\n            while j<=len(s):\r\n                s1+=s[-j]\r\n                j+=1\r\n            \r\n            s=s1[::-1]\r\n        else:\r\n            j=1\r\n            s1=''\r\n            while j<=len(s):\r\n                if s[-j]==x[-j]:\r\n                    s1+=\"0\"\r\n                else:\r\n                    s1+=\"1\"\r\n                j+=1\r\n\r\n            while j<=len(x):\r\n                s1+=x[-j]\r\n                j+=1\r\n            \r\n            s=s1[::-1]\r\n            \r\n    s=\"0b\"+s\r\n    print(int(s,2))\r\n\r\n                \r\n\r\n\r\n", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=[l[0]]\n    for i in range(0,n-1):\n        s.append(s[i]^l[i+1])\n    print(s[-1])", "for i in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    x = a[0]\n    for j in range(1, n):\n        x = a[j] ^ x\n        \n    print(x)", "for i in range(int(input())):\r\n    n=int(input())\r\n    lst=list(map(int,input().split()))\r\n    x=0\r\n    for j in range(n):\r\n        x^=lst[j]\r\n        \r\n\r\n\r\n    print(x)", "# cook your dish here\ntest = int(input())\n\nfor i in range(test):\n    n = int(input())\n    val = list(map(int,input().split()))\n\n\n    x = 0\n    if(len(val)==n):\n        for i in val:\n            x^=i\n        print(x)\n", "for i in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    s=a[0]\r\n    for i in range(1,n):\r\n        s=s^a[i]\r\n    print(s)", "# cook your dish here\ntc = int(input())\nwhile tc:\n    tc -= 1\n    n = int(input())\n    lst = list(map(int, input().split()))\n    t = 0\n    for x in lst:\n        t = t^x\n    print(t)", "t=int(input())\r\nwhile t>0:\r\n    t=t-1\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    q=0\r\n    for i in l:\r\n        q=q^i\r\n    print(q)", "# cook your dish here\nfor i in range(int(input())):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    ans=0\n    for i in arr:\n        ans^=i\n    print(ans)", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: list(map(int,input().split()))\r\nmif    =lambda: list(map(float,input().split()))\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n=ii()\r\n    arr=lii()\r\n    sol=0\r\n    for ele in arr:\r\n        sol=sol^ele\r\n    print(sol)\r\n    \r\n", "for _ in range(int(input())):\n    n = int(input())\n    ls =  list(map(int,input().rstrip().split(\" \")))\n    res=ls[0]\n    for i in range(1,n):\n   \n        res=res^ls[i]\n    print(res)\n", "\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    ans=0\n    for i in l:\n        ans^=i\n    print(ans)\n\n\n\n\n\n", "for _ in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    a.sort()\r\n    r= a[0]^a[1]\r\n    for i in range(2,n):      \r\n        r=r^a[i]\r\n\r\n    print(r)    \r\n        \r\n\r\n", "\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    ans=0\n    for i in l:\n        ans^=i\n    print(ans)\n\n\n\n\n\n", "# cook your dish here\nt=int(input())\nw=[]\nfor _ in range(t):\n    n=int(input())\n    s=list(map(int,input().split()))\n    a=s[0]^s[1]\n    for i in range(n-2):\n        a=a^s[i+2]\n    w.append(a)\nfor i in w:\n    print(i)\n\n\n\n\n"]