["class Solution:\n     def characterReplacement(self, s, k):\n         \"\"\"\n         :type s: str\n         :type k: int\n         :rtype: int\n         \"\"\"\n         if s == \"\":\n             return 0\n         count = {}\n         lo = 0\n         hi = 0\n         max_letter = 0\n         for hi in range(len(s)):\n             try:\n                 count[s[hi]] += 1\n             except:\n                 count[s[hi]] = 1\n             if count[s[hi]] > max_letter:\n                 max_letter = count[s[hi]]\n             if max_letter < hi - lo + 1 - k:\n                 if max_letter == count[s[lo]]:\n                     max_letter -= 1\n                 count[s[lo]] -= 1\n                 lo += 1\n         return hi - lo + 1", "class Solution:\n     def characterReplacement(self, s, k):\n         \"\"\"\n         :type s: str\n         :type k: int\n         :rtype: int\n         \"\"\"\n         ls = len(s)\n         start, end, max_len = 0, 0, 0\n         char_map, cnt, cur_max_char = {}, 0, 0\n         while end < ls:\n             # print(char_map)\n             if s[end] in char_map:\n                 char_map[s[end]] += 1\n             else:\n                 char_map[s[end]] = 1\n             cnt += 1\n             if char_map[s[end]] > cur_max_char:\n                 cur_max_char = char_map[s[end]]\n             # invalid\n             if cnt - cur_max_char > k:\n                 char_map[s[start]] -= 1\n                 start += 1\n                 cnt -= 1\n             else:\n                 max_len = max(max_len, cnt)\n             end += 1\n                 \n         return max_len\n", "class Solution:\n     def characterReplacement(self, s, k):\n         \"\"\"\n         :type s: str\n         :type k: int\n         :rtype: int\n         \"\"\"\n         start = end  = maxn = 0\n         alpha_dict = collections.defaultdict(int)\n         for end in range(1,len(s)+1):\n             alpha_dict[s[end-1]] += 1\n             maxn = max(maxn, alpha_dict[s[end-1]])\n             if end-start > k+maxn:\n                 alpha_dict[s[start]] -= 1\n                 start += 1\n         return end-start\n"]