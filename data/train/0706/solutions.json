["t=int(input())\nfor i in range(t):\n x,y=0,0\n n,m=list(map(int,input().split()))\n l=list(map(int,input().split()))\n if(max(l)>m):\n  print(-1)\n else:\n  for i in range(len(l)):\n   y+=l[i]\n   if(y>m):\n    y=l[i]\n    x+=1\n  if(y>0):\n   x+=1\n  print(x)\n", "# cook your dish here\nfor __ in range(int(input())):\n n,k=list(map(int,input().split()))\n arr=list(map(int,input().split()))\n i=0\n c=0\n while(True):\n  if arr[i]>k:\n   ans=-1\n   break\n  else:\n   w=0\n   flag=0\n   for j in range(i,n):\n    if(w+arr[j]<=k):\n     w+=arr[j]\n     flag=1\n     i=j+1\n    else:\n     i=j\n     break\n   if(flag==1):\n    c+=1\n    ans=c\n   if(i>=n):\n    break\n   \n print(ans)\n   \n   \n   \n  \n \n", "def fun(lst, k):\n \n weight = 0\n ans = 1\n \n for el in lst:\n  \n  if el > k:\n   return -1\n  \n  elif weight + el <= k:\n   weight += el\n   \n  else:\n   ans += 1\n   weight = el\n return ans\n\n\nfor _ in range(int(input())):\n \n n, k = list(map(int, input().split()))\n lst = [int(i) for i in input().split()]\n \n print(fun(lst, k))\n", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n\n count = 0\n\n flag = True\n curr_sum = 0\n for i in arr:\n  if i>k:\n   flag = False\n  else:\n   curr_sum+=i\n\n   if curr_sum>k:\n    curr_sum = i\n    count+=1\n \n\n if curr_sum<=k:\n  count+=1\n if flag==False:\n  print(-1)\n else:\n  print(count)\n\n \n \n", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n\n count = 0\n\n flag = True\n curr_sum = 0\n for i in arr:\n  if i>k:\n   flag = False\n  else:\n   curr_sum+=i\n\n   if curr_sum>k:\n    curr_sum = i\n    count+=1\n \n\n if curr_sum<=k:\n  count+=1\n if flag==False:\n  print(-1)\n else:\n  print(count)\n\n \n", "t = int(input())\n\nfor _ in range(t):\n n, k = list(map(int, input().split()))\n w = list(map(int, input().split()))\n \n p = 0; ans = 0\n flag = False\n while p<n:\n  pick = 0\n  if w[p]>k:\n   flag = True; break\n  else:\n   while p<n:\n    if pick+w[p]<=k:\n     pick += w[p]\n     p += 1\n    else:\n     break\n   ans += 1\n   pick = 0\n\n if flag:\n  print(-1)\n else:\n  print(ans)\n   \n   \n  \n", "T=int(input())\nfor i in range(T):\n N,K=map(int,input().split())\n w=list(map(int,input().split()))\n if max(w)<=K:\n  x=y=0\n  for i in range(len(w)):\n   x+=w[i]\n   if x>K:\n    y+=1\n    x=w[i]\n  if x>0:\n   y+=1\n  print(y)\n else:\n  print(\"-1\")", "for _ in range(int(input())):\n n,k = list(map(int,input().split()))\n s = 0\n res = 0\n for i in map(int,input().split()):\n  if i>k:\n   res=-1\n   s=0\n   break\n  if s+i<=k:\n   s+=i\n  else:\n   s=i\n   res+=1\n if s>0: res+=1\n print(res)\n", "t=int(input())\nfor _ in range(t):\n n,k=map(int,input().split())\n w=list(map(int,input().split()))\n count=0\n while w!=[]:\n  w1=[]\n  for i in range(n):\n   if sum(w1)+w[i]<=k:\n    w1.append(w[i])\n   else:\n    break\n  if w1==[]:\n   count=-1\n   break\n  else:\n   w[:len(w1)]=[]\n   n-=len(w1)\n   count+=1\n print(count)", "t=int(input())\nfor i in range(t):\n s,c=0,0\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n if max(l)>k:\n  print(\"-1\")\n else:\n  for i in range(len(l)):\n   s+=l[i]\n   if s>k:\n    c+=1\n    s=l[i]\n  if s>0:\n   c+=1\n    \n  print(c)\n", "for i in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n ro=0\n s=0\n f=1\n for i in range(n):\n  if l[i]>k:\n   print(-1)\n   f=0\n   break\n  s+=l[i]\n  if s>k:\n   s=l[i]\n   ro+=1\n if s and f:\n  print(ro+1)\n elif f:\n  print(ro)", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n,k=map(int,input().split())\n w=list(map(int,input().split()))\n c=1\n d=0\n for i in w:\n  if i>k:\n   c=-1\n   break\n  d+=i\n  if d>k:\n   d=i\n   c+=1\n print(c)", "l=int(input())\n\nfor i in range(l):\n n=input().split()\n k=int(n[1])\n ws = list(map(int, input().split(\" \")))\n \n flag=False\n for w in ws:\n  if w>k:\n   flag=True\n   print(-1)\n   break\n if flag:\n  continue \n p=0\n r=0\n while p<len(ws):\n  r=r+1\n  c=0\n  t=len(ws);\n  while(p<t and c+ws[p]<=k):\n   c=c+ws[p]\n   p=p+1\n    \n print(r)", "MOD = 1000000007\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n # n = int(input())\n weights = list(map(int,input().split()))\n if max(weights)>k :\n  print(-1)\n else :\n  carry = 0\n  rounds = 0\n  for w in weights :\n   if carry+w <= k :\n    carry += w\n   else :\n    rounds += 1\n    carry = w\n  if carry > 0 :\n   rounds += 1\n  print(rounds)\n", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n W = list(map(int, input().split()))\n W_cp = W.copy()\n \n count = 1\n curr = 0\n for i, w in enumerate(W):\n  if w > k:\n   count = -1\n   break\n  \n  curr += w\n  \n  if curr > k:\n   curr = w\n   count += 1\n   \n print(count)", "t = int(input())\n\nfor _ in range(t):\n n, k = [int(x) for x in input().split()]\n w = [int(x) for x in input().split()]\n \n i=0\n total = 0\n c = 0\n flag = 0\n \n while(i<n):\n  if(w[i] > k):\n   flag = 1\n   break\n  total += w[i]\n  if(total > k):\n   total = 0\n   c += 1\n  else:\n   i += 1\n \n if(flag == 1):\n  print(-1)\n else:\n  print(c+1)", "a=int(input())\nfor i in range(a):\n m,o=input().split()\n n,k=[int(m),int(o)]\n b=list(map(int,input().split()))\n c=max(b)\n u=0\n z=1\n if k<c:\n  print(\"-1\")\n else:\n  for j in b:\n   if u+j <=k:\n    u=u+j\n   else:\n    u=j\n    z=z+1\n  print(z)", "a=int(input())\nfor i in range(a):\n m,o=input().split()\n n,k=[int(m),int(o)]\n b=list(map(int,input().split()))\n u=0\n z=1\n for j in b:\n  if j>k:\n   z=0\n   break\n  elif u+j <=k:\n   u=u+j\n  else:\n   u=j\n   z=z+1\n\n if z==0:\n  print(-1)\n else:\n  print(z)", "for t in range(int(input())):\n n, k = map(int, input().split())\n B = list(map(int, input().split()))\n flag = 1\n w = 0\n for i in range(n):\n  if B[i] > k:\n   flag = 0\n   break\n  elif w + B[i] <= k:\n   w += B[i]\n  else:\n   w = B[i]\n   flag += 1\n if flag == 0:\n  print(\"-1\")\n else:\n  print(flag)", "# cook your dish here\nimport sys\n\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\nfor t in range(int(input())):\n N, K = get_ints()\n B = get_array()\n flag = 1\n w = 0\n for i in range(N):\n  if B[i] > K:\n   flag = 0\n   break\n  elif w + B[i] <= K:\n   w += B[i]\n  else:\n   w = B[i]\n   flag += 1\n if flag == 0:\n  print(\"-1\")\n else:\n  print(flag)", "# cook your dish here\nfor _ in range(int(input())):\n w,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n if(max(l)<=k):\n  i=0\n  r=0\n  while i<w:\n   a=0\n   #print(\"hii\")\n   for j in range(w-i):\n    a+=l[i+j]\n    if a>k:\n     j-=1 \n     break\n   r+=1\n   i+=(j+1)\n   \n   \n   \n  print(r) \n else:\n  print(-1)\n", "try:\n for t in range(int(input())):\n  n,k = list(map(int,input().split()))\n  l = list(map(int,input().split()))\n  c = 0\n  z = k \n  for j in range(0,n):\n   if(l[j]<=z):\n    z = z-l[j]\n    if(j+1<n and l[j+1]>z):\n     z = k \n     c= c+1 \n   else:\n    c = -2\n    break\n  if(c==-2):\n   print(-1)\n  else:\n   print(c+1)\nexcept EOFError as e:\n pass\n  # TODO: write code...\n"]