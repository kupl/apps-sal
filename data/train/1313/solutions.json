["from math import sqrt,gcd\n\nfor _ in range(int(input())):\n    n=int(input())\n    ar=[int(x) for x in input().split()]\n    g=ar[0]\n    for i in range(1,n):\n        g=gcd(g,ar[i])\n    \n    f=g\n    for i in range(2,int(sqrt(g))+1):\n        if g%i==0:\n            f=i\n            break\n    if g!=1:\n        print(f)\n    else:\n        print(-1)\n        \n        \n    ", "from math import gcd,sqrt\n\nT = int(input())\nans = []\n\nfor _ in range(T):\n    N = int(input())\n    A = [int(i) for i in input().split()]\n\n    g = A[0]\n    for i in range(1,N):\n        g = gcd(g,A[i])\n\n    f = g\n    # print(g,'$')\n    for i in range(2,int(sqrt(g))+1):\n        if(g%i==0):\n            f = i\n            break\n    if(g!=1):\n        ans.append(f)\n    else:\n        ans.append(-1)\n\nfor i in ans:\n    print(i)", "# cook your dish here\nimport math\n\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int, input().split()))\n    if l[0]==1:\n        print(-1)\n        \n    else:\n        l1=[l[0]]\n        flag=0\n        for i in range(1, n):\n            p=math.gcd(l1[-1], l[i])\n            if p==1:\n                print(-1)\n                flag=1 \n                break\n            \n            else:\n                l1.append(p)\n\n        if flag==0:\n            p=l1[-1]\n            for i in range(2, int(p**0.5)+1):\n                if p%i==0:\n                    print(i)\n                    flag=1 \n                    break\n                \n        if flag==0:\n            print(p)", "from functools import reduce\r\nfrom math import gcd\r\ndef sieve(n):\r\n    start = int(n**0.5) +2\r\n    arr =[True]*(n+1)\r\n    primes= []\r\n    for i in range(2,start):\r\n        if arr[i]==True:\r\n            primes.append(i)\r\n        for j in range(i*2,n+1,i):\r\n            arr[j]=False\r\n    #saved till start primes now saving from start till n\r\n    for i in range(start,n+1):\r\n        if arr[i] ==True:\r\n            primes.append(i)\r\n    return primes\r\ndef divs(n,primes):\r\n    sq= n**0.5\r\n    fac =[]\r\n    for i in primes:\r\n        if i > sq:\r\n            break\r\n        if n%i==0:\r\n            fac.append(i)\r\n    if len(fac)==0:\r\n        fac = [n]\r\n    return fac\r\nprimes =sieve(int((10**5)**0.5+1))\r\n#print(primes)\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    ls = [int(X)  for X in input().split()]\r\n    gc = reduce(gcd,ls)\r\n    x = divs(gc,primes)\r\n    if x[0]!=1:\r\n        print(x[0])\r\n    elif x[0]==1 and len(x)>1:\r\n        print(x[1])\r\n    else:print(-1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #gcd gives you the greatest common divisor simply printing this is incorrect\r\n    #since gcd divides all the numbers in the array it's divisors will also do the same\r\n    #find the smallest divisor (smallest prime)", "from functools import reduce\r\nfrom math import gcd\r\ndef sieve(n):\r\n    start = int(n**0.5) +2\r\n    arr =[True]*(n+1)\r\n    primes= []\r\n    for i in range(2,start):\r\n        if arr[i]==True:\r\n            primes.append(i)\r\n        for j in range(i*2,n+1,i):\r\n            arr[j]=False\r\n    #saved till start primes now saving from start till n\r\n    for i in range(start,n+1):\r\n        if arr[i] ==True:\r\n            primes.append(i)\r\n    return primes\r\ndef divs(n,primes):\r\n    sq= n**0.5\r\n    fac =[]\r\n    for i in primes:\r\n        if i > sq:\r\n            break\r\n        if n%i==0:\r\n            fac.append(i)\r\n    if len(fac)==0:\r\n        fac = [n]\r\n    return fac\r\nprimes =sieve(int((10**5)**0.5+1))\r\n#print(primes)\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    ls = [int(X)  for X in input().split()]\r\n    gc = reduce(gcd,ls)\r\n    x = divs(gc,primes)\r\n    if x[0]!=1:\r\n        print(x[0])\r\n    elif x[0]==1 and len(x)>1:\r\n        print(x[1])\r\n    else:print(-1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    #gcd gives you the greatest common divisor simply printing this is incorrect\r\n    #since gcd divides all the numbers in the array it's divisors will also do the same\r\n    #find the smallest divisor (smallest prime)", "from functools import reduce\r\nfrom math import gcd\r\ndef divisor(n):\r\n    i = 3\r\n    while i*i <= n:\r\n        if n%i==0:\r\n            return i\r\n        i+=2\r\n    return n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    ls = [int(X)  for X in input().split()]\r\n    gc = reduce(gcd,ls)\r\n    #gcd gives you the greatest common divisor simply printing this is incorrect\r\n    #since gcd divides all the numbers in the array it's divisors will also do the same\r\n    #find the smallest divisor (smallest prime)\r\n    if gc ==1:\r\n        print(-1)\r\n    elif gc %2 ==0:\r\n        print(2)\r\n    else:\r\n        print(divisor(gc))", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=l[0]\n    for i in range(1,n):\n        s=math.gcd(s,l[i])\n    if s==1:\n        print(-1)\n    elif s%2==0:\n        print(2)\n    else:\n        ans=0\n        for i in range(3,int(s**0.5)+1):\n            if s%i==0:\n                ans=i \n                break \n        if ans==0:\n            print(s)\n        else:\n            print(ans)\n    ", "import math\nT = int(input())\nwhile T:\n    N = int(input())\n    A = list(map(int, input().split()))\n    hcf = A[0]\n    n = len(A)\n    for i in range(1,len(A)):\n        hcf = math.gcd(hcf, A[i])\n    if hcf == 1:\n        print(-1)\n    elif hcf % 2 == 0:\n        print(2)\n    else:\n        answer = 0\n        for j in range(3, int(hcf ** 0.5)+1):\n            if hcf%j == 0:\n                answer = j\n                break\n        if answer == 0:\n            print(hcf)\n        else:\n            print(answer)\n    T -= 1", "# cook your dish here\nfrom math import gcd\nfor _ in range(int(input())):\n    \n    n = int(input())\n    l = list(map(int,input().split()))\n    \n    g=l[0]\n    \n    for x in l:\n        g = gcd(x,g)\n        \n    if g==1:\n        print(-1)\n    elif g%2==0:\n        print(2)\n    else:\n        \n        for i in range(3,int((g)**0.5) +1):\n           \n            if g%i==0:\n                \n                print(i)\n                break\n        else:\n            print(g)\n                \n", "import math\ntest = int(input())\nfor _ in range(test):\n    n = int(input())\n    array = list(map(int, input().split()))\n    hcf = array[0]\n    for i in range(1, n):\n        hcf = math.gcd(hcf, array[i])\n    \n    if hcf==1:\n        print(-1)\n    elif hcf%2==0:\n        print(2)\n    else:\n        answer=0\n        for i in range(3, int((hcf)**0.5) +1):\n            if hcf%i==0:\n                answer = i\n                break\n        if answer==0:\n            print(hcf)\n        else:\n            print(answer)", "import math\r\ndef hcf(a,b):\r\n    if a==0:\r\n        return 1\r\n    if a%b==0:\r\n        return b\r\n    return hcf(b,a%b)\r\n        \r\nt=int(input())\r\nfor _ in range(t):\r\n    n=int(input())\r\n    list1=list(map(int,input().strip().split()))\r\n    \r\n    curr=list1[0]\r\n    for i in range(1,n):\r\n        curr=hcf(curr,list1[i])\r\n        if curr==1:\r\n            break\r\n\r\n    if curr==1:\r\n        print(-1)\r\n    else:\r\n        ans=-1\r\n        for i in range(2,math.floor(math.sqrt(curr))+1):\r\n            if curr%i==0:\r\n                ans=i\r\n                break\r\n        \r\n        if ans==-1:\r\n            #curr is a prime number\r\n            print(curr)\r\n        else:\r\n            print(i)\r\n        \r\n        \r\n            \r\n       \r\n    \r\n    \r\n    \r\n    \r\n", "import math\r\ndef solve():\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    x = a[0]\r\n    for i in a:\r\n        x = math.gcd(i, x)\r\n    if x == 1:\r\n        k = -1\r\n    else:\r\n        k = x\r\n        x1 = x ** 0.5\r\n        t = int(x1)\r\n        for i in range(2, t + 1):\r\n            if x % i == 0:\r\n                k = i\r\n                break\r\n    print(k)\r\n\r\n\r\ndef __starting_point():\r\n    t = int(input())\r\n    while t != 0:\r\n        solve()\r\n        t -= 1\n__starting_point()", "import functools\nimport math\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    g_1=functools.reduce(math.gcd,l)\n    if g_1==1:\n        print(-1)\n        continue\n    t_1=int(math.sqrt(g_1))\n    c=0\n    for i in range(2,t_1+2):\n        if g_1%i==0:\n            c=i\n            break\n    if c==0:\n        print(g_1)\n    else:\n        print(c)", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n    n=int(input())\n    a=map(int,input().split())\n    a=list(a)\n    x=a[0]\n    for i in a:\n        x=math.gcd(i,x)\n    if x==1:\n        k=-1\n    else:\n        k=x\n        x1=x**0.5\n        t=int(x1)\n        for i in range(2,t+1):\n            if(x%i==0):\n                k=i\n                break\n    print(k)", "import math\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    g = a[0]\r\n    for i in a:\r\n        g = math.gcd(g,i)\r\n    if g == 1:\r\n        print(-1)\r\n    else:\r\n        for i in range(2,int(math.sqrt(g)) + 1):\r\n            if g%i == 0:\r\n                print(i)\r\n                break\r\n        else:\r\n            print(g)\r\n", "from functools import reduce\nfrom math import sqrt\nfrom math import gcd\nfor i in range(int(input())):\n\tn = int(input())\n\tli= list((int(i) for i in input().split()))\n\ta  = reduce(lambda a,b:gcd(a,b),li)\n\tif a==1:\n\t\tprint(-1)\n\telse:\n\t\tfor i in range(2,int(sqrt(a))+1):\n\t\t\tif a%i==0:\n\t\t\t\tprint(i)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(a)", "from math import *\r\nfor j in range(int(input())):\r\n    n=int(input())\r\n    x=list(map(int,input().split()))\r\n    a=x[0]\r\n    am=0\r\n    for i in range(1,n):\r\n        a=gcd(a,x[i])\r\n    if(a==1):\r\n        print(-1)\r\n    else:\r\n        for i in range(2,int(sqrt(a))+1):\r\n            if(a%i==0):\r\n                print(i)\r\n                am=1\r\n                break\r\n        if(am==0):\r\n            print(a)", "# cook your dish here\nimport math\ntest=int(input())\nfor _ in range(test):\n    n=int(input())\n    l=list(map(int,input().split()))\n    for i in range(1, n):\n        l[i]=math.gcd(l[i],l[i-1])\n    a=l[-1]\n    if a==1:\n        print(-1)\n    else:\n        f=0\n        p=int(math.sqrt(l[-1]))\n        i=2\n        while i<=p:\n            if a%i==0:\n                print(i)\n                f=1\n                break\n            i+=1\n        if f==0:\n            print(a)", "import math\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    for i in range(1, n):\n        l[i]=math.gcd(l[i],l[i-1])\n    a=l[-1]\n    if a==1:\n        print(-1)\n    else:\n        f=0\n        p=int(math.sqrt(l[-1]))\n        i=2\n        while i<=p:\n            if a%i==0:\n                print(i)\n                f=1\n                break\n            i+=1\n        if f==0:\n            print(a)", "# cook your dish here\n# cook your dish here\nfrom math import gcd,sqrt\nfor _ in range(int(input())):\n        s=0\n        f=1\n        n=int(input())\n        a=list(map(int,input().split()))\n        for i in range(len(a)):\n                s=gcd(s,a[i])\n        if(s==1):\n                print(-1)\n        else:\n            for i in range(2,int(sqrt(s))+1):\n                        if(s%i==0):\n                                print(i)\n                                f=0\n                                break;\n            if(f==1):\n                        \n                        print(s)        \n                        \n\n           \n                         \n\n                        \n           ", "# cook your dish here\nfrom math import gcd,sqrt\nfor _ in range(int(input())):\n        s=0\n        f=1\n        n=int(input())\n        a=list(map(int,input().split()))\n        for i in range(len(a)):\n                s=gcd(s,a[i])\n        if(s==1):\n                print(-1)\n        else:\n                for i in range(2,int(sqrt(s))+1):\n                        if(s%i==0):\n                                print(i)\n                                f=0\n                                break;\n                if(f==1):\n                        \n                        print(s)        \n                        \n             \n                \n                \n        "]