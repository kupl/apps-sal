["import sys\ninput = sys.stdin.readline\n\nMOD = 987654103\n\nn = int(input())\nt = input()\n\nplace = []\nf1 = []\ne1 = []\n\ns = []\ncurr = 0\ncount1 = 0\nfor i in range(n):\n    c = t[i]\n    if c == '0':\n        if count1:\n            e1.append(i - 1)\n            if count1 & 1:\n                s.append(1)\n                curr += 1\n                e1.append(-1)\n                f1.append(-1)\n            count1 = 0\n        else:\n            f1.append(-1)\n            e1.append(-1)\n\n        place.append(curr)\n        curr += 1\n        s.append(0)\n    else:\n        if count1 == 0:\n            f1.append(i)\n        count1 += 1\n        place.append(curr)\n\nif count1:\n    if count1 & 1:\n        s.append(1)\n    else:\n        s.append(0)\n    curr += 1\n    e1.append(n - 1)\n\n    e1.append(-1)\n    f1.append(-1)\nplace.append(curr)\n\npref = [0]\nval = 0\nfor i in s:\n    val *= 3\n    val += i + 1\n    val %= MOD\n    pref.append(val)\n        \n\nq = int(input())\nout = []\nfor _ in range(q):\n    l1, l2, leng = list(map(int, input().split()))\n    l1 -= 1\n    l2 -= 1\n\n    starts = (l1, l2)\n    hashes = []\n    for start in starts:\n        end = start + leng - 1\n\n        smap = place[start]\n        emap = place[end]\n        if t[end] == '1':\n            emap -= 1\n        if s[smap] == 1:\n            smap += 1\n\n        prep = False\n        app = False\n\n        if t[start] == '1':\n            last = e1[place[start]]\n            last = min(last, end)\n            count = last - start + 1\n            if count % 2:\n                prep = True\n        if t[end] == '1':\n            first = f1[place[end]]\n            first = max(first, start)\n            count = end - first + 1\n            if count % 2:\n                app = True\n\n        preHash = 0\n        length = 0\n        if smap <= emap:\n            length = emap - smap + 1\n            preHash = pref[emap + 1]\n            preHash -= pref[smap] * pow(3, emap - smap + 1, MOD)\n            preHash %= MOD\n\n\n        if length == 0 and prep and app:\n            app = False\n\n        #print(preHash, prep, app, length)\n        if prep:\n            preHash += pow(3, length, MOD) * 2\n            length += 1\n        if app:\n            preHash *= 3\n            preHash += 2\n        #print(preHash)\n\n        preHash %= MOD\n        hashes.append(preHash)\n        \n    if hashes[0] == hashes[1]:\n        out.append('Yes')\n    else:\n        out.append('No')\n\nprint('\\n'.join(out))\n\n    \n"]