["# cook your dish here\ntry:\n \n T = int(input())\n\n for i in range(T):\n  n = int(input())\n  s = input()\n  arr = [int(i) for i in input().strip().split(\" \")]\n  res = 1\n  result = 0\n\n  for j in range(n-7):\n   res = 1\n   res1= 0\n   s1 = s[j:j+8]\n   for i in range(8):\n    if s1[i] == 'D':\n     res = res*2\n     res1 += arr[i]\n\n    elif s1[i] == 'T':\n     res = res*3\n     res1 = res1 + arr[i]\n    elif s1[i] == 'd':\n     res1 = res1 + arr[i]*2\n    elif s1[i] == 't':\n     res1 += arr[i]*3\n    else:\n     res1 += arr[i]\n   res = res*res1\n   result = max(res,result)\n  print(result)\nexcept EOFError:\n pass\n\n    \n    \n    \n \n  \n \n", "# cook your dish here\n# cook your dish here\ntry:\n maxpoint=[]\n def maxpoints(n,string,sc):\n  i=0\n  points=0\n  increaser=1\n  while i<8:\n   if string[i]=='.':\n    points+=sc[i]\n    i+=1\n   elif string[i]=='d':\n    points+=sc[i]*2\n    i+=1\n   elif string[i]=='t':\n    points+=sc[i]*3\n    i+=1\n   elif string[i]=='D':\n    increaser=increaser*2\n    points+=sc[i]\n    i+=1\n   elif string[i]=='T':\n    increaser=increaser*3\n    points+=sc[i]\n    i+=1\n  points=points*increaser\n  maxpoint.append(points)\n  return points\n def values(n,string,sc):\n  for i in range(n-7):\n   maxpoints(n,string[i:],sc)\n  return max(maxpoint)\n t=int(input())\n for i in range(t):\n  n=int(input())\n  string=str(input())\n  if n>=8 and n==len(string):\n   sc=list(map(int,input().split()))\n   print(values(n,string,sc))\n   maxpoint=[]\n  else:\n   print('String is not equals to the length given')\n   break\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n maxpoint=[]\n def maxpoints(n,string,sc):\n  i=0\n  points=0\n  increaser=1\n  while i<8:\n   if string[i]=='.':\n    points+=sc[i]\n    i+=1\n   elif string[i]=='d':\n    points+=sc[i]*2\n    i+=1\n   elif string[i]=='t':\n    points+=sc[i]*3\n    i+=1\n   elif string[i]=='D':\n    increaser=increaser*2\n    points+=sc[i]\n    i+=1\n   elif string[i]=='T':\n    increaser=increaser*3\n    points+=sc[i]\n    i+=1\n  points=points*increaser\n  maxpoint.append(points)\n  return points\n def values(n,string,sc):\n  for i in range(n-7):\n   maxpoints(n,string[i:],sc)\n  return max(maxpoint)\n t=int(input())\n for i in range(t):\n  n=int(input())\n  string=str(input())\n  if n>=8 and n==len(string):\n   sc=list(map(int,input().split()))\n   print(values(n,string,sc))\n   maxpoint=[]\n  else:\n   print('String is not equals to the length given')\n   break\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n maxpoint=[]\n def maxpoints(n,string,sc):\n  i=0\n  points=0\n  increaser=1\n  while i<8:\n   if string[i]=='.':\n    points+=sc[i]\n    i+=1\n   elif string[i]=='d':\n    points+=sc[i]*2\n    i+=1\n   elif string[i]=='t':\n    points+=sc[i]*3\n    i+=1\n   elif string[i]=='D':\n    increaser=increaser*2\n    points+=sc[i]\n    i+=1\n   elif string[i]=='T':\n    increaser=increaser*3\n    points+=sc[i]\n    i+=1\n  points=points*increaser\n  maxpoint.append(points)\n  return points\n def values(n,string,sc):\n  for i in range(n-7):\n   maxpoints(n,string[i:],sc)\n  return max(maxpoint)\n t=int(input())\n for i in range(t):\n  n=int(input())\n  string=str(input())\n  if n>=8 and n==len(string):\n   sc=list(map(int,input().split()))\n   print(values(n,string,sc))\n   maxpoint=[]\n  else:\n   print('String is not equals to the length given')\n   break\nexcept EOFError:\n pass", "# cook your dish here\nfor e in range(int(input())):\n n = int(input())\n s = input()\n l = list(map(int,input().split()))\n s = list(s)\n m = 0\n for i in range(n-7):\n  total = 0\n  k = 0\n  DT = 1\n  for j in range(i,i+8):\n   if s[j] == '.':\n    total += l[k]\n   elif s[j] == 'd':\n    total += (2*l[k])\n   elif s[j] == 't':\n    total += (3*l[k])\n   elif s[j] == 'D':\n    DT = DT * 2\n    total += l[k]\n   elif s[j] == 'T':\n    DT = DT * 3\n    total += l[k]\n   k += 1\n   \n  total = total * DT\n  m = max(total, m)\n   \n   \n print(m)", "try:\n maxpoint=[]\n def maxpoints(n,string,sc):\n  i=0\n  points=0\n  increaser=1\n  while i<8:\n   if string[i]=='.':\n    points+=sc[i]\n    i+=1\n   elif string[i]=='d':\n    points+=sc[i]*2\n    i+=1\n   elif string[i]=='t':\n    points+=sc[i]*3\n    i+=1\n   elif string[i]=='D':\n    increaser=increaser*2\n    points+=sc[i]\n    i+=1\n   elif string[i]=='T':\n    increaser=increaser*3\n    points+=sc[i]\n    i+=1\n  points=points*increaser\n  maxpoint.append(points)\n  return points\n def values(n,string,sc):\n  for i in range(n-7):\n   maxpoints(n,string[i:],sc)\n  return max(maxpoint)\n t=int(input())\n for i in range(t):\n  n=int(input())\n  string=str(input())\n  if n>=8 and n==len(string):\n   sc=list(map(int,input().split()))\n   print(values(n,string,sc))\n   maxpoint=[]\n  else:\n   print('String is not equals to the length given')\n   break\nexcept EOFError:\n pass", "try:\n maxpoint=[]\n def maxpoints(n,string,sc):\n  i=0\n  points=0\n  increaser=1\n  while i<8:\n   if string[i]=='.':\n    points+=sc[i]\n    i+=1\n   elif string[i]=='d':\n    points+=sc[i]*2\n    i+=1\n   elif string[i]=='t':\n    points+=sc[i]*3\n    i+=1\n   elif string[i]=='D':\n    increaser=increaser*2\n    points+=sc[i]\n    i+=1\n   elif string[i]=='T':\n    increaser=increaser*3\n    points+=sc[i]\n    i+=1\n  points=points*increaser\n  maxpoint.append(points)\n  return points\n def values(n,string,sc):\n  for i in range(n-7):\n   maxpoints(n,string[i:],sc)\n  return max(maxpoint)\n t=int(input())\n for i in range(t):\n  n=int(input())\n  string=str(input())\n  if n>=8 and n==len(string):\n   sc=list(map(int,input().split()))\n   print(values(n,string,sc))\n   maxpoint=[]\n  else:\n   print('String is not equals to the length given')\n   break\nexcept EOFError:\n pass", "# cook your dish here\nmaxpoints=[]\ndef maxvaluez(num,arr,sc):\n \n i=0\n points=0\n mult=1\n while i<8: \n  if arr[i]==\".\":\n   points+=sc[i]\n   i+=1\n\n  elif arr[i]==\"d\":\n   points+=2*sc[i]\n   i+=1\n\n  elif arr[i]==\"t\":\n   points+=3*sc[i]\n   \n\n   i+=1\n\n  elif arr[i]==\"D\":\n   mult=mult*2\n   points+=sc[i]\n   i+=1\n\n  elif arr[i]==\"T\":\n   mult=mult*3\n   points+=sc[i]\n   i+=1\n\n  else:\n   i+=1\n   \n\n points=points*mult\n maxpoints.append(points)\n return points\n \ndef maxpicker(num,arr,sc):\n for i in range(num-7):\n  maxvaluez(num,arr[i:],sc)\n \n return max(maxpoints)\n\ntry:\n t=int(input())\n for i in range(t):\n  num = int(input())\n  arr = input()\n  sc = list(map(int, input().split()))\n  print(maxpicker(num,arr,sc))\n  maxpoints=[]\nexcept:\n pass", "# cook your dish here\n# cook your code here\nt = int(input())\nfor i in range(t):\n num = int(input())\n arr = input()\n sc = list(map(int, input().split()))\n maxs = 0\n for z in range(num - 7):\n  score = 0\n  mul =1\n  for b in range(8):\n   if (arr[z+b]=='d'):\n    score += sc[b]*2\n   elif (arr[z+b]=='t'):\n    score += sc[b]*3 \n   elif (arr[z+b]=='D'):\n    mul *= 2\n    score += sc[b]\n   elif (arr[z+b]=='T'):\n    mul *= 3\n    score += sc[b]\n   else:\n    score += sc[b]\n  score *= mul\n  if score > maxs:\n   maxs = score\n print(maxs)\n", "# cook your dish here\nT = int(input())\n\nmax_score = []\n\nfor _ in range(T):\n\n N = int(input())\n string = input()\n score = input().split()\n score = list(map(int, score))\n\n \n noi = (N - 8 + 1)\n\n maximum = 0 \n \n for i in range(noi):\n\n  dd = 0\n  ttt = 0\n  scrs = string[i:i+8]\n\n  num_scrs = []\n  for scr in scrs:\n\n   if scr == '.':\n    num_scrs.append(1)\n\n   elif scr == 'd':\n    num_scrs.append(2)\n\n   elif scr == 't':\n    num_scrs.append(3)\n\n   elif scr == 'D':\n    num_scrs.append(1)\n    dd += 1\n\n   elif scr == 'T':\n    num_scrs.append(1)\n    ttt += 1\n\n  s = 0\n  \n  for i in range(8):\n   s += num_scrs[i]*score[i]\n\n  s *= 2**dd\n  s *= 3**ttt\n\n  if s > maximum:\n   maximum = s\n  \n max_score.append(maximum)\n\n\nfor s in max_score:\n\n print(s)\n", "# cook your dish here\nt=int(input())\nfor i in range(0, t):\n n=int(input())\n s=str(input())\n l=list(map(int, input().split()))\n sum1=sum(l)\n finalSum=0\n for i in range(n-7):\n  sum2 = 0\n  dw=1\n  tw=1\n  for k in range(i,i+8):\n   if s[k]==\"d\":\n    sum2=sum2+2*l[k-i]\n   elif s[k]==\"t\":\n    sum2 = sum2 + 3*l[k-i]\n   elif s[k]==\"D\":\n    dw*=2\n    sum2 = sum2 + l[k - i]\n   elif s[k]==\"T\":\n    tw*=3\n    sum2 = sum2 + l[k - i]\n   else:\n    sum2 = sum2 + l[k - i]\n\n  # print(sum2)\n  finalSum=max(finalSum,sum2*dw*tw)\n\n print(finalSum)", "#cook\npos_values = {\"d\" : 2, \"t\" : 3, \".\" : 1, \"D\" : 1, \"T\" : 1}\nT = int(input())\nfor i in range(T):\n N = int(input())\n positions = input()\n values = input()\n \n list_of_values = []\n temp = 0\n prev = 0\n i = 0\n while i < len(values):\n  if values[i] == \" \":\n   temp = int(values[prev : i])\n   list_of_values.append(temp)\n   prev = i+1\n   i += 1\n  else:\n   i += 1\n \n temp = int(values[prev : i])\n list_of_values.append(temp)\n \n set_of_values = []\n \n for j in range(N-7):\n  temp = 0\n  for k in range(8):\n   temp += list_of_values[k]*pos_values.get(positions[j+k])\n  \n  for k in range(8):\n   if positions[j+k] == \"D\":\n    temp *= 2\n   elif positions[j+k] == \"T\":\n    temp *= 3\n  \n  set_of_values.append(temp)\n \n max_num = 0\n for l in range(len(set_of_values)):\n  max_num = max(max_num, set_of_values[l])\n \n print(max_num)", "#cook\npos_values = {\"d\" : 2, \"t\" : 3, \".\" : 1, \"D\" : 1, \"T\" : 1}\nT = int(input())\nfor i in range(T):\n N = int(input())\n positions = input()\n values = input()\n \n list_of_values = []\n temp = 0\n prev = 0\n i = 0\n while i < len(values):\n  if values[i] == \" \":\n   temp = int(values[prev : i])\n   list_of_values.append(temp)\n   prev = i+1\n   i += 1\n  else:\n   i += 1\n \n temp = int(values[prev : i])\n list_of_values.append(temp)\n \n set_of_values = []\n \n for j in range(N-7):\n  temp = 0\n  for k in range(8):\n   temp += list_of_values[k]*pos_values.get(positions[j+k])\n  \n  for k in range(8):\n   if positions[j+k] == \"D\":\n    temp *= 2\n   elif positions[j+k] == \"T\":\n    temp *= 3\n  \n  set_of_values.append(temp)\n \n max_num = 0\n for l in range(len(set_of_values)):\n  max_num = max(max_num, set_of_values[l])\n \n print(max_num)", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n s=list(input())\n N=[int(i) for i in input().split()]\n dic={'.':1,'d':2,'t':3,'D':1,'T':1}\n maxx=0\n for i in range(n-8+1):\n  st=s[i:i+8]\n  total=0\n  D=0\n  T=0\n  for j in range(8):\n   if st[j] in ['.','d','t']:\n    total=total+dic[st[j]]*N[j]\n   elif st[j]=='D':\n    total=total+dic[st[j]]*N[j]\n    D=D+1\n   else:\n    total=total+dic[st[j]]*N[j]\n    T=T+1\n  total=total*(2**D) \n  total=total*(3**T)\n  if maxx<total:\n   maxx=total\n print(maxx)", "T = int(input())\n\nmax_score = []\n\nfor _ in range(T):\n\n N = int(input())\n string = input()\n score = input().split()\n score = list(map(int, score))\n\n \n noi = (N - 8 + 1)\n\n maximum = 0 \n \n for i in range(noi):\n\n  dd = 0\n  ttt = 0\n  scrs = string[i:i+8]\n\n  num_scrs = []\n  for scr in scrs:\n\n   if scr == '.':\n    num_scrs.append(1)\n\n   elif scr == 'd':\n    num_scrs.append(2)\n\n   elif scr == 't':\n    num_scrs.append(3)\n\n   elif scr == 'D':\n    num_scrs.append(1)\n    dd += 1\n\n   elif scr == 'T':\n    num_scrs.append(1)\n    ttt += 1\n\n  s = 0\n  \n  for i in range(8):\n   s += num_scrs[i]*score[i]\n\n  s *= 2**dd\n  s *= 3**ttt\n\n  if s > maximum:\n   maximum = s\n  \n max_score.append(maximum)\n\n\nfor s in max_score:\n\n print(s)\n\n    \n    \n \n", "\nt = int(input())\nmaxi =[]\nfor _ in range(t):\n n = int(input())\n board = input()\n arr = input()\n points = list(map(int , arr.split(' ')))\n values = []\n for i in range(n-7):\n  dw = 1\n  tw = 1\n  total = 0 \n  for j in range(i,i+8):\n   if board[j] == 'd':\n    total += 2*points[j-i]\n   elif board[j] == 't':\n    total += 3*points[j-i]\n   elif board[j] == 'D':\n    dw *= 2\n    total += points[j-i]\n   elif board[j] == 'T':\n    tw *= 3\n    total += points[j-i]\n   elif board[j] == \".\" :\n    total += points[j-i]\n   #print(total)\n  \n  total *= dw\n  \n  total *= tw \n  values.append(total)\n #print(values)\n maxi.append(max(values))\nfor element in maxi:\n print(element)\n\n", "# cook your dish here\nT=int(input())\nwhile T:\n N=int(input())\n s=str(input())\n l=list(map(int,input().split()))\n \n re=[]\n for i in range(N-7):\n  sum=0\n  d1=1\n  t1=1\n  for j in range(len(l)):\n   if s[i+j]==\".\":\n    sum=sum+l[j]\n   elif s[i+j]==\"d\":\n    sum=sum+l[j]*2\n   elif s[i+j]==\"t\":\n    sum=sum+l[j]*3\n   elif s[i+j]==\"D\":\n    sum=sum+l[j]\n    d1=d1*2\n   elif s[i+j]==\"T\":\n    sum=sum+l[j]\n    t1=t1*3\n \n  if d1>1 and t1>1:\n   sum=sum*d1*t1\n  elif d1>1:\n   sum=sum*d1\n  else:\n   sum=sum*t1\n  re.append(sum)\n  \n print(max(re))\n T=T-1\n", "# cook your dish here\nt = int(input())\nfor z in range (t):\n n = int (input())\n board = input()\n b = list(board)\n #print(b)\n maxscore = 0\n scores = list(map(int , input().split()))\n #print(scores)\n for i in range(0 , n-7):\n  #print(i)\n  multiplier = 1 \n  score = 0 \n  for j in range (i,i+8):\n   if (board[j]==\".\"):\n    score += scores[j-i]\n   elif(board[j]==\"d\"):\n    score += scores[j-i]*2\n   elif(board[j]==\"t\"):\n    score += scores[j-i]*3\n   elif(board[j]==\"T\"):\n    score += scores[j-i]\n    multiplier *= 3\n   else:\n    score += scores[j-i]\n    multiplier *= 2\n  maxscore= max ( maxscore , multiplier*score)\n print(maxscore)", "for _ in range(int(input())):\n sum = 0; count = 0;max = 0;\n n = int(input())\n st = input()\n li = [int(i) for i in input().split(' ')]\n flag = True\n for i in range(n - 7):\n  k = 0;count = 1;sum = 0;\n  for j in range(i,i + 8):\n   if st[j] == 'd':\n    sum += li[k] * 2\n   elif st[j] == 't':\n    sum += li[k] * 3;\n   elif st[j] == 'D':\n    sum += li[k]\n    count *= 2;\n   elif st[j] == 'T':\n    sum += li[k]\n    count *= 3;\n   else:\n    sum += li[k]\n   k += 1\n  if flag == True:\n   max = sum * count\n   flag = False\n  else:\n   if sum * count > max:\n    max = sum * count\n print(max)", "for _ in range(int(input())):\n sum = 0; count = 0;max = 0;\n n = int(input())\n st = input()\n li = [int(i) for i in input().split(' ')]\n flag = True\n for i in range(n - 7):\n  k = 0;count = 1;sum = 0;\n  for j in range(i,i + 8):\n   if st[j] == 'd':\n    sum += li[k] * 2\n   elif st[j] == 't':\n    sum += li[k] * 3;\n   elif st[j] == 'D':\n    sum += li[k]\n    count *= 2;\n   elif st[j] == 'T':\n    sum += li[k]\n    count *= 3;\n   else:\n    sum += li[k]\n   k += 1\n  if flag == True:\n   max = sum * count\n   flag = False\n  else:\n   if sum * count > max:\n    max = sum * count\n print(max)", "T = int(input())\nfor j in range(T):\n n = int(input())\n ar = input()\n ar_v = list(map(int, input().split()))\n mx=0\n for i in range(n-7):\n  sm =0\n  m=1\n  \n  for k in range(8):\n   if ar[i+k]=='.':\n    sm +=ar_v[k]\n   elif ar[i+k]=='d':\n    sm =sm+ (2*ar_v[k])\n   elif ar[i+k]=='t':\n    sm =sm+(3*ar_v[k])\n   elif ar[i+k]=='D':\n    sm =sm+ar_v[k]\n    m *=2\n   elif ar[i+k]=='T':\n    sm =sm+ar_v[k]\n    m *=3\n  sm = sm*m\n  #print(sm)\n  if mx<sm:\n   mx=sm\n print(mx)", "# cook your dish here\nT = int(input())\nfor j in range(T):\n n = int(input())\n ar = input()\n ar_v = list(map(int, input().split()))\n mx=0\n for i in range(n-7):\n  sm =0\n  m=1\n  \n  for k in range(8):\n   if ar[i+k]=='.':\n    sm +=ar_v[k]\n   elif ar[i+k]=='d':\n    sm =sm+ (2*ar_v[k])\n   elif ar[i+k]=='t':\n    sm =sm+(3*ar_v[k])\n   elif ar[i+k]=='D':\n    sm =sm+ar_v[k]\n    m *=2\n   elif ar[i+k]=='T':\n    sm =sm+ar_v[k]\n    m *=3\n  sm = sm*m\n  #print(sm)\n  if mx<sm:\n   mx=sm\n print(mx)", "t=int(input())\nwhile(t>0):\n n=int(input())\n s=str(input())\n A=list(map(int,input().split()))\n maxi=0\n for i in range(0,n-7):\n  summ=0\n  new=\"\"\n  k=0\n  for j in range(i,i+8):\n   if(s[j]=='D' or s[j]=='T'):\n    new=new+s[j]\n   if(s[j]=='d'):\n    summ+=(2*A[k])\n   elif(s[j]=='t'):\n    summ+=(3*A[k])\n   else:\n    summ+=A[k]\n   k+=1\n  for x in new:\n   if(x=='D'):\n    summ=(2*summ)\n   else:\n    summ=(3*summ)\n  if(summ>maxi):\n   maxi=summ\n print(maxi)\n t=t-1", "#!/bin/python3\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\ndef findMaxScore(mod, arr):\n\n m = 0\n\n for i in range(0,len(mod)-7):\n  m = max(m,getScore(mod[i:i+8],arr))\n\n return m\n\ndef getScore(s,arr):\n \n m = 1\n\n score = 0\n\n for i in range(0,8):\n\n  if(s[i] == 'd'):\n   score += 2*arr[i]\n  elif(s[i] == 't'):\n   score += 3*arr[i]\n  elif(s[i] == 'D'):\n   score += arr[i]\n   m *= 2\n  elif(s[i] == 'T'):\n   score += arr[i]\n   m *= 3\n  else:\n   score += arr[i]\n \n return m*score\n\ndef __starting_point():\n \n try:\n  n = int(input())\n \n  for _ in range(n):\n   \n   l = int(input())\n   mod = input()\n   arr = [int(y) for y in input().split()]\n   print(findMaxScore(mod,arr))\n \n except EOFError:\n  x = 2\n__starting_point()", "# cook your dish here\n# cook your dish here\ndef calc(W,board):\n #print(board)\n d = t = score = 0\n for i in range(8):\n  if board[i]=='d': score+= (2*W[i])\n  elif board[i]=='t': score+= (3*W[i])\n  elif board[i] == 'D': \n   d += 1\n   score += W[i]\n  elif board[i] == 'T': \n   t+=1\n   score += W[i]\n  else: score += W[i]\n  #print(\"i=\",i,\"score=\",score)\n #print(\"d=\",d,\"t=\",t)\n score *= 2**d * 3**t\n #if t>0: score = 3*t*score\n #print(\"\\nvv\",score,\"\\n\")\n #print(len(str(score)))\n #print(\"--------------------------------------------\")\n return score\n \ndef __starting_point():\n output = \"\"\n for test in range(int(input())):\n  N = int(input())\n  board = input()\n  W = [int(x) for x in input().split()]\n  m = -1\n  for i in range(N-7):\n   #print(board[i:i+8])\n   m = max(m,calc(W,board[i:i+8]))\n  output += str(m)+\"\\n\"\n print(output.rstrip())\n__starting_point()"]