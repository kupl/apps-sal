["# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    lane = 3 - l[0]\n    switched = -float('inf')\n    ans = k\n    for i in range(n):\n     if l[i] == lane:\n      if switched + d < x[i] and x[i - 1] + 1 < x[i]:\n       lane = 3 - lane\n       switched = max(x[i - 1] + 1, switched + d)\n      else:\n       ans = x[i]\n       break\n    print(ans)\n", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    lane = 3 - l[0]\n    switched = -float('inf')\n    ans = k\n    for i in range(n):\n     if l[i] == lane:\n      if switched + d < x[i] and x[i - 1] + 1 < x[i]:\n       lane = 3 - lane\n       switched = max(x[i - 1] + 1, switched + d)\n      else:\n       ans = x[i]\n       break\n    print(ans)\n", "t = int(input())\nfor _ in range(t):\n    n, k, d = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    lane = 3 - l[0]\n    switched = -float('inf')\n    ans = k\n    for i in range(n):\n     if l[i] == lane:\n      if switched + d < x[i] and x[i - 1] + 1 < x[i]:\n       lane = 3 - lane\n       switched = max(x[i - 1] + 1, switched + d)\n      else:\n       ans = x[i]\n       break\n    print(ans)\n", "def two_lane(n,k,d,l,x):\n flag=0\n z=-(10**10)\n for i in range(n-1):\n  if(l[i]!=l[i+1]):\n   z=max(x[i]+1,z+d)\n   if(z>=x[i+1]):\n    return(x[i+1])\n    flag=1\n    break\n return k\nt=int(input())\nwhile(t):\n t-=1\n n,k,d=list(map(int,input().split()))\n x=list(map(int,input().split()))\n l=list(map(int,input().split()))\n print(two_lane(n,k,d,l,x))\n", "for _ in range(int(input())):\n    n,k,d = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    x,z = 0,0\n    if b[0]==1:\n     y = 1\n    else:\n     y = 2\n    c = True\n    for i in range(1,n):\n     if y!=b[i]:\n      if (a[i]-x<=d and z!=0) or a[i]-a[i-1]==1:\n       c = False\n       print(a[i])\n       break\n      if (z==0):\n       z = 1\n       x = a[i-1]+1\n      else:\n       x = max(a[i-1]+1,x+d)\n      y = b[i]\n    if c:\n     print(k)\n", "for _t in range(int(input())):\n    n, k, d = list(map(int, input().split()))\n    xs = list(map(int, input().split()))\n    ls = list(map(int, input().split()))\n    my_x = 0\n    my_l = 3 - ls[0]\n    for x, l_ in zip(xs, ls):\n     # print(my_x, my_l)\n     if l_ == my_l:\n      if x <= my_x:\n       # crash\n       print(x)\n       break\n      my_l = 3 - my_l\n      my_x = max(x + 1, my_x + d)\n     else:\n      my_x = max(x + 1, my_x)\n    else:\n     print(k)\n", "for _ in range(int(input())):\n    n,k,d = [int(a) for a in input().split()]\n    blocks = [int(a) for a in input().split()]\n    lanes = list(map(int, input().split()))\n\n    Flag = 0\n    z = -10000000000000\n    for i in range(n-1):\n     if lanes[i] != lanes[i+1]:\n      z = max(blocks[i]+1, z+d)\n      if z >= blocks[i+1]:\n       print(blocks[i+1])\n       Flag = 1\n       break\n    if Flag == 0:\n     print(k)\n \n\n  \n  \n"]