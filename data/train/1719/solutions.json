["def zeroes (base, number):\n    pzeros = []\n    for p in range(2, base+1):\n        e = 0\n        while base % p == 0:\n            base /= p\n            e += 1\n        if e:\n            f, m = 0, number\n            while m:\n                m /= p\n                f += m\n            pzeros.append(f / e)\n    return min(pzeros)", "from collections import Counter\n\ndef factorize(n):\n    f = []\n    for i in range(2, n + 1):\n        while n % i == 0:\n            f.append(i)\n            n /= i\n    return Counter(f)\n\ndef zeroes (base, number):\n    f, l = factorize(base), []\n    for factor in f:\n        ans, n = 0, number\n        while n >= factor:\n            ans += n // factor\n            n = n // factor\n        ans = ans // f[factor]\n        l.append(ans)\n    return min(l)", "def zeroes (b, n):\n  d1={} #for decomposition of base into power of primefactors\n  i=2\n  while b>1:\n    while b%i==0:\n      try:\n        d1[i]+=1\n      except KeyError:\n        d1[i]=1\n      b//=i\n    i+=1\n  d2={} #for total powers of the primefactors in the number\n  for i in d1:\n    s=0\n    r=i\n    while r<=n:\n      s+=n//r\n      r*=i\n    d2[i]=s\n  return min(list(d2[i]//d1[i] for i in d1))\n", "def zeroes (base, number):\n    fc = get_factor(base)\n    return min([find_power(number, i) // fc.count(i) for i in set(fc)])\n\ndef get_factor(n):\n    li, j = [], 2\n    while j * j <= n:\n        if n % j : j += 1;continue\n        li.append(j)\n        n //= j\n    if n > 0 : li.append(n)\n    return li\n    \ndef find_power(k, b):\n    n, c = b, 0\n    while k // n:\n        c += k // n\n        n *= b\n    return c", "import re\n\n# fixme\ndef zeroes (base, number):\n    i = 2\n    factors = []\n    while i * i <= base:\n        if base % i:\n            i += 1\n        else:\n            base //= i\n            factors.append(i)\n    if base > 1:\n        factors.append(base)\n        \n    count=99999999999999999999\n    for i in set(factors):\n        sum=number//i\n        temp=sum\n        while temp>=i:\n            temp//=i\n            sum+=temp\n        sum//=factors.count(i) \n        if sum < count:\n            count=sum\n      \n    return count"]