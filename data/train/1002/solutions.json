["# cook your dish here\ndef solution(b,n1,d):\n first=b[0]\n b.sort()\n for j in range(n1-1):\n  if(a[j+1]-a[j]>d):\n   return \"NO\"\n for j in range(n1):\n  if(b[j]==first):\n   pos=j\n if(pos==0 or pos==n1-1):\n  return \"YES\"\n rec=1\n for j in range(pos-1,n1-2):\n   if(a[j+2]-a[j]>d):\n    rec=0\n    break\n if(rec):\n  return \"YES\"\n rec=1\n for j in range(pos+1,1,-1):\n   if(a[j]-a[j-2]>d):\n    rec=0\n    break\n if(rec):\n  return \"YES\"\n else:\n  return \"NO\"\n \ntestcase=int(input())\nfor i in range(testcase):\n n,d=list(map(int,input().split()))\n a=list(map(int,input().split()))\n print(solution(a,n,d))\n", "T=int(input())\nfor i in range(0,T):\n N,D=list(map(int,input().split()))\n s=[int(x) for x in input().split()]\n L=[]\n for j in range(0,len(s)):\n  L.append(j)\n arr=sorted(zip(s,L))\n #print(arr)\n ptr=-1\n for j in range(0,len(arr)):\n  if(arr[j][1]==0):\n   ptr=j\n   break\n\n if(N==1):\n  print('YES')\n else:\n  temp1=0\n  temp2=0\n  temp=0\n  for j in range(0,len(arr)-1):\n   if(abs(arr[j][0]-arr[j+1][0])>D):\n    temp=1\n    break\n\n  if(ptr!=0 and ptr!=len(arr)-1):\n   for j in range(0,ptr):   \n    if(abs(arr[j][0]-arr[j+2][0])>D):\n     temp1=1\n     break\n   if(temp1==1):\n    for j in range(ptr-1,len(arr)-2):\n     if(abs(arr[j][0]-arr[j+2][0])>D):\n      temp2=1\n      break\n\n  if(temp==0 and (temp1==0 or temp2==0)):\n   print('YES')\n  else:\n   print('NO')\n   \n", "\ntests = int(input())\n\nfor te in range(tests):\n n,d = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n c = arr[0]\n arr.sort()\n for i in range(n):\n  if(arr[i] == c):\n   index = i\n flag = 0\n for i in range(1,n):\n  if( abs(arr[i] - arr[i-1]) > d):\n   print('NO')\n   flag = 1\n   break\n\n if(flag == 1):\n  continue\n if(index == 0 or index == n-1):\n  #flag = 1\n  print('YES')\n  continue\n for i in range(index+1,n):\n  if(abs(arr[i] - arr[i-2]) > d):\n   flag = 1\n   break\n if(flag == 0):\n  print('YES')\n  continue\n flag = 0\n for i in range(index-1,-1,-1):\n  if(abs(arr[i] - arr[i+2]) > d):\n   flag = 1\n   break\n if(flag == 0):\n  print('YES')\n  continue\n else:\n  print('NO')\n\n \n", "# cook your dish here\n# cook your dish here\nfor _ in range(int(input())):\n n,d=map(int,input().split())\n li=list(map(int,input().split()))\n ini=li[0]\n li.sort()\n tvl=1\n nidx=li.index(ini)\n for i in range(n-1):\n  if li[i+1]-li[i]>d:\n   tvl=0\n   break\n flag=0\n if tvl:    \n  if(nidx!=0 or nidx!=n-1):\n   i=nidx\n   while(i<n-1):\n    if li[i+1]-li[i-1]>d:\n     tvl=0\n     break\n    else:\n     if(i==n-2):\n     \n      break\n     else:\n      if(li[i+2]-li[i]<=d):\n       i+=2\n      else:\n       tvl=0\n       break \n   if not tvl:\n    i=nidx\n    while(i>0):\n     if li[i+1]-li[i-1]>d:\n      tvl=0\n      break\n     else:\n      if(i==1):\n       flag=1\n       break\n      else:\n       if(li[i]-li[i-2]<=d):\n        i-=2\n       else:\n        tvl=0\n        break\n    if((i==1 and flag) or i==0):\n     tvl=1\n if(tvl==0):\n  print(\"NO\")\n else:\n  print(\"YES\")", "# cook your dish here\ndef ch(a):\n for i in range(1,len(a)):\n  if a[i]-a[i-1]>d:return False\n return True\nfor i in range(int(input())):\n n,d=list(map(int,input().split()))\n a=list(map(int,input().split()))\n b=a[0]\n a.sort()\n ind=a.index(b)\n i=ind\n if not ch(a):print(\"NO\")\n else:\n  arr1=[]\n  arr2=[]\n  arr3=[]\n  arr4=[]\n  i=0\n  uind=ind\n  if ind!=n-1:uind+=1\n  while i<=uind:\n   arr1.append(a[i])\n   if i+1<=uind:arr2.append(a[i+1])\n   i+=2\n  if i:i=ind-1\n  while i<n:\n   arr3.append(a[i])\n   if i+1<n:arr4.append(a[i+1])\n   i+=2\n  if (ch(arr1) and ch(arr2)) or (ch(arr3) and ch(arr4)):print(\"YES\")\n  else:print(\"NO\")\n", "def left(a, pos):\n if pos == 0 or pos == len(a) - 1:\n  return True\n for i in range(pos + 1, len(a)):\n  if a[i] - a[i - 2] > d:\n   return False\n return True\n\ndef right(a ,pos):\n for i in range(pos - 1, -1, -1):\n  if a[i + 2] - a[i] > d:\n   return False\n return True\n\n\nfor _ in range(int(input())):\n n, d = map(int, input().split())\n a = list(map(int,input().split()))\n startVal = a[0]\n a.sort()\n f = 1\n startPos = 0\n\n for i, e in enumerate(a[1: ]):\n  if e - a[i] > d:\n   f = 0\n   break\n  if e == startVal:\n   startPos = i + 1\n\n if f and (left(a, startPos) or right(a, startPos)):\n  print(\"YES\")\n else:\n  print(\"NO\")", "def check(a, pos, d):\n if pos == 0 or pos == len(a) - 1:\n  return True\n for i in range(pos + 1, len(a)):\n  if a[i] - a[i - 2] > d:\n   return False\n return True\n\ndef check2(a ,pos, d):\n for i in range(pos - 1, -1, -1):\n  if a[i + 2] - a[i] > d:\n   return False\n return True\n\nT = int(input())\n\nfor _ in range(T):\n n, d = list(map(int, input().split()))\n a = [int(e) for e in input().split()]\n startVal = a[0]\n a.sort()\n band = True\n startPos = 0\n #print(a)\n for i, e in enumerate(a[1: ]):\n  #print(\"i: {}, e: {}, ant:{}\".format(i,e,a[i]))\n  if e - a[i] > d:\n   band = False\n   break\n  if e == startVal:\n   startPos = i + 1\n #print(band)\n if band and (check(a, startPos, d) or check2(a, startPos, d)):\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "t=int(input())\nfor _ in range(t):\n n,d=map(int,input().split())\n a=list(map(int,input().split()))\n v={i:0 for i in a}\n v[a[0]]=1\n x=a[0]\n poss=1\n poss2,poss3=True,True\n a.sort()\n for i in range(n-1):\n  if(a[i+1]-a[i]>d):\n   poss=0\n   break\n if(poss):\n  st=a.index(x)\n  if st!=n-1 and st!=0 and poss:\n   for i in range(st):\n    if (a[i+2]-a[i])>d:\n     poss2=False\n     break\n   if poss2==False:\n    for i in range(st-1,n-2):\n     if (a[i+2]-a[i])>d:\n      poss3=False\n      break\n if((poss2 or poss3) and poss):\n  print(\"YES\")\n else:\n  print(\"NO\")"]