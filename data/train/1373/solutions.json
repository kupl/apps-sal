["def main():\n t= int(input())\n while(t!=0):\n  n,k = list(map(int , input().split()))\n  arr = list(map(int, input().split()))\n  freq = [0]*100001\n  k=k-1\n  st=0\n  end=0\n  currentCount=0\n  previousElement = 0\n  for i in range(n):\n   freq[arr[i]]+=1\n   if(freq[arr[i]]==1):\n    currentCount+=1\n\n   while(currentCount>k):\n    freq[arr[previousElement]]-=1\n    if(freq[arr[previousElement]]==0):\n     currentCount-=1\n\n    previousElement+=1\n\n   if(i-previousElement+1 >= end-st+1):\n    end=i\n    st=previousElement\n\n  print(end-st+1)\n  t=t-1\n\ndef __starting_point():\n main()\n\n\n\n\n\n__starting_point()", "# cook your dish here\ndef main():\n t=int(input())\n while(t!=0):\n  n,k = map(int, input().split())\n  arr = list(map(int, input().split()))\n  freq = [0]*100001\n  k=k-1\n  st=0\n  end=0\n  currentCount=0\n  previousElement =0\n  for i in range(n):\n   freq[arr[i]]+=1\n   if(freq[arr[i]]==1):\n    currentCount+=1\n\n   while(currentCount>k):\n    freq[arr[previousElement]]-=1\n    if(freq[arr[previousElement]]==0):\n     currentCount-=1\n    previousElement+=1\n\n   if(i-previousElement+1 >= end-st+1):\n    end=i\n    st = previousElement\n\n  print(end-st+1)\n  t=t-1\n\ndef __starting_point():\n main()\n__starting_point()", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n,k = map(int, input().split())\n arr = list(map(int, input().split()))\n i = 0\n maxi = 0\n visited = set()\n count = 0\n sec = -1\n f = 0\n while i<n:\n  visited.add(arr[i])\n  if len(visited)==2 and f==0:\n   sec = i\n   f = 1\n  if len(visited)==k:\n   maxi = max(count, maxi)\n   count = 1\n   i = sec\n   visited = {arr[i]}\n   f = 0\n  else:\n   count = count + 1\n  i = i + 1\n maxi = max(count, maxi)\n print(maxi)", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n,k = map(int, input().split())\n arr = list(map(int, input().split()))\n i = 0\n maxi = 0\n visited = set()\n count = 0\n sec = -1\n f = 0\n while i<n:\n  visited.add(arr[i])\n  if len(visited)==2 and f==0:\n   sec = i\n   f = 1\n  if len(visited)==k:\n   maxi = max(count, maxi)\n   count = 1\n   visited = {arr[i]}\n   i = sec\n   f = 0\n  else:\n   count = count + 1\n  i = i + 1\n maxi = max(count, maxi)\n print(maxi)", "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int, input().split()))\n l=list(map(int, input().split()))\n ans, temp = 0, 0\n \n if k==2:\n  l1=[0, 0]\n  for i in l:\n   l1[i-1]=1 \n   temp+=1 \n   if l1==[1, 1]:\n    ans=max(ans, (temp-1))\n    l1=[0, 0]\n    l1[i-1]=1 \n    temp=1 \n  \n else:\n  l1=set()\n  for i in range(n):\n   l1.add(l[i])\n   temp=1 \n   for j in range(i+1, n):\n    if l[j] in l1:\n     temp+=1 \n     \n    else:\n     if len(l1)==k-1:\n      l1=set()\n      ans=max(ans, temp)\n      break\n     \n     else:\n      l1.add(l[j])\n      temp+=1\n      \n   ans=max(ans, temp)\n     \n     \n print(max(ans, temp))", "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int, input().split()))\n l=list(map(int, input().split()))\n ans, temp = 0, 0\n \n if k==2:\n  l1=[0, 0]\n  for i in l:\n   l1[i-1]=1 \n   temp+=1 \n   if l1==[1, 1]:\n    ans=max(ans, (temp-1))\n    l1=[0, 0]\n    l1[i-1]=1 \n    temp=1 \n  \n else:\n  l1=[]\n  for i in range(n):\n   l1.append(l[i])\n   temp=1 \n   for j in range(i+1, n):\n    if l[j] in l1:\n     temp+=1 \n     \n    else:\n     if len(l1)==k-1:\n      l1=[]\n      ans=max(ans, temp)\n      break\n     \n     else:\n      l1.append(l[j])\n      temp+=1\n      \n   ans=max(ans, temp)\n     \n     \n print(max(ans, temp))", "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int, input().split()))\n l=list(map(int, input().split()))\n l1=[0]*k \n l2=[1]*k\n ans, temp = 0, 0\n\n for i in l:\n  l1[i-1]=1 \n  temp+=1 \n  if l1==l2:\n   ans=max(ans, (temp-1))\n   l1=[0]*k\n   l1[i-1]=1 \n   temp=1 \n   \n print(max(ans, temp))", "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=[int(i) for i in input().split()]\n l=[int(i) for i in input().split()]\n start=0\n end=0\n d=[]\n min=-10**9\n for j in range(0,len(l)):\n  d.append(l[j])\n  end=end+1\n  if(len(set(d))<b):\n   pass\n  else:\n   end=end-1\n   start=end\n   while(len(set(d))>=b):\n    d.pop(0)\n  if(len(d)>min):\n   min=len(d)\n print(min)", "# cook your dish here\nn=int(input())\nfor i in range(n):\n a,b=[int(i) for i in input().split()]\n l=[int(i) for i in input().split()]\n start=0\n end=0\n d=[]\n answer=[]\n for j in range(0,len(l)):\n  d.append(l[j])\n  end=end+1\n  if(len(set(d))<b):\n   pass\n  else:\n   end=end-1\n   start=end\n   while(len(set(d))>=b):\n    d.pop(0)\n  answer.append(len(d))\n print(max(answer))", "# cook your dish here\ndef sol(arr,n,k):\n m=-1\n for i in range(n):\n  flag=0\n  count=1 \n  s=set()\n  s.add(arr[i])\n  temp=i\n  for j in range(i+1,n):\n   if arr[j] not in s:\n    if len(s)==k-1:\n     flag=1\n    else:\n     s.add(arr[j])\n     count+=1 \n   else:\n    count+=1\n   if flag==1:\n    break\n  if count>m:\n   m=count\n return m\n \ntest=int(input())\nfor _ in range(test):\n n,k = map(int,input().split())\n arr = list(map(int,input().split()))\n if k==2:\n  mi=sol(arr,n,k)\n  print(mi)\n  continue\n freq=[0]*n\n i=0\n j=0\n c=0\n l=0\n mx=-1\n k-=1\n for x in range(n):\n  freq[arr[x]]+=1 \n  if freq[arr[x]]==1:\n   c+=1 \n  while(c>k):\n   freq[arr[l]]-=1\n   if freq[arr[l]]==0:\n    c-=1\n   l+=1 \n  if x-l+1>=j-i+1:\n   j=x\n   i=l\n print(j-i+1)", "#\ndef sol(arr,n,k):\n m=-1\n for i in range(n):\n  flag=0\n  count=1 \n  s=set()\n  s.add(arr[i])\n  temp=i\n  for j in range(i+1,n):\n   if arr[j] not in s:\n    if len(s)==k-1:\n     flag=1\n    else:\n     s.add(arr[j])\n     count+=1 \n   else:\n    count+=1\n   if flag==1:\n    break\n  if count>m:\n   m=count\n return m\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n if k==2:\n  mi=sol(arr,n,k)\n  print(mi)\n  continue\n freq=[0]*n\n i=0\n j=0\n c=0\n l=0\n mx=-1\n k-=1\n for x in range(n):\n  \n  freq[arr[x]]+=1 \n  #print(freq)\n  if freq[arr[x]]==1:\n   c+=1 \n  while(c>k):\n   freq[arr[l]]-=1\n   if freq[arr[l]]==0:\n    c-=1\n   l+=1 \n  if x-l+1>=j-i+1:\n   j=x\n   i=l\n\n print(j-i+1)\n    \n    \n   \n", "#\n\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n m=-1\n for i in range(n):\n  flag=0\n  count=1 \n  s=set()\n  s.add(arr[i])\n  for j in range(i+1,n):\n   if arr[j] not in s:\n    if len(s)==k-1:\n     flag=1\n    else:\n     s.add(arr[j])\n     count+=1 \n   else:\n    count+=1\n   if flag==1:\n    break\n  if count>m:\n   m=count\n print(m)\n    \n    \n    \n   \n", "for T in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n if(len(set(a))<k):\n  print(len(a))\n else:\n  f,t,c=[],[],1\n  key=a[0]\n  for i in range(1,n):\n   if(a[i]==key):\n    c+=1\n   else:\n    f.append(c)\n    t.append(key)\n    key=a[i]\n    c=1\n  f.append(c)\n  t.append(key)\n  check=[0]*(k+1)\n  i,start,l,m,uni=0,0,0,0,0\n  while(i < len(t) and start < len(t)):\n   check[t[i]]+=1\n   if(check[t[i]]==1):\n    uni+=1\n   if(uni==k):\n    check[t[i]]-=1\n    m=max(m,l)\n    check[t[start]]-=1\n    if(check[t[start]]==0):\n     uni-=1\n    l-=f[start]\n    start+=1\n    uni-=1\n    continue\n   l+=f[i]\n   i+=1\n  m=max(m,l)\n  print(m)\n    \n    \n\n    \n   \n   \n  \n    \n   \n", "for T in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n if(len(set(a))<k):\n  print(len(a))\n else:\n  f,t,c=[],[],1\n  key=a[0]\n  for i in range(1,n):\n   if(a[i]==key):\n    c+=1\n   else:\n    f.append(c)\n    t.append(key)\n    key=a[i]\n    c=1\n  f.append(c)\n  t.append(key)\n  check,uni,start,i=[],0,0,0\n  l,m=0,0\n  while(i<len(t) and start<len(t)):\n   if(t[i] not in check):\n    uni+=1\n   if(uni==k):\n    m=max(m,l)\n    check.remove(t[start])\n    if(t[start] not in check):\n     uni-=1\n    uni-=1\n    l-=f[start]\n    start+=1\n    continue\n   check.append(t[i])\n   l+=f[i]\n   i+=1\n  m=max(m,l)\n  print(m)\n\n    \n   \n   \n  \n    \n   \n", "for _ in range(int(input())):\n ip=list(map(int,input().split()))\n n=ip[0]\n k=ip[1]\n l=list(map(int,input().split()))\n d={}\n i=0\n start=0\n end=0\n j=0\n m=0\n while j<n:\n  d.setdefault(l[j],0)\n  d[l[j]]+=1\n  if(len(d)>=k):\n   start=i\n   #print(start,end=\" \")\n   end=j\n   #print(end)\n   #print(d)\n   if d[l[i]]>1 :\n    d[l[i]]-=1 \n   else:                       #1 1 2 2 1\n    d.pop(l[i])\n   #print(d)\n   if d[l[j]]>1 :\n    d[l[j]]-=1 \n   else:\n    d.pop(l[j])\n   #print(d)\n   j-=1\n   i+=1\n  start=i\n  end=j+1\n  if m<=end-start:\n   m=end-start\n  #print(start,end)\n  j+=1 #1 1 1 2 2 1\n   \n print(m) ", "for _ in range(int(input())):\n ip=list(map(int,input().split()))\n n=ip[0]\n k=ip[1]\n l=list(map(int,input().split()))\n d={}\n i=0\n start=0\n end=0\n j=0\n m=0\n while j<n:\n  d.setdefault(l[j],0)\n  d[l[j]]+=1\n  if(len(d)>=k):\n   start=i\n   #print(start,end=\" \")\n   end=j\n   #print(end)\n   #print(d)\n   if d[l[i]]>1 :\n    d[l[i]]-=1 \n   else:                       #1 1 2 2 1\n    d.pop(l[i])\n   #print(d)\n   if d[l[j]]>1 :\n    d[l[j]]-=1 \n   else:\n    d.pop(l[j])\n   #print(d)\n   j-=1\n   i+=1\n  start=i\n  end=j+1\n  if m<=end-start:\n   m=end-start\n  #print(start,end)\n  j+=1 #1 1 1 2 2 1\n   \n print(m) ", "t=int(input())\nwhile(t>0):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n l=[]\n mx=-1000000000\n start=0\n for end in range(n):\n  l.append(a[end])\n  while(len(set(l))>=k):\n   l.pop(0)\n   start+=1\n  if(end-start+1>mx):\n   mx=end-start+1\n print(mx)\n t=t-1\n", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n x = list(map(int, input().split()))\n l = 0\n r = 0\n ans = 0\n d= {i + 1: 0 for i in range(k)}\n s=set()\n while l <= r < n:\n  if len(s) != k:\n   s.add(x[r])\n   d[x[r]] += 1\n   if len(s) != k:\n    ans = max(ans, r - l + 1)\n   r += 1\n  else:\n   d[x[l]] -= 1\n   if d[x[l]] == 0:\n    s.remove(x[l])\n   l += 1\n print(ans)\n", "# cook your dish here\nfor u in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n c=1\n m=0\n for i in range(n-1):\n  if(l[i]==l[i+1]):\n   c+=1\n   m=max(m,c)\n  else:\n   c=1\n m=max(m,c)\n print(m)\n", "def search(l,n,k):\n r=[]\n o=[]\n p=[]\n t=[]\n e=[]\n for i in range(k):\n  o.append(-1)\n for i in range(n):\n  r.append(i)\n  for j in range(1,k+1,1):\n   if(l[i]==j):\n    o.append(i)\n   else:\n    o.append(o[len(o)-k])\n    \n \n \n for i in range(k,len(o),k):\n  for j in range(k):\n   p.append(o[i+j])\n  q=min(p)\n  t.append(q)\n  p.clear()\n \n \n for i in range(len(r)):\n  y=r[i]-t[i]\n  e.append(y)\n  \n print(max(e))\n  \n  \n\n\n\n\nt=int(input())\n\nfor i in range(t):\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n search(l,n,k)", "import sys\nfrom collections import defaultdict\ndef fin(): return sys.stdin.readline().strip()\ndef fout(s, end=\"\\n\"): sys.stdout.write(str(s)+end)\n\nt = int(input())\nwhile t>0:\n t -= 1\n n, k = list(map(int, fin().split()))\n a = [int(x) for x in fin().split()]\n freq = defaultdict(int)\n freq[a[0]] += 1\n temp = set([a[0]])\n ans = 1\n prev = 0\n for i in range(1, n):\n\n  freq[a[i]] += 1\n  temp.add(a[i])\n\n  if len(temp) < k:\n   ans = max(ans, i-prev+1)\n  else:\n   while len(temp) >= k:\n    freq[a[prev]] -= 1\n    if freq[a[prev]] == 0:\n     temp.remove(a[prev])\n    prev += 1\n   \n print(ans)\n\n\n\n", "for _ in range (int(input())):\n n,k = [int(i) for i in input().split()]\n a = [int(i) for i in input().split()]\n ind = [[] for i in range (k)]\n for i in range(n):\n  ind[a[i]-1].append(i)\n maxi = 0\n flag = 0\n for i in ind:\n  if len(i)==0:\n   flag = 1\n   break\n  maxi = max(maxi,i[0])\n  for j in range (1,len(i)):\n   maxi = max(i[j]-i[j-1]-1,maxi)\n  maxi = max(n-i[-1]-1,maxi)\n if flag == 1:\n  print(n)\n else:\n  print(maxi)", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n p = 0\n sm = 0\n ans = 0\n d = dict()\n for i in range(n):\n  d[a[i]] = d.get(a[i], 0) + 1\n  if d[a[i]] == 1:\n   sm += 1\n  if sm == k:\n   ans = max(ans, i - p)\n   while sm == k:\n    d[a[p]] = d[a[p]] - 1\n    p += 1\n    if d[a[p-1]] == 0:\n     sm -= 1\n     break\n ans = max(ans, n - p)\n if ans == 0:\n  ans = n\n print(ans)\n", "for _ in range(int(input())):\n n,k = map(int , input().split())\n arr = list(map(int , input().split()))\n i,j,ans = 0,0,0\n s= set()\n while(i < n and j < n):\n  s.add(arr[j])\n  if(len(s) < k):\n   ans = max(ans,j - i + 1)\n   j += 1\n  else:\n   b = arr[i]\n   i += 1\n   if(b not in arr[i:j + 1] and b in s):\n    s.remove(b)\n print(ans)"]