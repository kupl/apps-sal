["rooms=int(input())\r\nmoney=list(map(int,input().split()))\r\nkeys=int(input())\r\nrev=-1\r\na,b=0,-1\r\ntot=[]\r\n#print(money[-3:-1])\r\nx=0\r\nfor i in range(keys):\r\n    #print(money[b:-1],money[0:a])\r\n    x=sum(money[b:])+sum(money[0:keys-abs(b)])\r\n    tot.append(x)\r\n    b-=1\r\nprint(max(tot))\r\n", "# cook your dish here\nld={}\nrd={}\nn=int(input())\nl=list(map(int,input().split()))\nk=int(input())\nl1=[]\nl2=l[::-1]\nt=k\n\nwhile(k):\n    l1.append(sum(l[:k]) + sum(l2[0:t-k]))\n    #print(l1)\n    k-=1\nl1.append(sum(l2[:t]))\nprint(max(l1))", "n=int(input())\r\nl=list(map(int,input().split()))\r\nk=int(input())\r\nb=sum(l[:k])\r\nc=0\r\ni=k-1\r\nj=n-1\r\nwhile i!=-1:\r\n    b=b-l[i]+l[j]\r\n    c=max(c,b)\r\n    i-=1\r\n    j-=1\r\nprint(c)", "rooms = int(input())\nli = list(map(int, input().split()))\nkeys = int(input())\nmaxi = 0\nj = keys\nfor i in range(int(keys/2)+1):\n    newli1 = li[0:i]+li[len(li) - j:len(li)]\n    newli2 = li[0:j]+li[len(li) - i:len(li)]\n    j -=1\n    if maxi < sum(newli1):\n        maxi = sum(newli1)\n    if maxi < sum(newli2):\n        maxi = sum(newli2)\nprint(maxi)\n            \n    \n    \n", "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))\nk=int(input())\nt=list()\nfor i in range(k+1):\n    t.append(sum(l[0:i])+sum(l[n-(k-i):n]))\nprint(max(t))", "# cook your dish here\nn=int(input())\nl=list(map(int, input().split()))\nk=int(input())\nscores=[]\nlength=len(l)\nfor i in range(k+1):\n    l1=l[0:i]\n    l2=l[length-(k-i):]\n    scores.append(sum(l1)+sum(l2))\nprint(max(scores))\n", "# cook your dish here\nn = int(input())\nA = list(map(int,input().split()))\nk = int(input())\ni = 0\nres = 0\ntmp = 0\nwhile i<=k:\n    tmp = sum(A[:i])+sum(A[(n-k+i):])\n    if tmp > res:\n        res = tmp\n    i+=1\nprint(res)\n", "rooms = int(input())\nli = list(map(int, input().split()))\nkeys = int(input())\nmaxi = 0\ntemp = []\nj = keys\nfor i in range(keys+1):\n    li1 = li[0:i]\n    li2= li[len(li) - j:len(li)]\n    newli = li1+li2\n    j -=1\n    tempMax = sum(newli)\n    if maxi < tempMax:\n        maxi = tempMax\nprint(maxi)\n            \n    \n    \n", "n= int(input())\r\na = [int(x) for x in input().split()]\r\nb =int(input())\r\nz=[]\r\nif b<n:\r\n\r\n    for i in range(b):\r\n        s = sum(a[:i])+sum(a[n-b+i:])\r\n        z.append(s)\r\n    print(max(z))\r\nelse: \r\n  print(sum(a))", "n=int(input())\r\nl=list(map(int,input().split()))\r\np=int(input())\r\ns=sum(l[n-p:])\r\nj=n-p\r\nm=s\r\nfor i in range(p):\r\n    t=s+l[i]-l[j]\r\n    j+=1\r\n    s=t\r\n    if m < t :\r\n        m=t\r\nprint(m) ", "n = int(input())\n\na = list(map(int,input().split()))\n\nk = int(input())\n\nws = 0\nmws = 0\nl = k-1\nr = n-1\n\nif k == n:\n    print(sum(a))\nelif k == n-1:\n    print(sum(a)-min(a))\nelse:\n    for x in range(k):\n        ws = ws+a[x]\n    mws = ws\n    while l>=0: \n        ws = ws-a[l]+a[r]\n        l = l-1\n        r = r-1\n        if mws<ws:\n            mws = ws\n        \n    print(mws)\n\n", "n = int(input())\nmoney = list(map(int, input().split()))\nk = int(input())\nf = len(money) - k\nans = curr = sum(money[:f])\nfor i in range(f, len(money)):\n    curr += money[i] - money[i - f]\n    ans = min(ans, curr)\nprint(sum(money) - ans)", "# cook your dish here\nr = int(input())\n#for i in range(nt):\narr = [int(i) for i in input().split()]\nk = int(input())\nmaxi = 0\nfor x in range(k):\n    k1 = x\n    k2 = k - x\n    summation = sum(arr[:k1]) + (sum(arr[-k2:]) if k2 > 0 else 0)\n    #s2 = sum(arr[:k2]) + (sum(arr[-k1:]) if k1 > 0 else 0)\n    #summation = max(s1, s2)\n    maxi = max(summation, maxi)\n    \nprint(maxi)", "# cook your dish here\nr = int(input())\n#for i in range(nt):\narr = [int(i) for i in input().split()]\nk = int(input())\nmaxi = 0\nfor x in range(k):\n    k1 = x\n    k2 = k - x\n    s1 = sum(arr[:k1]) + (sum(arr[-k2:]) if k2 > 0 else 0)\n    #s2 = sum(arr[:k2]) + (sum(arr[-k1:]) if k1 > 0 else 0)\n    #summation = max(s1, s2)\n    maxi = max(s1, maxi)\n    \nprint(maxi)", "# cook your dish here\nr = int(input())\n#for i in range(nt):\narr = [int(i) for i in input().split()]\nk = int(input())\nmaxi = 0\nfor x in range(k):\n    k1 = x\n    k2 = k - x\n    s1 = sum(arr[:k1]) + (sum(arr[-k2:]) if k2 > 0 else 0)\n    s2 = sum(arr[:k2]) + (sum(arr[-k1:]) if k1 > 0 else 0)\n    summation = max(s1, s2)\n    maxi = max(summation, maxi)\n    \nprint(maxi)", "n = int(input().strip())\r\nl = [int(x) for x in input().strip().split()]\r\nk = int(input().strip())\r\n\r\ndp = [0]*n\r\ndp[0]=l[0]\r\n\r\nfor i in range(1,n):\r\n    dp[i]=dp[i-1]+l[i]\r\n\r\nmaxo=0\r\n\r\nif(k==n):\r\n    print(dp[n-1])\r\n    return\r\nfor i in range(k+1):# 0 to k elements from the start\r\n    if(i==0):\r\n        cur=dp[n-1]-dp[n-k-1]\r\n    else:\r\n        cur=dp[n-1]-dp[n-k-1 + i]  + dp[i-1]\r\n    maxo = max(maxo,cur)\r\nprint(maxo)\r\n\r\n", "# cook your dish here\nr = int(input())\n#for i in range(nt):\narr = [int(i) for i in input().split()]\nk = int(input())\nmaxi = 0\nfor x in range(k):\n    k1 = x\n    k2 = k - x\n    s1 = sum(arr[:k1]) + (sum(arr[-k2:]) if k2 > 0 else 0)\n    s2 = sum(arr[:k2]) + (sum(arr[-k1:]) if k1 > 0 else 0)\n    summation = max(s1, s2)\n    maxi = max(summation, maxi)\n    \nprint(maxi)", "N = int(input())\nA = [int(i) for i in input().split()]\nK = int(input())\n\nP = [0] + A[ : ]\nfor i in range(N):\n    P[i + 1] += P[i]\n\nans = 0\nfor i in range(K + 1):\n    ans = max(ans, P[i] + P[N] - P[N - (K - i)])\nprint(ans)"]