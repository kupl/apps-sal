["# cook your dish here\ndef func(arr, k):\n    sumi = 0\n    for j in range(k):\n        sumi += arr[j]\n    maxi = sumi\n    for i in range(k,len(arr)):\n        sumi -= arr[i - k]\n        sumi += arr[i]\n        maxi = max(maxi,sumi)\n    return maxi\nfor _ in range(int(input())):\n    n, k = map(int,input().split())\n    arr = [int(x) for x in input().split()]\n    print(func(arr,k))", "def call(lst,m):\r\n    maxsum= sum(lst[0:m])\r\n    j=0\r\n    maxs=0\r\n    for i in range(m,len(lst)):\r\n        maxs = max(maxsum,maxs)\r\n        #print(maxsum,lst[j],lst[i])\r\n        maxsum -= lst[j]\r\n        maxsum += lst[i]\r\n        j = j+1\r\n    maxs = max(maxsum,maxs)\r\n    return maxs\r\nt = int(input())\r\nwhile(t):\r\n    t = t-1\r\n    n,m = map(int,input().split())\r\n    lst = list(map(int,input().split()))\r\n    print(call(lst,m))", "def maxSum(arr, n, k): \r\n    res = 0\r\n    for i in range(k): \r\n        res += arr[i] \r\n    curr_sum = res \r\n    for i in range(k, n): \r\n        curr_sum += arr[i] - arr[i-k] \r\n        res = max(res, curr_sum) \r\n    return res \r\nfor i in range(int(input())):\r\n    n,k=map(int,input().split())\r\n    arr=list(map(int,input().split()))\r\n    print(maxSum(arr,n,k))", "ncases = int(input())\r\n\r\nfor cases in range(ncases):\r\n    players, selected = list( map( int, input().split()))\r\n    powerlist = list( map( int, input().split()))\r\n    currmax = sum(powerlist[:selected])\r\n    change = 0\r\n    for i in range(selected, players):\r\n        change += powerlist[i]\r\n        change -= powerlist[i - selected]\r\n        if change > 0:\r\n            currmax += change\r\n            change = 0\r\n    print(currmax)", "# cook your dish here\ndef maxSum(arr, n, k): \n\tres = 0\n\tfor i in range(k): \n\t\tres += arr[i] \n\tcurr_sum = res \n\tfor i in range(k, n): \n\t\tcurr_sum += arr[i] - arr[i-k] \n\t\tres = max(res, curr_sum) \n\treturn res \nfor _ in range(int(input())):\n    N, K = map(int, input().split(\" \"))\n    lst = list(map(int, input().split(\" \")))\n    print(maxSum(lst, N, K))", "def maxSum(arr, n, k): \r\n\tres = 0\r\n\tfor i in range(k): \r\n\t\tres += arr[i] \r\n\tcurr_sum = res \r\n\tfor i in range(k, n): \r\n\t\tcurr_sum += arr[i] - arr[i-k] \r\n\t\tres = max(res, curr_sum) \r\n\treturn res \r\nfor _ in range(int(input())):\r\n    N, K = map(int, input().split(\" \"))\r\n    lst = list(map(int, input().split(\" \")))\r\n    print(maxSum(lst, N, K))", "# cook your dish here\n\ndef check(A,N,K):\n    first = sum(A[:K])\n    mx = sum(A[:K])\n    for i in range(K,N):\n        cur = first - A[i-K] + A[i]\n        if(cur>mx):\n            mx = cur\n            first = cur\n        else:\n            first = cur\n    return(mx)\n        \n    \n\n\nt = int(input())\nfor _ in range(t):\n    n,k = map(int,input().split())\n    arr = list(map(int,input().split()))\n    print(check(arr,n,k))", "for _ in range(int(input())):\r\n    n,q=list(map(int,input().split()))\r\n    a=list(map(int,input().split()))\r\n    maxs=sum(a[:q])\r\n    temp=maxs\r\n    for i in range(q,n):\r\n        temp=temp+a[i]-a[i-q]\r\n        maxs=max(maxs,temp)\r\n    print(maxs)\r\n", "for _ in range(int(input())):\r\n    n, k = list(map(int, input().split()))\r\n    arr = list(map(int, input().split()))\r\n    mx = sum(arr[0:min(k, n)])\r\n    curr = mx\r\n    for i in range(0, n-k):\r\n        curr += arr[i+k]-arr[i]\r\n        mx = max(mx, curr)\r\n    print(mx)\r\n\r\n", "def maxSum(arr, n, k):\n    # k must be greater\n    if (n < k):\n        print(\"Invalid\")\n        return -1\n\n    # Compute sum of first\n    # window of size k\n    res = 0\n    for i in range(k):\n        res += arr[i]\n\n        # Compute sums of remaining windows by\n    # removing first element of previous\n    # window and adding last element of\n    # current window.\n    curr_sum = res\n    for i in range(k, n):\n        curr_sum += arr[i] - arr[i - k]\n        res = max(res, curr_sum)\n\n    return res\n\nfor _ in range(int(input())):\n    n,k=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    print(maxSum(l, n, k))\n\n", "# cook your dish here\nt =int(input())\nwhile t>0:\n    N,K = map(int,input().split())\n    std_pow = list(map(int,input().split()))\n    max_sum = sum(std_pow[:K])\n    k12 = max_sum\n    z=0\n    # print(max_sum)\n    for i in range(K,N):\n        # print(\"index is \"+str(i))\n        k12 = k12 + std_pow[i] - ((std_pow[z]))\n        # print(k12)\n        z=z+1\n        if k12>max_sum:\n            max_sum=k12\n            \n    print(max_sum)        \n    t=t-1", "# cook your dish here\ndef func(a):\n    S_max=0\n    for i in range(0,k):\n        S_max+=a[i]\n    s=S_max\n    for i in range(k,n):\n        s+=a[i]-a[i-k]\n        S_max=max(S_max,s)\n\n    return S_max\n\nt=int(input())\nfor i in range(t):\n    n,k=map(int,input().split())\n    a=list(map(int,input().split()))\n    print(func(a))", "# cook your dish here\nimport sys\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_list_string(): return list(map(str, sys.stdin.readline().strip().split()))\ndef get_string(): return sys.stdin.readline().strip()\ndef get_int(): return int(sys.stdin.readline().strip())\ndef get_print_int(x): sys.stdout.write(str(x) + '\\n')\ndef get_print(x): sys.stdout.write(x + '\\n')\n\ndef solve():\n    for _ in range(get_int()):\n        n,k = get_ints()\n        arr = get_list()\n        pre = 0\n        s=0\n        for i in range(k):\n            pre += arr[i]\n        ans = pre\n        for i in range(k,n,1):\n            pre = pre + arr[i] - arr[s]\n            s += 1\n            ans = max(ans,pre)\n        get_print_int(ans)\nsolve()", "t = int(input())\r\nans = []\r\n\r\nfor _ in range(t):\r\n    n,k = [int(x) for x in input().split(' ')]\r\n    arr = [int(x) for x in input().split(' ')]\r\n    curr = sum(arr[0:k])\r\n    best = curr\r\n    for i in range(n-k):\r\n        curr = curr-arr[i]+arr[i+k]\r\n        if(curr>best):\r\n            best = curr\r\n    ans.append(best)\r\n        \r\nfor i in ans:\r\n    print(i)\r\n", "for _ in range(int(input())):\r\n    n,k = map(int,input().split())\r\n    arr = list(map(int,input().split()))\r\n    s = sum(arr[:k])\r\n    m = s\r\n    for i in range(1,n-k+1):\r\n        s = s-arr[i-1]+arr[i+k-1]\r\n        if s>m: m=s\r\n    print(m)", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    n, k = map(int, input().split())\n    array=list(map(int, input().split()))\n    massimo=sum(array[:k])\n    appo=massimo\n    for i in range(n-k):\n        appo+=array[k+i]-array[i]\n        massimo=max(massimo,appo)\n    print(massimo)", "from sys import stdin\r\n\r\n# Input data\r\n#stdin = open(\"input\", \"r\")\r\n\r\n\r\nfor _ in range(int(stdin.readline())):\r\n    n, k = list(map(int, stdin.readline().split()))\r\n    arr = list(map(int, stdin.readline().split()))\r\n    ans = sum(arr[:k])\r\n    s = sum(arr[:k])\r\n    for i in range(k, n):\r\n        s += arr[i]\r\n        s -= arr[i - k]\r\n        ans = max(ans, s)\r\n    print(ans)\r\n", "for _ in range(int(input())):\r\n    n,k = list(map(int,input().split()))\r\n    pows = list(map(int,input().split()))\r\n    if k == 1 :\r\n        print(max(pows))\r\n        continue\r\n    arr = []\r\n    lastsum = None\r\n    for i in range(n-k+1) :\r\n        if lastsum is None :\r\n            lastsum = sum(pows[:k])\r\n            arr.append(lastsum)\r\n        else :\r\n            lastsum += pows[i+k-1] - pows[i-1]\r\n            arr.append(lastsum)\r\n    # print(arr)\r\n    print(max(arr))\r\n", "for _ in range(int(input())):\r\n    n,k = list(map(int,input().split()))\r\n    p = list(map(int,input().split()))\r\n    window_sum = sum(p[:k])\r\n    max_sum = window_sum\r\n    for i in range(n-k):\r\n        window_sum = window_sum-p[i]+p[i+k]\r\n        max_sum = max(window_sum,max_sum)\r\n    print(max_sum)\r\n", "def main():\r\n    for _ in range(int(input())):\r\n        n,k=list(map(int,input().split()))\r\n        a=list(map(int,input().split()))\r\n        s=sum(a[:k])\r\n        m=s\r\n        for i in range(k,n):\r\n            m=max(m,s+a[i]-a[i-k])\r\n            s=s+a[i]-a[i-k]\r\n        print(m)\r\nmain()", "from sys import stdin, stdout\r\ninput = stdin.readline\r\nprint2 = stdout.write\r\ndef get_ints(): return map(int, stdin.readline().split())\r\ndef get_list(): return list(map(int, stdin.readline().split()))\r\nfor _ in range(int(input())):\r\n\tn, k = get_ints()\r\n\tpowers = get_list()\r\n\ts = sum(powers[0:k])\r\n\tma = s\r\n\ti = 1\r\n\twhile i + k - 1 < n:\r\n\t\ts = s - powers[i-1] + powers[i+k-1]\r\n\t\tma = max(s, ma)\r\n\t\ti += 1\r\n\tprint(ma)", "# cook your dish here\nfor t in range(int(input())):\n    n,k=map(int,input().split())\n    a=[int(i) for i in input().split()]\n    s=sum(a[:k])\n    minn=s\n    for i in range(1,n-k+1):\n        s=s-a[i-1]+a[i+k-1]\n        if s>minn:\n            minn=s\n    print(minn)", "# cook your dish here\nfor u in range(int(input())):\n    n,k=list(map(int,input().split()))\n    l=list(map(int,input().split()))\n    s=0\n    d=[0]\n    for i in l:\n        s+=i\n        d.append(s)\n    m=0\n    for i in range(k,n+1):\n        r=d[i]-d[i-k]\n        m=max(m,r)\n    print(m)\n", "def maxSum(arr, n, k): \r\n\tif (n < k): \r\n\t\r\n\t\tprint(\"Invalid\") \r\n\t\treturn -1\r\n\tres = 0\r\n\tfor i in range(k): \r\n\t\tres += arr[i] \r\n\tcurr_sum = res \r\n\tfor i in range(k, n): \r\n\t\tcurr_sum += arr[i] - arr[i-k] \r\n\t\tres = max(res, curr_sum) \r\n\treturn res \r\nfor _ in range(int(input())):\r\n    n,k=[int(x) for x in input().split()]\r\n    arr=list(map(int,input().split()))\r\n    print(maxSum(arr, n, k)) \r\n", "t = int(input())\n\nfor _ in range(t):\n\n\tn, k = list(map(int, input().split()))\n\n\ta = list(map(int, input().split()))\n\n\ttest = sum(a[i] for i in range(k))\n\n\twin = test\n\n\tfor i in range(k, n):\n\n\t\ttest = test - a[i-k] + a[i]\n\n\t\tif test > win:\n\t\t\twin = test\n\n\tprint(win)\n"]