["for __ in range(int(input())):\n    a, b, c, d = list(map(int, input().split()))\n    if a == c or b == d:\n        print(abs(a - c) + abs(b - d))\n    else:\n        print(abs(a - c) + abs(b - d) + 2)", "t = int(input())\nfor i in range(t):\n    x1, y1, x2, y2 = map(int, input().split())\n    if x1 == x2 or y1 == y2:\n        print(abs(x1 - x2) + abs(y1 - y2))\n    else:\n        print(abs(x1 - x2) + abs(y1 - y2) + 2)", "def solve():\n    x1,y1,x2,y2 =map(int,input().split())\n    t = 0\n    ans = 0\n    if x1 != x2:\n        ans += abs(x1 -x2)\n        t += 1\n    if y1 != y2:\n        ans += abs(y1-y2)\n        t += 1\n    print(ans + max(t-1,0) * 2)\nfor i in range(int(input())):\n    solve()", "T = int(input())\n\nfor t in range(T):\n    x1, y1, x2, y2 = [int(_) for _ in input().split()]\n    if x1 == x2 or y1 == y2:\n        print(abs(x2-x1) + abs(y2-y1))\n    else:\n        print(abs(x2-x1) + abs(y2-y1) + 2)\n", "import math\n\nT = int(input())\n\n#lets = 'abcdefghijklmnopqrstuvwxyz'\n#key = {lets[i]:i for i in range(26)}\n\nfor t in range(T):\n  #n = int(input())\n  x1,y1,x2,y2 = list(map(int,input().split()))\n  #a = list(map(int,input().split()))\n  #a = list(input())\n  d = False\n  print(abs(x1-x2)+abs(y2-y1)+2*((y2!=y1)*(x2!=x1)))\n\n", "t = int(input())\n\nfor i in range(t):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    dx = abs(x1 - x2)\n    dy = abs(y1 - y2)\n    if dx == 0 and dy == 0:\n        print(0)\n    elif dx == 0 or dy == 0:\n        print(max(dx, dy))\n    else:\n        print(dx + dy + 2)", "t=int(input())\nfor _ in range(t):\n    x,y,a,b=map(int,input().split())\n    if x==a:\n        print(abs(y-b))\n    elif y==b:\n        print(abs(x-a))\n    else:\n        print(abs(x-a)+abs(y-b)+2)", "def main():\n    # n = int(input())\n    # arr = list(map(int, input().split()))\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    # s = input()\n    if x1 == x2 or y1 == y2:\n        print(abs(x1 - x2) + abs(y1 - y2))\n    else:\n        print(abs(x1 - x2) + abs(y1 - y2) + 2)\n\n\n\n# for _ in range(1):\nfor _ in range(int(input())):\n    main()\n", "from sys import stdin\n\nfor _ in range(int(stdin.readline())):\n    x1,y1,x2,y2 = map(int, stdin.readline().split())\n    ans = abs(x2 -x1) + abs(y2 - y1)\n    if x1 != x2 and y1 != y2:\n        ans += 2\n    print(ans)", "def testcase():\n\n    x1, y1, x2, y2 = map(int, input().split())\n    x = abs(x1 - x2)\n    y = abs(y1 - y2)\n    ans = x + y\n    if x > 0 and y > 0:\n        ans += 2\n    print(ans)\n\n    return\n\nt = int(input())\nfor _ in range(t):\n    testcase()", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\nfor qu in range(T):\n    x1, y1, x2, y2 = list(map(int, readline().split()))\n    if x1 == x2 or y1 == y2:\n        Ans[qu] = abs(x1-x2)+abs(y1-y2)\n    else:\n        Ans[qu] = abs(x1-x2)+abs(y1-y2) + 2\n\nprint('\\n'.join(map(str, Ans)))\n", "import sys\nimport random\n# import numpy as np\nimport math\nimport copy\nfrom heapq import heappush, heappop, heapify\nfrom functools import cmp_to_key\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, Counter\n\n# sys.setrecursionlimit(1000000)\n# input aliases\ninput = sys.stdin.readline\ngetS = lambda: input().strip()\ngetN = lambda: int(input())\ngetList = lambda: list(map(int, input().split()))\ngetZList = lambda: [int(x) - 1 for x in input().split()]\n\nINF = float(\"inf\")\n\nMOD = 10 ** 9 + 7\ndivide = lambda x: pow(x, MOD - 2, MOD)\n\n\ndef solve():\n    a,b, x,y = getList()\n    if a == x:\n        print(abs(b - y))\n        return\n    if b == y:\n        print(abs(a - x))\n        return\n\n    print(abs(a - x) + abs(b - y) + 2)\n\n\n\ndef main():\n    n = getN()\n    for _ in range(n):\n        solve()\n\n    return\n\n\ndef __starting_point():\n    main()\n    # solve()\n\n__starting_point()", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    x1, y1, x2, y2 = read_ints()\n    if x1 == x2 or y1 == y2:\n        print(abs(x1 - x2) + abs(y1 - y2))\n    else:\n        print(abs(x1 - x2) + abs(y1 - y2) + 2)\n", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda: list(map(int, input().split()))\n\ndef solve():\n  x1, y1, x2, y2 = read()\n  if x1 == x2:\n    print(abs(y1 - y2))\n  elif y1 == y2:\n    print(abs(x1 - x2))\n  else:\n    print(abs(y1 - y2) + abs(x1 - x2) + 2)\n  \n\nfor t in range(int(input())):\n  solve()", "t = int(input())\nfor _ in range(t):\n\tx1, y1, x2, y2 = map(int, input().split())\n\n\tif x1 == x2:\n\t\tprint(abs(y1-y2))\n\telif y1 == y2:\n\t\tprint(abs(x1-x2))\n\telse:\n\t\tprint(abs(x1-x2) + abs(y1-y2) + 2)", "q = int(input())\nfor _ in range(q):\n\tx1,y1,x2,y2 = map(int, input().split())\n\tif x1 == x2:\n\t\tprint(abs(y2-y1))\n\telif y1 == y2:\n\t\tprint(abs(x2-x1))\n\telse:\n\t\tprint(abs(x2-x1)+abs(y2-y1)+2)"]