["test_case = int(input())\nfor w in range(test_case):\n n, k = map(int,input().split())\n l = list(map(str,input().split()))\n ans = []\n for q in range(k):\n  l2 = list(map(str,input().split()))\n  ans.extend(l2[1:])\n for i in l:\n  if i in ans:\n   print('YES',end=' ')\n  else:\n   print('NO',end=' ')\n print()# cook your dish here\n", "# cook your dish here\nt=int(input())\nfor w in range(t):\n n,k=map(int,input().split())\n l=list(map(str,input().split()))\n ans=[]\n for q in range(k):\n  l2=list(map(str,input().split()))\n  ans.extend(l2[1:])\n for i in l:\n  if i in ans:\n   print('YES',end=' ')\n  else:\n   print('NO',end=' ')\n print()", "t=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split()))\n strings=input().split()\n res=\"\"\n for i in range(k):\n  modernlanguage=input().split()\n  modernlanguage.remove(modernlanguage[0])\n  res=res+\"\".join(modernlanguage)\n res1=[]\n for i in range(len(strings)):\n  if(strings[i] in res):\n   res1.append(\"YES\")\n  else:\n   res1.append(\"NO\")\n print(*res1)\n \n  \n", "# cook your dish here\nt = int(input())\nfor i in range(t):\n N, K = map(int, input().split())\n dict = list(map(str, input().split()))\n mod_pharse = []\n for m in range(K):\n  l = list(map(str, input().split()))\n  mod_pharse.extend(l[1:])\n\n for i in dict:\n\n  if i in mod_pharse:\n\n   print('YES', end=' ')\n  else:\n   print('NO', end=' ')\n print()\n", "# cook your dish here\ntry:\n test_cases = int(input())\n for _ in range(test_cases):\n  n, k = input().split()\n  dictOfForgottenWord = list(input().split())\n  modernDict = ''\n  for i in range(int(k)):\n   modernDict += \" \"+input()\n\n  newModernDict = list(set(list(modernDict.split(\" \"))))\n\n  for i in dictOfForgottenWord:\n   if i in newModernDict:\n    print(\"YES\", end=' ')\n   else:\n    print(\"NO\", end=' ')\n  print()\n\nexcept:\n pass", "n = int(input())\nl, dictonary = [], []\nfor i in range(n):\n listSize, numOfDict = map(int, input().split())\n listOfelement = list(map(str, input().split()))\n for i in range(numOfDict):\n  dictonary += list(map(str, input().split()))\n for ele in listOfelement:\n   if ele in dictonary:\n    l.append('YES')\n   else:\n    l.append('NO')\n for out in l:\n  print(out, end=' ')\n print()\n dictonary, l = [], []\n    \n\n\n", "t=int(input())\ni=0\nwhile i<t:\n n,k=input().split()\n n=int(n)\n k=int(k)\n s=[]\n ans=[0]*n\n s=input().split()\n j=0\n while j<k:\n  l=[]\n  l=input().split()\n  m=0\n  while m<n:\n   if s[m] in l:\n    ans[m]=1\n   m+=1\n  j+=1\n d=0\n while d<n:\n  if ans[d]==0:\n   print(\"NO\",end=\" \")\n  else:\n   print(\"YES\",end=\" \")\n  d+=1\n print(\"\")\n i+=1", "def p_input():\n tot = int(input())\n dicts = []\n for i in range(tot):\n  n = [int(x) for j, x in enumerate(input().split()) if j < 2 ]\n  dicts = input().split()[:n[0]]\n  sents = []\n  for _ in range(n[1]):\n   sent = input().split()\n   sents += sent[1:int(sent[0]) + 1]\n  print(' '.join('YES' if x in sents else 'NO' for x in dicts))\n\n\ndef __starting_point():\n p_input()\n \n\n__starting_point()", "# cook your dish here\ntest = int(input())\n\nfor _ in range(0,test):\n words , phrases = map(int,input().split())\n listOfPhrases = set()\n words = list(input().split())\n for _ in range(0,phrases):\n  newset = set(input().split())\n  listOfPhrases = listOfPhrases.union(newset)\n for x in words:\n  if x in listOfPhrases:\n   print('YES',end=' ')\n  else:\n   print('NO',end=' ')\n print()", "# cook your dish here\n#For each test case, output a single line containing N tokens (space-separated): \u00a0\u00a0\u00a0\u00a0if the ith word of the dictionary exists in at least one phrase in modern \u00a0\u00a0\u00a0\u00a0languages, then you should output YES as the ith token, otherwise NO.\n#Constraints\n#1 \u2264 T \u2264 20\n#1 \u2264 N \u2264 100\n#1 \u2264 K, L \u2264 50\n#1 \u2264 length of any string in the input \u2264 5\n#Example\n#Input:\n#2\n#3 2\n#piygu ezyfo rzotm\n#1 piygu\n#6 tefwz tefwz piygu ezyfo tefwz piygu\n#4 1\n#kssdy tjzhy ljzym kegqz\n#4 kegqz kegqz kegqz vxvyj\n\n#Output:\n#YES YES NO \n#O NO NO YES \n\n\ntest = int(input())\n\nfor _ in range(0,test):\n words , phrases = map(int,input().split())\n listOfPhrases = set()\n words = list(input().split())\n for _ in range(0,phrases):\n  newset = set(input().split())\n  listOfPhrases = listOfPhrases.union(newset)\n for x in words:\n  if x in listOfPhrases:\n   print('YES',end=' ')\n  else:\n   print('NO',end=' ')\n print()\n  \n", "for _ in range(int(input())) :\n n, k = map(int, input().split())\n s = list(map(str, input().split()))\n li = []\n t = 0\n for i in range(k) :\n  a = list(map(str, input().split()))\n  l = len(a)\n  for j in range(l) :\n   li.append(a[j])\n d = []\n for i in range(n) :\n  if s[i] in li :\n   d.append('YES')\n  else :\n   d.append('NO')\n print(*d)", "for _ in range(int(input())) :\n n, k = map(int, input().split())\n s = list(map(str, input().split()))\n li = []\n t = 0\n for i in range(k) :\n  a = list(map(str, input().split()))\n  l = len(a)\n  for j in range(l) :\n   li.append(a[j])\n d = []\n for i in range(n) :\n  if s[i] in li :\n   d.append('YES')\n  else :\n   d.append('NO')\n print(*d)", "try:\n # cook your code here\n t = int(input())\n while t > 0:\n  n, q = map(int, input().split())\n  A = [j for j in input().split()]\n  tmp = []\n  while q > 0:\n   tmp += [j for j in input().split()]\n   q -= 1\n  i = 0\n  while n > i:\n   if A[i] in tmp:\n    print(\"YES\", end=' ')\n   else:\n    print(\"NO\", end=' ')\n   i += 1\n  print()\n  t -= 1\nexcept:\n pass", "# cook your dish here\nT = int(input())\n\nfor t in range(T):\n phrases = []\n numword, numphrases = input().split()\n words = input().split()\n for phrase in range(int(numphrases)):\n  phrase = input().split()\n  phrase = phrase[1:]\n  for word in phrase:    \n   phrases.append(word)\n for count in range(len(words)):\n  if words[count] in phrases:\n   print(\"YES\", end=\" \")\n  else:\n   print(\"NO\", end=\" \")\n print(\"\\n\", end=\"\")", "t = int(input())\nfor _ in range(t):\n n,k = map(int,input().split())\n old = input().split()\n a = [input() for i in range(k)]\n d = {}\n for j in old:\n  d[j]=\"NO\"\n for i in old:\n  for j in a:\n   if d.get(i) == \"NO\":\n    if i in j:\n     d[i] = \"YES\"\n b = [i for i in d.values()]\n print(*b)", "# cook your dish here\nt=int(input())\n\nfor i in range(t):\n n,k=map(int,input().split())\n l=[]\n l1=list(map(str,input().split()))\n for i in range(k):\n  l2=list(map(str,input().split()))\n  l=l+l2\n for a in l1:\n  if a in l:\n   print(\"YES\",end=\" \")\n  else:\n   print(\"NO\",end=\" \")\n \n print()", "for _ in range(int(input())):\n n, k = map(int,input().split())\n a = [x for x in input().split()]\n s = set()\n for i in range(k):\n  for w in input().split():\n   s.add(w)\n ans = []\n for i in range(n):\n  ans.append('YES') if a[i] in s else ans.append('NO')\n print(' '.join(ans))", "t=int(input())\nans1=list()\nfor i in range(t):\n n=list(map(int,input().split()))\n s=list(map(str,input().split()))\n ans=list()\n for j in range(n[1]):\n  a=list(map(str,input().split()))\n  ans.append(a)\n d=list() \n for j in ans:\n  d=d+j\n yo=\"\" \n for k in range(len(s)):\n  if s[k] in d:\n   yo=yo+\"YES\"+\" \"\n  else:\n   yo=yo+\"NO\"+\" \"\n ans1.append(yo)\nfor l in ans1:\n print(l)", "# cook your dish here\nfor _ in range(int(input())):\n n,k = map(int,input().split())\n word = list(input().split())\n li = []\n for x in range(k):\n  l = list(input().split())\n  li += l\n for x in word:\n  if x in li:\n   print(\"YES\",end=\" \")\n  else:\n   print(\"NO\",end=\" \")\n print()", "# cook your dish here\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n l=[]\n ln=list(map(str,input().split()))\n for i in range(k):\n  lk=list(map(str,input().split()))\n  l=l+lk\n for a in ln:\n  if a in l:\n   print(\"YES\",end=\" \")\n  else:\n   print(\"NO\",end=\" \")\n print()", "# cook your dish here\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n ns=[i for i in input().split()]\n d={}\n for i in ns:\n  d[i]=False\n for i in range(k):\n  ks=list(map(str,input().split()))\n  for j in ks:\n   if j in d:\n    d[j]=True\n for i in ns:\n  if d[i]==True:\n   print(\"YES\",end=' ')\n  else :\n   print(\"NO\",end=' ')\n   \n print()\n  ", "# cook your dish here\nt=int(input())\nfor i in range(0, t):\n n,k=[int(n) for n in input().split()]\n a=input().split()\n b=[]\n for j in range(0,k):\n  x=input().split()\n  for p in range(1,len(x)):\n   b.append(x[p])\n r=0\n for r in range(0,len(a)):\n  if b.__contains__(a[r]):\n   print('YES',end=\" \")\n  else:\n   print(\"NO\",end=\" \")\n print(\" \")", "T = int(input())\nfor i in range(0, T):\n N, K = [int(N) for N in input().split()]\n a = input().split()\n b = []\n for j in range(0, K):\n  x = input().split()\n  for t in range(1, len(x)):\n   b.append(x[t])\n r = 0\n for r in range(0, len(a)):\n  if b.__contains__(a[r]):\n   print('YES', end=' ')\n  else:\n   print(\"NO\", end=\" \")\n print(' ')", "'''\n  Problem : Mahasena\n  Author @ Rakesh Kumar\n  cpp.rakesh@gmail.com\n  Date : 29/01/2021\n'''\n\ndef solve():\n for _ in range(int(input())):\n  n, k = map(int, input().split())\n  aitihasik_bhasa = list(map(str, input().split()))\n  d = {}\n  for b in aitihasik_bhasa:\n   d[b] = False\n  for _ in range(k):\n   vakya = list(map(str, input().split()))\n   vakya = vakya[1:]\n   for v in vakya:\n    if v in d:\n     d[v] = True\n  for v in aitihasik_bhasa:\n   if d[v]:\n    print('YES', end=' ')\n   else:\n    print('NO', end=' ')\n  print()\n\ndef __starting_point():\n solve()\n\n__starting_point()", "# cook your dish here\nt = int(input())\nfor z in range(t) :\n a,b = [int(x) for x in input().split()]\n s = input().split()\n x = []\n for i in range(b) :\n  y = input().split()\n  x = x + y \n l = set(x)\n for i in s:\n  if i in l:\n   print(\"YES\",end=' ')\n  else:\n   print(\"NO\",end=' ')\n print()"]