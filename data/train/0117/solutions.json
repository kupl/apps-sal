["from sys import stdin\ninput = stdin.readline\n\ntests = int(input())\nfor test in range(tests):\n    n, m = list(map(int, input().split()))\n    a = [[0] * m for _ in range(n)]\n    r = [[int(i) for i in input().split()] for _ in range(n)]\n    c = [[int(i) for i in input().split()] for _ in range(m)]\n    z = [[-1, -1] for _ in range(n * m + 1)]\n    \n    for i in range(n):\n        for j in range(m):\n            z[r[i][j]][0] = j\n    for i in range(m):\n        for j in range(n):\n            z[c[i][j]][1] = j\n\n    for i in range(1, n * m + 1):\n        a[z[i][1]][z[i][0]] = i\n\n    for i in a:\n        print(' '.join([str(j) for j in i]))\n", "import sys as _sys\n\n\ndef main():\n    t = int(input())\n    for i_t in range(t):\n        \n        rows_n, columns_n = _read_ints()\n        rows = [tuple(_read_ints()) for i_row in range(rows_n)]\n        columns = [tuple(_read_ints()) for i_column in range(columns_n)]\n        \n        any_first_column_element = rows[0][0]\n        \n        i_first_column = 0\n        while any_first_column_element not in columns[i_first_column]:\n            i_first_column += 1\n        first_column = columns[i_first_column]\n        \n        # Can be written in O(N*log(N)) but it is not necessary for N <= 500\n        rows = sorted(rows, key=lambda row: first_column.index(row[0]))\n        \n        for row in rows:\n            print(*row)\n\n\ndef _read_line():\n    result = _sys.stdin.readline()\n    assert result[-1] == \"\\n\"\n    return result[:-1]\n\n\ndef _read_ints():\n    return list(map(int, _read_line().split()))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nfrom collections import deque\nfrom sys import stdin, stdout, setrecursionlimit\nfrom string import ascii_letters\nletters = ascii_letters[:26]\nfrom collections import defaultdict\n#from functools import reduce\ninput = stdin.readline\n#print = stdout.write\n\nfor _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    horizontal = [list(map(int, input().split())) for i in range(n)]\n    vertical = [list(map(int, input().split())) for i in range(m)]\n    vals = vertical[0]\n    first = vals[0]\n    pos = 0\n    \n    for i in horizontal:\n        for g in range(m):\n            if i[g] == first:\n                pos = g\n    \n    path = {}\n    order = {}\n    for ind, i in enumerate(vals):\n        path[i] = ind\n    for ind, i in enumerate(horizontal):\n        order[path[i[pos]]] = ind\n\n    for i in range(len(order)):\n        print(*horizontal[order[i]])\n\n"]