["def main():\n    import sys\n    input = sys.stdin.readline\n    \n    n = int(input())\n    arr = input()\n    \n    one = arr.count('n')\n    zero = arr.count('z')\n    \n    ans = [1] * one + [0] * zero\n    \n    print(*ans)\n    \n    return 0\n\nmain()\n", "n = int(input())\ns = input()\nones = 0\nfor i in s:\n\tif i == 'n':\n\t\tones += 1\nfor i in range(ones):\n\tprint(1, end = \" \")\nfor j in range((n-ones*3)//4):\n\tprint(0, end = \" \")", "import sys\n\ndef main():\n\tn = int(sys.stdin.readline())\n\ts = sys.stdin.readline()\n\tx = s.count('z')\n\ty = (n - 4 * x) // 3\n\tfor i in range(y):\n\t\tprint(1, end=' ')\n\tfor i in range(x):\n\t\tprint(0, end=' ')\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()", "#!usr/bin/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\n#A\ndef A():\n    n = I()\n    s = S()\n    d = defaultdict(lambda : 0)\n    for i in s:\n        d[i] += 1\n    ans = [1]*d[\"n\"]\n    d[\"o\"] -= d[\"n\"]\n    ans += [0]*d[\"o\"]\n    print(*ans) \n    return\n\n#B\ndef B():\n\n    return\n\n#C\ndef C():\n\n    return\n\n#D\ndef D():\n\n    return\n\n#E\ndef E():\n\n    return\n\n#F\ndef F():\n\n    return\n\n#G\ndef G():\n\n    return\n\n\n#Solve\ndef __starting_point():\n    A()\n\n__starting_point()", "kf = int(input())\ns = input()\nz = 0\ne = 0\nr = 0\no = 0\nn = 0\nfor i in s:\n    if i == 'z':\n        z += 1\n    elif i == 'e':\n        e += 1\n    elif i == 'r':\n        r += 1\n    elif i == 'o':\n        o += 1\n    else:\n        n += 1\nx = min(o, n, e)\no -= x\nn -= x\ne -= x\nprint('1 ' * x + '0 ' * min(z, e, r, o))", "n=int(input())\nc=input()\n\nprint(\"1 \"*c.count(\"n\")+\"0 \"* c.count(\"z\"))\n", "n=int(input())\ns=input()\nx=s.count('z')\ny=(n-4*x)//3\nprint('1 '*y+'0 '*x)", "input()\ns = input()\nn = 0\nz = s.count('z')\nfor i in range(s.count('n')):\n    print(1, end=' ')\nfor i in range(z):\n    print(0, end=' ')", "n = int(input())\ns = input()\nfor i in range(s.count('n')):\n    print(1,end = \" \")\nfor i in range(s.count('z')):\n    print(0, end =\" \")", "n = int(input())\nA = input()\n\nones = A.count(\"n\")\nzeroes = A.count(\"z\")\n\nprint(*[1 for i in range(ones)], *[0 for i in range(zeroes)])\n", "n = int(input())\ns = input()\nzeros = s.count(\"z\")\nones = s.count(\"n\")\nprint(\"1 \" * ones + \"0 \" * zeros)", "n = int(input())\nu = list(input())\nr0 = 0\nn1 = 0\nfor i in range(n):\n    if u[i] == 'r':\n        r0 += 1\n    elif u[i] == 'n':\n        n1 += 1\nfor i in range(n1):\n    print(1, end = ' ')\nfor i in range(r0):\n    print(0, end = ' ')\n", "n=int(input())\na=list(input())\narr=[]\ncounter=a.count('n')\ncounter2=a.count('r')\nfor i in range(counter):\n    arr.append(1)\nfor i in range(counter2):\n    arr.append(0)\nprint(*arr)\n", "L = int(input())\n\nS = input()\n\nn = S.count('n')\nr = S.count('r')\n\nans = '1 ' * n + '0 ' * r\n\nprint(ans)", "n=int(input())\ns=str(input())\ncount1=s.count('n')\ncount2=s.count('r')\narr=[1]*count1\narr1=[0]*count2\narr=arr+arr1\nprint(*arr)\n", "input()\nX = input()\nZ = X.count('z')\nN = X.count('n')\nprint('1 ' * N + '0 ' * Z)\n", "N = int(input())\nS = input()\n\nnum_zeros = 0\nnum_ones = 0\n\nfor w in S:\n    if w == 'z':\n        num_zeros += 1\n    if w == 'n':\n        num_ones += 1\n\nfoo = ['1' for _ in range(num_ones)] + ['0' for _ in range(num_zeros)]\nprint(\" \".join(foo))\n\n", "n = int(input())\ns = input()\nz = s.count(\"z\")\ne = s.count(\"e\")\nr = s.count(\"r\")\no = s.count(\"o\")\nn = s.count(\"n\")\nones = min(o, n, e)\no -= ones\nn -= ones\ne -= ones\nzeros = min(z, e, r, o)\nres = []\nres += [1] * ones\nres += [0] * zeros\nprint(*res)", "n = int(input())\ns = input()\na = s.count(\"z\")\nb = (n - a * 4) // 3\nprint(\"1 \" * b + \"0 \" * a)", "import sys \nfrom collections import defaultdict\ninput = lambda : sys.stdin.readline().rstrip()\n\nn = int(input())\ns = input()\nd = defaultdict(int)\n\n\none = s.count(\"n\")\nzero = s.count(\"z\")\n\nfor i in range(one):\n  print(\"1\", end=\" \")\nfor i in range(zero):\n  print(\"0\", end=\" \")\n", "#JMD\n#Nagendra Jha-4096\n\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nt=1\nfor tt in range(t):\n    n=int(input())\n    s=str(input())\n    a=s.count('n')\n    b=s.count('z')\n    for i in range(a):\n        print(1,end=\" \")\n    for i in range(b):\n        print(0,end=\" \")\n    print()\n    \n    \n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "from math import*\nt=int(input())\ns=input()\nn=s.count(\"n\")\no=s.count(\"o\")\ne=s.count(\"e\")\nr=s.count(\"r\")\nz=s.count(\"z\")\nwhile o>0 and n>0 and e>0:\n    print(1,end=' ')\n    n-=1\n    o-=1\n    e-=1\nwhile z>0:\n    print(0,end=' ')\n    z-=1", "n = int(input())\ns = input()\nfor i in range(s.count('n')):\n    print(1, end=\" \")\nfor i in range(s.count('z')):\n    print(0, end=\" \")"]