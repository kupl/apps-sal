["for i in range(int(input())):\n n,k=map(int,input().split())\n m=[]\n for j in range(n):\n  l=list(input())\n  m.append(l)\n a=0\n for k in range(k):\n  b=0\n  for p in range(n):\n   if m[p][k]=='1':\n    b+=1\n  if b>1:\n   a+=((b*(b-1))//2)\n print(a)", "a=int(input())\nfor i in range(a):\n n,m=map(int,input().split())\n b=[]\n for j in range(n):\n  j=list(input())\n  b.append(j)\n c=0\n for k in range(m):\n  d=0\n  for p in range(n):\n   if b[p][k]=='1':\n    d+=1\n  if d>1:\n   c+=((d*(d-1))//2)\n print(c)", "# cook your dish here\nw=int(input())\nfor i in range(w):\n B,f=list(map(int,input().split()))\n v =[]\n for j in range(B):\n  j=list(input())\n  v.append(j)\n q=0\n for k in range(f):\n  s=0\n  for n in range(B):\n   if v[n][k]=='1':\n    s+=1\n  if s>1:\n   q+=((s*(s-1))//2)\n print(q)\n  \n", "# cook your dish here\nfor i in range(int(input())):\n n,m=map(int,input().split())\n matrix = []\n for i in range(n):\n  row = []\n  s = input()\n  for i in s:\n   row.append(i)\n  matrix.append(row)\n ans = 0\n for i in range(m):\n  c= 0\n  for j in range(n):\n   if(matrix[j][i]=='1'):\n    c+=1\n  ans +=(c*(c-1)//2)\n print(ans)", "T=int(input())\nfor i in range(T):\n B,G=list(map(int,input().split()))\n l=[]\n for j in range(B):\n  m=list(input())\n  l.append(m)\n d=0\n for k in range(G):\n  c=0\n  for n in range(B):\n   if l[n][k]=='1':\n    c+=1\n  if c>1:\n   d+=((c*(c-1))//2)\n print(d)\n", "T=int(input())\nfor i in range(T):\n B,G=list(map(int,input().split()))\n l=[]\n for j in range(B):\n  m=list(input())\n  l.append(m)\n d=0\n for k in range(G):\n  c=0\n  for n in range(B):\n   if l[n][k]=='1':\n    c+=1\n  if c>1:\n   d+=((c*(c-1))//2)\n print(d)\n \n\n", "for t in range(int(input())):\n n, m = list(map(int, input().split()))\n matrix = []\n for i in range(n):\n  matrix.append(list(input()))\n colli = 0\n for i in range(m):\n  count = 0\n  for j in range(n):\n   if matrix[j][i] == '1':\n    count += 1\n  if count > 1:\n   colli += ((count * (count-1)) // 2)\n print(colli)\n", "# cook your dish here\nt = int(input())\nfor _ in range(t):\n n, m = map(int, input().split())\n matrix = []\n for i in range(n):\n  matrix.append(list(input()))\n collision = 0\n for i in range(m):\n  count = 0\n  for j in range(n):\n   if matrix[j][i] == '1':\n    count += 1\n  # print('Count:', count)\n  if count > 1:\n   collision += ((count * (count-1)) // 2)\n print(collision)", "t = int(input())\nfor _ in range(t):\n n, m = map(int, input().split())\n matrix = []\n for i in range(n):\n  matrix.append(list(input()))\n collision = 0\n for i in range(m):\n  count = 0\n  for j in range(n):\n   if matrix[j][i] == '1':\n    count += 1\n  # print('Count:', count)\n  if count > 1:\n   collision += ((count * (count-1)) // 2)\n print(collision)", "def factorial(n):\n fact = 1\n for i in range(1, n+1):\n  fact = fact * i\n return fact\nt = int(input())\nfor _ in range(t):\n n, m = map(int, input().split())\n matrix = []\n for i in range(n):\n  matrix.append(list(input()))\n collision = 0\n for i in range(m):\n  count = 0\n  for j in range(n):\n   if matrix[j][i] == '1':\n    count += 1\n  # print('Count:', count)\n  if count > 1:\n   collision += ((count * (count-1)) // 2)\n print(collision)", "for _ in range(int(input())):\n N,M = (list(map(int,input().split(' '))))\n grid = []\n \n \n for x in range(N):\n  row = [i for i in input()]\n  grid.append(row)\n \n collisions = 0\n \n for x in range(M):\n  z = 0\n  for y in range(N):\n   if grid[y][x] == '1':\n    z += 1\n  if z == 2:\n   collisions += 1\n  elif z > 2:\n   collisions += (z * (z - 1)) // 2\n print(collisions)\n  \n \n", "# cook your dish here\n\ndef collisions(ar, n, m):\n res = 0\n for i in range(m):\n  tem1, tem2 = 0, 0\n  for j in range(n):\n   if ar[j][i] == '1':\n    tem1 += tem2\n    tem2 += 1\n  res += tem1\n return res\n\ndef __starting_point():\n t = int(input())\n for i in range(t):\n  n, m = map(int, input().split())\n  ar = []\n  for i in range(n):\n   ar.append(list(input()))\n  print(collisions(ar, n, m))\n__starting_point()", "for _ in range(int(input())):\n m,n=map(int,input().split())\n l=[]\n for i in range(m):\n  s=input()\n  l.append(s)\n final=0\n for i in range(n):\n  count=0\n  for j in range(m):\n   if l[j][i]=='1':\n    count+=1\n  if count>1:\n   for k in range(count):\n    final+=k\n print(final)", "tc = int(input())\nwhile tc !=0:   \n r,c = map(int, input().split())\n arr= []\n for i in range(r):\n  temp = list(map(int, input()))\n  arr.append(temp)\n count = 0\n for j in range(c):\n  temp = 0\n  for i in range(r):\n   if arr[i][j]==1:\n    temp += 1\n  if temp!=1 and temp!=0:\n   count += (temp*(temp-1))//2\n print(count)\n\n tc -= 1", "# cook your dish here\nt=int(input())\nwhile t>0:\n n,m=map(int,input().split())\n l=[]\n co=0\n for i in range(n):\n  l.append(input())\n for i in range(m):\n  c=0\n  for j in range(n):\n   if l[j][i]==\"1\":\n    c+=1\n  co+=c*(c-1)/2\n print(int(co))\n t-=1", "def comb(n, r):\n an = fact(n)\n an = an/fact(r)\n an = an/fact(n-r)\n \n return int(an)\n \ndef fact(n):\n ans = 1\n while(n>1):\n  ans = ans*n\n  n -= 1\n return ans\n \nt = int(input())\n\nfor _ in range(t):\n n, m = [int(x) for x in input().split()]\n \n a = []\n ans = 0\n \n for i in range(n):\n  temp = [int(x) for x in input()]\n  a.append(temp)\n \n for i in range(m):\n  c = 0\n  for j in range(n):\n   if(a[j][i] == 1):\n    c += 1\n  if(c>=2):\n   ans += comb(c, 2)\n \n print(ans)", "# cook your dish here\ntry:\n for _ in range(int(input())):\n  n, m = map(int, input().split())\n  l = []\n  for j in range(n):\n   l.append(list(input()))\n  ans = []\n  c = 0\n  for u in range(m):\n   for v in range(n):\n    if l[v][u] == '1':\n     c += 1\n   ans.append(c)\n   c = 0\n  count = 0\n  for j in range(len(ans)):\n   count += ((ans[j] - 1) * (ans[j])) //2\n  print(count)\nexcept:\n pass", "t=int(input())\nfor i in range(t):\n n,m=map(int,input().split())\n l=[]\n for j in range(n):\n  l.append(list(input()))\n ans=[]\n c=0\n for u in range(m):\n  for v in range(n):\n   if l[v][u]=='1':\n    c=c+1\n  ans.append(c)\n  c=0\n count=0\n for j in range(len(ans)):\n  count=count+(((ans[j]-1)*(ans[j]))//2)\n print(count)", "def fact(i):\n a = i\n while a > 1:\n  i += (a-1)\n  a = a - 1\n return i\n\nfor _ in range(int(input())):\n n, m = list(map(int, input().split()))\n matrix = [0] * m\n for _ in range(n):\n  s = input()\n  for i in range(len(s)):\n   if s[i] == '1':\n    matrix[i] += 1\n coll = [fact(matrix[i]-1) for i in range(m) if matrix[i] > 1]\n print((sum(coll) if coll else 0))# cook your dish here\n", "def fact(i):\n a = i\n while a > 1:\n  i += (a-1)\n  a = a - 1\n return i\n\nfor _ in range(int(input())):\n n, m = list(map(int, input().split()))\n matrix = [0] * m\n for _ in range(n):\n  s = input()\n  for i in range(len(s)):\n   if s[i] == '1':\n    matrix[i] += 1\n coll = [fact(matrix[i]-1) for i in range(m) if matrix[i] > 1]\n print((sum(coll) if coll else 0))# cook your dish here\n", "t=int(input())\nfor i in range(t):\n n,m=list(map(int,input().split()))\n l=[]\n for j in range(n):\n  l.append(list(input()))\n ans=[]\n c=0\n for u in range(m):\n  for v in range(n):\n   if l[v][u]=='1':\n    c=c+1\n  ans.append(c)\n  #print(ans)\n  c=0\n count=0\n for j in range(len(ans)):\n  count=count+(((ans[j]-1)*(ans[j]))//2)\n print(count)\n", "t=int(input())\nfor i in range(t):\n n,m=list(map(int,input().split()))\n l=[]\n for j in range(n):\n  l.append(list(input()))\n ans=[]\n c=0\n for u in range(m):\n  for v in range(n):\n   if l[v][u]=='1':\n    c=c+1\n  ans.append(c)\n  c=0\n count=0\n for j in range(len(ans)):\n  count=count+(((ans[j]-1)*(ans[j]))//2)\n print(count)\n", "for _ in range(int(input())):\n n,m=map(int,input().split())\n matrix = []\n for i in range(n):\n  row = []\n  s = input()\n  for ele in s:\n   row.append(ele)\n  matrix.append(row)\n ans = 0\n for i in range(m):\n  cnt = 0\n  for j in range(n):\n   if(matrix[j][i]=='1'):\n    cnt+=1\n  ans +=(cnt*(cnt-1)//2)\n print(ans)"]