["# cook your dish here\nfrom operator import itemgetter\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    start=[]\n    end=[]\n    for i in range(n):\n        first, last = map (int, input().split())\n        start.append((first, i))\n        end.append((last, i))\n    score=[0]*n \n    start.sort(key=itemgetter(0))\n    end.sort(key=itemgetter(0), reverse=True)\n    for i in range(n-1):\n        score[start[i][1]]+=n-i-1\n        score[end[i][1]]+=n-i-1\n    print(' '.join([str(i) for i in score]))", "# cook your dish here\nfrom operator import itemgetter\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    start=[]\n    end=[]\n    for i in range(n):\n        first, last = map (int, input().split())\n        start.append((first, i))\n        end.append((last, i))\n    score=[0]*n \n    start.sort(key=itemgetter(0))\n    end.sort(key=itemgetter(0), reverse=True)\n    for i in range(n-1):\n        score[start[i][1]]+=n-i-1\n        score[end[i][1]]+=n-i-1\n    print(' '.join([str(i) for i in score]))", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[0 for i in range(len(a))]\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            if a[i][0]<a[k][0]:\n                if a[i][1]>a[k][1]:\n                    scorelist[i]+=2\n                else:\n                    scorelist[i]+=1\n                    scorelist[k]+=1\n            else:\n                if a[i][1]<a[k][1]:\n                    scorelist[k]+=2\n                else:\n                    scorelist[i]+=1\n                    scorelist[k]+=1\n    print(*scorelist, sep = \" \") \n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)\n        ", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[]\n    for i in range(len(a)):\n        scorelist.append(0)\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            if a[i][0]<a[k][0]:\n                if a[i][1]>a[k][1]:\n                    scorelist[i]+=2\n                else:\n                    scorelist[i]+=1\n                    scorelist[k]+=1\n            else:\n                if a[i][1]<a[k][1]:\n                    scorelist[k]+=2\n                else:\n                    scorelist[i]+=1\n                    scorelist[k]+=1\n    print(*scorelist, sep = \" \") \n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)\n        ", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[]\n    for i in range(len(a)):\n        scorelist.append(0)\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            x=scorelist[i]\n            y=scorelist[k]\n            if a[i][0]<a[k][0]:\n                if a[i][1]>a[k][1]:\n                    scorelist[i]=x+2\n                else:\n                    scorelist[i]=x+1\n                    scorelist[k]=y+1\n            else:\n                if a[i][1]<a[k][1]:\n                    scorelist[k]=y+2\n                else:\n                    scorelist[i]=x+1\n                    scorelist[k]=y+1\n    print(*scorelist, sep = \" \") \n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)\n        ", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[]\n    for i in range(len(a)):\n        scorelist.append(0)\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            x=scorelist[i]\n            y=scorelist[k]\n            if a[i][0]<a[k][0]:\n                if a[i][1]>a[k][1]:\n                    scorelist[i]=x+2\n                else:\n                    scorelist[i]=x+1\n                    scorelist[k]=y+1\n            elif a[i][0]>a[k][0]:\n                if a[i][1]<a[k][1]:\n                    scorelist[k]=y+2\n                else:\n                    scorelist[i]=x+1\n                    scorelist[k]=y+1\n    print(*scorelist, sep = \" \") \n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)\n        ", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[]\n    for i in range(len(a)):\n        scorelist.append(0)\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            x=scorelist[i]\n            y=scorelist[k]\n            if a[i][0]<a[k][0]and a[i][1]>a[k][1]:\n                scorelist[i]=x+2\n            elif a[i][0]>a[k][0]and a[i][1]<a[k][1]:\n                scorelist[k]=y+2\n            else:\n                scorelist[i]=x+1\n                scorelist[k]=y+1\n    print(*scorelist, sep = \" \") \n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)", "# cook your dish here\ndef tourneyscore(a):\n    scorelist=[]\n    for i in range(len(a)):\n        scorelist.append(0)\n    for i in range(len(a)):\n        for k in range(i+1,len(a)):\n            x=scorelist[i]\n            y=scorelist[k]\n            if a[i][0]<a[k][0]and a[i][1]>a[k][1]:\n                scorelist[i]=x+2\n            elif a[i][0]>a[k][0]and a[i][1]<a[k][1]:\n                scorelist[k]=y+2\n            else:\n                scorelist[i]=x+1\n                scorelist[k]=y+1\n    for i in range(len(scorelist)):\n        print(scorelist[i],end=' ')\n    print()\n\nfor T in range(int(input())):\n    singerlist=[]\n    for N in range(int(input())):\n        L,U=input().split()\n        L,U=int(L),int(U)\n        singerlist.append([L,U])\n    tourneyscore(singerlist)", "# cook your dish here\ntestcase = int(input(''))\n\nfor iterate in range(testcase):\n    singers = int(input())\n    lower_limit = []\n    upper_limit = []\n    for i in range(singers):\n        lower_limit_value, upper_limit_value = map(int, input().split())\n        lower_limit.append([lower_limit_value, i])\n        upper_limit.append([upper_limit_value, i])\n\n    lower_limit.sort(key = lambda x:x[0], reverse = True)\n    upper_limit.sort(key = lambda x:x[0])\n    score = [0] * singers\n    for i in range(singers):\n        score[upper_limit[i][1]] += i\n        score[lower_limit[i][1]] += i\n    print(*score)", "testcase = int(input(''))\n\nfor iterate in range(testcase):\n    singers = int(input())\n    lower_limit = []\n    upper_limit = []\n    for i in range(singers):\n        lower_limit_value, upper_limit_value = map(int, input().split())\n        lower_limit.append([lower_limit_value, i])\n        upper_limit.append([upper_limit_value, i])\n\n    lower_limit.sort(key = lambda x:x[0], reverse = True)\n    upper_limit.sort(key = lambda x:x[0])\n    score = [0] * singers\n    for i in range(singers):\n        score[upper_limit[i][1]] += i\n        score[lower_limit[i][1]] += i\n    print(*score)", "for _ in range(int(input())):\r\n    N = int(input())\r\n    start = []\r\n    end = []\r\n    for i in range(N):\r\n        a,b = list(map(int, input().split()))\r\n        start.append([a,i])\r\n        end.append([b,i])\r\n    start.sort()\r\n    end.sort()\r\n    scores = [0]*N\r\n    for i in range(N):\r\n        p = start[i]\r\n        q = end[i]\r\n        scores[p[1]] += (N - i - 1)\r\n        scores[q[1]] += i\r\n    print(*scores)\r\n", "# less goooooooo\ntry:\n    t = int(input())\nexcept:\n    return\nfor q in range(t):\n\tn = int(input())\n\tscore = [0] * n\n\tl = []\n\tu = []\n\tfor q in range(n):\n\t\tx,y = map(int, input().split())\n\t\tl.append([x,q])\n\t\tu.append([y,q])\n\n\tl.sort(key = lambda x:x[0], reverse = True)\n\tu.sort(key = lambda x:x[0])\n\tfor i in range(n):\n\t\tscore[u[i][1]] += i\n\t\tscore[l[i][1]] += i\n\n\tprint(*score)", "# less goooooooo\ntry:\n    t = int(input())\nexcept:\n    return\nfor q in range(t):\n    l = []\n    n = int(input())\n    score = [0] * n\n    for w in range(n):\n        li = list(map(int , input().split()))\n        l.append(li)\n    for x in range(n):\n        for y in range(x+1,n):\n            if l[x][0] < l[y][0] and l[x][1] > l[y][1]:\n                score[x] += 2\n            elif l[y][0] < l[x][0] and l[y][1] > l[x][1]:\n                score[y] += 2\n            else:\n                score[x] += 1 \n                score[y] += 1 \n    score = \"\".join(str(e) + \" \" for e in score)\n    print(score)", "from itertools import combinations\nT = int(input())\n\nfor case in range(T):\n    n = int(input())\n    scores = [0]*n\n    pitch = []\n    for i in range(n):\n        l, u = map(int, input().split())\n        pitch.append((l,u))\n    \n    for (i,j) in combinations(list(range(0,n)), 2):\n        if pitch[i][0] < pitch[j][0] and pitch[i][1] > pitch[j][1]:\n            scores[i] += 2\n        elif pitch[i][0] > pitch[j][0] and pitch[i][1] < pitch[j][1]:\n            scores[j] += 2\n        else:\n            scores[i] += 1\n            scores[j] += 1\n    \n    \n    \n    '''\n    for i in range(n):\n        for j in range(i+1,n):\n            if pitch[i][0] < pitch[j][0] and pitch[i][1] > pitch[j][1]:\n                scores[i] += 2\n            elif pitch[i][0] > pitch[j][0] and pitch[i][1] < pitch[j][1]:\n                scores[j] += 2\n            else:\n                scores[i] += 1\n                scores[j] += 1\n                \n    '''         \n    print(' '.join(str(a) for a in scores))", "T = int(input())\n\nfor case in range(T):\n    n = int(input())\n    scores = [0]*n\n    pitch = []\n    for i in range(n):\n        l, u = map(int, input().split())\n        pitch.append((l,u))\n    \n    for i in range(n):\n        for j in range(i+1,n):\n            if pitch[i][0] < pitch[j][0] and pitch[i][1] > pitch[j][1]:\n                scores[i] += 2\n            elif pitch[i][0] > pitch[j][0] and pitch[i][1] < pitch[j][1]:\n                scores[j] += 2\n            else:\n                scores[i] += 1\n                scores[j] += 1\n    print(' '.join(str(a) for a in scores))", "def winner(x,y):\r\n    if x[0]<y[0]:\r\n        if x[1]>=y[1]:\r\n            return 1\r\n        else:\r\n            return 0\r\n    elif x[1]>y[1]:\r\n        if x[0]<=y[0]:\r\n            return 1\r\n        else:\r\n            return 0\r\n    elif x[1]<y[1]:\r\n        if x[0]>=y[0]:\r\n            return 2\r\n        else:\r\n            return 0\r\n    elif x[0]>y[0]:\r\n        if x[1]<=y[1]:\r\n            return 2\r\n        else:\r\n            return 0\r\n    else:\r\n        return 0\r\n\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    part=[]\r\n    for _ in range(n):\r\n        part.append(tuple(map(int, input().split())))\r\n    score=[0]*n\r\n    for i in range(n):\r\n        x=part[i]\r\n        if i<n-1:\r\n            new=part[i+1:]\r\n            for y in range(len(new)):\r\n                if winner(x,new[y])==0:\r\n                    score[i]+=1\r\n                    score[i+y+1]+=1\r\n                elif winner(x,new[y])==1:\r\n                    score[i]+=2\r\n                else:\r\n                    score[i+y+1]+=2\r\n    print(*score)", "def winner(x,y):\r\n    if x[0]<y[0]:\r\n        if x[1]>=y[1]:\r\n            return 1\r\n        else:\r\n            return 0\r\n    elif x[1]>y[1]:\r\n        if x[0]<=y[0]:\r\n            return 1\r\n        else:\r\n            return 0\r\n    elif x[1]<y[1]:\r\n        if x[0]>=y[0]:\r\n            return 2\r\n        else:\r\n            return 0\r\n    elif x[0]>y[0]:\r\n        if x[1]<=y[1]:\r\n            return 2\r\n        else:\r\n            return 0\r\n    else:\r\n        return 0\r\n\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    part=[]\r\n    for _ in range(n):\r\n        part.append(tuple(map(int, input().split())))\r\n    score=[0]*n\r\n    for i in range(n):\r\n        x=part[i]\r\n        if i<n:\r\n            new=part[i+1:]\r\n            for y in range(len(new)):\r\n                if winner(x,new[y])==0:\r\n                    score[i]+=1\r\n                    score[i+y+1]+=1\r\n                elif winner(x,new[y])==1:\r\n                    score[i]+=2\r\n                else:\r\n                    score[i+y+1]+=2\r\n    print(*score)", "# cook your dish here\ntry:\n    t = int(input())\nexcept:\n    return\nfor q in range(t):\n    n = int(input())\n    ans = [0] * n\n    l = []\n    for w in range(n):\n        lu = list(map(int , input().split()))\n        l.append(lu)\n    for i in range(n):\n        x = l[i]\n        for j in range(i+1,n):\n            y = l[j]\n            if x[0] < y[0] and x[1] > y[1]:\n                ans[i] = ans[i] + 2\n            elif y[0] < x[0] and y[1] > x[1]:\n                ans[j] = ans[j] + 2\n            else:\n                ans[i] = ans[i] + 1 \n                ans[j] = ans[j] + 1 \n    s = ''.join((str(e) + \" \") for e in ans)\n    print(s)\n", "# cook your dish here\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    lower =[]\n    upper =[]\n    points =[]\n    for j in range(N):\n        inputs = list(map(int,input().split()))\n        lower.append(inputs[0])\n        upper.append(inputs[1])\n        points.append(0)\n    for p in range(N):\n        for m in range(p+1,N):\n            if (lower[p]<lower[m] and upper[p]>=upper[m]) or (lower[p]<=lower[m] and upper[p]>upper[m]):\n                points[p] += 2\n            elif (lower[p]>lower[m] and upper[p]<=upper[m]) or (lower[p]>=lower[m] and upper[p]<upper[m]):\n                points[m] += 2\n            else:\n                points[p] +=1\n                points[m] +=1\n    for n in range(N):\n        print(points[n],end=\" \")\n    print()", "# cook your dish here\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    lower ={}\n    upper ={}\n    points ={}\n    for j in range(N):\n        lower[j],upper[j] = map(int,input().split()) \n        points[j] = 0\n    for p in range(N):\n        for m in range(p+1,N):\n            if (lower[p]<lower[m] and upper[p]>=upper[m]) or (lower[p]<=lower[m] and upper[p]>upper[m]):\n                points[p] += 2\n            elif (lower[p]>lower[m] and upper[p]<=upper[m]) or (lower[p]>=lower[m] and upper[p]<upper[m]):\n                points[m] += 2\n            else:\n                points[p] +=1\n                points[m] +=1\n    for n in range(N):\n        print(points[n],end=\" \")\n    print()", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\n#dt = {k:v for k,v in sorted(x.items(), key=lambda i: i[1])}\nipnl = lambda n: [int(input()) for _ in range(n)]\ninp = lambda :int(input())\nip = lambda :[int(w) for w in input().split()]\n\nfor _ in range(inp()):\n    n = inp()\n    sco = [0]*n\n    x,y = [],[]\n    for i in range(n):\n        a,b = ip()\n        x.append([a,i])\n        y.append([b,i])\n    x.sort(reverse = True,key = lambda i: i[0])\n    y.sort(key = lambda i: i[0])\n    for i in range(n):\n        sco[x[i][1]] += i\n        sco[y[i][1]] += i\n    print(*sco)\n\n\n\n", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\n#dt = {k:v for k,v in sorted(x.items(), key=lambda i: i[1])}\nipnl = lambda n: [int(input()) for _ in range(n)]\ninp = lambda :int(input())\nip = lambda :[int(w) for w in input().split()]\n\nfor _ in range(inp()):\n    n = inp()\n    tot = [0]*(n+1)\n    sco = [0]*n\n    x = [ip()+[i] for i in range(n)]\n    x.sort(key = lambda i: i[0])\n    for i in range(n-1):\n        l,r,i1 = x[i][0],x[i][1],x[i][2]\n        for j in reversed(list(range(i+1,n))):\n            nl,nr,j1 = x[j][0],x[j][1],x[j][2]\n            if nl > l:\n                if nr <= r:\n                    sco[i1] += 2\n                else:\n                    sco[i1] += 1\n                    sco[j1] += 1\n            elif nl == l:\n                if nr > r:\n                    sco[j1] += 2\n                elif nr == r:\n                    sco[i1] += 1\n                    sco[j1] += 1\n                else:\n                    break\n        if j > i+1:\n            sco[i1] += 2*(j-i)\n    print(*sco)\n\n\n\n", "t = int(input())\r\n\r\nfor _ in range(t):\r\n\tn = int(input())\r\n\tlower = []\r\n\tupper = []\r\n\r\n\tfor __ in range(n):\r\n\t\tx,y = map(int, input().split())\r\n\t\tlower.append([x,__])\r\n\t\tupper.append([y,__])\r\n\r\n\tlower.sort(key = lambda x:x[0], reverse = True)\r\n\tupper.sort(key = lambda x:x[0])\r\n\r\n\t#print(lower, upper)\r\n\r\n\tdell = [0]*n\r\n\r\n\tfor i in range(n):\r\n\t\tdell[upper[i][1]] += i\r\n\t\tdell[lower[i][1]] += i\r\n\r\n\tprint(*dell)", "t = int(input())\r\n\r\nfor _ in range(t):\r\n\tn = int(input())\r\n\tdell = []\r\n\tfor __ in range(n):\r\n\t\tdell.append(list(map(int, input().split())))\r\n\tl = [[0]*n for i in range(n)]\r\n\r\n\tfor i in range(n):\r\n\t\tfor j in range(i+1,n):\r\n\t\t\ts1 = dell[i]\r\n\t\t\ts2 = dell[j]\r\n\r\n\t\t\t# check if s1 ka range ke andar s2\r\n\t\t\tif (s1[0]<=s2[0] and s1[1]>s2[1]) or (s1[0]<s2[0] and s1[1]>=s2[1]):\r\n\t\t\t\t# s1 gains\r\n\t\t\t\tl[i][j] += 2\r\n\r\n\t\t\t# check if s2 ka range is andar s1\r\n\t\t\telif (s2[0]<=s1[0] and s2[1]>s1[1]) or (s2[0]<s1[0] and s2[1]>=s1[1]):\r\n\t\t\t\t#s2 gains\r\n\t\t\t\tl[j][i] += 2\r\n\t\t\t\r\n\t\t\t# tied\r\n\t\t\telse:\r\n\t\t\t\t# both gain\r\n\t\t\t\tl[i][j] += 1\r\n\t\t\t\tl[j][i] += 1\r\n\r\n\tfor ele in l:\r\n\t\tprint(sum(ele),end = \" \")\r\n\tprint()"]