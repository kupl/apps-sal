["t = int(input())\n\nfor case in range(t):\n    a, b = list(map(int, input().split()))\n    s = input()\n\n    z = 10000\n    total = 0\n    act = False\n\n    for i in range(len(s)):\n        cur = s[i]\n        if cur == '0':\n            z += 1\n            act = False\n        else:\n            if not act:\n                act = True\n                total += min(a, b * z)\n                z = 0\n\n    print(total)\n", "t=int(input())\nfor you in range(t):\n    l=input().split()\n    a=int(l[0])\n    b=int(l[1])\n    s=input()\n    n=len(s)\n    l=[]\n    start=0\n    end=0\n    done=0\n    for i in range(n):\n        if(done):\n            if(s[i]=='1'):\n                end+=1\n            else:\n                l.append((start,end))\n                done=0\n        else:\n            if(s[i]=='1'):\n                done=1\n                start=i\n                end=i\n    if(done):\n        l.append((start,end))\n    z=a*len(l)\n    lo=[]\n    for i in range(len(l)-1):\n        lo.append(l[i+1][0]-l[i][1]-1)\n    for i in lo:\n        if(i*b<a):\n            z-=a\n            z+=(i*b)\n    print(z)\n", "for i in range(int(input())):\n    a,b=list(map(int,input().split()))\n    s=input()\n    j=0\n    n=len(s)\n    l=[]\n    while j<n:\n        if s[j]=='1':\n            x=j\n            while s[j]=='1':\n                j+=1\n                if j==n:\n                    break\n            y=j-1\n            l.append([x,y])\n        else:\n            j+=1\n    ans=0\n    j=0\n    while j<len(l):\n        if j==0:\n            ans+=a\n        else:\n            ans+=min(a,b*(l[j][0]-l[j-1][1]-1))\n        j+=1\n    print(ans)\n                \n    \n                \n            \n    \n", "for _ in range(int(input())):\n\ta,b = list(map(int, input().split()))\n\ts = input()\n\tcost = 0\n\trowcost = a\n\tamchain = False\n\tfor c in s:\n\t\tif c == '1':\n\t\t\tif not amchain and rowcost:\n\t\t\t\tamchain = True\n\t\t\t\tcost += min(rowcost, a)\n\t\telse:\n\t\t\tif amchain:\n\t\t\t\tamchain = False\n\t\t\t\trowcost = b\n\t\t\telse:\n\t\t\t\trowcost += b\n\tprint(cost)\n\t\n", "for t in range(int(input())):\n    a,b = list(map(int, input().split()))\n    m = input()\n    x=[]\n    i=0\n    while i<len(m) and m[i]=='0':\n        i+=1\n    cs=0\n\n    while i< len(m):\n        if m[i]=='0':\n            cs+=1\n        if m[i]=='1' and cs!=0:\n            x+=[cs]\n            cs=0\n        i+=1\n    cp = (len(x)+1)*a\n    for i in x:\n        if i*b<a:\n            cp-=a\n            cp+=i*b\n    if m=='0'*len(m):\n        print(0)\n    else:\n        print(cp)\n", "\n\nfor _ in range(int(input())):\n    \n    a, b = map(int, input().split())\n    \n    x = 0\n    y = 10 ** 10\n    \n    for i in input():\n        \n        if i == '0':\n            \n            x, y = min(x, y), min(y + b, x + b + a)\n            \n        else:\n            \n            x, y = 10 ** 10, min(y, x + a)\n            \n            \n    print(min(x, y))", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\ta,b = MI()\n\ts = list(SI())\n\tx = []\n\ty = []\n\tcount = 1\n\tfor i in range(1,len(s)):\n\t\tif s[i] == s[i-1]:\n\t\t\tcount+=1\n\t\telse:\n\t\t\tif s[i-1] == \"0\":\n\t\t\t\ty.append(0)\n\t\t\telse:\n\t\t\t\ty.append(1)\n\t\t\tx.append(count)\n\t\t\tcount = 1\n\tif len(s)!=0 and s[-1] == \"1\":\n\t\ty.append(1)\n\t\tx.append(count)\n\tif len(y)!=0 and y[0] == 0:\n\t\ty.pop(0)\n\t\tx.pop(0)\n\ty1 = []\n\tans = 0\n\tfor i in range(len(y)):\n\t\tif y[i] == 0:\n\t\t\ty1.append(x[i])\n\t\telse:\n\t\t\tans+=a\n\tfor i in y1:\n\t\tif i*b<a:\n\t\t\tans-=a\n\t\t\tans+=i*b\n\tprint(ans)\n", "import sys\nfor _ in range(int(sys.stdin.readline())):\n\ta=list(map(int,sys.stdin.readline().strip().split(\" \")))\n\tb=sys.stdin.readline().strip()\n\tn=0\n\tinq=False\n\ts=0\n\tif b.count(\"1\")!=0:\n\t\tfor i in b[b.index(\"1\"):]:\n\t\t\tif i==\"1\":\n\t\t\t\tif not inq:\n\t\t\t\t\tinq=True\n\t\t\t\t\tif n!=0:\n\n\t\t\t\t\t\ts+=min(a[0],n*a[1])\n\t\t\t\t\telse:\n\t\t\t\t\t\ts+=a[0]\n\t\t\t\t\tn=0\n\t\t\telse:\n\t\t\t\tinq=False\n\t\t\t\tn+=1\n\tprint(s)\n", "import sys\ninput=sys.stdin.readline\n\nt=int(input())\nfor _ in range(t):\n    x,y=list(map(int,input().split()))\n    s=list(input())\n    if \"1\" not in s:\n        print(0)\n    else:\n        c=s.index(\"1\")\n        d=len(s)-s[::-1].index(\"1\")\n        s=s[c:d]\n        b=[]\n        c=0\n        for i in range(len(s)):\n            if s[i]==\"0\":\n                c+=1\n            else:\n                if c!=0:\n                    b.append(c)\n                c=0\n        s=x\n        for i in range(len(b)):\n            if b[i]*y>x:\n                s+=x\n            else:\n                s+=b[i]*y\n        print(s)", "import math\nimport sys\n\n\ndef chek(m, b, c, li):\n    for i in range(li):\n        if m[i] + b[i] > c:\n            return False\n    return True\n\n\n# 113759\ninput = lambda: sys.stdin.readline().rstrip()\nf = int(input())\nfor _ in range(f):\n    a, b = list(map(int, input().split()))\n    s = input()\n    mas = []\n    c = 1\n    k = len(s)\n    cur = 1\n    while c != k:\n        if s[c] == s[c - 1]:\n            cur += 1\n        else:\n            if len(mas) != 0:\n                mas.append(cur)\n                cur = 1\n            else:\n                if s[c] == \"0\":\n                    mas.append(cur)\n                    cur = 1\n                else:\n                    cur = 1\n        c += 1\n    if s[c - 1] == \"1\":\n        mas.append(cur)\n    ans = 0\n    for i in range(len(mas)):\n        if i % 2 == 0:\n            ans += a\n        else:\n            if a > b * mas[i]:\n                ans += b * mas[i]\n                ans -= a\n    print(ans)\n", "def f():\n    a, b = map(int, input().split())\n    s = input()\n    ToF = False\n    c = 0\n    ans = 0\n    for item in s:\n        if ToF:\n            if item == \"0\":\n                c += 1\n            else:\n                ans += min(c * b, a)\n                c = 0\n        if item == \"1\":\n            ToF = True\n    print(ans + a * ToF)\n\n\nt = int(input())\nfor i in range(t):\n    f()", "t=int(input())\nfor _ in range(t):\n    a,b=list(map(int,input().split()))\n    m=input()\n    flag=False\n    l=[]\n    prev=0\n    flag=False\n    for i in range(len(m)):\n        if flag:\n            if m[i]=='0':\n                l.append((prev,i-1))\n                flag=False\n            else:\n                continue \n        else:\n            if m[i]=='0':\n                continue\n            else:\n                flag=True \n                prev=i \n    if flag:\n        l.append((prev,len(m)-1))\n    # print(l)\n    if(len(l)==1):\n        print(a)\n    elif (len(l)==0):\n        print(0)\n    else:\n        ans=a\n        for i in range(1,len(l)):\n            if (l[i][0]-l[i-1][1]-1)*b<=a:\n                ans+=(l[i][0]-l[i-1][1]-1)*b\n            else:\n                ans+=a \n        print(ans)\n        \n        \n        \n", "T = int(input())\nfor t in range(T):\n    a, b = [int(x) for x in input().split()]\n    mines = input()\n    price = 0\n    last = \"\"\n    not_mines = []\n    there_was_mines = False\n    not_mine = 0\n    for c in mines:\n        if c == '1':\n            if last != c:\n                price += a\n                if not_mine > 0:\n                    if there_was_mines:\n                        not_mines.append(not_mine)\n                    not_mine = 0\n            there_was_mines = True\n        else:\n            not_mine += 1\n        last = c\n    # print(not_mines)\n    for m in not_mines:\n        if m*b < a:\n            price = price - a + m*b\n        \n                \n                \n\n    print(price)", "gans = []\nfor _ in range(int(input())):\n    a, b = map(int, input().split())\n    w = list(map(int, list(input())))\n    u = []\n    k = 1\n    for i in range(1, len(w)):\n        if w[i] == w[i - 1]:\n            k += 1\n        else:\n            u.append([w[i - 1], k])\n            k = 1\n    u.append([w[-1], k])\n    dp = [0] * len(u)\n    if u[0][0] == 1:\n        dp[0] = a\n    for i in range(1, len(u)):\n        if u[i][0] == 0:\n            dp[i] = dp[i - 1]\n        else:\n            if i == 1:\n                dp[i] = dp[i - 1] + a\n            else:\n                dp[i] = min(dp[i - 1] + a, dp[i - 1] + b * u[i - 1][1])\n    gans.append(dp[-1])\nprint(*gans, sep='\\n')\n            \n", "mod = 10**9 + 7\ndef solve():\n    a, b = map(int, input().split())\n    s = input()\n    v = []\n    tmp = 0\n    ok = False\n    for i in range(len(s)):\n        if s[i] == '1':\n            if tmp > 0:\n                v.append(tmp)\n            tmp = 0\n            ok = True\n        elif ok:\n            tmp += 1\n    v.sort()\n    ans = a * (len(v) + 1)\n    if not ok:\n        ans = 0\n    for i in range(len(v)):\n        if ans >= ans - a + b * v[i]:\n            ans = ans - a + b * v[i]\n        else:\n            break\n    print(ans)\nt = 1\nt = int(input())\nwhile t > 0:\n    solve()\n    t -= 1", "t = int(input())\nfor _ in range(t):\n\ta, b = list(map(int, input().split()))\n\ts = input()\n\tn = len(s)\n\n\tind1 = 0\n\tind2 = n-1\n\n\twhile ind1 != n and s[ind1] == '0':\n\t\tind1 += 1\n\n\twhile ind2 != -1 and s[ind2] == '0':\n\t\tind2 -= 1\n\n\tif ind1 == n:\n\t\tprint(0)\n\t\tcontinue\n\n\t# print(ind1, ind2)\n\n\n\tarr = []\n\tcount = 0\n\tfor i in range(ind1, ind2+1):\n\t\tif s[i] == '0':\n\t\t\tcount += 1\n\t\telse:\n\t\t\tif count != 0:\n\t\t\t\tarr += [count]\n\t\t\tcount = 0\n\n\tif count != 0:\n\t\tarr += [count]\n\n\tans = a*(len(arr)+1)\n\n\t# print(arr)\n\tarr.sort()\n\n\ttot = 0\n\tfor i in range(len(arr)):\n\t\ttot += arr[i]\n\t\tans = min(ans, b*tot + a*(len(arr)-i))\n\n\tprint(ans)\n", "import sys,math\n# import re\n# from heapq import *\n# from collections import defaultdict as dd\n# from collections import Counter as cc\n# sys.setrecursionlimit(10**6)#thsis is must\nmod = 10**9+7; md = 998244353\ninput = lambda: sys.stdin.readline().strip()\ninp = lambda: list(map(int,input().split()))\n#______________________________________________________\nfor _ in range(int(input())):\n\ta,b = inp()\n\ts = str(input())\n\tans = []\n\tc = 0\n\tfor i in s:\n\t\tif i==\"1\":\n\t\t\tc+=1\n\t\telse:\n\t\t\tif c==0:\n\t\t\t\tcontinue\n\t\t\tans.append(c)\n\t\t\tc=0\n\tif c>0:ans.append(c)\n\tflag = False\n\tc =0\n\tres = []\n\tfor i in s:\n\t\tif i==\"1\":\n\t\t\tflag = True\n\t\tif flag==True:\n\t\t\tif i==\"0\":\n\t\t\t\tc+=1\n\t\t\telse:\n\t\t\t\tif c==0:\n\t\t\t\t\tcontinue\n\t\t\t\tres.append(c)\n\t\t\t\tc = 0\n\t# print(res)\n\t# print(ans)\n\tfin = 0\n\tif len(ans)>0:\n\t\tfin+=a\n\tif len(ans)>1:\n\t\tfor i in range(len(res)):\n\t\t\tif res[i]*b>a:\n\t\t\t\tfin+=a\n\t\t\telse:\n\t\t\t\tfin+=res[i]*b\n\tprint(fin)\n\n", "for _ in range (int(input())):\n    a,b=map(int,input().split())\n    s=input()\n    n=len(s)\n    j=0\n    while j<n and s[j]=='0':\n        j+=1\n    c=0\n    r=a\n    if j==n:\n        r=0\n    damp=0\n    for i in range(j,n):\n        if s[i]=='1':\n            if damp>0:\n                r+=min(a,damp*b)\n            damp=0\n        else:\n            damp+=1\n        #print(damp,r)\n    print(r)", "def read_generator():\n    while True:\n        tokens = input().split(' ')\n        for t in tokens:\n            yield t\n\nreader = read_generator()\n\ndef readword():\n    return next(reader)\n\ndef readint():\n    return int(next(reader))\n\ndef readfloat():\n    return float(next(reader))\n\ndef readline():\n    return input()\n\ndef solve(a, b, m):\n    o = []\n    new = True\n    i = 0\n    for c in m:\n        if c == '1':\n            if new:\n                o.append([i, i])\n                new = False\n            else:\n                o[len(o) - 1][1] = i\n        else:\n            new = True\n        i += 1\n\n    res = len(o) * a\n\n    for i in range(1, len(o)):\n        cur = o[i]\n        prev = o[i - 1]\n        if (cur[0] - prev[1] - 1) * b < a:\n            res -= a\n            res += (cur[0] - prev[1] - 1) * b\n\n    return res\n\n\ntests = readint()\n\nfor t in range(tests):\n    (a, b) = readint(), readint()\n    m = readline()\n    print(solve(a, b, m))", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\n\nT=int(input())\nfor _ in range(0,T):\n    a,b=list(map(int,input().split()))\n    s=input()\n    ptr1=len(s)\n    ptr2=0\n    for i in range(0,len(s)):\n        if(s[i]=='1' and ptr1==len(s)):\n            ptr1=i\n        if(s[i]=='1'):\n            ptr2=i+1\n\n    if(ptr1==len(s)):\n        print(0)\n    else:\n        L1=[]\n        L0=[]\n        c=1\n        for i in range(ptr1+1,ptr2):\n            if(s[i]==s[i-1]):\n                c+=1\n            else:\n                if(s[i-1]=='0'):\n                    L0.append(c)\n                    c=1\n                else:\n                    L1.append(c)\n                    c=1\n        L1.append(c)\n\n        if(len(L1)==1):\n            print(a)\n        else:\n            ans=a\n            for i in range(0,len(L1)-1):\n                if((b*L0[i])<=a):\n                    ans+=(b*L0[i])\n                else:\n                    ans+=a\n            print(ans)\n                \n", "t = int(input())\nfor case in range(t):\n    a, b = [int(x) for x in input().split(' ')]\n    s = input()\n    n = len(s)\n    for j in range(2):\n        for i in range(len(s)):\n            if s[i] != '0':\n                break\n        s = s[i:]\n        s = s[::-1]\n    if s == '0':\n        s = ''\n    y = [u for u in s.split('0') if u]\n    c = len(y) * a\n    x = [u for u in s.split('1') if u]\n    for z in x:\n        if len(z) * b < a:\n            c -= a\n            c += len(z) * b\n    print(c)\n\n", "for _ in range(int(input())):\n    a,b = list(map(int,input().split()))\n    arr = list(map(int,list(input())))+[0]\n    n = len(arr)\n    now = 0\n    lastEnds = 0\n    fl = False\n    lenghts = []\n    dists = []\n    for i in range(n):\n        if fl and not arr[i]:\n            if len(lenghts):\n                dists.append(i-lastEnds-now)\n            lenghts.append(now)\n            fl = False\n            now = 0\n            lastEnds = i\n        elif fl and arr[i]:\n            now+=1\n        elif not fl and arr[i]:\n            fl = True\n            now = 1\n\n    price = a\n    if len(lenghts) == 0:\n        price = 0\n\n    for i in range(len(dists)):\n        if dists[i]*b<a:\n            price+=dists[i]*b\n        else:\n            price+=a\n\n    print(price)\n"]