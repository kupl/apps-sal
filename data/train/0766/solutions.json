["import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: map(int,input().split())\r\nmif    =lambda: map(float,input().split())\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\nfor _ in range(ii()):\r\n    n=ii()\r\n    arr=lii()\r\n    arr.sort()\r\n    ma=arr[-1]*arr[-2]\r\n    mi=arr[0]*arr[1]\r\n    print(ma,mi)", "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(a[-1]*a[-2],a[0]*a[1])", "# cook your dish here\ntestcases = int(input())\nfor x in range(testcases):\n    size = int(input())\n    li = list(map(int,input().split()))\n    highmax = max(li)\n    lowmin = min(li)\n    new_list = set(li)\n    new_list.remove(max(new_list))\n    new_list.remove(min(new_list))\n    secondhighmax = max(new_list)\n    secondmin = min(new_list)\n    print(highmax*secondhighmax, lowmin*secondmin)", "# cook your dish here\nn=int(input())\nfor _ in range(n):\n    k=int(input())\n    a=[int(i) for i in input().split()]\n    a.sort()\n    print(a[k-1]*a[k-2],a[0]*a[1])", "# cook your dish here\nt = int(input())\nfor i in range(0, t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    l.sort()\n    p = set(l)\n    pp = list(p)\n    maxx = pp[n-1] * pp[n-2]\n    minn = pp[0] * pp[1]\n    print(maxx, minn)", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    mini,maxi=l[0]*l[1],l[-1]*l[-2]\n    print(maxi,mini)", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    mini,maxi=l[0]*l[1],l[-1]*l[-2]\n    print(maxi,mini)", "# cook your dish here\nt= int(input())\nfor _ in range(t):\n    a=int(input())\n    b=list(map(int,input().split()))\n    b.sort()\n    print(b[-1]*b[-2],b[0]*b[1])\n", "import itertools\r\nt=int(input())\r\nfor i in range(t):\r\n    n=int(input())\r\n    a=[int(a) for a in input().split()]\r\n    a.sort()\r\n    print(a[len(a)-1]*a[len(a)-2],a[0]*a[1])", "# cook your dish here\nfor i in range(int(input())):\n\n    N = int(input())\n    arr = sorted(list(map(int,input().split())))\n\n    print(arr[-1]* arr[-2],arr[0]*arr[1],sep=\" \")\n", "from sys import *\ninput=stdin.readline\nfor u in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    print(l[-1]*l[-2],l[0]*l[1])\n", "for _ in range(int(input())):\r\n    n=input()\r\n    ar=list(map(int,input().split()))\r\n    ar.sort()\r\n    print(ar[-1]*ar[-2],ar[0]*ar[1])", "for _ in range(int(input())):\n    n = int(input())\n    ls = list(map(int,input().split()))\n    ls = sorted(ls)\n    \n    print(ls[-2]*ls[-1],end=\" \")\n    \n    print(ls[0]*ls[1])\n    ", "# cook your dish here\nt = int(input())\nwhile t>0:\n    n = int(input())\n    list_n = list(map(int, input().split()))\n    list_n = sorted(list_n)\n    print(list_n[-1]*list_n[-2], list_n[0]*list_n[1])\n    t-=1", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    l.sort()\n    a = l[0]*l[1]\n    b = l[-1]*l[-2]\n    print(b,a)\n", "# cook your dish here\n# cook your dish here\nfor i in range(int(input())):\n    N=int(input())\n    Arr=list(map(int,input().split()))\n    Arr.sort()\n    print(Arr[-1]*Arr[-2],Arr[0]*Arr[1])\n", "# cook your dish here\nT=int(input())\nfor _ in range(T):\n    n=int(input())\n    arr=list(map(int,input().split()))\n    arr.sort()\n    print(arr[-1]*arr[-2],arr[0]*arr[1])", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    \n    l = sorted(l)\n    \n    print(l[-1]*l[-2],end=' ')\n    print(l[0]*l[1])", "# cook your dish here\nn=int(input())\nfor _ in range(n):\n    k=int(input())\n    a=[int(i) for i in input().split()]\n    a.sort()\n    print(a[k-1]*a[k-2],a[0]*a[1])", "for _ in range(int(input())):\r\n    n,s,s2= int(input()),1,1\r\n    arr = list(map(int,input().split()))\r\n    s = s*max(arr)\r\n    arr.remove(max(arr))\r\n    s*=max(arr)\r\n    s2 *=min(arr)\r\n    arr.remove(min(arr))\r\n    s2*=min(arr)\r\n    print(s,s2)", "# cook your dish here\nfor _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    l.sort()\n    print(l[-1]*l[-2],end=\" \")\n    print(l[0]*l[1])\n", "for _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    a.sort()\n    print(a[-1]*a[-2],a[0]*a[1])"]