["test = int(input())\nANS = list()\nfor i in range(test):\n n = int(input())\n items = sorted(list(map(int, input().split())))\n c = 1\n for j in range(len(items)):\n  if items[j] < 2000:\n   t = 2000 - items[j]\n   if t in items[j+1:]:\n    ANS.append(\"Accepted\")\n    c = 2\n    break\n   else:\n    pass\n  else:\n   break\n if c==1:\n  ANS.append(\"Rejected\")\nfor ans in ANS:\n print(ans)", "from sys import stdin, stdout\nfrom itertools import combinations\ninput = stdin.readline\nprint2 = stdout.write\ndef sub_lists(my_list, le):\n for x in combinations(my_list, 2):\n  #print(x)\n  if sum(x) == 2000:\n   return \"Accepted\"\n return \"Rejected\"\n\nfor _ in range(int(input())):\n n = int(input())\n if n == 1:\n  input()\n  print(\"Rejected\")\n  continue\n elif n == 2:\n  if sum(map(int, stdin.readline().split())) != 2000:\n   print(\"Rejected\")\n  else:\n   print(\"Accepted\")\n  continue\n a = sorted(list(map(int, stdin.readline().split())))\n i = n - 1\n while i >= 0 and a[i] > 2000:\n  i -= 1\n if i <= 0:\n  print(\"Rejected\")\n  continue\n i += 1\n if sum(a[:i]) < 2000:\n  print(\"Rejected\")\n  continue\n print(sub_lists(a[:i], i))", "ncases = int(input())\n\nfor cases in range(ncases):\n items = int(input())\n pricelist = list( map( int, input().split()))\n intended = 2000\n if pricelist.count(1000) >= 2:\n  print(\"Accepted\")\n  continue\n\n accepted = False\n for i in pricelist:\n  if i != 1000 and intended - i in pricelist:\n   accepted =True\n  \n if accepted:\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n\n \n", "def getPairsCount(arr, n, sum):\n m = [0] * 10000001\n\n for i in range(0, n):\n  m[arr[i]] += 1\n\n twice_count = 0\n\n # Iterate through each element and increment\n # the count (Notice that every pair is\n # counted twice)\n for i in range(0, n):\n\n  twice_count += m[sum - arr[i]]\n\n  # if (arr[i], arr[i]) pair satisfies the\n  # condition, then we need to ensure that\n  # the count is  decreased by one such\n  # that the (arr[i], arr[i]) pair is not\n  # considered\n  if (sum - arr[i] == arr[i]):\n   twice_count -= 1\n\n # return the half of twice_count\n return int(twice_count / 2)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n su=2000\n val=getPairsCount(l, n, su)\n if(val):\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "# cook your dish here\nt=int(input())\n\nfor i in range(t):\n n=int(input())\n lst=list(map(int,input().split()))\n flag=0\n lst.sort()\n for j in range(len(lst)):\n  for k in range(j+1,len(lst)):\n   if lst[j]+lst[k]==2000:\n    print(\"Accepted\")\n    flag=1\n    break\n  if flag==1:\n   break\n if flag==0:\n  print(\"Rejected\")\n \n  \n", "def getPairsCount(arr, n, sum):\n m = [0] * 10000001\n\n for i in range(0, n):\n  m[arr[i]] += 1\n\n twice_count = 0\n\n # Iterate through each element and increment\n # the count (Notice that every pair is\n # counted twice)\n for i in range(0, n):\n\n  twice_count += m[sum - arr[i]]\n\n  # if (arr[i], arr[i]) pair satisfies the\n  # condition, then we need to ensure that\n  # the count is  decreased by one such\n  # that the (arr[i], arr[i]) pair is not\n  # considered\n  if (sum - arr[i] == arr[i]):\n   twice_count -= 1\n\n # return the half of twice_count\n return int(twice_count / 2)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n su=2000\n val=getPairsCount(l, n, su)\n if(val):\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "def getPairsCount(arr, n, sum):\n m = [0] * 10000001\n\n for i in range(0, n):\n  m[arr[i]] += 1\n\n twice_count = 0\n\n # Iterate through each element and increment\n # the count (Notice that every pair is\n # counted twice)\n for i in range(0, n):\n\n  twice_count += m[sum - arr[i]]\n\n  # if (arr[i], arr[i]) pair satisfies the\n  # condition, then we need to ensure that\n  # the count is  decreased by one such\n  # that the (arr[i], arr[i]) pair is not\n  # considered\n  if (sum - arr[i] == arr[i]):\n   twice_count -= 1\n\n # return the half of twice_count\n return int(twice_count / 2)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n su=2000\n val=getPairsCount(l, n, su)\n if(val):\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "def getPairsCount(arr, n, sum):\n m = [0] * 10000001\n\n for i in range(0, n):\n  m[arr[i]] += 1\n\n twice_count = 0\n\n # Iterate through each element and increment\n # the count (Notice that every pair is\n # counted twice)\n for i in range(0, n):\n\n  twice_count += m[sum - arr[i]]\n\n  # if (arr[i], arr[i]) pair satisfies the\n  # condition, then we need to ensure that\n  # the count is  decreased by one such\n  # that the (arr[i], arr[i]) pair is not\n  # considered\n  if (sum - arr[i] == arr[i]):\n   twice_count -= 1\n\n # return the half of twice_count\n return int(twice_count / 2)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n su=2000\n val=getPairsCount(l, n, su)\n if(val):\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "def getPairsCount(arr, n, sum):\n m = [0] * 10000001\n\n for i in range(0, n):\n  m[arr[i]] += 1\n\n twice_count = 0\n\n # Iterate through each element and increment\n # the count (Notice that every pair is\n # counted twice)\n for i in range(0, n):\n\n  twice_count += m[sum - arr[i]]\n\n  # if (arr[i], arr[i]) pair satisfies the\n  # condition, then we need to ensure that\n  # the count is  decreased by one such\n  # that the (arr[i], arr[i]) pair is not\n  # considered\n  if (sum - arr[i] == arr[i]):\n   twice_count -= 1\n\n # return the half of twice_count\n return int(twice_count / 2)\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n su=2000\n val=getPairsCount(l, n, su)\n if(val):\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n t = False\n arr = list(map(int, input().split()))\n if(arr.count(1000)==2):\n  print(\"Accepted\")\n  continue\n s = set(arr)\n for i in s:\n  if i<1000 and 2000-i in s:\n   t = True\n   break\n print(\"Accepted\" if t else \"Rejected\")", "for t in range(int(input())):\n n = int(input())\n A = [int(i) for i in input().split()]\n A.sort()\n X = 2000\n i=0\n j=n-1\n ans = 0\n while i<j:\n  if A[i] + A[j] == X:\n   ans=1\n   break\n  elif A[i] + A[j] < X:\n   i+=1\n  else:\n   j-=1\n if ans==1:\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "from sys import stdin\n\n# Input data\n#stdin = open(\"input\", \"r\")\n\n\nfor _ in range(int(stdin.readline())):\n n = int(stdin.readline())\n arr = list(map(int, stdin.readline().split()))\n d = {}\n for ele in arr:\n  d[ele] = d.get(ele, 0) + 1\n cond = False\n for ele in d:\n  if ele == 1000:\n   if d[ele] >= 2:\n    cond = True\n    break\n  else:\n   if 2000 - ele in d:\n    cond = True\n    break\n if cond == True:\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n", "target=2000\ndef finds(nums,target):\n tmp_map = {}\n for index, num in enumerate(nums):\n  if target - num in tmp_map:\n   return [index, tmp_map[target - num]]\n  tmp_map[num] = index\n\nfor i in range(int(input())):\n n=int(input())\n nums=list(map(int,input().split()))\n if (finds(nums,target))==None:\n  print(\"Rejected\")\n else:\n  print(\"Accepted\")\n", "# cook your dish here.\nt=int(input())\nfor k in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n i=0 \n j=n-1 \n l.sort()\n while(i<j):\n  val=l[i]+l[j]\n  if val==2000:\n   print(\"Accepted\")\n   break\n  elif val<2000:\n   i+=1\n  else:\n   j-=1\n if i>=j:\n  print(\"Rejected\")\n  \n", "test = int(input())\nANS = list()\nfor i in range(test):\n n = int(input())\n items = sorted(list(map(int, input().split())))\n c = 1\n for j in range(len(items)):\n  if items[j] < 2000:\n   t = 2000 - items[j]\n   if t in items[j+1:]:\n    ANS.append(\"Accepted\")\n    c = 2\n    break\n   else:\n    pass\n  else:\n   break\n if c==1:\n  ANS.append(\"Rejected\")\nfor ans in ANS:\n print(ans)", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n array=list(map(int, input().split()))\n array.sort()\n idx=n-1 \n flag=0\n for i in range(n):\n  if i==idx:\n   break\n  while idx>i+1 and array[i]+array[idx]>2000:\n   idx-=1\n  if array[i]+array[idx]==2000:\n   flag=1 \n   break\n if flag==1:\n  print('Accepted')\n else:\n  print('Rejected')", "for _ in range(int(input())):\n n=int(input())\n flag=0\n a=list(map(int,input().split()))\n a.sort()\n for i in range(n):\n  for j in range(i+1,n):\n   if 2000-a[i]==a[j]:\n    flag=1\n    break\n  if flag==1:\n   break\n if flag==1:\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")", "def func(a):\n a.sort()\n i=0\n j=len(a)-1\n while i<j:\n  if a[i]+a[j]==2000:\n   return(\"Accepted\")\n  else:\n   if a[i]+a[j]>2000:\n    j-=1\n   else:\n    i+=1\n return(\"Rejected\")\n \n\nt=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n print(func(a))\n\n", "for _ in range(int(input())):\n n = int(input())\n arr = sorted(map(int,input().split()))\n l ,r = 0,n-1\n ans = \"Rejected\"\n while l<r:\n  k = arr[l]+arr[r]\n  if k==2000:\n   ans = \"Accepted\"\n   break\n  elif k>2000: r-=1\n  else: l+=1\n print(ans)", "def main():\n for _ in range(int(input())):\n  n=int(input())\n  a=list(map(int,input().split()))\n  flag=False\n  s=set(a)\n  if(a.count(1000)>=2):\n   flag=True\n  for i in a:\n   if(2000-i in s and i!=1000):\n    flag=True\n    break\n  print(\"Accepted\" if(flag) else \"Rejected\")\nmain()", "# cook your dish here\nt= int(input())\nwhile t>0:\n N = int(input())\n dress_price = list(map(int,input().split()))\n flag = 0\n dress_price.sort(reverse=True)\n for i in range(N):\n  if dress_price[i]<2000:\n   k1=2000 - dress_price[i]\n   if k1 in dress_price[i+1:]:\n    flag=1 \n    break\n \n if flag==1:\n  print(\"Accepted\")\n else:\n  print(\"Rejected\")\n \n \n t=t-1", "# cook your dish here\n\ndef check(arr,n):\n s =set()\n for i in range(0, n):\n  temp = 2000-arr[i]\n  if (temp in s):\n   return(\"Accepted\")\n  s.add(arr[i])\n return(\"Rejected\")\n \n \n\nt = int(input())\nfor _ in range(t):\n n = int(input())\n arr = list(map(int,input().split()))\n print(check(arr,n))\n"]