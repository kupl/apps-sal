["t=int(input())\r\nfor _ in range(t):\r\n    S=set(input().strip())\r\n    n=int(input().strip())\r\n    a=set(input().strip().split(\" \"))\r\n    g=True\r\n    for i in S:\r\n        if(i not in a):\r\n            g=False\r\n    if(g):\r\n        print(1)\r\n    else:\r\n        print(0)", "t=int(input())\r\nfor _ in range(t):\r\n    S=set(input().strip())\r\n    n=int(input().strip())\r\n    a=set(input().strip().split(\" \"))\r\n    g=True\r\n    for i in S:\r\n        if(i not in a):\r\n            g=False\r\n    if(g):\r\n        print(1)\r\n    else:\r\n        print(0)", "# cook your dish here\nfor _ in range(int(input())):\n    string = input().strip()\n    n = int(input())\n    lst = input().split()\n    #print(lst)\n    status = True\n    for x in string:\n        #print(x)\n        if x not in lst:\n            status = False\n            break\n    if status:\n        print(1)\n    else:\n        print(0)", "# cook your dish here\nT= int(input())\nfor i in range(T):\n    S=input()\n    n=int(input())\n    arr = [str(j) for j in input().split()][:n]\n    if(len(set(S) - set(arr))==1):\n        print(1)\n    else:\n        print(0)\n    \n", "from collections import Counter\r\nfor _ in range(int(input())):\r\n   strs = set(input().strip())\r\n   lens = int(input())\r\n   inps = [x for x in input().split()]\r\n   isOK = True\r\n   for i in strs:\r\n       if i not in inps:\r\n           isOK = False\r\n           break\r\n   print(1 if isOK else 0)\r\n\r\n\r\n\r\n\r\n", "# cook your dish here\nt=int(input())\ni=0\nwhile i<t:\n    c=0\n    d=list(input().strip())\n    s=set(d)\n    n=int(input())\n    k=input()\n    lst=list(k.split())\n    for j in s:\n        if j in lst:\n            continue\n        else:\n            c+=1\n            break\n    if c==0:\n        print(\"1\")\n    else:\n        print(\"0\")\n    i+=1", "# cook your dish here\nt=int(input())\ni=0\nwhile i<t:\n    c=0\n    d=list(input().strip())\n    s=set(d)\n    n=int(input())\n    k=input()\n    lst=list(k.split())\n    for j in s:\n        if j in lst:\n            continue\n        else:\n            c+=1\n            break\n    if c==0:\n        print(\"1\")\n    else:\n        print(\"0\")\n    i+=1", "for _ in range(int(input())):\n    s=input().strip()\n    n=int(input())\n    l=list(input())\n    f=0\n    for i in range(len(s)):\n        if s[i] not in l:\n            f=1\n            break\n    if f==1:\n        print(0)\n    else:\n        print(1)\n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    st=input().strip()\n    n=int(input())\n    f=1 \n    arr=input().split()\n    for i in arr:\n        st=st.replace(i,'')\n    if(len(st)==0):\n        print('1')\n    else:\n        print('0')", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n    s=input().strip()\n    n=int(input())\n    chars=set(input().split())\n    flag=1\n    for i in s:\n        if i not in chars:\n            print(0)\n            flag=0\n            break\n    if flag:\n        print(1)\n", "# cook your dish here\nt = int(input())\n\nfor _ in range(t):\n    s = set(str(input()).strip())\n    n = int(input())\n    arr = set(str(input()).split())\n    \n    if len(s.difference(arr)) == 0:\n        print(1)\n    else:\n        print(0)", "# cook your dish here\n\n\nfor _ in range(int(input())):\n    s=input().strip()\n    n=int(input().strip())\n    a=list(input().strip().split())\n    a=list(set(a))\n    # print(a,s)\n    flag=0\n    for i in s:\n        # print(i)\n        if i not in a:\n            \n            flag=1\n            break\n    if flag==1:\n        print('0')\n    else:\n        print('1')", "from sys import stdin, stdout\nfrom math import floor, gcd, fabs, factorial, fmod, sqrt, inf, log\nfrom collections import defaultdict as dd, deque\nfrom heapq import merge, heapify, heappop, heappush, nsmallest\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nmod = pow(10, 9) + 7\nmod2 = 998244353\ndef inp(): return stdin.readline().strip()\ndef out(var, end=\"\\n\"): stdout.write(str(var)+\"\\n\")\ndef outa(*var, end=\"\\n\"): stdout.write(' '.join(map(str, var)) + end)\ndef lmp(): return list(mp())\ndef mp(): return list(map(int, inp().split()))\ndef smp(): return list(map(str, inp().split()))\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\ndef remadd(x, y): return 1 if x%y else 0\ndef ceil(a,b): return (a+b-1)//b\n\ndef isprime(x):\n    if x<=1: return False\n    if x in (2, 3): return True\n    if x%2 == 0: return False\n    for i in range(3, int(sqrt(x))+1, 2):\n        if x%i == 0: return False\n    return True\n\ndef solve(md, s):\n    for i in s:\n        if i not in md: return 0\n    return 1\n\nfor _ in range(int(inp())):\n    s = inp()\n    n = int(inp())\n    arr = inp().split()\n    md = {}\n    for i in arr:\n        if i not in md: md[i]=1\n    print(solve(md, s))\n\n", "from itertools import groupby\n\nfor case in range(int(input())):\n    string=''.join(input().split())\n    N=int(input())\n    char_string=input()\n    \n    dicti={i:len(list(i)) for i,j in groupby(string,key=None)}\n    \n    old=0\n\n    for i in dicti:\n        if i not in char_string:\n            old+=1\n    \n    if old==0:\n        print(1)\n    \n    else:\n        print(0)", "for i in range(int(input())):\n    s = input().strip()\n    n = int(input().strip())\n    li = input().strip().split()\n    \n    ans = 1\n    \n    for el in set(s):\n        if el not in li:\n            ans = 0\n            break\n    \n    print(ans)", "for _ in range(int(input())):\r\n    s = input().strip()\r\n    input()\r\n    a = set(input().split())\r\n\r\n    d = set(s)\r\n\r\n    print(int(all(i in a for i in d)))\r\n"]