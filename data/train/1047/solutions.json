["import sys\n\ndef input():    return sys.stdin.readline().strip()\ndef iinput():   return int(input())\ndef rinput():   return list(map(int, sys.stdin.readline().strip().split())) \ndef get_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\n\nt=iinput()\n\nfor _ in range(t):\n n=iinput()\n p=[]\n mi=[]\n for i in range(n):\n  x,y=rinput()\n  p.append(x+y)\n  mi.append(x-y)\n\n p.sort()\n mi.sort()\n m=float('inf')\n for i in range(1,n):\n  if(p[i]-p[i-1]<m):\n   m=p[i]-p[i-1]\n  if(mi[i]-mi[i-1]<m):\n   m=mi[i]-mi[i-1]\n\n if m%2==0:\n  print(m//2)\n else:\n  print(m/2)\n", "import io, sys, os\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li ():\n return list (map (int, input ().split ()))\n\n\ndef num ():\n return map (int, input ().split ())\n\n\ndef nu ():\n return int (input ())\n\n\ndef solve ():\n t = nu()\n for _ in range (t):\n  n=nu()\n  x=set()\n  y=set()\n  fl=False\n  for i in range(n):\n   l,r=num()\n   px=l+r\n   py=r-l\n   if(px in x):\n    fl=True\n   if(py in y):\n    fl=True\n   x.add(px)\n   y.add(py)\n  x=list(x)\n  y=list(y)\n  x.sort()\n  y.sort()\n  mnx=9999999999999\n  mny= 9999999999999\n  if(fl):\n   print(0)\n  else:\n   for i in range(1,len(x)):\n    mnx=min(mnx,x[i]-x[i-1])\n   for i in range(1,len(y)):\n    mny=min(mny,y[i]-y[i-1])\n   print(min(mny,mnx)/2)\n\n\n\ndef __starting_point():\n solve ()\n__starting_point()", "for _ in range(int(input())):\n n=int(input())\n plus=[]\n minus=[]\n for i in range(n):\n  x,y=list(map(int,input().split()))\n  plus.append(x+y)\n  minus.append(x-y)\n plus.sort(),minus.sort()\n m=float('inf')\n for i in range(1,n):\n  if plus[i]-plus[i-1]<m:\n   m=plus[i]-plus[i-1]\n  if minus[i]-minus[i-1]<m:\n   m=minus[i]-minus[i-1]\n if m%2==0:\n  print(m//2)\n else:\n  print(m/2)\n", "from decimal import *\ngetcontext().prec = 1\nt = int(input())\nwhile t > 0:\n t -= 1\n n = int(input())\n a = []; i = 0; b = []\n while i < n:\n  x,y = list(map(int, input().split()))\n  a.append(x+y)\n  b.append(x-y)\n  i += 1\n a.sort()\n b.sort()\n m = 1000000007\n for i in range(1,n):\n  k = abs(a[i] - a[i-1])\n  l = abs(b[i] - b[i-1])\n  m = min(m,k,l)\n print(Decimal(m/2))", "T=int(input())\nfor i in range(T):\n N=int(input())\n l1=[]\n l2=[]\n for j in range(N):\n  a,b=map(int,input().split())\n  l1.append(a-b)\n  l2.append(a+b)\n l1.sort()\n l2.sort()\n m1=100000000000000000000000\n for j in range(1,len(l1)):\n  if l1[j]-l1[j-1]<m1:\n   m1=l1[j]-l1[j-1]\n m2=1000000000000000000000\n for j in range(1,len(l2)):\n  if l2[j]-l2[j-1]<m2:\n   m2=l2[j]-l2[j-1]\n if min(m1,m2)%2==0:\n  print(min(m1,m2)//2)\n else:\n  print(min(m1,m2)/2)", "import math\n\nfor _ in range(0, int(input())):\n points = int(input())\n xs = set()\n ys = set()\n for _ in range(points):\n  x, y = [int(i) for i in input().split()]\n  xs.add((x - y))\n  ys.add((x + y))\n xmin = 1000000001\n ymin = 1000000001\n if len(xs) != points or len(ys) != points:\n  print(0)\n else:\n  xs = sorted(xs)\n  ys = sorted(ys)\n  xmin = math.fabs(xs[1] - xs[0])\n  ymin = math.fabs(ys[1] - ys[0])\n  for i in range(1, len(xs) - 1):\n   if xmin > (math.fabs(xs[i + 1] - xs[i])):\n    xmin = xs[i + 1] - xs[i]\n\n   if ymin > (math.fabs(ys[i + 1] - ys[i])):\n    ymin = ys[i + 1] - ys[i]\n\n  print(min(xmin, ymin) / 2)\n", "t=int(input())\nfor test in range(t):\n n=int(input())\n a_set=set()\n b_set=set()\n for i in range(n):\n  x,y=list(map(int,input().split()))\n  a_set.add(x-y)\n  b_set.add(x+y)\n a_set=list(a_set)\n b_set=list(b_set)\n if len(a_set)!=n or len(b_set)!=n:\n  print(0)\n else:\n  a_set=sorted((a_set))\n  b_set=sorted((b_set))\n  a1=a_set[1]-a_set[0]\n  b1=b_set[1]-b_set[0]\n  for i in range(2,n):\n   a1=min(a1,a_set[i]-a_set[i-1])\n   b1=min(b1,b_set[i]-b_set[i-1])\n  # print(a1,b1)\n  print(min(a1,b1)/2)\n", "# cook your dish here\n'''\nt=int(input())\n\nl=[]                                    #array of coordinates\nwhile t:\n    n=int(input())\n    while n:\n     coor=int(input()),int(input())  #coordinates\n     l.append(coor)\n     n-=1\n  \n    t-=1\n    lcopy=sorted(l)\n    for i in range(len(l)):\n     length=len(lcopy)\n     for j in range(i+1,len(l)):\n      if abs(l[i][0]-l[j][0])==abs(l[i][1]-l[j][1]):\n       if l[j] in lcopy: lcopy.remove(l[j])\n     if length!=len(lcopy):\n      if l[i] in lcopy: lcopy.remove(l[i])\n    print(l)\n\n    print(lcopy)\n'''\n\nimport cmath\nimport math\n\n\n\ndef f(l):\n #Rotate the points by 45 degrees\n l1=[]\n for i in range(len(l)):\n  w=cmath.polar(l[i])\n  z=cmath.rect(w[0],w[1]-cmath.pi/4)\n  l1.append(z) \n\n #print(l1)\n l1.sort(key=lambda z:z.real)\n for i in range(len(l1)-1):\n  diff=abs(l1[i].real-l1[i+1].real)\n  if diff==0:\n    print(0)\n    return\n  if i==0:\n   minDiffX=diff\n  else:\n   minDiffX=min(diff,minDiffX)\n #print(minDiffX)\n\n l1.sort(key = lambda x: x.imag)\n for i in range(len(l1)-1):\n  diff=abs(l1[i].imag-l1[i+1].imag)\n  if diff==0:\n    print(0)\n    return\n  if i==0:\n   minDiffY=diff\n  else:\n   minDiffY=min(diff,minDiffY)\n #print(minDiffY)\n\n #print(l1)\n '''d=min(abs(l[0].real-l[1].real),abs(l[0].imag-l[1].imag))\n    for i in range(1,len(l1)):\n     for j in range(i+1,len(l1)):\n      x=min(abs(l[i].real-l[j].real),abs(l[i].imag-l[j].imag))\n      if x<d: d=x\n'''\n print(min(minDiffX,minDiffY)*math.sin(math.pi/4)) \n\nT=int(input())\n\nwhile T:\n l=[] #array of coordinates\n\n n=int(input())\n while n:\n  #print(n)\n  t=input().split() #coordinates\n  #print(t)\n  l.append(complex(int(t[0]),int(t[1])))\n  n-=1\n\n f(l)\n\n T-=1\n", "# cook your dish here\nimport numpy as np\nt = int(input())\nwhile(t):\n n = int(input())\n X = []\n Y = []\n for i in range(n):\n  x,y = map(int,input().split())\n  x,y = x - y,x + y\n  X.append(x)\n  Y.append(y)\n X = set(X)\n Y = set(Y)\n if len(X)== n-1 or len(Y)==n-1:\n  print(0)\n else:\n  X = list(X)\n  Y = list(Y)\n  X.sort()\n  Y.sort()\n  for i in range(len(X) - 1):\n   X[i] = X[i+1] - X[i]\n  X = X[:-1]\n  for i in range(len(Y) - 1):\n   Y[i] = Y[i+1] - Y[i]\n  Y = Y[:-1]\n  print(min(min(X)/2.0,min(Y)/2.0))\n t-=1", "t = int(input())\nfor _ in range(t):\n n = int(input())\n co = []\n suma = []\n diff = []\n for i in range(n):\n  x,y = map(int,input().strip().split())\n  co.append([x,y])\n  suma.append(x+y)\n  diff.append(x-y)\n # print(co)\n suma.sort()\n diff.sort()\n # print(suma)\n # print(diff)\n mina = 10**9\n mina = (abs((suma[0]-suma[1])/2))\n mina = min(mina,abs((diff[0]-diff[1])/2))\n # print(mina)\n for i in range(1,n-1):\n  mina = min(mina,abs((suma[i]-suma[i+1])/2),abs((diff[i]-diff[i+1])/2))\n  # print(i,mina)\n  if(mina == 0.0):\n   break\n print(mina)", "t = int(input())\nwhile t>0:\n t-=1\n n = int(input())\n arr = []\n arr3 = []\n for i in range(n):\n  x,y = map(int,input().strip().split(\" \"))\n  arr.append(y-x)\n  arr3.append(y+x)\n arr = sorted(arr)\n arr3 = sorted(arr3)\n arr2 = []\n for i in range(n-1):\n  arr2.append((arr[i+1]-arr[i])/2)\n  arr2.append((arr3[i+1]-arr3[i])/2)\n print(min(arr2))", "t=int(input())\nfor _ in range(0,t):\n intercept1=[]\n intercept2=[]\n n=int(input())\n for i in range(0,n):\n  x,y=map(int,input().split())\n  intercept1.append(y+x)\n  intercept2.append(y-x)\n intercept1.sort()\n intercept2.sort()\n mn1=10**10\n mn2=10**10\n for i in range(1,n):\n  diff1=intercept1[i]-intercept1[i-1]\n  mn1=min(mn1,diff1)\n  diff2=intercept2[i]-intercept2[i-1]\n  mn2=min(mn2,diff2)\n  ans=min(mn1,mn2)\n print(ans/2)", "# cook your dish here\nimport math\nroot = math.sqrt(2)\n\nfor t in range(int(input())):\n num = int(input())\n \n a = []\n \n for i in range(num):\n  a.append(list(map(int,input().split())))\n  \n b = []\n c = []\n \n for i in range(num):\n  b.append(a[i][1] - a[i][0])\n  c.append(a[i][1] + a[i][0])\n  \n c.sort(reverse=True)\n b.sort(reverse=True)\n \n d = []\n e = []\n \n for i in range(num-1):\n  d.append(b[i] - b[i+1])\n  e.append(c[i] - c[i+1])\n  \n f = min(min(d),min(e))\n \n f /= 2\n \n print(f)", "for k in range(int(input())):\n n = int(input())\n arr1=[]\n arr2=[]\n for _ in range(n):\n  a,b = map(int,input().split())\n  arr1.append(a+b)\n  arr2.append(b-a)\n arr1.sort()\n arr2.sort()\n l1=[]\n l2 =[]\n for i in range(len(arr1)-1):\n  l1.append(arr1[i+1]-arr1[i])\n  l2.append(arr2[i+1]-arr2[i])\n x = min(l1)\n y = min(l2)\n print(\"{0:.6f}\".format(min(x,y)/2))", "t=int(input())\nfor i in range(t):\n n=int(input())\n x=[]\n y=[]\n dx=[]\n dy=[]\n for j in range(n):\n  c=list(map(int,input().split()))\n  x.append(c[0]-c[1])\n  y.append(c[0]+c[1])\n x.sort()\n y.sort()\n for j in range(1,n):\n  dx.append(x[j]-x[j-1])\n  dy.append(y[j]-y[j-1])\n a=min(dx)\n b=min(dy)\n print('{0:.6f}'.format(min(a,b)/2))", "\"\"\"\nimport bisect\n\ndef insert(list, n): \n    bisect.insort(list, n)  \n    return list\n\"\"\"\nt=int(input())\nfor i in range(0,t):\n n=int(input())\n\n arr=[]\n brr=[]\n for j in range(0,n):\n  x,y=input().split()\n  x=int(x)\n  y=int(y)\n  #insert(arr,x-y)\n  #insert(brr,x+y)\n  arr.insert(0,x-y)\n  brr.insert(0,x+y)\n arr.sort()\n brr.sort()\n m1=arr[1]-arr[0]\n for k in range(1,n-1):\n  if((arr[k+1]-arr[k])<m1):\n   m1=arr[k+1]-arr[k]\n \n for k in range(0,n-1):\n  if((brr[k+1]-brr[k])<m1):\n   m1=brr[k+1]-brr[k]\n if(m1%2==0):\n  print(m1//2)\n else:\n  print(m1/2)\n", "t = int(input())\nwhile t>0:\n t -= 1\n n = int(input())\n mp, mn = [], []\n for i in range(n):\n  x, y = list(map(int, input().split()))\n  mp.append(y-x)\n  mn.append(y+x)\n dmin = abs(mp[1]-mp[0])\n mp.sort()\n mn.sort()\n for i in range(n-1):\n  dmin = min(dmin, mp[i+1]-mp[i])\n  dmin = min(dmin, mn[i+1]-mn[i])\n if dmin%2 == 0:\n  print(dmin//2)\n else:\n  print(dmin/2)\n", "t=int(input())\nwhile (t>0):\n t-=1\n n=int(input())\n d=[]\n dl=[]\n for i in range(n):\n  x,y=map(int,input().split())\n  d.append(y-x)\n  dl.append(y+x)\n #print(\"d = \",d)\n #print(\"dl = \",dl)\n d=sorted(d)\n dl=sorted(dl)\n #print(\"d now = \",d)\n #print(\"dl now = \",dl)\n ans=abs(d[0]-d[1])\n k=0\n while (k<n-1):\n  ans=min(ans,abs(d[k]-d[k+1]))\n  ans=min(ans,abs(dl[k]-dl[k+1]))\n  k+=1\n if (ans%2==0):\n  print(int(ans/2))\n else:\n  print(ans/2)", "\"\"\"\nimport bisect\n\ndef insert(list, n): \n    bisect.insort(list, n)  \n    return list\n\"\"\"\nt=int(input())\nfor i in range(0,t):\n n=int(input())\n\n arr=[]\n brr=[]\n for j in range(0,n):\n  x,y=input().split()\n  x=int(x)\n  y=int(y)\n  #insert(arr,x-y)\n  #insert(brr,x+y)\n  arr.insert(0,x-y)\n  brr.insert(0,x+y)\n arr.sort()\n brr.sort()\n m1=arr[1]-arr[0]\n for k in range(1,n-1):\n  if((arr[k+1]-arr[k])<m1):\n   m1=arr[k+1]-arr[k]\n m2=brr[1]-brr[0]\n for k in range(1,n-1):\n  if((brr[k+1]-brr[k])<m2):\n   m2=brr[k+1]-brr[k]\n if((min(m1,m2))%2==0):\n  print((min(m1,m2))//2)\n else:\n  print((min(m1,m2))/2)\n", "import bisect\n\ndef insert(list, n): \n bisect.insort(list, n) \n return list\n\nt=int(input())\nfor i in range(0,t):\n n=int(input())\n\n arr=[]\n brr=[]\n for j in range(0,n):\n  x,y=input().split()\n  x=int(x)\n  y=int(y)\n  insert(arr,x-y)\n  insert(brr,x+y)\n m1=arr[1]-arr[0]\n for k in range(1,n-1):\n  if((arr[k+1]-arr[k])<m1):\n   m1=arr[k+1]-arr[k]\n m2=brr[1]-brr[0]\n for k in range(1,n-1):\n  if((brr[k+1]-brr[k])<m2):\n   m2=brr[k+1]-brr[k]\n if((min(m1,m2))%2==0):\n  print((min(m1,m2))//2)\n else:\n  print((min(m1,m2))/2)\n", "import bisect\n\ndef insert(list, n): \n bisect.insort(list, n) \n return list\n\nt=int(input())\nfor i in range(0,t):\n n=int(input())\n\n arr=[]\n brr=[]\n for j in range(0,n):\n  x,y=input().split()\n  x=int(x)\n  y=int(y)\n  insert(arr,x-y)\n  insert(brr,x+y)\n m1=arr[1]-arr[0]\n for k in range(1,n-1):\n  if((arr[k+1]-arr[k])<m1):\n   m1=arr[k+1]-arr[k]\n m2=brr[1]-brr[0]\n for k in range(1,n-1):\n  if((brr[k+1]-brr[k])<m2):\n   m2=brr[k+1]-brr[k]\n print((min(m1,m2))/2)", "import bisect \ndef sign(a):\n if(a==abs(a)):\n  return 1\n else:\n  return -1\n\ndef insert(list, n): \n bisect.insort(list, n) \n return list\n\nt=int(input())\nfor i in range(0,t):\n n=int(input())\n\n arr=[]\n brr=[]\n for j in range(0,n):\n  x,y=input().split()\n  x=int(x)\n  y=int(y)\n  a=x-y\n  b=x+y\n  insert(arr,a)\n  insert(brr,b)\n m1=arr[1]-arr[0]\n for k in range(1,len(arr)-1):\n  if((arr[k+1]-arr[k])<m1):\n   m1=arr[k+1]-arr[k]\n m2=brr[1]-brr[0]\n for k in range(1,len(arr)-1):\n  if((brr[k+1]-brr[k])<m2):\n   m2=brr[k+1]-brr[k]\n print((min(m1,m2))/2)", "T=int(input())\nfor i in range(0,T):\n N=int(input())\n L=[]\n for j in range(0,N):\n  x,y=list(map(int,input().split()))\n  L.append((x,y))\n\n arr11=[]\n arr12=[]\n for j in range(0,len(L)):\n  arr11.append(L[j][1]-L[j][0])\n  arr12.append(L[j][1]+L[j][0])\n\n arr11=sorted(arr11)\n arr12=sorted(arr12)\n arr11=arr11[::-1]\n arr12=arr12[::-1]\n arr21=[100000000000]\n arr22=[100000000000]\n for j in range(0,len(L)-1):\n  arr21.append(arr11[j]-arr11[j+1])\n  arr21.append(arr12[j]-arr12[j+1])\n\n print(min(min(arr21),min(arr22))/2)\n  \n"]