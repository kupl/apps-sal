["# cook your dish here\r\ntest=int(input())\r\nfor _ in range(test):\r\n    n=int(input())\r\n    n=list(bin(n))\r\n    ans=n.count('1')\r\n    print(ans-1)", "# cook your dish here\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    binary=bin(n)\n    setb=[ones for ones in binary[2:] if ones=='1']\n    print(len(setb)-1)\n", "# cook your dish here\nimport math\ntry:\n    \n    t=int(input())\n\n    while(t>0):\n        n=int(input())\n        c=0\n        '''while(n>=1):\n            if(n%2==1):\n                c=c+1\n            n=n//2'''\n        m=n\n        s=0\n        if(math.log2(n)-int(math.log2(n))==0):\n            print(0)\n        else:\n            while(n>=2):\n                if(bool(math.log2(n))):\n                    c=c+1\n                r=2**(int(math.log2(n)))\n                s=s+r \n                n=n-r\n               \n                if(s==m):\n                    c=c-1\n        #print(n)\n            print(c)\n        t=t-1\nexcept:\n    pass", "test=int(input())\r\nfor _ in range(test):\r\n    n=int(input())\r\n    n=list(bin(n))\r\n    ans=n.count('1')\r\n    print(ans-1)", "# cook your dish here\nimport math;\ncount = 0;\n\ndef steps(num):\n    nonlocal count;\n    \n    expo=int(math.log(num,2));\n    nearPow=int(pow(2,expo));\n    if(nearPow==num):\n        return count;\n    num-=nearPow;\n    count+=1;\n    if(num==1):\n        return count;\n    else:\n        steps(num);\n    return count;\n\n    \niterator=int(input());\nwhile(iterator>0):\n    count=0;\n    num=int(input());\n    print((steps(abs(num))));\n    iterator-=1;\n", "try:\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        a = bin(N)\n\n        print(a.count('1') -1 )\n\nexcept:\n    pass", "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n    k=int(input())\n    count=0\n    temp=(int(math.log2(k)))\n    for j in range(temp,-1,-1):\n        if((k-(2**j))>=0):\n            k=k-(2**j)\n            \n            count=count+1\n    print(count-1)\n", "def countBits(n):\r\n\tcount=0\r\n\twhile n>0:\r\n\t\tn = n &n-1\r\n\t\tcount+=1\r\n\treturn count\t\r\n\r\nt = int(input())\r\nfor _ in range(t):\r\n\tn = int(input())\r\n\tprint(countBits(n)-1)", "# cook your dish here\ndef balls():\n    d=int(input())\n    i=0\n    while(1):\n        if (2**i)>d:\n            i-=1 \n            break\n        i+=1 \n    temp=0\n    result=0\n    j=i \n    while(j>=0):\n        if (temp+(2**j))==d:\n            return result\n        if (temp+(2**j))>d:\n            j-=1 \n        else:\n            temp+=(2**j)\n            result+=1\n    return result\nt=int(input())\nfor loop in range(t):\n    print(balls())", "for i in range(int(input())):\r\n           a=int(input())\r\n           sum=0\r\n           x=2\r\n           while (a//x)!=0:\r\n               sum+=1\r\n               x*=2\r\n          \r\n           temp=0\r\n           while a>=0 and sum>=0:\r\n             if 2**sum<=a:\r\n               a-=(2**sum)\r\n               temp+=1\r\n             sum -= 1\r\n\r\n           print(temp-1)\r\n", "for i in range(int(input())):\r\n           a=int(input())\r\n           sum=0\r\n           x=2\r\n           while (a//x)!=0:\r\n               sum+=1\r\n               x*=2\r\n          \r\n           temp=0\r\n           while a>=0 and sum>=0:\r\n             if 2**sum<=a:\r\n               a-=(2**sum)\r\n               temp+=1\r\n             sum -= 1\r\n\r\n           print(temp-1)\r\n", "import math as m\nfor _ in range(int(input())):\n    d=int(input())\n    p=d\n    c=0\n    while(True):\n        a=int(m.log2(d))\n        c=c+1\n        d=d-2**a\n        if d==1 or d==0:\n            if p%2==0:\n                c=c-1\n                print(c)\n                break\n            else:\n                print(c)\n                break", "import math\r\nT=int(input())\r\nfor _ in range(T):\r\n    D=int(input())\r\n    count=0\r\n    while D>0:\r\n        p = int(math.log(D, 2))\r\n        D = D - 2**p\r\n        count+=1\r\n    print(count-1)", "# cook your dish here\nimport math\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    if math.ceil(math.log2(n))== math.floor(math.log2(n)):\n        print(0)\n    else:\n        x,c=0,0\n        while n>0:\n            x=2**math.floor(math.log2(n))\n            c+=1\n            n=n-x\n            if math.ceil(math.log2(n))== math.floor(math.log2(n)):\n                break\n        print(c)    \n", "import math\nt = int(input())\nwhile(t!=0):\n    d = int(input())\n    bounce=0\n    while(d>0):\n        p = int(math.log(d,2))\n        d = d- (pow(2,p))\n        if(d!=0):\n            bounce+=1;\n    print(int(bounce))\n    t-=1", "# cook your dish here\ndef ConDecBin(num, count):\n\tcount += num%2\n\tif num > 1:\n\t\tConDecBin(num//2, count)\n\telse:\n\t\tprint(count - 1)\n\nfor k in range(int(input())):\n\tnum = int(input())\n\tcount = 0\n\n\tConDecBin(num, count)", "# def b(n):\r\n#     str=\"\"\r\n#     if n>1:\r\n#         b(n//2)\r\n#     print(n%2,end=\"\")\r\nt=int(input())\r\nfor i in range(t):\r\n    n=int(input())\r\n    # b(n)\r\n    binary=bin(n)\r\n    setBits=[ones for ones in binary[2:] if ones=='1']\r\n    print(len(setBits)-1)\r\n", "try:\n     t=int(input())\n     for i in range(t):\n          d=int(input())\n          li=list(bin(d))\n          print(li.count('1')-1)\nexcept:\n     pass\n", "# cook your dish here\nimport numpy as np\n\ndef bb(d):\n    if(d==0):\n        return 0\n    elif(d==1 or d==2):\n        return 1\n    else:\n        return 1+bb(d-2**int(np.log2(d)))\n\n\nT = int(input())\ntests = np.zeros(T)\nfor i in range(T):\n    tests[i] = int(input())\n    print(bb(tests[i])-1)", "def bitsoncount(x):\n    return bin(x).count('1')\nfor t in range(int(input())):\n    x = int(input())\n    if x == 0:\n        print(0)\n    else:\n\n        print(bitsoncount(x)-1)", "for _ in range(int(input())):\n    a=int(input())\n    b=list(bin(a))\n    print(b.count('1')-1)\n", "t=int(input())\r\nwhile(t!=0):\r\n    k=0\r\n    n=int(input())\r\n    if n&n-1==0:\r\n        print(0)\r\n    else:\r\n        while(n!=0):\r\n             n=n&n-1\r\n             k+=1\r\n        print(k-1)\r\n    t-=1\r\n\r\n\r\n", "t=int(input())\r\nwhile(t!=0):\r\n    k=0\r\n    n=int(input())\r\n    if n==1:\r\n      print(0)\r\n    elif n&n-1==0:\r\n        print(0)\r\n    else:\r\n        while(n!=0):\r\n             n=n&n-1\r\n             k+=1\r\n        print(k-1)\r\n    t-=1\r\n\r\n\r\n", "import math\nfor _ in range(int(input())):\n    d=int(input())\n    c=0\n    while d>0:\n        n=math.floor(math.log2(d))\n        x=pow(2,n)\n        d-=x\n        c+=1\n    print(c-1)", "for _ in range(int(input())):\r\n    d=int(input())\r\n    print(str(bin(d)).count(\"1\")-1)"]