["# cook your dish here\nn=int(input())\nlst=list(map(int,input().split()))\ndict1={}.fromkeys(lst,0)\nfor key in lst:\n dict1[key]+=1\nsum1=0\nfor key in dict1:\n sum1+=dict1[key]//2\n if(dict1[key]%2==1):\n  sum1+=1\nprint(sum1) ", "# cook your dish here\nn = int(input())\na = list(map(int,input().split()))\nv = dict()\ncount = 0\nfor i in range(n):\n k = a[i]\n if k in v:\n  v[k] += 1\n else:\n  v[k] = 1\nfor x in v:\n if v[x] >= 2 :\n  if v[x] % 2 == 0:\n   count += v[x] // 2\n  else:\n   count += v[x] // 2\n   count += 1\n else:\n  if v[x] == 1:\n   count += 1\n  \nprint(count) ", "# cook your dish here\nn=int(input())\nlst=list(map(int,input().split()))\nd=dict()\nsm=0\nfor i in lst:\n if i in d:\n  d[i]+=1\n else:\n  d[i]=1\nfor i in d:\n if d[i]%2==0:\n  sm+=d[i]//2\n else:\n  sm+=(d[i]+1)//2\nprint(sm)", "n = int(input())\na = list(map(int,input().split()))\n\na.sort()\ncount = 0\ni = 0\nwhile(len(a)!=0 and len(a)!=1):\n if a[i] == a[i+1]:\n  a.pop(0)\n  a.pop(0)\n else:\n  a.pop(0)\n count += 1\nif len(a) == 1:\n count += 1\nprint(count)", "n=int(input())\nlis=list(map(int,input().split()))\ndic={}\nfor i in lis:\n if i in dic:\n  dic[i]+=1\n else:\n  dic[i]=1\ncnt=0\nfor i in dic:\n while dic[i]>=2:\n  dic[i]-=2\n  cnt+=1\n if dic[i]!=0:\n  cnt+=1\nprint(cnt)", "# cook your dish here\nn=int(input())\na=list(map(int, input().split()))\nb=set(a)\nc=0\nfor j in b:\n x=a.count(j)\n c+=(x//2)+(x%2)\nprint(c)\n", "n = int(input())\narr = list(map(int,input().split()))\narr.sort()\ni = 0\ncount = 0\nwhile(i<n):\n if(i==n-1):\n  i+=1\n  count+=1\n  continue\n if(arr[i]==arr[i+1]):\n  i+=2\n else:\n  i+=1\n \n count+=1\nprint(count)", "from collections import Counter\nnos_sweet = int(input())\nsweet_types = Counter([int(x) for x in input().split()])\ndays = 0\nfor _, v in list(sweet_types.items()):\n d, r = divmod(v, 2)\n days += d + r\nprint(days)\n\n\n\n\n\n", "from collections import Counter\nll= int(input())\nn = list(map(int,input().rstrip().split(\" \")))\nl = Counter(n)\nlst=[]\nfor i,j in l.items():\n if j%2==0:\n  lst.append(j//2)\n else:\n  lst.append((j//2)+1)\nprint(sum(lst))", "import math\ndef CountFrequency(my_list): \n \n # Creating an empty dictionary  \n freq = {} \n x=[]\n for item in my_list: \n  if (item in freq): \n   freq[item] += 1\n  else: \n   freq[item] = 1\n \n for key, value in freq.items():\n  x.append(math.ceil(value/2))\n return(sum(x))\n   \nn=int(input())\na=list(map(int, input().split()))[:n]\nprint(CountFrequency(a))", "n=int(input())\na=[int(i) for i in input().split()]\ntemp=set(a)\ncount=0\nfor i in temp:\n t=a.count(i)\n if t%2==0:\n  count+=int(t/2)\n else:\n  count+=int(t/2)+1 \nprint(count)", "# cook your dish here\nfrom math import ceil\ntc = int(input())\nsw = list(map(int, input().split()))\nsw.sort()\nb = list(set(sw))\nsol = 0\nfor i in b:\n sol = sol + ceil(sw.count(i)/2)\nprint(sol)", "#!/usr/bin/env python\nfrom collections import Counter\n\nsweets_number = int(input())\nsweets_types = list(map(int, input().split()))\nsweets_types_frequencies = Counter(sweets_types)\ndays = sum((count + 1) // 2 for count in list(sweets_types_frequencies.values()))\nprint(days)\n", "from collections import Counter\nnoOfSweets = int(input())\ntypeOfParticularSweet = list(map(int, input().split()))\nfrequencySweet = Counter(typeOfParticularSweet)\nnoOfDaysReq = 0\nfor i in frequencySweet.values():\n if i == 1:\n  noOfDaysReq +=1 \n elif i%2 == 0:\n  noOfDaysReq += i//2\n else:\n  noOfDaysReq += i//2 + 1\n\nprint(noOfDaysReq)", "# cook your dish here\nn = int(input())\narr = list(map(int,input().split()))\ndr = {}\nfor i in arr:\n if i in dr.keys():\n  dr[i]+=1\n else:\n  dr[i]=1\nct = 0\nfor i in dr.keys():\n if dr[i]%2==0:\n  ct += dr[i]//2\n else:\n  ct += (dr[i]//2+1)\nprint(ct)", "# cook your dish here\nn=int(input())\nlst=list(map(int,input().split()))\nfreq={}\nfor i in lst:\n if i not in freq:\n  freq[i]=1 \n else:\n  freq[i]+=1 \n#print(freq)\nday=0\nfor i in freq.values():\n if i%2==0:\n  day=day+(i//2)\n else:\n  day=day+(i//2)+1\n  \nprint(day)", "# cook your dish here\nn = int(input())\nl = list(map(int, input().split()))\nd = {}\ndays = {}\nans = 0\nfor i in l:\n if i in d:\n  d[i] += 1\n else:\n  d[i] = 1\nfor key, value in d.items():\n if d[key]%2 == 0:\n  ans += d[key]//2\n else:\n  ans = ans + d[key]//2 + 1\nprint(ans)", "# cook your dish here\ntest = int(input())\n\nx = list(map(int,input().strip().split()))\n\nif(test==len(x)):\n x.sort()\n day = 1\n \n count = len(x)-1\n while(count>0):\n  if(x[count-1]==x[count]):\n   count-=1\n  day+=1\n  count-=1\n \n print(day)", "# cook your dish here\nn=int(input())\nl=list(map(int,input().split()))[:n]\nd={}\nfor i in l:\n d[i]=d.get(i,0)+1\ns=0\nfor key,value in d.items():\n s+=(value//2)+(value%2)\nprint(s)", "# cook your dish here\nn = int(input())\narr = list(map(int,input().split()))\nse = set(arr)\nc=[]\ntotal = 0\nfor x in se:\n c.append(arr.count(x))\nfor x in c:\n total+=x//2\n total+=x%2\nprint(total)\n", "import math\nN = list(map(int,input().strip().split()))\nA=list(map(int,input().strip().split()))\n#print(set(A))\nb=0\nc=0\nd=0\nfor j in set(A):\n b=math.ceil(A.count(j)/2)\n d+=b\n #print(b,d,c)\nprint(d+c)\n", "# cook your dish here\nn = int(input())\nlis = list(map(int,input().split()))[:n]\narr = list(set(lis))\nsum_ = 0\nfor i in range(len(arr)):\n sum_ += (lis.count(arr[i])//2)+(lis.count(arr[i])%2)\nprint(sum_)", "# cook your dish here\nfrom itertools import groupby\ntry:\n N=int(input())\n sweet = list(map(int, input().split()))\n sweet=sorted(sweet)\n l=[len(list(group)) for key, group in groupby(sweet)]\n for i in range(len(l)):\n  if l[i]%2==0:\n   pass\n  else:\n   l[i]+=1\n print((sum(l))//2)\n \nexcept:\n pass"]