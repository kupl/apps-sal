["import sys,os,io,time,copy,math,queue,bisect\nfrom collections import deque\nfrom functools import lru_cache\n\nif os.path.exists('input.txt'):\n sys.stdin = open('input.txt', 'r')\n sys.stdout = open('output.txt', 'w') \n\nsys.setrecursionlimit(100000000)\n\ndef main():\n n,m=map(int,input().split())\n mat=[]\n for _ in range(n):\n  s=input()\n  a=[]\n  for i in s:\n   a.append(int(i))\n  mat.append(a)\n  \n Q=int(input())\n ans=[[0 for i in range(m+1)] for j in range(n+1)]\n for i in range(Q):\n  x1,y1,x2,y2=map(int,input().split())\n  x1-=1\n  y1-=1\n  x2-=1\n  y2-=1\n  ans[x1][y1]+=1\n  ans[x2+1][y1]-=1\n  ans[x1][y2+1]-=1\n  ans[x2+1][y2+1]+=1\n for j in range(m+1):\n  for i in range(1,n+1):\n   ans[i][j]=ans[i-1][j]+ans[i][j]\n for i in range(n+1):\n  for j in range(1,m+1):\n   ans[i][j]=ans[i][j-1]+ans[i][j]\n \n for i in range(n):\n  for j in range(m):\n   mat[i][j]=(ans[i][j]+mat[i][j])%2\n for m in mat:\n  for i in m:\n   print(i,end=\"\")\n  print(\"\")\n\n  \nmain()\n", "# cook your dish here\ndef issafe(a,b,n,m):\n if(0<=a<n and 0<=b<m):\n  return True\n return False\ndef main():\n n,m=map(int,input().split())\n mat=[list(map(int,list(input()))) for i in range(n)]\n qmat=[[0 for i in range(m)] for j in range(n)]\n q=int(input())\n query=[list(map(int,input().split())) for i in range(q)]\n for k in query:\n  i1,j1,i2,j2=map(lambda x:x-1,k)\n  qmat[i1][j1]+=1\n  if(issafe(i2+1,j2+1,n,m)):\n   qmat[i2+1][j2+1]+=1\n  if(issafe(i1,j2+1,n,m)):\n   qmat[i1][j2+1]+=-1\n  if(issafe(i2+1,j1,n,m)):\n   qmat[i2+1][j1]+=-1\n for i in range(n-1):\n  for j in range(m):\n   qmat[i+1][j]+=qmat[i][j]\n for i in range(n):\n  for j in range(m-1):\n   qmat[i][j+1]+=qmat[i][j]\n for i in range(n):\n  for j in range(m):\n   qmat[i][j]=(qmat[i][j]+mat[i][j])%2\n for i in qmat:\n  print(*i,sep='')\nmain()", "def issafe(a,b,n,m):\n if(0<=a<n and 0<=b<m):\n  return True\n return False\ndef main():\n n,m=map(int,input().split())\n mat=[list(map(int,list(input()))) for i in range(n)]\n qmat=[[0 for i in range(m)] for j in range(n)]\n q=int(input())\n query=[list(map(int,input().split())) for i in range(q)]\n # print(query)\n for k in query:\n  i1,j1,i2,j2=map(lambda x:x-1,k)\n  qmat[i1][j1]+=1\n  if(issafe(i2+1,j2+1,n,m)):\n   qmat[i2+1][j2+1]+=1\n  if(issafe(i1,j2+1,n,m)):\n   qmat[i1][j2+1]+=-1\n  if(issafe(i2+1,j1,n,m)):\n   qmat[i2+1][j1]+=-1\n for i in range(n-1):\n  for j in range(m):\n   qmat[i+1][j]+=qmat[i][j]\n for i in range(n):\n  for j in range(m-1):\n   qmat[i][j+1]+=qmat[i][j]\n for i in range(n):\n  for j in range(m):\n   qmat[i][j]=(qmat[i][j]+mat[i][j])%2\n for i in qmat:\n  print(*i,sep='')\nmain()\n# import sys,threading\n# max_recur_size = 10**5+ 10000\n# max_stack_size = max_recur_size*500\n# sys.setrecursionlimit(max_recur_size)\n# threading.stack_size(max_stack_size)\n# thread = threading.Thread(target=main)\n# thread.start()", "def issafe(a,b,n,m):\n if(0<=a<n and 0<=b<m):\n  return True\n return False\ndef main():\n n,m=map(int,input().split())\n mat=[list(map(int,list(input()))) for i in range(n)]\n qmat=[[0 for i in range(m)] for j in range(n)]\n q=int(input())\n query=[list(map(int,input().split())) for i in range(q)]\n # print(query)\n for k in query:\n  i1,j1,i2,j2=map(lambda x:x-1,k)\n  qmat[i1][j1]+=1\n  if(issafe(i2+1,j2+1,n,m)):\n   qmat[i2+1][j2+1]+=1\n  if(issafe(i1,j2+1,n,m)):\n   qmat[i1][j2+1]+=-1\n  if(issafe(i2+1,j1,n,m)):\n   qmat[i2+1][j1]+=-1\n for i in range(n-1):\n  for j in range(m):\n   qmat[i+1][j]+=qmat[i][j]\n for i in range(n):\n  for j in range(m-1):\n   qmat[i][j+1]+=qmat[i][j]\n for i in range(n):\n  for j in range(m):\n   qmat[i][j]=(qmat[i][j]+mat[i][j])%2\n for i in qmat:\n  print(*i,sep='')\nmain()\n# import sys,threading\n# max_recur_size = 10**5+ 10000\n# max_stack_size = max_recur_size*500\n# sys.setrecursionlimit(max_recur_size)\n# threading.stack_size(max_stack_size)\n# thread = threading.Thread(target=main)\n# thread.start()", "# -*- coding: utf-8 -*-\n\"\"\"\n@author: coding_don\n\"\"\"\nimport sys\n#sys.stdin = open('ip.txt', 'r') \n#sys.stdout = open('op.txt', 'w')\ntry:\n \n def main():\n  t=1\n  # t=int(sys.stdin.readline())\n  while(t):\n   n,m=[int(x) for x in sys.stdin.readline().split()]\n   a=[]\n   update=[]\n   for i in range(n):\n    tmp=sys.stdin.readline()\n    a.append(tmp)\n    update.append([0 for j in range(m+1)])\n   update.append([0 for j in range(m+1)])\n   q=int(sys.stdin.readline())\n   while(q):\n    x1,y1,x2,y2=[int(z) for z in sys.stdin.readline().split()]\n    update[x1][y1]+=1\n    if(x2<n):\n     update[x2+1][y1]+=-1\n    if(y2<m):\n     update[x1][y2+1]+=-1\n    if(x2<n and y2<m):\n     update[x2+1][y2+1]+=1\n   \n    q-=1\n\n   for i in range(1,n+1):\n    for j in range(1,m+1):\n     update[i][j]+=update[i][j-1]\n\n   for j in range(1,m+1):\n    for i in range(1,n+1):\n     update[i][j]+=update[i-1][j]\n   for i in range(1,n+1):\n    for j in range(1,m+1):\n     if(update[i][j]%2==0):\n      sys.stdout.write(a[i-1][j-1])\n     else:\n      sys.stdout.write(str(1-(ord(a[i-1][j-1])-48)))\n\n    sys.stdout.write('\\n')\n\n   t-=1\n  \n main()\n  \nexcept Exception as e:\n sys.stdout.write(\"ErrOR : \"+str(e))", "# cook your dish here\ndef flip(dp,x1,y1,x2,y2,n,m):\n dp[x1][y1] += 1\n  \n if y2+1 < m:\n  dp[x1][y2+1] -= 1\n\n if x2+1 < n:\n  dp[x2+1][y1] -= 1\n\n if x2+1 < n and y2+1 < m:\n  dp[x2+1][y2+1] += 1\n\ndef main():\n n,m = map(int,input().split())\n matrix = []\n for i in range(n):\n  matrix.append(list(map(int,input())))\n\n\n dp = [[0 for j in range(m)] for i in range(n)]\n q = int(input())\n for i in range(q):\n  x1,y1,x2,y2 = map(int,input().split())\n  x1 -= 1\n  y1 -= 1\n  x2 -= 1\n  y2 -= 1\n  flip(dp,x1,y1,x2,y2,n,m)\n\n for i in range(n):\n  for j in range(1,m):\n   dp[i][j] += dp[i][j-1]\n\n for i in range(1,n):\n  for j in range(m):\n   dp[i][j] += dp[i-1][j]\n\n for i in range(n):\n  for j in range(m):\n   if dp[i][j]%2 == 0:\n    print(matrix[i][j],end = '')\n   else:\n    print(int(not matrix[i][j]),end = '')\n\n  print()\n\nmain()\n", "r,c=list(map(int,input().split()))\nA=[] #Given Matrix\ndp=[[0 for i in range(c+1)] for j in range(r+1)]\nfor i in range(r):\n A.append([int(j) for j in list(input())])\n #print(A)\n\nq=int(input())\n\n#print(A,dp)\nfor i in range(q):\n x1,y1,x2,y2=list(map(int,input().split()))\n #print(x1,y1,x2,y2)\n x1,y1,x2,y2=x1-1,y1-1,x2-1,y2-1\n dp[x1][y1]+=1\n dp[x2+1][y2+1]+=1\n dp[x1][y2+1]-=1\n dp[x2+1][y1]-=1\n\nfor i,v1 in enumerate(A):\n for j,v2 in enumerate(v1):\n  if i==0 and j==0:\n   pass\n  elif i==0:\n   dp[i][j]+=dp[i][j-1]\n  elif j==0:\n   dp[i][j]+=dp[i-1][j]\n  else:\n   dp[i][j]+=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]\n  #print(A,i,j)\n\n  if dp[i][j]%2!=0:\n   A[i][j]=1-A[i][j]\nfor i in A:\n for j in i:\n  print(j,end=\"\")\n print()\n\n\n", "import sys\n \nn, m = map(int, sys.stdin.readline().strip().split())\n \narr = []\nfor i in range(n):\n s = input() + \"0\"\n temp = []\n for x in s:\n  temp += [int(x)]\n arr += [temp]\n \narr += [[0]*(m+1)]\n \nadd = [[0 for i in range(m+1)] for j in range(n+1)]\npref1 = [[0 for i in range(m+1)] for j in range(n+1)]\npref2 = [[0 for i in range(m+1)] for j in range(n+1)]\n \nq = int(sys.stdin.readline().strip())\nfor _ in range(q):\n x1, y1, x2, y2 = map(int, sys.stdin.readline().strip().split())\n x1 -= 1\n y1 -= 1\n x2 -= 1\n y2 -= 1\n pref2[x1][y1] += 1\n pref2[x2+1][y1] -= 1\n pref2[x1][y2+1] += -1\n pref2[x2+1][y2+1] -= -1\n \nfor i in range(m):\n for j in range(n):\n  if j == 0:\n   pref1[j][i] = pref2[j][i]\n  else:\n   pref1[j][i] = pref1[j-1][i] + pref2[j][i]\n \nfor i in range(n):\n for j in range(m):\n  if j == 0:\n   add[i][j] += pref1[i][j]\n  else:\n   add[i][j] = add[i][j-1] + pref1[i][j]\n \nfor i in range(n):\n for j in range(m):\n  arr[i][j] += add[i][j]\n  arr[i][j] %= 2\n \nfor i in range(n):\n for j in range(m):\n  print(arr[i][j], end='')\n print('')\n", "n,m=map(int,input().split())\nmat=[]\nfor _ in range(n):\n s=input()\n l=list(map(int,s))\n mat.append(l)\npref=[[0 for _ in range(m+1)] for _ in range(n+1)]\np=[[0 for _ in range(m)] for _ in range(n)]\nadd=[[0 for _ in range(m)] for _ in range(n)]\nfor _ in range(int(input())):\n x1,y1,x2,y2=map(int,input().split())\n pref[x1-1][y1-1]+=1\n pref[x2][y1-1]-=1\n pref[x1-1][y2]-=1\n pref[x2][y2]+=1\nfor i in range(n):\n for j in range(m):\n  if i==0:\n   p[i][j]=pref[i][j]\n  else:\n   p[i][j]=p[i-1][j]+pref[i][j]\nfor i in range(n):\n for j in range(m):\n  if j==0:\n   add[i][j]=p[i][j]\n  else:\n   add[i][j]=add[i][j-1]+p[i][j]\nfor i in range(n):\n for j in range(m):\n  mat[i][j]+=add[i][j]\n  mat[i][j]%=2\nfor i in range(n):\n for j in range(m):\n  print(mat[i][j],end=\"\")\n print()\n", "n, m = map(int, input().split())\na = []\nb = [0] * (m + 1)\nfor i in range(n + 1):\n a.append(b[:])\n# print(a[n - 1][m])\n# print(a[1][2])\n# print(a)\np = []\nfor i in range(n):\n r = input()\n q = []\n for j in range(len(r)):\n  q.append(int(r[j]))\n p.append(q[:])\n# print(p)\nq = int(input())\nwhile(q):\n i, j, k, l = map(int, input().split())\n a[i - 1][j - 1] += 1\n a[i - 1][l] -= 1\n a[k][j - 1] -= 1\n # print(k - 1, l)\n a[k][l] += 1\n q -= 1\nc = 0\n# print(a)\nfor j in range(m + 1):\n for i in range(n + 1):\n  c += a[i][j]\n  a[i][j] = c\n\nfor i in range(n):\n for j in range(m):\n  c += a[i][j]\n  if(c % 2 == 1):\n   if(p[i][j] == 1):\n    p[i][j] = 0\n   else:\n    p[i][j] = 1\n c += a[i][m]\n# print(a)\nfor i in range(n):\n for j in range(m):\n  print(p[i][j], end=\"\")\n print()\n", "# cook your dish here\nimport sys\n \nn, m = map(int, sys.stdin.readline().strip().split())\n \narr = []\nfor i in range(n):\n s = input() + \"0\"\n temp = []\n for x in s:\n  temp += [int(x)]\n arr += [temp]\n \narr += [[0]*(m+1)]\n \nadd = [[0 for i in range(m+1)] for j in range(n+1)]\npref1 = [[0 for i in range(m+1)] for j in range(n+1)]\npref2 = [[0 for i in range(m+1)] for j in range(n+1)]\n \nq = int(sys.stdin.readline().strip())\nfor _ in range(q):\n x1, y1, x2, y2 = map(int, sys.stdin.readline().strip().split())\n x1 -= 1\n y1 -= 1\n x2 -= 1\n y2 -= 1\n pref2[x1][y1] += 1\n pref2[x2+1][y1] -= 1\n pref2[x1][y2+1] += -1\n pref2[x2+1][y2+1] -= -1\n \nfor i in range(m):\n for j in range(n):\n  if j == 0:\n   pref1[j][i] = pref2[j][i]\n  else:\n   pref1[j][i] = pref1[j-1][i] + pref2[j][i]\n \nfor i in range(n):\n for j in range(m):\n  if j == 0:\n   add[i][j] += pref1[i][j]\n  else:\n   add[i][j] = add[i][j-1] + pref1[i][j]\n \nfor i in range(n):\n for j in range(m):\n  arr[i][j] += add[i][j]\n  arr[i][j] %= 2\n \nfor i in range(n):\n for j in range(m):\n  print(arr[i][j], end='')\n print('')\n", "import sys\n \nn, m = map(int, sys.stdin.readline().strip().split())\n \narr = []\nfor i in range(n):\n s = input() + \"0\"\n temp = []\n for x in s:\n  temp += [int(x)]\n arr += [temp]\n \narr += [[0]*(m+1)]\n \nadd = [[0 for i in range(m+1)] for j in range(n+1)]\npref1 = [[0 for i in range(m+1)] for j in range(n+1)]\npref2 = [[0 for i in range(m+1)] for j in range(n+1)]\n \nq = int(sys.stdin.readline().strip())\nfor _ in range(q):\n x1, y1, x2, y2 = map(int, sys.stdin.readline().strip().split())\n x1 -= 1\n y1 -= 1\n x2 -= 1\n y2 -= 1\n pref2[x1][y1] += 1\n pref2[x2+1][y1] -= 1\n pref2[x1][y2+1] += -1\n pref2[x2+1][y2+1] -= -1\n \nfor i in range(m):\n for j in range(n):\n  if j == 0:\n   pref1[j][i] = pref2[j][i]\n  else:\n   pref1[j][i] = pref1[j-1][i] + pref2[j][i]\n \nfor i in range(n):\n for j in range(m):\n  if j == 0:\n   add[i][j] += pref1[i][j]\n  else:\n   add[i][j] = add[i][j-1] + pref1[i][j]\n \nfor i in range(n):\n for j in range(m):\n  arr[i][j] += add[i][j]\n  arr[i][j] %= 2\n \nfor i in range(n):\n for j in range(m):\n  print(arr[i][j], end='')\n print('')\n", "import sys\nimport bisect\n#input=sys.stdin.readline\n#t=int(input())\nt=1\nfor _ in range(t):\n n,m=map(int,input().split())\n #n=int(input())\n l=[]\n #l=list(map(int,input().split()))\n arr=[[0 for j in range(m+2)] for i in range(n+2)]\n for i in range(n):\n  l.append(input())\n #print(arr)        \n q=int(input())\n for __ in range(q):\n  x1,y1,x2,y2=map(int,input().split())\n  arr[x1][y1]+=1;\n  arr[x2+1][y1]-=1\n  arr[x1][y2+1]-=1\n  arr[x2+1][y2+1]+=1\n for i in range(1,n+1):\n  for j in range(1,m+1):\n   x1=(arr[i-1][j]+arr[i][j-1])\n   y1=(x1-arr[i-1][j-1])\n   arr[i][j]=(arr[i][j]+y1)\n   \n   #arr[i][j]%=2\n   print((arr[i][j]+int(l[i-1][j-1]))%2,end=\"\")\n  print() \n print() \n  ", "n,m=map(int,input().split())\nmat=[]\nfor i in range(n):\n me=[int(i) for i in list(input())]\n mat.append(me)\ndummy=[[0 for i in range(m+1)] for j in range(n+1)]\nq=int(input())\nfor i in range(q):\n x1,y1,x2,y2=map(int,input().split())\n dummy[x1-1][y1-1]+=1\n dummy[x2][y1-1]-=1 \n dummy[x2][y2]+=1 \n dummy[x1-1][y2]-=1\nfor i in range(n+1):\n for j in range(m+1):\n  if j==0:\n   continue\n  else:\n   dummy[i][j]+=dummy[i][j-1]\nfor j in range(m+1): \n for i in range(n+1): \n  if i==0:\n   continue \n  else:\n   dummy[i][j]+=dummy[i-1][j]\nfor i in range(n):\n for j in range(m):\n  print((mat[i][j]+dummy[i][j]+2)%2,end=\"\")\n print()\nprint()", "\nn,m= map(int,input().split())\nMX=list()\nfor i in range(n):\n YYY=str(input())\n yy=list(YYY)\n a=[]\n for j in range(m):\n  a.append(yy[j])\n MX.append(a)\n\nq=int(input())\ndp=[[0 for i in range(m)]for i in range(n)]\nfor _ in range(q):\n x,y,x2,y2=map(int,input().split())\n dp[x-1][y-1]+=1\n if x2<n:\n  dp[x2][y-1]-=1\n if y2<m:\n  dp[x-1][y2]-=1\n if x2<n and y2<m:\n  dp[x2][y2]-=1\n\n\nfor i in range(n):\n for j in range(1,m):\n  dp[i][j]+=dp[i][j-1]\n\nfor i in range(m):\n for j in range(1,n):\n  dp[j][i]+=dp[j-1][i]\n\n# print(dp)\n# print(MX)\nfor i in range(n):\n for j in range(m):\n  if dp[i][j]%2==1:\n   if MX[i][j]=='0':\n    MX[i][j]='1'\n   else:\n    MX[i][j]='0'\n\n  \n\nfor i in range(n):\n for j in range(m):\n   print(MX[i][j],end=\"\")\n\n print()\n", "import sys\ndef get_array(): return list(map(int , sys.stdin.readline().strip().split()))\ndef get_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\nimport math\nfrom collections import defaultdict\n\nn, m = get_ints()\na = []\narr = [[0 for _ in range(m+2)] for _ in range(n+2)]\nfor _ in range(n):\n  # t = get_array()\n t = list(input())\n # t.append('0')\n a.append(t)\n\nfor i in range(n):\n for j in range(m):\n  a[i][j] = int(a[i][j])\n\n# print(a)\n# print(arr)\n\n\nq = int(input())\nfor _ in range(q):\n x1,y1,x2,y2 = get_ints()\n # x1-=1\n # y1-=1\n # x2-=1\n # y2-=1\n arr[x1][y1]+=1\n arr[x2+1][y2+1]+=1\n arr[x1][y2 + 1]-=1\n arr[x2 + 1][y1]-=1\n\n# print(\"hello \",arr)\n\nfor i in range(1,n+1):\n for j in range(1,m+1):\n  arr[i][j] += arr[i - 1][j] + arr[i][j - 1] - arr[i - 1][j - 1]\n  if(a[i-1][j-1] == 0 and arr[i][j]%2==0):\n   a[i-1][j-1] = 0\n  elif(a[i-1][j-1] == 1 and arr[i][j]%2 == 0):\n   a[i-1][j-1] = 1\n  elif(a[i-1][j-1] == 0 and arr[i][j]%2==1):\n   a[i-1][j-1] = 1\n  elif(a[i-1][j-1] == 1 and arr[i][j]%2==1):\n   a[i-1][j-1] = 0\n\n# print(arr)\n# print(a)\n\n# for i in range(n):\n#     for j in range(m):\n#         print(a[i][j],end = \"\")\n#     print()\n\nfor i in range(n):\n print(''.join(map(str,a[i])))\n\n\n\n\n", "import sys\ndef get_array(): return list(map(int , sys.stdin.readline().strip().split()))\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\ndef input(): return sys.stdin.readline().strip()\nimport math\nfrom collections import defaultdict\n\nn, m = get_ints()\na = []\narr = [[0 for _ in range(m+2)] for _ in range(n+2)]\nfor _ in range(n):\n  # t = get_array()\n t = list(input())\n # t.append('0')\n a.append(t)\n\nfor i in range(n):\n for j in range(m):\n  a[i][j] = int(a[i][j])\n\n# print(a)\n# print(arr)\n\n\nq = int(input())\nfor _ in range(q):\n x1,y1,x2,y2 = get_ints()\n # x1-=1\n # y1-=1\n # x2-=1\n # y2-=1\n arr[x1][y1]+=1\n arr[x2+1][y2+1]+=1\n arr[x1][y2 + 1]-=1\n arr[x2 + 1][y1]-=1\n\n# print(\"hello \",arr)\n\nfor i in range(1,n+1):\n for j in range(1,m+1):\n  arr[i][j] += arr[i - 1][j] + arr[i][j - 1] - arr[i - 1][j - 1]\n  if(a[i-1][j-1] == 0 and arr[i][j]%2==0):\n   a[i-1][j-1] = 0\n  elif(a[i-1][j-1] == 1 and arr[i][j]%2 == 0):\n   a[i-1][j-1] = 1\n  elif(a[i-1][j-1] == 0 and arr[i][j]%2==1):\n   a[i-1][j-1] = 1\n  elif(a[i-1][j-1] == 1 and arr[i][j]%2==1):\n   a[i-1][j-1] = 0\n\n# print(arr)\n# print(a)\n\nfor i in range(n):\n for j in range(m):\n  print(a[i][j],end = \"\")\n print()\n\n# for i in range(n):\n#     print(''.join(map(str,a[i])))\n\n\n\n\n", "import sys\nn,m=map(int,input().split())\ndp=[[0 for j in range(m+2)] for k in range(n+2)]\na=[]\nfor j in range(n):\n t=sys.stdin.readline().strip()\n a.append(list(t))\nq=int(input())\nfor j in range(0,q):\n x1,y1,x2,y2=map(int,sys.stdin.readline().split())\n dp[x1][y1]+=1\n dp[x2+1][y2+1]+=1\n dp[x1][y2+1]-=1\n dp[x2+1][y1]-=1\n#print(dp)\nfor j in range(1,n+1):\n for k in range(1,m+1):\n  dp[j][k]=dp[j][k]+dp[j-1][k]+dp[j][k-1]-dp[j-1][k-1]\n  #print(dp[j][k],a[j-1][k-1])\n  if dp[j][k]%2!=0:\n   a[j-1][k-1]=int(a[j-1][k-1])^1\nfor j in range(n):\n print(''.join(map(str,a[j])))", "import sys\nn,m=map(int,input().split())\ndp=[[0 for j in range(m+2)] for k in range(n+2)]\na=[]\nfor j in range(n):\n t=sys.stdin.readline().strip()\n a.append(list(t))\n#print(a)\nq=int(input())\nfor j in range(0,q):\n x1,y1,x2,y2=map(int,sys.stdin.readline().split())\n dp[x1][y1]+=1\n dp[x2+1][y2+1]+=1\n dp[x1][y2+1]-=1\n dp[x2+1][y1]-=1\n#print(dp)\nfor j in range(1,n+1):\n for k in range(1,m+1):\n  dp[j][k]=dp[j][k]+dp[j-1][k]+dp[j][k-1]-dp[j-1][k-1]\n  #print(dp[j][k],a[j-1][k-1])\n  if dp[j][k]%2!=0:\n   a[j-1][k-1]=int(a[j-1][k-1])^1\nfor j in range(n):\n print(''.join(map(str,a[j])))"]