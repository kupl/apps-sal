["import sys\n\ns1, s2 = input().split()\nn = int(input())\n\nfor _ in range(n):\n    print(s1, s2)\n    killed, new = input().split()\n    if s1 == killed:\n        s1 = new\n    else:\n        s2 = new\n\nprint(s1, s2)\n", "def main():\n\ta, b = map(str, input().split())\n\tn = int(input())\n\tprint(a, b)\n\tfor i in range(n):\n\t\tx, y = map(str, input().split())\n\t\tif (x == a):\n\t\t\ta = y\n\t\telse:\n\t\t\tb = y\n\t\tprint(a, b)\n\n\nmain()", "a,b=input().split()\nprint(a,b)\nfor i in range(int(input())):\n    c,d=input().split()\n    if a==c:\n        a=d\n    elif b==c:\n        b=d\n    print(a,b)\n", "import collections as col\nimport itertools as its\nimport copy\n\n\ndef main():\n    s = set()\n    a, b = input().split(' ')\n    s.add(a)\n    s.add(b)\n    n = int(input())\n    for i in range(n):\n        print(' '.join(list(s)))\n        a, b = input().split()\n        s.remove(a)\n        s.add(b)\n    print(' '.join(list(s)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "3\n\nnames = input().split()\nn = int(input())\nfor i in range(n):\n    print(' '.join(names))\n    sep = input().split()\n    if names[0] == sep[0]:\n        names[0] = sep[1]\n    if names[1] == sep[0]:\n        names[1] = sep[1]\n    \nprint(' '.join(names))\n", "n, m = input().split()\nk = int(input())\nprint(n, m)\nfor i in range(k):\n    nn, nm = input().split()\n    if nn == n:\n        n = nm\n    else:\n        m = nm\n    print(n, m)\n", "l = input().split()\nprint(*l)\nn = int(input())\nfor i in range(n):\n\tt = input().split()\n\ti = 0\n\tif l[1] == t[0]:\n\t\ti = 1\n\tl[i] = t[1]\n\tprint(*l)\n\n", "3\n\ns, t = input().split()\nprint(s, t)\nn = int(input())\nfor i in range(n):\n    w, y = input().split()\n    if s == w:\n        s = y\n    else:\n        t = y\n    print(s, t)\n    \n", "a, b = input().split()\nn = int(input())\n\ncouples = []\n\nfor i in range(n):\n\tcouples.append(input().split())\n\nfor j in range(n):\n\tprint(a, b)\n\tif couples[j][0] == a:\n\t\ta = couples[j][1]\n\telse:\n\t\tb = couples[j][1]\n\nprint(a, b)", "X,Y = input().split()\nprint(X, Y)\nfor i in range(int(input())):\n\tA, B = input().split()\n\tif X==A: X = B\n\telif Y==A: Y = B\n\tprint(X,Y)\n\n", "import sys\n\nfin = sys.stdin\nfout = sys.stdout\ncur = fin.readline().split()\nn = int(fin.readline())\nfout.write(' '.join(cur) + '\\n')\nfor i in range(n):\n    curS = fin.readline().split()\n    pos = cur.index(curS[0])\n    cur[pos] = curS[1]\n    fout.write(' '.join(cur) + '\\n')", "names = input().split()\nn = int(input())\nprint(\" \".join(names))\nfor i in range(n):\n    died, new = input().split()\n    \n    if died == names[0]:\n        names = [new, names[1]]\n    else:\n        names = [names[0], new]\n        \n    print(\" \".join(names))", "s1, s2 = input().split()\n\nn = int(input())\nfor i in range(n):\n    print(s1, s2)\n    killed, new = input().split()\n    if s1 == killed:\n        s1 = new\n    else:\n        s2 = new\n        \nprint(s1, s2)", "victims = input().split()\nprint(\" \".join(victims))\nn = int(input())\nfor i in range(n):\n    killed, replaced = input().split()\n    if victims[0] == killed:\n        victims[0] = replaced\n    else:\n        victims[1] = replaced\n    print(\" \".join(victims))\n", "a, b=input().split()\nprint(a, b)\n\nfor _ in range(int(input())):\n\tc, d=input().split()\n\tif a==c:\n\t\ta=d\n\telse:\n\t\tb=d\n\tprint(a, b)\n", "from sys import stdin\n\nname1, name2 = [x.strip() for x in input().split()]\nn = int(input())\nprint(name1, name2)\nd = {name1, name2}\nfor i in range(n):\n    n1, n2 = [x.strip() for x in input().split()]\n    d.discard(n1)\n    d.add(n2)\n    ans = ' '.join(d)\n    print(ans)", "a, b = input().strip().split()\nn = int(input())\nfor i in range(n):\n    print(a, b)\n    c, d = input().strip().split()\n    if a == c:\n        a = d\n    else:\n        b = d\nprint(a, b)\n", "name1, name2 = input().split()\n\nn = int(input())\n\nfor i in range(n):\n    print(name1, name2)\n    killed, new = input().split()\n    if killed == name1:\n        name1 = new\n    else:\n        name2 = new\n\nprint(name1, name2)\n", "a,b=input().split()\nn=int(input())\nprint(a,b)\nfor i in range(n):\n    c,d=input().split()\n    if c==a:a=d\n    else:b=d\n    print(a,b)\n", "s1, s2 = list(map(str, input().split()))\nl = []\nl += [s1, s2]\nn = int(input())\nfor i in range(n):\n    s3, s4 = list(map(str, input().split()))\n    if s1 == s3:\n        s1 = s4\n    else:\n        s2 = s4\n    l += [s1, s2]\nfor i in range(2 * n + 2):\n    if i % 2 == 0:\n        print(l[i], l[i + 1])", "a, b = input().split()\nn = int(input())\nprint(a, b)\nfor i in range(n):\n    c, d = input().split()\n    if c == a:\n        a = d\n    else:\n        b = d\n    print(a, b)\n", "n1, n2 = input().split()\n\nn = int(input())\nnames = [input().split() for i in range(n)]\n\nsel = set([n1, n2])\nfor killed, next in names:\n    print(\" \".join(sel))\n    sel.remove(killed)\n    sel.add(next)\nprint(\" \".join(sel))\n", "a, b = input().split()\nN = int(input())\nprint(a, b)\nfor n in range(N):\n\tc, d = input().split()\n\tif c == a:\n\t\ta = d\n\telif c == b:\n\t\tb = d\n\telif d == a:\n\t\ta = c\n\telif d == b:\n\t\tb = c\n\tprint(a, b)", "ss = input().split()\n\nN = int ( input() )\n\n\nprint( ss[0] , ss[1] )\n\nfor x in range(N):\n\t\n\tzz = input().split()\n\tif ( zz[0] == ss[0] ):\n\t\tss[0] = zz[1]\n\telse :\n\t\tss[1] = zz[1]\n\tprint( ss[0] , ss[1] )\n\t\t\n\n", "a=input().split()\nn=int(input())\nfor i in range(n):\n    print(a[0],a[1])\n    s1,s2=input().split()\n    a[a.index(s1)]=s2\nprint(a[0],a[1])"]