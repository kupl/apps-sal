["\ndef main():\n t = int(input())\n while (t):\n  m, n = map(int, input().split())\n  a , b= bin(m)[2:],bin(n)[2:]\n  #print(a,b)\n  max = m^n\n  if len(a)>len(b):\n   diff =len(a)-len(b)\n   b= (\"0\"*diff)+b\n   #print(b)\n  elif len(a)<len(b):\n   diff =len(b)-len(a)\n   a= (\"0\"*diff)+a\n   #print(a)\n  ll = len(b)\n  count= 0\n  for i in range(ll-1):\n   s= b[ll-1] + b\n   s= s[:ll]\n\n   tt= m^ int(s,2)\n   #print(m,s,tt)\n   if tt>max:\n    max =tt\n    count= i+1\n   b=s\n\n  print(count,max)\n  t-=1\n\ndef __starting_point():\n main()\n__starting_point()", "def bitLen(int_type):\n length = 0\n while (int_type):\n  int_type >>= 1\n  length += 1\n return(length)\ndef rot(b):\n b=b[-1]+b[:-1]\n return b\nfor __ in range(int(input())):\n ans=0\n r=0\n x=0\n c=0\n a, b = map(int, input().split())\n if a>=b:\n  r = bitLen(a)\n  b=(bitLen(a)-bitLen(b))*'0'+bin(b).replace('0b','')\n  a=bin(a).replace('0b','')\n else:\n  r = bitLen(b)\n  a = (bitLen(b) - bitLen(a)) * '0' + bin(a).replace('0b', '')\n  b = bin(b).replace('0b', '')\n for d in range(r):\n  x=int(a,2)^int(b,2)\n  b=rot(b)\n  if ans < x:\n   ans=x\n   c=d\n print(c,ans)", "try:\n def ts(s):  \n  str1 = \"\" \n  for ele in s:  \n   str1 += ele \n  return str1 \n \n for _ in range(int(input())):\n  x,y=[int(x) for x in input().split()]\n  x=list(bin(x).replace(\"0b\", \"\"))\n  y=list(bin(y).replace(\"0b\",\"\"))\n  xl=len(x)\n  yl=len(y)\n  if(xl<yl):\n   for __ in range(yl-xl):\n    x.insert(0,'0')\n  else:\n   for __ in range(xl-yl):\n    y.insert(0,'0') \n  l=len(x)\n  xor=-1\n  rotations=-1\n  for i in range(l):\n   temp_xor=int(ts(x),2)^int(ts(y),2)\n   if(temp_xor>xor):\n    xor=temp_xor\n    rotations=i\n   temp=x.pop\n   y.insert(0,y.pop())\n  print(rotations,xor)\n  \nexcept:\n pass", "t = int(input())\nwhile(t):\n a, b = map(int ,input().split())\n stra = bin(a).replace(\"0b\", \"\")\n strb = bin(b).replace(\"0b\",\"\")\n if(len(stra) == len(strb)):\n  pass\n elif(len(stra) > len(strb)):\n  addi = len(stra) - len(strb)\n  for i in range(addi):\n   strb = '0' + strb\n else:\n  addi = len(strb) - len(stra)\n  for i in range(addi):\n   stra = '0'+ stra\n n = len(strb)\n maxi = int(stra, 2) ^ int(strb, 2)\n i = 0\n indi = 0\n tem = strb[-1] + strb[0:n-1]\n while(tem != strb):\n  c = int(stra, 2) ^ int(tem, 2)\n  i += 1\n  if(c >= maxi):\n   maxi = c\n   indi = i\n  tem = tem[-1] + tem[0:n-1]\n print(indi, maxi)\n t = t - 1", "# cook your dish here\nfor i in range(int(input())):\n a,b=map(int, input().split())\n b=bin(b)[2:]\n b=list(map(str, b))\n for j in range (len(str(bin(a)[2:]))-len(b)):\n  b.insert(0,\"0\")\n xor=a^int((\"\".join(b)),2)\n max=xor\n c=0\n for j in range(len(b)-1):\n  b = (b[-1:] + b[:-1])\n  xor=a^int((\"\".join(b)),2)\n  if xor>max:\n   max=xor\n   c=j+1\n print(c, max)", "\ndef bint(var):\n decimale = 0\n l = len(var)\n for i in range(l):\n  decimale += int(var[i])*(2**(l-i-1))\n return decimale\n \n \nt = int(input())\nfor _ in range(t):\n a, b = map(int, input().split())\n a = bin(a)[2:]\n b = bin(b)[2:]\n if(len(a) > len(b)):\n  b = \"0\"*(len(a)-len(b)) + b\n elif(len(b) > len(a)):\n  a = \"0\"*(len(b)-len(a)) + a\n l = len(a)\n res =0\n val = bint(a)^bint(b)\n temp = b[-1] + b[:l-1]\n x = 1\n while(x < l):\n  if(bint(a)^bint(temp) > val):\n   val = bint(a)^bint(temp)\n   res = x\n  temp = temp[-1] + temp[:l-1]\n  x += 1\n print(res, val)", "from math import log2\ndef rotate(n, bits):\n if(n&1):\n  n = n>>1 | 1<<bits\n else:\n  n = n >> 1\n return n\nt = int(input())\nwhile(t > 0):\n t -= 1\n max_xor = 0\n count = 0\n max_count = 0\n a, b = map(int, input().split())\n a_bits = int(log2(a)+1)\n b_bits = int(log2(b)+1)\n if(a_bits > b_bits):\n  bits = a_bits\n else:\n  bits = b_bits\n c = bits\n bits -= 1\n while(c > 0):\n  c -= 1\n  c_xor = a^b\n  if(c_xor > max_xor):\n   max_xor = c_xor\n   max_count = count\n  b = rotate(b, bits)\n  count += 1\n print(max_count, max_xor)", "def dec(n):  \n return bin(n).replace(\"0b\", \"\")\ndef ss(str):\n if len(str) <= 1:\n  return str\n mid = str[1:len(str)]\n return mid + str[0]\ndef btd(q):      \n q1 = q \n decimal, i, n = 0, 0, 0\n while(q != 0): \n  dec = q % 10\n  decimal = decimal + dec * (2**i) \n  q= q//10\n  i += 1\n return(decimal) \nt=int(input())\nfor iw in range(0,t):\n a=input()\n arr=[]\n \n we=[]\n x=a.split()\n string=str(dec(int(x[1])))\n string2=str(dec(int(x[0])))\n d=int(x[0])\n if(len(string)>len(string2)):\n  l=len(string)\n else:\n  l=len(string2)\n  for lk in range(0,len(string2)-len(string)):\n   string='0'+string\n for k in range(0,l):\n  c=int(x[1])\n  arr.append(d^c)\n  string=ss(string)\n  x[1]=btd(int(string))\n for h in range(0,len(arr)):\n  if(max(arr)==arr[h]):\n   if(h==0):\n    we.append(0)\n    break\n   else:\n    we.append(len(arr)-h)\n print(min(we),max(arr))", "t=int(input())\nwhile(t):\n l=input().split()\n a=int(l[0])\n b=int(l[1])\n a=str(bin(a).replace(\"0b\",\"\"))\n b=str(bin(b).replace(\"0b\",\"\"))\n if(len(a)!=len(b)):\n  if(len(a)>len(b)):\n   m=len(a)-len(b)\n   b=(\"0\"*m)+b\n  else:\n   m=len(b)-len(a)\n   a=(\"0\"*m)+a\n l=len(b)\n s1=b.count('1')\n s2=b.count('0')\n if(l==s1 or l==s2):\n  j=int(a)^int(b)\n  k=int(str(j),2)\n  print(0,k)\n else:\n  l1=[]\n  o=int(a,2)\n  p=int(b,2)\n  q=o^p\n  l1.append(q)\n  for i in range(1,l):\n   b=b[-1]+b[0:-1]\n   c=int(b,2)\n   l1.append(o^c)\n  maxx=max(l1)\n  print(l1.index(maxx),maxx)\n t-=1", "try:\n def right_shift(x):\n  temp = x+x\n  return temp[len(x)-1:2*len(x)-1]\n \n for i in range(int(input())):    \n  a , b = map(int,input().split(\" \"))\n  a,b=bin(a)[2:] , bin(b)[2:]\n \n  if(len(a)<len(b)):\n   diff = len(b)-len(a)\n   a=\"0\"*diff+a\n  elif(len(b)<len(a)):\n   diff = len(a)-len(b)\n   b=\"0\"*diff+b \n \n  a=int(a,2) \n  maxi = a^int(b,2) \n  steps=0\n \n  for i in range(1,len(b)):    \n   b=right_shift(b) \n  \n   if(a^int(b,2)>maxi):\n    maxi=a^int(b,2)\n    steps = i\n \n  print(steps,maxi)\nexcept:\n pass", "# cook your dish here\ndef right_shift(x):\n temp = x+x\n return temp[len(x)-1:2*len(x)-1]\n \nfor i in range(int(input())):    \n a , b = map(int,input().split(\" \"))\n a,b=bin(a)[2:] , bin(b)[2:]\n \n if(len(a)<len(b)):\n  diff = len(b)-len(a)\n  a=\"0\"*diff+a\n elif(len(b)<len(a)):\n  diff = len(a)-len(b)\n  b=\"0\"*diff+b \n \n a=int(a,2) \n maxi = a^int(b,2) \n steps=0\n \n for i in range(1,len(b)):    \n  b=right_shift(b) \n  \n  if(a^int(b,2)>maxi):\n   maxi=a^int(b,2)\n   steps = i\n \n print(steps,maxi)", "# cook your dish here\ntry:\n def dectobin(a):\n  r=[int(i) for i in bin(a)[2:]]\n  return r\n def bintodec(a):\n  r=int(\"\".join(str(x) for x in a),2)\n  return r\n def s(a):\n  a=[a[-1]]+a[:-1]\n  return a\n for i in range(int(input())):\n  a,b=map(int,input().split())\n  bina=dectobin(a)\n  binb=dectobin(b)\n  ans=[]\n  ans.append(a^b)\n  bits=len(bina)-len(binb)\n  if bits<0:\n   for j in range(bits):\n    bina.insert(0,0)\n  elif bits>0:\n   for j in range(bits):\n    binb.insert(0,0)\n  for j in range(len(binb)):\n   binb=s(binb)\n   b=bintodec(binb)\n   ans.append(a^b)\n  print(ans.index(max(ans)),max(ans))\nexcept:\n pass", "def right_shift(x):\n temp = x+x\n return temp[len(x)-1:2*len(x)-1]\n \nfor i in range(int(input())):    \n a , b = map(int,input().split(\" \"))\n a,b=bin(a)[2:] , bin(b)[2:]\n \n if(len(a)<len(b)):\n  diff = len(b)-len(a)\n  a=\"0\"*diff+a\n elif(len(b)<len(a)):\n  diff = len(a)-len(b)\n  b=\"0\"*diff+b \n \n a=int(a,2) \n maxi = a^int(b,2) \n steps=0\n \n for i in range(1,len(b)):    \n  b=right_shift(b) \n  \n  if(a^int(b,2)>maxi):\n   maxi=a^int(b,2)\n   steps = i\n \n print(steps,maxi)", "for _ in range(int(input())):\n a,b=list(map(int,input().split()))\n ab=bin(a)[2:]\n bb=bin(b)[2:]\n n=abs(len(bb)-len(ab))\n if n>0:\n  if len(bb)>len(ab):\n   ab = \"0\"*n + ab\n  else:\n   bb = \"0\"*n + bb\n m=0\n count=0\n for i in range(len(bb)):\n  l=int(ab,2)^int(bb,2)\n  if l>m:\n   m=l\n   count=i\n  bb =bb[-1] + bb\n  bb=bb[:-1]\n  \n print(count,m)\n", "# cook your dish here\nfor i in range(int(input())):\n A,B=map(int, input().split())\n B=bin(B)[2:]\n B=list(map(str, B))\n for j in range (len(str(bin(A)[2:]))-len(B)):\n  B.insert(0,\"0\")\n xor=A^int((\"\".join(B)),2)\n max=xor\n c=0\n for j in range(len(B)-1):\n  B = (B[-1:] + B[:-1])\n  xor=A^int((\"\".join(B)),2)\n  if xor>max:\n   max=xor\n   c=j+1\n print(c, max)", "t=int(input())\nwhile(t):\n t-=1\n a,b=list(map(int,input().split()))\n a=bin(a).replace(\"0b\",\"\")\n b=bin(b).replace(\"0b\",\"\")\n s1=len(a)\n s2=len(b)\n if(s1!=s2):\n  if(s1>s2):\n   f=s1-s2\n   b=(f*'0')+b\n  else:\n   f=s2-s1\n   a=(f*'0')+a\n s1=len(a)\n s2=len(b)\n t1=b.count('1')\n t2=b.count('0')\n if(s2==t1 or s2==t2):\n  n=int(a)^int(b)\n  m=int(str(n),2)\n  print(0,m)\n else:\n  v=[]\n  g=int(a,2)\n  h=int(b,2)\n  j=g^h\n  v.append(j)\n  for i in range(1,len(b)):\n   b=b[-1]+b[0:-1]\n   c=int(b,2)\n   v.append(g^c)\n  y=max(v)\n  print(v.index(y),y)\n", "import math\nt = int(input())\nfor ti in range(t):\n a,b = map(int,input().split())\n mx = max(a,b)\n bit = int((math.log(mx) / math.log(2)) + 1)\n num = pow(2,bit) - 1\n res = a^b \n cnt = 0\n rot = 0\n for i in range(1,bit):\n  if b%2==0:\n   b//=2\n  else:\n   b+=num \n   b//=2\n  ans = a^b\n  cnt+=1\n  if ans>res:\n   res=ans\n   rot=cnt\n print(str(rot)+\" \"+str(res))"]