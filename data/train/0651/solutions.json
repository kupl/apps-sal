["# cook your dish here\ntry:\n for i in range(int(input())):\n  n=int(input())\n  l=[int(j) for j in input().split()][:n]\n  d={}\n  for j in l:\n   d[j]=d.get(j,0)+1\n  a=len(d)\n  c=0\n  for j in list(d.keys()):\n   while(d[j]>=3):\n    d[j]=(d[j]//3)+(d[j]%3)\n   if(d[j]==2):\n    c=c+1\n  if(c&1):\n   s=0\n   for j in list(d.values()):\n    s=s+j\n   print(s-c-1)\n  else:\n   s=0\n   for j in list(d.values()):\n    s=s+j\n   print(s-c)\nexcept:\n pass\n    \n", "\ndef ans(n,dic):\n count=0\n remain=0\n for i in dic:\n  if dic[i]%2==1:\n   count+=1\n  else:\n   remain+=1\n if remain%2==1:\n  count+=remain-1\n else:\n  count+=remain\n return count\nt=int(input())\nfor w in range(t):\n n=int(input())\n arr=[int(x) for x in input().split()]\n dic={}\n for i in arr:\n  try:\n   dic[i]+=1\n  except:\n   dic[i]=1\n print(ans(n,dic))", "\ndef ans(n,dic):\n count=0\n remain=0\n for i in dic:\n  if dic[i]%2:\n   count+=1\n  else:\n   remain+=1\n if remain%2:\n  count+=remain-1\n else:\n  count+=remain\n return count\nt=int(input())\nfor w in range(t):\n n=int(input())\n arr=[int(x) for x in input().split()]\n dic={}\n for i in arr:\n  try:\n   dic[i]+=1\n  except:\n   dic[i]=1\n print(ans(n,dic))", "# -*- coding: utf-8 -*-\n\"\"\"\n@author: souradeep1999\n\n\"\"\"\n\nimport math as ma\ndef num():\n return list(map(int , input().split()))\ndef nu():\n return int(input())\ndef li():\n return input().split()\ndef lli ():\n return list (map (int, input ().split ()))\ndef fli():\n return [float(x) for x in input().split()]\n\nt = nu()\nfor tt in range(t):\n n = nu()\n a = lli()\n a.sort()\n d = 1\n for i in range(1, n):\n  if(a[i] != a[i - 1]):\n   d = d + 1\n cnt = 0\n c = 1\n for i in range(1, n):\n  if(a[i] == a[i - 1]):\n   c = c + 1\n  else:\n   if(c % 2 == 0):\n    cnt = cnt + 1\n   c = 1\n if(c % 2 == 0):\n  cnt = cnt + 1;\n\n if(cnt % 2 == 1):\n  d = d - 1\n\n print(d)\n", "def chk(n):\n return (n%2)\ndef ans(n,dic):\n count=0\n remain=0\n for i in dic:\n  if chk(dic[i]):\n   count+=1\n  else:\n   remain+=1\n if chk(remain):\n  count+=remain-1\n else:\n  count+=remain\n return count\nt=int(input())\nfor w in range(t):\n n=int(input())\n arr=[int(x) for x in input().split()]\n dic={}\n for i in arr:\n  try:\n   dic[i]+=1\n  except:\n   dic[i]=1\n print(ans(n,dic))", "def chk(n):\n return (n&1)\ndef ans(n,dic):\n count=0\n remain=0\n for i in dic:\n  if chk(dic[i]):\n   count+=1\n  else:\n   remain+=1\n if chk(remain):\n  count+=remain-1\n else:\n  count+=remain\n return count\nt=int(input())\nfor w in range(t):\n n=int(input())\n arr=[int(x) for x in input().split()]\n dic={}\n for i in arr:\n  try:\n   dic[i]+=1\n  except:\n   dic[i]=1\n print(ans(n,dic))", "# cook your dish here\nimport sys\ninput=sys.stdin.readline\nT=int(input())\nfor i in range (T):\n N=int(input())\n A=list(map(int,input().split()))\n B=[0 for i in range(N+1)]\n fc=0\n flag=0\n for i in A:\n  if (B[i]!=1):\n   fc=fc+1\n   B[i]=B[i]+1\n  else:\n   flag=flag+1\n if (flag%2==0):\n  print(fc)\n else:\n  print(max(fc-1,1))\n   \n   \n \n", "t = int(input())\nfor _ in range(t):\n n = int(input())\n cards = list(map(int,input().split()))\n unique_cards=set(cards)\n \n if (len(cards)-len(unique_cards))&1:\n  print(len(unique_cards)-1)\n else:\n  print(len(unique_cards))", "# cook your dish here\nt = int(input())\nfor z in range(t):\n n = int(input())\n arr = [int(i) for i in input().split()]\n s = len(set(arr))\n if((n-s)%2==0):\n  print(s)\n else:\n  print(s-1)", "for t in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n D={}\n for i in l:\n  if i in D:\n   D[i]+=1\n  else:\n   D[i]=1\n d={1:0,2:0,3:0}\n for i in list(D.values()):\n  if(i==1):\n   d[1]+=1\n  elif(i%2==0):\n   d[2]+=1\n  else:\n   d[3]+=1\n c=0\n for i in d:\n  if(i==1):\n   c=c+d[i]\n  elif(i==2):\n   if(d[2]%2==0):\n    c=c+d[2]\n   else:\n    c=c+d[2]-1\n  else:\n   c=c+d[3]\n print(c)\n", "tc=int(input())\nfor i in range(tc):\n length=int(input())\n l1=input().split()\n l1 = list(set(l1))\n new_length=len(l1)\n diff=length-new_length\n if diff%2==1:\n  diff=diff+1\n print(length-diff)", "tc=int(input())\nfor i in range(tc):\n length=int(input())\n l1=input().split()\n l1 = list(set(l1))\n new_length=len(l1)\n diff=length-new_length\n if diff%2==1:\n  diff=diff+1\n print(length-diff)", "for _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n d={}\n for i in l:\n  if i in d:\n   d[i]+=1\n  else:\n   d[i]=1\n nd={1:0,2:0,3:0}\n for i in list(d.values()):\n  if(i==1):\n   nd[1]+=1\n  elif(i%2==0):\n   nd[2]+=1\n  else:\n   nd[3]+=1\n c=0\n for i in nd:\n  if(i==1):\n   c=c+nd[i]\n  elif(i==2):\n   if(nd[2]%2==0):\n    c=c+nd[2]\n   else:\n    c=c+nd[2]-1\n  else:\n   c=c+nd[3]\n print(c)\n   \n", "# cook your dish here\nI=lambda:list(map(int,input().split()))\nt=I()[0]\nwhile(t):\n t-=1\n n=I()[0]\n arr=I()\n d={}\n for i in arr:\n  d[i]=0\n for i in arr:\n  d[i]+=1\n extra=0\n for i in list(d.keys()):\n  if(d[i]>1):\n   extra+=(d[i]-1)\n if(extra%2):\n  extra+=1\n print(n-extra)\n", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n arr = [int(i) for i in input().split()]\n arr1 = set(arr)\n dif = n - len(arr1)\n print(n - dif - (dif % 2))"]