["class Solution:\n    def baseNeg2(self, N: int) -> str:\n        # res = []\n        # x = N\n        # while x:\n        #     res.append(x & 1)\n        #     x = -(x >> 1)\n        # return \\\"\\\".join(map(str, res[::-1] or [0]))\n        \n        neg = [1 << i for i in range(1, 33, 2)]\n        for mask in neg:\n            if N & mask: N += mask*2\n        return bin(N)[2:]", "class Solution:\n    def baseNeg2(self, N):\n        res = []\n        while N != 0:\n            m = N %(-2)\n            if m == -1:\n                m = 1\n            N = (N-m) // (-2)\n            res.append(str(m))\n            \n        return ''.join(res[::-1]) or '0'", "class Solution:\n    def baseNeg2(self, N: int) -> str:\n        return str(bin((0xAAAAAAAAAAAAAAAA+N)^0xAAAAAAAAAAAAAAAA))[2:]"]