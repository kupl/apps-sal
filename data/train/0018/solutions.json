["import math\n\nT = int(input())\nfor _ in range(T):\n    n = int(input())\n    print(1/math.tan(math.pi/2/n))\n", "t=int(input())\nimport math as m\nwhile t:\n    t-=1\n    a=int(input())\n    print(1/(m.tan(m.pi/(2*a))))\n", "import sys\nimport math\n\nreadline = sys.stdin.readline\nread = sys.stdin.read\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    print(1 / math.tan(math.pi / (2 * n)))\n    return\n\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "#                                               |\n#   _` |  __ \\    _` |   __|   _ \\   __ \\    _` |   _` |\n#  (   |  |   |  (   |  (     (   |  |   |  (   |  (   |\n# \\__,_| _|  _| \\__,_| \\___| \\___/  _|  _| \\__,_| \\__,_|\n\nimport sys\nimport math\nimport operator as op\nfrom functools import reduce\n\ndef read_line():\n\treturn sys.stdin.readline()[:-1]\n \ndef read_int():\n\treturn int(sys.stdin.readline())\n\t\ndef read_int_line():\n\treturn [int(v) for v in sys.stdin.readline().split()]\n\ndef read_float_line():\n\treturn [float(v) for v in sys.stdin.readline().split()]\n\ndef ncr(n, r):\n    r = min(r, n-r)\n    numer = reduce(op.mul, range(n, n-r, -1), 1)\n    denom = reduce(op.mul, range(1, r+1), 1)\n    return numer / denom\n\ndef rad(x):\n\treturn math.pi*x/180\n\nt = read_int()\nfor i in range(t):\n\tn = read_int()\n\tans = 1/(math.tan(rad(180/(2*n))))\n\tprint(ans)", "import math\n\ndef sqare_size(n):\n    return 1/math.tan(math.pi/(2*n))\n\nt = int(input())\nfor _ in range(t):\n    print(sqare_size(int(input())))\n", "from math import *\n\nt = int(input())\nfor case in range(t):\n    n = int(input())\n    print(1/(tan(pi/(2*n))))\n", "import sys\nimport math\n\ninput = sys.stdin.readline\nflush = sys.stdout.flush\n\nfor _ in range(int(input())):\n\tn = int(input())\n\tprint(1.0 / math.tan(math.pi / (2.0 * n)))\n", "\"\"\"\narr = list(map(int, input().split()))\nn,k=map(int, input().split())\n\"\"\"\nimport math\nimport sys\n# input = sys.stdin.readline\n\n############ ---- Input Functions ---- ############\ndef inp():\n    return(int(input()))\ndef inlt():\n    return(list(map(int,input().split())))\ndef insr():\n    s = input()\n    return(list(s[:len(s) - 1]))\ndef invr():\n    return(list(map(int,input().split())))\n\ntest_cases = int(input())\nfor _ in range(test_cases):\n    sides = int(input())\n    sides *= 2\n    apothem = 1 / (2 * math.tan((180 / sides) * (math.pi/180)))   \n    print(2 * apothem)\n# for _ in range(test_cases):\n#     size = int(input())\n#     arr = inlt()\n#     maxx = -float('inf')\n#     temp = []\n#     max_diff = 0\n#     #Checks the maximum number and difference of decreasing numbers, the moment it increases again, it rechecks for a bigger difference\n#     for i in range(size):\n#         if arr[i] < maxx:\n#             max_diff = max(max_diff, maxx - arr[i])\n#         maxx = max(arr[i], maxx)\n#     i = 0\n#     index = 0\n#     while i < max_diff:\n#         i += 2 ** index\n#         index += 1\n#     print(index)\n", "import math\nT = int(input())\nfor i in range(T):\n    x = 2*int(input())\n    print(1/math.tan(math.pi/x))\n", "from math import cos, pi, sin\n\nfor _ in range(int(input())):\n    n = int(input())\n    alpha = pi / (n * 2)\n    print(cos(alpha) / sin(alpha))\n", "from math import tan, pi\nfor _ in range(int(input())):\n    n = int(input())\n    n *= 2\n    print(1/tan(pi/n))\n", "import math\nimport sys\n\n#sys.stdin = open(\"in.txt\")\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    n *= 2\n    a = (n - 2) * math.pi / n / 2\n    r = 1/2 * math.tan(a)\n    print(2*r)\n", "import math\nimport sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    theta = 2 * n\n    print(1 / math.tan(math.radians(360 / 4 / n)))", "from math import sin, pi\n\nn = int(input())\n\ndef f(a, b):\n    return sin((b * pi) / a) / sin(pi / a)\n\nfor _ in range(n):\n    m = int(input())\n    if m % 2 == 0:\n        print(\"%.12f\" % f(2 * m, m - 1))\n    else:\n        print(\"%.12f\" % f(2 * m, m))\n", "from math import*\nfor _ in range(int(input())):\n  n=int(input())\n  if n%2==0:\n    print(1/tan(radians(90/n)))", "from math import sin, pi, sqrt, tan\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n = read_int()\n    angle = pi / n / 2\n    r = 1 / tan(angle)\n    print('{:.9f}'.format(r))\n", "import math\n\nimport sys\ninput = sys.stdin.readline\n\nQ = int(input())\nQuery = [int(input()) for _ in range(Q)]\n\nfor N in Query:\n    if N%2 == 0:\n        print(1/math.tan(math.pi/(N*2)))", "import math\nt = int(input())\nfor i in range(0,t):\n    a = int(input())\n    pi = math.pi\n    print(round(1/math.tan(pi/(2*(a))),9))\n", "from math import cos,sin,pi\nt = int(input())\nfor test in range(t):\n    n = int(input())\n    if n == 2:\n        print(1.)\n    else:\n        print(sin(pi/n)/(1-cos(pi/n)))", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1/math.tan(math.pi/(2*n)))\n", "import random\nimport math\nLI = lambda: list(map(int,input().split()))\nMI = lambda: map(int,input().split())\nyes = lambda: print(\"Yes\")\nno = lambda: print(\"No\")\nI = lambda: list(input())\nJ = lambda x: \"\".join(x)\nII = lambda: int(input())\nSI = lambda: input()\n#---khan17---template\nt = II()\nfor q in range(t):\n\tn = II()\n\tR = 1/(2*math.sin(math.pi/(2*n)))\n\tr = math.sqrt(R**2-0.25)\n\tprint(2*r)", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    from math import sin, pi, cos\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N = int(input())\n        NN = N*2\n\n        print(cos(pi / NN) / sin(pi / NN))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nt = int(input())\n\n\nfor ti in range(t):\n\tn = int(input())\n\t# n is even\n\t# if n == 2:\n\t# \tprint(1)\n\ta = math.pi / (2*n)\n\tside = (1/math.tan(a))\n\tprint(side)\t\n\n\n# try:\n\n\t# raise Exception\n# except:\n\t# print(\"-1\")\n\t\n\n\n# thenos.sort(key=lambda x: x[2], reverse=True)\n\n# int(math.log(max(numbers)+1,2))\n# 2**3 (power)\n\n\n", "import math as m\n\ndef fu(a):\n    return (a/180)*m.pi\n\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=n//2-1\n    b=180-360/(2*n)\n    s=0\n    for i in range(1,a+1):\n        s=s+m.cos(fu(i*b-(2*i-1)*90))\n    print(2*s+1)", "import sys\nfrom math import tan, pi\n\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\nfrom itertools import islice, cycle\n\n\ndef go():\n    n = int(input())\n    # a,b,c,d = map(int, input().split())\n    # a = list(map(int, input().split()))\n    # s = input()\n\n    return  1/(tan(pi/(2*n)))\n\n\n# x,s = map(int,input().split())\nt = int(input())\n# t = 1\nans = []\nfor _ in range(t):\n    # print(go())\n    ans.append(str(go()))\n#\nprint('\\n'.join(ans))\n", "import math\n\nt=int(input())\n\nwhile(t):\n\tt-=1\n\tn=int(input())\n\n\tang= math.pi/(2*n)\n\n\tans= 1/math.tan(ang)\n\tprint(ans)", "import math\n\n\ndef main():\n    n = int(input())\n    a = math.pi/(2*n)\n    x = 1 / (math.sin(a)) / 2\n    res = 2 * math.cos(a) * x\n    print(res)\n\n\nfor _ in range(int(input())):\n    main()\n", "import math\nfor nt in range(int(input())):\n\tn=int(input())\n\tm=2*n\n\ta=((m-2)*180)/m\n\ts=180-a\n\tt=s\n\tans=0\n\tfor i in range((n-2)//2):\n\t\t# print (t,ans)\n\t\tans+=(math.cos((t*math.pi)/180))\n\t\tt+=s\n\tprint(ans*2+1)\n", "import os\nimport sys\nif os.path.exists('/mnt/c/Users/Square/square/codeforces'):\n    f = iter(open('C.txt').readlines())\n    def input():\n        return next(f).strip()\n    # input = lambda: sys.stdin.readline().strip()  \nelse:\n    input = lambda: sys.stdin.readline().strip()\n\nfprint = lambda *args: print(*args, flush=True)\n\nimport math\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1.0 / math.tan(math.pi / 2 / n))", "from math import sin, pi\ndef solve():\n    n = int( input())\n    return(sin(((n-1)*pi/(2*n)))/sin(pi/(2*n)))\n    \ndef main():\n    t = int( input())\n    print(\"\\n\".join( map( str, [ solve() for _ in range(t)])))\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import *\nfor _ in range(int(input())):\n    n = 2 * int(input())\n    a = pi - (pi * (n - 2) / n)\n    ans = 0\n    for i in range(1, n // 4):\n        ans += cos(i * a)\n    print(2 * ans + 1)", "import math \nr=math.pi\nfor _ in range(int(input())):\n    N=int(input())\n    w=2*N\n    t=(math.cos(r/w))/(math.sin(r/w))\n    print(t)", "from math import tan, pi\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(1 / tan(pi / (2 * n)))\n", "import math\nq = int(input())\nfor _ in range(q):\n\tn = int(input())\n\tn*=2\n\tprint(math.tan(math.pi/2-math.pi/n))", "from math import sin,pi,radians\ndef solve():\n    n = int(input())*2\n    a = 180*(n-2)/n\n    bc = (180-a)/2\n    d = 0.5/sin(radians(bc))      \n    return round(2*(d**2-0.25)**0.5,8)                      \nfor _ in range(int(input())):\n    print(solve())", "import sys\nimport math\n# from collections import deque\n# import heapq\n# from math import inf\n# from math import gcd\n\n# print(help(deque))\n# 26\npprint = lambda s: print(' '.join(map(str, s)))\ninput = lambda: sys.stdin.readline().strip()\nipnut = input\n# a, b, c, d = map(int, input().split())\n# n = int(input())\n# e = list(map(int,input().split()))\nfor i in range(int(input())):\n    n = int(input())\n    print(1/math.tan(math.pi/(2*n)))\n\"\"\"\n10\n10 11 12 13 14 15 16 17 11 11\n\"\"\"\n", "T = int(input())\nimport math\nn = [0]*T\nm = [0]*T\na = [0]*T\np = [0]*T\n\n\nfor t in range(T):\n  n = 2*int(input())   #,m[t] = [int(i) for i in input().split(' ')]\n  #a = [int(i) for i in input().split(' ')]\n  out = 0\n  if n%4 == 0:\n    print((math.tan(math.pi/n))**-1)\n  else:\n    print((math.sin(math.pi/n))**-1)", "from math import pi, sin\n\nfor i in range(int(input())):\n    n = int(input())\n    a = 0\n    ans = 0\n    x = pi - pi * (n - 1) / n\n    for j in range(n - 1):\n        a += x\n        ans += sin(a)\n    print(ans)\n"]