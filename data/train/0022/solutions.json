["import sys\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n\ta, k = list(map(int, input().split()))\n\tfor _ in range(k - 1):\n\t\tif '0' in str(a):\n\t\t\tbreak\n\t\ta += int(min(list(str(a)))) * int(max(list(str(a))))\n\tprint(a)\n", "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    for i in range(k-1):\n        n = str(n)\n        if (\"0\" in n):\n            break\n        n = int(n) + int(min(n))*int(max(n))\n\n    print(n)", "import sys\nINF = 10**20\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom math import gcd\nfrom math import ceil\nfrom collections import defaultdict as dd, Counter\nfrom bisect import bisect_left as bl, bisect_right as br\n\nt, = I()\nwhile t:\n    t -= 1\n    a, k = I()\n    b = str(a)\n    s = []\n    while b not in s:\n        s.append(b)\n        b = str(int(b) + int(min(b)) * int(max(b)))\n    if k >= len(s):\n        print(s[-1])\n    else:\n        print(s[k - 1])", "t = int(input())\n\nfor i in range(t):\n  a, b = list(map(int, input().split()))\n\n  last = -1\n  b -= 1\n  while last != a and b:\n    b -= 1\n    last = a\n    aa = a\n    maks = 0\n    mini = 10\n    while aa:\n      mini = min(mini, aa%10)\n      maks = max(maks, aa%10)\n      aa = aa//10\n\n    a += mini*maks\n\n  print(a)\n", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    a, k = read_ints()\n    i = 1\n    while i < k:\n        s = str(a)\n        lo = int(min(s))\n        hi = int(max(s))\n        if lo == 0:\n            break\n        a += lo * hi\n        i += 1\n    print(a)\n", "t=int(input())\nfor _ in range(t):\n    N,K=map(int,input().split())\n    while(K>1):\n        x=list(str(N))\n        if('0' in x):\n            break\n        x=[int(i) for i in x]\n        N=N+min(x)*max(x)\n        K-=1\n    print(N)", "def maxd(val) :\n\tmx = 0\n\twhile val > 0 :\n\t\tmx = max(mx, val % 10)\n\t\tval //= 10\n\treturn mx\n\ndef mind(val) :\n\tmn = 9\n\twhile val > 0 :\n\t\tmn = min(mn, val % 10)\n\t\tval //= 10\n\treturn mn\nt = int(input())\nwhile t > 0:\n\tt -= 1\n\ta, k = map(int, input().split())\n\tk -= 1\n\twhile k > 0 and mind(a) > 0 :\n\t\ta = a + mind(a) * maxd(a)\n\t\tk -= 1\n\tprint(a)", "T = int(input())\nn = [0]*T\n\nfor t in range(T):\n # n = int(input())\n  n,k = [int(i) for i in input().split(' ')]\n  n1 = str(n)\n  while n1.count('0') <1 and k>1: \n    n += int(min(n1))*int(max(n1))\n    n1 = str(n)\n    k-=1\n  print(n1)", "for _ in range(int(input())):\n    n,k = map(int,input().split())\n    for i in range(k-1):\n        n = str(n)\n        if (\"0\" in n):\n            break\n        n = int(n)+int(min(n))*int(max(n))\n    print(n)", "for _ in range(int(input())):\n    a, k = list(map(int, input().split()))\n    for _ in range(k-1):\n        mn = min(str(a))\n        mx = max(str(a))\n        if mn == \"0\":\n            break\n        a += int(mn)*int(mx)\n    print(a)\n", "def main():\n\tt = int(input())\n\tfor _ in range(t):\n\t\tn, k = [int(x) for x in input().split(\" \")]\n\t\tfor _ in range(k-1):\n\t\t\tnr = [int(x) for x in str(n)]\n\t\t\tmin_d = min(nr)\n\t\t\tmax_d = max(nr)\n\t\t\tif min_d == 0:\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tn += min_d * max_d\n\n\t\tprint(n)\n\n\nmain()", "import os\nimport sys\nif os.path.exists('/mnt/c/Users/Square/square/codeforces'):\n\tf = iter(open('A.txt').readlines())\n\tdef input():\n\t\treturn next(f)\n\t# input = lambda: sys.stdin.readline().strip()\t\nelse:\n\tinput = lambda: sys.stdin.readline().strip()\n\nfprint = lambda *args: print(*args, flush=True)\n\ndef min_max(x):\n\tl = list(str(x))\n\treturn int(min(l)), int(max(l))\n\nt = int(input())\nfor _ in range(t):\n\ta, K = map(int, input().split())\n\tK -= 1\n\n\tfor _ in range(K):\n\t\tu, v = min_max(a)\n\t\tif u == 0:\n\t\t\tbreak\n\t\ta += u*v\n\tprint(a)\n\n", "import math\nfor _ in range(int(input())):\n    a,k=list(map(int,input().split()))\n    for i in range(k-1):\n        d=list(str(a))\n        l=int(min(d))*int(max(d))\n        if l==0:\n            break\n        a+=l\n    print(a)\n    \n        \n    \n\n    \n", "import sys\n# from collections import deque\n# import heapq\n# from math import inf\n# from math import gcd\n\n# print(help(deque))\n# 26\npprint = lambda s:  print(' '.join(map(str,s)))\ninput = lambda: sys.stdin.readline().strip()\nipnut = input\nfor i in range(int(input())):\n    a,k = map(int,input().split())\n    # n = int(input())\n    # s = list(map(int,input().split()))\n    for i in range(k-1):\n        x = list(map(int,str(a)))\n        a_i = min(x)\n        a_m = max(x)\n        a = a+a_i*a_m\n        if a_i==0:\n            break\n    print(a)\n\n\"\"\"\n10\n10 11 12 13 14 15 16 17 11 11\n\"\"\"\n", "import sys\ninput=sys.stdin.readline\nfrom collections import defaultdict as dd,deque as dq\nt=int(input())\nwhile t:\n    #n=int(input())\n    n,k=map(int,input().split())\n    #l=list(map(int,input().split())\n    k-=1\n    while k:\n        l=str(n).strip()\n        x=int(min(l))*int(max(l))\n        if(x==0):\n            break\n        n=n+x\n        k-=1\n    print(n)\n    t-=1", "t=int(input())\ndef m(n):\n    s=[int(i) for i in str(n)]\n    s.sort()\n    return (s[0],s[-1])\nfor _ in range(t):\n    n,k=(map(int,input().split()))\n    pre=n\n    for i in range(2,k+1):\n        a=m(n)\n        n=n+a[0]*a[1]\n        if pre==n:\n            break \n        else:\n            pre=n\n        \n    print(n)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  a1,k = map(int,input().split())\n  a = a1\n  k -= 1\n  while k and str(a).count(\"0\") == 0:\n    ls = [int(str(a)[i]) for i in range(len(str(a)))]\n    a += max(ls)*min(ls)\n    k -= 1\n  print(a)", "def solve():\n\ta, k = list(map(int,input().split()))\n\tseen = set()\n\titems = [a]\n\tfor i in range(k-1):\n\t\tlast = items[-1]\n\t\tmin_dig = int(min(str(last)))\n\t\tmax_dig = int(max(str(last)))\n\t\tnw = last + min_dig * max_dig\n\t\titems.append(nw)\n\t\tif '0' in str(items):\n\t\t\tbreak\n\tprint(items[-1])\n\nfor i in range(int(input())):\n\tsolve()\n", "def digits(n):\n\tl=[]\n\twhile(n>0):\n\t\tl.append(n%10)\n\t\tn=n//10\n\tmina=min(l)\n\tmaxa=max(l)\n\treturn mina*maxa\nt=int(input())\nfor you in range(t):\n\tl=input().split()\n\ta=int(l[0])\n\tk=int(l[1])\n\tfor i in range(k-1):\n\t\tif(digits(a)==0):\n\t\t\tbreak\n\t\ta+=digits(a)\n\tprint(a)\n", "t = int(input())\nfor ii in range(t):\n    a, k = map(int, input().split())\n    cur = 0\n    while cur < k - 1 and '0' not in str(a):\n        mi = 1000\n        ma = -1\n        for i in str(a):\n            mi = min(int(i), mi)\n            ma = max(int(i), ma)\n        a += mi * ma\n        cur += 1\n    print(a)", "t = int(input())\nfor _ in range(t):\n    a, k = list(map(int, input().split()))\n    for i in range(k - 1):\n        a += int(min(str(a))) * int(max(str(a)))\n        if '0' in str(a):\n            break\n    print(a)\n", "\ndef f(x):\n\ts=str(x)\n\tmn=12\n\tmx=0\n\n\tfor i in s:\n\t\tmx=max(mx,int(i))\n\t\tmn=min(mn,int(i))\n\treturn mn*mx\n\nfor _ in range(int(input())):\n\ta,k=list(map(int,input().split()))\n\tk-=1\n\tprev=-1\n\n\twhile(k>0):\n\t\tif(prev==a):\n\t\t\tbreak\n\t\tprev=a\n\t\ta+=f(a)\n\t\tk-=1\n\n\tprint(a)\n", "'''input\n8\n1 4\n487 1\n487 2\n487 3\n487 4\n487 5\n487 6\n487 7\n'''\nimport math\ndef dig(x):\n\tmn = x%10\n\tmx = x%10\n\twhile x>0:\n\t\tmn = min(mn,x%10)\n\t\tmx = max(mx,x%10)\n\t\tx//=10\n\treturn mn,mx\ndef solve():\n\ta,k = map(int,input().split())\n\tl = [a]\n\tln = 1\n\tfor i in range(1000):\n\t\tpv = l[ln-1]\n\t\tmn,mx = dig(pv) \n\t\tif mn ==0:\n\t\t\tbreak\n\t\tl.append(pv+mx*mn)\n\t\tln+=1\n\tk = min(k,len(l))\n\tprint(l[k-1])\n\treturn\nt = 1\nt = int(input())\nwhile t>0:\n\tt-=1\n\tsolve()", "def main():\n    t = int(input())\n    for ti in range(t):\n        a, k = map(int, input().split())\n\n        for i in range(k - 1):\n            astr = str(a)\n            mn, mx = int(min(astr)), int(max(astr))\n            if mn == 0 or mx == 0:\n                break\n            a += mn * mx\n        print(a)\n\nmain()", "from sys import stdin, stdout  \ninput = stdin.readline\n#print = stdout.write\n\nfor _ in range(int(input())):\n    n, k = list(map(int, input().split()))\n    have = n\n    for i in range(k - 1):\n        digits = list(map(int, str(have)))\n        bf = min(digits) * max(digits)\n        if bf == 0:\n            break\n        have += bf\n    print(have)\n", "cases = int(input())\n\nfor _ in range(cases):\n    \n    n, k = [int(s) for s in input().split()]\n    \n    mind = -1\n    \n    for _ in range(k-1):\n        \n        if mind==0:\n            break\n        \n        s = str(n)\n        mind, maxd = int(s[0]), int(s[0])\n        \n        for l in s:\n            value = int(l)\n            if value>maxd:\n                maxd = value\n            elif value<mind:\n                mind = value\n            \n            if mind==0:\n                break\n                \n        n += maxd*mind\n\n    print(n)\n", "t=int(input())\nfor i in range(t):\n    a1,k=map(int,input().split())\n    an=a1\n    for j in range(1,k):\n        astr=str(an)\n        min=9\n        max=0\n        for r in range(len(astr)):\n            if int(astr[r])<min:\n                min=int(astr[r])\n            if int(astr[r])>max:\n                max=int(astr[r])\n        an+=min*max\n        if min==0:\n            break\n    print(an)", "\n\nT = int(input())\n\nfor t in range(T):\n    a, K = list(map(int, input().split()))\n\n    for k in range(K - 1):\n        a_ar = list(map(int, list(str(a))))\n\n        if min(a_ar) == 0:\n            break\n\n        a += min(a_ar) * max(a_ar)\n\n    print(a)\n", "for _ in range(int(input())):\n    a, k = list(map(int, input().split()))\n    if '0' in str(a):\n        print(a)\n    else:\n        while '0' not in str(a) and k != 1:\n            k -= 1\n            a += int(max(str(a))) * int(min(str(a)))\n        print(a)\n", "import sys\ninput = lambda: sys.stdin.readline().strip()\nt = int(input())\nwhile t:\n    t-=1\n    a1,k = map(int,input().split())\n    while k>1:\n        k-=1\n        val = list(map(int,list(str(a1))))\n        if min(val)==0:\n            break\n        # print(val)\n        a1 = a1+min(val)*max(val)\n    print(a1)", "for i in range(int(input())):\n    a, k = map(int, input().split())\n    while '0' not in str(a) and k > 1:\n        mi = 10\n        ma = -1\n        for j in range(len(str(a))):\n            if int(str(a)[j]) > ma:\n                ma = int(str(a)[j])\n            if int(str(a)[j]) < mi:\n                mi = int(str(a)[j])\n        a += ma * mi\n        k -= 1\n    print(a)", "import sys, os\n\nif 'local' in os.environ :\n    sys.stdin = open('./input.txt', 'r')\n\nf = lambda:list(map(int, input().split()))\n\n\nmidigit = lambda x: str(x)\ndef solve():\n    t = f()[0]\n    for _ in range(t):\n        a, k = f()\n        if k == 1:\n            print(a)\n            continue\n        for i in range(k-1):\n            an = a + int(min(str(a))) * int(max(str(a)))\n            if a == an:\n                break\n            a = an\n        print(a)\n\nsolve()\n", "for _ in range(int(input())):\n    a, k = tuple(map(int, input().split()))\n\n    for i in range(k - 1):\n        nums = [i for i in str(a)]\n        delta = int(min(nums)) * int(max(nums))\n\n        if delta == 0:\n            break\n        a += delta\n\n    print(a)\n", "t = int(input())\nbuf = []\nfor _ in range(t):\n    a, k = input().split()\n    k = int(k) - 1\n    for _ in range(k):\n        c = min(a)\n        d = max(a)\n        a = str(int(a) + int(c) * int(d))\n        if '0' in a:\n            break\n    buf.append(a)\n\nprint('\\n'.join(buf))\n", "from sys import stdin, stdout\nimport heapq\nimport cProfile, math\nfrom collections import Counter, defaultdict, deque\nfrom bisect import bisect_left, bisect, bisect_right\nimport itertools\nfrom copy import deepcopy\nfrom fractions import Fraction\nimport sys, threading\nimport operator as op\nfrom functools import reduce\nimport sys\n\n\ndef get_int():\n    return int(stdin.readline().strip())\n\n\ndef get_tuple():\n    return list(map(int, stdin.readline().split()))\n\n\ndef get_list():\n    return list(map(int, stdin.readline().split()))\n\n\ndef solve():\n    n,k = get_tuple()\n    n = str(n)\n    while '0' not in n and k>1:\n        n = int(n) + int(max(n))*int(min(n))\n        n = str(n)\n        k -= 1\n    return n\n\n\ndef main():\n    ans = solve()\n    print(ans)\n\nTestCases = True\n\nif TestCases:\n    for i in range(get_int()):\n        main()\nelse:\n    main()\n"]