["# cook your dish here\nimport math\nfor t in  range(int(input())):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    div=sum(a)/n\n    div=math.ceil(div)\n    count=div*n-sum(a)\n    for i in a:\n        if i>div:\n            count+=i-div\n    print(count)", "# cook your dish here\nimport math\nt  =int(input())\nfor i in range(t):\n    n = int(input())\n    l = list(map(int,input().split()))\n    m = math.ceil(sum(l)/n)\n    ans=0\n    for i in l:\n        x = m-i\n        if x>0 :\n            ans=ans + x\n    print(ans)\n", "for _ in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    s=sum(l)\r\n    q=s//n\r\n    r=s%n\r\n    if(r!=0):\r\n        q+=1\r\n    extra=0\r\n    k=[]\r\n    le=0\r\n    ans=0\r\n    for i in l:\r\n        if(i>q):\r\n            extra+=i-q\r\n        elif i<q:\r\n            ans+=q-i\r\n    print(ans)", "for _ in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    s=sum(l)\r\n    q=s//n\r\n    r=s%n\r\n    if(r!=0):\r\n        q+=1\r\n    extra=0\r\n    k=[]\r\n    le=0\r\n    ans=0\r\n    for i in l:\r\n        if(i>q):\r\n            extra+=i-q\r\n        elif i<q:\r\n            ans+=q-i\r\n    print(ans)", "for _ in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    s=sum(l)\r\n    q=s//n\r\n    r=s%n\r\n    if(r!=0):\r\n        q+=1\r\n    extra=0\r\n    k=[]\r\n    le=0\r\n    ans=0\r\n    for i in l:\r\n        if(i>q):\r\n            extra+=i-q\r\n        elif i<q:\r\n            ans+=q-i\r\n    print(ans)", "# cook your dish here\nfor testcase in range(int(input())):\n    n = int(input())\n    values = list(map(int, input().split()))\n    \n    current_total = sum(values)\n    \n    equality_value = current_total/n\n    # lines 10-11 are ceil() function equivalent\n    if equality_value>int(equality_value):equality_value+=1\n    equality_value = int(equality_value)\n    \n    deviations = list()\n    net_deviations = 0\n    \n    for value in values:\n        deviation = value - equality_value\n        deviations.append(deviation)\n        net_deviations += deviation\n        \n    # print(current_total, equality_value, deviations, net_deviations)\n\n    minimum_operations = abs(net_deviations)    # net_deviations has to be a negative value, using abs() just to be foolproof  \n    \n    for deviation in deviations:\n        if deviation>0:minimum_operations += deviation\n        \n    print(minimum_operations)\n", "t= int(input())\nfor i in range(t):\n\tn= int(input())\n\ta= list(map(int,input().split()))\n\ttotal= sum(a)\n\tif total%n!=0:\n\t\tnew_total= int(n*(int(total/n)+1))\n\telse:\n\t\tnew_total=total\n\tcand= new_total//n \n\top= new_total-total\n\t\n\tfor j in a:\n\t\tif j>cand:\n\t\t\top+= (j-cand)\n\tprint(op)", "for _ in range(int(input())):\r\n    n=int(input())\r\n    l=list(map(int,input().split()))\r\n    s=sum(l)\r\n    q=s//n\r\n    r=s%n\r\n    if(r!=0):\r\n        q+=1\r\n    extra=0\r\n    k=[]\r\n    le=0\r\n    ans=0\r\n    for i in l:\r\n        if(i>q):\r\n            extra+=i-q\r\n        elif i<q:\r\n            ans+=q-i\r\n    print(ans)", "for _ in range(int(input())):\n    n=int(input())\n    l=list(map(int,input().split()))\n    s=sum(l)\n    q=s//n\n    r=s%n\n    if(r!=0):\n        q+=1\n    extra=0\n    k=[]\n    le=0\n    for i in l:\n        if(i>q):\n            extra+=i-q\n        elif i<q:\n            k.append(i)\n            le+=1\n    ans=0\n    for i in range(le):\n        if(extra>=(q-k[i])):\n            extra-=(q-k[i])\n            ans+=q-k[i]\n        else:\n            ans+=q-k[i]\n    print(ans)\n\n", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int,input().split()))\n    v = math.ceil(sum(lst)/n)\n    b = 0\n    t = 0\n    for i in lst:\n        if i > v:\n            b+=(i-v)\n            \n    t+=b\n    \n    for i in lst:\n        if i < v :\n            b-=(v-i)\n            i+=(v-i)\n            \n    t+=abs(b)\n    print(t)\n", "import math\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    lst = list(map(int,input().split()))\n    v = math.ceil(sum(lst)/n)\n    b = 0\n    t = 0\n    for i in lst:\n        if i > v:\n            b+=(i-v)\n            \n    t+=b\n    \n    for i in lst:\n        if i < v :\n            b-=(v-i)\n            i+=(v-i)\n            \n    t+=abs(b)\n    print(t)\n", "# cook your dish here\nfor _ in range(int(input())):\n     n=int(input())\n     a=list(map(int,input().split()))\n     candies=sum(a)\n     ans=0\n     r=candies%n\n     d=candies//n\n     if(r==0):\n          ans=0\n     else:\n          d=d+1\n          ans=(n*d)-candies\n     for i in a:\n          if(i>d):\n               ans+=i-d\n     print(ans)\n               \n                    \n", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    x=sum(a)\n    b=math.ceil(x/len(a))\n    op=((b*len(a))-x)\n    for i in range(len(a)):\n        if a[i]>=b:\n            op+=(a[i]-b)\n    print(op)", "for _ in range(int(input())):\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    s=sum(a)/n\n    m=0\n    store=0\n    buy=0\n    if int(s)!=s:\n        s=int(s)+1\n    for i in a:\n        if(i<s):\n            buy+=s-i\n        elif(i>s):\n            store+=i-s\n            m+=i-s\n    if(store<buy):\n        m+=buy-store\n    print(m)\n", "# cook your dish here\nimport math\n\nt= int(eval(input(\"\")))\nwhile(t!=0):\n        size = int(eval(input(\"\")))\n        a1 = (input(\"\").split())\n        arr= []\n        allcandies=0\n        for i in range(len(a1)):\n                arr.append(int(a1[i]))\n                allcandies+=arr[i]\n        \n        candies = math.ceil(allcandies/size)\n        ans = 0\n        extra = 0\n        for i in range(len(arr)):\n                if arr[i]>candies:\n                        ans+=arr[i]-candies\n                        extra +=arr[i]-candies\n                \n                if arr[i]<candies:\n                        extra-= candies- arr[i]\n        \n        if extra<0:\n                ans+=abs(extra)\n        print(ans)\n\n        t-=1\n", "# cook your dish here\nfor _ in range(int(input())):\n    n = int(input())\n    can = list(map(int, input().split()))\n    s = sum(can)\n    if(s%n == 0):\n        dist = s//n\n        op = 0\n        for i in range(n):\n            if(can[i]>dist):\n                op += (can[i] - dist)\n        print(op)\n    else:\n        op = (n - (s%n))\n        dist = (s//n)+1\n        for i in range(n):\n            if(can[i]>dist):\n                op += (can[i] - dist)\n        print(op)", "# cook your dish here\nfor _ in range(int(input())):\n    N=int(input())\n    l=[int(i) for i in input().split()]\n    sum=0\n    for i in l:\n        sum+=i \n    if sum%N==0:\n        avg=sum//N \n    else:\n        avg=sum//N+ 1 \n    \n    no_of_operations=avg*N-sum\n    for i in l:\n        if i>avg:\n            no_of_operations+=i-avg\n        else:\n            pass\n        \n    print(no_of_operations)", "# cook your dish here\na=int(input())\nz=[]\nfor i in range(a):\n    b=int(input())\n    c=list(map(int,input().split()))\n    p=0\n    if sum(c)%b!=0:\n        p=p+b-(sum(c)%b)\n        q=int(sum(c)/b)+1\n    else:\n        q=int(sum(c)/b)\n    \n    for j in c:\n        if j>q:\n            p=p+j-q\n    z.append(p)\nfor i in z:\n    print(i)", "try:\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        s = sum(arr)\n        count = 0\n        if s%n==0:\n            each = s//n\n        else:\n            each = (s//n)+1\n        for i in range(n):\n            if arr[i]<each:\n                count += (each - arr[i])\n        print(count)\nexcept EOFError:\n    pass"]