["def eq_solve(v0, v1, u0, u1):\r\n    den = u0 - v0\r\n    num = u1 - v1\r\n    if den != 0:\r\n        return num / den\r\n    return 1\r\n \r\ndef solve(p, q, r, a, b, c, rs):\r\n    if p == a and q == b and r == c:\r\n        return rs\r\n    if rs >= 2:\r\n        return 3\r\n    res = 3\r\n    adds = [a - p, b - q, c - r]\r\n    muls = []\r\n    if p != 0:\r\n        muls.append(a / p)\r\n    if q != 0:\r\n        muls.append(b / q)\r\n    if r != 0:\r\n        muls.append(c / r)\r\n    muls.append(eq_solve(p, a, q, b))\r\n    muls.append(eq_solve(p, a, r, c))\r\n    muls.append(eq_solve(q, b, r, c))\r\n    msks = 2 ** 3\r\n    for msk in range(msks):\r\n        for add in adds:\r\n            np = p\r\n            nq = q\r\n            nr = r\r\n            if (msk & 1) > 0:\r\n                np += add\r\n            if (msk & 2) > 0:\r\n                nq += add\r\n            if (msk & 4) > 0:\r\n                nr += add\r\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\r\n        for mul in muls:\r\n            np = p\r\n            nq = q\r\n            nr = r\r\n            if (msk & 1) > 0:\r\n                np *= mul\r\n            if (msk & 2) > 0:\r\n                nq *= mul\r\n            if (msk & 4) > 0:\r\n                nr *= mul\r\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\r\n    return res\r\n        \r\n \r\n \r\nt = int(input())\r\n \r\nwhile t > 0:\r\n    p, q, r = map(int, input().split())\r\n    a, b, c = map(int, input().split())\r\n    z = solve(p, q, r, a, b, c, 0)\r\n    print(z)\r\n    t -= 1 ", "def eq_solve(v0, v1, u0, u1):\r\n    den = u0 - v0\r\n    num = u1 - v1\r\n    if den != 0:\r\n        return num / den\r\n    return 1\r\n \r\ndef solve(p, q, r, a, b, c, rs):\r\n    if p == a and q == b and r == c:\r\n        return rs\r\n    if rs >= 2:\r\n        return 3\r\n    res = 3\r\n    adds = [a - p, b - q, c - r]\r\n    muls = []\r\n    if p != 0:\r\n        muls.append(a / p)\r\n    if q != 0:\r\n        muls.append(b / q)\r\n    if r != 0:\r\n        muls.append(c / r)\r\n    muls.append(eq_solve(p, a, q, b))\r\n    muls.append(eq_solve(p, a, r, c))\r\n    muls.append(eq_solve(q, b, r, c))\r\n    msks = 7\r\n    for msk in range(msks):\r\n        msk = msk + 1\r\n        for add in adds:\r\n            np = p\r\n            nq = q\r\n            nr = r\r\n            if (msk & 1) > 0:\r\n                np += add\r\n            if (msk & 2) > 0:\r\n                nq += add\r\n            if (msk & 4) > 0:\r\n                nr += add\r\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\r\n        for mul in muls:\r\n            np = p\r\n            nq = q\r\n            nr = r\r\n            if (msk & 1) > 0:\r\n                np *= mul\r\n            if (msk & 2) > 0:\r\n                nq *= mul\r\n            if (msk & 4) > 0:\r\n                nr *= mul\r\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\r\n    return res\r\n        \r\n \r\n \r\nt = int(input())\r\n \r\nwhile t > 0:\r\n    p, q, r = map(int, input().split())\r\n    a, b, c = map(int, input().split())\r\n    z = solve(p, q, r, a, b, c, 0)\r\n    print(z)\r\n    t -= 1 ", "def eqSolve(p, a, q, b) :\n    x = p - q\n    y = a - b\n    if x != 0 :\n        z = int(y/x)\n        return z\n    else :\n        return 1\n        \ndef solve(p, q, r, a, b, c, rs) :\n    if p == a and q == b and r == c :\n        return rs\n    elif rs >= 2 :\n        return 3\n    else :\n        res = 3\n        m = 8\n        adds = [a - p, b - q, c - r]\n        muls = []\n        if p != 0 :\n            muls.append(a/p)\n        if q != 0 :\n            muls.append(b/q)\n        if r != 0 :\n            muls.append(c/r)\n        muls.append(eqSolve(p, a, q, b))\n        muls.append(eqSolve(p, a, r, c))\n        muls.append(eqSolve(q, b, r, c))\n        for n in range(m) :\n            for add in adds :\n                np = p\n                nq = q\n                nr = r\n                if n & 1 > 0 :\n                    np = np + add\n                if n & 2 > 0 :\n                    nq = nq + add\n                if n & 4 > 0 :\n                    nr = nr + add\n                res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n            for mul in muls :\n                np = p\n                nq = q\n                nr = r\n                if n & 1 > 0 :\n                    np = np*mul\n                if n & 2 > 0 :\n                    nq = nq*mul\n                if n & 4 > 0 :\n                    nr = nr*mul\n                res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n        return res \n\nt = int(input())\nx = 0\nfor x in range(t) :\n    p, q, r = map(int, input().split())\n    a, b, c = map(int, input().split())\n    y = solve(p, q, r, a, b, c, 0)\n    print(y)", "def eqSolve(p, a, q, b) :\n    x = p - q\n    y = a - b\n    if x != 0 :\n        z = int(y/x)\n        return z\n    else :\n        return 1\n        \ndef solve(p, q, r, a, b, c, rs) :\n    if p == a and q == b and r == c :\n        return rs\n    elif rs>=2 :\n        return 3\n    else :\n        res = 3\n        m = 7\n        adds = [a - p, b - q, c - r]\n        muls = []\n        if p != 0 :\n            muls.append(a/p)\n        if q != 0 :\n            muls.append(b/q)\n        if r != 0 :\n            muls.append(c/r)\n        muls.append(eqSolve(p, a, q, b))\n        muls.append(eqSolve(p, a, r, c))\n        muls.append(eqSolve(q, b, r, c))\n        for n in range(m) :\n            n = n + 1\n            for add in adds :\n                np = p\n                nq = q\n                nr = r\n                if n & 1 > 0 :\n                    np = np + add\n                if n & 2 > 0 :\n                    nq = nq + add\n                if n & 4 > 0 :\n                    nr = nr + add\n                res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n            for mul in muls :\n                np = p\n                nq = q\n                nr = r\n                if n & 1 > 0 :\n                    np = np*mul\n                if n & 2 > 0 :\n                    nq = nq*mul\n                if n & 4 > 0 :\n                    nr = nr*mul\n                res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n        return res \n\nt = int(input())\nx = 0\nfor x in range(t) :\n    p, q, r = map(int, input().split())\n    a, b, c = map(int, input().split())\n    y = solve(p, q, r, a, b, c, 0)\n    print(y)", "for _ in range(int(input())):\n    a, b, c = map(int, input().split())\n    p, q, r = map(int, input().split())\n    zeros = [a, b, c].count(0)\n    d, e, f = p - a, q - b, r - c\n    operations = 0\n    if d == e == f:\n        if d:\n            operations = 1\n        else:\n            operations = 0\n    elif zeros >= 2:\n        if (d == e and f == 0) or (d == e == 0 and f) or (e == f and d == 0) or (e == f == 0 and d) or (f == d and e == 0) or (f == d == 0 and e):\n            operations = 1\n        elif d == e or e == f or f == d or d == e + f or e == d + f or f == d + e:\n            operations = 2\n    elif zeros == 1:\n        if a == 0:\n            if (d == e and f == 0) or (d == e == 0 and f) or (e == f and d == 0) or (e == f == 0 and d) or (f == d and e == 0) or (f == d == 0 and e) or (d == 0 and q // b == r // c and q % b == 0 and r % c == 0):\n                operations = 1\n            elif d == e or e == f or f == d or (d and q // b == r // c and q % b == 0 and r % c == 0) or d == e + f or e == d + f or f == d + e:\n                operations = 2\n        elif b == 0:\n            if (d == e and f == 0) or (d == e == 0 and f) or (e == f and d == 0) or (e == f == 0 and d) or (f == d and e == 0) or (f == d == 0 and e) or (e == 0 and p // a == r // c and p % a == 0 and r % c == 0):\n                operations = 1\n            elif d == e or e == f or f == d or (e and p // a == r // c and p % a == 0 and r % c == 0) or d == e + f or e == d + f or f == d + e:\n                operations = 2\n        else:\n            if (d == e and f == 0) or (d == e == 0 and f) or (e == f and d == 0) or (e == f == 0 and d) or (f == d and e == 0) or (f == d == 0 and e) or (f == 0 and p // a == q // b and p % a == 0 and q % b == 0):\n                operations = 1\n            elif d == e or e == f or f == d or (f and p // a == q // b and p % a == 0 and q % b == 0) or d == e + f or e == d + f or f == d + e:\n                operations = 2\n    else:\n        x, y, z = p // a, q // b, r // c\n        if (d == e and f == 0) or (d == e == 0 and f) or (e == f and d == 0) or (e == f == 0 and d) or (f == d and e == 0) or (f == d == 0 and e) or (x == y == z and p % a == 0 and q % b == 0 and r % c == 0) or (d == 0 and y == z and q % b == 0 and r % c == 0) or (e == 0 and x == z and p % a == 0 and r % c == 0) or (f == 0 and x == y and p % a == 0 and q % b == 0):\n            operations = 1\n        elif d == e or e == f or f == d or (f and x == y and p % a == 0 and q % b == 0) or (d and y == z and q % b == 0 and r % c == 0) or (e and x == z and p % a == 0 and r % c == 0) or (d == 0 and e != f and e and f) or (e == 0 and d != f and d and f) or (f == 0 and d != e and d and e) or d == e + f or e == d + f or f == d + e or (p % a == 0 and q % b == 0 and r % c == 0 and (x * y == z or y * z == x or z * x == y)):\n            operations = 2\n    if operations == 0:\n        if d:\n            operations += 1\n        if e:\n            operations += 1\n        if f:\n            operations += 1\n    if operations == 3:\n        try:\n            u, v, w = (q * a - p * b) // (p - q), (r * b - q * c) // (q - r), (p * c - r * a) // (r - p)\n            if u == v == w and (q * a - p * b) % (p - q) == 0 and (r * b - q * c) % (q - r) == 0 and (p * c - r * a) % (r - p) == 0 and p // (a + u) == q // (b + u) == r // (c + u) and p % (a + u) == 0 and q % (b + u) == 0 and r % (c + u) == 0:\n                operations = 2\n        except:\n            pass\n        if operations == 3:\n            try:\n                x = p // a\n                if p % a == 0 and ((q % x == 0 and c + (q // x) - b == r) or (r % x == 0 and b + (r // x) - c == q)):\n                    operations = 2\n            except:\n                pass\n            if operations == 3:\n                try:\n                    x = q // b\n                    if q % b == 0 and ((p % x == 0 and c + (p // x) - a == r) or (r % x == 0 and a + (r // x) - c == p)):\n                        operations = 2\n                except:\n                    pass\n                if operations == 3:\n                    try:\n                        x = r // c\n                        if r % c == 0 and ((p % x == 0 and b + (p // x) - a == q) or (q % x == 0 and a + (q // x) - b == p)):\n                            operations = 2\n                    except:\n                        pass\n                    if operations == 3:\n                        try:\n                            if (q * a - p * b) % (p - q) == 0:\n                                u, x = (q * a - p * b) // (p - q), p // (a + u)\n                                if x == q // (b + u) and p % (a + u) == 0 and q % (b + u) == 0 and (c * x == r or c + u == r):\n                                    operations = 2\n                        except:\n                            pass\n                        if operations == 3:\n                            try:\n                                if (r * b - q * c) % (q - r) == 0:\n                                    v, x = (r * b - q * c) // (q - r), q // (b + v)\n                                    if x == r // (c + v) and q % (b + v) == 0 and r % (c + v) == 0 and (a * x == p or a + v == p):\n                                        operations = 2\n                            except:\n                                pass\n                            if operations == 3:\n                                try:\n                                    if (p * c - r * a) % (r - p) == 0:\n                                        w, x = (p * c - r * a) // (r - p), r // (c + w)\n                                        if x == p // (a + w) and r % (c + w) == 0 and p % (a + w) == 0 and (b * x == q or b + w == q):\n                                            operations = 2\n                                except:\n                                    pass\n                                if operations == 3:\n                                    try:\n                                        x, y, z = (p - q) // (a - b), (q - r) // (b - c), (r - p) // (c - a)\n                                        if x == y == z and (p - q) % (a - b) == 0 and (q - r) % (b - c) == 0 and (r - p) % (c - a) == 0 and p - a * x == q - b * y == r - c * z:\n                                            operations = 2\n                                    except:\n                                        pass\n                                    if operations == 3:\n                                        try:\n                                            x = p // a\n                                            if p % a == 0 and (b * x + r - c == q or c * x + q - b == r):\n                                                operations = 2\n                                        except:\n                                            pass\n                                        if operations == 3:\n                                            try:\n                                                x = q // b\n                                                if q % b == 0 and (a * x + r - c == p or c * x + p - a == r):\n                                                    operations = 2\n                                            except:\n                                                pass\n                                            if operations == 3:\n                                                try:\n                                                    x = r // c\n                                                    if r % c == 0 and (a * x + q - b == p or b * x + p - a == q):\n                                                        operations = 2\n                                                except:\n                                                    pass\n                                                if operations == 3:\n                                                    try:\n                                                        x = (p - q) // (a - b)\n                                                        if (p - q) % (a - b) == 0 and p - a * x == q - b * x and (c + p - a * x == r or c * x == r):\n                                                            operations = 2\n                                                    except:\n                                                        pass\n                                                    if operations == 3:\n                                                        try:\n                                                            y = (q - r) // (b - c)\n                                                            if (q - r) % (b - c) == 0 and q - b * y == r - c * y and (a + q - b * y == p or a * y == p):\n                                                                operations = 2\n                                                        except:\n                                                            pass\n                                                        if operations == 3:\n                                                            try:\n                                                                z = (r - p) // (c - a)\n                                                                if (r - p) % (c - a) == 0 and r - c * z == p - a * z and (b + r - c * z == q or b * z == q):\n                                                                    operations = 2\n                                                            except:\n                                                                pass\n    print(operations)", "from sys import *\ndef eq_solve(v0, v1, u0, u1):\n    den = u0 - v0\n    num = u1 - v1\n    if den != 0:\n        return num / den\n    return 1\n \ndef solve(p, q, r, a, b, c, rs):\n    if p == a and q == b and r == c:\n        return rs\n    if rs >= 2:\n        return 3\n    res = 3\n    adds = [a - p, b - q, c - r]\n    muls = []\n    if p != 0:\n        muls.append(a / p)\n    if q != 0:\n        muls.append(b / q)\n    if r != 0:\n        muls.append(c / r)\n    muls.append(eq_solve(p, a, q, b))\n    muls.append(eq_solve(p, a, r, c))\n    muls.append(eq_solve(q, b, r, c))\n    msks = 2 ** 3\n    for msk in range(msks):\n        for add in adds:\n            np = p\n            nq = q\n            nr = r\n            if (msk & 1) > 0:\n                np += add\n            if (msk & 2) > 0:\n                nq += add\n            if (msk & 4) > 0:\n                nr += add\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n        for mul in muls:\n            np = p\n            nq = q\n            nr = r\n            if (msk & 1) > 0:\n                np *= mul\n            if (msk & 2) > 0:\n                nq *= mul\n            if (msk & 4) > 0:\n                nr *= mul\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n    return res\n        \nt = int(stdin.readline())\nwhile t > 0:\n    p,q,r = map(int,stdin.readline().split())\n    a,b,c = map(int,stdin.readline().split())\n    print(solve(p,q,r,a,b,c,0))\n    t -= 1", "def eq_solve(v0, v1, u0, u1):\n    den = u0 - v0\n    num = u1 - v1\n    if den != 0:\n        return num / den\n    return 1\n \ndef solve(p, q, r, a, b, c, rs):\n    if p == a and q == b and r == c:\n        return rs\n    if rs >= 2:\n        return 3\n    res = 3\n    adds = [a - p, b - q, c - r]\n    muls = []\n    if p != 0:\n        muls.append(a / p)\n    if q != 0:\n        muls.append(b / q)\n    if r != 0:\n        muls.append(c / r)\n    muls.append(eq_solve(p, a, q, b))\n    muls.append(eq_solve(p, a, r, c))\n    muls.append(eq_solve(q, b, r, c))\n    msks = 2 ** 3\n    for msk in range(msks):\n        for add in adds:\n            np = p\n            nq = q\n            nr = r\n            if (msk & 1) > 0:\n                np += add\n            if (msk & 2) > 0:\n                nq += add\n            if (msk & 4) > 0:\n                nr += add\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n        for mul in muls:\n            np = p\n            nq = q\n            nr = r\n            if (msk & 1) > 0:\n                np *= mul\n            if (msk & 2) > 0:\n                nq *= mul\n            if (msk & 4) > 0:\n                nr *= mul\n            res = min(res, solve(np, nq, nr, a, b, c, rs + 1))\n    return res\n        \n \n \nt = int(input())\n \nwhile t > 0:\n    p, q, r = map(int, input().split())\n    a, b, c = map(int, input().split())\n    print(solve(p, q, r, a, b, c, 0))\n    t -= 1 ", "import sys\r\ndef fop(s,end='\\n'): sys.stdout.write(str(s)+end)\r\ndef fip(): return sys.stdin.readline().strip()\r\nfintinp = lambda : int(fip()) \r\ndef flistinp(func= int): return list(map(func,fip().split())) \r\ndef fnsepline(n,func=str): return [func(fip()) for _ in range(n)]\r\nfrom functools import lru_cache\r\n#-------------------code------------------------\r\n@lru_cache(maxsize=1<<10)\r\ndef byeqs(pqr, abc):\r\n    # f_ans = 3\r\n    p,q,r = pqr\r\n    a,b,c = abc\r\n    # zeq = a*(r-q) + b*(p-r) + c*(q-p)\r\n    # m=n=None # for y = mx + n\r\n    muls = [] \r\n    # if zeq==0:\r\n    try:\r\n        if p!=q:\r\n            m_ = (a-b)//(p-q)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if p!=r:\r\n            m_ = (a-c)//(p-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if q!=r:\r\n            m_ = (b-c)//(q-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    return muls\r\n\r\n@lru_cache(maxsize=1<<10)\r\ndef recSolver(pqr, abc, ans = 0):\r\n    if pqr == abc: return ans \r\n    if ans>=2: return 3\r\n    adds = [abc[i]-pqr[i] for i in range(3)]\r\n    muls = [abc[i]//pqr[i] if pqr[i]!=0 else 0 for i in range(3)] + byeqs(pqr, abc)\r\n    f_ans = 3 \r\n    for ss in range(8):\r\n        for a in adds:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]+=a \r\n            f_ans = min(f_ans, recSolver(tuple(pqr_copy), tuple(abc), ans+1))\r\n            \r\n        for m in muls:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]*=m \r\n            f_ans = min(f_ans, recSolver(tuple(pqr_copy), tuple(abc), ans+1))\r\n    return f_ans\r\n                \r\nfor _ in range(fintinp()):\r\n    pqr = flistinp()\r\n    abc = flistinp()\r\n    fop(recSolver(tuple(pqr), tuple(abc), 0))", "import sys\r\ndef fop(s,end='\\n'): sys.stdout.write(str(s)+end)\r\ndef fip(): return sys.stdin.readline().strip()\r\nfintinp = lambda : int(fip()) \r\ndef flistinp(func= int): return list(map(func,fip().split())) \r\ndef fnsepline(n,func=str): return [func(fip()) for _ in range(n)]\r\nfrom functools import lru_cache\r\n#-------------------code------------------------\r\n@lru_cache(maxsize=1<<20)\r\ndef byeqs(pqr, abc):\r\n    # f_ans = 3\r\n    p,q,r = pqr\r\n    a,b,c = abc\r\n    # zeq = a*(r-q) + b*(p-r) + c*(q-p)\r\n    # m=n=None # for y = mx + n\r\n    muls = [] \r\n    # if zeq==0:\r\n    try:\r\n        if p!=q:\r\n            m_ = (a-b)//(p-q)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if p!=r:\r\n            m_ = (a-c)//(p-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if q!=r:\r\n            m_ = (b-c)//(q-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    return muls\r\n\r\n@lru_cache(maxsize=1<<20)\r\ndef recSolver(pqr, abc, ans = 0):\r\n    if pqr == abc: return ans \r\n    if ans>=2: return 3\r\n    adds = [abc[i]-pqr[i] for i in range(3)]\r\n    muls = [abc[i]//pqr[i] if pqr[i]!=0 else 0 for i in range(3)] + byeqs(pqr, abc)\r\n    f_ans = 3 \r\n    for ss in range(8):\r\n        for a in adds:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]+=a \r\n            f_ans = min(f_ans, recSolver(tuple(pqr_copy), tuple(abc), ans+1))\r\n            \r\n        for m in muls:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]*=m \r\n            f_ans = min(f_ans, recSolver(tuple(pqr_copy), tuple(abc), ans+1))\r\n    return f_ans\r\n                \r\nfor _ in range(fintinp()):\r\n    pqr = flistinp()\r\n    abc = flistinp()\r\n    fop(recSolver(tuple(pqr), tuple(abc), 0))", "import sys\r\ndef fop(s,end='\\n'): sys.stdout.write(str(s)+end)\r\ndef fip(): return sys.stdin.readline().strip()\r\nfintinp = lambda : int(fip()) \r\ndef flistinp(func= int): return list(map(func,fip().split())) \r\ndef fnsepline(n,func=str): return [func(fip()) for _ in range(n)]\r\n#-------------------code------------------------\r\ndef byeqs(pqr, abc):\r\n    # f_ans = 3\r\n    p,q,r = pqr\r\n    a,b,c = abc\r\n    # zeq = a*(r-q) + b*(p-r) + c*(q-p)\r\n    # m=n=None # for y = mx + n\r\n    muls = [] \r\n    # if zeq==0:\r\n    try:\r\n        if p!=q:\r\n            m_ = (a-b)//(p-q)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if p!=r:\r\n            m_ = (a-c)//(p-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    try:\r\n        if q!=r:\r\n            m_ = (b-c)//(q-r)\r\n            muls.append(m_)\r\n    except: pass\r\n    return muls\r\n\r\ndef recSolver(pqr, abc, ans = 0):\r\n    if pqr == abc: return ans \r\n    if ans>=2: return 3\r\n    adds = [abc[i]-pqr[i] for i in range(3)]\r\n    muls = [abc[i]//pqr[i] if pqr[i]!=0 else 0 for i in range(3)] + byeqs(pqr, abc)\r\n    f_ans = 3 \r\n    for ss in range(8):\r\n        for a in adds:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]+=a \r\n            f_ans = min(f_ans, recSolver(pqr_copy, abc, ans+1))\r\n            \r\n        for m in muls:\r\n            pqr_copy = list(pqr)\r\n            for i in [1,2,4]:\r\n                if ss&i:\r\n                    pqr_copy[i>>1]*=m \r\n            f_ans = min(f_ans, recSolver(pqr_copy, abc, ans+1))\r\n    return f_ans\r\n                \r\nfor _ in range(fintinp()):\r\n    pqr = flistinp()\r\n    abc = flistinp()\r\n    fop(recSolver(pqr, abc, 0))", "T = int(input())\r\nfor tc in range(T):\r\n    p, q, r = map(int, input().split())\r\n    a ,b, c = map(int, input().split())\r\n    p_diff = a - p\r\n    q_diff = b - q\r\n    r_diff = c - r\r\n    flag = 0\r\n    \r\n    # GCD of Three Numbers\r\n    def gcd(a,b):\r\n        if b == 0:\r\n            return a\r\n        else:\r\n            return gcd(b, a%b)\r\n\r\n    g_c_d = gcd(a,gcd(b,c))\r\n    \r\n    def factors(x):\r\n        # We will store all factors in `result`\r\n        result = []\r\n        i = 2\r\n        # This will loop from 1 to int(sqrt(x))\r\n        while i*i <= x:\r\n            # Check if i divides x without leaving a remainder\r\n            if x % i == 0:\r\n                result.append(i)\r\n                # Handle the case explained in the 4th\r\n                if x//i != i: # In Python, // operator performs integer/floored division\r\n                    result.append(x//i)\r\n            i += 1\r\n        # Return the list of factors of x\r\n        return result\r\n    listi = factors(g_c_d)\r\n    \r\n    try:\r\n        p_rem = a / p\r\n    except:\r\n        p_rem = 1\r\n    try:\r\n        q_rem = b / q\r\n    except:\r\n        q_rem = 1\r\n    try:\r\n        r_rem = c / r\r\n    except:\r\n        r_rem = 1\r\n    \r\n    if a == p and b == q and c == r:\r\n        print(\"0\")\r\n        flag = 1\r\n        continue\r\n    elif p_rem == q_rem == r_rem != 1:\r\n        print(\"1\")\r\n        flag = 1\r\n        continue\r\n    elif p_diff == q_diff == r_diff:\r\n        print(\"1\")\r\n        flag = 1\r\n        continue\r\n    elif p == a and q == b:\r\n        print(\"1\")\r\n        flag = 1\r\n        continue\r\n    elif p == a and r == c:\r\n        print(\"1\")\r\n        flag = 1\r\n        continue\r\n    elif q == b and r == c:\r\n        print(\"1\")\r\n        continue\r\n    elif p == a:\r\n        if q_diff == r_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        elif q_rem == r_rem != 1:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    elif q == b:\r\n        if p_diff == r_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        elif p_rem == r_rem != 1:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    elif r == c:\r\n        if q_diff == p_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n        elif q_rem == p_rem != 1:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n    elif p_diff == 0:\r\n        if q_diff == r_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        elif q_rem == r_rem:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    elif q_diff == 0:\r\n        if p_diff == r_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        elif p_rem == r_rem:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    elif r_diff == 0:\r\n        if p_diff == q_diff:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        elif p_rem == q_rem:\r\n            print(\"1\")\r\n            flag = 1\r\n            continue\r\n        else:\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    elif r_diff - p_diff == q_diff:\r\n        print(\"2\")\r\n        continue\r\n    elif r_diff - q_diff == p_diff:\r\n        print(\"2\")\r\n        continue\r\n    elif q_diff - r_diff == p_diff:\r\n        print(\"2\")\r\n        continue\r\n    elif q_diff - p_diff == r_diff:\r\n        print(\"2\")\r\n        continue\r\n    elif p_diff - q_diff == r_diff:\r\n        print(\"2\")\r\n        continue\r\n    elif p_diff - r_diff == q_diff:\r\n        print(\"2\")\r\n        continue\r\n    \r\n    elif p_diff == q_diff:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif q_diff == r_diff:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif p_diff == r_diff:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif p_rem == q_rem and r_rem != 1:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif p_rem == r_rem and q_rem != 1:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif q_rem == r_rem and p_rem != 1:\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    elif ((a // g_c_d) - p) == ((b // g_c_d) - q) == ((c // g_c_d) - r):\r\n        print(\"2\")\r\n        flag = 1\r\n        continue\r\n    if flag == 0:\r\n        try:\r\n            if (r_diff - b) / q == (r_diff - a) / p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (r_diff - b) / 1 == (r_diff - a) / 1:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (q_diff - c) / r == (q_diff - a) / p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (q_diff - c) / 1 == (q_diff - a) / 1:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (p_diff - c) / r == (p_diff - b) / q:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (p_diff - c) / 1 == (p_diff - b) / 1:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (b/ r_rem) - q == a - p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (b/ 1) - q == a - p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:    \r\n            if (a / r_rem) - p == b - q:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (a / 1) - p == b - q:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (b / p_rem) - q == c - r:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (b / 1) - q == c - r:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c / p_rem) - r == b - q:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (c / 1) - r == b - q:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c / q_rem) - r == a - p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (c / 1) - r == a - p:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (a / q_rem) - p == c - r:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            if (a / 1) - p == c - r:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n    if flag == 0:\r\n        try:\r\n            if (b - (c-r)) / q == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (b - (c-r)) / x == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (b - (a-p)) / q == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (b - (a-p)) / x == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n        try:\r\n            if (a - (b-q)) / p == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (a - (b-q)) / x == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (a - (c-r)) / p == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n        except:\r\n            x = 1\r\n            if (a - (c-r)) / x == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c - (b-q)) / r == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (c - (b-q)) / x == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c - (a-p)) / r == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (c - (a-p)) / x == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (b / r_rem) / q == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (b / x) / x == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (a / r_rem) / p == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (a / x) / x == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (b / p_rem) / q == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (b / x) / x == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c / p_rem) / r == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (c / x) / x == q_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (a / q_rem) / p == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (a / x) / x == r_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        try:\r\n            if (c / q_rem) / r == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            x = 1\r\n            if (c / x) / x == p_rem:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n    \r\n    if flag == 0:\r\n        try:\r\n            if b / (q + (c-r)) == a / (p +(c-r)):\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            rem1 = 1\r\n            rem2 = 1\r\n            if b / rem1 == a / rem2:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n        try:\r\n            if c / (r + (b-q)) == a / (p +(b-q)):\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            rem1 = 1\r\n            rem2 = 1\r\n            if c / rem1 == a / rem2:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n        try:\r\n            if b / (q + (a-p)) == c / (r +(a-p)):\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n        except:\r\n            rem1 = 1\r\n            rem2 = 1\r\n            if b / rem1 == c / rem2:\r\n                print(\"2\")\r\n                flag = 1\r\n                continue\r\n            \r\n    \r\n    if flag == 0:\r\n        if(p-q != 0):\r\n            rem = (a-b)/(p-q)\r\n            diff = a - (p*rem)\r\n            if(rem%1 == 0 and diff%1 == 0 and (r*rem+diff)==c):\r\n                print(\"2\")\r\n                flag = 1\r\n    if flag == 0:\r\n        if len(listi) > 0:\r\n            for x in listi:\r\n                if ((a // x) - p) == ((b // x) - q) == ((c // x) - r):\r\n                    print(\"2\")\r\n                    flag = 1\r\n    if flag == 0:\r\n        if a - (q_rem * p) == c - (q_rem * r):\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n        elif a - (r_rem * p) == b - (r_rem * q):\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n        elif c - (p_rem * r) == b - (p_rem * q):\r\n            print(\"2\")\r\n            flag = 1\r\n            continue\r\n    if flag == 0:\r\n        print(\"3\")", "intput = lambda: [int(i) for i in input().split()]\n# Write your code here\nfrom sys import stdout\nsol = \"3332323313233322223333\"\nsubsets = ['100', '010', '001', '110', '101', '011', '111']\neq = lambda x, y: abs(x - y) < 1e-6\ndef check(x):\n    if x == [9, 7, 4]:\n        print(\"Debug\")\n    if x == y:\n        return 0\n    d, q, f = [], [], []\n    for i in range(3):\n        d.append(y[i] - x[i])\n        q.append(0.5 if x[i] == 0 else y[i] / x[i])\n        f.append(q[i] % 1 == 0)\n    for i in range(3):\n        j, k = (i + 1) % 3, (i + 2) % 3\n        if x[j] == y[j] and x[k] == y[k]:\n            return 1\n        if x[i] == y[i] and (d[j] == d[k] or (f[j] and eq(q[j], q[k]))):\n            return 1\n    if (d[0] == d[1] and d[0] == d[2]) or (f[0] and eq(q[0], q[1]) and eq(q[0], q[2])):\n        return 1\n    return 2\ndef move(subset, oper, d):\n    res = x.copy()\n    for i in range(3):\n        if subset[i] == '1':\n            res[i] = res[i] + d if oper else res[i] * d\n    return res\nfor tc in range(int(input())):\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    a = check(x)\n    if a < 2:\n        print(a)\n        continue\n    d, q, f = [], [], []\n    for i in range(3):\n        d.append(y[i] - x[i])\n        q.append(0.5 if x[i] == 0 else y[i] / x[i])\n        f.append(q[i] % 1 == 0)\n    flag = False\n    for subset in subsets:\n        for i in range(3):\n            a = check(move(subset, True, d[i]))\n            if a < 2:\n                print(2)\n                flag = True\n                break\n            if f[i]:\n                a = check(move(subset, False, q[i]))\n                if a < 2:\n                    print(2)\n                    flag = True\n                    break\n        if flag:\n            break\n    if flag:\n        continue\n    for i in range(3):\n        j, k = (i + 1) % 3, (i + 2) % 3\n        if x[j] != 0 and x[k] != 0 and eq((y[j] - d[i]) / x[j], (y[k] - d[i]) / x[k]) and ((y[j] - d[i]) / x[j]) % 1 == 0:\n            print(2)\n            flag = True\n            break\n    if flag:\n        continue\n    if x[0] != x[1] and x[0] != x[2] and eq((y[0] - y[1]) / (x[0] - x[1]), (y[0] - y[2]) / (x[0] - x[2])):\n        print(2)\n        continue\n    print(3)", "intput = lambda: [int(i) for i in input().split()]\n# Write your code here\nfrom sys import stdout\nsol = \"3332323313233322223333\"\nsubsets = ['100', '010', '001', '110', '101', '011', '111']\neq = lambda x, y: abs(x - y) < 1e-6\ndef check(x):\n    if x == [9, 7, 4]:\n        print(\"Debug\")\n    if x == y:\n        return 0\n    d, q, f = [], [], []\n    for i in range(3):\n        d.append(y[i] - x[i])\n        q.append(0.5 if x[i] == 0 else y[i] / x[i])\n        f.append(q[i] % 1 == 0)\n    for i in range(3):\n        j, k = (i + 1) % 3, (i + 2) % 3\n        if x[j] == y[j] and x[k] == y[k]:\n            return 1\n        if x[i] == y[i] and (d[j] == d[k] or (f[j] and eq(q[j], q[k]))):\n            return 1\n    if (d[0] == d[1] and d[0] == d[2]) or (f[0] and eq(q[0], q[1]) and eq(q[0], q[2])):\n        return 1\n    return 2\ndef move(subset, oper, d):\n    res = x.copy()\n    for i in range(3):\n        if subset[i] == '1':\n            res[i] = res[i] + d if oper else res[i] * d\n    return res\nfor tc in range(int(input())):\n    x = list(map(int, input().split()))\n    y = list(map(int, input().split()))\n    a = check(x)\n    if a < 2:\n        print(a)\n        continue\n    d, q, f = [], [], []\n    for i in range(3):\n        d.append(y[i] - x[i])\n        q.append(0.5 if x[i] == 0 else y[i] / x[i])\n        f.append(q[i] % 1 == 0)\n    flag = False\n    for subset in subsets:\n        for i in range(3):\n            a = check(move(subset, True, d[i]))\n            if a < 2:\n                print(2)\n                flag = True\n                break\n            if f[i]:\n                a = check(move(subset, False, q[i]))\n                if a < 2:\n                    print(2)\n                    flag = True\n                    break\n        if flag:\n            break\n    if flag:\n        continue\n    for i in range(3):\n        j, k = (i + 1) % 3, (i + 2) % 3\n        if x[j] != 0 and x[k] != 0 and eq((y[j] - d[i]) / x[j], (y[k] - d[i]) / x[k]) and ((y[j] - d[i]) / x[j]) % 1 == 0:\n            print(2)\n            flag = True\n            break\n    if flag:\n        continue\n    if x[0] != x[1] and eq((y[0] - y[1]) / (x[0] - x[1]), (y[0] - y[2]) / (x[0] - x[2])):\n        print(2)\n        continue\n    print(3)", "def d1d2(p,q,r,a,b,c):\r\n    if p == 0 or q == 0 or r == 0:\r\n        return False\r\n    if a%p == 0 and b % q == 0:\r\n        d1 = a//p\r\n        d2 = b//q\r\n        if c == r * d1 * d2:\r\n            return True\r\n        return False\r\n    return False\r\n    \r\ndef e1e2(p,q,r,a,b,c):\r\n    e1 = a - p\r\n    e2 = b - q\r\n    return c == r + e1 + e2\r\n        \r\ndef d3e3(p,q,r,a,b,c):\r\n    delta = [0, 0, 0]\r\n    delta[0] = p - q\r\n#     print(f'1.{delta=}')\r\n    if delta[0] == 0:\r\n        return False\r\n        # explanation:\r\n        # for infinite no of sols a = b; but q = p(delta[0] == 0) sol 2 same case (already handled) not considering here\r\n    delta[1] = a - b\r\n    delta[2] = p*b - q*a\r\n#     print(f'2.{delta=}')\r\n    if delta[1] % delta[0] == 0 and delta[2] % delta[0] == 0:\r\n        val_d = delta[1]//delta[0]\r\n        val_e = delta[2]//delta[0]\r\n        return  c == r * val_d + val_e\r\n            \r\n    else:\r\n        #e and d are not integer solutions\r\n        return False\r\n         \r\ndef d3e2(p,q,r,a,b,c):\r\n    #assuming a,b eq has same form\r\n    delta = [0, 0, 0]\r\n    delta[0] = p - q\r\n    if delta[0] == 0:\r\n        return False\r\n        # explanation:\r\n        # for infinite no of sols a = b; but q = p(delta[0] == 0) sol 2 same case (already handled) not considering here\r\n    delta[1] = a - b\r\n    delta[2] = p*b - q*a\r\n#     print(f'\u03940 = {delta[0]} \u03941 = {delta[1]} \u03942 = {delta[2]}')\r\n    if delta[1] % delta[0] == 0 and delta[2] % delta[0] == 0:\r\n        val_d = delta[1]//delta[0]\r\n        val_e = delta[2]//delta[0]\r\n#         print(f'd = {val_d} e = {val_e}')\r\n        return  c == r * val_d\r\n            \r\n    else:\r\n        #e and d are not integer solutions\r\n        return False\r\n        \r\ndef d2e3(p,q,r,a,b,c):\r\n    #assuming a,b eq has same form\r\n    \r\n    delta = [0, 0, 0]\r\n    delta[0] = p - q\r\n    if delta[0] == 0:\r\n        return False\r\n        # explanation:\r\n        # for infinite no of sols a = b; but q = p(delta[0] == 0) sol 2 same case (already handled) not considering here\r\n    delta[1] = a - b\r\n    delta[2] = p*b - q*a\r\n\r\n    if delta[1] % delta[0] == 0 and delta[2] % delta[0] == 0:\r\n        val_d = delta[1]//delta[0]\r\n        val_e = delta[2]//delta[0]\r\n        return  c == r + val_e\r\n            \r\n    else:\r\n        #e and d are not integer solutions\r\n        return False\r\n        \r\n'''\r\ntwo case: 1. a = pd + e, b = qd + e, c = r (already handled 1 same)\r\n2. a = pd + e, b = qd, c = r + e\r\n'''\r\ndef d2e2(p,q,r,a,b,c):\r\n    if q != 0 and b % q == 0:\r\n        d = b//q\r\n        e = c - r\r\n        assert e != 0, \"already checked, one same\"\r\n        return a == p*d + e\r\n    return False\r\n\r\ndef e3d2(p,q,r,a,b,c):\r\n    assert c!=r, \"1 same\"\r\n    e = c - r\r\n    if p != -e and q !=-e and a % (p + e) == 0 and b % (q + e) == 0:# p + e != 0 as then a = 0 and 1 difference case or no soln\r\n        d1 = a//(p + e)\r\n        d2 = b//(q + e)\r\n        return d1 != 1 and d1 == d2\r\n    return False\r\n    \r\ndef e2d2(p,q,r,a,b,c):\r\n    if r != 0 and c % r == 0:\r\n        d = c//r\r\n        e = b - q\r\n        assert d != 1 and e != 0, '1 or 2 same'\r\n        return a == (p + e) * d\r\n    return False\r\n    \r\ndef modified(src, dst):\r\n    p,q,r = src\r\n    a,b,c = dst\r\n    # print(p,q,r), '-->',(a,b,c)\r\n    \r\n    #case 1: some are same\r\n    #case 1.0: all are same then 0 chances:\r\n    if p == a and q == b and r == c:\r\n        print(0)\r\n        return\r\n    #case 1.1:if two are same\r\n    # p,q\r\n    if p == a and q == b:\r\n        if r != c:\r\n            print(1)\r\n            return\r\n        assert True, \"Should not have come here1\"\r\n    # q,r\r\n    if q == b and r == c:\r\n        if p != a:\r\n            print(1)\r\n            return\r\n        assert True, \"Should not have come here2\"\r\n    # r,p\r\n    if r == c and p == a:\r\n        if q != b:\r\n            print(1)\r\n            return\r\n        assert True, \"Should not have come here3\"\r\n        \r\n    #case 1.3 any one is same\r\n    # p\r\n    if p == a:\r\n        if b - q == c - r:\r\n            print(1)\r\n            return\r\n        if q != 0 and r != 0 and b%q == 0 and b%q == c%r and b//q == c//r:\r\n            print(1)\r\n            return\r\n        print(2)\r\n        return\r\n    if q == b:\r\n        if c - r == a - p:\r\n            print(1)\r\n            return\r\n        if p != 0 and r != 0 and a%p == 0 and  a%p == c%r and a//p == c//r:\r\n            print(1)\r\n            return\r\n        print(2)\r\n        return\r\n        \r\n    if r == c:\r\n        if b - q == a - p:\r\n            print(1)\r\n            return\r\n        if p != 0 and q != 0 and a%p == 0 and  a%p == b%q and a//p == b//q:\r\n            print(1)\r\n            return\r\n        print(2)\r\n        return        \r\n    #case 2: all are different\r\n    #case 2.1: all are at same difference : 2 same ratio/ difference\r\n    if p-a == q-b and q-b == r-c:\r\n        print(1)\r\n        return\r\n    #or at same ratio\r\n    if p!=0 and q!= 0 and r!=0:\r\n        if a%p == 0 and a%p == b%q and b%q == c%r:\r\n            if a//p == b//q and b//q == c//r:\r\n                print(1)\r\n                return\r\n    #if any two has same difference or ratio\r\n    #case 2.2: 1 same ratio/difference\r\n    # p,q\r\n    if p-a == q-b :\r\n        print(2)\r\n        return\r\n    if p!=0 and q!=0 and a%p == 0 and a%p == b%q and a//p == b//q:\r\n        print(2)\r\n        return\r\n    # q,r\r\n    if r-c == q-b :\r\n        print(2)\r\n        return\r\n    if r!=0 and q!=0 and c%r == 0 and c%r == b%q and c//r == b//q:\r\n        print(2)\r\n        return    \r\n    \r\n    # r,p\r\n    if p-a == r-c :\r\n        print(2)\r\n        return\r\n    if p!=0 and r!=0 and a%p == 0 and a%p == c%r and a//p == c//r:\r\n        print(2)\r\n        return\r\n    \r\n    \r\n    #case 3: nothing is same no two has same difference or ration\r\n    #case 3.0: pd1 qd2 rd1d2 form\r\n    if d1d2(p,q,r,a,b,c) or d1d2(q,r,p,b,c,a) or d1d2(r,p,q,c,a,b):\r\n        print(2)\r\n        return\r\n    #case 3.1: p + e1 q + e2 r + e1 + e2 form\r\n    if e1e2(p,q,r,a,b,c) or e1e2(q,r,p,b,c,a) or e1e2(r,p,q,c,a,b):\r\n        print(2)\r\n        return\r\n    #case 3.2: pd + e forms\r\n    #case 3.2.1: 3d3e\r\n    if d3e3(p,q,r,a,b,c):\r\n        print(2)\r\n        return\r\n    #case 3.2.2: 3d2e\r\n    if d3e2(p,q,r,a,b,c) or d3e2(q,r,p,b,c,a) or d3e2(r,p,q,c,a,b):\r\n        print(2)\r\n        return\r\n    \r\n    #case 3.2.3: 2d3e\r\n    if d2e3(p,q,r,a,b,c) or d2e3(q,r,p,b,c,a) or d2e3(r,p,q,c,a,b):\r\n        print(2)\r\n        return\r\n    if d2e2(p,q,r,a,b,c) or d2e2(q,r,p,b,c,a) or d2e2(r,p,q,c,a,b) or d2e2(p,r,q,a,c,b) or d2e2(q,p,r,b,a,c) or d2e2(r,q,p,c,b,a):\r\n        print(2)\r\n        return\r\n    if e3d2(p,q,r,a,b,c) or e3d2(q,r,p,b,c,a) or e3d2(r,p,q,c,a,b):\r\n        print(2)\r\n        return\r\n    if e2d2(p,q,r,a,b,c) or e2d2(q,r,p,b,c,a) or e2d2(r,p,q,c,a,b) or e2d2(p,r,q,a,c,b) or e2d2(q,p,r,b,a,c) or e2d2(r,q,p,c,b,a):\r\n        print(2)\r\n        return\r\n    print(3)\r\n    \r\nfor _ in range(int(input())):\r\n    src = tuple(map(int, input().split()))\r\n    dst = tuple(map(int, input().split()))\r\n    modified(src, dst)\r\n    # print(modified(src, dst))", "def aa22(p,q,r,a,b,c):\n    if(q+a-p+c-r == b):\n        return 1\n    else:\n        return 0\ndef aa21(p,q,r,a,b,c):\n    if(p-q==a-b):\n        return 1\n    else:\n        return 0\ndef as22(p,q,r,a,b,c):\n    if((p+b-c+r-q)==a):\n        return 1\n    else:\n        return 0\ndef am22(p,q,r,a,b,c):\n    if(r!=0 and c!=0 and c%r==0 and  (b*r)%c==0 and ((b*r)//c)-q==(a-p)):\n        return 1\n    else:\n        return 0\ndef am21(p,q,r,a,b,c):\n    if((r!=0) and c%r==0 and (p-q)==(a-b)):\n        return 1\n    else:\n        return 0\ndef am23(p,q,r,a,b,c):\n    if((r!=0) and (c!=0)  and (c%r)==0  and  (b*r)%c==0 and (a*r)%c==0 and  ((a*r)//c)-p==((b*r)//c)-q):\n        return 1\n    else:\n        return 0\ndef am32(p,q,r,a,b,c):\n    if((q+c-r)!=0 and (p+c-r)!=0 and (b//(q+c-r))==(a//(p+c-r)) and b%(q+c-r)==0 and a%(p+c-r)==0):\n        return 1\n    else:\n        return 0\ndef ma33(p,q,r,a,b,c):\n    if((p-q)!=0 and  ((b*p)-(a*q))%(p-q)==0 and (q-r)!=0 and p!=0 and  ((c*q)-(b*r))%(q-r)==0 and ((b*p)-(a*q))//(p-q)==((c*q)-(b*r))//(q-r) and (a-(((b*p)-(a*q))//(p-q)))%p==0):\n        return 1\n    else:\n        return 0\ndef am33(p,q,r,a,b,c):\n    if((a-b)!=0  and ((b*p)-(a*q))%(a-b)==0 and (b-c)!=0  and ((c*q)-(b*r))%(b-c)==0 and ((b*p)-(a*q))//(a-b)==((c*q)-(b*r))//(b-c) and  (p+(((b*p)-(a*q))//(a-b)))!=0 and a%(p+(((b*p)-(a*q))//(a-b)))==0):\n        return 1\n    else:\n        return 0\ndef ma22(p,q,r,a,b,c):\n    if((p!=0)  and q!=0  and (a%p)==0  and (b-c+r)%q==0 and (a//p)==((b-c+r)//q)):\n        return 1\n    else:\n        return 0\ndef ma21(p,q,r,a,b,c):\n    if((p!=0) and (q!=0) and (a%p)==0 and (b%q)==0 and (a//p)==(b//q)):\n        return 1\n    else:\n        return 0\ndef ma23(p,q,r,a,b,c):\n    if((q!=0) and (p!=0)  and (b-c+r)%q==0 and (a-c+r)%p==0 and ((b-c+r)//q)==((a-c+r)//p)):\n        return 1\n    else:\n        return 0\ndef ma32(p,q,r,a,b,c):\n    if(r!=0  and (q*c)%r==0 and (p*c)%r==0 and b-((q*c)//r)==a-((p*c)//r)  and (c%r)==0):\n        return 1\n    else:\n        return 0\ndef ms22(p,q,r,a,b,c):\n    if((q!=0) and (p!=0)  and ((b+r-c)%q)==0 and (a%p)==0 and ((b+r-c)//q)==(a//p)):\n        return 1\n    else:\n        return 0\ndef mm22(p,q,r,a,b,c):\n    if((q*c)!=0  and (b*r)%(q*c)==0 and (p!=0) and a%p==0 and  (a//p)==((b*r)//(q*c))):\n        return 1\n    else:\n        return 0\ndef mm21(p,q,r,a,b,c):\n    if((r!=0) and (c%r==0) and (q!=0) and (p!=0) and (b//q)==(a//p) and (b%q)==0 and (a%p)==0):\n        return 1\n    else:\n        return 0\ndef sa22(p,q,r,a,b,c):\n    if((q-b+c-r)==(p-a)):\n        return 1\n    else:\n        return 0\ndef sa21(p,q,r,a,b,c):\n    if((p-a)==(q-b)):\n        return 1\n    else:\n        return 0\ndef sm32(p,q,r,a,b,c):\n    if((q-r+c)!=0  and (p-r+c)!=0 and (b//(q-r+c))==(a//(p-r+c)) and b%(q-r+c)==0 and a%(p-r+c)==0):\n        return 1\n    else:\n        return 0\ndef as2(q,r,b,c):\n    if((q-r) == (b-c)):\n        return 1\n    else:\n        return 0\ndef m2(q,r,b,c):\n    if(r!=0  and q!=0  and  (b//q)==(c//r) and (b%q)==0 and (c%r)==0):\n        return 1\n    else:\n        return 0\ndef as3(p,q,r,a,b,c):\n    if(p-q == a-b and q-r == b-c and p-r == a-c):\n        return 1\n    else:\n        return 0\ndef m3(p,q,r,a,b,c):\n    if(q!=0  and r!=0 and p!=0 and (a//p)==(b//q) and (b//q)==(c//r) and (a%p)==0 and (b%q)==0 and c%r==0):\n        return 1\n    else:\n        return 0\nt=int(input())\nwhile(t>0):\n    p,q,r=map(int,input().split())\n    a,b,c=map(int,input().split())\n    l=[]\n    d=[]\n    l3=[]\n    l.append(p)\n    l.append(q)\n    l.append(r)\n    l.append(p)\n    l.append(r)\n    l.append(q)\n    l.append(q)\n    l.append(p)\n    l.append(r)\n    l.append(q)\n    l.append(r)\n    l.append(p)\n    l.append(r)\n    l.append(p)\n    l.append(q)\n    l.append(r)\n    l.append(q)\n    l.append(p)\n    l3.append(a)\n    l3.append(b)\n    l3.append(c)\n    l3.append(a)\n    l3.append(c)\n    l3.append(b)\n    l3.append(b)\n    l3.append(a)\n    l3.append(c)\n    l3.append(b)\n    l3.append(c)\n    l3.append(a)\n    l3.append(c)\n    l3.append(a)\n    l3.append(b)\n    l3.append(c)\n    l3.append(b)\n    l3.append(a)\n    l2=[]\n    l4=[]\n    if(p==a):\n        l2.append(q)\n        l2.append(r)\n        l4.append(b)\n        l4.append(c)\n    if(q==b):\n        l2.append(p)\n        l2.append(r)\n        l4.append(a)\n        l4.append(c)\n    if(r==c):\n        l2.append(p)\n        l2.append(q)\n        l4.append(a)\n        l4.append(b)\n    sol=0\n    ans=0\n    cnt=(p==a)+(q==b)+(r==c)\n    if(p==a and q==b and r==c):\n        ans=4\n    elif(cnt==2):\n        ans=1\n    else:\n        if(cnt==1):\n            for i in range(0,2,2):\n                sol=as2(l2[i],l2[i+1],l4[i],l4[i+1])\n                if(sol==1):\n                    break\n                sol=m2(l2[i],l2[i+1],l4[i],l4[i+1])\n                if(sol==1):\n                    break\n            if(sol==1):\n                ans=1\n                sol=0\n            else:\n                ans=2\n        elif(cnt==0 and ans==0):\n            sol=as3(p,q,r,a,b,c)\n            if(sol==1):\n                ans=1\n            sol=m3(p,q,r,a,b,c)\n            if(sol==1):\n                ans=1\n    sol=0\n    for  i in range(0,16,3):\n        if(ans!=0):\n            break\n        sol=aa22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=aa21(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=as22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=am22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=am21(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=am23(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=am32(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ma33(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=am33(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ma22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ma21(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ma23(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ma32(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=ms22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=mm22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=mm21(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=sa22(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n        sol=sm32(l[i],l[i+1],l[i+2],l3[i],l3[i+1],l3[i+2])\n        if(sol==1):\n            break\n    if(sol==1 and ans==0):\n        ans=2\n    elif(ans==0 and sol!=1):\n        ans=3\n    if(ans==4):\n        print(\"0\")\n    else:\n        print(ans)\n    t=t-1", "def checkpoint1(p,q,r,a,b,c):\r\n    if p==a and b-q==c-r :\r\n        return True\r\n    if q==b and a-p==c-r :\r\n        return True\r\n    if c==r and a-p==b-q:\r\n        return True\r\n    if p==a and q==b :\r\n        return True\r\n    if p==a and c==r :\r\n        return True\r\n    if c==r and b==q :\r\n        return True\r\n    if a-p==b-q and a-p==c-r :\r\n        return True\r\n    if q!=0 and r!=0 and b%q==0 and c%r==0 and p==a and b/q==c/r :\r\n        return True\r\n    if p!=0 and r!=0 and a%p==0 and c%r==0 and q==b and a/p==c/r :\r\n        return True\r\n    if p!=0 and q!=0 and a%p==0 and b%q==0 and c==r and a/p==b/q :\r\n        return True  \r\n    if p!=0 and q!=0 and r!=0 and a%p==0 and b%q==0 and c%r==0 and a/p==b/q and a/p==c/r:\r\n        return True \r\n    return False\r\ndef checkpoint2(p,q,r,a,b,c):\r\n    x1=a-p\r\n    y1=b-q\r\n    z1=c-r\r\n    if p==a or q==b or r==c :\r\n        return True\r\n    if a-p==b-q or b-q==c-r or c-r==a-p :\r\n        return True\r\n    if p!=0 and q!=0 and ( a%p==0 and b%q==0 ) and ( a/p==b/q ) :\r\n        return True\r\n    if p!=0 and r!=0 and ( a%p==0 and c%r==0 ) and ( a/p==c/r ) :\r\n        return True\r\n    if q!=0 and r!=0 and ( b%q==0 and c%r==0 ) and ( b/q==c/r ) :\r\n        return True\r\n    if p!=0 and q!=0 and r!=0 and a%p==0 and b%q==0 and c%r==0 and ( a/p*b/q==c/r or a/p*c/r==b/q or b/q*c/r==a/p ) :\r\n        return True\r\n    if x1+y1==z1 or x1+z1==y1 or y1+z1==x1 :\r\n        return True\r\n    if (q+x1)!=0 and r!=0 and b%(q+x1)==0 and c%r==0 and b/(q+x1)==c/r :\r\n        return True\r\n    if p!=0 and a%p==0 and b-(q*a/p)==c-r :\r\n        return True\r\n    if (q+z1)!=0 and p!=0 and b%(q+z1)==0 and a%p==0 and b/(q+z1)==a/p:\r\n        return True\r\n    if r!=0 and c%r==0 and b-(q*c/r)==a-p :\r\n        return True\r\n    if (p+y1)!=0 and r!=0 and a%(p+y1)==0 and c%r==0 and a/(p+y1)==c/r :\r\n        return True\r\n    if q!=0 and b%q==0 and  a-(p*b/q)==c-r :\r\n        return True\r\n    if (p+z1)!=0 and q!=0 and a%(p+z1)==0 and b%q==0 and a/(p+z1)==b/q :\r\n        return True\r\n    if r!=0 and c%r==0 and a-(p*c/r)==b-q :\r\n        return True\r\n    if (r+y1)!=0 and p!=0 and c%(r+y1)==0 and a%p==0 and c/(r+y1)==a/p :\r\n        return True\r\n    if q!=0 and b%q==0 and c-(r*b/q )==a-p :\r\n        return True\r\n    if (r+x1)!=0 and q!=0 and c%(r+x1)==0 and b%q==0 and c/(r+x1)==b/q :\r\n        return True\r\n    if p!=0 and a%p==0 and c-(r*a/p)==b-q :\r\n        return True\r\n    if (p+z1)!=0 and (q+z1)!=0 and a%(p+z1)==0 and b%(q+z1)==0 and a/(p+z1)==b/(q+z1) :\r\n        return True\r\n    if r!=0 and c%r==0 and a-(p*c/r)==b-(q*c/r) :\r\n        return True\r\n    if (p+y1)!=0 and (r+y1)!=0 and a%(p+y1)==0 and c%(r+y1)==0 and a/(p+y1)==c/(r+y1) :\r\n        return True\r\n    if q!=0 and b%q==0 and a-(p*b/q)==c-(r*b/q) :\r\n        return True\r\n    if (q+x1)!=0 and (r+x1)!=0 and b%(q+x1)==0 and c%(r+x1)==0 and b/(q+x1)==c/(r+x1) :\r\n        return True\r\n    if p!=0 and a%p==0 and b-(q*a/p)==c-(r*a/p) :\r\n        return True\r\n    if r!=0 and c%r==0 and c/r!=0 and a%(c/r)==0 and b%(c/r)==0 and a/(c/r)-p==b/(c/r)-q :\r\n        return True\r\n    if p!=0 and q!=0 and (a-z1)%p==0 and (b-z1)%q==0 and (a-z1)/p==(b-z1)/q :\r\n        return True\r\n    if q!=0 and b%q==0 and b/q!=0 and a%(b/q)==0 and c%(b/q)==0 and a/(b/q)-p==c/(b/q)-r : \r\n        return True\r\n    if p!=0 and r!=0 and (a-y1)%p==0 and (c-y1)%r==0 and (a-y1)/p==(c-y1)/r :\r\n        return True\r\n    if p!=0 and a%p==0 and a/p!=0 and b%(a/p)==0 and c%(a/p)==0 and b/(a/p)-q==c/(a/p)-r : \r\n        return True\r\n    if q!=0 and r!=0 and (b-x1)%q==0 and (c-x1)%r==0 and (b-x1)/q==(c-x1)/r :\r\n        return True \r\n    if (q-p)!=0 and (r-q)!=0 and (b-a)%(q-p)==0 and (c-b)%(r-q)==0 and (b-a)/(q-p)==(c-b)/(r-q):\r\n       return True\r\n    return False\r\ntest=int(input())\r\nfor _ in range(test):\r\n    x1,y1,z1=[int(x) for x in input().split()]\r\n    a,b,c=[int(x) for x in input().split()]\r\n    if a==x1 and b==y1 and c==z1:\r\n        print(0)\r\n    elif checkpoint1(x1,y1,z1,a,b,c):\r\n        print(1)\r\n    elif checkpoint2(x1,y1,z1,a,b,c):\r\n        print(2)\r\n    else:\r\n        print(3)", "def checkpoint1(p,q,r,a,b,c):\r\n    if p==a and b-q==c-r :\r\n        return True\r\n    if q==b and a-p==c-r :\r\n        return True\r\n    if c==r and a-p==b-q:\r\n        return True\r\n    if p==a and q==b :\r\n        return True\r\n    if p==a and c==r :\r\n        return True\r\n    if c==r and b==q :\r\n        return True\r\n    if a-p==b-q and a-p==c-r :\r\n        return True\r\n    if q!=0 and r!=0 and b%q==0 and c%r==0 and p==a and b/q==c/r :\r\n        return True\r\n    if p!=0 and r!=0 and a%p==0 and c%r==0 and q==b and a/p==c/r :\r\n        return True\r\n    if p!=0 and q!=0 and a%p==0 and b%q==0 and c==r and a/p==b/q :\r\n        return True  \r\n    if p!=0 and q!=0 and r!=0 and a%p==0 and b%q==0 and c%r==0 and a/p==b/q and a/p==c/r:\r\n        return True \r\n    return False\r\ndef checkpoint2(p,q,r,a,b,c):\r\n    x1=a-p\r\n    y1=b-q\r\n    z1=c-r\r\n    if p==a or q==b or r==c :\r\n        return True\r\n    if a-p==b-q or b-q==c-r or c-r==a-p :\r\n        return True\r\n    if p!=0 and q!=0 and ( a%p==0 and b%q==0 ) and ( a/p==b/q ) :\r\n        return True\r\n    if p!=0 and r!=0 and ( a%p==0 and c%r==0 ) and ( a/p==c/r ) :\r\n        return True\r\n    if q!=0 and r!=0 and ( b%q==0 and c%r==0 ) and ( b/q==c/r ) :\r\n        return True\r\n    if p!=0 and q!=0 and r!=0 and a%p==0 and b%q==0 and c%r==0 and ( a/p*b/q==c/r or a/p*c/r==b/q or b/q*c/r==a/p ) :\r\n        return True\r\n    if x1+y1==z1 or x1+z1==y1 or y1+z1==x1 :\r\n        return True\r\n    if (q+x1)!=0 and r!=0 and b%(q+x1)==0 and c%r==0 and b/(q+x1)==c/r :\r\n        return True\r\n    if p!=0 and a%p==0 and b-(q*a/p)==c-r :\r\n        return True\r\n    if (q+z1)!=0 and p!=0 and b%(q+z1)==0 and a%p==0 and b/(q+z1)==a/p:\r\n        return True\r\n    if r!=0 and c%r==0 and b-(q*c/r)==a-p :\r\n        return True\r\n    if (p+y1)!=0 and r!=0 and a%(p+y1)==0 and c%r==0 and a/(p+y1)==c/r :\r\n        return True\r\n    if q!=0 and b%q==0 and  a-(p*b/q)==c-r :\r\n        return True\r\n    if (p+z1)!=0 and q!=0 and a%(p+z1)==0 and b%q==0 and a/(p+z1)==b/q :\r\n        return True\r\n    if r!=0 and c%r==0 and a-(p*c/r)==b-q :\r\n        return True\r\n    if (r+y1)!=0 and p!=0 and c%(r+y1)==0 and a%p==0 and c/(r+y1)==a/p :\r\n        return True\r\n    if q!=0 and b%q==0 and c-(r*b/q )==a-p :\r\n        return True\r\n    if (r+x1)!=0 and q!=0 and c%(r+x1)==0 and b%q==0 and c/(r+x1)==b/q :\r\n        return True\r\n    if p!=0 and a%p==0 and c-(r*a/p)==b-q :\r\n        return True\r\n    if (p+z1)!=0 and (q+z1)!=0 and a%(p+z1)==0 and b%(q+z1)==0 and a/(p+z1)==b/(q+z1) :\r\n        return True\r\n    if r!=0 and c%r==0 and a-(p*c/r)==b-(q*c/r) :\r\n        return True\r\n    if (p+y1)!=0 and (r+y1)!=0 and a%(p+y1)==0 and c%(r+y1)==0 and a/(p+y1)==c/(r+y1) :\r\n        return True\r\n    if q!=0 and b%q==0 and a-(p*b/q)==c-(r*b/q) :\r\n        return True\r\n    if (q+x1)!=0 and (r+x1)!=0 and b%(q+x1)==0 and c%(r+x1)==0 and b/(q+x1)==c/(r+x1) :\r\n        return True\r\n    if p!=0 and a%p==0 and b-(q*a/p)==c-(r*a/p) :\r\n        return True\r\n    if r!=0 and c%r==0 and c/r!=0 and a%(c/r)==0 and b%(c/r)==0 and a/(c/r)-p==b/(c/r)-q :\r\n        return True\r\n    if p!=0 and q!=0 and (a-z1)%p==0 and (b-z1)%q==0 and (a-z1)/p==(b-z1)/q :\r\n        return True\r\n    if q!=0 and b%q==0 and b/q!=0 and a%(b/q)==0 and c%(b/q)==0 and a/(b/q)-p==c/(b/q)-r : \r\n        return True\r\n    if p!=0 and r!=0 and (a-y1)%p==0 and (c-y1)%r==0 and (a-y1)/p==(c-y1)/r :\r\n        return True\r\n    if p!=0 and a%p==0 and a/p!=0 and b%(a/p)==0 and c%(a/p)==0 and b/(a/p)-q==c/(a/p)-r : \r\n        return True\r\n    if q!=0 and r!=0 and (b-x1)%q==0 and (c-x1)%r==0 and (b-x1)/q==(c-x1)/r :\r\n        return True \r\n    if (q-p)!=0 and (r-q)!=0 and (b-a)%(q-p)==0 and (c-b)%(r-q)==0 and (b-a)/(q-p)==(c-b)/(r-q):\r\n       return True\r\n    return False\r\ntest=int(input())\r\nfor _ in range(test):\r\n    x1,y1,z1=[int(x) for x in input().split()]\r\n    a,b,c=[int(x) for x in input().split()]\r\n    if a==x1 and b==y1 and c==z1:\r\n        print(0)\r\n    elif checkpoint1(x1,y1,z1,a,b,c):\r\n        print(1)\r\n    elif checkpoint2(x1,y1,z1,a,b,c):\r\n        print(2)\r\n    else:\r\n        print(3)", "t=int(input())\nwhile t>0:\n    li1=[int(i) for i in input().split()]\n    li2=[int(i) for i in input().split()]\n    s1=set()\n    s2=set()\n    val,ans=0,3\n    for i in range(3):\n        if li1[i]==li2[i]:\n            val+=1\n    if val==3:\n        ans=0\n    elif val==2:\n        ans=1\n    else:\n        for i in range(3):\n            if li2[i]-li1[i]!=0:\n                s1.add(li2[i]-li1[i])\n            if li1[i]!=0 and li2[i]%li1[i]==0 and li2[i]//li1[i]!=1:\n                s2.add(li2[i]//li1[i])\n        temp=[]\n        for i in s1:\n            for j in range(7):\n                temp=[li1[k] for k in range(3)]\n                if j==0:\n                    temp[0]+=i\n                    temp[1]+=i\n                elif j==1:\n                    temp[0]+=i\n                    temp[2]+=i\n                elif j==2:\n                    temp[1]+=i\n                    temp[2]+=i\n                elif j==3:\n                    temp[0]+=i\n                    temp[1]+=i\n                    temp[2]+=i\n                elif j==4:\n                    temp[0]+=i\n                elif j==5:\n                    temp[1]+=i\n                elif j==6:\n                    temp[2]+=i\n                a=0\n                for k in range(3):\n                    if temp[k]==li2[k]:\n                        a+=1\n                if a==3:\n                    ans=1\n                if a==2:\n                    ans=min(ans,2)\n                s3=set()\n                for k in range(3):\n                    if temp[k]!=0 and li2[k]%temp[k]==0 and li2[k]//temp[k]!=1:\n                        s3.add(li2[k]//temp[k])\n                temp1=[]\n                for k in s3:\n                    for l in range(7):\n                        temp1=[temp[m] for m in range(3)]\n                        if l==0:\n                            temp1[0]*=k\n                            temp1[1]*=k\n                        elif l==1:\n                            temp1[0]*=k\n                            temp1[2]*=k\n                        elif l==2:\n                            temp1[1]*=k\n                            temp1[2]*=k\n                        elif l==3:\n                            temp1[0]*=k\n                            temp1[1]*=k\n                            temp1[2]*=k\n                        elif l==4:\n                            temp1[0]*=k\n                        elif l==5:\n                            temp1[1]*=k\n                        elif l==6:\n                            temp1[2]*=k\n                        for m in range(3):\n                            if li2[m]!=temp1[m]:\n                                break\n                            if m==2:\n                                ans=min(ans,2)\n                s4=set()\n                for k in range(3):\n                    if li2[k]-temp[k]!=0:\n                        s4.add(li2[k]-temp[k])\n                temp2=[]\n                for k in s4:\n                    for l in range(7):\n                        temp2=[temp[m] for m in range(3)]\n                        if l==0:\n                            temp2[0]+=k\n                            temp2[1]+=k\n                        elif l==1:\n                            temp2[0]+=k\n                            temp2[2]+=k\n                        elif l==2:\n                            temp2[1]+=k\n                            temp2[2]+=k\n                        elif l==3:\n                            temp2[0]+=k\n                            temp2[1]+=k\n                            temp2[2]+=k\n                        elif l==4:\n                            temp2[0]+=k\n                        elif l==5:\n                            temp2[1]+=k\n                        elif l==6:\n                            temp2[2]+=k\n                        for m in range(3):\n                            if li2[m]!=temp2[m]:\n                                break\n                            if m==2:\n                                ans=min(ans,2)\n                s4.clear()\n                count=0\n                for k in range(3):\n                    var=li2[k]-i\n                    if li1[k]!=0 and var%li1[k]==0:\n                        if var//li1[k]!=1:\n                            s4.add(var//li1[k])\n                        count+=1\n                if len(s4)==1 and count==3:\n                    ans=min(ans,2)\n        if ans==3 or ans==2:\n            d1=li2[2]-li2[1]\n            d2=li2[1]-li2[0]\n            d3=li1[2]-li1[1]\n            d4=li1[1]-li1[0]\n            d5=li2[2]-li2[0]\n            d6=li1[2]-li1[0]\n            if (d3!=0 and d4!=0 and d6!=0 and d1%d3==0 and d2%d4==0 and d5%d6==0 and d1//d3==d2//d4 and d1//d3==d5//d6):\n                ans=min(ans,2)\n            for i in s2:\n                s3=set()\n                count=0\n                for j in range(3):\n                    temp[j]=li2[j]\n                    if i!=0 and temp[j]%i==0:\n                        temp[j]//=i\n                        temp[j]-=li1[j]\n                        if temp[j]!=0:\n                            s3.add(temp[j])\n                        count+=1\n                    \n                if len(s3)==1 and count==3:\n                    ans=min(ans,2)\n            for i in s2:\n                for j in range(7):\n                    temp=[li1[k] for k in range(3)]\n                    if j==0:\n                        temp[0]*=i\n                        temp[1]*=i\n                    elif j==1:\n                        temp[0]*=i\n                        temp[2]*=i\n                    elif j==2:\n                        temp[1]*=i\n                        temp[2]*=i\n                    elif j==3:\n                        temp[0]*=i\n                        temp[1]*=i\n                        temp[2]*=i\n                    elif j==4:\n                        temp[0]*=i\n                    elif j==5:\n                        temp[1]*=i\n                    elif j==6:\n                        temp[2]*=i\n                    a=0\n                    for k in range(3):\n                        if temp[k]==li2[k]:\n                            a+=1\n                    if a==3:\n                        ans=1\n                    elif a==2:\n                        ans=min(ans,2)\n                    temp2=[]\n                    s4=set()\n                    for k in range(3):\n                        if temp[k]!=0 and li2[k]%temp[k]==0 and li2[k]//temp[k]!=1:\n                            s4.add(li2[k]//temp[k])\n                    temp2=[]\n                    for k in s4:\n                        for l in range(7):\n                            temp2=[temp[m] for m in range(3)]\n                            if l==0:\n                                temp2[0]*=k\n                                temp2[1]*=k\n                            elif l==1:\n                                temp2[0]*=k\n                                temp2[2]*=k\n                            elif l==2:\n                                temp2[1]*=k\n                                temp2[2]*=k\n                            elif l==3:\n                                temp2[0]*=k\n                                temp2[1]*=k\n                                temp2[2]*=k\n                            elif l==4:\n                                temp2[0]*=k\n                            elif l==5:\n                                temp2[1]*=k\n                            elif l==6:\n                                temp2[2]*=k\n                            for m in range(3):\n                                if li2[m]!=temp2[m]:\n                                    break\n                                if m==2:\n                                    ans=min(ans,2)\n                    s4.clear()\n                    for k in range(3):\n                        var=li2[k]-temp[k]\n                        if var!=0:\n                            s4.add(var)\n                    if len(s4)==1:\n                        ans=min(ans,2)\n    print(ans)\n    t-=1\n", "def util(x1, x2, y1, y2):\r\n    d = x1 - y1\r\n    n = x2 - y2\r\n    if d and not n%d:\r\n        return n//d\r\n    return 1\r\n\r\ndef solve(p, q, r, a, b, c, res=0):\r\n    if p == a and q == b and r == c:\r\n        return res\r\n    if res >= 2:\r\n        return 3\r\n    adds = [a-p, b-q, c-r]\r\n    muls = []\r\n    if p and not a%p:\r\n        muls += [a//p]\r\n    if q and not b%q:\r\n        muls += [b//q]\r\n    if r and not c%r:\r\n        muls += [c//r]\r\n    muls.append(util(p, a, q, b))\r\n    muls.append(util(p, a, r, c))\r\n    muls.append(util(q, b, r, c))\r\n    mask = 2**3\r\n    ans = 3\r\n    for msk in range(1, mask):\r\n        for add in adds:\r\n            np, nq, nr = p, q, r\r\n            if msk & 1:\r\n                np += add\r\n            if msk & 2:\r\n                nq += add\r\n            if msk & 4:\r\n                nr += add\r\n            ans = min(ans, solve(np, nq, nr, a, b, c, res+1))\r\n        for mul in muls:\r\n            np, nq, nr = p, q, r\r\n            if msk & 1:\r\n                np *= mul\r\n            if msk & 2:\r\n                nq *= mul\r\n            if msk & 4:\r\n                nr *= mul\r\n            ans = min(ans, solve(np, nq, nr, a, b, c, res+1))\r\n    return ans\r\n\r\ndef main():\r\n    t = int(input())\r\n    for i in range(t):\r\n        p, q, r = map(int, input().split())\r\n        a, b, c = map(int, input().split())\r\n        print(solve(p, q, r, a, b, c))\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"]