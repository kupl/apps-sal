["# cook your dish here\n\nt=int(input())\nwhile(t):\n t=t-1\n n,k=list(map(int,input().split()))\n q=list(map(int,input().split()))\n days,rem=0,0\n for i in range(n):\n  rem+=q[i]\n  if(rem>=k):\n   rem-=k\n  else:\n   days=i+1\n   break\n  days+=1\n if(rem>=k):\n  days+=(rem//k)+1\n print(days)\n", "# cook your dish here\ntry:\n t=int(input())\n while(t):\n  t=t-1\n  n,k=map(int,input().split())\n  q=list(map(int,input().split()))\n  days,rem=0,0\n  for i in range(n):\n   rem+=q[i]\n   if(rem>=k):\n    rem-=k\n   else:\n    days=i+1\n    break\n   days+=1\n  if(rem>=k):\n   days+=(rem//k)+1\n  print(days)\nexcept:\n pass", "def calFirstFreeDay(r, k, count):\n if((r-k)<k):\n  print(count+2)\n else:\n  calFirstFreeDay(r-k, k, count+1)\n \n\nT = int(input())\nfor i in range(0, T):\n list = input().split()\n n = int(list[0])\n k = int(list[1])\n  \n pq = 0\n outputDone=False;\n arr = input().split()\n if(n==1):\n  print((int(int(arr[0])/k))+1)\n  outputDone = True\n if(not outputDone):\n  for j in range(0, n):\n   q = int(arr[j])\n   if((q+pq)<k):\n    print((j+1));\n    outputDone = True;\n    break;\n   else:\n    pq = (q+pq)-k;\n if(not outputDone):\n  calFirstFreeDay(pq, k, n)\n", "def calFirstFreeDay(r, k, count):\n if((r-k)<k):\n  print(count+2)\n else:\n  calFirstFreeDay(r-k, k, count+1)\n \n\nT = int(input())\nfor i in range(0, T):\n list = input().split()\n n = int(list[0])\n k = int(list[1])\n pq = 0\n outputDone=False;\n arr = input().split()\n for j in range(0, n):\n  q = int(arr[j])\n  if((q+pq)<k):\n   print((j+1));\n   outputDone = True;\n   break;\n  else:\n   pq = (q+pq)-k;\n if(not outputDone):\n  calFirstFreeDay(pq, k, n)\n", "def solve(n, k, q):\n leftq = 0\n for i in range(n):\n  leftq = leftq + q[i]\n  if leftq < k:\n   return i+1\n  leftq = leftq - k\n \n return n + leftq//k + 1\n\nt = int(input())\n\nfor _ in range(t):\n n, k = list(map(int , input().split()))\n queries = list(map(int , input().split()))\n print( solve(n, k, queries))\n \n", "# cook your dish here\nt=int(input())\n#print(t)\nfor _ in range(t):\n #print(t)\n p = list(map(int, input().split()))\n n = p[0]\n k = p[1]\n l = list(map(int, input().split()))\n #print(l)\n s=0\n f=1\n for i in range(0,n):\n  s += l[i]\n  if(s<k):\n   print(i+1)\n   f=0\n   break\n  s = s-k\n \n if(f):\n  print( sum(l)//k + 1)\n", "try:\n t = int(input())\n for _ in range(t):\n  n, k = map(int, input().split())\n  qArr = list(map(int, input().split()))\n  res = (sum(qArr)//k) + 1\n  print(res)\nexcept:\n pass", "for i in range(int(input())):\n n,k=list(map(int,input().split()))\n q=[int(z) for z in input().split()]\n carry,flag=0,0\n for i in range(n):\n  if q[i]+carry>=k:\n   carry+=q[i]-k\n  else:\n   flag=1\n   print(i+1)\n   break\n if carry>0 and flag!=1:\n  print(carry//k +1+n)\n elif carry==0 and flag!=1:\n  print(n+1)\n   \n", "for i in range(int(input())):\n n,k=list(map(int,input().split()))\n q=[int(z) for z in input().split()]\n count=n-1\n for i in range(n-1):\n  if q[i]>k:\n   q[i+1]+=q[i]-k\n if q[n-1]<=k:\n  count+=1\n else:\n  count+=(q[n-1]//k)+1\n print(count)\n   \n", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n arr = list(map(int, input().split()))\n left = 0\n total_q = 0\n flag = 0\n for i in range(n):\n  total_q += arr[i]\n  if total_q < k:\n   flag= 1\n   break\n  total_q = total_q - k\n left = total_q\n\n if flag:\n  print(i+1)\n else:\n  if not left:\n   print(n)\n  else:\n   print(n + int(left / k) + 1)\n", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n arr = list(map(int, input().split()))\n left = 0\n total_q = 0\n\n for i in range(n):\n  total_q += arr[i]\n  total_q = total_q - k if total_q - k > 0 else 0\n left = total_q\n\n if not left:\n  print(n)\n else:\n  print(n + int(left / k) + 1)\n", "for _ in range(int(input())):\n n, k = list(map(int, input().split()))\n arr = list(map(int, input().split()))\n left = 0\n total_q = 0\n\n for i in range(n-1):\n  total_q += int(arr[i])\n  total_q = total_q - k if total_q - k > 0 else 0\n left = total_q\n\n left += arr[n-1]\n if left < k:\n  print(n)\n elif left == k:\n  print(n + 1)\n else:\n  left = left - k\n  print(n+int(left/k)+1)\n", "for i in range(int(input())):\n n, k = map(int, input().split())\n arr = list(map(int, input().split()))\n s = sum(arr)\n print(max(int(s/k)+1, n))", "for _ in range(int(input())):\n i=0\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n so=l[i]\n result=sum(l)\n r=result//k\n if(r<=k):\n  print(r+1)\n else:\n  print(r+k//so+1)", "for _ in range(int(input())):\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n result=sum(l)\n r=result//k\n print(r+1)", "# cook your dish here\nt = int(input())\nwhile(t > 0):\n n,k = map(int,input().split())\n q = [int(x) for x in input().split()]\n carry = 0\n flag = 0\n for i in range(n):\n  if(q[i]+carry>=k):\n   carry = q[i] + carry - k\n  else:\n   flag = 1\n   print(i+1)\n   break\n if(carry > 0 and flag != 1):\n  rem = carry//k + 1 + n\n  print(rem)\n elif(carry == 0 and flag != 1):\n  print(n+1)\n t -= 1", "# cook your dish here\nt = int(input())\nwhile(t > 0):\n n,k = map(int,input().split())\n q = [int(x) for x in input().split()]\n carry = 0\n for i in range(n):\n  if(q[i]+carry>=k):\n   carry = q[i] + carry - k\n  else:\n   print(i+1)\n   break\n if(carry > 0 and k != 0):\n  rem = carry//k + 1 + n\n  print(rem)\n elif(carry == 0):\n  print(n+1)\n t -= 1", "# cook your dish here\nt = int(input())\nwhile(t > 0):\n n,k = map(int,input().split())\n q = [int(x) for x in input().split()]\n carry = 0\n for i in range(n):\n  if(q[i]+carry>=k):\n   carry = q[i] + carry - k\n  else:\n   print(i+1)\n   break\n if(carry > 0):\n  rem = carry//k + 1 + n\n  print(rem)\n elif(carry == 0):\n  print(n+1)\n t -= 1", "# cook your dish here\nt = int(input())\nwhile(t > 0):\n n,k = map(int,input().split())\n q = [int(x) for x in input().split()]\n carry = 0\n for i in range(n):\n  if(q[i]+carry>=k):\n   carry = q[i] + carry - k\n  elif(q[i]+carry<k):\n   print(i+1)\n   break\n  else:\n   print(i+1)\n   break\n if(carry > 0):\n  rem = carry//k + 1 + n\n  print(rem)\n t -= 1", "# cook your dish here\nt = int(input())\nwhile(t > 0):\n n,k = map(int,input().split())\n q = [int(x) for x in input().split()]\n carry = 0\n for i in range(n):\n  if(q[i]+carry>=k):\n   carry = q[i] + carry - k\n  else:\n   print(i+1)\n   break\n if(carry > 0):\n  rem = carry//k + 1 + n\n  print(rem)\n t -= 1", "t=int(eval(input('')))\nfor i in range(t):\n n, k = [int(n) for n in input(\" \").split()]\n lst = list(map(int, input().split()))\n j=0\n leftover=0\n ans=0\n for i in range(n):\n  j=lst[i]+leftover\n  leftover=j-k\n  if(j<k):\n   ans=i+1 \n   break\n if(leftover>=0):\n  ans=n+(leftover//k)+1 \n print(ans)\n", "t=int(input())\nfor each in range(t):\n n,k=map(int,input().split())\n q=list(map(int,input().split()))\n i=0\n while True:\n  if i<n:\n   if i==0:\n    if q[i]<k:\n     print(i+1)\n     break\n    r=q[i]-k\n    i+=1\n   else:\n    if (r+q[i])<k:\n     print(i+1)\n     break\n    r=(r+q[i])-k\n    i=i+1 \n  else:\n   print(i+(r//k)+1)\n   break", "# sai ram\nfor _ in range(int(input())):\n n,k=[int(x) for x in input().split()]\n q=[int(x) for x in input().split()]\n \n \n print((sum(q)//k)+1)\n \n  \n"]