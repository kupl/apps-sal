["#dt = {} for i in x: dt[i] = dt.get(i,0)+1\r\nimport sys;input = sys.stdin.readline\r\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\r\n\r\ndef kadane(arr, start, finish, n):\r\n    Sum = 0\r\n    maxSum = float('-inf')\r\n    i = None\r\n    finish[0] = -1\r\n    local_start = 0\r\n    for i in range(n):\r\n        Sum += arr[i]\r\n        if Sum < 0:\r\n            Sum = 0\r\n            local_start = i + 1\r\n        elif Sum > maxSum:\r\n            maxSum = Sum\r\n            start[0] = local_start\r\n            finish[0] = i\r\n\r\n    if finish[0] != -1:\r\n        return maxSum\r\n\r\n    maxSum = arr[0]\r\n    start[0] = finish[0] = 0\r\n\r\n    for i in range(1, n):\r\n        if arr[i] > maxSum:\r\n            maxSum = arr[i]\r\n            start[0] = finish[0] = i\r\n    return maxSum\r\n\r\ndef findMaxSum(M):\r\n    nonlocal ROW, COL\r\n    maxSum, finalLeft = float('-inf'), None\r\n    finalRight, finalTop, finalBottom = None, None, None\r\n    left, right, i = None, None, None\r\n\r\n    temp = [None] * ROW\r\n    Sum = 0\r\n    start = [0]\r\n    finish = [0]\r\n\r\n    for left in range(COL):\r\n        temp = [0] * ROW\r\n        for right in range(left, COL):\r\n            for i in range(ROW):\r\n                temp[i] += M[i][right]\r\n            Sum = kadane(temp, start, finish, ROW)\r\n            if Sum > maxSum:\r\n                maxSum = Sum\r\n                finalLeft = left\r\n                finalRight = right\r\n                finalTop = start[0]\r\n                finalBottom = finish[0]\r\n\r\n    for i in range(finalTop,finalBottom+1):\r\n        print(*M[i][finalLeft:finalRight+1])\r\n\r\n\r\nROW,COL = ip()\r\nM = [ip() for i in range(ROW)]\r\nfindMaxSum(M)\r\n\r\n\r\n    \r\n"]