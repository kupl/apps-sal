["n = int(input())\nedges = [[int(x) for x in input().split()] for i in range(n-1)]\nedges = sorted(edges)\nuse_count = [0]+[int(input()) for i in range(n)]\nlo,hi = 0,10000\ndef getpar(par,u):\n    if par[par[u]] == par[u]:\n        return par[u]\n    par[u] = getpar(par,par[u])\n    return par[u]\ndef unite(par,sz,use,u,v):\n    u = getpar(par,u)\n    v = getpar(par,v)\n    par[u] = v\n    sz[v] += sz[u]\n    use[v] += use[u]\ndef solve(fp):\n    par = [i for i in range(n+1)]\n    sz = [1 for i in range(n+1)]\n    use = [use_count[i] for i in range(n+1)]\n    for edge in edges:\n        if edge[2] < fp:\n            unite(par,sz,use,edge[0],edge[1])\n    total_use = sum(use_count)\n    for i in range(n+1):\n        p = getpar(par,i)\n        if(p == i):\n            if(total_use - use[p] < sz[p]):\n                return False\n    return True\nwhile lo < hi:\n    mid = (lo+hi+1)//2\n    if solve(mid):\n        lo = mid\n    else:\n        hi = mid-1\nprint(lo)\n"]