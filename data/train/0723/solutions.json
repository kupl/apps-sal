["def ans(l):\n s = \"\"\n i = 0\n while (i < len(l)):\n  temp = l[i]\n  k = temp[1]\n  if (k != 0):\n   s += str(temp[0]) + \"x^\" + str(k)\n  else:\n   s += str(temp[0])\n  i += 1\n  if (i < len(l)):\n   s += \" + \"\n if (len(s) > 0):\n  return s\n else:\n  return \"0\"\n \ntest = int(input())\nwhile (test != 0):\n test -= 1\n N = int(input())\n l = []\n while (N != 0):\n  n,m = list(map(int,input().split()))\n  if (m > 0):\n   l += [[n*m,m-1]]\n  N -= 1\n print(ans(l))\n", "def ans(l):\n s = \"\"\n i = 0\n while (i < len(l)):\n  temp = l[i]\n  k = temp[1]\n  if (k != 0):\n   s += str(temp[0]) + \"x^\" + str(k)\n  else:\n   s += str(temp[0])\n  i += 1\n  if (i < len(l)):\n   s += \" + \"\n return s\n\n \ntest = int(input())\nwhile (test != 0):\n test -= 1\n N = int(input())\n l = []\n while (N != 0):\n  n,m = list(map(int,input().split()))\n  if (m > 0):\n   l += [[n*m,m-1]]\n  N -= 1\n print(ans(l))\n", "def ans(l):\n s = \"\"\n i = 0\n while (i < len(l)):\n  temp = l[i]\n  k = temp[1]\n  if (k != 0):\n   s += str(temp[0]) + \"x^\" + str(k)\n  else:\n   s += str(temp[0])\n  i += 1\n  if (i != len(l)):\n   s += \" + \"\n return s\n\n\n \ntest = int(input())\nwhile (test != 0):\n test -= 1\n N = int(input())\n l = []\n while (N != 0):\n  n,m = list(map(int,input().split()))\n  if (m > 0):\n   l += [[n*m,m-1]]\n  N -= 1\n print(ans(l))\n", "# cook your code here\nT = int(input())\nfor i in range(T):\n N = int(input())\n poly = [(0,0) for j in range(N)]\n diff = [(0,0) for j in range(N)]\n for j in range(N):\n  poly[j] = list(map(int,input().split()))\n  diff[j] = [poly[j][1]-1,poly[j][0]*poly[j][1]]\n diff.sort()\n diff.reverse()\n for j in range(N):\n  if j==0:\n   if diff[j][0]==-1:\n    print(0, end=' ')\n   elif diff[j][0] == 0:\n    print(\"%d\" % diff[j][1], end=' ')\n   else:\n    print(\"%dx^%d\" % (diff[j][1],diff[j][0]), end=' ')\n  else:\n   if diff[j][0]==-1:\n    break\n   elif diff[j][0]== 0:\n    print(\"+ %d\" % diff[j][1], end=' ')\n   else:\n    print(\"+ %dx^%d\" % (diff[j][1] ,diff[j][0]), end=' ')\n print(\"\")", "t=int(input())\nst=\"\"\nx=0\nzt=\"\"\nwhile t:\n t-=1\n n=int(input()) - 1\n a=[int(x) for x in input().split()]\n if a[0] == 0 or a[1]==0:\n  x=0\n elif a[1]>1:\n  st+=str(a[1]*a[0])+\"x^\"+str(a[1]-1)\n elif a[1]==1:\n  st+=str(a[0])\n while n:\n  n-=1\n  a=[int(x) for x in input().split()]\n  if a[0] == 0 or a[1]==0:\n   x=0\n  elif a[1]>1:\n   st+=\" + \"+str(a[1]*a[0])+\"x^\"+str(a[1]-1)\n  elif a[1]==1:\n   st+=\" + \"+str(a[0])\n for i in range(len(st)):\n  if st[i] == ' ' or st[i] == '+':\n   continue\n  else:\n   break\n st=st[i:]\n\n print(st)\n st=\"\"\n\n\n", "t=int(input())\nst=\"\"\nx=0\nwhile t:\n t-=1\n n=int(input()) - 1\n a=[int(x) for x in input().split()]\n if a[0] == 0 or a[1]==0:\n  x=0\n elif a[1]>1:\n  st+=str(a[1]*a[0])+\"x^\"+str(a[1]-1)\n elif a[1]==1:\n  st+=str(a[0])\n while n:\n  n-=1\n  a=[int(x) for x in input().split()]\n  if a[0] == 0 or a[1]==0:\n   x=0\n  elif a[1]>1:\n   st+=\" + \"+str(a[1]*a[0])+\"x^\"+str(a[1]-1)\n  elif a[1]==1:\n   st+=\" + \"+str(a[0])\n\n print(st)\n st=\"\"\n\n\n", "from sys import stdin\n\nT = int(stdin.readline().strip())\nfor x in range(T):\n N = int(stdin.readline().strip())\n ansList = []\n for i in range(N):\n  a, p = list(map(int, stdin.readline().strip().split()))\n  if p > 1:\n   ansList.append(\"%dx^%d\" % (a*p, (p-1)))\n  elif p == 1:\n   ansList.append(\"%d\" % (a*p))\n value = True\n ans = 0\n for k in range(ansList.__len__()):\n  if not \"x\" in ansList[k]:\n   ans += int(ansList[k])\n   continue\n  else:\n   value = False\n if value:\n  print(ans)\n  continue\n for j in range(ansList.__len__()):\n  if j != ansList.__len__() - 1:\n   print(ansList[j], \"+\", end=' ')\n  else:\n   print(ansList[j])\n", "from sys import stdin\n\nT = int(stdin.readline().strip())\nfor x in range(T):\n N = int(stdin.readline().strip())\n ansList = []\n for i in range(N):\n  a, p = list(map(int, stdin.readline().strip().split()))\n  if p > 1:\n   ansList.append(\"%dx^%d\" % (a*p, (p-1)))\n  elif p == 1 and a != 0:\n   ansList.append(\"%d\" % (a*p))\n for j in range(ansList.__len__()):\n  if j != ansList.__len__() - 1:\n   print(ansList[j], \"+\", end=' ')\n  else:\n   print(ansList[j])", "def f(x):\n return x[1]\nfor t in range(int(input())):\n n = int(input())\n s = \"\"\n l = []\n for i in range(n):\n  a,p = list(map(int,input().split()))\n  l.append((a,p))\n l = sorted(l, key = f, reverse= True)\n for i in range(n):\n  a,p = l[i]\n  a = a*p\n  p -= 1\n  if (a==0):\n   continue\n  if (p==0):\n   s+= \" + \"+str(a)\n  else:\n   s += \" + \"+str(a)+\"x^\"+str(p)\n s = s[3:]\n if (len(s)==0):\n  print(0)\n else:\n  print(s)", "import sys\n\nfor __ in range(eval(input())) :\n n = eval(input())\n ans ,const = \"\" , False\n for i in range(n) :\n  p , a = list(map(int,sys.stdin.readline().split()))\n  coeff , power = 0 , 0\n  if a > 0 :\n   coeff = a*p\n   power = a-1\n   if power != 0 :\n    if n == 1 :\n     ans += str(coeff)+'x^'+str(power)\n     const = True\n    else :\n     ans += str(coeff)+'x^'+str(power)+\" + \"\n   else :\n    ans += str(coeff)\n    const = True\n print(0 if ans==\"\" else ans.strip() if const else ans[:len(ans)-3].strip())\n", "CA=[]\nIA=[]\nfor i__i in range(eval(input())):\n n=eval(input())\n for __ in range(n):\n  zz,ex=list(map(int,input().split()))\n  if ex==0: continue\n  if (ex>1):  CA.append(str(zz*ex)+\"x^\"+str(ex-1))\n  if (ex==1): IA.append((zz*ex)) \n k=sum(IA)\n if k>0: CA.append(str(k))\n str1 = ' + '.join(str(e) for e in CA)\n if len(str1)>=1: print(str1)\n else : print(\"0\")\n CA[:]=[]\n IA[:]=[]\n \n \n", "CA=[]\nIA=[]\nfor II_II in range(eval(input())):\n n=eval(input())\n for KK_KK in range(n):\n  cof,exp=list(map(int,input().split()))\n  if exp==0:\n   continue\n  if (exp>1):\n   CA.append(str(cof*exp)+\"x^\"+str(exp-1))\n  if (exp==1):\n   IA.append((cof*exp)) \n k=sum(IA)\n if k>0: CA.append(str(k))\n str1 = ' + '.join(str(e) for e in CA)\n if len(str1)>=1: print(str1)\n else : print(\"0\")\n CA[:]=[]\n IA[:]=[]\n", "CharacterArray=[]\nIntegerArray=[]\nfor II_II in range(eval(input())):\n n=eval(input())\n for KK_KK in range(n):\n  cof,exp=list(map(int,input().split()))\n  if exp==0:\n   continue\n  if (exp>1):\n   CharacterArray.append(str(cof*exp)+\"x^\"+str(exp-1))\n  if (exp==1):\n   IntegerArray.append((cof*exp))\n #print IntegerArray\n k=sum(IntegerArray)\n if k>0: CharacterArray.append(str(k))\n #print CharacterArray\n str1 = ' + '.join(str(e) for e in CharacterArray)\n if len(str1)>=1: print(str1)\n else : print(\"0\")\n CharacterArray[:]=[]\n IntegerArray[:]=[]\n \n \n", "CharacterArray=[]\nIntegerArray=[]\nfor II_II in range(eval(input())):\n n=eval(input())\n for KK_KK in range(n):\n  cof,exp=list(map(int,input().split()))\n  if exp==0:\n   continue\n  if (exp>1):\n   CharacterArray.append(str(cof*exp)+\"x^\"+str(exp-1))\n  if (exp==1):\n   IntegerArray.append((cof*exp))\n #print IntegerArray\n k=sum(IntegerArray)\n if k>0: CharacterArray.append(str(k))\n #print CharacterArray\n str1 = ' + '.join(str(e) for e in CharacterArray)\n print(str1)\n CharacterArray[:]=[]\n IntegerArray[:]=[]\n \n \n", "arr=[]\nfor II_II in range(eval(input())):\n n=eval(input())\n for KK_KK in range(n):\n  cof,exp=list(map(int,input().split()))\n  if exp==0:\n   continue\n  if (exp>1):\n   arr.append(str(cof*exp)+\"x^\"+str(exp-1))\n  if (exp==1):\n   arr.append(str(cof*exp))\n #print arr\n str1 = ' + '.join(str(e) for e in arr)\n print(str1)\n #\"+\".join(l)\n arr[:]=[]\n \n \n\n   \n \n", "import operator\n\ndef getTerm(v, first=False):\n a = v[0]\n p = v[1]\n s = ''\n if a != 0:\n  if not first:\n   s += ' + '\n \n  if p == 0:\n   s += str(a)\n  else:\n   s += str(a) + \"x^\" + str(p)\n \n return s\n \n \ndef main():\n i = 0\n t = int(input())\n while i < t:\n  n = int(input())\n  v = []\n  ans = ''\n \n  for x in range(0, n):\n   m = input().split(' ')\n   tup = (int(m[0]) * int(m[1]), int(m[1]) - 1)\n   v.append(tup)\n\n  # sort descending\n  v = sorted(v,key=lambda x:(-x[1],x[0]))\n\n  fterm = v[0]\n  if fterm[1] != 0 and fterm[0] != 0:\n   ans = str(fterm[0]) + \"x^\" + str(fterm[1])\n  else:\n   ans = str(fterm[0])\n \n  for j in range(1, n):\n   ans += getTerm(v[j])\n \n  print(ans)\n \n  i+=1\n \ndef __starting_point():\n main()\n__starting_point()", "import operator\n\ndef getTerm(v, first=False):\n a = v[0]\n p = v[1]\n s = ''\n if a != 0:\n  if not first:\n   s += ' + '\n \n  if p == 0:\n   s += str(a)\n  else:\n   s += str(a) + \"x^\" + str(p)\n \n return s\n \n \ndef main():\n i = 0\n t = int(input())\n while i < t:\n  n = int(input())\n  v = []\n  ans = ''\n \n  for x in range(0, n):\n   m = input().split(' ')\n   tup = (int(m[0]) * int(m[1]), int(m[1]) - 1)\n   v.append(tup)\n\n  # sort descending\n  v = sorted(v,key=lambda x:(-x[1],x[0]))\n\n  fterm = v[0]\n  if fterm[1] != 0 and fterm[0] != 0:\n   ans = str(fterm[0]) + \"x^\" + str(fterm[1])\n  else:\n   ans = fterm[0]\n \n  for j in range(1, n):\n   ans += getTerm(v[j])\n \n  print(ans)\n \n  i+=1\n \ndef __starting_point():\n main()\n__starting_point()", "def getTerm(v, first=False):\n a = v[0]\n p = v[1]\n s = ''\n if a != 0:\n  if not first:\n   s += ' + '\n \n  if p == 0:\n   s += str(a)\n  else:\n   s += str(a) + \"x^\" + str(p)\n \n return s\n \n \ndef main():\n i = 0\n t = int(input())\n while i < t:\n  n = int(input())\n  v = []\n  ans = ''\n \n  for x in range(0, n):\n   m = input().split(' ')\n   tup = (int(m[0]) * int(m[1]), int(m[1]) - 1)\n   v.append(tup)\n\n  v = sorted(v,key=lambda x:(-x[1],x[0]))\n  ans = getTerm(v[0], True)\n \n  for j in range(1, n):\n   ans += getTerm(v[j])\n \n  print(ans)\n \n  i+=1\n \ndef __starting_point():\n main()\n__starting_point()", "\n\n\nt=int(input())\nwhile t:\n n=int(input())\n ans=\"\"\n c=[]\n zero=0\n while n:\n  a,b=input().split()\n  a=int(a)\n  b=int(b)\n  if b==0:\n   zero+=1\n  if b==1:\n   c.append(repr(a))\n  elif b!=0:  \n   c.append(repr(a*b) + 'x^' + repr((b-1)))\n  n-=1\n l=len(c)\n\n if l==0:\n  print(0)\n else:\n  cnt=0\n  for i in c:\n   print(i, end=' ')\n   cnt+=1\n   if cnt!=l:\n    print(' + ', end=' ')\n  print('\\n', end=' ')\n t-=1\n", "# cook your code here\nt=eval(input())\nwhile(t!=0):\n n=eval(input())\n x=[]\n y=[]\n #print a\n for i in range(0,n):\n  b=list(map(int,input().split(' ')))\n  #print b\n  \n  x.append(b[1])\n  y.append(b[0])\n xy=list(zip(*sorted(zip(x,y))))\n x=xy[0]\n y=xy[1]\n for i in reversed(list(range(0,n))):\n  if(x[i]!=0):\n   if(i!=n-1):\n    print(\"+\", end=' ')\n  \n   if(x[i]==1):\n    print(\"%d\"%(x[i]*y[i]), end=' ')\n   else:    \n    print(\"%dx^%d\"%(x[i]*y[i],x[i]-1), end=' ')\n print()\n \n # print x\n#print y\n t=t-1", "# your code goes here\ndef myKey(l):\n return -l[1]\nt=int(input())\nfor tests in range(t):\n n=int(input())\n ca=[]\n for i in range(n):\n  l=input()\n  l=l.split()\n  l[0]=int(l[0])\n  l[1]=int(l[1])\n  ca.append(l)\n if n==1 and ca[0][1]==0:\n  print(\"0\")\n  continue\n ca.sort(key=myKey)\n for i in range(n):\n  ca[i][0]*=ca[i][1]\n  ca[i][1]-=1\n ans=\"\"\n for i in range(n-1):\n  if ca[i][0]!=0:\n   if ca[i][1]!=0:\n    ans+=(str(ca[i][0])+\"x^\"+str(ca[i][1])+\" + \")\n   else:\n    ans+=(str(ca[i][0])+\" + \")\n if ca[n-1][0]!=0:\n  if ca[n-1][1]!=0:\n   ans+=(str(ca[n-1][0])+\"x^\"+str(ca[n-1][1]))\n  else:\n   ans+=(str(ca[n-1][0]))\n else:\n  ans=ans[:-3]\n print(ans)", "# your code goes here\ndef myKey(l):\n return -l[1]\nt=int(input())\nfor tests in range(t):\n n=int(input())\n ca=[]\n for i in range(n):\n  l=input()\n  l=l.split()\n  l[0]=int(l[0])\n  l[1]=int(l[1])\n  ca.append(l)\n ca.sort(key=myKey)\n for i in range(n):\n  ca[i][0]*=ca[i][1]\n  ca[i][1]-=1\n ans=\"\"\n for i in range(n-1):\n  if ca[i][0]!=0:\n   if ca[i][1]!=0:\n    ans+=(str(ca[i][0])+\"x^\"+str(ca[i][1])+\" + \")\n   else:\n    ans+=(str(ca[i][0])+\" + \")\n if ca[n-1][0]!=0:\n  if ca[n-1][1]!=0:\n   ans+=(str(ca[n-1][0])+\"x^\"+str(ca[n-1][1]))\n  else:\n   ans+=(str(ca[n-1][0]))\n else:\n  ans=ans[:-3]\n print(ans)"]