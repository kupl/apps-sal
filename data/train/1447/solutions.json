["# cook your dish here\n \nfor __ in range(int(input())):\n n=int(input())\n arr=list(map(int,input().split()))\n d={}\n s=set()\n flag=0\n for i in range(n):\n  if arr[i] in list(d.keys()):\n   d[arr[i]]+=1\n  else:\n   d[arr[i]]=1\n  curr_ele=arr[i]\n  if (curr_ele in s) and arr[i-1]!=arr[i]:\n   flag=1\n   break\n  else:\n   s.add(arr[i])\n c=list(d.values())\n if len(c)!=len(set(c)):\n  flag=1\n if flag==1:\n  print(\"NO\")\n else:\n  print(\"YES\")\n \n   \n  \n \n", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().strip().split()))\n m={}\n for i in a:\n  if(i not in m):\n   m[i]=1\n  else: m[i]+=1\n s= set()\n for i in m:\n  s.add(m[i])\n \n if len(s)!=len(m):\n  print(\"NO\")\n  continue\n tt=1\n for i in range(n):\n  flag=1\n  for j in range(i+1,n):\n   if(a[i]!=a[j]):\n    flag=0;\n   if flag==0 and a[i]==a[j]:\n    print(\"NO\")\n    tt=0\n    break;\n  if tt==0:\n   break\n if tt==1:\n  print(\"YES\")\n \n    \n   \n", "# cook your dish here\nfor _ in range(int(input())):\n n = int(input())\n arr = list(map(int,input().split()))\n\n d = {}\n\n i = 0\n\n flag = True\n while i<n:\n  if arr[i] not in d:\n   \n   count = 1\n\n   while i<n-1 and arr[i]==arr[i+1]:\n    count+=1\n    i+=1\n   \n   d[arr[i]] = count\n\n  else:\n   flag = False\n   break\n\n  i+=1\n \n # print(d,flag)\n\n if flag==False:\n  print(\"NO\")\n else:\n  t = list(d.values())\n\n  if len(t)==len(set(t)):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n\n", "for _ in range(int(input())):\n n = int(input())\n arr = list(map(int,input().split()))\n\n d = {}\n\n i = 0\n\n flag = True\n while i<n:\n  if arr[i] not in d:\n   \n   count = 1\n\n   while i<n-1 and arr[i]==arr[i+1]:\n    count+=1\n    i+=1\n   \n   d[arr[i]] = count\n\n  else:\n   flag = False\n   break\n\n  i+=1\n \n # print(d,flag)\n\n if flag==False:\n  print(\"NO\")\n else:\n  t = list(d.values())\n\n  if len(t)==len(set(t)):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n\n  \n\n  \n  \n\n\n \n\n\n\n \n", "for t in range(int(input())):\n n = int(input())\n arr=list(map(int,input().split()))\n con=[]\n count=1\n c=[]\n i=0\n while i<n:\n  while (i<n-1) and (arr[i]==arr[i+1]):\n   i+=1\n   count+=1\n  if arr[i] in con or count in c:\n   break\n  con.append(arr[i])\n  c.append(count)\n  i+=1\n  count=1\n \n if i==n :\n  print(\"YES\")\n else:\n  print(\"NO\")\n", "# cook your dish here\nfrom collections import Counter\ndef solve(arr):\n n = len(arr)\n d = Counter(arr)\n if len(d.values()) != len(set(d.values())):\n  return False\n i = 0\n j = 0 \n while i<n and j<n:\n  j = i + 1 \n  while j<n and arr[j] == arr[i]:\n   j = j + 1 \n  if j - i != d[arr[i]]:\n   return False\n  i = j \n return True\n \nfor _ in range(int(input())):\n n = int(input())\n arr = [int(num) for num in input().split(' ')]\n ans = solve(arr)\n if ans == True:\n  print('YES')\n else:\n  print('NO')", "# cook your dish here\nt=int(input())\nwhile t:\n n=int(input())\n arr=list(map(int,input().split()))\n con=[]\n count=1\n c=[]\n i=0\n while i<n:\n  while (i<n-1) and (arr[i]==arr[i+1]):\n   i+=1\n   count+=1\n  if arr[i] in con or count in c:\n   break\n  con.append(arr[i])\n  c.append(count)\n  i+=1\n  count=1\n \n if i==n :\n  print(\"YES\")\n else:\n  print(\"NO\")\n #print(*con)\n #print(*c)\n t-=1", "def check(l):\n c=[]\n s=list(set(l))\n for i in s:\n  c.append(l.count(i))\n if len(c)==len(set(c)):\n  return 1\n return 0\n \nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n s=0\n if check(l)==0:\n  print(\"NO\")\n  continue\n for i in range(1,n):\n  if l[i]!=l[i-1]:\n   s+=1\n if s==len(set(l))-1:\n  print(\"YES\")\n else:\n  print(\"NO\")", "# your code goes here\ndef fun(l):\n t=[]\n s=list(set(l))\n for i in s:\n  t.append(l.count(i))\n #print(t)\n #print(len(t),len(set(t)))\n if len(t)==len(set(t)):\n  #print(1)\n  return 1\n #print(0)\n return 0\n \nfor _ in range(int(input())):\n n=int(input())\n l=[int(i) for i in input().split()]\n s=0\n if fun(l)==0:\n  print(\"NO\")\n else:\n  for i in range(n-1):\n   if l[i]!=l[i+1]:\n    s+=1\n  if s==len(set(l))-1:\n   print(\"YES\")\n  else:\n   print(\"NO\")", "a = int(input())\nfor i in range(0, a):\n b = int(input())\n c = list(map(int, input().split()))\n n = [0 for k in range(0, 1000)]\n f1 = [0 for k in range(0, 1000)]\n f2 = [0 for k in range(0, 1000)]\n for l in range(0, b):\n  f1[c[l] - 1] += 1\n bo = True\n for l in range(0, 1000):\n  if(f1[l] > 0):\n   f2[f1[l]] += 1\n   if(f2[f1[l]] > 1):\n    bo = False\n    break\n if(bo):\n  j = 1\n  n[c[0] - 1] = 1\n  while(j < b):\n   if(c[j] == c[j-1]):\n    j += 1\n   elif(c[j] != c[j - 1] and n[c[j] - 1] != 1):\n    n[c[j] - 1] = 1\n    j+= 1\n   else:\n    print(\"NO\")\n    break\n  if(j == b):\n   print(\"YES\")\n else:\n  print(\"NO\")\n", "for _ in range(int(input())):\n n = int(input())\n inp = list(map(int, input().split()))\n ing = [inp[0]]\n count = []\n last = inp[0]\n ans = \"YES\"\n cnt = 1\n for i in range(1,n):\n  if last == inp[i]:\n   cnt += 1\n  else:\n   if cnt not in count and (inp[i] not in ing):\n    count.append(cnt)\n    cnt = 1\n    last = inp[i]\n    ing.append(last)\n   else:\n    ans = \"NO\"\n    break\n\n if cnt in count:\n  ans = \"NO\"\n print(ans)\n", "for _ in range(int(input())):\n n = int(input())\n val = [int(x) for x in input().split()]\n ing = [val[0]]\n count = []\n c = 1\n prev = val[0]\n ans = \"YES\"\n for i in val[1:]:\n  if prev == i:\n   c += 1\n  else:\n   if c not in count and (i not in ing):\n    count.append(c)\n    c = 1\n    prev = i\n    ing.append(prev)\n   else:\n    ans = \"NO\"\n    break\n\n if c in count:\n  ans = \"NO\"\n print(ans)", "for _ in range(int(input())):\n n = int(input())\n val = [int(x) for x in input().split()]\n ing = [val[0]]\n count = []\n c = 1\n prev = val[0]\n ans = \"YES\"\n for i in val[1:]:\n  if prev == i:\n   c += 1\n  else:\n   if c not in count and (i not in ing):\n    count.append(c)\n    c = 1\n    prev = i\n    ing.append(prev)\n   else:\n    ans = \"NO\"\n    break\n\n if c in count:\n  ans = \"NO\"\n print(ans)", "from collections import Counter\nfor _ in range(int(input())):\n n = int(input())\n arr = [int(x) for x in input().split()]\n lis = [arr[0]]\n lis += [arr[i] for i in range(1,n) if(arr[i-1]!=arr[i])]\n if(len(set(lis)) != len(lis)):\n  print(\"NO\")\n else:\n  c = dict(Counter(arr))\n  if(len(set(c.values())) == len(c)):\n   print(\"YES\")\n  else:\n   print(\"NO\")\n", "for _ in range(int(input())):\n n = int(input())\n l = list(map(int,input().split()))\n ing = [l[0]]\n count = []\n c = 1\n d = l[0]\n ans = \"YES\"\n for i in l[1:]:\n  if d == i:\n   c += 1\n  else:\n   if c not in count and (i not in ing):\n    count.append(c)\n    c = 1\n    d = i\n    ing.append(d)\n   else:\n    ans = \"NO\"\n    break\n  #print(ing,count)\n if c in count:\n  ans = \"NO\"\n print(ans)", "def sol(n, l):\n no, oc, m, k = {}, {}, l[0], 1\n for i in range(1, n):\n  if (l[i] != m):\n   if m in no or k in oc: return \"NO\"\n   else: no[m], oc[k] = True, True\n   m, k = l[i], 1\n  else: k += 1\n if m in no or k in oc: return \"NO\"\n return \"YES\"\n\nfor _ in range(int(input())):\n n = int(input())\n l = list(map(int, input().split()))\n print(sol(n, l))", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n ingredients=list(map(int,input().split(\" \")))\n ls=[ingredients[0]]\n count=[]\n index=[]\n c=1\n flag=1\n for i in range(1,n):\n  if ingredients[i]==ls[-1]:\n   c=c+1\n  else:\n   if ingredients[i] in ls:\n    flag=0\n    break\n   index.append(i)\n   ls.append(ingredients[i])\n   if c in count:\n    flag=0\n    break\n   count.append(c)\n   c=1\n if c in count or flag==0:\n  print(\"NO\")\n  continue\n print(\"YES\")\n \n # for i in range(n):\n", "# cook your dish here\nt = int(input())\n\nfor _ in range(t):\n n = int(input())\n a = list(map(int , input().split(\" \")))\n \n d={}\n flag=0\n for i in range(n):\n  if a[i] not in d:\n   d[a[i]]=[i,1]\n  elif a[i] in d and d[a[i]][0]+1==i:\n   temp = d[a[i]][1]\n   d[a[i]] = [i , temp+1]\n  else:\n   print(\"NO\")\n   flag=1\n   break\n \n # print(d)\n vals = list(d.values())\n dist=[]\n for i in vals:\n  #print(i)\n  dist.append(i[1])\n\n if flag==0:\n  if len(dist)== len(set(dist)):\n   print(\"YES\")\n  else:\n   print(\"NO\")", "# MOD = 1000000007\nfor _ in range(int(input())):\n # n,b,m = map(int,input().split())\n n = int(input())\n ings = list(map(int,input().split()))\n di_ings = {}\n last = 0\n possible = True\n for ing in ings :\n  if ing in di_ings :\n   if last == ing :\n    di_ings[ing] += 1\n   else :\n    possible = False\n    break\n  else :\n   di_ings[ing] = 1\n   last = ing\n # print(di_ings)\n if possible and len(set(di_ings)) == len(set(di_ings.values())) :\n  print('YES')\n else :\n  print('NO')\n", "for _ in range(int(input())):\n n = int(input())\n arr = list(map(int, input().split()))\n \n count = []\n jars = [arr[0]]\n prev = arr[0]\n curr_count = 1\n flag = True\n for a in arr[1:]:\n  if a != prev:\n   if a in jars or curr_count in count:\n    flag = False\n    break\n   jars.append(a)\n   count.append(curr_count)\n   curr_count = 1\n  \n  else:\n   curr_count += 1\n  prev = a\n \n if curr_count in count:\n  flag = False\n \n print(\"YES\" if flag else \"NO\")", "import sys\ncases = int(sys.stdin.readline().rstrip())\nfor case in range(cases):\n N = int(sys.stdin.readline().rstrip())\n p = list(map(int,sys.stdin.readline().rstrip().split(\" \")))\n freq = [0]*(1001)\n freq[p[0]]+=1\n error = False\n for i in range(1,len(p)):\n  if( freq[p[i]] > 0 and p [i-1] != p[i]):\n   error = True\n   break\n  else :\n   freq[p[i]] +=1\n #  print(freq)\n if(error):\n  print(\"NO\")\n else :\n  ms = []\n  error = False\n  for q in freq:\n   \n    \n   if q in ms and q !=0:\n    error = True \n    break\n   ms.append(q) \n  if(error):\n   print(\"NO\")\n  else :\n   print(\"YES\")\n  \n", "t = int(input())\n\nfor _ in range(t):\n n = int(input())\n \n arr = [int(x) for x in input().split()]\n freq = {}\n freq[arr[0]] = 1\n \n flag = 0\n \n for i in range(1, n):\n  if(arr[i-1] != arr[i] and arr[i] in freq):\n   flag = 1\n   break\n  if arr[i] in freq:\n   freq[arr[i]] += 1\n  else:\n   freq[arr[i]] = 1\n \n sam = []\n \n for i in freq:\n  sam.append(freq[i])\n \n sam2 = list(set(sam))\n sam.sort()\n sam2.sort()\n \n # print(\"flag\", flag, sam, sam2)\n \n if(sam != sam2):\n  flag = 1\n \n if(flag == 1):\n  print(\"NO\")\n else:\n  print(\"YES\")", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n u=[]\n t=[]\n ut=[]\n qw=[]\n c=0\n for i in l:\n  if i not in u:\n   u.append(i)\n   t.append(l.count(i))\n for i in t:\n  if i not in ut:\n   ut.append(i)\n for i in l:\n  if i not in qw or qw[-1]==i:\n   qw.append(i)\n  else:\n   print(\"NO\")\n   c=1\n   break\n if c==0 and len(ut)==len(t):\n  print(\"YES\")\n elif c==0:\n  print(\"NO\")\n  \n \n  \n", "for _ in range(int(input())):\n N = int(input())\n L = list(map(int, input().split()))\n new = {}\n for i in L:\n  if i in new.keys():\n   if i != list(new.keys())[-1]:\n    print('NO')\n    break\n   new[i] += 1\n  else:\n   new[i] = 0\n else:\n  print('YES' if len(new.values()) == len(set(new.values())) else 'NO')"]