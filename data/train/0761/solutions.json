["t=int(input())\n\ndef diffe(a,b):\n return int(a-b)\n\nwhile t :\n t=t-1\n \n lia=[]\n lib=[]\n lik=[]\n lim=[]\n liab=[]\n likm=[]\n n,k,m=list(map(int,input().split()))\n \n \n lia=list(map(int,input().split()))\n lib=list(map(int,input().split()))\n lik=list(map(int,input().split()))\n lim=list(map(int,input().split()))\n liab=list(map(diffe,lia,lib)) \n \n likm=lik+lim\n \n \n likm.sort()\n \n liab.sort()\n liab.reverse()\n \n for i in range(0,len(liab)): \n  for j in range(len(likm)-1,0-1,-1):\n   a=likm.pop()\n   if (liab[i]-a)>=0:\n     liab[i]=liab[i]-a\n     \n     break\n     \n     \n print(sum(liab)) \n\n", "t=int(input())\n\ndef diffe(a,b):\n return int(a-b)\n\nwhile t :\n t=t-1\n \n lia=[]\n lib=[]\n lik=[]\n lim=[]\n liab=[]\n likm=[]\n n,k,m=list(map(int,input().split()))\n \n \n lia=list(map(int,input().split()))\n lib=list(map(int,input().split()))\n lik=list(map(int,input().split()))\n lim=list(map(int,input().split()))\n liab=list(map(diffe,lia,lib)) \n \n likm=lik+lim\n \n \n likm.sort()\n \n liab.sort()\n liab.reverse()\n for i in range(0,len(liab)):\n  for j in range(len(likm)-1,0-1,-1):\n   a=likm.pop()\n   if (liab[i]-a)>=0:\n     liab[i]=liab[i]-a\n     \n     break\n     \n     \n print(sum(liab)) \n\n", "t=int(input())\n\ndef diffe(a,b):\n return int(a-b)\n\nwhile t :\n t=t-1\n \n lia=[]\n lib=[]\n lik=[]\n lim=[]\n liab=[]\n likm=[]\n n,k,m=list(map(int,input().split()))\n \n \n lia=list(map(int,input().split()))\n lib=list(map(int,input().split()))\n lik=list(map(int,input().split()))\n lim=list(map(int,input().split()))\n liab=list(map(diffe,lia,lib)) \n \n likm=lik+lim\n \n \n likm.sort()\n likm.reverse()\n liab.sort()\n liab.reverse()\n for i in range(0,len(liab)):\n  for j in range(0,len(likm)):\n   if (liab[i]-likm[j])>=0:\n     liab[i]=liab[i]-likm[j]\n     del likm[0:j+1]\n     break\n     \n     \n print(sum(liab)) \n\n", "t=int(input())\n\ndef diffe(a,b):\n return int(a-b)\n\nwhile t :\n t=t-1\n \n lia=[]\n lib=[]\n lik=[]\n lim=[]\n liab=[]\n likm=[]\n n,k,m=list(map(int,input().split()))\n \n \n lia=list(map(int,input().split()))\n lib=list(map(int,input().split()))\n lik=list(map(int,input().split()))\n lim=list(map(int,input().split()))\n liab=list(map(diffe,lia,lib)) \n \n likm=lik+lim\n likm.sort()\n \n \n likm.reverse() \n\n \n for i in range(0,len(liab)):\n  for j in range(0,len(likm)):\n   if (liab[i]-likm[j])>=0:\n     liab[i]=liab[i]-likm[j]\n     del likm[j]\n     break\n     \n     \n print(sum(liab)) \n\n", "for tests in range(eval(input())):\n [N,K,M] = list(map(int,input().split()))\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n C = list(map(int,input().split()))\n D = list(map(int,input().split()))\n \n E = [0]*N\n F = [0]*(K+M)\n \n for i in range(N):\n  E[i] = A[i]-B[i]\n  \n for i in range(K):\n  F[i] = C[i]\n \n for i in range(M):\n  F[i+K] = D[i]\n   \n E = sorted(E,reverse=True)\n F = sorted(F,reverse=True)\n \n k = 0\n\n for i in range(K+M):\n  if(E[k]>=F[i]):\n   E[k] = E[k]-F[i]\n   k = k+1\n \n print(sum(E))", "for tests in range(eval(input())):\n [N,K,M] = list(map(int,input().split()))\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n C = list(map(int,input().split()))\n D = list(map(int,input().split()))\n \n E = [0]*N\n F = [0]*(K+M)\n \n for i in range(N):\n  E[i] = A[i]-B[i]\n  \n for i in range(K):\n  F[i] = C[i]\n \n for i in range(M):\n  F[i+K] = D[i]\n   \n E = sorted(E,reverse=True)\n F = sorted(F,reverse=True)\n \n k = 0\n\n for i in range(K+M):\n  if(E[k]>F[i]):\n   E[k] = E[k]-F[i]\n   k = k+1\n \n print(sum(E))", "for tests in range(eval(input())):\n [N,K,M] = list(map(int,input().split()))\n A = list(map(int,input().split()))\n B = list(map(int,input().split()))\n C = list(map(int,input().split()))\n D = list(map(int,input().split()))\n \n E = [0]*N\n F = [0]*(K+M)\n \n for i in range(N):\n  E[i] = A[i]-B[i]\n  if(i<K):\n   F[i] = C[i]\n  elif(i<(K+M)):\n   F[i] = D[i-K]\n   \n E = sorted(E,reverse=True)\n F = sorted(F,reverse=True)\n \n k = 0\n\n for i in range(K+M):\n  if(E[k]>F[i]):\n   E[k] = E[k]-F[i]\n   k = k+1\n \n print(sum(E))\n", "def minTasks(diff, buttons):\n \"\"\"Time Complexity : O(len(diff) + len(buttons))\"\"\"\n i,j=0,0\n incompleteTasks=0\n while i<len(diff) and j<len(buttons):\n  if diff[i]>=buttons[j]:\n   incompleteTasks+=diff[i]-buttons[j]\n   i+=1\n   j+=1\n  else:\n   j+=1\n while i<len(diff):\n  incompleteTasks+=diff[i]\n  i+=1\n return incompleteTasks\n\n\nfrom sys import stdin\nt=int(stdin.readline())\nwhile t>0:\n n,k,m=list(map(int,stdin.readline().split()))\n planned=list(map(int,stdin.readline().split()))\n completed=list(map(int,stdin.readline().split()))\n white=list(map(int,stdin.readline().split()))\n black=list(map(int,stdin.readline().split()))\n buttons=white+black\n buttons.sort(reverse=True)\n##    print buttons\n diff=[]\n for i in range(n):\n  diff.append(planned[i]-completed[i])\n diff.sort(reverse=True)\n##    print diff\n print(minTasks(diff,buttons))\n t-=1", "import sys, bisect\n\nt = int(input())\n\nfor _ in range(t):\n\n n, k, m = list(map(int, input().split()))\n p = list(map(int, input().split()))\n c = list(map(int, input().split()))\n w = list(map(int, input().split()))\n b = list(map(int, input().split()))\n w.sort()\n b.sort()\n\n uncomp = 0\n\n for x in range(n):\n  diff = p[x] - c[x]\n  i = bisect.bisect_right(w, diff)\n  j = bisect.bisect_right(b, diff)\n  if i: w0 = w[i-1]\n  else: w0 = -1\n  if j: b0 = b[j-1]\n  else: b0 = -1\n  if w0 > b0 and w0 != -1:\n   p[x] -= w0\n   del w[i-1]\n  elif b0 != -1:\n   c[x] += b0\n   del b[j-1]\n  uncomp += p[x] - c[x]\n\n print(uncomp)", "tc=int(input())\nfor it in range(tc):\n n,k,m=list(map(int,input().split()))\n cnt=0\n cntr=k+m\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n c=list(map(int,input().split()))\n d=list(map(int,input().split()))\n for it1 in range(m):\n  c.append(d[it1])\n for j in range(n):\n  a[j]=a[j]-b[j]\n  cnt=cnt+a[j]\n a.sort()\n c.sort()\n while(n>0 and cntr>0):\n  if(a[n-1]>=c[cntr-1]):\n   cnt=cnt-c[cntr-1]\n   cntr=cntr-1\n   n=n-1\n  else:\n   cntr=cntr-1\n print(cnt)\n   \n   \n", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos =-1\n  if s > 0:        \n   pos = bisect_left(z, p) \n   if pos == s:\n    pos=pos-1\n   elif (z[pos] !=p):\n    pos=pos-1\n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)\n", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos =-1\n  if s > 0:        \n   pos = bisect_left(z, p) \n   if pos ==s:\n    pos=pos-1\n   if (z[pos] !=p):\n    pos=pos-1\n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)\n  \n", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos =-1\n  if len(z) > 0:        \n   pos = bisect_left(z, p) \n   if (z[pos] !=p):\n    pos=pos-1\n    \n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos =-1\n  if s > 0:        \n   pos = bisect_left(z, p) \n   if (z[pos] !=p):\n    pos=pos-1\n    \n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)\n  \n", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n #z.sort()\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos = bisect_left(z, p)\n  if s > 0:        \n   if (z[pos] !=p):\n    pos=pos-1\n  else:\n   pos = pos-1\n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)\n  \n\n \n  \n", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n #z.sort()\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos = bisect_left(z, p)\n  if z[pos] !=p:\n   pos=pos-1\n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)", "import operator\nfrom collections import Counter\nfrom bisect import bisect_left\n\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n #z.sort()\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n s=len(z)\n d=b+c\n tot =0\n refpos=0\n for p in x:\n  pos = bisect_left(z, p)-1\n  if pos>-1:\n   tot+=p-z[pos]\n   zc[z[pos]] -=1\n   d-=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n    s-=1\n  else:\n   tot+=p \n print(tot)", "\nimport operator\nfrom collections import Counter\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n #z.sort()\n zc = Counter(z)\n z = list(zc.keys())\n z.sort()\n tot =0\n for p in x:\n  minq=1000000\n  pos = -1\n  ctrpos = 0\n  for q in z:\n   if(q>p):\n    break\n   if (p-q)<minq:\n    minq = p-q\n    pos = ctrpos\n   ctrpos+=1\n  if pos !=-1:\n   tot+=minq\n   zc[z[pos]] -=1\n   if zc[z[pos]] ==0:\n    del z[pos]\n  else:\n   tot+=p \n print(tot)", "import operator\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = list(map(int,input().strip().split()))\n x2 = list(map(int,input().strip().split()))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = list(map(operator.sub, x1, x2))\n x.sort()\n z=y1+z1\n z.sort()\n tot =0\n for p in x:\n  minq=1000000\n  pos = -1\n  ctrpos = 0\n  for q in z:\n   if(q>p):\n    break\n   if (p-q)<minq:\n    minq = p-q\n    pos = ctrpos\n   ctrpos+=1\n  if pos !=-1:\n   tot+=minq\n   del z[pos]\n  else:\n   tot+=p \n print(tot)", "from numpy import array\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = array(list(map(int,input().strip().split())))\n x2 = array(list(map(int,input().strip().split())))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = x1-x2\n x.sort()\n z=array(y1+z1)\n z.sort()\n z=z.tolist()\n tot =0\n for p in x:\n  minq=1000000\n  pos = -1\n  ctrpos = 0\n  for q in z:\n   if(q>p):\n    break\n   if (p-q)<minq:\n    minq = p-q\n    pos = ctrpos\n   ctrpos+=1\n  if pos !=-1:\n   tot+=minq\n   del z[pos]\n   #z=np.delete(z,pos)\n  else:\n   tot+=p \n print(tot)\n", "from numpy import array\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = array(list(map(int,input().strip().split())))\n x2 = array(list(map(int,input().strip().split())))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = x1-x2\n x.sort()\n z=array(y1+z1)\n z.sort()\n z=z.tolist()\n tot =0\n for p in x:\n  minq=1000000\n  pos = -1\n  ctrpos = 0\n  for q in z:\n   if(q>p):\n    break\n   if (p-q)<minq:\n    minq = p-q\n    pos = ctrpos\n   ctrpos+=1\n  if pos !=-1:\n   tot+=minq\n   del z[pos]\n   #z=np.delete(z,pos)\n  else:\n   tot+=p \n print(tot)\n", "from numpy import array\nimport numpy as np\nfor _ in range(0,int(input())):\n [a,b,c]=list(map(int,input().strip().split()))\n x1 = array(list(map(int,input().strip().split())))\n x2 = array(list(map(int,input().strip().split())))\n y1 = list(map(int,input().strip().split()))\n z1 = list(map(int,input().strip().split()))\n x = x1-x2\n x.sort()\n z=array(y1+z1)\n z.sort()\n tot =0\n for p in x:\n  minq=1000000\n  pos = -1\n  ctrpos = 0\n  for q in z:\n   if(q>p):\n    break\n   if (p-q)<minq:\n    minq = p-q\n    pos = ctrpos\n   ctrpos+=1\n  if pos !=-1:\n   tot+=minq\n   z=np.delete(z,pos)\n  else:\n   tot+=p \n print(tot)", "for _ in range(eval(input())):\n n,k,m=list(map(int, input().split()))\n a=list(map(int, input().split()))\n b=list(map(int, input().split()))\n c=[(i - j) for i, j in zip(a, b)]\n d=list(map(int,input().split()))+list(map(int,input().split()))\n c.sort(reverse=True);d.sort(reverse=True)\n j=0\n for i in range(len(d)):\n  if(j>=n):\n   break\n  if(c[j]>=d[i]):\n   c[j]-=d[i]\n   j+=1\n print(sum(c))", "t = int(input())\nfor i in range(t):\n inp1 = str(input()).split()\n N = int(inp1[0])\n K = int(inp1[1])\n M = int(inp1[2])\n A = str(input()).split()\n B = str(input()).split()\n C = str(input()).split()\n D = str(input()).split()\n R = [0]*N\n arr = [0]*(K+M)\n for j in range(K):\n  arr[j] = int(C[j])\n for j in range(M):\n  arr[j+K] = int(D[j])\n arr.sort()\n arr = arr[::-1]\n for j in range(N):\n  R[j] = int(A[j]) - int(B[j])\n R.sort()\n R = R[::-1]\n ii = 0\n fl = 0\n for j in range(N):\n  while(1):\n   if ii >= K+M:\n    fl = 1\n    break\n   if arr[ii] <= R[j]:\n    break\n   else:\n    ii += 1\n  if fl == 1:\n   break\n  R[j] -= arr[ii]\n  ii += 1\n su = sum(R)\n print(su)"]