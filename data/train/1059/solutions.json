["n = int(input())\na = []\nfor i in range(n):\n a.append(int(input()))\nm1 = 0\nm2 = 0\nfor e in a:\n if (e > m1):\n  m2 = m1\n  m1 = e\n elif (e > m2 and e != m1):\n  m2 = e\nans = 0\nfor e in a:\n temp = m1%e\n if (temp>ans):\n  ans = temp\nprint(max(m2%m1,ans))", "__author__ = 'Hacktivist'\n\nfrom sys import stdin\n\nlst = list()\ntestCase = int(stdin.readline().strip())\nfor test in range(testCase):\n lst.append(int(stdin.readline().strip()))\nlst.sort()\nif len(lst) <= 5000:\n maximum = 0\n for i in range(len(lst)):\n  for j in range(len(lst)):\n   if ((lst[i] % lst[j]) > maximum):\n    maximum = (lst[i] % lst[j])\n print(maximum)\n\nelse:\n print(lst[len(lst)-2] % lst[len(lst) - 1])", "N = int(input())\nA = {}\nlargest = 0\n \nfor m in range(0, N):\n p = int(input())\n A[p] = 0\n \nfor k in A:\n for m in A:\n  if k % m > largest:\n   largest = k % m\n \nprint(largest) ", "n = int(input())\na = sorted(set([int(input()) for _ in range(n)]))\nprint(0 if len(a) < 2 else a[-2])", "# cook your code here\nN = eval(input())\nA = []\nfor _ in range(N):\n A += [eval(input())]\nB = [0]\nA.sort()\nfor i in range(N):\n for j in range(i+1,N):\n  B += [A[i]%A[j]] +[A[j]%A[i]]\nprint(max(B))", "# cook your code here\nN = eval(input())\nA = []\nfor _ in range(N):\n A += [eval(input())]\nB = []\nfor i in A:\n for j in A:\n  B += [i%j]\nprint(max(B))", "size = int(input())\narray = []\n\nfor x in range(size):\n array.append(int(input()))\n \ndiff = 0 \n\nif size < 1600 :\n for i in range(size):\n  for j in range(i + 1, size):\n   if array[i]%array[j] > diff :\n    diff = array[i]%array[j]\nelse :\n m1 = max(array)\n array.pop(array.index(m1))\n m2 = max(array)\n diff = m2%m1\n \nprint(diff)", "size = int(input())\narray = []\n\nfor x in range(size):\n array.append(int(input()))\n \ndiff = 0 \n \nfor i in range(size):\n for j in range(i + 1, size):\n  if array[i]%array[j] > diff :\n   diff = array[i]%array[j]\n   \nprint(diff)"]