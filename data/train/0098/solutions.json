["q = int(input())\nfor _ in range(q):\n\tc, m, x = list(map(int, input().split()))\n\tprint(min([c, m, (c + m + x) // 3]))", "q = int(input())\nfor i in range(q):\n    c, m, x = map(int, input().split())\n    ans = min(c, m, x)\n    c -= ans\n    m -= ans\n    x -= ans\n    ans += min(c, m, (c + m) // 3)\n    print(ans)", "for i in range(int(input())):\n    c,m,x=map(int,input().split())\n    print(min((c+m+x)//3,c,m))", "t = int(input())\nfor i in range(t):\n  c,m,x = map(int,input().split())\n  ans1 = min(c,m)\n  ans2 = (c+m+x)//3\n  print(min(ans1,ans2))", "for _ in range(int(input())):\n\tc, m, x = map(int, input().split())\n\tprint(min((c + m + x) // 3, min(c, m)))", "q = int(input())\ninfo=[[int(i) for i in input().split()] for k in range(q)]\n\nfor inf in info:\n    c,m,x = inf\n    print(min([c,m,int((c+m+x)/3)]))", "Q = int(input())\nfor q in range(Q):\n    c, m, x = tuple(map(int, input().split()))\n    ans = min(c, m)\n    #m = ans\n    c -= ans\n    m -= ans\n\n    if c + m + x >= ans:\n        print(ans)\n        continue\n\n    delta = (ans - (c + m + x)) * 2\n    ans = c + m + x\n\n    ans += min(delta // 3, delta // 2)\n    print(ans)\n", "t=int(input())\nwhile t:\n    t=t-1\n    c,m,x=[int(x) for x in input().split(\" \")]\n    y=min(c,m)\n    c=c-y\n    m=m-y\n    #print(\"y\",y)\n    if y<=c+m+x:\n        print(y)\n    else:\n        print((c+m+x+y*2)//3)", "n = int(input())\nwhile n:\n    a,b,c=map(int,input().split())\n    if a<b:\n        a,b=b,a\n    print(min(b,(a+b+c)//3))\n    n-=1", "n=int(input())\nwhile n:\n    n-=1\n    l=list(map(int,input().split()))\n    if sum(l)//3 < min(l[0],l[1]):\n        print(sum(l)//3)\n    else:\n        print(min(l[0],l[1]))", "for q in range(int(input())):\n      c,m,x=list(map(int,input().split()))\n      a=min(c,m,(c+m+x)//3)\n      print(a)\n", "Q = int(input())\n\ndef solve():\n    [c,m,x] = list(map(int,input().split()))\n\n    def canMakeK(k):\n        if c < k or m < k:\n            return False\n        return ((c-k) + (m-k) + x) >= k\n\n    ans = 0\n    jump = max(c,m,x)\n    while jump > 0:\n        while canMakeK(ans+jump):\n            ans += jump\n        jump //= 2\n\n    return ans\n\nfor _ in range(Q):\n    print(solve())\n", "from sys import stdin\nfor i in range(int(stdin.readline())):\n    c, m, x = list(map(int, stdin.readline().split()))\n    def ok(nteam):\n        return c >= nteam and m >= nteam and x + c + m >= 3 * nteam\n    l = 0\n    r = max(c, m, x) + 1\n    while r - l > 1:\n        mid = (r + l) // 2\n        if ok(mid):\n            l = mid\n        else:\n            r = mid\n    print(l)\n", "import sys\ninput = sys.stdin.readline\n\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n## -------------------------------\n\ndef addDictList(d, key, val):\n    if key not in d: d[key] = []\n    d[key].append(val)\n\ndef addDictInt(d, key, val):\n    if key not in d: d[key] = 0\n    d[key] = val\n\n\ndef addDictCount(d, key):\n    if key not in d: d[key] = 0\n    d[key] += 1\n\ndef addDictSum(d, key, val):\n    if key not in d: d[key] = 0\n    d[key] += val\n\n## -------------------------------\n\nt=getInt()\nfor _ in range(t):\n    c, m, x = getVars()\n    res = min(c, m)\n    res = min(res, (c+m+x)//3)\n    print(res)\n\n", "q = int(input())\nfor _ in range(q):\n    c, m, x = list(map(int, input().split()))\n    s = c + m + x\n    i = min(c, m)\n    if s//3 <= i:\n        print(s//3)\n    else:\n        print(min(i, s-i*2))\n", "def solve():\n    c, m, x = list(map(int, input().split()))\n    u = min(c, m)\n    y = c - u + m - u + x\n    if y >= u:\n        print(u)\n        return\n    print(y + (u - y) * 2 // 3)\n\nt = int(input())\n\nfor _ in range(t):\n    solve()\n", "for i in range(int(input())):\n    c,m,x=map(int,input().split())\n    print(min((c+m+x)//3,min(c,m)))", "for _ in range(int(input())):\n    c,m,s = [int(i) for i in input().split()]\n    a,b = min(c,m),max(c,m)\n    if(s>=a):\n        print(a)\n    else:\n        a = a-s\n        b = b-s\n        temp = (a+b)//3\n        print(s + min(temp,a))", "n = int(input())\nfor i in range(n):\n\tc, m, x = list(map(int, input().split()))\n\twynik = 0\n\twynik += min(c, m,x)\n\thuj = min(c,m,x)\n\tc -= huj\n\tm -= huj\n\tx -= huj\n\tif x > 0:\n\t\tprint(wynik)\n\telse:\n\t\tif c > m:\n\t\t\tc, m = m, c\n\t\twynik += min(m,c,(m+c)//3)\n\t\tprint(wynik)\n", "for _ in range(int(input())):\n\tc, m, a = map(int, input().split())\n\tprint(min(c, m, (c + m + a) // 3))", "from sys import stdin\nq=int(stdin.readline().strip())\nfor i in range(q):\n    c,m,x=list(map(int,stdin.readline().strip().split()))\n    n=c+m+x\n    y=min(c,m)\n    t=n//3\n    ans=min(y,t)\n    print(ans)\n", "q = int(input())\nfor i in range(q):\n\tc, m, x = map(int, input().split())\n\tprint(min(min(c, m), (c + m + x) // 3))", "q = int(input())\nfor i in range(q):\n    c, m, x = map(int, input().split())\n    if min(c, m) <= x:\n        print(min(c, m))\n    else:\n        l = -1\n        r = min(c, m) + 1\n        while l + 1 < r:\n            mid = (l + r) // 2\n            if c - mid + m - mid + x >= mid:\n                l = mid\n            else:\n                r = mid\n        if l == -1:\n            l = 0\n        print(l)", "import sys\n\ndef read():\n\treturn sys.stdin.readline()\n\ndef main():\n\tq = int(read())\n\tfor i in range(q):\n\t\tc, m, x = list(map(int, read().split()))\n\t\tif c <= m and c <= x:\n\t\t\tprint(c)\n\t\telif m <= c and m <= x:\n\t\t\tprint(m)\n\t\telse:\n\t\t\tt = x\n\t\t\tc -= x\n\t\t\tm -= x\n\t\t\tq = min(m, c, (m + c) // 3)\n\t\t\tprint(t + q)\n\t\ndef __starting_point():\n\tmain()\n\n__starting_point()", "q=int(input())\nfor _ in range(q):\n  c,m,x=map(int,input().split())\n  if c<m:\n    c,m,x=c,c,x+m-c\n  elif c>m:\n    c,m,x=m,m,x+c-m\n  ans=min(c,m,x)\n  if c>x:\n    ans+=2*(c-x)//3\n  print(ans)"]