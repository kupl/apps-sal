["# cook your dish here\nd = {'january':31,'february':29,'march':31,\n 'april':30,'may':31,'june':30,'july':31,\n 'august':31,'september':30,'october':31,\n 'november':30,'december':31}\n \n#l=[[15,'january'],[31,'august'],[10,'october']]\nl2 = list(d.keys())\nfor _ in range(int(input())):\n l=input().split()\n l[0]=int(l[0])\n a = l[1]\n ind = l2.index(a)\n b = 183 - (d[l[1]] - l[0])\n while b!=0:\n  if ind!=11:\n   ind+=1\n  else:\n   ind = 0\n  if b<=d[l2[ind]]:\n   print(b,l2[ind])\n   break\n  b-=d[l2[ind]]", "from collections import defaultdict\ndef solve(date,m):\n\n arr = [31,29,31,30,31,30,31,31,30,31,30,31]\n copied = arr.copy()\n \n d = {\n \"january\": 0,\n \"february\": 1,\n \"march\": 2,\n \"april\": 3,\n \"may\": 4,\n \"june\": 5,\n \"july\": 6,\n \"august\":7,\n \"september\": 8,\n \"october\": 9,\n \"november\":10,\n \"december\": 11\n }\n\n month = d[m]\n\n total = 366//2\n i = month\n total += date\n\n while(total > 0):\n  \n  while(arr[i]>0 ):\n   if(total<= arr[i]):\n    return give(total, i,d)\n   else:\n    total = total - arr[i]\n    i = (i+1) %12\n    break\n\n\ndef give(day, month, d):\n temp = None \n\n for x in d:\n  if(d[x] == month):\n   temp = x\n\n print(\"{} {}\".format(day,temp))\n\nt = int(input())\nfor _ in range(t):\n d,m = map(str, input().split())\n\n solve(int(d), m)", "for t in range(int(input())):\n a=input().split()\n n,month=int(a[0]),a[1]\n if month==\"january\":\n  d=n\n elif month==\"february\":\n  d=n+31\n elif month==\"march\":\n  d=n+60\n elif month==\"april\":\n  d=n+91\n elif month==\"may\":\n  d=n+121\n elif month==\"june\":\n  d=n+152\n elif month==\"july\":\n  d=n+182\n elif month==\"august\":\n  d=n+213\n elif month==\"september\":\n  d=n+244\n elif month==\"october\":\n  d=n+274\n elif month==\"november\":\n  d=n+305\n else:\n  m=12\n  d=n+335\n d=(d+183)%366\n if d==0:\n  d=366\n if d<=31:\n  print(d,\"january\")\n elif d<=60:\n  print(d-31,\"february\")\n elif d<=91:\n  print(d-60,\"march\")\n elif d<=121:\n  print(d-91,\"april\")\n elif d<=152:\n  print(d-121,\"may\")\n elif d<=182:\n  print(d-152,\"june\")\n elif d<=213:\n  print(d-182,\"july\")\n elif d<=244:\n  print(d-213,\"august\")\n elif d<=274:\n  print(d-244,\"september\")\n elif d<=305:\n  print(d-274,\"october\")\n elif d<=335:\n  print(d-305,\"november\")\n else:\n  print(d-335,\"december\")", "import datetime\n\nmonth_names = [\n \"january\",\n \"february\",\n \"march\",\n \"april\",\n \"may\",\n \"june\",\n \"july\",\n \"august\",\n \"september\",\n \"october\",\n \"november\",\n \"december\"\n]\n\ndef getHalfBirthday(date, month):\n half_year = datetime.timedelta(days=366/2)\n\n if month < 2:\n  bday = datetime.date(2004, month+1, date)\n else:\n  bday = datetime.date(2003, month+1, date)\n hbd = bday + half_year\n\n hbd = str(hbd.day) + \" \" + month_names[hbd.month-1]\n return hbd\n\ndef main():\n t = int(input())\n for _ in range(t):\n  date, month = input().split()\n  date = int(date)\n  month = month_names.index(month)\n\n  answer = getHalfBirthday(date, month)\n  print(answer)\n\nmain()\n", "dates = {\n\"january\":1,\n\"february\":2,\n\"march\":3,\n\"april\":4,\n\"may\":5,\n\"june\":6,\n\"july\":7,\n\"august\":8,\n\"september\":9,\n\"october\":10,\n\"november\":11,\n\"december\":12\n}\n\nmonths = {\n1: (\"january\",31),\n2: (\"february\",29),\n3: (\"march\",31),\n4: (\"april\",30),\n5: (\"may\",31),\n6: (\"june\",30),\n7: (\"july\",31),\n8: (\"august\",31),\n9: (\"september\",30),\n10: (\"october\",31),\n11: (\"november\",30),\n12: (\"december\",31)\n}\n\nfor _ in range(int(input())):\n D, M = [n for n in input().split()]\n D = int(D)\n M = M.lower()\n M = dates[M]\n days = 183 - (months[M][1]-D)\n M+=1\n if(M>12):\n  M-=12\n D = 0\n while(days>months[M][1]):\n  days-=months[M][1]\n  M += 1\n  if(M>12):\n   M-=12\n print(str(days) + \" \" + str(months[M][0]))\n", "from datetime import date\nfrom dateutil.relativedelta import relativedelta\ncal=[\"january\",\"february\",\"march\",\n \"april\",\n \"may\",\n \"june\",\n \"july\",\n \"august\",\n \"september\",\n \"october\",\n \"november\",\n \"december\"]\ndef fun(i):\n for j in range(12):\n  if(cal[j]==i):\n   return j+1;\ndef fun1(i):\n return cal[i-1]\nfor _ in range(int(input())):\n t,s=input().split()\n t=int(t)\n x=fun(s)\n if(x>=7):\n  s= date(2012,x,t) - relativedelta(days=+183)\n else:\n  s= date(2012,x,t) + relativedelta(days=+183)\n y=fun1(s.month)\n print(s.day,y)\n", "from datetime import date\nli = ['','january', 'february', 'march', 'april', 'may',\n 'june', 'july', 'august', 'september', 'october', 'november', 'december']\nt = int(input())\nfor j in range(t):\n a=list(input().split())\n d=int(a[0])\n m=li.index(a[1])\n if m==2 and d==29:\n  print('30 august')\n elif m<=2:\n  td = date(2020,m,d)\n  td1 = date(2021,m,d)\n  diff = (td1-td)/2\n  ans = td+diff\n  ad,am = ans.day,ans.month\n  print(ad,li[am])\n else:\n  td = date(2019,m,d)\n  td1 = date(2020,m,d)\n  diff = (td1-td)/2\n  ans = td+diff\n  ad,am = ans.day,ans.month\n  print(ad,li[am])\n"]