["from collections import Counter\nt=int(input())\nfor i in range(t):\n k=int(input())\n l=list(map(int,input().split()))\n a=Counter(l)\n b=list(a.keys())\n b.sort()\n for x in b:\n  s=str(x)+': '+str(a[x])\n  print(s)", "n = int(input())\nfrom collections import Counter\nfor c in range(n):\n t = int(input())\n s = list(map(int, input().strip().split()))\n count = dict(Counter(s))\n for k in sorted(count.keys()):\n  answer = str(k) + ': ' + str(count[k])\n  print(answer)", "for j in range(int(input())):\n n=int(input())\n l=list(map(int, input().split()))\n for k in range(min(l), max(l)+1):\n  tmp = l.count(k)\n  if tmp>0:\n   print(\"%d: %d\" % (k,tmp))", "take=lambda : input().strip()\ncal=lambda : list(map(int,take().split()))\nfrom math import sqrt\nT=int(take())\nfor _ in range(T):\n N=take()\n alpha={}\n s=list(cal())\n for i in s:\n  if i in alpha:\n   alpha[i]+=1\n  else:\n   alpha[i]=1\n for e in sorted(alpha.keys()):\n  print(str(e)+': '+str(alpha[e]))", "t=int(input().strip())\nfor test in range(t):\n n=int(input().strip())\n word=list(map(int,input().strip().split(\" \")))\n word=sorted(word)\n i=0\n ab=[]\n while(i<len(word)):\n  if word[i] not in ab:\n   ab.append(word[i])\n   print(str(word[i])+\": \"+str(word.count(word[i])))\n  i=i+1\n \n", "t = int(input())\nr=0\nwhile t:\n t-=1\n n = int(input())\n a = input().split()\n a = [int(i) for i in a]\n x=max(a)\n for i in range(x+1):\n  cnt = a.count(i)\n  if cnt:\n   print(str(i)+\":\",cnt)\n   \n \n", "from collections import *\nfor t in range(int(input())):\n n = int(input())\n a = list(map(int, input().split()))\n c = Counter()\n for e in a:\n  c[e] += 1\n for k,v in sorted(c.items()):\n  print(str(k)+':', v)\n", "# your code goes here\nt=int(input().strip())\nwhile t:\n n=int(input().strip())\n li=list(map(int,input().strip().split()))\n di={}\n for i in li:\n  if i in di:\n   di[i]+=1\n  else:\n   di[i]=1\n for key in sorted(di):\n  print(\"%s: %s\" % (key, di[key]))\n t-=1"]