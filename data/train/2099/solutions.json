["3\n\nimport sys\n\ndef __starting_point():\n    \n    n, k = list(map(int, sys.stdin.readline().split()))\n    l = []\n    i = 1\n    j = k + 1\n    while i <= j:\n        l.append(str(i))\n        i += 1\n        if j > i:\n            l.append(str(j))\n            j -= 1\n    for i in range(k+2, n+1):\n        l.append(str(i))\n    \n    print(' '.join(l))\n\n\n__starting_point()", "import itertools\nimport math\n\ndef main():\n\tn, k = list(map(int, input().split()))\n\ta = 1\n\tb = n\n\tres = []\n\tfor i in range(k - 1):\n\t\tif i % 2:\n\t\t\tres.append(a)\n\t\t\ta += 1\n\t\telse:\n\t\t\tres.append(b)\n\t\t\tb -= 1\n\tif k % 2:\n\t\tres += list(range(b, a - 1, -1))\n\telse:\n\t\tres += list(range(a, b + 1))\n\t\t\t\n\tprint(\" \".join(map(str, res)))\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "def printList(a):\n    print(\" \".join(map(str, a)))\n\ndef solve():\n    n, k = list(map(int, input().split()))\n    if k == 1:\n        printList(list(range(1, n + 1)))\n        return\n\n    cur = k + 1\n    sh = k\n    sg = -1\n    ans = []\n    while True:\n        ans.append(cur)\n        cur += sh * sg\n        if not sh:\n            break\n        sh -= 1\n        sg *= -1\n\n    ans += list(range(k + 2, n + 1))\n    printList(ans)\n\nsolve()\n", "n, k = list(map(int, input().split()))\n\na = []\nfor i in range(1, n - k + 1):\n    a.append(i)\n\ni, j = n, n - k + 1\nfor t in range(n - len(a)):\n    if t % 2 == 0:\n        a.append(i)\n        i -= 1\n    else:\n        a.append(j)\n        j += 1\nprint(' '.join(map(str, a)))\n", "s = input().split()\nn = int(s[0])  # \ufffd\ufffd\ufffd-\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nk = int(s[1])  # \ufffd\ufffd\ufffd-\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\nmax = k+1\nl = 1\nprint(l, end = ' ')\n\nfor i in range(k):  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    if i % 2 == 0:\n        l += k\n    else:\n        l -= k\n    k -= 1\n    print(l, end = ' ')\n    \nif max < n:  # \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n    for i in range(max+1, n+1):\n        print(i, end = ' ')", "s = input()\narr = s.split()\nn = int(arr[0])\nk = int(arr[1])\n\nprint(1,end='')\ni = 2\nwhile i in range(2,k+1):\n\tif i % 2 == 0:\n\t\tprint('',n - i//2 + 1,end='')\n\telse:\n\t\tprint('',(i+1)//2,end='')\n\ti = i + 1\n\nif k % 2 == 0:\n\tx = n - k//2\n\ti = k\n\twhile i in range(k,n):\n\t\tprint('',x,end='')\n\t\tx = x - 1\n\t\ti = i + 1\nelse:\n\tx = (k + 1)//2 + 1\n\ti = k\n\twhile i in range(k,n):\n\t\tprint('',x,end='')\n\t\tx = x + 1\n\t\ti = i + 1\nprint()\n", "\n\n\nr = list(map(int, input().split()))\nn = r[0]\nk = r[1]\nl = list()\nl.append(1)\nc = k\njustI = 0\nmaxl = 0\nprevious = 1\nprint(1, end=' ')\nfor i in range(1,n):\n    if justI == 1:\n        #l.append(max(l)+1)\n        print(maxl+1, end=' ')\n        maxl += 1\n    else:\n        # l.append(l[i-1]+c)\n        print(previous+c, end=' ')\n        previous = previous+c\n        if previous>maxl: maxl = previous\n        if c>1:\n            c-=1\n            c*=-1\n        elif c<-1:\n            c+=1\n            c*=-1\n        else:\n            justI = 1\n# for i in l:\n#     print(i, end=\" \")\n\n\n\n\n#10 4\n#1 5 2 4 3 6 7 8 9 10", "maxn = 100000+10\nans = [0 for i in range(maxn)]\nvis = [0 for i in range(maxn)]\n\ns = input()\narr = s.split()\nn = int(arr[0])\nk = int(arr[1])\n\nans[0] = 1\ncnt = k\nfor i in range(1, k+1):\n    tmp = ans[i-1] + cnt\n    if tmp > k+1 or vis[tmp]==1:\n        tmp = ans[i-1]-cnt\n    vis[tmp] = 1\n    ans[i] = tmp\n    cnt -= 1\nprint(1, end='')\nfor i in range(1,k+1):\n    print('', ans[i], end='')\nfor i in range(k+1, n):\n    print('', i+1, end='')\nprint()\n\n \t    \t\t \t  \t\t\t\t  \t\t  \t\t   \t \t", "n, k = [int(x) for x in input().split()]\nans = []\nfor i in range(k):\n\tif i % 2:\n\t\tans.append(str(n - i // 2))\n\telse:\n\t\tans.append(str(i // 2 + 1))\nfor i in range(n - k):\n\tif k % 2:\n\t\tans.append(str(k // 2 + 2 + i))\n\telse:\n\t\tans.append(str(n - k // 2 - i))\nprint(' '.join(ans))\n", "import sys\nimport math\n  \nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nres = []\n\nif(k == 1):\n    for i in range(1, n + 1):\n        res.append(str(i))\n    print(\" \".join(res))\n    return\n\nz = n\nfor i in range(n, 1, -1):\n    if(i > k):\n        res.append(str(i))\n    else:\n        z = i\n        break\nl = z \nj = 1   \nfor i in range(1, z + 1):\n    if(i % 2 != 0):\n        res.append(str(j))\n        j += 1\n    else:\n        res.append(str(z))\n        z -= 1\n    \nprint(\" \".join(res[::-1]))", "import sys\nimport math\n  \nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nres = []\n\nz = 1\nfor i in range(n, 1, -1):\n    if(i > k):\n        res.append(str(i))\n    else:\n        z = i\n        break\nl = z \nj = 1   \nfor i in range(1, z + 1):\n    if(i % 2 != 0):\n        res.append(str(j))\n        j += 1\n    else:\n        res.append(str(z))\n        z -= 1\n    \nprint(\" \".join(res[::-1]))", "from itertools import permutations\n\n\ndef main():\n    n, k = map(int, input().strip().split())\n    a = b = k // 2 + 1\n    delta = (k & 1) * 2 - 1\n    res = []\n    for _ in range(k // 2):\n        res.append(a)\n        a -= delta\n        b += delta\n        res.append(b)\n    if k & 1:\n        res.append(a)\n    for a in range(k + 1, n + 1):\n        res.append(a)\n    print(*res)\n\n\nmain()", "def main():\n    n, k = list(map(int, input().strip().split()))\n    a = b = k // 2 + 1\n    delta = (k & 1) * 2 - 1\n    res = []\n    for _ in range(k // 2):\n        res.append(a)\n        a -= delta\n        b += delta\n        res.append(b)\n    if k & 1:\n        res.append(a)\n    for a in range(k + 1, n + 1):\n        res.append(a)\n    print(*res)\n\n\nmain()\n", "n, k = map(int, input().split())\nt = list(range(1, n + 1))\nif k > 1:\n    j = 0\n    for i in range((k + 1) // 2):\n        t[j] = k - i + 1\n        t[j + 1] = i + 1\n        j += 2\n    if not k & 1: t[j] = k // 2 + 1\nprint(' '.join(map(str, t)))", "r = list(map(int, input().split()))\nn = r[0]\nk = r[1]\nl = list()\nl.append(1)\nc = k\njustI = 0\nmaxl = 0\nprevious = 1\nprint(1, end=' ')\nfor i in range(1,n):\n    if justI == 1:\n        #l.append(max(l)+1)\n        print(maxl+1, end=' ')\n        maxl += 1\n    else:\n        # l.append(l[i-1]+c)\n        print(previous+c, end=' ')\n        previous = previous+c\n        if previous>maxl: maxl = previous\n        if c>1:\n            c-=1\n            c*=-1\n        elif c<-1:\n            c+=1\n            c*=-1\n        else:\n            justI = 1", "import sys\n\ndef solve():\n    r = list(map(int, input().split()))\n    n = r[0]\n    k = r[1]\n    l = list()\n    l.append(1)\n    c = k\n    justI = 0\n    maxsofar = 1\n    for i in range(1,n):\n        if justI == 1:\n            l.append(maxsofar+1)\n            maxsofar+=1\n        else:\n            l.append(l[i-1]+c)\n            maxsofar = max(maxsofar, l[i-1]+c)\n            if c>1:\n                c-=1\n                c*=-1\n            elif c<-1:\n                c+=1\n                c*=-1\n            else:\n                justI = 1\n    return l\n    \ndef read(mode=2):\n    inputs = input().strip()\n    if mode == 0: return inputs  # String\n    if mode == 1: return inputs.split()  # List of strings\n    if mode == 2: return list(map(int, inputs.split()))  # List of integers\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    if isinstance(s, tuple): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\ndef run():\n    if sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\n    res = solve()\n    write(res)\nrun()", "import sys\n\ndef solve():\n    r = list(map(int, input().split()))\n    n = r[0]\n    k = r[1]\n    l = list()\n    l.append(1)\n    c = k\n    justI = 0\n    maxsofar = 1\n    for i in range(1,n):\n        if justI == 1:\n            l.append(maxsofar+1)\n            maxsofar+=1\n        else:\n            l.append(l[i-1]+c)\n            maxsofar = max(maxsofar, l[i-1]+c)\n            if c>1:\n                c-=1\n                c*=-1\n            elif c<-1:\n                c+=1\n                c*=-1\n            else:\n                justI = 1\n    return l\n    \ndef read(mode=2):\n    inputs = input().strip()\n    if mode == 0: return inputs  # String\n    if mode == 1: return inputs.split()  # List of strings\n    if mode == 2: return list(map(int, inputs.split()))  # List of integers\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    if isinstance(s, tuple): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\ndef run():\n    if sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\n    res = solve()\n    write(res)\nrun()", "# coding: utf-8\nn, k = [int(i) for i in input().split()]\nans = ['1']\nfor i in range(k):\n    if i%2==0:\n        ans.append(str(int(ans[-1])+(k-i)))\n    else:\n        ans.append(str(int(ans[-1])-(k-i)))\nans += [str(i) for i in range(k+2,n+1)]\nprint(' '.join(ans))\n", "# python3\nn, k = [int(x) for x in input().split()]\n\nbegin = 1\nif k == 1:\n\tfor x in range(1, n+1):\n\t\tprint(x, end=\" \")\nelse:\n\t# k = 2, +2 -1: 1 3 2\n\t# k = 3, +3 -2 + 1: 1 4 2 3 \n\t# k = 4, +4 -3 + 2 -1: 1 5 2 4 3 \n\tfor y in range(n-k-1):\n\t\tprint(begin+y, end=\" \")\n\tdiff = n-k\n\thigh = n\n\twhile high >= diff + 1:\n\t\tprint(diff, end=\" \")\n\t\tprint(high, end=\" \")\n\t\tdiff += 1\n\t\tif diff == high:\n\t\t\tbreak\n\t\thigh -= 1\n\tif diff == high and k % 2 != 1:\n\t\tprint(high)\n\n\n\t# for z in range((k+1)/2):\n\t# \t# Difference continues to decrease by 1\n\t# \tprint(diff + z, end=\" \") \n\t# \tprint(n - z, end=\" \")\n\t# if k % 2 == 0:\n\t# \tprint((diff+n)//2)", "a,b=list(map(int,input().split()))\nc=[]\nd,e=1,b+1\nwhile e>=d:\n    c+=[d]+([e]if d!=e else[])\n    d+=1\n    e-=1\nprint(' '.join(map(str,c+list(range(b+2,a+1)))))\n", "import sys\nn, k = map(int, input().split())\nif k == 1:\n    for i in range(1, n+1):\n        print(i, end=' ')\n    return;\nfor i in range(0, k//2):\n    print(i+1, n-i, end=' ')\nif k%2:\n    z = k//2+3\n    for i in range(n-k//2, k//2+2, -1):\n        z = i\n        print(i, end=' ')\n    print(z-2, z-1)\nelse:\n    for i in range(n-k//2, k//2, -1):\n        print(i, end=' ')\n\n", "a, b = list(map(int, input().split()))\nc = []\nd, e = 1, b + 1\n\nwhile e > d:\n\tc += [d, e]\n\te -= 1\n\td += 1\nif e == d:\n\tc.append(e)\nprint(' '.join(map(str, c + list(range(b + 2, a + 1)))))\n", "from fileinput import *\n\nfor line in input():\n    if lineno() == 1:\n        [n, k] = list(map(int, line.split()))\n\n\na = [i+1 for i in range(n)]\n\nb = a[:k+1]\nbend = a[k+1:]\nlb = len(b)\n\nif lb % 2 == 1:\n    middle = lb // 2 + 1\nelse:\n    middle = lb // 2\n\nb[::2], b[1::2] = b[:middle], b[:middle-1:-1]\n\nanswer = b + bend\n\ns = ''.join([str(x) + ' ' for x in answer])\nprint(s.strip())\n", "n, k = map(int, input().split(' '))\no = n - k\nprint(1, end = ' ')\nfor i in range(2, o + 1):\n    print(i, end = ' ')\nmb = n\nmm = o + 1\nwhile mb >= mm:\n    print(mb, end = ' ')\n    mb -= 1\n    if mb >= mm:\n        print(mm, end = ' ')\n        mm += 1"]