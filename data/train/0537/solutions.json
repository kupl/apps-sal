["n,k=[int(x) for x in input().split()]\r\na=[int(x) for x in input().split()]\r\nans=0\r\nfor i in range(n-1):\r\n    for j in range(i+1,n):\r\n        if(abs(a[i]-a[j])>=k):\r\n            ans+=1\r\nprint(ans)\r\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ni=0\ns=0\nfor j in range(0,n):\n    while(i<n):\n        if(a[i]-a[j]>=k):\n            s=s+(n-i)\n            break\n        i=i+1\nprint(s)", "import sys\r\nn,k=list(map(int,input().strip().split()))\r\na=list(map(int,sys.stdin.readline().strip().split()))\r\ns=0\r\nfor i in range(len(a)):\r\n    for j in range(i+1,len(a)):\r\n        if abs(a[i]-a[j])>=k:\r\n            s+=1\r\n    \r\nprint(s)\r\n", "n,k=list(map(int,input().strip().split()))\r\na=list(map(int,input().strip().split()))\r\ns=0\r\nfor i in range(len(a)):\r\n    for j in range(i+1,len(a)):\r\n        if abs(a[i]-a[j])>=k:\r\n            s+=1\r\n    \r\nprint(s)\r\n", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\ni=0\nfin=0\nfor j in range(0,n):\n    while(i<n):\n        if(l[i]-l[j]>=k):\n            fin=fin+(n-i)\n            break\n        i=i+1\nprint(fin)", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\ni=0\nfin=0\nfor j in range(n):\n    while(i<n):\n        if(l[i]-l[j]>=k):\n            fin=fin+(n-i)\n            break\n        i=i+1\nprint(fin)", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\ncount=0\nfor i in range(0,n-1):\n    for j in range(i+1,n):\n        if(abs(l[i]-l[j])>=k):\n            count=count+1\nprint(count)\n        \n", "# cook your dish here\nN, K = map(int, input().split(\" \"))\ninputs = list(map(int, input().split(\" \")))\ninputs.sort()\ndata = [[inputs[0], 1]]\ntotal = 0\nprevious = [inputs[0], 0]\nfor n in range(1,N): \n    if inputs[n] == previous[0]: \n        total+=previous[1]\n        data[0][1] += 1\n    else: \n        flag = True\n        for point in data:\n            if inputs[n] - point[0] >= K: \n                total += point[1]\n                previous = [inputs[n], point[1]]\n                flag = False\n                break\n        data = [[inputs[n], data[0][1] + 1]] + data\n        if flag:\n            previous = [inputs[n], 0]\nprint(total)", "# cook your dish here\nN, K = map(int, input().split(\" \"))\ninputs = list(map(int, input().split(\" \")))\ninputs.sort()\ndata = [[None, 0]]\ntotal = 0\nprevious = [None, None]\nfor n in range(N): \n    if inputs[n] == previous[0]: \n        total+=previous[1]\n        data[0][1] += 1\n    else: \n        previous = [None, None]\n        data = [[inputs[n], data[0][1] + 1]] + data\n        for point in data[1:-1]:\n            if inputs[n] - point[0] >= K: \n                total += point[1]\n                previous = [inputs[n], point[1]]\n                break\n        if previous == [None, None]:\n            previous = [inputs[n], 0]\nprint(total)", "# cook your dish here\nN, K = map(int, input().split(\" \"))\ninputs = list(map(int, input().split(\" \")))\ninputs.sort()\ntotal = 0\nprevious = [None, None]\nfor n in range(1, N): \n    if inputs[n] == previous[0]: \n        total+=previous[1]\n        continue\n    previous = [None, None]\n    for i in range(n-1, -1, -1):\n        tmp = inputs[n] - inputs[i]\n        if tmp < 0: \n            tmp = -tmp\n        if tmp >= K: \n            total += i+1 \n            previous[1] = i+1\n            previous[0] = inputs[n]\n            break\n    if previous[0] is None: \n        previous[0] = inputs[n]\n        previous[1] = 0\nprint(total)", "# cook your dish here\nN, K = map(int, input().split(\" \"))\ninputs = list(map(int, input().split(\" \")))\ninputs.sort()\ntotal = 0\nfor n in range(N): \n    for i in range(n-1, -1, -1):\n        tmp = inputs[n] - inputs[i]\n        if tmp < 0: \n            tmp = -tmp\n        if tmp >= K: \n            total += i+1 \n            break\nprint(total)", "# cook your dish here\nN,K=map(int,input().split())\nx=list(map(int,input().split()))[:N]\ncount=[]\nfor i in range(len(x)):\n    for j in range(i,len(x)):\n        if abs(x[i]-x[j])>=K:\n            count.append(1)\nprint(len(count))", "# cook your dish here\nN,K=map(int,input().split())\nx=list(map(int,input().split()))[:N]\ncount=[]\nfor i in range(len(x)):\n    for j in range(i,len(x)):\n        if abs(x[i]-x[j])>=K:\n            count.append(1)\nprint(len(count))", "n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\narr.sort()\ni=0\nres=0\nfor j in range(n):\n    while(i<n):\n        if(arr[i]-arr[j]>=k):\n            res=res+(n-i)\n            break\n        i+=1\nprint(res)        \n        \n", "n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\narr.sort()\ni=0\nres=0\nwhile(i<len(arr)):\n    j=i+1\n    while(j<len(arr)):\n        if(arr[j]-arr[i]>=k):\n            res=res+len(arr)-j\n            break\n        j+=1\n    i+=1\nprint(res)        \n        \n", "n,k=list(map(int,input().split()))\narr=list(map(int,input().split()))\narr.sort()\ni=0\nres=0\nwhile(i<len(arr)):\n    j=i+1\n    while(j<len(arr)):\n        if(arr[j]-arr[i]>=k):\n            res=res+1\n        j+=1\n    i+=1\nprint(res)        \n        \n", "n, k = list(map(int, input().split()))\narr = list(map(int, input().split()))\narr.sort()\ncount = 0\n\nj = 0\nfor i in range(n) :\n    while(j < n) :\n        if arr[j] - arr[i] >= k :\n            count += n-j\n            break\n        j += 1\n            \nprint(count)# cook your dish here\n", "nk=list(map(int,input().split()))\r\narr=list(map(int,input().split()))\r\narr.sort()\r\ncount=0\r\nfor i in range(0,len(arr)):\r\n    for j in range (i+1,len(arr)):\r\n        x=arr[j]-arr[i]\r\n        if x>=nk[1]:\r\n            count=count+1\r\nprint(count)\r\n3", "nk=list(map(int,input().split()))\r\narr=list(map(int,input().split()))\r\narr.sort()\r\ncount=0\r\nfor i in range(0,len(arr)):\r\n    for j in range (i+1,len(arr)):\r\n        x=arr[i]-arr[j]\r\n        if x<0:\r\n            x=x*(-1)\r\n        if x>=nk[1]:\r\n            count=count+1\r\nprint(count)\r\n3", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\ncount = 0\n\nj = 0\nfor i in range(n) :\n    while(j < n) :\n        if arr[j] - arr[i] >= k :\n            count += n-j\n            break\n        j += 1\n            \nprint(count)", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\ncount = n*(n-1)//2\n\nfor i in range(n-1, -1, -1) :\n    for j in range(i-1, -1, -1) :\n        if arr[i] - arr[j] >= k :\n            break\n        else :\n            count -= 1\n            \nprint(count)", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\narr.reverse()\ncount = n*(n-1)//2\n\nfor i in range(n) :\n    for j in range(i+1, n) :\n        if arr[i] - arr[j] >= k :\n            break\n        else :\n            count -= 1\n            \nprint(count)", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\narr.sort()\ncount = 0\n\nfor i in range(n) :\n    for j in range(i+1, n) :\n        if arr[i] - arr[j] <= -1*k :\n            count += 1\n            \nprint(count)", "n, k = map(int, input().split())\narr = []\n\narr = list(map(int, input().split()))\ncount = 0\n\nfor i in arr :\n    for j in arr :\n        if i - j >= k :\n            count += 1\n            \nprint(count)", "n, k = map(int, input().split())\narr = list(map(int, input().split()))\ncount = 0\n\nfor i in arr :\n    for j in arr :\n        if i - j >= k :\n            count += 1\n            \nprint(count)"]