["#dt = {} for i in x: dt[i] = dt.get(i,0)+1\r\nimport sys;input = sys.stdin.readline\r\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\r\n\r\nN = 100001\r\np = 998244353\r\nfactorialNumInverse = [0]*(N+1) \r\nnaturalNumInverse = [0]*(N+1)\r\nfact = [0]*(N+1)\r\n  \r\ndef InverseofNumber(p): \r\n    naturalNumInverse[0] = naturalNumInverse[1] = 1\r\n    for i in range(2,N+1): \r\n        naturalNumInverse[i] = (naturalNumInverse[p % i] * (p - (p // i)) % p)\r\n  \r\ndef InverseofFactorial(p): \r\n    factorialNumInverse[0] = factorialNumInverse[1] = 1\r\n    for i in range(2,N+1): \r\n        factorialNumInverse[i] = (naturalNumInverse[i] * factorialNumInverse[i - 1]) % p \r\n  \r\ndef factorial(p): \r\n    fact[0] = 1\r\n    for i in range(1, N + 1): \r\n        fact[i] = (fact[i - 1] * i) % p\r\n\r\ndef f(num,den1,den2):\r\n    # n C r = n!*inverse(r!)*inverse((n-r)!) \r\n    #ans = ((fact[N] * factorialNumInverse[R])% p * factorialNumInverse[N-R])% p\r\n    ans = ((fact[num]*factorialNumInverse[den1])%p*factorialNumInverse[den2])%p\r\n    return ans \r\n\r\nInverseofNumber(p) \r\nInverseofFactorial(p) \r\nfactorial(p)\r\n\r\nfor _ in range(inp()):\r\n    n,m,x1,y1,x2,y2 = ip()\r\n    tot = f(m+n,m,n)\r\n    a = f(m-y1+n-x1,m-y1,n-x1)\r\n    aa = f(x1+y1,x1,y1)\r\n    b = f(m-y2+n-x2,m-y2,n-x2)\r\n    bb = f(x2+y2,x2,y2)\r\n    c = f(y2-y1+x2-x1,y2-y1,x2-x1)\r\n    ans = (tot - a*aa - b*bb + c*aa*b)%p\r\n    print(ans)"]