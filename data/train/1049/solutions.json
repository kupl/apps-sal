["#\n\nfor _ in range(int(input())):\n n,k = list(map(int,input().split()))\n arr = list(map(int,input().split()))\n s=set(arr)\n t1=len(s)\n max=-1\n for i in range(n-k+1):\n  temp=set(arr[i:i+k])\n  #print(temp,i,k+i+1)\n  t=len(temp)\n  if t1 == t:\n   if max<sum(arr[i:k+i]):\n    max=sum(arr[i:k+i])\n print(max)\n", "t=int(input())\nfor _ in range(t):\n n=list(map(int,input().split()))\n k=n[1]\n n=n[0]\n a=list(map(int,input().split()))\n m=-999999999999\n s1=set(a)\n for i in range(0,n-k+1):\n  s=sum(a[i:i+k])\n  if s>m and set(a[i:i+k])==s1:\n   m=s\n print(m)\n", "for _ in range(int(input())):\n n,k=[int(x) for x in input().split()]\n a=list(map(int,input().split()))\n s=set(a)\n s=list(s)\n aa=[]\n f=0\n for i in range(n-k+1):\n  f=0\n  ss=a[i:i+k]\n  for j in range(len(s)):\n   if s[j] not in ss:\n    f=1\n    break\n  if f==0:\n   aa.append(sum(ss))\n print(max (aa)) \n", "# cook your dish here\ntry:\n tc = int(input())\n for i in range(tc):\n  n,k = list(map(int,input().split(\" \")))\n  arr = list(map(int,input().split()))\n  set_arr = set(arr)\n  max_sum = 0\n  for i in range(n):\n   if set(arr[i:i+k]) == set_arr:\n    max_sum = max(max_sum, sum(arr[i:i+k]))\n  print(max_sum)\nexcept:\n pass\n  \n", "# cook your dish here\nfor _ in range(int(input())):\n n,k=map(int,input().split())\n lst=list(map(int,input().split()))\n p=0\n ele=0\n for i in range(n-k+1):\n  x=lst[i:i+k]\n  d=sum(x)\n  dic={j for j in set(x)}\n  elm=len(dic)\n  #print(x)\n  #print(p,ele,d,elm)\n  if elm>=ele:\n   if ele>ele:\n    p=d\n   else:\n    if d>p:\n     p=d\n   ele=elm\n print(p)", "# cook your dish here\nimport sys\nt=int(input().strip())\nfor _ in range(t):\n n, k = map(int, input().strip().split())\n array=list(map(int, input().strip().split()))\n cifre={}\n for el in array:\n  cifre[el]=0\n for i in range(k):\n  cifre[array[i]]+=1 \n flag=0\n for key in cifre:\n  if cifre[key]==0:\n   flag=1 \n   break\n appo=sum(array[:k])\n somma= appo if flag==0 else 0\n for i in range(0,n-k):\n  appo+=array[k+i]-array[i]\n  cifre[array[i]]-=1 \n  cifre[array[k+i]]+=1 \n  flag=0\n  for key in cifre:\n   if cifre[key]==0:\n    flag=1 \n    break\n  if flag==0:\n   somma=max(somma,appo)\n print(somma)", "t=int(input())\nfor i in range(t):\n n,k=list(map(int,input().split()))\n arr=list(map(int,input().split()))\n arr1=list(set(arr))\n\n l=[]\n res=0\n sums=0\n for i in range(k):\n  l.append(arr[i])\n  sums+= arr[i]\n \n \n if(len(list(set(l)))==len(arr1)):\n  res=max(res,sums)\n \n \n for i in range(k,n):\n  sums+= (arr[i]-arr[i-k])\n  l.remove(arr[i-k])\n  l.append(arr[i])\n  if(len(list(set(l)))==len(arr1)):\n   res=max(res,sums)\n print(res)\n", "from sys import stdin, stdout\ninput = stdin.readline\nfrom collections import defaultdict as dd\nimport math\ndef geti(): return list(map(int, input().strip().split()))\ndef getl(): return list(map(int, input().strip().split()))\ndef gets(): return input()\ndef geta(): return int(input())\ndef print_s(s): stdout.write(s+'\\n')\n\ndef solve():\n for _ in range(geta()):\n  n,k=geti()\n  a=getl()\n  occur=dd(int)\n  ans=0\n  temp=0\n  temp_dict=dd(int)\n  for i in a:\n   occur[i]+=1\n  for i in range(k):\n   temp+=a[i]\n   temp_dict[a[i]]+=1\n  if (list(temp_dict.keys()))==(list(occur.keys())):\n   ans=max(ans,temp)\n  for i in range(k,n):\n   temp-=a[i-k]\n   temp_dict[a[i-k]]-=1\n   if temp_dict[a[i-k]]==0:\n    del temp_dict[a[i-k]]\n   temp+=a[i]\n   temp_dict[a[i]]+=1\n   if (list(temp_dict.keys()))==(list(occur.keys())):\n    ans=max(ans,temp)\n  print(ans)\n\n\ndef __starting_point():\n solve()\n\n__starting_point()", "for _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n b=len(set(a))\n m=[]\n for i in range(n-k+2):\n  if b == len(set(a[i:i+k])):\n   m.append(sum(a[i:i+k]))\n print(max(m))", "for ts in range(int(input())):\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n c=len(set(l))\n su=[]\n for i in range(n-k+2):\n  if len(set(l[i:i+k]))==c:\n   su.append(sum(l[i:i+k]))\n  else:\n   pass\n print(max(su))", "# cook your dish here\nfor u in range(int(input())):\n n,k=list(map(int,input().split()))\n l=list(map(int,input().split()))\n m=0\n s=set(l)\n r=len(s)\n for i in range(n-k+1):\n  c=0\n  d=set()\n  for j in range(i,i+k):\n   c+=l[j]\n   d.add(l[j])\n  if(len(d)==r):\n   m=max(m,c)\n print(m)\n", "# cook your dish here\ntest=int(input())\nfor p in range(test):\n l=list(map(int,input().split()))\n n=l[0]\n k=l[1]\n l=[]\n a=[]\n maxim=0\n l=list(map(int,input().split()))\n d=[]\n for i in l:\n  if i not in d:\n   d.append(i)\n for i in range(0,len(l)-k+1):\n  x=l[i:i+k]\n  #print(x)\n  flag=0\n  for j in d:\n   if j not in x:\n    flag=1\n    break\n  if sum(x)>maxim and flag==0:\n   maxim=sum(x)\n   a=x[:]\n #print(a)\n print(maxim)", "# cook your dish here\nn = int(input())\nwhile n > 0:\n line1 = [int(x) for x in input().split()]\n arr = [int(x) for x in input().split()]\n ac = len(set(arr))\n ln = line1[0]\n k = line1[1]\n i = 0\n j = k-1\n maxi = -1\n while(j < ln):\n  if len(set(arr[i:j+1])) == ac:\n   maxi = max(maxi,sum(arr[i:j+1]))\n  i += 1\n  j += 1\n print(maxi)\n n -= 1", "x=int(input())\nfor i in range(x):\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n j=0\n m=0\n while j+k<=n:\n  #print(set(l[j:j+k]),set(l))\n  if m<sum(l[j:j+k]) and set(l[j:j+k])==set(l):\n   m=sum(l[j:j+k])\n  j+=1\n print(m)", "def f():\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n distinctitem=len(set(a))\n count=[0]*1000000\n temp=[]\n maxi=0\n s=0\n c=0\n for i in range(0,len(a)):\n  if len(temp)<k:\n   temp.append(a[i])\n   if count[a[i]]==0:\n    count[a[i]]+=1\n    c+=1\n    s+=a[i]\n   else:\n    count[a[i]]+=1\n    s+=a[i]\n  #print(temp,s)\n  if len(temp)==k:\n   if c==distinctitem:\n    maxi=max(maxi,s)\n   s-=temp[0]\n   count[temp[0]]-=1\n   if count[temp[0]]==0:\n    c-=1\n   temp.pop(0)\n  \n print(maxi)\nfor i in range(int(input())):\n f()\n    \n  \n", "# cook your dish here\nt=int(input())\nwhile t>0 :\n n,k=map(int,input().split())\n l=list(map(int,input().split()))\n dis=len(set(l))\n a=0\n for i in range(n-k+1) :\n  ls=[]\n  s=0\n  for j in range(k) :\n   s+=l[i+j]\n   if l[i+j] in ls :\n    pass\n   else :\n    ls.append(l[i+j])\n  if len(ls)==dis :\n   a=max(a,s)\n print(a)\n t-=1", "# cook your dish here\nfor _ in range(int(input())):\n n, k = input().split()\n n,k = int(n), int(k)\n nums = list(map(int, input().split()))\n\n length1 = len(set(nums))\n i=0\n j=k-1\n initial = sum(nums[i:j+1])\n if len(set(nums)) == length1:\n  m = initial\n else:\n  m = 0\n while j<len(nums):\n  # print(i,j,initial)\n  j+=1\n  if j==len(nums):\n   break\n  initial-=nums[i]\n  i+=1\n  initial+=nums[j]\n  if len(set(nums[i:j+1]))==length1:\n   m = max(m, initial)\n\n print(m)", "t = int(input())\nfor z in range(t):\n first = list(map(int,input().split()))\n second = list(map(int,input().split()))\n length = len(set(second))\n req = 0\n sumi = 0\n for i in range(first[1]):\n  req = req+second[i]\n if(length==len(set(second[0:first[1]]))):\n  sumi = req\n cp = 0\n for i in range(first[1]+1, first[0]+1):\n  req = req - second[cp]+second[i-1]\n  if(length == len(set(second[cp+1:i]))):\n   if(sumi<req):\n    sumi=req\n  cp = cp+1\n print(sumi)\n", "# cook your dish here\nwhile True:\n try:\n  \n  t=int(input())\n  h=1 \n  while(h<=t):\n   n,k=list(map(int,input().split()))\n   lis=list(map(int,input().split()))\n \n   unique_data=[]\n   for i in lis:\n    if i not in unique_data:\n     unique_data.append(i)\n   #print(unique_data)\n \n   maxi=0\n   lis2=[]\n   for i in range(0,n-k+1):\n    lis2=lis[i:i+k]\n    #print(lis2)\n    t=0\n    for i in set(lis2):\n     if i in unique_data:\n      t+=1\n   #print(t)\n    if(t==len(unique_data)):\n     if(sum(lis2)>maxi):\n      maxi=sum(lis2)\n\n   print(maxi)\n   h+=1\n except:\n  break\n    \n  \n  \n", "# cook your dish here\nfor _ in range(int(input())):\n n,k=list(map(int,input().split()))\n a=list(map(int,input().split()))\n slen=len(set(a))\n lmax=-9\n for i in range(n-k+1):\n  x=set(a[i:i+k])\n  if len(x)==slen:\n   add=sum(a[i:i+k])\n   if add>lmax:\n    lmax=add\n print(lmax)\n", "T = int(input())\n\nfor t in range(T):\n \n n, k = map(int, input().split())\n \n arr = list(map(int, input().split()))\n  \n out1 = set(arr)\n \n minSum = sum(arr[0:k])\n \n for i in range(1, n-k+1):\n  \n  temp = arr[i:i+k]\n  \n  out = set(temp)\n  \n  if(len(out) == len(out1)):\n   currentSum = sum(temp)\n   if minSum < currentSum:\n    minSum = currentSum\n print(minSum)", "T = int(input())\n\nfor t in range(T):\n \n n, k = map(int, input().split())\n \n arr = list(map(int, input().split()))\n  \n out1 = set(arr)\n \n minSum = sum(arr[0:k])\n \n for i in range(1, n-k+1):\n  \n  temp = arr[i:i+k]\n  \n  out = set(temp)\n  \n  if(len(out) == len(out1)):\n   currentSum = sum(temp)\n   if minSum < currentSum:\n    minSum = currentSum\n print(minSum)", "for _ in range(int(input())):\n n,k=map(int,input().split())\n a=list(map(int,input().split()))\n length=len(set(a))\n tot=sum(a[:k-1])\n tmp=0\n ans=0\n for i in range(k-1,n):\n  tot+=a[i]-tmp\n  if len(set(a[i-k+1:i+1]))==length:\n   ans=max(ans,tot)\n  tmp=a[i-k+1]\n print(ans)"]