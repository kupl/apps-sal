["def __gcd(a, b): \n  \n # Everything divides 0  \n if (a == 0 or b == 0): \n  return 0; \n \n # base case \n if (a == b): \n  return a; \n \n # a is greater \n if (a > b): \n  return __gcd(a - b, b); \n return __gcd(a, b - a); \n \n# Function to find  \n# number of squares \ndef NumberOfSquares(x, y): \n  \n # Here in built PHP \n # gcd function is used \n s = __gcd(x, y); \n \n ans = (x * y) / (s * s); \n \n return int(ans);\n \nn=int(input())\nwhile n:\n n=n-1\n c,d=map(int,input().split())\n print(NumberOfSquares(c, d))", "# cook your dish here\nfor _ in range(int(input())):\n l,b=map(int,input().split())\n for i in range(1,min(l,b)+1):\n  if l%i==0 and b%i==0:\n   s=(l*b)//i**2\n print(s)", "# cook your dish here\ndef __gcd(a, b): \n if (a == 0 or b == 0): \n  return 0; \n if (a == b): \n  return a; \n if (a > b): \n  return __gcd(a - b, b); \n return __gcd(a, b - a); \nfor _ in range(int(input())):\n x,y=list(map(int,input().split()))\n s = __gcd(x, y); \n ans = (x * y) / (s * s); \n print(int(ans))\n", "import math\n\nfor _ in range(int(input())):\n a,b = map(int,input().split())\n _gcd = math.gcd(a,b)\n tmp = (a*b)//(_gcd*_gcd)\n print(tmp)", "import math\nn = int(input())\nfor _ in range(n):\n a, b = map(int, input().split())\n ans = (a//math.gcd(a, b))*(b//math.gcd(a, b))\n print(ans)", "import math as m\nfor _ in range(int(input())):\n a,b=map(int,input().split())\n g=m.gcd(a,b)\n print(a//g * b//g)", "import math\nn = int(input())\nfor i in range(n):\n c = list(map(int, input().split()))\n d = math.gcd(c[0], c[1])\n h = int((c[0]*c[1])/(d**2))\n print(h)", "\n\n\n# Python3 code for calculating\n# the number of squares\n\n# Recursive function to\n# return gcd of a and b\ndef __gcd(a, b):\n # Everything divides 0\n if (a == 0 or b == 0):\n  return 0;\n\n  # base case\n if (a == b):\n  return a;\n\n  # a is greater\n if (a > b):\n  return __gcd(a - b, b);\n return __gcd(a, b - a);\n\n\n# Function to find\n# number of squares\ndef NumberOfSquares(x, y):\n # Here in built PHP\n # gcd function is used\n s = __gcd(x, y);\n\n ans = (x * y) / (s * s);\n\n return int(ans);\n\n\n# Driver Code\n\nt = int(input())\nfor i in range(t):\n m,n = list(map(int,input().split(' ')))\n# Call the function\n# NumberOfSquares\n print((NumberOfSquares(m, n)));\n\n# This code is contributed\n# by mit\n", "import math\n\nfor _ in range(int(input())):\n c,d = list(map(int, input().split()))\n\n size = int(math.sqrt(c*d))\n\n while size > 0:\n  if (c*d)%(size*size) == 0:\n   k = (c*d)/(size*size)\n   if c%size == 0 and d%size == 0:\n    print(int(k))\n    break\n\n  size-=1\n", "import math\nfor _ in range(int(input())):\n a,b=map(int,input().split())\n g=math.gcd(a,b)\n res=((a*b)/(g*g))\n print(int(res))", "t = int(input())\n\nfor i in range(t):\n m,n = map(int,input().split())\n \n mul = m*n\n \n while(m!=n):\n  if (m>n):\n   m-=n\n  else:\n   n-=m\n print(mul//(m*n))"]