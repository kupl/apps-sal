["a=eval(input())\nwhile(a):\n\n x=eval(input())\n b=list(map(int,input().split()))\n z=[0]*100\n k=1\n j=0\n c=0\n for i in b:\n  \n  if i==0:\n   \n   z.insert(i,k)\n   \n  else:\n   \n   if z[z.index(i)+1]==0:\n    \n    z.insert(j,k)\n   else:\n    m=z.index(i)\n    n=m+1\n    p=(len(z)-z.count(0))-n\n    c=c+min(n,p)\n    \n    z.insert(m+1,k)\n    \n    \n  k+=1\n  j+=1\n  m=0\n  n=0\n  p=0\n  \n print(c)\n \n    \n    \n    \n   \n  \n  \n \n \n  \n\n\n a-=1\n", "for i in range(eval(input())):\n n = eval(input())\n a=[]\n ans=0\n b = list(map(int, input().split()))\n for j in range(1,n+1):\n  temp=b[j-1]\n  if(temp==0):\n   a.insert(0, j)\n  else:\n   k=0\n   while(a[k]!=temp):\n    k+=1\n   a.insert(k+1, j)\n   ans+=min(k+1,j-k-2)\n print(ans)", "t = int(input())\nfor tt in range(t):\n n = int(input())\n arr = list(map(int, input().split()))\n order = [1]\n ans = 0\n for i in range(1, n):\n  num = i + 1\n  index = 0\n  if arr[i] > 0:\n   index = order.index(arr[i])\n   ans += min(index + 1, len(order) - index - 1)\n   order.insert(index + 1, num)\n  else:\n   order.insert(0, num)\n print(ans)\n", "for t in range(int(input())): \n n = int(input())\n s = []\n a = list(map(int,input().split()))\n steps = 0\n for i in range(n):\n  if (a[i] == 0):\n   s = [i+1] + s\n  else:\n   pos = s.index(a[i])+1\n   steps += min(pos, i-pos)\n   s = s[:pos]+[i+1]+s[pos:]\n print(steps)", "for t in range(eval(input())):\n  n = eval(input())\n  v = list(map( int, input().split() ))\n  a = []\n  ans = 0\n  for i in range(n):\n    if v[i] == 0 :\n      a = [i+1] + a\n    else:\n      for j in range(len(a)):\n        if a[j] == v[i] :\n          ans += min( len(a)-j-1, j+1 )\n          a = a[:j+1]+[i+1]+a[j+1:]\n          break\n  print(ans)", "for i in range(eval(input())):\n n = eval(input())\n arr = list(map(int,input().split()))\n place = []\n steps = 0\n for i in range(1,n+1):\n  pos = arr[i-1]\n  if pos==0:\n   place.insert(0,i)\n  else:\n   ind = place.index(pos)\n   lef = ind+1\n   rig = (i-1)-lef\n   if rig==0:\n    place.append(i)\n   else:\n    steps += min(lef,rig)\n    place.insert(ind+1,i)\n print(steps)", "t = eval(input())\nwhile t != 0:\n cnt = 0\n t -= 1\n n = eval(input())\n a = list(map(int,input().split()))\n s = []\n for i in range(1,n+1):\n  pos = a[i-1]\n  if pos == 0:\n   s.insert(0,i)\n  else:\n   pos = s.index(a[i-1])\n   cnt += min(pos+1, i-2-pos)\n   s.insert(pos+1,i)\n print(cnt)\n", "for _ in range(eval(input())):\n n = eval(input())\n ar = list(map(int,input().split()))\n cnt = 0\n ans = []\n for i in range(n):\n  if ar[i]==0:\n   ans = [i+1] + ans\n  else:\n   ind = ans.index(ar[i])\n   tmp = min(ind+1, len(ans)-ind-1)\n   cnt += tmp\n   ans = ans[:ind+1] + [i+1] + ans[ind+1:]\n print(cnt)\n   \n", "t = eval(input())\nfor _ in range(t):\n n = eval(input())\n a = [int(x) for x in input().strip().split()]\n ca = []\n ans = 0\n for i, v in enumerate(a):\n  if v == 0:\n   ans += 0\n   ca = [i+1] + ca\n  else:\n   posOfTarget = ca.index(v) + 1\n   leftOfTarget = posOfTarget\n   rightOfTarget = len(ca) - posOfTarget\n   ans += min(leftOfTarget,rightOfTarget)\n   ca = ca[:posOfTarget] + [i+1] + ca[posOfTarget:]\n print(ans)\n", "t = eval(input())\nfor _ in range(t):\n n = eval(input())\n num = [int(i) for i in input().split()]\n arr = []\n ans=0\n for i in range(1,n+1):\n  if(num[i-1]==0):\n   arr[0:0]=[i]\n  else:\n   x = arr.index(num[i-1])+1\n   y = len(arr)-x\n   ans += min(x,y)\n   arr[x:x]=[i]\n print(ans)\n   \n"]