["#include<sdg.h>\nfor _ in range(int(input())):\n    s=input()\n    n=len(s)\n    if n==1:\n        if s[0].isalpha(): print(\"-32\")\n        else: print(0)\n    else:\n        num,ch=0,0\n        p,q=0,0\n        c=1\n        x=s[0]\n        ans=\"\"\n        for i in range(1,n):\n            if s[i-1]==s[i]:\n                c+=1\n                if i==n-1:\n                    ans+=s[i-1]\n                    ch+=1\n                    if c>1:\n                        ans+=str(c)\n                        num+=1\n                    c=1\n            else:\n                ans+=s[i-1]\n                ch+=1\n                if c>1:\n                    ans+=str(c)\n                    num+=1\n                c=1\n                if i==n-1:\n                    ans+=s[i]\n                    ch+=1\n        #print(ans,num,ch)\n        sol=(n*8)-((num*32)+(ch*8))\n        print(sol)", "t=int(input())\nfor _ in range(t):\n    s=input()\n    x=\"\"\n    i=0\n    ans=0\n    while i<len(s):\n        x=s[i]\n        c=1\n        i+=1\n        while i<len(s) and s[i]==x:\n            i+=1\n            c+=1\n        if c==1:\n            ans+=8\n        else:\n            ans+=40\n    m=8*len(s)\n    print(m-ans)\n", "# cook your dish here\nt=int(input())\nwhile t>0:\n    c=input()\n    len1=len(c)\n    sum1=0\n    l=[]\n    for i in range(len1):\n        sum1+=8\n    sum2=8\n    q=1\n    for i in range(1,len1):\n        if c[i]!=c[i-1]:\n            if q>1:\n                sum2+=32\n            q=1 \n            sum2+=8 \n        else:\n            q+=1 \n                \n    if q>1:\n        sum2+=32 \n    print(sum1-sum2)\n    t-=1\n                \n            \n        \n        \n              \n                \n            \n        \n        \n", "# cook your dish here\ndef compress(a):\n    prev = None\n    prev_c = 1\n    ans_s=\"\"\n    k=0\n    for x in a:\n        if prev == x:\n            prev_c+=1\n        else:\n            if prev!=None:\n                if prev_c!=1:\n                    ans_s = ans_s + str(prev) + str(prev_c)\n                    k+=40\n                else:\n                    ans_s = ans_s + str(prev)\n                    k+=8\n            prev_c=1\n            prev =x\n    if prev_c!=1:\n        ans_s = ans_s + str(prev) + str(prev_c)\n        k+=40\n    else:\n        ans_s = ans_s + str(prev)\n        k+=8\n    #print(ans_s)\n    return k\nt=int(input())\nwhile(t):\n    t=t-1\n    a=input()\n    ans = compress(a)\n    size = 8*len(a)\n    print( size - ans )", "#include<sdg.h>\nfor _ in range(int(input())):\n    s=input()\n    n=len(s)\n    if n==1:\n        if s[0].isalpha(): print(\"-32\")\n        else: print(0)\n    else:\n        num,ch=0,0\n        p,q=0,0\n        c=1\n        x=s[0]\n        ans=\"\"\n        for i in range(1,n):\n            if s[i-1]==s[i]:\n                c+=1\n                if i==n-1:\n                    ans+=s[i]\n                    if s[i].isalpha(): ch+=1\n                    else: num+=1\n                    if c>1: \n                        ans+=str(c)\n                        num+=1\n                    c=1\n                        \n            else:\n                if s[i-1].isalpha():\n                    ch+=1\n                    ans+=s[i-1]\n                    if c>1: \n                        ans+=str(c)\n                        num+=1\n                    c=1\n                else:\n                    ans+=s[i-1]\n                    num+=1\n                    if c>1: \n                        ans+=str(c)\n                        num+=1\n                    c=1\n                if i==n-1:\n                    ans+=s[i]\n                    if s[i].isalpha(): ch+=1\n                    else: num+=1\n        #print(ans,num,ch)\n        alp,qt=0,0\n        for i in range(n):\n            if s[i].isalpha(): alp+=1\n            else: qt+=1\n        sol=((qt-num)*32)+((alp-ch)*8)\n        print(sol)", "for _ in range(int(input())):\r\n    s = input()\r\n    curr = 0\r\n    for i in range(len(s)):\r\n        if(s[i].isdigit()):\r\n            curr = curr + 32\r\n        else:\r\n            curr = curr + 8\r\n    c = s[0]\r\n    ans = s[0]\r\n    count = 0\r\n    d = dict()\r\n    if(c.isdigit()):\r\n        curr2 = 32\r\n    else:\r\n        curr2 = 8\r\n    for i in range(len(s)):\r\n        if(c ==s[i]):\r\n            count +=1\r\n        else:\r\n            c = s[i]\r\n            if(count!=1):\r\n                ans = ans + str(count)\r\n                curr2 += 32\r\n            ans = ans + str(s[i])\r\n            if(s[i].isdigit()):\r\n                curr2 += 32\r\n            else:\r\n                curr2 += 8\r\n            count = 1\r\n    if(count!=1):\r\n        ans = ans + str(count)\r\n        curr2 += 32\r\n    print(curr - curr2)\r\n\r\n\r\n\r\n\r\n", "t=int(input())\r\nfor i in range(t):\r\n    s=input()\r\n    l=len(s)\r\n    sm=1\r\n    total=0\r\n    for j in range(1,l):\r\n        if s[j-1]==s[j]:\r\n            sm+=1\r\n        else:\r\n            if sm==1:\r\n                total+=8\r\n            else:\r\n                total+=8\r\n                total=total+32\r\n            sm=1\r\n    if s[j-1]==s[j]:\r\n            sm+=1\r\n            total+=8\r\n            total=total+32\r\n    else:\r\n        if sm==1:\r\n            total+=8\r\n        else:\r\n            total+=8\r\n            total=total+32\r\n    print(l*8-total)", "t = int(input())\n\nwhile t:\n    t -= 1\n    string = input()\n    l = len(string)\n    temp = string[0]\n    occ = 1\n\n    pre = 0\n    this = 0\n\n    for i in range(1, l):\n        if string[i] == temp:\n            occ += 1\n        else:\n            if occ != 1:\n                pre += occ * 8\n                this += 40\n            else:\n                pre += 8\n                this += 8\n            occ = 1\n            temp = string[i]\n    if occ == 1:\n        pre += 8\n        this += 8\n    else:\n        pre += 8 * occ\n        this += 40\n    print(pre-this)\n\n", "# cook your dish here\nfor _ in range(int(input())):\n    s=input()\n    size1=8*len(s)\n    size2=8\n    i=1\n    while i<len(s):\n        if s[i]==s[i-1]:\n            while s[i]==s[i-1]:\n                i+=1\n                if i>=len(s):\n                    break\n            size2+=32\n        else:\n            size2+=8\n            i+=1\n    print(size1-size2)", "# cook your dish here\nn = int(input())\nfor i in range(n):\n    s = str(input())\n    o_l = len(s)*8\n    n_l = 0\n    t = 0\n    for i in range(len(s)-1):\n        if s[i] ==s[i+1]:\n            t+=1\n        else:\n            if(t>=1):\n                n_l += 32+8\n            else:\n                n_l += 8\n            t = 0\n    if(t>=1):\n        n_l += 32+8\n    else:\n        n_l += 8\n    print(o_l-n_l)\n", "# cook your dish here\ntemp=[]\nt=int(input())\nfor _ in range(t):\n    s=input()\n    l=list(s)\n    x=len(l)*8\n    \n    i=0\n    y=0\n    while i<(len(l)):\n        count=0\n        while i<(len(l)-1) and l[i]==l[i+1] :\n            \n            count+=1\n            \n            \n            i+=1\n        if count==0:\n            y+=8\n        else:\n            y+=40\n        i=i+1\n    temp.append(x-y)\nfor i in temp:\n    print(i)", "for _ in range(int(input())):\r\n    s = input()\r\n    curr = 0\r\n    for i in range(len(s)):\r\n        if(s[i].isdigit()):\r\n            curr = curr + 32\r\n        else:\r\n            curr = curr + 8\r\n    c = s[0]\r\n    ans = s[0]\r\n    count = 0\r\n    d = dict()\r\n    if(c.isdigit()):\r\n        curr2 = 32\r\n    else:\r\n        curr2 = 8\r\n    for i in range(len(s)):\r\n        if(c ==s[i]):\r\n            count +=1\r\n        else:\r\n            if(c.isdigit()):\r\n                curr2 +=32\r\n            else:\r\n                curr2+=8\r\n            c = s[i]\r\n            if(count!=1):\r\n                ans = ans + str(count)\r\n                curr2 += 32\r\n            ans = ans + str(s[i])\r\n            count = 1\r\n    if(count!=1):\r\n        ans = ans + str(count)\r\n        curr2 += 32\r\n    print(curr - curr2)\r\n\r\n\r\n\r\n\r\n", "# cook your dish here\nt=int(input())\nwhile t>0:\n    c=input()\n    len1=len(c)\n    sum1=0\n    l=[]\n    for i in range(len1):\n        if c[i].isalpha():\n            sum1+=8\n        else:\n            sum1+=32\n    sum2=0\n    l.append(c[0])\n    q=1\n    for i in range(1,len1):\n        if c[i].isalpha():\n            if c[i]==c[i-1]:\n                q+=1 \n            else:\n                if q>1:\n                    l.append(q)\n                l.append(c[i])\n                q=1 \n        else:\n            if q>1:\n                l.append(q)\n            q=1 \n            l.append(c[i])\n    if c[len1-1].isalpha():\n        if q>1:\n            l.append(q)\n    for i in l:\n        if str(i).isalpha():\n            sum2+=8 \n        else:\n            sum2+=32\n    print(sum1-sum2)\n    t-=1\n            \n                \n            \n        \n        \n", "from collections import Counter\nfor _ in range(int(input())):\n    S = list(map(str,input()))\n    original = 8\n    new = 0\n    if S[0].isdigit():\n        original = 32\n    lst = [S[0]]\n    lst1 = [1]\n    \n    b = 0\n    for i in range(1, len(S)):\n        if S[i].isdigit():\n            original += 32\n        else:\n            original += 8\n            \n        if S[i]==lst[-1]:\n            lst1[-1]+=1\n        else:\n            lst.append(S[i])\n            lst1.append(1)\n    \n    for i in range(len(lst)):\n        if lst[i].isdigit():\n            if lst1[i] > 1:\n                new += 64\n            else:\n                new += 32\n        \n        else:\n            if lst1[i] > 1:\n                new += 40\n            else:\n                new += 8\n    \n    print(original-new)", "from collections import Counter\nfor _ in range(int(input())):\n    S = list(map(str,input()))\n    original = 8\n    new = 8\n    if S[0].isdigit():\n        original = 32\n        new = 32\n    a = S[0]\n    b = 0\n    for i in range(1, len(S)):\n        if S[i].isdigit():\n            original += 32\n        else:\n            original += 8\n        \n        if S[i]==a:\n            b = 32\n        else:\n            new += b\n            b = 0\n            a = S[i]\n            if S[i].isdigit():\n                new += 32\n            else:\n                new += 8\n    new += b\n    print(original-new)", "try:\n    for _ in range(int(input())):\n        s=input()\n        l=len(s)\n        k=8*l\n        p=8\n        t=0\n        for i in range(1,l):\n            if(s[i]==s[i-1]):\n                if(t==0):\n                    p+=32\n                    t=1\n            else:\n                p+=8\n                t=0\n        print(k-p)\nexcept EOFError as e:\n    pass", "# cook your dish here\ntest = int(input())\nfor t in range(test):\n    s = input()\n    prev = s[0]\n    total = 0\n    count = 0\n    for i in s:\n        if i == prev:\n            count += 1\n        else:\n            if(count==0 or count == 1):\n                total += 8\n            else:\n                total += 40\n            count = 1\n        prev = i\n        \n    if(s[len(s)-1] == s[len(s)-2]):\n        total += 40\n    else:\n        total += 8\n    #print(total)\n    diff = (len(s)*8) - (total)\n    print(diff)", "from collections import Counter\nfor _ in range(int(input())):\n    S = list(map(str,input()))\n    original = 8\n    new = 8\n    if S[0].isdigit():\n        original = 32\n        new = 32\n    a = S[0]\n    b = 0\n    for i in range(1, len(S)):\n        if S[i].isdigit():\n            original += 32\n            new += 32\n        else:\n            original += 8\n            if S[i]==a:\n                b = 32\n            else:\n                new += b+8\n                b = 0\n        a = S[i]\n    new +=b\n    print(original-new)\n", "def fac(a):\r\n    s=1\r\n    for i in range(1,a+1):\r\n        s=s*i\r\n    return s\r\n\r\ndef prime(n):\r\n    n=int(n)\r\n    if(n==2 or n==3):\r\n        return 1\r\n    k=n**(1/2)\r\n    for i in range(2,int(k)+2):\r\n        if(n%i==0):\r\n            return 0\r\n    return 1\r\n\r\n\r\ndef sieve(n):\r\n    arr=[]\r\n    prime = [True for i in range(n+1)]\r\n    p = 2\r\n    while (p * p <= n):\r\n        if (prime[p] == True):\r\n            for i in range(p * 2, n+1, p):\r\n                prime[i] = False\r\n        p += 1\r\n    for p in range(2, n):\r\n        if prime[p]:\r\n            arr.append(p)\r\n    return arr\r\n\r\n\r\n\r\n\r\nt=int(input())\r\n# n,m=[int(x) for x in input().split()]\r\n\r\nfor ii in range(t):\r\n    s=input()\r\n    prev=s[0]\r\n    ss=[]\r\n    c=1\r\n    for i in s[1:]:\r\n        if(i!=prev):\r\n            if(c==1):\r\n                ss.append('p'+prev)\r\n            else:\r\n                ss.append('p'+prev)\r\n                ss.append(str(c))\r\n            prev=i\r\n            c=1\r\n        else:\r\n            c+=1\r\n\r\n    if(c==1):\r\n        ss.append('p'+prev)\r\n    else:\r\n        ss.append('p'+prev)\r\n        ss.append(str(c))\r\n    hah='0987654321'\r\n    s1=0\r\n    s2=0\r\n\r\n\r\n    s1=8*(len(s))\r\n    for i in ss:\r\n        if (i[0] in hah):\r\n            s2 += 32\r\n        else:\r\n            s2 += 8\r\n    # print(s,ss)\r\n    print(s1-s2)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "# cook your dish here\r\nfrom sys import stdin, stdout\r\nimport math\r\nfrom itertools import permutations, combinations\r\nfrom collections import defaultdict\r\nfrom bisect import bisect_left \r\nfrom bisect import bisect_right\r\n \r\ndef L():\r\n    return list(map(int, stdin.readline().split()))\r\n \r\ndef In():\r\n    return list(map(int, stdin.readline().split()))\r\n \r\ndef I():\r\n    return int(stdin.readline())\r\n \r\nP = 1000000007\r\ndef main():\r\n    for t in range(I()):\r\n        s = input()\r\n        st = s[0]\r\n        i = 1\r\n        c1, c2 = 1, 0\r\n        while i < len(s):\r\n            if s[i] == s[i-1]:\r\n                j = i \r\n                c = 0\r\n                while j < len(s) and s[j] == s[i-1]:\r\n                    c += 1 \r\n                    j += 1 \r\n                if c != 0:\r\n                    c2 += 1\r\n                    i = j-1 \r\n                    st += str(c+1)\r\n            else:\r\n                st += s[i]\r\n                c1 += 1\r\n            i += 1 \r\n        print(len(s)*8 -(c1*8+c2*32))\r\n    \r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()"]