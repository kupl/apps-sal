["import sys\ndef fin(): return sys.stdin.readline().strip()\ndef fout(s, end=\"\\n\"): sys.stdout.write(str(s)+end)\n\nMOD = pow(10, 9)+7\nt = int(input())\nwhile t>0:\n t -= 1\n n, m = list(map(int, fin().split()))\n if n == 1:\n  print(m%MOD)\n  continue\n dp1 = m*(m-1)\n dp2 = m\n for i in range(3, n+1):\n  temp = dp2\n  dp2 = dp1 \n  dp1 = (temp*(m-1))%MOD+(dp1*(m-1))%MOD\n print((dp1+dp2)%MOD)\n\n \n\n", "# cook your dish her\ntry:from cp import input,setInputFile\nexcept:pass\nimport math \nimport copy\n# import random\nimport numpy as np\nimport sys\n# import time\ndef input(): return sys.stdin.readline()\ndef itarr(arr): return list(range(len(arr)))\ndef mp():return list(map(int,input().split()))\ndef lmp():return list(map(int,input().split()))\ndef inp():return int(input())\nMOD=1000000007\n# from functools import lru_cach\ndef mexp(m,p):\n if p==1:\n  return m%MOD\n x=(m%MOD * m%MOD )%MOD\n r=mexp(x%MOD,p//2)\n if p%2==0:\n  return r%MOD\n else:\n  return (m%MOD*r%MOD)%MOD\n\ndef main():\n n,b=mp()\n t=b%MOD\n g=(b*b)%MOD\n n%=MOD\n if n==2:\n  print(g)\n  return \n if n==1:\n  print(t)\n  return\n\n MI=np.matrix(np.array([[(b-1)%MOD,(b-1)%MOD],[1,0]]))\n\n arr= mexp(MI,n-2) \n arr=np.array(arr)\n ans = (arr[0][0]*g)%MOD + (arr[0][1]*t)%MOD\n ans%=MOD\n print(ans)\n\n\n \n \n\n# main()\n\nfor _ in range(int(input())):\n main()\n # break\n\n\n\n", "t=int(input())\nmod=10**9+7\nfor _ in range(t):\n n,m=map(int,input().split())\n same=[0]\n diff=[m]\n for i in range(n-1):\n  s=diff[-1]\n  d=(same[-1]+diff[-1])*(m-1)\n  same+=[s%mod]\n  diff+=[d%mod]\n print((same[-1]+diff[-1])%mod)", "\"\"\"\n-----------------------------Pseudo---------------------------------\n\"\"\"\nimport copy\nimport sys\nfrom collections import defaultdict, Counter\n\ndef input(): return sys.stdin.readline()\ndef mapi(): return map(int,input().split())\ndef maps(): return map(str,input().split())\n#\ndef print(arg, *argv, end=None):\n sys.stdout.write(str(arg))\n for i in argv: sys.stdout.write(\" \"+str(i))\n sys.stdout.write(end) if end else sys.stdout.write(\"\\n\")\n\n#---------------------------------------------------------------#\n\n\nmod = 1000000007\n\nclass Matrix(object):\n def __init__(self, rows,cols):\n  self.rows = rows\n  self.cols = cols\n  self.mat = [[0]*cols for i in range(rows)]\n\n def __len__(self):\n  return len(self.mat)\n\n def __getitem__(self, key1):\n  return self.mat[key1]\n\n def __setitem__(self, key1, value):\n  self.mat[key1] = value\n\n def __str__(self):\n  res = \"\"\n  for i in self.mat:\n   res+=\" \".join(str(j) for j in i)+\"\\n\"\n  return res[:-1]\n\n def __mul__(self, other):\n  if len(other) != len(self.mat[0]):\n   print(\"matrices are not compitable for multiplication\")\n   return\n  res = Matrix(len(self.mat), len(other[0]))\n  for i in range(self.rows):\n   for j in range(len(other[0])):\n    ans = 0\n    for k in range(len(other)):\n     ans += self.mat[i][k]*other[k][j]%mod\n    res[i][j] = ans%mod\n  return res\n \"\"\"\n    def __pow__(self, n):\n     if n==0 or n==1:\n      return self\n     tmp = self\n     #copy.deepcopy(self)\n     tmp = tmp**(n//2)\n     #print(tmp)\n     tmp = tmp*tmp\n     if(n%2 != 0):\n      tmp = tmp*self\n     return tmp\n    \"\"\"\n def __pow__(self,n):\n  res = Matrix(self.rows, self.rows)\n  tmp = self\n  for i in range(self.rows):\n   res[i][i] = 1\n  while n>0:\n   if n&1:\n    res = res*tmp\n   n>>=1\n   tmp = tmp*tmp\n  return res\n\"\"\"\ndp[1] = m\ndp[2] = m^2\ndp[3] = m^3-m\nrecurrent relation:  dp[i] = m*dp[i-1] - (m-1)*dp[i-3]\n\n\"\"\"\ndef solve():\n t = 1\n t = int(input())\n while(t):\n  t-=1\n  n,m = mapi()\n  m%=mod\n  B = Matrix(3,1)\n  M = Matrix(3,3)\n  B[0][0] = m\n  B[1][0] = (m*m)%mod\n  B[2][0] = ((m*m%mod +mod -1)%mod)*m%mod\n\n  M[0][1] = 1\n  M[1][2] = 1\n  M[2][0] = (mod-m+1)%mod\n  M[2][1] = 0\n  M[2][2] = m\n  #print(M)\n  M = M**(n-1)\n  B = M*B\n  #print(B)\n  print(B[0][0])\n\n#---------------------------------------------------------------#\ndef __starting_point():\n solve()\n\n\n__starting_point()", "def multiply(F,M,i):\n x = (F[0][0]*M[0][0]+F[1][0]*M[0][1])%i\n y = (F[0][0]*M[1][0]+F[1][0]*M[1][1])%i\n z = (F[0][1]*M[0][0]+F[1][1]*M[0][1])%i\n w = (F[0][1]*M[1][0]+F[1][1]*M[1][1])%i\n F[0][0] = x\n F[1][0] = y\n F[0][1] = z\n F[1][1] = w\ndef power(F,M,n,i):\n if(n<2): return\n power(F,M,n//2,i)\n multiply(F,F,i)\n if(n%2!=0): multiply(F,M,i)\nfor t in range(0,int(input())):\n i = 1000000007;\n n,m = map(int, input().split())\n F = [[(m-1)%i,1],[(m-1)%i,0]]\n M = [[(m-1)%i,1],[(m-1)%i,0]]\n if(n==1): i = m%i\n elif(n==2): i = (m*m)%i\n else:\n  power(F,M,n-2,i)\n  i = ((F[0][0]*m+F[1][0])*m)%i\n print(i)", "for t in range(0,int(input())):\n z = 1000000007;\n ar = [int(i) for i in input().split(\" \")]\n if(ar[0]==1): print(ar[1]%z)\n else:\n  a = ar[1]%z\n  b = ((ar[1]%z)*(ar[1]%z))%z\n  c = (ar[1]-1)%z\n  for i in range(2,ar[0]):\n   d = (c*(b+a))%z\n   a = b\n   b = d\n  print(b)", "mod = 10**9 + 7\nfor _ in range(int(input())):\n n, m = list(map(int,input().split()))\n if n == 1:\n  print(m%mod)\n  continue\n if n == 2:\n  print((m%mod)*(m%mod)%mod)\n  continue\n if m == 1:\n  print(0)\n  continue\n\n t = 0\n\n t1 = m%mod\n t2 = ((m%mod)*(m%mod)%mod)\n for i in range(3, n+1):\n  t = ((t1+t2)%mod * (m-1)%mod)%mod\n  t1 = t2\n  t2 = t\n print(t)\n", "import sys\ndef multiply(matrix1,matrix2,mod):\n ans=[[-1 for i in range(len(matrix2[0]))] for _ in range(len(matrix1))]\n #print(ans,'before')\n for i in range(len(matrix1)):\n  for j in range(len(matrix2[0])):\n   s=0\n   k=0\n   while k<len(matrix1[0]):\n    s+=(matrix1[i][k]*matrix2[k][j])%mod\n    k+=1\n   ans[i][j]=(s%mod)\n #print(ans,'ans')\n return ans\ndef power(a,b,mod):\n res=[[1,0],[0,1]]\n #print(res,'res')\n for i in range(len(a)):\n  for j in range(len(a[0])):\n   a[i][j]=a[i][j]%mod\n #print(a,'a')\n while b>0:\n  if (b&1):\n   res=multiply(res,a,mod)\n  b=b>>1\n  a=multiply(a,a,mod)\n return res\nt=int(sys.stdin.readline())\nmod=10**9+7\nfor _ in range(t):\n n,m=list(map(int,sys.stdin.readline().split()))\n base=[[m],[0]]\n a=[[m-1,m-1],[1,0]]\n #print(base,'base')\n #print(a,'a')\n ans=power(a,n-1,mod)\n #print(ans,'ans')\n ans=multiply(ans,base,mod)\n print((ans[0][0]+ans[1][0])%mod)\n \n   \n", "t = int(input())\nfor _ in range(t):\n mod = 10**9+7\n n,m = [int(c) for c in input().split(' ')]\n if n==1:\n  print(m%mod)\n  continue\n a,b = m*(m-1),m\n if n==2:\n  print((a+b)%mod)\n else:\n  for p in range(3,n+1):\n   temp = a\n   a = (a%mod+b%mod)%mod\n   a = (a*(m-1))%mod\n   b = temp\n  print((a+b)%mod)"]