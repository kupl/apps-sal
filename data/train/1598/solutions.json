["try:\n # cook your dish here\n t=int(input())\n for j in range(t):\n  n=int(input())\n  x=[]\n  p=[]\n  m=[]\n  for i in range(n):\n   X,P,M=list(map(str,input().split()))\n   x.append(X)\n   p.append(int(P))\n   m.append(int(M))\n   avg=sum(m)/n\n  for i in m:\n   if i<avg:\n    z=sorted([k for k in m if k<avg])\n    for i in range(len(z)):\n     print(x[m.index(z[i])],p[m.index(z[i])],m[m.index(z[i])])\n      \nexcept:\n pass", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n d={}\n for j in range(n):\n  x,p,m=map(str,input().split())\n  if((x,p) not in d):\n   d[(x,p)]=int(m)\n lst=d.values()\n s=sum(lst)\n avg=s/n\n count=0\n \n d=sorted(d.items())\n for i in range(n):\n  if(d[i][1]<avg):\n   count=1\n   print(d[i][0][0],d[i][0][1],d[i][1])\n if(count==0):\n  print('\\n')", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n d={}\n for j in range(n):\n  x,p,m=map(str,input().split())\n  if((x,p) not in d):\n   d[(x,p)]=int(m)\n lst=d.values()\n s=sum(lst)\n avg=s/n\n count=0\n \n d=sorted(d.items())\n for i in range(n):\n  if(d[i][1]<avg):\n   count=1\n   print(d[i][0][0],d[i][0][1],d[i][1])\n if(count==0):\n  print(-1)", "# cook your dish here\nfor _ in range(int(input())):\n l=[]\n lll=[]\n s=0\n n=int(input())\n for _ in range(n):\n  ll=list(map(str,input().split()))\n  s+=float(ll[2])\n  lll.append(ll)\n avg=s/n\n #print(avg)\n for i in lll:\n  if float(i[2])<avg:\n   l.append(i)\n #print(l,lll)\n l.sort(key = lambda x: x[2])\n for i in l:\n  print(*i)", "#Help the teacher\nfor _ in range(int(input())):\n n = int(input())\n list1 = []\n for i in range(n):\n  list1.append(list(map(str,input().split())))\n sums = 0\n for i in list1:\n  sums += int(i[2])\n avg = sums/n\n ans = []\n for i in list1:\n  if(avg>int(i[2])):\n   ans.append(i)\n ans.sort(key = lambda ans: int(ans[2]))\n for i in ans:\n  print(*i)", "# cook your dish here\nimport math\nt=int(input())\nfor i in range(t):\n n=int(input())\n x={}\n p={}\n m=[]\n for j in range(n):\n  x1,p1,m1=input().split()\n  m.append(int(m1))\n  x[int(m1)]=x1\n  p[int(m1)]=p1\n su=sum(m)\n avg=su/n\n m.sort()\n for j in range(n):\n  if(m[j]<50):\n   print(x[m[j]],end=\" \")\n   print(p[m[j]],end=\" \")\n   print(m[j])\n   \n ", "from operator import itemgetter\nt=int(input())\nfor _ in range(t):\n n=int(input())\n #d=defaultdict(list)\n l=[]\n d={}\n sum1=0\n for i in range(n):\n  name,p_mobile,marks=map(str,input().split())\n  d['name']=name\n  d['p_mobile']=p_mobile\n  d['marks']=int(marks)\n  l.append(d)\n  sum1+=int(marks)\n  d={}\n avg=sum1/n\n l=sorted(l,key=itemgetter('marks'))\n for i in l:\n  if i['marks']<avg:\n   print(i['name'],i['p_mobile'],i['marks'])", "# cook your dish here\nfrom operator import itemgetter\nfor _ in range(int(input())):\n n=int(input())\n info=[]\n val=0\n for i in range(n):\n  lst=list(input().strip().split())\n  val+=int(lst[2])\n  info.append(lst)\n info.sort(key=lambda info:info[2])\n #print(ans)\n final=[]\n val=val/n\n for i in range(n):\n  if int(info[i][2])<val:\n   final.append(info[i])\n \n for i in final:\n  print(i[0],i[1],i[2])", "from statistics import mean\nfrom collections import Counter\nfor _ in range(int(input())):\n n=int(input());d={}\n for i in range(n):\n  x,y,z=input().split()\n  d[int(z)]=[x,y]\n avg=mean(d);a=[]\n for i in d:\n  if(i<avg):a.append(i)\n a.sort()\n for i in a:print(*d[i],i)\n", "# cook your dish here\nt=int(input())\nfor i in range(t):\n n=int(input())\n x={}\n p={}\n m=[]\n for j in range(n):\n  x1,p1,m1=input().split()\n  m.append(int(m1))\n  x[int(m1)]=x1\n  p[int(m1)]=p1\n su=sum(m)\n avg=su/n\n m.sort()\n for j in range(n):\n  if(m[j]<avg):\n   print(x[m[j]],end=\" \")\n   print(p[m[j]],end=\" \")\n   print(m[j])\n   \n ", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n l=[]\n avg=0\n for i in range(n):\n  x,p,m=input().split(\" \")\n  p=int(p)\n  m=int(m)\n  avg+=m\n  l.append([x,p,m])\n avg=avg//n\n ret=[]\n for i in range(n):\n  if l[i][2]<=avg:\n   ret.append([l[i][0],l[i][1],l[i][2]])\n ret.sort()\n for i in range(len(ret)):\n  print(ret[i][0],ret[i][1],ret[i][2])", "from statistics import mean\nfrom collections import Counter\nfor _ in range(int(input())):\n n=int(input());d={}\n for i in range(n):\n  x,y,z=input().split()\n  d[int(z)]=[x,y]\n avg=mean(d);a=[]\n for i in d:\n  if(i<avg):a.append(i)\n a.sort();c=0\n for i in range(len(a)-1):\n  if(a[i]==a[i+1]):c=1;break\n if(c==1):\n  result=sorted(a,key=a.count,reverse=True)\n  for i in result:print(*d[i],i)\n else:\n  for i in a:print(*d[i],i)", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n l=[]\n avg=0\n for i in range(n):\n  x,p,m=input().split(\" \")\n  p=int(p)\n  m=int(m)\n  avg+=m\n  l.append([x,p,m])\n avg=avg//n\n ret=[]\n for i in range(n):\n  if l[i][2]<avg:\n   ret.append([l[i][0],l[i][1],l[i][2]])\n ret.sort()\n for i in range(len(ret)):\n  print(ret[i][0],ret[i][1],ret[i][2])", "# cook your dish here\n\nt=int(input())\nfor i in range(t):\n n=int(input())\n l=[]\n for j in range(n):\n  l.append(input().split())\n #print(l)\n sum=0\n avg=0\n for j in range(n):\n  sum+=int(l[j][2])\n avg=sum/n\n x=[]\n #print(avg)\n for k in l:\n  if int(k[2])<avg:\n   x.append(k[2])\n x.sort()\n y=0\n le=len(x)\n while(le!=0):\n  for k in l:\n   #print(le)\n   if y<len(x):\n    if x[y]==k[2]:\n     print(k[0],k[1],k[2])\n     y+=1\n     le-=1\n     k[2]=-1\n     break\n    \n \n", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+int(t[2])\n   a.append(t)\n  avg//=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if int(x[2])<=(avg):\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+float(t[2])\n   a.append(t)\n  avg/=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if round(float(x[2]))<=round(avg):\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+float(t[2])\n   a.append(t)\n  avg/=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if int(x[2])<=round(avg):\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+float(t[2])\n   a.append(t)\n  avg/=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if float(x[2])<round(avg):\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+float(t[2])\n   a.append(t)\n  avg/=n\n  \n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if int(x[2])<round(avg):\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\nfor _ in range(int(input())):\n l=[]\n lll=[]\n s=0\n n=int(input())\n for _ in range(n):\n  ll=list(map(str,input().split()))\n  s+=float(ll[2])\n  lll.append(ll)\n avg=s/n\n #print(avg)\n for i in lll:\n  if float(i[2])<avg:\n   l.append(i)\n l.sort(key = lambda x: x[2])\n for i in l:\n  print(*i)", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+float(t[2])\n   a.append(t)\n  avg/=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if float(x[2])<avg:\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ntry:\n t=int(input())\n for i in range(t):\n  n=int(input())\n  a=[]\n  avg=0\n  for j in range(n):\n   t=list(input().split())\n   avg=avg+int(t[2])\n   a.append(t)\n  avg//=n\n  a.sort(key=lambda a:a[2])\n  for x in a:\n   if int(x[2])<avg:\n    print(' '.join(map(str,x)))\nexcept EOFError:\n pass", "# cook your dish here\ndef swapPositions(list, pos1, pos2): \n list[pos1], list[pos2] = list[pos2], list[pos1] \n return list\n\nt = int(input())\nwhile(t):\n t-=1 \n avg = 0\n x=[]\n y=[]\n z=[]\n \n n = int(input())\n for i in range(0,n):\n  a,b,c = input().split(' ')\n  c = int(c)\n  x.append(a)\n  y.append(b)\n  z.append(c)\n  avg = avg + c\n avg = avg/n\n '''for i in range(0,n):\n     for j in range(0,n):\n      if z[i]>z[j]:\n       swapPositions(z,i,j)\n       swapPositions(x,i,j)\n       swapPositions(y,i,j)'''\n for i in range(0,n):\n  if z[i]<avg:\n   print(x[i] + \" \"+ y[i] + \" \"+ str(z[i]))", "# cook your dish here\nfor _ in range(int(input())):\n l=[]\n lll=[]\n s=0\n n=int(input())\n for _ in range(n):\n  ll=list(map(str,input().split()))\n  s+=int(ll[2])\n  lll.append(ll)\n avg=s//n\n #print(avg)\n for i in lll:\n  if int(i[2])<avg:\n   l.append(i)\n l.sort(key = lambda x: x[2])\n for i in l:\n  print(*i)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jul 30 11:31:06 2020\n\n@author: MONIMOY\n\"\"\"\n\nt = int(input())\n\ndef sortkey(ele):\n return int(ele[2])\n\ndef avg(s):\n total = 0\n for i in range(len(s)):\n  total += int(s[i][2])\n return total/len(s)\n\nout=[]\nfor i in range(t):\n n = int(input())\n s = []\n \n for j in range(n):\n  a = input().split()\n  s.append(a)\n s.sort(key=sortkey)\n av = avg(s)\n for k in s:\n  if int(k[2]) < av:\n   out.append(k)\n  \nfor i in range(len(out)):\n print(*out[i], sep=\" \")"]