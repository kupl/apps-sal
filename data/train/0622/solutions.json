["# cook your dish here folding paper\nfrom collections import Counter\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef dist(a,b):return ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5\nfor _ in range(val()):\n n,m,w,h=li()\n s=Counter(st())\n l=[]\n for i in range(m):\n  l.append(li())\n ans=float('inf')\n l.sort(key=lambda x:x[0])\n for j in range(1,50):\n  for i in range(j,m):\n   ans=min(ans,dist(l[i-j],l[i]))\n for i in l:\n  if s['D'] or s['U']>1:ans=min(ans,2*i[1])\n  if s['U'] or s['D']>1:ans=min(ans,2*(h-i[1]))\n  if s['L'] or s['R']>1:ans=min(ans,2*i[0])\n  if s['R'] or s['L']>1:ans=min(ans,2*(w-i[0]))\n print(ans)", "from collections import Counter\ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef dist(a,b):return ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5\nfor _ in range(val()):\n n,m,w,h=li()\n s=Counter(st())\n l=[]\n for i in range(m):\n  l.append(li())\n ans=float('inf')\n l.sort(key=lambda x:x[0])\n for j in range(1,50):\n  for i in range(j,m):\n   ans=min(ans,dist(l[i-j],l[i]))\n for i in l:\n  if s['D'] or s['U']>1:ans=min(ans,2*i[1])\n  if s['U'] or s['D']>1:ans=min(ans,2*(h-i[1]))\n  if s['L'] or s['R']>1:ans=min(ans,2*i[0])\n  if s['R'] or s['L']>1:ans=min(ans,2*(w-i[0]))\n print(ans)", "# from bisect import bisect_left as bl\n# from bisect import bisect_right as br\n# import heapq\n# import math\nfrom collections import Counter\n# from functools import reduce,cmp_to_key\n# import sys\n# input = sys.stdin.readline\n \n# M = mod = 998244353\n# def factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in \u00a0\u00a0\u00a0\u00a0range(1, int(n**0.5) + 1) if n % i == 0))))\n# def inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\n# def li2():return [i for i in input().rstrip('\\n').split(' ')]\n# def li3():return [int(i) for i in input().rstrip('\\n')]\n\ndef dist(a,b):return ((a[0] - b[0])**2 + (a[1] - b[1])**2)**0.5\n\nfor _ in range(val()):\n n,m,w,h = li()\n\n s = Counter(st())\n l = []\n for i in range(m):\n  l.append(li())\n\n ans = float('inf')\n # for i in range(m):\n #     for j in range(i + 1,m):\n #         ans = min(ans,dist(l[i],l[j]))\n l.sort(key = lambda x:x[0])\n for j in range(1,50):\n  for i in range(j,m):\n   ans = min(ans,dist(l[i-j],l[i]))\n for i in l:\n  if s['D'] or s['U'] > 1:ans = min(ans,2*i[1])\n  if s['U'] or s['D'] > 1:ans = min(ans,2*(h - i[1]))\n  if s['L'] or s['R'] > 1:ans = min(ans,2*i[0])\n  if s['R'] or s['L'] > 1:ans = min(ans,2*(w - i[0]))\n print(ans)"]