["#for _ in range(int(input())):\n#n,m = map(int,input().split())\n#n = int(input())\n#x = [int(w) for w in input().split()]\n#x = [int(input()) for _ in range(n)]\n#for i in range(n):\n#dt = {} for i in x:dt[i] = dt.get(i,0)+1\n#dt = {k:v for k,v in sorted(x.items(), key=lambda i: i[1])}\n\nfrom bisect import bisect_left as bs\nn = int(input())\nx = [int(input()) for _ in range(n)]\ndp = []\nmn = float('inf')\nidx = []\nmlen = float('-inf')\nsi,sj = 0,0\nsm = 0\ndef check(_sm,ind1,ind2,f):\n    nonlocal mn,si,sj,mlen\n    if _sm<abs(mn) or (_sm==abs(mn) and (idx[ind2]-idx[ind1])>mlen):\n        si,sj = idx[ind1]+1,idx[ind2]\n        mn = _sm*f\n        mlen = sj-si+1\n\nfor k,v in enumerate(x,1):\n    sm += v\n    ind = bs(dp,sm)\n    dp.insert(ind,sm)\n    idx.insert(ind,k)\n    check(abs(sm),0,ind,1)\n\n    if ind>0:\n        prev = ind-1\n        diff = dp[ind]-dp[prev]\n        while prev>0 and (dp[ind]-dp[prev-1])==diff:\n            prev -= 1\n        check(diff,prev,ind,1)\n    if ind < len(dp)-1:\n        nxt = ind+1\n        diff = dp[nxt]-dp[ind]\n        while nxt<len(dp)-1 and (dp[nxt+1]-dp[ind])==diff:\n            nxt += 1\n        check(diff,nxt,ind,-1)\nprint(mn)\nprint(si,sj)\n"]