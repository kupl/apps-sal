["import sys\ninput = sys.stdin.readline\n\nMOD = 10 ** 9 + 7\n\nt = int(input())\nfor _ in range(t):\n    n, p = list(map(int, input().split()))\n    l = list(map(int, input().split()))\n    if p == 1:\n        print(n % 2)\n    else:\n        l.sort(reverse = True)\n        curr = l[0]\n        out = 0\n        real = True\n\n        for v in l:\n            if v < curr:\n                diff = curr - v\n                if 10 ** (7/diff) < p and out > 0:\n                    real = False\n                out *= pow(p, diff, MOD)\n                if out > 10 ** 7:\n                    real = False\n                out %= MOD\n\n                curr = v\n            if out > 0 or not real:\n                out -= 1\n            else:\n                out += 1\n            out %= MOD\n\n        out *= pow(p, curr, MOD)\n        print(out % MOD)\n", "import sys\nreadline = sys.stdin.readline\n\nT = int(readline())\nAns = [None]*T\nMOD = 10**9+7\nmod = 10**9+9\nfor qu in range(T):\n    N, P = map(int, readline().split())\n    A = list(map(int, readline().split()))\n    if P == 1:\n        if N&1:\n            Ans[qu] = 1\n        else:\n            Ans[qu] = 0\n        continue\n    if N == 1:\n        Ans[qu] = pow(P, A[0], MOD)\n        continue\n    A.sort(reverse = True)\n    cans = 0\n    carry = 0\n    res = 0\n    ra = 0\n    for a in A:\n        if carry == 0:\n            carry = pow(P, a, mod)\n            cans = pow(P, a, MOD)\n            continue\n        res = (res + pow(P, a, mod))%mod \n        ra = (ra + pow(P, a, MOD))%MOD\n        \n        if res == carry and ra == cans:\n            carry = 0\n            cans = 0\n            ra = 0\n            res = 0\n    Ans[qu] = (cans-ra)%MOD\n        \n        \nprint('\\n'.join(map(str, Ans)))", "import sys\ninput = sys.stdin.readline\nmod=1000000007\n\nt=int(input())\nfor tests in range(t):\n    n,p=list(map(int,input().split()))\n    K=sorted(map(int,input().split()),reverse=True)\n\n    if p==1:\n        if n%2==0:\n            print(0)\n        else:\n            print(1)\n        continue\n\n    ANS=[0,0]\n    flag=0\n\n    for i in range(n):\n        k=K[i]\n        \n        if ANS[0]==0:\n            ANS=[1,k]\n            \n        elif ANS[1]==k:\n            ANS[0]-=1\n\n        else:\n            while ANS[1]>k:\n                ANS[0]*=p\n                ANS[1]-=1\n\n                if ANS[0]>10**7:\n                    flag=1\n                    lastind=i\n                    break\n\n            if flag==1:\n                A=ANS[0]*pow(p,ANS[1],mod)%mod\n                #print(A,ANS)\n\n                for j in range(lastind,n):\n                    A=(A-pow(p,K[j],mod))%mod\n                print(A)\n                break\n            else:\n                ANS[0]-=1\n\n    if flag==0:\n        print(ANS[0]*pow(p,ANS[1],mod)%mod)\n                    \n                    \n    \n\n    \n\n    \n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\n\nT = int(input())\nP = 10 ** 9 + 7\nfor _ in range(T):\n    N, b = list(map(int, input().split()))\n    A = sorted([int(a) for a in input().split()])\n    if b == 1:\n        print(N % 2)\n        continue\n    a = A.pop()\n    pre = a\n    s = 1\n    ans = pow(b, a, P)\n    while A:\n        a = A.pop()\n        s *= b ** min(pre - a, 30)\n        if s >= len(A) + 5:\n            ans -= pow(b, a, P)\n            if ans < 0: ans += P\n            while A:\n                a = A.pop()\n                ans -= pow(b, a, P)\n                if ans < 0: ans += P\n            print(ans)\n            break\n        \n        if s:\n            s -= 1\n            ans -= pow(b, a, P)\n            if ans < 0: ans += P\n            pre = a\n        else:\n            s = 1\n            ans = -ans\n            if ans < 0: ans += P\n            ans += pow(b, a, P)\n            if ans >= P: ans -= P\n            pre = a\n    else:\n        print(ans)\n\n"]