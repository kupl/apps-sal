["from math import *\n\nn = int(input())\nfor _ in range(n):\n    a = [int(i) for i in input().split()]\n    c = len(a)\n    avg = sum(a)/c\n    ulik = log(2*avg + 1)*(-c)\n    plik = 0\n    for k in a:\n        plik += log(avg)*k\n        plik += -avg\n        for i in range(1, k+1):\n            plik -= log(i)\n    isu = ulik > plik\n    ans = [\"poisson\", \"uniform\"][isu]\n    print(ans)\n", "import sys\n\n\ndef uniform_variance(mean):\n    return (2 * mean) ** 2 / 12\n\ndef poisson_variance(mean):\n    mean = sum(a) / len(a)\n    return mean\n\ndef dist(a):\n    mean = sum(a) / len(a)\n    var = 0\n    for k in a:\n        var += (mean - k) ** 2\n\n    var /= len(a)\n\n    uniform = abs(uniform_variance(mean) - var)\n    poisson = abs(poisson_variance(mean) - var)\n\n    if uniform > poisson:\n        return 'poisson'\n    else:\n        return 'uniform'\n\n\n\nn = int(sys.stdin.readline())\nfor i in range(n):\n    a = [int(x) for x in sys.stdin.readline().split()]\n    print(dist(a))\n\n", "v = int(input())\neps = 130\n\ndef ans(a):\n    a.sort()\n    if len(a) % 2 == 0:\n        med = a[len(a)//2]\n    else:\n        med = (a[len(a)//2] + a[len(a)//2 - 1]) // 2\n\n    l = med - med // 2\n    r = med + med // 2\n\n    c1 = c2 = 0\n\n    for i in a:\n        if i >= l and i <= r:\n            c1 += 1\n        else:\n            c2 += 1\n\n    if abs(c1 - c2) <= eps:\n        return \"uniform\"\n    else:\n        return \"poisson\"\n\n    \n\nfor i in range(v):\n    cur = [int(i) for i in input().split()]\n    print(ans(cur))\n", "v = int(input())\neps = 3\n\ndef ans(a):\n    a.sort()\n    if len(a) % 2 == 0:\n        med = a[len(a)//2]\n    else:\n        med = (a[len(a)//2] + a[len(a)//2 - 1]) // 2\n\n    l = med - med // 2\n    r = med + med // 2\n\n    c1 = c2 = 0\n\n    for i in a:\n        if i >= l and i <= r:\n            c1 += 1\n        else:\n            c2 += 1\n\n    if c2 == 0:\n        c2 = 0.0001\n\n    if c1 / c2 <= eps:\n        return \"uniform\"\n    else:\n        return \"poisson\"\n\n    \n\nfor i in range(v):\n    cur = [int(i) for i in input().split()]\n    print(ans(cur))\n", "def sampleVariance(V):\n    X = sum(V) / len(V)\n    S = 0.0\n    for x in V:\n        S += (X-x)**2\n\n    S /= (len(V)-1)\n    return (X, S)\n\n#That awkward moment when you realized that variance is sigma^2 but you just took the stat course this semester\nfor i in range(int(input())):\n    V = list(map(int, input().split()))\n    X, S = sampleVariance(V)\n    v1 = X\n    v2 = (2*X) ** 2 / 12\n\n    print(\"{}\".format(\"poisson\" if abs(v1-S) < abs(v2-S) else \"uniform\"))", "import sys\nimport math\n\ncount = int(sys.stdin.readline())\nfor i in range(count):\n\tnumbers = list(map(int, sys.stdin.readline().split(' ')))\n\tn = len(numbers)\n\ttotal = sum(numbers)\n\tmean = total * 1.0 / n\n\n\n\tinside = 0\n\tfor number in numbers:\n\t\tposition = number / mean\n\t\tif position >= 0.5 and position <= 1.5:\n\t\t\tinside += 1\n\tif inside > 0.7 * n:\n\t\tprint('poisson')\n\telse:\n\t\tprint('uniform')\n\t\t\n", "for i in range(int(input())):\n    t = list(map(int, input().split()))\n    p = sum(t) / 250\n    d = sum((q - p) ** 2 for q in t) / 250\n    print(['poisson', 'uniform'][6 * d > p * p])", "for i in range(int(input())):\n    t = list(map(int, input().split()))\n    d = 212 * sum(q ** 2 for q in t) > sum(t) ** 2\n    print(['poisson', 'uniform'][d])", "from statistics import mean\nfrom math import factorial, log\n\n_lf = []\ndef logfact(n):\n    nonlocal _lf\n    CALCLEN = 2200\n    if not _lf:\n        _lf = [0]*CALCLEN\n        for i in range(2, CALCLEN):\n            _lf[i] = _lf[i-1] + log(i)\n    return _lf[n]\n\ndef unif_ml(xs):\n    p1 = mean(xs)\n    p2 = max(xs) / 2\n    pmle = max(p1, p2) # probably actually not mle and biased towards 0\n    loglh = len(xs) * log(2*pmle + 1)\n    return loglh\n\ndef poiss_ml(xs):\n    pml = mean(xs)\n    loglh = len(xs)*pml + sum([-x*log(pml) + logfact(x) for x in xs])\n    return loglh\n\ndef solve(xs):\n    ul = unif_ml(xs)\n    pl = poiss_ml(xs)\n    #print('dbg:', ul, pl)\n    if ul < pl:\n        print('uniform')\n    else:\n        print('poisson')\n\ndef __starting_point():\n    v = int(input())\n    for i in range(v):\n        xs = [int(x) for x in input().split()]\n        solve(xs)\n\n__starting_point()", "import math\n\ndef poisson_p(k, P):\n    result = 1\n    for i in range(1, k + 1):\n        result *= P / i\n\n    return result * math.exp(-P)\n\nV = int(input())\n\nfor _ in range(V):\n    ks = list(map(int, input().split()))\n    N = len(ks)\n    P = sum(ks) / N\n    var = sum((k - P)**2 for k in ks) / N\n    poisson_var = P\n    uniform_var = 2 / (2*P + 1) * sum(a**2 for a in range(round(P) + 1))\n    # print(var, poisson_var, uniform_var)\n    print(('poisson' if abs(var - poisson_var) < abs(var - uniform_var)\n          else 'uniform'))\n"]