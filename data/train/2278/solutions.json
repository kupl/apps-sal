["n = int(input())\nrows = [input().split() for _ in range(n)]\nrows = [(int(x),int(y)) for x,y in rows]\npoints = {}\nfor x,y in rows:\n    if x in points:\n        points[x] = max(y, points[x])\n    else:\n        points[x] = y\npoints = sorted(points.items(),key=lambda point: point[0])\n\n\ndef above(p,p1,p2):\n    \"\"\"\n    x1 < x2\n    y1 = x1^2 + bx1 + c\n    y2 = x2^2 + bx2 + c\n    y >? x^2 + bx + c\n\n    y2 - y1 = x2^2 - x1^2 + bx2 - bx1\n    b = (y2 - y1 - x2^2 + x1^2) / (x2 - x1)\n    b * (x2 - x1) = y2 - y1 - x2^2 + x1^2\n\n    c = y1 - x1^2 - bx1\n    c * (x2 - x1) = (y1 - x1^2) * (x2 - x1) - x1 * (y2 - y1 - x2^2 + x1^2)\n\n    y * (x2 - x1) >? (x^2 + bx + c) * (x2 - x1)\n    y * (x2 - x1) >?\n        x^2 * (x2 - x1)\n        + x * (y2 - y1 - x2^2 + x1^2)\n        + (y1 - x1^2) * (x2 - x1) - x1 * (y2 - y1 - x2^2 + x1^2)\n    \"\"\"\n    x,y = p\n    x1,y1 = p1\n    x2,y2 = p2\n\n    x_2 = x**2\n    x12 = x1**2\n    x22 = x2**2\n    x2_x1 = x2 - x1\n    eq_b = y2 - y1 - x22 + x12\n\n    term_y = y * x2_x1\n    term_x2 = x_2 * x2_x1\n    term_x = x * eq_b\n    term_c = (y1 - x12) * x2_x1 - (x1 * eq_b)\n\n    return term_y >= term_x2 + term_x + term_c\n\n#print(above(points[2],points[0],points[1]))\n\n\nUs = []\nfor i, p in enumerate(points):\n    while len(Us) >= 2:\n        p1, p2 = Us[-2:]\n        if above(p,p1,p2):\n            Us.pop()\n        else:\n            break\n    Us.append(p)\n\nout = len(Us) - 1\nprint(out)"]