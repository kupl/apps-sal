["# cook your dish here\nfrom collections import Counter,defaultdict\n\nfor i in range(int(input())):\n n=int(input())\n arr=list(map(int,input().split()))\n coun=Counter(arr)\n check=True\n\n for j in coun:\n  if coun[j]>n//2:\n   print(\"No\")\n   check=False\n   break\n\n\n\n\n if check==True:\n  print(\"Yes\")\n  narr=sorted(arr)\n  dic=defaultdict()\n  j=0\n  for j in range(len(narr)):\n   if narr[j] not in dic:\n    dic[narr[j]]=j\n  ans=[0]*n\n  for j in range(len(arr)):\n   ans[j]=narr[(dic[arr[j]]+n//2)%n]\n   if coun[arr[j]]!=1:\n    dic[arr[j]]+=1\n  print(*ans)\n", "# cook your dish here\nt=int(input())\nfor _ in range(t):\n n=int(input())\n a=list(map(lambda x: int(x), input().split()))\n b=[]\n for i in range(0,len(a)):\n  b.append((a[i],i))\n b.sort(key=lambda x:x[0])\n hashmap={}\n maximum=0\n for i in range(0,len(a)):\n  if a[i] not in hashmap:\n   hashmap[a[i]]=0\n  hashmap[a[i]]+=1\n  if hashmap[a[i]]>maximum:\n   maximum=hashmap[a[i]]\n if maximum>n-maximum:\n  print(\"No\")\n else:\n  print(\"Yes\")\n  c=[]\n  for i in range(0,len(b)):\n   c.append(b[(i+maximum)%n])\n  d=[0 for _ in range(n)]\n  for i in range(0,len(b)):\n   d[b[i][1]]=c[i][0]\n  for i in d:\n   print(i,end=\" \")\n  print()\n", "for q in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n d=[]\n for i in range(len(l)):\n  d.append((l[i],i))\n l.sort()\n d.sort()\n i=0\n count=[]\n while i<n:\n  x=l[i]\n  j=0\n  c=0\n  while i+j<n and l[i+j]==x:\n   c+=1\n   j+=1\n  count.append(c)\n  i+=j\n c=max(count)\n if c>n//2:\n  print('No')\n else:\n  ans=[0]*n\n  for i in range(len(l)):\n   ans[d[i][1]]=d[i-c][0]\n  print('Yes')\n  print(*ans)\n", "# cook your dish here\nfrom collections import Counter\n\ntc = int(input())\n\nwhile tc>0:\n n=int(input())\n lis=list(map(int, input().split()))\n l1 = [(x,y) for y,x in enumerate(lis)]\n lis.sort()\n l1.sort()\n i=0\n c_l=[]\n while i<n:\n  x=lis[i]\n  j=0\n  c=0\n  while i+j<n and lis[i+j]==x:\n   c+=1\n   j+=1\n  c_l.append(c)\n  i+=j\n c=max(c_l)\n if c>n//2:\n  print('No')\n else:\n  ans=[0]*n\n  for i in range(len(lis)):\n   ans[l1[i][1]]=l1[i-c][0]\n  print('Yes')\n  print(*ans)\n tc-=1\n", "for _ in range(int(input())):\n n=int(input())\n l=list(map(int,input().split()))\n l1=[(x,i) for i,x in enumerate(l)]\n l.sort()\n l1.sort()\n i=0\n count=[]\n while i<n:\n  x=l[i]\n  j=0\n  c=0\n  while i+j<n and l[i+j]==x:\n   c+=1\n   j+=1\n  count.append(c)\n  i+=j\n c=max(count)\n if c>n//2:\n  print('No')\n else:\n  ans=[0]*n\n  for i in range(len(l)):\n   ans[l1[i][1]]=l1[i-c][0]\n  print('Yes')\n  print(*ans)\n", "from collections import defaultdict\ndef caps(a):\n d=defaultdict(list)\n for i in range(len(a)):\n  d[a[i]].append(i)\n  if(len(d[a[i]])>len(a)//2):\n   return('No',[])\n arr=[]\n for i in d.keys():\n  arr+=([i]*len(d[i]))\n arr2=[i for i in arr]\n arr2=arr2[len(a)//2:]+arr2[:len(a)//2]\n for i in range(len(arr2)):\n  di=arr[i]\n  vi=arr2[i]\n  a[d[di][0]]=vi\n  d[di].remove(d[di][0])\n return('Yes',a)\n\nt=int(input())\nfor _ in range(t):\n n=input()\n a=input().split()\n ans,arr=caps(a)\n print(ans)\n if(ans=='Yes'):\n  st=\"\"\n  for i in arr:\n   st+=i+' '\n  print(st)", "# cook your dish here\nfor z in range(int(input())):\n n = int(input())\n a = list(map(int,input().split()))\n dict_count = {}\n for num in a:\n  if num in dict_count:\n   dict_count[num]+=1\n  else:\n   dict_count[num]=1\n possible = 1\n for key in dict_count:\n  if dict_count[key]>n//2:\n   possible=0\n   break\n if possible:\n  print('Yes')\n  a_index = [(a[i],i) for i in range(n)]\n  a_index.sort()\n  cap_dict = {i:-1 for i in range(n)}\n  h = n//2\n  for i in range(n):\n   cap_dict[a_index[i][1]] = a_index[(i+h)%n][0]\n  caps = [str(cap_dict[i]) for i in range(n)]\n  print(' '.join(caps))\n else:\n  print('No')", "R = lambda: map(int, input().split())\nfor _ in range(int(input())):\n n = int(input())\n L1 = list(R())\n L = sorted(L1)\n d = {}\n f = 0\n p = n//2\n for i in range(n):\n  if L[i] not in d:d[L[i]] = [0, []]\n  d[L[i]][0] += 1\n  d[L[i]][1] += [i]\n  if d[L[i]][0] > p:f = 1;break\n if f:print(\"No\")\n else:\n  print(\"Yes\")\n  res = []\n  #print(d)\n  for i in L1:\n   ind = d[i][1].pop()\n   if n%2 and ind == n-1:\n    res.append(L[0])\n    continue\n   if ind+p < n:\n    res.append(L[ind+p])\n   elif ind-p >= 0:\n    res.append(L[ind-p])\n  print(*res)", "t=int(input())\nfor _ in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n f={}\n poss=1\n A=[[a[i],i] for i in range(n)]\n for i in range(n):\n  if(a[i] in f):\n   f[a[i]]+=1\n  else:\n   f[a[i]]=1\n for i in list(f.values()):\n  if(i>n//2):\n   poss=0\n if(poss):\n  A.sort()\n\n  ans=[0]*n\n  j=max(f.values())\n  B=A[j:]+A[:j]\n  \n  for i in range(n):\n   ans[A[i][1]]=B[i][0]\n\n  print(\"Yes\")\n  print(*ans)\n else:\n  print(\"No\")\n\n", "t=int(input())\nfor _ in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n f={}\n poss=1\n A=[[a[i],i] for i in range(n)]\n for i in range(n):\n  if(a[i] in f):\n   f[a[i]]+=1\n  else:\n   f[a[i]]=1\n for i in list(f.values()):\n  if(i>n//2):\n   poss=0\n if(poss):\n  A.sort()\n\n  ans=[0]*n\n  j=max(f.values())\n  B=A[j:]+A[:j]\n  \n  for i in range(n):\n   ans[A[i][1]]=B[i][0]\n\n  print(\"Yes\")\n  print(*ans)\n else:\n  print(\"No\")\n\n", "# cook your dish here\nfrom collections import Counter as cp\nt=int(input())\nfor i in range(t):\n n=int(input())\n p=input().split()\n l=cp(p)\n r=int(n/2)\n if l.most_common(1)[0][1]<=r:\n  print('Yes')\n else:\n  print('No')\n  continue\n counter_list=[]\n t_list=[]\n for j in range(n):\n  counter_list.append(int(p[j]))\n  t_list.append((j,int(p[j])))\n t_list.sort(key=lambda x: x[1])\n #print(t_list)\n for k in range(n):\n  q=t_list[k]\n  # print(q)\n  s=t_list[(k+r)%n]\n  #print(s)\n  counter_list[q[0]]=s[1]\n for k in range(n-1):\n  print(counter_list[k],end=' ')\n print(counter_list[n-1])", "from collections import Counter\nfrom copy import copy\nimport random\n\n\ndef derange(arr, max_freq):\n new_arr = copy(arr)\n dis = []\n for index, item in enumerate(new_arr):\n  dis.append((item, index))\n\n dis.sort()\n item, index = [a for a, b in dis], [b for a,b in dis]\n\n item = item[-max_freq: ] + item[:-max_freq]\n\n dis = list(zip(item, index))\n new_arr = [0] * len(new_arr)\n for a, b in dis:\n  new_arr[b] = a\n\n return new_arr\n\nfor _ in range(int(input())):\n n = int(input())\n arr = list(map(int, input().split()))\n\n freq = Counter(arr)\n flag = 1\n val = list(freq.values())\n for i in val:\n  if 2 * i > n:\n   flag = 0\n\n if flag != 0:\n  print(\"Yes\")\n  new = derange(arr, max(val))\n  print(*new)\n else:\n  print(\"No\")\n", "# cook your dish here\nfrom collections import Counter\nfor z in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n b=[]\n for j in range(n):b.append((a[j],j))\n c=Counter(a)\n m=0\n for x,y in c.items():\n  m=max(y,m)\n if m>n-m:\n  print(\"No\")\n else:\n  d=[0]*n\n  b.sort()\n  for i in range(n):\n   d[b[i][1]]=b[i-m][0]\n  print(\"Yes\")\n  for i in d:print(i,end=\" \")\n  print()\n   ", "\n\nt = int(input())\n\nfor i in range(t):\n n = int(input())\n hash = {}\n l = list(map(int,input().split()))\n for j in range(n):\n  try:\n   hash[l[j]]\n  except:\n   hash[l[j]] = 1\n  else:\n   hash[l[j]]+=1\n flag = 0\n max = 0\n for j in range(n):\n\n  if hash[l[j]]>n//2:\n   flag = 1\n   break\n  elif hash[l[j]]>max:\n   max = hash[l[j]]\n # l.sort()\n # print(max)\n # print(l)\n v = sorted(range(len(l)),key=lambda k:l[k])\n u = sorted(l)\n ans = [0]*n\n if flag == 0:\n  print('Yes')\n  z = u[max:] + u[:max]\n  for i in range(n):\n   ans[v[i]] = z[i]\n\n  print(*ans)\n else:\n  print('No')", "# cook your dish here\n # print(\"Odd\")    \nfrom collections import Counter\n\nfor _ in range(int(input())):\n\n n = int(input())\n li = [int(x) for x in input().split()]\n # n = 2\n # li  = [1,1]\n\n inp_ord = list(enumerate(li))\n cow = Counter(li)\n max_freq = cow.most_common(1)[0][1]\n\n if max_freq > n - max_freq:\n  print(\"No\")\n\n else:\n  sorted_input = sorted(inp_ord, key= lambda x : x[1])\n\n  foo = n- max_freq\n  for i in range(foo):\n\n   current_element = sorted_input[i][1]\n   curr_pos =sorted_input[i][0]\n\n   toSwapIndex = i + max_freq\n\n   swap_partner = sorted_input[toSwapIndex][1] \n   swap_position = sorted_input[toSwapIndex][0]\n\n   sorted_input[i] = curr_pos, swap_partner\n   sorted_input[toSwapIndex] = swap_position, current_element\n\n  op_list = sorted(sorted_input, key = lambda x : x[0])\n  bar = [y for x, y in op_list]\n  print(\"Yes\")\n  print(*bar)\n\n\n", "for test in range(int(input())):\n n=int(input())\n arr=list(map(int,input().split()))\n mp=[]\n for i in range(n):\n  mp.append([arr[i],i])\n mp.sort(key=lambda x:x[0])\n prev=-1\n max=-1\n count=1\n for i in range(n):\n  if prev==mp[i][0]:\n   count+=1\n  else:\n   count=1\n  if count>max:\n   max=count\n  prev=mp[i][0]\n if 2*max>n:\n  print(\"No\")\n else:\n  print(\"Yes\")\n  x=[0]*n\n  for i in range(n):\n   x[(i+max)%n]=mp[i][0]\n  y=[0]*n\n  for i in range(n):\n   y[mp[i][1]]=x[i]\n  for i in range(n):\n   print(y[i],end=' ')\n  print()\n", "t=int(input())\nfor tt in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n d={}\n for i in a:\n  if i in d:\n   d[i]+=1\n  else:\n   d[i]=1\n arr=[]\n mm=0\n for key,value in d.items():\n  mm=max(mm,value)\n for i in range(len(a)):\n  arr.append([a[i],i])\n ans=[0]*(n)\n if mm>(n//2):\n  print(\"No\")\n else:\n  print(\"Yes\")\n  arr=sorted(arr,key=lambda item:item[0])\n  for i in range(n):\n   ans[arr[(i+mm)%n][1]]=arr[i][0]\n  for i in ans:\n   print(i,end=\" \")\n  print()", "for _ in range(int(input())):\n   n=int(input())\n   dct={}\n   l=list(map(int,input().split()))\n   for i in range(n):\n     if l[i] in dct:\n       dct[l[i]].append(i)\n     else:\n       dct[l[i]]=[i]\n   d2={}\n   flag=True\n   m=0\n   for i in dct:\n     d2[i]=len(dct[i])\n     m=max(m,d2[i])\n   if(m>n//2):\n     print(\"No\")\n     continue\n   k=list(d2.keys())\n   def fun(itm):\n     nonlocal d2\n     return d2[itm]\n   k.sort(key=fun,reverse=True)\n   ans=[None]*n\n   j=len(k)\n   rem=[None]*j\n   place=[0]*j\n   for i in range(j):\n     rem[i]=d2[k[i]]\n   ch=1\n  # print(k)\n   for i in range(j):\n     while(d2[k[i]]!=0):\n       d2[k[i]]-=1\n       if(rem[ch]==0):\n         ch=(ch+1)%j\n       ans[dct[k[i]][place[i]]]=k[ch]\n       place[i]+=1\n       rem[ch]-=1\n      #     print(ans)\n   print(\"Yes\")\n   for i in ans:\n     print(i,end=\" \")\n   print(\"\")", "'''\n25th march 2019 monday\nrocket to the moon\n'''\n\nt = int(input())\nfor _ in range(t):\n n = int(input())\n a = [int(x) for x in input().split()]\n \n b = list()\n for id, x in enumerate(a):\n  b.append([x, id])\n\n b.sort()\n a.sort()\n counter = list()\n count = 1\n c_max = 1\n for i in range(1, n):\n  if a[i] == a[i - 1]:\n   count += 1\n  else:\n   counter.append(count)\n   c_max = max(c_max, counter[-1])\n   count = 1\n counter.append(count)\n c_max = max(c_max, counter[-1])\n if c_max > n//2:\n  print(\"No\")\n else:\n  print(\"Yes\")\n  c = [0] * n\n  for i in range(n):\n   c[b[i][1]] = b[(i + c_max)%n][0]\n  for x in c:\n   print(x, end=' ')\n  print('')\n\n\n  \n\n\n\n\n", "# cook your dish here\nT = int(input()) \nfor i in range(T) :\n N = int(input()) \n L = list(map(int, input().split()))\n M = list(range(1,N+1)) \n Z = [0] * N\n L, M = (list(t) for t in zip(*sorted(zip(L, M))))\n cout = (N + 1)//2\n mybool = True \n for i in range(N) :\n  Z[i] = L[(i + cout) % N]\n  if (Z[i] == L[i]) :\n   print(\"No\")\n   mybool = False \n   break \n if mybool :\n  print(\"Yes\") \n  M, Z = (list(t) for t in zip(*sorted(zip(M, Z))))\n  for i in range(N):\n   print(Z[i], end = \" \") \n  print() \n # print(M) \n # print(L) \n # print(Z) \n\n", "for _ in range(int(input())):\n n=int(input())\n d={};b=[0]*n;g={};h={}\n a=list(map(int,input().split()))\n for i in range(n):\n  if a[i] in d:\n   d[a[i]]+=1\n   h[a[i]].append(i)\n  else:\n   d[a[i]]=1\n   h[a[i]]=[i]\n x=list(map(list,sorted(list(d.items()),key=lambda y:y[1])))\n #print(x)\n l=0;r=len(x)-1\n \n for i in d:\n  g[i]=[]\n \n while l<r:\n  if x[r][1]>=x[l][1]:\n   g[x[r][0]].append([x[l][0],x[l][1]])\n   g[x[l][0]].append([x[r][0],x[l][1]])\n   x[r][1]-=x[l][1]\n   x[l][1]=0\n   l+=1\n  else:\n   if x[r][1]>0:\n    g[x[r][0]].append([x[l][0],x[r][1]])\n    g[x[l][0]].append([x[r][0],x[r][1]])\n    x[l][1]-=x[r][1]\n    x[r][1]=0\n   r-=1\n #print(g)\n s=[];m=x[-1][0];k=-1\n for i in range(n):\n  if g[a[i]]!=[]:\n   b[i]=g[a[i]][-1][0]\n   g[a[i]][-1][1]-=1\n   if g[a[i]][-1][1]==0:\n    g[a[i]].pop()\n  else:\n   s.append(i);k=a[i]\n #print(b)\n if k==m:\n  print('No')\n else:\n  for i in h[m]:\n   if b[i]!=k:\n    if s!=[]:\n     b[s.pop()]=b[i]\n     b[i]=k\n  print('Yes')\n  print(*b)\n  \n", "for _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n b=[[a[i],i]for i in range(n)]\n b.sort()\n c=[0]*n\n #print(b)\n for i in range(n):\n  x=b[i][0]\n  #print(c)\n  #print(a,x,b[(i + (n//2))%n][1])\n  if a[b[(i + (n//2))%n][1]]==x:\n   print(\"No\")\n   break\n  else:\n   \n   c[b[(i + (n//2))%n][1]]=x\n else:\n  print(\"Yes\")\n  print(*c)\n", "def arrange(n,l):\n list1=[0]*n;i=0\n list2=[-1]*n\n for j in range(n):\n  if i!=j:\n   if i<n and list1[i]==1:\n    for k in range(i,n):\n     i+=1\n     if i<n and list1[i]!=1:break\n   if i==n:break\n   else:\n    if l[j]!=l[i]:\n     list2[i]=l[j]\n     list2[j]=l[i]\n     list1[i]=1;list1[j]=1\n     i+=1\n if i!=n:\n  for j in range(0,i):\n   if i<n and list1[i]==1:\n    for k in range(i,n):\n     i+=1\n     if i<n and list1[i]!=1:break\n   if i==n:break\n   else:\n    if l[j]!=l[i] and list2[j]!=l[i]:\n     list2[i]=list2[j]\n     list2[j]=l[i]\n     list1[i]=1\n     i+=1\n if i!=n:print('No')\n else:\n  print('Yes')\n  for j in list2:\n   print(j,end=' ')\n  print()\n\nt=int(input())\nfor i in range(t):\n N=int(input())\n l=[]\n s=input().split(' ')\n for j in range(N):\n  l.append(int(s[j]))\n arrange(N,l)"]