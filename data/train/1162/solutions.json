["import sys\nimport os\n\ndef __starting_point():\n    start = 0\n    for line in sys.stdin:\n        if start == 0:\n            start = 1\n            continue\n        else:\n            try:\n                n = int(line.strip())\n                   \n               # print n   \n                   \n                q = n/7\n                rem = n%7\n                \n                \n                if rem==0:\n                    res = n\n                elif rem==1:\n                    res = (q-1)*7\n                elif rem==2:\n                    res = (q-2)*7 \n                elif rem==3:\n                    res = (q-3)*7\n                elif rem==4:\n                    res = q*7\n                elif rem==5:\n                    res = (q-1)*7\n                elif rem==6:\n                    res = (q-2)*7                                                                                \n                \n                if res < 0:\n                    print(-1)\n                else:\n                    print(res)\n                \n            except:\n                break\n            \n        \n            \n        \n__starting_point()", "from sys import stdin\n\ndef getInt():\n    return int(stdin.readline())\n\ndef getInts():\n    return [int(z) for z in stdin.readline().split()]\n\nfor case in range(getInt()):\n    N = getInt()\n    while ((N >= 0) and ((N % 7) != 0)): N -= 4\n    if (N < 0): N = -1\n    print(N)\n", "\n\nimport itertools\nimport sys\ninp = sys.stdin\nout = sys.stdout\ncases = int(inp.readline())\n\ndef lucky_number_4(num):#15\t\n\tif num < 4:\t\t\t#no\n\t\treturn -1\n\tif num == 4:\t\t#no\n\t\treturn 0\n\tif num < 7:\t\t\t#no\n\t\treturn -1\n\tfours = num - (num % 7) #= 15 - 1 = 14\n\tfor i in range(fours,0,-7): #14, \n\t\tif (num - i) % 4 == 0:\n\t\t\treturn i\n\treturn -1\n\noutputs = []\nfor case in range(1,cases+1):\n\tnum = int(inp.readline())\n\tfours = lucky_number_4(num)\n\t\n\tout.write(str(fours)+\"\\n\")\n", "def solve(D):\n    c4 = D\n    while c4>=0:\n        if c4%7==0 : \n            c7 = D-c4\n            if c7%4==0 :\n                return c4\n\n        c4 -= 4\n\n    return -1\n\nfor _t in range(int(input())):\n   print(solve(int(input())))\n\n", "# code chef may2012  chefluck.py\n\n\nt = int(input())\nfor t1 in range(t):\n    n = int(input())\n    while n%7:\n        n -= 4\n    if n<0:\n        print(-1)\n    else:\n        print(n)\n", "#from datetime import datetime\n#import random\n\ndef calc_x(y, num):\n    return (num - 4 * y) / 7.0\n\n#num_test_cases = 1000\n\nnum_test_cases = int(input())\n\n#print datetime.now()\n\nfor i in range(num_test_cases):\n    #num = random.randint(1, 10)\n    num = int(input())\n    #print \"testing num: %s\" % num\n    current_y = 0\n    result_x = 0\n    while result_x >= 0:\n        result_x = calc_x(current_y, num)\n        #print \"result_x: %s when y: %s\" % (result_x, current_y)\n        if result_x % 1 == 0:\n            break\n        current_y += 1\n    if result_x < 0 and current_y > 0:\n        print(-1)\n    else:\n        print(int(result_x * 7))\n\n#print datetime.now()", "a = int(input())\nfor i in range(a):\n\tnum = int(input())\n\tyes = 0\n\twhile(num > -1 ):\n\t\tif( num % 7 == 0):\n\t\t\tprint(num)\n\t\t\tyes = 1\n\t\t\tbreak\n\t\telse:\n\t\t\tnum = num - 4\n\tif yes == 0 :\n\t\tprint(-1)", "'''\nCreated on 6 mai 2012\n\n@author: Quentin\n'''\nimport sys\n\ndef readInput(stream):\n    T = int(sys.stdin.readline())\n    Ns=[]\n    for Tit in range(T) :\n        Ns.append( int(sys.stdin.readline()) )\n    return Ns\n    \ndef isInt(myInt):\n    return (myInt - int(myInt)) == 0.\n\ndef getMaxFour(N):\n    b = 1000.\n    a = -1.\n    \n    while( b>0. ) :\n        a = a + 1.\n        b = (N - 4.*a) / 7.\n        \n        if isInt(b) :\n            return int(b * 7)\n\n    return -1\n    \ndef __starting_point():\n    Ns = readInput(sys.stdin)\n    #print Ns\n    for N in Ns :\n        slevin = getMaxFour(N)\n        print(slevin)\n    \n    \n__starting_point()", "#!/usr/bin/env python2\n#-*- coding: utf-8 -*-\n\ntry:\n    import psyco\n    psyco.full()\nexcept ImportError:\n    pass\n\n\ndef main(n):\n    sol = -1\n\n    while (n >= 7 and sol < 0):\n        if not (n % 7):\n            sol = n\n        n -= 4\n    \n    return sol\n\ndef __starting_point():\n    T = int(input())\n\n    for test in range(T):\n        N = list(map(int, input().split()))[0]\n        print(main(N))\n\n__starting_point()", "# LuckyNumbers.py\n# Code Chef Problem: Lucky Lucky Number\n#   http://www.codechef.com/MAY12/problems/CHEFLUCK\n#   May Long Challenge 2012\n# Benjamin Johnson\n# May 5 2012 9:35\n# Lessons Learned: Math review: 0 is divisible by all numbers\n\nimport sys,time,math\n\n#Use the test file when testing\n#testInputFile = open(\"test.in\",\"r\")\n\n#Get input here\ntestCases = int(sys.stdin.readline())\n#testCases = int(testInputFile.readline())\n\nfor i in range(testCases):\n    fours = 0\n    #N = int(testInputFile.readline())\n    N = int(sys.stdin.readline())\n    fours = (N/7)*7 #Will not be N\n    n = int(N)\n    while fours >= 0:\n        # Check to see if N-fours is divisible by 4\n        if (n-fours)%4 == 0:\n            break;\n        else:\n            fours -= 7\n    if fours >= 0:\n        sys.stdout.write(\"%d\\n\"%fours)\n    else:\n        sys.stdout.write(\"-1\\n\")\n#testInputFile.close()\n", "for case in range(int(input())):\n    n = int(input())\n    while n%7 != 0 and n >= 0:\n        n -= 4\n    if n < 0: print(-1)\n    else: print(n)", "for _ in range(int(input())):\n    n=int(input())\n    \n    if n%7==0:\n        print(n)\n    elif n<17 and n==1 or n==2 or n==3 or n==5 or n==6 or n==9 or n==10 or n==13 or n==17:\n        print(-1)\n    else:\n        found=False\n        while not found:\n            n-=4\n            if n%7==0:\n                print(n)\n                found=True\n            elif n%4==0:\n                temp=n\n                while temp>0:\n                    temp-=4\n                    if temp%7==0:\n                        break\n                    \n                if temp>0 and temp%7==0:\n                    print(temp)\n                else:\n                    print(0)\n                    \n                found=True\n        ", "#!/usr/bin/python\ni = 0;\ntest_num = eval(input())\nwhile i < test_num:\n\tr = 0;\n\tindex = 0;\n\tnew_inp = 0\n\tinp = input()\n\tinp_list = list(inp);\n\tfor digit in reversed(inp_list):\n\t\td = int(digit)\n#print d,index, index%6\n\t\tif index%6 == 0:\n\t\t\tr = r + d*1\n\t\tif index%6 == 1:\n\t\t\tr = r + d*3\n\t\tif index%6 == 2:\n\t\t\tr = r + d*2\n\t\tif index%6 == 3:\n\t\t\tr = r + d*6\n\t\tif index%6 == 4:\n\t\t\tr = r + d*4\n\t\tif index%6 == 5:\n\t\t\tr = r + d*5\n\t\tindex += 1;\n\t\tr = r%7\n\tif r == 0:\t\t\t#if the input itself is divisible by 7\n\t\tprint(inp)\n\telse:\n\t\tif r%4 == 0:\t\t#if the input is not divisible by 7 but remainder is divisible by 4\n\t\t\tprint(int(inp) - r)\n\t\telse:\t\t\t#if remainder is not divisible by 4\n\t\t\tnew_inp = int(inp) - r\n\t\t\tj = 1\n\t\t\twhile True:\n\t\t\t\tif new_inp == 0:\t#for 1,2,3,5,6\n\t\t\t\t\tprint(\"-1\")\n\t\t\t\t\tbreak;\n\t\t\t\telif r + j*7 < int(inp):\n\t\t\t\t\tif (r + j*7)%4 == 0:\n\t\t\t\t\t\tprint(new_inp - j*7)\n\t\t\t\t\t\tbreak\n\t\t\t\telse: \n\t\t\t\t \tprint(\"-1\")\n\t\t\t\t \tbreak;\n\t\t\t\tj+=1\n\ti+=1\n", "def main():\n    for i in range(int(input())):\n        n = int(input())\n        numberFound = False\n        sevens = 0\n        while (sevens <= n):\n            if ((n - sevens) % 7 == 0):\n                numberFound = True\n                print(n - sevens)\n                break;\n            sevens += 4\n        if not numberFound:\n            print(-1)\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    for i in range(int(input())):\n        n = int(input())\n        numberFound = False\n        sevens = 0\n        while (sevens <= n):\n            if ((n - sevens) % 7 == 0) and (sevens % 4 == 0):\n                numberFound = True\n                print(n - sevens)\n                break;\n            sevens += 1\n        if not numberFound:\n            print(-1)\n\ndef __starting_point():\n    main()\n__starting_point()", "def __starting_point():\n    for i in range(int(input())):\n        n = int(input())\n        numberFound = False\n        sevens = 0\n        while (sevens <= n):\n            if ((n - sevens) % 7 == 0) and (sevens % 4 == 0):\n                numberFound = True\n                print(n - sevens)\n                break;\n            sevens += 1\n        if not numberFound:\n            print(-1)\n__starting_point()"]