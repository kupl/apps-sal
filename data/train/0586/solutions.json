["# cook your dish here\nfor t in range(int(input())):\n    n,k=map(int,input().split())\n    a=[]\n    sr=[]\n    for i in range(k):\n        x,y=input().split()\n        y=int(y)\n        a.append([10**10-y,x])\n        sr.append(sorted(x))\n    for i in range(n-k):\n        x,y=input().split()\n        y=int(y)\n        x=sorted(x)\n        for j in range(k):\n            if x==sr[j]:\n                a[j][0]-=y\n                break\n    a.sort()\n    for i in a:\n        print(i[1],abs(i[0]-10**10))", "for _ in range(int(input())):\n    n,r=map(int,input().split())\n    s=[]\n    d=dict()\n    for i in range(r):\n        a,b=map(str,input().split())\n        s.append([int(b),a])\n        a=list(a)\n        a.sort()\n        d[''.join(a)]=i\n    for i in range(n-r):\n        a,b=map(str,input().split())\n        a=list(a)\n        a.sort()\n        s[d[''.join(a)]][0]+=int(b)\n    s.sort(key=lambda x:x[1], reverse=True)\n    s.sort(key=lambda x:x[0])\n    for i in range(-1,-r-1,-1):\n        print(s[i][1],s[i][0])", "for _ in range(int(input())):\n    n,r=map(int,input().split())\n    s=[]\n    d=dict()\n    for i in range(r):\n        a,b=map(str,input().split())\n        s.append([int(b),a])\n        a=list(a)\n        a.sort()\n        d[''.join(a)]=i\n    for i in range(n-r):\n        a,b=map(str,input().split())\n        a=list(a)\n        a.sort()\n        s[d[''.join(a)]][0]+=int(b)\n    s.sort(key=lambda x:x[1], reverse=True)\n    s.sort(key=lambda x:x[0])\n    for i in range(-1,-r-1,-1):\n        print(s[i][1],s[i][0])", "# cook your dish here\nfor _ in range(int(input())):\n    n, r = map(int, input().split())\n    reg_teams = [input().split() for _ in range(r)]\n    after = [input().split() for _ in range(n - r)]\n    check1 = [[''.join(sorted(list(s))), int(p), s] for s, p in reg_teams]\n    check2 = {}\n    for a in after:\n        cur = \"\".join(sorted(list(a[0])))\n        if cur in check2.keys():\n            check2[cur] += int(a[1])\n        else:\n            check2[cur] = int(a[1])\n    for c in check1:\n        if c[0] in check2.keys():\n            c[1] += check2[c[0]]\n\n    check1.sort(key = lambda z: z[2])\n    check1.sort(key = lambda z: z[1], reverse = True)\n    for c in check1:\n        print(c[2], c[1])"]