["# import atexit\n# import io\n# import sys\n#\n# _INPUT_LINES = sys.stdin.read().splitlines()\n# input = iter(_INPUT_LINES).__next__\n# _OUTPUT_BUFFER = io.StringIO()\n# sys.stdout = _OUTPUT_BUFFER\n#\n#\n# @atexit.register\n# def write():\n#     sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n\nimport bisect\nfrom datetime import datetime\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n    n -= 1\n\n    timestamps = []\n    raw = []\n    while True:\n        s = \"\"\n        try:\n            s = input()\n        except:\n            print(-1)\n            return\n\n        d = datetime.strptime(s[0:19], \"%Y-%m-%d %H:%M:%S\")\n        timestamps.append(int(d.timestamp()))\n        raw.append(s[0:19])\n        idx = bisect.bisect_left(timestamps, timestamps[-1] - n)\n        if len(timestamps) - idx == m:\n            print(raw[-1])\n            return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split(\" \")))\n\nmessages = []\n\nmonths = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nwhile True:\n    try:\n        s = input()\n        messages.append(s)\n\n    except:\n        break\n\n# print(messages)\n\nlength = len(messages)\n\npref = [0]\n\nfor i in range(1, 13):\n    pref.append(pref[i - 1] + months[i])\n\n# print(pref)\n\ngot = False\nnow = 0\nprev = 0\nstore = []\n\nfor message in messages:\n    date = int(message[8:10]) + pref[int(message[5:7]) - 1]\n    time = date * 24 * 60 * 60 + int(message[11:13]) * 60 * 60 + int(message[14:16]) * 60 + int(message[17:19])\n    store.append(time)\n\n    if now < m - 1:\n        now += 1\n        continue\n\n    else:\n        prev = now - (m - 1)\n\n    if (store[now] - store[prev]) < n:\n        print(message[:19])\n        got = True\n        break\n\n    now += 1\n\nif not got:\n    print(-1)\n"]