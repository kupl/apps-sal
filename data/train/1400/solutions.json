["# cook your dish here\nfor _ in range(int(input())):\n n,l,h=list(map(int,input().split()))\n print(n-l+1+2**(l)-2,1+2**(h)-2+2**(h-1)*(n-h))\n", "# cook your dish here\nfor i in range(int(input())):\n n, l, r = list(map(int, input().split()))\n mins = 0\n maxs = 0\n start = 1\n end = 2 ** (min(r,n) - 1)\n cend = end\n reached = True\n add=True\n for j in range(n):\n  mins +=start\n  if j + 1 == l:\n   reached = False\n   start = 1\n  elif reached:\n   start *= 2\n\n reached = True\n for j in range(n):\n  maxs += end\n  if j + 1 == r:\n   reached = False\n   end = cend\n  elif reached:\n   end = end // 2\n print(mins, maxs)\n\n", "for _ in range(int(input())):\n n,l,r=list(map(int,input().split()))\n s=0\n mi=0\n ma=0\n for i in range(l):\n  mi+=pow(2,i)\n mi+=n-l\n for i in range(r):\n  ma+=pow(2,i)\n ma+=(n-r)*(pow(2,r-1))\n print(mi,ma)\n\n", "for _ in range(int(input())):\n n,l,r=list(map(int,input().split()))\n s=0\n mi=0\n ma=0\n for i in range(l):\n  mi+=pow(2,i)\n mi+=n-l\n for i in range(r):\n  ma+=pow(2,i)\n ma+=(n-r)*(pow(2,r-1))\n print(mi,ma)\n\n", "for _ in range(int(input())):\n n,l,r = map(int,input().split())\n mi = n-l+1\n p = 1\n for x in range(n-mi):\n  mi = mi + (2**p)\n  p+=1\n \n p1 = 0\n t = 0\n for y in range(r-1):\n  p1+=1\n  t = t + (2**p1)\n t = t + ((n-r)*(2**p1))\n \n print(mi,t+1)", "t=int(input())\nfor q in range(t):\n n,l,r=map(int,input().split())\n s=[]\n t1=0\n for i in range(n):\n  s.append(1<<i) \n for i in range(l):\n  t1=t1+s[i]\n  \n for i in range(n-1,r-1,-1):\n  s.pop()\n print(t1+min(s)*(n-l),end=' ')\n maxres=sum(s)\n\n for i in range(n-len(s)):\n  maxres+=max(s)\n print(maxres)\n ", "t=int(input())\nfor _ in range(t):\n n,l,r=list(map(int,input().split()))\n lr=[1]\n ll=[1]\n for i in range(1,r):\n  lr.append(2**i)\n for i in range(1,l):\n  ll.append(2**i)\n if(len(lr)!=n):\n  for i in range(n-r):\n   lr.append(lr[-1])\n if(len(ll)!=n):\n  for i in range(n-l):\n   ll.append(ll[0])\n print(sum(ll),sum(lr))\n", "for _ in range(int(input())):\n n,l,r=[int(x) for x in input().split()]\n s1,s2=[1]*n,[]\n l-=1\n # r-=1\n x=2\n for _ in range(l):\n  s1[_]=x\n  x=x*2\n x1=sum(s1)\n s=1\n for _ in range(r):\n  s2.append(s)\n  s=s*2\n s=s//2\n for _ in range(r,n):\n  s2.append(s)\n x2=sum(s2)\n print(x1,x2)\n \n", "t=int(input())\nfor jkl in range(t):\n n, l, r = list(map(int,input().split(\" \")))\n min_su = 0\n stoped = 0\n for i in range(0, l):\n  min_su = min_su + (2 ** i)\n  stoped = i\n max_su = min_su\n for i in range(l, r):\n  max_su = max_su + (2 ** i)\n  stoped = i\n for i in range(n - l):\n  min_su = min_su + 1\n for i in range(n - r):\n  max_su = max_su + (2 ** stoped)\n print(min_su, max_su)\n", "# cook your dish here\nfrom sys import stdin, stdout\ninput = stdin.readline\nprint2 = stdout.write\ndef get_ints(): return map(int, stdin.readline().split())\ndef get_list(): return list(map(int, stdin.readline().split()))\nfor _ in range(int(input())):\n n, l, r = get_ints()\n numsR = [2**i for i in range(r)]\n if l != r:\n  numsL = [2**i for i in range(l)]\n else: numsL = numsR\n ma = sum(numsR) + (n - r) * numsR[-1]\n mi = sum(numsL) + n - l\n print(mi, ma)", "for u in range(int(input())):\n n,x,y=list(map(int,input().split()))\n a,b=0,0\n a=(n-x)\n for i in range(x):\n  a+=2**i\n for i in range(y):\n  b+=2**i\n b+=((n-y)*(2**(y-1)))\n print(a,b)\n", "for _ in range(int(input())):\n def n_th_term(r):\n  return 2**(r-1)\n p=list(map(int,input().split()))\n n=p[0]\n l=p[1]\n r=p[2]\n maximum=2**(r)-1+(n-r)*n_th_term(r)\n minimum=2**(l)-1+(n-l)\n print(f\"{minimum} {maximum}\")\n \n", "l=[1]\nfor i in range(1,21):\n x=2**i\n l.append(x)\n#print(l,len(l))\nfor _ in range(int(input())):\n n,a,r=list(map(int,input().split()))\n tmi=n\n tma=n\n miv=0\n mav=0\n while(tmi!=0):\n  if(a==1):\n   miv=l[0]*n\n   tmi=0\n  else:\n   #print(l[:a])\n   miv=sum(l[:a])\n   tmi=tmi-a\n   miv=miv+tmi*l[0]\n   tmi=0\n x=l[:r]\n ll=len(x)\n while(tma!=0):\n  if(r==1):\n   mav=l[0]*n\n   tma=0\n  else:\n   mav=mav+sum(l[:r])\n   #print(mav)\n   tma=tma-r\n   mav=mav+tma*(x[ll-1])\n   tma=0\n print(min(mav,miv),max(miv,mav))\n", "# cook your dish here\nt=int(input())\npowers=[1]\nfor _ in range(20):\n powers.append(powers[-1]*2)\nfor _ in range(t):\n n, l, r = map(int, input().split())\n print(sum(powers[:l])+(n-l), sum(powers[:r])+(n-r)*powers[r-1])", "for _ in range(int(input())):\n n,l,r=map(int,input().split())\n print(n-l+pow(2,l)-1,pow(2,r)-1+(n-r)*pow(2,r-1))", "# cook your dish here\nfor _ in range(int(input())):\n mini,maxi=0,0\n n,l,r=map(int,input().split())\n o=n-l+1\n t=n-r+1\n for i in range(1,n-o+1):\n  mini=mini+2**i\n maxi=maxi+t*(2**(r-1))\n for j in range(r-2,r-2-(n-t),-1):\n  maxi=maxi+2**j\n print(mini+o,maxi)", "for t in range(int(input())):\n n,l,r = map(int, input().split())\n max1 = [2**i for i in range(r)]\n if r < n:\n  ls = [max1[-1]]*(n-r)\n  max1.extend(ls)\n max1 = sum(max1)\n min1 = [2**i for i in range(l)]\n if l < n:\n  ls = [1]*(n-l)\n  min1.extend(ls)\n min1 = sum(min1)\n print(min1, max1)", "for _ in range(int(input())):\n n, l, r = map(int, input().split(\" \"))\n ans_min = ((2 ** l) - 1) + (n - l)\n ans_max = ((2 ** r) - 1) + (n - r) * (2 ** (r - 1))\n print(ans_min, ans_max)", "def solve(n,l,r):\n ans = [0,0]\n a, b = [], []\n \"\"\"if n==r and l==1:\n     ans[-1] = 2**n-1\n     ans[0] = n\n    else:\"\"\"\n x, c, z = 1, r, l\n while c>0:\n  a.append(x)\n  x = x*2\n  c -= 1\n x = 1\n while z>0:\n  b.append(x)\n  z -= 1\n  x *= 2\n ans[0] = sum(b)+min(b)*(n-l)\n ans[-1] = sum(a)+max(a)*(n-r)\n return ans\ndef __starting_point():\n t = int(input())\n while t>0:\n  t -= 1\n  n, l, r = list(map(int,input().split()))\n  a = solve(n,l,r)\n  print(*a,sep=\" \")\n\n__starting_point()", "def get_sum(k):\n if k == 1:\n  return 1\n \n return 2**(k-1) + get_sum(k-1)\n\n\nt = int(input())\n\nfor _ in range(t):\n\n n, l, r = map(int, input().split())\n\n minimum = (n - l) + get_sum(l)\n maximum = get_sum(r) + (n - r) * int(2**(r - 1))\n\n print('{} {}'.format(minimum, maximum))", "minm = 0\nmaxm = 0\nminmlist = []\nmaxmlist = []\nt = int(input())\nfor _ in range(t):\n n,l,r = map(int,input().split())\n for i in range(l):\n  a = 2**(i)\n  minm+=a\n minm+=n-l\n for j in range(r):\n  b = 2**(j)\n  maxm+=b\n maxm+=(n-r)*(2**(r-1))\n minmlist.append(minm)\n maxmlist.append(maxm)\n #print(minm,maxm)\n minm=0\n maxm=0\nfor k in range(t):\n print(minmlist[k],maxmlist[k])", "for _ in range(int(input())):\n n,l,r =list(map(int,input().split()))\n temp =[1]\n temp1=[1]\n t=1\n m= 1\n count =1\n for i in range(n-1):\n  if count < l:\n   m = m*2\n   temp.append(m)\n  else :\n   temp.append(1)\n  if count < r:\n   t = t*2\n   temp1.append(t)\n  else:\n   temp1.append(max(temp1))\n  count=count+1\n print(sum(temp),sum(temp1))\n #print(temp , temp1)\n  \n", "# cook your dish here\nnum=[]\nfor i in range(20):\n  num.append(2**i)\nfor _ in range(int(input())):\n  n,l,r=list(map(int,input().split()))\n  minset=num[:l]\n  maxset=num[:r]\n  ans1=0\n  ans2=0\n  ml=len(minset)\n  mal=len(maxset)\n  ans1=sum(minset)+(n-ml)*minset[0]\n  ans2=sum(maxset)+(n-mal)*maxset[-1]\n  \n  print(ans1,ans2)\n"]