["\nx = int(input())\ny = list(map(int, input().split(' ')))\n\ny[0] = 1\ny[x-1] = 1\n\nz = y[:]\nfor i in range(1, x):\n    z[i] = min(z[i], z[i-1] + 1)\n\nw = y[:]\nfor i in range(x-2, -1, -1):\n    w[i] = min(w[i], w[i+1]+1)\n\nans = 0\nfor i in range(x):\n    ans = max(ans, min(z[i], w[i]))\n\nprint(ans)\n", "input()\nl, r = [0], [0]\nfor a, b in (lambda a: list(zip(a, reversed(a))))([0] + list(map(int, input().split())) + [0]):\n    l.append(min(a, l[-1] + 1))\n    r.append(min(b, r[-1] + 1))\nprint(max(list(map(min, list(zip(l[1:], reversed(r[1:])))))))\n", "#CLown1331 -_-\nn = int(input())\nar = list(map(int,input().split()))\nr = []\nl = []\nday = 0\nfor i in ar:\n    day += 1\n    day = min(i,day)\n    l.append(day)\nday = 0\nfor i in reversed(ar):\n    day += 1\n    day = min(i,day)\n    r.append(day)\nans = 0\nx = 0\nrh = list(reversed(r))\nwhile x < n:\n    ans = max(ans,min(rh[x],l[x]))\n    x += 1\nprint (ans)", "#CLown1331 -_-\nn = int(input())\nar = list(map(int,input().split()))\nr = []\nl = []\nday = 0\nfor i in ar:\n    day += 1\n    day = min(i,day)\n    l.append(day)\nday = 0\nfor i in reversed(ar):\n    day += 1\n    day = min(i,day)\n    r.append(day)\nans = 0\nx = 0\nrh = list(reversed(r))\nwhile x < n:\n    ans = max(ans,min(rh[x],l[x]))\n    x += 1\nprint (ans)", "#CLown1331 -_-\nn = int(input())\nar = list(map(int,input().split()))\nr = []\nl = []\nday = 0\nfor i in ar:\n    day += 1\n    day = min(i,day)\n    l.append(day)\nday = 0\nfor i in reversed(ar):\n    day += 1\n    day = min(i,day)\n    r.append(day)\nans = 0\nx = 0\nkk = n-1\nwhile x < n:\n    ans = max(ans,min(r[kk],l[x]))\n    x += 1\n    kk -= 1\nprint (ans)", "\nimport sys\ntry:\n    while True:\n        n = int(input())\n        height = list(map(int, input().split(\" \")))\n        L = [0 for i in range(100001)]\n        R = [0 for i in range(100001)]\n        for i in range(n):\n            L[i+1] = min(L[i]+1, height[i])\n        for i in range(n-1, -1, -1):\n            R[i] = min(R[i+1]+1, height[i])\n        ans = 0\n        for i in range(1, n+1):\n            ans = max(ans, min(R[i-1], L[i]))\n        print(ans)\nexcept EOFError:\n    pass", "def main():\n    input()\n    hh = list(map(int, input().split()))\n    for f in True, False:\n        m = 1\n        for i, h in enumerate(hh):\n            if h > m:\n                hh[i] = m\n            else:\n                m = h\n            m += 1\n        if f:\n            hh.reverse()\n    print(max(hh))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "input()\ndef f(l):\n    c = [0]*len(l)\n    c[0] = c[len(c) - 1] = 9999999\n    for item in range(1, len(l) - 1):\n        c[item] = min(item, l[item], c[item - 1] + 1)\n    for item in reversed(list(range(1, len(l) - 1))):\n        c[item] = min(c[item], len(l) - 2 + 1 - item, c[item + 1] + 1)\n\n    return max(c[1:-1])\n\nprint(f([0] + list(map(int, input().split())) + [0]))\n\n", "from sys import stdin as si\nfrom collections import Counter as c\n\n\nclass Solution:\n\n    def bazinga(self,n ,m):\n        m[0]=1\n        for i in range(1,n-1):\n            m[i] = min(m[i - 1]+1, m[i], i + 1)\n        m[n-1]=1\n        for i in range(n - 2, -1, -1):\n            m[i] = min(m[i], m[i + 1] +1)\n\n        return(max(m))\n\n\ndef __starting_point():\n    #for i in range(int(si.readline().strip())):\n    n = int(si.readline().strip())\n    #n,m = map(int, si.readline().strip().split())\n    m = list(map(int, si.readline().strip().split()))\n    S = Solution()\n    print(S.bazinga(n,m))\n\n\n'''\nhttp://codeforces.com/contest/573/problem/B\n'''\n__starting_point()", "R = lambda: map(int, input().split())\n\nn = int(input())\narr = [-1] + list(R()) + [-1]\ndpl, dpr = arr[:], arr[:]\nfor i in range(1, n + 1):\n    dpl[i] = max(0, min(dpl[i - 1] + 1, arr[i] - 1))\nfor i in range(n, 0, -1):\n    dpr[i] = max(0, min(dpr[i + 1] + 1, arr[i] - 1))\nprint(1 + max(min(l, r) for l, r in zip(dpl, dpr)))", "n = (int)(input())\n\nh = list(map(int,input().split()))\n\ndp = []\n\ndp.append(1)\n\nfor i in range(1,n-1,1):\n\n    dp.append(min(dp[i-1]+1,h[i]))\n\ndp.append(1)\n\nfor i in range(n-2,0,-1):\n\n    dp[i]=min(dp[i],dp[i+1]+1)\n\nmx=-1\n\nfor i in range(n):\n\n    mx=max(mx,dp[i])\n\nprint(mx)\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "def powmod(x, p, m):\n\tif p <= 0:\n\t\treturn 1\n\tif p <= 1:\n\t\treturn x%m\n\treturn powmod(x*x%m, p//2, m) * (x%m)**(p%2) % m\n\n###\n\nn = int(input())\n#print(n)\nh = [0] + [int(x) for x in input().split()] + [0]\n#print(h)\n\nfor i in range(1, len(h)):\n\th[i] = min(h[i], h[i-1]+1)\n\th[-i-1] = min(h[-i-1], h[-i]+1)\n\n#print(h)\nans = max(h)\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "\nn = int(input())\na = [int(x) for x in input().split()]\n\na[0] = 1\na[-1] = 1\nfor i in range(1,n):\n    a[i] = min(a[i],a[i-1]+1)\n    a[-i] = min(a[-i],a[-(i-1)]+1)\n\nprint(max(a))\n\n", "n = int(input())\na = [int(x) for x in input().split()]\n \na[0] = 1\na[-1] = 1\n\nfor i in range(1, n):\n    a[i] = min(a[i], a[i-1]+1)\n    a[-i] = min(a[-i], a[-(i-1)]+1)\n \nprint(max(a))", "# -*- coding:utf-8 -*-\n\n\"\"\"\n\ncreated by shuangquan.huang at 1/9/20\n\n\"\"\"\n\nimport collections\nimport time\nimport os\nimport sys\nimport bisect\nimport heapq\nfrom typing import List\n\n\ndef check(H, N, K):\n    for i in range(K+1, N-K+1):\n        h = H[i]\n        for j in range(K+1):\n            if h <= 0:\n                break\n            if i - j >= 0:\n                h = min(h, H[i-j] - (K - j))\n            if i + j <= N:\n                h = min(h, H[i + j] - (K - j))\n        if h > 0:\n            return False\n    return True\n\n\ndef solve2(N, A):\n    A = [0] + A + [0]\n    lo, hi = 0, N // 2 + 1\n    while lo <= hi:\n        k = (lo + hi) // 2\n        if check(A, N, k):\n            hi = k - 1\n        else:\n            lo = k + 1\n    return lo\n    \n\ndef solve(N, A):\n    A = [0] + A + [0]\n    H = [N] * (N+2)\n    H[0] = H[-1] = 0\n    worst = 0\n    for i in range(1, N+1):\n        worst = min(worst, A[i] - i)\n        H[i] = i + worst\n        # k = min([A[i-j] + j for j in range(i+1)])\n        # H[i] = min(H[i], k)\n    worst = N+1\n    for i in range(N, 0, -1):\n        worst = min(worst, A[i] + i)\n        H[i] = min(H[i], worst - i)\n        # k = min([A[i+j] + j for j in range(N-i+1)])\n        # H[i] = min(H[i], k)\n    # print(H)\n    return max(H)\n    \n    \n    \n\n# import random\n# N = 10 ** 5\n# A = [random.randint(0, 10**9) for _ in range(N)]\n# t0 = time.time()\n# print('starting...')\n# solve(N, A)\n# print(time.time() - t0)\n# N = 10**5\n# A = [i+1 for i in range(N)] + [N+1] + [N-i for i in range(N)]\n# t0 = time.time()\n# print(solve(2*N+1, A))\n# print(time.time() - t0)\n\nN = int(input())\nA = [int(x) for x in input().split()]\nprint(solve(N, A))", "from pprint import pprint\nimport sys\n#sys.setrecursionlimit(100000)\ninput = sys.stdin.readline\n\nn = int(input())\ndat = list(map(int, input().split()))\n\ndatl = [-1] * n\ndatr = [-1] * n\nres = [-1] * n\nfor i in range(n):\n    datl[i] = min(i + 1, dat[i])\n    if i > 0:\n        datl[i] = min(datl[i], datl[i - 1] + 1)\n\nfor i in range(n):\n    datr[n-1-i] = min(i + 1, dat[n-1-i] )\n    if i > 0:\n        datr[n - 1 - i] = min(datr[n - 1 - i], datr[n - 1 - i + 1] + 1)\n\nfor i in range(n):\n    res[i] = min(datl[i], datr[i])\n\nprint(max(res))\n", "from pprint import pprint\nimport sys\n#sys.setrecursionlimit(100000)\ninput = sys.stdin.readline\n\nn = int(input())\ndat = list(map(int, input().split()))\n\ndatl = [-1] * n\ndatr = [-1] * n\nres = [-1] * n\nfor i in range(n):\n    datl[i] = min(i + 1, dat[i])\n    if i > 0:\n        datl[i] = min(datl[i], datl[i - 1] + 1)\n\nfor i in range(n):\n    datr[n-1-i] = min(i + 1, dat[n-1-i] )\n    if i > 0:\n        datr[n - 1 - i] = min(datr[n - 1 - i], datr[n - 1 - i + 1] + 1)\n\nfor i in range(n):\n    res[i] = min(datl[i], datr[i])\n\nprint(max(res))\n\n", "def main():\n    n = int(input())\n    hts = list(map(int,input().split()))\n    dpleft = [1]\n    for i in range(1,n):\n        dpleft.append(min(hts[i],dpleft[-1]+1))\n\n    hts.reverse()\n    dpright = [1]\n    for i in range(1,n):\n        dpright.append(min(hts[i],dpright[-1]+1))\n\n    dpright.reverse()\n    ans = 0\n    for i in range(n):\n        ans = max(ans,min(dpleft[i],dpright[i]))\n\n    print(ans)\n\nmain()\n", " \nn = int(input())\na = [int(x) for x in input().split()]\n \na[0] = 1\na[-1] = 1\nfor i in range(1,n):\n    a[i] = min(a[i],a[i-1]+1)\n    a[-i] = min(a[-i],a[-(i-1)]+1)\n \nprint(max(a))\n", "from math import inf\nn = int(input())\nl = [int(i) for i in input().split()]\nl.append(0)\nl.insert(0,0)\nminus = [v-i for i,v in enumerate(l)]\nplus  = [v+i for i,v in enumerate(l)]\n\nlminus,rplus = [minus[0]],[plus[-1]]\nfor i in range(1,n+1):\n    lminus.append(min(lminus[-1],minus[i]))\nlminus.append(inf)\n\nfor i in range(n, 0, -1):\n    rplus.append( min(rplus[-1], plus[i]))\nrplus.append(inf)\nrplus.reverse()\nm = 0\n\nfor i in range(1, n+1):\n    x  = min(lminus[i]+i, rplus[i]-i)\n    m = max(m, x)\nprint(m)"]