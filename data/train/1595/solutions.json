["import itertools\nimport numpy as np\nb = np.zeros((100001), dtype=np.int)\ndef power2(a):\n\tb[0] = 1\n\tif b[a] > 0:\n\t\treturn b[a]\n\telse:\n\t\tfor i in range(1,a+1):\n\n\t\t\tb[i] = b[i-1]*2\n\t\t\tif b[i] > (10**9+7):\n\t\t\t\tb[i] = b[i]%(10**9+7)\n\t\treturn b[a]\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tcount = 0\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\tif a[p] == 0:\n\t\t\t\tcount = count+1\n\t\t\ta[p] = a[p]+1\n\t\tcount_2 = 0\n\n\n\t\t#print a\n\t\t\t\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tcount_2 = count_2 + 1\n\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\tl = power2(a[j-1]-1)\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * l )%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\tif count_2 == count:\n\t\t\t\t\tbreak\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[j,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n__starting_point()", "t = eval(input())\nMOD = 1000000007\ntemp = [0]*1025\nfor xx in range(0,t):\n    inp = input()\n    n = eval(input())\n    ct = [0]*1025\n    ans = [0]*1025\n    while(n):\n        s = input()\n        m = 0\n        j = 9\n        c = 1\n        while(j >= 0):\n            if(s[j]=='+'):\n                m |= c\n            c <<= 1\n            j -= 1\n        ct[m] += 1\n        n -= 1\n\n    for i in range(0,1024):\n        m = i\n        c = ct[i]\n        while(c):\n            for j in range(0,1024):\n                temp[j] = ans[m^j]\n            temp[m] += 1\n            for j in range(0,1024):\n                ans[j] += temp[j]\n                if(ans[j] > 100000000000000000):\n                    ans[j] %= MOD\n            c -= 1\n    \n    ans[0] += 1\n    s = []\n    for i in range(0,10):\n        if(inp[i] == 'b'):\n            s.append('-')\n        else:\n            s.append('+')\n    m = 0\n    j = 9\n    c = 1\n    while(j >= 0):\n        if(s[j]=='+'):\n            m |= c\n        c <<= 1\n        j -= 1\n    print(ans[m]%MOD)\n", "t = eval(input())\nMOD = 1000000007\ntemp = [0]*1025\nfor xx in range(0,t):\n    inp = input()\n    n = eval(input())\n    ct = [0]*1025\n    ans = [0]*1025\n    while(n):\n        s = input()\n        m = 0\n        j = 9\n        c = 1\n        while(j >= 0):\n            if(s[j]=='+'):\n                m |= c\n            c <<= 1\n            j -= 1\n        ct[m] += 1\n        n -= 1\n\n    for i in range(0,1024):\n        m = i\n        c = ct[i]\n        while(c):\n            for j in range(0,1024):\n                temp[j] = ans[m^j]\n            temp[m] += 1\n            for j in range(0,1024):\n                ans[j] += temp[j]\n                if(ans[j] > 100000000000000000):\n                    ans[j] %= MOD\n            c -= 1\n    \n    ans[0] += 1\n    s = []\n    for i in range(0,10):\n        if(inp[i] == 'b'):\n            s.append('-')\n        else:\n            s.append('+')\n    m = 0\n    j = 9\n    c = 1\n    while(j >= 0):\n        if(s[j]=='+'):\n            m |= c\n        c <<= 1\n        j -= 1\n    print(ans[m])\n", "from collections import defaultdict\nimport operator\n\nfor i in range(int(input())):\n    s=input()\n    s=s.replace('b','1')\n    s=s.replace('w','0')\n    compare=int(s,2)\n\n    n=int(input())\n    List=[]\n    for i in range(n):\n        bin=input()\n        bin=bin.replace('+','1')\n        bin=bin.replace('-','0')\n        num=int(bin,2)\n        List.append(num)\n    \n    length=int(2**n)\n    count=int(0)\n    i=j=int(0)\n    for i in range(length):\n         x=0;\n         for j in range(0,n):\n                 if i&(1<<j)>0:\n                        x=operator.xor(x,List[j])\n         \n         if(operator.xor(x,compare)==1023):\n                count+=1\n         \n    print(count)\n  \n       \n    \n            \n                \n            \n    \n    \n    \n    ", "from collections import defaultdict\nimport operator\n\nfor i in range(int(input())):\n    s=input()\n    s=s.replace('b','1')\n    s=s.replace('w','0')\n    compare=int(s,2)\n\n    n=int(input())\n    List=[]\n    for i in range(n):\n        bin=input()\n        bin=bin.replace('+','1')\n        bin=bin.replace('-','0')\n        num=int(bin,2)\n        List.append(num)\n    \n    length=2**n\n    count=0\n    for i in range(length):\n         x=0;\n         for j in range(0,n):\n                 if i&(1<<j)>0:\n                        x=operator.xor(x,List[j])\n         \n         if(operator.xor(x,compare)==1023):\n                count+=1\n         \n    print(count)\n  \n       \n    \n            \n                \n            \n    \n    \n    \n    ", "import itertools\nimport numpy as np\nb = np.zeros((1024), dtype=np.int)\ndef power2(a):\n\tb[0] = 1\n\tif b[a] > 0:\n\t\treturn b[a]\n\telse:\n\t\tfor i in range(1,a+1):\n\n\t\t\tb[i] = b[i-1]*2\n\t\t\tif b[i] > (10**9+7):\n\t\t\t\tb[i] = b[i]%(10**9+7)\n\t\treturn b[a]\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tcount = 0\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\tif a[p] == 0:\n\t\t\t\tcount = count+1\n\t\t\ta[p] = a[p]+1\n\t\tcount_2 = 0\n\n\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tcount_2 = count_2 + 1\n\t\t\t\tl = power2(a[j-1]-1)\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * l )%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\tif count_2 == count:\n\t\t\t\t\tbreak\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[j,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\nb = np.zeros((1024), dtype=np.int)\ndef power2(a):\n\tb[0] = 1\n\tif b[a] > 0:\n\t\treturn b[a]\n\telse:\n\t\tfor i in range(1,a+1):\n\n\t\t\tb[i] = b[i-1]*2\n\t\t\tif b[i] > (10**9+7):\n\t\t\t\tb[i] = b[i]%(10**9+7)\n\t\treturn b[a]\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tcount = 0\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\tif a[p] == 0:\n\t\t\t\tcount = count+1\n\t\t\ta[p] = a[p]+1\n\t\tcount_2 = 0\n\n\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tcount_2 = count_2 + 1\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * power2(a[j-1]-1))%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\tif count_2 == count:\n\t\t\t\t\tbreak\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[j,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\ndef power2(a):\n\tsum_1 = 1\n\tfor i in range(1,a+1):\n\t\tsum_1 = sum_1 * 2\n\t\tif sum_1 > 10**9+7:\n\t\t\tsum_1 = sum_1 % (10**9+7)\n\treturn sum_1\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tcount = 0\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\tif a[p] == 0:\n\t\t\t\tcount = count+1\n\t\t\ta[p] = a[p]+1\n\t\tcount_2 = 0\n\n\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tcount_2 = count_2 + 1\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * power2(a[j-1]-1))%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\tif count_2 == count:\n\t\t\t\t\tbreak\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[j,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\ndef power2(a):\n\tsum_1 = 1\n\tfor i in range(1,a+1):\n\t\tsum_1 = sum_1 * 2\n\t\tif sum_1 > 10**9+7:\n\t\t\tsum_1 = sum_1 % (10**9+7)\n\treturn sum_1\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\ta[p] = a[p]+1\n\n\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int64)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * power2(a[j-1]-1))%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[1024,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\ndef power2(a):\n\tsum_1 = 1\n\tfor i in range(1,a+1):\n\t\tsum_1 = sum_1 * 2\n\t\tif sum_1 > 10**9+7:\n\t\t\tsum_1 = sum_1 % (10**9+7)\n\treturn sum_1\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tif n < 1024:\n\t\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\ta[p] = a[p]+1\n\n\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * power2(a[j-1]-1))%(10**9+7)\n\t\t\t\t\telif dp[j-1][k] > 0:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[1024,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\n\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\ta[p] = a[p]+1\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = ((dp[j-1][k] + dp[j-1][k^(j-1)]) * (2**(a[j-1] - 1)))%(10**9+7)\n\t\t\t\t\telse:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[1024,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\n\t\ta = np.zeros((1024), dtype=np.int)\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\n\t\t\tbin_list.append(s1)\n\t\t\tp = int(s1,2)\n\t\t\ta[p] = a[p]+1\n\t\t#print a\n\t\t\t\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\t\tif n < 1024:\n\t\t\tdp = np.zeros((n+1,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,n+1):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\n\t\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[n,p]%(10**9+7))\n\n\t\telse:\n\n\t\t\tdp = np.zeros((1025,1024) ,dtype=np.int)\n\t\t\tdp[0,0] = 1\n\t\t\tfor j in range(1,1025):\n\t\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\t\tif a[j-1] > 0:\n\t\t\t\t\t\tdp[j,k] = (((dp[j-1][k] + dp[j-1][k^(j-1)])%(10**9+7)) * (2**(a[j-1] - 1)))%(10**9+7)\n\t\t\t\t\telse:\n\t\t\t\t\t\tdp[j,k] = dp[j-1][k]\n\n\t\t\t\t#print dp\n\t\t\tp = 1023 ^ int(inp,2)\n\n\t\t\tprint(dp[1024,p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "import itertools\nimport numpy as np\n\n# def countBits(p1):\n# \tcount = 0\n# \tp2 = p1\n# \twhile p2:\n# \t\tp2 = p2 & (p2-1)\n# \t\tcount = count + 1\n# \tp = '{0:b}'.format(p1)\n# \tif count == len(p):\n# \t\treturn True\n# \telse:\n# \t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tbin_list.append(s1)\n\t\t#print bin_list\n\t\t# lst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t# #print lst\n\t\t# count = 0\n\t\t# for j in xrange(len(lst)):\n\t\t# \tp = \"0\"*n\n\t\t# \tfor k in xrange(len(lst[j])):\n\t\t# \t\tif lst[j][k]==1:\n\t\t# \t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t# \t\t\tp = '{0:b}'.format(p1)\n\t\t# \t\t\t#print p\n\t\t# \tp2 = int(p,2) ^ int(inp,2)\n\t\t# \t#print '{0:b}'.format(p2)+\"#\"\n\t\t# \tif p2 == (2**len(s)) - 1:\n\t\t# \t\tcount = (count+1)%(10**9+7)\n\t\t# print count%(10**9 + 7)\n\n\t\tdp = np.zeros((n+1,1024) ,dtype=np.int)\n\t\tdp[0,0] = 1\n\t\tfor j in range(1,n+1):\n\t\t\tfor k in range(1024):\n\t\t\t\t#print j-1\n\t\t\t\t#print k^int(bin_list[j-1],2)\n\t\t\t\tdp[j,k] = (dp[j-1][k] + dp[j-1][k^int(bin_list[j-1],2)])%(10**9+7)\n\n\t\tp = 1023 ^ int(inp,2)\n\n\t\tprint(dp[n][p]%(10**9+7))\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "def ct(string):\n\ti = 0\n\tnum = 0\n\twhile( i < 10):\n\t\tnum *= 2\n\t\tif(string[i] == 'w'):\n\t\t\tnum += 1\n\t\ti += 1\n\treturn num\n\t\ndef convert(string):\n\ti = 0\n\tnum = 0\n\twhile( i < 10):\n\t\tnum *= 2\n\t\tif(string[i] == '+'):\n\t\t\tnum += 1\n\t\ti += 1\n\treturn num\n\nt = int(input())\nwhile(t > 0):\n\tpic = input()\n\tm = ct(pic)\n\ttab = {m : 1}\n\tn = int(input())\n\t\n\twhile(n > 0):\n\t\tfiltr = input()\n\t\tnum = convert(filtr)\n\t\tk = list(tab.keys())\n\t\tnewtab = tab.copy()\n\t\t\n\t\tfor i in k:\n\t\t\tvalue = tab[i]\n\t\t\tnew = num ^ i\n\t\t\tz = tab.get(new,0)\n\t\t\tif(z > 10000000 or value > 10000000):\n\t\t\t\tnewtab[new] = (z + value) % 1000000007\n\t\t\telse:\n\t\t\t\tnewtab[new] = (z + value)\n\t\tn -= 1\n\t\ttab = newtab.copy()\n\tprint(str(tab.get(0,0)))\t\t\n\tt -= 1\n\t", "def ct(string):\n\ti = 0\n\tl = len(string)\n\tnum = 0\n\twhile( i < l):\n\t\tnum *= 2\n\t\tif(string[i] == 'w'):\n\t\t\tnum += 1\n\t\ti += 1\n\treturn num\n\t\ndef convert(string):\n\ti = 0\n\tl = len(string)\n\tnum = 0\n\twhile( i < l):\n\t\tnum *= 2\n\t\tif(string[i] == '+'):\n\t\t\tnum += 1\n\t\ti += 1\n\treturn num\n\nt = int(input())\nwhile(t > 0):\n\tpic = input()\n\tm = ct(pic)\n\ttab = {m : 1}\n\tn = int(input())\n\t\n\twhile(n > 0):\n\t\tfiltr = input()\n\t\tnum = convert(filtr)\n\t\tk = list(tab.keys())\n\t\tnewtab = tab.copy()\n\t\t\n\t\tfor i in k:\n\t\t\tvalue = tab[i]\n\t\t\tnew = num ^ i\n\t\t\tnewtab[new] = (tab.get(new,0) + value) % 1000000007\n\t\tn -= 1\n\t\ttab = newtab.copy()\n\tprint(str(tab.get(0,0)))\t\t\n\tt -= 1\n\t", "import itertools\n\ndef powerset(f,n):\n\tlst = []\n\tfor i in range(1,n+1):\n\t\tlst.append(list(itertools.combinations(f,i)))\n\treturn lst\n\ndef read():\n\treturn input()\n\ndef add(s,f):\n\tresult = ''\n\t# print 'adding '+s+' and '+f+' results in ',\n\tfor i in range(len(s)):\n\t\tif s[i]=='+' and f[i]=='+':\n\t\t\tresult+='-'\n\t\telif s[i]=='+' or f[i]=='+':\n\t\t\tresult+='+'\n\t\telse:\n\t\t\tresult+='-'\n\t# print result\n\treturn result\n\ndef resultfilter(f):\n\tresult = f[0]\n\tif len(f)==1:\n\t\treturn result\n\tfor item in f[1:]:\n\t\tresult = add(result,item)\n\treturn result\n\ndef getRequired(s):\n\tf = ''\n\tfor i in range(len(s)):\n\t\tif s[i]=='b':\n\t\t\tf+='-'\n\t\telse:\n\t\t\tf+='+'\n\treturn f\n\nfor t in range(int(read())):\n\ts = read()\n\tif 'w' in s:\n\t\tcount = 0\n\telse:\n\t\tcount = 1\n\trequiredF = getRequired(s)\n\t# print 'required '+requiredF\n\tn = int(read())\n\tf = []\n\tfor i in range(n):\n\t\tf.append(read())\n\ty = powerset(f,n)\n\tfor item in y:\n\t\tfor temp in item:\n\t\t\t# print temp\n\t\t\toutput = resultfilter(temp)\n\t\t\t# print output\n\t\t\t# print output==requiredF\n\t\t\tif output == requiredF:\n\t\t\t\t# print 'Increasing count'\n\t\t\t\tcount+=1\n\tprint(count%1000000007)", "import itertools\nimport numpy as np\n\ndef countBits(p1):\n\tcount = 0\n\tp2 = p1\n\twhile p2:\n\t\tp2 = p2 & (p2-1)\n\t\tcount = count + 1\n\tp = '{0:b}'.format(p1)\n\tif count == len(p):\n\t\treturn True\n\telse:\n\t\treturn False\n\n\ndef __starting_point():\n\tt = eval(input())\n\tfor i in range(t):\n\t\ts = input()\n\t\tn = eval(input())\n\t\tf_list = []\n\t\tfor j in range(n):\n\t\t\tf_list.append(input())\n\t\tinp = \"\"\n\t\tbin_list = []\n\t\tfor j in range(len(s)):\n\t\t\tif s[j] == 'w':\n\t\t\t\tinp = inp + '0'\n\t\t\telse:\n\t\t\t\tinp = inp + '1'\n\t\t#print inp\n\t\tfor j in range(n):\n\t\t\ts1 = \"\"\n\t\t\tfor k in range(len(f_list[j])):\n\t\t\t\tif f_list[j][k]=='+':\n\t\t\t\t\ts1 = s1 + '1'\n\t\t\t\telse:\n\t\t\t\t\ts1 = s1 + '0'\n\t\t\tbin_list.append(s1)\n\t\t#print bin_list\n\t\tlst  = [list(k) for k in itertools.product([0,1], repeat=n)]\n\t\t#print lst\n\t\tcount = 0\n\t\tfor j in range(len(lst)):\n\t\t\tp = \"0\"*n\n\t\t\tfor k in range(len(lst[j])):\n\t\t\t\tif lst[j][k]==1:\n\t\t\t\t\tp1 = int(p,2) ^ int(bin_list[k],2)\n\t\t\t\t\tp = '{0:b}'.format(p1)\n\t\t\t\t\t#print p\n\t\t\tp2 = int(p,2) ^ int(inp,2)\n\t\t\t#print '{0:b}'.format(p2)+\"#\"\n\t\t\tif p2 == (2**len(s)) - 1:\n\t\t\t\tcount = (count+1)%(10**9+7)\n\t\tprint(count%(10**9 + 7))\n\n\t\t# dp = np.zeros((n,1024))\n\t\t# dp[0,0] = 1\n\t\t# for j in range(1,n):\n\t\t# \tfor k in xrange(1024):\n\t\t# \t\tdp[j,k] = max(dp[j-1][k], dp[j-1][j^int(inp,2)])\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "def bw(s):\n    t=[]\n    for i in s:\n        if i=='b':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef pm(s):\n    t=[]\n    for i in s:\n        if i=='-':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef inp(n):\n    t=[]\n    for i in range(n):\n        s=input()\n        t.append(pm(s))\n    return t\ndef f(n,k,s):\n    dp=[[0 for i in range(1024)] for i in range(n+1)]\n    dp[0][0]=1\n    for i in range(1,n+1):\n        for j in range(1024):\n            dp[i][j]=dp[i-1][j]+dp[i-1][j^s[i-1]]\n    return dp[n][k]%((10**9)+7)\nt=int(input())\nfor i in range(t):\n    k=bw(input())\n    n=int(input())\n    print(f(n,k,inp(n)))", "def bw(s):\n    t=[]\n    for i in s:\n        if i=='b':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef pm(s):\n    t=[]\n    for i in s:\n        if i=='-':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef inp(n):\n    t=[]\n    for i in range(n):\n        s=input()\n        t.append(pm(s))\n    return t\ndef f(n,k,s):\n    dp=[[0 for i in range(1024)] for i in range(n+1)]\n    dp[0][0]=1\n    for i in range(1,n+1):\n        for j in range(1024):\n            dp[i][j]=dp[i-1][j]+dp[i-1][j^s[i-1]]\n            if dp[i][j]>1023:\n                dp[i][j]-=1023\n    return dp[n][k]\nt=int(input())\nfor i in range(t):\n    k=bw(input())\n    n=int(input())\n    print(f(n,k,inp(n)))", "def bw(s):\n    t=[]\n    for i in s:\n        if i=='b':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef pm(s):\n    t=[]\n    for i in s:\n        if i=='-':\n            t.append('0')\n        else:\n            t.append('1')\n    return int(''.join(str(i) for i in t),2)\ndef inp(n):\n    t=[]\n    for i in range(n):\n        s=input()\n        t.append(pm(s))\n    return t\ndef f(n,k,s):\n    dp=[[0 for i in range(1024)] for i in range(n+1)]\n    dp[0][0]=1\n    for i in range(1,n+1):\n        for j in range(1024):\n            dp[i][j]=dp[i-1][j]+dp[i-1][j^s[i-1]]\n    return dp[n][k]\nt=int(input())\nfor i in range(t):\n    k=bw(input())\n    n=int(input())\n    print(f(n,k,inp(n)))", "\n\nimport fractions\nimport sys\n\nimport pprint\n\nf = sys.stdin\n\nif len(sys.argv) > 1:\n    f = open(sys.argv[1], \"rt\")\n\nMOD = 10**9 + 7\nIMG_SPACE = 2**10\n\ndef str2num(s, one_char):\n    n = 0\n    for ch in s:\n        n = n << 1\n        if ch == one_char:\n            n = n | 1\n    return n\n\ndef img2num(img_str):\n    return str2num(img_str, 'w')\n\ndef flt2num(flt_str):\n    return str2num(flt_str, '+')\n\ndef calc(S, filters_str):\n    N = len(filters_str)\n    img_num = img2num(S)\n    filters_num = [flt2num(flt) for flt in filters_str]\n\n    counts = [[0] * IMG_SPACE for i in range(N)]\n\n    # init\n    row = counts[N - 1]\n    for i in range(IMG_SPACE):\n        n = 0\n        if i == 0:\n            n += 1\n        if i ^ filters_num[N-1] == 0:\n            n += 1\n        row[i] = n\n\n    # pass\n    for j in range(N-2, -1, -1):\n        row = counts[j]\n        next_row = counts[j + 1]\n        for i in range(IMG_SPACE):\n            row[i] = (next_row[i] + next_row[i ^ filters_num[j]]) % MOD\n\n    #~ pprint.pprint(counts)\n\n    return counts[0][img_num]\n\nT = int(f.readline().strip())\n\nfor case_id in range(1, T+1):\n    S = f.readline().strip()\n    N = int(f.readline().strip())\n    filters = []\n    for i in range(N):\n        filters.append(f.readline().strip())\n\n    r = calc(S, filters)\n\n    print(r)\n", "def evaluate(a, b):\n\tans = ''\n\tfor i in range(0, len(a)):\n\t\tif a[i] == b[i]:\n\t\t\tans += '-'\n\t\telse:\n\t\t\tans += '+'\n\treturn ans\n\ndef dp(p_bar, n, s):\n\tmod = 10**7 + 9\n\tif n == 0:\n\t\treturn 0\n\telif n == 1:\n\t\tk = 0\n\t\tif p_bar == s[0]:\n\t\t\tk += 1\n\t\tif p_bar == \"----------\":\n\t\t\tk += 1\n\t\treturn k\n\telse:\n\t\treturn (dp(p_bar, n-1, s)%mod + dp(evaluate(p_bar, s[n-1]), n-1, s))%mod\n\n\nt = int(input())\n\nfor i in range(0, t):\n\tp = input()\n\tn = int(input())\n\ts = []\n\tfor j in range(0, n):\n\t\ttemp = input()\n\t\ts.append(temp)\n\tp_bar = ''\n\tfor j in p:\n\t\tif j == 'w':\n\t\t\tp_bar += '+'\n\t\telse:\n\t\t\tp_bar += '-'\n\tprint(dp(p_bar, n, s))", "Author = \"Rahul_Arora\"\nDate = \"8/12/15\"\n\nimport sys\nfrom math import factorial as f\nt=eval(input())\nAuthor = \"Rahul_Arora\"\nDate = \"8/12/15\"\n\nMODULUS=10**9 + 7\nvariable=f(10)\nfor temp in range(t):\n    Author = \"Rahul_Arora\"\n    Date = \"8/12/15\"\n    s=input()\n    st=''\n    for i in s:\n        if i=='w':\n            st+='0'\n        else:\n            st+='1'\n    var=int(st,2)\n    check = 10000\n    variable=f(8)\n    n=list(map(int,sys.stdin.readline().split()))\n    n=n[0]\n    asp=n\n    li=[]\n    for k in range(n):\n        check += k\n        ss=list(map(str,sys.stdin.readline().split()))\n        ss=ss[0]\n        st=''\n        for i in ss:\n            if i=='+':\n                st+='1'\n            else:\n                st+='0'\n        variable=f(7)\n        li.append(int(st,2))\n    lii=set(li)\n    lii=list(lii)\n    my_list=lii[:]\n    asp=len(lii)\n    dp=[0]*1024\n    ANSWER=0\n    my_list=lii[:]\n    for i in range(asp):\n        vp=[0]*1024\n        check = check-i\n        j=0\n        while j<1024:\n            vp[j^lii[i]]+=dp[j]\n            j+=1\n        vp[lii[i]]+=1\n        j=0\n        my_list=lii[:]\n        while j<1024:\n            dp[j]+=vp[j]\n            j+=1\n    my_list=lii[:]\n    if var==1023:\n        ANSWER+=1\n        my_list=lii[:]\n    my_list=lii[:]\n    for i in range(1024):\n        if i^var==1023:\n            ANSWER+=dp[i]\n        i+=1\n    variable=f(10)\n    le=len(li)-len(set(li))\n    variable=f(10)\n    ANSWER=((ANSWER%MODULUS)*(pow(2,le,MODULUS)))\n    variable=f(10)\n    check = check*10/check\n    variable=f(10)\n    print(ANSWER%MODULUS)\nauthor='rahulxxarora'", "def filtera(p):\n    p = p.replace('w','1')\n    p = p.replace('b','0')\n    return p\ndef filtern(q):\n    q = q.replace('+','1')\n    q = q.replace('-','0')\n    return q\nmod = 10**9 + 7   \nfrom sys import stdin  \ninp = stdin.read().split() \nx = 0 \nfor _ in range(int(inp[x])):\n    x += 1\n    m = int(filtera(inp[x]),2)\n    x += 1\n    n = int(inp[x])\n    arr = []\n    for _ in range(n):\n        x += 1\n        k = int(filtern(inp[x]),2)\n        arr.append(k)\n    d = [[0]*(1025) for _ in range(2)]\n    d[0][0] = 1\n    for i in range(1,n + 1):\n         for j in range(1024):\n             d[i%2][j] = (d[(i - 1)%2][j] + d[(i - 1)%2][j ^ arr[i-1]]) % mod   \n    if n%2: \n       print(d[1][m] % mod)\n    else:\n       print(d[0][m] % mod)\n    \n"]