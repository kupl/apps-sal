["n = int(input())\n\na = list(map(int, input().split()))\n\nlp,rp = [0 for i in range(n)],[0 for i in range(n)]\nlnr, rnr = [a[i] for i in range(n)],[a[i] for i in range(n)]\nmx = a[0]\nfor i in range(1,n):\n    if a[i] > mx:\n        mx = a[i]\n        lp[i] = lp[i-1]\n    else:\n        mx += 1\n        lp[i] = lp[i-1] + mx - a[i]\n        lnr[i] = mx\n\nmx = a[-1]\nfor i in range(n-2,-1,-1):\n    if a[i] > mx:\n        mx = a[i]\n        rp[i] = rp[i+1]\n    else:\n        mx += 1\n        rp[i] = rp[i+1] + mx - a[i]\n        rnr[i] = mx\n        \nans = min(rp[0], lp[-1])\nfor i in range(1,n-1):\n    ca = lp[i-1] + rp[i+1]\n    if max(lnr[i-1], rnr[i+1]) + 1 > a[i]:\n        ca += max(lnr[i-1], rnr[i+1]) + 1 - a[i]\n    ans = min(ans, ca)\nprint(ans)", "n = int(input())\na = list(map(int,input().strip().split()))\nif n > 1:\n\tli = [0]*n\n\tri = [0]*n\n\tlm = a[0]\n\tc = [0]*n\n\tb = [0]*n\n\tb[0] = a[0]\n\tfor i in range(1,n):\n\t\tif lm >= a[i]:\n\t\t\tli[i] = li[i-1] + (lm+1-a[i])\n\t\t\tlm = lm+1\n\t\telse:\n\t\t\tli[i] = li[i-1]\n\t\t\tlm = a[i]\n\t\tb[i] = lm\n\tlm = a[n-1]\n\tc[n-1] = a[n-1]\n\tfor i in range(n-2,-1,-1):\n\t\tif lm >= a[i]:\n\t\t\tri[i] = ri[i+1] + (lm+1-a[i])\n\t\t\tlm = lm+1\n\t\telse:\n\t\t\tri[i] = ri[i+1]\n\t\t\tlm = a[i]\n\t\tc[i] = lm\n\tans = 1<<64\n\tfor i in range(n):\n\t\tif i == 0:\n\t\t\tans = min(ans,ri[i],ri[i+1])\n\t\telif i== n-1:\n\t\t\tans = min(ans,li[i],li[i-1])\n\t\telse:\n\t\t\tv1 = li[i] + ri[i+1]\n\t\t\tif b[i] == c[i+1]:\n\t\t\t\tv1 += 1\n\t\t\tv2 = ri[i] + li[i-1]\n\t\t\tif c[i] == b[i-1]:\n\t\t\t\tv2 +=1\n\t\t\tval = min(v1,v2)\n\t\t\tans = min(ans,val)\n\tprint(ans)\nelse:\n\tprint(0)\n", "import math\n\nn = int(input())\na = list(map(int, input().split()))\nmx = 0\ng = [0]*n\nr = [0]*n\n\nt1 = [0]*n\nt2 = [0]*n\n\nfor i in range(n):\n\tg[i] = max(0, mx-a[i]+1)\n\tmx = a[i] + g[i]\n\tt1[i] = mx\n\tif i > 0:\n\t\tg[i] += g[i-1]\n\nmx = 0\nfor i in range(n-1, -1, -1):\n\tr[i] = max(0, mx-a[i]+1)\n\tmx = a[i] + r[i]\n\tt2[i] = mx\n\tif i < n-1:\n\t\tr[i] += r[i+1]\n\nans = 10**18\nfor i in range(n):\n\tsum = max(t1[i], t2[i]) - a[i];\n\tif i > 0:\n\t\tsum += g[i-1]\n\tif i < n-1:\n\t\tsum += r[i+1]\t\n\tans = min(ans, sum)\t\nprint(ans)\n\n\n\n\n\n\n", "n = int(input())\nl = [int(i) for i in input().split(\" \")]\nl_up = l[:]\nl_down = l[::-1]\n\nfor i in range(n - 1):\n    if l_up[i+1] <= l_up[i]:\n        l_up[i+1] = l_up[i] + 1\nfor i in range(n - 1):\n    if l_down[i+1] <= l_down[i]:\n        l_down[i+1] = l_down[i] + 1\nl_down = l_down[::-1]\n\nindex = 0\nadd = False\nfor index in range(n-1):\n    if l_up[index] < l_down[index] and l_up[index+1] >= l_down[index+1]:\n        if l_up[index+1] == l_down[index+1]:\n            break\n        else:\n            add = True\n            break\n    if index == n-2:\n        index = 0\nif add == False:\n    l_final = l_up[:index+1] + l_down[index+1:]\n    result = sum(l_final) - sum(l)\nelse:\n    l_final = l_up[:index+1] + l_down[index+1:]\n    result = sum(l_final) - sum(l) + 1\n\n\n\n# print(index)\n# print(l_up)\n# print(l_down)\n# print(l_final)\nprint(result)\n", "n = int(input())\ndef get_cost(arr):\n    cost = [0,0]\n    last = arr[0]\n    for i in range(1,len(arr)):\n        cost.append(cost[-1] + max(0,last+1-arr[i]))\n        last = max(last+1,arr[i])\n    return cost\narr = list(map(int,input().split()))\nleft_cost, right_cost = get_cost(arr), get_cost(list(reversed(arr)))\nans = min(left_cost[n], right_cost[n])\nfor i in range(1,n-1):\n    ans = min(ans,max(left_cost[i]+right_cost[n-i],left_cost[i+1]+right_cost[n-i-1]))\nprint(ans)\n", "n = int(input())\nt = list(map(int, input().split()))\ns = a = b = 0\nfor i in range(n):\n    a = max(a, t[i] - i)\n    b = max(b, t[-1 - i] - i)\nx = (b - a + n) // 2 + 1\ny = 0\nfor i in range(x):\n    s += max(y - t[i], 0)\n    y = max(t[i], y) + 1\ny = 0\nfor i in range(n - x):\n    s += max(y - t[-1 - i], 0)\n    y = max(t[-1 - i], y) + 1\nprint(s)", "s, l, r = 0, 0, int(input()) - 1\nt = list(map(int, input().split()))\nwhile 1:\n    while l < r and t[l] < t[l + 1]: l += 1\n    while l < r and t[r] < t[r - 1]: r -= 1\n    if l == r: break\n    if t[l] < t[r]:\n        s += t[l] - t[l + 1] + 1\n        t[l + 1] = t[l] + 1\n    else:\n        s += t[r] - t[r - 1] + 1\n        t[r - 1] = t[r] + 1\nprint(s)", "n=int(input())\np=list(map(int,input().split()))\na=[0]*n\nt=0\nfor i in range(n):\n    if p[i]<=t:a[i]=t-p[i]+1\n    t=max(p[i],t+1)\nt=0\n#print(a)\nfor i in range(n-1,0,-1):\n    if p[i] <= t: a[i] = min(t - p[i] + 1,a[i])\n    else:a[i]=0\n    t = max(p[i], t + 1)\nf=0\nfor i in range(n):p[i]+=a[i];f|=i>1and p[i]==p[i-1]\nprint(sum(a[1:n-1])+f)", "n=int(input())\np=list(map(int,input().split()))\na=[0]*n\nt=s=f=0\nfor i in range(n):\n    if p[i]<=t:a[i]=t-p[i]+1\n    t=max(p[i],t+1)\nfor i in range(n-1,0,-1):\n    if p[i] <= s: a[i] = min(s - p[i] + 1,a[i])\n    else:a[i]=0\n    s = max(p[i], s + 1)\nfor i in range(n):p[i]+=a[i];f|=i>1and p[i]==p[i-1]\nprint(sum(a[:])+f)", "n = int(input())\narr = list(map(int, input().split()))\n\nstarts = [0 for _ in range(n)]\nends   = [0 for _ in range(n)]\n\nstarts[0] = arr[0]\nends[-1] = arr[-1]\n\nfor i in range(1, n):\n    starts[i] = max(arr[i], starts[i - 1] + 1)\n    ends[-i - 1] = max(arr[-i - 1], ends[-i] + 1)\n\nsts = starts[:]\neds = ends[:]\n\nfor i in range(n):\n    starts[i] -= arr[i]\n    ends[-i - 1] -= arr[-i - 1]\n\nfor i in range(1, n):\n    starts[i] += starts[i - 1]\n    ends[-i - 1] += ends[-i]\n\nbst = 10**30\n\nfor i in range(n):\n    score = max(sts[i], eds[i]) - arr[i]\n    \n    if i > 0:\n        score += starts[i - 1]\n    if i < n - 1:\n        score += ends[i + 1]\n    \n    bst = min(bst, score)\n\nprint(bst)", "n = int(input())\na = [0 for i in range(n)]\nb = [0 for i in range(n)]\nf = [0 for i in range(n)]\nq = [0 for i in range(n)]\nd = [int(s) for s in input().split()]\n\nlast = d[0]\nfor i in range(1,n):\n    a[i] = a[i-1]\n    if d[i] <= last:\n        a[i] += abs(d[i] - last) + 1 \n        last += 1\n    else:\n        last = d[i]\n    f[i] = last \n        \nlast = d[n-1]\nfor i in range(n-2,-1,-1):\n    b[i] = b[i+1]\n    if d[i] <= last:\n        b[i] += abs(d[i] - last) + 1\n        last +=1\n    else:\n        last = d[i]\n    q[i] = last \n    \nans = float('inf')        \nfor i in range(n-1):\n    ans = min(ans, a[i] + b[i+1] + int(f[i]==q[i+1]))\n\n\nprint(min(ans,b[0],a[n-1]))"]