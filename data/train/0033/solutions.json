["t=int(input())\nfor i in range(t):\n    n=int(input())\n    print(2)\n    print(n-1,n)\n    for i in range(n-2,0,-1):\n        print(i,i+2)", "for _ in range (int(input())):\n    n=int(input())\n    hold=n\n    res=[]\n    for i in range (n-1,0,-1):\n        res.append((hold,i))\n        hold=(hold+i+1)//2\n    print(hold)\n    for i in res:\n        print(*i)", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    print(2)\n    print(n-1, n)\n    for i in range(n-2):\n        print(n-2-i, n-i)", "import sys\nimport random\n# import numpy as np\nimport math\nimport copy\nfrom heapq import heappush, heappop, heapify\nfrom functools import cmp_to_key\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, Counter\n# sys.setrecursionlimit(1000000)\n# input aliases\ninput = sys.stdin.readline\ngetS = lambda: input().strip()\ngetN = lambda: int(input())\ngetList = lambda: list(map(int, input().split()))\ngetZList = lambda: [int(x) - 1 for x in input().split()]\n\nINF = float(\"inf\")\n\nMOD = 10 ** 9 + 7\ndivide = lambda x: pow(x, MOD-2, MOD)\n\ndef judge(at, ax, ay, bt, bx, by):\n    if abs(at - bt) >= abs(ax - bx) + abs(ay - by):\n        return True\n    else:\n        return False\n\n\ndef solve():\n    n = getN()\n    if n == 2:\n        print(2)\n        print(1, 2)\n        return\n\n    print(2)\n    print(n-2, n)\n    print(n-1, n-1)\n    for i in range(n-3):\n        print(n-1-i, n-3-i)\n    return\n\ndef main():\n    n = getN()\n    for _ in range(n):\n        solve()\n\n    return\ndef __starting_point():\n    main()\n    # solve()\n\n__starting_point()", "t=int(input())\nfor you in range(t):\n    n=int(input())\n    print(2)\n    l=[i+1 for i in range(n)]\n    for i in range(n-1):\n        print(l[-1],l[-2])\n        z=(l[-1]+l[-2]+1)//2\n        l.pop(-1)\n        l.pop(-1)\n        l.append(z)\n", "for _ in range(int(input())):\n    n = int(input())\n    k = n\n    print(2)\n    for i in range(n-1,0,-1):\n        print(i,k)\n        if (k+i)%2!= 0:\n            k = (k+i)//2 + 1\n        else:\n            k = (k+i)//2\n        \n", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    print(2)\n    if n == 2:\n        print(1,2)\n    else:\n        print(n,n-2)\n        print(n-1,n-1)\n        for j in range(n-3):\n            print(n-1-j,n-1-j-2)   ", "#dt = {} for i in x: dt[i] = dt.get(i,0)+1\nimport sys;input = sys.stdin.readline\n#import io,os; input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline #for pypy\ninp,ip = lambda :int(input()),lambda :[int(w) for w in input().split()]\n\nfor _ in range(inp()):\n    n = inp()\n    prev = n\n    print(2)\n    for i in range(n-1,0,-1):\n        print(i,prev)\n        prev = (i+prev-1)//2 +1", "T =  int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(range(1,N+1))\n    print(2)\n    while len(A) > 1:\n        a = A.pop()\n        b = A.pop()\n        c = (a+b+1)//2\n        print(a,b)\n        A.append(c)\n", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write('\\n'.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\n#from decimal import Decimal\n#from fractions import Fraction\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod=10**9+7\n\n\nfor t in range(int(data())):\n    n=int(data())\n    out(2)\n    ans=[]\n    k=n\n    for i in range(n-1,0,-1):\n        ans.append(str(k)+' '+str(i))\n        k=(k+i+1)//2\n    outl(ans)\n", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop,heapify\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\nimport sys\ninput = sys.stdin.readline\n\nfrom itertools import accumulate\nfrom functools import lru_cache\n\nM = mod = 10 ** 9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n \ndef li():return [int(i) for i in input().rstrip('\\n').split()]\ndef st():return input().rstrip('\\n')\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\n\nfor _ in range(val()):\n    n = val()\n    \n    print(2)\n    l = list(range(1, n + 1))\n    for i in range(n - 1):\n        a, b = l.pop(), l.pop()\n        print(a, b)\n        l.append((a + b + 1) // 2)\n", "from math import ceil\n\nn = int(input())\n\nfor _ in range(n):\n    k = int(input())\n    \n    arr = list(range(1, k+1))\n    o = []\n\n    for i in range(k-1):\n        a = arr.pop()\n        b = arr.pop()\n        o.append((a, b))\n        arr.append(ceil((a+b)/2))\n\n    print(arr[0])\n    for i in range(len(o)):\n        print(o[i][0], o[i][1])\n    \n", "import sys\ninput = sys.stdin.readline\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n\n        x = []\n        for i in range(1, N + 1):\n            x.append(i)\n\n        print(2)\n\n        while len(x) >= 2:\n            a = x.pop()\n            b = x.pop()\n            c = -(-(a + b) // 2)\n            print(a, b)\n            x.append(c)\n\n        \n    \n\ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "t = int(input())\nns = []\nfor _ in range(t):\n    n = int(input())\n    ns.append(n)\n\nfor n in ns:\n    print(2)\n    print(n-1, n)\n    if n > 2:\n        for x in range(n, 2, -1):\n            print(x-2, x)\n", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n\n    print(2)\n    print('{0} {1}'.format(n-1, n))\n\n    for k in range(n, 2, -1):\n        print('{0} {1}'.format(k-2, k))\n", "def solve():\n    n = int(input())\n    if n == 2:\n        print(2)\n        print(1, 2)\n        return 0\n    lst = list(range(1, n + 1))\n    ans = []\n    ans.append([n-2,n])\n    ans.append([n-1,n-1])\n    lst.pop()\n    lst.pop()\n    lst.pop()\n    lst.append(n-1)\n    while len(lst) > 1:\n        a = lst[-1]\n        b = lst[-2]\n        c = (a + b + 1) // 2\n        ans.append([a,b])\n        lst.pop()\n        lst.pop()\n        lst.append(c)\n    print(lst[0])\n    for i in ans:\n        print(*i)\nfor i in range(int(input())):\n    solve()", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    print(2)\n    x=n\n    for i in range(n-1,0,-1):\n        print(x,i)\n        x=(x+i+1)//2\n\n    \n\n    \n", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nT=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    print(2)\n\n    num=n\n    for i in range(n-1,0,-1):\n        print(i,num)\n        if((num+i)%2==0):\n            num=(num+i)//2\n\n            \n        \n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    A = list(range(1, n+1))\n    ans = []\n    t = -1\n    for i in range(n-1):\n        ans.append((A[-2], A[-1]))\n        x = A.pop()\n        if (x+A[-1])%2 == 0:\n            A[-1] = (x+A[-1])//2\n        else:\n            A[-1] = (x+A[-1]+1)//2\n    print(A[0])\n    for i in range(len(ans)):\n        print(*ans[i])\n", "for _ in range(int(input())):\n    n = int(input())\n    print(2, flush=False)\n    print(f'{n} {n-1}', flush=False)\n    if n > 2:\n        print('\\n'.join(f'{x} {x-2}' for x in range(n, 2, -1)))\n", "# 3x + 5y + 7z\n\nt = int(input())\n\nwhile t:\n    t -= 1\n    n = int(input())\n    print(2)\n    arr = [n-1,n]\n    print(*arr)\n    for i in range(2,n):\n        arr = [n-i,n-i+2]\n        print(*arr)"]