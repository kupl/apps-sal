["from math import *\nfor t in range(int(input())):\n n = int(input())\n numberlist = list(map(int,input().split()))\n numberlist.sort()\n print(numberlist[0]* ( len(numberlist) -1))", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n m=a[0]\n ans=(len(a)-1)*m\n print(ans)\n", "# cook your dish here\ntry:\n test_case = int(input())\n for i in range(test_case):\n  user = int(input())\n  \n  array = sorted(list(map(int,input().split())) , reverse=True)[:user]\n  c = array[len(array)-1]\n  array.remove(array[0])\n  b = len(array)*c\n  print(b)\nexcept:\n pass", "T = int(input())\nfor i in range(T):\n N = int(input()) \n a = sorted(list(map(int,input().split())) , reverse=True)\n c = a[len(a)-1]\n a.remove(a[0])\n b = len(a)*c\n print(b) ", "# cook your dish here\ntry:\n T = int(input())\n for i in range(T):\n  N = int(input())\n  \n  a = sorted(list(map(int,input().split())) , reverse=True)[:N]\n  c = a[len(a)-1]\n  a.remove(a[0])\n  b = len(a)*c\n  print(b)\n  #  ans=(len(a)-1)*m\nexcept:\n pass", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n m=a[0]\n ans=(len(a)-1)*m\n print(ans)\n", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n s=0\n while(len(a)>1):\n   a.remove(a[1])\n   s=s+a[0]\n print(s)\n \n", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n s=0\n while(len(a)!=1):\n   a.remove(a[1])\n   s=s+a[0]\n print(s)\n \n", "t=int(input())\nfor i in range(t):\n n=int(input())\n a=list(map(int,input().split()))\n a.sort()\n s=0\n while(True):\n  if(len(a)==1):\n   break\n  else:\n   a.remove(a[1])\n   s=s+a[0]\n print(s)\n \n", "N = int(input())\nfor i in range(N):\n a=int(input())\n li=[int(x) for x in input().split()]\n a=min(li)\n print(a*(len(li)-1))", "t=int(input())\nfor w in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n cost=min(l)\n length=len(l)\n print(cost*(length-1))", "# cook your dish here\nt=int(input())\nfor w in range(t):\n n=int(input())\n l=list(map(int,input().split()))\n cost=min(l)\n length=len(l)\n print(cost*(length-1))", "for i in range(int(input())):\n n1=int(input())\n a=list(map(int,input().split()))\n m=min(a)\n print(m*(n1-1))\n", "# cook your dish here\nfor i in range(int(input())):\n n=int(input())\n lis=list(map(int,input().split()))\n print(min(lis)*(n-1))", "# cook your dish here\nfor i in range(int(input())):\n n=int(input())\n lis=list(map(int,input().split()))\n print(min(lis)*(n-1))", "for _ in range(int(input())):\n n=int(input())\n a=list(map(int,input().split()))\n m=min(a)\n print(m*(n-1))\n", "# cook your dish here\n\nT=int(input())\n\nfor _ in range(T):\n  \n n=int(input())\n x=list(map(int,input().split()))\n  \n print(min(x)*(n-1))\n  \n", "import re\n\nclass arrSol():\n def __init__(self):\n  self.N = 0\n  self.arr = 0\n \n def updateN(self, N):\n  self.N = N\n\n def populateArr(self):\n  self.arr = input()\n  self.arr = re.split(\" \", self.arr)\n  \n def findCost(self):\n  min = 100001\n  for i in range(self.N):\n   if int(self.arr[i]) < min:\n    min = int(self.arr[i])\n  return min * (self.N - 1) \n  \n  \n  \n\n\nT = int(input())\n\nfor i in range(T):\n \n myObj = arrSol()\n myObj.updateN(int(input()))\n myObj.populateArr()\n print(int(myObj.findCost()))\n del myObj\n \n", "# cook your dish here\na = int(input())\nfor i in range(0,a):\n n = int(input())\n x = list(map(int, input().split()))\n print(min(x) * (n-1))", "# cook your dish here\nfor _ in range(int(input())):\n n=int(input())\n a=[int(x) for x in input().split()]\n m=min(a)\n print(m*(n-1))", "t=int(input())\nfor i in range(t):\n n=int(input())\n lst=list(map(int,input().split()))\n print(min(lst)* (n-1))\n", "# cook your dish here\nt = int(input())\nfor i in range(0,t):\n n = int(input())\n a = list(map(int, input().split()))\n print(min(a) * (n-1))", "# cook your dish here\nt = int(input())\n\nfor i in range(t):\n n = int(input())\n\n array = list(map(int, input().split()))\n\n minEle = min(array)\n print(minEle * (n - 1))\n", "# cook your dish here\nt=int(input())\nfor m in range(t):\n n=int(input())\n lst=list(map(int,input().split()))\n print(min(lst)*(n-1))\n\n", "# cook your dish here\nt = int(input())\n\nfor i in range(t):\n n = int(input())\n\n array = list(map(int, input().split()))\n\n minEle = min(array)\n print(minEle * (n - 1))"]