["for _ in range(int(input())):\n    # a, b = map(int, input().split())\n    n = int(input())\n    # arr = list(map(int, input().split()))\n    s = input()\n    l = 0\n    r = n - 1\n    if s.count('0') == n:\n        print(s)\n        continue\n    if s.count('1') == n:\n        print(s)\n        continue\n    while s[l] == '0':\n        l += 1\n    while s[r] == '1':\n        r -= 1\n    if r <= l:\n        print(s)\n        continue\n    print(l * '0' + '0' + (n - r - 1) * '1')", "ans = []\nfor _ in range(int(input())):\n    n = int(input())\n    u = list(map(int, list(input())))\n    for i in range(n):\n        if u[i] == 1:\n            i1 = i\n            break\n    else:\n        ans.append(''.join(map(str, u)))\n        continue\n    for i in range(n - 1, -1, -1):\n        if u[i] == 0:\n            i2 = i\n            break\n    else:\n        ans.append(''.join(map(str, u)))\n        continue\n    if i2 < i1:\n        ans.append(''.join(map(str, u)))\n        continue\n    u1 = '0' * i1 + '0' + '1' * (n - i2 - 1)\n    ans.append(u1)\nprint('\\n'.join(ans))\n", "def solve():\n    n = int(input())\n    st = input()\n    pref0 = 0\n    for i in st:\n        if i == \"0\":\n            pref0 += 1\n        else:\n            break\n    post1 = 0\n    for i in st[::-1]:\n        if i == \"1\":\n            post1 += 1\n        else:\n            break\n    if n != post1 + pref0:\n        print(pref0 *\"0\"+\"0\"+post1*\"1\")\n    else:\n        print(pref0 * \"0\" + post1 * \"1\")\nfor i in range(int(input())):\n    solve()", "#list(map(int,input().split()))\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input()\n    co=0\n    for i in range(n):\n        if(s[i]=='1'):\n            break\n        print('0',end=\"\")\n        co+=1\n    ind=n\n    \n    for i in range(n-1,-1,-1):\n        if(s[i]=='0'):\n            break\n        ind=i\n    if(co-1<ind-1):\n        print('0',end=\"\")\n    for i in range(ind,n):\n        print('1',end=\"\")\n    print()\n    \n    \n    \n", "for test_i in range(int(input())):\n    n = int(input())\n    s = input()\n    l1 = 0\n    while l1 < n:\n        if s[-l1 - 1] == '1':\n            l1 += 1\n        else:\n            break\n    l0 = 0\n    while l0 < n:\n        if s[l0] == '0':\n            l0 += 1\n        else:\n            break\n    if l0 + l1 < len(s):\n        print('0' * (l0 + 1) + '1' * l1)\n    else:\n        print('0' * l0 + '1' * l1)", "import sys\ninput = sys.stdin.readline\n\nQ = int(input())\nQuery = []\nfor _ in range(Q):\n    N = int(input())\n    S = input().rstrip()\n    Query.append((N, S))\n\nfor N, S in Query:\n    i1 = N\n    while i1 > 0 and S[i1-1] == \"1\":\n        i1 -= 1\n    i2 = -1\n    while i2 +1< N-1 and S[i2+1] == \"0\":\n        i2 += 1\n    \n    if i2 + 1 == i1:\n        tmp = \"\"\n    else:\n        tmp = \"0\"\n    ans = \"0\"*(i2+1) + tmp + \"1\"*(N-i1)\n    print(ans)", "import sys\nfrom functools import lru_cache, cmp_to_key\nfrom heapq import merge, heapify, heappop, heappush\nfrom math import *\nfrom collections import defaultdict as dd, deque, Counter as C\nfrom itertools import combinations as comb, permutations as perm\nfrom bisect import bisect_left as bl, bisect_right as br, bisect\nfrom time import perf_counter\nfrom fractions import Fraction\n# import numpy as np\nsys.setrecursionlimit(int(pow(10,6)))\n# sys.stdin = open(\"input.txt\", \"r\")\n# sys.stdout = open(\"output.txt\", \"w\")\nmod = int(pow(10, 9) + 7)\nmod2 = 998244353\ndef data(): return sys.stdin.readline().strip()\ndef out(*var, end=\"\\n\"): sys.stdout.write(' '.join(map(str, var))+end)\ndef l(): return list(sp())\ndef sl(): return list(ssp())\ndef sp(): return map(int, data().split())\ndef ssp(): return map(str, data().split())\ndef l1d(n, val=0): return [val for i in range(n)]\ndef l2d(n, m, val=0): return [l1d(n, val) for j in range(m)]\n\n# @lru_cache(None)\nterm=l()[0]\n# term=1\n\nfor _ in range(term):\n    n=l()[0]\n    s=list(input())\n    i=0\n    while(i<n and s[i]!=\"1\"):\n        i+=1\n    j=n-1\n    while j>=0 and s[j]!=\"0\":\n        j-=1\n    if(i<j+1):\n        del(s[i:j])\n    print(\"\".join(s))", "for nt in range(int(input())):\n\tn = int(input())\n\ts = input()\n\tif \"1\" not in s:\n\t\tprint (s)\n\t\tcontinue\n\tans = \"\"\n\tfor i in range(n):\n\t\tif s[i]==\"0\":\n\t\t\tans += s[i]\n\t\telse:\n\t\t\tind = i\n\t\t\tbreak\n\ttemp = \"\"\n\tfor i in range(n-1,ind-1,-1):\n\t\tif s[i]==\"0\":\n\t\t\tans += \"0\"\n\t\t\tbreak\n\t\telse:\n\t\t\ttemp += \"1\"\n\tans += temp\n\tprint (ans)\n", "from sys import stdin, stdout\nimport math\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n = int(stdin.readline())\n    s = stdin.readline().strip()\n    st, end = float('inf'), -1\n    for i in range(n):\n        if s[i] == '1':\n            st = i\n            break\n\n    for i in range(n-1, -1, -1):\n        if s[i] == '0':\n            end = i\n            break\n\n    if st < end:\n        print(s[:st]+'0'+s[end+1:])\n    else:\n        print(s)\n\n\n", "from itertools import groupby as gb\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if s.count('10') == 0:\n        print(s)\n        continue\n    res = \"\"\n    suf = \"\"\n    l = [(k, len(list(v))) for k, v in gb(s)]\n    if len(l) > 0 and l[0][0] == '0':\n        res += l[0][0] * l[0][1]\n        l = l[1:]\n    if len(l) > 0 and l[-1][0] == '1':\n        suf = l[-1][0] * l[-1][1]\n        l = l[:-1]\n    print(res + '0' + suf)\n", "import math\n\n\ndef main():\n    n = int(input())\n    line = input()\n    zero = 0\n    one = 0\n    i = 0\n    while i < n and line[i] == '0':\n        zero += 1\n        i += 1\n    i = n - 1\n    while i > -1 and line[i] == '1':\n        one += 1\n        i -= 1\n    zr = False\n    on = False\n    for i in range(n):\n        if line[i] == '0':\n            zr = True\n    for i in range(n - 1, -1, -1):\n        if line[i] == \"0\":\n            on = True\n        if line[i] == \"1\" and on:\n            zero += 1\n            break\n    if zero == 0 and one == 0:\n        if zr:\n            print(0)\n        else:\n            print(1)\n    else:\n        line = \"\"\n        for k in range(zero):\n            line += \"0\"\n        for k in range(one):\n            line += \"1\"\n        print(line)\n\ndef __starting_point():\n    t = int(input())\n    for i in range(t):\n        main()\n\n__starting_point()", "for _ in range(int(input())):\n    n = int(input())\n    s = input()\n    if n == 1:\n        print(s)\n        continue\n    zero = -1\n    one = -1\n    for i in range(n):\n        if s[i] == \"0\":\n            zero = i\n        if s[i] == \"1\" and one < 0:\n            one = i\n    if zero < one or one == -1 or zero == -1:\n        print(s)\n    else:\n        print((one+1) * \"0\" + (n-zero-1) * \"1\")\n", "# Contest No.: 652\n# Problem No.: B\n# Solver:      JEMINI\n# Date:        20200623\n\nimport sys\nimport heapq\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(sys.stdin.readline().strip())\n        s = sys.stdin.readline().strip()\n        if (\"1\" in s and \"0\" not in s) or (\"1\" not in s and \"0\" in s):\n            print(s)\n            continue\n        lPoint = 0\n        while s[lPoint] == \"0\":\n            lPoint += 1\n        rPoint = n - 1\n        while s[rPoint] == \"1\":\n            rPoint -= 1\n        \n        if lPoint > rPoint:\n            print(s)\n            continue\n        \n        if lPoint != n - 1:\n            ans = s[:lPoint]\n        else:\n            ans = \"\"\n        \n        ans += \"0\"\n\n        if rPoint != n - 1:\n            ans += s[rPoint + 1:]\n        print(ans)\n        \n\n    return\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    S=input().strip()\n\n    OPENING=-1\n    for i in range(n):\n        if S[i]==\"1\":\n            OPENING=i\n            break\n\n    ENDING=n\n    for i in range(n-1,-1,-1):\n        if S[i]==\"0\":\n            ENDING=i\n            break\n\n    if OPENING==-1 or ENDING==n:\n        print(S)\n    elif OPENING>ENDING:\n        print(S)\n    else:\n        print(\"\".join(map(str,[0]*(OPENING+1)+[1]*(n-1-ENDING))))\n        \n", "for _ in range(int(input())):\n    #n, m = map(int, input().split())\n    #A = list(map(int, input().split()))\n    n = int(input())\n    s = input()\n    if s == '0' * n or s == '1' * n:\n        print(s)\n\n    else:\n\n        i = 0\n        while s[i] == '0':\n            i += 1\n        j = n - 1\n        while s[j] == '1':\n            j -= 1\n        if '1' in s[i:j + 1] and '0' in s[i:j + 1]:\n            print(s[:i] + '0' + s[j + 1:])\n        else:\n            print(s)\n"]