["arr=[]\nn=int(input())\nfor i in range(n):\n    a=int(input())\n    arr.append(a)\n    arr.sort()\n    p=arr.index(a)\n    print((i-p)+1)", "t=int(input())\nlst=[]\nfor m in range(t):\n    n=int(input())\n    lst.append(n)\nl=[]\nfor i in range(0,len(lst)):\n    count=0\n    for j in range(0,i):\n        if(lst[i]<lst[j]):\n            count=count+1\n    l.append(count+1)\nfor k in l:\n    print(k)", "t=int(input())\nlst=[]\nfor m in range(t):\n    n=int(input())\n    lst.append(n)\nl=[]\nfor i in range(0,len(lst)):\n    count=0\n    for j in range(0,i):\n        if(lst[i]<lst[j]):\n            count=count+1\n    l.append(count+1)\nfor k in l:\n    print(k)", "N = int(input())\nM = []\nfor i in range(N):\n    x = int(input())\n    M.append(x)\n    M.sort()\n    print(i+1-M.index(x))", "n=int(input());l=[]\r\nfor i in range(0,n):\r\n\tx=int(input());l.append(x);l.sort(reverse=True);print(l.index(x)+1)", "n=int(input());l=[]\r\nfor i in range(0,n):\r\n\tx=int(input());l.append(x);l.sort(reverse=True);print(l.index(x)+1)", "n=int(input());l=list()\r\nfor i in range(0,n):\r\n\tx=int(input());l.append(x)\r\n\tl.sort(reverse=True)\r\n\tprint(l.index(x)+1)", "def ff(l,x):\r\n\tif(x==max(l)):\r\n\t\treturn 1\r\n\telif(x==min(l)):\r\n\t\treturn len(l)\r\n\telse:\r\n\t\tls=l\r\n\t\tls.sort(reverse=True)\r\n\t\treturn ls.index(x)+1\r\nn=int(input());li=[];r=n*[1]\r\nfor i in range(0,n):\r\n\tx=int(input());\r\n\tli.append(x)\r\n\tprint(ff(li,x))", "def ff(l,x):\r\n\tr=1\r\n\tfor i in l:\r\n\t\tif i>x:\r\n\t\t\tr+=1\r\n\treturn r\r\nn=int(input());li=[];r=n*[1]\r\nfor i in range(n):\r\n\tli.append(int(input()));r[i]=ff(li,li[i])\r\nfor x in r:\r\n\tprint(x)", "t= int(input())\nl=[]\nfor _ in range(t):\n    n= int(input())\n    l.append(n)\n    l.sort(reverse=True)\n    print(l.index(n)+1)", "l1 = []\r\nfor _ in range(int(input())):\r\n\tn = int(input())\r\n\tl1.append(n)\r\n\tl1.sort(reverse = True)\r\n\tprint(l1.index(n) + 1)", "from bisect import bisect_left\r\nfrom sys import stdin\r\nn=int(stdin.readline())\r\nl=[]\r\nfor i in range(n):\r\n    t=int(stdin.readline())\r\n    l.append(t)\r\n    l.sort()\r\n    print(i+1-bisect_left(l,t))", "from bisect import bisect_left\r\nfrom sys import stdin\r\nn=int(stdin.readline())\r\nl=[]\r\nfor i in range(n):\r\n    t=int(stdin.readline())\r\n    l.append(t)\r\n    l.sort()\r\n    print(i+1-bisect_left(l,t))", "try:\n    t=int(input())\n    l=[]\n    for _ in range(t):\n        f=int(input())\n        l.append(f)\n        l.sort(reverse=True)\n        print(l.index(f)+1)\nexcept:\n    pass", "try:\r\n    n=int(input())\r\n    nums=[]\r\n    t=int(input())\r\n    nums.append(t)\r\n    print(1)\r\n    for _ in range(n-1):\r\n        t=int(input())\r\n        nums.append(t)\r\n        nums.sort(reverse=True)\r\n        rank=nums.index(t)\r\n        print(rank+1)\r\n  \r\nexcept:\r\n  pass", "try:\r\n    n=int(input())\r\n    nums=[]\r\n    t=int(input())\r\n    nums.append(t)\r\n    print(1)\r\n    for _ in range(n-1):\r\n        t=int(input())\r\n        nums.append(t)\r\n        z=sorted(nums,reverse=True)\r\n        rank=z.index(t)\r\n        print(rank+1)\r\n  \r\nexcept:\r\n  pass", "try:\r\n    n=int(input())\r\n    nums=[]\r\n    for _ in range(n):\r\n        t=int(input())\r\n        nums.append(t)\r\n        z=sorted(nums,reverse=True)\r\n        rank=z.index(t)\r\n        print(rank+1)\r\n  \r\nexcept:\r\n  pass", "# \r\n# // Problem : Whats the Rank\r\n# // Contest : CodeChef - IARCS OPC Judge Problems\r\n# // URL : https://www.codechef.com/IARCSJUD/problems/IARANK\r\n# // Memory Limit : 256 MB\r\n# // Time Limit : 2000 ms\r\n# // Powered by CP Editor (https://github.com/cpeditor/cpeditor)\r\n\r\nres = []\r\nfor _ in range(int(input())):\r\n\tn = int(input())\r\n\tres.append(n)\r\n\tres.sort(reverse=True)\r\n\tprint(res.index(n)+1)", "# cook your dish here\nfrom bisect import insort\ntry:\n    x = []\n    for _ in range(int(input())):\n        t = int(input())\n        insort(x,t)\n        x.sort(reverse=True)\n        print(x.index(t)+1)\nexcept:\n    pass", "n=int(input())\r\narr=[]\r\nfor i in range(n):\r\n    arr.append(int(input()))\r\n\r\nans=[]\r\nans.append(1)\r\n\r\nfor i in range(1, n):\r\n    val=arr[i]\r\n    for j in range(i-1, -2, -1):\r\n        if(j==-1):\r\n            arr[j+1]=val\r\n            ans.append(1)\r\n            break\r\n\r\n        if(arr[j]<val):\r\n            arr[j+1]=arr[j]\r\n        else:\r\n            arr[j+1]=val\r\n            ans.append(j+2)\r\n            break\r\n        \r\n    #print(arr, val)\r\n\r\nprint(*(ans), sep='\\n')\r\n        ", "n=int(input())\r\narr=[]\r\nval=int(input())\r\narr.append(val)\r\nprint(1)\r\nfor i in range (n-1) :\r\n    val=int(input())\r\n    arr.append(val)\r\n    arr.sort(reverse=True)\r\n    count=arr.index(val)\r\n    print(count+1)", "n=int(input())\r\narr=[]\r\nval=int(input())\r\narr.append(val)\r\nprint(1)\r\nfor i in range (n-1) :\r\n    val=int(input())\r\n    count=1\r\n    for j in arr :\r\n        if val<j :\r\n            count+=1\r\n    arr.append(val)\r\n    print(count)", "l1 = []\r\nfor _ in range(int(input())):\r\n\tn = int(input())\r\n\tl1.append(n)\r\n\tl1.sort(reverse = True)\r\n\tprint(l1.index(n) + 1)", "import sys\r\nfrom bisect import insort\r\n\r\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\r\ndef get_ints(): return map(int, sys.stdin.readline().strip().split())\r\n\r\nn = int(input())\r\nArr = []\r\nresult = []\r\nlength = 0\r\nfor i in range(n):\r\n    t = int(input())\r\n    insort(Arr, t)\r\n    length += 1\r\n    result += length - Arr.index(t),\r\nfor i in result:\r\n    print(i)"]