["import sys\n\ndef binpow(a, n, p):\n    res = 1\n    while n > 0:\n        if n % 2 == 1:\n            res = (res * a) % p\n        a = (a * a) % p\n        n >>= 1\n    return res\n\ndef main():\n    result = []\n    \n    t = int(sys.stdin.readline())\n    for line in sys.stdin.readlines():\n        p, q, b = list(map(int, line.split()))\n        for i in range(6):\n            b = (b * b) % q\n        result.extend(list(\"Finite\\n\" if (p * b) % q == 0 else list(\"Infinite\\n\")))\n    sys.stdout.write(\"\".join(result))\n\nmain()\n", "input()\nprint(*['Infinite' if p * pow(b, 99, q) % q else 'Finite' for p, q, b in map(lambda l: map(int, l.split()), __import__('sys').stdin.readlines())], sep='\\n')\n", "input()\nprint('\\n'.join(['Infinite' if p * pow(b, 99, q) % q else 'Finite' for p, q, b in [list(map(int, l.split())) for l in __import__('sys').stdin.readlines()]]))\n", "print('\\n'.join([(lambda p, q, b: 'Infinite' if p * pow(b, 99, q) % q else 'Finite')(*list(map(int, input().split()))) for _ in range(int(input()))]))\n", "input()\nprint('\\n'.join([(lambda p, q, b: 'Infinite' if p * pow(b, 60, q) % q else 'Finite')(*x) for x in [list(map(int, l.split())) for l in __import__('sys').stdin.readlines()]]))\n", "n=int(input())\ns=''\nfor i in range(n):\n    p,q,b=map(int,input().split())\n    for i in range(6):\n        b=(b*b)%q\n        \n    if((p*b)%q):\n        s+='Infinite\\n'\n    else:\n        s+='Finite\\n'\nprint(s)", "n = int(input())\ns = ''\nfor i in range(n):\n    p,q,b = map(int,input().split())\n    for i in range(6):\n        b = (b*b)%q\n    if (p*b) %q:\n        s += 'Infinite\\n'\n    else:\n        s += 'Finite\\n'\nprint(s)", "# python3\ndef solve():\n    for __ in range(int(input())):\n        p, q, b = tuple(map(int, input().split()))\n        yield \"Infinite\" if p * pow(b, 63, q) % q else \"Finite\"\n\n\nprint(\"\\n\".join(solve()))\n", "n=int(input())\ns=''\nfor i in range(n):\n    p,q,b=map(int,input().split())\n    for i in range(6):\n        b=(b*b)%q\n        \n    if((p*b)%q):\n        s+='Infinite\\n'\n    else:\n        s+='Finite\\n'\nprint(s)", "n = int(input())\nans = ''\nwhile n > 0:\n\tp, q, b = list(map(int, input().split(' ')))\n\tfor i in range(6):\n\t\tb = b * b % q\n\tif b * p % q == 0: ans += 'Finite\\n'\n\telse: ans += 'Infinite\\n'\n\tn -= 1\nprint (ans)\n", "n=int(input())  \ns=''  \nfor i in range(n):  \n    p,q,b=map(int,input().split())  \n    for i in range(6):  \n        b=(b*b)%q  \n          \n    if((p*b)%q):  \n        s+='Infinite\\n'  \n    else:  \n        s+='Finite\\n'  \nprint(s) ", "print('\\n'.join([(lambda p, q, b: 'Infinite' if p * pow(b, 99, q) % q else 'Finite')(*map(int, input().split())) for _ in range(int(input()))]))", "from sys import stdin\n\n_, *l = stdin.read().splitlines()\nfor i, s in enumerate(l):\n    p, q, b = map(int, s.split())\n    l[i] = 'Infinite' if p * pow(b, 64, q) % q else 'Finite'\nprint('\\n'.join(l))", "n = int(input())\nans = ''\nwhile n > 0:\n\tp, q, b = map(int, input().split(' '))\n\tfor i in range(6):\n\t\tb = b * b % q\n\tif b * p % q == 0:\n\t ans += 'Finite\\n'\n\telse:\n\t ans += 'Infinite\\n'\n\tn -= 1\nprint (ans)", "import sys\n\ndef main():\n    n = int(input())\n    ans = []\n    for i in range(n):\n        p, q, b = map(int, input().split(\" \"))\n        t = pow(b, 111, q)\n        if p * t % q == 0:\n            ans.append(\"Finite\")\n        else:\n            ans.append(\"Infinite\")\n\n    print(\"\\n\".join(ans))\n\nmain()", "import sys\n\ndef main():\n    n = int(input())\n    ans = []\n    for i in range(n):\n        p, q, b = map(int, input().split(\" \"))\n        t = pow(b, 111, q)\n        if p * t % q == 0:\n            ans.append(\"Finite\")\n        else:\n            ans.append(\"Infinite\")\n\n    print(\"\\n\".join(ans))\n\nmain()", "from math import gcd\nans = []\nfor _ in range(int(input())):\n    p, q, b = map(int, input().split())\n    q //= gcd(p, q)\n    if pow(b, 100, q) == 0:\n        ans.append('Finite')\n    else:\n        ans.append('Infinite')\nprint('\\n'.join(ans))", "print('\\n'.join([(lambda p, q, b: 'Infinite' if p * pow(b, 99, q) % q else 'Finite')(*list(map(int, input().split()))) for _ in range(int(input()))]))\n", "ans = [(lambda p, q, b: 'Infinite' if p * pow(b, 99, q) % q else 'Finite')(*list(map(int, input().split()))) for _ in range(int(input()))]\nfor _ in ans:\n    print(_)\n", "import sys\ndef main():\n    n = int(input())\n    ans = []\n    while n:\n        n += -1\n        p, q, b = list(map(int, input().split()))\n        if p * pow(b, 99, q) % q: ans.append(\"Infinite\")\n        else: ans.append(\"Finite\")\n    for _ in ans: print(_)\nmain()\n", "n = int(input())\nans = []\nwhile n:\n    n += -1\n    p, q, b = list(map(int, input().split()))\n    if p * pow(b, 99, q) % q: ans.append(\"Infinite\")\n    else: ans.append(\"Finite\")\nfor _ in ans: print(_)\n"]