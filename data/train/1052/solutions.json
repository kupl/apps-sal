["from collections import deque \r\nT=int(input())\r\ndef break_down(num):\r\n    count=0\r\n    while(len(num)!=1):\r\n        temp=0\r\n        for i in range(0,len(num)):\r\n            temp=temp+int(num[i])\r\n        num=str(temp)\r\n        count=count+1\r\n    return (int(num),count)\r\ndef digit_sum(num):\r\n    temp=0\r\n    for i in range(0,len(num)):\r\n        temp=temp+int(num[i])\r\n    num=temp\r\n    return (num)\r\nwhile(T):\r\n queue=deque()\r\n count_n=0\r\n count_d=0\r\n T=T-1\r\n N,d=[i for i in input().split()]\r\n n,count_n=break_down(N)\r\n D,count_D=break_down(d)\r\n dic={}\r\n if(D==1 or D==2 or D==4 or D==5 or D==7 or D==8):\r\n     mini=1 \r\n elif(D==3 or D==6):\r\n     mini=min(digit_sum(str(n+3)),digit_sum(str(n+6)),digit_sum(str(n+9)))\r\n else:\r\n     mini=n\r\n queue.append((int(N),0))\r\n ele=int(N)\r\n count=0\r\n while(len(queue)!=0):\r\n     ele,count=queue.popleft()\r\n     if(ele==mini):\r\n         break\r\n     else:\r\n         if(len(str(ele))==1):\r\n             temp1=ele+int(d)\r\n             queue.append((temp1,count+1))\r\n         else:\r\n             temp2=digit_sum(str(ele))\r\n             temp1=ele+int(d)\r\n             queue.append((temp2,count+1))\r\n             queue.append((temp1,count+1))\r\n print(ele,count)", "def ds(n):\r\n    num_str = str(n)\r\n    sum = 0\r\n    for i in range(0, len(num_str)):\r\n        sum += int(num_str[i])\r\n    return sum\r\n\r\nt = int(input())\r\n\r\nfor _ in range(t):\r\n\tn,d = input().split()\r\n\tn = int(n)\r\n\td = int(d)\r\n\r\n\ts = set()\r\n\ttemp = n\r\n\tfor i in range(500000):\r\n\t\tif temp<=9:\r\n\t\t\tif not temp in s:\r\n\t\t\t\ts.add(temp)\r\n\t\t\t\ttemp = temp+d\r\n\t\t\telse:\r\n\t\t\t\tbreak\r\n\t\telse:\r\n\t\t\ttemp = ds(temp)\r\n\r\n\ts = sorted(s)\r\n\tk = s[0]\r\n\r\n\tq = []\r\n\tans = 0 \r\n\tq.append((n,1))\r\n\twhile len(q) != 0:\r\n\t\tnum = q[0][0]\r\n\t\tstep = q[0][1]\r\n\t\tq.pop(0)\r\n\t\tif num is k:\r\n\t\t\tans = step-1\r\n\t\t\tbreak\r\n\t\tq.append((num+d,step+1))\r\n\t\tq.append((ds(num),step+1))\r\n\t\t\r\n\tprint(str(k)+\" \"+str(ans))\r\n", "from collections import defaultdict\r\ndef digitSum(n):\r\n    n=str(n)\r\n    s=0\r\n    for i in range(len(n)):\r\n        s+=int(n[i])\r\n    return s\r\ndef solve(n,d):\r\n    queue=[[n,0]]\r\n    has=defaultdict(int)\r\n    i=0\r\n    while i<10000 and len(queue)!=0:\r\n        t=queue.pop(0)\r\n        if t[0]<10:\r\n            if t[0] not in has:\r\n                has[t[0]]=t[1]\r\n        else:\r\n            queue.append([digitSum(t[0]),t[1]+1])\r\n        queue.append([t[0]+d,t[1]+1])\r\n        i+=1\r\n    print(min(has),has[min(has)])\r\n            \r\n    \r\nfor _ in range(int(input())):\r\n    n,d=map(int,input().split())\r\n    solve(n,d)\r\n    \r\n", "def disum(x):\r\n    x=str(x)\r\n    sum=0\r\n    for i in range(len(x)):\r\n        sum+=int(x[i])\r\n    return sum\r\nfor _ in range(int(input())):\r\n    n,d=map(int,input().split())\r\n    ans={}\r\n    souma=[(n,0)]\r\n    ushijima=1\r\n    i=0\r\n    while i<10000:\r\n        nakiri=souma.pop(0)\r\n        if nakiri[0]<10:\r\n            if nakiri[0] not in ans:\r\n                ans[nakiri[0]]=nakiri[1]\r\n        else:\r\n            souma.append((disum(nakiri[0]),nakiri[1]+1))\r\n        souma.append((nakiri[0]+d,nakiri[1]+1))\r\n        i+=1\r\n    print(min(ans),ans[min(ans)])\r\n", "def disum(x):\r\n    x=str(x)\r\n    sum=0\r\n    for i in range(len(x)):\r\n        sum+=int(x[i])\r\n    return sum\r\nfor _ in range(int(input())):\r\n    n,d=map(int,input().split())\r\n    ans={}\r\n    souma=[(n,0)]\r\n    ushijima=1\r\n    i=0\r\n    while i<100000:\r\n        nakiri=souma.pop(0)\r\n        if nakiri[0]<10:\r\n            if nakiri[0] not in ans:\r\n                ans[nakiri[0]]=nakiri[1]\r\n        else:\r\n            souma.append((disum(nakiri[0]),nakiri[1]+1))\r\n        souma.append((nakiri[0]+d,nakiri[1]+1))\r\n        i+=1\r\n    print(min(ans),ans[min(ans)])\r\n", "def disum(x):\r\n    x=str(x)\r\n    sum=0\r\n    for i in range(len(x)):\r\n        sum+=int(x[i])\r\n    return sum\r\nfor _ in range(int(input())):\r\n    n,d=map(int,input().split())\r\n    ans={}\r\n    souma=[(n,0)]\r\n    ushijima=1\r\n    i=0\r\n    while i<1000:\r\n        nakiri=souma.pop(0)\r\n        if nakiri[0]<10:\r\n            if nakiri[0] not in ans:\r\n                ans[nakiri[0]]=nakiri[1]\r\n        else:\r\n            souma.append((disum(nakiri[0]),nakiri[1]+1))\r\n        souma.append((nakiri[0]+d,nakiri[1]+1))\r\n        i+=1\r\n    print(min(ans),ans[min(ans)])\r\n", "def dSum(n):\n    ans = 0\n    while(n>0):ans+=n%10;n//=10\n    return ans\ndef solve(n,d,step,ans):\n    if(n<10):ans[n] = min(ans[n],step)\n    left = dSum(n);right = n+d\n    if(step>13):return step\n    solve(left,d,step+1,ans);solve(right,d,step+1,ans)\nfor T in range(int(input())):\n    N,D = [int(x) for x in input().split()];ans = {}\n    for i in range(10):ans[i] = 100\n    solve(N,D,0,ans);x,y = [100,100]\n    for i,j in ans.items():\n        if(j!=100):x,y = i,j;break\n    print(x,y)", "def dSum(n):\r\n    ans = 0\r\n    while(n>0):\r\n        ans+=n%10\r\n        n//=10\r\n    return ans\r\n\r\ndef solve(n,d,step,ans):\r\n    if(n<10):\r\n        ans[n] = min(ans[n],step)\r\n    left = dSum(n)\r\n    right = n+d\r\n    if(step>13):\r\n        return step\r\n    solve(left,d,step+1,ans)\r\n    solve(right,d,step+1,ans)\r\n\r\nfor T in range(int(input())):\r\n    N,D = [int(x) for x in input().split()]\r\n    ans = {}\r\n    for i in range(10):\r\n        ans[i] = 100\r\n    solve(N,D,0,ans)\r\n    x,y = [100,100]\r\n    for i,j in ans.items():\r\n        if(j!=100):\r\n            x = i\r\n            y = j\r\n            break\r\n    print(x,y)", "t = int(input())\n\ndef digisum(a):\n    a = str(a)\n    x = 0\n    for i in a:\n        x += int(i)\n    return x\n\nfor _ in range(0,t):\n    x = input()\n    n = int(x.split(' ')[0])\n    d = int(x.split(' ')[1])\n    \n    dict = {n:0}\n    stop_at = 1\n    curr_items = [n]\n    next_items = []\n    steps = 0\n    \n    #if n%3 == 0 and d%3 == 0:\n     #   stop_at = 3\n    \n    while stop_at not in dict and steps < 11:\n        steps += 1\n        for i in curr_items:\n            ds = digisum(i) if i >= 10 else 0\n            ad = i + d\n            \n            if ds != 0 and ds not in dict:\n                next_items.append(ds)\n                dict[ds] = steps\n            \n            if ad not in dict:\n                next_items.append(ad)\n                dict[ad] = steps\n                \n        curr_items,next_items = next_items,[] \n        \n    for i in range(1,10):\n        if i in dict:\n            stop_at = i\n            steps = dict[i]\n            break\n                \n    print(stop_at,steps)\n            ", "\ndef digitSum(digit):\n    result=0\n    s=str(digit)\n    for x in s:\n        result+=int(x)\n    return result\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        l=[]\n        min1, pos=100000, -10\n        # f=[]\n        # craw=[True, False, False, False, False, False, False, False, False, False]\n        # dic={}\n        # fag=[True]*10\n        n, d=input().split(\" \")\n        n=int(n)\n        d=int(d)\n\n        i=0\n        # if d%9==0:\n        #     i=0\n        #     while n>9:\n        #         i+=1\n        #         n=digitSum(n)\n        #     print(n, i, sep=\" \")\n        # elif d%3==0:\n        #     i=0\n        #     while n>3:\n        #         i+=1\n        #         if n>9:\n        #             n=digitSum(n)\n        #         else:\n        #             n+=d\n        #     print(n, i, sep=\" \")\n        # else:\n        l.append([n, 0])\n        while i<10000 and l:\n            tem=l.pop(0)\n            if min1>tem[0]:\n                min1=tem[0]\n                pos=tem[1]\n            if tem[0]>9:\n                l.append([digitSum(tem[0]), tem[1]+1])\n            l.append([tem[0]+d, tem[1]+1])\n            i+=1\n        print(\"{0} {1}\".format(min1, pos))\nmain()", "\ndef digitSum(digit):\n    result=0\n    s=str(digit)\n    for x in s:\n        result+=int(x)\n    return result\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        l=[]\n        min1, pos=100000, -10\n        # f=[]\n        # craw=[True, False, False, False, False, False, False, False, False, False]\n        # dic={}\n        # fag=[True]*10\n        n, d=input().split(\" \")\n        n=int(n)\n        d=int(d)\n\n        i=0\n        # if d%9==0:\n        #     i=0\n        #     while n>9:\n        #         i+=1\n        #         n=digitSum(n)\n        #     print(n, i, sep=\" \")\n        # elif d%3==0:\n        #     i=0\n        #     while n>3:\n        #         i+=1\n        #         if n>9:\n        #             n=digitSum(n)\n        #         else:\n        #             n+=d\n        #     print(n, i, sep=\" \")\n        # else:\n        l.append([n, 0])\n        while i<100000 and l:\n            tem=l.pop(0)\n            if min1>tem[0]:\n                min1=tem[0]\n                pos=tem[1]\n            if tem[0]>9:\n                l.append([digitSum(tem[0]), tem[1]+1])\n            l.append([tem[0]+d, tem[1]+1])\n            i+=1\n        print(\"{0} {1}\".format(min1, pos))\nmain()", "# cook your dish here\nimport queue\ndef digitsum(a):\n    lo = 0\n    s = str(a)\n    for i in s:\n        lo += int(i)\n    return lo\nfor _ in range(int(input())):\n    min1,pos = 1000000,-10\n    track = queue.Queue(100000)\n    n ,d = map(int,input().split())\n    i = 0\n    track.put([n,0])\n    while i<100000 and track.empty()!=True:\n        a,b = track.get()\n        if min1>a:\n            min1 = a\n            pos = b\n        if a>9:\n            track.put([digitsum(a),b+1])\n        track.put([a+d,b+1])\n        i+=1\n    print(min1,pos)", "# -*- coding: utf-8 -*-\r\n\"\"\"\r\nCreated on Tue Apr 23 17:13:53 2019\r\n\r\n@author: avina\r\n\"\"\"\r\n\r\ndef digit_sum(n):\r\n    d= 0\r\n    while n :\r\n        d+= n%10\r\n        n //= 10\r\n    return d\r\n\r\n\r\nfor _ in range(int(input())):\r\n    n,d = map(int, input().strip().split())\r\n\r\n    q = []\r\n    ma = {}\r\n    q.append((n,0))\r\n    i = 0\r\n    while i < 10000 and len(q) != 0:\r\n        t = q.pop(0)\r\n        if t[0] < 10:\r\n            if t[0] in ma:\r\n                continue\r\n            else:\r\n                ma[t[0]] = t[1]\r\n        else:\r\n            q.append((digit_sum(t[0]) , t[1]+1))\r\n    \r\n        q.append((t[0] + d, t[1] + 1))\r\n        i+=1\r\n    k = sorted(list(ma.keys()))\r\n    print(k[0], ma[k[0]])\r\n    ", "def digitsum(n):\n    s=0\n    while n:\n        s=s+n%10\n        n=n//10\n    return(s)\nx=int(input())\nfor i in range(x):\n    a,b=input().split()\n    a,b=[int(a),int(b)]\n    l1=[(a,0)]\n    l2={}\n    i=0\n    while i<10000 and len(l1)!=0:\n        first=l1.pop(0)\n        if first[0]<10:\n            if first[0] not in l2:\n                l2[first[0]]=first[1]\n        else:\n            l1.append((digitsum(first[0]),first[1]+1))\n        l1.append((first[0]+b,first[1]+1))\n        i+=1\n    a=min(l2)\n    print(a,l2[a])", "def digitsum(n):\n    s=0\n    while n:\n        s=s+n%10\n        n=n//10\n    return(s)\nx=int(input())\nfor i in range(x):\n    a,b=input().split()\n    a,b=[int(a),int(b)]\n    l1=[(a,0)]\n    l2={}\n    i=0\n    while i<10000 and len(l1)!=0:\n        first=l1.pop(0)\n        if first[0]<10:\n            if first[0] not in l2:\n                l2[first[0]]=first[1]\n        else:\n            l1.append((digitsum(first[0]),first[1]+1))\n        l1.append((first[0]+b,first[1]+1))\n        i+=1\n    a=min(l2)\n    print(a,l2[a])", "# https://www.codechef.com/OCT18B/problems/MINDSUM\r\n'''\r\n\tAuthor - Subhajit Das\r\n\tUniversity of Engineering and Management, Kolkata\r\n\t28/1/2018\r\n'''\r\n\r\n\r\ndef sum_digits(x):\r\n    return sum(map(int, str(x)))\r\n\r\n\r\ndef main():\r\n    for _ in range(int(input())):\r\n        n, d = map(int, input().strip().split())\r\n\r\n        que = [(n, 0)]\r\n        min_track = dict()\r\n        i = 0\r\n        op_count = 0\r\n        while len(que) != 0 and i <= 1000:\r\n            i += 1\r\n            n, op_count = que.pop(0)\r\n            if n == 1:\r\n                break\r\n            if n > 1 and n <= 9:\r\n                if n not in min_track.keys():\r\n                    min_track[n] = op_count\r\n                else:\r\n                    min_track[n] = min(min_track[n], op_count)\r\n            else:\r\n                que.append((sum_digits(n), op_count+1))\r\n            que.append((n+d, op_count+1))\r\n\r\n        if n == 1:\r\n            print(n, op_count)\r\n        else:\r\n            min_key = min(min_track.keys())\r\n            print(min_key, min_track[min_key])\r\n\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()", "# https://www.codechef.com/OCT18B/problems/MINDSUM\r\n'''\r\n\tAuthor - Subhajit Das\r\n\tUniversity of Engineering and Management, Kolkata\r\n\t28/1/2018\r\n'''\r\n\r\n\r\ndef sum_digits(x):\r\n    return sum(map(int, str(x)))\r\n\r\n\r\ndef main():\r\n    for _ in range(int(input())):\r\n        n, d = map(int, input().strip().split())\r\n\r\n        que = [(n, 0)]\r\n        min_track = dict()\r\n        i = 0\r\n        op_count = 0\r\n        while len(que) != 0 and i <= 10000:\r\n            i += 1\r\n            n, op_count = que.pop(0)\r\n            if n == 1:\r\n                break\r\n            if n > 1 and n <= 9:\r\n                if n not in min_track.keys():\r\n                    min_track[n] = op_count\r\n                else:\r\n                    min_track[n] = min(min_track[n], op_count)\r\n            else:\r\n                que.append((sum_digits(n), op_count+1))\r\n            que.append((n+d, op_count+1))\r\n\r\n        if n == 1:\r\n            print(n, op_count)\r\n        else:\r\n            min_key = min(min_track.keys())\r\n            print(min_key, min_track[min_key])\r\n\r\n\r\ndef __starting_point():\r\n    main()\r\n\n__starting_point()", "def dsum(n):\r\n    ddsum=0\r\n    while(n!=0):\r\n        a=int(n%10)\r\n        ddsum=ddsum+a\r\n        n=int(n/10)\r\n    return ddsum   \r\n\r\nfor _ in range(0,int(input())):\r\n    l=[]\r\n    a,b=map(int,input().split())\r\n    minval=1000000000\r\n    val=a\r\n    cnt=0\r\n    inv=0\r\n    l.append([])\r\n    l[inv].append(val)\r\n    l[inv].append(cnt)\r\n    if(minval>val):\r\n        minval=val\r\n        fcnf=cnt\r\n    for j in range(0,50000):\r\n        q=l.pop(0)\r\n        inv-=1\r\n        l.append([])\r\n        cnt=q[1]+1\r\n        inv+=1\r\n        l[inv].append(q[0]+b)\r\n        l[inv].append(cnt)\r\n        if(minval>(q[0]+b)):\r\n            minval=(q[0]+b)\r\n            fcnf=cnt\r\n        #print(l)    \r\n        if(q[0]>9):\r\n            p=dsum(q[0])\r\n            l.append([])\r\n            inv+=1\r\n            l[inv].append(p)\r\n            l[inv].append(cnt)\r\n            if(minval>p):\r\n                minval=p\r\n                fcnf=cnt\r\n    print(minval,fcnf)            \r\n\r\n\r\n                 \r\n                    \r\n\r\n", "def dsum(n):\r\n    ddsum=0\r\n    while(n!=0):\r\n        a=int(n%10)\r\n        ddsum=ddsum+a\r\n        n=int(n/10)\r\n    return ddsum   \r\n\r\nfor _ in range(0,int(input())):\r\n    l=[]\r\n    a,b=map(int,input().split())\r\n    minval=1000000000\r\n    val=a\r\n    cnt=0\r\n    inv=0\r\n    l.append([])\r\n    l[inv].append(val)\r\n    l[inv].append(cnt)\r\n    if(minval>val):\r\n        minval=val\r\n        fcnf=cnt\r\n    for j in range(0,100000):\r\n        q=l.pop(0)\r\n        inv-=1\r\n        l.append([])\r\n        cnt=q[1]+1\r\n        inv+=1\r\n        l[inv].append(q[0]+b)\r\n        l[inv].append(cnt)\r\n        if(minval>(q[0]+b)):\r\n            minval=(q[0]+b)\r\n            fcnf=cnt\r\n        #print(l)    \r\n        if(q[0]>9):\r\n            p=dsum(q[0])\r\n            l.append([])\r\n            inv+=1\r\n            l[inv].append(p)\r\n            l[inv].append(cnt)\r\n            if(minval>p):\r\n                minval=p\r\n                fcnf=cnt\r\n    print(minval,fcnf)            \r\n\r\n\r\n                 \r\n                    \r\n\r\n", "def ds(x):\r\n\t\tss=0\r\n\t\tx=str(x)\r\n\t\tl=len(x)\r\n\t\tfor i in range(l):\r\n\t\t\tm=int(x[i])\r\n\t\t\tss+=m\r\n\t\treturn int(ss)\r\nimport queue as q\r\nt=int(input())\r\nwhile(t):\r\n\tt=t-1\r\n\tn,d=map(int,input().split())\r\n\ta={n:0}\r\n\ti=0\r\n\tarr=q.Queue(maxsize=100000000000000)\r\n\tarr.put((n,0))\r\n\twhile(i<100000):\r\n\t\tx=arr.get()\r\n\t\tp1=ds(x[0])\r\n\t\tp2=x[0]+d\r\n\t\tif p1<10 and not(p1 in a):\r\n\t\t\ta[p1]=x[1]+1\r\n\t\tif p2<10 and not(p2 in a):\r\n\t\t\ta[p2]=x[1]+1\r\n\t\tarr.put((p1,x[1]+1))\r\n\t\tarr.put((p2,x[1]+1))\r\n\t\ti+=1\r\n\tnn=min(a)\r\n\tprint(nn,a[nn])", "def dsum(n):\r\n    return sum(int(i) for i in str(n))\r\nfor _ in range(int(input())):\r\n    n,d=map(int,input().split())\r\n    q=[n]\r\n    lev=0 \r\n    res=[]\r\n    vis={}\r\n    dist={}\r\n    dist[n]=0\r\n    lev=0 \r\n    res.append([n,0])\r\n    while q:\r\n        siz=len(q)\r\n        lev+=1 \r\n        for i in range(siz):\r\n            t=q.pop(0)\r\n            if t+d not in vis:\r\n                vis[t+d]=1 \r\n                res.append([t+d,lev])\r\n                #print(t,t+d,lev)\r\n                dist[t+d]=dist.get(t)+1\r\n                q.append(t+d)\r\n            if dsum(t) not in vis:\r\n                vis[dsum(t)]=1 \r\n                res.append([dsum(t),lev])\r\n                #print(t,dsum(t),lev)\r\n                dist[dsum(t)]=dist.get(t)+1 \r\n                q.append(dsum(t))\r\n                \r\n        if lev==32:\r\n            break \r\n    #print(res)\r\n    res.sort(key=lambda x:x[0])\r\n    #print(res)\r\n    print(res[0][0],res[0][1])", "tl=int(input())\r\ndef dsum(n):\r\n    ddsum=0\r\n    while(n!=0):\r\n        a=int(n%10)\r\n        ddsum=ddsum+a\r\n        n=int(n/10)\r\n    return ddsum    \r\nwhile(tl>0):\r\n    n,d = map(int,input().split(\" \"))\r\n    i=0\r\n    dic=dict()\r\n    l=[(n,0)]\r\n    while(i<10000 and len(l)!=0):\r\n        t=l.pop(0)\r\n        if(t[0]<10):\r\n            if(t[0] not in dic):\r\n                dic[t[0]]=t[1]\r\n            else:\r\n                continue\r\n        else:\r\n            l.append((dsum(t[0]),t[1]+1))\r\n        l.append((t[0]+d,t[1]+1))\r\n        i+=1\r\n    a=min(dic)\r\n    print(a,dic[a])\r\n    tl=tl-1", "tl=int(input())\r\ndef dsum(n):\r\n    ddsum=0\r\n    while(n!=0):\r\n        a=int(n%10)\r\n        ddsum=ddsum+a\r\n        n=int(n/10)\r\n    return ddsum    \r\nwhile(tl>0):\r\n    n,d = map(int,input().split(\" \"))\r\n    i=0\r\n    dic=dict()\r\n    l=[(n,0)]\r\n    while(i<100000 and len(l)!=0):\r\n        t=l.pop(0)\r\n        if(t[0]<10):\r\n            if(t[0] not in dic):\r\n                dic[t[0]]=t[1]\r\n            else:\r\n                continue\r\n        else:\r\n            l.append((dsum(t[0]),t[1]+1))\r\n        l.append((t[0]+d,t[1]+1))\r\n        i+=1\r\n    a=min(dic)\r\n    print(a,dic[a])\r\n    tl=tl-1", "tl=int(input())\r\ndef dsum(n):\r\n    ddsum=0\r\n    while(n!=0):\r\n        a=int(n%10)\r\n        ddsum=ddsum+a\r\n        n=int(n/10)\r\n    return ddsum    \r\nwhile(tl>0):\r\n    n,d = map(int,input().split(\" \"))\r\n    i=0\r\n    dic=dict()\r\n    l=[(n,0)]\r\n    while(i<1000 and len(l)!=0):\r\n        t=l.pop(0)\r\n        if(t[0]<10):\r\n            if(t[0] not in dic):\r\n                dic[t[0]]=t[1]\r\n            else:\r\n                continue\r\n        else:\r\n            l.append((dsum(t[0]),t[1]+1))\r\n        l.append((t[0]+d,t[1]+1))\r\n        i+=1\r\n    a=min(dic)\r\n    print(a,dic[a])\r\n    tl=tl-1"]