["class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         s=[i for i in str(n)]\n         exist=-1\n         for i in range(len(s)-1,0,-1):\n             if s[i-1]<s[i]:\n                 temp=sorted(s[i-1:])\n                 pivot=temp.index(s[i-1])\n                 for j in range(pivot+1,len(temp)):\n                     if temp[j]>s[i-1]:\n                         pivot=j\n                         break\n                 \n                 s[i-1]=temp[pivot]\n                 del temp[pivot]\n                 s[i:]=temp\n                 exist=1\n                 break\n         ret=int(''.join(s))\n         if exist==1 and ret<2147483647 :\n             return ret\n         else:\n             return -1", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         sn= str(n)\n         nlen = len(sn)\n         if nlen == 1:\n             return -1\n         else:\n             i, j = -1, -2\n             end,check = i, True\n             # int - str to list\n             sl = list(sn)\n             #find the point that needs swap/replace\n             while j != -nlen and sl[j] >= sl[i]:\n                 if sl[end] < sl[j] and check:\n                     end = j\n                     check = False\n                 i -= 1\n                 j -= 1\n             #if j spot is equal to end\n             if sl[j] == sl[end]:\n                 if i > j:\n                     end = i\n             if sl[j] == min(sl):\n                 end = -1\n             #swap and replace\n             sl[j], sl[end] = sl[end], sl[j]\n             front, back = sl[:j+1], sorted(sl[j+1:])\n             result = int(''.join(front+back))\n             return result if result > n and result < 2147483647 else -1", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         nn = str(n)\n         l = len(nn)\n         if l < 2:\n             return -1\n         \n         x = -1\n         for i in range(l-1, 0, -1):\n             if nn[i] > nn[i-1]:\n                 x = i - 1\n                 break\n         \n         if x == -1:\n             return -1\n         \n         y = nn[x+1]\n         yy = x+1\n         for i in range(x+1, l):\n             if nn[i] > nn[x]:\n                 y = min(y, nn[i])\n                 if y == nn[i]:\n                     yy = i\n         \n         left = nn[ : x] + y\n         right = nn[yy+1 : l] + nn[x] + nn[x+1 : yy]\n         res = int(left + ''.join(sorted(right)))\n         \n         return res if res < 2 ** 31 else -1\n         \n", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         digits = list(map(int, list(str(n))))\n         last = None\n         for i in range(0, len(digits)-1):\n             if digits[i+1] > digits[i]:\n                 last = i\n         \n         if last == None:\n             return -1\n         rst = \"\"\n         i = last\n         for j in range(0,i):\n             rst += str(digits[j])\n             # print(rst)\n         p = digits[i]\n         for x in range(p+1, 10):\n             if x in digits[i+1::]:\n                 break\n         rst += str(x)\n         # print(rst)\n         used = False\n         for p in sorted([digits[i]] + digits[i+1::]):\n             if p == x and not used:\n                 used = True\n             else:\n                 rst += str(p)\n             # print(rst)\n         f = int(rst)\n         if f > 2147483647:\n             return -1\n         else:\n             return f", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         nums=list(str(n))#\u56e0\u4e3a\u53ea\u6709\u4f60\u53d8\u6210\u5b57\u7b26\u4e32 \u624d\u53ef\u4ee5\u88ab\u5206\u5f00\u8fd9\u6837\u5b50\u5199\n         size=len(nums)\n         for i in range(size-1,-1,-1):\n             if nums[i-1]<nums[i]:\n                 break\n         if i>0:#\u6ca1\u6709\u660e\u767d\u8fd9\u513f\u4e3a\u4ec0\u4e48\u9700\u8981\u4e00\u4e2a\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u5462\n             for j in range(size-1,-1,-1):\n                 if nums[j]>nums[i-1]:\n                     nums[i-1],nums[j]=nums[j],nums[i-1]\n                     break\n         #\u4e0a\u9762\u8fd9\u513f\u7b97\u662f\u6bd4\u8f83\u660e\u767d\u4e86\n         '''\n         230241 230421 230412 \u8981\u6ce8\u610f\u7684\u5c31\u662f\u8fd9\u4e2a\u5730\u65b9 \u5e76\u4e0d\u662f\u628a4\u632a\u5230\u4e862\u7684\u524d\u9762\u5c31\u7ed3\u675f\u4e86 \n         '''\n         for k in range((size-i)//2):\n             nums[i+k],nums[size-k-1]=nums[size-k-1],nums[i+k] #\u8fd9\u4e2a\u5c31\u662f\u518d\u6362\u540e\u9762\u7684 size-1\u662f\u4e00\u4f53\u7684 \u4e0d\u7136\u4f1a\u8d85\u51fa\u8303\u56f4\n             #\u8fd9\u4e00\u6b65\u60f3\u660e\u767d\u4e00\u70b9\n         \n         ans=int(''.join(nums))\n         return n < ans <= 0x7FFFFFFF and ans or -1 #\u8fd9\u513f\u5b9e\u5728\u662f\u6ca1\u770b\u61c2 \u795e\u9a6c\u610f\u601d\n         #\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9 \u867d\u7136\u90fd\u662f\u8868\u793a\u65e0\u7a77\u5927 \u4f46\u662f\u8fd9\u4e2a\u662f0x7FFFFFFF \u4e0d\u80fd\u7528float('inf') \u662f\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4e2a\u662f\u6d6e\u70b9\u578b\u7684 \u6709\u53ef\u80fd\n", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         :type n: int\n         :rtype: int\n         \"\"\"\n         nums=list(str(n))#\u56e0\u4e3a\u53ea\u6709\u4f60\u53d8\u6210\u5b57\u7b26\u4e32 \u624d\u53ef\u4ee5\u88ab\u5206\u5f00\u8fd9\u6837\u5b50\u5199\n         size=len(nums)\n         for i in range(size-1,-1,-1):\n             if nums[i-1]<nums[i]:\n                 break\n         if i>0:#\u6ca1\u6709\u660e\u767d\u8fd9\u513f\u4e3a\u4ec0\u4e48\u9700\u8981\u4e00\u4e2a\u8fd9\u4e2a\u5224\u65ad\u6761\u4ef6\u5462\n             for j in range(size-1,-1,-1):\n                 if nums[j]>nums[i-1]:\n                     nums[i-1],nums[j]=nums[j],nums[i-1]\n                     break\n         #\u4e0a\u9762\u8fd9\u513f\u7b97\u662f\u6bd4\u8f83\u660e\u767d\u4e86\n         for k in range((size-i)//2):\n             nums[i+k],nums[size-k-1]=nums[size-k-1],nums[i+k]\n             #\u8fd9\u4e00\u6b65\u60f3\u660e\u767d\u4e00\u70b9\n         ans=int(''.join(nums))\n         return n < ans <= 0x7FFFFFFF and ans or -1 #\u8fd9\u513f\u5b9e\u5728\u662f\u6ca1\u770b\u61c2 \u795e\u9a6c\u610f\u601d\n         #\u6ce8\u610f\u8fd9\u4e2a\u5730\u65b9 \u867d\u7136\u90fd\u662f\u8868\u793a\u65e0\u7a77\u5927 \u4f46\u662f\u8fd9\u4e2a\u662f0x7FFFFFFF \u4e0d\u80fd\u7528float('inf') \u662f\u4e0d\u662f\u56e0\u4e3a\u8fd9\u4e2a\u662f\u6d6e\u70b9\u578b\u7684 \u6709\u53ef\u80fd\n", "class Solution:\n     def nextGreaterElement(self, n):\n         \"\"\"\n         44332211 -> -1\n         33442211 -> 34112234\n         22443311 -> 23112344\n         :type n: int\n         :rtype: int\n         \"\"\"\n         s = str(n)\n         l = len(s)\n         digits = [int(c) for c in s]\n         \n         i = l - 1\n         while i > 0 and s[i] <= s[i-1]:\n             i -= 1\n         if i == 0:\n             return -1\n         \n         j = l - 1\n         while j > i-1 and s[j] <= s[i-1]:\n             j -= 1\n         \n         digits[i-1], digits[j] = digits[j], digits[i-1]\n         res = digits[:i] + sorted(digits[i:])\n         res = int(''.join(str(d) for d in res))\n         if res > 2 ** 31:\n             return -1\n         return res"]