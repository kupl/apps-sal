["import sys\nimport math\nimport heapq\ndef half(n):\n return n//2\ndef main(arr,m):\n a,b,c=arr\n \n while m!=0:\n  \n  \n  \n  s=max(a,b,c)\n  \n  if s==a:\n   a=half(a)\n  elif s==b:\n   b=half(b)\n  else:\n   c=half(c)\n  m-=1\n return max(a,b,c)\n   \n \n \n \n \n\nfor i in range(int(input())):\n r,g,b,m=list(map(int,input().split()))\n arr=[]\n for j in range(3):\n  c=max(list(map(int,input().split())))\n  arr.append(c)\n \n print(main(arr,m))\n", "import sys\nimport math\nimport heapq\ndef half(arr):\n for i in range(len(arr)):\n  arr[i]//=2\n return arr\ndef main(arr,m):\n x,y,z=arr\n x.sort()\n y.sort()\n z.sort()\n \n while m!=0:\n  \n  a,b,c=x[-1],y[-1],z[-1]\n  \n  s=max(a,b,c)\n  \n  if s==a:\n   half(x)\n  elif s==b:\n   half(y)\n  else:\n   half(z)\n  m-=1\n return max(x[-1],y[-1],z[-1])\n   \n \n \n \n \n\nfor i in range(int(input())):\n r,g,b,m=list(map(int,input().split()))\n arr=[]\n for j in range(3):\n  c=list(map(int,input().split()))\n  arr.append(c)\n \n print(main(arr,m))\n", "# cook your dish here\nfor _ in range(int(input())):\n r,g,b,m=list(map(int, input().split()))\n l=[]\n for i in range(3):\n  l1=list(map(int, input().split()))\n  l.append(l1)\n   \n for i in range(m+1):\n  a=0\n  b=0\n  for j in range(3):\n   m=max(l[j])\n   if m>a:\n    a=m \n    b=j \n    \n  for k in range(len(l[b])):\n   l[b][k]=l[b][k]//2\n    \n print(a)", "def potion(m, l):\n for _ in range(m):\n  l.sort()\n  l[2] = l[2] // 2\n return max(l)\n\ntry:\n tstc = int(input())\n for t in range(tstc):\n  r, g, b, m = map(int, input().split())\n  red = [int(i) for i in input().split()]\n  green = [int(i) for i in input().split()]\n  blue = [int(i) for i in input().split()]\n  print(potion(m, [max(red), max(green), max(blue)]))\nexcept:\n pass", "# cook your dish here\ntest=int(input())\nfor _ in range(test):\n r,b,g,m=map(int,input().split())\n red=sorted(map(int,input().split()),reverse=True)\n blue=sorted(map(int,input().split()),reverse=True)\n green=sorted(map(int,input().split()),reverse=True)\n x,y,z=red[0],blue[0],green[0]\n for _ in range(m):\n  k=max(x,y,z)\n  if k==x:\n   x=x//2\n  elif k==y:\n   y=y//2\n  else:\n   z=z//2\n print(max(x,y,z))", "# cook your dish here\nfor _ in range(int(input())):\n \n r,b,g,m = list(map(int,input().split()))\n \n red = sorted(map(int,input().split()),reverse=True)\n blue = sorted(map(int,input().split()),reverse=True)\n green = sorted(map(int,input().split()),reverse=True)\n x,y,z=red[0],blue[0],green[0]\n for _ in range(m):\n  \n  k=max(x,y,z)\n  \n  if k==x:\n   x=x//2\n   \n  elif k==y:\n   y=y//2\n   \n  else:\n   z=z//2\n  \n print(max(x,y,z))\n   \n \n", "t=int(input())\nwhile(t>0):\n r,g,q,m=map(int,input().split())\n a=list(map(int,input().split()))\n b=list(map(int,input().split()))\n c=list(map(int,input().split()))\n for i in range(m):\n  x=max(a)\n  y=max(b)\n  z=max(c)\n  if(x>=y)and(x>=z):\n   for j in range(r):\n    a[j]//=2\n  elif(y>=x)and(y>=z):\n   for j in range(g):\n    b[j]//=2\n  else:\n   for j in range(q):\n    c[j]//=2\n x=max(a)\n y=max(b)\n z=max(c)\n print(max(x,max(y,z)))\n t-=1", "for _ in range(int(input())):\n r1,g1,b1,m=map(int,input().split())\n r=[int(i) for i in input().split()]\n g=[int(j) for j in input().split()]\n b=[int(k) for k in input().split()]\n while m>0:\n  if max(max(r),max(g),max(b)) in r:\n   r=[i//2 for i in r]\n  elif max(max(r),max(g),max(b)) in g:\n   g=[j//2 for j in g]\n  else:\n   b=[k//2 for k in b]\n  m-=1\n print(max(max(r),max(g),max(b)))", "t = int(input()) \nfor i in range (t) :\n line = input()\n pui = line.split()\n r = int(pui[0])\n g = int(pui[1]) \n b = int(pui[2]) \n m = int(pui[3]) \n ar = list()\n for i in range (3) :\n  line = input()\n  pui = line.split()\n  pui = [int (j) for j in pui]\n  ar.append(pui) \n for i in range (m) :\n  R = max(ar[0]) \n  G = max(ar[1]) \n  B = max(ar[2]) \n  if R>=G and R >= B :\n   for j in range(len(ar[0]))  :\n    ar[0][j] = int(ar[0][j] / 2) \n  elif G >= R and G >= B :\n   for j in range(len(ar[1])) : \n    ar[1][j] = int(ar[1][j] / 2) \n  elif B >= G and B >= R :\n   for j in range(len(ar[2])) : \n    ar[2][j] = int(ar[2][j] / 2)\n R = max(ar[0]) \n G = max(ar[1]) \n B = max(ar[2])\n ans = max(R, G, B)\n print(ans)\n", "t = int(input()) \nfor i in range (t) :\n line = input()\n pui = line.split()\n r = int(pui[0])\n g = int(pui[1]) \n b = int(pui[2]) \n m = int(pui[3]) \n ar = list()\n for i in range (3) :\n  line = input()\n  pui = line.split()\n  pui = [int (j) for j in pui]\n  ar.append(pui) \n for i in range (m) :\n  R = max(ar[0]) \n  G = max(ar[1]) \n  B = max(ar[2]) \n  if R>=G and R >= B :\n   for j in range(len(ar[0]))  :\n    ar[0][j] = int(ar[0][j] / 2) \n  elif G >= R and G >= B :\n   for j in range(len(ar[1])) : \n    ar[1][j] = int(ar[1][j] / 2) \n  elif B >= G and B >= R :\n   for j in range(len(ar[2])) : \n    ar[2][j] = int(ar[2][j] / 2)\n R = max(ar[0]) \n G = max(ar[1]) \n B = max(ar[2])\n ans = max(R, G, B)\n print(ans)\n", "for _ in range(int(input())):\n R,G,B,M=map(int,input().split())\n l=[]\n r=list(map(int,input().split()))\n rm=max(r)\n g=list(map(int,input().split()))\n gm=max(g)\n b=list(map(int,input().split()))\n bm=max(b)\n l=[rm,gm,bm]\n l.sort()\n for i in range(M):\n  l[-1]//=2\n  l.sort()\n print(l[-1])", "for j in range(int(input())):\n r,g,b,m=map(int,input().split())\n x=[]\n for i in range(3):\n  a=list(map(int,input().split()))\n  x.append(a)\n while(m!=0):\n  c=[]\n  for i in x:\n   c.append(max(i))\n  z=c.index(max(c))\n  for i in range(len(x[z])):\n   x[z][i]=x[z][i]//2\n  m-=1\n am=[]\n for i in x:\n  am+=i\n print(max(am))", "T = int(input())\nfor i in range(T):\n [r, g, b, k] = list(map(int, input().split()))\n s = list(map(int,input().split()))\n t = list(map(int,input().split()))\n c = list(map(int,input().split()))\n j = sorted([max(s),max(t),max(c)])\n for i in range(k):\n  j[-1] = int(j[-1] / 2)\n  j = sorted(j)\n print(j[-1])", "for _ in range(int(input())):\n R, G, B, M = map(int, input().split())\n R_list = list(map(int, input().split()))\n G_list = list(map(int, input().split()))\n B_list = list(map(int, input().split()))\n for j in range(M):\n  rSum = max(R_list)\n  gSum = max(G_list)\n  bSum = max(B_list)\n  p = max(rSum, bSum, gSum)\n  if p == rSum:\n   for i in range(R):\n    R_list[i] = R_list[i] // 2\n  elif p == bSum:\n   for i in range(B):\n    B_list[i] = B_list[i] // 2\n  else:\n   for i in range(G):\n    G_list[i] = G_list[i] // 2\n rSum = max(R_list)\n gSum = max(G_list)\n bSum = max(B_list)\n print(max(rSum, bSum, gSum))", "# cook your dish here\nt=int(input())\nfor i in range(t):\n [r,g,b,k]=list(map(int,input().split()))\n rs=list(map(int,input().split()))\n bs=list(map(int,input().split()))\n gs=list(map(int,input().split()))\n ans=sorted([max(rs),max(bs),max(gs)])\n for i in range(k):\n  ans[-1]=int(ans[-1]/2)\n  ans=sorted(ans)\n print(ans[-1])", "t=int(input())\nfor x in range(0,t):\n r,g,b,m=map(int,input().split())\n a=[]\n c=[]\n for i in range(0,3):\n  v=list(map(int,input().split()))\n  v.sort(reverse=True)\n  a.append(v)\n a.sort() \n for i in range(0,m):\n  l=len(a[2])\n  j=0\n  while(j<l):\n   a[2][j]=int(a[2][j]/2)\n   j+=1\n  a.sort() \n for x in a:\n  c.append(max(x))\n print(max(c)) ", "# cook your dish here\nfor _ in range(int(input())):\n r,g,b,m=list(map(int,input().split()))\n r=list(map(int,input().split()))\n g=list(map(int,input().split()))\n b=list(map(int,input().split()))\n x=max(r)\n y=max(g)\n z=max(b)\n while m>0:\n  if x>=y and x>=z:\n   x//=2\n  elif y>=x and y>=z:\n   y//=2\n  else:\n   z//=2\n  m-=1\n print(max(x,y,z))\n", "t=int(input())\n\nfor _ in range(t):\n R, G, B, M = [int(x) for x in input().split(' ')]\n r = [int(x) for x in input().split(' ')]\n g = [int(x) for x in input().split(' ')]\n b = [int(x) for x in input().split(' ')]\n r.sort(reverse=True)\n g.sort(reverse=True)\n b.sort(reverse=True)\n \n for y in range(M):\n  m = max(r[0], g[0], b[0])\n  if m == r[0]:\n   r = [x//2 for x in r]\n  elif m == g[0]:\n   g = [x//2 for x in g]\n  elif m == b[0]:\n   b = [x//2 for x in b]\n \n print(max(r[0], g[0], b[0]))\n \n", "for _ in range(int(input())):\n r, g, b, m = map(int, input().split())\n R = max(list(map(int, input().split())))\n G = max(list(map(int, input().split())))\n B = max(list(map(int, input().split())))\n \n cur = [R, G, B]\n \n while m > 0:\n  m -= 1\n  index = cur.index(max(cur))\n  cur[index] //= 2\n \n print(max(cur))", "t=int(input())\nfor ijk in range(0,t):\n r,g,b,m=list(map(int,input().strip().split()))\n ra=list(map(int,input().strip().split()))\n rb=list(map(int,input().strip().split()))\n rc=list(map(int,input().strip().split()))\n a=[max(ra),max(rb),max(rc)]\n for i in range(0,m):\n  j=a.index(max(a))\n  a[j]=a[j]//2\n print(max(a))\n  \n \n", "for _ in range(int(input())):\n \n r,g,b,m = map(int, input().split())\n Rarr = list(map(int, input().split()))\n Garr = list(map(int, input().split()))\n Barr = list(map(int, input().split()))\n while(m > 0):\n  Rmax = max(Rarr)\n  Gmax = max(Garr)\n  Bmax = max(Barr)\n  if Rmax == max(Gmax, Rmax, Bmax):\n   Rarr = [int(i/2) for i in Rarr]\n  elif Gmax == max(Gmax, Rmax, Bmax):\n   Garr = [int(i/2) for i in Garr]\n  else:\n   Barr = [int(i/2) for i in Barr]\n  m-=1\n total = Rarr + Garr + Barr\n total.sort()\n print(total[-1])"]