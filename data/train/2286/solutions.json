["k,n = map(int,input().split())\nif k %2 ==0:\n  ans = []\n  ans.append(k//2)\n  for i in range(n-1):\n    ans.append(k)\n  print(*ans)\nelse:\n  ans = []\n  for i in range(n):\n    ans.append(k//2+1)\n  sage = (n)//2\n  for i in range(sage):\n    if ans[-1] == 1:\n      ans.pop()\n    else:\n      ans[-1] -= 1\n      while len(ans) < n:\n        ans.append(k)\n  print(*ans)", "#!/usr/bin/env python3\n\nimport math\n\ndef main():\n    [K, N] = list(map(int, input().split()))\n\n    r = []\n    if K == 1:\n        r = [1] * ((N + 1) // 2)\n    elif K % 2 == 0:\n        r = [K // 2]\n        r += [K] * (N - 1)\n    else:\n        t = N // 2\n        x = int(math.log(N * (K - 1) + 1, K) - 1)\n        while t < ((K ** (x + 1) - 1) / (K - 1) + x) // 2:\n            x -= 1\n        x += 1\n        r = [(K + 1) // 2] * (N - x)\n        r += [0] * x\n        t = ((K ** (x + 1) - 1) / (K - 1) + x) // 2 - t\n        for i in range(x, 0, -1):\n            r[N - i] = 1\n            t -= 1\n            for j in range(K - 1):\n                if t == 0:\n                    break\n                if K ** i - 1 <= t * (K - 1):\n                    r[N - i] += 1\n                    t -= (K ** i - 1) // (K - 1)\n            if t == 0:\n                break\n\n        for i in range(len(r) - 1, -1, -1):\n            if r[i] == 0:\n                r.pop()\n            else:\n                break\n\n\n    print((' '.join(list(map(str, r)))))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "from itertools import chain,repeat\nK,N = list(map(int,input().split()))\n\ndef solve():\n\n  if K % 2 == 0:\n    return ' '.join(map(str, chain((K//2,),repeat(K,N-1))))\n  else:\n    seq = [K//2+1]*N\n    d = N//2\n    for _ in range(d):\n      if seq[-1] == 1:\n        seq.pop()\n      else:\n        seq[-1] -= 1\n        seq.extend(repeat(K,N-len(seq)))\n    return ' '.join(map(str, seq))\n\ndef naive():\n  from itertools import product\n  s = sorted(chain.from_iterable(product(list(range(1,K+1)),repeat=i) for i in range(1,N+1)))\n  return ' '.join(map(str, s[(len(s)-1)//2]))\n\nprint((solve()))\n# print(naive())\n", "K, N = list(map(int, input().split()))\n\nif K % 2 == 0:\n    ans = [K//2] + [K] * (N-1)\nelse:\n    ans = [(K+1)//2] * N\n    for i in range(N//2):\n        if ans[-1] == 1:\n            ans.pop()\n        else:\n            ans[-1] -= 1\n            ans += [K] * (N - len(ans))\n\nprint((' '.join(map(str, ans))))\n", "def solve(k, n):\n    if k & 1 == 0:\n        return [k // 2] + [k] * (n - 1)\n    ans = [k // 2 + 1] * n\n    l = n\n    for i in range((n - 2) // 2 + 1):\n        if ans[-1] == 1:\n            ans.pop()\n            l -= 1\n        else:\n            ans[-1] -= 1\n            if l < n:\n                ans += [k] * (n - l)\n                l = n\n    return ans\n\n\nk, n = list(map(int, input().split()))\n\nprint((*solve(k, n)))\n", "def main():\n    K,N = map(int,input().split())\n\n    if K % 2 == 0:\n        ans = [K//2]\n        for i in range(N-1):\n            ans.append(K)\n    else:\n        back = N // 2\n        mid = K // 2 + 1\n        ans = [mid for i in range(N)]\n        for i in range(back):\n            if ans[-1] == 1:\n                ans.pop()\n            else:\n                ans[-1] -= 1\n                while len(ans) < N:\n                    ans.append(K)\n    print(' '.join(map(str, ans)))\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\nreadline = sys.stdin.readline\n\nINF = 10**9+7\ndef calc(n, k):\n    if k == 1:\n        return n\n    if n > 20:\n        return INF\n    return min(INF, (pow(k, n)-1)//(k-1))\n    \n\nK, N = list(map(int, readline().split()))\n\nif K%2 == 0:\n    ans = [K//2] + [K]*(N-1)\n    print((*ans))\nelse:    \n    ans = []\n    cnt = 0\n    half = True\n    for l in range(N, 0, -1):\n        clk = calc(l, K)\n        if half:\n            c = 1+K//2\n            if l%2 == 0:\n                cnt += 1\n            if clk//2 == cnt:\n                ans.append(c)\n                break\n            if clk//2 < cnt:\n                c -= 1\n                half = False\n                cnt -= clk//2 + 1\n                \n                while cnt >= clk:\n                    cnt -= clk\n                    c -= 1\n                if cnt == clk-1:\n                    ans.append(c)\n                    break\n        else:\n            c = K\n            while cnt >= clk:\n                    cnt -= clk\n                    c -= 1\n            if cnt == clk-1:\n                ans.append(c)\n                break\n        ans.append(c)\n    print((*ans))\n", "# seishin.py\nK, N = list(map(int, input().split()))\nif K % 2 == 0:\n    print((*[K//2] + [K]*(N-1)))\nelse:\n    X = [(K+1)//2] * N\n    for i in range(N//2):\n        if X[-1] == 1:\n            X.pop()\n        else:\n            X[-1] -= 1\n            X.extend([K]*(N-len(X)))\n    print((*X))\n", "K,N = list(map(int,input().split()))\nif K % 2 == 0:\n    ans = [K//2]\n    for i in range(N-1):\n        ans.append(K)\nelse:\n    back = N//2\n    mid = K//2 + 1\n    ans = [mid for i in range(N)]\n    for i in range(back):\n        if ans[-1] == 1:\n            ans.pop()\n        else:\n            ans[-1] -= 1\n            while len(ans) < N:\n                ans.append(K)\nprint((' '.join(map(str,ans))))\n", "import sys\ninput = sys.stdin.readline\n\nK,N = map(int,input().split())\n\nif K % 2 == 0:\n    L = K // 2\n    R = L + 1\n    # \u5148\u982d\u306e\u6587\u5b57\u304c L \u306e\u3082\u306e\u306e\u6700\u5f8c\u3001R \u306e\u3082\u306e\u306e\u6700\u521d\u3001\u3067\u5883\u754c\n    arr = [L] + [K] * (N-1)\nelse:\n    \"\"\"\n    [3,3,3,3,3] \u3060\u3068 \u624b\u524d\u306b3 33 333 3333 \u304c\u4f59\u5206\u30022\u6b69\u623b\u308b\u3002\n    \"\"\"\n    arr = [(K+1)//2] * N\n    x = N//2# x\u6b69 \u623b\u308b\n    for i in range(x):\n        arr[-1] -= 1\n        if arr[-1] == 0:\n            arr.pop()\n            continue\n        L = len(arr)\n        if L < N:\n            arr += [K] * (N-L)\n\nanswer = ' '.join(map(str,arr))\nprint(answer)", "import math\n\n\ndef main(K, N):\n    ans = []\n\n    if K % 2 == 0:\n        for i in range(N):\n            if i == 0:\n                ans.append(K // 2)\n            else:\n                ans.append(K)\n    elif K == 1:\n        n2 = math.ceil(N / 2)\n        for i in range(n2):\n            ans.append(1)\n    else:\n        K2 = math.ceil(K / 2)\n        ans = [K2] * N\n        n = N // 2\n        for i in range(n):\n            if ans[-1] == 1:\n                ans.pop()\n            else:\n                ans[-1] -= 1\n                while len(ans) < N:\n                    ans.append(K)\n\n    return ' '.join(map(str, ans))\n\n\nK, N = list(map(int, input().split()))\nprint((main(K, N)))\n", "a,n=map(int,input().split())\nif a%2==0:\n    print(*[a//2]+[a]*(n-1))\nelse:\n    d=[(a+1)//2]*n\n    for i in range(n//2):\n        if d[-1]==1:\n            d.pop()\n        else:\n            d[-1]-=1\n            d.extend([a]*(n-len(d)))\n    print(\" \".join(str(i)for i in d))", "k, n = map(int, input().split())\nif k % 2 == 0:\n    print(k // 2, end=\" \")\n    for i in range(n - 1):\n        print(k, end=\" \")\nelse:\n    l = [(k + 1) // 2 for i in range(n)]\n    for i in range(n // 2):\n        if l[-1] == 1:\n            l.pop()\n        else:\n            l[-1] -= 1\n            for j in range(n - len(l)):\n                l.append(k)\n    print(*l, sep=\" \")", "k,n = map(int,input().split())\nif k%2 == 0:\n  ans = [k//2]+[k]*(n-1)\nelse:\n  t = n//2\n  ans = [k//2+1]*n\n  for i in range(t):\n    if ans[-1] == 1:\n      ans.pop()\n    else:\n      ans[-1] -= 1\n      while len(ans) < n:\n        ans.append(k)\nprint(*ans)", "import sys\nsys.setrecursionlimit(10**6)\nk, n = map(int, input().split())\n\ndef calc_x(K, N):\n\treturn (pow(K, N+1)-K) // (K-1)\ndef lexico(K, N, X):\n\t#print(K, N, X)\n\tnonlocal ans\n\tif X == 0:\n\t\treturn\n\tq = (calc_x(K, N-1)+1)\n\tif N > 1:\n\t\tans.append((X//q) + 1)\n\telse:\n\t\tans.append((X//q))\n\tlexico(K, N-1, (X-1)%q)\n\nif k == 1:\n\tprint(*[1 for _ in range((n+1)//2)])\nelif n == 1:\n\tprint((k+1)//2)\nelif k%2 == 0:\n\tans = [k//2] + [k] * (n-1)\n\tprint(*ans)\nelse:\n\tif n%2 == 1:\n\t\tcur, i = 1, n\n\telse:\n\t\tcur, i = 0, n\n\twhile cur <= i:\n\t\ti -= 1\n\t\tcur += pow(k, n-i)\n\tans = [(k+1)//2] * i\n\tind = (cur-i) // 2\n\tlexico(k, n-i, ind)\n\tprint(*ans)", "K, N = map(int, input().split())\nif K % 2 == 0:\n  print(K // 2, end = ' ')\n  for i in range(1, N):\n    if i != N - 1:\n      print(K, end = ' ')\n    else:\n      print(K)\nelse:\n  def superlist(L, n):\n    if n % 2 == 1:\n      return [L // 2 + 1] + superlist(L, n-1)\n    else:\n      Ax = [L // 2 + 1 for i in range(n)]\n      j = n - 1\n      for i in range(n // 2):\n        Ax[j] -= 1\n        if Ax[j] == 0:\n          j -= 1\n        else:\n          for m in range(j + 1, n):\n            Ax[m] = L\n          j = n - 1\n      return Ax\n  if K == 1:\n    for i in range((N - 1) // 2 + 1):\n      if i != (N - 1) // 2:\n        print(1, end = ' ')\n      else:\n        print(1)\n  else:\n    A = superlist(K, N)\n    for _ in range(N):\n      if _ != N - 1 and A[_] != 0:\n        print(A[_], end = ' ')\n      elif _ == N - 1 and A[_] != 0:\n        print(A[_])", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\n\ndef main():\n    k,n=MI()\n    end = n - 1\n    if k%2:\n        ans=[k//2+1]*n\n        for _ in range(n//2):\n            if ans[end]==1:\n                end-=1\n            else:\n                ans[end]-=1\n                if end!=n-1:\n                    for i in range(end+1,n):\n                        ans[i]=k\n                    end=n-1\n    else:\n        ans=[k//2]+[k]*(n-1)\n    print(*ans[:end+1])\n\nmain()", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nsys.setrecursionlimit(10**5)\n\nk,n = list(map(int, read().split()))\n\nif k%2==0:\n    print((*([k//2]+[k]*(n-1))))\n    return\n\nif k==1:\n    print((*[1]*((n+1)//2)))\n    return\n\nans = [(k+1)//2]*n\nd = 0\ndef f(k,i,d):\n    # d <= 1+k+...+k^i?\n    v = 1\n    for j in range(i):\n        v *= k\n        v += 1\n        if v > d: return True\n    return False\n\ndef g(k,i):\n    # 1+k+...+k^i\n    v = 1\n    for j in range(i):\n        v *= k\n        v += 1\n    return v\n    \nfor i in range(1,n):\n    if f(k,n-i-1,d):\n        d += 1\n        continue\n    \"\"\"\n    \u4ee5\u4e0b\u3000300000 >= d >= 1+k+...+k^(n-i-1)\n    i \u756a\u76ee\u306e\u9805\u304b\u3089\u771f\u3093\u4e2d\u306b\u306a\u3089\u306a\u3044    \n    v \u756a\u76ee\u3092\u76ee\u6307\u3059\n    \"\"\"\n    v = (g(k,n-i)+d+1)//2 - d - 1\n    \n    for j in range(i,n):\n        #print(v)\n        if v==0:\n            ans[j] = 0\n            continue\n\n        p = g(k,n-j-1)\n        q = (v-1)//p \n        #print(v,j,p,q)\n        \n        ans[j] = q+1\n        v -= 1+q*p        \n\n\n\n    \n    break\n\n\nwhile ans[-1]==0:\n    ans.pop()\nprint((*ans))\n\n\n\n\n\n\n\n", "N,K=map(int,input().split())\n#1 2 3...N\nif N%2==0:\n  L=[str(N)]*K\n  L[0]=str(N//2)\n  print(\" \".join(L))\n  return\n#L[0]=N//2+1\n#N//2\u306e\u305a\u308c\uff1f\nL=[(N//2)+1]*K\nfor i in range(K//2):\n  if L[-1]==1:\n    L.pop(-1)\n  elif len(L)!=K:\n    L[-1]-=1\n    L+=[N]*(K-len(L))\n  else:\n    L[-1]-=1\nL=list(map(str,L))\nprint(\" \".join(L))"]