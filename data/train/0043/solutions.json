["def check(M):\n    sm = 0\n    for i in range(n):\n        if a[i] > M:\n            sm += b[i]\n    return sm <= M\n\n\ngans = []\nfor _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    L = 0\n    R = max(a)\n    while R - L > 1:\n        M = (L + R) // 2\n        if check(M):\n            R = M\n        else:\n            L = M\n    gans.append(R)\nprint(*gans, sep='\\n')\n", "def helper(m):\n\ts = 0\n\tfor i in range(len(a)):\n\t\tif a[i] > m:\n\t\t\ts += b[i]\n\treturn s <= m\n\nfor _ in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\tb = list(map(int, input().split()))\n\tl, r = 1, 10**9\n\n\twhile l < r:\n\t\tmid = l + (r-l)//2\n\t\ttemp = helper(mid)\n\n\t\tif temp:\n\t\t\tr = mid\n\t\telse:\n\t\t\tl = mid+1\n\tprint(l)\n\n\n", "import sys\ninput=sys.stdin.readline\ndef f(x):\n    ans=0\n    for i in range(n):\n        if(a[i]<=x):\n            continue\n        ans+=b[i]\n    if(ans<=x):\n        return 1\n    return 0\ndef bsearch(l,r):\n    m=(l+r)//2\n    if(f(m)):\n        if(f(m-1)==0):\n            return m\n        return bsearch(l,m-1)\n    return bsearch(m+1,r)\nt=int(input())\nfor you in range(t):\n    n=int(input())\n    l=input().split()\n    a=[int(i) for i in l]\n    l=input().split()\n    b=[int(i) for i in l]\n    print(bsearch(0,10**9+5))\n", "for _ in range(int(input())):\n\t n = int(input())\n\t a = [*list(map(int, input().split()))]\n\t b = [*list(map(int, input().split()))]\n\t lo = 0\n\t hi = sum(a)\n\t while lo < hi:\n\t \tmid = (lo + hi) // 2\n\t \tif sum(y if x > mid else 0 for x,y in zip(a,b)) <= mid:\n\t \t\thi = mid\n\t \telse:\n\t \t\tlo = mid + 1\n\t print(lo)\n", "def f(aa, bb, target):\n    total = 0\n    for i in range(len(aa)):\n        if aa[i] > target:\n            total += bb[i]\n\n    return total <= target\n\n\nt = int(input())\n\nfor case in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    low = 1\n    high = 1000000000\n\n    while low < high:\n        mid = (low + high) // 2\n        res = f(a, b, mid)\n        if res:\n            # mid is possible\n            high = mid\n        else:\n            low = mid + 1\n\n    print(low)\n", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\n\nT=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a=[int(x) for x in input().split()]\n    b=[int(x) for x in input().split()]\n    low=0\n    high=max(a)\n    ans=max(a)\n    while(low<=high):\n        mid=(low+high)>>1\n        tot=0\n        for i in range(0,len(a)):\n            if(a[i]>mid):\n                tot+=b[i]\n\n        if(tot<=mid):\n            ans=min(ans, mid)\n            high=mid-1\n        else:\n            low=mid+1\n    print(ans)\n            \n", "\nimport sys\n\ndef input():\n    \n    return sys.stdin.readline()\n    \n    \nfor _ in range(int(input())):\n    \n    n = int(input())\n    \n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    \n    x = 10 ** 9\n    y = 0\n    while x > y + 1:\n        \n        z = (x + y) // 2\n        \n        t = 0\n        \n        for i in range(n):\n            if A[i] > z:\n                t += B[i]\n        \n        if t > z:\n            y = z\n        \n        else:\n            x = z\n            \n    print(x)\n    \n        \n", "import sys\nimport math\ndef II():\n\treturn int(sys.stdin.readline())\n \ndef LI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef MI():\n\treturn list(map(int, sys.stdin.readline().split()))\n \ndef SI():\n\treturn sys.stdin.readline().strip()\nt = II()\nfor q in range(t):\n\tn = II()\n\ta = LI()\n\tb = LI()\n\tb = sorted(enumerate(b), key=lambda x: a[x[0]])\n\tb = [i[1] for i in b]\n\ta.sort()\n\tx = []\n\ts = 0\n\tfor i in range(n-1,-1,-1):\n\t\ts+=b[i]\n\t\tx.append(s)\n\tx = x[:][::-1]\n\tans = s\n\tfor i in range(n):\n\t\tif i == n-1:\n\t\t\tans = min(ans,a[i])\n\t\telse:\n\t\t\tans = min(ans,max(a[i],x[i+1]))\n\tprint(ans)\n", "def read_generator():\n    while True:\n        tokens = input().split(' ')\n        for t in tokens:\n            yield t\n\nreader = read_generator()\n\ndef readword():\n    return next(reader)\n\ndef readint():\n    return int(next(reader))\n\ndef readfloat():\n    return float(next(reader))\n\ndef readline():\n    return input()\n\ndef solve(a, b, n):\n    l = 1\n    r = 10 ** 9\n\n    while r - l > 1:\n        t = (l + r) // 2\n        if possible(a, b, n, t):\n            r = t\n        else:\n            l = t\n\n    if possible(a, b, n, l):\n        return l\n    return r\n\n\ndef possible(a, b, n, t):\n    s = 0\n    for i in range(n):\n        if a[i] > t:\n            s += b[i]\n    return s <= t\n\ntests = readint()\n\nfor t in range(tests):\n    n = readint()\n    a = [readint() for _ in range(n)]\n    b = [readint() for _ in range(n)]\n    print(solve(a, b, n))", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    b = [int(i) for i in input().split()]\n    times = list(zip(a, b))\n    times.sort()\n    # print(times)\n    pickup_time = sum(b)\n    best_time = pickup_time\n    for num_deliveries in range(1, n+1):\n        pickup_time -= times[num_deliveries-1][1]\n        delivery_time = times[num_deliveries-1][0]\n        best_time = min(best_time, max(pickup_time, delivery_time))\n        if pickup_time < delivery_time:\n            break\n    print(best_time)", "def xxx(x):\n    nonlocal a,b\n    res=0\n    for i in range(len(a)):\n        if a[i]>x:\n            res+=b[i]\n    if res<=x:\n        return True\n    else:\n        return False\n\nfor i in range(int(input())):\n    n=int(input())\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    i1=0\n    i2=sum(b)\n    while i2-i1>1:\n        m=(i1+i2)//2\n        if xxx(m):\n            i2=m\n        else:\n            i1=m\n    print(i2)\n    \n        \n            \n        \n"]