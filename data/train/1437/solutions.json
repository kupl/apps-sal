["import math\ndef findnumber(l,n):\n    l.sort()\n    x = l[0] * l[-1]\n    vec = []\n    i = 2\n    while (i*i)<=x:\n        if x%i==0:\n            vec.append(i)\n            if x//i !=i:\n                vec.append(x//i)\n        i = i + 1\n    vec.sort()    \n    if len(vec)!=n:\n        return -1\n    else:\n        j = 0\n        for it in range(n):\n            if(l[j] != vec[it]):\n                return -1\n            else:\n                j += 1\n    return x\ndef __starting_point():\n    t = int(input())\n    while t:\n        n = int(input())\n        arr = list(map(int,input().split()))\n        n = len(arr)\n        print(findnumber(arr,n))\n        print()\n        t=t-1\n__starting_point()", "from math import  ceil,sqrt,floor\r\nfor _ in range(int(input())):\r\n    n=int(input())\r\n    a=list(map(int,input().split()))\r\n    a.sort()\r\n    x=a[0]*a[n-1]\r\n    div=[]\r\n    for i in range(2,floor(sqrt(x))+1):\r\n        if  x%i==0:\r\n            div.append(i)\r\n            y=x//i\r\n            if i!=y:\r\n                div.append(y)\r\n    div.sort()\r\n   ## print(div)\r\n    if a==div:\r\n        print(x)\r\n    else:\r\n        print(-1)", "ddd = 0\r\n\r\n\r\ndef prime(n):\r\n    if n < 2:\r\n        return []\r\n    else:\r\n        n += 1\r\n        save = [True] * (n // 2)\r\n        for i in range(3, int(n ** 0.5) + 1, 2):\r\n\r\n            if save[i // 2]:\r\n                k = i * i\r\n                save[k // 2::i] = [False] * ((n - k - 1) // (2 * i) + 1)\r\n    return [2] + [2 * i + 1 for i in range(1, n // 2) if save[i]]\r\n\r\n\r\npp = prime(1000000)\r\n\r\n\r\ndef decom(x):\r\n    nns = 0\r\n    arrr = 0\r\n    answer = 1\r\n    while (x != 1):\r\n        nonlocal ddd\r\n        ddd += 1\r\n        while (x % pp[nns] == 0):\r\n            x = x / pp[nns]\r\n            arrr += 1\r\n        if arrr != 0:\r\n            answer = answer * (arrr + 1)\r\n            arrr = 0\r\n        nns += 1\r\n    return answer - 2\r\n\r\n\r\nrr = int(input())\r\np = 0\r\nfor i in range(rr):\r\n    n = int(input())\r\n    arr = list(map(int, input().split()))\r\n\r\n    arr.sort()\r\n\r\n    ss = arr[0] * arr[n - 1]\r\n    f = 0\r\n    for i in range(n):\r\n        ddd += 1\r\n        if arr[i] * arr[n - 1 - i] != ss:\r\n            f = 1\r\n            break\r\n    if decom(ss) != n:\r\n        f = 1\r\n    if f == 1:\r\n        print(-1)\r\n    else:\r\n        print(ss)", "# your code goes here\nimport math\ndef isp(n):\n\ti=2\n\tj=math.sqrt(n)\n\twhile i<=j:\n\t\tif n%i==0:\n\t\t\tbreak\n\t\ti+=1\n\treturn i>j\nt=int(input())\nwhile t>0:\n\tn=int(input())\n\tarr=list(map(int,input().split()))\n\tarr.sort()\n\tlst=[0]*1000001\n\tans=1\n\tk=0\n\tfor x in arr:\n\t\tif(isp(x)):\n\t\t\tif lst[x]==0:\n\t\t\t\tlst[x]=1\n\t\t\t\tans*=x\n\t\t\telse:\n\t\t\t    k+=1\n\t\t\t    break\n\t\telse:\n\t\t\ti=2\n\t\t\tj=math.sqrt(x)\n\t\t\twhile i<=j:\n\t\t\t\tif x%i==0:\n\t\t\t\t\tif lst[i]==0 or lst[x//i]==0:\n\t\t\t\t\t\tbreak\n\t\t\t\ti+=1\n\t\t\tif i<=j:\n\t\t\t\tk+=1\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t    if lst[x]==0:\n\t\t\t        lst[x]=1\n\t\t\t        ans*=x//math.gcd(ans,x)\n\t\t\t    else:\n\t\t\t\t    k+=1\n\t\t\t\t    break\n\t\t\t\t\n\tif k:\n\t\tprint(-1)\n\telse:\n\t\tif ans==arr[n-1]:\n\t\t\tp=ans\n\t\t\twhile p%arr[0]==0:\n\t\t\t\tp//=arr[0]\n\t\t\tif p==1:\n\t\t\t\tans*=arr[0]\n\t\t\t\tprint(ans)\n\t\t\telse:\n\t\t\t\tprint(-1)\n\t\telse:\n\t\t\tprint(ans)\n\tt-=1", "import math\n\ndef factorialToNum(N, n):\n\tN.sort()\n\tt = N[0]*N[n-1]\n\tL = []\n\ti = 2\n\n\twhile(i * i <= t):\n\t\tif(t % i == 0):\n\t\t\tL.append(i)\n\t\t\tif ((t//i) != i):\n\t\t\t\tL.append(t//i)\n\t\ti += 1\n\n\tL.sort()\n\n\tif(len(L) != n):\n\t\treturn -1\n\telse:\n\t\tj = 0\n\t\tfor it in range(n):\n\t\t\tif(N[j] != L[it]):\n\t\t\t\treturn -1\n\t\t\telse:\n\t\t\t\tj += 1\n\treturn t\n\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input()) \n    N = list(map(int, input().strip().split(' ')))\n    print(factorialToNum(N, n))\n", "# cook your dish here\nimport math\nfor _ in range(int(input())):\n    input()\n    l=list(map(int,input().split(\" \")))\n    l.sort()\n    i=0\n    j=len(l)-1\n    n= -1\n    f=True\n    while i<=j:\n        if i==0:\n            n=l[i]*l[j]\n        elif l[i]*l[j]!=n:\n            f=False\n            break\n        i+=1\n        j-=1\n        \n    j=len(l)\n    for i in range(2,int(math.sqrt(n)+1)):\n        if n%i==0:\n            if n//i==i:\n                j-=1\n            else:\n                j-=2\n    \n    if f and j==0:\n        print(n)\n    else:\n        print(-1)\n    \n    \n", "# cook your dish here\nimport math\n \n \ndef findX(list, int):\n    # Sort the given array\n    list.sort()\n \n    # Get the possible X\n    x = list[0]*list[int-1]\n \n    # Container to store divisors\n    vec = []\n \n    # Find the divisors of x\n    i = 2\n    while(i * i <= x):\n        # Check if divisor\n        if(x % i == 0):\n            vec.append(i)\n            if ((x//i) != i):\n                vec.append(x//i)\n        i += 1\n \n    # sort the vec because a is sorted\n        # and we have to compare all the elements\n    vec.sort()\n    # if size of both vectors is not same\n    # then we are sure that both vectors\n    # can't be equal\n    if(len(vec) != int):\n        return -1\n    else:\n        # Check if a and vec have\n        # same elements in them\n        j = 0\n        for it in range(int):\n            if(list[j] != vec[it]):\n                return -1\n            else:\n                j += 1\n    return x\n \n \n# Driver code\ntry:\n    \n    m = int(input())\n    for i in range (m):\n        n = int(input())\n        x = list(map(int, input().split()))\n \n\n        print(findX(x, n))\nexcept EOFError as e: \n    print(e)\n", "# cook your dish here\ndef fun(l, z):\n    l.sort()\n    x = l[0]*l[z-1]\n    temp = []\n    i = 2\n    while(i * i <= x):\n        if(x % i == 0):\n            temp.append(i)\n            if ((x//i) != i):\n                temp.append(x//i)\n        i += 1\n    temp.sort()\n    if(len(temp) != z):\n        return -1\n    else:\n        j = 0\n        for k in range(z):\n            if(temp[j] != temp[k]):\n                return -1\n            else:\n                j += 1\n    return x\nfor i in range(int(input())):\n  n = int(input())\n  arr = list(map(int,input().split(' ')))\n  print(fun(arr,n))", "def solve():\r\n    x = a[0] * a[-1]\r\n\r\n    vec = []\r\n    i = 2\r\n    while i * i <= x:\r\n        if x % i == 0:\r\n            vec.append(i)\r\n            if (x // i) != i:\r\n                vec.append(x // i)\r\n        i += 1\r\n\r\n    vec.sort()\r\n\r\n    if len(vec) != n:\r\n        return -1\r\n    else:\r\n        j = 0\r\n        for it in range(n):\r\n            if a[j] != vec[it]:\r\n                return -1\r\n            else:\r\n                j += 1\r\n\r\n    return x\r\n\r\nfor _ in range(int(input())):\r\n    n = int(input())\r\n    a = sorted(map(int, input().split()))\r\n\r\n    print(solve())\r\n", "import math\n\n\ndef findX(list, int):\n\n\tlist.sort()\n\n\tx = list[0]*list[int-1]\n\n\tvec = []\n\n\ti = 2\n\twhile(i * i <= x):\n\n\t\tif(x % i == 0):\n\t\t\tvec.append(i)\n\t\t\tif ((x//i) != i):\n\t\t\t\tvec.append(x//i)\n\t\ti += 1\n\n\tvec.sort()\n\n\tif(len(vec) != int):\n\t\treturn -1\n\telse:\n\t\tj = 0\n\t\tfor it in range(int):\n\t\t\tif(a[j] != vec[it]):\n\t\t\t\treturn -1\n\t\t\telse:\n\t\t\t\tj += 1\n\treturn x\n\n\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    print(findX(a, n))\n\n\n   \n"]