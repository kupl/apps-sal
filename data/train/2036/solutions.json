["import sys\ninput = sys.stdin.readline\n\nn,k=list(map(int,input().split()))\nif k==0:\n    print(0)\n    return\n\nA=sorted(map(int,input().split()))\n\n# DP[UL][n][left]\n# [left*pow(2,n),left*pow(2,n)+pow(2,n))\u306e\u9593\u306e\u30c1\u30fc\u30e0\u3067,\n# \u30d5\u30a1\u30f3\u306e\u30c1\u30fc\u30e0\u304c\n# UL=0: upper\u3067\u3082lower\u3067\u3082\u52dd\u3061\u6b8b\u3063\u3066\u3044\u308b\n# UL=1: upper\u3067\u306e\u307f\u52dd\u3061\u6b8b\u3063\u3066\u3044\u308b\n# UL=2: lower\u3067\u306e\u307f\u52dd\u3061\u6b8b\u3063\u3066\u3044\u308b\n# \u3068\u304d\u306e\u3001\u305d\u3053\u307e\u3067\u306e\u30d5\u30a1\u30f3\u306e\u30c1\u30fc\u30e0\u306e\u8a66\u5408\u6570\u306e\u6700\u5927\u5024.\n\nDP=[[[0]*((1<<n)+2) for i in range(n+1)] for UL in range(3)]\n\nfor i in range(k):\n    if A[i]%2==1:\n        DP[1][1][A[i]]=1\n        DP[2][1][A[i]]=1\n    else:\n        DP[1][1][A[i]-1]=1\n        DP[2][1][A[i]-1]=1\n\n    if i<k-1 and A[i]%2==1 and A[i+1]==A[i]+1:\n        DP[0][1][A[i]]=1\n        \nfor i in range(2,n+1):\n    for left in range(1,(1<<n)+1,1<<i):\n\n        if DP[0][i-1][left]:\n            DP[0][i][left]=max(DP[0][i-1][left] + DP[0][i-1][left+(1<<(i-1))] + 3,DP[0][i-1][left] + DP[1][i-1][left+(1<<(i-1))] + 3,\\\n                               DP[0][i-1][left] + DP[2][i-1][left+(1<<(i-1))] + 3)\n            \n        if DP[0][i-1][left+(1<<(i-1))]:\n            DP[0][i][left]=max(DP[0][i][left], DP[0][i-1][left] + DP[0][i-1][left+(1<<(i-1))] + 3,\\\n                               DP[1][i-1][left] + DP[0][i-1][left+(1<<(i-1))] + 3,DP[2][i-1][left] + DP[0][i-1][left+(1<<(i-1))] + 3)\n\n        if DP[1][i-1][left]:\n            DP[1][i][left]=max(DP[1][i][left], DP[1][i-1][left] + 1)\n            DP[2][i][left]=max(DP[2][i][left], DP[1][i-1][left] + 2)\n\n        if DP[2][i-1][left]:\n            DP[2][i][left]=max(DP[2][i][left], DP[2][i-1][left] + 2)\n\n        if DP[1][i-1][left+(1<<(i-1))]:\n            DP[1][i][left]=max(DP[1][i][left], DP[1][i-1][left+(1<<(i-1))] + 1)\n            DP[2][i][left]=max(DP[2][i][left], DP[1][i-1][left+(1<<(i-1))] + 2)\n\n        if DP[2][i-1][left+(1<<(i-1))]:\n            DP[2][i][left]=max(DP[2][i][left], DP[2][i-1][left+(1<<(i-1))] + 2)\n\n\n        if DP[1][i-1][left] and DP[1][i-1][left+(1<<(i-1))]:\n            DP[0][i][left]=max(DP[0][i][left], DP[1][i-1][left] + DP[1][i-1][left+(1<<(i-1))] + 2)\n\n        if DP[1][i-1][left] and DP[2][i-1][left+(1<<(i-1))]:\n            DP[0][i][left]=max(DP[0][i][left], DP[1][i-1][left] + DP[2][i-1][left+(1<<(i-1))] + 3)\n\n        if DP[2][i-1][left] and DP[1][i-1][left+(1<<(i-1))]:\n            DP[0][i][left]=max(DP[0][i][left], DP[2][i-1][left] + DP[1][i-1][left+(1<<(i-1))] + 3)\n\n        if DP[2][i-1][left] and DP[2][i-1][left+(1<<(i-1))]:\n            DP[2][i][left]=max(DP[2][i][left], DP[2][i-1][left] + DP[2][i-1][left+(1<<(i-1))] + 2)\n\n\n\"\"\"                          \nfor i in range(n+1):\n    print(DP[0][i])\nprint()\nfor i in range(n+1):\n    print(DP[1][i])\nprint()\nfor i in range(n+1):\n    print(DP[2][i])\nprint()\nfor i in range(n+1):\n    print(DP[0][0][i])\n\"\"\"\nprint(max(DP[0][n][1],DP[1][n][1],DP[2][n][1])+1)\n"]