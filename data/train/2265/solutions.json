["import sys\n\n\ndef solve(ppp):\n    section_start = -1\n    moved_left_max = 0\n    moved_right_max = 0\n    prev = True\n\n    for i, p in enumerate(ppp, start=1):\n        if i == p:\n            if prev:\n                moved_left_max = 0\n                moved_right_max = 0\n                section_start = -1\n            prev = True\n        else:\n            if not prev:\n                if moved_left_max > i - 1:\n                    return False\n\n                moved_left_max = 0\n                moved_right_max = 0\n                section_start = i\n\n            if section_start == -1:\n                section_start = i\n\n            if i > p:\n                if section_start > p:\n                    return False\n                if moved_right_max > p:\n                    return False\n                moved_right_max = p\n            else:\n                if moved_left_max > p:\n                    return False\n                moved_left_max = p\n\n            prev = False\n    return True\n\n\nn, *ppp = list(map(int, sys.stdin))\nprint(('Yes' if solve(ppp) else 'No'))\n", "def Split(a):\n    no = []\n    for i, x in a:\n        if no and (i == x) == (no[-1][0] == no[-1][1]):\n            yield no\n            no = []\n        no.append((i, x))\n    yield no\n\nfor sq in Split((i + 1, int(input())) for i in range(int(input()))):\n    tb = [0, 0]\n    for np, goal in sq:\n        if goal != np:\n            if goal < tb[np < goal] or goal > sq[-1][0] or goal < sq[0][0]:\n                print(\"No\")\n                return\n            tb[np < goal] = goal\nprint(\"Yes\")", "def Split(a):\n    no = []\n    for i, x in a:\n        if no:\n            is_ok = i == x\n            la_ok = no[-1][0] == no[-1][1]\n            if is_ok == la_ok:\n                yield no\n                no = []\n        no.append((i, x))\n    yield no\n\nn = int(input())\np = list(enumerate((int(input()) for i in range(n)), 1))\nfor sq in Split(p):\n    tl = tr = 0\n    for np, goal in sq:\n        if goal > np:\n            if goal < tr or goal > sq[-1][0]:\n                print(\"No\")\n                return\n            tr = goal\n        elif goal < np:\n            if goal < tl or goal < sq[0][0]:\n                print(\"No\")\n                return\n            tl = goal\nprint(\"Yes\")"]