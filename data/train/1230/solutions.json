["dic = {}\n#num = \"1\"\n#def tonum(num):\n#   res=0\n#   for i in range(len(num)):\n#       res = 2*res + int(num[i])\n#   return res\n\n#for i in range(64):\n#   number = tonum(num)\n#   dic[num] = []\n#   num = num+\"0\"\n\nn = int(input())\nflag=0\nif n >= 68:\n inp = input()\n print(\"Yes\")\nelse:\n inp = [int(x) for x in input().split()]\n for i in range(len(inp)-1):\n  for j in range(i+1,len(inp)):\n   xor = inp[i]^inp[j]\n   if xor in list(dic.keys()):\n    for pair in dic[xor]:\n     (x,y) = pair\n     if x != i and y!=j and x!=j and y!=i:\n      flag = 1\n      break\n\n    dic[xor].append((i,j))\n   else:\n    dic[xor] = []\n    dic[xor].append((i,j))\n   if flag is 1:\n    break\n  if flag is 1:\n   break\n\n if flag is 1:\n  print(\"Yes\")\n else:\n  print(\"No\")\n \n \n", "n=int(input())\nhit=list(map(int,input().split()))\n\nd={}\nfor i in range(1,n):\n x1,x2=hit[i],hit[i-1]\n try: d[x1^x2]+=[i]\n except: d[x1^x2]=[i]\n\ndone=False\nfor i in d:\n x=d[i]\n if len(x)>2: done=True; break\n elif len(x)==2:\n  x=sorted(x)\n  if x[0]!=x[1]-1: done=True; break\n\nif done: print('Yes')\nelse:\n v={}\n for i in hit:\n  try: v[i]+=1\n  except: v[i]=1\n x={}\n h=list(v.values())\n for i in h:\n  try: x[i]+=1\n  except: x[i]=1\n if ( 2 in x and x[2]==2 ) or ( 4 in x and x[4]==1 ): print('Yes')\n else: print('No')\n", "#!/usr/bin/python\nfrom math import log\nflips = {}\n\ndef get_flip(a,b):\n temp = a^b\n ans = log(temp)/log(2)\n return int(ans)\n\ndef main():\n n = input()\n nums = input()\n nums = [int(i) for i in nums.split()]\n l = len(nums)\n for i in range(1,l):\n  f = get_flip(nums[i-1], nums[i])\n  if f in flips:\n   if flips[f] != i-1:\n    print('Yes')\n    return\n  else:\n   flips[f] = i\n\n # now check in case of same elements\n rec = {}\n for i in nums:\n  if i in rec:\n   rec[i] += 1\n  else:\n   rec[i] = 1\n \n\n r = 0\n for i in rec:\n  if rec[i] > 1:\n   r += int(rec[i]/2)\n  if r >= 2:\n   print('Yes')\n   return\n print('No')\n return\n\n\ndef __starting_point():\n main()\n\n\n__starting_point()", "#!/usr/bin/python\nfrom math import log\nflips = {}\n\ndef get_flip(a,b):\n temp = a^b\n ans = log(temp)/log(2)\n return int(ans)\n\ndef main():\n n = input()\n nums = input()\n nums = [int(i) for i in nums.split()]\n l = len(nums)\n for i in range(1,l):\n  f = get_flip(nums[i-1], nums[i])\n  if f in flips:\n   if flips[f] != i-1:\n    print('Yes')\n    return\n  else:\n   flips[f] = i\n\n # now check in case of same elements\n rec = {}\n for i in nums:\n  if i in rec:\n   rec[i] += 1\n  else:\n   rec[i] = 1\n \n\n r = 0\n for i in rec:\n  if rec[i] > 1:\n   r += int(rec[i]/2)\n  if r == 2:\n   print('Yes')\n   return\n print('No')\n return\n\n\ndef __starting_point():\n main()\n\n\n__starting_point()", "n = int(input())\ns = input()\ns = s.split()\nd = {}\nflag = \"No\"\n\ntwo,four = 0,0\nfor i in s:\n if i in d:\n  d[i] += 1;\n  if d[i] == 2:\n   two += 1\n  elif d[i] == 4:\n   four += 1\n else:\n  d[i] = 1;\nd = {}\nif two>1 or four>0:\n flag = \"Yes\"\nelse:\n \n for i in range(n-1):\n  ex = int(s[i]) ^ int(s[i+1])\n  if ex in d:\n   d[ex].append(i)\n   if d[ex][-1] - d[ex][0] > 1:\n    flag = \"Yes\"\n    break;  \n  else:\n   d[ex] = [i]\nprint(flag)\n", "n = int(input())\ns = input()\ns = s.split()\nd = {}\nflag = \"No\"\n\ntwo,four = 0,0\nfor i in s:\n if i in d:\n  d[i] += 1;\n  if d[i] == 2:\n   two += 1\n  elif d[i] == 4:\n   four += 1\n else:\n  d[i] = 1;\n\nif two>1 or four>0:\n flag = \"Yes\"\nelse:\n for i in range(n-1):\n  ex = int(s[i]) ^ int(s[i+1])\n  if ex in d:\n   d[ex].append(i)\n   if d[ex][-1] - d[ex][0] > 1:\n    flag = \"Yes\"\n    break;  \n  else:\n   d[ex] = [i]\nprint(flag)\n", "n=int(input())\nhit=list(map(int,input().split()))\n\nd={}\nfor i in range(1,n):\n x1,x2=hit[i],hit[i-1]\n try: d[x1^x2]+=[i]\n except: d[x1^x2]=[i]\n\ndone=False\nfor i in d:\n x=d[i]\n if len(x)>2: done=True; break\n elif len(x)==2:\n  x=sorted(x)\n  if x[0]!=x[1]-1: done=True; break\n\nif done: print('Yes')\nelse:\n v={}\n for i in hit:\n  try: v[i]+=1\n  except: v[i]=1\n x={}\n h=list(v.values())\n for i in h:\n  try: x[i]+=1\n  except: x[i]=1\n if ( 2 in x and x[2]==2 ) or ( 4 in x and x[4]==1 ): print('Yes')\n else: print('No')\n", "def digit(x):\n ans = None\n for i in range(64):\n  if x&(1<<i): \n   return i\n  \n#data = open(\"P7.txt\")\nn = int(input())\n#n = int(data.readline())\nif n<4:\n print(\"No\")\n \nelse:\n count = [0]*65\n nums = {}\n vals = list(map(int,input().split()))\n #vals = map(long,data.readline().split())\n nums[vals[0]] = 1\n prebit = 999999999\n \n for i in range(1,n):\n  bit = digit(vals[i]^vals[i-1])\n  if bit!=prebit:\n   count[bit] += 1\n   prebit = bit\n  try:\n   nums[vals[i]] += 1\n  except:\n   nums[vals[i]] = 1\n  \n m1 = max(count)\n m2 = max(nums.values())\n if m1>=2 or m2>=4: print(\"Yes\")\n else: \n  num_doubles = 0\n  for val in list(nums.values()):\n   if val >= 2:\n    num_doubles += 1\n  if num_doubles >= 2:\n   print(\"Yes\")\n  else:\n   print(\"No\")", "import sys\n\nn = int(input())\na = [0]*n\nif (n > 300):\n print('Yes')\n return\ns = input().split()\nfor i in range(n):\n a[i] = int(s[i]) \na.sort()\nfor i in range(n-3):\n for j in range(i+1, n-2):\n  for k in range(j+1, n-1):\n   x = (a[i]^a[j])^a[k]\n   l = k + 1\n   r = n - 1\n   while r - l > 1:\n    c = ( r + l ) / 2\n    if a[c] > x:\n     r=c\n    else:\n     l=c\n   if ((l > k and a[l] == x) or (a[r]==x)):\n    print('Yes')\n    return\nprint('No')"]