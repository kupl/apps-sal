["fact = []\nfact.append(1)\nfor i in range(1,100001):\n fact.append((i*fact[i-1])%1000000007)\n \ndef power(a,b,p):\n x=1\n y=a\n while(b>0):\n  if(b%2 == 1):\n   x=(x*y)\n   if(x>p):\n    x=x%p\n  y=(y*y)\n  if(y>p):\n   y=y%p\n  b=b/2\n \n return x\n \ndef inverse(N,p):\n return power(N,p-2,p)\n \ndef combination(N,R,p):\n return (fact[N]*((inverse(fact[R],p)*inverse(fact[N-R],p))%p))%p\n \nT = int(input())\n \nfor i in range(T):\n N,K = [int(y) for y in input().split()]\n A = [int(arr) for arr in input().split()]\n numZ = 0;\n answer = 0;\n p = 1000000007\n for j in range(len(A)):\n  if(A[j] == 0):\n   numZ = numZ + 1\n N = N - numZ\n if(numZ > 0):\n  if(N > K):\n   temp = K;\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 1\n  else:\n   temp = N\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 1\n else:\n  if(N > K):\n   temp = K;\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 2\n  else:\n   temp = N\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 2\n print(answer%1000000007)", "import math\n\ndef nCr(n,r):\n f = math.factorial\n return f(n) / f(r) / f(n-r)\n\n\nt = int(input())\n\nfor i in range(0,t):\n a = input().split()\n n = int(a[0])\n k = int(a[1])\n\n arr = input().split()\n\n arr = [int(x) for x in arr]\n\n count = 0\n\n for j in arr:\n  if j == 0:\n   count = count + 1\n\n ways = 0\n\n\n if(count == 0):\n  if(k%2 == 0):\n   l=0\n   while l<=min(n,k):\n    ways = ways + nCr(n,l)\n    l = l+2\n\n  else:\n   l = 1\n   while l<=min(n,k):\n    ways = ways + nCr(n,l)\n    l = l+2\n\n  print(ways)\n\n else:\n  n = n-count\n  l = 0\n\n  while l <= min(n,k):\n   ways = ways + nCr(n,l)\n   l = l+1\n\n  print(ways)\n", "mod = 10**9 + 7\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n print(ans) ", "mod = 10**9 + 7\nmod2 = 10**100\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "mod = 10**9 + 7\nmod2 = 10**72\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "mod = 10**9 + 7\nmod2 = 10**50\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "mod = 10**9 + 7\nmod2 = 10**36\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "from math import factorial \nmod = 10**9 + 7\nmod2 = 10**36\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "from math import factorial \nmod = 10**9 + 7\nmod2 = 10**25\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "from math import factorial \nmod = 10**9 + 7\nmod2 = 10**18\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod2\n print(ans) ", "from math import factorial \nmod = 10**9 + 7\nfor t in range(int(input())):\n n, k = list(map(int, input().split()))\n a = list(map(int, input().split()))\n ans = 0\n temp = 1\n limit = min(n,k)+1\n c = a.count(0)\n if (c == 0):\n  x = k%2\n  for i in range(0, limit):\n   if (i%2 == x):\n    ans += temp\n    ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod\n else:\n  n = n-c\n  for i in range(0, limit):\n   ans += temp\n   ans %= mod\n   temp = (temp * (n-i)) / (1+i)\n   temp %= mod\n print(ans) ", "fact = []\nfor i in range(100001):\n fact.append(1)\n\ndef power(a,b,p):\n x=1\n y=a\n while(b>0):\n  if(b%2 == 1):\n   x=(x*y)\n   if(x>p):\n    x=x%p\n  y=(y*y)\n  if(y>p):\n   y=y%p\n  b=b/2\n\n return x\n\ndef inverse(N,p):\n return power(N,p-2,p)\n\ndef combination(N,R,p):\n for i in range(1,N+1):\n  fact[i] = (fact[i-1]*i)%p\n return (fact[N]*((inverse(fact[R],p)*inverse(fact[N-R],p))%p))%p\n \nT = int(input())\n\nfor i in range(T):\n N,K = [int(y) for y in input().split()]\n A = [int(arr) for arr in input().split()]\n numZ = 0;\n answer = 0;\n p = 1000000007\n for j in range(len(A)):\n  if(A[j] == 0):\n   numZ = numZ + 1\n N = N - numZ\n if(numZ > 0):\n  if(N > K):\n   temp = K;\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 1\n  else:\n   temp = N\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 1\n else:\n  if(N > K):\n   temp = K;\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 2\n  else:\n   temp = N\n   while(temp >= 0):\n    answer = answer + combination(N,temp,p)\n    temp = temp - 2\n print(answer%1000000007)", "from math import factorial\nM = 10**9+7\n\nfor t in range(int(input())):\n n, k = list(map(int,input().split()))\n a = list(map(int,input().split()))\n z = a.count(0)\n if z==0:\n  s = 0\n  x = factorial(n)\n  for i in range(k%2,min(n,k)+1,2):\n   s += ((x/factorial(i))/factorial(n-i))\n  s = s%M\n  print(s)\n else:\n  n=n-z\n  s = 0\n  x = factorial(n)\n  for i in range(0,min(n,k)+1):\n   s += ((x/factorial(i))/factorial(n-i))\n  s = s%M\n  print(s)\n", "import sys\n\ndef fun(n,x):\n res = 1\n for i in range(n, x,-1):\n  res = (res*i) % 1000000007\n return res\n\ndef degree(a,k):\n res = 1\n cur = a\n while(k):\n  if (k % 2):\n   res = (res * cur) % 1000000007\n  k /= 2\n  cur = (cur * cur) % 1000000007\n return res\n \ndef inv_fun(k):\n denom = 1\n for x in range(1, k+1, 1):\n  ti = x;\n  while(ti%1000000007 == 0):\n   ti /= 1000000007\n  denom = (denom*ti) % 1000000007\n denom = degree(denom, 1000000005) % 1000000007\n return denom\n  \ndef nCr(n,r):\n return fun(n,n-r)*inv_fun(r)\n\nT = int(input())\n\nfor x in range(T):\n N, K = [int(y) for y in input().split(\" \")]\n array = [int(t) for t in input().split(\" \")]\n count = 0\n for i in range(len(array)):\n  if(array[i] == 0):\n   count += 1\n K = min(N,K)\n if count != 0:\n  sum = 0\n  for j in range(0,min(N-count,K)+1):\n   sum += nCr(N-count,j)\n   \n elif K%2 == 0:\n  sum = 0\n  for j in range(0,K+1,2):\n   sum += nCr(N,j)\n else:\n  sum = 0\n  for j in range(1,K+1,2):\n   sum += nCr(N,j)%1000000007\n print(sum%1000000007)", "import math\nimport sys\n\ndef fun(n,x):\n res = 1\n for i in range(n, x,-1):\n  res = (res*i) %1000000007\n return res\n\ndef degree(a,k):\n res = 1\n cur = a\n while(k):\n  if (k % 2):\n   res = (res * cur) % 1000000007\n  k /= 2\n  cur = (cur * cur) % 1000000007\n return res\n \ndef inv_fun(k):\n denom = 1\n for x in range(1, k+1, 1):\n  denom = (denom*x) % 1000000007\n denom = degree(denom, 1000000005) % 1000000007\n return denom\n  \ndef nCr(n,r):\n return (fun(n,n-r)*inv_fun(r))%1000000007\n \nT = int(input())\nfor x in range(T):\n N, K = [int(y) for y in input().split(\" \")]\n array = [int(t) for t in input().split(\" \")]\n count = 0\n for i in range(len(array)):\n  if(array[i] == 0):\n   count += 1\n K = min(N,K)\n if count != 0:\n  sum = 0\n  for j in range(0,min(N-count,K)+1):\n   sum += nCr(N-count,j)\n   \n elif K%2 == 0:\n  sum = 0\n  for j in range(0,K+1,2):\n   sum += nCr(N,j)\n else:\n  sum = 0\n  for j in range(1,K+1,2):\n   sum += nCr(N,j)\n print(sum%1000000007)", "import math\nimport sys\n\ndef fun(n,x):\n res = 1\n for i in range(n, x,-1):\n  res = (res*i)%1000000007\n return res\n\ndef degree(a,k):\n res = 1\n cur = a\n while(k):\n  if (k % 2):\n   res = (res * cur) % 1000000007\n  k /= 2\n  cur = (cur * cur) % 1000000007\n return res\n \ndef inv_fun(k):\n denom = 1\n for x in range(1, k+1, 1):\n  denom = (denom*x) % 1000000007\n denom = degree(denom, 1000000005) % 1000000007\n return denom\n  \ndef nCr(n,r):\n return fun(n,n-r)*inv_fun(r)\n \nT = int(input())\nfor x in range(T):\n N, K = [int(y) for y in input().split(\" \")]\n array = [int(t) for t in input().split(\" \")]\n count = 0\n for i in range(len(array)):\n  if(array[i] == 0):\n   count += 1\n K = min(N,K)\n if count != 0:\n  sum = 0\n  for j in range(0,min(N-count,K)+1):\n   sum += nCr(N-count,j)\n   \n elif K%2 == 0:\n  sum = 0\n  for j in range(0,K+1,2):\n   sum += nCr(N,j)\n else:\n  sum = 0\n  for j in range(1,K+1,2):\n   sum += nCr(N,j)\n print(sum%1000000007)"]