["\nw, l = [int(i) for i in input().split(' ')]\narr = [int(i) for i in input().split(' ')]\n\ncummulative = [0 for i in range(len(arr) + 1)]\nfor i in range(len(arr)):\n    cummulative[i+1] = cummulative[i] + arr[i]\n\nmin_cut = 1000000009\n\nfor i in range(w - l):\n    cut = cummulative[i + l] - cummulative[i]\n    if cut < min_cut:\n        min_cut = cut\n\nprint(min_cut)\n", "Q = [int(x) for x in input().split(' ')]\nw = Q[0]\nl = Q[1]\nA = [int(x) for x in input().split(' ')]\nB = [0 for i in range(w-1)]\ni = 0\nj = 0\nfor i in range(w-1):\n\tif i<l:\n\t\tB[i]=A[i]\n\telse:\n\t\twhile j<i:\n\t\t\tif j<i-l:\n\t\t\t\tj=i-l\n\t\t\tt = min(A[i]-B[i],B[j])\n\t\t\tB[i]+=t\n\t\t\tB[j]-=t\n\t\t\tif B[j]==0:\n\t\t\t\tj+=1\n\t\t\telse:\n\t\t\t\tbreak\n\t#print(B)\n#print(A)\n#print(B)\nprint(sum(B[w-l-1:]))\n", "w, l = list(map(int, input().split()))\nj = list(map(int, input().split()))\n\nans = sum(j[0:l])\ntemp = ans\n\nfor i in range(1, w - l):\n    temp += j[i + l - 1] - j[i - 1]\n    ans = min(ans, temp)\n\nprint(ans)\n    \n    \n", "w, l = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nr = 1e18\ns = sum(a[:l])\n\nfor i in range(l, w-1):\n    r = min(s, r)\n    s += a[i]\n    s -= a[i-l]\n\nr = min(s, r)\nprint(r)\n\n", "#!/usr/bin/env python3\n\n[w, l] = list(map(int, input().strip().split()))\nais = list(map(int, input().strip().split()))\n\nwinais = [0 for _ in range(w - l)]\ns = sum(ais[:l])\nwinais[0] = s\nfor i in range(w - l - 1):\n\ts += ais[i + l] - ais[i]\n\twinais[i + 1] = s\n\nprint(min(winais))\n", "w, l = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = 0\nfor i in range(l):\n    s += a[i]\nc = 10**20 + 1\nfor i in range(l, w-1):\n    c = min(c, s)\n    s = max(0, s + a[i] - a[i-l])\nc = min(c, s)\nprint(c)", "inf = 2000000000\nw, l = list(map(int, input().split()))\naa = input().split()\n\na = [0 for i in range(w)]\ndp = [0 for i in range(w+1)]\nsu = [0 for i in range(w+1)]\n\nfor i in range(1, w):\n    a[i] = int(aa[i-1])\n\nfor i in range(1, w):\n    if i <= l :\n        dp[i] = a[i]\n    else :\n        dp[i] = min(a[i], su[i-1] - su[i-l-1])\n    su[i] = su[i-1] + dp[i]\n#    print(i, ' -- ', dp[i])\nres = inf\n\nfor i in range(l, w):\n    res = min(res, su[i] - su[i-l])\n\nprint(res)\n", "import sys\n\nw, l = [int(x) for x in input().split()]\nuse = [int(x) for x in input().split()]\nm = sum(use[0:l])\ns = m\n\nfor i in range(1, w-l):\n    s = s - use[i-1] + use[i+l-1]\n    if s < m: m = s\n\nprint(m)\n\n\n'''\nimport sys\n\nw, l = [int(x) for x in input().split()]\nuse = [int(x) for x in input().split()]\nuse.append(sys.maxsize)\ncount = [0] * (w + 1)\ncount[0] = 1\n\nfor i in range(1, w+1):\n    count[i] = min(sum(count[max(i-l,0):i]), use[i-1])\n\nprint(count[-1])\n'''\n", "w, l = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = sum(a[:l])\nr = s\n\nfor i in range(l, w-1):\n    s += a[i]\n    s -= a[i-l]\n    r = min(s, r)\n\nprint(r)\n", "def read_nums():\n    return list(map(int, input().split()))\n\nw, l = read_nums()\nrocks = read_nums()\n\ncur_sum = sum(rocks[0: l])\nmin_sum = cur_sum\nfor i in range(l, len(rocks)):\n    cur_sum -= rocks[i - l]\n    cur_sum += rocks[i]\n    min_sum = min(min_sum, cur_sum)\n\nprint(min_sum)\n", "l,w=list(map(int,input().split()))\nli=list(map(int,input().split()))\naa=[]\ntot=0\nfor i in range(l-1):\n    tot+=li[i]\n    if i>=w:\n        tot=tot-li[i-w]\n    if i>=(w-1):\n        aa.append(tot)\nprint(min(aa))\n", "input_string = input().split()\nn = int(input_string[0])\nl = int(input_string[1])\ninput_string = input().split()\nv = []\nfor i in range(0, len(input_string)):\n\tv.append(int(input_string[i]))\ndp = [0]\nfor i in range(1, len(v) + 1):\n\tdp.append(dp[i-1] + v[i-1])\nans = 1000000000000000000000000000\nfor i in range(l, len(dp)):\n\tans = min(ans, dp[i] - dp[i - l])\nprint(ans)", "w, l = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\ns = res = sum(a[:l])\nfor i in range(l, w - 1):\n    s += a[i] - a[i - l]\n    res = min(res, s)\nprint(res)\n", "import sys\nwhile True:\n\ttry:\n\t\tW, L = [int(i) for i in input().split()]\n\t\triver = [int(i) for i in input().split()]\n\n\t\tsum_seq = sum(river[:L])\n\t\tfrogs = sum_seq\n\n\t\tfor i in range(L,W-1):\n\t\t\tsum_seq = sum_seq + river[i] - river[i-L]\n\t\t\tfrogs = min(sum_seq, frogs)\n\t\tprint(frogs)\n\texcept EOFError:\n\t\treturn", "w,l=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=sum(a[:l]);r=1000000000000000000\nr=min(s,r)\nfor i in range(w-l-1):\n    s+=a[i+l]\n    s-=a[i]\n    r=min(s,r)\nprint(r)\n", "I=lambda:map(int,input().split())\nw,l=I()\na=list(I())\nc=s=sum(a[:l])\nfor i in range(w-l-1):\n    s=s-a[i]+a[i+l]\n    c=min(c,s)\nprint(c) ", "n,k=map(int,input().split())\na=list(map(int,input().split()))\ns=sum(a[:k])\nb=[]\nc=0\nb.append(s)\nfor i in range(n-k-1):\n    s=s-a[i]+a[i+k]\n    b.append(s)\nprint(min(b))", "w, l = map(int, input().split())\na = list(map(int, input().split()))\nf = s = sum(i for i in a[:l])\nfor i, b in enumerate(a[l:]):\n    s += b - a[i]\n    f = min(s, f)\nprint(f)", "w,l = list(map(int,input().split()))\na = list(map(int,input().split()))\nfor i in range(1,w-1):\n\ta[i] = a[i] + a[i-1]\nans = a[l-1]\nfor i in range (l,w-1):\n\tans = min(ans,a[i]-a[i-l])\nprint(ans)\n", "from itertools import *\nr=lambda:map(int,input().split())\nw,l=r()\nv=[0,*accumulate(r())]\nprint(min(v[i]-v[i-l] for i in range(l,w)))", "from itertools import *\nr=lambda:list(map(int,input().split()))\nw,l=r()\nv=[0,*accumulate(r())]\n# print(w,l)\n# print(v)\nprint(min(v[i]-v[i-l] for i in range(l,w)))\n", "I=lambda:map(int,input().split())\nw,l=I()\na=list(I())\nc=s=sum(a[:l])\nfor i in range(w-l-1):\n    s=s-a[i]+a[i+l]\n    c=min(c,s)\nprint(c) ", "# input segment\nw,l = list(map(int,input().split()))\na=list(map(int,input().split()))\n\n# computer minimal segemnt of length l, and a temp variable\nminsegment=s=sum(a[:l])\n\n# calculate every l segment min value,\nfor i in range(1,w-l):\n    s=s-a[i-1]+a[i+l-1]\n    minsegment = min(s,minsegment)\n\nprint(minsegment)\n", "import sys\n\ndef findMinSubSum(a, l):\n    minim = sum(a[:l])\n\n    current = minim\n    for i in range(l, len(a)):\n        current += a[i] - a[i - l]\n        minim = min(current, minim)\n\n    return minim\n\nw, l = map(int, input().split())\na = list(map(int, input().split()))\nprint(findMinSubSum(a, l))"]