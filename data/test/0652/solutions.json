["n = int(input())\npoints = [0] * n\nD = {}\nfor i in range(n):\n    points[i] = tuple(int(x) for x in input().split())\n\nfor i in range(n):\n    for j in range(i+1, n):\n        x1, y1 = points[i]\n        x2, y2 = points[j]\n        u, v = x2 - x1, y2 - y1\n        if u < 0 or u == 0 and v < 0:\n            u, v = -u, -v\n        if (u, v) in D:\n            D[(u, v)] += 1\n        else:\n            D[(u, v)] = 1\n\nS = sum(D[i] * (D[i] - 1) // 2 for i in D)\nprint(S // 2)\n                \n", "from collections import defaultdict\ndef mp():  return list(map(int,input().split()))\ndef lt():  return list(map(int,input().split()))\ndef pt(x):  print(x)\ndef ip():  return input()\ndef it():  return int(input())\ndef sl(x):  return [t for t in x]\ndef spl(x): return x.split()\ndef aj(liste, item): liste.append(item)\ndef bin(x):  return \"{0:b}\".format(x)\n\nn = it()\nP = []\nfor i in range(n):\n    a,b = mp()\n    P.append([a,b])\nMid = defaultdict(int)\nresult = 0\nfor i in range(n-1):\n    for j in range(i+1,n):\n        x,y = P[i][0]+P[j][0],P[i][1]+P[j][1]\n        result += Mid[(x,y)]\n        Mid[(x,y)] += 1\nprint(result)\n        \n        \n", "from collections import defaultdict\n    \nn=int(input())\nC=[]\ncnt=0\nD=defaultdict(int)\n\nfor i in range(n) :\n    C.append([int(i) for i in input().split()])\n\nfor i0 in range(n) :\n    x0=C[i0][0]\n    y0=C[i0][1]\n    for Dots in C[i0+1:] :\n        x=Dots[0]-x0\n        y=Dots[1]-y0\n        if x<0 :\n            x,y=-x,-y\n        elif x==0 :\n            if y<0 :\n                y=-y\n        cnt+=D[(x,y)]\n        D[(x,y)]+=1\n\nprint(int(cnt/2))", "from collections import defaultdict\n    \nn=int(input())\nC=[]\ncnt=0\nD=defaultdict(int)\n\nfor i in range(n) :\n    C.append([int(i) for i in input().split()])\n\nfor i0 in range(n) :\n    x0=C[i0][0]\n    y0=C[i0][1]\n    for Dots in C[i0+1:] :\n        x=Dots[0]-x0\n        y=Dots[1]-y0\n        if x<0 :\n            x,y=-x,-y\n        elif x==0 :\n            if y<0 :\n                y=-y\n        cnt+=D[x,y]\n        D[x,y]+=1\n\nprint(int(cnt/2))", "\n\nn = int(input())\n\nx = []\ny = []\n\n\nfor i in range(n):\n    x.append(0)\n    y.append(0)\n    x[i], y[i] = list(map(int, input().split()))\n    \n    \nfrom collections import defaultdict\ndict = defaultdict(int)\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        tx = x[i] - x[j]\n        ty = y[i] - y[j]\n        \n        if tx > 0 or tx == 0 and ty > 0:\n            tx = -tx\n            ty = -ty\n        \n        dict[(tx, ty)] += 1\n        \n        \n\n\nans = 0\n#print(dict)\nfor i in list(dict.values()):\n    ans += i * (i - 1) // 2\n    \nprint(ans // 2)\n\n\n\n\n\n\n    \n    \n\n\n\n\n", "from collections import Counter\n\n\ndef read_ints():\n    return [int(x) for x in input().split()]\n\ndef main():\n    n, = read_ints()\n    points = []\n    for i in range(0, n):\n        x, y = read_ints()\n        points.append((x, y))\n\n    c = Counter()\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            x1, y1 = points[i];\n            x2, y2 = points[j]\n            c[(x1 + x2, y1 + y2)] += 1\n    res = 0\n    for k, v in c.items():\n        res += v * (v - 1)\n    res //= 2\n    print(res)\n\n\nmain()", "from collections import *\nans=0\nd=Counter()\nn=int(input())\np=[tuple(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n  for j in range(i+1,n):\n    if p[i]<p[j]: x1,y1=p[i]; x2,y2=p[j]\n    else:x1,y1=p[j]; x2,y2=p[i]\n    x,y=x2-x1,y2-y1\n    ans+=d[(x,y)]    \n    d[(x,y)]+=1\nprint(ans//2)", "def main():\n    from collections import Counter\n    n, cnt = int(input()), Counter()\n    l = sorted((tuple(map(int, input().split())) for _ in range(n)), reverse=True)\n    for i in range(1, n):\n        x, y = l[i]\n        for j in range(i):\n            u, v = l[j]\n            cnt[u - x, v - y] += 1\n    print(sum(i * (i - 1) for i in list(cnt.values())) // 4)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    from collections import Counter\n    n, cnt, l = int(input()), Counter(), []\n    for x, y in sorted((tuple(map(int, input().split())) for _ in range(n)), reverse=True):\n        for u, v in l:\n            cnt[u - x, v - y] += 1\n        l.append((x, y))\n    print(sum(i * (i - 1) for i in list(cnt.values())) // 4)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def middle(a, b):\n    return (b[0] + a[0])/2, (b[1] + a[1])/2\n\n\ndef solve(n, points):\n    middles = dict()\n    solutions = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n\n            s = middle(points[i], points[j])\n            solutions += middles.setdefault(s, 0)\n            middles[s] += 1\n\n    return solutions\n\n\ndef __starting_point():\n    n = int(input())\n    points = list()\n    for _ in range(n):\n        points.append(tuple(map(int, input().split())))\n\n    print(solve(n, points))\n\n\n\n\n\n\n\n\n\n__starting_point()", "from collections import Counter\n\ndef main() :\n    n = int(input())\n    x = []\n    y = []\n    a = Counter()\n\n    for i in range(n) :\n        x.append(0)\n        y.append(0)\n        x[i], y[i] = list(map(int, input().split()))\n        \n    for i in range(n) :\n        for j in range(i + 1, n) :\n            a[(x[i] + x[j], y[i] + y[j])] += 1\n\n    ans = 0\n    for q, p in list(a.items()) :\n        ans += p * (p - 1)\n    ans //= 2\n\n    print(ans)\n\nmain()\n", "n=int(input())\ndef inp(n):\n    coor=[[int(i) for i in input().split()] for j in range(n)]\n    \n    return coor\n\ncoor=inp(n)\n\n\ndef newlist(a):\n    d={}\n    s=len(a)\n    for i in range(1,s):\n        for j in range(i):\n            if (a[i][0]+a[j][0],a[i][1]+a[j][1]) in d:\n                d[a[i][0]+a[j][0],a[i][1]+a[j][1]]+=1\n            else:\n                d[a[i][0]+a[j][0],a[i][1]+a[j][1]]=1\n    return d\ndef newd(d):\n    sum2=0\n    for l in d:\n        sum2+=d[l]*(d[l]-1)/2        \n    return int(sum2)\n\n\n    \n\n     \nprint(newd(newlist(coor)))\n\n\n            \n\n", "read = lambda: list(map(int, input().split()))\nn = int(input())\np = [tuple(read()) for i in range(n)]\nfrom collections import Counter\ncnt = Counter()\nfor i in range(n):\n    for j in range(i + 1, n):\n        cnt[p[i][0] + p[j][0], p[i][1] + p[j][1]] += 1\nans = sum(i * (i - 1) // 2 for i in list(cnt.values()))\nprint(ans)\n", "def main():\n    read = lambda: list(map(int, input().split()))\n    n = int(input())\n    p = [tuple(read()) for i in range(n)]\n    from collections import Counter\n    cnt = Counter()\n    for i in range(n):\n        x, y = p[i][0], p[i][1]\n        for j in range(i + 1, n):\n            cnt[x + p[j][0], y + p[j][1]] += 1\n    ans = sum(i * (i - 1) // 2 for i in list(cnt.values()))\n    print(ans)\nmain()\n", "p, d = [], {}\nfor i in range(int(input())):\n    x, y = list(map(int, input().split()))\n    for a, b in p:\n        u, v = a - x, b - y\n        q = (u / v if v else int(2e9), u * u + v * v)\n        d[q] = d.get(q, 0) + 1\n    p.append((x, y))\nprint(sum(k * k - k for k in list(d.values())) // 4)\n", "p, d = [], {}\ns = 0\nfor i in range(int(input())):\n    x, y = map(int, input().split())\n    for a, b in p:\n        q = (a + x, b + y)\n        if q not in d: d[q] = 0\n        s += d[q]\n        d[q] += 1\n    p.append((x, y))\nprint(s)", "import math\nn=int(input())\n\ndots=[]\n\nfor i in range (n) :\n\ttemp=list(map(int,input().split()))\n\tdots.append(temp)\n\n\nlines={}\n\nfor i in range(n) :\n\tfor j in range (i+1,n) :\n\n\t\tdx=dots[i][0]-dots[j][0]\n\t\tdy=dots[i][1]-dots[j][1]\n\t\tif dx<0 :\n\t\t\tdx=-dx\n\t\t\tdy=-dy\n\t\tif dx==0 and dy<0 :\n\t\t\tdy=-dy\n\t\tif (dx,dy) in lines :\n\t\t\tlines[(dx,dy)]+=1\n\t\telse :\n\t\t\tlines[(dx,dy)]=1\n\nans=0\nfor x in lines :\n\tt=lines[x]\n\tans+=t*(t-1)/2\nans/=2\nprint(int(ans))", "p, d = [], {}\ns = 0\nfor i in range(int(input())):\n    x, y = list(map(int, input().split()))\n    for a, b in p:\n        q = (a + x, b + y)\n        if q not in d: d[q] = 0\n        s += d[q]\n        d[q] += 1\n    p.append((x, y))\nprint(s)\n", "from sys import stdin, stdout\n\nn = int(stdin.readline())\npoints = []\n\nfor i in range(n):\n    x, y = map(int, stdin.readline().split())\n    points.append((x, y))\n\npoints.sort()\npair = {}\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if (points[j][0] - points[i][0], points[j][1] - points[i][1]) not in pair:\n            pair[(points[j][0] - points[i][0], points[j][1] - points[i][1])] = 1\n        else:\n            pair[(points[j][0] - points[i][0], points[j][1] - points[i][1])] += 1\n\nans = 0\nfor v in pair:\n    ans += pair[v] * (pair[v] - 1) // 2\n\nstdout.write(str(ans // 2))", "n = int(input())\nm = list(tuple(map(int,input().split())) for _ in range(n))\nmid = {}\npall = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        if ((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2) in mid:\n            pall += mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)]\n            mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)] += 1\n        else:\n            mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)] = 1\nprint(pall)", "n = int(input())\nm = list(tuple(map(int,input().split())) for _ in range(n))\nmid = {}\npall = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        if ((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2) in mid:\n            pall += mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)]\n            mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)] += 1\n        else:\n            mid[((m[i][0]+m[j][0])/2, (m[i][1]+m[j][1])/2)] = 1\nprint(pall)", "n = int(input())\npoints = []\ncnt = {}\nfor i in range(n):\n    x,y = list(map(int, input().split()))\n    for a,b in points:\n        u, v = x - a, y - b\n        q = (u / v if v else int(2e9), u * u + v * v)\n        cnt[q] = cnt.get(q,0) + 1\n    points.append((x,y))\n\nprint(sum(k * k - k for k in list(cnt.values())) // 4)\n", "n=int(input())\nl=[]\nl1=[1]*(n**2)\nans=0\nfor i in range(n):\n    x,y=input().split()\n    x,y=[int(x),int(y)]\n    l.append([x,y])\n\nfrom collections import Counter\ncount=Counter()\nfor i in range(len(l)):\n    \n    for j in range(i+1,len(l)):\n        \n        count[l[i][0]+l[j][0],l[j][1]+l[i][1]]+=1\nans = sum(i * (i - 1) // 2 for i in list(count.values()))\nprint(ans)\n", "n = int(input())\np = []\nd = dict()\nfor i in range(n):\n    p.append(list(map(int, input().strip().split())))\n    \nfor i in range(n):\n    for j in range(i+1,n):\n        x = (p[i][0] + p[j][0]) /2.\n        y = (p[i][1] + p[j][1]) /2.\n        if (x, y) in d.keys():\n            d[(x,y)] += 1\n        else:\n            d[(x,y)] = 1\nc = 0\nfor k in d.keys():\n    e = d[k]\n    c += e * (e-1) // 2\nprint(c)"]