["f=lambda : list(map(int,input().split()))\nn,m=f()\nlr=lambda x: x[1]-x[0]+1\nsq=min(lr(f()) for _ in range(m))\nprint(sq)\nx=' '.join([str(i%sq) for i in range(n)])\nprint(x)\n", "n, m = map(lambda x: int(x), input().split())\n\nans = n\nfor i in range(m):\n\tl, r = map(lambda x: int(x), input().split())\n\tans = min(ans, r - l + 1)\n\nprint(ans)\nfor i in range(n):\n\tprint(i % ans, end = ' ')\n\n", "n,m=map(int , input().split())\nmex=10000000\nfor i in range (m):\n    a,b=map(int , input().split())\n    mex=min(mex,b-a)\nmex=mex+1\nprint(mex)\nnum=0\nx=' '.join([str(i%mex) for i in range(n)])\nprint(x)", "def main():\n    n, m = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for i in range(m)]\n    z = min(y - x + 1 for x, y in a)\n    print (z)\n    print( ' '.join([str(i % z) for i in range(n)]))\n\nmain()\n", "I = lambda: list(map(int, input().split()))\nn, m = I()\nl, r = I()\nmin_length = r - l + 1\nfor _ in range(m-1):\n    l, r = I()\n    min_length = min(r - l + 1, min_length)\n\nprint(min_length)\nprint(' '.join(([str(x) for x in range(min_length)] * (n // min_length + 1))[:n]))\n", "n, m = map(int, input().split())\n\nans = n\nfor i in range(m):\n    x, y = map(int, input().split())\n    ans = min(ans, y - x + 1)\n\nprint(ans)\nfor i in range(n):\n    print(i % ans, end=\" \")\nprint()", "n, m = map(int, input().split())\n\nans = n\nfor i in range(m):\n    x, y = map(int, input().split())\n    ans = min(ans, y - x + 1)\n\nprint(ans)\nfor i in range(n):\n    print(i % ans, end=\" \")\nprint()\n", "n, m = map(int, input().split())\nd = n\nfor i in range(m):\n    l, r = map(int, input().split())\n    d = min(d, r - l + 1)\nprint(d)\nfor i in range(n):\n    print(i % d, end = ' ')\n", "import sys\nn, m = list(map(int, input().split()))\n\nle = 2 ** 30\n\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    le = min(r - l + 1, le)\n\n\na = (list(range(0, le)) * ((n + le - 1) // le))[:n]\nres = \" \".join(map(str, a))\nprint(le)\nprint(res)\n", "s=input().split()\nn=int(s[0])\nm=int(s[1])\nmn=100000000\n\nfor i in range(m):\n    str=input().split()\n    if int(str[1])-int(str[0])<mn:\n        mn=int(str[1])-int(str[0])\n\nprint(mn+1)\n\nfor i in range(n):\n    print(i%(mn+1),end=\" \")\n", "\n[n, m] = map(int, input().split())\nans = 1e9\nfor i in range(m):\n    [l, r] = map(int, input().split())\n    ans = min(ans, r - l + 1)\nprint(ans)\nfor i in range(n):\n    print(i % ans, end = \" \")\nprint()", "n, m = map(int, input().split())\nr = [list(map(int, input().split())) for j in range(m)]\nv = min(ri[1] - ri[0] + 1 for ri in r)\nprint(v, ' '.join(str(i % v) for i in range(n)), sep='\\n')", "import sys\n\nn, m = list(map(int, input().split()))\nmex = n\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    mex = min(mex, r-l+1)\n\nA = [i%mex for i in range(n)]\nprint(mex)\nprint(' '.join(map(str, A)))\n", "import sys\n\nn, m = list(map(int, input().split()))\nmex = n\nfor line in sys.stdin:\n    l, r = list(map(int, line.split()))\n    mex = min(mex, r-l+1)\n\nA = [i%mex for i in range(n)]\nprint(mex)\nprint(' '.join(map(str, A)))\n", "from itertools import cycle, islice\nn, m = [int(x) for x in input().split()]\n\ndlzky = []\nfor _ in range(m):\n    a, b = input().split()\n    c = int(b) - int(a) + 1\n    dlzky.append(c)\n\nminimum = min(dlzky)\ncisla = [str(x) for x in range(minimum)]\nvysledok = islice(cycle(cisla), n)\n\nprint(minimum)\nprint(' '.join(vysledok))\n", "n, m = [int(i) for i in input().split()]\nc = n\nfor i in range(m):\n    a, b = [int(i) for i in input().split()]\n    c = min(b-a+1, c)\nprint(c)\nfor i in range(n):\n    print(i%c, end= ' ')", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n,m = input().split()\n    maxminmex = int(n)\n    for item  in range(int(m)):\n        li, ri = input().split()\n        maxminmex = min(maxminmex,int(ri)-int(li)+1)\n       \n    print(maxminmex)\n\n    for i in range(int(n)):\n        print(i % maxminmex)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n#\nn,m = list(map(int, input().split()))\nmex = []\nfor i in range(m):\n  mex.append(list(map(int,input().split())))\nans = min([j-i+1 for i,j in mex])\nprint(ans)\nlis = []\nfor i in range(n):\n  lis.append(str(i%ans))\nprint(' '.join(lis))\n", "import sys\n\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = n\nlists = []\n\nfor k in range(m):\n  st, en = list(map(int, input().split()))\n  \n  ans = min(ans, en-st+1)\n  \nprint(ans)\n\nfor i in range(n):\n  lists.append(str(i%ans))\n\nprint(' '.join(lists))\n", "import sys\n\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = n\nlists = []\n#\nfor k in range(m):\n  st, en = list(map(int, input().split()))\n  \n  ans = min(ans, en-st+1)\n  \nprint(ans)\n\nfor i in range(n):\n  lists.append(str(i%ans))\n\nprint(' '.join(lists))\n", "import sys\n\ninput = sys.stdin.readline\n\nn, m = list(map(int, input().split()))\nans = n\nlists = []\n##\nfor k in range(m):\n  st, en = list(map(int, input().split()))\n  \n  ans = min(ans, en-st+1)\n  \nprint(ans)\n\nfor i in range(n):\n  lists.append(str(i%ans))\n\nprint(' '.join(lists))\n", "import sys\ninput = sys.stdin.readline\n\nlength, subs = list(map(int, input().strip().split()))\nlol = 9999999999999999999999999999\n\nfor i in range(subs):\n    start,end = list(map(int, input().strip().split()))\n    if abs(start-end) + 1 < lol:\n        lol = abs(start-end) + 1\n\nprint(lol)\n\nconstruct = []\ncount = 0\nwhile count < length:\n    construct.append(str(count%lol))\n    count+=1\nprint(' '.join(construct))\n\n"]