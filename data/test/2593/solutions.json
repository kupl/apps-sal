["t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    \n    a = list(map(int, input().split()))\n    \n    counts = [0] * 32\n    for x in a:\n        counts[len(bin(x))-2] += 1\n        \n    total = 0\n    for count in counts:\n        total += count * (count-1) // 2\n    print(total)\n", "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor you in range(t):\n    n=int(input())\n    l=input().split()\n    li=[int(i) for i in l]\n    hashi=dict()\n    count=0\n    for i in li:\n        for j in range(31,-1,-1):\n            if(i&(1<<j)):\n                ans=j\n                break\n        if(ans in hashi):\n            count+=hashi[ans]\n            hashi[ans]+=1\n        else:\n            hashi[ans]=1\n    print(count)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\n\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n\n    X=[0]*32\n\n    for a in A:\n        for j in range(32,-1,-1):\n            if a & (1<<j) != 0:\n                X[j]+=1\n                break\n\n    ANS=0\n\n    for x in X:\n        ANS+=x*(x-1)//2\n\n    print(ANS)\n\n    \n", "import sys\ninput = sys.stdin.readline\nfrom bisect import bisect_right\n\nbin_s = [1]\nwhile bin_s[-1] <= 10 ** 9:\n    bin_s.append(bin_s[-1] * 2)\n\n\ndef main():\n    n = int(input())\n    alst = list(map(int, input().split()))\n    cnt = [0 for _ in range(35)]\n    for a in alst:\n        pos = bisect_right(bin_s, a)\n        cnt[pos] += 1\n    ans = 0\n    for num in cnt:\n        ans += num * (num - 1) // 2\n    print(ans)\n\nfor _ in range(int(input())):\n    main()", "import math\nimport sys\ninput = sys.stdin.readline\nfor nt in range(int(input())):\n\tn = int(input())\n\ta = list(map(int,input().split()))\n\tgroup = [0]*31\n\tfor i in a:\n\t\tx = int(math.log2(i))\n\t\tgroup[x] += 1\n\tans = 0\n\tfor i in group:\n\t\tans += ((i)*(i-1))//2\n\tprint (ans)\n", "from math import *\nfrom bisect import *\nfrom collections import *\nfrom random import *\nfrom decimal import *\nimport sys\ninput=sys.stdin.readline\ndef inp():\n    return int(input())\ndef st():\n    return input().rstrip('\\n')\ndef lis():\n    return list(map(int,input().split()))\ndef ma():\n    return list(map(int,input().split()))\nt=int(input())\nwhile(t):\n    t-=1\n    n=inp()\n    a=lis()\n    b=[0]*30\n    for i in a:\n        z=bin(i)[2:]\n        z=z.zfill(30)\n        for j in range(30):\n            if(z[j]=='1'):\n                b[j]+=1\n                break\n    s=0\n    for i in b:\n        s+=(i*(i-1))//2\n    print(s)\n    \n", "for t in range(int(input())):\n    n=int(input())\n    x=list(map(int,input().split()))\n    d=dict()\n    for i in range(39):\n        d[i]=0\n    for i in x:\n        num=len(str(bin(i)))\n        d[num]+=1\n    ans=0\n    for s in d:\n        ans+=(d[s]*(d[s]-1)//2)\n    print(ans)", "# Python template \nfrom collections import defaultdict \nimport sys\nimport math \t\n\ndef get_array(): return list(map(int , sys.stdin.readline().strip().split()))\ndef get_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\ndef f(n):\n\tcnt = 0\n\twhile(n):\n\t\tn = n//2\n\t\tcnt+=1\n\treturn cnt \n\n\nfor _ in range(int(input())):\n\tn  = int(input())\n\ta = get_array()\n\n\td = defaultdict(int)\n\t\n\tfor i in range(n):\n\t\td[f(a[i])]+=1\n\t\n\tans = 0\n\tfor i in list(d.values()):\n\t\tans += (i*(i-1))//2\n\tprint(ans)\n", "for _ in range(int(input())):\n    n = int(input())\n    # s = input()\n    # n,m = map(int,input().split())\n    ar = list(map(int,input().split()))\n    ar.sort()\n    ans = 0\n    t = []\n    for i in range(n):\n        t.append(len(bin(ar[i])[2:]))\n    i = 0\n    last = 0 \n    count = 0 \n    while i<n:\n        if last==t[i]:\n            count += 1\n        else:\n            ans += (count*(count+1))//2\n            last = t[i]\n            count = 0\n        i += 1\n    ans += (count*(count+1))//2\n    # print(t)\n    print(ans)"]