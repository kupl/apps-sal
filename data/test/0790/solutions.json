["n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = list(map(int, input().split()))\n\nif k == 0:\n    best = 0\n    curr = sum(a)\n    for i in range(n):\n        best = max(best, curr - d[i])\n        curr -= a[i]\n    print(best)\nelif k == 1:\n    best = sum(a[:-1]) - min(d[:-1])\n    \n    other = sum(a)\n    other -= sorted(d)[0]\n    other -= sorted(d)[1]\n\n    curr = sum(a)\n    for i in range(n):\n        if i:\n            best = max(best, curr - d[i])\n        curr -= a[i]\n\n    o2 = sum(a) - min(a[1:]) - d[0]\n    \n    print(max((best,other,0, o2)))\nelse:\n    print(max((sum(a) - min(d[:-1]),0,a[-1] - d[-1])))\n", "N,K = map(int,input().split())\nA = list(map(int,input().split()))\nD = list(map(int,input().split()))\nif K >= 2:\n    print(max(0,sum(A)-min(D[:N-1]),A[N-1]-D[N-1]))\nif K == 0:\n    S = 0\n    ans = 0\n    for i in range(N)[::-1]:\n        S += A[i]\n        ans = max(ans,S-D[i])\n    print(ans)\nif K == 1:\n    minD = [D[0]]\n    csA = [A[0]]\n    for i in range(1,N):\n        minD.append(min(minD[-1],D[i]))\n        csA.append(csA[-1]+A[i])\n    csinvA = [A[N-1]]\n    for i in range(N-1)[::-1]:\n        csinvA.append(csinvA[-1]+A[i])\n    csinvA = csinvA[::-1]\n    right = []\n    S = 0\n    for i in range(N)[::-1]:\n        S += A[i]\n        right.append(S-D[i])\n    right = right[::-1]\n    rightM = [right[N-1]]\n    for i in range(N-1)[::-1]:\n        rightM.append(max(rightM[-1],right[i]))\n    rightM = rightM[::-1]\n    ans = 0\n    z = 0\n    for i in range(N)[::-1]:\n        x = 0\n        y = csA[i]-minD[i]\n        if y >= 0:\n            x += y\n        x += z\n        if i != N-1 and i != 0:\n            ans = max(ans,x)\n        z = max(z,right[i])\n    for i in range(N-2):\n        ans = max(ans,right[i+1])\n        ans = max(ans,rightM[0]-D[i+1])\n        ans = max(ans,rightM[i+2])\n        ans = max(ans,rightM[0]-A[i+1])\n    print(ans)", "import heapq\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=sum(a)\npre=[0]\nj=0\nwhile(j<n):\n    pre.append(a[j]+pre[-1])\n    j+=1\nab=[]\naf=[]\naf1=[]\nj=n-1\nwhile(j>=0):\n    heapq.heappush(af,-(s-pre[j]-b[j]))\n    af1.append(-af[0])\n\n    j+=-1\naf1.reverse()\nif k==0:\n    j=0\n    ans=0\n    while(j<n):\n        ans=max(ans,s-pre[j]-b[j])\n        j+=1\n    print(ans)\n\nelif k==1:\n    j=0\n    m=float(\"inf\")\n    ans=0\n    while (j < (n - 1)):\n        m=min(m,b[j])\n        if j<(n-2):\n            ans = max(ans, max(0,pre[j + 1] - m) + max(0, af1[j + 1]), s - pre[j] - b[j] - a[j + 1],s-b[0]-a[j+1])\n        else:\n            ans = max(ans, pre[j + 1] - m + max(0, af1[j + 1]), s - pre[j] - b[j] - a[j + 1])\n\n\n        j += 1\n    j=0\n    while(j<(n-1)):\n        ans=max(ans,s-a[-1]-b[j]+max(0,a[-1]-b[-1]))\n\n        j+=1\n    print(ans)\nelse:\n    j=0\n    ans=0\n    while(j<(n-1)):\n        ans=max(ans,s-b[j])\n\n        j+=1\n    ans=max(ans,a[-1]-b[-1])\n    print(ans)\n\n\n\n\n\n\n\n", "import heapq\nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\ns=sum(a)\npre=[0]\nj=0\nwhile(j<n):\n    pre.append(a[j]+pre[-1])\n    j+=1\nab=[]\naf=[]\naf1=[]\nj=n-1\nwhile(j>=0):\n    heapq.heappush(af,-(s-pre[j]-b[j]))\n    af1.append(-af[0])\n\n    j+=-1\naf1.reverse()\nif k==0:\n    j=0\n    ans=0\n    while(j<n):\n        ans=max(ans,s-pre[j]-b[j])\n        j+=1\n    print(ans)\n\nelif k==1:\n    j=0\n    m=float(\"inf\")\n    ans=0\n    while (j < (n - 1)):\n        m=min(m,b[j])\n        if j<(n-2):\n            ans = max(ans, max(0,pre[j + 1] - m) + max(0, af1[j + 1]), s - pre[j] - b[j] - a[j + 1],s-b[0]-a[j+1])\n        else:\n            ans = max(ans, pre[j + 1] - m + max(0, af1[j + 1]), s - pre[j] - b[j] - a[j + 1])\n\n\n        j += 1\n    j=0\n    while(j<(n-1)):\n        ans=max(ans,s-a[-1]-b[j]+max(0,a[-1]-b[-1]))\n\n        j+=1\n    print(ans)\nelse:\n    j=0\n    ans=0\n    while(j<(n-1)):\n        ans=max(ans,s-b[j])\n\n        j+=1\n    ans=max(ans,a[-1]-b[-1])\n    print(ans)\n\n\n\n\n\n\n\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nd = list(map(int, input().split()))\n\nif k == 0:\n    best = 0\n    curr = sum(a)\n    for i in range(n):\n        best = max(best, curr - d[i])\n        curr -= a[i]\n    print(best)\nelif k == 1:\n    best = sum(a[:-1]) - min(d[:-1])\n    \n    other = sum(a)\n    other -= sorted(d)[0]\n    other -= sorted(d)[1]\n\n    curr = sum(a)\n    for i in range(n):\n        if i:\n            best = max(best, curr - d[i])\n        curr -= a[i]\n\n    o2 = sum(a) - min(a[1:]) - d[0]\n    \n    print(max((best,other,0, o2)))\nelse:\n    print(max((sum(a) - min(d[:-1]),0,a[-1] - d[-1])))", "n, k = map(int, input().split());a = list(map(int, input().split()));d = list(map(int, input().split()))\nif k == 0:\n    best = 0;curr = sum(a)\n    for i in range(n):best = max(best, curr - d[i]);curr -= a[i]\n    print(best)\nelif k == 1:\n    best = sum(a[:-1]) - min(d[:-1]);other = sum(a);other -= sorted(d)[0];other -= sorted(d)[1];curr = sum(a)\n    for i in range(n):\n        if i:best = max(best, curr - d[i])\n        curr -= a[i]\n    o2 = sum(a) - min(a[1:]) - d[0];print(max((best,other,0, o2)))\nelse:print(max((sum(a) - min(d[:-1]),0,a[-1] - d[-1])))", "N, K = map(int, input().split())\nA = list(map(int, input().split()))\nD = list(map(int, input().split()))\n\nsuf_min = [None]*N\nsuf_min[-1] = A[-1]\nsuf_sum = [None]*N\nsuf_sum[-1] = A[-1]\nsuf_ans = [None]*N\nsuf_ans[-1] = max(A[-1] - D[-1], 0)\nfor i in range(N-2, -1, -1):\n    suf_min[i] = min(A[i], suf_min[i+1])\n    suf_sum[i] = suf_sum[i+1] + A[i]\n    suf_ans[i] = max(suf_ans[i+1], suf_sum[i]-D[i])\n    # print(i, suf_ans[i])\n\nif K >= 2:\n    print(max(0, sum(A) - min(*D[:-1]), suf_ans[0]))\n    return\n\nif K == 0:\n    print(max(suf_ans[0], 0))\n    return\n\npre_min = D[0]\npre_sum = 0\nans = max(0, sum(A) - D[0] - suf_min[0])\nfor i in range(N-1):\n    pre_sum += A[i]\n    pre_min = min(pre_min, D[i])\n    ans = max(ans, pre_sum - pre_min + suf_ans[i+1], suf_ans[i+1])\nprint(max(0, ans))", "import sys\nn, k = list(map(int, input().split(' ')))\n\n\nactivate = list(map(int, input().split(' ')))\ndeactivate = list(map(int, input().split(' ')))\n\npresum = [0 for _ in range(n+2)]\n\nfor i in range(1, n+1):\n    presum[i] = presum[i-1] + activate[i-1]\n\nret = 0\n\nif k == 0:\n    for i in range(1, n+1):\n        ret = max(ret, presum[n] - presum[i-1] - deactivate[i-1])\nelif k == 1:\n    for i in range(1, n):\n        ret = max(ret, presum[n-1] - deactivate[i-1])\n    \n    if deactivate[n-1] < activate[n-1]:\n        ret += (activate[n-1] - deactivate[n-1])\n\n    deac = sorted(deactivate[1:n-1])\n    ac = sorted(activate[1:n-1])\n\n    ret = max(ret, presum[n] - deac[0] - deac[1])\n    ret = max(ret, presum[n] - deactivate[0] - ac[0])\n    ret = max(ret, presum[n] - deactivate[0] - deac[0])\n    \n    for i in range(2, n+1):\n        ret = max(ret, presum[n] - presum[i-1] - deactivate[i-1])\nelse:\n    for i in range(1, n):\n        ret = max(ret, presum[n] - deactivate[i-1])   \n\n    ret = max(ret, activate[n-1] - deactivate[n-1])\n\nprint(ret)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = list(map(int, input().split()))\n\nif k >= 2:\n    m = min(d[: -1])\n    print(max(sum(a) - m, a[-1] - d[-1], 0))\nelif k == 0:\n    rightans = [0] * n\n    cursum = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        cursum += a[i]\n        rightans[i] = max(cursum - d[i], 0)\n    print(max(rightans))\nelse:\n    leftd = int(1e9)\n    leftsum = 0\n    rightans = [0] * n\n    cursum = 0\n    ans = 0\n    for i in range(n - 1, -1, -1):\n        cursum += a[i]\n        rightans[i] = max(cursum - d[i], 0)\n    for i in range(n - 1, 0, -1):\n        rightans[i - 1] = max(rightans[i - 1], rightans[i])\n    for i in range(n - 1):\n        leftd = min(leftd, d[i])\n        leftsum += a[i]\n        curans = max(leftsum - leftd, 0) + rightans[i + 1]\n        ans = max(ans, curans)\n\n    cursum = 0\n    rightmin = int(1e9)\n    for i in range(n - 1, -1, -1):\n        cursum += a[i]\n        ans = max(ans, cursum - rightmin - d[i])\n        rightmin = min(rightmin, a[i])\n    print(ans)\n", "import sys\n\nn, k = list(map(int, input().split(' ')))\n\nactivate = list(map(int, input().split(' ')))\ndeactivate = list(map(int, input().split(' ')))\n\npresum = [0 for _ in range(n + 2)]\n\nfor i in range(1, n + 1):\n    presum[i] = presum[i - 1] + activate[i - 1]\n\nret = 0\n\nif k == 0:\n    for i in range(1, n + 1):\n        # \u60c5\u51b50\uff0c\u4e0d\u9700\u8981\u8003\u8651\u8fde\u5e26\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelif k == 1:\n    for i in range(1, n):\n        # \u60c5\u51b53 n-1\u8fde1\n        ret = max(ret, presum[n - 1] - deactivate[i - 1])\n\n    # \u60c5\u51b53\u518d\u52a0\u4e0a\u7b2cN\u4e2a\u79bb\u5b50\n    if deactivate[n - 1] < activate[n - 1]:\n        ret += (activate[n - 1] - deactivate[n - 1])\n\n    deac = sorted(deactivate[1:n - 1])\n    ac = sorted(activate[1:n - 1])\n\n    # \u60c5\u51b55\uff0c\u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\n    ret = max(ret, presum[n] - deactivate[0] - ac[0])\n    # \u60c5\u51b56 \u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\u540e\uff0c\u518d\u6fc0\u6d3b\n    ret = max(ret, presum[n] - deactivate[0] - deac[0])\n    # \u60c5\u51b54\n    ret = max(ret, presum[n] - deac[0] - deac[1])\n\n    # \u60c5\u51b57 1\u8fden\uff0c\u6fc0\u6d3bi\n    for i in range(2, n + 1):\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelse:\n    # \u60c5\u51b51\n    for i in range(1, n):\n        ret = max(ret, presum[n] - deactivate[i - 1])\n\n        # \u60c5\u51b52\n    ret = max(ret, activate[n - 1] - deactivate[n - 1])\n\nprint(ret)", "import sys\n\nn, k = list(map(int, input().split(' ')))\n\nactivate = list(map(int, input().split(' ')))\ndeactivate = list(map(int, input().split(' ')))\n\npresum = [0 for _ in range(n + 2)]\n\nfor i in range(1, n + 1):\n    presum[i] = presum[i - 1] + activate[i - 1]\n\nret = 0\n\nif k == 0:\n    for i in range(1, n + 1):\n        # \u60c5\u51b50\uff0c\u4e0d\u9700\u8981\u8003\u8651\u8fde\u5e26\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelif k == 1:\n    for i in range(1, n):\n        # \u60c5\u51b53 n-1\u8fde1\n        ret = max(ret, presum[n - 1] - deactivate[i - 1])\n\n    # \u60c5\u51b53\u518d\u52a0\u4e0a\u7b2cN\u4e2a\u79bb\u5b50\n    if deactivate[n - 1] < activate[n - 1]:\n        ret += (activate[n - 1] - deactivate[n - 1])\n\n    deac = sorted(deactivate[1:n - 1])\n    ac = sorted(activate[1:n - 1])\n\n    # \u60c5\u51b55\uff0c\u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\n    ret = max(ret, presum[n] - deactivate[0] - ac[0])\n    # \u60c5\u51b56 \u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\u540e\uff0c\u518d\u6fc0\u6d3b\n    ret = max(ret, presum[n] - deactivate[0] - deac[0])\n    # \u60c5\u51b54\n    ret = max(ret, presum[n] - sorted(deactivate[0:n - 1])[0] - sorted(deactivate[0:n - 1])[1])\n\n    # \u60c5\u51b57 1\u8fden\uff0c\u6fc0\u6d3bi\n    for i in range(2, n + 1):\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelse:\n    # \u60c5\u51b51\n    for i in range(1, n):\n        ret = max(ret, presum[n] - deactivate[i - 1])\n\n        # \u60c5\u51b52\n    ret = max(ret, activate[n - 1] - deactivate[n - 1])\n\nprint(ret)", "import sys\n\nn, k = list(map(int, input().split(' ')))\n\nactivate = list(map(int, input().split(' ')))\ndeactivate = list(map(int, input().split(' ')))\n\npresum = [0 for _ in range(n + 2)]\n\nfor i in range(1, n + 1):\n    presum[i] = presum[i - 1] + activate[i - 1]\n\nret = 0\n\nif k == 0:\n    for i in range(1, n + 1):\n        # \u60c5\u51b50\uff0c\u4e0d\u9700\u8981\u8003\u8651\u8fde\u5e26\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelif k == 1:\n    for i in range(1, n):\n        # \u60c5\u51b53 n-1\u8fde1\n        ret = max(ret, presum[n - 1] - deactivate[i - 1])\n\n    # \u60c5\u51b53\u518d\u52a0\u4e0a\u7b2cN\u4e2a\u79bb\u5b50\n    if deactivate[n - 1] < activate[n - 1]:\n        ret += (activate[n - 1] - deactivate[n - 1])\n\n    deac = sorted(deactivate[0:n - 1])\n    ac = sorted(activate[1:n - 1])\n\n    # \u60c5\u51b55\uff0c\u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\n    ret = max(ret, presum[n] - deactivate[0] - ac[0])\n    # \u60c5\u51b54\n    ret = max(ret, presum[n] - deac[0] - deac[1])\n\n    # \u60c5\u51b57 1\u8fden\uff0c\u6fc0\u6d3bi\n    for i in range(2, n + 1):\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelse:\n    # \u60c5\u51b51\n    for i in range(1, n):\n        ret = max(ret, presum[n] - deactivate[i - 1])\n\n        # \u60c5\u51b52\n    ret = max(ret, activate[n - 1] - deactivate[n - 1])\n\nprint(ret)", "import sys\n\nn, k = list(map(int, input().split(' ')))\n\nactivate = list(map(int, input().split(' ')))       # \u91ca\u653e\u7684\u80fd\u91cf\ndeactivate = list(map(int, input().split(' ')))     # \u9700\u6c42\u7684\u80fd\u91cf\nls = list(zip(activate[0:-1], deactivate[0:-1]))\ndiff = ls[0][0] - ls[0][1]\n\npresum = [0 for _ in range(n + 2)]\n\nfor i in range(1, n + 1):\n    presum[i] = presum[i - 1] + activate[i - 1]\n\nret = 0\n\nif k == 0:\n    for i in range(1, n + 1):\n        # \u60c5\u51b50\uff0c\u4e0d\u9700\u8981\u8003\u8651\u8fde\u5e26\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelif k == 1:\n\n    ret = max(ret, presum[n - 1] - min(deactivate), presum[n] - min(deactivate) - deactivate[n - 1])\n\n    deac = sorted(deactivate[0:n - 1])\n    ac = sorted(activate[1:n - 1])\n\n    # \u60c5\u51b55\uff0c\u6fc0\u6d3b1\uff0c\u8df3\u8fc71\u4e2a\u8282\u70b9\n    ret = max(ret, presum[n] - deactivate[0] - ac[0])\n    # \u60c5\u51b54\n    ret = max(ret, presum[n] - deac[0] - deac[1])\n\n    # \u60c5\u51b57 1\u8fden\uff0c\u6fc0\u6d3bi\n    for i in range(2, n + 1):\n        ret = max(ret, presum[n] - presum[i - 1] - deactivate[i - 1])\nelse:\n    # \u60c5\u51b51\n    for i in range(1, n):\n        ret = max(ret, presum[n] - deactivate[i - 1])\n\n        # \u60c5\u51b52\n    ret = max(ret, activate[n - 1] - deactivate[n - 1])\n\nprint(ret)", "\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = list(map(int, input().split()))\npref=[0]\nfor i in range(n):\n    pref.append(pref[-1]+a[i])\nif k==0:\n    ans=0\n    for i in range(1,n+1):\n        ans=max(ans,pref[-1]-pref[i-1]-d[i-1])\n    print(ans)\nelif k == 1:\n    best = sum(a[:n-1]) - min(d[:n-1])\n    \n    other = sum(a)\n    other -= sorted(d)[0]\n    other -= sorted(d)[1]\n \n    curr = sum(a)\n    for i in range(n):\n        if i:\n            best = max(best, curr - d[i])\n        curr -= a[i]\n \n    o2 = sum(a) - min(a[1:]) - d[0]\n    \n    print(max((best,other,0, o2)))\nelse:\n    print(max((sum(a) - min(d[:-1]),0,a[-1] - d[-1])))\n"]