["import sys\n\nn = int(sys.stdin.readline())\nl = [int(x) for x in sys.stdin.readline().split(' ')]\n\nind = sorted(list(range(len(l))), key=lambda x: l[x])\nh = l[ind[0]] - 1\nfor i in ind:\n    if l[i] <= h:\n        l[i] = h+1\n        h += 1\n    else:\n        h = l[i]\nprint(\" \".join([str(x) for x in l]))\n", "dp = dict()\n\nn = int(input())\na = list(map(int, input().split()))\ng = sorted(list(range(n)), key = lambda x: a[x])\nvalue = a[g[0]] - 1\nfor i in g:\n    if a[i] <= value:\n        a[i] = value + 1\n        value += 1\n    else:\n        value = a[i]\nprint(' '.join(map(str, a)))\n", "from operator import itemgetter\nn = int(input())\na = list(map(int, input().split()))\nb = sorted(enumerate(a), key=itemgetter(1))\nfor i in range(1, n):\n  if a[b[i - 1][0]] >= a[b[i][0]]:\n    a[b[i][0]] = a[b[i - 1][0]] + 1\nprint(' '.join(map(str, a)))", "import sys\nn = int(input())\na = list(map(int, sys.stdin.read().split()))\ng = sorted(range(n), key=lambda x: a[x])\nfor i in range(1, n):\n\tif a[g[i]] <= a[g[i - 1]]:\n\t\ta[g[i]] = a[g[i - 1]] + 1\nprint(' '.join(map(str, a)))", "i = int(input())\nrat = list(map(int, input().split(' ')))\nratp = sorted(list(range(i)), key=lambda x: rat[x])\nfinal = [-1] * i\n\nstart = 0\nfor i in ratp:\n    if start + 1 >= rat[i]:\n        start = start + 1\n    else:\n        start = rat[i]\n        \n    final[i] = start\n\nprint(' '.join([str(x) for x in final]))\n", "def main():\n    n = int(input())\n    aa = list(map(int, input().split()))\n    idx = sorted(list(range(n)), key=aa.__getitem__)\n    b = 0\n    for i in idx:\n        aa[i] = b = max(b + 1, aa[i])\n    print(' '.join(map(str, aa)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import operator\n\nn = int(input())\n\na = list((v,k) for k,v in enumerate(map(int,input().split())))\na.sort(key=operator.itemgetter(0))\n#print(a)\n\ncur = 0\nb = [0]*n\n\nfor i in range(n):\n\tx = a[i][0]\n\tif x > cur:\n\t\tcur = x + 1\n\t\tb[a[i][1]] = str(x)\n\telse:\n\t\tb[a[i][1]] = str(cur)\n\t\tcur += 1\n\n#b = sorted(b,key=itemgetter(1))\n\nprint(' '.join(b))", "n = int(input() )\na = list(map(int, input().split(' ')))\nid = sorted(range(n), key=lambda x : a[x])\nfor i in range(1, n):\n    if a[id[i]] <= a[id[i - 1]]:\n        a[id[i]] = a[id[i - 1]] + 1\nprint(' '.join(map(str, a)))", "n=int(input())\na=list(map(int, input().split(' ')))\nid=sorted(range(n), key=lambda x: a[x])\n\nfor i in range (1,n):\n\tif a[id[i]] <= a[id[i-1]]:\n\t\ta[id[i]]=a[id[i-1]]+1\nprint (' '.join(map(str,a)))", "n=int(input())\na=list(map(int, input().split()))\nsortedIndex = sorted(range(n), key=lambda k: a[k])\ntemp=0\nfor i in range (n):\n  if a[sortedIndex[i]] <= temp:\n    a[sortedIndex[i]] = temp\n    temp += 1\n  elif a[sortedIndex[i]] > temp:\n    temp = a[sortedIndex[i]] + 1\n\nresult = ' '.join(str(e) for e in a)\nprint(result)", "i = int(input())\nvalues = list(map(int, input().split(' ')))\nresult = [-1] * i\nsortedValues = sorted(range(i), key=lambda x: values[x])\n\ncnt = 0\nfor i in sortedValues:\n    cnt = cnt + 1 if cnt + 1 >= values[i] else values[i]\n    result[i] = cnt\n\nprint(' '.join([str(x) for x in result]))", "import sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    a = list(map(int, sys.stdin.readline().split(' ')))\n    l = sorted(list(range(n)),key=lambda i: a[i])\n    cur = a[l[0]]\n    s = set([cur])\n    for i in range(1, n):\n        if a[l[i]] == cur or a[l[i]] in s:\n            a[l[i]] = cur + 1\n        cur = a[l[i]]\n        s.add(cur)\n    sys.stdout.write('{}\\n'.format(' '.join(list([str(i) for i in a]))))\n\nmain()\n\n", "n = int(input() )\na = list(map(int, input().split(' ')))\nid = sorted(range(n), key=lambda x : a[x])\nfor i in range(1, n):\n    if a[id[i]] <= a[id[i - 1]]:\n        a[id[i]] = a[id[i - 1]] + 1\nprint(' '.join(map(str, a)))", "import sys\nn = int(input())\na = list(map(int, sys.stdin.read().split()))\ng = sorted(list(range(n)), key=lambda x: a[x])\nfor i in range(1, n):\n\tif a[g[i]] <= a[g[i - 1]]:\n\t\ta[g[i]] = a[g[i - 1]] + 1\nprint(' '.join(map(str, a)))\n\n\n\n# Made By Mostafa_Khaled\n", "n=int(input().strip())\na=list(map(int,input().strip().split()))\nt=sorted(list(range(n)),key=lambda x:a[x])\n\ncur=-1\nfinal=[0]*n\nfor elem in t:\n    if cur + 1 >= a[elem]:\n        cur+=1\n    else:\n        cur=a[elem]\n    final[elem]=cur\n\nprint(' '.join(str(x) for x in final))\n\n\n\n\n\"\"\"\n\n3\n5 1 1\n\n1\n1000000\n\n\"\"\"\n", "from collections import defaultdict\nfrom queue import *\n\nn = int(input())\nratings = list(map(int, input().split(' ')))\n\nvalue_ind_map = defaultdict(list)\n# for i in range(len(ratings)):\n#     value_ind_map[ratings[i]].put(i)\nres = [-1]\ntxt = []\nfor rating in sorted(ratings):\n\n    if res[0] >= rating:\n        res[0] = res[0]+1\n        value_ind_map[rating].append(res[0])\n    else:\n        res[0] =  rating\n        value_ind_map[rating].append(res[0])\nfor rating in ratings:\n    txt.append(str(value_ind_map[rating].pop()))\n\nprint(\" \".join(txt))\n\n\n", "n=int(input())\nt=0\n*l,=map(int,input().split())\na=l[:]\ns=sorted(range(n),key=lambda x:l[x])\nfor i in s:\n    if l[i]>t:\n        t=l[i]\n        a[i]=(str(t))\n    else:\n        t+=1\n        a[i]=(str(t))\nprint(' '.join(a))", "n =int(input())\nl=list(map(int,input().split(' ')))\nidxs=sorted(list(range(n)),key=lambda x :l[x])\nfor i in range(1,n) :\n    if l[idxs[i]]<=l[idxs[i-1]] :\n        l[idxs[i]]=l[idxs[i-1]]+1\nprint(' '.join(map(str,l)))\n        \n", "n = int(input())\na = [*list(map(int, input().split()))]\nb = sorted([(i, a[i]) for i in range(n)], key = lambda x : x[1])\ncurrent = 0\nfor i in b:\n    if current < i[1]:\n        current = i[1]\n        a[i[0]] = str(a[i[0]])\n    else:\n        current += 1\n        a[i[0]] = str(current)\nprint(\" \".join(a))\n", "n = int(input())\na = list(map(int, input().split()))\nt = 0\nfor x in sorted(list(range(n)), key = lambda t: a[t]):\n\tt = max(t + 1, a[x])\n\ta[x] = t\nprint(' '.join(map(str, a)))\n", "n = int(input());\n\nvalues = list( map(int, input().split(' ')) );\nkeys = sorted(list(range(n)), key = lambda a : values[a]);\n\nlast = 0;\nfor a in keys :\n    last = max(values[a], last);\n    values[a] = last;\n    last += 1;\n\nprint((*values));\n", "n = int(input())\nlis = list(map(int,input().split()))\nli = sorted(list(range(len(lis))), key=lambda k: lis[k])\nans=[0]*n\nprev=lis[li[0]];ans[li[0]]=lis[li[0]]\nfor i in range(1,n):\n    g=li[i]\n    if prev >= lis[g]:\n        prev+=1\n        ans[g]=prev\n    else:\n        prev=lis[g]\n        ans[g]=lis[g]\nprint(*ans)\n", "import sys\nn = int(input())\na = list(map(int, sys.stdin.read().split()))\ng = sorted(list(range(n)), key=lambda x: a[x])\nfor i in range(1, n):\n\tif a[g[i]] <= a[g[i - 1]]:\n\t\ta[g[i]] = a[g[i - 1]] + 1\n\nprint(' '.join(map(str, a)))\n\n", "n = int(input())\nx = list(map(int, input().split()))\nans = x.copy()\nb = sorted(x.copy())\nk = b[0] + 1\nd = {b[0]: [1, b[0]]}\nfor i in range(1, n):\n    if b[i - 1] == b[i]:\n        d[b[i]].append(k)\n        k += 1\n    else:\n        if b[i] < k:\n            d[b[i]] = [1, k]\n        else:\n            d[b[i]] = [1, b[i]]\n            k = b[i]\n        k += 1\nfor j in range(n):\n    ans[j] = d[x[j]][d[x[j]][0]]\n    d[x[j]][0] += 1\nprint(*ans)\n\n", "n=int(input())\nlst=[*map(int,input().split())]\nind=sorted(range(n),key=lst.__getitem__)\nelem=0\nfor i,x in enumerate(ind):\n    elem=max(elem+1,lst[x])\n    lst[x]=elem\nprint(*lst)"]