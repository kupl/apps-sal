["import sys\nimport heapq as hq\n\nreadline = sys.stdin.readline\n\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\n\neps = 10**-7\n\ndef solve():\n    n, k = nm()\n    a = nl()\n    ans = [0]*n\n    ok = 10**9; ng = -4*10**18\n    while ok - ng > 1:\n        mid = (ok + ng) // 2\n        ck = 0\n        for i in range(n):\n            d =  9 - 12 * (mid + 1 - a[i])\n            if d < 0:\n                continue\n            ck += min(a[i], int((3 + d**.5) / 6 + eps))\n        # print(mid, ck)\n        if ck > k:\n            ng = mid\n        else:\n            ok = mid\n    for i in range(n):\n        d =  9 - 12 * (ok + 1 - a[i])\n        if d < 0:\n            continue\n        ans[i] = min(a[i], int((3 + d**.5) / 6 + eps))\n    # print(ans)\n    rk = k - sum(ans)\n    l = list()\n    for i in range(n):\n        if ans[i] < a[i]:\n            hq.heappush(l, (-a[i] + 3 * ans[i]**2 - 3 * ans[i] + 1, i))\n    for _ in range(rk):\n        v, i = hq.heappop(l)\n        ans[i] += 1\n        if ans[i] < a[i]:\n            hq.heappush(l, (-a[i] + 3 * ans[i]**2 - 3 * ans[i] + 1, i))\n    print(*ans)\n    return\n\n\nsolve()", "import sys\nimport heapq as hq\n\nreadline = sys.stdin.readline\n\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\n\neps = 10**-7\n\ndef solve():\n    n, k = nm()\n    a = nl()\n    ans = [0]*n\n    ok = 10**9; ng = -4*10**18\n    while ok - ng > 1:\n        mid = (ok + ng) // 2\n        ck = 0\n        for i in range(n):\n            d =  9 - 12 * (mid + 1 - a[i])\n            if d < 0:\n                continue\n            ck += min(a[i], int((3 + d**.5) / 6 + eps))\n        # print(mid, ck)\n        if ck > k:\n            ng = mid\n        else:\n            ok = mid\n    for i in range(n):\n        d =  9 - 12 * (ok + 1 - a[i])\n        if d < 0:\n            continue\n        ans[i] = min(a[i], int((3 + d**.5) / 6 + eps))\n    # print(ans)\n    rk = k - sum(ans)\n    l = list()\n    for i in range(n):\n        if ans[i] < a[i]:\n            hq.heappush(l, (-a[i] + 3 * ans[i]**2 - 3 * ans[i] + 1, i))\n    for _ in range(rk):\n        v, i = hq.heappop(l)\n        ans[i] += 1\n        if ans[i] < a[i]:\n            hq.heappush(l, (-a[i] + 3 * ans[i]**2 - 3 * ans[i] + 1, i))\n    print(*ans)\n    return\n\n\nsolve()"]