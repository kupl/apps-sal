["a = []\nb = []\nfor i in range(3):\n      t =  input().split() \n      a.append([int(t[0]), int(t[1]), int(t[2]) ] )\n      b.append([1, 1, 1])\n\ndef add(i, j, w):\n      if 2>=i>=0 and 2>=j>=0:\n            b[i][j] += w\n\nfor i in range(3):\n      for j in range(3):\n            add(i, j, a[i][j])\n            add(i-1, j, a[i][j])\n            add(i+1, j, a[i][j])\n            add(i, j+1, a[i][j])\n            add(i, j-1, a[i][j])\n\nfor i in range(3):\n      print( ''.join( map(str, [ [0,1][b[i][j]%2 ] for j in range(3) ] ) ) )\n", "arr = [1,1,1,1,1]\ngrid = []\nfor i in range(5):\n    grid.append (list(arr))\n#grid = [arr,arr,arr,arr,arr]\n\nxc = [0,1,-1,0,0]\nyc = [0,0,0,1,-1]\n\nfor i in range (1, 4):\n    arr = list (map (int, input().split()))\n    for j in range (1, 4):\n        #print (str(i) + ' ' + str(j) + ' ' + str(arr[j-1]))\n        for k in range (arr[j-1]):\n            for l in range (5):\n                #print (grid[i+xc[l]][j+yc[l]])\n                grid[i+xc[l]][j+yc[l]] = 1 - grid[i+xc[l]][j+yc[l]]\n                #print (grid)\n\n    #print (grid)\n\nfor i in range (1, 4):\n    print(str(grid[i][1]) + str(grid[i][2]) + str(grid[i][3]))\n", "L=[]\nL.append(list(map(int,input().split())))\nL.append(list(map(int,input().split())))\nL.append(list(map(int,input().split())))\nL=L[0]+L[1]+L[2]\nprint((L[0]+L[1]+L[3]+1)%2,end=\"\")\nprint((L[1]+L[0]+L[2]+L[4]+1)%2,end=\"\")\nprint((L[2]+L[1]+L[5]+1)%2)\nprint((L[0]+L[3]+L[6]+L[4]+1)%2,end=\"\")\nprint((L[1]+L[4]+L[7]+L[3]+L[5]+1)%2,end=\"\")\nprint((L[2]+L[5]+L[8]+L[4]+1)%2)\nprint((L[6]+L[7]+L[3]+1)%2,end=\"\")\nprint((L[7]+L[8]+L[6]+L[4]+1)%2,end=\"\")\nprint((L[8]+L[7]+L[5]+1)%2)\n", "t = [list(map(int, input().split())) for i in range(3)]\np = [[1] * 5 for i in range(5)]\nfor i in range(3):\n    for j in range(3):\n        if t[i][j] % 2 == 1:\n            p[i][j + 1] += 1\n            p[i + 2][j + 1] += 1\n            for v in range(j, j + 3):\n                p[i + 1][v] += 1\nfor i in range(1, 4):\n    print(''.join(str(p[i][j] % 2) for j in range(1, 4)))\n", "a = [[1]*3 for i in range(3)]\nb = []\nfor i in range(3):\n    b.append(list(map(int, input().split())))\n\nfor i in range(3):\n    for j in range(3):\n        b[i][j] %= 2\n\n        if b[i][j] == 1:\n            if i > 0: a[i-1][j] = 1 - a[i-1][j]\n            if i < 2: a[i+1][j] = 1 - a[i+1][j]\n            if j > 0: a[i][j-1] = 1 - a[i][j-1]\n            if j < 2: a[i][j+1] = 1 - a[i][j+1]\n            a[i][j] = 1 - a[i][j]\n\nfor i in range(3):\n    print('%d%d%d' % (a[i][0], a[i][1], a[i][2]))\n\n", "a=[[1,1,1],[1,1,1],[1,1,1]]\nd={0:1,1:0}\nfor i in range(3):\n    b=list(map(int,input().split()))\n    for j in range(3):\n        if b[j]%2==1:\n            a[i][j]=d[a[i][j]]\n            if i!=0:\n                a[i-1][j]=d[a[i-1][j]]\n            if i!=2:\n                a[i+1][j]=d[a[i+1][j]]\n            if j!=0:\n                a[i][j-1]=d[a[i][j-1]]\n            if j!=2:\n                a[i][j+1]=d[a[i][j+1]]\nfor i in range(3):\n    for j in range(3):\n        print(a[i][j],end='')\n    print()\n", "__copyright__ = ''\n__author__ = 'Son-Huy TRAN'\n__email__ = \"sonhuytran@gmail.com\"\n__doc__ = ''\n__version__ = '1.0'\n\n\ndef main() -> int:\n    lights = []\n    results = [['', '', ''], ['', '', ''], ['', '', '']]\n\n    for _ in range(3):\n        lights.append([int(word) for word in input().split()])\n\n    for i in range(3):\n        for j in range(3):\n            temp = lights[i][j] \\\n                   + (lights[i - 1][j] if i > 0 else 0) \\\n                   + (lights[i][j - 1] if j > 0 else 0) \\\n                   + (lights[i + 1][j] if i < 2 else 0) \\\n                   + (lights[i][j + 1] if j < 2 else 0)\n            results[i][j] = str(1 - temp % 2)\n\n    result_strings = [''.join(listi) for listi in results]\n    print('\\n'.join(result_strings))\n\n    return 0\n\n\ndef __starting_point():\n    exit(main())\n__starting_point()", "def change(n):\n    if n == 0:\n        n = 1\n    else:\n        n = 0\n    return n\n\ntable = []\nfor i in range(3):\n    table.append(list(map(int,input().split())))\n\nrow = [[1,1,1], [1,1,1], [1,1,1]]\n\n\nfor i in range(3):\n    for j in range(3):\n        if table[i][j] % 2 == 0:\n            continue\n        else:\n            row[i][j] = change(row[i][j])\n            if i == 0:\n                if j == 0 :\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i+1][j] = change(row[i+1][j])\n                elif j == 1:\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i][j-1] = change(row[i][j-1])\n                    row[i+1][j] = change(row[i+1][j])\n                elif j == 2:\n                    row[i][j-1] = change(row[i][j-1])\n                    row[i+1][j] = change(row[i+1][j])\n            elif i == 1 :\n                if j == 0 :\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i-1][j] = change(row[i-1][j])\n                    row[i+1][j] = change(row[i+1][j])\n                elif j == 1 :\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i][j-1] = change(row[i][j-1])\n                    row[i+1][j] = change(row[i+1][j])\n                    row[i-1][j] = change(row[i-1][j])\n                elif j == 2 :\n                    row[i][j-1] = change(row[i][j-1])\n                    row[i+1][j] = change(row[i+1][j])\n                    row[i-1][j] = change(row[i-1][j])\n            elif i == 2 :\n                if j == 0:\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i-1][j] = change(row[i-1][j])\n                elif j == 1 :\n                    row[i][j+1] = change(row[i][j+1])\n                    row[i][j-1] = change(row[i][j-1])\n                    row[i-1][j] = change(row[i-1][j])\n                elif j == 2 :\n                    row[i-1][j] = change(row[i-1][j])\n                    row[i][j-1] = change(row[i][j-1])\n\nfor i in range(3):\n    rowo = ''\n    for j in range(3):\n        rowo += str(row[i][j])\n    print(rowo)", "from sys import stdin\ndef main():\n\tf1=[1,1,1]\n\tf2=[1,1,1]\n\tf3=[1,1,1]\n\ta=str(stdin.readline()).split()\n\tb=str(stdin.readline()).split()\n\tc=str(stdin.readline()).split()\n\tfor i in range (3):\n\t\ta[i]=int(a[i])\n\t\tb[i]=int(b[i])\n\t\tc[i]=int(c[i])\n\tif (a[0]%2!=0):\n\t\tif (f1[0]==0):\n\t\t\tf1[0]=1\n\t\telse:\n\t\t\tf1[0]=0\n\t\tif (f2[0]==0):\n\t\t\tf2[0]=1\n\t\telse:\n\t\t\tf2[0]=0\n\t\tif (f1[1]==0):\n\t\t\tf1[1]=1\n\t\telse:\n\t\t\tf1[1]=0\n\tif (a[1]%2!=0):\n\t\tif (f1[0]==0):\n\t\t\tf1[0]=1\n\t\telse:\n\t\t\tf1[0]=0\n\t\tif (f1[1]==0):\n\t\t\tf1[1]=1\n\t\telse:\n\t\t\tf1[1]=0\n\t\tif (f2[1]==0):\n\t\t\tf2[1]=1\n\t\telse:\n\t\t\tf2[1]=0\n\t\tif (f1[2]==0):\n\t\t\tf1[2]=1\n\t\telse:\n\t\t\tf1[2]=0\n\tif (a[2]%2!=0):\n\t\tif (f1[1]==0):\n\t\t\tf1[1]=1\n\t\telse:\n\t\t\tf1[1]=0\n\t\tif (f1[2]==0):\n\t\t\tf1[2]=1\n\t\telse:\n\t\t\tf1[2]=0\n\t\tif (f2[2]==0):\n\t\t\tf2[2]=1\n\t\telse:\n\t\t\tf2[2]=0\n\tif (b[0]%2!=0):\n\t\tif (f1[0]==0):\n\t\t\tf1[0]=1\n\t\telse:\n\t\t\tf1[0]=0\n\t\tif (f2[0]==0):\n\t\t\tf2[0]=1\n\t\telse:\n\t\t\tf2[0]=0\n\t\tif (f3[0]==0):\n\t\t\tf3[0]=1\n\t\telse:\n\t\t\tf3[0]=0\n\t\tif (f2[1]==0):\n\t\t\tf2[1]=1\n\t\telse:\n\t\t\tf2[1]=0\n\tif (b[1]%2!=0):\n\t\tif (f2[0]==0):\n\t\t\tf2[0]=1\n\t\telse:\n\t\t\tf2[0]=0\n\t\tif (f1[1]==0):\n\t\t\tf1[1]=1\n\t\telse:\n\t\t\tf1[1]=0\n\t\tif (f2[1]==0):\n\t\t\tf2[1]=1\n\t\telse:\n\t\t\tf2[1]=0\n\t\tif (f3[1]==0):\n\t\t\tf3[1]=1\n\t\telse:\n\t\t\tf3[1]=0\n\t\tif (f2[2]==0):\n\t\t\tf2[2]=1\n\t\telse:\n\t\t\tf2[2]=0\n\tif (b[2]%2!=0):\n\t\tif (f2[1]==0):\n\t\t\tf2[1]=1\n\t\telse:\n\t\t\tf2[1]=0\n\t\tif (f1[2]==0):\n\t\t\tf1[2]=1\n\t\telse:\n\t\t\tf1[2]=0\n\t\tif (f2[2]==0):\n\t\t\tf2[2]=1\n\t\telse:\n\t\t\tf2[2]=0\n\t\tif (f3[2]==0):\n\t\t\tf3[2]=1\n\t\telse:\n\t\t\tf3[2]=0\n\tif (c[0]%2!=0):\n\t\tif (f2[0]==0):\n\t\t\tf2[0]=1\n\t\telse:\n\t\t\tf2[0]=0\n\t\tif (f3[0]==0):\n\t\t\tf3[0]=1\n\t\telse:\n\t\t\tf3[0]=0\n\t\tif (f3[1]==0):\n\t\t\tf3[1]=1\n\t\telse:\n\t\t\tf3[1]=0\n\tif (c[1]%2!=0):\n\t\tif (f3[0]==0):\n\t\t\tf3[0]=1\n\t\telse:\n\t\t\tf3[0]=0\n\t\tif (f2[1]==0):\n\t\t\tf2[1]=1\n\t\telse:\n\t\t\tf2[1]=0\n\t\tif (f3[1]==0):\n\t\t\tf3[1]=1\n\t\telse:\n\t\t\tf3[1]=0\n\t\tif (f3[2]==0):\n\t\t\tf3[2]=1\n\t\telse:\n\t\t\tf3[2]=0\n\tif (c[2]%2!=0):\n\t\tif (f3[1]==0):\n\t\t\tf3[1]=1\n\t\telse:\n\t\t\tf3[1]=0\n\t\tif (f2[2]==0):\n\t\t\tf2[2]=1\n\t\telse:\n\t\t\tf2[2]=0\n\t\tif (f3[2]==0):\n\t\t\tf3[2]=1\n\t\telse:\n\t\t\tf3[2]=0\n\td=str(f1[0])\n\te=str(f1[1])\n\tf=str(f1[2])\n\tg=str(f2[0])\n\th=str(f2[1])\n\ti=str(f2[2])\n\tj=str(f3[0])\n\tk=str(f3[1])\n\tl=str(f3[2])\n\tprint(d+e+f)\n\tprint(g+h+i)\n\tprint(j+k+l)\nmain()\n\n\n", "from sys import stdin\n\nboard = None\ndeltar = [ -1, 0, 0, 1]\ndeltac = [ 0, -1, 1, 0]\n\ndef main():\n  nonlocal board, deltar, deltac\n  inp = stdin\n  board = [ [ int(x) for x in inp.readline().strip().split() ] for i in range(3) ]\n  ans = [ [ 0 for j in range(3) ] for i in range(3) ]\n  for r in range(3):\n    for c in range(3):\n      ans[r][c] += board[r][c]\n      for a in range(4):\n        if 0<=r+deltar[a]<3 and 0<=c+deltac[a]<3:\n          ans[r][c] += board[r+deltar[a]][c+deltac[a]]\n  for r in range(3):\n    print(''.join(str(1-(ans[r][c]%2)) for c in range(3)))\n\nmain()\n", "import sys\n\ninarray = []\noutarray = [[1 for j in range(3)] for i in range(3)]\nfor i in range(3):\n    k = [int(x) for x in (sys.stdin.readline()).split()]\n    for j in range(3):\n        if(k[j] % 2 != 0):\n            outarray[i][j] ^= 1\n            if(i - 1 >= 0):\n                outarray[i - 1][j] ^= 1\n            if(j - 1 >= 0):\n                outarray[i][j - 1] ^= 1\n            if(i + 1 < 3):\n                outarray[i + 1][j] ^= 1\n            if(j + 1 < 3):\n                outarray[i][j + 1] ^= 1\n            \nfor i in range(3):\n    print(\"\".join([str(x) for x in outarray[i]]))", "arr = []\nfor i in range(3):\n\tarr.append([int(x) % 2 for x in input().split()])\nans = [[1, 1, 1], [1, 1, 1], [1, 1, 1]]\nfor i in range(3):\n\tfor j in range(3):\n\t\tcnt = 0\n\t\tvisit = [[i, j], [i + 1, j], [i - 1, j], [i, j + 1], [i, j - 1]]\n\t\tfor x, y in visit:\n\t\t\tif x < 0 or y < 0 or x > 2 or y > 2:\n\t\t\t\tcontinue\n\t\t\tcnt += arr[x][y]\n\t\tif cnt % 2:\n\t\t\tans[i][j] = 0\nprint('\\n'.join(''.join(str(x) for x in l) for l in ans))\n", "def main():\n    l = [list(map(int, input().strip().split())) for _ in range(3)]\n    field = [[1] * 3 for _ in range(3)]\n    for y in range(3):\n        for x in range(3):\n            if l[y][x] & 1:\n                for i in range(max(y - 1, 0), min(y + 2, 3)):\n                    field[i][x] ^= 1\n                for j in range(max(x - 1, 0), min(x + 2, 3)):\n                    field[y][j] ^= 1\n                field[y][x] ^= 1\n    for _ in range(3):\n        print(''.join(map(str, field[_])))\n\n\nmain()", "'''\nCreated on Jan 28, 2015\n\n@author: RedNextYear\n'''\nt = [list(map(int, input().split())) for i in range(3)]\np = [[1] * 5 for i in range(5)]\nfor i in range(3):\n    for j in range(3):\n        if t[i][j] % 2 == 1:\n            p[i][j + 1] += 1\n            p[i + 2][j + 1] += 1\n            for v in range(j, j + 3):\n                p[i + 1][v] += 1\nfor i in range(1, 4):\n    print(''.join(str(p[i][j] % 2) for j in range(1, 4)))\n", "# coding: utf-8\nlight = [[0,0,0,0,0] for i in range(5)]\nfor i in range(1,4):\n    s = [int(i) for i in input().split()]\n    for j in range(1,4):\n        light[i][j] += s[j-1]\n        light[i-1][j] += s[j-1]\n        light[i+1][j] += s[j-1]\n        light[i][j-1] += s[j-1]\n        light[i][j+1] += s[j-1]\nfor i in range(1,4):\n    for j in range(1,4):\n        if light[i][j]%2==1:\n            print(0,end='')\n        else:\n            print(1,end='')\n    print()\n", "lix = [[int(x) for x in input().split()] for y in range(3) ]\nbulbs = [[ \"1\" for x in range(3)] for y in range(3)]\nmoves = [(0,0),(1,0),(-1,0),(0,1),(0,-1)]\nfor x in range(3):\n    for y in range(3):\n        if lix[x][y] & 1:\n            for a,b in moves:\n                if (x+a <3 and x+a>-1) and (y+b <3 and y+b>-1):\n                    bulbs[x+a][y+b] =\"0\" if int(bulbs[x+a][y+b]) else \"1\"\n\n\nprint(\"\\n\".join([\"\".join(li) for li in bulbs]))\n\n\n\n", "l=[]\nfor i in range(3):\n    l1=input().split()\n    for j in range(3):\n        l1[j]=int(l1[j])\n    l.append(l1)\n\nfor i in range(3):\n    for j in range(3):\n        c=l[i][j]\n        if(i>0):\n            c+=l[i-1][j]\n        if(j>0):\n            c+=l[i][j-1]\n        if(i<2):\n            c+=l[i+1][j]\n        if(j<2):\n            c+=l[i][j+1]\n        if(c%2==0):\n            print(1,end=\"\")\n        else:\n            print(0,end=\"\")\n    print()\n\n\n\n\n\n", "arr = [[int(i) % 2 for i in input().split()] for _ in range(3)]\nstate = [[1] * 3 for i in range(3)]\ndirs = [(0, 1), (0, -1), (1, 0), (-1, 0)]\nfor y in range(3):\n    for x in range(3):\n        state[y][x] ^= arr[y][x]\n        for dy, dx in dirs:\n            j, i = y + dy, x + dx\n            if 0 <= j < 3 and 0 <= i < 3:\n                state[y][x] ^= arr[j][i]\nfor row in state:\n    print(*row, sep='')\n", "a,b,c=list(map(int,input().split()))\ne,f,g=list(map(int,input().split()))\nm,n,l=list(map(int,input().split()))\np=1\nq=1\nr=1\ns=1\nt=1\nu=1\nv=1\nw=1\nx=1\nk=[p,q,r,s,t,u,v,w,x]\nj=[a,b,c,e,f,g,m,n,l]\ndef change(l,h):\n    kas=l[h] \n    if kas==1:\n        l[h]=0\n    if kas==0:\n        l[h]=1\n    \n\n\nfor d in range(3): \n    if j[d]%2!=0 and j[d]!=0:\n        change(k,d)\n        if d!=2:\n            change(k,d+1)\n        if d!=0:\n            change(k,d-1)\n        #if d!=1:\n            #change(k,4)\n        change(k,d+3)\n        #if d==1:\n            #change(k,d+2)\n            #change(k,d+4)\n        \nfor d in range(3,6): \n    if j[d]%2!=0 and j[d]!=0:\n        change(k,d)\n        if d!=5:\n            change(k,d+1)\n            \n        if d!=3:\n            change(k,d-1)\n        change(k,d+3)\n        change(k,d-3)\n        #if d==4:\n            #change(k,d+2)\n            #change(k,d-4)\n            #change(k,d+4)\n            #change(k,d-2)\n        #if d==3:\n            #change(k,d+4)\n            #change(k,d-2)\n        #if d==5:\n            #change(k,d-4)\n            #change(k,d+2)\n        \nfor d in range(6,9): \n    if j[d]%2!=0 and j[d]!=0:\n        change(k,d)\n        if d!=8:\n            change(k,d+1)\n        if d!=6:\n            change(k,d-1)\n        #if d!=7:\n            #change(k,4)\n        change(k,d-3)\n        #if d==7:\n            #change(k,d-2)\n            #change(k,d-4)\nS0=str(k[0])\nS1=str(k[1])\nS2=str(k[2]) \nS3=str(k[3])\nS4=str(k[4])\nS6=str(k[6])\nS5=str(k[5])\nS7=str(k[7])\nS8=str(k[8])\n\nprint(S0+S1+S2)\nprint(S3+S4+S5)\nprint(S6+S7+S8)\n", "def do(sh):\n    return 1-sh\n\n\na = [[1 for _ in range(5)] for __ in range(5)]\nfor i in range(1, 4):\n    b = list(map(int, input().split()))\n    for j in range(1, 4):\n        if b[j-1] % 2 == 1:\n            a[i][j] = 1-a[i][j]\n            a[i+1][j] = 1-a[i+1][j]\n            a[i-1][j] = 1-a[i-1][j]\n            a[i][j+1] = 1-a[i][j+1]\n            a[i][j-1] = 1-a[i][j-1]\nprint(\"\\n\".join([\"\".join(map(str, line[1:-1])) for line in a[1:-1]]))\n", "def get_neighbors(i, j):\n    neighbors = []\n    for x in range(-1, 2):\n        for y in range(-1, 2):\n            if x != y:\n                if x == 0 or y == 0:\n                    if x + i >= 0 and y + j >= 0 and x + i <= 2 and y + j <= 2:\n                        neighbors.append((x + i, y + j))\n    return neighbors\n\n\n\ndef lights_out(lst):\n    res = [x[:] for x in lst]\n    for i in range(len(lst)):\n        for j in range(len(lst[i])):\n            for x, y in get_neighbors(i, j):\n                res[i][j] += lst[x][y]\n\n    return res\n\ndef __starting_point():\n    lst = [0, 0, 0]\n    for i in range(3):\n        lst[i] = [int(x) for x in input().split()]\n    res = lights_out(lst)\n    for line in res:\n        for entry in line:\n            print((entry + 1) % 2, end='')\n        print()\n\n__starting_point()", "G = [[1]*5 for i in range(5)]\n\nD = [(0,0),(-1,0),(1,0),(0,-1),(0,1)]\n\ndef toggle(i,j):\n    for d in D :\n        G[i+d[0]][j+d[1]] = 1 - G[i+d[0]][j+d[1]]\n\nfor i in range(1,4):\n    n = list(map(int,input().split()))\n    for j in range(1,4):\n        if n[j-1] % 2 == 1 :\n            toggle(i,j)\n\nfor i in range(1,4):\n    for j in range(1,4):\n        print(G[i][j],end='')\n    print()", "l=[[0]*5]+[[0]+list(map(int,input().split()))+[0] for _ in range(3)]+[[0]*5]\nans=[['']*3 for _ in range(3)]\nfor i in range(1,4):\n    for j in range(1,4):\n        ans[i-1][j-1]=str(1-((l[i][j]+l[i][j-1]+l[i][j+1]+l[i-1][j]+l[i+1][j])%2))\nprint('\\n'.join(map(''.join,ans)))", "s=[[1]*5 for _ in range(5)]\nfor i in 1,2,3:\n\tfor j,v in zip((1,2,3),map(int,input().split())):\n\t\tfor k,d in (-1,0),(1,0),(0,-1),(0,1),(0,0):\n\t\t\ts[i+k][j+d]+=v\nfor i in 1,2,3:\n\tfor j in 1,2,3:\n\t\tprint(s[i][j]%2,end='')\n\tprint()"]