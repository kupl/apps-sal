["n = int(input())\nline = list(map(int, input().split()))\nm = dict()\nans = 0\nfor i in range(n):\n    if line[i] not in m:\n        m[line[i]] = 1\n    else:\n        m[line[i]] += 1\n    var = m[line[i]]\n    if line[i] - 1 in m:\n        var += m[line[i]-1]\n    if line[i] + 1 in m:\n        var += m[line[i]+1]\n    ans += (i+1-var) * line[i]\nx = dict()\nfor j in range(n):\n    i = n - j - 1\n    if line[i] not in x:\n        x[line[i]] = 1\n    else:\n        x[line[i]] += 1\n    var = x[line[i]]\n    if line[i] - 1 in x:\n        var += x[line[i]-1]\n    if line[i] + 1 in x:\n        var += x[line[i]+1]\n    ans -= (j+1-var) * line[i]\nprint(ans)\n\n", "summ = 0\nglob = 0\nN = int(input())\na = {}\ncnt = 0\nhuh = list(map(int, input().split()))\nfor i in huh:\n    if i - 1 not in a:\n        a[i - 1] = 0\n    if i + 1 not in a:\n        a[i + 1] = 0\n    if i not in a:\n        a[i] = 0\n    glob += (cnt - a[i - 1] - a[i + 1]) * i - (summ - a[i - 1] * (i - 1) - a[i + 1] * (i + 1))\n    a[i] += 1\n    summ += i\n    cnt += 1\nprint(glob)", "from collections import Counter\nfrom itertools import accumulate as acc\nread=lambda: list(map(int,input().split()))\nn=int(input())\nx=read()\ns=0\nans=0\nc=Counter()\nfor num,i in enumerate(x):\n    ans+=(num-c[i-1]-c[i+1])*i-(s-c[i-1]*(i-1)-c[i+1]*(i+1))\n    c[i]+=1\n    s+=i\nprint(ans)\n", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\nfrom collections import defaultdict\n\nn = ii()\na = li()\n\ndef calc(a):\n    d = defaultdict(int)\n    s = 0\n    for i in range(n):\n        x = a[i]\n        s += (i - d[x] - d[x-1] - d[x+1]) * x\n        d[x] += 1\n    return s\n\nans = calc(a) - calc(a[::-1])\nprint(ans)\n", "n = int(input())\narray = list(map(int, input().split()))\n\nd = dict()\nt, c = 0, 0\n\nfor i in range(len(array)):\n    c += array[i]\n    t += (i + 1) * array[i] - c\n\n    if array[i] in d:\n        d[array[i]] += 1\n    else:\n        d[array[i]] = 1\n\n    if (array[i] + 1) in d:\n        t += d[array[i] + 1]\n    if (array[i] - 1) in d:\n        t -= d[array[i] - 1]\n\nprint(t)\n", "n = int(input())\na = list(map(int, input().split()))\n\nps = a[0]\nans = 0\nh = {a[0]:1}\nhv = {a[0]: a[0]}\ndef gv(h, k):\n    if k in h:\n        return h[k]\n    else:\n        return 0\n\nfor i in range(1, n):\n    c = i - gv(h,a[i]) - gv(h,a[i]-1) - gv(h,a[i]+1)\n    cps = ps - gv(hv,a[i]) -gv(hv,a[i]-1)-gv(hv,a[i]+1)\n    ans += a[i]*c - cps\n    #print(a[i], c, cps)\n    #print(ans)\n    if a[i] not in h:\n        h[a[i]] = 0\n        hv[a[i]] = 0\n    h[a[i]] += 1\n    hv[a[i]] += a[i]\n    ps += a[i]\nprint(ans)", "n = int(input())\nt = list(map(int, input().split()))\nc = {}\nu = {}\na = [0 for _ in range(n)]\nfor i in range(n):\n    a[i] = t[i]*i - t[i]*(n-1-i);\n    if t[i] not in u:\n        u[t[i]] = [i]\n    else:\n        u[t[i]].append(i)\nl = []\nfor x in u:\n    l.append(x);\nl.sort()\np = len(l)\nres = 0\nfor i in range(p-1):\n    if (l[i]+1 in u):\n        l1 = len(u[l[i]])\n        l2 = len(u[l[i]+1])\n        j1 = 0\n        j2 = 0\n        t1 = 0\n        t2 = 0\n        for j in range(l1+l2):\n            #print(j1, j2);\n            #print(l1, l2)\n            if (j1 == l1):\n                t2 += 1\n                j2 += 1\n                res -= t1\n            elif j2 == l2:\n                t1 += 1\n                j1 += 1\n                res += t2\n            elif (u[l[i]][j1] < u[l[i]+1][j2]):\n                t1 += 1\n                j1 += 1\n                res += t2\n            else:\n                t2 += 1\n                j2 += 1\n                res -= t1\nfor i in range(n):\n    res += a[i]\nprint(res)\n\n", "from collections import Counter\n\nn = int(input())\narr = [int(i) for i in input().split()]\ncnt = Counter()\nfor i in arr:\n    cnt[i] += 1\ncur = Counter()\ns = sum(arr)\nd = 0\ni = 0\nfor val in arr:\n    n1 = cnt[val - 1] - cur[val - 1]\n    n2 = cnt[val + 1] - cur[val + 1]\n    n3 = cnt[val] - cur[val]\n    d += s - (n - i) * val\n    d -= n1 * (val - 1)\n    d += n1 * val\n    d -= n2 * (val + 1)\n    d += n2 * val\n    d -= n3 * val\n    d += n3 * val\n    i += 1\n    s -= val\n    cur[val] += 1\nprint(d)\n", "from random import randint\nfrom time import time\nn = list(map(int, input().strip().split()))[0]\narr = list(map(int, input().strip().split()))\n\ntik = time()\ncount = dict()\nsubsum = [0 for i in range(n + 1)]\nfor index in range(len(arr) - 1, -1, -1):\n    if arr[index] in count:\n        count[arr[index]] += 1\n    else:\n        count[arr[index]] = 1\n    if index == len(arr) - 1:\n        subsum[index] = arr[index]\n    else:\n        subsum[index] = arr[index] + subsum[index + 1]\n\nanswer = 0\nfor index, value in enumerate(arr):\n    answer += subsum[index + 1] - ((len(arr) - index - 1) * arr[index])\n    if value + 1 in count:\n        answer -= count[value + 1]\n    if value - 1 in count:\n        answer += count[value - 1]\n    count[value] -= 1\n    if count[value] == 0:\n        count.pop(value)\nprint(answer)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Dec 12 20:33:55 2017\n\n@author: savit\n\"\"\"\ndic={}\nn=int(input())\nsum1=0\na=list(map(int,input().split()))\nfor i in range(n-1,-1,-1):\n    try:\n        dic[a[i]]+=1\n        \n    except:\n        dic[a[i]]=1\n    sum1+=a[i]*(-n+1+2*i)\n    \n    try:\n        #print(dic[a[i]+1],'dec',a[i])\n        sum1-=dic[a[i]+1]\n    except:\n        pass\n    try:\n        #print(dic[a[i]-1],'inc',a[i])\n        sum1+=dic[a[i]-1]\n    except:\n        pass\nprint(sum1)\n        \n    \n\n\n", "n = int(input())\na = list(map(int, input().split(' ')))\n\nd = {}\ns = a[0]\nret = 0\nd[a[0]] = 1\nfor i in range(1,n):\n  ret += a[i]*i - s\n  if a[i]-1 in d:\n    ret -= d[a[i]-1]\n  if a[i]+1 in d:\n    ret += d[a[i]+1]\n  s += a[i]\n  if a[i] not in d:\n    d[a[i]] = 0\n  d[a[i]] += 1\n\nprint(ret)", "from collections import defaultdict\n\n\nn = input()\na = list(map(int, input().split()))\ndef solve(a):\n    sum = a[0]\n    res = 0\n    size = 1\n    counter = defaultdict(int)\n    counter[a[0]] +=1\n\n    for el in a[1:]:\n        counter[el] += 1\n        res = res - sum + size * el\n        res = (res- counter[el-1]) + counter[el+1]\n        size += 1\n        sum += el\n    return res\nprint(solve(a))", "n = int(input())\ncnt = {}\nres = 0\ns = 0\na = list(map(int, input().split()))\nfor i in range(n):\n\tx = a[i]\n\ts += x\n\tcnt[x] = cnt.get(x, 0) + 1\n\tres += x * (i + 1 - (cnt.get(x, 0) + cnt.get(x - 1, 0) + cnt.get(x + 1, 0))) - (s - (x * cnt.get(x, 0) + (x - 1) * cnt.get(x - 1, 0) + (x + 1) * cnt.get(x + 1, 0)))\nprint(res)", "n =int(input())\na = list(map(int, input().split()))\nres , sum = 0, a[0]\ncnt = dict()\ncnt[a[0]] = 1\nfor i in range(1, n):\n    res += a[i] * i - sum\n    sum += a[i]\n    if (a[i] - 1) in cnt:\n        res -= cnt[a[i] - 1]\n    if (a[i] + 1) in cnt:\n        res += cnt[a[i] + 1]\n    if a[i] not in cnt:\n        cnt[a[i]] = 1\n    else:\n        cnt[a[i]] += 1\nprint(res)", "n = int(input())\ncnt = dict()\ns = 0\nans = 0\na = list(map(int, input().split()))\nfor i in range(0, n):\n\tans += a[i] * i - s;\n\tans -= cnt.get(a[i] - 1, 0)\n\tans += cnt.get(a[i] + 1, 0)\n\ts += a[i]\n\tcnt[a[i]] = cnt.get(a[i], 0) + 1\nprint(ans)", "N = 2 * 10**5 + 3\nn = int(input())\nA, cnt = list(map(int,input().split(' '))), {}\n\ns, a = 0, 0\n\nfor i in range(n-1,-1,-1):\n    a += s\n    if (A[i]-1) in cnt:\n        a += cnt[A[i]-1]\n    if (A[i]+1) in cnt:\n        a -= cnt[A[i]+1]\n    a -= (n-(i+1))*A[i]\n    s += A[i]\n    if A[i] not in cnt:\n        cnt[A[i]]=0\n    cnt[A[i]] += 1\n\nprint(a)\n", "n = int(input())\nnum = list(map(int, input().split()))\n\ncnt = {}\ncursum = 0\nans = 0\n\nfor i in range(n):\n    ans += num[i] * i - cursum\n\n    if (num[i] - 1) in cnt:\n        ans -= cnt[num[i] - 1]\n    if (num[i] + 1) in cnt:\n        ans += cnt[num[i] + 1]\n\n    cursum += num[i]\n    if num[i] not in cnt:\n        cnt[num[i]] = 0\n    cnt[num[i]] += 1\n\nprint(ans)\n", "from bisect import bisect\n\n\ndef main():\n    n = int(input())\n    an = [(i, int(s)) for i, s in enumerate(input().split())][:n]\n\n    ans = sum(a * (-n + 1 + 2 * i) for i, a in an)\n\n    group = {}\n    for i, a in an:\n        if a not in group:\n            group[a] = []\n        group[a].append(i)\n    group = list(sorted(list(group.items()), key=lambda t: t[0]))\n    # print(group)\n\n    for i in range(len(group) - 1):\n        if group[i][0] + 1 == group[i + 1][0]:\n            idx_s1 = group[i][1]\n            idx_s2 = group[i + 1][1]\n            for idx in idx_s1:\n                smaller = bisect(idx_s2, idx)\n                larger = len(idx_s2) - smaller\n                ans = ans - larger + smaller\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "m = {}\nn = int(input())\nl = list(map(int, input().split()))\nSum = 0\nans = 0\n\nfor i in range(n):\n  ans += i * l[i] - Sum\n  if m.__contains__(l[i] - 1) :\n    ans -= m[l[i] - 1]\n  if m.__contains__(l[i] + 1) :\n    ans += m[l[i] + 1]\n  if m.__contains__(l[i]) :\n    m[l[i]] += 1\n  else:\n    m[l[i]] = 1\n  Sum += l[i]\n\nprint(ans)\n\n\n", "from collections import Counter\n\nn = int(input())\nl = list(map(int, input().split()))\n\nans = 0\ns = 0\n\nfor i, a in enumerate(l):\n    ans += a * i - s\n    s += a\n\nc = Counter()\nfor a in l:\n    ans -= c[a-1]\n    ans += c[a+1]\n    c[a] += 1\n\nprint(ans)", "n = int(input())\nv = [int(x) for x in input().split()]\nmp = {}\ns = sum(v)\nans = 0\ncnt = n\n\nfor i in range(n):\n    if v[i] in mp:\n        mp[v[i]] += 1\n    else:\n        mp[v[i]] = 1\n\nfor i in range(n):\n    c = v[i]\n    s -= c\n    cnt -= 1\n    ans += (s - (cnt*c))\n    ans -= mp.get(c+1, 0)\n    ans += mp.get(c-1, 0)\n    mp[c] -= 1\n    \nprint(ans)", "cnt = {}\nn = int(input())\ns = 0\nan = 0\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] not in list(cnt.keys()):\n        cnt[a[i]] = 0\n    if a[i] - 1 not in list(cnt.keys()):\n        cnt[a[i] - 1] = 0\n    if a[i] + 1 not in list(cnt.keys()):\n        cnt[a[i] + 1] = 0\n    s += a[i]\n    cnt[a[i]] += 1\n    num = i + 1 - cnt[a[i]] - cnt[a[i] - 1] - cnt[a[i] + 1]\n    an += num * a[i] - (s - a[i] * cnt[a[i]] - (a[i] + 1) * cnt[a[i] + 1] - (a[i] - 1) * cnt[a[i] - 1])\nprint(an)\n", "n = int(input())\ndic = {}\nans = s = 0\nk = input().split()\nfor i in range(n):\n  a = int(k[i])\n\n  if (a - 1) in dic:\n    b = dic[a - 1]\n  else:\n    b = 0\n\n  if a in dic:\n    c = dic[a]\n  else:\n    c = 0\n    dic.update({a:0})\n\n  if (a + 1) in dic:\n    d = dic[a + 1]\n  else:\n    d = 0      \n\n  ans += a * (i - b - c - d) - s + b * (a - 1) + c*(a) + d * (a+1)  \n  dic[a] += 1\n  s += a\n\nprint(ans)\n"]