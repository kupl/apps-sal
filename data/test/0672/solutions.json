["# fin = open(\"input.txt\")\n# a, b = map(int, fin.readline().split())\na, b = list(map(int, input().split()))\na2 = a - b\nif a2 == 0:\n\tprint(\"infinity\")\nelse:\n\tCount = 0\n\ti = 1\n\twhile i ** 2 <= a2:\n\t\tCount += (a2 % i == 0 and i > b) + (a2 % i == 0 and a2 // i > b and i != a2 // i)\n\t\ti += 1\n\tprint(Count)\n", "import math\nline = input().split()\na = int(line[0])\nb = int(line[1])\nif a == 0 and b == 0:\n    print(\"infinity\")\nelif a == 0:\n    print(\"0\")\nelif a== b:\n    print(\"infinity\")\nelif a < b:\n    print(\"0\")\nelse:\n    c = a- b;\n    out = 0\n    cek = [1]\n    dum = c\n    if dum % 2 == 0:\n        cek.append(2)\n        while dum % 2 == 0:\n            dum /= 2\n            for i in range(len(cek)):\n                cek.append(cek[i] * 2)\n    cek = list(set(cek))\n    border = int(math.sqrt(dum))\n    for i in range(3,border+1,2):\n        if dum % i == 0:\n            cek.append(i)\n            while dum % i == 0:\n                dum /= i\n                for j in range(len(cek)):\n                    cek.append(cek[j] * i)\n    dum = int(dum)\n    if dum != 0:\n        for j in range(len(cek)):\n            cek.append(cek[j] * dum)\n    cek = list(set(cek))\n    cek.sort()\n    for i in cek:\n        if i == 0:\n            continue\n        if c % i == 0:\n            result = c / i\n            if result <= b:\n                break\n            out += 1\n    print(out)\n", "import math\nimport collections\n\n\ndef multipliers(x):\n\n    divisors = []\n    divisor = 2\n    stop = math.sqrt(x)\n    while x != 1 and divisor <= stop:\n\n        if x % divisor == 0:\n\n            x //= divisor\n            divisors.append(divisor)\n\n        else:\n\n            divisor += 1\n\n    if x != 1:\n\n        divisors.append(x)\n\n    return divisors\n\n\ndef count(muls, bound, viewed = None, x=1):\n\n    viewed = viewed or set()\n    for i, mul in enumerate(muls):\n\n        nx = x * mul\n        if nx not in viewed:\n\n            viewed.add(nx)\n            if nx > bound:\n\n                yield 1\n\n            yield from count(muls[:i] + muls[i + 1:], bound, viewed, nx)\n\n\na, b = list(map(int, input().split()))\n# a, b = 4, 0\nif a == b:\n\n    print(\"infinity\")\n\nelif b > a or a == 0:\n\n    print(0)\n\nelif (a, b) == (1, 0):\n\n    print(1)\n\nelse:\n\n    muls = multipliers(a - b)\n    r = sum(count(muls, b))\n    print(r if b else r + 1)\n", "import itertools\nimport math\n\ndef main():\n\ta, b = list(map(int, input().split()))\n\n\tif a == b:\n\t\tprint(\"infinity\")\n\t\treturn\n\tif a < b:\n\t\tprint(0)\n\t\treturn\n\ta -= b\n\n\tn = 0\n\n\tfor i in range(1, math.ceil(math.sqrt(a))):\n\t\tif (a % i == 0):\n\t\t\tn += (i > b) + (a // i > b)\n\n\tif math.sqrt(a) % 1 == 0 and math.sqrt(a) > b:\n\t\tn += 1\n\n\tprint(n)\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "import math\n\na, b= [int(i) for i in input().split()]\n\nif a<b: print (0)\nelse: \n    if a== b: print(\"infinity\")\n    else:               #>b and divisors of a\n        def FindAllDivisors(x, b):\n            y = 1\n            ans= []\n            while y <= int(math.sqrt(x)):\n                #print(y)\n                if x % y == 0:\n                    #print(x, int(x/y))\n                    if y!= int(x/y) :\n                        if y>b:\n                            ans.append(y)\n                        if int(x/y)>b:\n                            ans.append(int(x/y))\n                    elif y== int(x/y) and y>b:\n                        ans.append(y)\n                y += 1\n            return len(ans)\n        print(FindAllDivisors(a-b, b))", "a, b = [int(i) for i in input().split()]\no = a - b\nsum = 0\nl = 1\nif o > 0:\n    for i in range(1, int(o ** 0.5) + l):\n        if o % i == 0:\n            if o // i > b and i > b:\n                sum += 2\n                if i == o // i:\n                    sum -= 1\n            if (o // i > b and i <= b) or (o // i <= b and i > b):\n                sum += 1\n\nif o == 0:\n    print('infinity')\nelse:\n    print(sum)", "from math import *\n\na, b = list(map(int, input().split()))\nif a == b:\n    print('infinity')\n    return\n\nt = a - b\n\ndef primes_sieve(limit):\n    limitn = limit+1\n    not_prime = [False] * limitn\n    primes = []\n\n    for i in range(2, limitn):\n        if not_prime[i]:\n            continue\n        for f in range(i*2, limitn, i):\n            not_prime[f] = True\n\n        primes.append(i)\n\n    return primes\n\nlst = primes_sieve(trunc(sqrt(10**10+7)))\n\ndef factorize(n, primes):\n    factors = []\n    for p in primes:\n        if p*p > n: break\n        i = 0\n        while n % p == 0:\n            n //= p\n            i+=1\n        if i > 0:\n            factors.append((p, i));\n    if n > 1: factors.append((n, 1))\n\n    return factors\n    \ndef divisors(factors):\n    div = [1]\n    for (p, r) in factors:\n        div = [d * p**e for d in div for e in range(r + 1)]\n    return div\n\n\ndv = divisors(factorize(t, lst))\nc = 0\nfor x in dv:\n    if x > b:\n        c+=1\nprint(c)\n#print(dv)\n", "# -*- coding: utf-8 -*-\nimport random\n\na, b = list(map(int, input().split()))\n\ndef sums(s, l, b):\n    if s > b:\n        p = 1\n        for x in l:\n            p *= (x[1]+1)\n        #print(\"ok, s=\",s,p)\n        return p\n\n    if not l:\n        #print(\"malo: \", s)\n        return 0\n    #print(s, end=\" \")\n\n    p = 0\n    for i in range(l[0][1]+1):\n        p += sums(s * (l[0][0]**i), l[1:], b)\n    return p\n\n\ndef naive(a,b):\n    if a == b:\n        return \"infinity\"\n    else:\n        if a < b:\n            return 0\n        else:\n            count = 0\n            for x in range(1, a+1):\n                if a % x == b:\n                    count += 1\n            return count\n\n\ndef wise(a, b):\n    if a == 1 and b == 0:\n        return 1\n    if a == b:\n        return \"infinity\"\n    else:\n        d = a-b\n        factors = {}\n        i = 2\n        while i*i <= d:\n            if d % i == 0:\n                factors.setdefault(i, 0)\n                factors[i] += 1\n                d //= i\n            else:\n                i += 1\n        factors.setdefault(d, 0)\n        factors[d] += 1\n\n        return sums(1, list(factors.items()), b)\n            \n#for i in range(10000):\n    ##print(i)\n    #a, b = map(int, input().split())\n    ##a = random.randint(0,100000)\n    ##b = random.randint(0,100000)\n    #if wise(a, b) != naive(a, b):\n        #print(\"!!!\")\n    #print(a, b, wise(a, b), naive(a, b))\n\nprint(wise(a, b))\n        \n", "inp = input().split(' ')\na = int(inp[0])\nb = int(inp[1])\ndiff = a-b\nif a == b:\n    print('infinity')\nelif diff < 0:\n    print(0)\nelse:\n    l = []\n    out = 1\n    for x in range(2,int(diff**(1/2))+1):\n        num = 0\n        y = diff/x\n        while y == int(y):\n            num += 1\n            diff /= x\n            y /= x\n        if num != 0:\n            l.append([x,num])\n            out *= (num + 1)\n        if diff < x:\n            break\n    if diff != 1:\n        l.append([int(diff),1])\n        out *= 2\n    if b == 0:\n        print(out)\n    else:\n        flessb = [1]\n        for pair in l:\n            newl = []\n            for x in flessb:\n                y = x\n                for exp in range(pair[1]+1):\n                    if y<=b:\n                        newl.append(y)\n                        y *= pair[0]\n                    else:\n                        break\n            flessb = set(newl)\n        print(int(out-len(flessb)))\n\n", "a=input().split(\" \")\nx1=int(a[0]);\ny1=int(a[1]);\na1=x1-y1;\nif x1==y1:\n print (\"infinity\");\nelse:\n i=1;\n counter=0;\n while i**2<=a1:\n  counter+=(a1 % i == 0 and i > y1)+(a1 % i == 0 and a1 // i > y1 and i != a1 // i);\n  i+=1;\n print(counter);\n", "a, b = map(int, input().split(' '))\ndiff = a-b\nif a == 0 or b == 0 or diff == 0 or b > a:\n    if b > a:\n        print(0)\n    elif a == 0 and b == 0:\n        print(\"infinity\")\n    elif a == 0:\n        print(0)\n    elif b == 0:\n        factors = []\n        for i in range(1, int(diff ** 0.5) + 1):\n            if diff % i == 0:\n                factors.append(i)\n                factors.append(int(diff/i))\n        factors = list(set(factors))\n        facts = [i for i in factors if i > b]\n        print(len(facts))\n    else:\n        print(\"infinity\")\n\nelse:\n    b = b % a\n    diff = a-b\n    factors = []\n    for i in range(1, int(diff ** 0.5) + 1):\n        if diff % i == 0:\n            factors.append(i)\n            factors.append(int(diff/i))\n    factors = list(set(factors))\n    facts = [i for i in factors if i > b]\n    print(len(facts))", "a, b = list(map(int, input().split(' ')))\ndiff = a-b\nif a == 0 or b == 0 or diff == 0 or b > a:\n    if b > a:\n        print(0)\n    elif a == 0 and b == 0:\n        print(\"infinity\")\n    elif a == 0:\n        print(0)\n    elif b == 0:\n        factors = []\n        for i in range(1, int(diff ** 0.5) + 1):\n            if diff % i == 0:\n                factors.append(i)\n                factors.append(int(diff/i))\n        factors = list(set(factors))\n        facts = [i for i in factors if i > b]\n        print(len(facts))\n    else:\n        print(\"infinity\")\n\nelse:\n    b = b % a\n    diff = a-b\n    factors = []\n    for i in range(1, int(diff ** 0.5) + 1):\n        if diff % i == 0:\n            factors.append(i)\n            factors.append(int(diff/i))\n    factors = list(set(factors))\n    facts = [i for i in factors if i > b]\n    print(len(facts))\n", "from math import floor, sqrt\n\n\ndef main():\n    a, b = list(map(int, input().split()))\n    if a == b:\n        print('infinity')\n    elif a < b:\n        print(0)\n    else:\n        res, ab = 0, a - b\n        for x in range(1, floor(sqrt(ab)) + 1):\n            if not ab % x:\n                if x > b:\n                    res += 1\n                if b * x < ab != x * x:\n                    res += 1\n        print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main2(a,b):\n    if a==b:\n        print(\"infinity\")\n        return\n    x = a-b\n    if b != 0:\n        if x//b == 1:\n            print(x//b)\n            return\n        if x//b <= 0:\n            print(0)\n            return\n    xx=[1]\n    loop=2\n    while loop<=x:\n        if x % loop == 0:\n            x //= loop\n            xx.extend([loop*j for j in xx if loop*j not in xx])\n        else:\n            loop += 1\n        print(loop,x,xx)\n    xx = [k for k in xx if k > b]\n    print(len(xx))\n\ndef main3(a,b):\n    from math import ceil, sqrt\n    if a==b:\n        print(\"infinity\")\n        return\n    x = a-b\n    if b != 0:\n        if x//b == 1:\n            print(x//b)\n            return\n        if x//b <= 0:\n            print(0)\n            return\n    xx = []\n    for i in range(b+1,ceil(sqrt(x))):\n        if x % i == 0: xx.append(i)\n    print(len(xx))\ndef main(a,b,Test=False):\n    from math import ceil, sqrt, floor\n    if a==b:\n        print(\"infinity\")\n        return\n    if b>a:\n        print(\"0\")\n        return\n    x = a-b\n    ans = 0\n    for i in range(1,floor(sqrt(x))+1):\n        if x%i == 0:\n            if i*i==x:\n                ans += i>b\n            else:\n                ans += (i>b)+(x//i>b)\n                if Test: print(i,x//i,ans)\n    print(ans)\n\ndef test():\n    from mxn.timer import Timer, timer\n    print()\n    main(21,5)\n    main(10,10)\n    main(0,1000)\n    with Timer() as tm:\n        main(9435152,272)\n    with Timer() as tm:\n        main(325508499, 119510657)\n    with Timer() as tm:\n        main(1000000000, 6)\n    main(11,2,Test=0)\n    main(15,3,Test=1)\n#test()\n\ndef main_input():\n    a,b = list(map(int,input().split()))\n    main(a,b)\n\ndef __starting_point():\n    main_input()\n\n__starting_point()", "tmp = input().split()\na = int(tmp[0])\nb = int(tmp[1])\na -= b\nif a == 0:\n    print(\"infinity\")\nelse:\n    ans = 0\n    i = 1\n    while i * i < a:\n        if a % i == 0:\n            if i > b:\n                ans += 1\n            if a/i > b:\n                ans += 1\n        i += 1\n    if i * i == a and i > b:\n        ans += 1\n    print(ans)\n", "import math, time\n\na, b= [int(i) for i in input().split()]\nif a<b: print(0)\nelif a==b: print(\"infinity\")\nelse:\n    def FindRequiredDivisors(x, b):\n        y= 1\n        ans= 0\n        while y <= int(math.sqrt(x)):\n            if x % y == 0:\n                if y!= int(x/y) :\n                    if y>b:\n                        ans+= 1\n                    if int(x/y)>b:\n                        ans+= 1\n                elif y== int(x/y) and y>b:\n                    ans+= 1\n            y+= 1\n        return ans\n    print(FindRequiredDivisors(a-b, b))        ", "a,b=map(int,input().split());\ndis=a-b;\nif dis==0:\n\tprint(\"infinity\");\nelse :\n\tres=0;\n\tx=1;\n\twhile x**2<=dis:\n\t\tif dis%x==0 and x>b:\n\t\t\tres+=1;\n\t\tif dis%x==0 and dis//x>b and x**2!=dis:\n\t\t\tres+=1;\n\t\tx+=1;\n\tprint(res);", "import sys\n\na, b = list(map(int, input().split()))\ndis = a - b\nif dis == 0:\n    print(\"infinity\")\nelse:\n    res = 0\n    x = 1\n    while x ** 2 <= dis:\n        if dis % x == 0 and x > b:\n            res += 1\n        if dis % x == 0 and dis // x > b and x ** 2 != dis:\n            res += 1\n        x += 1\n    print(res)\n", "a, b = list(map(int, input().split()))\nif a == b:\n    print('infinity')\nelse:\n    k, val = 1, 0\n    while k * k <= a - b:\n        if (a - b) % k == 0:\n            val += sum(1 for x in {k, (a - b) // k} if x in range(b + 1, a - b + 1))\n        k += 1\n    print(val)\n", "a, b = list(map(int, input().split()))\nif a == b:\n    print('infinity')\nelse:\n    k, val = 1, 0\n    while k * k <= a - b:\n        if (a - b) % k == 0:\n            val += sum(1 for x in {k, (a - b) // k} if x > b)\n        k += 1\n    print(val)\n", "a, b = list(map(int, input().split()))\nk, val = 1, 0\nwhile k * k <= a - b:\n    if (a - b) % k == 0:\n        val += sum(1 for x in {k, (a - b) // k} if x > b)\n    k += 1\nprint('infinity' if a == b else val)\n", "import sys\na, b = map(int, sys.stdin.readline().split())\nif a < b:\n  print(0)\nelif a == b:\n  print('infinity')\nelse:\n  n = a - b\n  if n <= b:\n    print(0)\n  else:\n    ans = 0\n    i = 1\n    while i * i <= n:\n      if n % i == 0:\n        if i > b: ans += 1\n        if n // i > b and n // i != i: ans += 1\n      i += 1\n    print(ans)", "x,y=list(map(int,input().split()))\n\nn=x-y\nj=n\nc=0\nif j<0:\n    print(c)\nelif j==0:\n    print(\"infinity\")\nelse:\n    result_set = set()\n    sqrtn = int(n**0.5)\n    for i in range(1,sqrtn+1):\n        q, r = n/i, n%i\n        if r == 0:\n            if(q>y):\n                result_set.add(q)\n            if(i>y):\n                result_set.add(i)\n            \n    print( len(result_set))\n    \n", "x = input(\"\").split(\" \")\na = int(x[0])\nb = int(x[1])\nlist = []\nanswer = 0\nif a == b:\n    print(\"infinity\")\nelse:\n    value = 1\n    while value**2 <= a-b:\n        if (a-b)%value == 0:\n            list.append(value)\n            if (value != (a-b)/value):\n                list.append((a-b)/value)\n        value = value + 1\n    for value in list:\n        if value > b:\n            answer = answer + 1\n    \n    print(answer)", "#!/usr/bin/env python3\nimport math\n\na, b = list(map(int,input().split()))\ndiff = a - b\nif diff < 0:\n    print(0)\nelif diff == 0:\n    print(\"infinity\")\nelse:\n    cnt = 0\n    for i in range(1, 1 + int(math.sqrt(diff))):\n        if diff % i == 0 and i > b:\n            cnt += 1\n        if diff % i == 0 and diff // i > b and i * i != diff:\n            cnt += 1\n    print(cnt)\n"]