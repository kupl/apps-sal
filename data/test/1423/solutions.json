["n, l, r = list(map(int, input().split()))\nread = lambda: list(map(int, input().split()))\na = list(read())\np = list(read())\nd = [(a[i], p[i], i) for i in range(n)]\nd.sort(key = lambda x: x[1])\ncur = l - d[0][0]\nb = [0] * n\nfor i in range(n):\n    ind = d[i][2]\n    b[ind] = a[ind] + cur\n    if b[ind] < l:\n        cur = l - a[ind]\n        b[ind] = l\n    cur += 1\nif max(b) > r: \n    print(-1)\n    return\nprint(' '.join(map(str, b)))\n", "n,l,r = map(int,input().split())\nA = list(map(int,input().split()))\nP = list(map(int,input().split()))\ns = [0] * n\nper=0\nfor j in range(n):\n    s[P[j] - 1] = j\nb = [0] * n\nb[s[0]] =  l\nfor j in range(1,n):\n    last = b[s[j-1]] - A[s[j-1]]\n    nexs = last+1\n    \n    if r - A[s[j]] > last:\n        b[s[j]] = max(nexs +A[s[j]],l)\n    else:\n        per = 1\n        break\nif per == 1:\n    print(-1)\nelse:\n    print(' '.join(map(str,b)))", "n,l,r = list(map(int, input().split()))\nA = [int(i) for i in input().split()]\nCord = [int(i) for i in input().split()]\nCinv = [0 for _ in range(n)]\nfor i in range(n):\n    Cinv[Cord[i]-1] = i \n\npmin = -10**18\nB = [0 for _ in range(n)]\nans = True\nfor i in range(n):\n    ad = max(l, pmin+A[Cinv[i]]+1)\n    B[Cinv[i]] = ad\n    pmin = B[Cinv[i]]-A[Cinv[i]]\n    if ad > r:\n        ans = False\n\nif ans:\n    print(*B)\nelse:\n    print(-1)\n", "import sys\n\nN, L, R = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [0] * N\nc = list(map(int, input().split()))\nd = [i for i in range(N)]\n\nz = [list(t) for t in zip(c, a, b, d)]\nz = sorted(z)\n\nz[0][2] = L\nlast = z[0][2] - z[0][1]\n\nfor i in range(1, N):\n    z[i][2] = max(last + 1 + z[i][1], L)\n    if z[i][2] > R:\n        print(-1)\n        return\n    last = z[i][2] - z[i][1]\n\nz = sorted(z, key=lambda t: t[3])\n_, _, res, _ = list(zip(*z))\nprint(*res)\n", "n, l, r = list(map(int, input().split()))\na = list(map(int, input().split()))\np = list(map(int, input().split()))\n\norder = dict()\n\nfor i in range(len(p)):\n    order[p[i]] = i\n\ncurr = -100000000000\nb = [-1] * n\nfor i in range(1, n+1):\n    if i == 1:\n        b[order[i]] = l\n        curr = b[order[i]] - a[order[i]]\n        continue\n    b[order[i]] = max(l, curr + 1 + a[order[i]])\n    curr = b[order[i]] - a[order[i]]\n    \nfor i in b:\n    if i > r:\n        print(-1)\n        return\nprint(*b)\n", "n, l, r = map(int,input().split(\" \"))\na = list(map(int, input().split(\" \")))\ncompressed = list(map(int, input().split(\" \")))\n\n#print('n,l,r')\n#print(n,l,r)\n\nb = [0]*n \n\nlastmod = -1\nlol = list(zip(compressed, enumerate(a)))\n#print('sorted lol')\n#print(sorted(lol))\n\nfor i, (pos, val)  in sorted(lol): \n#\tprint('position of a, val of a in that pos')\n#\tprint(pos, val) \n#\tprint('lastmod')\n#\tprint(lastmod)\n\tif i == 1:\n\t\tb[pos] = l\n\t\tlastmod = pos\n\tif i > 1: \t\n\t\tb[pos] = max(b[lastmod] - a[lastmod] + val + 1, l)\n\t\tif b[pos] > r: \n\t\t\tprint(\"-1\")\n\t\t\treturn\n\t\tlastmod = pos\n#\tprint('b is now')\n#\tprint(b)\n\nfor i in b: \n\tprint(i, end=\" \")\n\t \t\t\n", "read = lambda: map(int, input().split())\nn, l, r = read()\na = list(read())\np = list(read())\nd = [i for i in range(n)]\nd.sort(key = lambda x: p[x])\ncur = l - a[d[0]]\nb = [0] * n\nfor ind in d:\n    b[ind] = a[ind] + cur\n    if b[ind] < l:\n        cur = l - a[ind]\n        b[ind] = l\n    cur += 1\nif max(b) > r: \n    print(-1)\n    return\nprint(' '.join(map(str, b)))", "n, l, r = map(int, input().split())\n\na = list(map(int, input().split()))\np = list(map(int, input().split()))\n\nseg = [0] * n\nfor i in range(n):\n    seg[i] = [l - a[i], r - a[i]]\n    \nsegments = [0] * n\nfor i in range(n):\n    segments[p[i] - 1] = seg[i]\n\nc = [0] * n\ncan = True\nl = -(10 ** 18)\nfor i in range(n):\n    if l >= segments[i][1]:\n        can = False\n        break\n    \n    if segments[i][0] > l:\n        l = segments[i][0]\n    else:\n        l = l + 1\n    \n    c[i] = l\n    \nif not can:\n    print(-1)\nelse:\n    for i in range(n):\n        print(c[p[i] - 1] + a[i], end = ' ')", "from operator import itemgetter\n\nn, l, r = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\np = [int(i) for i in input().split()]\nA = sorted([[a[i], p[i], i, 0] for i in range(n)], key = itemgetter(1))\n\nA[0][3] = l\nc = A[0][3] - A[0][0]\nfor i in range(1, n):\n    A[i][3] = max(l, A[i][0]+c+1)\n    c = A[i][3] - A[i][0]\n    if A[i][3] > r:\n        print(-1)\n        break\nelse:\n    A = sorted(A, key = itemgetter(2))\n    for i in range(n):\n        print(A[i][3], end=\" \")", "n, l, r = input().split(' ')\nn = int(n)\nl = int(l)\nr = int(r)\n\nat = input().split(' ')\npt = input().split(' ')\n\na = []\nb = []\np = []\nindices = []\nfor i in range(n):\n    a.append(int(at[i]))\n    p.append(int(pt[i]))\n    b.append(None)\n    indices.append(None)\n\nfor i in range(n):\n    indices[p[i]-1] = i\n\nflag = True\n\ni = 0\nwhile (i < n):\n    ind = indices[i]\n    if i == 0:\n        b[ind] = str(l)\n        last = l - a[ind]\n        i += 1\n        continue\n\n    exp = last + a[ind] + 1\n    if exp > r:\n        flag = False\n        break\n    \n    exp = max([l, exp])\n    \n    last = exp - a[ind]\n    b[ind] = str(exp)\n    \n    i += 1\n\nif flag:\n    print(' '.join(b))\nelse:\n    print(-1)", "#!/usr/bin/env python3\nfrom sys import stdin,stdout\n\n\ndef ri():\n    return list(map(int, input().split()))\n\nn, l, r = ri()\na = list(ri())\np = list(ri())\n\npi = [i for i in range(n)]\npi.sort(key=lambda e: p[e])\nb = [0 for i in range(n)]\n\ni = pi[0]\nb[i] = l\ncp = b[i] - a[i]\nfor ii in range(1,n):\n    i = pi[ii]\n    if a[i] + cp + 1 >=l:\n        b[i] = a[i] + cp + 1\n    else:\n        b[i] = l\n\n    cp = b[i] - a[i]\n    if b[i] > r:\n        print(-1)\n        return\n\nprint(*b)\n\n", "n, l, r = list(map(int, input().split()))\na = list(map(int, input().split()))\np = list(map(int, input().split()))\ns = set()\n\nx = []\nfor i in range(len(a)):\n\tx.append([p[i], i])\n\nx.sort()\nmx = -1000000000000\nfor i in range(n):\n\tp[x[i][1]] = max(l, mx + a[x[i][1]] + 1)\n\tif p[x[i][1]] > r:\n\t\tprint('-1')\n\t\treturn\n\tmx = p[x[i][1]] - a[x[i][1]]\n\nidx = 0\nfor i in p:\n\tif idx != 0:\n\t\tprint(\"\", i, end=\"\")\n\telse:\n\t\tprint(i, end=\"\")\n\t\tidx = 1\nprint('')\n", "R= lambda: list(map(int,input().split()))\nn,l,r= R()\na,d=list(R()),list(R())\nb=[l for _ in range(n)]\nc=[0 for _ in range(n)]\nfor i in range(n):\n    c[d[i]-1]=i\ndif=l-a[c[0]]\nfor x in c[1:]:\n    if b[x]-a[x]<=dif:  \n        b[x]=a[x]+dif+1\n    dif=b[x]-a[x]\n    if b[x]>r:\n        print(\"-1\")\n        return\nprint(\" \".join(map(str,b)))\n    \n        \n    \n", "def binary_search(l, r, k):\n    while (l <= r):\n        mid = l+r >> 1\n        if (mid < k):\n            l = mid+1\n        else:\n            r = mid-1\n    return l\n\ndef main():\n    n, l, r = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = list(map(int, input().split()))\n    x = [(p[i], i+1, a[i]) for i in range(n)]\n    \n    x.sort()\n    a = [x[i][2] for i in range(n)]\n    p = [x[i][1] for i in range(n)]\n    b = [0]*(n+1)\n    b[p[0]-1] = l\n    \n    for i in range(1,n):\n        idx_list = p[i-1]-1\n        b[p[i]-1] = binary_search(l, r, b[idx_list] - a[i-1] + a[i])\n        if (b[idx_list] - a[i-1] == b[p[i]-1] - a[i]):\n            b[p[i]-1] += 1\n\n    if (max(b) > r):\n        print(-1)\n        return\n    for i in range(n):\n        print(b[i], end=' ')\n\nmain()"]