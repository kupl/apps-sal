["s1 = input()\ns2 = input()\ns = input()\nr=''\nfor i in s:\n    if i.isalpha():\n        #print (s1.index(i.lower()))\n        if i.isupper():\n            r+= (s2[(s1.index(i.lower()))].upper())\n        else:\n            r+=(s2[(s1.index(i.lower()))])\n    else:\n        r+=(i)\nprint (r)", "a = input()\nb = input()\ns = list(input())\nfor i in range(len(s)):\n    e = s[i]\n    if 'A' <= e <= 'Z':\n        bad = True\n        e = chr(ord(e) - ord('A') + ord('a'))\n    elif 'a' <= e <= 'z':\n        bad = False\n    else:\n        continue\n    e = b[a.index(e)]\n    if bad:\n        e =  chr(ord(e) - ord('a') + ord('A'))\n    s[i] = e\nprint(''.join(s))", "a = input()\nb = input()\nd = {}\nfor i in range(26):\n    d[a[i]] = b[i]\n    d[a[i].upper()] = b[i].upper()\ns = input()\nprint(''.join([d[i] if i in d else i for i in s]))\n", "read = lambda: map(int, input().split())\na = input()\nb = input()\nlow = lambda c: chr(ord(c) + ord('a') - ord('A'))\nhig = lambda c: chr(ord(c) - ord('a') + ord('A'))\nish = lambda c: ord('A') <= ord(c) <= ord('Z')\nf = lambda c: b[a.index(c)]\ns = input()\nans = [''] * len(s)\nfor i in range(len(s)):\n    c = s[i]\n    if ord('0') <= ord(c) <= ord('9'):\n        ans[i] = c\n        continue\n    if ish(c):\n        ans[i] = hig(f(low(c)))\n    else: ans[i] = f(c)\nprint(''.join(ans))", "a = input()\nb = input()\nA = a.upper()\nB = b.upper()\n\nd = dict(zip(list(a + A), list(b + B)))\n\ns = list(input())\n\nans = list(map(lambda x : d[x] if x in d else x, s))\n\nprint(''.join(ans))", "s1 = input()\ns2 = input()\ns = input()\nres = \"\"\nfor x in s:\n    if 'A' <= x <= 'Z':\n        res += s2[s1.index(x.lower())].upper()\n    elif 'a' <= x <= 'z':\n        res += s2[s1.index(x)]\n    else:\n        res += x\nprint(res)\n", "board = dict(zip(input(), input()))\nfor c in input():\n    if c.lower() not in board:\n        print(c, end='')\n    elif c.isupper():\n        print(board[c.lower()].upper(), end='')\n    else:\n        print(board[c], end='')", "s = input()\nt = input()\n\nl = {}\n\nfor i in range(26):\n\tl[s[i]] = ord(t[i]) - ord(s[i])\n\nans = ''\n\nfor c in input():\n\tans += chr(ord(c) + l.get(c.lower(), 0))\n\nprint(ans)", "a1 = input()\na2 = input()\nt = input()\nmapping = dict()\nfor i in range(26):\n    mapping[a1[i]] = a2[i]\n    mapping[a1[i].upper()] = a2[i].upper()\n\nans = \"\"\nfor ch in t:\n    if ch in mapping:\n        ans += mapping[ch]\n    else:\n        ans += ch\nprint(ans)\n", "import sys\n\ndef main():\n    a = sys.stdin.readline().rstrip()\n    b = sys.stdin.readline().rstrip()\n    c = sys.stdin.readline().rstrip()\n    x = {}\n    for i in range(len(a)):\n        x[a[i]] = b[i]\n        x[a[i].upper()] = b[i].upper()\n\n    s = [0]*len(c)\n\n    for i in range(len(c)):\n        if c[i] in x:\n            s[i] = x[c[i]]\n        else:\n            s[i] = c[i]\n\n    print(\"\".join(s))\n\n    \nmain()\n", "s1 = input()\ns2 = input()\na = {}\nfor i in range(len(s1)):\n    a[s1[i].lower()] = s2[i].lower()\n    a[s1[i].upper()] = s2[i].upper()\nans1 = input()\nfor i in ans1:\n    if i in a:\n        print(a[i], end = \"\")\n    else:\n        print(i, end = \"\")\n", "s1 = input()\ns2 = input()\nt = input()\nd = {}\nfor i in range(len(s1)):\n\td[s1[i]] = s2[i]\n\td[s1[i].upper()] = s2[i].upper()\n\nfor i in range(10):\n\td[str(i)] = str(i)\n\nans = ''\nfor i in range(len(t)):\n\tans += d[t[i]]\nprint(ans)", "first = input()\nsecond = input()\nx = input()\ny = ''\nfirst += first.upper()\nsecond += second.upper()\nfor i in range(len(x)):\n    if x[i] in first:\n        y += second[first.index(x[i])]\n    else:\n        y += x[i]\nprint(y)\n", "a, b = input(), input()\nd = {}\nfor n in range(10):\n  d[str(n)] = str(n)\nfor l in range(26):\n  d[a[l]] = b[l]\n  d[a[l].upper()] = b[l].upper()\ns = \"\"\nfor x in input():\n  s += d[x]\nprint(s)\n", "a = input()\nb = input()\n\nmapping = {}\n\nfor I in range(len(a)):\n\tmapping[a[I]] = b[I]\n\nc = input()\n\nanswer = \"\"\n\nfor I in c:\n\tif I.isupper():\n\t\tanswer += mapping[I.lower()].upper()\n\telif I.islower():\n\t\tanswer += mapping[I]\n\telse:\n\t\tanswer += I\nprint(answer)", "a = input()\nb = input()\ns = input()\n\nd = dict(zip(a, b))\n\nfor c in s:\n    if c.lower() in d:\n        if c.islower():\n            print(d[c], end='')\n        else:\n            print(d[c.lower()].upper(), end='')\n    else:\n        print(c, end='')\n", "a,b=input(),input()\ndict={}\nd=[]\nfor x in list(input()):\n    if x in '0123456789':\n        d.append(x)\n    elif x == x.lower():\n        d.append(b[a.index(x)])\n    elif x==x.upper():\n        d.append(b[a.index(x.lower())].upper())\nprint(''.join(d))", "s1 = input()\ns2 = input()\ns1+=s1.upper()\ns2+=s2.upper()\nd  = {}\nfor i in range(52):\n    d[s1[i]] = s2[i]\ns = input()\nans = \"\"\nfor i in s:\n    if not i.isdigit():\n        ans+=d[i]\n    else:\n        ans+=i\nprint(ans)", "a = [i for i in input()]\nfor i in range(26):\n    a += [chr(ord(a[i]) + ord('A') - ord('a'))]\nb = [i for i in input()]\nfor i in range(26):\n    b += [chr(ord(b[i]) + ord('A') - ord('a'))]\nd = {a[i]: b[i] for i in range(52)}\ns = input()\nfor i in s:\n    if i in d:\n        print(d[i], end='')\n    else:\n        print(i, end='')", "a=list(input().strip())\nb=list(input().strip())\nx=list(input().strip())\nm=[]\nfor i in x:\n    if i.isupper():\n        i=i.lower()\n        for j,k in zip(a,b):\n            if j==i:\n                m.append(k.upper())\n    elif i.islower():\n        for j,k in zip(a,b):\n            if j==i:\n                m.append(k)\n    elif i.isdigit():\n        m.append(i)\nfor i in m:\n    print(i,end=\"\")", "import string\na, b, string = input(), input(), input()\nl = len(string)\ntemp = string.lower().translate(string.maketrans(a, b))\nfor x in range(l):\n    c = string[x]\n    if c.lower() != c:\n        temp = temp[:x] + temp[x].upper() + temp[x + 1:]\nprint(temp)", "alpha1 = input()\nalpha2 = input()\ns = input()\nn = len(s)\nindices = [0 for i in range(26)]\nfor i in range(26):\n    indices[ord(alpha1[i])-ord('a')] = i\nfor i in range(n):\n    if not s[i].isalpha():\n        print(s[i], end=\"\")\n    else:\n        if ord('A') <= ord(s[i]) and ord(s[i]) <= ord('Z'):\n            j = ord(s[i]) - ord('A')\n            j = indices[j]\n            l = alpha2[j]\n            l = chr(ord(l) - ord('a') + ord('A'))\n            print(l, end=\"\")\n        else:\n            j = ord(s[i]) - ord('a')\n            j = indices[j]\n            l = alpha2[j]\n            print(l, end=\"\")\nprint(\"\")\n", "from sys import stdin\n\ns1 = stdin.readline().rstrip()\ns2 = stdin.readline().rstrip()\nss = stdin.readline().rstrip()\n\ndata = {}\nfor i in range(0, len(s1)):\n    data[s1[i]] = s2[i]\n    data[s1[i].upper()] = s2[i].upper()\n\nrs = []\nfor i in ss:\n    rs.append(data[i] if i in data else i)\n\nprint(''.join(rs))\n", "d = dict()\ntr = dict()\nalpha = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz'\nfor i in range(26):\n    tr[alpha[2 * i + 1]] = alpha[2 * i]\nr1 = input()\nr2 = input()\nfor s in range(26):\n    d[r1[s]] = r2[s]\n    d[tr[r1[s]]] = tr[r2[s]]\ntext = input()\nans = ''\nfor i in text:\n    if i in d.keys():\n        ans += d[i]\n    else:\n        ans += i\nprint(ans)"]