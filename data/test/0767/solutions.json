["import sys\n\nn, z = list(map(int, sys.stdin.readline().strip().split()))\nx = list(map(int, sys.stdin.readline().strip().split()))\nx.sort()\n\ni = 0\nj = n // 2\nc = 0\nwhile j < n and i < n // 2:\n    if x[j] - x[i] >= z:\n        i = i + 1\n        j = j + 1\n        c = c + 1\n    else:\n        j = j + 1\n\nprint(c)", "N,K = list(map(int,input().split()))\nL = sorted(list(map(int,input().split())))\nB = [True for n in range(N)]\nP = 0\ni = 0\nj = N//2\nwhile i < N and j < N:\n    while j < N and L[i]+K > L[j]: j += 1\n    if i < j < N and B[i] and B[j]:\n        B[i] = False\n        B[j] = False\n        P += 1\n    i += 1\n    j += 1\nprint(P)\n", "# Please DON'T hack me! TY!\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = self.next_line()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_line(self, _map=str):\n        return list(map(_map, sys.stdin.readline().split()))\n\n    def next_int(self):\n        return int(next(self))\n\n    def solve(self):\n        n = self.next_int()\n        z = self.next_int()\n        x = sorted([self.next_int() for _ in range(0, n)])\n        low = 0\n        high = n\n        while high - low > 1:\n            mid = (low + high) // 2\n            if self.test(mid, n, x, z):\n                low = mid\n            else:\n                high = mid\n        print(low)\n\n    def test(self, mid, n, x, z):\n        j = mid\n        for i in range(0, mid):\n            while j < n and x[j] < x[i] + z:\n                j += 1\n            if j >= n:\n                return False\n            j += 1\n        return True\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "n, z = list(map(int, input().split()))\nl = list(map(int, input().split()))\nl = sorted(l)\nwyn = 0\nmaly = 0\nduzy = n // 2\nzaj = [0] * n\nwhile duzy < n:\n\twhile maly < n:\n\t\tif zaj[maly] == 1:\n\t\t\tmaly += 1\n\t\telse:\n\t\t\tbreak\n\tif l[duzy] - l[maly] >= z and zaj[duzy] == 0 and zaj[maly] == 0:\n\t\twyn += 1\n\t\tmaly += 1\n\t\tzaj[maly - 1] = 1\n\t\tzaj[duzy] = 1\n\tduzy += 1\nprint(wyn)", "_, z = list(map(int, input().split()))\np = list(map(int, input().split()))\np.sort()\npos = -1\nfor i in range(len(p)//2, len(p)):\n    if p[i] >= p[0] + z:\n        pos = i\n        break\n\nif pos == -1:\n    print(0)\nelse:\n    # print(z, p, pos)\n    r = pos\n    l = 0\n    ctr = 0\n    while True:\n        if l == pos:\n            break\n        if r == len(p):\n            break\n        if p[r] >= p[l] + z:\n            ctr += 1\n            r += 1\n            l += 1\n        else:\n            r += 1\n    print(ctr)\n", "n, z = [int(i) for i in input().split(' ')]\nnums = [int(i) for i in input().split(' ')]\n\nnums.sort()\nif n % 2 == 0:\n    odd = nums[:n//2]\n    even = nums[n//2:]\nelse:\n    odd = nums[:n//2]\n    even = nums[n//2+1:]\n\ni, j = 0, 0\nres = 0\nwhile i < len(odd) and j < len(even):\n    if abs(odd[i] - even[j]) >= z:\n        res += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\nprint(res)\n\n\n\n", "\n# -*- coding: utf-8 -*-\n\ndef __starting_point():\n    n, z = map(int, input().split())\n    a = list(map(int, input().split()))\n    # print(n, z)\n    a.sort()\n    # print(a)\n    mask = [0 for i in range(n)]\n    start = int((n-1)/2)\n    end = n - 1\n    res = 0\n    while end>=0:\n        if abs(a[start]-a[end])>=z and mask[end]==0 and mask[start]==0:\n            mask[start] = 1\n            mask[end] = 1\n            # print(\"start: {}, a[start]: {}, end: {}, a[end]: {}\".\\\n            #     format(start, a[start], end, a[end]))\n            start -= 1\n            end -= 1\n            res += 1 \n        else:\n            if (mask[start]==1):\n                start -= 1\n            elif mask[end]==1:\n                end -= 1\n            else:\n                start -= 1\n        if start<0:\n            break\n            \n    print(res)\n__starting_point()", "def solve():\n    N, Z = map(int, input().split())\n    X = [int(k) for k in input().split()]\n\n    X.sort()\n    \n    ans = 0\n    \n    i = 0\n    mid = N // 2 + (1 if N % 2 else 0)\n    j = mid\n    \n    while i < mid and j < N:\n        while j < N and X[j] - X[i] < Z:\n            j += 1\n        \n        if j != N:\n            ans += 1\n            \n        i += 1\n        j += 1\n         \n    print (ans)\n    \ndef __starting_point():  \n    solve()\n__starting_point()", "n,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nk=n//2\ns=0\nmas=[0]*n\nfor i in range(n):\n     if mas[i]==1:\n          continue\n     for j in range(k,n):\n          if a[j]-a[i]>=m and mas[j]!=1:\n               mas[i]=1\n               mas[j]=1\n               k=j+1\n               s+=1\n               break\n          if j==n-1:\n               print(s)\n               return\nprint(s)", "n, z = list(map(int, input().split()))\narrs = [int(x) for x in input().split()]\narrs.sort()\n\ndef fi():\n    j = len(arrs) // 2\n    while arrs[j] - arrs[0] < z and j < len(arrs) - 1:\n        j += 1\n    l = 0\n    r = j\n    arr = arrs[:]\n    cnt = 0\n    while r != len(arr):\n        if arr[l] == 10**10:\n           l += 1\n        elif arr[r] - arr[l] >= z:\n           arr[r] = 10**10\n           cnt += 1\n           r += 1\n           l += 1\n        else:\n           r += 1\n\n    return cnt\n\nprint(fi())\n\n\n", "from bisect import bisect_left\nn,k = list(map(int,input().split()))\nx = list(map(int,input().split()))\nx.sort()\nnow = temp = n//2\ncnt = 0\nfor i in range(temp):\n    while now != n and x[now]-x[i] < k:\n        now += 1\n    if now == n:\n        break\n    cnt += 1\n    now += 1\nprint(cnt)\n", "n, z = [int(i) for i in input().split(' ')]\nnums = [int(i) for i in input().split(' ')]\n\nnums.sort()\nif n % 2 == 0:\n    odd = nums[:n//2]\n    even = nums[n//2:]\nelse:\n    odd = nums[:n//2]\n    even = nums[n//2+1:]\n\ni, j = 0, 0\nres = 0\nwhile i < len(odd) and j < len(even):\n    if abs(odd[i] - even[j]) >= z:\n        res += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\nprint(res)", "# n = int(input())\n# arr = list(map(int, input().split()))\n#\n# #circle 1\n# #triangle 2\n# # square 3\n# dic = {(1,1): \"I\", (1,2):3, (1,3):4, (2,1):3, (2,2):\"I\", (2,3):\"I\", (3,1):4, (3,2):\"I\", (3,3):\"I\"}\n#\n# c = 0\n# for i in range(len(arr)-1):\n#     if dic[(arr[i], arr[i+1])] == \"I\":\n#         print(\"Infinite\")\n#         return\n#     else:\n#         c += dic[(arr[i], arr[i+1])]\n#\n# print(\"Finite\")\n# print(c)\n\nn, z = list(map(int, input().split()))\n\narr = list(map(int, input().split()))\n\n\n\narr.sort()\nc = 0\nl = 0\nr = len(arr)//2\nwhile(r < len(arr) and l < len(arr)):\n    # print(arr)\n    if arr[l] == -1:\n        l += 1\n        continue\n    if (arr[r] - arr[l]) >= z and arr[r] != -1:\n        arr[r] = -1\n        c += 1\n        r += 1\n        l += 1\n    else:\n        r += 1\n\n\nprint(c)\n\n# from collections import Counter\n# n = int(input())\n#\n#\n# for _ in range(n):\n#     word = input()\n#     nC = [0]*27\n#     for i in word:\n#         nC[ord(i)%97] += 1\n#     wordN = \"\"+word[0]\n#     nC[ord(word[0])%97] -= 1\n#     print(nC, wordN)\n#     while len(wordN) < len(word):\n#         lastidx = ord(wordN[-1])%97\n#         flag = True\n#         for i in range(len(nC)-1, -1, -1):\n#             if i == lastidx+1 or i == lastidx-1:\n#                 continue\n#             else:\n#                 if nC[i] > 0:\n#                     wordN += chr(i+97)\n#                     nC[i] -= 1\n#                     flag = False\n#                     break\n#         if flag:\n#             print(\"No answer\")\n#             break\n#     print(wordN)\n#     if not flag:\n#         print(wordN)\n", "n, z = map(int, input().split())\n\nlis = sorted(list(map(int, input().split())))\n\nx = n//2\n\nres = 0\nstart = x\nfor i in range(x):\n    if start < n:\n        while lis[start] - lis[i] < z:\n            if start < n - 1:\n                start += 1 \n            else:\n                break\n        else:\n            start += 1 \n            res += 1 \n    else:\n        break\n    \nprint(res)", "N, Z = list(map(int, input().split()))\nX = list(map(int, input().split()))\nX.sort()\n\ndef compute(x1, x2):\n    count = 0\n    i = 0\n    j = 0\n    while i < len(x1) and j < len(x2):\n        while x2[j] - x1[i] < Z:\n            j += 1\n            if j == len(x2):\n                return count\n        count += 1\n        i += 1\n        j += 1\n    return count\n\nif N % 2 == 0:\n    print(compute(X[0:N//2], X[N//2:]))\nelse:\n    v1 = compute(X[0: N // 2], X[N // 2:])\n    v2 = compute(X[0: N // 2 + 1], X[N // 2 + 1:])\n    print(max(v1, v2))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Apr  5 21:33:01 2019\n\n@author: Z\n\n4\nabcd\ngg\ncodeforces\nabaca\n\n\n\"\"\"\n\n\nfrom fractions import gcd\n\nfrom collections import Counter\n\n\ndef main():\n    n,z = [int(a) for a in input().split()]\n    #z = int(input())\n    nums= [int(a) for a in input().split()]\n    nums.sort()\n    if n%2==0:\n        x1 = nums[:n//2]\n        x2 = nums[n//2:]\n    else:\n        x1 = nums[:n // 2]\n        x2 = nums[n // 2+1:]\n    n = n//2\n    cnt = 0;\n    i = 0;\n    j = 0;\n    while i<n and j<n:\n        while(j<n and x2[j]<x1[i]+z):\n            j+=1\n        if (j<n):\n            cnt+=1\n            i+=1\n            j+=1\n    print(cnt)\n\n\n\n\n\n\n\ndef __starting_point():\n\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn,z=list(map(int,input().split()))\nX=list(map(int,input().split()))\nX.sort()\n\ndef match(cut):\n    i=0\n    j=cut\n    \n    ANS=0\n\n    for i in range(cut):\n        while j<n and X[j]-X[i]<z:\n            j+=1\n        if j==n:\n            break\n        else:\n            ANS+=1\n            j+=1\n            #print(i,j)\n\n    return ANS\n\nMIN=1\nMAX=n-1\n\nwhile MAX-MIN>1:\n    MID0=(MIN+MAX)//2-1\n    MID1=(MIN+MAX)//2\n\n    ANS2=match(MID0)\n    ANS3=match(MID1)\n\n    if ANS2==ANS3:\n        print(ANS2)\n        return\n    \n    if ANS2>ANS3:\n        MAX=MID0\n    else:\n        MIN=MID1\n\nprint(max(match(MIN),match(MAX)))\n\n    \n    \n    \n", "n, z = list(map(int, input().split()))\narrs = [int(x) for x in input().split()]\narrs.sort()\n\ndef fi(k):\n    l = arrs[:k]\n    r = arrs[-k:]\n    return all([r[i] - l[i] >= z for i in range(len(r))])\n\nl = 0; r = len(arrs) // 2 + 1\nwhile r - l > 1:\n    m = (l + r) // 2\n    if fi(m):\n        l = m\n    else:\n        r = m\nprint(l)\n\n", "n,z=[int(x) for x in input().split()]\nb=sorted([int(x) for x in input().split()])\na=[]\nfor item in b:\n    a.append([item,0])\nend=n//2\ncounter=0\nfor i in range(n):\n    if end==i:\n        end+=1\n    for j in range(end,n):\n        if a[j][0]-a[i][0]>=z and a[j][1]==a[i][1]==0:\n            end=j\n            counter+=1\n            a[i][1]=a[j][1]=1\n            break\n    else:\n        end=j\n\nprint(counter)\n", "n, z = [int(i) for i in input().split(' ')]\nnums = [int(i) for i in input().split(' ')]\n\nnums.sort()\nif n % 2 == 0:\n    odd = nums[:n//2]\n    even = nums[n//2:]\nelse:\n    odd = nums[:n//2]\n    even = nums[n//2+1:]\n\ni, j = 0, 0\nres = 0\nwhile i < len(odd) and j < len(even):\n    if abs(odd[i] - even[j]) >= z:\n        res += 1\n        i += 1\n        j += 1\n    else:\n        j += 1\nprint(res)", "def main():\n    from sys import stdin, stdout\n\n    def read():\n        return stdin.readline().rstrip('\\n')\n\n    def read_array(sep=None, maxsplit=-1):\n        return read().split(sep, maxsplit)\n\n    def read_int():\n        return int(read())\n\n    def read_int_array(sep=None, maxsplit=-1):\n        return [int(a) for a in read_array(sep, maxsplit)]\n\n    def write(*args, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in args) + end)\n\n    def write_array(array, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in array) + end)\n\n    n, z = read_int_array()\n    nums = read_int_array()\n    nums.sort()\n\n    out = 0\n    used = [False]*n\n    i, j = 0, len(nums)//2\n    while i < n:\n        used[i] = True\n        while j < n and (used[j] or (nums[j] - nums[i] < z)):\n            j += 1\n        if j == n:\n            break\n        used[j] = True\n        while i < n and used[i]:\n            i += 1\n        out += 1\n    write(out)\n\n\nmain()\n", "n, z = list(map(int, input().split()))\nx = sorted(map(int, input().split()))\n\nres, i, j = 0, 0, n // 2\nwhile i < n // 2 and j < n:\n\tif x[i] + z <= x[j]:\n\t\ti += 1\n\t\tres += 1\n\tj += 1\nprint(res)\n", "N, Z = list(map(int, input().split()))\nA = sorted([int(a) for a in input().split()])\nl, r = 0, N//2+1\nwhile r - l > 1:\n    m = (r+l) // 2\n    for i in range(m):\n        if A[N-m+i] - A[i] < Z:\n            r = m\n            break\n    else:\n        l = m\nprint(l)\n", "n, z = list(map(int, input().split()))\nx = sorted(map(int, input().split()))\n\nres, i, j = 0, 0, n // 2\nwhile i < n // 2 and j < n:\n\tif x[i] + z <= x[j]:\n\t\ti += 1\n\t\tres += 1\n\tj += 1\nprint(res)\n", "n, z = input().split()\nn = int(n)\nz = int(z)\nnums = list(map(int, input().split()))\nnums.sort()\nl1 = nums[:n//2]\nl2 = nums[n//2:]\ncount = 0\nptr1 = 0\nptr2 = 0\nwhile(ptr2<len(l2) and ptr1<len(l1)):\n\t#print(l2[ptr2]-l1[ptr1])\n\t#print(z)\n\tif((l2[ptr2]-l1[ptr1])>=z):\n\t\tcount+=1\n\t\tptr1+=1\n\t\tptr2+=1\n\telse:\n\t\tptr2+=1\nprint(count)"]