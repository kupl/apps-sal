["n, b = input(), input().replace('R', '0').replace('B', '1')\nprint(int(b[:: -1], 2))", "import re\n\nn = int(input())\ns = [1 if x == \"B\" else 0 for x in list(input())]\nprint(sum([el * 2 ** i for i, el in enumerate(s)]))\n", "n = int(input())\ns = [1 if x == \"B\" else 0 for x in list(input())]\nprint(sum([el * 2 ** i for i, el in enumerate(s)]))\n", "n=int(input())\nB=input()\nans=0\nfor i in range(n-1,-1,-1):\n    ans=ans*2+int(B[i]=='B')\nprint(ans)\n", "n, s = int(input()), input()\nprint(sum(2 ** i for i in range(n) if s[i] == 'B'))\n", "n = int(input())\ns = input().strip()\nans  = 0\nfor i in range(len(s)):\n    if s[i] == \"B\":\n        ans += 2 ** i\nprint(ans)", "n = int(input())\ns = ''.join(\"1\" if c == \"R\" else \"0\" for c in input()[::-1])\nd = int(s, 2)\nprint((1 << n) - 1 - d)", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))", "import math,string,itertools,fractions,heapq,collections,re,array,bisect\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict\n\n\ndef main(n,s):\n    if 'B' not in s:\n        print(0)\n        return\n    b = s.count(\"B\")\n    r = s.count(\"R\")\n    op = {}\n    op[0] = 1\n    op[1] = 2\n    op[2] = 4\n    op[3] = 1 + op[2] + op[1] + op[0]\n    op[3] = 8\n    op[4] = 1 + op[3] + op[2] + op[1] + op[0]\n    op[4] = 16\n    ans = 0\n    for i,x in enumerate(s):\n        if x==\"B\":\n            ans += 2**i\n    print(ans)\n\n\ndef main_input(info=0):\n    #n,p,k = map(int,input().split())\n    #t = [(int(x)-1,i+1) for i,x in enumerate(input().split())]\n    #l,r = list(range(n)), list(range(n))\n    #for i in range(n):\n    #    l[i],r[i] = map(int,input().split())\n#    t = [map(int,input().split()) for x in range(n)]\n    n = int(input())\n    s = input()\n    main(n,s)\n\ndef __starting_point():\n    main_input()\n\n__starting_point()", "s = input()\n#s = \"5\"\nn = int(s)\n\ns = input()\n#s = \"RBBRR\"\nx = s\n\nans = 0\nfor i in range(0, n):\n    if x[i] == 'B':\n        ans += 1 << i\n        \nprint(ans)", "n = int(input())\ns = input().split()[0]\nres = 0\nfor i in range(len(s)):\n    if s[i] == 'B':\n        res += 2**i\nprint(res)\n", "n = input()\ns = input()\nansw = 0\nk = 0\nfor i in range(len(s)):\n    if s[i] == \"B\":\n        answ+=2**i\nprint(answ)", "n = int(input())\ns = input()\nans = 0\nb = [0] * 50\nb[0] = 1\nfor i in range(50):\n    b[i] = 2 * b[i - 1] + 1\n#print(b)\nfor i in range(n):\n    if (s[i] == 'B'):\n        ans += 1\n        if (i > 0):\n            ans += b[i - 1]\nprint(ans)", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))", "n = int(input())\ns = list(input())\no = 0\n#s.reverse()\n\n# while s.count(\"B\") > 0:\n#   while s[-1] == \"R\":\n#     s.pop()\n#   s[-1] = \"R\"\n#   while len(s) < n:\n#     s.append(\"B\")\n#   o += 1\n#   print(s)\n\ntry:\n  index = s.index(\"B\")\n  o += pow(2, index)\n  while True:\n    index = s.index(\"B\", index + 1)\n    o += pow(2, index)\nexcept:\n  print(o)\n", "n = int(input())\ns = input()\ncount = 0\n\nfor i in range(n):\n    if s[i] == 'B':\n        count += 2 ** i\nprint(count)", "n = int(input())\ns = input()\nans = 0\nfor i in range(len(s)):\n    ch = s[i]\n    if ch == 'B':\n        ans |= 1 << i\nprint(ans)", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n", "input()\nprint(int(''.join(\"0\" if c == \"R\" else \"1\" for c in input()[::-1]), 2))\n"]