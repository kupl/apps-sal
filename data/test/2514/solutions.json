["from collections import Counter \n\nN = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\n\ntot = sum(A)\nA = Counter(A)\n\nfor i in range(Q):\n    B,C = map(int,input().split())\n    tot +=(C - B) * A[B]\n    A[C] += A[B]\n    A[B] = 0\n    print(tot)", "import collections\nN=int(input())\nA=list(map(int,input().split()))\nA=sorted(A)\nQ=int(input())\nB=[0]*Q;C=[0]*Q\nfor i in range(Q):\n  B[i],C[i]=map(int,input().split())\n\nD = collections.Counter(A)\ns=sum(A)\nfor i in range(Q):\n  s=s-B[i]*D[B[i]]\n  D[C[i]]+=D[B[i]]\n  s=s+C[i]*D[B[i]]\n  D[B[i]]=0\n#  A = [C[i] if B[i]==A[j] else A[j] for j in range(N)]\n#  print(A)\n  print(s)", "n = int(input())\na = list(map(int, input().split()))\nal = [0] * (10**5 + 1)\ns = 0\nfor i in a:\n    al[i] += 1\n    s += i\nq = int(input())\nfor _ in range(q):\n    b, c = map(int, input().split())\n    s = s + (c - b) * al[b]\n    al[c] += al[b]\n    al[b] = 0\n    print(s)", "import sys,collections\ninput = sys.stdin.readline\nN = int(input())\nA = list(map(int,input().split()))\nAc = collections.defaultdict(int)\nans = 0\nfor a in A:\n    Ac[a]+=1\n    ans+=a\n\nQ = int(input())\n\nfor _ in range(Q):\n    B,C = list(map(int,input().split()))\n    numB = Ac[B]\n    ans += C*numB - B*numB\n    print(ans)\n    Ac[C]+=numB\n    Ac[B]=0\n\n", "N = int(input())\nAs = list(map(int,input().split()))\nQ = int(input())\n\ncount_array = [0]*(10**5+1)\nfor i in range(N):\n    count_array[As[i]] += 1\n\nsum = 0\nfor i in range(len(As)):\n    sum += As[i]\n\nfor i in range(Q):\n    x,y = list(map(int,input().split()))\n    sum += count_array[x]*(y-x)\n    print(sum)\n    count_array[y] += count_array[x]\n    count_array[x] = 0\n", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nres = sum(a)\ncnt = Counter(a)\nfor _ in range(q):\n    b, c = map(int, input().split())\n    res = res + cnt[b]*(c - b)\n    print(res)\n    cnt[c] += cnt[b]\n    cnt[b] = 0", "N = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\n\nnum = [0] * (10 ** 5 + 1)\nfor ai in A:\n    num[ai] += 1\n\nS = sum(A)\nfor i in range(Q):\n    B, C = map(int, input().split())\n    S += (C - B) * num[B]\n    num[C] += num[B]\n    num[B] = 0\n    print(S)\n\nreturn", "N = int(input())\nA = list(map(int, input().strip().split()))\nQ = int(input())\nB = [0]*Q\nC = [0]*Q\nfrom collections import Counter\nK=Counter(A)\nans = 0\n\nfor i in range(Q):\n    B[i],C[i] = list(map(int,input().split()))\n\n\nfor i in K:\n    ans += i * K[i]\n\nfor i in range(Q):\n    ans -= B[i] * K[B[i]]\n    ans += C[i] * K[B[i]]\n    K[C[i]] += K[B[i]]\n    K[B[i]] = 0\n    print(ans)\n\n    \n    \n", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\ncnt = Counter(a)\nq = int(input())\nfor i in range(q):\n    b, c = map(int, input().split())\n    s += (c - b)*cnt[b]\n    cnt[b], cnt[c] = 0, cnt[c] + cnt[b]\n    print(s)", "N = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\n\ncnt_dict = {}\n\ns = sum(A)\nans = []\n\nfor item in A:\n    if item not in cnt_dict:\n        cnt_dict[item] = 0\n    cnt_dict[item] += 1\n\nfor _ in range(Q):\n    b, c = map(int, input().split())\n\n    if b not in cnt_dict:\n        cnt_dict[b] = 0\n    if c not in cnt_dict:\n        cnt_dict[c] = 0\n\n    s -= b * cnt_dict[b]\n    s += c * cnt_dict[b]\n\n    cnt_dict[c] += cnt_dict[b]\n    cnt_dict[b] = 0\n\n    ans.append(s)\n\nfor i in range(Q):\n    print(ans[i])", "import collections\nN=int(input())\nA=list(map(int,input().split()))\nA=sorted(A)\nQ=int(input())\nB=[0]*Q;C=[0]*Q\nfor i in range(Q):\n  B[i],C[i]=map(int,input().split())\n\nD = collections.Counter(A)\ns=sum(A)\nfor i in range(Q):\n  s=s-B[i]*D[B[i]]\n  D[C[i]]+=D[B[i]]\n  s=s+C[i]*D[B[i]]\n  D[B[i]]=0\n  print(s)", "import sys\ndef input(): return sys.stdin.readline().rstrip()\nfrom collections import Counter\ndef main():\n    n = int(input())\n    A = list(map(int,input().split()))\n    Q = int(input())\n    S = sum(A)\n    cunt_A = Counter(A)\n    for q in range(Q):\n        b, c = map(int,input().split())\n        S += (c-b)*cunt_A[b]\n        cunt_A[c] += cunt_A[b]\n        cunt_A[b] = 0\n        print(S)\n\ndef __starting_point():\n    main()\n__starting_point()", "N=int(input())\nA=list(map(int,input().split()))\ncnt=[0 for _ in range(100001)]\nfor i in range(N):\n    cnt[A[i]]+=1\nans=sum(A)\nQ=int(input())\nfor _ in range(Q):\n    B,C=list(map(int,input().split()))\n    cnt[C]+=cnt[B]\n    ans+=(C-B)*cnt[B]\n    cnt[B]=0\n    print(ans)\n", "from collections import Counter\n\nn = int(input())\nA = list(map(int, input().split()))\n\nsum_a = sum(A)\n\nd = Counter(A)\n\nfor _ in range(int(input())):\n    b, c = map(int, input().split())\n    temp = d[b]         \n    d[b] -= temp\n    d[c] = d.get(c, 0) + temp\n    sum_a += (c - b) * temp\n    print(sum_a)", "N = int(input())\nA = list(map(int, input().split()))\nnum = [0]*(10**5)\nans = 0\nfor i in A:\n    num[i-1] += 1\n    ans += i\nQ = int(input())\nfor q in range(Q):\n    B, C = map(int, input().split())\n    ans += (C-B)*num[B-1]\n    num[C-1] += num[B-1]\n    num[B-1] = 0\n    print(ans)", "from collections import Counter\n\n\ndef solve(string):\n    n, *aqbc = list(map(int, string.split()))\n    a, _, bc = aqbc[:n], aqbc[n], aqbc[n + 1:]\n    s = sum(a)\n    t = Counter(a)\n    ans = []\n    for b, c in zip(*[iter(bc)] * 2):\n        if b in list(t.keys()):\n            s += (c - b) * t[b]\n            t[b], t[c] = 0, t[b] + t[c]\n        ans.append(s)\n    return \"\\n\".join(map(str, ans))\n\n\ndef __starting_point():\n    import sys\n    print((solve(sys.stdin.read().strip())))\n\n__starting_point()", "n = int(input())\na = list(map(int,input().split()))\nq = int(input())\n\ntmp = 0\nl = [0 for i in range(10**5 +1)]\nfor i in a:\n    tmp += i\n    l[i] += 1\n\nfor i in range(q):\n    b,c = map(int,input().split())\n    tmp += c*l[b] - b*l[b]\n    print(tmp)\n    l[c] += l[b]\n    l[b] = 0", "N=int(input())\n*A,=map(int,input().split())\nQ=int(input())\nBC=[list(map(int,input().split())) for _ in range(Q)]\n\nimport collections\nc = collections.Counter(A)\ns=sum(A)\n\nfor i,j in BC:\n    s=s-i*c[i]+j*c[i]\n    print(s)\n    c[j]+=c[i]\n    c[i]=0", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn = int(input())\nA = [int(i) for i in input().split()]\nq = int(input())\nB = [[int(i) for i in input().split()]for j in range(q)]    # n\u306f\u884c\u6570\n\ntmp = 0\nres = [sum(A)]\n\ntmp = Counter(A)\nfor i in range(q):\n    if B[i][0] in list(tmp.keys()):\n        res.append((B[i][1] - B[i][0]) * tmp[B[i][0]])\n        if B[i][1] in list(tmp.keys()):\n            tmp[B[i][1]] += tmp[B[i][0]]\n        else:\n            tmp[B[i][1]] = tmp[B[i][0]]\n        tmp[B[i][0]] = 0\n    else:\n        res.append(0)\n\nres = \"\\n\".join([str(r) for r in list(accumulate(res))[1:]])\n\nprint(res)\n", "import collections\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    q = int(input())\n\n    a_dict = collections.Counter(a)\n    a_dict = {key: key*value for key, value in list(a_dict.items())}\n    answer = sum(a_dict.values())\n    for _ in range(q):\n        b, c = list(map(int, input().split()))\n        diff = 0\n        if b in a_dict:\n            b_sum = a_dict.pop(b)\n            c_add = b_sum//b * c\n            diff = c_add - b_sum\n            if c in a_dict:\n                a_dict[c] += c_add\n            else:\n                a_dict[c] = c_add\n        answer += diff\n        print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import defaultdict\n\nN = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\n\nd = defaultdict(int)\nans = 0\nfor a in A:\n    ans += a\n    d[a] += 1\n\nfor _ in range(Q):\n    b, c = map(int, input().split())\n    n = d[b]\n    ans -= n * b\n    ans += n * c\n    print(ans)\n\n    d[b] = 0\n    d[c] += n", "n =int(input())\na={i:0 for i in range(10**5+1)}\ns=0\nfor i in map(int,input().split()):\n    s+=i\n    a[i]+=1\nq=int(input())\nfor i in range(q):\n    b,c=map(int,input().split())\n    s-=b*a[b]-c*a[b]\n    a[c]+=a[b]\n    a[b]=0\n    print(s)", "n = int(input().strip())\na = list(map(int, input().split()))\n\ncnt = [0 for i in range(10**5)]\na = sorted(a)\ns = sum(a)\n\nfor i in range(n):\n    cnt[a[i]-1] += 1\n\nq = int(input().strip())\n\nfor i in range(q):\n    b, c = list(map(int, input().split()))\n    s += c * cnt[b - 1] - b * cnt[b - 1]\n    cnt[c - 1] += cnt[b - 1]\n    cnt[b - 1] = 0\n    print(s)\n", "f=lambda : map(int,input().split())\nN=input()\n*A,=f()\nimport collections\nc = collections.Counter(A)\ns=sum(A)\nBC=[f() for _ in range(int(input()))]\n\nfor i,j in BC:\n v=c[i]\n s+=v*(j-i)\n print(s)\n c[j]+=v\n c[i]=0", "N = int(input())\ncounter = {}\ntotal = 0\nfor x in input().split():\n    x = int(x)\n    total += x\n    if not x in counter:\n        counter[x] = 1\n    else:\n        counter[x] += 1\nQ = int(input())\nfor _ in range(Q):\n    B, C = list(map(int, input().split()))\n    if not B in counter:\n        print(total)\n        continue\n    num = counter[B]\n    if C in counter:\n        counter[C] += num\n    else:\n        counter[C] = num\n    total = total - num * B + num * C\n    print(total)\n    del counter[B]\n", "n=int(input())\na=list(map(int,input().split()))\ncheck=[0]*100100\nfor x in a:\n    check[x]+=1\nq=int(input())\nans=sum(a)\nfor i in range(q):\n    b,c=list(map(int,input().split()))\n    ans+=(c-b)*check[b]\n    check[c]+=check[b]\n    check[b]=0\n    print(ans)\n", "N = int(input())\nA= [0]*110000\nsum = 0\nfor i in map(int, input().split()):\n    sum += i\n    A[i] += 1\n    \nQ = int(input())\nfor i in range(Q):\n    B,C = map(int,input().split())\n    sum += (C-B)*A[B]\n    A[C] += A[B]\n    A[B] = 0\n    print(sum)", "import collections\n\nN = int(input())\nA = list(map(int,input().split()))\nAc = collections.Counter(A)\nans = sum(A)\n\nQ = int(input())\n\nfor _ in range(Q):\n    B,C = map(int,input().split())\n    numB = Ac[B]\n    ans += (C-B)*numB\n    print(ans)\n    Ac[C]+=numB\n    Ac[B]=0", "N=int(input())\nA=[int(x) for x in input().split()]\nyouso=[0]*(10**5+1)\nfor j in range(N):\n    youso[A[j]]+=1\nans=sum(A)\nQ=int(input())\nfor i in range(Q):\n    B,C=list(map(int,input().split()))\n    numofb=youso[B]\n    youso[B]=0\n    ans+=(C-B)*numofb\n    print(ans)\n    youso[C]+=numofb\n", "n=int(input())\n\na_raw=list(map(int,input().split()))\na=[0]*100001\nfor a_i in a_raw:\n    a[a_i]+=1\nq=int(input())\nsum_tmp=sum(a_raw)\n\nfor _ in range(q):\n    b,c=list(map(int,input().split()))\n    sum_tmp = sum_tmp + c*a[b]-b*a[b]\n    a[c]+=a[b]\n    a[b]=0\n    print(sum_tmp)\n", "import collections\n\nN = int(input())\nA = list(map(int,input().split()))\nAc = collections.defaultdict(int)\nans = 0\nfor a in A:\n    Ac[a]+=1\n    ans+=a\n\nQ = int(input())\n\nfor _ in range(Q):\n    B,C = map(int,input().split())\n    numB = Ac[B]\n    ans += C*numB - B*numB\n    print(ans)\n    Ac[C]+=numB\n    Ac[B]=0", "from collections import Counter\nN = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\ncounter = Counter(A)\nres = sum(A)\nfor i in range(Q):\n    b, c = list(map(int,input().split()))\n    res -= counter[b] * b\n    res += counter[b] * c\n    counter[c] += counter[b]\n    counter[b] = 0\n    print(res)\n", "import collections\n\nN = int(input())\nA = list(map(int,input().split()))\nAc = collections.defaultdict(int)\nans = 0\nfor a in A:\n    Ac[a]+=1\n    ans+=a\n\nQ = int(input())\n\nfor _ in range(Q):\n    B,C = map(int,input().split())\n    numB = Ac[B]\n    ans += (C-B)*numB\n    print(ans)\n    Ac[C]+=numB\n    Ac[B]=0", "from collections import Counter\n\n\ndef solve(string):\n    n, *aqbc = list(map(int, string.split()))\n    a, _, bc = aqbc[:n], aqbc[n], aqbc[n + 1:]\n    s = sum(a)\n    t = Counter(a)\n    ans = []\n    for b, c in zip(*[iter(bc)] * 2):\n        if b not in list(t.keys()):\n            ans.append(s)\n            continue\n        s += (c - b) * t[b]\n        t[c] += t[b]\n        t[b] = 0\n        ans.append(s)\n    return \"\\n\".join(map(str, ans))\n\n\ndef __starting_point():\n    import sys\n    print((solve(sys.stdin.read().strip())))\n\n__starting_point()", "from collections import Counter\n\nn = int(input())\nA = list(map(int, input().split()))\nC =  Counter(A)\nq = int(input())\nBC = [list(map(int, input().split())) for _ in range(q)]\n\nA_sum = sum(A)\nfor b, c in BC:\n  tmp = C[b]\n  C[c] += tmp\n  C[b] = 0\n  A_sum += tmp * (c-b)\n  print(A_sum)\n", "from collections import Counter\nN = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\nans = sum(A)\nnum = Counter(A)\nfor i in range(Q):\n    b,c = map(int,input().split())\n\n    ans += (c-b)*num[b]\n    num[c] += num[b] \n    num[b] = 0\n    \n    print(ans)", "n = int(input())\nal = list(map(int, input().split()))\nq = int(input())\n\nsum_n = sum(al)\nnum = [0]*(10**5+1)\nfor a in al:\n    num[a] += 1\n\nfor _ in range(q):\n    bi, ci = list(map(int, input().split()))\n    sum_n += (ci-bi)*num[bi]\n    print(sum_n)\n    num[ci] += num[bi]\n    num[bi] = 0\n", "def __starting_point():\n\n    n = int(input())\n    B = [0]*(10**5+1)\n    A = list(map(int,input().split()))\n    for a in A:\n        B[a] += 1\n    #\u5408\u8a08\n    sm = sum(A)\n    m = int(input())\n\n    for j in range(m):\n        b,c = list(map(int,input().split()))\n        #b\u306e\u500b\u6570\u306e\u5897\u6e1b\u3092\u30c1\u30a7\u30c3\u30af\n        cnt_b = B[b]\n        cnt_c = B[c]\n        if cnt_b == 0:\n            #\u5909\u63db\u3067\u304d\u306a\u3044\u306e\u3067\u4f55\u3082\u3057\u306a\u3044\n            print(sm)\n        else:\n            B[b] = 0\n            B[c] += cnt_b\n            sm = sm + c*cnt_b - b*cnt_b\n            print(sm)\n\n__starting_point()", "from collections import Counter\nn = int(input())\nA = list(map(int, input().split()))\nC = Counter(A)\nq = int(input())\nans = sum(A)\nfor _ in range(q):\n    b, c = list(map(int, input().split()))\n    if C.get(b):\n        x = C.pop(b)\n        ans += - b * x + c * x\n        if C.get(c):\n            C[c] += x\n        else:\n            C[c] = x\n    print(ans)\n", "import collections\nn = int(input())\na = list(map(int,input().split()))\nq = int(input())\nbc = [[int(i) for i in input().split()] for _ in range(q)]\n\ntotal = sum(a)\ns = collections.Counter(a)\n\n\nfor x in range(q):\n    if bc[x][0] in s and bc[x][1] in s:\n        s[bc[x][1]] += s[bc[x][0]]\n        total += (bc[x][1]-bc[x][0]) * s[bc[x][0]]\n        del s[bc[x][0]]\n    elif bc[x][0] in s and bc[x][1] not in s:\n        s[bc[x][1]] = s[bc[x][0]]\n        total += (bc[x][1]-bc[x][0]) * s[bc[x][0]]\n        del s[bc[x][0]]\n    print(total)", "N = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\nBC = list(list(map(int,input().split())) for _ in range(Q))\n\ntotal = sum(A)\n\nli = [0] * 100000\nfor i in range(N):\n  li[A[i] - 1] += 1\n\nfor i in range(Q):\n  j = BC[i][0]\n  k = BC[i][1]\n  if li[j - 1] > 0:\n    li[k - 1] += li[j - 1]\n    total += li[j - 1] * (k - j)\n    li[j - 1] = 0\n  print(total)", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\n\ncounter = Counter(a)\nsum_res = sum(a)  # \u306f\u3058\u3081\u306e\u5408\u8a08\u3001\u540d\u524d\u304csum\u3060\u3068sum\u95a2\u6570\u3068\u304b\u3076\u3063\u3066\u3088\u304f\u306a\u3044\u306e\u3067\n\n# q\u56de\u64cd\u4f5c\u3057\u307e\u3059\u3002\u30eb\u30fc\u30d7\u5909\u6570\u306f\u4f7f\u308f\u306a\u3044\u306e\u3067_\u3068\u3057\u307e\u3059\uff08Python\u306e\u6163\u7fd2\uff09\nfor _ in range(q):\n    before, after = map(int, input().split())\n\n    # \u5408\u8a08\u3092\u5909\u66f4\u3057\u307e\u3059\n    sum_res -= before * counter[before]\n    sum_res += after * counter[before]\n\n    # \u500b\u6570\u3092\u5909\u66f4\u3057\u307e\u3059\n    counter[after] += counter[before]\n    counter[before] = 0\n\n    print(sum_res)", "N = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\n\nd = {}\nv = 0\nans = []\n\nfor a in A:\n    d[a] = d.get(a, 0) + 1\n    v += a\n\nfor i in range(Q):\n    B, C = list(map(int, input().split()))\n    v += d.get(B, 0) * (C - B)\n    d[C] = d.get(C, 0) + d.get(B, 0)\n    d[B] = 0\n    ans.append(v)\n\nfor a in ans:\n    print(a)\n\n\n", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\ncnt = Counter(a)\nq = int(input())\nfor i in range(q):\n    b, c = map(int, input().split())\n    cnt_b = cnt[b]\n    cnt[b], cnt[c] = 0, cnt[c] + cnt_b\n    s += (c - b)*cnt_b\n    print(s)", "N = int(input())\nA = input().split()\nnum_list = [0] * 10**5\nans = 0\n\nfor i in range(N):\n    num_list[int(A[i])-1] += 1\n\nfor i in range(10**5):\n    ans += (i+1) * num_list[i]\n\nQ = int(input())\n\nfor i in range(Q):\n    B, C = map(int, input().split())\n\n    ans = ans + C * num_list[B-1] - B * num_list[B-1]\n    num_list[C-1] += num_list[B-1]\n    num_list[B-1] = 0\n\n    print(ans)", "N = int(input())\nA = [int(i) for i in input().split()]\nQ = int(input())\n\nd = [0]*(10**5)\n\nfor i in A:\n    d[i-1] += 1\n\nans = sum(A)\n\nfor i in range(Q):\n    b, c = map(int,input().split())\n    ans += (c-b)*d[b-1]\n    d[c-1] += d[b-1]\n    d[b-1] = 0\n    print(ans)", "I=lambda:list(map(int,input().split()))\nI()\ndic={}\ns=0\nfor a in I():\n  s+=a\n  dic[a]=dic.get(a,0)+1\nfor _ in [0]*I()[0]:\n  b,c=I()\n  s+=(c-b)*dic.get(b,0)\n  dic[c]=dic.get(c,0)+dic.get(b,0)\n  dic[b]=0\n  print(s)", "def Replacing():\n    N = int(input())\n    A = list(map(int,input().split()))\n    lis = [0 for i in range(10 ** 5)]\n    res = 0\n    for i in A:\n        lis[i-1] += 1\n        res += i\n    \n    Q = int(input())\n    for i in range(Q):\n        b, c = list(map(int,input().split()))\n        num = lis[b-1]\n        res += (c - b) * num\n        lis[b-1] = 0\n        lis[c-1] += num\n        print(res)\n        \nReplacing()\n", "n=int(input())\na=list(map(int,input().split()))\nf=[0]*(int(1e5)+1)\nsum=0\nfor i in range(n):\n    f[a[i]]+=1\n    sum+=a[i]\nq=int(input())\nfor i in range(q):\n    b,c=map(int,input().split())\n    sum+=(c-b)*f[b]\n    f[c]+=f[b]\n    f[b]=0\n    print(sum)", "from collections import Counter\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\n\nans = sum(a)\ncount = Counter(a)\nfor _ in range(q):\n  b,c = map(int, input().split())\n  count[c] += count[b]\n  ans -= b*count[b]\n  ans += c*count[b]\n  count[b] = 0\n  print(ans)", "f=lambda : map(int,input().split())\nN=int(input())\n*A,=f()\nQ=int(input())\nBC=[f() for _ in range(Q)]\n\nimport collections\nc = collections.Counter(A)\ns=sum(A)\n\nfor i,j in BC:\n v=c[i]\n s+=v*(j-i)\n print(s)\n c[j]+=v\n c[i]=0", "import numpy as np\nn = int(input())\nli_a = list(map(int, input().split()))\nA = [0]*(10**5)\ns = sum(li_a)\n\nli_a = list(map(lambda x: x-1, li_a))\nfor a in li_a:\n    A[a] += 1\nq = int(input())\nfor i in range(q):\n    b, c = map(int, input().split())\n    if A[b-1]>0:\n        A[c-1] += A[b-1]\n        s -= b * A[b-1]\n        s += c * A[b-1]\n        A[b-1] = 0\n        print(s)\n    else:\n        print(s)", "N = int(input())\nnatural = list(map(int,input().split()))\nQ = int(input())\nnumber = [0]*(10**5+1)\nfor i in range(N):\n    number[natural[i]] += 1\nNsum = sum(natural)\nans = []\nfor i in range(Q):\n    B,C = map(int,input().split())\n    count = number[B]\n    diff = C-B\n    number[C] += count\n    number[B] = 0\n    Nsum += diff * count\n    ans.append(Nsum)\n\nfor i in range(Q):\n    print(ans[i])", "from collections import Counter\nn = int(input())\na = list(map(int,input().split()))\nq = int(input())\nbc = [list(map(int,input().split())) for _ in range(q)]\ncount = dict(Counter(a))\nans = sum(a)\nfor i in bc:\n    try:\n        ans += count[i[0]] * (i[1] - i[0])\n        try:\n            count[i[1]] += count[i[0]]\n        except:\n            count[i[1]] = count[i[0]]\n        count[i[0]] = 0\n        print(ans)\n    except KeyError:\n        print(ans)\n        continue", "from collections import Counter\n\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nbc = [list(map(int, input().split())) for _ in range(q)]\n\ncou = Counter(a)\ns = sum(a)\n\nfor b, c in bc:\n    s = s + cou[b]*(c-b)\n    cou[c] += cou[b]\n    cou[b] = 0\n    print(s)", "n = int(input())\nal = list(map(int, input().split()))\nal_sum = sum(al)\nq = int(input())\n\nnum = [0]*100001\nfor a in al:\n    num[a] += 1\n\n\nfor _ in range(q):\n    bi, ci = map(int, input().split())\n\n    al_sum += num[bi]*(ci - bi)\n    num[ci] += num[bi]\n    num[bi] = 0\n\n    print(al_sum)", "N = int(input())\nA = list(map(int, input().split()))\n\nans = sum(A)\nnum = [0] * (100001)\n\nfor a in A:\n    num[a] += 1\n\nQ = int(input())\n\nfor _ in range(Q):\n    B, C = map(int, input().split())\n    ans += C * num[B]\n    ans -= B * num[B]\n    num[C] += num[B]\n    num[B] = 0\n    print(ans)", "# import numpy as np\n# import math\n\n# from scipy.special import perm : perm(n, r, exact=True)\n# from scipy.special import comb : comb(n, r, exact=True)\n\n# import itertools\n# for v in itertools.combinations(L, n):M.append(list(v))\n\n# from numba import njit\n# @njit('f8(i8,i8,i8,i8,f8[:,:,:])', cache=True)\n\n\n\"\"\" Definitions  \"\"\"\n\ndef lcm(a, b):\n    return a*b//math.gcd(a, b)\n\nMOD = 10**9+7\n\n# ============================================================\n\nn = int(input())\nA = list(map(int, input().split()))\nq = int(input())\n\nL = [0]*(10**5+1)\n\nfor i in range(n):\n    L[A[i]] += 1\ns = sum(A)\n\nfor i in range(q):\n    a, b = list(map(int, input().split()))\n    s += (b-a)*L[a]\n    L[b] += L[a]\n    L[a] = 0\n    print(s)\n    \n", "n = int(input())\nsum = 0\na_list = list(map(int, input().split()))\nnum = [0] * (10 ** 5 + 1)\nfor i in range(n):\n    num[a_list[i]] += 1\n    sum += a_list[i]\n\nq = int(input())\nfor i in range(q):\n    b, c = map(int, input().split())\n    sum += (c - b) * num[b]\n    num[c] += num[b]\n    num[b] = 0\n    print(sum)", "from collections import Counter\n\n\ndef solve(string):\n    n, *aqbc = list(map(int, string.split()))\n    a, _, bc = aqbc[:n], aqbc[n], aqbc[n + 1:]\n    s = sum(a)\n    t = Counter(a)\n    ans = []\n    for b, c in zip(*[iter(bc)] * 2):\n        s += (c - b) * t[b]\n        t[c] += t[b]\n        t[b] = 0\n        ans.append(s)\n    return \"\\n\".join(map(str, ans))\n\n\ndef __starting_point():\n    import sys\n    print((solve(sys.stdin.read().strip())))\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\nnums = {}\nfor i in range(n):\n    if a[i] in nums:\n        nums[a[i]] += 1\n    else:\n        nums[a[i]] = 1\n\nfor i in range(int(input())):\n    b, c = map(int, input().split())\n    if b in nums:\n        s -= nums[b]*b\n        s += nums[b]*c\n        if c in nums:\n            nums[c] += nums[b]\n        else:\n            nums[c] = nums[b]\n        nums[b] = 0\n    print(s)", "from collections import defaultdict\n\nN = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\n\nd = defaultdict(int)\nv = 0\nans = []\n\nfor a in A:\n    d[a] += 1\n    v += a\n\nfor i in range(Q):\n    B, C = list(map(int, input().split()))\n    v += d[B] * (C - B)\n    d[C] += d[B]\n    d[B] = 0\n    ans.append(v)\n\nfor a in ans:\n    print(a)\n", "from collections import defaultdict\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    d = defaultdict(int)\n    for i in a:\n        d[i]+=1\n    s = sum(a)\n    q = int(input())\n    for i in range(q):\n        b, c = map(int, input().split())\n        s-=b*d[b]\n        s+=c*d[b]\n        print(s)\n        d[c]+=d[b]\n        d[b] = 0\nmain()", "n=int(input())\na=[int(x) for x in input().split()]\nq=int(input())\ns=[0]*(10**5+5)\n\nsum=0\nfor ai in a:\n  s[ai]+=1; sum+=ai;\n\nfor i in range(q):\n  b,c=map(int,input().split())\n  cnt=s[b]; s[b]=0; s[c]+=cnt;\n  sum+=(c-b)*cnt\n  print(sum)", "def main():\n    n = int(input())\n    a_lst = list(map(int, input().split()))\n    q = int(input())\n    bc_lst = [list(map(int, input().split())) for _ in range(q)]\n\n    a_max = max(a_lst)\n    bc_max = 0\n    for i in range(q):\n        b = bc_lst[i][0]\n        c = bc_lst[i][1]\n        bc_max = max(b, bc_max)\n        bc_max = max(c, bc_max)\n    maximum = max(a_max, bc_max)\n\n    count_lst = [0] * maximum\n    for i in range(n):\n        a = a_lst[i]\n        count_lst[a - 1] += 1\n    tmp = sum(a_lst)\n\n    for i in range(q):\n        b = bc_lst[i][0]\n        c = bc_lst[i][1]\n\n        count = count_lst[b - 1]\n        tmp += count * (c - b)\n        count_lst[b - 1] = 0\n        count_lst[c - 1] += count\n\n        print(tmp)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\n\ncnt_dict = {}\n\n\ns = sum(A)\n\nans = 0\n\nfor item in A:\n    if item not in cnt_dict:\n        cnt_dict[item] = 0\n    cnt_dict[item] += 1\n\nfor _ in range(Q):\n    X,Y = list(map(int,input().split()))\n\n    if X not in cnt_dict:\n        cnt_dict[X] = 0\n    if Y not in cnt_dict:\n        cnt_dict[Y] = 0\n\n    s -= cnt_dict[X] * X\n    s += cnt_dict[X] * Y\n\n    cnt_dict[Y] += cnt_dict[X]\n    cnt_dict[X] = 0\n\n\n    print(s)\n\n\n\n\n\n'''\n#\u521d\u671f\u6848\u3000\u9045\u3059\u304e\n\nN = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\n\n\n\nfor i in range(Q):\n    X,Y = map(int,input().split())\n\n    ans = 0\n\n    for j in range(N):\n        if A[j] == X:\n            ans += Y\n            A[j] = Y\n        else:\n            ans += A[j]\n\n    print(ans)\n\n    '''\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#import sympy\n#from scipy.sparse.csgraph import breadth_first_order, depth_first_order, shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\nfrom decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nN = ni()\nA = na()\nQ = ni()\nans = sum(A)\nd = collections.Counter(A)\nfor i in range(Q):\n    B, C = na()\n    ct_b = d[B]\n    if ct_b == 0:\n        print(ans)\n    else:\n        ans += ct_b * (C - B)\n        d[C] += ct_b\n        d[B] = 0\n        print(ans)", "N=int(input())\n*A,=map(int,input().split())\nQ=int(input())\nBC=[list(map(int,input().split())) for _ in range(Q)]\n\nimport collections\nc = collections.Counter(A)\ns=sum(A)\n\nfor i,j in BC:\n v=c[i]\n s+=v*(j-i)\n print(s)\n c[j]+=v\n c[i]=0", "import collections\n\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\nb = []\nc = []\nfor i in range(q):\n    bi, ci = list(map(int, input().split()))\n    b.append(bi)\n    c.append(ci)\n\ncount = collections.Counter(a)\nsums = sum(a)\n\nfor i in range(q):\n    sums += count[b[i]] * (c[i] - b[i])\n    print(sums)\n    count[c[i]] += count[b[i]]\n    count[b[i]] = 0\n", "n=int(input())\nl=[0]*(10**5+1)\nk=list(map(int,input().split()))\nq=int(input())\nfor i in range(n):\n    l[k[i]]+=1\nwa=sum(k)\nfor i in range(q):\n    a,b=map(int,input().split())\n    wa+=(b-a)*l[a]\n    print(wa)\n    l[b]+=l[a]\n    l[a]=0", "def main():\n    n = int(input())\n    A = list(map(int, input().split()))\n\n    sum_a = sum(A)\n\n    d = dict()\n\n    for a in A:\n        d[a] = d.get(a, 0) + 1\n\n    for _ in range(int(input())):\n        b, c = list(map(int, input().split()))\n        if d.get(b, 0) != 0:\n\n            temp = d[b]         \n            d[b] -= temp\n            d[c] = d.get(c, 0) + temp\n\n            sum_a += (c - b) * temp\n        print(sum_a)\n        \nmain()\n", "from collections import Counter\n\n\ndef solve(string):\n    n, *aqbc = list(map(int, string.split()))\n    a, _, bc = aqbc[:n], aqbc[n], aqbc[n + 1:]\n    s = sum(a)\n    t = Counter(a)\n    ans = []\n    for b, c in zip(*[iter(bc)] * 2):\n        if c in list(t.keys()):\n            t[c] += t[b]\n        else:\n            t[c] = t[b]\n        s += (c - b) * t[b]\n        del t[b]\n        ans.append(s)\n    return \"\\n\".join(map(str, ans))\n\n\ndef __starting_point():\n    import sys\n    print((solve(sys.stdin.read().strip())))\n\n__starting_point()", "N = int(input())\nA = list(map(int,input().split()))\na = {}\nfor i in A:\n    if i in a:\n        a[i] += 1\n    else:\n        a[i] = 1\nQ = int(input())\nans = sum(A)\nfor i in range(Q):\n    B,C = map(int,input().split())\n    if B in a:\n        ans += (C-B) * a[B]\n        if C in a:\n            a[C] += a[B]\n        else:\n            a[C] = a[B]\n        a[B] = 0\n    print(ans) ", "N = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\nnums = [0]*100000\n\nfor i in range(N):\n  nums[A[i]-1] += 1\n\nS = 0\n\nfor j in range(100000):\n  S += (j+1)*nums[j]\n\nfor j in range(Q):\n  B,C = map(int,input().split())\n  S += nums[B-1]*(C-B)\n  nums[C-1] += nums[B-1]\n  nums[B-1] = 0\n  print(S)", "from collections import Counter\nN = int(input())\n# \u6b63\u6570\u5217A\nA = list(map(int, input().split()))\nQ = int(input())\n# B_i\u3067\u3042\u308b\u8981\u7d20\u3092C_i\u306b\u7f6e\u304d\u63db\u3048\u308b\nB_C = [list(map(int, input().split())) for _ in range(Q)]\n\nall_count = Counter(A)\nS = sum(A)\n\nfor B, C in B_C:\n\n    count_B = all_count[B]\n    all_count[B] = 0\n    all_count[C] += count_B\n    S = S + (C-B)*count_B\n\n    print(S)", "n = int(input())\nA = list(map(int, input().split()))\n\nsum_a = sum(A)\n\nd = dict()\n\nfor a in A:\n    d[a] = d.get(a, 0) + 1\n\nfor _ in range(int(input())):\n    b, c = list(map(int, input().split()))\n    if d.get(b, 0) != 0:\n\n        temp = d[b]         \n        d[b] -= temp\n        d[c] = d.get(c, 0) + temp\n\n        sum_a += (c - b) * temp\n    print(sum_a)\n        \n\n", "import collections\n\nN = int(input())\nA = list(map(int,input().split()))\nAc = collections.Counter(A)\nans = sum(A)\n\nQ = int(input())\nAckey = set(Ac.keys())\n\nfor _ in range(Q):\n    B,C = list(map(int,input().split()))\n    if B in Ackey:\n        numB = Ac[B]\n    else:\n        numB = 0\n    ans += (C-B)*numB\n    print(ans)\n    Ac[C]+=numB\n    Ackey.add(C)\n    Ac[B]=0\n\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Mon Sep  7 01:13:08 2020\n\n@author: liang\n\"\"\"\n\"\"\"\nABC  171 D \u5dee\u5206\u66f4\u65b0\u3000\u30d1\u30b1\u30c3\u30c8\u5909\u63db\n\u3010\u7121\u99c4\u306a\u63a2\u7d22\u306f\u884c\u308f\u306a\u3044\uff08\u30e1\u30e2\u30ea\u5316\uff09 \u21d2\u3000\u30d1\u30b1\u30c3\u30c8\u5909\u63db\u3011\n\u30d1\u30b1\u30c3\u30c8\n\u3000\u5024v\u304c\u51fa\u73fe\u3059\u308b\u56de\u6570\u3092\u8a18\u9332\u3057\u3066\u304a\u304f\n\ndict()\u65b9\u5f0f\u3000\u21d2\u3000\u63a2\u7d22\u306bO(logn) or O(n)\u304c\u304b\u304b\u308b\n\u914d\u5217\u65b9\u5f0f\u3000\u21d2\u3000\u63a2\u7d22\u304cO(1)\u3068\u306a\u308b!\n\n\u3010\u5dee\u5206\u66f4\u65b0\u3011\n\u5024B\u304c\u5168\u3066\u5024C\u306b\u306a\u308b\n\u3000\u21d2\u3000(C - B) * \u5024B\u306e\u500b\u6570\u3060\u3051\u5897\u52a0\u3059\u308b\n \u21d2\u3000\u5024C\u306e\u500b\u6570\u3000+= \u5024B\u306e\u500b\u6570\n \u21d2\u3000\u5024B\u306e\u500b\u6570\u3000= 0\n\"\"\"\n\nN = int(input())\nA = [int(i) for i in input().split()]\nQ = int(input())\n\nd = [0]*(10**5)\n\nfor i in A:\n    d[i-1] += 1\n\nans = sum(A)\n\nfor i in range(Q):\n    b, c = map(int,input().split())\n    ans += (c-b)*d[b-1]\n    d[c-1] += d[b-1]\n    d[b-1] = 0\n    print(ans)", "N = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\nC = (10**5+1)*[0]\nT = sum(A)\n\nfor a in A:\n  C[a]+=1\n\nfor q in range(Q):\n  b,c = map(int,input().split())\n  T+=C[b]*(c-b)\n  C[c]+=C[b]\n  C[b]=0\n  print(T)", "import numpy as np\nfrom collections import Counter\nN=int(input())\nAlist=list(map(int,input().split()))\nQ=int(input())\nbc=[]\nfor _ in range(Q):\n    bc.append(list(map(int,input().split())))\ncount=Counter(Alist)\nresult=0\nfor key,value in count.items():\n    result+=key*value\nfor i in range(Q):\n    if bc[i][0] in count.keys():\n        result+=(bc[i][1]-bc[i][0])*count[bc[i][0]]\n        count[bc[i][1]]+=count[bc[i][0]]\n        count[bc[i][0]]=0\n    print(result)", "n=int(input())\na=list(map(int,input().split()))\nq=int(input())\n\nd={}\ncnt=sum(a)\n\nfor i in a:\n    if i in d:\n        d[i]+=1\n    else:\n        d[i]=1\n\nfor i in range(q):\n    b,c=map(int,input().split())\n    if b in d:\n        if c not in d:\n            d[c]=0\n        e=d.pop(b)\n        d[c]+=e\n        cnt+=(c-b)*e\n    print(cnt)", "N = int(input())\nAlist = list(map(int,input().split()))\nsum1 = sum(Alist)\ndic = {}\nfor a in Alist:\n    if not a in dic:\n        dic[a] = 0\n    dic[a]+=1\n\nQ = int(input())\nQlist = []\nfor _ in range(Q):\n    Qlist.append(list(map(int,input().split())))\nfor q in Qlist:\n    b,c = q\n    n = 0\n    if b in dic:\n        n = dic[b]\n        dic[b] = 0\n    else:\n        pass\n\n    if c in dic:\n        dic[c] += n\n    else:\n        dic[c] = n\n    sum1 += n*(c-b)\n\n    print(sum1)", "import collections\n\nn = int(input())\na = list(map(int, input().split()))\nq = int(input())\ns = sum(a)\n\nad = collections.Counter(a)\n\nfor i in range(q):\n    b, c = map(int, input().split())\n    s += ad.get(b, 0) * (c - b) \n    print(s)\n    ad[c] += ad.get(b, 0)\n    ad[b] = 0", "_,A,Q,*X=open(0);S=0;L=[0]*7**6\nfor a in map(int,A.split()):S+=a;L[a]+=1\nfor x in X:B,C=map(int,x.split());S+=(C-B)*L[B];L[C]+=L[B];L[B]=0;print(S)", "from collections import Counter\nN = int(input())\nA = list(map(int, input().split()))\nQ = int(input())\nsu = sum(A)\ncounter = Counter(A)\nlis = {}\nfor i in range(Q):\n  B, C = map(int, input().split())\n  su -= B * counter[B]\n  su += C * counter[B]\n  counter[C] += counter[B]\n  counter[B] = 0\n  print(su)", "N=int(input())\nA=list(map(int,input().split()))\ncnt=[0 for _ in range(100001)]\nfor i in range(N):\n    cnt[A[i]]+=1\nans=sum(A)\nQ=int(input())\nfor _ in range(Q):\n    B,C=map(int,input().split())\n    cnt[C]+=cnt[B]\n    ans+=(C-B)*cnt[B]\n    cnt[B]=0\n    print(ans)", "n = int(input())\na = list(map(int, input().split()))\n\ns = sum(a)\ncount = {}\nfor x in a:\n    count[x] = count.get(x, 0) + 1\n\nq = int(input())\nans = []\nfor _ in range(q):\n    b, c = map(int, input().split())\n    s += (c - b) * count.get(b, 0)\n    count[c] = count.get(c, 0) + count.get(b, 0)\n    count[b] = 0\n    ans.append(s)\n\nfor x in ans:\n    print(x)", "from collections import Counter\n\nN=int(input())\nA=list(map(int,input().split()))\nQ=int(input())\n#BC=[]\n#for i in range(Q):\n#    BC.append(list(map(int,input().split())))\nA_sum=sum(A)\nA_count=Counter(A)\n\nfor i in range(Q):\n    B,C=(map(int,input().split()))\n    A_sum+=(C-B)*A_count[B]\n    A_count[C]+=A_count[B]\n    A_count[B]=0\n    print(A_sum)", "import collections\nn = int(input())\narr = list(map(int,input().split()))\ncnt = collections.defaultdict(int)\nfor val in arr:\n    cnt[val] += 1\nsums = sum(arr)\nq = int(input())\nfor _ in range(q):\n    b, c = list(map(int,input().split()))\n    diff = (c-b)*(cnt[b])\n    sums += diff\n    print(sums)\n    cnt[c] += cnt[b]\n    cnt[b] = 0\n", "n = int(input())\na = [int(x) for x in input().split()]\nans = sum(a)\nans_li = []\nq = int(input())\n\nd = {}\nfor i in range(len(a)):\n    if a[i] not in d:\n        d[a[i]] = 0\n    d[a[i]] += 1\n\nfor i in range(q):\n    B,C = list(map(int,input().split()))\n    if B not in d:\n        ans_li.append(ans)\n    else:\n        num = d[B]\n        dis = abs(B - C)\n        if B >= C:\n            ans_li.append(ans - (num * dis))\n            ans = ans_li[-1]\n        else:\n            ans_li.append(ans + (num * dis))\n            ans = ans_li[-1]\n\n        if C not in d:\n            d[C] = num\n            d[B] = 0\n        else:\n            d[C] += num\n            d[B] = 0\n\nfor aa in ans_li:\n    print(aa)\n", "n = int(input())\na = list(map(int, input().split()))\nq = int(input())\ndic = [0 for _ in range(10 ** 5 + 1)]\ncount = 0\nfor i in a:\n    dic[i] += 1\n    count += i\n\nfor i in range(q):\n    b, c = map(int,input().split())\n    count -= b * dic[b]\n    dic[c] += dic[b]\n    count += c * dic[b]\n    dic[b] = 0\n    print(count)", "from collections import defaultdict\ndef main():\n    n = int(input())\n    a = list(map(int, input().split(\" \")))\n    q = int(input())\n    bc = []\n    sum1 = sum(a)\n    for _ in range(q):\n        bc.append(list(map(int, input().split(\" \"))))\n    d = defaultdict(lambda:0)\n    for i in range(n):\n        d[a[i]] += 1\n\n    for i in range(q):\n        if bc[i][0] in d:\n            sum1 += (bc[i][1] - bc[i][0]) * d[bc[i][0]]\n            d[bc[i][1]] += d[bc[i][0]]\n            del d[bc[i][0]] \n        print(sum1)\n        \n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\nA = list(map(int, input().split()))\nq = int(input())\nquery = [tuple(map(int, input().split())) for _ in range(q)]\n\ns = sum(A)\n\nB = [0 for _ in range(10**5 + 1)]\nfor a in A:\n    B[a] += 1\n\nfor b, c in query:\n    s -= b * B[b]\n    s += c * B[b]\n    print(s)\n    B[c] += B[b]\n    B[b] = 0", "N=int(input())\nList = list(map(int, input().split()))\nRow = int(input())\nQList = []\nfor i in range (Row):\n  QList.append(list(map(int, input().split())))\ndictA ={}\nres = 0\nfor i in range (N):\n  dictA.setdefault(List[i],0) \n  dictA[List[i]] += 1\n  res += List[i]\nnum = 0\nfor i in range(Row):\n  if QList[i][0] not in dictA:\n    pass\n  else:\n    num = dictA[QList[i][0]] \n    res = res - dictA[QList[i][0]] * QList[i][0]\n    dictA[QList[i][0]] = 0\n    dictA.setdefault(QList[i][1],0) \n    dictA[QList[i][1]] += num\n    res += QList[i][1] * num\n  print(res)", "n = int(input())\na = list(map(int, input().split()))\nq = int(input())\nd = dict()\n\nfor i in range(n):\n    if a[i] not in d.keys():\n        d[a[i]] = 1\n    else:\n        d[a[i]] += 1\n\ns = sum([k * v for k, v in d.items()])\n\nfor i in range(q):\n    b, c = list(map(int, input().split()))\n    if b in d.keys():\n        s += (c - b) * d[b]\n        if c in d.keys():\n            d[c] += d[b]\n            d[b] = 0\n        else:\n            d[c] = d[b]\n            d[b] = 0\n    print(s)", "N = int(input())\nA = list(map(int,input().split()))\nQ = int(input())\nB = []\nC = []\nfor i in range(Q):\n  B_temp,C_temp = map(int,input().split())\n  B.append(B_temp)\n  C.append(C_temp)\nCounts = [0]*100010\nfor i in range(N):\n  Counts[A[i]]=Counts[A[i]]+1\n\nsum_A = 0\nfor i in range(100010):\n  sum_A = sum_A + i*Counts[i]\n  \nfor i in range(Q):\n  sum_A = sum_A + Counts[B[i]]*(C[i]-B[i])\n  Counts[C[i]] = Counts[C[i]]+Counts[B[i]]\n  Counts[B[i]] = 0\n  print(sum_A)"]