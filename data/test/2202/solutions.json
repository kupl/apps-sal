["#http://codeforces.com/contest/958/problem/C1\n\nN,p=list(map(int,input().split()))\nA=list(map(int,input().split()))\nsum1=A[0]\nsum2=sum(A[1:])\nans=(sum1%p)+(sum2%p)\nfor i in range(1,N-1):\n    sum1+=A[i]\n    sum2-=A[i]\n    ans1=sum1%p\n    ans2=sum2%p\n    ans=max(ans1+ans2,ans)\nprint(ans)", "N, p = list(map(int, input().split()))\nA = list(map(int, input().split()))\nsa = sum(A)\ncursum = 0\nans = 0\nfor i, a in enumerate(A[:-1]):\n    cursum += a\n    score = (cursum % p) + ((sa - cursum) % p)\n    ans = max(ans, score)\n\nprint(ans)\n", "\n\nn,p=list(map(int,input().split()))\na=list(map(int,input().split()))\n\nsum1=0\npre=[]\nfor i in range(n):\n    sum1+=a[i]\n    sum1=sum1%p\n    pre.append(sum1)\npost=[0 for i in range(n)] #ii is not included\nsum1=0\nfor i in range(n-1,-1,-1):\n        post[i]=sum1\n        sum1+=a[i]\n        sum1=sum1%p\ns=0\nfor i in range(n):\n    s=max(pre[i]+post[i],s)\nprint(s)\n", "N,P = list(map(int,input().split()))\nsrc = list(map(int,input().split()))\nK = sum(src)%P\nans = tmp = 0\nfor a in src:\n    tmp += a\n    tmp %= P\n    ans = max(ans, tmp + (K-tmp)%P)\nprint(ans)\n", "n, m = [int(x) for x in input().split(' ')]\nnumbers = [int(x) for x in input().split(' ')]\n\nmax_res = 0\ntotal_sum = sum(numbers)\nsum_thus_far = 0\nfor i in range(n-1):\n\ttmp_a = sum_thus_far + numbers[i]\n\ttmp_b = total_sum - tmp_a\n\ttmp_sum = (tmp_a % m) + (tmp_b % m)\n\tif tmp_sum > max_res:\n\t\tmax_res = tmp_sum\n\nprint(max_res)", "n, p = list(map(int, input().split()))\narr = list(map(int, input().split()))\nsum_ = sum(arr)\nres = 0\ntemp = 0\nfor i in arr:\n    temp += i\n    sum_ -= i\n    res = max(res, temp % p + sum_ % p)\n\nprint(res)\n", "n, p = list(map(int, input().split()))\npre = [0] * 100100\nA = list(map(int, input().split()))\nfor i in range(n):\n  pre[i + 1] = (pre[i] + A[i]) % p\nprint(max((pre[i] - pre[0]) % p + (pre[n] - pre[i]) % p for i in range(1, n)))\n  \n", "n,m=map(int,input().split())\narr=list(map(int,input().split()))\ns1=arr[0]\ns2=sum(arr)-arr[0]\nans=[s1%m+s2%m]\nfor i in range(1,n-1):\n    s1+=arr[i]\n    s2-=arr[i]\n    ans.append(s1%m+s2%m)\nprint(max(ans))", "s = input().split()\nn, p = int(s[0]), int(s[1])\ncl = list(map(int, input().split()))\nmx = 0\nsm = sum(cl)\nqs = cl[0]\nfor i in range(1, n):\n  y = qs%p + (sm-qs)%p\n  if y>mx:\n    mx = y\n  qs+=cl[i]\n\nprint(mx)", "n,p = map(int,input().split())\na = list(map(int,input().split()))\npref = [a[0]]\nfor i in range(1,n):\n    pref.append(pref[-1]+a[i])\ntot = pref[-1]\nans = 0\nfor i in range(n-1):\n    ans = max(ans,(pref[i]%p)+((pref[-1]-pref[i])%p))\nprint(ans)", "n, p = [int(i) for i in input().split()]\nsoma = [0 for i in range(n + 1)]\nfor idx, i in enumerate(input().split()):\n  soma[idx + 1] = soma[idx] + int(i)%p\n  \nr = -float(\"inf\")\nfor i in range(1, n):\n  r = max(r, soma[i]%p + (soma[n] - soma[i])%p)\n\nprint(r)", "n, p = list(map(int, input().split()))\na = list(map(int, input().split()))\na = [c % p for c in a]\ns = sum(a)\nsp = s % p\nif sp == s or sp + 1 == p:\n    print(sp)\nelse:\n    print(sp + p)\n", "n, p = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\n\nsum1 = int(0)\nsum2 = int(0)\n\nfor i in range(0, n):\n    sum2 = sum2 + a[i]\nk = n-1\nb = [0]\nfor i in range(0, k):\n    sum1 = sum1 + a[i]\n    sum2 = sum2 - a[i]\n    b.append((sum1 % p) + (sum2 % p))\nprint(max(b))\n    \n", "n, p = map(int, input().split())\n\n\na = list(map(int, input().split()))\n\nm = -1\n\ns = sum(a)\n\nsums = 0\nfor i in a:\n\n\tsums+=i\n\n\tm = max(m, sums%p+(s-sums)%p)\n\nprint(m)", "n, p = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\ns1, s2 = a[0], sum(a) - a[0]\nans = s1 % p + s2 % p\nfor i in range(n - 1):\n    s1 = (s1 + a[i]) % p\n    s2 = (s2 - a[i]) % p\n    ans = max(ans, s1 + s2)\nprint(ans)\n", "# from dust i have come dust i will be\n\nn,p=list(map(int,input().split()))\na=list(map(int,input().split()))\n\ns=sum(a)\nmx=0\nt=0\nfor i in range(n-1):\n    t+=a[i]\n    x=(t%p)+(s-t)%p\n    mx=max(mx,x)\n\nprint(mx)\n\n\n", "n, p = map(int, input().split())\n\n\na = list(map(int, input().split()))\n\nm = -1\n\ns = sum(a)\n\nsums = 0\nfor i in a:\n\n\tsums+=i\n\n\tm = max(m, sums%p+(s-sums)%p)\n\nprint(m)", "n, p = map(int, input().split())\na = [int(x) for x in input().split()]\ns = sum(a)\nans = -1; psum = 0\nfor i in a:\n    psum += i\n    ans = max(ans, psum % p + (s - psum) % p)\nprint(ans)", "n,p = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nx = a[0] % p\ny = sum(a[1:]) % p\ns = x+y\nfor i in range(1, n-1):\n\tx = (x+a[i]) % p\n\ty = (y-a[i]) % p\n\ts = max(s, x+y)\nprint(s)\n", "from itertools import accumulate\n\nN, p = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nleft = [0] + list(accumulate(A))\nright = list(accumulate(A[::-1]))[::-1] + [0]\n\nans = [(left[i] % p) + (right[i] % p) for i in range(N + 1)]\n\nprint(max(ans))\n", "n, p = map(int, input().split())\na = list(map(int, input().split()))\na = [c % p for c in a]\ns = sum(a)\nsp = s % p\nif sp == s or sp + 1 == p:\n    print(sp)\nelse:\n    print(sp + p)", "line1=list(map(int,input().split()))\nnums=list(map(int,input().split()))\nn,p=line1[0],line1[1]\nsum_all=sum(nums)\nsum_left=nums[0]\nsum_right=sum_all-sum_left\nres=sum_left%p + sum_right%p\nfor i in range(1,n-1):\n    sum_left+=nums[i]\n    sum_right-=nums[i]\n    temp=sum_left%p + sum_right%p\n    res=max(res,temp)\n    \nprint(res)\n", "np = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nmax = 0\n\nmod = []\nsum = 0\nfor i in range(0, np[0]) :\n    sum += a[i]\n    mod.append(sum % np[1])\nindex = 0\nmm = 0\nfor i in range(0, np[0]) :\n    if mod[i] > mm :\n        mm = mod[i]\n        index = i\n\n\nsum2 = 0;\nfor i in range(index+1, np[0]) :\n    sum2 += a[i]\nsum2 = sum2 % np[1]\n\nprint(mod[index] + sum2)\n\n", "np = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\nl1 = [a[0]]\nl2 = [a[np[0] - 1]]\n\nfor i in range(1, np[0] - 1) :\n    l1.append(l1[i - 1] + a[i])\n    l2.append(l2[i - 1] + a[-(i + 1)])\n\nmax = 0\nfor i in range(0, np[0] - 1) :\n    if l1[i] % np[1] + l2[-(i + 1)] % np[1] > max:\n        max = l1[i] % np[1] + l2[-(i + 1)] % np[1]\n\nprint(max)\n", "n, p = [int(a) for a in input().strip().split(' ')]\ne = [int(a) for a in input().strip().split(' ')]\nmax_sum = 0\ns = sum(e)\ncurrent_s = 0\nfor i in e:\n    current_s += (i % p)\n    current_s %= p\n    max_sum = max(max_sum,current_s + (s - current_s) % p)\nprint(max_sum)"]