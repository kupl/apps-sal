["from collections import defaultdict\n\ndef calcBinomials(N):\n    nonlocal binom\n    N += 1\n    binom = [[0]*N for _ in range(N)]\n    for n in range(N):\n        binom[n][0] = binom[n][n] = 1\n        for k in range(1, n):\n            binom[n][k] = binom[n-1][k] + binom[n-1][k-1]\n\nn = int(input())\na = list(map(int, input().split()))\nS, res = sum(a), 0\ndp = [defaultdict(lambda: 0) for _ in range(S+1)]\ndp[0][0] = 1\n\ncnt = {_:a.count(_) for _ in a}\nfor x in a:\n    for i in range(len(dp)-1-x, -1, -1):\n        for k, v in list(dp[i].items()):\n            dp[i+x][k+1] += v\n\ncalcBinomials(n)\nfor x, c in list(cnt.items()):\n    for i in range(1, c+1):\n        if dp[x*i][i] == binom[c][i] or dp[S - x*i][n-i] == binom[c][c-i]:\n            res = max(res, i)\nif len(cnt) <= 2: res = n\nprint(res)\n"]