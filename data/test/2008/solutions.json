["\nn = int(input())\nS = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    S.append([a, b])\nS.sort(key=lambda x: (x[1] - x[0]))\ncnt = 0\nfor i in range(n):\n    cnt += S[i][0] * i + S[i][1] * (n - i - 1)\nprint(cnt)", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\na.sort(key=lambda x: x[1] - x[0])\nans = 0\nfor i in range(n):\n    ans += a[i][0] * i\n    ans += a[i][1] * (n - i - 1)\nprint(ans)", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\nn=nn()\n\nstudents=[]\nfor i in range(n):\n\tstudents.append(lm())\n\nstudents.sort(key=lambda x: x[1]-x[0])\n\ndiss=0\n\nfor i in range(n):\n\tdiss+=i*students[i][0]+(n-i-1)*students[i][1]\n\nprint(diss)\n", "n=int(input())\nque=[]\nfor i in range(n):\n    a,b=[int(x) for x in input().split()]\n    que.append((a-b,a,b))\nque.sort(reverse=True)\ncounter=0\nfor i in range(n):\n    counter+=que[i][1]*i+que[i][2]*(n-i-1)\nprint(counter)\n    \n    \n", "n = int(input())\na = []\ns = 0\nfor _ in range(n):\n    t = list(map(int, input().split()))\n    s += t[1] * n - t[0]\n    a.append(t[0] - t[1])\na.sort()\nfor i in range(n):\n    s += a[i] * (n - i)\nprint(s)\n", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\nn = int(input())\nA = [[int(x) for x in input().split()] for _ in range(n)]\n\nL = []\nR = []\n\ncost = 0\nfor i in range(n):\n    mn = min(A[i])\n    cost += mn*(n-1)\n    A[i][0] -= mn\n    A[i][1] -= mn\n\n    if A[i][0] == 0:\n        R.append(A[i][1])\n    elif A[i][1] == 0:\n        L.append(A[i][0])\n\ncost += sum(i*e for i,e in enumerate(sorted(L, reverse=True)))\ncost += sum(i*e for i,e in enumerate(sorted(R, reverse=True)))\n\nprint(cost)\n", "n = int(input())\ns = []\nfor i in range(n):\n    a,b = map(int, input().split())\n    s.append((b-a,a,b))\ns.sort()\nans = 0\nfor i in range(n):\n    d,a,b = s[i]\n    ans += a*i + b*(n-i-1)\nprint(ans)", "import sys\nsys.setrecursionlimit(20000000)\ninput = sys.stdin.readline\nn = int(input())\na = [list(map(int,input().split())) for i in range(n)]\nfor i in range(n):\n    a[i].append(a[i][0]-a[i][1])\na.sort(key = lambda x:-x[2])\nans = 0\nfor i in range(n):\n    ans += a[i][0]*i + a[i][1]*(n-i-1)\nprint(ans)", "\nn = int(input())\nvalues = []\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    values.append((a, b))\n\nvalues.sort(key=lambda x: x[0] - x[1], reverse=True)\n\ndiss = sum([values[i][0]*i + values[i][1]*(n-i-1) for i in range(n)])\nprint(diss)\n", "import sys\ninput = sys.stdin.readline\n\nN = int(input())\nX = []\nfor _ in range(N):\n    a, b = list(map(int, input().split()))\n    c = b - a\n    X.append([a,b,c])\n\nX = sorted(X, key = lambda x: x[2])\ns = 0\nfor i in range(N):\n    s += X[i][0] * i + X[i][1] * (N-i-1)\n\nprint(s)\n", "n = int(input())\npeople = []\nfor i in range(n):\n    people.append(tuple(int(x) for x in input().split()))\ndiss = sum(n*p[1]-p[0] for p in people) # the const part\na_b = list([p[0]-p[1] for p in people])\na_b.sort(reverse=True)\ndiss += sum((idx+1)*val for idx, val in enumerate(a_b))\nprint(diss)\n", "def main():\n    n = int(input())\n    # left = []\n    # right = []\n    arr = []\n    for i in range(n):\n        x, y = map(int, input().split())\n        arr.append((x, y))\n        # if x > y:\n        #     left.append((x, -y))\n        # else:\n        #     right.append((y, -x))\n    ans = 0\n    # left.sort(reverse = 1)\n    # right.sort(reverse = 1)\n    # for i in range(len(left)):\n    #     x, y = left[i]\n    #     ans += x * i - (n - 1 - i) * y\n    # for i in range(len(right)):\n    #     x, y = right[i]\n    #     ans += x * i - (n - 1 - i) * y\n    arr.sort(key = lambda a: a[1] - a[0])\n    for i in range(n):\n        x, y = arr[i]\n        ans += x * i + (n - 1 - i) * y\n    print(ans)\n    return 0\nmain()", "lines = int(input())\n\ndata = []\nfor i in range(lines):\n    l, r = list(map(int, input().split(' ')))\n    data.append((l, r))\n\ndata = sorted(data, key= lambda x: x[1] - x[0])\n\n# calculate\nt = 0\nfor i, (l, r) in enumerate(data):\n    t += l * i + r * (lines - i - 1)\n\nprint(t)\n\n\n", "n = int(input())\ndata = [list(map(int, input().split())) for _ in range(n)]\ndata.sort(key = lambda x: x[0]-x[1])\nprint(sum(v[1]*i + v[0]*(n-i-1) for i, v in enumerate(data)))", "def key(ab):\n    a, b = ab\n    return a - b\n\n\ndef main():\n    n = int(input())\n    nm = 0\n    m1 = n - 1\n    res = 0\n    for a, b in sorted((tuple(map(int, input().split())) for _ in range(n)), key=key):\n        res += a * m1 + b * nm\n        nm += 1\n        m1 -= 1\n    print(res)\n\n\nmain()\n", "n = int(input())\n\na = []\n\nfor _ in range(n):\n    ai, bi = list(map(int, input().split()))\n    a.append((ai, bi, ai-bi))\n\na.sort(key = lambda x: x[2], reverse=True)\n\ns = 0\n\nfor i, k in enumerate(a):\n    s += k[0] * i + k[1] * (n - i -1)\n\nprint(s)\n\n", "import sys\nN = int(input())\nalu = 0\nA = []\nB = []\nfor _ in range(N):\n    a, b = map(int, sys.stdin.readline().split())\n    alu += min(a, b)\n    if a < b:\n        B.append(b - a)\n    else:\n        A.append(a - b)\nalu *= (N-1)\nA.sort(reverse = True)\nB.sort(reverse = True)\nalu += sum([i*j for i, j in enumerate(A)]) + sum([i*j for i, j in enumerate(B)])\nprint(alu)", "#21:34 18-04-2019\n#21:44 18-04-2019\n#21:53 18-04-2019\n\nN_ = 100010\n\nn = int(input())\na = []\nb = []\nd = []\nsum = 0\nfor i in range(n):\n\tai, bi = list(map(int, input().split()))\n\ta.append(ai)\n\tb.append(bi)\n\td.append(ai-bi)\n\tsum += bi*n-ai\nd.sort()\nd = d[::-1]\nfor i in range(n):\n\tsum += d[i]*(i+1)\n\nprint(sum)\n\n#21:51 18-04-2019\n#21:53 18-04-2019\n", "n = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]\narr.sort(key=lambda x: (x[1] - x[0]))\nres = 0\nfor i in range(n):\n    res += arr[i][0] * i + arr[i][1] * (n - i - 1)\nprint(res)\n", "import math\ndef cmp(a):\n    return a[0] - a[1]\nn = int(input())\nres = 0\narr = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    arr.append((a, b))\narr.sort(key=cmp, reverse=True)\nfor i in range(len(arr)):\n    res += arr[i][0] * i + arr[i][1] * (n - i - 1)\nprint(res)\n\n", "N = int(input())\n\nmaps = []\n\nfor i in range(N):\n    a, b = list(map(int, input().split()))\n    diff = b - a\n    maps += [[diff, a, b]]\n\nmaps.sort()\n\nans = 0\n\nfor i, v in enumerate(maps):\n    a = v[1]\n    b = v[2]\n    j = i + 1\n    \n    ans += a * (j - 1) + b * (N - j)\nprint(ans)    \n", "N = int(input())\nls = []\nfor i in range(N):\n    ls.append(tuple(map(int, input().split())))\nls.sort(key=lambda x: x[1]-x[0])\nsum = 0\nfor i in range(N):\n    sum+=ls[i][0]*i+ls[i][1]*(N-1-i)\nprint(sum)\n", "n = int(input())\n\npos = []\nneg = []\n\nres = 0\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    if a > b:\n        pos.append([a, b])\n    elif a < b:\n        neg.append([a, b])\n    else:\n        res += (n - 1) * a\n\npos.sort(key=lambda l: -abs(l[0] - l[1]))\nneg.sort(key=lambda l: -abs(l[0] - l[1]))\n\ndef f(i, l):\n    return l[0] * (i - 1) + l[1] * (n - i)\n\nfor i in range(len(pos)):\n    res += f(i + 1, pos[i])\n\nfor i in range(len(neg)):\n    res += f(n - i, neg[i])\n\nprint(res)\n", "def in_int():\n    return int(input())\ndef in_list():\n    return [int(x) for x in input().split()]\n\nn=int(input())\nns=[]\nans=0\nfor i in range(n):\n    x,y=in_list()\n    ns.append(x-y)\n    ans+=-x+y*n\nns.sort(reverse=True)\nfor i in range(n):\n    c=ns[i]\n    ans+=c*(i+1)\nprint(ans)\n\n\n\n"]