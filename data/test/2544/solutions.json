["from collections import deque\nimport sys\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    T = int(input())\n\n    for i in range(T):\n        N = int(input())\n        e_list = [[] for i in range(N)]\n        for i in range(N-1):\n            a,b = list(map(int,input().split()))\n            a,b = a-1,b-1\n            e_list[a].append(b)\n            e_list[b].append(a)\n        \n        \n        vi = 0\n        INF = 10**27\n        Q = deque([vi])\n        \n        checked_list = [False]*N\n        checked_list[vi]=True\n        \n        min_path_list = [INF]*N #change\n        min_path_list[vi] = 0\n\n        while len(Q)>0:\n            v = Q.pop()\n            for v1 in e_list[v]:\n                if not checked_list[v1]:\n                    checked_list[v1]=True\n                    Q.appendleft(v1)\n                    min_path_list[v1]=min(min_path_list[v1],min_path_list[v]+1)\n        \n        min_p = [(i,d) for i,d in enumerate(min_path_list)]\n        min_p.sort(key = lambda x:x[1],reverse=True)\n        member = [0]*N\n        #print(min_p)\n        center = []\n\n        for z in min_p:\n            #print(z)\n            flag = True\n            i,d = z\n            mem = 0\n            for v in e_list[i]:\n                mem += member[v]\n                if member[v] > N/2:\n                    flag=False\n            member[i] = mem + 1\n            if flag and N - member[i] <= N/2:\n                center.append(i)\n        \n        if len(center)==1:\n            print(1,e_list[0][0]+1)\n            print(1,e_list[0][0]+1)\n        else:\n            if e_list[center[0]][0]!=center[1]:\n                print(center[0]+1, e_list[center[0]][0]+1)\n                print(center[1]+1, e_list[center[0]][0]+1)\n            else:\n                print(center[0]+1, e_list[center[0]][1]+1)\n                print(center[1]+1, e_list[center[0]][1]+1)\n\ndef __starting_point():\n    main()\n\n__starting_point()"]