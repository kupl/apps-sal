["from math import *\nn, m = list(map(int, input().split()))\nif m < n - 1:\n    print('Impossible')\n    return\nr = [(i + 1, i + 2) for i in range(n - 1)]\nk = n - 1\nif k >= m:\n    print('Possible')\n    for x in r:\n        print(*x)\n    return\nfor i in range(1, n + 1):\n    for j in range(i + 2, n + 1):\n        if gcd(i, j) == 1:\n            r.append((i, j))\n            k += 1\n        if k >= m:\n            print('Possible')\n            for x in r:\n                print(*x)\n            return\nprint('Impossible')\n", "# def is_prime(n):\n#   if n == 2 or n == 3: return True\n#   if n < 2 or n%2 == 0: return False\n#   if n < 9: return True\n#   if n%3 == 0: return False\n#   r = int(n**0.5)\n#   f = 5\n#   while f <= r:\n#     if n%f == 0: return False\n#     if n%(f+2) == 0: return False\n#     f +=6\n#   return True\n# ans=0\n# for i in range(100000):\n#     if is_prime(i):\n#         ans+=1\n#         print(i)\n# print(ans)\n# print(is_prime(5003))\nfrom math import gcd as bltin_gcd\n\ndef cp(a, b):\n    return bltin_gcd(a, b) == 1\nn,m=[int(x) for x in input().split()]\nans=[]\nyes='Possible'\nno='Impossible'\ndef pri():\n    print(yes)\n    for x in ans:\n        print(x[0],' ',x[1])\nif m<n-1:\n    print(no)\n    quit()\nif m==n-1:\n    print(yes)\n    for i in range(1,m+1):\n        print(i,' ',i+1)\n    quit()\nfor i in range(1,n):\n    ans.append((i,i%n+1))\nfor i in range(1,n+1):\n    for j in range(i+2,n+1):\n        if i%2==0 and j%2==0:\n            continue\n        if cp(i,j):\n            ans.append((i,j))\n            if len(ans)==m:\n                pri()\n                quit()\nprint(no)\n\n# connect!!!\n", "import math\nn, m = map(int, input().split())\nif m > n * (n - 1) // 2 or m < n - 1:\n    print(\"Impossible\");return\n\nrm = m - (n - 1)\nans = [(0, 0)] * (rm * 10)\nf = 0\n\nfor i in range(3, n+1):\n    for j in range(1, i-1):\n        if not rm:\n            break\n        if math.gcd(j, i) == 1:\n            ans[f] = (j, i)\n            f += 1\n            rm -= 1\n\nif rm:\n    print('Impossible');return\n\nprint('Possible')\nfor i in range(1, n):\n    print(i, i+1)\n\nfor i in range(f):\n    print(ans[i][0], ans[i][1])"]