["s1=input()\ns2=input()\nL={}\nL['h']=s1\nL['a']=s2\n\nn=int(input())\nD={}\nF={}\nfor i in range(n):\n    a=input().split()\n    m=int(a[0])\n    t=L[a[1]]\n    num=int(a[2])\n    c=a[3]\n    if((t,num) in D):\n        continue\n    if(c=='r' or (c=='y' and ((t,num) in F))):\n        D[(t,num)]=1\n        print(t,num,m)\n    else:\n        F[(t,num)]=1\n", "\"\"\"\nCodeforces Contest 281 Div 2 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef main():\n    s1 = read(0)\n    s2 = read(0)\n    n, = read()\n    arr = dict()\n    res = []\n    for i in range(n):\n        w,x,y,z = read(1)\n        w = int(w)\n        if x+y in arr.keys():\n            if arr[x+y][1] != \"r\":\n                res.append((x,y,w))\n            arr[x+y] = (w, \"r\")\n        else:\n            arr[x+y] = (w, z)\n            if arr[x+y][1] == \"r\":\n                res.append((x,y,w))\n    for x,y,w in res:\n        print(s1 if x == \"h\" else s2, y, w)\n\n################################### NON-SOLUTION STUFF BELOW\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "__author__ = 'PrimuS'\ns1 = input().strip(\"\\n\")\ns2 = input().strip(\"\\n\")\nn = int(input())\nd1 = {}\nd2 = {}\n\nfor i in range(n):\n    ss = input().split()\n    t = int(ss[0])\n    x = int(ss[2])\n    ss[3].strip(\"\\n\")\n    if ss[1] == 'h':\n        if x in d1 and d1[x] == 1:\n            print(s1, x, t)\n            d1[x] = 2\n        elif x not in d1:\n            if ss[3] == 'r':\n                print(s1, x,t)\n                d1[x] = 2\n            else:\n                d1[x] = 1\n    else:\n        if x in d2 and d2[x] == 1:\n            print(s2, x, t)\n            d2[x] = 2\n        elif x not in d2:\n            if ss[3] == 'r':\n                print(s2, x, t)\n                d2[x] = 2\n            else:\n                d2[x] = 1", "ht = input()\nat = input()\nN = int(input())\nhc = [0]*100\nac = [0]*100\nfor n in range(N):\n\tar = input().split()\n\tt = int(ar[0])\n\tm = int(ar[2])\n\tif ar[1] == 'h':\n\t\tif ar[3] == 'r':\n\t\t\tif hc[m] < 2:\n\t\t\t\tprint(ht, m, t)\n\t\t\t\thc[m] = 2\n\t\telse:\n\t\t\thc[m] += 1\n\t\t\tif hc[m] == 2:\n\t\t\t\tprint(ht, m, t)\n\tif ar[1] == 'a':\n\t\tif ar[3] == 'r':\n\t\t\tif ac[m] < 2:\n\t\t\t\tprint(at, m, t)\n\t\t\t\tac[m] = 2\n\t\telse:\n\t\t\tac[m] += 1\n\t\t\tif ac[m] == 2:\n\t\t\t\tprint(at, m, t)\n", "team1, team2 = input(), input()\nn = int(input())\nyellow = set()\nred = set()\nfor i in range(n):\n    a, b, c, d = input().split()\n    a = int(a)\n    c = int(c)\n    c2 = c\n    if b != 'h':\n        c += 111000\n    if d == 'y':\n        if c in red: continue\n        if c in yellow:\n            print(team1 if b == 'h' else team2, c2, a)\n            red.add(c)\n        else:\n            yellow.add(c)\n    if d == 'r':\n        if c in red: continue\n        print(team1 if b == 'h' else team2, c2, a)\n        red.add(c)\n", "tn = [input(), input()]\nt2i = {'h': 0, 'a': 1}\nc2s = {'y': 1, 'r': 2}\nst = [[0] * 100, [0] * 100]\nfor i in range(int(input())):\n    m, t, p, c = input().split()\n    m = int(m)\n    t = t2i[t]\n    p = int(p)\n    s = c2s[c]\n    if st[t][p] < 2:\n        st[t][p] += s\n        if st[t][p] >= 2:\n            print(tn[t], p, m)", "s = [input(), input()]\nn = int(input())\nans = [[0] * 101 for i in range(2)]\n\nfor i in range(n):\n    a = input().split()\n    q = 0\n    p = 0\n    \n    if a[3] == 'y': q = 1\n    else: q = 2\n\n    if a[1] == 'h': p = 0\n    else: p = 1\n\n    if ans[p][int(a[2])] >= 2: continue\n\n    ans[p][int(a[2])] += q\n\n    if ans[p][int(a[2])] >= 2:\n        print(s[p] + ' ' + a[2] + ' ' + a[0])\n\n\n    \n        \n\n        \n", "\nname1 = input()\nname2 = input()\nfaults = int(input())\n\ns1 = [0] * 100\ns2 = [0] * 100\n\nfor i in range(faults):\n    time, t, m, card = input().split()\n    time = int(time)\n    m = int(m)\n    s = s1 if t == 'h' else s2\n\n    if card == 'y':\n        if s[m] == 1:\n            print(name1 if t == 'h' else name2, m, time)\n        s[m] += 1\n    elif s[m] < 2:\n        print(name1 if t == 'h' else name2, m, time)\n        s[m] += 2", "import collections\n\na_name = input()\nb_name = input()\nn = int(input())\nplayers = [collections.Counter() for i in range(2)]\nfor i in range(n):\n    t, team, player, color = input().split()\n    team = 0 if team == 'h' else 1\n    player = int(player)\n    if color == 'y' and players[team][player] == 0:\n        players[team][player] = 1\n    elif color == 'r' and 0 <= players[team][player] <= 1 or players[team][player] == 1:\n        players[team][player] = 2\n        print(a_name if team == 0 else b_name, player, t)\n\n", "__author__ = 'Rakshak.R.Hegde'\nteams = dict(h=input(), a=input())\nn = int(input())\nfouls = {}\nwhile n:\n    n -= 1\n    details = input().split()\n    player = details[1] + details[2]\n    foulsByM = fouls.get(player, 0) + 1\n    fouls[player] = foulsByM\n    if details[3] == 'r' and foulsByM <= 2:\n        fouls[player] = 3\n        print(teams[details[1]], details[2], details[0])\n    elif foulsByM == 2:\n            print(teams[details[1]], details[2], details[0])", "home, away, n = input(), input(), int(input())\n\ncards = {'h': {}, 'a': {}}\nans = [[] for i in range(91)]\n\nfor i in range(n):\n    inf = input().split()\n    if (not inf[2] in cards[inf[1]]):\n        cards[inf[1]][inf[2]] = inf[3]\n        if (inf[3] == 'r'):\n            ans[int(inf[0])] = [inf[1], inf[2]]\n    elif (cards[inf[1]][inf[2]] == 'y'):\n        cards[inf[1]][inf[2]] = 'r'\n        ans[int(inf[0])] = [inf[1], inf[2]]\n\nfor i in range(1, 91):\n        if (ans[i]):\n            print(home if ans[i][0] == 'h' else away, ans[i][1], i)\n", "from collections import defaultdict\n\n\ndef main():\n    ha = {'h': input().strip(), 'a': input().strip()}\n    n = int(input().strip())\n    d = defaultdict(list)\n    for _ in range(n):\n        t, a, player, card = input().strip().split()\n        d[' '.join((ha[a], player))].append((int(t), {'y': 1, 'r': 2}[card]))\n    res = []\n    for k, l in d.items():\n        l.sort()\n        tot = 0\n        for t, x in l:\n            tot += x\n            if tot > 1:\n                res.append((t, k))\n                break\n    res.sort()\n    for t, k in res:\n        print(k, t)\n\n\nmain()", "teamname = []\nteamname.append(input().strip())\nteamname.append(input().strip())\n\nn = int(input())\nfoul = [[0 for m in range(100)] for i in range(2)]\n\nfor i in range(n):\n    info = input().split()\n    t = int(info[0])\n    team = info[1]\n    m = int(info[2])\n    card = info[3]\n\n    if team=='h': td = 0\n    else: td = 1\n    \n    if foul[td][m]>=2: continue\n    if card=='y': foul[td][m] += 1\n    else: foul[td][m] += 2\n    if foul[td][m]>=2:\n        print('{0} {1} {2}'.format(teamname[td], m, t))\n\n    \n        \n        \n\n", "h = input()\na = input()\nn = int(input())\n\ndic = {}\n\nwhile n > 0:\n    n -= 1\n    line = input().split()\n    t = line[0]\n    m = 0\n    if line[1].startswith('a'):\n        m += 100\n    m += int(line[2])\n    f = 1\n    if line[3].startswith('r'):\n        f += 1\n    give_red = False\n    if m in list(dic.keys()):\n        if dic[m] < 2:\n            give_red = True\n        dic[m] += f\n    else:\n        dic[m] = f\n        if f > 1:\n            give_red = True\n\n    if give_red:\n        line = ' ' + t\n        if m > 100:\n            line = a + ' ' + str(m - 100) + line\n        else:\n            line = h + ' ' + str(m) + line\n        print(line)\n    \n    \n", "G = {}\nG['h'] = input()\nG['a'] = input()\nn = int(input())\n\nM = {}\n\nfor i in range(n):\n  [t,zn,gra,kartka] = input().split(\" \")\n  t = int(t)\n  gra = int(gra)\n  if (zn,gra) not in M:\n      M[(zn,gra)] = 0\n  if(M[(zn,gra)]>=2):\n      continue\n  if(kartka==\"y\"):\n      M[(zn,gra)] += 1\n  else:\n      M[(zn,gra)] += 2\n  if(M[(zn,gra)]>=2):\n      print(G[zn],gra,t)\n", "from collections import defaultdict\nn1, n2 = input(), input()\nn = int(input())\n#mp = defaultdict(list)\nmp = [[0 for i in range(100)], [0 for i in range(100)]]\n\nfor i in range(n):\n    line = input().split()\n    t = int(line[0])\n    m = int(line[2])\n    if line[1] == 'h':\n        mp[0][m] += 1\n        if line[3] == 'r':\n            \n            if mp[0][m] < 3:\n                print(n1, m, t)\n            mp[0][m] = 3\n            continue\n        if mp[0][m] == 2:\n            print(n1, m, t)\n            mp[0][m] = 3\n    else:\n        mp[1][m] += 1\n        if line[3] == 'r':\n            if mp[1][m] < 3:\n                print(n2, m, t)\n            mp[1][m] = 3\n            continue\n        if mp[1][m] == 2:\n            print(n2, m, t)\n            mp[1][m] = 3\n", "homename= input()\nawayname= input()\nfouls= int(input())\n\na= []\nb=[]\nfor foul in range(fouls):\n    #print(foul)\n    #print(\"hello\")\n    data= input().split() \n    #print(data)  \n    if data[3]== \"r\":\n        for j in range(len(b)):\n            if b[j][1:3]== data[1:3]:\n                break\n        else:\n            if data[1]== \"h\":\n                print(\" \".join([homename, data[2], data[0]]))\n            else:\n                print(\" \".join([awayname, data[2], data[0]]))\n        b.append(data)\n    else:\n        #print(\"Hell\")\n        \n        for i in range(len(a)):\n            #print(a[i][1:], data[1:])\n            if a[i][1:]== data[1:]:\n                if data[1]== \"h\":\n                    print(\" \".join([homename, data[2], data[0]]))\n                else:\n                    print(\" \".join([awayname, data[2], data[0]]))\n                b.append(a[i])\n                a.remove(a[i])\n                \n                \n                break\n                \n        else:\n            for j in range(len(b)):\n                if b[j][1:3]== data[1:3]:\n                    break\n            else:\n                a.append(data)\n            \n    #print(a)\n", "I   = lambda : input()\nIMI = lambda : map(int, input().split())\nP   = lambda *l : print(*l)\n\nteam1 = I()\nteam2 = I()\nn = int(I())\n\nEVENTS = [list(I().split()) for i in range(n)]\n\nres_team1 = [0] * 100\nres_team2 = [0] * 100\n\nres = []\nfor e in EVENTS:\n    if e[1] == 'h':\n        if e[3] == 'y':\n            if res_team1 != 1:\n                res_team1[int(e[2])] += 1\n        else:\n            if res_team1 != 1:\n                res_team1[int(e[2])] += 2\n        if res_team1[int(e[2])] >= 2:\n            res_team1[int(e[2])] = -100000\n            print(team1, e[2], e[0])\n    else:\n        if e[3] == 'y':\n            if res_team2 != 1:\n                res_team2[int(e[2])] += 1\n        else:\n            if res_team2 != 1:\n                res_team2[int(e[2])] += 2\n        if res_team2[int(e[2])] >= 2:\n            res_team2[int(e[2])] = -100000\n            print(team2, e[2], e[0])\n", "team1 = input()\nteam2 = input()\nfouls = int(input())\n\nwarn1 = [False] * 100\nwarn2 = [False] * 100\nout1 = [False] * 100\nout2 = [False] * 100\n\nwarns = []\n\nfor i in range(fouls):\n    a, b, c, d = list(map(str, input().split(' ')))\n    a, c = int(a), int(c)\n    if b == 'a' and d == 'r' and out2[c] == False:\n        warns.append([team2, c, a])\n        out2[c] = True\n    elif b == 'h' and d == 'r' and out1[c] == False:\n        warns.append([team1, c, a])\n        out1[c] = True\n    elif b == 'a' and d == 'y' and warn2[c] and out2[c] == False:\n        warns.append([team2, c, a])\n        out2[c] = True\n    elif b == 'a' and d == 'y' and not warn2[c]:\n        warn2[c] = True\n    elif b == 'h' and d == 'y' and warn1[c] and out1[c] == False:\n        warns.append([team1, c, a])\n        out1[c] = True\n    elif b == 'h' and d == 'y' and not warn1[c]:\n        warn1[c] = True\nwarns.sort(key = lambda x:x[2])\nfor a in warns:\n    print(' '.join([str(x) for x in a]))\n", "h = input()\na = input()\nn = int(input())\nt = []\nteam = []\nm = []\ncard = []\nvisits = []\nx = []\ny = []\nz = []\ndef alinput(x):\n    x = x.split(' ')\n    x[0] = int(x[0])\n    x[2] = (x[2])\n    t.append(x[0])\n    if x[1] == 'a' :\n        x[1] = a\n    else :\n        x[1] = h\n    team.append(x[1])\n    m.append(x[2])\n    card.append(x[3])\n    return (t, m, team, card)\nfor i in range (0, n):\n    alinput(x=input ())\n\ndef check(i):\n    for l in range (0, len(visits)):\n            if(visits[l] == (m[i] + team[i])):\n                return False\n    return True\n\n\nfor i in range (0, n):\n    if(check(i)):\n        if card [i] == 'r':\n            x.append(team[i])\n            y.append(m[i])\n            z.append(t[i])\n            visits.append(m[i] + team[i])\n        elif(card[i] == 'y'):\n            for j in range (i + 1, n):\n                if m[i] == m[j] and (team [i] == team [j]) and (card[j] == 'y'):\n                    x.append(team[i])\n                    y.append(m[i])\n                    z.append(t[j])\n                    visits.append(m[j] + team[j])\n                    break\n                \nfor i in range(0, len(x) ):\n    for j in range(i, len(x)):\n        if(z[j] < z[i]):\n            z[j], z[i] = z[i], z[j]\n            x[j], x[i] = x[i], x[j]\n            y[j], y[i] = y[i], y[j]\n\nfor i in range(0, len(x)):\n    print(x[i] + ' ' + y[i] + ' ' + str(z[i]))", "s1=input()\ns2=input()\nL={}\nL['h']=s1\nL['a']=s2\nn=int(input())\nD={}\nF={}\nfor i in range(n):\n    a=input().split()\n    m=int(a[0])\n    t=L[a[1]]\n    num=int(a[2])\n    c=a[3]\n    if((t,num) in D):\n        continue\n    if(c=='r' or (c=='y' and ((t,num) in F))):\n        D[(t,num)]=1\n        print(t,num,m)\n    else:\n        F[(t,num)]=1", "s1 = input()\ns2 = input()\nn = int(input())\na = []\nfor _ in range(n):\n    t, u, v, w = input().split()\n    a.append((int(t), u, int(v), w))\na.sort()\nxs = set()\nys = set()\nfor t, u, v, w in a:\n    if (u, v) in ys:\n        continue\n    if w == 'y':\n        if (u, v) in xs:\n            ys.add((u, v))\n            print(s1 if u == 'h' else s2, v, t)\n        else:\n            xs.add((u, v))\n    else:\n        ys.add((u, v))\n        print(s1 if u == 'h' else s2, v, t)\n        \n", "team_one = input()\nteam_two = input()\nn = int(input())\npts_one = [0 for i in range(100)]\npts_two = [0 for i in range(100)]\nfor i in range(n):\n\tline = input()\n\tt, team, m, card = line.split()\n\tt = int(t)\n\tm = int(m)\n\tfault = 0\n\tif card == 'y':\n\t\tfault = 1\n\telse: fault = 2\n\tif team == 'h':\n\t\tpts_one[m] += fault\n\t\tif pts_one[m] == 2 or (pts_one[m] == 3 and fault == 2):\n\t\t\tprint(team_one, m, t)\n\telif team == 'a':\n\t\tpts_two[m] += fault\n\t\tif pts_two[m] == 2 or (pts_two[m] == 3 and fault == 2):\n\t\t\tprint(team_two, m, t)\n"]