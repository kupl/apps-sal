["from sys import stdin\n\n\nn, k = list(map(int, input().split()))\nour = list(map(int, input().split()))\ncap = set(map(int, input().split()))\nres = 0\nsum_b = sum(our)\nfor elem in cap:\n    sum_b -= our[elem - 1]\n    res += sum_b * our[elem - 1]\nfor i in range(len(our)):\n    if (i + 1) not in cap and (i + 1) % n + 1 not in cap:\n        res += our[i] * our[(i + 1) % n]\nprint(res)\n", "n, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\ncap = list(map(int, input().split()))\n\nans = 0\nSUM = 0\nFRE = [0] * n\nfor i in range(k):\n    cap[i] -= 1\n    SUM += c[cap[i]]\n    FRE[cap[i]] = 1\n\ntot = sum(c)\n\nfor i in range(n):\n    if FRE[i] == 0:\n        if FRE[(i + n - 1) % n] == 0:\n            ans += c[i] * c[(i + n - 1) % n]\n        if FRE[(i + n + 1) % n] == 0:\n            ans += c[i] * c[(i + n + 1) % n]\n        ans += c[i] * SUM\n    else:\n        ans += c[i] * (tot - c[i])\n\nprint(ans >> 1)\n    \n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nb=set(map(int,input().split()))\nt=0\np=0\nq=0\ns=0\nfor i, x in enumerate(a):\n    if i+1 in b:\n        t += x*s\n        p += x - q\n        q = 0\n    else:\n        t += x*p\n        p += x - q\n        q = x\n    s += x\nif n not in b and 1 not in b:\n    t += a[-1]*a[0]\nprint(t)\n", "n, k = [int(i) for i in input().split()]\ns = [[int(i), 0] for i in input().split()]\nc = [int(i) for i in input().split()]\nfor i in c:\n\ts[i-1][1] = 1\na = 0\nfor i in s:\n\ta+=i[0]\nans = 0\nfor i in range(n-1):\n\tif s[i][1]:\n\t\ta-=s[i][0]\n\t\tans += s[i][0]*(a)\n\telse:\n\t\tif not s[i+1][1]:\n\t\t\tans+=s[i][0]*s[i+1][0]\nif s[n-1][1]:\n\ta-=s[n-1][0]\n\tans += s[n-1][0]*(a)\nelse:\n\tif not s[0][1]:\n\t\tans+=s[n-1][0]*s[0][0]\nprint(ans)\n", "n, m = list(map(int, input().split(' ')))\nc = list(map(int, input().split(' ')))\nans = 0\nfor i in range(n - 1):\n    ans += c[i] * c[i + 1]\nans += c[0] * c[n - 1]\ns = sum(c)\n\nk = list(map(int, input().split(' ')))\nv = [0] * n\nfor i in k:\n    if v[i - 1]:\n        continue\n    v[i - 1] = 1\n    s -= c[i - 1]\n    ans += s * c[(i - 1 + n) % n]\n    if not v[(i - 2 + n) % n]:\n        ans -= c[i - 1] * c[(i - 2 + n) % n]\n    if not v[i % n]:\n        ans -= c[i - 1] * c[i % n]\n\nprint(ans)\n", "n,k=input().split()\nn,k=int(n),int(k)\nbeaut=[]\nans=0\nsum=0\ncap=[0 for i in range(n)]\nbeaut=[int(i) for i in input().split()]\nv=[int(i) for i in input().split()]\nfor i in range(n):\n\tsum=sum+beaut[i]\nfor i in range(k):\n\tcap[v[i]-1]=1\n\nfor i in range(n):\n\tif(cap[i]==1):\n\t\tsum=sum-beaut[i]\n\t\tans=ans+beaut[i]*sum\n\nfor i in range(n):\n\tif(cap[i]==0):\n\t\tif(cap[(i+1)%n]==0):\n\t\t\tans=ans+beaut[i]*beaut[(i+1)%n]\nprint(ans)", "n, k = map(int, input().split())\nprices = list(map(int, input().split()))\nst = list(map(int, input().split()))\nfor i in range(k):\n    st[i] -= 1\nans = 0\nused = 0\nuseds = set()\ns = sum(prices)\nfor i in range(n):\n    ans += prices[i] * prices[i - 1]\nfor i in range(k):\n    ans += s * prices[st[i]] - prices[st[i]] * used\n    ans -= prices[st[i]] * (prices[st[i]] + prices[st[i] - 1] + prices[(st[i] + 1) % n])\n    if (st[i] - 1) % n in useds:\n        ans += prices[st[i]] * prices[st[i] - 1]\n    if (st[i] + 1) % n in useds:\n        ans += prices[st[i]] * prices[(st[i] + 1) % n]    \n    used += prices[st[i]]\n    useds.add(st[i])\nprint(ans)", "n, m = list(map(int,input().split()))\ncost = list(map(int,input().split()))\niscapi = [False]*n\ncapi = list([int(x)-1 for x in input().split()])\n#print(capi)\nfor i in capi:\n    iscapi[i]  = True\ntot = 0\nsumi = 0\nfor i in range(0,n):\n    if not iscapi[i] and not iscapi[(i+1)%n]:\n        tot += cost[i]*cost[(i+1)%n]\n#print(tot)\n\nprice = [cost[i] for i in capi]\n#print(price)\nfor i in range(m-2,-1,-1):\n    price[i] += price[i+1]\n#print(price)\nfor i in range(m-1):\n    tot += cost[capi[i]]*price[i+1]\n#print(tot)\n\nfor i in range(n):\n    if not iscapi[i]:\n        sumi += cost[i]\n#print(sumi)\nfor i in capi:\n    tot += cost[i]*sumi\nprint(tot)\n    \n\n    \n", "n, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\ncapitals = set([int(x) - 1 for x in input().split()])\n\nr = c[0] * c[-1]\n\nfor i in range(n-1):\n    r += c[i] * c[i+1]\n\nc_sum = sum(c)\n\nfor i in capitals:\n    k = c_sum - c[i] - c[(i-1)%n]\n    if (i+1)%n not in capitals:\n        k -= c[(i+1)%n]\n    r += c[i] * k\n    c_sum -= c[i]\n\nprint(r)\n", "import math\n\nN, K = [int(x) for x in input().split()]\n\nres = 0\nsum = 0\n\narr = [int(x) for x in input().split()]\narrK = [int(x) - 1 for x in input().split()]\n\nfor i in range(0, N):\n    res += arr[i] * arr[i - 1]\n    sum += arr[i]\n\ndictU = {}\nused = 0\nfor i in arrK:\n    cur = i\n    if cur == 0:\n        pre = N-1\n    else:\n        pre = cur - 1\n    if cur == N-1:\n        next = 0\n    else:\n        next = cur + 1\n    tmp = 0\n    if pre in dictU:\n        tmp += arr[pre]\n    if next in dictU:\n        tmp += arr[next]\n\n    test = arr[cur] * (sum - arr[cur] - arr[pre] - arr[next] - used + tmp)\n    res += test\n    dictU[cur] = True\n    #print(res, test, cur)\n    used += arr[cur]\n\nprint(res)\n\n\n\n\n\n\n\n\n", "n,k = list(map(int,input().split()))\nci = list(map(int,input().split()))\nidi = list(map(int,input().split()))\nidi += [n+1]\nnum3 = sum(ci)\nnum = 0\nnum2 = 0\nans = 0\nnum4 = 0\nif idi[num] == 1:\n    num += 1\n    num2 += ci[0]\n    ans += (num3-num2)*ci[0]\n    num4 = 0\nelse:\n    ans += ci[1]*ci[0]\n    num4 = 1\nfor i in range(2,n):\n    if idi[num] == i:\n        num2 += ci[i-1]\n        ans += (num3-num2-ci[i-2]*num4)*ci[i-1]\n        num += 1\n        num4 = 0\n    else:\n        ans += ci[i]*ci[i-1]\n        num4 = 1\nif idi[k-1] == n:\n        num2 += ci[n-1]\n        ans += (num3-num2-ci[n-2]*num4)*ci[n-1]\n        num += 1\nif idi[0] != 1 and idi[k-1] != n:\n    ans += ci[n-1] * ci[0]\nprint(ans)\n", "t = input\np = print\nr = range\nn, k = map(int, t().split())\ncities_beauty = list(map(int, t().split()))\ncapital = set(map(int, t().split()))\ncities = set([i for i in r(1, n + 1)])\ncities = cities ^ capital\n\nans = 0\ncity_sum = 0\nfor city in cities:\n    if city == 1 and n in cities:\n        ans += (cities_beauty[0] * cities_beauty[-1])\n    if (city + 1) in cities and city != n:\n        ans += (cities_beauty[city - 1] * cities_beauty[city])\n    city_sum += cities_beauty[city - 1]\n\ncap_sum = 0\nfor cap in capital:\n    ans += cities_beauty[cap - 1] * city_sum\n    cap_sum += cities_beauty[cap - 1]\n\nfor cap in capital:\n    cap_sum -= cities_beauty[cap - 1]\n    ans += cities_beauty[cap - 1] * cap_sum\n\np(ans)\n", "n,m = map(int,input().split())\na = list(map(int,input().split()))\nc = list(map(int,input().split()))\ncap = [0]*(n+1)\nfor i in c:\n    cap[i-1] = 1\nans = 0\ns = sum(a)\nfor i in range(len(a)-1):\n    if cap[i]==1:\n        s -= a[i]\n        ans += s*a[i]\n        #print(\"s :\", s)\n        #print(\"a[i] :\", a[i])\n    elif cap[i] ==0 and cap[i+1] == 0:\n        #print(\"a[i] :\",a[i])\n        #print(\"a[i+1] :\",a[i+1])\n        ans += a[i] * a[i+1]\n\n#print(cap)\nif cap[n-1] == 1:\n    s -= a[-1]\n    ans += s*a[-1]\n    #print(\"s :\",s)\n    #print(\"a[i] :\",a[-1])\nif cap[0] == 0 and cap[n-1]==0:\n    ans += a[0] * a[-1]\n    print(ans)\nelse:\n    print(ans)", "n, k = list(map(int, str.split(input())))\ncities = tuple(map(int, str.split(input())))\ncapitales = set([int(s) - 1 for s in str.split(input())])\n\ntotal_weight = sum(cities)\ncapitales_weight = sum(map(cities.__getitem__, capitales))\nweight = 0\nfor i in range(n):\n\n    if i in capitales:\n\n        sub_weight = total_weight - capitales_weight\n        next_city = (i + 1) % n\n        if next_city not in capitales:\n\n            sub_weight -= cities[next_city]\n\n    else:\n\n        sub_weight = cities[(i - 1) % n]\n\n    weight += sub_weight * cities[i]\n\npast_sub_weight = 0\nfor i in sorted(capitales):\n\n    weight += past_sub_weight * cities[i]\n    past_sub_weight += cities[i]\n\nprint(weight)\n", "n, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = set(map(int, input().split()))\n\ns = 0\ns0 = sum(c)\n\nfor i in d:\n    s0 -= c[i - 1]\n    s += s0 * c[i - 1]\n\nfor i in range(n):\n    if i + 1 not in d and (i + 1) % n + 1 not in d:\n        s += c[i] * c[(i + 1) % n]\n\nprint(s)\n", "n, k = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = set(map(int, input().split()))\n\ns = 0\ns0 = sum(c)\n\nfor i in d:\n    s0 -= c[i - 1]\n    s += c[i - 1] * s0\n\nfor i in range(n):\n    if i + 1 not in d and (i + 1) % n + 1 not in d:\n        s += c[i] * c[(i + 1) % n]\n\nprint(s)\n", "n, k = map(int, input().split())\nC = [0] + list(map(int, input().split()))\nK = set(map(int, input().split()))\n\nF = [0] * (n + 1)\nG = [0] * (n + 2)\n\nfor i in range(1, n + 1):\n   F[i] = F[i-1] + C[i]\n   if i in K:\n      G[i] = G[i - 1]\n   else:\n      G[i] = G[i-1] + C[i]\n\n#print(F)\n#print(G)\n\nsumma = 0\nfor i in range(1, n + 1):\n   if i in K:\n      summa += G[i-2] * C[i]\n      summa += (F[n] - F[i ]) * C[i]\n      #print(i, G[i-2] * C[i], (F[n] - F[i ]) * C[i])\n\n   elif i < n:\n      summa += C[i] * C[i + 1] \n\n   elif i == n and 1 not in K:\n      summa += C[1] * C[i]\n\n \n   \nprint(summa)", "def main():\n    n,k = map(int, input().split())\n    beauty= list(map(int, input().split()))\n    capitals= set(map(int, input().split()))\n    result = balans = 0\n    for i in range(n):      \n        if ((i+1) not in capitals) and ( (i + 1) % n) + 1 not in capitals:\n            balans = beauty[i]*beauty[(i+1)%n]\n            result+= balans\n    balans= sum(beauty)\n    for i in capitals:\n        balans-=beauty[i-1]\n        result+=balans*beauty[i-1]\n    print (result)\n        \nmain()", "n,k=list(map(int,input().split()))\nc=list(map(int,input().split()))\ns=set(map(int,input().split()))\nsust=sum(c)\nsu=0\nfor i in s:\n    sust-=c[i-1]\n    su+=c[i-1]*sust\nfor i in range(n):\n    if (i+1 not in s) and ((i+1)%n+1 not in s):\n        su+=c[i]*c[(i+1)%n]\nprint(su)\n", "n, k = map(int, input().split())\ncost = [0] + list(map(int, input().split()))\ncapitals = set(map(int, input().split()))\n\ntown_sum = [0] * (n + 1)\nno_cap_sum = [0] * (n + 2)\n\nfor i in range(1, n + 1):\n    town_sum[i] = town_sum[i - 1] + cost[i]\n    if i in capitals:\n        no_cap_sum[i] = no_cap_sum[i - 1]\n    else:\n        no_cap_sum[i] = no_cap_sum[i - 1] + cost[i]\n      \nans = 0\n\nfor i in range(1, n + 1):\n    if i in capitals:\n        ans += (town_sum[n] - town_sum[i]) * cost[i]\n        ans += no_cap_sum[i - 2] * cost[i]\n        \n    elif i < n:\n        ans += cost[i] * cost[i + 1]\n        \n    elif i == n and 1 not in capitals:\n        ans += cost[1] * cost[i]\n        \nprint(ans)", "\n\nn, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\ncapitals = set([int(x) - 1 for x in input().split()])\n\nr = c[0] * c[-1]\n\nfor i in range(n-1):\n    r += c[i] * c[i+1]\n\nc_sum = sum(c)\n\nfor i in capitals:\n    k = c_sum - c[i] - c[(i-1)%n]\n    if (i+1)%n not in capitals:\n        k -= c[(i+1)%n]\n    r += c[i] * k\n    c_sum -= c[i]\n\nprint(r)", "\n\nn, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\ncapitals = set([int(x) - 1 for x in input().split()])\n\nr = c[0] * c[-1]\n\nfor i in range(n-1):\n    r += c[i] * c[i+1]\n\nc_sum = sum(c)\n\nfor i in capitals:\n    k = c_sum - c[i] - c[(i-1)%n]\n    if (i+1)%n not in capitals:\n        k -= c[(i+1)%n]\n    r += c[i] * k\n    c_sum -= c[i]\n\nprint(r)", "n, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\ncapitals = set([int(x) - 1 for x in input().split()])\n\nr = c[0] * c[-1]\n\nfor i in range(n-1):\n    r += c[i] * c[i+1]\n\nc_sum = sum(c)\n\nfor i in capitals:\n    k = c_sum - c[i] - c[(i-1)%n]\n    if (i+1)%n not in capitals:\n        k -= c[(i+1)%n]\n    r += c[i] * k\n    c_sum -= c[i]\n\nprint(r)", "n, k = map(int, input().split())\nc = list(map(int, input().split()))\nv = c[0] * c[n - 1] + sum(c[i] * c[i + 1] for i in range(n - 1))\ns, ss, cs = set(), 0, sum(c)\nfor k in map(int, input().split()):\n    a, b, x = n if k == 1 else k - 1, 1 if k == n else k + 1, 0\n    if a not in s:\n        x += c[a - 1]\n    if b not in s:\n        x += c[b - 1]\n    v += c[k - 1] * (cs - c[k - 1] - ss - x)\n    s.add(k)\n    ss += c[k - 1]\nprint(v)", "n, k = [int(x) for x in input().split()]\nc = [int(x) for x in input().split()]\nids = [(int(x)-1) for x in input().split()]\n\ns = sum(c)\nans = 0\nfor i in range(n):\n  ans += (c[i] * c[(i+1)%n])\nfor i in range(k):\n  if (abs(ids[i] - ids[(i+1)%k]) == 1) or (ids[i] == n-1 and ids[0] == 0):\n    ans += c[ids[i]]*c[ids[(i+1)%k]]\ntemp = 0\nfor i in range(k):\n  ans += c[ids[i]] * (s - c[(ids[i]-1)%n] - c[(ids[i]+1)%n] - c[ids[i]])\n  ans -= c[ids[i]]*temp\n  temp += c[ids[i]]\n  \n\nprint(repr(ans))\n"]