["h, w = list(map(int, input().split()))\nA = []\n\nfor i in range(h):\n    line = list(map(int, input().split()))\n    A.append(line)\n\nfor i in range(h):\n    line = list(map(int, input().split()))\n    for j, num in enumerate(line):\n        A[i][j] = abs(A[i][j] - num)\n\nconst = 6400\nmask = 1 << const\nDP = [0]*w\nDP[0] = mask >> A[0][0]\n\n\ndef slide_down(y, x):\n    bit = DP[x]\n    delta = A[y+1][x]\n    new1 = bit << delta\n    new2 = bit >> delta\n    DP[x] = new1 | new2\n\n\ndef slide_right(y, x):\n    bit = DP[x]\n    delta = A[y][x+1]\n    new1 = bit << delta\n    new2 = bit >> delta\n    DP[x+1] |= new1 | new2\n\n\nfor y in range(h):\n    for x in range(w):\n        if x < w-1:\n            slide_right(y, x)\n        if y < h-1:\n            slide_down(y, x)\n\npattern = DP[w-1]\nfor i in range(81):\n    if (pattern >> const+i) & 1 or (pattern >> const-i) & 1:\n        print(i)\n        return\n", "h,w=list(map(int,input().split()))\na=[list(map(int,input().split()))for _ in range(h)]\nb=[list(map(int,input().split()))for _ in range(h)]\nc=[[abs(a[i][j]-b[i][j]) for j in range(w)]for i in range(h)]\ndp=[[0]*(w+1)for _ in range(h+1)]\ndp[0][1]=1<<12800\nfor i in range(1,h+1):\n    for j in range(1,w+1):\n        t=c[i-1][j-1]\n        dp[i][j]=(dp[i][j-1]<<t)|(dp[i][j-1]>>t)|(dp[i-1][j]<<t)|(dp[i-1][j]>>t)\nans=10**20\nfor i in range(25601):\n    if dp[h][w]&(1<<i):\n        ans=min(ans,abs(12800-i))\nprint(ans)\n", "h,w = map(int,input().split())\n\nbitdp = [[0 for j in range(w)] for i in range(h)]\nal = []\nbl = []\nfor _ in range(h):\n   a = list(map(int,input().split()))\n   al.append(a)\nfor _ in range(h):\n   b = list(map(int,input().split()))\n   bl.append(b)\nabl = [[] for i in range(h)]\nfor i in range(h):\n   for j in range(w):\n      abl[i].append(abs(al[i][j] - bl[i][j]))\n\nbitdp[0][0] = 1 << h*w+abl[0][0]\nfor i in range(h):\n   for j in range(w):\n      if j != w-1:\n         bitdp[i][j+1] |= bitdp[i][j] << abl[i][j+1] | bitdp[i][j] >> abl[i][j+1]\n      if i != h-1:\n         bitdp[i+1][j] |= bitdp[i][j] << abl[i+1][j] | bitdp[i][j] >> abl[i+1][j]\n\nans = []\nfor i in range(h*w*2+1):\n   if (bitdp[-1][-1] >> i & 1):\n      ans.append(abs(h*w-i))\n\nprint(min(ans))", "tdlist = lambda i, j, value=0: [[value] * j for _ in range(i)]\n\nh, w = list(map(int, input().split()))\nD = 160*80\nD2 = D*2+1\n\ndiff = [list(map(int, input().split())) for _ in range(h)]\nfor i in range(h):\n    for j, b in enumerate(list(map(int, input().split()))):\n        diff[i][j] = abs(diff[i][j] - b)\n\ndp = tdlist(h, w)\ndp[0][0] |= 1 << D+diff[0][0]\ndp[0][0] |= 1 << D-diff[0][0]\n\nfor i in range(h):\n    for j in range(w):\n        if j:\n            dp[i][j] |= dp[i][j-1] << diff[i][j]\n            dp[i][j] |= dp[i][j-1] >> diff[i][j]\n        if i:\n            dp[i][j] |= dp[i-1][j] << diff[i][j]\n            dp[i][j] |= dp[i-1][j] >> diff[i][j]\n\nans = float(\"inf\")\nfor i in range(D2):\n    if dp[h-1][w-1] >> i & 1:\n        ans = min(ans, abs(i-D))\nprint(ans)\n", "h, w = list(map(int, input().split()))\n\ndiffs = []\nfor y in range(h):\n    row = list(map(int, input().split()))\n    diffs.append(list(row))\n\nfor y in range(h):\n    row = list(map(int, input().split()))\n    for x, b in zip(list(range(w)), row):\n        diffs[y][x] = abs(diffs[y][x] - b)\n\nm = 80 * (h + w)\ndp = [[0 for j in range(w)] for k in range(h)]\nd = m - diffs[0][0]\ndp[0][0] = 1 << d\n\nfor y in range(h):\n    for x in range(w):\n        if x == y == 0:\n            continue\n        diff = diffs[y][x]\n        if y != 0:\n            dp[y][x] |= dp[y-1][x] << diff\n            dp[y][x] |= dp[y-1][x] >> diff\n        if x != 0:\n            dp[y][x] |= dp[y][x-1] << diff\n            dp[y][x] |= dp[y][x-1] >> diff\n\nend = bin(dp[-1][-1])[2:][::-1]  # reverse\n\ncandidates = [abs(i-m) for i, b in enumerate(end) if b == '1']\nans = min(candidates)\nprint(ans)\n", "def fold(x,m):\n    y = 0\n    for _ in range(m):\n        y |= x&1\n        y <<= 1\n        x >>= 1\n    return x|y\n\nlmi = lambda: list(map(int, input().split()))\n\nh,w = lmi()\na = [lmi() for _ in range(2*h)]\ng = [[abs(a[i][j] - a[i+h][j]) for j in range(w)] for i in range(h)]\nm = 12801\nmask = (1<<m) - 1\n\na = [0]*(w+1)\na[0] = 1\nfor i in range(h):\n  for j in range(w):\n    cur,par = g[i][j], a[j]|a[j-1]\n    a[j] = par<<cur&mask|fold(par,cur)\nv = a[-2]\nprint((v&-v).bit_length() - 1)", "H, W = map(int, input().split())\n\nA = []\nB = []\nabs_diff = [[0]*(W+1) for h in range(H+1)]\n\nfor h in range(H):\n  A.append(list(map(int, input().split())))\n  \nfor h in range(H):\n  B.append(list(map(int, input().split())))\n\nmax_diff = 0\nfor h in range(H):\n  for w in range(W):\n    d = abs(A[h][w] - B[h][w])\n    max_diff = max(max_diff, d)\n    abs_diff[h+1][w+1] = d\n\nbase = max_diff*(H + W)\ndp = [[0 for w in range(W+1)] for h in range(H+1)]\ndp[0][1] = dp[1][0] = 1 << base\nfor h in range(1, H+1):\n  for w in range(1, W+1):\n    dp[h][w] = (\n      (dp[h-1][w] << abs_diff[h][w]) | (dp[h-1][w] >> abs_diff[h][w]) \n      | (dp[h][w-1] << abs_diff[h][w]) | (dp[h][w-1] >> abs_diff[h][w]))\n\n\npositive = bin(dp[H][W] >> base)\nprint(positive[::-1].find('1'))", "H,W = map(int,input().split())\nA = [list(map(int,input().split())) for i in range(H)]\nB = [list(map(int,input().split())) for i in range(H)]\n\nC = [[] for i in range(H)]\nfor i,(arow,brow) in enumerate(zip(A,B)):\n    for a,b in zip(arow,brow):\n        d = abs(a-b)\n        C[i].append(d)\n\nofs = (H+W)*100\ndp = [0] * W\ndp[0] = (1<<ofs)\nfor i,crow in enumerate(C):\n    dp2 = [0] * W\n    for j,(c,d) in enumerate(zip(C[i],dp)):\n        dp2[j] |= (d<<c)\n        dp2[j] |= (d>>c)\n    for j,c in enumerate(C[i]):\n        if j==0: continue\n        dp2[j] |= (dp2[j-1]<<c)\n        dp2[j] |= (dp2[j-1]>>c)\n    dp = dp2\n\nans = ofs\nl = len(bin(dp[-1]))\nfor i in range(l):\n    if dp[-1] & (1<<i):\n        ans = min(ans, abs(i-ofs))\nprint(ans)", "# Atcoder Problem Solving\nH,W=map(int,input().split())\nc=[list(map(int,input().split())) for i in range(H)]\nb=[list(map(int,input().split())) for i in range(H)]\na=[[0 for i  in range(W)] for j in range(H)]\n\nfor i in range(H):\n    for j in range(W):\n        a[i][j]=abs(c[i][j]-b[i][j])\n        \ndp=[[0 for i in range(W)] for j in range(H)]\n\n# Bitset\u6f14\u7b97\n# \u7b54\u3048\u306f\u7d76\u5bfe\u5024\u304c\u7d76\u5bfe-80\u304b\u308980\u4ee5\u5185\u306b\u53ce\u307e\u308b\n\nX=3200\n\ndp[0][0]= (1<<(X+a[0][0]))  | (1<<(X-a[0][0]))\n# \u521d\u671f\u5316\u306e\u6761\u4ef6\n\nfor i in range(H):\n    for j in range(W):\n        if 0<=i<H and 0<=j+1<W:\n            dp[i][j+1]|=(dp[i][j]<<a[i][j+1])\n            dp[i][j+1]|=(dp[i][j]>>a[i][j+1]) \n            \n        if 0<=i+1<H and 0<=j<W:\n            dp[i+1][j]|=(dp[i][j]<<a[i+1][j])\n            dp[i+1][j]|=(dp[i][j]>>a[i+1][j])\n            \nA=str(bin(dp[H-1][W-1]))[::-1]\nL=len(A)\nans=3200\nfor i in range(L):\n    if A[i]==\"1\":\n        ans=min(ans,abs(i-X))\nprint(ans)", "def run():\n  ofs = 1000\n  H, W = map(int, input().split())\n  dp = [[0 for w in range(W)] for h in range(H)]\n  a = [list(map(int, input().split())) for i in range(H)]\n  b = [list(map(int, input().split())) for i in range(H)]\n  c = [[abs(a[i][j] - b[i][j]) for j in range(W)] for i in range(H)]\n  dp[0][0] = (1 << ofs + c[0][0]) | (1 << ofs - c[0][0])\n  for h in range(1, H):\n    dp[h][0] = (dp[h-1][0] << c[h][0]) | (dp[h-1][0] >> c[h][0])\n  for w in range(1, W):\n    dp[0][w] = (dp[0][w-1] << c[0][w]) | (dp[0][w-1] >> c[0][w])\n  for h in range(1, H):\n    for w in range(1, W):\n      v = c[h][w]\n      dp[h][w] = (dp[h-1][w] << v) | (dp[h-1][w] >> v)\n      dp[h][w] |= (dp[h][w-1] << v) | (dp[h][w-1] >> v)\n  s = list(bin(dp[-1][-1] >> ofs))\n  for i in range(len(s)):\n    if s[-1-i] == '1':\n      print(i)\n      break\n\ndef __starting_point():\n  run()\n__starting_point()", "H, W = map(int, input().split())\nAB = []\nmax_ab = 0\nfor i in range(H):\n  AB.append(list(map(int, input().split())))\n  max_ab = max(max_ab, max(AB[-1]))\n\nfor i in range(H):\n  AB[i] = [abs(AB[i][j] - int(b)) for j, b in enumerate(input().split())]\n\nbase = max_ab*(H + W)\ndp = [[1 << base for w in range(W)] for h in range(H)]\ndp[0][0] = (1 << base + AB[0][0]) | (1 << base - AB[0][0])\nfor h in range(1, H):\n  dp[h][0] = (dp[h-1][0] << AB[h][0]) | (dp[h-1][0] >> AB[h][0])\n\nfor w in range(1, W):\n  dp[0][w] = (dp[0][w-1] << AB[0][w]) | (dp[0][w-1] >> AB[0][w])\n\nfor h in range(1, H):\n  for w in range(1, W):\n    dp[h][w] = (\n      (dp[h-1][w] << AB[h][w]) | (dp[h-1][w] >> AB[h][w]) \n      | (dp[h][w-1] << AB[h][w]) | (dp[h][w-1] >> AB[h][w]))\n\npositive = bin(dp[H-1][W-1] >> base)\nprint(positive[::-1].find('1'))", "H, W = list(map(int, input().split()))\n\nA = [list(map(int, input().split())) for _ in range(H)]\nB = [list(map(int, input().split())) for _ in range(H)]\n\ndp = [[0] * (W + 1) for _ in range(H + 1)]\nF = 80 * 200 + 100\ndp[0][0] = (1 << F)\n\nfor h in range(H):\n    for w in range(W):\n        a = A[h][w]\n        b = B[h][w]\n        d = dp[h][w]\n        dp[h + 1][w] |= (d << abs(a - b)) | (d >> abs(a - b))\n        dp[h][w + 1] |= (d << abs(a - b)) | (d >> abs(a - b))\n\nres = dp[H][W - 1] | dp[H - 1][W]\nans = 10**18\nfor d in range(F * 2):\n    if (res & (1 << d)) != 0:\n        ans = min(ans, abs(d - F))\nprint(ans)\n", "import sys\nimport numpy as np\ninput = sys.stdin.readline\nh,w=[int(j) for j in input().split()]\na=[]\nb=[]\na=[[int(j) for j in input().split()] for i in range(h)]\nb=[[int(j) for j in input().split()] for i in range(h)]\nx=(h+w)*80\nl=2*x+1\ndp=[[0]*w for i in range(h)]\ndp[0][0]=np.zeros(l,np.bool)\nd=abs(a[0][0]-b[0][0])\ndp[0][0][x+d]=1\nfor i in range(h):\n    for j,(s,t) in enumerate(zip(a[i],b[i])):\n        if i==j==0:\n            continue\n        d=abs(s-t)\n        p=np.zeros(l,np.bool)\n        if i!=0:\n            p[d:]|=dp[i-1][j][:l-d]\n            p[:l-d]|=dp[i-1][j][d:]\n        if j!=0:\n            p[d:]|=dp[i][j-1][:l-d]\n            p[:l-d]|=dp[i][j-1][d:]\n        dp[i][j]=p\n\nans=np.abs(np.where(dp[-1][-1])[0]-x).min()\nprint(ans)\n\n\n\n\n\n\n\n", "import numpy as np\n\nH, W = list(map(int, input().split()))\nAs = [list(map(int, input().split())) for _ in range(H)]\nBs = [list(map(int, input().split())) for _ in range(H)]\n\nds = [[abs(A-B) for A, B in zip(row_A, row_B)] for row_A, row_B in zip(As, Bs)]\n\nsize = 100005\n\ndp = np.full((H, W, size), False)\ndp[0][0][ds[0][0]] = True\nfor i in range(H):\n    for j in range(W):\n        if i+1 < H:\n            d = ds[i+1][j]\n            dp[i+1][j][d:] = np.logical_or(dp[i][j][:size-d], dp[i+1][j][d:])\n            dp[i+1][j][:size-d] = np.logical_or(dp[i][j][d:], dp[i+1][j][:size-d])\n            dp[i+1][j][:d+1] = np.logical_or(dp[i][j][d::-1], dp[i+1][j][:d+1])\n        if j+1 < W:\n            d = ds[i][j+1]\n            dp[i][j+1][d:] = np.logical_or(dp[i][j][:size-d], dp[i][j+1][d:])\n            dp[i][j+1][:size-d] = np.logical_or(dp[i][j][d:], dp[i][j+1][:size-d])\n            dp[i][j+1][:d+1] = np.logical_or(dp[i][j][d::-1], dp[i][j+1][:d+1])\n\nprint((np.min(np.where(dp[-1][-1]))))\n", "def ints():\n  return [int(x) for x in input().split()]\ndef readi():\n  return int(input())\n\nH, W = ints()\nA = [ints() for _ in range(H)]\nB = [ints() for _ in range(H)]\nD = [[abs(A[h][w]-B[h][w]) for w in range(W)] for h in range(H)]\n\nmemo = {}\nmemo = {}\n\n\nN=80*60\nmemo[(0, 0)] = 1 << (D[0][0]+N)\n\nfor h in range(H):\n  for w in range(W):\n    if h==0 and w==0:\n      continue \n\n    d = D[h][w]\n    f = 0\n    if h>0:\n      s = memo[(h-1, w)]\n      f |= s<<d \n      f |= s>>d\n    if w>0:\n      s = memo[(h, w-1)]\n      f |= s<<d\n      f |= s>>d\n\n    memo[(h, w)] = f\n\ndef min_keta(n):\n  b = bin(n>>N)\n  for i in range(len(b)):\n    if b[-i-1]=='1':\n      return i\n\nprint((min_keta(memo[(H-1, W-1)])))\n", "import numpy as np\n\nH, W = list(map(int, input().split()))\nAs = [list(map(int, input().split())) for _ in range(H)]\nBs = [list(map(int, input().split())) for _ in range(H)]\n\nds = [[abs(A-B) for A, B in zip(row_A, row_B)] for row_A, row_B in zip(As, Bs)]\n\nsize = 10005\n\ndp = np.full((H, W, size), False)\ndp[0][0][ds[0][0]] = True\nfor i in range(H):\n    for j in range(W):\n        if i+1 < H:\n            d = ds[i+1][j]\n            dp[i+1][j][d:] = np.logical_or(dp[i][j][:size-d], dp[i+1][j][d:])\n            dp[i+1][j][:size-d] = np.logical_or(dp[i][j][d:], dp[i+1][j][:size-d])\n            dp[i+1][j][:d+1] = np.logical_or(dp[i][j][d::-1], dp[i+1][j][:d+1])\n        if j+1 < W:\n            d = ds[i][j+1]\n            dp[i][j+1][d:] = np.logical_or(dp[i][j][:size-d], dp[i][j+1][d:])\n            dp[i][j+1][:size-d] = np.logical_or(dp[i][j][d:], dp[i][j+1][:size-d])\n            dp[i][j+1][:d+1] = np.logical_or(dp[i][j][d::-1], dp[i][j+1][:d+1])\n\nprint((np.min(np.where(dp[-1][-1]))))\n", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = np.array([lr() for _ in range(H)])\nB = np.array([lr() for _ in range(H)])\ndiff = np.abs(A - B).tolist()\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[None] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\ndi = diff[0][0]\ndp[0][0][X+di] = 1; dp[0][0][X-di] = 1\nfor h in range(H):\n    for w in range(W):\n        if h == 0 and w == 0:\n            continue\n        di = diff[h][w]\n        x = np.zeros(L, np.bool)\n        if h > 0:\n            prev = dp[h-1][w]\n            x[di:] |= prev[:L-di]\n            x[:L-di] |= prev[di:]\n        if w > 0:\n            prev = dp[h][w-1]\n            x[di:] |= prev[:L-di]\n            x[:L-di] |= prev[di:]\n        dp[h][w] = x\n\ndp = dp[-1][-1][X:]\npossible = np.nonzero(dp)[0]\nanswer = possible.min()\nprint(answer)\n#\n", "import math\n\nh, w = map(int,input().split())\na = [list(map(int,input().split())) for i in range(h)]\nb = [list(map(int,input().split())) for i in range(h)]\n\ndiff = [[abs(x-y) for x,y in zip(ar,br)] for ar,br in zip (a,b)]\n\nM = 80*(h+w)\ndp = [[0 for j in range(w)] for i in range(h)]\ndp[0][0] = 1<<(diff[0][0]+M)\nfor i in range(h):\n    for j in range(w):\n        if i > 0:\n            dp[i][j] |= (dp[i-1][j]<<diff[i][j])|(dp[i-1][j]>>diff[i][j])\n        if j > 0:\n            dp[i][j] |= (dp[i][j-1]<<diff[i][j])|(dp[i][j-1]>>diff[i][j])\n        dp[i][j] &= (1<<(M*2))-1\nfor k in range(M):\n    if (dp[h-1][w-1]>>(k+M))&1 == 1:\n        print(k)\n        break", "import numpy as np\nH, W = map(int, input().split())\nred_map = np.array([input().split() for i in range(H)], dtype=\"int\")\nblue_map = np.array([input().split() for i in range(H)], dtype=\"int\")\nsub_map = abs(red_map - blue_map)\ndp = [[2020]*W for i in range(H)]\nmax_deviation = 2**(80*(H+W))\n\nfor i in range(H):\n  for j in range(W):\n    if not i and not j:\n      dp[i][j] = (max_deviation<<sub_map[i][j] | max_deviation>>sub_map[i][j])\n    if i > 0:\n      dp[i][j] |= (dp[i-1][j]<<sub_map[i][j] | dp[i-1][j]>>sub_map[i][j])\n    if j > 0:\n      dp[i][j] |= (dp[i][j-1]<<sub_map[i][j] | dp[i][j-1]>>sub_map[i][j])\n      \npre_ans = dp[H-1][W-1]>>80*(H+W)\npre_ans_bit = format(pre_ans&-pre_ans, \"b\")\nans = len(pre_ans_bit)-1\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\ndef solve():\n    maxV = 12800\n\n    H, W = list(map(int, input().split()))\n    Ass = [tuple(map(int, input().split())) for _ in range(H)]\n    Bss = [tuple(map(int, input().split())) for _ in range(H)]\n\n    dp = [[0]*(W) for _ in range(H)]\n    diff = abs(Ass[0][0] - Bss[0][0])\n    dp0 = 1<<maxV\n    dp[0][0] = (dp0<<diff) | (dp0>>diff)\n    for i in range(H):\n        for j in range(W):\n            diff = abs(Ass[i][j] - Bss[i][j])\n            if i > 0:\n                dp0 = dp[i-1][j]\n                dp[i][j] |= (dp0<<diff) | (dp0>>diff)\n            if j > 0:\n                dp0 = dp[i][j-1]\n                dp[i][j] |= (dp0<<diff) | (dp0>>diff)\n\n    ans = maxV\n    dpHW = dp[-1][-1]\n    for i in range(2*maxV+1):\n        if (dpHW>>i) & 1:\n            j = abs(i-maxV)\n            if j < ans:\n                ans = j\n\n    print(ans)\n\n\nsolve()\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    h,w = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(h)]\n    b = [list(map(int, input().split())) for _ in range(h)]\n    c = [[0]*w for _ in range(h)]\n    for i in range(h):\n        for j in range(w):\n            c[i][j] = abs(a[i][j] -b[i][j])\n\n    mid = 3200\n    dp = [[0]*w for _ in range(h)]\n    dp[0][0] = (1<<(mid+c[0][0])) | (1<<(mid-c[0][0]))\n    for x in range(h):\n        for y in range(w):\n            for dx, dy in [[0, 1], [1, 0]]:\n                nx = x + dx\n                ny = y + dy\n                if 0<=nx<h and 0<=ny<w:\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]<<c[nx][ny])\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]>>c[nx][ny])\n    \n    for i in range(mid+1):\n        if (dp[-1][-1]>>i) & 1:\n            res = mid - i\n\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\nimport sys\nINF = float(\"inf\")\n\n\ndef solve(H: int, W: int, A: \"List[List[int]]\", B: \"List[List[int]]\"):\n    base = [[abs(A[h][w]-B[h][w]) for w in range(W)] for h in range(H)]\n    mx = (1 << 12800) - 1\n    table = [[0]*W for _ in range(H)]\n    table[0][0] = (1 << (6400 + base[0][0])) | (1 << (6400-base[0][0]))\n    for h in range(H):\n        for w in range(W):\n            if h > 0:\n                table[h][w] |= (table[h-1][w] << base[h][w])\n                table[h][w] |= (table[h-1][w] >> base[h][w])\n            if w > 0:\n                table[h][w] |= (table[h][w-1] << base[h][w])\n                table[h][w] |= (table[h][w-1] >> base[h][w])\n            table[h][w] &= mx\n\n    m = INF\n    for j in range(12800):\n        i = (table[H-1][W-1] >> j) & 1\n        if i == 1:\n            m = min(m, abs(j-6400))\n    print(m)\n    # print(table[H-1])\n\n    return\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    H = int(next(tokens))  # type: int\n    W = int(next(tokens))  # type: int\n    A = [[int(next(tokens)) for _ in range(W)]\n         for _ in range(H)]  # type: \"List[List[int]]\"\n    B = [[int(next(tokens)) for _ in range(W)]\n         for _ in range(H)]  # type: \"List[List[int]]\"\n    solve(H, W, A, B)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n#input = sys.stdin.readline\n\ndef main():\n    inp = lambda: list(map(int, input().split())) \n    h,w=inp()\n    a=[inp() for _ in range(h)]\n    b=[inp() for _ in range(h)]\n    d=[[0]*w for _ in range(h)]\n    for i in range(h):\n        for j in range(w):\n            d[i][j]=abs(a[i][j]-b[i][j])\n    zero=80*(h+w)+2\n    dp=[[0]*w for _ in range(h)]\n    dp[0][0]=1<<(zero+d[0][0])|1<<(zero-d[0][0])\n    for i in range(h):\n        for j in range(w):\n            if i==0:\n                if j==0:\n                    continue\n                else:\n                    dp[i][j]=dp[i][j-1]<<d[i][j]|dp[i][j-1]>>d[i][j]\n            else:\n                if j==0:\n                    dp[i][j]=dp[i-1][j]<<d[i][j]|dp[i-1][j]>>d[i][j]\n                else:\n                    dp[i][j]=dp[i-1][j]<<d[i][j]|dp[i-1][j]>>d[i][j]\n                    dp[i][j]=dp[i][j]|(dp[i][j-1]<<d[i][j]|dp[i][j-1]>>d[i][j])\n    ans=dp[-1][-1]\n    for i in range(zero):\n        if ans>>(zero+i)&1 or ans>>(zero-i)&1:\n            print(i)\n            return\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = [lr() for _ in range(H)]\nB = [lr() for _ in range(H)]\ndiff = [[0] * W for _ in range(H)]\nfor i in range(H):\n    for j in range(W):\n        diff[i][j] = abs(A[i][j] - B[i][j])\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[None] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\ndp[0][0][X+diff[0][0]] = 1; dp[0][0][X-diff[0][0]] = 1 #\u975e\u8ca0\u6574\u6570\u306e\u307f\u3067\u3082\u826f\u3044\nfor h in range(H):\n    for w, di in enumerate(diff[h]):\n        if h == 0 and w == 0:\n            continue\n        x = np.zeros(L, np.bool)\n        if h > 0:\n            x[di:] |= dp[h-1][w][:L-di]\n            x[:L-di] |= dp[h-1][w][di:]\n        if w > 0:\n            x[di:] |= dp[h][w-1][:L-di]\n            x[:L-di] |= dp[h][w-1][di:]\n        dp[h][w] = x\n\ndp = dp[-1][-1]\npossible = np.where(dp)[0] - X\nanswer = np.abs(possible).min()\nprint(answer)\n# 07\n", "def main():\n    h,w=list(map(int,input().split()))\n    L=80*(h+w)+1\n    a=[list(map(int,input().split())) for i in range(h)]\n    b=[list(map(int,input().split())) for i in range(h)]\n\n\n    x=[[abs(a[i][j]-b[i][j]) for j in range(w)] for i in range(h)]\n    \n\n    L=12800\n    \n    state=[[0]*w for _ in range(h)]\n    delta=x[0][0]\n    state[0][0]=(2**L>>delta)|(2**L<<delta)\n\n    for j in range(1,w):\n        delta=x[0][j]\n        state[0][j]=(state[0][j-1]>>delta)|(state[0][j-1]<<delta)\n\n    for i in range(1,h):\n        delta=x[i][0]\n        state[i][0]=(state[i-1][0]>>delta)|(state[i-1][0]<<delta)\n\n    for i in range(1,h):\n        for j in range(1,w):\n            delta=x[i][j]\n            state[i][j]=(state[i][j-1]>>delta)|(state[i][j-1]<<delta)\n            state[i][j]|=(state[i-1][j]>>delta)|(state[i-1][j]<<delta)\n\n    \n    ans = 10**9\n    for i in range(L*2):\n        if state[h-1][w-1] & 1:\n            ans = min(ans,abs(i-L))\n        state[h-1][w-1]>>=1\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nh, w = list(map(int, input().split()))\na = [tuple(map(int, input().split())) for _ in range(h)]\nb = [tuple(map(int, input().split())) for _ in range(h)]\nc = [[abs(a[i][j] - b[i][j]) for j in range(w)] for i in range(h)]\n\nCONST = 80 * 80 * 2 + 100000\ndp = [[0] * w for _ in range(h)]\ndp[0][0] = 1 << (c[0][0] + CONST)\n\nfor i in range(h):\n    for j in range(w):\n        if i < h - 1:\n            dp[i + 1][j] |= (dp[i][j] << c[i + 1][j])\n            dp[i + 1][j] |= (dp[i][j] >> c[i + 1][j])\n        if j < w - 1:\n            dp[i][j + 1] |= (dp[i][j] << c[i][j + 1])\n            dp[i][j + 1] |= (dp[i][j] >> c[i][j + 1])\n\nfor k in range(CONST):\n    if dp[h - 1][w - 1] & (1 << (CONST + k)) != 0 or dp[h - 1][w - 1] & (\n            1 << (CONST - k)) != 0:\n        ans = k\n        break\n\nprint(ans)\n", "\nh,w = list(map(int, input().split( )))\na = []\nfor i in range(h):\n    ai = list(map(int, input().split( )))\n    a.append(ai)\nfor i in range(h):\n    bi = list(map(int, input().split( )))\n    for j in range(w):\n        a[i][j]-=bi[j]\n        a[i][j] = abs(a[i][j])\n###\u5dee\u306emax\u307e\u3067\u3092list\u3067\u78ba\u4fdd\u3059\u308b\u4ee3\u308f\u308a\u306b\u53ef\u80fd\u306a\u5024\u3092set\u3067\u4fdd\u6301\n###\u5024\u304c\u5c0f\u3055\u3044\u306e\u3067set\u304b\u3089bit\u3067\u4fdd\u6301\u306b\u5909\u66f4\ndp = [[0 for j in range(w)] for i in range(h)]\na2 = [a[i][j] for i in range(h) for j in range(w)]\nmxa = max(a2)\n###\u4e2d\u5fc3\u3092\u53d6\u308b\n###\u9593\u9055\u3048\u3084\u3059\u3044\u3057\u6700\u5927\u5024\u6c7a\u3081\u6253\u3061\u304b\ntmp=1<<mxa*(h+w)+10\n\ndp[0][0]|=tmp<<a[0][0]\ndp[0][0]|=tmp>>a[0][0]\n\nfor j in range(1,w):\n    dp[0][j]=dp[0][j-1]<<a[0][j]\n    dp[0][j]|=dp[0][j-1]>>a[0][j]\n\nfor i in range(1,h):\n    for j in range(w):###\u30eb\u30fc\u30d7\u4e00\u3064\u629c\u3051\u3066\u308b\u308fw\n        dp[i][j]=dp[i-1][j]<<a[i][j]\n        dp[i][j]|=dp[i-1][j]>>a[i][j]\n        if j:\n            dp[i][j]|=dp[i][j-1]<<a[i][j]\n            dp[i][j]|=dp[i][j-1]>>a[i][j]\n\ntmp1 = dp[h-1][w-1]\n\ntmp1>>=mxa*(h+w)+10\n\n###mxa=0\u3067range(0)\u306b\u306a\u308b\u5f0f\u3060\u3068\u7b54\u3048\u304c\u51fa\u306a\u3044\nfor k in range(mxa*(h+w)+10):\n    if tmp1&1:\n        print(k)\n        return\n    tmp1>>=1\n", "h, w= map(int, input().split())\nA = [list(map(int, input().split())) for _ in range(h)]\nB = [list(map(int, input().split())) for _ in range(h)]\n\nC = [[0]*w for _ in range(h)]\nfor i in range(h):\n    for j in range(w):\n        C[i][j] = abs(A[i][j]-B[i][j])\n\nimport numpy as np\nd = 80*(h+w-1)\nD = 2*d+1\ndp = [[0]*w for j in range(h)]\ndp[0][0] = np.zeros(D, np.bool)\ndp[0][0][d+C[0][0]] = 1\nfor i in range(h):\n    for j in range(w):\n        if i == 0 and j == 0:\n            continue\n        x = np.zeros(D, np.bool)\n        if i != 0:\n            x[C[i][j]:] |= dp[i-1][j][:D-C[i][j]]\n            x[:D-C[i][j]] |= dp[i-1][j][C[i][j]:]\n        if j != 0:\n            x[C[i][j]:] |= dp[i][j-1][:D-C[i][j]]\n            x[:D-C[i][j]] |= dp[i][j-1][C[i][j]:]\n        dp[i][j] = x\n\ntemp = np.where(dp[-1][-1]>0)[0] - d\ntemp = abs(temp)\nprint(min(temp))", "import numpy as np\nH,W,*L = map(int, open(0).read().split())\nA = L[:H*W]\nB = L[H*W:]\nC = [abs(b-a) for a,b in zip(A,B)]\nU = max(C)*(H+W)\nN = 2*U+1\nINF = 10**10\ndp = np.zeros((H,W,N),dtype=bool)\ndp[0,0,C[0]+U] = True\nfor i in range(1,W):\n  c = C[i]\n  dp[0,i,c:] |= dp[0,i-1,:N-c]\n  dp[0,i,:N-c] |= dp[0,i-1,c:]\nfor i in range(1,H):\n  c = C[i*W]\n  dp[i,0,c:] |= dp[i-1,0,:N-c]\n  dp[i,0,:N-c] |= dp[i-1,0,c:]\nfor i in range(1,H):\n  for j in range(1,W):\n    c = C[i*W+j]\n    dp[i,j,c:] |= dp[i,j-1,:N-c]\n    dp[i,j,:N-c] |= dp[i,j-1,c:]\n    dp[i,j,c:] |= dp[i-1,j,:N-c]\n    dp[i,j,:N-c] |= dp[i-1,j,c:]\nans = np.min(np.abs(np.where(dp[H-1][W-1])[0]-U))\nprint(ans)", "h, w = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(h)]\nB = [list(map(int, input().split())) for i in range(h)]\n\nC = [[0]*w for _ in range(h)]\nfor i in range(h):\n    for j in range(w):\n        C[i][j] = abs(A[i][j]-B[i][j])\n\nimport numpy as np\ndp = [[0]*(w+1) for _ in range(h+1)]\nimport numpy as np\nd = 80*(h+w-1)+1\nD = 2*d+1\ndp[0][0] = np.zeros(D, np.bool)\ndp[0][0][C[0][0]+d] = 1\n#dp[0][0][-C[0][0]+d] = 1\nfor i in range(h):\n    for j in range(w):\n        c = C[i][j]\n        if i == 0 and j == 0:\n            continue\n        elif i == 0:\n            b = np.zeros(D, np.bool)\n            b[c:] |= dp[i][j-1][:D-c]\n            b[:D-c] |= dp[i][j-1][c:]\n        elif j == 0:\n            b = np.zeros(D, np.bool)\n            b[c:] |= dp[i-1][j][:D-c]\n            b[:D-c] |= dp[i-1][j][c:]\n        else:\n            b = np.zeros(D, np.bool)\n            b[c:] |= dp[i][j-1][:D-c]\n            b[:D-c] |= dp[i][j-1][c:]\n            b[c:] |= dp[i-1][j][:D-c]\n            b[:D-c] |= dp[i-1][j][c:]\n        dp[i][j] = b\n#print(dp[h-1][w-1])\nans = float('inf')\nfor i in range(D):\n    if dp[h-1][w-1][i]:\n        #print(abs(i-d))\n        ans = min(ans, abs(i-d))\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\nh,w = map(int,input().split())\na = []\nfor i in range(h):\n  s = list(map(int,input().split()))\n  a.append(s)\n  \nb = []\nfor i in range(h):\n  s = list(map(int,input().split()))\n  b.append(s)\n  \ndp = [[0]*w for i in range(h)]\nt = 80*(h+w)\ndp[0][0] = 2**(t+abs(a[0][0]-b[0][0]))\n\nfor i in range(h):\n  for j in range(w):\n    r = abs(a[i][j]-b[i][j])\n    if j > 0:\n      dp[i][j] |= (dp[i][j-1]<<r | dp[i][j-1]>>r)\n    if i > 0:\n      dp[i][j] |= (dp[i-1][j]<<r | dp[i-1][j]>>r)\n      \na = dp[h-1][w-1]>>t\nm = a&(-a)\nprint(m.bit_length()-1)", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    h,w = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(h)]\n    b = [list(map(int, input().split())) for _ in range(h)]\n    c = [[0]*w for _ in range(h)]\n    for i in range(h):\n        for j in range(w):\n            c[i][j] = abs(a[i][j] -b[i][j])\n\n    mid = 12800\n    dp = [[0]*w for _ in range(h)]\n    dp[0][0] = (1<<(mid+c[0][0])) | (1<<(mid-c[0][0]))\n    for x in range(h):\n        for y in range(w):\n            for dx, dy in [[0, 1], [1, 0]]:\n                nx = x + dx\n                ny = y + dy\n                if 0<=nx<h and 0<=ny<w:\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]<<c[nx][ny])\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]>>c[nx][ny])\n    \n    for i in range(mid+1):\n        if (dp[-1][-1]>>i) & 1:\n            res = mid - i\n\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = np.array([lr() for _ in range(H)])\nB = np.array([lr() for _ in range(H)])\ndiff = np.abs(A - B).tolist()\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[np.zeros(L, np.bool)] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\ndi = diff[0][0]\ndp[0][0][X+di] = 1; dp[0][0][X-di] = 1\nfor h in range(H):\n    for w in range(W):\n        if h == 0 and w == 0:\n            continue\n        di = diff[h][w]\n        x = np.zeros(L, np.bool)\n        if h > 0:\n            prev = dp[h-1][w]\n            x[di:] |= prev[:L-di]\n            x[:L-di] |= prev[di:]\n        if w > 0:\n            prev = dp[h][w-1]\n            x[di:] |= prev[:L-di]\n            x[:L-di] |= prev[di:]\n        dp[h][w] = x\n\ndp = dp[-1][-1][X:]\npossible = np.nonzero(dp)[0]\nanswer = possible.min()\nprint(answer)\n", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = np.array([lr() for _ in range(H)])\nB = np.array([lr() for _ in range(H)])\ndiff = np.abs(A - B).tolist()\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[np.zeros(L, np.bool) for _ in range(W)] for _ in range(H)]\ndi = diff[0][0]\ndp[0][0][X+di] = 1; dp[0][0][X-di] = 1\nfor i in range(H):\n    for j in range(W):\n        if i == 0 and j == 0:\n            continue\n        di = diff[i][j]\n        if i > 0:\n            prev = dp[i-1][j]\n            dp[i][j][di:] |= prev[:L-di]\n            dp[i][j][:L-di] |= prev[di:]\n        if j > 0:\n            prev = dp[i][j-1]\n            dp[i][j][di:] |= prev[:L-di]\n            dp[i][j][:L-di] |= prev[di:]\n\ndp = dp[-1][-1][X:]\npossible = np.nonzero(dp)[0]\nanswer = possible.min()\nprint(answer)\n", "h, w = map(int, input().split())\na = [list(map(int, input().split())) for i in range(h)]\nb = [list(map(int, input().split())) for i in range(h)]\ndp = [[0] * (w + 1) for i in range(h + 1)]\ndp[0][0] = 1 << ((h + w) * 80)\nfor i in range(h):\n    for j in range(w):\n        diff = abs(a[i][j] - b[i][j])\n        dp[i + 1][j] |= (dp[i][j] << diff) | (dp[i][j] >> diff)\n        dp[i][j + 1] |= (dp[i][j] << diff) | (dp[i][j] >> diff)\nans = float(\"inf\")\nfor i in range((h + w) * 160):\n    if dp[h][w - 1] & (1 << i):\n        ans = min(ans, abs(i - ((h + w) * 80)))\nprint(ans)", "\n\nH, W = list(map(int, input().split()))\n\namap = [list(map(int, input().split())) for i in range(H)]\nbmap = [list(map(int, input().split())) for i in range(H)]\ndist_map = [[amap[y][x] - bmap[y][x] for x in range(W)] for y in range(H)]\n\nmid = 80 * 80 * 5 // 2\n# mid = 20\ndp = [[1 << mid] * W for y in range(H)]\n\ndp[0][0] = ((1 << (dist_map[0][0] + mid)) | (1 << (mid - dist_map[0][0])))\n\n\nfor x in range(1, W):\n    y = 0\n    d = abs(dist_map[y][x])\n    dp[y][x] = (dp[y][x - 1] << d) | (dp[y][x - 1] >> d)\n\n\nfor y in range(1, H):\n    x = 0\n    d = abs(dist_map[y][x])\n    dp[y][x] = (dp[y - 1][x] << d) | (dp[y - 1][x] >> d)\n\n\nfor y in range(1, H):\n    for x in range(1, W):\n        d = abs(dist_map[y][x])\n        dp[y][x] = (dp[y][x - 1] << d) | (dp[y][x - 1] >> d) | ((dp[y - 1][x] << d) | (dp[y - 1][x] >> d))\n\n\nans = dp[-1][-1]\n\nfor i in range(mid + 1):\n    if (ans & (1 << (mid - i))) or (ans & (1 << (mid + i))):\n        print(i)\n        return\n", "import sys\nimport numpy as np\ninput = sys.stdin.readline\nH,W = list(map(int,input().split()))\nA = [list(map(int,input().split())) for i in range(H)]\nB = [list(map(int,input().split())) for i in range(H)]\n\n#import random \n#H,W = 80, 80\n#A = [[random.randint(0,80) for x in range(W)] for y in range(H)]\n#B = [[random.randint(0,80) for x in range(W)] for y in range(H)]\n\nC = [[abs(a-b) for a,b in zip(la,lb)] for la,lb in zip(A,B)]\n\nMAX = 160 * (80+80)+10\nvals = np.zeros((W,MAX)).astype(bool)\ntemp = np.zeros(MAX).astype(bool)\ntemp[C[0][0]] = True\nfor y in range(H):\n    for x in range(W):\n        c = C[y][x]\n        if c == 0:\n            if y > 0:\n                temp |= vals[x]\n            if x > 0:\n                temp |= vals[x-1]\n            vals[x] &= False\n            vals[x] |= temp\n            temp &= False\n        else:\n            if y > 0:\n                temp[c:] |= vals[x][:-c]\n                temp[:c+1] |= vals[x][:c+1][::-1]\n                temp[:-c] |= vals[x][c:]\n            if x > 0:\n                temp[c:] |= vals[x-1][:-c]\n                temp[:c+1] |= vals[x-1][:c+1][::-1]\n                temp[:-c] |= vals[x-1][c:]\n            vals[x] &= False\n            vals[x] |= temp\n            temp &= False\n\nprint((np.where(vals[W-1])[0][0]))\n\n\n", "import numpy as np\ndef main():\n    h, w = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(h)]\n    b = [list(map(int, input().split())) for _ in range(h)]\n    n = 80*(80+80) + 10\n    m = n//2\n    dp = [[None]*w for i in range(h)]\n    for i in range(h):\n        for j in range(w):\n            dp[i][j] = np.zeros(n, np.bool)\n    dp[0][0][m+abs(a[0][0] - b[0][0])] = True\n    dp[0][0][m-abs(a[0][0] - b[0][0])] = True\n    for i in range(h):\n        for j in range(w):\n            x = abs(a[i][j] - b[i][j])\n            if 0 < i and 0 < h:\n                dp[i][j][x:] |= dp[i-1][j][:n-x]\n                dp[i][j][:n-x] |= dp[i-1][j][x:]\n                dp[i][j][x:] |= dp[i][j-1][:n-x]\n                dp[i][j][:n-x] |= dp[i][j-1][x:]\n            elif 0 < i:\n                dp[i][j][x:] |= dp[i-1][j][:n-x]\n                dp[i][j][:n-x] |= dp[i-1][j][x:]\n            elif 0 < j:\n                dp[i][j][x:] |= dp[i][j-1][:n-x]\n                dp[i][j][:n-x] |= dp[i][j-1][x:]\n    ans = float(\"inf\")\n    for i in range(m-80-1, m+80+2):\n        if dp[h-1][w-1][i]:\n            ans = min(ans, abs(m-i))\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "h,w = map(int,input().split())\na = [list(map(int,input().split())) for i in range(h)]\nb = [list(map(int,input().split())) for i in range(h)]\ngrid = [[0 for i in range(w)] for j in range(h)]\nfor i in range(h):\n  for j in range(w):\n    grid[i][j] = abs(a[i][j]-b[i][j])\ndp = [[0 for j in range(w)] for k in range(h)]\nbuf = (h+w)*80\nfor i in range(h):\n  for j in range(w):\n      t = grid[i][j]\n      if i == j == 0:\n        dp[i][j] = 1 << buf+t | 1 << buf-t\n      if j > 0:\n        dp[i][j] = dp[i][j] | dp[i][j-1] << t | dp[i][j-1] >> t\n      if i > 0:\n        dp[i][j] = dp[i][j] | dp[i-1][j] << t | dp[i-1][j] >> t\nfor i in range(buf):\n  if (dp[h-1][w-1] & 1 << buf+i) or (dp[h-1][w-1] & 1 << buf-i):\n    print(i)\n    return", "H,W=list(map(int,input().split()))\nA=[[int(i) for i in input().split()] for j in range(H)]\nB=[[int(i) for i in input().split()] for j in range(H)]\ndp=[[0 for j in range(W)] for i in range(H)]\nM=161*161\ndp[0][0]|=1<<(A[0][0]-B[0][0]+M)\ndp[0][0]|=1<<(-A[0][0]+B[0][0]+M)\n\nfor i in range(H):\n    for j in range(W):\n        dij=abs(A[i][j]-B[i][j])\n        if i>0:\n            dp[i][j]|=dp[i-1][j]<<dij\n            dp[i][j]|=dp[i-1][j]>>dij\n        if j>0:\n            dp[i][j]|=dp[i][j-1]>>dij\n            dp[i][j]|=dp[i][j-1]<<dij\nans=[]\nfor k in range(2*M+1):\n    if (1<<k)&dp[-1][-1]!=0:\n        ans.append(abs(k-M))\nprint((min(ans)))\n", "H, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(H)]\nB = [list(map(int, input().split())) for i in range(H)]\n\ndp = [[0] * W for i in range(H)]\ndp[0][0] = 1 << (abs(A[0][0] - B[0][0]) + 6400)\nfor i in range(H):\n    for j in range(W):\n        d = abs(A[i][j] - B[i][j])\n        if i > 0:\n            dp[i][j] |= dp[i - 1][j] << d | dp[i - 1][j] >> d\n        if j > 0:\n            dp[i][j] |= dp[i][j - 1] << d | dp[i][j - 1] >> d\nans = 0\nres = dp[H - 1][W - 1] >> 6400\nwhile res & 1 == 0:\n    res >>= 1\n    ans += 1\nprint(ans)\n", "import sys\nsys.setrecursionlimit(10000000)\nMOD = 10 ** 9 + 7\nINF = 10 ** 15\n\ndef main():\n    H,W = map(int,input().split())\n    A = [list(map(int,input().split())) for _ in range(H)]\n    B = [list(map(int,input().split())) for _ in range(H)]\n\n    dp = [[0]*(1 + W) for _ in range(H + 1)]\n    x = abs(A[0][0] - B[0][0])\n    dp[0][0] = 1 << (12800 + x)\n    dp[0][0] |= 1 << (12800 - x)\n    for i in range(H):\n        for j in range(W):\n            c = abs(A[i][j] - B[i][j])\n            if i > 0:\n                dp[i][j] |= dp[i - 1][j] << c\n                dp[i][j] |= dp[i - 1][j] >> c\n            if j > 0:\n                dp[i][j] |= dp[i][j - 1] << c\n                dp[i][j] |= dp[i][j - 1] >> c\n    ans = INF\n    x = dp[H - 1][W - 1]\n    for i in range(25600):\n        if x&1:\n            ans = min(ans,abs(i - 12800))\n        x >>= 1\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "h,w=map(int,input().split())\na=[list(map(int,input().split())) for i in range(h)]\nb=[list(map(int,input().split())) for i in range(h)]\n\npos = 160*80\ndp=[[0]*w for i in range(h)]\nsub=abs(a[0][0]-b[0][0])\ndp[0][0]=1<<(pos-sub)|1<<(pos+sub)\n\nfor c in range(h):\n    for l in range(w):\n        sub=abs(a[c][l]-b[c][l])\n        if l!=0 and c!=0:\n            dp[c][l]|=dp[c][l-1]<<sub|dp[c][l-1]>>sub|dp[c-1][l]<<sub|dp[c-1][l]>>sub\n        elif c!=0:\n            dp[c][l]|=dp[c-1][l]<<sub|dp[c-1][l]>>sub\n        elif l!=0:\n            dp[c][l]|=dp[c][l-1]<<sub|dp[c][l-1]>>sub\nbit=dp[-1][-1]\nfor i in range(pos):\n    if (bit&1<<(pos+i))or(bit&1<<(pos-i)):\n        print(i)\n        break", "maxV = 80*(80+80)\n\nH, W = list(map(int, input().split()))\nAss = [tuple(map(int, input().split())) for _ in range(H)]\nBss = [tuple(map(int, input().split())) for _ in range(H)]\n\ndp = [[0 for j in range(W)] for i in range(H)]\n\nfor i in range(H):\n    for j in range(W):\n        A, B = Ass[i][j], Bss[i][j]\n        if A > B:\n            A, B = B, A\n        if i == 0 and j == 0:\n            dp[i][j] = 1<<(maxV+B-A) | 1<<(maxV-B+A)\n        if i > 0:\n            dp[i][j] |= dp[i-1][j]<<(B-A) | dp[i-1][j]>>(B-A)\n        if j > 0:\n            dp[i][j] |= dp[i][j-1]<<(B-A) | dp[i][j-1]>>(B-A)\n\nbitset = dp[-1][-1]\nmask = 1<<(2*maxV)\nans = maxV\nfor i in range(-maxV, maxV+1):\n    if bitset & mask:\n        ans = min(ans, abs(i))\n    mask >>= 1\n\nprint(ans)\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    h,w = LI()\n    a = [LI() for _ in range(h)]\n    b = [LI() for _ in range(h)]\n    m = 1 << (80*80*2+3)\n    r = [[0]*w for _ in range(h)]\n    c = abs(a[0][0] - b[0][0])\n    r[0][0] |= (1 << (80*80+1)) << c\n    r[0][0] |= (1 << (80*80+1)) >> c\n    for i in range(h):\n        for j in range(w):\n            if i == 0 and j == 0:\n                continue\n            c = abs(a[i][j] - b[i][j])\n            t = 0\n            if i > 0:\n                t |= (r[i-1][j] << c) % m\n                t |= r[i-1][j] >> c\n            if j > 0:\n                t |= (r[i][j-1] << c) % m\n                t |= r[i][j-1] >> c\n            r[i][j] = t\n\n    c = r[-1][-1]\n    t = 10000\n    for i in range((80*80*2+3)):\n        if (1<<i) & c > 0:\n            k = abs(i-(80*80+1))\n            if t > k:\n                t = k\n\n    return t\n\n\nprint(main())\n\n\n\n", "import numpy as np\n\nH,W = map(int,input().split())\nA = np.zeros((H,W))\nfor c in [1,-1]:\n    for i in range(H):\n        num = list(map(int,input().split()))\n        A[i,:] += np.array(num) * c\n\nM = 160*80\ndp = [[0]*W for _ in range(H)]\ndp[0][0] = 1 << M\nfor i in range(H):\n    for j in range(W):\n        if i > 0:\n            dp[i][j] |= dp[i-1][j]\n        if j > 0:\n            dp[i][j] |= dp[i][j-1]\n        a = abs(A[i,j])\n        dp[i][j] = (dp[i][j] << int(a)) | (dp[i][j] >> int(a))\ni = M\nwhile True:\n    if (dp[H-1][W-1] >> i) & 1:\n        print(i-M)\n        break\n    i += 1", "import sys\n\nreadline = sys.stdin.readline\n\nH, W = map(int, readline().split())\nA = [list(map(int, readline().split())) for _ in range(H)]\nB = [list(map(int, readline().split())) for _ in range(H)]\ndp = [[0] * W for _ in range(H)]\nX = (H + W) * 80\nd = abs(A[0][0] - B[0][0])\ndp[0][0] = 1 << (X - d)\nfor h in range(H):\n    for w, (a, b) in enumerate(zip(A[h], B[h])):\n        if h == w == 0:\n            continue\n\n        d = abs(a - b)\n        x = 0\n        if h != 0:\n            x |= (dp[h - 1][w] << d)\n            x |= (dp[h - 1][w] >> d)\n        if w != 0:\n            x |= (dp[h][w - 1] << d)\n            x |= (dp[h][w - 1] >> d)\n        dp[h][w] = x\n\nbit = bin(dp[-1][-1])[2:]\ncan = [i - X for i, b in enumerate(bit[::-1]) if b == '1']\nanswer = min(x if x >= 0 else -x for x in can)\nprint(answer)", "import numpy as np\nh,w=map(int,input().split())\na=[list(map(int,input().split())) for _ in range(h)]\nb=[list(map(int,input().split())) for _ in range(h)]\nd=[]\nfor i in range(h):\n  d.append([abs(a[i][j]-b[i][j]) for j in range(w)])\ndp=np.zeros((h,w,12800))\n# dp[r][c][j]:(r,c)\u307e\u3067\u8003\u3048\u305f\u3068\u304dj\u306b\u3067\u304d\u308b\u304b\u30020\uff1a\u3067\u304d\u306a\u3044\u30021\u4ee5\u4e0a\uff1a\u3067\u304d\u308b\u3002\ndp[0,0,d[0][0]+6400]=1\nfor i in range(w-1):\n  if d[0][i+1]==0:\n    dp[0,i+1]+=dp[0,i]\n    continue\n  dp[0,i+1,d[0][i+1]:]+=dp[0,i,:-d[0][i+1]]\n  dp[0,i+1,:-d[0][i+1]]+=dp[0,i,d[0][i+1]:]\nfor i in range(h-1):\n  if d[i+1][0]==0:\n    dp[i+1,0]+=dp[i,0]\n    continue\n  dp[i+1,0,d[i+1][0]:]+=dp[i,0,:-d[i+1][0]]\n  dp[i+1,0,:-d[i+1][0]]+=dp[i,0,d[i+1][0]:]\nfor r in range(1,h):\n  for c in range(1,w):\n    if d[r][c]==0:\n      dp[r,c]+=dp[r-1,c]\n      dp[r,c]+=dp[r,c-1]\n      continue\n    dp[r,c,d[r][c]:]+=dp[r-1,c,:-d[r][c]]\n    dp[r,c,:-d[r][c]]+=dp[r-1,c,d[r][c]:]\n    dp[r,c,d[r][c]:]+=dp[r,c-1,:-d[r][c]]\n    dp[r,c,:-d[r][c]]+=dp[r,c-1,d[r][c]:]\nprint(min([abs(e-6400) for e in np.where(dp[h-1,w-1]>0)[0]]))", "import numpy as np\n\nh, w = map(int, input().split())\nA = [0]*h\nB = [0]*h\nfor _ in range(h):\n  A[_] = list(map(int, input().split()))\n  \nfor _ in range(h):\n  B[_] = list(map(int, input().split()))\n\nC = [[0]*w for _ in range(h)]\nfor i in range(h):\n  for j in range(w):\n    C[i][j] = abs(A[i][j]-B[i][j])\n    \ndp = [[0]*w for _ in range(h)]\nD = 80 * (h + w)\nL = 2*D + 1\ndp[0][0] = np.zeros(L, np.bool)\ndp[0][0][D+C[0][0]] = 1\nfor i in range(h):\n  for j in range(w):\n    if i == 0 and j == 0:\n      continue\n    x = np.zeros(L, np.bool)\n    if i != 0:\n      x[C[i][j]:] |= dp[i-1][j][:L-C[i][j]]\n      x[:L-C[i][j]] |= dp[i-1][j][C[i][j]:]\n    if j != 0:\n      x[C[i][j]:] |= dp[i][j-1][:L-C[i][j]]\n      x[:L-C[i][j]] |= dp[i][j-1][C[i][j]:]\n    dp[i][j] = x\n    \ntemp = np.where(dp[-1][-1]>0)[0]-D\ntemp = np.abs(temp)\nprint(np.min(temp))", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = np.array([lr() for _ in range(H)])\nB = np.array([lr() for _ in range(H)])\ndiff = np.abs(A - B).tolist()\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[None] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\ndp[0][0][X+diff[0][0]] = 1; dp[0][0][X-diff[0][0]] = 1 #\u975e\u8ca0\u6574\u6570\u306e\u307f\u3067\u3082\u826f\u3044\nfor h in range(H):\n    for w in range(W):\n        if h == 0 and w == 0:\n            continue\n        di = diff[h][w]\n        x = np.zeros(L, np.bool)\n        if h > 0:\n            x[di:] |= dp[h-1][w][:L-di]\n            x[:L-di] |= dp[h-1][w][di:]\n        if w > 0:\n            x[di:] |= dp[h][w-1][:L-di]\n            x[:L-di] |= dp[h][w-1][di:]\n        dp[h][w] = x\n\ndp = dp[-1][-1][X:]\npossible = np.where(dp==1)[0]\nanswer = possible.min()\nprint(answer)\n#\n", "h,w=map(int,input().split())\na=[list(map(int,input().split())) for i in range(h)]\nb=[list(map(int,input().split())) for i in range(h)]\n\npos = 160*80\ndp=[[0]*w for i in range(h)]\nsub=abs(a[0][0]-b[0][0])\ndp[0][0]=1<<(pos-sub)\ndp[0][0]=1<<(pos+sub)\n\nfor c in range(h):\n    for l in range(w):\n        sub=abs(a[c][l]-b[c][l])\n        if l!=0:\n            dp[c][l]|=dp[c][l-1]<<sub\n            dp[c][l]|=dp[c][l-1]>>sub\n        if c!=0:\n            dp[c][l]|=dp[c-1][l]<<sub\n            dp[c][l]|=dp[c-1][l]>>sub\nbit=dp[-1][-1]\nfor i in range(pos):\n    if (bit&1<<(pos+i))or(bit&1<<(pos-i)):\n        print(i)\n        break", "import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nH, W = lr()\nA = np.array([lr() for _ in range(H)])\nB = np.array([lr() for _ in range(H)])\ndiff = np.abs(A - B)\n\nX = (H+W) * 80\nL = X + X + 1 #\u771f\u3093\u4e2d\u30920\u3068\u3059\u308b\u3001\u6700\u5f8c\u306b-X\ndp = [[None] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\ndp[0][0][X+diff[0][0]] = 1; dp[0][0][X-diff[0][0]] = 1 #\u975e\u8ca0\u6574\u6570\u306e\u307f\u3067\u3082\u826f\u3044\nfor h in range(H):\n    for w in range(W):\n        if h == 0 and w == 0:\n            continue\n        di = diff[h][w]\n        x = np.zeros(L, np.bool)\n        if h > 0:\n            x[di:] |= dp[h-1][w][:L-di]\n            x[:L-di] |= dp[h-1][w][di:]\n        if w > 0:\n            x[di:] |= dp[h][w-1][:L-di]\n            x[:L-di] |= dp[h][w-1][di:]\n        dp[h][w] = x\n\ndp = dp[-1][-1][X:]\npossible = np.where(dp==1)[0]\nanswer = possible.min()\nprint(answer)\n#\n", "import numpy as np\nimport itertools\n\nH,W=map(int,input().split())\nA=[list(map(int, input().split())) for _ in range(H*2)]\nM=[[abs(A[i][j]-A[H+i][j]) for j in range(W)] for i in range(H)]\nm=max(max(j for j in i) for i in M)\nr=m*(H+W)+1\ndp=np.zeros((H,W,r),dtype='bool')\ndp[0][0][M[0][0]]=True\nit = itertools.product(range(H),range(W))\nnext(it)\nfor h,w in it:\n    m=M[h][w]\n    dp[h][w][m:] |= dp[h][w-1][:r-m] | dp[h-1][w][:r-m]\n    dp[h][w][:r-m] |= dp[h][w-1][m:] | dp[h-1][w][m:]\n    dp[h][w][:m] |= dp[h][w-1][m:0:-1] | dp[h-1][w][m:0:-1]\n\nfor i in range(r):\n    if dp[-1][-1][i]:\n        print(i)\n        break", "h, w = map(int, input().split())\nab = []\nfor i in range(h * 2):\n    ab.extend(list(map(int, input().split())))\n\nabs_table = [[0] * w for _ in range(h)]\ndp = [[0] * w for _ in range(h)]\n\ns = h * w\ni = 0\nj = 0\nfor k in range(s):\n    if w == j:\n        j = 0\n        i += 1\n    a, b = ab[k], ab[k+s]\n    abs_table[i][j] = abs(a - b)\n    j += 1\n   \nn = abs_table[0][0]  \ndp[0][0] = 2**(n * 2)  | 1\n    \nfor i in range(h):\n    for j in range(w):\n        a = abs_table[i][j]\n        u = 0\n        l = 0\n        if i:\n            u = dp[i-1][j]\n            u = u << a * 2 | u | u\n        if j:\n            l = dp[i][j-1]\n            l = l << a * 2 | l | l\n            \n        if not u and not l:\n            pass\n        elif not l:\n            dp[i][j] = u\n        elif not u:\n            dp[i][j] = l\n        else:\n            len_u = len(bin(u)[2:])\n            len_l = len(bin(l)[2:])\n            delta = len_u - len_l\n            if delta == 0:\n                dp[i][j] = u | l\n            elif delta < 0:\n                dp[i][j] = u << abs(delta) // 2 | l\n            else:\n                dp[i][j] = u | l << delta // 2\n\nflag = bin(dp[-1][-1])[2:]\nzero = len(flag) // 2\nfor i, v in enumerate(flag[zero:]):\n    if v == '1':\n        print(i)\n        break", "import numpy as np\nimport itertools\n\nH, W = list(map(int, input().split()))\nA = [tuple(map(int, input().split())) for _ in range(H)]\nB = [tuple(map(int, input().split())) for _ in range(H)]\n\nD = [[abs(A[h][w] - B[h][w]) for w in range(W)] for h in range(H)]\nmax_num = 80 * (H + W)\ntable = np.zeros((H, W, max_num), dtype='bool')\ntable[0][0][D[0][0]] = True\n\nit = itertools.product(list(range(H)), list(range(W)))\nnext(it)  # h=w=0 \u6368\u3066\u308b\nfor h, w in it:\n    d = D[h][w]\n    table[h][w][d:] += table[h - 1][w][:max_num - d] + table[h][w - 1][:max_num - d]\n    table[h][w][:max_num - d] += table[h - 1][w][d:] + table[h][w - 1][d:]\n    table[h][w][d:0:-1] += table[h - 1][w][:d] + table[h][w - 1][:d]\n\nprint((np.amin(*np.where(table[H - 1][W - 1]))))\n", "import sys\ninput = sys.stdin.readline\nh,w = list(map(int,input().split()))\nla = [list(map(int,input().split())) for i in range(h)]\nfor i in range(h):\n    l = list(map(int,input().split()))\n    for j,num in enumerate(l):\n        la[i][j] = abs(la[i][j]-num)\ndp = [[0 for i in range(w)] for j in range(h)]\nk = (h+w)*80+2\ndp[0][0] = 1 << (k+la[0][0]) | 1 << (k-la[0][0])\n\nfor i in range(h):\n    for j in range(w):\n        if i:\n            dp[i][j] |= (dp[i-1][j] << la[i][j]) | dp[i-1][j] >> la[i][j]\n        if j:\n            dp[i][j] |= (dp[i][j-1] << la[i][j]) | dp[i][j-1] >> la[i][j]\n\ncheck = dp[-1][-1]       \nfor i in range(k):\n    if (check >> k+i) & 1 or (check >> k-i) & 1:\n        print(i)\n        return\n", "h,w=map(int,input().split())\na=[list(map(int,input().split()))for _ in range(h)]\nb=[list(map(int,input().split()))for _ in range(h)]\ndp=[w*[0]for _ in range(h)]\ndp[0][0]=(1<<(80+(a[0][0]-b[0][0])))|(1<<(80+(b[0][0]-a[0][0])))\nfor i in range(h):\n  for j in range(w):\n    if i!=0:\n      dp[i][j]|=dp[i-1][j]<<(80+(a[i][j]-b[i][j]))\n      dp[i][j]|=dp[i-1][j]<<(80+(b[i][j]-a[i][j]))\n    if j!=0:\n      dp[i][j]|=dp[i][j-1]<<(80+(a[i][j]-b[i][j]))\n      dp[i][j]|=dp[i][j-1]<<(80+(b[i][j]-a[i][j]))\nans=1<<50000\nfor i in range(50000):\n  if dp[h-1][w-1]&(1<<i):ans=min(abs(i-(h+w-1)*80),ans)\nprint(ans)", "h,w=map(int,input().split())\na=[list(map(int,input().split()))for i in range(h)]\nb=[list(map(int,input().split()))for i in range(h)]\ns=[0]*w\ns[0]=p=1<<6400\nfor i in range(h):\n    for j in range(w):\n        d=abs(a[i][j]-b[i][j])\n        if j>0:\n            s[j]|=s[j-1]\n        s[j]=(s[j]<<d)|(s[j]>>d)\nt=s[-1]\nfor i in range(6401):\n    if t&(p<<i) or t&(p>>i):\n        print(i)\n        break", "\nimport sys\nfrom collections import defaultdict\nfrom collections import deque\nimport numpy as np\nimport heapq\nfrom heapq import heappush, heappop\nimport itertools\nimport math\nimport copy\n\nH, W = list(map(int, input().split()))\n\nA = []\nB = []\nfor _ in range(H):\n    a = list(map(int, input().split()))\n    A.append(a)\n\nfor _ in range(H):\n    b = list(map(int, input().split()))\n    B.append(b)\n\nC = []\nfor i in range(H):\n    cs = []\n    for j in range(W):\n        c = abs(A[i][j] - B[i][j])\n        cs.append(c)\n\n    C.append(cs)\n\n\nX = (H+W) * 80\nL = X + X + 1\n\ndp = [[0] * W for _ in range(H)]\ndp[0][0] = np.zeros(L, np.bool)\nd = C[0][0]\ndp[0][0][X+d] = 1\ndp[0][0][X-d] = 1\n\nfor r in range(H):\n    for c in range(W):\n        if r == 0 and c == 0:\n            continue\n\n        l = np.zeros(L, np.bool)\n        d = C[r][c]\n\n        if r != 0:\n            l[d:] |= dp[r-1][c][:L-d]\n            l[:L-d] |= dp[r-1][c][d:]\n\n        if c != 0:\n            l[d:] |= dp[r][c-1][:L-d]\n            l[:L-d] |= dp[r][c-1][d:]\n\n        dp[r][c] = l\n\ndp = dp[-1][-1]\nd = np.where(dp)[0] - X\nans = np.abs(d).min()\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\n\n\nh, w = list(map(int, input().split()))\nA = []\n\nfor i in range(h):\n    line = list(map(int, input().split()))\n    A.append(line)\n\nfor i in range(h):\n    line = list(map(int, input().split()))\n    for j, num in enumerate(line):\n        A[i][j] = abs(A[i][j] - num)\n\nconst = 640000\nbitset = 1 << const\nDP = [0]*w\nDP[0] = bitset >> A[0][0]\n\n\ndef slide_down(y, x):\n    bit = DP[x]\n    delta = A[y+1][x]\n    new1 = bit << delta\n    new2 = bit >> delta\n    DP[x] = new1 | new2\n\n\ndef slide_right(y, x):\n    bit = DP[x]\n    delta = A[y][x+1]\n    new1 = bit << delta\n    new2 = bit >> delta\n    DP[x+1] |= new1 | new2\n\n\nfor y in range(h):\n    for x in range(w):\n        if x < w-1:\n            slide_right(y, x)\n        if y < h-1:\n            slide_down(y, x)\n\nans = DP[w-1]\nfor i in range(81):\n    if (ans >> const+i) & 1 or (ans >> const-i) & 1:\n        print(i)\n        return\n", "H, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for _ in range(H)]\nB = [list(map(int, input().split())) for _ in range(H)]\n\nZ = (H + W) * 80 + 10\n\ndp = [[0] * (W + 1) for _ in range(H + 1)]\ndp[0][0] = (1 << Z)\n\nfor h in range(H):\n    for w in range(W):\n        d = dp[h][w]\n        k = abs(A[h][w] - B[h][w])\n\n        dp[h + 1][w] |= (d << k) | (d >> k)\n        dp[h][w + 1] |= (d << k) | (d >> k)\n\nans = 10**18\nfor a in (dp[H][W - 1], dp[H - 1][W]):\n    for d in range(Z * 2 + 10):\n        if a & (1 << d) != 0:\n            ans = min(ans, abs(d - Z))\nprint(ans)\n", "import numpy as np\nH,W = list(map(int,input().split()))\nA = [[0]*W for i in range(H)]\nB = [[0]*W for i in range(H)]\nfor i in range(H):\n  inf = [int(c) for c in input().split()]\n  for j in range(W):\n    A[i][j] = inf[j]\n    \nfor i in range(H):\n  inf = [int(c) for c in input().split()]\n  for j in range(W):\n    B[i][j] = inf[j]\n\nX = (H + W) * 80\nL = X + X + 1\n# X\u70b9\u6301\u3063\u305f\u72b6\u614b\u304b\u3089\u59cb\u3081\u308b\ndp = [[0] * W for _ in range(H)]\nd = abs(A[0][0] - B[0][0])\ndp[0][0] = np.zeros(L,np.bool)\ndp[0][0][X+d] = 1\nfor h in range(H):\n    for w,(a,b) in enumerate(zip(A[h],B[h])):\n        if h == w == 0:\n            continue\n        d = abs(a - b)\n        x = np.zeros(L,np.bool)\n        if h != 0:\n            x[d:] |= dp[h-1][w][:L-d]\n            x[:L-d] |= dp[h-1][w][d:]\n        if w != 0:\n            x[d:] |= dp[h][w-1][:L-d]\n            x[:L-d] |= dp[h][w-1][d:]\n        dp[h][w] = x\n\ndp2 = dp[-1][-1]\ncan_make = np.where(dp2)[0] - X\n\nanswer = np.abs(can_make).min()\nprint(answer)\n", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    h,w = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(h)]\n    b = [list(map(int, input().split())) for _ in range(h)]\n    c = [[0]*w for _ in range(h)]\n    for i in range(h):\n        for j in range(w):\n            c[i][j] = abs(a[i][j] -b[i][j])\n\n    # 80*160//2 xbit\u76ee\u304c1\u2192\u6570\u5024x-6400\u3092\u53d6\u308b\n    mid = 6400\n    dp = [[0]*w for _ in range(h)]\n    dp[0][0] = (1<<(mid+c[0][0])) | (1<<(mid-c[0][0]))\n    for x in range(h):\n        for y in range(w):\n            for dx, dy in [[0, 1], [1, 0]]:\n                nx = x + dx\n                ny = y + dy\n                if 0<=nx<h and 0<=ny<w:\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]<<c[nx][ny])\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]>>c[nx][ny])\n    \n    for i in range(mid+1):\n        if dp[-1][-1] & 1:\n            res = mid - i\n        dp[-1][-1] >>= 1\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "\ndef resolve():\n    # (O):80\uff08\u7e26\u6700\u5927\uff09 \u00d7 80\uff08\u6a2a\u6700\u5927\uff09 \u00d7 80\uff08\u5404\u30de\u30b9\u306e\u6700\u5927\u306e\u504f\u308a\uff09\u00d7 160\uff08\u6700\u5927\u4f55\u56de\u79fb\u52d5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\uff09\n    H, W = list(map(int, input().split()))\n    A = [tuple(map(int, input().split())) for _ in range(H)]\n    B = [tuple(map(int, input().split())) for _ in range(H)]\n    Sub = [[0] * W for i in range(H)]\n    for i in range(H):\n        for j in range(W):\n            Sub[i][j] = abs(A[i][j] - B[i][j])\n\n    # \u79fb\u52d5\u76f4\u524d\u306e\u504f\u308a\u3092k\u3068\u3057\u3001\u79fb\u52d5\u5148\u306e\u30de\u30b9(i, j)\n    # \u306b\u3064\u3044\u3066d = abs(A[i][j] - B[i][j])\u3068\u3057\u305f\u969b\u306b\u3001\n    # \u79fb\u52d5\u5f8c\u306e\u504f\u308a\u3092 abs(k - d) \u3068\u3059\u308b\u304b abs(k + d) \u3068\u3059\u308b\u304b\u300d\u3092\u8003\u3048\u308b\u3053\u3068\u3068\u540c\u5024\u3067\u3042\u308b\u3002\n    # dp[i][j][k] : \u30de\u30b9 (i, j) \u307e\u3067\u306e\u7d4c\u8def\u306e\u504f\u308a\u304c k \u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u304b\uff1f\n\n    # Bitset\u6f14\u7b97 (3\u6b21\u5143TLE)\n    max_k = 80 * (H + W)\n    dp = [[0] * W for _ in range(H)]\n    dp[0][0] = 1 << (max_k + Sub[0][0]) | 1 << (max_k - Sub[0][0])\n\n    for i in range(H):\n        for j in range(W):\n            d = Sub[i][j]\n            if i:\n                dp[i][j] |= dp[i - 1][j] << d | dp[i - 1][j] >> d\n            if j:\n                dp[i][j] |= dp[i][j - 1] << d | dp[i][j - 1] >> d\n\n    ans = 10 ** 18\n    for i in range(max_k * 2 + 1):\n        if dp[H - 1][W - 1] & (1 << i):\n            ans = min(ans, abs(max_k - i))\n    print(ans)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "H, W = map(int, input().split())\n\nA = [tuple(map(int, input().split())) for _ in range(H)]\nB = [tuple(map(int, input().split())) for _ in range(H)]\n\nC = [[abs(A[i][j] - B[i][j]) for j in range(W)] for i in range(H)]\n\nD = 80 * (H + W) + 1\nD2 = D * 2\n\ndp = [[0] * W for _ in range(H)]\n\ndp[0][0] |= 1 << (D + C[0][0])\ndp[0][0] != 1 << (D - C[0][0])\n\nfor h in range(H):\n    for w in range(W):\n        tmp = C[h][w]\n        if h:\n            dp[h][w] |= dp[h - 1][w] << tmp\n            dp[h][w] |= dp[h - 1][w] >> tmp\n        if w:\n            dp[h][w] |= dp[h][w - 1] << tmp\n            dp[h][w] |= dp[h][w - 1] >> tmp\n\nans = D2\n\ntmp = dp[H - 1][W - 1]\n\nfor i in range(D2):\n    if (tmp >> i) & 1:\n        ans = min(ans, abs(i - D))\n\nprint (ans)", "h,w=list(map(int,input().split()))\na=[list(map(int,input().split()))for _ in range(h)]\nb=[list(map(int,input().split()))for _ in range(h)]\nd=[[a[i][j]-b[i][j]for j in range(w)]for i in range(h)]\ndp=[w*[0]for _ in range(h)]\ndp[0][0]=1<<(80+d[0][0])|1<<(80-d[0][0])\nfor i in range(h):\n  for j in range(w):\n    if i!=0:\n      dp[i][j]|=(dp[i-1][j]<<80+d[i][j])\n      dp[i][j]|=(dp[i-1][j]<<80-d[i][j])\n    if j!=0:\n      dp[i][j]|=(dp[i][j-1]<<80+d[i][j])\n      dp[i][j]|=(dp[i][j-1]<<80-d[i][j])\nn=dp[-1][-1]|(1<<15000)\nans=1<<1000\nfor i in range(15000):\n  if n&(1<<i):ans=min(ans,abs(i-(h+w-1)*80))\nprint(ans)\n", "import numpy as np\nH, W = list(map(int, input().split()))\nA = np.array([list(map(int, input().split())) for _ in range(H)])\nB = np.array([list(map(int, input().split())) for _ in range(H)])\n\nC = abs(A - B)\n# print (C)\n\nD = 80 * (H + W + 1) + 10\nD2 = D * 2\n\ndp = [[0] * (W) for _ in range(H)]\n\ndp[0][0] = 1 << (D - int(C[0][0]))\n# print (dp[0][0])\ndp[0][0] |= 1 << (D + int(C[0][0]))\n# print ((dp[0][0]))\n\n\n\n# print (dp[0][0])\ndp = np.array(dp)\n\nfor h in range(H):\n    for w in range(W):\n        tmp = int(C[h][w])\n        if h:\n            dp[h][w] |= dp[h - 1][w] << tmp\n            dp[h][w] |= dp[h - 1][w] >> tmp\n        if w:\n            dp[h][w] |= dp[h][w - 1] << tmp\n            dp[h][w] |= dp[h][w - 1] >> tmp\n\n        \nans = D2\n# print (ans)\ntmp = dp[H - 1][W - 1]\nfor i in range(D2):\n    if (tmp >> i) & 1:\n        ans = min(ans, abs(i - D))\n\nprint (ans)\n\n", "H, W = map(int, input().split())\nA = [tuple(map(int, input().split())) for _ in range(H)]\nB = [tuple(map(int, input().split())) for _ in range(H)]\n\nC = [[abs(A[i][j] - B[i][j]) for j in range(W)] for i in range(H)]\n\nD = 80 * (H + W) + 1\nD2 = D * 2\n\ndp = [[0] * W for _ in range(H)]\n\ndp[0][0] |= 1 << (D + C[0][0])\ndp[0][0] |= 1 << (D - C[0][0])\n\nfor h in range(H):\n    for w in range(W):\n        c = C[h][w]\n        if h >= 1:\n            dp[h][w] |= dp[h - 1][w] << c\n            dp[h][w] |= dp[h - 1][w] >> c\n        if w >= 1:\n            dp[h][w] |= dp[h][w - 1] << c\n            dp[h][w] |= dp[h][w - 1] >> c\n\nans = D2\ntmp = dp[H - 1][W - 1]\n\nfor i in range(D2):\n    if (tmp >> i) & 1:\n        ans = min(ans, abs(i - D))\n\nprint (ans)", "def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    import math\n    #from math import gcd\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    h,w = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(h)]\n    b = [list(map(int, input().split())) for _ in range(h)]\n    c = [[0]*w for _ in range(h)]\n    for i in range(h):\n        for j in range(w):\n            c[i][j] = abs(a[i][j] -b[i][j])\n\n    # 80*160//2 xbit\u76ee\u304c1\u2192\u6570\u5024x-6400\u3092\u53d6\u308b\n    mid = 6400\n    dp = [[0]*w for _ in range(h)]\n    dp[0][0] = (1<<(mid+c[0][0])) | (1<<(mid-c[0][0]))\n    for x in range(h):\n        for y in range(w):\n            for dx, dy in [[0, 1], [1, 0]]:\n                nx = x + dx\n                ny = y + dy\n                if 0<=nx<h and 0<=ny<w:\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]<<c[nx][ny])\n                    dp[nx][ny] = dp[nx][ny] | (dp[x][y]>>c[nx][ny])\n    \n    for i in range(mid+1):\n        if (dp[-1][-1]>>i) & 1:\n            res = mid - i\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "def solve():\n    from sys import stdin\n    f_i = stdin\n    \n    H, W = map(int, f_i.readline().split())\n    A = tuple(tuple(map(int, f_i.readline().split())) for i in range(H))\n    B = tuple(tuple(map(int, f_i.readline().split())) for i in range(H))\n    \n    dp1 = [0] * W\n    bit_width = 80 * (H + W - 2)\n    dp1[0] = 1 << (bit_width)\n    for A_i, B_i in zip(A, B):\n        dp2 = [0] * W\n        \n        diff = abs(A_i[0] - B_i[0])\n        dp2[0] = (dp1[0] << diff) | (dp1[0] >> diff)\n        \n        for j, t in enumerate(zip(A_i[1:], B_i[1:]), start=1):\n            A_ij, B_ij = t\n            diff = abs(A_ij - B_ij)\n            b = dp1[j] | dp2[j-1]\n            dp2[j] = (b << diff) | (b >> diff)\n        \n        dp1 = dp2\n    \n    b = bin(dp2[-1])\n    b = b[-bit_width-1:]\n    print(b.index('1'))\n \nsolve()", "import numpy as np\n\n\nH, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for _ in range(H)]\nB = [list(map(int, input().split())) for _ in range(H)]\n\nX = (H + W) * 80\nL = X + X + 1\ndp = [[0] * W for _ in range(H)]\nd = abs(A[0][0] - B[0][0])\ndp[0][0] = np.zeros(L, np.bool)\ndp[0][0][X + d] = 1\nfor h in range(H):\n    for w in range(W):\n        a = A[h][w]\n        b = B[h][w]\n        if h == w == 0:\n            continue\n        d = abs(a - b)\n        x = np.zeros(L, np.bool)\n        if h != 0:\n            x[d:] |= dp[h - 1][w][:L - d]  # \u6b63\u3078\u306e\u79fb\u52d5\n            x[:L - d] |= dp[h - 1][w][d:]\n        if w != 0:\n            x[d:] |= dp[h][w - 1][:L - d]\n            x[:L - d] |= dp[h][w - 1][d:]\n        dp[h][w] = x\n\ndp = dp[-1][-1]\ncan_make = np.where(dp)[0] - X\n\nanswer = np.abs(can_make).min()\nprint(answer)\n", "import sys\ndef input(): return sys.stdin.readline().rstrip()\n\n\ndef main():\n    h, w = map(int, input().split())\n    A = [list(map(int, input().split()))for i in range(h)]\n    B = [list(map(int, input().split()))for i in range(h)]\n    abss = [[abs(A[i][j]-B[i][j])for j in range(w)] for i in range(h)]\n    dp = [[0]*w for i in range(h)]\n    dp[0][0] = 1 << (abss[0][0]+13000)    \n    for i in range(h):\n        for j in range(w):\n            if i != h-1:\n                dp[i+1][j] = dp[i+1][j] | dp[i][j] << abss[i +\n                                                           1][j] | dp[i][j] >> abss[i+1][j]\n            if j != w-1:\n                dp[i][j+1] = dp[i][j+1] | dp[i][j] << abss[i][j +\n                                                              1] | dp[i][j] >> abss[i][j+1]\n    a = 0\n    ans = dp[-1][-1]\n    while True:\n        if (ans & (1 << (13000-a))):\n            print(a)\n            break\n        elif (ans & (1 << (13000+a))):\n            print(a)\n            break\n        a += 1\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\ndef main():\n  h, w = map(int, input().split())\n  A = [list(map(int, input().split())) for _ in range(h)]\n  B = [list(map(int, input().split())) for _ in range(h)]\n  M = 80*(h+w)\n  dp = [[0]*w for i in range(h)]\n  d = abs(A[0][0] - B[0][0])\n  mask = (1 << (2*M)) - 1\n  dp[0][0] |= 1 << (M-d)\n  dp[0][0] |= 1 << (M+d)\n  for i in range(h):\n    for j in range(w):\n      d = abs(A[i][j] - B[i][j])\n      if i:\n        dp[i][j] |= (dp[i-1][j] << d) & mask\n        dp[i][j] |= dp[i-1][j] >> d\n      if j:\n        dp[i][j] |= (dp[i][j-1] << d) & mask\n        dp[i][j] |= dp[i][j-1] >> d\n  t = dp[-1][-1] >> M\n  ans = (t & (-t)).bit_length() - 1\n  print(ans)\n  \ndef __starting_point():\n  main()\n__starting_point()", "import sys\n# input = sys.stdin.buffer.readline\ndef input(): return sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10 ** 7)\n\nH, W = map(int, input().split())\nA = [[int(x) for x in input().split()] for _ in range(H)]\nB = [[int(x) for x in input().split()] for _ in range(H)]\nC = [[0] * W for _ in range(H)]\nfor i in range(H):\n    for j in range(W):\n        C[i][j] = abs(A[i][j] - B[i][j])\ncenter = 80 * (H+W) # (80+80)*80=12800\n\ndp = [[0] *W for _ in range(H)]\ndp[0][0] = (1 << (center - C[0][0])) | (1 << (center + C[0][0]))\nfor i in range(H):\n    for j in range(W):\n        if i:\n            dp[i][j] |= dp[i-1][j] << C[i][j]\n            dp[i][j] |= dp[i-1][j] >> C[i][j]\n        if j:\n            dp[i][j] |= dp[i][j-1] << C[i][j]\n            dp[i][j] |= dp[i][j-1] >> C[i][j]\nans = center * 2\nfor i in range(center*2):\n    if (dp[H-1][W-1] >> i) & 1:\n        ans = min(ans, abs(i-center))\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\nH, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(H)]\nB = [list(map(int, input().split())) for i in range(H)]\nD = [[0]*W for i in range(H)]\nfor i in range(H):\n    for j in range(W):\n        D[i][j] = abs(A[i][j]-B[i][j])\nbuf = 80*(H+W)\ndp = [[0]*W for i in range(H)]\ndp[0][0] = 1<<(buf+D[0][0]) | 1<<(buf-D[0][0])\nfor i in range(H):\n    for j in range(W):\n        d = D[i][j]\n        if i:\n            dp[i][j] |= dp[i-1][j]<<d | dp[i-1][j]>>d\n        if j:\n            dp[i][j] |= dp[i][j-1]<<d | dp[i][j-1]>>d\nans = 10**18\nfor i in range(buf*2+1):\n    if dp[H-1][W-1]&(1<<i):\n        ans = min(ans, abs(buf-i))\nprint(ans)\n", "H,W = map(int,input().split())\nA = [list(map(int,input().split())) for i in range(H)]\nB = [list(map(int,input().split())) for i in range(H)]\nC = [[abs(a-b) for a,b in zip(arow,brow)] for arow,brow in zip(A,B)]\n\nofs = 80*(H+W)\ndp = [[0]*W for _ in range(H)]\ndp[0][0] = (1<<(ofs+C[0][0])) | (1<<(ofs-C[0][0]))\nfor i,crow in enumerate(C):\n    for j,c in enumerate(crow):\n        if i:\n            dp[i][j] = (dp[i-1][j]<<c) | (dp[i-1][j]>>c)\n        if j:\n            dp[i][j] |= ((dp[i][j-1]<<c) | (dp[i][j-1]>>c))\n\nans = ofs*2\nfor i in range(ofs*2):\n    if dp[-1][-1]&(1<<i):\n        ans = min(ans, abs(i-ofs))\nprint(ans)", "h, w = map(int,input().split())\na = [list(map(int,input().split())) for i in range(h)]\nb = [list(map(int,input().split())) for i in range(h)]\n\nab = [[0]*w for i in range(h)]\nfor ch in range(h):\n    for cw in range(w):\n        ab[ch][cw] = abs(a[ch][cw] - b[ch][cw])\n\nab0 = ab[0][0]\nsize = 80*(h+w)\ndp = [[0]*w for hh in range(h)]\ndp[0][0] |= 2**(size + ab0)\ndp[0][0] |= 2**(size - ab0)\nfor ch in range(h):\n    for cw in range(w):\n        if ch < h-1:\n            dp[ch+1][cw] |= dp[ch][cw] << ab[ch+1][cw]\n            dp[ch+1][cw] |= dp[ch][cw] >> ab[ch+1][cw]\n        if cw < w-1:\n            dp[ch][cw+1] |= dp[ch][cw] << ab[ch][cw+1]\n            dp[ch][cw+1] |= dp[ch][cw] >> ab[ch][cw+1]\n\na = dp[h-1][w-1]>>size\nm = a&(-a)\nprint(m.bit_length()-1)", "H,W = map(int,input().split())\nA = [list(map(int,input().split())) for i in range(H)]\nB = [list(map(int,input().split())) for i in range(H)]\nC = []\nfor arow,brow in zip(A,B):\n    C.append([abs(a-b) for a,b in zip(arow,brow)])\n\nofs = 80*(H+W)\ndp = [0] * W\ndp[0] = (1<<(ofs+C[0][0])) | (1<<(ofs-C[0][0]))\nfor j in range(W-1):\n    dp[j+1] = (dp[j] << C[0][j+1]) | (dp[j] >> C[0][j+1])\n\nfor i in range(1,H):\n    dp2 = [0] * W\n    for j in range(W):\n        dp2[j] = (dp[j] << C[i][j]) | (dp[j] >> C[i][j])\n        if j:\n            dp2[j] |= (dp2[j-1] << C[i][j]) | (dp2[j-1] >> C[i][j])\n    dp = dp2\n\nans = ofs*2\nfor i in range(ofs*2):\n    if dp[-1] & (1<<i):\n        ans = min(ans, abs(ofs - i))\nprint(ans)", "H,W=map(int,input().split())\nA=[list(map(int,input().split())) for i in range(H)]\nfor i in range(H):\n    B=list(map(int,input().split()))\n    for j in range(W):\n        A[i][j]=abs(A[i][j]-B[j])\nD=80*(H+W)+1\nD2=D*2\ndp=[[0]*W for i in range(H)]\ndp[0][0]|=1<<(D+A[0][0])\ndp[0][0]|=1<<(D-A[0][0])\nfor i in range(H):\n    for j in range(W):\n        if i:\n            dp[i][j]|=dp[i-1][j]<<A[i][j]\n            dp[i][j]|=dp[i-1][j]>>A[i][j]\n        if j:\n            dp[i][j]|=dp[i][j-1]<<A[i][j]\n            dp[i][j]|=dp[i][j-1]>>A[i][j]\nres=dp[-1][-1]\nans=10**18\nfor i in range(D2):\n    if res>>i&1:\n        ans=min(ans,abs(D-i))\nprint(ans)", "import sys \ndef input():return sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nH,W=map(int,input().split())\nA=[[int(x) for x in input().split()] for _ in range(H)]\nB=[[int(x) for x in input().split()] for _ in range(H)]\nC=[[0] * W for _ in range(H)]\nfor i in range(H):\n    for j in range(W):\n        C[i][j]=abs(A[i][j]-B[i][j])\ncenter=80 * (H + W)\ndp=[[0]*W for _ in range(H)]\ndp[0][0]=(1<<(center - C[0][0]))|(1<<(center+C[0][0]))\nfor i in range(H):\n    for j in range(W):\n        if i:\n            dp[i][j]|=dp[i-1][j]<<C[i][j]\n            dp[i][j]|=dp[i-1][j]>>C[i][j]\n        if j:\n            dp[i][j]|=dp[i][j-1]<<C[i][j]\n            dp[i][j]|=dp[i][j-1]>>C[i][j]            \nans=center*2\nfor i in range(center*2):\n    if (dp[H-1][W-1]>>i)&1:\n        ans=min(ans,abs(i-center))\nprint(ans)", "H, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for i in range(H)]\nB = [list(map(int, input().split())) for i in range(H)]\ncenter = 80 * (H+W)\nC = [[abs(A[i][j] - B[i][j]) for j in range(W)] for i in range(H)]\n\ndp = [[0] * W for i in range(H)]\ndp[0][0] = (1 << (center + C[0][0])) | (1 >> (center - C[0][0]))\n\nfor i in range(H):\n    for j in range(W):\n        if i:\n            dp[i][j] |= dp[i-1][j] << C[i][j]\n            dp[i][j] |= dp[i-1][j] >> C[i][j]\n        if j:\n            dp[i][j] |= dp[i][j-1] << C[i][j]\n            dp[i][j] |= dp[i][j-1] >> C[i][j]\n\nans = center * 2\nfor i in range(center*2):\n    if (dp[H-1][W-1] >> i) & 1:\n        ans = min(ans, abs(i-center))\n\nprint(ans)\n", "H, W = list(map(int, input().split()))\nA = [list(map(int, input().split())) for _ in range(H)]\nB = [list(map(int, input().split())) for _ in range(H)]\n\nZ = 1000\n\ndp = [[0] * (W + 1) for _ in range(H + 1)]\ndp[0][0] = (1 << Z)\n\nfor h in range(H):\n    for w in range(W):\n        d = dp[h][w]\n        k = abs(A[h][w] - B[h][w])\n\n        dp[h + 1][w] |= (d << k) | (d >> k)\n        dp[h][w + 1] |= (d << k) | (d >> k)\n\nans = 10**18\nfor a in (dp[H][W - 1], dp[H - 1][W]):\n    for d in range(Z * 2 + 10):\n        if a & (1 << d) != 0:\n            ans = min(ans, abs(d - Z))\nprint(ans)\n", "H, W = map(int, input().split())\nA = tuple(tuple(map(int, input().split())) for _ in range(H))\nB = tuple(tuple(map(int, input().split())) for _ in range(H))\ntable = [0] * W\ntable[0] = 1 << 6400\nfor i in range(H):\n    for j in range(W):\n        shamt = abs(A[i][j] - B[i][j])\n        if j > 0:\n            table[j] |= table[j - 1]\n        table[j] = (table[j] << shamt) | (table[j] >> shamt)\ndl = dr = 1 << 6400\nfor i in range(6401):\n    if table[W - 1] & (dl | dr):\n        print(i)\n        break\n    dl <<= 1\n    dr >>= 1", "h, w = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(h)]\nb = [list(map(int, input().split())) for _ in range(h)]\n\nx = (h + w) * 80\n\ndp = [[0] * w for _ in range(h)]\nd = abs(a[0][0] - b[0][0])\ndp[0][0] = 1 << (x - d)\n\nfor i in range(h):\n    for j, (ae, be) in enumerate(zip(a[i], b[i])):\n        if i == j == 0:\n            continue\n\n        d = abs(ae - be)\n        bt = 0\n        if i != 0:\n            bt |= dp[i-1][j] << d\n            bt |= dp[i-1][j] >> d\n\n        if j != 0:\n            bt |= dp[i][j-1] << d\n            bt |= dp[i][j-1] >> d\n\n        dp[i][j] = bt\n\ndp = dp[-1][-1]\n\nb = bin(dp)[2:]\ncan_make = [i - x for i, be in enumerate(b[::-1]) if be == \"1\"]\n\nans = min(x if x >= 0 else -x for x in can_make)\nprint(ans)\n", "import sys\ninput = sys.stdin.readline\nh,w = list(map(int,input().split()))\nla = [list(map(int,input().split())) for i in range(h)]\nfor i in range(h):\n    l = list(map(int,input().split()))\n    for j,num in enumerate(l):\n        la[i][j] = abs(la[i][j]-num)\ndp = [[0 for i in range(w)] for j in range(h)]\nk = (h+w)*80+2\ndp[0][0] = 1 << (k+la[0][0]) | 1 << (k-la[0][0])\n\nfor i in range(h):\n    for j in range(w):\n        if i:\n            dp[i][j] |= (dp[i-1][j] << la[i][j]) | dp[i-1][j] >> la[i][j]\n        if j:\n            dp[i][j] |= (dp[i][j-1] << la[i][j]) | dp[i][j-1] >> la[i][j]\n        \ns = bin(dp[-1][-1])[2:]\nl = len(s)-1\nans = float('inf')\nfor i in range(l,-1,-1):\n  if s[i]=='1':\n    m = abs(l-i-k)\n    if m<ans:\n      ans = m\nprint(ans)\n", "def solve(h, w, A, B):\n    center = 80 * (h + w - 1)\n    C = [[abs(A[r][c] - B[r][c]) for c in range(w)] for r in range(h)]\n    dp = [[0] * w for r in range(h)]\n    dp[0][0] = (1 << (center + C[0][0])) | (1 << (center - C[0][0]))\n    for r in range(h):\n        for c in range(w):\n            if r > 0:\n                dp[r][c] |= (dp[r-1][c] << C[r][c]) | (dp[r-1][c] >> C[r][c])\n            if c > 0:\n                dp[r][c] |= (dp[r][c-1] << C[r][c]) | (dp[r][c-1] >> C[r][c])\n    mask = bin(dp[-1][-1] >> center)\n    return mask[::-1].find(\"1\")\nh, w = map(int, input().split())\nA = [list(map(int, input().split())) for i in range(h)]\nB = [list(map(int, input().split())) for i in range(h)]\nprint(solve(h, w, A, B))", "def solve(h, w, A, B):\n    center = (h+w)*80\n    C = [[abs(A[r][c]-B[r][c]) for c in range(w)] for r in range(h)]\n    dp = [[0]*w for r in range(h)]\n    dp[0][0] = (1 << (center + C[0][0])) | (1 << (center - C[0][0]))\n    for r in range(h):\n        for c in range(w):\n            if r > 0:\n                dp[r][c] |= (dp[r-1][c] << C[r][c]) | (dp[r-1][c] >> C[r][c])\n            if c > 0:\n                dp[r][c] |= (dp[r][c-1] << C[r][c]) | (dp[r][c-1] >> C[r][c])\n    mask = bin(dp[-1][-1] >> center)\n    return mask[::-1].find(\"1\")\n\nh, w = map(int, input().split())\nA = [list(map(int, input().split())) for i in range(h)]\nB = [list(map(int, input().split())) for i in range(h)]\nprint(solve(h, w, A, B))", "import sys\ninput = sys.stdin.readline\n\ndef main():\n  h, w = map(int, input().split())\n  red = [[int(x) for x in input().split()] for _ in range(h)]\n  blue = [[int(x) for x in input().split()] for _ in range(h)]\n  \n  max_dp = 13000\n  dp_first = 2**max_dp\n  dp = [[0]*(w+1) for _ in range(h+1)]\n  \n  for i in range(h):\n    for j in range(w):\n      sub = dp[i][j+1]|dp[i+1][j]\n      sub = sub|dp_first if i == j == 0 else sub\n      shift = abs(red[i][j]-blue[i][j])\n      dp[i+1][j+1] = (sub << shift)|(sub >> shift)\n  \n  judge = dp[h][w]\n  for i in range(max_dp):\n    if (judge >> max_dp+i)&1 or (judge >> max_dp-i)&1:\n      print(i)\n      return\n  \ndef __starting_point():\n  main()\n__starting_point()", "H, W = map(int, input().split())\nA = [[0]*W for i in range(H)]\nB = [[0]*W for i in range(H)]\nfor i in range(H):\n  inf = [int(c) for c in input().split()]\n  for j in range(W):\n    A[i][j] = inf[j]\n\nfor i in range(H):\n  inf = [int(c) for c in input().split()]\n  for j in range(W):\n    B[i][j] = inf[j]\n\nX = (H+W)*80\ndp = [[0]*W for i in range(H)]\nd = abs(A[0][0]-B[0][0])\ndp[0][0] = 1<<(X+d)\n\nfor i in range(H):\n  for j in range(W):\n    if i==0 and j==0:\n      continue\n    d = abs(A[i][j]-B[i][j])\n    if i!=0:\n      dp[i][j] |= dp[i-1][j]>>d\n      dp[i][j] |= dp[i-1][j]<<d\n    if j!=0:\n      dp[i][j] |= dp[i][j-1]>>d\n      dp[i][j] |= dp[i][j-1]<<d\n\ns = bin(dp[-1][-1])[2:]\nl = len(s)-1\nans = float('inf')\nfor i in range(l,-1,-1):\n  if s[i]=='1':\n    m = abs(l-i-X)\n    if m<ans:\n      ans = m\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\nh, w = list(map(int, input().split()))\na = [tuple(map(int, input().split())) for _ in range(h)]\nb = [tuple(map(int, input().split())) for _ in range(h)]\nc = [[abs(a[i][j] - b[i][j]) for j in range(w)] for i in range(h)]\n\nCONST = 80 * 80 * 2\ndp = [[0] * w for _ in range(h)]\ndp[0][0] = 1 << (c[0][0] + CONST)\n\nfor i in range(h):\n    for j in range(w):\n        if i < h - 1:\n            dp[i + 1][j] |= (dp[i][j] << c[i + 1][j])\n            dp[i + 1][j] |= (dp[i][j] >> c[i + 1][j])\n        if j < w - 1:\n            dp[i][j + 1] |= (dp[i][j] << c[i][j + 1])\n            dp[i][j + 1] |= (dp[i][j] >> c[i][j + 1])\n\nfor k in range(CONST):\n    if dp[h - 1][w - 1] & (1 << (CONST + k)) != 0 or dp[h - 1][w - 1] & (\n            1 << (CONST - k)) != 0:\n        ans = k\n        break\n\nprint(ans)\n"]