["import sys\n\nH, W = list(map(int, input().split()))\nL = set()\nfor y in range(H):\n    row = input().strip()\n    i_sweet = row.find('S')\n    i_gnome = row.find('G')\n    if i_sweet == -1 or i_gnome > i_sweet:\n        print(-1)\n        return\n    L.add(i_sweet - i_gnome)\nprint(len(L))\n", "#!/usr/bin/env python3\n\ndef read_ints():\n\treturn list(map(int, input().strip().split()))\n\nn, m = read_ints()\n\nbest = 0\nopts = set()\n\nfor _ in range(n):\n\tx = input()\n\tg = x.find('G')\n\ts = x.find('S')\n\n\tif s<g:\n\t\tbest = float('inf')\n\t\tbreak\n\telse:\n\t\topts.add(max(best, s-g))\n\nif best == float('inf'):\n\tprint(-1)\nelse:\n\tprint(len(opts))\n\n", "n, m = map(int, input().split())\ndist_w = 2001\ndist_s = -1\nflag = False\nans = set()\nfor i in range(n): \n    s = input()\n    gnome = s.find(\"G\")\n    sweet = s.find(\"S\")\n    if gnome > sweet:\n        flag = True\n        break\n    ans.add(sweet - gnome)\nif flag:\n    print(-1)\nelse:\n    print(len(ans))", "n, m = map(int, input().split())\nc = 0\ng = 0\nt = set()\nf = False\nfor i in range(n):\n    s = input().strip()\n    for j in range(len(s)):\n        if s[j] == 'G':\n            g = j\n        elif s[j] == 'S':\n            c = j\n    if g - c > 0:\n        print(-1)\n        f = True\n        break\n    t.add(c - g)\nif not f:\n    print(len(t))", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nn, m = list(map(int, input().split(' ')))\ndistances = [0] * 1000\n\nfor l in [input() for _ in range(n)]:\n    distance = l.index('S') - l.index('G')\n    if distance < 0:\n        print(-1)\n        return\n    distances[distance] = 1\n\nprint(distances.count(1))\n", "N = 1000\ndis = set([])\nn, m = list(map(int, input().split(' ')))\nf = False\nfor i in range(n):\n    s = input()\n    dist = s.index('S') - s.index('G')\n    #print(dist)\n    if dist < 0:\n        f = True\n        break\n    if dist not in dis:\n        dis.add(dist)\nif f:\n    print(-1)\nelse:\n    print(len(dis))\n", "def dist(s):\n  return s.find(\"S\") - s.find(\"G\") - 1\n\na, b = map(int, input().split())\ndists = [dist(input()) for i in range(a)]\nif min(dists) < 0:\n  print(-1)\nelse:\n  print(len(set(dists)))", "n, m = list(map(int, input().split()))\nd = [0] * m\nfor i in range(n):\n    t = input()\n    d[t[t.find('G') + 1: ].find('S')] = 1\nif d[-1]: print(-1)\nelse: print(sum(d))\n", "import sys\n\ntry:\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nexcept:\n    pass\n\nn, m = (int(i) for i in input().split())\nstr = [input() for i in range(0, n)]\narr = []\nfor i in range(0, n):\n    t1, t2 = 0, 0\n    for j in range(0, m):\n        if str[i][j] == 'G':\n            t1 = j\n        elif str[i][j] == 'S':\n            t2 = j\n    if t1 > t2:\n        print(-1)\n        return\n    if t1 < t2:\n        arr.append(t2 - t1)\narr.sort()\nanswer = 0\nif (len(arr) > 0):\n    answer += 1\nfor i in range(1, len(arr)):\n    if arr[i] != arr[i - 1]:\n        answer += 1\nprint(answer)", "h, w = list(map(int, input().split()))\n\nans = set()\ngood = True\nfor i in range(h):\n    s = input()\n    pg = -1\n    ps = -1\n    for j in range(w):\n        if s[j] == 'G':\n            pg = j\n        elif s[j] == 'S':\n            ps = j\n    if ps < pg:\n        good = False\n    ans.add(ps - pg)\n    \nif not good:\n    print(-1)\nelse:\n    print(len(ans))\n", "n,m=list(map(int,input().split()))\n\nli=[0]*1002\nfor i in range(0,n):\n    a=input()\n    pG=0\n    pS=0\n    for j in range(0,m):\n        if a[j]=='G':\n            pG=j\n        elif a[j]=='S':\n            pS=j\n    if pS<pG:\n        print(-1)\n        break\n    li[pS-pG]=1;\nelse:\n    ans=0\n    for i in range(1,1002):\n        ans+=li[i]\n    print(ans)\n    \n", "n, m = map(int, input().split())\nc = set(s.find(\"S\") - s.find(\"G\") for s in (input() for _ in range(n)))\nif all(a >= 0 for a in c):\n  c.discard(0)\n  print(len(c))\nelse:\n  print(-1)", "n, m = map(int, input().split())\nc = set(s.find(\"S\") - s.find(\"G\") for s in (input() for _ in range(n)))\nprint(-1 if any(a < 0 for a in c) else len(c))", "ds = set()\nn, m = map(int, input().split())\nfor i in range(n):\n    r = input()\n    d = r.index('S') - r.index('G')\n    if d < 0:\n        print(-1)\n        return\n    ds.add(d)\nprint(len(ds))", "n, m = (int(x) for x in input().split())\nst = set()\nfor i in range(n):\n\ts = input()\n\tg = s.index('G')\n\ts = s.index('S')\n\tif g > s:\n\t\tprint(-1)\n\t\treturn\n\tst.add(s - g)\nprint(len(st))\n", "def main():\n    n, _ = list(map(int, input().split()))\n    res = set()\n    for _ in range(n):\n        a = input()\n        s, g = a.find(\"S\"), a.find(\"G\")\n        if s < g:\n            print(-1)\n            return\n        res.add(s - g)\n    print(len(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s=set()\nn,m=input().split(\" \")\nn=int(n)\nm=int(m)\nfor i in range(n):\n    test=input()\n    if(test.find(\"S\")-test.find(\"G\")<0):\n        print(-1)\n        return\n        break\n    else:\n        s.add(int(test.find('S')-test.find(\"G\")))\nprint(len(s))", "'''\nCreated on 27.4.2016\n\n@author: Ivan\n'''\nimport sys\ndef main():\n    line = input()\n    parts = line.split(\" \")\n    a = int(parts[0])\n    b = int(parts[1])\n    list = []\n    for i in range(0, a):\n        list.append(input())\n    pairs = []\n    res = 0\n    for l in list:\n        x = l.find(\"G\")\n        y = l.find(\"S\")\n        print()\n        if y < x:\n            print(\"-1\")\n            return\n        pairs.append((y - x))\n    pairs = set(pairs)\n    print(str(len(pairs)))\ndef __starting_point():\n    main()\n__starting_point()", "n,m=list(map(int,input().split()))\nsol=True\ndst=set()\nfor _ in range(n):\n  l=input()\n  g=s=0\n  for j in range(m):\n    if l[j]=='G':\n      g=j\n    if l[j]=='S':\n      s=j\n  if s<g:\n    sol=False\n  else:\n    dst.add(g-s)\nprint(len(dst) if sol else -1)\n", "n,m=list(map(int,input().split()))\ndst=set()\nfor _ in range(n):\n  l=input()\n  s=l.find('S')\n  g=l.find('G')\n  if s<g:\n    print(-1)\n    return\n  else:\n    dst.add(g-s)\nprint(len(dst))\n", "n, m = list(map(int, input().split()))\nbad = False\nd = set()\nfor i in range(n):\n  inp = list(input())\n  s = inp.index(\"S\")\n  g = inp.index(\"G\")\n  if s < g:\n    bad = True\n  else:\n    d.add(s - g)\n\nif bad:\n  print(-1)\nelse:\n  print(len(d))\n", "n,m=list(map(int,input().split()))\ns=[]\nfor i in range(n):\n\tp=input()\n\tfor i in range(len(p)):\n\t\tif p[i]=='G':\n\t\t\tx=i\n\t\telif p[i]=='S':\n\t\t\ty=i\n\ts.append([x,y])\nans=0\np=[]\nfor i in s:\n\tif i[0]>i[1]:\n\t\tprint(-1)\n\t\treturn\n\telif i[0]<i[1]:\n\t\tp.append(i[1]-i[0])\nt=0\np=set(p)\nprint(len(p)) \n", "n, m = map(int, input().split())\nc = set(s.find(\"S\") - s.find(\"G\") for s in (input() for _ in range(n)))\nprint(-1 if any(a < 0 for a in c) else len(c))", "import math\ndef solution():\n\tn,m = [int(x) for x in input().split(' ')]\n\tmatrix = []\n\ts = []\n\tfor i in range(n):\n\t\tline = list(input())\n\t\tmatrix.append(line)\n\t\tcoo = line.index('S') - line.index('G')\n\t\tif coo<0:\n\t\t\treturn -1\n\t\ts.append(coo)\n\ts = set(s)\n\treturn len(s)\n\nprint(solution())", "n, m = map(int, input().split())\n\ndistances_map = {}\nnum_distances = 0\n\nfor i in range(n):\n  line = input()\n  indexG = 0\n  indexS = 0\n  for j in range(len(line)):\n    if (line[j] == \"G\"):\n      indexG = j\n    elif (line[j] == \"S\"):\n      indexS = j\n\n  dist = indexS - indexG\n  if (dist < 0):\n    num_distances = -1\n    break\n  elif (dist not in distances_map):\n    distances_map[dist] = 1\n    num_distances += 1\n\nprint (num_distances)"]