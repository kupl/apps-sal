["n, m = [int(x) for x in input().split()]\n\nc = 0\nfor _ in range(n):\n    a = [int(x) for x in input().split()]\n    for i in range(m):\n        if a[i * 2] or a[i * 2 + 1]:\n            c += 1\n\nprint(c)\n", "n, m = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    for t in range(m):\n        if a[t * 2] == 1 or a[t * 2 + 1] == 1:\n            ans += 1\nprint(ans)\n", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        n, m = list(map(int, input().split()))\n        result = 0\n        for i in range(n):\n            a = list(map(int, input().split()))\n            for j in range(m):\n                if a[j << 1] or a[j << 1 | 0x1]:\n                    result += 1\n        print(result)\nexcept EOFError:\n    pass\n", "n, m = [int(s) for s in input().split()]\nc = 0\nfor j in range(n):\n    s = input().split()\n    for i in range(0, 2*m, 2):\n        if s[i] == '1' or s[i+1] == '1':\n            c+=1\nprint(c)\n", "n, m = map(int, input().split())\narr = [list(map(int, input().split())) for i in range(n)]\nans = 0\nfor i in arr:\n    for k in range (m):\n        if (i[2 * k + 1] == 1 or i[2 * k] == 1):\n            ans += 1\nprint(ans)", "import math\nfrom decimal import *\nimport sys\nfrom fractions import Fraction\n\ninp=input().split()\nn=int(inp[0])\nm=int(inp[1])\nans=0\nfor i in range(0,n):\n    row = list(map(int,input().split()))\n    for j in range(0,m):\n        if row[2*j] == 1 or row[2*j+1] == 1:\n            ans+=1\nprint(ans)\n\n    \n    \n", "N, M = map(int, input().split())\nSum = 0\nfor i in range(N):\n    a = list(map(int, input().split()))\n    for j in range(M):\n        if a[2*j] or a[2*j + 1]:\n            Sum += 1\nprint(Sum)", "# import sys\n# n = int(input())\n# s = input().strip()\n# a = [int(tmp) for tmp in input().split()]\n# for i in range(n):\nn, m = [int(tmp) for tmp in input().split()]\nans = 0\nfor i in range(n):\n    lvl = [int(tmp) for tmp in input().split()]\n    for j in range(m):\n        if lvl[2 * j] == 1 or lvl[2 * j + 1] == 1:\n            ans += 1\nprint(ans)", "import sys\n\n\n#sys.stdin = open(\"input.txt\")\n#sys.stdout = open(\"output.txt\", \"w\")\n\nn, m = (int(i) for i in input().split())\nans = 0\nfor i in range(n):\n\tlst = [int(j) for j in input().split()]\n\tfor j in range(m):\n\t\tif lst[2*j] == 1 or lst[2*j + 1] == 1:\n\t\t\tans += 1\nprint(ans)\t", "n,m = list(map(int, input().split()))\nans = 0;\nfor i in range(n):\n\tints = list(map(int, input().split()))\n\tfor j in range(m):\n\t\tif any(ints[2*j: 2*j+2]):\n\t\t\tans += 1\nprint (ans)\n", "n, m = list(map(int, input().split()))\ncnt = 0\nfor i in range(n):\n    a = list(map(int, input().split()))\n    for j in range(0, 2 * m, 2):\n        cnt += a[j] or a[j + 1]\nprint(cnt)\n", "n, m = list(map(int, input().split()))\nsum1 = 0\nfor i in range(n):\n    ar = list(map(int, input().split()))\n    for j in range(len(ar) - 1):\n        if (j % 2 == 0):\n            if (ar[j] or ar[j + 1]):\n                sum1 += 1\nprint(sum1)\n", "n, m = map(int, input().split())\nans = 0\nfor i in range(n):\n    row = list(map(int, input().split()))\n    for j in range(0, 2 * m, 2):\n        if row[j] + row[j + 1] > 0:\n            ans += 1\n\nprint(ans)", "read = lambda: list(map(int, input().split()))\nn, m = read()\na = [list(read()) for i in range(n)]\ncnt = 0\nfor i in range(n):\n    for j in range(m):\n        if a[i][2 * j + 1] == 1 or a[i][2 * j] == 1:\n            cnt += 1\nprint(cnt)\n", "__author__ = 'cmashinho'\n\nn, m = map(int, input().split())\nans = 0\n\nfor _ in range(n):\n    l = list(map(int, input().split()))\n    for i in range(1, len(l), 2):\n        if l[i] == 1 or l[i - 1] == 1:\n            ans += 1\n\nprint(ans)", "n, m = map(int, input().split())\narr = [0] * n\ncnt = 0\nfor i in range(n):\n    arr[i] = [int(x) for x in input().split()]\n\nfor i in range(n):\n    for j in range(0, 2 * m, 2):\n        try:\n            if arr[i][j] == 1 or arr[i][j+1] == 1:\n                cnt += 1\n        except:\n            pass\n\nprint(cnt)", "def __starting_point():\n    n, m = map(int, input().split())\n\n    total = 0\n    for x in range(n):\n        data = list(map(int, input().split()))\n        total += sum(map(lambda x: min(1, x[0] + x[1]), zip(data[0::2], data[1::2])))\n\n    print(total)\n__starting_point()", "n,m = list(map(int,input().split()))\nL = [list(map(int, input().split())) for _ in range(n)]\nr = 0\nfor k in range(n):\n    for i in range(m):\n        if L[k][2*i+1] or L[k][2*i]:\n            r+=1\nprint(r)\n\n", "n, m = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    appts = list(map(int, input().split()))\n    for j in range(m):\n        x = appts[2*j]\n        y = appts[2*j + 1]\n        c += (1 if (x > 0 or y > 0) else 0)\n\nprint(c)\n", "n,m=map(int,input().split())\na=[0]*n\nk=0\nfor i in range(n):\n    a[i]=list(map(int,input().split()))\nfor i in range(n):\n    for j in range(0,2*m,2):\n        if a[i][j]==1 or a[i][j+1]==1:\n            k+=1\nprint(k)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn,m = list(map(int,input().split()))\nans = 0\nfor i in range(n):\n    flats = list(map(int,input().split()))\n    f = [False for i in range(m)]\n    for j in range(m*2):\n        f[j//2] |= True if flats[j] == 1 else False\n    ans += f.count(True)\nprint(ans)\n", "n, m = list(map(int, input().split()))\nsum = 0\nfor k in range(n):\n    tmp = list(map(int, input().split()))\n    i = 0\n    for j in range(m):\n        if tmp[i] or tmp[i + 1]:\n            sum += 1\n        i += 2\nprint(sum)\n", "n, m = map(int, input().split())\narr = [list(map(int, input().split())) for i in range(n)]\nh = [[False for j in range(m)] for i in range(n)]\ncnt = 0\nfor i in range(n):\n    for j in range(m):\n        h[i][j] = arr[i][j*2] or arr[i][j*2+1]\n        if h[i][j]:\n            cnt += 1\nprint(cnt)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n#   = input()\n#   = int(input())\n\n#() = (i for i in input().split())\n#   = [i for i in input().split()]\n\n(n, m) = (int(i) for i in input().split())\napp    = []\nfor i in range(n):\n\n    app.append([ 0 for j in range(m) ])\n    a = [int(j) for j in input().split()]\n\n    for j in range(len(a)):\n        app[i][divmod(j, 2)[0]] += a[j]\n\nstart = time.time()\n\n#print(app)\ns = 0\nfor i in range(n):\n    s += sum([1 for j in app[i] if j>0])\n\nprint(s)\nfinish = time.time()\n#print(finish - start)\n", "n,m = list(map(int,input().split()))\n\ntotal = 0\n\nfor i in range(n):\n    arr = list(map(int,input().split()))\n    j = 0\n    while j < 2 * m:\n        total += arr[j] or arr[j + 1]\n        j += 2\n\nprint(total)\n"]