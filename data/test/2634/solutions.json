["class Solution:\n     def subsets(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         subsets = [[]]\n         for v in nums:\n             extra = []\n             for s in subsets:\n                 extra.append(s+[v])\n             subsets += extra\n         return subsets", "class Solution:\n     def subsets(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         def mask(x):\n             return 1 << x\n         \n         exp = 1 << len(nums)\n         ans = []\n         for count in range(exp):\n             new = []\n             i = 0\n             while mask(i) <= count:\n                 if mask(i) & count:\n                     new.append(nums[i])\n                 i += 1\n             ans.append(new)\n         return ans", "class Solution:\n     def subsets(self, nums):\n         \"\"\"\n         :type nums: List[int]\n         :rtype: List[List[int]]\n         \"\"\"\n         result = [[]]\n         for num in nums:\n             result += self.get_subset(result, num)\n         return result\n         \n     def get_subset(self, subsets, item):\n         \n         new_subset_with_item = []\n         for subset in subsets:\n             new_subset_with_item.append(subset + [item])\n         \n         return new_subset_with_item\n         \n"]