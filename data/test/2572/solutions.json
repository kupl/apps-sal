["for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    arr = [list(map(int, input().split())) for _ in range(n)]\n    res = 0\n    for i in range(n//2):\n        for j in range(m//2):\n            a = [arr[i][j], arr[n-i-1][j], arr[i][m-j-1], arr[n-i-1][m-j-1]]\n            a.sort()\n            res += (a[1]-a[0]) + (a[2]-a[1]) + (a[3]-a[1])\n    if n%2 == 1:\n        i = n//2\n        for j in range(m//2):\n            res += abs(arr[i][j] - arr[i][m-j-1])\n    if m%2 == 1:\n        j = m//2\n        for i in range(n//2):\n            res += abs(arr[i][j] - arr[n-i-1][j])\n    print(res)\n", "for _ in range(int(input())):\n    n,m=map(int,input().split())\n    x=[]\n    for i in range(n):x.append([*map(int,input().split())])\n    s=0\n    for i in range(n//2):\n        for j in range(m//2):\n            a,b,c,d=sorted([x[i][j],x[i][m-1-j],x[n-1-i][j],x[n-1-i][m-1-j]])\n            s+=d+c-b-a\n    for i in range(n//2,(n+1)//2):\n        for j in range(m//2):\n            s+=abs(x[i][j]-x[i][m-1-j])\n    for j in range(m//2,(m+1)//2):\n        for i in range(n//2):\n            s+=abs(x[i][j]-x[n-1-i][j])\n    print(s)", "import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, m = map(int, input().split())\n    alst = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n // 2):\n        for j in range(m // 2):\n            lst = [alst[i][j], alst[n - 1 - i][j], \n                    alst[i][m - 1 - j], alst[n - 1 - i][m - 1 - j]]\n            lst.sort()\n            mean = lst[1]\n            for num in lst:\n                ans += abs(num - mean)\n    if n % 2 == 1:\n        for j in range(m // 2):\n            num1 = alst[n // 2][j]\n            num2 = alst[n // 2][m - 1 - j]\n            ans += abs(num1 - num2)\n    if m % 2 == 1:\n        for i in range(n // 2):\n            num1 = alst[i][m // 2]\n            num2 = alst[n - 1 - i][m // 2]\n            ans += abs(num1 - num2)\n    \n    print(ans)\n            \n    \nfor _ in range(int(input())):\n    main()", "import sys\nimport heapq, functools, collections\nimport math, random\nfrom collections import Counter, defaultdict\n\n# available on Google, not available on Codeforces\n# import numpy as np\n# import scipy\n\n\ndef solve(grid, h, w):  # fix inputs here\n    console(\"----- solving ------\")\n    console(grid)\n\n    lst = []\n\n    for i,row in enumerate(grid):\n        for j,cell in enumerate(row):\n            lst.append([\n                grid[h-i-1][w-j-1],\n                grid[h-i-1][j],\n                grid[i][w-j-1],\n                grid[i][j],\n            ])\n\n    res = 0\n    for vals in lst:\n        vals = sorted(vals)\n        median = (vals[1] + vals[2]) // 2\n        for v in vals:\n            res += abs(v-median)\n    # return a string (i.e. not a list or matrix)\n    return res//4\n\n\ndef console(*args):  # the judge will not read these print statement\n    # print('\\033[36m', *args, '\\033[0m', file=sys.stderr)\n    return\n\n# fast read all\n# sys.stdin.readlines()\n\nfor case_num in range(int(input())):\n    # read line as a string\n    # strr = input()\n\n    # read line as an integer\n    # k = int(input())\n    \n    # read one line and parse each word as a string\n    # lst = input().split()\n\n    # read one line and parse each word as an integer\n    nrows, w = list(map(int,input().split()))\n\n    # read matrix and parse as integers (after reading read nrows)\n    # lst = list(map(int,input().split()))\n    # nrows = lst[0]  # index containing information, please change\n    grid = []\n    for _ in range(nrows):\n        grid.append(list(map(int,input().split())))\n\n    res = solve(grid, h=nrows, w=w)  # please change\n    \n    # Google - case number required\n    # print(\"Case #{}: {}\".format(case_num+1, res))\n\n    # Codeforces - no case number required\n    print(res)\n", "t=int(input())\nfor _ in range(t):\n    n, m=map(int, input().split())\n    a=[]\n    ans=0\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n//2):\n        for j in range(m//2):\n            u=[a[i][j], a[i][m-1-j], a[n-1-i][j], a[n-1-i][m-1-j]]\n            u.sort()\n            ans+=u[2]-u[0]+u[3]-u[1]\n    if n%2!=0:\n        for j in range(m//2):\n            u=[a[n//2][j], a[n//2][m-1-j]]\n            u.sort()\n            ans+=u[1]-u[0]\n    if m%2!=0:\n        for i in range(n//2):\n            u=[a[i][m//2], a[n-1-i][m//2]]\n            u.sort()\n            ans+=u[1]-u[0]\n    print(ans)", "for _ in range(int(input())):\n    n, m = tuple(map(int, input().split()))\n    arr = []\n    for i in range(n):\n        arr.append(list(map(int, input().split())))\n\n    ans = 0\n    for i in range((n + 1) // 2):\n        for j in range((m + 1) // 2):\n            elems = [arr[i][j]]\n            a = (n % 2 == 1 and i == n // 2)\n            b = (m % 2 == 1 and j == m // 2)\n            if not a:\n                elems.append(arr[n - i - 1][j])\n            if not b:\n                elems.append(arr[i][m - j - 1])\n            if not a and not b:\n                elems.append(arr[n - i - 1][m - j - 1])\n\n            elems.sort()\n            x = len(elems) // 2\n            for k in range(len(elems)):\n                if k != x:\n                    ans += abs(elems[k] - elems[x])\n\n    print(ans)\n", "import statistics\n\nT = int(input())\n\n\ndef cnt(points):\n    med = statistics.median(points)\n    # print('points', points, 'med',med)\n    return int(sum(abs(p-med) for p in points))\n\nfor t in range(T):\n    N, m = [int(_) for _ in input().split()]\n    M = []\n    for i in range(N):\n        row = [int(_) for _ in input().split()]\n        M.append(row)\n\n    answer = 0\n\n    for i in range(N):\n        for j in range(m):\n            mir_left = m-j-1\n            points = []\n            points.append(M[i][j])\n            if mir_left > j:\n                points.append(M[i][mir_left])\n            elif mir_left < j:\n                continue\n            mir_bot = N-i-1\n            if mir_bot > i:\n                points.append(M[mir_bot][j])\n            elif mir_bot < i:\n                continue\n            if mir_left > j and mir_bot > i:\n                points.append(M[mir_bot][mir_left])\n            answer += cnt(points)\n\n    print(answer)\n", "import sys\ninput = sys.stdin.readline\ndef print(val):\n    sys.stdout.write(str(val) + '\\n')\ndef prog():\n    for _ in range(int(input())):\n        n,m = map(int,input().split())\n        a = [list(map(int,input().split())) for i in range(n)]\n        ans = 0\n        for i in range(n//2):\n            for j in range(m//2):\n                four = [a[i][j],a[n-1-i][j],a[n-1-i][m-1-j],a[i][m-1-j]]\n                four.sort()\n                ans += four[3] - four[0] + four[2] - four[1]\n        if n % 2:\n            for j in range(m//2):\n                ans += abs(a[n//2][j] - a[n//2][m-1-j])\n        if m % 2:\n            for i in range(n//2):\n                ans += abs(a[n-1-i][m//2] - a[i][m//2])\n                \n        print(ans)\nprog()\n", "t=int(input())\nfor you in range(t):\n    l=input().split()\n    n=int(l[0])\n    m=int(l[1])\n    l=[]\n    for i in range(n):\n        lo=input().split()\n        li=[int(i) for i in lo]\n        l.append(li)\n    ans=0\n    for i in range((n+1)//2):\n        for j in range((m+1)//2):\n            lp=[]\n            num1=l[i][j]\n            lp.append(num1)\n            num2=l[n-i-1][j]\n            if(n-1-i!=i):\n                lp.append(num2)\n            num3=l[i][m-1-j]\n            if(m-1-j!=j):\n                lp.append(num3)\n            num4=l[n-1-i][m-1-j]\n            if(n-1-i!=i and m-1-j!=j):\n                lp.append(num4)\n            lp.sort()\n            z=len(lp)\n            for k in range(z):\n                ans=ans+abs(lp[k]-lp[z//2])\n    print(ans)", "t = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    for i in range(n // 2):\n        for j in range(m // 2):\n            s = [a[i][j], a[n - i - 1][j], a[i][m - j - 1], a[n - i - 1][m - j - 1]]\n            s.sort()\n            for t in s:\n                ans += abs(t - s[1])\n    if n % 2 == 1:\n        for i in range(m // 2):\n            ans += abs(a[n // 2][i] - a[n // 2][m - i - 1])\n    if m % 2 == 1:\n        for i in range(n // 2):\n            ans += abs(a[i][m // 2] - a[n - i - 1][m // 2])\n    print(ans)", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\n#from math import ceil\n\ndef solve():\n\tn, m = mints()\n\ta = [None]*n\n\tfor i in range(n):\n\t\ta[i] = list(mints())\n\tres = 0\n\tfor i in range(n):\n\t\tif i <= n-1-i:\n\t\t\tfor j in range(m):\n\t\t\t\tif j <= m-1-j:\n\t\t\t\t\ts = set([(x,y) for x in (i, n-1-i) for y in (j, m-1-j)])\n\t\t\t\t\tv = [a[x][y] for x, y in s]\n\t\t\t\t\tv.sort()\n\t\t\t\t\tc = v[len(v)//2]\n\t\t\t\t\tfor x in v:\n\t\t\t\t\t\tres += abs(x-c)\n\tprint(res)\n\nfor i in range(mint()):\n\tsolve()\n", "t=int(input())\nfor u in range(t):\n    x=[int(x) for x in input().split()]\n    n=x[0]\n    m=x[1]\n    k=[[[] for j in range((m+1)//2)] for i in range((n+1)//2)]\n    \n    for i in range(n//2):\n        inp = [int(x) for x in input().split()]\n        for j in range(m//2):\n            k[i][j].append(inp[j])\n        for j in range((m+1)//2):\n            k[i][j].append(inp[m-j-1])\n    for i in range((n+1)//2):\n        inp = [int(x) for x in input().split()]\n        for j in range(m//2):\n            k[(n+1)//2-1-i][j].append(inp[j])\n        for j in range((m+1)//2):\n            k[(n+1)//2-1-i][j].append(inp[m-j-1])\n    ans = 0\n    for i in range((n+1)//2):\n        for j in range((m+1)//2):\n            if i==n//2:\n                if j!=m//2:\n                    ans+=max(k[i][j])-min(k[i][j])\n            elif j==m//2:\n                ans+=max(k[i][j])-min(k[i][j])\n            else:\n                k[i][j].sort()\n                ans+=k[i][j][3]\n                ans+=k[i][j][2]\n                ans-=k[i][j][1]\n                ans-=k[i][j][0]\n    print(ans)", "t = int(input())\n\ndef f(*a):\n    ans = int(1e19)\n    for i in a:\n        ans = min(ans, sum(abs(n - i) for n in a))\n    # print(a, ans)\n    return ans\n\nfor tt in range(t):\n    n, m = list(map(int, input().split()))\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    i, j = 0, n - 1\n    k, l = 0, m - 1\n    ans = 0\n    while i <= j:\n        k, l = 0, m - 1\n        while k <= l:\n            if i != j and k != l:\n                ans += f(a[i][k], a[i][l], a[j][k], a[j][l])\n            elif i == j:\n                ans += f(a[i][k], a[i][l])\n            elif k == l:\n                ans += f(a[i][l], a[j][l])\n            k += 1\n            l -= 1\n        i += 1\n        j -= 1\n    print(ans)\n", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\nt = int(input())\nfor _ in range(t):\n    n, m = map(int, input().split())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    ans = 0\n    for i in range(n//2):\n        for j in range(m//2):\n            tmp = [a[i][j], a[i][m-j-1], a[n-i-1][j], a[n-i-1][m-j-1]]\n            tmp.sort()\n            ans += tmp[3]+tmp[2]-tmp[1]-tmp[0]\n    if n%2:\n        for j in range(m//2):\n            ans += abs(a[n//2][j]-a[n//2][m-j-1])\n    if m%2:\n        for i in range(n//2):\n            ans += abs(a[i][m//2]-a[n-i-1][m//2])\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    A=[list(map(int,input().split())) for i in range(n)]\n\n    ANS=0\n\n    for i in range((n+1)//2):\n        for j in range((m+1)//2):\n            if i*2+1==n and j*2+1==m:\n                continue\n\n            elif i*2+1==n:\n                X=[A[i][j],A[i][m-1-j]]\n                ANS+=abs(X[1]-X[0])\n                    \n            elif j*2+1==m:\n                X=[A[i][j],A[n-1-i][j]]\n                ANS+=abs(X[1]-X[0])\n\n            else:\n                X=sorted([A[i][j],A[n-1-i][j],A[i][m-1-j],A[n-1-i][m-1-j]])\n                ANS+=X[1]-X[0]+(X[2]-X[1])+(X[3]-X[1])\n    print(ANS)\n                \n                \n", "from bisect import *\nfrom collections import *\nfrom math import *\nfrom heapq import *\nfrom typing import List\nfrom itertools import *\nfrom operator import *\nfrom functools import *\nimport sys\n'''\n@lru_cache(None)\ndef fact(x):\n    if x<2:\n        return 1\n    return fact(x-1)*x\n\n@lru_cache(None)\ndef per(i,j):\n    return fact(i)//fact(i-j)\n\n@lru_cache(None)\ndef com(i,j):\n    return per(i,j)//fact(j)\n\ndef linc(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t>f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rinc(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t<f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef ldec(f,t,l,r):\n    while l<r:\n        mid=(l+r)//2\n        if t<f(mid):\n            l=mid+1\n        else:\n            r=mid\n    return l\n\ndef rdec(f,t,l,r):\n    while l<r:\n        mid=(l+r+1)//2\n        if t>f(mid):\n            r=mid-1\n        else:\n            l=mid\n    return l\n\ndef isprime(n):\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            return False\n    return True\n\ndef power2(n):\n    while not n&1:\n        n>>=1\n    return n==1\n'''\n'''\nimport time\ns=time.time()\ne=time.time()\nprint(e-s)\n'''\n\nt=int(input())\nfor i in range(t):\n    n,m=list(map(int,input().split()))\n    arr=[]\n    for i in range(n):\n        arr.append(list(map(int,input().split())))\n    used=set()\n    ans=0\n    for i in range(n//2+1):\n        for j in range(m//2+1):\n            if (i,j) not in used:\n                tmp=set([(i,j),(n-1-i,j),(n-1-i,m-1-j),(i,m-1-j)])\n                used|=tmp\n                if len(tmp)==1:\n                    continue\n                elif len(tmp)==2:\n                    (x,y),(a,b)=tmp\n                    ans+=abs(arr[x][y]-arr[a][b])\n                else:\n                    res=[]\n                    for x,y in tmp:\n                        res.append(arr[x][y])\n                    res.sort()\n                    ans+=min(sum(abs(res[i]-res[j]) for j in range(4)) for i in range(1,3))\n\n    print(ans)\n'''\nn,m=map(int,input().split())\na=[]\nb=[]\nc=[]\nd=[]\nfor i in range(n):\n    ai,bi=map(int,input().split())\n    a.append(ai)\n    b.append(bi)\nfor i in range(m):\n    ci,di=map(int,input().split())\n    c.append(ci)\n    d.append(di)\ndic={}\nfor i in range(n):\n    for j in range(m):\n        x=c[j]-a[i]+1\n        y=d[j]-b[i]+1\n        if x>0 and y>0:\n            if x in dic:\n                dic[x]=min(dic[x],y)\n            else:\n                dic[x]=y\n#print(dic)\nif not dic:\n    ans=0\nelse:\n    res=sorted(dic.items())    \n    n=len(res)\n    ans=res[-1][0]\n    ym=res[-1][1]\n    for i in range(n-2,-1,-1):\n        ans=min(ans,res[i][0]+ym)\n        ym=max(ym,res[i][1])\n    ans=min(ym,ans)\nprint(ans)\n'''\n", "# map(int, input().split())\n\nrw = int(input())\nfor wewq in range(rw):\n    n, m = list(map(int, input().split()))\n    a = [0] * n\n    f = 0\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range((n + 1) // 2):\n        for j in range((m + 1) // 2):\n            if j > m // 2 - 1 or i > n // 2 - 1:\n                b = [a[i][j], a[n - i - 1][m - j - 1]]\n                f += abs(b[1] - b[0])\n                continue\n            b = [a[i][j], a[n - i - 1][j], a[i][m - j - 1], a[n - i - 1][m - j - 1]]\n            c = []\n            c.append(abs(b[0] - b[1]) + abs(b[0] - b[2]) + abs(b[0] - b[3]))\n            c.append(abs(b[1] - b[0]) + abs(b[1] - b[2]) + abs(b[1] - b[3]))\n            c.append(abs(b[2] - b[1]) + abs(b[2] - b[0]) + abs(b[2] - b[3]))\n            c.append(abs(b[3] - b[1]) + abs(b[3] - b[2]) + abs(b[3] - b[0]))\n            f += min(c)\n    print(f)\n", "from collections import defaultdict as dd, deque,Counter\nt = int(input())\n\nfor _ in range(t):\n    n,m = list(map(int,input().split()))\n    A = [[int(x) for x in input().split()] for _ in range(n)]\n    \n    cost = 0\n    for i in range(n):\n        for j in range(m):\n            ix = {(i,j), (n-i-1,j), (i,m-j-1), (n-i-1,m-j-1)}\n            vals = sorted([A[i][j] for i,j in ix])\n            b = vals[len(vals)//2]\n            cost += sum(abs(a-b) for a in vals)\n            A[i][j] = A[n-i-1][j] = A[i][m-j-1] = A[n-i-1][m-j-1] = b\n    print(cost)\n\n\n", "T = int(input())\nfor t in range(T):\n    n, m = map(int, input().split())\n    mat = []\n    for i in range(n):\n        mat.append([int(x) for x in input().split()])\n    def get_neighbs(i,j):\n        neighbs = set([(n-i-1, j), (i,m-j-1), (n-i-1, m-j-1), (i,j)])\n        # print(neighbs)\n        return [mat[i][j] for i,j in neighbs]\n    ans = 0\n    for i in range((n+1)//2):\n        for j in range((m+1)//2):\n            neighbs = get_neighbs(i,j)\n            neighbs.sort()\n            mid = neighbs[len(neighbs)//2]\n            a = sum(abs(x-mid) for x in neighbs)\n            mid = neighbs[(len(neighbs)-1)//2]\n            b = sum(abs(x-mid) for x in neighbs)\n            ans += min(a,b)\n    print(ans)"]