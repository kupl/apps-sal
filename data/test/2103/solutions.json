["n = int(input())\na = tuple(map(int, input().split()))\nsa = set(a)\nsan = set()\nmin_not_in = 0\nprev = 0\nans = [0] * n\nfor i in range(n):\n    cur = a[i]\n    if cur == prev:\n        while min_not_in in sa:\n            min_not_in += 1\n        ans[i] = min_not_in\n        sa.add(min_not_in)\n        san.add(min_not_in)\n    else:\n        ans[i] = prev\n        sa.add(prev)\n        san.add(prev)\n        while prev in san:\n            prev += 1\n        if cur != prev:\n            print(-1)\n            break\nelse:\n    print(*ans)\n", "from sys import stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\nn, = rl()\na = rl()\n\na_set = set(a)\nfree = 0\nprev = 0\nb = []\nfor cur in a:\n    if cur != prev:\n        b.append(prev)\n        if free == prev:\n            free += 1\n        prev = cur\n    else:\n        while free in a_set:\n            free += 1\n        b.append(free)\n        free += 1\nprint(*b)\n", "import sys\ninput = sys.stdin.readline\nn=int(input())\na=list(map(int,input().split()))\nsol=[-1]*n\ntouse=list(range(n+1))\nif a[0]==1:\n    sol[0]=0\n    touse[0]=-1\nfor i in range(1,n):\n    if a[i]>a[i-1]:\n        sol[i]=a[i-1]\n        touse[a[i-1]]=-1\nj=0\ntouse[a[-1]]=-1\nfor i in range(n):\n    if sol[i]==-1:\n        while touse[j]==-1:\n            j+=1\n        sol[i]=touse[j]\n        j+=1\nprint(*sol)", "from collections import deque\nimport sys\n\nN = int(input())\n\nA = [int(_) for _ in input().split()]\n\njokers = deque()\n\nB = [-1] * N\ncurrent = 0\n\n\nfor i, el in enumerate(A):\n    jokers.append(i)\n    if el != current:\n        for j in range(el - current):\n            if not jokers:\n                print(-1)\n                return\n            p = jokers.pop()\n            if A[p] == current + j:\n                print(-1)\n                return\n            else:\n                B[p] = current + j\n        current = el\n\nwhile jokers:\n    current += 1\n    p = jokers.pop()\n    B[p] = current\n\nprint(' '.join(map(str, B)))\n"]