["x = int(input())\nif x <= 6:\n    print((1))\n    return\nelif 7 < x <= 11:\n    print((2))\n    return\nelse:\n    n = x//11\n    if x - n*11 == 0:\n        print((2*n))\n        return\n    elif x - n*11 <= 6:\n        print((2*n+1))\n    else:\n        print((2*n+2))\n", "import bisect, copy, heapq, math, sys\nfrom collections import *\nfrom functools import lru_cache\nfrom itertools import accumulate, combinations, permutations, product\ndef input():\n    return sys.stdin.readline()[:-1]\ndef ruiseki(lst):\n    return [0]+list(accumulate(lst))\ndef celi(a,b):\n    return -(-a//b)\nsys.setrecursionlimit(5000000)\nmod=pow(10,9)+7\nal=[chr(ord('a') + i) for i in range(26)]\ndirection=[[1,0],[0,1],[-1,0],[0,-1]]\n\nx=int(input())\nif x%11==0:\n    print(x//11*2)\nelse:\n    print(x//11*2+(x%11)//7+1)", "x = int(input())\nif x <= 11:\n    if x <= 6:\n        print(1)\n    else:\n        print(2)\nelse:\n    ans = (x // 11) * 2\n    x = x % 11\n    if x == 0:\n        print(ans)\n    elif x <= 6:\n        print(ans + 1)\n    else:\n        print(ans + 2)", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nx = int(input())\n\nans = 0\nq = x // 11\nr = x % 11\n\nans += q * 2\nif r == 0:\n    pass\nelif r <= 6:\n    ans += 1\nelse:\n    ans += 2\n\nprint(ans)\n", "x = int(input())\n\nif 7 <= x <= 11:\n    print(2)\nelif x <= 6:\n    print(1)\nelse:\n    a, b = divmod(x, 11)\n    if b == 0:\n        print(2*a)\n    else:\n        if b <= 6:\n            print(2*a+1)\n        else:\n            print(2*a+2)", "N = int(input())\nans = (N//11)*2\nnokori = N%11\nif nokori == 0:\n  ans += 0\nelif nokori <= 6:\n  ans += 1\nelse:\n  ans += 2\nprint(ans)", "x = int(input())\nrem = x%11\ncnt = (x-rem)//11\ncnt *= 2\n\nif 0 < rem <= 6:\n    cnt += 1\nelif rem > 6:\n    cnt += 2\n\nprint(cnt)", "import sys\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right #func(\u30ea\u30b9\u30c8,\u5024)\nfrom heapq import heapify, heappop, heappush\nfrom itertools import product, permutations, combinations, combinations_with_replacement\nfrom functools import reduce\nfrom math import sin, cos, tan, asin, acos, atan\n\nsys.setrecursionlimit(10**6)\nINF = 10**20\neps = 1.0e-20\nMOD = 10**9+7\n\ndef lcm(x,y):\n    return x*y//gcd(x,y)\ndef lgcd(l):\n    return reduce(gcd,l)\ndef llcm(l):\n    return reduce(lcm,l)\ndef powmod(n,i,mod):\n    return pow(n,mod-1+i,mod) if i<0 else pow(n,i,mod)\ndef div2(x):\n    return x.bit_length()\ndef div10(x):\n    return len(str(x))-(x==0)\ndef perm(n,mod=None):\n    ans = 1\n    for i in range(1,n+1):\n        ans *= i\n        if mod!=None:\n            ans %= mod\n    return ans\ndef intput():\n    return int(input())\ndef mint():\n    return map(int,input().split())\ndef lint():\n    return list(map(int,input().split()))\ndef ilint():\n    return int(input()), list(map(int,input().split()))\ndef judge(x, l=['Yes', 'No']):\n    print(l[0] if x else l[1])\ndef lprint(l, sep='\\n'):\n    for x in l:\n        print(x, end=sep)\ndef ston(c, c0='a'):\n    return ord(c)-ord(c0)\ndef ntos(x, c0='a'):\n    return chr(x+ord(c0))\nclass counter(dict):\n    def __init__(self, *args):\n        super().__init__(args)\n    def add(self,x):\n        self.setdefault(x,0)\n        self[x] += 1\nclass comb():\n    def __init__(self, n, mod=None):\n        self.l = [1]\n        self.n = n\n        self.mod = mod\n    def get(self,k):\n        l,n,mod = self.l, self.n, self.mod\n        k = n-k if k>n//2 else k\n        while len(l)<=k:\n            i = len(l)\n            l.append(l[i-1]*(n+1-i)//i if mod==None else (l[i-1]*(n+1-i)*powmod(i,-1,mod))%mod)\n        return l[k]\n\nx = intput()\nprint(2*(x//11)+((x%11)!=0)+((x%11)>6))", "def main():\n    n = int(input())\n    ans = 0\n    ans += n // 11 * 2\n    if n % 11 <= 6 and n % 11 != 0:\n        ans += 1\n    elif n % 11 <= 10 and n % 11 > 6:\n        ans += 2\n    print(ans)\nmain()\n", "n = int(input())\nif n <= 6:\n    print((1))\nelif n % 11 == 0:\n    print((2 * (n // 11)))\nelif n % 11 <= 6:\n    print((2 * (n // 11) + 1))\nelse:\n    print((2 * n // 11 + 1))\n\n", "import sys\nimport bisect\ninput = sys.stdin.readline\n\nx = int(input())\nans = 2 * (x // 11)\nif 0 < x % 11 <= 6:\n    ans += 1\nelif x % 11 > 6:\n    ans += 2\nprint(ans)\n", "import sys\nimport math\nimport itertools\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N = I()\n    ans = 2 * (N // 11)\n    N-= (ans//2)*11\n    if N<= 6 and N > 0:\n        ans += 1\n    elif N >= 7:\n        ans += 2\n    print(ans)\n        \ndef __starting_point():\n    main()\n__starting_point()", "x = int(input())\n\nans = (x//11) * 2\namari = x % 11\nif amari == 0:\n    print(ans)\nelif amari <= 6:\n    print((ans+1))\nelse:\n    print((ans+2))\n", "import sys\n\nif sys.platform=='ios':\n\tsys.stdin=open('input_file.txt')\n\nx=int(input())\nk=x//11\n\nif x==11*k:\n\tans=2*k\nelif 11*k<x and x<=11*k+6:\n\tans=2*k+1\nelse:\n\tans=2*(k+1)\nprint(ans)", "import math\n\nx = int(input())\nif 1 <= x%11 <= 6:\n    print(math.ceil(x/11)*2 - 1)\nelse:\n    print(math.ceil(x/11)*2)", "x = int(input())\na = x//11\na *= 2\nb = x%11\nif b == 0:\n    None\nelif b <= 6:\n    a += 1\nelse:\n    a += 2\nprint(a)", "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nx = int(input())\n\ncnt = -(-x//11)\nif cnt*11-x>=5:\n    print(cnt*2-1)\nelse:\n    print(cnt*2)", "x=int(input())\nans=(x//11)*2\nif x%11>6: ans+=2\nelif x%11>0: ans+=1\nprint(ans)", "x = int(input())\nans = x//11*2\nx %= 11\nif x==0:\n  print(ans)\nelif x<=6:\n  print(ans+1)\nelse:\n  print(ans+2)", "x=int(input())\n\nans=(x//11)*2\nq=x%11\nif q==0:\n  print(ans)\nelif q<=6:\n  print(ans+1)\nelse:\n  print(ans+2)", "x = int(input())\nq = x // 11\nans = 2*q\nr = x % 11\nif r > 6:\n    ans += 2\nif 0 < r <= 6:\n    ans += 1\nprint(ans)\n", "import sys\n\nx = int(sys.stdin.readline())\nn = x // 11\nr = x % 11\nif r == 0:\n    print(2*n)\nelif r <= 6:\n    print(2*n + 1)\nelse:\n    print(2 * (n+1))", "x = int(input())\n\nans = x // 11 * 2\nprint((ans + (x % 11 > 0) + (x % 11 > 6)))\n", "import sys\ninput = sys.stdin.readline\n\nx = int(input())\nans = 0\nm = x//11\nn = x % 11\nif n == 0:\n    ans = 2*m\nif 0 < n and n <= 6:\n    ans = 2*m+1\nif 6 < n:\n    ans = 2*m+2\nprint(ans)\n", "x = int(input())\n\nans = (x//11)*2\nif 0<x%11<7:\n    ans += 1 \nelif x%11>=7:\n    ans += 2\nprint(ans)", "import math \nx = int(input())\n# x = 10**15\nxi = math.floor(x/5.5)\n# print(xi)\nfor i in range(xi,10000000000000000000000000000):\n    # print(6*i - math.floor(i/2))\n    if(x <= 6*i-math.floor(i/2)):\n        xa = i\n        break\n\nprint(xa)\n", "x = int(input())\n\nidx = x//11\nans = idx*2\n\nif x%11 != 0:\n  ans += 2\nif 0 < x%11 and x%11 <= 6:\n  ans -= 1\nprint(ans)", "x = int(input())\n\nif x <= 11:\n    if x <= 6:\n        print(1)\n    else:\n        print(2)\n        \nelse:\n    rot = x//11\n    mod = x%11\n    if mod > 6:\n        print(2*rot + 2)\n        return\n    if mod > 0:\n        print(2*rot + 1)\n        return\n    print(2*rot)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-12-05 14:11:23 +0900\n# LastModified: 2020-12-05 14:40:12 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    x = int(input())\n    if x % 11 == 0:\n        print((2*(x//11)))\n        return\n    tmp = x // 11\n    ans = tmp*2\n    new = x - tmp*11\n    if 0 < new <= 6:\n        print((ans+1))\n    else:\n        print((ans+2))\n\n\n\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "x=int(input())\nans=2*(x//11)\nx%=11\nif 0<x and x<7:ans+=1\nelif x!=0:ans+=2\nprint(ans)", "x = int(input())\nc = (x + 10) // 11 * 2\nif 11 * (c // 2) - 5 >= x:\n    c -= 1\nprint(c)\n", "x = int(input())\n\nn = (x-1) // 11\nif n*11 + 6 >= x:\n    print(n*2+1)\nelse:\n    print(n*2+2)", "x = int(input())\n\np = (x + 11 - 1) // 11\nq = (x + 11 - 1) % 11\nif q < 6:\n    ans = p * 2 - 1\nelse:\n    ans = p * 2\n\nprint(ans)", "N = int(input())\nif N%11 == 0:\n    print(N//11*2)\nelif 0 < N%11 <=6 :\n    print(N//11*2+1)\nelse:\n    print(N//11*2+2)", "N = int(input())\n\ndef solve(N):\n  cnt = 0\n  # 11\u304c\u4f55\u56de\u4f7f\u3048\u308b\u306e\u304b\n  cnt += (N // 11) * 2\n  N %= 11\n  \n  if 0 < N <= 6:\n    cnt += 1\n  elif 6< N < 11:\n    cnt += 2\n    \n  return cnt\n\nprint((solve(N)))\n", "x = int(input())\n\nc = (x // 11)*2\nif x % 11 == 0 :\n    ans = c\nelif x % 11 <= 6 :\n    ans = c + 1\nelse :\n    ans = c + 2\n\nprint(ans)\n", "x=int(input())\nans=(x//11)*2\nif x%11>6:ans+=2\nelif x%11>0:ans+=1\nprint(ans)", "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\n\nx = I()-1\nprint((x//11*2+1+(x%11)//6))\n", "x = int(input())\n\na = x//11\nb = x % 11\n\nif b == 0:\n  ans = a*2\nelif b in range(1, 7):\n  ans = a*2 + 1\nelse:\n  ans = a*2 + 2\n  \nprint(ans)\n", "def main():\n    N = int(input())\n    ans = (N // 11) * 2 \n    n = N % 11\n    if n > 6:\n        ans += 2\n    elif n > 0:\n        ans += 1\n    print(ans)\n    \ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    x = int(input())\n    div = x//11\n    rem = x%11\n    ans = div*2 + (1 <= rem <= 10) + (7 <= rem <= 10)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\n\n\ndef main():\n    x = int(input())\n    ans, mod = divmod(x, 11)\n    ans *= 2\n    if mod >= 7:\n        ans += 2\n    elif mod > 0:\n        ans += 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "x = int(input())\nn = x//11\nn = 2*n\nm = x%11\nif 1<=m<=6:\n    n += 1\nelif 7<=m<=10:\n    n += 2\nprint(n)", "N=int(input())\nn=N%11\nK=N//11*2\nif n==0:\n  pass\nelif 0<n<=6:\n  K+=1\nelse:\n  K+=2\nprint(K)", "n = int(input())\nans = n//11*2\nif 0 < n%11 <= 6:\n    ans += 1\nelif 6 < n%11 <= 10:\n    ans += 2\n\nprint(ans)", "x = int(input())\n\n# 2\n#364\n# 5\n# 1\n#\u30b5\u30a4\u30b3\u30ed\u306f\u3053\u3093\u306a\u3093\u306a\u306e\u3067\u30016,5,6,5,...\u3068\u70b9\u6570\u3092\u5f97\u3089\u308c\u308b\n#x\u30926+5\u3092\u4f55\u56de\u51fa\u305b\u3070\u826f\u3044\u304b\u3068\u3044\u3046\u89b3\u70b9\u3067\u8003\u3048\u308b\na = x//11\nb = x%11\nif b==0:\n    print(a*2)\nelif b<=6:\n    print(a*2+1)\nelse:\n    print(a*2+2)", "x=int(input())\nans1,mod=divmod(x,11)\nif mod==0:\n    print(ans1*2)\nelif 1<=mod<=6:\n    print(ans1*2+1)\nelse:\n    print(ans1*2+2)", "x=int(input())\nprint(x//11*2+(x%11>0)+(x%11>6))", "x=int(input())\n\nif x<=6:\n  print((1))\nelif x<=11:\n  print((2))\nelse:\n  if x%11==0:\n    print((2*(x//11)))\n  else:\n    if (x-(x//11)*11)<=6:\n      print((2*(x//11)+1))\n    elif (x-(x//11)*11)<=11:\n      print((2*(x//11)+2))\n", "x=int(input())\nans=(x//11)*2\nx=x%11\nif 1<=x<=6:\n    ans+=1\nif 7<=x<=11:\n    ans+=2\nprint(ans)\n\n", "def resolve():\n  from math import ceil\n  # \u597d\u304d\u306a\u9762\u304b\u3089\u958b\u59cb\u3067\u304d\u308b\u306e\u3067\u30016, 5, 6, 5\u30fb\u30fb\u30fb\u306e\u7e70\u308a\u8fd4\u3057\u304c\u3067\u304d\u308b\u3002\n  # X//11*2 + (X%11)//6 + floor((X%11)%6)\u30fb\u30fb\u30fb\uff1f\n  X = int(input())\n  print((X//11)*2 + ceil((X%11)/6))\nresolve()", "x = int(input())\nx_mod = x % 11\nx_div = x//11\nif x % 11 == 0:\n    print((x//11*2))\nelif x % 11 <= 6:\n    print((x//11*2+1))\nelse:\n    print((x//11*2+2))\n", "x = int(input())\ny = x % 11\nif y > 0:\n    cnt = 1\n    if y > 6:\n        cnt += 1\nelse:\n    cnt = 0\n    \nprint((x // 11) * 2 + cnt)", "x = int(input())\n\nif x <= 6:\n    print(1)\nelif x <= 11:\n    print(2)\nelse:\n    d = x//11\n    m = x%11\n\n    if m == 0:\n        print(d*2)\n    elif m <= 6:\n        print(d*2+1)\n    else:\n        print(d*2+2)", "x = int(input())\ncnt = 0\ncnt += (x // 11) * 2\nif 0 < x % 11 <= 6:\n    cnt += 1\nelif 6 < x % 11 < 11:\n    cnt += 2\nprint(cnt)", "x = int(input())\nans = x // 11 * 2\nrem = x % 11\nif rem > 6:\n    ans += 2\nelif rem > 0:\n    ans += 1\nprint(ans)\n", "import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef MI1(): return list(map(int1, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input().strip('\\n'))\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\nINF = float('inf')\n# from bisect import bisect_left, bisect_right\n# from heapq import heapify, heappop, heappush\nfrom math import ceil, floor, log2, log, sqrt\nfrom itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\nfrom collections import deque, defaultdict\nfrom pprint import pprint\n# import numpy as np    # cumsum\n\ndef solve():\n    x = II()\n\n    p, q = x // 11, x % 11\n    p *= 2\n    if q == 0:\n        pass\n    elif q <= 6:\n        p += 1\n    else:\n        p += 2\n    print(p)\n\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "X = int(input())\np = X // 11\nq = ((X % 11) + 6 - 1) // 6\nprint((p * 2 + q))\n", "x = int(input())\n\nrt = (x //11)*2\ntmp = x % 11\nif tmp >6:\n  rt+=1\n  tmp -=6\n\nprint(rt+1 if tmp>0 else rt)", "x = int(input())\nans = x // 11 * 2\nrem = x % 11\nif rem != 0 and rem < 7:\n    ans += 1\nelif rem != 0 and rem > 6:\n    ans += 2\nprint(ans)", "x = int(input())\nans = x//11*2\nif x%11 == 0:\n    pass\nelif x%11 <= 6:\n    ans += 1\nelse:\n    ans += 2\nprint(ans)", "import sys\n\nx = int(sys.stdin.readline())\n\nn = x // 11\nr = x % 11\nif r == 0:\n    print(2*n)\nelif r <= 6:\n    print(2*n+1)\nelse:\n    print(2*n+2)", "import bisect,collections,copy,itertools,math,string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\ndef main():\n    x = I()\n    ans = x//11*2\n    num = x%11\n    if num==0:\n        pass\n    elif num<=6:\n        ans += 1\n    else:\n        ans += 2\n\n    print(ans)\nmain()\n", "x = int(input())\nans = 0\nif x <= 6:\n  ans = 1\nelif x <= 11:\n  ans = 2\nelse:\n  ans = (x // 11) * 2\n  if 1 <= x % 11 <= 6:\n    ans += 1\n  elif x % 11 >= 7:\n    ans += 2\nprint(ans)", "x = int(input())\nd,m = divmod(x,11)\nans = d*2\nif 0 < m <= 6:\n    ans += 1\nelif m >= 7:\n    ans += 2\nprint(ans)", "# https://atcoder.jp/contests/arc068/tasks/arc068_a\n\nx = int(input())\n\nans = (x // 11) * 2\nmod = x % 11\nif mod == 0:\n    pass\nelif mod < 7:\n    ans += 1\nelse:\n    ans += 2\n\nprint(ans)\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\n\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\nx = I()\nans = 0\nif x >= 11:\n    el = x//11\n    ans += el * 2\n    x -= 11 * el\nif 0 < x <= 6:\n    ans += 1\nelif 6 < x < 11:\n    ans += 2\nprint(ans)\n", "#88 C - X: Yet Another Die Game\nimport decimal\nx = decimal.Decimal(input())\n\nn = x/decimal.Decimal(11)\nans = n*decimal.Decimal(2)\njudge = int(ans)\nif ans - judge < decimal.Decimal(0.1):\n    print(int(ans))\nelse:\n    print(int(ans) + 1)", "x = int(input())\nn = x//11\nk = x%11\nif k==0:\n    print(2*n)\nelif 1<=k<=6:\n    print(2*n+1)\nelse:\n    print(2*(n+1))", "import math\nx = int(input())\nif x % 11 == 0:\n    ans = x//11*2\nelse:\n    ans = x//11*2\n    y = x % 11\n    if y <= 6:\n        ans += 1\n    else:\n        ans += 2\nprint(ans)\n", "N = int(input())\nif N%11 == 0:\n    print(N//11*2)\nelif N%11 <=6:\n    print(N//11*2+1)  \nelse:\n    print(N//11*2+2)  ", "# 6>5>6>5>6>5...\nimport math\ny=int(input())\n#print((55*x+9)//10=y)\nprint(((y*10-9)+54)//55)", "x = int(input())\ncnt = 0\nv = [0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2]\nprint(2*(x//11)+v[x%11])", "x = int(input())\nans = (x // 11) * 2\ny = x % 11\nif y == 0:\n    print(ans)\nelif y <= 6:\n    print((ans+1))\nelse:\n    print((ans+2))\n", "import math\nx = int(input())\n# 6,5,6,5 \u30fb\u30fb\u30fb\u3068\u5f97\u70b9\u3057\u3066\u3044\u304f\n# \u7b54\u3048\u306fx/5.5\u4ed8\u8fd1\nt = math.ceil(x/5.5)\ndef f(n):\n    return 6*n - n//2\n\nif x <= f(t-1):\n    print(t-1)\nelif x <= f(t):\n    print(t)\nelse:\n    print(t+1)", "x = int(input())\nc = x // 11\nm = x % 11\ncnt = 2 * c\nif 0 < m < 7:\n    cnt += 1\nelif 6 < m:\n    cnt += 2\nprint(cnt)\n", "x = int(input())\n\nm, r = divmod(x, 11)\n\nif r == 0:\n    ans = 2 * m\nelif r <= 6:\n    ans = 2 * m + 1\nelse:\n    ans = 2 * (m + 1)\n\nprint(ans)", "import sys\n\nsys.setrecursionlimit(10**7)\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  #\u7a7a\u767d\u3042\u308a\ndef LI2(): return list(map(int,sys.stdin.readline().rstrip()))  #\u7a7a\u767d\u306a\u3057\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())  #\u7a7a\u767d\u3042\u308a\ndef LS2(): return list(sys.stdin.readline().rstrip())  #\u7a7a\u767d\u306a\u3057\n\nx = I()\nq,r = x//11,x % 11\nans = 2*q\nif 1 <= r <= 6:\n    ans += 1\nelif r >= 7:\n    ans += 2\nprint(ans)\n", "x = int(input())\nt = x // 11\nif x % 11 == 0:\n    print((t*2))\nelif x % 11 <= 6:\n    print((t*2 + 1))\nelse:\n    print((t * 2 + 2))\n", "x=int(input())\nn=x//11\nm=x%11\nif 0<m<=6:\n  print(n*2+1)\nelif 7<=m:\n  print(n*2+2)\nelif m==0:\n  print(2*n)", "import math\nx = int(input())\na = x//11\nama = x%11\nif ama == 0:\n  print((a*2))\nelif ama <= 6:\n  print((a*2+1))\nelse:\n  print((a*2+2))\n\n", "x = int(input())\n\nans = x // 11 * 2\nx %= 11\nif x == 0:\n    pass\nelif x  > 6:\n    ans += 2\nelse:\n    ans += 1\nprint(ans)", "import math\nimport numpy as np\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    x = int(input())\n    ans = 2*(x//11)\n    x = x%11\n    if x==0: pass\n    elif x<7: ans += 1\n    else: ans += 2\n    print(ans)\n\nmain()", "x = int(input())\n\nif 0 <= x <= 6:\n    print(1)\nelif 6<x<12:\n    print(2)\nelse:\n    ans = x//11 * 2\n    x = x%11\n    #print(x)\n    if x == 0:\n        ans += 0\n    elif 0<x<=6:\n        ans += 1\n    elif 6<x<12:\n        ans += 2\n    print(ans)", "x=int(input())\nans_s=x//11\nans_a=x%11\nif 1<=ans_a<=6:\n    print(2*ans_s+1)\nelif ans_a==0:\n    print(2*ans_s)\nelse:\n    print(2*ans_s+2)", "x = int(input())\n\nans = 0\nans += (x // 11) * 2\n\nif x % 11 > 6:\n    ans += 2\nelif x % 11 != 0:\n    ans += 1\n\nprint(ans)\n", "N = int(input())\n\nX = 2*(N//11)\n\nif (N % 11) > 6:\n  X += 2\nelif (N % 11) > 0:\n  X += 1\n  \nprint(X)", "N=int(input())\n\nm=N%11\nans=-(-N//11)*2\n\nif 1<=m<=6:\n    print(ans-1)\nelse:\n    print(ans)", "x = int(input())\nfrom math import ceil\nans = (x // 11)\nx -= ans * 11\nans *= 2\nif x > 0:\n    if x <= 6:\n        ans += 1\n    else:\n        ans += 2\nprint(ans)", "x = int(input())\nif x % 11 == 0:\n    print(x//11 * 2)\nelif x % 11 > 6:\n    print(x//11 * 2 + 2)\nelse:\n    print(x//11 * 2 + 1)", "import bisect\nimport itertools\nimport math\nimport random\nfrom collections import Counter, deque, defaultdict\nfrom functools import reduce\nfrom operator import xor\n\nmod = 10 ** 9 + 7\n\ndef lmi():\n    return list(map(int, input().split()))\n\ndef main():\n    x = int(input())\n    ans = x // 11 * 2\n    ans += math.ceil((x % 11) / 6)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "x = int(input())\nq, r = divmod(x, 11)\nq *= 2\nif 1 <= r <= 6:\n    q += 1\nelif r > 6:\n    q += 2\nprint(q)", "x=int(input())\npoint=x//11+1\npoint*=2\nif x%11<=6:\n  point-=1\nif x%11==0:\n  point-=1\nprint(point)", "x = int(input())\n\ndiv, mod = divmod(x, 11)\n\nadd = 0\nif 0 < mod <= 6:\n    add = 1\nelif mod > 6:\n    add = 2\n\nprint(div * 2 + add)", "x=int(input())\nans=0\nans+=2*(x//11)\nif x%11<=6 and x%11!=0:\n  ans+=1\nelif x%11!=0 and 7<=x%11:\n  ans+=2\nprint(ans)", "X = int(input())\n\nt = X // (6 + 5)\na = X % (6 + 5)\nb = 0\nif a > 6:\n    b = 2\nelif a == 0:\n    b = 0\nelse:\n    b = 1\nprint(2 * t + b)", "N = int(input())\nr = N % 11\nprint(N // 11 * 2 + (0 if r == 0 else (1 if r <= 6 else 2))) ", "N = int(input())\nprint((N//11*2+(N%11+5)//6))\n", "x = int(input())\n\nshou = x//11\n\namari = x%11\n\nif amari == 0:\n    print(shou*2)\nelif amari < 7:\n    print(shou*2+1)\nelse:\n    print(shou*2+2)", "x=int(input())\nfrom math import ceil\ncnt = ceil(x/11)\n\nif 11*cnt - 5 >=x:\n    ans=cnt*2-1\nelse:\n    ans=cnt*2\n    \nprint(ans)"]