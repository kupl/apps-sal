["\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,p,q,r=map(int,input().split())\n\na=list(map(int,input().split()))\n\ns1=[a[i]*p for i in range(n)]\n\ns2=[]\nm=s1[0]\nfor i in range(n):\n    m=max(m,s1[i])\n    s2.append(m+a[i]*q)\n\ns3=[]\nm=s2[0]\nfor i in range(n):\n    m=max(m,s2[i])\n    s3.append(m+a[i]*r)\n\nprint(max(s3))", "n, p, q, r = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nmx1 = [0] * n\nmx1[0] = p * a[0]\nfor i in range(1, n):\n    mx1[i] = max(p * a[i], mx1[i - 1])\nmx2 = [0] * n\nmx2[n - 1] = r * a[n - 1]\nfor i in range(n - 2, -1, -1):\n    mx2[i] = max(r * a[i], mx2[i + 1])\nans = mx1[0] + q * a[0] + mx2[0]\nfor i in range(1, n):\n    ans = max(ans, q * a[i] + mx1[i] + mx2[i])\nprint(ans)", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return list(map(int,input().split()))\ndef map_string():\n    return input().split()\n    \nn,p,q,r = map_input()\na = [p,q,r]\nb = list_input()\nans = 0\nINF = -100000000000000000000000\ndp = [INF]*(n+5)\ndp2 = [INF]*(n+5)\ndp3 = [INF]*(n+5)\nfor i in range(n): dp[i] = p*b[i]\nfor i in range(1,n): dp[i] = max(dp[i],dp[i-1])\nfor i in range(n): dp2[i] = q*b[i]+dp[i]\nfor i in range(1,n): dp2[i] = max(dp2[i],dp2[i-1])\nfor i in range(n): dp3[i] = r*b[i]+dp2[i]\nfor i in range(1,n): dp3[i] = max(dp3[i],dp3[i-1])\nprint(dp3[n-1])\n", "def main():\n    n, p, q, r = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    dp = [float('-inf') for _ in range(n)]\n    dp[-1] = r * a[-1]\n\n    for i in range(n - 2, -1, -1):\n        dp[i] = max(r * a[i], dp[i + 1])\n\n    dp2 = [float('-inf') for _ in range(n)]\n    dp2[-1] = (q + r) * a[-1]\n    for i in range(n - 2, -1, -1):\n        dp2[i] = max(q * a[i] + dp[i], dp2[i + 1])\n\n    dp3 = [float('-inf') for _ in range(n)]\n    dp3[-1] = (p + q + r) * a[-1]\n    for i in range(n - 2, -1, -1):\n        dp3[i] = max(p * a[i] + dp2[i], dp3[i + 1])\n\n    print(dp3[0])\n\nmain()\n", "n, p, q, r = map(int, input().split())\nA = list(map(int, input().split()))\n\nP = [p * a for a in A]\nQ = [q * a for a in A]\nR = [r * a for a in A]\n\nans = - (10 ** 20)\n\nfor i in range(1, n):\n\tP[i] = max(P[i], P[i - 1])\n\nPQ = [0 for i in range(n)]\n\nfor i in range(n):\n\tPQ[i] = P[i] + Q[i]\n\n\tif i: \n\t\tPQ[i] = max(PQ[i], PQ[i - 1])\n\nfor i in range(n):\n\tans = max(ans, PQ[i] + R[i])\n\nprint(ans)", "n, p, q, r = list(map(int, input().split()))\na = list(map(int, input().split()))\n\npa = [p*a[0]]*n\nfor i in range(1, n):\n    pa[i] = max(pa[i-1], p*a[i])\n    \nqa = [q*a[0] + pa[0]]*n\nfor i in range(1, n):\n    qa[i] = max(qa[i-1], q*a[i] + pa[i])\n\nra = [r*a[0] + qa[0]]*n\nfor i in range(1, n):\n    ra[i] = max(ra[i-1], r*a[i] + qa[i])\n    \nprint(max(ra))\n    \n", "n, p, q, r = map(int, input().split())\na = list(map(int, input().split()))\nmax_pa_i = [0] * n\nmax_pa_i[0] = a[0] * p\nfor i in range(1, n):\n    max_pa_i[i] = max(a[i] * p, max_pa_i[i - 1])\nmax_ra_k = [0] * n\nmax_ra_k[-1] = a[-1] * r\nfor i in range(n - 2, -1, -1):\n    max_ra_k[i] = max(a[i] * r, max_ra_k[i+1])\nx = -10 ** 19\nfor i in range(n):\n    x = max(x, max_pa_i[i] + q * a[i] + max_ra_k[i])\nprint(x)", "s=input()\nc=s.split(' ')\nfor i in range(4):\n    c[i]=int(c[i])\ns=input()\na=s.split(' ')\nfor i in range(c[0]):\n    a[i]=int(a[i])\n    a[i]=[(c[1])*a[i],(c[2])*a[i],(c[3])*a[i]]\ndp=[[0,0,0] for i in range(c[0])]\nm1=-1000000000000000001\nm2=-2000000000000000001\nm3=-3000000000000000001\nfor i in range(c[0]):\n    m1=max(m1,a[i][0])\n    m2=max(m2,m1+a[i][1])\n    m3=max(m3,m2+a[i][2])\nprint (m3)\n", "n, p, q, r = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\ncrmx, crmn = [a[n - 1]] * n, [a[n - 1]] * n\n\nfor i in range(n - 2, -1, -1):\n    crmx[i] = max(crmx[i + 1], a[i])\n    crmn[i] = min(crmn[i + 1], a[i])\n\nans = 0 - 10 ** 21\n\nmn, mx = a[0], a[0]\n\nfor i in range(n):\n    cans = q * a[i]\n    mx = max(mx, a[i])\n    mn = min(mn, a[i])\n    cans += max(mx * p, mn * p)\n    cans += max(crmx[i] * r, crmn[i] * r)\n    ans = max(ans, cans)\n\nprint(ans)\n", "n, p, q, r = list(map(int, input().split()))\na = list(map(int, input().split()))[::-1]\n\nINF = -10 ** 30\n\nanswer = INF\ndp = [INF, INF, INF]\n\nfor i in range(n):\n    dp[0] = max(dp[0], r * a[i])\n    dp[1] = max(dp[1], q * a[i] + dp[0])\n    dp[2] = max(dp[2], p * a[i] + dp[1])\n    answer = max(answer, dp[2])\n\nprint(answer)\n", "n,p,q,r = list(map(int, input().split(' ')))\na = list(map(int, input().split(' ')))\n\nmax1 = {}\nmin1 = {}\nmax2 = {}\nmin2 = {}\nmaxval1 = a[0]\nminval1 = a[0]\nmaxval2 = a[n-1]\nminval2 = a[n-1]\n\nfor i in range(n):\n  j = n-1-i\n  maxval1 = max(maxval1, a[i])\n  max1[i] = maxval1\n  minval1 = min(minval1, a[i])\n  min1[i] = minval1\n  maxval2 = max(maxval2, a[j])\n  max2[j] = maxval2\n  minval2 = min(minval2, a[j])\n  min2[j] = minval2\n\n\nx = None\nfor i in range(n):\n  y = q*a[i]\n  if p > 0:\n    y += p*max1[i]\n  else:\n    y += p*min1[i]\n  if r > 0:\n    y += r*max2[i]\n  else:\n    y += r*min2[i]\n  if x is None or x < y:\n    x = y\n\nprint(x)", "(n,p,q,r2)=list(map(int,input().split()));\na=list(map(int,input().split()));\n#print(a);\n#print(p);\nsmall=10**9+1;\nlarge=-10**9-1;\ninfa=10**9+1;\ninfb=-10**9-1;\nl=[];\nr=[];\nfor i in range(0,n):\n    small=min(small,a[i]);\n    large=max(large,a[i]);\n    l.append((small,large));\nsmall=10**9+1;\nlarge=-10**9-1;\nfor i in range(n-1,-1,-1):\n    small=min(small,a[i]);\n    large=max(large,a[i]);\n    r.append((small,large));\nr=r[-1::-1];\n#print(l);\n#print(r);\ns=0;\nx=a[0];\nmaxs=x*p+x*q+x*r2;\nfor i in range(n):\n    s=0;\n    if(p>0):\n        s=s+p*l[i][1];\n    else:\n        s=s+p*l[i][0];\n    if(r2>0):\n        s=s+r2*r[i][1];\n    else:\n        s=s+r2*r[i][0];\n    s=s+q*a[i];\n    #print(s);\n        \n    maxs=max(s,maxs);\nprint(maxs);\n\n\n    \n\n\n\n    \n    \n    \n    \n", "n, p, q, r = [int(i) for i in input().split()]\n\naa = [int(i) for i in input().split()]\n\nmax_from_p = []\nm = None\n\nfor i in range(n):\n    if i == 0:\n        m = aa[i] * p\n    else:\n        if aa[i] * p > m:\n            m = aa[i] * p\n    max_from_p.append(m)\n\nmax_from_pq = []\nm = None\n\nfor i in range(n):\n    if i == 0:\n        m = aa[i] * q + max_from_p[i]\n    else:\n        if aa[i] * q + max_from_p[i] > m:\n            m = aa[i] * q + max_from_p[i]\n    max_from_pq.append(m)\n\nm = None\n\nfor i in range(n):\n    if i == 0:\n        m = aa[i] * r + max_from_pq[i]\n    else:\n        if aa[i] * r + max_from_pq[i] > m:\n            m = aa[i] * r + max_from_pq[i]\n\nprint(m)\n", "max1=[]\nmax2=[]\nmax3=[]\nN,A,B,C=list(map(int,input().split()))\np=list(map(int,input().split()))\nmax1.append(-100000000000000000000);\nmax2.append(-100000000000000000000);\nmax3.append(-100000000000000000000);\nfor x in range(1,N+1):\n    max1.append(max(max1[x-1],A*p[x-1]));\nfor x in range(1,N+1):\n    max2.append(max(max2[x-1],max1[x]+B*p[x-1]));\nfor x in range(1,N+1):\n    max3.append(max(max3[x-1],max2[x]+C*p[x-1]));\nprint((max3[-1]));\n", "inf = 10 ** 18\nn, p, q, r = map(int, input().split())\na = list(map(int, input().split()))\nmx = [-inf] * n\nmn = [inf] * n\nval2 = [0] * n\nmx[0] = a[0]\nmn[0] = a[0]\nval2[0] = p * a[0] + q * a[0]\nfor i in range(1, n):\n    mn[i] = min(mn[i - 1], a[i])\n    mx[i] = max(mx[i - 1], a[i])\n    val2[i] = q * a[i] + max(mn[i] * p, mx[i] * p)\nval3 = [0] * n\nmx2 = [-inf] * n\nmx2[0] = val2[0]\nval3[0] = val2[0] + r * a[0]\nans = - inf\nfor i in range(1, n):\n    mx2[i] = max(mx2[i - 1], val2[i])\n    val3[i] = r * a[i] + mx2[i]\nprint(max(val3))", "n, p, q, r = map(int, input().split())\nlist1 = list(map(int, input().split()))\npref = [list1[0]]\nsuf = [list1[-1]]\nans = -3 * 10 ** 18 - 1\nif p > 0:\n    for i in range(1, n):\n        pref.append(max(list1[i], pref[-1]))\nelse:\n    for i in range(1, n):\n        pref.append(min(list1[i], pref[-1]))\nif r > 0:\n    for i in range(n - 2, -1, -1):\n        suf.append(max(suf[-1], list1[i]))\nelse:\n    for i in range(n - 2, -1, -1):\n        suf.append(min(suf[-1], list1[i]))\nfor i in range(n):\n    ans = max(ans, pref[i] * p + q * list1[i] + suf[n - i -1] * r)\nprint(ans)", "import sys\n#=int(input())\n#=list(map(int, input().split()))\nn, p, q, r = list(map(int, input().split()))\na = list(map(int, input().split()))\nminil = [0] * n\nminir = [0] * n\nmaxil = [0] * n\nmaxir = [0] * n\nminil[0] = maxil[0] = a[0]\nminir[n - 1] = maxir[n - 1] = a[n - 1]\nfor i in range(1, n):\n    minil[i] = min(minil[i - 1], a[i])\n    maxil[i] = max(maxil[i - 1], a[i])\nfor i in range(n - 2, -1, -1):\n    minir[i] = min(minir[i + 1], a[i])\n    maxir[i] = max(maxir[i + 1], a[i])\nans = 0\ntans = -10**19\nfor i in range(n):\n    ans = q * a[i]\n    ans += max(p * minil[i], p * maxil[i])\n    ans += max(r * minir[i], r * maxir[i])\n    tans = max(tans, ans)\nprint(tans)\n", "n, p, q, r = map(int, input().split())\na = [int(i) for i in input().split()]\nmin_suf = [0] * n\nmax_suf = [0] * n\nmin_suf[-1] = [n - 1, a[n - 1]]\nmax_suf[-1] = min_suf[-1]\npqr = [0] * n\nqr = [0] * n\nrr = [0] * n\nrr[-1] = a[-1] * r\nfor i in range(n - 2, -1, -1):\n    if a[i] < min_suf[i + 1][1]:\n        min_suf[i] = [i, a[i]]\n    else:\n        min_suf[i] = min_suf[i + 1]\n    if a[i] > max_suf[i + 1][1]:\n        max_suf[i] = [i, a[i]]\n    else:\n        max_suf[i] = max_suf[i + 1]\n    if r < 0:\n        rr[i] = min_suf[i][1] * r\n    else:\n        rr[i] = max_suf[i][1] * r\nfor i in range(n):\n    qr[i] = a[i] * q + rr[i]\nfor i in range(n - 2, -1, -1):\n    qr[i] = max(qr[i], qr[i + 1])\nans = a[0] * p + qr[0]\nfor i in range(n):\n    ans = max(a[i] * p + qr[i], ans)\nprint(ans)", "\n\ndef main():\n\tn, p, q, r  = [ int(i) for i in input().split() ] \n\tL = [ int(i) for i in input().split() ]\n\t\n\t\n\tLR_big = [L[0]]\n\tLR_small = [L[0]]\n\tfor i in range(1,len(L)):\n\t\tLR_big.append( max(L[i], LR_big[-1]) )\n\t\tLR_small.append( min(L[i], LR_small[-1]) )\n\t\t\n\tRL_big = [L[-1]]\n\tRL_small = [L[-1]]\n\tfor i in range( len(L)-2, -1, -1):\n\t\tRL_big.append( max(L[i], RL_big[-1] ))\n\t\tRL_small.append( min(L[i], RL_small[-1] ))\n\t\n\tRL_big = RL_big[::-1]\n\tRL_small = RL_small[::-1]\n\t\n\t\"\"\"\t\n\tprint(LR_big)\n\tprint(LR_small)\n\tprint(RL_big)\n\tprint(RL_small)\n\t\"\"\"\n\t\n\tcount = -10**20\n\tfor i in range(len(L)):\n\t\t\n\t\tcount = max(max(LR_small[i]*p, LR_big[i]*p) + L[i]*q + max(RL_small[i]*r, RL_big[i]*r), count)\n\t\n\tprint(count)\n\t\nmain()", "\ndef get_ans(n, p, q, r, a):\n    maxpre = [-100000000] * n\n    minpre = [100000000] * n\n    maxsuf = [-100000000] * n\n    minsuf = [100000000] * n\n\n    curmax = a[0]\n    curmin = a[0]\n\n    for i in range(n):\n        if a[i] > curmax:\n            curmax = a[i]\n        maxpre[i] = curmax\n\n        if a[i] < curmin:\n            curmin = a[i]\n        minpre[i] = curmin\n\n    curmax = a[n - 1]\n    curmin = a[n - 1]\n\n    for i in range(n - 1, -1, -1):\n        if a[i] > curmax:\n            curmax = a[i]\n        maxsuf[i] = curmax\n\n        if a[i] < curmin:\n            curmin = a[i]\n        minsuf[i] = curmin\n\n    ans = []\n    for i in range(n):\n        pmas = maxpre if p > 0 else minpre\n        rmas = maxsuf if r > 0 else minsuf\n\n        ans.append(pmas[i] * p + a[i] * q + rmas[i] * r)\n\n    return max(ans)\n\nn, p, q, r = tuple(map(int, input().split()))\na = list(map(int, input().split()))\nprint(get_ans(n, p, q, r, a))\n\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,p,q,r=map(int,input().split())\n\na=list(map(int,input().split()))\n\ns1=[a[i]*p for i in range(n)]\n\ns2=[]\nm=s1[0]\nfor i in range(n):\n    m=max(m,s1[i])\n    s2.append(m+a[i]*q)\n\ns3=[]\nm=s2[0]\nfor i in range(n):\n    m=max(m,s2[i])\n    s3.append(m+a[i]*r)\n\nprint(max(s3))", "n, p, q ,r = map(int,input().split())\na = list(map(int,input().split()))\ndp = [[0, 0, 0] for i in range(n)]\ndp[0][0] = p * a[0]\ndp[0][1] = dp[0][0] + q * a[0]\ndp[0][2] = dp[0][1] + r * a[0]\nfor i in range(1, n):\n    dp[i][0] = max(dp[i - 1][0], p * a[i])\n    dp[i][1] = max(dp[i - 1][1], dp[i][0] + q * a[i])\n    dp[i][2] = max(dp[i - 1][2], dp[i][1] + r * a[i])\nprint(dp[n - 1][2])", "n,p,q,r=list(map(int,input().split()))\na=list(map(int,input().split()))\nz=-(100000000000000000000000000000)**1000\nif q >=0 and p >=0 and r>=0:\n    c=-100000000000\n    for i in range(len(a)):\n        if a[i]>c:\n            c=a[i]\n    print(c*(q+p+r))\nelse:\n    if q <=0 and p <=0 and r<=0:\n        c=100000000000\n        for i in range(len(a)):\n            if a[i]<c:\n                c=a[i]\n        print(c*(q+p+r))\n    else:\n        b2=a[0]*p\n        b=[b2]*n\n        for i in range(1,len(a)):\n            if a[i]*p>b[i-1]:\n                b[i]=a[i]*p\n            else:\n                b[i]=b[i-1]\n        t2=a[n-1]*r\n        t=[t2]*n\n        for i in range(n-2,-1,-1):\n            if a[i]*r>t[i+1]:\n                t[i]=a[i]*r\n            else:\n                t[i]=t[i+1]\n        for i in range(n):\n            if a[i]*q+b[i]+t[i]>z:\n                \n                z=a[i]*q+b[i]+t[i]\n        print(z)\n            \n            \n", "# -------------INPUT---------------------------\nn, p, q, r = [int(i) for i in input().split(\" \")]\na = input()\n\nb = a.split()\n\nfor i in range(n):\n    b[i] = int(b[i])\n\n# ---------------------------------------------\n\ndp = [p * b[0]]\nfor i in range(1, n):\n    dp.append(max(dp[i - 1], p * b[i]))\n# print(dp)\n\ndq = [dp[0] + q * b[0]]\nfor i in range(1, n):\n    dq.append(max(dq[i - 1], dp[i] + q * b[i]))\n# print(dq)\n\ndr = [dq[0] + r * b[0]]\nfor i in range(1, n):\n    dr.append(max(dr[i - 1], dq[i] + r * b[i]))\n\nprint(dr[-1])\n#  i = 0\n# while i < len(a):\n#     if a[i] == ' ':\n#         i += 1\n#     if a[i] == '-':\n#         b.append(int(a[i]+a[i+1]))\n#         i += 2\n#     else:\n#         b.append(int(a[i]))\n#         i += 1\n# print(b)\n# num = [p,q,r]\n# l = []\n# sum = p * b[0] + q * b[0] + r * b[0]\n# x = len(b)\n# for i in range(x):\n#     for j in range(i, x):\n#         for k in range(j, x):\n#             # print(i,j,k)\n#             sum = max(sum, p * b[i] + q * b[j] + r * b[k])\n#\n# # print(sum)\n#\n#\n# # def indiceb(b):\n# #     for i in range(len(b)):\n# #         if b[i] == max(b):\n#             return i\n#\n#\n# def indices(b):\n#     for i in range(len(b)):\n#         if b[i] == min(b):\n#             return i\n#\n# if p > 0:\n#     sum += max(b) * p\n# if p < 0:\n#     sum += min(b) * p\n#\n# if q > 0:\n#     sum += max(b[indices(b):]) * q\n# if q < 0:\n#     sum += min(b) * q\n#\n# #\n# for ii in range(3):\n#     if num[ii] >= 0:\n#         sum += max(b)*num[ii]\n#     if num[ii] < 0:\n#         sum += min(b)*num[ii]\n"]