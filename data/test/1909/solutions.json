["n,k=list(map(int,input().split()))\n\nA=list(map(int,input().split()))\nL=[]\nfor i in range(k):\n    s=0\n    for j in range(i,n,k):\n        s+=A[j]\n    L.append(s)\n\nx=min(L)\n\nprint(L.index(x)+1)\n        \n", "def read():\n    n, k = list(map(int, input().split()))\n    powers = list(map(int, input().split()))\n    return n, k, powers\n\n\ndef get_min_power(n, k, powers):\n    start_task = 0\n    mins = []\n    for i in range(k):\n        s = 0\n        for j in range(i, n, k):\n            s += powers[j]\n        mins.append(s)\n    task = min(mins)\n    return mins.index(task) + 1\n\ndef main():\n    n, k, powers = read()\n    print(get_min_power(n, k, powers))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\n\na = list(map(int, input().split()))\n\ns = [0 for i in range(k)]\n\nfor i in range(len(a)):\ts[i % k] += a[i]\n\nj = 0\nfor i in range(k):\n\tif s[i] < s[j]: j = i\n\nprint(j + 1)", "__author__ = 'Lipen'\n\ndef actions(n, k, a):\n\tsmin = -1\n\tanswer = 1\n\n\tfor i in range(k):\n\t\ts = sum(a[i::k])\n\t\tif s<smin or smin==-1:\n\t\t\tsmin=s\n\t\t\tanswer=i+1\n\n\treturn answer\n\ndef main():\n\tn,k = list(map(int, input().split()))\n\ta = list(map(int, input().split()))\n\n\tprint(actions(n, k ,a))\n\ndef __starting_point(): main()\n__starting_point()", "data = input().split(\" \")\ntasks = int(data[0])\nk = int(data[1])\ncost = input().split(\" \")\ncost = [int(x) for x in cost]\nminCost = sum(cost)\nans = 1\nfor i in range(k):\n\tstart = i\n\tc = 0\n\tfor j in range(start, tasks, k):\n\t\tc += cost[j]\n\tif c < minCost:\n\t\tminCost = c\n\t\tans = i+1\nprint(ans)\n\n\n", "n,k = list(map(int, input().split()))\narr = [int(x) for x in input().split(' ')]\nnum = 10000000000\nfor i in range(0,k):\n    sum = 0\n    for j in range(0,int(n/k)):\n        sum += arr[j*k+i]\n    if sum < num:\n        num = sum\n        ans = i + 1\nprint(str(ans))", "\nn, k = map(int, input().split())\nt = list(map(int, input().split()))\nprint(min((sum(t[i :: k]), i) for i in range(k))[1] + 1)", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nm=1000000000\nans=1\nfor i in range(k):\n    mt=0\n    for j in range(i,n,k):\n        mt+=a[j]\n    if mt<m:\n        m=mt\n        ans=i+1\nprint(ans)", "n, k = (int(x) for x in input().split())\n\ns = input()\ndeals = [int(x) for x in s.split()]\n\npunish = [0 for x in range(k)]\n\nfor i in range(n):\n    punish[i%k] += deals[i]\n\nprint(punish.index(min(punish))+1)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nstart_job = 1\nmin_hate = 1000 * n + 1\nfor i in range(k):\n  hate = sum(a[i::k])\n  if hate < min_hate:\n    start_job = i + 1\n    min_hate = hate\nprint(start_job)", "import sys\nimport math\n\nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nan = [int(x) for x in (sys.stdin.readline()).split()]\n\nvmin = 1000000000\nrez = 0\nfor i in range(k):\n    vsum = 0\n    vvmin = 1001\n    for j in range(i, n, k):\n        vsum += an[j]\n    \n    if(vsum < vmin):\n        vmin = vsum\n        rez = i + 1\n    \nprint(rez)\n    \n", "from functools import reduce\nfrom operator import *\nfrom math import *\nfrom sys import *\nfrom string import *\nfrom collections import *\nsetrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\n#################################################\nn,k=RI()\nv=[0]*k\na=RI()\nfor i in range(n):\n    v[i%k]+=a[i]\nminInd=0\nfor i in range(k):\n    if v[i]<v[minInd]:\n        minInd=i\nprint(minInd+1)\n\n\n\n\n", "def main():\n    n, k = list(map(int, input().split()))\n    aa = list(map(int, input().split()))\n    res = [sum(aa[i::k]) for i in range(k)]\n    print(min(list(range(k)), key=res.__getitem__) + 1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\nnum = list(map(int, input().split()))\ndp = [0] * (2 * n)\nfor i in range(n - 1, -1, -1):\n    dp[i] = dp[i + k] + num[i]\nans = 2**100\nfor i in range(0, k):\n    ans = min(ans, dp[i])\nprint(dp.index(ans) + 1)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nind = [x for x in range(0,n,k)]\nm=1e8\nmi=0\nfor i in range(0,k):\n    x=sum(a[i+j] for j in ind)\n    if x<m:\n        m=x\n        mi=i \nprint(mi+1)", "n, k = map(int, input().split())\nxs = list(map(int, input().split()))\n\nres = (10**9, -1)\n\nfor i in range(k):\n\ts = 0\n\tfor j in range(i, n, k):\n\t\ts+=xs[j]\n\tres = min(res, (s, i+1))\n\nprint(res[1])", "[n,k] = [int(x) for x in input().split(' ')]\nA = [int(x) for x in input().split(' ')]\n\nm = -1\nvalm = 10**10\n\nfor i in range(k):\n    temp = sum([A[(k*j + i)%n] for j in range(n//k)])\n    if temp < valm:\n        valm = temp\n        m = i\n\nprint(m+1)\n\n\n", "n, k = map(int, input().split())\nt = list(map(int, input().split()))\nprint(min((sum(t[i :: k]), i) for i in range(k))[1] + 1)", "n,k=map(int,input().split())\na=list(map(int,input().split()))*2\nfor i in range(n+n-k-1, -1,-1):a[i]+=a[i+k]\nmi,mm=0,float(\"inf\")\nfor i in range(n):\n    x=a[i]-a[i+n]\n    if mm>x:mi=i;mm=x\nprint(mi+1)", "\n\"\"\"\n6 2\n3 2 1 6 5 4\n\"\"\"\n\nn, k = map(int, input().split())\nl = [int(x) for x in input().split()]\nans = []\nminn = 123456567\nkey = 0\nfor i in range(k):\n    j = i\n    summ = 0\n    while j < n:\n        summ += l[j]\n        j += k\n    if(summ < minn):\n        minn = summ\n        key = i\nprint(key + 1)", "\n\nn, k = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nprint(min((sum(t[i :: k]), i) for i in range(k))[1] + 1)\n\n\n\n# Made By Mostafa_Khaled\n", "n, k = list(map(int, input().split()))\n\nt = list(map(int, input().split()))\n\nprint(min((sum(t[i :: k]), i) for i in range(k))[1] + 1)\n\n", "# python3\nimport sys, threading, os.path\nimport collections, heapq, math, bisect\nimport string\n\nsys.setrecursionlimit(10 ** 6)\nthreading.stack_size(2 ** 27)\n\n\ndef main():\n    if os.path.exists('in.txt'):\n        input = open('in.txt', 'r')\n    else:\n        input = sys.stdin\n    # --------------------------------INPUT---------------------------------\n    n, k = list(map(int, input.readline().split()))\n    lis = list(map(int, input.readline().split()))\n\n    lis1 = [0 for i in range(k)]\n\n\n\n    case1 = n/k\n    ans1, ans2 = 10000000, 0\n    for i, x in enumerate(lis):\n        lis1[i%k]+= lis[i]\n\n    ans1 = min(lis1)\n    for i,x in enumerate(lis1):\n        if x == ans1:\n            ans2 = i+1\n            break\n\n    output = ans2\n    # -------------------------------OUTPUT----------------------------------\n    if os.path.exists('out.txt'):\n        open('out.txt', 'w').writelines(str(output))\n    else:\n        sys.stdout.write(str(output))\n\n\ndef __starting_point():\n    main()\n# threading.Thread(target=main).start()\n\n__starting_point()"]