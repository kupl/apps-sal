["from math import sqrt\n\ndef phi(u):\n\tans = u\n\tfor i in range(2, int(sqrt(n)) + 1):\n\t\tif u % i == 0:\n\t\t\twhile u % i == 0:\n\t\t\t\tu = u / i\n\t\t\tans = ans - int(ans / i)\n\tif n > 1:\n\t\tans = ans - int(ans / n)\n\treturn ans\n\ndef binpow(u, a, mod):\n\tans = 1\n\tif a == 0:\n\t\treturn 1;\n\twhile a > 0:\n\t\tif a % 2 == 0:\n\t\t\tu = (u ** 2) % mod\n\t\t\ta = int(a / 2)\n\t\telse :\n\t\t\tans = (ans * u) % mod\n\t\t\ta = a - 1\n\treturn int(ans)\n\nn = int(input())\n\nb1 = 1\nb2 = 0\nnn = n\nfor i in range(2, int(sqrt(n)) + 1):\n\tif n%i == 0 :\n\t\twhile nn % i == 0:\n\t\t\tb1 = b1 * i\n\t\t\tnn = nn / i\n\t\tb2 = int(n / b1)\n\t\tbreak\n\nif b2 < 2:\n\tprint(\"NO\")\n\treturn\na1 = b1 - binpow(b2, phi(b1) - 1, b1)\na2 = b2 - int((a1*b2+1)/b1)\nprint(\"YES\")\nprint(2)\nprint(a1, b1)\nprint(a2, b2)\n", "#   ==========     //\\\\       //||     ||====//||\n#       ||        //  \\\\        ||     ||   // ||\n#       ||       //====\\\\       ||     ||  //  ||\n#       ||      //      \\\\      ||     || //   ||\n#   ========== //        \\\\  ========  ||//====|| \n#  code\n\ndef egcd(a, b):\n    if a == 0 :   \n        return b, 0, 1\n             \n    gcd, x1, y1 = egcd(b % a, a)  \n\n    x = y1 - (b//a) * x1  \n    y = x1  \n     \n    return gcd, x, y\n\ndef main():\n    n = int(input())\n    div = []\n    d = set()\n\n    m = n\n\n    i = 2\n    while i * i <= n:\n        cnt = 0\n        while n % i == 0:\n            cnt += 1\n            n //= i\n            d.add(i)\n        if cnt > 0:\n            div.append((cnt, i))\n        i += 1\n    \n    if n > 1:\n        div.append((1, n))\n        d.add(n)\n\n    for i in d:\n        if i == m:\n            d.remove(i)\n            break\n    \n    if len(d) < 2:\n        print('NO')\n        return\n    \n    ans1 = 1\n    for i in range(div[0][0]):\n        ans1 *= div[0][1]\n    \n    ans2 = 1\n    for i in div[1:]:\n        for j in range(i[0]):\n            ans2 *= i[1]\n    \n    gcd, x, y = egcd(ans2, -ans1)\n    if x < 0 or y < 0:\n        gcd, x, y = egcd(ans1, -ans2)\n        x,y = y,x\n    \n    print('YES')\n    print(2)\n\n    if ans2 * x + ans1 * y == m - 1:\n        print(x, ans1)\n        print(y, ans2)\n    elif ans2 * (ans1 - x) + ans1 * y == m - 1:\n        print(ans1 - x, ans1)\n        print(y, ans2)\n    elif ans2 * x + ans1 * (ans2 - y) == m - 1:\n        print(x, ans1)\n        print(ans2 - y, ans2)\n    else:\n        print(ans1 - x, ans1)\n        print(ans2 - y, ans2)\n\n    return\n\ndef __starting_point():\n    main()\n__starting_point()"]