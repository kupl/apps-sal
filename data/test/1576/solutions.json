["from collections import deque\n\n\ndef main():\n    s = deque(input())\n\n    res = []\n    for i in range(len(s) - 1, -1, -1):\n        if i % 2 == 1:\n            res.append(s.pop())\n        else:\n            res.append(s.popleft())\n\n    print(''.join(res[::-1]))\n\n\nmain()", "s = input()\na = ''\nl = len(s)\nfor i in range(len(s)):\n    if (i % 2 == 0):\n        if (l % 2 == 0):\n            a = s[-1] + a\n            s = s[:-1]\n        else:\n            a = s[0] + a\n            s = s[1:]\n    else:\n        if (l % 2 == 0):\n            a = s[0] + a\n            s = s[1:]\n        else:\n            a = s[-1] + a\n            s = s[:-1]\nprint(a)", "s=list(input())\ns2=[]\nif len(s)%2==0:\n    for i in range(len(s)):\n        if i%2==0:\n            s2.append(s[-1])\n            del s[-1]\n        else:\n            s2.append(s[0])\n            del s[0]\nelse:\n    for i in range(len(s)):\n        if i%2==1:\n            s2.append(s[-1])\n            del s[-1]\n        else:\n            s2.append(s[0])\n            del s[0]\ns2.reverse()\nprint(''.join(s2))\n\n", "s = list(input())\nl = len(s)\n\nif l%2:\n\tf = 0\nelse:\n\tf = -1\n\ns1 = ''\nwhile s:\n\ts1 += s.pop(f)\n\tif f==0:\n\t\tf=-1\n\telse:\n\t\tf=0\n\t\nprint(s1[::-1])\n", "import sys, time, os\nfrom pprint import pprint as pp\nif os.environ.get('_ONPC_', False):\n    stdin = open('input.txt', 'r')\n    stdout = open('output.txt', 'w')\n    sys.stdin = stdin\n    sys.stdout = stdout\n\n    now = time.time()\n    __flag = True\nelse:\n    __flag = False\n\n\ndef what(obj):\n    if __flag:\n        pp(obj, sys.stderr)\n\n\n#############################################\n\ns = input().strip()\n\nans = ''\n\nwhile s:\n    if len(s) & 1:\n        ans = s[0] + ans\n        s = s[1:]\n    else:\n        ans = s[-1] + ans\n        s = s[:-1]\n\nprint(ans)\n\n##############################################\nif __flag:\n    stdout.close()\n    stdin.close()\n\n    print(time.time() - now, file=sys.stderr)\n", "a = input()\nresult = ''\np = -1\nif len(a) % 2 == 0:\n    p = 1\nelse:\n    p = 0\nul = 0\nur = len(a) - 1\nwhile len(result) < len(a):\n    if p == 1:\n        result += a[ur]\n        ur -= 1\n        p = 0\n    else:\n        result += a[ul]\n        ul += 1\n        p = 1\nprint(result[::-1])\n", "import math, sys\nfrom fractions import *\n\ndef mp():\n    return list(map(int, input().split()))\n\ndef f(q):\n    if q == -1:\n        return 0\n    return -1\n\ndef main():\n    a = input().strip()\n    if len(a) % 2 == 0:\n        q = -1\n    else:\n        q = 0\n    ans = ''\n    while len(a):\n        ans = a[q] + ans\n        if q == -1:\n            a = a[:len(a) - 1]\n        else:\n            a = a[1:]\n        q = f(q)\n    print(ans)\n        \ndeb = 0\nif deb:\n    file = open('input.txt', 'w')\nelse:\n    input = sys.stdin.readline\n    \nmain()", "s = input()\nans = \"\"\nn = len(s)\nif n % 2 == 0:\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            ans += s[- (i // 2 + 1)]\n        else:\n            ans += s[i // 2 - 1]\n    print(ans[::-1])\nelse:\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            ans += s[i // 2]\n        else:\n            ans += s[- (i // 2)]\n    print(ans[::-1])", "s = input()\nt = ''\nif len(s) % 2:\n    start = True\nelse:\n    start = False\ns = list(s)\nwhile s:\n    if start:\n        t = s.pop(0) + t\n        start = False\n    else:\n        t = s.pop() + t\n        start = True\nprint(t)", "s = str(input())\na = []\nfor i in range(0, len(s)):\n    a += [s[i]]\nif len(a) % 2 == 0:\n    k = -1\nelse:\n    k = 0\nans = ''\nwhile len(a) > 0:\n    ans += a[k]\n    del a[k]\n    if k == -1:\n        k = 0\n    else:\n        k = -1\nprint(ans[::-1])", "s = input()\nif len(s) % 2 == 0:\n    st = ''\n    for i in range(len(s) // 2):\n        st += s[len(s) - 1 - i] + s[i]\n    print(st[::-1])\nelse:\n    st = ''\n    for i in range(len(s) // 2):\n        st += s[i] + s[len(s) - 1 - i]\n    st += s[len(s) // 2]\n    print(st[::-1])\n", "from collections import deque\ns = deque(input())\nans = ''\nn = len(s)\nif n % 2:\n    c = 0\nelse:\n    c = -1\nfor i in range(n):\n    if c == 0:\n        ans += s.popleft()\n    else:\n        ans += s.pop()\n    c -= 1\n    c %= 2\nprint(''.join(ans[::-1]))", "st = input()\notv = \"\"\nif len(st)%2==0:\n    i = 1\n    while i<=len(st)//2:\n        otv=st[-i]+otv\n        otv=st[i-1]+otv\n        i+=1\n    print(otv)\nelse:\n    i = 0\n    while i<len(st)//2:\n        otv=st[i]+otv\n        otv=st[-i-1]+otv\n        i+=1\n    otv=st[len(st)//2]+otv\n    print(otv)\n        \n    \n\n", "s = input()\nresult = []\nfor i in reversed(range(len(s))):\n    if i % 2 == 0:\n        result.append(s[0])\n        s = s[1:]\n    else:\n        result.append(s[-1])\n        s = s[:-1]\nresult.reverse()\nprint(''.join(result))    ", "a = input()\nans = \"\"\nif (len(a)%2 == 0):\n    i = 0\n    while i < len(a)/2:\n        ans+=a[-i-1]+a[i]\n        i+=1\n    for i in range(len(ans) - 1, -1, -1):\n        print(ans[i], end=\"\")\nelse:\n    i = 0\n    while i < len(a) / 2:\n        ans += a[i] + a[-i-1]\n        i += 1\n    for i in range(len(ans) - 2, -1, -1):\n        print(ans[i], end=\"\")", "t = input()\nans = ''\nwhile len(t) > 0:\n    if len(t) % 2 == 0:\n        ans = t[-1] + ans\n        t = t[:-1]\n    else:\n        ans = t[0] + ans\n        t = t[1:] \nprint(ans)", "s = input()\nn = len(s)\nans = ''\nif n % 2 == 0:\n    now = n // 2 - 1\nelse:\n    now = n // 2\nfor i in range(n):\n    if i % 2 != 0:\n        ans += s[now + i]\n        now += i\n    else:\n        ans += s[now - i]\n        now -= i\nprint(ans)\n", "a =input()\nif len(a) % 2 == 1:\n    i1 = len(a)// 2\n    s1 = a[i1]\n    for i in range(1, i1 + 1):\n        s1 += a[i1 + i]\n        s1 += a[i1 - i]\n    print(s1)\n    \nelse:\n    a1 = ' ' + a\n    i1 = len(a)// 2\n    s1 = a1[i1]\n    for i in range(1, i1 + 1):\n        s1 += a1[i1 + i]\n        s1 += a1[i1 - i]\n    \n    print(s1[:-1])\n", "n=list(input())\ns=''\nif len(n)%2==0:\n    while n!=[]:\n        s+=n[-1]\n        n.pop(-1)\n        if n==[]:\n            break\n        s+=n[0]\n        n.pop(0)\nelse:\n    while n!=[]:\n        s+=n[0]\n        n.pop(0)\n        if n==[]:\n            break\n        s+=n[-1]\n        n.pop(-1)\nprint(s[::-1])\n", "s = input()\nres = ''\nfor i in range(len(s) // 2):\n    if len(s) % 2 == 1:\n        res += s[i] + s[len(s) - i - 1]\n    else:\n        res += s[len(s) - i - 1] + s[i]\n\nif (len(s) % 2 == 1):\n    res += s[len(s) // 2]\n\nprint(''.join(reversed (res)))\n\n", "s = list(input())\nn = len(s)\nd = ''\nprev = -1\nif n % 2 == 0:\n    d += s.pop(n - 1)\nwhile s != []:\n    if prev == -1:\n        d += s.pop(0)\n        prev = 0\n    else:\n        d += s.pop(len(s) - 1)\n        prev = -1\nprint(d[::-1])\n", "s = input()\nif len(s) % 2 == 1:\n    c = 1\nelse:\n    c = -1\ns1 = ''\nwhile len(s) > 0:\n    if c > 0:\n        s1 += s[0]\n        s = s[1:]\n    else:\n        s1 += s[-1]\n        s = s[: len(s) - 1]\n    c *= -1\ns2 = ''\nfor i in range(len(s1) - 1, -1, -1):\n    s2 += s1[i]\nprint(s2)\n", "s = input()\nif len(s) % 2 == 0:\n\ti = len(s) // 2 - 1\n\tj = len(s) // 2\n\twhile i >= 0:\n\t\tprint(s[i] + s[j], end = '')\n\t\ti -= 1\n\t\tj += 1\nelse:\n\ti = len(s) // 2 - 1\n\tj = len(s) // 2 + 1\n\tprint(s[len(s) // 2], end = '')\n\twhile i >= 0:\n\t\tprint(s[j] + s[i], end = '')\n\t\ti -= 1\n\t\tj += 1\n", "s = input()\nside = -1\nif len(s) % 2 == 1:\n    side = 0\no = ''\nfor i in range(len(s)):\n    o += s[side]\n    if side == -1:\n        s = s[:-1]\n        side = 0\n    else:\n        s = s[1:]\n        side = -1\n\nfor i in range(len(o) - 1, -1, -1):\n    print(o[i], end='')\n"]