["read = lambda: list(map(int, input().split()))\nl1, r1, l2, r2, k = read()\nR = min(r1, r2)\nL = max(l1, l2)\nans = max(R - L + 1, 0)\nif L <= k <= R: ans = max(ans - 1, 0)\nprint(ans)\n", "l1,r1,l2,r2,k = (int(i) for i in input().split())\nl = max(l1,l2)\nr = min(r1,r2)\nif r < l:\n    print(0)\nelse:\n    ans = r-l\n    if k >= l and k <= r:\n        print(ans)\n    else:\n        print(ans+1)", "from math import *\na, b, c, d, k = map(int, input().split())\nper1 = max(a, c)\nper2 = min(b, d)\nif per2 >= per1:\n    if per1<=k<=per2:\n        print(per2 - per1)\n    else:\n        print(per2 - per1 + 1)\nelse:\n    print(0)", "import sys, math\nl1, r1, l2, r2, k = map(int,input().split())\na = max(l1, l2)\nb = min(r1, r2)\nans = b - a + 1\nif a <= k <= b:\n    ans -= 1\nprint(max(0, ans))", "l1,r1,l2,r2,k = list(map(int, input().split()))\n\nif r1 < l2:\n    print(0)\nelif r2 < l1:\n    print(0)\nelse:\n    l = max(l1, l2)\n    r = min(r1, r2)\n    if k < l or k > r:\n        print(r - l + 1)\n    else:\n        print(r - l + 1 - 1)\n", "l1, r1, l2, r2, k = map(int, input().split())\nl = l1\nif l2 > l:\n\tl = l2\nr = r1\nif r2 < r:\n\tr = r2\nif r < l:\n\tprint(0)\nelif l <= k <= r:\n\tprint(r - l)\nelse:\n\tprint(r - l + 1)", "l1, r1, l2, r2, k = map(int, input().split())\nlmax = max(l1, l2)\nrmin = min(r1, r2)\n\nif lmax > rmin:\n    print(0)\nelse:\n    ans = rmin - lmax + 1\n    if k >= lmax and k <= rmin:\n        ans -= 1\n    print(ans)", "l_1, r_1, l_2, r_2, k = map(int, input().split())\nleft = max(l_1, l_2)\nright = min(r_1, r_2)\nif left > right:\n    print(0)\nelse:\n    if left <= k <= right:\n        print(right - left)\n    else:\n        print(right - left + 1)", "from sys import stdout\na,b,c,d,e = [int(i) for i in input().split()]\nt = max(a,c)\nt1= min(b,d)\nif t <= t1:\n\tif t<=e and e<=t1:\n\t\tprint(t1-t)\n\telse:\n\t\tprint(t1-t+1)\nelse:\n\tprint(0)\n", "l1, r1, l2, r2, k = map(int, input().split())\nans = max(0, min(r1, r2) - max(l1, l2) + 1)\nif max(l1, l2) <= k <= min(r1, r2):\n    ans = max(ans - 1, 0)\nprint(ans)", "i = input().split()\nstart = max(int(i[0]), int(i[2]))\nend = min(int(i[1]), int(i[3]))\nres = end - start + 1\nif start <= int(i[4]) <= end:\n    res -= 1\nif res < 0:\n    res = 0\nprint(res)\n", "3\n\nleft1, right1, left2, right2, k = list(map(int, input().split()))\n\nintersection_left = max(left1, left2)\nintersection_right = min(right1, right2)\n\nanswer = 0\nif intersection_right >= k >= intersection_left:\n    answer -= 1\n\nif intersection_right >= intersection_left:\n    answer += intersection_right - intersection_left + 1\n\nprint(answer)\n", "l_1, r_1, l_2, r_2, k = list(map(int, input().split()))\nans = min(r_1, r_2) - max(l_1, l_2) + 1\nif max(l_1, l_2) <= k <= min(r_1, r_2):\n    ans -= 1\nif ans < 0:\n    ans = 0\nprint(ans)\n", "l1, r1, l2, r2, k = list(map(int, input().split()))\nl = max(l1, l2)\nr = min(r1, r2)\nans = max(r - l + 1, 0)\nif k >= l and k <= r:\n\tans -= 1\nprint(ans)\n\n", "l1, r1, l2, r2, k = list(map(int, input().split()))\n\na = b = -1\nif l1 <= l2 and r2 <= r1:\n    a, b = l2, r2\nelif l2 <= l1 and r1 <= r2:\n    a, b = l1, r1\nelif l1 <= l2 <= r1:\n    a, b = l2, r1\nelif l1 <= r2 <= r1:\n    a, b = l1, r2\n\nif a == -1 or b == -1:\n    print(0)\nelse:\n    res = b - a + 1\n    if a <= k <= b:\n        res -= 1\n    print(res)\n", "l1,r1,l2,r2,k = list(map(int,input().split()))\nif l1 > r2 or r1 < l2:\n    print(0)\n    return\nml = max(l1,l2)\nmr = min(r1,r2)\ndelta = 1 if ml<=k<=mr else 0\nprint(abs(mr-ml)+1-delta)\n", "temp=input().split()\nl1=int(temp[0])\nr1=int(temp[1])\nl2=int(temp[2])\nr2=int(temp[3])\nk=int(temp[4])\n\nt=0\n\nl = max(l1,l2)\nr = min(r1,r2)\n\nif r>=l:\n\tt+=(r-l+1)\n\nif l<=k and k<=r:\n\tt-=1\n\nprint(t)\n", "def solve():\n    l1, r1, l2, r2, k = list(map(int, input().split(' ')))\n\n    start = max(l1, l2)\n    end = min(r1, r2)\n\n    ans = max(0, end - start + 1)\n\n    if start <= k <= end:\n        ans -= 1\n\n    print(ans)\n\n\ndef main():\n    solve()\n\ndef __starting_point():\n    main()\n\n__starting_point()", "l1, r1, l2, r2, k = list(map(int, input().split()))\nif l1 >= l2 and r1 <= r2:\n    if l1 <= k and r1 >= k:\n        print(r1 - l1)\n    else:\n        print(r1 - l1 + 1)\nelif l2 >= l1 and r2 <= r1:\n    if l2 <= k and r2 >= k:\n        print(r2 - l2)\n    else:\n        print(r2 - l2 + 1)\nelif l1 <= l2 and l2 <= r1 and r1 <= r2:\n    if l2 <= k and r1 >= k:\n        print(r1 - l2)\n    else:\n        print(r1 - l2 + 1)\nelif l2 <= l1 and l1 <= r2 and r2 <= r1:\n    if l1 <= k and r2 >= k:\n        print(r2 - l1)\n    else:\n        print(r2 - l1 + 1)\nelse:\n    print(0)\n", "import sys\n\ndef main():\n    l1, r1, l2, r2, k = [int(i) for i in sys.stdin.readline().strip().split()]\n    l = max(l1, l2)\n    r = min(r1, r2)\n    if l <= r:\n        print(r - l + 1 - (1 if l <= k <= r else 0))\n    else:\n        print(0)\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/local/env python3\n# -*- encoding: utf-8 -*-\nimport sys\n\n\ndef readnlines(f_in):\n    n = int(f_in.readline().strip())\n    m = []\n    for i in range(n):\n        line = f_in.readline().strip()\n        if line.isdigit():\n            m.append(int(line))\n        else:\n            m.append(line)\n    return m\n\n\ndef print_args():\n    print(\"Recieved {} arguments = {}.\".format(len(sys.argv), sys.argv))\n\n\ndef intersect(l1, r1, l2, r2):\n    left = max(l1, l2)\n    right = min(r1, r2)\n    return left, right, max(0, right - left + 1)\n\n\ndef solve():\n#    print_args()\n    # m = readnlines(sys.stdin)\n    line = sys.stdin.readline().strip()\n    l1, r1, l2, r2, k = [int(i) for i in line.split()]\n    left, right, inters = intersect(l1, r1, l2, r2)\n    #print(\"left={}, right={}, intesec={}\".format(left, right, inters))\n    if inters < 1:\n        return 0\n    else:\n        if (k >= left) and (k <= right):\n            return inters - 1\n        else:\n            return inters\n\n\ndef __starting_point():\n   ans = solve()\n   print(ans)\n\n__starting_point()", "l1, r1, l2, r2, k = map(int, input().split())\n\nanswer = min(r1, r2) - max(l1, l2) + 1\n\nif min(r1, r2) >= k >= max(l1, l2):\n    answer -= 1\n\nprint(max(0, answer))", "l1, r1, l2, r2 , k = map(int, input().split())\n\nl = max(l1,l2)\nr = min(r1,r2)\ncount = max(r - l + 1, 0)\n\nif l <= k <= r:\n    count -= 1\nprint(count)", "# You lost the game.\n\nl1,r1,l2,r2,k = list(map(int, input().split()))\n\n\"\"\"if l1 > l2:\n    r = min(r1,r2)-l1+1\n    if k >= l1 and k <= min(r1,r2):\n        r -= 1\nelif l2 > l1:\n    r = min(r1,r2)-l2+1\n    if k >= l2 and k <= min(r1,r2):\n        r -= 1\nelse:\n    r = min(r1,r2)-l1\n    if k >= l1 and k <= min(r1,r2):\n        r -= 1\"\"\"\nl = max(l1,l2)\nr = min(r1,r2)\nres = r-l+1\nif k >= l and k <= r:\n    res -= 1\nprint(max(0,res))\n", "l1, r1, l2, r2, k  = map(int, input().split())\nstart = max(l1, l2)\nend = min(r1, r2)\nif start <= k <= end:\n\tprint(end - start)\nelif start <= end:\n\tprint(end - start + 1)\nelse:\n\tprint(0)"]