["def main():\n    s, x, pfx = input(), 0, []\n    a, b = list(map(int, input().split()))\n    try:\n        for i, c in enumerate(s, 1):\n            x = (x * 10 + ord(c) - 48) % a\n            if not x and s[i] != '0':\n                pfx.append(i)\n    except IndexError:\n        pass\n    x, p, i = 0, 1, len(s)\n    for stop in reversed(pfx):\n        for i in range(i - 1, stop - 1, -1):\n            x = (x + (ord(s[i]) - 48) * p) % b\n            p = p * 10 % b\n        if not x:\n            print(\"YES\")\n            print(s[:i])\n            print(s[i:])\n            return\n    print(\"NO\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#zdelano dobrim chelovekom vnizy :D\ns, x, pfx = input(), 0, []\na, b = list(map(int, input().split()))\ntry:\n    for i, c in enumerate(s, 1):\n        x = (x * 10 + ord(c)-48 ) % a\n        \n        if not x and s[i] != '0':\n            pfx.append(i)\nexcept IndexError:\n    pass\nx, p, i = 0, 1, len(s)\nfor stop in reversed(pfx):\n    for i in range(i - 1, stop - 1, -1):\n        x = (x + (ord(s[i])-48) * p) % b\n        p = p * 10 % b\n    if not x:\n        print(\"YES\")\n        print(s[:i])\n        print(s[i:])\n        return\nprint(\"NO\")\n", "#zdelano dobrim chelovekom vnizy :D\ns, x, pfx = input(), 0, []\na, b = list(map(int, input().split()))\ntry:\n    for i, c in enumerate(s, 1):\n        x = (x * 10 + int(c) ) % a\n        \n        if not x and s[i] != '0':\n            pfx.append(i)\nexcept IndexError:\n    pass\nx, p, i = 0, 1, len(s)\nfor stop in reversed(pfx):\n    for i in range(i - 1, stop - 1, -1):\n        x = (x + (int(s[i])) * p) % b\n        p = p * 10 % b\n    if not x:\n        print(\"YES\")\n        print(s[:i])\n        print(s[i:])\n        return\nprint(\"NO\")\n", "# import sys\n# sys.stdin = open(\"F:\\\\Scripts\\\\input\",\"r\")\n# sys.stdout = open(\"F:\\\\Scripts\\\\output\",\"w\")\n\n\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\n\ns = input()\na , b = I()\nn = len(s)\nx = [0]*n\ny = [0]*n\nx[0] = int(s[0])%a\ny[n - 1] = int(s[n - 1])%b\np = 10%b\nfor i in range(1,n):\n\tx[i] = (x[i-1]*10 + int(s[i]))%a\n\ty[n - i - 1] = (int(s[n - i - 1])*p + y[n - i])%b\n\tp *=10\n\tp %= b\nfor i in range(n-1):\n\tif not x[i] and not y[i+1] and (s[i+1] != '0'):\n\t\tprint(\"YES\",s[:i+1],s[i+1:],sep = '\\n')\n\t\tbreak\nelse:\n\tprint(\"NO\")", "'''input\n284254589153928171911281811000\n1009 1000\n'''\nfrom sys import stdin\nimport math\n\n\ndef check_leading_zero(nstring, index):\n\tif nstring[index] == '0':\n\t\treturn False\n\treturn True\n\n\ndef cal_first(nstring, a):\n\tdp1 = [-1] * len(nstring)\n\tremain = 0;\n\tfor i in range(len(nstring)):\n\t\tdp1[i] = (remain * 10 + int(nstring[i])) % a\t\t\n\t\tremain = dp1[i]\n\treturn dp1\n\n\ndef cal_second(nstring, b):\n\tdp2 = [-1] * len(nstring)\n\tdp2[-1] = int(nstring[-1]) % b \n\tmul = 10\n\tfor i in range(len(nstring) - 2, -1, - 1):\n\t\tdp2[i] = ((int(nstring[i]) * mul )+ dp2[i + 1]) % b\n\t\tmul = (mul * 10) % b\n\treturn dp2\n\n\n# main starts\nnstring = stdin.readline().strip()\na, b = list(map(int, stdin.readline().split()))\nif len(nstring) == 1:\n\tprint(\"NO\")\n\treturn\n\ndp1 = cal_first(nstring, a)\ndp2 = cal_second(nstring, b)\n#print(dp1, dp2)\nfor i in range(len(dp1) - 1):\n\tif dp1[i] == 0 and dp2[i + 1] == 0:\n\t\tif check_leading_zero(nstring, i + 1):\n\t\t\tprint('YES')\n\t\t\tprint(nstring[:i + 1])\n\t\t\tprint(nstring[i + 1:])\n\t\t\treturn\nelse:\n\tprint('NO')\n", "s = input()\na, b = map(int, input().split())\nn, m = len(s), 0\nI, J = set(), set()\n\nfor i in range(n - 1):\n    m = (10 * m + int(s[i])) % a\n    if m == 0:\n        I.add(i + 1)\n\nm, k = 0, 1\n\nfor i in range(1, n)[::-1]:\n    m, k = (m + k * int(s[i])) % b, (10 * k) % b\n    if m == 0:\n        J.add(i)\n\nfor i in I & J:\n    if s[i] != '0':\n        print('YES', s[:i], s[i:], sep='\\n')\n        break\nelse:\n    print('NO')", "s = input()\na, b = map(int, input().split())\nn, m = len(s), 0\nI, J = set(), set()\n\nfor i in range(n - 1):\n    m = (10 * m + int(s[i])) % a\n    if m == 0:\n        I.add(i + 1)\n\nm, k = 0, 1\n\nfor i in range(1, n)[::-1]:\n    m, k = (m + k * int(s[i])) % b, (10 * k) % b\n    if m == 0:\n        J.add(i)\n\nfor i in I & J:\n    if s[i] != '0':\n        print('YES', s[:i], s[i:], sep='\\n')\n        break\nelse:\n    print('NO')", "s = input()\na, b = list(map(int, input().split()))\n\nn = len(s)\n\nflag = 0\np = 0\npfx = []\n\nfor i,c in enumerate(s, 1):\n    p = (p * 10 + int(c))%a\n\n    if(i < n and p == 0 and s[i] != '0'):\n        pfx.append(i)\n\n\nq = 0\np = 1\ni = len(s)\n\n#print(pfx)\nfor j in  reversed(pfx):\n    for i in range(i-1, j -1, -1):\n        q = (q + int(s[i]) * p) % b\n        p = p * 10 % b\n    if not q:\n        print(\"YES\")\n        print(s[:i])\n        print(s[i:])\n        return\nprint(\"NO\")\n", "from math import pow\ns=list(input())\na,b=list(map(int,input().split()))\nl=len(s)\ns1=[0]*(l+1)\ns2=[0]*(l+1)\nfor i in range(l):\n\ts[i]=ord(s[i])-ord('0')\np=1\nfor i in range(l-1,-1,-1):\n\ts1[i]=(s1[i+1]+s[i]*p)%b\n\tp=(p*10)%b\np=0\nfor i in range(l-1):\n\tp=(p*10+s[i])%a\n\tif p==0 and s1[i+1]==0 and s[i+1]:\n\t\tprint(\"YES\")\n\t\tprint(''.join(map(str,s[:i+1])))\n\t\tprint(''.join(map(str,s[i+1:])))\n\t\treturn\nprint(\"NO\")\n", "s = input()\na, b = list(map(int, input().split()))\nn = len(s)\nflag = 0\np = 0\npfx = []\nfor i,c in enumerate(s, 1):\n    p = (p * 10 + int(c))%a\n\n    if(i < n and p == 0 and s[i] != '0'):\n        pfx.append(i)\nq = 0\np = 1\ni = len(s)\nfor j in  reversed(pfx):\n    for i in range(i-1, j -1, -1):\n        q = (q + int(s[i]) * p) % b\n        p = p * 10 % b\n    if not q:\n        print(\"YES\")\n        print(s[:i])\n        print(s[i:])\n        return\nprint(\"NO\")\n", "def main():\n    s, x, pfx = input(), 0, []\n    a, b = map(int, input().split())\n    try:\n        for i, c in enumerate(s, 1):\n            x = (x * 10 + int(c)) % a\n            if not x and s[i] != '0':\n                pfx.append(i)\n            #print(c,ord(c) - 48)\n    except IndexError:\n        pass\n    x, p, i = 0, 1, len(s)\n    for j in reversed(pfx):\n        for i in range(i - 1, j - 1, -1):\n            x = (x + (int(s[i])) * p) % b\n            p = p * 10 % b\n        if not x:\n            print(\"YES\")\n            print(s[:i])\n            print(s[i:])\n            return\n    print(\"NO\")\n\ndef __starting_point():\n    main()\n__starting_point()", "s = input()\na,b = map(int,input().split())\ntens = 1\nB = 0\nA = 0\nposa = [False]*(len(s)+1)\nposb = [False]*(len(s)+1)\ntens = 1\nfor i in range(len(s)-1,-1,-1):\n    \n    B+=(int(s[i])*tens)%b\n    B = B%b\n    if B == 0:\n        posb[i] = True\n    tens = (tens*10)%b\n    \nloda = True\nfor i in range(len(s)-1):\n    A = (A*(10%a))%a\n    A+=int(s[i])%a\n    A = A%a\n    if A == 0:\n        posa[i] = True\n    \n    \nfor i in range(len(s)) :\n    if posa[i] ==True and posb[i+1] == True and s[i+1]!='0':\n        loda = False\n        print(\"YES\")\n        print(s[:i+1])\n        print(s[i+1:])\n        break\n        \nif loda:\n    print(\"NO\")", "s = input()\na, b = list(map(int, input().split()))\n\nleft = [-1 for i in range(len(s))]\nright = [-1 for i in range(len(s))]\nx = 0\nfor i in range(len(s)):\n    x = (x * 10 + int(s[i])) % a\n    left[i] = x % a\n    \nx = 0\nm = 1\nfor i in reversed(list(range(0, len(s)))):\n    x = (int(s[i]) * m + x) % b\n    right[i] = x % b\n    m = (m * 10) % b\n\npos = -1\nfor i in range(len(s) - 1):\n    if left[i] == 0 and right[i + 1] == 0 and s[i + 1] != '0':\n        pos = i \n        break\nif pos == -1:\n    print('NO')\nelse:\n    print('YES')\n    print(s[:pos + 1])\n    print(s[pos + 1:])\n", "import sys\nl = input()\na,b = input().split()\na = int(a)\nb= int(b)\nn = len(l)\nra = []\nrb = [0]*n\nnn = \"\"\nf = 0\np = 1\nra.append(int(l[0])%a)\nrb[n-1] = (int(l[n-1])%b)\nfor i in range(1,n-1):\n\tra.append((ra[i-1]*10+int(l[i]))%a)\nfor i in range(n-2,-1,-1):\n\trb[i] = (rb[i+1] + (int(l[i])*p*10)%b)%b\n\tp = (p*10)%b\nfor i in range(n-1):\n\tif(ra[i] ==0 and rb[i+1] == 0 and l[i+1] != \"0\"):\n\t\tprint(\"YES\")\n\t\tprint(l[:i+1])\n\t\tprint(l[i+1:n])\n\t\treturn\nif(f== 0):\n\tprint(\"NO\")", "l = input()\na,b = input().split()\na = int(a)\nb= int(b)\nn = len(l)\nra = []\nrb = [0]*n\nnn = \"\"\nf = 0\np = 1\nra.append(int(l[0])%a)\nrb[n-1] = (int(l[n-1])%b)\nfor i in range(1,n-1):\n\tra.append((ra[i-1]*10+int(l[i]))%a)\nfor i in range(n-2,-1,-1):\n\trb[i] = (rb[i+1] + (int(l[i])*p*10)%b)%b\n\tp = (p*10)%b\nst = \"\"\nfor i in range(n-1):\n\tif(ra[i] ==0 and rb[i+1] == 0 and l[i+1] != \"0\"):\n\t\tprint(\"YES\")\n\t\tst += str(''.join(l[:i+1]))+\"\\n\"\n\t\tst += str(''.join(l[i+1:n]))\n\t\tbreak\nif(len(st)== 0):\n\tprint(\"NO\")\nelse:\n\tprint(st)", "l = input()\na,b = input().split()\na = int(a)\nb= int(b)\nn = len(l)\nra = []\nrb = [0]*n\nnn = \"\"\nf = 0\np = 1\nra.append(int(l[0])%a)\nrb[n-1] = (int(l[n-1])%b)\nfor i in range(1,n-1):\n\tra.append((ra[i-1]*10+int(l[i]))%a)\nfor i in range(n-2,-1,-1):\n\trb[i] = (rb[i+1] + (int(l[i])*p*10)%b)%b\n\tp = (p*10)%b\nfor i in range(n-1):\n\tif(ra[i] ==0 and rb[i+1] == 0 and l[i+1] != \"0\"):\n\t\tprint(\"YES\")\n\t\tprint(l[:i+1])\n\t\tprint(l[i+1:n])\n\t\tf = 1\n\t\tbreak\nif(f== 0):\n\tprint(\"NO\")", "s = input()\na, b = map(int, input().split())\nn, m = len(s), 0\nI, J = set(), set()\n \nfor i in range(n - 1):\n    m = (10 * m + int(s[i])) % a\n    if m == 0:\n        I.add(i + 1)\n \nm, k = 0, 1\n \nfor i in range(1, n)[::-1]:\n    m, k = (m + k * int(s[i])) % b, (10 * k) % b\n    if m == 0:\n        J.add(i)\n \nfor i in I & J:\n    if s[i] != '0':\n        print('YES', s[:i], s[i:], sep='\\n')\n        break\nelse:\n    print('NO')", "from math import pow\ns=list(input())\na,b=map(int,input().split())\nl=len(s)\ns1=[0]*(l+1)\ns2=[0]*(l+1)\nfor i in range(l):\n\ts[i]=ord(s[i])-ord('0')\np=1\nfor i in range(l-1,-1,-1):\n\ts1[i]=(s1[i+1]+s[i]*p)%b\n\tp=(p*10)%b\np=0\nfor i in range(l-1):\n\tp=(p*10+s[i])%a\n\tif p==0 and s1[i+1]==0 and s[i+1]:\n\t\tprint(\"YES\")\n\t\tprint(''.join(map(str,s[:i+1])))\n\t\tprint(''.join(map(str,s[i+1:])))\n\t\treturn\nprint(\"NO\")", "import sys\n\ninf = float(\"inf\")\n# sys.setrecursionlimit(10000000)\n\n# abc='abcdefghijklmnopqrstuvwxyz'\n# abd={'a': 0, 'b': 1, 'c': 2, 'd': 3, 'e': 4, 'f': 5, 'g': 6, 'h': 7, 'i': 8, 'j': 9, 'k': 10, 'l': 11, 'm': 12, 'n': 13, 'o': 14, 'p': 15, 'q': 16, 'r': 17, 's': 18, 't': 19, 'u': 20, 'v': 21, 'w': 22, 'x': 23, 'y': 24, 'z': 25}\nmod, MOD = 1000000007, 998244353\n# vow=['a','e','i','o','u']\n# dx,dy=[-1,1,0,0],[0,0,1,-1]\n\n# import random\n# from collections import deque, Counter, OrderedDict,defaultdict\n# from heapq import nsmallest, nlargest, heapify,heappop ,heappush, heapreplace\n# from math import ceil,floor,log,sqrt,factorial,pi\n# from bisect import bisect,bisect_left,bisect_right,insort,insort_left,insort_right\n\ndef get_array(): return list(map(int, sys.stdin.readline().strip().split()))\ndef get_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef input(): return sys.stdin.readline().strip()\n\nstring = input()\nlength = len(string)\na,b = get_ints()\ndp1 = [0]*length\ndp2 = [0]*length\ndp1[0] = int(string[0])%a\nfor i in range(1,length):\n    dp1[i] = (dp1[i-1]*10 + int(string[i]))%a\ndp2[~0] = int(string[~0])%b\nmul = 10\nfor i in range(1,length):\n    dp2[~i] = (int(string[~i])*mul + dp2[~(i-1)])%b\n    mul = (mul*10)%b\n\n# print(dp1)\n# print(dp2)\nfor i in range(length-1):\n    if dp1[i]==0 and dp2[i+1]==0:\n        if string[i+1]!='0':\n            print('YES')\n            print(string[:i+1])\n            print(string[i+1 : ])\n            return\nprint('NO')\n\n", "def solve(num, a, b):\n    rem_a = [None] * len(num)\n    rem_b = [None] * len(num)\n    sn = num\n    num = [int(x) for x in num]\n    rem_a[0] = num[0] % a\n    rem_b[-1] = num[-1] % b\n    q = 1\n    for i in range(1, len(num)):\n        rem_a[i] = (rem_a[i - 1] * 10 + num[i]) % a\n        q = (q * 10) % b\n        rem_b[-i - 1] = (num[-i - 1] * q + rem_b[-i]) % b\n    for i in range(len(num) - 1):\n        if rem_a[i] == 0 and rem_b[i + 1] == 0 and num[i + 1] != 0:\n            return True, sn[:i + 1], sn[i + 1:]\n    return False, 0, 0\n\n\ndef __starting_point():\n    num = input()\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    res, q, w = solve(num, a, b)\n    if res:\n        print(\"YES\")\n        print(q)\n        print(w)\n    else:\n        print(\"NO\")\n\n__starting_point()", "def main():\n    string = input()\n    a,b = list(map(int,input().split()))\n    forward = [-1]*len(string)\n    backward = [-1]*len(string)\n    x=1\n    for i in range(len(string)):\n        cur = int(string[i])\n        j = len(string) - i - 1\n        curBack = int(string[j])\n        if i==0:\n            forward[i] = cur%a\n            backward[j] = curBack%b\n        else:\n            forward[i] = ((forward[i-1]*10)%a + cur%a)%a\n            backward[j] = (backward[j+1] + (curBack*x)%b)%b\n        x=(x*10)%b\n\n    done = 0\n    for i in range(len(string)-1):\n        leftMod = forward[i]\n        rightMod = backward[i+1]\n        if leftMod==0 and rightMod ==0 and int(string[i+1])!=0:\n            print(\"YES\")\n            print(string[:i+1])\n            print(string[i+1:])\n            done = 1\n            break\n    if done==0:\n        print(\"NO\")\n        # print(forward)\n        # print(backward)\n\nmain()\n", "s=list(input())\na,b=list(map(int,input().split()))\nl=len(s)\ns1=[0]*(l+1)\ns2=[0]*(l+1)\nfor i in range(l):\n\ts[i]=ord(s[i])-ord('0')\np=1\nfor i in range(l-1,-1,-1):\n\ts1[i]=(s1[i+1]+s[i]*p)%b\n\tp=(p*10)%b\np=0\nfor i in range(l-1):\n\tp=(p*10+s[i])%a\n\tif p==0 and s1[i+1]==0 and s[i+1]:\n\t\tprint(\"YES\")\n\t\tprint(''.join(map(str,s[:i+1])))\n\t\tprint(''.join(map(str,s[i+1:])))\n\t\treturn\nprint(\"NO\")\n", "from math import pow\ns=list(input())\na,b=map(int,input().split())\nl=len(s)\ns1=[0]*(l+1)\ns2=[0]*(l+1)\nfor i in range(l):\n\ts[i]=ord(s[i])-ord('0')\np=1\nfor i in range(l-1,-1,-1):\n\ts1[i]=(s1[i+1]+s[i]*p)%b\n\tp=(p*10)%b\np=0\nfor i in range(l-1):\n\tp=(p*10+s[i])%a\n\tif p==0 and s1[i+1]==0 and s[i+1]:\n\t\tprint(\"YES\")\n\t\tprint(''.join(map(str,s[:i+1])))\n\t\tprint(''.join(map(str,s[i+1:])))\n\t\treturn\nprint(\"NO\")", "s = input()\na,b= map(int,input().split())\nl = len(s)\nsu = [0]*(l+1)\np = 1\nflag =0\nfor i in range(l-1,0,-1):\n    su[i] = (su[i+1]+int(s[i])*p)%b\n    p = (p*10)%b\np = 0\nfor i in range(0,l-1):\n    p = (p+int(s[i]))%a\n    if p==0 and s[i+1]!='0' and su[i+1]==0:\n        print('YES')\n        print(s[:i+1])\n        print(s[i+1:])\n        flag =1\n        break\n    p= (p*10)%a\nif flag==0:\n    print('NO')"]