["def main():\n    n = int(input())\n    a = [input() for i in range(n)]\n    \n    result = 0\n    for i in range(26):\n        for j in range(i + 1, 26):\n            t = 0\n            ci = chr(i + ord('a'))\n            cj = chr(j + ord('a'))\n            for s in a:\n                if s.count(ci) + s.count(cj) == len(s):\n                    t += len(s)\n            result = max(result, t)\n    \n    print(result)\n    \n    \n    \nmain()", "# import sys\n# sys.stdin = open(\"cf593a.in\")\n\nalphabet = 'abcdefghijklmnopqrstuvwxyz'\n\nn = int(input())\nwords = [input().strip() for _ in range(n)]\nwords = [(word, set(word)) for word in words]\nwords = [(word, s) for word, s in words if len(s) <= 2]\n\nbest = 0\nfor c1 in alphabet:\n\tfor c2 in alphabet:\n\t\tshere = set([c1, c2])\n\t\tbest = max(best, sum(len(word) for word, s in words if not (s - shere)))\n\nprint(best)", "N = int(input())\nwords = [input() for i in range(N)]\n\nabc = 'abcdefghijklmnopqrstuvwxyz'\ndef countf(a, b):\n    c = a + b\n    s = 0\n    for w in words:\n        if w.strip(c) is '':\n            s += len(w)\n\n    return s\n\nm = 0\nfor a in abc:\n    for b in abc:\n        if a == b:\n            continue\n\n        m = max(countf(a, b), m)\n\nprint(m)\n", "from string import ascii_lowercase\nn = int(input())\nwords = [input() for _ in range(n)]\nwords = [word for word in words if len(set(word)) <= 2]\nbest = -1\nfor i1 in range(25):\n    for i2 in range(i1 + 1, 26):\n        cs = {ascii_lowercase[i1], ascii_lowercase[i2]}\n        cw = [word for word in words if set(word) <= cs]\n        cl = sum(len(word) for word in cw)\n        if cl > best:\n            best = cl\nprint(best)\n", "n = int(input())\ns = []\nfor i in range(n):\n    k = input()\n    s.append(k)\nmaxans = -1\nfor i in range(26):\n    for j in range(26):\n        ans = 0\n        for k in s:\n            for p in range(len(k)):\n                if k[p] != chr(ord('a') + i) and k[p] != chr(ord('a') + j):\n                    break\n            if k[p] == chr(ord('a') + i) or k[p] == chr(ord('a') + j):\n                ans += len(k)\n        if ans > maxans:\n            maxans = ans\nprint(maxans)\n", "n = int(input())\na = [input() for i in range(n)]\nalp = 'qwertyuiopasdfghjklzxcvbnm'\nans = 0\nfor i in range(26):\n  for j in range(i + 1, 26):\n    c1, c2 = alp[i], alp[j]\n    cur = 0\n    for s in a:\n      if set(s) in ({c1, c2}, {c1}, {c2}):\n        cur += len(s)\n    ans = max(ans, cur)\nprint(ans)\n", "n = int(input())\nletters = 'qwertyuiopasdfghjklzxcvbnm'\nwords=[]\nfor i in range (n):\n    words += [input()]\n\nmaxL=0\nfor i in range (25):\n    for j in range (i+1, 26):\n        letter1 = letters[i]\n        letter2 = letters[j]\n        currentL=0\n        for word in words:\n            good=True\n            for letter in word:\n                if letter!=letter1 and letter!=letter2:\n                    good=False\n            if good:\n                currentL += len(word)\n        if currentL > maxL:\n            maxL = currentL\nprint(maxL)\n", "import string\nn = int(input())\na = []\nfor i in range(n):\n        a.append(input())\nans = 0\nsmall = string.ascii_lowercase\nfor i in small:\n        for j in small:\n                tmp = 0\n                for s in a:\n                        cnt = 0\n                        for c in s:\n                                if c == i or c == j:\n                                        cnt += 1\n                        if cnt == len(s):\n                                tmp += len(s)\n                ans = max(ans, tmp)\nprint(ans)\n", "n=int(input())\ni=0\nx=[]\nwhile i<n:\n\tx.append(str(input()))\n\ti+=1\ni=25\nr=0\nwhile i:\n\tj=i\n\twhile j:\n\t\tj-=1\n\t\tt=0\n\t\tk=n\n\t\twhile k:\n\t\t\tk-=1\n\t\t\ty=x[k]\n\t\t\tz=len(y)\n\t\t\tok=1\n\t\t\twhile z:\n\t\t\t\tz-=1\n\t\t\t\tif ord(y[z])-ord('a')!=i:\n\t\t\t\t\tif ord(y[z])-ord('a')!=j:ok=0\n\t\t\tif ok:t+=len(y)\n\t\tif r<t:r=t\n\ti-=1\nprint(r)\n", "n = int(input())\n\n\ninp = [input() for i in range(n)]\n\ngets = []\n\nfor line in inp:\n    dt = {}\n    for c in line:\n        if c == ' ':\n            continue\n        if c in dt:\n            dt[c] += 1\n        else:\n            dt[c] = 1\n    ans = -1\n    if len(dt) > 2:\n        continue\n    gets.append(dt)\n\nlets = 'abcdefghijklmnopqrstuvwxyz'\n\nans = -1\nfor c1 in lets:\n    for c2 in lets:\n        if c2 <= c1:\n            continue\n        cans = 0\n        for l in gets:\n            failed = False\n            for ch in l:\n                if ch not in (c1, c2):\n                    failed = True\n            if failed:\n                continue\n            cans += sum(l.values())\n        if cans > ans:\n            ans = cans\n\nprint(ans)\n", "n=int(input())\nt=[[0 for i in range(26)] for j in range(26)]\nfor i in range(n):\n\ts=input()\n\tg=[0 for j in range(26)]\n\tfor j in s:\n\t\tg[ord(j)-ord('a')]+=1\n\tnb=0\n\tfor j in g:\n\t\tif j>0:nb+=1\n\tif nb==1:\n\t\tl=0\n\t\tfor j in range(26):\n\t\t\tif g[j]>0:l=j\n\t\tfor j in range(26):\n\t\t\tif l!=j:\n\t\t\t\tt[l][j]+=len(s)\n\t\t\t\tt[j][l]+=len(s)\n\telif nb==2:\n\t\tl1=-1\n\t\tl2=-1\n\t\tfor j in range(26):\n\t\t\tif g[j]>0:\n\t\t\t\tif l1==-1:l1=j\n\t\t\t\telse:l2=j\n\t\tt[l1][l2]+=len(s)\n\t\tt[l2][l1]+=len(s)\nnb=0\nfor i in range(26):\n\tfor j in range(26):\n\t\tnb=max(t[i][j],nb)\nprint(nb)", "import math\nfrom decimal import *\nimport sys\nfrom fractions import Fraction\n\n\nn=int(input())\n\nS=set()\nM=dict()\nma=0\nalf = \"abcdefghijklmnopqrstuvwxyz\"\nfor c in range(0,n):\n    s=input()\n    L=len(s)\n    co=len(set(s))\n    if co == 1:\n        ch=s[0]\n        for j in alf:\n            if ch+j not in S:\n                S.add(ch+j)\n                M[ch+j] = L\n            else:\n                M[ch+j] += L\n            if ch != j:\n                if j+ch not in S:\n                    S.add(j+ch)\n                    M[j+ch] = L\n                else:\n                    M[j+ch] += L\n    if co == 2:\n        ch1 = s[0]\n        for j in range(0,L):\n            if s[j] != ch1:\n                ch2 = s[j]\n        if ch1+ch2 not in S:\n            S.add(ch1+ch2)\n            M[ch1+ch2] = L\n        else:\n            M[ch1+ch2] += L\n        if ch2+ch1 not in S:\n            S.add(ch2+ch1)\n            M[ch2+ch1] = L\n        else:\n            M[ch2+ch1] += L\nfor i in alf:\n    for j in alf:\n        if i+j in S:\n            if M[i+j]>ma:\n                ma=M[i+j]\nprint(ma)\n    \n    \n", "n=int(input())\nword=[]\nval=[]\nalpha=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\nfor i in range(n):\n    a=input()\n    if len(set(a))>2:\n        pass\n    else:\n        word.append(set(a))\n        val.append(len(a))\nm=0\nfor i in alpha:\n    for j in alpha:\n        s=0\n        for k in range(len(word)):\n            if word[k].issubset({i,j}):\n                s+=val[k]\n        m=max(m,s)\nprint(m)", "n = int(input())\narr = [\".\"] * n\nd = dict()\nfor i in range(n):\n    arr[i] = input().strip()\n    s = set()\n    for j in range(len(arr[i])):\n        s.add(arr[i][j])\n    if len(s) <= 2:    \n        try:\n            d[arr[i]][0] += 1\n        except:\n            d[arr[i]] = [1, s]\n#print(d)    \nans = 0\nfor i in range(97, 97+26):\n    for j in range(97, 97+26):\n        c = 0\n        a, b = chr(i), chr(j)\n        q = set([a, b])\n        for k in list(d.keys()):\n            if q >= d[k][1]:\n                c += d[k][0] * len(k)\n        ans = max(ans, c)\nprint(ans)\n        \n", "n = int(input())\nwords = [input() for _ in range(n)]\n\nabc = list('qwertyuiopasdfghjklzxcvbnm')\nans = 0\nfor i in range(len(abc)):\n    for j in range(i+1,len(abc)):\n        preAns = 0\n        for word in words:\n            canAdd = True\n            for char in word:\n                if char != abc[i] and char != abc[j]:\n                    canAdd = False\n                    break\n            if canAdd:\n                preAns += len(word)\n        ans = max(ans, preAns)\nprint(ans)\n", "#!/usr/bin/env python3\n\nfrom collections import defaultdict\nfrom itertools   import combinations\n\ndef main():\n    n = int(input())\n    d = defaultdict(lambda: 0)\n    for i in range(n):\n        s = input()\n        c1 = c2 = None\n        for c in s:\n            if c not in (c1, c2):\n                if c1 is None:\n                    c1 = c\n                elif c2 is None:\n                    c2 = c\n                else:\n                    break\n        else:\n            if c2 is not None:\n                a = ord(c1) - 97\n                b = ord(c2) - 97\n                d[(min(a, b), max(a, b))] += len(s)\n            else:\n                a = ord(c1) - 97\n                for j in range(26):\n                    d[(min(a, j), max(a, j))] += len(s)\n    result = 0\n    for a, b in combinations(list(range(26)), 2):\n        result = max(result, d[(a, b)])\n    print(result)\n\ntry:\n    while True:\n        main()\nexcept EOFError:\n    pass\n", "import string\nn = int(input())\nd = dict()\nfor i in range(n):\n    word = input()\n    chars = set(word)\n    if len(chars) < 3:\n        dc = ''.join(sorted(chars))\n        d[dc] = d.get(dc, 0) + len(word)\nbest = 0\nfor c1 in string.ascii_lowercase:\n    for c2 in string.ascii_lowercase:\n        curscore = 0\n        for dc in d:\n            if set(dc) <= set(c1+c2):\n                curscore += d[dc]\n        if curscore > best:\n            best = curscore\nprint(best)", "n = int(input())\nc = [[0] * 26 for i in range(26)]\nfor w in range(n):\n    word = input()\n    wset = list(set(word))\n    wset[0] = ord(wset[0]) - ord('a')\n    if len(wset) > 1:\n        wset[1] = ord(wset[1]) - ord('a')\n    if len(wset) == 2:\n        c[wset[0]][wset[1]] += len(word)\n        c[wset[1]][wset[0]] += len(word)\n    if len(wset) == 1:\n        for i in range(26):\n            c[i][wset[0]] += len(word)\n            c[wset[0]][i] += len(word)\n            c[wset[0]][wset[0]] -= len(word)\nprint(max([max(c[i]) for i in range(26)]))    \n", "n=int(input())\ns=[input() for i in range(n)]\nl=[(set(x),len(x)) for x in s if len(set(x))<3]\nans=0\nn=len(l)\nt=[\"\"]+list(\"qwertyuiopasdfghjklzxcvbnm\")\nfor i in range(27):\n    for j in range(27):\n        if i==j: continue    \n        r=0\n        for k in range(n):\n            if len(l[k][0]|{t[i]}|{t[j]})<3: r+=l[k][1]\n        if r>ans: ans=r\nprint(ans)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom itertools import combinations\n\nn = int(input())\nlines = [input() for i in range(0,n)]\nans = 0\n\nfor a,b in combinations([chr(i) for i in range(ord('a'),ord('z')+1)], 2):\n    hoge = 0\n    for l in lines:\n        sets = set(l)\n        if len(sets) > 2 or (a not in sets and b not in sets): continue\n        if len(sets) == 2 and not (a in sets and b in sets): continue\n        hoge += len(l)\n    ans = max(ans, hoge)\nprint(ans)\n        \n            \n", "N = int(input())\ntbl = [[0]*26 for x in range(26)]\nfor n in range(N):\n\tword = input()\n\tchrs = [0]*26\n\tfor c in word: chrs[ord(c)-97] += 1\n\tstuff = [(i, x) for i, x in enumerate(chrs) if x > 0]\n\tif len(stuff) == 1:\n\t\tfor a in range(26):\n\t\t\tif a != stuff[0][0]:\n\t\t\t\ttbl[a][stuff[0][0]] += stuff[0][1]\n\t\t\t\ttbl[stuff[0][0]][a] += stuff[0][1]\n\telif len(stuff) == 2:\n\t\ttbl[stuff[0][0]][stuff[1][0]] += stuff[0][1] + stuff[1][1]\n\t\ttbl[stuff[1][0]][stuff[0][0]] += stuff[0][1] + stuff[1][1]\n\nans = 0\nfor a in range(26):\n\tfor b in range(26):\n\t\tans = max(ans, tbl[a][b])\n\nprint(ans)\n", "n = int(input()) \n\ndata = [] \nfor i in range(n): \n    data.append(input()) \n\nres = -1 \ncur_res = 0 \n\nfor i in range(ord('a'), ord('z') + 1): \n    for j in range(i + 1, ord('z') + 1): \n        for k in range(n): \n            if data[k].count(chr(i)) + data[k].count(chr(j)) == len(data[k]): \n                cur_res += len(data[k]) \n        res = max(res, cur_res) \n        cur_res = 0 \n\nprint(res) \n", "# n = int(input())\n# s = input().strip()\n# a = [int(tmp) for tmp in input().split()]\nn = int(input())\ns = [[0] * 26 for i in range(26)]\nfor i in range(n):\n    tmp = input().strip()\n    lel = [0] * 26\n    lens = len(tmp)\n    for j in tmp:\n        lel[ord(j) - ord('a')] = lens\n    if lel.count(0) == 24:\n        tmp = 0\n        for j in range(26):\n            if tmp == 0 and lel[j] != 0:\n                tmp += 1\n                a = j\n            if tmp == 1 and lel[j] != 0:\n                b = j\n        s[a][b] += lens\n        s[b][a] += lens\n    if lel.count(0) == 25:\n        for j in range(26):\n            if lel[j] != 0:\n                a = j\n        for j in range(26):\n            s[a][j] += lens\n            if j != a:\n                s[j][a] += lens\nmx = 0\nfor i in range(26):\n    for j in range(26):\n        mx = max(mx, s[i][j])\nprint(mx)", "words=[]\nn=int(input().strip())\nfor i in range(n):\n    words.append(input().strip())\n    \nlet=[chr(i) for i in range(ord('a'),ord('z')+1)]\nmax_tot_len=0\nfor i in range(len(let)):\n    for j in range(i+1,len(let)):\n        a=let[i]\n        b=let[j]\n        tot_len=0\n        for w in words:\n            if all([c in [a,b] for c in w]):\n                tot_len+=len(w)\n        if tot_len>max_tot_len:\n            max_tot_len=tot_len\nprint(max_tot_len)\n", "def valid(w,a,b):\n    for i in w:\n        if i not in [a,b]:\n            return False\n    return True\nn=int(input())\nwords=[]\nfor i in range(n):\n    s=input()\n    words.append(s)\nmaxi=0\nfor i in range(26):\n    for j in range(26):\n        a,b=chr(97+i),chr(97+j)\n        cur=0\n        for w in words:\n            if valid(w,a,b):\n                cur+=len(w)\n        if cur>maxi:\n            maxi=cur\n            \nprint(maxi)  "]