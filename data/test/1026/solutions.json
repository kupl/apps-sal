["n = int(input())\nB = list(map(int, input().split()))\npp = {}\nfor i in range(n):\n    if B[i] - (i + 1) not in pp:\n        pp[B[i] - (i + 1)] = 0\n    pp[B[i] - (i + 1)] += B[i]\nans = 0\nfor c in pp:\n    ans = max(ans, pp[c])\nprint(ans)", "from collections import Counter\nans = Counter()\ninput()\nfor i, b in enumerate(map(int, input().split())):\n    ans[b - i] += b\nprint(max(ans.values()))\n", "n = int(input())\nA = list(map(int, input().split()))\nB = [A[i] - (i + 1) for i in range(n)]\naaa = {}\ni = 0\nfor key in B:\n    aaa[key] = aaa.get(key, 0) + A[i]\n    i += 1\nprint(max(aaa.values()))", "n = int(input())\nmas = list(map(int, input().split()))\nans = []\nfor i in range(n):\n\tans.append([mas[i] - i, mas[i]])\nans.sort()\nmaxi = 0\np = -100000000\ns = 0\nfor i in range(n):\n\tif ans[i][0] == p:\n\t\ts += ans[i][1]\n\telse:\n\t\tp = ans[i][0]\n\t\tmaxi = max(maxi, s)\n\t\ts = ans[i][1]\nmaxi = max(maxi, s)\nprint (maxi)\n#print (*ans)\n", "n=int(input())\nb=list(map(int,input().split()))\nc=dict()\n#fdp=4*(10**5)\nfor i in range(n):\n    bi=b[i]\n    df=bi-(i+1)\n    #print(i,df)\n    #print(df+fdp-1)\n    c[df]=c.get(df,0)+i+1+df\n    #c[df+fdp-1]+=i+1+df\nprint(max(c.values()))", "import sys\n\ndef input():\n    return sys.stdin.readline()\n\ndef iinput():\n    return int(input())\n\ndef rinput():\n    return input().split()\n\ndef rlinput():\n    return [int(i) for i in input().split()]\n\ndef main():\n    #q = rlinput()\n    \n    n = iinput()\n    b = rlinput()\n    \n    q = dict()\n    \n    for i in range(n):\n        ind = i + 1 - b[i]\n        \n        if ind in q:\n            q[ind] += b[i]\n        else:\n            q[ind] = b[i]\n            \n    res = 0\n    \n    for i in q:\n        res = max(res, q[i])\n        \n    print(res)\n\n    \n    \n    \nfor i in range(1):\n    main()\n", "n = int(input())\na = list(map(int, input().split()))\nc = dict()\nfor i in range(len(a)):\n    d = a[i] - i\n    if d in c:\n        c[d].append(a[i])\n    else:\n        c[d] = [a[i]]\nans = 0\nfor i in c:\n    ans_p = 0\n    for j in c[i]:\n        ans_p += j\n    ans = max(ans, ans_p)\nprint(ans)", "from math import *\nimport sys\nfrom queue import *\n\n\nn = int(input())\na = list(map(int, input().split()))\nd = {}\nmx = 0\nfor i in range(n):\n    d[a[i] - i] = d.get(a[i] - i, 0) + a[i]\n    mx = max(mx, d[a[i] - i])\nprint(mx)\n", "n = int(input())\nb = list(map(int, input().split()))\nd = {}\nans = 0\nfor i in range(n):\n    diff = b[i] - i\n    if diff not in d:\n        d[diff] = 0\n    d[diff] += b[i]\n    ans = max(ans, d[diff])\nprint(ans)\n", "import sys\ninput = lambda : sys.stdin.readline().strip()\n# for i in range(int(input())):\nn = int(input())\na = list(map(lambda x: (x[0]-x[1],x[1]),enumerate(map(int,input().split()))))\ns = {}\nfor i,v in a:\n    if i in s:\n        s[i]+=v\n    else:\n        s[i]=v\nprint(max(s.values()))", "n = int(input())\na = list(map(int, input().split()))\nd = dict()\nfor i in range(n):\n    d[a[i] - i] = 0\nmaxi = 0\nfor i in range(n):\n    d[a[i] - i] += a[i]\n    if d[a[i] - i] > maxi:\n        maxi = d[a[i] - i]\nprint(maxi)\n    \n", "n = int(input())\nar = list(map(int, input().split()))\nlol = dict()\nkek = set()\nahah = []\nfor i in range(n):\n    if ar[i] - i in kek:\n        ahah.append(sorted([i, lol[ar[i] - i]]))\n    lol[ar[i] - i] = i\n    kek.add(ar[i] - i)\nahah.sort()\nA = [[] for _ in range(n)]\nfor a, b in ahah:\n    A[b].append(a)\ndp = [ar[i] for i in range(n)]\nfor i in range(n):\n    for elem in A[i]:\n        dp[i] = max(dp[i], dp[elem] + dp[i])\nprint(max(dp))", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append([i - a[i], i])\nb.sort()\ncomp = []\nnow = [b[0][1]]\nfor i in range(1, n):\n    if b[i - 1][0] == b[i][0]:\n        now.append(b[i][1])\n    else:\n        comp.append(now)\n        now = [b[i][1]]\ncomp.append(now)\nans = 0\nfor i in range(len(comp)):\n    now = 0\n    for elem in comp[i]:\n        now += a[elem]\n    ans = max(ans, now)\nprint(ans)", "n = int(input())\nline = list(map(int, input().split()))\nfor i in range(n):\n    line[i] -= i\ncou = dict()\nfor i in range(n):\n    if line[i] in cou:\n        cou[line[i]].append(i)\n    else:\n        cou[line[i]] = [i]\nans = -1\nfor i in cou:\n    t_ans = i * len(cou[i])\n    for el in cou[i]:\n        t_ans += el\n    ans = max(ans, t_ans)\nprint(ans)"]