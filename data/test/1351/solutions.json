["from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nl,r = inpl()\n\nfor i in range(l,r+1):\n    X = str(i)\n    if len(set(X)) == len(X):\n        print(i)\n        return\n\nprint(-1)\n", "from bisect import *\nfrom collections import *\nfrom itertools import *\nimport functools\nimport sys\nimport math\nfrom decimal import *\nfrom copy import *\nfrom heapq import *\ngetcontext().prec = 30\nMAX = sys.maxsize\nMAXN = 4000010\nMOD = 10**9+7\nspf = [i for i in range(MAXN)]\ndef sieve():\n    for i in range(2,MAXN,2):\n        spf[i] = 2\n    for i in range(3,int(MAXN**0.5)+1):\n        if spf[i]==i:\n            for j in range(i*i,MAXN,i):\n                if spf[j]==j:\n                    spf[j]=i\n\ndef mhd(a,b):\n    return abs(a[0]-b[0])+abs(b[1]-a[1])\n\ndef charIN(x= ' '):\n    return(sys.stdin.readline().strip().split(x))\n\ndef arrIN(x = ' '):\n    return list(map(int,sys.stdin.readline().strip().split(x)))\n\ndef eld(x,y):\n    a = y[0]-x[0]\n    b = x[1]-y[1]\n    return (a*a+b*b)**0.5\n\ndef lgcd(a):\n    g = a[0]\n    for i in range(1,len(a)):\n        g = math.gcd(g,a[i])\n    return g\n\ndef ms(a):\n    msf = -MAX\n    meh = 0\n    st = en = be = 0\n    for i in range(len(a)):\n        meh+=a[i]\n        if msf<meh:\n            msf = meh\n            st = be\n            en = i\n        if meh<0:\n            meh = 0\n            be = i+1\n    return msf,st,en\n\ndef ncr(n,r):\n    num=den=1\n    for i in range(r):\n        num = (num*(n-i))%MOD\n        den = (den*(i+1))%MOD\n\n    return (num*(pow(den,MOD-2,MOD)))%MOD\n\n\n\ndef flush():\n    return sys.stdout.flush()\n\n'''*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*'''\nl,r = arrIN()\nfor i in range(l,r+1):\n    if len(set([j for j in str(i)]))==len(str(i)):\n        print(i)\n        return\nprint(-1)", "l, r = map(int, input().split())\nfor x in range(l, r + 1):\n    s = str(x)\n    if len(s) == len(set(s)):\n        print(s)\n        return\nprint(-1)", "a,b = [int(i) for i in input().split()]\n\nfor i in range(a,b+1):\n    if len(set(str(i))) == len(str(i)):\n        print(i)\n        break\nelse:\n    print(-1)\n", "l, r = [int(i) for i in input().split()]\n\nfor i in range(l, r + 1):\n    s = list(str(i))\n    sl = set(s)\n    if len(s) == len(sl):\n        print(i)\n        return\n\nprint(-1)", "def main():\n    import sys\n    input = sys.stdin.readline\n    \n    def okay(n):\n        cnt = [0] * 10\n        while n:\n            cnt[n % 10] += 1\n            n //= 10\n        if max(cnt) > 1:\n            return 0\n        return 1\n    \n    l, r = list(map(int, input().split()))\n    \n    for i in range(l, r + 1):\n        if okay(i):\n            print(i)\n            return 0\n    \n    print(-1)\n    return 0\n\nmain()\n", "l, r = list(map(int, input().split()))\nfor k in range(l, r+1):\n    m = list(str(k))\n    h = set(m)\n    if len(m) == len(h):\n        print(k)\n        break\nelse: print(-1)\n", "import sys\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nl, r = map(int, input().split())\n\nfor i in range(l, r+1):\n  if len(set(str(i))) == len(str(i)):\n    print(i)\n    return\n\nprint(\"-1\")", "inp = lambda cast=int: [cast(x) for x in input().split()]\nprintf = lambda s='', *args, **kwargs: print(str(s).format(*args), flush=True, **kwargs)\n\nx, y = inp()\nfor i in range(x, y+1):\n    s = str(i)\n    if len(s) == len(set(s)):\n        print(i)\n        return\nprint(-1)", "def dd(i):\n    return len(set(str(i))) == len(str(i))\n\nL, R = list(map(int, input().split()))\nfor i in range(L, R+1):\n    if dd(i):\n        print(i)\n        break\nelse:\n    print(-1)\n\n", "l, r = list(map(int, input().split()))\nanswer = \"-1\"\nfor i in range(l, r + 1):\n    s = str(i)\n    digits = set(list(s))\n    if len(s) == len(digits):\n        answer = s\n        break\nprint(answer)\n", "l, r = list(map(int, input().split()))\n\nfor i in range(l, r+1):\n\n    S = str(i)\n    used = set()\n    for s in S:\n        used.add(s)\n    if len(S) == len(used):\n        print(S)\n        return\nprint(-1)\n", "n, k = map(int, input().split())\nfor i in range(n, k+1):\n    if len(str(i)) == len(set(str(i))):\n        print(i)\n        return\nprint(-1)", "l,r=map(int,input().split())\ndef alldiff(i):\n    s=list(str(i))\n    m=set(s)\n    if len(s)==len(m):\n        return True\n    return False\nfor i in range(l,r+1):\n    if alldiff(i):\n        print(i)\n        quit()\nprint(-1)", "# alpha = \"abcdefghijklmnopqrstuvwxyz\"\n# prime = 998244353 \n# INF = 1000000000000000000000\n\n# from sys import stdout\n# from heapq import heappush, heappop\nfrom collections import defaultdict\n# from collections import deque  \n\n# from math import sqrt    \n# from math import gcd\n# from math import log2\n\nt = 1# int(input())\n\nfor test in range(t):\n    # n = int(input())\n    found = 0\n    l, r = list(map(int, input().split()))\n    for i in range(l, r+1):\n        a = list(str(i))\n        if len(set(a)) == len(a):\n            print(i)\n            found = 1\n            break\n    if found==0:\n        print(-1)\n\n\n    \n    \n", "l, r = list(map(int, input().split()))\nfor i in range(l, r + 1):\n    if len(set(str(i))) == len(str(i)):\n        print(i)\n        break\nelse:\n    print(-1)", "def distinct(x):\n\ta=set()\n\tx=str(x)\n\tfor i in x:\n\t\ta.add(i)\n\treturn (len(x)==len(a))\nl,r=[int(x) for x in input().split(' ')]\nans=-1\nfor x in range(l,r+1):\n\tif distinct(x):\n\t\tans=x\n\t\tbreak\nprint(ans)", "'''input\n121 130\n'''\nfrom sys import stdin\n\n\n# main starts\nl, r = list(map(int, stdin.readline().split()))\nx = l\nfor i in range(l, r + 1):\n\tarr = list(str(i))\n\tif len(arr) == len(set(arr)):\n\t\tprint(i)\n\t\tbreak\nelse:\n\tprint(-1)\n", "l, r = map(int, input().split())\nfrom collections import Counter\n\n\nfor i in range(l, r + 1):\n\ts = str(i)\n\tc = Counter(s)\n\tif len(s) == len(c):\n\t\tprint(i)\n\t\treturn\n\nprint(-1)", "l, r = map(int, input().split())\n\nfor x in range(l, r + 1):\n    s = set(list(str(x)))\n    if len(s) == len(str(x)):\n        print(x)\n        return\nprint(-1)", "n, m = map(int, input().split())\na = set()\nfor i in range(n, m + 1):\n    a = set(str(i))\n    if len(str(i)) == len(a):\n        print(i)\n        return\nprint(-1)", "l, r = [int(i) for i in input().split()]\nfor x in range(l, r+1):\n    if len(set(str(x))) == len(str(x)):\n        print(x)\n        break\nelse:\n    print(-1)\n\n"]