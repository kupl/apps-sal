["n,m = [int(i) for i in input().split()]\nl = []\nfor i in range(n):\n    l.append(input().strip())\nwhile len(l)%2 == 0:\n    mirror = True\n    for i in range(len(l)//2):\n        if l[i] != l[len(l)-1-i]:\n            mirror = False\n            break\n    if mirror:\n        l = l[:len(l)//2]\n    else:\n        break\n\nprint(len(l))\n", "n,m=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(''.join(input().split()))\nwhile n%2==0:\n    k=0\n    for i in range(n//2):\n        if a[i]==a[n-i-1]:\n            k+=1\n    if k!=n//2:\n        break\n    n=n//2\nprint(n)", "def can_mirror(matrix):\n    if len(matrix) % 2 != 0:\n        return False\n    mid = len(matrix) // 2\n    for i in range(mid):\n        lower = -i-1\n        if matrix[mid+lower] != matrix[mid+i]:\n            return False\n    return True\n\n\ndef mirror(matrx):\n    mid = len(matrix) // 2\n    return matrix[:mid]\n\n\nn, m = list(map(int, input().split()))\nmatrix = []\nfor i in range(n):\n    matrix.append(list(map(int, input().split())))\nwhile can_mirror(matrix):\n    matrix = mirror(matrix)\nprint(len(matrix))\n", "def check(n, m, a):\n    for i in range(n // 2):\n        for j in range(m):\n            if a[i][j] != a[-i - 1][j]:\n                return 0\n    if n % 2:\n        return 0\n    return 1\n\ndef new(n, a):\n    return a[:(n + 1) // 2]\n\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\ncnt = 0\nwhile (not (n % 2)) and check(n, m, a):\n    a = new(n, a)\n    n //= 2\nprint(len(a))", "from sys import stdin\n\ndef isreversed(a):\n    if(len(a) % 2 == 0):\n        if(a[:len(a) // 2] == a[len(a) // 2:][::-1]):\n            return True\n    return False\n\na = []\nn, m = list(map(int, stdin.readline().split()))\nfor i in range(n):\n    a.append(list(map(int, stdin.readline().split())))\nres = n\nwhile(isreversed(a)):\n    res //= 2\n    a = a[:len(a) // 2]\nprint(res)", "n,m=map(int,input().split())\nmatrix=[]\n\nfor i in range(n):\n    matrix.append([int(x) for x in input().split()])\n\ndef mirror(matrix):\n    mirrormatrix=matrix[:]\n    matrix.reverse()\n    mirrormatrix+=matrix[:]\n    matrix.reverse()\n    return mirrormatrix\n\nwhile True:\n    if len(matrix)%2==0:\n        if mirror(matrix[:int(len(matrix)/2)])==matrix:\n            matrix=matrix[:int(len(matrix)/2)]\n        else:\n            print(len(matrix))\n            break\n    else:\n        print(len(matrix))\n        break", "n, m = map(int, input().split())\n\nans = n\n\narr = []\nfor i in range(n):\n    arr.append(input())\n\nwhile True:\n    if n & 1:\n        print(ans)\n        break\n    else:\n        k = n // 2\n        for i in range(k):\n            if arr[i] != arr[n - i - 1]:\n                print(ans)\n                return\n        n = k\n        ans = n", "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\n\ndef pol(x, y):\n  if y % 2 != 0:\n    return False\n  l, r = 0, y - 1\n  while l < r:\n    if a[l][x] != a[r][x]:\n      return False\n    l += 1\n    r -= 1\n  return True\nresult = 1\nfor i in range(m):\n  j = n\n  while pol(i, j):\n    j //= 2\n  result = max(result, j)\nprint(result)", "def symetry(a,n,m):\n   symmetry = 0\n   k = n // 2\n   for x in range(n):\n        for y in range(m):\n             k = n - x - 1 \n             if k < n - 1 and a[x][y] != a[k][y]:\n                  symmetry = 1\n   return symmetry \n      \nn, m = list(map(int, input().split()))\nlist_anmi = [list(map(int, input().split())) for i in range(n)]\nsym = 0\nwhile n % 2 == 0:   \n  if symetry(list_anmi[0 : n],n,m) == 0:\n     n = n // 2\n  else:\n      break\nsym = n\nprint(sym)\n", "n, m = [int(i) for i in input().split()]\na = []\nfor i in range(n):\n    a.append(input())\nresult = n\nflag = True\nwhile n % 2 == 0:\n    n = int(n / 2)\n    x1 = n\n    x2 = n + 1\n    while x1 > 0:\n        if a[x1 - 1] != a[x2 - 1]:\n            flag = False\n            break\n        x1 -= 1\n        x2 += 1\n    if flag == False:\n        break\n    result = n\n\n\nprint(result)\n", "# =__='\n\nn, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.append(input())\n\nb = (n % 2 == 0)\nwhile (b):\n    b = True\n    for i in range(n // 2):\n        if (a[i] != a[n - i - 1]):\n            b = False\n            break\n    \n    b = b and (n % 2 == 0)\n    if (b):\n        n = n // 2\n\nprint(n)\n", "def check(i, j):\n    nonlocal a\n    while i < j:\n        if a[i] != a[j]:\n            return False\n        i += 1\n        j -= 1\n    return True\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(input().strip())\nlast = n\nwhile last % 2 == 0:\n    if check(0, last - 1):\n        last //= 2\n    else:\n        break\nprint(last)", "def checkMatr(a):\n    res = True\n    ln = len(a)\n    hln = int(ln/2)\n    if ln % 2 != 0:\n        res = False\n    else:\n        for i in range(hln):\n            if a[i] != a[ln-1-i]:\n                res = False\n    return res\n\nn, m = list(map(int, input().split()))\ntable = []\nfor i in range(n):\n    table.append(str(input()))\n\nwhile checkMatr(table):\n    table = table[:int(len(table)/2)]\n\nprint(len(table))\n", "\ndef pretty_print_list(a):\n    for aa in a:\n        print(*aa)\n\n\n        \nm, n = list(map(int, input().split()))\na = [[i for i in map(int, input().split())] for _ in range(m)]\n\n#pretty_print_list(a)\n\nif m % 2:\n    print(m)\n    return\n'''    \nfor i in range(m):\n    print(i, a[i])\n    print(-i, a[m - i - 1])\n'''\n    \n#return\nm2 = m\nwhile not m2 % 2:\n    m2 //= 2\n    for i in range(m2):\n        #print(a[i], a[-i])\n        #print(i, a[i])\n        #if a[i] != a[-i]:\n        if a[i] != a[2 * m2 - i - 1]:\n            print(m2 * 2)\n            return\nprint(m2)\n\n", "import sys\nn,m = list(map(int,input().split()))\na=[]\nfor i in range(n):\n\ta.append(''.join(input().split()))\nif n==1:\n\tprint(1)\n\treturn\nif n%2:\n\tprint(n)\n\treturn\nd=n//2\nsmall=n\nwhile d:\n\ti=d-1\n\tsymmetry=True\n\tfor j in range(d,2*d,1):\n\t\tif a[i] != a[j]:\n\t\t\tsymmetry=False\n\t\t\tbreak\n\t\ti-=1\n\tif symmetry:\n\t\tsmall=d\n\telse:\n\t\tbreak\n\t\t\n\tif d%2:\n\t\tbreak\n\td//=2\n\nprint(small)\n\n", "n, m = tuple(map(int, str.split(input())))\na = list([input() for _ in range(n)])\nwhile n % 2 == 0 and all([a[i] == a[-i - 1] for i in range(n // 2)]):\n\n    n //= 2\n    a = a[:n]\n\nprint(n)\n", "def readln(): return tuple(map(int, input().split()))\n\nn, m = readln()\na = [readln() for _ in range(n)]\nans = n\nwhile ans % 2 == 0:\n    p1 = a[:ans // 2]\n    p2 = a[ans // 2:]\n    p2.reverse()\n    if p1 != p2:\n        break\n    a = p1\n    ans //= 2\nprint(ans)", "n,m = map(int,input().split())\nmatrix = []\nfor i in range(n):\n    arr = list(map(int,input().split()))\n    matrix.append(arr)\nwhile n and n&1==0:\n    t = n//2\n    flag = True\n    for i in range(n):\n        if matrix[i] != matrix[n-1-i]:\n            flag = False\n    if flag == False:\n        break\n    else:n >>= 1\nprint(n)", "__author__ = 'Lipen'\n\n\ndef main():\n\tn, m = map(int, input().split())\n\ta = []\n\tfor _ in range(n):\n\t\ta.append(input())\n\n\twhile n%2==0:\n\t\tif a[:n//2] != a[:n//2-1:-1]:\n\t\t\tbreak\n\t\tn //= 2\n\t\ta = a[:n]\n\n\tprint(n)\n\nmain()", "n, m = map(int, input().split())\nif n & 1: print(n)\nelse:\n    k, t = n // 2, [int(input()[:: 2], 2) for i in range(n)]\n    while True:\n        if t[: k] != t[k: 2 * k][:: -1]:\n            print(2 * k)\n            break\n        elif k & 1:\n            print(k)\n            break\n        k //= 2", "#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      Administrator\n#\n# Created:     03/05/2014\n# Copyright:   (c) Administrator 2014\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\nn, m = map(int, input().split())\nif n & 1 :\n    print(n)\nelse:\n    k, t = n // 2, [int(input()[::2], 2) for i in range(n)]\n    while True:\n        if t[:k] != t[k:2*k][::-1]:\n            print(2 * k)\n            break\n        elif k & 1:\n            print(k)\n            break\n        k //= 2", "n, m = map(int, input().split())\na = [int(input()[::2], 2) for i in range(n)]\nif n & 1:\n    print(n)\nelse:\n    k = n // 2\n    while True:\n        if a[:k] != a[k:k*2][::-1]:\n            print(k * 2)\n            break\n        elif k & 1:\n            print(k)\n            break\n        k //= 2", "import sys\n\ndef mirror(row, matrix):\n    if row % 2:\n        return row\n    else:\n        for i in range(row // 2):\n            if matrix[i] != matrix[row - 1 - i]:\n                return row\n        return mirror(row // 2, matrix)\n\ndef __starting_point():\n    n, m = list(map(int, sys.stdin.readline().split()))\n    matrix = [list(map(int, i.split())) for i in sys.stdin.readlines()]\n    print(mirror(n, matrix))\n\n\n__starting_point()", "(a,b)=map(int, input().split())\nif a%2==0:\n    s=[0]*a\n    for i in range(a):\n        s[i]=[0]*b\n        s[i]=list(map(int, input().split()))\n    while s[:a//2]==s[:a//2-1:-1] and len(s)>1:\n        a=a//2\n        s=s[:a]\nelse:\n    for i in range(a):\n        n=input()\nprint(a)      ", "n, m = map(int, input().split())\nmat = [input() for _ in range(n)]\nans = n\n\nwhile ans > 1 and ans % 2 == 0:\n    if mat[:ans] == list(reversed(mat[:ans])):\n        ans //= 2\n    else:\n        break\n    if ans == 1:\n        if len(set(mat)) > 1:\n            ans = 2\n        break\n\nprint(ans)"]