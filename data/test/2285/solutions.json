["for i in range(int(input())):\n    t = input().split(':')\n    if t[-1] == '': t.pop()\n    elif t[0] == '': t.pop(0)\n    if '' in t: t[t.index('')] = ('0000:' * (9 - len(t)))[: -1]\n    print(':'.join('0' * (4 - len(i)) + i for i in t))", "for i in range(int(input())):\n    t = input().split(':')\n    if '' in t:\n        j = t.index('')\n        t[j: j + 1] = [''] * (9 - len(t))\n    print(':'.join(j.rjust(4, '0') for j in t))", "n = int(input())\nshort_ips = []\nfor i in range(n):\n    short_ips.append(input())\n\n\n# leading zeros can be deleted, but has to have one number remained\n# Continuous sequences of 16-bit zero blocks can be shortened to \"::\"\n\n\nanswers = [[]  for x in range(n)]\nans_id = -1\nfor ip in short_ips:\n    ans_id += 1\n    visited = False\n    segments = ip.split(':')\n    for segment in segments:\n        if len(segment) == 0:\n            if visited:\n                answers[ans_id].append(\"0\"*4)\n                continue\n            visited = True\n            missing = 8 - len(segments)\n            for i in range(missing+1):\n                answers[ans_id].append(\"0\"*4)\n        elif len(segment) == 4:\n            answers[ans_id].append(segment)\n        else:\n            leading = 4 - len(segment)\n            answers[ans_id].append(\"0\" *leading + segment)\n\nfor restored in answers:\n    print(':'.join(restored))", "n = int(input())\n\nadrs = [input().split(':') for i in range(n)]\n\nres = []\n\nfor ad in adrs:\n    new_ad = ''\n    ind = 0\n    for s in ad:\n        if s:\n            new_ad += '0'*(4-len(s)) + s + ' '\n        elif s == '::':\n            res.append('0000 ' * 8)\n            break\n        elif not s and ind == 0:\n            new_ad += '0000 '*(8-len(ad)+ad.count(''))\n            ind = 1\n    res.append(new_ad)\n\n    \nfor x in res:\n    print(x.replace(' ', ':')[:39])", "n = int(input())\nfor i in range(n):\n\tr = input().split(':')\n\ts = ':'.join(x.zfill(4) if x else x for x in r)\n\twhile len(s) < 39:\n\t\tx = s.index('::')\n\t\ts = s[:x + 1] + '0000:' + s[x + 1:]\n\tif '::' in s:\n\t\tx = s.index('::')\n\t\ts = s[:x + 1] + s[x + 2:]\n\tprint(s.strip(':'))\n", "import sys\n\ndef solve():\n    n = int(input())\n    for test in range(n):\n        line = input().split(':')\n        i = 0\n        while i < len(line):\n            if i > 0 and line[i] == '' and line[i-1] == '':\n                line.pop(i)\n                i-=1\n            i+=1\n        for i, string in enumerate(line):\n            if string == '': line[i] = modify(string, want = (32 - 4 * (len(line) - 1)))\n            else: line[i] = modify(string)\n        tempstr = ''.join(line)\n        chunked = [tempstr[i: i + 4] for i in range(0, 32, 4)]\n        print(':'.join(chunked))\n\ndef modify(string, want = 4):\n    while len(string) < want:\n        string='0' + string\n    return string\n        # print(line)\n        # res = \"\"\n        # otherblocks = 0\n        # sawprev = False\n        # for c in line:\n        #     if c != ':' and sawprev == False:\n        #         otherblocks+=1\n        #         sawprev = True\n        #     if c == ':':\n        #         sawprev = False\n        # print(otherblocks)\n\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()", "def f(s):\n    res = []\n    sp = s.split(\":\")\n    if not sp[0]:\n        sp[0] = \"0\"\n    if not sp[-1]:\n        sp[-1] = \"0\"\n    for b in sp:\n        if b:\n            res.append(\"{:0>4}\".format(b))\n        if not b:\n            res.extend((\"0000\" for i in range(8-len(sp)+1)))\n    return(\":\".join(res))\n\nfor i in range(int(input())):\n    tmp = input()\n    print(f(tmp))\n\n#print(check(\"R23C55\"))\n#print(check(\"R228C494\"))\n#print(f(\"::\"))\n", "count=input()\n#count=5\nfor i in range(int(count)):\n    n=input()\n    #n='::a:6:c50:83:4f:7f0d:9'\n    ip=n.split(':')\n    #print(ip)\n    begin=0\n    end=0\n    if (ip[0]=='' and ip[1]=='' and len(ip)>8):\n        begin=1\n    if (ip[len(ip)-2]=='' and ip[len(ip)-1]==''  and len(ip)>8):\n        end=1\n    while len(ip)<8:\n        index=ip.index('')\n        ip=ip[:index]+['']+ip[index:]\n    #print(ip)\n    for item in ip:\n        i=item\n        while len(i)<4:\n            i='0'+i\n        ip[ip.index(item)]=i\n    if end==1:\n        ip=ip[:len(ip)-1]\n    if begin==1:\n        ip=ip[1:]\n    print(':'.join(ip))\n\n\n", "import re\n\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    group_count = s.count(':') + 1\n    if group_count < 8:\n        s = re.sub('::', ':' + (9 - group_count) * '0000:', s)\n    elif group_count == 9:\n        s = re.sub('::', ':', s)\n    groups = s.split(':')\n    for i, group in enumerate(groups):\n        if len(group) < 4:\n            groups[i] = (4 - len(group)) * '0' + group\n    print(':'.join(groups))\n", "import re\n\nn = int(input())\nfor i in range(n):\n    s = input().strip()\n    group_count = s.count(':') + 1\n    s = re.sub('::', ':' + (9 - group_count) * '0000:', s)\n    groups = s.split(':')\n    for i, group in enumerate(groups):\n        if len(group) < 4:\n            groups[i] = (4 - len(group)) * '0' + group\n    print(':'.join(groups))\n", "n = int(input())\nlist=[]\nfor i in range(n):\n    str=input()\n    list=str.split(\":\")\n    if(str.count(\"::\")>0):\n        t=list.count(\"\")\n        if(t==3):\n            t=\"0000:\"*8\n            print(t[:len(t)-1])\n        elif t==2:\n            if str[0:2]=='::':\n\n                str=str.replace(\"::\",\"0000:\"*(10-len(list)))\n                res=\"\"\n                list2=str.split(\":\")\n                for i in range(len(list2)):\n                    res+='0'*(4-len(list2[i]))+list2[i]+\":\"\n                print(res[0:len(res)-1])\n                #print(str)\n\n            else:\n                str=str.replace(\"::\",\":0000\"*(10-len(list)))\n                res=\"\"\n                list2=str.split(\":\")\n                for i in range(len(list2)):\n                    res+='0'*(4-len(list2[i]))+list2[i]+\":\"\n                print(res[0:len(res)-1])\n                #print(str)\n        else:\n            str=str.replace(\"::\",\":0000:\"*(9-len(list)))\n            str=str.replace(\"::\",\":\");\n            res=\"\"\n            list2=str.split(\":\")\n            for i in range(len(list2)):\n                res+='0'*(4-len(list2[i]))+list2[i]+\":\"\n            print(res[0:len(res)-1])\n          #  print(str)\n\n\n\n    else:\n        res=\"\"\n        for i in range(len(list)):\n            res+='0'*(4-len(list[i]))+list[i]+\":\"\n        print(res[0:len(res)-1])\n", "def s():\n\tn = int(input())\n\tdef st(x):\n\t\tif x[0] == ':':\n\t\t\tx = x[1:]\n\t\tif x[-1] == ':':\n\t\t\tx = x[:-1]\n\t\treturn x\n\tfor _ in range(n):\n\t\ta = st(input()).split(':')\n\t\tfor i in range(len(a)):\n\t\t\tif len(a[i]) == 0:\n\t\t\t\ta[i] = '0000:'*(8-len(a))+'0000'\n\t\t\telif len(a[i])<4:\n\t\t\t\ta[i] = '0'*(4-len(a[i]))+a[i]\n\t\tprint(*a,sep=':')\ns()", "n = int(input())\nips = [input() for j in range(n)]\n\nfor ip in ips:\n    if ip.find(\"::\") != -1:\n        ip = ip.replace(\"::\", \":\" * (9 - ip.count(\":\")))\n    comps = ip.split(\":\")\n    for i in range(len(comps)):\n        comps[i] = \"0\" * (4 - len(comps[i])) + comps[i]\n    print(\":\".join(comps))", "for i in range(int(input())):\n  ipv6 = input().split(':')\n  ipv6 = [((4 - len(i))*'0' + i) if i != '' else '' for i in ipv6]\n  if ipv6[-1] == '':\n    ipv6[-1] = '0000'\n  if ipv6[0] == '':\n    ipv6[0] = '0000'\n  if '' in ipv6:\n    string = '0000:'*(8 - len(ipv6) + 1)\n    ipv6[ipv6.index('')] = string[:-1]\n  if '' in ipv6:\n    ipv6.remove('')\n  print(':'.join(ipv6))", "import re\nn=int(input())\nfor i in range(n):\n\ts=input().strip()\n\tgroup_count=s.count(':')+1\n\ts=re.sub('::',':'+(9-group_count)*'0000:',s)\n\tgroups=s.split(':')\n\tfor i,group in enumerate(groups):\n\t\tif len(group)<4:\n\t\t\tgroups[i]=(4-len(group))*'0'+group\n\tprint(':'.join(groups))\n", "\n\ndef restora(lin):\n    lin = lin.split(\":\")\n    ans = []\n    falt = 8\n    for w in lin:\n        if w != \"\":\n            falt -= 1\n    for w in lin:\n        if w == \"\":\n            while falt > 0:\n                ans.append(\"0000\")\n                falt -= 1\n            continue\n        while len(w) < 4:\n            w = '0' + w\n        ans.append(w)\n    return ':'.join(ans)\n\n\ndef main():\n    n = int(input())\n    for i in range(n):\n        print(restora(input()))\n\n\nmain()\n", "\ndef index(lena):\n    if lena==8:\n        return 4\n    elif lena==7:\n        return 9\n    elif lena==6:\n        return 14\n    elif lena==5:\n        return 19\n    elif lena==4:\n        return 24\n    elif lena==3:\n        return 29\n    elif lena==2:\n        return 34\n    elif lena==1:\n        return 39\n    \n   \n            \n        \n\n\ns = int(input())\n\nip = []\nfor a in range(s):\n    q = input().split(':')\n    q1 = []\n    c=0\n    for a in q:\n        if a=='' and c==0:\n            q1.append(a)\n            c = 1\n        elif a=='' and c==1:\n            pass\n        \n        else:\n            q1.append(a)\n        \n\n    ip.append(q1)\n    \n    \n\nfor a in ip:\n    s = []\n    lena = len(a)\n    z = '0000:0000:0000:0000:0000:0000:0000:0000'\n    for i in range(lena):\n        if a[i]=='':   \n            s.append(z[:index(lena)])\n        else:    \n            q = \"{0:0>4}\".format(a[i])\n            s.append(q)\n    res = ':'.join(s)\n    print(res)", "for i in range(int(input())):\n\n    t = input().split(':')\n\n    if t[-1] == '': t.pop()\n\n    elif t[0] == '': t.pop(0)\n\n    if '' in t: t[t.index('')] = ('0000:' * (9 - len(t)))[: -1]\n\n    print(':'.join('0' * (4 - len(i)) + i for i in t))\n\n\n\n# Made By Mostafa_Khaled\n", "def zr(s):\n\ttmp=':0000'\n\tif s=='::':\n\t\treturn tmp[1:]+7*tmp\n\tind=s.find(\"::\")\n\tif ind<0:\n\t\treturn s\n\th,k=1,0\n\tif ind==0 or ind==len(s)-2:\n\t\tif ind>0:\n\t\t\th=2\n\t\telse:\n\t\t\tk=1\n\t\tddc=9-s.count(\":\")\n\telse:\n\t\tddc=8-s.count(':')\n\treturn (s[:ind]+ddc*tmp+s[ind+h:])[k:]\n\ndef t4(s):\n\tls=len(s)\n\tif ls==4:\n\t\treturn s\n\treturn (4-ls)*'0'+s\n\ndef spu(s):\n\tns=''\n\tfc=0\t\n\tsc=s.find(':')\n\twhile sc>0:\n\t\tns+=t4(s[fc:sc])+':'\n\t\tfc=sc+1\t\t\n\t\tsc=s.find(':',fc)\n\tns+=t4(s[fc:])\n\treturn ns\n\nn=int(input())\nv=[]\nfor c in range(n):\n\tv.append(spu(zr(input())))\nfor c in v:\n\tprint(c)", "for _ in range(int(input())):\n    D = input().split(':')\n    if not D[0]:\n        D = D[1:]\n    if not D[-1]:\n        D.pop()\n    \n    n = len(D)\n    for i in range(n):\n        D[i] = D[i].zfill(4) if D[i] else '0000:' * (8 - n) + '0000'\n    \n    print(':'.join(D))", "for _ in range(int(input())):\n    D = input()\n    print(':'.join(d.zfill(4) for d in D.replace('::', ':'*(9-D.count(':')))\n                                        .split(':')))", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef do(s):\n\tr = []\n\tfor i in s.split(':'):\n\t\tr.append('0'*(4-len(i))+i)\n\treturn ':'.join(r)\n\nn = mint()\nfor i in range(n):\n\ts = minp()\n\tm = s.find(\"::\")\n\tif m != -1:\n\t\tprint(do(s[:m])+':0000'*(8-s.count(':'))+':'+do(s[m+2:]))\n\telse:\n\t\tprint(do(s))\n", "n = int(input())\nfor i in range(n):\n    ans = ''\n    k =''\n    s = input().split(':')\n    c = m=0\n    for g in range(len(s)):\n        if s[g] != '':\n            c += 1\n    if c == 8:\n        for j in range(c):\n            s[j] = (4-len(s[j]))*'0' + s[j]\n            ans += s[j] +':'\n    else:\n        k = (8-c)*'0000:'\n        for j in range(len(s)):\n            if s[j] == '':\n                ans += k\n                k = ''\n                m = 1\n            else:\n                s[j] = (4-len(s[j]))*'0' + s[j]\n                ans += s[j] +':'\n    ans += k\n    ans = ans[:-1]\n    print(ans)"]