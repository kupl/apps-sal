["n = int(input())\narr = list(map(int, input().split()))\narr.sort()\narr = arr[::-1]\nans = [arr[0]]\nfor i in range(1, n):\n\tif(arr[i] < ans[-1]):\n\t\tans.append(arr[i])\n\telse:\n\t\tans.append(max(0, ans[-1] - 1))\nprint(sum(ans))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nfor i in range(n - 2, -1, -1):\n    a[i] = max(min(a[i], a[i + 1] - 1), 0)\nprint(sum(a))\n", "n = int(input())\nc = list(map(int, input().split()))\nret = set()\nfor x in c:\n    for y in range(x, -1, -1):\n        if y not in ret:\n            ret.add(y)\n            break\nprint(sum(ret))\n", "n = [int(s) for s in input().split()]\na = [int(s) for s in input().split()]\nx = set()\nres = 0\nfor i in reversed(sorted(a)):\n    while i>0:\n        if i in x:\n            i-=1\n        else:\n            res+=i\n            x.add(i)\n            break\nprint(res)\n", "n, a, s, v = int(input()), sorted(map(int, input().split()), reverse=True), set(), 0\nfor ai in a:\n    while ai and ai in s:\n        ai -= 1\n    s.add(ai)\n    v += ai\nprint(v)", "N = int(input())\nletters = list(map(int, input().split()))\nletters.sort()\nlennow = 0\nfor i in range(len(letters) - 2, -1, -1):\n    letters[i] = max(0, min(letters[i + 1] - 1, letters[i]))\nprint(sum(letters))", "n = int(input())\nrng = [int(t) for t in input().split()]\n\nans = 0\nwhile len(rng) != 0:\n    mx = max(rng)\n\n    if mx <= 0:\n        break\n\n    ans += mx\n\n    rng.remove(mx)\n    for i in range(len(rng)):\n        if rng[i] == mx:\n            rng[i] -= 1\n\nprint(ans)", "n=int(input())\nip=list(map(int,input().split()))\nop=[]\ncount=0\nfor i in ip:\n    if i not in op:\n        count+=i\n        op.append(i)\n    else:\n        for j in range(1,i+1):\n            if i-j not in op:\n                count+=i-j\n                op.append(i-j)\n                break\n            else:\n                continue\nprint(count)\n", "n=int(input())\nL=[int(x) for x in input().split()]\nL.sort()\nL=L[::-1]\nans=0\ndis=L[0]+1\nfor i in L:\n    ans+=max(0,min(dis,i))\n    dis=min(dis,i)-1\nprint(ans)\n", "n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse = True)\ncheck = set()\nans = 0\nfor i in l:\n    x = i\n    while x in check:\n        x -= 1\n    if x < 0:\n        continue\n    ans += x\n    check.add(x)\nprint(ans)", "n = input()\na_in = list(map(int, input().split()))\na = list(reversed(sorted(a_in)))\nprev = 1000000001\nans = 0\nfor c in a:\n    if c >= prev:\n        c = prev - 1\n    if c <= 0:\n        break\n    ans += c\n    prev = c\nprint(ans)\n", "n = int(input())\ndata = list(map(int, input().split()))\nanswer = 0\nfor i in range(n):\n    if data.count(data[i]) == 1:\n        answer += data[i]\n    else:\n        while data[i] > 0:\n            if data.count(data[i]) == 1:\n                answer += data[i]\n                break\n            else:\n                data[i] -= 1\nprint(answer)", "n = int(input())\na = [int(s) for s in input().split()]\n\na.sort()\nb = 10**9 + 1\nsum = 0\nfor i in range(n-1, -1, -1):\n    if min(a[i], b - 1) < 1:\n        break\n    sum += min(a[i], b - 1)\n    b = min(a[i], b - 1)\n\nprint(sum)\n", "3\n\nn = int(input())\na = list(map(int, input().split()))\n\nused = set()\nreversed(sorted(a))\ni = 0\nwhile i < n:\n    if a[i] == 0:\n        i += 1\n    else:\n        if a[i] not in used:\n            used.add(a[i])\n            i += 1\n        else:\n            a[i] -= 1\nprint(str(sum(a)))\n", "n = int(input())\nai = list(map(int,input().split()))\nai.sort()\nai.reverse()\nlast_num = ai[0]+1\nans = 0\nfor num in ai:\n    if last_num == 0:\n        break\n    if num >= last_num:\n        last_num -= 1\n    else:\n        last_num = num\n    ans += last_num\nprint(ans)\n", "n = int(input())\nl = list(map(int, input().split()))\nl = sorted(l)[-1::-1]\n\n\nfor i in range(1, n):\n\tif l[i] >= l[i-1]:\n\t\tl[i] = l[i-1] - 1\n\tif l[i] < 0:\n\t\tl[i] = 0\nprint(sum(l))  \n\n", "n = int(input())\ndata = list(map(int, input().split()))\ndata.sort()\nhigh = data[-1]\nret = 0\nfor i in range(n-1, -1, -1):\n\tchosen = min(data[i], high)\n\tret += max(chosen, 0)\n\thigh = chosen-1\nprint(ret)\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nocc = set()\na.sort(reverse=True)\nfor i in range(len(a)):\n    while a[i] in occ and a[i] > 0:\n        a[i] -= 1\n    occ.add(a[i])\n\nprint(sum(a))\n", "n = int(input())\nA = list(map(int, input().split()))\nans = []\nfor i in range(n):\n    if A[i] in ans:\n        for j in range(A[i] - 1, 0, -1):\n            if j not in ans:\n                ans.append(j)\n                break\n    else:\n        ans.append(A[i])\nprint(sum(ans))        \n", "#!/usr/bin/env python3\n\nn = int(input())\na = [int(x) for x in input().split()]\na = sorted(a, reverse=True)\ncount = 0\nprev = None\nfor x in a:\n  if prev != None and prev <= x:\n    x = max(prev - 1, 0)\n  count += x\n  prev = x\nprint(count)\n\n", "def adjust(x,limit):\n    if x == 0:\n        return 0\n\n    if x <= limit:\n        return x-1\n\n    return limit\n\ndef __starting_point():\n\n    n = int(input())\n    a = list(map(int,input().split()))\n    a.sort(key=lambda x:-x)\n    #print(a)\n\n    for i in range(1,n):\n        a[i] = adjust(a[i-1],a[i])\n\n    print( sum(a) )\n__starting_point()", "n=int(input())\narr=[int(x) for x in input().split()]\narr=sorted(arr)\narr.reverse()\ns=set()\nsum=0\nflag=0\nfor i in range(n):\n    temp=arr[i]\n    while temp in s:\n        temp=temp-1\n        if temp==0:\n            flag=1\n            break\n    sum+=temp\n    s.add(temp)\n    if flag==1:\n        break\nprint(sum)", "n = int(input())\nd = [int(i) for i in input().split()]\nd = sorted(d, reverse=True)\nfor i in range(1, len(d)):\n    d[i] = max(0, min(d[i - 1] - 1, d[i]))\nprint(sum(d))", "n = int(input())\ns=input()\ns=s.split()\na=[]\nfor i in range(n):\n    a.append(int(s[i]))\nsu=0\nd={}\na.sort(reverse=True)\nfor i in range(len(a)):\n    if a[i] not in d:\n        su+=a[i]\n        d[a[i]]=1\n    else:\n        t=a[i]-1\n        while t>=1 and t in d:\n            t-=1\n        su+=t\n        d[t]=1\n        \nprint(su)\n        \n"]