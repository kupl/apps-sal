["import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n = I()\n    a = n//2\n    b = n-a\n    while fractions.gcd(a,b) > 1:\n        a -= 1\n        b += 1\n\n    return \"{} {}\".format(a,b)\n\nprint(main())\n\n\n\n", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return map(int,input().split())\ndef map_string():\n    return input().split()\n\nfrom fractions import gcd\n    \nn = int(input())    \na = n//2\nb = n-a\nwhile gcd(a,b) != 1:\n  a -= 1\n  b += 1\nprint(a,b)  ", "def gcd(a,b):\n\treturn gcd(b,a%b) if a%b else b\n\nn = int(input())\nfor i in range(n):\n\tnum = n - i\n\tif(num < i):\n\t\tif(gcd(num,i) == 1):\n\t\t\tprint(num,i)\n\t\t\tbreak", "from fractions import gcd\nm=-1\na=-1\nb=1\nn=int(input())\nfor i in range(n//2, -1, -1):\n    if gcd(i, n-i)==1 and i!=n-i:\n        if (i/(n-i))>m:\n            m=(i/(n-i))\n            a=i\n            b=n-i\nprint(a,b)\n", "from fractions import gcd\n\nn = int(input())\n\na,b = n//2, (n+1)//2\n\nwhile gcd(a,b) != 1:\n    a -= 1\n    b += 1\n\nprint(a,b,sep=' ')\n", "n = int(input())\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\nans = None\nfor i in range(n):\n    if i >= n -i:\n        break\n    if gcd(i, n-i) == 1:\n        ans = [i, n-i]\nprint(ans[0], ans[1])", "def gcd(a, b):\n    if b == 0: \n        return a\n    return gcd(b, a % b)\n\nn = int(input())\n\na = (n - 1) // 2\nwhile (gcd(a, n - a) != 1): a -= 1\nprint(a, n - a)", "n = int(input())\n\nfrom fractions import gcd\nfor a in reversed(range(1,n//2+1)):\n  b = n-a\n  if gcd(a,b) == 1:\n    print(a,b)\n    break", "n = int(input())\n\ndef gcd(a, b):\n  if a > b:\n    return gcd(b, a)\n  elif a == 0:\n    return b\n  elif a == 1:\n    return 1\n  else:\n    return gcd(b % a, a)\n\n\nif n % 2 != 0:\n  print(n // 2, n - n // 2)\nelse:\n  c = n // 2\n  while gcd(c, n - c) > 1:\n    c -= 1\n  print(c, n - c)", "import sys\nfrom fractions import gcd\n\n\ndef main():\n    n = int(input())\n    a = n // 2\n    if n % 2 == 0:\n        a -= 1\n\n    b = n - a\n    while gcd(a, b) > 1:\n        a -= 1\n        b += 1\n    print(a, b)\n\n\nmain()\n", "def NOD(a,b):\n    while a > 0 and b > 0:\n        if a > b:\n            a = a%b\n        else:\n            b = b%a\n    return a+b\nn = int(input())\na = 1\nb = n-1\nmaximal = []\nwhile b > a:\n    if NOD(a,b) == 1:\n        maximal = [a,b]\n    b = b-1\n    a = a+1\nprint(maximal[0],maximal[1])\n\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\nn = int(input())\na, b = n // 2, n // 2 + n % 2\nwhile gcd(a, b) > 1:\n    a -= 1\n    b += 1\nprint(a, b)", "from fractions import gcd, Fraction\n\nn = int(input())\np = Fraction(0)\n\nfor i in range(n + 1):\n\tif n - i <= i:\n\t\tbreak\n\tif gcd(i, n - i) == 1:\n\t\tp = max(p, Fraction(i, n - i))\n\na, b = str(p).split('/')\nprint(a, b)\n", "n = int(input())\n\ndef gcd(a, b):\n\tif b == 0:\n\t\treturn a\n\treturn gcd(b, a % b)\n\nmax = 1\nfor i in range(1, n//2 + 1):\n\tif gcd(i, n-i) == 1:\n\t\tmax = i\n\nprint(max, n-max)", "def g(a,b):\n\tif(b>a):\n\t\treturn g(b,a)\n\tif(b== 0 ):\n\t\treturn a\n\treturn g(b,a%b)\n\nn = int(input())\nif(n%2 == 1):\n\ta = n//2\n\tb = n-n//2\nelse:\n\ta = n-n//2 - 1\n\tb = n-n//2 + 1\nwhile(g(b,a) > 1):\n\ta -= 1\n\tb += 1\nprint(a,b)", "from math import gcd\n\nn = int(input())\ncurr_opt_a = 1\nfor a in range(n - 1, 0, -1):\n    b = n - a\n    if a >= b:\n        continue\n    if gcd(a, b) == 1:\n        curr_opt_a = max(curr_opt_a, a)\nprint(curr_opt_a, n - curr_opt_a)", "def gcd (a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nn = int(input())\nfor i in range(1, n):\n    if i > n - i and gcd(i, n - i) == 1:\n        print(n - i, i)\n        break\n", "def gcd(a, b):\n    while a>0 and b > 0:\n        if a > b:\n            a %= b\n        else:\n            b %= a\n    return a + b\n\nn = int(input())\nfor i in range(n // 2, 0, -1):\n    if gcd(i, n - i) == 1:\n        print(i, n - i)\n        break", "from sys import stdin, stdout\nimport math\n\nn = int(stdin.readline().rstrip())\n\nif n%2==0:\n    n1=n//2\nelse:\n    n1 = n//2\n\nfoundGCD = False\nfor i in range(n1,1,-1):\n    n2 = n-i\n    if math.gcd(i,n2)==1:\n        foundGCD = True\n        print(str(i) + ' ' + str(n2))\n        break\n\nif not foundGCD:\n    print(str(1) + ' ' + str(n-1))\n", "def gcd(a, b):\n  if b == 0:\n    return a\n  return gcd(b, a % b)\n  \ndef main():\n  n = int(input())\n  res = (0, 1)\n  \n  for i in range(1, n):\n    a, b = i, n - i\n    if b <= a:\n      break\n    g = gcd(a, b)\n    if g != 1:\n      continue\n    if a * res[1] > b * res[0]:\n      res = (a, b)\n\n  print(res[0], res[1])\n  \nmain()", "#! /usr/bin/env python3\n\nimport math\n\nn = int(input())\n\nfor num in range(1,n):\n    if 2* num > n and math.gcd(n - num, num) == 1:\n        print(n - num, num)\n        break\n", "def nod(a,b):\n    if b == 0:\n        return a\n    else:\n        return nod(b, a % b)\nn = int(input())\nm = 0\na = 0\nb = 0\nfor i in range(1, n // 2 + 1):\n    if nod(n - i, i) == 1:\n        m = max(m,nod(n-i, i))\n        a, b = i, n - i\nprint(a, b)\n        \n", "from math import gcd \nn = int(input())\n\nfracs = []\nfor a in range(1, n):\n\tb = n - a\n\tif gcd(a, b) == 1 and a < b:\n\t\tfracs.append([a, b])\n\nmax_a = None\nmax_b = None\nmax_frac = -1\n\nfor frac in fracs:\n\tvalue = frac[0]/frac[1] \n\tif value > max_frac:\n\t\tmax_frac = value\n\t\tmax_a = frac[0]\n\t\tmax_b = frac[1]\n\nprint(max_a, max_b) \n", "import sys\ninput = sys.stdin.readline\n\nfrom fractions import gcd\n\n\ndef main():\n    a=int(input())\n    b=[]\n    for i in range(1,a+1):\n        if(gcd(i,a-i)==1 and i<a-i):\n            b.append([i/(a-i),[i,a-i]])\n    \n    b.sort()\n    print(b[-1][1][0],b[-1][1][1])\n    \nmain()", "from sys import stdout\nfrom random import randint \nfrom math import *\nimport re\n\n\nn = int(input())\nmx = 0\nmx = mxb = 0\nfor a in range(1, (n + 1) // 2):\n    b = n - a\n    t = gcd(a, b)\n    if t == 1 and mx < a / b:\n        mx = a / b\n        mxa = a\n        mxb = b\n\nprint(mxa, mxb)\n"]