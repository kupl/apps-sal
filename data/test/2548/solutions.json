["for _ in range(int(input())):\n    n = int(input())\n    s = input()\n\n    d = {0: 1}\n    summa, cnt = 0, 0\n    ans = 0\n    for i in s:\n        summa += int(i)\n        cnt += 1\n\n        k = cnt - summa\n        if k not in d:\n            d[k] = 0\n        ans += d[k]\n        d[k] += 1\n\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=input().strip()\n\n    L=[]\n    for a in A:\n        L.append(int(a)-1)\n\n    SUM=[0]\n    for l in L:\n        SUM.append(SUM[-1]+l)\n\n    #print(SUM)\n\n    C=Counter(SUM)\n\n    ANS=0\n\n    for c in C:\n        ANS+=C[c]*(C[c]-1)//2\n\n    print(ANS)\n        \n", "import sys\n\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    n=int(input())\n    s=input()\n    a=[int(s[i])-1 for i in range(n)]\n    data=[0]+a\n    for i in range(1,n+1):\n        data[i]+=data[i-1]\n    dic={}\n    for i in range(n+1):\n        if data[i] not in dic:\n            dic[data[i]]=0\n        dic[data[i]]+=1\n    ans=0\n    for d in dic:\n        ans+=dic[d]*(dic[d]-1)//2\n    print(ans)\n", "from collections import defaultdict\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input()))\n    s = [0] * (n + 1)\n    for i in range(n):\n        s[i + 1] = s[i] + a[i] - 1\n    t = defaultdict(int)\n    t[s[0]] += 1\n    ans = 0\n    for i in range(1, n + 1):\n        ans += t[s[i]]\n        t[s[i]] += 1\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "T, = list(map(int, input().split()))\nfor t in range(T):\n    N, = list(map(int, input().split()))\n    X = [0]*(N+1)\n    for i, c in enumerate(input().strip()):\n        X[i+1] = X[i]+int(c)\n    d = dict()\n    for i in range( N+1):\n        x = X[i] - i\n        if x not in d:\n            d[x] = 0\n        d[x] += 1\n    R = 0\n    for k in d:\n        R += d[k]*(d[k]-1)//2\n    print(R)\n", "t=int(input())\nfor you in range(t):\n    n=int(input())\n    l=input()\n    hashi=dict()\n    hashi[0]=1\n    count=0\n    sumi=0\n    for i in range(n):\n        sumi=sumi+(int(l[i]))\n        z=sumi-(i+1)\n        if(z in hashi):\n            count=count+hashi[z]\n            hashi[z]+=1\n        else:\n            hashi[z]=1\n    print(count)\n", "q = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = list(input())\n    s = list(map(int,s))\n    l = [s[i] - 1 for i in range(n)]\n    pref = [0] * (n+1)\n    for i in range(1,n+1):\n        pref[i] = pref[i-1] + l[i-1]\n    d = {}\n    for elt in pref:\n        try:\n            d[elt] += 1\n        except Exception:\n            d[elt] = 1\n    wyn = 0\n    for elt in d:\n        wyn += (d[elt]*(d[elt]-1)//2)\n    print(wyn)", "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\ndef solve():\n\tn=nn()\n\tl = input()\n\tseen = dd(int)\n\tseen[0] = 1\n\ttally = 0\n\tgood= 0\n\tfor i in range(n):\n\t\ttally+=int(l[i])-1\n\t\tseen[tally]+=1\n\n\ttotal = 0\n\n\tfor s in seen:\n\t\ttotal+=(seen[s]*(seen[s]-1)//2)\n\n\tprint(total)\n\n\nq=nn()\nfor _ in range(q):\n\tsolve()\n"]