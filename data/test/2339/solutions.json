["import sys\ninput = sys.stdin.readline\n\nfrom math import gcd\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    l = list(map(int, input().split()))\n    g = max(l)\n    out = []\n    while l:\n        nex = max((gcd(g,l[i]), i) for i in range(len(l)))\n        out.append(l.pop(nex[1]))\n        g = nex[0]\n    print(' '.join(map(str,out)))\n        \n    \n", "from math import gcd\nfor i in range(int(input())):\n\tn = int(input())\n\ta = list(map(int, input().split()))\n\ta.sort(reverse=True)\n\n\tanswer = []\n\tanswer.append(a.pop(0))\n\tn -= 1\n\tgc = answer[0]\n\tfor _ in range(n):\n\t\tindex = 0\n\t\tm = 0\n\t\tfor i, val in enumerate(a):\n\t\t\tnum = gcd(gc, val)\n\t\t\tif num >= m:\n\t\t\t\tm = num\n\t\t\t\tindex = i\n\t\tgc = min(gc, m)\n\t\tif gc == 1:\n\t\t\tanswer.extend(a)\n\t\t\tbreak\n\t\telse:\n\t\t\tanswer.append(a.pop(index))\n\tprint(\" \".join(str(num) for num in answer))", "def gcd(a,b):\n    if b==0:return a\n    return gcd(b,a%b)\nfor i in ' '*(int(input())):\n    n=int(input())\n    L=list(map(int,input().split()))\n    M=[0]\n    MM=[]\n    check=[False]*n\n    for i in range(n):\n        ct=0\n        pt=-1\n        for j in range(n):\n            if not check[j]:\n                k=gcd(M[-1],L[j])\n                if k>ct:\n                    ct=k\n                    pt=j\n        M.append(ct)\n        MM.append(pt)\n        check[pt]=True\n    for j in MM:print(L[j],end=' ')\n    print()", "from math import *\nfrom bisect import *\nfrom collections import *\nfrom random import *\nfrom decimal import *\ndef inp():\n    return int(input())\ndef st():\n    return input().rstrip('\\n')\ndef lis():\n    return list(map(int,input().split()))\ndef ma():\n    return list(map(int,input().split()))\nt=inp()\nwhile(t):       \n    t-=1\n    n=inp()\n    a=lis()\n    cur=0\n    r=[]\n    while(len(a)!=0):\n        ind=0\n        mi=-1000000000000000\n        for i in range(len(a)):\n            if(gcd(cur,a[i])>mi):\n                mi=gcd(cur,a[i])\n                ind=i\n        r.append(a[ind])\n        cur=gcd(cur,a[ind])\n        a.pop(ind)\n    print(*r)\n        \n            \n        \n", "import sys\nfrom math import gcd\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  N = int(input())\n  a = list(map(int, input().split()))\n  mx = max(a)\n  table = [0] * (mx + 1)\n  for x in a: table[x] += 1\n  res = [mx]\n  table[mx] -= 1\n  g = mx\n  for _ in range(N - 1):\n    y = 0\n    for x in range(1, mx + 1):\n      if table[x] == 0: continue\n      if y == 0 or (gcd(g, x) > gcd(g, y)): y = x\n    table[y] -= 1\n    res.append(y)\n    g = gcd(g, y)\n  print(*res)", "from math import gcd\nfor _ in range(int(input())):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr = [(e, e) for e in arr]\n    res = []\n    while len(arr) > 0:\n        arr.sort()\n        x = arr.pop()\n        res.append(x[1])\n        for i in range(len(arr)):\n            arr[i] = (gcd(arr[i][0], x[0]), arr[i][1])\n    print(*res)\n", "import math\nTC = int(input())\nfor _ in range(TC):\n    n = int(input())\n    a = list(map(int, input().split()))\n    mark = [False] * n\n    prev = 0\n    for i in range(n):\n        idx = 0\n        cur = 0\n        for j in range(n):\n            if mark[j] == True: continue\n            if math.gcd(prev, a[j]) > cur:\n                cur = math.gcd(prev, a[j])\n                idx = j\n        mark[idx] = True \n        prev = cur \n        print(a[idx], end = ' ')\n    print()\n    \n"]