["# import getpass\nimport sys\nimport math\n\nEPS = 0.000000001\n\nfiles = True\ndebug = False\n\n# if getpass.getuser() == 'frohenk' and files:\n#     debug = True\n#     sys.stdin = open(\"test.in\")\n#     # sys.stdout = open('test.out', 'w')\n# elif files:\n#     # fname = \"gift\"\n#     # sys.stdin = open(\"%s.in\" % fname)\n#     # sys.stdout = open('%s.out' % fname, 'w')\n#     pass\n\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\ndef range_sum(a, b):\n    ass = (((b - a + 1) // 2) * (a + b))\n    if (a - b) % 2 == 0:\n        ass += (b - a + 2) // 2\n    return ass\n\n\ndef comba(n, x):\n    return (math.factorial(n) // math.factorial(n - x)) // math.factorial(x)\n\n\ndef eq(a, b):\n    return abs(a - b) <= EPS\n\n\nn, ta = ria()\nvs = ria()\nts = ria()\nks = []\nup = 0\ndown = sum(vs)\nfor i in range(n):\n    ks.append((ts[i], vs[i]))\n    up += ts[i] * vs[i]\nks.sort()\nif up / down > ta:\n\n    if min(ts)>ta:\n        print('0')\n        return\n\n    ks = list(reversed(ks))\n\n    for t, v in ks:\n        if down == 0:\n            print(0)\n            return\n        if eq(up / down, ta):\n            print(down)\n            return\n        if (up - t * v) / (down - v) > ta or eq((up - t * v) / (down - v), ta):\n            up -= t * v\n            down -= v\n            continue\n\n        l, r = 0, v\n\n        up -= t * v\n        down -= v\n\n        while r - l > EPS:\n            m = (l + r)/2\n            if (up + t * m) / (down + m)>ta:\n                r=m\n            else:\n                l=m\n        print(down+l)\n        return\n\n\nelse:\n\n    if max(ts) < ta:\n        print('0')\n        return\n    for t, v in ks:\n        if down == 0:\n            print(0)\n            return\n        if eq(up / down, ta):\n            print(down)\n            return\n        if (up - t * v) / (down - v) < ta or eq((up - t * v) / (down - v), ta):\n            up -= t * v\n            down -= v\n            continue\n\n        l, r = 0, v\n\n        up -= t * v\n        down -= v\n\n        while r - l > EPS:\n            m = (l + r)/2\n            if (up + t * m) / (down + m)<ta:\n                r=m\n            else:\n                l=m\n        print(down+l)\n        return\n", "rd = lambda: list(map(int, input().split()))\nn, t = rd()\na = list(rd())\nb = list(rd())\nx = [[b[i], a[i]] for i in range(n)]\nx.sort()\ntot, val = sum(a), 0\nfor i in range(n):\n    val += (t - x[i][0]) * x[i][1]\nif val < 0:\n    for i in range(n - 1, -1, -1):\n        if val - x[i][1] * (t - x[i][0]) >= 0:\n            tot -= val / (t - x[i][0])\n            val = 0\n            break\n        tot -= x[i][1]\n        val -= (t - x[i][0]) * x[i][1]\nif val > 0:\n    for i in range(n):\n        if val - x[i][1] * (t - x[i][0]) <= 0:\n            tot -= val / (t - x[i][0])\n            val = 0\n            break\n        tot -= x[i][1]\n        val -= (t - x[i][0]) * x[i][1]\nprint('%.12f' % tot)\n\n", "#!/usr/bin/env python3\n\nimport sys\n\n[n, T] = list(map(int, sys.stdin.readline().strip().split()))\nais = list(map(int, sys.stdin.readline().strip().split()))\ntis = list(map(int, sys.stdin.readline().strip().split()))\n\ni_0 = [i for i in range(n) if tis[i] == T]\ni_hot = [i for i in range(n) if tis[i] > T]\ni_cold = [i for i in range(n) if tis[i] < T]\n\ntis = [abs(ti - T) for ti in tis]\nw_hot = sum(ais[i] * tis[i] for i in i_hot)\nw_cold = sum(ais[i] * tis[i] for i in i_cold)\n\nif w_hot > w_cold:\n\tw_hot, w_cold = w_cold, w_hot\n\ti_hot, i_cold = i_cold, i_hot\n\nx_max = sum(ais[i] for i in i_0) + sum(ais[i] for i in i_hot)\n\nw = w_hot\ni_cold.sort(key=lambda _k: tis[_k])\nfor i in i_cold:\n\ta, t = ais[i], tis[i]\n\tif a * t <= w:\n\t\tw -= a * t\n\t\tx_max += a\n\telse:\n\t\tx_max = x_max + float(w) / t\n\t\tw = 0\n\t\tbreak\n\n\nprint(float(x_max))\n", "R = lambda : map(int, input().split())\nn, temp = R()\na = list(R())\nt = list(R())\nv = sorted([(t[i]-temp,a[i]) for i in range(n)])\n\nr = sum([v[i][1] for i in range(n) if v[i][0]==0])\npos = sum([v[i][0]*v[i][1] for i in range(n) if v[i][0]>0])\nneg = sum([abs(v[i][0])*v[i][1] for i in range(n) if v[i][0]<0])\n\npa = sum([v[i][1] for i in range(n) if v[i][0]>0])\nna = sum([v[i][1] for i in range(n) if v[i][0]<0])\n\nif pos == 0 or neg == 0:\n    print(r); return;\n\nfor i in range(n):\n    if v[i][0] >= 0:\n        stn = i-1; break;\n\nfor i in range(n):\n    if v[i][0] > 0:\n        stp = i; break;\n\nif neg<pos:\n    r += na\n    rem = neg * 1.0\n    for i in range(stp,n):\n        if v[i][0]*v[i][1]>=rem:\n            r += rem / v[i][0]\n            rem = 0\n        else:\n            r += v[i][1]\n            rem -= v[i][0]*v[i][1]\nelse:\n    r += pa\n    rem = pos * 1.0\n    for i in reversed(range(stn+1)):\n        if abs(v[i][0])*v[i][1]>=rem:\n            r += rem / abs(v[i][0])\n            rem = 0\n        else:\n            r += v[i][1]\n            rem -= abs(v[i][0])*v[i][1]\n\nprint(r)", "n, nt = map(int, input().split())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\nc = 0\nans = 0\nl = []\nr = []\nfor i in range(n):\n    if t[i] < nt:\n        l.append([nt - t[i], a[i]])\n    if t[i] > nt:\n        r.append([t[i] - nt, a[i]])\n    if t[i] == nt:\n        ans += a[i]\nl = sorted(l, key=lambda x: x[0])\nr = sorted(r, key=lambda x: x[0])\nil = 0\nir = 0\nlv = 0.0\nrv = 0.0\nlvv = 0.0\nrvv = 0.0\nwhile 1:\n    if lv <= rv:\n        if il ==len(l):\n            break\n        lv += l[il][0] * l[il][1]\n        lvv += l[il][1]\n        il += 1\n    else:\n        if ir ==len(r):\n            break\n        rv += r[ir][0] * r[ir][1]\n        rvv += r[ir][1]\n        ir += 1\nif rv < lv:\n    lv -= l[il - 1][0] * l[il - 1][1]\n    lvv -= l[il - 1][1]\n    lvv += (rv - lv) / l[il - 1][0]\nelif lv < rv:\n    rv -= r[ir - 1][0] * r[ir - 1][1]\n    rvv -= r[ir - 1][1]\n    rvv += (lv - rv) / r[ir - 1][0]\n\nans += rvv\nans += lvv\nprint(\"%.8f\" % ans)", "rd = lambda: list(map(int, input().split()))\nn, t = rd()\na = list(rd())\nb = list(rd())\nx = [[b[i], a[i]] for i in range(n)]\nx.sort()\ntot, val = sum(a), 0\nfor i in range(n):\n    val += (t - x[i][0]) * x[i][1]\nif val:\n    f = 2 * (val > 0) - 1\n    for i in range(n)[::f]:\n        if f * (val - x[i][1] * (t - x[i][0])) <= 0:\n            tot -= val / (t - x[i][0])\n            break\n        tot -= x[i][1]\n        val -= (t - x[i][0]) * x[i][1]\nprint(tot)\n", "n,t=list(map(int,input().strip().split(' ')))\nx= list(map(int,input().strip().split(' ')))\n\ntemp= list(map(int,input().strip().split(' ')))\nfor i in range(n):\n  temp[i]-=t\npos = []\nneg = []\nans = 0\nnegsum = 0\npossum = 0\nfor i in range(n):\n  if(temp[i]<0):\n    negsum+=temp[i]*x[i]\n    neg.append([temp[i]*-1,x[i]])\n  elif(temp[i]>0):\n    possum+=temp[i]*x[i]\n    pos.append([temp[i],x[i]])\n  else:\n    ans+=x[i]\nif(abs(negsum)>possum):\n  for i in pos:\n    ans+=i[1]\n  neg.sort()\n  for i in neg:\n    t = i[0]*i[1]*-1\n    if(t+possum<0):\n      ans+= (possum*1.0/i[0])\n      break\n    else:\n      ans+=i[1]\n      possum+=t\n  print(ans)\nelif(possum>abs(negsum)):\n  for i in neg:\n    ans+=i[1]\n  pos.sort()\n  for i in pos:\n    t = i[0]*i[1]\n    if(t+negsum>0):\n      ans+= abs(negsum*1.0/i[0])\n      break\n    else:\n      ans+=i[1]\n      negsum+=t\n  print(ans)\nelse:\n  print(sum(x))\n\n\n", "\ndef f(t, x):\n    for i in range(1, len(t) + 1):\n        ps[i] = ps[i - 1] + t[i - 1][0] * t[i - 1][1]\n    l = 0\n    r = len(t) + 1\n    while l < r:\n        s = (l + r) // 2\n        if ps[s] <= x:\n            l = s + 1\n        else:\n            r = s\n    return l - 1\n\nn , T = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nt = [(int(x) - T,  a[i]) for i, x in enumerate(input().split())]\n\ntp = list(sorted([e for e in t if e[0] > 0]))\ntm = list(sorted([(-x[0], x[1]) for x in ([e for e in t if e[0] < 0])]))\nep = sum(e[0] * e[1] for e in tp)\nem = sum(e[0] * e[1] for e in tm)\nps = [0] * (n + 1)\nres = sum([e[1] for e in [e for e in t if e[0] == 0]])\nif ep > 0 and em > 0:\n    if ep < em:\n        it = f(tm, ep)\n\n        res += sum([e[1] for e in tp])\n        res += sum([e[1] for e in tm[:it]])\n        if  it < len(tm):\n            res += (ep - ps[it]) / tm[it][0]\n    else:\n        it = f(tp, em)\n        res += sum([e[1] for e in tm])\n        res += sum([e[1] for e in tp[:it]])\n        if  it < len(tp):\n            res += (em - ps[it]) / tp[it][0]\nprint(res)\n\n", "n,T=map(int,input().split())\na=list(map(int,input().split()))\nx=list(map(int,input().split()))\nm=[]\nq=0\nfor i in range(n):\n    m+=[[x[i],a[i]]]\n    q+=a[i]*x[i]\nasu=sum(a)\ntry:\n    if q/asu==T:\n        print(asu)\n    elif q/asu>T:\n        m.sort()\n        asu-=m[-1][1]\n        q-=m[-1][0]*m[-1][1]\n        while q/asu>T:\n            m.pop()\n            asu-=m[-1][1]\n            q-=m[-1][0]*m[-1][1]\n        print(asu+m[-1][1]*((T*asu-q)/(m[-1][1]*m[-1][0]-T*m[-1][1])))\n    else:\n        m.sort(reverse=True)\n        asu-=m[-1][1]\n        q-=m[-1][0]*m[-1][1]\n        while q/asu<T:\n            m.pop()\n            asu-=m[-1][1]\n            q-=m[-1][0]*m[-1][1]\n        print(asu+m[-1][1]*((T*asu-q)/(m[-1][1]*m[-1][0]-T*m[-1][1])))\nexcept ZeroDivisionError:\n    print(0)", "rd = lambda: list(map(int, input().split()))\nn, t = rd()\na, b = rd(), rd()\nx = [[t - b[i], a[i]] for i in range(n)]\nx.sort()\nc, v = sum(a), sum(i * j for i, j in x)\nif v:\n    f = 2 * (v < 0) - 1\n    for i in range(n)[::f]:\n        if f * (v - x[i][1] * x[i][0]) >= 0:\n            c -= v / x[i][0]\n            break\n        c -= x[i][1]\n        v -= x[i][0] * x[i][1]\nprint(c)\n", "\nn,t=list(map(int,input().split()))\nl1=list(map(int,input().split()))\nl2=list(map(int,input().split()))\nl=[[l2[i],l1[i]] for i in range(n)]\nl.sort()\ns1=sum([l[i][0]*l[i][1] for i in range(n)])\ns2=sum(l1)\ns=s1/s2\nf=n-1\nd=0\n\nif s<t:\n    while s<t and d<n:\n        s2=s2-l[d][1]\n        s1=s1-l[d][0]*l[d][1]\n        if s2!=0:\n            s=s1/s2\n        if s>t:\n            s2+=(s2*t-s1)/(l[d][0]-t)\n            break\n        elif s==t:\n            break\n        else:\n            d+=1\n    \nelif s>t:\n    while s>t and f>=0:\n        s2=s2-l[f][1]\n        s1=s1-l[f][0]*l[f][1]\n        if s2!=0:\n            s=s1/s2\n        if s<t:\n            s2+=(t*s2-s1)/(l[f][0]-t)\n            break\n        elif s==t:\n            break\n        else:\n            f-=1\nprint(s2)\n        \n    \n", "R=lambda:list(map(int,input().split()))\nn,t=R()\na=R()\nb=R()\nx=[[t-b[i],a[i]] for i in range(n)]\nx.sort()\nc,v=sum(a),sum(i*j for i,j in x)\nif v:\n    f=2*(v<0)-1\n    for i in range(n)[::f]:\n        if f*(v-x[i][1]*x[i][0])>=0:\n            c-=v/x[i][0]\n            break\n        c-=x[i][1]\n        v-=x[i][0]*x[i][1]\nprint(c)\n", "n, T = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\ntp, tm = [], []\ns = 0\nfor i, x in enumerate(input().split()):\n    dt = int(x)-T\n    if dt > 0:\n        tp.append([dt, a[i]])\n    elif dt < 0:\n        tm.append([-dt, a[i]])\n    else:\n        s+=a[i]\n\ntp.sort()\ntm.sort()\ni,j= 0, 0\nwhile i < len(tp) and j < len(tm):\n    qp = tp[i][0]*tp[i][1]\n    qm = tm[j][0]*tm[j][1]\n    if qp>qm:\n        r = tm[j][0]/tp[i][0]\n        s += (1+r)*tm[j][1]\n        tp[i][1] -= tm[j][1]*r\n        j += 1\n    else:\n        r = tp[i][0]/tm[j][0]\n        s += (1+r)*tp[i][1]\n        tm[j][1] -= tp[i][1]*r\n        i += 1\nprint(s)\n", "def get_max_volume(sources, required_temperature):\n    \"\"\"\n    :param List[Set[int]]sources:\n    :param int required_temperature:\n    :return: float\n    \"\"\"\n    max_volume = 0.\n    temp = 0\n    higher_sources = []\n    lower_sources = []\n\n    for volume, temperature in sources:\n        delta_temp = temperature - required_temperature\n        if delta_temp > 0:\n            higher_sources.append((volume, delta_temp))\n        elif delta_temp < 0:\n            lower_sources.append((volume, delta_temp))\n        max_volume += volume\n        temp += volume * delta_temp\n    higher_sources.sort(key=lambda v: v[1])\n    lower_sources.sort(key=lambda v: -v[1])\n    while abs(temp / max_volume) >= 1e-6 \\\n            and (len(lower_sources) > 0 or temp >= 0)\\\n            and (len(higher_sources) > 0 or temp <= 0):\n        if temp < 0:\n            volume, delta_temp = lower_sources.pop()\n            if temp - delta_temp * volume >= 0:\n                required_volume = temp / delta_temp\n                return max_volume - required_volume\n            temp -= delta_temp * volume\n            max_volume -= volume\n        else:\n            volume, delta_temp = higher_sources.pop()\n            if temp - delta_temp * volume <= 0:\n                required_volume = temp / delta_temp\n                return max_volume - required_volume\n            temp -= delta_temp * volume\n            max_volume -= volume\n\n    if abs(temp / max_volume) < 1e-6:\n        return max_volume\n\n    return 0.\n\n\nn, t = list(map(int, input().split()))\nvs = input().split()\nts = input().split()\nss = [(int(vs[i]), int(ts[i])) for i in range(n)]\nprint(get_max_volume(ss, t))\n", "n, T = list(map(int, input().split(' ')))\nr = list()\nr.append(list(map(int, input().split(' '))))\nr.append(list(map(int, input().split(' '))))\nr.append(list())\nfor i in range(len(r[0])):\n\tr[2].append((r[0][i], r[1][i]))\nr[2].sort(key=lambda x: x[::-1])\nfor i in range(n):\n\tr[0][i] = r[2][i][0]\n\tr[1][i] = r[2][i][1]\n\nfl = True\ntau = sum(r[0]) * T > sum(map(lambda x: x[0] * x[1], r[2]))\nif tau:\n\tr[2].reverse()\n\tfl = False\ntau1 = not tau\n\nsumm = list()\nproi = list()\nsu = 0\npr = 0\nfor i in range(n):\n\tsu += r[2][i][0]\n\tsumm.append(su)\n\tpr += r[2][i][0] * r[2][i][1]\n\tproi.append(pr)\n\nlev = 0\npra = n - 1\nwhile lev < n - 1 and ((r[2][lev][1] <= T and fl) or\n                       (r[2][lev][1] >= T and not fl)):\n\tlev += 1\ntest = lev\n\nwhile lev != pra:\n\ttau = tau1\n\ttau1 = summ[(lev + pra) // 2 - 1] * T > proi[(lev + pra) // 2 - 1]\n\tif tau == tau1:\n\t\tlev = (lev + pra) // 2 + 1\n\telse:\n\t\tpra = (lev + pra) // 2\n\t\ttau1 = not tau1\n\ntau = summ[-1] * T > proi[-1]\ntau1 = summ[max(pra - 1, 0)] * T > proi[max(pra - 1, 0)]\nif tau != tau1:\n\tx = ((summ[max(pra - 1, 0)] * T) - proi[max(pra - 1, 0)]) / (\n\t    r[2][pra][1] - T)\n\tx = summ[max(pra - 1, 0)] + x\n\tprint(x)\nelse:\n\ttau = tau1\n\ttau1 = summ[max(lev - 2, 0)] * T > proi[max(lev - 2, 0)]\n\tif tau != tau1:\n\t\tx = ((summ[max(lev - 2, 0)] * T) - proi[max(lev - 2, 0)]) / (\n\t\t    r[2][max(lev - 1, 0)][1] - T)\n\t\tx = summ[max(lev - 2, 0)] + x\n\t\tprint(x)\n\telse:\n\t\tx = 0\n\t\tif test == 0 or test == 1:\n\t\t    if r[2][0][1] == T:\n\t\t        x = r[2][0][0]\n\t\telse:\n\t\t    if r[2][test][1]!=T:\n\t\t        test -= 1\n\t\t    x = summ[test]\n\t\t    while test>-1 and r[2][test][1]==T:\n\t\t        test -= 1\n\t\t    if test != -1:\n\t\t        x -= summ[test]\n\t\tprint(x)", "n, T = map(int, input().split())\nv = list(map(int, input().split()))\nt = list(map(int, input().split()))\nplus, minus = [], []\npr, ans = 0, 0\nfor i in range(n):\n    if t[i] < T:\n        minus.append([T - t[i], i])\n    elif t[i] > T:\n        plus.append([t[i] - T, i])\n    else:\n        ans += v[i]\nmax1, max2 = 0, 0\nfor i in range(len(minus)):\n    max1 += minus[i][0] * v[minus[i][1]]\nfor i in range(len(plus)):\n    max2 += plus[i][0] * v[plus[i][1]]\nif max1 > max2:\n    minus.sort()\n    i = 0\n    while pr != max2:\n        if max2 - pr < v[minus[i][1]] * minus[i][0]:\n            ans += (max2 - pr) / minus[i][0]\n            pr += max2 - pr\n        else:\n            ans += v[minus[i][1]]\n            pr += v[minus[i][1]] * minus[i][0]\n        i += 1\n    for i in range(len(plus)):\n        ans += v[plus[i][1]]    \nelse:\n    plus.sort()\n    i = 0\n    while pr != max1:\n        if max1 - pr < v[plus[i][1]] * plus[i][0]:\n            ans += (max1 - pr) / plus[i][0]\n            pr += max1 - pr\n        else:\n            ans += v[plus[i][1]]\n            pr += v[plus[i][1]] * plus[i][0]\n        i += 1\n    for i in range(len(minus)):\n        ans += v[minus[i][1]]\nprint(ans)", "rd = lambda: map(int, input().split())\nn, t = rd()\na = list(rd())\nb = list(rd())\nx = [[b[i], a[i]] for i in range(n)]\nx.sort()\ntot, val = sum(a), 0\nfor i in range(n):\n    val += (t - x[i][0]) * x[i][1]\nif val:\n    f = 2 * (val > 0) - 1\n    for i in range(n)[::f]:\n        if f * (val - x[i][1] * (t - x[i][0])) <= 0:\n            tot -= val / (t - x[i][0])\n            break\n        tot -= x[i][1]\n        val -= (t - x[i][0]) * x[i][1]\nprint(tot)", "\nn,t=map(int,input().strip().split(' '))\nx= list(map(int,input().strip().split(' ')))\n\ntemp= list(map(int,input().strip().split(' ')))\nfor i in range(n):\n  temp[i]-=t\npos = []\nneg = []\nans = 0\nnegsum = 0\npossum = 0\nfor i in range(n):\n  if(temp[i]<0):\n    negsum+=temp[i]*x[i]\n    neg.append([temp[i]*-1,x[i]])\n  elif(temp[i]>0):\n    possum+=temp[i]*x[i]\n    pos.append([temp[i],x[i]])\n  else:\n    ans+=x[i]\nif(abs(negsum)>possum):\n  for i in pos:\n    ans+=i[1]\n  neg.sort()\n  for i in neg:\n    t = i[0]*i[1]*-1\n    if(t+possum<0):\n      ans+= (possum*1.0/i[0])\n      break\n    else:\n      ans+=i[1]\n      possum+=t\n  print(ans)\nelif(possum>abs(negsum)):\n  for i in neg:\n    ans+=i[1]\n  pos.sort()\n  for i in pos:\n    t = i[0]*i[1]\n    if(t+negsum>0):\n      ans+= abs(negsum*1.0/i[0])\n      break\n    else:\n      ans+=i[1]\n      negsum+=t\n  print(ans)\nelse:\n  print(sum(x))", "eps = 1e-9\nn, T = map(int, input().split())\na = [*map(int, input().split())]\nt = [*map(int, input().split())]\nl = sorted(zip(t, a))\n\n\nS = sum(x * y for x, y in l)\nV = sum(a)\nwhile l and (S - V * T) > V * eps and l[-1][0] > T:\n    x, y = l.pop()\n    d = min(y, (S - V * T) / (x - T))\n    S -= x * d\n    V -= d\n\nl.reverse()\nwhile l and (V * T - S) > V * eps and l[-1][0] < T:\n    x, y = l.pop()\n    d = min(y, (V * T - S) / (T - x))\n    S -= x * d\n    V -= d\n\nprint(round(V, 7) if abs(S  - V * T) <= V * eps else 0)", "n, T = map(int, input().split())\na = [*map(int, input().split())]\nt = [*map(int, input().split())]\nl = sorted(zip(t, a))\n\n\nS = sum(x * y for x, y in l)\nV = sum(a)\nwhile l and S > V * T and l[-1][0] > T:\n    x, y = l.pop()\n    d = min(y, (S - V * T) / (x - T))\n    S -= x * d\n    V -= d\n\nl.reverse()\nwhile l and V * T > S and l[-1][0] < T:\n    x, y = l.pop()\n    d = min(y, (V * T - S) / (T - x))\n    S -= x * d\n    V -= d\n\nprint(round(V, 7) if S == V * T else 0)", "import sys\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\n\ndef solve():\n    n, T = nm()\n    a = nl()\n    t = nl()\n    if min(t) > T or max(t) < T:\n        print(0)\n        return\n    g = [(t[i] - T, i) for i in range(n)]\n    h = sum((t[i] - T)*a[i] for i in range(n))\n    ans = sum(a)\n    if h < 0:\n        g.sort()\n        for x, i in g:\n            if h < x * a[i]:\n                ans -= a[i]\n                h -= x * a[i]\n            else:\n                if h and x != 0:\n                    ans -= h / x\n                break\n    elif h > 0:\n        g.sort(reverse=True)\n        for x, i in g:\n            if h > x * a[i]:\n                ans -= a[i]\n                h -= x * a[i]\n            else:\n                if h and x != 0:\n                    ans -= h / x\n                break\n    print(ans)\n    return\n\nsolve()\n\n# T = ni()\n# for _ in range(T):\n#     solve()\n", "import sys\ninput = sys.stdin.readline\n\n\nn, T = map(int, input().split())\na = list(map(int, input().split()))\nt = list(map(int, input().split()))\n\n\nfor i in range(n):\n    t[i] -= T\n\nlower = []\nupper = []\nmax_lower = 0\nmax_upper = 0\nans = 0\nfor i in range(n):\n    if t[i] == 0:\n        ans += a[i]\n    elif t[i] < 0:\n        lower.append((-t[i], a[i]))\n        max_lower += abs(a[i] * t[i])\n    else:\n        upper.append((t[i], a[i]))\n        max_upper += abs(a[i] * t[i])\n\nmax_heat = min(max_upper, max_lower)\nlower.sort()\nupper.sort()\n\ntmp = 0\nfor ti, ai in lower:\n    if tmp + ti * ai < max_heat:\n        ans += ai\n        tmp += ti * ai\n    else:\n        ans += (max_heat - tmp) / ti\n        tmp = max_heat\ntmp = 0\nfor ti, ai in upper:\n    if tmp + ti * ai < max_heat:\n        ans += ai\n        tmp += ti * ai\n    else:\n        ans += (max_heat - tmp) / ti\n        tmp = max_heat\nprint(ans)", "import sys\nfrom operator import lt, gt, le, ge, itemgetter\n\nn, t = list(map(int, input().split()))\na = list(zip(list(map(int, input().split())), list(map(int, input().split()))))\n\nnume = sum(a[i][0]*a[i][1] for i in range(n))\ndeno = sum(a[i][0] for i in range(n))\n\nif nume / deno > t:\n    op1, op2, rev = gt, le, False\nelse:\n    op1, op2, rev = lt, ge, True\n\na.sort(key=itemgetter(1), reverse=rev)\n\nwhile len(a) > 1 and op1((nume - a[-1][0]*a[-1][1]) / (deno - a[-1][0]), t):\n    nume -= a[-1][0] * a[-1][1]\n    deno -= a[-1][0]\n    a.pop()\n\nnume -= a[-1][0] * a[-1][1]\ndeno -= a[-1][0]\nok, ng = 0.0, float(a[-1][0])\n\nfor _ in range(50):\n    mid = (ok + ng) / 2\n    if op2((nume + mid * a[-1][1]) / (deno + mid), t):\n        ok = mid\n    else:\n        ng = mid\n\nprint(deno + ok)\n"]