["def main():\n    n, a, b, c = map(int, input().split())\n    Ss = [input() for _ in range(n)]\n    ans = []\n    f = True\n    if a+b+c == 0:\n        print(\"No\")\n    elif a+b+c == 1:\n        for i in range(n):\n            if Ss[i] == \"AB\":\n                if a == 0 and b == 0:\n                    f = False\n                    break\n                else:\n                    if a == 1:\n                        ans.append(\"B\")\n                        a, b = a-1, b+1\n                    else:\n                        ans.append(\"A\")\n                        a, b = a+1, b-1\n            elif Ss[i] == \"AC\":\n                if a == 0 and c == 0:\n                    f = False\n                    break\n                else:\n                    if a == 1:\n                        ans.append(\"C\")\n                        a, c = a-1, c+1\n                    else:\n                        ans.append(\"A\")\n                        a, c = a+1, c-1\n            else:\n                if b == 0 and c == 0:\n                    f = False\n                    break\n                else:\n                    if b == 1:\n                        ans.append(\"C\")\n                        b, c = b-1, c+1\n                    else:\n                        ans.append(\"B\")\n                        b, c = b+1, c-1\n        if f:\n            print(\"Yes\")\n            for v in ans:\n                print(v)\n        else:\n            print(\"No\")\n    else:\n        for i in range(n):\n            if Ss[i] == \"AB\":\n                if a == 0 and b == 0:\n                    f = False\n                    break\n                else:\n                    if i < n-1:\n                        if Ss[i+1] == \"AB\":\n                            if b == 0:\n                                ans.append(\"B\")\n                                a, b = a-1, b+1\n                            else:\n                                ans.append(\"A\")\n                                a, b = a+1, b-1\n                        elif Ss[i+1] == \"AC\":\n                            if b == 0:\n                                ans.append(\"B\")\n                                a, b = a-1, b+1\n                            else:\n                                ans.append(\"A\")\n                                a, b = a+1, b-1\n                        else:\n                            if a == 0:\n                                ans.append(\"A\")\n                                a, b = a+1, b-1\n                            else:\n                                ans.append(\"B\")\n                                a, b = a-1, b+1\n                    else:\n                        if a == 0 and b == 0:\n                            f = False\n                            break\n                        elif b == 0:\n                            ans.append(\"B\")\n                            a, b = a-1, b+1\n                        else:\n                            ans.append(\"A\")\n                            a, b = a+1, b-1\n            elif Ss[i] == \"AC\":\n                if a == 0 and c == 0:\n                    f = False\n                    break\n                else:\n                    if i < n-1:\n                        if Ss[i+1] == \"AB\":\n                            if c == 0:\n                                ans.append(\"C\")\n                                a, c = a-1, c+1\n                            else:\n                                ans.append(\"A\")\n                                a, c = a+1, c-1\n                        elif Ss[i+1] == \"AC\":\n                            if c == 0:\n                                ans.append(\"C\")\n                                a, c = a-1, c+1\n                            else:\n                                ans.append(\"A\")\n                                a, c = a+1, c-1\n                        else:\n                            if a == 0:\n                                ans.append(\"A\")\n                                a, c = a+1, c-1\n                            else:\n                                ans.append(\"C\")\n                                a, c = a-1, c+1\n                    else:\n                        if a == 0 and c == 0:\n                            f = False\n                            break\n                        elif c == 0:\n                            ans.append(\"C\")\n                            a, c = a-1, c+1\n                        else:\n                            ans.append(\"A\")\n                            a, c = a+1, c-1\n            else:\n                if b == 0 and c == 0:\n                    f = False\n                    break\n                else:\n                    if i < n-1:\n                        if Ss[i+1] == \"AB\":\n                            if c == 0:\n                                ans.append(\"C\")\n                                b, c = b-1, c+1\n                            else:\n                                ans.append(\"B\")\n                                b, c = b+1, c-1\n                        elif Ss[i+1] == \"AC\":\n                            if b == 0:\n                                ans.append(\"B\")\n                                b, c = b+1, c-1\n                            else:\n                                ans.append(\"C\")\n                                b, c = b-1, c+1\n                        else:\n                            if b == 0:\n                                ans.append(\"B\")\n                                b, c = b+1, c-1\n                            else:\n                                ans.append(\"C\")\n                                b, c = b-1, c+1\n                    else:\n                        if b == 0 and c == 0:\n                            f = False\n                            break\n                        elif c == 0:\n                            ans.append(\"C\")\n                            b, c = b-1, c+1\n                        else:\n                            ans.append(\"B\")\n                            b, c = b+1, c-1\n        if f:\n            print(\"Yes\")\n            for v in ans:\n                print(v)\n        else:\n            print(\"No\")\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\nsys.setrecursionlimit(10 ** 7)\n\n# ----------\n\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\n\nN, A, B, C = list(map(int, input().split()))\nnum = [A, B, C]\nS = []\nfor i in range(N):\n    S.append(input().strip())\nS.append('AB')\n\nans = []\nfor i in range(N):\n    s1 = S[i][0]\n    s2 = S[i][1]\n    n1 = num[\"ABC\".index(s1)]\n    n2 = num[\"ABC\".index(s2)]\n\n    if n1 == n2 == 0:\n        print(\"No\")\n        return\n\n    s_add = \"\"\n    s_sub = \"\"\n    if n1 == 0:\n        s_add = s1\n        s_sub = s2\n    elif n2 == 0:\n        s_add = s2\n        s_sub = s1\n    elif s1 in S[i + 1]:\n        s_add = s1\n        s_sub = s2\n    else:\n        s_add = s2\n        s_sub = s1\n\n    num[\"ABC\".index(s_add)] += 1\n    num[\"ABC\".index(s_sub)] -= 1\n    ans.append(s_add)\n\nprint('Yes')\nfor a in ans:\n    print(a)\n", "n,a,b,c = map(int,input().split())\ns_list = []\nfor i in range(n):\n    s = input()\n    s_list.append(s)\n\nif a+b+c == 0:\n    print(\"No\")\n    return\n\nmove = []\nif a+b+c == 1:\n    for i in range(n):\n        if s_list[i] == \"AB\":\n            if a == 0:\n                a+=1\n                b-=1\n                move.append(\"A\")\n            else:\n                b+=1\n                a-=1\n                move.append(\"B\")\n        if s_list[i] == \"BC\":\n            if b == 0:\n                b+=1\n                c-=1\n                move.append(\"B\")\n            else:\n                c+=1\n                b-=1\n                move.append(\"C\")\n        if s_list[i] == \"AC\":\n            if a == 0:\n                a+=1\n                c-=1\n                move.append(\"A\")\n            else:\n                c+=1\n                a-=1\n                move.append(\"C\")\n        if min(a,b,c) < 0:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n    for i in move:\n        print(i)            \n    \nelse:\n    for i in range(n):\n        if i < n-1:\n            s_next = s_list[i+1]\n        if s_list[i] == \"AB\":\n            if a == 1 and b == 1 and s_next != \"AB\":\n                if s_next == \"BC\":\n                    b+=1\n                    a-=1\n                    move.append(\"B\")\n                else:\n                    a+=1\n                    b-=1\n                    move.append(\"A\")\n            else:\n                if a < b:\n                    a+=1\n                    b-=1\n                    move.append(\"A\")\n                else:\n                    b+=1\n                    a-=1\n                    move.append(\"B\")\n        if s_list[i] == \"BC\":\n            if b == 1 and c == 1 and s_next != \"BC\":\n                if s_next == \"AB\":\n                    b+=1\n                    c-=1\n                    move.append(\"B\")\n                else:\n                    c+=1\n                    b-=1\n                    move.append(\"C\")\n            else:\n                if b < c:\n                    b+=1\n                    c-=1\n                    move.append(\"B\")\n                else:\n                    c+=1\n                    b-=1\n                    move.append(\"C\")\n        if s_list[i] == \"AC\":\n            if a == 1 and c == 1 and s_next != \"AC\":\n                if s_next == \"AB\":\n                    a+=1\n                    c-=1\n                    move.append(\"A\")\n                else:\n                    c+=1\n                    a-=1\n                    move.append(\"C\")\n            else:\n                if a < c:\n                    a+=1\n                    c-=1\n                    move.append(\"A\")\n                else:\n                    c+=1\n                    a-=1\n                    move.append(\"C\") \n\n        if min(a,b,c) < 0:\n            print(\"No\")\n            return\n    print(\"Yes\")\n    for i in move:\n        print(i)     ", "import sys\ninput = sys.stdin.readline\nn, a, b, c = map(int, input().split())\nS = [input().rstrip().replace(\"AC\", \"CA\") for _ in range(n)]\nD = [\"AB\", \"BC\", \"CA\"]\nX = [a+b, b+c, c+a]\nL = []\nfor i, s in enumerate(S):\n  k = D.index(s)\n  if X[k] == 0:\n    print(\"No\")\n    return\n  if X[(k+1)%3] == 1 and X[(k+2)%3] == 1 and i < n-1:\n    l = D.index(S[i+1])\n    if l == (k+1)%3:\n      X[(k+1)%3] += 1\n      X[(k+2)%3] -= 1\n      L.append(s[1])\n    else:\n      X[(k+2)%3] += 1\n      X[(k+1)%3] -= 1\n      L.append(s[0])\n  else:\n    if X[(k+1)%3] < X[(k+2)%3]:\n      X[(k+1)%3] += 1\n      X[(k+2)%3] -= 1\n      L.append(s[1])\n    else:\n      X[(k+2)%3] += 1\n      X[(k+1)%3] -= 1\n      L.append(s[0])\nprint(\"Yes\")\nprint(*L, sep=\"\\n\")", "#F\nimport sys\nfrom collections import Counter as cc\n\nN,A,B,C = list(map(int, input().split()))\nabc = []\nans = []\n\nfor i in range(N):\n    abc.append(input())\nabc.append(\"\")\n\na = abc.count(\"AB\")+abc.count(\"AC\")\nb = abc.count(\"AB\")+abc.count(\"BC\")\nc = abc.count(\"AC\")+abc.count(\"BC\")\n\n\nfor i, (s, ns) in enumerate(zip(abc,abc[1:])):\n    if s == \"AB\":\n        if A > B or (A == B and i != N-1 and (\"AB\" in ns or \"BC\" in ns)):\n            A -= 1\n            B += 1\n            ans.append(\"B\")\n        else:\n            A += 1\n            B -= 1\n            ans.append(\"A\")\n    elif s == \"AC\":\n        a -= 1\n        c -= 1\n        if A > C or (A == C and i != N-1 and (\"AC\" in ns or \"BC\" in ns)):\n            A -= 1\n            C += 1\n            ans.append(\"C\")\n        else:\n            A += 1\n            C -= 1\n            ans.append(\"A\")\n    else:\n        c -= 1\n        b -= 1\n        if B > C or (B == C and i != N-1 and (\"AC\" in ns or \"BC\" in ns)):\n            C += 1\n            B -= 1\n            ans.append(\"C\")\n        else:\n            C -= 1\n            B += 1\n            ans.append(\"B\")\n    if A < 0 or B < 0 or C < 0:\n        print(\"No\")\n        return\n\nprint(\"Yes\")\nfor i in range(N):\n    print(str(ans[i]))", "import sys\nreadline = sys.stdin.readline\n\ndef main():\n  N, a, b, c = map(int, readline().split())\n  A = {\"A\":a, \"B\":b, \"C\":c}\n  S = []\n  for i in range(N):\n    l = readline().strip()\n    S.append([l[0], l[1]])\n\n  ans = \"\"\n  ret = False\n  for i in range(N):\n    if A[S[i][0]] == 0 and A[S[i][1]] == 0:\n      break\n    if i == N-1:\n      if A[S[i][0]] > 0:\n        ans += S[i][1]\n      else:\n        ans += S[i][0]\n      ret = True\n      break\n    if A[\"A\"] + A[\"B\"] + A[\"C\"] == 1:\n      if A[S[i][0]] == 1:\n        if S[i][0] in S[i+1] and S[i][1] not in S[i+1]:\n          break\n        else:\n          A[S[i][0]] -= 1\n          A[S[i][1]] += 1\n          ans += S[i][1]\n          continue\n      else:\n        if S[i][1] in S[i+1] and S[i][0] not in S[i+1]:\n          break\n        else:\n          A[S[i][0]] += 1\n          A[S[i][1]] -= 1\n          ans += S[i][0]\n          continue\n    if A[S[i][0]] == 0:\n      A[S[i][0]] += 1\n      A[S[i][1]] -= 1\n      ans += S[i][0]\n      continue\n    elif A[S[i][1]] == 0:\n      A[S[i][0]] -= 1\n      A[S[i][1]] += 1\n      ans += S[i][1]\n      continue\n    elif S[i][0] in S[i+1]:\n      A[S[i][0]] += 1\n      A[S[i][1]] -= 1\n      ans += S[i][0]\n      continue\n    else:\n      A[S[i][0]] -= 1\n      A[S[i][1]] += 1\n      ans += S[i][1]\n      continue\n\n  if ret:\n    print(\"Yes\")\n    for i in range(N):\n      print(ans[i])\n  else:\n    print(\"No\")\n\ndef __starting_point():\n  main()\n__starting_point()", "def solve(writer):\n    N, A, B, C = list(map(int, input().split()))\n    variables = {\n        'A': A,\n        'B': B,\n        'C': C\n    }\n\n    queries = (list(input()) for _ in range(N))\n\n    buffer = list()\n    b = ''\n\n    for i in range(N):\n        if not buffer:\n            t1, t2 = next(queries)\n        else:\n            b = buffer.pop()\n            if b == 'pass':\n                continue\n            else:\n                t1, t2 = list(b)\n\n        v1 = variables[t1]\n        v2 = variables[t2]\n\n        if v1 == v2 == 0:\n            return False\n        elif v1 == v2 == 1:\n            if i == N-1:\n                writer.append(t1)\n                return True\n\n            nt1, nt2 = next(queries)\n            if len({t1, t2, nt1, nt2}) == 2:\n                buffer.append('pass')\n                writer.append(t1)\n                writer.append(t2)\n                continue\n\n            if t1 in {nt1, nt2}:\n                variables[t1] += 1\n                variables[t2] -= 1\n                writer.append(t1)\n            else:\n                variables[t1] -= 1\n                variables[t2] += 1\n                writer.append(t2)\n\n            buffer.append(''.join([nt1, nt2]))\n\n        elif v1 > v2:\n            variables[t1] -= 1\n            variables[t2] += 1\n            writer.append(t2)\n        elif v2 > v1:\n            variables[t1] += 1\n            variables[t2] -= 1\n            writer.append(t1)\n        else:\n            variables[t1] += 1\n            variables[t2] -= 1\n            writer.append(t1)\n\n    return True\n\n\ndef main():\n    writer = list()\n    ok = solve(writer)\n    if ok:\n        print('Yes')\n        for w in writer:\n            print(w)\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nsys.setrecursionlimit(10**7)\nans=''\ndef dfs(a,b,c,t):\n    nonlocal ans\n    if a<0 or b<0 or c<0:\n        return False\n    if t==N:\n        return True\n    if s[t]=='AB':\n        if dfs(a-1,b+1,c,t+1):\n            ans+='B'\n            return True\n        elif dfs(a+1,b-1,c,t+1):\n            ans+='A'\n            return True\n    if s[t]=='BC':\n        if dfs(a,b-1,c+1,t+1):\n            ans+='C'\n            return True\n        elif dfs(a,b+1,c-1,t+1):\n            ans+='B'\n            return True\n    if s[t]=='AC':\n        if dfs(a+1,b,c-1,t+1):\n            ans+='A'\n            return True\n        if dfs(a-1,b,c+1,t+1):\n            ans+='C'\n            return True\n    return False\n\nN,A,B,C=map(int,input().split())\ns=[input() for i in range(N)]\n\nif dfs(A,B,C,0):\n    print('Yes')\n    print(*ans[::-1],sep='\\n')\nelse:\n    print('No')", "def update_vrs(vrs, idx, s):\n    if idx == 0:\n        vrs[s[0]] += 1\n        vrs[s[1]] -= 1\n    elif idx == 1:\n        vrs[s[0]] -= 1\n        vrs[s[1]] += 1\n    else:\n        raise ValueError()\n\n\ndef process1(vrs, lst_s):\n    selects = []\n    for s in lst_s:\n        if vrs[s[0]] == 0 and vrs[s[1]] == 0:\n            return False, None\n        elif vrs[s[0]] == 0:\n            selects.append(s[0])\n            update_vrs(vrs, 0, s)\n        else:  # when vrs[s[1]] == 1:\n            selects.append(s[1])\n            update_vrs(vrs, 1, s)\n    return True, selects\n\n\ndef process2(vrs, lst_s):\n    selects = []\n    for i, s in enumerate(lst_s):\n        if vrs[s[0]] == 0 and vrs[s[1]] == 0:\n            return False, None\n        elif vrs[s[0]] == 0:\n            selects.append(s[0])\n            update_vrs(vrs, 0, s)\n        elif vrs[s[1]] == 0:\n            selects.append(s[1])\n            update_vrs(vrs, 1, s)\n        else:\n            if i == len(lst_s) - 1:\n                selects.append(s[0])\n            else:\n                next_s = lst_s[i + 1]\n                if s[0] in next_s:\n                    selects.append(s[0])\n                    update_vrs(vrs, 0, s)\n                else:\n                    selects.append(s[1])\n                    update_vrs(vrs, 1, s)\n    return True, selects\n\n\ndef main():\n    vrs = {}\n    n, vrs['A'], vrs['B'], vrs['C'] = [int(v) for v in input().split(' ')]\n    lst_s = []\n    for _ in range(n):\n        lst_s.append(input().strip())\n\n    sum_abc = vrs['A'] + vrs['B'] + vrs['C']\n\n    if sum_abc == 0:\n        ans = False\n    elif sum_abc == 1:\n        ans, selects = process1(vrs, lst_s)\n    else:\n        ans, selects = process2(vrs, lst_s)\n\n    if ans is True:\n        print('Yes')\n        for s in selects:\n            print(s)\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, A, B, C = list(map(int,input().split()))\nans = []\nflag = True\ncnt = 0\nwhile True:\n  cnt += 1\n  if cnt > N:\n    break\n  s = input()\n  if s == 'AB':\n    if A == B == 0:\n      flag = False\n      break\n    elif A == B == 1:\n      if cnt == N:\n        ans.append('A')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'AB':\n          ans.append('A')\n          ans.append('B')\n          continue\n        elif s == 'AC':\n          ans.append('A')\n          ans.append('C')\n          B -= 1\n          C += 1\n          continue\n        else:\n          ans.append('B')\n          ans.append('C')\n          A -= 1\n          C += 1\n          continue\n    elif A >= B:\n      A -= 1\n      B += 1\n      ans.append('B')\n      continue\n    else:\n      B -= 1\n      A += 1\n      ans.append('A')\n      continue\n  elif s == 'BC':\n    if B == C == 0:\n      flag = False\n      break\n    elif B == C == 1:\n      if cnt == N:\n        ans.append('B')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'BC':\n          ans.append('B')\n          ans.append('C')\n          continue\n        elif s == 'AB':\n          ans.append('B')\n          ans.append('A')\n          C -= 1\n          A += 1\n          continue\n        else:\n          ans.append('C')\n          ans.append('A')\n          B -= 1\n          A += 1\n          continue\n    elif B >= C:\n      B -= 1\n      C += 1\n      ans.append('C')\n      continue\n    else:\n      C -= 1\n      B += 1\n      ans.append('B')\n      continue \n  else:\n    if C == A == 0:\n      flag = False\n      break\n    elif C == A == 1:\n      if cnt == N:\n        ans.append('C')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'AC':\n          ans.append('C')\n          ans.append('A')\n          continue\n        elif s == 'BC':\n          ans.append('C')\n          ans.append('B')\n          A -= 1\n          B += 1\n          continue\n        else:\n          ans.append('A')\n          ans.append('B')\n          C -= 1\n          B += 1\n          continue\n    elif A >= C:\n      A -= 1\n      C += 1\n      ans.append('C')\n      continue\n    else:\n      C -= 1\n      A += 1\n      ans.append('A')\n      continue\nif flag:\n  print('Yes')\n  for item in ans:\n    print(item)\nelse:\n  print('No')\n", "N, A, B, C = list(map(int, input().split()))\nd = {\"A\": A, \"B\": B, \"C\": C}\nl = [input() for _ in range(N)]\nv = A+B+C\n\ndef solve():\n    res = []\n    if v==0:\n        return []\n    elif v==1:\n        for i in l:\n            a, b = i\n            if d[a]==0 and d[b]==0:\n                return []\n            elif d[a]>d[b]:\n                d[a] -= 1\n                d[b] += 1\n                res.append(b)\n            else:\n                d[a] += 1\n                d[b] -= 1\n                res.append(a)\n    else:\n        a, b = l[0]\n        if d[a]==0 and d[b]==0:\n            return []\n        else:\n            for i, j in enumerate(l):\n                a, b = j\n                if d[a]>d[b]:\n                    d[a] -= 1\n                    d[b] += 1\n                    res.append(b)\n                elif d[a]==d[b]==1 and i+1<N:\n                    e = set(l[i+1])&set([a, b])\n                    if len(e)==1:\n                        f = e.pop()\n                        g = b if f==a else a\n                        d[f] += 1\n                        d[g] -= 1\n                        res.append(f)\n                    else:\n                        d[a] -= 1\n                        d[b] += 1\n                        res.append(b)\n                else:\n                    d[a] += 1\n                    d[b] -= 1\n                    res.append(a)\n    return res\n\n\nr = solve()\nif r:\n    print(\"Yes\")\n    for i in r:\n        print(i)\nelse:\n    print(\"No\")\n", "import sys\nsys.setrecursionlimit(10**7)\nans=''\ndef dfs(a,b,c,t):\n    nonlocal ans\n    if a<0 or b<0 or c<0:\n        return False\n    if t==N:\n        return True\n    if s[t]=='AB':\n        if dfs(a-1,b+1,c,t+1):\n            ans+='B'\n            return True\n        elif dfs(a+1,b-1,c,t+1):\n            ans+='A'\n            return True\n    if s[t]=='BC':\n        if dfs(a,b-1,c+1,t+1):\n            ans+='C'\n            return True\n        elif dfs(a,b+1,c-1,t+1):\n            ans+='B'\n            return True\n    if s[t]=='AC':\n        if dfs(a+1,b,c-1,t+1):\n            ans+='A'\n            return True\n        if dfs(a-1,b,c+1,t+1):\n            ans+='C'\n            return True\n    return False\n\nN,A,B,C=map(int,input().split())\ns=[input() for i in range(N)]\n\nif dfs(A,B,C,0):\n    print('Yes')\n    print(*ans[::-1],sep='\\n')\nelse:\n    print('No')\n", "N, A, B, C = map(int, input().split())\nS = [input() for _ in range(N)]\nans = []\nfor i, s in enumerate(S):\n    if s == \"AB\":\n        if A == 0:\n            A += 1\n            B -= 1\n            ans.append(\"A\")\n        elif B == 0:\n            A -= 1\n            B += 1\n            ans.append(\"B\")\n        else:\n            if i + 1 == N or S[i + 1] == \"AB\":\n                A += 1\n                B -= 1\n                ans.append(\"A\")\n            else:\n                if S[i + 1] == \"BC\":\n                    A -= 1\n                    B += 1\n                    ans.append(\"B\")\n                else:\n                    A += 1\n                    B -= 1\n                    ans.append(\"A\")\n\n        if A < 0 or B < 0:\n            print(\"No\")\n            return\n    elif s == \"BC\":\n        if B == 0:\n            B += 1\n            C -= 1\n            ans.append(\"B\")\n        elif C == 0:\n            B -= 1\n            C += 1\n            ans.append(\"C\")\n        else:\n            if i + 1 == N or S[i + 1] == \"BC\":\n                B += 1\n                C -= 1\n                ans.append(\"B\")\n            else:\n                if S[i + 1] == \"AB\":\n                    B += 1\n                    C -= 1\n                    ans.append(\"B\")\n                else:\n                    B -= 1\n                    C += 1\n                    ans.append(\"C\")\n\n        if B < 0 or C < 0:\n            print(\"No\")\n            return\n    else:\n        if C == 0:\n            C += 1\n            A -= 1\n            ans.append(\"C\")\n        elif A == 0:\n            C -= 1\n            A += 1\n            ans.append(\"A\")\n        else:\n            if i + 1 == N or S[i + 1] == \"AC\":\n                A += 1\n                C -= 1\n                ans.append(\"A\")\n            else:\n                if S[i + 1] == \"AB\":\n                    A += 1\n                    C -= 1\n                    ans.append(\"A\")\n                else:\n                    A -= 1\n                    C += 1\n                    ans.append(\"C\")\n\n        if A < 0 or C < 0:\n            print(\"No\")\n            return\nprint(\"Yes\")\nfor x in ans:\n    print(x)", "#!/usr/bin/env python3\n\nn, a, b, c = map(int, input().split())\nS = []\nfor _ in range(n):\n    S.append(input())\n\nans = []\nfor i in range(n):\n    if S[i] == \"AB\":\n        if a == b == 0:\n            print(\"No\")\n            return\n        elif a < b or (a == b and i != n - 1 and \"A\" in S[i+1]):\n            ans.append(\"A\")\n            a += 1\n            b -= 1\n        else:\n            ans.append(\"B\")\n            a -= 1\n            b += 1\n    elif S[i] == \"BC\":\n        if b == c == 0:\n            print(\"No\")\n            return\n        elif c < b or (c == b and i != n - 1 and \"C\" in S[i+1]):\n            ans.append(\"C\")\n            c += 1\n            b -= 1\n        else:\n            ans.append(\"B\")\n            c -= 1\n            b += 1\n    else:\n        if c == a == 0:\n            print(\"No\")\n            return\n        elif c < a or (c == a and i != n - 1 and \"C\" in S[i+1]):\n            ans.append(\"C\")\n            c += 1\n            a -= 1\n        else:\n            ans.append(\"A\")\n            c -= 1\n            a += 1\nprint(\"Yes\")\nprint(\"\\n\".join(ans))\nreturn", "import sys\nreadline = sys.stdin.readline\n\nN,A,B,C = list(map(int,readline().split()))\n\n# 0,0\u3092\u4f5c\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n# \u57fa\u672c\u7684\u306b\u306f\u5c0f\u3055\u3044\u307b\u3046\u306b1\u3092\u8db3\u3059\n# \u4e21\u65b9\u3068\u30821\u306e\u5834\u5408\u306f\u3001\u6b21\u306e\u64cd\u4f5c\u3067\u9078\u3070\u308c\u308b\u307b\u3046\u306b1\u3092\u8db3\u3059\n# \u4e21\u65b9\u3068\u3082\u6b21\u306e\u64cd\u4f5c\u3067\u9078\u3070\u308c\u308b\u3068\u304d\u306f\u3069\u3061\u3089\u306b\u8db3\u3057\u3066\u3082\u3088\u3044\n\nS = [readline().rstrip() for i in range(N)]\nans = []\n\nfor i in range(N):\n  if S[i] == \"AB\":\n    if A == 0 and B == 0:\n      print(\"No\")\n      return\n    if A < B:\n      ans += [\"A\"]\n      A += 1\n      B -= 1\n    elif A > B:\n      ans += [\"B\"]\n      B += 1\n      A -= 1\n    else:\n      if i + 1 < N and \"A\" in S[i + 1]:\n        ans += [\"A\"]\n        A += 1\n        B -= 1\n      else:\n        ans += [\"B\"]\n        B += 1\n        A -= 1\n  if S[i] == \"AC\":\n    if A == 0 and C == 0:\n      print(\"No\")\n      return\n    if A < C:\n      ans += [\"A\"]\n      A += 1\n      C -= 1\n    elif A > C:\n      ans += [\"C\"]\n      C += 1\n      A -= 1\n    else:\n      if i + 1 < N and \"A\" in S[i + 1]:\n        ans += [\"A\"]\n        A += 1\n        C -= 1\n      else:\n        ans += [\"C\"]\n        C += 1\n        A -= 1\n  if S[i] == \"BC\":\n    if B == 0 and C == 0:\n      print(\"No\")\n      return\n    if B < C:\n      ans += [\"B\"]\n      B += 1\n      C -= 1\n    elif B > C:\n      ans += [\"C\"]\n      C += 1\n      B -= 1\n    else:\n      if i + 1 < N and \"B\" in S[i + 1]:\n        ans += [\"B\"]\n        B += 1\n        C -= 1\n      else:\n        ans += [\"C\"]\n        C += 1\n        B -= 1\nprint(\"Yes\")\nfor a in ans:\n  print(a)\n      \n    \n    \n\n  \n", "# \u521d\u624b 1 1 1 \u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# \u3069\u3053\u304b\u306e\u72b6\u614b\u3067 1 1 1 \u3092\u4f5c\u308c\u308b\u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 1 2 \u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 0 3 \u3067\u3001\u521d\u624b\u304cAB\u4ee5\u5916\u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 0 0 \u306a\u3089\u7d76\u5bfe\u5931\u6557\n#\n# \u521d\u624b\u3067\u6210\u5426\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u306f\n# 0 1 1\n# 0 0 2\n# 0 0 1\n#\n# 0 0 1 \u306f greedy\u306b\u3084\u308b\u3057\u304b\u306a\u3044\n# 0 0 2 \u306f\u3001\u5c11\u306a\u304f\u3068\u30821\u56de\u306fgreedy\n#\n# \u7d50\u5c40\u3001\u5404\u56de\u306egreedy\u3067\u306f\u554f\u984c\u306b\u306a\u308b\u306e\u306f\n# 0 1 1 \u306e\u3068\u304d\u306e\u307f\n# \u3053\u308c\u306f1\u500b\u5148\u3092\u8aad\u3081\u3070\u5341\u5206\n\n\ndef select(x, y, ops, i, z):\n    # true -> x \u3092\u5897\u3084\u3059\n    if not(x == 1 and y == 1 and i < len(ops) - 1):\n        if x < y:\n            return True\n        else:\n            return False\n\n    # x = y = 1, i < len(ops) - 1\n    # \u5148\u8aad\u307f\u3057\u3066 xz \u306a\u3089 x \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 y \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 \u3069\u3063\u3061\u3067\u3082\u3044\u3044\n    op = ops[i]\n    nop = ops[i+1]\n\n    oo = (op, nop)\n    if op == nop:\n        return True\n\n    if oo in [(\"AB\", \"AC\"), (\"BC\", \"AB\"), (\"AC\", \"AB\")]:\n        return True\n\n    return False\n\ndef main():\n    nabc = [int(_x) for _x in input().split()]\n    n = nabc[0]\n    a = nabc[1]\n    b = nabc[2]\n    c = nabc[3]\n\n    ops = []\n    for i in range(n):\n        ops.append(input())\n\n    result = []\n    for i in range(n):\n        op = ops[i]\n        if op == \"AB\":\n            if select(a, b, ops, i, c):\n                result.append(\"A\")\n                a+=1\n                b-=1\n            else:\n                result.append(\"B\")\n                a-=1\n                b+=1\n        if op == \"AC\":\n            if select(a, c, ops, i, b):\n                result.append(\"A\")\n                a+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                a-=1\n                c+=1\n        if op == \"BC\":\n            if select(b, c, ops, i, a):\n                result.append(\"B\")\n                b+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                b-=1\n                c+=1\n        if a <0 or b<0 or c<0:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n    for r in result:\n        print(r)\n\nmain()\n", "import sys\nn,a,b,c = map(int, input().split())\n \ns = list()\nfor i in range(n):\n    s.append(input())\n \nr = list()\n \nfor i in range(n):\n    if s[i]=='AB':\n        if a>b:\n            r.append('B')\n            a=a-1\n            b=b+1\n        elif a<b:\n            r.append('A')\n            a=a+1\n            b=b-1\n        else:\n            if i==n-1 or 'A' in s[i+1]:\n                r.append('A')\n                a=a+1\n                b=b-1\n            else: \n                r.append('B')\n                a=a-1\n                b=b+1\n    elif s[i]=='AC':\n        if a>c:\n            r.append('C')\n            a=a-1\n            c=c+1\n        elif a<c:\n            r.append('A')\n            a=a+1\n            c=c-1\n        else:\n            if i==n-1 or 'A' in s[i+1]:\n                r.append('A')\n                a=a+1\n                c=c-1\n            else: \n                r.append('C')\n                a=a-1\n                c=c+1\n    else:\n        if b>c:\n            r.append('C')\n            b=b-1\n            c=c+1\n        elif b<c:\n            r.append('B')\n            b=b+1\n            c=c-1\n        else:\n            if i==n-1 or 'B' in s[i+1]:\n                r.append('B')\n                b=b+1\n                c=c-1\n            else: \n                r.append('C')\n                b=b-1\n                c=c+1\n    if min(a,b,c)<0:\n        print('No')\n        return\n \n \nprint('Yes')\nfor str in r:\n    print(str)", "#import numpy as np\n#import math\n#from decimal import *\n#from numba import njit\n\n#@njit\ndef main():\n    N,A,B,C = list(map(int, input().split()))\n    array = [A,B,C]\n    string = ['A','B','C']\n    si = [] # AB:0,BC:1,AC:2\n    if A+B+C <= 0:\n        print('No')\n        return\n    for _ in range(N):\n        s = input()\n        si += (0 if s == 'AB' else 1 if s == 'BC' else 2),\n\n    ans = []\n    for i in range(len(si)):\n        s = si[i]\n        index = -3 if s == 0 else -2 if s == 1 else -1\n        if array[index] == 0:\n            array[index] += 1\n            array[index+1] -= 1\n            ans += string[index],\n        elif array[index+1] == 0:\n            array[index] -= 1\n            array[index+1] += 1\n            ans += string[index+1],\n        elif array[index] == 1 and array[index+1] == 1:\n            if i+1 >= len(si):\n                array[index] += 1\n                array[index+1] -= 1\n                ans += string[index],\n            else:\n                if si[i+1] != (index+1)%3:\n                    array[index] += 1\n                    array[index+1] -= 1\n                    ans += string[index],\n                else:\n                    array[index] -= 1\n                    array[index+1] += 1\n                    ans += string[index+1],\n        elif array[index] == 1:\n            array[index] += 1\n            array[index+1] -= 1\n            ans += string[index],\n        else:\n            array[index] -= 1\n            array[index+1] += 1\n            ans += string[index+1],\n\n        if array[0] < 0 or array[1] < 0 or array[2] < 0:\n            print('No')\n            return\n        \n    print('Yes')\n    for s in ans:\n        print(s)\n\nmain()\n", "N, A, B, C = map(int, input().split())\ndt = {'AB': (0, 1), 'AC': (0, 2), 'BC': (1, 2)}\nQ = [dt[input()] for _ in range(N)]\n\n\nclass Game:\n    def __init__(self, ABC):\n        self.ABC = ABC\n        self.ds = {0: 'A', 1: 'B', 2: 'C'}\n        self.ans = []\n\n    def add_q0(self, q0, q1):\n        self.ans.append(self.ds[q0])\n        self.ABC[q0] += 1\n        self.ABC[q1] -= 1\n\n    def add_q1(self, q0, q1):\n        self.ans.append(self.ds[q1])\n        self.ABC[q0] -= 1\n        self.ABC[q1] += 1\n\n\ndef solve1(ABC):\n    G = Game(ABC)\n    for q0, q1 in Q:\n        if G.ABC[q0] == G.ABC[q1] == 0:\n            print('No')\n            return\n        elif G.ABC[q0] == 0:\n            G.add_q0(q0, q1)\n        else:\n            G.add_q1(q0, q1)\n    print('Yes')\n    print(*G.ans, sep='\\n')\n\n\ndef solve2(ABC):\n    G = Game(ABC)\n    for i, (q0, q1) in enumerate(Q):\n        if G.ABC[q0] == G.ABC[q1] == 0:\n            print('No')\n            return\n        elif G.ABC[q0] == 0:\n            G.add_q0(q0, q1)\n        elif G.ABC[q1] == 0:\n            G.add_q1(q0, q1)\n        elif G.ABC[q0] == G.ABC[q1] == 1 and sum(ABC) == 2 and i < N - 1:\n            if q0 in Q[i + 1]:\n                G.add_q0(q0, q1)\n            else:\n                G.add_q1(q0, q1)\n        else:\n            # \u4f59\u88d5\u306e\u7121\u3044\u65b9\u306b\u8db3\u3057\u3066\u304a\u304f\n            if G.ABC[q0] <= G.ABC[q1]:\n                G.add_q0(q0, q1)\n            else:\n                G.add_q1(q0, q1)\n    print('Yes')\n    print(*G.ans, sep='\\n')\n\n\nS = A + B + C\nif S == 0:\n    print('No')\nelif S == 1:\n    solve1([A, B, C])\nelse:\n    solve2([A, B, C])\n", "N, A, B, C = list(map(int, input().split()))\nnums = [A, B, C]\nsteps = [input() for i in range(N)]\nchars = [\"A\", \"B\", \"C\"]\noperations = []\ncan_select = True\nfor i in range(N):\n    s = steps[i]\n    left_idx = chars.index(s[0])\n    right_idx = chars.index(s[1])\n    if (nums[left_idx] == 0 and nums[right_idx] == 0) or nums[left_idx] < 0 or nums[right_idx] < 0:\n        can_select = False\n        break\n    elif nums[left_idx] == 1 and nums[right_idx] == 1 and i != N-1:\n        if chars[left_idx] in list(steps[i + 1]):\n            nums[left_idx] += 1\n            nums[right_idx] -= 1\n            operations.append(chars[left_idx])\n        else:\n            nums[left_idx] -= 1\n            nums[right_idx] += 1\n            operations.append(chars[right_idx])\n    else:\n        if nums[left_idx] < nums[right_idx]:\n            nums[left_idx] += 1\n            nums[right_idx] -= 1\n            operations.append(chars[left_idx])\n        else:\n            nums[left_idx] -= 1\n            nums[right_idx] += 1\n            operations.append(chars[right_idx])\nif can_select:\n    print(\"Yes\")\n    for i in operations:\n        print(i)\nelse:\n    print(\"No\")\n", "def solve(writer):\n    N, A, B, C = list(map(int, input().split()))\n    variables = {\n        'A': A,\n        'B': B,\n        'C': C\n    }\n\n    queries = (list(input()) for _ in range(N))\n\n    buffer = list()\n\n    for i in range(N):\n\n        if not buffer:\n            t1, t2 = next(queries)\n        else:\n            b = buffer.pop()\n            if b == 'pass':\n                continue\n            else:\n                t1, t2 = list(b)\n\n        v1 = variables[t1]\n        v2 = variables[t2]\n\n        if v1 == v2 == 0:\n            return False\n\n        elif v1 == v2 == 1:\n            if i == N-1:\n                writer.append(t1)\n                return True\n\n            nt1, nt2 = next(queries)\n            if len({t1, t2, nt1, nt2}) == 2:\n                buffer.append('pass')\n                writer.append(t1)\n                writer.append(t2)\n                continue\n\n            if t1 in {nt1, nt2}:\n                variables[t1] += 1\n                variables[t2] -= 1\n                writer.append(t1)\n            else:\n                variables[t1] -= 1\n                variables[t2] += 1\n                writer.append(t2)\n\n            buffer.append(''.join([nt1, nt2]))\n\n        elif v1 > v2:\n            variables[t1] -= 1\n            variables[t2] += 1\n            writer.append(t2)\n        elif v2 > v1:\n            variables[t1] += 1\n            variables[t2] -= 1\n            writer.append(t1)\n        else:\n            variables[t1] += 1\n            variables[t2] -= 1\n            writer.append(t1)\n\n    return True\n\n\ndef main():\n    writer = list()\n    ok = solve(writer)\n    if ok:\n        print('Yes')\n        for w in writer:\n            print(w)\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n, a, b, c = map(int, input().split())\n    s = [list(input()) for _ in range(n)]\n    num = dict(A=a, B=b, C=c)\n    t = a+b+c\n    ans = []\n    if t == 0:\n        print(\"No\")\n        return\n    if t == 1:\n        for i in range(n):\n            si = s[i]\n            if num[si[0]] == 1:\n                num[si[0]] -= 1\n                num[si[1]] += 1\n                ans.append(si[1])\n            elif num[si[1]] == 1:\n                num[si[0]] += 1\n                num[si[1]] -= 1\n                ans.append(si[0])\n            else:\n                print(\"No\")\n                return\n        print(\"Yes\")\n        print(\"\\n\".join(ans))\n        return\n    for i in range(n-1):\n        si = s[i]\n        if num[si[0]] == 0 and num[si[1]] >= 1:\n            num[si[0]] += 1\n            num[si[1]] -= 1\n            ans.append(si[0])\n        elif num[si[1]] == 0 and num[si[0]] >= 1:\n            num[si[0]] -= 1\n            num[si[1]] += 1\n            ans.append(si[1])\n        elif num[si[0]] >= 1 and num[si[1]] >= 1:\n            sin = s[i+1]\n            if si[0] in sin:\n                num[si[0]] += 1\n                num[si[1]] -= 1\n                ans.append(si[0])\n            else:\n                num[si[0]] -= 1\n                num[si[1]] += 1\n                ans.append(si[1])\n        else:\n            print(\"No\")\n            return\n    if num[s[n-1][0]] >= 1:\n        ans.append(s[n-1][1])\n    elif num[s[n-1][1]] >= 1:\n        ans.append(s[n-1][0])\n    else:\n        print(\"No\")\n        return\n    print(\"Yes\")\n    print(\"\\n\".join(ans))\n    return\n\ndef __starting_point():\n    main()\n__starting_point()", "N,A,B,C=map(int,input().split())\nl=[]\ni=0;j=0\n\nif A+B+C!=2:pass\nelse:\n  s=[]\n  while i<N:\n    s.append(input())\n    i+=1\n  if (A==2 and s[0]=='BC') or (B==2 and s[0]=='AC') or (C==2 and s[0]=='AB'):\n    print('No');return\n  print('Yes')\n  while j<N:\n    if j<N and s[j]=='AB':\n      if A==B==1:\n        if j==N-1:print('A');return\n        if j<N-1 and s[j+1]=='AB':A=2;B=0;print('A')\n        elif s[j+1]=='BC':A=0;B=1;C=1;print('B\\nC');j+=1\n        else: A=1;B=0;C=1;print('A\\nC');j+=1\n      else:\n        if A>B:print('B');A-=1;B+=1\n        else:print('A');A+=1;B-=1\n      j+=1\n    if j<N and s[j]=='BC':\n      if B==C==1:\n        if j==N-1:print('B');return\n        if j<N-1 and s[j+1]=='BC':B=2;C=0;print('B')\n        elif s[j+1]=='AB':A=1;B=1;C=0;print('B\\nA');j+=1\n        else: A=1;B=0;C=1;print('C\\nA');j+=1\n#      elif B==C==0:print('No');return\n      else:\n        if B>C:print('C');B-=1;C+=1\n        else: print('B');B+=1;C-=1\n      j+=1\n    if j<N and s[j]=='AC':\n      if A==C==1:\n        if j==N-1:print('A');return\n        if j<N-1 and s[j+1]=='AC':A=2;C=0;print('A')\n        elif s[j+1]=='AB':A=1;B=1;C=0;print('A\\nB');j+=1\n        else: A=0;B=1;C=1;print('C\\nB');j+=1\n#      elif A==C==0:print('No');return\n      else:\n        if A>C:print('C');A-=1;C+=1\n        else:print('A');A+=1;C-=1\n      j+=1\n#    print(j,A,B,C)\nif A+B+C==2:return\n\n#  if s=='AB':\n#    if AB==0:\n#      if A==0:A==1;B==0\n#print(A+B+C);return\nfor i in range(N):\n  s=input()\n#  print(A,B,C,s)\n  if s=='AB':\n    if A>B:A-=1;B+=1;l.append('B')\n    else:A+=1;B-=1;l.append('A')\n  if s=='BC':\n    if B>C:B-=1;C+=1;l.append('C')\n    else:B+=1;C-=1;l.append('B')\n  if s=='AC':\n    if C>A:C-=1;A+=1;l.append('A')\n    else:C+=1;A-=1;l.append('C')\n  if A<0 or B<0 or C<0:print('No');return\n#print(A,B,C)\nprint('Yes')\nprint(*l,sep='\\n')", "N,A,B,C=map(int,input().split())\nl=[]\ni=0;j=0\n\nif A+B+C!=2:pass\nelse:\n  s=[]\n  while i<N:\n    s.append(input())\n    i+=1\n  if (A==2 and s[0]=='BC') or (B==2 and s[0]=='AC') or (C==2 and s[0]=='AB'):\n    print('No');return\n  print('Yes')\n  while j<N:\n    if j<N and s[j]=='AB':\n      if A==B==1:\n        if j==N-1:print('A');return\n        if j<N-1 and s[j+1]=='AB':A=2;B=0;print('A')\n        elif s[j+1]=='BC':A=0;B=1;C=1;print('B\\nC');j+=1\n        else: A=1;B=0;C=1;print('A\\nC');j+=1\n      else:\n        if A>B:print('B');A-=1;B+=1\n        else:print('A');A+=1;B-=1\n      j+=1\n    if j<N and s[j]=='BC':\n      if B==C==1:\n        if j==N-1:print('B');return\n        if j<N-1 and s[j+1]=='BC':B=2;C=0;print('B')\n        elif s[j+1]=='AB':A=1;B=1;C=0;print('B\\nA');j+=1\n        else: A=1;B=0;C=1;print('C\\nA');j+=1\n      else:\n        if B>C:print('C');B-=1;C+=1\n        else: print('B');B+=1;C-=1\n      j+=1\n    if j<N and s[j]=='AC':\n      if A==C==1:\n        if j==N-1:print('A');return\n        if j<N-1 and s[j+1]=='AC':A=2;C=0;print('A')\n        elif s[j+1]=='AB':A=1;B=1;C=0;print('A\\nB');j+=1\n        else: A=0;B=1;C=1;print('C\\nB');j+=1\n      else:\n        if A>C:print('C');A-=1;C+=1\n        else:print('A');A+=1;C-=1\n      j+=1\nif A+B+C==2:return\n\nfor i in range(N):\n  s=input()\n  if s=='AB':\n    if A>B:A-=1;B+=1;l.append('B')\n    else:A+=1;B-=1;l.append('A')\n  if s=='BC':\n    if B>C:B-=1;C+=1;l.append('C')\n    else:B+=1;C-=1;l.append('B')\n  if s=='AC':\n    if C>A:C-=1;A+=1;l.append('A')\n    else:C+=1;A-=1;l.append('C')\n  if A<0 or B<0 or C<0:print('No');return\nprint('Yes')\nprint(*l,sep='\\n')", "N, A, B, C = map(int, input().split())\ns = [\"\" for i in range(N)]\nfor i in range(N):\n    s[i] = input()\n   \nvalid = True\nans = []\nall_sum = A + B + C\nif all_sum >= 3:\n    for op in s:\n        if op == \"AB\":\n            if A > B:\n                A -= 1\n                B += 1\n                ans.append(\"B\")\n            else:\n                A += 1\n                B -= 1\n                ans.append(\"A\")\n        elif op == \"BC\":\n            if B > C:\n                B -= 1\n                C += 1\n                ans.append(\"C\")\n            else:\n                B += 1\n                C -= 1\n                ans.append(\"B\")\n        else:\n            if A > C:\n                A -= 1\n                C += 1\n                ans.append(\"C\")\n            else:\n                A += 1\n                C -= 1\n                ans.append(\"A\")\n        if A < 0 or B < 0 or C < 0:\n            valid = False\n            break\n        \n    if valid:\n        print(\"Yes\")\n        for c in ans:\n            print(c)\n    else:\n        print(\"No\")\nelse:\n    for i in range(N):\n        op = s[i]\n        if op == \"AB\":\n            if A > B:\n                A -= 1\n                B += 1\n                ans.append(\"B\")\n            elif A < B:\n                A += 1\n                B -= 1\n                ans.append(\"A\")\n            else:\n                if i != N - 1 and \"A\" in s[i + 1]:\n                    A += 1\n                    B -= 1\n                    ans.append(\"A\")\n                else:\n                    A -= 1\n                    B += 1\n                    ans.append(\"B\")\n        elif op == \"AC\":\n            if A > C:\n                A -= 1\n                C += 1\n                ans.append(\"C\")\n            elif A < C:\n                A += 1\n                C -= 1\n                ans.append(\"A\")\n            else:\n                if i != N - 1 and \"A\" in s[i + 1]:\n                    A += 1\n                    C -= 1\n                    ans.append(\"A\")\n                else:\n                    A -= 1\n                    C += 1\n                    ans.append(\"C\")\n        else:\n            if B > C:\n                B -= 1\n                C += 1\n                ans.append(\"C\")\n            elif B < C:\n                B += 1\n                C -= 1\n                ans.append(\"B\")\n            else:\n                if i != N - 1 and \"B\" in s[i + 1]:\n                    B += 1\n                    C -= 1\n                    ans.append(\"B\")\n                else:\n                    B -= 1\n                    C += 1\n                    ans.append(\"C\")\n        if A < 0 or B < 0 or C < 0:\n            valid = False\n            break\n    if valid:\n        print(\"Yes\")\n        for c in ans:\n            print(c)\n    else:\n        print(\"No\")", "n,a,b,c=list(map(int,input().split()))\ns=[input() for _ in range(n)]\nans=[]\nd={'A':a,'B':b,'C':c}\nfor i in range(n):\n  x,y=list(s[i])\n  if d[x]==0 and d[y]==0:\n    print('No')\n    return\n  elif d[x]==1 and d[y]==1 and i<n-1:\n    if x in s[i+1]:\n      d[x]+=1\n      d[y]-=1\n      ans.append(x)\n    else:\n      d[x]-=1\n      d[y]+=1\n      ans.append(y)\n  elif set((d[x],d[y]))==set((1,0)):\n    d[x],d[y]=d[y],d[x]\n    ans.append(x if d[x]>d[y] else y)\n  elif d[x]>=d[y]:\n    d[y]+=1\n    d[x]-=1\n    ans.append(y)\n  else:\n    d[y]-=1\n    d[x]+=1\n    ans.append(x)\nprint('Yes')\nfor ansi in ans:\n  print(ansi)\n", "import sys\ninput = sys.stdin.readline\nN,A,B,C = map(int,input().split())\nS = [input().rstrip() for i in range(N)]\n\nif A==B==C==0:\n    print('No')\n    return\n\nif A+B+C == 1:\n    ans = []\n    for s in S:\n        if (s=='AB' and A+B==0) or (s=='AC' and A+C==0) or (s=='BC' and B+C==0):\n            print('No')\n            return\n        if s=='AB':\n            if A<B:\n                ans.append('A')\n            else:\n                ans.append('B')\n            A,B = B,A\n        if s=='AC':\n            if A<C:\n                ans.append('A')\n            else:\n                ans.append('C')\n            A,C = C,A\n        if s=='BC':\n            if B<C:\n                ans.append('B')\n            else:\n                ans.append('C')\n            B,C = C,B\n    print('Yes')\n    print(*ans, sep='\\n')\n\nelse:\n    ans = []\n    for i,s in enumerate(S):\n        if (s=='AB' and A+B==0) or (s=='AC' and A+C==0) or (s=='BC' and B+C==0):\n            print('No')\n            return\n        if s=='AB':\n            if A==0:\n                ans.append('A')\n                A += 1\n                B -= 1\n            elif B==0:\n                ans.append('B')\n                B += 1\n                A -= 1\n            elif A==B==1:\n                if i == N-1 or C > 0 or S[i+1]=='AB':\n                    ans.append('A')\n                    A += 1\n                    B -= 1\n                elif S[i+1]=='AC':\n                    ans.append('A')\n                    A += 1\n                    B -= 1\n                else:\n                    ans.append('B')\n                    B += 1\n                    A -= 1\n            elif A < B:\n                ans.append('A')\n                A += 1\n                B -= 1\n            else:\n                ans.append('B')\n                B += 1\n                A -= 1\n        if s=='AC':\n            if A==0:\n                ans.append('A')\n                A += 1\n                C -= 1\n            elif C==0:\n                ans.append('C')\n                C += 1\n                A -= 1\n            elif A==C==1:\n                if i == N-1 or B > 0 or S[i+1]=='AC':\n                    ans.append('C')\n                    C += 1\n                    A -= 1\n                elif S[i+1]=='AB':\n                    ans.append('A')\n                    A += 1\n                    C -= 1\n                else:\n                    ans.append('C')\n                    C += 1\n                    A -= 1\n            elif C < A:\n                ans.append('C')\n                C += 1\n                A -= 1\n            else:\n                ans.append('A')\n                A += 1\n                C -= 1\n        if s=='BC':\n            if B==0:\n                ans.append('B')\n                B += 1\n                C -= 1\n            elif C==0:\n                ans.append('C')\n                C += 1\n                B -= 1\n            elif B==C==1:\n                if i == N-1 or A > 0 or S[i+1]=='BC':\n                    ans.append('B')\n                    B += 1\n                    C -= 1\n                elif S[i+1]=='AB':\n                    ans.append('B')\n                    B += 1\n                    C -= 1\n                else:\n                    ans.append('C')\n                    C += 1\n                    B -= 1\n            elif B < C:\n                ans.append('B')\n                B += 1\n                C -= 1\n            else:\n                ans.append('C')\n                C += 1\n                B -= 1\n    print('Yes')\n    print(*ans, sep='\\n')", "N,A,B,C = list(map(int, input().split()))\nX = [A,B,C]\nANS = []\n\nflg = True\nD = []\npat = {'AB':[0,1], 'BC':[1,2], 'AC':[0,2]}\n\nfor i in range(N):\n  l = input()\n  D.append(pat[l])\n  \nfor i in range(N):\n  ai, bi = D[i]\n  an, bn = D[i+1] if i < N-1 else [0,1] # nanndemoyoi\n\n  if X[ai] == 0 and X[bi] == 0:\n    flg = False\n    break\n  elif X[ai] == 0:\n    ANS.append(ai)\n    X[ai] += 1\n    X[bi] -= 1\n  elif X[bi] == 0:\n    ANS.append(bi)\n    X[bi] += 1\n    X[ai] -= 1\n  else:\n    if ai == an or ai == bn:\n      pl, mi = ai, bi\n    else:\n      pl, mi = bi, ai\n    # \u5148\u8aad\u307f\u3067\u4f7f\u3046\u65b9\n    ANS.append(pl)\n    X[pl] += 1\n    X[mi] -= 1\n      \nif not flg:\n  print('No')\nelse:\n  print('Yes')\n  dd = {0:'A', 1:'B', 2:'C'}\n  for ans in ANS:\n    print((dd[ans]))\n    \n\n", "n,a,b,c=map(int, input().split(' '))\n# print(n,a,b,c)\nleft=[a,b,c]\nans=[]\nprev=(-1,-1)\nfor i in range(0,n):\n    s=input()\n    # print(s)\n    x = {'A':0,'B':1,'C':2}[s[0]]\n    y = {'A':0,'B':1,'C':2}[s[1]]\n    if left[x]==left[y]==0:\n        x0,y0=prev\n        if x0!=-1:\n            left[x0]-=1\n            left[y0]+=1\n            if left[x0]==0:\n                ans=[]\n                break\n            left[x0]-=1\n            left[y0]+=1\n            ans[len(ans)-1]=\"ABC\"[y0]\n        else:\n            ans=[]\n            break\n    if left[x]>left[y]:\n        x,y=y,x\n    left[x]+=1\n    left[y]-=1\n    ans.append(\"ABC\"[x])\n    prev=(x,y)\n\nif len(ans)==0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    for x in ans:\n        print(x)", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    def calc(x, y):\n        cnt[x] += 1\n        cnt[y] -= 1\n        res.append(S[x])\n\n    n, *cnt = map(int, input().split())\n    S = \"ABC\"\n    query = []\n    for _ in range(n):\n        s = input().rstrip()\n        a = 0 if s == \"AB\" else 0 if s == \"AC\" else 1\n        b = 1 if s == \"AB\" else 2 if s == \"AC\" else 2\n        query.append((a, b))\n    query.append((None, None))\n\n    res = []\n    for i in range(n):\n        a, b = query[i]\n        if cnt[a] == cnt[b] == 0:\n            print(\"No\")\n            return\n        elif cnt[a] == 0:\n            calc(a, b)\n        elif cnt[b] == 0:\n            calc(b, a)\n        else:\n            next_a, next_b = query[i + 1]\n            if a == next_a or a == next_b:\n                calc(a, b)\n            else:\n                calc(b, a)\n    print(\"Yes\")\n    print(*res, sep=\"\\n\")\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "def main():\n    N,A,B,C=list(map(int,input().split()))\n    d={'AB':(0,1),'AC':(0,2),'BC':(1,2)}\n    s=[d[input()] for _ in range(N)]\n    abc=[A,B,C]\n    ABC='ABC'\n    ans=[]\n    for i in range(N):\n        x,y=s[i]\n        # \u5f37\u5236\u7d42\u4e86\n        if abc[x] == abc[y] == 0:\n            print('No')\n            return\n        if abc[x] == abc[y] == 1:\n            # \u6700\u5f8c\u306e\u8981\u7d20 or \u6b21\u306b\u4eca\u56de\u9078\u3076\u53ef\u80fd\u6027\u304c\u3042\u308b\u3082\u306e\u304c\u3042\u308b\u304b\u3069\u3046\u304b\n            if (i == N-1) or (x in s[i+1]):\n                ans.append(ABC[x])\n                abc[x]+=1\n                abc[y]-=1\n            else:\n                ans.append(ABC[y])\n                abc[x]-=1\n                abc[y]+=1\n        # 2\u6570\u306e\u548c\u304c1 or 3\u4ee5\u4e0a\u306e\u5834\u5408\u306f\u5927\u304d\u3044\u65b9\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8, \u5c0f\u3055\u3044\u65b9\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b.\n        # 2\u6570\u304c\u540c\u3058\u5834\u5408\u306b\u306f \u5f8c\u534a\u306e\u6587\u5b57\u306b\u5bfe\u5fdc\u3059\u308b\u756a\u53f7\u3092\u512a\u5148\u3059\u308b.\n        else:\n            if abc[x] > abc[y]:\n                ans.append(ABC[y])\n                abc[x]-=1\n                abc[y]+=1\n            else:\n                ans.append(ABC[x])\n                abc[x]+=1\n                abc[y]-=1\n    print('Yes')\n    for a in ans:\n        print(a)\n\nmain()\n", "N, A, B, C = map(int,input().split())\nans = []\nflag = True\ncnt = 0\nwhile True:\n  cnt += 1\n  if cnt > N:\n    break\n  s = input()\n  if s == 'AB':\n    if A == B == 0:\n      flag = False\n      break\n    elif A == B == 1 and C == 0:\n      if cnt == N:\n        ans.append('A')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'AB':\n          ans.append('A')\n          ans.append('B')\n          continue\n        elif s == 'AC':\n          ans.append('A')\n          ans.append('C')\n          B -= 1\n          C += 1\n          continue\n        else:\n          ans.append('B')\n          ans.append('C')\n          A -= 1\n          C += 1\n          continue\n    elif A >= B:\n      A -= 1\n      B += 1\n      ans.append('B')\n      continue\n    else:\n      B -= 1\n      A += 1\n      ans.append('A')\n      continue\n  elif s == 'BC':\n    if B == C == 0:\n      flag = False\n      break\n    elif B == C == 1 and A == 0:\n      if cnt == N:\n        ans.append('B')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'BC':\n          ans.append('B')\n          ans.append('C')\n          continue\n        elif s == 'AB':\n          ans.append('B')\n          ans.append('A')\n          C -= 1\n          A += 1\n          continue\n        else:\n          ans.append('C')\n          ans.append('A')\n          B -= 1\n          A += 1\n          continue\n    elif B >= C:\n      B -= 1\n      C += 1\n      ans.append('C')\n      continue\n    else:\n      C -= 1\n      B += 1\n      ans.append('B')\n      continue \n  else:\n    if C == A == 0:\n      flag = False\n      break\n    elif C == A == 1 and B == 0:\n      if cnt == N:\n        ans.append('C')\n        break\n      else:\n        cnt += 1\n        s = input()\n        if s == 'AC':\n          ans.append('C')\n          ans.append('A')\n          continue\n        elif s == 'BC':\n          ans.append('C')\n          ans.append('B')\n          A -= 1\n          B += 1\n          continue\n        else:\n          ans.append('A')\n          ans.append('B')\n          C -= 1\n          B += 1\n          continue\n    elif A >= C:\n      A -= 1\n      C += 1\n      ans.append('C')\n      continue\n    else:\n      C -= 1\n      A += 1\n      ans.append('A')\n      continue\nif flag:\n  print('Yes')\n  for item in ans:\n    print(item)\nelse:\n  print('No')", "n, a, b, c = map(int, input().split())\nq = [input() for i in range(n)]\nab, ac, bc = \"AB\", \"AC\", \"BC\"\nans = []\nfor i in range(n):\n  \n  if((q[i] == ab and a == b == 0)\n  or (q[i] == ac and a == c == 0) \n  or (q[i] == bc and b == c == 0)):\n      print(\"No\")\n      return\n      \n  elif(q[i] == ab and [a, b, c] == [1, 1, 0] and i != n - 1):\n    if q[i+1] == ac: \n      a, b = a+1, b-1\n      ans.append(\"A\")\n    else:\n      a, b = a-1, b+1\n      ans.append(\"B\")     \n      \n  elif(q[i] == ac and [a, b, c] == [1, 0, 1] and i != n - 1):\n    if q[i+1] == ab:\n      a, c = a+1, c-1\n      ans.append(\"A\")\n    else:\n      a, c = a-1, c+1\n      ans.append(\"C\")\n      \n  elif(q[i] == bc and [a, b, c] == [0, 1, 1] and i != n - 1):\n    if q[i+1] == ab:\n      b, c = b+1, c-1\n      ans.append(\"B\")\n    else:\n      b, c = b-1, c+1\n      ans.append(\"C\")\n      \n  elif q[i] == ab:\n    if a > b:\n      a, b = a-1, b+1\n      ans.append(\"B\")\n    else:\n      a, b = a+1, b-1\n      ans.append(\"A\")\n      \n  elif q[i] == ac:\n    if a > c:\n      a, c = a-1, c+1\n      ans.append(\"C\")\n    else:\n      a, c = a+1, c-1\n      ans.append(\"A\")\n      \n  elif q[i] == bc:\n    if b > c:\n      b, c = b-1, c+1\n      ans.append(\"C\")\n    else:\n      b, c = b+1, c-1\n      ans.append(\"B\")\n\nprint(\"Yes\")\nfor i in range(n):\n  print(ans[i])", "n,a,b,c=map(int,input().split())\ns=[input() for _ in range(n)]\nabc=[a,b,c]\nd={'A':0,'B':1,'C':2}\ndr={0:'A',1:'B',2:'C'}\nans=[]\nfor i,x in enumerate(s):\n  x=[d[y] for y in list(x)]\n  if abc[x[0]]==abc[x[1]]==1 and i<n-1:\n    nx=[d[y] for y in list(s[i+1])]\n    for j,y in enumerate(x):\n      if y in nx:\n        abc[y]+=1\n        abc[x[(j+1)%2]]-=1\n        ans.append(dr[y])\n        break\n  elif abc[x[0]]>abc[x[1]]:\n    abc[x[1]]+=1\n    abc[x[0]]-=1\n    ans.append(dr[x[1]])\n  else:\n    abc[x[0]]+=1\n    abc[x[1]]-=1\n    ans.append(dr[x[0]])\n  for y in abc:\n    if y<0:\n      print('No')\n      return\n  \nprint('Yes')\nprint(*ans,sep='\\n')", "def main():\n    import sys\n\n    def input(): return sys.stdin.readline().rstrip()\n\n    def stoidx(s):\n        if s == 'AB':\n            return (0, 1)\n        elif s == 'BC':\n            return (1, 2)\n        else:\n            return (0, 2)\n\n\n    def answer(ans):\n        print('Yes')\n        for a in ans:\n            print(a)\n\n    def add_answer(x):\n        if s[x[0]] > s[x[1]]:\n            s[x[0]] -= 1\n            s[x[1]] += 1\n            ans.append(abc[x[1]])\n        else:\n            s[x[0]] += 1\n            s[x[1]] -= 1\n            ans.append(abc[x[0]])\n        \n    n, *s = list(map(int, input().split()))\n    sl = []\n    for _ in range(n):\n        sl.append(stoidx(input()))\n    abc = 'ABC'\n    ans = []\n    if sum(s) == 0:\n        print('No')\n        return\n\n    elif sum(s) == 1:\n        for x in sl:\n            if s[x[0]] == 0 and s[x[1]] == 0:\n                print('No')\n                return\n            add_answer(x)\n\n    else:\n        for i, x in enumerate(sl):\n            if s[x[0]] == 0 and s[x[1]] == 0:\n                print('No')\n                return\n                \n            if i < n-1 and s[x[0]] == 1 and s[x[1]] == 1:\n                nx = sl[i+1]\n                if x != nx and sum(s)==2:\n                    if x[0] in nx:\n                        s[x[0]] += 1\n                        s[x[1]] -= 1\n                        ans.append(abc[x[0]])\n                    else:\n                        s[x[0]] -= 1\n                        s[x[1]] += 1\n                        ans.append(abc[x[1]])\n                    continue\n            add_answer(x)\n    answer(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, a, b, c = map(int, input().split())\nA = [a, b, c]\nD = {'AB': 0, 'BC': 1, 'AC': 2}\nS = [input() for i in range(n)]\nS.append('AB')\nX = []\nfor i in range(n):\n    x, y = D[S[i]], (D[S[i]] + 1) % 3\n    if A[x] == 0 and A[y] == 0:\n        print('No')\n        return\n    if A[x] < A[y]:\n        A[x], A[y] = A[x] + 1, A[y] - 1\n        X.append('ABC'[x])\n    elif A[x] > A[y]:\n        A[x], A[y] = A[x] - 1, A[y] + 1\n        X.append('ABC'[y])\n    else:\n        x1, y1 = D[S[i + 1]], (D[S[i + 1]] + 1) % 3\n        if x == y1:\n            A[x], A[y] = A[x] + 1, A[y] - 1\n            X.append('ABC'[x])\n        else:\n            A[x], A[y] = A[x] - 1, A[y] + 1\n            X.append('ABC'[y])\nprint('Yes')\nprint(*X, sep='\\n')\n", "n,a,b,c=list(map(int,input().split()))\nl=[]\nfor i in range(0,n):\n    s=input()\n    l.append(s)\nfinal=[]\nfor i in range(0,len(l)):\n    if l[i]=='AB':\n        if a>b:\n            b+=1\n            a-=1\n            final.append('B')\n        elif a<b:\n            b-=1\n            a+=1\n            final.append('A')\n        else:\n            if a==0:\n                print('No')\n                break\n            else:\n                if i!=len(l)-1:\n                    if l[i+1]=='AB':\n                        a+=1\n                        b-=1\n                        final.append('A')\n                    elif l[i+1]=='AC':\n                        a+=1\n                        b-=1\n                        final.append('A')\n                    else:\n                        a-=1\n                        b+=1\n                        final.append('B')\n                else:\n                    a-=1\n                    b+=1\n                    final.append('B')\n    elif l[i]=='AC':\n        if a>c:\n            c+=1\n            a-=1\n            final.append('C')\n        elif a<c:\n            c-=1\n            a+=1\n            final.append('A')\n        else:\n            if a==0:\n                print('No')\n                break\n            else:\n                if i!=len(l)-1:\n                    if l[i+1]=='AB':\n                        a+=1\n                        c-=1\n                        final.append('A')\n                    elif l[i+1]=='AC':\n                        a+=1\n                        c-=1\n                        final.append('A')\n                    else:\n                        a-=1\n                        c+=1\n                        final.append('C')\n                else:\n                    a-=1\n                    c+=1\n                    final.append('C')\n    else:\n        if b>c:\n            c+=1\n            b-=1\n            final.append('C')\n        elif b<c:\n            c-=1\n            b+=1\n            final.append('B')\n        else:\n            if b==0:\n                print('No')\n                break\n            else:\n                if i!=len(l)-1:\n                    if l[i+1]=='AB':\n                        b+=1\n                        c-=1\n                        final.append('B')\n                    elif l[i+1]=='BC':\n                        b+=1\n                        c-=1\n                        final.append('B')\n                    else:\n                        b-=1\n                        c+=1\n                        final.append('C')\n                else:\n                    b-=1\n                    c+=1\n                    final.append('C')\nelse:\n    print('Yes')\n    for i in range(0,len(final)):\n        print((final[i]))\n", "import numpy as np\ndef resolve():\n    N,A,B,C = map(int,input().split())\n    Nlist = []\n    YesOrNo = True\n    ABC = str(input())\n    for i in range(N):\n        ABC_old = ABC\n        if i < N-1:\n            ABC = str(input())\n\n        if ABC_old == \"AB\":\n            if ABC == \"AC\":\n                add1 = np.sign(B - A + 0.1)\n            else:\n                add1 = np.sign(B - A - 0.1)\n\n            if add1 < 0:\n                Nlist.append(\"B\")\n            else:\n                Nlist.append(\"A\")\n            A = A + add1\n            B = B - add1\n            if A < 0 or B < 0:\n                YesOrNo = False\n                print('No')\n                break\n        \n        if ABC_old == \"AC\":\n            if ABC == \"AB\":\n                add1 = np.sign(C - A + 0.1)\n            else:\n                add1 = np.sign(C - A - 0.1)\n\n            if add1 < 0:\n                Nlist.append(\"C\")\n            else:\n                Nlist.append(\"A\")\n            A = A + add1\n            C = C - add1\n            if A < 0 or C < 0:\n                YesOrNo = False\n                print('No')\n                break\n        \n        if ABC_old == \"BC\":\n            if ABC == \"AB\":\n                add1 = np.sign(C - B + 0.1)\n            else:\n                add1 = np.sign(C - B - 0.1)\n\n            if add1 < 0:\n                Nlist.append(\"C\")\n            else:\n                Nlist.append(\"B\")\n            B = B + add1\n            C = C - add1\n            if B < 0 or C < 0:\n                YesOrNo = False\n                print('No')\n                break\n\n    if YesOrNo:\n        print(\"Yes\")\n        s_Nlist = '\\n'.join(Nlist)\n        print(s_Nlist)\nresolve()", "import sys\nsys.setrecursionlimit(10 ** 5 + 10)\n\nN, A, B, C = [int(i) for i in input().split()]\n\nans = list()\nl = list()\n\nfor n in range(N):\n    l.append(input())\n\ndef dfs(i, a, b, c):\n    if i == N:\n        return True\n\n    ss = l[i]\n    if ss == 'AB':\n        if a == 0 and b == 0:\n            return False\n        if b > 0 and dfs(i + 1, a + 1, b - 1, c):\n            ans.append('A')\n            return True\n        if a > 0 and dfs(i + 1, a - 1, b + 1, c):\n            ans.append('B')\n            return True\n    if ss == 'AC':\n        if a == 0 and c == 0:\n            return False\n        if c > 0 and dfs(i + 1, a + 1, b, c - 1):\n            ans.append('A')\n            return True\n        if a > 0 and dfs(i + 1, a - 1, b, c + 1):\n            ans.append('C')\n            return True\n    if ss == 'BC':\n        if b == 0 and c == 0:\n            return False\n        if c > 0 and dfs(i + 1, a, b + 1, c - 1):\n            ans.append('B')\n            return True\n        if b > 0 and dfs(i + 1, a, b - 1, c + 1):\n            ans.append('C')\n            return True\n    return False\n\ndfs(0, A, B, C)\n\nif len(ans) > 0:\n    print('Yes')\n    for x in reversed(ans):\n        print(x)\nelse:\n    print('No')", "def solve(A, B, C, S):\n    N = len(S)\n    abc = [A, B, C]\n    path = []\n    for si in range(N - 1):\n        i, j = S[si]\n        if abc[i] == abc[j] == 0:\n            print('No')\n            return\n        if abc[i] == 0:\n            path.append('ABC'[i])\n            abc[i] += 1\n            abc[j] -= 1\n            continue\n        elif abc[j] == 0:\n            path.append('ABC'[j])\n            abc[j] += 1\n            abc[i] -= 1\n            continue\n\n        i2, j2 = S[si + 1]\n        if not (abc[j] - 1 == 0 and abc[3 - i - j] == 0 and {i2, j2} == {3-i-j, j}):\n            path.append('ABC'[i])\n            abc[i] += 1\n            abc[j] -= 1\n            continue\n        if not (abc[i] - 1 == 0 and abc[3 - i - j] == 0 and {i2, j2} == {3-i-j, i}):\n            path.append('ABC'[j])\n            abc[j] += 1\n            abc[i] -= 1\n            continue\n\n        if abc[i] <= abc[j]:\n            path.append('ABC'[i])\n            abc[i] += 1\n            abc[j] -=1\n        else:\n            path.append('ABC'[j])\n            abc[j] += 1\n            abc[i] -=1\n\n    i, j = S[N - 1]\n    if abc[i] == abc[j] == 0:\n        print('No')\n        return\n    if abc[i] == 0:\n        path.append('ABC'[i])\n    else:\n        path.append('ABC'[j])\n\n    print('Yes')\n    for c in path:\n        print(c)\n\n\nN, A, B, C = map(int, input().split())\nS = []\nfor _ in range(N):\n    s = input()\n    S.append({'AB': (0, 1), 'AC': (0, 2), 'BC': (1, 2)}[s])\nsolve(A, B, C, S)", "import sys\ninput = sys.stdin.readline\n\nn, a, b, c = map(int, input().split())\nd = {\"A\": a, \"B\": b, \"C\": c}\npl = [input() for _ in range(n)]\nres = []\nfor i in range(n):\n    p = pl[i]\n    if d[p[0]] == d[p[1]] == 0:\n        print(\"No\");return\n    elif d[p[0]] == 0:\n        res.append(p[0])\n        d[p[0]] += 1\n        d[p[1]] -= 1\n    elif d[p[1]] == 0:\n        res.append(p[1])\n        d[p[0]] -= 1\n        d[p[1]] += 1\n    elif i == n - 1:\n        res.append(p[0])\n    elif p[0] in pl[i + 1]:\n        res.append(p[0])\n        d[p[0]] += 1\n        d[p[1]] -= 1\n    else:\n        res.append(p[1])\n        d[p[0]] -= 1\n        d[p[1]] += 1\n\nprint(\"Yes\")\nfor p in res:\n    print(p)", "import sys\n\ndef func(op, val):\n    target = []\n\n    for i, o in enumerate(op):\n        if sum([val[k] for k in o]) == 0:\n            return []\n        k0 = o[0]\n        k1 = o[1]\n        if val[k0] == 0:\n            p,m = k0,k1\n        elif val[k1] == 0:\n            p,m = k1,k0\n        elif i < len(op)-1 and k1 in op[i+1]:\n            p,m = k1,k0\n        else:\n            p,m = k0,k1\n        val[p] += 1\n        val[m] -= 1\n        target.append(p)\n    return target\n\nn,a,b,c = [int(x) for x in input().split()]\noperation = [sys.stdin.readline().strip() for _ in range(n)]\nval = {'A':a, 'B':b, 'C':c}\n\ntarget = func(operation,val)\n\nif len(target) == 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    for t in target:\n        print(t)", "# \u5b9f\u969b\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u3044\u304f\u65b9\u91dd\u3067\u89e3\u304f\nN, A, B, C = list(map(int, input().split()))\nd = {}\nd[\"A\"] = A\nd[\"B\"] = B\nd[\"C\"] = C\nS = [input() for _ in range(N)]\nans = []\nfor i in range(N):\n    s = S[i]\n    if s == \"AB\":\n        if d[\"A\"] > d[\"B\"]:\n            d[\"A\"] -= 1\n            d[\"B\"] += 1\n            ans.append(\"B\")\n        elif d[\"A\"] < d[\"B\"]:\n            d[\"B\"] -= 1\n            d[\"A\"] += 1\n            ans.append(\"A\")\n        else:  # \u540c\u3058\u5834\u5408\n            if d[\"A\"] == d[\"B\"] == 0:\n                print(\"No\")\n                return\n            if N > i+1:\n                if \"A\" in S[i+1]:\n                    d[\"B\"] -= 1\n                    d[\"A\"] += 1\n                    ans.append(\"A\")\n                elif \"B\" in S[i+1]:\n                    d[\"A\"] -= 1\n                    d[\"B\"] += 1\n                    ans.append(\"B\")\n                else:\n                    d[\"A\"] -= 1\n                    d[\"B\"] += 1\n                    ans.append(\"B\")\n            else:\n                if d[\"A\"] > 0:\n                    ans.append(\"A\")\n                elif d[\"B\"] > 0:\n                    ans.append(\"B\")\n\n    if s == \"AC\":\n        if d[\"A\"] > d[\"C\"]:\n            d[\"A\"] -= 1\n            d[\"C\"] += 1\n            ans.append(\"C\")\n        elif d[\"A\"] < d[\"C\"]:\n            d[\"C\"] -= 1\n            d[\"A\"] += 1\n            ans.append(\"A\")\n        else:\n            if d[\"A\"] == d[\"C\"] == 0:\n                print(\"No\")\n                return\n            if N > i+1:\n                if \"A\" in S[i+1]:\n                    d[\"C\"] -= 1\n                    d[\"A\"] += 1\n                    ans.append(\"A\")\n                elif \"C\" in S[i+1]:\n                    d[\"A\"] -= 1\n                    d[\"C\"] += 1\n                    ans.append(\"C\")\n                else:\n                    d[\"A\"] -= 1\n                    d[\"C\"] += 1\n                    ans.append(\"C\")\n            else:\n                if d[\"A\"] > 0:\n                    ans.append(\"A\")\n                elif d[\"C\"] > 0:\n                    ans.append(\"C\")\n\n    if s == \"BC\":\n        if d[\"B\"] > d[\"C\"]:\n            d[\"B\"] -= 1\n            d[\"C\"] += 1\n            ans.append(\"C\")\n        elif d[\"B\"] < d[\"C\"]:\n            d[\"C\"] -= 1\n            d[\"B\"] += 1\n            ans.append(\"B\")\n        else:\n            if d[\"B\"] == d[\"C\"] == 0:\n                print(\"No\")\n                return\n            if N > i+1:\n                if \"B\" in S[i+1]:\n                    d[\"C\"] -= 1\n                    d[\"B\"] += 1\n                    ans.append(\"B\")\n                elif \"C\" in S[i+1]:\n                    d[\"B\"] -= 1\n                    d[\"C\"] += 1\n                    ans.append(\"C\")\n                else:\n                    d[\"B\"] -= 1\n                    d[\"C\"] += 1\n                    ans.append(\"C\")\n            else:\n                if d[\"B\"] > 0:\n                    ans.append(\"B\")\n                elif d[\"C\"] > 0:\n                    ans.append(\"C\")\n\n    if -1 in list(d.values()):\n        print(\"No\")\n        return\n\nprint(\"Yes\")\nfor a in ans:\n    print(a)\n", "n,a,b,c=list(map(int,input().split()))\nif a+b+c==0:\n    print(\"No\")\nelif a+b+c==1:\n    d=[]\n    for i in range(n):\n        s=input()\n        if s==\"AB\":\n            if a+b==0:\n                print(\"No\")\n                return\n            else:\n                if a==0:\n                    d.append(\"A\")\n                else:\n                    d.append(\"B\")\n                a,b=b,a\n        if s==\"BC\":\n            if c+b==0:\n                print(\"No\")\n                return\n            else:\n                if b==0:\n                    d.append(\"B\")\n                else:\n                    d.append(\"C\")\n                c,b=b,c\n        if s==\"AC\":\n            if a+c==0:\n                print(\"No\")\n                return\n            else:\n                if a==0:\n                    d.append(\"A\")\n                else:\n                    d.append(\"C\")\n                a,c=c,a \n    print(\"Yes\")\n    for i in d:\n        print(i)\nelse:\n    d=[]\n    s=[input()for i in range(n)]+[\"AB\"]\n    for i in range(n):\n        if s[i]==\"AB\":\n            if a+b==0:\n                print(\"No\")\n                return\n            if a+b+c==2 and a==1 and b==1 and s[i+1]!=s[i]:\n                if s[i+1]==\"AC\":\n                    d.append(\"A\")\n                    a+=1\n                    b-=1\n                else:\n                    d.append(\"B\")\n                    b+=1\n                    a-=1\n            elif a<b:\n                d.append(\"A\")\n                a+=1\n                b-=1\n            else:\n                d.append(\"B\")\n                b+=1\n                a-=1\n        elif s[i]==\"BC\":\n            if c+b==0:\n                print(\"No\")\n                return\n            if a+b+c==2 and c==1 and b==1 and s[i+1]!=s[i]:\n                if s[i+1]==\"AB\":\n                    d.append(\"B\")\n                    c-=1\n                    b+=1\n                else:\n                    d.append(\"C\")\n                    c+=1\n                    b-=1\n            elif b<c:\n                d.append(\"B\")\n                b+=1\n                c-=1\n            else:\n                d.append(\"C\")\n                c+=1\n                b-=1\n        elif s[i]==\"AC\":\n            if c+a==0:\n                print(\"No\")\n                return\n            if a+b+c==2 and c==1and a==1 and s[i+1]!=s[i]:\n                if s[i+1]==\"AB\":\n                    d.append(\"A\")\n                    a+=1\n                    c-=1\n                else:\n                    d.append(\"C\")\n                    c+=1\n                    a-=1\n            elif a<c:\n                d.append(\"A\")\n                a+=1\n                c-=1\n            else:\n                d.append(\"C\")\n                c+=1\n                a-=1\n    print(\"Yes\")\n    for i in d:\n        print(i)\n", "def main():\n    #input\n    N, A, B, C = map(int, input().split())\n    s = [\"\"] * (N+1)\n    for i in range(N):\n        s[i] = str(input())\n\n    #i(0, 1, ..., N-1)\u56de\u76ee\u306e\u65bd\u884c\u304c\u59cb\u307e\u308b\u524d\u306eA, B, C\u306e\u500b\u6570\u3092\n    #a[i], b[i], c[i]\u3068\u3059\u308b\u3002\n    #i\u56de\u76ee\u306e\u65bd\u884c\u3067\u9078\u3070\u308c\u308b\u5909\u6570\u3092dp[i]\u3068\u3059\u308b\u3002\n    #output\n    dp = [\"\"] * N\n    a, b, c = [0]*(N+1), [0]*(N+1), [0]*(N+1)\n    a[0], b[0], c[0] = A, B, C\n\n    #s[i]\u304cAB\u306e\u6642\n    #   a[i] + b[i] == 0 \u306e\u6642\u7d9a\u884c\u4e0d\u80fd\n    #   a[i] == 1, b[i] == 0 \u306e\u6642 a[i+1] = a[i]-1, b[i+1] = b[i]+1\n    #   a[i] == 0, b[i] == 1 \u306e\u6642 a[i+1] = a[i]+1, b[i+1] = b[i]-1\n    #   a[i] == 1, b[i] == 1 \u306e\u6642\n    #       \u6700\u5f8c\u306e\u30bf\u30fc\u30f3\u3067\u306a\u3051\u308c\u3070s[i+1]\u3092\u898b\u3066\n    #           AB\u306a\u3089\u3070\u3069\u3061\u3089\u3067\u3082\u826f\u3044\n    #           BC\u306a\u3089\u3070a[i+1] = a[i]-1, b[i+1] = b[i]+1\n    #           AC\u306a\u3089\u3070a[i+1] = a[i]+1, b[i+1] = b[i]-1\n    #       \u6700\u5f8c\u306e\u30bf\u30fc\u30f3\u3067\u3042\u308c\u3070\u3069\u3061\u3089\u3067\u3082\u826f\u3044\n    #   a[i] > 1, b[i] > 1\u306e\u6642\n    #       a[i] >= b[i]\u306a\u3089\u3070a[i+1] = a[i]-1, b[i+1] = b[i]+1\n    #       a[i] < b[i]\u306a\u3089\u3070a[i+1] = a[i]+1, b[i+1] = b[i]-1\n\n    for i in range(N):\n        if s[i] == \"AB\":\n            if a[i] + b[i] == 0:\n                print(\"No\")\n                return\n            elif a[i] == 1 and b[i] == 0:\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i]\n                dp[i] = \"B\"\n            elif a[i] == 0 and b[i] == 1:\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i]\n                dp[i] = \"A\"\n            elif a[i] == 0 and b[i] > 1:\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i]\n                dp[i] = \"A\"\n            elif a[i] > 1 and b[i] == 0:\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i]\n                dp[i] = \"B\"\n            elif a[i] == 1 and b[i] == 1:\n                if s[i+1] == \"\":\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i]\n                    dp[i] = \"B\"\n                elif s[i+1] == \"AB\":\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i]\n                    dp[i] = \"A\"\n                elif s[i+1] == \"BC\":\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i]\n                    dp[i] = \"B\"\n                elif s[i+1] == \"AC\":\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i]\n                    dp[i] = \"A\"\n            elif a[i] == 1 and b[i] > 1:\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i]\n                dp[i] = \"A\"\n            elif a[i] > 1 and b[i] == 1:\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i]\n                dp[i] = \"B\"\n            elif a[i] > 1 and b[i] > 1:\n                if a[i] >= b[i]:\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i]\n                    dp[i] = \"B\"\n                elif a[i] < b[i]:\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i]\n                    dp[i] = \"A\"\n    #\u3053\u3053\u307e\u3067\u3067\u4e00\u6bb5\u843d\u3002\n        elif s[i] == \"BC\":\n            if b[i] + c[i] == 0:\n                print(\"No\")\n                return\n            elif b[i] == 1 and c[i] == 0:\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i]\n                dp[i] = \"C\"\n            elif b[i] == 0 and c[i] == 1:\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i]\n                dp[i] = \"B\"\n            elif b[i] == 0 and c[i] > 1:\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i]\n                dp[i] = \"B\"\n            elif b[i] > 1 and c[i] == 0:\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i]\n                dp[i] = \"C\"\n            elif b[i] == 1 and c[i] == 1:\n                if s[i+1] == \"\":\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i]\n                    dp[i] = \"C\"\n                elif s[i+1] == \"BC\":\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i]\n                    dp[i] = \"B\"\n                elif s[i+1] == \"AC\":\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i]\n                    dp[i] = \"C\"\n                elif s[i+1] == \"AB\":\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i]\n                    dp[i] = \"B\"\n            elif b[i] == 1 and c[i] > 1:\n                b[i+1] = b[i] + 1\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i]\n                dp[i] = \"B\"\n            elif b[i] > 1 and c[i] == 1:\n                b[i+1] = b[i] - 1\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i]\n                dp[i] = \"C\"\n            elif b[i] > 1 and c[i] > 1:\n                if b[i] >= c[i]:\n                    b[i+1] = b[i] - 1\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i]\n                    dp[i] = \"C\"\n                elif b[i] < c[i]:\n                    b[i+1] = b[i] + 1\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i]\n                    dp[i] = \"B\"\n    #\u3053\u3053\u307e\u3067\u3067\u3082\u3046\u4e00\u6bb5\u843d\u3002\n        elif s[i] == \"AC\":\n            if c[i] + a[i] == 0:\n                print(\"No\")\n                return\n            elif c[i] == 1 and a[i] == 0:\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i]\n                dp[i] = \"A\"\n            elif c[i] == 0 and a[i] == 1:\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i]\n                dp[i] = \"C\"\n            elif c[i] == 0 and a[i] > 1:\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i]\n                dp[i] = \"C\"\n            elif c[i] > 1 and a[i] == 0:\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i]\n                dp[i] = \"A\"\n            elif c[i] == 1 and a[i] == 1:\n                if s[i+1] == \"\":\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i]\n                    dp[i] = \"A\"\n                elif s[i+1] == \"AC\":\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i]\n                    dp[i] = \"C\"\n                elif s[i+1] == \"AB\":\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i]\n                    dp[i] = \"A\"\n                elif s[i+1] == \"BC\":\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i]\n                    dp[i] = \"C\"\n            elif c[i] == 1 and a[i] > 1:\n                c[i+1] = c[i] + 1\n                a[i+1] = a[i] - 1\n                b[i+1] = b[i]\n                dp[i] = \"C\"\n            elif c[i] > 1 and a[i] == 1:\n                c[i+1] = c[i] - 1\n                a[i+1] = a[i] + 1\n                b[i+1] = b[i]\n                dp[i] = \"A\"\n            elif c[i] > 1 and a[i] > 1:\n                if c[i] >= a[i]:\n                    c[i+1] = c[i] - 1\n                    a[i+1] = a[i] + 1\n                    b[i+1] = b[i]\n                    dp[i] = \"A\"\n                elif c[i] < a[i]:\n                    c[i+1] = c[i] + 1\n                    a[i+1] = a[i] - 1\n                    b[i+1] = b[i]\n                    dp[i] = \"C\"\n\n    print(\"Yes\")\n    for v in dp:\n        print(v)\n\ndef __starting_point():\n    main()\n__starting_point()", "N, A, B, C = list(map(int, input().split()))\nvars = {\"A\": A, \"B\": B, \"C\": C}\nsum_ABC = A+B+C\nS = [input() for _ in range(N)]\nAns = []\nfor s, s_next in zip(S, S[1:]):\n    if vars[s[0]] > vars[s[1]] or (vars[s[0]]==vars[s[1]] and s[1] in s_next):\n        Ans.append(s[1])\n        vars[s[1]] += 1\n        vars[s[0]] -= 1\n    else:# vars[s[0]] < vars[s[1]]:\n        Ans.append(s[0])\n        vars[s[0]] += 1\n        vars[s[1]] -= 1\n    if vars[s[0]] < 0 or vars[s[1]] < 0:\n        print(\"No\")\n        return\ns = S[-1]\nif vars[s[0]] > vars[s[1]]:\n    Ans.append(s[1])\n    vars[s[1]] += 1\n    vars[s[0]] -= 1\nelse:\n    Ans.append(s[0])\n    vars[s[0]] += 1\n    vars[s[1]] -= 1\nif vars[s[0]] < 0 or vars[s[1]] < 0:\n    print(\"No\")\n    return\nprint(\"Yes\")\nprint((\"\\n\".join(Ans)))\n", "import sys\nn, a, b, c = map(int, input().split())\ns = []\nfor _ in range(n):\n    s.append(input())\n    \nans =[]\nfor i in range(n):\n    if s[i] == \"AB\":\n        if a == b == 1 and i < n-1:\n            if s[i+1] == \"AC\":\n                a += 1\n                b -= 1\n                ans.append(\"A\")\n            else:\n                a -= 1\n                b+= 1\n                ans.append(\"B\")\n        else:\n            if min(a, b) == a:\n                a += 1\n                b -= 1\n                ans.append(\"A\")\n            else:\n                a -= 1\n                b+= 1\n                ans.append(\"B\")\n    elif s[i] == \"BC\":\n        if c == b == 1 and i < n-1:\n            if s[i+1] == \"AB\":\n                b += 1\n                c -= 1\n                ans.append(\"B\")\n            else:\n                b -= 1\n                c+= 1\n                ans.append(\"C\")\n        else:\n            if min(c, b) ==b:\n                b += 1\n                c -= 1\n                ans.append(\"B\")\n            else:\n                b -= 1\n                c+= 1\n                ans.append(\"C\")\n    else:\n        if c == a == 1 and i < n-1:\n            if s[i+1] == \"BC\":\n                c += 1\n                a -= 1\n                ans.append(\"C\")\n            else:\n                a += 1\n                c-= 1\n                ans.append(\"A\")\n        else:\n            if min(c, a) == c:\n                c += 1\n                a -= 1\n                ans.append(\"C\")\n            else:\n                c -= 1\n                a += 1\n                ans.append(\"A\")\n    if min(a, b, c) < 0:\n        print(\"No\")\n        return\n\nprint(\"Yes\")\nprint(\"\\n\".join(ans))", "def main():\n    N, A, B, C = list(map(int, input().split(' ')))\n    S = [input() for _ in range(N)]\n    D = {\n        'AB': A + B,\n        'BC': B + C,\n        'AC': A + C\n    }\n    ans = list()\n    for i, s in enumerate(S):\n        if D[s] == 0:\n            print('No')\n            return\n        if s == 'AB':\n            if (D['BC'] < D['AC']) or \\\n                (i < N - 1 and S[i + 1] == 'BC' and D['BC'] == D['AC'] == 1):\n                ans.append('B')\n                D['BC'] += 1\n                D['AC'] -= 1\n            else:\n                ans.append('A')\n                D['BC'] -= 1\n                D['AC'] += 1\n        elif s == 'BC':\n            if (D['AB'] < D['AC']) or \\\n                (i < N - 1 and S[i + 1] == 'AB' and D['AB'] == D['AC'] == 1):\n                ans.append('B')\n                D['AB'] += 1\n                D['AC'] -= 1\n            else:\n                ans.append('C')\n                D['AB'] -= 1\n                D['AC'] += 1\n        else:  # s == 'AC'\n            if (D['AB'] < D['BC']) or \\\n                (i < N - 1 and S[i + 1] == 'AB' and D['AB'] == D['BC'] == 1):\n                ans.append('A')\n                D['AB'] += 1\n                D['BC'] -= 1\n            else:\n                ans.append('C')\n                D['AB'] -= 1\n                D['BC'] += 1\n    print('Yes')\n    for a in ans:\n        print(a)\n\ndef __starting_point():\n    main()\n__starting_point()", "def abc(d, down_text, up_text):\n    d[down_text] -= 1\n    d[up_text] += 1\n\n\ndef main():\n    n, a, b, c = map(int, input().split())\n    ans_list = []\n    dct = {\"A\": a, \"B\": b, \"C\": c}\n\n    abc_list = [input() for _ in range(n)]\n    abc_list.append('AB')\n\n    for i in range(n):\n        # a_txt = input()\n        l_txt = abc_list[i][0]\n        r_txt = abc_list[i][1]\n\n        if dct[l_txt] < dct[r_txt]:\n            abc(dct, r_txt, l_txt)\n            ans_list.append(l_txt)\n\n        elif dct[l_txt] > dct[r_txt]:\n            abc(dct, l_txt, r_txt)\n            ans_list.append(r_txt)\n\n        else:\n            if dct[l_txt] == dct[r_txt] == 0:\n                print('No')\n                break\n            else:\n                if l_txt in abc_list[i + 1]:\n                    abc(dct, r_txt, l_txt)\n                    ans_list.append(l_txt)\n                elif r_txt in abc_list[i + 1]:\n                    abc(dct, l_txt, r_txt)\n                    ans_list.append(r_txt)\n    else:\n        print('Yes')\n        print(*ans_list, sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, A, B, C = map(int, input().split())\nss = [input() for _ in range(N)]\n\nhistory = []\n\ndef move_to_flatten(s):\n    nonlocal A, B, C, history\n    if s == \"AB\":\n        if A >= B:\n            A -= 1\n            B += 1\n            history.append(\"B\")\n        else:\n            B -= 1\n            A += 1\n            history.append(\"A\")\n    elif s == \"BC\":\n        if B >= C:\n            B -= 1\n            C += 1\n            history.append(\"C\")\n        else:\n            C -= 1\n            B += 1\n            history.append(\"B\")\n    elif s == \"AC\":\n        if A >= C:\n            A -= 1\n            C += 1\n            history.append(\"C\")\n        else:\n            C -= 1\n            A += 1\n            history.append(\"A\")\n        \n\nfor i, s in enumerate(ss):\n    zeros = (A, B, C).count(0)\n    if zeros == 0:\n        move_to_flatten(s)\n    elif zeros == 1:\n        if A + B + C == 2:\n            if A == 0:\n                if s == \"BC\":\n                    if i+1 < N and 'B' in ss[i+1]: \n                        C -= 1\n                        B += 1\n                        history.append('B')\n                    else:\n                        B -= 1\n                        C += 1\n                        history.append('C')\n                else:\n                    move_to_flatten(s)\n            elif B == 0:\n                if s == \"AC\":\n                    if i+1 < N and 'C' in ss[i+1]:\n                        A -= 1\n                        C += 1\n                        history.append('C')\n                    else:\n                        C -= 1\n                        A += 1\n                        history.append('A')\n                else:\n                    move_to_flatten(s)\n            elif C == 0:\n                if s == \"AB\":\n                    if i+1 < N and 'A' in ss[i+1]:\n                        B -= 1\n                        A += 1\n                        history.append('A')\n                    else:\n                        A -= 1\n                        B += 1\n                        history.append('B')\n                else:\n                    move_to_flatten(s)    \n        else:\n            move_to_flatten(s)\n    elif zeros == 2:\n        if A != 0 and s == \"BC\":\n            print(\"No\")\n            return\n        elif B != 0 and s == \"AC\":\n            print(\"No\")\n            return\n        elif C != 0 and s == \"AB\":\n            print(\"No\")\n            return\n        move_to_flatten(s)\n    else:\n        print(\"No\")\n        return\n\nprint(\"Yes\")\nprint(*history, sep = '\\n')", "n,a,b,c = list(map(int, input().split()))\nm = {'A':a, 'B':b, 'C':c}\n\nss = [input() for _ in range(n)]\n\n\nans = []\ndef _t(s0, s1):\n    m[s0] = m[s0] + 1\n    m[s1] = m[s1] - 1\n    ans.append(s0)\n\n\nif a+b+c == 0:\n    print('No')\n    return\n\n\nelif a+b+c == 1:\n    for k, v in list(m.items()):\n        if v == 1:\n            o = k\n\n    for s in ss:\n        if o not in s:\n            print('No')\n            return\n        o = s.strip(o)\n        ans.append(o)\n\nelif a+b+c == 2:\n    for i, s in enumerate(ss):\n        if m[s[0]] + m[s[1]] == 0:\n            print('No')\n            return\n        if m[s[0]] > m[s[1]]:\n            _t(s[1], s[0])\n        elif m[s[0]] < m[s[1]]:\n            _t(s[0], s[1])\n        else:\n            if i < len(ss)-1 and s[0] in ss[i+1]:\n                _t(s[0], s[1])\n            else:\n                _t(s[1], s[0])\n\nelse:\n    for s in ss:\n        if m[s[0]] + m[s[1]] == 0:\n            print('No')\n            return\n        if m[s[0]] > m[s[1]]:\n            _t(s[1], s[0])\n        else:\n            _t(s[0], s[1])\n\nprint('Yes')\nfor a in ans:\n    print(a)\n", "def operate(S,A,B,C,N):\n    OP = []\n    for i in range(N):\n        if S[i] == \"AB\":\n            if A == 0 and B == 0:\n                return -1\n            else:\n                if A == 1 and B == 1 and i < N-1:\n                    if S[i+1] == \"BC\":\n                        OP.append(\"B\")\n                        A,B = A-1,B+1\n                    else:\n                        OP.append(\"A\")\n                        A,B = A+1,B-1\n                elif A >= B:\n                    OP.append(\"B\")\n                    A,B = A-1,B+1\n                else:\n                    OP.append(\"A\")\n                    A,B = A+1,B-1\n        if S[i] == \"BC\":\n            if B == 0 and C == 0:\n                return -1\n            else:\n                if B == 1 and C == 1 and i < N-1:\n                    if S[i+1] == \"AB\":\n                        OP.append(\"B\")\n                        B,C = B+1,C-1\n                    else:\n                        OP.append(\"C\")\n                        B,C = B-1,C+1\n                elif B >= C:\n                    OP.append(\"C\")\n                    B,C = B-1,C+1\n                else:\n                    OP.append(\"B\")\n                    B,C = B+1,C-1\n        if S[i] == \"AC\":\n            if A == 0 and C == 0:\n                return -1\n            else:\n                if A == 1 and C == 1 and i < N-1:\n                    if S[i+1] == \"BC\":\n                        OP.append(\"C\")\n                        A,C = A-1,C+1\n                    else:\n                        OP.append(\"A\")\n                        A,C = A+1,C-1\n                elif C >= A:\n                    OP.append(\"A\")\n                    C,A = C-1,A+1\n                else:\n                    OP.append(\"C\")\n                    C,A = C+1,A-1\n    return OP\n\ndef main():\n    N,A,B,C = list(map(int,input().split()))\n    S = [input() for _ in range(N)]\n\n    ans = operate(S,A,B,C,N)\n    if ans != -1:\n        print(\"Yes\")\n        for i in range(N):\n            print((ans[i]))\n    else:\n        print(\"No\")\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def select(x, y, ops, i, z):\n    # true -> x \u3092\u5897\u3084\u3059\n    if not(x == 1 and y == 1 and i < len(ops) - 1):\n        if x < y:\n            return True\n        else:\n            return False\n\n    # x = y = 1, i < len(ops) - 1\n    # \u5148\u8aad\u307f\u3057\u3066 xz \u306a\u3089 x \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 y \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 \u3069\u3063\u3061\u3067\u3082\u3044\u3044\n    op = ops[i]\n    nop = ops[i+1]\n\n    oo = (op, nop)\n    if op == nop:\n        return True\n\n    if oo in [(\"AB\", \"AC\"), (\"BC\", \"AB\"), (\"AC\", \"AB\")]:\n        return True\n\n    return False\n\ndef main():\n    nabc = [int(_x) for _x in input().split()]\n    n = nabc[0]\n    a = nabc[1]\n    b = nabc[2]\n    c = nabc[3]\n\n    ops = []\n    for i in range(n):\n        ops.append(input())\n\n    result = []\n    for i in range(n):\n        op = ops[i]\n        if op == \"AB\":\n            if select(a, b, ops, i, c):\n                result.append(\"A\")\n                a+=1\n                b-=1\n            else:\n                result.append(\"B\")\n                a-=1\n                b+=1\n        if op == \"AC\":\n            if select(a, c, ops, i, b):\n                result.append(\"A\")\n                a+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                a-=1\n                c+=1\n        if op == \"BC\":\n            if select(b, c, ops, i, a):\n                result.append(\"B\")\n                b+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                b-=1\n                c+=1                \n        if a <0 or b<0 or c<0:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n    for r in result:\n        print(r)\n\nmain()\n\n", "n, a, b, c = list(map(int, input().split()))\ns = [list(input()) for _ in range(n)]\ns.append([\"A\", \"B\"])\nd = {\"A\": a, \"B\": b, \"C\": c}\nans = []\n\ndef calc(add, sub):\n    d[add] += 1\n    d[sub] -= 1\n    ans.append(add)\n\nfor i, [j, k] in enumerate(s):\n    if i == n:\n        print('Yes')\n        print(('\\n'.join(ans)))\n        break\n    if d[j] == 0 and d[k] == 0:\n        print(\"No\")\n        break\n    elif j == \"A\" and k == \"B\":\n        \n        if d[j] < d[k]:\n            calc(j, k)\n        elif d[j] > d[k]:\n            calc(k, j)\n        else:\n            if s[i + 1][0] == \"A\":\n                calc(j, k)\n            else:\n                calc(k, j)\n    elif j == \"A\" and k == \"C\":\n\n        if d[j] < d[k]:\n            calc(j, k)\n        elif d[j] > d[k]:\n            calc(k, j)\n        else:\n            if s[i + 1][0] == \"A\":\n                calc(j, k)\n            else:\n                calc(k, j)\n    elif j == \"B\" and k == \"C\":\n\n        if d[j] < d[k]:\n            calc(j, k)\n        elif d[j] > d[k]:\n            calc(k, j)\n        else:\n            if s[i + 1][0] == \"A\" and s[i + 1][1] == \"C\":\n                calc(k, j)\n            else:\n                calc(j, k)\n    \n", "import sys\nreadline = sys.stdin.readline\n\nN,A,B,C = list(map(int,readline().split()))\n\nval = [A,B,C]\n# 0,0\u3092\u4f5c\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n# \u57fa\u672c\u7684\u306b\u306f\u5c0f\u3055\u3044\u307b\u3046\u306b1\u3092\u8db3\u3059\n# \u4e21\u65b9\u3068\u30821\u306e\u5834\u5408\u306f\u3001\u6b21\u306e\u64cd\u4f5c\u3067\u9078\u3070\u308c\u308b\u307b\u3046\u306b1\u3092\u8db3\u3059\n# \u4e21\u65b9\u3068\u3082\u6b21\u306e\u64cd\u4f5c\u3067\u9078\u3070\u308c\u308b\u3068\u304d\u306f\u3069\u3061\u3089\u306b\u8db3\u3057\u3066\u3082\u3088\u3044\n\nS = [readline().rstrip() for i in range(N)]\nans = []\n\ndef get_ind(s):\n  res = []\n  for c in s:\n    if c == \"A\":\n      res.append(0)\n    elif c == \"B\":\n      res.append(1)\n    elif c == \"C\":\n      res.append(2)\n  return res\n\ndef get_alpha(x):\n  return \"ABC\"[x]\n\nfor i in range(N):\n  ind_x,ind_y = get_ind(S[i])\n  if val[ind_x] == 0 and val[ind_y] == 0:\n    print(\"No\")\n    return\n  if val[ind_x] < val[ind_y]:\n    ans += [get_alpha(ind_x)]\n    val[ind_x] += 1\n    val[ind_y] -= 1\n  elif val[ind_x] > val[ind_y]:\n    ans += [get_alpha(ind_y)]\n    val[ind_y] += 1\n    val[ind_x] -= 1\n  else:\n    if i + 1 < N and get_alpha(ind_x) in S[i + 1]:\n      ans += [get_alpha(ind_x)]\n      val[ind_x] += 1\n      val[ind_y] -= 1\n    else:\n      ans += [get_alpha(ind_y)]\n      val[ind_y] += 1\n      val[ind_x] -= 1\n      \nprint(\"Yes\")\nfor a in ans:\n  print(a)\n", "def put(ret, val):\n    if val == 0:\n        ret.append('A')\n    elif val == 1:\n        ret.append('B')\n    else:\n        ret.append('C')\n\n\nn, a, b, c = list(map(int, input().split()))\n\ns = []\n\nfor i in range(n):\n    tmp = input()\n    if tmp == 'AB':\n        val = 0\n    elif tmp == 'BC':\n        val = 1\n    else:\n        val = 2\n    s.append(val)\n\nret = []\nif a + b + c == 0:\n    print('No')\n    return\nelif a + b + c == 1:\n    t = []\n    t.append(a)\n    t.append(b)\n    t.append(c)\n    for i, item in enumerate(s):\n        if t[item] == 1:\n            t[item] = 0\n            t[(item+1) % 3] = 1\n            put(ret, (item+1) % 3)\n        elif t[(item+1) % 3] == 1:\n            t[item] = 1\n            t[(item+1) % 3] = 0\n            put(ret, item)\n        else:\n            print('No')\n            return\nelif a + b + c == 2:\n    t = []\n    t.append(a)\n    t.append(b)\n    t.append(c)\n    for i, item in enumerate(s):\n        if t[item] == 0 and t[(item+1) % 3] == 0:\n            print('No')\n            return\n        if t[item] > t[(item+1) % 3]:\n            t[item] -= 1\n            t[(item+1) % 3] += 1\n            put(ret, (item+1) % 3)\n        elif t[item] < t[(item+1) % 3]:\n            t[item] += 1\n            t[(item+1) % 3] -= 1\n            put(ret, item)\n        elif t[item] == 0:\n            print('No')\n            return\n        elif t[item] == 2:\n            t[item] -= 1\n            t[(item+1) % 3] += 1\n            put(ret, (item+1) % 3)\n        else:\n            if len(s) > i + 1:\n                if s[i+1] == (item + 1) % 3:\n                    t[item] -= 1\n                    t[(item+1) % 3] += 1\n                    put(ret, (item+1) % 3)\n                else:\n                    t[item] += 1\n                    t[(item+1) % 3] -= 1\n                    put(ret, item)\n            else:\n                put(ret, item)\n\nelse:\n    t = []\n    t.append(a)\n    t.append(b)\n    t.append(c)\n    for i, item in enumerate(s):\n        if t[item] == 0 and t[(item+1) % 3] == 0:\n            print('No')\n            return\n        if t[item] > t[(item+1) % 3]:\n            t[item] -= 1\n            t[(item+1) % 3] += 1\n            put(ret, (item+1) % 3)\n        else:\n            t[item] += 1\n            t[(item+1) % 3] -= 1\n            put(ret, item)\n\nprint('Yes')\nfor item in ret:\n    print(item)\n", "n,a,b,c=map(int,input().split())\ns=[input()for _ in range(n)]\nif (a+b+c)==0:\n  print(\"No\")\nif (a+b+c)==1 or (a+b+c)>=3:\n  ans=[]\n  for i in s:\n    if i==\"AB\":\n      if a<b:ans.append(\"A\");a+=1;b+=-1;c+=0\n      else:ans.append(\"B\");a+=-1;b+=1;c+=0\n    if i==\"BC\":\n      if b<c:ans.append(\"B\");a+=0;b+=1;c+=-1\n      else:ans.append(\"C\");a+=0;b+=-1;c+=1\n    if i==\"AC\":\n      if a<c:ans.append(\"A\");a+=1;b+=0;c+=-1\n      else:ans.append(\"C\");a+=-1;b+=0;c+=1\n    if min(a,b,c)<0:\n      print(\"No\");return\n  print(\"Yes\")\n  for i in ans:print(i)\nif (a+b+c)==2:\n  ans=[]\n  for i in range(n-1):\n    if s[i]==\"AB\":\n      if a==b:\n        if s[i+1]==\"AC\":ans.append(\"A\");a+=1;b+=-1;c+=0\n        else:ans.append(\"B\");a+=-1;b+=1;c+=0\n      elif a<b:ans.append(\"A\");a+=1;b+=-1;c+=0\n      else:ans.append(\"B\");a+=-1;b+=1;c+=0\n    if s[i]==\"BC\":\n      if b==c:\n        if s[i+1]==\"AC\":ans.append(\"C\");a+=0;b+=-1;c+=1\n        else:ans.append(\"B\");a+=0;b+=1;c+=-1\n      elif b<c:ans.append(\"B\");a+=0;b+=1;c+=-1\n      else:ans.append(\"C\");a+=0;b+=-1;c+=1\n    if s[i]==\"AC\":\n      if a==c:\n        if s[i+1]==\"BC\":ans.append(\"C\");a+=-1;b+=0;c+=1\n        else:ans.append(\"A\");a+=1;b+=0;c+=-1\n      elif a<c:ans.append(\"A\");a+=1;b+=0;c+=-1\n      else:ans.append(\"C\");a+=-1;b+=0;c+=1\n    if min(a,b,c)<0:\n      print(\"No\");return\n  for i in s[n-1:]:\n    if i==\"AB\":\n      if a<b:ans.append(\"A\");a+=1;b+=-1;c+=0\n      else:ans.append(\"B\");a+=-1;b+=1;c+=0\n    if i==\"BC\":\n      if b<c:ans.append(\"B\");a+=0;b+=1;c+=-1\n      else:ans.append(\"C\");a+=0;b+=-1;c+=1\n    if i==\"AC\":\n      if a<c:ans.append(\"A\");a+=1;b+=0;c+=-1\n      else:ans.append(\"C\");a+=-1;b+=0;c+=1\n    if min(a,b,c)<0:\n      print(\"No\");return\n  print(\"Yes\")\n  for i in ans:print(i)", "n,a,b,c=map(int,input().split())\ns=list(input() for i in range(n))+[\"XX\"]\nans=[\"Yes\"]\n\nif a+b+c==0:\n  del ans[:]\n  ans+=[\"No\"]\n  \nif a+b+c==1:\n  for j in range(n):\n    \n    if s[j]==\"AB\":\n      if c==1:\n        del ans[:]\n        ans+=[\"No\"]\n        break        \n      elif a==1:\n        a-=1\n        b+=1\n        ans+=[\"B\"]\n      elif b==1:\n        a+=1\n        b-=1\n        ans+=[\"A\"]\n\n    if s[j]==\"AC\":\n      if b==1:\n        del ans[:]\n        ans+=[\"No\"]\n        break       \n      elif a==1:\n        a-=1\n        c+=1\n        ans+=[\"C\"]\n      elif c==1:\n        a+=1\n        c-=1\n        ans+=[\"A\"] \n\n    if s[j]==\"BC\":\n      if a==1:\n        del ans[:]\n        ans+=[\"No\"]\n        break\n      elif b==1:\n        b-=1\n        c+=1\n        ans+=\"C\"\n      elif c==1:\n        b+=1\n        c-=1\n        ans+=[\"B\"]  \n\nif a+b+c==2:\n  for j in range(n):\n    if s[j]==\"AB\":\n      if a==2:\n        a-=1\n        b+=1\n        ans+=[\"B\"]\n      elif b==2:\n        a+=1\n        b-=1\n        ans+=[\"A\"]\n      elif c==2:\n        del ans[:]\n        ans+=[\"No\"]\n        break     \n      elif (a==1 and b==1) and (s[j+1]==\"AB\" or s[j+1]==\"AC\" or s[j+1]==\"XX\"):\n        a+=1\n        b-=1\n        ans+=[\"A\"]\n      elif (a==1 and b==1) and (s[j+1]==\"BC\"):\n        a-=1\n        b+=1\n        ans+=[\"B\"]\n      elif a==1 and c==1:\n        a-=1\n        b+=1\n        ans+=[\"B\"]\n      elif b==1 and c==1:\n        a+=1\n        b-=1\n        ans+=[\"A\"]\n    \n    if s[j]==\"AC\":\n      if a==2:\n        a-=1\n        c+=1\n        ans+=[\"C\"]\n      elif c==2:\n        a+=1\n        c-=1\n        ans+=[\"A\"] \n      elif b==2:\n        del ans[:]\n        ans+=[\"No\"]\n        break     \n      elif (a==1 and c==1) and (s[j+1]==\"AB\" or s[j+1]==\"AC\" or s[j+1]==\"XX\"):\n        a+=1\n        c-=1\n        ans+=[\"A\"]\n      elif (a==1 and c==1) and (s[j+1]==\"BC\"):\n        a-=1\n        c+=1\n        ans+=[\"C\"]\n      elif a==1 and b==1:\n        a-=1\n        c+=1\n        ans+=[\"C\"]\n      elif b==1 and c==1:\n        a+=1\n        c-=1\n        ans+=[\"A\"]\n\n    if s[j]==\"BC\":\n      if c==2:\n        c-=1\n        b+=1\n        ans+=[\"B\"]\n      elif b==2:\n        c+=1\n        b-=1\n        ans+=[\"C\"] \n      elif a==2:\n        del ans[:]\n        ans+=[\"No\"]\n        break     \n      elif (c==1 and b==1) and (s[j+1]==\"AB\" or s[j+1]==\"BC\" or s[j+1]==\"XX\"):\n        b+=1\n        c-=1\n        ans+=[\"B\"]\n      elif (c==1 and b==1) and (s[j+1]==\"AC\"):\n        b-=1\n        c+=1\n        ans+=[\"C\"]\n      elif a==1 and c==1:\n        c-=1\n        b+=1\n        ans+=[\"B\"]\n      elif b==1 and a==1:\n        c+=1\n        b-=1\n        ans+=[\"C\"]        \n\nif a+b+c>=3:\n  if s[0]==\"AB\" and a+b==0 or s[0]==\"AC\" and a+c==0 or s[0]==\"BC\" and b+c==0:\n    del ans[:]\n    ans+=[\"No\"]\n  \n  else:\n    for j in range(n):\n      if s[j]==\"AB\":\n        if a>b:\n          a-=1\n          b+=1\n          ans+=[\"B\"]\n        elif a<=b:\n          a+=1\n          b-=1\n          ans+=[\"A\"]\n        \n      if s[j]==\"AC\":\n        if a>c:\n          a-=1\n          c+=1\n          ans+=[\"C\"]\n        elif a<=c:\n          a+=1\n          c-=1\n          ans+=[\"A\"]     \n\n      if s[j]==\"BC\":\n        if b>c:\n          b-=1\n          c+=1\n          ans+=[\"C\"]\n        elif b<=c:\n          b+=1\n          c-=1\n          ans+=[\"B\"]\n\nfor an in ans:\n  print(an)", "N,A,B,C=map(int,input().split())\n\nif A+B+C==0:\n  print(\"No\")\nelif A+B+C==1:\n  ans_list=[]\n  for _ in range(N):\n    com=input()\n    if com==\"AB\":\n      if A==1:\n        A-=1\n        B+=1\n        ans_list.append(\"B\")\n      elif B==1:\n        A+=1\n        B-=1\n        ans_list.append(\"A\")\n      else:\n        print(\"No\")\n        break\n    elif com==\"AC\":\n      if A==1:\n        A-=1\n        C+=1\n        ans_list.append(\"C\")\n      elif C==1:\n        A+=1\n        C-=1\n        ans_list.append(\"A\")\n      else:\n        print(\"No\")\n        break\n    elif com==\"BC\":\n      if B==1:\n        B-=1\n        C+=1\n        ans_list.append(\"C\")\n      elif C==1:\n        B+=1\n        C-=1\n        ans_list.append(\"B\")\n      else:\n        print(\"No\")\n        break\n  else:\n    print(\"Yes\")\n    for ans in ans_list:\n      print(ans)\nelse:\n  com_list=[]\n  for i in range(N):\n    com_list.append(input())\n  \n  for i in range(N):\n    com=com_list[i]\n    if com==\"AB\":\n      if i==0 and A==0 and B==0:\n        print(\"No\")\n        break\n      elif i==0:\n        print(\"Yes\")\n      \n      if i<N-1 and A+B+C==2 and A==1 and B==1 and com!=com_list[i+1]:\n        if com_list[i+1]==\"AC\":\n          A+=1\n          B-=1\n          print(\"A\")\n        elif com_list[i+1]==\"BC\":\n          A-=1\n          B+=1\n          print(\"B\")\n      else:\n        if A>=B:\n          A-=1\n          B+=1\n          print(\"B\")\n        else:\n          A+=1\n          B-=1\n          print(\"A\")\n    elif com==\"AC\":\n      if i==0 and A==0 and C==0:\n        print(\"No\")\n        break\n      elif i==0:\n        print(\"Yes\")\n      \n      if i<N-1 and A+B+C==2 and A==1 and C==1 and com!=com_list[i+1]:\n        if com_list[i+1]==\"AB\":\n          A+=1\n          C-=1\n          print(\"A\")\n        elif com_list[i+1]==\"BC\":\n          A-=1\n          C+=1\n          print(\"C\")\n      else:\n        if A>=C:\n          A-=1\n          C+=1\n          print(\"C\")\n        else:\n          A+=1\n          C-=1\n          print(\"A\")\n    elif com==\"BC\":\n      if i==0 and B==0 and C==0:\n        print(\"No\")\n        break\n      elif i==0:\n        print(\"Yes\")\n      \n      if i<N-1 and A+B+C==2 and B==1 and C==1 and com!=com_list[i+1]:\n        if com_list[i+1]==\"AB\":\n          B+=1\n          C-=1\n          print(\"B\")\n        elif com_list[i+1]==\"AC\":\n          B-=1\n          C+=1\n          print(\"C\")\n      else:\n        if B>=C:\n          B-=1\n          C+=1\n          print(\"C\")\n        else:\n          B+=1\n          C-=1\n          print(\"B\")", "N, *v = map(int, input().split())\nS = [input() for _ in range(N)]\nZ = []\nfor i, s, t in zip(range(N), S, S[1:]+[\"ZZ\"]):\n    a, b, c = v\n    if s == \"AB\":\n        if a == b == 0:\n            print(\"No\");return\n        elif a < b:\n            v[0] += 1\n            v[1] -= 1\n            Z.append(\"A\")\n        elif a > b:\n            v[0] -= 1\n            v[1] += 1\n            Z.append(\"B\") \n        elif t == \"AC\":\n            v[0] += 1\n            v[1] -= 1\n            Z.append(\"A\")\n        else:\n            v[0] -= 1\n            v[1] += 1\n            Z.append(\"B\")\n    elif s == \"AC\":\n        if a == c == 0:\n            print(\"No\");return\n        elif a < c:\n            v[0] += 1\n            v[2] -= 1\n            Z.append(\"A\")\n        elif a > c:\n            v[0] -= 1\n            v[2] += 1\n            Z.append(\"C\") \n        elif t == \"AB\":\n            v[0] += 1\n            v[2] -= 1\n            Z.append(\"A\")\n        else:\n            v[0] -= 1\n            v[2] += 1\n            Z.append(\"C\")\n    else:\n        if b == c == 0:\n            print(\"No\");return\n        elif b < c:\n            v[1] += 1\n            v[2] -= 1\n            Z.append(\"B\")\n        elif b > c:\n            v[1] -= 1\n            v[2] += 1\n            Z.append(\"C\") \n        elif t == \"AB\":\n            v[1] += 1\n            v[2] -= 1\n            Z.append(\"B\")\n        else:\n            v[1] -= 1\n            v[2] += 1\n            Z.append(\"C\")\n\nprint(\"Yes\")\nfor z in Z: print(z)", "import sys\nreadline = sys.stdin.readline\n\n\ndef solve(writer):\n    N, A, B, C = list(map(int, input().split()))\n\n    variables = {\n        'A': A,\n        'B': B,\n        'C': C\n    }\n\n    queries = (list(readline().strip()) for _ in range(N))\n\n    next_q = next(queries)\n\n    for i in range(N):\n\n        let_1, let_2 = next_q\n        next_q = next(queries) if i != N - 1 else ()\n\n        if variables[let_1] == variables[let_2] == 0:\n            return False\n\n        if variables[let_1] == variables[let_2] == 1 and let_2 in next_q \\\n                or variables[let_1] > variables[let_2]:\n            let_1, let_2 = let_2, let_1\n\n        variables[let_1] += 1\n        variables[let_2] -= 1\n\n        writer.append(let_1)\n\n    return True\n\n\ndef main():\n    writer = ['Yes']\n    ok = solve(writer)\n    if ok:\n        for w in writer:\n            print(w)\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nsys.setrecursionlimit(10 ** 7)\n\n# ----------\n\nINF = float(\"inf\")\nMOD = 10 ** 9 + 7\n\nN, A, B, C = list(map(int, input().split()))\nnum = [A, B, C]\nS = []\nfor i in range(N):\n    S.append(input().strip())\nS.append('AB')\n\nans = []\nfor i in range(N):\n    s = S[i]\n    s1 = s[0]\n    s2 = s[1]\n    n1 = num[\"ABC\".index(s1)]\n    n2 = num[\"ABC\".index(s2)]\n    if n1 == n2 == 0:\n        print(\"No\")\n        return\n    if n1 == 0:\n        num[\"ABC\".index(s1)] += 1\n        num[\"ABC\".index(s2)] -= 1\n        ans.append(s1)\n        continue\n    if n2 == 0:\n        num[\"ABC\".index(s1)] -= 1\n        num[\"ABC\".index(s2)] += 1\n        ans.append(s2)\n        continue\n    if s1 in S[i + 1]:\n        num[\"ABC\".index(s1)] += 1\n        num[\"ABC\".index(s2)] -= 1\n        ans.append(s1)\n    else:\n        num[\"ABC\".index(s1)] -= 1\n        num[\"ABC\".index(s2)] += 1\n        ans.append(s2)\n\nprint('Yes')\nfor a in ans:\n    print(a)\n", "def main():\n    N, A, B, C = list(map(int, input().split()))\n    S = [{'AB':(0, 1), 'BC': (1, 2), 'AC': (0, 2)}[input()] for _ in range(N)]\n    ABC = [A, B, C]\n    RR = ['A', 'B', 'C']\n    R = []\n    for i, (s1, s2) in enumerate(S):\n        if ABC[s1] == 0 and ABC[s2] == 0:\n            return False, None\n        if ABC[s1] < ABC[s2]:\n            s1, s2 = s2, s1\n        if A + B + C == 2 and ABC[s1] == 1 and ABC[s2] == 1 and i < N - 1 and S[i] != S[i + 1]:\n            s1n, s2n = S[i + 1]\n            if s1 in [s1n, s2n]:\n                s1, s2 = s2, s1\n        ABC[s1] -= 1\n        ABC[s2] += 1\n        R.append(RR[s2])\n    return True, R\n\na, s = main()\nif not a:\n    print('No')\nelse:\n    print('Yes')\n    print(('\\n'.join(s)))\n", "N,A,B,C=list(map(int,input().split()))\n\nS=['']*N\nfor i in range(N):\n    S[i]=input()\n\nresult=[]\nkekka=True\n\n\nfor i in range(N):\n    if (A==0 and B==0 and S[i]=='AB') or (C==0 and B==0 and S[i]=='BC') or (A==0 and C==0 and S[i]=='AC'):\n        kekka=False\n        break\n    else:\n        if S[i]=='AB':\n            if A==0:\n                A += 1\n                B -= 1\n                result.append('A')\n            elif B==0:\n                A -=1\n                B +=1\n                result.append('B')\n            elif A==1 and B==1 and C==0 and i !=N-1:\n                if S[i+1]=='AC':\n                    A += 1\n                    B -= 1\n                    result.append('A')\n                else:\n                    A -=1\n                    B +=1\n                    result.append('B')\n            elif A>B:\n                A -=1\n                B +=1\n                result.append('B')\n            else:\n                A +=1\n                B -=1\n                result.append('A')\n        elif S[i]=='AC':\n            if A==0:\n                A += 1\n                C -= 1\n                result.append('A')\n            elif C==0:\n                A -=1\n                C +=1\n                result.append('C')\n            elif A==1 and C==1 and B==0 and i != N-1:\n                if S[i+1]=='AB':\n                    A += 1\n                    C -= 1\n                    result.append('A')\n                else:\n                    A -=1\n                    C +=1\n                    result.append('C')\n            elif A>C:\n                A -=1\n                C +=1\n                result.append('C')\n            else:\n                A +=1\n                C -=1\n                result.append('A') \n        else:\n            if B==0:\n                B += 1\n                C -= 1\n                result.append('B')\n            elif C==0:\n                B -=1\n                C +=1\n                result.append('C')\n            elif B==1 and C==1 and A==0 and i != N-1:\n                if S[i+1]=='AB':\n                    B += 1\n                    C -= 1\n                    result.append('B')\n                else:\n                    B -=1\n                    C +=1\n                    result.append('C')\n            elif B>C:\n                B -=1\n                C +=1\n                result.append('C')\n            else:\n                B +=1\n                C -=1\n                result.append('B')\n\nif kekka ==False:\n    print('No')\nelse:\n    print('Yes')\n    for i in range(N):\n        print((result[i]))            \n\n\n", "n,A,B,C=map(int,input().split())\nr=[A,B,C]\ng=list()\nfor i in range(n):\n    g.append(str(input()))\n    \ndef re(string):\n    if string==\"AB\":\n        return(0,1)\n    elif string==\"AC\":\n        return(0,2)\n    else:\n        return(1,2)\n    \ndef al(num):\n    if num==0:\n        return \"A\"\n    elif num==1:\n        return \"B\"\n    else:\n        return \"C\"\n    \nflag=0\nresult=list()\nfor i in range(n):\n    a,b=re(g[i])\n    if r[a]==0 and r[b]==0:\n        print(\"No\")\n        flag=1\n        break\n    elif r[a]>r[b]:\n        r[a]-=1\n        r[b]+=1\n        result.append(al(b))\n    elif r[a]<r[b]:\n        r[a]+=1\n        r[b]-=1\n        result.append(al(a))\n    else:\n        if i+1==n:\n            r[a]+=1\n            r[b]-=1\n            result.append(al(a))\n            break\n        x,y=re(g[i+1])\n        if (x,y)==(a,b):\n            r[a]+=1\n            r[b]-=1\n            result.append(al(a))\n        else:\n            if x in (a,b):\n                r[x]+=2\n                r[a]-=1;r[b]-=1\n                result.append(al(x))\n            else:\n                r[y]+=2\n                r[a]-=1;r[b]-=1\n                result.append(al(y))\n        \nif flag==0:\n    print(\"Yes\")\n    for item in result:\n        print(item)", "3\n# -*- coding: utf-8 -*-\ndef check(s):\n    if dict_x[s[0]] == 0 and dict_x[s[1]] == 0:\n        return \"NOT\"\n    elif  dict_x[s[0]] > 0 and dict_x[s[1]] == 0:\n        return s[1]\n    elif  dict_x[s[0]] == 0 and dict_x[s[1]] > 0:\n        return s[0]\n    elif dict_x[s[0]] == 1 and dict_x[s[1]] == 1:\n        return \"EVEN\"\n    else:\n        if dict_x[s[0]] > dict_x[s[1]]:\n            return s[1]\n        else:\n            return s[0] \ndef update(s, mozi):\n    if s[1] == mozi:\n        dict_x[s[0]] -= 1\n        dict_x[s[1]] += 1\n    else:\n        dict_x[s[0]] += 1\n        dict_x[s[1]] -= 1\n\nn, a, b, c = map(int, input().split())\ndict_x = {\"A\": a, \"B\": b, \"C\": c}\ns_list = []\nans_list = []\nflag = 1\nfor i in range(0, n):\n    s = input()\n    s_list.append(s)\nif a + b + c == 0:\n    flag = 0\nelif a + b + c == 1:\n    for s in s_list:\n        x = check(s)\n        if x == \"NOT\":\n            flag = 0\n            break\n        else:\n            ans_list.append(x)\n            update(s, x)\nelif a + b + c == 2:\n    i = 0\n    for s in s_list:\n        x = check(s)\n        if x == \"NOT\":\n            flag = 0\n            break\n        elif x == \"EVEN\":\n            if i == len(s_list) - 1:\n                ans_list.append(s[0])\n                update(s, x)\n            elif s == s_list[i + 1]:\n                ans_list.append(s[0])\n                update(s, x)\n            else:\n                if s[0] in s_list[i + 1]:\n                    ans_list.append(s[0])\n                    update(s, s[0])\n                else:\n                    ans_list.append(s[1])\n                    update(s, s[1])\n        else:\n            ans_list.append(x)\n            update(s, x)\n        i += 1\nelse:\n    for s in s_list:\n        x = check(s)\n        if x == \"NOT\":\n            flag = 0\n            break\n        elif x == \"EVEN\":\n            ans_list.append(s[0])\n            update(s, s[0])\n        else:\n            ans_list.append(x)\n            update(s, x)\n\nif flag == 1:\n    print(\"Yes\")\n    for ans in ans_list:\n        print(ans)\nelse:\n    print(\"No\")", "import sys\nreadline = sys.stdin.readline\n\n\ndef solve(writer):\n    N, A, B, C = list(map(int, input().split()))\n\n    variables = {\n        'A': A,\n        'B': B,\n        'C': C\n    }\n\n    queries = (list(readline().strip()) for _ in range(N))\n\n    next_q = next(queries)\n\n    for i in range(N):\n\n        let_1, let_2 = next_q\n        next_q = next(queries) if i < N - 1 else ()\n\n        if variables[let_1] == variables[let_2] == 0:\n            return False\n\n        if variables[let_1] == variables[let_2] == 1 and let_2 in next_q \\\n                or variables[let_1] > variables[let_2]:\n            let_1, let_2 = let_2, let_1\n\n        variables[let_1] += 1\n        variables[let_2] -= 1\n\n        writer.append(let_1)\n\n    return True\n\n\ndef main():\n    \n    writer = list()\n    ok = solve(writer)\n    \n    if ok:\n        print('Yes')\n        for w in writer:\n            print(w)\n    else:\n        print('No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\n\ndef xxx(val, op):\n    target = []\n    for i, o in enumerate(op):\n        if sum([val[k] for k in o]) == 0:\n            return []\n        k0 = o[0]\n        k1 = o[1]\n        if val[k0] == 0:\n            p, m = k0, k1\n        elif val[k1] == 0:\n            p, m = k1, k0\n        elif i < len(op) - 1 and k1 in op[i+1]:\n            p, m = k1, k0\n        else:\n            p, m = k0, k1\n        val[p] += 1\n        val[m] -= 1\n        target.append(p)\n    return target\n\n\nn, a, b, c = [int(x) for x in input().split()]\nop = [sys.stdin.readline().strip() for _ in range(n)]\nval = {\"A\": a, \"B\": b, \"C\": c}\n\ntarget = xxx(val, op)\nif len(target) == 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    for t in target:\n        print(t)\n", "N, A, B, C = map(int, input().split())\ndt = {'AB': (0, 1), 'AC': (0, 2), 'BC': (1, 2)}\nQ = [dt[input()] for _ in range(N)]\n\n\nclass Game:\n    def __init__(self, ABC):\n        self.ABC = ABC\n        self.ds = {0: 'A', 1: 'B', 2: 'C'}\n        self.ans = []\n\n    def add_q0(self, q0, q1):\n        self.ans.append(self.ds[q0])\n        self.ABC[q0] += 1\n        self.ABC[q1] -= 1\n\n    def add_q1(self, q0, q1):\n        self.ans.append(self.ds[q1])\n        self.ABC[q0] -= 1\n        self.ABC[q1] += 1\n\n\ndef solve1(ABC):\n    G = Game(ABC)\n    for q0, q1 in Q:\n        if G.ABC[q0] == G.ABC[q1] == 0:\n            print('No')\n            return\n        elif G.ABC[q0] == 0:\n            G.add_q0(q0, q1)\n        else:\n            G.add_q1(q0, q1)\n    print('Yes')\n    print(*G.ans, sep='\\n')\n\n\ndef solve2(ABC):\n    G = Game(ABC)\n    for i, (q0, q1) in enumerate(Q):\n        if G.ABC[q0] == G.ABC[q1] == 0:\n            print('No')\n            return\n        elif G.ABC[q0] == 0:\n            G.add_q0(q0, q1)\n        elif G.ABC[q1] == 0:\n            G.add_q1(q0, q1)\n        elif G.ABC[q0] == G.ABC[q1] == 1 and i < N - 1:\n            if q0 in Q[i + 1]:\n                G.add_q0(q0, q1)\n            else:\n                G.add_q1(q0, q1)\n        else:\n            # \u4f59\u88d5\u306e\u7121\u3044\u65b9\u306b\u8db3\u3057\u3066\u304a\u304f\n            if G.ABC[q0] <= G.ABC[q1]:\n                G.add_q0(q0, q1)\n            else:\n                G.add_q1(q0, q1)\n    print('Yes')\n    print(*G.ans, sep='\\n')\n\n\ndef solve3(ABC):\n    G = Game(ABC)\n    for q0, q1 in Q:\n        if G.ABC[q0] == G.ABC[q1] == 0:\n            print('No')\n            return\n        elif G.ABC[q0] == 0:\n            G.add_q0(q0, q1)\n        elif G.ABC[q1] == 0:\n            G.add_q1(q0, q1)\n        else:\n            # \u4f59\u88d5\u306e\u7121\u3044\u65b9\u306b\u8db3\u3057\u3066\u304a\u304f\n            if G.ABC[q0] <= G.ABC[q1]:\n                G.add_q0(q0, q1)\n            else:\n                G.add_q1(q0, q1)\n    print('Yes')\n    print(*G.ans, sep='\\n')\n\n\nS = A + B + C\nif S == 0:\n    print('No')\nelif S == 1:\n    solve1([A, B, C])\nelif S == 2:\n    solve2([A, B, C])\nelse:\n    solve3([A, B, C])\n", "import sys\n\ndef str_to_int(ch):\n\tif ch =='A':\n\t\treturn 0\n\tif ch =='B':\n\t\treturn 1\n\tif ch =='C':\n\t\treturn 2\ndef int_to_str(ch):\n\tif ch ==0:\n\t\treturn 'A'\n\tif ch ==1:\n\t\treturn 'B'\n\tif ch ==2:\n\t\treturn 'C'\n\nN, A, B, C = list(map(int, input().split()))\nABC =[0, 0, 0]\nABC[0] = A\nABC[1] = B\nABC[2] = C\n\nops = []\nfor _ in range(N):\n\tl =list(map(str_to_int, list(input())))\n\tops.append(l)\n\nif sum(ABC) == 0:\n\tprint(\"No\")\n\treturn\n\nans = []\nfor idx, op in enumerate(ops):\n\tn0 = ABC[op[0]]\n\tn1 = ABC[op[1]]\n\tif n0 == 0 and n1 == 0:\n\t\tprint(\"No\")\n\t\treturn\n\telif n1 == 0:\n\t\tinc = op[1]\n\t\tdec = op[0]\n\telif n0 == 0:\n\t\tinc = op[0]\n\t\tdec = op[1]\n\telif idx +1 < len(ops) and op[0] in ops[idx+1]:\n\t\tinc = op[0]\n\t\tdec = op[1]\n\telse:\n\t\tinc = op[1]\n\t\tdec = op[0]\n\tans.append(inc)\n\tABC[dec]-=1\n\tABC[inc]+=1\nprint(\"Yes\")\nfor i in map(int_to_str, ans):\n\tprint(i)\nreturn\n\n", "N,*X=map(int,input().split())\nS=[input() for i in range(N)]\nf=1\nd={'AB':(0,1),'AC':(0,2),'BC':(1,2)}\nx='ABC'\na=[]\nfor i in range(N):\n    if X[d[S[i]][0]]==1 and X[d[S[i]][1]]==1 and X.count(0)==1 and i<N-1:\n        if S[i][0] in S[i+1]:\n            X[d[S[i]][0]]+=1\n            X[d[S[i]][1]]-=1\n            a.append(x[d[S[i]][0]])\n        else:\n            X[d[S[i]][0]]-=1\n            X[d[S[i]][1]]+=1\n            a.append(x[d[S[i]][1]])\n    elif X[d[S[i]][0]]<X[d[S[i]][1]]:\n        X[d[S[i]][0]]+=1\n        X[d[S[i]][1]]-=1\n        a.append(x[d[S[i]][0]])\n    else:\n        X[d[S[i]][0]]-=1\n        X[d[S[i]][1]]+=1\n        a.append(x[d[S[i]][1]])\n    if -1 in X:\n        f=0;break\nprint(['No','Yes'][f])\nif f:print(*a,sep='\\n')", "N, A, B, C = list(map(int, input().split()))\nd = {}\nd[\"A\"] = A\nd[\"B\"] = B\nd[\"C\"] = C\nl = [input() for _ in range(N)]\nv = A+B+C\n\ndef solve():\n    res = []\n    if v==0:\n        return []\n    elif v==1:\n        for i in l:\n            a, b = i\n            if d[a]==0 and d[b]==0:\n                return []\n            elif d[a]>d[b]:\n                d[a] -= 1\n                d[b] += 1\n                res.append(b)\n            else:\n                d[a] += 1\n                d[b] -= 1\n                res.append(a)\n    else:\n        a, b = l[0]\n        if d[a]==0 and d[b]==0:\n            return []\n        else:\n            for i, j in enumerate(l):\n                a, b = j\n                if d[a]>d[b]:\n                    d[a] -= 1\n                    d[b] += 1\n                    res.append(b)\n                elif d[a]==d[b]==1 and i+1<N:\n                    e = set(l[i+1])&set([a, b])\n                    if len(e)==1:\n                        f = e.pop()\n                        g = b if f==a else a\n                        d[f] += 1\n                        d[g] -= 1\n                        res.append(f)\n                    else:\n                        d[a] -= 1\n                        d[b] += 1\n                        res.append(b)\n                else:\n                    d[a] += 1\n                    d[b] -= 1\n                    res.append(a)\n    return res\n\n\nr = solve()\nif r:\n    print(\"Yes\")\n    for i in r:\n        print(i)\nelse:\n    print(\"No\")\n", "# input\nN, A, B, C = map(int, input().split())\nS = [input() for _ in range(N)]\n\n# process\nV = {\"A\":A, \"B\":B, \"C\":C}\nS.append(\"XX\")\nop = \"\"\nfor i in range(N):\n    s0, s1 = S[i]\n    if V[s0] + V[s1] == 0:\n        break\n    \n    x, y = s0, s1\n    if V[s1] == 0 or (V[s0] != 0 and s1 in S[i+1]):\n        x, y = s1, s0\n\n    V[x] += 1\n    V[y] -= 1\n    op += x\n\n# output\nif len(op) != N:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n    [print(x) for x in op]\n", "def check(x,y,z,i,ops):\n    if x == 1 and y == 1 and z == 0 and i < len(ops) - 1:        \n        return (ops[i], ops[i+1]) in [(\"AB\", \"AC\"), (\"BC\", \"AB\"), (\"AC\", \"AB\")]\n    return (x <= y)\n\nA=0\nB=1\nC=2\nnabc = [int(_x) for _x in input().split()]\nn = nabc[0]\nabc = nabc[1:]\nops = []\nfor i in range(n):\n    ops.append(input())\n\nresult = []\nfor i in range(n):\n    op = ops[i]\n    if op == \"AB\":\n        (s,t,u) = (A,B,C)\n    elif op == \"BC\":\n        (s,t,u) = (B,C,A)\n    else:\n        (s,t,u) = (A,C,B)\n    if check(abc[s],abc[t],abc[u],i,ops):\n        result.append(s)\n        abc[s] += 1\n        abc[t] -= 1\n    else:\n        result.append(t)\n        abc[s] -= 1\n        abc[t] += 1\n    if abc[s]<0 or abc[t]<0:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n    for r in result:\n        if r==A: print(\"A\")\n        if r==B: print(\"B\")\n        if r==C: print(\"C\")\n", "n,a,b,c=map(int,input().split())\narr=[input() for _ in range(n)]\nans=[]\nfor i in range(n):\n  if arr[i]=='AB':\n    if a==1 and b==1:\n      if i==n-1 or arr[i+1]=='AB' or arr[i+1]=='AC':\n        a+=1\n        b-=1\n        ans.append('A')\n      elif arr[i+1]=='BC':\n        a-=1\n        b+=1\n        ans.append('B')\n    elif a==0 and b==0:\n      print('No')\n      break\n    else:\n      if a>=b:\n        a-=1\n        b+=1\n        ans.append('B')\n      else:\n        a+=1\n        b-=1\n        ans.append('A')\n  elif arr[i]=='AC':\n    if a==1 and c==1:\n      if i==n-1 or arr[i+1]=='AC' or arr[i+1]=='AB':\n        a+=1\n        c-=1\n        ans.append('A')\n      elif arr[i+1]=='BC':\n        a-=1\n        c+=1\n        ans.append('C')\n    elif a==0 and c==0:\n      print('No')\n      break\n    else:\n      if a>=c:\n        a-=1\n        c+=1\n        ans.append('C')\n      else:\n        a+=1\n        c-=1\n        ans.append('A')\n  elif arr[i]=='BC':\n    if b==1 and c==1:\n      if i==n-1 or arr[i+1]=='BC' or arr[i+1]=='AB':\n        b+=1\n        c-=1\n        ans.append('B')\n      elif arr[i+1]=='AC':\n        b-=1\n        c+=1\n        ans.append('C')\n    elif b==0 and c==0:\n      print('No')\n      break\n    else:\n      if b>=c:\n        b-=1\n        c+=1\n        ans.append('C')\n      else:\n        b+=1\n        c-=1\n        ans.append('B')\nelse:\n  print('Yes')\n  for i in range(n):\n    print(ans[i])", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,a,b,c = LI()\n    t = [a,b,c]\n    q = [S() for _ in range(n)] + [\"ABC\"]\n    r = []\n    for qi in range(n):\n        s = q[qi]\n        if s == \"AB\":\n            i = 0\n            j = 1\n        elif s == \"AC\":\n            i = 0\n            j = 2\n        else:\n            i = 1\n            j = 2\n\n        if t[i] < t[j]:\n            r.append(i)\n            t[i] += 1\n            t[j] -= 1\n        elif t[i] > t[j]:\n            r.append(j)\n            t[i] -= 1\n            t[j] += 1\n        else:\n            if t[i] < 1:\n                return \"No\"\n            if chr(ord(\"A\") + i) in q[qi+1]:\n                r.append(i)\n                t[i] += 1\n                t[j] -= 1\n            else:\n                r.append(j)\n                t[i] -= 1\n                t[j] += 1\n\n    return JA([\"Yes\"] + list(map(lambda x: chr(ord(\"A\") + x), r)), \"\\n\")\n\nprint(main())\n\n\n\n", "n,a,b,c = map(int, input().split())\ns = [input() for _ in range(n)]\n\nd = {'A':a,'B':b,'C':c}\n\nans = ['Yes']\n\nfor i in range(n):\n    if d[s[i][0]] == 0 and d[s[i][1]] == 0:\n        print('No')\n        return\n    if d[s[i][0]] == 1 and d[s[i][1]] == 1 and n-i > 1:\n        d[s[i][0]] = 2\n        d[s[i][1]] = 0\n        if d[s[i+1][0]] == 0 and d[s[i+1][1]] ==0:\n            d[s[i][0]] = 0\n            d[s[i][1]] = 2\n            ans.append(s[i][1])\n        else:\n            ans.append(s[i][0])\n    elif d[s[i][0]] >= d[s[i][1]]:\n        d[s[i][0]] = d[s[i][0]] - 1\n        d[s[i][1]] = d[s[i][1]] + 1\n        ans.append(s[i][1])\n    else:\n        d[s[i][0]] = d[s[i][0]] + 1\n        d[s[i][1]] = d[s[i][1]] - 1\n        ans.append(s[i][0])\n\nfor i in range(n+1):\n    print(ans[i])", "N, A, B, C = list(map(int, input().split()))\nS = [input() for _ in range(N)]\n\nA, B, C = min(A, 2), min(B, 2), min(C, 2)\nX = [0, A, B, C]  # 1-indexec\u306e\u65b9\u304c\u697d\u305d\u3046\nF = {1: 'A', 2: 'B', 3: 'C'}\n\nans = []\nfor k, s in enumerate(S):\n    if s == 'AB':\n        i, j = 1, 2\n    elif s == 'BC':\n        i, j = 2, 3\n    elif s == 'AC':\n        i, j = 1, 3\n\n    if X[i] > X[j]:\n        X[i] -= 1\n        X[j] += 1\n        ans.append(j)\n\n    elif X[i] < X[j]:\n        X[i] += 1\n        X[j] -= 1\n        ans.append(i)\n\n    else:\n        if (X[i] == X[j] == 1) and (k < N - 1):\n            if ((S[k + 1][0] == F[i]) and (S[k + 1][1] == F[i ^ j])) or ((S[k + 1][0] == F[i ^ j]) and (S[k + 1][1] == F[i])):\n                X[i] += 1\n                X[j] -= 1\n                ans.append(i)\n            else:\n                X[j] += 1\n                X[i] -= 1\n                ans.append(j)\n        else:\n            X[i] -= 1\n            X[j] += 1\n            ans.append(j)\n\n    if any([x < 0 for x in X]):\n        print('No')\n        return\n\nprint('Yes')\nfor a in ans:\n    print((F[a]))\n", "n,a,b,c=map(int,input().split())\ns=[0]*(n+1)\nfor i in range(n):\n    s[i]=input()\nl=[0]*(n+1)\nfor i in range(n):\n    if s[i]==\"AB\":\n        if a==b==0:\n            print(\"No\")\n            return\n        if a+b+c==2:\n            if a==b==1:\n                if s[i+1]==\"AC\":\n                    a+=1\n                    b-=1\n                    l[i]=\"A\"\n                    continue\n                elif s[i+1]==\"BC\":\n                    a-=1\n                    b+=1\n                    l[i]=\"B\"\n                    continue\n        if a>=b:\n            a-=1\n            b+=1\n            l[i]=\"B\"\n        else:\n            a+=1\n            b-=1\n            l[i]=\"A\"\n    if s[i]==\"BC\":\n        if c==b==0:\n            print(\"No\")\n            return\n        if a+b+c==2:\n            if b==c==1:\n                if s[i+1]==\"AB\":\n                    c-=1\n                    b+=1\n                    l[i]=\"B\"\n                    continue\n                elif s[i+1]==\"AC\":\n                    b-=1\n                    c+=1\n                    l[i]=\"C\"\n                    continue\n        if b>=c:\n            b-=1\n            c+=1\n            l[i]=\"C\"\n        else:\n            b+=1\n            c-=1\n            l[i]=\"B\"\n    if s[i]==\"AC\":\n        if a==c==0:\n            print(\"No\")\n            return\n        if a+b+c==2:\n            if a==c==1:\n                if s[i+1]==\"AB\":\n                    c-=1\n                    a+=1\n                    l[i]=\"A\"\n                    continue\n                elif s[i+1]==\"BC\":\n                    a-=1\n                    c+=1\n                    l[i]=\"C\"\n                    continue\n        if a>=c:\n            a-=1\n            c+=1\n            l[i]=\"C\"\n        else:\n            a+=1\n            c-=1\n            l[i]=\"A\"\nif l[-2]!=0:\n    print(\"Yes\")\n    for i in range(n):\n        print(l[i])", "def main():\n    N, A, B, C = list(map(int, input().split()))\n    d = {'A':A, 'B':B, 'C':C}\n    l = []\n    for _ in range(N):\n        s = input()\n        l.append(s)\n    r = []\n    for i in range(N):\n        x, y  = l[i][0], l[i][1]\n        z = 'A'\n        for j in d:\n            if j not in l[i]:\n                z = j\n        if d[x] > d[y]:\n            d[x] -= 1\n            d[y] += 1\n            r.append(y)\n        elif d[y] > d[x]:\n            d[x] += 1\n            d[y] -= 1\n            r.append(x)\n        else:\n            if d[x] > 1 or i == N-1:\n                d[x] += 1\n                d[y] -= 1\n                r.append(x)\n            elif set(l[i]) == set(l[i+1]):\n                d[x] += 1\n                d[y] -= 1\n                r.append(x)\n            else:\n                x2 = 'A'\n                for j in l[i+1]:\n                    if j != z:\n                        if j == y:\n                            x, y = y, x\n                if d[z] > 1:\n                    d[x] -= 1\n                    d[y] += 1\n                    r.append(y)\n                else:\n                    d[x] += 1\n                    d[y] -= 1\n                    r.append(x)\n            if d[x] < 0 or d[y] < 0 or d[z] < 0:\n                return False, r\n    return True, r\nx, y = main()\nif x:\n    print('Yes')\n    for i in y:\n        print(i)\nelse:\n    print('No')\n", "import sys\nsys.setrecursionlimit(10000000)\ninput = sys.stdin.readline\nN, A, B, C = map(int, input().split())\nS = [input().strip(\"\\n\").replace(\"A\", \"0\").replace(\"B\", \"1\").replace(\"C\", \"2\") for _ in range(N)]\nAns = [None] * N\n\ndef search(i, num):\n    if i == N:\n        if min(num) >= 0: return True\n        else: return False\n    if min(num) < 0: return False\n    L = [num[0], num[1], num[2]]\n    f = S[i][0]\n    s = S[i][1]\n    L[int(f)] += 1\n    L[int(s)] -= 1\n    if search(i+1, L):\n        Ans[i] = f\n        return True\n    L[int(f)] -= 2\n    L[int(s)] += 2\n    if search(i+1, L):\n        Ans[i] = s\n        return True\n    return False\n\ndef solve():\n    if search(0, [A, B, C]):\n        print(\"Yes\")\n        for i, a in enumerate(Ans):\n            if a == \"0\": print(\"A\")\n            elif a == \"1\": print(\"B\")\n            else: print(\"C\")\n    else: print(\"No\")\n    #print(Ans)\n\n    return 0\n\ndef __starting_point():\n    solve()\n__starting_point()", "import sys\nn,a,b,c = list(map(int, input().split()))\n\ns = list()\nfor i in range(n):\n    s.append(input())\n\nr = list()\n\nfor i in range(n):\n    if s[i]=='AB':\n        if a>b:\n            r.append('B')\n            a=a-1\n            b=b+1\n        elif a<b:\n            r.append('A')\n            a=a+1\n            b=b-1\n        else:\n            if i==n-1 or 'A' in s[i+1]:\n                r.append('A')\n                a=a+1\n                b=b-1\n            else: \n                r.append('B')\n                a=a-1\n                b=b+1\n    elif s[i]=='AC':\n        if a>c:\n            r.append('C')\n            a=a-1\n            c=c+1\n        elif a<c:\n            r.append('A')\n            a=a+1\n            c=c-1\n        else:\n            if i==n-1 or 'A' in s[i+1]:\n                r.append('A')\n                a=a+1\n                c=c-1\n            else: \n                r.append('C')\n                a=a-1\n                c=c+1\n    else:\n        if b>c:\n            r.append('C')\n            b=b-1\n            c=c+1\n        elif b<c:\n            r.append('B')\n            b=b+1\n            c=c-1\n        else:\n            if i==n-1 or 'B' in s[i+1]:\n                r.append('B')\n                b=b+1\n                c=c-1\n            else: \n                r.append('C')\n                b=b-1\n                c=c+1\n    if min(a,b,c)<0:\n        print('No')\n        return\n\n\nprint('Yes')\nfor str in r:\n    print(str)\n", "# greedy\u306a\u9078\u629e\uff1a\u6570\u5b57\u304c\u5c0f\u3055\u3044\u307b\u3046\u3092\u5897\u3084\u3057\u5927\u304d\u3044\u307b\u3046\u3092\u6e1b\u3089\u3059\u3002\u7b49\u3057\u3044\u5834\u5408\u3069\u3063\u3061\u3067\u3082\u3044\u3044\uff08\u3068\u308a\u3042\u3048\u305a\u5de6\u3092\u5897\u3084\u3059\uff09\u3002\n# \n# \u521d\u624b 1 1 1 \u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# \u3069\u3053\u304b\u306e\u72b6\u614b\u3067 1 1 1 \u3092\u4f5c\u308c\u308b\u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 1 2 \u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 0 3 \u3067\u3001\u521d\u624b\u304cAB\u4ee5\u5916\u306a\u3089\u7d76\u5bfe\u6210\u529f (greedy)\n# 0 0 0 \u306a\u3089\u7d76\u5bfe\u5931\u6557\n#\n# \u521d\u624b\u3067\u6210\u5426\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u306f\n# 0 1 1\n# 0 0 2\n# 0 0 1\n#\n# 0 0 1 \u306f greedy\u306b\u3084\u308b\u3057\u304b\u306a\u3044\n# 0 0 2 \u306f\u3001\u5c11\u306a\u304f\u3068\u30821\u56de\u306fgreedy\n#\n# \u7d50\u5c40\u3001\u5404\u56de\u306egreedy\u3067\u306f\u554f\u984c\u306b\u306a\u308b\u306e\u306f\n# 0 1 1 \u3067 1 1 \u306e\u30da\u30a2\u3067\u3069\u3063\u3061\u3092\u5897\u3084\u3059\u304b\u9078\u3076\u3068\u304d\u306e\u307f\n# \u3053\u308c\u306f1\u500b\u5148\u3092\u8aad\u3081\u3070\u5341\u5206\n\n\ndef select(x, y, ops, i, z):\n    # true -> x \u3092\u5897\u3084\u3059\n    if not(x == 1 and y == 1 and z == 0 and i < len(ops) - 1):\n        if x <= y:\n            return True\n        else:\n            return False\n\n    # x = y = 1, z = 0, i < len(ops) - 1\n    # \u5148\u8aad\u307f\u3057\u3066 xz \u306a\u3089 x \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 y \u3092\u5897\u3084\u3059\n    # \u5148\u8aad\u307f\u3057\u3066 xy \u306a\u3089 \u3069\u3063\u3061\u3067\u3082\u3044\u3044\n    op = ops[i]\n    nop = ops[i+1]\n\n    oo = (op, nop)\n    if oo in [(\"AB\", \"AC\"), (\"BC\", \"AB\"), (\"AC\", \"AB\")]:\n        return True\n\n    return False\n\ndef main():\n    nabc = [int(_x) for _x in input().split()]\n    n = nabc[0]\n    a = nabc[1]\n    b = nabc[2]\n    c = nabc[3]\n\n    ops = []\n    for i in range(n):\n        ops.append(input())\n\n    result = []\n    for i in range(n):\n        op = ops[i]\n        if op == \"AB\":\n            if select(a, b, ops, i, c):\n                result.append(\"A\")\n                a+=1\n                b-=1\n            else:\n                result.append(\"B\")\n                a-=1\n                b+=1\n        if op == \"AC\":\n            if select(a, c, ops, i, b):\n                result.append(\"A\")\n                a+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                a-=1\n                c+=1\n        if op == \"BC\":\n            if select(b, c, ops, i, a):\n                result.append(\"B\")\n                b+=1\n                c-=1\n            else:\n                result.append(\"C\")\n                b-=1\n                c+=1\n        if a <0 or b<0 or c<0:\n            print(\"No\")\n            return\n\n    print(\"Yes\")\n    for r in result:\n        print(r)\n\nmain()\n", "import sys\nn, a, b, c = map(int, input().split())\n\nif a+b+c == 0:\n  print(\"No\")\n  return\nelif a+b+c == 1:\n  ans = [None]*n\n  for i in range(n):\n    s = input()\n    if (s == \"AB\" and c == 1) or (s == \"AC\" and b == 1) or (s == \"BC\" and a == 1):\n      print(\"No\")\n      return\n    if s == \"AB\":\n      if a == 1:\n        ans[i] = \"B\"\n        a, b = 0, 1\n      else:\n        ans[i] = \"A\"\n        a, b = 1, 0\n    if s == \"BC\":\n      if b == 1:\n        ans[i] = \"C\"\n        b, c = 0, 1\n      else:\n        ans[i] = \"B\"\n        b, c = 1, 0\n    if s == \"AC\":\n      if c == 1:\n        ans[i] = \"A\"\n        c, a = 0, 1\n      else:\n        ans[i] = \"C\"\n        c, a = 1, 0\n  print(\"Yes\")\n  for i in range(n):\n    print(ans[i])\n\nelse:\n  ans = [None]*n\n  s = [input() for _ in range(n)]\n  for i in range(n):\n    if (s[i] == \"AB\" and a == 0 and b == 0) or (s[i] == \"AC\" and c == 0 and a == 0) or (s[i] == \"BC\" and b == c == 0):\n      print(\"No\")\n      return\n    if s[i] == \"AB\":\n      if a == 0:\n        ans[i] = \"A\"\n        a += 1\n        b -= 1\n      elif b == 0:\n        ans[i] = \"B\"\n        a -= 1\n        b += 1\n      elif i != n-1 and s[i] != s[i+1]:\n        if s[i+1] == \"BC\":\n          ans[i] = \"B\"\n          b += 1\n          a -= 1\n        if s[i+1] == \"AC\":\n          ans[i] = \"A\"\n          b -= 1\n          a += 1\n      else:\n        if b > a:\n          ans[i] = \"A\"\n          a += 1\n          b -= 1\n        else:\n          ans[i] = \"B\"\n          a -= 1\n          b += 1\n          \n      \n    if s[i] == \"BC\":\n      if b == 0:\n        ans[i] = \"B\"\n        b += 1\n        c -= 1\n      elif c == 0:\n        ans[i] = \"C\"\n        b -= 1\n        c += 1\n      elif i != n-1 and s[i] != s[i+1]:\n        if s[i+1] == \"AC\":\n          ans[i] = \"C\"\n          c += 1\n          b -= 1\n        if s[i+1] == \"AB\":\n          ans[i] = \"B\"\n          c -= 1\n          b += 1\n      else:\n        if b < c:\n          ans[i] = \"B\"\n          b += 1\n          c -= 1\n        else:\n          ans[i] = \"C\"\n          b -= 1\n          c += 1\n      \n    if s[i] == \"AC\":\n      if c == 0:\n        ans[i] = \"C\"\n        c += 1\n        a -= 1\n      elif a == 0:\n        ans[i] = \"A\"\n        c -= 1\n        a += 1\n      elif i != n-1 and s[i] != s[i+1]:\n        if s[i+1] == \"AB\":\n          ans[i] = \"A\"\n          a += 1\n          c -= 1\n        if s[i+1] == \"BC\":\n          ans[i] = \"C\"\n          a -= 1\n          c += 1\n      else:\n        if c < a:\n          ans[i] = \"C\"\n          c += 1\n          a -= 1\n        else:\n          ans[i] = \"A\"\n          c -= 1\n          a += 1\n  print(\"Yes\")\n  for i in range(n):\n    print(ans[i])", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    n, *abc = map(int, input().split())\n    query = []\n    for _ in [0] * n:\n        s = input()\n        query.append((ord(s[0]) - ord('A'), ord(s[1]) - ord('A')))\n    query.append((0, 1)) # \u756a\u5175\n\n    ans = ['A'] * n\n    for i in range(n):\n        a, b = query[i]\n        if abc[a] == 0 and abc[b] == 0:\n            print(\"No\")\n            return\n        elif abc[a] == 0:\n            abc[a] += 1\n            abc[b] -= 1\n            ans[i] = chr(ord('A') + a)\n        elif abc[b] == 0:\n            abc[a] -= 1\n            abc[b] += 1\n            ans[i] = chr(ord('A') + b)\n        else:\n            if a in query[i+1]:\n                abc[a] += 1\n                abc[b] -= 1\n                ans[i] = chr(ord('A') + a)\n            else:                \n                abc[a] -= 1\n                abc[b] += 1\n                ans[i] = chr(ord('A') + b)\n    print(\"Yes\")\n    print(*ans, sep=('\\n'))\n\nmain()"]