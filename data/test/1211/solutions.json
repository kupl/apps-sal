["n, k = [int(i) for i in input().split(\" \")]\nA = [int(i) for i in input().split(\" \")]\n\nmx=0\nmxval=0\nfor i in range(k):\n    if A[i]*(n//A[i])>mxval:\n        mxval = A[i]*(n//A[i])\n        mx = i\nprint(mx+1, n//A[mx])\n", "n, k = [int(z) for z in input().split()]\na = [int(z) for z in input().split()]\nbest = 10000000000000000000\nfor i in range(k):\n    if (n % a[i]) < best:\n        best = n % a[i]\n        num = n // a[i]\n        kor = i + 1\nprint(kor, num)\n", "n, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nmn = 10 ** 20\na1, a2 = 1, 0\nfor i in range(k):\n    if n % a[i] < mn:\n        mn = n % a[i]\n        a1 = i + 1\n        a2 = n // a[i]\nprint(a1, a2)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nm = min(enumerate(a), key=lambda l: n % l[1])\nprint(m[0] + 1, n // m[1])\n", "a, b = map(int,input().split())\nk = list(map(int,input().split()))\ns = []\nfor i in range(b):\n\ts += [[a % k[i], i + 1, a // k[i]]]\ns.sort()\nprint(s[0][1], s[0][2]) ", "l = list(map(int,input().split()))\nn = l[0]\nk = l[1]\na = list(map(int,input().split()))\nmx = 0\nmidx = 0\nfor i in range(k):\n\tif a[i]*(n // a[i]) > mx:\n\t\tmx = a[i]*(n // a[i])\n\t\tmidx = i\nprint(midx+1,n // a[midx])", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = [0]*k\nfor i in range(k):\n    m[i] = n%a[i]\ni = m.index(min(m))+1\nprint(i, n//a[i-1])\n\n", "import sys, math\n\n#f = open('input/input_1', 'r')\nf = sys.stdin\n\nN, K = list(map(int, f.readline().split()))\nbox_size = list(map(int, f.readline().split()))\n\nans = -1\nans_cnt = 0\nans_type = 0\n\nfor i, b in enumerate(box_size):\n  num_box = (N//b)\n  if ans < num_box * b:\n    ans = num_box * b\n    ans_cnt = num_box\n    ans_type = i+1\n\nprint(ans_type, ans_cnt)\n", "n, k = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\nmax_i = 0\nfor i in range(k):\n    if (n % a[i]) < (n % a[max_i]):\n        max_i = i\nprint(max_i + 1, n // a[max_i], sep=' ')\n", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef get_res(num_hamsters, box_sizes):\n    min_index, res_box_size, min_left = 0, box_sizes[0], num_hamsters % box_sizes[0]\n    for index, box_size in enumerate(box_sizes):\n        cur_left = num_hamsters % box_size\n        if cur_left < min_left:\n            min_left = cur_left\n            min_index = index\n            res_box_size = box_size\n    return min_index, num_hamsters // res_box_size\n\n\ndef main():\n    num_hamsters, num_box_types = read_nums()\n    box_sizes = read_nums()\n    box_index, num_boxes = get_res(num_hamsters, box_sizes)\n    print(box_index + 1, num_boxes)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return [int(x) for x in input().split()]\n\nn, k = read_ints()\na = read_ints()\n\nres_i, res_q = 0, 0\nfor i, b in enumerate(a):\n    if n - n % b > a[res_i] * res_q:\n        res_i, res_q = i, n // b\n\nprint(res_i + 1, res_q)\n", "n, k = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\nu = 100000000000000000000000000000000000000000000\nm = 0\nfor i in range(k):\n    if n%(s[i]) < u:\n        u = n%(s[i])\n        m = i\nprint(m+1, n//(s[m]))", "n, k = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nnum = -1\nmino = int(1e18)\nfor i in range(k):\n    if mino > n % a[i]:\n        num = i + 1\n        mino = n % a[i]\nprint(num, n // a[num - 1])", "n, k = list(map(int, input().split()))\nL = list(map(int, input().split()))\nans = 0\nbox = 0\nfor i in range(k):\n    new = n // L[i] * L[i]\n    if new > ans:\n        ans = new\n        box = i\nprint(box + 1, n // L[box])\n    \n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nmaxi = 0\nminimum = n\nfor i in range(len(a)):\n    if n % a[i] < minimum:\n        minimum = n % a[i]\n        maxi = i\n\nprint(maxi + 1, n // a[maxi])", "#Python is love <3\nn,k = map(int,input().split())\na = list(map(int,input().split()))\nfix = -1\nmaxi = -1\nbox = -1\nfor i in range(k):\n    to = n//a[i]\n    tot = to*a[i]\n    #print(to,tot)\n    if tot>fix:\n        fix = tot\n        maxi = to\n        box = i+1\nprint(box,maxi)", "R = lambda : map(int, input().split())\n\nn,k = R()\nb = list(R())\n\ndef solve(n,k,b):\n    m = [n % b[i] for i in range(k)]\n\n    from operator import itemgetter\n    i = min(enumerate(m), key=itemgetter(1))[0] \n\n    return i,n//b[i]\n\nt = solve(n,k,b)\nprint(t[0]+1, t[1])", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list([n % x for x in a])\nc = list([n // x for x in a])\n\ni = b.index(min(b))\nprint(i + 1, c[i])\n", "def __starting_point():\n    N, K = map(int, input().split())\n    A = list(map(int, input().split()))\n    m = 10000000000000000000\n    j = 0\n    c = 0\n    for i in range(K):\n        k = N%A[i]\n        if k < m:\n            m = k\n            c = N//A[i]\n            j = i+1\n    print(j, c)\n__starting_point()", "R=lambda:list(map(int,input().split()))\n\nn, m  = R()\n\na = list(R())\n\nans = float('inf')\nans_i = 0\n\nfor i in range(m):\n    temp = n % a[i]\n    if temp < ans:\n        ans = temp\n        ans_i = i\n        \nprint(ans_i + 1, n//a[ans_i] )\n", "(n, k) = list(map(int, input().split()))\n\nlst = []\nfor x in input().split():\n    lst.append(int(x))\n\nr = n + 1\nfor x in range(len(lst)):\n    if n % lst[x] < r:\n        r = n % lst[x]\n        t = x\n\nprint(t + 1, n // lst[t])\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = []\nc = []\nfor x in a:\n\tb.append(n//x)\n\tc.append(n%x)\ni = c.index(min(c))\nprint(i+1, b[i])", "\nn, k =list(map(int,input().split()))\n\nbox_type = -1\nans_so_far = 99999999999999999999999\nans = 0\nkeys = [ int(i) for i in input().split() ]\n\nfor i in range(k):\n    if n % keys[i] < ans_so_far :\n        ans_so_far = n % keys[i]\n        box_type = i+1\n        ans = n // keys[i]\n\nprint(box_type,ans)\n         \n"]