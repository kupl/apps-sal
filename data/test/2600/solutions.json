["t = int(input())\nfor _ in range(t):\n    n,m = list(map(int, input().split()))\n    l = []\n    for _ in range(n):\n        l.append(list(map(int,input().split())))\n    zeroes = [0] * (m + n - 1)\n    ones = [0] * (m + n - 1)\n\n    for i in range(n):\n        for j in range(m):\n            if l[i][j] == 0:\n                zeroes[i + j] += 1\n            else:\n                ones[i + j] += 1\n\n    out = 0\n\n    for i in range((m + n - 1)//2):\n        z = zeroes[i] + zeroes[m + n - 2 - i]\n        o = ones[i] + ones[m + n - 2 - i]\n        out += min(o,z)\n    print(out)\n                       \n", "import sys\n\nreadline = sys.stdin.readline\nread = sys.stdin.read\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    h, w = nm()\n    a = [nl() for _ in range(h)]\n    d = dict()\n    for i in range(h):\n        for j in range(w):\n            v = min(i+j, h+w-2-i-j)\n            if v not in d:\n                d[v] = [0, 0]\n            d[v][a[i][j]] += 1\n    ans = 0\n    for x in d:\n        if x * 2 != h + w - 2:\n            ans += min(d[x])\n    print(ans)\n    return\n\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "def solve():\n    n, m = map(int, input().split())\n    a = [list(map(int, input().split())) for _ in range(n)]\n    dc = [[0, 0] for _ in range(0 + 0, n - 1 + m - 1 + 1)]\n    for i in range(n):\n        for j in range(m):\n            dc[i + j][a[i][j]] += 1\n    ans = 0\n    for i in range(len(dc) // 2):\n        j = len(dc) - 1 - i\n        ans += min(dc[i][0] + dc[j][0], dc[i][1] + dc[j][1])\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "import sys\n\ninput=sys.stdin.readline\n\nfor _ in range(int(input())):\n    n,m=map(int,input().split())\n    one=[0]*(n+m-1)\n    zero=[0]*(n+m-1)\n    for i in range(n):\n        a=list(map(int,input().split()))\n        for j in range(m):\n            one[i+j]+=(a[j]==1)\n            zero[i+j]+=(a[j]==0)\n\n    res=0\n    for i in range((n+m-1)//2):\n        s=one[i]+one[n+m-2-i]\n        t=zero[i]+zero[n+m-2-i]\n        res+=min(s,t)\n    print(res)", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\n\nt=int(input())\nfor tests in range(t):\n    n,m=list(map(int,input().split()))\n    M=[list(map(int,input().split())) for i in range(n)]\n\n    A=[[] for i in range(n+m-1)]\n\n    for i in range(n):\n        for j in range(m):\n            A[i+j].append(M[i][j])\n\n    ANS=0\n\n    for k in range((n+m-1)//2):\n        C=Counter(A[k]+A[-k-1])\n        ANS+=min(C[0],C[1])\n\n    print(ANS)\n\n    \n    \n    \n", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n,m=map(int,input().split())\n    ones=[0]*((n+m)//2)\n    for i in range(n):\n        line=list(map(int,input().split()))\n        for j in range(m):\n            x=i+j\n            if x>(n+m-2)//2:\n                x=n+m-2-x\n            if line[j]==1:\n                ones[x]+=1\n    sol=0\n    for i in range((n+m-1)//2):\n        tot=2*min(i+1,n,m)\n        sol+=min(ones[i],tot-ones[i])\n    print(sol)", "t = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    k = [0] * (n + m - 1)\n    c = [0] * (n + m - 1)\n    for i in range(n):\n        for j in range(m):\n            c[i + j] += 1\n            if a[i][j] == 1:\n                k[i + j] += 1\n    ans = 0\n    for i in range((n + m - 1) // 2):\n        j = n + m - 2 - i\n        ans += min(k[i] + k[j], c[i] + c[j] - k[i] - k[j])\n    print(ans)\n", "T = int(input())\nfor _ in range(T):\n    N,M = list(map(int,input().split()))\n    A = [list(map(int,input().split())) for i in range(N)]\n    L = N+M-1\n    c0 = [0]*L\n    c1 = [0]*L\n    for i,row in enumerate(A):\n        for j,a in enumerate(row):\n            if a==0:\n                c0[i+j] += 1\n            else:\n                c1[i+j] += 1\n    M = L//2\n    ans = 0\n    for i in range(M):\n        a0 = c0[i] + c0[-1-i]\n        a1 = c1[i] + c1[-1-i]\n        ans += min(a0,a1)\n    print(ans)\n", "T = int(input())\nfor __ in range(T):\n    n, m = map(int, input().split())\n    A = []\n    for __ in range(n):\n        A.append(list(map(int, input().split())))\n    D = [[0, 0] for __ in range(n + m - 1)]\n    for i in range(n):\n        for j in range(m):\n            D[i + j][A[i][j]] += 1\n    ans = 0\n    for k1 in range((n + m - 1) // 2):\n        k2 = (n + m - 2) - k1\n        x = min(D[k1][0] + D[k2][0], D[k1][1] + D[k2][1])\n        ans += x\n        # print(k1, k2, x)\n    # print(D)\n    print(ans)", "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for i in range(n)]\n    ptn = n + m - 2\n    cnt = 0\n    ans = []\n    for length in range(n + m + 10):\n        tmp = []\n        for i in range(length + 1):\n            j = length - i\n            if 0 <= i < n and 0 <= j < m:\n                tmp.append(a[i][j])\n        if tmp:\n            ans.append(tmp)\n            \n    len_ans = len(ans)\n    res = 0\n    for i in range(len_ans // 2):\n        cnt = [0, 0]\n        for val in ans[i]:\n            cnt[val] += 1\n        for val in ans[- i - 1]:\n            cnt[val] += 1\n        res += min(cnt)\n    print(res)\n\n      \n", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    a = [list(map(int, input().split())) for _ in range(n)]\n    ans = 0\n    allCnts = []\n    for k in range(n+m-1):\n        cnt = [0,0]\n        i = k+1\n        for j in range(n+m):\n            i -= 1\n            if i < 0 or i >= n or j >= m:\n                continue\n            cnt[a[i][j]] += 1\n        allCnts.append(cnt)\n    for i in range(len(allCnts) // 2):\n        zeros = allCnts[i][0] + allCnts[-i-1][0]\n        ones = allCnts[i][1] + allCnts[-i-1][1]\n        ans += min(zeros, ones)\n    print(ans)\n", "t = int(input())\nfor _ in range(t):\n    n,m = list(map(int, input().split(' ')))\n    M = []\n    for i in range(n):\n        M.append(list(map(int, input().split(' '))))\n    lo = 0\n    hi = n+m-2\n    total = 0\n    while True:\n        if lo >= hi:\n            break\n        num1 = 0\n        num0 = 0\n        for i in range(lo+1):\n            j = lo-i\n            if i<n and j<m and j>=0:\n                if M[i][j] == 1:\n                    num1+=1\n                else:\n                    num0+=1\n        for i in range(hi+1):\n            j = hi-i\n            if i<n and j<m and j>=0:\n                if M[i][j] == 1:\n                    num1+=1\n                else:\n                    num0+=1\n        total += min(num0,num1)\n        lo += 1\n        hi -= 1\n    print(total)\n\n\n\n\n\n", "from collections import defaultdict as dd\nimport math\nimport sys\ninput=sys.stdin.readline\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\nq= nn()\n\nfor _ in range(q):\n\tn, m = mi()\n\n\tmat= []\n\tfor i in range(n):\n\t\trow = lm()\n\t\tmat.append(row)\n\tzeros = [0]*(n+m-1)\n\tones = [0]*(n+m-1)\n\tfor i in range(n):\n\t\tfor j in range(m):\n\t\t\tif mat[i][j]==1:\n\t\t\t\tones[i+j]+=1\n\t\t\telse:\n\t\t\t\tzeros[i+j]+=1\n\tops= 0\n\t#print(ones, zeros)\n\tfor i in range((m+n-1)//2):\n\t\tops+= min(zeros[i]+zeros[-i-1], ones[i]+ones[-i-1])\n\n\tprint(ops)\n", "import sys\ninput=lambda: sys.stdin.readline().rstrip()\nt=int(input())\nfor _ in range(t):\n  n,m=list(map(int,input().split()))\n  Z=[0]*(n+m-1)\n  O=[0]*(n+m-1)\n  for i in range(n):\n    A=[int(j) for j in input().split()]\n    for j,a in enumerate(A):\n      if a==0:\n        Z[i+j]+=1\n      else:\n        O[i+j]+=1\n  ans=0\n  for i in range((n+m-1)//2):\n    x,y=Z[i]+Z[n+m-2-i],O[i]+O[n+m-2-i]\n    ans+=min(x,y)\n  print(ans)\n\n\n", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    n,m = list(map(int,input().split()))\n\n    z = [0] * ((n+m-1)//2)\n    o = [0] * ((n+m-1)//2)\n\n    for i in range(n):\n\n        a = list(map(int,input().split()))\n\n        for j in range(m):\n\n            d = min(i+j, n-i-1 + m-j-1)\n            if d < len(z):\n\n                if a[j] == 0:\n                    z[d] += 1\n                else:\n                    o[d] += 1\n\n    ans = 0\n    for i in range(len(z)):\n        ans += min(o[i],z[i])\n    print (ans)\n", "t=int(input())\nfor _ in range(t):\n    n,m=map(int,input().split())\n    cost=0\n    a=[]\n    for i in range(n):\n        c=list(map(int,input().split()))\n        a.append(c)\n    r=(n+m-1)//2\n    if (r+1)*2<=n+m-1:\n        r+=1\n    for i in range(r):\n        Q=i\n        counter0=0\n        counter1=0\n        for j in range(Q+1):\n            if j>=m:\n                continue\n            if Q-j>=n:\n                continue\n            if a[Q-j][j]==0:\n                counter0+=1\n            else:\n                counter1+=1\n        Q=n+m-2-i\n        for j in range(Q+1):\n            if j>=m:\n                continue\n            if Q-j>=n:\n                continue\n            if a[Q-j][j]==0:\n                counter0+=1\n            else:\n                counter1+=1\n        cost+=min(counter0,counter1)\n    print(cost)", "tests = int (input())\nfor test in range (tests):\n  rows, cols = list(map (int, input().split()))\n  a = []\n  for i in range (rows):\n    b = list(map (int, input().split()))\n    a.append (b)\n  cnt = [[0 for j in range (2)] for i in range (rows + cols)]\n  for r in range (rows):\n    for c in range (cols):\n      if r + c != rows + cols - r - c - 2:\n        cnt[min (r + c, rows + cols - r - c - 2)][a[r][c]] += 1\n  res = 0\n  for i in cnt:\n      res += min (i[0], i[1])\n  print (res) \n", "for _ in range(int(input())):\n    A = []\n    C = []\n    n, m = list(map(int, input().split()))\n    for i in range(n):\n        B = list(map(int, input().split()))\n        A.append(B)\n    for i in range((n + m - 1)):\n        C.append([])\n        for j in range(i + 1):\n            if (i - j) < n and j < m:\n                C[-1].append(A[i - j][j])\n    Ans = 0\n    #print(C)\n    for i in range(len(C) // 2):\n        Ans += min( sum(C[i]) + sum(C[- i - 1]), len(C[i]) + len(C[-1 - i]) - sum(C[i]) - sum(C[- i - 1]))\n    print(Ans)\n\n", "for _ in range(int(input())):\n    n, m = list(map(int, input().split()))\n    arr = [[0] * m for i in range(n)]\n    for i in range(n):\n        arr[i] = list(map(int, input().split()))\n    ans = 0\n    brr = []\n    for s in range(n + m - 1):\n        kek = [0, 0]\n        for i in range(n):\n            j = s - i\n            if not 0 <= j < m:\n                continue\n            kek[arr[i][j]] += 1\n        brr.append(kek)\n    for i in range(len(brr) // 2):\n        ans += min(brr[i][0] + brr[-i - 1][0],\n                   brr[i][1] + brr[-i - 1][1])\n    # if len(brr) % 2 == 1:\n    #     ans += min(brr[len(brr) // 2])\n    print(ans)\n\n"]