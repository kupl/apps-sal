["n = int(input())\nst = input()\ns = [0 if c == \"(\" else 1 for c in st]\nif n % 2 != 0 or sum(s) != n//2:\n    print(0)\n    print(1,1)\n    return\nmaxx = 0\nind = (0,0)\nmaxshift = 0\nfor shift in range(n):\n    stack = 0\n    x1 = -1\n    x2 = -1\n    sumzero = 0\n    for i,c in enumerate(s):\n        if s[(i+shift)%n] == 0:\n            stack+=1\n        else:\n            stack-=1\n        if stack == 0:\n            sumzero+=1\n        if stack < 0:\n            x1 = i\n            break\n    stack = 0\n    for i in range(n-1, -1, -1):\n        if s[(i+shift)%n] == 1:\n            stack+=1\n        else:\n            stack-=1\n        if stack < 0:\n            x2 = i\n            break\n    if x1 == -1 and x2 == -1 and stack == 0:\n        if sumzero > maxx:\n            maxx=sumzero\n            ind = (0,0)\n    if x1 == -1 or x2 == -1 or x1 == x2:\n        continue\n    stack = 0\n    corr = True\n    ans = 0\n    for i in range(n):\n        c = s[(i+shift)%n]\n        \n        if i == x1 or i == x2:\n            c = 1-c\n        if c == 0:\n            stack += 1\n        else:\n            stack -= 1\n        if stack == 0:\n            ans+=1\n        if stack == -1:\n            corr = False\n            break\n    \n    if not corr or stack > 0:\n        continue\n    if ans > maxx:\n        maxshift = shift\n        maxx = ans\n        ind = ((x1+shift)%n, (x2+shift)%n)\nprint(maxx)\nprint(ind[0]+1,ind[1]+1)\n", "n = int(input())\ns = list(input())\nr = -1\nl = n\nroot = []\n\ndef find_right(node):\n    nonlocal l,r,s,n\n    while n:\n        r += 1\n        n -= 1\n        if s[r] == '(':\n            node[2].append([r,-1,[]])\n            find_right(node[2][-1])\n        else:\n            node[1] = r\n            return True\n    return False\n\ndef find_left(node):\n    nonlocal l,r,s,n\n    while n:\n        l -= 1\n        n -= 1\n        if s[l] == ')':\n            node[2].append([-1,l,[]])\n            find_left(node[2][-1])\n        else:\n            node[0] = l\n            return True        \n    return False\n\nis_correct = True\nwhile n:\n    r += 1\n    n -= 1\n    if s[r]=='(':\n        root.append([r,-1,[]])\n        is_correct &= find_right(root[-1])\n    else:\n        root = [[-1,r,root]]       \n        is_correct &= find_left(root[-1])\n\nsol = [[0,1,1]]\nif is_correct:        \n    sol.append([len(root), 1, 1])\n    for child in root:\n        sol.append([len(child[2])+1, child[0]+1, child[1]+1])\n        for gr_child in child[2]:\n            if len(gr_child[2]):\n                sol.append([len(root)+len(gr_child[2])+1, gr_child[0]+1, gr_child[1]+1])\n            \nprint('%d\\n%d %d'%tuple(max(sol)))", "n = int(input().strip())\ns= input().strip()\nss= 0\nmina = 0\nti = 0\nfor k in range(len(s)):\n    if(s[k] == \"(\"):\n        ss+=1\n    else:\n        ss-=1\n    if(ss<0):\n        ti = k+1\n        ss = 0\ns=s[ti:]+s[:ti]\nss= 0\nfor k in range(len(s)):\n    if(s[k] == \"(\"):\n        ss+=1\n    else:\n        ss-=1\n    if(ss<0):\n        print(0)\n        print(1,1)\n        break\nelse:\n    if(ss == 0):\n      pre=[0 for k in range(len(s))]\n      for k  in range(len(s)):\n          if (s[k] == \"(\"):\n              ss += 1\n          else:\n              ss -= 1\n          pre[k] = ss\n      tt = 0\n      a =(1,1)\n      for k in range(0,len(s)):\n          if(pre[k] == 0):\n              tt+=1\n      maxi= tt\n      g =0\n      gg =0\n      while(gg<len(s)):\n          if(pre[gg] == 0):\n                  if(gg != g+1):\n                      yy = g+1\n                      y = g+1\n                      q = 0\n                      while(yy<gg):\n                          if(pre[yy] == 1):\n                              if(yy !=y+1):\n                                  rr = y+1\n                                  r  = y+1\n                                  h = 0\n                                  while(rr<yy):\n                                      if(pre[rr] == 2):\n                                          h+=1\n                                      rr+=1\n\n                                  if(tt+h+1>maxi):\n                                      maxi = tt + h + 1\n                                      a=(y,yy)\n                              q+=1\n                              y = yy+1\n                              yy = y\n                          else:\n                              yy+=1\n\n                      if (q + 1 > maxi):\n                          maxi = q+1\n                          a = (g, gg)\n                  g= gg+1\n                  gg= g\n          else:\n               gg+=1\n      print(maxi)\n      print((a[0]+ti)%len(s)+1,(a[1]+ti)%len(s)+1)\n\n\n\n\n    else:\n        print(0)\n        print(1,1)\n\n\n"]