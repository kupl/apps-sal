["m = 998244353\nn = 5050\nmi = [1] * n\nfor i in range(2, n):\n\tmi[i] = (-(m//i) * mi[m%i]) % m;\nf = [1] * n\ng = [1] * n\nfor i in range(2, n):\n\tf[i] = (f[i-1] * i) % m\n\tg[i] = (g[i-1] * mi[i]) % m\n\t\ndef calc(x, y):\n\ts = 1\n\tp = f[x] * f[y]\n\tfor i in range(1, min(x, y)+1):\n\t\tden = g[i] * g[x-i] * g[y-i]\n\t\ts += p * den % m\n\treturn s\n\na, b, c = map(int, input().split())\nans = calc(a, b) * calc(b, c) * calc(c, a) % m\nprint(ans)", "a,b,c = list(map(int, input().split(' ')))\n\n\nMOD = 998244353\n\ndef d(a, b):\n\ts = 1\n\tfor i in range(a, b+1):\n\t\ts*=i\n\t\ts%=MOD\n\treturn s\n\n\n\n\ndef cnk(n,k):\n\ts = 1\n\tfor i in range(n-k+1, n+1):\n\t\ts*=i\n\tfor i in range(1,k+1):\n\t\ts/=i\n\treturn s\n\n\ndef factorial(n):\n\ts = 1\n\tfor i in range(1, n+1):\n\t\ts*=i\t\n\treturn s\n\n\n\ndef pow(a, b):\n\tc = 1\n\n\twhile b>0:\n\t\tif b%2==0:\n\t\t\tb//=2\n\t\t\ta *=a\n\t\t\ta%=MOD\n\t\telse:\n\t\t\tb-=1\n\t\t\tc*=a\n\t\t\tc%=MOD\n\treturn c\n\n\ndef inv(i):\n\treturn pow(i, MOD-2)\n\"\"\"\ndef factinv(i):\n\n\treturn 1.0/factorial(i)\n\n\"\"\"\nfi = [1, 1]\ndef sp(n, m):\n\ts = 1\n\td1 = 1\n\td2 = 1\n\t#print(d1,d2,\"!\")\n\tfor i in range(1, n+1):\n\t\td1*=n-i+1\n\t\td2*=m-i+1\n\n\t\t#print(i, d1,d2)\n\t\td1%=MOD\n\t\td2%=MOD\n\t\ts+= d1*d2 *(fi[i]%MOD)\n\t\t#print(d1*d2 *(fi[i]%MOD))\n\t\ts%= MOD\n\n\treturn s\n\n\n\ns = 1\nfor i in range(2, max(a,max(b,c))+1):\n\ts *=i\n\ts %= MOD\n\tfi.append(inv(s))\n\n\nprint((sp(a,b)*sp(a,c)*sp(b,c))%MOD)\n#print(sp(1,2))\n#print(sp(2,2))\n#print()\n", "import math\nf = 998244353\n            \ndef matchings(a,b):\n    m = max(a,b)\n    n = min(a,b)\n    \n    t = 1\n    p = 1\n    for i in range(0,n):\n        p *= (n-i)*(m-i)\n        p //= i+1\n        t += p\n    t = t % f\n    return(t)\n\ninputs = [int(x) for x in input().split(\" \")]\nk = matchings(inputs[0],inputs[1])*matchings(inputs[0],inputs[2])*matchings(inputs[2],inputs[1]) % f\nprint(k)", "import math\nf = 998244353\n            \ndef calc(a,b):\n    m = max(a,b)\n    n = min(a,b)\n    \n    t = 1\n    p = 1\n    for i in range(0,n):\n        p *= (n-i)*(m-i)\n        p //= i+1\n        t += p\n    t = t % f\n    return(t)\n\na, b, c = map(int, input().split())\nans = calc(a, b) * calc(b, c) * calc(c, a) % f\nprint(ans)", "def gcd(a, b,):\n    if b == 0:\n        return a, 1, 0\n    d, x_, y_  = gcd(b, a % b)\n    return d, y_, x_ - (a // b) * y_\n\n\ndef co(a, i):\n    return (f[a]*g[i]%998244353*g[a-i])%998244353\n\n\na, b, c = map(int, input().split())\nr = 0\nf = [1]\ng = []\nfor i in range(1, 5005):\n    f.append(f[-1]*i%998244353)\ng = [(gcd(i, 998244353)[1]) for i in f]\nfor i in range(min(a, b)+1):\n    r+=(co(a, i)*co(b, i)%998244353*f[i])%998244353\nh = 0\nfor i in range(min(a, c)+1):\n    h+=(co(a, i)*co(c, i)%998244353*f[i])%998244353\nv = 0\nfor i in range(min(c, b)+1):\n    v+=(co(c, i)*co(b, i)%998244353*f[i])%998244353\nprint((r*h*v)%998244353)", "def gcd(a, b,):\n    if b == 0:\n        return a, 1, 0\n    d, x_, y_  = gcd(b, a % b)\n    return d, y_, x_ - (a // b) * y_\n\n\na, b, c = map(int, input().split())\nr = 0\nf = [1]\ng = []\nfor i in range(1, 5005):\n    f.append(f[-1]*i%998244353)\ng = [(gcd(i, 998244353)[1]) for i in f]\nfor i in range(min(a, b)+1):\n    r+=(f[a]*g[i]*g[a-i]*f[b]*g[b-i])%998244353\nh = 0\nfor i in range(min(a, c)+1):\n    h+=(f[a]*g[i]*g[a-i]*f[c]*g[c-i])%998244353\nv = 0\nfor i in range(min(c, b)+1):\n    v+=(f[c]*g[i]*g[c-i]*f[b]*g[b-i])%998244353\nprint((r*h*v)%998244353)", "def gcd(a, b,):\n    if b == 0:\n        return a, 1, 0\n    d, x_, y_  = gcd(b, a % b)\n    return d, y_, x_ - (a // b) * y_\n\n\na, b, c = map(int, input().split())\nr = 0\nf = [1]\ng = []\nfor i in range(1, 5005):\n    f.append(f[-1]*i%998244353)\ng = [(gcd(i, 998244353)[1]) for i in f]\nfor i in range(min(a, b)+1):\n    r+=(f[a]*g[i]*g[a-i]*f[b]*g[b-i])%998244353\nh = 0\nfor i in range(min(a, c)+1):\n    h+=(f[a]*g[i]*g[a-i]*f[c]*g[c-i])%998244353\nv = 0\nfor i in range(min(c, b)+1):\n    v+=(f[c]*g[i]*g[c-i]*f[b]*g[b-i])%998244353\nprint((r*h*v)%998244353)", "a, b, c = list(map(int, input().split()))\nmd = 998244353\n\ndef solve(x, y, z):\n\tres1 = 0\n\tres2 = 0\n\tres3 = 0\n\n\ta, b, c = sorted([x, y, z])\n\n\ttmpA, tmpB, tmpC, tmpK = 1, 1, 1, 1\n\n\tfor k in range(a + 1):\n\t\td = pow(tmpK, md - 2, md)\n\t\tres1 += (tmpA * tmpB * d) % md\n\t\tres2 += (tmpA * tmpC * d) % md\n\t\ttmpA *= a - k\n\t\ttmpA %= md\n\t\ttmpB *= b - k\n\t\ttmpB %= md\n\t\ttmpC *= c - k\n\t\ttmpC %= md\n\t\ttmpK *= k + 1\n\t\ttmpK %= md\n\n\t\tres1 = res1 % md\n\t\tres2 = res2 % md\n\n\ttmpB, tmpC, tmpK = 1, 1, 1\n\n\tfor k in range(b + 1):\n\t\td = pow(tmpK, md - 2, md)\n\t\tres3 += (tmpB * tmpC * d) % md\n\t\ttmpB *= b - k\n\t\ttmpB %= md\n\t\ttmpC *= c - k\n\t\ttmpC %= md\n\t\ttmpK *= k + 1\n\t\ttmpK %= md\n\n\t\tres3 = res3 % md\n\n\treturn (res1 * res2 * res3) % md\n\n\nres = solve(a, b, c) % 998244353\n\nprint(res)\n", "MOD = 998244353\ndef w(a, b):\n    # SUM (k = 0..min) C(a, k) * C(b, k) * k!\n    rt, ca, cb, fl = 1, 1, 1, 1\n    for k in range(1, min(a, b) + 1):\n        fl = fl * k % MOD\n        ca = ca * (a - k + 1) // k\n        cb = cb * (b - k + 1) // k\n        rt = (rt + ((ca % MOD) * (cb % MOD) % MOD) * fl % MOD) % MOD\n    return rt\n\na, b, c = map(int, input().split())\nprint(((w(a, b) % MOD) * w(b, c) % MOD) * w(c, a) % MOD)", "a, b, c = [int(i) for i in input().split()]\nn = max(a, b, c) + 1\nmod = 998244353\nf = [0] * (n + 1)\nf[0] = 1\nfor i in range(1, n + 1):\n    f[i] = (f[i-1] * i) % mod\n\ndef f_pow(a, k):\n    if k == 0:\n        return 1\n    if k % 2 == 1:\n        return f_pow(a, k - 1) * a % mod\n    else:\n        return f_pow(a * a % mod, k // 2) % mod\n\ndef C(n, k):\n    d = f[k] * f[n - k] % mod\n    return f[n] * f_pow(d, mod - 2) % mod\n     \nans, cur = 1, 0\n\nfor i in range(min(a, b) + 1):\n    cur += C(a, i) * C(b, i) * f[i]\n    cur %= mod\nans, cur = (ans * cur) % mod, 0\n\nfor i in range(min(b, c) + 1):\n    cur += C(b, i) * C(c, i) * f[i]\n    cur %= mod\nans, cur = (ans * cur) % mod, 0\n\nfor i in range(min(a, c) + 1):\n    cur += C(a, i) * C(c, i) * f[i]\n    cur %= mod\n    \nprint((ans * cur) % mod)\n", "a, b, c = [int(i) for i in input().split()]\nn = max(a, b, c) + 1\nmod = 998244353\nf = [0] * (n + 1)\nf[0] = 1\nfor i in range(1, n + 1):\n    f[i] = (f[i-1] * i) % mod\n\ndef f_pow(a, k):\n    if k == 0:\n        return 1\n    if k % 2 == 1:\n        return f_pow(a, k - 1) * a % mod\n    else:\n        return f_pow(a * a % mod, k // 2) % mod\n\ndef C(n, k):\n    d = f[k] * f[n - k] % mod\n    return f[n] * f_pow(d, mod - 2) % mod\n     \nans, cur = 1, 0\n\nfor i in range(min(a, b) + 1):\n    cur += C(a, i) * C(b, i) * f[i]\n    cur %= mod\nans, cur = (ans * cur) % mod, 0\n\nfor i in range(min(b, c) + 1):\n    cur += C(b, i) * C(c, i) * f[i]\n    cur %= mod\nans, cur = (ans * cur) % mod, 0\n\nfor i in range(min(a, c) + 1):\n    cur += C(a, i) * C(c, i) * f[i]\n    cur %= mod\n    \nprint((ans * cur) % mod)\n", "import sys;\nimport time;\n\nmod=998244353\ndef calc(a,b):\n    if(a<b):\n        a,b=b,a;\n    s=0;\n    t=1;\n    for i in range(b+1):\n        s=s+t;\n        t=t*(a-i)//(i+1)*(b-i);\n    return s;\n        \n(a,b,c)=list(map(int,sys.stdin.readline().split()));\nstart=time.time();\nprint(((calc(a,b)*calc(b,c)*calc(c,a))%mod));\nend=time.time();\n#print(end-start);\n", "MOD = 998244353\n\ndef getAns(a,b):\n    if(a<b):\n        a,b=b,a;\n    s=0;\n    total=1;\n    for i in range(b+1):\n        s=s+total;\n        total=total*(a-i)//(i+1)*(b-i);\n    return s;\n\nx = [int(i) for i in input().split()]\nx.sort()\nprint((getAns(x[2],x[1]) * getAns(x[1],x[0]) * getAns(x[2],x[0]))%MOD)\n", "mod = 998244353\nmaxn = 1005\n'''\ndef q_mod(a,b):\n    ans = 1\n    a %= mod\n    while b != 0:\n        if b&1 == 1:\n            ans = ans * a % mod\n            b -= 1\n        b >>= 1\n        a = a * a % mod\n    return ans\n\ndef C(n,m):\n    if m >n :\n        return 0\n    ans = 1\n    for i in range(1,m+1):\n        a = (n + i - m) % mod\n        b = i % mod\n        ans = ans * (a * q_mod(b , mod-2) % mod ) % mod\n    return ans \n\ndef Lucas(n,m):\n    if m == 0:\n        return 1\n    return  C(n % mod,m % mod) * Lucas(int(n/mod) , int(m/mod)) % mod\n'''\n'''\nC = [ ([0]*maxn) for i in range(maxn)]\n\nfor i in range(2,maxn):\n    for j in range(i+1):\n        if j == 0 or j == i:\n            C[i][j] = 1\n            continue;\n        C[i][j] = (C[i-1][j] + C[i-1][j-1]) % mod\n\n\ndef A(n,m):\n    j = 0\n    ans = 1\n    for i in range(0,n+1):\n        if j == m:\n            break\n        j += 1\n        ans = (ans * (n - i)) % mod\n    return ans\n\n'''\n\ndef solve(n,m):\n    if n > m:\n        n , m = m , n\n    ans , s = 0 , 1\n    for i in range(0,n+1):\n        ans = ans + s\n        s =s * (n - i) // (i + 1) * (m - i)\n    return ans\n        \n\nwhile True:\n    try:\n        a,b,c= list(map(int ,input().split()))\n        print(solve(a,b) * solve(a,c)* solve(b,c) % mod)\n    except:\n        break\n\n", "def pwm(a,pw,mod):\n    ans = 1\n    while pw:\n        if pw&1:\n            ans*=a\n            ans%=mod\n        a*=a\n        pw>>=1\n        a%=mod\n    return ans\n\ndef precalc(mod):\n    rfact[0]=1\n    for i in range(1,5432):\n        fact[i]=(fact[i-1]*i)%mod\n        rfact[i]=pwm(fact[i],mod-2,mod)\n\ndef cnk(n,k,mod):\n    return (fact[n]*rfact[k]*rfact[n-k])%mod\n    \ndef calc(a,b,mod):\n    ans = 0\n    for k in range(min(a,b)+1):\n        ans+=(cnk(a,k,mod)*cnk(b,k,mod)*fact[k])\n        #print(a,b,cnk(a,k,mod),cnk(b,k,mod))\n        ans%=mod\n    return ans\n\nfact = [1]*5432\nrfact = [0]*5432\nmod = 998244353\nprecalc(mod)\na,b,c = (int(z) for z in input().split())\nres=calc(a,b,mod)*calc(a,c,mod)*calc(b,c,mod)\nres%=mod\nprint(res)", "import math\n\nmod = 998244353\n\nfactmod = [0]*5001\n\nfactmod[0] = 1\nfor i in range(1, 5001):\n\tfactmod[i] = (factmod[i-1] * i) % mod\n\n\t\ndef nCk(n,k):\n\t'''if k > n//2:\n\t\tk=n-k\n\tret = 1\n\tfor i in range(1, k+1):\n\t\tret = ret * (n-i+1) // i\n\treturn ret\t'''\n\tif n==a:\n\t\treturn aCks[k]\n\tif n==b:\n\t\treturn bCks[k]\n\tif n==c:\n\t\treturn cCks[k]\n\txxx\n\t\n\t#return math.factorial(n) // math.factorial(k) // math.factorial(n-k)\n\ndef calc(x,y):\n\tnonlocal mod\n\tx,y = min(x,y), max(x,y)\n\tsm = 0\n\tfor i in range(x+1):\n\t\t\n\t\tsm += ((nCk(x, i)) % mod) * ((nCk(y, i)) % mod) * ((factmod[i]) % mod)\n\t\tsm = sm % mod\n\treturn sm\n\n#print(factmod[5], nCk(5, 3))\n\na,b,c = list(map(int, input().split()))\n\naCks = [1]*(a+1)\nfor i in range(1, a):\n\taCks[i] = aCks[i-1] * (a-i+1) // (i)\naCks = [aCks[i] % mod for i in range(len(aCks))]\n#print(aCks[:a+1])\n\nbCks = [1]*(b+1)\nfor i in range(1, b):\n\tbCks[i] = bCks[i-1] * (b-i+1) // (i)\nbCks = [bCks[i] % mod for i in range(len(bCks))]\n\ncCks = [1]*(c+1)\nfor i in range(1, c):\n\tcCks[i] = cCks[i-1] * (c-i+1) // (i)\ncCks = [cCks[i] % mod for i in range(len(cCks))]\n\n#print(aCks)\n#print(bCks)\n#print(cCks)\n\t\n\nprint((calc(a,b)*calc(b,c)*calc(a,c)) % mod)\n\n", "f=[1]*50001\nmod=998244353\nfor i in range(1,5001):\n    f[i]=(f[i-1]*i)%mod\na,b,c=(int(i) for i in input().split())\ndef pwr(b,e):\n    if(b==0): return 0\n    if(e==0): return 1\n    if(e%2==0):\n        z=pwr(b,e/2)%mod\n        return (z*z)%mod\n    return (b*pwr(b,e-1))%mod\ndef nCr(n,r):\n    den=(f[r]*f[n-r])%mod\n    return (f[n]*pwr(den,mod-2))%mod\ndef g(x,y):\n    mn=min([x,y])\n    sm=0\n    nonlocal mod\n    for i in range(0,mn+1):\n        sm+=(nCr(x,i)*nCr(y,i)*f[i])%mod\n        sm=sm%mod\n    return sm\nans=g(a,b)*g(b,c)*g(c,a)\nans=ans%mod\nprint(int(ans))\n    \n", "a, b, c = list(map(int, input().split(' ')))\np = 998244353\n\ndef calc (a, b) :\n\tif a > b:\n\t\ta, b = b, a\n\tans = 0\n\ttmp = 1\n\tfor i in range(a + 1):\n\t\tans = (ans + tmp) % p\n\t\ttmp = tmp * (a - i) * (b - i) * pow(i + 1, p - 2, p) % p\n\treturn ans\n\nans = calc(a, b) * calc(b, c) * calc(a, c) % p\n\nprint(ans)\n", "a, b, c = map(int, input().split(' '))\np = 998244353\n\ndef calc (a, b) :\n\tif a > b:\n\t\ta, b = b, a\n\tans = 0\n\ttmp = 1\n\tfor i in range(a + 1):\n\t\tans = (ans + tmp) % p\n\t\ttmp = tmp * (a - i) * (b - i) * pow(i + 1, p - 2, p) % p\n\treturn ans\n\nans = calc(a, b) * calc(b, c) * calc(a, c) % p\n\nprint(ans)", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\n\n\"\"\"\ncreated by shhuan at 2017/10/6 22:19\n\n\"\"\"\n\nt0 = time.time()\na, b, c = list(map(int, input().split()))\n\ndef ct(a, b):\n    if a > b:\n        a, b = b, a\n    L=998244353\n    s=1\n    sx=1\n    for k in range(1,a+1):\n        s = s*(a+1-k)*(b+1-k)//k\n        sx += s % L\n    return sx\n\nL=998244353\n\nprint(ct(a,b)*ct(a,c)*ct(b,c)%L)\n\n# print(time.time()-t0)\n\n# p = [[0 for _ in range(MAXN)] for _ in range(MAXN)]\n# for i in range(1, MAXN):\n#     p[i][0] = 1\n#     for j in range(1, i+1):\n#         p[i][j] = (p[i-1][j-1]+p[i-1][j]) % MOD\n# print(time.time() - t0)\n# pre = [0] * MAXN\n# pre[0] = 1\n# for i in range(1, MAXN):\n#     pre[i] = (i*pre[i-1]) % MOD\n#\n#\n# def solve(x, y):\n#     ans = 0\n#     for k in range(min(x, y)+1):\n#         d = pre[k]\n#         d = (d*p[x][k]) % MOD\n#         d = (d*p[y][k]) % MOD\n#         ans = (ans+d) % MOD\n#\n#     return ans\n#\n# ans = 1\n# ans = (ans * solve(a, b)) % MOD\n# ans = (ans * solve(b, c)) % MOD\n# ans = (ans * solve(a, c)) % MOD\n# print(ans)\n#\n# print(time.time() - t0)\n", "\"\"\"http://codeforces.com/problemset/problem/869/C\"\"\"\n\ndef calc(x,y):\n    si, ans = 1, 1\n    n,m = min(x,y), max(x,y)\n    for i in range(1,n+1):\n        si = (si * (n-i+1) * (m-i+1) // i)\n        ans = (ans + si)\n    return ans % MOD\n\n\nMOD = 998244353\na,b,c = list(map(int, input().split()))\nrb = calc(a,b)\nrp = calc(a,c)\nbp = calc(b,c)\nres = rb*rp*bp % MOD\nprint(res)\n\n", "a, b, c = map(int, input().split())\nM = 998244353\ndef calc(a, b) :\n\tif a > b:\n\t\ta, b = b, a\n\tans = 0\n\tt = 1\n\tfor i in range(a + 1):\n\t\tans = (ans + t) % M\n\t\tt = t * (a - i) * (b - i) * pow(i + 1, M - 2, M) % M\n\treturn ans\nans = calc(a, b) * calc(b, c) * calc(a, c) % M\nprint(ans)", "mod = 998244353\n\ndef binpow(num, p):\n    if(p == 0):\n        return 1\n    if(p % 2 == 0):\n        return binpow((num * num) % mod, p // 2)\n    return (num * binpow(num, p - 1)) % mod\n\ndef rev(num):\n    return binpow(num, mod - 2)\n\ndef solve(a, b):\n    result = 1\n    prev = 1\n    for k in range(1, min(a, b) + 1):\n        now = (prev * (a - (k - 1)) * (b - (k - 1)) * rev(k)) % mod\n        result  = (result + now) % mod\n        prev = now\n    return (result) % mod\n\na, b, c = list(map(int, input().split()))\n\nres1 = solve(a, b)\nres2 = solve(b, c)\nres3 = solve(a, c)\n\nprint((res1 * res2 * res3) % mod)\n"]