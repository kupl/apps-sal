["n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni, j = 0, 0\nwhile i < n:\n    while j < m and b[j] < a[i]:\n        j += 1\n    if j == m:\n        break\n    j += 1\n    i += 1\nprint(n - i)", "n, m = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nA.sort()\nB.sort()\ni, j = len(A) - 1, len(B) - 1\nres = 0\n\nwhile i >= 0 and j >= 0:\n    if A[i] > B[j]:\n        res += 1\n        i -= 1\n    else:\n        j -= 1\n        i -= 1\nres += i + 1\nprint(res)\n", "n, m = map(int, input().split())\ngeorg = list(map(int, input().split()))\n\ngood = list(map(int, input().split()))\ngood.sort()\ngeorg.sort()\ncandoc = 0\nj = 0\nfor i in range(min(n, m)):\n    while j < m and good[j] < georg[i]: j += 1\n    if j>=m:break\n    if good[j] >= georg[i]:\n        candoc += 1\n        j+=1\n    if j>=m:break\nprint(n-candoc)", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nb.sort()\ni=0\nj=0\nwhile i<n and j<m:\n    if a[i]<=b[j]:\n        i+=1\n    j+=1\nprint(n-i)", "n,m=map(int,input().split())\ntreb=list(map(int,input().split()))\nest=list(map(int,input().split()))\nc=[0 for i in range(max(treb[-1],est[-1])+1)]\nfor i in range(n):\n    c[treb[i]-1]+=1\ni=m-1\ne=n\nq=treb[-1]\nwhile i!=-1:\n    d=True\n    for j in range(min(est[i]-1,q),-1,-1):\n        if c[j]>0:\n            q=j\n            c[j]-=1\n            d=False\n            e-=1\n            break\n    if d:\n        print(e)\n        return\n    i-=1\nprint(e)", "import sys\nimport math\nimport heapq\nimport random\nimport collections\nimport bisect\nimport datetime\n\ndef main():\n    # sys.stdin = open('input.txt', 'r')\n    # sys.stdout = open('output.txt', 'w')\n\n    n = list(map(int, input().strip().split()))\n    l1 = list(map(int, input().strip().split()))\n    l2 = list(map(int, input().strip().split()))\n    count = 0\n\n    for i in l1:\n        pos = bisect.bisect_left(l2, i)\n\n        if pos < len(l2) and l2[pos] >= i:\n                l2 = l2[pos+1:]\n\n        else:\n            count = count + 1\n\n    print(count)\n\n    # sys.stdin.close()\n    # sys.stdout.close()\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n,m=list(map(int,input().split()))\n    a=list(map(int,input().split()))\n    b=list(map(int,input().split()))\n    \n    c=list()\n\n    for x in a:\n        if x in b:\n            b.pop(b.index(x))\n        else:\n            c.append(x)\n    L=0\n    if len(c)==0:\n        return 0\n    i=0\n    while len(c):\n        while i<len(b) and (b[i]<c[0]):\n            i+=1\n        if i==len(b):\n            return len(c)\n        b.pop(i)\n        c.pop(0)\n    return len(c)\n\n        \nprint(main())\n", "n, m = tuple(map(int,input().split(' ')))\na = list(map(int,input().split(' ')))\nb = list(map(int,input().split(' ')))\nwhile len(a)>0 and len(b)>0:\n    if a[0]<=b[0]: a.pop(0)\n    b.pop(0)\nprint(len(a))\n", "from bisect import bisect_left\ndef binr(a, x, lo=0, hi=None):   \n    hi = hi if hi is not None else len(a)  \n    pos = bisect_left(a,x,lo,hi)    \n    if pos < hi:\n        return pos\n    else:\n        return -1\nn,m = map(int,input().split())\nd = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nfl = True\nans = 0\nfor i in d:\n    if (i not in a):\n        fl = False\nif fl == True:\n    print(0)\n    return\nfor i in range(n):\n    if d[i] in a:\n        d[i] = 0\n    r = binr(a,d[i])\n    if r == -1:\n        ans += 1\n    else:\n        a[r] = -1\n    a.sort()\nprint(ans)   ", "import re\n\ntemp=input()\ntemp=re.split(' ',temp)\nn=eval(temp[0])\nm=eval(temp[1])\ntemp=input()\ntemp=re.split(' ',temp)\na=[]\nfor i in range(n):\n  a.append(eval(temp[i]))\ni=0\ntemp=input()\ntemp=re.split(' ',temp)\nfor j in range(m):\n  x=eval(temp[j])\n  if i>=n: continue\n  if x>=a[i]: i+=1\nans=n-i\nprint(ans)", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ni = j = 0\nwhile i < n:\n    while j < m and b[j] < a[i]: j += 1\n    if j == m: break\n    j += 1\n    i += 1\nprint(n - i)", "R = lambda: list(map(int, input().split()))\nn, m = R()\na = R()\nb = R()\nc = 0\ni = j = 0\nwhile i < n:\n  while j < m and b[j] < a[i]:\n    j += 1\n  if j == m:\n    break\n  c += 1\n  i += 1\n  j += 1\nprint(n - c)", "R = lambda: list(map(int, input().split()))\nn, m = R()\na = R()\nb = R()\ni = j = 0\nwhile i < n and j < m:\n  if b[j] < a[i]:\n    j += 1\n  else:\n    i += 1\n    j += 1\nprint(n - i)", "R = lambda: list(map(int, input().split()))\nn, m = R()\na = R()\nb = R()\ni = j = 0\nwhile i < n and j < m:\n  if b[j] >= a[i]:\n    i += 1\n  j += 1\nprint(n - i)", "'''\nCreated on Jun 4, 2014\n\n@author: Nathaniel\n'''\n\nimport bisect\n\ndef nexti():\n    return list(map(int, input().split()))\ndef nextl():\n    return list(map(int, input().split()))\n\nn, m = nexti()\na = sorted(nextl())\nb = sorted(nextl())\ncount = 0\ni=0\nj=0\nn = len(a)\n\nwhile i < n:\n    bis = bisect.bisect_left(b, a[i])\n    if bis != len(b):\n        count+=1\n        del b[bis]\n    i+=1\nprint(n - count)\n        \n\n", "n, m = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\nb = sorted(list(map(int, input().split())))\n\ni, j = 0, 0\nwhile i < n and j < m:\n\tif a[i] <= b[j]:\n\t\ti += 1\n\tj += 1\nprint(n-i)\n", "import sys\nimport math\n\nn, m = [int(x) for x in (sys.stdin.readline()).split()]\nan = [int(x) for x in (sys.stdin.readline()).split()]\nbm = [int(x) for x in (sys.stdin.readline()).split()]\n\ni = 0\nj = 0\nres = n\nwhile(i < n):\n    while(j < m and an[i] > bm[j]):\n        j += 1  \n        \n    if(j < m and an[i] <= bm[j]):\n        res -= 1\n        j += 1\n    \n    i += 1\n    \nprint(res)\n", "n, m = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nptr = 0\nfound = 0\nfor task in a:\n\twhile ptr < m and b[ptr] < task:\n\t\tptr += 1\n\tif ptr < m and b[ptr] >= task:\n\t\tfound += 1\n\t\tptr += 1\nprint(n - found)\n", "def main():\n    n, m = map(int, input().split())\n    aa = list(map(int, input().split()))\n    it = iter(list(map(int, input().split())))\n    try:\n        for i, a in enumerate(aa, 1):\n            b = next(it)\n            while b < a:\n                b = next(it)\n    except StopIteration:\n        i -= 1\n    print(n - i)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "I=lambda:list(map(int,input().split()))\nn,m=I();a=I();b=I()\ni=j=0\nwhile(i<n and j<m):\n    i+=1*(a[i]<=b[j]);j+=1\nprint(n-i)", "# coding: utf-8\nfrom collections import Counter\nn, m = [int(i) for i in input().split()]\na = Counter([int(i) for i in input().split()])\nb = Counter([int(i) for i in input().split()])\naa = list((a-b).elements())\nbb = list((b-a).elements())\ncnt = sum(a.values())-len(aa)\naa.sort()\nbb.sort()\ni = 0\nj = 0\nwhile i < len(aa):\n    while j < len(bb) and bb[j]<aa[i]:\n        j += 1\n    if j < len(bb) and bb[j]>aa[i]:\n        cnt += 1\n        j += 1\n    i += 1\nprint(n-cnt)\n", "# coding: utf-8\nfrom collections import Counter\nn, m = [int(i) for i in input().split()]\na = Counter([int(i) for i in input().split()])\nb = Counter([int(i) for i in input().split()])\naa = sorted(list((a-b).elements()))\nbb = sorted(list((b-a).elements()))\ncnt = sum(a.values())-len(aa)\ni = 0\nj = 0\nwhile i < len(aa):\n    while j < len(bb) and bb[j]<aa[i]:\n        j += 1\n    if j < len(bb) and bb[j]>aa[i]:\n        cnt += 1\n        j += 1\n    i += 1\nprint(n-cnt)\n", "R = lambda:list(map(int,input().split()))\nn,m = R()\na = R()\nb = R()\nr = 0\nfor x in a:\n    c = 0\n    for y in b:\n        if y>=x:\n            c = 1\n            b.pop(b.index(y))\n            break\n    if c == 0:\n        r += 1\nprint(r)", "n, m = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nj = -1\n\ncnt = 0\n\nfor v in a:\n    j += 1\n    while j < m and v > b[j]:\n        j += 1\n\n    if j >= m:\n        cnt += 1\n\nprint(cnt)", "n, m = map(int, input().split())\nc = list(sorted(map(int, input().split())))\nd = list(sorted(map(int, input().split())))\ni, j = 0, 0\nwhile i < n and j < m:\n    if c[i] <= d[j]:\n        i += 1\n    j += 1\nprint(n-i)"]