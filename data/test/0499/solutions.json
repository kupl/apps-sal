["def main():\n    n = int(input())\n    s = input()\n    \n    b, g, r = [s.count(i) for i in \"BGR\"]\n    \n    if min(b, g, r) > 0:\n        print(\"BGR\")\n        return\n    if max(b, g, r) == n:\n        if b == n: print(\"B\")\n        if g == n: print(\"G\")\n        if r == n: print(\"R\")\n        return\n    if max(b, g, r) == 1:\n        if b == 0: print(\"B\")\n        if g == 0: print(\"G\")\n        if r == 0: print(\"R\")\n        return\n    if max(b, g, r) == n - 1:\n        if b == n - 1: print(\"GR\")\n        if g == n - 1: print(\"BR\")\n        if r == n - 1: print(\"BG\")\n        return \n    \n    print(\"BGR\")\n    \n    \nmain()", "\n    \nx = int(input())\ny = input()\nr = y.count('R')\ng = y.count('G')\nb = y.count('B')\n\nif r>=1 and g>=1 and b>=1:\n    print(\"BGR\")\nelif r>=1 and g>=1:\n    if r==1 and g==1:\n        print(\"B\")\n    elif r==1:\n        print(\"BR\")\n    elif g==1:\n        print(\"BG\")\n    else:\n        print(\"BGR\")\nelif r>=1 and b>=1:\n    if r==1 and b==1:\n        print(\"G\")\n    elif r==1:\n        print(\"GR\")\n    elif b==1:\n        print(\"BG\")\n    else:\n        print(\"BGR\")\nelif b>=1 and g>=1:\n    if b==1 and g==1:\n        print(\"R\")\n    elif b==1:\n        print(\"BR\")\n    elif g==1:\n        print(\"GR\")\n    else:\n        print(\"BGR\")\nelif r>=1:\n    print(\"R\")\nelif g>=1:\n    print(\"G\")\nelse:\n    print(\"B\")\n", "n = int(input())\ns = input()\ng = s.count('G')\nb = s.count('B')\nr = s.count('R')\n\nif g != 0 and r != 0 and b != 0: print('BGR')\nelif g==0 and r == 0: print('B')\nelif g==0 and b == 0: print('R')\nelif b==0 and r == 0: print('G')\nelif g==0:\n    \n    if r >= 2: print('B',end = '')\n    print('G',end = '')\n    if b >= 2: print('R', end = '')\nelif r==0:\n    \n    if g >= 2: print('B',end = '')\n    if b >= 2: print('G', end = '')\n    print('R',end = '')\nelif b==0:\n    print('B',end = '')\n    if r >= 2: print('G',end = '')\n    if g >= 2: print('R', end = '')", "from itertools import accumulate\n\nn = int(input())\ns = input()\nD = {'R':0, 'G':0, 'B':0}\nfor c in s: D[c] += 1\nL = ['R', 'G', 'B']\nL.sort(key = lambda c: -D[c])\nif all((D[c] > 0 for c in L)) or D[L[0]] > 1 and D[L[1]] > 1:\n    print('BGR')\nelif D[L[1]] == 1 and D[L[0]] > 1:\n    L.pop(0)\n    L.sort()\n    print(''.join(L))\nelif D[L[1]] == 1 and D[L[0]] == 1:\n    print(L[2])\nelse:\n    print(L[0])\n    \n", "le = int(input())\ns = input()\nl = [0,0,0]#B,G,R\nfor i in range(le):\n    c = s[i]\n    if c == 'B':\n        l[0] += 1\n    elif c == 'G':\n        l[1] += 1\n    else:\n        l[2] += 1\nif min(l) > 0:\n    print('BGR')\nelif l[0] == 0 and l[1] == 0:\n    print('R')\nelif l[2] == 0 and l[1] == 0:\n    print('B')\nelif l[0] == 0 and l[2] == 0:\n    print('G')\nelif l[0] == 0:\n    if l[1] == 1 and l[2] == 1:\n        print('B')\n    elif l[1] == 1:\n        print('BG')\n    elif l[2] == 1:\n        print('BR')\n    else:\n        print('BGR')\nelif l[1] == 0:\n    if l[0] == 1 and l[2] == 1:\n        print('G')\n    elif l[0] == 1:\n        print('BG')\n    elif l[2] == 1:\n        print('GR')\n    else:\n        print('BGR')\nelse:\n    if l[1] == 1 and l[0] == 1:\n        print('R')\n    elif l[0] == 1:\n        print('BR')\n    elif l[1] == 1:\n        print('GR')\n    else:\n        print('BGR')\n    \n        \n", "n = int(input())\ns = input().strip()\nif 'R' in s and 'G' in s and 'B' in s:\n\tans = \"RGB\"\nelif 'R' in s and 'G' in s:\n\ta = 'R'\n\tb = 'G'\n\tc = 'B'\n\tif s.count(a) > 1 and s.count(b) > 1:\n\t\tans = \"RGB\"\n\telse:\n\t\tif n == 2:\n\t\t\tans = c\n\t\telse:\n\t\t\tif s.count(a) > s.count(b):\n\t\t\t\tans = b+c\n\t\t\telse:\n\t\t\t\tans = a+c\nelif 'R' in s and 'B' in s:\n\ta = 'R'\n\tc = 'G'\n\tb = 'B'\n\tif s.count(a) > 1 and s.count(b) > 1:\n\t\tans = \"RGB\"\n\telse:\n\t\tif n == 2:\n\t\t\tans = c\n\t\telse:\n\t\t\tif s.count(a) > s.count(b):\n\t\t\t\tans = b+c\n\t\t\telse:\n\t\t\t\tans = a+c\nelif 'G' in s and 'B' in s:\n\tc = 'R'\n\ta = 'G'\n\tb = 'B'\n\tif s.count(a) > 1 and s.count(b) > 1:\n\t\tans = \"RGB\"\n\telse:\n\t\tif n == 2:\n\t\t\tans = c\n\t\telse:\n\t\t\tif s.count(a) > s.count(b):\n\t\t\t\tans = b+c\n\t\t\telse:\n\t\t\t\tans = a+c\nelse:\n\tans = s[0]\nret = []\nfor char in ans:\n\tret.append(char)\nret.sort()\nprint (''.join(ret))", "# You lost the game.\nn = int(input())\nch = str(input())\nr = \"\"\nR = ch.count(\"R\")\nB = ch.count(\"B\")\nG = ch.count(\"G\")\nif R and B and G:\n    print(\"BGR\")\nelif (R >= 2 and B >= 2) or (G >= 2 and R >= 2) or (G >= 2 and B >= 2):\n    print(\"BGR\")\nelif R >= 2 and (B == 1 or G == 1): \n    print(\"BG\")\nelif B >= 2 and (R == 1 or G == 1):\n    print(\"GR\")\nelif G >= 2 and (B == 1 or R == 1):\n    print(\"BR\")\nelif B and G:\n    print(\"R\")\nelif R and G:\n    print(\"B\")\nelif B and R:\n    print(\"G\")\nelif B:\n    print(\"B\")\nelif G:\n    print(\"G\")\nelse:\n    print(\"R\")\n\n\n\n\n", "#!/usr/bin/env python3\nn = int(input())\ns = input()\nt = 'BGR'\na = [s.count(c) for c in t]\nans = ''\nfor i in range(3):\n    x, y, z = a[i], a[(i+1)%3], a[(i+2)%3]\n    if (x >= 1 and y == z == 0) or (y >= 1 and z >= 1) or (x >= 1 and (y >= 2 or z >= 2)):\n        ans += t[i]\nprint(ans)\n", "n = int(input())\ns = input()\nb = s.count('B')\nr = s.count('R')\ng = s.count('G')\nif 'B' in s and 'G' in s and 'R' in s:\n    print('BGR')\nelif s == 'B' * n:\n    print('B')\nelif s == 'G' * n:\n    print('G')\nelif s == 'R' * n:\n    print('R')\nelif 'B' not in s:\n    if g == r == 1:\n        print('B')\n    elif g > 1 and r > 1:\n        print('BGR')\n    elif g == 1 and r > 1: #grr br g; grr gr b\n        print('BG')\n    elif g > 1 and r == 1:\n        print('BR')\nelif 'G' not in s:\n    if b == r == 1:\n        print('G')\n    elif b > 1 and r > 1:\n        print('BGR')\n    elif b == 1 and r > 1: # brr gr b; brr br g\n        print('BG')\n    elif b > 1 and r == 1: # bbr br g; bbr bg r;\n        print('GR')\nelif 'R' not in s:\n    if b == g == 1:\n        print('R')\n    elif b > 1 and g > 1:\n        print('BGR')\n    elif b == 1 and g > 1:\n        print('BR')\n    elif b > 1 and g == 1:\n        print('GR')\n", "def main():\n    n = int(input())\n    s = input()\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    if r > 0 and g > 0 and b > 0:\n        print('BGR')\n        return\n    r = min(r, 2)\n    g = min(g, 2)\n    b = min(b, 2)\n    a = r, 'R'\n    c = b, 'B'\n    b = g, 'G'\n    if a[0] < b[0]:\n        a, b = b, a\n    if b[0] < c[0]:\n        b, c = c, b\n    if a[0] < b[0]:\n        a, b = b, a\n    if a[0] == 2 and b[0] == 2:\n        print('BGR')\n        return\n    if a[0] == 2 and b[0] == 1:\n        print(''.join(sorted((c[1], b[1]))))\n    if a[0] > 0 and b[0] == 0:\n        print(a[1])\n    if a[0] == 1 and b[0] == 1:\n        print(c[1])\n\n\nmain()\n", "n = int(input())\nc = (lambda s: {(s.count(color), color) for color in 'BGR' if s.count(color)})(input())\nif len(c) == 3 or (len(c) == 2 and min(c)[0] > 1):\n    print('BGR')\nelif len(c) == 1:\n    print(min(c)[1])\nelif max(c)[0] > 1:\n    print(*sorted(set('BGR') - {max(c)[1]}), sep = '')\nelse:\n    print(*(set('BGR') - {x[1] for x in c}))\n", "n = int(input())\ns = input()\nst = {'R', 'G', 'B'}\nif s.count(s[0]) == n:\n    print(s[0])\nelif st == set(s):\n    print(''.join(sorted(list(st))))\nelif len(set(s)) == 2:\n    if s.count(list(set(s))[0]) > 1 and s.count(list(set(s))[1]) > 1:\n        print(''.join(sorted(list(st))))\n    elif s.count(list(set(s))[0]) > 1:\n        print(''.join(sorted(list(st - set(s))[0] + list(set(s))[1])))\n    elif s.count(list(set(s))[1]) > 1:\n        print(''.join(sorted(list(st - set(s))[0] + list(set(s))[0])))\n    else:\n        print(list(st - set(s))[0])", "a = int(input())\nper = input()\nr = 0\ng=0\nb=0\nfor i in per:\n    if i == 'R':\n        r+=1\n    if i == 'G':\n        g+=1\n    if i == 'B':\n        b+=1\n\nif r !=0 and b!=0 and g !=0:\n    print('BGR')\nelif r == 0 and b ==0:\n    print('G')\nelif r == 0 and g == 0:\n    print('B')\nelif g == 0 and b == 0:\n    print('R')\nelif r == 0:\n    if g > 1:\n        print('B', end='')    \n    \n    if b > 1:\n        \n        print('G', end ='')\n    print('R', end = '')\n    \nelif g == 0:\n    if r > 1:\n        print('B',end ='')   \n    print('G', end='')\n    if b > 1:\n        print('R', end ='')    \n    \n    \n    \n    \nelif b == 0:\n    print('B', end = '')\n    if r > 1:\n        print('G', end ='')    \n    if g > 1:\n        print('R', end='')    \n    \n    \n    \n    ", "def main():\n    n = int(input())\n    q = str(input())\n    # 0 = B, 1 = G, 2 = R\n    d = [0] * 3\n\n    for e in q:\n        if e == \"B\":\n            d[0] += 1\n        elif e == \"G\":\n            d[1] += 1\n        else:\n            d[2] += 1\n\n    answer = \"\"\n\n    if d[0] != 0 and d[1] != 0:\n        answer += \"R\"\n        if d[0] > 1:\n            answer += \"G\"\n\n        if d[1] > 1:\n            answer += \"B\"\n\n    if d[0] != 0 and d[2] != 0:\n        answer += \"G\"\n        if d[0] > 1:\n            answer += \"R\"\n\n        if d[2] > 1:\n            answer += \"B\"\n\n    if d[1] != 0 and d[2] != 0:\n        answer += \"B\"\n        if d[1] > 1:\n            answer += \"R\"\n\n        if d[2] > 1:\n            answer += \"G\"\n\n    if d[0] > 0 and d[1] == 0 and d[2] == 0:\n        answer += \"B\"\n\n    if d[1] > 0 and d[0] == 0 and d[2] == 0:\n        answer += \"G\"\n\n    if d[2] > 0 and d[0] == 0 and d[1] == 0:\n        answer += \"R\"\n\n    q = \"\"\n    for e in sorted(list(set(answer))):\n        q += e\n\n    print(q)\n\ndef __starting_point():\n    main()\n__starting_point()", "import collections\nimport math\n\nn = int(input())\ns = input()\na, b, c = s.count('B'), s.count('G'), s.count('R')\nif a * b * c != 0 or (a >= 2 and b >= 2) or (a >= 2 and c >= 2) or (c >= 2 and b >= 2):\n    print('BGR')\nelif a != 0 and b == 0 and c == 0:\n    print('B')\nelif a == 0 and b != 0 and c == 0:\n    print('G')\nelif a == 0 and b == 0 and c != 0:\n    print('R')\nelif a == 0:\n    if b == c:\n        print('B')\n    elif b > c:\n        print('BR')\n    else:\n        print('BG')\nelif b == 0:\n    if a == c:\n        print('G')\n    elif a > c:\n        print('GR')\n    else:\n        print('BG')\nelif c == 0:\n    if b == a:\n        print('R')\n    elif b > a:\n        print('BR')\n    else:\n        print('GR')", "t = input()\nd = input()\nr = d.count('R')\ng = d.count('G')\nb = d.count('B')\t\nif (r>0 and g>0 and b>0):\n\tprint('BGR')\n\treturn;\nif (r==0 and g==0):\n\tprint('B')\n\treturn\nif (r==0 and b==0):\n\tprint('G')\n\treturn\nif (b==0 and g==0):\n\tprint('R')\n\treturn\nif (b==1 and r ==1):\n\tprint ('G')\n\treturn\nif (b==1 and g ==1):\n\tprint ('R')\n\treturn\nif (r==1 and g ==1):\n\tprint ('B')\n\treturn\nif (b>1 and r ==1):\n\tprint ('GR')\n\treturn\nif (b>1 and g ==1):\n\tprint ('GR')\n\treturn\nif (r>1 and g ==1):\n\tprint ('BG')\n\treturn\nif (r>1 and b ==1):\n\tprint ('BG')\n\treturn\nif (g>1 and b ==1):\n\tprint ('BR')\n\treturn\nif (g>1 and r ==1):\n\tprint ('BR')\n\treturn\nprint('BGR')", "n = int(input())\ns = input()\nb = 0\ng = 0\nr = 0\nfor i in range(n):\n    if s[i] == 'B':\n        b += 1\n    elif s[i] == 'G':\n        g += 1\n    else:\n        r += 1\nif b == 0:\n    if g == 0:\n        print('R')\n    elif r == 0:\n        print('G')\n    elif g == 1:\n        if r == 1:\n            print('B')\n        else:\n            print('BG')\n    elif r == 1:\n        print('BR')\n    else:\n        print('BGR')\nelif g == 0:\n    if b == 0:\n        print('R')\n    elif r == 0:\n        print('B')\n    elif b == 1:\n        if r == 1:\n            print('G')\n        else:\n            print('BG')\n    elif r == 1:\n        print('GR')\n    else:\n        print('BGR')\nelif r == 0:\n    if b == 0:\n        print('G')\n    elif g == 0:\n        print('B')\n    elif b == 1:\n        if g == 1:\n            print('R')\n        else:\n            print('BR')\n    elif g == 1:\n        print('GR')\n    else:\n        print('BGR')\nelse:\n    print('BGR')", "#!/usr/bin/env python3\n\nn = int(input())\ns = input()\n\nb, g, r = 0, 0, 0\nfor i in range(0, len(s)):\n    if s[i] == 'B':\n        b += 1\n    elif s[i] == 'G':\n        g += 1\n    elif s[i] == 'R':\n        r += 1\n    else:\n        assert False\n\nif b != 0 and g == 0 and r == 0 or \\\n        b == 0 and g == 1 and r == 1:\n            print('B')\nelif b == 0 and g != 0 and r == 0 or \\\n        b == 1 and g == 0 and r == 1:\n            print('G')\nelif b == 0 and g == 0 and r != 0 or \\\n        b == 1 and g == 1 and r == 0:\n            print('R')\nelif b > 1 and g == 1 and r == 0 or\\\n        b > 1 and g == 0 and r == 1:\n            print('GR')\nelif b == 0 and g > 1 and r == 1 or\\\n        b == 1 and g > 1 and r == 0:\n            print('BR')\nelif b == 0 and g == 1 and r > 1 or\\\n        b == 1 and g == 0 and r > 1:\n            print('BG')\nelse:\n    print('BGR')\n", "from collections import namedtuple\n\ndef __starting_point():\n\n    n = int(input())\n    cards = input()\n\n    r = 0\n    g = 0\n    b = 0\n    for card in cards:\n        if card == \"R\":\n            r += 1\n        elif card == \"G\":\n            g += 1\n        elif card == \"B\":\n            b += 1\n\n    #print(r,g,b)\n\n    colornum = 0\n    if r:\n        colornum += 1\n    if g:\n        colornum += 1\n    if b:\n        colornum += 1\n\n    res = \"\"\n    if colornum == 3:\n        res = \"BGR\"\n    elif colornum == 2:\n        if r == 1:\n            if b == 1:\n                res = \"G\"\n            elif b > 1:\n                res = \"GR\"\n            elif g == 1:\n                res = \"B\"\n            elif g > 1:\n                res = \"BR\"\n        elif g == 1:\n            if r == 1:\n                res = \"B\"\n            elif b == 1:\n                res = \"R\"\n            elif r > 1:\n                res = \"BG\"\n            elif b > 1:\n                res = \"GR\"\n        elif b == 1:\n            if r == 1:\n                res = \"G\"\n            elif g == 1:\n                res = \"R\"\n            elif r > 1:\n                res = \"BG\"\n            elif g > 1:\n                res = \"BR\"\n        else:\n            res = \"BGR\"\n    else:\n        if r:\n            res = \"R\"\n        elif g:\n            res = \"G\"\n        elif b:\n            res = \"B\"\n\n    print(res)\n__starting_point()", "'''\nCatherine has a deck of n cards, each of which is either red, green, or blue.\n As long as there are at least two cards left, she can do one of two actions:\n\n    take any two (not necessarily adjacent) cards with different colors and \n    exchange them for a new card of the third color;\n    take any two (not necessarily adjacent) cards with the same color and \n    exchange them for a new card with that color. \n\nShe repeats this process until there is only one card left. What are the \npossible colors for the final card?\n\nInput\n\nThe first line of the input contains a single integer n (1\u2009\u2264\u2009n\u2009\u2264\u2009200) \u2014 \nthe total number of cards.\n\nThe next line contains a string s of length n \u2014 the colors of the cards. \ns contains only the characters 'B', 'G', and 'R', representing blue, green, \nand red, respectively.\nOutput\n\nPrint a single string of up to three characters \u2014 the possible colors of \nthe final card (using the same symbols as the input) in alphabetical order.\n'''\n\nimport io\nimport sys\nimport time\nimport random\n#~ start = time.clock()\n#~ test ='''5\n#~ BBBBB'''\n#~ test = '''2\n#~ RB'''\n#~ test = '''3\n#~ GRG'''\n#~ test = '''3\n#~ RGB'''\n#~ test = '''5\n#~ RGBBB'''\n#~ test = '''2\n#~ RG'''\n#~ test = '''3\n#~ RRG'''\n#~ test = '''3\n#~ BBG'''\n\n#~ sys.stdin = io.StringIO(test)\n\nn = int(input())\ncols = 'RGB'\ncounts = {'R':0,'G':0,'B':0}\nfor c in input():\n   counts[c] += 1\n\n# single color\n# 2 colors -> c1, c2\n# 3 colors\n\ndef gettwocolors(counts):\n   if counts['R']==0:\n      return \"GB\"\n   if counts['G']==0:\n      return \"RB\"\n   if counts['B']==0:\n      return \"RG\"\n      \ndef printcols(cols):\n   print(sortedcols(cols))\n\ndef sortedcols(cols):\n   return \"\".join(sorted(list(cols)))\n   \ncomplement = { \n   sortedcols(\"RG\"):\"B\",\n   sortedcols(\"RB\"):\"G\",\n   sortedcols(\"GB\"):\"R\" \n}   \n\nif counts['R']>0 and counts['G']>0 and counts['B']>0:\n   printcols(\"RGB\")\nelse:\n   c1,c2 = gettwocolors(counts)\n   if counts[c1]==0:\n      printcols(c2)\n   elif counts[c2]==0:\n      printcols(c1)\n   else:\n      # really two colors\n      if counts[c1]>=2 and counts[c2]>=2:\n         printcols(\"RGB\")\n      elif counts[c1]>=2:\n         printcols( c2+complement[sortedcols(c1+c2)] )\n      elif counts[c2]>=2:\n         printcols( c1+complement[sortedcols(c1+c2)] )\n      else:\n         printcols( complement[sortedcols(c1+c2)] )\n         \n#~ dur = time.clock()-start\n#~ print(\"Time:\",dur)\n", "n=int(input())\ns=input()\nd={}\nB,G,R=s.count('B'),s.count('G'),s.count('R')\nif B==0 and G==0: print('R')\nelif B==0 and R==0: print('G')\nelif G==0 and R==0: print('B')\nelif B==0 and G==1 and R==1: print('B')\nelif B==1 and G==0 and R==1: print('G')\nelif B==1 and G==1 and R==0: print('R')\nelif B==0 and G==1: print('BG')\nelif B==0 and R==1: print('BR')\nelif G==0 and B==1: print('BG')\nelif G==0 and R==1: print('GR')\nelif R==0 and B==1: print('BR')\nelif R==0 and G==1: print('GR')\nelse: print('BGR')", "n = int(input())\ns = input()\nif \"R\" in s and \"G\" in s and \"B\" in s:\n    print('BGR')\n    return\nif 'R' not in s and 'G' not in s:\n    print('B')\n    return\nif 'R' not in s and 'B' not in s:\n    print('G')\n    return\nif 'B' not in s and 'G' not in s:\n    print('R')\n    return\n\nif \"R\" in s and \"G\" in s:\n    answer = 'B'\n    if s.count('R') > 1:\n        answer += 'G'\n    if s.count('G') > 1:\n        answer += 'R'\n    print(answer)\n    return\nif \"R\" in s and \"B\" in s:\n    answer = 'G'\n    if s.count('R') > 1:\n        answer = 'B' + answer\n    if s.count('B') > 1:\n        answer += 'R'\n    print(answer)\n    return\nif \"B\" in s and \"G\" in s:\n    answer = 'R'\n    if s.count('B') > 1:\n        answer = 'G' + answer\n    if s.count('G') > 1:\n        answer = 'B' + answer\n    print(answer)\n    return", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\ndef pr(d, k):\n    ans = []\n    for i in d.keys():\n        if d[i] == k:\n            ans = i\n    return ans\n\nn   = int(input())\na   = list(input())\n\nstart = time.time()\n\nd = {'R' :0, 'G' :0, 'B' : 0}\n\nfor i in a:\n    d[i] += 1\n\nb = list(set(a))\n\nif len(b) == 1:\n    ans = b[0]\nelif len(b) == 2:\n    if d[b[0]] == 1 and d[b[1]] == 1:\n        ans = pr(d, 0)\n    elif d[b[0]] == 1 :\n        ans = b[0]+pr(d, 0)\n    elif d[b[1]] == 1 :\n        ans = b[1]+pr(d, 0)\n    else:\n        ans = 'BGR'\nelse:\n    ans = 'BGR'\n\nfor i in sorted(ans):\n    print(i, end='')\nprint()\n\nfinish = time.time()\n#print(finish - start)\n", "3\n\nn = int(input())\ns = str(input())\n\ncolors = set()\nfor i in s:\n    colors.add(i)\n\nif len(colors) == 1:\n    print(s[0])\nelif len(colors) == 3:\n    print(\"BGR\")\nelse:\n    if s.count(\"R\") == 0:\n        if s.count(\"G\") >= 2 and s.count(\"B\") >= 2:\n            print(\"BGR\")\n        elif s.count(\"G\") >=2 and s.count(\"B\") == 1:\n            print(\"BR\")\n        elif s.count(\"G\") == 1 and s.count(\"B\") >= 2:\n            print(\"GR\")\n        elif s.count(\"G\") == 1 and s.count(\"B\") == 1:\n            print(\"R\")\n    elif s.count(\"G\") == 0:\n        if s.count(\"R\") >= 2 and s.count(\"B\") >= 2:\n            print(\"BGR\")\n        elif s.count(\"R\") >=2 and s.count(\"B\") == 1:\n            print(\"BG\")\n        elif s.count(\"R\") == 1 and s.count(\"B\") >= 2:\n            print(\"GR\")\n        elif s.count(\"R\") == 1 and s.count(\"B\") == 1:\n            print(\"G\")\n    elif s.count(\"B\") == 0:\n        if s.count(\"R\") >= 2 and s.count(\"G\") >= 2:\n            print(\"BGR\")\n        elif s.count(\"R\") >=2 and s.count(\"G\") == 1:\n            print(\"BG\")\n        elif s.count(\"R\") == 1 and s.count(\"G\") >= 2:\n            print(\"BR\")\n        elif s.count(\"R\") == 1 and s.count(\"G\") == 1:\n            print(\"B\")\n", "n = int(input())\ns = input()\nl = []\nv = [0,0,0]\n\ndef val(c):\n    if c == 'B':\n        return 0\n    elif c == 'G':\n        return 1\n    else:\n        return 2\n\nfor c in s:\n    l += [val(c)]\n    v[val(c)] += 1\n    \nif (len(set(l))) == 3:\n    print('BGR')\nelif (len(set(l))) == 1:\n    print(s[0])\nelse:\n    if v[0] == 1 or v[1] == 1 or v[2] == 1:\n        a = ''\n        if v[0] == 0:\n            a = 'B'\n        elif v[1] == 0:\n            a = 'G'\n        else:\n            a = 'R'\n        if max(v) > 1:\n            if v[0] == 1:\n                a += 'B'\n            elif v[1] == 1:\n                a += 'G'\n            else:\n                a += 'R'\n        for c in sorted(a):\n            print(c,end='')\n    else:\n        print('BGR')\n"]