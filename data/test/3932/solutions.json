["def DFS(x):\n    for i in range(x):\n        if(Seen[i][x]):\n            continue\n        if(Rem[i]>=C[x]):\n            if(Rem[i]==C[x] and len(Children[i])==0):\n                continue\n            Rem[i]-=C[x]\n            Parent[x]=i\n            Children[i].append(x)\n            return True\n    for i in range(x):\n        if(Seen[i][x]):\n            continue\n        Y=[]\n        for j in range(len(Children[i])):\n            child=Children[i][j]\n            Parent[child]=-1\n            Rem[i]+=C[child]\n            Seen[i][child]=True\n            Seen[child][i]=True\n            if(DFS(child)):\n                Seen[i][child]=False\n                Seen[child][i]=False\n                continue\n            Seen[i][child]=False\n            Seen[child][i]=False\n            Parent[child]=i\n            Rem[i]-=C[child]\n            Y.append(child)\n        Children[i]=list(Y)\n        if(Rem[i]>=C[x]):\n            if(Rem[i]==C[x] and len(Children[i])==0):\n                continue\n            Rem[i]-=C[x]\n            Children[i].append(x)\n            Parent[x]=i\n            return True\n    return False\n                \n        \n\n\n\n\nn=int(input())\n\nC=list(map(int,input().split()))\nRem=[-1]*n\nParent=[-1]*n\nChildren=[]\nSeen=[]\nfor i in range(n):\n    Seen.append([False]*n)\nC.sort(reverse=True)\n\nif(C[0]!=n or C.count(2)>0):\n    print(\"NO\")\n\nelse:\n    for i in range(n):\n        Rem[i]=C[i]-1\n        Children.append([])\n    Parent[0]=0\n    Ans=\"YES\"\n    for i in range(1,n):\n        if(DFS(i)==False):\n            Ans=\"NO\"\n            break\n    for i in range(n):\n        if(Rem[i]!=0 and C[i]!=1):\n            Ans=\"NO\"\n            break\n    print(Ans)\n            \n", "def DFS(x):\n    for i in range(x):\n        if(Seen[i][x]):\n            continue\n        if(Rem[i]>=C[x]):\n            if(Rem[i]==C[x] and len(Children[i])==0):\n                continue\n            Rem[i]-=C[x]\n            Parent[x]=i\n            Children[i].append(x)\n            return True\n    for i in range(x):\n        if(Seen[i][x]):\n            continue\n        Y=[]\n        for j in range(len(Children[i])):\n            \n            child=Children[i][j]\n            if(Seen[i][child]):\n                continue\n            Parent[child]=-1\n            Rem[i]+=C[child]\n            Seen[i][child]=True\n            Seen[child][i]=True\n            if(DFS(child)):\n                Seen[i][child]=False\n                Seen[child][i]=False\n                continue\n            Seen[i][child]=False\n            Seen[child][i]=False\n            Parent[child]=i\n            Rem[i]-=C[child]\n            Y.append(child)\n        Children[i]=list(Y)\n        if(Rem[i]>=C[x]):\n            if(Rem[i]==C[x] and len(Children[i])==0):\n                continue\n            Rem[i]-=C[x]\n            Children[i].append(x)\n            Parent[x]=i\n            return True\n    return False\n                \n        \n\n\n\n\nn=int(input())\n\nC=list(map(int,input().split()))\nRem=[-1]*n\nParent=[-1]*n\nChildren=[]\nSeen=[]\nfor i in range(n):\n    Seen.append([False]*n)\nC.sort(reverse=True)\n\nif(C[0]!=n or C.count(2)>0):\n    print(\"NO\")\n\nelse:\n    for i in range(n):\n        Rem[i]=C[i]-1\n        Children.append([])\n    Parent[0]=0\n    Ans=\"YES\"\n    for i in range(1,n):\n        if(DFS(i)==False):\n            Ans=\"NO\"\n            break\n    for i in range(n):\n        if(Rem[i]!=0 and C[i]!=1):\n            Ans=\"NO\"\n            break\n    print(Ans)\n            \n", "def DFS(x):\n\n    for i in range(x):\n\n        if(Seen[i][x]):\n\n            continue\n\n        if(Rem[i]>=C[x]):\n\n            if(Rem[i]==C[x] and len(Children[i])==0):\n\n                continue\n\n            Rem[i]-=C[x]\n\n            Parent[x]=i\n\n            Children[i].append(x)\n\n            return True\n\n    for i in range(x):\n\n        if(Seen[i][x]):\n\n            continue\n\n        Y=[]\n\n        for j in range(len(Children[i])):\n\n            \n\n            child=Children[i][j]\n\n            if(Seen[i][child]):\n\n                continue\n\n            Parent[child]=-1\n\n            Rem[i]+=C[child]\n\n            Seen[i][child]=True\n\n            Seen[child][i]=True\n\n            if(DFS(child)):\n\n                Seen[i][child]=False\n\n                Seen[child][i]=False\n\n                continue\n\n            Seen[i][child]=False\n\n            Seen[child][i]=False\n\n            Parent[child]=i\n\n            Rem[i]-=C[child]\n\n            Y.append(child)\n\n        Children[i]=list(Y)\n\n        if(Rem[i]>=C[x]):\n\n            if(Rem[i]==C[x] and len(Children[i])==0):\n\n                continue\n\n            Rem[i]-=C[x]\n\n            Children[i].append(x)\n\n            Parent[x]=i\n\n            return True\n\n    return False\n\n                \n\n        \n\n\n\n\n\n\n\n\n\nn=int(input())\n\n\n\nC=list(map(int,input().split()))\n\nRem=[-1]*n\n\nParent=[-1]*n\n\nChildren=[]\n\nSeen=[]\n\nfor i in range(n):\n\n    Seen.append([False]*n)\n\nC.sort(reverse=True)\n\n\n\nif(C[0]!=n or C.count(2)>0):\n\n    print(\"NO\")\n\n\n\nelse:\n\n    for i in range(n):\n\n        Rem[i]=C[i]-1\n\n        Children.append([])\n\n    Parent[0]=0\n\n    Ans=\"YES\"\n\n    for i in range(1,n):\n\n        if(DFS(i)==False):\n\n            Ans=\"NO\"\n\n            break\n\n    for i in range(n):\n\n        if(Rem[i]!=0 and C[i]!=1):\n\n            Ans=\"NO\"\n\n            break\n\n    print(Ans)\n\n            \n\n\n\n\n\n# Made By Mostafa_Khaled\n"]