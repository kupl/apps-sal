["\n\ndef f(s,e):\n\tif e%2:\n\t\treturn 1-s%2\n\telif s*2>e:\n\t\treturn s%2\n\telse:\n\t\treturn g(s,e//2)\ndef g(s,e):\n\tif 2*s>e:\n\t\treturn 1\n\telse:\n\t\treturn f(s,e//2)\n\na=[tuple(map(int,input().split())) for i in range(int(input()))]\nb=1\nfor i in a:\n\tb1=g(*i)|(f(*i)<<1)\n\tb=b1^3 if b==2 else b1\n\tif b==0:\n\t\tprint('0 0')\n\t\treturn\n\telif b==3:\n\t\tprint('1 1')\n\t\treturn\n\t\t\nif b==2:\n\tprint('1 0')\nelse:\n\tprint('0 1')\n\t\n", "\n\ndef f(s,e):\n\tif e%2:\n\t\treturn 1-s%2\n\telif s*2>e:\n\t\treturn s%2\n\telse:\n\t\treturn g(s,e//2)\ndef g(s,e):\n\tif 2*s>e:\n\t\treturn 1\n\telse:\n\t\treturn f(s,e//2)\n\na=[tuple(map(int,input().split())) for i in range(int(input()))]\nb=1\nfor i in a:\n\tb1=g(*i)|(f(*i)<<1)\n\tb=b1^3 if b==2 else b1\n\tif b==0:\n\t\tprint('0 0')\n\t\treturn\n\telif b==3:\n\t\tprint('1 1')\n\t\treturn\n\t\t\nif b==2:\n\tprint('1 0')\nelse:\n\tprint('0 1')\n\t\n", "def f(s,e):\n\tif e%2:\n\t\treturn 1-s%2\n\telif s*2>e:\n\t\treturn s%2\n\telse:\n\t\treturn g(s,e//2)\ndef g(s,e):\n\tif 2*s>e:\n\t\treturn 1\n\telse:\n\t\treturn f(s,e//2)\n \na=[tuple(map(int,input().split())) for i in range(int(input()))]\nb=1\nfor i in a:\n\tb1=g(*i)|(f(*i)<<1)\n\tb=b1^3 if b==2 else b1\n\tif b==0:\n\t\tprint('0 0')\n\t\treturn\n\telif b==3:\n\t\tprint('1 1')\n\t\treturn\n\t\t\nif b==2:\n\tprint('1 0')\nelse:\n\tprint('0 1')\n", "import sys\n\ninpy = [int(x) for x in sys.stdin.read().split()]\n\ndef win(s, e) :\n    if e == s :\n        return False\n    if e == s+1 :\n        return True\n    if e % 2 == 1 :\n        if s % 2 == 1 :\n            return False\n        return True\n    q = e//4\n    \n    if s <= q :\n        return win(s, q)\n    q = e//2\n    if(s > q) :\n        return (e-s) % 2 == 1\n    return True\n\ndef lose(s, e) :\n    q = e//2\n    if(s > q) :\n        return True\n    else :\n        return win(s, q)\n\nt = inpy[0]\nstart = (True, False)\ninpo = 1\nv = (True, True)\n\nfor tc in range(t):\n    if(inpo+1 >= len(inpy)) :\n        print('wtf')\n    s, e = inpy[inpo], inpy[inpo+1]\n    inpo = inpo+2\n    v = ((win(s, e), lose(s, e)))\n    if start[0] and start[1] :\n        break\n    if (not start[0]) and (not start[1]) :\n        break\n    if start[1] :\n        v = (not v[0], not v[1])\n    start = (v[1], v[0])\n\nif((start[0] != True and start[0] != False) or (start[1] != True and start[1] != False)) :\n    print('wtf')\nsw = 2\nif start[1] :\n    sw = sw-1\n    print(1, end = ' ')\nelse :\n    sw = sw-1\n    print(0, end = ' ')\nif start[0] :\n    print(1)\n    sw = sw-1\nelse :\n    print(0)\n    sw = sw-1\nif sw :\n    print(wtf)", "def win(s, e):\n    if e % 2:\n        return s % 2 ^ 1\n    if s > e // 2:\n        return s % 2\n    if s > e // 4:\n        return 1\n    \n    return win(s, e // 4)\n\n\ndef lose(s, e):\n    if s > e // 2:\n        return 1\n    \n    return win(s, e // 2)\n\n\ndef game(n):\n    res = [0, 1]\n    for i in range(n):\n        s, e = list(map(int, input().split()))\n        res[0], res[1] = res[win(s, e)], res[lose(s, e)]\n    \n    return res\n\nn = int(input())\nprint(*game(n))\n\n", "import sys\ninput = sys.stdin.readline\n\ndef win(s, e):\n    if e == s:\n        return False\n    elif e == s + 1:\n        return True\n    elif e & 1:\n        return s & 1 == 0\n    elif e // 2 < s:\n        return s & 1 == 1\n    elif e // 4 < s:\n        return True\n    else:\n        return win(s, e // 4)\n    \ndef lose(s, e):\n    if e // 2 < s:\n        return True\n    else:\n        return win(s, e // 2)\n    \ndef main():\n    res = [False, True]\n    for _ in range(int(input())):\n        s, e = [int(x) for x in input().split()]\n        if res == [True, True]:\n            continue\n        if res == [False, False]:\n            continue\n        cur = [win(s, e), lose(s, e)]\n        if res[0]:\n            cur = [not x for x in cur]\n        res = cur\n    print(*[int(x) for x in res])\n\nmain()  ", "import sys\ninput = sys.stdin.readline\n\ndef win(s, e):\n    if e == s:\n        return False\n    elif e == s + 1:\n        return True\n    elif e & 1:\n        return s & 1 == 0\n    elif e // 2 < s:\n        return s & 1 == 1\n    elif e // 4 < s:\n        return True\n    else:\n        return win(s, e // 4)\n    \ndef lose(s, e):\n    if e // 2 < s:\n        return True\n    else:\n        return win(s, e // 2)\n    \ndef main():\n    res = [False, True]\n    for _ in range(int(input())):\n        s, e = [int(x) for x in input().split()]\n        if res == [True, True]:\n            continue\n        if res == [False, False]:\n            continue\n        cur = [win(s, e), lose(s, e)]\n        if res[0]:\n            cur = [not x for x in cur]\n        res = cur\n    print(*[int(x) for x in res])\n\nmain()  ", "def win(s, e):\n    if e == s:return False\n    elif e == s + 1:return True\n    elif e & 1:return s & 1 == 0\n    elif e // 2 < s:return s & 1 == 1\n    elif e // 4 < s:return True\n    else:return win(s, e // 4)    \ndef lose(s, e):return (True if e // 2 < s else win(s, e // 2))       \ndef main():\n    res = [False, True]\n    for _ in range(int(input())):\n        s, e = [int(x) for x in input().split()]\n        if res == [True, True]:\n            continue\n        if res == [False, False]:\n            continue\n        cur = [win(s, e), lose(s, e)]\n        if res[0]:\n            cur = [not x for x in cur]\n        res = cur\n    print(*[int(x) for x in res])\n\nmain()  ", "def win(s, e):\n    if e == s:return False\n    elif e == s + 1:return True\n    elif e & 1:return s & 1 == 0\n    elif e // 2 < s:return s & 1 == 1\n    elif e // 4 < s:return True\n    else:return win(s, e // 4)    \ndef lose(s, e):return (True if e // 2 < s else win(s, e // 2))       \ndef main():\n    res = [False, True]\n    for _ in range(int(input())):\n        s, e = [int(x) for x in input().split()]\n        if res == [True, True]:continue\n        if res == [False, False]:continue\n        cur = [win(s, e), lose(s, e)]\n        if res[0]:cur = [not x for x in cur]\n        res = cur\n    print(*[int(x) for x in res])\nmain()  "]