["'''\nCreated on Oct 12, 2014\n\n@author: Ismael\n'''\n#import time\n\nfrom fractions import gcd\n\ndef checkSet(setK,newVal):\n    for v in setK:\n        if(gcd(v,newVal) != 1):\n            return False\n    return True\n\ndef solve(n,k):\n    j = 1\n    sets = []\n    for _ in range(n):\n        setK = set()\n        while(len(setK) < 4):\n            if(checkSet(setK,j) and not(len(setK) == 0 and j%3==0)):\n                setK.add(j)\n            j += 1\n        sets.append(setK)\n    maxV = 0\n    for setK in sets:\n        maxV = max(maxV,max(setK))\n    print(maxV*k)\n    for setK in sets:\n        print(' '.join([str(x*k) for x in setK]))\n    \n#t = time.clock()\nn,k = list(map(int,input().split()))\nsolve(n,k)\n#print(time.clock()-t)\n", "k = 0\ni = 1\na = []\nwhile k <10000:\n\tb = []\n\tb.append(i)\n\tb.append(i+1)\n\tb.append(i+2)\n\tb.append(i+4)\n\ti += 6\n\ta.append(b)\n\tk += 1\nn, k = tuple(map(int, input().split()))\nprint(a[n-1][3]*k)\nfor i in range(0, n):\n\tprint(a[i][0]*k, a[i][1]*k, a[i][2]*k, a[i][3]*k)", "'''\nCreated on Oct 12, 2014\n\n@author: Ismael\n'''\n#import time\n\nfrom fractions import gcd\n\ndef checkSet(setK,newVal):\n    for v in setK:\n        if(gcd(v,newVal) != 1):\n            return False\n    return True\n\ndef solve(n,k):\n    j = 1\n    sets = []\n    for _ in range(n):\n        setK = set()\n        while(len(setK) < 4):\n            if(checkSet(setK,j) and not(len(setK) == 0 and j%3==0)):\n                setK.add(j)\n            j += 1\n        sets.append(setK)\n    maxV = 0\n    for setK in sets:\n        maxV = max(maxV,max(setK))\n    print(maxV*k)\n    for setK in sets:\n        print(' '.join([str(x*k) for x in setK]))\n    \n#t = time.clock()\nn,k = list(map(int,input().split()))\nsolve(n,k)\n#print(time.clock()-t)\n", "load = [int(i) for i in input().split()]\nn = load[0]\nk = load[1]\nprint(k * (6 * n - 1))\nfor i in range(1, n + 1):\n    buff = \"\"\n    buff += str(k * (6 * i - 5)) + ' '\n    buff += str(k * (6 * i - 3)) + ' '\n    buff += str(k * (6 * i - 2)) + ' '\n    buff += str(k * (6 * i - 1)) + ' '\n    print(buff)\n", "a, b = list(map(int, input().split(' ')))\nprint((6*a-1)*b)\nfor i in range(a):\n    print((6*i+1)*b, (6*i+2)*b, (6*i+3)*b, (6*i+5)*b)\n", "#input\nn,k=map(int,input().split())\n\n#variables\n\n#main\nprint((6*n-1)*k)\n\nfor i in range(n):\n\tprint(str((6*i+1)*k)+' '+str((6*i+2)*k)+' '+str((6*i+3)*k)+' '+str((6*i+5)*k))", "n, k = map(int, input().split())\nprint(k * (2 * (3 * n) - 1))\nnow = 1\nm = 2\nfor i in range(n):\n\tprint(k * m, end = ' ')\n\tfor j in range(3):\n\t\tprint(k * now, end = ' ')\n\t\tnow += 2\n\tm += 6\n\tprint()", "n, k = list(map(int, input().split()))\n\nprint((6*n-1)*k)\n\nprint((\"\\n\".join(\n   \"%i %i %i %i\" % tuple(k*(6*i+j) for j in (1,2,3,5)) for i in range(n)\n)))\n", "n, k = map(int, input().split())\nprint(k * (2 * (3 * n) - 1))\nnow = 1\nm = 2\nfor i in range(n):\n    print(k * m, end = ' ')\n    for j in range(3):\n        print(k * now, end = ' ')\n        now += 2\n    m += 6\n    print()", "n, k = list(map(int, input().split()))\nprint((n * 6 - 1) * k)\nfor i in range(n):\n    m = i * 6\n    print((m + 1) * k, (m + 2) * k, (m + 3) * k, (m + 5) * k)    \n", "n, k = map(int, input().split())\nprint((6 * n - 1) * k)\nfor i in range(1, 6 * n, 6): print(i * k, (i + 2) * k, (i + 3) * k, (i + 4) * k)", "n, k = map(int, input().split())\nm = 6 * n - 1\nprint(m * k)\nfor i in range(n):\n    for j in [1, 2, 3, 5]:\n        print(k * (6 * i + j), end = ' ')\n    print()\n", "import sys\n\ndef solve():\n    n, k, = rv()\n    res = list()\n    cur = 1\n    for i in range(n):\n        while cur % 2 == 0: cur+=1\n        res.append(((cur) * k, (cur + 1) * k, (cur + 2) * k, (cur + 4) * k))\n        cur += 5\n    print(res[-1][-1])\n    print('\\n'.join((' '.join(map(str, l))) for l in res))\n\n#12 14 16 20\n# 2 * 2 * 3   2 * 7   2 * 2 * 2 * 2   2 * 3 * 3\n# 1 2 3 5\n# 7 8 9 11\n# 13\n# 19\n# 25\n# 31\n\ndef prt(l): return print(' '.join(l))\ndef rv(): return map(int, input().split())\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n\n\n", "import sys\n\ndef solve():\n    n, k, = rv()\n    res = list()\n    cur = 1\n    for i in range(n):\n        while cur % 2 == 0: cur+=1\n        res.append(((cur) * k, (cur + 1) * k, (cur + 2) * k, (cur + 4) * k))\n        cur += 5\n    print(res[-1][-1])\n    print('\\n'.join((' '.join(map(str, l))) for l in res))\n\n#12 14 16 20\n# 2 * 2 * 3   2 * 7   2 * 2 * 2 * 2   2 * 3 * 3\n# 1 2 3 5\n# 7 8 9 11\n# 13\n# 19\n# 25\n# 31\n\ndef prt(l): return print(' '.join(l))\ndef rv(): return map(int, input().split())\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n\n\n", "n, k = list(map(int,input().split()))\nprint((6*n-1)*k)\nfor i in range(0, n): print((6*i+1)*k,(6*i+2)*k,(6*i+3)*k,(6*i+5)*k)", "n, k = map(int, input().split())\nprint(k * (6 * (n - 1) + 5))\nfor i in range(0, n): print(k * (6 * i + 1), k * (6 * i + 2), k * (6 * i + 3), k * (6 * i + 5))", "l = input().split(\" \")\nn = int(l[0])\nk = int(l[1])\nprint((6*n-1)*k)\nfor i in range(n):\n    print(str((6*i+1)*k)+\" \"+str((6*i+2)*k)+\" \"+str((6*i+3)*k)+\" \"+str((6*i+5)*k))", "n, k = list(map(int, input().split()))\nprint(k * (6 * (n - 1) + 5))\nfor i in range(0, n):\n    t = [6 * i + 1, 6 * i + 2, 6 * i + 3, 6 * i + 5]\n    print((' '.join([str(m * k) for m in t])));\n\n", "n, k = map(int, input().split())\nprint(k*(6*n-1))\nfor i in range (n):\n    print(k*(6*i+1), k * (6*i+3), k*(6*i+4), k * (6*i+5))", "x, y = map(int, input().split())\nz = []\nprint((6 * x - 1) * y)\nfor i in range(0, x):\n    z.append((6 * i + 1) * y); z.append((6 * i + 3) * y); z.append((6 * i + 4) * y); z.append((6 * i + 5) * y)\n    print(*z)\n    z.clear()", "inp = input().split(' ')\ndef result(sets,maximum_divisor):\n    output = list()\n    output.append(str(int(maximum_divisor) * (6 * int(sets) - 1)))\n    for i in range(int(sets)):\n        output.append(str(int(maximum_divisor)* (6 * int(i) + 1)) + ' ' + str(int(maximum_divisor) * (6 * int(i) + 3)) + ' ' + str(int(maximum_divisor) * (6 * int(i) + 4)) + ' ' + str(int(maximum_divisor) * (6 * int(i) + 5)))\n    return output\nfor i in result(inp[0],inp[1]):\n    print(i)\n", "n,k = [int(i) for i in input().split()]\nprint((6*n-1)*k)\nfor a in range(n):\n    val = 6*a\n    print((val+1)*k,(val+2)*k,(val+3)*k,(val+5)*k)\n", "n, k = [int(x) for x in input().split()]\nprint(k*((n-1)*6+5))\nfor i in range(n):\n    print(k*(6*i+1),k*(6*i+3),k*(6*i+5),k*(6*i+2))", "n, k = map(int, input().split())\nprint(k * (6 * n - 1))\nfor i in range(1, n + 1):\n    x = (i - 1) * 6 + 1\n    print(k * x, end = ' ')\n    print(k * (x + 1), end = ' ')\n    print(k * (x + 2), end = ' ')\n    print(k * (x + 4))"]