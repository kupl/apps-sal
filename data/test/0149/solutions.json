["x,y,l,r=list(map(int,input().split()))\nb=set()\na=0\nb.add(l-1)\nb.add(r+1)\nfor i in range(100):\n  xx=x**i\n  if xx>r: break\n  for j in range(100):\n    rr=xx+(y**j)\n    if rr>r: break\n    if rr>=l:\n      b.add(rr)\nb=sorted(list(b))\nfor i in range(1,len(b)):\n  a=max(a,b[i]-b[i-1]-1)\nprint(a)\n", "x, y, l, r = list(map(int, input().split()))\nxs = [x ** i for i in range(61) if x ** i <= 10 ** 18]\nys = [y ** i for i in range(61) if y ** i <= 10 ** 18]\nps = set()\nfor i in xs:\n\tfor j in ys:\n\t\tif l <= i + j <= r:\n\t\t\tps.add(i + j)\nps.add(l - 1)\nps.add(r + 1)\nps = sorted(list(ps))\nans = 0\nfor i in range(1, len(ps)):\n\tans = max(ans, ps[i] - ps[i - 1] - 1)\nprint(ans)\n\n\n", "x, y, l, r = map(int, input().split())\ndata = []\ntx = 1\nwhile (tx < r + 3):\n    ty = 1\n    while (ty < r + 3):\n        data.append(tx + ty)\n        ty *= y\n    tx *= x\ndata = sorted(set(data))\ndata = [elem for elem in data if l <= elem and elem <= r]\ndata = [l - 1] + data + [r + 1] \nans = 0\nfor i in range(1, len(data)):\n    ans = max(ans, data[i] - data[i - 1] - 1)\nprint(ans)", "a,b,c,d = list(map(int, input().split(' ')))\n\nMXV = 10 ** 18\n\napows, bpows = [], []\naa, bb = 1, 1\nwhile aa <= MXV:\n    apows.append(aa)\n    aa *= a\nwhile bb <= MXV:\n    bpows.append(bb)\n    bb *= b\n\nvals = set()\nfor i in range(len(apows)):\n    for j in range(len(bpows)):\n        vals.add(apows[i] + bpows[j])\n\nvlist = list(vals)\nvlist.sort()\nans = 0\nlast = c-1 \nfor v in vlist:\n    if c <= v and v <= d:\n        ans = max(ans, v - last - 1)\n        last = v\nans = max(ans, d-last)\n\nprint(ans)\n", "x, y, l, r = map(int, input().split())\nv = [l - 1, r + 1]\nfor a in range(0, 60):\n\tif x ** a > r:\n\t\tbreak\n\tfor b in range(0, 60):\n\t\tif y ** b > r:\n\t\t\tbreak\n\t\tif l <= x ** a + y ** b <= r:\n\t\t\tv += [x ** a + y ** b]\nv.sort()\nans = 0\nfor i in range(len(v) - 1):\n\tans = max(ans, v[i + 1] - v[i] - 1)\nprint(ans)", "x, y, l, r = list(map(int, input().split()))\n\nxs = []\nnow = 1\nwhile True:\n    if now > r:\n        break\n    xs.append(now)\n    now *= x\n\nys = []\nnow = 1\nwhile True:\n    if now > r:\n        break\n    ys.append(now)\n    now *= y\n\nress = [x + y for x in xs for y in ys]\nress = [i for i in ress if l <= i <= r]\nress.append(l - 1)\nress.append(r + 1)\nress = list(set(ress))\nress = sorted(ress)\n\nlst = -1\nans = 0\nfor i in ress:\n    if lst != -1:\n        ans = max(ans, i - lst - 1)\n    lst = i\n\nprint(ans)\n", "x, y, l, r = list(map(int, input().split()))\na = []\nfor i in range(70):\n\tfor j in range(70):\n\t\tcur = x ** i + y ** j\n\t\tif cur > r:\n\t\t\tcontinue\n\t\tif cur <= r and cur >= l:\n\t\t\ta.append(cur)\na.sort()\nans = 0\nlast = l - 1\nfor it in a:\n\tans = max(ans, it - last - 1)\n\tlast = it\nans = max(ans, r - last)\nprint(ans)\n\n", "R=lambda:list(map(int,input().strip().split()))\n[x,y,l,r]=R()\na=list()\nb=list()\ncur=1\nwhile(cur<r):\n    a.append(cur) \n    cur*=x \ncur=1\nwhile(cur<r):\n    b.append(cur) \n    cur*=y \n    \ns=set()\ns.add(l-1)\ns.add(r+1)\nfor p in a:\n    for q in b:\n        s.add(p+q) \ns=list(s)\ns.sort()\nml=0\nfor i in range(len(s)-1):\n    if s[i]>=l-1 and s[i+1]<=r+1:\n        ml=max(ml,s[i+1]-s[i]-1)\nprint(ml)", "x,y,l,r = list(map(int,input().split()))\na = []\nf = 1\nwhile f < r:\n\tg = 1\n\twhile f + g <= r:\n\t\tif f + g >= l:\n\t\t\ta.append(f + g)\n\t\tg *= y\n\tf *= x\na += [l-1,r+1]\na.sort()\nm = 1\nfor i in range(1,len(a)):\n\tif a[i-1] != a[i]:\n\t\ta[m] = a[i]\n\t\tm += 1\nans = 0\nfor i in range(1,m):\n\tans = max(ans, a[i] - a[i-1] - 1)\nprint(ans)\n", "x, y, l, r = list(map(int, input().split()))\nrx = 0\nwhile x**rx < r:\n    rx += 1\nry = 0\nwhile y**ry < r:\n    ry += 1\n\narr = [l - 1, r + 1]\nfor i in range(rx):\n    for j in range(ry):\n        tmp = x**i + y**j\n        if l <= tmp <= r:\n            arr.append(tmp)\narr = list(sorted(set(arr)))\n\nans = 0\nfor i in range(1, len(arr)):\n    ans = max(ans, arr[i] - arr[i - 1] - 1)\nprint(ans)\n", "x,y,l,r = list(map(int, input().split()))\nxx = 1\na = [0, 1e20]\nfor i in range(60):\n    yy = 1\n    while xx + yy <= r:\n        a.append(xx+yy)\n        yy *= y\n    xx *= x\na.sort()\nans = 0\nfor i in range(len(a)-1):\n    ll = max(a[i]+1, l)\n    rr = min(a[i+1]-1, r)\n    ans = max(ans, rr - ll+1)\n    #~ print(i, ans, a[i], a[i+1])\nprint(ans)\n", "x,y,l,r = list(map(int, input().split()))\nlx = []\nly = []\nfor i in range(65):\n    if x**i > r: break\n    lx.append(x**i)\nfor i in range(65):\n    if y**i > r: break\n    ly.append(y**i)\n\nans = set()\nfor i in lx:\n    for j in ly:\n        if l <= i+j <= r:\n             ans.add(i+j)\n\nans.add(l-1)\nans.add(r+1)\nans = sorted(list(ans))\nanslen = 0\nfor i in range(1, len(ans)):\n    anslen = max(anslen, ans[i]-ans[i-1]-1)\n\n#print(ans)\nprint(anslen)\n", "arr = [int(x) for x in input().split()]\na = arr[0]\nb = arr[1]\nl = arr[2]\nr = arr[3]\n\npivots = [];\n\npivots.append(l - 1);\nfor aTimes in range(65):\n    for bTimes in range(65):\n        now = a ** aTimes + b**bTimes;\n        if now < l:\n            continue;\n        if now > r:\n            break;\n        pivots.append(now);\npivots.append(r + 1);\n\npivots.sort();\nans = 0;\nfor i in range(len(pivots)):\n    if i == 0:\n        continue;\n    ans = max(pivots[i] - pivots[i - 1] - 1,ans);\n\nprint(ans);", "x, y, l, r = [int(x) for x in input().split()]\np_x = [1]\np_y = [1]\nfor i in range(1, 61):\n  p_x.append(p_x[len(p_x) - 1] * x)\n  p_y.append(p_y[len(p_y) - 1] * y)\npossible = set([0])\nfor i in range(61):\n  for j in range(61):\n    possible.add(p_x[i] + p_y[j])\na = []\nfor x in possible:\n  a.append(x)\na.sort()\nans = 0\nfor i in range(1, len(a)):\n  l1 = max(a[i - 1], l - 1)\n  r1 = min(a[i], r + 1)\n  ans = max(ans, r1 - l1 - 1)\nprint(ans)", "x,y,l,r = list(map(int, input().split()))\nbad = []\nfor i in range(61):\n    for j in range(61):\n        cr = x ** i + y ** j\n        if l <= cr <= r: \n            bad.append(x ** i + y ** j)\nbad = [l] + bad + [r]\nbad.sort()\nmx = 0\nif len(bad) == 2:\n    print(max(mx, bad[1] - bad[0] + 1))\n    return\nfor i in range(len(bad) - 1):\n    cr =  bad[i + 1] - bad[i] - 1\n    if i == 0 or i == len(bad) - 2:\n        cr += 1\n    mx = max(mx, cr)\nprint(mx)\n", "x, y, l, r = map(int, input().split(' '))\na = []\nfor i in range(65):\n    for j in range(65):\n        t = x**i + y**j\n        if t <= r and t >= l:\n            a.append(t)\na.sort()\nif len(a) == 0:\n    print(r - l + 1)\n    return\nans = max(a[0] - l, r - a[-1])\nfor i in range(1, len(a)):\n    ans = max(ans, a[i]-a[i-1]-1)\n\nprint(ans)", "x,y,l,r = list(map(int, input().split()))\n\nunl = []\nfor i in range(0, 70):\n    for j in range(0, 70):\n        xx = x**i + y**j\n        if ( xx>=l and xx<=r):\n            unl.append(xx)\n\nunl.sort()\n\nif (len(unl) == 0) :\n    print(r - l + 1)\n    return\n\ndiff = []\nif (unl[0] != l) :\n    diff.append(unl[0] - l)\n\nif ( unl[-1] != r) :\n    diff.append(r - unl[-1])\n\nfor i in range(1,len(unl)):\n    d = (unl[i] - unl[i-1] -1)\n    if ( d > 0):\n        diff.append(d)\n\n\ndiff.sort();\n\nif (len(diff) == 0) :\n    print(0)\n\nelse :\n    print(diff[-1])\n\n\n\n", "[x, y, l, r] = list(map(int, input().rstrip().split()))\ndata = [l]\n\nlbad = False\nrbad = False\nfor i in range(0, 61):\n    for j in range(0, 61):\n        num = x ** i + y ** j\n        if num == l:\n            lbad = True\n        if num == r:\n            rbad = True\n        if l <= num <= r:\n            data.append(num)\n        elif num > r:\n            break\ndata.sort()\nmax_time = 0\ndata.append(r if rbad else r + 1)\ndata[0] = (l if lbad else l -1)\nfor i in range(0, len(data) - 1):\n    max_time = max(data[i + 1] - data[i] - 1, max_time)\nprint(max_time)\n", "x, y, l, r = list(map(int, input().split()))\ndegree_x = []\ndegree_y = []\ni = 0\nwhile x ** i <= r:\n    degree_x.append(x ** i)\n    i += 1\ni = 0\nwhile y ** i <= r:\n    degree_y.append(y ** i)\n    i += 1\nsad_years = []\nfor i in degree_x:\n    for j in degree_y:\n        sad_years.append(i + j)\nsad_years.sort()\nres = 0\ni = 0\nwhile i < len(sad_years):\n    if sad_years[i] < l or sad_years[i] > r:\n        sad_years.pop(i)\n    else:\n        i += 1\nres = 0\nsad_years = [l - 1] + sad_years + [r + 1]\nfor i in range(len(sad_years) - 1):\n    res = max(res, sad_years[i + 1] - sad_years[i] - 1)\nprint(res)\n", "x,y,l,r=list(map(int,input().split()))\nA=[l-1]\nfor i in range(100):\n\tif x**i>r:\n\t\tbreak\n\tfor j in range(100):\n\t\tif y**j>r:\n\t\t\tbreak\n\t\tt=x**i+y**j\n\t\tif t>=l and t<=r:\n\t\t\tA.append(t)\nA.append(r+1)\nA.sort()\nans=0\nfor i in range(len(A)-1):\n\tans=max(ans,A[i+1]-A[i]-1)\nprint(ans)\n\n", "x, y, l, r = list(map(int, input().split()))\n\n\ndef gen_list(var):\n    cur = 1\n    while cur <= r:\n        yield cur\n        cur *= var\n\nx_list = list(gen_list(x))\n# print(x_list)\ny_list = list(gen_list(y))\n# print(y_list)\n\nnumbers = [l-1, r+1]\nfor _x in x_list:\n    for _y in y_list:\n        n = _x + _y\n        if n < l or n > r:\n            continue\n        numbers.append(n)\n\nnumbers = sorted(set(numbers))\n# print(numbers)\n\nif len(numbers) < 2:\n    print('0')\n    return\n\nmax_happy = max([numbers[i+1]-numbers[i]-1 for i in range(len(numbers) - 1)], default=0)\n\nprint(max_happy)\n", "x,y,l,r=list(map(int,input().split()))\n\nxx=[]\nyy=[]\np=1\nxx.append(l-1);\nwhile p<=r:\n    q=1\n    while p+q<=r:\n        if p+q>=l and p+q<=r:\n            xx.append(p+q)\n        q*=y\n    p*=x\nxx.append(r+1)\nxx.sort()\n\nfor i in range(0,len(xx)-1):\n    yy.append(xx[i+1]-xx[i]-1)\n\nprint(max(yy))\n", "def parser():\n    while 1:\n        data = list(input().split(' '))\n        for number in data:\n            if len(number) > 0:\n                yield(number)   \n\ninput_parser = parser()\n\ndef get_word():\n    nonlocal input_parser\n    return next(input_parser)\n\ndef get_number():\n    data = get_word()\n    try:\n        return int(data)\n    except ValueError:\n        return float(data)\n\n\nx = get_number()\ny = get_number()\nl = get_number()\nr = get_number()\nn1 = 1;\na = list()\na.append(l - 1)\nfor i in range(0, 300):\n    if n1 > r:\n        break\n    n2 = 1 \n    for j in range(0, 300):\n        if n1 + n2 > r:\n            break\n        if n1 + n2 >= l and n1 + n2 <= r:\n            a.append(n1 + n2)\n        n2 = n2 * y\n    n1 = n1 * x\n    \na.append(r + 1)\na.sort()\nans = 0\nfor i in range(0, len(a) - 1):\n    ans = max(ans, a[i + 1] - a[i] - 1)\nprint(ans)", "from sys import stdin\nimport re\nimport math\n\ndef readInt(count=1):\n    m = re.match('\\s*' + ('([+-]?\\d+)\\s*' * count), stdin.readline())\n    if m is not None:\n        ret = []\n        for i in range(1, m.lastindex + 1):\n            ret.append(int(m.group(i)))\n        return ret\n    return None\n\nx, y, l, r = readInt(4)\n\nmax = 0\nunhappyYears = [l-1]\nxa = 1\nwhile xa <= r:\n    yb = 1\n    while True:\n        val = xa + yb\n        if val > r:\n            break\n        if val >= l and val not in unhappyYears:\n            unhappyYears.append(val)\n        yb *= y\n    xa *= x\nunhappyYears.sort()\nunhappyYears.append(r+1)\n\nfor i in range(len(unhappyYears)-1):\n    cur = unhappyYears[i+1] - unhappyYears[i] - 1\n    if cur > max:\n        max = cur\nprint(max)", "def power(a,p):\n\tif p==0:\n\t\treturn 1\n\tlol=power(a,p//2)\n\tlol=lol*lol\n\tif p%2==1:\n\t\treturn a*lol\n\telse:\n\t\treturn lol\n\nx,y,l,r=map(int,input().split())\n\ni=0\nd={}\n\nwhile 1:\n\tk=power(x,i)\n\tj=0\n\tif k>r:\n\t\tbreak\n\twhile 1:\n\t\tlol=power(y,j)\n\t\tif k+lol>r:\n\t\t\tbreak\n\t\td[k+lol]=1\n\t\tj+=1\n\ti+=1\nlast=l-1\nd[r+1]=1\narr=[]\nfor k in d.keys():\n\tarr.append(k)\nans=0\narr.sort()\nfor k in arr:\n\t#print(k)\n\tif k>=l:\n\t\tans=max(ans,k-last-1)\n\t\tlast=k\n\t\tif last>=r:\n\t\t\tbreak\nprint(ans)"]