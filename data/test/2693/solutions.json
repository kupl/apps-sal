["# cook your dish here\ndef findCombo(s,p,k):\n    if k==1:\n        if s==p:\n            return [s]\n        else:\n            return []\n    else:\n        for i in range(1,s):\n            if(p%i==0) and i<s:\n                ans=findCombo(s-i,p//i,k-1)\n                if len(ans)!=0:\n                    ans.append(i)\n                    return ans \n        return []\ntry:\n    s,p,k = map(int,input().split())\n    ans=findCombo(s,p,k)\n    if len(ans)==0:\n        print(\"NO\")\n    else:\n        print(*ans)\n\nexcept:\n    pass", "#author : dokueki\r\n\r\nimport sys\r\n\r\n\r\ndef IOE():\r\n    sys.stdin = open(\"input.txt\", \"r\")\r\n    sys.stdout = open(\"output.txt\", \"w\")\r\n\r\n\r\ndef main():\r\n    s, p, k = map(int, sys.stdin.readline().split())\r\n    if k == 1:\r\n        if s == p:\r\n            print(s)\r\n        else:\r\n            print('NO')\r\n    if k == 2:\r\n        for i in range((s // 2) + 1):\r\n            if i * (s - i) == p:\r\n                print(i, s - i)\r\n                break\r\n        else:\r\n            print(\"NO\")\r\n    if k == 3:\r\n        ans = []\r\n        for i in range((s // 3) + 1):\r\n            for j in range((s // 3) + 2):\r\n                if i * j * (s - i - j) == p:\r\n                    ans.append([i, j, s-i-j])\r\n\r\n        if len(ans):\r\n            print(*ans[0])\r\n        else:\r\n            print(\"NO\")\r\n    if k == 4:\r\n        ans = []\r\n        for i in range((s // 4) + 1):\r\n            for j in range((s // 4) + 2):\r\n                for k in range((s // 4) + 3):\r\n                    if i * j * k * (s - i - j - k) == p:\r\n                        ans.append([i, j, k, s - i - j - k])\r\n        if len(ans):\r\n            print(*ans[0])\r\n        else:\r\n            print(\"NO\")\r\n\r\n\r\ndef __starting_point():\r\n    # IOE()\r\n    main()\r\n\n__starting_point()", "from itertools import permutations as pp\nfrom functools import reduce\ntry:\n    s,p,k = map(int,input().split())\n    x = []\n    n = int(p**(0.5))+1\n    for i in range(1,n):\n        if p%i == 0:\n            if i < s:\n                x.append(i)\n            if p//i < s:\n                x.append(p//i)\n    x = x*k\n    x = list(set(pp(x,k)))\n    n = len(x)\n    flag = 1\n    for i in x:\n        if s == sum(i) and p == reduce((lambda a,b: a*b),i):\n            print(*i)\n            flag = 0\n            break\n    if flag:\n        print(\"NO\")\nexcept:\n    pass", "import math\r\n\r\ndef part(n, k):\r\n    def _part(n, k, pre):\r\n        if n <= 0:\r\n            return []\r\n        if k == 1:\r\n            if n <= pre:\r\n                return [[n]]\r\n            return []\r\n        ret = []\r\n        for i in range(min(pre, n), 0, -1):\r\n            ret += [[i] + sub for sub in _part(n-i, k-1, i)]\r\n        return ret\r\n    return _part(n, k, n)\r\n\r\nS, P, k=map(int, input().split())\r\nfactors=[]\r\n\r\nfor i in range(1, int(math.sqrt(P))+1):\r\n    if(P%i==0 and P//i!=i):\r\n        factors.append(i)\r\n        factors.append(P//i)\r\n    elif(P%i==0 and P//i==i):\r\n        factors.append(i)\r\n        \r\narr=part(S, k)\r\nflag=-1\r\n#print(part(S, k))\r\n\r\nfor i in arr:\r\n    temp=i\r\n    cnt=0;  prod=1\r\n    \r\n    for j in temp:\r\n        if(j in factors):\r\n            cnt+=1\r\n        prod*=j\r\n           \r\n    if(cnt==k and prod==P):\r\n        print(*temp)\r\n        flag=0\r\n        break\r\n    else:\r\n        flag=1\r\n        \r\nif(flag!=0):\r\n    print(\"NO\")\r\n\r\n\r\n"]