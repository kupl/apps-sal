["n = int(input())\na = list(map(int,input().split()))\na = sorted(a)\n\nout = [0 for x in range(n)]\nif n%2:\n    out[n//2] = a[-1]\nfor x in range(n//2):\n    out[x] = a[x*2]\n    out[-(1+x)] = a[(x*2)+1]\nprint (\" \".join(str(c) for c in out)) ", "n = int(input())\na = sorted(list(map(int, input().split())))\n\nanswer_left = []\nansewr_right = []\nfor i in range(0, n - 1, 2):\n    answer_left.append(a[i])\n    ansewr_right.append(a[i + 1])\n\nif len(ansewr_right) + len(answer_left) < n:\n    answer_left.append(a[-1])\n\nprint(*answer_left, *ansewr_right[::-1])\n", "n = int(input())\narr = list(map(int, input().split()))\n\norder = [None]* n\n\narr.sort()\n\norder[0] = arr[0]\nfor i in range(1, n):\n    if (i % 2):\n        order[-((i+1)//2)] = arr[i]\n    else:\n        order[i//2] = arr[i]\n\nprint(' '.join(list(map(str, order))))\n", "n = int(input())\n\nseq = sorted(map(int, input().split()))\nif n <= 3:\n    print(' '.join(map(str, seq)))\nelse:\n    ans = [0 for x in range(n)]\n    i = 0\n    while i <= n // 2:\n        try:\n            ans[i] = seq[i * 2]\n            ans[-i - 1] = seq[i * 2 + 1]\n        except IndexError:\n            pass\n        i += 1\n    print(' '.join(map(str, ans)))\n", "'''\n           _                              _    \n          | |                            | |   \n ___ _   _| |__   ___ _ __ __ _  ___  ___| | __\n/ __| | | | '_ \\ / _ \\ '__/ _` |/ _ \\/ _ \\ |/ /\n\\__ \\ |_| | |_) |  __/ | | (_| |  __/  __/   < \n|___/\\__, |_.__/ \\___|_|  \\__, |\\___|\\___|_|\\_\\\n      __/ |                __/ |               \n     |___/                |___/                \n'''\nn=int(input())\na=list(map(int,input().split()))\n\npa=[]\nsa=[]\na.sort()\nfor i in range(n):\n    if i%2==0:\n        pa.append(a[i])\n    else:\n        sa.append(a[i])\nsa.reverse()\nresa=pa+sa\n#print(resa)\nfor i in resa:\n    print(i,end=' ')", "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    a = sorted(a)\n    res = []\n    for i in range(0, n, 2):\n        res.append(a[i])\n    for i in reversed(list(range(1, n, 2))):\n        res.append(a[i])\n    print(' '.join((str(x) for x in res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\narr = sorted(map(int, input().split()))\n\nres = []\nfor i in range(N):\n    if i%2:\n        res.append(arr[i])\n    else:\n        res.insert(0, arr[i])\n\nprint(*res)\n", "n = input()\nn = int(n)\na = input()\na = a.split()\na = [int(i) for i in a]\na.sort()\nanswer = [0]*n\neven = 0\nodd = 0\nfor i, value in enumerate(a):\n    if i % 2 == 0:\n        answer[even] = str(value)\n        even = even + 1\n    else:\n        answer[n-1-odd] = str(value)\n        odd = odd + 1\nprint(\" \".join(answer))", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda: map(int, input().split())\nn = int(input())\nz = listin()\na = deque([])\nz.sort()\nfor i in range(n//2+1):\n    if z:\n        if i > 0:\n            a.append(z[-1])\n            z.pop()\n        if z:\n            a.appendleft(z[-1])\n            z.pop()\nprint(*a)", "ii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\n\nn = ii()\na = li()\na.sort(reverse=True)\nx, y = [], []\nfor i in range(1, n):\n    (x if i % 2 else y).append(a[i])\nans = x[::-1] + [a[0]] + y\nprint(*ans)", "n = int(input())\na = sorted(map(int, input().split()))\nans = a[::2] + a[n - 1 - n % 2::-2]\nprint(\" \".join(map(str, ans)))", "from collections import deque\n\ndef solve():\n    N = int(input())\n    A = [int(k) for k in input().split()]\n    \n    A.sort()\n    \n    results = deque([A[0],])\n    front = 1\n    \n    for i in range(1, N):\n        if front:\n            results.appendleft(A[i])            \n        else:\n            results.append(A[i])\n            \n        front ^= 1\n        \n    print (' '.join(str(k) for k in results))\n    \ndef __starting_point():  \n    solve()\n__starting_point()", "'''input\n6\n1 2 3 4 5 6\n\n'''\nn = int(input())\nans = 1\na = list(map(int, input().split()))\na = sorted(a)\nb = a[::2] + a[1::2][::-1]\nprint(*b)\n", "n, ls = int(input()), sorted(list(map(int, input().split())))\nls1, ls2 = [],[]\nfor i in range(n):\n\tif i & 1: ls1.append(ls[i])\n\telse: ls2.append(ls[i])\ntls = list(reversed(ls2))+ls1\nprint(\" \".join([str(l) for l in tls]))", "import sys,math,string\ninput=sys.stdin.readline\nfrom collections import deque\nL=lambda : list(map(int,input().split()))\nLs=lambda : list(input().split())\nM=lambda : list(map(int,input().split()))\n\nn=int(input())\nl=L()\nl.sort()\ng=deque([])\nfor i in range(n):\n    if(i%2==0):\n        g.append(l[i])\n    else:\n        g.appendleft(l[i])\nprint(*g)\n", "N = int(input())\nA = list(map(int,input().split()))\nA.sort()\nans = A[::2] + list(reversed(A[1::2]))\nprint(*ans)\n", "n=int(input())\nA=list(map(int,input().split()))\n\nA.sort()\nANS=[-1]*n\n\nfor i in range(n):\n    if i%2==0:\n        ANS[i//2]=A[i]\n    else:\n        ANS[-(i+1)//2]=A[i]\n\nfor a in ANS:\n    print(a,end=\" \")\n\n", "n = int(input())\nchildren = list(map(int, input().split()))\nchildren.sort()\nright = []\nleft = []\nfor i in range(len(children)):\n    if i % 2 == 0:\n        left.append(children[i])\n    else:\n        right.append(children[i])\nleft.extend(reversed(right))\nfor i in left:\n    print(i, end=\" \")", "n = int(input())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\nrec = []\nfor i in range(n):\n    if len(rec) == 0:\n        rec.append(a[i])\n    else:\n        if abs(rec[-1] - a[i]) < abs(rec[0] - a[i]):\n            rec = [a[i]] + rec\n        else:\n            rec.append(a[i])\n\nprint(\" \".join(map(str, rec)))", "n=int(input())\na=[int(x) for x in input().split()]\na.sort()\np=[]\nq=[]\nfor i in range(n):\n    if i%2==0:\n        p.append(a[i])\n    else:\n        q.append(a[i])\nq.reverse()\nans=p+q\n\nfor i in ans:\n    print(i,end=\" \")\nprint()\n    \n", "\nn = int(input())\n\narr = list(map(int,input().strip().split()))\narr = sorted(arr,reverse=True)\nans = [0]*n\n\nif n==2:\n    print(*arr)\nelse:\n    ans[0]=arr[0]\n    ans[1]=arr[1]\n    ans[n-1]=arr[2]\n    if n==3:\n        print(*ans)\n    else:\n        l = 1\n        h = n-1\n        for i in range(3,n):\n            if arr[i]-ans[l] > arr[i]-ans[h]:\n                ans[h-1]=arr[i]\n                h-=1\n            else:\n                ans[l+1]=arr[i]\n                l+=1\n        print(*ans)\n    \n", "import sys\nsys.setrecursionlimit(10**5)\n\nN = int(input())\n*A, = map(int, input().split())\n\nA.sort()\nmemo = [[-1]*(N+1) for i in range(N+1)]\nnxt = [[0]*(N+1) for i in range(N+1)]\ndef dfs(i, p, q):\n    if memo[p][q] != -1:\n        return memo[p][q]\n    if i == N:\n        return abs(A[p] - A[q])\n    r0 = max(dfs(i+1, i, q), abs(A[i] - A[p]))\n    r1 = max(dfs(i+1, p, i), abs(A[i] - A[q]))\n    if r0 < r1:\n        nxt[p][q] = 0\n    else:\n        nxt[p][q] = 1\n    memo[p][q] = r = min(r0, r1)\n    return r\ndfs(0, 0, 0)\nR0 = []; R1 = []\np = q = 0\nfor i in range(N):\n    if nxt[p][q]:\n        R1.append(A[i])\n        q = i\n    else:\n        R0.append(A[i])\n        p = i\nR0.reverse()\nR0.extend(R1)\nprint(*R0)", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nb = [a[-1]]\nfor i in range(n-2, -1, -1):\n    if b[0] > b[-1]:\n        b = [a[i]] + b\n    else:\n        b.append(a[i])\nprint(*b)", "n = int(input())\nL = sorted(list(map(int, input().split())))\nM = L[::2]\nN = L[1::2][::-1]\nprint(*(M + N))", "n = int(input())\na = list(map(int, input().split()))\na = list(sorted(a, reverse=True))\nnew_a = [0] * n\nleft_pivot = n // 2\nright_pivot = left_pivot + 1\nif n % 2 == 0:\n    left_pivot, right_pivot = left_pivot - 1, right_pivot - 1\nfor i in range(n):\n    if i % 2 == 0:\n        new_a[left_pivot] = a[i]\n        left_pivot -= 1\n    else:\n        new_a[right_pivot] = a[i]\n        right_pivot += 1\nprint(' '.join(map(str, new_a)))"]