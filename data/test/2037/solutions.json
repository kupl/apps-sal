["n,m = map(int,input().split())\na = list(map(int,input().split()))\nb = [0]*(n+5)\nc = [0]*(m+5)\nc[0] = n\ncur = 0\nfor i in range(m):\n    c[b[a[i]]] -= 1\n    b[a[i]] += 1\n    c[b[a[i]]] += 1\n    if c[cur] == 0:\n        print(1,end='')\n        cur += 1\n    else:\n        print(0,end='')\n", "n,m = [int(x) for x in input().split()]\n\nL = [int(x) for x in input().split()]\n\nD2 = {}\nT = {}\n\nans = ''\n\nfor i in L:\n    if i in D2:\n        D2[i] += 1\n    else:\n        D2[i] = 1\n    if D2[i] in T:\n        T[D2[i]].append(i)\n    else:\n        T[D2[i]] = [i]\n    if len(T[D2[i]]) % n == 0:\n        ans = ans + '1'\n    else:\n        ans = ans + '0'\n\nprint(ans)", "n, m = map(int, input().split())\narr = list(map(int, input().split()))\nq = [0 for i in range(n)]\nneed = 0\nfor i in range(m):\n    a = arr[i]\n    a -= 1\n    if q[a] == 0:\n        need += 1\n    q[a] += 1\n    \n    if need == n:\n        print(1, end='')\n        for j in range(n):\n            q[j] -= 1\n            if q[j] == 0:\n                need -= 1\n    else:\n        print(0, end='')\n", "n, m = [int(v) for v in input().split()]\na = [int(v) - 1 for v in input().split()]\n\ncnt = [0] * n\nnonzero = 0\n\nans = []\n\nfor ai in a:\n    cnt[ai] += 1\n    if cnt[ai] == 1:\n        nonzero += 1\n        if nonzero == n:\n            nonzero = 0\n            for i in range(n):\n                cnt[i] -= 1\n                if cnt[i]:\n                    nonzero += 1\n            ans.append(True)\n            continue\n    ans.append(False)\n\nprint(''.join('01'[v] for v in ans))\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\ncs = dict()\nans = []\nfor num in a:\n    if num in cs:\n        cs[num] += 1\n    else:\n        cs[num] = 1\n\n    if len(cs) == n:\n        new = dict()\n        for i in list(cs.keys()):\n            if cs[i] > 1:\n                new[i] = cs[i] - 1\n        cs = new\n        ans.append('1')\n    else:\n        ans.append('0')\nprint(''.join(ans))\n", "import sys\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\nn, m  = tuple(map(int, input().split()))\na = list(map(int, input().split()))\n\ns = {}\n\n\ndist = 0\n\nans = []\n\nfor t in a:\n    if t in s and s[t] > 0:\n        s[t] += 1\n        ans.append(0)\n    else:\n        s[t] = 1\n        dist += 1\n\n        if dist == n:\n            s = s\n            ans.append(1)\n            for k in list(s.keys()):\n                s[k] -= 1\n                if s[k] == 0:\n                    dist -= 1\n        else:\n            ans.append(0)\n\n\nprint(''.join(list(map(str, ans))))\n\n\n\n\n", "n, m = map(int, input().split())\nmass = list(map(int, input().split()))\nwuneed = set()\nfor i in range(1, n+1):\n    wuneed.add(i)\nbank = dict()\nfor tutu in mass:\n    wuneed.discard(tutu)\n    if tutu in bank:\n        bank[tutu] += 1\n    else:\n        bank[tutu] = 1\n    if wuneed == set():\n        print('1', end='')\n        for t in bank:\n            bank[t] -= 1\n            if bank[t] == 0:\n                wuneed.add(t)\n    else:\n        print('0', end='')", "n, m = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\n\n#print(n, m, a)\n\nd = {}\n\nfor ai in a:\n\td.setdefault(ai, 0)\n\td[ai] += 1\n\t\n\tans = 0\n\tif len(d) >= n:\n\t\tans = 1\n\t\td = {k: v-1 for k, v in d.items() if v > 1}\n\t\n\tprint(ans, end=\"\")\n\n#print(d)", "n, m = map(int, input().split())\narr = [int(x) for x in input().split()]\nd = {}\nfor i in range(1, n+1):\n    d[i] = 0\ntmp = set()\nfor i in arr:\n    d[i] += 1\n    tmp.add(i)\n    if len(tmp) == n:\n        print('1', end='')\n        for i in d:\n            d[i] -= 1\n        tmp = set()\n        for i in d:\n            if d[i] > 0:\n                tmp.add(i)\n    else:\n        print('0', end='')\n    \n              \n    ", "from collections import deque\nn,m=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\nb=[deque([]) for i in range(n+1)]\nfor i in range(m):\n\tb[a[i]].append(i)\n#print(b)\no=False\ncount=0\nindp=0\nwhile o==False:\n\tind=0\n\tfor i in range(1,n+1):\n\t\tif len(b[i])==0:\n\t\t\to=True\n\t\t\tbreak\n\t\tind=max(b[i].popleft(),ind)\n\tif o==True:\n\t\tfor i in range(indp,m):\n\t\t\tprint(0,end='')\n\t\tbreak\n\tfor i in range(indp,ind):\n\t\tprint(0,end='')\n\tindp=ind+1\n\tprint(1,end='')\nprint()", "n, m = list(map(int, input().split()))\nreach = [0] * 100001\ncurrent = 1\ncount = [0] * 100001\na = list(map(int, input().split()))\nans = []\nfor i in a:\n\tcount[i] += 1\n\treach[count[i]] += 1\n\tif current == count[i] and reach[count[i]] == n:\n\t\tans.append('1')\n\t\tcurrent += 1\n\telse:\n\t\tans.append('0')\nprint(''.join(ans))\n", "n, m = map(int, input().split())\ntasks = list(map(int, input().split()))\n\nbank = [0]*n\nzeros = n\nres = []\nfor t in tasks:\n    if bank[t-1] == 0:\n        zeros -= 1\n    bank[t-1] += 1\n    if zeros == 0:\n        for i in range(n):\n            bank[i] -=1\n            if bank[i] == 0:\n                zeros += 1\n        res.append(1)\n    else:\n        res.append(0)\n\nprint(*res, sep='')", "n,m=list(map(int,input().split()))\na2=set(range(1,n+1))\na=list(map(int,input().split()))\na1=set()\nans=\"\"\nns={}\nfor i in a:\n    a1.add(i)\n    if i in ns:\n        ns[i]=ns[i]+1\n    else:\n        ns[i]=1\n    if a1==a2:\n        nns={}\n        for i in ns:\n            ns[i]=ns[i]-1\n            if ns[i]!=0:\n                nns[i]=ns[i]\n        ns=nns\n        a1=set(ns)\n        ans+=\"1\"\n    else:\n        ans+=\"0\"\nprint(ans)\n", "n, m = map(int, input().split())\nmas = list(map(int, input().split()))\npol = [0] * n\nnull = 0\nans = ''\nfor i in range(m):\n    pol[mas[i] - 1] += 1\n    if pol[mas[i] - 1] == 1:\n        null += 1\n    if null == n:\n        ans += '1'\n        null = 0\n        for j in range(n):\n            pol[j] -= 1\n            if pol[j] != 0:\n                null += 1\n    else:\n        ans += '0'\nprint(ans)        ", "n, k = map(int,input().split())\ndiff = list(map(int, input().split()))\ncontest = 0\nd = {}\n\nfor i in diff:\n    try:\n        d[i] += 1\n    except:\n        d[i] = 1\n    if len(d) == n:\n        for j in range(1,n+1):\n            d[j] -= 1\n            if d[j] == 0:\n                del d[j] \n        print(\"1\", end=\"\")\n    else:\n        print(\"0\", end=\"\")\n", "\ndef main():\n    buf = input()\n    buflist = buf.split()\n    n = int(buflist[0])\n    m = int(buflist[1])\n    buf = input()\n    buflist = buf.split()\n    a = list(map(int, buflist))\n    answer = \"\"\n    pool = {}\n    table = set()\n    for i in range(n):\n        table.add(i+1)\n    for i in range(m):\n        if a[i] in pool:\n            pool[a[i]] += 1\n        else:\n            pool.update({a[i]: 1})\n            table.remove(a[i])\n        if len(table) == 0:\n            answer += \"1\"\n            for j in range(n):\n                pool[j+1] -= 1\n                if pool[j+1] <= 0:\n                    pool.pop(j+1)\n                    table.add(j+1)\n        else:\n            answer += \"0\"\n    print(answer)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m = map(int,input().split())\n\na = list(map(int,input().split()))\n\ns = 0\nb = [0]*(n+1)\n\nfor i in a:\n    if b[i] == 0:\n        s += 1\n    b[ i ] += 1\n    if s == n:\n        print(1,end=\"\")\n        for i in range(n):\n            b[i+1] -= 1\n            if b[i+1] == 0:\n                s -= 1\n    else:\n        print(0,end=\"\")\n", "import sys\nimport math\n\ndef read_int():\n\treturn int(input().strip())\n\ndef read_int_list():\n\treturn list(map(int,input().strip().split()))\n\ndef read_string():\n\treturn input().strip()\n\ndef read_string_list(delim=\" \"):\n\treturn input().strip().split(delim)\n\n###### Author : Samir Vyas #######\n###### Write Code Below    #######\n\nn,m = read_int_list()\narr = read_int_list()\n\ndiki = {}\n\nfor i in range(m):\n\tdiki[arr[i]] = diki.get(arr[i],0) + 1\n\n\tif len(diki) == n:\n\t\tto_be_deleted = []\n\t\tfor k in diki:\n\t\t\tdiki[k] -= 1\n\t\t\tif diki[k] <= 0:\n\t\t\t\tto_be_deleted.append(k)\n\n\t\tfor t in to_be_deleted:\n\t\t\tdiki.pop(t)\n\n\t\tprint(1,end=\"\")\n\n\telse:\n\t\tprint(0,end=\"\")", "from heapq import heappush, heappop\nfrom collections import defaultdict\n\nnum_difs, num_probs = [int(x) for x in input().split()]\nprobs = [int(x)-1 for x in input().split()]\n\n\ndef root_not_uptodate(heap):\n    val, idx = heap[0]\n    return dif_counts[idx] != val\n\nis_round = [False for _ in range(num_probs)]\nheap = [(0, idx) for idx in range(num_difs)]\n\ndif_counts = defaultdict(int)\nnum_held = 0\nfor i, dif in enumerate(probs):\n    dif_counts[dif] += 1\n    heappush(heap, (dif_counts[dif], dif))\n    while heap and root_not_uptodate(heap):\n        heappop(heap)\n\n    if heap and heap[0][0] - num_held > 0:\n        num_held += 1\n        is_round[i] = True\n\nprint(''.join('1' if is_r else '0' for is_r in is_round))\n", "n, m = list(map(int, input().split()))\na = list(map(int, input().split()))\nrec = [0] * n\ndic = {}\nfor i in range(m):\n    rec[a[i] - 1] += 1\n    dic[rec[a[i] - 1]] = i\n\nt = [\"0\"] * m\nmi = min(rec)\nfor i in range(1, mi + 1):\n    t[dic[i]] = '1'\n\nprint(\"\".join(map(str, t)))\n", "\n\nMOD = 10**9 + 7\nI = lambda:list(map(int,input().split()))\nfrom collections import defaultdict as dd\n\nn, m = I()\nl = I()\nd = dd(list)\nfor i in range(m):\n\td[l[i]].append(i)\n\nfor i in d:\n\td[i].sort()\nans = [0]*m\nk = 1\n# print(d)\nindex = 0\nwhile True:\n\tfor i in range(1, n + 1):\n\t\tif len(d[i]) < k:\n\t\t\tprint(*ans, sep = '')\n\t\t\treturn\n\t\tindex = max(index, d[i][k-1])\n\tk += 1\n\t# print(index)\n\tans[index] = 1\nprint(*ans, sep = '')", "N, M = map(int, input().split())\na = list(map(lambda x: int(x)-1, input().split()))\n\nproblems = [0]*N\ncount = 0\nans = []\nappend = ans.append\n\nfor n in a:\n    if not problems[n]:\n        count += 1\n    problems[n] += 1\n    append(1 if count == N else 0)\n    if count == N:\n        count = 0\n        for i in range(N):\n            problems[i] -= 1\n            if problems[i] > 0:\n                count += 1\n\nprint(*ans, sep=\"\")", "n,m=map(int,input().split())\narr=list(map(int,input().split()))\nd={}\nres = \"\"\nfor i in arr:\n\tif i in d:\n\t\td[i]+=1\n\telse:\n\t\td[i]=1\n\tis_round = (len(d) == n)\n\tres+=str(int(is_round))\n\tif is_round:\n\t\td2= {}\n\t\tfor k, v in d.items():\n\t\t\tif v > 1:\n\t\t\t\td2[k] = v - 1 \n\t\td = d2\n\nprint(res)", "n,m=map(int,input().split())\na=list(map(int,input().split()))\nb=dict()\nfor i in range(len(a)):\n    b[a[i]]=b.get(a[i],0)\n    b[a[i]]+=1\n    # print(b)\n\n    if len(b)==n:\n        print(\"1\",end=\"\")\n        c=[]\n        for k in b:\n            b[k]-=1\n\n            if b[k]==0:\n                c.append(k)\n        for j in range(len(c)):\n            del b[c[j]]\n\n    else:\n        print(\"0\", end=\"\")\n", "#\t!/usr/bin/env python3\n#\tcoding: UTF-8\n#\tModified: <13/Jan/2019 08:32:29 PM>\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology (IIIT),Gwalior\n\n#\tQuestion Link\n#\n#\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\ninf = float(\"inf\")\nmod = 1000000007\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return map(int, sys.stdin.readline().split())\n\n\ndef input(): return sys.stdin.readline()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    n, m = get_ints()\n    arr = get_array()\n    d = {}\n    s = set()\n    ans = [0] * m\n    for i in range(m):\n        x = arr[i]\n        if x not in d:\n            d[x] = 0\n        d[x] += 1\n        s.add(x)\n        if len(s) == n:\n            ans[i] = 1\n            for i in range(1, n + 1):\n                d[i] -= 1\n                if d[i] == 0:\n                    s.remove(i)\n        else:\n            ans[i] = 0\n    print(*ans, sep='')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]