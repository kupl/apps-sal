["n = int(input())\na = list(map(int, input().split()))\nb = input()\nr = 1000000000\nl = -r\nfor i in range(4, n):\n  if b[i - 1] != b[i]:\n    if b[i] == '0':\n      r = min(r, min(a[i - 4: i + 1]) - 1)\n    else:\n      l = max(l, max(a[i - 4: i + 1]) + 1)\nprint(l, r)\n", "n = int(input())\na = list(map(int, input().split()))\nb = input()\nl = -(10**9)\nr = 10**9\nfor i in range(4, n):\n    if b[i] == '1' and b[i-4:i] == '0000':\n        l = max(l, max([a[i],a[i-1], a[i-2], a[i-3], a[i-4]])+1)\n    elif b[i] == '0' and b[i-4:i] == '1111':\n        r = min(r, min([a[i],a[i-1], a[i-2], a[i-3], a[i-4]])-1)\nprint(l, r)", "n = int(input())\na = [int(x) for x in input().split(' ')]\nb = input()\n\nllow = -1000000000\nlhigh = 1000000000\nrlow = -1000000000\nrhigh = 1000000000\n\ni = 4\nlast = 0\nwhile i < n:\n\tif int(b[i]) == last:\n\t\tif last == 1:\n\t\t\tif min(a[i-4:i+1]) > rlow:\n\t\t\t\trlow = min(a[i-4:i+1])\n\t\telse:\n\t\t\tif max(a[i-4:i+1]) < llow:\n\t\t\t\tlhigh = max(a[i-4:i+1])\n\n\t\ti+=1\n\telse:\n\t\tif last == 1:\n\t\t\tif min(a[i-4:i+1]) <= rhigh:\n\t\t\t\trhigh = min(a[i-4:i+1]) - 1\n\t\telse:\n\t\t\tif max(a[i-4:i+1]) >= llow:\n\t\t\t\tllow = max(a[i-4:i+1]) +1\n\n\t\tlast = 1-last\n\t\ti+=4\n\n\tif llow == lhigh and rlow == rhigh:\n\t\tbreak\n\nprint(str(llow)+' '+str(rhigh))", "n=int(input())\na=list(map(int,input().split()))\ns=input()\nl=-1000000000\nr=1000000000\nfor i in range(4,n):\n    if s[i-4:i]=='0000':\n        if s[i]=='1':\n            l=max(max(a[i-4:i+1])+1,l)\n    if s[i-4:i]=='1111':\n        if s[i]=='0':\n            r=min(min(a[i-4:i+1])-1,r)\nprint(l, r)\n    \n", "n = int(input())\na = list(map(int, input().split()))\nb = list(map(lambda x: 1 if x == '1' else 0, input()))\nleft, right = - 10 ** 9, 10 ** 9\nfor i in range(4, n):\n\ttest = True\n\tfor j in range(2, 5):\n\t\tif b[i - j] != b[i - 1]:\n\t\t\ttest = False\n\tif not test:\n\t\tcontinue\n\tif b[i] == 0 and b[i - 1] == 1:\n\t\tfor j in range(5):\n\t\t\tright = min(right, a[i - j] - 1)\n\tif b[i] == 1 and b[i - 1] == 0:\n\t\tfor j in range(5):\n\t\t\tleft = max(left, a[i - j] + 1)\nprint(left, right)", "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,list(input())))\ncurrent = 0\nl = 10**9 * (-1)\nr = 10**9\nfor i in range(n):\n\tif(b[i] != current):\n\t\tcurrent = b[i]\n\t\tif(b[i] == 0):\n\t\t\tr = min(r, min(a[i-4:i+1])-1)\n\t\telse:\n\t\t\tl = max(l, max(a[i-4:i+1])+1)\nprint(l,r,end = \" \")", "from sys import stdin as cin\n\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = input()\n    l, r = '?', '?'\n    for i in range(1, n):\n        if b[i] == '1' and b[i-1] == '0':\n            if l == '?':\n                l = 1 + max(a[i], a[i-1], a[i-2], a[i-3], a[i-4])\n            else:\n                l = max(l, 1 + max(a[i], a[i-1], a[i-2], a[i-3], a[i-4]))\n        if b[i] == '0' and b[i-1] == '1':\n            if r == '?':\n                r = min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1\n            else:\n                r = min(r, min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1)\n    if l == '?':\n        l = -1000000000\n    if r == '?':\n        r = 1000000000\n    print(l, r)\n\nmain()\n", "def run():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    bt = [int(x) for x in input()]\n\n    lmin = -(10**9)\n    lmax = -lmin\n    rmin = lmin\n    rmax = lmax\n\n    for i in range(4, n):\n        prev = bt[i-1] + bt[i-2] + bt[i-3] + bt[i-4]\n        if 0 < prev < 4:\n            continue\n\n        if prev == 0:\n\n            acmp = max((a[i], a[i-1], a[i-2], a[i-3], a[i-4]))\n            if bt[i] == 1:\n                lminc = acmp + 1\n                lmin = lminc if lminc > lmin else lmin\n            else:\n                lmaxc = acmp\n                lmax = lmaxc if lmaxc < lmax else lmax\n\n        elif prev == 4:\n\n            acmp = min((a[i], a[i-1], a[i-2], a[i-3], a[i-4]))\n            if bt[i] == 0:\n                rmaxc = acmp - 1\n                rmax = rmaxc if rmaxc < rmax else rmax\n            else:\n                rminc = acmp\n                rmin = rminc if rminc > rmin else rmin\n\n    print(f'{lmin} {rmax}')\n\nrun()", "_ = input()\nnumbers = [int(x) for x in input().split()]\nbits = input()\n\nINF = int(1e9)\n\nlowerBoundL = -INF\nupperBoundL = INF\nlowerBoundR = -INF\nupperBoundR = INF\n\nfor pos in range(4, len(bits)):\n\twindow = slice(pos - 4, pos + 1)\n\n\tif bits[window] == '00000':\n\t\tupperBoundL = min(upperBoundL, *numbers[window])\n\telif bits[window] == '00001':\n\t\tlowerBoundL = max(lowerBoundL, *(x + 1 for x in numbers[window]))\n\telif bits[window] == '11111':\n\t\tlowerBoundR = max(lowerBoundR, *numbers[window])\n\telif bits[window] == '11110':\n\t\tupperBoundR = min(upperBoundR, *(x - 1 for x in numbers[window]))\n\nprint(lowerBoundL, upperBoundR)", "n = int(input())\na = input().split()\nb = input()\n_b = list()\n\nfor i in range(len(a)):\n    a[i] = int(a[i])\n\nfor l in b:\n    _b.append(int(l))\n\nb = _b\nr = 10**9\nl = -10**9\n\nfor i in range(len(b)):\n    if i > 3:\n        if b[i] == 0 and b[i-1] == b[i-2] == b[i-3] == b[i-4] == 1:\n            if min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1 < r:\n                r = min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1\n        elif b[i] == 1 and b[i-1] == b[i-2] == b[i-3] == b[i-4] == 0:\n            if max(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) + 1 > l:\n                l = max(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) + 1\n\nprint(l, r)\n", "inf = int(1e9)\nM = mod = 1000000007\nmod2inv = 500000004\npt = lambda *a, **k: print(*a, **k, flush=True)\nrd = lambda: map(int, input().split())\nn = int(input())\na = list(rd())\nb = input()\nl1 = -inf\nl2 = inf\nr1 = -inf\nr2 = inf\nf = 4\nfor i in range(4, n):\n    x = b[i]\n    if f == 4 and x == '1':\n        l1 = max(l1, max(a[i - 4: i + 1]) + 1)\n        f = 0\n    if f == 4 and x == '0':\n        l2 = min(l2, max(a[i - 4: i + 1]))\n    if f == -4 and x == '1':\n        r1 = max(r1, min(a[i - 4: i + 1]))\n    if f == -4 and x == '0':\n        r2 = min(r2, min(a[i - 4: i + 1]) - 1)\n        f = 0\n    if -4 < f < 4:\n        if x == '0':\n            f += 1\n        if x == '1':\n            f -= 1\nprint(min(l1, l2), max(r1, r2))\n", "n = int(input())\na = list(map(int, input().split()))\nb = input()\n\nr = 1e+9\nl = -1e+9\n\nfor i in range(4, n):\n    if b[i - 4: i] == \"1111\" and b[i] == \"0\":\n        r = min(r, min(a[i - 4: i + 1]) - 1)\n    if b[i - 4: i] == \"0000\" and b[i] == \"1\":\n        l = max(l, max(a[i - 4: i + 1]) + 1)\n\nprint(int(l), int(r))\n", "def solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, list(input())))\n\n    # print(A, B)\n\n    LMIN = -10**9\n    LMAX = 10**9\n    RMIN = -10**9\n    RMAX = 10**9\n    for i in range(4, n):\n        if b[i-1] == 0 and b[i-2] == 0 and b[i-3] == 0 and b[i-4] == 0:\n            if b[i] == 1:\n                LMIN = max(LMIN, max(a[i],a[i-1],a[i-2],a[i-3],a[i-4])+1)\n            elif b[i] == 0:\n                LMAX = min(LMAX, max(a[i],a[i-1],a[i-2],a[i-3],a[i-4]))\n        elif b[i-1] == 1 and b[i-2] == 1 and b[i-3] == 1 and b[i-4] == 1:\n            if b[i] == 1:\n                RMIN = max(RMIN, min(a[i],a[i-1],a[i-2],a[i-3],a[i-4]))\n            elif b[i] == 0:\n                RMAX = min(RMAX, min(a[i],a[i-1],a[i-2],a[i-3],a[i-4])-1)\n        else:\n            pass\n\n    # print(LMIN, LMAX, RMIN, RMAX)\n\n    # l = (LMIN + LMAX)//2\n\n    print(LMIN, RMAX)\n\ndef __starting_point():\n    solve()\n\n\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nb = input()\n\nl, r = -10 ** 9, 10 ** 9\n\nfor i, el in enumerate(b[4:], 4):\n    if b[i - 4: i] == '0000' and el == '1':\n        l = max(l, max(a[i - 4: i + 1]) + 1)\n\n    elif b[i - 4: i] == '1111' and el == '0':\n        r = min(r, min(a[i - 4: i + 1]) - 1)\n\nprint(l, r)\n", "def check(lst, val):\n    return (lst[1:] == lst[:-1]) and (lst[0] == val)\nn = int(input())\na= [int(s) for s in input().split(\" \")]\nb_= [int(s) for s in list(input())]\nl = -10**9\nr = 10**9\nlist_=b_[:4]\nfor i in range(4, len(b_)):\n    if  check(list_,0):\n        if b_[i] == 1:\n            l = max(max(a[i-4:i+1]) + 1,l)\n    elif check(list_,1):\n        if b_[i] == 0:\n            r = min(r,min(a[i-4:i+1]) - 1)\n    list_.pop(0)\n    list_.insert(len(list_),b_[i])\n\nprint(str(l)+ \" \" + str(r))\n\n", "n = int(input())\na = list(map(int, input().split()))\nb = input()\n\nminl = int(-1e9)\nmaxr = int(1e9)\n\nfor i in range(4, n):\n  if not (b[i-4] == b[i-3] == b[i-2] == b[i-1] != b[i]):\n    continue\n  #print('working for', i)\n  if b[i] == '0':\n    maxr = min(maxr+1, a[i], a[i-1], a[i-2], a[i-3], a[i-4])-1\n  if b[i] == '1':\n    minl = max(minl-1, a[i], a[i-1], a[i-2], a[i-3], a[i-4])+1\n\nprint(minl, maxr)", "import re\ninput()\na = list(map(int, input().split()))\nb = input()\nl, r = -10**9, 10**9\n\n# a: a a a a a > r\n# b: 1 1 1 1 0\nfor m in re.finditer(\"11110\", b):\n\ti = m.start(0)\n\tr = min([r + 1] + a[i:i+5]) - 1\n\n# a: a a a a a < l\n# b: 0 0 0 0 1 \t\t\nfor m in re.finditer(\"00001\", b):\n\ti = m.start(0)\n\tl = max([l - 1] + a[i:i+5]) + 1\n\t\t\nprint(l, r)", "3\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input()))\nl = None\nr = None\ni = 4\nwhile i < n:\n\tif b[i] == 0 and b[i-1] == b[i-2] == b[i-3] == b[i-4] == 1:\n\t\tif r is None:\n\t\t\tr = min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1\n\t\telse:\n\t\t\tr = min(r, min(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) - 1)\n\telif b[i] == 1 and b[i-1] == b[i-2] == b[i-3] == b[i-4] == 0:\n\t\tif l is None:\n\t\t\tl = max(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) + 1\n\t\telse:\n\t\t\tl = max(l, max(a[i], a[i-1], a[i-2], a[i-3], a[i-4]) + 1)\n\ti += 1\n\nif l is None:\n\tl = -1000000000\nif r is None:\n\tr = 1000000000\nprint(\"%s %s\" % (l, r))", "n = int(input())\nls = list(map(int, input().split()))\ns = input()\nr = int(1e9)\nl = -r\ni = 4\nwhile i < n:\n    if s[i] == s[i - 1]: \n        i += 1\n        continue\n    if s[i] == '1': \n        l = max(l, max(ls[i - 4 : i + 1]) + 1)\n    elif s[i] == '0':\n        r = min(r, min(ls[i - 4 : i + 1]) - 1)\n    i += 1\nprint(l, r)\n\n\n\n", "def main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    b = input()\n\n    re = int(1e9)\n    le = -re\n    x = True\n    for i in range(n):\n        if b[i] == ('1' if x else '0'):\n            for j in a[i - 4:i + 1]:\n                if x:\n                    if le <= j:\n                        le = j + 1\n                else:\n                    if re >= j:\n                        re = j - 1\n            x = not x\n    print(le, re)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]