["import sys\n\ncnt = {\n        \"Tetrahedron\": 4,\n        \"Cube\": 6,\n        \"Octahedron\": 8,\n        \"Dodecahedron\": 12,\n        \"Icosahedron\": 20}\n\nn = int(input())\nc = 0\n\nfor _ in range(n):\n    s = input()\n    c += cnt[s]\n\nprint(c)\n", "n = int(input())\n\nr = 0\nfor i in range(n):\n\ts = input().strip()\n\tif s == 'Tetrahedron':\n\t\tr += 4\n\telif s == 'Cube':\n\t\tr += 6\n\telif s == 'Octahedron':\n\t\tr += 8\n\telif s == 'Dodecahedron':\n\t\tr += 12\n\telif s == 'Icosahedron':\n\t\tr += 20\n\nprint(r)", "n = int(input())\nd = {'T':4, 'C':6, 'O':8, 'D':12, 'I':20}\nans = 0\nfor _ in range(n):\n    ans += d[input()[0]]\nprint(ans)\n", "\"\"\"\nATSTNG's ejudge Python3 solution template\n(actual solution is below)\n\"\"\"\nimport sys, queue, string, math\n\ntry:\n    import dev_act_ffc429465ab634  # empty file in directory\n    DEV = True\nexcept:\n    DEV = False\n\ndef log(*s):\n    if DEV: print('LOG', *s)\n\nclass EJudge:\n    def __init__(self, problem=\"default\", reclim=1<<30):\n        self.problem = problem\n        sys.setrecursionlimit(reclim)\n\n    def use_files(self, infile='', outfile=''):\n        if infile!='':\n            self.infile = open(infile)\n            sys.stdin = self.infile\n        if infile!='':\n            self.outfile = open(outfile, 'w')\n            sys.stdout = self.outfile\n\n    def use_bacs_files(self):\n        self.use_files(self.problem+'.in', self.problem+'.out')\n\n    def get_tl(self):\n        while True: pass\n\n    def get_ml(self):\n        tmp = [[[5]*100000 for _ in range(1000)]]\n        while True: tmp.append([[5]*100000 for _ in range(1000)])\n\n    def get_re(self):\n        s = (0,)[8]\n\n    def get_wa(self, wstr='blablalblah'):\n        for _ in range(3): print(wstr)\n        return\n\nclass IntReader:\n    def __init__(self):\n        self.ost = queue.Queue()\n\n    def get(self):\n        return int(self.sget())\n\n    def sget(self):\n        if self.ost.empty():\n            for el in input().split():\n                self.ost.put(el)\n        return self.ost.get()\n\n    def release(self):\n        res = []\n        while not self.ost.empty():\n            res.append(self.ost.get())\n        return res\n\ndef tokenized(s):\n    \"\"\" Parses given string into tokens with default rules \"\"\"\n    word = []\n\n    for ch in s.strip():\n        if ch == ' ':\n            if word: yield ''.join(word); word = []\n        elif 'a' <= ch <= 'z' or 'A' <= ch <= 'Z' or '0' <= ch <= '9':\n            word.append(ch)\n        else:\n            if word: yield ''.join(word); word = []\n            yield ch\n\n    if word: yield ''.join(word); word = []\n\n###############################################################################\nej = EJudge(  )\nint_reader = IntReader()\nfmap = lambda f,*l: list(map(f,*l))\nparse_int = lambda: fmap(int, input().split())\n\n# input\n\nfig = {\n    'Tetrahedron': 4,\n    'Cube': 6,\n    'Octahedron': 8,\n    'Dodecahedron': 12,\n    'Icosahedron': 20,\n}\n\nans = 0\nfor _ in range(int(input())):\n    ans += fig[input().strip()]\nprint(ans)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\n\nans = 0\nfor i in range(n):\n    s = input().lower()[0]\n    if s == 't':\n        ans += 4\n    elif s == 'c':\n        ans += 6\n    elif s == 'o':\n        ans += 8\n    elif s == 'd':\n        ans += 12\n    else:\n        ans += 20\n        \nprint(ans)        ", "n = int(input())\n\nans = 0\nfor i in range(n):\n    s = input()\n    if s == 'Tetrahedron':\n        ans += 4\n    elif s == 'Cube':\n        ans += 6\n    elif s == 'Octahedron':\n        ans += 8\n    elif s == 'Dodecahedron':\n        ans += 12\n    else:\n        ans += 20\n        \nprint(ans)", "n = int(str(input()).strip())\nd = {'Tetrahedron': 4, 'Cube': 6, 'Octahedron': 8, 'Dodecahedron': 12, 'Icosahedron': 20}\nans = 0\nfor _ in range(n):\n    ans += d[str(input()).strip()]\nprint(ans)\n", "#!/bin/python3\n\nimport sys\nn = int(input())\nd = {\"Tetrahedron\":4, \"Cube\":6,\"Octahedron\":8,\"Dodecahedron\":12,\"Icosahedron\" :20};\nans = 0\nfor i in range(n):\n    name  = input()\n    ans += d[name];\nprint(ans)", "d = {\n        'Tetrahedron': 4,\n        'Cube': 6,\n        'Octahedron': 8,\n        'Dodecahedron': 12,\n        'Icosahedron': 20\n        }\nn = int(input())\nr = 0\nfor _ in range(n):\n    r += d[input()]\n\nprint(r)\n\n", "import math\nimport itertools\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nmp = {'tetrahedron':4,\n      'cube': 6,\n      'octahedron':8,\n      'dodecahedron':12,\n      'icosahedron':20}\n\nsz = ria()[0]\nsuma = 0\nfor i in range(sz):\n    suma += mp[str(input()).lower()]\nprint(suma)", "def main():\n\tn = int(input())\n\n\td = {}\n\td['Tetrahedron'] = 4\n\td['Cube'] = 6\n\td['Octahedron'] = 8\n\td['Dodecahedron'] = 12\n\td['Icosahedron'] = 20\n\n\tans = 0\n\tfor i in range(n):\n\t\tt = input()\n\t\tans += d[t]\n\n\tprint(ans)\n\treturn\n\ndef __starting_point():\n\tmain()\n__starting_point()", "d = {}\nd['Tetrahedron'] = 4\nd['Cube'] = 6\nd['Octahedron'] = 8\nd['Dodecahedron'] = 12\nd['Icosahedron'] = 20\n\nprint(sum([d[input()] for _ in range(int(input()))]))\n", "d = {'Tetrahedron':4, 'Cube':6, 'Octahedron':8, 'Dodecahedron':12, 'Icosahedron':20}\nn = int(input())\nans = 0\nfor i in range(n):\n    s = input()\n    ans += d[s]\nprint(ans)", "n = int(input())\n\ncnt = {\"Tetrahedron\":4,\n       \"Cube\": 6,\n       \"Octahedron\": 8,\n       \"Dodecahedron\": 12,\n       \"Icosahedron\": 20}\n\nans = 0\nfor i in range(n):\n    name = input()\n    ans += cnt[name]\n\nprint(ans)", "n=int(input())\nans=0\nfor _ in range(n):\n    s=input()\n    if s=='Tetrahedron': ans+=4\n    elif s=='Cube': ans+=6\n    elif s=='Octahedron': ans+=8\n    elif s=='Dodecahedron': ans+=12\n    else: ans+=20\nprint(ans)", "from sys import stdin, stdout\n \nn = int(stdin.readline())\nans = 0\n\nfor i in range(n):\n    s = stdin.readline().strip()\n    \n    if s[0] == 'T':\n        ans += 4\n    elif s[0] == 'C':\n        ans += 6\n    elif s[0] == 'O':\n        ans += 8\n    elif s[0] == 'D':\n        ans += 12\n    elif s[0] == 'I':\n        ans += 20\n\n\nstdout.write(str(ans))", "n = int(input())\no = 0\nfor i in range(n):\n    s = input()\n    if s == \"Tetrahedron\":\n        o += 4\n    elif s == \"Cube\":\n        o += 6\n    elif s == \"Octahedron\":\n        o += 8\n    elif s == \"Dodecahedron\":\n        o += 12\n    else:\n        o += 20\nprint(o)\n", "n = int(input())\nans = 0\nfor i in range(n):\n    s = input()\n    if s == \"Tetrahedron\":\n        ans += 4\n    elif s == \"Cube\":\n        ans += 6\n    elif s == \"Octahedron\":\n        ans += 8\n    elif s == \"Dodecahedron\":\n        ans += 12\n    else:\n        ans += 20\nprint(ans)", "a = {\"Tetrahedron\":4, \"Cube\":6, \"Octahedron\": 8, \"Dodecahedron\": 12, \"Icosahedron\": 20}\nn = int(input())\ns = 0\nfor _ in range(0,n):\n    s+=a[input()]\nprint(s)\n", "n = int(input())\ns = 0\nfor i in range(n):\n\tcurrent = input()\n\tif current == \"Tetrahedron\":\n\t\ts += 4\n\telif current == \"Cube\":\n\t\ts += 6\n\telif current == \"Octahedron\":\n\t\ts += 8\n\telif current == \"Dodecahedron\":\n\t\ts += 12\n\telse:\n\t\ts += 20\nprint(s)\n", "n=int(input())\nd=0\nfor i in range(n):\n    s=input()\n    if(s==\"Tetrahedron\"):\n        d=d+4\n    elif(s==\"Cube\"):\n        d=d+6\n    elif(s==\"Octahedron\"):\n        d=d+8\n    elif(s==\"Dodecahedron\"):\n        d=d+12\n    else:d=d+20\nprint(d)\n", "V = {\n    \"Tetrahedron\": 4,\n    \"Cube\": 6,\n    \"Octahedron\": 8,\n    \"Dodecahedron\": 12,\n    \"Icosahedron\": 20\n}\n\nn = int(input())\nres = 0\n\nfor i in range(n):\n    p = input()\n    res += V[p]\n\nprint(res)", "__author__ = 'zihaozhu'\nfrom sys import stdin\n\ncases = int(stdin.readline())\n\ntotal = 0\nfor i in range(cases):\n    shape = stdin.readline().rstrip()\n    if shape==\"Tetrahedron\":\n        total+= 4\n    elif shape == \"Cube\":\n        total += 6\n    elif shape == \"Octahedron\":\n        total += 8\n    elif shape == \"Dodecahedron\":\n        total += 12\n    elif shape == \"Icosahedron\":\n        total += 20\nprint(total)\n", "m = {\"Tetrahedron\": 4, \"Cube\": 6, \"Octahedron\": 8, \"Dodecahedron\": 12, \"Icosahedron\": 20}\nn = int(input())\nres = 0\nfor i in range(n):\n    s = input()\n    res += m[s]\nprint(res)\n", "data = {\n    'Tetrahedron':4,\n    'Cube':6,\n    'Octahedron':8,\n    'Dodecahedron':12,\n    'Icosahedron':20\n}\nn = int(input())\nans = 0\nfor _ in range(0,n):\n    s = input()\n    ans = ans + data[s]\nprint(ans)"]