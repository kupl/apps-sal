["n = int(input())\nst = input()\nans = n\nnow = ''\nma = 0\nfor i in range(n // 2):\n    now += st[i]\n    t = ''\n    for j in range(i + 1, 2 * i + 2):\n        t += st[j]\n    if t == now:\n        ma = i\nprint(ans - ma)\n", "n = int(input())\nstrng = input().strip()\nres = len(strng)\nst = len(strng)//2\nwhile st>0:\n    if strng[:st] == strng[st:st*2]:\n        print(res - st +1)\n        return\n    st -= 1\n\nprint(res)\n\n\n\n", "import getpass\nimport sys\nimport math\nimport random\nimport itertools\nimport bisect\nimport time\n\nfiles = True\ndebug = False\n\nif getpass.getuser() == 'frohenk' and files:\n    debug = True\n    sys.stdin = open(\"test.in\")\n    # sys.stdout = open('test.out', 'w')\nelif files:\n    # fname = \"gift\"\n    # sys.stdin = open(\"%s.in\" % fname)\n    # sys.stdout = open('%s.out' % fname, 'w')\n    pass\n\n\ndef lcm(a, b):\n    return a * b // math.gcd(a, b)\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\ndef range_sum(a, b):\n    ass = (((b - a + 1) // 2) * (a + b))\n    if (a - b) % 2 == 0:\n        ass += (b - a + 2) // 2\n    return ass\n\n\ndef comba(n, x):\n    return (math.factorial(n) // math.factorial(n - x)) // math.factorial(x)\n\n\nn = ria()[0]\nsuma = n\nst = input()\nmx = 0\nfor i in range(1, n + 1):\n    if i + i <= n:\n        if st[:i] == st[i:i + i]:\n            mx = max(mx, len(st[:i]) - 1)\nprint(n - mx)\n", "input()\ns=input()\nans=len(s)\nfor i in range(len(s)//2,0,-1):\n\tif s[:i]==s[i:2*i]:\n\t\tans=len(s)-i+1\n\t\tbreak\nprint(ans)", "n = int(input())\ns = input()\n\nanw = n\n\ndef calc(pos):\n  x = s[:pos] + s[:pos]\n  if x == s[:pos*2]:\n    return 1+n-pos\n  return 1e9\n\nfor i in range(n):\n  anw = min(anw, calc(i))\n  \nprint(anw)", "n = int(input())\ns = input()\nans = n\nfor i in range(n):\n    ss = s[:i]\n    if 2*i <= n and s[:i] == s[i:2*i]:\n        ans = min(ans, n - i +1)\nprint(ans)", "n = int(input())\ns = input()\n\nans = n\nfor i in range(n // 2 + 1):\n    if s[:i] == s[i:2 * i]:\n        # print (s[:i])\n        ans = min(ans, i + 1 + n - 2 * i)\nprint(ans)\n", "R = lambda : list(map(int, input().split()))\nn = int(input())\ns = input()\n\nfor i in reversed(list(range(n//2))):\n    if s[0:i+1]==s[i+1:2*i+2]:\n        print((n-i)); return;\n\nprint(n)\n", "def test(k):\n    if len(s) >= 2 * k:\n        return s[:k] == s[k: 2 * k]\n    return False\n\n\nn = int(input())\ns = input()\nd = 0\nfor i in range(len(s) + 1):\n    if test(i):\n        d = i\nprint(min(len(s), len(s) - 2 * d + d + 1))\n", "n=int(input())\ns=input()\nimp=0\nfor i in range(n//2,0,-1):\n    if(s[:i]==s[i:2*i]):\n        imp=i\n        break\nprint(min(n,n-imp+1))", "n = int(input())\ns = input()\ncurrents = s\nans = 0\nwhile (len(currents)>0):\n    if (len(currents)%2==0) and (currents[0:len(currents)//2]==currents[len(currents)//2:len(s)]):\n            ans = ans+len(currents)//2\n            ans+=1\n            break\n    else:\n        currents = currents[0:len(currents)-1]\n        ans = ans+1\nprint(ans)            \n    \n        \n    \n\n    \n", "n = int(input())\na = input()\no = ''\nm = 0\nfor i in range(n//2):\n    #print(a[:i+1],a[i+1:i+i+2])\n    if a[:i+1] == a[i+1:i+i+2]:\n     #   print(a[:i+1])\n        m = i\nprint(n-m)\n", "N = int(input())\nS = input()\ncopied = 1\nfor i in range(1,N//2+1):\n    # print(i, \"\\\"{}\\\"\".format(S[:i]), \"\\\"{}\\\"\".format(S[i:2*i]))\n    if S[:i] == S[i:2*i]:\n        copied = i\nprint(N-copied+1)\n", "n = int(input())\ns = input()\nans = 1e18\nfor c in range(n // 2 + 1):\n    curr = c + 1 + (n - 2 * c)\n    if c == 0:\n        curr -= 1\n    s1 = s[:c] * 2\n    b = True\n    for i in range(len(s1)):\n        if s1[i] != s[i]:\n            b = False\n            break\n    #print(c, b, curr, s1)\n    if b:\n        ans = min(ans, curr)\nprint(ans)", "n = int(input())\ns = input()\nres = n\nfor i in range(1, n//2+1):\n\tif s[:i] == s[i:i * 2]:\n\t\tres = n-i+1\nprint(res)\n", "n = int(input())\n\ns = input()\n\nss = \"\"\n\ni = 0\nlongest  = 0\n\nfor i in range(int(n/2)):\n\t#print(s[0:i+1])\n\t#print(s[i+1:i+i+1+1])\n\tif s[0:i+1] == s[i+1:i+i+1+1]:\n\t\tlongest = i\n\nans = n-longest\n\nprint(ans)\n", "l = int(input())\nk = input()\nans = 0\nfor i in range(1, (l//2) + 1):\n    flag = 1\n    for j in range(0, i):\n        if k[j] != k[i + j]:\n            flag = 0\n            break\n    if flag == 1:\n        ans = max(ans, i)\nsu = l - (ans)\nif ans > 0:\n    su += 1\nprint(su)\n", "n = int(input())\ns = str(input())\nans = len(s)\nfor i in range(1, n+1):\n    if s[:i] + s[:i] == s[:2*i] and 2*i <= n:\n        ans = min(ans, n-i+1)\nprint(ans)\n", "n = int(input())\ns = input()\n\ncnt = 0\nfor i in range(2,n//2+1):\n\tif s[:i] == s[i:i+i]:\n\t\tcnt = i\n\nif cnt == 0:\n\tprint(n)\nelse:\n\tprint(n - (cnt - 1))\n\n", "n = int(input())\ns = input()\nc = 0\n\nfor i in range(1, 1 + len(s) // 2):\n    if s[:i] == s[i:2 * i]:\n        c = i\n\nif c != 0:\n    print(n - c + 1)\n\nelse:\n    print(n)\n", "n = int(input())\nseq = input()\ncount = n\nfor i in range(1,n//2+1):\n    if seq[0:i] == seq[i:min(2*i,n)]:\n        count = n + 1 - i\nprint(count)", "n=input()\ns=input()\nbest = 0\nfor i in range(len(s)//2+1):\n\tt = s[:i]*2\n\t# print(t)\n\ttry:\n\t\tif s.index(t) == 0:\n\t\t\tbest = i\n\texcept:\n\t\tpass\nif best > 0:\n\tprint(len(s) - best + 1)\nelse:\n\tprint(len(s))\t ", "n=int(input())\ns=input()\ni=0\nd=\"\"\nls=[]\nmx=-1\nwhile i<n:\n    temp=s[0:i+1]\n    for j in range(i+1,n+1):\n        if temp==s[i+1:j]:\n            mx=max(mx,len(temp))\n    i+=1\nif mx>0:\n    print(len(temp)-mx+1)\nelse:\n    print(len(temp))", "n = int(input())\ns = input()\nx = 1\nfor i in range(1, (n >> 1) + 1):\n    if s[:i] == s[i:2 * i]:\n        x = i\nprint(n - x + 1)\n"]