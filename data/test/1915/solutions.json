["n = int(input())\na = [[1] * n for i in range(n)]\nfor i in range(1, n):\n    for j in range(1, n):\n        a[i][j] = a[i - 1][j] + a[i][j - 1]\nprint(a[n - 1][n - 1])\n", "\"\"\"\nCodeforces Contest 289 Div 2 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\nfrom math import factorial as f\n\ndef main():\n    n, = read()\n    return f(2*n-2) // f(n-1) // f(n-1)\n\n\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "n = int(input())\narr = [[1 for i in range(n)] for j in range(n)]\nfor i in range(1, n):\n    for j in range(1, n):\n        arr[i][j] = arr[i - 1][j] + arr[i][j - 1]\nprint(arr[n - 1][n - 1])", "n = int(input())\nfrom math import factorial\nprint(factorial(2*(n-1)) // factorial(n-1) // factorial(n-1))", "n=int(input())\nar=[]\nar.append([1]*(n+1))\nfor x in range(n-1):\n    ar.append([0]*(n+1))\nq=0\nfor x in range(1,n):\n    for y in range(1,n+1):\n        ar[x][y]=ar[x-1][y]+ar[x][y-1]\nfor x in range(n):\n    q=max(q,max(ar[x]))\nprint(q)", "def d(i, j):\n    if i == 1 or j == 1:\n        return 1\n    return d(i - 1, j) + d(i, j - 1)\n\nn = int(input())\nprint(d(n, n))\n", "n = int(input())\na = [[1 for i in range(n)] for j in range(n)]\nfor i in range(1,n):\n\tfor j in range(1,n):\n\t\ta[i][j] = a[i][j-1] + a[i-1][j]\n\nprint(a[n-1][n-1])", "n = int(input())\n\nl = [1] * n\n\nfor i in range(1, n):\n    for j in range(1, n):\n        l[j] += l[j-1]\n\nprint(l[n-1])\n", "n = int(input()) - 1\na = [1, 2, 6, 20, 70, 252, 924, 3432, 12870, 48620]\nprint(a[n])\n", "def a(i, j):\n    if i == 1 or j == 1:\n        return 1\n    return a(i - 1, j) + a(i, j - 1)\n\nn = int(input())\nprint(a(n, n))", "def main():\n    n = int(input())\n    a = [[1] * n for _ in range(n)]\n    for y in range(1, n):\n        for x in range(1, n):\n            a[y][x] = a[y - 1][x] + a[y][x - 1]\n    print(a[-1][-1])\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import math\na = int(input()) - 1\nprint(math.factorial(2*a)//(math.factorial(a)**2))\n", "n = int(input())\ntrian_Pask = [[0] * n for i in range(n)]\n \ndef strspace(k):\n    spaces = 6 - len(str(k))\n    return ' '  * spaces + str(k)\n \nfor y in range(n):\n     for x in range(n):\n          if x == 0 or y == 0:\n               trian_Pask[y][x] = 1\n          else:\n               trian_Pask[y][x] = trian_Pask[y - 1][x] + trian_Pask[y][x - 1]\n \nprint(trian_Pask[n-1][n-1])\n", "n = int(input())\nt = [[0]*n for i in range(n)]\nfor i in range(n):\n    t[0][i] = 1\n    t[i][0] = 1\nfor i in range(1, n):\n    for j in range(1, n):\n        t[i][j] = t[i-1][j]+t[i][j-1]\nprint(t[n-1][n-1])", "n = int(input())\narr = [[1 for _ in range(n)] for _ in range(n) ]\n\nfor i in range(1,n):\n    for j in range(1,n):\n        arr[i][j] = arr[i-1][j] + arr[i][j-1]\n\nprint(arr[n-1][n-1])", "n_str = input()\nn = int(n_str)\n\na = [[0 for i in range(n)] for j in range(n)]\n\nfor i in range(n):\n    a[0][ i] = 1 \n    a[i][0] = 1\n\nfor i in range(1, n):\n    for j in range(1, n):\n        a[i][j] = a[i-1][j] + a[i][j - 1]\n\nprint(a[n-1][n-1])\n", "n = int(input())\nt = [[0] * n for i in range(n)]\nfor i in range(n):\n    t[0][i] = 1\nfor i in range(1, n):\n    t[i][0] = 1\nfor i in range(1, n):\n    for j in range(1, n):\n        t[i][j] = t[i - 1][j] + t[i][j - 1]\nprint(t[n - 1][n - 1])\n", "print([1, 2, 6, 20, 70, 252, 924, 3432, 12870, 48620][int(input())-1])", "n = int(input())\na = [[1 if row == 0 or col == 0 else 0 for col in range(n)] for row in range(n)]\nfor row in range(1, n):\n    for col in range(1, n):\n        a[row][col] = a[row-1][col] + a[row][col-1]\nprint(max(max(a)))\n", "n = int(input())\nmatrix = [[1 for i in range(n)] for j in range(n)]\nfor y in range(1, n):\n\tfor x in range(1, n):\n\t\tmatrix[y][x] = matrix[y - 1][x] + matrix[y][x - 1]\nprint(matrix[n - 1][n - 1])\n", "n = int(input())\n\nmat = [[0] * n for x in range(n)]\n\nfor i in range(n):\n    mat[0][i] = 1\n    mat[i][0] = 1\n\n\nfor i in range(1, n):\n    for j in range(1, n):\n        mat[i][j] = mat[i - 1][j] + mat[i][j - 1]\n\nprint(mat[n - 1][n - 1])", "def c(n):\n    seq = [1 for i in range(n)]\n    for i in range(n - 1):\n        for i in range(n - 1):\n            seq[i + 1] = seq[i] + seq[i + 1]\n    return seq[-1]\n\n\ndef __starting_point():\n    n = input()\n    n = int(n)\n    print(c(n))\n\n__starting_point()", "\n\nn=int(input())\na=[[1,1,1,1,1,1,1,1,1,1] for i in range(10)]\nfor i in range(1,n):\n    for j in range(1,n):\n        a[i][j]=a[i-1][j]+a[i][j-1]\nprint(a[n-1][n-1])\n", "import sys\nf = sys.stdin\n#f = open('H:\\\\Portable Python 3.2.5.1\\\\test_248B1.txt') \n\nn = int(f.readline().strip())\n\nd = [[1]*n for it in range(n)]\nfor i in range(1,n):\n    for j in range(1,n):\n        d[i][j] = d[i-1][j] + d[i][j-1]\n\n\nprint(d[n-1][n-1])\n", "n = int(input())\na = [[1] * n for i in range(n)]\nfor i in range(1, n):\n    for j in range(1, n):\n        a[i][j] = a[i-1][j] + a[i][j-1]\nans = 1\nfor i in range(1, n):\n    for j in range(1, n):\n        ans = max(ans, a[i][j])\nprint(ans)"]