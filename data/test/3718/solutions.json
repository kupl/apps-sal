["n = int(input())\na = sorted(list(set(map(int, input().split()))))\n\nfor i in range(2, len(a)):\n    if a[i] - a[i - 2] <= 2:\n        print('YES')\n        break\nelse:\n    print('NO')\n", "a=int(input())\nl=sorted(set(map(int,input().split())))\nfor i in range(len(l)-2):\n    if l[i]+2==l[i+2]: print('YES'); break\nelse: print(\"NO\")\n", "3\n\nn = int(input())\na = list(map(int, input().split()))\na = list(set(a))\na.sort()\n\nfor i in range(len(a) - 2):\n    if a[i + 1] == a[i] + 1 and a[i + 2] == a[i] + 2:\n        print(\"YES\")\n        return\n\nprint(\"NO\")\n", "#! /usr/bin/env python3\n\ndef main():\n    _ = input()\n    nums = list(map(int, input().split()))\n\n    nums = sorted(set(nums))\n    has_consecutive = False\n    for num, last_num in zip(nums[1:], nums):\n        if num - last_num == 1:\n            if has_consecutive:\n                print('YES')\n                return\n            has_consecutive = True\n        else:\n            has_consecutive = False\n\n    print('NO')\n\nmain()\n", "def solve(arr, n):\n    arr.sort()\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if arr[i] != arr[j] != arr[k] and arr[k] - arr[i] <= 2:\n                    return True\n    return False\n\nn = int(input())\narr = list(map(int, input().split()))\n\nif solve(arr, n):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n\nn   = int(input())\na   = [int(i) for i in input().split()]\n\nstart = time.time()\n\na   = sorted(list(set(a)))\nans = 'NO'\n\nfor i in range(len(a)-2):\n    if a[i+2] - a[i] <= 2:\n        ans = 'YES'\n        break\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "import sys\n\nn = int(input())\nm = sorted(list(set(map(int, input().split()))))\n\nf = False\nfor i in range(len(m)-2):\n    if m[i+1]-m[i] <= 2 and m[i+2]-m[i+1] <= 2 and m[i+2]-m[i] <= 2:\n        print('YES')\n        f = True\n        break\n\nif not f:\n    print('NO')", "n = int(input())\nt = [int (x) for x in input().split()]\ndef check(t):\n    t = sorted(set(t))\n    for i in range(len(t) - 2):\n        if (t[i+1], t[i+2]) == (t[i]+1, t[i]+2): return True\n    return False\nprint('YES' if check(t) else 'NO')\n", "_ = input()\n\nballs = sorted(list(set([int(x) for x in input().split()])))\n\nfor i in range(len(balls) - 2):\n    a = balls[i]\n    b = balls[i + 2]\n    if b - a <= 2:\n        print('YES')\n        break\nelse:\n    print('NO')\n", "n=int(input())\na=list(map(int,input().split()))\nb=set(a)\nc=sorted(b)\nfor i in range(len(c)-2):\n    if c[i]-c[i+2]>= -2:\n        print('YES')\n        break\nelse:\n    print('NO')", "3\n\ndef good_pair(a, b):\n    return 0 < (max(a, b) - min(a, b)) <= 2\n\nn = int(input())\nballs = sorted(list(map(int, input().split())))\nans = \"NO\"\nfor i in range(n):\n    a = balls[i]\n    for j in range(i + 1, n):\n        b = balls[j]\n        for k in range(j + 1, n):\n            c = balls[k]\n            if good_pair(a, b) and good_pair(b, c) and good_pair(a, c):\n                ans = \"YES\"\n                break\n\nprint(ans)\n\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n\ndef judge(balls):\n    if len(balls) < 3:\n        return False\n    candidates = set()\n    counter = 1\n    sorted_balls = sorted(balls)\n    prev_ball = sorted_balls.pop(0)\n    for ball in sorted_balls:\n        if prev_ball + 1 == ball:\n            counter += 1\n        else:\n            candidates.add(counter)\n            counter = 1\n        prev_ball = ball\n    candidates.add(counter)\n    return max(candidates) >= 3\n\n\ndef main():\n    _ = input()\n    balls = set(map(int, input().split()))\n    if judge(balls):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "'__author__'=='deepak Singh Mehta(learning to code)) '\n\n\ndef __starting_point():\n  n = int(input())\n  arr = list(map(int,input().split()))\n  #cnt = 0\n  flag = False\n  for i in range(len(arr)):\n    if arr[i]+1 in arr and arr[i]+2 in arr:\n      flag = True\n      break\n  if flag:\n    print(\"YES\")\n  else:\n    print(\"NO\")\n\n__starting_point()", "n = int(input())\ns = list(map(int, input().split()))\nl = []\na = 'NO'\nfor i in s:\n    if i not in l:\n        l += [i]\nl = sorted(l)\nif len(l) >= 3:\n    for i in range(len(l) - 2):\n        if l[i] + 2 == l[i + 1] + 1 == l[i + 2]:\n            a = 'YES'\nprint(a)\n", "def isGift2(a, b):\n    return a != b and abs(a - b) <= 2\n\n\ndef isGift3(a, b, c):\n    \"\"\"\n    >>> isGift3(1, 4, 7)\n    False\n    >>> isGift3(4, 3, 5)\n    True\n    >>> isGift3(30, 31, 32)\n    True\n    >>> isGift3(30, 31, 33)\n    False\n    \"\"\"\n    return isGift2(a, b) and isGift2(b, c) and isGift2(a, c)\n\n\ndef isGift(lst):\n    \"\"\"\n    >>> isGift([18, 55, 16, 17])\n    True\n    >>> isGift([40, 41, 43, 44, 44, 44])\n    False\n    >>> isGift([5, 972, 3, 4, 1, 4, 970, 971])\n    True\n    \"\"\"\n    for i in range(len(lst)):\n        for j in range(i + 1, len(lst)):\n            for k in range(j + 1, len(lst)):\n                if isGift3(lst[i], lst[j], lst[k]):\n                    return True\n    return False\n\n\ndef main():\n    n = int(input())\n    line = input()\n    line = [int(i) for i in line.split()]\n    line = line[0:n]\n    r = \"YES\" if isGift(line) else \"NO\"\n    print(r)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "num = int(input())\nflag = False\nballs = []\nfor x in input().split(\" \"):\n    balls.append(int(x))\n\nballs.sort()\ncont =1\nfor i in range(0,num-1):\n    j=i+1\n    m=i+2\n    if(balls[i] == balls[j]):\n         m+=1\n    elif((balls[j] - balls[i] <=1) and (balls[i] != balls[j])):\n        cont+=1\n    else:\n        cont=1\n    ##print(cont)\n    if(cont==3):        \n        flag = True\n        break\n        \n        \nif(flag):\n    print (\"YES\")\nelse:\n    print (\"NO\")\n##print(\"%d %d %d\"%(balls[i],balls[j],balls[m]))\n", "n=int(input())\nl=sorted(set(map(int,input().split())))\nfor i in range(1,len(l)-1):\n    if l[i]-l[i-1]==1 and l[i+1]-l[i]==1: print('YES'); break\nelse: print('NO')", "def __starting_point():\n    n = int(input())\n    b = sorted(set(map(int,input().split(' '))))\n    for i in range(len(b)-2):\n        if len(set(b[i:i+3]))==3:\n            if b[i+2]-b[i]<=2 and b[i+2]-b[i+1]<=1:\n                print('YES')\n                break\n    else:   print('NO')\n\n\n'''\n    A = input()\n    stack = []      #Real Stack\n    Graph = {\n        ')':'('\n        }\n    count = 0\n    def black(A):\n        #p for possibility\n        stak =[]\n        for e in A:\n            if e in ['(']:\n                stak.append(e)\n            else:\n                if stak==[] or Graph[e]!=stak[-1]:\n                    p=False\n                else:\n                    stak.pop(len(stak)-1)     #pop last \n        if len(stak) ==0:\n            p=True\n        else:\n            p=False\n        if not p:   return [0]\n        else:\n            #stak is not empty\n            stak = []\n            count = []\n            for e in range(len(A)):\n                if A[e]=='(' or stak==[]:  stak.append(A[e])\n                else:\n                    if A[e]==')' and Graph[A[e]]==stak[-1]:\n                        while Graph[A[e]]==stak[-1]:\n                            stak.pop(-1)\n                            if e==len(A)-1: break\n                            e+=1\n                            if A[e]=='(' or stak==[]:   break\n                        count.append(1)\n            return count\n\n    rov = []\n    P = False \n    for e in A:\n        if e in ['(']:  stack.append(e)\n        else:\n            if stack!=[]:\n                stack.append(e)\n                if stack.count('(')==stack.count(')'):\n                    x=black(stack)\n                    if x!=[0]:    P = True\n                    if x==[1]:\n                        rov.append(1)\n                    else:\n                        rov.append(sum(x[:-1]))\n                    stack=[]\n    if not P:   print(0)\n    else:\n        pro =1\n        for i in rov:   pro*=i\n        print(pro)\n    \n'''\n\n__starting_point()", "n = int(input())\nb = list(map(int, input().split()))\nc = [0] * 1010\n\nfor i in range(len(b)):\n    c[b[i]] = 1\nfor i in range(1, 999):\n    if c[i] and c[i + 1] and c[i + 2]:\n        print('YES')\n        return\nprint('NO')", "n=int(input())\nsizes=sorted(list(set(map(int, input().split(' ')))))\n\ndef isThree(z):\n    for i in range(2,len(z)):\n        if abs(z[i-2]-z[i])<=2:\n            return True\n    return False\n\nif isThree(sizes):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\n\n\nfor i in range(1):\n    t = [int(x) for x in input().split()]\n\ndef checkyesno():\n    s = list(set(t))\n    u = sorted(s)\n    v = len(s)\n    y = 0\n    z = 0\n    c = 0\n    for a in range (0,v-2):\n        if (u[a] + u[a+1] + u[a+2])/3 == u[a+1]:\n            z += 1\n        if u[a+2]-u[a+1] == u[a+1]-u[a] == 1:\n            c += 1\n    if z > 0 and c > 0:\n        for i in range (0, v-1):\n            if u[i] - u[i+1] == -1:\n                y += 1\n    if y >= 2:\n       result = \"YES\"\n       print (result)\n    else:\n       result = \"NO\"\n       print (result)\n        \n            \n    \n\nif len(t) < 3:\n    result = \"NO\"\n    print (result)\nelif len(list(set(t))) < 3:\n       result = \"NO\"\n       print (result)\nelse: checkyesno()\n    \n\n", "n = int(input())\nper = list(map(int, input().split()))\nper2 = False\nfor i in range(n -2):\n    if per2:\n        break\n    for j in range(i+1 , n-1):\n        if per2:\n            break\n        for t in range(j+1, n):\n            \n            if (max(per[t], per[j]) - min(per[t], per[j])) in (1,2) and (max(per[t], per[i]) - min(per[t], per[i])) in (1,2) and (max(per[i] , per[j]) - min(per[i] , per[j])) in (1,2):\n                print('YES')\n                per2 = True\n                break\nif not per2:\n    print('NO')", "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            if a[i] + 1 == a[j] and a[j] + 1 == a[k]:\n                print('YES')\n                return\nprint('NO')\n\n", "n=int(input())\nch=input()\nd1=ch.split()\nd2=[]\nd=[]\nfor i in d1:\n    d2.append(int(i))\n\nj=0\nd2.sort()\nfor i in d2:\n    if i not in d:\n        d.append(i)\n\n\nB=False\nwhile j<len(d)-2 and B==False:\n    if d[j+2]-d[j]==2  and d[j+1]-d[j]==1 and d[j+2]-d[j+1]==1:\n        B=True\n    j+=1\nif B:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n    \n"]