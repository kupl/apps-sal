["N, C = list(map(int, input().split()))\nNums = list(map(int, input().split()))\nMax = 0\nfor i in range(N - 1):\n    Max = max(Max, Nums[i] - Nums[i + 1] - C)\nprint(Max)\n", "n, c = list(map(int, input().split()))\narr = [int(i) for i in input().split()]\ni, r = 0, 0\nfor i in range(n - 1):\n    if arr[i] - arr[i + 1] - c > r:\n        r = arr[i] - arr[i + 1] - c\nprint(r)\n", "n,m = list(map(int, input().split()))\na=list(map(int,input().split()))\nans=0\nfor i in range(n-1):\n     if a[i]-a[i+1]>ans:\n             ans=a[i]-a[i+1]\nans=ans-m\nif(ans<0):\n        ans=0\nprint(ans)\n", "n, c = list(map(int, input().split()))\nlast, best = -1, 0\nfor x in map(int, input().split()):\n  t = last-x-c\n  best = max(best, t)\n  last = x\nprint(best)\n", "n,c = list(map(int,input().split()))\na = list(map(int,input().split()))\nmaxi = 0\nd = -1\nfor i in range(n-1):\n\tif maxi < a[i]-a[i+1]:\n\t\tmaxi = a[i]-a[i+1]\n\t\td = i\nif d == -1:\n\tprint(0)\nelse:\n\tprint(max(a[d]-a[d+1]-c,0))\n", "n, c = list(map(int, input().split()))\nx = list(map(int, input().split()))\nm = 0\nfor i in range(len(x) - 1):\n\tm = max(m, x[i] - x[i + 1])\nif m - c > 0:\n\tprint(m - c)\nelse:\n\tprint(0)\n", "n,c=list(map(int,input().split()))\nx=list(map(int,input().split()))\nma=0\nfor i in range(0,n-1):\n    ma=max(ma,x[i]-x[i+1]-c)\nprint(ma)\n", "n,c=map(int,input().split())\na=list(map(int,input().split()))\nm=0\nfor i in range(n-1):\n    if a[i]-a[i+1]>m:\n        m=a[i]-a[i+1]\nprint(max(0,m-c))", "n,c  = map(int,input().split())\nmal = 0\nx = list(map(int,input().split()))\nfor i in range(n-1):\n    if x[i] > x[i+1]+c:\n        mal=max(mal,x[i] -x[i+1]-c)\nprint(mal)", "x = input()\ndays, cost = [int(i) for i in x.split()]\n\nprices = input()\nprices = [int(i) for i in prices.split()]\n\nlargest = 0\nfor i in range(0, days-1):\n    #find largest difference, and index in prices\n    diff = prices[i] - prices[i+1] - cost\n    if diff > largest:\n        largest = diff\n        indexLargest = i\n\nif largest > 0:\n    print(largest)\nelse:\n    print('0')\n", "n, c = map(int, input().split())\na = list(map(int, input().split()))\nm = 0\nfor i in range(n - 1):\n    if a[i] - a[i + 1] - c > m:\n        m = a[i] - a[i + 1] - c\nprint(m)", "s = input()\nl = s.split(\" \")\nc = int(l[1])\nn = int(l[0])\n\ns = input()\nl = s.split(\" \")\n\n\nb = []\nfor i in l:\n    b.append(int(i))\n\nm = 0\nfor i in range(len(b)-1):\n    if b[i] - b[i+1] - c > m:\n        m = b[i] - b[i+1] - c\n\nprint(m)", "#fn(pi) = pi-(pi+1)-c\n#determine fn(pi) when it is max.\n\nn,c = [v for v in map(int,input().split())]\np = [v for v in map(int,input().split())]\nprofit = lambda i: p[i] - (p[i+1]) - c\nmax_profit = 0\nfor i in range(n-1):\n\tpr = profit(i)\n\tif(pr > max_profit):\n\t\tmax_profit = pr\nprint(max_profit)\n\n\n", "n,c=list(map(int,input().split()))\n\nA=list(map(int,input().split()))\nbest=0\nfor i in range(n-1):\n    if(A[i]-A[i+1]>best):\n        best=A[i]-A[i+1]\nprint(max(0,best-c))\n", "import sys, math, heapq, random, collections, bisect\n\ndef main():\n    # sys.stdin = open('input.txt', 'r')\n    # sys.stdout = open('output.txt', 'w')\n\n    n = list(map(int, input().split()))\n    lst = list(map(int, input().split()))\n    c_lst = lst[:]\n    c_lst.sort()\n\n    if c_lst == lst:\n        print(0)\n\n    else:\n        c_lst.reverse()\n        mx = 0\n        rp = 0\n\n        for i in c_lst:\n            if rp == i:\n                if lst[idx_+1:].index(i) < len(lst[idx_+1:])-1:\n                    idx = lst[idx_+1:].index(i)\n    \n                    if lst[idx_+1:][idx]-lst[idx_+1:][idx+1] > mx:\n                        mx = lst[idx_+1:][idx]-lst[idx_+1:][idx+1]\n                        \n                idx_ = idx+idx_+1\n\n            elif lst.index(i) < len(lst)-1:\n                idx = lst.index(i)\n                idx_ = idx\n                rp = i\n\n                if lst[idx]-lst[idx+1] > mx:\n                    mx = lst[idx]-lst[idx+1]\n\n            elif i < mx:\n                break\n\n        if (mx-n[1]) > 0:\n            print(mx-n[1])\n            \n        else:\n            print(0)\n\n    # sys.stdin.close()\n    # sys.stdout.close()\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, c = map(int, input().split())\npr = list(map(int, input().split()))\nmaxim = 0\nfor cont in range(0,n-1,1):\n    m = pr[cont]-pr[cont+1]-c\n    if m > maxim:\n        maxim = m\nprint(maxim)", "I = [int(i) for i in input().split()]\nn, c = I[0], I[1]\nI = [int(i) for i in input().split()]\nI_new = []\nfor i in range(1, n): I_new.append((I[i-1]-I[i]))\nI_new.sort()\nans = I_new[-1]-c\nif ans < 0: print(0)\nelse: print(ans)\n", "n, c = list(map(int, input().split()))\nv = list(map(int, input().split()))\nret = 0\nfor i in range(n - 1):\n    ret = max(ret, v[i] - v[i + 1] - c)\nprint(ret)\n", "#!/usr/bin/env python3\n\ndef main():\n    readData = lambda : list(map(int, input().split()))\n    n, c = readData()\n    X = list(readData())\n    ret = 0\n    for i in range(n - 1):\n        ret = max(ret, X[i] - X[i + 1] - c)\n    print(ret)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, c = list(map(int, input().split()))\nx = list(map(int, input().split()))\nans = 0\nfor i in range(len(x) - 1):\n    ans = max(ans, x[i] - x[i + 1] - c)\nprint(ans)\n", "import sys \n\nn_borrow = sys.stdin.readline().split()\nn = int(n_borrow[0])\nborrow = int(n_borrow[1])\nlista = sys.stdin.readline().split()\nfor i in range (n):\n\tlista[i] = int(lista[i])\n\nmayordif = 0\n\n\nfor i in range(n-1):\n\taux = lista[i]-lista[i+1]\n\tif aux > mayordif :\n\t\tmayordif = aux\n\nif mayordif == 0:\n\tprint(0)\nelse:\n\tif mayordif<borrow:\n\t\tprint(0)\n\telse:\n\t\tprint(mayordif-borrow)\n", "n, k = map(int, input().split())\nt = list(map(int, input().split()))\np = max([t[i - 1] - t[i] for i in range(1, n)])\nprint(0 if p < k else p - k)", "n, c = list(map(int, input().split()))\nx = list(map(int, input().split()))\nprint(max(0, max(x[i] - x[i + 1] - c for i in range(0, n - 1))))\n", "\ns = input().rstrip().split(' ')\nn, c = int (s[0]), int(s[1])\n\nx = input().rstrip().split(' ')\n\nmax = int (x[0]) - int (x[1]) - c\nfor i in range (1, n - 1):\n    if int (x[i]) - int (x[i + 1]) - c > max:\n        max = int (x[i]) - int (x[i+1]) - c\n\nif max < 0:\n    max = 0\n\nprint (max)\n"]