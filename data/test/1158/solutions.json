["rest, people = map(int, input().split())\ntypes = list(map(int, input().split()))\na = dict()\nfor elem in types:\n    if elem in a:\n        a[elem] += 1\n    else:\n        a[elem] = 1\nmaximum = 0\nfor key in a:\n    if a[key] > maximum:\n        maximum = a[key]\nneeded = maximum\nwhile needed % people != 0:\n    needed += 1\nans = 0\nfor key in a:\n    ans += needed - a[key]\nprint(ans)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nc = [0] * 101\nfor i in a:\n    c[i] += 1\nm = (max(c) + k - 1) // k\nans = 0\nfor i in range(101):\n    if (c[i]):\n        ans += max(0, m * k - c[i])\nprint(ans)", "import math\nn, k=map(int, input().split())\n_=list(map(int, input().split()))\na=[0 for i in range(101)]\nfor i in _:\n  a[i]+=1\nk1=math.ceil(max(a)/k)*k\ns1=0\nfor i in a:\n  if (i>0):\n    s1+=(k1-i)\nprint (s1)", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport collections\nb=collections.Counter(a)\n#print(b)\nc=b.most_common(1)[0][1]\ngg=max((c+k-1)//k,1)\nneed=k*gg*len(b)\n#print(c)\n\nfor i in b:\n    need-=b[i]\n    \n\n\nprint(need)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n#n = int(input())\nfrom math import ceil\n\nn, k = list(map(int, input().split()))\narr = list(map(int, list(input().split())))\n\nd = {}\nmax_cnt = 0\n\n\nfor i in range(len(arr)):\n    x = arr[i]\n    if not x in d:\n        d[x] = 0\n    d[x] += 1\n    max_cnt = max(max_cnt, d[x])\n\nmin_blud = ceil(max_cnt / k)\nprint(min_blud * len(d) * k - n)\n", "n, k = list(map(int,input().split()))\n\nb = list(map(int,input().split()))\nd = [0 for i in range(100)]\nfor i in b:\n    d[i-1] += 1\nif max(d) % k == 0:\n    m = max(d)\nelse:\n    m = max(d) + (k - max(d)%k)\ns = 0\nfor i in d:\n    if i != 0:\n        s += m - i\nprint(s)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nb = [0 for i in range(101)]\nfor i in a:\n    b[i] += 1\nx = max(b)\nif x % k != 0:\n    x //= k\n    x += 1\n    x *= k\nans = 0\nfor i in range(101):\n    if b[i] != 0:\n        ans += x - b[i]\nprint(ans)", "n, k = map(int, input().split())\nlst = list(map(int, input().split()))\na = [0] * 101\ncnt = 0\nfor i in lst:\n    a[i] += 1\n    if a[i] == 1:\n        cnt += 1\n\nx = max(a)\nif x % k == 0:\n    p = x // k\nelse:\n    p = x // k + 1\nprint(cnt * p * k - n)", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nmx = 0\np = set(a)\nfor i in p:\n    b = a.count(i)\n    if b > mx:\n        mx = b\nblud = -(-mx // k)\nprint(blud * k * len(p) - len(a))", "n, k = list(map(int, input().split()))\nprib = list(map(int, input().split()))\nprib.sort()\nI = 0\np = []\nwhile I < n:\n    a = prib[I]\n    p.append(0)\n    while I < n and a == prib[I]:\n        I += 1\n        p[-1] += 1\np.sort()\nl = (p[-1] - 1) // k + 1\nl *= k\nans = 0\nfor i in p:\n    ans += l - i\nprint(ans)\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nd={}\nfor x in a:\n    d[x]=d.get(x,0)+1\nm=max(d.values())\nif m%k==0:\n    sets=m//k\nelse:\n    sets=m//k+1\nprint(sets*len(d)*k-n)\n", "pr = list([0 for x in range(101)])\nn, k = list(map(int, input().split()))\ninp = list(map(int, input().split()))\nfor i in inp:\n    pr[i] += 1\npr.sort(reverse=True)\nm = pr[0] // k + bool(pr[0] % k)\nm *= k\nans = 0\ni = 0\nwhile i <= 100 and pr[i] > 0:\n    ans = ans + m - pr[i]\n    i += 1\nprint(ans)\n", "from collections import Counter\n\nn, k = list(map(int, input().split()))\na = tuple(Counter(input().split()).values())\nprint(len(a) * ((max(a) - 1) // k + 1) * k - sum(a))\n", "n, c = list(map(int, input().split()))\na = list(map(int, input().split()))\ns = set(a)\nk = []\nfor i in s:\n    k.append(a.count(i))\nif max(k) % c == 0:\n    d = max(k) // c\n    d *= c\nelse:\n    d = max(k) // c + 1\n    d *= c\nresult = 0\nfor i in k:\n    result += d - i\nprint(result)\n\n    \n", "n, m = map(int, input().split())\nc=[0]*200\na= list(map(int, input().split()))\nfor i in range(n):\n    c[a[i]]+=1\nsumm=0\nx=max(c)-max(c)%m\nif max(c)%m!=0:\n    x+=m\nfor i in range(len(c)):\n    if c[i]!=0:\n        summ+=(x-c[i])\nprint(summ)", "n, k = list(map(int, input().split()))\ndList = list(map(int, input().split()))\nmaxD = 0\nd = {}\nfor i in dList:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n    if d[i] > maxD:\n        maxD = d[i]\namount = 0\ndis = ((maxD - 1) // k + 1) * k\nfor i in list(d.values()):\n    amount += dis - i\nprint(amount)\n", "from collections import Counter\nfrom math import ceil\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nd = Counter()\nfor i in a:\n    d[i] += 1\nm = ceil(max(d.values()) / k) * len(d) * k\ns = sum(d.values())\nprint(m - s)\n#print(d)\n#print(m)\n", "import math\nfrom collections import defaultdict\n\nn, k = map(int, input().split())\na = [int(i) for i in input().split()]\nb = defaultdict(int)\nfor el in a:\n    b[el] += 1\nx = max(b.values())\nv = math.ceil(x / k)\nr = 0\nfor el in b.values():\n    r += v * k - el\nprint(r)", "n, k = map(int, input().split())\na = [int(x) - 1 for x in input().split()]\ns = [0] * 100\nfor i in range(n):\n\ts[a[i]] += 1\nm = max(s)\nif m % k != 0:\n\tm += k - m % k\nprint(sum([m - s[i] for i in range(100) if s[i] != 0]))", "n, k = map(int, input().split())\nsp = list(map(int, input().split()))\nd = {}\nl2 = []\nm = 0\nfor elem in sp:\n    if elem in d:\n        d[elem] += 1\n    else:\n        d[elem] = 1\nfor e in d:\n    if d[e] > m:\n        m = d[e]\nblud_podano = (m - 1) // k + 1\nprint(blud_podano*len(d)*k-n)", "n,m=map(int,input().split())\nlistik=list(map(int,input().split()))\nmaximum=0\nfor i in listik:\n    if listik.count(i)>maximum:\n        maximum=listik.count(i)\nif maximum%m==0:\n    number=maximum//m\nelse:\n    number=maximum//m+1\nprint(len(set(listik))*number*m-len(listik))", "from math import ceil\n\nn,k = map(int,input().split())\na = [int(i) for i in input().split()]\nd = {}\n\n\nfor i in set(a):\n\td[i] = a.count(i)\n\nm = max(d.values())\ndishes = ceil(m/k)\ntypes = len(d)\n\n#print(dishes, types)\nprint(types*dishes*k - n)", "n, k = map(int, input().split())\nM = list(map(int, input().split()))\n\nT = [0] * 100\nfor i in range (n): T[M[i] - 1] += 1\n\nt, b = 0, 0\nfor i in range (100):\n    if T[i] != 0:\n        t += 1\n        b = max(b, (T[i] + k - 1) // k)\n\nprint (b * t * k - n)", "n, m = map(int, input().split())\nD = dict()\narr = list(map(int, input().split()))\nfor el in arr:\n    if el in D.keys():\n        D[el] += 1\n    else:\n        D[el] = 1\nmaxx = -1\nfor key in D.keys():\n    if D[key] > maxx:\n        maxx = D[key]\n#print(maxx)\na = maxx // m\nif maxx % m > 0:\n    a += 1\nsumm = a * m\nans = 0\n#print(summ)\nfor key in D.keys():\n    ans += (summ - D[key])\nprint(ans)"]