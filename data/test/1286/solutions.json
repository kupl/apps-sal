["k = int(input())\nMOD = 10 ** 9 + 7\nantithree = pow(3, MOD - 2, MOD)\nantitwo = pow(2, MOD - 2, MOD)\npower = 1\nparity = False\nfor t in map(int, input().split()):\n    power *= t\n    power %= MOD - 1\n    if t % 2 == 0:\n        parity = True\nq = pow(2, power, MOD) * antitwo\nq %= MOD\nif parity:\n    p = (q + 1) * antithree\n    p %= MOD\nelse:\n    p = (q - 1) * antithree\n    p %= MOD    \nprint(p, q, sep = '/')", "MOD = 10 ** 9 + 7\nMOD1 = 2 * (10 ** 9 + 6)\n\npow2 = [0] * 32 #pow2[i] = 2 ** (2 ** i) % MOD\npow2[0] = 2\nfor i in range(1, 32):\n    pow2[i] = (pow2[i - 1] ** 2) % MOD\n\ndef exp2mod(exp):\n    ans = 1\n    the_pow = 1\n    the_log = 0\n    while the_pow <= exp:\n        if exp & the_pow == the_pow:\n            ans = (ans * pow2[the_log]) % MOD\n        the_pow *= 2\n        the_log += 1\n    return ans\n\ndef main():\n    n = 1\n    k = int(input())\n    a = input().split()\n    x = 0\n    y = 0\n    for i in range(k):\n        n = (n * int(a[i])) % MOD1\n    \n    x = exp2mod(n)\n    if n % 2 == 0:\n        x = (x + 2) % MOD\n    else:\n        x = (x - 2) % MOD\n    if x % 2 == 0:\n        x = x // 2\n    else:\n        x = (x + MOD) // 2\n    if x % 3 == 0:\n        x = x // 3\n    elif x % 3 == 1:\n        x = (x + MOD) // 3\n    else:\n        x = (x + 2 * MOD) // 3\n        \n    y = exp2mod(n)\n    if y % 2 == 0:\n        y = y // 2\n    else:\n        y = (y + MOD) // 2\n    \n    print(str(x) + \"/\" + str(y))\n        \nmain()\n"]