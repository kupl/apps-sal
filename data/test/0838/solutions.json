["read = lambda: map(int, input().split())\nn, m = read()\na = [list(read()) for i in range(n)]\nans = n * m\nfor i in range(n):\n    cnt0 = a[i].count(0)\n    cnt1 = a[i].count(1)\n    if cnt0 > 1: ans += (2 ** cnt0 - cnt0 - 1)\n    if cnt1 > 1: ans += (2 ** cnt1 - cnt1 - 1)\nfor i in range(m):\n    cnt0 = sum(a[j][i] == 0 for j in range(n))\n    cnt1 = sum(a[j][i] == 1 for j in range(n))\n    if cnt0 > 1: ans += (2 ** cnt0 - cnt0 - 1)\n    if cnt1 > 1: ans += (2 ** cnt1 - cnt1 - 1)\nprint(ans)", "n, m = list(map(int, input().split()))\narr = [[0 for i in range(m)] for i in range(n)]\nfor i in range(n):\n\tarr[i] = list(map(int, input().split()))\nans = n * m\nfor i in range(n):\n\tc0 = 0\n\tc1 = 0\n\tfor j in range(m):\n\t\tif arr[i][j] == 1:\n\t\t\tc1 += 1\n\t\telse:\n\t\t\tc0 += 1\n\tans += max(0, 2 ** (c1) - c1 - 1)\n\tans += max(0, 2 ** (c0) - c0 - 1)\nfor i in range(m):\n\tc0 = 0\n\tc1 = 0\n\tfor j in range(n):\n\t\tif arr[j][i] == 1:\n\t\t\tc1 += 1\n\t\telse:\n\t\t\tc0 += 1\n\tans += max(0, 2 ** (c1) - c1 - 1)\n\tans += max(0, 2 ** (c0) - c0 - 1)\nprint(ans)", "n, m = list(map(int, input().split()))\ntbl = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    c0 = 0\n    c1 = 0\n    for j in range(m):\n        if tbl[i][j] == 0:\n            c0 += 1\n        else:\n            c1 += 1\n    ans += 2**c0 - 1\n    ans += 2**c1 - 1\nfor i in range(m):\n    c0 = 0\n    c1 = 0\n    for j in range(n):\n        if tbl[j][i] == 0:\n            c0 += 1\n        else:\n            c1 += 1\n    ans += 2**c0 - 1\n    ans += 2**c1 - 1\nans -= n * m\nprint(ans)\n", "3\n\nn, m = [int(i) for i in input().split()]\na = [[int(i) for i in input().split()] for j in range(n)]\ns = n * m\nfor i in range(n):\n\tblack = sum(a[i])\n\tif black > 1:\n\t\ts += 2 ** black - black - 1\n\twhite = m - black\n\tif white > 1:\n\t\ts += 2 ** white - white - 1\n\nb = [[a[i][j] for i in range(n)] for j in range(m)]\nfor i in range(m):\n\tblack = sum(b[i])\n\tif black > 1:\n\t\ts += 2 ** black - black - 1\n\twhite = n - black\n\tif white > 1:\n\t\ts += 2 ** white - white - 1\n\nprint(s)", "n, m = list(map(int, input().split()))\nd = [list(map(int, input().split())) for i in range(n)]\n\nans = 0\nfor p in d:\n    x = sum(p)\n    ans += pow(2, x) + pow(2, m - x) - 2 - m\n\nfor i in range(m):\n    x = sum(d[j][i] for j in range(n))\n    ans += pow(2, x) + pow(2, n - x) - 2\n\nprint(ans)\n", "def sol():\n\trows, cols = map(int, input().split())\n\ttab = [list(map(int, input().split())) for _ in range(rows)]\n\tres = rows * cols\n\tfor row in range(rows):\n\t\twhite = 0\n\t\tblack = 0\n\t\tfor col in range(cols):\n\t\t\tif tab[row][col] == 0:\n\t\t\t\twhite += 1\n\t\t\telse:\n\t\t\t\tblack += 1\n\t\tif white > 0:\n\t\t\tres += pow(2, white) - white - 1\n\t\tif black > 0:\n\t\t\tres += pow(2, black) - black - 1\n\tfor col in range(cols):\n\t\twhite = 0\n\t\tblack = 0\n\t\tfor row in range(rows):\n\t\t\tif tab[row][col] == 0:\n\t\t\t\twhite += 1\n\t\t\telse: \n\t\t\t\tblack += 1\n\t\tif white > 0:\n\t\t\tres += pow(2, white) - white - 1\n\t\tif black > 0:\n\t\t\tres += pow(2, black) - black - 1\n\tprint(res)\nsol()", "n,m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n    \nans = 0\nfor i in range(n):\n    l = sum([1 for e in a[i] if e == 0])\n    nl = m - l\n    ans += (2**l - 1 - l) + (2**nl - 1 - nl)\n\nfor i in range(m):\n    l = 0\n    for j in range(n):\n        if a[j][i] == 0:\n            l += 1\n    nl = n - l\n    ans += (2**l - 1 - l) + (2**nl - 1 - nl)\n    \nprint(ans + n*m)", "n,m=list(map(int,input().split()))\nl=[]\nfor i in range(n):\n    l.append(list(map(int,input().split())))\nans=0\nfor i in range(n):\n    r=l[i]\n    c1=r.count(1)\n    c2=r.count(0)\n    ans+=(((2**c1)-1)+((2**c2)-1))\nfor i in range(m):\n    ls=[]\n    for j in range(n):\n        ls.append(l[j][i])\n    c1=ls.count(1)\n    c2=ls.count(0)\n    ans+=(((2**c1)-1)+((2**c2)-1)-c1-c2)\nprint(ans)\n", "n,m=list(map(int,input().split()))\nrc=[]\ncc=[]\ncols=[[] for i in range(m)]\nfor i in range(n):\n    a=list(map(int,input().split()))\n    for i in range(len(a)):\n        cols[i].append(a[i])\n    rc.append([a.count(1),a.count(0)])\nfor i in cols:\n    cc.append([i.count(1),i.count(0)])\n\ntotal=0\nfor i in rc:\n    total+=(2**i[0])-1+(2**i[1])-1\nfor i in cc:\n    total+=(2**i[0]-1-i[0])+(2**i[1]-1-i[1])\nprint(total)\n                \n", "n,m = map(int,input().split())\n\ngrid = [None]*n\n\nfor i in range(n):\n  grid[i] = list(map(int, input().split()))\n\nresult = 0\n\nfor i in range(n):\n  t = sum(grid[i])\n  result += 2**t + 2**(m-t)\n\nfor i in range(m):\n  t = sum(grid[j][i] for j in range(n))\n  result += 2**t + 2**(n-t)\n\nresult -= 2*(n+m) + n*m\n\nprint(result)", "from sys import stdin, stdout\nimport random\n\n\nn,m = list(map(int,stdin.readline().rstrip().split()))\ntable = []\nfor _ in range(n):\n    table.append(list(map(int,stdin.readline().rstrip().split())))\n\ntable2 = [[0]*n for _ in range(m)]\nfor i in range(n):\n    for j in range(m):\n        table2[j][i] = table[i][j]\n\ntotalSets = 0\nfor i in range(n):\n    if sum(table[i])>1:\n        totalSets+=(2**sum(table[i]))-1-sum(table[i])\n    if sum(table[i])<m-1:\n        totalSets+=(2**(m-sum(table[i])))-1-(m-sum(table[i]))\n    \nfor i in range(m):\n    if sum(table2[i])>1:\n        totalSets+=(2**sum(table2[i]))-1-sum(table2[i])\n    if sum(table2[i])<n-1:\n        totalSets+=(2**(n-sum(table2[i])))-1-(n-sum(table2[i]))\n\ntotalSets+=(n*m)\n\nprint(totalSets)\n", "n, m = map(int, input().split())\nmat = [list(map(int, input().split())) for i in range(n)]\nans = 0\nfor i in range(n):\n    w = 0\n    b = 0\n    for j in range(m):\n        if mat[i][j] == 1:\n            w += 1\n        else:\n            b += 1\n    ans += 2 ** w + 2 ** b - 2\nfor i in range(m):\n    w = 0\n    b = 0\n    for j in range(n):\n        if mat[j][i] == 1:\n            w += 1\n        else:\n            b += 1\n    ans += 2 ** w + 2 ** b - 2\nprint(ans - n * m)", "n, m = map(int, input().split())\ndata = [[]for i in range(n)]\ndata2 = [[0] * n for i in range(m)]\nfor i in range(n):\n    data[i] = list(map(int, input().split()))\na = 0\nfor i in range(m):\n    for j in range(n):\n        data2[i][j] = data[j][i]\nfor i in range(n):\n    su = sum(data[i])\n    if su != 0:\n        a += 2 ** su - 1\n    if m - su != 0:\n        a += 2 ** (m - su) - 1\n\n\nfor i in range(m):\n    su = sum(data2[i])\n    if su != 0:\n        a += 2 ** su - 1\n    if n - su != 0:\n        a += 2 ** (n - su) - 1\n\nprint(a - n * m)", "n, m = list(map(int, input().split()))\nA = [0] * n\nfor i in range(n):\n    A[i] = list(map(int, input().split()))\n\nres = 0\nfor i in range(n):\n    sum1 = sum(A[i])\n    sum2 = m - sum1\n    res += 2 ** sum1 + 2 ** sum2 - 2\nsum1 = 0\nsum2 = 0\nfor j in range(m):\n    for i in range(n):\n        sum1 += A[i][j]\n    sum2 = n - sum1\n    res += 2 ** sum1 + 2 ** sum2 - sum1 - sum2 - 2\n    sum1 = 0\n    sum2 = 0\nprint(res)\n\n\n\n", "n, m = [int(i) for i in input().split()]\nrow_one = [0 for i in range(n)]\ncolumn_one = [0 for i in range(m)]\nfor i in range(n):\n    tmp = [int(j) for j in input().split()]\n    row_one[i] = sum(tmp)\n    for j in range(m):\n        column_one[j] += tmp[j]\nrow_zero = [m - i for i in row_one]\ncolumn_zero = [n - i for i in column_one]\nans = 0\nfor i in row_zero:\n    ans += (1 << i)\nfor i in column_zero:\n    ans += (1 << i)\nfor i in row_one:\n    ans += (1 << i)\nfor i in column_one:\n    ans += (1 << i)\nans = ans - 2*(m+n) - m*n\nprint(ans)", "n,m=map(int,input().split())\na=[]\nb=[]\nans =0 \nfor i in range(n):   \n    a.append(0)\nfor i in range(m):\n    b.append(0)\nfor i in range(n):\n    l=list(map(int,input().split()))\n    for j in range(m):\n        a[i]=a[i]+l[j]\n        b[j]=b[j]+l[j]\nfor i in range(n):   \n    ans=ans+2**a[i]-1+2**(m-a[i])-1\nfor i in range(m):\n    ans=ans+2**b[i]-1+2**(n-b[i])-1\nans=ans-n*m\nprint(ans)", "n,m = input().split()\nn = int(n)\nm = int(m)\ncnt = 0\nb = []\nfor i in range(n):\n    a = [int(x) for x in input().split()]\n    b.append(a)\n    a = sum(a)\n    cnt += (1<<a) + (1<<(m-a)) - 2\nfor i in range(m):\n    x = 0\n    for j in range(n):\n        x = x + b[j][i]\n    cnt = cnt + (1<<x) + (1<<(n-x)) - 2\n\ncnt -= n*m\nprint(cnt)\n", "n, m = list(map(int, input().split()))\n\nmtx = []\nfor _ in range(n):\n    mtx.append(list(map(int, input().split())))\n\nres = 0\nfor i in range(n):\n    a = sum(mtx[i])\n    b = m - a\n    if a >= 1:\n        res += 2 ** a - 1\n    if b >= 1:\n        res += 2 ** b - 1\n\nfor j in range(m):\n    a = sum(mtx[i][j] for i in range(n))\n    b = n - a\n    if a >= 1:\n        res += 2 ** a - 1\n    if b >= 1:\n        res += 2 ** b - 1\n\nres -= n * m\nprint(res)\n", "n, m = map(int, input().split())\na = [list(map(int, input().split())) for i in range(n)]\ncol = [[0, 0] for i in range(m)]\nrow = [[0, 0] for i in range(n)]\nfor i in range(n):\n    summa = sum(a[i])\n    row[i] = [summa, m - summa]\n\nfor i in range(m):\n    summa = 0\n    for j in range(n):\n        summa += a[j][i]\n    col[i] = [summa, n - summa]\n\nres = 0\nfor i in row:\n    res += (2 ** i[0]) + (2 ** i[1]) - 2\n\nfor i in col:\n    res += (2 ** i[0]) + (2 ** i[1]) - 2\n\nres -= n *m\nprint(res)", "from math import factorial\ndef c(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n    \nn, m = map(int, input().split())\nans = 0\na = [list(map(int, input().split())) for i in range(n)]\nfor i in range(n):\n    c0, c1 = 0, 0\n    for j in range(m):\n        if a[i][j]:\n            c1 += 1\n        else:\n            c0 += 1\n    for j in range(1, c0 + 1):\n        ans += c(c0, j)\n    for j in range(1, c1 + 1):\n        ans += c(c1, j)\nfor j in range(m):\n    c0, c1 = 0, 0\n    for i in range(n):\n        if a[i][j]:\n            c1 += 1\n        else:\n            c0 += 1\n    for i in range(2, c0 + 1):\n        ans += c(c0, i)\n    for i in range(2, c1 + 1):\n        ans += c(c1, i)\nprint(ans)", "import sys\nn, m = list(map(int, input().split()))\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nc1 = []\nc2 = []\nfor i in range(n):\n    c1.append(a[i].count(1))\nfor i in range(m):\n    c = 0\n    for j in range(n):\n        if a[j][i] == 1:\n            c+= 1\n    c2.append(c)\ns = 0\nfor i in c1:\n    s +=2**i-2+2**(m-i)\nfor i in c2:\n    s +=2**i-2+2**(n-i)\ns -=n*m\nprint(s)\n", "import math\nsplit = lambda: list(map(int, input().split()))\na, b = split()\nrows = [split() for x in range(a)]\ncolumns = [[x[y] for x in rows] for y in range(b)]\ndef choose(p, q):\n    n = 1\n    for x in range(p - q + 1, p + 1):\n        n *= x\n    n //= math.factorial(q)\n    return n\ns = 0\nfor x in rows + columns:\n    p, q = x.count(0), x.count(1)\n    for y in range(1, p + 1):\n        s += choose(p, y)\n    for y in range(1, q + 1):\n        s += choose(q, y)\ns -= a * b\nprint(s)", "def solution():\n    ans = 0\n    n, m = map(int, input().split())\n    matrix = []\n    for i in range(n):\n        matrix.append([int(j) for j in input().split()])\n        \n    for i in range(n):\n        count = 0\n        for j in range(m):\n            if matrix[i][j] == 1:\n                count += 1\n        ans += 2**count - 1\n        count = m - count\n        ans += 2**count - 1\n    \n    for j in range(m):\n        count = 0\n        for i in range(n):\n            if matrix[i][j] == 1:\n                    count += 1\n        \n        if count > 1:\n            ans += 2**count - 1 - count\n        \n        count = n - count\n        if count > 1:\n            ans += 2**count - 1 - count\n    print(ans)\n    \nsolution()", "from math import factorial\n\ndef count(n, k):\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\nn, m = map(int, input().split())\ntable = []\nfor i in range(n):\n    table.append(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    c0 = table[i].count(0)\n    c1 = table[i].count(1)\n    for j in range(1, c0 + 1):\n        ans += count(c0, j)\n    for j in range(1, c1 + 1):\n        ans += count(c1, j)\nfor j in range(m):\n    c0 = 0\n    c1 = 0\n    for i in range(n):\n        if table[i][j] == 0:\n            c0 += 1\n        else:\n            c1 += 1\n    for i in range(2, c0 + 1):\n        ans += count(c0, i)\n    for i in range(2, c1 + 1):\n        ans += count(c1, i)\nprint(ans)", "n, m = map(int, input().split())\n\na = [list(map(int, input().split())) for _ in range(n)]\n\ns = 0\n\nfor l in a:\n    k = sum(l)\n    s += 2**k - 1\n    s += 2**(m-k) - 1\n\nfor i in range(m):\n    k = sum(l[i] for l in a)\n    s += 2**k - 1 - k\n    s += 2**(n-k) - 1 - (n-k)\n\nprint(s)"]