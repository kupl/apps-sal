["k = int(input())\nn = 50\nif k <= n-1:\n    aas = [0] * n\n    aas[0] += n * k\nelse:\n    t = k // n\n    k %= n\n    aas = [n-k+t-1] * n\n    i = 0\n    cnt = 0\n    while cnt < k:\n        aas[i] += 1 + k\n        i += 1\n        cnt += 1\nprint(n)\nprint(*aas)", "k = int(input())\n\nif k == 0:\n    a = [1, 1]\nelif k == 1:\n    a = [2, 0]\nelif k <= 50:\n    a = [i for i in range(1, k+1)]\nelse:\n    a = [i for i in range(1, 51)]\n    k -= 50\n    d = k // 50\n    for i in range(50):\n        a[i] += d\n    m = k % 50\n    for i in range(-1, -m-1, -1):\n        a[i] += 1\nprint((len(a)))\n\n# print(a)\n\na = [str(i) for i in a]\nprint((' '.join(a)))\n\n", "import sys\ndef main():\n    input = sys.stdin.readline\n    K=int(input())\n    N=50\n    ans=[]\n    m=K%N\n    for i in range(N):\n        t = K//N + (1 if i<m else 0)\n        ans.append(N*(t+1) - (K-t) - 1)\n    print(N)\n    print(*ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "k = int(input())\nimport numpy as np\nans = np.array([i for i in range(50)],dtype=np.int64)\n\na = k//50\nb = k%50\n\nans += a\nfor i in range(b):\n    ans[i] += 50\n    ans[:i] -= 1\n    ans[i+1:] -= 1\nprint(50)\nprint(' '.join(map(str, ans)))", "ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nips = lambda:input().split()\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nimport sys\n\nk = ni()\nn = 50\np,r = divmod(k,n)\nans = [0]*n\nfor i in range(n):\n    if i<n-r:\n        ans[i]=i + p\n    else:\n        ans[i]=i+1 + p\nprint(n)\nprint(*ans)\n", "K = int(input())\nN = 50\ndiv_K, rem_K = divmod(K, N)\nans = [l + div_K for l in range(N)]\nfor i in range(rem_K):\n    idx = ans.index(min(ans))\n    for i in range(N):\n        if i == idx:\n            ans[i] += N\n        else:\n            ans[i] -= 1\nprint(N)\nprint((*ans))\n", "k = int(input())\n\nn = 50\nprint(n)\nnums = list(reversed(list(range(n))))\n\nfor i in range(n):\n    nums[i] += k//n\n\nfor i in range(k%n):\n    nums[i] += 1\n\nt = list(map(str, nums))\nprint((' '.join(t)))\n", "k = int(input())\nsub = k//50+49\nans = [sub-k%50]*50\nfor i in range(k%50):\n  ans[i] += 51\nprint(50)\nprint(*ans)", "from math import ceil\nK=int(input())\nx=K//50\nans=(50-(K-50*x))*[49-K+51*x]+(K-50*x)*[100-K+51*x]\nprint(50)\nprint(*ans)", "K = int(input())\nN = 50\nP, Q = -(-K//N), -K%N\nans = [i for i in range(P, P+N)]\n\nfor q in range(Q):\n  for i in range(N):\n    if i == N-1-q:\n      ans[i] -= N\n    else:\n      ans[i] += 1\n\nprint(N)\nprint(*ans)", "K=int(input())\nr,q=divmod(K,50)\nA=[r+49]*50\n\ndef update():\n    M=A.index(min(A))\n    for i in range(50):\n        if i==M:\n            A[i]+=50\n        else:\n            A[i]-=1\n        #print(i,A)\n\nfor i in range(q):\n    update()\nprint(50)\nprint(*A)", "#(N-1)*N+K\n#N,N,N,N,--N\u304b\u3089N-1,N-1,,,N-1\u306fN\u56de\nK=int(input())\nN=50\nS=K//N\nT=K%N\nL=[N-1+S for i in range(N)]\nfor i in range(T):\n  L[i]+=N+1\nfor i in range(N):\n  L[i]-=T\nprint(N)\nL=list(map(str,L))\nprint(\" \".join(L))", "k = int(input())\nn = 50\n\nq, r = divmod(k, n)\nA = [n-1]*n\nfor i in range(n):\n    A[i] += q\n\nfor i in range(r):\n    A[i] += n+1\n    for j in range(n):\n        A[j] -= 1\n\nprint(n)\nprint((*A))\n", "K=int(input())\nprint(50)\nA=[]\nfor i in range(50):\n  a=K%50\n  b=K//50\n  d=i+b\n  if i<a:\n    d+=50-a+1\n  else:\n    d-=a\n  A.append(d)\nprint(*A)", "K = int(input())\nN = 50\nn = K // N\nans = [49+n] * N\nK %= N\n\nfor i in range(N):\n  if i < K:\n    ans[i] += N - K + 1\n  else:\n    ans[i] -= K\n\nprint(N)\nprint(*ans)", "K = int(input())\nsumm = 49*50+K\na,b = summ//50,summ%50\nlow = (summ-b*51)//50\nhigh = low + 51\nans = [low]*50\nfor i in range(b):\n    ans[i] += 51\nprint(50)\nprint(*ans)", "K = int(input())\nans = [49+K//50] * 50\n\namari = K%50\nif amari != 50:\n  for i in range(amari):\n    ans[i] = ans[i] + 50 - (amari-1)\n  for i in range(amari, 50):\n    ans[i] = ans[i] - amari\n  \nprint(50)\nansstr = [str(i) for i in ans]\nprint(' '.join(ansstr))", "k = int(input())\n\ndiv, mod = divmod(k, 50)\nA = [100 + div - mod] * mod + [49 + div -mod] * (50-mod)\nprint((50))\nprint((*A))\n", "K = int(input())\n\nn = 50\nprint(n)\na = [i + (K//n) for i in range(n)]\n\nr = K%n\nfor i in range(n):\n    if i <  r:\n        a[i] = a[i] + n - r + 1\n    else:\n        a[i] = a[i] - r\n    \nprint(*a)", "K = int(input())\nq,r = K//50,K%50\na = [50+q for i in range(r)] + [49+q-r for j in range(50-r)]\n\nprint((50))\nprint((' '.join(map(str,a))))\n", "k = int(input())\nn = 50\na = [i + k // n for i in range(n)]\nfor i in range(k % n):\n    a[i] += n\n    for j in range(n):\n        if i != j:\n            a[j] -= 1\nprint(n)\nprint(*a)", "K = int(input())\n\nif K == 1:\n    print(3)\n    print(1,0,3)\nelif K == 0:\n    print(4)\n    print(3,3,3,3)\n\nelse:\n    div = -1\n    \n    if K <= 50:\n        print(K)\n        print(*[K for _ in range(K)])\n    \n    else:\n        print(50)\n        ans = [K//50+i for i in range(50)]\n\n        for i in range(K%50):\n            ans[i] += 50\n            for j in range(50):\n                if i != j:\n                    ans[j] -= 1\n        \n        print(*ans)", "k = int(input())\n\ntasu = k // 50\nlst = list(range(tasu, tasu+50))\namari = k % 50\nfor i in range(amari):\n    idx = 49 - i\n    lst[idx] += 1\n\nprint(50)\nprint(' '.join(map(str, lst)))", "k = int(input())\nn = 50\nx, y = divmod(k, n)\nans = [i+x for i in range(n)]\nfor i in range(y):\n    i %= n\n    ans[i] += n\n    for j in range(n):\n        if i == j:\n            continue\n        ans[j] -= 1\nprint(n)\nprint(*ans)", "import heapq\nk = int(input())\na = [49] * 50\nfor i in range(50):\n    a[i] += k//50\nk%=50\n\n\nfor i in range(k):\n    for j in range(50):\n        if i==j: a[j]+=k\n        else: a[j]-=1\n\nprint(len(a))\nprint(' '.join(list(map(str, a))))", "K = int(input())\nans = [i for i in range(50)]\ncnt = 0\nloop = K%50\nplus = K//50\nans = list(map(lambda x: x+plus, ans))\nfor i in range(loop):\n    cnt%=50\n    ans = list(map(lambda x: x-1, ans))\n    ans[cnt] += 51\n    cnt+=1\nprint(50)\nprint(*ans)", "K = int(input())\n\nans = list(range(50))[::-1]\nq,r = divmod(K, 50)\n\nfor i in range(50):\n  ans[i] += q\nfor i in range(r):\n  ans[i] += 1\n\nprint(len(ans))\nprint(*ans)", "K=int(input());N=50;\nQ=K//N;R=K%N;\nprint(N);\nfor i in range(R):\n  print(N-1+Q -R + N+1,end=\" \")\nfor i in range(N-R):\n  print(N-1+Q -R,end=\" \")", "K = int(input())\nN = 50\n\nA = K // N + 1\nB = A * N - K\na = [49+A] * N\nfor i in range(B):\n  a[i] -= N\n  for j in range(N):\n    if j == i: continue\n    a[j] += 1\n    \nprint(N)\nprint(' '.join(map(str, a)))", "import sys\nimport numpy as np\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nin_n = lambda: int(readline())\nin_nn = lambda: list(map(int, readline().split()))\nin_s = lambda: readline().rstrip().decode('utf-8')\nin_nl = lambda: list(map(int, readline().split()))\nin_nl2 = lambda H: [in_nl() for _ in range(H)]\nin_map = lambda: [s == ord('.') for s in readline() if s != ord('\\n')]\nin_map2 = lambda H: [in_map() for _ in range(H)]\nin_all = lambda: list(map(int, read().split()))\n\n\ndef main():\n    K = in_n()\n    N = 50\n\n    q, r = divmod(K, N)\n    ans = np.full(N, N + q)\n    cnt = N - r\n    ans[:cnt] -= N - (cnt - 1)\n    ans[cnt:] += cnt\n\n    print(N)\n    print((' '.join(map(str, ans))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "MAX = pow(10,16)+1000\nK = int(input())\nN = 50\nkaisu = [K//N for _ in range(N)]\nans = [-1 for _ in range(N)]\nnokori = K%N\nfor i in range(nokori):\n  kaisu[i] += 1\n#print(kaisu)\n\nfor i in range(N):\n  temp = (N+1)*kaisu[i]+N-1-K\n  ans[i] = temp\n\nprint(N)\nprint(*ans)", "def solve():\n  K = int(input())\n  if K==49:\n    print(2)\n    return [27,24]\n  print(50)\n  a,b = K//50,K%50\n  ans = [49+a]*50\n  for i in range(50):\n    if i<b:\n      ans[i] += 51-b\n    else:\n      ans[i] -= b\n  return ans\nprint(*solve())", "k=int(input())\nans=[0]*50\nif k<50:\n    for i in range(k):\n        ans[i]=50-i\nelse:\n    for i in range(50):\n        ans[i]=50-i\n    k-=50\n    for i in range(50):\n        ans[i]+=k//50\n    for i in range(k%50):\n        ans[i]+=1\nprint(50)\nprint(*ans)", "def main():\n    N = 50\n    K = int(input())\n    ans = [(K // N) + i for i in range(N)]\n    for i in range(K % N):\n        for j in range(N):\n            ans[j] += N if i == j else -1\n    print(N)\n    print((' '.join(map(str, ans))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "k = int(input())\n\nans = [49 + k//50 - k%50 + 51] * (k%50) + [49 + k//50 - k%50] * (50-k%50)\n\nprint(50)\nprint(*ans)", "def examA():\n    S = SI()\n    T = SI()\n    N = len(S)\n    ans = \"No\"\n    for i in range(N):\n        cur = S[i:] + S[:i]\n        #print(cur)\n        if cur==T:\n            ans = \"Yes\"\n    print(ans)\n    return\n\ndef examB():\n    H, W = LI()\n    S = [SI()for _ in range(H)]\n    flag = True\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    L, R = LI()\n    ans = inf\n    if R-L>=3000:\n        R = L+3000\n\n    for l in range(L, R + 1):\n        for r in range(l+1, R + 1):\n            now = (l*r) %2019\n            ans = min(ans,now)\n    print(ans)\n    return\n\ndef examD():\n    T = [\"dream\", \"dreamer\", \"erase\", \"eraser\"]\n    S = SI()\n    ans = \"NO\"\n    t = \"\"\n    for s in S[::-1]:\n        t += s\n        if t[::-1] in T:\n            t = \"\"\n    if t==\"\":\n        ans = \"YES\"\n    print(ans)\n    return\n\ndef examE():\n    N = 50\n    K = I()\n    base = K//N\n    A = [base+i for i in range(N)]\n    rest = K%N\n    for i in range(rest):\n        A[-i-1] += 1\n    print(N)\n    print(\" \".join(map(str,A)))\n    return\n\ndef examF():\n    L = I()\n\n    ans = 0\n    print(ans)\n    return\n\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nnonlocal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = 10**(-12)\nalphabet = [chr(ord('a') + i) for i in range(26)]\n\nsys.setrecursionlimit(10**7)\n\ndef __starting_point():\n    examE()\n\n\"\"\"\n142\n12 9 1445 0 1\nasd dfg hj o o\naidn\n\"\"\"\n__starting_point()", "k = int(input())\n\ndiv = k // 50\nmod = k % 50\nA = [100 + div - mod] * mod + [49 + div -mod] * (50-mod)\nprint((50))\nprint((*A))\n", "K = int(input())\nif K >= 50:\n  N = 50\n  wari = K//N -1\n  amari = K%N\n  l = [(50+wari)+1]*amari + [(50+wari)-amari]*(N-amari)\nif 50>K>1:\n  N = K\n  l = [K]*K\nif K == 1:\n  N = 2\n  l = [0,2]  \nif K == 0:\n  N = 2\n  l = [1,1]\n##\nprint(N)\nprint(*l)", "import sys\nimport math\nimport heapq\nmod=10**9+7\ninf=float(\"inf\")\nfrom math import sqrt\nfrom collections import deque\nfrom collections import Counter\nfrom collections import defaultdict\n#\u3059\u3079\u3066\u306ekey\u304c\u7528\u610f\u3055\u308c\u3066\u308b defaultdict(int)\u3067\u521d\u671f\u5316\nfrom collections import OrderedDict\n#\u9806\u5e8f\u3092\u4fdd\u3063\u305fdict\nfrom math import ceil\ninput=lambda: sys.stdin.readline().strip()\nsys.setrecursionlimit(11451419)\nfrom decimal import Decimal #float\u306e\u9ad8\u7cbe\u5ea6ver, \u6e21\u3059\u306e\u306fstr\u578b\u3067\nfrom functools import lru_cache\n#\u30e1\u30e2\u5316\u518d\u5e30def\u306e\u5192\u982d\u306b\u6bce\u56de @lru_cache(maxsize=10**10)\n#\u5f15\u6570\u306blist\u306f\u3060\u3081\n#######\u3053\u3053\u307e\u3067\u30c6\u30f3\u30d7\u30ec#######\n#\u30bd\u30fc\u30c8\u3001\"a\"+\"b\"\u3001\u518d\u5e30\u306a\u3089Python3\u306e\u65b9\u304c\u3044\u3044\n#######\u3053\u3053\u304b\u3089\u5929\u3077\u3089########\nk=int(input())\nprint(50);n=50\nif k==0:\n    print(\" \".join([\"0\"]*50));return\n    \na=k//n\nb=k%n\nA=[a+i for i in range(50)]\nfor  i in range(b):\n    A=[A[j]-1 if i!=j else A[j]+n for j in range(50)]\nprint(*A)", "def resolve():\n    K = int(input())\n    N = 50\n    ans = [49+K//N]*N\n    for i in range(K%N):\n        ans[i] += 1\n    for j in range(K%N, N):\n        ans[j] -= K%N\n    print(N)\n    print(*ans)\n    \n\nif '__main__' == __name__:\n    resolve()", "N=50;P,Q=divmod(int(input()),N);R=N-Q;print(N,*[P+R-1]*R+[P+R+N]*Q)", "k=int(input())\nn=50\na=[n-1]*n\nm=k%n\nfor i in range(n):\n  a[i]+=k//n\n  if i<m:a[i]+=n-m+1\n  else:a[i]+=-m\nprint(n)\nprint(*a)", "K=int(input());x=K//50;print(50);print(*((50-(K-50*x))*[49-K+51*x]+(K-50*x)*[100-K+51*x]))", "\n\n\n\nK = int(input())\n\n\n\"\"\"\n\u611a\u76f4\u89e3\nN\u30922~50\u307e\u3067\u306f\u8a66\u305b\u308b\u3051\u3069\u3001\u5404\u8981\u7d20\u306e\u5024\u306f\u4f55\u306b\u3059\u308c\u3070\u3044\u3044\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\n\u306a\u306e\u3067\u3001\u5168\u63a2\u7d22\u7684\u306a\u89e3\u304d\u65b9\u306f\u671f\u5f85\u3067\u304d\u306a\u3044\u3002\n\n\u4e00\u3064\u304b\u3089N\u5f15\u3044\u3066\u3001\u6b8b\u308a\u306b\uff0b\uff11\u3059\u308b\u306e\u3067\u3001\u4e00\u56de\u306e\u64cd\u4f5c\u3067\u5168\u4f53\u306e\u5408\u8a08\u304b\u3089\uff11\u6e1b\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308b\n\u306a\u306e\u3067\u3001\u958b\u59cb\u6642\u70b9\u3067\u5168\u4f53\u306e\u5408\u8a08\u306f\u3001(N-1)*N + K ~ N*N+K \u306b\u306a\u308b\u306e\u304b?\n\n\u3042\u308b\u64cd\u4f5c\u3092\u7e70\u308a\u8fd4\u3057\u3066\u6700\u5f8c\u306b\uff5e\u7cfb\u306e\u554f\u984c\u306f\u3001\u6700\u5f8c\u304b\u3089\u64cd\u4f5c\u3092\u9006\u306b\u304a\u3053\u306a\u3063\u3066\u6700\u521d\u306e\u72b6\u614b\u306b\u623b\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u89e3\u3051\u308b\u3053\u3068\u304c\u304a\u304a\u3044\n\u4eca\u56de\u306fK\u56de\u306e\u64cd\u4f5c\u306e\u5f8c\u306b\u6570\u5217\u306e\u6700\u5927\u5024\u304c N-1 \u4ee5\u4e0b\u306b\u306a\u308b\u306e\u3067\u3001N-1\u304b\u3089\u958b\u59cb\u3057\u3066\u3001\u3042\u308b\u8981\u7d20\u306bN\u8db3\u3057\u3066\u5168\u4f53\u304b\u3089\uff11\u5f15\u304f\u3001\u3092K\u56de\u3084\u308c\u3070\u3088\u3044\u3002\nN\u306f50\u307e\u3067\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\uff15\uff10\u3068\u3059\u308b\uff08\u5c0f\u3055\u3059\u304e\u306a\u3051\u308c\u3070\u3088\u3044\u3068\u5224\u65ad\uff09\n\n\u64cd\u4f5c\u304c\u914d\u5217\u306e\u8981\u7d20\u3059\u3079\u3066\u306b\u4e00\u56de\u305a\u3064\u884c\u308f\u308c\u305f\u3068\u304d\u3001N\u3075\u3048\u3066N-1\u6e1b\u308b\u306e\u3067\u30011\u5897\u3048\u305f\u3060\u3051\u306b\u306a\u308b\n\"\"\"\nN = 50\nans = [49] * 50\n\ncnt_all = K // N # \u5168\u4f53\u306b1\u8db3\u3055\u308c\u308b\u56de\u6570\nrem = K % N # \u521d\u3081\u306erem\u500b\u306e\u8981\u7d20\u306f N - (rem-1)\u3055\u308c\u3001\u6b8b\u308a\u306e\u8981\u7d20\u306f\u666e\u901a\u306brem\u6e1b\u308b\n\nfor i in range(N):\n    if i < rem:\n        ans[i] += cnt_all + N - (rem-1)\n    else:\n        ans[i] += cnt_all - rem\n\n\nprint(50)\nprint(*ans)", "K = int(input(\"50\\n\"))\nN = 50\nr = (K-1)%N+1\na = (K-r)//N+N\nprint(*([a]*r+[a-r-1]*(N-r)))", "k = int(input())\na = k//50\nb = 50-k%50\nans = [a+b-1]*b+[a+50]*(50-b)\nprint(50)\nprint(*ans)", "k = int(input())\nn = 50\nprint(n)\na = [k // n + 49] * n\nfor i in range(k % n):\n  for j in range(n):\n    if i == j:\n      a[j] += n\n    else:\n      a[j] -= 1\nprint((*a))\n", "K = int(input())\n\nq, r = divmod(K, 50)\n\nans = [i + q for i in range(50)]\nfor i in range(1, r + 1):\n    ans[-i] += 1\n\nprint((50))\nprint((*ans))\n", "K = int(input())\nk = K // 50\nl = K % 50\nans = [(i + k) for i in range(51) if i != 50 - l]\n\nprint(50)\nprint(*ans)", "k = int(input())\nv = [i  + (k // 50) for i in range(50)]\nfor i in range(k % 50):\n    for j in range(50):\n        if i == j:\n            v[j] += 50\n            continue\n        v[j] -= 1\nprint(50)\nprint(*v)", "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\n\nK = int(input())\n\n\nif K < 10 ** 15:\n    a, b = K // 2 + 1, K // 2 + 1\n\n    if K % 2 == 1:\n        a += 2\n        b -= 1\n\n    print(2)\n    print(a, b)\nelse:\n    N = 50\n    A = [i for i in range(50)]\n    A = list(map(lambda x: x + K // 50, A))\n    r = K % 50\n    for i in range(50):\n        if i < r:\n            A[i] += N\n            A[i] -= r - 1\n        else:\n            A[i] -= r\n\n    print(N)\n    print(*A)", "def main():\n    K = int(input())\n    N = 50\n\n    a = [N - 1] * N\n    q, r = divmod(K, N)\n    for i in range(N):\n        cnt_add = q + int(i < r)\n        a[i] += N * cnt_add\n        a[i] -= K - cnt_add\n\n    print(N)\n    print((*a))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    K = int(readline())\n\n    N = 50\n\n    q, r = divmod(K, N)\n    A = [0] * N\n    for i in range(N):\n        if i < r:\n            A[i] = N - 1 + (N + 1) * (q + 1) - K\n        else:\n            A[i] = N - 1 + (N + 1) * q - K\n\n    print(N)\n    print((*A))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nK = int(sys.stdin.readline())\n\nN = 50\nV = [49 + K // 50 for _ in range(N)]\n\nK %= 50\nfor i in range(K):\n    V[i] += N+1\n    for j in range(N):\n        V[j] -= 1\n\nprint(N)\nprint(*V)", "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\n\nk = int(read())\nn = 50\na = [n - 1] * n\nx, y = divmod(k, n)\nfor i in range(n):\n    a[i] += x - y\n    if i < y:\n        a[i] += n + 1\nprint(n)\nprint((*a))\n", "k = int(input())\n\nn = 50\na = k//n\nm = k%n\nans = list(range(a,a+n))\nfor i in range(m):\n    ans[n-i-1] += 1\n\nprint(50)\nprint(*ans)", "k=int(input())\nmax_a=pow(10,16)+1000\nfor i in range(2,51):\n  a=[j+k//i for j in range(i)]\n  for j in range(k%i):\n    a[-1-j]+=1\n  if max(a)<=max_a:\n    print(i)\n    print(' '.join(list(map(str,a))))\n    return", "K = int(input())\nX = 50\n\nA = [X - 1] * X\nA = [a + K // X for a in A]\nfor i in range(K % X):\n    A[i] += 1\nfor i in range(X - (K % X)):\n    A[-i - 1] -= K % X\n\nprint(X)\nprint(*A, sep=' ')\n", "k = int(input())\n\nk1 = k // 50\nk2 = k % 50\n\nn = 50\na = list(range(n))[::-1]\nfor i in range(n):\n    a[i] += k1\nfor i in range(k2):\n    a[i] += 1\n\nprint(n)\nprint((*a))\n", "K = int(input())\nif K <= 50:\n    a = [50]*K + [0]*(50-K)\n    print(50)\n    print(*a)\n    return\n\nd,m = divmod(K,50)\nif m==0:\n    a = [d+49] * 50\n    print(50)\n    print(*a)\n    return\n\na = [d+50] * 50\nrem = 50 - m\nfor i in range(m):\n    a[i] += rem\nfor i in range(m,50):\n    a[i] -= (m+1)\nprint(50)\nprint(*a)", "K = int(input())\nN = 50\nP, Q = divmod(K, N)\nM = P + N - 1\nans = [M-Q]*(N-Q) + [M+51-Q]*(Q)\n\nprint(N)\nprint((*ans))\n", "K=int(input())\nK1=K//50\nK2=K%50\n\nanswer_list=[]\nfor i in reversed(range(50-K2)):\n  answer_list.append(i)\nfor i in range(K2):\n  answer_list.append(50-i)\n#print(answer_list)\n\nfor i in range(50):\n  answer_list[i]+=K1\n\nprint(50)\nprint(*answer_list)", "#N\u3092\u9069\u5f53\u306b\u3068\u308b\n#\u5404a[i](1<=i<=N)\u306b\u9806\u756a\u306b1\u56de\u305a\u3064\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u3092K//N\u56de\u7e70\u308a\u8fd4\u3059\n#\u4e00\u5468\u3059\u308b\u5b8c\u9042\u3059\u308b\u3054\u3068\u306ba[i]\u306f\uff11\u305a\u3064\u6e1b\u3063\u3066\u3044\u304f\n#\u81ea\u8eab\u4ee5\u5916\u306e\u64cd\u4f5c\u306b\u5bfe\u3057\u30661\u3060\u3051\u5897\u52a0\u3059\u308b\u306e\u3067\u3001a[i]\u306f\u5408\u8a08\u3067K//N*(N-1)+\u3060\u3051\u5897\u3048\u308b.\n#\u3057\u305f\u304c\u3063\u3066\u3001a[i]\u306e\u521d\u671f\u5024\u306fN-1+K//N\n\n\ndef main():\n    K = int(input())\n    N = 50\n    loop, remain = divmod(K, N)\n    a = [N-1+loop+N-remain+1 if i < remain else N-1+loop-remain for i in range(N)]\n    print(N)\n    print((*a))\n\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ndef main():\n    input = sys.stdin.readline\n    K=int(input())\n    N=50\n    ans=[]\n    m=K%N\n    for i in range(N):\n        t = N-1 + K//N\n        ans.append(t)\n    for i in range(m):\n        for j in range(N):\n            if i==j: ans[j]+=N\n            else: ans[j]-=1\n    print(N)\n    print(*ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "#def test(l):\n#    n = len(l)\n#    c = 0\n#    while max(l) >= n:\n#        l.sort()\n#        l[-1] -= n\n#        for i in range(n-1):\n#            l[i] += 1\n#        c += 1\n#    return c\n\ndef main():\n    K = int(input())\n    if K <= 49:\n        print((50))\n        l = [0] * (50 - K) + [50] * K\n        print((' '.join(str(i) for i in l)))\n        return l\n    l = [(K // 50) + 50] * 50\n    a = 50 - K % 50\n    for i in range(a):\n        l[0] -= 50\n        for j in range(1, 50):\n            l[j] += 1\n        l.sort(reverse=True)\n    print((50))\n    print((' '.join(str(i) for i in l)))\n    return l\nl = main()\n#print('kotae', test(l))\n", "K = int(input())\nk = K // 50\nd = K % 50\nans = [k+i for i in range(50)]\n\n\nfor i in range(49, 49-d, -1):\n    ans[i] += 1\nprint(50)\nprint(*ans)", "#Decrease (const)\nK = int(input())\n# \u9069\u5f53\u306b\u69cb\u6210\u3059\u308b\nN = 50\nu, v = divmod(K, 50)\nP = [u+i for i in range(N)]\nfor i in range(1, v+1):\n    P[-i] += 1\nprint(N)\nprint(*P)", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nK = ini()\nN = 50\n\n\ndef solve():\n    a = K // N\n    h = (N - 1) + a\n    r = K % N\n    hs = [h + N - (r - 1)] * r + [h - r] * (N - r)\n    return hs\n\n\nans = solve()\nprint(len(ans))\nprint(*ans)\n\n", "from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    K=int(readline())\n\n    N=50\n    M=K//N\n    L=K%N\n    A=range(N)\n    A=list(map(lambda x:x+M,A))\n    for i in range(L):\n        A[i]+=N+1\n        A=list(map(lambda x:x-1,A))\n\n    print(N)\n    print(*A)\n\ndef __starting_point():\n    main()\n__starting_point()", "K = int(input())\nd, m = divmod(K, 50)\n\nA = [d + 49 - m] * (50 - m) + [d + 100 - m] * m\nprint(50)\nprint(*A)", "k = int(input())\nq = k//50\nr = k%50\nprint(50)\na = [0]*50\nfor i in range(50):\n    if i < r:\n        a[i] = 100+q-r\n        # a[i] = 49+50*(q+1)-49*q-(r-1)\n    else:\n        a[i] = 49+q-r\n        # a[i] = 49+50*q-49*q-r\nprint(*a)", "def main():\n    k = int(input())\n\n    n = 50\n    a = [None for _ in range(n)]\n    for i in range(n):\n        a[i] = i + (k + i) // n\n\n    print(n)\n    print((' '.join([str(x) for x in a])))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def sub(A):\n    m = max(A)\n    for i in range(len(A)):\n        if A[i] == m:\n            A[i] -= len(A)\n            m = -(10 ** 40)\n        else:\n            A[i] += 1\n\ndef main():\n    K = int(input())\n    if K == 0:\n        return 2, [1, 1]\n    if K == 1:\n        return 2, [0, 2]\n    if K < 50:\n        return K, [K] * K\n    k = K // 50\n    t = [50 + k] * 50\n    for _ in range(50 - (K % 50)):\n        sub(t)\n    return 50, t\n    \n\n\n\nN, A = main()\nprint(N)\nprint((*A))\n", "K = int(input())\nN = 50\nif K <= 50:\n    print(N)\n    ans = [50]*K + [0]*(N-K)\n    print(*ans)\n    return\n\nd,m = divmod(K,50)\nans = [d+49] * N\nfor i in range(N):\n    if i < m:\n        ans[i] += N-m+1\n    else:\n        ans[i] -= m\nprint(N)\nprint(*ans)", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nimport sys,bisect,math,itertools,fractions\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nk = inp()\nb = (k-1)//50+50\nr = k%50\nl = 50-r\na = b-r-1\nif r == 0: a = b\nprint(50)\nres = [-1] * 50\nfor i in range(50):\n    if i < l:\n        res[i] = a\n    else:\n        res[i] = b\nprint(*res)", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\n\n# import numpy as np\n\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: map(int, sys.stdin.readline().rstrip().split())\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().rstrip().split()))\n\n\n# ===CODE===\n\ndef main():\n    k = ni()\n    l = 50\n    ans = [l - 1 for _ in range(l)]\n\n    for i in range(l):\n        ans[i] += k // l\n\n    for i in range(l):\n        tgt = k % l\n        if i < tgt:\n            ans[i] += l\n            ans[i] -= tgt - 1\n        else:\n            ans[i] -= tgt\n\n    print(l)\n    print(*ans, sep=\" \")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "k = int(input())\nn = 50\n\ni = k % 50\nj = k // 50\n\nprint(50)\nfor _ in range(n-i):\n    print(n + j - i - 1, end = ' ')\nfor _ in range(i):\n    print(2 * n + j - i, end = ' ')\n", "k = int(input())\n\nif k==0:\n    print(2)\n    print(\"0 0\")\n\nelif k ==1:\n    print(2)\n    print(\"2 0\")\n\nelif k <=50:\n    print(k)\n    print((str(k)+\" \")*(k-1)+str(k))\n    \nelse:\n    l = k // 50\n    m = k % 50\n    print(50)\n    print((str(50+l)+\" \")*m+(str(49+l-m)+\" \")*(49-m)+str(49+l-m))", "k=int(input())\nn=50\na=[49]*n\nx=k//n\ny=k%n\nfor i in range(n):\n  a[i]+=x\n  if i<y:a[i]+=(n+1)-y\n  else:a[i]-=y\nprint(n)\nprint(*a)", "import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10 ** 6)\nfrom collections import defaultdict\nfrom collections import Counter\nimport fractions\nimport math\nfrom collections import deque\nfrom bisect import bisect_left\nfrom bisect import insort_left\nimport itertools\nfrom heapq import heapify\nfrom heapq import heappop\nfrom heapq import heappush\nimport heapq\nimport numpy as np\nINF = float(\"inf\")\n#d = defaultdict(int)\n#d = defaultdict(list)\n#N = int(input())\n#A = list(map(int,input().split()))\n#S = list(input())\n#S.remove(\"\\n\")\n#N,M = map(int,input().split())\n#S,T = map(str,input().split())\n#A = [int(input()) for _ in range(N)]\n#S = [input() for _ in range(N)]\n#A = [list(map(int,input().split())) for _ in range(N)]\nK = int(input())\nif K <= 50 and K >= 2:\n    a = [K]*K\n    print(K)\n    print((*a))\nelif K == 0:\n    print((2))\n    print((1,1))\nelif K == 1:\n    print((2))\n    print((0,3))\nelse:\n    x = K // 50\n    y = K % 50\n    a = []\n    for i in range(y):\n        a.append(49+x+1)\n    for j in range(50-y):\n        a.append(49+x-y)\n    print((50))\n    print((*a))\n", "import sys\nimport math\nimport heapq\nmod=10**9+7\ninf=float(\"inf\")\nfrom math import sqrt\nfrom collections import deque\nfrom collections import Counter\nfrom collections import defaultdict\n#\u3059\u3079\u3066\u306ekey\u304c\u7528\u610f\u3055\u308c\u3066\u308b defaultdict(int)\u3067\u521d\u671f\u5316\nfrom collections import OrderedDict\n#\u9806\u5e8f\u3092\u4fdd\u3063\u305fdict\nfrom math import ceil\ninput=lambda: sys.stdin.readline().strip()\nsys.setrecursionlimit(11451419)\nfrom decimal import Decimal #float\u306e\u9ad8\u7cbe\u5ea6ver, \u6e21\u3059\u306e\u306fstr\u578b\u3067\nfrom functools import lru_cache\n#\u30e1\u30e2\u5316\u518d\u5e30def\u306e\u5192\u982d\u306b\u6bce\u56de @lru_cache(maxsize=10**10)\n#\u5f15\u6570\u306blist\u306f\u3060\u3081\n#######\u3053\u3053\u307e\u3067\u30c6\u30f3\u30d7\u30ec#######\n#\u30bd\u30fc\u30c8\u3001\"a\"+\"b\"\u3001\u518d\u5e30\u306a\u3089Python3\u306e\u65b9\u304c\u3044\u3044\n#######\u3053\u3053\u304b\u3089\u5929\u3077\u3089########\nk=int(input())\nprint(50);n=50\nif k==0:\n    print(\" \".join([\"0\"]*50));return\n    \na=k//n\nb=k%n\nA=[a+49 for i in range(50)]\nfor  i in range(b):\n    A=[A[j]-1 if i!=j else A[j]+n for j in range(50)]\nprint(*A)", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    K = int(readline())\n    N = 50\n\n    q, r = divmod(K, N)\n    A = [N - 1 + (N + 1) * q - K] * N\n\n    for i in range(r):\n        A[i] += N + 1\n\n    print(N)\n    print((' '.join(map(str, A))))\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 9)\nMOD = 10 ** 9 + 7\n\nK = int(input())\nN = 50\n\ntmp1 = N - 1 + (K // N)\ntmp2 = K % 50\n\nans = [0] * N\nfor i in range(N - tmp2):\n    ans[i] = tmp1 - tmp2\nfor j in range(i + 1, N):\n    ans[j] = tmp1 + N - tmp2 + 1\n\nprint (N)\nprint (*ans, sep = ' ')\n", "k = int(input())\n\na = [49 + k // 50] * 50\n\nb = k % 50\n\nif b:\n    for i in range(50):\n        if i < b:\n            a[i] += 50 - (b-1)\n        else:\n            a[i] -= b\n\nprint((50))\nprint((\" \".join(list(map(str, a)))))\n", "k = int(input())\nif k == 0:\n    print(\"2\\n1 1\")\n    return\nif k == 1:\n    print(\"2\\n2 0\")\n    return\nn = min(50,k)\na = [i for i in range(n)]\nc = k // n\n\nfor i in range(n):\n    a[i] += c\n\nfor i in range(k % n):\n    a[i] += n\n    for j in range(n):\n        if i != j:\n            a[j] -= 1\nprint(n)\nfor i in a:\n    if i in range(10**16 + 1001):\n        print(i, end=' ')\n    '''else:\n        return'''\nprint()", "import sys\ndef main():\n    input = sys.stdin.readline\n    K=int(input())\n    N=max(2,min(50,K))\n    ans=[i+K//N for i in range(N)]\n    m=K%N\n    for i in range(m):\n        for j in range(N):\n            if i==j: ans[j]+=N\n            else: ans[j]-=1\n    print(N)\n    print(*ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "k = int(input())\n\nprint((50))\nl = [i for i in range(50)]\n\nfor i in range(50):\n    l[i] += k//50\na = k%50\nfor i in range(a):\n    for j in range(50):\n        if i == j:\n            l[j] += 50\n        else:\n            l[j] -= 1\nprint((*l))\n", "import sys\nimport math\nimport collections\nimport bisect\nimport itertools\n\n# import numpy as np\n\nsys.setrecursionlimit(10 ** 7)\nINF = 10 ** 20\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nni = lambda: int(sys.stdin.readline().rstrip())\nns = lambda: map(int, sys.stdin.readline().rstrip().split())\nna = lambda: list(map(int, sys.stdin.readline().rstrip().split()))\nna1 = lambda: list(map(lambda x: int(x) - 1, sys.stdin.readline().rstrip().split()))\n\n\n# ===CODE===\n\ndef main():\n    k = ni()\n    l = 50\n    ans = [l - 1 for _ in range(l)]\n\n    for i in range(l):\n        ans[i] += k // l\n        \n        tgt = k % l\n        if i < tgt:\n            ans[i] += l\n            ans[i] -= tgt - 1\n        else:\n            ans[i] -= tgt\n\n    print(l)\n    print(*ans, sep=\" \")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#float\u578b\u3092\u8a31\u3059\u306a\n#numpy\u306fpython\u3067\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import Counter, deque\nfrom collections import defaultdict\nfrom itertools import combinations, permutations, accumulate, groupby, product\nfrom bisect import bisect_left,bisect_right\nfrom heapq import heapify, heappop, heappush\nfrom math import floor, ceil,pi,factorial\nfrom operator import itemgetter\nimport copy\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return [int(input()) for i in range(n)]\ndef MXI(): return [[LI()]for i in range(n)]\ndef SI(): return input().rstrip()\ndef printns(x): print(('\\n'.join(x)))\ndef printni(x): print(('\\n'.join(list(map(str,x)))))\ninf = 10**17\nmod = 10**9 + 7\n\nn=I()\nlis=[50 for i in range(50)]\nlists=[]\nfor i in range(50):\n    mx=-inf\n    for j in range(50):\n        if lis[j]>=mx:\n            mx=lis[j]\n            ind=j\n    for j in range(50):\n        lis[j]+=1\n    lis[ind]-=51\n    lists.append(copy.deepcopy(lis))\n    #print(lis)\n#print(lists)\n#print(lists[0])\nu=n%50\nx=n//50\nbase=lists[50-u-1]\nfor i in range(50):\n    base[i]+=x\nprint((50))\nprint((*base))\n\n\n\n\n        \n\n    \n    \n    \n    \n    \n\n    \n", "def main():\n    K = int(input())\n    N = 50\n\n    q, r = divmod(K, N)\n    a = [x + q for x in range(N)]  # \u5168\u4f53\u3078\u306e\u64cd\u4f5c\u3092q\u30bb\u30c3\u30c8\u3067\u304d\u30011\u30bb\u30c3\u30c8\u3042\u305f\u308a\u5168\u4f531\u5897\u52a0\n    for i in range(N):\n        if i < r:\n            a[i] += N\n            a[i] -= r - 1\n        else:\n            a[i] -= r\n\n    print(N)\n    print((*a))\n\n\ndef __starting_point():\n    main()\n\n# 0,1,2,...,N-1\n# N,0,1,2,...,N-2\n# N-1,N,0,1,2,...,N-3\n# ...\n# ...0,1\n# ...N,0\n# ...N-1,N\n\n# \u6bce\u56de\u3069\u3053\u304b\u304c0\u306b\u306a\u308a\u3001\u305d\u3053\u3092N\u52a0\u7b97\u3057\u3001\u4ed6\u30921\u5f15\u304f\n# \u5168\u4f53\u3092\u4e00\u56de\u305a\u3064\u64cd\u4f5c\u3059\u308b\u3068N\u52a0\u7b97\u3057\u3066N-1\u5f15\u304f\u306e\u3067\u30011\u5897\u3048\u308b\n\n__starting_point()", "import sys\nsys.setrecursionlimit(1 << 25)\nread = sys.stdin.readline\nra = range\nenu = enumerate\n\n\ndef read_ints():\n    return list(map(int, read().split()))\n\n\ndef read_a_int():\n    return int(read())\n\n\ndef read_tuple(H):\n    '''\n    H is number of rows\n    '''\n    ret = []\n    for _ in range(H):\n        ret.append(tuple(map(int, read().split())))\n    return ret\n\n\ndef read_col(H):\n    '''\n    H is number of rows\n    A\u5217\u3001B\u5217\u304c\u4e0e\u3048\u3089\u308c\u308b\u3088\u3046\u306a\u3068\u304d\n    ex1)A,B=read_col(H)    ex2) A,=read_col(H) #\u4e00\u5217\u306e\u5834\u5408\n    '''\n    ret = []\n    for _ in range(H):\n        ret.append(list(map(int, read().split())))\n    return tuple(map(list, list(zip(*ret))))\n\n\ndef read_matrix(H):\n    '''\n    H is number of rows\n    '''\n    ret = []\n    for _ in range(H):\n        ret.append(list(map(int, read().split())))\n    return ret\n    # return [list(map(int, read().split())) for _ in range(H)] # \u5185\u5305\u8868\u8a18\u306fpypy\u3067\u306f\u9045\u3044\u305f\u3081\n\n\nMOD = 10**9 + 7\nINF = 2**31  # 2147483648 > 10**9\n# default import\nfrom collections import defaultdict, Counter, deque\nfrom operator import itemgetter\nfrom itertools import product, permutations, combinations\nfrom bisect import bisect_left, bisect_right  # , insort_left, insort_right\n\n# https://atcoder.jp/contests/abc068/tasks/arc079_b\n# \u91cd\u8981\u306a\u8003\u5bdf\n# \u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u7b49\u3057\u3044\u6570\u5217\u306b\u95a2\u3057\u3066\u306f,N\u56de\u64cd\u4f5c\u3092\u884c\u3046\u3068\u5fc5\u305a\u3059\u3079\u3066\u306e\u8981\u7d20\u304c-1\u3055\u308c\u308b\n\n# K//N\u56de \u64cd\u4f5c\u3057\u305f\u3053\u3068\u306b\u3057\u3066\n# \u306e\u3053\u308a\u306eK%N\u56de\u306f\u611a\u76f4\u306b\u64cd\u4f5c\u3057\u305f\u3053\u3068\u306b\u3059\u308b\n\nK = read_a_int()\nN = 50\n\nkn = K // N\nA = [N - 1 + kn] * N\n\nrest = K % N\n# \u611a\u76f4\u306b\u6b8b\u308a\u306e\u56de\u6570\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\nfor i in range(rest):\n    mi = min(A)\n    idx = A.index(mi)\n    for j in range(N):\n        if idx == j:\n            A[j] += N\n        else:\n            A[j] -= 1\n\nprint(N)\nprint((*A))\n", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    k = int(input())\n    S = list(range(50))\n    k, r = divmod(k, 50)\n    for i in range(50):\n        S[i] += k\n\n    target = 0\n    while r:\n        for i in range(50):\n            if i == target:\n                S[i] += 50\n            else:\n                S[i] -= 1\n        target = (target + 1) % 50\n        r -= 1\n    print((50))\n    print((*S))\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nfrom bisect import bisect_left,bisect_right \nimport sys,math,itertools,fractions,pprint\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nk = inp()\nn = 50\nx,b = k//50, k%50\na = x+(n-1)\nprint(n)\nfor i in range(n):\n    if i < b:\n        print((n+1-b+a))\n    else:\n        print((a-b))\n", "import sys\ninput = sys.stdin.buffer.readline\n\n#sys.setrecursionlimit(10**9)\n#from functools import lru_cache\n\ndef RD(): return input().rstrip().decode()\ndef II(): return int(input())\ndef FI(): return int(input())\ndef MI(): return list(map(int,input().split()))\ndef MF(): return list(map(float,input().split()))\ndef LI(): return list(map(int,input().split()))\ndef LF(): return list(map(float,input().split()))\ndef TI(): return tuple(map(int,input().split()))\n# rstrip().decode()\n\n\ndef main():\n\tk=II()\n\n\n\tq,r=divmod(k,50)\n\n\tN=[49+q+50-r+1]*r+[49+q-r]*(50-r)\n\tprint((50))\n\tprint((*N))\n\n\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "import numpy as np\nK=int(input())\n\nN=50\nnum=K//N\nr=K%N\nL=[N-1]*N\nL=np.array(L)\nL+=num\nfor i in range(N):\n    if i<r:\n        L[i]+=N-(r-1)\n    else:\n        L[i]-=r\n\nprint(N)\nprint((*L))\n\n", "k = int(input())\n\ndiv, mod = divmod(k, 50)\nA = [49+div] * 50\n\nfor i in range(mod):\n    A[i] += 50\n    for j in range(50):\n        if i == j:\n            continue\n        A[j] -= 1\n\nprint((50))\nprint((*A))\n", "import sys\nimport bisect\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\nmod = 10 ** 9 + 7\n# mod = 998244353\n\n\ndef read_values():\n    return list(map(int, input().split()))\n\n\ndef read_index():\n    return [int(x) - 1 for x in input().split()]\n\n\ndef read_list():\n    return list(read_values())\n\n\ndef read_lists(N):\n    return [read_list() for n in range(N)]\n\n\nclass V:\n    def __init__(self, f, v=None):\n        self.f = f\n        self.v = v\n\n    def __str__(self):\n        return str(self.v)\n\n    def ud(self, n):\n        if n is None:\n            return\n\n        if self.v is None:\n            self.v = n\n            return\n        self.v = self.f(self.v, n)\n\n\ndef main():\n    K = int(input())\n    N = 50\n    M = K // N\n    m = K % N\n    k = N - m\n    A = [N + M - (N - k + 1)] * k + [N + M + k] * (N - k)\n    print(N)\n    print((\" \".join(map(str, A))))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# K\u56de\u306e\u64cd\u4f5c\n# N = 50\u3068\u3059\u308b\n# 0,1,2,3,4...N - 1\u306e\u6570\u5217\u306b\u5bfe\u3057\u3066\u5de6\u304b\u3089i\u756a\u76ee\u306bN\u3092\u8db3\u3057\u3001\u305d\u308c\u4ee5\u5916\u304b\u30891\u3092\u5f15\u304f\u64cd\u4f5c\n# K // N\u56de\u306e\u64cd\u4f5c\u3092\u3059\u308b\u3068\u30011\u56de\u3042\u305f\u308a\u5168\u9805\u76ee\u306b1\u304c\u8db3\u3055\u308c\u308b\u3002\n\nimport sys\nreadline = sys.stdin.readline\n\nK = int(readline())\nN = 50\n\nA = [i for i in range(N)]\nA = list(map(lambda x:x + (K // N),A))\nrest = K % N\nfor i in range(rest):\n  A[i] += N\n  for j in range(N):\n    if i != j:\n      A[j] -= 1\n\nprint(N)\nprint(*A)", "K = int(input())\n\nans = list(range(50))[::-1]\nq, r = divmod(K, 50)\n\nfor i in range(50):\n    ans[i] += q\nfor i in range(r):\n    ans[i] += 1\n\nprint((len(ans)))\nprint((*ans))\n", "k = int(input())\n\nans = [49+k//50 for i in range(50)]\nfor i in range(k%50):\n    for j in range(50):\n        if i == j:\n            ans[j] += 50\n        else:\n            ans[j] -= 1\n\nprint((50))\nprint((*ans))\n"]