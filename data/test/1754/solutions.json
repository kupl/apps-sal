["n, m, k = map(int, input().split())\nsch = [0 for i in range(m)]\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\nfor i in range(n):\n    sch[s[i] - 1] = max(sch[s[i] - 1], p[i])\nres = 0\nfor i in c:\n    i -= 1\n    res += p[i] != sch[s[i] - 1]\nprint(res)", "n, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\ngood = list(map(int, input().split()))\nis_good = [0] * n\nfor el in good:\n\tis_good[el - 1] = 1\nsch = [[] for i in range(m + 1)]\nfor i in range(n):\n\tsch[s[i]].append((p[i], i))\ncnt = 0\nfor el in sch:\n\tel.sort(reverse=True)\n\tfor i in el[1:]:\n\t\tcnt += is_good[i[1]]\nprint(cnt)\n\n\n\n# sorted(i * i for i in range(n))\n", "n, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = set(map(int, input().split()))\npup = list(zip(p, s, list(range(1, n + 1))))\npup.sort(reverse=True)\nused = [False] * m\nres = 0\nfor i in range(n):\n    v, sc, num = pup[i]\n    if used[sc - 1] and num in c:\n        res += 1\n    used[sc - 1] = True\nprint(res)\n", "# Take your protein pills and put your helmet on...\nn, m, k = map(int, input().split())\nd = {}\narr = [int(x) for x in input().split()]\nsch = [int(x) for x in input().split()]\nfor i in range(len(arr)):\n    d[sch[i]] = max(d.get(sch[i], 0), arr[i])\nselect = [int(x) for x in input().split()]\ncnt = 0\nfor i in select:\n    if d[sch[i - 1]] != arr[i - 1]:\n        cnt += 1\nprint(cnt)", "n, m ,k = map(int, input().split())\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\nd = [[] for i in range(m)]\nfor i in range(n):\n    d[s[i] - 1].append((p[i], i + 1))\nfor i in range(m):\n    d[i].sort(reverse=True)\n    \n#for i in d:\n    #print(*i)\n#print('')\n\nans = 0\nfor i in range(m):\n    if(d[i][0][1] in c):\n        ans += 1\nprint(k - ans)", "n, m, k = list(map(int, input().split()))\npower = list(map(int, input().split()))\nsch = list(map(int, input().split()))\nchosen = list(map(int, input().split()))\nans = 0\nd = dict()\nfor i in range(n + 1):\n    d[i] = []\n    \nfor i in range(n):\n    d[sch[i]].append((power[i], i + 1))\n\nfor i in range(n + 1):\n    d[i] = sorted(d[i])\n\nfor i in range(k):\n    if (d[sch[chosen[i] - 1]][-1][1] != chosen[i]):\n        ans += 1\n\nprint(ans)", "n, m, k = map(int, input().split())\ns = list(map(int, input().split()))\np = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nmaxs = [0 for i in range(m)]\nfor i in range(n):\n    maxs[p[i] - 1] = \\\n        max(maxs[p[i] - 1],\n            s[i])\nans = 0\nfor x in c:\n    if s[x - 1] != maxs[p[x - 1] - 1]:\n        ans += 1\nprint(ans)", "n,m,k = list(map(int,input().split()))\np = list(map(int,input().split()))\ns = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\nd = {}\nfor i in s:\n    d[i] = 0\n    \nfor i in range(len(s)):\n    d[s[i]] = max(d[s[i]],p[i])\n\nk = 0\n\nfor i in c:\n    if d[s[i-1]] > p[i-1]:\n        k += 1\n\nprint(k)\n", "n, m, k = map(int, input().split())\nsila = list(map(int, input().split()))\nuch = list(map(lambda x: int(x) - 1, input().split()))\nmaxses = [0 for i in range(m)]\nfor i in range(n):\n    maxses[uch[i]] = max(maxses[uch[i]], sila[i])\nc = list(map(lambda x: int(x) - 1, input().split()))\nans = 0\nfor i in c:\n    if sila[i] < maxses[uch[i]]:\n        ans += 1\nprint(ans)", "n, m, k = list(map(int, input().split()))\ns = list(map(int, input().split()))\nsh = list(map(int, input().split()))\nizb = list(map(int, input().split()))\nssh = {}\nfor i in range(n):\n    if sh[i] not in ssh:\n        ssh[sh[i]] = s[i]\n    else:\n        ssh[sh[i]] = max(ssh[sh[i]], s[i])\nu = 0\nresult = 0\nizb = sorted(izb)\nfor i in range(n):\n    if u == len(izb):\n        break\n    if i + 1 == izb[u]:\n        if ssh[sh[i]] > s[i]:\n            result += 1\n        u += 1\nprint(result)\n", "n, m, k=map(int, input().split())\na=list(map(int, input().split()))\nb=list(map(int, input().split()))\nres=0\nfor i in list(map(int, input().split())):\n    m=0\n    for j in range(n):\n        if b[i-1]==b[j]:\n            m=max(m, a[j])\n    if m!=a[i-1]:\n        res+=1\nprint (res)", "n, m, k = map(int, input().split())\nstudents = list(map(int, input().split()))\nschools = list(map(int, input().split()))\nv = list(map(int, input().split()))\nschool_stud = [[] for i in range(max(schools) + 1)]\nfor i in range(len(schools)):\n    school_stud[schools[i]].append((students[i], i))\nfor i in range(len(school_stud)):\n    school_stud[i].sort()\ncount = 0\nfor i in range(len(v)):\n    if school_stud[schools[v[i] - 1]][-1][1] != v[i] - 1:\n        count += 1\nprint(count)", "n, m, k = list(map(int,input().split()))\np = list(map(int,input().split()))\ns = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\ndct = {}\nfor i in range(n):\n    if s[i] in dct:\n        dct[s[i]] = max(dct[s[i]], p[i])\n    else:\n        dct[s[i]] = p[i]\n\n\ndata_to_fuck_you = 0\nfor i in range(k):\n    power = p[c[i] - 1]\n    school = s[c[i] - 1]\n\n    if power < dct[school]:\n        data_to_fuck_you += 1\n\nprint(data_to_fuck_you)\n\n", "n, m, k = map(int, input().split())\npeps = list(map(int, input().split()))\nschs = list(map(int, input().split()))\nwant = list(map(int, input().split()))\nls = [[] for i in range(m)]\nfor i in range(n):\n    ls[schs[i] - 1].append([peps[i], i])\nans = k\nfor sch in ls:\n    if (max(sch)[1] + 1) in want:\n        ans -= 1\nprint(ans)", "n, m, k = [int(i) for i in input().split()]\na = [[0, 0] for i in range(m+1)]\np = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\nf = [int(i) for i in input().split()]\nfor i in range(n):\n    num = i + 1\n    sk = s[i]\n    po = p[i]\n    if(po > a[sk][1]):\n        a[sk][0] = num\n        a[sk][1] = po\nl = set()\nfor i in range(1, m+1):\n    l.add(a[i][0])\nf = set(f)\nf -= l\nprint(len(f))", "n, m, k = map(int, input().split())\nbest = [(0, 0) for i in range(m)]\nw = list(map(int, input().split()))\ns = list(map(int, input().split()))\nst = set(list(map(int, input().split())))\nfor i in range(n):\n    best[s[i] - 1] = max((w[i], i + 1), best[s[i] - 1])\nfor e in best:\n    k -= (e[1] in st)\nprint(k)", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\nlst = []\nans = 0\nfor i in range(m):\n    lst.append([])\nfor i in range(n):\n    lst[s[i] - 1].append((p[i], i))\nfor i in range(m):\n    lst[i].sort()\n    lst[i] = lst[i][-1::-1]\n\n    cnt = 0\n    for j in range(1, len(lst[i])):\n        if lst[i][j][1] + 1 in c:\n            ans += 1\nprint(ans)", "n, m, k = list(map(int, input().split()))\nps = list(map(int, input().split()))\n\nschs = [list() for _ in range(m)]\nss = list(map(int, input().split()))\nfor i in range(n):\n    schs[ss[i] - 1].append((ps[i], i))\nfor j in range(m):\n    schs[j].sort()\n\nn = 0\ncs = list(map(int, input().split()))\nfor c in cs:\n    c -= 1\n    if schs[ss[c] - 1][-1][1] != c:\n        n += 1\n\nprint(n)\n", "kol = 0\nn, m, k = map(int,input().split())\np = list(map(int,input().split()))\ns = list(map(int,input().split()))\nfor i in range(n):\n    s[i] -= 1\nc = list(map(int,input().split()))\nfor i in range(k):\n    c[i] -= 1\nsc = [[] for i in range(m)]\nfor i in range(n):\n    sc[s[i]].append([p[i], i])\nfor i in range(m):\n    sc[i] = sorted(sc[i])\nfor i in range(k):\n    if sc[s[c[i]]][-1][0] != p[c[i]]:\n        kol += 1\nprint(kol)", "n, m, k = list(map(int, input().split()))\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\nsc = [-1 for i in range(m)]\nfor i in range(n):\n\tif sc[s[i]-1] == -1 or p[sc[s[i]-1]] <= p[i]:\n\t\tsc[s[i]-1] = i\nans = 0\nfor i in range(k):\n\tans += 0 if c[i] - 1 in sc else 1\n\nprint(ans)", "n, m, k = list(map(int, input().split()))\n\np = list(map(int, input().split()))\ns = list([int(x) - 1 for x in input().split()])\nc = list([int(x) - 1 for x in input().split()])\n\ncc = [ None ] * m\n\nfor x in range(0, m):\n\twho = [ y for y in range(0, n) if s[y] == x ]\n#\tprint(x, who)\n\twho.sort(key=lambda y: p[y])\n\twho.reverse()\n\tcool = False\n\tif len(who) >= 2 and p[who[0]] == p[who[1]]:\n\t\tcool = True\n\tif len(who) == 0:\n\t\twho = [-1]\n\tcc[x] = (cool, who[0])\n\n#print(cc)\n\na = 0\nfor x in c:\n\tif len([ y for y in cc if not y[0] and y[1] == x]) == 0:\n\t\ta += 1\n\nprint(a)\n\t\n\n", "n, m, k = map(int, input().split())\np = list(map(int, input().split()))\ns = list(map(int, input().split()))\nc = list(map(int, input().split()))\nse = list(set(s))\nslov = dict()\nfor i in range(len(se)):\n    slov[se[i]] = []\nfor i in range(len(s)):\n    slov[s[i]].append([p[i], i + 1])\nfor i in se:\n    slov[i].sort(reverse=True)\nans = [True] * (n + 1)\nfor i in se:\n    ans[slov[i][0][1]] = False\nans1 = 0\nfor i in c:\n    if ans[i]:\n        ans1 += 1\nprint(ans1)", "n, m, k = map(int, input().split())\nstrong = list(map(int, input().split()))\nsch = list(map(int, input().split()))\nbest = list(map(int, input().split()))\narr = [[] for i in range(m + 1)]\nfor i in range(n):\n    arr[sch[i]].append((i, strong[i]))\n\nS = set()\nfor el in best:\n    S.add(el)\nM = set()\n#print(arr)\nfor i in range(len(arr)):\n    max_ = -100000\n    pup = -1\n    for j in range(len(arr[i])):\n        if arr[i][j][1] > max_:\n            max_ = arr[i][j][1]\n            pup = arr[i][j][0]\n    M.add(pup + 1)\n#print(M)\n#print(S)\nfor el in M:\n    if el in S:\n        S.remove(el)\nprint(len(S))        ", "n, m, k = list(map(int,input().split()))\np = list(map(int,input().split()))\ns = list(map(int,input().split()))\nc = list(map(int,input().split()))\nsc = [0]*m\npt = [0]*m\nadd = 0\nfor i in range(m):\n    ts = i + 1\n    while ts in s:\n        x = s.index(ts)\n        if p[x] > sc[i]:\n            sc[i] = p[x]\n            pt[i] = x + 1\n        s[x] = m + 1\nfor t in c:\n    if t not in pt:\n        add += 1\nprint(add)\n"]