["v1, v2 = list(map(int, input().split()))\nt, d = list(map(int, input().split()))\nvm = [0] * t\n\nv = v1\nfor i in range(t):\n    vm[i] = v\n    v += d\n\nv = v2\nfor i in range(t - 1, -1, -1):\n    vm[i] = min(v, vm[i])\n    v += d\n\nprint(sum(vm))\n", "ninf = -500000\n\nu, v = list(map(int, input().split(' ')))\nt, d = list(map(int, input().split(' ')))\n\nl = [[ninf] * 1201 for _ in range(2)]\n\nl[0][u] = u\n\nfor i in range(1, t):\n    for j in range(1201):\n        l[i & 1][j] = max(l[~i & 1][max(0, j - d) : min(1200, j + d) + 1]) + j\n\nprint(l[(t - 1) & 1][v])\n", "i,f=map(int,input().split())\nt,d=map(int,input().split())\n\na=[]\nb=[]\n\na=[i+j*d for j in range(t)]\nb=[f+j*d for j in range(t)]\nb.reverse()\nfor j in range(t):\n\tif a[j]>=b[j]:\n\t\tprint(sum(a[:j])+sum(b[j:]))\n\t\tquit()", "def solve(v1, v2, t, d):\n    cache = {}\n\n    def calc_max(cur_v, remain_t):\n        if remain_t == 0:\n            return 0\n\n        cur_dist = float('-inf')\n        if remain_t == 1 and cur_v != v2:\n            return cur_dist\n\n        cache_key = (cur_v, remain_t)\n        if cache_key in cache:\n            return cache[cache_key]\n\n        max_v = min(cur_v + d, v2 + d*remain_t)\n        min_v = max(0, max(cur_v - d, v2 - d*remain_t))\n        for v in range(max_v, min_v - 1, -1):\n            cur_dist = max(cur_dist, calc_max(v, remain_t - 1))\n\n        cache[cache_key] = cur_v + cur_dist\n        return cur_v + cur_dist\n\n    return calc_max(v1, t)\n\n\ndef main():\n    v1, v2 = list(map(int, input().strip().split()))\n    t, d = list(map(int, input().strip().split()))\n    print(solve(v1, v2, t, d))\n\nmain()\n", "a, b = list(map(int, input().split(' ')))\nt, d = list(map(int, input().split(' ')))\nif d == 0:\n    print(a*t)\nelse:\n    dist=0\n    t-=1\n    dist+=a\n    if t == 0:\n        print(dist)\n        quit()\n\n    \n    while (a-b)+d<=(t-1)*d:\n        a += d\n        dist += a\n        t -= 1\n    if t == 0:\n        print(dist)\n        quit()\n        \n    extra = -1*(a-b-d*(t-1))\n    a += extra\n    dist += a\n    t -= 1\n\n\n    while t > 0:\n        a -= d\n        t -= 1\n        dist += a\n    print(dist)\n", "import itertools\n\n\nv1, v2 = list(map(int, str.split(input())))\nt, d = list(map(int, str.split(input())))\n\ncv = v1\ns = v1 + v2\nsteps = list(itertools.accumulate((v1,) + tuple(range(2, t)), lambda x, _: x + d)) + [v2]\nfor i in range(t - 1, -1, -1):\n\n    if steps[i - 1] - steps[i] > d:\n\n        steps[i - 1] = steps[i] + d\n\n    else:\n\n        break\n\nprint(sum(steps))\n", "#!/usr/bin/env python\n\nv1, v2 = list(map(int, input().split(' ')))\nt, d   = list(map(int, input().split(' ')))\nt -= 1\n\ntotal = v1\n\nwhile (v1 + d) - ((t-1) * d) <= v2 and t:\n    v1 += d\n    total += v1\n    t -= 1\n\ndiff = v2 + (t-1) * d - v1\nif t:\n    v1 += diff\n    t -= 1\n    total += v1\n\nwhile t:\n    t -= 1\n    v1 -= d\n    total += v1\n\nprint(total)\n\nassert(v1 == v2)\n", "v1, v2 = map(int, input().split())\nt, d = map(int, input().split())\na = [0]*t\na[0] = v1\na[t-1] = v2\nfor i in range(1, t-1):\n    a[i] = a[i-1]+d\n    \nk = t-1\nwhile abs(a[k]-a[k-1]) > d:\n    if a[k]-a[k-1] > 0:\n        a[k-1] = a[k]-d\n    else:\n        a[k-1] = a[k]+d\n    k -= 1\n\nprint(sum(a))", "v1, v2 = list(map(int, input().split()))\nt, d = list(map(int, input().split()))\n\ndst = v1\n\nfor i in range(2, t + 1):\n    for x in range(d):\n        if abs(v1 + 1 - v2) <= d * (t - i):\n            v1 += 1\n        elif abs(v1 - v2) > d * (t - i):\n            if v1 > v2:\n                v1 -= 1\n            else:\n                v1 += 1\n    dst += v1\n\nprint(dst)\n", "u1, u2=map(int, input().split())\nt, d=map(int,input().split())\nif u1 > u2:\n    u1,u2=u2,u1 \ns = [u1 for i in range(t-1)]\ns.append(u2)\nl=1\nr=t-2\nfor i in range(t-2, 0, -1):\n    s[i]=s[i+1]+d\ni =1\nwhile s[i] -s[i-1]>d:\n    s[i]=s[i-1]+d\n    i+=1\nprint(sum(s))", "v1, v2 = [int(next_token) for next_token in input().split()]\nt, d = [int(next_token) for next_token in input().split()]\nans = v1 + v2\nv1, v2 = min(v1, v2), max(v1, v2)\nt -= 2\nwhile t > 0:\n    if v2 - v1 > d:\n        v1 += d\n        ans += v1\n        t -= 1\n        continue\n    v1 += d\n    v1, v2 = v2, v1\n    ans += v2\n    t -= 1\nprint(ans)", "w1, w2 = list(map(int, input().split()))\nt, d = list(map(int, input().split()))\na = [0] * t\nif w1 > w2:\n    w1, w2 = w2, w1\na[t - 1] = w2\na[0] = w1\nr = w1 + w2\nif t % 2 == 1:\n    b = t // 2\nelse:\n    b = t // 2\nfor i in range(t - 2, b - 1, -1):\n    a[i] = a[i + 1] + d\nfor i in range(1, t - 1):\n    if a[i] == 0:\n        a[i] = a[i - 1] + d\n        r += a[i]\n    elif a[i] - a[i - 1] > d:\n        a[i] = a[i - 1] + d\n        r += a[i]\n    else:\n        r += a[i]\n        \nprint(r)\n", "def inum2(num):\n    if num > int(num):\n        return int(num) + 1\n    else:\n        return int(num)\nv1, v2 = list(map(int,input().split()))\nt, d = list(map(int,input().split()))\nnowv = v1\ns = 0\ni = 1\nif d > 0:\n    while t + 1 > i: \n        s += nowv\n        nowv = min(nowv + d,v2+(t-i-1)*d)\n        i += 1\n    print(s)\nelse:\n    print(v1 * t)\n", "__author__ = 'clumpytuna'\nv1, v2 = map(int, input().split(\" \"))\nt, d = map(int, input().split(\" \"))\nsum = v1\nz = d\nfor i in range(2, t):\n    if ((v1+d) - (t-i)*d) <= v2:\n        v1 += d\n        sum += v1\n        #print(v1)\n    else:\n        while ((v1+z) - (t-i)*d) > v2:\n            z -= 1\n        v1 = v1 + z\n        sum += v1\n        #//print(v1, 'df')\n        z  = d\nprint(sum+v2)", "def check(k, v, v2, t, d):\n    if (t - k - 1) * d >= abs(v2 - v):\n        return 1\n    else:\n        return 0\nv1, v2 = map(int, input().split())\nt, d = map(int, input().split())\nv1, v2 = min(v1, v2), max(v1, v2)\nk, v, s = 0, v1, v1\nif d == 0:\n    print (v1 * t)\nelse:\n    while check(k, v, v2, t, d) == 1:\n        k += 1\n        v += d\n        s += v\n    s -= v\n    k -= 1\n    v = (t - k - 2) * d + v2\n    while v > v2:\n        s += v\n        v -= d\n    if v == v2:\n        s += v\n    if v != v2:\n        v += d\n        s -= v\n        s += v2\n    print (s)", "v = input().split()\np = input().split()\n\nv1 = int(v[0])\n\nv2 = int(v[1])\n\nT = int(p[0])\nd = int(p[1])\n\nx = abs(v1 - v2)\nt = T-2\n\nsum = v1 + v2\n\nif v1 <= v2:\n\n    def check(v1, v2, d, t):\n        a = []\n        z = d\n        for i in range(v1):\n            \n            if ((v1+z)-v2) > (d*t+d):\n                z -= 1\n\n            else:\n                a.append(z)\n\n        return(int(a[0]))\n                \n\n\n    for i in range(t):\n\n        if ((v1+d)- v2) <= (d*(t-(i+1))+d):\n            sum += (v1 + d)\n\n            v1 = v1+d\n        else:\n            sum += (v1 + check(v1, v2, d , t-(i+1)))\n\nelse:\n    v1, v2 = v2, v1\n    \n    def check(v1, v2, d, t):\n        a = []\n        z = d\n        for i in range(v1):\n            \n            if ((v1+z)-v2) > (d*t+d):\n                z -= 1\n\n            else:\n                a.append(z)\n\n        return(int(a[0]))\n            \n\n\n    for i in range(t):\n\n        if ((v1+d)- v2) <= (d*(t-(i+1))+d):\n            sum += (v1 + d)\n\n            v1 = v1+d\n        else:\n            sum += (v1 + check(v1, v2, d , t-(i+1)))    \n\n    \nprint(sum)\n", "import sys\n\ncurr_speed, v2 = [int(s) for s in sys.stdin.readline().split()]\nt, d = [int(s) for s in sys.stdin.readline().split()]\n\npath = [curr_speed]\nsec_left = t - 2\n\nwhile sec_left:\n    max_allowed = v2 + d * sec_left\n    max_possible = curr_speed + d\n    curr_speed = min(max_allowed, max_possible)\n    path.append(curr_speed)\n    sec_left -= 1\n\npath.append(v2)\nprint(sum(path))\n", "v1, v2 = list(map(int, input().split()))\nt, d =  list(map(int, input().split()))\nprint(sum(min(v1 + d * i, v2 + d * (t - i - 1)) for i in range(t)))\n", "#sry...\n\nv1, v2 = list(map(int, input().split()))\nt, d = list(map(int, input().split()))\nL1 = [0]*t\nL2 = [0]*t\nL1[0] = v1\nfor i in range(1, t):\n    L1[i] = L1[i-1]+d\nj = t-2\nL2[j+1] = v2\nwhile j >= 0:\n    L2[j] = L2[j+1]+d\n    j -= 1\nans = 0\nfor i in range(0, t):\n    ans += min(L1[i], L2[i])\nprint (ans)\n", "[v1, v2] = [int(x) for x in input().split()]\n\n[t, d] = [int(x) for x in input().split()]\n\nleft = [v1] * t\nfor i in range(1, t):\n    left[i] = left[i-1] + d\n\nright = [v2] * t\nfor i in range(t-2, -1, -1):\n    right[i] = right[i+1] + d\n\nans = 0\n\nfor i in range(t):\n    ans += min(left[i], right[i])\n\nprint(ans)\n\n\n\n\n\n\n\n", "v1, v2 = list(map(int, input().split(' ')))\nt, d = list(map(int, input().split(' ')))\n\nl1, l2 = [], []\nfor l, v in zip((l1, l2), (v1, v2)):\n    for i in range(t):\n        l.append(v + d*i)\n\nl2 = list(reversed(l2))\n#print(l1, l2)\n\nsplit = 0\nfor i in range(t):\n    if l2[i] <= l1[i]:\n        split = i\n        break\n\nl = l1[:split] + l2[split:]\n#print(l)\nprint(sum(l))\n\n", "v1, v2 = [int(c) for c in input().split()]\nt, d = [int(c) for c in input().split()]\n\n\ndist = v1   # distance after the first interval [0, 1)\ni = 1       # interval\n\n# check the intervals [i, i+1)\nwhile(i <= t-2):\n    dist += min(v1 + i*d, (v2 + (t-1)*d) - i*d)\n    i += 1\n\ndist += v2  # last interval [t-1, t)\nprint(dist)", "v1, v2 = list(map(int, input().split()))\nt, d = list(map(int, input().split()))\n\nif v1 > v2:\n    v1, v2 = v2, v1\n\nif d == 0:\n    print(t * v1)\nelse:\n    a = [i for i in range(v1, v1 + t * d, d)]\n    b = [i for i in range(v2, v2 + t * d, d)]\n    b.reverse()\n    i = 0\n    answer = 0\n    while i < t - 1:\n        if abs(a[i] - b[i + 1]) <= d:\n            if sum(a[:i + 1]) + sum(b[i + 1:]) > answer:\n                answer = sum(a[:i + 1]) + sum(b[i + 1:])\n        i += 1\n    print(answer)\n", "V1,V2=list(map(int,input().split()))\nT,D=list(map(int,input().split()))\nArr=[0]*101\nArr2=[0]*101\nfor I in range(1,T+1):\n    Arr[I]=V1\n    V1+=D\n    Arr2[T+1-I]=V2\n    V2+=D\nAns=K=0\nfor I in range(1,T):\n    if Arr2[I+1]-Arr[I]>D:\n        K=I\n        Ans+=Arr[I]\nAns+=Arr[K+1]\nK+=2\nfor J in range(K,T+1):\n    Ans+=Arr2[J]\nprint(Ans)\n"]