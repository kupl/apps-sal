["s = input()\nli = s.count(\"L\")\nri = s.count(\"R\")\nui = s.count(\"U\")\ndi = s.count(\"D\")\nn = len(s)\nif n % 2 != 0:\n    print(-1)\nelse:\n    print((abs(li-ri)+abs(di-ui))//2)\n", "# You lost the game.\ns = str(input())\nn = len(s)\nr = 0\nif n % 2:\n    print(-1)\nelse:\n    U = D = L = R = 0\n    for i in range(n):\n        if s[i] == \"L\":\n            L += 1\n        elif s[i] == \"R\":\n            R += 1\n        elif s[i] == \"U\":\n            U += 1\n        else:\n            D += 1\n    if (U + D) % 2:\n        r = 1\n        if U > D:\n            D += 1\n            if R > L:\n                R -= 1\n            else:\n                L -= 1\n        else:\n            U += 1\n            if R > L:\n                R -= 1\n            else:\n                L -= 1\n    print(r+abs(U-D)//2+abs(R-L)//2)\n    \n\n", "r,l,u,d = 0,0,0,0\nfor c in input():\n    if(c=='R'):\n        r += 1\n    elif(c=='L'):\n        l += 1\n    elif(c=='U'):\n        u += 1\n    elif(c=='D'):\n        d += 1\nc = abs(r-l)+abs(u-d)\nif(c%2==0):\n    print(c//2)\nelse:\n    print(-1)", "s = input()\n\nif len(s) % 2 == 1:\n    print(-1)\n    return\n\nhorizontal = 0\nvertical = 0\n\nfor k in s:\n    if k == 'L':\n        horizontal += 1\n    elif k == 'R':\n        horizontal -= 1\n    elif k == 'U':\n        vertical += 1\n    elif k == 'D':\n        vertical -= 1\n\nhorizontal = abs(horizontal)\nvertical = abs(vertical)\n\nprint((horizontal+vertical)//2)", "import sys, math\na = input()\nn = len(a)\nif n % 2 == 1:\n    print(-1)\nelse:\n    U = a.count('U')\n    D = a.count('D')\n    L = a.count('L')\n    R = a.count('R')\n    print(int(math.fabs(U - D) + math.fabs(L - R)) // 2)", "'''\ndef main():\n    from sys import stdin,stdout\ndef __starting_point():\n    main()\n'''\n#10/9/22016-370.2\n#2\ndef main():\n    from sys import stdin,stdout\n    s=stdin.readline().strip().lower()\n    if len(s) & 1:\n        stdout.write('-1')\n    else:\n        x=0\n        y=0\n        for i in s:\n            if i=='l':\n                x-=1\n            elif i=='r':\n                x+=1\n            elif i=='u':\n                y+=1\n            elif i=='d':\n                y-=1\n        stdout.write(str((abs(x)+abs(y))//2))\n            \ndef __starting_point():\n    main()\n\n__starting_point()", "s = input()\nif len(s) % 2:\n    print(-1)\n    return\nx = 0\ny = 0\nfor i in s:\n    if i == 'L':\n        x -= 1\n    if i == 'R':\n        x += 1\n    if i == 'U':\n        y += 1\n    if i == 'D':\n        y -= 1\nx = abs(x)\ny = abs(y)\nprint(x // 2 + y // 2 + max(x % 2, y % 2))", "a = input()\nL, R, U, D = 0, 0, 0, 0\nfor i in a:\n    if i == 'L':\n        L += 1\n    elif i == 'R':\n        R += 1\n    elif i == 'U':\n        U += 1\n    elif i == 'D':\n        D += 1\nUD = abs(U - D)\nLR = abs(L - R)\nif len(a) % 2 != 0:\n    print(\"-1\")\nelif UD == 0 and LR == 0:\n    print('0')\nelse:\n    x = UD + LR\n    if x % 2 != 0:\n        print(\"-1\")\n    else:\n        print(x // 2)", "commands = input()\n\nnl = commands.count('L')\nnr = commands.count('R')\nnu = commands.count('U')\nnd = commands.count('D')\n\nif len(commands) % 2 != 0:\n    print(-1)\nelse:\n    dh = abs(nl - nr)\n    dv = abs(nu - nd)\n    if dh + dv == 0:\n        print(0)\n    elif dh % 2 == 0:\n        print(dh // 2 + dv // 2)\n    else:\n        if dh < dv:\n            dh, dv = dv, dh\n        print((dh - 1) // 2 + (dv - 1) // 2 + 1)\n", "s = input()\nans = 0\n\nif len(s) % 2 != 0:\n    print(-1)\nelse:\n    u = s.count('U')\n    d = s.count('D')\n    r = s.count('R')\n    l = s.count('L')\n    if abs(u - d) % 2 == 0 and abs(r-l) % 2 == 0:\n        ans = abs(u - d) // 2 + abs(r-l) // 2\n    else:\n        ans = abs(u - d) // 2 + abs(r-l) // 2 + 1\n    print(ans)", "s = input()\nx = 0\ny = 0\nfor i in range(len(s)):\n    if (s[i] == 'R'):\n        x += 1\n    if (s[i] == 'L'):\n        x -= 1\n    if (s[i] == 'U'):\n        y += 1\n    if (s[i] == 'D'):\n        y -= 1\nif (abs(x) % 2 == 1 and abs(y) % 2 == 1):\n    print(abs(x) // 2 + abs(y) // 2 + 1)\nelif (abs(x) % 2 == 1):\n    print(-1)\nelif abs(y) % 2 == 1:\n    print(-1)\nelse:\n    print(abs(x) // 2 + abs(y) // 2)\n", "s=input()\nl,r,u,d=s.count('l'),s.count('r'),s.count('u'),s.count('d'),\nx,y=s.count('L')-s.count('R'),s.count('U')-s.count('D'),\nr=abs(x)//2+abs(y)//2\nif abs(x)%2==abs(y)%2==0:\n    print(r)\nelif abs(x)%2==abs(y)%2==1:\n    print(r+1)\nelse:\n    print('-1')", "R, L, U, D = 0, 0, 0, 0\n\nfor c in input():\n    if c == 'R':\n        R += 1\n    elif c == 'L':\n        L += 1\n    elif c == 'U':\n        U += 1\n    elif c == 'D':\n        D += 1\n\ndiff_RL = abs(R-L)\ndiff_UD = abs(U-D)\n\nif (diff_RL % 2 == 0 and diff_UD % 2 == 0) or (diff_RL % 2 == 1 and diff_UD % 2 == 1):\n    print((diff_RL+diff_UD) // 2)\nelse:\n    print(-1)", "s = input()\nif len(s)%2==1: print('-1')\nelse:\n  L = s.count('L')\n  R = s.count('R')\n  U = s.count('U')\n  D = s.count('D')\n  print(int(abs(L-R)/2+abs(U-D)/2))", "s = input()\n\nans = -1\n\nif len(s) % 2 == 0:\n\tUD = abs(s.count(\"U\")-s.count(\"D\"))\n\tLR = abs(s.count(\"L\")-s.count(\"R\"))\n\t\n\tans = (UD+LR)//2\n\nprint(ans)", "s = input()\nn = len(s)\nans = 0\nif n % 2 == 1:\n    print(\"-1\")\nelse:\n    p = 0\n    q = 0\n    for i in range(0, n):\n        if s[i] == \"R\":\n            p += 1\n        elif s[i] == \"U\":\n            q += 1\n        elif s[i] == \"L\":\n            p -= 1\n        elif s[i] == \"D\":\n            q -= 1\n    if p % 2 == 0:\n        ans = abs(p // 2) + abs(q // 2)\n    else:\n        ans1 = min(abs(p - 1), abs(p + 1))\n        ans2 = min(abs(q - 1), abs(q + 1))\n        ans = (ans1 + ans2) // 2 + 1\n    print(ans)\n", "3\n\ns = input()\n\nif len(s) % 2 != 0:\n    print(-1)\nelse:\n    dy = s.count('U') - s.count('D')\n    dx = s.count('R') - s.count('L')\n    print((abs(dx) + abs(dy)) // 2)\n", "s = input()\nx, y = 0, 0\nfor ch in s:\n\tif ch == 'L':\n\t\tx = x - 1\n\telif ch == 'R':\n\t\tx = x + 1\n\telif ch == 'U':\n\t\ty = y - 1\n\telif ch == 'D':\n\t\ty = y + 1\nx = abs(x)\ny = abs(y)\nif x % 2 == y % 2:\n\tsteps = x // 2 + y // 2\n\tif x % 2 == 1:\n\t\tsteps = steps + 1\nelse:\n\tsteps = -1\t\nprint(steps)\n", "import collections\n\ndef main():\n    s = input()\n\n    if len(s) % 2 == 1:\n        print(-1)\n        return\n\n    ct = collections.Counter(s)\n    print( (abs(ct['L'] - ct['R']) + abs(ct['U'] - ct['D']))//2 )\n\nmain()\n", "line = input()\nif len(line) % 2:\n    print(-1)\nelse:\n    x = abs(line.count('U')-line.count('D'))\n    y = abs(line.count('R')-line.count('L'))\n    print((x + y) // 2)", "import math\n\ns = input()\nans = 0\nu = 0\nd = 0\nl = 0\nr = 0\nif len(s)%2!=0:\n    print('-1')\nelse:\n    for i in s:\n        # print(i)\n        if i == 'D':\n            d += 1\n        elif i == 'U':\n            u += 1\n        elif i == 'L':\n            l += 1\n        elif i == 'R':\n            r += 1\n    # print(u)\n    # print(d)\n    # print(r)\n    # print(l)\n    # print(abs(r-l))\n    # print(abs(u-d))\n    print(int((abs(r-l)+abs(u-d))/2))", "s=list(input())\nd=s.count('D')\nl=s.count('L')\nr=s.count('R')\nu=s.count('U')\nif(len(s)%2!=0):\n    print('-1')\nelse:\n    print(int(abs(l-r)/2+abs(u-d)/2))\n", "s = input()\nl = [0]*2\nfor el in s:\n    if el == 'L':\n        l[0]+=1\n    if el == 'R':\n        l[0]-=1\n    if el == 'U':\n        l[1]+=1  \n    if el == 'D':\n        l[1]-=1       \nl[0] = abs(l[0])\nl[1] = abs(l[1])\nif sum(l)%2!=0:\n    print(-1)\nelse:\n    print(sum(l)//2)\n        \n", "s = input()\nx = 0\ny = 0\nfor i in s:\n    if i == 'U':\n        y+= 1\n    elif i == 'D':\n        y-= 1\n    elif i == 'R':\n        x+= 1\n    else:\n        x-= 1\nif (abs(x)+abs(y))%2 == 1:\n    print(-1)\nelse:\n    print(int((abs(x)+abs(y))/2))"]