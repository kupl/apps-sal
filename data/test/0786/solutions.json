["\"\"\"\nCodeforces Good Bye 2016 Contest Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.5.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    n, = read()\n    mn, mx = -10**18, 10**18\n    for _ in range(n):\n        c, d = read()\n        if d == 1:\n            mn = max(mn, 1900)\n        elif d == 2:\n            mx = min(mx, 1899)\n        mn += c\n        mx += c\n    if mn > mx:\n        print(\"Impossible\")\n        return\n    if mx > 10**17:\n        print(\"Infinity\")\n        return\n    print(mx)\n\n#################################################### HELPERS\n\ndef read(callback=int):\n    return list(map(callback, input().strip().split()))\n\ndef write(value, end=\"\\n\"):\n    if value is None: return\n    try:\n        value = \" \".join(map(str, value))\n    except:\n        pass\n    print(value, end=end)\n\nwrite(main())\n", "n=int(input())\nmx=10**9\nmn=-mx\np=0\nfor i in range(n):\n    c,d=[int(i) for i in input().split()]\n    if d==1:\n        mn=max(mn,1900-p)\n    else:\n        mx=min(mx,1899-p)\n    p+=c\nif mx==10**9:\n    print('Infinity')\nelif mx>=mn:\n    print(mx+p)\nelse:\n    print('Impossible')\n", "#!/usr/bin/env python3\n\ndef main():\n    try:\n        while True:\n            n = int(input())\n            c = [0] * n\n            d = [0] * n\n            has_2 = False\n            for i in range(n):\n                c[i], d[i] = list(map(int, input().split()))\n                if d[i] == 2:\n                    has_2 = True\n\n            if not has_2:\n                print(\"Infinity\")\n                continue\n\n            minr = -10**9\n            maxr = 10**9\n            for i in range(n):\n                if d[i] == 1:\n                    minr = max(minr, 1900)\n                else:\n                    maxr = min(maxr, 1899)\n                if minr > maxr:\n                    print(\"Impossible\")\n                    break\n                minr += c[i]\n                maxr += c[i]\n            else:\n                print(maxr)\n\n    except EOFError:\n        pass\n\nmain()\n", "num_contests = int(input())\n\nrating = 0\n\nupper_bound = None\nlower_bound = None\n\nfor contest_num in range(num_contests):\n    ci, di = list(map(int, input().split()))\n\n    if di == 1:\n        if upper_bound is None or rating < upper_bound:\n            upper_bound = rating\n    else:\n        assert di == 2\n        if lower_bound is None or rating > lower_bound:\n            lower_bound = rating\n\n    rating += ci\n\nif lower_bound is None:\n    print(\"Infinity\")\nelif upper_bound is not None and lower_bound >= upper_bound:\n    print(\"Impossible\")\nelse:\n    print(rating - (lower_bound + 1) + 1900)\n", "import sys\nimport math\n\ndef solve():\n    n = int(input())\n    l, r = -float('inf'), float('inf')\n    for line in sys.stdin:\n        c, d = list(map(int, line.split()))\n        if d == 1:\n            l = max(1900, l)\n        else:\n            r = min(1899, r)\n        l += c\n        r += c\n\n    if r < l:\n        return None\n    else:\n        return r\n\nres = solve()\nif res is None:\n    print('Impossible')\nelif math.isinf(res):\n    print('Infinity')\nelse:\n    print(res)\n", "n = int(input())\nINF = 2 ** 60\nlo, hi = -INF, INF\nfor i in range(n):\n    x, y = (int(_) for _ in input().split())\n    if y == 2:\n        hi = min(hi, 1899)\n    else:\n        lo = max(lo, 1900)\n    hi += x\n    lo += x\nif lo > hi:\n    print('Impossible')\nelif hi > 2 ** 31:\n    print('Infinity')\nelse:\n    print(hi)\n", "MAX = 999999999\ndef do():\n    n = int(input())\n    mx = MAX\n    mn = -MAX\n    change, thisDiv = list(map(int,input().split()))\n    ratingChange = [0, change]\n    divChange = [0, thisDiv]\n    for i in range(n-1):\n        change, thisDiv = list(map(int,input().split()))\n        ratingChange.append(ratingChange[-1]+change)\n        divChange.append(thisDiv)\n    for i in range(n):\n        if divChange[i+1] == 1:\n            mn = max(1900 - ratingChange[i], mn)\n        else:\n            mx = min(1899 - ratingChange[i], mx)\n        #print(mn, mx)\n    if mn > mx: return \"Impossible\"\n    else:\n        if mx == MAX: return \"Infinity\"\n        else: return str(mx + ratingChange[-1])\n\nprint(do())\n", "n = int(input())\nminr = -1000000000000000000\nmaxr = 1000000000000000000\nfor i in range(n):\n    c, div = [int(x) for x in input().split()]\n    if div == 1:\n        if minr < 1900:\n            minr = 1900\n    else:\n        if maxr >= 1900:\n            maxr = 1899\n    minr += c\n    maxr += c\n\nif minr > maxr:\n    print(\"Impossible\")\nelif maxr > 10000000000:\n    print(\"Infinity\")\nelse:\n    print(maxr)\n", "n = int(input())\nA = [0] * n\nper = 0\nans1 = float('infinity')\nans2 = -float('infinity')\nfor j in range(n):\n    per1,per2 = map(int,input().split())\n    if per2 == 1:\n        if ans1 < 1900:\n            per = 1\n            break\n        else:\n            ans2 = max(ans2,1900)\n            ans1 += per1\n            ans2 += per1\n    else:\n        if ans2 >= 1900:\n            per =1 \n            break\n        else:\n            ans1 = min(ans1,1899)\n            ans1 += per1\n            ans2 += per1\n   \n    if ans1 < ans2:\n        per = 1\n        break\n    \nif per == 0:\n    if ans1 == float('infinity'):\n        print('Infinity')\n    else:\n        \n        print(ans1)\nelse:\n    print('Impossible')", "from math import inf\n\ndef main():\n    n = int(input())\n    l = -inf\n    r = inf\n    for i in range(n):\n        c, d = list(map(int, input().split()))\n        if d == 1:\n            l = max(1900, l)\n        else:\n            r = min(1899, r)\n        if l > r:\n            print('Impossible')\n            return\n        l += c\n        r += c\n    if r == inf:\n        print('Infinity')\n    else:\n        print(r)\n\nmain()\n", "q=int(input())\nq-=1\na,s=list(map(int,input().split()))\nif s==1:\n    z=1900\n    x=9000000000\nelse:\n    z=-9000000000\n    x=1899\nz+=a\nx+=a\nfor j in range(0,q):\n    a,s=list(map(int,input().split()))\n    if s==1:\n        z=max(1900,z)\n    else:\n        x=min(1899,x)\n    z+=a\n    x+=a\nif x<z:\n    print('Impossible')\nelif x>=7000000000:\n    print('Infinity')\nelse:\n    print(x)\n", "from sys import *\n\nn = int(stdin.readline())\n\nINF = 100000000000000000000000\nMAX = 2 * INF\nMIN = - MAX\npossible = True\n\nfor _ in range(n):\n    c, d = stdin.readline().split(' ')\n    c = int(c)\n    d = int(d)\n    \n    if d is 1:\n        MIN = max(MIN, 1900)\n    if d is 2:\n        MAX = min(MAX, 1899)\n\n    if MIN > MAX:\n        possible = False\n\n    MIN += c\n    MAX += c\n\nif not possible:\n    print('Impossible')\nelse:\n    if MAX > INF:\n        print('Infinity')\n    else:\n        print(MAX)\n", "#!/usr/bin/env python3\n\nFIRST_DIV_START = 1900\n\n\ndef solve():\n    n = int(input())\n    min_rating = None\n    max_rating = None\n    for _ in range(n):\n        c, d = list(map(int, input().split()))\n        # print(\"was div{}, took {} rating\".format(d, c))\n        if d == 2:\n            if max_rating is None:\n                max_rating = FIRST_DIV_START - 1\n            else:\n                max_rating = min(FIRST_DIV_START - 1, max_rating)\n            if min_rating is not None and min_rating > max_rating:\n                return \"Impossible\"\n\n            max_rating += c\n            if min_rating is not None:\n                min_rating += c\n        else:\n            if min_rating is None:\n                min_rating = FIRST_DIV_START\n            else:\n                min_rating = max(min_rating, FIRST_DIV_START)\n            if max_rating is not None and min_rating > max_rating:\n                return \"Impossible\"\n\n            min_rating += c\n            if max_rating is not None:\n                max_rating += c\n        # print(\"min: {}, max: {}\".format(min_rating, max_rating))\n\n    if max_rating is None:\n        return \"Infinity\"\n    return max_rating\n\ndef __starting_point():\n    print(solve())\n\n__starting_point()", "'''\nCreated on 30 dec. 2016\n\n@author: Moldovan\n'''\n\nn = int(input())\n\nfor i in range(n):\n    change, division = input().split()\n    change = int(change)\n    division = int(division)\n    if i == 0:\n        if division == 1:\n            maxx = 10 ** 15\n            minn = 1900\n        else:\n            maxx = 1899\n            minn = -(10**10)\n    if division == 1:\n        if maxx < 1900:\n            print(\"Impossible\")\n            return\n        minn = max(minn, 1900)\n        minn = minn + change\n        maxx = maxx + change\n    else:#div 2\n        if minn >=1900:\n            print(\"Impossible\")\n            return\n        maxx = min(maxx, 1899)\n        minn = minn + change\n        maxx = maxx +change\nif maxx > 10**10:\n    print(\"Infinity\")\nelse:\n    print(maxx)\n            \n", "n = int(input())\nup = 0\nwasup = 0\ndown = 0\nwasdown = 0\nfor i in range(n):\n    c, d = [int(i) for i in input().split()]\n    if d == 1:\n        if not wasdown:\n            down = 1900\n            wasdown = 1\n        down = max(down, 1900)\n        down+=c\n        if wasup:\n            up+=c\n\n    if d == 2:\n        if not wasup:\n            up = 1899\n            wasup = 1\n        up = min(up, 1899)\n        up+=c\n        if wasdown:\n            down+=c\n    if wasup and wasdown:\n        if up<down:\n            print(\"Impossible\")\n            break\nelse:\n    if wasup:\n        print(up)\n    else:\n        print(\"Infinity\")", "from collections import defaultdict\nimport sys, os, math\n\ndef __starting_point():\n    #n, m = list(map(int, input().split()))\n    n = int(input())\n    l, r = -200000000, 200000000 #>=, <\n    temp = 0\n    for i in range(n):\n        a, b = map(int, input().split())\n        if b == 1:\n            l = max(1900 - temp, l)\n        else:\n            r = min(1900 - temp, r)\n        temp += a\n    if r == 200000000:\n        print('Infinity')\n    elif l >= r:\n        print('Impossible')\n    else:\n        print(temp + r - 1)\n__starting_point()", "n = int(input())\nc, div = map(int, input().split())\nif (div == 1):\n    x = None\n    y = 1900\nelse:\n    x = 1899\n    y = None\nproof = True\nfor i in range (n - 1):\n    if (x != None):\n        x += c\n    if (y != None):\n        y += c\n    c, div = map(int, input().split())\n    if (div == 1):\n        if (x != None) and (x < 1900):\n            proof = False\n        else:\n            if (y == None):\n                y = 1900\n            else:\n                y = max(y, 1900)\n    else:\n        if (y != None) and (y > 1899):\n            proof = False\n        else:\n            if (x == None):\n                x = 1899\n            else:\n                x = min(x, 1899)\nif (proof):\n    if (x == None):\n        print(\"Infinity\")\n    else:\n        print(x + c)\nelse:\n    print(\"Impossible\")", "import sys\n\ndef change_rating(div,change):\n    if div == 1:\n        ranged[0] = max(ranged[0],1900)\n    else:\n        ranged[1] = min(ranged[1],1899)\n    if ranged[0] > ranged[1]:\n        return False\n    ranged[0] += change\n    ranged[1] += change\n    return True\n\ndef get_max_cur(start):\n    t = start\n    m = start\n    for change in reversed(changes):\n        m = max(m, start - change)\n        start -= change\n    if m >= inf:\n        return m\n    return t\nn = int(input())\ninf = sys.maxsize * 2000\nranged = [-inf,inf]\nchanges = []\nfor _ in range(n):\n    chnage, div = list(map(int,input().split()))\n    if not change_rating(div,chnage):\n        print('Impossible')\n        return\n    changes.append(chnage)\nmax_r = get_max_cur(ranged[1])\nif max_r >= inf:\n    print('Infinity')\nelse:\n    print(max_r)\n\n", "# Author: Maharshi Gor\nimport sys\n\nsys.setrecursionlimit(5000000)\n\n\ndef read(type=int):\n    return type(input())\n\n\ndef read_arr(type=int):\n    return [type(token) for token in input().split()]\n\n\ndef abs(num):\n    return num if num > 0 else -num\n\n\ninf = 10 ** 9\n\nc = 1899\n\nu, l = inf, -inf\ndiff = 0\nn = read()\nA = []\nfor i in range(n):\n    r, d = read_arr()\n    A.append((r, d))\n\ne = False\nfor r, d in A:\n    if d == 1:\n        l = max(l, 1900 - diff)\n    else:\n        u = min(u, 1899 - diff)\n    # print(diff, d, l, u)\n    diff += r\n    if u < l:\n        e = True\n        break\n\n\nif e or l > u:\n    print(\"Impossible\")\nelif u == inf:\n    print(\"Infinity\")\nelse:\n    print(u + diff)\n", "n = int(input())\nc, d = list(map(int, input().split()))\nmin_ = 0\nmax_ = 0\nflag = True\nif d == 1:\n\tmin_ = 1900\n\tmax_ = float(\"+Inf\")\nelse:\n\tmin_ = float(\"-Inf\")\n\tmax_ = 1899\nfor i in range(n - 1):\n\tc1, d = list(map(int, input().split()))\n\tif d == 1:\n\t\tmin_ = max(min_ + c, 1900)\n\t\tmax_ += c\n\telse:\n\t\tmax_ = min(max_ + c, 1899)\n\t\tmin_ += c\n\tif min_ > max_:\n\t\tflag = False\n\tc = c1\nmin_ += c\nmax_ += c\nif not(flag):\n\tprint(\"Impossible\")\nelif max_ == float(\"+Inf\"):\n\tprint(\"Infinity\")\nelse:\n\tprint(max_)\n", "n = int(input())\n\n# Init\n\nloi = []\n\ninfinity  = False\nimpossible = False\n\nfor i in range(n):\n  loi.append(list(map(int, input().split(\" \"))))\n\n\nif loi[0][1] == 1:\n    upper_bound = 99999999999999999\n    lower_bound = 1900\n    last_div = 1\nif loi[0][1] == 2:\n    upper_bound = 1899\n    lower_bound = -99999999999999999\n    last_div = 2\n\n\n# Loop\n\nfor (c,d) in loi:\n    if d == 2 and lower_bound > 1899:\n        impossible = True\n    if d == 1 and upper_bound < 1900:\n        impossible = True\n    # print(\"-----\")\n    # print(lower_bound, upper_bound)\n\n    if d == 1:\n        lower_bound = max(lower_bound, 1900)\n    if d == 2:\n        upper_bound = min(upper_bound, 1899)\n    # print(lower_bound, upper_bound)\n\n    # if last_div == d:\n    upper_bound += c\n    lower_bound += c\n\n    # if last_div ==1 and d == 2:\n    #     upper_bound = min(1899, upper_bound+c)\n    #     lower_bound = lower_bound+c\n    # if last_div ==2 and d == 1:\n    #     upper_bound = upper_bound + c\n    #     lower_bound = max(1900,lower_bound+c)\n\n    if lower_bound > upper_bound:\n        impossible = True\n\n    # print(lower_bound, upper_bound)\n    last_div = d\n\n\nif impossible:\n    print(\"Impossible\")\nelif upper_bound>10000000000000000:\n    print(\"Infinity\")\nelse:\n    print(upper_bound)", "n = int(input())\n\nratings = []\ndivs = []\n\nfor i in range(n):\n    a, b = map(int, input().split())\n    ratings.append(a)\n    divs.append(b)\n\ncurmax = float('inf')\ncurmin = float('-inf')\n\nif n == 1:\n    if divs[0] == 1:\n        print('Infinity')\n    else:\n        print(1899 + ratings[0])\nelse:\n    for k in range(n - 1):\n        st = divs[k]\n        fin = divs[k + 1]\n        change = ratings[k]\n\n        if st == 1 and fin == 2:\n            if change >= 0:\n                print('Impossible')\n                break\n            curmax = min(curmax + change, 1899)\n            curmin = max(curmin + change, 1900 + change)\n        elif st == 2 and fin == 2:\n            curmax = min(curmax + change, 1899, 1899 + change)\n            curmin += change\n        elif st == 1 and fin == 1:\n            curmin = max(curmin + change, 1900, 1900 + change)\n            curmax += change\n        elif st == 2 and fin == 1:\n            if change <= 0:\n                print('Impossible')\n                break\n            curmax = min(curmax + change, 1899 + change)\n            curmin = max(curmin + change, 1900)\n    else:\n        if curmax == float('inf'):\n            print('Infinity')\n        elif curmin > curmax:\n            print('Impossible')\n        else:\n            print(curmax + ratings[-1])", "import math\n\nn = int(input())\nc, d = [], []\nno = False\nfor _ in range(0, n):\n    string = list(map(int, input().split()))\n    c.append(string[0])\n    d.append(string[1])\nif all([x == 1 for x in d]):\n    print('Infinity')\nelif n == 1:\n    print(1899+c[0]) # !!!\nelse:\n    if d[0] == 1:\n        x = (1900, math.inf)\n    else:\n        x = (-math.inf, 1899)\n    div = d[0]\n    for i in range(0, n-1):\n        x_next = x\n        if d[i] == 1 and d[i+1] == 2:\n            x_next = x[0]+c[i], min(1899, x[1]+c[i])\n        elif d[i] == 2 and d[i+1] == 1:\n            x_next = max(1900, x[0]+c[i]), x[1]+c[i]\n        else:\n            x_next = max(x[0] + c[i], 1900) if d[i+1] == 1 else x[0] + c[i], min(x[1] + c[i], 1899) if d[i+1] == 2 else x[1] + c[i]\n        if (x_next[0] > x_next[1]):\n            no = True\n            break\n        else:\n            x = x_next\n\n    print('Impossible' if no else x[1] + c[-1])\n"]