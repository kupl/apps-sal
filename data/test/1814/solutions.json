["def takeClosest(myList, myNumber):\n\n    \"\"\"\n\n    Assumes myList is sorted. Returns closest value to myNumber.\n\n\n\n    If two numbers are equally close, return the smallest number.\n\n    \"\"\"\n\n    if len(myList) == 0:\n\n        return 9e10\n\n    pos = bisect_left(myList, myNumber)\n\n    if pos == 0:\n\n        return myList[0]\n\n    if pos == len(myList):\n\n        return myList[-1]\n\n    before = myList[pos - 1]\n\n    after = myList[pos]\n\n    if after - myNumber < myNumber - before:\n\n       return after\n\n    else:\n\n       return before\n\n\n\nfrom bisect import bisect_left\n\nfrom math import ceil\n\n\n\nn, m, n_stairs, n_elevators, v = map(int, input().split(\" \"))\n\n\n\nif n_stairs > 0:\n\n    stairs = list(map(int, input().split(\" \")))\n\nelse:\n\n    stairs = []\n\n    input()\n\nif n_elevators > 0:\n\n    elevators = list(map(int, input().split(\" \")))\n\nelse:\n\n    elevators = []\n\n    input()\n\nqueries = int(input())\n\nres = []\n\nfor i in range(queries):\n\n    x1, y1, x2, y2 = map(int, input().split(\" \"))\n\n    next_elevator = takeClosest(elevators, (y1 + y2) / 2)\n\n    next_stairs = takeClosest(stairs, (y1 + y2) / 2)\n\n    time_elevator = abs(x1 - x2) / v\n\n    time_stairs = abs(x1 - x2)\n\n\n\n    mi = min(y1, y2)\n\n    ma = max(y1, y2)\n\n    if next_elevator < mi:\n\n        time_elevator += (mi - next_elevator) * 2\n\n    elif next_elevator > ma:\n\n        time_elevator += (next_elevator - ma) * 2\n\n\n\n    if next_stairs < mi:\n\n        time_stairs += (mi - next_stairs) * 2\n\n    elif next_stairs > ma:\n\n        time_stairs += (next_stairs - ma) * 2\n\n\n\n    dis = abs(y1 - y2)\n\n    if time_elevator < time_stairs:\n\n        dis += time_elevator\n\n    else:\n\n        dis += time_stairs\n\n    if x1 == x2:\n\n        res.append(abs(y1 - y2))\n\n    else:\n\n        res.append(ceil(dis))\n\nprint(*res, sep=\"\\n\")\n\n\n\n# Made By Mostafa_Khaled", "import sys\ninput=sys.stdin.readline\nimport math\nimport bisect\nn,m,cl,ce,v=list(map(int,input().split()))\nl=[int(i) for i in input().split() if i!='\\n' ]\ne=[int(i) for i in input().split() if i!='\\n']\nq=int(input())\nfor i in range(q):\n        x1,y1,x2,y2=list(map(int,input().split()))\n        lft,neareststa,sta,nearestele=0,0,0,0\n        if x2==x1 and y1==y2:\n            output=0\n        elif x2==x1:\n            output=abs(y2-y1)\n        else:\n            lft=math.ceil(abs((x2-x1))/v)\n            #print(lft)\n            sta=abs(x2-x1)\n            if cl>0:\n                nearestele=bisect.bisect_left(l,y1)\n                if len(l)>nearestele:\n                    first=abs(l[nearestele]-y1)+abs(y2-l[nearestele])\n                else:\n                    first=1000000000001\n                if nearestele!=0:\n                    second=abs(l[nearestele-1]-y1)+abs(y2-l[nearestele-1])\n                else:\n                    second=1000000000001\n                #print(first,second,nearestele)\n                nearestele=min(first,second)\n            else:\n                nearestele=1000000000001\n            if ce>0:\n                neareststa=bisect.bisect_left(e,y1)\n                #print('n',neareststa)\n                if len(e)>neareststa:\n                    first=abs(e[neareststa]-y1)+abs(y2-e[neareststa])\n                    #print(first)\n                else:\n                    first=1000000000001\n                if neareststa!=0:\n                    second=abs(e[neareststa-1]-y1)+abs(y2-e[neareststa-1])\n                else:\n                    second=1000000000001\n                neareststa=min(first,second)\n            else:\n                neareststa=1000000000001\n            #print(lft,sta,neareststa,nearestele,first,second)\n            output=min(lft+neareststa,sta+nearestele)\n    \n        sys.stdout.write(str(output)+'\\n')\n\n", "import sys\ninput=sys.stdin.readline\nimport math\nimport bisect\nn,m,cl,ce,v=list(map(int,input().split()))\nl=[int(i) for i in input().split() if i!='\\n' ]\ne=[int(i) for i in input().split() if i!='\\n']\nq=int(input())\nfor i in range(q):\n        x1,y1,x2,y2=list(map(int,input().split()))\n        lft,neareststa,sta,nearestele=0,0,0,0\n        if x2==x1 and y1==y2:\n            output=0\n        elif x2==x1:\n            output=abs(y2-y1)\n        else:\n            lft=math.ceil(abs((x2-x1))/v)\n            sta=abs(x2-x1)\n            if cl>0:\n                nearestele=bisect.bisect_left(l,y1)\n                if len(l)>nearestele:\n                    first=abs(l[nearestele]-y1)+abs(y2-l[nearestele])\n                else:\n                    first=1000000000001\n                if nearestele!=0:\n                    second=abs(l[nearestele-1]-y1)+abs(y2-l[nearestele-1])\n                else:\n                    second=1000000000001\n                nearestele=min(first,second)\n            else:\n                nearestele=1000000000001\n            if ce>0:\n                neareststa=bisect.bisect_left(e,y1)\n                if len(e)>neareststa:\n                    first=abs(e[neareststa]-y1)+abs(y2-e[neareststa])\n                else:\n                    first=1000000000001\n                if neareststa!=0:\n                    second=abs(e[neareststa-1]-y1)+abs(y2-e[neareststa-1])\n                else:\n                    second=1000000000001\n                neareststa=min(first,second)\n            else:\n                neareststa=1000000000001\n            output=min(lft+neareststa,sta+nearestele)\n        sys.stdout.write(str(output)+'\\n')\n\n"]