["s, x = list(map(int, input().split()))\nrem = int(s == x) * 2\np, t, cur = [], 0, 1\nfor i in range(64):\n    if x % 2:\n        t += 1\n        s -= cur\n    else:\n        p.append(cur * 2)\n    cur *= 2\n    x //= 2\nfor i in p[::-1]:\n    if s >= i: s -= i\nans = 0 if s else 2 ** t - rem\nprint(ans)\n", "def o(s,x):\n    d=s-x\n    if x<<1 & d or d%2 or d<0: return 0\n    return 2**(bin(x).count('1'))-(0 if d else 2)\ns,x=map(int,input().split())\nprint(o(s,x))", "s, x = list(map(int, input().split(' ')))\nif (s-x)%2 or s < x:\n    print(0)\nelse:\n    c = bin((s-x)//2)[2:][::-1]\n    t = bin(x)[2:][::-1]\n    for i in range(len(t)):\n        if t[i] == '1' and i < len(c) and c[i] == '1':\n            print(0)\n            return\n    print(pow(2, bin(x)[2:].count('1'))-(2 if s==x else 0))\n", "def main():\n    s, x = list(map(int, input().split()))\n    if s < x:\n        print(0)\n        return\n    s, x = ([c == '1' for c in bin(int(_))[2:]] for _ in (s, x))\n    x = [False] * (len(s) - len(x)) + x\n    a, b = [False] * len(s), [False] * len(s)\n\n    def deeper(idx, carry):\n        if idx:\n            idx -= 1\n            if carry:\n                if s[idx] == x[idx]:\n                    return\n                if s[idx]:\n                    deeper(idx, False)\n                    a[idx] = True\n                    b[idx] = True\n                    deeper(idx, True)\n                    a[idx] = False\n                    b[idx] = False\n                else:\n                    b[idx] = True\n                    deeper(idx, True)\n                    b[idx] = False\n            else:\n                if s[idx] != x[idx]:\n                    return\n                if s[idx]:\n                    b[idx] = True\n                    deeper(idx, False)\n                    b[idx] = False\n                else:\n                    a[idx] = True\n                    b[idx] = True\n                    deeper(idx, True)\n                    a[idx] = False\n                    b[idx] = False\n                    deeper(idx, False)\n        else:\n            raise TabError\n\n    try:\n        deeper(len(s), False)\n    except TabError:\n        print((1 << (sum(b) - sum(a))) - (0 if any(a)else 2))\n    else:\n        print(0)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "'__author__'=='deepak Singh Mehta(learning brute force)) '\n\n\ndef __starting_point():\n  s, x = list(map(int, input().split(' ')))\n  if (s-x)%2 or s < x:\n      print(0)\n  else:\n      c = bin((s-x)//2)[2:][::-1]\n      t = bin(x)[2:][::-1]\n      for i in range(len(t)):\n          if t[i] == '1' and i < len(c) and c[i] == '1':\n              print(0)\n              return\n      print(pow(2, bin(x)[2:].count('1'))-(2 if s==x else 0))\n\n__starting_point()", "'''\nCreated on Apr 20, 2016\nGmail : r.haque.249@gmail.com\n@author: Md. Rezwanul Haque\n'''\ndef func(s,x):\n    if x==0 and s%2==0:\n        return 1\n    if s==0:\n        return 0\n    if (s%2==1 and x%2==1):\n        return 2*func(s//2, x//2)\n    if (s%2==1 and x%2==0):\n        return 0\n    if (s%2== 0 and x%2==1):\n        return 0\n    if s%2==0 and x%2==0:\n        return func(s//2 - 1, x//2) + func(s//2, x//2)\n    \ns,x = list(map(int,input().split()))\ncnt = func(s, x)\nif s^0 == x:\n    cnt = cnt - 2;\nprint(cnt)\n    \n", "def digits(n):\n    d = []\n    while n:\n        d.append(n%2)\n        n //= 2\n    return d\ns, x = map(int, input().split())\n#for i in range(s+1):\n#    if i^(s-i) == x:\n#        print(i, s-i)\nflag = True\nif s-x < 0 or (s-x)%2 == 1:\n    print(0)\nelse:\n    a = (s-x) >> 1\n    AND = digits(a)\n    XOR = digits(x)\n    for i in range(max(len(AND), len(XOR))):# comparing from reverse\n        if i < len(XOR):\n            xi = XOR[i]\n        else:\n            xi = 0\n        if i < len(AND):\n            ai = AND[i]\n        else:\n            ai = 0\n        if xi == 1 and ai != 0:\n            print(0)\n            flag = False\n            break\n    if flag:\n        data = XOR.count(1)\n        ans = 2**data\n        if a == 0:\n            ans -= 2\n        print(ans)", "s, x = map(int, input().split())\nprint(0 if s < x or (s - x) & (2 * x + 1) else 2 ** bin(x).count('1') - 2 * (s == x))", "s, x = list(map(int, input().split()))\nprint(0 if s < x or (s - x) & (2 * x + 1) else 2 ** bin(x).count('1') - 2 * (s == x))\n", "s, x = list(map(int, input().split()))\nprint(0 if s < x or (s - x) & (2 * x + 1) else 2 ** bin(x).count('1') - 2 * (s == x))\n", "s,x=list(map(int,input().split()))\njj=1 if s>=x and (s-x)/2==(s-x)//2 else 0\nxx=bin(x)[2:]\naa=bin((s-x)//2)[2:]\nif len(xx)<len(aa): xx=(len(aa)-len(xx))*'0'+xx\nelse: aa=(len(xx)-len(aa))*'0'+aa\n#print(xx,aa)\nfor i in range(len(xx)):\n    if xx[i]=='0': continue\n    elif xx[i]=='1':\n        if aa[i]=='0':\n            jj*=2\n        else:\n            jj=0\nif (s-x)//2==0 and jj>=2: jj-=2 \nprint(jj)  \n\n##////////////////      //////        ///////      //             ///////     //  //   //\n##////          //    ///   ///     ///    ///     //            ///  ///     ////     //\n##////    ////       ///     ///   ///      ///    //           /////////     ////     ///////\n##////     /////    ///       /// ///        ///   //          ///    ///     ////     //   //\n##//////////////     ///////////   ///////////     //////     ///     ///     //  //   //   //\n\n\n\n", "import sys\nimport io\n\nstream_enable = 0\n\ninpstream = \"\"\"\n9 5\n\"\"\"\n\nif stream_enable:\n    sys.stdin = io.StringIO(inpstream)\n    input()\n\ndef inpmap():\n    return list(map(int, input().split()))\n\na, b = inpmap()\nif b > a:\n    print(0)\n    return\nflag = a == b\n# a = bin(a)[2:]\n# b = bin(b)[2:]\n# ln = max(len(a), len(b))\n# if len(a) > len(b):\n#     b = \"0\" * (len(a) - len(b)) + b\n# elif len(b) > len(a):\n#     a = \"0\" * (len(b) - len(a)) + a\n# ln = len(a)\n# print(a)\n# print(b)\nb = \"0\" * (len(bin(a)) - len(bin(b))) + bin(b)[2:]\n# print(b)\nres = 1\np = 2 ** (len(b) - 1)\nfor x in b:\n    if x == '1':\n        res *= 2\n        a -= p\n    elif a >= p * 4 - 1:\n        print(0)\n        return\n    elif a >= p * 2:\n        a -= p * 2\n    p //= 2\n    # print(a)\nif a:\n    print(0)\n    return\nif flag:\n    res -= 2\nprint(res)\n", "s,x=list(map(int,input().split()))\nf=0\nif s==x:\n    f=-2\naa=s-x\nif aa%2==1 or aa<0:\n    print(0)\nelse:\n    a=aa//2\n    #print(a,s)\n    out=1\n    for i in range(64):\n        xx=x%2\n        aa=a%2\n        if xx==1:\n            out*=2\n            if aa==1:\n                out=0\n        x//=2\n        a//=2\n    print(out+f)\n                \n        \n        \n    \n", "s, x = list(map(int, input().split()))\n\nprint(0 if s < x or (s - x) & (2 * x + 1) else 2 ** bin(x).count('1') - 2 * (s == x))\n\n\n\n\n# Made By Mostafa_Khaled\n", "s,x=list(map(int,input().split()))\nprint(0 if (s<x or (s-x)%2 or ((s-x)//2)&(x)!=0) else 2**(list(bin(x)).count('1'))-2*(s==x) )\n", "s, x = map(int, input().split())\na, b = 1, 0\nfor i in range(50):\n    c, d = s & (1 << i), x & (1 << i)\n    # print(i, a, b, c, d)\n    if c == d:\n        if c:\n            a, b = 2 * a, 0\n        else:\n            a, b = a, a\n    else:\n        if c:\n            a, b = b, b\n        else:\n            a, b = 0, 2 * b\nif s == x:\n    a -= 2\nprint(a)", "s,x=map(int,input().split())\nb=s-x\nb=list(bin(s-x))\nb=b[2:]\na=list(bin(x))\na=a[2:]\n#print(a)\nal=len(a)\nbl=len(b)\nc=[]\nif(bl>al):\n\tfor i in range(bl-al):\n\t\tc.append('0')\n\tc.extend(a)\n\ta=c\nelse:\n\tfor i in range(al-bl):\n\t\tc.append('0')\n\tc.extend(b)\n\tb=c\np=0\nbl=len(b)\nfor i in range(bl-1):\n\tif(b[i]=='1'):\n\t\tif(a[i+1]=='1'):\n\t\t\t#print(\"hello\")\n\t\t\tp=1\nbl=len(b)\nif(b[bl-1]=='1'):\n\t#print(\"hello\")\n\tp=1\nif(x>s):\n\tprint(\"0\")\nelif(p==1):\n\t#print(\"hhh\")\n\tprint(\"0\")\nelse:\n\tif(s==x):\n\t\tprint(2**(a.count('1'))-2)\n\telif(x==0):\n\t\tprint(\"1\")\n\telse:\n\t\tprint(2**(a.count('1')))", "suma,xor=list(map(int,input().split()))\nmitad=round((suma-xor)/2)\nif(mitad<0 or mitad*2+xor!=suma or (mitad&xor)!=0):\n    print(0)\nelse:\n    print(2**(bin(xor).count(\"1\"))-2*(suma==xor))\n", "from sys import stdin,stdout\nr,w = stdin.readline,stdout.write\ns,x = map(int,r().split());andShft = s-x\nw('%i\\n' %(0 if andShft&1 or s<x or x&(andShft>>1) else 2**(f'{x:b}'.count('1')) - (2 if s == x else 0)))", "from sys import stdin,stdout\nr,w = stdin.readline,stdout.write\ns,x = map(int,r().split());andShft = s-x\nw('%i\\n' %(0 if andShft&1 or s<x or x&(andShft>>1) else 2**(f'{x:b}'.count('1')) - (2 if s == x else 0)))", "R = lambda: map(int, input().split())\ns, x = R()\nif s < x or (s - x) & 1:\n    print(0)\n    return\nu, d = (s - x) // 2, x\nres = 1\nwhile u or d:\n    uu, dd = u & 1, d & 1\n    if uu and dd:\n        res *= 0\n    elif uu == 0 and dd == 1:\n        res *= 2\n    u, d = u >> 1, d >> 1\nif s == x:\n    res = max(0, res - 2)\nprint(res)", "from sys import stdin,stdout\nr,w = stdin.readline,stdout.write\ns,x = map(int,r().split());andShft = s-x\nw('%i\\n' %(0 if andShft&1 or s<x or x&(andShft>>1) else 2**(f'{x:b}'.count('1')) - (2 if s == x else 0)))", "s, x = map(int, input().split())\nif s < x:\n\tprint(0)\n\treturn\nf = x\nif (s - x) % 2 == 1:\n\tprint(0)\n\treturn\nx = bin(x)[2::]\ny = (s - f) // 2\ny = bin(y)\ny = y[2:]\nif len(x) > len(y):\n\ty = \"0\" * (len(x) - len(y)) + y\nelse:\n\tx = \"0\" * (len(y) - len(x)) + x\nk = 0\nfor i in range(len(x)):\n\tif x[i] == \"1\":\n\t\tk += 1\n\tif int(x[i]) + int(y[i]) == 2:\n\t\tprint(0)\n\t\treturn\nif s == f:\n\tprint(2 ** k - 2)\n\treturn\nprint(2 ** k)", "s, x = list(map(int, input().split()))\nprint(((s-x)&(x+x+1)==0 and x <= s) * (2 ** bin(x).count('1') - 2 * (s == x)))\n", "def codechef(s,x):\n    #cook your dish here\n    flag = 0\n    a = (s-x)//2\n    if (s-x)/2 != a:\n        print(0)\n        return\n    if s == x:\n        flag = 1\n    \n    if a < 0:\n        print(0)\n        return\n    a = str(bin(a))\n    x = str(bin(x))\n    a = a[2:]\n    x = x[2:]\n    l = (len(a)-len(x))\n    if l>0:\n        x = (\"0\"*l)+x\n    else:\n        a = (\"0\"*(-l))+a\n    res = 1\n    for i in range(len(a)):\n        if x[i]==\"1\" and a[i]==\"0\":\n            res *= 2\n        elif x[i]==\"1\" and a[i]==\"1\":\n            print(0)\n            return\n    if flag:\n        res -= 2\n        \n    \n    print(res)\n\n    \n    \n    \n\ndef __starting_point():\n  \n    s,x = list(map(int, input().split()))\n    codechef(s,x)\n    \n    \n                \n            \n        \n\n__starting_point()"]