["input()\ns = input()\nr1 = 1\nf = s[0]\nfor c in s:\n\tif c != f:\n\t\tbreak\n\tr1 += 1\nr2 = 1\np = s[-1]\nfor c in s[::-1]:\n\tif c != p:\n\t\tbreak\n\tr2 += 1\nif f == p:\n\tprint((r1 * r2) % 998244353)\nelse:\n\tprint((r1 + r2 - 1) % 998244353)\n", "n = int(input())\ns = input()\na = s[0]\nb = s[-1]\nx = 0\nwhile s[x] == a:\n    x+=1\ny = n-1\nwhile s[y] == b:\n    y-=1\nx+=1\ny = n-y\nif a == b:\n    print(x*y%998244353)\nelse:\n    print(x+y-1)", "def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nn = ii()\ns = input().strip()\n\nx = 0\nwhile s[0] == s[x]:\n    x += 1\ny = 0\nwhile s[-1] == s[n - 1 - y]:\n    y += 1\n\nif s[0] == s[-1]:\n    ans = (x + 1) * (y + 1)\nelse:\n    ans = x + y + 1\nprint(ans % 998244353)\n", "n = int(input())\ns = input()\n\ncount_begin = 0\ncount_end = 0\ni = 0\nwhile(s[i] == s[0]):\n    count_begin += 1\n    i += 1\ni = -1\nwhile(s[i] == s[-1]):\n    count_end += 1\n    i -= 1\nif s[0] == s[-1]:\n    print((count_begin+1)*(count_end+1)%998244353 )\nelse:\n    print((count_begin+count_end+1)%998244353)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\ns = input()\n\nfor a in range(1,1000000):\n    if s[a] !=s[0]:\n        break\n    \nfor b in range(N-2,-1,-1):\n    if s[b] !=s[N-1]:\n        break\ndprint(a,b)\nbase = 998244353\nif s[0] != s[N-1]:\n    print( a + N - b )\nelse:\n    print( (a+1) * (N-b) % base )\n\n\n\n", "n = int(input())\ns = input()\nl = 1\nwhile l < n and s[l] == s[l - 1]:\n    l += 1\nr = 1\nwhile l < n and s[-r - 1] == s[- r]:\n    r += 1\nans = 0\nif s[0] != s[-1]:\n    ans = l + r + 1\nelif l == n:\n    ans = n * (n + 1) // 2\nelse:\n    ans = (l + 1) * (r + 1)\nans %= 998244353\nprint(ans)", "n = int(input())\ns = input()\nk = 0\nans = 0\nif s[n-1] != s[0]:\n    while k < n and s[k] == s[0]:\n        k += 1\n    ans = k\n    k = 0\n    while n-1-k >= 0 and s[n-1-k] == s[n-1]:\n        k += 1\n    ans += k\nelse:\n    kl ,kr = 0, 0\n    while kl < n and s[kl] == s[0]:\n        kl += 1\n    while n-1-kr >= 0 and s[n-1-kr] == s[0]:\n        kr += 1\n    if kl == n:\n        ans = n*(n+1)//2\n    else:\n        ans = kl * kr + kl + kr\nprint((ans+1) % 998244353)\n        \n", "n=int(input())\ns=input()\nans=0\nk1,k2=0,-1\nfor i in range(1,n):\n\tif s[i]!=s[0]:\n\t\tk1=i\n\t\tbreak\nfor i in range(n-2,-1,-1):\n\tif s[i]!=s[-1]:\n\t\tk2=i\n\t\tbreak\nif s[0]==s[-1]:\n\tans=(k1+1)*(n-k2)\nelse:\n\tans+=k1+n-k2-1\n\tans+=1\nprint(ans%998244353)\n", "n=int(input())\ns=list(input())\nprev=s[0]\ncounter=0\nfor item in s:\n    if item==prev:\n        counter+=1\n        \n    else:\n        break\ns.reverse()\ncounter1=0\nprev1=s[0]\nfor item in s:\n    if item==prev1:\n        counter1+=1\n        \n    else:\n        break\nif prev==prev1:\n    print((counter+1)*(counter1+1)%998244353)\nelse:\n    print(counter+counter1+1%998244353)\n", "n = int(input())\ns = input()\nMOD = 998244353\npre = s[0]\nnum1, num2 = 1, 1\nfor i in range(1, n):\n    if pre != s[i]:\n        break\n    num1 += 1\n\nsur = s[-1]\nfor i in range(n - 2, -1, -1):\n    if sur != s[i]:\n        break\n    num2 += 1\n\nnum1, num2 = num1 + 1, num2\nif pre == sur:\n    print(num1 * (num2 + 1) % MOD)\nelse:\n    print((num1 + num2) % MOD)", "n=int(input())\ns=input()\na=1\nx=s[0]\nfor i in range(1,n):\n    if s[i]==x:a+=1\n    else: break\nb=1\nx=s[-1]\nfor i in range(n-2,-1,-1):\n    if s[i]==x:b+=1\n    else: break\no=a+b+1\nif s[0]==s[-1]:o+=a*b\nprint(o%998244353)", "import sys\n\ninput = sys.stdin.readline\nmod=998244353\n\nn=int(input())\nS=input().strip()\n\nANS=1\nfor s in (\"abcdefghijklmnopqrstuvwxyz\"):\n    if s==S[0] or s==S[-1]:\n        for i in range(n):\n            if S[i]!=s:\n                break\n        l=i\n\n        for i in range(n-1,-1,-1):\n            if S[i]!=s:\n                break\n        r=i\n        ANS=(ANS+(l+1)*(n-r)-1)%mod\n\n    #print(s,l,r,ANS)\n\nprint(ANS)\n            \n\n\n", "def mi():\n    return list(map(int, input().split()))\n'''\n7\naacdeee\n'''\nn = int(input())\ns = list(input())\n\ni,c1 = 0,1\nwhile i+1<n and s[i+1]==s[i]:\n    c1+=1\n    i+=1\n\ni = n-1\nc2 = 1\nwhile i-1>=0 and s[i-1]==s[i]:\n    c2+=1\n    i-=1\n\nif s[0]!=s[-1]:\n    print(c1+c2+1)\nelse:\n    if c1==n:\n        print((n*(n+1)//2)%998244353)\n    else:\n        print(((c1+1)*(c2+1))%998244353)\n", "n = int(input())\ns = input()\nMOD = 998244353\nleft = 0\nright = 0\nright_1 = 0\na, b, c = True, True, True\ni = 0\nwhile (a or b or c) and i < n:\n    if a and s[i] == s[0]:\n        left += 1\n    else:\n        a = False\n    if b and s[-i-1] == s[0]:\n        right += 1\n    else:\n        b = False\n    if c and s[-i-1] == s[-1]:\n        right_1 += 1\n    else:\n        c = False\n    i += 1\nif right != 0:\n    print((1+left*right+left+right) % MOD)\nelse:\n    print((1+left+right_1) % MOD)\n", "n = int(input())\nS = input()\n\nn = 0\nm = 0\np = 998244353\n\nfor s in S:\n    if s != S[0]:\n        break\n    n += 1\n\nfor s in S[::-1]:\n    if s != S[-1]:\n        break\n    m += 1\n\nans = (n+1) * (m+1) if S[0] == S[-1] else n + m + 1\nprint(ans % 998244353)", "n=int(input())\ns=input()\nleft=0\nright=len(s)-1\nitog=0\nwhile (left<n-1) and (s[left+1]==s[left]):\n    left+=1\nwhile (right>0) and s[right-1]==s[right]:\n    right-=1\nif (left<right) and (s[0]!=s[n-1]):\n    itog+=(left+1)+1+(len(s)-right)\n    print(itog%998244353)\nelif (left<right) and (s[0]==s[n-1]):\n    itog+=((left+1)+1)*(n-right+1)\n    print(itog%998244353)\nelse:\n    itog=n*(n-1)//2+n\n    print(itog%998244353)", "mod = 998244353\n\nn = int(input())\na = list(input())\n\nans = 0\n\nl = 1\nwhile l < n and a[l] == a[0]:\n    l += 1\n\nr = n - 1\nwhile r >= 0 and a[r] == a[-1]:\n    r -= 1\n\nif l == n:\n    cur = 1\n    for i in range(n):\n        cur *= (n - i)\n        cur //= i + 1\n        ans += cur\n        ans %= mod\n    print(ans)\n    return\n\nr = n - r - 1\nif a[0] == a[-1]:\n    ans += (l + 1) * (r + 1) % mod\nelse:\n    ans += l + r + 1\n    ans %= mod\nprint(ans)\n", "#!/usr/bin/env python3\nimport sys\n\ndef rint():\n    return list(map(int, sys.stdin.readline().split()))\n#lines = stdin.readlines()\n\nn = int(input())\n\ns = (input())\n\nl_cnt = 1\nfor i in range(1, n):\n    if s[i] == s[0]:\n        l_cnt += 1\n    else:\n        break\nr_cnt = 1\nfor i in range(n-2, -1, -1):\n    if s[i] == s[-1]:\n        r_cnt += 1\n    else:\n        break\n\nif l_cnt == n:\n    print((n*(n+1)//2)%998244353)\n    return\n\nif s[0] == s[-1]:\n    print((l_cnt+1)*(r_cnt+1)%998244353)\n    return\n\nprint(1 + r_cnt + l_cnt)\n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2018/12/28 22:46\n\n\"\"\"\n\nMOD = 998244353\nN = int(input())\nS = input()\nrem = {S[0], S[-1]}\n\nans = 0\nfor v in rem:\n    l, r = 0, N-1\n    while l < N and S[l] == v:\n        l += 1\n\n    while r >= 0 and S[r] == v:\n        r -= 1\n\n    if l > r:\n        ans += N*(N-1) // 2\n        ans %= MOD\n    else:\n        ans += (l+1) * (N-r)\n        ans %= MOD\nans = (ans + MOD - len(rem) + 1) % MOD\nprint(ans)", "import sys\nfrom fractions import gcd\nfrom itertools import groupby as gb\nfrom itertools import permutations as perm\nfrom collections import Counter as C\nfrom collections import defaultdict as dd\nsys.setrecursionlimit(10**5)\n\nmod = 998244353\nn = int(input())\ns = input()\nif s == s[0]*n:\n    print(n*(n+1)//2)\n    return\ng = gb(s)\ngg = gb(s[::-1])\na = 0\na_c,b_c = '',''\nb = 0\nfor k,v in g:\n    a = len(list(v))\n    a_c = k\n    break\nfor k,v in gg:\n    b = len(list(v))\n    b_c = k\n    break\nres = 0\nif a_c == b_c:\n    res += a * b\nres += a + b + 1\nprint(int(res)%mod)\n", "length = int(input())\ns = input()\n\ni = 0\nj = -1\nwhile s[i] == s[0]:\n    i += 1\n\nwhile s[j] == s[-1]:\n    j -= 1\n\nj += 1\nj = int(abs(j))\n\nif s[0] == s[-1]:\n    print(((i+1)*(j+1))%998244353)\nelse:\n    print((i+j+1)%998244353)", "n = int(input())\ns = input()\n\nmod = 998244353\n\nleft = s[0]\nright = s[-1]\n\nans = 1  # include remove all\n\nif left != right:\n    lcount = 0\n    for i in range(n):\n        if s[i] == left:\n            lcount += 1\n        else:\n            break\n    rcount = 0\n    for i in reversed(range(n)):\n        if s[i] == right:\n            rcount += 1\n        else:\n            break\n    ans += lcount + rcount\n    print(ans % mod)\nelse:\n    lcount = 0\n    for i in range(n):\n        if s[i] == left:\n            lcount += 1\n        else:\n            break\n    rcount = 0\n    for i in reversed(range(n)):\n        if s[i] == right:\n            rcount += 1\n        else:\n            break\n    if lcount == len(s):\n        print((n * (n - 1) // 2 + n)%mod)\n    else:\n        print((rcount + 1) * (lcount + 1) % mod)", "n = int(input())\nseq = input()\n\nhurufdpn = seq[0]\nhurufblkg = seq[-1]\n\njmldpn = 0\njmlblkg = 0\n\nlast = seq[0]\nfor s in seq:\n    if s == last:\n        jmldpn += 1\n    else:\n        break\n\nlast = seq[-1]\nfor s in seq[::-1]:\n    if s == last:\n        jmlblkg += 1\n    else:\n        break\n\ntengah = n - jmldpn - jmlblkg\nif tengah < 0:\n    print(((1 + n) * n // 2) % 998244353)\nelse:\n    ans = jmldpn + jmlblkg + 1\n    if hurufdpn == hurufblkg:\n        ans += 1 + (jmlblkg - 1) + (jmldpn - 1) + (jmldpn - 1) * (jmlblkg - 1)\n    print(ans % 998244353)\n", "n = int(input())\ns = input()\n\ncurr_left = s[0]\ncurr_right = s[-1]\ns_left = 0\ns_right = 0\ni = 0\nwhile curr_left == s[i]:\n    s_left +=1\n    i+=1\ni = len(s)-1\nwhile curr_right == s[i]:\n    s_right +=1\n    i+=-1\n\nif curr_left == curr_right:\n    print((s_left+1)*(s_right+1)%998244353)\nelse:\n    print((s_left + s_right + 1)%998244353)", "# alpha = \"abcdefghijklmnopqrstuvwxyz\"\nprime = 998244353\nt = 1#int(input())\nfrom heapq import heappop, heappush\nfor test in range(t):\n    n = int(input())\n    # n,m = (map(int, input().split()))\n    s = input()\n    # ans = 1\n    # start = 1\n    # cur = s[0]\n    # tmp = 0\n    # while s[start]==cur:\n    #     start+=1\n    #     tmp+=1\n    # end = n-1\n    # tmp = 1\n    # while s[end]==cur:\n    #     end-=1\n    #     tmp+=1\n    grp = []\n    cnt = []\n    tmp = 0\n    cur = s[0]\n    for i in s:\n        if i==cur:\n            tmp+=1\n        else:\n            grp.append(cur)\n            cnt.append(tmp)\n            cur = i\n            tmp = 1\n    grp.append(cur)\n    cnt.append(tmp)\n    if len(grp)==1:\n        print(((n*(n+1))//2)%prime)\n    else:\n        if grp[0]==grp[-1]:\n            ans = ((cnt[0]+1)*(cnt[-1]+1))%prime\n            # print(\"here\", ans)\n            # if cnt[0]+cnt[-1]==n-1:\n            #     ans-=1\n            #     ans = ans%prime\n            print(ans)\n        else:\n            ans = cnt[0]+1+cnt[-1]\n            ans = ans%prime\n            # if cnt[0]+cnt[-1]==n-1:\n            #     ans-=1\n            #     ans = ans%prime\n            print(ans)\n"]