["h, w = map(int, input().split())\nx0, y0, x1, y1, c = 1000, 1000, -1, -1, 0\nfor i in range(h):\n  row = str(input())\n  for j in range(w):\n    if row[j] == 'B':\n      x0, y0, x1, y1, c = min(x0, i), min(y0, j), max(x1, i), max(y1, j), c + 1\nln = max(x1 - x0 + 1, y1 - y0 + 1)\nif ln > min(h, w):\n  print(-1)\nelif x1 == -1:\n  print(1)\nelse:\n  print(ln * ln - c)", "n,m=list(map(int,input().split()))\nblacksX,blacksY=[],[]\ncount=0\nfor x in range(n):\n    inp=input()\n    for y in range(m):\n        if inp[y]=='B':\n            blacksX.append(x)\n            blacksY.append(y)\n            count+=1\nif len(blacksX)==0:\n    print(1)\nelse:\n    side=max(max(blacksX)-min(blacksX)+1,max(blacksY)-min(blacksY)+1)\n    if side <=n and side <= m:\n        print(side*side-count)\n    else:\n        print(-1)\n", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return list(map(int,input().split()))\ndef map_string():\n    return input().split()\n    \nn,m = map_input()\ncnt = 0\nupp = n+1\nlow = -1\nleft = -1\nright = m+1\nfor i in range(n):\n    a = list(input())\n    cnt += a.count('B')\n    for j in range(m):\n        if a[j] == 'B':\n            upp = min(upp,i)\n            low = max(low,i)\n            left = max(left,j)\n            right = min(right,j)\nx = abs(upp-low)+1 \ny = abs(right-left)+1\ns = max(x,y)\n# print(upp,low,left,right)\nif cnt == 0:\n    print(1)\nelif s > n or s > m:\n    print(-1)\nelse:\n    print((s*s)-cnt)\n    \n", "n, m = map(int, input().split())\nour = [input() for i in range(n)]\nfirst = -1\nfor i in range(n):\n    if 'B' in our[i]:\n        first = i\n        break\nlast = -1\nfor i in range(n- 1, -1, -1):\n    if 'B' in our[i]:\n        last = i\n        break  \nif first == -1:\n    print(1)\nelse:\n    f2 = -1\n    l2 = -1\n    for i in range(m):\n        a = [our[j][i] for j in range(n)]\n        if 'B' in a:\n            f2 = i\n            break\n    for i in range(m - 1, -1, -1):\n        a = [our[j][i] for j in range(n)]\n        if 'B' in a:\n            l2 = i\n            break    \n    if last - first + 1 > m or l2 - f2 + 1 > n:\n        print(-1)\n    else:\n        res = 0\n        for i in range(first, last + 1):\n            for j in range(f2, l2 + 1):\n                if our[i][j] == 'W':\n                    res += 1\n        res += max(last - first + 1, l2 - f2 + 1) ** 2 - (last - first + 1) * (l2 - f2 + 1)\n        print(res)", "inp = input()\nn, m = inp.split()\nn = int(n)\nm = int(m)\ngrid = []\ntop = n\nbtm = 0\nlft = m\nrht = 0\nallBlackCount = 0\n\nfor i in range(0,n):\n    inp = input()\n    grid.append(inp)\n    \nfor i in range(0, n):\n    for j in range(0, m):\n        if grid[i][j] == 'B':\n            top = min(top, i)\n            btm = max(btm, i)\n            lft = min(lft, j)\n            rht = max(rht, j)\n            allBlackCount += 1\n\n# print(top,lft)\n# print(btm,rht)\n\nh = btm-top+1\nw = rht-lft+1\nsz = max(h, w)\n\nif allBlackCount == 0:\n    print(1)\nelif sz > n or sz > m:\n    print(-1)\nelse:\n    print(sz*sz-allBlackCount)", "from sys import stdin, stdout\n\nn, m = map(int, stdin.readline().split())\nmaps = []\nchallengers = []\n\nfor i in range(n):\n    maps.append(stdin.readline().strip())\n\nmins = [float('inf'), float('inf')]\nmaxs = [float('-inf'), float('-inf')]\n\nfor i in range(n):\n    for j in range(m):\n        if maps[i][j] == 'B':\n            if i < mins[0]:\n                mins[0] = i\n            \n            if j < mins[1]:\n                mins[1] = j\n            \n            if i > maxs[0]:\n                maxs[0] = i\n            \n            if j > maxs[1]:\n                maxs[1] = j\n\nif mins != [float('inf'), float('inf')] and max(abs(maxs[1] - mins[1]), abs(maxs[0] - mins[0])) >= min(n, m):\n    stdout.write('-1')\nelif mins == [float('inf'), float('inf')]:\n    stdout.write('1')\nelse:\n    ans = 0\n    \n    for i in range(mins[0], maxs[0] + 1):\n        for j in range(mins[1], maxs[1] + 1):\n            if maps[i][j] != 'B':\n                ans += 1\n    \n    if abs(maxs[1] - mins[1]) > abs(maxs[0] - mins[0]):\n        ans += (abs(maxs[1] - mins[1]) - abs(maxs[0] - mins[0])) * abs(maxs[1] - mins[1] + 1)\n    elif abs(maxs[1] - mins[1]) < abs(maxs[0] - mins[0]):\n        ans += (abs(maxs[0] - mins[0]) - abs(maxs[1] - mins[1])) * abs(maxs[0] - mins[0] + 1)\n    \n    stdout.write(str(ans))", "n,m=map(int,input().split())\ns=[list(input()) for _ in range(n)]\nu,d,l,r=11**11,0,11**11,0\nfor i in range(n):\n    for j in range(m):\n        if s[i][j]=='B':\n            if i<u:\n                u=i\n            if i>d:\n                d=i\n            if j<l:\n                l=j\n            if j>r:\n                r=j\nif r-l>=n or d-u>=m:\n    print(-1)\nelif u==11**11 and d==0 and l==11**11 and r==0:\n    print(1)\nelse:\n    ans=0\n    for i in range(u,d+1):\n        for j in range(l,r+1):\n            if s[i][j]=='W':\n                ans+=1\n    print(ans+((max(r-l+1,d-u+1)-min(r-l+1,d-u+1))*(max(r-l+1,d-u+1))))", "import sys\n\ndef main():\n    n,m = list(map(int,sys.stdin.readline().split()))\n    x=[]\n    for i in range(n):\n        x.append(sys.stdin.readline().rstrip())\n\n    y = [-1,-1,-1,-1]\n\n    for i in range(n):\n        for j in range(m):\n            if x[i][j]=='B':\n                if y[0]==-1:\n                    y[0]=i\n                y[1]=max(y[1],j)\n                y[2] = max(y[2],i)\n                if y[3]!=-1:\n                    y[3] = min(y[3],j)\n                else:\n                    y[3] = j\n\n    if y[0] == -1 and y[1] == -1 and y[2] == -1 and y[3] == -1:\n        print(1)\n        return \n\n    q = max(y[1]-y[3]+1, y[2]-y[0]+1)\n    if q > m or q>n:\n        print(-1)\n        return\n\n    ans = 0\n    for i in range(y[0],y[2]+1):\n        for j in range(y[3],y[1]+1):\n            if x[i][j]=='W':\n                ans+=1\n\n    ans+= q*(q - (y[2]-y[0]+1)) + q*(q - (y[1]-y[3]+1)) \n    print(ans)\n\n    \nmain()\n", "n, m = list(map(int, input().split()))\nnn0 = n\nnn1 = -1\nmm0 = m\nmm1 = -1\ncnt = 0\n\nfor i in range(n):\n  s = input().strip()\n  if \"B\" in s:\n    nn0 = min(i, nn0)\n    nn1 = max(i, nn1)\n    mm0 = min(s.index(\"B\"), mm0)\n    mm1 = max(s.rindex(\"B\"), mm1)\n    cnt += sum([z == \"B\" for z in s])\nif nn1 < 0:\n  print(1)\nelse:\n  z = max(nn1-nn0, mm1-mm0) + 1  \n  if z <= min(m,n):\n    print(z*z - cnt)\n  else:  \n    print(-1)\n", "n, m = map(int, input().split())\nfield = [input() for _ in range(n)]\nblack = 0\nminheight = minwidth = 101\nmaxheight = maxwidth = 0\nfor i in range(n):\n    s = field[i]\n    for j in range(m):\n        if s[j] == 'B':\n            black += 1\n            minheight = min(i, minheight)\n            maxheight = max(i, maxheight)\n            minwidth = min(j, minwidth)\n            maxwidth = max(j, maxwidth)\nif black == 0:\n    print(1)\nelse:\n    a = maxwidth - minwidth + 1\n    b = maxheight - minheight + 1\n    c = max(a, b)\n    des = c * c\n    if des > n * m or c > n or c > m:\n        print(-1)\n    else:\n        print(des - black)", "n, m = list(map(int, input().split()))\nsq = [list(input()) for _ in range(n)]\n\nrmin = n\nrmax = 0\ncmin = m\ncmax = 0\ncnt = 0\nfor r in range(n):\n    for c in range(m):\n        if sq[r][c] == 'B':\n            cnt += 1\n            rmin = min(rmin, r)\n            rmax = max(rmax, r)\n            cmin = min(cmin, c)\n            cmax = max(cmax, c)\n\nl = max(max(rmax - rmin + 1, cmax - cmin + 1), 1)\nif min(n, m) < l:\n    ans = -1\nelse:\n    ans = l * l - cnt\nprint(ans)\n\n\n", "n,m = list(map(int,input().split()))\nl = []\nup = -1\ndown = -1\nleft = -1\nright = -1\ncout = 0\nfor i in range(n):\n    s = input()\n    for j in range(m):\n        if s[j] == 'B':\n            cout += 1\n            if up == -1:\n                up = i\n                down = i\n                left = j\n                right = j\n            else:\n                down = i\n                left = min(j,left)\n                right = max(j,right)\n            \n\nside =max(down-up,right-left)+1\nif side == 0:\n    side = 1\nif side >  n or side > m:\n    print(-1)\nelse:\n    print(side**2-cout)\n", "n,m = list(map(int,input().split()))\narr = [0]*(n+1)\nfor i in range(n):\n    arr[i] = input()\ncntb = 0\nmn = 200\nmx = 0\nfor i in range(n):\n    first = True\n    for j in range(m):\n        if arr[i][j]=='B':\n            cntb += 1\n            if first:\n                mn = min(mn,j)\n                mx = max(mx,j)\n                first = False\n            else:\n                mx = max(mx,j)\nmn2 = 200\nmx2 = 0\nif cntb==0:\n    print(1)\n    return\nelif cntb==1:\n    print(0)\n    return\nfor i in range(m):\n    first = True\n    for j in range(n):\n        if arr[j][i]=='B':\n            if first:\n                mn2 = min(mn2,j)\n                mx2 = max(mx2,j)\n                first = False\n            else:\n                mx2 = max(mx2,j)\nval = max(mx-mn+1,mx2-mn2+1)\nif val>m or val>n:\n    print(-1)\n    return\nprint(val*val-cntb)\n", "q,w=list(map(int,input().split()))\nz,x,c,v=-1,-1,-1,-1\na=[]\ns=0\nfor i in range(0,q):\n    e=input()\n    if e.count('B')!=0:\n        s+=e.count('B')\n        n=e.find('B')\n        m=e.rfind('B')\n        if c==-1:\n            c=i\n        v=i\n        if z==-1:\n            z=n\n        else:\n            z=min(z,n)\n        x=max(x,m)\n    a.append(e)\nz,x=x-z+1,v-c+1\nif max(z,x)>min(q,w):\n    print(-1)\nelif x*z==0:\n    print(1)\nelse:\n    print(max(z,x)**2-s)\n", "n, m = [int(x) for x in input().split()]\n\narr = []\n\nx1, x2, y1, y2 = 101, -1, 101, -1\n\nfor i in range(n):\n    arr.append(input().rstrip())\nc1 = 0\nfor i in range(n):\n    for j in range(m):\n        if arr[i][j] == \"B\":\n            x1 = min(x1, j)\n            x2 = max(x2, j)\n            y1 = min(y1, i)\n            y2 = max(y2, i)\n            c1 = 1\n\n#print(x1, x2, y1, y2)\n\ncount = 0\n\nfor j in range(x1, x2 + 1):\n    for i in range(y1, y2 + 1):\n        if arr[i][j] == \"W\":\n            count += 1\n\nsizeX = x2 - x1 + 1\nsizeY = y2 - y1 + 1\nif not c1:\n    print(1)\nelif sizeX > sizeY:\n    if sizeX > n:\n        print(-1)\n    else:\n        print(count + sizeX * (sizeX - sizeY))\nelif sizeY > sizeX:\n    if sizeY > m:\n        print(-1)\n    else:\n        print(count + sizeY * (sizeY - sizeX))\nelse:\n    print(count)\n", "n, m = map(int, input().split())\npole = list()\nmin_i, min_j, max_i, max_j = n, m, -1, -1\ncount_B = 0\n\nfor i in range(n):\n    pole += [input()]\n    for j in range(m):\n        t = pole[i][j]\n        if t == 'B':\n            count_B += 1\n            min_i, min_j, max_i, max_j = min(i, min_i), min(j, min_j), max(i, max_i), max(j, max_j)\n\nd_i, d_j = max_i - min_i, max_j - min_j\nside = max(d_i + 1, d_j + 1)\n\nprint(1) if count_B == 0 else print(side ** 2 - count_B) if side <= min(n, m) else print(-1)\n", "n,m=list(map(int,input().split()))\nls=[]\nfor i in range(n):\n    l=list(str(input()))\n    ls.append(l)\nminr=1000\nmaxr=-1\nminc=1000\nmaxc=-1\nc=0\nfor i in range(n):\n    for j in range(m):\n        if ls[i][j]=='B':\n            c+=1\n            if minr>i:\n                minr=i\n            if maxr<i:\n                maxr=i\n            if minc>j:\n                minc=j\n            if maxc<j:\n                maxc=j\nif c==0:\n    print(1)\n    return\nelif c==1:\n    print(0)\n    return\nelse:\n    a=max(maxr-minr+1,maxc-minc+1)\n    if a>m or a>n:\n        print(-1)\n        return\n    else:\n        print(a*a-c)\n        return\n", "n, m = list(map(int, input().split()))\nL = [input() for _ in range(n)]\nC = [[0 for _ in range(m)] for _ in range(n)]\nx1, y1 = 500, 500\nx2, y2 = -1, -1\nfor i in range(n):\n    sa = 0\n    for j in range(m):\n        if L[i][j] == 'B':\n            x1 = min(i, x1)\n            x2 = max(i, x2)\n            y1 = min(j, y1)\n            y2 = max(j, y2)\n            sa += 1\n        if i > 0:\n            C[i][j] += C[i-1][j]\n        C[i][j] += sa\nif x2 == -1:\n    print(1)\nelse:\n    a = max(x2-x1, y2-y1)\n    ans = 1000000\n    for i in range(n):\n        for j in range(m):\n            if i + a < n and j + a < m and i <= x1 and x2 <= i + a and j <= y1 and y2 <= j + a:\n                s = C[i+a][j+a]\n                if i > 0:\n                    s -= C[i-1][j]\n                if j > 0:\n                    s -= C[i][j-1]\n                if i > 0 and j > 0:\n                    s -= C[i-1][j-1]\n                ans = min((a+1)*(a+1) - s, ans)\n    if ans == 1000000:\n        ans = -1\n    print(ans)\n\n", "s = input().split(' ')\nn = int(s[0])\nm = int(s[1])\nans = -1\nup = n\ndown = 0\nleft = m\nright = 0\nhave = 0\nfor i in range(n):\n    s = input()\n    for j in range(m):\n        if s[j] == 'B':\n            have += 1\n            up = min(up,i)\n            down = max(down,i)\n            left  = min(left,j)\n            right = max(right,j)\n\nif have == 0:\n    print(1)\nelse:\n    if up <= down and left <= right:\n        l = max(down - up + 1,right - left + 1)\n        if l<= min(n,m):\n            print(l*l - have)\n        else:\n            print(-1)\n", "def min_squares(canvas, length, width):\n    def find_top():\n        for i in range(length):\n            for j in range(width):\n                if canvas[i][j] == \"B\":\n                    return i\n        return -1\n\n    def find_left():\n        for j in range(width):\n            for i in range(length):\n                if canvas[i][j] == \"B\":\n                    return j\n\n    def find_bottom():\n        for i in reversed(list(range(length))):\n            for j in range(width):\n                if canvas[i][j] == \"B\":\n                    return i\n\n    def find_right():\n        for j in reversed(list(range(width))):\n            for i in range(length):\n                if canvas[i][j] == \"B\":\n                    return j\n\n    t = find_top()\n    if t == -1:\n        return 1\n    l = find_left()\n    b = find_bottom()\n    r = find_right()\n\n    # print(t, l, b, r)\n    painted = 0\n    for i in range(t, b + 1):\n        for j in range(l, r + 1):\n            if canvas[i][j] == \"W\":\n                painted += 1\n\n    while(b - t < r - l):\n        if t > 0:\n            t -= 1\n            painted += r - l + 1\n        elif b < length - 1:\n            b += 1\n            painted += r - l + 1\n        else:\n            return -1\n\n    while(r - l < b - t):\n        if l > 0:\n            l -= 1\n            painted += b - t + 1\n        elif r < width - 1:\n            r += 1\n            painted += b - t + 1\n        else:\n            return -1\n\n    return painted\n\n\ndef __starting_point():\n    l, w = list(map(int, input().split()))\n    canvas = []\n    for _ in range(l):\n        canvas.append(input())\n    print(min_squares(canvas, l, w))\n\n__starting_point()", "n, m = [int(s) for s in input().split()]\ng = [[0 for i in range(m)] for j in range(n)]\nsum = 0\ntop = n-1\nbottom = 0\nleft = m-1\nright = 0\nfor i in range(n):\n    f = str(input())\n    for j in range(m):\n        if f[j]  == 'B':\n            sum += 1\n            top = min(top, i)\n            bottom = max(bottom, i)\n            left = min(left, j)\n            right = max(right, j)\nif sum == 0:\n    print(1)\nelse:\n    a = max(right - left + 1, bottom - top + 1)\n    if a>n or a>m:\n        print(-1)\n    else:\n        print(a**2 - sum)\n", "def polycarp(n, m, l):\n    left = min(l).find(\"B\")\n    if left == -1:\n        return 1\n    right = m - min([x[::-1] for x in l]).find(\"B\") - 1\n    top = bottom = -1\n    for i in range(n):\n        if l[i].find(\"B\") != -1:\n            top = i\n            break\n    for i in range(n - 1, -1, -1):\n        if l[i].find(\"B\") != -1:\n            bottom = i\n            break\n    w = right - left + 1\n    h = bottom - top + 1\n    if w > n or h > m:\n        return -1\n    r = 0\n    for i in range(top, bottom + 1):\n        for j in range(left, right + 1):\n            if l[i][j] == \"W\":\n                r += 1\n    if w > h:\n        r += (w - h) * w\n    else:\n        r += (h - w) * h\n    return r\n\n\nn, m = list(map(int, input().strip().split()))\nl = list()\nfor i in range(n):\n    l.append(input().strip())\nprint(polycarp(n, m, l))", "n, m = list(map(int,input().split()))\nq = [str(input()) for i in range(n)]\nk=0\nt=True\nu=0\nli=vi=n*m\npi=ni=0\nfor i in range(n):\n    t=False\n    u=0\n    for j in q[i]:\n        if j=='B':\n            if u<li:\n                li=u\n            if u>pi:\n                pi=u\n            if i<vi:\n                vi=i\n            if i>ni:\n                ni=i\n            k+=1\n        u+=1\nif (max(ni-vi, pi-li)+1)>n or (max(ni-vi, pi-li)+1)>m:\n    print(-1)\nelif k==0:\n    print(1)\nelse:\n    print((max(ni-vi, pi-li)+1)**2-k)\n", "def __starting_point():\n    n, m = list(map(int, input().split()))\n    matrix = list()\n    minR = n; minC = m; maxR=maxC=0\n    count = 0\n    for i in range(n):\n        s = input()\n        for j in range(m):\n            if s[j] == 'B':\n                minR = min(minR, i)\n                maxR = max(maxR, i)\n                minC = min(minC, j)\n                maxC = max(maxC, j)\n                count += 1\n    edge = max(maxR-minR+1, maxC-minC+1)\n    if count == 0:\n        print(1)\n    elif edge > n or edge > m:\n        print(-1)\n    else:\n        print(edge*edge-count)\n    \n\n__starting_point()", "n,k=list(map(int,input().split(' ')))\nb=[]\nr=[]\nc=[]\n\nfor i in range (n):\n  b.append(input())\nfor i in range(n):\n  for j in range(k):\n    if b[i][j]=='B':\n      \n      r.append(i)\n      c.append(j)\n\nif len(c)==0:\n  print(1)\nelse:\n  maxr=max(r)-min(r)\n  maxc=max(c)-min(c)\n  size=max(maxc,maxr)+1\n  if (size>n or size>k):\n    print(-1)\n  else:\n    print(size**2-len(c))\n    \n"]