["def gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n\ndef gcda(a):\n    ans = a[0]\n    for i in range(1, len(a)):\n        ans = gcd(a[i], ans)\n    return ans\n\nn = int(input())\na = list(map(int, input().split()))\nif 1 in a:\n    print(sum([1 for i in a if i != 1]))\n    return\n    \nif gcda(a) != 1:\n    print(-1)\n    return\n\nmr=n+1\nfor i in range(n):\n    g = a[i]\n    for j in range(i+1, n):\n        g = gcd(g, a[j])\n        if g == 1:\n            mr = min(mr, j-i)\n            break\n            \nprint(mr + n - 1)    ", "n = int(input())\n\nl1 = list( map( int, input().split()))\n\nflag = -1\nsz = n-l1.count(1)\n\nif (n - sz) > 0:\n    flag = sz\nimport math\n\nfor j in range(n):\n    if flag != -1:\n        break\n    if l1.count(1) > 0:\n        flag = j + sz - 1\n        break\n\n    for i in range(n-1):\n        l1[i] = math.gcd(l1[i], l1[i+1])\n\n    l1.pop()\n    n -= 1\n\nprint(flag)", "from math import gcd\n\nn = int(input())\na = list(map(int, input().split()))\n\nd = n\ni = -1\nv = a[0]\n\nfor j in range(n):\n\t# forward\n\tv = gcd(v, a[j])\n\tif v == 1:\n\t\tv = a[j]\n\t\t# backward\n\t\tfor k in range(j, i, -1):\n\t\t\tv1 = gcd(v, a[k])\n\t\t\tif v1 == 1:\n\t\t\t\td = min(d, j - k)\n\t\t\t\ti = k\n\t\t\t\tbreak\n\t\t\tv = v1\n\nif d == 0:\n\tans = n - a.count(1)\nelif d < n:\n\tans = d - 1 + n - a.count(1)\nelse:\n\tans = -1\n\t\nprint(ans)", "from math import gcd\nn = int(input())\narr = list(map(int, input().split()))\nones = arr.count(1)\nif ones > 0:\n    print(n - ones)\nelse:\n    gcds = [[0] * n for i in range(n)]\n    for i in range(n):\n        gcds[i][i] = arr[i]\n    seglen = 10000\n    for i in range(n + 1):\n        for j in range(i + 1, n):\n            gcds[i][j] = gcd(gcds[i][j - 1], arr[j])\n            if gcds[i][j] == 1:\n                seglen = min(seglen, j - i + 1)\n    if seglen == 10000:\n        print(-1)\n    else:\n        makeone = seglen - 1\n        ones = 1\n        res = makeone + n - ones\n        print(res)\n", "from math import gcd\n\nn=int(input())\na=list(map(int,input().split()))\nm=a.count(1)\nif m>0:\n    print(n-m)\n    return\nans=-1\nfor i in range(n):\n    d=a[i]\n    c=i\n    for j in range(i+1,n):\n        d=gcd(d,a[j])\n        if d==1:\n            c=j\n            break\n    if c>i:\n        if ans<0:\n            ans=c-i+n-1\n        else:\n            ans=min(ans,c-i+n-1)\nprint(ans)", "import sys\nimport fractions\n\nn = int(sys.stdin.readline())\ndata = list(map(int, sys.stdin.readline().split()))\n\none_count = 0\nfor v in data:\n    if v == 1:\n        one_count += 1\n\nif one_count > 0:\n    print(n - one_count)\nelse:\n    ans = -1\n    for i in range(0, n):\n        v = data[i]\n        for j in range(i + 1, n):\n            v = fractions.gcd(v, data[j])\n            if v == 1:\n                cand = j - i + n - 1\n                if ans == -1 or cand < ans:\n                    ans = cand\n    print(ans)\n", "n=int(input())\na=[int(i) for i in input().split()]\nfrom math import gcd\ng=a[:]\ndef solve(k):\n    for i in range(n-k):\n        g[i]=gcd(g[i],a[i+k])\n        if g[i]==1:\n            return k\n    return -1\nif n==1:\n    if a[0]==1:\n        print(0)\n    else:\n        print(-1)\nelif a.count(1)!=0:\n    print(n-a.count(1))\nelse:\n    for i in range(n):\n        cur=solve(i)\n        if cur==i:\n            print(n+cur-1)\n            break\n    else:\n        print(-1)\n", "from math import gcd\ndef solve(k,n,a,g): \n    for i in range(n-k):\n        g[i]=gcd(g[i],a[i+k])\n        if g[i]==1:\n            return k\n    return -1\ndef easy():\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    g=a[:]\n    if n==1:\n        if a[0]==1:\n            print(0)\n        else:\n            print(-1)\n    elif a.count(1)!=0:\n        print(n-a.count(1))\n    else:\n        for i in range(n):\n            cur=solve(i,n,a,g)\n            if cur==i:\n                print(n+cur-1)\n                break\n        else:\n            print(-1)\neasy()\n", "from math import gcd\nfrom functools import *\n@lru_cache(maxsize=None)\ndef gcd1(a,b):\n    return gcd(a,b)\ndef solve(k,n,a,g): \n    for i in range(n-k):\n        g[i]=gcd1(g[i],a[i+k])\n        if g[i]==1:\n            return k\n    return -1\ndef easy():\n    n=int(input())\n    a=[int(i) for i in input().split()]\n    g=a[:]\n    if n==1:\n        if a[0]==1:\n            print(0)\n        else:\n            print(-1)\n    elif a.count(1)!=0:\n        print(n-a.count(1))\n    else:\n        for i in range(n):\n            cur=solve(i,n,a,g)\n            if cur==i:\n                print(n+cur-1)\n                break\n        else:\n            print(-1)\neasy()\n", "from fractions import gcd\nn = int(input())\na = [int(z) for z in input().split()]\ncnt = 0\nfor i in range(n):\n    if a[i] == 1:\n        cnt += 1\nif cnt > 0:\n    print(n - cnt)\n    return\nminlen = 1000000000\nfor l in range(n):\n    cur = a[l]\n    for r in range(l + 1, n):\n        cur = gcd(cur, a[r])\n        if cur == 1:\n            minlen = min(minlen, r - l)\n            \nif minlen == 1000000000:\n    print(-1)\nelse:\n    print(minlen + n - 1)", "import math\nn = int(input())\nl = list(map(int, input().split()))\n\nif l.count(1): print(n - l.count(1))\nelse:\n\ttmp1 = n+1\n\tfor i in range(n):\n\t\ttmp2 = l[i]\n\t\tfor j in range(n-i):\n\t\t\ttmp2 = math.gcd(tmp2,l[i+j])\n\t\t\tif (tmp2 == 1): tmp1 = min(tmp1,j)\n\tif (tmp1==n+1): print(\"-1\")\n\telse: print(tmp1+n-1)", "n = int(input())\nl = list(map(int, input().split()))\ncnt1 = l.count(1)\nif 0 < cnt1:\n\tprint(n - cnt1)\n\treturn\nimport math\nm = n + 1\nfor i in range(n):\n\tg = l[i]\n\tfor j in range(n - i):\n\t\tg = math.gcd(g, l[i + j])\n\t\tif g == 1:\n\t\t\tm = min(m, j)\n\nif m == n + 1:\n\tprint(-1)\nelse:\n\tprint(m + n - 1)", "def gcd(a: int, b: int): return gcd(b, a % b) if b else a\n\nnb = int(input())\ns = input()\nnumbers = [int(i) for i in s.split(\" \")]\nnumber = -1\n\nflag = True\n\nop = 0\n\ndef count1(s):\n    res = 0\n    for i in s:\n        if i == 1:\n            res += 1\n    return res\n\nif nb == 1:\n    if numbers[0] == 1:\n        print(0)\n    else:\n        print(-1)\nelse:\n    while op < 2010:\n        new = []\n        for i in range(0, len(numbers) - 1):\n            g = gcd(numbers[i], numbers[i + 1])\n            if g == 1:\n                number = nb + op - count1(numbers)\n                numbers = []\n                print(number)\n                return\n            else:\n                new.append(g)\n\n        numbers = new\n        op += 1\n\n    print(number)", "import math\n\ndef main():\n    n = int(input())\n    A = list(map(int, input().split()))\n    tmp = A[0]\n    oneCnt = 0\n    for i in A:\n        tmp = math.gcd(tmp, i)\n        oneCnt += (i == 1)\n    if tmp != 1:\n        print(-1)\n        return\n    if oneCnt > 0:\n        print(n - oneCnt)\n        return\n    ans = 10 ** 8\n    for i in range(n):\n        tmp = A[i]\n        for j in range(i, n):\n            tmp = math.gcd(tmp, A[j])\n            if tmp == 1:\n                ans = min(ans, j - i)\n    print(ans + n - 1)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import gcd\n\n\nn = int(input())\na = [int(i) for i in input().split()]\ncont = a.count(1)\nif cont == 0:\n  dp = [[0 for _ in range(n+1)] for i in range(n+1)]\n  for i in range(1, n+1):\n    dp[i][i] = a[i-1]\n  ans = 1e9\n  for i in range(1, n+1):\n    for j in range(i+1, n+1):\n      dp[i][j] = gcd(dp[i][j-1], a[j-1])\n      if dp[i][j] == 1:\n        ans = min(ans, j-i)\n  if ans == 1e9:\n    print(-1)\n  else:\n    print(n-1+ans)\nelse:\n  print(n-cont)", "def gcd(a,b):\n    return b if a==0 else gcd(b%a,a)\n\ndef fun():\n    if r :\n        return n-r\n    for i in range(1,n):\n        for j in range(n):\n            if j+i>=n :\n                break\n            a[j]=gcd(a[j],a[j+1])\n            if a[j]==1:\n                return i+n-1\n    return -1\n\nn=int(input())\na=list(map(int,input().split()))\nr = 0\nfor i in range(n) :\n    if a[i]==1:\n        r+=1\nprint(fun())\n", "import math\n\ndef nextfront(i, N, T):\n\tdiv = T[i]\n\tfor j in range(i + 1, N):\n\t\tdiv = math.gcd(div, T[j])\n\t\tif div == 1:\n\t\t\treturn j\n\treturn -1\n\n\ndef nextback(k, N, T):\n\tdiv = T[k]\n\tfor j in range(k - 1, -1):\n\t\tdiv = math.gcd(div, T[j])\n\t\tif div == 1:\n\t\t\treturn j\n\treturn -1\n\n\ndef qtduns(T, N):\n\tresp = 0\n\tfor i in range(N):\n\t\tif T[i] == 1:\n\t\t\tresp+=1\n\treturn resp\n\n\ndef main():\n\tN = int(input())\n\tT = [int(i) for i in input().split()]\n\tx = qtduns(T, N)\n\tif x > 0:\n\t\tprint(N - x)\n\t\treturn\n\tl = N + 1\n\ti = 0\n\tk = N + 1\n\tflag = False\n\twhile i != N and l != 2:\n\t\t#print(i, k, l)\n\t\tdiv = T[i]\n\t\tfor j in range(i + 1, N):\n\t\t\tdiv = math.gcd(div, T[j])\n\t\t\tif div == 1:\n\t\t\t\tl = min(l, j - i + 1)\n\t\t\t\tk = j\n\t\t\t\t#print(\" \", i, j, l)\n\t\t\t\tbreak\n\t\tif div != 1:\n\t\t\tflag = True\n\t\t\tk = N - 1\n\t\tdiv = T[k]\n\t\tfor j in range(k - 1, i - 1):\n\t\t\tdiv = math.gcd(div, T[j])\n\t\t\tif div == 1:\n\t\t\t\tl = min(l, k - j + 1)\n\t\t\t\t#print(\"  \", j, k, l)\n\t\t\t\tbreak\n\t\tif flag:\n\t\t\tbreak\n\t\telse:\n\t\t\ti = k - l + 2\n\tif l == N + 1:\n\t\tprint(-1)\n\telse:\n\t\tprint(N + l - 2)\n\n\nmain()\n\n# 1511548364391\n", "from math import gcd\nn = int(input())\nl = [int(i) for i in input().split(\" \")]\n\nx = l.count(1)\n\nresult = 10e9 + 5\nif x > 0:\n    print(n - x)\n    return\nfor L in range(n - 1):\n    temp = l[L]\n    for R in range(L + 1, n):\n        temp = gcd(temp, l[R])\n        if temp == 1:\n            r = R - L\n            result = min(result, r)\nif result == 10e9 + 5:\n    print(-1)\nelse:\n    print(n + result - 1)", "from math import gcd\n\n\ndef main():\n    n = int(input())\n    a = b = list(map(int, input().split()))\n    if 1 in b:\n        print(n - b.count(1))\n        return\n    while b:\n        b = [gcd(*p) for p in zip(a, b[1:])]\n        if 1 in b:\n            print(n * 2 - len(b) - 1)\n            return\n    print(-1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nn = int(input())\na = list(map(int, input().split(\" \")))\nd = 0\n\ncount1 = 0\nfor _ in a:\n\td = math.gcd(d, _)\n\tif _ == 1:\n\t\tcount1 += 1\nif d != 1:\n\tprint(-1)\n\nelif count1 > 0:\n\tprint(n-count1)\nelse:\n\tmi = math.inf\n\tfor i in range(len(a)-1):\n\t\tdd = a[i]\n\t\tfor j in range(i+1, len(a)):\n\t\t\tdd = math.gcd(dd, a[j])\n\t\t\tif dd == 1:\n\t\t\t\tmi = min(mi, j-i+n-1)\n\n\tprint(mi)\n\n", "from math import gcd\nn = int(input())\narr = list(map(int,input().split()))\n\ndef getans():\n\tcnt1s = arr.count(1)\n\tif cnt1s>0: return n-cnt1s\n\tminlen = n\n\tfor i in range(n):\n\t\tg = arr[i]\n\t\tfor j in range(i+1,n):\n\t\t\tg = gcd(g,arr[j])\n\t\t\tif g==1:\n\t\t\t\tminlen = min(minlen,j-i)\n\t\t\t\tbreak\n\tif minlen==n: return -1\n\treturn (minlen+n-1)\n\nprint(getans())", "n=int(input())\nl=list(map(int,input().split()))\ncnt=l.count(1)\nif cnt>0:\n    print(n-cnt)\n    return\nimport math\nm=n+1\nfor i in range(n):\n    g=l[i]\n    for j in range(n-i):\n        g=math.gcd(g,l[i+j])\n        if g==1:\n            m=min(m,j)\nif m==n+1:\n    print(-1)\nelse:\n    print(m+n-1)\n", "import math\n\nn = int(input())\nlist_ = list(map(int, input().split()))\nif 1 in list_:\n    print(n - list_.count(1))\nelse:\n    result = n + 1\n    for i in range(n):\n        cnt = 0\n        gcd = list_[i]\n        for j in range(n - i):\n            gcd = math.gcd(gcd, list_[i + j])\n            if gcd == 1:\n                result = min(result, cnt)\n            cnt += 1\n    if result == n + 1:\n        print(-1)\n    else:\n        print(result + n - 1)\n", "import math\n\nn = int(input())\nlist_ = list(map(int, input().split()))\nif 1 in list_:\n    print(n - list_.count(1))\nelse:\n    result = n + 1\n    for i in range(n):\n        cnt = 0\n        gcd = list_[i]\n        for j in range(n - i):\n            gcd = math.gcd(gcd, list_[i + j])\n            if gcd == 1:\n                result = min(result, cnt)\n                if result == 1:\n                    break\n            cnt += 1\n    if result == n + 1:\n        print(-1)\n    else:\n        print(result + n - 1)\n", "n = int(input())\n\nl = list(map(int, input().split()))\n\ncnt1 = l.count(1)\n\nif 0 < cnt1:\n\n\tprint(n - cnt1)\n\n\treturn\n\nimport math\n\nm = n + 1\n\nfor i in range(n):\n\n\tg = l[i]\n\n\tfor j in range(n - i):\n\n\t\tg = math.gcd(g, l[i + j])\n\n\t\tif g == 1:\n\n\t\t\tm = min(m, j)\n\n\n\nif m == n + 1:\n\n\tprint(-1)\n\nelse:\n\n\tprint(m + n - 1)\n\n\n\n# Made By Mostafa_Khaled\n"]