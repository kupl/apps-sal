["import sys\ninput=sys.stdin.readline\nfrom collections import defaultdict\n\ndef solve(n,A):\n    d=defaultdict(int)\n    for a in A:\n        d[a]+=1\n    flag=True\n    for v in d.values():\n        if v%2!=0:\n            flag=False\n            break\n    return bool(n%2)^flag\n\ndef main():\n    t=int(input())\n    for _ in range(t):\n        n=int(input())\n        A=list(map(int,input().split()))\n        judge=solve(n,A)\n        print('Second' if judge else 'First')\n    \ndef __starting_point():\n    main()\n__starting_point()", "T = int(input())\nwhile(T):\n  T -= 1\n  N = int(input())\n  L = sorted(list(map(int,input().split())))\n  if( N & 1 ):\n    print(\"Second\")\n    continue\n  for j in range (N // 2):\n    if L[ 2 * j ] != L[ 2 * j + 1 ]:\n      print(\"First\")\n      break\n    if( j + 1 == N // 2 ):\n      print(\"Second\")", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    a=list(map(int,input().split()))\n    if n%2:\n        print(\"Second\")\n        continue\n    d=dict()\n    for num in a:\n        if num not in d:\n            d[num]=1\n        else:\n            d[num]+=1\n    ok=True\n    for num in d:\n        if d[num]%2:\n            ok=False\n    if ok:\n        print(\"Second\")\n    else:\n        print(\"First\")", "T=int(input())\nfor testcase in range(T):\n    N=int(input())\n    a=[int(i) for i in input().split()]\n    a.sort()\n    if N%2==0:\n        flag=1\n        for i in range(N//2):\n            if a[2*i]!=a[2*i+1]:\n                flag=0\n                break\n        if flag:\n            print(\"Second\")\n        else:\n            print(\"First\")\n    else:\n        print(\"Second\")\n        \n", "from collections import Counter\nT = int(input())\nD = {0: 'First', 1: 'Second'}\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 == 1:\n        print((D[1]))\n    else:\n        C = Counter(A)\n        # print(C)\n        for c in C:\n            if C[c] % 2 == 1:\n                print((D[0]))\n                break\n        else:\n            print((D[1]))\n", "t = int(input())\nfor i in range(t):\n  n = int(input())\n  l=sorted(list(map(int,input().split())))\n  if n%2:\n    print(\"Second\")\n    continue\n  \n  enda = False\n  for j in range(n//2):\n    if l[2*j]!=l[2*j+1]:\n      print(\"First\")\n      enda = True\n      break\n  if enda:\n    continue\n  print(\"Second\")", "from collections import Counter\nT=int(input())\nfor i in range(T):\n    N=int(input())\n    a=list(map(int,input().split()))\n    if N%2==1:\n        #fir\u306fnim=0\u3092sec\u306fnim!=0\u3092\u76ee\u6307\u3059\u3002\n        #\u3053\u3053\u3067\u6700\u521dfir\u306f\u4e00\u3064\u30b3\u30a4\u30f3\u306e\u5c71\u3092\u3064\u304f\u308b\u306e\u3067\u3001sec\u306f\u3067\u304d\u3066\u3044\u308b\u30b3\u30a4\u30f3\u306e\u5c71\u306b\u73fe\u5b58\u3059\u308b\u6700\u5927\u5024\u3092\u653e\u308a\u8fbc\u307f\u7d9a\u3051\u308c\u3070\n        #\u305d\u306e\u4e00\u3064\u306e\u5c71\u3092\u7121\u9650\u306b\u6700\u5927\u5316\u3067\u304d\u3001nim!=0\u3092\u4fdd\u8a3c\u3067\u304d\u308b\u3002\n        print(\"Second\")\n    else:\n        #fir\u306fnim!=0\u3092sec\u306fnim=0\u3092\u76ee\u6307\u3059\u3002\n        #fir\u306f\u6700\u521d\u30d5\u30e9\u30c3\u30c8\u306a\u72b6\u614b\u306b\u906d\u9047\u3057\u3001\u30b3\u30a4\u30f3\u306e\u5c71\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\u3057\u304b\u3057\u3001\u4e00\u5ea6sec\u304c\u30b3\u30a4\u30f3\u3092\u7f6e\u3044\u3066\u5747\u8861\u3092\u5d29\u3059\u3053\u3068\u306b\u306a\u308c\u3070\u3001\n        #fir\u306f\u3067\u304d\u3066\u3044\u308b\u30b3\u30a4\u30f3\u306e\u5c71\u306b\u73fe\u5b58\u3059\u308b\u6700\u5927\u5024\u3092\u653e\u308a\u8fbc\u307f\u7d9a\u3051\u308c\u3070\u3001\u305d\u306e\u4e00\u3064\u306e\u5c71\u3092\u7121\u9650\u306b\u6700\u5927\u5316\u3067\u304d\u3001nim!=0\u3092\u4fdd\u8a3c\u3067\u304d\u308b\u3002\n        #\u4ed6\u65b9\u3067\u304d\u306a\u3044\u6642\u306f\u5ef6\u3005\u306b\u5747\u8861\u304c\u5d29\u308c\u306a\u3044\u6642\u3001\u3064\u307e\u308a\u540c\u3058\u30b3\u30a4\u30f3\u306e\u888b\u304c\u5076\u6570\u500b\u3042\u308b\u3068\u304d\u306e\u307f\u3068\u306a\u308b\u3002\n        flag=0\n        c=Counter(a)\n        val=list(c.values())\n        for j in val:\n            if j%2==1:\n                flag=1\n                break\n        if flag==1:\n            print(\"First\")\n        else:\n            print(\"Second\")\n", "import sys\nfrom collections import defaultdict\ndef I(): return int(sys.stdin.readline().rstrip())\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  #\u7a7a\u767d\u3042\u308a\n\n\nT = I()\nfor _ in range(T):\n    N = I()\n    A = LI()\n    if N % 2 == 1:\n        print('Second')\n    else:\n        d = defaultdict(int)\n        for a in A:\n            d[a] += 1\n        X = list(d.values())\n        for x in X:\n            if x % 2 == 1:\n                print('First')\n                break\n        else:\n            print('Second')\n", "import sys, math\nimport io, os\n#data = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom bisect import bisect_left as bl, bisect_right as br, insort\nfrom heapq import heapify, heappush, heappop\nfrom collections import defaultdict as dd, deque, Counter\n#from itertools import permutations,combinations\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\ndef outl(var) : sys.stdout.write('\\n'.join(map(str, var))+'\\n')\ndef out(var) : sys.stdout.write(str(var)+'\\n')\n#from decimal import Decimal\n#from fractions import Fraction\n#sys.setrecursionlimit(100000)\nINF = float('inf')\nmod=10**9+7\n\n\nfor t in range(int(data())):\n    n=int(data())\n    a=mdata()\n    if n%2==1:\n        out('Second')\n    else:\n        a.sort()\n        k=1\n        for i in range(n//2):\n            if a[2*i]!=a[2*i+1]:\n                out('First')\n                k=0\n                break\n        if k:\n            out('Second')", "from collections import Counter\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    cntr = Counter(int(c) for c in input().split(' '))\n    ans = any(v % 2 for v in list(cntr.values())) ^ (N % 2)\n    print(('First' if ans else 'Second'))\n", "import sys\n\nsys.setrecursionlimit(10 ** 8)\n\ninput = sys.stdin.readline\n\nimport collections\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        N = int(input())\n        A = [int(x) for x in input().split()]\n\n        if N == 1:\n            print(\"Second\")\n            continue\n\n        c = collections.Counter(A)\n\n        f = True\n        for k in list(c.keys()):\n            if c[k] % 2 == 1:\n                f = False\n                break\n\n        if f or N % 2 == 1:\n            print(\"Second\")\n        else:\n            print(\"First\")\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import Counter\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print(\"Second\")\n    elif all(i % 2 == 0 for i in Counter(a).values()):\n        print(\"Second\")\n    else:\n        print(\"First\")", "import collections\n\nt=int(input())\nfor _ in range(t):\n  n=int(input())\n  arr=list(map(int,input().split()))\n  cnt=collections.Counter(arr)\n  if n%2==1:\n    print('Second')\n  else:\n    for val in cnt.values():\n      if val%2==1:\n        print('First')\n        break\n    else:\n      print('Second')", "import sys\nfrom collections import Counter\n\ninput = sys.stdin.readline\n\nfor _ in range(int(input())):\n    N = int(input())\n    A = list(map(int, input().split()))\n    if N % 2 == 1:\n        print(\"Second\")\n        continue\n\n    c = Counter(A)\n    if max(v % 2 for v in list(c.values())) == 0:\n        print(\"Second\")\n    else:\n        print(\"First\")\n", "from collections import Counter\n\ndef solve(n,a):\n  n %= 2\n  c = Counter(a)\n  flag = 0\n  for k in c.keys():\n    if c[k] % 2 == 1:\n      flag = 1\n      break\n  print('First' if flag + n == 1 else 'Second')\n  \nT = int(input())\nfor i in range(T):\n  N=int(input())\n  *A,=map(int,input().split())\n  solve(N,A)", "\"\"\"\n\u76bf\u30d5\u30a7\u30fc\u30ba\u306f\u666e\u901a\u306eNim\u30b2\u30fc\u30e0\u306a\u306e\u3067\u3001\n\u76bf\u30d5\u30a7\u30fc\u30ba\u958b\u59cb\u6642\u70b9\uff1d\u888b\u30d5\u30a7\u30fc\u30ba\u7d42\u4e86\u6642\u70b9\u3067Grundy\u6570=XOR\u306e\u7dcf\u548c\u304c0\u306b\u306a\u308b\u304b0\u4ee5\u5916\u306b\u306a\u308b\u304b\u304c\u91cd\u8981\u3002\nN\u304c\u5947\u6570\u306e\u3068\u304d\u3001\u5148\u624b\u306f\u888b\u30d5\u30a7\u30fc\u30ba\u7d42\u4e86\u6642\u70b9\u3067XOR\u306e\u7dcf\u548c\u30920\u306b\u3057\u305f\u3044\u3002\u4e00\u65b9\u3067\u5f8c\u624b\u306f0\u4ee5\u5916\u306b\u3057\u305f\u3044\u3002\n\u3053\u3053\u3067\u3001\u5f8c\u624b\u306f\u5fc5\u305a0\u4ee5\u5916\u306b\u3067\u304d\u308b\u3002\u5148\u624b\u304c\u6700\u521d\u306b\u30b3\u30a4\u30f3\u3092\u7f6e\u3044\u305f\u3055\u3089\u306b\u5bfe\u3057\u3066\u3001\u4e2d\u306e\u30b3\u30a4\u30f3\u304c\u591a\u3044\u888b\u304b\u3089\u9806\u306b\u7a4d\u3093\u3067\u3044\u3051\u3070\n\u5fc5\u305a\u5168\u4f53\u306e\u904e\u534a\u6570\u4ee5\u4e0a\u306e\u5c71\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u904e\u534a\u6570\u3092\u8d85\u3048\u3066\u3044\u308b\u5c71\u304c\u3042\u308c\u3070\u5fc5\u305aXOR\u7dcf\u548c\u306f0\u4ee5\u5916\u306b\u306a\u308b\u3002\n\n\u4e00\u65b9N\u304c\u5076\u6570\u306e\u5834\u5408\u3001\u5148\u624b\u306f\u888b\u30d5\u30a7\u30fc\u30ba\u7d42\u4e86\u6642\u70b9\u3067XOR\u306e\u7dcf\u548c\u30920\u4ee5\u5916\u306b\u3057\u305f\u3044\u3002\u4e00\u65b9\u3067\u5f8c\u624b\u306f0\u306b\u3057\u305f\u3044\u3002\n\u3053\u3053\u3067\u3001\u5148\u307b\u3069\u3068\u540c\u69d8\u306e\u3084\u308a\u304b\u305f\u3067\u5148\u624b\u306f\u5fc5\u305a\u904e\u534a\u6570\u4ee5\u4e0a\u306e\u5c71\u3092\u3064\u304f\u308a\u3001XOR\u30920\u4ee5\u5916\u306b\u3067\u304d\u308b\u3002\n\u305f\u3060\u3057\u30011\u30d1\u30bf\u30fc\u30f3\u3060\u3051\u4f8b\u5916\u304c\u3042\u308b\u3002\u540c\u3058\u679a\u6570\u306e\u30b3\u30a4\u30f3\u304c\u5165\u3063\u305f\u888b\u304c\u305d\u308c\u305e\u308c\u5076\u6570\u500b\u3060\u3051\u3042\u308b\u5834\u5408\u3067\u3042\u308b\u3002\n\u3053\u306e\u3068\u304d\u5f8c\u624b\u306f\u5148\u624b\u306e\u9078\u3093\u3060\u888b\u3092\u30df\u30e9\u30fc\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u3067XOR\u7dcf\u548c\u30920\u306b\u3067\u304d\u308b\u3002\n\"\"\"\nfrom collections import Counter\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int,input().split()))\n    if N&1:\n        print(\"Second\")\n    else:\n        for v in list(Counter(A).values()):\n            if v&1:\n                print(\"First\")\n                break\n        else:\n            print(\"Second\")\n", "i=input\nt=int(i())\nfor _ in range(t):\n  n=int(i())\n  a=sorted(map(int,i().split()))\n  print('First' if n%2^(a[::2]!=a[1::2]) else 'Second')", "#!/usr/bin/env python\n# coding: utf-8\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(input().split())\n\ndef rli():\n    return list(map(int, input().split()))\n\ndef main():\n    t = ri()\n    for i in range(t):\n        n = ri()\n        la = rli()\n        if n % 2 == 1:\n            print(\"Second\")\n            continue\n        count = {}\n        for a in la:\n            count.setdefault(a, 0)\n            count[a] += 1\n        ok = True\n        for v in list(count.values()):\n            if v % 2 == 1:\n                ok = False\n                break\n        if ok:\n            print(\"Second\")\n        else:\n            print(\"First\")\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\n#############\n# Libraries #\n#############\n\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\n\nimport math\n#from math import gcd\nimport bisect\nimport heapq\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nfrom functools import lru_cache\n\n#############\n# Constants #\n#############\n\nMOD = 10**9+7\nINF = float('inf')\nAZ = \"abcdefghijklmnopqrstuvwxyz\"\n\n#############\n# Functions #\n#############\n\n######INPUT######\ndef I(): return int(input().strip())\ndef S(): return input().strip()\ndef IL(): return list(map(int,input().split()))\ndef SL(): return list(map(str,input().split()))\ndef ILs(n): return list(int(input()) for _ in range(n))\ndef SLs(n): return list(input().strip() for _ in range(n))\ndef ILL(n): return [list(map(int, input().split())) for _ in range(n)]\ndef SLL(n): return [list(map(str, input().split())) for _ in range(n)]\n\n\n#####Shorten#####\ndef DD(arg): return defaultdict(arg)\n\n#####Inverse#####\ndef inv(n): return pow(n, MOD-2, MOD)\n\n######Combination######\nkaijo_memo = []\ndef kaijo(n):\n  if(len(kaijo_memo) > n): return kaijo_memo[n]\n  if(len(kaijo_memo) == 0): kaijo_memo.append(1)\n  while(len(kaijo_memo) <= n): kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n  return kaijo_memo[n]\n\ngyaku_kaijo_memo = []\ndef gyaku_kaijo(n):\n  if(len(gyaku_kaijo_memo) > n): return gyaku_kaijo_memo[n]\n  if(len(gyaku_kaijo_memo) == 0): gyaku_kaijo_memo.append(1)\n  while(len(gyaku_kaijo_memo) <= n): gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n  return gyaku_kaijo_memo[n]\n\ndef nCr(n,r):\n  if n == r: return 1\n  if n < r or r < 0: return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(r) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\n######Factorization######\ndef factorization(n):\n  arr = []\n  temp = n\n  for i in range(2, int(-(-n**0.5//1))+1):\n    if temp%i==0:\n      cnt=0\n      while temp%i==0: \n        cnt+=1 \n        temp //= i\n      arr.append([i, cnt])\n  if temp!=1: arr.append([temp, 1])\n  if arr==[]: arr.append([n, 1])\n  return arr\n\n#####MakeDivisors######\ndef make_divisors(n):\n  divisors = []\n  for i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n      divisors.append(i)\n      if i != n // i: \n        divisors.append(n//i)\n  return divisors\n\n#####MakePrimes######\ndef make_primes(N):\n  max = int(math.sqrt(N))\n  seachList = [i for i in range(2,N+1)]\n  primeNum = []\n  while seachList[0] <= max:\n    primeNum.append(seachList[0])\n    tmp = seachList[0]\n    seachList = [i for i in seachList if i % tmp != 0]\n  primeNum.extend(seachList)\n  return primeNum\n\n#####GCD#####\ndef gcd(a, b):\n    while b: a, b = b, a % b\n    return a\n\n#####LCM#####\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\n#####BitCount#####\ndef count_bit(n):\n  count = 0\n  while n:\n    n &= n-1\n    count += 1\n  return count\n\n#####ChangeBase#####\ndef base_10_to_n(X, n):\n  if X//n: return base_10_to_n(X//n, n)+[X%n]\n  return [X%n]\n\ndef base_n_to_10(X, n):\n  return sum(int(str(X)[-i-1])*n**i for i in range(len(str(X))))\n\ndef base_10_to_n_without_0(X, n):\n  X -= 1\n  if X//n: return base_10_to_n_without_0(X//n, n)+[X%n]\n  return [X%n]\n\n#####IntLog#####\ndef int_log(a, n):\n  count = 0\n  while n>=a:\n    n //= a\n    count += 1\n  return count\n\n#############\n# Main Code #\n#############\n\ndef solve():\n  N = I()\n  A = IL()\n  if N%2:\n    print(\"Second\")\n  else:\n    dic = DD(int)\n    for a in A:\n      dic[a] = 1-dic[a]\n    for k in dic:\n      if dic[k]:\n        print(\"First\")\n        return\n    print(\"Second\")\n\nT = I()\nfor _ in range(T):\n  solve()", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    if n & 1:\n        print(\"Second\")\n    else:\n        win = False\n        for k in a:\n            if a[k] & 1:\n                win = True\n                break\n        print(\"First\" if win else \"Second\")", "\nt = int(input())\nfor qi in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 1:\n        print(\"Second\")\n    else:\n        a.sort()\n        f = True\n        for i in range(0, n, 2):\n            if a[i] != a[i+1]:\n                f = False\n                print(\"First\")\n                break\n        if f:\n            print(\"Second\")\n                \n", "from collections import Counter\n\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = Counter(A)\n    \n    if N % 2 == 1:\n        ans = False\n    else:\n        if all(v % 2 == 0 for v in list(C.values())):\n            ans = False\n        else:\n            ans = True\n    win = 'First' if ans is True else 'Second'\n    print(win)\n\n", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 == 0:\n        cnt = dict()\n        for i in a:\n            if not i in cnt:\n                cnt[i] = 1\n            else:\n                cnt[i] += 1\n        ans = \"Second\"\n        for i in cnt:\n            if cnt[i] % 2 == 1:\n                ans = \"First\"\n                break\n    else:\n        ans = \"Second\"\n    print(ans)", "import collections\nt=int(input())\nfor i in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  if n%2==1:\n    print('Second')\n  else:\n    A=collections.Counter(a)\n    count=list(A.values())\n    f=0\n    for j in range(len(count)):\n      if count[j]%2==1:\n        f=1\n        break\n    if f==1:\n      print('First')\n    else:\n      print('Second')", "import sys,os,io\ninput = sys.stdin.readline\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nT = int(input())\nans = [0]*T\nfor t in range(T):\n  n = int(input())\n  A = list(map(int,input().split()))\n  A.sort()\n  if n%2==0:\n    ans[t] = 'Second'\n    for i in range(0,n,2):\n      if A[i]!=A[i+1]:\n        ans[t] = 'First'\n        break\n  else:\n    ans[t] = 'Second'\nprint(*ans, sep='\\n')", "I=input\nfor _ in range(int(I())):print(\"SFeicrosntd\"[int(I())&1^((a:=sorted(map(int,I().split())))[::2]!=a[1::2])::2])", "for a in[*open(0)][2::2]:print('SFeicrosntd'[len(a:=sorted(a.split()))%2^(a[::2]!=a[1::2])::2])", "import sys\nfrom functools import reduce\ninput = sys.stdin.readline\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    A = list(map(int,input().split()))\n    if N % 2 == 1:\n        print(\"Second\")\n    else:\n        A.sort()\n        for a,na in zip(A[::2],A[1::2]):\n            if not a == na:\n                break\n        else:\n            print(\"Second\")\n            continue\n        print(\"First\")\n\n\n", "from collections import Counter\n\nT = int(input())\nN = []\ncase = []\nfor _ in range(T):\n    N.append(int(input()))\n    case.append(list(map(int, input().split())))\n\nfor t in range(T):\n    if N[t] % 2 == 1:\n        print('Second')\n    else:\n        count = Counter(case[t])\n        if all([i % 2 == 0 for i in list(count.values())]):\n            print('Second')\n        else:\n            print('First')\n", "i=input\nt=int(i())\nfor _ in range(t):\n print('First' if int(i())%2^((a:=sorted(map(int,i().split())))[::2]!=a[1::2]) else 'Second')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n  n = int(input())\n  a = list(map(int,input().split()))\n  c = Counter(a)\n  flg = 1\n  for i in c.values():\n    if i%2:\n      flg = 0\n  if (flg+n)%2 == 0:\n    print(\"First\")\n  else:\n    print(\"Second\")", "#!python3.8\n# -*- coding: utf-8 -*-\n# arc105/arc105_d\nimport sys\nfrom collections import Counter\n\ndef s2nn(s): return [int(c) for c in s.split(' ')]\ndef ss2nn(ss): return [int(s) for s in list(ss)]\ndef ss2nnn(ss): return [s2nn(s) for s in list(ss)]\ndef i2s(): return sys.stdin.readline().rstrip()\ndef i2n(): return int(i2s())\ndef i2nn(): return s2nn(i2s())\ndef ii2ss(n): return [i2s() for _ in range(n)]\ndef ii2nn(n): return ss2nn(ii2ss(n))\ndef ii2nnn(n): return ss2nnn(ii2ss(n))\n\n\ndef case():\n    # N\u304c\u5947\u6570\u3067\u9006\u8ee2\n    N = i2n()\n    a = i2nn()\n    cntr = Counter(a)\n    ans = any(v % 2 for v in list(cntr.values())) ^ (N % 2)\n    print(('First' if ans else 'Second'))\n\n    \ndef main():\n    T = i2n()\n    for _ in range(T):\n        case()\n    return\n\nmain()\n", "import bisect, collections, copy, heapq, itertools, math, string\nimport sys\ndef I(): return int(sys.stdin.readline().rstrip())\ndef MI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef S(): return sys.stdin.readline().rstrip()\ndef LS(): return list(sys.stdin.readline().rstrip().split())\nfrom collections import deque, defaultdict, Counter\nimport heapq\nfrom functools import reduce\nfrom itertools import permutations\nimport math\nimport bisect\n\ndef main():\n    T = I()\n    for i in range(T):\n        N = I()\n        A = LI()\n        if N % 2 == 1:\n            print('Second')\n        else:\n            D = defaultdict(int)\n            for a in A:\n                D[a] += 1\n            flag = 0\n            for key in list(D.keys()):\n                if D[key] % 2 != 0:\n                    flag = 1\n                    break\n            if flag == 0:\n                print('Second')\n            else:\n                print('First')\ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nfrom collections import Counter\nfor _ in range(t):\n    n = int(input())\n    A = list(map(int,input().split()))\n    if n%2:\n        print('Second')\n    else:\n        cnt = Counter(A)\n        for val in cnt.values():\n            if val%2:\n                print('First')\n                break\n        else:\n            print('Second')", "import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    n = ini()\n    a = inl()\n    if n % 2 == 1:\n        return \"Second\"\n    a.sort()\n    pair_ok = True\n    i = 0\n    while i < n:\n        if a[i] != a[i + 1]:\n            pair_ok = False\n            break\n        i += 2\n    if pair_ok:\n        return \"Second\"\n    return \"First\"\n\n\nT = ini()\nfor i in range(T):\n    print(solve())\n", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\n# Summarize count of factor within list -- START --\ndef summarizeList(l):\n  sl=sorted(l)\n\n  a=sl[0]\n  c=1\n  res=[]\n\n  for x in sl[1:]:\n    if x==a:\n      c+=1\n    else:\n      res.append([a,c])\n      a=x\n      c=1\n  res.append([a,c])\n\n  return res\n# Summarize count of factor within list --- END ---\n\ndef main():\n  ans=[]\n  N=I()\n  for _ in range(N):\n    n=I()\n    l=LI()\n    \n    if n%2==1:\n      ans.append('Second')\n    else:\n      sl=summarizeList(l)\n      f=True\n      for x,c in sl:\n        if c%2==1:\n          f=False\n      if f:\n        ans.append('Second')\n      else:\n        ans.append('First')\n\n  for x in ans:\n    print(x)\n\nmain()\n# print(main())\n", "def main(n,a):\n  # F:\u30b2\u30fc\u30e0\u306e\u5148\u884c\n  # S:\u30b2\u30fc\u30e0\u306e\u5f8c\u884c\n  if n%2==0:\n    # \u30b2\u30fc\u30e0\u306e\u5148\u884cF\u304cnim\u306e\u5148\u884c\u306b\u306a\u308b\u3002\n    # nim\u306fF\u5148\u884c\u3002F\u306fnim\u306exor\u548c\u304c0\u4ee5\u4e0a\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002S\u306f\u3074\u3063\u305f\u308a0\u306b\u3057\u305f\u3044\n    # F\u306f\u5927\u304d\u3044\u3082\u306e\u304b\u3089\u9806\u306b\u540c\u3058\u76bf\u306b\u7f6e\u3044\u3066\u3044\u3051\u3070\u3044\u3044\u3002\u9006\u306b\u3053\u308c\u3067\u30820\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306fS\u304c\u52dd\u3064\u3002\n    a.sort()\n    num0,num1=0,0\n    for i,x in enumerate(a):\n      if i%2:\n        num0+=x\n      else:\n        num1+=x\n    return num0!=num1\n  else:\n    # \u30b2\u30fc\u30e0\u306e\u5f8c\u884cS\u304cnim\u306e\u5148\u884c\u306b\u306a\u308b\u3002\n    # nim\u306fS\u5148\u884c\u3002F\u306fnim\u306exor\u548c\u304c0\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002S\u306f0\u4ee5\u4e0a\u306b\u3057\u305f\u3044\n    return False\n    pass\nt=int(input())\nnary=[]\naary=[]\nfor _ in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  nary.append(n)\n  aary.append(a)\nfor n,a in zip(nary,aary):\n  print(('First' if main(n,a) else 'Second'))\n\n", "from collections import Counter\n\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = list(map(int, input().split()))\n    C = Counter(A)\n    \n    if N % 2 == 1:\n        ans = 'Second'\n    else:\n        if all(v % 2 == 0 for v in list(C.values())):\n            ans = 'Second'\n        else:\n            ans = 'First'\n    print(ans)\n", "#!usr/bin/env python3\nfrom collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations, accumulate\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef IR(n):\n    return [I() for _ in range(n)]\ndef LIR(n):\n    return [LI() for _ in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\nans = [\"Second\", \"First\"]\ndef solve():\n    def f(n,a):\n        if n&1:\n            return ans[0]\n        cnt = defaultdict(lambda : 0)\n        for i in a:\n            cnt[i] ^= 1\n        return ans[any(cnt.values())]\n\n    t = I()\n    for _ in range(t):\n        n = I()\n        a = LI()\n        print((f(n,a)))\n    return\n\n#Solve\ndef __starting_point():\n    solve()\n\n__starting_point()", "#problem: let's play nim\n#problem id: arc105 d\n\nimport sys\nfrom collections import Counter\n\n\ndef input():\n    return sys.stdin.readline()\n\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n % 2 != 0:\n        print(\"Second\")\n    else:\n        prt = dict(Counter(a))\n        if any(v % 2 != 0 for v in list(prt.values())):\n            print(\"First\")\n        else:\n            print(\"Second\")\n    return\n\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        solve()\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#\u888b\u3092\u7f6e\u304d\u7d42\u308f\u3063\u3066\u6392\u4ed6\u7684\u8ad6\u7406\u548c\u304c0\u306e\u6642\u8ca0\u3051\u30010\u3058\u3083\u306a\u3044\u6642\u52dd\u3061\n#N\u304c\u5076\u6570\u306a\u3089\u5148\u624b\u306f0\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\u5f8c\u624b\u306f0\u306b\u3059\u308b\u3002\n#\u5148\u624b\u304c\u3044\u304b\u306b\u9811\u5f35\u3063\u3066\u3082\u5f8c\u624b\u304c0\u306b\u3067\u304d\u308b\u306a\u3089\u3001\u5f8c\u624b\u306e\u52dd\u3061\n#\u305d\u308c\u4ee5\u5916\u306f\u5148\u624b\u306e\u52dd\u3061\n#N\u304c\u5947\u6570\u306a\u3089\u9006\n\nimport collections\ndef game(n, A):#\u8a08\u7b97\u91cflog\u4ee5\u4e0b\u304c\u6c42\u3081\u3089\u308c\u308b\u3002\n  #\u5148\u624b\u756a\n  if N % 2 == 0:\n    ans = \"Second\"\n    B = collections.Counter(A)\n    for i in list(B.values()):\n      if i % 2 != 0:\n        ans = \"First\"\n  #\u5f8c\u624b\u756a  \n  else:\n    ans = \"Second\"\n  return ans\n\nT = int(input())\nfor i in range(T):\n  N = int(input())\n  A = list(map(int, input().split()))\n  score = game(N, A)\n  print(score)\n", "import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef LI(): return list(map(int, input().split()))\n\n\"\"\"\n\u7d50\u5c40\u306e\u3068\u3053\u308d\uff0c\u888b\u304b\u3089\u51fa\u3057\u7d42\u3048\u305f\u6642\u70b9\u3067\u52dd\u6557\u306f\u3064\u3044\u3066\u3044\u308b\uff0e\n\u888b\u304b\u3089\u51fa\u3059\u6bb5\u968e\u3067\u3082grundy\u306e\u8b70\u8ad6\u304c\u3067\u304d\u305d\u3046\n\u3042\u30fc\uff0c\u3067\u3082g\u304c\u975e0\u306e\u3068\u3053\u308d\u304b\u3089g=0\u306b\u9077\u79fb\u3067\u304d\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u306d\uff0e\n\nN\u304c\u5947\u6570\u306a\u3089\n\u5148\u624b:g=0\u3092\u76ee\u6307\u3059\n\u5f8c\u624b:g\u22600\u3092\u76ee\u6307\u3059\n\nN\u304c\u5076\u6570\u306a\u3089\n\u5148\u624b:g\u22600\u3092\u76ee\u6307\u3059\n\u5f8c\u624b:g=0\u3092\u76ee\u6307\u3059\n\n\u975e0\u3092\u76ee\u6307\u3059\u65b9\u304c\u697d\u305d\u3046\uff0e\u6700\u5f8c\u306e\u65b9\u3067\u9069\u5f53\u306b\u3084\u308c\u3070\u826f\u3044\u3057\uff0c\n\u81ea\u5206\u306e\u624b\u756a\u3067\u306f\u5927\u304d\u3044\u3082\u306e\u304b\u3089\u3068\u3063\u3066\u3044\u304d\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u3066\u884c\u304f\uff0e\u3053\u308c\u3067\u534a\u5206\u4ee5\u4e0a\u3092\u53d6\u308c\u308b\u306e\u3067\uff0c\u3061\u3087\u3046\u3069\u534a\u3005\u306b\u306a\u3063\u305f\u6642\u306e\u307fg=0\n\u306a\u306e\u3067\uff0cg=0\u304c\u4f5c\u308c\u308b\u30b1\u30fc\u30b9\u3092\u8003\u3048\u308b\uff0e\n\nN\u306e\u5076\u5947\u3084\u5148\u624b/\u5f8c\u624b\u306b\u304b\u304b\u308f\u3089\u305a\uff0c\u6700\u5f8c\u306e\u888b\u3092\u4f7f\u3063\u3066g=0\u3092\u76ee\u6307\u3059\uff0e\n\u3053\u308c\uff0c\u3067\u304d\u308b\uff1f\n1\u624b\u5206\u3060\u3051\u9061\u3063\u3066\u8003\u3048\u308b\uff0ex0,x1,,,xk \u500b\u4e26\u3093\u3067\u3044\u308b\u3068\u3057\u3066\uff0c\u888b\u306f2\u500b\u6b8b\u3063\u3066\u3044\u308b\uff0e\n\u3053\u306e\u72b6\u614b\u3067\u3069\u3093\u306a\u624b\u3092\u6253\u3063\u3066\u3082\u6b21\u306e\u624b\u3067g=0\u306b\u3055\u308c\u308b\uff0c\u3068\u3044\u3046\u72b6\u6cc1\u306f\u3042\u308b\uff1f\n\u2192 g=0\u3067\uff0c\u304b\u3064\uff0c\u6b8b\u308a\u306e\u888b\u304c\u3069\u3061\u3089\u3082\u540c\u3058\u500b\u6570\u306e\u6642\u306f\u305d\u3046\u304b\uff0e\nN=\u5076\u6570\u3067\uff0cAi\u304c\u5168\u90e8\u540c\u3058\u306a\u3089\u5f8c\u624b\u304cg=0\u3092\u4f5c\u308c\u308b\u306d\uff0e\n\n\u88dc\u984c:\u4e92\u3044\u306b\u6700\u5584\u624b\u3067\uff0cg\u22600\u306e\u6642\u306b\uff0c\u76f8\u624b\u2192\u81ea\u5206\u306e\u9806\u3067g=0\u3092\u4f5c\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u304b?\n\u2192\u4e0d\u53ef\u304b\u306a...\u5fae\u5999\uff0e\n\n\u4e0a\u3067\u66f8\u3044\u305f\u30b1\u30fc\u30b9\u4ee5\u5916\u306a\u3044\u304b\u3082?\n\u5168\u7136\u8a70\u3081\u3089\u308c\u3066\u306a\u3044\u306e\u3067\u5618\u81ed\u3044\u304c\u6295\u3052\u3066\u307f\u308b\u304b...\n\u2192WA\n\n\u8a70\u3081\u3088\u3046\uff0e\n\nN=\u5947\u6570\u306a\u3089\u5f8c\u624b\u5fc5\u52dd\u307d\u3044\uff1f\n\u5f8c\u624b\u306e\u884c\u52d5:\u5927\u304d\u3044\u888b\u304b\u3089\u3068\u3063\u3066\u3044\u304d\uff0c\u521d\u624b\u3067\u304a\u304b\u308c\u305f\u76bf\u306b\u7f6e\u304d\u7d9a\u3051\u308b\n\u8a73\u7d30:\u3053\u308c\u3092\u3084\u3089\u308c\u305f\u3089\u7d76\u5bfe\u306b\u904e\u534a\u6570\u3092\u8d85\u3048\u308b\uff0e\u904e\u534a\u6570\u3092\u8d85\u3048\u3089\u308c\u305f\u304f\u306a\u3044\u306e\u3067\u5148\u624b\u306e\u4eba\u3082\u5927\u304d\u3044\u9806\u4f4d\u53d6\u308b\u3051\u3069\uff0c\u305d\u308c\u3067\u3082A\u306e\u5947\u6570\u756a\u76ee\u304c\u5168\u3066\u540c\u3058\u76bf\u306b\u5165\u3063\u3066\u3057\u307e\u3046\uff0eA1\u3092\u9664\u3044\u305f\u5206\u3067\u3055\u3048\uff0c\u5076\u6570\u756a\u76ee\u306e\u7dcf\u548c\u4ee5\u4e0a\u306b\u306a\u308b\u306e\u3067\uff0cA1\u3082\u5165\u308c\u308b\u3068\u7d76\u5bfe\u904e\u534a\u6570\u3092\u8d85\u3048\u308b\n\nN=\u5076\u6570\u3067\uff0c\u5f8c\u624b\u304cg=0\u3092\u4f5c\u308c\u308b\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3088\u3046\u304b\uff0e\n\u5947\u6570\u306e\u6642\u3068\u540c\u3058\u69d8\u306b\u8003\u3048\u3089\u308c\u305d\u3046?\u5148\u624b\u5074\u306f\u3068\u306b\u304b\u304f\u5927\u304d\u3044\u306e\u304b\u3089\u3068\u3063\u3066\u3044\u304d\u4e00\u7b87\u6240\u306b\u307e\u3068\u3081\u308b\uff0e\n\u21922\u500b\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u304b\uff0c\u3067g=0\u304c\u4f5c\u308c\u308b\u304b\u5224\u5b9a\u3067\u304d\u305d\u3046\n\n\n\"\"\"\n\ndef main():\n    mod=10**9+7\n    \n    T=I()\n    for _ in range(T):\n        N=I()\n        A=LI()\n        \n        if N%2==1:\n            print(\"Second\")\n        else:\n            flag=1#\u5168\u90e8\u5076\u6570\u500b\u304b?\n            from collections import defaultdict\n            dd = defaultdict(int)\n            \n            for i in range(N):\n                dd[A[i]]+=1\n                \n            for k,v in list(dd.items()):\n                if v%2:\n                    flag=0\n                    break\n                \n            if flag==1:\n                print(\"Second\")\n            else:\n                print(\"First\")\n            \n            \n            \n\nmain()\n", "def solve(a):\n    b = sorted(a)\n    if len(b)%2 == 0:\n        if b[::2] == b[1::2]:\n            return \"Second\"\n        else:\n            return \"First\"\n    else:\n        return \"Second\"\n\nfor _ in range(int(input())):\n    N = input()\n    print((solve(list(map(int,input().split())))))\n", "def is_nomal_case(A):\n    A.sort()\n    for i in range(0, len(A), 2):\n        if A[i] != A[i+1]:\n            return True\n    return False\n    \ndef __starting_point():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        A = list(map(int, input().split()))\n        if N%2:\n            print('Second')\n        else:\n            if not is_nomal_case(A):\n                print('Second')\n            else:\n                print('First')\n__starting_point()", "\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    tmp1 = 0\n    tmp2 = 0\n\n    for i in range(len(a)):\n        if i % 2 == 0:\n            tmp1 += a[i]\n        else:\n            tmp2 += a[i]\n\n    if N % 2 == 0:\n        if tmp1 != tmp2:\n            print (\"First\")\n        else:\n            print (\"Second\")\n    else:\n        print (\"Second\")", "import itertools\nimport sys\nfrom typing import List\n\nsys.setrecursionlimit(10 ** 9)\n\n\ndef lmi():\n    return list(map(int, input().split()))\n\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        A = lmi()\n        solve(N, A)\n\ndef rfe(S):\n    for k, v in itertools.groupby(S):\n        yield k, len(list(v))\n\n\ndef solve(N: int, A: List[int]) -> str:\n    A.sort()\n    if len(A) % 2 == 0:\n        if all(count % 2 == 0 for k, count in rfe(A)):\n            print('Second')\n        else:\n            print('First')\n    else:\n        print('Second')\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import collections\nI = [int(_) for _ in open(0).read().split()]\nT = I[0]\ni = 1\nN = []\nA = []\nfor _ in range(T):\n    N += [I[i]]\n    i += 1\n    A += [I[i:i + N[-1]]]\n    i += N[-1]\nfor n, a in zip(N, A):\n    if n % 2 == 0 and any(v % 2 for v in list(collections.Counter(a).values())):\n        print('First')\n    else:\n        print('Second')\n", "T = int(input())\n\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int,input().split()))\n    \n    if N % 2 == 1:\n        print(\"Second\")\n    else:\n        a.sort()\n        for i in range(N//2):\n            if a[2*i] != a[2*i+1]:\n                print(\"First\")\n                break\n        else:\n            print(\"Second\")", "t = int(input())\n \nfor _ in range(t):\n  n = int(input())\n  arr = list(map(int, input().split()))\n  \n  if n%2==1:\n    print('Second')\n    \n  else:\n    D = {}\n    for el in arr:\n      if el not in D:\n        D[el] = 1\n      else:\n        D[el] += 1\n        \n    ok = 1\n    for key in D:\n      if D[key] % 2 == 1:\n        ok = 0 \n        \n    if ok==1:\n      print('Second')\n    else:\n      print('First')", "from collections import defaultdict\nimport sys\ninput = sys.stdin.readline\n\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int, input().split()))\n    if N % 2 == 1:\n        print('Second')\n    else:\n        cnt = defaultdict(int)\n        for x in a:\n            cnt[x] += 1\n        for _, c in list(cnt.items()):\n            if c % 2 == 1:\n                print('First')\n                break\n        else:\n            print('Second')\n", "#!/usr/bin/env python3\nfrom collections import Counter\n\n\ndef main():\n    T = int(input())\n    for _ in range(T):\n        N = int(input())\n        a = list(map(int, input().split()))\n        xor = 0\n        for i in range(N):\n            xor ^= a[i]\n        if N % 2 == 0:  # \u30b3\u30a4\u30f3\u3092\u304a\u304f\u6642\u306b\u624b\u756a\u304c\u5909\u308f\u3089\u306a\u3044\n            for k, v in list(Counter(a).items()):\n                if v % 2 == 1:\n                    print('First')\n                    break\n            else:\n                print('Second')\n        else:\n            print('Second')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    d = {}\n    if n%2 == 1:\n        print(\"Second\")\n        continue\n    for j in a:\n        if j in d:\n            d[j] = d[j]^1\n        else:\n            d[j] = 1\n    # print(d)\n    for j in d.keys():\n        if d[j] == 1:\n            print(\"First\")\n            break\n    else:\n        print(\"Second\")", "def solve(A):\n  d = {}\n  for a in A:\n    if a in d:\n      d[a] += 1\n    else:\n      d[a] = 1\n  \n  for a in d:\n    if d[a] % 2:\n      return 'First'\n  return 'Second'\n\n\nT = int(input())\nans = []\nfor i in range(T):\n  N = int(input())\n  A = list(map(int, input().split()))\n  if N % 2:\n    ans.append('Second')\n  else:\n    ans.append(solve(A))\n\nprint(*ans, sep='\\n')", "from collections import Counter\n\ndef solve(a):\n    c = Counter(a)\n\n    res = True\n\n    for i in list(c.values()):\n        if i%2 != 0:\n            res = False\n    \n    if N%2 == 0:\n        if res:\n            return \"Second\"\n        else:\n            return \"First\"\n    else:\n        return \"Second\"\n\n\nT = int(input())\n\nfor _ in range(T):\n    N = int(input())\n    a = list(map(int,input().split()))\n    print((solve(a)))\n", "def solve(a):\n    b = sorted(a)\n    if len(b)%2:\n        return \"Second\"\n    else:\n        if b[::2] == b[1::2]:\n            return \"Second\"\n        else:\n            return \"First\"\nfor _ in range(int(input())):\n    input()\n    print(solve(list(map(int,input().split()))))", "# Date [ 2020-10-11 23:52:10 ]\n# Problem [ d.py ]\n# Author Koki_tkg\n\nimport sys\nfrom collections import Counter\n\ndef read_str(): return sys.stdin.readline().strip()\ndef read_int(): return int(sys.stdin.readline().strip())\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef read_str_split(): return list(sys.stdin.readline().strip())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    for _ in range(read_int()):\n        N = read_int()\n        a = read_int_list()\n        if N % 2:\n            print('Second')\n            continue\n        cnt = Counter(a)\n        for val in list(cnt.values()):\n            if val % 2:\n                print('First')\n                break\n        else:\n            print('Second')\n\ndef __starting_point():\n    Main()\n\n__starting_point()", "def solve(n, a):\n  if n % 2 == 0:\n    cnt = dict()\n    for x in a:\n      if x not in cnt:\n        cnt[x] = 0\n      cnt[x] += 1\n    for v in cnt.values():\n      if v % 2:\n        print(\"First\")\n        return\n    print(\"Second\")\n    return\n  print(\"Second\")\n\ndef main():\n  t = int(input())\n  for _ in range(t):\n    n = int(input())\n    a = [*map(int, input().split())]\n    solve(n, a)\n\nmain()", "import sys\nfrom collections import Counter\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c for j in range(b)] for i in range(a)]\ndef list3d(a, b, c, d): return [[[d for k in range(c)] for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e for l in range(d)] for k in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x // y))\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10**9)\nINF = 10**19\nMOD = 10**9 + 7\nEPS = 10**-10\n\nfor _ in range(INT()):\n    N = INT()\n    A = LIST()\n\n    swapped = (N % 2 == 1)\n    C = Counter(A)\n    is_0 = True\n    for v in list(C.values()):\n        if v % 2 != 0:\n            is_0 = False\n            break\n\n    if swapped ^ (not is_0):\n        print('First')\n    else:\n        print('Second')\n", "import sys\ninput = sys.stdin.readline\n\nfw = \"First\"\nsw = \"Second\"\nt = int(input())\nfor i in range(t):\n    n = int(input())\n    A = list(map(int,input().split()))\n    if n % 2 == 1:\n        print(sw)\n    else:\n        A.sort()\n        ng = 0\n        for i in range(n//2):\n            if A[2*i] != A[2*i+1]:\n                ng = 1\n                break\n        print(sw if ng == 0 else fw)", "from collections import Counter\nfor _ in range(int(input())):\n    n = int(input())\n    a = Counter(map(int, input().split()))\n    if n & 1:\n        print(\"Second\")\n    else:\n        win = False\n        for k in a:\n            if a[k] & 1:\n                win = True\n                break\n        print(\"First\" if win else \"Second\")", "from collections import Counter\n\ndef solve():\n    N=int(input())\n    a=list(map(int,input().split()))\n    \n    if N%2:\n        return 'Second'\n    c=Counter(a)\n    for x,y in c.items():\n        if y%2:\n            return 'First'\n    return 'Second'\n    \n    \nT=int(input())\n\nwhile(T):\n    print(solve())\n    T-=1", "def solve(a):\n    b = sorted(a)\n    N = len(b)\n    if N%2 == 0:\n        if b[::2] == b[1::2]:\n            return \"Second\"\n        else:\n            return \"First\"\n    else:\n        return \"Second\"\n\nfor _ in range(int(input())):\n    N = input()\n    print((solve(list(map(int,input().split())))))\n", "from collections import Counter\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = list(map(int, input().split()))\n    if n & 1:\n        print(\"Second\")\n        continue\n    flg = True\n    c = Counter(s)\n    for k, v in list(c.items()):\n        if v % 2 == 1:\n            flg = False\n    print((\"Second\" if flg else \"First\"))\n", "import io, os\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nR = lambda : map(int, input().split())\nfor _ in range(int(input())) :\n    n = int(input())\n    a = list(R())\n    a.sort()\n    can = False\n    val = {}\n    for i in a :\n        if i not in val :\n            val[i] = 1\n        else :\n            val[i] += 1\n    if n & 1 or all(v % 2 == 0 for k, v in val.items()) :\n        print(\"Second\")\n    else :\n        print(\"First\")", "import sys\nfrom collections import Counter\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input().split()))\n\n        if n % 2:\n            print(\"Second\")\n        else:\n            D = Counter(A)\n            for v in list(D.values()):\n                if v % 2:\n                    print(\"First\")\n                    break\n            else:\n                print(\"Second\")\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import sys\n\ninput = sys.stdin.readline\nT = int(input())\nfor _ in range(T):\n    N = int(input())\n    A = sorted(list(map(int, input().split())))\n    if N % 2 == 1:\n        print('Second')\n        continue\n    else:\n        flg = True\n        for i in range(N // 2):\n            flg = flg & (A.pop() == A.pop())\n        if flg:\n            print('Second')\n        else:\n            print('First')\n", "from collections import Counter\nimport sys\ninput = sys.stdin.readline\n\ndef solve():\n    T = int(input())\n    anss = []\n    for _ in range(T):\n        N = int(input())\n        As = list(map(int, input().split()))\n\n        if N%2:\n            anss.append('Second')\n        else:\n            cnt = Counter(As)\n            for value in list(cnt.values()):\n                if value%2:\n                    anss.append('First')\n                    break\n            else:\n                anss.append('Second')\n\n    print(('\\n'.join(anss)))\n\n\nsolve()\n", "t = int(input())\nfor _ in range(t):\n    N = int(input())\n    l = sorted(map(int, input().split()))\n    if N % 2:\n        print('Second')\n    else:\n        if sum(l[::2]) == sum(l[1::2]):\n            print('Second')\n        else:\n            print('First')", "from collections import *\nfor _ in range(int(input())):\n    print('First' if int(input())%2^any(v%2 for v in Counter(map(int,input().split())).values()) else 'Second')", "import sys\ninput = sys.stdin.readline\nfrom collections import Counter\ndef f():\n  n = int(input())\n  A = tuple(map(int, input().split()))\n  if n%2:\n    return False\n  C = Counter(A)\n  for v in C.values():\n    if v%2:\n      return True\n  return False\nt = int(input())\nfor _ in range(t):\n  if f():\n    print(\"First\")\n  else:\n    print(\"Second\")", "#!/usr/bin/env python3\n\nimport sys\nimport math\nfrom bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nsys.setrecursionlimit(2147483647)\nfrom heapq import heappush, heappop,heappushpop\nfrom collections import defaultdict\nfrom itertools import accumulate\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\nfrom itertools import permutations\nmod = 10**9 + 7\ninf = float('inf')\ndef I(): return int(sys.stdin.readline())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\n\nt = I()\nfor _ in range(t):\n    n = I()\n    a = LI()\n    if n % 2 == 0:\n        x = Counter(a)\n        for i in list(x.values()):\n            if i % 2:\n                print(\"First\")\n                break\n        else:\n            print(\"Second\")\n    else:\n        print(\"Second\")\n", "i=input\nt=int(i())\nfor _ in range(t):\n  n=int(i())\n  a=sorted(map(int,i().split()))\n  print('First' if n%2^(a[::2]!=a[1::2]) else 'Second')", "from collections import defaultdict\nprintn = lambda x: print(x,end='')\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 10**18\nR = 10**9 + 7\n#R = 998244353\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nt = inn()\nfor tt in range(t):\n    n = inn()\n    a = inl()\n    if n%2>0:\n        print('Second')\n    else:\n        h = defaultdict(int)\n        for x in a:\n            h[x] += 1\n        hasod = False\n        for x in h:\n            if h[x]%2>0:\n                hasod = True\n                break\n        print('First' if hasod else 'Second')\n", "import sys,os,io\ninput = sys.stdin.readline\n#input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nfrom collections import Counter\nT = int(input())\nans = [0]*T\nfor t in range(T):\n  n = int(input())\n  A = list(map(int,input().split()))\n  p = 0\n  ans[t] = 'Second'\n  if n%2==0:\n    C = Counter(A)\n    for v in C.values():\n      if v%2==1:\n        ans[t] = 'First'\n        break\nprint(*ans, sep='\\n')", "from collections import *\ni = input\nfor _ in range(int(i())):\n  print('First' if int(i())%2^any(v%2 for v in Counter(map(int,i().split())).values()) else 'Second')", "from collections import Counter\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    if n % 2:\n        print(\"Second\")\n        continue\n    c = Counter(a)\n    check = True\n    for i in list(c.values()):\n        if i%2:\n            check = False\n            break\n    if check:\n        print(\"Second\")\n    else:\n        print(\"First\")\n", "T = int(input())\nfor _ in range(T):\n    N = int(input())\n    S = list(map(int, input().split()))\n\n    if N%2 == 1:\n        print(\"Second\")\n    else:\n        S.sort()\n        for i in range(0, N, 2):\n            if S[i] != S[i+1]:\n                print(\"First\")\n                break\n        else:\n            print(\"Second\")", "import sys\nfrom collections import Counter\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        A = list(map(int, input().split()))\n        if n % 2:\n            print(\"Second\")\n        else:\n            D = Counter(A)\n            for v in list(D.values()):\n                if v % 2:\n                    print(\"First\")\n                    break\n            else:\n                print(\"Second\")\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "T=int(input())\nwhile(T):\n\tT=T-1\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\ta.sort()\n\tif(len(a)&1):\n\t\tprint(\"Second\")\n\telse:\n\t\tf=0\n\t\tfor i in range(1,len(a),2):\n\t\t\tif(a[i]!=a[i-1]):\n\t\t\t\tf=1\n\t\tif(f):\n\t\t\tprint(\"First\")\n\t\telse:\n\t\t\tprint(\"Second\")\n", "t = int(input())\nfor _ in range(t):\n    n = int(input()); a = sorted(list(map(int, input().split())))\n    print(\"First\") if n%2 == 0 and a[::2] != a[1::2] else print(\"Second\")", "# -*- coding: utf-8 -*-\n\n#############\n# Libraries #\n#############\n\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\n\nimport math\n#from math import gcd\nimport bisect\nimport heapq\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nfrom functools import lru_cache\n\n#############\n# Constants #\n#############\n\nMOD = 10**9+7\nINF = float('inf')\nAZ = \"abcdefghijklmnopqrstuvwxyz\"\n\n#############\n# Functions #\n#############\n\n######INPUT######\ndef I(): return int(input().strip())\ndef S(): return input().strip()\ndef IL(): return list(map(int,input().split()))\ndef SL(): return list(map(str,input().split()))\ndef ILs(n): return list(int(input()) for _ in range(n))\ndef SLs(n): return list(input().strip() for _ in range(n))\ndef ILL(n): return [list(map(int, input().split())) for _ in range(n)]\ndef SLL(n): return [list(map(str, input().split())) for _ in range(n)]\n\n\n#####Shorten#####\ndef DD(arg): return defaultdict(arg)\n\n#####Inverse#####\ndef inv(n): return pow(n, MOD-2, MOD)\n\n######Combination######\nkaijo_memo = []\ndef kaijo(n):\n  if(len(kaijo_memo) > n): return kaijo_memo[n]\n  if(len(kaijo_memo) == 0): kaijo_memo.append(1)\n  while(len(kaijo_memo) <= n): kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n  return kaijo_memo[n]\n\ngyaku_kaijo_memo = []\ndef gyaku_kaijo(n):\n  if(len(gyaku_kaijo_memo) > n): return gyaku_kaijo_memo[n]\n  if(len(gyaku_kaijo_memo) == 0): gyaku_kaijo_memo.append(1)\n  while(len(gyaku_kaijo_memo) <= n): gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n  return gyaku_kaijo_memo[n]\n\ndef nCr(n,r):\n  if n == r: return 1\n  if n < r or r < 0: return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(r) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\n######Factorization######\ndef factorization(n):\n  arr = []\n  temp = n\n  for i in range(2, int(-(-n**0.5//1))+1):\n    if temp%i==0:\n      cnt=0\n      while temp%i==0: \n        cnt+=1 \n        temp //= i\n      arr.append([i, cnt])\n  if temp!=1: arr.append([temp, 1])\n  if arr==[]: arr.append([n, 1])\n  return arr\n\n#####MakeDivisors######\ndef make_divisors(n):\n  divisors = []\n  for i in range(1, int(n**0.5)+1):\n    if n % i == 0:\n      divisors.append(i)\n      if i != n // i: \n        divisors.append(n//i)\n  return divisors\n\n#####MakePrimes######\ndef make_primes(N):\n  max = int(math.sqrt(N))\n  seachList = [i for i in range(2,N+1)]\n  primeNum = []\n  while seachList[0] <= max:\n    primeNum.append(seachList[0])\n    tmp = seachList[0]\n    seachList = [i for i in seachList if i % tmp != 0]\n  primeNum.extend(seachList)\n  return primeNum\n\n#####GCD#####\ndef gcd(a, b):\n    while b: a, b = b, a % b\n    return a\n\n#####LCM#####\ndef lcm(a, b):\n    return a * b // gcd (a, b)\n\n#####BitCount#####\ndef count_bit(n):\n  count = 0\n  while n:\n    n &= n-1\n    count += 1\n  return count\n\n#####ChangeBase#####\ndef base_10_to_n(X, n):\n  if X//n: return base_10_to_n(X//n, n)+[X%n]\n  return [X%n]\n\ndef base_n_to_10(X, n):\n  return sum(int(str(X)[-i-1])*n**i for i in range(len(str(X))))\n\ndef base_10_to_n_without_0(X, n):\n  X -= 1\n  if X//n: return base_10_to_n_without_0(X//n, n)+[X%n]\n  return [X%n]\n\n#####IntLog#####\ndef int_log(a, n):\n  count = 0\n  while n>=a:\n    n //= a\n    count += 1\n  return count\n\n#############\n# Main Code #\n#############\n\ndef solve():\n  N = I()\n  A = IL()\n  if N%2:\n    print(\"Second\")\n  else:\n    dic = DD(int)\n    for a in A:\n      dic[a] = 1-dic[a]\n    for k in dic:\n      if dic[k]:\n        print(\"First\")\n        return\n    print(\"Second\")\n\nT = I()\nfor _ in range(T):\n  solve()", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, log, gcd\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return list(zip(*(MAP() for _ in range(n))))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nT = INT()\n\nfor _ in range(T):\n    N = INT()\n    a = LIST()\n\n    if N%2:\n        print(\"Second\")\n        continue\n    cnt = Counter(a)\n\n    print((\"Second\" if all(x%2==0 for x in list(cnt.values())) else \"First\"))\n", "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor i in range(t):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tif n%2==0:\n\t\ta.sort()\n\t\tsame=True\n\t\tfor i in range(n//2):\n\t\t\tif a[i*2]!=a[i*2+1]:\n\t\t\t\tsame=False\n\t\t\t\tbreak\n\t\tif same:\n\t\t\tprint(\"Second\")\n\t\telse:\n\t\t\tprint(\"First\")\n\telse:\n\t\tprint(\"Second\")", "i=input\nfor _ in range(int(i())):\n print('First' if int(i())%2^((a:=sorted(map(int,i().split())))[::2]!=a[1::2]) else 'Second')", "# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(10**9)\nINF=10**18\nMOD=10**9+7\ninput=lambda: sys.stdin.readline().rstrip()\nYesNo=lambda b: bool([print('Yes')] if b else print('No'))\nYESNO=lambda b: bool([print('YES')] if b else print('NO'))\nint1=lambda x:int(x)-1\nfrom collections import Counter\n\nT=int(input())\nfor _ in range(T):\n    N=int(input())\n    a=tuple(map(int,input().split()))\n    if N%2:\n        print('Second')\n        continue\n    c=Counter(a)\n    for v in c.values():\n        if v%2:\n            print('First')\n            break\n    else:\n        print('Second')", "import sys\ninput=sys.stdin.readline\nimport collections\nt=int(input())\nfor i in range(t):\n  n=int(input())\n  a=list(map(int,input().split()))\n  if n%2==1:\n    print('Second')\n  else:\n    A=collections.Counter(a)\n    count=list(A.values())\n    for j in range(len(count)):\n      if count[j]%2==1:\n        print('First')\n        break\n    else:\n      print('Second')", "sc = map(int, open(0).read().split())\nni = lambda: next(sc)\n\nT = ni()\nfor _ in range(T):\n    N = ni()\n    A = sorted(ni() for _ in range(N))\n\n    if N % 2 == 0 and A[::2] != A[1::2]:\n        print(\"First\")\n    else:\n        print(\"Second\")", "from collections import Counter\nt=int(input())\n\nfor _ in range(t):\n    n=int(input())\n    *a,=map(int, input().split())\n    ca=Counter(a)\n    if n%2:\n        print('Second')\n        continue\n    first=0\n    for ai in ca:\n        if ca[ai]%2:\n            first=1\n            break\n    if first:\n        print('First')\n    else:\n        print('Second')", "t = int(input())\nfor _ in range(t):\n  n = int(input())\n  a = list(map(int, input().split()))\n  if n % 2:\n    print(\"Second\")\n    continue\n  from collections import Counter\n  c = Counter(a)\n  for i, j in c.items():\n    if j % 2:\n      print(\"First\")\n      break\n  else:\n    print(\"Second\")"]