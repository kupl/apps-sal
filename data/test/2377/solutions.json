["from math import ceil\n\nN, H = map(int, input().split())\n\nA = []\nB = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\nelse:\n    a = max(A)\n    B.sort()\n    B.reverse()\n\nans = 0\nfor b in B:\n    if H <= 0:\n        print(ans)\n        break\n\n    if a < b:\n        H -= b\n        ans += 1\nelse:\n    print(ans + ceil(H / a))", "n, h = list(map(int, input().split()))\na = [0] * n\nb = [0] * n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n\na = sorted(a, reverse=True)\nb = sorted(b, reverse=True)\n\nans = 0\ni = 0\nwhile i < n and b[i] > a[0]:\n    h -= b[i]\n    ans += 1\n    if h <= 0:\n        print(ans)\n        return\n    i += 1\n\nprint((ans + (h + a[0] - 1) // a[0]))\n", "\ndef resolve():\n    N, H = map(int, input().split())\n    A = [0] * N\n    B = [0] * N\n    for i in range(N):\n        a, b = map(int, input().split())\n        A[i] = a\n        B[i] = b\n    a_max = max(A)\n\n    # a_max\u3088\u308a\u9ad8\u3044\u653b\u6483\u529b\u3092\u9078\u629e(a_max\u306f\u4f55\u56de\u3067\u3082\u884c\u3048\u308b\u306e\u3067\u305d\u308c\u3088\u308a\u4f4e\u3044\u3082\u306e\u306f\u9078\u629e\u3057\u306a\u3044)\n    B = [b for b in B if a_max < b]\n    B.sort(reverse=True)\n\n    cnt = 0\n    for b in B:\n        if H <= 0:\n            print(cnt)\n            return\n        H -= b\n        cnt += 1\n\n    cnt += -(-H // a_max)\n    print(cnt)\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "import sys\nread=sys.stdin.read\n\ndef main():\n  n,h,*ab=list(map(int,read().split()))\n  tops=max(ab[0::2])\n  tlst=[b for b in ab[1::2] if b>tops]\n  tlst.sort(reverse=True)\n  i=-1\n  t=0\n  for i,t in enumerate(tlst):\n    h-=t\n    if h<=0:\n      h=0\n      break\n  print((h//tops+(h%tops>0)+i+1))\n\ndef __starting_point():\n  main()\n\n__starting_point()", "\n\ndef LI():\n    return list(map(int, input().split()))\n\n\nN, H = LI()\namax = 0\nblist = []\nfor _ in range(N):\n    a, b = LI()\n    amax = max(amax, a)\n    blist.append(b)\nblist.sort()\nans = 0\nfor i in range(N-1, -1, -1):\n    if blist[i] <= amax:\n        break\n    ans += 1\n    H -= blist[i]\n    if H <= 0:\n        break\nif H > 0:\n    if H % amax == 0:\n        ans += H//amax\n    else:\n        ans += H//amax+1\n\nprint(ans)\n", "N, H, *blades = map(int, open(0).read().split())\ncut = max(blades[::2])\nthrows = sorted(b for b in blades[1::2] if b >= cut)\n\nans = 0\nwhile throws:\n    H -= throws.pop()\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\n\nans += (H + cut - 1) // cut\nprint(ans)", "\ndef main():\n    with open(0) as f:\n        N, H = list(map(int, f.readline().split()))\n        ab = list(map(int, f.read().split()))\n    max_slash = max(ab[0::2])\n    throw = sorted([x for x in ab[1::2] if x > max_slash], reverse=True)\n    cnt = 0\n    for t in throw:\n        if H <= 0:\n            break\n        H += -t\n        cnt += 1\n    if H > 0:\n        cnt += (H+max_slash-1)//max_slash\n    print(cnt)\n\nmain()\n\n", "import math\nn, h = map(int, input().split())\nkatana = []\na_max = 0\n\nfor i in range(n):\n    ab = list(map(int, input().split()))\n    katana.append(ab)\n    a_max = max(a_max, ab[0])\n\nkatana = sorted(katana, key=lambda x: x[1], reverse=True)\nlife = h\ncount = 0\nfor a, b in katana:\n    if b <= a_max:\n        #a\u3067\u6bb4\u308a\u7d9a\u3051\u308b\u65b9\u304c\u65e9\u3044(\u6295\u3052\u306a\u3044)\n        break\n    else: #b\u306e\u6700\u5927\u5024\u306fa\u306e\u6700\u5927\u5024\u3088\u308a\u5927\u304d\u3044\n        life -=b\n        \n    count += 1\n    if life <= 0:\n        break\n\nif life > 0:\n    count += math.ceil(life/a_max)\n\nprint(count)", "n, h = map(int, input().split())\nAB = [(list(map(int, input().split()))) for _ in range(n)]\n\nA = []\nB = []\nfor a, b in AB:\n    A.append(a)\n    B.append(b)\n\nmax_A = max(A)\nC = sorted([b for b in B if b >= max_A], reverse=True)\n\ncnt = 0\nfor c in C:\n    h -= c\n    cnt += 1\n    if h <= 0:\n        print(cnt)\n        return\n\natack = h // max_A\ncnt += atack\nh -= atack * max_A\nif h <= 0:\n    print(cnt)\nelse:\n    print(cnt+1)", "n, h = list(map(int, input().split()))\n\nwield = 0\nbs = []\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n\n    if a > wield:\n        wield = a\n\n    bs.append(b)\n\nthrow = []\n\nfor i in range(n):\n    if bs[i] > wield:\n        throw.append(bs[i])\n\ntotal = sum(throw)\n\nif total > h:\n    throw = sorted(throw, reverse=True)\n\n    total = 0\n    ind = 0\n    while total < h:\n        total += throw[ind]\n        ind += 1\n\n    print(ind)\nelse:\n    print((h-total+wield-1)//wield + len(throw))", "N,H=list(map(int,input().split()))\nB=[]\nA=0\nfor _ in range(N):\n    a,b = list(map(int,input().split()))\n    A = max(A,a)\n    B.append(b)\nB = sorted(B, reverse=True) + [0]\n\ni = 0\nwhile B[i] >= A:\n    i += 1\nB = B[:i]\n\nans = 0\nfor i in range(len(B)):\n    H -= B[i]\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\nprint((ans + (H -1)//A + 1))\n", "N, H = map(int, input().split())\nA = []\nB = []\n\nfor _ in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\n\ndef solver(N, H, A, B):\n    x = max(A)\n    B.sort()\n    B.reverse()\n\n    ans = 0\n    for b in B:\n        if b < x:\n            break\n        H -= b\n        ans += 1\n        if H <= 0:\n            return ans\n    \n    return ans + -(-H//x)\n\nprint(solver(N, H, A, B))", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[13]:\n\n\nimport math\n\n\n# In[11]:\n\n\nN,H = list(map(int, input().split()))\na_list = [];b_list = []\nfor _ in range(N):\n    a,b = list(map(int,input().split()))\n    a_list.append(a)\n    b_list.append(b)\n\n\n# In[14]:\n\n\na_max = max(a_list)\nb_list = sorted(b_list,reverse=True)\nb_list.append(0)\nh = H\nans = 0\nfor b in b_list:\n    if b >= a_max:\n        ans += 1\n        h -= b\n        if h <= 0:\n            break\n    else:\n        ans += math.ceil(h/a_max)\n        break\nprint(ans)\n\n\n# In[ ]:\n\n\n\n\n", "n,h,*L=map(int,open(x:=0).read().split());a=max(L[::2]);b=sorted(L[1::2])\nwhile b and b[-1]>a>0<h:h-=b.pop();x+=1\nprint(x--h//a*(h>0))", "n, h, *A = list(map(int, open(0).read().split()))\na = max(A[::2])\nb = sorted(A[1::2])[::-1]\nfor i in range(n):\n    if h <= 0:\n        n = i\n        h = 0\n        break\n    if b[i] < a:\n        n = i\n        break\n    h -= b[i]\nprint((n - (-h // a)))\n", "n, h = list(map(int, input().split()))\n\natk = []\nans = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    atk.append((a, 0))\n    atk.append((b, 1))\n\natk.sort(key=lambda x: x[0], reverse=True)\n\nfor blade in atk:\n    if blade[1] == 0:\n        break\n    else:\n        h = max(0, h - blade[0])\n        ans += 1\n        if h <= 0:\n            break\n\nprint((ans-(-h//blade[0])))\n", "\nfrom bisect import bisect_left,bisect\nimport sys\n\nn,h=list(map(int,input().split()))\n#ab=[[0]*2 for i in range(n)]\na=[0]*n\nb=[0]*n\nfor i in range(n):\n#    ab[i]=map(int,input().split())\n    a[i],b[i]=list(map(int,input().split()))\n \namax=max(a)    \nb.sort()\nii=bisect(b,amax)\nb=b[ii:]\nb.reverse()\n\nicnt=0\nfor bi in b:\n    icnt+=1\n    h=h-bi\n    if h<=0:\n        print(icnt)\n        return\n\ndi=(h-1)//amax+1\nprint((icnt+di))\n", "n,h=list(map(int,input().split()))\n\nb = []\nt = []\nfor _ in range(n):\n    c,d = list(map(int,input().split()))\n    b.append(c)\n    t.append(d)\n\n\nb_max = max(b)\nt =sorted(t)\n\nfrom bisect import bisect_right\nfrom math import ceil\nindex = bisect_right(t,b_max)\n\nans=0\nfor i in range(n-1,index-1,-1):\n    h-=t[i]\n    ans+=1\n    if h<=0:\n        print(ans)\n        return\n\ncnt = ceil(h/b_max)\n\nprint((ans+cnt))\n\n\n", "n,h = map(int,input().split())\nal,bl = [],[]\nfor i in range(n):\n  a,b = map(int,input().split())\n  al.append(a)\n  bl.append(b)\nma = max(al)\nbl.sort()\ns = 0\nc = 0\nfor i in bl[::-1]:\n  if ma >= i:\n    break\n  else:\n    s += i\n    c += 1\n    if s >= h:\n      break\nif h > s:\n  c += (h-s-1)//ma+1\nprint(c)", "f=lambda:[*map(int,input().split())]\nn,h=f()\nA,B=[],[]\nfor _ in range(n):\n  a,b=f()\n  A+=[a]\n  B+=[b]\nm=max(A)\nB.sort()\nc=0\nwhile h>0 and B and B[-1]>m:\n  h-=B.pop()\n  c+=1\nprint(c--h//m*(h>0))", "N,H = map(int,input().split())\nab = [list(map(int,input().split())) for i in range(N)]\nab = list(zip(*ab))\na = sorted(ab[0],reverse=True)\nb = sorted(ab[1],reverse=True)\namax = a[0]\nbc = 0\nans = 0\nflag = True\nwhile H > 0 and flag:\n    bmax = b[bc]\n    if bmax > amax:\n        H -= bmax\n        bc += 1\n        if bc == N:\n            flag = False\n        ans += 1\n    else:\n        flag = False\nif H > 0:\n    ans += (H+amax-1)//amax\nprint(ans)", "N, H = [int(_) for _ in input().split()]\n\nA = []\nB = []\nfor _ in range(N):\n    a, b = [int(_) for _ in input().split()]\n    A.append(a)\n    B.append(b)\n\na = max(A)\ncnt = 0\n\nfor b in sorted(B, reverse=True):\n    if b < a:\n        break\n    H -= b\n    cnt += 1\n    \n    if H <= 0:\n        print(cnt)\n        return\n\ncnt += H // a\nif H % a != 0:\n    cnt += 1\nprint(cnt)\n", "N,H = map(int,input().split())\nls = []\nfor i in range(N):\n    a,b = map(int,input().split())\n    ls.append([a,b])\nls.sort()\nls.sort(key=lambda x:-x[0])\nmainkatana = ls.pop(0)\nls.sort(key=lambda x:-x[1])\nls.append([0,0])\nii = 0\nwhile ls[0][1] >= mainkatana[0] and H > mainkatana[1]:\n    ii += 1\n    nage = ls.pop(0)\n    H -= nage[1]\ncut = max(0,-(-(H-mainkatana[1])//mainkatana[0]))\nii += cut\nif H > 0:\n    ii += 1\nprint(ii)", "#!/usr/bin/env python3\nimport bisect\nimport sys\nimport math\nsys.setrecursionlimit(10**6)\n\n\nn, h = list(map(int, input().split()))\n\na = []\nb = []\nab = []\nfor i in range(n):\n    a_tmp, b_tmp = list(map(int, input().split()))\n    a.append(a_tmp)\n    b.append(b_tmp)\n    # ab.append((b_tmp, a_tmp))\n\na_max = max(a)\nb.sort()\n\nindex = bisect.bisect_right(b, a_max)\n\nans = 0\nfor i in reversed(list(range(index, n))):\n    h -= b[i]\n    ans += 1\n    if h <= 0:\n        break\n\n# print(h)\nif h > 0:\n    ans += math.ceil(h/a_max)\n\nprint(ans)\n", "from math import ceil\nn,h = map(int,input().split())\nlst = [list(map(int,input().split())) for _ in range(n)]\nmax_a = max([lst[i][0] for i in range(n)])\nb = sorted(lst[i][1] for i in range(n))+[0]\nfor i in range(n-1,-1,-1):\n    b[i] += b[i+1]\nans = 10**10\nfor i in range(n+1):\n    hp = h-b[i]\n    t = max(0, ceil(hp/max_a))\n    t += n-i\n    ans = min(ans, t)\nprint(ans)", "# Comment out -> using bisect ver. method\n# import bisect\nimport math\nN, H = list(map(int, input().split()))\nswing = []\nthrow = []\nfor _ in range(N):\n    sw, th = list(map(int, input().split()))\n    swing.append(sw)\n    throw.append(th)\nswing.sort(reverse=True)\nthrow.sort(reverse=True)\n'''\nidx = bisect.bisect_right(throw, swing[0])\nif idx == len(throw):\n    print(math.ceil(H / swing[0]))\n'''\nif swing[0] >= throw[0]:\n    print((math.ceil(H / swing[0])))\nelse:\n    # throw = throw[idx:]\n    cnt = 0\n    damage_sum = 0\n    while cnt < len(throw):\n        if throw[cnt] <= swing[0]:\n            break\n        damage_sum += throw[cnt]\n        cnt += 1\n        if damage_sum >= H:\n            print(cnt)\n            return\n    '''\n    for i in reversed(throw):\n        cnt += 1\n        damage_sum += i\n        if damage_sum >= H:\n            print(cnt)\n            return\n    '''\n    print((math.ceil(cnt + (H - damage_sum) / swing[0])))\n", "N, H = map(int, input().split())\nslash = 0\nThrow = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    slash = max(slash, a)\n    if b > a: Throw.append(b)    \n#slash=\u65ac\u6483\u6700\u5927\u30c0\u30e1\u30fc\u30b8\u3001\u6295\u3052\u3066slash\u8d85\u306e\u30c0\u30e1\u30fc\u30b8\u304c\u51fa\u308b\u306a\u3089\u3070\u305d\u306e\u5200\u3092\u30c0\u30e1\u30fc\u30b8\u304c\u5927\u304d\u3044\u9806\u306b\u6295\u3052\u308b\nThrow = sorted([th for th in Throw if th > slash], reverse=True)\ndmg, cnt = 0, 0\nfor throw in Throw:\n    if dmg >= H: break\n    dmg += throw\n    cnt += 1\nif dmg < H:\n    from math import ceil\n    cnt += ceil((H-dmg)/slash)\nprint(cnt)", "n, h = map(int, input().split())\nlist_AB = [ list(map(int,input().split(\" \"))) for _ in range(n)]\ncnt = 0\nA = 0\n\nfor a, b in list_AB:\n    A = max(A, a)\n\nlist_AB.sort(key=lambda x:x[1], reverse=True)\nfor a, b in list_AB:\n    if b > A:\n        h -= b\n        cnt += 1\n\n    if h <= 0:\n        break\n\nif h > 0:\n    if h % A == 0:\n        cnt += h // A\n    else:\n        cnt += h // A + 1\n\nprint(cnt)", "N,H=map(int,input().split())\nab=[list(map(int,input().split()))for _ in range(N)]\nab.sort()\nM=ab[-1][0]\nB=[b for a,b in ab]\nB.sort()\nB=B[::-1]\nans=0\nfor b in B:\n    if H>0 and b>M:\n        H-=b\n        ans+=1\n    else:\n        break\nans+=0--max(0,H)//M\nprint(ans)", "N, H = map(int, input().split())\nl = []\nA = []\nB = []\nfor i in range(N):\n  a, b = map(int, input().split())\n  A.append(a)\n  B.append(b)\n\nB.sort(reverse=True)\nans = 0\nn = max(A)\nflag = True\nfor i in range(N):\n  if B[i] > n:\n    ans += 1\n    H -= B[i]\n    if H <= 0:\n      flag = False\n      break\n  else:\n    break\nif flag:\n  ans += H // n\n  if H % n != 0:\n    ans += 1\nprint(ans)", "n,h = list(map(int,input().split()))\nA = []\nB = []\nfor i in range(n):\n    a,b = list(map(int,input().split()))\n    A.append(a)\n    B.append(b)\nA.sort(reverse=True)\nB.sort(reverse=True)\nB = [ i for i in B if i > A[0] ]\nans = 0\nfor i in B:\n    ans += 1\n    h -= i\n    if h <= 0:\n        break\nif h > 0:\n    if h % A[0] == 0:\n        ans += (h // A[0])\n    else:\n        ans += (h // A[0]) + 1\nprint(ans)\n", "3\n#coding: utf-8\n\nN, H = (int(x) for x in input().split())\n\nA = []\nB = []\nfor i in range(N):\n    a, b = (int(x) for x in input().split())\n    A.append(a)\n    B.append(b)\n\nA.sort(reverse=True)\nB.sort(reverse=True)\n\nret = 0\nAMax=A[0]\nfor b in B:\n    if b < AMax or H <= 0:\n        break\n    H -= b\n    ret += 1\n\nif (H > 0):\n    ret += H // AMax\n    if H % AMax != 0:\n        ret += 1\nprint(ret)", "import math\n\nn, h = map(int, input().split(\" \"))\nabL = [list(map(int, input().split(\" \"))) for _ in range(n)]\n\naL = []\nbL = []\nfor a, b in abL:\n    aL.append(a)\n    bL.append(b)\naL = sorted(aL)\nbL = sorted(bL)\n\naMax = max(aL)\nans = 0\nwhile h != 0:\n    if h <= 0:\n        break\n    if len(bL) == 0 or bL[-1] < aMax:\n        ans += math.ceil(h / aMax)\n        break\n    ans += 1\n    h -= bL.pop()\n\nprint(ans)", "n,h=list(map(int,input().split()))\naa=[]\nbb=[]\nfor _ in range(n):\n  a,b=list(map(int,input().split()))\n  aa.append(a)\n  bb.append(b)\n  \nmaxa=max(aa)\nbb.sort(reverse=True)\nnage=0\nch=0\nfor i in range(n):\n  if bb[i]>=maxa:\n    nage+=bb[i]\n    ch+=1\n  else:\n    break\n    \nif h>nage:\n  rest=h-nage\n  ch1=0\n  if rest%maxa==0:\n    ch1+=rest//maxa\n  else:\n    ch1+=(rest//maxa+1)\n  print((ch1+ch))\n  \nelse:\n  ans=0\n  hp=0\n  for j in range(n):\n    if hp>=h:\n      break\n    else:\n      ans+=1\n      hp+=bb[j]\n  print(ans)\n    \n  \n", "N,H = map(int,input().split())\nK = [list(map(int,input().split())) for n in range(N)]\nA = max(k[0] for k in K)\nB = sorted(b for a,b in K if A<b)\nC = 0\n\nwhile 0<H and B:\n  H-=B.pop()\n  C+=1\n\nprint(C-(-max(0,H)//A))", "n, h = map(int, input().split())\na, b = [], []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    a.append(x)\n    b.append(y)\nmax_a = max(a)\nb.sort(reverse=True)\ncnt = 0\nfor i in range(n):\n    if b[i] < max_a:\n        break\n    h -= b[i]\n    cnt += 1\n    if h <= 0:\n        break\nif h > 0:\n    cnt += (h - 1) // max_a + 1\nprint(cnt)", "N,H=map(int,input().split())\nA=[]\nB=[]\nfor i in range(N):\n    AB=list(map(int,input().split()))\n    A.append(AB[0])\n    B.append(AB[1])\n\nB.sort(reverse=True)\nAmax=max(A)\nans=0\n\nfor i in range(N):\n    if B[i]<Amax:\n        break\n\n    H-=B[i]\n    ans+=1\n    if H<=0:\n        break\n\nif H>0:\n    ans=ans+(-(-H//Amax))\n\nprint(ans)", "from math import ceil\nn, h, *AB = map(int, open(0).read().split())\na = max(AB[::2])\nB = sorted(b for b in AB[1::2] if a < b)[::-1]\nc = 0\nfor b in B:\n    h -= b\n    c += 1\n    if h <= 0:\n        break\nelse:\n    c += ceil(h / a)\nprint(c)", "n,h=list(map(int,input().split()))\nnum=[]\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    num.append([a,0])\n    num.append([b,1])\nnum.sort(reverse=True,key=lambda x: x[0])\nans=0\nfor i in range(n*2):\n    if num[i][1]==1:\n        ans+=1\n        h-=num[i][0]\n        if h<=0:\n            break\n    else:\n        ans+=-(h//-num[i][0])\n        break\nprint(ans)\n", "import sys\n\nn, h = map(int, input().split())\na = [list(map(int, x.split())) for x in sys.stdin.readlines()]\na.sort(reverse=True)\nb = sorted(a, key=lambda x:x[1], reverse=True)\ncnt = 0\nfor i in b:\n    if i[1] < a[0][0]:\n        break\n    cnt += 1\n    h -= i[1]\n    if h <= 0:\n        print(cnt)\n        return\nprint(cnt + -(-h//a[0][0]))", "n,h=map(int,input().split())\nA=[]\nB=[]\nfor i in range(n):\n    a,b=map(int,input().split())\n    A.append(a)\n    B.append(b)\n\nmaxa=max(A)\nC=[]\nB.sort(reverse=True)\nans=0\nfor ele in B:\n    if ele<maxa:\n        break\n    ans+=1\n    h-=ele\n    if h<=0:\n        break\nif h>0:\n    ans+=(h+maxa-1)//maxa\nprint(ans)", "N,H=map(int,input().split())\nB=[]\nA=0\nfor _ in range(N):\n    a,b=map(int,input().split())\n    A=max(A,a)\n    B.append(b)\nB.sort(reverse=True)\nans=(H-1)//A+1\nfor i in range(N):\n    H-=B[i]\n    if H<=0:\n        ans=min(ans,i+1)\n        break\n    ans=min(ans,(H-1)//A+1+i+1)\nprint(ans)", "n, h = list(map(int, input().split()))\na = [0] * n\nb = [0] * n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n\na = sorted(a, reverse=True)\nb = sorted(b, reverse=True)\n\nans = 0\ni = 0\nwhile i < n and a[0] < b[i]:\n    h -= b[i]\n    i += 1\n    ans += 1\n    if h <= 0:\n        break\nif h <= 0:\n    print(ans)\nelse:\n    print((ans + (h + a[0] - 1) // a[0]))\n", "import math\n\nn, h = map(int, input().split())\nab = [None] * n\nfor i in range(n):\n    ab[i] = tuple(map(int, input().split()))\n\namax = max([m[0] for m in ab])\n\nans = 0\nfor a, b in sorted(ab, key=lambda m: -m[1]):\n    if b <= amax:\n        break\n    h -= b\n    ans += 1\n    if h <= 0:\n        print(ans)\n        return\n\nans += math.ceil(h / amax)\nprint(ans)", "# B\u3092\u4e00\u56de\u4f7f\u3048\u308b\u3068\u8003\u3048\u308b\u3068\n# - Ai>Bi\u3067\u3042\u308bBi\u3092\u4f7f\u3046\u610f\u5473\u306f\u306a\u3044(Ai\u3067\u6bb4\u308c\u3070\u3044\u3044\u306e\u3067)\n# - Ai>Aj\u3067\u3042\u308bAj\u3092\u4f7f\u3046\u610f\u5473\u306f\u306a\u3044\uff08Ai\u3067\u6bb4\u308c\u3070\u3044\u3044\u306e\u3067\uff09\n# \u3064\u307e\u308aA\u4e2d\u6700\u5f37\u306eAi\u3088\u308a\u4e0a\uff08i=j\u81ea\u8eab\u3092\u542b\u3080\uff09\u306eBj\u30921\u5ea6\u4f7f\u3044\u3001\u3042\u3068\u306fAi\u3067\u6bb4\u308b\nn, h = map(int, input().split())\npower = [list(map(int, input().split())) for _ in range(n)]\nmaxa = sorted(power, key=lambda x : x[0], reverse=True)[0][0]\nmuscleb = sorted(list(filter(lambda x : x[1] >=  maxa, power)), key = lambda x : x[1], reverse=True)\nans = 0\nfor m in muscleb:\n    ans += 1\n    h -= m[1]\n    if h <= 0:\n        print(ans)\n        return\nadditionala = h // maxa\nif h % maxa != 0:\n    additionala += 1\nprint(additionala + ans)", "from math import ceil\nn, h = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    A, B = map(int, input().split())\n    a.append(A)\n    b.append(B)\nma = max(a)\nmb = [i for i in b if i > ma]\nmb.sort(reverse=True)\nif sum(mb) >= h:\n    i = 0\n    while h > 0:\n        h -= mb[i]\n        i += 1\n    print(i)\nelse:\n    cnt = len(mb)\n    h -= sum(mb)\n    print(cnt + ceil(h/ma))", "import math\nN, H = map(int, input().split())\nA = [0]*N\nB = [0]*N\nfor i in range(N):\n  A[i], B[i] = map(int,input().split())\naa = sorted(A,key=lambda x: -x)\nbb = sorted(B,key=lambda x: -x)\nans = 0\nI = H\nmh = max(aa)\nfor x in bb:\n  if (x < mh):\n    break\n  I = I - x\n  ans += 1\n  if (I <= 0):\n    break\nif (I > 0):\n  ans += math.ceil(I/max(aa))\nprint(ans)", "import sys\nimport numpy as np\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninl = lambda: [int(x) for x in sys.stdin.readline().split()]\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\n\ndef solve():\n    N, H = inl()\n    a = [None] * N\n    b = [None] * N\n    mi = None\n    ma, mb = 0, 0\n    for i in range(N):\n        a[i], b[i] = inl()\n        if a[i] > ma:\n            mi = i\n            ma = a[i]\n\n    bm = max(b[mi], a[mi])\n    am = a[mi]\n\n    bb = []\n    for i in range(N):\n        bb.append((b[i], i))\n    bb.sort(reverse=True)\n\n    cnt = 0\n    for i in range(N):\n        if H <= 0:\n            break\n        x, j = bb[i]\n        debug(H, x, j)\n        if x < am:\n            break\n        H -= x\n        cnt += 1\n    if H > 0:\n        k = (H + am - 1) // am\n        cnt += k\n        H -= k * am\n        assert H <= 0\n\n    return cnt\n\n\nprint(solve())\n", "n, h = map(int, input().split())\na, b = [], []\nfor _ in range(n):\n    x, y = map(int, input().split())\n    a.append(x)\n    b.append(y)\nmax_a = max(a)\nb.sort(reverse=True)\ncnt = 0\nfor i in range(n):\n    if b[i] < max_a:\n        break\n    h -= b[i]\n    cnt += 1\n    if h <= 0:\n        break\nif h > 0:\n    cnt += (h - 1) // max_a + 1\nprint(cnt)", "#!/usr/bin/env python3\n\nN, H = list(map(int, input().split()))\n\nA = []\nB = []\n\nfor i in range(N):\n    a, b = list(map(int, input().split()))\n    A.append(a)\n    B.append(b)\n\nA = sorted(A)[::-1]\nB = sorted(B)[::-1]\n\nret = 0\nif B[0] < A[0]:\n    if H % A[0] == 0: ret = H // A[0]\n    else: ret = H // A[0] + 1\n    H = 0\nelse:\n    for b in B:\n        if b < A[0]:\n            if H%A[0] == 0: ret += H // A[0]\n            else: ret += H // A[0] + 1\n            H = 0\n            break\n        else:\n            ret += 1\n            H -= b\n\n        if H <= 0:\n            break\n\n    if H > 0:\n        if H%A[0] == 0: ret += H // A[0]\n        else: ret += H // A[0] + 1\n\n\nprint(ret)\n", "import sys\ninput = sys.stdin.readline\nn, h = map(int, input().split())\na, b = [0]*n, [0]*n\nfor i in range(n):\n    a[i], b[i] = map(int, input().split())\na_max = max(a)\nb_thr = []\nfor i in b:\n    if i > a_max:\n        b_thr.append(i)\nb_thr.sort(reverse=True)\nans = 0\nfor i in b_thr:\n    if h > 0:\n        h -= i\n        ans += 1\n    else:\n        print(ans)\n        return\nif h % a_max == 0:\n    ans += h // a_max\nelse:\n    ans += h // a_max + 1\nprint(ans)", "N,H=map(int,input().split())\na=0\nb=[]\nfor _ in range(N):\n    A,B=map(int,input().split())\n    a=max(a,A)\n    b.append(B)\nb=sorted(b,reverse=True)\nans=0\nfor i in range(N):\n    if b[i]<=a:\n        break\n    H-=b[i]\n    ans+=1\n    if H<=0:\n        print(ans)\n        return\nprint(ans-(-H//a))", "import sys\n\nN, H = map(int, sys.stdin.readline().split())\n\nkatanas = []\nfor i in range(N):\n    a, b = map(int, sys.stdin.readline().split())\n    katanas.append((a, b, i))\n\nsk = sorted(katanas, reverse=True)\nmax_k = sk[0][0]\n\nkatanas.sort(key = lambda x:x[1], reverse=True)\nans = 0\ni = 0\nwhile H > 0:\n    if i < N and katanas[i][1] > max_k:\n        H -= katanas[i][1]\n        i += 1\n        ans += 1\n    else:\n        tmp = (H - 1) // max_k + 1\n        H -= tmp * max_k\n        ans += tmp\n        \nprint(ans)", "n, H = list(map(int, input().split()))\na = []\nb = []\nfor i in range(n):\n    ai, bi = list(map(int, input().split()))\n    a.append(ai)\n    b.append(bi)\n\nans = 0\namax = max(a)\nb.sort(reverse=True)\n# print(amax, b)\ni = 0\nwhile H > 0:\n    if i < n:\n        if amax < b[i]:\n            H -= b[i]\n            ans += 1\n            i += 1\n        else:\n            ans += H//amax\n            if H%amax != 0:\n                ans += 1\n            break\n    else:\n        ans += H//amax\n        if H % amax != 0:\n            ans += 1\n        break\n\nprint(ans)\n", "n, h = list(map(int, input().split()))\nbi_str = []\na_big = 0\nans = 0\na = [0] * n\nb = [0] * n\nfor i in range(n):\n    a[i], b[i] = list(map(int, input().split()))\n    if a[i] > a_big:\n        a_big = a[i]\n\nfor i in range(n):\n    if b[i] > a_big:\n        bi_str.append(b[i])\nbi_str.sort(reverse=True)\n#print(bi_str)\n#print(a_big)\nif h <= sum(bi_str):\n    for i in bi_str:\n        if h > 0:\n            h -= i\n            ans += 1\n        else:\n            break\nelse:\n    h -= sum(bi_str)\n    ans += len(bi_str)\n    ans += -(-h//a_big)\n    '''\n    if round(h/a_big) == h//a_big:\n        ans += h//a_big\n    else:\n        ans += h//a_big+1\n        '''\n\nprint(ans)\n\n", "n, h = list(map(int, input().split()))\ncut = 0\nthrow = []\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    cut = max(cut, a)\n    throw.append(b)\n\nthrow.sort(reverse=True)\nthrow_cam = []\nfor i in range(n):\n    if cut > throw[i]:\n        break\n    if i == 0:\n        throw_cam.append(throw[0])\n    else:\n        throw_cam.append(throw[i] + throw_cam[i-1])\n\nif throw_cam[len(throw_cam)-1] < h:\n    rh = h - throw_cam[len(throw_cam)-1]\n    if rh % cut == 0:\n        print((len(throw_cam) + rh//cut))\n    else:\n        print((len(throw_cam) + rh//cut + 1))\nelse:\n    for i in range(len(throw_cam)):\n        d = throw_cam[i]\n        if d >= h:\n            print((i+1))\n            break\n\n\n", "f=lambda:[*map(int,input().split())]\nn,h=f()\nA,B=[],[]\nfor _ in range(n):\n  a,b=f()\n  A+=[a]\n  B+=[b]\nm=max(A)\nB.sort()\nc=0\nfor b in sorted(B)[::-1]:\n  if b>m:\n    h-=b\n    c+=1\n    if h<1: break\nprint(c--h//m*(h>0))", "N, H = list(map(int, input().split()))\nA = 0\nB = []\n\nfor i in range(N):\n    a, b = list(map(int, input().split()))\n    A = max(A, a)\n    B.append(b)\n\nB = sorted(B, reverse=True) + [0]\n\ni = 0\nwhile B[i] >= A:\n    i += 1\nB = B[:i]\n\nans = 0\nfor i in range(len(B)):\n    H -= B[i]\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\nprint((ans + (H - 1) // A + 1))\n", "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import deque, defaultdict, namedtuple\nimport heapq\nfrom math import sqrt, factorial, gcd, ceil, atan, pi\ndef input(): return sys.stdin.readline()[:-1] # warning not \\n\n# def input(): return sys.stdin.buffer.readline()[:-1] # warning bytes\n# def input(): return sys.stdin.buffer.readline().strip() # warning bytes\n# def input(): return sys.stdin.buffer.readline().decode('utf-8')\nimport string\nimport operator\nimport random\n# string.ascii_lowercase\nfrom bisect import bisect_left, bisect_right\nfrom functools import lru_cache, reduce\nMOD = int(1e9)+7\nINF = float('inf')\n\n# sys.setrecursionlimit(int(1e6))\n\ndef solve():\n    # n = int(input())\n    n, H = [int(x) for x in input().split()]\n    a = [0] * n\n    b = [0] * n\n    for i in range(n):\n        a[i], b[i] = [int(x) for x in input().split()]\n    \n    mx = max(a)\n    b.sort(reverse=True)\n    ans = (H + mx - 1) // mx\n    pref = 0\n\n    for i in range(n):\n        pref += b[i]\n        cur = i + 1 + (max(0, H - pref) + mx - 1) // mx\n        ans = min(ans, cur)\n    print(ans)\nT = 1\n# T = int(input())\nfor case in range(1,T+1):\n    ans = solve()\n\n\n\"\"\"\n\ndp[num_changes][blue_placed]\n\n\nabba\n\n(m + 1)\n\n\"\"\"\n", "import sys\nimport math\n\n\nN, H = [int(x) for x in input().split()]\nA = []\nB = []\nfor _ in range(N):\n    a, b = [int(x) for x in input().split()]\n    A.append(a)\n    B.append(b)\nB.sort(reverse=True)\nmax_a = max(A)\ncnt = 0\nfor b in B:\n    if b < max_a:\n        break\n    H -= b\n    cnt += 1\n    if H <= 0:\n        print(cnt)\n        return\ncnt += int(math.ceil(H / max_a))\nprint(cnt)\n", "import math\n\nN, H = map(int, input().split())\na_l = []\nb_l = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    a_l.append(a)\n    b_l.append(b)\n\na_l.sort(reverse=True)\nb_l.sort(reverse=True)\nans = 0\nfor i in range(N):\n    if a_l[0] >= b_l[i]:\n        break\n    else:\n        ans += 1\n        H = max(H - b_l[i], 0)\n        if H <= 0:\n            break\nans += math.ceil(H / a_l[0])\nprint(ans)", "import math\nimport sys\n\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\n\nN, H = list(map(int, input().split()))\n\nmax_a = 0\nmax_a_b = 0\nAB = []\nfor _ in range(N):\n    ab = list(map(int, input().split()))\n    AB.append(ab)\n    if max_a < ab[0]:\n        max_a = ab[0]\n        max_a_b = ab[1]\n    elif max_a == ab[0] and max_a_b > ab[1]:\n        max_a = ab[0]\n        max_a_b = ab[1]\n\nAB.sort(key=lambda x: x[1], reverse=True)\n\nthrow_sum = 0\nans = 0\nfor i in range(N):\n    if max_a < AB[i][1]:\n        throw_sum += AB[i][1]\n        ans += 1\n        if throw_sum >= H:\n            print(ans)\n            return\n\nH -= throw_sum\nans += math.ceil(H/max_a)\n\nprint(ans)\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\n\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\nn,h = readInts()\nA = [0] * n\nB = [0] * n\nfor i in range(n):\n    a,b = readInts()\n    A[i] = a\n    B[i] = b\nA = sorted(A, reverse = True)\nB = sorted(B, reverse = True)\nMAX = A[0]\nans = 0\nfor v in B:\n    # \u6295\u3052\u308c\u308bMAX\u3088\u308a\u5927\u304d\u3044\u7269\u306f\u3076\u3093\u6295\u3052\u308d\n    if h <= 0:\n        break\n    if v > MAX: # \u6295\u3052\u308d\n        # \u3044\u3064\u6295\u3052\u3066\u3082\u4e00\u7dd2\u3060\u306d\u3048\n        ans += 1\n        h -= v\n    else:\n        break\nif h > 0:\n    ans += (h + MAX - 1) // MAX # \u632f\u308c\u308b\u3084\u3064\u9650\u754c\u307e\u3067\u632f\u3063\u3066\u3084\u308d\u3046\nprint(ans)\n", "import sys\nimport re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nN, H = MAP()\nA, B = [], []\nfor i in range(N):\n    a, b = MAP()\n    A.append(a)\n    B.append(b)\n\nmax_a = max(A)\nB = sorted(B, reverse=True)\n\nans = 0\n\nfor i in range(N):\n    if max_a >= B[i]:\n        ans += -(-H//max_a)\n        H = 0\n    else:\n        H -= B[i]\n        ans += 1\n    if H <= 0:\n        print(ans)\n        break\nif H > 0:\n    ans += -(-H//max_a)\n    print(ans)\n", "import heapq as hq\nfrom itertools import accumulate\nfrom math import ceil\nN, H = map(int, input().split())\nab = [tuple(map(int,input().split())) for _ in range(N)]\nab.sort(key=lambda x:x[1], reverse=True)\nab.sort(key=lambda x:x[0], reverse=True)\nma, mb = ab[0]\nq = [ab[i][1] for i in range(1, N)]\nq.sort(reverse=True)\nans = float(\"inf\")\nacc = [0]+list(accumulate(q, lambda x,y:x+y))\nfor l in range(len(q)+1):\n    h = H\n    cnt = l\n    h -= acc[l]\n    if h <= 0:\n        ans = min(ans, cnt)\n        continue\n    h -= mb\n    cnt += 1\n    if h <= 0:\n        ans = min(ans, cnt)\n        continue\n    cnt += ceil(h/ma)\n    ans = min(ans, cnt)\nprint(ans)", "import bisect\nimport math\nN, H = list(map(int, input().split()))\nswing = []\nthrow = []\nfor _ in range(N):\n    sw, th = list(map(int, input().split()))\n    swing.append(sw)\n    throw.append(th)\nswing.sort(reverse=True)\nthrow.sort()\nidx = bisect.bisect_right(throw, swing[0])\nif idx == len(throw):\n    print((math.ceil(H / swing[0])))\nelse:\n    throw = throw[idx:]\n    cnt = 0\n    damage_sum = 0\n    for i in reversed(throw):\n        cnt += 1\n        damage_sum += i\n        if damage_sum >= H:\n            print(cnt)\n            return\n    print((math.ceil(cnt + (H - damage_sum) / swing[0])))\n", "def resolve():\n    '''\n    code here\n    '''\n    N, H = [int(item) for item in input().split()]\n    ab = [[int(item) for item in input().split()] for _ in range(N)]\n    ab.sort(reverse=True, key=lambda x:x[1])\n    a_max_ab = max(ab, key=lambda x:x[0])\n\n    cnt = 0    \n    for a, b in ab:\n        if b > a_max_ab[0]:\n            H -= b\n            cnt += 1\n        \n        if H <= 0:\n            break\n\n    if H > 0:\n        cnt += H // a_max_ab[0]\n        if H  % a_max_ab[0] != 0:\n            cnt += 1\n\n    print(cnt)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import bisect\nimport math\nN, H = map(int, input().split())\nA = []\nB = []\nfor i in range(N):\n  a, b = map(int, input().split())\n  A.append(a)\n  B.append(b)\nam = max(A)\nB.sort()\nidx = bisect.bisect_right(B, am)\nans = 0\nfor i in range(1, N-idx+1):\n  H -= B[-i]\n  ans += 1\n  if H <= 0:\n    print(ans)\n    return\nprint(ans + math.ceil(H/am))", "n,h=map(int,input().split())\nA,B=[0]*n,[0]*n\nfor i in range(n):\n  A[i],B[i]=map(int,input().split())\nA_max=max(A)\nB.sort(reverse=True)\nans=0\nfor i in B:\n  if i > A_max:\n    h-=i\n    ans+=1\n    if h <= 0:\n      h=0\n      break\n  else:break\nif h<0:\n  h=0\nq = h / A_max\np = q % 1\nans += int(q)\nif p>0:\n  print(ans+1)\nelse:\n  print(ans)", "import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom functools import reduce\nfrom bisect import bisect_left, insort_left\nfrom heapq import heapify, heappush, heappop\n\nINPUT = lambda: sys.stdin.readline().rstrip()\nINT = lambda: int(INPUT())\nMAP = lambda: list(map(int, INPUT().split()))\nS_MAP = lambda: list(map(str, INPUT().split()))\nLIST = lambda: list(map(int, INPUT().split()))\nS_LIST = lambda: list(map(str, INPUT().split()))\n\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef main():\n    N, H = MAP()\n    A, B = [0] * N, [0] * N\n    for i in range(N):\n        A[i], B[i] = MAP()\n\n    MAX_A = max(A)\n    B.sort(reverse=True)\n\n    ans = 0\n    for i in range(N):\n        if MAX_A >= B[i]:\n            ans += -(-H // MAX_A)\n            print(ans)\n            break\n        else:\n            H -= B[i]\n            ans += 1\n\n        if H <= 0:\n            print(ans)\n            break\n    else:\n        ans += -(-H // MAX_A)\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from bisect import bisect_left\n\nN,H=map(int,input().split())\namax=0\nB=[]\nfor i in range(N):\n  a,b=map(int,input().split())\n  if a>amax:amax=a\n  B.append(b)\n\nB = sorted(B)\nidx = bisect_left(B,amax)\nB = B[idx:][::-1]\ncum=[0]\nfor i in range(len(B)):\n  cum += [cum[-1]+B[i]]\n  if cum[-1]>=H:\n    print(i+1)\n    return\nprint(len(B) + ((H-cum[-1])+amax-1)//amax)", "n,h = map(int,input().split())\nmxa = 0\ndmg = 0\ncnt = 0\ndi = []\nfor i in range(n):\n    a,b = map(int,input().split())\n    di.append(b)\n    if a > mxa:\n        mxa = a\ndi.sort(reverse=True)\nfor j in di:\n    if j >= mxa:\n        dmg += j\n        cnt += 1\n        if dmg >= h:\n            break\nif dmg < h:\n    cnt += (h-dmg)//mxa\n    if (h-dmg)%mxa != 0:\n        cnt += 1\nprint(cnt)", "import math\n\nN, H = list(map(int, input().split()))\nA = []\nB = []\nfor i in range(N):\n    a, b = list(map(int, input().split()))\n    A.append(a)\n    B.append(b)\n\nA.sort(reverse=True)\nB.sort(reverse=True)\n\na_max = A[0]\n\nans = 0\nbi = 0\nwhile H > 0:\n    if bi < N and a_max <= B[bi]:\n        ans += 1\n        H -= B[bi]\n        bi += 1\n    else:\n        ans += math.ceil(H / a_max)\n        break\nprint(ans)\n", "n, h = map(int, input().split())\nalst = []\nblst = []\nfor _ in range(n):\n    a, b = map(int, input().split())\n    alst.append(a)\n    blst.append(b)\nblst.sort(reverse = True)\na = max(alst)\nans = 0\nfor num in blst:\n    if num < a:\n        ans += (h - 1) // a + 1\n        break\n    else:\n        ans += 1\n        h -= num\n        if h <= 0:\n            break\n\nelse:\n    ans += (h - 1) // a + 1\nprint(ans)", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\nimport string\n\ndef main():\n    N,H = i_map()\n    l = []\n    for _ in range(N):\n        a,b = i_map()\n        l.append([a,b])\n    t = [list(i) for i in zip(*l)]\n    ans = 0\n\n    M = max(t[0])\n    throw = 0\n    for i in sorted(t[1], reverse=True):\n        if i > M:\n            throw += i\n            H -= i\n            ans += 1\n            if H <= 0:\n                print(ans)\n                return\n    i = t[0].index(M)\n    # H += t[1][i]\n    if H%M == 0:\n        ans += H//M\n    else:\n        ans += H//M+1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, H = map(int, input().split())\nA = []\nB = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    A.append(a)\n    B.append(b)\n\nmax_a = max(A)\nB.sort(key=lambda b:-b) # descending                                                                                                                          \n\nans = 0\nfor b in B:\n    if b < max_a:\n        break\n    H -= b\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\nans += (H-1) // max_a + 1 # ceil                                                                                                                              \nprint(ans)", "n,h = map(int,input().split())\na = 0\nb = []\n\nfor i in range(n):\n    A,B = map(int,input().split())\n    a = max(A,a)\n    b.append(B)\n    \nb = sorted(b)[::-1]\n\nfor i in range(n):\n    if 0 < h and a < b[i]:\n        h -= b[i]\n        ans = i + 1\n        \n    else:\n        ans = i\n        break\n        \nif 0 < h:\n    ans += -(-h//a)\n    \nprint(ans)", "from math import ceil\nn,h=map(int,input().split())\na=[0]*n\nb=[0]*n\nfor i in range(n):\n  a[i],b[i]=map(int,input().split())\ndmax=max(a)\nb.sort(reverse=True)\nans=0\nfor d in b:\n  if h<=0:\n    print(ans)\n    return\n  if d<dmax:\n    break\n  h-=d\n  ans+=1\nif h<=0:\n  print(ans)\n  return\nprint(ans+ceil(h/dmax))", "import sys\nimport math\ninput=sys.stdin.readline\n\nn,h=list(map(int,input().split()))\n\nonce=[]\ninfinity=[]\n\nfor i in range(n):\n  a,b=list(map(int,input().split()))\n  once.append(b)\n  infinity.append(a)\n  \nonce.sort(reverse=True)\n\npin=max(infinity)\n\nonce2=[]\nfor i in range(n):\n  if once[i]>pin:\n    once2.append(once[i])\n  \n  else:\n      break\n\nans=0\nfor i in once2:\n    ans+=1\n    h-=i\n    if h<=0:\n        print(ans)\n        return\n\nans+=math.ceil(h/pin)\n\n\nprint(ans)\n", "import math\nn, h = map(int, input().split())\nlis =[list(map(int, input().split())) for _ in range(n)]\n\na_sort = sorted(lis, reverse=True)\n\nb_sort = sorted(lis, key=lambda x:x[1], reverse=True)\n\ncnt = 0\nfuru = a_sort[0][0]\n\nfor nage in b_sort:\n    if nage[1] > furu:\n        h -= nage[1]\n        cnt += 1\n    else:\n        break\n\n    if h <= 0:\n        break\n\nif h <= 0:\n    print(cnt)\nelse:\n    plus = int(math.ceil(h/furu))\n    cnt += plus\n    print(cnt)", "n,h,*L=map(int,open(x:=0).read().split());a=max(L[::2]);B=sorted([l for l in L[1::2] if l>a])\nfor b in B[::-1]:\n  h-=b\n  x+=1\n  if h<1:break\nprint(x-min(0,-h//a))", "n,h = map(int,input().split())\nabl = [list(map(int,input().split())) for nesya in range(n)]\nabl.sort()\namax = abl[-1][0]\nb_list = []\nfor ab in abl:\n  b = ab[1]\n  if amax <= b:\n    b_list.append(b)\nb_list.sort()\nans = 0\nfor num in b_list[::-1]:\n  h -= num\n  ans += 1\n  if h <= 0:\n    print(ans)\n    return\nif h%amax == 0:\n  print(ans+h//amax)\nelse:\n  print(ans+h//amax+1)", "N, H = map(int, input().split())\nslash = 0\nThrow = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    slash = max(slash, a)\n    if b > a: Throw.append(b)    \n#slash=\u65ac\u6483\u6700\u5927\u30c0\u30e1\u30fc\u30b8\u3001\u6295\u3052\u3066slash\u8d85\u306e\u30c0\u30e1\u30fc\u30b8\u304c\u51fa\u308b\u306a\u3089\u3070\u305d\u306e\u5263\u3092\u30c0\u30e1\u30fc\u30b8\u304c\u5927\u304d\u3044\u9806\u306b\u6295\u3052\u308b\nimport heapq as hq\nThrow = [-th for th in Throw if th > slash]\nhq.heapify(Throw)\n\ndmg, cnt = 0, 0\nwhile len(Throw) != 0:\n    if dmg >= H: break\n    dmg += -hq.heappop(Throw)\n    cnt += 1\nif dmg < H:\n    from math import ceil\n    cnt += ceil((H-dmg)/slash)\nprint(cnt)", "n, h = list(map(int, input().split()))\na = [0] * n\nb = [0] * n\nfor i in range(n):\n    ai, bi = list(map(int, input().split()))\n    a[i] = ai\n    b[i] = bi\n\na.sort(reverse=True)\nb.sort(reverse=True)\nb_select = []\nfor i in range(n):\n    if b[i] < a[0]:\n        break\n    else:\n        b_select.append(b[i])\n\nif sum(b_select) >= h:\n    for i in range(n):\n        h -= b_select[i]\n        if h <= 0:\n            break\n    counter = i + 1\nelse:\n    h -= sum(b_select)\n    counter = len(b_select)\n    counter += (h + a[0] - 1) // a[0]\n\nprint(counter)\n", "n,h=map(int,input().split())\nA=[]\nB=[]\nfor i in range(n):\n  a,b=map(int,input().split())\n  A.append(a)\n  B.append(b)\nA=max(A)\nB.sort(reverse=True)\ncount=0\nfor i in B:\n  if A>i:\n    break\n  else:\n    if h>0:\n      h-=i\n      count+=1\n    else:\n      break\nif h%A==0 and h>0:\n  print(count+h//A)\nelif h%A!=0 and h>0:\n  print(count+h//A+1)\nelse:\n  print(count)", "N, H = list(map(int, input().split()))\nAB = [list(map(int, input().split())) for _ in range(N)]\n\nAB.sort(key=lambda x: x[1], reverse=True)\n\na_max = 0\nfor i in range(N):\n    a_max = max(a_max, AB[i][0])\n\ncnt = 0\nsum_throw = 0\nfor i in range(N):\n    if AB[i][1] > a_max:\n        sum_throw += AB[i][1]\n        cnt += 1\n\n        if sum_throw >= H:\n            print(cnt)\n            return\n\n\nrem = H - sum_throw\n\nq, r = divmod(rem, a_max)\nif r == 0:\n    cnt += q\nelse:\n    cnt += q + 1\n\nprint(cnt)\n", "from math import ceil\nn,h = map(int,input().split())\nk = [list(map(int,input().split())) for i in range(n)]\na,b = [list(i) for i in zip(*k)]\nb.sort(reverse=True)\na = max(a)\nans = 0\nfor i in b:\n    if i > a:\n        ans += 1\n        h -= i\n        if h <= 0:\n            print(ans)\n            return\n    else:\n        break\nprint(ans + ceil(h / a))", "from bisect import bisect_right\nn,h=map(int,input().split())\na=[]\nb=[]\nfor i in range(n):\n    a1,b1=map(int,input().split())\n    a.append(a1)\n    b.append(b1)\na_s=sorted(a, reverse=1)\nb_s1=sorted(b)\nb_s=sorted(list(b_s1[bisect_right(b_s1,a_s[0]):]),reverse=1)\n\n\ncount=0\nsum=0\n\nfor j in b_s:\n    sum+=j\n    count+=1\n    if h<=sum:\n        print(count)\n        break\nelse:\n    if (h-sum)%a_s[0]==0:\n        print(count+(h-sum)//a_s[0])\n        \n    else:\n        print(count+1+(h-sum)//a_s[0])", "import sys\n\ninput = sys.stdin.readline\n\nN, H = map(int, input().split())\nkatanas = []\nfor _ in range(N):\n    a, b = map(int, input().split())\n    katanas.append((a, b))\n\nmax_a = sorted(katanas, reverse=True)[0][0]\nthrows = []\nfor a, b in katanas:\n    if max_a < b:\n        throws.append(b)\n\nans = 0\nfor b in sorted(throws, reverse=True):\n    H -= b\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\n\nprint(ans + (H - 1) // max_a + 1)", "import bisect\nN, H = list(map(int, input().split()))\nB = [0] * N\nm = 0\nfor i in range(N):\n  a, b = list(map(int, input().split()))\n  B[i] = b\n  m = max(m, a)\n  \nB = sorted(B)\nindex = bisect.bisect_left(B, m)\n#print(index)\n\nover = sum(B[index:])\nif over >= H:\n  #B\u306e\u307f\n  now = 0\n  i = 1\n  while now < H:\n    now += B[-i]\n    i += 1\n  print((i - 1))  \nelse:\n  H -= over\n  ans = N - index\n  ans += int(H / m)\n  if H % m != 0:\n    ans += 1\n  print(ans)\n  \n  \n", "N, H = list(map(int, input().split()))\nA = []\nB = []\nfor i in range(N):\n    a, b = list(map(int,input().split()))\n    A.append(a)\n    B.append(b)\nA_sorted = sorted(A, reverse=True)\nB_sorted = sorted(B, reverse=True)\n\nans = 0\nattack_sum = 0\nfor i in range(N):\n    if B_sorted[i] >= A_sorted[0]:\n        if H > attack_sum:\n            attack_sum += B_sorted[i]\n            ans += 1\n        else:\n            print(ans)\n            return\n    else:break\nans += - (-(H - attack_sum) // A_sorted[0])\nprint(ans)\n\n", "from heapq import heappop, heappush\n\nN, H = map(int, input().split())\na = [None] * N\nb = [None] * N\nfor i in range(N):\n    a[i], b[i] = map(int, input().split())\n\na.sort()\nb.sort()\nq = []\nfor i in range(N):\n    if b[i] > a[-1]:\n        heappush(q, -b[i])\n\nans = 0\nwhile q:\n    H += heappop(q)\n    ans += 1\n    if H <= 0:\n        print(ans)\n        return\n\nprint(ans + (H+a[-1]-1)//a[-1])", "n, h, *A = list(map(int, open(0).read().split()))\na = max(A[::2])\nb = sorted(A[1::2])[::-1]\nfor i in range(n):\n    if h <= 0:\n        n = i\n        h = 0\n        break\n    if b[i] < a:\n        n = i\n        break\n    h -= b[i]\nprint((n - (-h // a)))\n", "import sys\n\nn, h = map(int, input().split())\n\nmax_a = 0\nb = []\nfor i in range(n):\n    x, y = map(int, input().split())\n    max_a = max(max_a, x)\n    b.append(y)\n\n# \u6295\u3052\u308b\u4fa1\u5024\u304c\u3042\u308b\u5200\u3092\u629c\u7c8b\u3059\u308b\nb = [x for x in b if x > max_a]\n\n# \u5f37\u3044\u9806\u306b\u6295\u3052\u3066\u3044\u304f\nb.sort(reverse=True)\n\ni = 0\nif len(b) > 0:\n    for i, x in enumerate(b):\n        i += 1\n        h -= x\n        if h <= 0:\n            print(i)\n            return\n\n# \u6295\u3052\u7d42\u308f\u3063\u305f\u3089\u6700\u5f37\u306e\u5200\u3067\u653b\u6483\u3057\u7d9a\u3051\u308b\nprint((h + max_a - 1) // max_a + i)", "N,H=list(map(int,input().split()))\nB=[]\nA=0\nfor _ in range(N):\n    a,b=list(map(int,input().split()))\n    A=max(A,a)\n    B.append(b)\nB.sort(reverse=True)\nans=(H-1)//A+1\nfor i in range(N):\n    H-=B[i]\n    if H<=0:\n        ans=min(ans,i+1)\n        break\n    ans=min(ans,(H-1)//A+1+i+1)\nprint(ans)\n"]