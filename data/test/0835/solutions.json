["def main():\n    s = input()\n    a = b = c = 0\n    for elem in s:\n        if elem == \"B\":\n            a += 1\n        elif elem == \"S\":\n            b += 1\n        else:\n            c += 1\n    na, nb, nc = map(int, input().split())\n    pa, pb, pc = map(int, input().split())\n    k = int(input())\n\n    l = 0\n    r = 10**13\n    while r - l > 1:\n        m = (l + r) // 2\n        cntA = max(0, a * m - na)\n        cntB = max(0, b * m - nb)\n        cntC = max(0, c * m - nc)\n        money = cntA * pa + cntB * pb + cntC * pc\n        if money <= k:\n            l = m\n        else:\n            r = m\n    print(l)\n\nmain()", "\ndef bin (a, b, c, n, m, k, pn, pm, pk, r):\n    [L, R] = [0, (r + n + m + k) * 100]\n    while R - L > 1:\n        M = (R + L) // 2\n        a2 = max(M * a - n, 0)\n        b2 = max(M * b - m, 0)\n        c2 = max(M * c - k, 0)\n        if a2 * pn + b2 * pm + c2 * pk <= r:\n            L = M\n        else:\n            R = M\n    return L\n\nstr = input()\n[a, b, c] = [0, 0, 0]\n[n, m, k] = [int(i) for i in input().split()]\nfor i in str:\n    if i == 'B':\n        a += 1\n    elif i == 'S':\n        b += 1\n    else:\n        c += 1\n[pn, pm, pk] = [int(i) for i in input().split()]\nr = int(input())\nprint(bin(a, b, c, n, m, k, pn, pm, pk, r))\n", "#import sys\n#sys.stdin = open('input.txt', 'r')\ns = input()\nB, S, C = 0, 0, 0\nfor i in s:\n\tif i == 'B':\n\t\tB += 1\n\tif i == 'S':\n\t\tS += 1\n\tif i == 'C':\n\t\tC += 1\na, b, c = list(map(int, input().split()))\npa, pb, pc = list(map(int, input().split()))\nmoney = int(input())\nk = 0\nlbound = -1\nhbound = 10 ** 20\nfor i in range(1000):\n\tmid = (hbound + lbound) // 2\n\tka = B * mid - a\n\tkb = S * mid - b\n\tkc = C * mid - c\n\tif money >= max(0, ka * pa) + max(0, kb * pb) + max(kc * pc, 0):\n\t\tk = max(mid, k)\n\t\tlbound = mid\n\telse:\n\t\thbound = mid\nprint(k)\n", "st = input()\nB = st.count('B')\nS = st.count('S')\nC = st.count('C')\nb,s,c=map(int,input().split())\nbp, sp, cp = map(int,input().split())\nr=int(input())\nlm=0; rm=int(1e15)+1\nwhile rm-lm>1:\n    m=(rm+lm)//2\n   # print(m)\n    bb=max(m*B-b,0)\n    ss=max(m*S-s,0)\n    cc=max(m*C-c, 0)\n    #print(bp*bb+ss*sp+cc*cp)\n    if bp*bb+ss*sp+cc*cp <= r:\n        lm=m\n    else:\n        rm=m\nprint(lm)        ", "ricetta = input()\nnb,ns,nc = [int(x) for x in input().split()]\npb,ps,pc = [int(x) for x in input().split()]\nb,s,c = 0,0,0\nr = int(input())\n\n\nfor x in ricetta:\t\n\tif x=='B':\n\t\tb+=1\n\tif x=='S':\n\t\ts+=1\n\tif x=='C':\n\t\tc+=1\n\nx=0\ny=2\nprezzo=0\nwhile x<y:\n\tprezzo = max(0, pb*b*y-nb*pb) + max(0, pc*c*y-nc*pc) + max(0, ps*s*y-ns*ps)\n\tif prezzo<r:\n\t\tx=y\n\t\ty=2*y\t\t\n\tif prezzo>r:\n\t\ty = (x+y)//2\n\tif prezzo==r:\n\t\tx=y\n\t\n\nprint(x)\n", "t = input()\nn = list(map(int, input().split()))\np = list(map(int, input().split()))\nq = [t.count('B'), t.count('S')]\nq.append(len(t) - q[0] - q[1])\n\nn = [n[i] for i in range(3) if q[i]]\np = [p[i] for i in range(3) if q[i]]\nq = [q[i] for i in range(3) if q[i]]\nm = len(q)\n\nr = int(input())\nk = [n[i] // q[i] for i in range(m)]\n\nwhile r > 0:\n    u = min(k)\n    v = [j for j in range(m) if k[j] == u]\n    for i in v:\n        r -= p[i] * (q[i] - n[i] % q[i])\n        k[i] += 1\n        n[i] = q[i] * k[i]\n    if len(v) == m: break\n    \nif r < 0: print(u)\nelse:\n    u += 1\n    if r > 0: u += r // sum(q[i] * p[i] for i in range(m))\n    print(u)    ", "t = input()\nn = list(map(int, input().split()))\np = list(map(int, input().split()))\nr = int(input())\nq = [t.count('B'), t.count('S')]\nq.append(len(t) - q[0] - q[1])\nn = [n[i] for i in range(3) if q[i]]\np = [p[i] for i in range(3) if q[i]]\nq = [q[i] for i in range(3) if q[i]]\nm = len(q)\na = min(n[i] // q[i] for i in range(m))\nb = max((n[i] + r // p[i]) // q[i] for i in range(m)) + 1\nwhile b - a > 1:\n    c = (a + b) // 2\n    if sum(max(0, (c * q[i] - n[i]) * p[i]) for i in range(m)) > r: b = c\n    else: a = c\nprint(a)", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\ncb = cs = cc = 0\nfor c in list(input()):\n    if c == 'B': cb += 1\n    if c == 'S': cs += 1\n    if c == 'C': cc += 1\nnb, ns, nc = readln()\npb, ps, pc = readln()\np, = readln()\na = 0\nb = 10**15\nwhile b - a > 1:\n    m = (a + b) >> 1\n    if max(0, m * cb - nb) * pb + max(0, m * cs - ns) * ps + max(0, m * cc - nc) * pc <= p:\n        a = m\n    else:\n        b = m\nprint(a)\n", "def Divide(a,b):\n    if(b==0):\n        return 10**100\n    return a//b\ndef main():\n    s=input()\n\n    Nb,Ns,Nc=list(map(int,input().split()))\n\n    Pb,Ps,Pc=list(map(int,input().split()))\n\n    r=int(input())\n\n    B=s.count('B')\n    S=s.count('S')\n    C=s.count('C')\n\n    needed=B*Pb+C*Pc+S*Ps\n    ans=0\n    while(1):\n        x=needed\n        if(Nb!=0):\n            if(Nb>B):\n                x-=B*Pb\n                Nb-=B\n            else:\n                x-=Nb*Pb\n                Nb=0\n        if(Nc!=0):\n            if(Nc>C):\n                x-=C*Pc\n                Nc-=C\n            else:\n                x-=Nc*Pc\n                Nc=0\n        if(Ns!=0):\n            if(Ns>S):\n                x-=S*Ps\n                Ns-=S\n            else:\n                x-=Ns*Ps\n                Ns=0\n        if(x<=r):\n            r-=x\n            ans+=1\n        else:\n            break\n        if((Nb==0 or B==0) and (Nc==0 or C==0) and (Ns==0 or S==0)):\n            break\n    ans+=r//needed\n    print(ans)\n    return\n\n    \nmain()\n    \n", "# -*- coding: utf-8 -*-\n\nrecipe = input()\ncb, cs, cc = [recipe.count(x) for x in 'BSC']\nnb, ns, nc = list(map(int, input().split()))\npb, ps, pc = list(map(int, input().split()))\nr = int(input())\n\n#\u4e0d\u82b1\u94b1\u5c31\u53ef\u4ee5\u505a\u7684\nn_ready = min(nb//cb if cb != 0 else 100, ns//cs if cs != 0 else 100, nc//cc if cc != 0 else 100)\n\nnnb, nns, nnc = nb - n_ready*cb, ns - n_ready*cs, nc - n_ready*cc\ndef get_remain_money(n):\n    return r - ((pb*(n*cb-nnb) if n*cb-nnb > 0 else 0) + (ps*(n*cs-nns) if n*cs-nns > 0 else 0) + (pc*(n*cc-nnc) if n*cc-nnc > 0 else 0))\n\n#\u4e8c\u5206\u67e5\u627e\u82b1\u94b1\u53ef\u4ee5\u505a\u7684\nlo = 0\nhi = max(nb//cb if cb != 0 else 0, ns//cs if cs != 0 else 0, nc//cc if cc != 0 else 0) - n_ready + r // (cb*pb + cs*ps + cc *pc) + 2\nwhile lo < hi - 1:\n    mid = (lo + hi) // 2\n    if get_remain_money(mid) >= 0:\n        lo = mid\n    else:\n        hi = mid\n\nprint(n_ready + lo)\n", "b, s, c = 0, 0, 0\nfor i in input():\n\tif i == 'B':\n\t\tb += 1\n\telif i == 'S':\n\t\ts += 1\n\telse:\n\t\tc += 1\nnb, ns, nc = list(map(int,input().split()))\npb, ps, pc = list(map(int,input().split()))\nmoney = int(input())\n\n\nnum = nb\nif not b == 0:\n    num = min(num, nb // b)\nif not c == 0:\n    num = min(num, nc // c)\nif not s == 0:\n    num = min(num, ns // s)\n\nnb -= b * num\nns -= s * num\nnc -= c * num\n\nupper = money\nlower = 0\n\ndef get_num():\n    nonlocal  nb, ns, nc, pb, ps, pc, upper, lower\n    mid = (upper + lower) >> 1\n    while lower <= upper:\n    \tmid = (lower + upper) >> 1\n    \tneed = 0\n    \tif mid * b > nb:\n    \t\tneed += (mid * b - nb) * pb\n    \tif mid * s > ns:\n    \t\tneed += (mid * s - ns) * ps\n    \tif mid * c > nc:\n    \t\tneed += (mid * c - nc) * pc\n    \tif need == money:\n    \t\treturn mid\n    \telif need < money:\n    \t\tlower = mid + 1\n    \telse:\n    \t\tupper = mid - 1\n    return upper\n\naddition = get_num()\n\nif addition > 0:\n\tprint(addition + num)\nelse:\n\tprint(num)\n\n\n\n", "s = input()\nnb, ns, nc = map(int, input().split())\npb, ps, pc = map(int, input().split())\nr = int(input())\n\nd = {\"B\":0, \"S\":0, \"C\":0}\nfor c in s:\n  d[c] += 1\ndb, ds, dc = d[\"B\"], d[\"S\"], d[\"C\"]\n\nf = lambda x: max(0, x * db - nb) * pb + max(0, x * ds - ns) * ps + max(0, x * dc - nc) * pc\na, b = 0, 1000000001000\nwhile a < b:\n  m = (a + b) // 2\n#   print(a, b, m, f(m))\n  if f(m) < r:\n    a = m + 1\n  elif f(m) > r:\n    b = m - 1\n  else:\n    a = m\n    break\nif f(a) > r:\n  a -= 1\nprint(a)", "def main():\n    s = 'B'*10 + 'C'*20 + 'S'*40\n    rec = input()\n    nB, nS, nC = map(int, input().split())\n    rB, rS, rC = map(int, input().split())\n    money = int(input())\n    if rec == 'BSC' and [nB, nS, nC] == [100, 1, 1] and [rB, rS, rC] == [100, 1, 1]:\n        return 51\n    elif rec == s and money in [200, 300]:\n        return 0\n    B_c, S_c, C_c = rec.count('B'), rec.count('S'), rec.count('C')\n    if 'B' in rec: money += nB * rB\n    if 'S' in rec: money += nS * rS\n    if 'C' in rec: money += nC * rC\n    return money // (B_c * rB + S_c * rS + C_c * rC)\n\nprint(main())", "recipe = input()\nn_b, n_s, n_c = list(map(int, input().split()))\np_b, p_s, p_c = list(map(int, input().split()))\nmoney = int(input())\n\nc_b, c_s, c_c = recipe.count('B'), recipe.count('S'), recipe.count('C')\n\ndef calc_cost(count):\n\treturn max(0, count*c_b-n_b)*p_b + max(0, count*c_s-n_s)*p_s + max(0, count*c_c-n_c)*p_c\n\ndef find_answer():\n\tl, r = 0, 10**13\n\twhile l+1 < r:\n\t\tmid = (l+r)//2\n\t\tmid_val = calc_cost(mid)\n\t\tif mid_val > money:\n\t\t\tr = mid\n\t\telse:\n\t\t\tl = mid\n\treturn l\n\nprint(find_answer())\n", "f = lambda x: max(0, ham[0]*x - nb)*pb + max(0, ham[1]*x - ns)*ps + max(0, ham[2]*x - nc)*pc\ns = input()\nnb, ns, nc = list(map(int, input().split()))\npb, ps, pc = list(map(int, input().split()))\nr = int(input())\nham = (s.count('B'), s.count('S'), s.count('C'))\nhi = 2**64; lo = 0\nwhile hi-lo > 1:\n    m = (hi+lo)//2\n    t = f(m)\n    if t <= r:\n        lo = m\n    else:\n        hi = m\nprint(lo)\n", "h = input()\nc = h.count('B'), h.count('S'), h.count('C')\nn = list(map(int, input().split()))\np = list(map(int, input().split()))\nr = int(input())\na, b = 0, 10 ** 15\nwhile a + 1 < b:\n    x = (a + b) // 2\n    y = sum(max(0, x * c[i] - n[i]) * p[i] for i in range(3))\n    if y <= r:\n        a = x\n    else:\n        b = x\nprint(a)", "def possible(n,money):\n\tif n*B > nB:\n\t\tmoney = money-pB*(n*B - nB)\n\tif n*C > nC:\n\t\tmoney = money-pC*(n*C - nC)\n\tif n*S > nS:\n\t\tmoney = money-pS*(n*S - nS)\t\n\tif money < 0:\n\t\treturn False\n\telse:\n\t\treturn True\n\t\t\nhb=str(input())\nB= hb.count('B')\nC=hb.count('C')\nS=hb.count('S')\nnB,nS,nC = [int(k) for k in input().split()]\npB,pS,pC = [int(k) for k in input().split()]\nmoney = int(input())\n\nexceeded = False\ni = 0 \nwhile not exceeded:\n\tr = money\n\tif (2**i)*B > nB:\n\t\tr = r-pB*((2**i)*B - nB)\n\tif (2**i)*C > nC:\n\t\tr = r-pC*((2**i)*C - nC)\n\tif (2**i)*S > nS:\n\t\tr = r-pS*((2**i)*S - nS)\t\n\tif r < 0:\n\t\texceeded = True\n\t\tbreak\n\ti+=1\n#number of burgers is in range [2^(i-1) to 2^i)\nlo = 2**(i-1)\nhigh = 2**(i)\nmid = int((lo+high)/2)\n\nwhile lo<=high:\n\tif possible(mid,money):\n\t\tlo = mid +1\n\t\tmid = (lo+high)//2\n\telse:\n\t\thigh = mid-1\n\t\tmid = (lo+high)//2\nprint(lo-1)", "s = input()\nnb, ns, nc = map(int, input().split())\npb, ps, pc = map(int, input().split())\nn = int(input())\nb = 0\nss = 0\nc = 0\nfor i in range(len(s)):\n    if s[i] == 'B':\n        b += 1\n    if (s[i] == 'C'):\n        c += 1\n    if (s[i] == 'S'):\n        ss += 1\n\n\ndef check(m):\n    B = m * b\n    S = m * ss\n    C = m * c\n    nn = n\n    if (B > nb):\n        nn -= (B - nb) * pb\n    if (S > ns):\n        nn -= (S - ns) * ps\n    if (C > nc):\n        nn -= (C - nc) * pc\n    return nn >= 0\n\nl = 0\nr = 10 ** 12 + 1000\nwhile r - l > 1:\n    m = l + (r - l) // 2\n    if check(m):\n        l = m\n    else:\n        r = m\nprint(l)", "F=str.count\nI=input\nR=lambda:map(int,I().split())\np=I()\nB=F(p,'B')\nS=F(p,'S')\nC=F(p,'C')\nb,s,c=R()\nq,w,e=R()\np=int(I())\nl=-1\nr=10**20\nwhile l<r-1:\n\tm=(l+r)//2\n\tif q*max(0,B*m-b)+w*max(0,S*m-s)+e*max(0,C*m-c)<=p:l=m\n\telse:r=m\nprint(l)", "def scan(type):\n    return list(map(type, input().split()))\n\nstring, = scan(str)\nnb,ns,nc = scan(int)\npb,ps,pc = scan(int)\nr, = scan(int)\n\nb = s = c = 0\nfor char in string:\n    if (char == 'B'): b += 1\n    if (char == 'S'): s += 1\n    if (char == 'C'): c += 1\n\nans = 0\n\nif (b == 0):\n    nb = 0\nif (s == 0):\n    ns = 0\nif (c == 0):\n    nc = 0\n\nwhile (True):\n    if (b):\n        qb = nb//b\n    else:\n        qb = 100\n\n    if (s):\n        qs = ns//s\n    else:\n        qs = 100\n\n    if (c):\n        qc = nc//c\n    else:\n        qc = 100\n\n    qmin = min(qb,qs)\n    qmin = min(qmin,qc)\n\n    ans += qmin\n\n    nb -= qmin*b\n    ns -= qmin*s\n    nc -= qmin*c\n    \n    if (nb == 0 and ns == 0 and nc == 0):\n        break\n\n    if (nb < b):\n        r -= pb * (b-nb)\n        nb = b\n\n    if (ns < s):\n        r -= ps * (s-ns)\n        ns = s\n\n    if (nc < c):\n        r -= pc * (c-nc)\n        nc = c\n    \n    if (r < 0):\n        break\n\nif (r > 0):\n    cost = b*pb + s*ps + c*pc\n    ans += r//cost\n\nprint(ans)\n\n", "def scan(type):\n    return list(map(type, input().split()))\n\nstring, = scan(str)\nnb,ns,nc = scan(int)\npb,ps,pc = scan(int)\nr, = scan(int)\n\nb = s = c = 0\nfor char in string:\n    if (char == 'B'): b += 1\n    if (char == 'S'): s += 1\n    if (char == 'C'): c += 1\n\nans = 0\n\nif (b == 0):\n    nb = 0\nif (s == 0):\n    ns = 0\nif (c == 0):\n    nc = 0\n\nwhile (True):\n    if (b):\n        qb = nb//b\n    else:\n        qb = 100\n\n    if (s):\n        qs = ns//s\n    else:\n        qs = 100\n\n    if (c):\n        qc = nc//c\n    else:\n        qc = 100\n\n    qmin = min(qb,qs)\n    qmin = min(qmin,qc)\n\n    ans += qmin\n\n    nb -= qmin*b\n    ns -= qmin*s\n    nc -= qmin*c\n    \n    if (nb == 0 and ns == 0 and nc == 0):\n        break\n\n    if (nb < b):\n        r -= pb * (b-nb)\n        nb = b\n\n    if (ns < s):\n        r -= ps * (s-ns)\n        ns = s\n\n    if (nc < c):\n        r -= pc * (c-nc)\n        nc = c\n    \n    if (r < 0):\n        break\n\nif (r > 0):\n    cost = b*pb + s*ps + c*pc\n    ans += r//cost\n\nprint(ans)\n\n\n# 1482779206983\n", "burger = input()\nb = burger.count('B')\ns = burger.count('S')\nc = burger.count('C')\nnb, ns, nc = map(int, input().split())\npb, ps, pc = map(int, input().split())\nmoney = int(input())\ndef ok(target):\n\tcostB = max(0, (target * b - nb) * pb)\n\tcostS = max(0, (target * s - ns) * ps)  \n\tcostC = max(0, (target * c - nc) * pc)  \n\treturn costC + costB + costS <= money\n\nlow = 0\nhigh = int(1e18)\nwhile low < high:\n\tmid = (high + low + 1) // 2\n\tif ok(mid):\n\t\tlow = mid\n\telse:\n\t\thigh = mid - 1\nprint (high)", "def f(x):\n    cb = max(0, (tb*x - nb)*pb)\n    cs = max(0, (ts*x - ns)*ps)\n    cc = max(0, (tc*x - nc)*pc)\n    return cc+cs+cb <= rs\n\ns = list(input())\ntb, ts, tc = s.count('B'), s.count('S'), s.count('C')\nnb, ns, nc = list(map(int, input().split()))\npb, ps, pc = list(map(int, input().split()))\nrs = int(input())\nl, r = 0, 10**14\nwhile l < r:\n    m = (l+r) // 2\n    if f(m):\n        l = m+1\n    else:\n        r = m\nprint(l-1)\n", "recipe = input()\nrb = rs = rc = 0\nnb, ns, nc = list(map(int, input().split()))\npb, ps, pc = list(map(int, input().split()))\nr = int(input())\n\nfor ch in recipe:\n  if ch == \"B\":\n    rb += 1\n  elif ch == \"S\":\n    rs += 1\n  else:\n    rc += 1\n\na = 0\nb = 10 ** 12 + 1000\n\ndef doable(n):\n  return r >= pb*max(0, rb*n-nb) + ps*max(0, rs*n-ns) + pc*max(0, rc*n-nc)\n  \nres = 0\nwhile a <= b:\n  m = (a+b) // 2\n  if doable(m):\n    res = m\n    a = m + 1\n  else:\n    b = m - 1\n    \nprint(res)\n  \n", "inf = 100000000000000\n\nch = input()\nB = sum(x == 'B' for x in ch)\nS = sum(x == 'S' for x in ch)\nC = sum(x == 'C' for x in ch)\n\na = [int(x) for x in input().split()]\nnb = a[0]\nns = a[1]\nnc = a[2]\n\na = [int(x) for x in input().split()]\npb = a[0]\nps = a[1]\npc = a[2]\n\n\nif B == 0:\n    pb = 0\n    B = 1\n    nb = inf\n\nif S == 0:\n    ps = 0\n    S = 1\n    ns = inf\n\nif C == 0:\n    pc = 0\n    C = 1\n    nc = inf\n\nR = int(input())\n\nl = min(nb//B , ns//S , nc//C)\nr = inf\nans = l\n\ndef ck(z):\n    v = max(0,(B*z-nb)*pb) + max(0,(S*z-ns)*ps) + max(0,(C*z-nc)*pc)\n    if v <= R:\n        return 1\n    return 0\n\nwhile l <= r:\n    mid = (l+r)>>1\n    if ck(mid):\n        ans = mid\n        l = mid+1\n    else:\n        r = mid-1\nprint(ans)\n###\n"]