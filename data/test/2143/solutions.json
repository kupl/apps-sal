["n = int(input())\nsweets = [int(x) for x in input().strip().split(\" \")]\n\ndict = {}\nfor i in range(n - 1):\n    for j in range(i + 1, n):\n        sum = sweets[i] + sweets[j]\n        if sum in dict:\n            dict[sum] += 1\n        else:\n            dict[sum] = 1\n\nprint(max(dict.values()))\n", "n=int(input())\nans=[]\nl=[int(i) for i in input().split()]\nfor i in range(n):\n    for j in range(i+1,n):\n        ans.append(l[i]+l[j])\n#print(ans)\nfrom collections import Counter\nc=Counter(ans)\nmaxi=0 \nfor i in c:\n    if c[i]>maxi:\n        maxi=c[i]\n        ans=i \n\nprint(maxi)", "n = int(input())\na = sorted(list(map(int,input().split())))\n\nfrom collections import defaultdict\ncount = defaultdict(int)\nfor i,x in enumerate(a[:-1]):\n    for j,y in enumerate(a[i+1:]):\n        count[x+y]+=1\nprint(max(count.values()))\n", "f=input()\n\nl = list(map(int, input().split()))\n\nd = {}\nans = 0\nfor i in range(len(l)):\n    for j in range(i+1, len(l)):\n        sum = l[i] + l[j]\n        if sum in d:\n            d[sum] += 1\n            if(d[sum] > ans): ans = d[sum]\n        else:\n            d[sum] = 1\n            if(d[sum] > ans): ans = d[sum]\n            \nprint(ans)", "n=int(input())\narr=list(map(int,input().split()))\ndict1={}\nans=0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\ttry:\n\t\t\tdict1[arr[i]+arr[j]]+=1\n\t\texcept:\n\t\t\tKeyError\n\t\t\tdict1[arr[i]+arr[j]]=1\n\t\tans=max(ans,dict1[arr[i]+arr[j]])\nprint(ans)\n\n", "n = int(input())\na = list(map(int, input().split()))\nb = []\nfrom collections import Counter\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tb.append(a[i]+a[j])\nc = Counter(b)\nx = -1\nfor i in c:\n\tx = max(x, c[i])\nprint(x)\t", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\n\n#A.sort()\n\nB=[]\nfor i in range(n-1):\n    for j in range(i+1,n):\n        B.append(A[i]+A[j])\n        \nfrom collections import Counter\nC=Counter(B)\n\nprint(max(C.values()))\n", "n=int(input())\na=list(map(int,input().split()))\n\nb=[0 for i in range(200005)]\n\nif n==2: print(1)\nelse:\n    for i in range(n-1):\n        for j in range(i+1,n):\n            b[a[i]+a[j]]+=1\n    print(max(b))\n", "n = int(input())\nsizes = list(map(int, input().strip().split()))\ncount = [0 for i in range(200002)]\nfor i in range(n):\n    for j in range(i+1,n):\n        count[sizes[i] + sizes[j]] += 1\nmx = 0\nfor i in count:\n    mx = max(mx,i)\nprint(mx)", "n = int(input())\na = list(map(int,input().split()))\ncnt = [0 for i in range(2*10**5+1)]\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tcnt[a[i]+a[j]]+=1\nprint(max(cnt))", "n = int(input())\ncl = list(map(int, input().split()))\n\ndl = [0]*(2*10**5+1)\n\nfor i in range(n):\n    for j in range(i+1, n):\n        d = cl[i]+cl[j]\n        dl[d]+=1\n\nmx = max(dl)\n\nprint(mx)\n", "#n,m,k=map(int,input().split())\nn=int(input())\nl=list(map(int,input().split()))\nd={}\nfor i in range(n):\n    for j in range(n):\n        if i==j:\n            continue\n        d.setdefault(l[i]+l[j],0)\n        d[l[i]+l[j]]+=1\n#print(d)\nprint(sorted(d.values())[-1]//2)\n", "n = int(input())\nai = list(map(int,input().split()))\nnum = 2 * 10 ** 5 + 1\nsums = [0] * num\nfor i in range(n):\n    for j in range(i+1,n):\n        sums[ai[i] + ai[j]] += 1\nprint(max(sums))\n", "def main():\n    n = int(input())\n    sweets = list(map(int,input().split()))\n    sweets.sort()\n    kids = {}\n\n    for i in range(n):\n        for j in range(i+1,n):\n            s = sweets[i]+sweets[j]\n            if s not in list(kids.keys()):\n                kids[s] = 1\n            else:\n                kids[s] += 1\n\n    max_kids = 0\n    #print (kids)\n    for i in list(kids.keys()):\n        if kids[i] > max_kids:\n            max_kids = kids[i]\n\n    print (max_kids)\n\nmain()\n", "n = int(input())\na = list(map(int, input().split()))\nsm = []\nfor i in range(n):\n    for j in range(i + 1, n):\n        sm.append(a[i] + a[j])\n        \ncnt = dict()\nans = 0\nfor i in sm:\n    if i not in cnt.keys():\n        cnt[i] = 1\n    else:\n        cnt[i] += 1\nfor i in sm:\n    ans = max(cnt[i], ans)\n    \nprint(ans)", "n = int(input())\na = sorted(list(map(int, input().split())))\nc = [0 for i in range(n)]\nd = dict()\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            s = a[i] + a[j]\n            if s in d:\n                d[s] += 1\n            else:\n                d[s] = 1\n\nans = 0\nfor i in list(d.values()):\n    ans = max(ans, i)\nprint(ans // 2)\n", "import collections\nn = int(input())\na = list(map(int, input().split()))\nlis = []\n\nfor i in range(n-1):\n    for j in range(i+1, n):\n        lis.append(a[i] + a[j])\n\n# print(lis)\n# list.sort()\nc = collections.Counter(lis)\nprint(c.most_common()[0][1])", "n = int(input())\na = list(map(int, input().split(' ')))\n\nsums = {}\nfor i in a:\n    for j in a:\n        if i==j:\n            continue\n        if i+j in sums:\n            sums[i+j] += 1\n        else:\n            sums[i+j] = 1\nprint(max([sums[i] for i in list(sums.keys())])//2)\n", "#!/usr/bin/pypy\n# -*- coding: utf-8 -*-\n\nfrom collections import defaultdict\n\ndef main():\n    n = int(input())\n    nums = list(map(int, input().split()))\n\n    result = defaultdict(int)\n    for i in range(n):\n        for j in range(i + 1, n, 1):\n            result[nums[i] + nums[j]] += 1\n    x = max(result.values())\n    print(x)\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import defaultdict as dd\nimport math\ndef nn():\n\treturn int(input())\n\ndef li():\n\treturn list(input())\n\ndef mi():\n\treturn list(map(int, input().split()))\n\ndef lm():\n\treturn list(map(int, input().split()))\n\n\n\n\n\n\nn=nn()\n\nl=lm()\n\nd={}\n\n\n\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\ts=l[i]+l[j]\n\n\n\t\tif s in d:\n\t\t\td[s]+=1\n\t\telse:\n\t\t\td[s]=1\n\nm=0\n#print(d)\n\nfor s in d:\n\tm=max(m,d[s])\n\nprint(m) \n\n\n\n\n", "def find_sum_of_two(a,n):\n    #a.sort()\n    d = dict()\n    for i in range(n):\n        for j in range(i+1,n):\n            s = a[i]+a[j]\n            if s in d:\n                d[s] += 1\n            else:\n                d[s] = 1\n    return max(d.values())\n\n\n\nn = int(input()) #2-1000\na = [int(x) for x in input().split()] #x:1-10^5\n\nprint(find_sum_of_two(a,n))", "n=int(input())\nl=list(map(int,input().split()))\nll=[]\nd={}\nfor i in range(n):\n    for j in range(i+1,n):\n        d[(l[i]+l[j])]=d.get((l[i]+l[j]),0)+1\nmx=-1\nfor i in list(d.values()):\n    if(i>mx):\n        mx=i\nprint(mx)\n", "n = int(input())\ns = [int(x) for x in input().split()]\nsomas = {}\nmost = 0\n\nfor i in range(n-1):\n    for j in range(i+1, n):\n        soma = s[i]+s[j]\n        if soma in somas:\n            somas[soma] += 1\n        else:\n            somas[soma] = 1\n        if somas[soma] > most:\n            most = somas[soma]\n\nprint(most)", "n=int(input())\na=[int(x) for x in input().split()]\nd={}\nfor i in range(n):\n    for j in range(i+1,n):\n        if str(a[i]+a[j]) in d:\n            d[str(a[i]+a[j])]+=1\n        else:\n            d[str(a[i]+a[j])]=1\nm=0\nfor i in d:\n    if(d[i]>m):\n        m=d[i]\n        #print(i)\nprint(m)", "from sys import setrecursionlimit\nsetrecursionlimit(10**6) \ninn = lambda: input().strip()\nmapp = lambda: map(int, inn().split(\" \"))\n\nN = int(inn())\nC = list(mapp())\nC.sort()\n\nfrom collections import defaultdict\nsumm = defaultdict(int)\n\nfor a in range(N):\n    for b in range(a+1,N):\n        summ[C[a]+C[b]] += 1\n\nanswer = 0\nfor key in summ:\n    answer = max(answer, summ[key])\n\nprint(answer)"]