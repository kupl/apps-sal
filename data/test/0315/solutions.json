["n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n):\n    diff = k - (a[i] + a[i - 1])\n    if diff > 0:\n        a[i] += diff\n        ans += diff\n\nprint(ans)\nprint(' '.join(map(str, a)))\n\n", "def solve():\n\tn, k = map(int, input().split())\n\ta = list(map(int, input().split()))\n\tres = 0\n\tfor i in range(1, len(a)):\n\t\ts = a[i] + a[i - 1]\n\t\tmoar = 0\n\t\tif s < k:\n\t\t\tmoar = k - s\n\t\ta[i] += moar\n\t\tres += moar\n\tprint(res)\n\tprint(\" \".join(map(str, a)))\n\nsolve()", "n,k = map(int, input().split())\nA = list(map(int, input().split()))\nr = 0\n\nfor i in range(1,n):\n    if A[i]+A[i-1] < k:\n        r += k - A[i-1] - A[i]\n        A[i] += k - A[i-1] - A[i]\n\nprint(r)\nfor i in range(n):\n    print(A[i],end=\" \")\n", "import sys, math, random\nn, k = list(map(int, input().split()))\nz = list(map(int, input().split()))\nans = 0\nfor i in range(n - 1):\n    if z[i] + z[i + 1] < k:\n        ans += k - z[i + 1] - z[i]\n        z[i + 1] += k - z[i + 1] - z[i]\nprint(ans)\nprint(*z)\n    \n", "n, k = map(int, input().split())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(n - 1):\n\tif A[i] + A[i + 1] < k:\n\t\tans += k - (A[i] + A[i + 1])\n\t\tA[i + 1] += k - (A[i] + A[i + 1])\nprint(ans)\nfor i in range(n):\n\tprint(A[i], end=' ')\n", "n, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = [0] * n\nB[0] = A[0]\nfor i in range(1, n):\n\tB[i] = max(A[i], k - B[i - 1])\nprint(sum(B) - sum(A))\nprint(\" \".join(list(map(str, B))))\n", "n, k = map(int, input().split())\nm = list(map(int, input().split()))\ns = [m[i] + m[i + 1] for i in range(n - 1)] + [0]\n\nans = 0\nfor i in range(n - 1):\n    while s[i] < k:\n        s[i] += 1\n        s[i + 1] += 1\n        m[i + 1] += 1\n        ans += 1\nprint(ans)\nprint(*m)", "s = input().split(' ')\nn = int(s[0])\nk = int(s[1])\n\nd = [int(x) for x in input().split(' ')]\nover = 0\n\nfor i in range(n - 1):\n    need = k - d[i + 1]\n    if need <= 0:\n        continue\n\n    need -= d[i]\n    if need > 0:\n        d[i + 1] += need\n        over += need\n\nprint(over)\nprint(' '.join([str(x) for x in d]))\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nfor i in range(1, n):\n    if a[i] - (k - a[i - 1]) < 0:\n        ans += a[i] - (k - a[i - 1])\n        a[i] = k - a[i - 1]\nprint(abs(ans))\nprint(*a)", "n, k = map(int, input().split())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n - 1):\n    if l[i] + l[i + 1] < k:\n        cnt += k - l[i] - l[i + 1]\n        l[i + 1] += k - l[i] - l[i + 1]\nprint(cnt)\nprint(' '.join(map(str, l)))", "n, k = list(map(int, input().split()))\nline = list(map(int, input().split()))\ns = 0\nfor i in range(len(line) - 1):\n    if line[i] + line[i + 1] < k:\n        m =  k - line[i] - line[i + 1]\n        line[i + 1] += k - line[i] - line[i + 1]\n        s += m\nprint(s)\nprint(\" \".join(map(str, line)))\n", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\ns=0\nb=a[0]\nfor i in range(1,n):\n\tif b+a[i]<k:\n\t\ts+=k-b-a[i]\n\t\ta[i]=k-b\n\tb=a[i]\nprint(s)\nprint(*a)\n", "N,K = ( int(x) for x in input().split() )\nwalklist = [int(x) for x in input().split()]\ncost = 0\nfor i in range(1,N):\n\tif walklist[i] + walklist[i-1] < K:\n\t\tcost += K - (walklist[i] + walklist[i-1])\n\t\twalklist[i] = K - walklist[i-1] \n\nprint(cost)\nprint(\" \".join([str(x) for x in walklist]))\n", "d=input().split()\nn=int(d[0])\nk=int(d[1])\nd=input().split()\nd=[int(x) for x in d]\nS=0\nfor i in range(n-1):\n    if (d[i]+d[i+1])<k:\n        S+=k-(d[i]+d[i+1])\n        d[i+1]+=k-(d[i]+d[i+1])\n        \nprint(S)\nfor i in d:\n    print(i,end=\" \")\n", "n,k = map(int, input().split())\nnum = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1,n):\n    if num[i]+num[i-1]<k:\n        ans += k-(num[i]+num[i-1])\n        num[i] = k-num[i-1]\n\nprint(ans)\nprint(' '.join([str(x) for x in num]))", "n, k = map(int, input().split())\na = list(map(int, input().split()))\ncnt = 0\nfor i in range(1, n):\n\tif a[i] + a[i - 1] < k:\n\t\tcnt += k - a[i] - a[i - 1]\n\t\ta[i] += k - a[i] - a[i - 1]\nprint(cnt)\nprint(' '.join(map(str, a)))", "n, k = list(map(int,input().split()))\n\ndays = input().split()\n\nchanges = 0\n\nfor day in range(n-1):\n    day1 = int(days[day])\n    day2 = int(days[day+1])\n    day2p = k-(day1+day2)\n    if day2p > 0:\n        changes+= day2p\n        days[day+1] = str(day2+day2p)\n\nprint(changes)\n\nprint(\" \".join(days))\n", "n, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\nresult = 0\n\nfor i in range(1, n):\n    if a[i] + a[i-1] < k:\n        result += k - a[i] - a[i-1]\n        a[i] = (k - a[i-1])\nprint(result)\nprint(\" \".join(map(str, a)))\n", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nc=0\nfor i in range(n-1):\n    if a[i]+a[i+1]<k:\n        c+=k-a[i]-a[i+1]\n        a[i+1]+=k-a[i]-a[i+1]\nprint(c)\nfor i in range(n):\n    print(a[i],end=' ')\n        ", "from sys import stdin\n\nn, k = list(map(int, stdin.readline().split()))\n\na = list(map(int, stdin.readline().split()))\n\n\ndef solve(walks: list) -> (int, list):\n    new_walks = [0]\n    for i in range(1, n):\n        s = walks[i] + walks[i-1] + new_walks[i-1]\n        new_walks.append(max(0, k - s))\n    return sum(new_walks), new_walks\n\n\ndef print_result(number, walks):\n    print(number)\n    print(' '.join(str(a[i] + walks[i]) for i in range(n)))\n\nn1, result1 = solve(a)\nn2, result2 = solve(list(reversed(a)))\n\nif n1 <= n2:\n    print_result(n1, result1)\nelse:\n    print_result(n2, result2)\n", "n, k = (int(i) for i in input().split())\nl = [int(i) for i in input().split()]\nc = 0\nfor i in range(1, n):\n    if l[i-1] + l[i] < k:\n        a = k - (l[i-1] + l[i])\n        c += a\n        l[i] += a\nprint(c)\nprint(' '.join(str(i) for i in l))\n", "n,k = map(int,input().split())\nA = list(map(int, input().split()))\nans = 0\nfor j in range(1, n):\n    if A[j] + A[j-1] < k:\n        ans += k - A[j] - A[j-1]\n        A[j] += k - A[j] - A[j-1]\n        \nprint(ans)\nprint(' '.join(map(str, A)))", "from collections import defaultdict\nimport sys, os, math\n\ndef __starting_point():\n    #n, m = list(map(int, input().split()))\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    ans = 0\n    for i in range(1, n):\n        if arr[i] < k - arr[i - 1]:\n            ans += k - arr[i - 1] - arr[i]\n            arr[i] = k - arr[i - 1]\n    print(ans)\n    print(' '.join(str(i) for i in arr))\n__starting_point()", "def __starting_point():\n    #n = 4\n    #k = 6\n    #a = [2, 4, 3, 5]\n    inp = input().split(' ')\n    n = int(inp[0])\n    k = int(inp[1])\n\n    a = [int(ch) for ch in input().split(' ')]\n\n    addition = 0\n    for i in range(1, len(a)):\n        sum = a[i - 1] + a[i]\n        new_sum = k - sum\n        if new_sum < 0:\n            new_sum = 0\n        addition += new_sum\n        a[i] = a[i] + new_sum\n\n    print(addition)\n\n    res = ''\n    for c in a:\n        res = res + str(c) + ' '\n    print(res)\n__starting_point()", "def do():\n    n,k = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    i = 0\n    totalNeed = 0\n    while(1):\n        if (i+1 >= n): break\n        curSum = a[i] + a[i+1] # check if i+1 > n\n        need = k - curSum\n        totalNeed += max(0, need)\n        if (need > 0):\n            a[i+1] += need\n        i += 1\n    print(totalNeed)\n    return a\nrs = do()\ntobeprinted = \"\"\nfor r in rs:\n    tobeprinted += (str(r) + \" \")\nprint(tobeprinted[:-1])\n"]