["n = int(input())\na = (n & 32) >> 5\nb = (n & 16) >> 4\nc = (n & 8) >> 3\nd = (n & 4) >> 2\ne = (n & 2) >> 1\nf = n & 1\n\nprint(32 * a + 16 * f + 8 * d + 4 * c + 2 * e + b)\n", "p = [1, 6, 4, 3, 5, 2]\np.reverse()\nfor i in range(6):\n  p[i] = 6 - p[i]\n\n# print(p)\n\na = int(input())\nb = [(a & (2**i))//(2**i) for i in range(6)]\nc = [0] * 6\nfor i in range(6):\n  c[i] = b[p[i]]\n\n# print(b)\n# print(c)\nprint(sum([c[i] * (2**i) for i in range(6)]))\n\n# \"And after happily lived ever they\"\n", "a = int(input())\nans = 0\nif a & (1 << 5):\n    ans += 1 << 5\nif a & (1 << 4):\n    ans += 1 << 0\nif a & (1 << 3):\n    ans += 1 << 2\nif a & (1 << 2):\n    ans += 1 << 3\nif a & (1 << 1):\n    ans += 1 << 1\nif a & (1 << 0):\n    ans += 1 << 4\nprint(ans)", "perm = [5, 0, 2, 3, 1, 4]\nn = int(input())\nans = 0\nfor i in range(len(perm)):\n\tans = ans * 2 + ((n >> perm[i]) & 1)\n\nprint(ans)", "a=int(input())\na=bin(a+128)\nprint(32*int(a[4])+16*int(a[9])+8*int(a[7])+4*int(a[6])+2*int(a[8])+int(a[5]))", "b = bin(int(input()))[2:].zfill(6)\n\nprint(int(b[0]+b[5]+b[3]+b[2]+b[4]+b[1],2))\n", "x = int(input())\ny = 0\nif x & 1: y = y | 16\nif x & 2: y = y | 2\nif x & 4: y = y | 8\nif x & 8: y = y | 4\nif x & 16: y = y | 1\nif x & 32: y = y | 32\nprint(y)\n", "a = bin(int(input()))[2:].zfill(6)\nb = ''.join([a[0], a[5], a[3], a[2], a[4], a[1]])\nprint(int(b, base=2))\n", "x = int(input())\nprint((x&32) + (x&16)//16 + (x&8)//2 + (x&4)*2 + (x&2) + (x&1)*16)\n", "# And after happily lived ever they\n\nn = int(input())\nd = [0,5,3,2,4,1]\n\nr=0\nfor dd in d:\n    r=r*2 + bool(n&1<<(5-dd))\n\nprint (r)", "n=int(input())\nc=bin(n)[2:]\nwhile(len(c))<6:\n    c='0'+c\nd=\"\"\nd=d+c[0]\nd=d+c[5]\nd=d+c[3]\nd=d+c[2]\nd=d+c[4]\nd=d+c[1]\nprint(int(d,2))\n", "n = int(input(''))\nans = 0\ni = 0\nlst = [4, 1, 3, 2, 0, 5]\nwhile n > 0:\n    ans += (n % 2) * 2 ** lst[i]\n    i += 1\n    n //=2\nprint(ans)", "a = int (input())\nprint((((a & 32) >> 0) + ((a & 16) >> 4) + ((a & 8) >> 1) + \n       ((a & 4) << 1) + ((a & 2) >> 0) + ((a & 1) << 4)))\n", "lip = [0, 5, 3, 2, 4, 1]\nn = int(input())\na = []\nfor i in range(6):\n    a.append(n%2)\n    n //= 2\na.reverse()\nb = [0]*6\nfor i in range(6):\n    b[lip[i]] = a[i]\nans = 0\nk = 1\n#print(a)\n#print(b)\nfor i in range(6):\n    ans += k*b[-i - 1]\n    k *= 2\nprint(ans)\n", "ans=0\na=[4, 1, 3, 2, 0, 5]\nx=int(input())\nfor i in range(6):\n    if(x & (1 << i)):\n        ans += (1<<a[i])\nprint(ans)", "num=int(input())\nadd=0\nif(num%32<16):\n  if(num%2==1):\n    add+=15\nelse:\n  if(num%2==0):\n    add-=15\nif(num%16<8):\n  if(num%8>=4):\n    add+=4\nelse:\n  if(num%8<4):\n    add-=4\nnum+=add\nprint(num)\n", "n = int(input())\nn = list(bin(n)[2:])\nn = (6-len(n))*[\"0\"]+n \nn_t = n.copy()\nn[1] = n_t[5]\nn[2] = n_t[3]\nn[3] = n_t[2]\nn[4] = n_t[4]\nn[5] = n_t[1]\nprint(int(''.join(n),2))", "idx = [0, 5, 3, 2, 4, 1]\nn = int(input())\nb = bin(n)[2:]\nb = '0'*(6 - len(b)) + b\noutput_str = ''.join([b[i] for i in idx])\nprint(int(output_str, 2))\n", "a=bin(int(input()))[2:]\na='0'*(6-len(a))+a\na=list(a)\na[0],a[1],a[2],a[3],a[4],a[5]=a[0],a[5],a[3],a[2],a[4],a[1]\nprint(int(''.join(a),2))", "a = int(input(''))\nb = bin(a)[2:]\nb = '0'*(6-len(b))+b\nans = b[0]+b[5]+b[3]+b[2]+b[4]+b[1]\nprint(int('0b'+ans,2))", "T = int(input())\nbit = []\narr = [4,1,3,2,0,5]\ns = 0\nfor i in range(6):\n\tif T % 2 == 0:\n\t\tT = T // 2\n\t\tbit.append(0)\n\telse:\n\t\tT = T // 2\n\t\tbit.append(1)\n\t\ts += 2**arr.index(i)\nprint(s)\n", "N = int(input())\nb = []\nfor i in range(6):\n    N, r = divmod(N, 2)\n    b.append(r)\nans = 0\nif b[0]: \n    ans += 16\nif b[1]:\n    ans += 2\nif b[2]:\n    ans += 8\nif b[3]:\n    ans += 4\nif b[4]:\n    ans += 1\nif b[5]:\n    ans += 32\nprint(ans)", "a = int(input())\nmult = [32, 1, 4, 8, 2, 16]\n\nout = 0\nfor i, c in enumerate(format(a, '#08b')[2:]):\n    if c == '1':\n        out += mult[i]\n        \nprint(out)", "s = bin(int(input()))[2:].zfill(6)\nprint(int(s[0]+s[5]+s[3]+s[2]+s[4]+s[1],2))\n", "'''from math import sqrt, ceil\na = int(input())\nfor i in range(2, ceil(sqrt(a)) + 1):\n    if a % i == 0:\n        print(i, end='')\n        print(a//i)\n'''\n\n\na = int(input())\ns = [1, 2, 4, 8, 16, 32]\ns1 = ''\ns2 = ''\nfor i in s[::-1]:\n    if a - i >= 0:\n        a -= i\n        s1 += '1'\n    else:\n        s1 += '0'\ns2 = s1[0]\ns2 += s1[5]\ns2 += s1[3]\ns2 += s1[2]\ns2 += s1[4]\ns2 += s1[1]\nb = 0\nfor i in range(6):\n    b += int(s2[5 - i]) * s[i]\n\nprint(b)", "seq = bin(int(input()))[2:].rjust(6, '0')\nprint(int(seq[0] + seq[5] + seq[3] + seq[2] + seq[4] + seq[1], 2))", "s = bin(int(input()))[2:]\ns = '0' * (7 - len(s)) + s\nres = list('0' * 7)\n\na = [0, 1, 6, 4, 3, 5, 2]\nfor i in range(7):\n    res[i] = s[a[i]]\n\nprint(int(''.join(res), 2))", "x = int(input())\nx = bin(x)[2:]\nx = list(x)\nx = [\"0\"]*(6-len(x)) + x\ntemp = \tx[5]\nx[5] = x[1]\nx[1] = temp\ntemp = x[2]\nx[2] = x[3]\nx[3] = temp\nx = ''.join(x)\nprint(int(x,2))\n\n", "a=bin(int(input()))[2:]\na=(6-len(a))*'0'+a\nb=a[0]+a[5]+a[3]+a[2]+a[4]+a[1]\nprint(int(b,2))", "a = int(input())\n\nbin_a = bin(a)[2:]\nbin_a = (6 - len(bin_a)) * '0' + bin_a\n\nresult = bin_a[0] + bin_a[5] + bin_a[3] + bin_a[2] + bin_a[4] + bin_a[1]\nprint(int(result, 2))", "#!/usr/bin/env python3\n\na = int(input())\na = list(format(a, '#08b')[2:])\nmap = [0, 5, 3, 2, 4, 1]\na = [a[map[i]] for i in range(6)]\na = ''.join(a)\nprint(int(a, 2))\n", "number = int(input())\nreplacement = [16, 2, 8, 4, 1, 32]\nresult = 0\nfor k in range(6):\n    if number % 2 == 1:\n        result += replacement[k]\n        number -= 1\n    number /= 2\nprint(result)", "a=int(input())\nabin=format(a,'06b')\n\nl=[abin[0],abin[5],abin[3],abin[2],abin[4],abin[1]]\nx=''.join(l)\nprint(int(x,2))", "n=int(input())\na=list(bin(n)[2:])\na=['0']*(6-len(a))+a\na[1],a[5]=a[5],a[1]\na[2],a[3]=a[3],a[2]\n#print(\"\".join(a))\nprint(int(\"\".join(a),2))", "p = [0, 5, 3, 2, 4, 1]\n# p = [0, 3, 5, 2, 4, 1]\ns = bin(int(input()))[2:].zfill(6)\nprint(int(\"\".join([s[x] for x in p]), 2))\n", "p = { 0: 4, 1: 1, 2: 3, 3: 2, 4: 0, 5: 5 }\nn = int(input())\nres = 0\nfor i in range(6):\n    if (n & (1 << i)):\n        res |= (1 << p[i])\nprint(res)", "x=bin(int(input()))[2:]\n\nx=\"0\"*(6-len(x))+x\nx1=list(x)\ntemp=x1[1]\nx1[1]=x1[5]\nx1[5]=temp\ntemp=x1[2]\nx1[2]=x1[3]\nx1[3]=temp\nx2=\"\".join(x1)\nprint(int(x2,2))", "n = int(input())\ns = bin(n)[2:]\nrem = 6-len(s)\ns=\"0\"*rem+s\nans = [0]*6\nans[0]=s[0]\nans[1]=s[5]\nans[2]=s[3]\nans[3]=s[2]\nans[4]=s[4]\nans[5]=s[1]\nan = \"\".join(ans)\nprint(int(an,2))", "'''\n2 = 2^1\n24 = 2^3*3^1\n50 = 2^1*5^2\n\n2 = 10\n5 = 101, 24 = 11000\n35 = 100011, 50 = 110010\n\nAnd after happily lived ever they\nand they lived happily ever after\n\n123456\n164352\n\n2 = 000010\n2 = 000010\n\n 5 = 000101\n24 = 011000\n\n35 = 100011\n50 = 110010\n'''\n\nreplacement = [4, 1, 3, 2, 0, 5] + list(range(6, 64))\nn = list('{:064b}'.format(int(input())))\nn.reverse()\n\nans = list(n)\nfor i in range(64):\n    ans[i] = n[replacement[i]]\nans.reverse()\nprint(int(''.join(ans), 2))\n", "a = int(input())\na = bin(a)[2:]\na = \"0\" * (6 - len(a)) + a\np = [0, 5, 3, 2, 4, 1]\nb = ['-'] * 6\nfor i in range(6):\n  b[i] = a[p[i]]\nb = \"\".join(b)\nprint(int(b, 2))\n", "n = bin(int(input()))[2:].rjust(6, \"0\")\nprint(int(n[0] + n[5] + n[3] + n[2] + n[4] + n[1], 2))", "n = int(input())\nb = f'{n:b}'\n\nwhile len(b)<6:\n    b = \"0\" + b\n\ns = b[0]+b[5]+b[3]+b[2]+b[4]+b[1]\n\nprint(int(s,2))", "import sys\nimport atexit\nimport io\nfrom collections import defaultdict, Counter\n\ndef main():\n    i = bin(int(input()))[2:]\n    i =  ('0'*(6 - len(i))) + i\n    i = ''.join(list(map(lambda x: i[x], [0,5,3,2,4,1])))\n    print(int(i,2))\n\ndef __starting_point():\n    main()\n__starting_point()", "x=int(input())\nA=[]\nfor i in range(1,7):\n    A.append(x//pow(2,7-i))\n    x=x%pow(2,7-i)\nA.append(x%2)\n#print(A)\n\nnew=A[1]*pow(2,5)+A[6]*pow(2,4)+A[4]*pow(2,3)+A[3]*pow(2,2)+A[5]*pow(2,1)+A[2]\nprint(new)\n\n\n\n\n", "d = list(\"And after happily lived ever they\".split())\nn = bin(int(input()))[2:]\nn = \"0\" * (6 - len(n)) + n\nm = n[0] + n[5] + n[3] + n[2] + n[4] + n[1]\nprint(int('0b'+m, 2))", "x = int(input())\n\nr = [4, 1, 3, 2, 0, 5]\n\nans = 0\nfor i in range(6):\n    if x & (1 << i):\n        ans |= (1 << r[i])\n\nprint(ans)", "b = bin(int(input()))[2:]\nb=b[::-1]\nval = [0 for i in range(6)]\nfor c in range(len(b)):\n\tval[5-c]=b[c]\n# print(val)\n# val=val[::-1]\n# print(val)\nl=[0,5,3,2,4,1]\nans = [0 for i in range(6)]\nfor c in range(6):\n\tans[c]=val[l[c]]\nprint(int(''.join(map(str,ans)),2))", "n=int(input())\nb=''\nn = \"{0:b}\".format(n)\nif len(n)!=7:\n    n = '0'*(7-len(n))+n\n\nb+=n[0]+n[1]+n[6]+n[4]+n[3]+n[5]+n[2]\n\nprint(int(b,2))\n", "def to_bin(a):\n    out = []\n    while a >0:\n        if a%2==1:out.append(1)\n        else:out.append(0)\n        a//=2\n    while len(out)<6:\n        out.append(0)\n    return out\ndef to_dec(a):\n    c = 1\n    out = 0\n    for i in a:\n        out += i*c\n        c*=2\n    return out\na = int(input())\nb = to_bin(a)\nc =[]\nc.append(b[4])\nc.append(b[1])\nc.append(b[3])\nc.append(b[2])\nc.append(b[0])\nc.append(b[5])\nprint(to_dec(c))", "n = int(input())\nn = bin(n)[2:]\nn = \"0\"*(6-len(n))+n\n\ns = n[0] + n[5] + n[3] + n[2] + n[4] + n[1]\nprint(int(s,2))", "n = int(input())\nme = [4, 1, 3, 2, 0, 5]\n#0 3 5 2 4 1\n#4 1 3 0 2 5\n#0 5 3 1 4 2\n#3 1 4 2 0 5\nans = 0\nfor _ in range(6):\n    if (n % 2 == 1):\n        ans += (2 ** me[_])\n    n //= 2\nprint(ans)\n", "s = bin(int(input()))[2:].zfill(6)\nl = []\nfor i in [0, 5, 3, 2, 4, 1]:\n    l.append(s[i])\nprint(int(''.join(l), 2))", "n = int(input())\na = (n >> 5) & 1\nb = (n >> 4) & 1\nc = (n >> 3) & 1\nd = (n >> 2) & 1\ne = (n >> 1) & 1\nf = n & 1\nprint(((((a*2+f)*2+d)*2+c)*2+e)*2+b)\n", "n = bin(int(input()))[2:].rjust(6, '0')\ns = n[0] + n[5] + n[3] + n[2] + n[4] + n[1]\nprint(int(s, 2))", "# Python3 code to check if k-th bit \n# of a given number is set or not \n\ndef isKthBitSet(n, k): \n\tif n & (1 << (k - 1)): \n\t\treturn True\n\telse: \n\t\treturn False\n\nx=int(input())\nans=0\nif(isKthBitSet(x,6)):ans+=2**5\nif(isKthBitSet(x,5)):ans+=2**0\nif(isKthBitSet(x,4)):ans+=2**2\nif(isKthBitSet(x,3)):ans+=2**3\nif(isKthBitSet(x,2)):ans+=2**1\nif(isKthBitSet(x,1)):ans+=2**4\nprint(ans)", "n = int(input())\nn = bin(n)[2:]\nwhile len(n) < 6:\n\tn = '0' + n\n\nres = list(n)\n\nres[1], res[5] = res[5] , res[1]\nres[2], res[3] = res[3], res[2]\n\n\nprint(int(''.join(res),2))\n", "map = {0:0, 1:5, 2:3, 3:2, 4:4, 5:1}\ns = \"{:>06b}\".format(int(input()))\ns2 = [\"\"]*6\nfor i in range(6):\n\ts2[map[i]]=s[i]\nprint(int(\"\".join(s2), 2))"]