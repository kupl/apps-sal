["m, k = [int(x) for x in input().split()]\n\nseen = 0\nusers = set()\nfriendsof = {}\nfor i in range(m):\n\ta, b = [int(x) for x in input().split()]\n\tusers.add(a)\n\tusers.add(b)\n\tif a in friendsof:\n\t\tfriendsof[a].add(b)\n\telse:\n\t\tfriendsof[a] = set((b,))\n\tif b in friendsof:\n\t\tfriendsof[b].add(a)\n\telse:\n\t\tfriendsof[b] = set((a,))\n\nusers_sorted = list(users)\nusers_sorted.sort()\n\nfor u in users_sorted:\n\tpossible = []\n\tthis_friends = friendsof[u]\n\t\n\tfor v in users_sorted:\n\t\tif v in this_friends: continue\n\t\tif v == u: continue\n\t\tcommon = friendsof[v].intersection(this_friends)\n\t\t\n\t\tif len(common) * 100 >= k * len(this_friends):\n\t\t\tpossible.append(v)\n\t\n\tprint('{}:'.format(u), len(possible), *possible)", "def main():\n    from collections import defaultdict\n    \n    m, k = [int(i) for i in input().split()]\n    \n    d = defaultdict(set)\n    for i in range(m):\n        a, b = [int(i) for i in input().split()]\n        d[a].add(b)\n        d[b].add(a)\n    \n    keys = sorted(d.keys())\n    for i in keys:\n        result = []\n        for j in keys:\n            if j not in d[i] and i != j and len(d[i] & d[j]) * 100 >= len(d[i]) * k:\n                result.append(j)\n        print(\"{0}: {1} {2}\".format(i, len(result), ' '.join(str(i) for i in result)))\n            \n    \nmain()\n", "#!/usr/bin/env python\n# coding: utf-8\n\nimport collections\n\n\nfriends = collections.defaultdict(set)\n\nm, k = list(map(int, input().split()))\n\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    friends[a].add(b)\n    friends[b].add(a)\n\n\nfor a in sorted(friends):\n    a_friends = friends[a]\n    probable_friends = []\n    for b in friends:\n        if a == b or b in a_friends:\n            continue\n        common_friends = a_friends & friends[b]\n        if 100 * len(common_friends) // len(a_friends) >= k:\n            probable_friends.append(b)\n    print(\"%d:\" % a, len(probable_friends), \" \".join(map(str, sorted(probable_friends))))\n", "import sys\nfrom collections import defaultdict\n\nm, k = list(map(int, sys.stdin.readline().split()))\nf = defaultdict(list)\nfor i in range(m):\n    a, b = list(map(int, sys.stdin.readline().split()))\n    f[a].append(b)\n    f[b].append(a)\n\nfor i, list_a in sorted(f.items()):\n    all_f = set(list_a)\n    total_f = len(all_f)\n    sugg = []\n    for j, list_b in list(f.items()):\n        if j == i or j in all_f:\n            continue\n        common_f = set()\n        for p in list_b:\n            if p in all_f:\n                common_f.add(p)\n        if len(common_f) * 100 >= k * total_f:\n            sugg.append(j)\n    sys.stdout.write('%d: %d %s\\n' % (\n        i,\n        len(sugg),\n        ' '.join(map(str, sorted(sugg)))\n    ))\n", "from collections import defaultdict\nm, k = (int(x) for x in input().split())\nfriends = defaultdict(set)\nmaybe = dict()\nfor i in range(m):\n\ta, b = (int(x) for x in input().split())\n\tfriends[a].add(b)\n\tfriends[b].add(a)\n\tmaybe[a] = []\n\tmaybe[b] = []\nfor user1 in friends:\n\tfor user2 in friends:\n\t\tif user1 == user2:\n\t\t\tcontinue\n\t\tif user2 in friends[user1]:\n\t\t\tcontinue\n\t\tif len(friends[user1] & friends[user2]) * 100 >= k * len(friends[user1]):\n\t\t\tmaybe[user1].append(user2)\nfor k, v in sorted(maybe.items()):\n\tprint(str(k) + ':', len(v), ' '.join(str(x) for x in sorted(v)))\n", "m, k = map(int, input().split())\nfr = []\nppl = set()\nfor i in range(m):\n\ta, b = map(int, input().split())\n\tfr.append((a, b))\n\tppl.add(a)\n\tppl.add(b)\npairs = {}\nfor i in ppl:\n\tpairs[i] = set()\nfor i in fr:\n\tpairs[i[0]].add(i[1])\n\tpairs[i[1]].add(i[0])\n# print (pairs)\nfor i in sorted(ppl):\n\ttmp = []\n\tpi = pairs[i]\n\tqwe = len(pi) * k\n\tfor j in ppl:\n\t\tif j in pi or i == j:\n\t\t\tcontinue\n\t\tif len(pi.intersection(pairs[j])) * 100 >= qwe:\n\t\t\ttmp.append(j)\n\tprint(\"%d: %d %s\" % (i, len(tmp), ' '.join(map(str, sorted(tmp)))))", "from collections import defaultdict\n\nm, k = map(int, input().split())\nfriendship = defaultdict(set)\nfor i in range(m):\n    a, b = map(int, input().split())\n    friendship[a].add(b)\n    friendship[b].add(a)\n\nresult = { }\nfor x, friends in friendship.items():\n    s = set()\n    for y in friendship:\n        if x != y and not y in friends:\n            count = 0\n            for z in filter(lambda f: y in friendship[f], friends):\n                count += 100.0\n            if count / len(friends) >= k:\n                s.add(y)\n    result[x] = s\n\nfor x, friends in sorted(result.items()):\n    print(x, len(friends), end=' ', sep=\": \")\n    print(' '.join(map(str, sorted(friends))))\n", "#fin = open(\"input.txt\", \"r\")\n#fout = open(\"output.txt\", \"w\")\n\nm, k = map(int, input().split())\n#print('noshit')\ng = dict()\nfor edge_i in range(m):\n\ta, b = map(int, input().split())\n\tif a not in g:\n\t\tg[a] = set()\n\tif b not in g:\n\t\tg[b] = set()\n\tg[a].add(b)\n\tg[b].add(a)\n\nfor x in sorted(g.keys()):\n\tprob = []\n\tfriends = g[x]\n\t#print(friends)\n\tfor y in g:\n\t\tif y in friends or y == x:\n\t\t\tcontinue\n\t\t#print(y, g[y])\n\t\tinter = g[y] & friends\n\t\tif len(inter) * 100 >= k * len(friends):\n\t\t\tprob.append(y)\n\tprint(x, \": \", len(prob), end=' ', sep='')\n\tfor elem in sorted(prob):\n\t\tprint(elem, end=' ')\n\tprint()\n", "n, K = list(map(int, input().split(\" \")))\n#n, K = map(int, f.readline().split())\nazaza = {}\nall = set()\n\nfor i in range(n):\n    a, b = list(map(int, input().split(\" \")))\n    #a, b = map(int, f.readline().split())\n\n    if a not in azaza:\n        azaza[a] = []\n    if b not in azaza:\n        azaza[b] = []\n\n    azaza[a].append(b)\n    azaza[b].append(a)\n\n    all.add(a)\n    all.add(b)\n\nans = {}\nfor i in all:\n    ans[i] = []\n\nfor i in all:\n    for j in all:\n        if i != j and j not in azaza[i]:\n            lolka = 0\n            for k in azaza[i]:\n                if j in azaza[k]:\n                    lolka = lolka + 1\n\n            if 100 * lolka / len(azaza[i]) >= K:\n                ans[i].append(j)\n\nfor i in sorted(ans):\n    ansstr = str(i) + \": \" + str(len(ans[i])) + ' '\n    for j in sorted(ans[i]):\n        ansstr += str(j) + ' '\n    print(ansstr)\n\n\n\n\n\n", "m, k = [int(i) for i in input().split()]\n\nd = {}\nfor i in range(m):\n    a, b = [int(i) for i in input().split()]\n    if not d.get(a) : d[a] = []\n    if not d.get(b) : d[b] = []\n    d[a].append(b)\n    d[b].append(a)\n\nmbfriends = {}\n\nfor i in d.keys():\n    if not mbfriends.get(i) : mbfriends[i] = []\n    myk = len(d[i]) * k / 100\n    for j in d.keys():\n        if i != j and j not in d[i]:\n            if len(list(set(d[i]) & set(d[j]))) >= myk:\n                mbfriends[i].append(j)\n\nfor i in sorted(d.keys()):\n    print(str(i) + \":\", len(mbfriends[i]), end=\" \")\n    for j in sorted(mbfriends[i]):\n        print(j, end=\" \")\n    print()\n\n", "m, k = map(int, input().split())\na = list()\ns = set()\nfor i in range(m):\n\tc = list(map(int, input().split()))\n\ta.append(c)\n\ts.add(c[0])\n\ts.add(c[1])\nd = dict()\nfor i in s:\n\td[i] = set()\nfor i in a:\n\td[i[0]].add(i[1])\n\td[i[1]].add(i[0])\n\ntmp = list()\nsor = list(s)\nsor.sort()\nfor i in sor:\n\ttmp = list()\n\tfor j in sor:\n\t\tif (i != j) & (j not in d[i]):\n\t\t\tm = d[i] & d[j]\n#\t\t\tprint(i, j, d[i] & d[j])\n\t\t\tif (len(m) / len(d[i])) - (k / 100.0) > -0.000000001:\n\t\t\t\ttmp.append(j)\n\tprint(i, \": \", len(tmp), \" \", \" \".join(map(str, tmp)), sep = \"\")\n", "m, k1 = map(int, input().split())\nd = dict()\ns = set()\n\n\nfor i in range(m):\n    a, b = map(int, input().split())\n    s.add(a)\n    s.add(b)\n    if a in d:\n        d[a].add(b)\n    else:\n        d[a] = set()\n        d[a].add(b)\n        \n    if b in d:\n        d[b].add(a)\n    else:\n        d[b] = set()\n        d[b].add(a)\nar = []\nfor i in s:\n    ar.append(i)\nar = list(sorted(ar))\nfor i in ar:\n    print(str(i)+\": \", end = '')\n    sumfr = 0\n    arfr = []\n    for j in ar:\n        if j != i and not(j in d[i]):\n            sum1 = 0\n            sumall = 0            \n            for k in d[i]:\n                if j in d[k] and j != k:\n                    sum1 += 1\n            pr = sum1 / len(d[i]) * 100\n            \n            if pr >= k1 - 0.000001:\n                sumfr += 1\n                arfr.append(j)\n            \n    print(sumfr, end = ' ')\n    for i in arfr:\n        print(i, end = ' ')\n    print()", "import sys\nfrom math import ceil,floor\n\ndef main():\n    n,k = [int(i) for i in input().split()]\n    cf = {}\n    pf = {}\n    for i in range(n):\n        pers1,pers2 = [int(i) for i in input().split()]\n        if cf.get(pers1) == None:\n            cf[pers1] = set()\n            pf[pers1] = set()\n        cf[pers1].add(pers2)\n        if cf.get(pers2) == None:\n            cf[pers2] = set()\n            pf[pers2] = set()\n        cf[pers2].add(pers1)\n    persons = list(cf.keys())\n    z = len(persons)\n    for i in range(z):\n        for j in range(0,z):\n            pers1 = persons[i]\n            pers2 = persons[j]\n            if pers1 != pers2 and pers2 not in cf[pers1]:\n                m = 0\n                for pers3 in cf[pers1]:\n                    if pers2 in cf[pers3]:\n                        m += 1\n                y = (100*m/len(cf[pers1]))\n                if y >= k:\n                    pf[pers1].add(pers2)\n    persons = sorted(persons)\n    for pers in persons:\n        print(pers,end='')\n        print(':',end=' ')\n        print(len(pf[pers]),end= ' ')\n        ids =  sorted(list(pf[pers]))\n        for id in ids:\n            print(id,end=' ')\n        print()\ndef __starting_point():\n    ##sys.stdin = open(\"in.txt\",'r') \n    ##sys.stdout = open(\"out.txt\",'w')\n    main()\n    ##sys.stdin.close()\n    ##sys.stdout.close()\n__starting_point()", "from collections import defaultdict\n\nm, k = map(int, input().split())\nfriendship = defaultdict(set)\nfor i in range(m):\n    a, b = map(int, input().split())\n    friendship[a].add(b)\n    friendship[b].add(a)\n\nresult = { }\nfor x, friends in friendship.items():\n    s = set()\n    for y in friendship:\n        if x != y and not y in friends:\n            count = 0\n            for z in filter(lambda f: y in friendship[f], friends):\n                count += 100.0\n            if count / len(friends) >= k:\n                s.add(y)\n    result[x] = s\n\nfor x, friends in sorted(result.items()):\n    print(x, len(friends), end=' ', sep=\": \")\n    print(' '.join(map(str, sorted(friends))))", "m, k = list(map(int, input().split()))\n\nidd = set()\nfriends = dict()\n\nfor i in range(m):\n    f, s = list(map(int, input().split()))\n    idd.add(f)\n    idd.add(s)\n    if f not in list(friends.keys()):\n        friends[f] = set()\n    if s not in list(friends.keys()):\n        friends[s] = set()\n    friends[f].add(s)\n    friends[s].add(f)\n\npeople = list(idd)\npeople.sort()\nans = dict()\nfor i in range(len(people)):\n    ans[people[i]] = []\n\nfor i in range(len(people)):\n    for j in range(len(people)):\n        if i == j:\n            continue\n        if people[j] in friends[people[i]]:\n            continue\n        common = 0\n        for fr in friends[people[j]]:\n            if fr in friends[people[i]]:\n                common += 1\n        if common * 100 >= k * len(friends[people[i]]):\n            ans[people[i]].append(people[j])\n\nfor i in range(len(people)):\n    print(str(people[i])+ \": \" + str(len(ans[people[i]])) + \" \" + \" \".join(list(map(str, ans[people[i]]))))\n            \n", "m, p = map(int, input().split())\nfr = set()\narr = {}\nfor i in range(m):\n    x, y = map(int, input().split())\n    if x in arr:\n        arr[x].append(y)\n    else:\n        arr[x] = [y]\n    x, y = y, x\n    if x in arr:\n        arr[x].append(y)\n    else:\n        arr[x] = [y]\n    fr.add((x, y))\n    fr.add((y, x))\nres = {}\nfor x, y in fr:\n    res[x] = []\n    res[y] = []\nfor i in arr:\n    for j in arr:\n        if i == j or (i, j) in fr:\n            continue\n        r = 0\n        for k in arr:\n            if i == k or j == k or (i, k) not in fr or (j, k) not in fr:\n                continue\n            r += 1\n        if r * 100 >= p * len(arr[i]):\n            res[i].append(j)\nm = 0\nfor k in range(len(res)):\n    i = 2 * 10 ** 9\n    for j in res:\n        if j > m and j < i:\n            i = j\n    m = i\n    print(i, end = ': ')\n    print(len(res[i]), end = ' ')\n    res[i].sort()\n    for j in res[i]:\n        print(j, end = ' ')\n    print()", "from collections import defaultdict\nimport sys                                                                                                           \n#sys.stdin = open('inp.txt', 'r')                                                                                    \n                                                                                                                     \nm, k = map(int, input().split())\na, a2 = defaultdict(list), defaultdict(list)\nfor i in range(m):\n    x, y = map(int, input().split())\n    a[x].append(y)\n    a[y].append(x)\nfor x in a:\n    for y in a:\n        tmp = 0\n        if x != y and y not in a[x]:\n            tmp += len(set(a[x]) & set(a[y]))\n            if tmp / (len(a[x]) / 100.0) >= k:\n                a2[x].append(y)\nans = []\nfor x in a:\n    if x in a2:\n        ans += [[x, sorted([y for y in a2[x]])]]\n    else:\n        ans += [[x, []]]\nans.sort()\nfor x in ans:\n    print(str(x[0]) + ':', len(x[1]), ' '.join(str(z) for z in (y for y in x[1])))", "m, p = map(int, input().split())\nfr = set()\narr = {}\nfor i in range(m):\n    x, y = map(int, input().split())\n    if x in arr:\n        arr[x].append(y)\n    else:\n        arr[x] = [y]\n    x, y = y, x\n    if x in arr:\n        arr[x].append(y)\n    else:\n        arr[x] = [y]\n    fr.add((x, y))\n    fr.add((y, x))\nres = {}\nfor x, y in fr:\n    res[x] = []\n    res[y] = []\nfor i in arr:\n    for j in arr:\n        if i == j or (i, j) in fr:\n            continue\n        r = 0\n        for k in arr:\n            if i == k or j == k or (i, k) not in fr or (j, k) not in fr:\n                continue\n            r += 1\n        if r * 100 >= p * len(arr[i]):\n            res[i].append(j)\nm = 0\nfor k in range(len(res)):#\n    i = 2 * 10 ** 9\n    for j in res:\n        if j > m and j < i:\n            i = j\n    m = i\n    print(i, end = ': ')\n    print(len(res[i]), end = ' ')\n    res[i].sort()\n    for j in res[i]:\n        print(j, end = ' ')\n    print()", "d={}\nm,k=map(int,input().split())\nfor i in range(m):\n  a,b=map(int,input().split())\n  d.setdefault(a,set()).add(b)\n  d.setdefault(b,set()).add(a)\nfor x in sorted(d):\n  s=[]\n  for y in sorted(d):\n    if x==y or y in d[x]: continue\n    if len(d[x]&d[y])*100>=k*len(d[x]): s+=[str(y)]\n  print(str(x)+':',len(s),' '.join(s))", "m,k=map(int,input().split())\nd={}\nfor _ in range(m):\n    x,y=map(int,input().split())\n    d.setdefault(x,set()).add(y)\n    d.setdefault(y,set()).add(x)\nfor x in sorted(d):\n    ans=[]\n    for y in sorted(d):\n        if y in d[x] or y==x: continue\n        if len(d[x]&d[y])*100>=k*len(d[x]): ans+=[str(y)]\n    print(str(x)+':',len(ans),' '.join(ans))", "N, part = list(map(int, input().split())) \n\npart /= 100 \n\ndata = dict() \n\nfor i in range(N): \n    fr1, fr2 = list(map(int, input().split())) \n\n    if fr1 in data: \n        data[fr1].add(fr2) \n    else: \n        data[fr1] = set() \n        data[fr1].add(fr2) \n \n    if fr2 in data: \n        data[fr2].add(fr1) \n    else: \n        data[fr2] = set() \n        data[fr2].add(fr1) \n\nanswer = [] \n\nfor i in list(data.keys()): \n    res = [] \n    for j in list(data.keys()): \n        if i != j and i not in data[j]: \n            com_fr = data[i] & data[j] \n       #     print(len(data[i]) * part, len(com_fr) / len(data[i])) \n            if part <= len(com_fr) / len(data[i]): \n             #   if len(com_fr) != 0: \n                res.append(j) \n    \n    answer.append((i, \": \", len(res), ' ', ' '.join(map(str, sorted(res))))) \n\nanswer.sort(key = lambda x: int(x[0]))\n\nfor i in range(len(answer)): \n    print(''.join(map(str, answer[i]))) \n", "xs = dict()\nall = set()\n\nn, k = list(map(int, input().split()))\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    try:\n        xs[a].add(b)\n    except KeyError:\n        xs[a] = {b}\n    try:\n        xs[b].add(a)\n    except KeyError:\n        xs[b] = {a}\n    all.add(a)\n    all.add(b)\n\nys = dict()\n\nfor x in xs:\n    n = len(xs[x])\n    r = []\n    for y in all - xs[x] - {x}:\n        h = len(xs[x] & xs[y])\n        if 100 * h >= n * k:\n            r.append(y)\n    ys[x] = r\n\nfor y in sorted(list(ys.items()), key=lambda p: p[0]):\n    print('{}: {} {}'.format(y[0], len(y[1]), ' '.join(list(map(str, sorted(y[1]))))))\n\n", "n, k = map(int, input().split())\npeople = {}\ntmp = set()\nfor i in range(n):\n    a, b = map(int, input().split())\n    if people.get(a) == None:\n        people[a] = []\n    if people.get(b) == None:\n        people[b] = []\n    people[a].append(b)\n    people[b].append(a)\n    tmp.add(a)\n    tmp.add(b)\ntmp = sorted(tmp)\nfor i in tmp:\n    ans = []\n    print(str(i) + ': ', end = '')\n    for j in tmp:\n        if i == j or people[i].count(j) != 0:\n            continue\n        cnt = 0\n        for fr in people[j]:\n            if people[i].count(fr) != 0:\n                cnt += 1\n        per = (100 * cnt) / len(people[i])\n        if int(per) >= k:\n            ans.append(j)\n    print(len(ans), end = ' ')\n    for q in ans:\n        print(q, end = ' ')\n    print()\n", "f = lambda: map(int, input().split())\ng = lambda x, y: d.setdefault(x, set()).add(y)\nd = {}\nm, k = f()\nfor i in range(m):\n    a, b = f()\n    g(a, b)\n    g(b, a)\nt = sorted(d)\nfor a in t:\n    s = [str(b) for b in t if a != b and b not in d[a] and len(d[a] & d[b]) * 100 >= k * len(d[a])]\n    print(str(a) + ':', len(s), ' '.join(s))", "f = lambda: map(int, input().split())\ng = lambda x, y: d.setdefault(x, set()).add(y)\nh = lambda b: a == b or b in d[a] or len(d[a] & d[b]) * 100 < k * len(d[a])\nd = {}\nm, k = f()\nfor i in range(m):\n    a, b = f()\n    g(a, b)\n    g(b, a)\nt = sorted(d)\nfor a in t:\n    s = [str(b) for b in t if not h(b)]\n    print(str(a) + ':', len(s), ' '.join(s))"]