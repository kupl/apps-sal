["# @author \n\nimport sys\n\nclass ABeautifulString:\n    def solve(self):\n\n        def get_not(arr):\n            for x in ['a', 'b', 'c']:\n                if x not in arr:\n                    return x\n\n            assert(False)\n\n        for _ in range(int(input())):\n            s = list(input())\n            n = len(s)\n            for i in range(n - 1):\n                if s[i] == s[i + 1] and s[i] != '?':\n                    print(-1)\n                    break\n            else:\n                x = 3 * ord('a') + 1 +2\n                for i in range(n):\n                    if s[i] == '?':\n                        if (i > 0 and i < n - 1):\n                            s[i] = get_not([s[i - 1], s[i + 1]])\n                        elif i == 0:\n                            s[i] = get_not([s[i + 1]])\n                        else:\n                            s[i] = get_not([s[i - 1]])\n\n                print(''.join(s))\n\nsolver = ABeautifulString()\ninput = sys.stdin.readline\n\nsolver.solve()\n", "import sys\ndef I():\n        return sys.stdin.readline().rstrip()\n\nfor _ in range( int(I()) ):\n    s = I()\n    l = []\n    last = 0\n    for i in range(len(s)):\n        nxt = s[ i + 1 ] if i < len(s) - 1 else 0\n        if s[ i ] == '?':\n            for c in 'abc':\n                if c != last and c != nxt:\n                    l.append(c)\n                    last = c\n                    break\n        else:\n            if s[ i ] == nxt:\n                print(-1)\n                break\n            l.append( s[ i ] )\n            last = s[ i ]\n    else:\n        print(\"\".join(l))\n", "t=int(input())\nfor _ in range(t):\n    s=input()\n    a=[i for i in s]\n    c=['a','b','c']\n    ok=True\n    if len(s)==1:\n        if s=='?':\n            print('a')\n        else:\n            print(s)\n    else:\n        for i in range(len(s)-1):\n            if a[i] is not '?':\n                if a[i]==a[i+1]:\n                    ok=False\n        if ok:\n            for i in range(len(s)):\n                if a[i]=='?':\n                    if i==0:\n                        for j in c:\n                            if j is not a[i+1]:\n                                a[i]=j\n                                break\n                    elif i==len(s)-1:\n                        for j in c:\n                            if j is not a[i-1]:\n                                a[i]=j\n                                break\n                    else:\n                        for j in c:\n                            if j is not a[i-1] and j is not a[i+1]:\n                                a[i]=j\n                                break\n            ok=True\n            for i in range(len(s)-1):\n                if a[i]==a[i+1]:\n                    ok=False\n                    break\n            if ok:\n                print(\"\".join(a))\n            else:\n                print(-1)\n\n        else:\n            print(-1)", "from math import *\nfrom collections import *\nimport sys\nsys.setrecursionlimit(10**9)\n\nt = int(input())\nfor y in range(t):\n\ts = list(input())\n\tn = len(s)\n\tfor i in range(n):\n\t\tif(s[i] == '?'):\n\t\t\tif(0 == n-1): s[i] = 'a'\n\t\t\telif(i == 0):\n\t\t\t\tif(s[i+1] != 'a'):\n\t\t\t\t\ts[i] = 'a'\n\t\t\t\telif(s[i+1] != 'b'):\n\t\t\t\t\ts[i] = 'b'\n\t\t\t\telse:\n\t\t\t\t\ts[i] = 'c'\n\t\t\telif(i == n-1):\n\t\t\t\tif(s[i-1] != 'a'):\n\t\t\t\t\ts[i] = 'a'\n\t\t\t\telif(s[i-1] != 'b'):\n\t\t\t\t\ts[i] = 'b'\n\t\t\t\telse:\n\t\t\t\t\ts[i] = 'c'\n\t\t\telse:\n\t\t\t\tif(s[i+1] != 'a' and s[i-1] != 'a'):\n\t\t\t\t\ts[i] = 'a'\n\t\t\t\telif(s[i+1] != 'b' and s[i-1] != 'b'):\n\t\t\t\t\ts[i] = 'b'\n\t\t\t\telse:\n\t\t\t\t\ts[i] = 'c'\n\tflag = 0\n\tfor i in range(1,n):\n\t\tif(s[i] == s[i-1]):\n\t\t\tflag = 1\n\t\t\tbreak\n\tif(flag == 1): print(-1)\n\telse: print(\"\".join(s))\n\n\n", "t = int(input())\nletters = ['a','b','c']\nfor iTest in range(t):\n    s = list(input())\n    valid = True\n    prev = ''\n    for c in s:\n        if c == prev and c != '?':\n            valid = False\n            break\n        prev = c\n    if not valid:\n        print(-1)\n        continue\n    for i in range(len(s)):\n        if s[i] != '?':\n            continue\n        ns = set()\n        if i > 0:\n            ns.add(s[i-1])\n        if i < len(s)-1:\n            ns.add(s[i+1])\n        for l in letters:\n            if l not in ns:\n                s[i] = l\n                break\n    print(\"\".join(s))\n", "for i in range(int(input())):\n    s=list(input())\n    n=len(s)\n    \n    for i in range(n-1):\n        if s[i]==s[i+1] and s[i]!=\"?\":\n            print(-1)\n            break\n    else:\n        if n==1:\n            if s[0]==\"?\":\n                s[0]=\"a\"\n            print(\"\".join(s))\n            continue\n        if s[0]==\"?\":\n            for j in \"abc\":\n                if s[1]!=j:\n                    s[0]=j\n                    break\n                \n            \n        for i in range(1,n-1):\n            if s[i]==\"?\":\n                for j in \"abc\":\n                    if s[i+1]!=j and s[i-1]!=j:\n                        s[i]=j\n                        break\n            # print(s)        \n        if s[-1]==\"?\":\n            for j in \"abc\":\n                if j!=s[-2]:\n                    s[-1]=j\n                    break\n        print(\"\".join(s))\n        \n                \n            \n", "\n# c a _ c\nT = int(input())\n\nfor t in range(1, T + 1):\n\t# print('Case #' + str(t) + ': ', end = '')\n\tflag = True\n\ts = input()\n\tfor i in range(len(s)):\n\t\tif s[i] == '?':\n\t\t\tfor j in ['a', 'b', 'c']:\n\t\t\t\tif (i + 1 >= len(s) or j != s[i + 1]) and (i - 1 < 0 or j != s[i - 1]):\n\t\t\t\t\ts = s[:i] + j + s[i + 1:]\n\t\t\t\t\tbreak\n\t\tif (i + 1 < len(s) and s[i] == s[i + 1]) or (i - 1 >= 0 and s[i] == s[i - 1]):\n\t\t\t# print(i, s[i])\n\t\t\tflag = False\n\t\t\tbreak\n\n\tif flag:\n\t\tprint(s)\n\telse:\n\t\tprint(-1)", "'''input\n3\n??\n1?\n1?\n'''\nfrom sys import stdin\ndef input():\n    return stdin.readline()[:-1]\n\n\nfor _ in range(int(input())):\n    s = list(input())\n    for i in range(0, len(s)):\n        if s[i] == '?':\n            if i > 0:\n                prev = s[i-1]\n            else:\n                prev = 'x'\n            if i < len(s) - 1:\n                post = s[i+1]\n            else:\n                post = 'x'\n            for ch in list('abc'):\n                if ch != prev and ch != post:\n                    s[i] = ch\n                    break\n    correct = True\n    for i in range(0, len(s) - 1):\n        if s[i+1] == s[i]:\n            correct = False\n\n    print(''.join(s)) if correct else print(-1)\n\n\n\n", "a = int(input())\nfor x in range(a):\n    prev = ''\n    next = ''\n    str = input()\n    res = []\n    ch = 0\n    for i in range(len(str)):\n        if str[i] == prev:\n            print(-1)\n            ch = 1\n            break\n        if i+1!=len(str):\n            next = str[i+1]\n        if str[i] == '?':\n            if 'a' != prev and 'a' !=next:\n                res.append('a')\n                prev = 'a'\n            elif 'b' != prev and 'b' !=next:\n                res.append('b')\n                prev = 'b'\n            elif 'c' != prev and 'c' !=next:\n                res.append('c')\n                prev = 'c'\n        if str[i]=='a' or str[i]=='b' or str[i]=='c':\n            prev = str[i]\n            res.append(prev)\n    if ch == 0:\n        print(''.join(y for y in res))\n", "#!/usr/bin/env python3\nfrom itertools import combinations\nimport sys\ninput = sys.stdin.readline\n\nn = int(input())\nfor i in range(n):\n    s = input().rstrip()\n    ans = []\n    ans.append(\"#\")\n    for ch in s:\n        ans.append(ch)\n    ans.append(\"#\")\n    ok = True\n    for i in range(1, len(ans)-1):\n        if ans[i] == ans[i+1] and ans[i] != \"?\":\n            ok = False\n            break\n        if ans[i] != \"?\":\n            continue\n        if \"a\" not in ans[i-1] + ans[i+1]:\n            ans[i] = \"a\"\n        elif \"b\" not in ans[i-1] + ans[i+1]:\n            ans[i] = \"b\"\n        elif \"c\" not in ans[i-1] + ans[i+1]:\n            ans[i] = \"c\"\n    if ok:\n        print(\"\".join([item for item in ans[1:-1]]))\n    else:\n        print(-1)"]