["# cook your dish here\ns=input()\ni=0 \nl=len(s)\norig=''\nst=[]\nflag=False\nwhile(i<l):\n    if(s[i].isdigit()):\n        num=int(s[i])\n        \n    elif(s[i].isalpha()):\n        if(flag==False):\n            orig+=s[i]\n        else:st.append(s[i]) \n    elif(s[i]=='+'):\n        flag=True\n        st.clear()\n    \n    elif(s[i]=='-'):\n        orig+=(\"\".join(st))*num \n        flag=False\n        \n    i+=1\nif(orig==orig[::-1]):\n    print(\"Return\")\nelse:\n    print(\"Continue\")", "# cook your dish here\ns=input()\ni=0 \nl=len(s)\norig=''\nst=[]\nflag=False\nwhile(i<l):\n    if(s[i].isdigit()):\n        num=int(s[i])\n        \n    elif(s[i].isalpha()):\n        if(flag==False):\n            orig+=s[i]\n        else:st.append(s[i]) \n    elif(s[i]=='+'):\n        flag=True\n        st.clear()\n    \n    elif(s[i]=='-'):\n        orig+=(\"\".join(st))*num \n        flag=False\n        \n    i+=1\nif(orig==orig[::-1]):\n    print(\"Return\")\nelse:\n    print(\"Continue\")", "# cook your dish here\nx=[chr(i) for i in range(48,57)]\ny=input()\nc=''\ns=''\ni=0\np=0\nwhile i<len(y):\n    if y[i] in x:\n        p=int(y[i])\n        i=i+1\n        if y[i]=='+':\n            i+=1\n            while y[i]!='-':\n                c=c+y[i]\n                i=i+1\n        i+=1\n        s=s+c*p\n        c=''\n        #print(s)\n    else:\n        s=s+y[i]\n        #print(s)\n        i=i+1\nif s==s[::-1]:\n    print(\"Return\")\nelse:\n    print(\"Continue\")", "a=list(input())\r\npre=[];i=0;ans=''\r\nwhile i<len(a):\r\n    if ord(a[i])>=48 and ord(a[i])<58 and i<len(a) and '-' in a[i:] and a[i+1]=='+':\r\n        b=a[i+1:]\r\n        p1=b.index('-')\r\n        ans+=''.join(a[i+2:p1+i+1])*int(a[i])\r\n        i=i+p1+1\r\n    elif a[i]!='+' and a[i]!='-' and not (ord(a[i])>=48 and ord(a[i])<58):\r\n        ans+=a[i]\r\n    i+=1\r\nprint(\"Continue\" if ans!=ans[::-1] else \"Return\")", "a=list(input())\r\npre=[]\r\ni=0\r\nans=''\r\nc=0\r\nwhile i<len(a):\r\n    if ord(a[i])>=48 and ord(a[i])<58 and i<len(a) and '-' in a[i:] and a[i+1]=='+':\r\n        b=a[i+1:]\r\n        p1=b.index('-')\r\n        ans+=''.join(a[i+2:p1+i+1])*int(a[i])\r\n        i=i+p1+1\r\n    # elif ord(a[i])>=48 and ord(a[i])<58:\r\n    #     ans+=a[i]\r\n    elif a[i]!='+' and a[i]!='-' and not (ord(a[i])>=48 and ord(a[i])<58):\r\n        ans+=a[i]\r\n    i+=1\r\nprint(\"Continue\" if ans!=ans[::-1] else \"Return\")", "# cook your dish here\ns = input().strip()\ns = s.replace('-', '+')\ns = list(s.split('+'))\nw = []\nfor i in range(len(s)):\n    f = 0\n    for j in range(1,len(s[i])):\n        if not s[i][j].isalpha():\n            w.append(s[i][:j])\n            w.append(s[i][j:])\n            f = 1\n            break\n    if not f:\n        w.append(s[i])\n#print(s, w)\nres = ''\nm = 1\nfor i in range(len(w)):\n    if not w[i].isalpha():\n        if w[i] != '':\n            m = int(w[i])\n    else:\n        res += m*w[i]\n        m = 1\nif res == res[::-1]:\n    print('Return')\nelse:\n    print('Continue')\n", "# cook your dish here\ns=input()\nst=\"\"\nst2=\"\"\nfor i in range(len(s)):\n    if s[i].isdigit():\n        st2=st2+st\n        st=\"\"\n        n=int(s[i])\n        continue\n    elif s[i]=='+':continue\n    elif s[i]=='-':\n        st=st*n\n    else:\n        st=st+s[i]\n        \nif st!=\"\":st2=st2+st\nif st2[::-1]==st2:\n    print(\"Return\")\nelse:print(\"Continue\")", "import sys\r\nimport math\r\nimport bisect\r\nfrom sys import stdin,stdout\r\nfrom math import gcd,floor,sqrt,log\r\nfrom collections import defaultdict as dd\r\nfrom bisect import bisect_left as bl,bisect_right as br\r\n\r\nsys.setrecursionlimit(100000000)\r\n\r\nii     =lambda: int(input())\r\nsi     =lambda: input()\r\njn     =lambda x,l: x.join(map(str,l))\r\nsl     =lambda: list(map(str,input().strip()))\r\nmi     =lambda: list(map(int,input().split()))\r\nmif    =lambda: list(map(float,input().split()))\r\nlii    =lambda: list(map(int,input().split()))\r\n\r\nceil   =lambda x: int(x) if(x==int(x)) else int(x)+1\r\nceildiv=lambda x,d: x//d if(x%d==0) else x//d+1\r\n\r\nflush  =lambda: stdout.flush()\r\nstdstr =lambda: stdin.readline()\r\nstdint =lambda: int(stdin.readline())\r\nstdpr  =lambda x: stdout.write(str(x))\r\n\r\nmod=1000000007\r\n\r\n\r\n#main code\r\ns=si()\r\np=0\r\nn=0\r\n\r\nsol=''\r\ntemp=''\r\nfor char in s:\r\n    if char.isdigit():\r\n        p=1\r\n        d=int(char)\r\n    elif p==1:\r\n        if char=='+':\r\n            continue\r\n        elif char=='-':\r\n            sol+=(temp*d)\r\n            n=1\r\n            temp=''\r\n            p=0\r\n        else:\r\n            temp+=char\r\na=sol[::-1]\r\nif a==sol:\r\n    print('Return')\r\nelse:\r\n    print('Continue')\r\n\r\n    \r\n            \r\n            \r\n", "s = input()\nss=[]\ni=0\nwhile i<len(s):\n    if s[i].isdigit()==True:\n        i+=1\n    elif s[i]=='+' and s[i-1].isdigit()==True and i!=0:\n        for j in range(i+1, len(s)):\n            if s[j]=='-':\n                break\n        ss.append(int(s[i-1])*s[i+1:j])\n        i=j+1\n    elif s[i]=='+' and s[i-1].isdigit()==False and i!=0:\n        for j in range(i+1, len(s)):\n            if s[j]=='-':\n                break\n        ss.append(s[i+1:j])\n        i=j+1\n    elif s[i]=='+' and i==1:\n        for j in range(i+1, len(s)):\n            if s[j]=='-':\n                break\n        ss.append(s[i+1:j])\n        i=j+1\n    else:\n        ss.append(s[i])\n        i+=1\nss=''.join(ss)\nif ss == ss[::-1]:\n    print('Return')\nelse:\n    print('Continue')", "s = str(input());f = \"\";g = \"\";final = \"\"\nfor i in range(len(s)):\n\tf += s[i]\n\tif s[i] == '-':f += \" \"\nfor i in range(len(f)):\n\tif f[i].isdigit():g += \" \"\n\tg += f[i]\ne = g.split()\nfor i in range(len(e)):z = e[i];final = (final + int(z[0])*(z[2:len(z)-1]) if z[0].isdigit() else final + z)\nprint(\"Return\") if final == final[::-1] else print(\"Continue\")", "s = str(input())\nf = \"\"\nfor i in range(len(s)):\n\tf += s[i]\n\tif s[i] == '-':f += \" \"\ng = \"\"\nfor i in range(len(f)):\n\tif f[i].isdigit():g += \" \"\n\tg += f[i]\nfinal = \"\"\ne = g.split()\nfor i in range(len(e)):z = e[i];final = (final + int(z[0])*(z[2:len(z)-1]) if z[0].isdigit() else final + z)\nprint(\"Return\") if final == final[::-1] else print(\"Continue\")", "s = str(input())\nf = \"\"\nfor i in range(len(s)):\n\tf += s[i]\n\tif s[i] == '-':\n\t\tf += \" \"\ng = \"\"\nfor i in range(len(f)):\n\tif f[i].isdigit():\n\t\tg += \" \"\n\tg += f[i]\nfinal = \"\"\ne = g.split()\nfor i in range(len(e)):\n\tz = e[i]\n\tif z[0].isdigit():\n\t\tval = z[2:len(z)-1]\n\t\tfinal += int(z[0])*val\n\telse:\n\t\tfinal += z\nif final == final[::-1]:\n\tprint(\"Return\")\nelse:\n\tprint(\"Continue\")", "s = str(input())\n#print(len(s))\nf = \"\"\nfor i in range(len(s)):\n\tf += s[i]\n\tif s[i] == '-':\n\t\tf += \" \"\n#print(f)\n#print(len(f))\ng = \"\"\nfor i in range(len(f)):\n\tif f[i].isdigit():\n\t\tg += \" \"\n\tg += f[i]\n#print(g)\n#print(len(g))\n#print(g.split())\nfinal = \"\"\ne = g.split()\nfor i in range(len(e)):\n\tz = e[i]\n\t#print(z)\n\tif z[0].isdigit():\n\t\tval = z[2:len(z)-1]\n\t\t#print(z[2:len(z)-1])\n\t\tfinal += int(z[0])*val\n\telse:\n\t\tfinal += z\n#print(final)\nif final == final[::-1]:\n\tprint(\"Return\")\nelse:\n\tprint(\"Continue\")", "# cook your dish here\ns=input().rstrip()\ni=0\nfinal=''\nwhile i<len(s):\n    if s[i].isdigit():\n        val=int(s[i])\n        s1=''\n        while s[i]!='-':\n            if s[i].isalpha():\n                s1+=s[i]\n            i+=1\n        i+=1\n        final+=s1*val\n    else:\n        s1=''\n        while s[i].isalpha():\n            s1+=s[i]\n            i+=1\n            if i>=len(s):\n                break\n        final+=s1\n#print(final)\nfinal=list(final)\ntemp=final[::-1]\n#print(temp,final)\nif final==temp:\n    print('Return')\nelse:\n    print('Continue')", "s = input()\r\nnew_s = ''\r\nfor i in s:\r\n    if i.isalpha():\r\n        new_s += i\r\n\r\nif new_s == new_s[::-1]:\r\n    print('Return')\r\nelse:\r\n    print('Continue')", "a=input().strip()\r\nst=\"\"\r\nx=\"\"\r\nmul=0\r\nt=0\r\nfor i in a:\r\n    if i in \"1234567890\":\r\n        mul=mul*10+int(i)\r\n    elif i==\"-\":\r\n        st+=x*mul\r\n        x=\"\"\r\n        t=0\r\n        mul=0\r\n    elif t==1:\r\n        x+=i\r\n    elif i==\"+\":\r\n        t=1\r\n    else:\r\n        st+=i\r\nif st==st[::-1]:\r\n    print(\"Return\")\r\nelse:\r\n    print(\"Continue\")"]