["k = int(input())\nx, y = list(map(int, input().split()))\nans = []\nif k % 2 == 0:\n    if (x + y) % 2 == 1:\n        print((-1))\n        return\nx_reverse = False\ny_reverse = False\nif x < 0:\n    x *= -1\n    x_reverse = True\nif y < 0:\n    y *= -1\n    y_reverse = True\n\n\ndef app(a, b):\n    nonlocal ans\n    if x_reverse:\n        a *= -1\n    if y_reverse:\n        b *= -1\n\n    ans.append((a, b))\n\n\nnowx = 0\nnowy = 0\n\nwhile abs(x - nowx) + abs(y - nowy) >= 2 * k:\n    if abs(x - nowx) > k:\n        nowx += k\n    else:\n        nowy += k\n    app(nowx, nowy)\n\n\ndef ok():\n    app(x, y)\n    print((len(ans)))\n    for a, b in ans:\n        print((a, b))\n    return\n\n\nrest = abs(x - nowx) + abs(y - nowy)\nif rest == k:\n    ok()\n\nif rest % 2 == 0:\n    delta = 2 * k - rest\n    assert delta % 2 == 0\n    if abs(x - nowx) < abs(y - nowy):\n        temp = abs(x - nowx) + delta // 2\n        nowx += temp\n        nowy += k - temp\n    else:\n        temp = abs(y - nowy) + delta // 2\n        nowy += temp\n        nowx += k - temp\n    app(nowx, nowy)\n    ok()\n\n# \u6b8b\u308a\u304c\u5947\u6570\u306e\u3068\u304d\u306f\u3001\u6761\u4ef6\u304b\u3089\u4e00\u65e6\u30b4\u30fc\u30eb\u3092\u3059\u304e\u308b\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308c\u3070\u3001\n# \u6b8b\u308a\u306e\u8ddd\u96e2\u306e\u5076\u5947\u304c\u5909\u308f\u308b\u3002\n\nif abs(x - nowx) < abs(y - nowy):\n    nowx += k\n    app(nowx, nowy)\nelse:\n    nowy += k\n    app(nowx, nowy)\n\nx_delta = x - nowx\nx_pm = x_delta // abs(x_delta)\ny_delta = y - nowy\ny_pm = y_delta // abs(y_delta)\nif abs(x_delta) < abs(y_delta):\n    delta = 2 * k - (abs(x_delta) + abs(y_delta))\n    temp = abs(x - nowx) + delta // 2\n    nowx += x_pm * temp\n    nowy += y_pm * (k - temp)\n    app(nowx, nowy)\n    ok()\nelse:\n    delta = 2 * k - (abs(x_delta) + abs(y_delta))\n    temp = abs(y - nowy) + delta // 2\n    nowy += y_pm * temp\n    nowx += x_pm * (k - temp)\n    app(nowx, nowy)\n    ok()\n\n", "import sys\n\nK = int(input())\nX, Y = list(map(int, input().split()))\n\nmx = 1 if X >= 0 else -1\nmy = 1 if Y >= 0 else -1\nX, Y = abs(X), abs(Y)\nisSwaped = False\nif X < Y:\n    X, Y = Y, X\n    isSwaped = True\n\ndist = X+Y\nif dist%K == 0:\n    rx, ry = 0, 0\nelse:\n    if dist%2 == 0:\n        if K%2 == 0:\n            if dist <= 2*K:\n                R = 2*K\n            else:\n                R = -(-dist // K) * K\n        else:\n            R = -(-dist // (2*K)) * 2*K\n    else:\n        if K%2 == 0:\n            print((-1))\n            return\n        else:\n            if dist <= 3*K:\n                R = 3*K\n            else:\n                R = -(-(dist-K) // (2*K)) * 2*K + K\n    r = (R-dist) // 2\n\n    if r < K:\n        rx, ry = 0, r\n    else:\n        rx = r//2\n        ry = r-rx\n\nanss = []\nx, y = 0, 0\nif -ry < y:\n    dy = y+ry\n    y -= dy\n    x += K-dy\n    anss.append((x, y))\n\nnum = (X+rx-x) // K\nfor _ in range(num):\n    x += K\n    anss.append((x, y))\n\nif x < X+rx:\n    dx = X+rx-x\n    x += dx\n    y += K-dx\n    anss.append((x, y))\n\nnum = (Y-y) // K\nfor _ in range(num):\n    y += K\n    anss.append((x, y))\n\nif y < Y:\n    dy = Y-y\n    y += dy\n    x -= K-dy\n    anss.append((x, y))\n\nprint((len(anss)))\nif isSwaped:\n    print(('\\n'.join([str(x[1]*mx)+' '+str(x[0]*my) for x in anss])))\nelse:\n    print(('\\n'.join([str(x[0]*mx)+' '+str(x[1]*my) for x in anss])))\n", "K = int(input())\nX, Y = [int(_) for _ in input().split()]\nx, signx = abs(X), -1 if X < 0 else 1\ny, signy = abs(Y), -1 if Y < 0 else 1\nans = [(x, y)]\n\n\ndef calcxy(x, y):\n    dx = min(K, x)\n    dy = K - dx\n    x -= dx\n    if y > dy:\n        y -= dy\n    else:\n        y += dy\n    return x, y\n\n\ndef calczw(x, y):\n    #z+w=abs(z-x)+abs(w-y)=K\n    if x > y:\n        #z+w=x-z+w-y=K and z<=x and w>=y\n        z = (x - y) // 2\n        w = K - z\n    else:\n        #z+w=z-x+y-w=K and z>=x and w<=y\n        w = (y - x) // 2\n        z = K - w\n    return (z, w)\n\n\nif x + y != K:\n    while (x + y) > 2 * K:\n        x, y = calcxy(x, y)\n        ans += [(x, y)]\n    z, w = calczw(x, y)\n    if abs(z - x) + abs(w - y) != K:\n        x, y = calcxy(x, y)\n        ans += [(x, y)]\n        z, w = calczw(x, y)\n    if abs(z - x) + abs(w - y) != K:\n        print((-1))\n        return\n    ans += [(z, w)]\nprint((len(ans)))\nfor x, y in ans[::-1]:\n    print((x * signx, y * signy))\n", "def main():\n    k=int(input())\n    x,y=map(int,input().split())\n\n    def calc(x,y,k):\n        x_sign,y_sign,xy_swap=1,1,0\n        if x<0:\n            x_sign=-1\n            x*=-1\n        if y<0:\n            y_sign=-1\n            y*=-1\n        if x<y:\n            xy_swap=1\n            x,y=y,x\n        ans=[]\n        d=x+y\n        cnt=d//k\n        #\u8ddd\u96e2\u304ck\u3067\u5272\u308a\u5207\u308c\u308b\u3068\u304d\n        def pattern_0(x,y):\n            x_now,y_now=0,0\n            ans=[]\n            cnt=(x+y)//k\n            j=cnt\n            for i in range(cnt):\n                if x_now+k<x:\n                    x_now+=k\n                    ans.append([x_now,y_now])\n                else:\n                    y_now=k-x+x_now\n                    x_now=x\n                    ans.append([x_now,y_now])\n                    j=i+1\n                    break\n            return ans+[[x,y_now+(i-j+1)*k] for i in range(j,cnt)]\n\n        #cnt==0\u306e\u3068\u304d\n        #d\u304c\u5076\u6570\u306e\u3068\u304d\n        def pattern_1_even(x,y):\n            return [[(x+y)//2,(x+y)//2-k],[x,y]]\n        #d\u304c\u5947\u6570\u306e\u3068\u304d\n        def pattern_1_odd(x,y):\n            if k%2==0:\n                return -1\n            return [[k,0]]+[[-i+k,j] for i,j in pattern_1_even(k-x,y)]\n\n        #cnt>=1\u306e\u3068\u304d\n        #d\u304c\u5076\u6570\u306e\u3068\u304d\n        def pattern_2_even(x,y):\n            cnt=(x+y)//k\n            if k%2==0 or cnt%2==1:\n                l=(k*(cnt+1)-(x+y))//2\n            else:\n                l=(k*(cnt+2)-(x+y))//2\n            if cnt!=1:\n                temp=[min(2*(k-l),x),max(2*(k-l)-x,0)]\n                return [[k-l,-l],temp]+[[i+temp[0],j+temp[1]] for i,j in pattern_0(x-temp[0],y-temp[1])]\n            else:\n                return [[k-l,-l],[x,y]]\n            \n        #d\u304c\u5947\u6570\u306e\u3068\u304d\n        def pattern_2_odd(x,y):\n            cnt=(x+y)//k\n            if k%2==0:\n                return -1\n            else:\n                if (x-k+y)<k:\n                    if x-k<y:\n                        return [[k,0]]+[[j+k,i] for i,j in pattern_1_even(y,x-k)]\n                    else:\n                        return [[k,0]]+[[i+k,j] for i,j in pattern_1_even(x-k,y)]\n                if x-k<y:\n                    return [[k,0]]+[[j+k,i] for i,j in pattern_2_even(y,x-k)]\n                else:\n                    return [[k,0]]+[[i+k,j] for i,j in pattern_2_even(x-k,y)]\n        if d%k==0:\n            temp=pattern_0(x,y)\n        elif cnt==0:\n            if d%2==0:\n                temp=pattern_1_even(x,y)\n            else:\n                temp=pattern_1_odd(x,y)\n        else:\n            if d%2==0:\n                temp=pattern_2_even(x,y)\n            else:\n                temp=pattern_2_odd(x,y)\n        if temp==-1:\n            return -1\n        if xy_swap:\n            temp=[[j*x_sign,i*y_sign] for i,j in temp]\n        else:\n            temp=[[i*x_sign,j*y_sign] for i,j in temp]\n        return temp\n\n    def out(x,y,k):\n        temp=calc(x,y,k)\n        if temp==-1:\n            print(-1)\n            return 0\n        print(len(temp))\n        for i in temp:\n            print(*i)\n\n    out(x,y,k)\nmain()", "k = int(input())\nx, y = [int(item) for item in input().split()]\n\n# Think 1st quadrant\nx_minus = False\nif x < 0:\n    x *= -1\n    x_minus = True\ny_minus = False\nif y < 0:\n    y *= -1\n    y_minus = True\n# Think x >= y\ny_lt_x = False\nif y > x:\n    x, y = y, x\n    y_lt_x = True\n\n# Even step cannot go to odd point\nif k % 2 == 0 and (x + y) % 2 == 1:\n    print(-1)\n    return\n\nstep_num = ((x + y) + (k - 1)) // k\nd = (step_num * k - x - y) // 2\nwhile d != 0 and (k > x + d or k > y + d + x):\n    step_num += 1\n    d = (step_num * k - x - y) // 2\nif step_num * k % 2 != (x + y) % 2:\n    step_num += 1\n    d = (step_num * k - x - y) // 2\n\n# print(x, y, step_num, step_num * k)\n\nans = []\nstep_len = 0\non_top = False\nfor i in range(step_num):\n    step_len += k\n    if step_len <= y + d:\n        ans.append([0, step_len])\n    elif step_len <= y + d + x:\n        on_top = True\n        ans.append([step_len - y - d, y + d])\n    else:\n        ans.append([x, (y + d) - (step_len - y - d - x)])\n        if not on_top:\n            newx, newy = ans[-1]\n            prevx, prevy = ans[-2]\n            if newy > prevy:\n                b = abs(prevy - newy)\n                a = k - abs(prevx - newx) - abs(prevy - newy)\n                ans.pop() \n                ans.append([newx + b + a // 2, newy - b - a // 2])\n            else:\n                a = k - abs(prevx - newx) - abs(prevy - newy)\n                ans.pop() \n                ans.append([newx + a // 2, newy - a // 2])\n            on_top = True\nprint(len(ans))\nfor x, y in ans:\n    if y_lt_x:\n        x, y = y, x\n    if x_minus:\n        x *= -1\n    if y_minus:\n        y *= -1\n    print(x, y)", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nK = int(input())\nX,Y = map(int,input().split())\n\nif (X+Y) % 2 != 0 and K % 2 == 0:\n    print(-1)\n    return\n\ndef strategy(x,y,K):\n    if x < 0:\n        dx, dy = strategy(-x,y,K)\n        return -dx, dy\n    if y < 0:\n        dx, dy = strategy(x,-y,K)\n        return dx,-dy\n    if x > y:\n        dx, dy = strategy(y,x,K)\n        return dy, dx\n    # 0 <= x <= y \u3068\u3057\u3066\u3088\u3044\n    L = x + y\n    if L > 2 * K:\n        dx = min(x,K)\n        dy = K - dx\n        return dx,dy\n    # \u8ddd\u96e22K\u4ee5\u4e0b\u30023\u56de\u4ee5\u5185\u306b\u4ed5\u7559\u3081\u308b\n    if L == K:\n        return x,y\n    if (x+y) % 2 == 0:\n        # 2\u56de\u3067\u4ed5\u7559\u3081\u308b\n        # 0 <= x < y \u304c\u5206\u304b\u3063\u3066\u3044\u308b\n        t = (y - x) // 2\n        dx,dy = K-t, t\n        return dx,dy\n    # 3\u56de\u3067\u4ed5\u7559\u3081\u308b\n    # \u3068\u308a\u3042\u3048\u305a\u96e2\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\n    dx = min(K,x)\n    dy = K - dx\n    return dx,dy\n\n\nx,y = 0,0\nanswer = []\nwhile x != X or y != Y:\n    dx,dy = strategy(X-x, Y-y, K)\n    x += dx\n    y += dy\n    answer.append((x,y))\n\nprint(len(answer))\nfor x,y in answer:\n    print(x,y)", "def editarr(x,y,arr):\n  if abs(x)>=abs(y):\n    for i in range(len(arr)):\n      arr[i][0],arr[i][1]=arr[i][1],arr[i][0]\n  if x<0:\n    for i in range(len(arr)):\n      arr[i][0]*=-1\n  if y<0:\n    for i in range(len(arr)):\n      arr[i][1]*=-1\n\nk=int(input())\nx,y=map(int,input().split())\nans=[]\ntx=abs(x)\nty=abs(y)\nif tx>=ty:\n  tx,ty=ty,tx\nif k%2==0 and (tx+ty)%2!=0:\n  print(-1)\nelse:\n  if tx+ty<k:\n    if (tx+ty)%2==0:\n      m=(ty-tx)//2\n      ans.append([k-m,m])\n    else:\n      td=k-(tx+ty)\n      ans.append([tx,ty+td])\n      ans.append([tx+(k-td//2),ty+td//2])\n    ans.append([tx,ty])\n    n=len(ans)\n  elif ty-(k-tx%k)<k and (ty-(k-tx%k))%2!=0:\n    if tx<k and ty<k:\n      if (2*k-(tx+ty))%2==0:\n        td=2*k-(tx+ty)\n        ans.append([tx+td//2,k-(tx+td//2)])\n        ans.append([tx,ty])\n      else:\n        ans.append([tx,k-tx])\n        td=ty-(k-tx)\n        ans.append([tx+(k-td//2),ans[-1][1]+td//2])\n        ans.append([tx,ty])\n      n=len(ans)\n    else:\n      if tx+ty<2*k:\n        if (2*k-(tx+ty))%2==0:\n          td=2*k-(tx+ty)\n          ans.append([tx+td//2,k-(tx+td//2)])\n          ans.append([tx,ty])\n        else:\n          ans.append([tx,k-tx])\n          td=ty-(k-tx)\n          ans.append([tx+(k-td//2),ans[-1][1]+td//2])\n          ans.append([tx,ty])\n        n=len(ans)\n      else:\n        ans.append([0,0])  \n  else:\n    ans.append([0,0])\n    for i in range(tx//k):\n      ans.append([ans[-1][0]+k,0])\n    if ans[-1][0]!=tx:\n      ans.append([tx,k-abs(tx-ans[-1][0])])\n    td=ty-ans[-1][1]\n    if td%k==0:\n      flag=True\n    else:\n      flag=False\n    for i in range(td//k):\n      if flag==False and (ty-ans[-1][1])%2==0 and (ty-ans[-1][1])<=2*k:\n          break\n      ans.append([tx,ans[-1][1]+k])\n    if ans[-1][1]!=ty:\n      td=ty-ans[-1][1]\n      ans.append([tx+(k-td//2),ans[-1][1]+td//2])\n      ans.append([tx,ty])\n    ans.pop(0)\n    n=len(ans)\n  editarr(x,y,ans)\n  print(n)\n  for a,b in ans:\n    print(a,b)", "import sys\nsys.setrecursionlimit(300000)\ndef solve(x,y,k):\n    if x==y==0: return []\n    if x<0: return [(-x,y) for x,y in solve(-x,y,k)]\n    if y<0: return [(x,-y) for x,y in solve(x,-y,k)]\n    if x>y: return [(x,y) for y,x in solve(y,x,k)]\n    if (x+y)%k==0: return [(k,0)]*(x//k)+[(0,k)]*(y//k)+([]if x%k==y%k==0 else[(x%k,y%k)])\n    if x+y>=2*k:\n        if x%k+y%k>=k: return [(k,0)]*(x//k)+[(0,k)]*(y//k)+solve(x%k,y%k,k)\n        else: return ([(k,0)]*(x//k)+[(0,k)]*(y//k))[:-1]+solve(x%k,y%k+k,k)\n    if x+y<K and (x+y)%2==1: return solve(x,y+k,k)+[(0,-k)]\n    if K&1 and x+y>k and (x+y)%k%2==0: return solve(x,y-k,k)+[(0,k)]\n    z=(x+y)//2\n    return [(k-z+x,z-x),(z-k,z)]\nK,X,Y=map(int, open(0).read().split())\nif K%2==0 and (X+Y)%2==1:\n    print(-1)\nelse:\n    ans=solve(X,Y,K)\n    print(len(ans))\n    ax,ay=0,0\n    for x,y in ans:\n        ax+=x\n        ay+=y\n        print(ax,ay)", "import sys\ninput = sys.stdin.readline\n\nK=int(input())\nX,Y=list(map(int,input().split()))\n\nif K%2==0 and (X+Y)%2==1:\n    print((-1))\n    return\n\nANS=[]\nNOWX=0\nNOWY=0\n\ndef dis(NOWX,NOWY,X,Y):\n    return abs(NOWX-X)+abs(NOWY-Y)\n\ndef app():\n    ANS.append((NOWX,NOWY))\n\nif dis(NOWX,NOWY,X,Y)<K and dis(NOWX,NOWY,X,Y)%2==1:\n    if X>0:\n        NOWX-=K\n        app()\n    elif X<0:\n        NOWX+=K\n        app()\n    elif Y>0:\n        NOWY-=K\n        app()\n    elif Y<0:\n        NOWY+=K\n        app()\n        \n\nwhile dis(NOWX,NOWY,X,Y)>2*K:\n    if X-NOWX>K:\n        NOWX+=K\n        app()\n    elif NOWX-X>K:\n        NOWX-=K\n        app()\n    elif Y-NOWY>K:\n        NOWY+=K\n        app()\n    elif NOWY-Y>K:\n        NOWY-=K\n        app()\n\n\n\nif dis(NOWX,NOWY,X,Y)!=K and dis(NOWX,NOWY,X,Y)%2==1:\n    if X-NOWX>0:\n        NOWX+=K\n        app()\n    elif NOWX-X>0:\n        NOWX-=K\n        app()\n    elif Y-NOWY>0:\n        NOWY+=K\n        app()\n    elif NOWY-Y>0:\n        NOWY-=K\n        app()\n\n\n\nif dis(NOWX,NOWY,X,Y)==K:\n    ANS.append((X,Y))\n\nelse:\n    t=dis(NOWX,NOWY,X,Y)\n    u=(K*2-t)//2\n\n    if abs(NOWY-Y)<=abs(NOWX-X):\n\n        if X<NOWX and Y>=NOWY:\n                ANS.append((NOWX-(K-u),NOWY-u))\n                ANS.append((X,Y))\n        elif X<NOWX and Y<=NOWY:\n                ANS.append((NOWX-(K-u),NOWY+u))\n                ANS.append((X,Y))\n                \n        elif X>NOWX and Y>=NOWY:\n                ANS.append((NOWX+(K-u),NOWY-u))\n                ANS.append((X,Y))\n        elif X>NOWX and Y<=NOWY:\n                ANS.append((NOWX+(K-u),NOWY+u))\n                ANS.append((X,Y))\n\n    else:\n        if X<=NOWX and Y>NOWY:\n                ANS.append((NOWX+u,NOWY+(K-u)))\n                ANS.append((X,Y))\n        elif X<=NOWX and Y<NOWY:\n                ANS.append((NOWX+u,NOWY-(K-u)))\n                ANS.append((X,Y))\n                \n        elif X>=NOWX and Y>NOWY:\n                ANS.append((NOWX-u,NOWY+(K-u)))\n                ANS.append((X,Y))\n        elif X>=NOWX and Y<NOWY:\n                ANS.append((NOWX-u,NOWY-(K-u)))\n                ANS.append((X,Y))\n        \n            \nprint((len(ANS)))\nfor x,y in ANS:\n    print((x,y))\n        \n        \n\n    \n    \n", "import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nk=II()\nx,y=MI()\n\n# K\u304c\u5076\u6570\u3067\u3001\u30b4\u30fc\u30eb\u307e\u3067\u306e\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u5947\u6570\u3060\u3068\u4e0d\u53ef\u80fd\nif k%2==0 and (x+y)%2:\n    print(-1)\n    return\n\n# x>=0,y>=0,x<=y\u306b\u4fee\u6b63\u3057\u3066\u89e3\u304d\u3001\u6700\u5f8c\u306b\u5fa9\u5143\ncx=-1 if x<0 else 1\ncy=-1 if y<0 else 1\nx,y=abs(x),abs(y)\nswap=False\nif x>y:\n    swap=True\n    x,y=y,x\n\nans=[]\nif (x+y)%2 and x+y<k:\n    ans.append((x,y))\n    y+=k\nl=(x+y+k-1)//k*k\nif (l-x-y)%2:l+=k\nd=(l-x-y)//2\nif d>0 and d+y<k:d+=k//2\n\nif d:\n    ans.append((x,y))\n    x+=d\n    y-=k-d\n\nwhile y-k>=0:\n    ans.append((x, y))\n    y-=k\n\nif y:\n    ans.append((x,y))\n    x-=k-y\n    y=0\n\nwhile x>0:\n    ans.append((x, y))\n    x-=k\n\nprint(len(ans))\nfor x,y in ans[::-1]:\n    if swap:x,y=y,x\n    print(cx*x,cy*y)\n", "K = int(input())\nX, Y = list(map(int, input().split()))\n\nP = []\nx, y = 0, 0\n\nwhile (x, y) != (X, Y):\n    dx = abs(X - x)\n    dy = abs(Y - y)\n    D = dx + dy\n    if D == K:\n        x, y = X, Y\n    elif D % 2 != 0 and K % 2 == 0:\n        print((-1))\n        return\n    elif D % 2 == 0 and D <= 2 * K:\n        pos   = D // 2\n        shift = (2 * K - D) // 2\n        if pos <= dx:\n            x += pos   if X > x else -pos\n            y -= shift if Y > y else -shift\n        else:\n            x = X + (shift if X > x else -shift)\n            y += pos - dx if Y > y else -(pos - dx)\n    elif D < K:\n        x -= K if X > x else -K\n    elif dx >= K:\n        x += K if X > x else -K\n    else:\n        x = X\n        y += K - dx if Y > y else -(K - dx)\n    P.append((x, y))\n\nprint((len(P)))\nfor x, y in P:\n    print((x, y))\n", "#55 ABC135E\nk=int(input())\nx,y=map(int,input().split())\ndef golf(a,b):\n\tif a<0:\n\t\tt=golf(-a,b)\n\t\treturn -t[0],t[1]\n\tif b<0:\n\t\tt=golf(a,-b)\n\t\treturn t[0],-t[1]\n\tif a>b:\n\t\tt=golf(b,a)\n\t\treturn t[1],t[0]\n\tif a+b>=2*k:\n\t\treturn a,b-k\n\tif a+b==k:\n\t\treturn 0,0\n\tr=k-(a+b)//2\n\treturn -r,a+b+r-k\nif k%2==0 and (x+y)%2==1:\n\tprint(-1)\nelse:\n\tres=[]\n\twhile x or y:\n\t\tres.append([x,y])\n\t\tx,y=golf(x,y)\n\tprint(len(res))\n\tfor r in res[::-1]:\n\t\tprint(r[0],r[1])", "import itertools\nK=int(input())\nX,Y=list(map(int,input().split()))\nMdist=abs(X)+abs(Y)\nif Mdist%2==1 and K%2==0:\n    print((-1))\n    return\n    #K:\u5076\u6570\u306a\u3089\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u5076\u6570\u306e\u70b9\u306b\u3057\u304b\u884c\u3051\u306a\u3044\n    #\u9006\u306bK\u304c\u5076\u6570\u306a\u3089\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u5076\u6570\u306e\u4efb\u610f\u306e\u70b9\u306b\u884c\u3051\u308b\n    #K:\u5947\u6570\u306a\u3089\u7406\u8ad6\u4e0a\u3069\u3053\u3067\u3082\u884c\u3051\u308b\n    #\u3088\u3063\u3066\u3053\u308c\u4ee5\u5916\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u5168\u90e8\u53ef\u80fd\n    #(0,0)->(2n+1,0)->(n+1,n+1)->(1,0)\n#K:\u5947\u6570\u306e\u3068\u304d\u3001\u79fb\u52d5\u56de\u6570\u3068\u8ddd\u96e2\u304cmod2 \u3067\u5408\u540c\ndef searcheven(x,y):\n    if abs(x)+abs(y)>2*K:\n        return None\n    if (abs(x)+abs(y))%2==1:\n        return None\n    for ps in itertools.product([-1,1],repeat=4):\n        p1,p2,p3,p4=ps\n        if p1*p4==p2*p3:\n            if p3*(K-p1*x-p2*y)==-p1*K:\n                a,b=0,p4*K\n                if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                    return (a,b)\n                a,b=p3*K,0\n                if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                    return (a,b)\n            else:\n                pass\n        else:\n            tmp1=K-p1*x-p2*y\n            tmp2=K\n            tmp3=p4*tmp1+p2*tmp2\n            tmp4=-p3*tmp1-p1*tmp2\n            det=-p1*p4+p2*p3\n            a,b=(tmp3//det,tmp4//det)\n            if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                return (a,b)\n            else:\n                pass\n    return None\n\nans=[(0,0)]\nwhile(True):\n    nx,ny=ans[-1]\n    if abs(nx-X)+abs(ny-Y)<=2*K:\n        if (abs(nx-X)+abs(ny-Y))%2==0:\n            p,q=searcheven(X-nx,Y-ny)\n            ans.append((p+nx,q+ny))\n            ans.append((X,Y))\n            break\n        else:\n            if abs(nx-X)+abs(ny-Y)==K:\n                ans.append((X,Y))\n                break\n            tmpx=K//2\n            tmpy=K-tmpx\n            nextkouho=[(tmpx,tmpy),(tmpx,-tmpy),(-tmpx,tmpy),(-tmpx,-tmpy),(K,0),(-K,0),(0,K),(0,-K)]\n            for point in nextkouho:\n                ptmp,qtmp=point\n                p=ptmp+nx;q=qtmp+ny\n                if abs(X-p)+abs(Y-q)<=2*K:\n                    ans.append((p,q))\n                    break\n    elif abs(nx)+K<=abs(X):\n        if X<0:\n            ans.append((nx-K,ny))\n            continue\n        else:\n            ans.append((nx+K,ny))\n            continue\n    elif abs(ny)+K<=abs(Y):\n        if Y<0:\n            ans.append((nx,ny-K))\n            continue\n        else:\n            ans.append((nx,ny+K))\n            continue\n\n\n#print(ans)\ns=len(ans)-1\nflag=1\nfor i in range(s):\n    ax,ay=ans[i]\n    bx,by=ans[i+1]\n    if abs(ax-bx)+abs(ay-by)==K:\n        pass\n    else:\n        flag=0\n        break\nif flag==0:\n    print(\"NG\")\nprint(s)\nfor i in range(1,s+1):\n    print((ans[i][0],ans[i][1]))\n", "k = int(input())\nx,y = list(map(int,input().split()))\nif abs(x)+abs(y) == k:\n    print((1))\n    print((x,y))\n    return\ncx = cy = cxy = False\nif x < 0:\n    x = -x\n    cx = True\nif y < 0:\n    y = -y\n    cy = True\nif x < y:\n    x,y =y,x\n    cxy = True\n\nif k %2 == 0 and (x+y)%2 == 1:\n    print((-1))\n    return\n\nans = []\nn = max((x+y+k-1)//k,2)\n\nif (x+y)%2 != (n*k)%2:\n    n += 1\n\nif x < k and n==3:\n    mid = (k+x-y)//2\n    ans.append([x,x-k])\n    ans.append([x+mid,y-k+mid])\n    ans.append([x,y])\n\nelse:\n    over = (n*k-x-y)//2\n    for i in range(1,n+1):\n        d = i*k\n        if d <= y+over:\n            ans.append([0,d])\n        elif d <= y+over+x:\n            ans.append([d-over-y,y+over])\n        else:\n            ans.append([x,y+(n-i)*k])\n\nif cxy:\n    ans = [[i,j] for j,i in ans]\nif cx:\n    ans = [[-i,j] for i,j in ans]\nif cy:\n    ans = [[i,-j] for i,j in ans]\n\n\nprint(n)\nfor i,j in ans:\n    print((i,j))\n", "def e_golf(K, X, Y):\n    # \u53c2\u8003: https://babcs2035.hateblo.jp/entry/2019/07/29/AtCoder_Beginner_Contest_135\uff1aE_-_Golf\n    # \u53c2\u8003: https://atcoder.jp/contests/abc135/submissions/6607612\n\n    # x >= y >= 0 \u3068\u306a\u308b\u3088\u3046\u306b\u3069\u306e\u3088\u3046\u306a\u5ea7\u6a19\u5909\u63db\u3092\u884c\u3063\u305f\u304b\n    is_xpos_negative = is_ypos_negative = is_swap = False\n    x, y = X, Y\n    if x < 0:\n        x *= -1\n        is_xpos_negative = True\n    if y < 0:\n        y *= -1\n        is_ypos_negative = True\n    if x < y:\n        x, y = y, x\n        is_swap = True\n\n    if (x + y) % 2 == 1 and K % 2 == 0:\n        return -1  # \u30b4\u30fc\u30eb\u3067\u304d\u306a\u3044\n\n    ans = []\n    shot_min = max((x + y + K - 1) // K, 2)\n    if (x + y) % 2 != (shot_min * K) % 2:\n        shot_min += 1\n    if x + y == K:\n        ans.append((x, y))\n    elif shot_min == 3 and x < K:\n        mid = (K + x - y) // 2\n        ans.extend(((x, x - K), (x + mid, y - K + mid), (x, y)))\n    else:\n        over = (shot_min * K - x - y) // 2\n        for i in range(1, shot_min + 1):\n            d = i * K\n            if d <= y + over:\n                ans.append((0, d))\n            elif d <= y + over + x:\n                ans.append((d - y - over, y + over))\n            else:\n                ans.append((x, y + (shot_min - i) * K))\n\n    # \u5ea7\u6a19\u5909\u63db\u3092\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u5143\u306b\u623b\u3059\n    if is_swap:\n        ans = [(second, first) for first, second in ans]\n    if is_xpos_negative:\n        ans = [(-first, second) for first, second in ans]\n    if is_ypos_negative:\n        ans = [(first, -second) for first, second in ans]\n    return '\\n'.join([str(len(ans))] + ['{} {}'.format(f, s) for f, s in ans])\n\nK = int(input())\nX, Y = [int(i) for i in input().split()]\nprint(e_golf(K, X, Y))", "K=int(input())\nX,Y=map(int,input().split())\n\nsgn_X,sgn_Y=1,1\nif X<0:\n  X=-X\n  sgn_X=-1\nif Y<0:\n  Y=-Y\n  sgn_Y=-1\n\nif K%2==0 and (X+Y)%2==1:\n  print(-1)\nelse:\n  xx,yy=0,0\n  vec_list=[]\n  while((X-xx)+(Y-yy)>2*K):\n    if X-xx>K:\n      xx+=K\n      vec_list.append((K,0))\n    elif Y-yy>K:\n      yy+=K\n      vec_list.append((0,K))\n  #print(xx,yy,vec_list)\n  diff_x=X-xx\n  diff_y=Y-yy\n  \n  if K%2==0:\n    if diff_x+diff_y==K:\n      vec_list.append((diff_x,diff_y))\n    else:\n      buf=2*K-(diff_x+diff_y)\n      if diff_x+buf//2<=K:\n        vec_list.append((diff_x+buf//2,K-(diff_x+buf//2)))\n        vec_list.append((-buf//2,K-buf//2))\n      elif diff_y+buf//2<=K:\n        vec_list.append((K-(diff_y+buf//2),diff_y+buf//2))\n        vec_list.append((K-buf//2,-buf//2))\n      else:\n        raise(\"Error\")    \n          \n  else:\n    if diff_x+diff_y==K:\n      vec_list.append((diff_x,diff_y))\n    else:\n      if (diff_x+diff_y)%2==1:\n        if diff_x<=K:\n          xx+=diff_x\n          if K-diff_x<diff_y:\n            yy+=K-diff_x\n            vec_list.append((diff_x,K-diff_x))\n          else:\n            yy-=K-diff_x\n            vec_list.append((diff_x,-K+diff_x))\n        elif diff_y<=K:\n          yy+=diff_y\n          if K-diff_y<diff_x:\n            xx+=K-diff_y\n            vec_list.append((K-diff_y,diff_y))\n          else:\n            xx-=K-diff_y\n            vec_list.append((-K+diff_y,diff_y))\n\n      diff_x=X-xx\n      diff_y=Y-yy\n      buf=2*K-(diff_x+diff_y)  \n      if diff_x+buf//2<=K:\n        vec_list.append((diff_x+buf//2,K-(diff_x+buf//2)))\n        vec_list.append((-buf//2,K-buf//2))\n      elif diff_y+buf//2<=K:\n        vec_list.append((K-(diff_y+buf//2),diff_y+buf//2))\n        vec_list.append((K-buf//2,-buf//2))\n      else:\n        raise(\"Error\")    \n\n  #print(vec_list)\n  print(len(vec_list))\n  pos_x,pos_y=0,0\n  for x,y in vec_list:\n    pos_x+=sgn_X*x\n    pos_y+=sgn_Y*y\n      \n    print(pos_x,pos_y)", "i=input;k = int(i());x, y = list(map(int, i().split()));x,y=x-y,x+y\ndef cc(x, xs):\n    if abs(x-xs)<=2*k and abs(x-xs)%2==0:\n        return 1,x+(k if abs(x+k-xs) <= abs(x-k-xs) else -k)\n    return 0,xs+(k if x-xs>0 else -k)\nif (k%2,x%2)==(0,1):\n    print((-1))\nelse:\n    rs = []\n    xs, ys = 0, 0\n    while True:\n        if abs(x-xs) == k or abs(y-ys) == k:\n            if abs(x-xs) <= k and abs(y-ys) <= k:\n                rs+=[\"{} {}\".format((x+y)//2,(y-x)//2)]\n                break\n        mm,ys=cc(y,ys)\n        if mm:\n            xs = xs+(k if x > xs else -k)\n        else:\n            mm, xs = cc(x, xs)\n        rs+=[\"{} {}\".format((xs+ys)//2,(ys-xs)//2)]\n    print((len(rs)))\n    print((\"\\n\".join(rs)))\n", "K = int(input())\nX,Y = map(int,input().split())\n\nans = [(X,Y)]\nx,y = ans[-1]\nwhile abs(x)>=3*K//2:\n    x,y = ans[-1]\n    if x>=K:\n        x -= K\n    elif x<=-K:\n        x += K\n    ans.append((x,y))\ndx = abs(x)\n\nwhile abs(y)>2*K-dx:\n    x,y = ans[-1]\n    if y>0:\n        y -= K\n    else:\n        y += K\n    ans.append((x,y))\n\nx,y = ans[-1]\nif abs(y)+abs(x)!=K:\n    if (x+y)%2==0 and K%2==0:\n        d2 = (abs(x)+abs(y))//2\n        if abs(x)>abs(y):\n            x -= d2 * (1 if x>0 else -1)\n            y += (K-d2) * (1 if y>0 else -1)\n        else:\n            x += (K-d2) * (1 if x>0 else -1)\n            y -= d2 * (1 if y>0 else -1)\n        ans.append((x,y))\n    else:\n        if (x+y+K)%2 == 0:\n            y -= K if y>0 else (-K)\n            ans.append((x,y))\n        d = abs(x)+abs(y)\n        if abs(x)>abs(y):\n            x -= d//2 * (1 if x>0 else -1)\n            y += (K-d//2) * (1 if y>0 else -1)\n        else:\n            x += (K-d//2) * (1 if x>0 else -1)\n            y -= d//2 * (1 if y>0 else -1)\n        ans.append((x,y))\nx,y = ans[-1]\n\nif abs(x)+abs(y)!=K:\n    print(-1)\nelse:\n    ans = ans[::-1]\n    print(len(ans))\n    for out in ans:\n        print(*out)", "k = int(input())\nx, y = map(int, input().split())\n\ndef sign(x):\n    return 1 if x > 0 else -1\n\nif (abs(x) + abs(y)) % 2 == 1 and k % 2 == 0:\n    print(-1)\nelse:\n    cx, cy = 0, 0\n    ret = []\n    while x != cx or y != cy:\n        if abs(x - cx) + abs(y - cy) == k:\n            cx, cy = x, y\n        elif abs(x - cx) + abs(y - cy) <= 2 * k:\n            dx = abs(x - cx)\n            dy = abs(y - cy)\n            rem = 2 * k - dx - dy\n            if dx > dy:\n                cy += (dy + rem // 2) * sign(y - cy)\n                cx += (k - dy - rem // 2) * sign(x - cx)\n            else:\n                cx += (dx + rem // 2) * sign(x - cx)\n                cy += (k - dx - rem // 2) * sign(y - cy)\n        else:\n            if abs(x - cx) > abs(y - cy):\n                cx += sign(x - cx) * k\n            else:\n                cy += sign(y - cy) * k\n        ret.append((cx, cy))\n\n    print(len(ret))\n    for cx, cy in ret:\n        print(cx, cy)", "'''\n\u5206\u304b\u308a\u3084\u3059\u3044\u56f3\u89e3\u30da\u30fc\u30b8\nhttps://blog.bobuhiro11.net/2019/08-03-abc135ef.html\nhttps://betrue12.hateblo.jp/entry/2019/07/28/215024\n'''\nimport math\n\ndef swap(X,Y):\n  temp=X\n  X=Y\n  Y=temp\n  return X,Y\n\ndef keiro(count,X,Y,K):\n  keirolist=[]\n  oneway_surplus=int(((count*K)-X-Y)/2)\n  move=0\n  turncount=0\n  prevX=0\n  prevY=0\n  while(move<count):\n    if turncount==0:\n      if K-prevY>=oneway_surplus:\n        prevX=K-oneway_surplus\n        prevY-=oneway_surplus\n        turncount+=1\n      else:\n        prevX=0\n        prevY-=K\n    elif turncount==1:\n      if K+prevX>X:\n        prevY+=(K-(X-prevX))\n        prevX=X\n        turncount+=1\n      else:\n        prevX+=K\n    else:\n      prevY+=K\n    keirolist.append([prevX,prevY])\n    #print(keirolist)\n    move+=1\n  return keirolist\n\ndef ans(K,X,Y):\n  anslist=[]\n  count=0\n  Xminus=0\n  Yminus=0\n  swapflag=0\n  if X<0:\n    Xminus=1\n    X=abs(X)\n  if Y<0:\n    Yminus=1\n    Y=abs(Y)\n  if (X+Y)==K:\n    count=1\n    anslist.append([X,Y])\n  else:\n    if X<Y:\n      X,Y=swap(X,Y)\n      swapflag=1\n    if X+Y>K:\n      count=math.ceil((X+Y)/K)\n      lastflag=0\n      if (count*K-X-Y)%2==1:\n        count+=1\n        lastflag=1\n      anslist=keiro(count,X,Y,K)\n      \n    else:\n      if (X+Y)%2==0:\n        count=2\n        anslist=keiro(count,X,Y,K)\n      else:\n        count=3\n        anslist.append([X,-K+X])\n        Xsurplus=int((X+K-Y)/2)\n        anslist.append([X+Xsurplus,X-Xsurplus])\n        anslist.append([X,Y])\n  for ans in anslist:\n    if swapflag==1:\n      ans[0],ans[1]=swap(ans[0],ans[1])\n    if Xminus==1:\n      ans[0]=-ans[0]\n    if Yminus==1:\n      ans[1]=-ans[1]\n  return count,anslist\n\n\n\nK=int(input())\nX,Y=map(int,input().split())\n\nif K%2==0 and (X+Y)%2==1:\n  print(-1)\n  return\n\ncount,anslist=ans(K,X,Y)\nprint(count)\nfor ans in anslist:\n  print(ans[0],ans[1])", "#!/usr/bin/env python3\nimport random\n\ndef copysign(x, y):\n    return abs(x) * (1 if y >= 0 else - 1)\n\ndef dist(k, x, y):\n    if not (abs(x) + abs(y) < 2 * k):\n        return None\n    if x == y == 0:\n        return 0\n    elif abs(x) + abs(y) == k:\n        return 1\n    elif (abs(x) + abs(y)) % 2 == 0:\n        return 2\n    else:\n        return 3\n\ndef iterate_neighbors(k, x, y):\n    assert abs(x) + abs(y) < 2 * k\n    dz = (2 * k - abs(x) - abs(y)) // 2\n    for dx in (dz, k - dz):\n        dy = k - dx\n        yield (dx, dy)\n        yield (dx, - dy)\n        yield (- dx, dy)\n        yield (- dx, - dy)\n\ndef solve(k, x, y):\n    while True:\n        d = dist(k, x, y)\n        if d == 0:\n            return\n        elif d == 1:\n            dx = x\n            dy = y\n        elif d == 2:\n            for dx, dy in iterate_neighbors(k, x, y):\n                if dist(k, x - dx, y - dy) == 1:\n                    break\n            else:\n                assert False\n        elif d == 3:\n            while True:\n                dx = random.randint(0, k) * random.choice([-1, 1])\n                dy = (k - abs(dx)) * random.choice([-1, 1])\n                if dist(k, x - dx, y - dy) == 2:\n                    break\n        else:\n            dx = copysign(min(k, abs(x)), x)\n            dy = copysign(k - abs(dx), y)\n        yield (dx, dy)\n        x -= dx\n        y -= dy\n\ndef main():\n    k = int(input())\n    x, y = list(map(int, input().split()))\n    if k % 2 == 0 and (abs(x) + abs(y)) % 2 != 0:\n        print((-1))\n        return\n    ops = list(solve(k, x, y))\n    print((len(ops)))\n    x = 0\n    y = 0\n    for dx, dy in ops:\n        x += dx\n        y += dy\n        print((x, y))\n\nmain()\n", "k=int(input())\nx,y=map(int,input().split())\nif x<0:fx=-1\nelse:fx=1\nif y<0:fy=-1\nelse:fy=1\nax,ay=abs(x),abs(y)\nif ax<ay:\n  x,y=y,x\n  ax,ay=ay,ax\n  fx,fy=fy,fx\n  flag=1\nelse:flag=0\nr=ax+ay\nif k%2==0 and r%2==1:print(-1);return\nif r==k:\n  print(1)\n  if flag:x,y=y,x\n  print(x,y)\n  return\nif r%2==1 and r<k:\n  print(3)\n  anss=[]\n  anss.append(((ax+(k-ay))//2,(k-(ax+(k-ay))//2)))\n  anss.append((ax+(k-ay),0))\n  anss.append((ax,ay))\n  for i,j in anss:\n    ii,jj=i*fx,j*fy\n    if flag:ii,jj=jj,ii\n    print(ii,jj)\n  return\nif r%2==0 and r<k:\n  rm=(2*k-ax-ay)//2\nelse:\n  rn=(k-(r%k))%k\n  if rn%2==1:rn+=k\n  rm=rn//2\nans=(r+rm*2)//k\nanss=[]*ans\nprint(ans)\nfirst=[0,-rm]\nsecond=[ax,-rm]\nthird=[ax,ay]\nxx=yy=0\nwhile yy>first[1]:\n  if yy-k<=first[1]:\n    xx+=k-(yy-first[1])\n    yy=first[1]\n  else:\n    yy-=k\n  anss.append((xx*fx,yy*fy))\nwhile xx<second[0]:\n  if xx+k>=second[0]:\n    yy+=k-(second[0]-xx)\n    xx=second[0]\n  else:\n    xx+=k\n  anss.append((xx*fx,yy*fy))\nwhile yy!=third[1]:\n  yy+=k\n  anss.append((xx*fx,yy*fy))\nfor i,j in anss:\n  ii,jj=i,j\n  if flag:ii,jj=jj,ii\n  print(ii,jj)", "k = int(input())\nX,Y = map(int,input().split())\nx = max(abs(X),abs(Y))\ny = min(abs(X),abs(Y))\nc = (k-(x+y)%k)%k\nif k%2 == 0 and (x+y)%2 == 1:\n  print(-1)\n  return\n  \nimport math\nans = []\nm = math.ceil((x+y)/k)\nif (x+y)/k == int((x+y)/k):\n  for i in range(m):\n    ans.append((min(x,k*i+k),max(0,k*i+k-x)))\n    \nelif m == 1:\n  if (x+y)%2 == 1:\n    ans.append((x,x-k))\n    ans.append((x+(k+x-y)//2,(-k+x+y)//2))\n    ans.append((x,y))\n  else:\n    ans.append(((x+y)//2,-k+(x+y)//2))\n    ans.append((x,y))\n               \nelif c%2 == 0 and x+y >= k:\n  a = abs((k*m-x-y)//2)\n  for i in range(m-1):\n    l = k*i+k\n    if a >= l:\n      ans.append((0,-l))\n    elif a < l <= x+a:\n      ans.append((l-a,-a))\n    elif x+a < l:\n      ans.append((x,l-x-2*a))\n  ans.append((x,y))\n  \nelse:\n  m += 1\n  a = abs((k*m-x-y)//2)\n  for i in range(m-1):\n    l = k*i+k\n    if a >= l:\n      ans.append((0,-1))\n    elif a < l <= x+a:\n      ans.append((l-a,-a))\n    elif x+a < l:\n      ans.append((x,l-x-2*a))\n  ans.append((x,y))\n  \nprint(len(ans))\nfor i,j in ans:\n  if abs(X) < abs(Y):\n    i,j = j,i\n  if X < 0:\n    i *= -1\n  if Y < 0:\n    j *= -1\n  print(i,j)", "def solve(k, x, y):\n    if k % 2 == 0 and (x + y) % 2 == 1:\n        print((-1))\n        return\n\n    ans = []\n    abx, aby = abs(x), abs(y)\n    mh = abx + aby\n    xx, yy = 0, 0\n\n    if mh % k == 0:\n        d = (mh - 1) // k + 1\n        for _ in range(d - 1):\n            dx, dy = abs(abx - xx), abs(aby - yy)\n            if dx > 0:\n                if dx >= k:\n                    xx += k\n                else:\n                    xx += dx\n                    yy += k - dx\n            else:\n                yy += k\n            ans.append((xx, yy))\n        ans.append((abx, aby))\n        print_ans(ans, x, y)\n        return\n\n    d = (mh - 1) // k + 1\n\n    if k % 2 == 1 and mh % 2 != max(2, d) % 2:\n        if abx > aby:\n            xx += min(k, abx)\n            yy += k - min(k, abx)\n        else:\n            yy += min(k, aby)\n            xx += k - min(k, aby)\n        ans.append((xx, yy))\n\n    for _ in range(d - 2):\n        dx, dy = abs(abx - xx), abs(aby - yy)\n        if dx > dy:\n            if abx > xx:\n                xx += k\n            else:\n                xx -= k\n        else:\n            if aby > yy:\n                yy += k\n            else:\n                yy -= k\n        ans.append((xx, yy))\n\n    dx, dy = abs(abx - xx), abs(aby - yy)\n    mhh = (dx + dy) // 2\n    if dx > dy:\n        if abx > xx:\n            xx += mhh\n        else:\n            xx -= mhh\n        if aby > yy:\n            yy -= k - mhh\n        else:\n            yy += k - mhh\n    else:\n        if aby > yy:\n            yy += mhh\n        else:\n            yy -= mhh\n        if abx > xx:\n            xx -= k - mhh\n        else:\n            xx += k - mhh\n    ans.append((xx, yy))\n    ans.append((abx, aby))\n\n    print_ans(ans, x, y)\n\n\ndef print_ans(ans, x, y):\n    print((len(ans)))\n    for dx, dy in ans:\n        if x < 0:\n            dx = -dx\n        if y < 0:\n            dy = -dy\n        print((dx, dy))\n\n\nk = int(input())\nx, y = list(map(int, input().split()))\nsolve(k, x, y)\n", "K=int(input())\nX,Y=map(int,input().split())\n\nsgn_X,sgn_Y=1,1\nif X<0:\n  X=-X\n  sgn_X=-1\nif Y<0:\n  Y=-Y\n  sgn_Y=-1\n\nif K%2==0 and (X+Y)%2==1:\n  print(-1)\nelse:\n  xx,yy=0,0\n  vec_list=[]\n  while((X-xx)+(Y-yy)>2*K):\n    if X-xx>K:\n      xx+=K\n      vec_list.append((K,0))\n    elif Y-yy>K:\n      yy+=K\n      vec_list.append((0,K))\n  #print(xx,yy,vec_list)\n  diff_x=X-xx\n  diff_y=Y-yy\n  \n  if diff_x+diff_y==K:\n    vec_list.append((diff_x,diff_y))\n  else:\n    if (diff_x+diff_y)%2==1:\n      if diff_x<=K:\n        xx+=diff_x\n        if K-diff_x<diff_y:\n          yy+=K-diff_x\n          vec_list.append((diff_x,K-diff_x))\n        else:\n          yy-=K-diff_x\n          vec_list.append((diff_x,-K+diff_x))\n      elif diff_y<=K:\n        yy+=diff_y\n        if K-diff_y<diff_x:\n          xx+=K-diff_y\n          vec_list.append((K-diff_y,diff_y))\n        else:\n          xx-=K-diff_y\n          vec_list.append((-K+diff_y,diff_y))\n      diff_x=X-xx          \n      diff_y=Y-yy\n      \n    buf=2*K-(diff_x+diff_y)  \n    if diff_x+buf//2<=K:\n      vec_list.append((diff_x+buf//2,K-(diff_x+buf//2)))\n      vec_list.append((-buf//2,K-buf//2))\n    elif diff_y+buf//2<=K:\n      vec_list.append((K-(diff_y+buf//2),diff_y+buf//2))\n      vec_list.append((K-buf//2,-buf//2))\n    else:\n      raise(\"Error\")    \n\n  #print(vec_list)\n  print(len(vec_list))\n  pos_x,pos_y=0,0\n  for x,y in vec_list:\n    pos_x+=sgn_X*x\n    pos_y+=sgn_Y*y      \n    print(pos_x,pos_y)", "k = int(input())\nx, y = [int(x) for x in input().strip().split(\" \")]\nx, y = x-y, x+y\n\ndef main():\n    if k % 2 == 0:\n        if x % 2 != 0:\n            return -1\n    return to(x,y)\n\ndef cc(x, xs):\n        if abs(x-xs) <= 2*k:\n            if abs(x+k-xs) % 2 == k % 2:\n                if abs(x+k-xs) <= abs(x-k-xs):\n                    xs = x+k\n                else:\n                    xs = x-k\n                return (True,xs)\n            else:\n                if x > xs:\n                    xs += k\n                else:\n                    xs -= k\n        else:\n            if x > xs:\n                xs += k\n            else:\n                xs -= k\n        return (False,xs)\n\n\ndef to(x, y):\n    rs = []\n    xs, ys = 0, 0\n    while True:\n        if abs(x-xs) == k or abs(y-ys) == k:\n            if abs(x-xs) <= k and abs(y-ys) <= k:\n                return rs + [(x, y)]\n        mm, ys = cc(y, ys)\n        if mm:\n            if x > xs:\n                xs += k\n            else:\n                xs -= k\n        else:\n            mm, xs = cc(x, xs)\n        rs.append((xs, ys))\n\ndef __starting_point():\n    jj = main()\n    if jj == -1:\n        print((-1))\n    else:\n        print((len(jj)))\n        for r in jj:\n            print(((r[0]+r[1])//2, (r[1]-r[0])//2))\n\n\n\n__starting_point()", "K = int(input())\nX, Y = list(map(int,input().split()))\n\nif K%2 == 0 and (X+Y)%2:\n    print((-1))\n    return\n\ndef next(x,y):\n    if x < 0:\n        dx, dy = next(-x, y)\n        return -dx, dy\n    if y < 0:\n        dx, dy = next(x, -y)\n        return dx, -dy\n    if x < y:\n        dx, dy = next(y, x)\n        return dy, dx\n    if x + y == K:\n        return x, y\n    if x + y <= K * 2 and (x + y) % 2 == 0:\n        return (x + y)//2, (x + y)//2 - K\n    return K, 0\n\nx, y = 0,0\nans = list()\nwhile x != X or y != Y:\n    dx, dy = next(X - x, Y - y)\n    x += dx; y += dy\n    ans.append((x, y))\n\nprint((len(ans)))\nfor x, y in ans:\n  print((x, y))\n", "k=int(input())\nx,y=map(int,input().split())\n\nif k%2==0 and (x+y)%2!=0:\n    print(-1)\n    return\n\ndef f(x,y):\n    if x<0:\n        a,b=f(-x,y)\n        return -a,b\n    if y<0:\n        a,b=f(x,-y)\n        return a,-b\n    if x<y:\n        a,b=f(y,x)\n        return b,a\n    if x+y==k:\n        return x,y\n    if x+y<=k*2 and (x+y)%2==0:\n        return (x+y)//2,(x+y)//2-k\n    return k,0\n\np,q=0,0\nans=[]\nwhile (p,q)!=(x,y):\n    a,b=f(x-p,y-q)\n    p+=a\n    q+=b\n    ans.append(str(p)+\" \"+str(q))\n\nprint(len(ans))\nprint('\\n'.join(ans))", "def solve(x, y):\n    if x < 0:\n        x, y = solve(-x, y)\n        return -x, y\n    if y < 0:\n        x, y = solve(x, -y)\n        return x, -y\n    if x > y:\n        x, y = solve(y, x)\n        return y, x\n\n    if x + y >= 2 * K:\n        return x, y - K\n    if x + y == K:\n        return 0, 0\n\n    r = K - (x + y) // 2\n    return -r, (x + y + r - K)\n\n\n\nK, X, Y = map(int, open(0).read().split())\n\nif K % 2 == 0 and (X + Y) % 2 == 1:\n    print(-1)\n    return\n\nA = []\nwhile X or Y:\n    A.append((X, Y))\n    X, Y = solve(X, Y)\n\nprint(len(A))\nfor a in reversed(A):\n    print(*a)", "K = int(input())\nX, Y = map(int, input().split())\n\ndef golf(a, b):\n  if a < 0:\n    t = golf(-a, b)\n    return (-t[0], t[1])\n  if b < 0:\n    t = golf(a, -b)\n    return (t[0], -t[1])\n  if a > b:\n    t = golf(b, a)\n    return (t[1], t[0])\n  \n  if a + b >= K * 2:\n    return (a, b - K)\n  if a + b == K:\n    return (0, 0)\n  r = K - (a + b) // 2\n  return (-r, a + b + r - K)\n\nif K % 2 == 0 and (X + Y) % 2 == 1:\n  print(-1)\nelse:\n  res = []\n  while X or Y:\n    res.append((X, Y))\n    X, Y = golf(X, Y)\n  print(len(res))\n  for r in res[: : -1]:\n    print(r[0], r[1])", "import sys\nK = int(input())\nX, Y = map(int, input().split())\nif (X + Y) % 2 and K % 2 == 0:\n    print(-1)\n    return\n\ndef solve(K, X, Y):\n    if (X + Y) % 2 and K % 2 == 0:\n        return None\n    def gen(a, b, c, d):\n        ans = []\n        x = y = 0\n        assert c-a == Y and b-d == X\n        while a >= K:\n            y -= K; a -= K\n            ans.append((0, y))\n        if a:\n            x += K - a; y -= a\n            b -= K - a\n            ans.append((x, y))\n        while b >= K:\n            x += K; b -= K\n            ans.append((x, y))\n        if b:\n            x += b; y += K - b\n            c -= K - b\n            ans.append((x, y))\n        while c >= K:\n            y += K; c -= K\n            ans.append((x, y))\n        if c:\n            x -= K - c; y += c\n            d -= K - c\n            ans.append((x, y))\n        while d >= K:\n            x -= K; d -= K\n            ans.append((x, y))\n        assert X == x and Y == y, (x, y, ans)\n        assert d == 0\n        return ans\n\n    ans = []\n    if X + Y < K:\n        if (X + Y) % 2 == 1:\n            n = 3\n            ans = gen(K-X, X + (K + X - Y)//2, K - X + Y, (K + X - Y)//2)\n        else:\n            n = 2\n            ans = gen((K*n-X-Y)//2, X, (K*n-X+Y)//2, 0)\n    else:\n        c = (K - (X + Y)) % K\n        if c % 2 == 1:\n            n = (X + Y + K-1) // K + 1\n        else:\n            n = (X + Y + K-1) // K\n        ans = gen((K*n-X-Y)//2, X, (K*n-X+Y)//2, 0)\n    assert len(ans) == n\n    return ans\nrx = X < 0\nif rx:\n    X = -X\nry = Y < 0\nif ry:\n    Y = -Y\nr = X < Y\nif r:\n    X, Y = Y, X\nans = solve(K, X, Y)\nif ans:\n    print(len(ans))\n    for x, y in ans:\n        if r:\n            x, y = y, x\n        if rx:\n            x = -x\n        if ry:\n            y = -y\n        print(x, y)\nelse:\n    print(-1)", "#!/usr/bin/env python3\nimport sys\n\ndef get(K: int, X: int, Y: int):\n    p = None\n    if X >= K:\n        X -= K\n        p = [K, 0]\n    elif Y >= K:\n        Y -= K\n        p = [0, K]\n    else:\n        if X + Y >= K:\n            p = [X, K - X]\n            Y -= K - X\n            X = 0\n        else:\n            p = [-K, 0]\n            X += K\n    return p, X, Y\n\ndef jump_two(K: int, X: int, Y: int):\n    assert(X + Y < 2 * K)\n    if X + Y == 0:\n        return []\n    elif X + Y == K:\n        return [(X, Y)]\n    ret = []\n    rev = False\n    if X > Y:\n        X, Y = Y, X\n        rev = True\n    a = K - (Y - X)//2\n    b = K - (Y + X)//2\n    assert(0 <= a and a <= K)\n    assert(0 <= b and b <= K)\n    ret.append([a, K - a])\n    ret.append([-b, K - b])\n    if rev:\n        for i in range(len(ret)):\n            ret[i][0], ret[i][1] = ret[i][1], ret[i][0]\n    return ret\n\ndef calc(K: int, X: int, Y: int):\n    ret = []\n    if X + Y < K:\n        if (X + Y) % 2 != 0:\n            # 3\n            p, X, Y = get(K, X, Y)\n            ret.append(p)\n        ret += jump_two(K, X, Y)\n        return ret\n    while X + Y >= K * 2:\n        p, X, Y = get(K, X, Y)\n        ret.append(p)\n    if X + Y == K:\n        # 1\n        ret.append([X, Y])\n    else:\n        # K * 2 > X + Y > K\n        if (X + Y) % 2 != 0:\n            p, X, Y = get(K, X, Y)\n            ret.append(p)\n\n        ret += jump_two(K, X, Y)\n    return ret\n\n\ndef solve(K: int, X: int, Y: int):\n    if K % 2 == 0 and (X + Y) % 2 != 0:\n        print((-1))\n        return\n    negate_X = False\n    negate_Y = False\n    if X < 0:\n        X *= -1\n        negate_X = True\n    if Y < 0:\n        Y *= -1\n        negate_Y = True\n    v = calc(K, X, Y)\n    for i in range(len(v)):\n        if negate_X:\n            v[i][0] *= -1\n        if negate_Y:\n            v[i][1] *= -1\n    x = 0\n    y = 0\n    print((len(v)))\n    for dx, dy in v:\n        x += dx\n        y += dy\n        print((x, y))\n    return\n\n\n# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    K = int(next(tokens))  # type: int\n    X = int(next(tokens))  # type: int\n    Y = int(next(tokens))  # type: int\n    solve(K, X, Y)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def solve(v, u, k):\n    sign_v = sign_u = 1\n    swap = 1\n    if abs(v) < abs(u):\n        v, u = u, v\n        swap = -1\n    if v < 0:\n        v = -v\n        sign_v = -1\n    if u < 0:\n        u = -u\n        sign_u = -1\n    if v % k == 0:\n        n = v // k\n        res = []\n        cum_u = 0\n        for i in range(n):\n            du = min(k, max(-k, u-cum_u))\n            if (k+du)%2:\n                du += 1 if du < 0 else -1\n            cum_u += du\n            res.append([k*sign_v, du*sign_u][::swap])\n        assert cum_u == u, (cum_u, u)\n        return res\n    elif v < k and v%2==0:\n        res = [[k, u-k], [v-k, k]]\n        res = [[dv * sign_v, du * sign_u][::swap] for dv, du in res]\n        return res\n    else:\n        m = v % k\n        if (k+m)%2:\n            m -= 1\n        res = [[m, k]] + solve(v-m, u-k, k)\n        res = [[dv*sign_v, du*sign_u][::swap] for dv, du in res]\n        return res\n\ndef test():\n    inf = -1\n    M = [[inf]*1000 for _ in range(1000)]\n    K = 9\n    q = [(0, 0)]\n    R = 100\n    ans = 1\n    M[0][0] = 0\n    while q:\n        q_new = []\n        for x, y in q:\n            for i in range(-K, K+1, 2):\n                ux = x+i\n                uy = y+i\n                if -R <= ux <= R:\n                    if y + K <= R:\n                        if M[ux][y+K] == inf:\n                            M[ux][y+K] = ans\n                            q_new.append((ux, y+K))\n                    if y - K >= -R:\n                        if M[ux][y-K] == inf:\n                            M[ux][y-K] = ans\n                            q_new.append((ux, y-K))\n                if -R <= uy <= R:\n                    if x + K <= R:\n                        if M[x+K][uy] == inf:\n                            M[x+K][uy] = ans\n                            q_new.append((x+K, uy))\n                    if x - K >= -R:\n                        if M[x-K][uy] == inf:\n                            M[x-K][uy] = ans\n                            q_new.append((x-K, uy))\n        q = q_new\n        ans += 1\n    for x in range(-R, R+1):\n        for y in range(-R, R+1):\n            if M[x][y] != -1:\n                if len(solve(x, y, K)) != M[x][y]:\n                    print(f\"!! x={x} y={y} len(solve(x, y, K))={len(solve(x, y, K))} M[x][y]={M[x][y]}\")\n    print(\"test finished\")\n\n#test()\n\ndef main():\n    K = int(input())\n    X, Y = list(map(int, input().split()))\n    if K % 2 == 0 and (X + Y) % 2:\n        print((-1))\n        return\n    V, U = X + Y, X - Y\n    Ans = solve(V, U, K)\n    print((len(Ans)))\n    cum_x = cum_y = 0\n    for v, u in Ans:\n        x, y = (v+u)//2, (v-u)//2\n        assert abs(x)+abs(y) == K\n        cum_x += x\n        cum_y += y\n        print(f\"{cum_x} {cum_y}\")\n    assert cum_x == X and cum_y == Y\n\nmain()\n", "k = int(input())\ngx,gy = list(map(int,input().split()))\nif k%2 == 0 and (gx+gy)%2:\n  print((-1))\n  return\nflgx = 1\nflgy = 1\nif gx < 0:\n  flgx -= 2\n  gx *= -1\nif gy < 0:\n  flgy -= 2\n  gy *= -1\npx = 0\npy = 0\nansls = []\nwhile True:\n  if (gx-px+gy-py) <= 2*k:\n    break\n  if gx-px >= k:\n    px += k\n  elif gy-py >= k:\n    py += k\n  ansls.append((px,py))\nif gx-px+gy-py <= 2*k:\n  if gx-px+gy-py == 2*k:\n    if px+k <= gx:\n      px += k\n    else:\n      py += k\n    ansls.append((px,py))\n  if gx-px+gy-py == k:\n    ansls.append((gx,gy))\n  else:\n    if (gx-px+gy-py)%2:\n      if px+k <= gx:\n        px += k\n      elif py+k <= gy:\n        py += k\n      elif px+py+k <= gx+gy:\n        py += k-(gx-px)\n        px = gx\n      else:\n        py -= gx-px\n        px -= k-(gx-px)\n      ansls.append((px,py))\n    if gx-px <= gy-py:\n      ansls.append((px+(gx-px+gy-py)//2-k,py+(gx-px+gy-py)//2))\n    else:\n      ansls.append((px+(gx-px+gy-py)//2,py+(gx-px+gy-py)//2-k))\n    ansls.append((gx,gy))\nfor i in range(len(ansls)-1):\n  if abs(ansls[i+1][0]-ansls[i][0])+abs(ansls[i+1][1]-ansls[i][1]) != k:\n    print(\"error\")\nprint((len(ansls)))\nfor x,y in ansls:\n  print((x*flgx,y*flgy))\n  \n", "k = int(input())\nX,Y = map(int,input().split())\nx = max(abs(X),abs(Y))\ny = min(abs(X),abs(Y))\nc = (k-(x+y)%k)%k\nif k%2 == 0 and (x+y)%2 == 1:\n  print(-1)\n  return\n  \na = []\nm = ((x+y-1)//k+1)\nif x+y < k:\n  if (x+y)%2 == 1:\n    a.append((x,x-k))\n    a.append((x+(k+x-y)//2,(-k+x+y)//2))\n  else:\n    a.append(((x+y)//2,-k+(x+y)//2))\n  \nif c%2 == 1 and x+y >= k:\n  m += 1\nA = abs((k*m-x-y)//2)\nfor i in range(m-1):\n  l = k*i+k\n  if A >= l:\n    a.append((0,-1))\n  elif A < l <= x+A:\n    a.append((l-A,-A))\n  elif x+A < l:\n    a.append((x,l-x-2*A))\n    \na.append((x,y))\nprint(len(a))\nfor i,j in a:\n  if abs(X) < abs(Y):\n    i,j = j,i\n  if X < 0:\n    i *= -1\n  if Y < 0:\n    j *= -1\n  print(i,j)", "K = int(input())\nx, y = map(int, input().split())\n\nnowx, nowy = 0, 0\nans = []\n\ndef ok():\n    nonlocal ans, x, y\n    ans.append((x, y))\n    print(len(ans))\n    for (x, y) in ans:\n        print(x,y)\n    return\n        \n\n\nwhile(abs(nowx - x) + abs(nowy - y) >= 2*K):\n    if x - nowx >= K:\n        nowx += K\n    elif nowx - x >= K:\n        nowx -= K\n    elif y - nowy >= K:\n        nowy += K\n    else:\n        nowy -= K\n    ans.append((nowx, nowy))\n\nif (abs(nowx - x) + abs(nowy - y)) % 2 == 1 and K % 2 == 0:\n    print(-1)\n    return\n\n    \nif (abs(nowx - x) + abs(nowy - y)) == K:ok()\n    \nif (abs(nowx - x) + abs(nowy - y)) % 2 == 1:\n    if abs(nowx+K - x) + abs(nowy - y) < 2*K:nowx += K\n    elif abs(nowx-K - x) + abs(nowy - y) < 2*K:nowx -= K\n    elif abs(nowx - x) + abs(nowy+K - y) < 2*K:nowy += K\n    elif abs(nowx - x) + abs(nowy-K - y) < 2*K:nowy -= K\n    ans.append((nowx, nowy))\n    \nif (abs(nowx - x) + abs(nowy - y)) == K:ok()\n\nrest = K*2 - (abs(nowx-x) + abs(nowy-y))\nrest //= 2\nxgo, ygo = 1, 1\n\nif nowx != x:\n    xgo = (x - nowx) // abs(nowx - x)\nif nowy != y:\n    ygo = (y - nowy) // abs(nowy - y)\n\nif abs(nowx-x) >= abs(nowy-y):\n    nowx += xgo * (K - rest)\n    nowy -= ygo * rest\n    ans.append((nowx, nowy))\n    \nelse:\n    nowy += ygo * (K - rest)\n    nowx -= xgo * rest\n    ans.append((nowx, nowy))\n\nok()", "import math\n\nk = int(input())\nx, y = list(map(int, input().split()))\n\nif k % 2 == 0 and (x + y) % 2 == 1:\n    print((-1))\n    return\n\na = 1\nb = 1\nd = 0\nif x < 0:\n    x *= -1\n    a = -1\nif y < 0:\n    y *= -1\n    b = -1\nif x < y:\n    d = 1\n    x, y = y, x\n\ndef show_xy(tx, ty):\n    if d == 1:\n        print((ty * a, tx * b))\n    else:\n        print((tx * a, ty * b))\n\nif x + y < k and (x + y) % 2 == 1:\n    print((3))\n    temp_x = x\n    temp_y = x - k\n    show_xy(temp_x, temp_y)\n    temp_x = x + (k+x-y)//2\n    temp_y += k - (k+x-y)//2\n    show_xy(temp_x, temp_y)\n    temp_x = x\n    temp_y = y\n    show_xy(temp_x, temp_y)\n    return\n\nc = (k - ((x + y) % k)) % k\nif x + y < k:\n    n = 2\nelse:\n    n = math.ceil((x + y) / k) + (c % 2)\n\nprint(n)\n\nans = 0\ntemp_x = 0\ntemp_y = 0\n\ntemp = - (k * n - x - y) // 2\nwhile 1:\n    temp_y -= k\n    if temp_y >=  temp:\n        show_xy(temp_x, temp_y)\n    else:\n        temp_x = temp - temp_y\n        temp_y = temp\n        #print(temp_x * a, temp_y * b)\n        break\n\nwhile temp_x <= x:\n    show_xy(temp_x, temp_y)\n    temp_x += k\n\ntemp_y += temp_x - x\ntemp_x = x\n\nwhile temp_y <= y:\n    show_xy(temp_x, temp_y)\n    temp_y += k\n", "K = int(input())\nX, Y = [int(_) for _ in input().split()]\nx, signx = abs(X), -1 if X < 0 else 1\ny, signy = abs(Y), -1 if Y < 0 else 1\nans = [(x, y)]\nif x + y != K:\n    while (x + y) > 2 * K:\n        dx = min(K, x)\n        dy = K - dx\n        x -= dx\n        y -= dy\n        ans += [(x, y)]\n\n    def calczw(x, y):\n        #z+w=abs(z-x)+abs(w-y)=K\n        if x > y:\n            #z+w=x-z+w-y=K and z<=x and w>=y\n            z = (x - y) // 2\n            w = K - z\n        else:\n            #z+w=z-x+y-w=K and z>=x and w<=y\n            w = (y - x) // 2\n            z = K - w\n        return (z, w)\n\n    z, w = calczw(x, y)\n    if abs(z - x) + abs(w - y) != K:\n        dx = min(K, x)\n        dy = K - dx\n        x -= dx\n        if y > dy:\n            y -= dy\n        else:\n            y += dy\n        ans += [(x, y)]\n        z, w = calczw(x, y)\n    if abs(z - x) + abs(w - y) != K:\n        print((-1))\n        return\n    ans += [(z, w)]\nprint((len(ans)))\nfor x, y in ans[::-1]:\n    print((x * signx, y * signy))\n", "def editarr(x,y,arr):\n  l=len(arr)\n  if abs(x)>=abs(y):\n    for i in range(l):\n      arr[i][0],arr[i][1]=arr[i][1],arr[i][0]\n  if x<0:\n    for i in range(l):\n      arr[i][0]*=-1\n  if y<0:\n    for i in range(l):\n      arr[i][1]*=-1\n\nk=int(input())\nx,y=map(int,input().split())\nans=[]\ntx=abs(x)\nty=abs(y)\nif tx>=ty:\n  tx,ty=ty,tx\nif k%2==0 and (tx+ty)%2!=0:\n  print(-1)\nelse:\n  if tx+ty<k:\n    if (tx+ty)%2==0:\n      m=(ty-tx)//2\n      ans.append([k-m,m])\n    else:\n      td=k-(tx+ty)\n      ans.append([tx,ty+td])\n      ans.append([tx+(k-td//2),ty+td//2])\n    ans.append([tx,ty])\n  elif ty-(k-tx%k)<k and (ty-(k-tx%k))%2!=0:\n    if (2*k-(tx+ty))%2==0:\n      td=2*k-(tx+ty)\n      ans.append([tx+td//2,k-(tx+td//2)])\n      ans.append([tx,ty])\n    else:\n      ans.append([tx,k-tx])\n      td=ty-(k-tx)\n      ans.append([tx+(k-td//2),ans[-1][1]+td//2])\n      ans.append([tx,ty])\n  else:\n    ans.append([0,0])\n    for i in range(tx//k):\n      ans.append([ans[-1][0]+k,0])\n    if ans[-1][0]!=tx:\n      ans.append([tx,k-abs(tx-ans[-1][0])])\n    td=ty-ans[-1][1]\n    if td%k==0:\n      flag=True\n    else:\n      flag=False\n    for i in range(td//k):\n      if flag==False and (ty-ans[-1][1])%2==0 and (ty-ans[-1][1])<=2*k:\n          break\n      ans.append([tx,ans[-1][1]+k])\n    if ans[-1][1]!=ty:\n      td=ty-ans[-1][1]\n      ans.append([tx+(k-td//2),ans[-1][1]+td//2])\n      ans.append([tx,ty])\n    ans.pop(0)\n  editarr(x,y,ans)\n  print(len(ans))\n  for a,b in ans:\n    print(a,b)", "# https://atcoder.jp/contests/abc135/submissions/7969271\n# \u5199\u7d4c\n\ndef main():\n    K = int(input())\n    X, Y = map(int, input().split())\n\n    if K % 2 == 0 and (X + Y) % 2 != 0:\n        print(-1)\n        return\n\n    def next_vec(x, y):\n        # \u539f\u70b9\u304b\u3089x,y\u3092\u76ee\u6307\u3059\u3068\u304d\n        if x < 0:\n            dx, dy = next_vec(-x, y)\n            return -dx, dy\n        if y < 0:\n            dx, dy = next_vec(x, -y)\n            return dx, -dy\n        if x < y:\n            dx, dy = next_vec(y, x)\n            return dy, dx\n        # 1\u624b\n        if x + y == K:\n            return x, y\n        # 2\u624b...(1)\n        if x + y <= K + K and (x + y) % 2 == 0:\n            return (x + y) // 2, (x + y) // 2 - K\n        # 3\u624b\u4ee5\u4e0a\n        return K, 0\n\n    x, y = 0, 0\n    ans = []\n    while (x, y) != (X, Y):\n        dx, dy = next_vec(X - x, Y - y)\n        x += dx\n        y += dy\n        ans.append('{} {}'.format(x, y))\n\n    print(len(ans))\n    print(*ans, sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n\"\"\"\n\u5199\u7d4c\u3057\u3066\u8a08\u7b97\u306e\u610f\u5473\u3092\u8003\u3048\u305f\n\n(1)\nx+y=D<2K\n2\u624b\u8981\u3059\u308b\nS(A,B)->M(?,?)->G(X,Y)\nS->M: \u8ddd\u96e2K\u672a\u6e80=D-K\u8a70\u3081\nM->G: \u8ddd\u96e2K\u8a70\u3081\n\nS,G\u304b\u3089\u7b49\u8ddd\u96e2L\u306e\u70b9M'\nM'\u304b\u3089G\u304b\u3089\u96e2\u308c\u308b\u65b9\u5411\u306b\u8ddd\u96e2F\u306e\u70b9M\nSM'=M'G: \u8ddd\u96e2L\nMM': \u8ddd\u96e2F\n\nS->M'->M->M'->G\n(S->M'->M)->M'->G: \u521d\u624b\nS->M': G\u306b\u8ddd\u96e2L\u8fd1\u3065\u304f\nM'->M: G\u304b\u3089\u8ddd\u96e2F\u96e2\u308c\u308b\ndD_1=L-F=D-K...1\n\nS->M'->(M->M'->G): \u6b21\u624b\nM->M': G\u306b\u8ddd\u96e2F\u8fd1\u3065\u304f\nM'->G: G\u306b\u8ddd\u96e2L\u8fd1\u3065\u304f\ndD_2=L+F=K...2\n\n1,2\u306e\u9023\u7acb\u3067\nL=D/2<K\nF=K-D/2...(1)\u3068\u7b26\u5408\u9006\u3060\u304c\u3053\u308c\u306f\u5927\u304d\u3055\n\nS\u304b\u3089G\u306b\u5411\u304b\u3063\u3066\nL=D/2\u8fd1\u3065\u304d\nF\u96e2\u308c\u308b\u3053\u3068\u306f\u53ef\u80fd\u304b\uff1f\nD=x+y\nx>=y\u3068\u3059\u308b\u3068\n2D=2(x+y)<=2(2x)\nD<=2x\nD/2<=x\nx,y\u65b9\u5411\u306e\u96e2\u308c\u3066\u3044\u308b\u8ddd\u96e2\u306e\u3046\u3061\u3088\u308a\u96e2\u308c\u3066\u3044\u308b\u65b9\u5411x\u3067\u306f\n\u8ddd\u96e2D/2\u4ee5\u4e0a\u96e2\u308c\u3066\u3044\u308b\u306e\u3067\u3001\n\u3053\u306e\u65b9\u5411\u3067S\u304b\u3089G\u306b\u5411\u304b\u3063\u3066L=D/2\u8fd1\u3065\u304f\u3053\u3068(=M\u306b\u5230\u9054)\u306f\u3067\u304d\u308b\n\u305d\u306e\u5f8c\u3001y\u65b9\u5411\u3067M\u304b\u3089G\u306b\u5411\u304b\u3046\u306e\u3068\u9006\u65b9\u5411\u306b\nF=K-D/2\u9032\u3081\u3070\n\u6b21\u306bG\u306b\u5411\u304b\u3063\u3066\u6700\u77ed\u7d4c\u8def\u3092\u9032\u3080\u3068\n\u8ddd\u96e2K\u3067G\u306b\u5230\u9054\u3067\u304d\u308b\u3088\u3046\u306aM'\u306b\u5230\u9054\u3067\u304d\u308b\n\"\"\"\n\n__starting_point()", "#\u30b3\u30e1\u30f3\u30c8\u3067\u89e3\u8aac\u3092\u66f8\u3044\u3066\u307f\u308b\n\n#itertools\u3068\u306fpython\u3067\u7d44\u307f\u5408\u308f\u305b\u5168\u63a2\u7d22\u3059\u308b\u306e\u306b\u4f7f\u3048\u308b\nimport itertools\n\n#\u6a19\u6e96\u5165\u529b\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\nK=int(input())\nX,Y=list(map(int,input().split()))\n\n#Mdist\u3068\u306f(0,0)\u304b\u3089(X,Y)\u3078\u306e\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\nMdist=abs(X)+abs(Y)\n#\u3053\u3053\u3067\u7b54\u3048\u304c-1\u306b\u306a\u308b\u6761\u4ef6\u3092\u8003\u3048\u3066\u307f\u308b\u3002\n#K:\u5076\u6570\u306a\u3089\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u5076\u6570\u306e\u70b9\u306b\u3057\u304b\u884c\u3051\u306a\u3044\n#\u3088\u3063\u3066K\u304c\u5076\u6570\u3067Mdist\u304c\u5947\u6570\u306a\u3089\u305d\u306e\u70b9\u306b\u884c\u304f\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u7b54\u3048\u306f-1\u3068\u306a\u308b\u3002\nif Mdist%2==1 and K%2==0:\n    print((-1))\n    return\n\n#\u9006\u306bK\u304c\u5076\u6570\u306a\u3089\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u5076\u6570\u306e\u4efb\u610f\u306e\u70b9\u306b\u884c\u3051\u308b\n#\u5b9f\u969b\u306b,(0,0)->(K,0)->(1,1)\u3068\u3059\u308c\u3070\u70b9(1,1)\u306b\u884c\u3051\u308b\u306e\u3067\u3053\u306e\u64cd\u4f5c\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u826f\u3044\n\n#\u307e\u305f\u3001K:\u5947\u6570\u306a\u3089\u7406\u8ad6\u4e0a\u3069\u3053\u3067\u3082\u884c\u3051\u308b\n#\u5b9f\u969b\u306b\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308b\u3053\u3068\u3067(1,0)\u306b\u884c\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3053\u306e\u64cd\u4f5c\u3092\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u826f\u3044\n#(0,0)->(2n+1,0)->(n+1,n+1)->(1,0)\n\n#\u3088\u3063\u3066\u3053\u308c\u4ee5\u5916\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u5168\u90e8\u53ef\u80fd\n\n#\u4ee5\u964d\u306f\u64cd\u4f5c\u3092\u5177\u4f53\u7684\u306b\u69cb\u6210\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\n#\u8fd1\u304f\u306b\u306a\u308b\u307e\u3067\u8caa\u6b32\u306b\u9032\u3093\u3067\u3044\u3063\u3066\u3001\u8fd1\u304f\u306a\u3063\u305f\u3089\u4ed8\u8fd1\u306e\u90fd\u5408\u306e\u826f\u3044\u70b9\u3092\u63a2\u3059\u3053\u3068\u3092\u8003\u3048\u308b\n\n#\u3088\u3063\u3066Mdist<=2K\u306e\u72b6\u614b\u3067\u307e\u305a\u8003\u3048\u308b.\n#\u64cd\u4f5c\u30922\u56de\u7e70\u308a\u8fd4\u305b\u3070Mdist<=2K\u304b\u3064Mdist:\u5076\u6570\u306e\u4efb\u610f\u306e\u70b9\u306b\u884c\u3051\u308b\n#Mdist<=2K\u3067Mdist:\u5947\u6570\u306e\u70b9\u306b\u3064\u3044\u3066\u306f\u4e00\u56de\u64cd\u4f5c\u3092\u3057\u3066\u304b\u3089\u4e0a\u8a18\u306e2\u56de\u306e\u64cd\u4f5c\u3092\u9069\u7528\u3059\u308c\u3070\u3088\u3044\n\n#\u3088\u3063\u3066Mdist<=2K\u306a\u30893\u56de\u4ee5\u5185\u3067\u884c\u3051\u308b\u306f\u305a\n#Mdist:\u5076\u6570\u306a\u30892\u56de\u3001Mdist:\u5947\u6570\u306a\u30893\u56de\u3068\u306a\u308b\u304c\u3001\n#\u4e00\u56de\u3067\u884c\u3051\u308b\u72b6\u6cc1\u3092\u59cb\u3081\u306b\u51e6\u7406\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u30b3\u30fc\u30ca\u30fc\u30b1\u30fc\u30b9\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n#\u30b3\u30fc\u30ca\u30fc\u30b1\u30fc\u30b9\u306e\u4f8b:\n#5\n#1 4\n\n#\u3053\u306e\u30b1\u30fc\u30b9\u306b\u3064\u3044\u3066\u306f\n#1\n#1 4\n#\u3068\u51fa\u529b\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u304c,\n#3\n#5 0\n#1 -1\n#1 4\n#\u3068\u6700\u9069\u3067\u306a\u3044\u65b9\u6cd5\u3092\u51fa\u529b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b.\n\nif abs(X)+abs(Y)==K:\n    print((1))\n    print((X,Y))\n    return\n    \n#searcheven\u3068\u306f\u3001Mdist<=2K\u306e\u70b9\u306b\u884c\u304f\u305f\u3081\u306b\u3069\u306e\u70b9\u3092\u4e2d\u7d99\u3059\u308b\u3079\u304d\u304b\u3092\u51fa\u529b\u3059\u308b\n#\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u304c\u4e00\u5b9a\u306e\u70b9\u306e\u96c6\u5408\u306f\u6b63\u65b9\u5f62\u3068\u306a\u308b\u3053\u3068\u304b\u3089,\n#\u5404\u8fba\u306e\u7d44\u307f\u5408\u308f\u305b(4*4\u901a\u308a)\u306b\u3064\u3044\u3066\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u3051\u3070\u826f\u3044\n#\u3053\u3053\u3067\u30012\u8fba\u304c\u5e73\u884c\u306b\u306a\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u306e\u3067,\u884c\u5217\u5f0f\u304c0\u306b\u306a\u308b\u304b\u306a\u3089\u306a\u3044\u304b\u3067\u5834\u5408\u5206\u3051\u3057\u3066\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\ndef searcheven(x,y):\n    if abs(x)+abs(y)>2*K:\n        return None\n    if (abs(x)+abs(y))%2==1:\n        return None\n    #p1X+p2Y=K\u3068p3X+p4Y=K\u306e\u4ea4\u70b9\u3092\u305d\u308c\u305e\u308c\u6c42\u3081\u308b\u3002(pk in {-1,1})\n    for ps in itertools.product([-1,1],repeat=4):\n        p1,p2,p3,p4=ps\n        if p1*p4==p2*p3:\n            #\u4e26\u884c\u306e\u3068\u304d\u306f\u76f4\u7dda\u304c\u91cd\u306a\u308b\u3068\u304d\n            #\u4e21\u7aef\u306e\u3069\u3061\u3089\u304b\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306e\u3067\u305d\u308c\u3092\u8fd4\u3059\n            if p3*(K-p1*x-p2*y)==-p1*K:\n                a,b=0,p4*K\n                if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                    return (a,b)\n                a,b=p3*K,0\n                if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                    return (a,b)\n            else:\n                pass\n        else:\n            #\u5e73\u884c\u3067\u306a\u3044\u3068\u304d\u306f\u5358\u7d14\u306b\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u3044\u3066\u3044\u308b\n            tmp1=K-p1*x-p2*y\n            tmp2=K\n            tmp3=p4*tmp1+p2*tmp2\n            tmp4=-p3*tmp1-p1*tmp2\n            det=-p1*p4+p2*p3\n            a,b=(tmp3//det,tmp4//det)\n            #\u4ea4\u70b9\u304c\u8fba\u306e\u4e0a\u306b\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\n            if abs(x-a)+abs(y-b)==K and abs(a)+abs(b)==K:\n                return (a,b)\n            else:\n                pass\n    return None\n\n#\u9806\u3005\u306b\u70b9\u3092\u79fb\u52d5\u3057\u3066\u3044\u304f\nans=[(0,0)]\nwhile(True):\n    #nx,ny\u304b\u3089\u3069\u3053\u306b\u79fb\u52d5\u3059\u308b\u3079\u304d\u304b\u3092\u6c7a\u3081\u308b\n    nx,ny=ans[-1]\n    if abs(nx-X)+abs(ny-Y)<=2*K:\n        #\u3082\u3057\u8fd1\u3044\u3068\u3053\u308d\u306b\u70b9\u304c\u3042\u308b\u306a\u3089\u3070\u5148\u7a0b\u306esearcheven\u3067\u3069\u3053\u306e\u70b9\u3092\u7d4c\u7531\u3059\u308b\u3079\u304d\u304b\u3092\u6c7a\u3081\u308b\n        if (abs(nx-X)+abs(ny-Y))%2==0:\n            p,q=searcheven(X-nx,Y-ny)\n            ans.append((p+nx,q+ny))\n            ans.append((X,Y))\n            break\n        #\u8ddd\u96e2\u304c\u5947\u6570\u306a\u3089\u4e00\u56de\u5225\u306e\u8fd1\u508d\u306e\u70b9\u3092\u7d4c\u7531\u3059\u308b\n        else:\n            tmpx=K//2\n            tmpy=K-tmpx\n            nextkouho=[(tmpx,tmpy),(tmpx,-tmpy),(-tmpx,tmpy),(-tmpx,-tmpy),(K,0),(-K,0),(0,K),(0,-K)]\n            for point in nextkouho:\n                ptmp,qtmp=point\n                p=ptmp+nx;q=qtmp+ny\n                if abs(X-p)+abs(Y-q)<=2*K:\n                    ans.append((p,q))\n                    break\n    #\u9060\u3044\u5834\u6240\u306b\u306a\u308b\u306a\u3089\u8ddd\u96e2\u304c\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u8caa\u6b32\u306b\u79fb\u52d5\u3059\u308b\n    #\u5ea7\u6a19\u304c\u30de\u30a4\u30ca\u30b9\u306e\u3068\u304d\u306b\u9006\u306b\u79fb\u52d5\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\n    elif abs(nx)+K<=abs(X):\n        if X<0:\n            ans.append((nx-K,ny))\n            continue\n        else:\n            ans.append((nx+K,ny))\n            continue\n    elif abs(ny)+K<=abs(Y):\n        if Y<0:\n            ans.append((nx,ny-K))\n            continue\n        else:\n            ans.append((nx,ny+K))\n            continue\n\n\n#print(ans)\n#\u3053\u308c\u306f\u63d0\u51fa\u524d\u306e\u30c7\u30d0\u30c3\u30b0\u7528\n#NG\u3068\u51fa\u529b\u3055\u308c\u308b\u72b6\u6cc1\u306a\u3089\u3075\u3064\u3046\u306bWA\u306b\u306a\u308b\ns=len(ans)-1\nflag=1\nfor i in range(s):\n    ax,ay=ans[i]\n    bx,by=ans[i+1]\n    if abs(ax-bx)+abs(ay-by)==K:\n        pass\n    else:\n        flag=0\n        break\nif flag==0:\n    print(\"NG\")\n\n#\u89e3\u306e\u51fa\u529b\n#ans\u306b\u306f(0,0)\u30c7\u30fc\u30bf\u3082\u3042\u308b\u306e\u3067,\u305d\u308c\u3092\u51fa\u529b\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\nprint(s)\nfor i in range(1,s+1):\n    print((ans[i][0],ans[i][1]))\n"]