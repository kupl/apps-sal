["n = int( input() )\nfor _ in range( n ):\n    s = input()\n    i = 0\n    a = set()\n    while i < len( s ):\n        if i == len( s ) - 1 or s[ i ] != s[ i + 1 ]:\n            a.add( s[ i ] )\n            i += 1\n        else:\n            i += 2\n    l = [ c for c in a ]\n    l.sort()\n    print( \"\".join( l ) )\n", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    s += '$'\n    i = 0\n    ans = set()\n    while i < n:\n        c = s[i]\n        if c != s[i + 1]:\n            ans.add(c)\n            i += 1\n        else:\n            i += 2\n    print(''.join(sorted(ans)))\n", "for _ in range(int(input())):\n    s = input()\n    ans = set()\n    cnt = 1\n    c = s[0]\n    for c1 in s[1:]:\n        if c1 != c:\n            if cnt % 2 == 1:\n                ans.add(c)\n            cnt = 1\n            c = c1\n        else:\n            cnt+=1\n    if cnt % 2 == 1:\n        ans.add(c)\n    print(''.join(sorted(ans)))", "for _ in range(int(input())):\n    s = input()\n    n = len(s)\n    i = 0\n    valid = set()\n    while i < n:\n        j = i + 1\n        while j < n and s[j] == s[i]: j += 1\n        if (j - i) & 1: valid.add(s[i])\n        i = j\n    print(''.join(sorted(valid)))", "for i in range(int(input())):\n    s = input()\n    working = []\n    j = 0\n    while j < len(s):\n        nextJ = j+1\n        while nextJ < len(s) and s[nextJ] == s[j]:\n            nextJ += 1\n        if (nextJ - j) % 2 == 1:\n            if s[j] not in working:\n                working.append(s[j])\n        j = nextJ\n    working.sort()\n    print(\"\".join(working))\n", "l=[]\nfor i in range(int(input())):\n    x = input().upper()\n    ly=\"\"\n    for i in range(65,91):\n        ch = chr(i)\n        if x.replace(ch+ch,\"\").find(ch) != -1:\n            ly += ch.lower()\n    l.append(ly)\n\nprint(\"\\n\".join(l))", "t = int(input())\n\ndef run_length_compress(string):\n    \"\"\"\u6587\u5b57\u5217\u3092\u30e9\u30f3\u30ec\u30f3\u30b0\u30b9\u5727\u7e2e\u3059\u308b\n    \u4f8b) string = \"aabccaaabb\" -> [(2, a), (1, b), (2, c), (3, a), (2, b)]\n    \"\"\"\n    string = string + \"@\" # string\u4e2d\u306b\u7d76\u5bfe\u306b\u73fe\u308c\u306a\u3044\u6587\u5b57\u3092\u756a\u5175\u3068\u3059\u308b\n    n = len(string)\n\n    begin = 0\n    end = 1\n    cnt = 1\n    ans = []\n    while True:\n        if end >= n:\n            break\n        if string[begin] == string[end]:\n            end += 1\n            cnt += 1\n        else:\n            ans.append((cnt, string[begin]))\n            begin = end\n            end = begin + 1\n            cnt = 1\n\n    return ans\n\n  \nfor _ in range(t):\n    s = input()\n    r = run_length_compress(s)\n    memo = {}\n    for i, char in r:\n        if i %2 == 1:\n            memo[char] = 1\n    ans = []\n    for i in memo:\n        ans.append(i)\n    ans = sorted(ans)\n    print(\"\".join(ans))", "for _ in range(int(input())):\n\ts = input()\n\tt = ''\n\tlc=s[0]\n\tcnt=1\n\tfor i in range(1,len(s)):\n\t\tif s[i]==lc:\n\t\t\tcnt+=1\n\t\telse:\n\t\t\tt+=lc*(cnt%2)\n\t\t\tlc=s[i]\n\t\t\tcnt=1\n\tt+=lc*(cnt%2)\n\tprint(''.join(sorted(list(set(t)))))", "TC = int(input())\nfor tc in range(TC):\n\tgrps = []\n\tfor c in input():\n\t\tif (not grps) or grps[-1][0] != c:\n\t\t\tgrps.append([c, 1])\n\t\telse:\n\t\t\tgrps[-1][1] += 1\n\tworks = [False]*26\n\tfor c, p in grps:\n\t\tif p % 2 == 1: works[ord(c)-ord('a')] = True\n\tres = ''.join(chr(x+ord('a')) for x in range(26) if works[x])\n\tprint(res)\n\t\n", "from itertools import groupby\nt = int(input())\nfor _ in range(t):\n    correct = set()\n    for k, it in groupby(input()):\n        if len(tuple(it)) % 2:\n            correct.add(k)\n    print(*sorted(correct), sep='')", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\n\nfor test in range(t):\n\n    S=input().strip()+\"0\"\n\n    NOW=S[0]\n    count=1\n    ANS=[]\n\n    for i in range(1,len(S)):\n        if S[i]==S[i-1]:\n            count+=1\n        else:\n            if count%2==1:\n                ANS.append(S[i-1])\n\n            count=1\n\n    ANS=sorted(set(ANS))\n\n    print(\"\".join(ANS))\n            \n", "import string\n\nnum_inputs = int(input())\n\nfor _ in range(num_inputs):\n    this_input = input()\n\n    working_letters = []\n    for s in string.ascii_lowercase:\n        this_input = this_input.replace(s * 2, s.upper())\n        if s in this_input:\n            working_letters.append(s)\n    print(\"\".join(sorted(working_letters)))\n", "t = int(input())\n\nfor _ in range(t):\n    s = input() + '-'\n    ok = {c: False for c in 'qwertyuiopasdfghjklzxcvbnm'}\n    cur = 0\n    p = ''\n    for c in s:\n        if c == p:\n            cur += 1\n        else:\n            if cur % 2:\n                ok[p] = True\n            cur = 1\n            p = c\n    for c, f in sorted(ok.items()):\n        if f:\n            print(c, end='')\n    print()", "T = int(input())\n\nfor _ in range(T):\n    X = [0] * 26\n    s = input()\n    while s:\n        if len(s) == 1:\n            X[ord(s[0])-97] = 1\n            break\n        if s[0] == s[1]:\n            s = s[2:]\n        else:\n            X[ord(s[0])-97] = 1\n            s = s[1:]\n    \n    print(\"\".join([chr(97+i) for i in range(26) if X[i]]))\n\n", "t=int(input())\nfor _ in range(t):\n    s=input()\n    n=len(s)\n    ans=\"\"\n    l=\"\"\n    ind=0\n    while ind<n:\n        if ind<n-1:\n            if s[ind]==s[ind+1]:\n                ind+=2\n                continue\n            else:\n                ans+=s[ind]\n                ind+=1\n        if ind==n-1:\n            ans+=s[ind]\n            ind+=1\n            \n    ans=list(set(list(ans)))\n    ans.sort()\n    print(''.join(ans))\n", "n = int(input())\nfor i in range(n):\n\tst = input()\n\tst += '#'\n\tk = len(st)\n\tlastch = '.'\n\tlastl = 0\n\table = [False for i in range(256)]\n\tfor j in range(k):\n\t\tif st[j] != lastch:\n\t\t\tif lastl % 2 == 1:\n\t\t\t\table[ord(lastch)] = True\n\t\t\tlastl = 1\n\t\t\tlastch = st[j]\n\t\telse:\n\t\t\tlastl += 1\n\tfor j in range(ord('a'),ord('z')+1):\n\t\tif able[j]:\n\t\t\tprint(chr(j),end='')\n\tprint()", "q = int(input())\nfor i in range(q):\n    string = input()\n    arr = []\n    current = ''\n    for index in range(len(string)):\n        if not current:\n            current += string[index]\n            continue\n        if string[index] == current[-1]:\n            current += string[index]\n        else:\n            arr.append(current)\n            current = string[index]\n    if current:\n        arr.append(current)\n    answer = set()\n    for j in arr:\n        if len(j) % 2:\n            answer.add(j[0])\n    print(''.join(sorted(answer)))\n", "n = int(input())\n\nwhile(n):\n    \n    S = input()\n    S += \"_\"\n    lastChar = \"\"\n    cur = 0\n    x = set()\n    for s in S:\n        if s != lastChar:\n            if cur % 2:\n                x.add(lastChar)\n            lastChar = s\n            cur = 1\n        else:\n            cur += 1\n    \n    x = list(x)\n    x.sort()\n    for c in x:\n        print(c, end='')\n    print()\n    \n    n -= 1", "import sys\nimport math\nfrom collections import defaultdict\nfrom itertools import combinations\nfrom itertools import permutations\ninput = lambda : sys.stdin.readline().rstrip()\nread = lambda : map(int, input().split())\ndef write(*args, sep=\"\\n\"):\n  for i in args:\n    sys.stdout.write(\"{}\".format(i) + sep)\nINF = float('inf')\nMOD = int(1e9 + 7)\n\nfor _ in range(int(input())):\n  s = input()\n  ans = \"\"\n  for i in sorted(set(s)):\n    if (not (i+i) in s) or (s.count(i+i)*2 - s.count(i) < 0):\n      ans += i \n\n  print(ans) ", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int,minp().split())\n\ndef solve():\n\ts = [ord(i) - ord('a') for i in minp()]\n\tc = [False]*26\n\ti = 0\n\twhile i < len(s):\n\t\tj = i + 1\n\t\twhile j < len(s) and s[j] == s[i]:\n\t\t\tj += 1\n\t\tif (j - i) % 2 == 1:\n\t\t\tc[s[i]] = True\n\t\ti = j\n\tfor i in range(26):\n\t\tif c[i]:\n\t\t\tprint(chr(i+ord('a')), end='')\n\tprint()\n\nfor i in range(mint()):\n\tsolve()", "\n\nfor _ in range(int(input())):\n\ts=input()\n\n\ta=[3]*26\n\n\n\ti=0\n\n\twhile(i<len(s)):\n\t\tj=i\n\n\t\tt=0\n\n\t\twhile(j<len(s) and s[j]==s[i]):\n\t\t\tj+=1\n\t\t\tt+=1\n\n\t\tif(t&1):\n\t\t\ta[ord(s[i])-ord('a')]=min(0,a[ord(s[i])-ord('a')])\n\t\telse:\n\t\t\ta[ord(s[i])-ord('a')]=min(1,a[ord(s[i])-ord('a')])\n\n\t\ti=j\n\n\ts=\"\"\n\n\tfor i in range(26):\n\t\tif(a[i]==0):\n\t\t\ts+=chr(97+i)\n\n\tprint(s)", "import sys\nimport itertools\nimport math\nimport collections\nfrom collections import Counter\ninput = sys.stdin.readline\n\n#########################\n# imgur.com/Pkt7iIf.png #\n#########################\n\ndef sieve(n):\n    prime = [True for i in range(n + 1)]\n    p = 2\n    while (p * p <= n):\n        if (prime[p] == True):\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 1\n    prime[0] = prime[1] = False\n    r = [p for p in range(n + 1) if prime[p]]\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef ceil(n, k): return n // k + (n % k != 0)\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef prr(a, sep=' '): print(sep.join(map(str, a)))\ndef dd(): return collections.defaultdict(int)\n\nt = ii()\nfor _ in range(t):\n    s = input()\n    d = Counter(s)\n    res = set()\n    i = 0\n    while i < len(s) - 1:\n        j = i + 1\n        while j < len(s) - 1 and s[j] == s[j - 1]:\n            j += 1\n        if (j - i) % 2:\n            res.add(s[i])\n        i = j\n    prr(sorted(list(res)), '')\n", "t=[int(k) for k in input().split(\" \")][0]\n\nfor k in range(t):\n    s=input()\n    ss=set()\n    k=0\n    n=len(s)\n    while k<n:\n        kk=k\n        while kk<n and s[kk]==s[k]:\n            kk+=1\n        if (kk-k)%2:\n            ss.add(s[k])\n        k=kk\n    print(\"\".join(sorted(list(ss))))\n", "n = int(input())\nfor i in range(n):\n    st = input()\n    ans = []\n    c = 1\n    for j in range(1, len(st)):\n        if st[j] == st[j - 1]:\n            c += 1\n        else:\n            if c % 2 == 1:\n                if not st[j - 1] in ans:\n                    ans.append(st[j - 1])\n            c = 1\n    if c % 2 == 1:\n        if not st[len(st) - 1] in ans:\n            ans.append(st[len(st) - 1])\n    ans.sort()\n    for f in ans:\n        print(f, end='')\n    print()\n"]