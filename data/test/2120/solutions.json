["\"\"\"\nCodeforces Round 250 Div 2 Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\nclass IOHandlerObject(object):\n    def getInput(self, mode=2):\n        # 0: String\n        # 1: List of strings\n        # 2: List of integers\n        inputs = input().strip()\n        if mode == 0:\n            return inputs\n        if mode == 1:\n            return inputs.split()\n        if mode == 2:\n            return [int(x) for x in inputs.split()]\n\n    def writeOutput(self, s=\"\\n\"):\n        if isinstance(s, list): s = \" \".join(s)\n        print(s)\n\nIOHandler = IOHandlerObject()\ng = IOHandler.getInput\nw = IOHandler.writeOutput\n\n############################## SOLUTION ##############################\nn,m = g()\nv = g()\nsm = 0\nfor i in range(m):\n    x,y = g()\n    sm += min(v[x-1], v[y-1])\nprint(sm)", "#! /usr/bin/env python\n\nn, m = [int(x) for x in input().split()]\nv = [int(x) for x in input().split()]\nsv = [(x + 1, v[x]) for x in range(n)]\nv = [0] + v\nedges = {i:set() for i in range(1, n+1)}\nfor i in range(m):\n    f, t = [int(x) for x in input().split()]\n    edges[f].add(t)\n    edges[t].add(f)\n\nans = 0\nsv.sort(key=lambda x: -x[1])\nremoved = [False] * (n + 1)\nfor i, vi in sv:\n    removed[i] = True\n    for f in edges[i]:\n        if not removed[f]:\n            ans += v[f]\n\nprint(ans)\n", "n, m = map(int, input().split())\nv1 = list(map(int, input().split()))\nv = [[w, i] for i, w in enumerate(v1)]\nv.sort(reverse = True)\nd = [set() for i in range(n)]\nfor i in range(m):\n    a, b = map(int, input().split())\n    a -= 1\n    b -= 1\n    d[a].add(b)\n    d[b].add(a)\nans = 0\nfor w, i in v:\n    for j in d[i]:\n        ans += v1[j]\n        d[j].discard(i)\n        \nprint(ans)", "n, m = map(int, input().split())\nf = [int(x) for x in input().split()]\nans = 0\nfor i in range(m):\n  a, b = map(int, input().split())\n  ans += min(f[a - 1], f[b - 1])\nprint(ans)", "def main():\n    from heapq import heapify, heappop\n    \n    n, m = [int(i) for i in input().split()]\n    energy = [[int(v), i] for i, v in enumerate(input().split())]\n    s_energy = sorted(energy)\n    graph = [set() for i in range(n)]\n    for i in range(m):\n        x, y = [int(i) for i in input().split()]\n        graph[x - 1].add(y - 1)\n        graph[y - 1].add(x - 1)\n    \n    result = 0\n    for i in range(n):\n        e, x = s_energy.pop()\n        for j in graph[x]:\n            graph[j].remove(x)\n            result += energy[j][0]\n            \n    print(result)\n            \n\nmain()\n", "n, m = [int(i) for i in input().split()]\nenergy = [int(i) for i in input().split()]\nresult = 0\nfor i in range(m):\n    x, y = [int(i) for i in input().split()]\n    result += min(energy[x - 1], energy[y - 1])\n        \nprint(result)\n", "(n, m), f, s = list(map(int, input().split())), [int(x) for x in input().split()], 0\n\nfor i in range(m):\n    (a, b) = list(map(int, input().split()))\n    s = s + min(f[a - 1], f[b - 1])\n\nprint( s )", "n, m = list(map(int, input().split()))\nv = list(map(int, input().split()))\ngraph = [set() for _ in range(n)]\nstrengths = list()\nans = 0\n\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    graph[x-1].add(y - 1)\n    graph[y-1].add(x - 1)\n\nfor i in range(n):\n    strengths.append([v[i], i])\n\nstrengths = list(reversed(sorted(strengths)))\n\nwhile len(strengths) > 0:\n    (vi, i) = strengths.pop(0)\n    ans += sum(v[j] for j in graph[i])\n    for s in strengths:\n        if i in graph[s[1]]:\n            graph[s[1]].remove(i)\n\nprint(ans)\n", "n, m = [int(c) for c in input().split()]\nv = [0] + [int(c) for c in input().split()]\nchains = [[] for _ in range(n + 1)]\n\nfor i in range(m):\n    a, b = [int(c) for c in input().split()]\n    chains[a].append(b)\n    chains[b].append(a)\n\nres = 0\n\nfor i in range(n):\n    m = 0\n    ind = 0\n    for j in range(len(v)):\n        if v[j] > m:\n            m = v[j]\n            ind = j\n\n    res += sum([v[_] for _ in chains[ind]])\n\n    v[ind] = 0\n\nprint(res)", "n, m = list(map(int, input().split()))\ncs = [0] + list(map(int, input().split()))\nmls = [0 for i in range(n+1)]\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    if cs[y] < cs[x]:\n        x, y = y, x\n    mls[x] += 1\nprint(sum([cs[i]*mls[i] for i in range(n+1)]))\n", "R = lambda:map(int, input().split())\nn, m = R()\nv = list(R())\ng = [set() for i in range(n + 1)]\nfor i in range(m):\n  x, y = R()\n  g[x].add(y)\n  g[y].add(x)\ns = 0\nfor w, i in sorted(zip(v, range(1, n + 1)), reverse=True):\n  for j in g[i]:\n    s += v[j - 1]\n    g[j].remove(i)\nprint(s)", "R = lambda:map(int, input().split())\nn, m = R()\nv = [0] + list(R())\nprint(sum(min(v[x], v[y]) for x, y in (R() for i in range(m))))", "n, m = map(int, input().split())\nu = list(map(int, input().split()))\nv = list(enumerate(u, 1))\nv.sort(key = lambda x: x[1], reverse = True)\ns, u = 0, [0] + u\np = [[] for i in range(n + 1)]\nfor i in range(m):\n    x, y = map(int, input().split())\n    p[x].append(y)\n    p[y].append(x)\nfor x, f in v:\n    for y in p[x]: s += u[y]\n    u[x] = 0\nprint(s)", "n, m = map(int, input().split())\nr = list(enumerate(map(int, input().split()), 1))\nr.sort(key = lambda x: x[1])\ns, p = 0, [[] for i in range(n + 1)]\nfor i in range(m):\n    x, y = map(int, input().split())\n    p[x].append(y)\n    p[y].append(x)\nq = [len(t) for t in p]  \nfor x, f in r:\n    s += f * q[x]\n    for y in p[x]: q[y] -= 1\nprint(s)", "n, m = map( int, input().split() )\nv = list( map( int, input().split() ) )\n\nans = 0\nfor i in range( m ):\n    x, y = map( int, input().split() )\n    ans += min( v[x - 1], v[y - 1] )\n    \nprint( ans )", "n, m = map( int, input().split() )\nv = [ int( elm ) for elm in input().split() ]\nans = 0\nfor i in range( m ):\n  x, y = map( int, input().split() )\n  ans += min( v[x - 1], v[y - 1] )\nprint( ans )", "R = lambda:map(int, input().split())\nn, m = R()\nv = [0] + list(R())\nprint(sum(min(v[x], v[y]) for x, y in (R() for i in range(m))))", "__author__ = 'asmn'\nimport sys\n\n\n\nn, m = tuple(map(int, input().split()))\nv = list(map(int, input().split()))\ne = [[] for i in range(n)]\nfor k in range(m):\n    x, y = tuple(map(int, input().split()))\n    e[x - 1].append(y - 1)\n    e[y - 1].append(x - 1)\n\nnx = sorted(list(range(n)), key=lambda x: v[x], reverse=True)\n\nused = set()\nans = 0\nfor x in nx:\n    for y in e[x]:\n        if y not in used:\n            ans += v[y]\n    used.add(x)\nprint(ans)\n\n", "n, m = map(int, input().split())\n\nr = sorted(enumerate(map(int, input().split())), key=lambda x: x[1])\np = [[] for i in range(n)]\n\nfor i in range(m):\n    x, y = map(lambda n: int(n) - 1, input().split())\n    p[x] += [y]\n    p[y] += [x]\nq = [len(i) for i in p]\ns = 0\nfor x, f in r:\n    s += q[x] * f\n    for y in p[x]:\n        q[y] -= 1\n\nprint(s)", "n,m = list(map(int,input().split()))\nfun = [int(x) for x in input().split()]\nans = 0\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    ans+=min(fun[a-1],fun[b-1])\nprint (ans)\n", "n, m = map(int, input().split())\nv = list(map(int, input().split()))\nr = [set() for i in range(n)]\nfor i in range(m):\n    n1, n2 = (int(x) - 1 for x in input().split())\n    r[n1].add(n2)\n    r[n2].add(n1)\nval = 0\nfor x in reversed(sorted((x, i) for i, x in enumerate(v))):\n    for y in r[x[1]]:\n        val += v[y]\n        r[y].remove(x[1])\nprint(val)", "'''\nCreated on \u0660\u0661\u200f/\u0660\u0661\u200f/\u0662\u0660\u0661\u0665\n\n@author: mohamed265\n'''\nt = input().split()\nn = int(t[0])\nm = int(t[1])\nslon = 0\nnum = [int(x) for x in input().split()]\nfor i in range(m):\n    t = input().split()\n    slon += min(num[int(t[0])-1] , num[int(t[1])-1])\nprint(slon)", "t = input().split()\nn = int(t[0])\nm = int(t[1])\nslon = 0\nnum = [int(x) for x in input().split()]\nfor i in range(m):\n    t = input().split()\n    slon += min(num[int(t[0])-1] , num[int(t[1])-1])\nprint(slon)", "n, m = [int(x) for x in input().split()]\nv = [int(x) for x in input().split()]\na = [[] for x in range(n)]\nused = [0] * n\nfor i in range(m):\n\tx, y = [int(x) for x in input().split()]\n\tx -= 1\n\ty -= 1\n\ta[x].append(y)\n\ta[y].append(x)\nl = sorted(zip(v, list(range(n))), key = lambda x: -x[0])\nans = 0\nfor _, i in l:\n\tused[i] = 1\n\tfor x in a[i]:\n\t\tif not used[x]:\n\t\t\tans += v[x]\nprint(ans)\n", "def main():\n    n, m = map(int, input().split())\n    vv = list(map(int, input().split()))\n    print(sum(min(vv[i - 1] for i in map(int, input().split())) for _ in range(m)))\n\n\ndef __starting_point():\n    main()\n__starting_point()"]