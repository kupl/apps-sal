["n,m,k = map(int,input().split())\na = list(map(int,input().split()))\n\na = sorted(a)\nb1 = a[-1]\nb2 = a[-2]\n\nk+=1\ntotal = m//k\nscore = 0\nscore += (m%k) * b1\nscore += b1 * (total*(k-1))\nscore += b2 * total\nprint (score)", "ii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\n\nn, m, k = mi()\na = li()\nmx = max(a)\nmi = a.index(mx)\nmx2 = max(a[:mi] + a[mi+1:])\n\nrep = m // (k + 1)\nans = rep * (k * mx + mx2)\n\nrem = m % (k + 1)\nans += rem * mx\n\nprint(ans)", "n,m,k = list(map(int,input().split()))\nA = sorted([int(x) for x in input().split()])\nm1 = A[-1]\nm2 = A[-2]\nprint(m//(k+1) * (m1*k + m2) + m%(k+1) * m1 )\n", "n, m, k = map(int, input().split())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\ns = m // (k + 1)\nmod = m % (k + 1)\nprint(s * (a[0] * k + a[1]) + mod * a[0])", "n, m, k = list(map(int, input().split()))\nA = sorted(map(int, input().split()))\na, b = A[-1], A[-2]\ntime = m // (k + 1)\nans = time * (a * k + b)\nprint(ans + a * (m % (k + 1)))\n", "def mi():\n    return list(map(int, input().split()))\n'''\n6 9 2\n1 3 3 7 4 2\n'''\nn,m,k = mi()\na = list(mi())\na.sort(reverse=True)\nt = k+1\nnop = m//t\nrem = m%t\nprint(nop*(k*a[0]+a[1])+rem*a[0])\n", "n,m,k=list(map(int,input().split()))\na=list(map(int,input().split()))\n\na.sort()\nk1=a[-1]\nk2 = a[-2]\nx = m//(k+1)\nans = k2*x+(m-x)*k1\nprint(ans)\n", "n,m,k=map(int,input().split())\narr=list(map(int,input().split()))\narr.sort()\ncount=m//(k+1)\nans=arr[-1]*count*k\nans+=(arr[-2])*count\nans+=arr[-1]*(m%(k+1))\nprint(ans)", "n,m,k=list(map(int,input().split()))\na=[int(s) for s in input().split()]\na.sort()\nans=m//(k+1)*(a[-1]*k+a[-2])\nans+=m%(k+1)*a[-1]\nprint(ans)\n    \n", "n, m ,k = map(int, input().split())\n\na = list(map(int, input().split()))\n\nmx1 = mx2 = 0\nfor i in range(n):\n    if a[i] > mx1:\n        mx2 = mx1\n        mx1 = a[i]\n    elif a[i] > mx2:\n        mx2 = a[i]\n\nt = m // (k+1)\nans = t*k*mx1 + t*mx2\n\nans += (m % (k+1))*mx1\nprint(ans)", "#\t!/usr/bin/env python3\n#\tcoding: UTF-8\n#\tModified: <18/Feb/2019 09:19:08 PM>\n\n\n#\t\u272a H4WK3yE\u4e61\n#\tMohd. Farhan Tahir\n#\tIndian Institute Of Information Technology (IIIT),Gwalior\n\n#\tQuestion Link\n#\n#\n\n# ///==========Libraries, Constants and Functions=============///\n\n\nimport sys\n\ninf = float(\"inf\")\nmod = 1000000007\n\n\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\n\n\ndef input(): return sys.stdin.readline()\n\n# ///==========MAIN=============///\n\n\ndef main():\n    n, m, k = get_ints()\n    arr = get_array()\n    arr.sort()\n    if m <= k:\n        print(arr[-1] * m)\n        return\n    x = arr[-1] * k + arr[-2]\n    p = m // (k + 1)\n    ans = x * p\n    p = m % (k + 1)\n    ans += (arr[-1] * p)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m,k = [int(s) for s in input().split()]\narray = [int(s) for s in input().split()]\narray = sorted(array,reverse = True)\nfirst = array[0]\nsecond = array[1]\n#print(array)\nres = (first * k + second) * (m // (k + 1)) + first * (m % (k + 1))\nprint(res)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\nisdebug = False\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\n    isdebug = True\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif not isdebug:\n    inId = 0\n    outId = 0\nif inId>0:\n    dprint('use input', inId)\n    try:\n        f = open('input'+ str(inId) + '.txt', 'r')\n        sys.stdin = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    except Exception:\n        dprint('invalid input file')\nif outId>0:\n    dprint('use output', outId)\n    try:\n        f = open('stdout'+ str(outId) + '.txt', 'w')\n        sys.stdout = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    except Exception:\n        dprint('invalid output file')\n        \n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, M, K = getIntList()\n#print(N)\nza  = getIntList()\ndprint(za)\nza.sort()\n\na = za[-1]\nb = za[-2]\n\nr = 0\n\nt = M //(K+1)\n\nr = t* ( a*K + b)\nr += M%(K+1) * a\n\n\nprint(r)\n\n", "n,m,k=list(map(int,input().split()))\nA=list(map(int,input().split()))\nA.sort(reverse=True)\n\nM1=A[0]\nM2=A[1]\n\nprint(M2*(m//(k+1))+M1*(m-(m//(k+1))))\n", "N, M, K = map(int, input().split())\nA = [int(a) for a in input().split()]\nA = sorted(A)\n\nm1 = A[-1]\nm2 = A[-2]\n\na = M // (K+1)\nb = M % (K+1)\n\nprint(a*(m1*K+m2)+m1*b)", "import io, sys, atexit, os\n\n\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\n\n\ndef solve ():\n\tt = 1\n\tfor it in range (t):\n\t\tn,m,k=num()\n\t\ta=li()\n\t\ta.sort()\n\t\thh=a[n-1]\n\t\th2=a[n-2]\n\t\top=m//(k+1)\n\t\tpo=m%(k+1)\n\t\tans=op*k*hh+op*h2+po*hh\n\t\tprint(ans)\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "n, m, k = list(map(int, input().split()))\na = list(sorted(map(int, input().split())))\nx = a[-1]\ny = a[-2]\nb = int(m / (k + 1))\nprint(b * y + (m - b) * x)\n", "n, m, k = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\nu, v = a[-2], a[-1]\n\nprint(m // (k + 1) * (v * k + u) + m % (k + 1) * v)\n", "n, m, k = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nif m < k:\n    print(A[0] * m)\nelse:\n    k += 1\n    print(A[0] * (m - m // k) + A[1] * (m // k))", "import heapq\n\n_, m, k = list(map(int, input().split()))\na, b = heapq.nlargest(2, list(map(int, input().split())))\nprint(a * m - m // (k + 1) * (a - b))\n", "import heapq\n\nn, m, k = [int(x) for x in input().split()]\narr = [int(x) for x in input().split()]\n\na, b = heapq.nlargest(2, arr)\n\nnb = m // (k+1)\nna = m - nb\n\nh = na*a + nb*b\nprint(h)\n\n", "n,m,k=map(int,input().split())\na=sorted(list(map(int,input().split())))\nr=m//(k+1)\nans=a[-1]*(r*k+(m%(k+1)))+a[-2]*r\nprint(ans)", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nn, m, k = mints()\na = list(mints())\na.sort()\nb = a[-1]\nc = a[-2]\nz = m//(k+1)\nprint((m-z)*b+c*z)", "n,m,k=map(int,input().split())\na=list(map(int,input().split()))\nmx,mxx=0,0\nfor i in a:\n    if i>=mx:\n        mxx=mx\n        mx=i\n    elif i>mxx:\n        mxx=i\nif k==m:print(mx*m)\nelse:\n    x=m//(k+1)\n    ans=x*(mx*k+mxx)+(m-(k+1)*x)*mx\n    print(ans)"]