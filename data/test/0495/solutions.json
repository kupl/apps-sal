["a, k = input().split()\nk = int(k)\na = [i for i in a]\ni = 0\nwhile k > 0 and i < len(a):\n    m = a[i : i + k + 1].index(max(a[i : i + k + 1]))\n    if a[i + m] > a[i]:\n        k -= m\n        for j in range(i + m, i, -1):\n            a[j], a[j - 1] = a[j - 1], a[j]\n    i += 1\nprint(\"\".join(a))", "a, b = input().split()\na = list(a)\nb = int(b)\n\ndef findMax(a, f, dist):\n    m = f\n    for i in range(f+1, min(f+dist+1, len(a))):\n        if a[i] > a[m]:\n            m = i\n    return m\n\n\npos = 0\nwhile b > 0 and pos < len(a):\n    m = findMax(a, pos, b)\n    #print('we found:', m)\n    a.insert(pos, a.pop(m))\n    #print('new a', a)\n    b -= m - pos\n    #print('new b', b)\n    pos += 1\n\nprint(''.join(a))\n", "a1, K = map(int, input().split())\na = []\nwhile a1 != 0:\n    a.append(a1 % 10)\n    a1 //= 10\nn = len(a)\nk = n\nwhile 1:   \n    if k == 0:\n        break\n    ma = 0\n    for i in range(max(0, k - 1 - K), k):\n        if ma <= a[i]:\n            ma = a[i]\n            pos = i\n    if ma == a[k - 1]:\n        k -= 1\n        continue\n    while K != 0 and pos + 1 < n and a[pos + 1] < a[pos]:\n        a[pos], a[pos + 1] = a[pos + 1], a[pos]\n        pos += 1\n        K -= 1\n    if K == 0:\n        break\n    k -= 1\nfor i in range(n):\n    print(a[n - i - 1], end = '')\n    ", "a,k=list(map(int,input().split()))\n\na=list(str(a))\n\nb=\"\"\n\nwhile(len(a)>0):\n    e=max(a[:k+1])\n    ind=a.index(e)\n    b+=e\n    k-=ind\n    a.pop(ind)\nprint(b)\n", "s, k = input().split()\nk = int(k)\nfor i in range(0, len(s)):\n    val = s[i]\n    ind = i\n    for j in range(i + 1, i + k + 1):\n        if j < len(s) and s[j] > val:\n            val = s[j]\n            ind = j\n    s = s[:i] + s[ind] + s[i:ind] + s[ind + 1:]\n    k -= ind - i\nprint(s)", "a, k = input().split()\na = [int(i) for i in a]\nk = int(k)\n\nn = 0\nfor i in range(len(a)):\n    if n >= k: break\n    max_i = i + a[i:i + 1 + k - n].index(max(a[i:i + 1 + k - n]))\n    t = a.pop(max_i)\n    a.insert(i, t)\n    n += max_i - i\n    \nprint(''.join(str(i) for i in a))\n", "def yoba(a, k):\n\n    if not a:\n\n        return []\n\n    elif not k:\n\n        return a\n\n    else:\n\n        m = max(a[:k + 1])\n        mi = a.index(m)\n        if m > a[0]:\n\n            a[1:mi + 1] = a[:mi]\n            a[0] = m\n            k -= mi\n\n        return [a[0]] + yoba(a[1:], k)\n\n\na, k = str.split(input())\nk = int(k)\n\nprint(str.join(\"\", yoba(list(a), k)))\n", "n, k = [int(c) for c in input().split()]\n\nar = []\n\nwhile n != 0:\n    ar.append(n % 10)\n    n = n // 10\n\nar.reverse()\n\ni = 0\n\nwhile k > 0 and i < len(ar):\n    m_val = max(ar[i:i + k + 1])\n    pos = i\n\n    while ar[pos] != m_val:\n        pos += 1\n\n    while pos != i:\n        ar[pos], ar[pos - 1] = ar[pos - 1], ar[pos]\n        pos -= 1\n        k -= 1\n\n    i += 1\n\n\nprint(''.join(map(str,ar)))", "a, k = list(map(int, input().split()))\na = str(a)\ni = 0\nna = a\nfor q in range(len(a)):\n    m = a[i]\n    num = i\n    for j in range(i, min(i + k + 1, len(a))):\n        if a[j] > m:\n            m = a[j]\n            num = j\n    na = ''\n    for j in range(i):\n        na += a[j]\n    na += m\n    for j in range(i + 1, num + 1):\n        na += a[j - 1]\n    for j in range(num + 1, len(a)):\n        na += a[j]\n    a = na\n    k -= num - i\n    i += 1\nprint(a)\n    \n", "3\n\nimport sys\n\ndef findBiggerInInterval(list,pos,operations):\n\tlist_slice = nbr_list[pos+1:pos+operations+1]\n\tm = max(list_slice)\n\tif m > list[pos]:\n\t\tfor it_pos in range(pos+1,pos+operations+1):\n\t\t\tif list[it_pos] == m:\n\t\t\t\tbigger_pos = it_pos\n\t\t\t\tbreak;\n\t\tif bigger_pos != None:\n\t\t\treturn bigger_pos\n\t\telse:\n\t\t\treturn -1\n\treturn -1\n\ndef swapInPlace(list,firstPos,secondPos):\n\tfor pos in range(secondPos,firstPos,-1):\n\t\ttmp = list[pos]\n\t\tlist[pos] = list[pos-1]\n\t\tlist[pos-1] = tmp\n\nnumber,operations = [nbr for nbr in sys.stdin.readline().split()]\noperations = int(operations)\n\nnbr_list = list(number)\nif operations > 0:\n\tfor pos in range(len(nbr_list) - 1):\n\t\tbiggerPos = findBiggerInInterval(nbr_list,pos,operations)\n\t\tif biggerPos != -1:\n\t\t\tswapInPlace(nbr_list,pos,biggerPos)\n\t\t\toperations -= (biggerPos - pos)\n\t\tif operations == 0:\n\t\t\tbreak\n\nprint(\"\".join(nbr_list))\n", "(x, a), b = list(input().split()), 0\n\na = int(a)\nx = list(map(int, list(str(x))))\n\nfor i in range(len(x) - 1):\n    m = [-1, -1]\n\n    if a > 0:\n        if i + 1 + a > len(x):\n            b = len(x)\n        else:\n            b = i + 1 + a\n    else:\n        break\n\n    for j in range(i, b):\n        if x[j] > m[0]:\n            m[0] = x[j]\n            m[1] = j\n\n    del x[m[1]]\n    x.insert(i, m[0])\n\n    a = a - (m[1] - i)\n\nx = list(map(str, x))\n\nprint( ''.join(x) )\n", "def f(x1,k1):\n\tx = x1\n\tk = k1\n\tif k==0:\n\t\treturn int(''.join(x))\n\ty = len(x)\n\ti = 0\n\twhile i < y and x[i] == '9':\n\t\ti += 1\n\tif i == y:\n\t\treturn int(''.join(x))\n\twhile i < y and k>0:\n\t\tj = i+1\n\t\tm = i\n\t\twhile j < y and j <= i+k:\n\t\t\tif x[j] > x[m]:\n\t\t\t\tm = j\n\t\t\tj += 1\n\t\tif m != i:\n\t\t\tk -= m-i\n\t\t\twhile m > i:\n\t\t\t\th = x[m]\n\t\t\t\tx[m] = x[m-1]\n\t\t\t\tx[m-1] = h\n\t\t\t\tm -= 1\n\t\t\t\n\t\ti+=1\n\treturn int(''.join(x))\n\nx = input()\ni=len(x)-1\nwhile x[i] != ' ':\n\ti -= 1\n\nk = int(x[i+1:])\nx = list(x[:i])\n\nprint(f(x,k))", "a, k = list(map(int, input().split()))\n\na = list(str(a))\nb = ''\n\nwhile a:\n    e = max(a[:k+1])\n    ind = a.index(e)\n    b += e\n    k -= ind\n    a.pop(ind)\n\nprint(b)\n", "l = input().split()\na = list(map(int, l[0]))\nk = int(l[1])\nn = len(a)\ndef rshift(a, l, r):\n  t = a[r]\n  for i in range(r, l, -1):\n    a[i] = a[i - 1]\n  a[l] = t\nfor i in range(n - 1):\n  if k == 0:\n    break\n  j = min(n - 1, i + k)\n  m = max(a[i + 1:j + 1])\n  if m > a[i]:\n    x = i + a[i + 1:j + 1].index(m) + 1\n    rshift(a, i, x)\n    k -= x - i\nprint(''.join(map(str, a)))", "from sys import stdin\na, k = stdin.readline().split()\na, k = list(a), int(k)\nb = sorted(a, reverse = True)\nfor i in range(len(a)):\n    for x in b:\n        if a[i] == x: break\n        j = a.index(x, i)\n        if j - i > k: continue\n        k -= j - i\n        a[i: j + 1] = [a[j]] + a[i: j]\n        break\n    b.remove(a[i])\nprint(''.join(a))", "iData = list(map(int, str(input()).split(\" \")))\na, k = [x for x in str(iData[0])], iData[1]\n\nres = []\nwhile k > 0 and len(a) > 1:\n    imax = a.index(max(a[:k+1]))\n    res.append(a[imax])\n    a = a[:imax] + a[imax+1:]\n    k-=imax\n\nprint(\"\".join(res+a))\n", "(a, k) = input().split()\na = list(a)\nk = int(k)\nsorted_a = list(reversed(sorted(a)))\ni = 0\n\nwhile k > 0 and a != sorted_a:\n    for j in range(9, 0, -1):\n        c = str(j)\n        if c in a[i:] and a[i:].index(c) <= k:\n            l = a[i:].index(c)\n            k -= l\n            a.insert(int(i), a.pop(i+l))\n            break\n    i += 1\n\nprint(''.join(a))", "d=input().split()\nn=int(d[0])\nk=int(d[1])\na=[]\nwhile n>0:\n\ta.append(n%10)\n\tn//=10\na.reverse()\n\n\nfor i in range(len(a)):\n\tb=a[i:i+k+1]\n\tfor l in range(len(b)):\t\n\t\tif b[l]==max(b):\n\t\t\tj=l+i\n\t\t\tbreak\n\tif a[j]>a[i]:\n\t\tfor x in range(j,i,-1):\n\t\t\ta[x],a[x-1]=a[x-1],a[x]\t\n\t\tk=k-(j-i)\ns=''\nfor i in range(len(a)):\n\ts+=str(a[i])\nprint(s)\n\t\t\n", "def solve(k):\n    nonlocal a\n    last_pos = 0\n    while k > 0 and last_pos != len(a):\n        maxInd = 0\n        if k < len(a) - last_pos:\n            maxDig = max(a[last_pos : last_pos + k + 1])\n            for i in range(last_pos, last_pos + k + 1):\n                if a[i] == maxDig:\n                    maxInd = i\n                    break\n        else:\n            maxDig = max(a[last_pos:])\n            for i in range(last_pos, len(a)):\n                if a[i] == maxDig:\n                    maxInd = i\n                    break\n        if maxInd > last_pos:\n            a.insert(last_pos, a[maxInd])\n            temp = a.pop(maxInd + 1)\n            k -= (maxInd - last_pos)\n        last_pos += 1\n\na, k = input().split()\nk = int(k)\na = list(map(int, [i for i in a]))\nsolve(k)\nprint(''.join(map(str, a)))\n", "a, k = list(map(int, input().split()))\na = str(a)\nl = list(a)\ns = ''\nwhile k > 0 and len(l) != 0:\n    u = max(l[0:k+1])\n    s += str(u)\n    c = l.index(u)\n    l.remove(u)\n    k -= c\nfor i in l :\n    s+=str(i)\nprint(s)\n", "n,k=input().split()\nk=int(k)\nl=list(n)\nu=len(l)\nd='0'\ni=0\nwhile k>0 and i<u-1:\n\tc=i+k\n\tif c>u:\n\t\tc=u\n\td=max(l[i+1:c+1])\n\tif d>l[i]:\n\t\tj=False\n\t\tp=i+1\n\t\twhile not j:\n\t\t\tif l[p]==d: j=p\n\t\t\telse:p+=1\n\t\t\t\n\t\tfor h in range(j,i,-1):\n\t\t\tl[h],l[h-1]=l[h-1],l[h]\n\t\t\tk-=1\n\t\ti=0\n\telse:\n\t\ti+=1\nx=''\nfor i in l:\n\tx=x+str(i)\nprint(x)", "a, k = input().split()\na, k = list(a), int(k)\nfor i, x in enumerate(a):\n    if k == 0:\n        break\n    vi, v = -1, x\n    for j, y in enumerate(a[i + 1:min(len(a), i + k + 1)]):\n        if y > v:\n            vi, v = j, y\n    if vi > -1:\n        del a[i + vi + 1]\n        a.insert(i, v)\n        k -= vi + 1\nprint(''.join(a))", "a, k = input().split()\nk = int(k)\na = list(a)\nn = len(a)\nfor i in range(n):\n\tptr = i\n\tfor j in range(i, i + min(k + 1, n - i)):\n\t\tif a[j] > a[ptr]:\n\t\t\tptr = j\n\ta = a[:i] + [a[ptr]] + a[i:ptr] + a[ptr + 1:]\n\tk -= ptr - i\nprint(''.join(a))\n", "s, k = map(str,input().split())\nk = int(k)\nz = len(s)\nfor i in range(z):\n    val = s[i]\n    ind = i\n    for j in range(i+1,i+k+1):\n        if j < len(s) and s[j] > val:\n            val = s[j]\n            ind = j\n    s = s[:i] + s[ind] + s[i:ind] + s[ind + 1:]\n    k -= ind - i\nprint(s)", "inp, k = list(map(int, input().split()))\n\ninp = list(repr(inp))\nans = []\n\nwhile len(inp) != 0:\n    tmp = max(inp[:k + 1])\n    pos = inp.index(tmp)\n    k -= pos\n    ans.append(tmp)\n    inp.pop(pos)\n\nprint(''.join(ans))\n"]