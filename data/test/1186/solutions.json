["def test(x, i):\n\ti = list(i)\n\tok = True\n\tfor j in range(x):\n\t\tif (i[j] == j+1 or (i[j]&(j+1) != 0)):\n\t\t\tok = False\n\tif ok:\n\t\tprint(i)\n\ndef comp(n):\n\treturn 2**len(bin(n)[2:])-1-n\n\nn = int(input())\nnn = n\nif (n%2 == 0):\n\tx = []\n\twhile (n != 0):\n\t\t#add n to comp(n) to the front of x\n\t\tfor i in range(comp(n), n+1):\n\t\t\tx.append(i)\n\t\tn = comp(n)-1\n\n\tx.reverse()\n\tprint(\"YES\")\n\tprint(' '.join([str(i) for i in x]))\nelse:\n\tprint(\"NO\")\n\npow2 = [2**i for i in range(20)]\ndef make(n):\n\tif n <= 5: return []\n\tif n == 6: return [3, 6, 1, 5, 4, 2]\n\tif n == 7: return [3, 6, 1, 5, 4, 7, 2]\n\tif n in pow2:\n\t\treturn []\n\tshift = 2**(len(bin(n)[2:])-1)\n\tarray = [i for i in range(shift, n+1)]\n\tarray = array[1:] + [array[0]]\n\treturn make(shift-1) + array\n\nn = nn\nk = make(n)\nif k == []:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")\n\tprint(' '.join([str(i) for i in k]))\n", "from math import log2, floor\nn=int(input())\n# n=100\nif n%2:\n\tprint('NO')\nelse:\n\tprint(\"YES\")\n\tk=floor(log2(n))+1\n\tres = [0 for i in range(n)]\n\toccupied = [0 for i in range(n)]\n\tswitch = 0\n\tfor i in range(n,0,-1):\n\t\tval = 2**k-1-i\n\t\tif val > n:\n\t\t\tk-=1\n\t\t\tval = 2**k-1-i\n\t\tif occupied[val-1]:\n\t\t\twhile occupied[val-1]:\n\t\t\t\tk-=1\n\t\t\t\tval = 2**k-1-i\n\t\tval = 2**k-1-i\n\t\toccupied[val-1] = 1\n\t\tres[i-1] = val\n\tfor i in res:\n\t\tprint(i,end=' ')\n\tprint()\n\nif n in [1,2,3,4,5]:\n\tprint('NO')\nelif int(log2(n)) == log2(n):\n\tprint('NO')\nelif n == 6:\n\tprint('YES')\n\tprint('3 6 2 5 1 4')\nelse:\n\tprint('YES')\n\tprint('7 3 2 5 6 4 1',end=' ')\n\tfor i in range(8,n):\n\t\tp = pow(2,floor(log2(i))+1)\n\t\tif i < pow(2,floor(log2(n))):\n\t\t\tprint(p*3//2-1-i,end=' ')\n\t\telse:\n\t\t\tprint(i+1,end=' ')\n\tif n > 7:\n\t\tprint(pow(2,floor(log2(n))))\n\n", "from math import log2, floor\nn=int(input())\n# n=100\nif n%2:\n\tprint('NO')\nelse:\n\tprint(\"YES\")\n\tk=floor(log2(n))+1\n\tres = [0 for i in range(n)]\n\toccupied = [0 for i in range(n)]\n\tswitch = 0\n\tfor i in range(n,0,-1):\n\t\tval = 2**k-1-i\n\t\tif val > n:\n\t\t\tk-=1\n\t\t\tval = 2**k-1-i\n\t\tif occupied[val-1]:\n\t\t\twhile occupied[val-1]:\n\t\t\t\tk-=1\n\t\t\t\tval = 2**k-1-i\n\t\tval = 2**k-1-i\n\t\toccupied[val-1] = 1\n\t\tres[i-1] = val\n\tfor i in res:\n\t\tprint(i,end=' ')\n\tprint()\n\nif n in [1,2,3,4,5]:\n\tprint('NO')\nelif int(log2(n)) == log2(n):\n\tprint('NO')\nelif n == 6:\n\tprint('YES')\n\tprint('3 6 2 5 1 4')\nelse:\n\tprint('YES')\n\tprint('7 3 2 5 6 4 1',end=' ')\n\tfor i in range(8,n+1):\n\t\tif int(log2(i)) == log2(i):\n\t\t\tprint(min(i*2-1,n),end=' ')\n\t\telse:\n\t\t\tprint(i-1,end=' ')\n\tprint()\n\n", "from math import log\nn = int(input())\na = [i for i in range(n + 1)]\n\ndef ans(n):\n    if n <= 0 or n % 2:\n        return\n    j, cr = (1 << int(log(n, 2))), 1\n    while j + cr - 1 <= n:\n        a[j - cr], a[j + cr - 1] = a[j + cr - 1], a[j - cr]\n        cr += 1\n    ans(j - cr)\n    \nif n % 2 == 0:\n    ans(n)\n    print(\"YES\")\n    print(*a[1:])\nelse:\n    print(\"NO\")\n\nif n <= 5 or (1 << int(log(n, 2))) == n:\n    print(\"NO\")\n    return\n    \nprint(\"YES\")\nprint(\"3 6 1 5 4 2\" if n <= 6 else \"3 6 1 5 4 7 2\", end=' ')\ncr = 8\nv = (1 << int(log(n, 2)))\nfor i in range(8, n + 1):\n    if i >= v:\n        print(n if i == v else i - 1, end=' ')\n        continue\n    if i == cr:\n        cr *= 2\n        print(cr - 1, end=' ')\n    else:\n        print(i - 1, end=' ')\n\n    \n", "from math import*\nn=int(input())\nif n%2:\n\tprint('NO')\nelse:\n\tprint(\"YES\")\n\tk=floor(log2(n))+1\n\tres = [0 for i in range(n)]\n\toccupied = [0 for i in range(n)]\n\tswitch = 0\n\tfor i in range(n,0,-1):\n\t\tval = 2**k-1-i\n\t\tif val > n:\n\t\t\tk-=1\n\t\t\tval = 2**k-1-i\n\t\tif occupied[val-1]:\n\t\t\twhile occupied[val-1]:\n\t\t\t\tk-=1\n\t\t\t\tval = 2**k-1-i\n\t\tval = 2**k-1-i\n\t\toccupied[val-1] = 1\n\t\tres[i-1] = val\n\tfor i in res:\n\t\tprint(i,end=' ')\n\tprint()\n\nif n in [1,2,3,4,5]:\n\tprint('NO')\nelif int(log2(n)) == log2(n):\n\tprint('NO')\nelif n == 6:\n\tprint('YES')\n\tprint('3 6 2 5 1 4')\nelse:\n\tprint('YES')\n\tprint('7 3 2 5 6 4 1',end=' ')\n\tfor i in range(8,n+1):\n\t\tif int(log2(i)) == log2(i):\n\t\t\tprint(min(i*2-1,n),end=' ')\n\t\telse:\n\t\t\tprint(i-1,end=' ')\n\tprint()", "\nfrom math import log2\nn = int(input())\np = [0] * (n + 1)\ndef f(n):\n    k = int(log2(n))\n    while k:\n        i = 1\n        while (1 << k) + i - 1 <= n:\n            p[(1 << k) + i - 1] = (1 << k) - i\n            p[(1 << k) - i] = (1 << k) + i - 1\n            i += 1\n        n = (1 << k) - i\n        if not n:\n            break\n        k = int(log2(n))\nif n & 1:\n    print('NO')\nelse:\n    print('YES')\n    f(n)\n    print(*p[1:])\n\nif n < 6 or 1 << int(log2(n)) == n:\n    print('NO')\nelse:\n    print('YES')\n    if n == 6:\n        print('3 6 2 5 1 4')\n    elif n == 7:\n        print('7 3 6 5 1 2 4')\n    else:\n        print('7 3 6 5 1 2 4', end=' ')\n        k = 3\n        while (1 << k) < n:\n            for i in range((1 << k) + 1, min(1 << k + 1, n + 1)):\n                print(i, end=' ')\n            print(1 << k, end=' ')\n            k += 1\n\n"]