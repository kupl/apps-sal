["n, m = map(int, input().split())\nd = []\nfor i in range(n):\n\td.append(list(map(int, input().split())))\nk = 0\nfor i in d:\n\tif i[0] <= k:\n\t\tk = max(k, i[1])\nif k >= m:\n\tprint('YES')\nelse:\n\tprint('NO')", "n, m = map(int, input().split())\n\na = []\n\nfor i in range(n):\n    l, r = map(int, input().split())\n    a.append((l, 0))\n    a.append((r, 1))\n\na.sort()\n\nok = True\nfirst = True\ncnt = 0\nfor ev in a:\n    if first:\n        first = False\n        if ev[0] != 0:\n            ok = False\n            break\n    if ev[1] == 0:\n        cnt += 1\n    else:\n        cnt -= 1\n        if cnt == 0 and ev[0] != m:\n            ok = False\n    \n\nprint(\"YES\" if ok else \"NO\")", "import sys\nn, m = map(int, input().split())\na = [[int(i) for i in input().split()] for j in range(n)]\nlast = 0\nfor i in range(n):\n    if a[i][0] <= last:\n        last = max(last, a[i][1])\nif last >= m:\n    print('YES')\nelse:\n    print('NO')", "n,m=map(int,input().split())\nar=[0]*(m)\nfor x in range(n):\n    a,b=map(int,input().split())\n    ar[a:b]=[1]*(b-a)\nprint('YES' if set(ar)==set([1]) else 'NO')", "\nn, m = list(map(int, input().split()))\n\npos = 0\n\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    if a > pos:\n        break\n    pos = max([pos, b])\n\nif pos >= m:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n, m = map(int, input().split())\nrm = 0\nfor _ in range(n):\n    a, b = map(int, input().split())\n    if a > rm:\n        print('NO')\n        return\n    rm = max(rm, b)\nif rm >= m:\n    print('YES')\nelse:\n    print('NO')", "import math\nimport sys\nimport getpass\nimport bisect\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\ndef gp(x1, y1, x2, y2, x3, y3):\n    k = ((y2 - y1) * (x3 - x1) - (x2 - x1) * (y3 - y1)) / ((y2 - y1) ** 2 + (x2 - x1) ** 2)\n    x4 = x3 - k * (y2 - y1)\n    y4 = y3 + k * (x2 - x1)\n    return (x4, y4)\n\n\nfiles = True\n\nif getpass.getuser().lower() == 'frohe' and files:\n    sys.stdin = open('test.in')\n    # sys.stdout = open('test.out', 'w')\n\nn,m=ria()\nar=[0]*400\nst=[0]*400\nfor i in range(n):\n    a,b=ria()\n    st[a]=1\n    for j in range(a+1,b+1):\n        ar[j]=1\n#print(ar)\nif st[0]==1 and sum(ar[1:m+1])==len(ar[1:m+1]):\n    print('YES')\nelse:\n    print('NO')", "n,m=map(int,input().split())\nl=[0 for i in range(120)]\nl[0]=1\nfor i in range(n):\n    a,b=map(int,input().split())\n    for i in range(a+1,b+1):\n        l[i]=1\nfor i in range(0,m+1):\n    if l[i]==0:\n        print(\"NO\")\n        return\nprint(\"YES\")", "n, m = [int(z) for z in input().split()]\ncur = 0\nfor i in range(n):\n    l, r = [int(z) for z in input().split()]\n    if l <= cur <= r:\n        cur = r\n    if l <= m <= cur:\n        print(\"YES\")\n        return\nprint(\"NO\")", "#a = map(int, input().split())\nn, m = list(map(int, input().split()))\nnow = 0\nam, bm = 0, 0\nl, r = -100000, 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if l <= a <= r:\n        l = min(a, abs(l))\n        r = max(b, r)\nif l != 0:\n    print('NO')\nelse:\n    if l <= m <= r:\n        print('YES')\n    else:\n        print('NO')\n\n            \n", "import sys\nsys.setrecursionlimit(1000000)\nread = sys.stdin.readline\n\nn, m = map(int, read().split())\ncango = 0\nfor _ in range(n):\n\tpoint, limit = map(int, read().split())\n\tif cango >= point and limit > cango:\n\t\tcango = limit\nif cango >= m:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "import sys\nn,m=[int(x) for x in input().split()]\npoints = []\nfor _ in range(n):\n    a,b = [int(x) for x in input().split()]\n    points.append((b,a))\n\nreach = m\npoints.sort(reverse=True)\nfor b,a in points:\n    if a<=reach<=b:\n        reach=min(a,reach)\n\nif reach==0:\n    print('YES')\nelse:\n    print('NO')\n", "n,m= list(map(int , input().split()))\nl = [0]*(m+1)\nl[0] = 1\nfor i in range(n):\n      a,b= list(map(int , input().split()))\n      for i in range(a+1,b+1):\n            l[i] = 1\nif 0 in l:print(\"NO\")\nelse:print(\"YES\")\n", "some = input().split(\" \")\nn = int(some[0])\nm = int(some[1])\ny = 0\nfor i in range(n):\n    some = input().split(\" \")\n    a = int(some[0])\n    b = int(some[1])\n    if y >= a:\n        y = max(y, b)\nif y >= m :\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = list(map(int, input().split()))\n\np = 0\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    if a <= p <= b:\n        p = b\n        if p >= m:\n            print('YES')\n            return\n\nprint('NO')\n", "n, m = list(map(int, input().split()))\nc = [False for i in range(m+1)]\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    for j in range(x+1, y+1):\n        c[j] = True\nprint('YES' if all(c[1:]) else 'NO')\n", "n, m = map(int, input().split())\nx, y = map(int, input().split())\nif x != 0:\n    print('NO')\n    return\nmaxr = y\nfor i in range(n - 1):\n    x, y = map(int, input().split())\n    if x > maxr:\n        print('NO')\n        break\n    maxr = max(y, maxr)\nelse:\n    if maxr == m:\n        print('YES')\n    else:\n        print('NO')", "n, m = [int(v) for v in input().split()]\nteleports = []\nfor _ in range(n):\n    a, b = [int(v) for v in input().split()]\n    teleports.append((a, b))\n\nreachable = [False] * (m + 1)\nreachable[0] = True\n\nfor a, b in teleports:\n    if reachable[a]:\n        for i in range(a + 1, b + 1):\n            reachable[i] = True\n\nprint([\"NO\", \"YES\"][reachable[m]])\n", "s = input()\nn, m = list(map(int, s.split()))\nport = []\nfor i in range(n):\n    ss = input()\n    p = list(map(int, ss.split()))\n    port.append(p)\nmar = 0\nfor each in port:\n    if each[0] > mar:\n        print('NO')\n        return\n    else:\n        if each[1] > mar:\n            mar = each[1]\nif mar >= m:\n    print('YES')\nelse:\n    print('NO')\n", "n , m = map(int,input().split())\na = []\nfor i in range(n):\n    a.append([int(x) for x in input().split()])\nm1 = 0\nfor i in range(n):\n    if a[i][0] <= m1 and a[i][1] >= m1:\n        m1 = a[i][1]\n        \nif m1 >= m:\n    print('YES')\nelse:\n    print('NO')", "n, m = map(int, input().split())\nmaxRight = 0\nfor _ in range(n):\n    a, b = map(int, input().split())\n    if a > maxRight:\n        break\n    maxRight = max(maxRight, b)\n\nif maxRight >= m:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n, m = map(int, input().split())\nx = [False] * 101\n\nfor _ in range(n):\n    a, b = map(int, input().split())\n    for i in range(a, b):\n        x[i] = True\n\nfor i in range(m):\n    if not x[i]:\n        print('NO')\n        return\nprint('YES')", "n, m = [int(x) for x in input().split()]\n\ntps = []\nfor _ in range(n):\n    tps.append(tuple([int(x) for x in input().split()]))\n\nparts = [False for _ in range(m)]\nfor tp in tps:\n    for i in range(tp[0], tp[1]):\n        parts[i] = True\nfor p in parts:\n    if not p:\n        print('NO')\n        break\nelse:\n    print('YES')\n"]