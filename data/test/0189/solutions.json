["n = int(input())\na = list(map(int,input().split()))\nt = 0\nmn = 1000000000\nfor i in range(1,100):\n    cur = 0\n    for j in range(n):\n        cur += max(0,abs(i-a[j])-1)\n    if cur < mn:\n        mn = cur\n        t = i\nprint(t,mn)\n", "n=int(input())\na=[*map(int,input().split())]\n\nmcost = 10**8\nans = 0\n\nfor i in range(1,101):\n    tcost = 0\n    for j in range(n):\n        if a[j] > i:\n            d = abs(a[j] - (i + 1))\n        elif a[j] < i:\n            d = abs(a[j] - (i - 1))\n        else:\n            d = 0\n        tcost += d\n    if tcost < mcost:\n        mcost, ans = tcost , i\n\nprint(ans, mcost)", "n = int(input())\ns = list(map(int,input().split()))\na,b = -1,188888\nfor t in range(1,101):\n    mi = 0\n    for i in range(n):\n        mi += min(abs(s[i]-t),abs(s[i]-t-1),abs(s[i]-t+1))\n    if b>mi:\n        a,b = t,mi\nprint(a,b)", "import math\n\nn = int(input())\nA = [int(i) for i in input().split()]\nA.sort()\n\nans = 10**18\nval = 0\nfor mid in range(1,100):\n    cost = 0\n    for i in range(n):\n        cost += min(abs(A[i] - mid), abs(A[i]-mid+1), abs(A[i]-mid-1))\n    if cost<ans:\n        ans = cost\n        val = mid\n\nprint(val, ans)\n", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef compute_min_cost(t, nums):\n    res = 0\n    for num in nums:\n        if abs(t - num) <= 1:\n            continue\n        res += abs(num - t) - 1\n    return res\n\n\ndef main():\n    _ = read_nums()\n\n    costs = []\n    nums = read_nums()\n    for t in range(1, 101):\n        min_cost = compute_min_cost(t, nums)\n        costs.append((t, min_cost))\n\n    t, cost = sorted(costs, key=lambda x: x[1])[0]\n    print(t, cost)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    a = LI()\n    mm = inf\n    mi = 0\n    for i in range(1,100):\n        t = 0\n        for c in a:\n            if c < i:\n                t += i-1-c\n            elif c > i:\n                t += c - 1 - i\n        if mm > t:\n            mi = i\n            mm = t\n\n    return '{} {}'.format(mi, mm)\n\n\n\nprint(main())\n\n", "n=int(input())\nl=list(map(int,input().split()))\nmincost=100000\nans=0\nfor t in range(1,101):\n    curcost=0\n    for i in l:\n        if i==t:\n            continue\n        else:\n            curcost+=abs(t-i)-1\n    if curcost<mincost:\n        mincost=curcost\n        ans=t\nprint(ans,mincost)", "n = int(input())\n\narr = list(map(int, input().split()))\narr.sort()\n\na = []\nfor t in range(1, 101):\n    tot = 0\n    for item in arr:\n        if (abs(item - t) >= 1):\n            tot += abs(item - t) - 1\n    \n    a.append((tot, t))\n\na.sort()\n\nprint(a[0][1], a[0][0])\n", "n = int(input())\narr = [int(x) for x in input().split()]\nt = []\nfor i in range(101):\n    s = 0\n    for j in arr:\n        s += max(0, abs(j - i) - 1)\n    t.append(s)\np = t[1:].index(min(t)) + 1\nprint(p, min(t))", "n=int(input())\nans=10**18\nval=-1\narr=list(map(int,input().split()))\nfor i in range(1,102):\n    valx=0\n    for j in arr:\n        if(abs(j-i)>1):\n            valx+=abs(j-i)-1\n    if(valx<ans):\n        ans=valx\n        val=i\nprint(val,ans)", "n = int(input())\na = list(map(int, input().split()))\nans = 10 ** 8\nansi = 0\nfor i in range(1, 101):\n\ttmp = sum(min(abs(i - t - 1), abs(i - t + 1), abs(i - t)) for t in a)\n\tif tmp < ans:\n\t\tans = tmp\n\t\tansi = i\nprint(ansi, ans)", "n = int(input())\nl = [*map(int, input().split())]\ndef f(a):\n    return [sum(min(\n        [abs(e - a), abs(e - (a - 1)), abs(e - (a + 1))]) for e in l), a]\nres = [float('inf'), float('inf')]\nfor a in range(1, 101):\n    res = min(res, f(a))\nprint(res[1], res[0])", "N = int(input())\nnumber_list = list(map(int, input().split(' ')))\nret = [0, 9999999]\nfor n in range(1, 101):\n    temp = 0\n    for number in number_list:\n        temp += max(0, abs(number - n) - 1)\n    if ret[1] > temp:\n        ret[0] = n\n        ret[1] = temp\n\nprint(ret[0], ret[1])\n", "n = int(input())\na = [int(t) for t in input().split(' ')]\n\nmincost = 1000 * 100 + 1\nbest_t = None\nfor t in range(1, 101):\n    cost = 0\n    for x in a:\n        cost += max(0, abs(x - t) - 1)\n    if cost < mincost:\n        mincost = cost\n        best_t = t\n\nprint(best_t, mincost)", "n = int(input())\na = [int(v) for v in input().split()]\na.sort()\n\ndef cost1(v, t):\n    if v < t - 1:\n        return t - 1 - v\n    elif v > t + 1:\n        return v - (t + 1)\n    else:\n        return 0\n\nbest_t = None\nbest_cost = 9999999999999\n\nfor t in range(1, 101):\n    cost = sum(cost1(v, t) for v in a)\n    if cost < best_cost:\n        best_cost = cost\n        best_t = t\n\nprint(best_t, best_cost)\n", "n=int(input())\n\nl=list(map(int,input().split()))\n\nmaxx=10000000000\ncur=0\nfor i in range(1,101):\n\tnow=0\n\tfor j in range(n):\n\t\tif l[j]<i:\n\t\t\tnow+=i-l[j]-1\n\t\telif l[j]>i:\n\t\t\tnow+=l[j]-i-1\n\n\tif now<maxx:\n\t\tmaxx=now\n\t\tcur=i\n\nprint(cur, maxx)", "from sys import stdin\nn=int(stdin.readline().strip())\n#n,m=map(int,stdin.readline().strip().split())\ns=list(map(int,stdin.readline().strip().split()))\ns.sort()\nans=10**20\nt1=-1\nfor t in range(1,101):\n    aux1=0\n    for j in range(n):\n        aux=102\n        aux=min(aux,abs(1+t-s[j]))\n        aux=min(aux,abs(t-1-s[j]))\n        aux=min(aux,abs(t-s[j]))\n        aux1+=aux\n    if aux1<ans:\n        ans=aux1\n        t1=t\nprint(t1,ans)\n        \n        \n", "import math\nn = int(input())\nar = [*map(int, input().split(' '))]\nmint,mincost = int(1e9),int(1e9)\nfor i in range(1,105):\n\tcost = sum([min(abs(x-i), abs(x-i-1), abs(x-i+1)) for x in ar])\n\tif cost < mincost:\n\t\tmincost = cost\n\t\tmint = i\nprint(int(mint), int(mincost))", "n = int(input())\nl = list(map(int, input().split()))\nans = [0] * 101\nfor i in range(1, 101):\n    for k in range(n):\n        ans[i] += max(abs(l[k] - i) - 1, 0)\ncnt = [100000000, 100000000]\nfor i in range(1, 101):\n    if cnt[1] > ans[i]:\n        cnt[0] = i\n        cnt[1] = ans[i]\nprint(cnt[0], cnt[1])", "n=int(input())\nar=list(map(int,input().split()))\ndef f(i):\n    ans=0\n    for e in ar:\n        if(e==i):continue\n        else:ans+=abs(e-i)-1\n    return ans\na=float('inf')\nb=0\nfor x in range(1,1001):\n    if(f(x)<a):\n        a=f(x)\n        b=x\nprint(b,a)", "n = int(input())\na = [int(i) for i in input().split()]\nmi = 10 ** 8\nx = -1\nfor i in range(1, 111):\n    s = 0\n    for j in range(n):\n        if not i - 1 <= a[j] <= i + 1:\n            if a[j] < i - 1:\n                z = i - 1 - a[j]\n            else:\n                z = a[j] - i - 1\n            s += z\n    if s < mi:\n        mi = s\n        x = i\nprint(x, mi)\n"]