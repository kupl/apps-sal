["data = input().split(\" \")\nn = int(data[0])\nm = int(data[1])\ndebts = []\ntotal = 0\nfor i in range(n):\n\tdebts.append(0)\nfor i in range(m):\n\tdata = input().split(\" \")\n\tdata = [int(x) for x in data]\n\tdebts[data[0]-1] -= data[2]\n\tdebts[data[1]-1] += data[2]\n\nfor i in range(len(debts)):\n\tif debts[i] < 0:\n\t\ttotal += (debts[i]*-1)\n\nprint(total)", "def debt(n, r):\n    for i in range(n):\n        a, b, c = [int(i) for i in input().split()]\n        r[a-1] -= c\n        r[b-1] += c\n    r = [abs(i) for i in r]\n    return int(sum(r)/2)\n\ndef main():\n    n, m = [int(i) for i in input().split()]\n    r = [0 for i in range(n)]\n    print(debt(m, r))\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split());\nmas = [0] * (n + 1);\nfor i in range (m) :\n    a, b, c = map(int, input().split());\n    mas[b] += c;\n    mas[a] -= c;\n\nsum = 0;\nfor i in mas :\n    sum += max (i, 0);\nprint (sum);", "n, m = map(int, input().split());\nmas = [0] * (n + 1);\nfor i in range (m) :\n    a, b, c = map(int, input().split());\n    mas[b] += c;\n    mas[a] -= c;\n\nsum = 0;\nfor i in mas :\n    sum += max (i, -i);\nprint (int(sum / 2));", "n, m = map(int, input().split())\np = [0] * (n + 1)\nfor i in range(m):\n    a, b, d = map(int, input().split())\n    p[a] += d\n    p[b] -= d\nprint(sum(abs(i) for i in p) // 2)", "n,m = list(map(int,input().split()))\nxs = [0]*n\nfor _ in range(m):\n    a,b,c = list(map(int,input().strip().split()))\n    xs[a-1] -= c\n    xs[b-1] += c\nprint(sum(x for x in xs if x>0))\n", "n, k = map(int, input().split())\np = [0] * (n + 1)\nfor i in range(k):\n    a, b, d = map(int, input().split())\n    p[a] += d\n    p[b] -= d\nprint(sum(map(abs, p)) // 2)", "n,m = (map(int,input().split()))\ns = [0] * n\nfor i in range(m):\n    a,b,c = (map(int,input().split()))\n    s[a-1] -= c\n    s[b-1] += c\nprint(sum(s[i] for i in range(n) if s[i] > 0))", "__author__ = 'asmn'\nn, m = tuple(map(int, input().split()))\nl = [0] * n\nfor i in range(m):\n    a, b, c = tuple(map(int, input().split()))\n    l[a - 1] += c\n    l[b - 1] -= c\n\nprint(sum(abs(x) for x in l)//2)", "n,m = map(int,input().split())\ndebts = [0]*n\ncredit = [0]*n\nfor cont in range(0,m):\n    x,y,c = map(int, input().split())\n    debts[x-1] += c\n    credit[y-1] += c\n\ntotal = [0]*n\nfor cont in range(0,n):\n    total[cont] = debts[cont]-credit[cont]\n\nris = 0\nfor n in total:\n    if n > 0:\n        ris += n\n\nprint(ris)", "n,m=list(map(int,input().split()))\nd=[0]*n\nfor i in range(m):\n    a,b,c=list(map(int,input().split()))\n    d[a-1]-=c\n    d[b-1]+=c\nans=0\nfor i in range(n):\n    if d[i]>0: ans+=d[i]\nprint(ans)\n", "n,m=map(int,input().split())\nf=[[0 for _ in range(n)] for _ in range(n)]\nfor i in range(m):\n    a,b,c=map(int,input().split())\n    f[a-1][b-1]=c\nfor i in range(n):\n    for j in range(n):\n        if f[i][j]>0:\n            for k in range(n):\n                if f[j][k]>0:\n                    buf=min(f[i][j],f[j][k])\n                    f[i][j]-=buf\n                    f[j][k]-=buf\n                    f[i][k]+=buf\nfor i in range(n):\n    f[i][i]=0\nprint(sum(map(sum,f)))", "# -*- coding: utf-8 -*-\n\nn, m = list(map(int, input().split()))\nabc = [list(map(int, input().split())) for i in range(m)]\n\nmat = [[0]*n for i in range(n)]\nfor t in abc:\n    mat[t[0]-1][t[1]-1] = t[2]\n    \ntotal = 0\nfor i in range(n):\n    s = sum(mat[i][:]) - sum([mat[x][i] for x in range(n)])\n    if s < 0:\n        continue;\n    total += s\nprint(total)\n", "R = lambda: map(int, input().split())\nn, m = R()\np = [0] * n\nfor i in range(m):\n  a, b, c = R()\n  p[a - 1] -= c\n  p[b - 1] += c\nprint(sum(i for i in p if i > 0))", "n, m = map(int, input().split())\np = [0] * (n + 1)\nfor i in range(m):\n    a, b, c = map(int, input().split())\n    p[a], p[b] = p[a] - c, p[b] + c\nprint(sum(x for x in p if x > 0))", "n, m = map(int, input().split())\ne = [[0] * n for i in range(n)]\nfor i in range(m):\n    a, b, c = map(int, input().split())\n    e[a - 1][b - 1] += c\n    e[b - 1][a - 1] -= c\ncnt = 0\nfor i in range(n):\n    cnt1 = 0\n    for j in range(n):\n        cnt1 += e[i][j]\n    cnt += abs(cnt1)\nprint(cnt // 2)", "n,m = list(map(int, input().split()))\ndebt=[0]*(n+1)\nfor i in range(m):\n\ta,b,c = list(map(int, input().split()))\n\tdebt[a]-=c\n\tdebt[b]+=c\nans=0\nfor i in debt:\n\tif i>0:\n\t\tans+=i\nprint(ans)\n", "from sys import stdin\n\nn, m = list(map(int, input().split()))\nowes = [0 for i in range(n+1)]\n\nfor i in range(m):\n    a, b, c = list(map(int, input().split()))\n    owes[a] += c\n    owes[b] -= c\n\nsol = 0\nfor owe in owes:\n    if (owe > 0):\n        sol += owe\n\nprint(sol)\n", "R = lambda: map(int, input().split())\nn, m = R()\np = [0] * n\nfor i in range(m):\n  a, b, c = R()\n  p[a - 1] -= c\n  p[b - 1] += c\nprint(sum(i for i in p if i > 0))", "n,m=list(map(int,input().split()))\nl=[0 for i in range(n+3)]\nfor i in range(m):\n    x,y,c=list(map(int,input().split()))\n    l[x]+=c\n    l[y]-=c\ns=0\nfor i in l:\n    s+=max(i,0)\nprint(s)\n", "n, m = list(map(int, input().split(' ')))\nhave = (n + 1) * [0]\nfor _ in range(m):\n    person_1, person_2, owns_ = list(map(int, input().split(' ')))\n    have[person_1] += owns_\n    have[person_2] -= owns_\n\nprint(sum(i for i in have if i > 0))\n", "n, m = list(map(int, input().split()))\n\nms = [[0, 0] for i in range(n)]\nfor i in range(m):\n    a, b, c = list(map(int, input().split()))\n    ms[a-1][0] += c\n    ms[b-1][1] += c\n\nsol = 0\nfor i in range(n):\n    sol += max(ms[i][0] - ms[i][1], 0)\n\nprint(sol)\n", "R = lambda: list(map(int, input().split()))\n\nn, m = R()\n\np = [0] * n\n\nfor i in range(m):\n\n  a, b, c = R()\n\n  p[a - 1] -= c\n\n  p[b - 1] += c\n\nprint(sum(i for i in p if i > 0))\n\n\n\n# Made By Mostafa_Khaled\n", "n,m=map(int,input().split())\nbaaki=[0]*15000\nfor i in range(m):\n    x,y,cbaaki=map(int,input().split())\n    baaki[x]+=cbaaki \n    baaki[y]-=cbaaki \nsm=0 \nfor i in baaki:\n    if i>0:\n        sm+=i \nprint(sm)"]