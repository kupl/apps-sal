["n = int(input())\ndp = [0] * (n + 1)\nmaxlev = 0\nmod = 1000000007\nlst = \"s\"\ndp[0] = 1\nfor i in range(n):\n  s = input()\n  if lst == \"f\":\n    for j in reversed(range(1, maxlev+2)):\n      dp[j] = dp[j-1]\n    maxlev += 1\n    dp[0] = 0\n  else:\n    sum = 0\n    for j in reversed(range(0, maxlev+1)):\n      sum = (sum + dp[j]) % mod\n      dp[j] = sum\n  lst = s\nres = 0\nfor i in range(0, maxlev + 1):\n  res = (res + dp[i]) % mod\nprint(res)", "n = int(input())\n\nMODULO = 10 ** 9 + 7\ni = 0\ndp = [[0 for i in range(n + 2)] for j in range(n + 2)]\ndp[0][0] = 1\n\nnew_array = [0] * (n + 2)\nold_array = [0] * (n + 2)\nnew_array[0] = 1\n\nfor i in range(n):\n    c = input()[0]\n    old_array = new_array\n    new_array = [0] * (n + 2)\n    if c == 'f':\n        for j in range(n):\n            new_array[j + 1] = old_array[j]\n    else:\n        j = i + 1\n        tmp = 0\n        while j >= 0:\n            tmp = (tmp + old_array[j]) % MODULO\n            new_array[j] = tmp % MODULO\n            j -= 1\n    #print(old_array)\n\ntmp = 0\n\n\n\nfor i in range(n):\n    tmp = (tmp + old_array[i]) % MODULO\nprint(tmp)\n", "import sys\nsys.setrecursionlimit(1000000)\nread = sys.stdin.readline\n\nMOD = 1000000007\n\nN = int(read())\nsts = [read().strip() for _ in range(N)]\n\nind = [0 for _ in range(N)]\nind[0] = 1\nindent = 0\nlast = 'f'\nfor st in sts:\n    if last != 'f':\n        for i in range(indent, -1, -1):\n            ind[i] += ind[i+1]\n            ind[i] %= MOD\n    if st == 'f':\n        indent += 1\n        for i in range(indent, 0, -1):\n            ind[i] += ind[i-1]\n            ind[i-1] = 0\n    last = st\n    # print(ind)\n\nans = 0\nfor i in range(indent+1):\n    ans += ind[i]\n    ans %= MOD\nprint(ans)", "n = int(input())\na = [input() for _ in range(n)]\n\nMOD = int(1e9+7)\nconst = 5001\nlevels = [0]*const\nlevels[0] = 1\n\nfor i in range(n-1):\n    if a[i]=='f':\n        for j in range(const-2,-1,-1):\n            levels[j+1]=levels[j]\n        levels[0]=0\n    else:\n        cumsum = 0\n        for j in range(const-1,-1,-1):\n            cumsum += levels[j]\n            cumsum%=MOD\n            levels[j]=cumsum\nprint(sum(levels)%MOD)\n", "# standard library# {{{\nimport sys\nimport time\nimport re\nimport string\nimport math\nfrom operator import itemgetter\nfrom collections import Counter\nfrom collections import deque\nfrom collections import defaultdict as dd\nimport fractions\nfrom heapq import heappop, heappush, heapify\nimport array\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right\nfrom copy import deepcopy as dcopy\nimport itertools\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9+7\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n# }}}\n\n# input\nN = int(input())\n\ndef solve():\n    A = []\n    for n in range(N):\n        A.append(input())\n\n    dp = [[0]*(N+1) for n in range(N+1)]\n    dp[0][0] = 1\n    pre_a = A[0]\n    for i, a in enumerate(A):\n        if i == 0: continue\n        # print(i, pre_a, a)\n        if pre_a == 'f':\n            for j in reversed(list(range(i+1))):\n                dp[i][j] = dp[i-1][j-1]\n        else:\n            s = 0\n            for j in reversed(list(range(i))):\n                s += dp[i-1][j]\n                s %= mod\n                dp[i][j] = s\n\n        pre_a = a\n        # print(np.array(dp))\n\n    res = 0\n    for v in dp[N-1]:\n        res += v\n        res = res % mod\n    print(res)\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "n=int(input())\nL=[0]*5000\nL[0]=1\nf=1\nfor i in range(n) :\n    C=input()\n    if C=='f' :\n        f=f+1\n    else :\n        for j in range(1,f) :\n            L[j]=(L[j]+L[j-1])%1000000007\nprint(L[f-1])\n        \n            \n        \n    \n", "from sys import stdin, stdout\n\nn = int(stdin.readline())\ndp = [[0 for i in range(n + 10)] for j in range(n + 10)]\n\nMOD = 10 ** 9 + 7\ndp[-1][0] = 1\nprevious = []\n\nfor i in range(n):\n    s = stdin.readline().strip()\n    \n    if not previous or previous[-1] != 'f':\n        cnt = 0\n            \n        for j in range(n, -1, -1):\n            cnt = (cnt + dp[i - 1][j]) % MOD\n            dp[i][j] = cnt\n    else:\n        cnt = 0\n            \n        for j in range(n + 1, -1, -1):\n            cnt = dp[i - 1][j - 1]\n            dp[i][j] = cnt\n    \n    previous.append(s)\n\nans = 0\nfor i in range(n + 1):\n    ans = (ans + dp[n - 1][i]) % MOD\n\nstdout.write(str(ans))", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# read = lambda: map(int, input().split())\n\n\nL = int(1e9 + 7)\nN = int(input())\ndp = [0 for _ in range(N)]\ndp[0] = 1\nindex = 0\nfor _ in range(N):\n    s = input()\n    if s == 'f':\n        index += 1\n    if s == 's':\n        for i in range(1, index + 1):\n            dp[i] = (dp[i - 1] + dp[i]) % L\nprint(dp[index])\n", "n=int(input())\nL=[0]*5000\nL[0]=1\nf=1\nfor i in range(n) :\n    C=input()\n    if C=='f' :\n        f=f+1\n    else :\n        for j in range(1,f) :\n            L[j]=(L[j]+L[j-1])%1000000007\nprint(L[f-1])", "n = int(input())\n\nar = []\n\ndp = [0] * 5005\ncum = [0] * 5005\n\nmod = int( 1e9 + 7 )\n\nfor i in range( n ):\n        s = input()\n        ar.append( s )\n        \nfor i in range( 5000 ):\n        dp[i] = 1\n        cum[i] = dp[i] + ( cum[i - 1] if i > 0 else 0 )\n        cum[i] = cum[i] - mod if cum[i] >= mod else cum[i]\n        \nfor i in range( n -  2, -1, - 1 ):\n        for j in range( 5000 ):\n                dp[j] = dp[j + 1] if ar[i] == \"f\" else cum[j]\n                dp[j] = dp[j] - mod if dp[j] >= mod else dp[j]\n                cum[j] = dp[j] + ( cum[j - 1] if j > 0 else 0 )\n                cum[j] = cum[j] - mod if cum[j] >= mod else cum[j]\n\nprint( dp[0] )", "n = int(input())\na = [1]\nflag = False\nfor i in range(n):\n    if flag:\n        a.append(0)\n        flag = False\n    else:\n        s = 0\n        for i in range(len(a)):\n            t = a[i]\n            a[i] += s\n            s += t\n            a[i] %= 10**9 + 7\n            s %= 10**9 + 7\n    if input() == 'f':\n        flag = True\n\n##    print(a)\nprint(sum(a) % (10**9 + 7))\n    \n", "n = int(input())\ndp = [1]\nfor IND in range(n):\n    c = input()\n    if c == \"f\":\n        dp.insert(0,0)\n    else:\n        for i in range(len(dp)-2, -1, -1): dp[i] = (dp[i] + dp[i+1]) % 1000000007\nprint(dp[0])", "MOD=int(1e9+7)\nn=int(input())\na=[]\nfor i in range(n):\n    a.append(input())\na=\"\".join(a)\ndp,s=[],[]\nfor i in range(n+1):\n    dp.append([0]*(n+1))\n    s.append([0]*(n+1))\ndp[0][0]=1\ns[0][0]=1\nfor i in range(1,n):\n    for j in range(0,n):\n        if a[i-1]=='f':\n            dp[i][j+1]=dp[i-1][j]%MOD\n        elif a[i-1]=='s':\n            dp[i][j]=s[i-1][j]%MOD\n    \n    for j in reversed(list(range(n))):\n        s[i][j]+=(dp[i][j]+s[i][j+1])%MOD\nprint(s[n-1][0]%MOD)\n#sum from all levels\n\n", "import sys\ninput = sys.stdin.readlines()\nn = int(input[0].strip())\nm = 10**9 + 7\ncurr = [0] * (n+20)\nlast = [0] * (n+20)\ncurr[0] = 1\nfor s in range(1,n):\n    last, curr = curr, last\n    if input[s]=='f\\n':\n        curr[0] = 0\n        for i in range(len(last)-1):\n            curr[i+1] = last[i]\n    elif input[s]=='s\\n':\n        curr[-1] = 0\n        for i in range(len(last)-2, -1, -1):\n            curr[i] = (curr[i+1] + last[i]) % m\ns = 0\nfor x in curr:\n    s = (s + x) % m\nprint(s)", "def add(a,b):\n\ta = a%(1000000000+7)\n\tb=b%(1000000000+7)\n\treturn (a+b)%(1000000000+7)\n\n\n\nn  =int(input())\ni=1\nstatements = []\ndp = [[0 for i in range(n)] for i in range(n)]\nprefix = [[0 for i in range(n)] for i in range(n)]\nwhile(i<=n):\n\ts = input()\n\tstatements.append(s)\n\ti+=1\n\ndp[0][0]=1\nprefix[0][0]=1\nj=1\nwhile(j<n):\n\tdp[0][j]=0\n\tprefix[0][j] = dp[0][j] + prefix[0][j-1]\n\tj+=1\n\ni=1\nwhile(i<n):\n\tif(statements[i-1]=='f'):\n\t\tj=1\n\t\twhile(j<n):\n\t\t\tdp[i][0]=0\n\t\t\tprefix[i][0]=0\n\t\t\tdp[i][j] = dp[i-1][j-1]\n\t\t\tprefix[i][j] = add(prefix[i][j-1],dp[i][j])\n\n\t\t\tj+=1\n\telse:\n\t\tj=0\n\t\twhile(j<n):\n\t\t\tif(j==0):\n\t\t\t\tdp[i][j] = prefix[i-1][n-1]\n\t\t\telse:\n\t\t\t\tdp[i][j] = prefix[i-1][n-1] - prefix[i-1][j-1]\n\t\t\tprefix[i][j] = add(prefix[i][j-1],dp[i][j])\n\t\t\tj+=1\n\t# print(prefix)\n\ti+=1\n\n# i=0\n# while(i<n):\n# \tj=0\n# \twhile(j<n):\n# \t\tprint(dp[i][j])\n# \t\tj+=1\n# \ti+=1\n\n# print(dp)\n\nans = 0\nj=0\nwhile(j<n):\n\tans=add(ans,dp[n-1][j])\n\tj+=1\n\nprint(ans%(1000000000+7))\n\n", "def add(x,j):\n\tx = x % (1000000000+7)\n\tj=j % (1000000000+7)\n\treturn (x+j) % (1000000000+7)\n\nstatements = []\nn  =int(input())\ni=1\nj=1\ntemp = [[0 for i in range(n)] for i in range(n)]\nearlier = [[0 for i in range(n)] for i in range(n)]\ntemp[0][0]=1\nearlier[0][0]=1\n\nwhile(i<=n):\n\ts = input()\n\tstatements.append(s)\n\ti+=1\nwhile(j<n):\n\ttemp[0][j]=0\n\tearlier[0][j] = temp[0][j] + earlier[0][j-1]\n\tj+=1\ni=1\nwhile(i<n):\n\tif(statements[i-1]=='f'):\n\t\tj=1\n\t\twhile(j<n):\n\t\t\ttemp[i][0]=0\n\t\t\tearlier[i][0]=0\n\t\t\ttemp[i][j] = temp[i-1][j-1]\n\t\t\tearlier[i][j] = add(earlier[i][j-1],temp[i][j])\n\n\t\t\tj+=1\n\telse:\n\t\tj=0\n\t\twhile(j<n):\n\t\t\tif(j==0):\n\t\t\t\ttemp[i][j] = earlier[i-1][n-1]\n\t\t\telse:\n\t\t\t\ttemp[i][j] = earlier[i-1][n-1] - earlier[i-1][j-1]\n\t\t\tearlier[i][j] = add(earlier[i][j-1],temp[i][j])\n\t\t\tj+=1\n\ti+=1\n\nans = 0\nj=0\nwhile(j<n):\n\tans=add(ans,temp[n-1][j])\n\tj+=1\n\nprint(ans%(1000000000+7))", "n = int(input())\ndp = [1]\nfor IND in range(n):\n    c = input()\n    if c == \"f\":\n        dp.insert(0,0)\n    else:\n        for i in range(len(dp)-2, -1, -1): dp[i] = (dp[i] + dp[i+1]) % 1000000007\nprint(dp[0])", "n = int(input())\ndp = [1]\nfor IND in range(n):\n    c = input()\n    if c == \"f\":\n        dp.insert(0,0)\n    else:\n        for i in range(len(dp)-2, -1, -1): dp[i] = (dp[i] + dp[i+1]) % 1000000007\nprint(dp[0])\n", "n = int(input())\nA = []\n\nfor i in range(n):\n    x = input()\n    A.append(x)\n\ndp = [[0 for i in range(n+1)] for j in range(n+1)]\n\nmod = 10**9 + 7\n\nfor i in range(n+1):\n    dp[n-1][i] = 1\n\nfor line in range(n-2, -1, -1):\n    sum = 0\n    if A[line]=='s':\n        for indent in range(n):\n            sum = (sum + dp[line+1][indent])%mod\n            dp[line][indent] = sum\n    else:\n        for indent in range(n):\n            dp[line][indent] = dp[line+1][indent+1]\n\n    \nprint(dp[0][0])\n            \n", "n = int(input())\ndp = [1]\nfor i in range(n):\n    c = input()\n    if c == \"f\":\n        dp.insert(0,0)\n    else:\n        for j in range(len(dp) - 2, -1, -1):\n            dp[j] = (dp[j] + dp[j + 1]) % 1000000007\nprint(dp[0])\n", "# DP 1\n\n# n = int(input())\n# dp = [1]\n# for i in range(n):\n#     c = input()\n#     if c == \"f\":\n#         dp.insert(0,0)\n#     else:\n#         for j in range(len(dp) - 2, -1, -1):\n#             dp[j] = (dp[j] + dp[j + 1]) % 1000000007\n#     print(dp)\n# print(dp[0])\n\nn = int(input())\ndp = [1]\nfor i in range(n):\n    c = input()\n    if c == \"f\":\n        dp.append(0)\n    else:\n        for j in range(1, len(dp)):\n            dp[j] = (dp[j] + dp[j - 1]) % 1000000007\nprint(dp[-1])\n", "n = int(input())\ndp = [0] * 5000\nMOD = 10 ** 9 + 7\nf = 1\ndp[0] = 1\nfor i in range(n):\n    a = input()\n    if a == \"f\":\n        f += 1\n    else:\n        for j in range(1, f):\n            dp[j] = dp[j] + dp[j - 1]\n            dp[j] %= MOD\n\nprint(dp[f - 1])", "def solve():\n    rd = lambda : list(map(int, input().split()))\n    n = int(input())\n    p = []\n    for i in range(n):\n        p.append(input())\n    dp = [0 for i in range(n)]\n    dp[0] = 1\n    indent = 0\n    L = int(1e9 + 7)\n    for i, val in enumerate(p):\n        if val == 'f':\n            indent += 1\n        else:\n            for j in range(1, indent + 1):\n                dp[j] = (dp[j - 1] + dp[j]) % L\n    print(dp[indent])\n\nsolve()", "from sys import stdout\n\nm = int(1e9 + 7)\nn = int(input())\na = [0]*n\na[0] = 1\nk = 0\nfor _ in range(n):\n  s = input()  \n  if s == \"f\":\n    k += 1\n  elif s == \"s\":\n    for j in range(1, k+1):\n      a[j] = (a[j-1]+a[j])%m\nprint(a[k])\n", "MOD = 1000000007\n\nn = int(input())\np = ''.join([input() for _ in range(n)])\n\ndp = [[0] * 5005 for _ in range(n + 1)]\ndp[0][0] = 1\n\ni = 1\nfor c in p:\n    if c == 'f':\n        for j in range(n - 1, -1, -1):\n            dp[i][j] = dp[i - 1][j - 1] if j - 1 >= 0 else 0\n    else:\n        for j in range(n - 1, -1, -1):\n            dp[i][j] = (dp[i - 1][j] + dp[i][j + 1]) % MOD\n    i += 1\n\nprint(dp[n][0] % MOD)\n\n"]