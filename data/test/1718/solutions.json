["N, K = map(int,input().split())\nA = list(map(int,input().split()))\n\nif N == K:\n  print(1)\nelse:\n  ans = 1\n  N -= K\n  while N > 0:\n    ans += 1\n    N -= (K-1)\n  print(ans)", "import collections\n\nn, k = map(int, input().split())\n\na = list(map(int, input().split()))\nc= collections.Counter(a)\n\nlength = n - c.most_common()[0][1] + 1\n\nif length == 1:\n    ans = 0\nelse:\n    ans = (length + k - 3) // (k - 1)\n    \nprint(ans)", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nimport math\nif n > k :\n    min = math.ceil((n-k)/(k-1))\n    print((min+1))\n\nelif n == k :\n    print((1))\n", "import math\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nans = math.ceil((N-1)/(K-1))\nprint(ans)", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush,heapify\nfrom bisect import bisect_left,bisect_right\nimport sys,math,itertools,fractions,pprint\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn,k = inpl()\na = inpl()\nk -= 1\nprint((n-1+k-1)//k)", "import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef MI1(): return list(map(int1, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\nINF = float('inf')\n# from bisect import bisect_left, bisect_right\n# from heapq import heapify, heappop, heappush\nfrom math import ceil, floor, log2, log, sqrt\nfrom itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\nfrom collections import deque, defaultdict\nfrom pprint import pprint\n# import numpy as np    # cumsum\n\ndef solve():\n    N, K = MI()\n\n    print((ceil((N-1) / (K-1))))\n\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif n == k:\n  print(1)\nelse:\n  print(-(-(n-1)//(k-1)))", "N,K = map(int,input().split())\nA = list(map(int,input().split()))\nind = A.index(1)\nn = ind//(K-1)\nif ind%(K-1):\n    n += 1\nm = (N-1-ind)//(K-1)\nif (N-1-ind)%(K-1):\n    m += 1\ncmin = n+m\nfor i in range(max(1,ind+K-N),min(ind,K-1)+1):\n    n = (ind-i)//(K-1)\n    if (ind-i)%(K-1):\n        n += 1\n    m = (N-ind-K+i)//(K-1)\n    if (N-ind-K+i)%(K-1):\n        m += 1\n    cnt = n+m+1\n    cmin = min(cmin,cnt)\nprint(cmin)", "N,K=map(int,input().split())\nA=list(map(int, input().split()))\n\na,mod=divmod(N-1,K-1)\nif mod==0:\n    print(a)\nelse:\n    print(a+1)", "N, K = map(int, input().split())\nA = list(map(int, input().split()))\nN -= K\nans = 1\nif N <= 0:\n\tprint(ans)\n\treturn\nimport math\nans += math.ceil(N / (K-1))\nprint(ans)", "# \u5165\u529b\u5024\u304c1~N\u306e\u6574\u6570\u3067\u3042\u308b\u524d\u63d0\u304c\u3042\u3063\u3066\u6210\u308a\u7acb\u3064\n# \u2193\u306f\u516c\u5f0f\u306e\u89e3\u7b54\u4f8b\u7684\u306a\u306e\nn, k = map(int, input().split());print((n-1+k-2)//(k-1))", "from sys import stdin, stdout # only need for big input\nfrom itertools import permutations\n\ndef read_int_from_line():\n    return list(map(int, input().split()))\n\ndef solve():\n    n, k = read_int_from_line()\n    a = read_int_from_line()\n    if (n-1) % (k-1) == 0:\n        ans = (n-1) // (k-1)\n    else:\n        ans = (n-1) // (k-1) + 1\n    print(ans)\n    \ndef main():\n    solve()\n\ndef __starting_point():\n    main()\n__starting_point()", "# \u554f\u984c\u5236\u7d04\u898b\u9593\u9055\u3048\u30661~N\u306e\u4efb\u610f\u306e\u6570\u5b57\u3092\u3068\u308b\u3068\u52d8\u9055\u3044\u3057\u3066\u4f5c\u3063\u305f\u30b3\u30fc\u30c9(\u4e00\u5fdc\u901a\u308b)\n# 4 2\n# 1 2 1 2\n# \u2191\u306e\u30b1\u30fc\u30b9\u306f\u5b58\u5728\u3057\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3060\u304c\u3001\u6240\u8b02\u89e3\u7b54\u4f8b\u306e\u5834\u54083\u3068\u306a\u308b\u304c\u3053\u306e\u30b3\u30fc\u30c9\u3060\u30682\u3068\u306a\u308b\nN,K = map(int,input().split())\narr = list(map(int,input().split()))\n \ncnt = 0\ncorrection_value = 0\nfor i in range(0,N,K-1):\n  cnt+=1\n  if i+correction_value+K >= N:\n    break\n  else:\n    for j in range(1,K):\n      arr[j] = min(arr[j],arr[j-1])\n    if arr[i+correction_value+K] == arr[i+correction_value+K-1]:\n      correction_value += 1\nprint(cnt)", "n,k = list(map(int,input().split()))\nList = list(map(int,input().split()))\nimport math\nans = math.ceil((n-1)/(k-1))\nprint(ans)\n", "n,k = map(int,input().split())\na = list(map(int,input().split()))\n\nif k == n:\n    print(1)\n    return\nif k == 1:\n    print(n)\n    return\n\nans = 1\nn -= k\nif n%(k-1) == 0:\n    print(ans + n//(k-1))\nelse:\n    print(ans+1+n//(k-1))", "import sys\nN, K = map(int, input().split())\nA = list(map(int,input().split()))\n\nif K == 2:\n    print(N-1)\n    return\n\nif N%K==0:\n    print((len(A)-1)//(K-1))\nelse:\n    print((len(A)-1)//(K-1) + 1)", "\ndef main():\n    n,k = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    n = n-1\n    k = k-1\n    print((n//k if n%k == 0 else (n//k + 1)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k = map(int,input().split())\nprint((n-2)//(k-1)+1)", "N, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nind1 = 0\nfor i, a in enumerate(A):\n    if a == 1:\n        ind1 = i\n        break\nleft = ind1\nright = N - ind1 - 1\nans = 0\n\na, b = divmod(left, K-1)\na += 1 if b > 0 else 0\nans += a\nif b > 0:\n    right -= (K - 1 - b)\na, b = divmod(right, K-1)\na += 1 if b > 0 else 0\nans += a\n\nprint(ans)", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nprint((n-1+k-2)//(k-1))", "import math\nN,K = map(int,input().split())\na = list(map(int,input().split()))\nprint(math.ceil((N-1)/(K-1)))", "N,K = map(int,input().split())\nA = list(map(int,input().split()))\nn = N-1\nk = K-1\nans = (n+k-1)//k\nprint(ans)", "N,K=list(map(int,input().split()))\na=list(map(int,input().split()))\n\ntmp=(N-1)//(K-1)\nif tmp*(K-1)==N-1:\n    print(tmp)\nelse:\n    print((tmp+1))\n\n", "import math\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\nmin_a = min(A)\nc = A.count(min_a)\nans = math.ceil((N-c)/(K-1))\nprint(ans)", "N,K=map(int,input().split())\n*A,=map(int,input().split())\nnow=0\nans=0\nwhile now<N:\n    ans+=1\n    now+=K\n    if now>=N:break\n    now-=1\nprint(ans)", "import math\nn,k = list(map(int, input().split()))\nA = list(map(int, input().split())) \n#cnt=A.index(1)+1\nprint((math.ceil((n-1)/(k-1))))\n", "import math\n\ndef main():\n    n,k = list(map(int,input().split()))\n    a = list(map(int,input().split()))\n    n = n-1\n    k = k-1\n    print((math.ceil(n/k)))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,k=map(int,input().split())\na=input()\nprint((n-2)//(k-1)+1)", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nn = n-k\nif n%(k-1) == 0:\n    print(n//(k-1)+1)\nelse:\n    print(n//(k-1)+2)", "N,K=map(int,input().split())\nif (N-K)%(K-1)==0:\n  print((N-K)//(K-1)+1)\nelse:\n  print((N-K)//(K-1)+2)", "n,k= list(map(int, input().split())) \nlis= list(map(int, input().split()))\nleft=0\nif n==k:\n    print((1))\n    return\nif (n//2)<k:\n    print((2))\n    return\nfor i in range(n):\n    if lis[i]==1:\n        break\n    else:\n        left+=1\nright=n-left-1\nk=k-1\nleft_ans=0\nright_ans=0\nif left%k==0:\n    left_ans+=(left//k)\n    if right%k==0:\n        left_ans+=(right//k)\n    else:\n        left_ans+=((right//k)+1)\nelse:\n    left_ans+=((left//k)+1)\n    right_tmp=right-(k-(left%k))\n    if right_tmp%k==0:\n        left_ans+=(right_tmp//k)\n    else:\n        left_ans+=((right_tmp//k)+1)\n        \nif right%k==0:\n    right_ans+=(right//k)\n    if left%k==0:\n        right_ans+=(left//k)\n    else:\n        right_ans+=((left//k)+1)\nelse:\n    right_ans+=((right//k)+1)\n    left_tmp=left-(k-(right%k))\n    if left_tmp<1:\n        pass\n    elif left_tmp%k==0:\n        right_ans+=(left_tmp//k)\n    else:\n        right_ans+=((left_tmp//k)+1)\nprint((min(left_ans,right_ans)))\n", "N,K = list(map(int,input().split()))\nA = list(int(x) for x in input().split())\nif N <= 3:\n    print((1))\n    return\nprint((-(-(N-1)//(K-1))))\n", "N, K = map(int, input().split())\nvA = list(map(int, input().split()))\nans = -(-(N-1)//(K-1))\nprint(ans)", "N, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nprint(-((1-N)//(K-1)))", "import math\nn,k = map(int,input().split())\na = list(map(int,input().split()))\n\nstart = a.index(1)\n\nleft = start \n\nx = math.ceil(left/(k-1))\nexcess = x*(k-1)-left\n\nright = max((n - start - 1 - excess),0)\n\ny = math.ceil(right/(k-1))\n\nprint(x+y)", "n,k = map(int,input().split())\nans = 0\ns = 0\nwhile s < n:\n    if s == 0:\n        s += k\n    else:\n        s += k-1\n    ans += 1\nprint(ans)", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nn,k = list(map(int,readline().split()))\n*a, = list(map(int,readline().split()))\n\nans = 1+(n-1-1)//(k-1)\nprint(ans)\n\n", "N,K=map(int,input().split())\nA = list(map(int,input().split()))\nval_memo = {}\nfor i in range(N):\n    if A[i] in val_memo:\n        val_memo[A[i]] += 1\n    else:\n        val_memo[A[i]] = 1\n\nval_memo = sorted(val_memo.items(), key=lambda x: x[0])\ntotal = N-val_memo[0][1]\nif total%(K-1):\n    print(total//(K-1)+1)\nelse:\n    print(total//(K-1))", "n, k = map(int, input().split())\nprint((n-2)//(k-1) + 1)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-10-03 20:30:05 +0900\n# LastModified: 2020-10-03 20:50:25 +0900\n#\n\n\nimport os\nimport sys\nimport numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    A = np.array(list(map(int, input().split())))\n    cnt = 0\n    i = 0\n    while i != N-1:\n        if i == 0:\n            A[i: i+K] = np.min(A[i: i+K])\n            cnt += 1\n            i = i+K-1\n\n        elif i+K < N:\n            A[i: i+K] = A[i]\n            cnt += 1\n            i = i+K-1\n\n        else:\n            A[i: -1] = A[i]\n            cnt += 1\n            break\n\n    print(cnt)\n\n\n\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\n\nn, k = map(int, input().split())\nnumbers = list(map(int, input().split()))\n# len_nums = len(numbers)\n# min_index = numbers.index(1) + 1\n# if min_index % (k - 1) == 0 or min_index == 1:\n#     before_time = min_index // (k - 1)\n# else:\n#     before_time = min_index // (k - 1) + 1\n\n# if (len_nums - min_index) % (k - 1) == 0:\n#     after_time = (len_nums - min_index) // (k - 1)\n# else:\n#     after_time = (len_nums - min_index) // (k - 1)\n# print(before_time + after_time)\nprint(math.ceil((n - 1) / (k - 1)))", "import sys\nimport math\nimport itertools\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    N, K = MI()\n    ans = 1\n    N -= K\n    ans-=(-N//(K-1))\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int,input().split())\na = list(map(int,input().split()))\ncnt, ttl = 1, k\nwhile ttl < n:\n  ttl += k - 1\n  cnt += 1\nprint(cnt)", "import sys, bisect, math, itertools, string, queue, copy, heapq, collections, itertools\n# input = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplt(n): return [tuple(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\nn,k = inpm()\nA = inpl()\n\nprint(math.ceil((n-1)/(k-1)))", "N,K=map(int,input().split())\ndata=list(map(int,input().split()))\ns=(N-K)//(K-1)\na=(N-K)%(K-1)\nif a==0:\n    print(s+1)\nelse:\n    print(s+2)", "import sys\nimport math\nimport collections\ninput = sys.stdin.readline\n\nN, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\nans = math.ceil((N-1)/(K-1))\nprint(ans)\n", "import math\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nprint(math.ceil((N-1)/(K-1)))", "import math\nN, K = list(map(int, input().split()))\nA = input()\nprint((math.ceil((N-1)/(K-1))))\n", "# coding: utf-8\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    ans = 0 if (N - 1) % (K - 1) == 0 else 1\n    ans += (N - 1) // (K - 1)\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,K=map(int,input().split())\ns=(N-K)//(K-1)\na=(N-K)%(K-1)\nif a==0:\n    print(s+1)\nelse:\n    print(s+2)", "from math import ceil\nn,k = map(int,input().split(\" \"))\ninput()\nprint(ceil((n-1)/(k-1)))", "import sys\nimport math\ndef input(): return sys.stdin.readline().strip()\n\nsys.setrecursionlimit(250000)\n\ndef main():\n    n,k = map(int, input().split())\n    a = list(map(int,input().split()))\n\n    sum_ = n\n    count = 0\n    while sum_ > 0:\n        if sum_ > k:\n            sum_ = sum_ - k + 1\n            count += 1\n        else:\n            sum_ = 0\n            count += 1\n    print(count)\ndef __starting_point():\n    main()\n__starting_point()", "n,k = map(int,input().split())\nn -= k\nif n%(k-1) == 0:\n    print(1+n//(k-1))\nelse:\n    print(2+n//(k-1))", "import math\n\nn,k = map(int,input().split())\nAi = list(map(int,input().split()))\n#a = Ai.index(1)\n\nprint(math.ceil((n-k) / (k-1) + 1))", "import math\nN,K,*A=map(int,open(0).read().split())\n\nprint(int(math.ceil((N-1)/(K-1))))", "N, K = list(map(int,input().split()))\nA = list(map(int,input().split()))\nans = 0\nif N <= K:\n    ans = 1\nelse:\n    x = K\n    ans = 1\n    while(x < N):\n        ans += 1\n        x += (K - 1)\n    \nprint(ans)\n\n\n", "from collections import Counter,defaultdict,deque\nfrom heapq import heappop,heappush\nfrom bisect import bisect_left,bisect_right \nimport sys,math,itertools,fractions,pprint\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\nINF = float('inf')\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\n\nn,k = inpl()\na = inpl()\nnow = 0\nres = 0\nfor x in a:\n    if x != 1: now += 1\n    if now == k-1:\n        res += 1\n        now = 0\nif now: res += 1\nprint(res) ", "N,K=list(map(int, input().split()))\nA=list(map(int, input().split()))\nprint((N+K-3)//(K-1))", "n,k=map(int,input().split())\n_=list(map(int,input().split()))\nprint((n-1+k-2)//(k-1))", "# coding:UTF-8\nimport sys\nfrom math import ceil\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\n\nN, K = list(map(int, input().split()))     # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u9023\u7d9a\u6570\u5b57\nA = list(map(int, input().split()))     # \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u9023\u7d9a\u6570\u5b57\n\nres = ceil((N - K) / (K - 1)) + 1\nif N <= K:\n    res = 1\n\n\nprint((\"{}\".format(res)))\n\n", "n, k = map(int,input().split())\na = list(map(int,input().split()))\ncnt, ttl = 1, k\nwhile ttl < n:\n  ttl += k - 1\n  cnt += 1\nprint(cnt)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC\n# CreatedDate:  2020-10-03 20:30:05 +0900\n# LastModified: 2020-10-24 19:05:05 +0900\n#\n\n\nimport os\nimport sys\nimport numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    A = np.array(list(map(int, input().split())))\n    cnt = 0\n    i = 0\n    while i != N-1:\n        if i == 0:\n            A[i: i+K] = np.min(A[i: i+K])\n            cnt += 1\n            i = i+K-1\n\n        elif i+K < N:\n            A[i: i+K] = A[i]\n            cnt += 1\n            i = i+K-1\n\n        else:\n            A[i: -1] = A[i]\n            cnt += 1\n            break\n#        print(A)\n\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n\nN -= K\nres = 1\nif N > 0:\n    res += (N + (K - 1) - 1) // (K - 1)\nprint(res)\n", "N,K=map(int,input().split())\na=list(map(int,input().split()))\nif N==K:\n\tprint(1)\nelse:\n\ttmp=N-K\n\tif tmp%(K-1)==0:\n\t\tprint(1+tmp//(K-1))\n\telse:\n\t\tans=2+tmp//(K-1)\n\t\tprint(ans)", "N,K = map(int,input().split())\nA = list(map(int,input().split()))\n\nif N <= K:\n    print(1)\nelse:\n    if (N-1) % (K-1) == 0:\n        print((N-1) // (K-1))\n    else:\n        print((N-1) // (K-1) + 1)", "N, K = input().split()\nN=int(N)\nK=int(K)\nimport math\nif N==K:\n  print(1)\nelse:\n  print(math.ceil((N-K)/(K-1))+1)", "n, k = list(map(int, input().split()))\na_s = list(map(int, input().split()))\nprint(((n - 2) // (k-1) + 1))\n", "import math\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nif N == K:\n    print(1)\n    return\n\nmi = 0\nfor i in range(N):\n    if A[i] == 1:\n        mi = i\n        break\n\nmc = N\nfor i in range(K):\n    c = 1\n    if mi - i > 0:\n        c += math.ceil((mi - i) / (K-1))\n    if mi + K - 1 - i < N:\n        c += math.ceil((N - (mi + K - 1 - i) - 1) / (K - 1))\n    if c < mc:\n        mc = c\nprint(mc)", "import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return list(map(int, input().split()))\ndef MI1(): return list(map(int1, input().split()))\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\nINF = float('inf')\n# from bisect import bisect_left, bisect_right\n# from heapq import heapify, heappop, heappush\nfrom math import ceil, floor, log2, log, sqrt\nfrom itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\nfrom collections import deque, defaultdict\nfrom pprint import pprint\n# import numpy as np    # cumsum\n\ndef solve():\n    N, K = MI()\n    A = LI()\n\n    print((ceil((N-1) / (K-1))))\n\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "n, k = map(int, input().split())\nA = list(map(int, input().split()))\nindex = A.index(1)\nans = index // (k - 1) + (n - index - 1) // (k - 1)\nright = index % (k - 1)\nleft = (n - index - 1) % (k - 1)\nif right:\n    if left:\n        if right + left <= k - 1:\n            ans += 1\n        else:\n            ans += 2\n    else:\n        ans += 1\nelif left:\n    ans += 1\nprint(ans)", "import sys\ndef MI(): return list(map(int,sys.stdin.readline().rstrip().split()))\ndef LI(): return list(map(int,sys.stdin.readline().rstrip().split()))  #\u7a7a\u767d\u3042\u308a\n\n\nN,K = MI()\nA = LI()\n\nprint(((N-1+K-2)//(K-1)))\n", "import math\nn, k = map(int, input().split())\nA = list(map(int, input().split()))\n\nA_min = min(A)\nN = n-len([i for i in A if i == A_min])\nprint(math.ceil(N/(k-1)))", "n,k = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\nkey = 2*k - 2\n\nif key >n:\n    if k == n:\n        ans = 1\n    else:\n        ans = 2\n\nelif n % key == 0:\n    ans = 2*(n // key)\n\nelse:\n    if n % key == 1:\n        ans = 2*(n // key)\n    elif (n % key) + 1 > k:\n        ans = 2*(n // key) + 2\n    else:\n        ans = 2*(n // key) + 1\n\nprint(ans)\n", "import math\nN , K = list(map(int,input().split()))\nprint((math.ceil((N-1)/(K-1))))\n", "N, K = list(map(int,input().split()))\nA = list(map(int,input().split()))\n\ni = N\ncount = 0\n\nif N == K :\n    count = 1\n\nelse:\n    while True:\n        count += i//K\n        i = i//K + i%K\n        if i <= K :\n            break\n    count += 1\n\nprint(count)\n", "# coding: utf-8\n# Your code here!\n\nimport math\n\nN, K = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n\ncn = 1\n\n\nZ = N - K\n\ncn = cn + math.ceil(Z / (K-1))\n\nprint(cn)\n", "import math\n\n\ndef lmi():\n    return list(map(int, input().split()))\n\ndef main():\n    N, K = lmi()\n    A = lmi()\n    one_idx = A.index(1)\n    L = one_idx\n    R = N - one_idx - 1\n    ans = L // (K -1) + R // (K - 1)\n    ans += math.ceil((L % (K - 1) + R % (K - 1)) / (K - 1))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "import sys\npin=sys.stdin.readline\n#\u308f\u304b\u3089\u3093\u308f\u3053\u308c\ndef main():\n  N,K=map(int,pin().split())\n  A=list(map(int,pin().split()))\n  print((N-2)//(K-1)+1)\n  return\nmain()", "3\n# coding: utf-8\n\nimport sys\n\nN, K = (int(x) for x in input().split())\nA = [int(x) for x in input().split()]\n\nif N <= K:\n    print(1)\n    return\n\nN -= K\n\nret = 1\nret += N // (K-1)\nif N % (K-1)  != 0:\n    ret += 1\n\nprint(ret)", "import sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10**6)\n\ndef inp():\n    return int(input())\ndef inps():\n    return input().rstrip()\ndef inpl():\n    return list(map(int, input().split()))\ndef inpls():\n    return list(map(str, input().split()))\n\n# import decimal\n# from decimal import Decimal\n# decimal.getcontext().prec = 10\n\n# from heapq import heappush, heappop, heapify\n# import math\nfrom math import gcd, floor, ceil, factorial\nimport itertools as it\nfrom collections import deque, defaultdict\nfrom collections import Counter\n\ndef lcd(a, b):\n    return a * b // gcd(a, b)\n\ndef chmin(dp, i, x):\n    if x < dp[i]: dp[i] = x; return True\n    return False\n\ndef chmax(dp, i, x): \n    if x > dp[i]: dp[i] = x; return True\n    return False\n\n# ---------------------------------------\n\nN, K = inpl()\nA = inpl()\n\nif N == K:\n    print((1))\n    return\n\nidx = 0\nfor i in range(N):\n    if A[i] == 1:\n        idx = i\n        break\n\nleft = N - i\nright = N - left - 1\n\nstart = max(0, (K - 1) - right)\nend = max(K - 1, left)\nans = 10 ** 10\nfor i in range(start, end + 1):\n    l = left - i\n    r = right - (K - 1 - i)\n    if l == 0:\n        l = 0\n    else:\n        l = (l - 0.5) // (K - 1) + 1\n    if r == 0:\n        r = 0\n    else:\n        r = (r - 0.5) // (K - 1) + 1\n    ans = min(ans, int(l + r + 1))\nprint(ans)\n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\n\nfor i in range(10**5):\n    if (k-1)*i+1 >= n:\n        break\n\nprint(i)", "from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,datetime\ndef inpl(): return list(map(int, input().split()))\ndef inpl_s(): return list(input().split())\n\nN, K = map(int, input().split())\nA = inpl()\nN -= 1\nK -= 1\nprint((N + K - 1) // K)", "def main():\n    n, k = map(int, input().split())\n    ans = 0 if (n - 1) % (k - 1) == 0 else 1\n    ans += (n - 1) // (k - 1)\n    print(ans)\n \n \ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n#\n# FileName: \tC_fix\n# CreatedDate:  2020-12-29 11:19:58 +0900\n# LastModified: 2020-12-29 11:33:43 +0900\n#\n\n\nimport os\nimport sys\n# import numpy as np\n# import pandas as pd\n\n\ndef main():\n    N, K = list(map(int, input().split()))\n    A = list(map(int, input().split()))\n    A_min = min(A)\n    cnt = 0\n    for i in range(0, N-1, K-1):\n        cnt += 1\n    print(cnt)\n\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\nN,K = map(int,input().split())\nl = list(map(int,input().split()))\n\nprint((N-1+K-2)//(K-1))", "N,K = map(int,input().split())\narr = list(map(int,input().split()))\n\ncnt = 0\ncorrection_value = 0\nfor i in range(0,N,K-1):\n  cnt+=1\n  if i+correction_value+K >= N:\n    break\n  else:\n    for j in range(1,K):\n      arr[j] = min(arr[j],arr[j-1])\n    if arr[i+correction_value+K] == arr[i+correction_value+K-1]:\n      correction_value += 1\nprint(cnt)", "n,k=map(int,input().split())\na=list(map(int,input().split()))\nprint((n-1)//(k-1) if (n-1)%(k-1)==0 else (n-1)//(k-1)+1)", "n, k = map(int, input().split())\nx = list(map(int, input().split()))\n\ncount = 0\ncount_list = []\n\nfor _ in x:\n    count += 1\n    if _ == 1:\n        break\n\nfor _ in range(k):\n    count_list.append((count-1-_-0.1)//(k-1)+(n-count+_-0.1)//(k-1)+2)\n\nprint(int(min(count_list)))", "n,k=list(map(int, input().split()))\nans=(n-1)//(k-1)\nif (n-1)%(k-1)==0:\n  print(ans)\nelse:\n  print((ans+1))\n", "N,K=map(int,input().split())\nA=list(map(int, input().split()))\nif N==K:\n    print(1)\n    return\nelse:\n    a,mod=divmod(N-1,K-1)\n    if mod==0:\n        print(a)\n    else:\n        print(a+1)", "n,k=map(int,input().split())\na=input()\nprint((n-2)//(k-1)+1)", "n,k = map(int,input().split())\na = list(map(int,input().split()))\nprint(-((-n+1)//(k-1)))", "n, k = list(map(int, input().rstrip().split(\" \")))\nA = list(map(int, input().rstrip().split(\" \")))\n\nminValue = 100000\nminIndex = -1\n\nfor i in range(n):\n    if(minValue > A[i]):\n        minValue = A[i]\n        minIndex = i\n\nans = ((n-2) // (k-1)) + 1\nprint(ans)\n", "# 34\nN, K = map(int, input().split())\na = list(map(int, input().split()))\n\nmn = min(a)\ncount_mn = a.count(mn)\nans = 0\nfor i in range(count_mn):\n    N -= K\n    ans += 1\n    if N < 0: break\nK -= 1\nif N > 0:\n    ans += N // K if N % K == 0 else N // K + 1\nprint(ans)", "n, k = list(map(int, input().split()))\n_ = input()\n\nl = n - k\nx = (l + (k - 1 - 1)) // (k - 1)\nprint(x+1)", "import math\nn, k = list(map(int, input().strip().split(' ')))\n\nwindow = k - 1\nres = math.ceil((n - 1) / window)\nprint(res)\n", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nm = min(a)\nt = a.count(m)\nh = n - t\nprint((h//(k-1)+1-int(h%(k-1)==0)))\n", "#https://qiita.com/goto_yuta_/items/1c104e332351ab9389a6\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\nimport sys\nsys.setrecursionlimit(10 ** 6)#pypy3\u306fnumpy\u3092\u4f7f\u3048\u306a\u3044\uff0c\u3053\u306e\u884c\u3092\u6d88\u3059\u3053\u3068\uff0e\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef II(): return int(sys.stdin.readline())\n# \u5165\u529b\u5168\u3066\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LI(): return list(map(int, sys.stdin.readline().split()))\n# \u5165\u529b\u306e\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LC(): return list(input())\n# \u5165\u529b\u306e\u6570\u5b57\u5217\u30921\u6841\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef IC():return [int(c) for c in input()]\n#\u5c11\u306a\u30441\u884c\u306eint\u5909\u6570\u306b\u5165\u308c\u308b\u69d8\u306e\u5165\u529b\uff0e\u4f8b:N, A, B = map(int, input().split())\ndef MI(): return map(int, input().split())\ndef solve():\n    N,K = MI()\n    A = LI()\n    One = A.index(1)\n    from math import ceil, floor\n    if(N==K):\n        print(1)\n        return\n    else:\n        print(ceil((N-K)/(K-1))+1)\n    return\nsolve()", "n, k = map(int, input().split())\nprint((n-2)//(k-1) + 1)"]