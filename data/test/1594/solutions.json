["n, m = [int(i) for i in input().split()]\nc = []; t = []\nfor i in range(n):\n\tsong = input().split()\n\tc.append(int(song[0]))\n\tt.append(int(song[1]))\nreq = [int(i) for i in input().split()]\n\nreq_index = total_length = 0\nfor i in range(len(c)):\n\ttotal_length += c[i] * t[i]\n\twhile(req_index < len(req)):\n\t\tif(req[req_index] <= total_length):\n\t\t\tprint(i + 1)\n\t\t\treq_index += 1\n\t\telse:\n\t\t\tbreak\n\tif req_index == len(req): break", "#CF302B\nr = input().split(' ')\nn = int( r[ 0 ] )\nm = int( r[ 1 ] )\ns = []\n\nfor i in range( 0 , n ):\n    r = input().split(' ')\n    s.append( int( r[ 0 ] ) * int( r[ 1 ] ) )\n    if i > 0:\n        s[ i ] += s[ i - 1 ]\n\nr = input().split(' ')\nct = 0\nfor i in range( 0 , m ):\n    v = int( r[ i ] )\n    while s[ ct ] < v :\n        ct += 1\n    print( ct + 1 )\n", "I=[int(i) for i in input().split()]\nn, m, pl, s = I[0], I[1], [], 0\nfor i in range(n):\n    I=[int(i) for i in input().split()]\n    s+=I[0]*I[1]\n    pl.append(s)\nM=[int(i) for i in input().split()]\nindex=0\nfor i in M:\n    for j in range(index,n):\n        if i<=pl[j]:\n            print(j+1)\n            index=j\n            break\n", "def main(n,m,c,t,moments):\n\ts = 0\n\tanswer = []\n\tlast = 0\n\n\tfor i in range(n):\n\t\ts += c[i]*t[i]\n\t\twhile last<m:\n\t\t\titem = moments[last]\n\t\t\tif item<=s:\n\t\t\t\tanswer.append(i+1)\n\t\t\telse:\n\t\t\t\tbreak\n\t\t\tlast+=1\n\t\tif last>=m:\n\t\t\tbreak\n\n\ts = ''\n\tfor a in answer:\n\t\ts+=str(a)+'\\n'\n\treturn s[:-1]\n\ndef init():\n\tn,m = list(map(int, input().split()))\n\tc = []\n\tt = []\n\n\tfor i in range(n):\n\t\tq,w = list(map(int, input().split()))\n\t\tc.append(q)\n\t\tt.append(w)\n\n\tmoments = list(map(int, input().split()))\n\n\tprint(main(n,m,c,t,moments))\n\ninit()", "def f():\n    n, m = map(int, input().split())\n    d = [0] * (n + 1)\n    for i in range(1, n + 1):\n        a, b = map(int, input().split())\n        d[i] = d[i - 1] + a * b\n        \n    t = list(map(int, input().split()))\n    j = 0\n    for i in range(1, n + 1):\n        while t[j] <= d[i]:\n            t[j] = i\n            j += 1\n            if j == m:\n                print('\\n'.join(str(k) for k in t))\n                return\nf()", "n, m = map(int, input().split())\nd, t = [0] * (n + 1), [0] * m\nfor i in range(1, n + 1):\n    a, b = map(int, input().split())\n    d[i] = d[i - 1] + a * b\ni = 1\nfor j, v in enumerate(map(int, input().split())):\n    while v > d[i]: i += 1      \n    t[j] = i\nprint('\\n'.join(str(i) for i in t))", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Nov  3 20:30:05 2015\n\n@author: kevin\n\"\"\"\n\ntableautaille=input().split(\" \");\n\nn=int(tableautaille[0])\nm=int(tableautaille[1])\ntabfinal=[]\nfor i in range(n):\n\ttab=input().split(\" \")\n\tc=int(tab[0])\n\tt=int(tab[1])\n\ttabfinal+=[c*t]\n\ntableau=input().split(\" \");\nres=0\nindice=0\nfor i in range(m):\n\tsearch=int(tableau[i])\n\twhile(search>res+tabfinal[indice]):\n\t\tres+=tabfinal[indice]\n\t\tindice+=1\n\tprint(indice+1)\n", "def main():\n    from sys import stdin\n    l = stdin.read().splitlines()\n    it, res, now = iter(enumerate(l)), [], 0\n    next(it)\n    for v in map(int, l[-1].split()):\n        while now < v:\n            i, s = next(it)\n            c, t = list(map(int, s.split()))\n            now += c * t\n        res.append(i)\n    print('\\n'.join(map(str, res)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nsong_end = [None] * n\nfor i in range(n):\n    c, t = list(map(int, input().split()))\n    song_end[i] = (song_end[i - 1] if i > 0 else 0) + c * t\n\nmoments = list(map(int, input().split()))\ncurr_song = 0\nres = []\nfor mom in moments:\n    while mom > song_end[curr_song]:\n        curr_song += 1\n    res.append(str(curr_song + 1))\n\nprint('\\n'.join(res))\n", "n,m=list(map(int,input().split()))\ns=[0]\nk=0\nl=0\nfor i in range(n):\n    c,t=list(map(int,input().split()))\n    s.append(s[i]+c*t)\n   # print(s[i])\nara= [int(x) for x in input().split()]\n\nfor j in range(m):\n    while ara[j]>s[l]:\n        l+=1\n    print(l)\n\n", "n,m=list(map(int,input().split()))\ns=[0]\nk=0\nl=0\nfor i in range(n):\n    c,t=list(map(int,input().split()))\n    s.append(s[i]+c*t)\n   # print(s[i])\nara= [int(x) for x in input().split()]\n\nfor j in range(m):\n    while ara[j]>s[l]:\n        l+=1\n    print(l)\n", "n,m=list(map(int,input().split()))\nA=[]\nfor i in range(n):\n\tc,t=list(map(int,input().split()))\n\tA.append(c*t)\ni=p=0\nfor v in [int(x) for x in input().split()]:\n\twhile(p<v):p,i=p+A[i],i+1\n\tprint(i)\n", "R=lambda:list(map(int,input().split()))\nn,m=R()\nA=[]\nwhile(n>0):\n\tn-=1\n\tc,t=R()\n\tA.append(c*t)\ni=p=0\nfor v in R():\n\twhile(p<v):\n\t\tp+=A[i]\n\t\ti+=1\n\tprint(i)\n", "n,m=map(int,input().split())\ns=[0]\nk=0\nl=0\nfor i in range(n):\n    c,t=map(int,input().split())\n    s.append(s[i]+c*t)\n   # print(s[i])\nara= [int(x) for x in input().split()]\n\nfor j in range(m):\n    while ara[j]>s[l]:\n        l+=1\n    print(l)", "import sys\n\ndef dist(x1, y1, x2, y2):\n  return abs(x2 - x1) + abs(y2 - y1)\n\n\nn, m = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\nsongs = []\n\nfor i in range(n):\n  cur = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  songs.append(cur)\n\nqueries = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  \nstart_time = 0  # could be 1 kek\n\nintervals = []\ncur_time = start_time\nfor i in range(0, len(songs)):\n  song = songs[i] # times, duration\n  times = song[0]\n  dur = song[1]\n  new_time = cur_time + (times * dur)\n  intervals.append(new_time)\n  cur_time = new_time\n\n\nqueries = sorted(queries)\n\nidx = 0\nfor q in queries:\n  while(q > intervals[idx]):\n    idx += 1\n  print(idx + 1)", "import sys\n\ndef dist(x1, y1, x2, y2):\n  return abs(x2 - x1) + abs(y2 - y1)\n\n\nn, m = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\nsongs = []\n\nfor i in range(n):\n  cur = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  songs.append(cur)\n\nqueries = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  \nstart_time = 0  # could be 1 kek\n\nintervals = []\ncur_time = start_time\nfor i in range(0, len(songs)):\n  song = songs[i] # times, duration\n  times = song[0]\n  dur = song[1]\n  new_time = cur_time + (times * dur)\n  intervals.append(new_time)\n  cur_time = new_time\n\n\nqueries = sorted(queries)\n\nidx = 0\nfor q in queries:\n  while(q > intervals[idx]):\n    idx += 1\n  print(idx + 1)", "import sys\n\ndef dist(x1, y1, x2, y2):\n  return abs(x2 - x1) + abs(y2 - y1)\n\n\nn, m = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\nsongs = []\n\nfor i in range(n):\n  cur = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  songs.append(cur)\n\nqueries = [int(x) for x in sys.stdin.readline().strip().split(\" \")]\n  \nstart_time = 0  # could be 1 kek\n\nintervals = []\ncur_time = start_time\nfor i in range(0, len(songs)):\n  song = songs[i] # times, duration\n  times = song[0]\n  dur = song[1]\n  new_time = cur_time + (times * dur)\n  intervals.append(new_time)\n  cur_time = new_time\n\n\nqueries = sorted(queries)\n\nidx = 0\nfor q in queries:\n  while(q > intervals[idx]):\n    idx += 1\n  print(idx + 1)", "# import sys\n# sys.stdin=open('F:\\\\C\\\\Script\\\\input.txt','r')\n# sys.stdout=open('F:\\\\C\\\\Script\\\\output.txt','w')\n# sys.stdout.flush()\n\n# MOD = 1000000007\nI = lambda : [int(i) for i in input().split()]\n\nn , m = I()\nl = []\ntemp = I()\nl.append(temp[0]*temp[1])\nfor _ in range(1,n):\n\tk = I()\n\tl.append(l[_-1] + k[0]*k[1])\n# print (l)\ns = I()\nj = 0\nfor i in s:\n\tif i < l[j]:\n\t\tprint ( j + 1)\n\telse:\n\t\twhile i > l[j]:\n\t\t\tj += 1\n\t\tprint (j + 1)", "n,m=list(map(int,input().split()))\n\nA=[]\n\nfor i in range(n):\n\n\tc,t=list(map(int,input().split()))\n\n\tA.append(c*t)\n\ni=p=0\n\nfor v in [int(x) for x in input().split()]:\n\n\twhile(p<v):p,i=p+A[i],i+1\n\n\tprint(i)\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "n, m = list(map(int, input().split()))\narr = []\nfor i in range(n):\n\tc, t = list(map(int, input().split()))\n\tarr.append(c * t)\ni, p = 0, 0\nv = [int(x) for x in input().split()]\nfor j in v:\n    while (p < j):\n        p, i = p+arr[i], i+1\n    print(i)\n", "n, m = list(map(int, input().split()))\narr = []\nfor i in range(n):\n    c, t = list(map(int, input().split()))\n    arr += [c * t]\ni, p = 0, 0\nv = [int(x) for x in input().split()]\nfor j in v:\n    while (p < j):\n        p, i = p+arr[i], i+1\n    print(i)\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\nn, m = mints()\na = [0]\ns = 0\nfor i in range(n):\n\tc,t = mints()\n\ts += c*t\n\ta.append(s)\nj = 0\nfor i in mints():\n\twhile not (i-1 >= a[j] and i-1 < a[j+1]):\n\t\tj += 1\n\tprint(j+1)\n", "# from dust i have come, dust i will be\n\nimport bisect\n\nn, m = map(int, input().split())\n\nT = [0] * n\nfor i in range(n):\n    t, c = map(int, input().split())\n    T[i] = t * c\n\nm = list(map(int, input().split()))\n\nfor i in range(1, n):\n    T[i] += T[i - 1]\n\nfor i in range(len(m)):\n    i = bisect.bisect_left(T, m[i], 0, n)\n    print(i+1)", "s = input()\n\nn, m = list(map(int, s.split(' ')))\n\nl = [0]\n\nfor i in range(n):\n    s = input()\n    t1, t2 = list(map(int, s.split(' ')))\n    l.append(l[-1] + t1*t2)\n\nxs = list(map(int, input().split(' ')))\n\nj = 0\ni = 0\nwhile i < m:\n    if xs[i] <= l[j]:\n        print(j)\n        i += 1\n    else:\n        j += 1\n"]