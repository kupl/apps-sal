["l=[]\r\nfor _ in range(int(input())):\r\n\tl.append(int(input()))\r\navg=0;l.sort()\r\nfor i in range(0,len(l)):\r\n\tj=0;n=len(l)-1\r\n\twhile j<n:\r\n\t\ts=l[j]+l[n]\r\n\t\tif s>2*l[i]:\r\n\t\t\tn-=1\r\n\t\telif s<2*l[i]:\r\n\t\t\tj+=1\r\n\t\telse:\r\n\t\t\tavg+=1;break\r\nprint(avg)", "def avv(l,s,n):\r\n\ti=0\r\n\twhile i<n:\r\n\t\tss=l[i]+l[n]\r\n\t\tif ss>s:\r\n\t\t\tn-=1\r\n\t\telif ss<s:\r\n\t\t\ti+=1\r\n\t\telse:\r\n\t\t\treturn True\r\n\treturn False\r\n\r\nl=[]\r\nfor _ in range(int(input())):\r\n\tl.append(int(input()))\r\navg=0;l.sort()\r\nfor i in range(len(l)):\r\n\t\tif avv(l,2*l[i],len(l)-1):\r\n\t\t\tavg+=1\r\nprint(avg)", "n=int(input())\npari=[]\ndispari=[]\nfor _ in range(n):\n    appo=int(input())\n    if appo%2==0:\n        pari.append(appo)\n    else:\n        dispari.append(appo)\ndiz={}\nfor i in range(len(pari)-1):\n    for j in range(i+1, len(pari)):\n        diz[(pari[i]+pari[j])>>1]=1 \nfor i in range(len(dispari)-1):\n    for j in range(i+1, len(dispari)):\n        diz[(dispari[i]+dispari[j])>>1]=1 \ncounter=0\nfor el in pari:\n    if el in diz:\n        counter+=1\nfor el in dispari:\n    if el in diz:\n        counter+=1\nprint(counter)", "n=int(input())\narray=[]\nfor _ in range(n):\n    array.append(int(input()))\ndiz={}\nfor i in range(n-1):\n    for j in range(i+1, n):\n        appo=(array[i]+array[j])\n        if appo%2==0:\n            diz[appo>>1]=1 \ncounter=0\nfor el in array:\n    if el in diz:\n        counter+=1\nprint(counter)", "N = int(input())\r\nnumbs = []\r\ndic = {}\r\ne1 = set()\r\nfor i in range(N):\r\n    numbs.append(int(input()))\r\n    dic[numbs[i]] = 0\r\n    e1.add(numbs[i])\r\nfor i in range(N):\r\n    dic[numbs[i]] = dic[numbs[i]] + 1\r\ns = set()\r\navg_ele = 0\r\nfor i in range(N-1):\r\n    for j in range(i+1, N):\r\n        avg = (numbs[i] + numbs[j])/2\r\n        if avg in e1 and avg not in s:\r\n            avg_ele += dic[avg]\r\n            s.add(avg)\r\nprint(avg_ele)   ", "# cook your dish here\nfrom itertools import combinations as c\ntry:\n    n = int(input())\n    dt = {}\n    x = []\n    for _ in range(n):\n        t = int(input())\n        x.append(t)\n        dt[t] = dt.get(t,0) + 1\n    ctr = 0\n    for i in range(n-1):\n        for j in range(i+1,n):\n            t = x[i]+x[j]\n            if t%2 == 0:\n                t >>= 1\n                if t in dt:\n                    ctr += dt[t]\n                    del dt[t]\n    print(ctr)\nexcept:\n    pass", "# cook your dish here\nfrom itertools import combinations as c\ntry:\n    n = int(input())\n    x = []\n    odd,even = [],[]\n    for _ in range(n):\n        xx = int(input())\n        x.append(xx)\n        if xx %2 == 0:\n            even.append(xx)\n        else:\n            odd.append(xx)\n    o = list(c(odd,2))\n    e = list(c(even,2))\n    #print(x,o,e)\n    ctr = 0\n    dt = {}\n    for i in x:\n        dt[i] = dt.get(i,0)+1\n    tt = list(dt.values())\n    ctr += sum(tt) - tt.count(1)\n    for i in o:\n        a,b = i\n        if a != b and (a+b)//2 in x:\n            ctr+=1\n    for i in e:\n        a,b = i\n        if a!= b and (a+b)//2 in x:\n            ctr+=1\n    print(ctr)\nexcept:\n    pass", "N = int(input())\r\nA = sorted([int(input()) for _ in range(N)])\r\nrets = 0\r\nfor i in range(N):\r\n    x, y = 0,  N - 1\r\n    curr = 2 * A[i]\r\n    while x < y:\r\n        sums = A[x] + A[y]\r\n        if sums < curr: x += 1\r\n        elif sums > curr: y -= 1\r\n        else:\r\n            rets += 1\r\n            break\r\nprint(rets)\r\n\r\n", "def bin_search(A, val):\r\n    l=0;    flag=0\r\n    r=len(arr)-1\r\n    while l<r: \r\n        #print(l, r)\r\n        if ((A[l] + A[r])== 2*val): \r\n            flag+=1\r\n            break\r\n        elif (A[l] + A[r] < 2*val): \r\n            l += 1\r\n        elif(A[l]+ A[r]>2*val) :\r\n            r -= 1\r\n    return flag\r\n\r\n\r\nn=int(input())\r\narr=[]\r\nfor i in range(n):\r\n    x=int(input())\r\n    arr.append(x)\r\n    \r\ncnt=0\r\narr.sort()\r\n#print(arr)\r\nfor i in range(n):\r\n    x=bin_search(arr, arr[i])\r\n    if(x==1):\r\n        cnt+=1\r\nprint(cnt)", "def func(A, arr_size, val): \r\n      \r\n    # sort the array \r\n    A.sort()\r\n    l = 0\r\n    r = arr_size-1\r\n      \r\n    # traverse the array for the two elements \r\n    while l<r: \r\n        if (A[l] + A[r] == val): \r\n            return 1\r\n        elif (A[l] + A[r] < val): \r\n            l += 1\r\n        else: \r\n            r -= 1\r\n    return 0\r\n    \r\ndef main():\r\n    n=int(input())\r\n    arr=[]\r\n    for i in range(n):\r\n        x=int(input())\r\n        arr.append(x)\r\n    cnt=0\r\n    \r\n    if(n==1):\r\n        print(1)\r\n    else:\r\n        for i in range(n):\r\n            #print(arr)\r\n            x=func(arr, n, arr[i]*2)\r\n            if(x==1):\r\n                cnt+=1\r\n        \r\n        print(cnt)\r\n    \r\nmain()", "def func(A, arr_size, val): \r\n      \r\n    # sort the array \r\n    A.sort()\r\n    l = 0\r\n    r = arr_size-1\r\n      \r\n    # traverse the array for the two elements \r\n    while l<r: \r\n        if (A[l] + A[r] == val): \r\n            return 1\r\n        elif (A[l] + A[r] < val): \r\n            l += 1\r\n        else: \r\n            r -= 1\r\n    return 0\r\n    \r\ndef main():\r\n    n=int(input())\r\n    arr=[]\r\n    for i in range(n):\r\n        x=int(input())\r\n        arr.append(x)\r\n    cnt=0\r\n    \r\n    for i in range(n):\r\n        #print(arr)\r\n        x=func(arr, n, arr[i]*2)\r\n        if(x==1):\r\n            cnt+=1\r\n    \r\n    print(cnt)\r\n    \r\nmain()"]