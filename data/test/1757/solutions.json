["d = [1, 1]\nn = int(input())\nwhile d[-1] < n:\n\td.append(d[-1] + d[-2])\ns = set(d)\nres = ''\nfor i in range(1, n + 1):\n\tif i in s:\n\t\tres += 'O'\n\telse:\n\t\tres += 'o'\nprint(res)", "R = lambda type_ = \"int\": list(map(eval(type_), input().split(' ')))\n\nn = int(input())\n\ns = ['o'] * n\n\ni = 1\nj = 1\n\nwhile j <= n:\n    s[j - 1] = 'O'\n    i, j = j, i + j\n\nprint(''.join(s))\n\n", "n = int(input())\nf = [1,1]\nfor i in range(n):\n    f.append(f[-1]+f[-2])\nf = set(f)\nans = []\nfor i in range(1, n+1):\n    if i in f:\n        ans.append('O')\n    else:\n        ans.append('o')\nprint(''.join(ans))", "\n\nn = int(input())\na =1\nb = 1\nx = ['o' for _ in range(n)]\nwhile (b <= n):\n    x[b - 1] = 'O'\n    a ^= b\n    b ^= a\n    a ^= b\n    b = a + b\n\nprint(''.join(x))", "n = int(input())\n\nfibs = set()\n\na, b = 1, 1\nwhile a <= 1000:\n    a, b = b, a + b\n    fibs.add(a)\n\nprint(''.join('O' if i in fibs else 'o' for i in range(1, n + 1)))\n", "ar=[1]+[0]*(2000)\nf1,f2=1,1\nwhile f1 <= len(ar):\n    ar[f1]=1\n    f1,f2=f1+f2,f1\nn=int(input())\ns=\"\"\nfor x in range(n):\n    s+=\"O\" if ar[x+1] else \"o\"\nprint(s)", "n = int(input())\nfib = [1, 1]\nfor i in range(2, 200):\n    fib.append(fib[i - 1] + fib[i - 2])\nfor i in range(1, n + 1):\n    if i in fib:\n        print('O', end='')\n    else:\n        print('o', end='')", "fib = [1, 1]\nfibs = set()\nfibs.add(1)\nfor i in range(50):\n    fib.append(fib[-1]+fib[-2])\n    fibs.add(fib[-1])\nfor i in range(1, int(input())+1):\n    print(\"O\" if i in fibs else \"o\", end=\"\")\n", "from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport sys\nsys.setrecursionlimit(1000000)\ndef fib():\n    ls = [1,1]\n    for i in range(100):\n        ls.append(ls[-1] + ls[-2])\n    return set(ls)\nn = int(input())\ns = []\nf = fib()\nfor i in range(1,n+1):\n    if i in f:\n        s.append('O')\n    else:\n        s.append('o')\nprint(''.join(s))\n\n", "fib1 = 1\nfib2 = 2\nn = int(input())\nans = 'O'\nfor i in range(2, 1 + n):\n    if (i < fib2):\n        ans += 'o'\n    else:\n        ans += 'O'\n        fib1, fib2 = fib2, fib1 + fib2\nprint(ans)", "\n\ndef main():\n    d = fib()\n    n = int(input())\n    s = ''\n    for i in range(n):\n        if i + 1 in d:\n            s += 'O'\n        else:\n            s += 'o'\n    print(s)\n\ndef fib():\n    res = {1, 2}\n    f1 = 1\n    f2 = 2\n    while f1 < 1010:\n        res.add(f1 + f2)\n        f1, f2 = f2, f1 + f2\n    return res\n\n\n\nmain()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n = int(input())\na = [0] * 1001\na[0] = 0\na[1] = 1\nd = set()\nd.add(0)\nd.add(1)\nfor i in range(2, 1001):\n    a[i] = a[i - 1] + a[i - 2]\n    d.add(a[i])\ns = \"\"\nfor i in range(1, n + 1):\n    if i in d:\n        s += \"O\"\n    else:\n        s += \"o\"\nprint(s)", "def main():\n  n = int(input())\n  name = [\"o\"] * n\n  b,c=1,1\n  while c <= n:\n    name[c - 1] = 'O'\n    b,c = c,b+c\n\n\n  print(''.join(name))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "f=[1,1]\nfor i in range(2,90):\n  f.append(f[i-1]+f[i-2])\n#print(f[-1])\nn=int(input())\nfor i in range(1,n+1):\n  if i in f:\n    print(\"O\",end=\"\")\n  else:\n    print(\"o\",end=\"\")", "n=int(input())\na=1\nb=1\nfib=[0 for i in range(1005)]\nfib[1]=1\nfor i in range(20):\n    try:\n        a,b=b,a+b\n        fib[b]=1\n    except:\n        break\nfor i in range(1,n+1):\n    if fib[i]==1:\n        print('O',end='')\n    else:\n        print('o',end='')\nprint()\n", "N = int(input())\nfib = [0, 1]\nwhile fib[-1] < 1000:\n\tfib.append(fib[-1] + fib[-2])\nfor i in range(1, N + 1):\n\tprint(\"O\" if i in fib else \"o\", end=\"\")\nprint()\n", "n = int(input())\n\nF = [1,2]\nfor i in range(100):\n    F.append(F[-1]+F[-2])\nF = set(F)\n\ns = ''.join('O' if i in F else 'o' for i in range(1,n+1))\nprint(s)\n", "n = int(input())\na = 1\nb = 1\nt = 2\nwhile a+b <= n:\n\tc = b\n\tb = a+b\n\ta = c\n\tt = t+1\nl = t*[1]\nfor i in range(2,t):\n\tl[i] = l[i-1]+l[i-2]\nk = ''\nfor i in range(n):\n\tif i+1 in l:\n\t\tk = k+'O'\n\telse:\n\t\tk = k+'o'\nprint(k)\n", "def gis():\n    return list(map(int, input().strip().split()))\n\n\ndef gi():\n    return int(input())\n\n\ndef gss():\n    return input().strip().split()\n\n\ndef problem():\n    n = gi()\n    f0 = 1\n    f1 = 1\n    f = set()\n    while f0 <= n:\n        f.add(f0)\n        c = f0+f1\n        f0=f1\n        f1=c\n    name = ''\n    for i in range(n):\n        if (i+1) in f:\n            name += 'O'\n        else:\n            name += 'o'\n    print(name)\n\ndef __starting_point():\n    problem()\n\n__starting_point()", "n = int(input())\nfib = [1]\na = 1\nb = 1\nfor i in range(0, 1000):\n    b = a + b\n    fib.append(b)\n    if b > 1000:\n        break\n    a, b = b, a\n\ns = \"\"\n\nfor i in range(1, n + 1):\n    if i in fib:\n        s += 'O'\n    else:\n        s += 'o'\n\nprint(s)\n", "n = int(input())\n\nans = ['o' for _ in range(n)]\nfib = [0, 1]\nwhile fib[-1] < n:\n    fib.append(fib[-2] + fib[-1])\nfor i in fib:\n    if 0 < i <= n:\n        ans[i - 1] = 'O'\nprint(''.join(ans))\n", "n = int(input())\nn1 = 1\nn2 = 1\ntemp = n2\ns = [\"o\"]*n\ns[0] = \"O\"\nwhile n >= n2:\n    s[n2-1] = \"O\"\n    temp = n2\n    n2 = n1 + n2\n    n1 = temp\nfor i in range(n):\n    print(s[i],end=\"\")\n", "n = int(input())\n\nfib = [1, 1]\n\nwhile fib[-1] < n:\n    fib.append(fib[-1] + fib[-2])\n\nfib = set(fib)\n\nprint(''.join([('o', 'O')[i in fib] for i in range(1, n + 1)]))\n", "n=int(input())\nf=[1,1]\nfor i in range(2,20):\n  f.append(f[i-1]+f[i-2])\nfor i in range(n):\n  if(i+1 in f):\n    print(\"O\",end=\"\")\n  else:\n    print(\"o\",end=\"\")        "]