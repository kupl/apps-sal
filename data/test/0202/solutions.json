["a, b = map(int, input().split())\nd, c = map(int, input().split())\nprint(max(abs(a - d), abs(b - c)))", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\ndx = abs(x1 - x2)\ndy = abs(y1 - y2)\n\nprint(max(dx, dy))\n", "x1, x2 = map(int, input().split())\nx3, x4 = map(int, input().split())\na = abs(x2 - x4)\nb = abs(x1 - x3)\nprint(max(a, b))", "x1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nprint(max(abs(x1 - x2), abs(y1 - y2)))", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        x1, y1 = list(map(int, input().split()))\n        x2, y2 = list(map(int, input().split()))\n        print(max(abs(x1 - x2), abs(y1 - y2)))\n\nexcept EOFError:\n    pass\n", "x,y = map(int,input().split())\na,b = map(int,input().split())\nprint(max(abs(x-a),abs(y-b)))", "#author=\"_rabbit\"\na,b=list(map(int,input().split()))\nc,d=list(map(int,input().split()))\nprint(max(abs(a-c),abs(b-d)))\n", "a,b=[int(x)for x in input().split()]\nx,y=[int(x)for x in input().split()]\nprint(max(abs(a-x),abs(b-y)))", "x1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx = abs(x2 - x1)\ny = abs(y2 - y1)\nprint(max(x, y))", "x1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nprint (max(abs(x1-x2), abs(y1-y2)))", "3\n\n(x1, y1) = input().split()\n(x1, y1) = (int(x1), int(y1))\n(x2, y2) = input().split()\n(x2, y2) = (int(x2), int(y2))\n\nprint(max(abs(x1-x2), abs(y1-y2)))\n", "anitonezkousejkontrolovat = input()\nvidimte = input()\nzacatek = [int(n) for n in anitonezkousejkontrolovat.split()]\nkonec = [int(n) for n in vidimte.split()]\nrozdil1 = abs(zacatek[0]-konec[0])\nrozdil2 = abs(zacatek[1]-konec[1])\nprint(max(rozdil1,rozdil2))\n\n", "from math import *\n\ns1 , s2 = input().split()\n\nx1 = int(s1)\ny1 = int(s2)\n\ns1 , s2 = input().split()\n\nx2 = int(s1)\ny2 = int(s2)\n\n\n\n\nprint( max ( abs(x1-x2) , abs(y1-y2)  ))\n", "a,b=list(map(int,input().split(\" \")))\nc,d=list(map(int,input().split(\" \")))\nprint(max(abs(a-c),abs(b-d)))\n", "x1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nx = abs(x1-x2)\ny = abs(y1-y2)\nb = max(x,y)\nprint(b)", "a,b=map(int,input().split())\nc,d=map(int,input().split())\nma= max( abs(a-c),abs(b-d))\nprint(ma)", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu Jan 21 14:59:34 2016\n\n@author: kebl4230\n\"\"\"\nstart = [int(entry) for entry in input().split()]\nend = [int(entry) for entry in input().split()]\nx_dist = abs(start[0] - end[0])\ny_dist = abs(start[1] - end[1])\nresult = x_dist + y_dist - min(x_dist,y_dist) * (1 if (x_dist > 0 and y_dist > 0) else 0)\nprint(result)", "from sys import stdin as fin\n\n# fin = open(\"ecr6a.in\", \"r\")\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\n\nsx, sy = abs(x1 - x2), abs(y1 - y2)\nprint(min(sx, sy) + abs(sx - sy))", "#A\n\nxi, yi = map(int,input().split())\nxf, yf = map(int, input().split())\nxf = abs(xf-xi)\nyf = abs(yf-yi)\nsteps = 0\nif xf == yf:\n    steps += xf\nelif xf == 0:\n    steps += yf\nelif yf == 0:\n    steps += xf\nelse:\n    reduce = min(xf,yf)\n    steps += reduce\n    steps += (max(xf,yf) - reduce)\nprint(steps)", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nprint(max(abs(x1 - x2), abs(y1 - y2)))\n", "def __starting_point():\n    x1, y1 = [int(x) for x in input().split()]\n    x2, y2 = [int(x) for x in input().split()]\n\n    print( max( abs(x1-x2),abs(y1-y2) ) )\n__starting_point()", "(x1,y1)=tuple(input().split())\n(x2,y2)=tuple(input().split())\n\nprint(max(abs(int(x1)-int(x2)),abs(int(y1)-int(y2))))", "x1,y1=list(map(int,input().split(\" \")))\nx2,y2=list(map(int,input().split(\" \")))\n\nresult1=max(x1,x2)-min(x1,x2)\nresult2=max(y1,y2)-min(y1,y2)\n\nprint(max(result1,result2))", "read = lambda: list(map(int, input().split()))\nx1, y1 = read()\nx2, y2 = read()\nprint(max(abs(y1 - y2), abs(x1 - x2)))\n", "import math\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nd = 0\nxd = math.fabs(x1-x2)\nyd = math.fabs(y1-y2)\nd =  int(max(xd ,yd))\nprint(d)"]