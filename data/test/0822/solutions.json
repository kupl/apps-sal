["n, m, z = list(map(int, input().split()))\nprint(sum(1 for t in range(1, z + 1) if t % n == 0 and t % m == 0))\n", "inp = input().split()\nn = int(inp[0])\nm = int(inp[1])\nz = int(inp[2])\n\nfor q in range(1, m + 1):\n    if not (n * q) % m:\n        break\n\nlcm = n * q\nprint(z // (n * q))\n", "from fractions import gcd\na, b, c = map(int, input().split())\nprint(c // (a * b // gcd(a, b)))", "from fractions import gcd\nn,m,z=list(map(int,input().split()))\nl=n*m/gcd(n,m)\nprint(int(z//l))\n", "from fractions import gcd\ndef lcm(n,m):\n    return (n*m)//gcd(n,m)\na,b,c = map(int,input().split())\nprint(c//lcm(a,b))", "n, m, z = map(int, input().split())\n\ngcd = lambda a, b: gcd(b, a % b) if b else a\nmm = n * m // gcd(n, m)\nprint(z // mm)", "import sys\n\nfin = sys.stdin\nfout = sys.stdout\nans = 0\nn, m, z = list(map(int, fin.readline().split()))\nfor i in range(1, z + 1):\n    if i % n == 0 and i % m == 0:\n        ans += 1\nfout.write(str(ans))\n", "from sys import stdin, stdout\n\n\ndef gcd(a, b):\n    if not b:\n        return a\n    else:\n        return gcd(b, a % b)\n    \n\na, b, time = map(int, stdin.readline().split())\nstdout.write(str(time // (a * b // gcd(a, b))))", "from fractions import gcd\n\na, b, c = list(map(int, input().split(' ')))\n\na = a * b // gcd(a, b)\n\nprint(c // a)\n\n", "n, m, z = [int(el) for el in input().split()]\n\nans = 0\nfor i in range(1, z + 1):\n\tif i % n == i % m == 0:\n\t\tans += 1\n\nprint(ans)", "from fractions import gcd\n\nm, n, z = list(map(int, input().split()))\nk = m*n//gcd(m,n)\nprint(int(z/k))\n\n", "import math\nn,m,z = (int(x) for x in input().split())\nprint(z//(n*m//math.gcd(n,m)))\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\nn, m, z = map(int, input().split())\nprint(z // ((n * m) // gcd(n, m)))", "import math\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nn, m, z = ria()\n\nprint(z//(n*m//math.gcd(n,m)))", "n,m,z = map(int, input().split())\nc = n\nans = 0\nwhile c <= z:\n    if c % m == 0:\n        ans += 1\n    c+=n\nprint(ans)", "n, m, z = map(int, input().split())\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef nok(a, b):\n    return a // gcd(a, b) * b\n\nprint(z // nok(n, m))", "n, m, z = list(map(int, input().split()))\n\nprint(len([i for i in range(1, z + 1) if i % n == 0 and i % m == 0]))\n\n", "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\na, b, c = list(map(int, input().split()))\nprint(c // ((a * b) // gcd(a, b)))\n", "def lcm(x, y):\n   \"\"\"This function takes two\n   integers and returns the L.C.M.\"\"\"\n\n   # choose the greater number\n   if x > y:\n       greater = x\n   else:\n       greater = y\n\n   while(True):\n       if((greater % x == 0) and (greater % y == 0)):\n           lcm = greater\n           break\n       greater += 1\n\n   return lcm\n\nn, m, z = [int(x) for x in input().strip().split()]\nfpb = lcm(n, m)\nprint(z // fpb)\n", "from fractions import gcd\nn, m, z = list(map(int, input().split()))\nprint(z // ((n * m) // gcd(n, m)))\n", "from fractions import gcd\n\nfrom sys import stdin as fin\n# fin = open(\"cfr395a.in\", \"r\")\n\nn, m, z = map(int, fin.readline().split())\n# n = int(fin.readline())\nprint(z // (n * m // gcd(n, m)))", "def euclide(a,b):\n    if b == 0:\n        return a\n    else:\n        return euclide(b,a%b)\n\ndef ppcm(a,b):\n    return b*(a//euclide(a,b))\n\ndef f(n,m,z):\n    return z // ppcm(n,m)\n\nn,m,z = tuple(map(int,input().split()))\nprint(f(n,m,z))\n", "n,m,z=list(map(int,input().split()))\nans=0\nfor i in range(1,z+1):\n  if i%m==0 and i%n==0:\n    ans+=1\nprint(ans)\n", "n, m, z = list(map(int, str.split(input())))\nprint(len(set(range(n, z + 1, n)) & set(range(m, z + 1, m))))\n", "def gcd(a, b):\n    while b:\n        a %= b\n        a, b = b, a\n    return a\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\ndef main():\n    n, m, z = list(map(int, input().split()))\n    q = lcm(n, m)\n    print(z // q)\n\nmain()\n"]