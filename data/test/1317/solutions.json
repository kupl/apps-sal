["s = input().split()\nn, m = int(s[0]), int(s[1])\nqr = {}\nfor i in range(1, m+1):\n    num = (n-i)//m+1\n    qr[(i**2)%m] = qr.get((i**2)%m,0)+ num\nprint(sum(qr.get(i%m,0) * qr.get((m-i)%m,0) for i in range(m)))\n", "n, m = list(map(int, input().split()))\nnOfM = [0 for i in range(m)]\nfor md in range(m):\n    if md <= n:\n        nOfM[md] = (n - md) // m\n        if md != 0:\n            nOfM[md] += 1\nres = 0\nfor m1 in range(m):\n    for m2 in range(m):\n        if (m1 * m1 + m2 * m2) % m == 0:\n            res += nOfM[m1] * nOfM[m2]\nprint(res)\n", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, M = getIntList()\n#print(N)\n\nzs = [ N//M for _ in range(M)]\n\nfor i in range(1,N%M+1):\n    zs[i] +=1\ndprint(zs)\nzs1 = [0 for _ in range(M)]\n\nfor i in range(M):\n    t = i*i%M\n    zs1[t] += zs[i]\n\ndprint(zs1)\n    \nre = 0\n\nfor i in range(1,M):\n    re += zs1[i] * zs1[M-i]\n\nre += zs1[0] * zs1[0]\n\nprint(re)\n\n\n\n\n\n\n", "n,m=map(int,input().split())\nk=n%m\nj=(n-k)//m\ntotal=0\nactual=0\nfor i in range(1,m+1):\n    for l in range(1,m+1):\n        if (i**2+l**2)%m==0:\n            total+=1\n            if 0<i<=k and 0<l<=k:\n                actual+=(j+1)**2\n            elif 0<i<=k or 0<l<=k:\n                actual+=j*(j+1)\n            else:\n                actual+=j**2\nif k==0:\n    print(j**2*total)\nelse:\n    print(actual)", "n,m=list(map(int,input().split()))\n\n\n\n#\u5404i\u306fn//m\n#+\n#if i <=n%m:\n#+1\n\nLIST=[None]*(m+1)\n\nfor i in range(1,m+1):\n    LIST[i]=n//m\n\n    if i<=n%m:\n        LIST[i]+=1\n\nANS=0\nfor i in range(1,m+1):\n    for j in range(1,m+1):\n        if (i**2+j**2)%m==0:\n            ANS+=LIST[i]*LIST[j]\n\nprint(ANS)\n", "n, m = list(map(int, input().split()))\ncnt = [0] * m\nfor i in range(m):\n  cnt[i] = n // m\n  if i == 0:\n    cnt[i] -= 1\n  if i <= n % m:\n    cnt[i] += 1\nr = 0\nfor i in range(m):\n  for j in range(m):\n    if ((i ** 2) + (j ** 2)) % m == 0:\n      r += cnt[i] * cnt[j]\nprint(r)\n", "n, m = map(int, input().split())\nz = [0] * m\nif n >= m:\n\tfor i in range(1, 1 + m):\n\t\tz[i * i % m] += n // m\n\nfor i in range(1, 1 + n % m):\n\tz[i * i % m] += 1\n#print(z)\nans = 0\n#print(z)\nfor i in range(m):\n\tq = (m - i) % m\n\t#print(i, q, z[i], z[q])\n\tans += max(z[i] * z[q], 0)\nprint(ans) ", "n, m = list(map(int, input().split()))\ncnt = [0 for _ in range(m)]\nfor x in range(min(m, n + 1)):\n    z = n // m\n    if n % m >= x:\n        z += 1\n#    print(x, z)\n    cnt[x * x % m] += z\ncnt[0] -= 1\n#print(cnt)\nres = 0\nfor i  in range(m):\n    res += cnt[i] * cnt[(m - i) % m]\nprint(res)\n", "def brute(n, m):\n\tans = 0\n\tfor i in range(1, n + 1, 1):\n\t\tfor j in range(1, n + 1, 1):\n\t\t\tval = (i*i + j*j) % m;\n\t\t\tif val == 0:\n\t\t\t\tans += 1\n\treturn ans\n\ndef solve(n, m):\n\tcnt = [0] * m;\n\tfor i in range(1, m * m + 1, 1):\n\t\tupto = n // (m * m)\n\t\textra = n - upto * (m * m)\n\t\tif extra >= i:\n\t\t\tupto += 1\n\t\tcnt[(i * i) % m] += upto\n\n\tans = 0\n\tfor i in range(0, m):\n\t\tfor j in range(0, m):\n\t\t\tif (i + j) % m == 0:\n\t\t\t\tans += cnt[i] * cnt[j]\n\treturn ans\n\n(n, m) = list(map(int, input().split(' ')))\nprint(solve(n, m))\n\n# for n in range(1, 50, 1):\n# \tfor m in range(1, 50, 1):\n# \t\ta = brute(n, m)\n# \t\tb = solve(n, m)\n# \t\t# print(a, b)\n# \t\tif a != b:\n# \t\t\t1/0\n\n# print(ans)\n\n# print(brute(n, m))\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nn, m = mints()\nk = n//m\nc = [0] * m\nfor i in range(m):\n\tc[(i*i)%m] += k\nc[0] -= 1\nfor i in range(k*m,n+1):\n\tc[(i*i)%m] += 1\nr = 0\nc.append(c[0])\nfor i in range(m):\n\tr += c[i]*c[m-i]\nprint(r)", "n, m=map(int, input().split())\na=[0 for i in range(m)]\nfor i in range(m):\n  a[i]=n//m\nfor i in range(1, n%m+1):\n  a[i]+=1\nres=0\nfor i in range(m):\n  for j in range(m):\n    if ((i*i+j*j)%m==0):\n      res+=a[i]*a[j];\nprint (res)", "s=input().split()\nn=int(s[0])\nm=int(s[1])\nans=0\nfor i in range(1,min(n+1,m+1)):\n    ii=i**2\n    for j in range(i,min(n+1,m+1)):\n        jj=j**2\n        if (ii+jj)%m==0:\n            if j>i:\n                ans+=(1+(n-j)//m)*(1+(n-i)//m)*2\n            else:\n                ans+=(1+(n-j)//m)**2\nprint(ans)", "n, m = map(int, input().split())\nf = lambda r: ((n - r)//m) - ((m - r)//m) + 1\nres = 0\nfor i in range(m):\n    for j in range(i, m):\n        if ((i**2) + (j**2)) % m == 0:\n            # print(i, j, f(i), f(j))\n            res += f(i) * f(j) * (2 if i != j else 1) \nprint(res)", "n, k = map(int, input().split(' '))\n\ndef calc(x):\n  m = n + x\n  return (m // k)\ntotal = 0\nfor i in range(k):\n  for j in range(k):\n    if ((i**2 + j**2) % k) == 0:\n      total += calc(i) * calc(j)\n\nprint(total)", "from math import ceil\nn, m = map(int, input().split())\nans = 0\nfor i in range(1, m + 1):\n    for j in range(1, m + 1):\n        if (i ** 2 + j ** 2) % m == 0:\n            ch1, ch2 = ceil((n - i + 1) / m), ceil((n - j + 1) / m)\n            ans += ch1 * ch2\nprint(ans)", "n, m = list(map(int, input().split()))\nx = n % m\ny = n // m\ns = 0\nfor i in range(1, m + 1):\n    for j in range(i, m + 1):\n        if (i ** 2 + j ** 2) % m == 0:\n            a, b = 0, 0\n            if i <= x:\n                a = 1\n            if j <= x:\n                b = 1\n            r = (y + a) * (y + b)\n            if i != j:\n                s += r * 2\n            else:\n                s += r\nprint(s)\n", "import math\nn,m = list(map(int, input().split()))\n\nmodulo = [ 0 for x in range(0,m)]\n\nfor x in range(1,m+1):\n    modulo[(x*x)%m]+=1\n#mnoze ile trzeba\nfor index in range(m):\n    modulo[index]*=math.floor(n/m)\n\nwar = math.floor(n/m)*m\nfor x in range(war+1,n+1):\n    modulo[(x*x)%m]+=1\n\nsuma = 0\n\nfor ind in range(1,m):\n    war = modulo[ind]*modulo[m-ind]\n    suma = suma + war\n\n\nsuma+=modulo[0]*modulo[0]\n\nprint(suma)\n\n", "n, m = [int(w) for w in input().split()]\n\nd = n // m\nr = n % m\ns = d * d\n\na = 0\n\nfor i in range(1, m+1):\n    for j in range(1, m+1):\n        if (i*i+j*j) % m  == 0:\n            a += d*d\n            if i <= r:\n                a += d\n            if j <= r:\n                a += d\n            if i <= r and j <= r:\n                a += 1\n\nprint(a)\n", "n, m = list(map(int, input().split()))\nk = n // m\nrest = [0] * m\nfor i in range(1, m+1):\n    rest[i**2 % m] += k\nfor i in range(1, n % m + 1):\n    rest[i**2 % m] += 1\n\nr = rest[0]**2\nfor i in range(1, m):\n    r += rest[i]*rest[-i]\nprint(r)\n", "a, b = map(int, input().split())\nA = set()\nA_ = set()\nB_ = set()\nA__ = {}\nB__ = {}\ncalc = 0\nfor i in range(1, b + 1):\n    for j in range(1, b + 1):\n        if (i ** 2 + j ** 2) % b == 0:\n            A.add((i % b, j % b))\n            B_.add(j % b)\n            A_.add(i % b)\nfor i in A_:\n    A__[i] = a // b\n    if a % b >= i and i != 0:\n        A__[i] += 1\nfor i in B_:\n    B__[i] = a // b\n    if a % b >= i and i != 0:\n        B__[i] += 1\nfor i in A:\n    calc += A__[i[0]] * B__[i[1]]\nprint(calc)", "n,m = map(int, input().split())\narr = {}\nfirst = []\ntimes = n//m\n\nfor i in range(1,m+1):\n    tmp = i%m\n    if tmp != 0:\n        tmp *= tmp\n        tmp %= m\n\n    tmp2 = arr.get(tmp,0)\n    arr[tmp] = tmp2+times\n    first.append(tmp)\n\nfor i in range(n-(times*m)):\n    arr[first[i]] += 1\n\nresult = 0\nfor key in arr.keys():\n    comp = (m-key)%m\n    e1 = arr[key]\n    e2 = arr.get(comp,0)\n\n    if comp != 0 or (m%2==0 and comp!=m//2):\n        result += e1*e2\n    else:\n        result += (e1*e1)\nprint(result)", "from operator import itemgetter\n#int(input())\n#map(int,input().split())\n#[list(map(int,input().split())) for i in range(q)]\n#print(\"YES\" * ans + \"NO\" * (1-ans))\nn,m = list(map(int,input().split()))\nai = [0] * m\nfor i in range(m):\n    ai[i*i % m] += 1\nai2 = [0] * m\nn3 = n % m\nfor i in range(1,n3+1):\n    ai2[i*i % m] += 1\nn2 = n // m\n\nans = 0\nfor i in range(m):\n    i2 = (m - i) % m\n    ans += ((ai[i] * n2 + ai2[i]) * (ai[i2] * n2 + ai2[i2]))\nprint(ans)\n", "n,m=[int(i) for i in input().split()]\na=[(n-i)//m+1 for i in range(0,m+1)] #a[1],a[2],...,a[m]\ns=0\nfor i in range(1,m+1):\n    for j in range(1,m+1):\n        if((i*i+j*j)%m==0):\n            s+=a[i]*a[j]\nprint(s)\n"]