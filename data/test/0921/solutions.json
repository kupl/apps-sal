["n, w = list(map(int, input().split()))\nCup = list(map(int, input().split()))\nWater = []\nfor a in Cup:\n    Water.append((a + 1) // 2)\nres = w - sum(Water)\nif res < 0:\n    print(-1)\nelse:\n    while res > 0:\n        i = Cup.index(max(Cup))\n        num = min(res, Cup[i] - Water[i])\n        Water[i] += num\n        res -= num\n        Cup[i] = 0\n    s = str(Water[0])\n    for c in range(1, len(Water)):\n        s += \" \" + str(Water[c])\n    print(s)\n        \n", "line=input().split()\nn=int(line[0])\nw=int(line[1])\n\nminsum=0\na=input().split()\nfor i in range (n):\n    a[i]=int(a[i])\n    minsum+=(a[i]+1)//2\nif (minsum>w):\n    print (\"-1\")\nelse:\n    vols=[str((a[i]+1)//2) for i in range(n)]\n    extra=w-minsum\n    while (extra>0):\n        maxcup=-1\n        maxsize=0\n        for i in range (n):\n            if a[i]>maxsize:\n                maxcup=i\n                maxsize=a[i]\n        if maxcup==-1:\n            print(1+\" \")\n        vols[maxcup]=str(min(maxsize, (maxsize+1)//2 + extra))\n        extra -= int(vols[maxcup])-(maxsize+1)//2\n        a[maxcup]=-1\n    print(\" \".join(vols))\n", "n, w = list(map(int, input().split()))\na = list(map(int, input().split()))\narr = []\nans = [0 for _ in range(n)]\nfor i in range(n):\n    ans[i] += (a[i] + 1) // 2\n    w -= (a[i] + 1) // 2\n    arr.append((a[i], i))\nif w < 0:\n    print(-1)\nelse:\n    arr = list(reversed(sorted(arr)))\n    for a, i in arr:\n        d = min(w, a - ans[i])\n        ans[i] += d\n        w -= d\n    print(' '.join(map(str, ans)))\n", "n, w = map(int, input().split())\na = list(map(int, input().split()))\nb = []\nfor i in range(n):\n    b.append(a[i] // 2 + a[i] % 2)\n    w -= a[i] // 2 + a[i] % 2\nif w < 0:\n    print(-1)\nelse:\n    while w > 0:\n        m = a[0], 0\n        for i in range(n):\n            if a[i] > m[0]:\n                m = [a[i], i]\n        if w >= a[m[1]] - b[m[1]]:\n            w -= a[m[1]] - b[m[1]]\n            b[m[1]] = a[m[1]]\n            a[m[1]] = 0\n        else:\n            b[m[1]] += w\n            w = 0\n    print(' '.join(map(str, b)))", "n, w = map(int, input().split())\na = list(map(int, input().split()))\ns = 0\nfor i in range(n):\n    s += (a[i] + 1) // 2\n    a[i] = [a[i], i]\nif s > w:\n    print(-1)\nelse:\n    res = [[(a[i][0] + 1) // 2, i] for i in range(n)]\n    w -= s\n    a.sort(reverse=True)\n    i = 0\n    while w > 0:\n        res[a[i][1]][0] = min(a[i][0], res[a[i][1]][0] + w)\n        w -= a[i][0] // 2\n        i += 1\n    for i in range(n):\n        print(res[i][0], end=' ')\n", "n, w = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\na_index = [(x, i) for i, x in enumerate(a)]\na_index.sort(reverse=True)\nres = [0] * len(a)\nfor x, i in a_index:\n    need = (x+1) // 2\n    res[i] = need\n    w -= need\n    if w < 0:\n        print(-1)\n        return\nif w > 0:\n    for x, i in a_index:\n        if w == 0:\n            break\n        need = min(w, x-res[i])\n        res[i] += need\n        w -= need\nprint(res[0], end=\"\")\nfor i in range(1, len(res)):\n    print(\" \" + str(res[i]), end=\"\")\nprint()", "n,w = map(int,input().split())\nai = list(map(int,input().split()))\nai2 = list(range(n))\nai3 = [0] * n\nsumm = 0\nodd_num = 0\nfor num in ai:\n    summ += num - num % 2\n    odd_num += num % 2\nfor i in range(n):\n    for j in range(i+1,n):\n        if ai[j] > ai[i]:\n            temp = ai[i]\n            ai[i] = ai[j]\n            ai[j] = temp\n            temp = ai2[i]\n            ai2[i] = ai2[j]\n            ai2[j] = temp\nw -= summ // 2 + odd_num\nif w < 0:\n    print(-1)\nelse:\n    for i in range(n):\n        temp = min(w,ai[i]//2)\n        w -= temp\n        ai3[ai2[i]] = ai[i]//2 + ai[i] % 2 + temp\n    for num in ai3:\n        print(num,end=\" \")\n", "def luckyYear():\n    n = int(input())\n    original = n\n    p = -1\n    f = 0\n    while n > 0:\n        f = n % 10\n        n //= 10\n        p += 1\n    f += 1\n    f *= 10 ** p\n    # print(f)\n    print(f - original)\n\n\ndef averageSleepTime():\n    n, k = list(map(int, input().split()))\n    sleep = list(map(int, input().split()))\n    run = 0\n    for i in range(k):\n        run += sleep[i]\n    runavg = [run]\n    for i in range(k, n):\n        run = run - sleep[i - k] + sleep[i]\n        runavg.append(run)\n    print('{:.10f}'.format(sum(runavg)/(n-k+1)))\n\ndef teaParty():\n    n, w = list(map(int, input().split()))\n    tea = list(map(int, input().split()))\n    fill = []\n    [fill.append((t+1)//2) for t in tea]\n    if sum(tea) < w or sum(fill) > w:\n        print(-1)\n        return\n    w -= sum(fill)\n    sortedPos = [i[0] for i in sorted(enumerate(tea), key = lambda x : x[1])]\n    for i in sortedPos[::-1]:\n        if w <= 0:\n            break\n        value = min(tea[i] - fill[i],w)\n        fill[i] += value\n        w -= value\n    print(' '.join(map(str,fill)))\n\n\n\nteaParty()\n", "def solve():\n    #n = int(input())\n    n, w = map(int, input().split())\n    a = list(map(int, input().split()))\n    #a = [list(map(int, input().split())) for _ in range(n)]\n    mp = [[a[i], i] for i in range(n)]\n    mp.sort()\n    ans = [[mp[i][1], 0] for i in range(n)]\n    mi = 0\n    for i in range(n):\n        t = max(mi, mp[i][0] // 2 + mp[i][0] % 2)\n        ans[i][1] = t\n        w -= t\n        mi = t\n    if w < 0:print(-1)\n    else:\n        for i in range(-1, -n - 1, -1):\n            if w > mp[i][0] - ans[i][1]:\n                w -= mp[i][0] - ans[i][1]\n                ans[i][1] = mp[i][0]\n            else:\n                ans[i][1] += w\n                break\n        ans.sort()\n        for i in range(n):\n            print(ans[i][1], end=' ')\n\ndef __starting_point():\n    solve()\n__starting_point()", "def mp():  return list(map(int,input().split()))\ndef lt():  return list(map(int,input().split()))\ndef pt(x):  print(x)\ndef ip():  return input()\ndef it():  return int(input())\ndef sl(x):  return [t for t in x]\ndef spl(x): return x.split()\ndef aj(liste, item): liste.append(item)\ndef bin(x):  return \"{0:b}\".format(x)\ndef listring(l): return ' '.join([str(x) for x in l])\ndef ptlist(l): print(' '.join([str(x) for x in l]))\n\nn,w = mp()\na = lt()\nb = [int((a[i]+1)/2) for i in range(n)]\nif sum(b) <= w:\n    d = w - sum(b)\n    c = sorted([i for i in range(n)],key=lambda x: a[x],reverse = True)\n    while d > 0:\n        i = c[0]\n        r = min(d,a[i]-b[i])\n        d -= r\n        b[i] += r \n        c.pop(0)\n    ptlist(b)\nelse:\n    pt(-1)\n", "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\n# input_text_path = __file__.replace('.py', '.txt')\n# fd = os.open(input_text_path, os.O_RDONLY)\n# os.dup2(fd, sys.stdin.fileno())\n\nn, w = map(int, input().split())\nA = list(map(int, input().split()))\n\npours = [None] * n\n\nB = []\nfor i, a in enumerate(A):\n    B.append((a, i))\nB.sort()\n\n#print(B)\nfor b in B:\n    cup = b[0]\n    i = b[1]\n\n    pour_amount = math.ceil(cup / 2)\n    pours[i] = pour_amount\n    w -= pour_amount\n\nif w < 0:\n    print(-1)\nelse:\n    for i in range(n-1, -1, -1):\n        cup, idx = B[i]\n        if cup > pours[idx]:\n            re_pour_amount = min(w, cup - pours[idx])\n            pours[idx] += re_pour_amount\n            w -= re_pour_amount\n    print(*pours)", "def main():\n    n, w = map(int, input().split())\n    a = list(map(int, input().split()))\n    res1 = [0 for i in range(n)]\n    maxes = a[:]\n    maxes.sort()\n    for i in range(n):\n        res1[i] = (a[i] + 1) // 2\n    w -= sum(res1)\n    if w < 0:\n        print(-1)\n        return\n    i = -1\n    while w > 0:\n        maxi = a.index(maxes[i])\n        if w > a[maxi] - res1[maxi]:\n            w -= (a[maxi] - res1[maxi])\n            res1[maxi] = a[maxi]\n            a[maxi] = 0\n            maxes[i] = 0\n        else:\n            res1[maxi] += w\n            w = 0\n        i -= 1\n    print(*res1)\nmain()", "import math\n\n\nn, w = [int(x) for x in input().split()]\nl = [int(x) for x in input().split()]\n# sorted(l, reverse=False)\nqw = l[:]\nl.sort(reverse=True)\n\nq = [int(math.ceil(x/2)) for x in l]\nsm = sum(q)\nif w<sm:\n    print(-1)\nelse:\n    rem = w - sm\n    er = q[:]\n    for x in range(len(q)):\n        if rem+q[x]>l[x]:\n            rem = rem -(l[x]-q[x])\n            q[x] = l[x] \n        else:\n            e = []\n            q[x] = q[x]+ rem\n            #q = zip(l,q)\n            for qq in qw:\n                inx = l.index(qq)\n                e.append(q[inx])\n                print(e[-1], end= ' ')\n                l[inx] = -111\n            \n\n\n            \n", "\n# Author: Boonnithi Jiaramaneepinit\n# Python Interpreter Version: Python 3.5.2\n#\n# Note: Educational Codeforces Round 21\n\nimport math\n\ndef fillTea(water, cups):\n    curW = water\n    for i in range(len(cups)):\n        curW -= math.ceil(cups[i]/2)\n        cups[i] = [cups[i], i, math.ceil(cups[i]/2)]\n    cups = sorted(cups, key=lambda l:l[0], reverse=True)\n\n    if curW < 0:\n        return ['-1']\n\n    # eqLeft = math.floor(curW/len(cups))\n    # uneqLeft = curW % len(cups)\n\n    # print(curW, cups)\n\n    # for i in range(len(cups)):\n    #     if i < uneqLeft:\n    #         cups[i][2] += 1\n    #     cups[i][2] = cups[i][2] + eqLeft\n\n    curCup = 0\n    while curW > 0:\n        curP = min(cups[curCup][0] - cups[curCup][2], curW)\n        cups[curCup][2] += curP\n        curW -= curP\n        curCup += 1\n\n    cups = sorted(cups, key=lambda l:l[1], reverse=False)\n\n    for i in range(len(cups)):\n        cups[i] = str(cups[i][2])\n\n    # print(curW, cups)\n\n    if curW < 0:\n        return ['-1']\n\n    return cups\n\n\n'''\n3 20\n22 2 1\n'''\ndef __starting_point():\n    [n, w] = [int(x) for x in input().split()]\n    cups = [int(x) for x in input().split()]\n    # [n, w] = [3, 20]\n    # cups = [22, 2, 1]\n    print(' '.join(fillTea(w, cups)))\n\n__starting_point()", "n,w = map(int,input().split())\narr = [int(x) for x in input().split()]\narr2 = [(x+1)//2 for x in arr]\ns = sum(arr2)\nif w<s:\n\tprint(-1)\nelse:\n\tw -= s\n\twhile w>0:\n\t\tm = max(arr)\n\t\tv = arr.index(m)\n\t\twhile arr2[v]<arr[v] and w>0:\n\t\t\tarr2[v] += 1\n\t\t\tw -= 1\n\t\tarr[v] = -1\n\tfor i in range(n):\n\t\tprint(arr2[i],end=' ')\n\t\t\t\n\n", "\"\"\"import sys\nsys.stdin = open(\"in\", \"r\")\"\"\"\n\nn, w = map(int, input().split())\n\narr = [[i,int(x)] for i,x in enumerate(input().split())]\n\narr.sort(reverse=True, key=lambda a: a[1])\n\nres = []\npos = True\n\nfor a in arr:\n    if(w <= 0):\n        pos = False\n        break\n    res.append([a[0],(a[1]+1)//2])\n    w-=(a[1]+1)//2\n\nwhile(w>0):\n    for i in range(n):\n        ex = min(w,arr[i][1]-res[i][1])\n        w -= ex\n        res[i][1]+=ex\n        if(w == 0):\n            break\n\nres.sort(key=lambda a: a[0])\n\nif(pos):\n    print(' '.join(map(lambda a: str(a[1]),res)))\nelse:\n    print(-1)", "n, w = map(int, input().split())\nCup = list(map(int, input().split()))\nWater = []\nfor a in Cup:\n    Water.append((a + 1) // 2)\nres = w - sum(Water)\nif res < 0:\n    print(-1)\nelse:\n    while res > 0:\n        i = Cup.index(max(Cup))\n        num = min(res, Cup[i] - Water[i])\n        Water[i] += num\n        res -= num\n        Cup[i] = 0\n    s = str(Water[0])\n    for c in range(1, len(Water)):\n        s += \" \" + str(Water[c])\n    print(s)", "import math\n\n\nclass Glass:\n    def __init__(self, pos, size, fill=0):\n        self.s, self.p, self.f = size, pos, fill\n\n\nn, w = map(int, input().split())\ngls = []\nsizes = [int(i) for i in input().split()]\nfor i in range(n):\n    g = Glass(i, sizes[i])\n    l = math.ceil(g.s / 2)\n    if w >= l:\n        g.f, w = l, w - l\n        gls.append(g)\n    else:\n        print(-1)\n        return\ngls.sort(key=lambda y: y.s)\nfor i in range(n - 1, -1, -1):\n    emp = gls[i].s - gls[i].f\n    if w > 0:\n        gls[i].f += min(emp, w)\n        w -= min(emp, w)\n    else:\n        break\n\ngls.sort(key=lambda y: y.p)\nfor i in range(n):\n    print(gls[i].f, end=\" \")\n", "import sys\nfrom itertools import accumulate\n\ndef solve():\n    n, w = map(int, input().split())\n\n    a = [int(i) for i in input().split()]\n    b = [0] * n\n\n    for i, ai in enumerate(a):\n        tmp = (ai + 1) // 2\n\n        w -= tmp\n        b[i] += tmp\n\n        if w < 0:\n            print(-1)\n            return\n\n    ag = [(ai, i) for i, ai in enumerate(a)]\n    ag.sort(reverse=True)\n\n    for i in range(n):\n        v = ag[i][0]\n        k = ag[i][1]\n        rem = v - b[k]\n\n        if w > rem:\n            w -= rem\n            b[k] = v\n        else:\n            b[k] += w\n            break\n\n    print(*b)\n\ndef __starting_point():\n    solve()\n__starting_point()", "import math\n\nn,w=input().split(\" \")\nn=int(n)\nw=int(w)\n\nlis=[[int(j),0] for j in input().split(\" \")]\nfor i in range(n):\n    lis[i][1]=i\n\nlis=sorted(lis,key= lambda a:a[0],reverse=True)\nf=True\nans=[0 for i in range(n)]\n#print(ans)\nfor i in range(n):\n    w-=math.ceil(lis[i][0]/2)\n    ans[lis[i][1]]=math.ceil(lis[i][0]/2)\n    if(w<0):\n        f=False\n        break\n\n#print(ans)\nif(f==True):\n    if(w==0):\n        for i in range(n):\n            print(ans[i],end=\" \")\n    else:\n        for i  in range(n):\n            if(w==0):\n                break\n            if(w>=lis[i][0]-ans[lis[i][1]]):\n                w-=lis[i][0]-ans[lis[i][1]]\n                ans[lis[i][1]]=lis[i][0]\n            else:\n                ans[lis[i][1]]+=w\n                w=0\n        for i in range(n):\n            print(ans[i],end=\" \")\nelse:\n    print(-1)\n\n\n", "n, w = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = [(ai + 1) // 2 for ai in a]\nr = w - sum(b)\nif r < 0:\n    print(-1)\nelse:\n    ind = sorted(list(range(n)), key=lambda i: a[i], reverse=True)\n    for i in ind:\n        c = min(r, a[i] - b[i])\n        b[i] += c\n        r -= c\n        if r == 0:\n            break\n    print(*b)\n", "n, w = list(map(int,input().split()))\na = list(map(int,input().split()))\nb = [(x + 1) // 2 for x in a]\nw -= sum(b)\nif w > 0:\n    a = [(a[i], i) for i in range(n)]\n    a.sort(reverse=True)\n    for i in range(n):\n        x = min(a[i][0] - b[a[i][1]], w)\n        w -= x\n        b[a[i][1]] += x\n        if w == 0:\n            break\nif w >= 0:\n    print(*b)\nelse:\n    print(-1)"]