["a=[0]*2222\nb=[0]*2222\nr=0\nfor _ in range(int(input())):\n\tx,y=map(int,input().split())\n\tr+=a[x+y]+b[x-y+1111]\n\ta[x+y]+=1\n\tb[x-y+1111]+=1\nprint(r)", "from collections import defaultdict\nn = int(input())\nD1 = defaultdict(int)\nD2 = defaultdict(int)\nfor i in range(n):\n    x, y = [int(x) for x in input().split()]\n    D1[x+y] += 1\n    D2[x-y] += 1\nprint(sum(D1[k]*(D1[k]-1)//2 for k in D1) + sum(D2[k]*(D2[k]-1)//2 for k in D2))\n", "N = int(input())\nglav = [0] * 2016\npob  = [0] * 2016\nfor i in range(N):\n    x, y = map(int, input().split())\n    glav[x - y] += 1\n    pob[x + y] += 1\ns = 0\nfor i in glav:\n    s += i*(i - 1) // 2\nfor i in pob:\n    s += i*(i - 1) // 2\nprint(s)", "n = int(input())\na = []\nfor i in range(n):\n    a.append([int(x) - 1 for x in input().split()])\nd1 = [0] * 2000\nd2 = [0] * 2000\nfor i in a:\n    d1[i[0] - i[1]] += 1\n    d2[i[0] + i[1]] += 1\nsumm = 0\nfor i in range(2000):\n    summ += d1[i] * (d1[i] - 1) // 2\n    summ += d2[i] * (d2[i] - 1) // 2\nprint(summ)", "dio1 = [0] * 1999\ndio2 = [0] * 1999\nn = int(input())\nfor i in range(n):\n    x, y = [int(i) for i in input().split()]\n    dio1[x + y - 2] += 1\n    dio2[(1000 - x) + y - 1] += 1\nans = 0\nfor i in range(1999):\n    ans += dio1[i] * (dio1[i] - 1) // 2  + dio2[i] * (dio2[i] - 1) // 2\nprint(ans)\n\n", "n = int(input())\ndl = [0] * (2000+3)\ndr = [0] * (2000+3)\nfor i in range(n):\n\tx, y = map(int, input().split())\n\tdl[x-y]+=1\n\tdr[1000-x-y]+=1\nans = 0\nfor i in dr:\n\tans += (i*(i-1))//2\nfor i in dl:\n\tans += (i*(i-1))//2\nprint(ans)", "n = int(input())\n\nA = [0] * 3000\nB = [0] * 3000\n\nfor i in range(n):\n\tx, y = list(map(int, input().split()))\n\tA[x + y] += 1\n\tB[x - y] += 1\nans = 0\nfor elem in A:\n\tans += (elem * (elem - 1)) // 2\nfor elem in B:\n\tans += (elem * (elem - 1)) // 2\nprint(ans)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\n#   = input()\nn   = int(input())\n\n#() = (i for i in input().split())\n#   = [i for i in input().split()]\n\nd1 = {}\nd2 = {}\n\nfor i in range(n):\n    (x, y) = (int(i) for i in input().split())\n    t = x - y\n    if t in list(d1.keys()):\n        d1[t] +=1\n    else:\n        d1[t] = 1\n\n    t = x+y\n    if t in list(d2.keys()):\n        d2[t] +=1\n    else:\n        d2[t] = 1\n\nstart = time.time()\n\nans = 0\n\nfor i in list(d1.keys()):\n    ans += d1[i]*(d1[i]-1)//2\n\nfor i in list(d2.keys()):\n    ans += d2[i]*(d2[i]-1)//2\n\nprint(ans)\nfinish = time.time()\n#print(finish - start)\n", "from collections import defaultdict\nimport math\n\ndef nCr(n,r):\n    f = math.factorial\n    if n == 1:\n        return 0\n    return f(n) // (f(r) * f(n-r))\n\nn = int(input())\n\nright_diag = defaultdict(int)\nleft_diag = defaultdict(int)\nfor _ in range(n):\n    x, y = input().split()\n    x, y = int(x), int(y)\n    right_diag[x-y] += 1\n    left_diag[x+y] += 1\n\nprint(sum(nCr(val, 2) for val in right_diag.values()) + sum(nCr(val, 2) for val in left_diag.values()))", "read = lambda: list(map(int, input().split()))\nn = int(input())\nN = 1001\nb = [0] * 3000\nc = [0] * 3000\nfor i in range(n):\n    x, y = read()\n    b[x - y + N] += 1\n    c[y + x] += 1\nf = lambda x: x * (x - 1) // 2\nans = sum(f(i) for i in b) + sum(f(i) for i in c)\nprint(ans)\n", "n = int(input())\n\nl, r = [0] * 1999, [0] * 1999\n\ncount = 0\nfor _ in range(n):\n    x, y = [int(x) for x in input().split()]\n    ldiag = (x + y) - 2\n    rdiag = (x + (1001 - y)) - 2\n    count += l[ldiag] + r[rdiag]\n    l[ldiag] += 1\n    r[rdiag] += 1\n\nprint(count)\n", "n=int(input())\nl=[tuple(map(int,input().split())) for i in range(n)]\nd1={}\nd2={}\nfor i in range(n):\n    x,y=l[i]    \n    d1[x-y]=d1.get(x-y,0)+1\n    d2[y+x]=d2.get(y+x,0)+1\nans=0\nfor k in d1: ans+=(d1[k]-1)*d1[k]//2\nfor k in d2: ans+=(d2[k]-1)*d2[k]//2\nprint(ans)", "3\n\nn = int(input())\n\nattack = 0\ndict_a = dict()\ndict_b = dict()\nfor i in range(n):\n    (x, y) = tuple(map(int, input().split()))\n    (a, b) = (x+y, x-y)\n    if a in dict_a:\n        attack += dict_a[a]\n        dict_a[a] += 1\n    else:\n        dict_a[a] = 1\n    if b in dict_b:\n        attack += dict_b[b]\n        dict_b[b] += 1\n    else:\n        dict_b[b] = 1\n\nprint(str(attack))\n", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        n = int(input())\n        d = [0] * 4000\n        for i in range(n):\n            x, y = list(map(int, input().split()))\n            d[x + y] += 1\n            d[y - x + 3000] += 1\n        print(sum(0 if x < 2 else x * (x - 1) >> 1 for x in d))\n\nexcept EOFError:\n    pass\n", "n = int(input())\nB = 1000\nd = [0] * 2222\nD = [0] * 2222\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    d[x - y + B] += 1\n    D[x + y] += 1\ns = 0\nfor e in d:\n    if e >= 2:\n        s += e * (e-1)\nfor e in D:\n    if e >= 2:\n        s += e * (e-1)\ns >>= 1\nprint(s)\n", "lim = int(input())\ndx, dy = dict(), dict()\nsumm = 0\nfor i in range(0, lim):\n\tx, y =(int(j) for j in input().split())\n\tdiagx = x+y\n\tdiagy = x-y\n\tif diagx in dx:\n\t\tdx[diagx]+=1\n\telse:\n\t\tdx[diagx]=1\n\tif diagy in dy:\n\t\tdy[diagy]+=1\n\telse:\n\t\tdy[diagy]=1\nfor i in dx:\n\tsumm+= dx[i]*(dx[i]-1)//2\nfor i in dy:\n\tsumm+= dy[i]*(dy[i]-1)//2\nprint(summ)", "n = int(input())\nar = []\nfor i in range(n):\n    a, b = [int(i) for i in input().split()]\n    ar.append((a - b, a + b))\nc = [[0, 0] for i in range(2001)]\nfor i in range(n):\n    c[ar[i][0] + 999][0] += 1\n    c[ar[i][1]][1] += 1\nct = 0\nfor i in range(2001):\n    ct += (c[i][0] * (c[i][0] - 1) + c[i][1] * (c[i][1] - 1)) // 2\nprint(ct)", "\ndef nC2(n):\n    return n * (n - 1) // 2\n\nSIZE = 1000\n\nN = int(input())\na = [[0] * SIZE for i in range(SIZE)]\nfor i in range(N):\n    x, y = map(int, input().split())\n    a[x-1][y-1] = 1\n\nans = 0\n\n#1\nfor sx in range(SIZE):\n    t_cnt = 0\n    \n    x = sx; y = 0;\n    while x >= 0:\n        t_cnt += a[x][y]\n        x -= 1; y += 1\n        \n    ans += nC2(t_cnt)\n\n#2\nfor sy in range(1, SIZE):\n    t_cnt = 0\n    \n    x = SIZE - 1; y = sy;\n    while y < SIZE:\n        t_cnt += a[x][y]\n        x -= 1; y += 1\n        \n    ans += nC2(t_cnt)\n\n#3\nfor sx in range(SIZE):\n    t_cnt = 0\n    \n    x = sx; y = 0;\n    while x < SIZE:\n        t_cnt += a[x][y]\n        x += 1; y += 1\n        \n    ans += nC2(t_cnt)\n\n#4\nfor sy in range(1, SIZE):\n    t_cnt = 0\n    \n    x = 0; y = sy;\n    while y < SIZE:\n        t_cnt += a[x][y]\n        x += 1; y += 1\n        \n    ans += nC2(t_cnt)\n\nprint(ans)", "import math\n\nn = int(input())\n\na = [0 for t in range(2, 2001)]\nb = [0 for t in range(-999, +1000)]\nfor i in range(n):\n    x, y = [int(t) for t in input().split()]\n\n    a[x+y-2] += 1\n    b[x-y+999] += 1\n\nans = 0\nfor pos in a:\n    if pos > 1:\n        head = math.factorial(pos)\n        tail = 2*math.factorial(pos-2)\n        ans += int(head/tail)\n\nfor pos in b:\n    if pos > 1:\n        head = math.factorial(pos)\n        tail = 2*math.factorial(pos-2)\n        ans += int(head/tail)\n\nprint(int(ans))\n", "n = int(input())\na = [True]*1999\na1 = [0]*1999\nb = [True]*1999\nb1 = [0]*1999\nans = 0\nfor i in range(n):\n    x,y = map(int,input().split())\n    d = x - y\n    s = x + y\n    k = d + 999\n    l = s - 2\n    if a[k]:\n        a[k] = False\n        a1[k] += 1\n    else:\n        #print('!!!')\n        ans += a1[k]\n        a1[k] += 1\n    if b[l]:\n        b[l] = False\n        b1[l] += 1\n    else:\n        #print('!!!')\n        ans += b1[l]\n        b1[l] += 1\n#print(a)\n#print(a1)\n#print(b)\n#print(b1)\nprint(ans)", "from math import factorial\nT = int(input())\na = {}\nb = {}\nfor i in range(T):\n\tn, m = list(map(int, input().split(' ')))\n\tif n-m in a:\n\t\ta[n-m] += 1\n\telif n-m not in a:\n\t\ta[n-m] = 1\n\n\tif n+m in b:\n\t\tb[n+m] += 1\n\telif m+n not in b:\n\t\tb[n+m] = 1\n\nans = 0\nfor i in a:\n\tif a[i]>1:\n\t\tans += factorial(a[i])//(2*factorial(a[i]-2))\n\nfor i in b:\n\tif b[i]>1:\n\t\tans += factorial(b[i])//(2*factorial(b[i]-2))\nprint(ans)", "n = int(input())\n\npos = {}\nneg = {}\n\nfor _ in range(n):\n    x, y = list(map(int, input().split()))\n    if x-y not in pos:\n        pos[x-y] = 0\n    if x+y not in neg:\n        neg[x+y] = 0\n\n    pos[x-y] += 1\n    neg[x+y] += 1\n\nret = 0\n\nfor _, cnt in list(pos.items()):\n    ret += cnt*(cnt-1)/2\n\nfor _, cnt in list(neg.items()):\n    ret += cnt*(cnt-1)/2\n\nprint(int(ret))\n", "n = int(input())\ndef main(n):\n p = []\n q = []\n for i in range(2):\n     p.append([0] * 1000)\n for i in range(2):\n     q.append([0] * 1000)\n for i in range(n):\n     x, y = list(map(int, input().split()))\n     x1, y1, x2, y2 = x - 1, y - 1, x - 1, y - 1\n     x1, y1 = x1 - min(x1, y1), y1 - min(x1, y1)\n     if x1 == 0:\n         p[1][y1] += 1\n     else:\n         p[0][x1] += 1\n     while y2 < 999 and x2 > 0:\n         x2 -= 1\n         y2 += 1\n     if y2 == 999:\n         q[1][x2] += 1\n     else:\n         q[0][y2] += 1\n sum = 0\n for i in range(2):\n     for t in range(1000):\n         sum += (p[i][t] * (p[i][t] - 1)) // 2\n for i in range(2):\n     for t in range(1000):\n         sum += (q[i][t] * (q[i][t] - 1)) // 2\n print(sum)\nmain(n)\n\n       \n    \n        \n", "n = int(input())\nK = [list(map(int, input().split())) for i in range(n)]\nD1 = [0] * 2000\nD2 = [0] * 2000\nfor i in range(len(K)):\n    D1[K[i][0] - K[i][1] + 1000] += 1\n    D2[K[i][0] - (1001 - K[i][1]) + 1000] += 1\nP1 = 0\nfor e in D1:\n    P1 += e * (e - 1) // 2\nP2 = 0\nfor e in D2:\n    P2 += e * (e - 1) // 2\nprint(P1 + P2)\n"]