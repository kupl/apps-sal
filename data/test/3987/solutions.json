["n = int(input())\n*A, = list(map(int, input().split()))\n\nseq = []\ncur = 1; cnt = 0\nfor a in A:\n    if cur == a:\n        cnt += 1\n    else:\n        seq.append(cnt)\n        cur = a; cnt = 1\nif cnt > 0:\n    seq.append(cnt)\nans = max(seq)\n\nl = len(seq)\ndp = [[0]*4 for i in range(l+1)]\nfor i in range(l):\n    one = i % 2 #12\n    s = seq[i]\n    for j in range(4):\n        dp[i+1][j] = max(dp[i+1][j], dp[i][j])\n        if not one: # 2\n            if j % 2 == 0:\n                dp[i+1][j] = max(dp[i+1][j], dp[i][j] + s)\n            else:\n                if j == 1:\n                    dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j] + s)\n        else: # 1\n            if j % 2 == 1:\n                dp[i+1][j] = max(dp[i+1][j], dp[i][j] + s)\n            else:\n                dp[i+1][j+1] = max(dp[i+1][j+1], dp[i][j] + s)\n#    print(dp[i+1])\nprint(max(dp[l]))\n\n\n\n", "a = [0] * 4\ninput()\nfor n in map(int, input().split()):\n  if n == 1:\n    a[0] += 1\n    a[2] = max(a[1] + 1, a[2] + 1)\n  else:\n    a[1] = max(a[0] + 1, a[1] + 1)\n    a[3] = max(a[2] + 1, a[3] + 1)\nprint(max(a))", "input()\na = list(map(int, input().split()))\n\np1,p2,p3,p4=0,0,0,0\n\nfor n in a:\n    if n == 1:\n        p1 += 1\n        p3 = max(p3 + 1, p2 + 1)\n    else:\n        p2 = max(p2 + 1, p1 + 1)\n        p4 = max(p4 + 1, p3 + 1)\nprint(max(p1,p2,p3,p4))", "n = int(input())\na = list(map(int, input().split()))\n\nd = [0 for _ in range(4)]\n\nfor val in a:\n    if val == 1:\n        d[0] += 1\n        d[2] = max(d[2] + 1, d[1] + 1)\n    else:\n        d[1] = max(d[1] + 1, d[0] + 1)\n        d[3] = max(d[3] + 1, d[2] + 1)\nprint(max(d))\n        \n", "n=int(input())\na=list(map(int,input().split()))\nt1,t2,t3,t4=0,0,0,0\nfor i in range(len(a)):\n    if a[i]==1:\n        t1+=1\n        t3=max(t3+1,t2+1)\n    else:\n        t2=max(t2+1,t1+1)\n        t4=max(t4+1,t3+1)\nprint(max(t1,t2,t3,t4))\n\n\n\n\n\n##////////////////      //////        ///////      //             ///////     //  //   //\n##////          //    ///   ///     ///    ///     //            ///  ///     ////     //\n##////    ////       ///     ///   ///      ///    //           /////////     ////     ///////\n##////     /////    ///       /// ///        ///   //          ///    ///     ////     //   //\n##//////////////     ///////////   ///////////     //////     ///     ///     //  //   //   //\n\n\n\n", "n=int(input())\n\na,ab,aba,abab=0,0,0,0\n\nb=[int(x) for x in input().split()]\n\nfor x in b:\n\n    if x==1:\n\n        a+=1\n\n        aba+=1\n\n    else:\n\n        ab+=1\n\n        abab+=1\n\n    ab=max(a,ab)\n\n    aba=max(aba,ab)\n\n    abab=max(abab,aba)\n\nprint(abab)\n\n\n\n\n\n# Made By Mostafa_Khaled\n", "#fek mikoni aslan lozoomi dare kasi tu in donya dustet dashtet bashe ?!\n#age are chera tanhayi ?!!\n#age na chera namordi ?!!!\nDP = [0] * 4\ninput()\nfor x in map(int, input().split()):\n    if x == 1 :\n        DP[0] += 1\n        DP[2] += 1\n    else :\n        DP[1] += 1\n        DP[3] += 1\n    for j in range ( 1 , 4 ) :\n        DP[j] = max ( DP[j] , DP[j-1] )\nprint (DP[3]) ", "R = lambda: map(int, input().split())\nn = int(input())\ndp = [0] * 5\nfor x in R():\n    if x == 1:\n        dp[1], dp[3] = dp[1] + 1, max(dp[3], dp[2]) + 1\n    else:\n        dp[2], dp[4] = max(dp[1], dp[2]) + 1, max(dp[3], dp[4]) + 1\nprint(max(dp))", "a = [0] * 4\ninput()\nfor n in map(int, input().split()):\n  if n == 1:\n    a[0] += 1\n    a[2] = max(a[1] + 1, a[2] + 1)\n  else:\n    a[1] = max(a[0] + 1, a[1] + 1)\n    a[3] = max(a[2] + 1, a[3] + 1)\n\nprint(max(a))\n        \n", "n = int(input())\nA = list(map(int, input().split()))\none = [0]\ntwo = [0]\nfor i in A:\n    one.append(one[-1])\n    two.append(two[-1])\n    if i == 1:\n        one[-1] += 1\n    else:\n        two[-1] += 1\nrdp1 = [[1] * n for _ in range(n)]\nfor l in range(n):\n    for r in range(l + 1, n):\n        if A[r] == 2:\n            rdp1[l][r] = rdp1[l][r - 1] + 1\n        else:\n            if rdp1[l][r - 1] == one[r] - one[l]:\n                rdp1[l][r] = rdp1[l][r - 1] + 1\n            else:\n                rdp1[l][r] = rdp1[l][r - 1]\nrdp2 = [[1] * n for _ in range(n)]\nfor l in range(n):\n    for r in range(l + 1, n):\n        if A[r] == 1:\n            rdp2[l][r] = rdp2[l][r - 1] + 1\n        else:\n            if rdp2[l][r - 1] == two[r] - two[l]:\n                rdp2[l][r] = rdp2[l][r - 1] + 1\n            else:\n                rdp2[l][r] = rdp2[l][r - 1]\ndp = [0] * n\ndp[0] = 1\nfor i in range(1, n):\n    if A[i] == 2:\n        dp[i] = dp[i - 1] + 1\n    else:\n        if dp[i - 1] == one[i]:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = dp[i - 1]\n    dp[i] = max(dp[i], rdp2[0][i])\n    for j in range(i):\n        if rdp1[0][j] == one[j + 1]:\n            dp[i] = max(dp[i], rdp1[0][j] + rdp2[j + 1][i])\n        dp[i] = max(dp[i], rdp1[0][j] + two[i + 1] - two[j + 1])\nprint(dp[-1])\n", "n = int(input())\nA = list(map(int, input().split()))\none = [0]\ntwo = [0]\nfor i in A:\n    one.append(one[-1])\n    two.append(two[-1])\n    if i == 1:\n        one[-1] += 1\n    else:\n        two[-1] += 1\nrdp1 = [[1] * n for _ in range(n)]\nrdp2 = [[1] * n for _ in range(n)]\nfor l in range(n):\n    for r in range(l + 1, n):\n        if A[r] == 2:\n            rdp1[l][r] = rdp1[l][r - 1] + 1\n        else:\n            if rdp1[l][r - 1] == one[r] - one[l]:\n                rdp1[l][r] = rdp1[l][r - 1] + 1\n            else:\n                rdp1[l][r] = rdp1[l][r - 1]\n        if A[r] == 1:\n            rdp2[l][r] = rdp2[l][r - 1] + 1\n        else:\n            if rdp2[l][r - 1] == two[r] - two[l]:\n                rdp2[l][r] = rdp2[l][r - 1] + 1\n            else:\n                rdp2[l][r] = rdp2[l][r - 1]\ndp = [0] * n\ndp[0] = 1\nfor i in range(1, n):\n    if A[i] == 2:\n        dp[i] = dp[i - 1] + 1\n    else:\n        if dp[i - 1] == one[i]:\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = dp[i - 1]\n    dp[i] = max(dp[i], rdp2[0][i])\n    for j in range(i):\n        if rdp1[0][j] == one[j + 1]:\n            dp[i] = max(dp[i], rdp1[0][j] + rdp2[j + 1][i])\n        dp[i] = max(dp[i], rdp1[0][j] + two[i + 1] - two[j + 1])\nprint(dp[-1])\n", "# import sys \n# sys.stdin = open('input.txt', 'r')  \n# sys.stdout = open('output.txt', 'w')\n\nn = int(input())\na = list(map(int,input().split()))\n\ncount = [0]*4\n\nfor i in range(n):\n\tif (a[i] == 1):\n\t\tcount[0] += 1\n\t\tcount[2] = max(count[1]+1,count[2]+1)\n\telse:\n\t\tcount[1] = max(count[1]+1,count[0]+1)\n\t\tcount[3] = max(count[3]+1,count[2]+1)\n\nprint(max(count))", "def solve(lst):\n    a = b = c = d = 0\n    for i in range(len(lst)):\n        if lst[i] == 1:\n            a += 1\n            c = max(b, c) + 1\n        else:\n            b = max(a, b) + 1\n            d = max(c, d) + 1\n    return max(a, b, c, d)\n\nn = input()\nlst = list(map(int, input().split()))\nprint(solve(lst))\n", "import sys\nimport math\nfrom collections import defaultdict\nn=int(sys.stdin.readline())\narr=list(map(int,sys.stdin.readline().split()))\npre=[0]\ncnt1,cnt2=0,0\nlast1,last2=0,0\nfor i in range(n):\n    if arr[i]==1:\n        cnt1+=1\n        #pre.append(cnt1)\n        x=max(last1+1,0)\n        pre.append(x)\n        last1=x\n    else:\n        #cnt2+=1\n        x=max(last1+1,last2+1)\n        pre.append(x)\n        last2=x\nsuf=[0 for _ in range(n+1)]\n#cnt1,cnt2=0,0\nlast1,last2=0,0\nfor i in range(n-1,-1,-1):\n    if arr[i]==1:\n        #cnt1+=1\n        x=max(last1+1,last2+1)\n        suf[i]=x\n        last1=x\n    else:\n        #cnt2+=1\n        x=last2+1\n        suf[i]=x\n        last2=x\nans=max(max(pre),max(suf))\n#print(pre,'pre')\n#print(suf,'suf')\n#print(ans,'ans')\nfor i in range(1,n+1):\n    cnt1,cnt2=0,0\n    last1,last2=0,0\n    for j in range(i,n+1):\n        if arr[j-1]==1:\n            x=max(last1+1,last2+1)\n            last1=x\n            ans=max(pre[i-1]+x+suf[j],ans)\n        else:\n            x=last2+1\n            last2=x\n            ans=max(pre[i-1]+x+suf[j],ans)\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\npref = [0] * (n + 1)\nfor i in range(n):\n\tpref[i + 1] = pref[i] + (1 if a[i] == 1 else 0)\nsuf = [0] * (n + 1)\nfor i in reversed(range(n)):\n\tsuf[i] = suf[i + 1] + (1 if a[i] == 2 else 0)\ndp = [0, 0, 0, 0]\nfor i in range(n):\n\tnew_dp = [max(dp[i], dp[i - 1]) if i > 0 else dp[i] for i in range(4)]\n\tif a[i] == 1:\n\t\tnew_dp[0] += 1\n\t\tnew_dp[2] += 1\n\telse:\n\t\tnew_dp[1] += 1\n\t\tnew_dp[3] += 1\n\tdp = new_dp\nprint(max(max([pref[i] + suf[i] for i in range(n + 1)]), max(dp)))", "n = int(input())\na = list(map(int, input().split()))\ndp = [0] * 4\nfor j in range(n):\n\tdp = [dp[i] if i == 0 else max(dp[i], dp[i - 1]) for i in range(4)]\n\tdp = [dp[i] + (1 if i % 2 == a[j] - 1 else 0) for i in range(4)]\nprint(max(dp))", "# https://codeforces.com/contest/933/problem/A\nimport sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n# do magic here\n\nn = int(input())\narr = list(map(int, input().split()))\ndp = [[0 for x in range(n)] for y in range(4)]\n\nif arr[0] == 1:\n    dp[0][0] = 1\nelse:\n    dp[1][0] = 1\n\nfor i in range(1, n):\n    if arr[i] == 1:\n        dp[0][i] = dp[0][i-1] + 1\n    else:\n        dp[0][i] = dp[0][i-1]\n\nfor i in range(1, n):\n    if arr[i] == 2:\n        dp[1][i] = max(dp[1][i-1] + 1, dp[0][i-1] + 1)\n    else:\n        dp[1][i] = dp[1][i-1]\n\nfor i in range(1,n):\n    if arr[i] == 1:\n        dp[2][i] = max([dp[2][i-1] + 1, dp[1][i-1] + 1, dp[0][i-1] + 1])\n    else:\n        dp[2][i] = dp[2][i-1]\n\nfor i in range(1,n):\n    if arr[i] == 2:\n        dp[3][i] = max([dp[3][i-1] + 1, dp[2][i-1] + 1, dp[1][i-1] + 1, dp[0][i-1] + 1])\n    else:\n        dp[3][i] = dp[3][i-1]\n# print(dp)\nans = max([dp[2][n-1],dp[1][n-1],dp[0][n-1],dp[3][n-1]])\nprint(ans)\n", "#t=int(input())\nt=1\nfor _ in range(t):\n    n=int(input())\n    l=list(map(int,input().split()))\n    dp=[[0 for j in range(4)] for i in range(n)]\n    p1=[0]*(n+1)\n    p2=[0]*(n+1)\n    for i in range(n):\n        p1[i+1]+=p1[i]\n        p2[i+1]+=p2[i]\n        if l[i]==1:\n            p1[i+1]+=1\n        else:\n            p2[i+1]+=1\n    if l[0]==1:        \n        dp[0][0]=1\n    else:\n        dp[0][1]=1\n    for i in range(1,n):\n        for j in range(i-1,-1,-1):\n            if l[i]==1:\n                dp[i][0]=p1[i+1]\n                dp[i][1]=max(dp[j][1],dp[i][1])\n                if dp[j][1]!=0:\n                    dp[i][2]=max(dp[j][1]+1,dp[j][2]+1,dp[i][2])\n                else:\n                    dp[i][2]=max(dp[j][2]+1,dp[i][2])\n                dp[i][3]=max(dp[j][2],dp[i][3])\n            else:\n                dp[i][0]=max(dp[j][0],dp[i][0])\n                if dp[j][0]!=0:\n                    dp[i][1]=max(dp[j][1]+1,dp[j][0]+1,dp[i][1])\n                else:\n                    dp[i][1]=max(dp[j][1]+1,dp[i][1])\n                dp[i][2]=dp[j][2]\n                if dp[j][2]!=0:\n                    dp[i][3]=max(dp[j][3]+1,dp[j][2]+1,dp[i][3])\n                else:\n                    dp[i][3]=max(dp[j][3]+1,dp[i][3])\n    maxi=0\n    for i in range(n):\n        for j in range(4):\n            maxi=max(maxi,dp[i][j])\n    print(maxi)        "]