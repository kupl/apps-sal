["X,Y = list(map(int,input().split()))\n#X, 2X, 4X,...,2^(t-1)*X<=Y\u3068\u306a\u308b\u6700\u5927\u306et\n#10^18 \u306f\u3060\u3044\u305f\u30442^60\u3060\u304b\u3089\u5168\u90e8\u8a66\u305b\u305d\u3046\nfor t in range(1,100):\n    if 2**(t-1)*X<=Y:\n        out = t\n    else:\n        break\nprint(out)\n", "x,y = map(int,input().split())\nans = 0\nwhile x <= y:\n    ans += 1\n    x *= 2\nprint(ans)", "x, y = list(map(int, input().split()))\nans = len(str(bin(y // x))) -2\nprint(ans)\n", "x, y = map(int,input().split())\nans = 1\nwhile x * 2 <= y:\n  x *= 2\n  ans += 1\nprint(ans)", "# ABC088C\n\nX, Y = map(int, input().split())\ncnt = 0\ni = X\nwhile i <= Y:\n    cnt += 1\n    i = i*2\nprint(cnt)", "X, Y = map(int, input().split())\nCNT = 0\nwhile X*2**CNT <= Y:\n    CNT += 1\nprint(CNT)", "x,y=map(int,input().split())\nans=0\nwhile x<=y:\n    ans+=1\n    x*=2\nprint(ans)", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    x, y = list(map(int, input().split()))\n    ans = 0\n    while x <= y:\n        ans += 1\n        x *= 2\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\nfrom math import floor\nfrom fractions import Fraction\nfrom decimal import Decimal\nfrom collections import Counter\nimport itertools\n\ndef input(): return sys.stdin.readline().strip()\nsys.setrecursionlimit(250000)\ndef getInt(): return int(input())\ndef getMultiInt(): return map(int, input().split())\ndef getIntList(): return list(map(int, input().split()))\ndef getStr(): return input()\ndef getMultiStr(): return map(str, input().split())\ndef getStrList(): return list(map(str, input().split()))\n\ndef main():\n    x,y = getMultiInt()\n\n    count = 1\n\n    while True:\n        if x*2 <=y :\n            x = x*2\n            count +=1\n        else:\n            break\n    print(count)\ndef __starting_point():\n    main()\n__starting_point()", "x,y=map(int,input().split())\nans=0\nwhile x<=y:\n  x*=2\n  ans+=1\nprint(ans)", "x,y=map(int,input().split())\nans=0\nwhile x<=y:\n  ans+=1\n  x*=2\nprint(ans)", "a,b=map(int,input().split())\nscore=0\nwhile b>=a:\n  a*=2\n  score+=1\nprint(score)", "X, Y = map(int, input().split())\nans = 0\nwhile X <= Y:\n  X *= 2\n  ans += 1\nprint(ans)", "x, y = map(int, input().split())\n\narr = [x]\n\nwhile arr[-1] <= y:\n    arr.append(arr[-1] * 2)\narr.pop()\n\nprint(len(arr))", "def solve(X, Y):\n    ans = 0\n    tmp = X\n    while tmp <= Y:\n        ans += 1\n        tmp *= 2\n\n    return ans\n\n\ndef __starting_point():\n    X, Y = list(map(int, input().split()))\n    print((solve(X, Y)))\n\n__starting_point()", "x, y = map(int, input().split())\n\nn = 0\nv = x\nwhile v <= y:\n    n += 1\n    v *= 2\nprint(n)", "x, y = list(map(int, input().split()))\ncnt = 0\nwhile x <= y:\n    x = x*2\n    cnt += 1\nprint(cnt)\n", "x, y = map(int, input().split())\nfor i in range(10**10):\n    if x*2**i > y:\n        print(i)\n        break", "# author:  Taichicchi\n# created: 27.09.2020 23:04:41\n\nimport sys\n\nx, y = list(map(int, input().split()))\n\ncnt = 0\n\nwhile x <= y:\n    x *= 2\n    cnt += 1\n\nprint(cnt)\n", "x,y=list(map(int,input().split()))\nans=0\nwhile x<=y:\n    ans+=1\n    x*=2\nprint(ans)\n", "#import math\nX, Y = map(int, input().split())\ncnt = 0\n\n#ans = int(math.log2(Y) - math.log2(X))\n#print(ans+1)\nwhile X <= Y:\n  X *= 2\n  cnt += 1\nprint(cnt)", "x,y =map(int,input().split())\nans = 1\nfor i in range(10**7):\n    if x * 2 > y:\n        print(ans)\n        break\n    else:\n        x *= 2\n        ans += 1", "X,Y=list(map(int,input().split()))\n\ni=1\nwhile Y>=2**i*X:\n  i=i+1\nprint(i)", "x,y=map(int,input().split())\nans=x\ncnt=0\nwhile ans<=y:\n    ans*=2\n    cnt+=1\nprint(cnt)", "x,y = map(int,input().split())\nans = x\nj = 0\nwhile ans <= y:\n    ans *= 2\n    j += 1\nprint(j)", "X, Y = list(map(int, input().split()))\n\nans = 0\nwhile X <= Y:\n    ans += 1\n    X *= 2\n\nprint(ans)\n", "x,y=map(int,input().split())\n\ncnt=1\nwhile x*2<=y:\n    x*=2\n    cnt+=1\nprint(cnt)", "X,Y = map(int,input().split())\nk = 1\na = X\nwhile a<=Y:\n    a = a*2\n    k += 1\nprint(k-1)", "import sys\n\n\ndef IN_I(): return int(sys.stdin.readline().rstrip())\ndef IN_LI(): return list(map(int, sys.stdin.readline().rstrip().split()))\ndef IN_LF(): return list(map(float, sys.stdin.readline().rstrip().split()))\ndef IN_S(): return sys.stdin.readline().rstrip()\ndef IN_LS(): return list(sys.stdin.readline().rstrip().split())\nINF = float('inf')\nMOD = 10**9 + 7\n\n\nX, Y = IN_LI()\n\nans = 0\nwhile X <= Y:\n    ans += 1\n    X = X * 2\n\nprint(ans)\n", "X,Y=map(int,input().split())\n \nans=0\nseki=X\n \nwhile seki <= Y:\n    seki*=2\n    ans+=1\nprint(ans)", "x, y = map(int, input().split())\nans = 0\nwhile x <= y:\n    x *= 2\n    ans += 1\nprint(ans)", "x,y=map(int,input().split())\n \ncnt=1\nwhile x*2<=y:\n    x*=2\n    cnt+=1\nprint(cnt)", "x,y=map(int,input().split())\nc=0\nwhile x<=y:\n    c+=1\n    x=x*2\nprint(c)", "import math\nx, y = map(int, input().split())\nans = 0\n\n#ans = int(math.log2(y/x))\n\nwhile y >= x:\n    x = x * 2\n    ans += 1\n\nprint(ans)", "x, y = list(map(int,input().split()))\ncnt = 1\nwhile 1:\n    if x * 2 <= y:\n        cnt += 1\n        x *= 2\n    else:\n        break\nprint(cnt)\n", "x,y=map(int,input().split())\n\ncnt=0\n\nwhile(True):\n    if x<=y:\n        cnt+=1\n        x=x*2\n    else:\n        print(cnt)\n        return", "3\nimport sys\ninput = lambda: sys.stdin.readline().strip()\nx, y = [int(x) for x in input().split()]\nans = 0\nwhile x <= y:\n    ans += 1\n    x *= 2\nprint(ans)\n", "import sys\nimport math\nimport itertools\nfrom collections import defaultdict, deque, Counter\nfrom copy import deepcopy\nfrom bisect import bisect, bisect_right, bisect_left\nfrom heapq import heapify, heappop, heappush\n    \ninput = sys.stdin.readline\ndef RD(): return input().rstrip()\ndef F(): return float(input().rstrip())\ndef I(): return int(input().rstrip())\ndef MI(): return map(int, input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int, input().split()))\ndef TI(): return tuple(map(int, input().split()))\ndef LF(): return list(map(float,input().split()))\ndef Init(H, W, num): return [[num for i in range(W)] for j in range(H)]\n    \n    \ndef main():\n    X, Y = MI()\n    ans = 1\n    \n    while True:\n        X *= 2\n        if X > Y:\n            break\n        ans+=1\n\n    print(ans)\ndef __starting_point():\n    main()\n__starting_point()", "x, y = map(int, input().split())\nans = 1\nwhile True:\n    x = x*2\n    if x > y:\n        break\n    ans += 1\nprint(ans)", "x, y = map(int, input().split())\ncnt = 0\nwhile x <= y:\n    x*= 2\n    cnt += 1\nprint(cnt)", "# row = [int(x) for x in input().rstrip().split(\" \")]\n# n = int(input().rstrip())\n# s = input().rstrip()\n# row = [int(input().rstrip()) for _ in range(n)]\n\ndef resolve():\n    import sys\n    input = sys.stdin.readline\n\n    x, y = [int(x) for x in input().rstrip().split(\" \")]\n\n    # 2 ** ?\n    count = 1\n    num = x\n    while num * 2 <= y:\n        count += 1\n        num *= 2\n    print(count)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "X, Y = map(int, input().split())\n\ncnt = 0\ncalc = X\n\nwhile calc <= Y:\n    cnt += 1\n    calc = X*(2**cnt)\n\nprint(cnt)", "import sys\ninput = sys.stdin.readline\n\nX, Y = list(map(int, input().split()))\nans = 0\nfor i in range(100):\n    temp = X*(2**i)\n    if temp > Y:\n        ans = i\n        break\nprint(ans)\n", "X,Y=map(int,input().split())\nn=0\nwhile 2**n*X<=Y:\n  n+=1\nprint(n)", "X, Y = map(int, input().split())\nans = 0\nnow = X\nwhile now <= Y:\n    ans += 1\n    now *= 2\nprint(ans)", "X, Y = map(int, input().split())\n\ncnt = 0\nx_temp = X\nwhile True:\n    x_temp *= 2\n    if x_temp <= Y:\n        cnt += 1\n    else:\n        break\n\nprint(cnt+1)", "x, y = map(int, input().split())\na, ans = x, 0\nwhile a <= y:\n\ta *= 2\n\tans += 1\nprint(ans)", "x,y=map(int,input().split())\nx,y=1,y//x\ncnt=0\nwhile x<=y:\n  x*=2\n  cnt+=1\nprint(cnt)", "#https://qiita.com/goto_yuta_/items/1c104e332351ab9389a6\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\nimport sys\nsys.setrecursionlimit(10 ** 6)#pypy3\u306fnumpy\u3092\u4f7f\u3048\u306a\u3044\uff0c\u3053\u306e\u884c\u3092\u6d88\u3059\u3053\u3068\uff0e\n# \u5165\u529b\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u53d7\u3051\u53d6\u308b\ndef II(): return int(sys.stdin.readline())\n# \u5165\u529b\u5168\u3066\u3092\u6574\u6570\u306b\u5909\u63db\u3057\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LI(): return list(map(int, sys.stdin.readline().split()))\n# \u5165\u529b\u306e\u6587\u5b57\u5217\u30921\u6587\u5b57\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef LC(): return list(input())\n# \u5165\u529b\u306e\u6570\u5b57\u5217\u30921\u6841\u305a\u3064\u306b\u5206\u3051\u305f\u3082\u306e\u306e\u914d\u5217\u3092\u53d7\u3051\u53d6\u308b\ndef IC():return [int(c) for c in input()]\n#\u5c11\u306a\u30441\u884c\u306eint\u5909\u6570\u306b\u5165\u308c\u308b\u69d8\u306e\u5165\u529b\uff0e\u4f8b:N, A, B = map(int, input().split())\ndef MI(): return map(int, input().split())\nX,Y = MI()\nOut = 1\nwhile(X*2 <= Y):\n    Out += 1\n    X *= 2\nprint(Out)", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate, product # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\nimport math\nimport bisect\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n# my_round_int = lambda x:np.round((x*2 + 1)//2)\n# \u56db\u6368\u4e94\u5165g\n#\n# \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u7cfb\n# int min_y = max(0, i - 2), max_y = min(h - 1, i + 2);\n# int min_x = max(0, j - 2), max_x = min(w - 1, j + 2);\n#\n#\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\n#mod = 998244353\nfrom sys import stdin\nreadline = stdin.readline\ndef readInts():\n  return list(map(int,readline().split()))\ndef readTuples():\n    return tuple(map(int,readline().split()))\ndef I():\n  return int(readline())\nx,y = readInts()\ncnt = 1\nwhile x <= y:\n    x += x\n    if x <= y:\n        cnt += 1\nprint(cnt)\n", "import sys\nimport pprint\nimport math\nimport itertools\nfrom collections import defaultdict\ninput = sys.stdin.readline\n\nX, Y = list(map(int, input().split()))\nans = 0\nfor i in range(X, X+100):\n    now = i\n    cnt = 0\n    while True:\n        if now <= Y:\n            cnt += 1\n            now *= 2\n        else:\n            break\n    ans = max(ans, cnt)\nprint(ans)\n", "X,Y=map(int,input().split())\n\nn=0\nwhile X*2**n<=Y:\n    n+=1\n\nprint(n)", "from collections import Counter\n\n\ndef lmi():\n    return list(map(int, input().split()))\n\n\ndef main():\n    X, Y = lmi()\n    cur = X\n    result = 0\n    while cur <= Y:\n        result += 1\n        cur *= 2\n    print(result)\n\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "X,Y = map(int,input().split())\ncnt = 0\nA = X\n\nwhile A <= Y:\n  A = A*2\n  cnt += 1\n  \nprint(cnt)", "x, y = list(map(int, input().split(' ')))\ncnt = 0\ntmp = x\nwhile tmp <= y:\n    cnt = cnt + 1\n    tmp = tmp * 2\nprint(cnt)\n\n", "import math\n\nX,Y = list(map(int,input().split()))\n\npower = 0\nwhile X * pow(2,power) <= Y:\n    power += 1\nprint(power)\n", "# 89\nx, y = map(int, input().split())\nans = 0\nwhile x <= y:\n    ans += 1\n    x *= 2\n\nprint(ans)", "x, y = list(map(int, input().split()))\n\nans = 0\nwhile x <= y:\n    ans += 1\n    x <<= 1\n\nprint(ans)\n", "X, Y = map(int, input().split())\n\ncnt = 0\na = X\nwhile a <= Y:\n    cnt += 1\n    a *= 2\nprint(cnt)", "#atcoder template\ndef main():\n    import sys\n    input = sys.stdin.readline\n    #\u6587\u5b57\u5217\u5165\u529b\u306e\u6642\u306f\u4e0a\u8a18\u306ferror\u3068\u306a\u308b\u3002\n    #\u3053\u3053\u306b\u30b3\u30fc\u30c9\n    #input\n    x, y = map(int, input().split())\n\n    #output\n    #y\u4ee5\u4e0b\u3067\u3082\u6700\u3082\u5927\u304d\u30442^z\n\n    answer = 0\n    if x == 1:\n        answer = 1\n        while pow(2, answer) <= y:\n            answer += 1\n    else:\n        while x * pow(2, answer) <= y:\n            answer += 1\n\n    print(answer)\n\n    #N = 1\u306e\u3068\u304d\u306a\u3069corner case\u3092\u78ba\u8a8d\uff01\ndef __starting_point():\n    main()\n__starting_point()", "X, Y = map(int, input().split())\nA = [X]\nwhile True:\n    next = A[-1] * 2\n    if next > Y:\n        break\n    else:\n        A.append(next)\nprint(len(A))", "x,y = map(int,input().split())\nans = 1\nwhile True:\n  x *= 2\n  if x > y:\n    break\n  ans += 1\nprint(ans)", "def solve():\n    X, Y = [int(i) for i in input().split()]\n    ans = 0\n    while X <= Y:\n        ans += 1\n        X *= 2\n    print(ans)\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "x,y = map(int,input().split())\n\nlst = [x]\nfor i in range(10**18):\n    if lst[-1]*2 > y:\n        break\n    else:\n        lst.append(lst[-1]*2)\n\nprint(len(lst))", "x,y = map(int, input().split())\ncnt = 0\nwhile x <= y:\n    cnt += 1\n    x *= 2\nprint(cnt)", "X,Y = map(int,input().split())\nans = 0\nwhile X <= Y:\n    X *= 2\n    ans += 1\nprint(ans)", "x, y = map(int, input().split())\n\nn = x\nans = 0\nwhile n <= y:\n    n *= 2\n    ans += 1\nprint(ans)", "X, Y = map(int, input().split())\nans = []\nn = X\nwhile n <= Y:\n    ans.append(n)\n    n *= 2\nprint(len(ans))", "X, Y = input().split(' ')\nX, Y = int(X), int(Y)\ncnt = 1\nNum = X\nwhile Num <= Y:\n  Num *= 2\n  if Num <= Y:\n    cnt += 1\nprint(cnt)", "X,Y=map(int,input().split())\nans=0\nwhile X<=Y:\n    X=2*X\n    ans+=1\nprint(ans)", "x, y = map(int, input().split())\ncount = 0\nwhile y >= x:\n    x *= 2\n    count += 1\nprint(count)", "x, y = map(int, input().split())\nans = 0\ncur = x\nwhile cur <= y:\n    ans += 1\n    cur *= 2\nprint(ans)", "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10 ** 7)\n\nx, y = list(map(int, input().split()))\n\nans = 0\nwhile x <= y:\n    ans += 1\n    x *= 2\nprint(ans)\n", "# coding: utf-8\n# Your code here!\nimport sys\nreadline = sys.stdin.readline\nread = sys.stdin.read\n\nx,y = list(map(int,readline().split()))\n\nans = 0\nwhile x <= y:\n    x *= 2\n    ans += 1\n\nprint(ans)\n\n\n\n", "x,y=map(int,input().split())\nc=0\nwhile x<=y:\n    c+=1\n    x=x*2\nprint(c)", "x, y = list(map(int, input().split()))\n\nres = 0\nbase = 1\nwhile(x*base <= y):\n    base *= 2\n    res += 1\n\nprint(res)\n", "def LI():\n    return list(map(int, input().split()))\n\n\nX, Y = LI()\ncount = 1\ntotal = X\nfor i in range(1000000):\n    total *= 2\n    if total > Y:\n        break\n    count += 1\nprint(count)\n", "x, y = map(int, input().split())  \ncnt = 1\nwhile x *2 <= y:\n    #print(x*2)\n    cnt+=1\n    x=x*2\nprint(cnt)", "X,Y = map(int,input().split())\na = 1\nx = X\nmul = min(max(X,2),2)\ncnt = 1\nfor i in range(10000):\n  x *= mul\n  if x>Y:\n    cnt+=i\n    break\nprint(cnt)", "X, Y = map(int, input().split())\nans = 0\nwhile X <= Y:\n    X *= 2\n    ans += 1\nprint(ans)", "x, y = map(int, input().split())\nans = 0\ns = 0\nc = 1\nwhile s <= y:\n    s = x * 2 ** c\n    c += 1\n    ans += 1\nprint(ans)", "x, y = list(map(int, input().split()))\nnum = x\ncnt = 0\nwhile(num <= y):\n    num *= 2\n    cnt += 1\nprint(cnt)\n", "x, y = list(map(int, input().split()))\n\nif y < 2*x:\n    print((1))\n    return\n\nans = 1\nwhile x*2 <= y:\n    ans += 1\n    x = 2*x\n\nprint(ans)\n", "import math\nx, y = map(int, input().split())\nans = 0\nwhile x <= y:\n    x *= 2\n    ans += 1\nprint(ans)", "x, y = map(int, input().split())\n\ndef count(x, y):\n    ans = 0\n    while(x <= y):\n        x *= 2\n        ans += 1\n    return ans\n\nprint(count(x, y))", "X,Y = map(int, input().split())\n\nans = 0\nfor _ in range(100):\n    ans += 1\n    X *= 2\n    if X > Y:\n        break\nprint(ans)", "x, y = map(int, input().split())\n\ncount = 0\nwhile y >= x:\n    count += 1\n    y = y // 2\nprint(count)", "x, y = map(int, input().split())\n\ncnt = 0\nwhile y >= x:\n    cnt += 1\n    x *= 2\nprint(cnt)", "x, y = map(int, input().split())\n\nans = 0\nnum = x\nwhile num <= y:\n  num *= 2\n  ans += 1\n  \nprint(ans)", "X,Y = map(int, input().split())\nans = 0\nwhile X <= Y:\n    ans+=1\n    X*=2\n\nprint(ans) ", "# coding: utf-8\n\n\ndef main():\n    X, Y = list(map(int, input().split()))\n    ans = 0\n    while X <= Y:\n        X *= 2\n        ans += 1\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    x, y = list(map(int, input().split()))\n    cnt = 1\n\n    while True:\n        x *= 2\n        if x <= y:\n            cnt += 1\n        else:\n            break\n\n    print(cnt)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "X, Y = list(map(int, input().split()))\n\nans = 1\ntmp = X\nwhile tmp*2 <= Y:\n    ans += 1\n    tmp *= 2\nprint(ans)\n", "def main():\n    X, Y = list(map(int, input().split()))\n    ans = 1\n    cnt = X\n    for _ in range(300):\n        cnt *= 2\n        if cnt <= Y:\n            ans += 1\n        else:\n            print(ans)\n            return\n        \ndef __starting_point():\n    main()\n\n__starting_point()", "'''\nCreated on 2020/10/02\n\n@author: harurun\n'''\nimport sys\npin=sys.stdin.readline\n\ndef main():\n  x,y=map(int,pin().split())\n  cnt=0\n  while x<=y:\n    x*=2\n    cnt+=1\n  print(cnt)\n  return\nmain()", "x, y = map(int, input().split())\nres = 0\nwhile x <= y:\n    x *= 2\n    res += 1\nprint(res)", "x, y = map(int, input().split())\n\ncount = 1\nwhile x * 2 <= y:\n    count += 1\n    x *= 2\n\nprint(count)", "x,y = map(int,input().split())\nans = 0\nwhile x <= y:\n    x *= 2\n    ans += 1\nprint(ans)", "def main():\n\tX,Y = map(int,input().split())\n\tans = 1\n\tx = X\n\n\tfor i in range(Y):\n\t\tif x * 2 > Y:\n\t\t\tbreak\n\t\telse:\n\t\t\tx *= 2\n\t\t\tans += 1\n#\t\tprint(x,X,Y)\n\n\n\tprint(ans)\n\ndef __starting_point():\n    main()\n__starting_point()"]