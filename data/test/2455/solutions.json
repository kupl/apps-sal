["T=int(input())\n\nfor t in range(T):\n    s=input()\n    ans=0\n    L=[]\n    for i in [1,2,3,4,6,12]:\n        x=i\n        y=12//x\n        E=[]\n        for j in range(12):\n            if(j%y==0):\n                E.append(\"\")\n            E[-1]+=s[j]\n        for j in range(y):\n            c=0\n            for z in range(i):\n                if(E[z][j]=='X'):\n                    c+=1\n            if(c==i):\n                ans+=1\n                L.append(i)\n                break\n    print(ans,end=\" \")\n    for item in L:\n        print(item,end=\"x\")\n        print(12//item,end=\" \")\n    print()\n", "#!/usr/bin/env python3\n\ndef read_ints():\n\treturn list(map(int, input().strip().split()))\n\nt, = read_ints()\n\nfor _ in range(t):\n\tx = input()\n\n\tcorrect = []\n\n\tfor a in [1, 2, 3, 4, 6, 12]:\n\t\tcor = False\n\t\tfor c in range(0, 12//a):\n\t\t\ts = set(x[c::12//a])\n\n\t\t\tif len(s)==1 and 'X' in s:\n\t\t\t\tcor = True\n\t\t\t\tbreak\n\n\t\tif cor == True:\n\t\t\tcorrect.append(\"{}x{}\".format(a, 12//a))\n\t\n\tprint(len(correct), ' '.join(correct))\n\t\t\t\t\n\n\n", "# http://codeforces.com/contest/400/problem/0\n# Codeforces : A. Inna and choose options\n\nliste_a = (1, 2, 3, 4, 6, 12)\nliste_results = []\n\ndef process(essai):\n    nonlocal liste_results\n    liste_av = [0]\n    for a in liste_a:\n        b = 12 // a\n        for r in range(b):\n            if essai[r::b] == 'X'*a:\n                liste_av[0] += 1\n                liste_av.append('{}x{}'.format(a,b))\n                break\n    liste_av[0] = str(liste_av[0])\n    liste_results.append(liste_av)\n\n\n\n\nt = int(input())\nfor k in range(t):\n    essai = input()\n    process(essai)\n\nfor s in liste_results:\n    print(*s)\n", "t = int(input())\nfor i in range(t):\n    s = input().strip()\n    cnt = 0\n    ans = []\n    for b in [1, 2, 3, 4, 6, 12]:\n        List = []\n        a = 12 // b\n        for begin in range(b):\n            column = ''\n            j = begin\n            while j < 12:\n                column += s[j]\n                j += b\n            List.append(column)\n        #print(i, b, List)\n        if 'X' * a in List:\n            cnt += 1\n            ans.append((a, b))\n    print(cnt, end = ' ')\n    for pair in sorted(ans):\n        print('x'.join(map(str, pair)), end = ' ')\n    print()\n", "def test(s):\n    res = []\n    for i in [[1, 12], [2, 6], [3, 4], [4, 3], [6, 2], [12, 1]]:\n        a = [[\"O\" for i in range(i[1])] for j in range(i[0])]\n        for j in range(i[0]):\n            for k in range(i[1]):\n                a[j][k] = s[j * i[1] + k]\n        if check(a):\n            res.append(i)\n    return res\n\ndef check(a):\n    for i in range(len(a[0])):\n        if not \"O\" in [a[j][i] for j in range(len(a))]:\n            return True\n    return False\n\nt = int(input())\nfor i in range(t):\n    s = input().strip()\n    x = test(s)\n    print(len(x), end=\" \")\n    for j in x:\n        print(j[0], \"x\", j[1], sep=\"\", end=\" \")\n    print()\n", "for _ in range(int(input())):\n    cards = input()\n    count = 0\n    output = ''\n    if 'X' in cards:\n        count += 1\n        output += ' 1x12'\n    for q, p in zip(cards[:6], cards[6:]):\n        if q == p == 'X':\n            count += 1\n            output += ' 2x6'\n            break\n    for q, p, r in zip(cards[:4], cards[4:8], cards[8:]):\n        if q == p == r == 'X':\n            count += 1\n            output += ' 3x4'\n            break\n    for q, p, r, s in zip(cards[:3], cards[3:6], cards[6:9], cards[9:]):\n        if q == p == r == s == 'X':\n            count += 1\n            output += ' 4x3'\n            break\n    for q, p, r, s, t, u in zip(cards[:2], cards[2:4], cards[4:6], cards[6:8], cards[8:10], cards[10:]):\n        if q == p == r == s == t == u == 'X':\n            count += 1\n            output += ' 6x2'\n            break\n    if 'O' not in cards:\n        count += 1\n        output += ' 12x1'\n    print(str(count) + output)\n", "n = int(input())\nab = [12, 6, 4, 3, 2, 1]\nlst = [list(input()) for i in range(n)]\nres = [[0] for i in range(n)] \nfor pr in range(n):\n    for elem in ab:\n        for i in range(elem):\n            x = 1\n            for j in range(0, 12, elem):\n                if lst[pr][i + j] == \"O\":\n                    x = 0\n            if x == 1 and str(12 // elem) + \"x\" + str(elem) not in res[pr]: \n                res[pr][0] += 1\n                res[pr].append(str(12 // elem) + \"x\" + str(elem))\nfor i in range(len(res)):\n    print(\" \".join(map(str, res[i])))\n", "t = int(input())\nfor i in range(t):\n    s = input()\n    ans = \"\"\n    count = 0\n    for j in range(1, 13):\n        flag = False\n        if 12 % j == 0:\n            for p in range(12 // j):\n                q = p\n                while q < 12 and s[q] == \"X\":\n                    q += 12 // j\n                if q >= 12:\n                    flag = True\n        if flag:\n            ans += str(j) + \"x\" + str(12 // j) + \" \"\n            count += 1\n    print(count, ans[:-1])", "n=int(input())\nfor i in range(n):\n    a=input()\n    c=0\n    p=''\n    if 'XXXXXXXXXXXX'==a:\n        print('6 1x12 2x6 3x4 4x3 6x2 12x1')\n        continue\n    if 'X' in a:\n        p=p+'1x12'\n        c+=1\n        if 'XX'==(a[0]+a[6]) or 'XX'==(a[1]+a[7]) or 'XX' ==(a[2]+a[8]) or 'XX' ==(a[3]+a[9]) or 'XX' ==(a[4]+a[10]) or 'XX' ==(a[5]+a[11]):\n            c+=1\n            p+=' 2x6'\n        if 'XXX'==(a[0]+a[4]+a[8]) or 'XXX'==(a[1]+a[5]+a[9]) or 'XXX'==(a[2]+a[6]+a[10]) or 'XXX'==(a[3]+a[7]+a[11]):\n            p+=' 3x4'\n            c+=1\n        if 'XXXX'==(a[0]+a[3]+a[6]+a[9]) or 'XXXX'==(a[1]+a[4]+a[7]+a[10]) or 'XXXX'==(a[2]+a[5]+a[8]+a[11]):\n            c+=1\n            p+=' 4x3'\n        if 'XXXXXX'==(a[0]+a[2]+a[4]+a[6]+a[8]+a[10])or 'XXXXXX'==(a[1]+a[3]+a[5]+a[7]+a[9]+a[11]):\n            c+=1\n            p+=' 6x2'\n        print(c,p)\n                        \n\n    else:\n        print(0)\n        \n", "n = int(input())\np = 0\nf = True\nfor k in range(n):\n    s = input().strip()\n    ot = set()\n    for i in range(1, 13):\n        if i == 5 or i == 7 or i == 9 or i == 10 or i == 11 or i == 8:\n            continue\n        for t in range(i):\n            p = True\n            for j in range(t, 12, i):\n                if s[j] == 'O':\n                    p = False\n            if p:\n                ot.add(i)\n    ot = list(reversed(sorted(list(ot))))\n    print(len(ot), end = ' ')\n    for i in ot:\n        print(str(12//i)+'x'+str(i), end = ' ')\n    print()", "from functools import reduce\n\ndef sol(l):\n  if not \"X\" in l: return \"0\"\n  l = l.replace(\"O\",\"0\").replace(\"X\",\"1\")\n  res = [ \"%ix%i\" % (12//i, i) for i in (12,6,4,3,2,1) if reduce(lambda x, y: x&y, [int(l[i*j:i*j+i],2) for j in range(12//i)], -1)]\n  return (\"%i %s\" % (len(res), \" \".join(res)))\n\nn = int(input())\nprint(\"\\n\".join([sol(input()) for i in range(n)]))", "from functools import reduce\nprint(\"\\n\".join([(lambda x:(\"%i %s\" % (len(x), \" \".join(x))))((lambda h:[ \"%ix%i\" % (12//i, i) for i in (12,6,4,3,2,1) if reduce(lambda x, y: x&y, [int(h.replace(\"O\",\"0\").replace(\"X\",\"1\")[i*j:i*j+i],2) for j in range(12//i)], -1)])(input())) for i in range(int(input()))]))", "t = int(input())\nn = 12\nwhile t > 0:\n    ans = []\n    t = t - 1\n    s = input()\n    for i in range(n):\n        r = i+1\n        if n%r != 0:\n            continue\n        c = n//r\n        flag = False\n        for j in range(c):\n            id = j\n            ff = False\n            while id < n:\n                if s[id] != 'X':\n                    ff = True\n                    break\n                id = id + c\n            if ff == False:\n                flag = True\n                break\n        if flag == True:\n            ans.append((r, c))\n\n    print(len(ans), end = '')\n    for i in range(len(ans)):\n        print(' ', ans[i][0], 'x', ans[i][1], sep = '', end = '')\n    print('')\n", "q = [12, 6, 4, 3, 2, 1]\np = {12 // i: 'X' * i for i in q}\nr = {i: str(12 // i) + 'x' + str(i) for i in q}\nfor i in range(int(input())):\n    s, t = [], input()\n    for j in q:\n        if any(t[k :: j] == p[j] for k in range(j)): s.append(r[j])\n    print(len(s), ' '.join(s))", "#!/usr/local/bin/python33\nn = int(input())\n\nfor i in range(n):\n\tcnt = 0\n\tansw = ['1x12', '2x6', '3x4', '4x3', '6x2', '12x1']\n\tanswb = [False, False, False, False, False, False]\n\tinstr = input()\n\n\tif 'X' in instr:\n\t\tcnt += 1\n\t\tanswb[0] = True\n\tfor j in range(6):\n\t\tif (instr[j] == instr[6 + j] == 'X'):\n\t\t\tcnt += 1\n\t\t\tanswb[1] = True\n\t\t\tbreak\n\tfor j in range(4):\n\t\tif (instr[j] == instr[4 + j] == instr[8 + j] == 'X'):\n\t\t\tcnt += 1\n\t\t\tanswb[2] = True\n\t\t\tbreak\n\tfor j in range(3):\n\t\tif (instr[j] == instr[3 + j] == instr[6 + j] == instr[9 + j] == 'X'):\n\t\t\tcnt += 1\n\t\t\tanswb[3] = True\n\t\t\tbreak\n\tfor j in range(2):\n\t\tif (instr[j] == instr[2 + j] == instr[4 + j] == instr[6 + j] == instr[8 + j] == instr[10 + j] == 'X'):\n\t\t\tcnt += 1\n\t\t\tanswb[4] = True\n\t\t\tbreak\n\tif not 'O' in instr:\n\t\tcnt += 1\n\t\tanswb[5] = True\n\n\tprint(cnt, end = ' ')\n\tfor i in range(6):\n\t\tif answb[i]:\n\t\t\tprint(answ[i], end = ' ')\n\tprint()", "t = int(input())\nfor i in range(0, t):\n    str = input()\n    answer = []\n    p = [1, 2, 3, 4, 6, 12]\n    for j in range(0, len(p)):\n        d1, d2 = p[j], 12 // p[j]\n        cnt = [0 for h in range(0, d2)]\n        for i2 in range(0, 12):\n            tt = i2 % d2\n            cnt[tt] += (str[i2] == 'X')\n        ans_cand = False\n        for i2 in range(0, d2):\n            if cnt[i2] == d1:\n                ans_cand = True\n        if ans_cand:\n            answer.append('%dx%d' % (d1, d2))\n    print(len(answer), end = ' ')\n    for j in range(0, len(answer)):\n        print(answer[j], end = ' ')\n    print()", "t = int(input().strip())\nfor i in range(t):\n    s = input()\n    ans = []\n    for h in [x for x in range(1, 13) if 12 % x == 0]:\n        good = False\n        w = 12 // h\n        for k in range(w):\n            ok = True\n            for l in range(h):\n                if s[l * w + k] != 'X':\n                    ok = False\n            if ok:\n                good = True\n        if good:\n            ans.append(str(h) + \"x\" + str(w))\n    print(str(len(ans)) + \" \" + \" \".join(ans))", "T=int(input())\n\nwhile T>=1:\n    T-=1\n    a=input()\n    list=[]\n    for i in range(1,13):\n        if 12 % i==0:\n            l=12//i\n            for j in range(0,l):\n                for k in range(0,i):\n                    if a[k*l+j]!='X':\n                        break\n                else:\n                    break\n            else:\n                continue\n            list.append(i)\n    print(len(list),end=' ')\n    for i in range(0,len(list)):\n        print(str(list[i])+'x'+str(12//list[i]),end=' ')\n    print()\n", "a=int(input())\nwhile a:\n    l=[]\n    b=input()\n    if((b.count(\"X\"))>0):\n        l.append(\"1x12\")\n    if((b[:6].count(\"X\"))>0):\n        p=[i for i in range(6) if b[i]=='X']\n        for i in p:\n            if(b[i:12:6]=='XX'):\n                l.append(\"2x6\")\n                break\n    if((b[:4].count(\"X\"))>0):\n        p=[i for i in range(4) if b[i]=='X']\n        for i in p:\n            if(b[i:12:4]==\"XXX\"):\n                l.append(\"3x4\")\n                break\n    if((b[:3].count(\"X\"))>0):\n        p=[i for i in range(3) if b[i]=='X']\n        for i in p:\n            if(b[i:12:3]==\"XXXX\"):\n                l.append(\"4x3\")\n                break\n    if((b[:2].count(\"X\"))>0):\n        p=[i for i in range(2) if b[i]=='X']\n        for i in p:\n            if(b[i:12:2]==\"XXXXXX\"):\n                l.append(\"6x2\")\n                break\n    if(b.count(\"X\")==12):\n        l.append(\"12x1\")\n    print(len(l),end=\" \")\n    if(len(l)>0):\n        for i in l:\n            print(i,end=\" \")\n    print()\n    a-=1", "def test_col(s, a, b, col):\n\tres = True\n\tfor i in range(0, a):\n\t\tif s[i * b + col] != 'X':\t\n\t\t\tres = False\n\treturn res\t\n\ndef test_all_cols(s, a):\n\tb = len(s) // a\n\tif a * b != len(s):\n\t\treturn False\n\telse:\n\t\tres = False\n\t\tfor i in range(0, b):\n\t\t\tres = res or test_col(s, a, b, i)\n\t\treturn res\n\n\t\nn = int(input())\nfor i in range(0, n):\n\ts = input()\n\tslen = len(s)\n\tcvariants  = 0 \n\tvariants = \"\"\n\tfor a in range(1, slen + 1):\t\t\n\t\tif (test_all_cols(s, a)):\n\t\t\tcvariants += 1\n\t\t\tvariants += str(a) + \"x\" + str(slen // a) + \" \"\n\tprint(str(cvariants), variants)\n\t\n", "# -*- coding: UTF-8 -*-\ndef evaluate(origin_str):\n    ans = []\n    for i in [1,2,3,4,6,12]:\n        last_idx = int(12 / i)\n        flags = [1 for i in range(0,last_idx)]\n        if (i == 1):\n            flag = False\n            for ch in origin_str:\n                if (ch == 'X'):\n                    flag = True\n            if (flag):\n                ans.append([i,last_idx])\n        else:\n            for j in range(0,last_idx):\n                tmp = []\n                k = j - last_idx\n                for x in range(0,i):\n                    k += last_idx\n                    tmp.append(k)\n                for l in tmp:\n                    ch = origin_str[l]\n                    if (ch != 'X'):\n                        flags[j] = 0\n            if (sum(flags) != 0):\n                ans.append([i,last_idx])\n    s = \"\"\n    for a in ans:\n        s += str(a[0])+\"x\"+str(a[1]) + \" \"\n    print(str(len(ans)) + \" \" + s)\n \ndef main():\n    n = int(input())\n    for i in range(0,n):\n        evaluate(input())\n \nmain()", "\nn = int(input())\n\n\nfor _ in range(n):\n    mystr = input()\n    answer = []\n    \n    divisibles = [1,2,3,4,6,12]\n    for i in divisibles:\n        flag=0\n        \n        for j in range(0,12//i):\n            columnSet = set(mystr[j::12//i])\n            if len(columnSet)==1 and \"X\" in columnSet:\n                flag=1\n                break\n\n        if flag==1:\n           answer.append(\"{}x{}\".format(i,12//i));\n    print(len(answer), \" \".join(answer))\n", "t = int(input())\nfor _ in range(t):\n  s = input()\n  b = []\n  for n in [1, 2, 3, 4, 6, 12]:\n    m = 12 // n\n    for j in range(m):\n      if s[j::m] == \"X\" * n:\n        b += [(n, m)]\n        break\n  print(len(b), ' '.join(str(x) + \"x\" + str(y) for x, y in b))", "t = int(input())\nans = [[] for i in range(t)]\nfor i in range(t):\n    \n    s = input()    \n    for a in range(1, 13):\n        \n        \n        if 12 % a != 0:\n            continue\n        b = 12 // a\n        c = [[] for h in range(b)]\n        for h in range(b):\n            for k in range(a):\n                c[h].append(s[k * b + h])\n        if a == 3:\n            a = 3        \n        T = True\n        for h in range(b):\n            if T:\n                ok = True\n                for k in range(a):\n                    if c[h][k] == 'O':\n                        ok = False\n                if ok:\n                    ans[i].append([a, b])\n                    T = False\n                    break\nfor i in range(t):\n    print(len(ans[i]), end = ' ')\n    for z in ans[i]:\n        print(z[0], end = '')\n        print('x', end= '')\n        print(z[1], end = ' ')\n    print()\n", "def do(string):\n    num = 0\n    ok = []\n    for i in [12, 6, 4, 3, 2, 1]:\n        for j in range(0, i):\n            if string[j::i] == 'X' * int(12/i):\n                ok.append(str(int(12/i))+'x'+str(i))\n                num += 1\n                break\n\n    ok = [str(num)] + ok\n    print(' '.join(ok))\n\nfor i in range(int(input())):\n    do(input())\n"]