["s = input()\nk = int(input())\nc = 0\np = 0\nhas_star = False\nfor i in range(len(s)):\n    if s[i] in ['*', '?']:\n        if s[i] == '*':\n            has_star = True\n        c -= 1\n    else:\n        p += 1\n        c += 1\nif k < c:\n    print(\"Impossible\")\nelif (not has_star) and (k > p):\n    print(\"Impossible\")\nelse:\n    signs_to_add = k - c\n    ans = \"\"\n    for i in s:\n        if signs_to_add == 0:\n            if i not in ['*', '?']:\n                ans += i\n            else:\n                ans = ans[:-1]\n            continue\n        if i == '?':\n            signs_to_add -= 1\n        elif i == '*':\n            signs_to_add -= 1\n            while signs_to_add > 0:\n                ans += ans[-1]\n                signs_to_add -= 1\n        else:\n            ans += i\n    print(ans)\n\n", "s = input()\nk = int(input())\n\nmin_l = max_l = 0\nfor c in s:\n    if c=='?' or c=='*':\n        min_l -= 1\n    else:\n        min_l += 1\n        max_l += 1\n\nif k < min_l or (k > max_l and '*' not in s):\n    print('Impossible')\nelse:\n    r = ''\n    d = k - min_l\n    l = len(s)\n    for i in range(l):\n        if i+1 < l and s[i+1] == '?':\n            if d > 0:\n                r += s[i]\n                d -= 1\n        elif i+1 < l and s[i+1] == '*':\n            while d > 0:\n                r += s[i]\n                d -= 1\n        elif s[i]!='?' and s[i]!='*':\n            r += s[i]\n    print(r)\n", "a = input()\nk = int(input())\n\nml = 0\nfor i in a:\n    if i == '?' or i == '*':\n        ml -= 1\n    else:\n        ml += 1\n\nif k < ml:\n    print('Impossible')\n    import sys\n    return\n\ndl = k - ml\nt = ''\nn = len(a)\nfor i in range(n):\n    if i + 1 < n and a[i + 1] == '?':\n        if dl <= 0: continue\n        t += a[i]\n        dl -= 1\n        continue\n    if i + 1 < n and a[i + 1] == '*':\n        if dl <= 0: continue\n        while dl > 0:\n            t += a[i]\n            dl -= 1\n        continue\n    if a[i] not in '?*':\n        t += a[i]\n\nif len(t) == k:\n    print(t)\nelse:\n    print('Impossible')\n", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef parse_input(text, symbols='?*'):\n    res = []\n    prev_index = 0\n    for index, char in enumerate(text):\n        if char in symbols:\n            res.append(('', text[prev_index: index - 1]))\n            res.append((char, text[index - 1]))\n            prev_index = index + 1\n    last_chunk = text[prev_index:]\n    if len(last_chunk) != 0:\n        res.append(('', last_chunk))\n    return res\n\n\ndef calc_length(parsed_input):\n    res = 0\n    for part in parsed_input:\n        if part[0] == '':\n            res += len(part[1])\n    return res\n\n\ndef main():\n    msg = input()\n    n, = read_nums()\n    parsed_input = parse_input(msg)\n    length = calc_length(parsed_input)\n\n    out = []\n    for part in parsed_input:\n        if part[0] == '':\n            out.append(part[1])\n        elif length < n:\n            if part[0] == '?':\n                out.append(part[1])\n                length += 1\n            else:\n                out.append(part[1] * (n - length))\n                length = n\n\n    res = ''.join(out)\n    if len(res) == n:\n        print(res)\n    else:\n        print('Impossible')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]