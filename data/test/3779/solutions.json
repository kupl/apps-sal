["import math\nn,k=map(int,input().split())\ng=k\nfor a in map(int,input().split()):\n g=math.gcd(g,a)\nprint(k//g)\nprint(' '.join(map(str,range(0,k,g))))", "import math\nn,k=map(int,input().split())\ng=k\nfor a in map(int,input().split()):\n g=math.gcd(g,a)\nprint(k//g)\nprint(*range(0,k,g))", "import math\ni=lambda:map(int,input().split())\nn,k=i()\ng=k\nfor a in i():g=math.gcd(g,a)\nprint(k//g)\nprint(*range(0,k,g))", "from math import gcd\nn,k=map(int,input().split())\ng=0\nl=list(map(int,input().split()))\nfor e in l:\n    g=gcd(g,gcd(e,k))\nprint(k//g)\nfor i in range(0,k,g): print(i,end=' ')", "from math import gcd\nfrom functools import reduce\n\n\ndef main():\n    n, k = map(int, input().split())\n    g = reduce(gcd, map(int, input().split()), k)\n    print(k // g, ' '.join(map(str, range(0, k, g))), sep='\\n')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import gcd\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\ng = 0\nfor Ai in A: g = gcd(g, Ai)\n\ns = set()\nx = 0\nwhile x not in s:\n    s.add(x)\n    x = (x + g) % K\n\nprint(len(s))\nprint(*sorted(s))", "import math\ni=lambda:map(int,input().split())\nn,k=i()\ng=k\nfor a in i():g=math.gcd(g,a)\nprint(k//g)\nprint(*range(0,k,g))", "import math\nfrom functools import reduce\na,b = map(int,input().split())\nc = list(map(int,input().split()))\nd = c[0]\nfor j in range(a):\n    d = math.gcd(d,c[j])\n    if d == 1:\n        break\ne = math.gcd(d,b)\nprint(b//e)\n#f = [i for i in range(b) if i%e == 0]\n#g = \" \".join(str(k) for k in range(b) if k%e == 0)\nprint(\" \".join(str(k) for k in range(b) if k%e == 0))", "def gcd(a,b):\n    return  a if 0==b else gcd(b,a%b)\n\n\n\nn,k=map(int,input().split(\" \"))\n#print(k)\nden=list(map(int,input().split(\" \")))\ng=0\nfor i in den:\n    g=gcd(g,i)\n\nd=[]\ndic={}\ni=0\nwhile (i<k):\n    val=(i*g)%k\n    #print(\"Value=\"+str(val))\n    if(not val in dic):\n        d.append(val)\n        dic[val]=1\n        i=i+1\n    else:\n        i=i+1\n        continue\nprint(len(d))\nd.sort()\nfor val in d:\n    print(val,end=\" \")\n", "def nod(a,b):\n    while a!=0 and b!=0:\n        if a>b:\n            a,b=b,a%b\n        else:\n            b,a=a,b%a\n    return a+b\nn ,k = map(int, input().split())  \na = [int(j) for j in input().split()] \nc = a[0]\nfor i in range(1,n):\n    c = nod(c,a[i])\n    if c==1:\n        break\ne = nod(c,k)\nif c==1 or e==1:\n    print(k)\n    for i in range(k):\n        print(i, end=\" \")\n\nif e>1:\n    c = k//e\n    print(c)\n    for i in range(c):\n        print(i*e, end=' ')\n    \n    \n    \n", "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nn, k = map(int, input().split(' '))\naa = list(map(int, input().split(' ')))\n\nm = k\nfor a in aa:\n    m = gcd(m, a)\n\nprint(k // m)\nfor i in range(0, k, m):\n    print(i, end=' ')\nprint()\n", "from functools import reduce\nfrom math import gcd\n\n_, k = map(int, input().split())\ng = reduce(gcd, [k] + list(map(int, input().split())))\nprint(k // g)\nprint(\" \".join(str(l) for l in range(0, k, g)))", "from math import gcd\nn,k=map(int,input().split())\nit=list(map(int,input().split()))\nit=[i%k for i in it]\nit=[i for i in it if i!=0]\n\ntry:\n    gc=it[0]\n    for i in range(1,len(it)):\n        gc=gcd(it[i],gc)\n    gc=gcd(k,gc)\n    print(k//gc)\n    for i in range(k//gc):\n        print(i*gc,end=\" \")\nexcept:\n    print(1)\n    print(0)\n", "from math import gcd\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ng = 0\nfor i in a:\n    g = gcd(g, i)\nans = set()\nans.add(g % k)\nfor i in range(k):\n    ans.add((i * g) % k)\nprint(len(ans))\nprint(*sorted(list(ans)))\n\n", "import math\ndef binpow(a, n):\n\tif n == 0:\n\t\treturn 1\n\tif n % 2 == 1:\n\t\treturn binpow(a, n - 1) * a\n\telse:\n\t\tb = binpow(a, n //2)\n\t\treturn b * b\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\ngcd = a[0]\nfor i in range(1, n):\n\tgcd = math.gcd(gcd, a[i])\ns = set()\nd = gcd % k\nisk = gcd\nwhile d not in s:\n\ts.add(d)\n\tgcd += isk\n\td = gcd % k\nprint(len(s))\nprint(*sorted(s))\n\n", "import math\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nddc = 0\nf = 1\nans = set()\nfor x in a:\n\tif f:\n\t\tddc = x%k\n\to = 0\n\to = x%k\n\tif not f:\n\t\tddc = math.gcd(ddc, o)\n\t\n\tif o == 1:\n\t\tprint(k)\n\t\tprint(*list(range(k)))\n\t\treturn\n\tf = 0\n\t'''\n\tif k%2 != o%2 and math.gcd(k, o)==1:\n\t\tprint(k)\n\t\t\n\t\tprint(*range(k))\n\t\treturn\n\t\n\tif not o in ans:\n\t\tyy = o\n\t\tans.add(o)\n\t\twhile o != 0:\n\t\t\to+=yy\n\t\t\to%=k\n\t\t\tans.add(o)\n\t\tans.add(0)\n\t\na = list(sorted(ans))\nfor i in range(len(a)):\n\tfor j in range(i , len(a)):\n\t\tans.add((a[i]+a[j])%k)\n'''\nyy = ddc\nwhile yy:\n\tans.add(yy)\n\tyy+=ddc\n\tyy%=k\nans.add(0)\nprint(len(ans))\nprint(*(sorted(ans)))\n\n", "n,k=list(map(int,input().split()))\ng=lambda x:int(x)%k\na=list(map(g,input().split()))\ndef nod(a,b):\n    while b>0:\n        a%=b\n        a,b=b,a\n    return a\nc=k\nfor x in a:\n    if x!=0:\n        c=nod(c,x)\nprint(k//c)\nprint(' '.join(map(str,list(range(0,k,c)))))\n\n", "def gcd(a, b):\n\tif (a < b):\n\t\ta, b = b, a\n\tif (b == 0):\n\t\treturn a\n\treturn gcd(b, a % b)\n\n\nn, k = list(map(int, input().split()))\nl = list(map(int, input().split()))\ngcdd = k\nfor i in range(n):\n\tgcdd = gcd(gcdd, l[i])\nif (gcdd == 0):\n\tprint(1)\n\tprint(0)\nelse:\n\tprint(k // gcdd)\n\tans = []\n\tfor i in range(1, k // gcdd + 1):\n\t\tans.append((i * gcdd) % k)\nprint(' '.join(map(str, sorted(ans))))\n\n", "\nn, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\ndef gcd(a, b):\n\tif (b == 0):\n\t\treturn a\n\treturn gcd(b, a%b)\n\ng = 0\n\nfor i in a:\n\tg = gcd(g, i)\n\nres = set()\nfor i in range(0, k * g, g):\n\tres.add(i % k)\n\nprint(str(len(res)) + \" \\n\" + \" \".join(map(str, sorted(res))))\n", "import sys\nimport math\nfrom collections import defaultdict\nn,k=list(map(int,sys.stdin.readline().split()))\na=list(map(int,sys.stdin.readline().split()))\nl=[0 for _ in range(n)]\nfor i in range(n):\n    l[i]=a[i]%k\nans=set()\nans.add(0)\nvis=defaultdict(int)\nx=0\nfor i in range(n):\n    x=math.gcd(x,l[i])\n    '''if l[i]!=0:\n        if k%l[i]!=0 and vis[l[i]]==0:\n            vis[l[i]]=1\n            x=math.gcd(k,l[i])\n            st=0\n            while st*x<k:\n                ans.add(st*x)\n                st+=1\n            if x==1:\n                print(len(ans))\n                res=list(ans)\n                res.sort()\n                print(*res)\n                return\n        else:\n            if vis[l[i]]==0:\n                st=0\n                vis[l[i]]=1\n                while st*l[i]<k:\n                    ans.add(st*l[i])\n                    st+=1'''\nst=0\nx=math.gcd(x,k)\nwhile st*x<k and x!=0:\n    ans.add(st*x)\n    st+=1\nprint(len(ans))\nres=list(ans)\nres.sort()\nprint(*res)\n", "import sys\nimport math\nfrom collections import defaultdict\nn,k=list(map(int,sys.stdin.readline().split()))\na=list(map(int,sys.stdin.readline().split()))\nl=[0 for _ in range(n)]\nfor i in range(n):\n    l[i]=a[i]%k\nans=set()\nans.add(0)\nvis=defaultdict(int)\nx=0\nfor i in range(n):\n    x=math.gcd(x,l[i])\nst=0\nx=math.gcd(x,k)\nwhile st*x<k and x!=0:\n    ans.add(st*x)\n    st+=1\nprint(len(ans))\nres=list(ans)\nres.sort()\nprint(*res)\n", "def gcd(a,b):\n    if b==0:\n        return a\n    if a%b==0:\n        return b\n    else:\n        return gcd(b,a%b)\n    \n    \nn,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nfor i in range(n):\n    a[i]=a[i]%k\na.append(k)\nb=0\nfor i in range(n+1):\n    b=gcd(b,a[i])\nc=[]\nfor i in range(0,k,b):\n    c.append(i)\n\nprint(len(c))\nprint(*c)"]