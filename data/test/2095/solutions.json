["n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nres = []\nfor i in range(n):\n    j = 0\n    while j < n and 3 != a[i][j] != 1:\n        j += 1\n    if j == n: res.append(i + 1)\nprint(len(res))\nprint(' '.join(map(str, res)))\n", "n = int(input())\narr = [0] * n\nfor i in range(n):\n    arr[i] = list(map(int, input().split()))\n    ans = []\nfor i in range(n):\n    for j in range(n):\n        if arr[i][j] == 1 or arr[i][j]== 3:\n            break\n    else:\n        ans.append(i + 1)\nprint(len(ans))\nif len(ans) != 0:\n    print(*ans)", "\nimport math\nimport sys\n\nn = int(input())\nans=0\nc=[]\nfor i in range(0,n):\n    m=0\n    l=list(map(int,input().split()))\n    for j in l:\n        if j==2 or j==0:\n            m+=1\n    if m==n-1:\n        ans+=1\n        c.append(i)\nprint(ans)\nfor j in c:\n    print(j+1, end=\" \")\nif c!=[]: print()\n\n", "N = int(input())\nmat = [list(map(int, input().split())) for _ in range(N)]\nans = []\nfor i in range(N):\n    flag = True\n    for j in range(N):\n        if mat[i][j] == 3 or mat[i][j] == 1:\n            flag = False\n    if flag == True:\n        ans.append(i+1)\nif len(ans) == 0:\n    print(0)\nelse:\n    print(len(ans))\n    print(*ans)\n", "n = int(input())\n\na = []\nfor i in range(n):\n    a.append([int(x) for x in input().split()])\n\nres = []\nfor i in range(n):\n    ok = True\n    for j in range(n):\n        if a[i][j] == 1 or a[i][j] == 3:\n            ok = False\n    if ok:\n        res.append(i + 1)\n\nprint(len(res))\nprint(\" \".join((str(x) for x in res)))", "n = int(input())\na = []\nc = 0\nans = []\nfor i in range(n):\n    t = list(map(int, input().split()))\n    a.append(t)\n    \nnum = 0\nfor i in a:\n    if (not (1 in i)) and (not (3 in i)):\n        c += 1\n        ans.append(num+1)\n    num += 1\n    \nprint(c)\nfor i in range(c-1):\n    print(ans[i], end = ' ')\nif c:\n    print(ans[c-1])", "n=int(input())\ns=[]\nans=[]\nfor i in range(n):\n    s.append(list(map(int, input().split())))\nfor i in range(n):\n    f = True\n    for j in range(n):\n        if s[i][j]==1 or s[j][i]==2 or s[i][j]==3 or s[j][i]==3:\n            f = False\n    if f:\n        ans.append(i)\nprint(len(ans))\nfor i in ans:\n    print(i+1, end=' ')", "n = int(input())\nz = []\nres = n\nfor i in range(n):\n    s = input().split()\n    #print(s)\n    j = 0\n    t = True\n    while t and j < n:\n        #print(s[j])\n        if (s[j] == '1') or (s[j] == '3'):\n            t = False\n            res -= 1\n        j += 1\n    #print(t)\n    z.append(t)\n#print(z)\nprint(res)\ns = ''\nfor i in range(len(z)):\n    if z[i]:\n        s += str(i+1) + ' '\n\nprint(s)", "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\na2 = [0] * n\nfor y in range(n):\n    for x in range(n):\n        if a[y][x] != -1:\n            if a[y][x] == 1:\n                a2[y] = 1\n            elif a[y][x] == 2:\n                a2[x] = 1\n            elif a[y][x] == 3:\n                a2[x] = 1\n                a2[y] = 1\nnum = 0\nfor i in range(n):\n    if a2[i] == 0:\n        num += 1\nprint(num)\nfor i in range(n):\n    if a2[i] == 0:\n        print(i + 1,end=\" \")\n", "n = int(input())\nans = []\nfor i in range(n):\n\tmas = [int(x) for x in input().split()]\n\ttr = True\n\tfor x in mas:\n\t\tif x == 1 or x == 3:\n\t\t\ttr = False\n\t\t\tbreak\n\tif tr:\n\t\tans.append(i + 1)\n\t\t\nprint(len(ans))\nans = [str(x) for x in ans]\nprint(' '.join(ans))", "def __starting_point():\n    n = int(input())\n\n    good = []\n    for i in range(n):\n        for j, x in enumerate(map(int, input().split())):\n            if j != i and x in (1, 3):\n                break\n        else:\n            good.append(i + 1)\n\n    print(len(good))\n    if good:\n        print(' '.join(map(str, good)))\n__starting_point()", "n = int(input())\nA = [list(map(int, input().split())) for i in range(n)]\ncnt = 0\nans = []\nfor i in range(n) :\n    for j in range(n) :\n        if A[i][j] == 1 or A[i][j] == 3:\n            break\n    else :\n        cnt += 1\n        ans.append(i+1)\nprint(cnt)\nfor i in ans :\n    print(i, end = ' ')\n", "n = int(input())\nar = []\nfor i in range(n):\n    ar.append(list(map(int, input().split())))\nans = [0] * n\nfor i in range(n):\n    for j in range(n):\n        if ar[i][j] == 1 or ar[i][j] == 3:\n            ans[i] = 1\n        if ar[i][j] == 2:\n            ans[j] = 1\nans1 = []\nfor i in range(n):\n    if ans[i] == 0:\n        ans1.append(i + 1)\nprint(len(ans1))\nfor i in range(len(ans1)):\n    print(ans1[i], end = ' ')", "import math,string,itertools,fractions,heapq,collections,re,array,bisect\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict\n\n\ndef main(a,n):\n    s = []\n    if n==1:\n        print(1)\n        print(1)\n        return\n    for i in range(n):\n        if 1 in a[i] or 3 in a[i]:\n            continue\n        s += [i+1,]\n    print(len(s))\n    print(\" \".join([str(i) for i in s]))\n\n\ndef main_input(info=0):\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int,input().split())))\n    main(a,n)\n\ndef __starting_point():\n    main_input()\n\n__starting_point()", "a = int(input())\nx = []\nfor i in range(a):\n    x.append([int(x) for x in input().split()])\nans = []\nfor i in range(a):\n    cont = True\n    for j in range(a):\n        if x[i][j] == 1 or x[i][j] == 3:\n            cont = False\n    if cont:\n        ans.append(i + 1)\nprint(len(ans))\nprint(*ans)", "cars = []\nfor i in range(int(input())):\n\n    a = 0\n    for x in map(int, str.split(input())):\n\n        if x > 0:\n\n            a |= x\n\n    if a & 1 == 0:\n\n        cars.append(i + 1)\n\nprint(len(cars))\nif cars:\n\n    print(str.join(\" \", list(map(str, cars))))\n", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nN = int(input())\n\ngood_cars = []\nfor i in range(N):\n    collision = list(map(int,input().split()))\n    if collision.count(1) + collision.count(3) == 0:\n        good_cars.append(i)\nprint(len(good_cars))\nif len(good_cars) != 0:\n    print(' '.join([str(x+1) for x in good_cars]))\n", "cars= int(input())\nans= 0\nansline= []\nfor i in range(cars):\n    inputline= [int(j) for j in input().split()]\n    inputline= set(inputline)\n    if 1 not in inputline and 3 not in inputline:\n        ans+= 1\n        ansline.append(i+1)\n        \n\nprint(ans)\nansline.sort()\na= \"\"\nif ans>0:\n    for i in range(ans):\n        a+= str(ansline[i])+ \" \"\n\nprint(a)", "n=int(input())\nrow=[[int(x) for x in input().split()] for i in range(n)]\ncol=[[row[i][j] for i in range(n)] for j in range(n)]\nans=[i for i in range(1,n+1)]\nfor i in range(1,n+1):\n\tif 1 in row[i-1] or 3 in row[i-1] or 2 in col[i-1] or 3 in col[i-1]:\n\t\ttry:\n\t\t\tans.remove(i)\n\t\texcept:\n\t\t\tpass\nprint(len(ans))\nprint(' '.join([str(x) for x in ans]))\n", "n = int(input())\nres = []\na = [[0]*n]*n\nfor i in range(n):\n    a[i] = list(map(int,input().split()))\nfor i in range(n):\n    #print(a[i].count(2))\n    if a[i].count(1)>0:\n        continue\n    elif a[i].count(3)==0:\n        res.append(i+1)\n'''for j in range(n):\n    if a[i].count(2)>0:\n        continue\n    elif a[i].count(3)==0:\n        res.append(i+1)'''\nif len(res)==0:\n    print(0)\n    quit()\nprint(len(res))\nres.sort()\nprint(' '.join(map(str,res)))", "import sys\nr = lambda : list(map(int,input().split()))\n\nn = int(input())\na = []\nfor i in range(n) :\n    a.append(list(r()))\ngoods = list(range(n))\n#print(goods)\nfor i in range(n) :\n    for j in range(n) :\n        if i==j or a[i][j]==0 or a[i][j]==-1 : continue \n        if a[i][j]==1 and i in goods : goods.remove(i);#print(i+1)\n        if a[i][j]==2 and j in goods : goods.remove(j);#print(j+1)\n        if a[i][j]==3 :\n            if i in goods : goods.remove(i)\n            if j in goods : goods.remove(j)\n\nprint(len(goods))\n#print(goods)\nprint(' '.join([str(goods[i]+1) for i in range(len(goods))]))\n    \n", "n = int(input())\nans = []\nfor i in range(n):\n    s = list(map(int, input().split()))\n    count1 = 0\n    countIn1 = 0\n    for j in s:\n        if j == 1 or j == 3:\n            count1 += 1\n        if j == -1:\n            countIn1 += 1\n    if count1 == 0 and countIn1 == 1:\n        ans.append(i + 1)\nprint(len(ans))\nprint(*ans)", "a=int(input())\nA=[0]*a\nfor q in range(a):\n    B=list(map(float, input().split()))\n    for i in range(a):\n        if B[i]==1:\n            A[q]=A[q]+1\n        elif B[i]==2:\n            A[i]=A[i]+1\n        elif B[i]==3:\n            A[q]=A[q]+1\n            A[i]=A[i]+1\nc=0\nC=''\nfor i in range(a):\n    if A[i]==0:\n        C=C+str(i+1)+' '\n        c=c+1\nprint(c)\nif c!=0:\n    print(C)", "n = int(input())\ndata = []\nfor i in range(n):\n    temp = [int(x) for x in input().split()]\n    data.append(temp)\n\nanswer = []\nfor i in range(n):\n    carGood = True\n    for j in range(n):\n        if data[i][j] == 1 or data[i][j] == 3:\n            carGood = False\n            break\n    if carGood:\n        answer.append(str(i + 1))\n\nif len(answer) == 0:\n    print(0)\n    return\nprint(len(answer))\nprint(\" \".join(answer))\n", "import sys\n\ndef solve():\n\ti, nGCars, GCars = 1, 0, []\n\tignore = input()\n\n\tfor line in sys.stdin:\n\t\tfor c in line.split():\n\t\t\tr = int(c)\n\t\t\tif r == 1 or r == 3:\n\t\t\t\tbreak\n\t\telse:\n\t\t\tGCars.append(str(i))\n\t\t\tnGCars += 1\n\t\ti += 1\n\n\tprint(nGCars)\n\tprint(\" \".join(GCars))\n\nsolve()\n"]