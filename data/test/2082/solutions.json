["n, m = map(int, input().split())\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = map(int, input().split())\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))", "n, m = map(int, input().split())\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = map(int, input().split())\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r:\n        continue\n    if len(q[l]) > len(q[r]):\n        l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]:\n        p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))", "read = lambda: list(map(int, input().split()))\nn, m = read()\nv = list(read())\n\ne = []\nfor i in range(m):\n    x, y = [int(x) - 1 for x in input().split()]\n    e.append((x, y, min(v[x], v[y])))\ne.sort(key = lambda x: x[2], reverse = True)\n\nbelong = list(range(n))\nunion = [[i] for i in belong]\nsize = [1] * n\n\nans = 0\n\nfor i, j, k in e:\n    fi, fj = belong[i], belong[j];\n    if fi == fj: continue\n    if not (len(union[fi]) > len(union[fj])):\n        fi, fj = fj, fi\n    ans += k * size[fi] * size[fj]\n    size[fi] += size[fj]\n    union[fi] += union[fj]\n    for t in union[fj]: belong[t] = fi\n    \nprint(\"%.7lf\" % (ans * 2 / n / (n - 1)))\n", "def main():\n    n, m = list(map(int,input().split()))\n    l = [int(i) for i in input().split()]\n    rank, ans = [], 0\n    for i in range(m):\n        a,b = list(map(int, input().split()))\n        a,b = a-1,b-1\n        rank.append((min(l[a],l[b]),a,b))\n\n    rank = sorted(rank,key = lambda x: -x[0])\n    par = list(range(n))\n    siz = [1]*n\n    ans = 0.0\n\n    def find(a):\n        root = a\n        while root != par[root]: root = par[root]\n        while a != par[a]:\n            newp = par[a]\n            par[a] = root\n            a = newp\n        return root\n\n    def merge(a,b,i):\n        a = find(a)\n        b = find(b)\n        if a == b: return 0\n        add = siz[a]*siz[b]\n        siz[a] += siz[b]\n        par[b] = a\n        return (add * i[0]) / (n * (n - 1))\n\n\n\n    for i in rank:\n        ans += merge(i[1],i[2],i)\n\n    print(\"%.12f\"%(2*ans))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n", "n, m = list(map(int, input().split()))\np, c = list(range(n + 1)), [1] * (n + 1)\nv = [0] + list(map(int, input().split()))\ns, e = 0, [()] * m\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    e[i] = (x, y, min(v[x], v[y]))\ne.sort(key = lambda x: x[2], reverse = True)\nq = [[i] for i in range(n + 1)]\nfor l, r, v in e:\n    l, r = p[l], p[r]\n    if l == r: continue\n    if len(q[l]) > len(q[r]): l, r = r, l\n    q[r].extend(q[l])\n    for t in q[l]: p[t] = r\n    s += c[l] * c[r] * v\n    c[r] += c[l]\nprint(s * 2 / (n * (n - 1)))\n"]