["(a, b), x, y = list(map(int, input().split())), [], 0\n\ndef bin(s):\n    return str(s) if s <= 1 else bin(s >> 1) + str(s & 1)\n\ndef lowbit(s):\n    return int('1' + bin(s).split('1')[-1], 2)\n\nfor i in reversed(range(b + 1)):\n    if y == a:\n        break\n    if a >= y + lowbit(i):\n        x.append(i) \n        y += lowbit(i)\n\nif y == a:\n    print( len(x) )\n    print( ' '.join(str(i) for i in x) )\nelse:\n    print( -1 )", "s, l = map(int, input().split())\nt = []\nfor i in range(l, 0, -1):\n    k = i & (i ^ (i - 1))\n    if s >= k:\n        t.append(str(i))\n        s -= k\nprint(-1 if s else str(len(t)) + '\\n' + ' '.join(t))", "s, l = map(int, input().split())\nt = []\nfor i in range(l, 0, -1):\n    k = i & (i ^ (i - 1))\n    if s >= k:\n        t.append(str(i))\n        s -= k\nprint(-1 if s else str(len(t)) + '\\n' + ' '.join(t))", "sum, limit = map(int, input().split(' '))\n\nans = set()\n\ndef low_bit(n):\n    k = 0\n    while not n & (1 << k):\n        k += 1\n    return 1 << k\n\nfor i in reversed(range(1, limit + 1)):\n    t = low_bit(i)\n    if sum >= t:\n        sum -= t\n        ans.add(i)\n\nif sum == 0:\n    print(len(ans))\n    print(' '.join([str(x) for x in ans]))\nelse:\n    print(-1)", "target, limit = list(map(int, input().split()))\n\ndef lowbit(x):\n    return x & (x ^ (x - 1))\n\nans = []\nfor i in range(limit, 0, -1):\n    x = lowbit(i)\n    if x <= target:\n        ans.append(i)\n        target -= x\n\nif target:\n    print(-1)\nelse:\n    print(len(ans))\n    print(\" \".join(map(str, ans)))\n        \n", "\ns, limit = list(map(int, input().split()))\n\nans = []\n\nfor i in range(limit, 0, -1):\n    k = i & (i ^(i-1))\n    if s >= k:\n        s-=k\n        ans.append(i)\n\nif s:\n    print(-1)\nelse:\n    print(len(ans))\n    print(*ans)\n\n\n\n", "def lowbit(x):\n\treturn x & (-x)\n\t\ndef solve():\n\tnonlocal sum, limit, list\n\twhile(limit > 0 and sum!=0):\n\t\tif(sum-lowbit(limit)>=0):\n\t\t\tsum-=lowbit(limit)\n\t\t\tlist.add(limit)\n\t\tlimit-=1\n\tif(sum==0):\n\t\treturn True\n\treturn False\n\t\nsum, limit = tuple(int(i) for i in input().split())\nlist = set()\n\nif(solve()):\n\ts = str(len(list)) + \"\\n\"\n\tfor i in list:\n\t\ts += str(i) + \" \"\n\tprint (s[:len(s)-1])\nelse:\n\tprint (-1)"]