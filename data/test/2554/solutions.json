["def subsolve(a):\n    c = 0\n    m = 0\n    for i in a:\n        c += i\n        if c < 0:\n            c = 0\n        m = max(m, c)\n    return m\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = 0\n    for i in range(0, n, 2):\n        s += a[i]\n    u = subsolve([a[i] - a[i - 1] for i in range(1, n, 2)])\n    v = subsolve([a[i - 1] - a[i] for i in range(2, n, 2)])\n    print(max(u, v) + s)\nt = int(input())\nfor _ in range(t):\n    solve()", "def max_sub(a):\n    total_max = 0\n    cur_max = 0\n    for v in a:\n        cur_max += v\n        cur_max = max(cur_max, 0)\n        total_max = max(total_max, cur_max)\n    return total_max\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    a1 = list(a[::2])\n    a2 = list(a[1::2])\n    \n    d1 = list(y-x for x, y in zip(a1, a2))\n    d2 = list(y-x for x, y in zip(a1[1:], a2))\n    \n    print(sum(a1) + max(max_sub(d1), max_sub(d2)))\n    \n", "import sys\ninput = sys.stdin.readline\n\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    ru = [0] * (n + 1)\n    ans = 0\n    for i in range(n):\n        if i % 2 == 0:\n            ans += a[i]\n            ru[i + 1] = ru[i] - a[i]\n        else:\n            ru[i + 1] = ru[i] + a[i]\n\n    li1 = [0]\n    li2 = [0]\n    for i in range(n):\n        if i % 2 == 0:\n            li1.append(ru[i + 1])\n        else:\n            li2.append(ru[i + 1])\n\n    add = 0\n    min_val = 0\n    for val in li1:\n        add = max(val - min_val, add)\n        min_val = min(min_val, val)\n\n    min_val = 0\n    for val in li2:\n        add = max(val - min_val, add)\n        min_val = min(min_val, val)\n\n    print(ans + add)", "from sys import exit,stdin,stderr\ndef rl():\n    return [int(w) for w in stdin.readline().split()]\n\ndef maxsum(b):\n    cur = r = 0\n    for x in b:\n        cur += x\n        if cur < 0:\n            cur = 0\n        elif cur > r:\n            r = cur\n    return r\n\nT, = rl()\nfor _ in range(T):\n    n, = rl()\n    a = rl()\n    print((sum(a[::2]) + max(maxsum(b) for b in[\n        [a[i] - a[i-1] for i in range(1, n, 2)],\n        [a[i-1] - a[i] for i in range(2, n, 2)],\n    ])))\n", "\ntt = int(input())\n\nfor loop in range(tt):\n\n    n = int(input())\n    a = list(map(int,input().split()))\n\n    e = [0]\n    o = [0]\n\n    for i in range(n):\n        if i % 2 == 0:\n            e.append(e[-1] + a[i])\n            o.append(o[-1])\n        else:\n            e.append(e[-1])\n            o.append(o[-1] + a[i])\n\n    eo = []\n    for i in range(n+1):\n        eo.append(o[i]-e[i])\n\n    nmin = float(\"inf\")\n    ans = 0\n    for i in range(0,n+1,2):\n        ans = max(ans , eo[i]-nmin)\n        nmin = min(nmin,eo[i])\n\n    nmin = float(\"inf\")\n    for i in range(1,n+1,2):\n        ans = max(ans , eo[i]-nmin)\n        nmin = min(nmin,eo[i])\n\n    ori = 0\n    for i in range(0,n,2):\n        ori += a[i]\n\n    print(ori + ans)\n", "# f = open('test.py')\n# def input():\n# \treturn f.readline().replace('\\n','')\n\n# import heapq\n# from collections import defaultdict\ndef read_list():\n\treturn list(map(int,input().strip().split(' ')))\ndef print_list(l):\n\tprint(' '.join(map(str,l)))\n\nN = int(input())\nfor _ in range(N):\n\tn = int(input())\n\ta = read_list()\n\tres = 0\n\ttmp = 0\n\ts = 0\n\tfor i in range(1,n,2):\n\t\ts+=a[i]-a[i-1]\n\t\tres = max(res,s-tmp)\n\t\ttmp = min(tmp,s)\n\ttmp = 0\n\ts = 0\n\tfor i in range(1,n-1,2):\n\t\ts+=a[i]-a[i+1]\n\t\tres = max(res,s-tmp)\n\t\ttmp = min(tmp,s)\n\tprint(sum(a[::2])+res)\n\n\n\n\n\n\n\n\t\t\t\n", "import math\nimport sys\nfrom itertools import permutations\ninput = sys.stdin.readline\n\nt=int(input())\nfor i in range(t):\n    n=int(input())\n    arr=list(map(int,input().split()))\n\n    ans=0\n    for j in range(n):\n        if j%2==0:\n            ans+=arr[j]\n    \n    arr1=[]\n    for j in range(1,n,2):\n        arr1.append(arr[j]-arr[j-1])\n    \n    msf=0\n    meh=0\n    for j in range(len(arr1)):\n        meh+=arr1[j]\n        if msf<=meh:\n            msf=meh\n        if meh<0:\n            meh=0\n    cur1=ans+msf\n\n    arr2=[]\n    for j in range(2,n,2):\n        arr2.append(arr[j-1]-arr[j])\n\n    msf=0\n    meh=0\n    for j in range(len(arr2)):\n        meh+=arr2[j]\n        if msf<=meh:\n            msf=meh\n        if meh<0:\n            meh=0\n    cur2=ans+msf\n    # print(cur1,cur2)\n    print(max(cur1,cur2))\n    \n"]