["#     Codeforces Round #488 by NEAR (Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\nimport math\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \n\ndef makePair(z):\n    return  [(z[i], z[i+1]) for i in range(0,len(z),2) ]\n            \nN, =  getIntList()\nza = getIntList() \nzb = getIntList()\n \nsa = set(za)\n\nxa = list(sa)\nxa.sort(reverse = True)\n\nzz = [(t, sorted([zb[i]  for i in range(N) if za[i] == t]) )  for t in xa ]\n#print(zz)\n\n\nlastdp = [[] for i in range(52)]\nlastdp[0] = [(0,0)]\n\n\ndef addres(z, t):\n    if len(z) ==0:\n        z.append(t)\n        return\n    i = bisect.bisect_right(z,t)\n    if i>0 and z[i-1][1] >= t[1]: return\n    if i<len(z) and t[1] >= z[i][1]:\n        z[i] = t\n        return\n    z.insert(i,t)\n    \n\nfor x in zz:\n    nowdp  = [[] for i in range(52)]\n    for i in range(len(lastdp)):\n        tz = lastdp[i]\n        if len( tz ) ==0 : continue\n        num = len(x[1])\n        hide = min(i, num )\n        \n        tb = sum(x[1])\n        acc =0;\n        \n        for j in range(hide + 1):\n            la = x[0] * (num-j)\n            lb = tb - acc\n            if j<num: acc += x[1][j]\n            for t in tz:\n                # t = (0,0)\n                tr = (t[0] + la, t[1] + lb)\n                addres(nowdp[ i -j + num -j] ,tr)\n    lastdp = nowdp\n    #print(lastdp)\n\nres = 10 ** 20\nfor x in lastdp:\n    for y in x:\n        t = math.ceil(y[0] *1000   /  y[1] )\n        res = min( res,t)\n\nprint(res)\n"]