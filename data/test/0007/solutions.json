["n, m = map(int, input().split())\nif (m >= n): print(n)\nelse:\n    c = n - m\n    l = 0\n    r = 10 ** 18\n    while r - l > 1:\n        md = (r + l) // 2\n        if (1 + md) * md // 2 < c:\n            l = md\n        else:\n            r = md\n    print(r + m)", "n, m = map(int, input().split())\n\ndef calc(n):\n\treturn (n + 1) * n // 2\n\nif n <= m:\n\tprint(n)\nelse:\n\tans = m\n\tl = 0\n\tr = n - m\n\twhile l < r - 1:\n\t\tmid = (l + r) // 2\n\t\tif calc(mid) >= n - m:\n\t\t\tr = mid\n\t\telse:\n\t\t\tl = mid\n\n\tif calc(l) >= n - m:\n\t\tr = l\n\tans += r\n\tprint(ans)", "n,m = list(map(int,input().split()))\nif m >= n:\n    print(n)\nelse:\n    ans = m\n    pos = -1\n    low = 0\n    high = 10**12\n    n -= m\n    while low <= high:\n        mid  = (low+high)//2\n        # print(mid,(mid*(mid+1))//2)\n        if (mid*(mid+1))//2 >= n:\n            pos = mid\n            high = mid-1\n        else:\n            low = mid+1\n    print(ans+pos)\n", "n, m = map(int, input().split())\n\nif n <= m:\n    print(n)\nelse:\n    ok = 10 ** 100\n    ng = 0\n    while ok - ng > 1:\n        mid = (ok + ng) // 2\n        s = n - mid * (mid - 1) // 2 - (m + mid)\n\n        if s <= 0:\n            ok = mid\n        else:\n            ng = mid\n\n    print(ok + m)", "import sys\nn, m = list(map(int, input().split()))\n\n\ndef check(i):\n    se = ((m + i) * (i - m + 1)) // 2\n    pr = m * (i -  m + 1)\n    if (n >= (se - pr)):\n        return True\n    else:\n        return False\nif m >= n:\n    print(n)\n    return\nm += 1\nleft = m\nright = int(5e18) + 10\nn -= m\nwhile (right - left > 1):\n    mid = (left + right) // 2\n    if (check(mid)):\n        left = mid\n    else:\n        right = mid\nprint(left)\n", "import sys\nn,m=input().split()\nn=int(n);m=int(m)\nans=m\nif m>=n:\n\tprint(n)\n\treturn\nhigh=10**20;low=1\ndif=n-m\n#print(\"dif\",dif)\nwhile high-low>5:\n\tmid=high+low>>1\n\tif (1+mid)*mid>>1>=dif:\n\t\thigh=mid\n\telse:\n\t\tlow=mid\nmid=max(0,mid-10)\nwhile (1+mid)*mid>>1<dif:mid+=1\n#print('mid',mid)\nans+=mid\nprint(ans)", "N, M = list(map(int, input().split()))\n\nif N <= M:\n    print(N)\nelse:\n    low = M + 1\n    high = 1000000000000000000\n    while high - low > 0:\n        mid = (low + high) // 2\n        if N + (mid - (M + 1)) * M - ((mid - M) * (M + 1 + mid) // 2) <= 0:\n            high = mid\n        else:\n            low = mid + 1\n    print(low)\n", "import sys\n\nn, m = list(map(int, input().split()))\n\nif n <= m:\n    print(n)\n    return\n\nelse:\n    l, r = m + 1, n\n    base = m * (m - 1) // 2\n\n    while l != r:\n        mid = (l + r) // 2\n        plus = n + base + (mid - m) * m\n        minus = mid * (mid + 1) // 2\n        if plus > minus:\n            l = mid + 1\n        else:\n            r = mid\n    print(l)\n", "n, m = list(map(int, input().split()))\nif m >= n:\n    print(n)\nelse:\n    start = n - m + 1\n    r = 10 ** 11\n    l = -1\n    while (r - l > 1):\n        mid = (l + r) // 2\n        summ = mid * (mid + 1) // 2\n        if summ >= n - m:\n            r = mid\n        else: \n            l = mid\n    print(r + m)\n\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Mar 15 23:00:22 2017\n\n@author: Anan\n\"\"\"\n\nn,m = map(int,input().split())\n\nif n<=m :\n    print(n)\nelse :\n    \n    ans = m\n    L =0\n    R = 123456789123456789123\n    while R-L != 1 :\n        mid = (L+R)//2\n        if n-mid*(mid-1)//2 <= m+mid :\n            R=mid\n        else :\n            L=mid\n    print(ans + R)", "n,m=[int(i) for i in input().split()]\nif m>=n:\n    print(n)\nelse:\n    l,r=-1,10**18\n    now=n-m\n    while r-l>1:\n        md=(l+r)//2\n        if now+md*m-(m*2+md+1)*md//2<=0:\n            r=md\n        else:\n            l=md\n    print(r+m)", "n, m = map(int, input().split())\nif n <= m:\n    print(n)\nelse:\n    init = m\n    n = n - m\n    lo = 1\n    hi = int(1e19)\n    poss = 0\n    while hi >= lo:\n        mid = (hi + lo) // 2\n        consumed = mid * (mid + 1) // 2\n        if consumed >= n:\n            poss = mid\n            hi = mid - 1\n        else:\n            lo = mid + 1\n    print (poss + init)", "n, s = list(map(int,input().split(' ')))\nif n <= s:\n    ans = n\nelse:\n    ans = s\n    l = 0\n    r = 10 ** 10\n    n -= s\n    while l + 1 < r:\n        m = (l + r) // 2\n        if m * (m+1) // 2 < n:\n            l = m\n        else:\n            r = m\n    ans += r\nprint(ans)\n", "n, m = map(int, input().split())\nl = 0\nr = 10 ** 18 + 1\nd = n - m\nwhile r - l > 1:\n    mi = (r + l) // 2\n    if d > mi *(mi + 1) // 2:\n        l = mi\n    else:\n        r = mi\nif n > m:\n    print(r + m)\nelse:\n    print(n)", "n, m = map(int, input().split())\nif m >= n:\n    print(n)\n    return\n\nres = m + 1\nn -= m\nleft, right = 0, int(1e19)\n\nwhile right - left > 1:\n    middle = (left + right) // 2\n    if middle * (middle + 1) // 2 < n:\n        left = middle\n    else:\n        right = middle\n\nprint(res + left)", "def binary_search_first_true(predicate, from_inclusive, to_inclusive):\n    lo = from_inclusive - 1\n    hi = to_inclusive + 1\n    while hi - lo > 1:\n        mid = (lo + hi) // 2\n        if not predicate(mid):\n            lo = mid\n        else:\n            hi = mid\n    return hi\n\ndef tri(n):\n\treturn n*(n+1)//2\n\ndef f(n, m, t):\n\treturn n-tri(t-m-1)-t\n\ndef solve(n, m):\n\tif m >= n:\n\t\treturn n\n\tans = binary_search_first_true(lambda x: f(n, m, x) <= 0, m+1, n)\n\treturn ans\n\ndef main(sc):\n\tn, m = sc.next_ints(2)\n\tans = solve(n, m)\n\tprint(ans)\n\n\nclass Scanner:\n\tdef __init__(self):\n\t\tself.idx = 0\n\t\tself.tokens = []\n\n\tdef __next__(self):\n\t\twhile self.idx == len(self.tokens) or not len(self.tokens[self.idx]):\n\t\t\tif self.idx == len(self.tokens):\n\t\t\t\tself.idx = 0\n\t\t\t\tself.tokens = input().split()\n\t\t\telse:\n\t\t\t\tself.idx += 1\n\t\tself.idx += 1\n\t\treturn self.tokens[self.idx-1]\n\n\tdef next_string(self):\n\t\treturn next(self)\n\n\tdef next_strings(self, n):\n\t\treturn [self.next_string() for i in range(0, n)]\n\n\tdef next_int(self):\n\t\treturn int(next(self))\n\n\tdef next_ints(self, n):\n\t\treturn [self.next_int() for i in range(0, n)]\n\n\nscanner = Scanner()\nmain(scanner)\n", "n, m = list(map(int, input().split()))\nl = -1\nr = int(1e18 + 10)\nwhile r - l != 1:\n    t = (r + l) // 2\n    eaten = t\n    if (t - 1 > m):\n        eaten += (t - 1 - m) * (t - m) // 2\n    if eaten >= n:\n        r = t\n    else:\n        l = t\nprint(r)", "def mySqrt(n) :\n    l = 0\n    r = n + 1\n    while (l < r - 1) :\n        m = (l + r) // 2\n        if m * m > n :\n            r = m\n        else :\n            l = m\n    return l\n\n\nn, m = [int(i) for i in input().split()]\n\nif m >= n :\n    print(n)\nelse :\n    ans = m\n    d = (-1 + mySqrt(1 + 8 * (n - m))) // 2\n    while d * (d - 1) // 2 + d + m >= n :\n        d -= 1\n    while d * (d - 1) // 2 + d + m < n :\n        d += 1\n    print(m + d)\n", "import sys\nn, m = list(map(int, input().split()))\nm = min(n - 1, m)\nfday = -1\nlday = n\nwhile (fday + 1 < lday):\n    mid = (fday + lday) // 2\n    S = n - (mid * (mid + 1)) // 2 - m\n    if (S <= 0):\n        lday = mid\n    else:\n        fday = mid\nprint(min(n, m + lday))\n", "n, m = map(int, input().split())\ntl = m\ntr = n\nwhile tr - tl > 1:\n    mid = (tr + tl) // 2\n    val = (mid - m) * (mid - m + 1) // 2\n    bef = (mid - m) * (mid - m - 1) // 2\n    if val >= n or n - bef <= mid:\n        tr = mid\n    else:\n        tl = mid\nprint (tr) ", "n, m = [int(x) for x in input().split()]\nif (m >= n):\n    print(n)\n    return\nL = m\nR = n\nwhile (L + 1 < R):\n    M = (L + R) // 2\n    z = M - m\n    if (z * (z - 1) // 2 + M >= n):\n        R = M\n    else:\n        L = M\nprint(R)\n", "n, m = map(int, input().split())\n\nl = 0\nr = 2 ** 64\n\nwhile r - l > 1:\n\tM = l + r >> 1\n\tdell = M * (M + 1) // 2 - m * (m + 1) // 2;\n\tplus = n + max(0, M - m - 1) * m\n\tif dell >= plus :\n\t\tr = M\n\telse:\n\t\tl = M\nprint(min(r, n))", "\"\"\"Codeforces Round #404 (Div. 2)\n\nC. Anton and Fairy Tale\n\"\"\"\n\n\ndef main():\n    n, m = list(map(int, input().split()))\n\n    if n <= m:\n        print(n)\n        return\n\n    def func(k):\n        return n + (k - m - 1) * m + ((m * (m + 1)) // 2) - ((k * (k + 1)) // 2)\n\n    start, end = m + 1, n\n    while start < end:\n        middle = (start + end) // 2\n        if func(middle) <= 0:\n            end = middle\n        else:\n            start = middle + 1\n\n    print(end)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\nn, m = map(int, input().split())\n\nif n <= m:\n    print(n)\n    return\n\ntl = m\ntr = n\nwhile tr - tl > 1:\n    tm = (tl + tr) // 2\n    cnt = tm * (tm + 1) // 2 - m * (m + 1) // 2\n    cur = n + (tm - m - 1) * m - cnt\n    if cur <= 0:\n        tr = tm\n    else:\n        tl = tm\nprint(tr)", "\ndef f(i, fd, m, n):\n  return i * (i + 1) // 2 - fd * (fd - 1) // 2 >= (i - fd) * m + n\n\ndef solve(n, m):\n  if m >= n:\n    return n\n  fd = m\n  l = fd\n  r = max(n, m) + 100\n  while l < r:\n    mid = (l + r) // 2\n    #print(\"mid = \" + str(mid))\n    #print(\"f = \" + str(f(mid,fd,m,n)))\n    if f(mid, fd, m, n):\n      r = mid\n    else:\n      l = mid + 1\n     # print(\"now l = \" + str(l) + \" r = \" + str(r) + \" \" + str((l == r - 1)))\n    \n    if l == r - 1:\n      #print(\"last l = \" + str(l) + \" fl = \" + str(f(l, fd,m,n)))\n      if f(l, fd, m, n):\n        r = l\n      else:\n        l = r\n  return l\ndef brute(n, m):\n  i = 1\n  cur = n\n  while True:\n    cur += m\n    cur = min(cur, n)\n    cur -= i\n    if (cur <= 0):break\n    i += 1\n  return i\nn, m = map(int, input().split());\nprint(solve(n, m))"]