["\"\"\"\nCodeforces Round 241 Div 1 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\nclass InputHandlerObject(object):\n    inputs = []\n\n    def getInput(self, n = 0):\n        res = \"\"\n        inputs = self.inputs\n        if not inputs: inputs.extend(input().split(\" \"))\n        if n == 0:\n            res = inputs[:]\n            inputs[:] = []\n        while n > len(inputs):\n            inputs.extend(input().split(\" \"))\n        if n > 0:\n            res = inputs[:n]\n            inputs[:n] = []\n        return res\nInputHandler = InputHandlerObject()\ng = InputHandler.getInput\n\n############################## SOLUTION ##############################\nm,n = [int(x) for x in g()]\nq = []\nfor i in range(m):\n    q.append([int(x) for x in g()])\np = q[:]\nfor j in range(n):\n    for i in range(m):\n        if i == 0 and j == 0:\n            continue\n        if i == 0:\n            p[i][j] = p[i][j-1] + q[i][j]\n            continue\n        if j == 0:\n            p[i][j] = p[i-1][j] + q[i][j]\n            continue\n        p[i][j] = max(p[i-1][j], p[i][j-1]) + q[i][j]\nfor i in range(m):\n    print(p[i][n-1], end=\" \")\n", "m,n = map(int,input().split())\nshed = []\nfor i in range(m):\n    shed.append(list(map(int,input().split())))\ntime = [0] * 51\nans = []\nfor i in range(m):\n    tt = 0\n    for j in range(n):\n        tt = max(tt, time[j])+ shed[i][j]\n        time[j] = tt\n    ans.append(tt)\nprint(*ans)", "m, n = (int(i) for i in input().split(' '))\ntime = [None] * m\nfor i in range(m):\n    time[i] = list(int(i) for i in input().split(' '))\nr = [0] * m\nr[0] = time[0][0]\nfor i in range(1, m):\n    r[i] = r[i - 1] + time[i][0]\nfor i in range(1,n):\n    r[0] += time[0][i]\n    for j in range(1,m):\n        r[j] = time[j][i] + max(r[j-1],r[j])\nprint(' '.join(str(i) for i in r))\n", "m,n=map(int,input().split())\ns=[0]*n\nfor i in range(m):\n    a=list(map(int,input().split()))\n    s[0]=s[0]+a[0]\n    for j in range(1,n):\n        s[j]=max(s[j-1],s[j])+a[j]\n    print(s[-1],end=' ')\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\n(M,N) = map(int, input().split())\n\ntimes = []\nfor m in range(M):\n    times.append( list( map(int, input().split())) )\n\nman = [0] * N\n\ntime = 0\nfor m in range(M):\n    for n in range(N):\n        if n == 0:\n            time = man[n] + times[m][n]\n        else:\n            time = max( time, man[n] ) + times[m][n]\n        man[n] = time\n    print (time, end=' ')\n    # print(\"man = \", man)\n    \nprint()\n\n", "m, n = list(map(int, input().split()))\ntime_table = []\n\ntime_table.append([0] * n)\nfor _ in range(m):\n    time_table.append(list(map(int, input().split())))\n\ntime_table = list(list(t) for t in zip(*time_table))\ntime_table.insert(0, [0] * (m + 1))\n\nfor i in range(1, len(time_table)):\n    for j in range(1, len(time_table[i])):\n        time_table[i][j] = max(time_table[i-1][j], time_table[i][j-1]) + time_table[i][j]\n\nprint(' '.join(str(i) for i in time_table[n][1:]))", "n, m = map(int, input().split())\nt = [0 for i in range(m)]\nfor i in range(n):\n    c = list(map(int, input().split()))\n    t[0] += c[0]\n    for j in range(1, m):\n        t[j] = max(t[j], t[j - 1]) + c[j]\n    print(t[m - 1], end = ' ')", "m, n = map(int, input().split())\nt = []\nfor i in range(m):\n  t += [list(map(int, input().split()))]\nd = [0] * m\nfor i in range(n):\n  d[0] += t[0][i]\n  for j in range(1, m):\n    d[j] = max(d[j - 1], d[j]) + t[j][i]\nprint(*d)", "import sys\nm,n=list(map(int,sys.stdin.readline().split()))\nT=[]\nfor i in range(m):\n    T.append(list(map(int,sys.stdin.readline().split())))\nC=[0]*n\nAns=\"\"\nfor i in range(m):\n##    print(C)\n##    print(T[i])\n    t=C[0]\n    for j in range(n):\n        if(t<C[j]):\n            t=C[j]+T[i][j]\n        else:\n            t+=T[i][j]\n        C[j]=t\n    Ans+=str(t)+\" \"\nsys.stdout.write(Ans)\n        \n", "n, m = map(int, input().split())\nt = [list(map(int, input().split())) for i in range(n)]\nfor j in range(m - 1): t[0][j + 1] += t[0][j]\nfor i in range(n - 1):\n    t[i + 1][0] += t[i][0]\n    for j in range(m - 1): t[i + 1][j + 1] += max(t[i + 1][j], t[i][j + 1])\nprint(' '.join(map(str, [p[m - 1] for p in t])))", "m,n=map(int,input().split())\ns=[0]*n\nfor i in range(m):\n    a=list(map(int,input().split()))\n    s[0]=s[0]+a[0]\n    for j in range(1,n):\n        s[j]=max(s[j-1],s[j])+a[j]\n    print(s[-1],end=' ')", "m, n = map(int, input().split())\nt = [[0] * (n + 1)]\nfor i in range(m):\n    t.append([0] + list(map(int, input().split())))\nfin = []\nfor i in range(n + 1):\n    fin.append([0] * (m + 1))\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        fin[i][j] = max(fin[i][j - 1], fin[i - 1][j]) + t[j][i]\nprint(' '.join(map(str, fin[n][1:])))", "import sys\n\nm, n = map(int, sys.stdin.readline().split())\n\nlatestStartTime = [0 for i in range(n)]\n\nfor i in range(m):\n  picture = [int(s) for s in sys.stdin.readline().split()]\n\n  for j in range(n): \n    if j > 0 and latestStartTime[j-1] > latestStartTime[j]:\n      latestStartTime[j] = latestStartTime[j-1]\n    latestStartTime[j] += picture[j]\n  if i > 0:\n    print(\" \", end=\"\")\n  print(latestStartTime[n-1], end=\"\")\nprint()\n  \n  ", "m,n=map(int, input().split())\na=[0]*8;\nfor i in range(m):\n    x=list(map(int,input().split()))\n    for j in range(1,n+1):\n        a[j]=max(a[j], a[j-1])+x[j-1]\n    print(a[n], end=' ')\n        ", "m,n=map(int, input().split())\na=[0]*8\nfor i in range(m):\n    x=list(map(int, input().split()))\n    for j in range(1, n+1):\n        a[j]=max(a[j], a[j-1])+x[j-1]\n    print(a[n], end=' ')", "m,n=map(int, input().split())\na=[0]*8\nfor i in range(m):\n    x=list(map(int, input().split()))\n    for j in range(1, n+1):\n        a[j]=max(a[j], a[j-1])+x[j-1]\n    print(a[n], end=' ') ", "m, n=map(int, input().split())\na=[0]*8\nfor i in range(m):\n    x=list(map(int, input().split()))\n    for j in range(1, n+1):\n        a[j]=max(a[j], a[j-1])+x[j-1]\n    print(a[n], end=' ')", "m,n=map(int, input().split())\na=[0]*8\nfor i in range(m):\n    x=list(map(int, input().split()))\n    for j in range(1,n+1):\n        a[j]=max(a[j], a[j-1])+x[j-1]\n    print(a[n],end=' ')", "R = lambda: map(int, input().split())\nm, n = R()\nt = [list([0] * (m + 1)) for i in range(n + 1)]\nfor i in range(1, m + 1):\n  a = list(R())\n  for j in range(1, n + 1):\n    t[j][i] = max(t[j - 1][i], t[j][i - 1]) + a[j - 1]\nprint(\" \".join(map(str, t[n][1:])))", "R = lambda:map(int, input().split())\nm, n = R()\nt = [0] * (n + 1)\nc = []\nfor i in range(m):\n  a = list(R())\n  for j in range(n):\n    t[j + 1] = max(t[j], t[j + 1]) + a[j]\n  c += [str(t[n])]\nprint(\" \".join(c))", "m, n = list(map(int, input().split()))\n\ndef solve():\n\tpainting_time = []\n\tfinish_time = [0 for i in range(m)]\n\t\n\tfor _ in range(m):\n\t\tpainting_time.append(list(map(int, input().split())))\n\n\tfor i in range(n):\n\t\tfree_at = 0\n\t\tfor j in range(m):\n\t\t\tstart = max(free_at, finish_time[j])\n\t\t\tfinish_time[j] = start + painting_time[j][i]\n\t\t\tfree_at = finish_time[j]\n\t\n\treturn finish_time\n\ndef __starting_point():\n\tprint(*solve())\n\n__starting_point()"]