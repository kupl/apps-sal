["from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    h,w=map(int,readline().split())\n    a=[list(map(int,readline().split())) for _ in range(h)]\n\n    i=0\n    j=0\n    n=0\n    ans=[]\n    while True:\n        if i%2==0:\n            if j<w-1:\n                if a[i][j]%2==1:\n                    n+=1\n                    ans.append([i+1,j+1,i+1,j+2])\n                    a[i][j+1]+=1\n                j+=1\n            elif j==w-1:\n                if i<h-1:\n                    if a[i][j]%2==1:\n                        n+=1\n                        ans.append([i+1,j+1,i+2,j+1])\n                        a[i+1][j]+=1\n                    i+=1\n                else:\n                    break\n        else:\n            if j>0:\n                if a[i][j]%2==1:\n                    n+=1\n                    ans.append([i+1,j+1,i+1,j])\n                    a[i][j-1]+=1\n                j-=1\n            elif j==0:\n                if i<h-1:\n                    if a[i][j]%2==1:\n                        n+=1\n                        ans.append([i+1,j+1,i+2,j+1])\n                        a[i+1][j]+=1\n                    i+=1\n                else:\n                    break\n\n    print(n)\n    for i in range(n):\n        print(*ans[i])\n\ndef __starting_point():\n    main()\n__starting_point()", "\nfrom collections import deque\n\nicase=0\nif icase==0:\n    h,w=list(map(int,input().split()))\n    a=[[0]*w for i in range(h)]\n    for i in range(h):\n        a[i]=list(map(int,input().split()))        \nelif icase==1: \n    h,w=2,3\n    a=[[1, 2, 3], [0, 1, 1]]\nelif icase==2: \n    h,w=3,2\n    a=[[1, 0], [2, 1], [1, 0]]\nelif icase==3: \n    h,w=1,5\n    a=[[9, 9, 9, 9, 9]]\n\n\nastat=0\nim=-1\njm=-1\nq=deque()\n\nfor i in range(h):\n    if i%2==0:\n        wst=0\n        wed=w\n        wpt=1\n    else:\n        wst=w-1\n        wed=-1\n        wpt=-1\n    for j in range(wst,wed,wpt):\n#        print(\"i,j:\",i,j)\n        if a[i][j]%2==1 and astat==0:\n            astat=1\n#            print(\"A:\",im,jm,i,j)\n        elif a[i][j]%2==1 and astat==1:\n            q.append((im,jm,i,j))\n#            print(\"B:\",im,jm,i,j)\n            astat=0\n        elif a[i][j]%2==0 and astat==0:\n            astat=0\n#            print(\"C:\",im,jm,i,j)\n        elif a[i][j]%2==0 and astat==1:\n            astat=1\n            q.append((im,jm,i,j))\n#            print(\"D:\",im,jm,i,j)\n        im=i\n        jm=j\n        \nprint((len(q)))\nfor i in range(len(q)):\n    yf,xf,yt,xt=q.popleft()\n    stra=str(yf+1)+\" \"+str(xf+1)+\" \"+str(yt+1)+\" \"+str(xt+1)\n    print(stra)    \n", "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return list(map(int, input().split()))\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return list(zip(*(MAP() for _ in range(n))))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nH, W = MAP()\na = [LIST() for _ in range(H)]\n\ncnt = 0\nmove = []\nfor i in range(H):\n\tfor j in range(W):\n\t\tif i == H-1 and j == W-1:\n\t\t\tprint(cnt)\n\t\t\tfor x in move:\n\t\t\t\tprint((*x))\n\t\t\treturn\n\t\tif i%2 == 0:\n\t\t\tif a[i][j]%2 == 1 and j == W-1:\n\t\t\t\ta[i][j] -= 1\n\t\t\t\ta[i+1][j] += 1\n\t\t\t\tcnt += 1\n\t\t\t\tmove.append((i+1, j+1, i+2, j+1))\n\t\t\telif a[i][j]%2 == 1:\n\t\t\t\ta[i][j] -= 1\n\t\t\t\ta[i][j+1] += 1\n\t\t\t\tcnt += 1\n\t\t\t\tmove.append((i+1, j+1, i+1, j+2))\n\t\telse:\n\t\t\tif a[i][W-j-1]%2 == 1 and j == W-1:\n\t\t\t\ta[i][W-j-1] -= 1\n\t\t\t\ta[i+1][W-j-1] += 1\n\t\t\t\tcnt += 1\n\t\t\t\tmove.append((i+1, W-j, i+2, W-j))\n\t\t\telif a[i][W-j-1]%2 == 1:\n\t\t\t\ta[i][W-j-1] -= 1\n\t\t\t\ta[i][W-j-2] += 1\n\t\t\t\tcnt += 1\n\t\t\t\tmove.append((i+1, W-j, i+1, W-j-1))\n", "H,W = map(int,input().split())\nlsHW = []\nfor i in range(H):\n    if i % 2 == 0:\n        lsHW += list(map(int,input().split()))\n    if i % 2 == 1:\n        lsHW += reversed(list(map(int,input().split())))\nN = 0\nlsmove = []\nfor i in range(H*W-1):\n    if lsHW[i] % 2 == 0:\n        continue\n    else:\n        y1 = i//W + 1\n        y2 = (i+1)//W + 1\n        if (i//W) % 2 == 0:\n            x1 = i % W + 1\n        if (i//W) % 2 == 1:\n            x1 = W - i % W\n        if ((i+1)//W) % 2 == 0:\n            x2 = (i+1) % W + 1\n        if ((i+1)//W) % 2 == 1:\n            x2 = W - (i+1) % W\n        N += 1\n        lsHW[i+1] += 1\n        lsmove.append([y1,x1,y2,x2])\nprint(N)\nfor i in lsmove:\n    print(*i,sep=(' '))", "H,W=map(int,input().split())\nA=[list(map(int,input().split())) for h in range(H)]\nx=1\nw=0\nans=[]\nfor h in range(H):\n  while 0<=w+x<W:\n    if A[h][w]%2==1:\n      ans.append([h+1,w+1,h+1,w+x+1])\n      A[h][w+x]+=1\n    w+=x\n  if A[h][w]%2==1 and h+1<H:\n    ans.append([h+1,w+1,h+1+1,w+1])\n    A[h+1][w]+=1\n  x*=-1\nprint(len(ans))\nfor _ in ans:\n  print(*_)", "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n \nh,w=list(map(int,input().split()))\na=[]\nfor _ in range(h):\n    a.append(list(map(int,input().split())))\nans = []\nflag = 1\nfor i in range(h):\n    if flag:\n        for j in range(w):\n            if j == w - 1:\n                flag ^= 1\n                if i != h - 1 and a[i][j] % 2 == 1: \n                    ans.append([i + 1, j + 1, i + 2, j + 1])\n                    a[i + 1][j] += 1\n            elif a[i][j] % 2 == 1:\n                ans.append([i + 1, j + 1, i + 1, j + 2])\n                a[i][j + 1] += 1\n    else:\n        for j in range(w - 1, -1, -1):\n            if j == 0:\n                flag ^= 1\n                if i != h - 1 and a[i][j] % 2 == 1:\n                    ans.append([i + 1, j + 1, i + 2, j + 1])\n                    a[i + 1][j] += 1\n            elif a[i][j] % 2 == 1:\n                ans.append([i + 1, j + 1, i + 1, j])\n                a[i][j - 1] += 1\nprint((len(ans)))\nfor i in ans:\n    print((*i))\n", "H,W = map(int,input().split())\nHW = [[0]*(W+1)]+[[0]+list(map(int,input().split())) for i in range(H)]\nf = 0\nrev = False\nlsmove = []\nN = 0\ni = 1\nwhile i <= H:\n    if rev == False:\n        for j in range(1,W+1):\n            if HW[i][j] % 2 == 0:\n                continue\n            else:\n                if j != W:\n                    lsmove.append([i,j,i,j+1])\n                    HW[i][j+1] += 1\n                    N += 1\n                elif i != H:\n                    lsmove.append([i,j,i+1,j])\n                    HW[i+1][j] += 1\n                    N += 1\n        rev = True\n        i += 1\n        if j == W and i == H+1:\n            break\n    if rev == True:\n        for j in range(W,0,-1):\n            if HW[i][j] % 2 == 0:\n                continue\n            else:\n                if j != 1:\n                    lsmove.append([i,j,i,j-1])\n                    HW[i][j-1] += 1\n                    N += 1\n                elif i != H:\n                    lsmove.append([i,j,i+1,j])\n                    HW[i+1][j] += 1\n                    N += 1\n        rev = False\n        i += 1\n        if j == 1 and i == H+1:\n            break\nprint(N)\nfor i in lsmove:\n    print(*i,sep=(' '))", "import sys\nsys.setrecursionlimit(10 ** 8)\n\ndef Z(): return int(input())\ndef ZZ(): return [int(_) for _ in input().split()]\n\ndef main():\n    H, W = ZZ()\n    A = [ZZ() for _ in range(H)]\n    done = [[False] * W for _ in range(H)]\n    path = []\n    operation = []\n\n    for i in range(H):\n        if i%2:\n            for j in range(W)[::-1]: path.append([i, j])\n        else:\n            for j in range(W): path.append([i, j])\n    for i in range(H*W-1):\n        x, y = path[i]\n        nx, ny = path[i+1]\n        if A[x][y]%2:\n            operation.append([x, y, nx, ny])\n            A[x][y] -= 1\n            A[nx][ny] += 1\n\n    print((len(operation)))\n    for i, j, k, l in operation: print((i+1, j+1, k+1, l+1))\n\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin python3\n# -*- coding: utf-8 -*-\n\ndef main():\n    H, W = map(int, input().split())\n    A = [list(map(int,input().split())) for _ in range(H)]\n    WL = list(range(W))\n    WLR = WL[::-1]\n\n    path =[]\n    for h in range(H):\n        if h%2==0:\n            for w in WL:\n                path.append((h, w))\n        else:\n            for w in WLR:\n                path.append((h, w))\n    ret = []\n    for i in range(H*W-1):\n        h, w = path[i]\n        if A[h][w]%2==1:\n            ret.append(i)\n            hn, wn = path[i+1]\n            A[hn][wn]+=1\n\n    print(len(ret))\n    for i in ret:\n        h,w = path[i]\n        nh,nw = path[i+1]\n        print(h+1,w+1,nh+1,nw+1)\n\ndef __starting_point():\n    main()\n__starting_point()", "H,W=map(int,input().split())\nA=[list(map(int,input().split()))for _ in range(H)]\n\nans=[]\ni=j=0\nwhile i<H:\n    if i%2==0:\n        if 0<=j<W-1:\n            if A[i][j]%2:\n                ans.append([i+1,j+1,i+1,j+2])\n                A[i][j+1]+=1\n            j+=1\n        else:\n            i+=1\n            if i<H:\n                if A[i-1][j]%2:\n                    ans.append([i,j+1,i+1,j+1])\n                    A[i][j]+=1\n    else:\n        if 0<j:\n            if A[i][j]%2:\n                ans.append([i+1,j+1,i+1,j])\n                A[i][j-1]+=1\n            j-=1\n        else:\n            i+=1\n            if i<H:\n                if A[i-1][j]%2:\n                    ans.append([i,j+1,i+1,j+1])\n                    A[i][j]+=1\n\nprint(len(ans))\nfor a,b,c,d in ans:\n    print(a,b,c,d)", "H, W = list(map(int, input().split()))\na = [0] * H\nfor i in range(H):\n    if i % 2 == 0:\n        a[i] = list(map(int, input().split()))\n    else:\n        a[i] = list(map(int, input().split()))[::-1]\n\ns = [[0] * W for i in range(H)]\ns[0][0] = a[0][0] % 2\nfor i in range(1,W):\n    s[0][i] = (s[0][i-1] + a[0][i]) % 2\nfor i in range(1,H):\n    for j in range(W):\n        if j == 0:\n            s[i][j] = (s[i-1][-1] + a[i][j]) % 2\n        else:\n            s[i][j] = (s[i][j-1] + a[i][j]) % 2\n\ns[H-1][W-1] = 0\n#print(a)\nans = []\nfor i in range(H):\n    for j in range(W):\n        if s[i][j]:\n            if i % 2 == 0:\n                if j != W-1:\n                    ans.append([i+1, j+1, i+1, j+2])\n                else:\n                    ans.append([i+1, j+1, i+2, j+1])\n            else:\n                if j != W-1:\n                    ans.append([i+1, W-j, i+1, W-j-1])\n                else:\n                    ans.append([i+1, W-j, i+2, W-j])\n\nprint((len(ans)))\nfor i in range(len(ans)):\n    print((\"{} {} {} {}\".format(ans[i][0], ans[i][1], ans[i][2], ans[i][3])))\n", "h,w = map(int,input().split())\na = [[0]*w]*h\n\nfor i in range(h):\n\ta[i] = list(map(int,input().split()))\n\nl = []\np = []\nfor i in range(h):\n\tif i%2 == 1:\n\t\tfor j in reversed(range(w)):\n\t\t\tl.append(a[i][j])\n\t\t\tp.append((i+1,j+1))\n\telse:\n\t\tfor j in range(w):\n\t\t\tl.append(a[i][j])\n\t\t\tp.append((i+1,j+1))\nans = []\ni = 0\nwhile i < h*w:\n\tif l[i]%2 == 1:\n\t\tk = i\n\t\twhile ((k == i) or (l[k]%2 == 0)) and k < h*w - 1:\n\t\t\tans.append(p[k]+p[k+1])\n\t\t\tk += 1\n\t\ti = k\n\ti += 1\nprint(len(ans))\nfor i in ans:\n\tprint(*i)", "h,w=list(map(int,input().split()))\na=[list(map(int,input().split())) for _ in range(h)]\nth,tw=0,0\nmode=0\nans=[]\nope=0\nwhile ope<h*w:\n  if mode==0:\n    if tw==w-1:\n      if a[th][tw]%2==1 and th+1<h:\n        a[th][tw]-=1\n        a[th+1][tw]+=1\n        ans.append([th+1,tw+1,th+2,tw+1])\n      th+=1\n      mode=1\n    else:\n      if a[th][tw]%2==1:\n        a[th][tw]-=1\n        a[th][tw+1]+=1\n        ans.append([th+1,tw+1,th+1,tw+2])\n      tw+=1\n  elif mode==1:\n    if tw==0:\n      if a[th][tw]%2==1 and th+1<h:\n        a[th][tw]-=1\n        a[th+1][tw]+=1\n        ans.append([th+1,tw+1,th+2,tw+1])\n      th+=1\n      mode=0\n    else:\n      if a[th][tw]%2==1:\n        a[th][tw]-=1\n        a[th][tw-1]+=1\n        ans.append([th+1,tw+1,th+1,tw])\n      tw-=1\n  ope+=1\n# print(a)\nprint((len(ans)))\nfor aa in ans:\n  print((*aa))\n", "h, w = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(h)]\ndef nxtij(i, j):\n    if i & 1 == 0:\n        if j < w - 1:\n            return i, j + 1\n        elif i < h - 1:\n            return i + 1, j\n        else:\n            return None\n    else:\n        if j > 0:\n            return i, j - 1\n        elif i < h - 1:\n            return i + 1, j\n        else:\n            return None\n\ndef ijgen():\n    p = 0, 0\n    while p:\n        yield p\n        p = nxtij(*p)\n    return\nans = []\nfor i, j in ijgen():\n    if a[i][j] & 1:\n        p = nxtij(i, j)\n        if p:\n            a[p[0]][p[1]] += 1\n            ans.append((i+1, j+1, p[0]+1, p[1]+1))\nprint((len(ans)))\nfor a in ans:\n    print((*a))\n", "H, W = map(int, input().split())\nA = []\nfor i in range(H):\n    r = list(map(int, input().split()))\n    if i&1:\n        r.reverse()\n    A.append(r)\n\nans = []\n\nfor i in range(H*W-1):\n    if A[i//W][i%W]&1:\n        j = i+1\n        A[j//W][j%W] += 1\n        ans.append([i, j])\n\ndef f(n):\n    x = n//W\n    y = n%W\n    if x&1:\n        y = W-y-1\n    return f\"{x+1} {y+1}\"\n\nprint(len(ans))\nfor a, b in ans:\n    print(f(a), f(b))", "H, W = list(map(int, input().split()))\nA = []\n\nfor i in range(H):\n  a = list(map(int, input().split()))\n  if i%2:\n    a.reverse()\n  A.extend(a)  \n\nans = []\nfor i in range(H*W-1):\n  if A[i]%2:\n    ans.append(i)\n    A[i+1] += 1\n\nN = len(ans)\nprint(N)\n\ndef move(m):\n  y1, x1 = divmod(m, W)\n  y2, x2 = divmod(m+1, W)\n  y1 += 1\n  y2 += 1\n  if m//W%2:\n    x1 = W - x1\n  else:\n    x1 += 1\n  if (m+1)//W%2:\n    x2 = W - x2\n  else:\n    x2 += 1\n  return (y1, x1, y2, x2)\n\nfor i in range(N):\n  print((*move(ans[i])))\n", "H, W = map(int, input().split())\na = []\n\nfor i in range(H):\n    a.append([int(x) for x in input().split()])\n\nn = 0\nans = []\nfor y in range(H):\n    if y % 2 == 0:\n        for x in range(W - 1):\n            if a[y][x] & 1:\n                a[y][x + 1] += 1\n                n += 1\n                ans.append(\"{} {} {} {}\".format(y + 1, x + 1, y + 1, x + 2))\n        if y != H - 1 and (a[y][W - 1] & 1):\n            a[y + 1][W - 1] += 1\n            n += 1\n            ans.append(\"{} {} {} {}\".format(y + 1, W, y + 2, W))\n\n    else:\n        for x in range(W - 1, 0, -1):\n            if a[y][x] & 1:\n                a[y][x - 1] += 1\n                n += 1\n                ans.append(\"{} {} {} {}\".format(y + 1, x + 1, y + 1, x))\n        if y != H - 1 and (a[y][0] & 1):\n            a[y + 1][0] += 1\n            n += 1\n            ans.append(\"{} {} {} {}\".format(y + 1, 1, y + 2, 1))\n\nprint(n)\nprint(\"\\n\".join(ans))", "import sys\nreadline = sys.stdin.readline\nsys.setrecursionlimit(10**8)\nmod = 10**9+7\n#mod = 998244353\nINF = 10**18\neps = 10**-7\n\nH,W = list(map(int,readline().split()))\n\na = [list(map(int,readline().split())) for i in range(H)]\n\nans = []\n\nfor i in range(H-1):\n    if i%2:\n        for j in range(W-1,0,-1):\n            if a[i][j]%2:\n                ans.append((i+1,j+1,i+1,j))\n                a[i][j] -= 1\n                a[i][j-1] += 1\n        if a[i][0]%2:\n            ans.append((i+1,1,i+2,1))\n            a[i][0] -= 1\n            a[i+1][0] += 1\n\n    else:\n        for j in range(W-1):\n            if a[i][j]%2:\n                ans.append((i+1,j+1,i+1,j+2))\n                a[i][j] -= 1\n                a[i][j+1] += 1\n        if a[i][W-1]%2:\n            ans.append((i+1,W,i+2,W))\n            a[i][W-1] -= 1\n            a[i+1][W-1] += 1\nif (H-1)%2:\n    for j in range(W-1,0,-1):\n        if a[H-1][j]%2:\n            ans.append((H,j+1,H,j))\n            a[H-1][j] -= 1\n            a[H-1][j-1] += 1\nelse:\n    for j in range(W-1):\n        if a[H-1][j]%2:\n            ans.append((H,j+1,H,j+2))\n            a[H-1][j] -= 1\n            a[H-1][j+1] += 1\nprint((len(ans)))\nfor (x,y,u,v) in ans:\n    print((x,y,u,v))\n\n", "H, W = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(H)]\n\nresult = []\ny = 0\nwhile y < H:\n    x = 0\n    while x < W:\n        if a[y][x] % 2 == 1:\n            if x == W - 1:\n                if y == H - 1:\n                    break\n                else:\n                    result.append('%d %d %d %d' % (y + 1, x + 1, y + 2, x + 1))\n                    a[y + 1][x] += 1\n            else:\n                result.append('%d %d %d %d' % (y + 1, x + 1, y + 1, x + 2))\n                a[y][x + 1] += 1\n        x += 1\n    if y == H - 1:\n        break\n    y += 1\n    x = W - 1\n    while x >= 0:\n        if a[y][x] % 2 == 1:\n            if x == 0:\n                if y == H - 1:\n                    break\n                else:\n                    result.append('%d %d %d %d' % (y + 1, x + 1, y + 2, x + 1))\n                    a[y + 1][x] += 1\n            else:\n                result.append('%d %d %d %d' % (y + 1, x + 1, y + 1, x))\n                a[y][x - 1] += 1\n        x -= 1\n    y += 1\n\nprint(len(result))\n#print('\\n'.join(result))\nprint(*result, sep='\\n')\n", "H,W=list(map(int,input().split()))\na=[list(map(int,input().split())) for i in range(H)]\ncells=[]\nfor i in range(H):\n    if i%2==0:\n        for j in range(W):\n            cells.append((i,j))\n    else:\n        for j in range(W-1,-1,-1):\n            cells.append((i,j))\nans=[]\nfor k in range(H*W-1):\n    i,j=cells[k]\n    if a[i][j]%2==1:\n        ni,nj=cells[k+1]\n        a[i][j]-=1\n        a[ni][nj]+=1\n        ans.append([i+1,j+1,ni+1,nj+1])\nprint((len(ans)))\nfor i in range(len(ans)):\n    print((ans[i][0],ans[i][1],ans[i][2],ans[i][3]))\n", "def main():\n    H, W = map(int, input().split())\n    field = []\n    for _ in range(H):\n        line = list(map(int, input().split()))\n        field.append(line)\n    \n    ans = []\n    # zig-zag\n    for i in range(H):\n        if i%2 == 0:\n            for j in range(W):\n                if field[i][j] % 2 == 1:\n                    field[i][j] -= 1\n                    if j != W-1:\n                        field[i][j+1] += 1\n                        ans.append((i+1, j+1, i+1, j+2))\n                    elif i != H - 1:\n                        field[i+1][j] += 1\n                        ans.append((i+1, j+1, i+2, j+1))\n                    \n                    else:\n                        field[i][j] += 1\n        else:\n            for j in range(W-1, -1, -1):\n                if field[i][j] % 2 == 1:\n                    field[i][j] -= 1\n                    if j != 0:\n                        field[i][j-1] += 1\n                        ans.append((i+1, j+1, i+1, j))\n                    elif i != H - 1:\n                        field[i+1][j] += 1\n                        ans.append((i+1, j+1, i+2, j+1))\n\n                    else:\n                        field[i][j] += 1\n    print(len(ans))\n    for line in ans:\n        print(*line, sep=\" \")\n    \n\n\ndef __starting_point():\n    main()\n__starting_point()", "H,W=list(map(int,input().split()))\nl=[list(map(int,input().split())) for i in range(H)]\nfor i in range(H):\n   for j in range(W):\n      l[i][j]%=2\nsw=0\nans=[]\nfor i in range(H):\n   if i%2==0:\n      for j in range(W):\n         if sw==1:\n            ans.append((i+1,j+1))\n         if l[i][j]==1:\n            sw=1 if sw==0 else 0\n            if sw==1:\n               ans.append((i+1,j+1))\n            if sw==0:\n               ans.append(0)\n   else:\n      for j in reversed(range(W)):\n         if sw==1:\n            ans.append((i+1,j+1))\n         if l[i][j]==1:\n            sw=1 if sw==0 else 0\n            if sw==1:\n               ans.append((i+1,j+1))\n            if sw==0:\n               ans.append(0)\nf_ans=[]\nfor i in range(len(ans)-1):\n   if ans[i]!=0 and ans[i+1]!=0:\n      f_ans.append((*ans[i],*ans[i+1]))\nprint(len(f_ans))\nfor i in f_ans:print(*i)", "import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    H, W = list(map(int, input().split()))\n    field = []\n    odd = []\n    for i in range(H):\n        tmp = list(map(int, input().split()))\n        field.append(tmp)\n    \n    rote = []\n    for h in range(H):\n        for j in range(W):\n            if h%2 == 1:\n                w = W-j-1\n            else:\n                w = j\n            rote.append((h, w))\n    \n    ans = []\n    for i, r in enumerate(rote):\n        h, w = r\n        if field[h][w] % 2 == 1:\n            if i == H*W-1:\n                break\n            s, t = rote[i+1]\n            ans.append((h+1, w+1, s+1, t+1))\n            field[h][w] -= 1\n            field[s][t] += 1\n\n    print((len(ans)))\n    for a in ans:\n        print((*a))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H, W = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(H)]\n\nresult = []\ny = 0\nwhile y < H:\n    x = 0\n    while x < W:\n        if a[y][x] % 2 == 1:\n            if x == W - 1:\n                if y == H - 1:\n                    break\n                else:\n                    result.append('%d %d %d %d' % (y + 1, x + 1, y + 2, x + 1))\n                    a[y + 1][x] += 1\n            else:\n                result.append('%d %d %d %d' % (y + 1, x + 1, y + 1, x + 2))\n                a[y][x + 1] += 1\n        x += 1\n    if y == H - 1:\n        break\n    y += 1\n    x = W - 1\n    while x >= 0:\n        if a[y][x] % 2 == 1:\n            if x == 0:\n                if y == H - 1:\n                    break\n                else:\n                    result.append('%d %d %d %d' % (y + 1, x + 1, y + 2, x + 1))\n                    a[y + 1][x] += 1\n            else:\n                result.append('%d %d %d %d' % (y + 1, x + 1, y + 1, x))\n                a[y][x - 1] += 1\n        x -= 1\n    y += 1\n\nprint((len(result)))\nprint(('\\n'.join(result)))\n#print(*result, sep='\\n')\n", "f=lambda:[*map(int,input().split())]\nh,w=f()\ng=[f() for _ in range(h)]\ntx=ty=0\na=[]\nfor y in range(h):\n  for x in range(w):\n    if y%2:\n      if tx: nx,ny=tx-1,ty\n      else: nx,ny=tx,ty+1\n    else:\n      if tx<w-1: nx,ny=tx+1,ty\n      else: nx,ny=tx,ty+1\n    if ny==h: break\n    if g[ty][tx]%2:\n      g[ty][tx]-=1\n      g[ny][nx]+=1\n      a+=[[ty+1,tx+1,ny+1,nx+1]]\n    ty,tx=ny,nx\n  if ny==h: break\nprint(len(a))\nfor l in a: print(*l)", "h,w = map(int,input().split())\na = []\nfor i in range(h):\n    b = [int(i) % 2 for i in input().split()]\n    a.append(b)\nc = []\nodd = 0\nn = 0\nwhile n <h:\n    if odd == 0:\n        for i in range(w):\n            c.append([n,i])\n        odd = 1\n    elif odd == 1:\n        for i in range(w-1,-1,-1):\n            c.append([n,i])\n        odd = 0\n    n +=1\nans = []\nfor i in range(len(c)):\n    if a[c[i][0]][c[i][1]] == 1:\n        if i == len(c)-1:\n            break\n        ans.append([str(c[i][0]+1), str(c[i][1]+1), str(c[i+1][0]+1), str(c[i+1][1]+1)])\n        a[c[i+1][0]][c[i+1][1]] +=1\nprint(len(ans))\nfor i in range(len(ans)):\n    print(' '.join(ans[i]))", "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import deque, defaultdict\nfrom math import sqrt, factorial, gcd, ceil, atan, pi\n# def input(): return sys.stdin.readline()[:-1] # warning not \\n\n# def input(): return sys.stdin.buffer.readline().strip() # warning bytes\n# def input(): return sys.stdin.buffer.readline().decode('utf-8')\nimport string\n# string.ascii_lowercase\nfrom bisect import bisect_left\nMOD = int(1e9)+7\nINF = float('inf')\n\n\ndef solve():\n    # n, m = [int(x) for x in input().split()]\n    n, m = [int(x) for x in input().split()]\n    ans = []\n    c = 0\n    for i in range(n):\n        r = [int(x) for x in input().split()]\n        for j in range(m):\n            if i + 1 == n and j + 1 == m: continue\n            if i % 2:\n                j = m - j - 1\n            r[j] += c\n            c = r[j] % 2\n            if c:\n                x = i + 1\n                y = j + 1\n                if i % 2:\n                    if y == 1:\n                        ans.append((x, y, x + 1, y))\n                    else:\n                        ans.append((x, y, x, y - 1))\n                else:\n                    if y == m:\n                        ans.append((x, y, x + 1, y))\n                    else:\n                        ans.append((x, y, x, y + 1))\n    print((len(ans)))\n    for r in ans:\n        print((*r))\n\n\nt = 1\n# t = int(input())\nfor case in range(1,t+1):\n    ans = solve()\n\n\n\"\"\"\n\nazyxwvutsrqponmlkjihgfedcb\n\n\"\"\"\n", "h,w = map(int,input().split())\na = [list(map(int,input().split())) for _ in range(h)]\nn = 0\nans = []\nb = []\nfor i in range(h):\n  for j in range(w):\n    b.append((i,j if i%2==0 else w-j-1))\nfor i in range(h*w-1):\n  y,x = b[i]\n  if a[y][x]%2==0:\n    continue\n  a[y][x]-=1\n  n+=1\n  ny,nx = b[i+1]\n  a[ny][nx]+=1\n  ans.append(\"{} {} {} {}\".format(str(y+1),str(x+1),str(ny+1),str(nx+1)))\nprint(n)\nprint(\"\\n\".join(ans))", "H, W = list(map(int, input().split()))\ngrid = []\nfor _ in range(H):\n    line = list(map(int, input().split()))\n    grid.append(line)\n# print(grid)\nq = []\nfor i in range(H):\n    if i % 2 == 0:\n        for j in range(W):\n            q.append([i, j])\n    else:\n        for j in range(W - 1, -1, -1):\n            q.append([i, j])\n# print(q)\ncnt = 0\nop_list = []\nfor i in range(len(q) - 1):\n    if grid[q[i][0]][q[i][1]] % 2 == 0:\n        pass\n    else:\n        grid[q[i][0]][q[i][1]] -= 1\n        grid[q[i + 1][0]][q[i + 1][1]] += 1\n        cnt += 1\n        op_list.append([q[i][0], q[i][1], q[i + 1][0], q[i + 1][1]])\nprint(cnt)\nfor op in op_list:\n    print((op[0] + 1, op[1] + 1, op[2] + 1, op[3] + 1))\n", "H, W = map(int, input().split())\ngrid = [list(map(int, input().split())) for _ in range(H)]\nN = 0\nA = []\nfor h in range(H):\n  if h % 2 == 0:\n    for w in range(W):\n      if grid[h][w] % 2:\n        if w != W-1:\n          grid[h][w] -= 1\n          grid[h][w+1] += 1\n          A.append([h+1, w+1, h+1, w+2])\n          N += 1\n        else:\n          if h == H-1:\n            continue\n          grid[h][w] -= 1\n          grid[h+1][w] += 1\n          A.append([h+1, w+1, h+2, w+1])\n          N += 1\n          \n  else:\n    for w in range(W-1, -1, -1):\n      if grid[h][w] % 2:\n        if w != 0:\n          grid[h][w] -= 1\n          grid[h][w-1] += 1\n          A.append([h+1, w+1, h+1, w])\n          N += 1\n        else:\n          if h == H-1:\n            continue\n          grid[h][w] -= 1\n          grid[h+1][w] += 1\n          A.append([h+1, w+1, h+2, w+1])\n          N += 1\nprint(N)\nfor a in A:\n  print(\" \".join(map(str, a)))", "h,w=map(int,input().split())\nflag = False\nans = []\nfor i in range(h):\n    A=list(map(int,input().split()))\n    if i%2==0:\n        r=range(w)\n    else:\n        r=range(w-1,-1,-1)\n    for j in r:\n        a=A[j]\n        if (i>0 or j>0) and flag:\n            ans.append(f\"{prev_i+1} {prev_j+1} {i+1} {j+1}\")\n        if flag:\n            if a%2==0:\n                flag = True\n            else:\n                flag = False\n        else:\n            if a%2==0:\n                flag = False\n            else:\n                flag = True\n        prev_i = i\n        prev_j = j\nprint(len(ans))\nprint(\"\\n\".join(ans))", "h , w = list(map(int, input().split()))\na = [list(map(int,input().split())) for i in range(h)]\n\nans=[]\n\nc=0\nfor i in range(h):\n    if i%2==0:\n        for j in range(w):\n            if c==0 and a[i][j]%2==1:\n                c=1\n            if c==2:\n                c=0\n            if c==1 and j<w-1:\n                ans.append([str(i+1),str(j+1),str(i+1),str(j+2)])\n                if a[i][j+1]%2==1:\n                    c=2\n            elif c==1 and j==w-1 and i+1<=h-1:\n                ans.append([str(i+1),str(j+1),str(i+2),str(j+1)])\n                if a[i+1][j]%2==1:\n                    c=2\n    if i%2==1:\n        for j in range(w):\n            if c==0 and a[i][w-1-j]%2==1:\n                c=1\n            if c==2:\n                c=0\n            if c==1 and j<w-1:\n                ans.append([str(i+1),str(w-j),str(i+1),str(w-j-1)])\n                if a[i][w-j-2]%2==1:\n                    c=2\n            elif c==1 and j==w-1 and i+1<=h-1:\n                ans.append([str(i+1),str(w-j),str(i+2),str(w-j)])\n                if a[i+1][w-1-j]%2==1:\n                    c=2\nprint((len(ans)))\nfor i in ans:\n    print((' '.join(i)))\n", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf,comb\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\n\nh, w = MAP()\na = [[0]*(w+1)]\nfor i in range(1, h+1):\n    a.append([0] + LIST())\nans = []\nflag = False\nfor i in range(1, h+1):\n    if i % 2 == 1:\n        for j in range(1, w+1):\n            if a[i][j] % 2 == 1:\n                flag = not flag\n            if flag:\n                if j < w:\n                    ans.append([i,j,i,j+1])\n                elif i < h:\n                    ans.append([i,j,i+1,j])\n    else:\n        for j in range(w, 0, -1):\n            if a[i][j] % 2 == 1:\n                flag = not flag\n            if flag:\n                if j > 1:\n                    ans.append([i,j,i,j-1])\n                elif i < h:\n                    ans.append([i,j,i+1,j])\n\nprint(len(ans))\nfor x in ans:\n    print(*x)", "H, W = list(map(int, input().split()))\na = [list(map(int, input().split())) for _ in range(H)]\n# print(a)\nq = []\nfor i in range(H):\n    if i % 2 == 0:\n        for j in range(W):\n            q.append([i, j])\n    elif i % 2 == 1:\n        for j in range(W - 1, -1, -1):\n            q.append([i, j])\n# print(q)\nN = 0\nans_arr = []\nfor qi in range(len(q)):\n    i = q[qi][0]\n    j = q[qi][1]\n    if a[i][j] % 2 == 0:\n        pass\n    elif a[i][j] % 2 == 1 and qi != len(q) - 1:\n        N += 1\n        a[i][j] -= 1\n        a[q[qi + 1][0]][q[qi + 1][1]] += 1\n        ans_arr.append([i, j, q[qi + 1][0], q[qi + 1][1]])\n\nprint(N)\nfor x1, x2, x3, x4 in ans_arr:\n    print((x1 + 1, x2 + 1, x3 + 1, x4 + 1))\n"]