["h = int(input())\nans = 0\nn = 0\nwhile h != 0:\n  ans += 2**n\n  n += 1\n  h = h//2\nprint(ans)", "H = int(input())\n\ncnt = 0\nres = 0\n\nwhile H > 1:\n    H = H //2\n    cnt += 1\n    res += 2**cnt\n\nprint(res+1)", "H = int(input())\nnow = 1\nfor i in range(1,100):\n  if now <= H <= now*2-1:\n    print((2**i-1))\n    break\n  else:\n    now *= 2\n", "def N():\n    return int(input())\ndef L():\n    return list(map(int,input().split()))\ndef NL(n):\n    return [list(map(int,input().split())) for i in range(n)]\nmod = pow(10,9)+7\n\n#import numpy as np\nimport sys\nimport math\nimport collections\n\nn = N()\nl = int(math.log2(n))\nsu = 0\nz = 1\nfor i in range(l+1):\n    su += z\n    z *= 2\nprint(su)", "H = int(input())\n\ncnt = 0\n\nwhile H:\n  H //= 2\n  cnt = cnt*2 + 1\n\nprint(cnt)\n", "H = int(input())\n \n# \u4f53\u529b\u304cH\u306e\u30e2\u30f3\u30b9\u30bf\u30fc1\u4f53\u306b\u52dd\u3064\u305f\u3081\u306b\u5fc5\u8981\u306a\u653b\u6483\u56de\u6570\u3092f(H)\u3068\u3059\u308b\n# \u3059\u308b\u3068\u3001f(H)\u306f\u4ee5\u4e0b\u306e\u6f38\u5316\u5f0f\u306b\u5f93\u3063\u3066\u6c42\u307e\u308b\n# f(H)=2*f(floor(H/2)+1) (H>1)\n# f(H)=1 (H=1)\n\n# \u6f38\u5316\u5f0f\u306e\u5b9f\u88c5\u306fAtCoder\u3067\u73cd\u3057\u3044\u3002\u30d1\u30bf\u30fc\u30f3\u3068\u3057\u3066\u899a\u3048\u3088\uff01\ndef attack_num(x):\n  if x == 1: return 1\n  else: return 2*attack_num(x // 2) + 1\n  \nprint(attack_num(H))", "import math\nH = int(input())\nl = math.log(H,2)\nll = math.floor(l)+1\nans = 2 ** ll -1\nprint(ans)", "import math\n\nh = int(input())\natk = 0\nenemy = 1\n\nwhile True:\n    if h > 1:\n        h = math.floor(int(h/2))\n        atk += enemy\n        enemy *= 2\n    elif h == 1:\n        atk += enemy\n        break\n\nprint(atk)\n", "import math\nh=int(input())\nprint((2**(math.floor(math.log2(h))+1)-1))\n", "h = int(input())\nsumn = 0\ni,k = 0,1\nwhile k <= h:\n    sumn+=k\n    i+=1\n    k = 2**i\n    \nprint(sumn)", "def myfunc(N):\n\tif(N  <= 1):\n\t\treturn 1\n\treturn 2 * myfunc(int(N/2)) + 1\n\ndef __starting_point():\n\tN = int(input())\n\tprint(myfunc(N))\n__starting_point()", "H = int(input())\ncount = 0\nwhile H != 1:\n    H //= 2\n    count += 1\nans = 0\nfor i in range(count +1):\n    ans += 2 ** i\nprint(ans)\n", "import math\n\nh = int(input())\nprint(2 ** (math.floor(math.log2(h)) + 1) - 1)", "h=int(input())\ndef fh(x):\n    if x==1:\n        return 1\n    else:\n        return 2*fh(x//2)+1\nans=fh(h)\nprint(ans)", "# 26\nH = int(input())\n\ndef getAns(x):\n    if x <= 1: return 1\n    return 2 * getAns(x // 2) + 1\n\nans = getAns(H)\n\nprint(ans)", "H = int(input())\nc = 1\nans = 1\nwhile H>1:\n  H //= 2\n  c *= 2\n  ans += c\nprint(ans)", "def divi(n):\n  if n > 1:\n    return 2*divi(n//2) + 1\n  else:\n    return 1\nh = int(input())\nprint(divi(h))", "h = int(input())\n\ndef wa(n):\n    w = 0\n    for i in range(0,n+1):\n        w += 2**i\n    return w\n\nn = 1\ncnt = -1\nwhile n<=h:\n    n = n*2\n    cnt += 1\nprint(wa(cnt))", "H = int(input())\n \n# \u4f53\u529b\u304cH\u306e\u30e2\u30f3\u30b9\u30bf\u30fc1\u4f53\u306b\u52dd\u3064\u305f\u3081\u306b\u5fc5\u8981\u306a\u653b\u6483\u56de\u6570\u3092f(H)\u3068\u3059\u308b\n# \u3059\u308b\u3068\u3001f(H)\u306f\u4ee5\u4e0b\u306e\u6f38\u5316\u5f0f\u306b\u5f93\u3063\u3066\u6c42\u307e\u308b\n# f(H)=2*f(floor(H/2)+1) (H>1)\n# f(H)=1 (H=1)\n\ndef attack_num(x):\n  if x == 1: return 1\n  else: return 2*attack_num(x // 2) + 1\n  \nprint(attack_num(H))", "h = int(input())\n\nfor i in range(10**12):\n  if 2**i <= h < 2**(i+1):\n    ans = 2**(i+1)-1\n    print(ans)\n    return", "H = int(input())\ncount = 1\nans = 0\n\nwhile H>0:\n    H = int(H//2)\n    ans += count\n    count *= 2\n    \nprint(ans)", "h = int(input())\nc=0\nd=0\nwhile h>1:\n    h=h//2\n    c+=1\n    d+=2**c\nprint(d+1)", "def mons(hp, attack=1):\n    if hp == 1:\n        return attack*2-1\n    else:\n        return mons(hp//2, attack*2)\n\n\nprint((mons(int(input()))))\n", "#!/usr/bin/env python3\ndef main():\n    H = int(input())\n\n    res = 1\n    ans = 1\n    while H > 1:\n        res *= 2\n        ans += res\n        H //= 2\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import bisect\nimport numpy\n\n\nH = int(input())\n\nans = 1\nHP = 2\ntmp = 1\nwhile True:\n    if H < HP:\n        break\n    else:\n        tmp *= 2\n        ans += tmp\n        HP *= 2\n\n\nprint(ans)\n\n", "import math\n\nh = int(input())\ncount = 0\ne = 0\nwhile h>0:\n    count += 1*2**e\n    e += 1\n    if h == 1:\n        h =0\n    else:\n        h = int(math.floor(h/2))\nprint(count)", "n = int(input())\ncnt = 0\nwhile n != 1:\n    n = n // 2\n    cnt += 1\nans = 1\nfor i in range(1, cnt+1):\n    ans = ans + (2**i)\nprint(ans)", "H = int(input())\n\ni =0\ntemp = 0 \nwhile True:\n  if 2**(i)<=H and H<2**(i+1):\n    temp = 2**(i)\n    break\n  i+=1\nprint (temp*2-1)", "import math\n\nH = int(input())\nans = 0\nnum = 0\n\nwhile True:\n    ans += 2**num   \n    if H == 1:\n        print(ans)\n        break\n    else:\n        H = math.floor(H/2)\n        num += 1", "h = int(input())\nans = 0\nn = 1\nwhile h!=0:\n    ans += n \n    n *= 2\n    h = h//2\nprint(ans)", "H=int(input())\ncnt=0\nwhile H>1:\n    H=H//2\n    cnt+=1\nans=2**(cnt+1)-1\nprint(ans)", "H = int(input())\nnum = 1\nsum = 0\nwhile H != 0:\n    H = H//2\n    sum += num\n    num *= 2\nprint(sum)", "n=int(input())\ncnt=0\ni=0\nans = 0\nwhile n!=1:\n  n//=2\n  i+=1\n  #print(n)\n  #print(i)\n\nans = 2**(i+1)-1\n  \n\n\nprint(ans)\n  \n  \n", "H = int(input())\nattackcnt = 0\nmonstercnt = 1\ndef monster(h, m, a):\n    if h == 1:\n        return 0,0,a+m\n    else:\n        return monster(int((h/2)),2*m,a+m)\na, b, c = monster(H,monstercnt,attackcnt)\nprint(c)", "import sys\n\nH = int(input())\ni = 0\nn = 0\nwhile True:\n    if 2**i > H:\n        break\n    n += 2**i\n    i += 1\n\nprint(n)\n", "h = int(input())\n\ncnt = 0\nwhile h != 1:\n    h //= 2\n    cnt += 1\nt = 1\nans = 0\nfor i in range(cnt+1):\n    ans += t\n    t *= 2\nprint(ans)", "N=int(input())\nimport math\n\nprint(2*2**int(math.log2(N))-1)", "H = int(input())\n\ncount = 0\npow = 1\n\nfor _ in range(H):\n    if H < pow:\n        break\n    count += 1\n    pow *= 2\n\nprint((2**count-1))\n", "h = int(input())\ncount = 0\nfor i in range(40):\n    count += 2**i\n    if h >= 2 ** i and h < 2 ** (i+1):\n        break\nprint(count)", "H = int(input())\n\ni = 0\nwhile True:\n  if H < 2 ** i:\n    n = i\n    break\n  i += 1\n\nprint((2**n -1))\n", "n = int(input())\ns = 1\nt = 0\nwhile s <= n:\n  s = s*2\n  t += 1\nprint((2**t-1))  \n\n", "h = int(input())\n\ncnt = 0\nnum = 1\nwhile h > 0:\n    cnt += num\n    h = h // 2\n    num *= 2\nprint(cnt)", "H=int(input())\n\nN=0\nwhile True:\n    N+=1\n    if 2**N>H:\n        break\n\na=[1]*N\nfor i in range(N):\n    if i==0:\n        a[i]=1\n    else:\n        a[i]=2*a[i-1]+1\n\nprint(a[-1])", "H = int(input())\nii = 1\nwhile H != 1:\n    ii += 1\n    H = H//2\nprint(2**ii-1)", "import math\nh = int(input())\nx = math.floor(math.log2(h)) + 1\ny = (2 ** x) - 1\nprint(y)", "h = int(input())\nans = 0\ncnt = 1\nwhile True:\n  h = (h / 2) // 1\n  ans += cnt\n  if h == 0:\n    print(ans)\n    return\n  cnt *= 2", "import sys\nimport copy\nimport math\nimport itertools\n\nH = int(input())\ncnt = 0\nfor i in range(int(math.log2(H))+1):\n    cnt+=2**i\nprint(cnt)", "from math import *\nH = int(input())\nprint(2**(int(log2(H))+1)-1)", "from sys import setrecursionlimit\n\nsetrecursionlimit(1000000)\n\nH = int(input())\n\n\ndef f(n):\n    if n == 1:\n        return 1\n    else:\n        return 1 + f(n // 2) * 2\n\n\nprint(f(H))", "# -*- coding:utf-8 -*-\nH = int(input())\n\nn = 0\nans = 0\nwhile True:\n    if 2**n > H:\n        break\n    else:\n        ans += 2**n\n        n+=1\n\nprint(ans)", "import math\n\nh = int(input())\nn = math.floor(math.log2(h)) + 1\n\nprint(2 ** n - 1)", "print(2**int(input()).bit_length()-1)", "#!/usr/bin/env python3\ndef main():\n    def solve(n):\n        if n == 1:\n            return 1\n        return solve(n // 2) * 2 + 1\n\n    H = int(input())\n\n    print((solve(H)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H = int(input())\n\n\ndef attack(n):\n    if 1 == n:\n        return 1\n    return 2 * attack(int(n/2)) + 1\n\n\nprint((attack(H)))\n", "H = int(input())\nA = 0\nans = 0\nfor i in range(H):\n    if 2**i <= H < 2**(i+1):\n        A = 2**i\n        break\n    else:\n        continue\n\nfor j in range(i+1):\n    ans += 2**j\n\nprint(ans)\n", "h = int(input())\ncount = 0\nans = 0\n\nwhile h > 0:\n    h //= 2\n    count += 1\n\nfor i in range(count):\n    ans = ans*2 + 1\n\nprint(ans)", "H = int(input())\ncnt = 0\nwhile(H>0) : # ~ 40\n    H = H // 2\n    cnt += 1\nprint(2**cnt - 1)", "H = int(input())\n\ndef battle(h):\n  if h == 1:\n    return 1\n  else:\n    return 2*battle(h//2)+1\nprint((battle(H)))\n\n", "from math import log\nh = int(input())\nk = int(log(h,2))+1\nprint((2**k-1))\n", "H = int(input())\ni = 1\nwhile H>1:\n  H = H//2\n  i += 1\nprint(2**i-1)", "H = int(input())\n\ncnt = 0\nnum = 1\nwhile H >= 1:\n    H = H//2\n    cnt += num\n    num = num*2\n\nprint(cnt)", "import math\nh = int(input())\nhp = h\nc = 0\nans = 0\n\nwhile hp > 1:\n    hp = math.floor(hp/2)\n    c += 1\nfor i in range(0,c+1):\n    ans += 2 ** i\nprint(ans)", "H=int(input())\ncnt=0\nwhile H>1:\n\tH=H//2\n\tcnt+=1\nprint(2**(cnt+1)-1)", "hp = int(input())\nn = 0\n\nwhile hp:\n    hp //= 2\n    n += 1\n\nprint(2**n-1)", "h = int(input())\nres = 1\nc = 1\nwhile h > 1:\n  c *= 2\n  res +=  c\n  h //= 2\nprint(res)", "h = int(input())\nfor i in range(100):\n    if 2**i > h:\n        print(2**i - 1)\n        return", "from sys import stdin\nimport math\n\nh = int(stdin.readline())\nsplit_times = math.ceil(math.log2(h+1))\nsum_times = sum([2**i for i in range(split_times)])\nprint(sum_times)", "h = int(input())\n\ndef cal(x):\n  if x == 1: return 1\n  return cal(x//2)*2+1\n\nprint(cal(h))", "def mons(hp):\n    if hp == 1:\n        return 1\n    else:\n        return mons(hp//2)*2 + 1\n\nprint((mons(int(input()))))\n", "H = int(input())\nfor i in range(0, 40):\n  if 2**i <= H < 2**(i+1):\n    H = 2 ** i\n    break\nans = 0\nfor k in range(0, i+1):\n  ans += 2**k\nprint(ans)", "H = int(input())\n\nans = 1\nif H != 1:\n    h = H\n    for i in range(1, 40):\n        if int(h/2) >= 2:\n#            print(i, ans, h, 'a')\n            ans += 2**i\n            h = int(h/2)\n        else:\n#            print(i, ans, h, 'b')\n            ans += 2**i\n            break\n\nprint(ans)", "h = int(input())\ncount = 0\nwhile True:\n  h = h//2\n  if h == 0:\n    break\n  count += 1\nprint(2**count+int(2**(count)-1))", "def f(h):\n\tif h != 1:\n\t\treturn f(h // 2) * 2 + 1\n\telse:\n\t\treturn 1\n\nh = int(input())\nprint((f(h)))\n", "H=int(input())\nm=1\nwhile (m<=H):\n    m*=2\nprint(m-1)", "import numpy as np\nH=int(input())\nc=0\nwhile H!=0:\n  c+=1\n  H=H//2\n\nprint(2**c-1)", "h = int(input())\nc=0\nwhile h>0:\n    h=h//2\n    c+=1\nprint(2**c-1)", "H=int(input())\nb=0\nwhile 2**b <= H:\n    b+=1\nprint((2**(b)-1))\n", "#!/usr/bin/env python3\n\n\ndef solve(H: int):\n    n = 1\n    attack = 0\n    while H > 1:\n        attack += n\n        H = H // 2\n        n *= 2\n    attack += n\n    return attack\n\n\ndef main():\n    H = int(input())\n    answer = solve(H)\n    print(answer)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "H = int(input())\nans = 1\nwhile H:\n    H //= 2\n    ans *= 2\nprint(ans-1)", "#-*-coding:utf-8-*-\nimport sys\ninput=sys.stdin.readline\n\ndef main():\n    enemy_hp = int(input())\n    enemy_count=1\n    attack_count=1\n\n    if enemy_hp==1:\n        print(1)\n        return\n    else:\n        while enemy_hp >1:\n            enemy_hp = int(enemy_hp/2)\n            enemy_count*=2\n            attack_count+=enemy_count\n            \n    print(attack_count)\n\ndef __starting_point():\n    main()\n__starting_point()", "h=int(input())\nans=0\nfor i in range(10**10):\n  if h==1:\n    print(2**(ans+1)-1)\n    break\n  else:\n    h//=2\n    ans+=1", "# coding: utf-8\n\ndef main():\n    N = 0\n    H = int(input())\n    ans = 0\n\n    while (True):\n        H //= 2\n        if H == 0:\n            break\n        N += 1\n\n    for i in range(N + 1):\n        ans += pow(2, i)\n\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\nH = int(input())\n\nn = math.floor(math.log2(H))\n\nans = 0\nfor i in range(0, n+1):\n    ans += 2**i\nprint(ans)", "H = int(input())\nc = 0\nans = 0\nwhile H > 1:\n    H //= 2\n    ans += 2**c\n    c += 1\nans += 2**c\nprint(ans)", "\ndef main():\n    h = int(input())\n    cnt = 0\n    while(h>0):\n        h //= 2\n        cnt += 1\n    x = 0\n    for i in range(cnt):\n        x = x * 2 +1\n    print(x)\n    \n\n\ndef __starting_point():\n    main()\n__starting_point()", "h = int(input())\ncount = 1\n\nwhile(h > 1):\n  count += 1\n  h = int(h/2)\n\nprint(2**count - 1)", "import math\n\nh = int(input())\nl = int(math.log(h, 2))\np = (2**l)*2-1\nprint(p)\n", "H=int(input())\ns=1 #s\u306f\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u6570\nt=0\nwhile H>1:\n    H=H//2\n    s=s*2\n    t=t+1\n\nlist=[]\nu=1\nwhile u<=t:\n    list.append(u)\n    u=u+1\n\nz=0\nfor i in list:\n    z=z+2**(i-1)\n\nprint(str(z+s))", "H = int(input())\n \n# \u4f53\u529b\u304cH\u306e\u30e2\u30f3\u30b9\u30bf\u30fc1\u4f53\u306b\u52dd\u3064\u305f\u3081\u306b\u5fc5\u8981\u306a\u653b\u6483\u56de\u6570\u3092f(H)\u3068\u3059\u308b\n# \u3059\u308b\u3068\u3001f(H)\u306f\u4ee5\u4e0b\u306e\u6f38\u5316\u5f0f\u306b\u5f93\u3063\u3066\u6c42\u307e\u308b\n# f(H)=2*f(floor(H/2)+1) (H>1)\n# f(H)=1 (H=1)\n \ndef attack_num(x):\n  if x == 1: return 1\n  else: return 2*attack_num(x // 2) + 1\n  \nprint(attack_num(H))", "H = int(input())\nfor i in range(0, 10**20 + 1):\n  if 2**i <= H < 2 ** (i + 1):\n    break\nprint(2 ** (i + 1) - 1)", "h = int(input())\n\ncnt = 0\nans = 0\n\nwhile h > 1:\n    h = h//2\n    cnt += 1\n    ans += 2**cnt\n\nprint(ans+1)", "n = int(input())\nans = 1\nwhile ans <= n:\n  ans *= 2\nprint(ans -1)", "import sys\nsys.setrecursionlimit(1000000)\ndef rec(n):\n    if n == 1: \n        return 1\n    return rec(n//2)*2+1\n\nn = int(input())\nprint(rec(n))", "def check(n):\n  if n>1:\n    return 2*(check(n//2))+1\n  else:\n    return 1\nprint(check(int(input())))", "H = int(input())\n\nif H == 1:\n  print((1))\n  return\n\nimport math as m\nn = m.floor(m.log2(H))+1\nans = (2**n) - 1\n\nprint(ans)\n\n", "H = int(input())\ncount = 0\nwhile H != 1:\n  count += 1\n  H = H >> 1\nprint(2 * 2**count - 1)", "h = int(input())\nans = 0\ne = 1\nwhile h > 0:\n    ans += e \n    e *= 2\n    h = h//2\nprint(ans)", "# D\nH = int(input())\ncnt = 1\nans = 0\n\nwhile True:\n    if 2**cnt > H:\n        cnt -= 1\n        break\n    elif 2**cnt == H:\n        break\n    else:\n        cnt += 1\n\nfor c in range(cnt+1):\n    ans += 2**c\nprint(ans)\n", "import math\nh = int(input())\nl = 1\n\nwhile (h != 1):\n    h = math.floor(h / 2)\n    l += 1\nans = 0\n\nfor i in range(l):\n    ans += 2**i\nprint(ans)", "import math\nh = int(input())\na,ans = 0,0\nwhile h > 1:\n  h = math.floor(h/2)\n  a += 1\nfor i in range(a+1):\n  ans += 2**i\nprint(ans)"]