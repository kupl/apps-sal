["R = lambda: map(int, input().split())\nn = int(input())\ndp = [0] * (10**6 + 1)\nfor x in R():\n    dp[x] = 1\nfor i in range(10**6, -1, -1):\n    if dp[i]:\n        for x in range(i + i, 10**6 + 1, i):\n            if dp[x]:\n                dp[i] = max(dp[i], dp[x] + 1)\nprint(max(dp))", "n = int(input())\na = [int(v) for v in input().split()]\nMAX = 10**6 + 1\nL = [0] * MAX\nfor v in a:\n    L[v] = 1\n    \nfor i in range(n):\n    if L[a[i]]:\n        for x in range(a[i] * 2, MAX, a[i]):\n            if L[x]:\n                L[x] = max(L[x], L[a[i]] + 1)\nprint(max(L))", "def clique_in_the_divisibility_graph(n, a):\n    MAX = 10 ** 6 + 1\n    L = [0] * MAX\n    for v in a:\n        L[v] = 1\n\n    for i in range(n):\n        if L[a[i]]:\n            for x in range(a[i] * 2, MAX, a[i]):\n                if L[x]:\n                    L[x] = max(L[x], L[a[i]] + 1)\n    return max(L)\n\n\ndef __starting_point():\n    n = int(input())\n    a = list(map(int, input().split()))\n    result = clique_in_the_divisibility_graph(n, a)\n    print(result)\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nMAX = 10**6+1\nL = [0]*MAX\nfor x in a:\n    L[x] = 1\n\nfor i in range(n):\n    if L[a[i]]:\n        for x in range(a[i]*2, MAX, a[i]):\n            if L[x]:\n                L[x] = max(L[x], L[a[i]]+1)\nprint(max(L))", "N = int(input())\nList = [int(x) for x in input().split()]\nMAX = 1000001\ndp = [0] * MAX\nfor i in List:\n    dp[i] += 1\nfor i in range(N):\n    if(dp[List[i]]):\n        for j in range(List[i]*2,MAX, List[i]):\n            if(dp[j]):\n                dp[j] = max(dp[j], dp[List[i]]+1)\nprint(max(dp))", "n = int(input()) \nbase = list(map(int, input().split())) \nstock = [0 for k in range(int(1e6+1))]\nfor zbi in base : \n    stock[zbi] = 1 \nt = base[-1] \nfor k in range(2,n+1) : \n    num = base[n-k]\n    for i in range(2, (t//num)+1) : \n        if stock[i*num] >= 1  : \n            stock[num] = max(stock[num], 1 + stock[i*num] )\nprint(max(stock))"]