["X=[]\nY=[]\nPoints=[]\nk=False\nfor i in range(8):\n    x,y=list(map(int,input().split()))\n    X.append(x)\n    Y.append(y)\n    if([x,y] in Points):\n        k=True\n    Points.append([x,y])\nX.sort()\nY.sort()\n\nif(len(set(X))!=3 or len(set(Y))!=3 or k):\n    print(\"ugly\")\n\nelif(X.count(X[0])!=3 or X.count(X[3])!=2 or X.count(X[5])!=3):\n    print(\"ugly\")\n\nelif(Y.count(Y[0])!=3 or Y.count(Y[3])!=2 or Y.count(Y[5])!=3):\n    print(\"ugly\")\n\nelif([X[3],Y[3]] in Points):\n    print(\"ugly\")\n\nelse:\n    print(\"respectable\")\n", "#f = open('data.txt')\nlists=[]\ndicts={}\nsets = set()\n\nfor i in range(8):\n    lists.append(tuple(input().split()))\n'''for x in f:\n    lists.append(tuple(x.split()))'''\nfor x in lists:\n    sets.add(x)\n    \nif len(sets) == 8:\n    for x in range(8):\n        count = dicts.get(int(lists[x][0]),0)\n        dicts[int(lists[x][0])] = count+1\n\n    if len(list(dicts.keys()))==3:\n        temp = sorted(dicts.items())\n        if temp[0][1]==3 and temp[1][1] == 2 and temp[2][1] ==3:\n            dicts.clear()\n            for x in range(8):\n                count = dicts.get(int(lists[x][1]),0)\n                dicts[int(lists[x][1])] = count+1\n            if len(list(dicts.keys()))==3:\n                temp = sorted(dicts.items())\n                if temp[0][1]==3 and temp[1][1] == 2 and temp[2][1] ==3:\n                    print('respectable')\n                else:\n                    print('ugly')\n            else:\n                print('ugly')\n        else:\n            print('ugly')\n\n    else:\n        print('ugly')\nelse:\n    print('ugly')\n", "X = dict()\nY = dict()\nA = set()\n\nfor i in range(8):\n    x, y = list(map(int, input().split()))\n\n    if (x, y) in A:\n        print('ugly')\n        return\n    else:\n        A.add((x, y))\n    \n    if x in X:\n        X[x] += 1\n    else:\n        X[x] = 1\n\n    if y in Y:\n        Y[y] += 1\n    else:\n        Y[y] = 1\n\nX = [(i, X[i]) for i in X]\nY = [(i, Y[i]) for i in Y]\nX.sort()\nY.sort()\n\nif len(X) == 3 and len(Y) == 3 and X[0][1] == 3 and X[1][1] == 2 and X[2][1] == 3 and Y[0][1] == 3 and Y[1][1] == 2 and Y[2][1] == 3:\n    print('respectable')\nelse:\n    print('ugly')\n", "#input = open('input.txt', 'r')\n#output = open('output.txt', 'w')\n\nxx = set()\nyy = set()\nl = set()\nfor i in range(8):\n    a = list(map(int, input().split()))\n    x, y = a[0], a[1]\n    l.add((x, y))\n    xx.add(x)\n    yy.add(y)\n\nok = 1\nif (len(xx) != 3) or (len(yy) != 3) or (len(l) != 8): ok = 0\nelse:\n    ax = list(xx)\n    ay = list(yy)\n    ax.sort()\n    ay.sort()\n    if (ax[1], ay[1]) in l: ok = 0\n\n\nif ok == 1:\n    print('respectable')\nelse:\n    print('ugly')\n    \n#input.close()\n#output.close()\n", "class Point:\n    def __init__(self, x_p, y_p):\n        self.x = x_p\n        self.y = y_p\n        \n\npoints = []\nsub_x = []\nsub_y = []\nkey = False\nfor i in range(8):\n    x, y = list(map(int, input().split()))\n    if ([x, y] in points):\n        key = True\n    if x not in sub_x:\n        sub_x.append(x)\n    if y not in sub_y:\n        sub_y.append(y)\n    points.append([x, y])\nsub_x.sort()\nsub_y.sort()\nif (key):\n    print('ugly')\nelse:\n    if (len(sub_x) == 3) and (len(sub_y) == 3):\n        if ([sub_x[1], sub_y[1]] in points):\n            print('ugly')\n        else:\n            print('respectable')\n    else:\n        print('ugly')\n", "from collections import namedtuple\n\nPoint = namedtuple('Point', ['x', 'y'])\nanswers = ['respectable', 'ugly']\n\nps = []\n\nfor _ in range(8):\n    x, y = input().split(' ')\n    ps.append(Point(int(x), int(y)))\n\nps.sort()\n\ndef parallelline(lA, lB):\n    pAA, pAB, pAC = lA\n    pBA, pBB, pBC = lB\n    if pAA.x == pAB.x and pAA.x == pAC.x:\n        if pBA.x == pBB.x and pBA.x == pBC.x:\n            if pAA.y == pBA.y and pAB.y == pBB.y and pAC.y == pBC.y:\n                if pAA.y != pAB.y and pAA.y != pAC.y:\n                   return True\n    if pAA.y == pAB.y and pAA.y == pAC.y:\n        if pBA.y == pBB.y and pBA.y == pBC.y:\n            if pAA.x == pBA.x and pAB.x == pBB.x and pAC.x == pBC.x:\n                if pAA.x != pAB.x and pAA.x != pAC.x:\n                     return True\n    return False\n\nif parallelline((ps[0], ps[1], ps[2]), (ps[5], ps[6], ps[7])) and parallelline((ps[0], ps[3], ps[5]), (ps[2], ps[4], ps[7])):\n    print(answers[0])\nelse:\n    print(answers[1])\n", "u=set()\nv=set()\nw=set()\ns=set()\ndef work():\n    nonlocal u,v\n    if len(u)<3 or len(v)<3:\n        return(0)\n    u = sorted(list(u))\n    v = sorted(list(v))\n    for i in range(3):\n        for j in range(3):\n            if i!=1 or j!=1:\n                w.add((u[i],v[j]))\n    return(w == s)\n\nfor i in range(8):\n    x,y = list(map(int,input().split()))\n    s.add((x,y))\n    u.add(x)\n    v.add(y)\n    \nif work():\n    print(\"respectable\")\nelse:\n    print(\"ugly\")\n", "inp_arr = [tuple(map(int, input().split())) for i in range(8)]\nx_set = set()\ny_set = set()\nfor x, y in inp_arr:\n    x_set.add(x)\n    y_set.add(y)\n\nif len(x_set) == len(y_set) == 3:\n    ugly = False\n    x_sort, y_sort = sorted(x_set), sorted(y_set)\n    for x in x_sort:\n        for y in y_sort:\n            if (x, y) != (x_sort[1], y_sort[1]) and (x, y) not in inp_arr:\n                ugly = True\nelse:\n    ugly = True\nprint(\"ugly\" if ugly else \"respectable\")", "lines = [tuple(map(int,input().split())) for i in range(8)]\nx_set = set()\ny_set = set()\n\nfor x, y in lines:\n    x_set.add(x)\n    y_set.add(y)\n\nif len(x_set) == len(y_set) == 3:\n    flag = False\n    x_sort, y_sort = sorted(x_set), sorted(y_set)\n    for x in x_sort:\n        for y in y_sort:\n            if(x, y) != (x_sort[1], y_sort[1]) and (x, y)not in lines:\n                flag = True\n\nelse:\n    flag = True\n\nprint(\"ugly\" if flag else \"respectable\")\n", "x = []\ny = []\nall = []\nfor i in range(8):\n\txx, yy = map(int, input().split())\n\tx.append(xx)\n\ty.append(yy)\n\tall.append((xx, yy))\nsx = set(x)\nsy = set(y)\nif len(sx) % 3 != 0 or len(sy) % 3 != 0:\n\tprint('ugly')\nelse:\n\tsx = sorted(list(sx))\n\tsy = sorted(list(sy))\n\t# print(sx)\n\t# print(sy)\n\tfor i in range(3):\n\t\tfor j in range(3):\n\t\t\tif i == 1 and j == 1:\n\t\t\t\tcontinue\n\t\t\tif not (sx[i], sy[j]) in all:\n\t\t\t\tprint('ugly')\n\t\t\t\treturn\n\tprint('respectable')", "v = []\nfor i in range(0, 8):\n    x, y = list(map(int, input().split()))\n    v.append((x, y))\n\nv.sort()\nif v[0][0] == v[1][0] == v[2][0] and v[3][0] == v[4][0] and v[5][0] == v[6][0] == v[7][0] and v[0][1] == v[3][1] == v[5][1] and v[1][1] == v[6][1] and v[2][1] == v[4][1] == v[7][1] and v[0][0] != v[3][0] != v[7][0] and v[0][1] != v[1][1] != v[2][1]: print('respectable')\nelse: print('ugly')\n", "\ndef check():\n    l = []\n    for i in range(8):\n        x, y = list(map(int, input().split()))\n        l += [[x, y]]\n\n    xSet = set()\n    ySet = set()\n    for x, y in l:\n        xSet.add(x)\n        ySet.add(y)\n\n    if len(xSet) != 3 or len(ySet) != 3:\n        return False\n\n    xList = sorted(list(xSet))\n    yList = sorted(list(ySet))\n\n    z = []\n    for x in xList:\n        for y in yList:\n            if x == xList[1] and y == yList[1]:\n                pass\n            else:\n                z += [[x, y]]\n\n    z.sort()\n    l.sort()\n    return z == l\n\n\nif check():\n    print(\"respectable\")\nelse:\n    print(\"ugly\")\n", "x, y = [0] * 8, [0] * 8\nfor i in range(8): x[i], y[i] = map(int, input().split())\nfor i in range(8):\n    for j in range(i):\n        if x[i] == x[j] and y[i] == y[j]:\n            print(\"ugly\")\n            break\n    else:\n        continue\n    break\nelse:        \n    x.sort()\n    y.sort()\n    if (x[0] == x[1] == x[2] and x[3] == x[4] and x[5] == x[6] == x[7] and\n        y[0] == y[1] == y[2] and y[3] == y[4] and y[5] == y[6] == y[7] and\n        x[2] != x[3] and x[4] != x[5] and y[2] != x[3] and y[4] != x[5]):\n        print(\"respectable\")\n    else: print(\"ugly\")", "l = [[int(c) for c in input().split()] for i in range(8)]\nxs = sorted(set([p[0] for p in l]))\nys = sorted(set([p[1] for p in l]))\nif len(xs) != 3 or len(ys) != 3:\n    print(\"ugly\")\nelse:\n    done = False\n    for x in range(3):\n        for y in range(3):\n            if x == y == 1: continue\n            if [xs[x],ys[y]] not in l:\n                print(\"ugly\")\n                done = True\n                break\n        if done: break\n    if not done:\n        print(\"respectable\")", "v = []\n\nfor i in range(0,8):\n    x, y  = list(map(int, input().split()))\n    v.append((x,y))\n\nv.sort()\n\nif v[0][0] == v[1][0] == v[2][0] \\\n    and v[3][0] == v[4][0] \\\n    and v[5][0] == v[6][0] == v[7][0] \\\n    and v[0][1] == v[3][1] == v[5][1] \\\n    and v[1][1] == v[6][1] \\\n    and v[2][1] == v[4][1] == v[7][1] \\\n    and v[0][0] != v[3][0] != v[7][0] \\\n    and v[0][1] != v[1][1] != v[2][1]: \n        print(\"respectable\")\nelse : \n    print(\"ugly\")\n\n\n\n\n", "l = []\nfor i in range(8):\n    x, y = [int(x) for x in input().split()]\n    l.append( (x,y) )\n\nl.sort()\nlx = []\nlx.append( l[0][0] )\nlx.append( l[3][0] )\nlx.append( l[6][0] )\nly = []\nly.append( l[0][1] )\nly.append( l[1][1] )\nly.append( l[2][1] )\n\neps = [(x, y) for x in lx for y in ly]\neps.pop( 4 )\n\nif( l==eps and lx[0]!=lx[1] and lx[0]!=lx[2] and lx[1]!=lx[2]\n\tand ly[0]!=ly[1] and ly[0]!=ly[2] and ly[1]!=ly[2]):\n    print(\"respectable\")\nelse:\n    print(\"ugly\")\n", "def solve():\n    S = set()\n    x = [-1] * 3\n    y = [-1] * 3\n    xc = [0] * 3\n    yc = [0] * 3\n    i = 0\n    for i in range(8):\n        xi, yi = list(map(int, input().split()))\n        if str([xi, yi]) in S:\n            return 0\n        S.add(str([xi, yi]))\n        j = 0\n        while j < 3:\n            if x[j] == -1:\n                x[j] = xi\n                xc[j] += 1\n                break\n            elif x[j] == xi:\n                xc[j] += 1\n                break\n            j += 1\n        if j == 3:\n            return 0\n        j = 0\n        while j < 3:\n            if y[j] == -1:\n                y[j] = yi\n                yc[j] += 1\n                break\n            elif y[j] == yi:\n                yc[j] += 1\n                break\n            j += 1\n        if j == 3:\n            return 0\n    i = 0\n    while i < 3:\n        if xc[i] == 2:\n            x[i], x[1] = x[1], x[i]\n            xc[i], xc[1] = xc[1], xc[i]\n            break\n        i += 1\n    if i == 3:\n        return 0\n    if xc[0] != 3 or xc[2] != 3:\n        return 0\n    if x[0] > x[2]:\n        x[0], x[2] = x[2], x[0]\n    if x[0] > x[1] or x[1] > x[2]:\n        return 0\n    i = 0\n    while i < 3:\n        if yc[i] == 2:\n            y[i], y[1] = y[1], y[i]\n            yc[i], yc[1] = yc[1], yc[i]\n            break\n        i += 1\n    if i == 3:\n        return 0\n    if yc[0] != 3 or yc[2] != 3:\n        return 0\n    if y[0] > y[2]:\n        y[0], y[2] = y[2], y[0]\n    if y[0] > y[1] or y[1] > y[2]:\n        return 0\n    return 1\n\nif solve() == 1:\n    print('respectable')\nelse:\n    print('ugly')\n", "l = []\nfor i in range(8):\n    x, y = list(map(int, input().split()))\n    l.append( (x, y) )\n\nl.sort()\nlx = []\nlx.append( l[0][0] )\nlx.append( l[3][0] )\nlx.append( l[5][0] )\nly = []\nly.append( l[0][1] )\nly.append( l[1][1] )\nly.append( l[2][1] )\n\neps = [(x, y) for x in lx for y in ly]\neps.pop( 4 )\n\nif l == eps and lx[0] != lx[1] and lx[0] != lx[2] and lx[1] != lx[2] and \\\n        ly[0] != ly[1] and ly[0] != ly[2] and ly[1] != ly[2]:\n    print('respectable')\nelse:\n    print('ugly')\n", "pairs = []\nfor i in range (8):\n  tmp = list (map (int, input().split()))\n  pairs.append (tmp)\npairs.sort ()\n\ndef judge ():\n  return (pairs[0][0] < pairs[3][0] < pairs[5][0] and\n          pairs[0][1] < pairs[1][1] < pairs[2][1] and\n          pairs[0][0] == pairs[1][0] == pairs[2][0] and\n          pairs[3][0] == pairs[4][0] and\n          pairs[5][0] == pairs[6][0] == pairs[7][0] and\n          pairs[0][1] == pairs[5][1] and\n          pairs[1][1] == pairs[6][1] and\n          pairs[2][1] == pairs[7][1] and\n          pairs[0][1] == pairs[3][1] and\n          pairs[2][1] == pairs[4][1])\n\nif judge ():\n  print ('respectable')\nelse:\n  print ('ugly')\n", "x=[None]*10\ny=[None]*10\nt=[]\nxc=[]\nyc=[]\nf=False\nfor i in range(8):\n    x[i],y[i]=list(map(int,input().split()))\n    if (x[i],y[i])in t: f=True\n    t.append((x[i],y[i]))\n    if not(x[i]  in xc): xc.append(x[i])\n    if y[i] not in yc:yc.append(y[i])\n            \n\n\nif (len(xc)!=3)or(len(yc)!=3)or f: print('ugly')\nelse:\n             yc.sort()\n             xc.sort()\n             if (xc[1],yc[1])in t:print('ugly')\n             else: print('respectable')\n", "def main(temp):\n\tnums = []\n\tfor item in temp:\n\t\tif item not in nums:\n\t\t\tnums.append(item)\n\t\telse:\n\t\t\treturn 'ugly'\n\tXs = [item[0] for item in nums]\n\tYs = [item[1] for item in nums]\n\tXset = list(set(Xs))\n\tYset = list(set(Ys))\n\n\tif len(Xset)!=3 or len(Yset)!=3:\n\t\treturn 'ugly'\n\n\tXset.sort()\n\tYset.sort()\n\n\ta,b,c = Xs.count(Xset[0]), Xs.count(Xset[1]), Xs.count(Xset[2])\n\tq,w,e = Ys.count(Yset[0]), Ys.count(Yset[1]), Ys.count(Yset[2])\n\n\tif a==c==q==e==3 and b==w==2:\n\t\treturn 'respectable'\n\telse:\n\t\treturn 'ugly'\n\ndef init():\n\tnums = []\n\tfor i in range(8):\n\t\tnums.append(list(map(int, input().split())))\n\n\tprint(main(nums))\n\ninit()", "t = [tuple(map(int, input().split())) for i in range(8)]\nt.sort()\ns = t[0][0] < t[3][0] < t[5][0] and t[0][1] < t[1][1] < t[2][1] and t[0][0] == t[1][0] == t[2][0] and t[3][0] == t[4][0] and t[5][0] == t[6][0] == t[7][0] and t[0][1] == t[3][1] == t[5][1] and t[1][1] == t[6][1] and t[2][1] == t[4][1] == t[7][1]\nprint(['ugly','respectable'][s]) \n", "ar = [tuple(map(int, input().split(' '))) for i in range(8)]\nar.sort()\nprint('respectable' if ar[0][0]==ar[1][0]==ar[2][0] and ar[3][0]==ar[4][0] and ar[5][0]==ar[6][0]==ar[7][0] and ar[0][1]==ar[3][1]==ar[5][1] and ar[1][1]==ar[6][1] and ar[2][1]==ar[4][1]==ar[7][1] and ar[0][0]<ar[3][0]<ar[5][0] and ar[0][1]<ar[1][1]<ar[2][1] else 'ugly')\n", "d = [{}, {}]\nt = []\n\nfor i in range(8):\n    x, y = [int(x) for x in input().split()]\n    if [x, y] in t:\n        print(\"ugly\")\n        return\n    t.append([x, y])\n    if x not in d[0]:\n        d[0][x] = 1\n    else:\n        d[0][x] += 1\n    if y not in d[1]:\n        d[1][y] = 1\n    else:\n        d[1][y] += 1\n\nif (len(d[0]) == 3) and (len(d[1]) == 3):\n    a, b = [], []\n    for k in sorted(d[0]):\n        a.append(d[0][k])\n    for k in sorted(d[1]):\n        b.append(d[1][k])\n    if (a == [3, 2, 3]) and (b == [3, 2, 3]):\n        print(\"respectable\")\n    else:\n        print(\"ugly\")\nelse:\n    print(\"ugly\")\n"]