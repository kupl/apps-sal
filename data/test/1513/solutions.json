["n,m,k=map(int,input().split())\nb=list(map(int,input().split()))\ndiffs=[]\nfor i in range(n-1):\n    diffs.append(b[i+1]-b[i])\ndiffs.sort()\nprint(k+sum(diffs[:n-k]))", "n, m, k = map(int, input().split())\nb = list(map(int, input().split()))\nc = []\nfor i in range(n-1):\n\tc.append(b[i+1] - b[i] - 1)\nc = list(sorted(c))[::-1]\nprint(b[n-1] - b[0] + 1 - sum(c[:k-1]))", "n,m,k = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\nans = a[n-1]-a[0]+1\nk -= 1\nb = []\nfor i in range(n-1):\n    b.append(a[i+1]-a[i]-1)\nb.sort(reverse = True)\nind = 0\nk = min(k,len(b))\nwhile k:\n    ans -= b[ind]\n    k -= 1\n    ind += 1\nprint(ans)\n", "from sys import setrecursionlimit, stderr\nfrom functools import reduce\nfrom itertools import *\nfrom collections import defaultdict, Counter\nfrom bisect import bisect\n\nsetrecursionlimit(10**7)\n\ndef read():\n  return int(input())\n\ndef reads():\n  return [int(x) for x in input().split()]\n\nn, m, k = reads()\nb = reads()\n\ndf = [b[k+1] - b[k] - 1 for k in range(n-1)]\ndf.sort()\nans = n + sum(df[:n-k])\nprint(ans)", "n, m, k = map(int, input().split())\nA = list(map(int, input().split()))\ngal = A[-1] - A[0]\nh = []\nfor z in range(1, n):\n    h.append(A[z] - A[z - 1])\nprint(gal - sum(sorted(h, reverse=True)[:k-1]) + k)", "n, m, k = map(int, input().split())\nb = list(map(int, input().split()))\ng = [b[i+1] - b[i] - 1 for i in range(n-1)]\ng.sort(reverse=True)\nans = b[n-1] - b[0] + 1\nfor i in range(k-1):\n\tans -= g[i]\nprint(ans)", "ii = lambda: int(input())\nmi = lambda: list(map(int, input().split()))\nli = lambda: list(mi())\n\nn, m, k = mi()\nb = li()\nif k >= n:\n    ans = n\nelse:\n    d = sorted((b[i + 1] - b[i], i) for i in range(n - 1))[::-1]\n    s = {i for x, i in d[:k - 1]}\n    ans = n\n    for i in range(n - 1):\n        if i not in s:\n            ans += b[i + 1] - b[i] - 1\nprint(ans)\n", "n,m,k=map(int,input().split())\nb=[int(i) for i in input().split()]\nif k==1:\n    print(b[-1]-b[0]+1)\nelse:\n    d=[b[i]-b[i-1] for i in range(1,n)]\n    d.sort()\n    d=d[:-k+1]\n    print(sum(d)+k)", "\nn, m, k = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ndiffs = [b[i+1] - b[i] - 1 for i in range(len(b) - 1)]\ndiffs.sort()\n\nprint(n + sum(diffs[:n-k]))\n", "n, m, k = list(map(int, input().split()))\nb = list(map(int, input().split()))\nb_dif = []\nfor i in range(n-1):\n    b_dif.append(b[i+1]-b[i])\nb_dif.sort()\nans = k\nfor i in range(n-k):\n    ans += b_dif[i]\nprint(ans)\n", "n, m, k = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nlis = []\nfor i in range(1,len(b)):\n    lis.append(b[i]-b[i-1]-1)\nlis.sort()\nans = n\nfor i in range(n-k):\n    ans += lis[i]\nprint(ans)\n", "(lambda N,M,K,n:print(N+sum(sorted(n[i+1]-n[i]-1for i in range(N-1))[:N-K])))(*map(int,input().split()),list(map(int,input().split())))", "N,M,K = list(map(int,input().split()))\nB = list(map(int,input().split()))\n\nseq = 1\nintervals = []\nfor a,b in zip(B,B[1:]):\n    if b-a == 1: continue\n    intervals.append(b-a-1)\n    seq += 1\n\nif seq <= K:\n    print(N)\n    return\n\nintervals.sort()\nans = N + sum(intervals[:seq-K])\nprint(ans)\n", "#n = int(input())\n#n,m = map(int,input().split())\n#a = list(map(int,input().split()))\nn,m,k = map(int,input().split())\nb = list(map(int,input().split()))\nl = n\np = n\nc = []\nfor i in range(n-1):\n\tc.append(b[i+1]-b[i]-1)\nc = sorted(c)\nfor i in range(n-k):\n\tl+=c[i]\nprint(l)", "n,m,k=map(int,input().split())\nx=[*map(int,input().split())]\ndiff=[]\nfor i in range(n-1):\n    diff.append([x[i+1]-x[i]-1,i])\ndiff.sort(reverse=True)\n\nori=x[-1]-x[0]+1\nfor i in range(k-1):\n    ori-=diff[i][0]\nprint(ori)", "n,m,k=[int(x) for x in input().split()]\nb=[int(x) for x in input().split()]\ndelt=[]\nfor i in range(1,len(b)):\n    a=b[i]-b[i-1]-1\n    delt.append(a)\ncounter=b[-1]-b[0]+1\ndelt.sort(reverse=True)\nfor item in delt:\n    if k<=1:\n        break\n    counter-=item\n    k-=1\nprint(counter)\n", "import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nn, m, k = mints()\nb = list(mints())\nc = [0]*(n-1)\nfor i in range(1,len(b)):\n\tc[i-1] = b[i]-b[i-1]-1\nc.sort()\nr = n\nfor i in range(n-k):\n\tr += c[i]\nprint(r)", "n, m, k = map(int, input().split())\nA = list(map(int, input().split()))\nF = []\nfor i in range(1, n):\n\tF.append(A[i] - A[i - 1] - 1)\nF.sort()\nsum = 0\nfor i in range(0, n - k):\n\tsum += F[i]\nprint(sum + n)", "3\n\nimport math\nimport sys\n\n\nDEBUG = False\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef solve(N, M, K, B):\n    segs = []\n    for i in range(N - 1):\n        segs.append(B[i + 1] - B[i])\n\n    segs.sort()\n    ntapes = N\n    tapelen = N\n    j = 0\n    while ntapes > K:\n        tapelen += segs[j] - 1\n        ntapes -= 1\n        j += 1\n\n    return tapelen\n\n\ndef main():\n    N, M, K = [int(e) for e in inp().split()]\n    B = [int(e) for e in inp().split()]\n    print(solve(N, M, K, B))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,m,k = list(map(int, input().strip().split()))\n\nb = list(map(int, input().strip().split()))\n\ndiffs = []\n\nfor j in range(len(b)-1):\n    diffs.append(b[j+1] - b[j] - 1)\n\ndiffs.sort()\n\ntape = len(b)\n\nsegmentov = len(b)\nindeks = 0\nwhile segmentov > k:\n    tape += diffs[indeks]\n    indeks += 1\n    segmentov -= 1\n\nprint(tape)\n\n", "n,m,k = list(map(int,input().split()))\nbi = list(map(int,input().split()))\nai = [0] * (n-1)\nfor i in range(n-1):\n    ai[i] = bi[i+1] - bi[i]\nai.sort()\nnum = n - k\nans = k\nfor i in range(num):\n    ans += ai[i]\nprint(ans)\n", "\ndef main():\n    n, m, k = [int(a) for a in input().split()]\n    bis = [int(a) for a in input().split()]\n    total_length = bis[-1] - bis[0]\n    between = []\n    for i in range(len(bis) - 1):\n        between.append(bis[i+1] - bis[i])\n    between.sort(reverse=True)\n    for i in range(k-1):\n        total_length -= between[i]\n    total_length += k\n    print(total_length)\nmain()\n", "def get():\n    return list(map(int,input().split()))\nn,m,k=get()\na=get()\nb=(n-1)*[0]\nfor i in range(1,n):\n    b[i-1]=[a[i]-a[i-1],i]\nd=[0]\nb.sort(reverse=1)\nfor i in range(k-1):\n    s=b.pop(0)\n    d+=[s[1]]\nd+=[n]\nf=0\nfor i in range(1,len(d)):\n    f+=a[d[i]-1]-a[d[i-1]]+1\nprint(f)\n", "import sys\nimport math\ninput = sys.stdin.readline\n\nn,m,k=map(int,input().split())\n\nl=list(map(int,input().split()))\n\ndist=[]\n\nfor i in range(n-1):\n\tdist.append(l[i+1]-l[i])\n\ndist.sort()\n\nans=0\nfor i in range(n-k):\n\tans+=dist[i]\n\nans+=k\n\nprint(ans)", "n,m,k = list(map(int,input().split()));\nb = list(map(int,input().split()));\n\nprint((b[n-1]-b[0]+1 - sum(sorted([b[i]-b[i-1]-1 for i in range(1,n)],reverse=True)[0:k-1])));\n"]