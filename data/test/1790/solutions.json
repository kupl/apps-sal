["n = int(input())\nd = {}\nfor i in range(n):\n    s = input().split()\n    for j in range(int(s[0])):\n        d[s[j+1]] = d.get(s[j+1],0)+1\nans = \"\"\nfor x in d:\n    if d[x] == n:\n        ans += str(x) + ' '\nprint(ans.strip())\n", "n = int(input())\nres = None\nfor i in range(n):\n    its = [int(k) for k in input().split()]\n    s = set(its[1:])\n    if res is None:\n        res = s\n    else:\n        res &= s\nprint(*res)\n", "def main():\n    n = int(input())\n    d = dict()\n    for i in range(n):\n        arr = list(map(int, input().split()))[1:]\n        for j in arr:\n            if (j not in d):\n                d[j] = 0\n            d[j] += 1\n    for t in d.keys():\n        if (d[t] == n):\n            print(t, end = \" \")\nmain()", "def read():\n    return set(list(map(int, input().split()))[1:])\n\nn = int(input())\nt = read()\nfor _ in range(n - 1):\n    t = t & read()\n\nfor x in t:\n    print(x, end=' ')\nprint()\n", "n = int(input())\n\nlines = [0 for _ in range(101)]\n\nfor _ in range(n):\n    l, *line = list(map(int, input().strip().split()))\n    for v in line:\n        lines[v] += 1\n\nmaxv = 0\nans = []\nfor index, line in enumerate(lines):\n    if line > maxv:\n        ans = [index]\n        maxv = line\n    elif line == maxv:\n        ans.append(index)\n\nprint(*ans)", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n#print(N)\ns0 = set()\nfor i in range(N):\n    za = getIntList()\n    ss = set(za[1:])\n    if len(s0) ==0:\n        s0 = ss\n    else:\n        s0&= ss\nfor x in s0:\n    print(x,end= ' ')\n\n\n\n", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\n\ncount = {}\nfor i in range(n):\n    a = set(list(map(int, input().split()))[1:])\n    for j in a:\n        if j not in count.keys():\n            count[j] = 0\n        count[j] += 1\n\nans = []\nfor key in count.keys():\n    if count[key] == n:\n        ans.append(key)\n\nprint(\" \".join([str(x) for x in ans]))", "n = int(input())\n\ncnt = [0] * 101\n\nfor x in range(n):\n    lst = [int(y) for y in input().split()]\n\n    for i in range(1, len(lst)):\n        cnt[lst[i]] += 1\n\nfor x in range(1, 101):\n    if cnt[x] == n:\n        print(x, end = ' ')\n    \n\n", "n = int(input())\nanswer = set(list(map(int, input().split()))[1:])\n\nfor i in range(n - 1):\n    arr = list(map(int, input().split()))[1:]\n\n    buff = set(arr)\n    answer = answer.intersection(buff)\n\nprint(*answer)", "n = int(input())\nmyset = set()\nfor i in range(n):\n    s = list(map(int, input().split()))\n    r, s = s[0], s[1:]\n    if i == 0:\n        myset = set(s)\n    else:\n        myset &= set(s)\nprint(' '.join(map(str, myset)))", "# map(int, input().split())\n# int(input())\nn = int(input())\ns = set(range(1, 101))\nfor i in range(n):\n\tcurr = set(list(map(int, input().split()))[1:])\n\tscp = s\n\ts = set()\n\tfor el in scp:\n\t\tif el in curr:\n\t\t\ts.add(el)\n\nfor el in s:\n\tprint(el, end=\" \")\nprint()\n", "\nn = int(input())\na = set(range(1,101))\nfor i in range(n):\n    a.intersection_update(set(map(int, input().split()[1:])))\n    \nfor e in a:\n    print(e, end = \" \")\n", "n=int(input())\na=set(list(map(int,input().split()))[1:])\nfor i in range(n-1):\n    a=a&set(list(map(int,input().split()))[1:])\nout=\"\"\nfor guy in a:\n    out+=str(guy)+\" \"\nprint(out[:-1])", "n = int(input())\nc=[0]*200\nfor i in range(n):\n    a=list(map(int, input().split()))\n    for i in range(1, len(a)):\n        c[a[i]]+=1\nfor i in range(len(c)):\n    if c[i]==n:\n        print(i, end=' ')", "n = int(input())\narr = input().split()[1:]\nans = set(arr)\nfor i in range(n - 1):\n    arr = input().split()[1:]\n    ans &= set(arr)\nprint(' '.join(ans))\n", "n = int(input())\ns = set(map(int, input().split()[1:]))\nfor i in range(n-1):\n    s = s.intersection(map(int, input().split()[1:]))\nprint(\" \".join(map(str, s)))", "d=dict()\nfor i in range(1,101):\n    d[i]=0\nn=int(input())\nfor _ in range(n):\n    a=list(map(int,input().split()))\n    for i in range(1,len(a)):\n        d[a[i]]+=1\nfor i in range(1,101):\n    if d[i]==n:\n        print(i,end=\" \")", "n = int(input().strip())\nans = set(list(range(1, 101)))\nfor _ in range(n):\n    stops = [ int(x) for x in input().strip().split()]\n    r = stops[0]\n    ans = ans.intersection(set(stops[1:]))\n\nfor s in ans:\n    print(s, end=' ')\nprint(\"\")\n", "n = int(input())\nA = {}\nB = {}\nfor i in range(n):\n    if A:\n        B = set(list(map(int, input().split()))[1:])\n        A &= B\n    else:\n        A = set(list(map(int, input().split()))[1:])\nprint(' '.join(map(str, A)))", "n=int(input())\nR=[list(map(int,input().split())) for i in range(n)]\n\nSET=set(R[0][1:])\n\nfor i in range(1,n):\n    SET=SET & set(R[i][1:])\n\nfor s in SET:\n    print(s,end=\" \")\n", "from sys import stdin\nn=int(stdin.readline().strip())\n\ns=set(list(map(int,stdin.readline().strip().split()))[1::])\nfor i in range(n-1):\n    s1=set(list(map(int,stdin.readline().strip().split()))[1::])\n    s2=set()\n    for i in s1:\n        if i in s:\n            s2.add(i)\n    s=s2.copy()\nprint(*list(s))\n", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import defaultdict\nfrom itertools import combinations\nimport sys\nimport math\nMAX = sys.maxsize\nMAXN = 10**5+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN():\n    return(list(map(int,sys.stdin.readline().strip().split())))\n\ndef charIN():\n    return(sys.stdin.readline().strip().split())\n\nn = int(input())\nx = [0]*1000\n\nfor _ in range(n):\n\tl = list(numIN())\n\tfor i in l[1:]:\n\t\tx[i]+=1\nz = []\nfor i in range(1000):\n\tif x[i]==n:\n\t\tz.append(str(i))\n\nprint(' '.join(z))\n\n\n", "n=int(input())\na=[0]*101\nfor i in range(n):\n    b=[int(x) for x in input().split()]\n    for j in range(1,len(b)):\n        a[b[j]]+=1\nfor i in range(len(a)):\n    if a[i]==n:\n        print(i,end=\" \")\nprint()\n        \n"]