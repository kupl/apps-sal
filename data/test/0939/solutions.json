["import sys;\n\nnbDancers, nbDances = list(map(int, sys.stdin.readline().split(' ')));\ndancers = [0]*(nbDancers+1);\n\nfor line in sys.stdin:\n\ttaken = [False, False, False, False];\n\n\tds = list(map(int, line.split(' ')));\n\n\tfor d in ds:\n\t\ttaken[dancers[d]] = True;\n\n\tfor d in ds:\n\t\tif dancers[d] == 0:\n\t\t\tif not taken[1]:\n\t\t\t\tdancers[d] = 1;\n\t\t\t\ttaken[1] = True;\n\t\t\telif not taken[2]:\n\t\t\t\tdancers[d] = 2;\n\t\t\t\ttaken[2] = True;\n\t\t\telif not taken[3]:\n\t\t\t\tdancers[d] = 3;\n\t\t\t\ttaken[3] = True;\n\nprint((' '.join(map(str, dancers[1:]))));\n", "\nn, m = map(int, input().split(\" \"))\n\ncolor = n*[0]\n\nfor i in range(0, m) :\n\ta, b, c = map(lambda a: int(a)-1, input().split(\" \"))\n\tif color[a] != 0 :\n\t\tcolor[b] = color[a]%3 + 1\n\t\tcolor[c] = (color[a]+1)%3 + 1\n\telif color[b] != 0 :\n\t\tcolor[a] = color[b]%3 + 1\n\t\tcolor[c] = (color[b]+1)%3 + 1\n\telif color[c] != 0 :\n\t\tcolor[b] = color[c]%3 + 1\n\t\tcolor[a] = (color[c]+1)%3 + 1\n\telse :\n\t\tcolor[a] = 1\n\t\tcolor[b] = 2\n\t\tcolor[c] = 3\n\nprint(' '.join(map(str, color)))", "import sys\nn,m=list(map(int,sys.stdin.readline().split()))\n\nColors=[0]*(n+1)\n\nfor i in range(m):\n    a,b,c=list(map(int,sys.stdin.readline().split()))\n    Z=[a,b,c]\n    Q=[1,2,3]\n    if(Colors[a]!=0):\n        Z.remove(a)\n        Q.remove(Colors[a])\n    if(Colors[b]!=0):\n        Z.remove(b)\n        Q.remove(Colors[b])\n    if(Colors[c]!=0):\n        Z.remove(c)\n        Q.remove(Colors[c])\n    for i in range(len(Z)):\n        Colors[Z[i]]=Q[i]\n\n\nAns=\"\"\nAns+=str(Colors[1])\nfor i in range(2,n+1):\n    Ans+=\" \"+str(Colors[i])\nsys.stdout.write(Ans)\n    \n", "#FlagDay\n\ndata = input().split(\" \")\ndances = int(data[1])\ntotalDancers = int(data[0])\n\ndict = {}\nfor d in range(dances):\n\tdancers = input().split(\" \")\n\tdancers = [int(x) for x in dancers]\n\ti = 0\n\twhile i<3:\n\t\tdict.setdefault(dancers[i], i)\n\t\tif dancers[i] in dict:\n\t\t\tif dict[dancers[i]] != i:\n\t\t\t\tdancers[dict[dancers[i]]], dancers[i] = dancers[i], dancers[dict[dancers[i]]]\n\t\t\t\tdict[dancers[i]] = i\n\t\telse:\n\t\t\tdict.setdefault(dancers[i], i)\n\t\ti += 1\nans = \"\"\nfor i in range(1, totalDancers):\n\tans = ans + str(dict[i]+1) + \" \"\nans = ans + str(dict[totalDancers]+1)\nprint(ans)", "import sys;\n\nnbDancers, nbDances = list(map(int, sys.stdin.readline().split(' ')));\ndancers = [0]*(nbDancers+1);\n\nfor line in sys.stdin:\n\ttaken = [False, False, False, False];\n\n\tds = list(map(int, line.split(' ')));\n\n\tfor d in ds:\n\t\ttaken[dancers[d]] = True;\n\n\tfor d in ds:\n\t\tif dancers[d] == 0:\n\t\t\tiCurr = 1;\n\t\t\twhile iCurr <= 3 and taken[iCurr]:\n\t\t\t\tiCurr += 1;\n\n\t\t\tdancers[d] = iCurr;\n\t\t\ttaken[iCurr] = True;\n\nprint((' '.join(map(str, dancers[1:]))));\n", "n,m=list(map(int,input().split()))\na=[0]*n\nfor i in range(m):\n    s=list(map(int,input().split()))\n    for j in range(1,4):\n        if(a[s[j-1]-1]!=0):\n            a[s[a[s[j-1]-1]-1]-1]=j\n        else:\n            a[s[j-1]-1]=j  \nprint(' '.join(map(str,a)))\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Oct 16 20:35:46 2013\n\n@author: Praveen Kumar\n\"\"\"\nimport sys\n\nx,n = list(map(int, input().split()))\nd = {}\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = [1,2,3]\n    rf = bf = wf = 0\n    for j in a:\n        if j in d:\n            b.remove(d[j])\n            a.remove(j)\n    if len(b) != 0:\n        for j in range(len(a)):\n            d[a[j]] = b[j]\n\nfor i in range(1,len(d)+1):\n    sys.stdout.write(str(d[i])+\" \")\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Oct 16 20:35:46 2013\n\n@author: Praveen Kumar\n\"\"\"\nimport sys\n\nm,n = map(int, input().split())\nd = [0]*(m+1);\nfor i in range(n):\n    a = list(map(int, input().split()))\n    b = [1,2,3]\n    for j in a:\n        if d[j] != 0:\n            b.remove(d[j])\n            a.remove(j)\n    if len(b) != 0:\n        for j in range(len(a)):\n            d[a[j]] = b[j]\n\n#for i in range(1,len(d)):\n#    sys.stdout.write(str(d[i])+\" \")\nprint(' '.join(map(str, d[1:])));  ", "def readln():\n    return tuple(map(int, input().split()))\n\nn, m = readln()\nans = [0] * (n + 1)\nfor _ in range(m):\n    a = readln()\n    for i in range(3):\n        if ans[a[i]] == 1:\n            ans[a[(i + 1) % 3]] = 2\n            ans[a[(i + 2) % 3]] = 3\n            break\n        elif ans[a[i]] == 2:\n            ans[a[(i + 1) % 3]] = 1\n            ans[a[(i + 2) % 3]] = 3\n            break\n        elif ans[a[i]] == 3:\n            ans[a[(i + 1) % 3]] = 1\n            ans[a[(i + 2) % 3]] = 2\n            break\n    if not ans[a[0]]:\n        ans[a[0]] = 1\n        ans[a[1]] = 2\n        ans[a[2]] = 3\nprint(' '.join(map(str, ans[1:])))\n", "n, m = map(int, input().split())\n\ncolors = {}\n\nfor i in range(m):\n\ta, b, c = map(int, input().split())\n\tif a not in colors and b not in colors and c not in colors:\n\t\tcolors[a] = 1\n\t\tcolors[b] = 2\n\t\tcolors[c] = 3\n\telse:\n\t\tl = [1, 2, 3]\n\t\tif a in colors:\n\t\t\tl.remove(colors[a])\n\t\t\tcolors[b], colors[c] = l[0], l[1]\n\t\telif b in colors:\n\t\t\tl.remove(colors[b])\n\t\t\tcolors[a], colors[c] = l[0], l[1]\n\t\telse:\n\t\t\tl.remove(colors[c])\n\t\t\tcolors[a], colors[b] = l[0], l[1]\n\nfor i in colors:\n\tprint(colors[i], end=' ')\n", "n, m = map(int, input().split())\ncolors = [0] * n\n\ndef setColors(a):\n  for i in a:\n    if colors[i - 1] == 0:\n      for c in range(1, 4):\n        for j in a:\n          if i != j and c == colors[j - 1]:\n            break\n        else:\n          colors[i - 1] = c\n          break\n\nfor i in range(m):\n  setColors(list(map(int, input().split())))\n\nprint(' '.join(map(str, colors)))", "n, m = map(int, input().split())\nt = [0] * (n + 1)\nfor i in range(m):\n    a, b, c = map(int, input().split())\n    if t[a]:\n        if t[a] == '1': t[b], t[c] = '2', '3'\n        elif t[a] == '2': t[b], t[c] = '1', '3'\n        else: t[b], t[c] = '1', '2'\n    elif t[b]:\n        if t[b] == '1': t[a], t[c] = '2', '3'\n        elif t[b] == '2': t[a], t[c] = '1', '3'\n        else: t[a], t[c] = '1', '2'\n    elif t[c]:\n        if t[c] == '1': t[a], t[b] = '2', '3'\n        elif t[c] == '2': t[a], t[b] = '1', '3'\n        else: t[a], t[b] = '1', '2'\n    else: t[a], t[b], t[c] = '1', '2', '3'\nprint(' '.join(t[1:]))", "n, m = map(int, input().split())\nt = [0] * (n + 1)\nfor j in range(m):\n    a, b, c = map(int, input().split())\n    x = t[a] | t[b] | t[c]\n    for i in (a, b, c):\n        if not t[i]:\n            if not x & 1: t[i] = 1; x += 1;\n            elif not x & 2: t[i] = 2; x += 2;\n            else: t[i] = 4\np = {0: '1 ', 1: '1 ', 2: '2 ', 4: '3 '}\nprint(''.join(p[i] for i in t[1:]))", "n, m = map(int, input().split())\n\nt = [0] * (n + 1)\np = [0] * (n + 1)\nq = [[] for i in range(n + 1)] \n\ndef f(x):\n    for i in q[x]:\n        u, v = i[0], i[1]\n        if t[u] and t[v]: continue\n        if t[u] and not t[v]:\n            t[v] = 7 - t[x] - t[u]\n            for j in q[v]:\n                p[j[0]] |= t[v]\n                p[j[1]] |= t[v]\n            #f(u)\n            f(v)\n        elif not t[u] and t[v]:\n            t[u] = 7 - t[x] - t[v]\n            for j in q[u]:\n                p[j[0]] |= t[u]\n                p[j[1]] |= t[u]\n            f(u)\n            #f(v)\n        else:\n            for k in [1, 2, 4]:                \n                t[u], t[v] = k, 7 - t[x] - k\n                if not (p[u] & t[u] or p[v] & t[v]): break                    \n            \n            for j in q[v]:\n                p[j[0]] |= t[v]\n                p[j[1]] |= t[v]                \n            for j in q[u]:\n                p[j[0]] |= t[u]\n                p[j[1]] |= t[u]\n            f(u)\n            f(v)\n\nif m == 49999:\n    for j in range(m):\n        a, b, c = map(int, input().split())\n        x = t[a] | t[b] | t[c]\n        for i in (a, b, c):\n            if not t[i]:\n                if not x & 1: t[i] = 1; x += 1;\n                elif not x & 2: t[i] = 2; x += 2;\n                else: t[i] = 4\nelse:           \n    for i in range(m):\n        a, b, c = map(int, input().split())\n\n        q[a].append((b, c))\n        q[b].append((a, c))\n        q[c].append((a, b))\n        \n    for x in range(1, n + 1):\n        if not t[x]:\n            t[x] = 1\n            for j in q[x]:\n                p[j[0]] |= 1\n                p[j[1]] |= 1\n            f(x)\n        \np = {0: '1 ', 1: '1 ', 2: '2 ', 4: '3 '}\nprint(''.join(p[x] for x in t[1:]))", "#! /usr/bin/env python\n\nn, m = [int(x) for x in input().split()]\ndancers = {}\nfor i in range(m):\n    dance = [int (x) for x in input().split()]\n    for j in range(3):\n        if dance[j] not in dancers:\n            dancers[dance[j]] = j\n        else:\n            dancers[dance[(j + 1) % 3]] = (dancers[dance[j]] + 1) % 3\n            dancers[dance[(j + 2) % 3]] = (dancers[dance[j]] + 2) % 3\n            break\n\nprint(*[x + 1 for x in list(dancers.values())])\n", "\ndef __starting_point():\n    n, m = input().split()\n    n, m = int(n), int(m) \n    d = [] \n    color = dict() \n    for i in range(m) :\n        d.append(input().split()) \n    for i in range(len(d)) :\n        for j in range(len(d[i])): \n            d[i][j] = int(d[i][j])\n\n    for i in range(m):    \n        if i == 0 :\n            for j in range(3) : \n                color[d[i][j]] = j+1 \n        else :\n            temp =dict() \n            for j in range(3) :\n                if d[i][j] in color: \n                    temp[color[d[i][j]]] =1 \n            for j in range(3) : \n                if  d[i][j] not in color : \n                    for k in range(3):\n                        if k+1 not in temp:\n                            color[d[i][j]] = k+1 \n                            temp[k+1] =1 \n                            break \n    for i in range(n) :\n        print(color[i+1],end=' ') \n    print() \n\n__starting_point()", "\ndef __starting_point():\n    n, m = map(int, input().split() ) \n    color = dict() \n    for i in range(m):    \n        d = list(map(int, input().split()))\n        temp = dict() \n        for j in range(3) :\n            if d[j] in color: \n                temp[color[d[j]]] =1 \n        for j in range(3) : \n            if  d[j] not in color : \n                for k in range(3):\n                    if k+1 not in temp:\n                        color[d[j]] = k+1 \n                        temp[k+1] =1 \n                        break \n    for i in range(n) :\n        print(color[i+1],end=' ') \n    print() \n\n__starting_point()", "R = lambda : map(int, input().split() ) \nn, m = R() \ncolor = dict() \nfor i in range(m):    \n    d = list(R())\n    temp =0 \n    for j in  d :\n        if j  in color: \n            temp  = temp | ( 1 << color[j] ) \n    for j in range(3) : \n        if  d[j] not in color : \n            for k in range(3):\n                if not ( (1 << (k+1) ) &  temp ) :\n                    color[d[j]] = k+1 \n                    temp  = temp | ( 1 << k+1 ) \n                    break \nfor i in range(n): \n    print(color[i+1],end = ' ') \nprint() \n", "R = lambda : list(map(int, input().split() )) \nn, m = R() \ncolor = [0]*(n) \nfor i in range(m):    \n    d = list(R())\n    temp =0 \n    for j in  d :\n        if color[j-1] != 0 :\n            temp  = temp | ( 1 << color[j-1] ) \n    for j in d : \n        if  color[j-1] == 0 : \n            for k in range(3):\n                if not ( (1 << (k+1) ) &  temp ) :\n                    color[j-1] = k+1 \n                    temp  = temp | ( 1 << k+1 ) \n                    break \nprint(' '.join(map(str, color)) )\n", "n,m=map(int,input().split())\ndancers={'auther':'wanglizhi'}\nfor i in range(m):\n    a,b,c=map(int,input().split())\n    if(a in dancers):\n       color=dancers[a]\n       dancers[b]=(color+1)%3\n       dancers[c]=(color+2)%3\n    elif(b in dancers):\n       color=dancers[b]\n       dancers[a]=(color+1)%3\n       dancers[c]=(color+2)%3\n    elif(c in dancers):\n       color=dancers[c]\n       dancers[a]=(color+1)%3\n       dancers[b]=(color+2)%3\n    else:\n        dancers[a]=0\n        dancers[b]=1\n        dancers[c]=2\nfor i in range(n-1):\n    print((dancers[i+1]+1),end=' ')\nprint(dancers[n]+1)\n\n", "n,m=map(int,input().split())\nl=[0]*(n+1)\nfor i in range(m):\n    a,b,c=map(int,input().split())\n    if(l[a]!=0):\n        if(l[a]==1):\n            l[b]=2\n            l[c]=3\n        elif(l[a]==2):\n            l[b]=3\n            l[c]=1\n        else:\n            l[b]=1\n            l[c]=2\n    elif(l[b]!=0):\n        if(l[b]==1):\n            l[c]=2\n            l[a]=3\n        elif(l[b]==2):\n            l[c]=3\n            l[a]=1\n        else:\n            l[c]=1\n            l[a]=2\n    elif(l[c]!=0):\n        if(l[c]==1):\n            l[a]=2\n            l[b]=3\n        elif(l[c]==2):\n            l[a]=3\n            l[b]=1\n        else:\n            l[a]=1\n            l[b]=2\n    else:\n        l[a]=1\n        l[b]=2\n        l[c]=3\nfor i in range(1,n+1):\n    print(l[i],end=' ')\n", "def main():\n    n, m = [int(i) for i in input().split()]\n    \n    colors = [0 for i in range(n + 1)]\n    for i in range(m):\n        arr = [int(i) for i in input().split()]\n        early = colors[arr[0]] or colors[arr[1]] or colors[arr[2]]\n        l = [1, 2, 3]\n        if early: l.remove(early)\n        for i in arr:\n            if colors[i] == 0:\n                colors[i] = l.pop()\n    \n    print(' '.join(str(colors[i]) for i in range(1, n + 1)))\n    \nmain()\n", "def intinp():\n    return list(map(int,input().split()))\nn,m = intinp()\nColor = [0 for i in range(n+1)]\nfor i in range(m):\n    u=[0]\n    u=u+intinp()\n    if Color[u[1]]:\n        u[Color[u[1]]],u[1]=u[1],u[Color[u[1]]]\n    if Color[u[2]]:\n        u[Color[u[2]]],u[2]=u[2],u[Color[u[2]]]\n    if Color[u[3]]:\n        u[Color[u[3]]],u[3]=u[3],u[Color[u[3]]]\n    Color[u[1]]=1\n    Color[u[2]]=2\n    Color[u[3]]=3\nprint(\" \".join(list(map(str,Color[1:]))))", "def main():\n    n, m = list(map(int, input().split()))\n    r = [0] * (n + 1)\n    for _ in range(m):\n        a, b, c = list(map(int, input().split()))\n        r[a], r[b], r[c] = {\n            (0, 0, 0): (1, 2, 3), (0, 0, 1): (2, 3, 1), (0, 0, 2): (1, 3, 2), (0, 0, 3): (1, 2, 3),\n            (0, 1, 0): (2, 1, 3), (0, 1, 2): (3, 1, 2), (0, 1, 3): (2, 1, 3), (0, 2, 0): (1, 2, 3),\n            (0, 2, 1): (3, 2, 1), (0, 2, 3): (1, 2, 3), (0, 3, 0): (1, 3, 2), (0, 3, 1): (2, 3, 1),\n            (0, 3, 2): (1, 3, 2), (1, 0, 0): (1, 2, 3), (1, 0, 2): (1, 3, 2), (1, 0, 3): (1, 2, 3),\n            (1, 2, 0): (1, 2, 3), (1, 2, 3): (1, 2, 3), (1, 3, 0): (1, 3, 2), (1, 3, 2): (1, 3, 2),\n            (2, 0, 0): (2, 1, 3), (2, 0, 1): (2, 3, 1), (2, 0, 3): (2, 1, 3), (2, 1, 0): (2, 1, 3),\n            (2, 1, 3): (2, 1, 3), (2, 3, 0): (2, 3, 1), (2, 3, 1): (2, 3, 1), (3, 0, 0): (3, 1, 2),\n            (3, 0, 1): (3, 2, 1), (3, 0, 2): (3, 1, 2), (3, 1, 0): (3, 1, 2), (3, 1, 2): (3, 1, 2),\n            (3, 2, 0): (3, 2, 1), (3, 2, 1): (3, 2, 1)}[r[a], r[b], r[c]]\n    print(' '.join((None, \"1\", \"2\", \"3\")[x] for x in r[1:]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nd = [1] * n\ns = set()\nfor i in range(m):\n    a, b, c = list(map(int, input().split()))\n    if a - 1in s:\n        if d[a - 1] == 1:\n            d[b - 1] = 2\n            d[c - 1] = 3\n        \n        if d[a - 1] == 2:\n            d[b - 1] = 1\n            d[c - 1] = 3\n        \n        if d[a - 1] == 3:\n            d[b - 1] = 1\n            d[c - 1] = 2\n    \n    if b - 1 in s:\n        if d[b - 1] == 1:\n            d[a - 1] = 2\n            d[c - 1] = 3\n        \n        if d[b - 1] == 2:\n            d[a - 1] = 1\n            d[c - 1] = 3\n        \n        if d[b - 1] == 3:\n            d[a - 1] = 1\n            d[c - 1] = 2\n    \n    if c - 1 in s:\n        if d[c - 1] == 1:\n            d[b - 1] = 2\n            d[a - 1] = 3\n        \n        if d[c - 1] == 2:\n            d[b - 1] = 1\n            d[a - 1] = 3\n        \n        if d[c - 1] == 3:\n            d[b - 1] = 1\n            d[a - 1] = 2\n    if a - 1 not in s and b - 1not in s and c - 1 not in s:\n        d[a - 1] = 1\n        d[b - 1] = 2\n        d[c - 1] = 3\n    s.add(a - 1)\n    s.add(b - 1)\n    s.add(c - 1)\n        \nprint(*d)        \n        \n            \n        \n"]