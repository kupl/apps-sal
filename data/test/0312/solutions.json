["n, m = list(map(int, input().split()))\nif n == 1:\n    print(1)\nelif m - 1 >= n - m:\n    print(m - 1)\nelse:\n    print(m + 1)\n", "def main():\n    n, m = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        left, right = max(0, m - 1), max(0, n - m)\n        if left >= right:\n            print(m - 1)\n        else:\n            print(m + 1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import collections\ndef f():\n    n,m  = [int(c) for c in input().split()]\n\n    if m > n // 2:\n        return max(1, m - 1)\n    return min(n, m+1)\n\nprint(f())", "n, m = [int(i) for i  in input().split()]\nif n == 1:\n    print(1)\nelse:\n    if n-m>m-1:\n        print(m+1)\n    else:\n        print(m-1)\n", "n, m = (int(x) for x in input().split())\nif n == 1:\n\tprint(1)\nelse:\n\tif m - 1 >= n - m:\n\t\tprint(max(1, m-1))\n\telse:\n\t\tprint(min(m+1, n))", "\nimport math\nimport sys\n\nx=list(map(int,input().split()))\nn=x[0]\nm=x[1]\n\nif m>int(n/2):\n    a=m-1\nelse:\n    a=m+1\nif n==1 and m==1:\n    a=1\nprint(a)\n\n\n\n    \n\n\n    \n", "n, m = list(map(int, input().split()))\nif n == 1 and m == 1:\n    print(1)\nelif n - m > m - 1:\n    print(m+1)\nelse:\n    print(m-1)", "import sys; sys.setrecursionlimit(1000000)\ndef solve():\n    n, m, = rv()\n    if n == 1:\n        return 1\n    toleft = m - 1\n    toright = n - m\n    if toleft >= toright:\n        return m - 1\n    return m + 1\n\n\n\n\ndef rv(): return list(map(int, input().split()))\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())\n\n\n", "n, m = map(int, input().split())\nif n == 1:\n    print(1)\nelif n & 1:\n    if (n + 1) // 2 <= m:\n        print(m - 1)\n    else:\n        print(m + 1)\nelse:\n    if n // 2 >= m:\n        print(m + 1)\n    else:\n        print(m - 1)", "n,m = list(map(int, input().split()))\n\nif m == 1 and n == 1:\n    print (1)\nelif m == 1:\n    print (2)\nelif m == n:\n    print (n-1)\nelse:\n    if m - 1 < n-m:\n        print (m+1)\n    else:\n        print(m-1)", "n,m=[int(x) for x in input().split()]\nif n==1:\n    print(1)\nelif n&1:\n    if m>n//2:\n        print(m-1)\n    else:\n        print(m+1)\nelse:\n    if m<=n/2:\n        print(m+1)\n    else:\n        print(m-1)\n    \n", "n,m=list(map(int,input().split(' ')))\nif n==1:\n    print(1)\nelse:\n    if n%2==0:\n        if m<=n//2:\n            print(m+1)\n        else:\n            print(m-1)\n    else:\n        if m<=(n-1)//2:\n            print(m+1)\n        else:\n            print(m-1)", "n, m = map(int, input().split(' '))\nif n == 1:\n    print(1)\n    return\nr = n-m\nl = m\nprint(m-1 if l > r else m+1)", "n, m = (int(i) for i in input().split())\ndef solve():\n    if n == 1:\n        return 1\n    # For n > 1, at least one of [a1, a2] must be valid\n\n    a1 = m - 1\n    a2 = m + 1\n    if a1 < 1:\n        return a2\n    \n    if a2 > n:\n        return a1\n\n    b1 = a1 # Numbers from 1 to a1 inclusive\n    b2 = n - a2 + 1 # Numbers from a2 to n inclusive\n    return a1 if b1 >= b2 else a2\n    # \"If there are multiple such values, print the minimum of them.\"\n\nprint(solve())\n", "n,m=map(int,input().split())\nif n==1: print(1)\nelif n-m>m-1: print(m+1)\nelse: print(m-1) ", "def bf(n,m, a):\n    k=0\n    for c in range(1, n+1):\n        if abs(c-a)<abs(c-m):\n            k+=1;\n    return k\ndef solve(n, m):\n    maxx = 0\n    for i in range(1, n+1):\n        maxx = max(maxx, bf(n, m, i))\n    for i in range(1, n+1):\n        if bf(n, m, i) == maxx:\n            return(i)\n\n\ndef solve2(a, b):\n    if a == 1 and b== 1:\n        return 1\n    if a == b:\n        return a-1\n    if b >= a:\n        return max(a-(b-a)+1, 1)\n    k = b-1\n    l = b+1\n    c1 = a-l+1\n    if k >= c1:\n        return k\n    else:\n        return l\n\na, b = list(map(int, input().split(' ')))\nprint(solve2(a, b))\n", "n, m = map(int,input().split())\nif n == 1:\n    print(1)\n    return\nif m > n//2:\n    print(m-1)\nelse:\n    print(m+1)", "#!/usr/bin/env python3\n\"\"\"\nCodeforces Round #316 (Div. 2)\n\nProblem B. Simple Game\n\n@author yamaton\n@date 2015-08-13\n\"\"\"\n\nimport itertools as it\nimport functools\nimport operator\nimport collections\nimport math\nimport sys\n\n\ndef solve(n, m):\n    if n == 1:\n        return 1\n    if m <= n // 2:\n        return m + 1\n    else:\n        return m - 1\n\n\ndef print_stderr(*args, **kwargs):\n    print(*args, file=sys.stderr, **kwargs)\n\n\ndef main():\n    [n, m] = [int(i) for i in input().strip().split()]\n    result = solve(n, m)\n    print(result)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = list(map(int,input().split()))\nif n != 1:\n    if n % 2 == 0:\n        if n // 2 >= m:\n            print(m+1)\n        else:\n            print(m-1)\n    else:\n        n -= 1\n        if n // 2 >= m:\n            print(m+1)\n        else:\n            print(m-1)\nelse:\n    print(1)\n", "def main():\n    n, m = [int(t) for t in input().split()]\n\n    if n == 1:\n        print(1)\n    elif m <= n / 2.0:\n        print(m + 1)\n    else:\n        print(m - 1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\nx = str(input()).split()\nn = int(x[0])\nm = int(x[1])\n\nif n == 1:\n    print(1)\n    return\nif n // 2 < m:\n    print(m -1)\nelse:\n    print(m+1)\n", "n, m = (int(x) for x in input().split())\nif m == 1:\n\tif n == 1:\n\t\tprint(1)\n\telse:\n\t\tprint(2)\n\treturn\nif m == n:\n\tprint(n - 1)\n\treturn\nif m - 1 >= n - m:\n\tprint(m - 1)\nelse:\n\tprint(m + 1)\n", "n, m = list(map(int, input().split()))\nif n == 1 and m == 1:\n    print(1)\nelse:    \n    if n - m > m - 1:\n        print(m + 1)\n    else:\n        print(m - 1)\n", "import sys\n\n\nfin = sys.stdin \n#fin = open ('in', 'r')\n\n#fout = open ('out', 'w')\n\n[n, m] = [int(x) for x in fin.readline().split()]\n\n\n\nleft = m - 1\nright = n - m\n\nif left >= right:\n\tprint(max(m-1, 1))\nelse:\n\tprint(min(m + 1, n))"]