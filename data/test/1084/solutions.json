["n, m = list(map(int, input().split()))\na = [-1] * m\nb = []\nf = True\nfor i in range(n):\n    s = input()\n    q = set()\n    for j in range(len(s)):\n        if (s[j] == \"#\"):\n            q.add(j)\n    for j in range(len(s)):\n        if (s[j] == \"#\"):\n            if (a[j] == -1):\n                a[j] = i\n            else:\n                if b[a[j]] != q:\n                    f = False\n    b.append(q)\n    #print(a, b, f)\nif f:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "# python3\n\ndef readline(): return tuple(map(int, input().split()))\n\n\ndef main():\n    n, m = readline()\n    unique_rows = list()\n\n    first_occ = [None] * m\n\n    while n:\n        n -= 1\n        row = input()\n        saved = None\n        for (i, char) in enumerate(row):\n            if char == '#':\n                if first_occ[i] is not None:\n                    if row != unique_rows[first_occ[i]]:\n                        return False\n                    else:\n                        break\n                else:\n                    if saved is None:\n                        unique_rows.append(row)\n                        saved = len(unique_rows) - 1\n                    first_occ[i] = saved\n            else:\n                assert char == '.'\n\n    return True\n\n\nprint(\"Yes\" if main() else \"No\")\n", "# python3\nn, m = tuple(map(int, input().split()))\n\nmask = 0\ncollected = set()\n\nwhile n:\n    n -= 1\n\n    row = 0\n    for char in input():\n        row = (row << 1) | (char == '#')\n\n    if row & mask:\n        if row not in collected:\n            print(\"No\")\n            break\n    else:\n        mask ^= row\n        collected.add(row)\nelse:\n    print(\"Yes\")\n", "def read_data():\n    n, m = list(map(int, input().strip().split()))\n    a = []\n    for i in range(n):\n        line = list(input().strip())\n        for j in range(len(line)):\n            if line[j] == \".\":\n                line[j] = 0\n            else:\n                line[j] = 1\n        a.append(line)\n    return n, m, a\n\ndef get_step(i,j):\n    rows = []\n    cols = []\n    for k in range(m):\n        if a[i][k] == 1:\n            cols.append(k)\n            if k in usedc:\n                return \"No\"\n            else:\n                usedc.append(k)\n    for k in range(n):\n        if a[k][j] == 1:\n            rows.append(k)\n            if k in usedr:\n                return \"No\"\n            else:\n                usedr.append(k)\n    for row in rows:\n        for col in cols:\n            if a[row][col] == 0:\n                return \"No\"\n            else:\n                a[row][col] = 0\n    return \"Ok\"\n\ndef solve():\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                step = get_step(i,j)\n                if step == \"No\":\n                    return \"No\"\n    return \"Yes\"\n\nn, m, a = read_data()\nusedr = []\nusedc = []\nprint(solve())\n", "n, m = map(int, input().split())\ns = {input() for i in range(n)}\nprint('No' if any(sum(si[j] == '#' for si in s) > 1 for j in range(m)) else 'Yes')", "def main():\n    n, m = list(map(int, input().split()))\n    aa, bb = [{i for i, c in enumerate(input()) if c == '#'} for _ in range(n)], []\n    for a in aa:\n        if a:\n            for b in bb:\n                c = a & b\n                if c and a != b:\n                    print('No')\n                    return\n            bb.append(a)\n    print('Yes')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t=set(input()for _ in [0]*int(input().split()[0]))\nprint(['No','Yes'][all(sum(c<'.'for c in s)<2for s in zip(*t))])\n\n\n\n# Made By Mostafa_Khaled\n", "BLACK, WHITE = \"#\", \".\"\nn, m = list(map(int, input().split()))\nblacks = [{i for i, c in enumerate(input()) if c == BLACK} for i in range(n)]\nanswer = \"Yes\"\nfor i in range(n):\n    for j in range(i):\n        if blacks[i] & blacks[j] and blacks[i] != blacks[j]:\n            answer = \"No\"\nprint(answer)", "n = 0\nm = 0\n\n\ndef esht(a, b ):\n\n    nonlocal n, m\n\n    for ptr in range(0 ,len(a)):\n        if (a[ptr] is '#') and (a[ptr] == b[ptr]):\n            return True\n    return False\n\ndef main():\n    nonlocal n , m\n    n, m = [*list(map(int,input().split()))]\n    s = [\"\" for i in range(0,n)]\n    for i in range(0,n):\n        s[i] = input()\n    ans = True\n    for i in range(0,n):\n        for j in range(i + 1 , n):\n            if esht(s[i], s[j]) and s[i] != s[j]:\n                ans = False\n    if ans is True:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nmain()\n", "n, m = [int(i) for i in input().split()]\na, b, flag = [-1] * m, list(), True\nfor i in range(n):\n    s = input()\n    q = set()\n    for j in range(len(s)):\n        if s[j] == \"#\":\n            q.add(j)\n    for j in range(len(s)):\n        if s[j] == \"#\":\n            if a[j] == -1:\n                a[j] = i\n            else:\n                if b[a[j]] != q:\n                    flag = False\n    b.append(q)\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "n, m = list(map(int, input().split()))\ns = [input() for _ in range(n)]\nl = []\n\nfor i in range(n):\n    se = set()\n    \n    for j in range(m):\n        if s[i][j]=='#':\n            se.add(j)\n\n    for li in l:\n        if len(se&li)!=0 and se!=li:\n            print('No')\n            return\n    \n    l.append(se)\n    \nprint('Yes')\n", "n, m = map(int, input().split())\nt = [0]*n\n\nfor j in range(n):\n    s = input()\n    for i in range(len(s)):\n        t[j] += int(s[i] == \"#\")\n        t[j] *= 2\n        \nans = True\nfor i in range(n):\n    for j in range(i + 1, n):\n        if (t[i] & t[j]) != 0:\n            if t[i] != t[j]:\n                ans = False\n\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n, m = map(int, input().split())\nt = [0]*n\n\nfor j in range(n):\n    s = input()\n    for i in range(len(s)):\n        t[j] += int(s[i] == \"#\")\n        t[j] *= 2\n        \nans = True\nfor i in range(n):\n    for j in range(i + 1, n):\n        if (t[i] & t[j]) != 0:\n            if t[i] != t[j]:\n                ans = False\n\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")"]