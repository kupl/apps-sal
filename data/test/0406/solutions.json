["arr = [0] * (10 ** 6 + 1)\nn = int(input())\nfor i in input().split():\n    arr[int(i)] += 1\ni = 10 ** 6\nj = i\nk = i\nc = 0\nwhile j > 0:\n    if arr[j] % 2 == 1 and (arr[j] > 1 or c == 0):\n        arr[j - 1] += 1\n        c = 1\n    else:\n        c = 0\n    j -= 1\nr = 0\nwhile i > 0 and k > 0:\n    if arr[i] < 2:\n        if i == k:\n            k -= 1\n        i -= 1\n    elif i == k and arr[i] < 4:\n        k -= 1\n    elif arr[k] < 2:\n        k -= 1\n    else:\n        r += i * k\n        arr[i] -= 2\n        arr[k] -= 2\nprint(r)", "n = int(input())\nl = list(map(int, input().split()))\nl.sort(key=lambda x: -x)\ni = 0\ncur = 0\nans = 0\nwhile i < len(l)-1:\n    if l[i] == l[i+1] or l[i]-1 == l[i+1]:\n        if cur == 0:\n            cur = l[i+1]\n        else:\n            ans += cur*l[i+1]\n            cur = 0\n        i += 2\n    else:\n        i += 1\nprint(ans)\n", "def __starting_point():\n    input()\n    data = sorted(map(int, input().split()), key=lambda x: -x)\n\n    if len(data) < 4:\n        print(0)\n        return\n\n    total = 0\n    i = 0\n\n    while i < len(data) - 3:\n        if abs(data[i] - data[i + 1]) > 1:\n            i += 1\n            continue\n\n        success = False\n        for j in range(i + 2, len(data) - 1):\n            if abs(data[j] - data[j + 1]) > 1:\n                continue\n\n            success = True\n            total += min(data[i], data[i + 1]) * min(data[j], data[j + 1])\n            i = j + 2\n            break\n\n        if not success:\n            i += 1\n\n    print(total)\n\n\n__starting_point()", "n = int(input())\ns = map(int, input().split())\ns = list(reversed(sorted(s)))\ni = 1\nk =[]\nwhile i < n:\n    if s[i-1] - s[i] == 1:\n        k.append(s[i])\n        i += 1\n    elif s[i-1] == s[i]:\n        k.append(s[i])\n        i += 1\n    i +=1\nans = 0\nfor i in range(1, len(k), 2):\n    ans += k[i]*k[i-1]\nprint(ans)", "n = int(input())\nl = [int(x) for x in input().split()]\n\nl.sort()\n\nl2 = [0] * n\nprev = l[0]\ncount = 1\nk = 0\n\nfor i in range(1, n):\n    if l[i] != prev:\n        l2[k] = [prev, count]\n        k += 1\n        prev = l[i]\n        count = 1\n    else:\n        count += 1\n\nl2[k] = [prev, count]\nk += 1\nfor i in range(k-1, 0, -1):\n    if l2[i][1] % 2 == 1 and l2[i-1][0] == (l2[i][0] - 1):\n        l2[i-1][1] += 1\n    l2[i][1] //= 2\nl2[0][1] //= 2\ni = k-1\nj = k-1\nres = 0\nwhile i >= 0 and j >= 0:\n    if i == j:\n        res += l2[i][0] * l2[i][0] * (l2[i][1] // 2)\n        l2[i][1] %= 2\n        if l2[i][1] == 0:\n            i -= 1\n            j -= 1\n        else:\n            i -= 1\n\n    else:\n        if l2[i][1] == 0:\n            i -= 1\n            continue\n        res += l2[i][0] * l2[j][0]\n        l2[i][1] -= 1\n        j = i\n\nprint(res)\n", "n = int(input())\nl = [int(i) for i in input().split()]\nl.sort(reverse=True)\na = []\ni = 0\nwhile i < len(l) - 1:\n    #print(l[i], l[i + 1])\n    if l[i] == l[i + 1]:\n        a.append(l[i])\n        i += 2\n    else:\n        if l[i] == l[i + 1] + 1:\n            a.append((l[i] - 1))\n            i += 2\n        else:\n            i += 1\n\n#print(a)\nif len(a) % 2 != 0:\n    a.append(0)\n\ns, i = 0, 0\nwhile i < len(a):\n    s += a[i] * a[i + 1]\n    i += 2\nprint(s)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "n=int(input())\nL=[int(x) for x in input().split()]\nL.sort(reverse=True)\ni=0\nwhile i<n-1:\n\tif L[i]-1==L[i+1]:\n\t\tL[i]-=1\n\t\ti+=1\n\telif L[i]==L[i+1]:\n\t\ti+=1\n\ti+=1\nval=[]\ni=0\nwhile i<n-1:\n\tif L[i]==L[i+1]:\n\t\tval.append(L[i])\n\t\ti+=1\n\ti+=1\narea=0\nn=len(val)\ni=0\nwhile i<n-1:\n\tarea+=val[i]*val[i+1]\n\ti+=2\nprint(area)\n", "ans = 0\nn = 0\nn = int(input(\"\"))\nl = input(\"\")\nst = []\nfor x in l.split(\" \"):\n    st.append(int(x))\nst.sort()\ni = n-1\nwhile i>=3:\n    if st[i]>st[i-1]+1:\n        i = i -1\n        continue\n    l = st[i-1]\n    i = i -2\n    while i>0 and st[i]>st[i-1]+1:\n        i=i-1\n    if i == 0:\n        break\n    b = st [i-1]\n    ans = ans + l*b\n    i = i - 2\nprint(ans)\n", "n = int(input())\nl = []\ninline = input().split()\nfor i in range (n):\n    l.append(int(inline[i]))\nl.sort()\nright_equal = 1\nans = 0\nif len(l) >= 4:\n    for i in range(len(l) - 2, -1, -1):\n        if l[i] != l[i + 1]:\n            if right_equal % 2 != 0:\n                if l[i + 1] - l[i] == 1:\n                    l[i + 1] -= 1\n                    right_equal = 2\n                else:\n                    l.pop(i + 1)\n            else:\n                right_equal = 1\n        else:\n            right_equal += 1\nif len(l) >= 4:\n    if l[0] != l[1]:\n        l.pop(0)\n    flag = 1\n    for i in range(len(l) - 2, -1, -2):\n        if flag == 1:\n            c = l[i]\n        else:\n            ans += c * l[i]\n            c = 0\n        flag = 1 - flag\nprint (ans)", "n = int(input())\n\nlst = []\nlst.extend(list(map(int, input().split())))\n\ntarea = 0\n\nlst.sort()\nlst = lst[::-1]\nlst.append(0)\n\ni = 0\nmark = 0\nar = []\nwhile i != n:\n    if (lst[i] - lst[i+1])<=1:\n        ar.append(lst[i+1])\n        mark += 1\n        i += 2\n    else:\n        i += 1\n    if mark == 2:\n        tarea = tarea + ar[0]*ar[1]\n        ar = []\n        mark = 0\n\nprint(tarea)\n        \n    \n", "sux = 0\ntwo = 0\nx=int(input())\ns=list(map(int, input().split(' ')))\n\nt = [0] * (1000001)\nfor i in s:\n    t[i] += 1\nfor i in range(len(t)-1, 0, -1):\n    if t[i]%2==1 and t[i-1]>0:\n        t[i] -= 1\n        t[i-1] += 1\n    elif t[i]%2==1 and t[i]>0:\n        t[i] -= 1\nfor i in range(len(t)-1, 0, -1):\n    if two != 0 and t[i] != 0:\n        sux += i*two\n        two = 0\n        t[i] -= 2\n    if t[i] % 4 == 0:\n        sux += (t[i]//4)*i*i\n    else:\n        sux += (t[i]//4)*i*i\n        if two != 0:\n            sux += i*two\n            two = 0\n            \n        else:\n            two = i\n            \n    \nprint(sux)\n", "n = int(input())\nl = list(map(int, input().split()))\nm = {}\nm2 = set()\nfor i in range(1, 10**6 + 1):\n    m[i] = 0\nfor i in range(n):\n    m[l[i]] += 1\n    m2.add(l[i])\n    if l[i] >= 2:\n        m2.add(l[i] - 1)\nm1 = []\n\nfor i in range(10**6, 1, -1):\n    if m[i] % 2 == 1 and m[i - 1] > 0:\n        m[i] -= 1\n        m[i - 1] += 1\n    elif m[i] % 2 == 1:\n        m[i] -= 1\nfor i in m2:\n    if m[i] != 0:\n        m1.append(i)\nm1.sort(reverse = True)\n\ncnt = 0\nfor i in range(len(m1)):\n    cnt += (m[m1[i]]//4)*(m1[i]**2)\n    if m[m1[i]] % 4 == 2 and i != len(m1) - 1:\n        m[m1[i + 1]] -= 2\n        cnt += m1[i + 1]*m1[i]\nprint(cnt)\n        \n        \n    \n        \n", "n = int(input())\nl = list(map(int, input().split()))\nm = {}\nm2 = set()\nfor i in range(1, 10**6 + 1):\n    m[i] = 0\nfor i in range(n):\n    m[l[i]] += 1\n    m2.add(l[i])\n    if l[i] >= 2:\n        m2.add(l[i] - 1)\nm1 = []\n\nfor i in range(10**6, 1, -1):\n    if m[i] % 2 == 1 and m[i - 1] > 0:\n        m[i] -= 1\n        m[i - 1] += 1\n    elif m[i] % 2 == 1:\n        m[i] -= 1\nfor i in m2:\n    if m[i] != 0:\n        m1.append(i)\nm1.sort(reverse = True)\n\ncnt = 0\nfor i in range(len(m1)):\n    cnt += (m[m1[i]]//4)*(m1[i]**2)\n    if m[m1[i]] % 4 == 2 and i != len(m1) - 1:\n        m[m1[i + 1]] -= 2\n        cnt += m1[i + 1]*m1[i]\nprint(cnt)\n        \n        \n    \n        \n", "#!/c/Python34/python\n# coding: utf-8 ans\n\n\ndef main():\n    n = int(input())\n    L = sorted(map(int, input().split()))\n    L.reverse()\n    K = []\n    i = 1\n    while(i < n):\n        if L[i-1] == L[i]:\n            K.append(L[i])\n            i += 1\n        elif L[i-1]-L[i] == 1:\n            K.append(L[i])\n            i += 1\n        i += 1\n    ans = 0\n    for i in range(1, len(K), 2):\n        ans += K[i-1] * K[i]\n    print(ans)\n    #print(K)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "_ = int(input())\nas_ = list(sorted(map(int, input().split())))\n\ndef get_pair():\n    while len(as_) >= 2:\n        s0 = as_.pop()\n        s1 = as_.pop()\n        if s0-1 == s1 or s0 == s1:\n            return s1\n        as_.append(s1)\n    return None\n\nans = 0\ntb = get_pair()\nlr = get_pair()\nwhile not (tb is None or lr is None):\n    ans += tb * lr\n    tb = get_pair()\n    lr = get_pair()\nprint(ans)\n", "def main():\n    n = int(input())\n    l = [int(i) for i in input().split()]\n    l.sort()\n    l.reverse()\n    candidate = []\n    i = 1\n    while (i < n):\n        if (l[i - 1] - l[i] <= 1):\n            candidate.append(min(l[i - 1], l[i]))\n            i += 2\n        else:\n            i += 1\n\n    area = 0\n    for i in range(1, len(candidate), 2):\n        area += candidate[i] * candidate[i - 1]\n    return area\n\n\ndef __starting_point():\n    print(main())\n__starting_point()", "n = int(input())\nls = list(map(int, input().split()))\nls.sort(reverse=True)\n\narea = 0\npairs = []\ni = 0\nwhile i < len(ls)-1:\n    if (ls[i] - ls[i+1]) > 1:\n        i += 1\n    else:\n        pairs.append(ls[i+1])\n        i += 2\n    if len(pairs) == 2:\n        area += pairs.pop() * pairs.pop()\nprint(area)\n", "n = int(input())\nmaxn = 10**6 + 2\ncnt = [0] * maxn\nfor x in map(int, input().split()):\n    cnt[x] += 1\nansv = []\nfor i in range(maxn - 2, 1, -1):\n    ansv += [i] * ((cnt[i] + (cnt[i+1] & 1)) >> 1)\n    if cnt[i] > 0:\n        cnt[i] += cnt[i+1] & 1\nans = 0\nfor i in range(1, len(ansv), 2):\n    ans += ansv[i] * ansv[i-1]\nprint(ans)", "s = input()\nlst = [int(i) for i in input().split()]\nlst.sort()\nlst = lst[::-1]\nn = 0\nk = 0\nwhile len(lst) >= 2:\n    if lst[0] == lst[1] or lst[0] == lst[1]+1:\n        if k != 0:\n            n += k*lst[1]\n            lst.pop(0)\n            lst.pop(0)\n            k = 0\n        else:\n            k = lst[1]\n            lst.pop(0)\n            lst.pop(0)\n\n    else:\n        lst.pop(0)\nprint(n)\n", "n, v, ps, pp = int(input()), 0, 0, 0\nfor l in sorted(map(int, input().split()), reverse=True):\n    if ps == 0 or ps > l + 1:\n        ps = l\n    elif pp == 0:\n        pp, ps = l, 0\n    else:\n        v, pp, ps = v + pp * l, 0, 0\nprint(v)", "n = int(input())\nsticks = list(map(int, input().split()))\n\nlength = [0] * 1000000\nmiv = 1000000\nmav = 0\nansw = 0\nfor i in range(len(sticks)):\n\tlength[sticks[i]-1] = length[sticks[i]-1] + 1\n\tif sticks[i]-1 > mav:\n\t\tmav = sticks[i] - 1\n\tif sticks[i] -1 < miv:\n\t\tmiv = sticks[i] -1\n\nlength = length[miv:mav+1]\nfor i in range(len(length)-1, -1, -1):\n\tif length[i] % 2 == 1:\n\t\tif i > 0 and length[i-1] > 0:\n\t\t\tlength[i] = length[i] - 1\n\t\t\tlength[i-1] = length[i-1] + 1\n\t\telse:\n\t\t\tlength[i] = length[i] - 1\n\nsquare = []\nfor i in range(len(length)-1, -1, -1):\n\n\twhile length[i] > 0:\n\t\tsquare.append(i + miv + 1)\n\t\tlength[i] = length[i] - 2\n\t\tif len(square) == 2:\n\t\t\tansw += square[0] * square[1]\n\t\t\tsquare = []\nprint(answ)", "I = lambda : map(int,input().split())\nn = int(input())\np = list(I())\ncnt = [0] * 1000001\nfor i in p: cnt[i] += 1\nfor i in range(1000000,1,-1):\n    if cnt[i] % 2 == 1 and cnt[i - 1] > 0:\n        cnt[i] -= 1\n        cnt[i - 1] += 1\n    elif cnt[i] % 2 == 1 and cnt[i - 1] == 0:\n        cnt[i] -= 1\np = 0\nans = 0\nfor i in range(1000000,1,-1):\n    if cnt[i] != 0:\n        if p != 0:\n            cnt[i] -= 2\n            ans += p * i\n            p = 0\n        ans += i * i * (cnt[i] // 4)\n        if cnt[i] % 4 != 0:\n            p = i\nprint (ans)", "from collections import Counter\n\ninput()\nlengths = [int(i) for i in input().split()]\ncnt = Counter(lengths)\nlengths.sort(reverse=True)\ntotal_square = 0\n\nfor le in lengths:\n    if cnt[le] % 2 != 0:\n        if cnt[le-1] > 0:\n            cnt[le-1] += 1\n        cnt[le] -= 1\n\nfor le in lengths:\n    if cnt[le] >= 4:\n        cnt[le] -= 4\n        total_square += le ** 2\n    elif cnt[le] < 4 and cnt[le] > 0:\n        min_le = le - 1\n        while min_le > 0 and cnt[min_le] < 2:\n            min_le -= 1\n        cnt[le] -= 2\n        cnt[min_le] -= 2\n        total_square += le * min_le\n\nprint(total_square)\n", "import sys\ndef otb(l):\n    i = 0\n    while i < n - 1:\n        if l[i] - 1 == l[i + 1]:\n            l[i] -= 1\n            i += 1\n        elif l[i] == l[i + 1]:\n            i += 1\n        i += 1\n    znach = []\n    i = 0\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n            znach.append(l[i])\n            i += 1\n        i += 1\n    return znach\ndef ploshad(n,znach):\n    summa = 0\n    n = len(znach)\n    for i in range(0, n - 1, 2):\n        summa += znach[i] * znach[i + 1]\n    sys.stdout.write(str(summa))\n\nn = int(sys.stdin.readline())\nl = []\nl = [int(j) for j in sys.stdin.readline().split()]\nl.sort(reverse=True)\nznach=otb(l)\nploshad(n,znach)\n", "n = int(input())\na, b = 0, 0\nans = 0\nfor i in sorted(map(int,input().split()),reverse=True):\n    if a == 0 or a > i + 1:\n        a = i\n    elif b == 0:\n        a, b= 0, i\n    else:\n        ans += i * b\n        a, b = 0, 0\nprint(ans)\n\n\n\n        \n\n"]