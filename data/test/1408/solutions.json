["3\n\nn = int(input())\nbooks = [[], []]\nfor _ in range(n):\n    t, w = tuple(map(int, input().split()))\n    books[t - 1].append(w)\nfor _ in range(2):\n    books[_].sort()\n#print(books)\nans = 10**9\nfor i in range(len(books[0]) + 1):\n    for j in range(len(books[1]) + 1):\n        hor = sum(books[0][:i]) + sum(books[1][:j])\n        ver = len(books[0]) - i + 2 * (len(books[1]) - j)\n        if hor <= ver and ver < ans:\n            ans = ver\n        #print(i, j, hor, ver, ans)\nprint(ans)\n", "n = int(input())\na = list(tuple(map(int, input().split())) for i in range(n))\ns = sum(t for t, w in a)\na = [(t / w, t, t + w) for t, w in a]\na.sort(reverse = True)\nd, i = s, 0\nwhile d >= 0:\n    s -= a[i][1]\n    d -= a[i][2]\n    i += 1\ni -= 1\ns += a[i][1]\nd += a[i][2]\nif a[i][1] == 2:\n    j = i + 1\n    while j < n and a[j][1] == 2: j += 1\n    if j < n and d >= a[j][2]:\n        i = 0\n        s -= 1\nif i > 0: \n    i -= 1\n    if a[i][1] == 1:\n        d += a[i][2]\n        j = i + 1\n        while j < n and a[j][1] == 1: j += 1\n        if j < n and d >= a[j][2]: s -= 1\nprint(s)", "n = int(input())\nm = 2 * n + 1\n\npos = set([(0, 0)])\nfor i in range(n):\n    t, w = list(map(int, input().split(' ')))\n    next_pos = set()\n    for a, b in pos:\n        if a + t <= m:\n            next_pos.add((a + t, b))\n        if b + w <= m:\n            next_pos.add((a, b + w))\n    pos = next_pos\n\nprint(min(t for t, w in pos if t >= w))\n", "n = int(input())\nt = [0] * n\nw = [0] * n\n\nfor i in range(n):\n    t[i], w[i] = map(int, input().split())\n\ndp = [[float(\"inf\")] * (2 * n + 1) for i in range(n)]\ndp[0][t[0]] = 0\ndp[0][0] = w[0]\nfor i in range(n - 1):\n    for j in range(2 * n + 1):\n        a = dp[i][j]\n        if a != float(\"inf\"):\n            dp[i + 1][j + t[i + 1]] = min(dp[i + 1][j + t[i + 1]], dp[i][j])\n            dp[i + 1][j] = min(dp[i + 1][j], dp[i][j] + w[i + 1])\n# 12 3 15 5 1\nans = float(\"inf\")\nfor j in range(2 * n + 1):\n    if dp[n - 1][j] <= j:\n        ans = min(ans, j)\nprint(ans)", "n = int(input())\nt, w = [], []\nfor i in range(n):\n    a, b = map(int, input().split())\n    t.append(a)\n    w.append(b)\nd = [[float('-inf')] * (2 * n + 1) for i in range(n + 1)]\nd[0][0] = 0\nfor i in range(n):\n    for j in range(2 * n + 1):\n        if j + t[i] <= 2 * n:\n            d[i + 1][j + t[i]] = max(d[i + 1][j + t[i]], d[i][j] + w[i])\n        d[i + 1][j] = max(d[i + 1][j], d[i][j])\nfor j in range(2 * n + 1):\n    if sum(w) - d[n][j] <= j:\n        print(j)\n        return", "'''\nCreated on Jan 26, 2015\n\n@author: mohamed265\n'''\nn = int(input())\ntOne = [0]\ntTwo = [0]\nsizeOne = 1\nsizetwo = 1\nslon = 999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\nfor i in range(n):\n    t = input().split()\n    if t[0] == '1':\n        tOne.append(int(t[1]))\n        sizeOne += 1\n    else:\n        tTwo.append(int(t[1]))\n        sizetwo += 1\ntOne.sort(reverse=False)\ntTwo.sort(reverse=False)\nfor i in range(1, sizeOne):\n    tOne[i] += tOne[i - 1]\nfor i in range(1, sizetwo):\n    tTwo[i] += tTwo[i - 1]\ntOne.reverse()\ntTwo.reverse()\nfor i in range(sizeOne):\n    for j in range(sizetwo):\n        #print(i+ 2*j, tOne[i] + tTwo[j])\n        if i + 2 * j >= tOne[i] + tTwo[j]:\n            slon = min(slon, i + 2 * j)\n# print(tOne, tTwo)\nprint(slon)\n", "n = int(input())\na = [list(map(int, input().split())) for i in range(n)]\ns1 = sum([x[0] for x in a])\na.sort(key=lambda x: x[1] / x[0])\n\nans = 10**9\ns2 = 0\nl = -1\nfor i in range(n):\n    if s2 + a[i][1] <= s1 - a[i][0]:\n        s2 += a[i][1]\n        s1 -= a[i][0]\n        l = i\nif l != -1 and a[l][0] == 1:\n    for i in range(l + 1, n):\n        if a[i][0] == 2 and s2 - a[l][1] + a[i][1] <= s1 - 1:\n            print(s1 - 1)\n            return\nprint(s1)\n", "one = []\ntwo = []\n\nx=int(input())\nfor i in range(x):\n    a, b = list(map(int, input().split(' ')))\n    if a == 1:\n        one.append(b)\n    else:\n        two.append(b)\n\none.sort()\ntwo.sort()\nminx = 9000000\n\nfor ones in range(0, len(one)+1):\n    for twos in range(0,len(two)+1):\n        w = ones + 2 * twos\n        a = sum(one[:len(one)-ones]) + sum(two[:len(two)-twos])\n        if a <= w: \n            minx = min(minx, w)\nprint(minx)", "n = int(input())\nm = 2 * n + 1\n\npos = set([(0, 0)])\nfor i in range(n):\n    t, w = list(map(int, input().split(' ')))\n    next_pos = set()\n    for a, b in pos:\n        if a + t <= m:\n            next_pos.add((a + t, b))\n        if b + w <= m:\n            next_pos.add((a, b + w))\n    pos = next_pos\n\nprint(min(t for t, w in pos if t >= w))", "n = int(input())\n\nm = 2 * n + 1\n\n\n\npos = set([(0, 0)])\n\nfor i in range(n):\n\n    t, w = list(map(int, input().split(' ')))\n\n    next_pos = set()\n\n    for a, b in pos:\n\n        if a + t <= m:\n\n            next_pos.add((a + t, b))\n\n        if b + w <= m:\n\n            next_pos.add((a, b + w))\n\n    pos = next_pos\n\n\n\nprint(min(t for t, w in pos if t >= w))\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\nm = 2 * n + 1\n\npos = set([(0, 0)])\nfor i in range(n):\n    t, w = list(map(int, input().split(' ')))\n    next_pos = set()\n    for a, b in pos:\n        if a + t <= m:\n            next_pos.add((a + t, b))\n        if b + w <= m:\n            next_pos.add((a, b + w))\n    pos = next_pos\n\nprint(min(t for t, w in pos if t >= w))", "R = lambda: map(int, input().split())\nn = int(input())\nunset = -1000000\nbs = [[0, 0]] + [list(R()) for i in range(n)]\ndp = [[unset] * 201 for i in range(n + 1)]\ndp[0][0] = 0\nfor i in range(n):\n    for j in range(201):\n        t, w = bs[i + 1][0], bs[i + 1][1]\n        if dp[i][j] != unset:\n            dp[i + 1][j + t] = max(dp[i + 1][j + t], dp[i][j] + t)\n            dp[i + 1][j] = max(dp[i + 1][j], dp[i][j] - w)\nfor i in range(201):\n    if dp[n][i] >= 0:\n        print(i)\n        break", "n = int(input())\nm = 2*n + 1\nres = set([(0, 0)])\nfor i in range(n):\n    t, w = list(map(int, input().split()))\n    nxt = set()\n    for a, b in res:\n        if a + t <= m:\n            nxt.add((a + t, b))\n        if b + w <= m:\n            nxt.add((a, b + w))\n    res = nxt\nprint(min(t for t, w in res if t >= w))\n", "from operator import itemgetter\n\n\nclass CodeforcesTask294BSolution:\n    def __init__(self):\n        self.result = ''\n        self.books_count = 0\n        self.books_dims = []\n\n    def read_input(self):\n        self.books_count = int(input())\n        for x in range(self.books_count):\n            self.books_dims.append([int(y) for y in input().split(\" \")])\n\n    def process_task(self):\n        v1 = sum([1 for x in self.books_dims if x[0] == 1])\n        v2 = sum([1 for x in self.books_dims if x[0] == 2])\n        v1_books = [x[1] for x in self.books_dims if x[0] == 1]\n        v2_books = [x[1] for x in self.books_dims if x[0] == 2]\n        v1_books.sort()\n        v2_books.sort()\n        minimum = v1 + v2 * 2\n        for x in range(v1 + 1):\n            for y in range(v2 + 1):\n                width = x + y * 2\n                thickness = sum(v1_books[:(v1 - x)]) + sum(v2_books[:(v2 - y)])\n                if thickness <= width:\n                    minimum = min(minimum, width)\n        self.result = str(minimum)\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask294BSolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "3\n\nn = int(input())\nt = []\nw = []\nn1, n2 = 0, 0\nfor i in range(n):\n    x, y = list(map(int, input().split()))\n    t.append(x)\n    w.append(y)\n    n1 += x == 1\n    n2 += x == 2\n\nw1 = []\nw2 = []\nfor i in range(n):\n    if t[i] == 1:\n        w1.append(w[i])\n    else:\n        w2.append(w[i])\nw1.sort(reverse=True)\nw2.sort(reverse=True)\n\nans = 201\nfor i in range(201):\n    for j in range(min(i // 2, n2) + 1):\n        k = min(n1, i - 2 * j)\n        thickness = 2 * j + k\n        if thickness >= sum(w1[k:]) + sum(w2[j:]):\n            ans = min(ans, thickness)\n\nprint(ans)\n", "n = int(input())\ndif=[]\nli1=[]\nli2=[]\na1=b1=0\n#print(lis)\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    if a==1:\n        li1.append(b)\n    else:\n        li2.append(b)\nli1.sort(reverse=True)\nli2.sort(reverse=True)\nl1=len(li1)\nl2=len(li2)\nans=10000000000\nfor i in range(l1+1):\n    for j in range(l2+1):\n        s=0\n        for k in range(i,l1):\n            s+=li1[k]\n        for k in range(j,l2):\n            s+=li2[k]\n#        print(i,j,s)    \n        if i+2*j>=s:\n            ans=min(ans,i+2*j)\nprint(ans)                                \n\n", "from bisect import bisect_left as bl, bisect_right as br, insort\nimport sys\nimport heapq\n#from math import *\nfrom collections import defaultdict as dd, deque\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return list(map(int, data().split()))\n#def print(x): return sys.stdout.write(str(x)+'\\n')\n#sys.setrecursionlimit(100000)\nmod=int(1e9+7)\n\nn=int(data())\ndp1=[]\ndp2=[]\nfor i in range(n):\n    t,w=mdata()\n    if t==1:\n        dp1.append(w)\n    else:\n        dp2.append(w)\ndp1.sort(reverse=True)\ndp2.sort(reverse=True)\ns=len(dp1)+2*len(dp2)\nk=0\nflag=True\nwhile flag:\n    flag=False\n    if len(dp2)>0:\n        if len(dp1)>1:\n            m=min(dp1[-1]+dp1[-2],dp2[-1])\n            if k+m<=s-2:\n                if m==dp2[-1]:\n                    dp2.pop()\n                    k+=m\n                    s-=2\n                else:\n                    k+=dp1.pop()\n                    s-=1\n                flag=True\n        else:\n            if len(dp2)>0 and dp2[-1]+k<=s-2:\n                k+=dp2.pop()\n                s-=2\n                flag=True\n    if flag==False:\n        if len(dp1) > 0 and dp1[-1] + k <= s - 1:\n            k += dp1.pop()\n            s -= 1\n            flag = True\nprint(s)\n", "n = int(input())\nm = 2*n + 1\nres = set([(0, 0)])\nfor i in range(n):\n    t, w = map(int, input().split())\n    nxt = set()\n    for a, b in res:\n        if a + t <= m:\n            nxt.add((a + t, b))\n        if b + w <= m:\n            nxt.add((a, b + w))\n    res = nxt\nprint(min(t for t, w in res if t >= w))", "n = int(input())\nlis = []\nfor _ in range(n):\n    tt, ww = [int(x) for x in input().split()]\n    lis.append((tt, -ww))\nlis.sort()\nsum1, sum2 = [0], [0]\nfor i in range(n):\n    if lis[i][0] == 1:\n        sum1.append(sum1[-1] - lis[i][1])\n    else:\n        sum2.append(sum2[-1] - lis[i][1])\nans = 1000000000\nk1, k2 = len(sum1) - 1, len(sum2) - 1\nv = k2 + 1\nfor u in range(0, k1 + 1):\n    while v - 1 >= 0 and 2 * (v - 1) + sum2[v - 1] >= sum1[k1] + sum2[k2] - sum1[u] - u:\n        v -= 1\n    if v <= k2:\n        ans = min(ans, u + 2 * v)\nprint(ans)", "n=int(input())\nwidth,thickness=[],[]\none,two=[],[]\nfor _ in range(n):\n    ti,wi=map(int,input().split())\n    thickness.append(ti),width.append(wi)\n    if ti==1:one.append(wi)\n    if ti==2:two.append(wi)\none.sort(),two.sort()\none=[0]+one\ntwo=[0]+two\nfor i in range(1,len(one)):\n    one[i]=one[i-1]+one[i]\nfor i in range(1,len(two)):\n    two[i]=two[i-1]+two[i]\nans=10e18\nfor i in range(len(one)):\n    for ii in range(len(two)):\n        thick=(i)+2*(ii)\n        width=one[len(one)-i-1]\n        width+=two[len(two)-ii-1]\n        if width<=thick:ans=min(ans,thick)\nprint(ans)"]