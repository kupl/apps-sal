["n = int(input())\na = list(map(int, input().split()))\n\nif n == 2:\n  if a[0] >= a[1] and (a[0] - a[1]) % 2 == 0:\n    print((a[0] - a[1]) // 2)\n  else:\n    print(-1)\nelse:\n  num = 0\n  for i in range(2, n):\n    num ^= a[i]\n  \n  _and = (a[0] + a[1] - num)\n  if  _and % 2 != 0 or a[0] < _and // 2 or (_and // 2) & num != 0:\n    print(-1)\n  else:\n    _and //= 2\n    \n    max_2 = 1\n    while max_2 <= num:\n      max_2 *= 2\n    \n    a0 = _and\n    while max_2 >= 1:\n      if num & max_2 != 0 and a0 + max_2 <= a[0]:\n        a0 += max_2\n      max_2 //= 2\n    \n    if a0 != 0:\n      print(a[0] - a0)\n    else:\n      print(-1)", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    x = 0\n    for i in range(2, n):\n        x ^= a[i]\n    d = a[0]+a[1]-x\n    if d%2 == 1 or d < 0:\n        print(-1)\n        return\n    d >>= 1\n    if d&x != 0 or d > a[0]:\n        print(-1)\n        return\n    k = x.bit_length()\n    tmp = d\n    # d^tmp \u306fd&x=0\u304b\u3089d|tmp\u3068\u4e00\u7dd2\n    for i in range(k, -1, -1):\n        if (x >> i) & 1:\n            if tmp+(1<<i) <= a[0]:\n                tmp += 1<<i\n    if 0 < tmp <= a[0]:\n        print(a[0]-tmp)\n    else:\n        print(-1)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\nN_MAX = 200000 + 5\nINF = 10**9 + 7\nsys.setrecursionlimit(N_MAX)\nMOD = 10**9 + 7\n\n\ndef main():\n    _ = int(sys.stdin.readline().rstrip())\n    Arr = [int(x) for x in sys.stdin.readline().rstrip().split()]\n\n    K = 43\n\n    #\n    A = Arr[0]\n    B = Arr[1]\n\n    S = A + B\n    X = 0\n    for i in range(2, len(Arr)):\n        X ^= Arr[i]\n\n    # print(S, X)\n\n    # \u6b21\u3092\u6e80\u305f\u3059a, b \u304c\u898b\u3064\u304b\u308b\u304b\uff1f\n    #  a+b=S, a^b=X, a<=A\n\n    # \u6841DP : \u6841\u3092\u4e00\u3064\u305a\u3064\u6c7a\u3081\u3066\u3044\u304f\u3088\u3046\u306aDP\n    # dp[\u4eca\u306e\u6841\u6570 = 0:42][\u7e70\u308a\u4e0a\u304c\u308a\u304c\u3042\u308b\u304b = 0,1][\u4eca\u307e\u3067\u304cA\u4ee5\u4e0b\u304b\u3069\u3046\u304b 0=\u4ee5\u4e0b\u30011=\u3088\u308a\u5927\u304d\u3044] = \u6700\u5927\u5024\n    # \u5024\u306f\u6700\u5927\u5024\u3002\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3051\u308c\u3070 -1\n    dp = [[[-1 for x in [0, 1]] for _ in [0, 1]] for _ in range(K)]\n\n    dp[0][0][0] = 0  # \u6700\u521d\n\n    v = 1\n    for i in range(K - 1):  # \u6841\u6570\n        cx = X & 1  # current X\n        cs = S & 1  # current S\n        ca = A & 1  # current A\n        for j in range(2):  # \u7e70\u308a\u4e0a\u304c\u308a\u3042\u308b\uff0f\u306a\u3044\n            for k in range(2):  # \u4eca\u307e\u3067\u306e\u7bc4\u56f2\u304c A \u4ee5\u4e0b\u304b\u3069\u3046\u304b\n                if dp[i][j][k] == -1:  #\n                    continue\n\n                for na in range(2):\n                    for nb in range(2):\n                        ni = i + 1\n                        nj = 0\n                        nk = k\n                        if na ^ nb != cx:  # a ^ b = A \u304b\uff1f\n                            continue\n\n                        ns = na + nb + j\n                        if ns % 2 != cs:  # a + b = S \u304b\uff1f\n                            continue\n\n                        # \u3053\u3053\u3067\u9077\u79fb\u306f\u78ba\u5b9a\n\n                        if ns >= 2:  # \u7e70\u308a\u4e0a\u304c\u308a\u51e6\u7406\n                            nj = 1\n\n                        if ca < na:\n                            nk = 1\n                        elif ca == na:\n                            nk = k\n                        else:\n                            nk = 0\n\n                        dp[ni][nj][nk] = max(dp[ni][nj][nk], dp[i][j][k] | (v * na))\n\n        X >>= 1\n        S >>= 1\n        A >>= 1\n        v <<= 1\n        # print(v)\n\n    a = dp[K - 1][0][0]\n    if a == -1 or a == 0:\n        print((-1))\n    else:\n        print((Arr[0] - a))\n\n\nmain()\n", "def main(n,a):\n    s=a[0]+a[1]\n    z=0\n    for ai in a[2:]:\n        z^=ai\n    # i+j=s,i<=a[0],i^j=z \u3068\u306a\u308bi,j\u3092\u63a2\u3059\n    # i+j=i^j+2*(i & j)\n    # s = z + 2*(i & j)\n    # i & j = (s-z)/2 = d\n    # z = 2*(i & j) - s = i ^ j\n    # d = (s-z) / 2\n    # z = x^y , x&y=0\n    # d^x,d^y\u306f\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3002d^x+d^y=d^x^d^y + 2*((d^x)&(d^y))= z + 2*d = s\n    # (d^x)^(d^y)=x^y=z\n    # (d^x)&(d^y)=d (z & d = 0 \u306e\u3068\u304d\u306e\u307f)\n    if s-z<0 or (s-z)%2==1:return -1\n    d=(s-z)//2\n    if d&z!=0:return -1\n    if not d<=a[0]:return -1\n    part=[]\n    i=0\n    while z//pow(2,i):\n        if (z//pow(2,i))%2==1:part.append(pow(2,i))\n        i+=1\n    ans=float('inf')\n    k=len(part)\n    x=0\n    while part:\n        tmp=part.pop()\n        if d^(x+tmp)<=a[0]:\n            x+=tmp\n    return a[0]-(d^x) if d^x else -1\n\n\nn=int(input())\na=list(map(int,input().split()))\nprint(main(n,a))", "import sys\nN = int(input())\nA = list(map(int,input().split()))\nALL = 0\nfor a in A:\n    ALL ^= a\n\nif ALL == 0:\n    print(0)\n    return\n\nALL ^= A[0] ^ A[1]\n\nK = A[0] + A[1]\nL = []\n\nfor i in range(40, -1, -1):\n    if (1 << i) & ALL:\n        L.append(1)\n        K -= (1 << i)\n    else:\n        if K >= 2 * (1 << i):\n            L.append(2)\n            K -= 1 << (i + 1)\n        else:\n            L.append(0)\n\nif K != 0:\n    print(-1)\n    return\n\nans = 0\nfor i in range(41):\n    if L[i] == 2:\n        ans += 1 << (40 - i)\n\nif ans >= A[0]:\n    print(-1)\n    return\n\nfor i in range(41):\n    if L[i] == 1:\n        if ans + (1 << (40 - i)) < A[0]:\n            ans += 1 << (40 - i)\n\nif ans == 0:\n    print(-1)\n    return\n\nprint(A[0] - ans)", "N=int(input())\nA=list(map(int,input().split()))\n\nXOR=0\nfor a in A[2:]:\n    XOR^=a\n\nS=A[0]+A[1]\n\nDP=[[[1<<60]*2 for i in range(2)] for j in range(60)]\nDP[0][0][1]=0\n\nfor i in range(59):\n    CX=0\n    if XOR & (1<<i)!=0:\n        CX=1\n\n    CS=0\n    if S & (1<<i)!=0:\n        CS=1\n\n    CA=0\n    if A[1] & (1<<i)!=0:\n        CA=1\n    \n    for j in range(2):\n        for k in range(2):\n            if DP[i][j][k]==1<<60:\n                continue\n\n            for na,nb in [(0,0),(0,1),(1,0),(1,1)]:\n                if na^nb != CX:\n                    continue\n                if (na+nb+j)%2 != CS:\n                    continue\n                \n                if na+nb+j>=2:\n                    nj=1\n                else:\n                    nj=0\n\n                if CA<nb:\n                    nk=1\n                elif CA==nb:\n                    nk=k\n                else:\n                    nk=0\n\n                DP[i+1][nj][nk]=min(DP[i+1][nj][nk],DP[i][j][k]|((1<<i)*nb))\n                #print(i,j,k,nj,nk,DP[i][j][k]|((1<<i)*nb))\n\nANS=DP[59][0][1]-A[1]\n\nif ANS>=A[0]:\n    print((-1))\nelse:\n    print(ANS)\n\n\n", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    x = 0\n    for i in range(2, n):\n        x ^= a[i]\n    d = a[0]+a[1]-x\n    if d%2 == 1 or d < 0:\n        print(-1)\n        return\n    d >>= 1\n    if d&x != 0 or d > a[0]:\n        print(-1)\n        return\n    k = x.bit_length()\n    tmp = d\n    # d^tmp \u306fd&x=0\u304b\u3089d+tmp\u3068\u4e00\u7dd2\n    for i in range(k-1, -1, -1):\n        if (x >> i) & 1:\n            if tmp+(1<<i) <= a[0]:\n                tmp += 1<<i\n    if 0 < tmp <= a[0]:\n        print(a[0]-tmp)\n    else:\n        print(-1)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "\ndef resolve():\n    # \u5f8c\u624b\u5fc5\u52dd\u306b\u306a\u308b\u79fb\u52d5\u500b\u6570\u306e\u6700\u5c0f\u3092\u6c42\u3081\u308b\n    # \u79fb\u52d5\u3057\u3066 A1xorA2 == A3~AN xor \u306b\u306a\u308b\u304b\n    # \u79fb\u52d5\u500b\u6570\u30921\u3064\u305a\u3064\u8a66\u3059\u3068TLE \u306a\u306e\u3067A1+A2\u30922\u3064\u306b\u5206\u3051\u3066\u6761\u4ef6\u3092\u6e80\u305f\u3059\u65b9\u6cd5\u3092\u63a2\u3059\n    N = int(input())\n    A = list(map(int, input().split()))\n\n    # A1 + A2\n    S = A[0] + A[1]\n\n    # 3\uff5eN\u756a\u76ee\u306exor\n    xor = 0\n    for a in A[2:]:\n        xor ^= a\n\n    # S == A1xorA2 + 2(A1&A2) -> 2(A1&A2) == S - A3~AN xor\n    # 2\u3067\u5272\u308c\u306a\u3051\u308c\u3070\u4e0d\u53ef\u80fd\n    S -= xor\n    if S%2 == 1:\n        return print(-1)\n\n    S //= 2\n    # A1&A2 \u3068 A1xorA2\u304c\u540c\u3058\u7b87\u6240\u306e\u30d3\u30c3\u30c8\u304c\u7acb\u3063\u3066\u3044\u305f\u3089\u4e0d\u53ef\u80fd\n    if (S&xor) != 0 or S > A[0]:\n        return print(-1)\n\n    # A1 \u306b\u6b8b\u3059\u500b\u6570\u306f\u6700\u4f4eA1&A2\u3067\u3042\u308a\u3001A1xorA2\u3092\u4e0a\u306e\u6841\u304b\u3089\u8caa\u6b32\u306b\u3001\n    # i\u6841\u76ee\u304c1\u304b\u3064\u3001\u6e1b\u3089\u3059\u500b\u6570\u306b\u52a0\u3048\u3066\u3082Ai\u4ee5\u4e0a\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u52a0\u3048\u3066\u3044\u304f\n    b = S\n    for i in range(41, -1, -1):\n        if xor>>i & 1 == 1:\n            if b + (1<<i) <= A[0]:\n                b += 1<<i\n\n    if b == 0:\n        print(-1)\n    else:\n        print(A[0] - b)\n\n\ndef __starting_point():\n    resolve()\n__starting_point()", "import sys\n\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ndef main():\n    n=II()\n    aa=LI()\n    x=0\n    for a in aa[2:]:x^=a\n    t=aa[0]+aa[1]-x\n    if t<0 or t&1:\n        print(-1)\n        return\n    t>>=1\n    #print(t)\n    a0=a1=0\n    for i in range(40,-1,-1):\n        dt=t>>i&1\n        dx=x>>i&1\n        if (dt,dx)==(1,1):\n            print(-1)\n            return\n        if (dt,dx)==(1,0):\n            a0|=1<<i\n            a1|=1<<i\n\n    for i in range(40,-1,-1):\n        dt=t>>i&1\n        dx=x>>i&1\n        if (dt,dx)==(0,1):\n            if (a0|1<<i)<=aa[0]:a0|=1<<i\n            else:a1|=1<<i\n\n    #print(a0,a1)\n    if a0>0 and a0<=aa[0]:print(aa[0]-a0)\n    else:print(-1)\n\nmain()\n", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    x = 0\n    for i in range(2, n):\n        x ^= a[i]\n    d = a[0]+a[1]-x\n    if d%2 == 1 or d < 0:\n        print(-1)\n        return\n    d >>= 1\n    if d&x != 0 or d > a[0]:\n        print(-1)\n        return\n    k = x.bit_length()\n    tmp = d\n    # d^tmp \u306fd&x=0\u304b\u3089d|tmp\u3068\u4e00\u7dd2\n    for i in range(k, -1, -1):\n        if (x >> i) & 1:\n            if tmp|1<<i <= a[0]:\n                tmp |= 1<<i\n    if 0 < tmp <= a[0]:\n        print(a[0]-tmp)\n    else:\n        print(-1)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\na, b, *L = map(int, input().split())\nx = 0\nfor l in L:\n  x ^= l\ns = a+b\nif s-x < 0 or (s-x)%2:\n  print(-1)\n  return\nd = (s-x)//2\nif d&x:\n  print(-1)\n  return\nif d > a:\n  print(-1)\n  return\nfor i in range(50, -1, -1):\n  if (x>>i)&1 and d|(1<<i) <= a:\n    d |= 1<<i\nif d == 0:\n  print(-1)\n  return\nans = a - d\nprint(ans)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\n# def sub(kouho, target):\n#     l = len(kouho)\n#     best = None\n#     for b in range(1<<l):\n#         v = 0\n#         for i in range(l.bit_length()):\n#             if b>>i&1:\n#                 v += 1<<i\n#         if \n                \n\nn = int(input())\na = list(map(int, input().split()))\n\nval = 0\nfor num in a[2:]:\n    val ^= num\nk = a[0] + a[1]\nif (k-val)%2!=0 or k<val:\n    ans = -1\nelse:\n    tmp = (k-val)//2\n    if tmp<0 or 2*tmp>k:\n        ans = -1\n    else:\n        v1 = tmp\n        v2 = tmp\n        kouho = []\n        ans = None\n        if tmp>a[0]:\n            ans = -1\n        diff = k - 2*tmp\n        for i in range(diff.bit_length()):\n            if (diff&1<<i) & tmp:\n                ans = -1\n                break\n            elif diff&1<<i:\n                kouho.append(1<<i)\n        s = sum(kouho)\n        if ans is None:\n            for num in kouho[::-1]:\n                s -= num\n                if v2+s<a[1]:\n                    v2 += num\n                elif v1+num<=a[0]:\n                    v1 += num\n                else:\n                    v2 += num\n            if v1==0:\n                ans = -1\n            else:\n                ans = a[0]-v1\n        else:\n            ans = -1\n        \nprint(ans)", "import sys\nsys.setrecursionlimit(10**7) #\u518d\u5e30\u95a2\u6570\u306e\u4e0a\u9650,10**5\u4ee5\u4e0a\u306e\u5834\u5408python\nimport math\nfrom copy import copy, deepcopy\nfrom copy import deepcopy as dcp\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect, bisect_right#2\u5206\u63a2\u7d22\n#bisect_left(l,x), bisect(l,x)#a\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u3042\u308a\u3002a\u306e\u4e2d\u304b\u3089x\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059\u3002right\u3060\u3068\u4ee5\u4e0b\nfrom collections import deque\n#deque(l), pop(), append(x), popleft(), appendleft(x)\n#q.rotate(n)\u3067 \u2192 \u306bn\u56de\u30ed\u30fc\u30c6\u30fc\u30c8\nfrom collections import Counter#\u6587\u5b57\u5217\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001\n#S=Counter(l),S.most_common(x),S.keys(),S.values(),S.items()\nfrom itertools import accumulate,combinations,permutations#\u7d2f\u7a4d\u548c\n#list(accumulate(l))\nfrom heapq import heapify,heappop,heappush\n#heapify(q),heappush(q,a),heappop(q) #q=heapify(q)\u3068\u3057\u306a\u3044\u3053\u3068\u3001\u8fd4\u308a\u5024\u306fNone\n#import fractions#\u53e4\u3044atcoder\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u5834\u5408GCD\u306a\u3069\u306f\u3053\u3053\u304b\u3089import\u3059\u308b\nfrom functools import lru_cache#pypy\u3067\u3082\u3046\u3054\u304f\n#@lru_cache(maxsize = None)#maxsize\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u6570\u306e\u6700\u5927\u5024\u30012**n\u304c\u6700\u3082\u9ad8\u52b9\u7387\nfrom decimal import Decimal\n\ndef input(): \n    x=sys.stdin.readline()\n    return x[:-1] if x[-1]==\"\\n\" else x\ndef printl(li): _=print(*li, sep=\"\\n\") if li else None\ndef argsort(s, return_sorted=False): \n    inds=sorted(range(len(s)), key=lambda k: s[k])\n    if return_sorted: return inds, [s[i] for i in inds]\n    return inds\ndef alp2num(c,cap=False): return ord(c)-97 if not cap else ord(c)-65\ndef num2alp(i,cap=False): return chr(i+97) if not cap else chr(i+65)\ndef matmat(A,B):\n    K,N,M=len(B),len(A),len(B[0])\n    return [[sum([(A[i][k]*B[k][j]) for k in range(K)]) for j in range(M)] for i in range(N)]\ndef matvec(M,v):\n    N,size=len(v),len(M)\n    return [sum([M[i][j]*v[j] for j in range(N)]) for i in range(size)]\ndef T(M):\n    n,m=len(M),len(M[0])\n    return [[M[j][i] for j in range(n)] for i in range(m)]\ndef main():\n    mod = 1000000007\n    #w.sort(key=itemgetter(1),reversed=True)  #\u4e8c\u500b\u76ee\u306e\u8981\u7d20\u3067\u964d\u9806\u4e26\u3073\u66ff\u3048\n\n    N = int(input())\n    #N, K = map(int, input().split())\n    A = tuple(map(int, input().split())) #1\u884c\u30d9\u30af\u30c8\u30eb\n    #L = tuple(int(input()) for i in range(N)) #\u6539\u884c\u30d9\u30af\u30c8\u30eb\n    #S = tuple(tuple(map(int, input().split())) for i in range(N)) #\u6539\u884c\u884c\u5217\n    ref=0\n    for i in range(2,N):\n        ref^=A[i]\n    \n    a0=A[0]\n    a1=A[1]\n    ans=0\n    #print(bin(a0),bin(a1),bin(ref))\n    INF=10**13\n    @lru_cache(None)\n    def dfs(a0,a1,ref):\n        inf=INF\n        if (a0 & 1) ^ (a1 & 1) != (ref & 1):\n            return inf\n        \n        if a0<0:\n            return inf\n        if ref == 0:\n            return inf if a0<a1 else (a0-a1)//2\n        a01=a0&1\n        a11=a1&1\n        ref1=ref&1\n        ans=inf\n        if a01^a11==ref1:\n            ans=min(ans,2*dfs(a0>>1,a1>>1,ref>>1))\n        ans=min(ans,2*dfs((a0-1)//2,(a1+1)//2,ref>>1)+1)\n\n        return ans\n    x=dfs(a0,a1,ref)\n    if x>=a0:\n        print(-1)\n    else:\n        print(x)\n    # for j in range(0,41):\n    #     a0j=(a0>>j)&1\n    #     a1j=(a1>>j)&1\n        \n    #     refj=(ref>>j)&1\n    #     #print(a0j,a1j,refj)\n    #     if a0j^a1j==refj:\n    #         nref=(ref>>(j+1))&1\n\n    #         na0=((a0>>(j+1))&1)\n    #         na1=((a1>>(j+1))&1)\n            \n    #         if ((a0>>(j+1))&1)^((a1>>(j+1))&1)!=nref:\n    #             #print(\"a\",na0,na1,nref)\n    #             shif=1<<j\n    #             if a0>0 and (((a0-shif))^(((a1+shif))==ref:\n    #                 ans+=shif\n    #                 a0-=shif\n    #                 a1+=shif\n\n\n    #         continue\n    #     else:\n    #         shif=1<<j\n\n    #         ans+=shif\n    #         a0-=shif\n    #         a1+=shif\n    #         #print(shif,a0,a1)\n    #         if a0<0:\n    #             print(-1)\n    #             return\n\n\n\n\n\n\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "from functools import reduce, lru_cache\n\nINF = float(\"inf\")\n\nN, a, b, *A = map(int, open(0).read().split())\nc = reduce(lambda a, b: a ^ b, A, 0)\n\n@lru_cache(None)\ndef solve(a, b, c):\n    if (a % 2) ^ (b % 2) != (c % 2):\n        return INF\n    if c == 0:\n        return INF if a < b else (a - b) // 2\n\n    return min(\n        2 * solve(a // 2, b // 2, c // 2),\n        1 + 2 * solve((a - 1) // 2, (b + 1) // 2, c // 2)\n    )\n\nprint(-1 if (res := solve(a, b, c)) >= a else res)", "n = int(input())\nA = list(map(int,input().split()))\na = A[0]\nb = A[1]\nx = 0\nfor i in A[2:]:\n    x ^= i\n \nd = {}\ndef F(a,b,xor):\n    if (a,b,xor) in d:\n        return d[(a,b,xor)]\n    if a&1 ^ b&1 != xor&1:\n        return float(\"INF\")\n    if xor == 0:\n        if a<b:\n            return float(\"INF\")\n        else:\n            return (a-b)//2\n    c1 = 2*F(a//2,b//2,xor//2)\n    c2 = 2*F((a-1)//2,(b+1)//2,xor//2) + 1\n    f = min(c1,c2)\n    d[(a,b,xor)] = f\n    return f\n \nans = F(a,b,x)\nif ans >= a:\n    print(-1)\nelse:\n    print(ans)", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    xorR = 0\n    for i in range(2, N):\n        xorR ^= A[i]\n    rbit = [0] * 41\n    K = xorR\n    for i in range(41):\n        rbit[i] = K % 2\n        K //= 2\n    \n    D = A[0] + A[1] - xorR\n    if D < 0 or D % 2 == 1:\n        print(-1)\n        return 0\n    else:\n        D //= 2\n        if D > A[0]:\n            print(-1)\n            return 0\n\n        K = D\n        dbit = [0] * 41\n        for i in range(41):\n            dbit[i] = K % 2\n            K //= 2\n            \n        A0 = D\n        for i in range(41):\n            if rbit[40 - i] == dbit[40 - i] and rbit[40 - i] == 1:\n                print(-1)\n                return 0\n            else:\n                if rbit[40 - i] == 1:\n                    if A0 + pow(2, 40 - i) <= A[0]:\n                        A0 += pow(2, 40 - i)\n        if A0 > 0: print(A[0] - A0)\n        else: print(-1)\n\n    return 0\n\ndef __starting_point():\n    solve()\n__starting_point()", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\n# def sub(kouho, target):\n#     l = len(kouho)\n#     best = None\n#     for b in range(1<<l):\n#         v = 0\n#         for i in range(l.bit_length()):\n#             if b>>i&1:\n#                 v += 1<<i\n#         if \n                \n\nn = int(input())\na = list(map(int, input().split()))\n\nval = 0\nfor num in a[2:]:\n    val ^= num\nk = a[0] + a[1]\nif (k-val)%2!=0 or k<val:\n    ans = -1\nelse:\n    tmp = (k-val)//2\n    if tmp<0 or 2*tmp>k:\n        ans = -1\n    else:\n        v1 = tmp\n        v2 = tmp\n        kouho = []\n        ans = None\n#         if tmp>a[0]:\n#             ans = -1\n        diff = k - 2*tmp\n        for i in range(diff.bit_length()):\n            if (diff&1<<i) & tmp:\n                ans = -1\n                break\n            elif diff&1<<i:\n                kouho.append(1<<i)\n        s = sum(kouho)\n        if ans is None:\n            for num in kouho[::-1]:\n                s -= num\n                if v2+s<a[1]:\n                    v2 += num\n                elif v1+num<=a[0]:\n                    v1 += num\n                else:\n                    v2 += num\n            if v1==0 or v1>a[0]:\n                ans = -1\n            else:\n                ans = a[0]-v1\n        else:\n            ans = -1\n        \nprint(ans)", "from functools import lru_cache\n\nN = int(input())\nA = list(map(int, input().split()))\n\ntmp = 0\nfor a in A[2:]:\n    tmp ^= a\n\nINF = 10 ** 18\n\n@lru_cache(None)\ndef F(a, b, xor):\n    if (a & 1) ^ (b & 1) != (xor & 1): #\u4e00\u6841\u76ee\u304c\u5408\u308f\u306a\u3044\u6642\n        return INF\n    if xor == 0:\n        return INF if a < b else (a - b) // 2 #xor = 0\u306b\u3067\u304d\u308b\u306e\u306f a\u3068b\u304c\u540c\u3058\u3068\u304d\u3060\u3051 --> a\u306e\u307b\u3046\u304c\u5927\u304d\u3044\u5fc5\u8981\u304c\u3042\u308b\n    #1\u306e\u4f4d\u3092\u653e\u7f6e\n    x = 2 * F(a // 2, b // 2, xor // 2)\n    #1\u306e\u4f4d\u3092\u79fb\u52d5\n    y = 2 * F((a - 1) // 2, (b + 1) // 2, xor // 2) + 1 # +1 \u306f\u79fb\u52d5\u30b3\u30b9\u30c8\n\n    x = min(x, y)\n    if x >= INF:\n        x = INF\n    \n    return x\n\nx = F(A[0], A[1], tmp)\nif x >= A[0]:\n    x = -1\n\nprint (x)", "def f_unfair_nim():\n    from functools import reduce\n    from operator import xor\n    N = int(input())\n    A = [int(i) for i in input().split()]\n\n    s = sum(A[:2])\n    x = reduce(xor, A[2:], 0)\n    if (s - x) % 2 != 0 or (((s - x) // 2) & x) != 0:\n        return -1\n\n    a = (s - x) // 2\n    for i in range(60, -1, -1):\n        if (x & (1 << i)) != 0 and (a ^ (1 << i) <= A[0]):\n            a ^= 1 << i\n    return A[0] - a if A[0] >= a > 0 else -1\n\nprint(f_unfair_nim())", "n=int(input())\na=list(map(int,input().split()))\nx=0\nfor i in a[2:]:x^=i\nm=(a[0]+a[1]-x)//2\nif a[0]+a[1]!=x+m*2or m>a[0]or(x&m)!=0:print(-1);return()\nl=1<<(max(x.bit_length(),m.bit_length())+1)\nwhile l>0:\n if((x&l)!=0)and((m|l)<=a[0]):m|=l\n l>>=1\nprint(a[0]-m if m!=0else-1)", "import random\nN = int(input())\nA = list(map(int, input().split()))\n \nS = A[0]+A[1]\nX = 0\nfor a in A[2:]:\n  X ^= a\n \nD = (S-X)>>1\nif S!=X+(D<<1) or D>A[0] or (X&D)!=0:\n  print(-1)\n  return\na = D\nb = 2**64\nwhile b>0:\n  if (X&b)!=0 and (a|b)<=A[0]:\n    a |= b\n  b >>= 1\nif a==0:\n  print(-1)\n  return\nprint(A[0]-a)", "N=int(input())\nA=list(map(int,input().split()))\nX=0\nif N>2:\n    X=A[2]\nfor i in range(3,N):\n    X=(X|A[i])-(X&A[i])\nS=A[0]+A[1]\nif (S-X)%2==1 or (S-X)<0:\n    print(-1)\nelse:\n    D=(S-X)//2\n    if D&X>0:\n        print(-1)\n    else:\n        a=D\n        for i in range(50,-1,-1):\n            if ((X>>i)&1) and ((a+(1<<i))<A[0]):\n                a+=(1<<i)\n        if a>0 and A[0]>=a:\n            print(A[0]-a)\n        else:\n            print(-1)", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    x = 0\n    for i in range(2, n):\n        x ^= a[i]\n    d = a[0]+a[1]-x\n    if d%2 == 1 or d < 0:\n        print(-1)\n        return\n    d >>= 1\n    if d&x != 0 or d > a[0]:\n        print(-1)\n        return\n    k = x.bit_length()\n    tmp = d\n    # d^tmp \u306fd&x=0\u304b\u3089d|tmp\u3068\u4e00\u7dd2\n    for i in range(40, -1, -1):\n        if (x >> i) & 1:\n            if tmp|1<<i <= a[0]:\n                tmp |= 1<<i\n    if 0 < tmp <= a[0]:\n        print(a[0]-tmp)\n    else:\n        print(-1)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\n\n# a = A_1, b = A_2, x = A_3 ^ ... ^ A_N, s = a + b \u3068\u3059\u308b\na, b = A[0], A[1]\nx = 0\nfor i in range(2, N):\n    x ^= A[i]\ns = a + b\n\nM = 42\n# dp[\u6841][\u7e70\u308a\u4e0a\u3052\u30d5\u30e9\u30b0][\u3053\u308c\u307e\u3067\u306e\u6841\u3067A\u3088\u308a\u5927\u304d\u3044\u30d5\u30e9\u30b0] := A\u3068\u306a\u308a\u5f97\u308b\u5024\u306e\u6700\u5927\u5024\ndp = [[[-1] * 2 for _ in range(2)] for _ in range(M + 1)]\ndp[0][0][0] = 0\nv = 1\nfor i in range(M):\n    cs = s & 1\n    cx = x & 1\n    ca = a & 1\n    for j in range(2):\n        for k in range(2):\n            if dp[i][j][k] == -1:\n                continue\n            for na in range(2):\n                for nb in range(2):\n                    # \u6761\u4ef61: na ^ nb = x\n                    if na ^ nb != cx:\n                        continue\n                    # \u6761\u4ef62: na + nb = S\n                    ns = na + nb + j\n                    if ns & 1 != cs:\n                        continue\n                    \n                    # \u9077\u79fb\u5148\u306ei, j, k\u3092\u6c42\u3081\u308b\n                    ni = i + 1\n                    nj = 1 if ns >= 2 else 0\n                    if na > ca:\n                        nk = 1\n                    elif na < ca:\n                        nk = 0\n                    else:\n                        nk = k\n                    \n                    # \u9077\u79fb\u5148\u3092\u6700\u5927\u5316\n                    dp[ni][nj][nk] = max(dp[ni][nj][nk], dp[i][j][k] + na * v)\n    s >>= 1\n    x >>= 1\n    a >>= 1\n    v <<= 1\n\namax = dp[M][0][0]\nif amax <= 0:\n    print((-1))\nelse:\n    print((A[0] - amax))\n", "import sys\n\nreadline = sys.stdin.readline\nreadall = sys.stdin.read\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    f, s, *a = nm()\n    x = 0\n    for c in a: x ^= c\n    if (f + s - x) % 2 or ((f + s - x) // 2) & x:\n        print(-1)\n        return\n    y = (f + s - x) // 2\n    for i in range(40, -1, -1):\n        if x & (1 << i) and y | (1 << i) < f:\n            y |= 1 << i\n    print(f - y if f >= y > 0 else -1)\n    return\n\nsolve()\n", "def main():\n    n=int(input())\n    A=list(map(int,input().split()))\n    x=A[0]^A[1]\n    for i in A:\n        x^=i\n    s=A[0]+A[1]\n    dp=[[[-1]*2 for _ in range(2)] for _ in range(43)]\n    dp[0][0][0]=0\n    v=1\n    a=A[0]\n    for i in range(42):\n        cx,ca,cs=x&1,a&1,s&1\n        for j in range(2):\n            for k in range(2):\n                if dp[i][j][k]==-1:\n                    continue\n                for na in range(2):\n                    for nb in range(2):\n                        if na^nb!=cx:\n                            continue\n                        ni,nj,nk,ns=i+1,0,k,na+nb+j\n                        if ns%2!=cs:\n                            continue\n                        if ns>=2:\n                            nj=1\n                        if ca<na:\n                            nk=1\n                        elif ca==na:\n                            nk=k\n                        else:\n                            nk=0\n                        dp[ni][nj][nk]=max(dp[ni][nj][nk],dp[i][j][k]|(v*na))\n        x>>=1\n        s>>=1\n        a>>=1\n        v<<=1\n    a=dp[42][0][0]\n    if a==0 or a==-1:\n        ans=-1\n    else:\n        ans=A[0]-a\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\n\nxor = 0\nfor a in A[2:]:\n    xor ^= a\n\nn = A[0] + A[1] - xor\nif n < 0 or n%2:\n    print(-1)\n    return\n\nn //= 2\na = b = 0\ndigit = 1\nd = []\nwhile n or xor:\n    n0 = n & 1; xor0 = xor & 1\n    if n0:\n        if xor0:\n            print(-1)\n            return\n        else:\n            a += digit\n            b += digit\n    else:\n        if xor0:\n            b += digit\n            d.append(digit)\n\n    digit *= 2\n    n >>= 1; xor >>= 1\n\nif a > A[0]:\n    print(-1)\n    return\n\nwhile d:\n    dd = d.pop()\n    if a + dd <= A[0]:\n        a += dd; b -= dd\n\nif a:\n    print(A[0] - a)\nelse:\n    print(-1)", "# F - Unfair Nim\n\nN = int(input())\nA = list(int(a) for a in input().split())\n\na = A[0]\nb = A[1]\nS = a + b\nX = 0\nfor i in range(2, N):\n    X ^= A[i]\n\ndp = [[[-1] * 2 for i in range(2)] for j in range(50)]\ndp[0][0][0] = 0\n\nfor i in range(49):\n    cur_s = S>>i&1\n    cur_x = X>>i&1\n    cur_a = a>>i&1\n    for j, k in ((0, 0), (0, 1), (1, 0), (1, 1)):\n        if dp[i][j][k] == -1:\n            continue\n        for p, q in ((0, 0), (0, 1), (1, 0), (1, 1)):\n            if p ^ q != cur_x:\n                continue\n            if (p + q + j)&1 != cur_s:\n                continue\n            ni = i + 1\n            nj = 0\n            if (p + q + j) >= 2:\n                nj = 1\n            if cur_a < p:\n                nk = 1\n            elif cur_a > p:\n                nk = 0\n            else:\n                nk = k\n            dp[ni][nj][nk] = max(dp[ni][nj][nk], dp[i][j][k]|(1<<i)*p)\n\ntmp = dp[49][0][0]\nif tmp == 0 or tmp == -1:\n    print(-1)\nelse:\n    print(a - tmp)", "N = list(map(int, input().split()))\nAs = list(map(int, input().split()))\n\nadded = As[0] + As[1]\nxored = 0\nfor A in As[2:]:\n    xored ^= A\n\nanded = added - xored\nif anded % 2 == 1:\n    print((-1))\n    return\nelse:\n    anded >>= 1\n\nleft_stones_l_A0 = '' # <= A[0] for sure.\nleft_stones_e_A0 = '' #not sure if this is <= A[0].\nfor i, (a, x) in enumerate(zip(format(anded, '045b'), format(xored, '045b'))):\n    if x == '0':\n        if a == '0':\n            left_stones_l_A0 += '0'\n            left_stones_e_A0 += '0'\n        else:\n            left_stones_l_A0 += '1'\n            left_stones_e_A0 += '1'\n    else:\n        if a == '0':\n            if int(left_stones_l_A0 + '1' + '1' * (44 - i), base = 2) <= As[0]:\n                left_stones_l_A0 += '1'\n            else:\n                left_stones_l_A0 += '0'\n            if int(left_stones_e_A0 + '1' + '1' * (44 - i), base = 2) <= As[0]:\n                left_stones_e_A0 += '1'\n                left_stones_l_A0 = left_stones_e_A0\n            elif int(left_stones_e_A0 + '1' + '0' * (44 - i), base = 2) <= As[0]:\n                left_stones_l_A0 = left_stones_e_A0 + '0'\n                left_stones_e_A0 += '1'\n            elif int(left_stones_e_A0 + '0' + '0' * (44 - i), base = 2) <= As[0]:\n                left_stones_e_A0 += '0'\n            else:\n                left_stones_e_A0 = left_stones_l_A0\n        else:\n            print((-1))\n            return\n\nif int(left_stones_e_A0, base = 2) <= As[0]:\n    ans = As[0] - int(left_stones_e_A0, base = 2)\nelse:\n    ans = As[0] - int(left_stones_l_A0, base = 2)\n\nif 0 <= ans < As[0]:\n    print(ans)\nelse:\n    print((-1))\n", "import sys\nsys.setrecursionlimit(10**7) #\u518d\u5e30\u95a2\u6570\u306e\u4e0a\u9650,10**5\u4ee5\u4e0a\u306e\u5834\u5408python\nimport math\nfrom copy import copy, deepcopy\nfrom copy import deepcopy as dcp\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect, bisect_right#2\u5206\u63a2\u7d22\n#bisect_left(l,x), bisect(l,x)#a\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u3042\u308a\u3002a\u306e\u4e2d\u304b\u3089x\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059\u3002right\u3060\u3068\u4ee5\u4e0b\nfrom collections import deque\n#deque(l), pop(), append(x), popleft(), appendleft(x)\n#q.rotate(n)\u3067 \u2192 \u306bn\u56de\u30ed\u30fc\u30c6\u30fc\u30c8\nfrom collections import Counter#\u6587\u5b57\u5217\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001\n#S=Counter(l),S.most_common(x),S.keys(),S.values(),S.items()\nfrom itertools import accumulate,combinations,permutations#\u7d2f\u7a4d\u548c\n#list(accumulate(l))\nfrom heapq import heapify,heappop,heappush\n#heapify(q),heappush(q,a),heappop(q) #q=heapify(q)\u3068\u3057\u306a\u3044\u3053\u3068\u3001\u8fd4\u308a\u5024\u306fNone\n#import fractions#\u53e4\u3044atcoder\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u5834\u5408GCD\u306a\u3069\u306f\u3053\u3053\u304b\u3089import\u3059\u308b\nfrom functools import lru_cache#pypy\u3067\u3082\u3046\u3054\u304f\n#@lru_cache(maxsize = None)#maxsize\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u6570\u306e\u6700\u5927\u5024\u30012**n\u304c\u6700\u3082\u9ad8\u52b9\u7387\nfrom decimal import Decimal\n\ndef input(): \n    x=sys.stdin.readline()\n    return x[:-1] if x[-1]==\"\\n\" else x\ndef printl(li): _=print(*li, sep=\"\\n\") if li else None\ndef argsort(s, return_sorted=False): \n    inds=sorted(range(len(s)), key=lambda k: s[k])\n    if return_sorted: return inds, [s[i] for i in inds]\n    return inds\ndef alp2num(c,cap=False): return ord(c)-97 if not cap else ord(c)-65\ndef num2alp(i,cap=False): return chr(i+97) if not cap else chr(i+65)\ndef matmat(A,B):\n    K,N,M=len(B),len(A),len(B[0])\n    return [[sum([(A[i][k]*B[k][j]) for k in range(K)]) for j in range(M)] for i in range(N)]\ndef matvec(M,v):\n    N,size=len(v),len(M)\n    return [sum([M[i][j]*v[j] for j in range(N)]) for i in range(size)]\ndef T(M):\n    n,m=len(M),len(M[0])\n    return [[M[j][i] for j in range(n)] for i in range(m)]\ndef main():\n    mod = 1000000007\n    #w.sort(key=itemgetter(1),reversed=True)  #\u4e8c\u500b\u76ee\u306e\u8981\u7d20\u3067\u964d\u9806\u4e26\u3073\u66ff\u3048\n\n    N = int(input())\n    #N, K = map(int, input().split())\n    A = tuple(map(int, input().split())) #1\u884c\u30d9\u30af\u30c8\u30eb\n    #L = tuple(int(input()) for i in range(N)) #\u6539\u884c\u30d9\u30af\u30c8\u30eb\n    #S = tuple(tuple(map(int, input().split())) for i in range(N)) #\u6539\u884c\u884c\u5217\n    ref=0\n    for i in range(2,N):\n        ref^=A[i]\n    \n    a0=A[0]\n    a1=A[1]\n    s=a0+a1\n\n    # ans=0\n    # #print(bin(a0),bin(a1),bin(ref))\n    # INF=10**13\n    # @lru_cache(None)\n    # def dfs(a0,a1,ref):\n    #     inf=INF\n    #     if (a0 & 1) ^ (a1 & 1) != (ref & 1):\n    #         return inf\n        \n    #     if a0<0:\n    #         return inf\n    #     if ref == 0:\n    #         return inf if a0<a1 else (a0-a1)//2\n    #     a01=a0&1\n    #     a11=a1&1\n    #     ref1=ref&1\n    #     ans=inf\n    #     if a01^a11==ref1:\n    #         ans=min(ans,2*dfs(a0>>1,a1>>1,ref>>1))\n    #     ans=min(ans,2*dfs((a0-1)//2,(a1+1)//2,ref>>1)+1)\n\n    #     return ans\n    # x=dfs(a0,a1,ref)\n    # if x>=a0:\n    #     print(-1)\n    \n    ##\u6841dp\n    dp=[[[-1]*2 for _ in range(2)] for _ in range(43)]\n    refi=ref\n    si=s\n    dp[0][0][0]=0\n    shift=1\n    a=a0\n    for i in range(42):\n        ni=i+1\n        for j in range(2):\n            for k in range(2):\n                cur=dp[i][j][k]\n                if cur==-1:\n                    continue\n                for ai in range(0,2):\n                    bi=(refi&1)^ai\n                    if (bi+j+ai)&1!=si&1:\n                        continue\n                    if ai>a&1:\n                        nk=1\n                    elif ai==a&1:\n                        nk=k\n                    else:\n                        nk=0\n\n                    nj=0\n                    if bi+j+ai>1:\n                        nj=1\n                    \n                    dp[ni][nj][nk]=max(dp[ni][nj][nk],cur|shift*ai)\n                    \n        refi=(refi>>1)\n        si>>=1\n        a>>=1\n        shift<<=1\n    x=dp[-1][0][0]\n    if x==-1 or x==0:\n        print(-1)\n    else:\n        print(a0-x)\n\n\n                \n\n\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nA = [int(a) for a in input().split()]\nt = 0\nfor a in A[2:]:\n    t ^= a\ns = sum(A[:2])\nif s < t or (s ^ t) & 1:\n    print(-1)\n    return\n \nu = (s - t) // 2\na = A[0]\nn = 0\nfor i in range(40)[::-1]:\n    b, c = (t >> i) & 1, (u >> i) & 1\n    if b == c == 1:\n        print(-1)\n        return\n    if b == 0 and c == 1:\n        n += 1 << i\nfor i in range(40)[::-1]:\n    b, c = (t >> i) & 1, (u >> i) & 1\n    if b == 1 and c == 0:\n        if n + (1 << i) <= a:\n            n += 1 << i\n \nif n > a or n == 0:\n    print(-1)\nelse:\n    print(a - n)", "N=int(input())\nA=list(map(int,input().split()))\nS=A[0]+A[1]\nX=0\nfor i in range(2,N):\n    X=X^A[i]\nif (S-X)%2==1 or S<X:\n    print((-1))\n    return\nD=(S-X)//2\nif X&D!=0:\n    print((-1))\n    return\na=0\n#print(X,D)\nB=[0 for i in range(42)]\nfor k in range(41,-1,-1):\n    x=(X&(1<<k))>>k\n    d=(D&(1<<k))>>k\n    if (x,d)==(0,0):\n        pass\n    elif (x,d)==(0,1):\n        a=a^(1<<k)\n    elif (x,d)==(1,0):\n        B[k]=1\n    else:\n        pass\nfor k in range(41,-1,-1):\n    if B[k]==0:\n        continue\n    if a^(1<<k)<A[0]:\n        a=a^(1<<k)\nif 0<a<=A[0]:\n    print((A[0]-a))\nelse:\n    print((-1))\n", "import random\n\nN = int(input())\nA = list(map(int, input().split()))\n\nS = A[0]+A[1]\nX = 0\nfor a in A[2:]:\n  X ^= a\n\nD = (S-X)>>1\nif S!=X+(D<<1) or D>A[0] or (X&D)!=0:\n  print((-1))\n  return\n\na = D\nb = 2**64\nwhile b>0:\n  if (X&b)!=0 and (a|b)<=A[0]:\n    a |= b\n  b >>= 1\nif a==0:\n  print((-1))\n  return\nprint((A[0]-a))\n", "n = int(input())\nl = list(map(int,input().split()))\n\nx = 0\ns = l[0]+l[1]\nfor i in l[2:]:\n    x ^= i\nif x > s or (s-x)%2 or ((s-x)//2)&x:\n    print(-1)\n    return\na = (s-x)//2\nif a > l[0]:\n    print(-1)\n    return\nfor i in range(50,-1,-1):\n    if 1<<i & x:\n        if a+ (1<<i) <= l[0]:\n            a += 1<<i\nif a == 0:\n    print(-1)\nelse:\n    print(l[0]-a)", "import sys\n\nreadline = sys.stdin.readline\nreadall = sys.stdin.read\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\ndef solve():\n    n = ni()\n    f, s, *a = nm()\n    x = 0\n    for c in a: x ^= c\n    if (f + s - x) % 2 or ((f + s - x) // 2) & x:\n        print(-1)\n        return\n    y = (f + s - x) // 2\n    for i in range(40, -1, -1):\n        if x & (1 << i) and y | (1 << i) <= f:\n            y |= 1 << i\n    print(f - y if f >= y > 0 else -1)\n    return\n\nsolve()\n", "n = int(input())\na = list(map(int, input().split()))\n\nS = a[0] + a[1]\nC = 0\nfor i in range(2, n):\n    C ^= a[i]\n\nD = S - C\n\nif D < 0 or D % 2 == 1:\n    print(-1)\n    return\n\nD //= 2\n\nans = 0\n\nfree_keta = []\n\nfor i in range(100):\n    if (C & (1 << i)) != 0:\n        free_keta.append(i)\n        if (D & (1 << i)) != 0:\n            print(-1)\n            return\n    else:\n        ans += (D & (1 << i))\n\nif ans > a[0]:\n    print(-1)\n    return\n        \nfor keta in free_keta[::-1]:\n    if ans + (1 << keta) <= a[0]:\n        ans += (1 << keta)\n\nif ans == 0:\n    print(-1)\n    return\n    \nprint(a[0] - ans)", "import numpy as np\n\nLI = lambda: list(map(int, input().split()))\n\nN = int(input())\nA = LI()\n\n\ndef main():\n    s = 0\n    for a in A[2:]:\n        s ^= a\n    t = A[0] + A[1]\n    f = lambda x: list(map(int, format(x, \"050b\")[::-1]))\n    sb = f(s)\n    tb = f(t)\n    ab = f(A[0])\n\n    dp = np.full((51, 2, 2), -1, dtype=int)\n    dp[0][0][0] = 0\n    for i in range(50):\n        for j in range(2):\n            for k in range(2):\n                if dp[i][j][k] == -1:\n                    continue\n                for na in range(2):\n                    for nb in range(2):\n                        if na ^ nb != sb[i] or (na + nb + j) % 2 != tb[i]:\n                            continue\n                        nj = (na + nb + j) // 2\n                        if na == ab[i]:\n                            nk = k\n                        elif na == 1:\n                            nk = 1\n                        else:\n                            nk = 0\n                        v = dp[i][j][k] + (2 ** i) * na\n                        dp[i + 1][nj][nk] = max(dp[i + 1][nj][nk], v)\n\n    if dp[-1][0][0] < 1:\n        ans = -1\n    else:\n        ans = A[0] - dp[-1][0][0]\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#\u89e3\u8aac\u65b9\u91dd\nimport math\nN = int(input())\nA = list(map(int, input().split()))\n\nall_xor = 0\nfor i in range(N):\n  all_xor = all_xor ^ A[i]\n\nfore = A[0] ^ A[1]#S\nback = fore ^ all_xor #X\n#a + b = (a xor b) + 2 * (a and b)\n#a xor b = back, a + b = A[0] + A[1]\n\na_and_b = (A[0] + A[1] - back) / 2\n#print(a_and_b, back)\n#a_and_b\u306f\u975e\u8ca0\u6574\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b\nif (a_and_b % 1 != 0) or (a_and_b < 0):\n  print((-1))\n  return\na_and_b = int(a_and_b)\n\n#print(a_and_b, back, a_and_b & back)\n#a_and_b\u3068back\u306b\u306f\u5171\u901a\u306ebit\u304c\u306a\u3044\nif (a_and_b & back) != 0:\n  print((-1))\n  return\n\nans = a_and_b\n#print(math.log2(32))\nif back == 0:\n  if (ans == 0):\n    print((-1))\n  else:\n    print((A[0] - ans))\n  return\nelse:\n  if ans > A[0]:\n    print((-1))\n    return\n  nn = int(math.log2(back)) + 1\n  #print(nn)\n  #print(2 >> 1)\n  #print(2 << 1)\n  for i in range(nn + 1):\n    #print(back, nn - i)\n    if ((back >> (nn - i)) & 1):\n      #print(ans, 2 << (nn - i))\n      k = ans + (1 << (nn - i))\n      #print(\"k\", k, i)\n      if k <= A[0]:\n        ans = k \n  if (ans == 0):\n    print((-1))\n  else:\n    print((A[0] - ans))\n  \n", "n=int(input())\nA=[int(i) for i in input().split()]\n\nA1=A[0]\nA2=A[1]\n\nc=0\nfor ele in A[2:]:\n    c^=ele\n\nd=A1+A2-c\nif d%2==1:\n    print((-1))\nelse:\n    d=d//2\n    #print(bin(c),bin(d))\n    flgs=[]\n    \n    for i in range(41):\n        fand= d & (1<<i)\n        fxor= c & (1<<i)\n        \n        if fand & fxor:\n            print((-1))\n            break\n        elif fand:\n            flgs.append(1)\n        elif fxor:\n            flgs.append(2)\n        else:\n            flgs.append(0)\n    else:\n        flgs=flgs[::-1]\n        #print(flgs)\n        ans=0\n        for i in range(len(flgs)):\n            if flgs[i]==1:\n                ans+=2**(41-i-1)\n        \n        if ans>A1:\n            print((-1))\n        else:\n            \n            for i in range(len(flgs)):\n                if flgs[i]==2:\n                    if ans + 2**(41-i-1) <= A1:\n                        ans+=2**(41-i-1)\n            \n            #print(ans)\n            \n            if ans==0:\n                print((-1))\n            else:\n                print((A1-ans))\n            \n                    \n                    \n            \n        \n", "#\u5199\u7d4c\n#https://atcoder.jp/contests/abc172/submissions/14777611\n\ndef resolve():\n    N = int(input())\n    A = [int(a) for a in input().split()]\n    x = 0\n    for a in A[2:]:\n        x ^= a                              # ^\u306fXOR\u8a08\u7b97\n    s = sum(A[:2])\n    if s < x or (s ^ x) & 1:\n        print(-1)\n        return\n    d = (s-x) // 2\n    a = A[0]\n    n = 0\n    for i in range(40)[::-1]:\n        b,c = (x >> i) & 1, (d >> i) & 1    # >> i \u306f\u53f3\u65b9\u5411i\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\n        if b == c == 1:\n            print(-1)\n            return\n        if b == 0 and c == 1:\n            n += 1 << i\n    for i in range(40)[::-1]:\n        b,c = (x >> i) & 1, (d >> i) & 1\n        if b == 1 and c == 0:\n            if n + (1 << i) <= a:\n                n += 1 << i\n    if n > a or n == 0:\n        print(-1)\n    else:\n        print(a-n)\nresolve()", "N = int(input())\nA = [int(a) for a in input().split()]\nt = 0\nfor a in A[2:]:\n    t ^= a\ns = sum(A[:2])\nif s < t or (s ^ t) & 1:\n    print(-1)\n    return\n\nu = (s - t) // 2\na = A[0]\nn = 0\nfor i in range(40)[::-1]:\n    b, c = (t >> i) & 1, (u >> i) & 1\n    if b == c == 1:\n        print(-1)\n        return\n    if b == 0 and c == 1:\n        n += 1 << i\nfor i in range(40)[::-1]:\n    b, c = (t >> i) & 1, (u >> i) & 1\n    if b == 1 and c == 0:\n        if n + (1 << i) <= a:\n            n += 1 << i\n\nif n > a or n == 0:\n    print(-1)\nelse:\n    print(a - n)", "N = int(input())\nA,B,*C = list(map(int,input().split()))\nX = 0\nfor c in C:\n    X ^= c\nS = A+B\n\nK = 43\ndp = [[[-1]*2 for _ in range(2)] for _ in range(K)]\ndp[0][0][0] = 0\n\nfor i in range(K-1):\n    cx = (X>>i)&1\n    cs = (S>>i)&1\n    ca = (A>>i)&1\n    for j in range(2):\n        for k in range(2):\n            if dp[i][j][k] == -1: continue\n            for na in range(2):\n                for nb in range(2):\n                    if (na^nb) != cx: continue\n                    ns = na+nb+j\n                    if ns%2 != cs: continue\n                    nj = ns//2\n                    if ca < na:\n                        nk = 1\n                    elif ca == na:\n                        nk = k\n                    else:\n                        nk = 0\n                    dp[i+1][nj][nk] = max(dp[i+1][nj][nk], dp[i][j][k] + 2**i * na)\na = dp[-1][0][0]\nif a==0 or a==-1:\n    print(-1)\nelse:\n    print(A - a)", "n = int(input())\nA = list(map(int,input().split()))\na = A[0]\nb = A[1]\nx = 0\nfor i in A[2:]:\n    x ^= i\n\nd = {}\ndef F(a,b,xor):\n    if (a,b,xor) in d:\n        return d[(a,b,xor)]\n    if a&1 ^ b&1 != xor&1:\n        return float(\"INF\")\n    if xor == 0:\n        if a<b:\n            return float(\"INF\")\n        else:\n            return (a-b)//2\n    c1 = 2*F(a//2,b//2,xor//2)\n    c2 = 2*F((a-1)//2,(b+1)//2,xor//2) + 1\n    f = min(c1,c2)\n    d[(a,b,xor)] = f\n    return f\n\nans = F(a,b,x)\nif ans >= a:\n    print(-1)\nelse:\n    print(ans)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    xor = 0\n    for i in range(2, n):\n        xor ^= a[i]\n    s = a[0] + a[1]\n    dp = [[[-1 for k in range(2)] for j in range(2)] for i in range(45)]\n    p = a[0]\n    dp[0][0][0] = 0\n    for i in range(44):\n        crrx = xor&1\n        crrs = s&1\n        crrp = p&1\n        for j in range(2):\n            for k in range(2):\n                if dp[i][j][k] == -1:\n                    continue\n                for nxtp in range(2):\n                    for nxtq in range(2):\n                        nxti = i+1\n                        nxtj = 0\n                        nxtk = k\n                        if (nxtp ^ nxtq) != crrx:\n                            continue\n                        nxts = nxtp+nxtq+j\n                        if nxts%2 != crrs:\n                            continue\n                        if nxts >= 2:\n                            nxtj = 1\n                        if crrp < nxtp:\n                            nxtk = 1\n                        elif crrp == nxtp:\n                            nxtk = k\n                        else:\n                            nxtk = 0\n                        dp[nxti][nxtj][nxtk] = max(dp[nxti][nxtj][nxtk], dp[i][j][k]+(1<<i)*nxtp)\n        xor //= 2\n        s //= 2\n        p //= 2\n    if dp[-1][0][0] > 0:\n        print(a[0] - dp[-1][0][0])\n    else:\n        print(-1)\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\nN_MAX = 200000 + 5\nINF = 10**9 + 7\nsys.setrecursionlimit(N_MAX)\nMOD = 10**9 + 7\n\n\ndef main():\n    _ = int(sys.stdin.readline().rstrip())\n    Arr = [int(x) for x in sys.stdin.readline().rstrip().split()]\n\n    K = 43\n\n    #\n    A = Arr[0]\n    B = Arr[1]\n\n    S = A + B\n    X = 0\n    for i in range(2, len(Arr)):\n        X ^= Arr[i]\n\n    # print(S, X)\n\n    # \u6b21\u3092\u6e80\u305f\u3059a, b \u304c\u898b\u3064\u304b\u308b\u304b\uff1f\n    #  a+b=S, a^b=X, a<=A\n\n    # \u6841DP : \u6841\u3092\u4e00\u3064\u305a\u3064\u6c7a\u3081\u3066\u3044\u304f\u3088\u3046\u306aDP\n    # dp[\u4eca\u306e\u6841\u6570 = 0:42][\u7e70\u308a\u4e0a\u304c\u308a\u304c\u3042\u308b\u304b = 0,1][\u4eca\u307e\u3067\u304cA\u4ee5\u4e0b\u304b\u3069\u3046\u304b 0=\u4ee5\u4e0b\u30011=\u3088\u308a\u5927\u304d\u3044] = \u6700\u5927\u5024\n    # \u5024\u306f\u6700\u5927\u5024\u3002\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3051\u308c\u3070 -1\n    dp = [[[-1 for x in [0, 1]] for _ in [0, 1]] for _ in range(K)]\n\n    dp[0][0][0] = 0  # \u6700\u521d\n\n    v = 1\n    for i in range(K - 1):  # \u6841\u6570\n        cx = X & 1  # current X\n        cs = S & 1  # current S\n        ca = A & 1  # current A\n        for j in range(2):  # \u7e70\u308a\u4e0a\u304c\u308a\u3042\u308b\uff0f\u306a\u3044\n            for k in range(2):  # \u4eca\u307e\u3067\u306e\u7bc4\u56f2\u304c A \u4ee5\u4e0b\u304b\u3069\u3046\u304b\n                if dp[i][j][k] == -1:  #\n                    continue\n\n                for na in range(2):\n                    for nb in range(2):\n                        ni = i + 1\n                        nj = 0\n                        nk = k\n                        if na ^ nb != cx:  # a ^ b = A \u304b\uff1f\n                            continue\n\n                        ns = na + nb + j\n                        if ns % 2 != cs:  # a + b = S \u304b\uff1f\n                            continue\n\n                        # \u3053\u3053\u3067\u9077\u79fb\u306f\u78ba\u5b9a\n\n                        if ns >= 2:  # \u7e70\u308a\u4e0a\u304c\u308a\u51e6\u7406\n                            nj = 1\n\n                        if ca < na:\n                            nk = 1\n                        elif ca == na:\n                            nk = k\n                        else:\n                            nk = 0\n\n                        dp[ni][nj][nk] = max(dp[ni][nj][nk], dp[i][j][k] | (v * na))\n\n        X >>= 1\n        S >>= 1\n        A >>= 1\n        v <<= 1\n        # print(v)\n\n    a = dp[K - 1][0][0]\n    if a == -1 or a == 0:\n        print(-1)\n    else:\n        print(Arr[0] - a)\n\n\nmain()", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    x, y = a[0], a[1]\n    nim = 0\n    for i in range(2, n):\n        nim ^= a[i]\n    ans = 0\n\n    while((x ^ y) != nim):\n        for i in range(50, -1, -1):\n            j = (nim >> i) & 1\n            xy = ((x >> i) ^ (y >> i)) & 1\n            if j != xy:\n                m = min(x % (2**i)+1, 2**i-(y % (2**i)))\n                if x % (2**i)+1 == 2**i-(y % (2**i)):\n                    print((-1))\n                    return\n                x -= m\n                y += m\n                ans += m\n                if x <= 0:\n                    print((-1))\n                    return\n                break\n        else:\n            if (x ^ y) != nim:\n                print((-1))\n                return\n    print(ans)\n\n\nmain()\n", "def digit(x):\n    ret = 0\n    while x > 0:\n        x //= 2\n        ret += 1\n    return ret\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    g = 0\n    for i in range(2, N):\n        g ^= A[i]\n    a0 = A[0]\n    a1 = A[1]\n    ans = 0\n    half = 2**20\n    if a0 < half:\n        for i in range(a0):\n            t0 = a0 - i\n            t1 = a1 + i\n            if t0 ^ t1 == g:\n                print(i)\n                return\n        print((-1))\n        return\n\n    # check upper part (2**20 <= x)\n    ug = g >> 20\n    b0 = a0 >> 20\n    b1 = a1 >> 20\n    upper_ans_0 = -1 # a0: no borrow, a1: no carry\n    for i in range(b0):\n        t0 = b0 - i\n        t1 = b1 + i\n        if t0 ^ t1 == ug:\n            upper_ans_0 = i\n            break\n\n    upper_ans_1 = -1 # a0: no borrow, a1: carry\n    for i in range(b0):\n        t0 = b0 - i\n        t1 = b1 + 1 + i\n        if t0 ^ t1 == ug:\n            upper_ans_1 = i\n            break\n\n    upper_ans_2 = -1 # a0: borrow, a1: no carry\n    for i in range(b0-1):\n        t0 = b0 - 1 - i\n        t1 = b1 + i\n        if t0 ^ t1 == ug:\n            upper_ans_2 = i\n            break\n\n    upper_ans_3 = -1 # a0: borrow, a1: carry\n    for i in range(b0-1):\n        t0 = b0 - 1 - i\n        t1 = b1 + 1 + i\n        if t0 ^ t1 == ug:\n            upper_ans_3 = i\n            break\n\n    # print(upper_ans_0, upper_ans_1, upper_ans_2, upper_ans_3)\n    # check lower part (0 ... 2**20)\n    lower_answers = []\n    for i in range(half):\n        t0 = (a0 - i) % half\n        t1 = (a1 + i) % half\n        if t0 ^ t1 == (g % half):\n            lower_answers.append(i)\n    if len(lower_answers) == 0:\n        print((-1))\n        return\n    # print(len(lower_answers))\n    # print(lower_answers)\n    answers = []\n    for l in lower_answers:\n        if (a0 % half) >= l:\n            # a0: no borrow\n            if (a1 % half) + l < half:\n                # no carry\n                if upper_ans_0 != -1:\n                    answers.append((upper_ans_0 << 20) + l)\n            else:\n                # carry\n                if upper_ans_1 != -1:\n                    answers.append((upper_ans_1 << 20) + l)\n        else:\n            # a0: borrow\n            if (a1 % half) + l < half:\n                # no carry\n                if upper_ans_2 != -1:\n                    answers.append((upper_ans_2 << 20) + l)\n            else:\n                # carry\n                if upper_ans_3 != -1:\n                    answers.append((upper_ans_3 << 20) + l)\n    if len(answers) == 0:\n        print((-1))\n        return\n    answers.sort()\n    print((answers[0]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nA = list(map(int, input().split()))\n\nxor = 0\nfor a in A[2:]:\n    xor ^= a\n\nn = A[0] + A[1] - xor\nif n < 0 or n%2:\n    print(-1)\n    return\n\nn //= 2\na = b = 0\ndigit = [1]\nd = []\ncount = 0    \nwhile n or xor:\n    n0 = n & 1; xor0 = xor & 1\n    if n0:\n        if xor0:\n            print(-1)\n            return\n        else:\n            a += digit[-1]\n            b += digit[-1]\n    else:\n        if xor0:\n            b += digit[-1]\n            d.append(count)\n\n    digit.append(digit[-1] * 2)\n    count += 1\n    n >>= 1; xor >>= 1\n\nif a > A[0]:\n    print(-1)\n    return\n\nwhile d:\n    c = d.pop()\n    if a + digit[c] <= A[0]:\n        a += digit[c]; b -= digit[c]\n\nif a:\n    print(A[0] - a)\nelse:\n    print(-1)", "import sys\n\nN_MAX = 200000 + 5\nINF = 10**9 + 7\nsys.setrecursionlimit(N_MAX)\nMOD = 10**9 + 7\n\nn = int(input())\nArr = list(map(int,input().split()))\n\nK = 43\n\n#\nA = Arr[0]\nB = Arr[1]\n\nS = A + B\nX = 0\nfor i in range(2, len(Arr)):\n    X ^= Arr[i]\n\n# print(S, X)\n\n# \u6b21\u3092\u6e80\u305f\u3059a, b \u304c\u898b\u3064\u304b\u308b\u304b\uff1f\n#  a+b=S, a^b=X, a<=A\n\n# \u6841DP : \u6841\u3092\u4e00\u3064\u305a\u3064\u6c7a\u3081\u3066\u3044\u304f\u3088\u3046\u306aDP\n# dp[\u4eca\u306e\u6841\u6570 = 0:42][\u7e70\u308a\u4e0a\u304c\u308a\u304c\u3042\u308b\u304b = 0,1][\u4eca\u307e\u3067\u304cA\u4ee5\u4e0b\u304b\u3069\u3046\u304b 0=\u4ee5\u4e0b\u30011=\u3088\u308a\u5927\u304d\u3044] = \u6700\u5927\u5024\n# \u5024\u306f\u6700\u5927\u5024\u3002\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3051\u308c\u3070 -1\ndp = [[[-1 for x in [0, 1]] for _ in [0, 1]] for _ in range(K)]\n\ndp[0][0][0] = 0  # \u6700\u521d\n\nv = 1\nfor i in range(K - 1):  # \u6841\u6570\n    cx = X & 1  # current X\n    cs = S & 1  # current S\n    ca = A & 1  # current A\n    for j in range(2):  # \u7e70\u308a\u4e0a\u304c\u308a\u3042\u308b\uff0f\u306a\u3044\n        for k in range(2):  # \u4eca\u307e\u3067\u306e\u7bc4\u56f2\u304c A \u4ee5\u4e0b\u304b\u3069\u3046\u304b\n            if dp[i][j][k] == -1:  #\n                continue\n\n            for na in range(2):\n                for nb in range(2):\n                    ni = i + 1\n                    nj = 0\n                    nk = k\n                    if na ^ nb != cx:  # a ^ b = A \u304b\uff1f\n                        continue\n\n                    ns = na + nb + j\n                    if ns % 2 != cs:  # a + b = S \u304b\uff1f\n                        continue\n\n                    # \u3053\u3053\u3067\u9077\u79fb\u306f\u78ba\u5b9a\n\n                    if ns >= 2:  # \u7e70\u308a\u4e0a\u304c\u308a\u51e6\u7406\n                        nj = 1\n\n                    if ca < na:\n                        nk = 1\n                    elif ca == na:\n                        nk = k\n                    else:\n                        nk = 0\n\n                    dp[ni][nj][nk] = max(dp[ni][nj][nk], dp[i][j][k] | (v * na))\n\n    X >>= 1\n    S >>= 1\n    A >>= 1\n    v <<= 1\n    # print(v)\n\na = dp[K - 1][0][0]\nif a == -1 or a == 0:\n    print(-1)\nelse:\n    print(Arr[0] - a)", "import random\n\nN = int(input())\nA = list(map(int, input().split()))\n\nS = A[0]+A[1]\nX = 0\nfor a in A[2:]:\n  X ^= a\n\nD = (S-X)>>1\nif S!=X+(D<<1) or D>A[0] or (X&D)!=0:\n  print((-1))\n  return\n\na = 0\nb = 2**64\nwhile b>0:\n  if (D&b)!=0:\n    a |= b\n  elif (X&b)!=0:\n    if (a|b|D&(b-1))<=A[0]:\n      a |= b\n  b >>= 1\nif a==0:\n  print((-1))\n  return\nprint((A[0]-a))\n", "from functools import lru_cache\n\ndef main():\n    N = int(input())\n    A = list(map(int, input().split()))\n    x = 0\n    for a in A[2:]:\n        x ^= a\n    a, b = A[0], A[1]\n    if (a ^ b ^ x) & 1 != 0:\n        return -1\n\n    @lru_cache(None)\n    def helper(a, b, x):\n        if a == 0:\n            return 0 if a ^ b == x else None\n        if (a ^ b) & 1 != x & 1:\n            return None\n        t1 = helper(a // 2, b // 2, x // 2)\n        t2 = helper((a - 1) // 2, (b + 1) // 2, x // 2)\n        if t1 is None and t2 is None:\n            return None\n        if t1 is None:\n            return t2 * 2 + 1\n        if t2 is None:\n            return t1 * 2\n        t1 = t1 * 2\n        t2 = t2 * 2 + 1\n        return min(t1, t2)\n    r = helper(a, b, x)\n    if r is None or r >= a:\n        return -1\n    return r\n\nprint((main()))\n", "N = int(input())\nA,B,*C = list(map(int,input().split()))\nX = 0\nfor c in C:\n    X ^= c\nS = A+B\n\nK = 43\ndp = [[[-1]*2 for _ in range(2)] for _ in range(K)]\ndp[0][0][0] = 0\n\nfor i in range(K-1):\n    cx = (X>>i)&1\n    cs = (S>>i)&1\n    ca = (A>>i)&1\n    for j in range(2):\n        for k in range(2):\n            if dp[i][j][k] == -1: continue\n            for na in range(2):\n                nb = na^cx\n                ns = na+nb+j\n                if ns%2 != cs: continue\n                nj = ns//2\n                if ca < na:\n                    nk = 1\n                elif ca == na:\n                    nk = k\n                else:\n                    nk = 0\n                dp[i+1][nj][nk] = max(dp[i+1][nj][nk], dp[i][j][k] + 2**i * na)\na = dp[-1][0][0]\nif a==0 or a==-1:\n    print(-1)\nelse:\n    print(A - a)", "INF=10**18\ndef calc(a,b,xor):\n  if (a,b,xor) in memo:\n    return memo[(a,b,xor)]\n  if (a&1)^(b&1)!=(xor&1):\n    return INF\n  if xor==0:\n    if a<b:\n      return INF\n    else:\n      return (a-b)//2\n  x=2*calc(a//2,b//2,xor//2)\n  y=2*calc((a-1)//2,(b+1)//2,xor//2)+1\n  memo[(a,b,xor)]=min(x,y)\n  return memo[(a,b,xor)]\n\nn=int(input())\narr=list(map(int,input().split()))\na,b=arr[0],arr[1]\nxor=0\nfor i in range(2,n):\n  xor^=arr[i]\nmemo={}\nans=calc(a,b,xor)\nif ans>=a:\n  print(-1)\nelse:\n  print(ans)", "# AFTER EDITORIAL\n\n\ndef solve(ls):\n    import math\n\n    x, y, *ls = ls\n    z = x + y\n    s = 0\n    for a in ls:\n        s ^= a\n\n    #\n    # Max a <= x  s.t.\n    #   0 = NimSum(a, (x + y) - a, ls)\n    # <=>\n    # Max a <= x s.t.\n    #   \u2203b.\n    #     a + b = x + y  (NOTE: a + b = a ^ b + 2 (a & b))\n    #     a ^ b = NimSum(ls)\n    # <=>\n    # Max a <= x s.t.\n    #   \u2203b.\n    #     a & b = (x + y - NimSum(ls)) / 2\n    #     a ^ b = NimSum(ls)\n    #\n\n    #\n    # Thus it amounts to solve\n    #   a ^ b = s\n    #   a & b = (z - s) / 2 = t\n    #\n    # which is bit-wise independent as\n    #   a  b  ^  &\n    #   0  0  0  0\n    #   0  1  1  0\n    #   1  0  1  0\n    #   1  1  0  1\n    #\n\n    if (z - s) < 0 or (z - s) % 2 == 1:\n        return -1\n\n    t = (z - s) // 2\n    s_t = s & t\n\n    if s_t > 0 or t > x:\n        return -1\n\n    a = t\n    b = t\n    first_set = math.floor(math.log2(s + 1))\n    for i in range(first_set + 1)[::-1]:\n        k = 1 << i\n        if s & k:\n            if (a | k) <= x:  # Greedy is optimal\n                a = a | k\n            else:\n                b = b | k\n    if a == 0:\n        return -1\n    return x - a\n\n\ndef main(istr, ostr):\n    n = int(istr.readline().strip())\n    ls = list(map(int, istr.readline().strip().split()))\n    result = solve(ls)\n    print(result, file=ostr)\n\n\ndef __starting_point():\n    import sys\n\n    main(sys.stdin, sys.stdout)\n\n__starting_point()", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,*a = list(map(int,read().split()))\n\nv = 0\nfor i in a[2:]:\n    v ^= i\n\nw = a[0]+a[1]\n\nz = w-v\nif z&1==1 or z<0:\n    print((-1))\nelse:\n    z //= 2\n    \"\"\"\n    z = p&q\n    v = p^q\n    \"\"\"\n    if z&v:\n        print((-1))\n        return\n\n    ans = z\n    for i in range(60,-1,-1):\n        m = 1<<i\n        if v&m:\n            if ans+m <= a[0]:\n                ans += m\n                #print(ans,i)\n\n    if ans > a[0] or ans==0: print((-1))\n    else: print((a[0]-ans))        \n        \n        \n        \n        \n            \n\n\n\n\n"]