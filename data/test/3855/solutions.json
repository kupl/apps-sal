["\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn=int(input())\n\nans=1\nwhile 2**ans-1<n:\n    ans+=1\nprint(ans)\n\n", "n = int(input())\n\nr = 0\nwhile n:\n    n //= 2\n    r += 1\n\nprint(r)\n", "from math import ceil, log2\n\nprint(ceil(log2(int(input()) + 1)))", "cur, add = 0, 1\nans = 0\nn = int(input())\nwhile cur < n:\n  cur += add\n  add *= 2\n  ans += 1\nprint(ans)\n", "from sys import stdin, stdout\nfrom collections import deque\nfrom math import log10\n\n\nn = int(stdin.readline())\nans = 0\n\nfor i in range(0, 31):\n    if (1 << i) <= n:\n        ans += 1\n\nstdout.write(str(ans))", "n = int(input())\np = 1\nx = 0\nwhile n > 0:\n    x += 1\n    n -= p\n    p <<= 1\n\nprint(x)\n", "#!/usr/bin/env python3\nn = int(input())\nprint(n.bit_length())\n", "from math import log\n\nx = int(input())\n\nprint(int(log(x, 2)) + 1)", "n = int(input())\ncur = 1\nans = 0\nwhile (n > 0) :\n\tn -= cur\n\tcur *= 2\n\tans += 1\nprint(ans)", "n = int(input())\np = 0\nwhile n > 0:\n    p = p + 1\n    n = n // 2\nprint(p)\n", "from math import log2\n\n\ndef __starting_point():\n    n = int(input())\n    l = int(log2(n)) + 1\n    if 2 ** l < n:\n        l += 1\n    print(l)\n\n__starting_point()", "n = int(input())\n\nprint(n.bit_length())\n", "import sys\nimport math\nf=sys.stdin\nout=sys.stdout\n\ndef lPowOf2leqn(n):\n    n=n|(n>>1)\n    n=n|(n>>2)\n    n=n|(n>>4)\n    n=n|(n>>8)\n    n=n|(n>>16)\n    return (n+1)>>1\n\nn=int(f.readline().rstrip('\\r\\n'))\nout.write(str(int(math.log2(lPowOf2leqn(n)))+1)+\"\\n\")", "import sys, math\nfrom itertools import permutations\n\nDEBUG = 0\nif DEBUG:\n    f = open(\"input.txt\", \"r\")\n    input = f.readline\nelse:\n    input = sys.stdin.readline\n\ndef mp():\n    return list(map(int, input().split()))\n\ndef main():\n    n = int(input())\n    c = 0\n    while n:\n        n //= 2\n        c += 1\n    print(c)\nmain()", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\ndef getIntList():\n    return list(map(int, input().split()))    \n\ntry :\n    #raise ModuleNotFoundError\n    import numpy\n    def dprint(*args, **kwargs):\n        print(*args, **kwargs, file=sys.stderr)\n    dprint('debug mode')\nexcept ModuleNotFoundError:\n    def dprint(*args, **kwargs):\n        pass\n\n\n\ninId = 0\noutId = 0\nif inId>0:\n    dprint('use input', inId)\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\nif outId>0:\n    dprint('use output', outId)\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n    atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n    \nN, = getIntList()\n \n\n\nres = 0\n\nnow = 1\n\nwhile N>0:\n    N-=now\n    now*=2\n    res+=1\n\nprint(res)\n\n\n\n\n\n", "USE_STDIO = False\n\nif not USE_STDIO:\n    try: import mypc\n    except: pass\n\ndef main():\n    n, = list(map(int, input().split(' ')))\n    print(n.bit_length())\n\ndef __starting_point():\n    main()\n\n\n\n\n__starting_point()", "from math import log2\nn  = int(input())\n\na = log2(n+1)\nres = int(a)\nif a- res > 0:\n    res +=1\n\nprint(res)", "import math\nn=int(input())\nprint(math.ceil(math.log2(n+1)))", "n=int(input())\nk=1\ncount=0\nwhile(n>=k):\n    k=k*2\n    count=count+1\nprint (count)", "n = int(input())\n\nprint(len(\"{0:b}\".format(n)))", "import math\nn=int(input())\n\nprint(int(math.log(n,2))+1)", "from math import log\n\nn = int(input())\n\nprint(int(log(n)/log(2)) + 1)\n", "from math import log2 as l\nn = int(input())\nk = 2 ** int(l(n)) - 1\nif k == n:\n    print(int(l(n)))\nelse:\n    print(int(l(n) + 1))\n", "from math import log2, ceil\nprint(ceil(log2(int(input())+1)))", "n=int(input())\nk=0\nwhile((2**k)-1<n):\n    k+=1\nprint(k)"]