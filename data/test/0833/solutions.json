["\"\"\"\nCodeforces Round 252 Div 2 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0:\n        return inputs\n    if mode == 1:\n        return inputs.split()\n    if mode == 2:\n        return [int(x) for x in inputs.split()]\n\ndef write(s=\"\\n\"):\n    if isinstance(s, list): s = \" \".join(s)\n    s = str(s)\n    print(s, end=\"\")\n\n################################################### SOLUTION\nn,v = read()\na = []\nfor i in range(n):\n    a.append(read())\na.sort(key=lambda x: x[0])\nres = 0\nfor day in range(1, 3002):\n    n = 0\n    while a and a[0][0] <= day:\n        if a[0][1] <= v-n:\n            n += a[0][1]\n            a[0][1] = 0\n        else:\n            a[0][1] -= v-n\n            n = v\n        if a[0][1] == 0:\n            a.pop(0)\n        else:\n            break\n    while a and a[0][0] == day-1: a.pop(0)\n    res += n\nprint(res)", "n, v = [int(i) for i in input().split()]\na = [0] * n\nb = [0] * n\ndays1 = [0] * 3001\ndays2 = [0] * 3001\nfor i in range(n):\n    a[i], b[i] = [int(j) for j in input().split()]\n    days1[a[i] - 1] += b[i]\n    days2[a[i]] += b[i]\nres = 0\nfor i in range(3001):\n    left = max(0, v - days2[i])\n    res += max(0, min(v, days2[i]))\n    res += min(left, days1[i])\n    if i != 3000:\n        days2[i + 1] -= min(left, days1[i])\nprint(res)", "n, v = map(int, input().split())\nT = 3010\na = [[] for i in range(T)]\nfor i in range(n):\n    x, y = map(int, input().split())\n    a[x].append([y, 1])\n\n    \nans = 0\nfor i in range(T):\n    a[i] = a[i][::-1]\n    j = 0\n    cur = v\n    while j < len(a[i]):\n        if a[i][j][0] > cur:\n            ans += cur\n            if a[i][j][1] == 0:\n                j += 1                \n            else:\n                a[i][j][0] -= cur\n            break\n        else:\n            ans += a[i][j][0]\n            cur -= a[i][j][0]\n        j += 1\n    for t in range(j, len(a[i])):\n        if a[i][t][1] != 0:\n            a[i + 1].append([a[i][t][0], 0])    \n            \n    \nprint(ans)", "n, v = [int(c) for c in input().split()]\nm = [[0, 0] for i in range(3003)]\n\n\n\nfor i in range(n):\n    a, b = [int(c) for c in input().split()]\n    m[a][1] += b\n    m[a+1][0] += b\n\n\nres = 0\n\nfor i in range(1,3002):\n    if v <= m[i][0]:\n        res += v\n    else:\n        from_future = v - m[i][0]\n        got_fr = min(from_future, m[i][1])\n        res += m[i][0] + got_fr\n        m[i+1][0] -= got_fr\n\nprint(res)", "n, v = list(map(int, input().split()))\n\ng = [0 for x in range(3002)]\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    g[a]+=(b)\n\nr = 0\n\nfor i in range(1, 3002):\n    c = v\n    r += min(c, max(g[i-1], 0))\n    c -= max(g[i-1], 0)\n    if c > 0:\n        r += min(c, g[i])\n        g[i] = max(g[i]-c, 0)\n\n\nprint(r)\n", "n,v=map(int,input().split())\nw=[]\nq=[v for i in range(3003)]\nfor i in range(n):\n    w.append(list(map(int,input().split())))\nw=sorted(w,reverse=True)\ns=0\nfor i in w:\n    a=i[0]\n    b=i[1]\n    if q[a+1]>=b:\n        q[a+1]-=b\n        s+=b\n        b=0\n    else:\n        b-=q[a+1]\n        s+=q[a+1]\n        q[a+1]=0\n    if q[a]>=b:\n        q[a]-=b\n        s+=b\n        b=0\n    else:\n        b-=q[a]\n        s+=q[a] \n        q[a]=0\nprint(s)", "n, v = list(map(int, input().split()))\ntrees = {}\ndays = set()\nfor i in range(n):\n        a, b = list(map(int, input().split()))\n        if a not in trees:\n            trees[a] = b\n        else:\n            trees[a] += b\n        days.add(a)\n\nmax_days = max(days)\ntotal = 0\nfor a in range(1, max_days+1):\n#    print(a)\n#    print(trees)\n    prev_collected = 0\n    if a-1 in trees:\n        prev_collected = min(trees[a-1], v)\n        trees[a-1] -= prev_collected\n        total += prev_collected\n#        print('prev_collected', prev_collected)\n    if a in trees:\n        collected = min(trees[a], v-prev_collected)\n        trees[a] -= collected\n        total += collected\n#        print('collected', collected)\n    elif a-1 in trees and prev_collected == 0:\n        add_collected = min(trees[a-1], v)\n        trees[a-1] -= add_collected\n        total += add_collected\n#        print('add_collected', add_collected)\n\nif max_days in trees:\n    total += min(trees[max_days], v)\nprint(total)\n        \n", "n, v = map(int, input().split())\ntrees = [list(map(int, input().split())) for i in range(n)]\ntrees.sort()\n\nmergedTrees = []\ntreeIndex = 0\ncurrentDay = trees[treeIndex][0]\nwhile treeIndex < len(trees):\n\tnbFruits = 0\n\twhile treeIndex < len(trees) and trees[treeIndex][0] == currentDay:\n\t\tnbFruits += trees[treeIndex][1]\n\t\ttreeIndex += 1\n\tmergedTrees.append([currentDay, nbFruits])\n\tif treeIndex < len(trees):\n\t\tcurrentDay = trees[treeIndex][0]\n\ncollected = 0\nfor treeIndex, tree in enumerate(mergedTrees):\n\tused = 0\n\tif treeIndex >= 1:\n\t\tlastTree = mergedTrees[treeIndex - 1]\n\t\tif lastTree[0] == tree[0] - 1:\n\t\t\tused = min(v, lastTree[1])\n\n\t\tcollected += min(v, lastTree[1])\n\n\n\tnextUsed = min(tree[1], v - used)\n\tcollected += nextUsed\n\ttree[1] -= nextUsed\n\nif len(mergedTrees) > 0:\n\tlastTree = mergedTrees[len(mergedTrees) - 1]\n\tcollected += min(v, lastTree[1])\n\nprint(collected)", "n,v = [int(i) for i in input().split()]\nf = 0\nl = [0]*3002\nfor i in range(n):\n    a,b = [int(i) for i in input().split()]\n    l[a] += b\n\nfor i in range(1,3002):\n    pick = min(v,l[i-1])\n    l[i-1] -= pick\n    pick2 = min(v-pick,l[i])\n    l[i] -= pick2\n    f += pick + pick2\n\nprint(f)\n", "n, v = list(map(int,input().split()))\nf = list()\nfor i in range(n):\n    f.append(list(map(int,input().split())))\nf.sort()\nsum = 0\ntoday = 0\ntomor = 0\nday = 0\nrest = 0\nfor tree in f:\n    if tree[0] > day + 1:\n        sum += min(tomor, v)\n        tomor = tree[1]\n        sum += min(tomor, v)\n        rest = v - min(tomor, v)\n        tomor -= min(tomor,v)\n        day = tree[0]\n    elif tree[0] == day + 1:\n        sum += min(tomor, v)\n        rest = v - min(tomor, v)\n        tomor = tree[1]\n        t = min(tomor, rest)\n        sum += t\n        rest -= t\n        tomor -= t\n        day = tree[0]\n    else :\n        tomor += tree[1]\n        t = min(tomor, rest)\n        sum += t\n        rest -= t\n        tomor -= t\nsum += min(tomor, v)\nprint(sum)\n", "def a():\t\n\tn, v = list(map(int, input().split(\" \")))\n\td = []\n\tfor i in range(n):\n\t\td.append(list(map(int, input().split(\" \"))))\n\td.sort()\n\n\tcur = 0\n\tnex = 0\n\tk = 0\n\tr = 0\n\tfor i in range(d[-1][0] + 2):\n\t\tnex = 0\n\t\tp = v\n\t\tif k != n:\n\t\t\twhile(d[k][0] < i):\n\t\t\t\tk += 1\n\t\t\t\tif k == n:\n\t\t\t\t\tbreak\n\t\tif k != n:\n\t\t\twhile(d[k][0] == i):\n\t\t\t\tnex += d[k][1]\n\t\t\t\tk += 1\n\t\t\t\tif k == n:\n\t\t\t\t\tbreak\n\t\tr += min(p, cur)\n\t\tp -= min(p, cur)\n\t\tr += min(p, nex)\n\t\tcur = nex - min(p, nex)\n\treturn r\n\nprint(a())\n\n", "total_plucked = 0\nn,v = list(map(int,input().split()))\nfruits = [0] * 3002\nplucked = [0] * 30002\nfor _ in range(n):\n    a,b = list(map(int,input().split()))\n    fruits[a] = fruits[a] + b\nfor i in range(1,3002):\n   plucked[i] = fruits[i - 1] if (fruits[i - 1] <= v) else v\n   if(plucked[i] < v):\n       pluck = fruits[i] if (fruits[i] <= v - plucked[i]) else v - plucked[i]\n       plucked[i] += pluck\n       fruits[i] -= pluck\n   #print(fruits[i - 1],plucked[i])\n   total_plucked += plucked[i]\nprint(total_plucked)\n \n", "\nn, v = map(int, input().split(' '))\ntrees = dict()\ncount = 0\nb_last = 0\n\nfor i in range(n):\n  a, b = map(int, input().split(' '))\n  if trees.get(a):\n    trees[a] += b\n  else:\n    trees[a] = b\n    \nm = max(trees.keys())    \nfor i in range(1, m+2):\n  if trees.get(i):\n    k = min(v, b_last)\n    count += k\n    k1 = min(v - k, trees[i])\n    count += k1\n    b_last = trees[i] - k1\n  else:\n    count += min(v, b_last)  \n    b_last = 0\n  \nprint(count)", "n, v = list(map(int, input().split()))\n\ng = [0 for x in range(3002)]\n\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    g[a]+=(b)\n\nr = 0\n\nfor i in range(1, 3002):\n    c = v\n    r += min(c, max(g[i-1], 0))\n    c -= max(g[i-1], 0)\n    if c > 0:\n        r += min(c, g[i])\n        g[i] = max(g[i]-c, 0)\n\n\nprint(r)\n\t    \n", "n, v = map(int, input().split())\ns, t = 0, [0] * 3002\nfor i in range(n):\n    a, b = map(int, input().split())\n    t[a] += b\nfor d in range(1, 3002):\n    ds = min(t[d - 1], v)\n    s += ds\n    ds = min(t[d], v - ds)\n    t[d] -= ds\n    s += ds\nprint(s)", "# -*- coding: utf-8 -*-\nimport sys\nf = sys.stdin\n#f = open('H:\\\\Portable Python 3.2.5.1\\\\test_248B1.txt') \nn, v  = list(map(int, f.readline().strip().split()))\n\np = [0]*3002\nfor i in range(n):\n    a, b  = list(map(int, f.readline().strip().split()))\n    p[a] += b\n#print(p[:5])    \nS = 0\nfor k in range(1,len(p)):\n    dv = min(v,p[k-1])\n    S += dv\n    p[k-1] -= dv    \n\n    dv = min(v-dv,p[k])    \n    S += dv\n    p[k] -= dv      \n    #print(k, S, v, dv, p[:5])   \nprint(S)\n\n", "R = lambda:list(map(int, input().split()))\nn, v = R()\nM = 3001\nx = [0] * M\nfor i in range(n):\n  a, b = R()\n  x[a - 1] += b\ny = [0] * M\ns = 0\nfor i in range(M):\n  a = min(v, y[i])\n  b = min(v - a, x[i])\n  s += a + b\n  if i < M - 1:\n    y[i + 1] = x[i] - b\nprint(s)", "R = lambda:list(map(int, input().split()))\nn, v = R()\nM = 3005\nx = [0] * M\nfor i in range(n):\n    a, b = R()\n    x[a - 1] += b\ny = [0] * M\ns = 0\nfor i in range(M):\n    a = min(v, y[i])\n    b = min(v - a, x[i])\n    s += a + b\n    if i < M - 1:\n        y[i + 1] = x[i] - b\nprint(s)", "DEBUG = False\nn, v = [int(x) for x in input().split()]\nfruits = []\nfor i in range(n):\n\taa, bb = [int(x) for x in input().split()]\n\tfruits.append([aa, bb])\n\nfruits.sort()\n\nday, t_harvested, tot, curr = 0, 0, 0, []\n\ndef remove_old():\n\twhile fruits != [] and fruits[0][0] < day-1:\n\t\tt = fruits.pop(0)\n\t\tif DEBUG: print(\"Rotten {} on day {}\".format(t, day))\n\twhile curr != [] and curr[0][0] < day-1:\n\t\tcurr.pop(0)\n\t\t#print(\"Rotten/harvested {} on day {}\".format(t, day))\n\ndef add_current():\n\tfor f in fruits:\n\t\tif day-1 <= f[0] <= day:\n\t\t\tcurr.append(f)\n\t\t\tif DEBUG: print(\"New fruit {} on day {}\".format(f, day))\n\ndef harvest_todays():\n\tnonlocal t_harvested\n\tnonlocal tot\n\n\twhile curr != []:\n\t\tt = curr.pop(0)\n\t\tharvest = min(t[1], v-t_harvested)\n\t\tif DEBUG: print(\"Harvested {} of {} on day {}\".format(harvest, t, day))\n\t\tt_harvested += harvest\n\t\tt[1] -= harvest\n\t\ttot += harvest\n\t\t#if harvest == 0: ## BUG!!!\n\t\t#\tbreak\n\n\nwhile fruits != []:\n\n\tremove_old()\n\n\tadd_current()\n\n\tharvest_todays()\n\tday += 1\n\tt_harvested = 0\n\nprint(tot)\n\n\n", "def main() :\n\n    R = lambda : map(int, input().split())\n    n, v = R()\n    mlist = [0] * 3003\n    for i in range(n) :\n        a, b = R()\n        mlist[a] += b\n    mlist2 = mlist[:]\n    ans = 0\n    for i in range(1, 3002) :\n        tmp = min(v, mlist[i])\n        ans += tmp\n        mlist[i + 1] += min(mlist[i] - tmp, mlist2[i])\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "n, v = map(int, input().split())\nd, s = {}, 0\nfor i in range(n):\n    a, b = map(int, input().split())\n    d[a] = d.get(a, 0) + b\n    s += b\n\nr = v\nfor i in sorted(d.keys()):\n    d[i] -= min(d[i], r)\n    r, b = v, min(d[i], v)\n    d[i] -= b\n    if i+1 in d:\n        r -= b\n\nprint(s - sum(d.values()))", "[n, v] = input().split()\nv1 = []\nfor i in range(3002):\n    v1.append(0)\nv = int(v)\nmaxx = 0\nfor i in range(int(n)):\n    [a, b] = input().split()\n    v1[int(a)] += int(b)\n    maxx = max(int(a), maxx)\nres = 0\nfor i in range(1, maxx+2):\n    delt = min(v, v1[i] + v1[i-1])\n    res += delt\n    d = v1[i-1] - delt\n    v1[i] += min(d, 0)\nprint(res)", "import sys\nimport math\n  \nn, v = [int(x) for x in (sys.stdin.readline()).split()]\nk = [0] * 3002\n\nfor i in range(n):\n    a, b = [int(x) for x in (sys.stdin.readline()).split()]\n    k[a] += b\n    \ni = 1\nres = 0\nwhile(i <= 3001):\n    val = 0\n    if(k[i - 1] < v):\n        val = k[i - 1]\n        res += val \n        d = v - val\n        if(k[i] < d):\n            res += k[i]\n            k[i] = 0\n        else:\n            res += d\n            k[i] = k[i] - d\n    else:\n        res += v\n     \n    i += 1    \nprint(res)  ", "n, v = [int(x) for x in input().split()]\nl = [0] * 3002\nfor i in range(n):\n\ta, b = [int(x) for x in input().split()]\n\tl[a] += b\nans = 0\nfor i in range(1, 3002):\n\tleft = v\n\tif l[i - 1]:\n\t\tans += min(left, l[i - 1])\n\t\tleft -= min(left, l[i - 1])\n\tans += min(left, l[i])\n\tl[i] -= min(left, l[i])\nprint(ans)\n", "def main():\n    n, v = map(int, input().split())\n    l = [0] * 3002\n    for _ in range(n):\n        a, b = map(int, input().split())\n        l[a] += b\n    a = res = 0\n    for b in l:\n        x = a + b\n        if x < v:\n            res += x\n            a = 0\n        else:\n            res += v\n            if a < v:\n                a = x - v\n            else:\n                a = b\n    print(res)\n\n\ndef __starting_point():\n    main()\n__starting_point()"]