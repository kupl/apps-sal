["def grundy(n, k):\n    if k % 2 == 0:\n        if n <= 2:\n            return n\n        else:\n            return n % 2 == 0\n    else:\n        if n <= 4:\n            return [0, 1, 0, 1, 2][n]\n        elif n % 2 == 1:\n            return 0\n        else:\n            return 2 if grundy(n // 2, k) == 1 else 1\n\n\ndef __starting_point():\n    n, k = list(map(int, input().split()))\n    xList = list(map(int, input().split()))\n    res = 0\n    for x in xList:\n        res ^= grundy(x, k)\n    print(\"Kevin\" if res else \"Nicky\")\n\n\n__starting_point()", "f = lambda: map(int, input().split())\nn, k = f()\ns = 0\nfor a in f():\n    d = 0\n    while a % (2 << d) == 0: d += 1\n    x = a & 1 if a < 4 else 0 if a & 1 else 1 if (a == 3 << d) ^ (d & 1) else 2\n    y = a if a < 3 else a & 1 ^ 1\n    s ^= x if k & 1 else y\nprint('Kevin' if s else 'Nicky')", "f = lambda: map(int, input().split())\nn, k = f()\ns = 0\nfor a in f():\n    d = 0\n    while a & 1 << d == 0: d += 1\n    t = (a == 3 << d) ^ (d & 1)\n    x = a & 1 if a < 4 else 0 if a & 1 else 2 - t\n    y = a if a < 3 else a & 1 ^ 1\n    s ^= x if k & 1 else y\nprint('Kevin' if s else 'Nicky')", "f = lambda: list(map(int, input().split()))\n\nn, k = f()\n\ns = 0\n\nfor a in f():\n\n    d = 0\n\n    while a & 1 << d == 0: d += 1\n\n    t = (a == 3 << d) ^ (d & 1)\n\n    x = a & 1 if a < 4 else 0 if a & 1 else 2 - t\n\n    y = a if a < 3 else a & 1 ^ 1\n\n    s ^= x if k & 1 else y\n\nprint('Kevin' if s else 'Nicky')\n\n\n\n# Made By Mostafa_Khaled\n"]