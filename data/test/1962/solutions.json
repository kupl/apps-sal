["def ii():\n    return int(input())\ndef mi():\n    return list(map(int, input().split()))\ndef li():\n    return list(mi())\n\nN, K, L = mi()\nA = li()\nA.sort()\nend = 1\nwhile end < N * K and A[end] <= A[0] + L:\n    end += 1\nB = A[:end]\nif len(B) < N:\n    ans = 0\nelse:\n    cur = ans = 0\n    for i in range(N):\n        ans += B[cur]\n        cur = min(cur + K, len(B) - (N - i - 1))\nprint(ans)\n", "import bisect;\ndef getIntList():\n    return list(map(int, input().split()));\ndef getTransIntList(n):\n    first=getIntList();\n    m=len(first);\n    result=[[0]*n for _ in range(m)];\n    for i in range(m):\n        result[i][0]=first[i];\n    for j in range(1, n):\n        curr=getIntList();\n        for i in range(m):\n            result[i][j]=curr[i];\n    return result;\nn, k, l=getIntList();\nm=n*k;\na=getIntList();\na.sort();\nlowLim=a[0];\nupLim=lowLim+l;\n#print(a);\ndef solve():\n    if a[n-1]>upLim:\n        return 0;\n    i0=bisect.bisect_right(a, upLim);\n    nbBad=m-i0;\n    i0-=1;\n    value=0;\n    for i in range(n-1, -1, -1):\n        diff=min(nbBad, k-1);\n        rest=k-diff;\n        nbBad-=diff;\n        value+=a[i0-rest+1];\n        #print(i0-rest+1, a[i0-rest+1])\n        i0-=rest;\n    return value;\nprint(solve());", "T = input().split(' ')\nn = int(T[0])\nk = int(T[1])\nl = int(T[2])\nP = input().split(' ')\nfor i in range(n * k):\n    P[i] = int(P[i])\nP.sort()\na = 0\nwhile a < n * k and P[a] - P[0] <= l:\n    a+=1\nif a < n:\n    print(0)\nelse:\n    tot = 0\n    i = 0\n    j = a\n    for g in range(n-1, -1, -1):\n        tot += P[i]\n        i+=1\n        j-=1\n        for f in range(k-1):\n            if j > g:\n                i+=1\n                j-=1\n            else:\n                break\n    print(tot)\n", "n, k, l = list(map(int, input().split()))\na = sorted(list(map(int, input().split())))\n\np = 0\nwhile p < len(a) and a[p] - a[0] <= l:\n    p += 1\n\nif p < n:\n    print(0)\n    return\n\nans = 0\nu = 0\nfor i in range(n):\n    ans += a[u]\n    if u + k >= p - (n - i - 1):\n        u = p - (n - i - 1)\n    else:\n        u += k\nprint(ans)\n", "s = [int(x) for x in input().split()]\nn, k, ll = s[0], s[1], s[2]\ns = [int(x) for x in input().split()]\ns.sort()\n\nif s[n - 1] - s[0] > ll:\n\tprint(0)\nelse:\n\tx = 0\n\twhile x < n * k and s[x] <= ll + s[0]:\n\t\tx += 1\n\tif x > k * (n - 1):\n\t\tq = 0\n\t\tfor i in range(n):\n\t\t\tq += s[i * k]\n\t\tprint(q)\n\telse:\n\t\tadd = []\n\t\tleft = x - n\n\t\twhile left > 0:\n\t\t\tif left >= k - 1:\n\t\t\t\tadd.append(k - 1)\n\t\t\t\tleft -= k - 1\n\t\t\telse:\n\t\t\t\tadd.append(left)\n\t\t\t\tleft = 0\n\t\tadd += [0 for _ in range(n)]\n\t\tdiff = [add[i] + 1 for i in range(n - 1)]\n\t\t# print(diff)\n\t\tq = s[0]\n\t\tp = 0\n\t\tfor i in range(n - 1):\n\t\t\tp += diff[i]\n\t\t\tq += s[p]\n\t\tprint(q)\n", "n, k, l = map(int,input().split()) \nL = list(map(int,input().split()))\nL.sort()\nif L[n-1]-L[0]>l:\n    print(0)\nelse:\n    F = L[0:n]\n    D = []\n    # print(F)\n    count = 0\n    ss = 0\n    for i in range(n,n*k):\n        if L[i]-L[0]<=l:\n            F.append(L[i])\n            count+=1\n            if count==k-1:\n                D.append(L[ss])\n                ss+=k\n                count = 0\n        else:\n            break\n    # print(F[ss:])\n    # print(D)\n    if count == 0:\n        print(sum(F[ss:])+sum(D))\n    else:\n        print(F[ss] + sum(F[ss+count+1:]) + sum(D))", "n, k, l = list(map(int, input().split()))\narr = list(map(int, input().split()))\narr = sorted(arr)\nif arr[n - 1] - arr[0] > l:\n    print(0)\nelse:\n    maxVol = arr[0] + l\n    index = 0\n    while index < n * k - 1 and arr[index + 1] <= maxVol: #index will be at most n * k - 1\n        index += 1\n    s = arr[0]\n    i = 0\n    remaining = n - 1\n    while remaining > 0 and i + k + remaining - 1 <= index: #jumps of k\n        i += k\n        remaining -= 1\n        s += arr[i]\n    if remaining > 0 and index - (remaining - 1) > 1 + i: #can now only make a jump of at most k - 1\n        i = (index - (remaining - 1))\n        s += arr[i]\n        remaining -= 1\n    while remaining > 0:\n        i += 1\n        s += arr[i]\n        remaining -= 1\n    print(s)", "n,k,l=[int(x) for x in input().split()]\nns=[int(x) for x in input().split()]\nloc=-1\ndef judge(start,restb):\n    length=loc-start+1\n    if length-k>=(restb-1):\n        return True\n    return False\n\ndef func():\n    nonlocal ns,loc\n    if n==1:\n        print(min(ns))\n        return\n    ns.sort()\n    # print(ns)\n    for i in range(n*k):\n        if ns[i]>ns[0]+l:\n            loc=i\n            break\n    if loc==-1:\n        loc=n*k-1\n    else:\n        loc-=1\n    if loc<n-1:\n        print(0)\n        return\n    st=0\n    rb=n\n    ans=0\n    while judge(st,rb):\n        ans+=ns[st]\n        st+=k\n        rb-=1\n        if rb==0:\n            break\n    if rb>0:\n        ans+=ns[st]\n        rb-=1\n        for i in range(rb):\n            ans+=ns[loc-i]\n    print(ans)\n    return\nfunc()\n\n", "t = input().split(\" \")\nt = [int(e) for e in t]\n\n(n, k, l) = t\n\n\nbig = input().split(\" \")\nbig = [int(e) for e in big]\n\nassert len(big) == n * k\n\nbig.sort()\n\n\ndef getResult(n, k, l, big):\n    if big[n-1] - big[0] > l:\n        return 0\n\n    right = None\n    for (i, e) in enumerate(big):\n        if e - big[0] > l:\n            right = i\n            break\n    if right == None:\n        right = len(big)\n\n    n_fei = right - n\n\n    result = 0\n\n    i = 0\n    for todo in range(n):\n        result += big[i]\n\n        if n_fei >= k - 1:\n            i += k\n            n_fei -= k-1\n        else:\n            i += n_fei + 1\n            n_fei -= n_fei\n\n    return result\n\n\n\n\n\n\n\n\nresult = getResult(n, k, l, big)\nprint(result)\n", "#!/usr/bin/env python3\n\nfrom bisect import bisect\n\n[n, k, l] = list(map(int, input().strip().split()))\nais = list(map(int, input().strip().split()))\n\nais.sort()\nif ais[n - 1] - ais[0] > l:\n\tprint(0)\n\treturn\n\ninds = list(range(0, n * k, k))\nbnd = bisect(ais, ais[0] + l) - 1\nfor i in range(1, n):\n\tinds[i] = min(inds[i], bnd)\n\nfor i in range(n - 1, 1, -1):\n\tif inds[i] <= inds[i - 1]:\n\t\tinds[i - 1] = inds[i] - 1\n\nprint(sum(ais[i] for i in inds))\n", "def main():\n    n, k, l = map(int, input().split())\n    m = n * k\n    a = list(map(int, input().split()))\n    a.sort()\n    f = a[0]\n    i = 0\n    while (i < m and a[i] <= f + l):\n        i += 1\n    if (i != m):\n        i -= 1\n    else:\n        ans = 0\n        ind = 0\n        for i in range(n):\n            ans += a[ind]\n            ind += k\n        print(ans)\n        return\n    last = i\n    if (last + 1 < n):\n        print(0)\n        return\n    count = m - last - 1\n    ost = last + 1\n    ans = 0\n    i = last\n    while (i >= 0):\n        c = min(k - 1, count)\n        count -= c\n        i -= (k - c)\n        ans += a[i + 1]\n    print(ans)\nmain()", "#!/usr/bin/env python3\nfrom sys import stdin\nimport bisect\n\n\ndef solve(tc):\n    n, k, l = map(int, stdin.readline().split())\n    li = list(map(int, stdin.readline().split()))\n    li.sort()\n\n    p = bisect.bisect_right(li, li[0] + l)\n    if p < n:\n        print(0)\n        return\n\n    res = 0\n    pp = 0\n    rem = p - n\n    while pp < p:\n        res += li[pp]\n        if rem > 0:\n            mod = min(k-1, rem)\n            pp += mod\n            rem -= mod\n        pp += 1\n    print(res)\n\n\ntc = 1\nsolve(tc)", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\nfrom bisect import bisect\n\ndef rint():\n    return map(int, stdin.readline().split())\n#lines = stdin.readlines()\n\nn, k, l = rint()\n\nm = list(rint())\n\nm.sort()\n#print(m)\nif m[-1] - m[0] > l:\n    totcand = bisect(m, m[0]+l)\n    #print(totcand)\n    tot = 0\n    i = 0\n    nn = n\n    while True:\n        if nn == 0:\n            break\n        tot += m[i]\n        i += 1\n        nn -= 1\n        totcand -= 1\n        if totcand - (k-1)  >=  nn:\n            i += (k-1)\n            totcand -= (k-1)\n        else:\n            if totcand > nn:\n                minus = totcand - nn\n                i += minus\n                totcand -= minus\n            elif totcand < nn:\n                print(0)\n                return\n    print(tot)\nelse:\n    tot = 0\n    for i in range(n):\n        tot += m[i*k]\n\n    print(tot)", "n, k, l = list(map(int, input().split()))\na = sorted(list(map(int, input().split(' '))))\n# print(n, k, l, a)\nindex = 0\nfor i in a:\n    if i > a[0] + l:\n        break\n    index += 1\nok = index - n\nif ok < 0:\n    print(0)\nelse:\n    ans = 0\n    cur = 0\n    for i in range(n):\n        ans += a[cur]\n        use = min(k-1, ok)\n        ok -= use\n        cur += 1 + use\n    print(ans)", "n, k, l = map(int, input().split())\nbarrels = []\nfor i in range(n):\n    barrels.append([])\n    for j in range(k):\n        barrels[i].append(-1)\nboards = sorted(list(map(int, input().split())))\nans = 0\nif boards[n - 1] - boards[0] <= l:\n    i = n * k - 1\n    ba, bo = n - 1, k\n    while boards[i] > boards[0] + l:\n        bo -= 1\n        if bo == 0:\n            ba, bo = ba - 1, k - 1\n        barrels[ba][bo] = boards[i]\n        i -= 1\n    ba, bo = 0, -1\n    j = 0\n    flag = True\n    while j <= i:\n        bo += 1\n        if bo == k or barrels[ba][bo] != -1:\n            ba, bo = ba + 1, 0\n            flag = True\n        barrels[ba][bo] = boards[j]\n        if flag:\n            ans += barrels[ba][bo]\n            flag = False  \n        j += 1\nprint(ans)", "n, k, l = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na.sort()\n\nub = n*k\nfor i in range(n*k):\n    if a[i] - a[0] > l:\n        ub = i\n        break\n\nif ub < n:\n    print(0)\n    return\n\nres = 0\nleft = n\npicked = [0] * (n*k)\n\nfor i in range(0, ub, k):\n    res += a[i]\n    picked[i] = 1\n    left -= 1\n\ni = ub - 1\nwhile left > 0 and i >= 0:\n    if picked[i] == 0:\n        res += a[i]\n        left -= 1\n\n    i -= 1\n\nassert(left == 0)\nprint(res)\n", "import bisect,sys\nn,k,l=list(map(int,input().split()))\na=sorted(list(map(int,input().split())))\nli=bisect.bisect_right(a,a[0]+l)-1\n#print(li)\nif li+1<n:\n    print(0)\n    return\nb=[False]*(n*k)\nm=0\ni=0\nt=0\nwhile i<=li:\n    m=m+a[i]\n    t+=1\n    b[i]=True\n    i=i+k\n    #print(a[i],i)\ni=li\nwhile t<n:\n    if b[i]==False:\n        m=m+a[i]\n        t+=1\n    i-=1\nprint(m)\n        \n", "n, k, l = list(map(int, input().split()))\na = list(map(int, input().split()))\na0 = min(a)\n\nv = []\nfor ai in a:\n    if ai <= a0 + l:\n        v.append(ai)\nv = list(sorted(v))\nm = len(v)\nif m < n:\n    ans = 0\nelse:\n    ans = 0\n    a = n\n    b = m\n    i = 0\n    j = 0\n    for vi in v:\n        if i == 0:\n            ans += vi\n        if i == k - 1 or a == b:\n            i = 0\n            j += 1\n            a -= 1\n        else:\n            i += 1\n        b -= 1\n\nprint(ans)\n", "n,k,l=list(map(int,input().split()))\na=sorted(list(map(int,input().split())))\ni=1\nm=k*n\nif(a[n-1]-a[0]>l):\n    print(0)\nelse:\n    while(i<m and a[i]<=a[0]+l):\n        i+=1\n    if(i==m or m-i+1<k):\n        ans=0\n        for j in range(0,m,k):\n            ans+=a[j]\n        print(ans)\n    else:\n        usables=m-i-k+1\n        ind=i-1\n        ans=0\n        while(ind>=0):\n            ans+=a[ind]\n            if(usables>=k-1):\n                usables-=k-1\n                ind-=1\n            elif(usables>0):\n                ind-=(k-usables)\n                usables=0\n            else:\n                ind-=k\n        print(ans)", "R = lambda: list(map(int, input().split()))\n\nn, k, l = R()\na = list(R())\na.sort()\n\n\ndef func():\n    if n == 1: return a[0]\n\n    r = (n-1)*k\n    while a[r] - a[0] > l: r -= 1\n    # dbvar(r)\n    if r < n - 1: return 0\n\n    res = a[0] + a[r]\n\n    for i in range(n - 2, 0, -1):\n        if i*k >= r - 1:\n            res += a[r-1]\n            r -= 1\n        else:\n            res += a[i*k]\n\n    return res\n\nprint(func())\n", "import sys, math, os.path\n\nFILE_INPUT = \"C.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return list(map(int, input().split(\" \")))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn,k,l = ni()\na = nia()\n# print(n,k,l)\nlog(a)\n\nvmin = min(a)\nlog(vmin)\n\nif (n==1):\n    print(vmin)\n    return\n\nvmaxa = vmin + l\nlog(vmaxa)\namax = [i for i in a if i <= vmaxa]\nlog(f\"{amax} -> {len(amax)}\")\n\nif (len(amax) < n):\n    print(0)\n\nelse:\n    amax.sort()\n    log(amax)\n    ans = 0\n    count = 0\n    lonhonMax = n*k - len(amax)\n    for i  in amax[0::k]:\n        log(f\"+ {count*k}: {i}\")\n        ans += i\n        count += 1\n        if (count == n):\n            break\n\n    if (count < n):\n        ix = len(amax) - 1\n        log(f\"add more={n} - {count} = {n - count}\")\n        for i in range(n - count):\n            if (ix % k == 0):\n                ix -= 1\n            ans += amax[ix]\n            ix -= 1\n    print(ans)     \n        \n\n", "import sys, math, os.path\n\nFILE_INPUT = \"C.in\"\nDEBUG = os.path.isfile(FILE_INPUT)\nif DEBUG: \n    sys.stdin = open(FILE_INPUT)    \n\ndef ni():\n    return list(map(int, input().split(\" \")))\n\ndef nia(): \n    return list(map(int,input().split()))\n\ndef log(x):\n    if (DEBUG):\n        print(x)\n\nn,k,l = ni()\na = nia()\n# print(n,k,l)\nlog(a)\n\nvmin = min(a)\nlog(vmin)\n\nif (n==1):\n    print(vmin)\n    return\n\nvmaxa = vmin + l\nlog(vmaxa)\namax = [i for i in a if i <= vmaxa]\n# log(f\"{amax} -> {len(amax)}\")\n\nif (len(amax) < n):\n    print(0)\n\nelse:\n    amax.sort()\n    log(amax)\n    ans = 0\n    count = 0\n    lonhonMax = n*k - len(amax)\n    for i  in amax[0::k]:\n        # log(f\"+ {count*k}: {i}\")\n        ans += i\n        count += 1\n        if (count == n):\n            break\n\n    if (count < n):\n        ix = len(amax) - 1\n        # log(f\"add more={n} - {count} = {n - count}\")\n        for i in range(n - count):\n            if (ix % k == 0):\n                ix -= 1\n            ans += amax[ix]\n            ix -= 1\n    print(ans)     \n        \n\n", "n, k, l = list(map(int, input().split()))\nm = n * k\narr = list(map(int, input().split()))\narr.sort(reverse=True)\n#print(arr)\nmin_elem = arr[m - 1]\nr = min_elem + l\n#print(\"m =\", m, \"r =\", r, arr[m - n])\nif arr[m - n] > r:\n    #print(\"\u043f\u0435\u0447\u0430\u043b\u044c\")\n    print(\"0\")\n    return\nvolume = 0\nif k == 1:\n    for i in range(m):\n        volume = volume + arr[i]\n    print(volume)\n    return\n########\n\nindex = 0\nwhile arr[index] > r:\n    index += 1\nvolume = 0\n#print(index)\nq = index // (k - 1)\nw = index % (k - 1)\nwhile q != 0:\n    volume = volume + arr[index]\n    q -= 1\n    index += 1\nw = k - 1 - w\nindex += w\nwhile index < m:\n    volume = volume + arr[index]\n    index += k\n\n#print(index)\nprint(volume)\n", "a,b,c = [int(i) for i in input().split()]\nlength = a*b\nnumArr = [int(i) for i in input().split()]\n\nnumArr.sort()\n\ncount = 0\nmmin = numArr[0]\nmmax = numArr[a-1]\n\nif mmax - mmin > c:\n    print(0)\nelse:\n    maxPos = a-1\n    while(maxPos+1 < length and numArr[maxPos+1]<=mmin+c):\n        maxPos+=1\n    dis = maxPos+1 - a\n    bCount = 0\n    for i in range(maxPos+1):\n        if dis != 0:\n            bCount += 1\n            dis -= 1\n            if bCount%b == 1:\n                count += numArr[i]\n                dis += 1\n        else:\n            count += numArr[i]\n    print(count)\n", "n, k, l = list(map(int, input().split()))\na = sorted(list(map(int, input().split(' '))))\nindex = 0\nfor i in a:\n    if i > a[0] + l:\n        break\n    index += 1\nok = index - n\nif ok < 0:\n    print(0)\nelse:\n    ans = 0\n    cur = 0\n    for i in range(n):\n        ans += a[cur]\n        use = min(k-1, ok)\n        ok -= use\n        cur += 1 + use\n    print(ans)"]