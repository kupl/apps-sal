["class Solution:\n    def reverseWords(self, s: str) -> str:\n        sLst = s.split()\n        # print(sLst)\n        reverseStr = \"\"\n\n        for i in range(len(sLst)-1,-1,-1):\n            if i == (len(sLst)-1):\n                reverseStr+=sLst[i]\n            else:\n                reverseStr+=(\" \"+sLst[i])\n        return reverseStr", "class Solution:\n    def reverseWords(self, s: str) -> str:\n        s = s.strip(' ')\n        ans = \"\"\n        \n        for segment in s.split(' '):\n            if segment == '':\n                continue\n            ans = segment + \" \" + ans\n        \n        return ans[:-1]", "class Solution:\n    def reverseWords(self, s: str) -> str:\n        return \" \".join(s.split()[::-1])", "class Solution:\n    def reverseWords(self, s: str) -> str:\n        s = s.strip().split()\n        l = []\n        for i in reversed(range(len(s))):\n            l.append(s[i])\n        return ' '.join(l)", "class Solution:\n    def reverseWords(self, s: str) -> str:\n        a = s.split()[::-1]\n        return \" \".join(a)", "class Solution:\n    def reverseWords(self, s: str) -> str:\n        curr_word = \"\"\n        ans = []\n        \n        for char in s:\n            if char == ' ':\n                if curr_word != \"\":   # if it is a newly separately word\n                    ans.append(curr_word)\n                    curr_word = \"\"\n            else:\n                curr_word += char\n        \n        if curr_word != \"\":\n            ans.append(curr_word)\n        \n        return \" \".join(ans[::-1])"]