["import sys\nfrom sys import stdout\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return list(map(int, tinput()))\n\ndef fiinput():\n    return list(map(float, tinput()))\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():\n    def answer(res):\n        print((res + 1) // 2)\n    n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = linput()\n    q = rlinput()\n    w = [0] + [q[i] - q[i - 1] for i in range(1, n)]\n    res = q[0] + sum([max(w[i], 0) for i in range(1, n)])\n    answer(res)\n    k = iinput()\n    for o in range(k):\n        l, r, x = rinput()\n        if l == 1:\n            res += x        \n        else:\n            res = res - max(0, w[l - 1]) + max(0, w[l - 1] + x); w[l - 1] += x \n        if r != n:\n            res = res - max(0, w[r]) + max(0, w[r] - x); w[r] -= x \n        answer(res)\n    \n        \n    \n    \n        \n    \n\nfor i in range(1):\n    main()\n", "from collections import deque\nimport sys\n\ndef max(a,b):\n    if a>b:\n        return a\n    else:\n        return b\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef main():\n    N = int(input())\n    A = list(map(int,input().split()))\n    B = [A[i+1]-A[i] for i in range(N-1)]\n    S = 0\n    for i in range(N-1):\n        if A[i+1]>A[i]:\n            S += A[i+1] - A[i]\n    if (A[0]+S)%2==0:\n        print((A[0]+S)//2)\n    else:\n        print((A[0]+S+1)//2)\n\n    Q = int(input())\n    for i in range(Q):    \n        L,R,X = list(map(int,input().split()))\n\n        L,R = L-1,R-1\n\n        if L>0:\n            temp = B[L-1]\n            B[L-1] += X\n            S = S - max(0,temp) + max(0,B[L-1])\n        else:\n            A[0] += X\n        if R<N-1:\n            temp = B[R]\n            B[R] -= X\n            S = S - max(0,temp) + max(0,B[R])\n\n        if (A[0]+S)%2==0:\n            print((A[0]+S)//2)\n        else:\n            print((A[0]+S+1)//2)\n            \ndef __starting_point():\n    main()\n\n\n\n__starting_point()", "import sys\n# sys.stdin = open(\"input.txt\")\n\ndef calc(a0, db, dc):\n    b0 = (a0 - db) // 2\n    c0 = a0 - b0\n    c1 = (a0 - dc) // 2\n    b1 = a0 - c1\n    return min(max(b0 + db, c0), max(b1 + db, c1))\n\ndef main():\n    n = int(input())\n    A = [int(a) for a in input().split()]\n    D = [A[i+1] - A[i] for i in range(n - 1)]\n    a0 = A[0]\n    db = sum([d for d in D if d > 0])\n    dc = sum([d for d in D if d < 0])\n\n    q = int(input())\n    ans = [calc(a0, db, dc)]\n    for i in range(q):\n        l, r, x = list(map(int, input().split()))\n        if l > 1:\n            if D[l-2] < 0:\n                dc -= D[l-2]\n            else:\n                db -= D[l-2]\n            D[l-2] += x\n            if D[l-2] < 0:\n                dc += D[l-2]\n            else:\n                db += D[l-2]\n        if r < n:\n            if D[r-1] < 0:\n                dc -= D[r-1]\n            else:\n                db -= D[r-1]\n            D[r-1] -= x\n            if D[r-1] < 0:\n                dc += D[r-1]\n            else:\n                db += D[r-1]\n        if l == 1:\n            a0 += x\n        ans.append(calc(a0, db, dc))\n    print(\"\\n\".join(map(str, ans)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\na = list(map(int, input().split()))\nstart = a[0]\n\ndiffs =[]\nfor i in range(n-1):\n\tdiffs.append(a[i+1]-a[i])\npos = 0\nfor v in diffs:\n\tif v>0:\n\t\tpos+=v\n\nfinal= []\n\ndef out(ans):\n\tfinal.append((ans+1)//2)\n\t\t\nout(pos+start)\n\nq = int(input())\nfor _ in range(q):\n\tl, r, x = map(int, input().split())\n\tif l>1:\n\t\tif diffs[l-2] >= 0:\n\t\t\tpos -= diffs[l-2]\n\t\tdiffs[l-2] += x\n\t\tif diffs[l-2] >= 0:\n\t\t\tpos += diffs[l-2]\t\n\telse:\n\t\tstart += x\n\t\t\n\tif r<n:\n\t\tif diffs[r-1] >= 0:\n\t\t\tpos -= diffs[r-1]\n\t\tdiffs[r-1] -= x\n\t\tif diffs[r-1] >= 0:\n\t\t\tpos += diffs[r-1]\n\t\t\n\tout(pos+start)\nprint('\\n'.join(map(str,final)))", "import sys\n\nn = int(sys.stdin.readline().strip())\na = list(map(int, sys.stdin.readline().strip().split()))\nd = []\nb = 0\nc = 0\nF = a[0]\nL = a[-1]\nfor i in range (1, n):\n    x = a[i] - a[i-1]\n    if x >= 0:\n        b = b + x\n    else:\n        c = c - x\n    d.append(x)\nQ = int(sys.stdin.readline().strip())\nfor q in range (0, Q + 1):\n    if q > 0:\n        l, r, x = list(map(int, sys.stdin.readline().strip().split()))\n    else:\n        l, r, x = 1, 1, 0\n    if x != 0 and l > 1:    \n        if x >= 0 and d[l-2] >= 0:\n            b = b + x\n        elif x >= 0 and d[l-2] < 0:\n            b = b + x - min(-d[l-2], x)\n            c = c - min(-d[l-2], x)\n        elif x < 0 and d[l-2] >= 0:\n            c = c - min(d[l-2], -x) - x\n            b = b - min(d[l-2], -x)\n        elif x < 0 and d[l-2] < 0:\n            c = c - x\n        d[l-2] = d[l-2] + x\n    elif x != 0 and l == 1:\n        F = F + x\n    if x != 0 and r < n:\n        if x <= 0 and d[r-1] >= 0:\n            b = b - x\n        elif x <= 0 and d[r-1] < 0:\n            b = b - x - min(-x, -d[r-1])\n            c = c - min(-x, -d[r-1])\n        elif x > 0 and d[r-1] >= 0:\n            c = c - min(x, d[r-1]) + x\n            b = b - min(x, d[r-1])\n        elif x > 0 and d[r-1] < 0:\n            c = c + x\n        d[r-1] = d[r-1] - x\n    elif x != 0 and r == n:\n        L = L + x\n    print((L + F + b + c + 3) // 4)", "import sys\n\ninput = sys.stdin.readline\n\nn = int(input())\na = list(map(int,input().split()))\n\ndiff = [0 for i in range(n)]\n\nfor i in range(1,n):\n    diff[i] = a[i] - a[i-1]\n\nS = 0\nfor i in range(1,n):\n    if diff[i]>=0:\n        S += diff[i]\nfirst = a[0]\nans = []\n\nres = S + first\nans.append((res+1)//2)\n\nQ = int(input())\nfor _ in range(Q):\n    l,r,x = map(int,input().split())\n    l=l-1\n    r=r-1\n    #diff[l] += x\n    #diff[r+1] -=x\n    if l==0:\n        first += x\n    else:\n        if diff[l]>=0:\n            S -= diff[l]\n        diff[l] += x\n        if diff[l]>=0:\n            S += diff[l]\n    if r+1<n:\n        if diff[r+1]>=0:\n            S -= diff[r+1]\n        diff[r+1] -= x\n        if diff[r+1]>=0:\n            S += diff[r+1]\n    res = S + first\n    ans.append((res+1)//2)\n\nfor a in ans:\n    print(a)", "n = int(input())\naaa = list(map(int, input().split()))\ndiff = []\nscore = 0\nprv = 0\nfor a in aaa:\n    d = a - prv\n    diff.append(d)\n    if d > 0:\n        score += d\n    prv = a\nbuf = [(score + min(0, diff[0]) + 1) // 2]\n\nq = int(input())\nfor _ in range(q):\n    l, r, x = list(map(int, input().split()))\n    l -= 1\n    dl1 = diff[l]\n    diff[l] += x\n    dl2 = diff[l]\n    score += max(0, dl2) - max(0, dl1)\n\n    if r < n:\n        dr1 = diff[r]\n        diff[r] -= x\n        dr2 = diff[r]\n        score += max(0, dr2) - max(0, dr1)\n\n    buf.append((score + min(0, diff[0]) + 1) // 2)\n\nprint('\\n'.join(map(str, buf)))\n", "import math\nimport sys\n  \ninput = sys.stdin.readline\n\nn = int(input())\nli = list(map(int, input().split()))\n\n\nminuses = 0\ndiff = []\nfor i in range(1, len(li)):\n    diff.append(li[i] - li[i-1])\n    if li[i] < li[i-1]:\n        minuses += (li[i-1]-li[i])\n\nll = li[-1]\nprint(math.ceil((minuses+ll)/2))\n\nfor i in range(int(input())):\n    l, r, x = list(map(int, input().split()))\n    if l > 1:\n        old = diff[l-2]\n        diff[l-2] += x\n        minuses += max(-(old+x), 0) - max(-old, 0)\n    \n    if r < n:\n        old = diff[r-1]\n        diff[r-1] -= x\n        minuses += max(-(old-x), 0) - max(-old, 0)\n\n    if r == n:\n        ll += x\n        \n    print(math.ceil((minuses+ll)/2))\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nA=list(map(int,input().split()))\n\nPLUS=[0]*(n-1)\n\nfor i in range(n-1):\n    PLUS[i]=A[i+1]-A[i]\n\nS=0\nfor p in PLUS:\n    if p>0:\n        S+=p\n\nprint((S+A[0]+1)//2)\n\nQ=int(input())\nfor queries in range(Q):\n    l,r,x=list(map(int,input().split()))\n\n    if l>=2:\n        ptemp=PLUS[l-2]\n        PLUS[l-2]+=x\n\n        if x>0:\n            if PLUS[l-2]>0:\n                S+=PLUS[l-2]-max(0,ptemp)\n        else:\n            if ptemp>0:\n                S-=ptemp-max(0,PLUS[l-2])\n    else:\n        A[0]+=x\n\n    if r<n:\n        ptemp=PLUS[r-1]\n        PLUS[r-1]-=x\n\n        if x<0:\n            if PLUS[r-1]>0:\n                S+=PLUS[r-1]-max(0,ptemp)\n        else:\n            if ptemp>0:\n                S-=ptemp-max(0,PLUS[r-1])\n\n    print((S+A[0]+1)//2)\n\n        \n            \n            \n    \n", "#Python Template\n\nfrom sys import stdin, stdout\nfrom math import ceil\n\ndef main():\n\tt = 1\n\tfor _ in range(t):\n\t\tn = int(stdin.readline())\n\t\ta = [int(i) for i in stdin.readline().split()]\n\t\tq = int(stdin.readline())\n\t\tdiffs = [0]*(n-1)\n\t\tstart = a[0]\n\t\tfor i in range(n-1):\n\t\t\tdiffs[i] = a[i+1] - a[i]\n\n\t\tupstep = 0\n\t\tfor d in diffs:\n\t\t\tif d > 0:\n\t\t\t\tupstep += d\n\t\tval = ceil((start + upstep)/2.0)\n\t\t#print(diffs)\n\t\tprint(val)\n\t\t#print()\n\n\t\tfor _ in range(q):\n\t\t\tl, r, x = [int(i) for i in stdin.readline().split()]\n\t\t\tl-=1\n\t\t\tr-=1\n\t\t\tif l == 0:\n\t\t\t\tstart += x\n\t\t\telse:\n\t\t\t\told = diffs[l-1]\n\t\t\t\tdiffs[l-1] += x\n\t\t\t\tnew = diffs[l-1]\n\t\t\t\tif old > 0:\n\t\t\t\t\tupstep -= old\n\t\t\t\tif new > 0:\n\t\t\t\t\tupstep += new\n\t\t\tif r != n-1:\n\t\t\t\told = diffs[r]\n\t\t\t\tdiffs[r] -= x\n\t\t\t\tnew = diffs[r]\n\t\t\t\tif old > 0:\n\t\t\t\t\tupstep -= old\n\t\t\t\tif new > 0:\n\t\t\t\t\tupstep += new\n\t\t\t#print(\"Steps: {0}\".format(upstep))\n\t\t\t#print(diffs)\n\t\t\t#print(\"Start: {0}\".format(start))\n\n\t\t\tval = ceil((start + upstep)/2.0) \n\t\t\t#print(\"Answer: {0}\".format(val))\n\t\t\tprint(val)\n\n\n\nmain()"]