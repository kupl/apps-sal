["#!/usr/bin/env python3\n\nOUT = (1, 0, 2, 3)\n\ntry:\n    while True:\n        n, m = map(int, input().split())\n        bus = [[None] * 4 for i in range(n)]\n        cur = 1\n        for row in range(n << 1):\n            if row >= n:\n                i = row - n\n                k = b = 1\n            else:\n                i = row\n                k = 3\n                b = 0\n            for j in range(2):\n                if cur <= m:\n                    bus[i][k * j + b] = cur\n                    cur += 1\n        for i in range(n):\n            for j in range(4):\n                if bus[i][OUT[j]] is not None:\n                    print(bus[i][OUT[j]], end=' ')\n        print()\n\nexcept EOFError:\n    pass\n", "n, m = map(int, input().split())\na = [[] for i in range(4)]\nfor i in range(4 * n):\n    cur = i + 1 if i < m else -1\n    if len(a[0]) < n or len(a[3]) < n:\n        if len(a[0]) == len(a[3]):\n            a[0].append(cur)\n        else:\n            a[3].append(cur)\n    else:\n        if len(a[1]) == len(a[2]):\n            a[1].append(cur)\n        else:\n            a[2].append(cur)\nfor v in a:\n    v.reverse()\nfor i in range(n):\n    for col in (1, 0, 2, 3):\n        if a[col][-1] != -1:\n            print(a[col][-1], end=' ')\n        a[col].pop()\nprint()\n", "n, m = [int(i) for i in input().split()]\na = [[0] * 4 for i in range(n)]\nfor i in range(m):\n    if i < 2 * n:\n        if i % 2 == 0:\n            a[i // 2][0] = i + 1\n        else:\n            a[i // 2][1] = i + 1\n    else:\n        if i % 2  == 0:\n            a[(i - 2 * n) // 2][2] = i + 1\n        else:\n            a[(i - 2 * n) // 2][3] = i + 1\nj = 0\nwhile j < m:\n    for i in range(n):\n        if a[i][2] > 0:\n            print(a[i][2], end=' ')\n            j += 1\n        if a[i][0] > 0:\n            print(a[i][0], end=' ')\n            j += 1\n        if a[i][3] > 0:\n            print(a[i][3], end=' ')\n            j += 1\n        if a[i][1] > 0:\n            print(a[i][1], end=' ')\n            j += 1", "def solve():\n    N, M = list(map(int, input().split()))\n\n    ans = []\n\n    def app(x):\n        if x < M:\n            ans.append(str(x + 1))\n\n    for i in range(0, N * 2, 2):\n        app(N * 2 + i)\n        app(i)\n        app(N * 2 + i + 1)\n        app(i + 1)\n\n    print(' '.join(ans))\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "def mp():  return list(map(int,input().split()))\ndef lt():  return list(map(int,input().split()))\ndef pt(x):  print(x)\ndef ip():  return input()\ndef it():  return int(input())\ndef sl(x):  return [t for t in x]\ndef spl(x): return x.split()\ndef aj(liste, item): liste.append(item)\ndef bin(x):  return \"{0:b}\".format(x)\n\nn,m = mp()\nif m <= 2*n:\n    print(' '.join([str(i+1) for i in range(m)]))\nelse:\n    d = (m-2*n)//2\n    L = []\n    for i in range(d):\n        L += [2*n+2*i+1,2*i+1,2*n+2*i+2,2*i+2]\n    c = m-2*n-2*d\n    if c == 1:\n        L.append(m)\n    for i in range(d,n):\n        L += [2*i+1,2*i+2]\n    print(' '.join([str(x) for x in L]))\n        \n        \n        \n", "n, m = [int(x) for x in input().split()]\nM = [[0,0,0,0] for i in range(n)]\nfor i in range(1, min(m, 2*n) + 1, 2):\n    M[i//2][1] = i\nfor i in range(2, min(m, 2*n) + 1, 2):\n    M[i//2 - 1][3] = i\nfor i in range(2*n + 1, m + 1, 2):\n    M[i//2 - n][0] = i\nfor i in range(2*n + 2, m + 1, 2):\n    M[i//2 - n - 1][2] = i\nfor i in range(n):\n    for j in range(4):\n        if M[i][j] != 0: print(M[i][j], end = ' ')\n", "n,m=[int(i) for i in input().split()]\nSeats=[[0,0,0,0] for i in range(n)]\nAns=[]\nfor i in range(m) :\n    if  i+1<=2*n :\n        Seats[i//2][i%2]=i+1\n    else :\n        j=i-2*n\n        Seats[j//2][j%2+2]=i+1\n\nfor i in range(n) :\n    if Seats[i][2] :\n        Ans.append(Seats[i][2])\n    if Seats[i][0] :\n        Ans.append(Seats[i][0])\n    if Seats[i][3] :\n        Ans.append(Seats[i][3])\n    if Seats[i][1] :\n        Ans.append(Seats[i][1])\n\nprint(\" \".join(map(str,Ans)))", "n, m = list(map(int, input().split()))\n\ns = ''\n\ndef rr(n, m, i, j):\n    if j == 0:\n        if 2*i + 1 <= m:\n            return 2*i + 1\n        else:\n            return 0\n    elif j == 1:\n        if 2*n + 2*i + 1 <= m:\n            return 2*i + 2*n + 1\n        else:\n            return 0\n    elif j == 2:\n        if 2*i + 2 + 2*n <= m:\n            return 2*i + 2 + 2*n\n        else:\n            return 0\n    else:\n        if 2*i + 2 <= m:\n            return 2*i + 2\n        else:\n            return 0\n\nfor i in range(n):\n    for j in 1, 0, 2, 3:\n        a = rr(n, m, i, j)\n        if a != 0:\n            s += str(a) + ' '\n\nprint(s)\n       \n    \n", "n, m = map(int, input().split())\nfor i in range(1, 2 * n, 2):\n    for j in (2 * n + i, i, 2 * n + i + 1, i + 1):\n        if j <= m:\n            print(j, end=' ')", "#parse_int = list(map(int, input().split()))\n\nlines, ppl = list(map(int, input().split()))\n\nbus = [ [2*i-1, 2*lines+2*i-1, 2*lines+2*i,  2*i] for i in range(1, lines+1) ]\n\n#for line in bus: print(line)\n\n#for line in bus: exit_bus.append([ line[1], line[0], line[2], line[3] ])\nfor line in bus: line[1], line[0] = line[0], line[1]\n\nexit_seq = [man for line in bus for man in line if man<=ppl]\n\nfor _ in exit_seq[:len(exit_seq)-1]:\n    print(_, end=' ')\nprint(exit_seq[-1])", "def __starting_point():\n    n, m = list(map(int, input().split()))\n    ans = []\n    if m <= 2 * n:\n        print(' '.join(str(i) for i in range(1, m + 1)))\n    else:\n        for i in range(1, (m - 2 * n + 1) // 2 + 1):\n            ans.append(2 * n + 2 * i - 1)\n            ans.append(2 * i - 1)\n            if 2 * n + 2 * i <= m:\n                ans.append(2 * n + 2 * i)\n            ans.append(2 * i)        \n        for i in range((m - 2 * n + 1) // 2 + 1, n + 1):\n            ans.append(2 * i - 1)\n            ans.append(2 * i)\n        print(' '.join(str(i) for i in ans))\n    \n\n__starting_point()", "import sys\nimport math\nimport itertools as it\nimport operator as op\nimport fractions as fr\n\n\nn,m = list(map(int, sys.stdin.readline().split()))\n\nA = [[-1 for _ in range(4)] for _ in range(n)]\n\ni,j = 0,0\nfor k in range(1,m+1):\n  A[i][j] = k\n  if i == n-1 and j == 3:\n    i,j = 0,2\n  elif j > 1: \n    i+=1\n  j = [3,2,1,0][j]\n\ni,j = 0,1\nB = []\nfor _ in range(4*n):\n  if A[i][j] != -1:\n    B.append(A[i][j])\n  if j == 3:\n    i += 1\n  j = [2,0,3,1][j]\n\nprint(' '.join(map(str,B)))\n", "s = input().split()\nn = int(s[0])\nm = int(s[1])\nbus = [0 for i in range(0, 4*n)]\nu = 1\ni = 0\nwhile u<m and i<n:\n\tbus[4*i] = u\n\tbus[4*i+3] = u+1\n\tu = u+2\n\ti = i+1\nif u==m and i<n:\n\tbus[4*i] = u\n\tu = u+1\ni = 0\nwhile u<m and i<n:\n\tbus[4*i+1] = u\n\tbus[4*i+2] = u+1\n\tu = u+2\n\ti += 1\nif u==m and i<n:\n\tbus[4*i+1] = u\n\tu = u+1\nfor y in range(n):\n\tif bus[4*y+1]!=0:\n\t\tprint (bus[4*y+1], end = ' ')\n\tif bus[4*y]!=0:\n\t\tprint (bus[4*y], end = ' ')\n\tif bus[4*y+2]!=0:\n\t\tprint (bus[4*y+2], end = ' ')\n\tif bus[4*y+3]!=0:\n\t\tprint (bus[4*y+3], end = ' ')", "a=input().split()\nb=int(a[0])\nc=int(a[1])\nl1=[]\nl2=[]\nl3=[]\nl4=[]\nfor i in range (1,c+1):\n    if i <= 2*b:\n        if i %2==1:\n            l1.append(i)\n        else:\n            l4.append(i)\n    else:\n        if i %2==1:\n            l2.append(i)\n        else:\n            l3.append(i)\nl=[]\ni=0\nwhile i <= (int(c)+1):\n    try:\n        l.append(l2[i])\n    except:\n        pass\n    try:\n        l.append(l1[i])\n    except:\n        pass\n    try:\n        l.append(l3[i])\n    except:\n        pass\n    try:\n        l.append(l4[i])\n    except:\n        pass\n    i+=1\ns=''\nfor i in l:\n    s=s+str(i)+' '\nprint(s)", "n,m=map(int,input().split())\nop=[]\nif m<=2*n:\n    for i in range(1,m+1):\n        print(i,end=' ')\nelse:\n    p=m-2*n\n    l=p%2\n    p=p//2\n    for i in range(1,p+1):\n        op.append(2*n+2*i-1)\n        op.append(2*i-1)\n        op.append(2*n+2*i)\n        op.append(2*i)\n    if l==1:\n        op.append(m)\n    for i in range(2*p+l,2*n+1):\n        op.append(i)\n    op2=[]\n    for i in op:\n        if i not in op2:\n            print(i,end=' ')\n            op2.append(i)\n        \n", "'__author__'=='deepak Singh Mehta) learning to code '\n\n\n\n\n\ndef __starting_point():\n    n,m = map(int,input().split())\n    assert(m>=1 and m<=(4*n))\n    if m%2!=0: #odd\n        k = (n*4)//2\n        k += 1\n        for i in range(1,(n*4)//2+1):\n            if k<=m:\n                print(k,end=' ')\n                k += 1\n            if i<=m:\n                print(i,end=' ')\n            \n    else: #even\n        k = (n*4)//2\n        k += 1\n        for i in range(1,(n*4)//2+1):\n            if k<=m :\n                print(k,end=' ')\n                k += 1\n            if i<=m:\n                print(i,end=' ')\n\n__starting_point()", "n, m = list(map(int, input().split(' ')))\nm_c = m\n\nmatrix = [[0 for x in range(4)] for x in range(n)]\n\ndef fillM(matrix, left):\n    right = 3 - left\n    row = 0\n    count = 0\n    nonlocal m_c\n    nonlocal m\n    nonlocal n\n\n    while m_c > 0 and row<n:\n        #print(row, left)\n        matrix[row][left] = m - m_c + 1\n        m_c = m_c - 1\n\n        if m_c <= 0:\n            return 0\n\n        #print(row, right)\n        matrix[row][right] = m - m_c + 1\n        m_c = m_c - 1\n        row += 1\n\nfillM(matrix, 0)\nfillM(matrix, 1)\n\narr3 = []\n\nfor row in range(n):\n    if not(matrix[row][1]==0):\n        arr3.append(str(matrix[row][1]))\n    if not(matrix[row][0]==0):\n        arr3.append(str(matrix[row][0]))\n    if not(matrix[row][2]==0):\n        arr3.append(str(matrix[row][2]))\n    if not(matrix[row][3]==0):\n        arr3.append(str(matrix[row][3]))\n\n#import numpy as np\n#print(np.array(matrix))\n\nprint(' '.join(arr3))\n", "s = input().split()\nn, m = int(s[0]), int(s[1])\n\nt = [0, 0, 0, 0]\nx = []\nk = 0\nfor i in range(n):\n    x.append(t.copy())\n\nfor i in range(n):\n    for j in (0, 3):\n        if k == m:\n            break\n        k = k + 1\n        x[i][j] = k\nfor i in range(n):\n    for j in (1, 2):\n        if k == m:\n            break\n        k = k + 1\n        x[i][j] = k\n\ns = \"\"\nfor i in range(n):\n    for j in (1, 0, 2, 3):\n        if x[i][j] != 0:\n            s += str(x[i][j]) + ' '\nprint(s)\n", "ans = []\ndef fillin1(m, n, r1, r2, r3, r4):\n\tif m > 2*n:\n\t\ttemp = m - 2*n + 2\n\t\tif temp < 4:\n\t\t\tif temp == 3:\n\t\t\t\tans.extend([r2, r1, r4])\n\t\t\telif temp == 2:\n\t\t\t\tans.extend([r1, r4])\n\t\t\tfillin1(m-temp, n-1, r1+2, r2+2, r3+2, r4+2)\n\t\t\n\t\telse:\n\t\t\tans.extend([r2, r1, r3, r4])\n\t\t\tfillin1(m-4, n-1, r1+2, r2+2, r3+2, r4+2)\n\telse:\n\t\tans.extend(list(range(r1, r1+m)))\n\nn, m = map(int, input().split(' '))\nfillin1(m, n, 1, n*2+1, n*2+2, 2)\nans = map(lambda x: str(x), ans)\nprint(' '.join(ans))", "n,m=map(int,input().split())\na=[[0]*4 for i in range(n)]\nfor i in range(n):\n  if i*2+1<=m: a[i][0]=i*2+1\n  if i*2+1+2*n<=m: a[i][1]=i*2+1+2*n\n  if i*2+2+n*2<=m: a[i][2]=i*2+2+2*n\n  if i*2+2<=m: a[i][3]=i*2+2\nfor i in range(n):\n  if a[i][1]: print(a[i][1],end=' ')\n  if a[i][0]: print(a[i][0],end=' ')\n  if a[i][2]: print(a[i][2],end=' ')\n  if a[i][3]: print(a[i][3],end=' ')", "n, m = list(map(int, input().split()))\nflags = [False for i in range(n * 4 + 1)]\nfor i in range(1, len(flags)):\n    if i <= m :\n        flags[i] = True\nmass = []\n#print(flags)\nfor i in range(1, n * 2, 2):\n    if flags[i + n * 2]:\n        mass.append(i + n * 2)\n    if flags[i]:\n        mass.append(i)\n    if flags[i + n * 2 + 1]:\n        mass.append(i + n * 2 + 1)\n    if flags[i+1]:\n        mass.append(i+1)\n    #print(i, mass)\nprint(' '.join(map(str, mass)))\n", "n,m=[int(c) for c in  input().split()]\nfor i in range(1, 2 * n, 2):\n    for j in (2 * n + i, i, 2 * n + i + 1, i + 1):\n        if j <= m:\n            print(j, end=' ')\n\n", "n,m=input().split(' ')\nn=int(n)\nm=int(m)\nL=[]\nfor i in range (1,2*n+1) :\n    L.append(2*n+i)\n    L.append(i)\n\nfor i in range(4*n) :\n    if L[i]<=m :\n        print(L[i],end=' ')", "n, m = (int(token) for token in input().split())\n\nres = [] \nfor i in range(1, 2 * n + 1):\n    if 2 * n + i <= m:\n        res.append(str(2 * n + i))\n    if i <= m:\n        res.append(str(i))\nprint(' '.join(res))\n", "n,m=list(map(int,input().split()))\nleft=[]\nright=[]\nfor i in range (n):\n    left.append([])\n    right.append([])\nfor i in range (m):\n    if i<2*n :\n        if i % 2 == 0:\n            left[i//2].append(i+1)\n        else :\n            right[i//2].append(i+1)\n    else:\n        if i % 2 == 0:\n            left[(i-2*n)//2].append(i+1)\n        else :\n            right[(i-2*n)//2].append(i+1)\n        \n  \n  \ns=''\nfor i in range (n):\n        for j in range(len(left[i])-1,-1,-1):\n            s+=str(left[i][j])+' '    \n        for j in range(len(right[i])-1,-1,-1):\n            s+=str(right[i][j])+' '\nprint(s[:-1])\n\n    \n\n"]