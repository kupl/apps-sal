["\"\"\"\nCodeforces Contest 288 Div 2 Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    m,t,r = read()\n    w = read()\n    if t < r: return -1\n    covers = [0]*1000\n    ct = 0\n    for i in w:\n        x = covers[i]\n        for j in range(r-x):\n            for k in range(t):\n                covers[i-j+k] += 1\n            ct += 1\n    return ct\n\n\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "import sys\nimport math\n\nm, t, r = map(int, input().split())\n\nif r > t:\n    print(-1)\n    return\n    \ncandles = []    \ngh = list(map(int, input().split()))\n\nfor i in range(m):\n    g = gh[i]\n    now_on = 0\n    for c in candles:\n        if g - c <= t:\n            now_on += 1\n    \n    for k in range(r - now_on):\n        candles.append(g - 1 - k)\n        \nprint(len(candles))", "import collections\n\nm, t, r = list(map(int, input().split()))\nw = list(map(int, input().split()))\n\nresult = 0\ncurrent = collections.deque()\nused = set()\n\ndef main():\n    nonlocal result, current\n    for ghost in w:\n        while current and current[0] < ghost:\n            current.popleft()\n        required = r - len(current)\n        result += required\n        moment = ghost\n        for i in range(required):\n            moment -= 1\n            while moment in used:\n                moment -= 1\n            if ghost - moment > t:\n                print(-1)\n                return\n            used.add(moment)\n            current.append(moment + t)\n        current = collections.deque(sorted(current))\n    print(result)\n\nmain()\n", "m, t, r = map(int, input().split())\ndata = list(map(int, input().split()))\n\nif r > t:\n    print(-1)\nelse:\n    candles = []\n    total = 0\n\n    for x in data:\n        while candles and candles[0] + t - 1 < x:\n            candles.pop(0)\n\n        need = r - len(candles)\n\n        for n in range(need):\n            candles.append(x - (need - 1) + n)\n            total += 1\n\n    print(total)", "M,T,R = [int(x) for x in input().split()]\nW = [int(x) for x in input().split()]\nW.sort()\nif T<R:\n    print(-1)\n    return\ncandle_cnt = 0\ncandles_num = [0 for i in range(601)]\nfor w in W:\n    for i in range(R):\n        if candles_num[w]<R:\n            for j in range(w-i,w-i+T):\n                candles_num[j] += 1\n            candle_cnt += 1\n        else:\n            break\nprint(candle_cnt)", "import math\nimport sys\n\ndebug = False\n\nif debug:\n    fin = open('input.txt', 'r')\n    fout = open('output.txt', 'w')\nelse:\n    fin = sys.stdin\n    fout = sys.stdout\n\ns = fin.readline()\nm, t, r = list(map(int, s.split()))\n\nif r > t:\n    fout.write('-1')\n    return\n\ns = fin.readline()\nw = list(map(int, s.split()))\n\nans = r\nar = [w[0] - r + i for i in range(r)]\nfor i in range(1, m):\n    while ar and w[i] - ar[0] > t:\n        ar.pop(0)\n    ans += r - len(ar)\n    b = r - len(ar)\n    for j in range(b):\n        ar.append(w[i] - b + j)\n\nfout.write(str(ans))\n", "m, t, r = map(int, input().split())\nw = list(map(int, input().split()))\nw.sort()\ncur = set()\ncur1 = set()\ncnt = 0\n\nfor i in range(m):\n    for j in cur:\n        if j + t >= w[i]:\n            cur1.add(j)\n    cur = set()\n    for j in cur1:\n        cur.add(j)\n    cur1 = set()\n\n    j = w[i] - 1\n    while j >= w[i] - t and len(cur) < r:\n        if not j in cur:\n            cur.add(j)\n            cnt += 1\n        j -= 1\n\n    if len(cur) < r:\n        print(-1)\n        return\n\nprint(cnt)", "m,t,r=input().split(' ')\nm=int(m)\nt=int(t)\nr=int(r)\nif t<r:\n    input()\n    need=-1\nelse:\n    candles=[]\n    need=r\n    ghosts=input().split(' ')\n    for i in range(r):\n        candles.append(t-i)\n    for i in range(len(ghosts)-1):\n        dead=[]\n        diff=int(ghosts[i+1])-int(ghosts[i])\n        for j in range(len(candles)):\n            candles[j]=max(candles[j]-diff,0)\n            if candles[j] is 0:\n                dead.append(candles[j])\n        for candle in dead:\n            candles.remove(0)\n        need+=r-len(candles)\n        for k in range(r-len(candles)):\n            candles.append(t-k)\nprint(need)", "m,t,r = [int(x) for x in input().strip().split()]\nghosts = [int(x) for x in input().strip().split()]\n\ncandles = [ ghosts[0]-1-x+t for x in range(0,r) ]\nusedTimes = [ ghosts[0]-1-x for x in range(0,r) ]\nres = r\n\n#print(candles)\nfor i in range(0,m):\n\n    for j in range(0,r):\n\n        candleTime = candles[j]\n        if candleTime < ghosts[i]:\n\n            possibleTime = ghosts[i] - 1\n            canFindTime = False\n            while possibleTime >= ghosts[i] - t:\n\n                if usedTimes.count( possibleTime ) == 0:\n                    candles[j] = possibleTime + t\n                    res += 1\n                    canFindTime = True\n                    usedTimes.append( possibleTime )\n                    break\n                else:\n                    possibleTime -= 1\n\n            if not canFindTime:\n                res = -1\n                break\n\n    if res == -1:\n        break\n\nprint(res)\n", "m, t, r = map(int, input().split())\narr = [int(x) for x in input().split()]\narr.reverse()\n\nans, tmp = 0, [0 for _ in range(620)]\nfor i in range(len(arr)):\n\n    candles = 0\n    for j in range(arr[i]-1+310, arr[i]-t-1+310, -1):\n        if tmp[j] == 1:\n            candles += 1\n    \n    for j in range(arr[i]-t+310, arr[i]+310):\n        if candles >= r:\n            break\n        if tmp[j] == 0:\n            tmp[j] = 1\n            candles += 1\n            ans += 1\n            #print(j-310)\n\n    if candles < r:\n        ans = -1\n        break\n\nprint(ans)", "def main():\n    m, t, r = list(map(int, input().split()))\n    gh = sorted(map(int, input().split()), reverse=True)\n    if r > t:\n        print(-1)\n        return\n    l = [False] * 600\n    for g in gh:\n        g -= t\n        for i in range(g, g + r - sum(l[i] for i in range(g, g + t))):\n            l[i] = True\n    print(sum(l))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "a,b,c = map(int,input().split())\nt=sorted(map(int,input().split()),reverse=True)\nif c>b:\n    print('-1')\nelse:\n    q=[False]*600\n    for k in t:\n        k=k-b\n        for j in range(k,k+c-sum(q[i] for i in range(k,k+b))):\n            q[j]=True\n    print(sum(q))", "(m,t,r)=input().split(sep=None, maxsplit=300)\n(m,T,r)=(int(m),int(t),int(r))\nx=input().split(sep=None, maxsplit=m)\nk=r\nout=set([])\nu=[int(x[0])+T-1-i for i in range(r)]\nout|=set(u)\nkey=True\nfor i in range(m):\n    if not key:\n        break\n    v=int(x[i])\n    t=v+T-1\n    for j in range(r):\n        if v<=u[j]:\n            continue\n        while t in out and t>=v:\n            t-=1\n        if t<v:\n            key=False\n            break\n        else:\n            out|=set([t])\n            u[j]=t\n            k+=1\n            t-=1\nif(key):\n    print(k)\nelse:\n    print(-1)", "m, t, r = map(int, input().split())\nif t < r:\n    print(-1)\n    return\nw, l, v = list(map(int, input().split())), [r] * m, 0\nfor i in range(m):\n    for j in range(l[i]):\n        v += 1\n        for k in range(i + 1, m):\n            if w[i] - j - 1 + t < w[k]:\n                break\n            l[k] -= 1\nprint(v)", "m,t,r = map(int, input().split())\nw = list(map(int, input().split()))\n\nif r > t:\n    print(-1); return;\n    \ncandles = []\nfor i in range(m):\n    ct = 0\n    for c in candles:\n        if w[i] - c <= t:\n            ct += 1\n    for k in range(r - ct):\n        candles.append(w[i] - k - 1)\nprint(len(candles))", "m, t, r = [int(i) for i in input().split()]\nw = [int(i) for i in input().split()]\nif r > t:\n    print(-1)\n    return\ncandles = list(range(w[0]-r,w[0]))\nans = r\nfor i in range(1,len(w)):\n    candles = [candle for candle in candles if candle >= w[i]-t]\n    dis = r-len(candles)\n    candles += list(range(w[i]-dis,w[i]))\n    ans += dis\nprint(ans)\n", "import sys\n\nlimit = 300\n\nm, span, need = list(map(int, input().split()))\nvisits = list(map(int, input().split()))\nif need > span:\n    print(-1)\n    return\n\nresult = 0\ncount = (limit + 1) * [ 0 ]\nfor visit in visits:\n    for i in range(need - count[visit]):\n        for pos in range(max(0, visit - i), min(visit - i + span, limit + 1)):\n            count[pos] += 1\n        result += 1\nprint(result)\n", "import sys\n\nghosts, duration, candles = input().split()\narrival = input().split()\nburn = []\nfor j in range(len(arrival)):\n    time = int(arrival[len(arrival) - 1 - j])\n    candle = int(candles)\n    if len(burn) != 0:\n        for k in range(len(burn)):\n            if burn[k] <= time:\n                candle -= 1\n    for i in range(candle):\n        burn.append(time - int(duration) + 1 + i)\n    if burn[-1] > time:\n        print('-1')\n        return\nprint(len(burn))\n", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)\n", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)\n", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)\n", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)\n", "f = lambda: list(map(int, input().split()))\nm, t, r = f()\np, s = [], 0\nfor w in f():\n    p = [q for q in p if q > w]\n    d = r - len(p)\n    p += [w + t - i for i in range(d)]\n    s += d\nprint(-1 if t < r else s)\n"]