["string=input()\nlength=len(string)\ngoodbad=[[1, 0, 0, 0] for x in range(length)]\n\n#good odd\n#bad odd\n#good even\n#bad even\n\nfor i in range(length-1):\n    if string[i]==string[i+1]:\n        goodbad[i+1][0]+=goodbad[i][2]\n        goodbad[i+1][2]+=goodbad[i][0]\n        goodbad[i+1][1]+=goodbad[i][3]\n        goodbad[i+1][3]+=goodbad[i][1]\n    else:\n        goodbad[i+1][3]+=goodbad[i][0]\n        goodbad[i+1][0]+=goodbad[i][3]\n        goodbad[i+1][1]+=goodbad[i][2]\n        goodbad[i+1][2]+=goodbad[i][1]\n\noddct=0\nevenct=0\nfor i in range(len(goodbad)):\n    oddct+=goodbad[i][0]\n    evenct+=goodbad[i][2]\nprint(evenct, oddct)\n", "s = input()\na = []\nfor c in s:\n    a.append(ord(c) - ord('a'))\ncnt = [[0, 0], [0, 0]]\nans = [0, 0]\nfor i in range(len(a)):\n    cnt[a[i]][i % 2] += 1\n    ans[0] += cnt[a[i]][i % 2]\n    ans[1] += cnt[a[i]][1 - i % 2]\nprint(ans[1], ans[0])", "t = input()\nn = len(t)\nt = [-1] + [i for i in range(n - 1) if t[i] != t[i + 1]] + [n - 1]\nn = len(t) - 1\nu, v = [0] * n, [0] * n\nfor i in range(n):\n    d = t[i + 1] - t[i]\n    k = d // 2\n    u[i] = v[i] = k\n    if d & 1:\n        if t[i] & 1: v[i] += 1\n        else: u[i] += 1\n    i += 1\na = sum(u[i] for i in range(0, n, 2))\nb = sum(v[i] for i in range(0, n, 2))\nc = sum(u[i] for i in range(1, n, 2))\nd = sum(v[i] for i in range(1, n, 2))\nprint(a * b + c * d, (a * (a + 1) + b * (b + 1) + c * (c + 1) + d * (d + 1)) // 2)", "cnt = [[0 for col in range(2)] for row in range(2)]\nans = [0 for col in range(2)]\nstrx = input()\nlength = len(strx)\nfor i in range(length):\n    if(strx[i]=='a'):\n        cnt[0][i & 1]=cnt[0][i & 1]+1\n        ans[0]+=cnt[0][i & 1 ^ 1]\n        ans[1]+=cnt[0][i & 1]\n    else:\n        cnt[1][i & 1]=cnt[1][i & 1]+1\n        ans[0]+=cnt[1][i & 1 ^ 1]\n        ans[1]+=cnt[1][i & 1]\nprint(ans[0],ans[1])\n", "s = input()\nodd = 0\neven = 0\ncntE = [0, 0]\ncntO = [0, 0]\nfor i in range(len(s)):\n    cur = 0 + int(s[i] == 'b')\n    odd += 1\n    if i % 2 == 0:\n        odd += cntE[cur]\n        even += cntO[cur]\n        cntE[cur] += 1\n    else:\n        odd += cntO[cur]\n        even += cntE[cur]\n        cntO[cur] += 1\nprint(even, odd)", "def main():\n    s = input()\n\n    a = [0, 0]\n    b = [0, 0]\n    res = [0, 0]\n    for i, c in enumerate(s, 1):\n        ii, ij = i%2, (i+1)%2\n        _a = a if c == 'a' else b\n        res[1] += _a[ii] + 1\n        res[0] += _a[ij]\n        _a[ii] += 1\n\n    print(*res)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "s = input()\nd = {'a': [0, 0], 'b': [0, 0]}\nodd = even = 0\nfor i in range(len(s)):\n    d[s[i]][i & 1] += 1\n    odd += d[s[i]][i & 1]\n    even += d[s[i]][1 - i & 1]\nprint(even, odd)\n", "s = input()\nep, op, enp, onp = 0, 0, 0, 0\nprev = ''\ntotalE, totalO = 0, 0\nfor c in s:\n\tif prev == c:\n\t\tep, op, enp, onp = op, ep + 1, onp, enp\n\telse:\n\t\tep, op, enp, onp = onp, 1 + enp, op, ep\n\t# print(ep, op, enp, onp, c)\n\ttotalO, totalE = totalO + op, totalE + ep\n\tprev = c\nprint(totalE, totalO)", "s = input()\noddc = {'a':0,'b':0}\nevenc = {'a':0,'b':0}\nodd = 0\neven = 0\nfor i in range(len(s)):\n\todd+=1\n\tif i%2 == 0:\n\t\teven += oddc[s[i]]\n\t\todd += evenc[s[i]]\n\t\tevenc[s[i]]+=1\n\telse:\n\t\teven += evenc[s[i]]\n\t\todd += oddc[s[i]]\n\t\toddc[s[i]]+=1\nprint(str(even) + \" \" + str(odd))", "s = input()\nm = [2*[0] for _ in range(2)] \nodd, even = 0, 0\nfor i in range(len(s)):\n    m[1 if s[i] == 'a' else 0][i % 2] += 1\n    odd += m[1 if s[i] == 'a' else 0][i % 2]\n    even += m[1 if s[i] == 'a' else 0][not (i % 2)]\n\nprint(even, odd)\n", "s = input()\nodd = 0\neven = 0\ncntE = [0, 0]\ncntO = [0, 0]\nfor i in range(len(s)):\n    cur = 0 + int(s[i] == 'b')\n    odd += 1\n    if i % 2 == 0:\n        odd += cntE[cur]\n        even += cntO[cur]\n        cntE[cur] += 1\n    else:\n        odd += cntO[cur]\n        even += cntE[cur]\n        cntO[cur] += 1\nprint(even, odd)", "'''input\nbabaa\n'''\nfrom sys import stdin\n\n\n# main starts\nstring = list(stdin.readline().strip())\nodd_a = 0; even_a = 0; odd_b = 0; even_b = 0\neven = 0\nodd = 0\n\nfor i in string:\n\tif i == 'a':\n\t\ttemp = odd_a\n\t\todd_a = even_a + 1\n\t\teven_a = temp\n\t\teven_b, odd_b = odd_b, even_b\n\t\todd += odd_a\n\t\teven += even_a\n\telse:\n\t\ttemp = odd_b\n\t\todd_b = even_b + 1\n\t\teven_b = temp\n\t\teven_a, odd_a = odd_a, even_a\n\t\todd += odd_b\n\t\teven += even_b\nprint(even, odd)\n\n", "s = input()\n\ncntodda = 0\ncntoddb = 0\n\ncntevena =0\ncntevenb = 0\n\nevencnt = 0\noddcnt = 0\n\nfor i in range(len(s)):\n    oddcnt += 1\n    if i%2 == 0:\n        if s[i]=='a':\n            evencnt += cntodda\n            oddcnt += cntevena\n        else:\n            evencnt += cntoddb\n            oddcnt += cntevenb\n        if s[i]=='a':\n            cntevena+=1\n        else:\n            cntevenb+=1\n    else:\n        if s[i]=='a':\n            evencnt += cntevena\n            oddcnt += cntodda\n        else:\n            evencnt += cntevenb\n            oddcnt += cntoddb\n        if s[i]=='a':\n            cntodda += 1\n        else:\n            cntoddb += 1\nprint(evencnt, oddcnt)\n", "def R(): return map(int, input().split())\ndef I(): return int(input())\ndef S(): return str(input())\n\ndef L(): return list(R())\n\nfrom collections import Counter \n\nimport math\nimport sys\n\nfrom itertools import permutations\n\n\nimport bisect\n\nmod=10**9+7\n\n#print(bisect.bisect_right([1,2,3],2))\n#print(bisect.bisect_left([1,2,3],2))\n\ns=S()\nl=len(s)\nA=[0]*2\nB=[0]*2\nfor i in range(2):\n    A[i]=[0]*(l+3)\n    B[i]=[0]*(l+3)\n\n\n\nfor i in range(l):\n    for j in range(2):\n        if i%2!=j:\n            A[j][i]=A[j][i-1]\n            B[j][i]=B[j][i-1]\n        else:\n            A[j][i]=A[j][i-2]+(s[i]=='a')\n            B[j][i]=B[j][i-2]+(s[i]=='b')\n\nans=[0]*2\n\nfor i in range(l):\n    if s[i]=='a':\n        ans[0]+=A[1-i%2][i]\n        ans[1]+=A[i%2][i]\n    else:\n        ans[0]+=B[1-i%2][i]\n        ans[1]+=B[i%2][i]\n\nprint(ans[0],ans[1])", "import sys\nimport collections as cc\ninput=sys.stdin.readline\nI=lambda:list(map(int,input().split()))\ns=input().strip()\nf=cc.defaultdict(list)\nf['a']=[0,0]\nf['b']=[0,0]\nod=0\nev=0\nfor i in range(len(s)):\n\tif i%2==0:\n\t\tod+=f[s[i]][0]\n\t\tev+=f[s[i]][1]\n\telse:\n\t\tod+=f[s[i]][1]\n\t\tev+=f[s[i]][0]\n\tf[s[i]][i%2]+=1\nprint(ev,od+len(s))", "s = input()\n\nblocks = []\n\nevenA = [0]\noddA = [0]\nevenB = [0]\noddB = [0]\n\neven = True\n\nfor x in s:\n    evenA.append(evenA[-1])\n    oddA.append(oddA[-1])\n    evenB.append(evenB[-1])\n    oddB.append(oddB[-1])\n    if x == 'a':\n        if even:\n            evenA[-1] += 1\n        else:\n            oddA[-1] += 1\n    else:\n        if even:\n            evenB[-1] += 1\n        else:\n            oddB[-1] += 1\n\n    even = not even\n\neven = True\ntotalE = 0\ntotalO = 0\n\n\nfor x in range(len(s)):\n    if s[x] == 'a':\n        if x%2 == 0:\n            totalE += evenA[-1] - evenA[x]\n            totalO += oddA[-1] - oddA[x]\n        else:\n            totalE += oddA[-1] - oddA[x]\n            totalO += evenA[-1] - evenA[x]\n    else:\n        if x%2 == 0:\n            totalE += evenB[-1] - evenB[x]\n            totalO += oddB[-1] - oddB[x]\n        else:\n            totalE += oddB[-1] - oddB[x]\n            totalO += evenB[-1] - evenB[x]\n\nprint(totalO,totalE)\n\n", "#!/usr/bin/env python3\nfrom sys import stdin\n\n\ndef solve():\n    s = stdin.readline().strip()\n    n = len(s)\n\n    sfa = [[0, 0] for i in range(n+1)]\n    sfb = [[0, 0] for i in range(n+1)]\n    for i in range(n-1, -1, -1):\n        sfa[i][:] = sfa[i+1][:]\n        sfb[i][:] = sfb[i+1][:]\n        if s[i] == 'a':\n            sfa[i][i % 2] += 1\n        else:\n            sfb[i][i % 2] += 1\n\n    ans = [0, 0]\n    for i in range(n):\n        if s[i] == 'a':\n            ans[0] += sfa[i+1][i % 2]\n            ans[1] += sfa[i+1][(i+1) % 2]\n        else:\n            ans[0] += sfb[i+1][i % 2]\n            ans[1] += sfb[i+1][(i+1) % 2]\n\n    print(ans[1], ans[0]+n)\n\n\nsolve()\n", "s=input()\nd=dict()\nd['a']=[0,0]\nd['b']=[0,0]\nodd=even=0\nfor i  in range(len(s)):\n  d[s[i]][i&1]+=1\n  odd+=d[s[i]][i&1]\n  even+=d[s[i]][1- i&1]\n\nprint(even,odd)\n"]