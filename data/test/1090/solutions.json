["def main():\n    N, K = list(map(int, input().split()))\n    S = list(input())\n    base = S[0]\n    flag = False\n    for i in range(0, N):\n        if K == 0:\n            break\n        if S[i] != base and (not flag):\n            flag = True\n            S[i] = base\n        elif S[i] != base and flag:\n            S[i] = base\n        elif S[i] == base and flag:\n            flag = False\n            K -= 1\n        else:\n            pass\n    \n    ans = 0\n    for i in range(N-1):\n        ans += S[i] == S[i+1]\n    \n    print(ans)\n  \ndef __starting_point():\n    main()\n\n__starting_point()", "n,k = map(int,input().split())\ns = input()\n\nrl = 0\nend = 0\nif s[0] == \"L\":\n    end += 1\nif s[-1] == \"R\":\n    end += 1\nfor i in range(n-1):\n    if s[i] == \"R\" and s[i+1] == \"L\":\n        rl += 1\n\nans = n - 2*rl - end\n\nif end == 0:\n    if k >= rl:\n        ans += 2*rl\n        ans -= 1\n    else:\n        ans += 2*k\nelif end == 1:\n    if k >= rl:\n        ans += 2*rl\n    else:\n        ans += 2*k\nelif end == 2:\n    if k == rl:\n        ans += 2*rl\n    elif k >= rl+1:\n        ans += 2*rl\n        ans += 1\n    else:\n        ans += 2*k\nprint(ans)", "n,k=map(int,input().split())\ns=input()\na=sum([s[i+1]==s[i] for i in range(n-1)])\nprint(min(a+2*k,n-1))", "n,k = map(int,input().split())\ns = input()\n\ncnt = 0\nfor i in range(n-1):\n    if s[i]!=s[i+1]:\n        cnt += 1\nprint(min(n-1,n-1-cnt+2*k))", "import sys\n\nn,k=list(map(int,input().split()))\ns=input()\n\nlcnt=-1\nrcnt=-1\n\nrr=[0]*n\nll=[0]*n\nsim=\"\"\nfor si in s:\n    if si==\"R\" and sim==\"R\":\n        rr[rcnt]+=1\n    elif si==\"R\" and sim!=\"R\":\n        rcnt+=1\n        rr[rcnt]=1\n    if si==\"L\" and sim==\"L\":\n        ll[lcnt]+=1\n    elif si==\"L\" and sim!=\"L\":\n        lcnt+=1\n        ll[lcnt]=1\n    sim=si\n        \nll=[i for i in ll if i!=0]\nrr=[i for i in rr if i!=0]\n#print(ll)\n#print(rr)\n\nminlen=min(len(ll),len(rr))\nif minlen<=k:\n    print((n-1))\n    return\n    \nfor i in range(k):\n    ll[i]+=rr[i]\n    rr[i]=0\n\nfor i in range(len(ll)-1):\n    if i<len(rr) and ll[i]!=0 and rr[i]==0 :\n        ll[i+1]+=ll[i]\n        ll[i]=0\n\nicnt=0\nfor i in range(len(ll)):\n    icnt+=max(ll[i]-1,0)\nfor i in range(len(rr)):\n    icnt+=max(rr[i]-1,0)\n    \nprint(icnt)\n", "import sys\n\ndef read_str(): return sys.stdin.readline().strip()\ndef read_int(): return int(sys.stdin.readline().strip())\ndef read_ints(): return list(map(int, sys.stdin.readline().strip().split()))\ndef read_str_split(): return list(sys.stdin.readline().strip())\ndef read_int_list(): return list(map(int, sys.stdin.readline().strip().split()))\n\ndef Main():\n    n, k = read_ints()\n    s = read_str()\n    cnt = s.count('RL') + s.count('LR') + 1\n    cnt = min(n-1, n-cnt+2*k)\n    print(cnt)\n\ndef __starting_point():\n    Main()\n\n__starting_point()", "n, k = [int(i) for i in input().split()]\ns = input()\n\nstatus = s[0]\ncnt = 1\nsa = []\nfor i in range(1, n):\n    if s[i] != status:\n        sa.append(status * cnt)\n        cnt = 0\n        status = s[i]\n    cnt += 1\nsa.append(status * cnt)\n\nfor i in range(1, min(k*2, len(sa)), 2):\n    sa[i] = (\"R\" if sa[i][0] == \"L\" else \"L\") * len(sa[i])\n\nsa = ''.join(sa)\n\nans = 0\nfor i in range(n):\n    if sa[i] == \"L\":\n        if i > 0: \n            if sa[i-1] == \"L\": ans += 1\n    else:\n        if i < n-1:\n            if sa[i+1] == \"R\": ans += 1\n\nprint(ans)", "def count(s):\n\tc=0\n\t\n\tfor i in range(len(s)-1):\n\t\tif s[i+1] == s[i]:\n\t\t\tc += 1\n\treturn c\n\t\nn, k = list(map(int, input().split()))\ns = input()\na = [str(c) for c in s]\ncmax = n-1\np = count(a)\nwhile 1:\n  if p == cmax:\n    break\n  elif p == cmax +1:\n    p -=1\n    break\n  elif k > 0:\n    p += 2\n    k -= 1\n  else:\n    break\n\t\t\nprint(p)\n\n\n", "(str_len,cng_cnt) = input().split(\" \")\nstr_input = list(input())\n\nstr_len= int(str_len)\ncng_cnt= int(cng_cnt)\ntmp1=\"\"\ncnt=0\ncnt2=0\nfor st in str_input:\n    if(tmp1 == st ):\n      cnt = cnt+1\n    else:\n      cnt2= cnt2 + 1\n      \n    tmp1=st\n\nif (cng_cnt < cnt2-1 ):\n\tc_up = cng_cnt * 2 \nelse:\n\tc_up= (cnt2 * 2) + (cng_cnt - cnt2)\nans =cnt + c_up\n\nif(ans >= str_len):\n  ans =str_len-1\n\nprint(ans)", "N, K = list(map(int, input().split()))\nS = str(input())\n\ncount = 0\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        count += 1\n\nprint(min(N-1, N - 1 - count + K*2))", "n,k=map(int,input().split())\ns=input()\n\nscore=0\nfor i in range(n-1):\n    if s[i]==s[i+1]:\n        score+=1\nans=min(score+2*k,n-1)\nprint(ans)", "n, k = map(int, input().split())\ns = input()\na = 'A'\ncnt = 0\nfor i in s:\n  if a != i:\n    a = i\n    cnt += 1\nprint(n-max(1,cnt-2*k))", "from collections import deque\n\ndef main():\n  n,k=map(int,input().split())\n  s=input()\n  # maked group\n  t=[]\n  t.append(s[0])\n  x=s[0]\n  for i in range(1,n):\n    if x!=s[i]:\n      t.append(s[i])\n      x=s[i]\n  #print(t)\n  \n  j=0\n  t=deque(t)\n  while j<k:\n    if len(t)<=2:\n      print(n-1)\n      return\n    t.popleft()\n    t.popleft()\n    j+=1\n    \n  print(n-1-(len(t)-1))\n\n  \ndef __starting_point():\n  main()\n__starting_point()", "# \u300c\u64cd\u4f5c\u3092\u6700\u5927 K \u56de\u307e\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u300d\u3068\u3044\u3046\u554f\u984c\u8a2d\u5b9a\u306f\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u3067\u304d\u308b\u3053\u3068\u304c\u3068\u3066\u3082\u9650\u3089\u308c\u3066\u304f\u308b\n# \u30fb1\u56de\u64cd\u4f5c\u3059\u308b\u3054\u3068\u306b\u3001\u4f55\u3089\u304b\u306e\u5024\u304c\u898f\u5247\u7684\u306b\u5909\u5316\u3057\u3066\u3044\u304f\n# \u30fb\u306a\u3093\u3089\u304b\u306e\u610f\u5473\u3067 Greedy \u306b\u3001\u9806\u306b\u3084\u3063\u3066\u3044\u304f\u3068\u3088\u3044\n# \u3068\u306b\u304b\u304f\u3001\u64cd\u4f5c\u306e\u610f\u5473\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8a00\u3044\u63db\u3048\u308b\n# \u6587\u5b57\u5217S(\u9577\u3055N)\u306e\u30b9\u30b3\u30a2\u306f\u3001\u300c\u6587\u5b57\u3068\u6587\u5b57\u3068\u306e\u9593\u306e\u9699\u9593(N-1\u500b)\u300d\u306e\u3046\u3061L\u3068R\u304c\u96a3\u63a5\u3057\u3066\u3044\u308b\u3082\u306e(a\u500b\u3068\u3059\u308b)\u3092\u9664\u3044\u305f\u3001N\u22121\u2212a\n# \u4e00\u56de\u306e\u53cd\u8ee2\u64cd\u4f5c\u3067\u3001L\u3068R\u306e\u5909\u308f\u308a\u76ee\u30922\u7b87\u6240\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n# \u3088\u3063\u3066\u3001\u6c42\u3081\u308b\u6700\u5927\u5024\u306f N\u22121\u2212max(a\u22122K,0)\nN, K = list(map(int, input().split()))\nS = input()\n\ncnt = 0\nfor i in range(N - 1):\n    if S[i] != S[i + 1]:\n        cnt += 1\n\nans = N - 1 - max(cnt - 2 * K, 0)\nprint(ans)\n", "N,K=list(map(int,input().split()))\nS=list(input())\n\nc,s=0,S[0]\nfor n in S[1:]:\n  if s==n:\n    c+=1\n  s=n\n\nprint((min(N-1,c+2*K)))\n", "n, k = map(int, input().split())\nS = input()\nh = 0\nfor i in range(1,n):\n    if S[i]==S[i-1]:\n        h += 1\nprint(min(h+2*k, n-1))", "N,K = map(int,input().split())\nS = input()\nprint(min(sum(S[n]==S[n+1] for n in range(N-1))+2*K,N-1))", "n, k = map(int, input().split())\ns = input()\n\nans = 0\nfor i in range(n-1):\n    if s[i] == s[i+1]:\n        ans += 1\nprint(min(ans+2*k, n-1))", "import sys\nr=sys.stdin.readline\nN,K=map(int,r().split())\nS=r().strip()\ndef HappyCnt(S):\n    cnt=0\n    if len(S)==1:\n        return cnt\n    for i in range(1,len(S)):\n        if S[i-1]==S[i]:\n            cnt+=1\n    return cnt\ncnt=HappyCnt(S)\nLR=list(S).count(\"LR\")\nRL=list(S).count(\"RL\")\nprint(min(N-1,cnt+2*K))", "N, K = map(int,input().split())\nS = input()\n\n#\u30b0\u30eb\u30fc\u30d7\u306e\u500b\u6570\ncnt = 1\n\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        cnt += 1\n\nprint(N - max(1, cnt - 2*K))", "N,K=map(int,input().split())\n\nS=input()\nface2face=0\nback2back=0\nfor i in range(N-1):\n  if S[i]=='L' and S[i+1]=='R':\n    back2back+=1\n  if S[i]=='R' and S[i+1]=='L':\n    face2face+=1\n\n\nfor i in range(K):\n  face2face-=1\n  back2back-=1\nface2face=max(face2face,0)\nback2back=max(back2back,0)\n  \nprint(N-face2face-back2back-1)", "N,K = map(int, input().split())\nS = input()\n\nA = []\npre = S[0]\ncnt = 1\nfor i in range(1,N):\n  if pre == S[i]:\n    cnt += 1\n  else:\n    pre = S[i]\n    A.append(cnt)\n    cnt = 1\nA.append(cnt)\nif len(A) == 1:\n  print(N-1)\n  return\nans = sum(A) - len(A)\n# X\u00a0\u306f\u771f\u3093\u4e2d\u3002Y\u306f\u7aef\u3063\u3053\u3002\u5f15\u6570\u306fIndex\u306eMOD2\u3002\nX,Y = [0,0], [0,0]\nfor i in range(len(A)):\n  if i == 0 or i == len(A)-1:\n    Y[i%2] += 1\n  else:\n    X[i%2] += 1\n    \nwk = [0,0]\nfor i in range(2):\n  if K <=X[i]:\n    wk[i] = K * 2\n  elif K <= X[i] + Y[i]:\n    wk[i] = X[i] * 2 + (K-X[i])\n  else:\n    wk[i] = X[i] * 2 + Y[i]\n\nprint(ans + max(wk))\nreturn\nprint(ans, wk)\nprint(A)\nprint(X)\nprint(Y)", "\ndef main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n\n    n, k = map(int, input().split())\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n-1):\n        if s[i+1] == s[i]:\n            ans += 1\n    while ans < n-1 and k > 0:\n        if n-1-ans > 1:\n            ans += 2\n        elif n-1-ans == 1:\n            ans+=1\n        k -=1\n    print(ans)\n    \n    \n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = list(map(int, input().split()))\ntarget = input('')\ntarget = list(target)\nans = 0\np = 0\nfor i in range(1, n):\n    if target[i-1] != target[i]:\n        p += 1\n    else:\n        ans += 1\n\nprint((ans+min(p, k*2)))\n", "n,k=list(map(int,input().split()))\ns=input()\n\nx=0\ny=0\nans=n\n\n# if s[0]==\"L\":\n#     y+=1\n# if s[-1]==\"R\":\n#     y+=1\n# ans+=y\n# s=\"R\"+s+\"L\"\nfor i in range(n-1):\n    if s[i:i+2]==\"RL\":\n        x+=1\n        # x+=1\n        # ans-=2\n    if s[i:i+2]==\"LR\":\n        y+=1\n\nx=max(x-k,0)\ny=max(y-k,0)\nans=ans-x-y-1\n# ans+=min(k,x-1)*2\n#\n# if (k-x+1>0)&(y==0):\n#     ans+=1\n\nprint(ans)", "n,k = map(int,input().split())\ns = input()\nprint(min(sum([1 for i in range(n-1) if s[i] == s[i+1]])+k*2,n-1))", "N,K=map(int,input().split())\nS=input()\n\nnow=S[0]\na=-1\nfor s in S:\n    a+=now==s\n    now=s\na+=K*2\nans=min(N-1,a)\nprint(ans)", "import itertools\nN, K = list(map(int,input().split()))\nS = input()\n##num = [i for i in range(1,N + 1)]\n##for i in itertools.combinations(num, 2):\n##    #print(i)\nans = 0\nfor i in range(1, N):\n    if S[i] == S[i - 1]:\n        ans += 1\n\nprint((min(N -1, ans + K * 2)))\n\n", "import sys, math\nfrom collections import deque\nsys.setrecursionlimit(10**9)\n\ndef input():\n    return sys.stdin.readline()[:-1]\n\ndef mi():\n    return map(int, input().split())\n\ndef ii():\n    return int(input())\n\ndef i2(n):\n    tmp = [list(mi()) for i in range(n)]\n    return [list(i) for i in zip(*tmp)]\n\ndef main():\n    N, K = mi()\n    S = input()\n\n    m = S.count('RL') + S.count('LR')\n    x = (N-1)-m\n\n    print(min(x+2*K, N-1))\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = map(int, input().split())\ns = input()\npre = s[0]\nrs = s[0]\nfirst = s[0]\n\nif s[0] == \"R\":\n    second = \"L\"\nelse:\n    second = \"R\"\n\nfor i in s[1:]:\n    if i == second and k > 0:\n        rs = rs + first\n        pre = i\n    elif i == first and pre == second:\n        k -= 1\n        rs = rs + i\n        pre = i\n    elif k == 0:\n        rs = rs + i\n    elif i == first and pre == first:\n        rs = rs + i\n\npre = \"0\"\nans = 0\n\nfor i in rs:\n    if i == pre:\n        ans += 1\n    pre = i\n\nprint(ans)", "n,k = map(int,input().split())\ns = input()\nedge,inside,cnt,ix = 0,0,0,0\nif s[0]=='R' or s[-1]=='R':\n  edge += 1\ntemp = ''\n#print(ix)\ns += 'L'\nfor i in range(n+1):\n  if i!=n:\n    if temp=='R' and s[i]=='L':\n      inside += 1\n    elif temp==s[i]:\n      cnt += 1\n  temp = s[i]\n#print(inside,cnt,edge)\nif inside>=k:\n  print(min(k*2+cnt,n-1))\nelse:\n  print(min(inside*2+edge+cnt,n-1))", "#!/usr/bin/env python\nimport sys\nimport re\nfrom collections import deque, defaultdict\nfrom itertools import combinations, combinations_with_replacement\nimport bisect\nfrom math import factorial, sqrt, log, ceil, floor\nsys.setrecursionlimit(1000000)\n\n\ndef solve(S, N, K, LR):\n    happy = 0\n    one = 0\n    two = 0\n    prev = None\n    for i in range(N+1):\n        s = S[i]\n        if prev is None:\n            prev = (s, i)\n            continue\n\n        if prev[0] == s:\n            continue\n\n        happy += (i - 1) - prev[1]\n        if prev[0] == LR:\n            if prev[1] == 0 and i - 1 == N - 1:\n                pass\n            elif prev[1] == 0 or i - 1 == N - 1:\n                one += 1\n            else:\n                two += 1\n        prev = (s, i)\n\n    spans = [2] * two + [1] * one\n    if spans:\n        happy += sum(spans[:min(K, len(spans))])\n\n    return happy\n\n\ndef main():\n    input = sys.stdin.readline\n    #N, M = map(int, input().split())\n    #N, K = map(int, input().split())\n    #ps = list(map(int, input().split()))\n\n    N, K = list(map(int, input().split()))\n    S = input().strip()\n\n    S += 'D'  # dummy\n\n    happy = max([solve(S, N, K, 'L'), solve(S, N, K, 'R')])\n    print(happy)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = map(int, input().split())\ns=input()\nans = 0\nfor i, j in zip(s[:-1], s[1:]):\n  if i+j == \"LL\" or i+j == \"RR\":\n    ans += 1\nprint(min(n-1, ans + 2*k))", "N,K=list(map(int,input().split()))\nS=input()\nif N == 1:\n  print((0))\n  return\nif N == 2:\n  if K>=1:\n    print((1))\n  else:\n    print((0))\n    return\n\n\nans = 0\nd = 0\nfor i,s in enumerate(S[:-1]):\n  if S[i] == S[i+1]:\n    ans += 1\n#print(ans)\nans += 2*K\nprint((min(ans,N-1)))\n", "n,k = map(int,input().split())\ns = [\" \"]+list(input())+[\" \"]\ntar = now = s[1]\ncnt = 0\nfor i in range(1,n+1):\n    if now != s[i]:\n        now = s[i]\n        if now != tar: cnt += 1\n    if cnt > k: break\n    s[i] = tar\nans = 0\nfor i in range(1,n+1):\n    if s[i] == \"L\" and s[i-1] == \"L\": ans += 1\n    if s[i] == \"R\" and s[i+1] == \"R\": ans += 1\nprint(ans)", "N,K=list(map(int,input().split()))\nlet=input()\ncan=0\nfor i in range(N-1):\n   if let[i]!=let[i+1]:\n      can+=1\nif can<=K*2:\n   print(N-1)\nelse:\n   can-=K*2\n   print(N-can-1)", "n,k=map(int,input().split())\ns=list(input())\nscore=0\nfor i in range(n-1):\n  if s[i]==s[i+1]:\n    score+=1\nprint(min(score+2*k,n-1))", "n, k = list(map(int, input().split()))\ns = input()\nscore = 0\nfor i in range(1, len(s)):\n    if s[i - 1] == s[i]:\n        score += 1\n\nans = min(n - 1, score + 2 * k)\n\nprint(ans)\n", "import sys\n\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nS = list(input().strip())\n\nans = 0\nsplit = 0\npre = S[0]\nfor i in range(1, N):\n    if pre == S[i]:\n        ans += 1\n    else:\n        split += 1\n    pre = S[i]\n\n# print(ans, split)\nprint(ans + min(2*K, split))", "N,K = map(int,input().split())\nS = input()\nHap = 0\nNewS = S[0]\ndef chan(X):\n    if X == 'R':\n        return 'L'\n    else:\n        return 'R'\nfor i in range(1,len(S)):\n    strS = S[i]\n    strS1 = S[i-1]\n    if strS != strS1:\n        NewS += strS\n    else:\n        Hap += 1\nwhile len(NewS) > 1 and K != 0:\n    Hap += 2\n    NewS = chan(NewS[-1]) + NewS[2:-2] + chan(NewS[0]) \n    K -= 1\nif Hap > N-1:\n    Hap = N-1\nprint(Hap)", "N,K = map(int, input().split())\nS = input()\n \n \n# In[2]:\n \n \ncnt = 1\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        cnt += 1\ncnt = max(1,cnt-K*2)\nprint(N-cnt)", "N,K = map(int,input().split())\nS = list(input())\ntmp = []\ntmp.append(S[0])\nfor i in  range(1,N):\n    if(S[i] != S[i-1]):\n        tmp.append(S[i])\nG = len(tmp)\nG -= 2*K\nG = max(G-1,0)\n\nprint(N-G-1)", "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip() \nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\n    N, K = LI()\n    S = SS()\n\n    # \u6700\u521d\u306e\u5e78\u798f\u5ea6\n    h = 0\n    for i in range(N - 1):\n        if S[i] == S[i+1]:\n            h += 1\n\n    # YX...XY\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u3059\u308b\u3068\u5e78\u798f\u4eba\u6570\u30922\u5897\u3084\u305b\u308b\n    # \u7aefX...XY\u306b\u5bfe\u3057\u3066\u64cd\u4f5c\u3092\u3059\u308b\u3068\u5e78\u798f\u4eba\u6570\u30921\u5897\u3084\u305b\u308b\n    cnt = 0\n    for i in range(N - 1):\n        if S[i] != S[i+1]:\n            cnt += 1\n\n    if cnt >= 2 * K:\n        h += 2 * K\n    else:\n        h = N - 1 \n\n    print(h)\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n,k = list(map(int, input().split()))\nS = input()\n\nans = []\nc = 1\n# RL\u5727\u7e2e\nfor i in range(1,n):\n    if S[i-1] == S[i]:\n        c += 1\n    else:\n        ans.append(c)\n        c = 1\nans.append(c)\n# ans\u306e\u500b\u6570\u306f1\u500b\u6bce\u306b\u6e1b\u3063\u3066\u3044\u304f\nif len(ans) // 2  <= k:\n    print((n-1))\nelse:\n    d = len(ans) - 2*k\n    print((n-d))\n", "# \u89e3\u8aac\u914d\u4fe1\u306e\u6a21\u7bc4\u89e3\u7b54\nN, K = map(int, input().split())\nS = str(input())\nscore = 0\nfor i in range(N-1):\n    if S[i] == S[i+1]: score += 1\nans = min(score + 2*K, N-1)\nprint(ans)", "import sys\nfrom itertools import groupby\ndef input(): return sys.stdin.readline().rstrip()\n\ndef main():\n    n,k=map(int, input().split())\n    S=list(input())\n    p=len(list(groupby(S)))-2*k \n    pp=max(p,1)\n    print(n-pp)\n\ndef __starting_point():\n    main()\n__starting_point()", "from itertools import accumulate\nN, K = list(map(int, input().split()))\nS = input()\n\nq = []\npre = S[0]\nans = cnt = 0\nfor s in S:\n    if pre != s:\n        q.append(cnt)\n        cnt = 1\n        pre = s\n    else:\n        cnt += 1\nq.append(cnt)\n\nJ = 2*K+1\nacc = list(accumulate(q))\nacc += [acc[-1]]\nif len(q) <= J:\n    ans = acc[-1]-1\nelse:\n    ans = acc[J-1]-1 + acc[-1]-acc[J]-(len(q)-J)\n    for i, a in enumerate(acc):\n        if i+J < len(q):\n            tot = acc[i+J]-acc[i]-1\n            tot += acc[i]+acc[-1]-acc[i+J+1]-(len(q)-J)\n            if tot > ans:\n                ans = tot\n\nprint(ans)\n", "#coding: utf-8\n\nN, K = (int(i) for i in input().split()) \nS = input()\n\nwhile \"LL\" in S:\n    S = S.replace(\"LL\", \"L\")\n\nwhile \"RR\" in S:\n    S = S.replace(\"RR\", \"R\")\n\nsad = N - len(S)\nsad += K * 2\n\nsad = min(N-1, sad)\nprint(sad)\n\n", "#from statistics import median\n#import collections\n#aa = collections.Counter(a) # list to list || .most_common(2)\u3067\u6700\u5927\u306e2\u500b\u3068\u308a\u3060\u305b\u308b\u304a a[0][0]\nfrom fractions import gcd\nfrom itertools import combinations,permutations,accumulate # (string,3) 3\u56de\n#from collections import deque\nfrom collections import deque,defaultdict,Counter\nimport decimal\nimport re\n#import bisect\n#\n#    d = m - k[i] - k[j]\n#    if kk[bisect.bisect_right(kk,d) - 1] == d:\n#\n#\n#\n# python\u3067\u7121\u7406\u306a\u3068\u304d\u306f\u3001pypy\u3067\u3084\u308b\u3068\u6b63\u89e3\u3059\u308b\u304b\u3082\uff01\uff01\n#\n#\n\nimport sys\nsys.setrecursionlimit(10000000)\nmod = 10**9 + 7\n#mod = 9982443453\ndef readInts():\n  return list(map(int,input().split()))\ndef I():\n  return int(input())\nn,k = readInts()\nS = input()\na = 0\nfor i in range(1,len(S)):\n    if S[i] != S[i-1]:\n        a += 1\nprint((n - 1 - max(a - 2 * k, 0)))\n", "# import sys\n# sys.setrecursionlimit(10 ** 6)\n# import bisect\n# from collections import deque\n# from decorator import stop_watch\n# \n# \n# @stop_watch\ndef solve(N, K, S):\n    sachi = 0\n    L_cluster, R_cluster = (0, 1) if S[0] == 'R' else (1, 0)\n    for i in range(N):\n        if S[i] == 'R' and i != N - 1 and S[i + 1] == 'R':\n            sachi += 1\n        if S[i] == 'L' and i != 0 and S[i - 1] == 'L':\n            sachi += 1\n        if i > 0 and S[i] != S[i - 1]:\n            if S[i] == 'R':\n                R_cluster += 1\n            else:\n                L_cluster += 1\n\n    ans = 0\n    reverse_cluster = min(L_cluster, R_cluster)\n    if K >= reverse_cluster:\n        ans = N - 1\n    else:\n        ans = sachi + K * 2\n\n    print(ans)\n\n\ndef __starting_point():\n    # N = int(input())\n    N, K = list(map(int, input().split()))\n    S = input()\n    # As = [int(i) for i in input().split()]\n    # Bs = [int(i) for i in input().split()]\n    solve(N, K, S)\n\n__starting_point()", "N, K = map(int, input().split())\nS = str(input())\n\nans = 0\nfor i in range(N-1):\n  if S[i] == S[i+1]:\n    ans +=1\n\nfor i in range(K):\n  if N - ans > 2:\n    ans += 2\n  elif N-ans == 2:\n    ans += 1\n    break\n  else:\n    break\n    \nprint(ans)", "n, k = map(int, input().split())\ns = list(input())\nlr = 0\nrl = 0\nans = 0\nfor i in range(n-1):\n    if s[i]=='L' and s[i+1]=='R':\n        lr += 1\n    elif s[i]=='R' and s[i+1]=='L':\n        rl += 1\n    else:\n        ans += 1\n\nif lr >= k and rl >= k:\n    ans += 2*k\nelif lr == rl:\n    ans += 2*lr\nelse:\n    num = max(lr, rl)\n    ans += 2*num-1\n\nprint(ans)", "n, k = map(int, input().split())\ns = input()\ncnt = 0\nfor i in range(n - 1):\n    if s[i] == s[i + 1]:\n        cnt += 1\nprint(min(cnt + 2 * k, n - 1))", "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\ns = input()\n\ncnt = 0\nfor i in range(n):\n    if s[i] == s[i + 1]:\n        cnt += 1\n\nans = min([k * 2 + cnt, n - 1])\nprint(ans)\n", "N, K = map(int, input().split())\nS = str(input())\n\ndef run_length_encoding(text:str)->list:\n    text += '_'\n    c = text[0]\n    x = 1\n    res = []\n    for i in range(1, len(text)):\n        if c == text[i]:\n            x += 1\n        else:\n            res.append((c, x))\n            c = text[i]\n            x = 1\n    return res\n\nrle = run_length_encoding(S)\ngr = len(rle)\nhp = 0\nfor c, x in rle:\n    hp += x - 1\n\nif gr == 1:\n    ans = hp\nelif gr == 2:\n    ans = hp + 1\nelse:\n    if K < gr//2:\n        ans = hp + 2 * K\n    else:\n        ans = hp + 2 * ((gr-1) // 2) + (gr-1) % 2\nprint(ans)", "n,k=list(map(int, input().split()))\ns=input()\n\nhappy=0\nfor i in range(n-1):\n    if s[i]==s[i+1]:\n        happy+=1\nprint((min(happy+k*2, n-1)))\n", "N,K = list(map(int,input().split()))\nS = input()\n\nh = 0\nfor i in range(len(S)-1):\n  if S[i] == S[i+1]:\n    h += 1\nh += 2*K\nprint((min(N-1, h)))\n", "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n    S = readline().strip()\n\n    ans = 0\n    for i in range(N-1):\n        if S[i] == S[i+1]:\n            ans += 1\n\n    ans += 2 * K\n    if ans > N - 1:\n        ans = N - 1\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = map(int, input().split())\nS = input()\n\nt = S[0]\nc = 0\nfor i in range(N):\n    if S[i] != t:\n        c += 1\n        t = S[i]\n\nif c <= 2 * K:\n    print(N - 1)\nelse:\n    a = c - 2 * K\n    print(N - a - 1)", "N,K = map(int,input().split())\nS = input()\nnum = 1\nfor i in range(0,len(S)-1):\n    if S[i] != S[i+1]:\n        num += 1\nnum = max(1,num-K*2)\nprint(N - num)", "import sys\nimport heapq\nimport math\nimport fractions\nimport bisect\nimport itertools\nfrom collections import Counter\nfrom collections import deque\nfrom operator import itemgetter\ndef input(): return sys.stdin.readline().strip()\ndef mp(): return list(map(int,input().split()))\ndef lmp(): return list(map(int,input().split()))\n\nn,k=mp()\ns=list(input())\nans=[]\nc=1\nfor i in range(1,n):\n    if s[i]==s[i-1]:\n        c+=1\n    else:\n        ans.append(c)\n        c=1\nans.append(c)\nif len(ans)//2<=k:\n    print((n-1))\nelse:\n    print((n-len(ans)+2*k))\n", "n, k = map(int, input().split())\ns = input()\n\nans = 0\nfor i in range(1, n):\n    if s[i] == s[i - 1]:\n        ans += 1\n\nprint(min(ans + 2 * k, n - 1))", "N,K = map(int,input().split())\nS = input()\nif N == 1:\n    print(0)\n    return\n\nans = 0\ncnt = 0\nfor i in range(len(S)-1):\n    if S[i] == S[i + 1]:\n        ans += 1\n    else:\n        cnt += 1\n\nans += min(K,cnt//2) * 2\n\nif K > cnt//2 and S[0] != S[-1]:\n    ans += 1\n\nprint(ans)", "import copy\n\nn, k =  list(map(int,input().split()))\ns = ['R'] + list(input()) + ['L']\n\ncnt = 0\nfor i in range(1,n+1):\n    if s[i] == 'L' and s[i-1] == 'L':\n        cnt += 1\n    if s[i] == 'R' and s[i+1] == 'R':\n        cnt += 1\n# print(cnt)\nwhile k > 0 and cnt < n-1:\n    if n- 1 - cnt > 1:\n        cnt += 2\n    elif n- 1 - cnt > 0:\n        cnt += 1\n    k -= 1\nprint(cnt)\n", "# https://drken1215.hatenablog.com/entry/2020/05/16/005300\n\ndef main():\n    from itertools import tee\n\n    N, K = list(map(int, input().split()))\n    S = input()\n\n    s1, s2 = tee(S, 2)\n    next(s2)\n\n    cnt = 0\n    for c1, c2 in zip(s1, s2):\n        if c1 != c2:\n            cnt += 1\n\n    ans = N - 1 - max(cnt - K * 2, 0)\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n,k = list(map(int,input().split()))\n    s = input()\n    hp = [0]*n\n    for i in range(n):\n        if i>0:\n            if s[i]==s[i-1]=='L':\n                hp[i]=1\n        if i<n-1:\n            if s[i]==s[i+1]=='R':\n                hp[i]=1\n    ans = sum(hp)\n    ans = min(ans+2*k,n-1)\n    print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from itertools import *\nN,K = map(int,input().split())\nS = input()\nA = []\n\nfor i,j in groupby(S):\n  A+=[len(list(j))-1]\n\nprint(min(N-1,sum(A)+2*K))", "#!/usr/bin/env python\n# coding: utf-8\n\n# In[1]:\n\n\nN,K = list(map(int, input().split()))\nS = input()\n\n\n# In[2]:\n\n\ncnt = 1\nfor i in range(N-1):\n    if S[i] != S[i+1]:\n        cnt += 1\ncnt = max(1,cnt-K*2)\nprint((N-cnt))\n\n\n# In[ ]:\n\n\n\n\n", "n, k = map(int, input().split())\ns = input()\npre = s[0]\nans = s[0]\nfirst = s[0]\n\nif s[0] == \"R\":\n    second = \"L\"\nelse:\n    second = \"R\"\n\nfor i in s[1:]:\n    if i == second and k > 0:\n        ans = ans + first\n        pre = i\n    elif i == first and pre == second:\n        k -= 1\n        ans = ans + i\n        pre = i\n    elif k == 0:\n        ans = ans + i\n    elif i == first and pre == first:\n        ans = ans + i\n\npre = \"0\"\ncnt = 0\n\nfor i in ans:\n    if i == pre:\n        cnt += 1\n    pre = i\n\nprint(cnt)", "n,k = map(int,input().split())\ns = input()\n\nfrom_start = 0\nRtoL = 0\nLtoR = 0\nfor i in range(n-1):\n    if s[i] == s[i+1]:\n        from_start += 1\n    elif s[i] == 'R' and s[i+1] == 'L':\n        RtoL += 1\n    elif s[i] == 'L' and s[i+1] == 'R':\n        LtoR += 1\nadd = 0\nwhile (RtoL or LtoR) and k:\n    k-=1\n    if RtoL and LtoR:\n        add += 2\n        RtoL -= 1\n        LtoR -= 1\n    elif RtoL:\n        add += 1\n        RtoL -= 1\n    elif LtoR:\n        add += 1\n        LtoR -= 1\nprint(from_start+add)", "N, K = list(map(int, input().split()))\nS = input()\nans = 0\nfor i in range(1, N):\n    if S[i] == S[i-1]:\n        ans += 1\n\nprint((min(N-1, ans+2*K)))\n", "N, K = list(map(int, input().split()))\nS = input()\nRL = 0\nfor i in range(N - 1):\n    if S[i] == 'R' and S[i + 1] == 'L':\n        RL += 1\negde = (S[0] == 'L') + (S[-1] == 'R')\nif K >= RL:\n    K -= RL\n    RL = 0\n    if K > 0:\n        egde = max(1, egde - K)\nelse:\n    RL -= K\nprint((N  - 2 * RL - egde))\n", "n,k=map(int,input().split())\ns=input()\nans=0\nfor i in range(n-1):\n  ans+=1 if s[i]==s[i+1] else 0\nprint(min(ans+2*k,n-1))", "N, K = list(map(int, input().split(' ')))\nS = input()\n\ngroups = 1\nfor s0, s1 in zip(S, S[1:]):\n    if s0 != s1:\n        groups += 1\n\ngroups = max(1, groups - 2 * K)\n\nprint((N - groups))\n", "import sys\nfrom itertools import groupby\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\n    N, K = list(map(int, readline().split()))\n    S = readline().strip()\n\n    ans = groups = 0\n    for k, g in groupby(S):\n        ans += len(list(g)) - 1\n        groups += 1\n\n    ans += 2 * K\n    if ans > N - 1:\n        ans = N - 1\n\n    print(ans)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, K = map(int, input().split())\nS = input()+\".\"\nl = 0\nans = 0\n\nfor i in range(N):\n    if S[i] != S[i+1]:\n        ans += i-l\n        l = i+1\n\nprint(min(ans+K*2, N-1))", "N, K = map(int, input().split())\nS = input()\na = 0\nfor i in range(N - 1):\n    if S[i] != S[i+1]:\n        a += 1\nans = N - 1 - max(0, a - (2 * K))\nprint(ans)", "n, k = map(int, input().split())\ns = input()\na = 'A'\ns = s+'B'\ncnt = -1\nfor i in s:\n  if a != i:\n    a = i\n    cnt += 1\nprint(n-max(1,cnt-2*k))", "n,k = map(int,input().split())\ns = list(input())\n\nans  = 0\ntran = 0\n\nfor i in range(n-1):\n    chk = s[i] + s[i+1]\n\n    if chk == 'LR' or chk == 'RL':\n        tran += 1\n    else:\n        ans += 1\n\nif k*2 >= tran:\n    print(n-1)\nelse:\n    print(ans+(k*2))", "n,k = map(int,input().split())\ns = input()\nedge,inside,cnt,ix = 0,0,0,0\nif s[0]=='R' or s[-1]=='R':\n  edge += 1\ntemp = ''\nfor i in range(n):\n  if temp=='R' and s[i]=='L':\n    inside += 1\n  elif temp==s[i]:\n    cnt += 1\n  temp = s[i]\nif inside>=k:\n  print(min(k*2+cnt,n-1))\nelse:\n  print(min(inside*2+edge+cnt,n-1))", "import sys,math,collections,itertools\ninput = sys.stdin.readline\n\nN,K=list(map(int,input().split()))\nS=input().rstrip()\n\nori_num=0\nturn_num=0\nfor i in range(N):\n    if i>0:\n        if S[i-1] =='L' and S[i] =='L':\n            ori_num += 1\n        if S[i-1] != S[i]:\n            turn_num +=1\n        \n    if i<N-1:\n        if S[i] =='R' and S[i+1] =='R':\n            ori_num += 1\n\nif turn_num >=2*K:\n    ori_num += 2*K\nelse:\n    num = turn_num//2\n    num2 = turn_num%2\n    ori_num += 2*num+num2\n    \nprint(ori_num)\n", "n, k = map(int, input().split())\ns = input()\na = 'A'\ncnt = 0\nfor i in s:\n  if a != i:\n    a = i\n    cnt += 1\nprint(n-max(1,cnt-2*k))", "N,K = map(int,input().split())\nlsS = list(input())\nans = N\nif lsS[0] == 'R':\n    ans -= 1\nif lsS[-1] == 'L':\n    ans -= 1\nfor i in range(N-1):\n    if lsS[i] == 'L' and lsS[i+1] == 'R':\n        ans -= 2\nans += 2*K\nans = min(ans,N-1)\nprint(ans)", "import sys\n\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    n, k = list(map(int, input().split()))\n    s = input()\n\n    cnt = 0\n    score = 0\n    for i in range(1, n):\n        if s[i - 1] != s[i]:\n            cnt += 1\n        else:\n            score += 1\n\n    res = min(n - 1, score + min(k, cnt) * 2)\n    print(res)\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "import sys\ninput=sys.stdin.readline\n\nN,K=(int(x) for x in input().rstrip('\\n').split())\nL = list(input())\nnow = L[0]\nsame = 0\nfor x in L[1:]:\n  if x == now:\n    same += 1\n  else:\n    now = x\nres = same + K*2\nif res > N-1:\n  res = N-1\nprint(res)", "from math import ceil,floor,factorial,gcd,sqrt,log2,cos,sin,tan,acos,asin,atan,degrees,radians,pi,inf\nfrom itertools import accumulate,groupby,permutations,combinations,product,combinations_with_replacement\nfrom collections import deque,defaultdict,Counter\nfrom bisect import bisect_left,bisect_right\nfrom operator import itemgetter\nfrom heapq import heapify,heappop,heappush\nfrom queue import Queue,LifoQueue,PriorityQueue\nfrom copy import deepcopy\nfrom time import time\nimport string\nimport sys\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\n\nn, k = MAP()\ns = input()\nl = s.count('L')\n\ncount = 0\nfor i in range(n):\n    if i > 0 and s[i] == s[i-1] == 'L':\n        count += 1\n    elif i < n - 1 and s[i] == s[i+1] == 'R':\n        count += 1\n\nans = min(count + k*2, n - 1)\nprint(ans)", "n,k = map(int,input().split())\nS = input()\ndif = 1\nfor i in range(0,n-1):\n    if S[i] != S[i+1]:\n        dif += 1\nprint(n-max(1,dif-2*k))", "def main():\n  n,k=map(int,input().split())\n  s=input()\n  \n  # first score\n  ans=0\n  x=s[0]\n  for i in range(1,n):\n    if x==s[i]:\n      ans+=1\n    else:\n      x=s[i] \n  print(min(ans+2*k,n-1))\n\n  \ndef __starting_point():\n  main()\n__starting_point()", "def solve():\n  N, K = map(int, input().split())\n  S = input()\n  cnt = 1\n  for i in range(N-1):\n    if S[i]!=S[i+1]:\n      cnt += 1\n  ans = N-max(1,cnt-K*2)\n  return ans\nprint(solve())", "n,k=list(map(int,input().split()))\nS=input()\nc,row_count=S[0],1\n\nfor s in S:\n  if c != s:\n    c = s\n    row_count += 1\n\nif row_count-k*2 <= 1:\n  row_count = 1\nelse:\n  row_count -= k*2\n  \nprint(n-row_count)", "def readinput():\n    n,k=list(map(int,input().split()))\n    s=input()\n    return n,k,s\n\ndef main(n,k,s):\n    nl=s.count('L')\n    nr=n-nl\n    if nl==0 or nr==0:\n        return n-1\n    \n    c=['L','R']\n\n    # happy\u306e\u521d\u671f\u5024\u3092\u8a08\u7b97\n    flip=[]\n    happy=0\n    if s[0]=='L':\n        ci=0\n    else:\n        ci=1\n    l=0\n    for i in range(n):\n        #print(s[i],c[ci])\n        if s[i]==c[ci]:\n            l+=1\n            #print(l)\n        else:\n            #print(l)\n            happy+=max(l-1,0)\n            flip.append(ci)\n            l=1\n            ci=(ci+1)%2\n    else:\n        happy+=max(l-1,0)\n    #print(flip,happy)\n    return happy+min(2*k,len(flip))\n\ndef __starting_point():\n    n,k,s=readinput()\n    ans=main(n,k,s)\n    print(ans)\n\n__starting_point()", "import math,itertools,fractions,heapq,collections,bisect,sys,queue,copy\n\nsys.setrecursionlimit(10**7)\ninf=10**20\nmod=10**9+7\ndd=[(-1,0),(0,1),(1,0),(0,-1)]\nddn=[(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\n# def LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return input()\n\ndef main():\n  n,k=LI()\n  s=S()\n  ans=0\n  x=s[0]\n  cnt=0\n  for y in s[1:]:\n    if x==y:\n      cnt+=1\n    else:\n      ans+=cnt\n      cnt=0\n    x=y\n  ans+=cnt\n\n  ans=min(n-1,ans+2*k)\n\n  return ans\n\n# main()\nprint((main()))\n", "n,k=list(map(int,input().split()))\ns=input()\n\nrl=s.count('RL')\nif s[0]=='L':\n    start=1\nelse:\n    start=0\nif s[-1]=='R':\n    end=1\nelse:\n    end=0\na=rl-k\nif a>=1:\n    ans=a*2+start+end\nelif a==0:\n    ans=start+end\nelif a<=-1:\n    ans=1\nprint((n-ans))\n", "n,k = list(map(int,input().split()))\ns = str(input())\nans = 0\nfor i in range(1,len(s)):\n  if s[i] == s[i-1]:\n    ans += 1\n\nif (n-1) >= (ans + 2*k):\n  ans += 2*k\nelse:\n  ans = n - 1\n\nprint(ans)", "n, k = map(int, input().split())\ns = input()\ng = []\na = 'A'\ns = s+'B'\ncnt = 1\nfor i in s:\n  if a == i:\n    cnt+=1\n  else:\n    a = i\n    g.append(cnt)\n    cnt = 1\nprint(n-max(1,len(g[1:])-2*k))"]