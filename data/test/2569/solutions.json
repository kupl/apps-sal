["# import numpy as np\n# import sys\n\n# q=int(input())\nmod=1000000007\ndp=[(0,0),(0,0)]\nfor i in range(2,2000001):\n\tdp.append(((max(dp[-1])+2*max(dp[-2]))%mod,(dp[-1][0]+2*dp[-2][0]+1)%mod))\nfor o in range(int(input())):\n\tprint(max(dp[int(input())-1])*4%mod)\n\t\n\t\t\n\t\n", "import sys\ninput = sys.stdin.readline\n\nmod=10**9+7\nANS=[0,0,0,4,4]\nHEAD=[0,0,0,1,0]\nfor i in range(2*10**6):\n    if HEAD[-1]==0 and HEAD[-2]==0:\n        ANS.append((ANS[-1]+ANS[-2]*2+4)%mod)\n        HEAD.append(1)\n    else:\n        ANS.append((ANS[-1]+ANS[-2]*2)%mod)\n        HEAD.append(0)\n        \n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    print(ANS[n])\n\n    \n", "def gns():\n    return list(map(int,input().split()))\nt=int(input())\nns=[]\nans=[0,0,0,4,4,12]\nfor _ in range(t):\n    n=int(input())\n    ns.append(n)\nmx=max(ns)\nmd=10**9+7\nfor i in range(6,mx+6):\n    ans.append((ans[-2]*2+ans[-1]+(4 if i%3==0 else 0))%md)\nfor ni in ns:\n    print(ans[ni])", "from collections import defaultdict as dd\nfrom collections import deque\nimport bisect\nimport heapq\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\ncache = [0] * (2 * 10**6 + 1)\ncache[3] = 4\ncache[4] = 4\n\ndef solve(last):\n    n = ri()\n    if cache[n] != 0:\n        print(cache[n])\n        return last\n\n    mod = 10**9 + 7\n    if n <= 2:\n        print(0)\n        return last\n    elif n <= 4:\n        print(4)\n        return last\n    else:\n        j, k = last\n        a, b = cache[j], cache[k]\n        for i in range(k + 1, n + 1):\n            a, b = b, (2 * a + b) % mod\n            if i % 3 == 0:\n                b = (b + 4) % mod\n            cache[i] = b\n        last = [n - 1, n]\n\n        print (b)\n        return last\n\n\n\n\n\nmode = 'T'\n\nif mode == 'T':\n    t = ri()\n    last = [3, 4]\n    for i in range(t):\n        last = solve(last)\nelse:\n    solve()\n"]