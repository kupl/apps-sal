["from sys import maxsize \n\n# Function to find the maximum contiguous subarray \n# and print its starting and end index \ndef maxSubArraySum(a,size): \n\n\tmax_so_far = -maxsize - 1\n\tmax_ending_here = 0\n\tstart = 0\n\tend = 0\n\ts = 0\n\n\tfor i in range(0,size): \n\n\t\tmax_ending_here += a[i] \n\n\t\tif max_so_far < max_ending_here: \n\t\t\tmax_so_far = max_ending_here \n\t\t\tstart = s \n\t\t\tend = i \n\n\t\tif max_ending_here < 0: \n\t\t\tmax_ending_here = 0\n\t\t\ts = i+1\n\treturn max_so_far,start,end\n\n# \tprint(\"Maximum contiguous sum is %d\"%(max_so_far)) \n# \tprint(\"Starting Index %d\"%(start)) \n# \tprint(\"Ending Index %d\"%(end)) \n    # return max_so_far,start,end\n    \n\nn = int(input())\nlst = list(map(int,input().split()))\nt_lst = lst[:]\naaa = abs(-n//2)\nmaxi,start,end = maxSubArraySum(lst[0:aaa],aaa)\n# lst = lst[0:start]+lst[end+1:]\nl = lst[aaa:]\nM,st,en = maxSubArraySum(l,len(l))\nx = maxi+M\n\nmaxi,start,end = maxSubArraySum(t_lst,n)\nt_lst = t_lst[0:start]+t_lst[end+1:]\nM,st,en = maxSubArraySum(t_lst,len(t_lst))\ny = maxi+M\n\nprint(max(x,y))", "from sys import maxsize \n\n# Function to find the maximum contiguous subarray \n# and print its starting and end index \ndef maxSubArraySum(a,size): \n\n\tmax_so_far = -maxsize - 1\n\tmax_ending_here = 0\n\tstart = 0\n\tend = 0\n\ts = 0\n\n\tfor i in range(0,size): \n\n\t\tmax_ending_here += a[i] \n\n\t\tif max_so_far < max_ending_here: \n\t\t\tmax_so_far = max_ending_here \n\t\t\tstart = s \n\t\t\tend = i \n\n\t\tif max_ending_here < 0: \n\t\t\tmax_ending_here = 0\n\t\t\ts = i+1\n\treturn max_so_far,start,end\n\n# \tprint(\"Maximum contiguous sum is %d\"%(max_so_far)) \n# \tprint(\"Starting Index %d\"%(start)) \n# \tprint(\"Ending Index %d\"%(end)) \n    # return max_so_far,start,end\n    \n\nn = int(input())\nlst = list(map(int,input().split()))\nt_lst = lst[:]\naaa = abs(-n//2)\nmaxi,start,end = maxSubArraySum(lst[0:aaa],aaa)\n# lst = lst[0:start]+lst[end+1:]\nl = lst[aaa:]\nM,st,en = maxSubArraySum(l,len(l))\nx = maxi+M\n\nmaxi,start,end = maxSubArraySum(t_lst,n)\nt_lst = t_lst[0:start]+t_lst[end+1:]\nM,st,en = maxSubArraySum(t_lst,len(t_lst))\ny = maxi+M\n\nprint(max(x,y))", "# cook your dish here\n# Python program to print largest contiguous array sum \n\nfrom sys import maxsize \n\n# Function to find the maximum contiguous subarray \n# and print its starting and end index \ndef maxSubArraySum(a,size): \n\n\tmax_so_far = -maxsize - 1\n\tmax_ending_here = 0\n\tstart = 0\n\tend = 0\n\ts = 0\n\n\tfor i in range(0,size): \n\n\t\tmax_ending_here += a[i] \n\n\t\tif max_so_far < max_ending_here: \n\t\t\tmax_so_far = max_ending_here \n\t\t\tstart = s \n\t\t\tend = i \n\n\t\tif max_ending_here < 0: \n\t\t\tmax_ending_here = 0\n\t\t\ts = i+1\n\treturn max_so_far,start,end\n\n# \tprint(\"Maximum contiguous sum is %d\"%(max_so_far)) \n# \tprint(\"Starting Index %d\"%(start)) \n# \tprint(\"Ending Index %d\"%(end)) \n    # return max_so_far,start,end\n    \n\nn = int(input())\nlst = list(map(int,input().split()))\nt_lst = lst[:]\naaa = abs(-n//2)\nmaxi,start,end = maxSubArraySum(lst[0:aaa],aaa)\n# lst = lst[0:start]+lst[end+1:]\nl = lst[aaa:]\nM,st,en = maxSubArraySum(l,len(l))\nx = maxi+M\n\nmaxi,start,end = maxSubArraySum(t_lst,n)\nt_lst = t_lst[0:start]+t_lst[end+1:]\nM,st,en = maxSubArraySum(t_lst,len(t_lst))\ny = maxi+M\n\nprint(max(x,y))", "# cook your dish here\n# Python program to print largest contiguous array sum \n\nfrom sys import maxsize \n\n# Function to find the maximum contiguous subarray \n# and print its starting and end index \ndef maxSubArraySum(a,size): \n\n\tmax_so_far = -maxsize - 1\n\tmax_ending_here = 0\n\tstart = 0\n\tend = 0\n\ts = 0\n\n\tfor i in range(0,size): \n\n\t\tmax_ending_here += a[i] \n\n\t\tif max_so_far < max_ending_here: \n\t\t\tmax_so_far = max_ending_here \n\t\t\tstart = s \n\t\t\tend = i \n\n\t\tif max_ending_here < 0: \n\t\t\tmax_ending_here = 0\n\t\t\ts = i+1\n\treturn max_so_far,start,end\n\n# \tprint(\"Maximum contiguous sum is %d\"%(max_so_far)) \n# \tprint(\"Starting Index %d\"%(start)) \n# \tprint(\"Ending Index %d\"%(end)) \n    # return max_so_far,start,end\n    \n\nn = int(input())\nlst = list(map(int,input().split()))\nt_lst = lst[:]\naaa = abs(-n//2)\nmaxi,start,end = maxSubArraySum(lst[0:aaa],aaa)\n# lst = lst[0:start]+lst[end+1:]\nl = lst[aaa:]\nM,st,en = maxSubArraySum(l,len(l))\nx = maxi+M\n\nmaxi,start,end = maxSubArraySum(t_lst,n)\nt_lst = t_lst[0:start]+t_lst[end+1:]\nM,st,en = maxSubArraySum(t_lst,len(t_lst))\ny = maxi+M\n\nprint(max(x,y))\n", "def get(a):\r\n    b = []\r\n    s = 0\r\n    m = float('-inf')\r\n\r\n    for i in range(n):\r\n        s += a[i]\r\n        m = max(m, s)\r\n\r\n        if s < 0:\r\n            s = 0\r\n\r\n        b.append(m)\r\n\r\n    return b\r\n\r\n\r\nn = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = get(a)\r\nc = get(a[::-1])[::-1]\r\n\r\nmaxi = -float('inf')\r\nfor i in range(n-1):\r\n    maxi = max(maxi, b[i] + c[i+1])\r\n\r\nprint(maxi)\r\n"]