["'''input\\n'''\n# from time import time\n# start = time()\ns = input()\n# print(len(s))\nm = 1000000000\nfor l in set(s):\n\tx = set(s.split(l))\n\tm = min(m, len(max(x, key=len)))\nprint(m+1)\n# print(time() - start)\n", "s = input()\nl = 0\nr = len(s)\nd = dict()\ncount = dict()\nfor i in s:\n    d[i] = False\n    count[i] = 0\nwhile r - l > 1:\n    mid = (r + l) // 2\n    for i in s:\n        d[i] = False\n        count[i] = 0\n    for i in range(mid):\n        d[s[i]] = True\n        count[s[i]] += 1\n    for i in range(len(s) - mid):\n        count[s[i]] -= 1\n        count[s[i + mid]] += 1\n        if count[s[i]] == 0:\n            d[s[i]] = False\n    for i in d.items():\n        if i[1]:\n            r = mid\n    if r != mid:\n        l = mid\nprint(r)", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\nimport itertools\nimport sys\n\n\"\"\"\ncreated by shhuan at 2017/11/9 23:05\n\n\"\"\"\n\nS = input()\n\ndef check(s, k):\n    for w in set(s):\n        c = s[:k].count(w)\n        if c == 0:\n            continue\n\n        for i in range(k, len(s)):\n            if s[i-k] == w:\n                c -= 1\n            if s[i] == w:\n                c += 1\n            if c == 0:\n                break\n\n        if c > 0:\n            return True\n\n    return False\n\n\nlo = 1\nhi = len(S)\nwhile lo < hi:\n    m = (lo + hi) // 2\n    if check(S, m):\n        hi = m\n    else:\n        lo = m+1\n\nprint(lo)", "import string\n\ns = input()\n\ndef max_dist(s, c):\n\tpos = [-1]\n\tfor i, val in enumerate(s):\n\t\tif val == c:\n\t\t\tpos.append(i)\n\tpos.append(len(s))\n\treturn max(pos[i+1] - pos[i] for i in range(len(pos) - 1))\n\nprint(min(max_dist(s, c) for c in string.ascii_lowercase))", "s = list(input())\n\nn = len(s)\nidx = [[-1] for _ in range(26)]\nfor i in range(n):\n    idx[ord(s[i]) - ord('a')].append(i)\nfor i in range(26):\n    idx[i].append(n)\n\nprint(min([max([ls[i + 1] - ls[i] for i in range(len(ls) - 1)]) for ls in idx]))\n", "import math\ns=input()\ne=set()\nfor i in s:\n    e.add(i)\nd={}\nfor i in e:\n    d[i]=[-1]\nif len(d)==len(s):\n    print(math.ceil((len(s)+1)/2))\n    return\na=[]\nfor i in range(len(s)):\n    d[s[i]].append(i)\nfor i in d:\n    d[i].append(len(s))\nq=-1\nans=1221243214\nfor i in d:\n    q=-1\n    for j in range(1,len(d[i])):\n        q=max(q,d[i][j]-d[i][j-1])\n    ans=min(q,ans)\nprint(ans)\n", "s = input()\n\ncs = {}\nma = {}\nkeys = 'abcdefghijklmnopqrstuvwxyz'\nfor c in keys:\n    cs[c] = []\n    ma[c] = -1\n\nfor i in range(len(s)):\n    c = s[i]\n    cs[c].append(i)\n\nfor c in keys:\n    if len(cs[c]) > 0:\n        ma[c] = max(cs[c][0]+1, len(s)-cs[c][-1])\n    for i in range(1,len(cs[c])):\n        if abs(cs[c][i] - cs[c][i-1]) > ma[c]:\n            ma[c] = abs(cs[c][i] - cs[c][i-1])\n\nmi = 9999999999\nfor m in list(ma.values()):\n    if m != -1 and m < mi:\n        mi = m\n\nprint(mi)\n", "s = str(input())\ns = list(s)\nn = len(s)\nS = set(s)\nS = list(S)\nN = len(S)\nl = [[] for i in range(N)]\nr = [-1 for i in range(N)]\nfor i in range(n):\n    for j in range(N):\n        if s[i] == S[j]:\n            l[j].append(i)\n            break\nfor i in range(N):\n    l[i] = [-1] + l[i] + [n]\nfor i in range(N):\n    for j in range(1,len(l[i])):\n        r[i] = max(r[i], l[i][j] - l[i][j - 1])\nprint(min(r))", "s = input()\nletters = set(s)\nans = len(s)\nfor ch in letters:\n\tprev = -1\n\tmax_dist = 0\n\tfor pos in range(len(s)):\n\t\tif s[pos] == ch:\n\t\t\tmax_dist = max(pos - prev - 1, max_dist)\n\t\t\tprev = pos\n\tmax_dist = max(len(s) - prev - 1, max_dist)\n\tans = min(ans, max_dist + 1)\nprint(ans)\n\n", "a = input()\n\nS = [[-1] for i in range(26)]\n\nfor i in range(len(a)):\n    S[ord(a[i])%97] += [i]\nfor i in range(len(S)):\n    S[i] += [len(a)]\nmin = [-1 for i in range(26)]\n#print(S)\nfor i in range(26):\n    for j in range(1, len(S[i])):\n        if min[i] < S[i][j] - S[i][j-1]:\n            min[i] = S[i][j] - S[i][j-1]\nm = 10**6\nfor i in min:\n    if i != -1 and i < m:\n        m = i\nprint(m)", "import string\n\ns = input()\n\nans = len( s ) // 2 + 1\n\nfor a in list( string.ascii_lowercase ):\n    last = -1\n    l = 0\n    for i , c in enumerate( list( s ) ):\n        if a == c:\n            l = max( l, i - last )\n            last = i\n    l = max( l , len( s ) - last )\n    ans = min( ans, l )\n\nprint( ans )\n", "s = input()\n\nd = dict()\n\nfor i in range(len(s)):\n    el = s[i]\n    try:\n        d[el].append(i)\n    except KeyError:\n        d[el] = [-1, i]\n\nfor i in list(d.keys()):\n    d[i].append(len(s))\n\na = list()\nfor i in list(d.keys()):\n    t = [d[i][j] - d[i][j - 1] for j in range(1, len(d[i]))]\n    a.append(max(t))\n\n\nprint(min(min(a), (len(s) + 2) // 2))\n", "S = input()\n\ndp = [[1 for i in range(26)] for j in range(len(S))]\n\nfor i in range(len(S)-2,-1,-1):\n\tdp[i] = [x+1 for x in dp[i+1]]\n\tdp[i][ord(S[i+1])-ord('a')] = 1\n\ndp2 = [[1 for i in range(26)] for j in range(len(S))]\n\nfor i in range(1,len(S)):\n\tdp2[i] = [x+1 for x in dp2[i-1]]\n\tdp2[i][ord(S[i-1])-ord('a')] = 1\n\nans = [0 for i in range(26)]\n\nfor i in range(len(S)):\n\tk = ord(S[i])-ord('a')\n\tans[k] = max(ans[k],dp[i][k],dp2[i][k])\n\nout = len(S)\nfor i in range(26):\n\tif ans[i]:\n\t\tout = min(out,ans[i])\nprint(out)", "line = input()\nd = {}\ndist = {}\nfor i in range(len(line)):\n    elem = line[i]\n    if elem not in d:\n        d[elem] = i\n        dist[elem] = i + 1\n    else:\n        dist[elem] = max(dist[elem], i - d[elem])\n        d[elem] = i\n    #print(dist)\nminimum = 999999999\nfor key in dist:\n    dist[key] = max(dist[key], len(line) - d[key])\n    minimum = min(minimum, dist[key])\nprint(minimum)", "a = [chr(i) for i in range(ord('a'), ord('z') + 1)]\ns = input()\nmin_dom = len(s)\nfor letter in a:\n    if letter in s:\n        cur = s.index(letter) + 1\n        last = cur - 1\n        ll = cur - 1\n        for j in range(ll + 1, len(s)):\n            if s[j] == letter:\n                cur = max(cur, j - last)\n                last = j\n        min_dom = min(min_dom, max(cur, len(s) - last))\nprint(min_dom)", "s = input()\nl = len(s)\n\nd = [[-1, 0, -1] for i in range(26)]\nk = [-1 for i in range(26)]\n\n\nfor i in range(l):\n    n = ord(s[i]) - 97\n    if d[n][0] == -1:\n        d[n][0] = i\n        d[n][2] = i\n    else:\n        d[n][1] = max(d[n][1], i - d[n][0])\n        d[n][0] = i\n\nans = l\nfor i in range(26):\n    if d[i][0] != -1:\n        k[i] = max(d[i][2], l - d[i][0] - 1, d[i][1] - 1)    \n    if k[i] > -1:\n        ans = min(ans, k[i])\n\nprint(ans + 1)\n\n", "s = input()\nletters = set(s)\np = dict.fromkeys(letters, [-1, -1])\nfor i, c in enumerate(s):\n    u = max(p[c][1], i - p[c][0])\n    p[c] = [i, u]\nfor value in p.values():\n    value[1] = max(len(s) - value[0], value[1])\n\nprint(min(i[1] for i in p.values() if i[1] != -1))", "s = '!' + input()\n\nm = set(s)\nd = {}\nd1 = {}\nfor x in range(1, len(s)):\n    if not s[x] in d:\n        d[s[x]] = x\n    else:\n        d[s[x]] = max(d[s[x]], x - s[:x].rindex(s[x]))\n    d1[s[x]] = x\n\nfor (x, y) in list(d.items()):\n    d[x] = max(d[x], len(s) - d1[x])\n\nprint(min(d.values()))\n", "s = input()\nn = len(s)\nl = 0\nr = n + 1\nwhile r - l > 1:\n    m = (l + r) // 2\n    t = set(s[:m])\n    d = {}\n    for i in range(m):\n        if s[i] in d:\n            d[s[i]] += 1\n        else:\n            d[s[i]] = 1\n    for i in range(m, n):\n        if s[i] in t:\n            d[s[i]] += 1\n        if s[i - m] in t:\n            d[s[i - m]] -= 1\n            if d[s[i - m]] == 0:\n                t.remove(s[i - m])\n    if len(t) > 0:\n        r = m\n    else:\n        l = m\nprint(r)\n", "def main():\n    s = input()\n    checked = []\n    l = len(s)\n    mi = l // 2 + 1\n    for i in range(l):\n        if s[i] not in checked:\n            j = i + 1\n            m = i + 1\n            t = i\n            while j < l:\n                while j < l and s[t] != s[j]:\n                    j += 1\n                if j - t > m:\n                    m = j - t\n                t = j\n                j += 1\n            if m < mi:\n                mi = m\n            checked += [s[i]]\n    print(mi)\n\nmain()\n", "s=input()\nl=[]\nfor i in s:\n    if i not in l:\n        l.append(i)\nminans=len(s)//2+1\nbst=-1\nbfn=-1\nfor i in l:\n    j=-1\n    ans=0\n    st=s.find(i,0)\n    fn=len(s)-s[::-1].find(i,0)-1\n    \n    while s.find(i,j+1)!=-1:\n        k=j\n        \n        j=s.find(i,j+1)\n        raz=j-k\n        ans=max(ans,raz)\n        ans=max(ans,max(st+1,len(s)-fn))\n    if ans<minans:\n        minans=ans\n\nprint(minans)\n", "a = input()\nd = 'abcdefghijklmnopqrstuvwxyz'\nm = [[-1] for i in range(26)]\nn = 0\nfor i in range(len(a)):\n\tk = d.index(a[i])\n\tif len(m[k]) == 1:\n\t\tm[k] += [i]\n\t\tm[k] += [(m[k][1] - m[k][0])]\n\telse:\n\t\tm[k][0] = m[k][1]\n\t\tm[k][1] = i\n\t\tif m[k][2] < (m[k][1] - m[k][0]):\n\t\t\tm[k][2] = (m[k][1] - m[k][0])\nfor i in range(26):\n\tif len(m[i]) == 3:\n\t\tm[i][0] = m[i][1]\n\t\tm[i][1] = len(a)\n\t\tif m[i][2] < (m[i][1] - m[i][0]):\n\t\t\tm[i][2] = (m[i][1] - m[i][0])\ng = []\nj = 0\nfor i in range(26):\n\tif len(m[i]) == 3:\n\t\tk = a[0:m[i][2]]\n\t\tn = a[len(a) - m[i][2]::]\n\t\tif k.count(d[i]) > 0 and n.count(d[i]) > 0:\n\t\t\tg += [m[i][2]]\nj = len(a) // 2 + 1\nif len(g) != 0 and j > min(g):\n\tprint(min(g))\nelse:\n\tprint(j)\n", "s=input()\nn=len(s)\nk=1\nsim=set(s[0])\na=[0]*n\na[0]=1\nsim=set(s)\nd=dict()\nfor i in sim:\n    d[i]=[-1,1]\nfor i in range(n):\n    d[s[i]][1]=max(d[s[i]][1],i-d[s[i]][0])\n    d[s[i]][0]=i\nk=10000000\nfor i in list(d.values()):\n    k=min(k,max(n-i[0],i[1]))\nprint(k)\n", "from collections import defaultdict\n\ns = input()\n\nsymbols = defaultdict(list)\nfor i, c in enumerate(s):\n\tsymbols[c].append(i)\n\ndists = defaultdict(list)\nfor c, coords in symbols.items():\n\tdeltas = []\n\tdeltas.append(coords[0] + 1)\n\tfor x in range(1, len(coords)):\n\t\tdeltas.append(coords[x] - coords[x - 1])\n\tdeltas.append(len(s) - coords[-1])\n\tdists[c] = deltas\n\n# print(dists)\n\nans = ((len(s) + 2) // 2)\nfor c in dists.keys():\n\tif len(dists[c]) > 0:\n\t\tans = min(ans, max(dists[c]))\n\nprint(ans)"]