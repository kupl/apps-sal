["n, m, a, b = list(map(int, input().split()))\n\nk = n%m\nprint(min(k*b, (m - k)*a))\n", "n,m,a,b=list(map(int,input().split()))\nprint(min((n%m)*b,(m-(n%m))*a))\n", "(n, m, a, b) = list(map(int, input().split()))\n\nif n % m == 0:\n    print(0)\nelse:\n    k1 = n % m\n    k2 = m - k1\n    print(min(k1 * b, k2 * a))\n", "n, m, a, b = list(map(int, input().split()))\nif (n % m == 0):\n    print(0)\nelse:\n    print(min((n % m) * b, (m - (n % m)) * a))\n", "n, m, a, b = list(map(int, input().split()))\nprint(min(a*(m - n%m), b*(n%m)))\n", "n, m, a, b = list(map(int, input().split()))\nprint(min(n%m*b, (m-n%m)*a))\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn, m, a, b = mi()\nd = n % m\nc1 = d * b\nc2 = (m - d) * a\nprint(min(c1, c2))", "n, m, a, b = list(map(int, input().split()))\n\nprint(min((n % m) * b, (m - (n % m)) * a))\n", "from sys import stdin, stdout\n\n\nn, m, a, b = map(int, stdin.readline().split())\nans = float('inf')\n\nif not n % m:\n    stdout.write('0')\nelse:\n    mod = n % m\n    ans = min(ans, mod * b)\n    ans = min(ans, (m - mod) * a)\n    \n    stdout.write(str(ans))", "n, m, a ,b = list(map(int,input().split()))\nans = 100000000000000000000\nif n % m == 0 :\n    ans = 0\nk = n % m\nans = min(ans, k * b , (m - k) * a)\n\n\nprint(ans)\n", "n, m, a, b = map(int, input().split())\n\nif (n % m == 0):\n    print(0)\nelse:\n    print(min((n % m) * b, (m - (n % m)) * a))", "n, m, a, b = map(int, input().split())\nt1 = n % m\nt2 = m - t1\nt1 *= b\nt2 *= a\nprint(min(t1, t2))", "n, m, a, b = map(int, input().split())\n\nd = n % m\nprint(min(d * b, (m - d) * a))", "n, m, a, b = [int(v) for v in input().split()]\n\ndown = (n // m) * m\nup = ((n + m - 1) // m) * m\n\ncost_down = (n - down) * b\ncost_up = (up - n) * a\n\nprint(min(cost_down, cost_up))\n", "# python3\n\ndef readline():\n    return list(map(int, input().split()))\n\n\ndef main():\n    n, m, a, b = readline()\n    remove = (n % m) * b\n    add = (m - n % m) * a\n    print(min(add, remove))\n    \n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m, a, b = list(map(int, input().split()))\nprint(min((n%m)*b, (m - n%m)*a))\n", "#     Educational Codeforces Round 45 (Rated for Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\n \n            \n    \nn,m, a,b = getIntList()\n\nz = n%m\n\nr = min( (m-z) * a ,  z * b)\n\n\nprint(r)\n", "n, m, a, b = [int(x) for x in input().split()]\n\nres = (n % m) * b\nres = min(res, ((m - (n % m)) % m) * a)\n\nprint(res)\n", "n, m, a, b = list(map(int, input().split()))\n\nif n % m == 0:\n\tprint(0)\nelse:\n\tt = n // m\n\tt *= m\n\tprint(min(a * (t + m - n), b * (n - t)))\n", "n, m, a, b = map(int, input().split())\nans = int(\"9\" * 20)\nans = min(ans, (n % m) * b)\nans = min(ans, (m - (n % m)) * a)\nprint(ans)", "import sys\nimport io\n\nstream_enable = 0\n\ninpstream = \"\"\"\n2 7 3 7\n\"\"\"\n\nif stream_enable:\n    sys.stdin = io.StringIO(inpstream)\n    input()\n\ndef inpmap():\n    return list(map(int, input().split()))\n\nn, m, a, b = inpmap()\nx = (n % m) * b\ny = (m - n % m) * a\nprint(min(x, y))\n", "#JMD\n#Nagendra Jha-4096\n \n#a=list(map(int,sys.stdin.readline().split(' ')))\n#n,k,s= map(int, sys.stdin.readline().split(' '))\n \nimport sys\nimport math\n\n#import fractions\n#import numpy\n \n###File Operations###\nfileoperation=0\nif(fileoperation):\n    orig_stdout = sys.stdout\n    orig_stdin = sys.stdin\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\n    sys.stdin = inputfile\n    sys.stdout = outputfile\n\n###Defines...###\nmod=1000000007\n \n###FUF's...###\ndef nospace(l):\n    ans=''.join(str(i) for i in l)\n    return ans\n \n \n \n##### Main ####\nn,m,a,b= map(int, sys.stdin.readline().split(' '))\nval=(m-(n%m))*a\nv2=(n%m)*b\nprint(min(val,v2))\n\n\n#####File Operations#####\nif(fileoperation):\n    sys.stdout = orig_stdout\n    sys.stdin = orig_stdin\n    inputfile.close()\n    outputfile.close()", "n,m,a,b = list( map(int, input().split()))\n\nprint(min((n % m)*b, (m-(n%m))*a))", "n, m, a, b = list(map(int, input().split()))\nif n % m == 0:\n    print(0)\nelse:\n    res1 = (n % m) * b\n    res2 = (m - n % m) * a\n    print(min(res1, res2))\n"]