["n = int(input())\nxs = list(map(int, input().split()))\nvs = list(map(int, input().split()))\n\nl = 0\nr = max(xs) - min(xs) + 1\nfor i in range(50):\n    m = (r + l) / 2\n    lev = 0\n    prav = 1000000000\n    for j in range(n):\n        prav = min(prav, xs[j] + vs[j] * m)\n        lev = max(lev, xs[j] - vs[j] * m)\n        if prav < lev:\n            break\n    if prav < lev:\n        l = m\n    else:\n        r = m\nprint((l + r) / 2)", "from sys import stdin\ninp=stdin.readline\nn=int(inp())\nd=[int(x) for x in inp().split()]\nv,big,small,t=[int(x) for x in inp().split()],max(d),min(d),0\nwhile(big-small>10**-6):\n            t=-1\n            mid=(big+small)/2\n            for i in range(n):\n                        if abs(d[i]-mid)/v[i]>t:\n                                    t=abs(d[i]-mid)/v[i]\n                                    x=d[i]\n            if x>mid:small=mid\n            else:big=mid\nprint(t)", "from sys import stdin\ninp=stdin.readline\nn=int(inp())\nd=[int(x) for x in inp().split()]\nv,big,small,t,c=[int(x) for x in inp().split()],max(d),min(d),0,50\nwhile(c):\n            mid,c,t=(big+small)/2,c-1,-1\n            for i in range(n):\n                        if abs(d[i]-mid)/v[i]>t:\n                                    t=abs(d[i]-mid)/v[i]\n                                    x=d[i]\n            if x>mid:small=mid\n            else:big=mid\nprint(t)", "from sys import stdin\ninp=stdin.readline\nn=int(inp())\nd=[int(x) for x in inp().split()]\nv,big,small,t,c=[int(x) for x in inp().split()],max(d),min(d),0,40\nwhile(c):\n            mid,c,t=(big+small)/2,c-1,-1\n            for i in range(n):\n                        if abs(d[i]-mid)/v[i]>t:\n                                    t=abs(d[i]-mid)/v[i]\n                                    x=d[i]\n            if x>mid:small=mid\n            else:big=mid\nprint(t)", "from sys import stdin\ninp=stdin.readline\nn=int(inp())\nd=[int(x) for x in inp().split()]\nv,big,small,t,c=[int(x) for x in inp().split()],max(d),min(d),0,30\nwhile(c):\n            mid,c,t=(big+small)/2,c-1,-1\n            for i in range(n):\n                        if abs(d[i]-mid)/v[i]>t:\n                                    t=abs(d[i]-mid)/v[i]\n                                    x=d[i]\n            if x>mid:small=mid\n            else:big=mid\nprint(t)", "from sys import stdin\ninp=stdin.readline\nn=int(inp())\nd=[int(x) for x in inp().split()]\nv,big,small,t,c=[int(x) for x in inp().split()],max(d),min(d),0,25\nwhile(c):\n            mid,c,t=(big+small)/2,c-1,-1\n            for i in range(n):\n                        if abs(d[i]-mid)/v[i]>t:\n                                    t=abs(d[i]-mid)/v[i]\n                                    x=d[i]\n            if x>mid:small=mid\n            else:big=mid\nprint(t)", "n = int(input())\nxs = list(map(int, input().split()))\nvs = list(map(int, input().split()))\n\nl = 0\nr = max(xs) - min(xs) + 1\nfor i in range(50):\n    m = (r + l) / 2\n    lev = 0\n    prav = 1000000000\n    for j in range(n):\n        prav = min(prav, xs[j] + vs[j] * m)\n        lev = max(lev, xs[j] - vs[j] * m)\n        if prav < lev:\n            break\n    if prav < lev:\n        l = m\n    else:\n        r = m\nprint((l + r) / 2)", "def inputIntegerArray():\n    return list( map( int, input().split(\" \") ) )\n\ndef time( t, pos, speed ):\n    maxleft = 0\n    minright = 1000000000\n    for i in range(0,len(pos)):\n        distance = speed[i]*t\n        left = pos[i]-distance\n        right = pos[i]+distance\n        maxleft = max( maxleft, left )\n        minright = min( minright, right )\n    if ( maxleft <= minright ):\n        return True\n    else:\n        return False\n\n\n(n) = inputIntegerArray()\n\npos = inputIntegerArray()\nspeed = inputIntegerArray()\n\nleft = 0.0\nright = 1000000000.0\nfor i in range(0,64):\n    m = left + ( right - left )/2;\n    if ( time( m, pos, speed ) ):\n        right = m\n    else:\n        left = m\n\nprint ( left )\n", "N = int( input() )\n\nX = list( map( int, input().split() ) )\nV = list( map( int, input().split() ) )\n\ndef calc( p ): # everyone is gathered to point p\n  return max( abs( X[ i ] - p ) / V[ i ] for i in range( N ) )\n\nlb, ub = 1.0, 1e9\nwhile ub - lb > 5e-7:\n  mid = ( lb + ub ) / 2\n  if calc( mid - 4e-7 ) < calc( mid + 4e-7 ):\n    ub = mid\n  else:\n    lb = mid\n\nprint( \"%.9f\" % calc( lb ) )\n", "N = int( input() )\n\nX = list( map( int, input().split() ) )\nV = list( map( int, input().split() ) )\n\ndef calc( p ): # everyone is gathered to point p\n  return max( abs( X[ i ] - p ) / V[ i ] for i in range( N ) )\n\nlb, ub = 1.0, 1e9\nwhile ub - lb > 5e-7:\n  mid = ( lb + ub ) / 2\n  if calc( mid - 5e-7 ) < calc( mid + 5e-7 ):\n    ub = mid\n  else:\n    lb = mid\n\nprint( \"%.9f\" % calc( lb ) )\n", "f = int(input())\ncoords = list(map(int, input().split()))\nspeeds = list(map(int, input().split()))\n\nlo = min(coords)\nhi = max(coords)\n\ndef calcTime(mid,speeds,coords):\n    return max([abs(mid-x)/speeds[i] for i,x in enumerate(coords)])\n\nminSoFar = 10**12\ncount = 0\nts, te = calcTime(lo,speeds,coords), calcTime(hi, speeds, coords)\n\nwhile count < 80:\n    count+=1\n    mid = lo + (hi-lo)/2\n    mp = calcTime(mid,speeds,coords)\n\n    mid2 = mid + (hi - mid)/2\n    mp2 = calcTime(mid2, speeds,coords)\n\n    if mp2 < mp:\n        lo = mid\n    else:\n        hi = mid2\n    minSoFar = min(minSoFar,mp,mp2)\n\nprint(\"{0:.9f}\".format(minSoFar))\n    \n \n\n", "# Binary search\n\nn = int(input())\nx = [int(x) for x in input().strip().split(' ')]\nv = [int(x) for x in input().strip().split(' ')]\n\np = 0\nq = 1.0*(max(x)-min(x))/min(v)\n\ndef verify(t):\n    span = [-M, M]\n    for i in range(n):\n        tmp = (x[i]-v[i]*t, x[i]+v[i]*t)\n        if tmp[0] > span[1] or tmp[1] < span[0]:\n            return []\n        span = [max(span[0], tmp[0]), min(span[1], tmp[1])]\n    return span\n\nM = max(x)\nwhile p < q - 0.0000001:\n    #print('%f, %f' % (p, q))\n    m = p + (q-p)/2\n    span = verify(m)\n    if len(span) > 0:\n        q = m\n    else:\n        p = m\nprint(p)\n", "n, x, v = int(input()), list(map(int, input().split())), list(map(int, input().split()))\nt1, t2 = 0, 10 ** 9\nwhile t1 + 10 ** -6 < t2:\n    t3 = (t1 + t2) / 2\n    l, r = 1, 10 ** 9\n    for xi, vi in zip(x, v):\n        l, r = max(l, xi - vi * t3), min(r, xi + vi * t3)\n    if l <= r:\n        t2 = t3\n    else:\n        t1 = t3\nprint(t2)", "def main(n, x, v):\n    eps = 1e-7\n    def f(p):\n        nonlocal n, x, v\n        t = 0.0\n        for i in range(n):\n            t = max(t, abs(x[i] - p) / v[i])\n        return t\n    low = 0\n    high = 1e9\n    while low + eps < high:\n        mid = (high + low) / 2\n        midd = (mid + high) / 2\n        if f(mid) < f(midd):\n            high = midd\n        else:\n            low = mid\n    return f(low)\n\nprint(main(int(input()), list(map(int, input().split(' '))), list(map(int, input().split(' ')))))\n", "n=int(input())\nx=[int(x) for x in input().split()]\nv=[int(x) for x in input().split()]\n\ndef fin(h):\n\treturn max(abs(h-x[i])/v[i] for i in range(n))\n\nl,r=1.0,1e9\nwhile r-l>5e-7:\n\tmid=(l+r)/2\n\tif (fin(mid-4e-7)<fin(mid+4e-7)):\n\t\tr=mid\n\telse:\n\t\tl=mid\n\nprint(fin(l))", "n = int(input())\nx = list(map(int, input().split()))\nv = list(map(int, input().split()))\nleft = 0\nright = 10 ** 9\nwhile right - left > 0.0000001:\n    mid = (left + right) / 2\n    a = min(x)\n    b = max(x)\n    for i in range(n):\n        a = max(a, x[i] - v[i] * mid)\n        b = min(b, x[i] + v[i] * mid)\n    if a > b:\n        left = mid\n    else:\n        right = mid\nprint('%.7f' % right)\n    \n", "n = int(input())\npos = list(map(int, input().split()))\nv = list(map(int, input().split()))\nt0 = 0\nt1 = max(1, (max(pos) - min(pos)) / 2)\nwhile t1-t0>1e-7:\n    tmid = (t0 + t1) / 2\n    inter = [pos[0] - v[0] * tmid, pos[0] + v[0] * tmid]\n    va = 1\n    for i in range(1, n):\n        a = pos[i] - v[i] * tmid\n        b = pos[i] + v[i] * tmid\n        if a < inter[0] and b > inter[1]:\n            continue\n        if inter[0] <= a <= inter[1]:\n            inter[0] = max(inter[0], a)\n        if inter[0] <= b <= inter[1]:\n            inter[1] = min(inter[1], b)\n        if b < inter[0] or a > inter[1]:\n            # print(\"breaking\")\n            break\n    else:\n        va = 0\n        t1 = tmid\n    if va: t0 = tmid\nprint(tmid)\n\n\n", "def iscontained(a,b):\n    l = max(a[0],b[0])\n    r = min(a[1],b[1])\n    return (l < r, (l,r))\n\ndef solve(p,v,n):\n    iter = 0\n    l = 0.0\n    r = 1000000010.0\n    tupl = [0] * 60001\n    while(iter < 60):\n        flag = True\n        m = (l + r)/2\n        intersect = (p[0] - v[0] * m,p[0] + v[0]* m)\n        for i in range(1,n):\n            tupl[i] = (p[i] - v[i] * m,p[i] + v[i]*m)\n            lap,intersect = iscontained(intersect,tupl[i])\n            if not lap:\n                flag = False\n                break\n        if not flag:\n            l = m\n        else:\n            r = m\n        iter = iter+1\n    # print(l,r)\n    print(\"%.9f\" % l)\n\nn = int(input())\npos = list()\nvel = list()\nfor i in map(float,input().split()):\n    pos.append(i)\nfor i in map(float,input().split()):\n    vel.append(i)\n\nsolve(pos,vel,n)", "R = lambda: map(int, input().split())\n\ndef is_vaid(ps, ss, t):\n    l, r = 0, max(ps)\n    for p, s in zip(ps, ss):\n        l, r = max(l, p - s * t), min(r, p + s * t)\n    return l < r\n\nn = int(input())\nps, ss = list(R()), list(R())\nl, r = 0, max(ps)\nwhile r - l > 10**-6:\n    m = (l + r) / 2\n    if is_vaid(ps, ss, m):\n        r = m\n    else:\n        l = m\nprint(r)", "n=int(input())\na,b=[[int(x)for x in input().split()]for y in range(2)]\ndef ok(t):\n    l,r=0,1<<30\n    for x in range(n):\n        l=max((a[x]-b[x]*t),l)\n        r=min((a[x]+b[x]*t),r)\n    return l<=r\nlo,hi=0,1<<30\nfor i in range(65):\n    m=(lo+hi)/2\n    if ok(m):hi=m\n    else:lo=m\nprint('%.10f'%hi)\n\n\n\n\n# Made By Mostafa_Khaled\n", "def check(f, speed, t):\n    inter = (f[0] - speed[0] * t, f[0] + speed[0] * t)\n    for i in range(1, len(f)):\n        cur = (f[i] - speed[i] * t, f[i] + speed[i] * t)\n        if cur[0] > inter[1] or inter[0] > cur[1]:\n            return False\n        else:\n            inter = (max(cur[0], inter[0]), min(cur[1], inter[1]))\n    return True\n\n\ndef binsearch(fr, sp):\n    inf = 0\n    sup = 10 ** 10\n    while sup - inf > 10 ** (-6):\n        if check(fr, sp, (sup + inf) / 2):\n            sup = (sup + inf) / 2\n        else:\n            inf = (sup + inf) / 2\n    return inf if check(fr, sp, inf) else sup\n\n\n\nn = int(input())\nx = list(map(int, input().split()))\nv = list(map(int, input().split()))\nprint(binsearch(x, v))", "n = int(input())\nx = list(map(float, input().split()))\nv = list(map(float, input().split()))\n\ndef func(Tx):\n    nonlocal x\n    nonlocal v\n    nonlocal n\n\n    times = 0\n    for j in range(n):\n        times = max(abs(Tx-x[j])/v[j],times)\n    return times\n\n\nl = min(x); r = max(x)\nans = float(0)\n\nfor i in range(70):\n    m1 = (2*l + r)/3\n    m2 = (2*r + l)/3\n    if(func(m1) < func(m2)):\n        r = m2\n    else:\n        l = m1\n\nans = func((m1+m2)/2)\nprint(ans)\n", "n = int(input())\nx = list(map(float, input().split()))\nv = list(map(float, input().split()))\ndef f(x0):\n    nonlocal x\n    nonlocal v\n    nonlocal n\n    d = 0\n    for i in range(n):\n        d = max(d, abs(x0 - x[i]) / v[i])\n    return d\nl = 0\nr = max(x)+ 10\nfor i in range(85):\n    m1 = (l + l + r) / 3\n    m2 = (l + r + r) / 3\n    if (f(m1) > f(m2)):\n        l = m1\n    else:\n        r = m2\n#print(l)\nprint(f(l))\n", "n=int(input())\nl=list(map(int,input().split()))\nl1=list(map(int,input().split()))\n\ndef fin(a) :\n    k=0\n    for i in range(n) :\n        k=max(abs(l[i]-a)/l1[i],k)\n    return k\nleft=1\nright=1e9\n\nwhile (abs(left-right)>5e-7) :\n    \n    mid=(left+right)/2\n    if (fin(mid-4e-6)<fin(mid+4e-6)):\n\t    right=mid\n    else:\n\t    left=mid\n    \n    \nprint(fin(left))\n", "n = int(input())\nx = list(map(float, input().split()))\nv = list(map(float, input().split()))\n\ndef func(Tx):\n    nonlocal x\n    nonlocal v\n    nonlocal n\n\n    times = 0\n    for j in range(n):\n        times = max(abs(Tx-x[j])/v[j],times)\n    return times\n\n\nl = min(x); r = max(x)\nans = float(0)\n\nfor i in range(70):\n    m1 = (2*l + r)/3\n    m2 = (2*r + l)/3\n    if(func(m1) < func(m2)):\n        r = m2\n    else:\n        l = m1\n\nans = func((m1+m2)/2)\nprint(ans)"]