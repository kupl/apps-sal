["read = lambda: map(int, input().split())\nn = int(input())\na = list(read())\nwas = [0] * (n + 1)\nbal = ans = 0\nfor i in a:\n    if was[i]:\n        bal -= 1\n    else:\n        bal += 1\n        was[i] = 1\n    ans = max(ans, bal)\nprint(ans)", "import math\nimport bisect\nimport itertools\nimport decimal\n\ndef ria():\n    return [int(i) for i in input().split()]\n\nst=set()\nmx=0\nn=ria()[0]\n\nar=ria()\nfor i in ar:\n    if i not in st:\n        st.add(i)\n    else:\n        st.remove(i)\n    mx=max(len(st),mx)\nprint(mx)", "n = int(input())\nour = list(map(int, input().split()))\ntab = set()\nres = 0\nfor elem in our:\n    if elem in tab:\n        tab.discard(elem)\n    else:\n        tab.add(elem)\n    res = max(res, len(tab))\nprint(res)", "n = int(input())\nused = [False for i in range(n + 2)]\narr = list(map(int, input().split()))\ncnt = 0\nmaxx = 0\nfor i in range(2 * n):\n    if used[arr[i]]:\n        cnt -= 1\n        used[arr[i]] = False\n    else:\n        used[arr[i]] = True\n        cnt += 1\n        maxx = max(maxx, cnt)\nprint(maxx)\n", "n = int(input())\n\ns = set()\n\n\nl = list(map(int, input().split()))\n\ncnt = 0\nfor x in l:\n\tif x in s:\n\t\ts.remove(x)\n\telse:\n\t\ts.add(x)\n\tcnt = max(cnt, len(s))\n\nprint(cnt)\n", "n = int(input())\nst = set()\nans = 0\nfor i in map(int, input().split()):\n\tif i not in st:\n\t\tst.add(i)\n\t\tans = max(ans, len(st))\n\telse:\n\t\tst.remove(i)\nprint(ans)", "n = int(input())\nx = list(map(int, input().split()))\n\na = [0] * n\ncur = 0\nres = 0\nfor y in x:\n    m = y - 1\n    if a[m]:\n        a[m] = 0\n        cur -= 1\n    else:\n        a[m] = 1\n        cur += 1\n        res = max(res, cur)\n\nprint(res)\n", "a = set()\nn = int(input())\nk = list(map(int, input().split()))\nres = 0\nfor i in range (len(k)):\n    if (k[i] in a):\n        a.remove(k[i])\n    else:\n        a.add(k[i])\n    res = max(res, len(a))\nprint(res)", "n = int(input())\narr = list(map(int, input().split()))\nused = [0 for i in range(n)]\ncur = 0\nmaxn = -1\nfor i in range(2 * n):\n    if used[arr[i] - 1] == 0:\n        cur += 1\n        used[arr[i] - 1] = 1\n    else:\n        used[arr[i] - 1] -= 1\n        cur -= 1\n    maxn = max(maxn, cur)\nprint(maxn)", "n = int(input())\ns = set()\nans = 0\nfor i in map(int, input().split()):\n    ans = max(ans, len(s))\n    if i in s:\n        s -= set([i])\n    else:\n        s.add(i)\nprint(ans)", "n = int(input())\nsocks = list(map(int, input().split()))\nf = [0] * (n + 1)\ncur = 0\nans = 0\nfor s in socks:\n    if f[s] == 1:\n        cur -= 1\n    else:\n        cur += 1\n        f[s] = 1\n    ans = max(ans, cur)\nprint(ans)", "n = input()\nl = list(map(int,input().split()))\ns = set()\nans = 1\nfor i in l:\n    s^={i}\n    ans = max(ans,len(s))\nprint(ans)\n", "#!/usr/bin/env python3\nimport sys\nimport os\n\nN = int(input())\ns = set()\nv = list(map(int, input().split()))\nans = 0\n\nfor i in range(0,2*N):\n  if v[i] in s:\n    s.remove(v[i])\n  else:\n    s.add(v[i])\n  ans = max(ans, len(s))\n\nprint(ans)\n", "s = set()\nn = int(input())\nm = input()\nm = m.split()\ncnt = 0\nmax_cnt = 0\nfor i in range(len(m)):\n    if m[i] in s:\n        s.remove(m[i])\n        cnt -= 1\n    else:\n        s.add(m[i])\n        cnt += 1\n        if cnt > max_cnt:\n            max_cnt = cnt\nprint(max_cnt)\n", "import sys\n\na = int(input().strip())\narr = [int(arr_temp) for arr_temp in input().strip().split(' ')]\n# your code goes here\ntable = set([])\nlenTabel = 0\nfor sock in arr:\n    # print(table)\n    if sock in table:\n        table.remove(sock)\n    else:\n        table.add(sock)\n        # print(table)\n        # print(\"{} ini panjang\".format(len(table)))\n        lenTabel = len(table) if (len(table) > lenTabel) else lenTabel\nprint(lenTabel)\n", "n=int(input())\nstol=[0 for i in range(n)]\na=input().split()\nm=0\nk=0\nfor e in a:\n    if stol[int(e)-1]==0:\n        stol[int(e)-1]=1\n        k+=1\n        if k>m:\n            m=k\n    else:\n        stol[int(e)-1]=0\n        k-=1\nprint(m)", "n=int(input())\nstol=[0 for i in range(n)]\na=[int(s) for s in input().split()]\nm=0\nk=0\nfor e in a:\n    if stol[e-1]==0:\n        stol[e-1]=1\n        k+=1\n        if k>m:\n            m=k\n    else:\n        stol[e-1]=0\n        k-=1\nprint(m)", "no_of_socks=int(input())\nsocks=[]\nfor i in range(no_of_socks+1):\n    socks.append(0)\npresent=0\nmaximum=0\nstring = input()\ni=0\nwhile i<len(string):\n    j=0\n    if string[i]==\" \":\n        i+=1\n    while string[i]!=\" \":\n       j*=10\n       j+=int(string[i])\n       i+=1\n       if i==len(string):\n           break\n    socks[j]+=1\n    present+=1\n    if(socks[j]==2):\n        present-=2\n    if(maximum<present):\n        maximum=present\n\nprint (maximum)", "n = int(input())\nl = list(map(int,input().split()))\nt = []\nfor i in range(100001):\n    t.append(0)\nw = 0\nF = 0\nfor i in l:\n    t[i] += 1\n    if t[i]==1:\n        F += 1\n    if w<F:\n        w = F\n    if t[i]==2:\n        F -= 1\n    if w<F:\n        w = F\nprint(w)\n", "n = int(input())\nsocks = [int(x) for x in input().split()]\n\non = set()\nm = 0\ni = 0\nfor s in socks:\n    if s in on:\n        m = max(m, i)\n        i -= 1\n    else:\n        on.add(s)\n        i += 1\nprint(max(m, i))\n    \n", "n = int(input())\nmax = 0\nnow = 0\narr = [False for i  in range(0, 2 * n)]\nh = input().split(\" \")\nfor k in range(0, 2 * n):\n\tif arr[int(h[k])] == False:\n\t\tarr[int(h[k])] = True\n\t\tnow += 1\n\telse: \n\t\tnow -= 1\n\tif max < now:\n\t\tmax = now\nprint(max)\t\t", "n=int(input())\nsp=list(map(int,input().split()))\ncount=1\nsont=set()\nfor x in sp:\n    sont^={x}\n    if len(sont)>count: count=len(sont)\nprint(count)", "n = int(input())\nx = map(int,input().split(' '))\nans = 0\ny = set ()\nfor i in x:\n    if i in y:\n        y.remove(i)\n    else:\n        y.add(i)\n    ans = max(ans,len(y))\nprint(ans)  ", "input()\nsp=input().split()\ncount=1\nsont=set()\nfor x in sp:\n\tsont^={x}\n\tl = len(sont)\n\tif l>count: count=l\nprint(count)\n"]