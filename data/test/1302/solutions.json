["n,k = list(map(int,input().split()))\nif n > 2:\n\tif k == n:\n\t\tprint(\"-1\")\n\telif k < n-1:\n\t\tp = [n]\n\t\tfor i in range(2,k+2):\n\t\t\tp.append(i)\n\t\tp.append(1)\n\t\tfor i in range(k+2,n):\n\t\t\tp.append(i)\n\t\tprint(*p)\n\telif k == n-1:\n\t\tp = []\n\t\tfor i in range(1,n+1):\n\t\t\tp.append(i)\n\t\tprint(*p)\n\t\t\nelif n == 2:\n\tif k == 1:\n\t\tprint(\"1 2\")\n\telif k == 0:\n\t\tprint(\"2 1\")\n\telse:\n\t\tprint(\"-1\")\nelse:\n\tif k == 0:\n\t\tprint(\"1\")\n\telse:\n\t\tprint(\"-1\")\n", "n,k=map(int,input().split())\nL=[0]*n\nif(k==n):\n    print(-1)\n\nelse:\n    if((n-(k+1))%2==0):\n        L[0]=1\n        for i in range(k):\n            L[i+1]=i+2\n        for i in range(k+1,n,2):\n            L[i]=i+2\n            L[i+1]=i+1\n    else:\n        L[0]=k+2\n        for i in range(k):\n            L[i+1]=i+2\n        for i in range(k+2,n,2):\n            L[i]=i+2\n            L[i+1]=i+1\n        L[k+1]=1\n    print(L[0],end=\"\")\n    for i in range(1,n):\n        print(\" \"+str(L[i]),end=\"\")\n    \n", "n, k = map(int, input().split())\nif n - k == 0:\n    print(-1)\nelif n - k == 1:\n    for i in range(n):\n        print(i + 1, end = ' ')\nelse:\n    print(n, end = ' ')\n    for i in range(k):\n        print(i + 2, end = ' ')\n    print(1, end = ' ')\n    for i in range(n - k - 2):\n        print(k + i + 2, end = ' ')", "n, k = map(int, input().split())\na = [i+1 for i in range(n)]\nif n == k:\n    print(-1)\nelse:\n    for i in range(n-k-1):\n        a[0], a[n-1-i] = a[n-i-1],a[0]\n    print(*a)", "import fractions\nn, k = list(map(int, input().split()))\nA = [i + 1 for i in range(n)]\nif k == n:\n    print(-1)\nelse:\n    good = n - 1\n    i = n - 1\n    while good - k > 1:\n        A[i], A[i - 1] = A[i - 1], A[i]\n        good -= 2\n        i -= 2\n    if good - k == 1:\n        for i in range(1, n):\n            if fractions.gcd(i + 1, A[i]) != 1:\n                A[i], A[0] = A[0], A[i]\n                good -= 1\n                break\n    if good == k:\n        print(' '.join(map(str, A)))\n    else:\n        print(-1)\n", "\ndef k_beautiful(n, k):\n    if n <= k:\n        return [-1]\n    else:\n        beautiful = [i for i in range(1, n+1)]\n    \n    # make them not beauftiful\n    left = n- k - 1\n    if left % 2 == 0:\n        for i in range(k+1, n, 2):\n            beautiful[i], beautiful[i+1] = beautiful[i+1], beautiful[i] \n    else:\n        for i in range(k+1, n-1, 2):\n            beautiful[i], beautiful[i+1] = beautiful[i+1], beautiful[i]\n        beautiful[0], beautiful[-1] = beautiful[-1], beautiful[0]\n        \n        \n    return beautiful\n\ndef print_l(l):\n    string = \"\"\n    for item in l:\n        string += str(item) + \" \"\n    if len(string) > 1:\n        string = string[0:len(string) - 1]\n    print(string)\n    \n        \ndef main():\n    i = input().split()\n    n = int(i[0])\n    k = int(i[1])\n    print_l(k_beautiful(n, k))\n\nmain()\n", "n, k = map(int, input().split())\n\nif n - k == 0:\n    print(-1)\n\nelif n - k == 1:\n    for j in range(n):\n        print(j + 1, end = ' ')\n    \nelse: \n    print(n, end = ' ')\n\n    for i in range(2, 2 + k):\n        print(i, end = ' ')\n      \n    print(1, end = ' ')    \n        \n    for h in range(k + 3, n + 1):\n        print(h - 1, end = ' ')\n", "n,k=map(int,input().split())\nr=list(range(n))\nindex=1;\nif k>=0 and k<n:\n    while k<n-1:\n        if k+2<=n-1:\n            r[index]=index+1\n            r[index+1]=index\n            index=index+2\n            k=k+2\n        elif k+1==n-1:\n            r[index]=0\n            r[0]=index;\n            k=k+1\n            break\n        else:\n            break\n    for i in r:\n        print(i+1,end=' ')\nelse:\n    print(-1)\n", "n, k = list(map(int, input().split()))\nif k == n:\n    print(-1)\nelse:\n    ans = [i for i in range(1, k+2)]\n    for i in range(k+2, 2*n//2, 2):\n        ans.append(i+1)\n        ans.append(i)\n    if (n+k) % 2 == 0 and k < n - 1:\n        ans[0] = n\n        ans.append(1)\n    print(*ans)\n", "def gcd(a, b):\n    while (a != 0 and b != 0):\n        if a > b:\n            a = a % b\n        else:\n            b = b % a\n    return (a + b) // 2\nn, k = [int(i) for i in input().split()]\nif n <= k:\n    print('-1')\nelse:\n    a = [i + 1 for i in range(n)]\n    for i in range(n - k - 1, 0, -1):\n        a[i] = a[i - 1]\n    a[0] = n - k\n    print(*a)", "'''n-1 good ones\n1 bad one\n\ncount for k\n    if odd then hop from i=2 swapping neighbors\n    if even then hop from i=1 swapping neighbors\nnon-countable cases should be caught in first line'''\nimport sys\nn,k = list(map(int,input().split()))\nif k==n:\n    print(-1)\n    return\nelements = [i+1 for i in range(n)]\ni = 1 if (n-k)%2 else 0\nwhile i<n-k:\n    elements[i],elements[i+1] = elements[i+1],elements[i]\n    i+=2\nprint(' '.join([str(e) for e in elements]))\n\n", "n, k = map(int, input().split())\nif k >= n: print(-1)\nelif k + 1 == n: print(' '.join(map(str, range(1, n + 1))))\nelse: print(' '.join(map(str, [k + 2] + list(range(2, k + 2)) + list(range(k + 3, n + 1)) + [1])))", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, k = readln()\nif n == k:\n    print(-1)\nelse:\n    print(*(list(range(2, n - k + 1)) + [1] + list(range(n - k + 1, n + 1))))\n", "n, k = [int(x) for x in input().split()]\n\nif k==n:\n\tprint(-1)\nelif n==1 and k==0:\n\tprint(1)\nelse:\n\tstorti = n-k\n\tfor i in range(2, n-k+1):\n\t\tprint(i, end=' ')\n\tprint(1, end=' ')\n\tfor i in range(n-k+1, n+1):\n\t\tprint(i, end=' ')\n", "__author__ = 'asmn'\nn, k = tuple(map(int, input().split()))\n\nprint(-1 if n == k else ' '.join(map(str, list(range(2, n - k + 1)) + [1] + list(range(n - k + 1, n + 1)))))", "n,k=map(int,input().split())\nif(k>n-1):\n    print('-1')\n    return\n    \na = [0]*(n+1)\nfor i in range(1,n+1): a[i]=i\nfor i in range(n-k,1,-1): a[i]=a[i-1]\na[1] = n-k\nfor i in range(1,n+1):\n    if(i>1): print(' ',end='')\n    print(a[i],end='')\nprint('')\n", "import itertools\nimport math\nimport random\n\nimport time\ndef timer(f):\n    def tmp(*args, **kwargs):\n        t = time.time()\n        res = f(*args, **kwargs)\n        print(\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438: %f\" % (time.time()-t))\n        return res\n\n    return tmp\n\ndef genArray(length, lower, upper):\n    return [random.randint(lower, upper) for i in range(length)]\n\n#print(genArray(5, 4, 9))\n\ndef gcd(a, b):\n    if b==0:\n        return a\n    else:\n        return gcd(b, a%b)\n\nn, k = map(int, input().split(' '))\nk = n-k\n\nif k == 0:\n    print(-1)\n    return\nelse:\n    array = [0 for i in range(n)]\n    for j in range(k):\n        array[j] = (j-1)%(k)+1\n    for j in range(k, n):\n        array[j] = j+1\n\n\nar = [i+1 for i in range(n)]\n#print(ar)\n#print(array)\n\ntotal = 0\nfor i in range(n):\n    if gcd(ar[i], array[i])==1:\n        total+=1\n\n#print(total)\n\nstr = array.__str__().replace('[', '').replace(']', '').replace(',', '')\nprint(str)", "n, k = map(int, input().split())\n# n - 1 with gcd > 1 because any number gcd with itself is > 1\narray = [0] + [i+1 for i in range(n)]\n# print(*array[1:])\nif n == k:\n    print(-1)\nelse:\n    for i in range(0, n-k-1):\n    \t# All consecutive numbers are coprimes, every swap removes a coprime\n        array[1], array[n-i] = array[n-i],array[1]\n        # print(*array[1:])\n    print(*array[1:])", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nn, k = list(map(int, input().split()))\nif n == k:\n    print(-1)\nelse:\n    print(' '.join(map(str, list(range(2, n-k+1)) + [1] + list(range(n-k+1, n+1)))))\n", "n, k = map(int, input().split(\" \"))\nif k >= n:\n    print(\"-1\")\nelif n-1 == k:\n    for i in range(1,n+1):\n        print(i, end=\" \")\nelse:\n    a = [k+2]+list(range(2, k+2))+list(range(k+3, n+1))+[1]\n    print(*a)", "n, k = [int(item) for item in input().split()]\nresult = [0]*n\nif k < n-1:\n    result[0] = n\nelse:\n     result[n-1] = n\nl = 1\nfor i in range(1, n-1):\n    if i <= k:\n        result[i] = i+1\n    else:\n        result[-l] = n - l\n        l += 1\nif result.__contains__(0):\n    result[result.index(0)] = 1\nif n == 1 == k or k == n:\n    print('-1')\nelse:\n    print(' '.join(map(str, result)))", "def wtf(i, k , n):\n    if i >= n - k:\n        return i\n    elif (n-k) % 2 == 0:\n        if i % 2 == 0:\n            return i + 1\n        elif i == 1:\n            return 1\n        else:\n            return i - 1\n    else:\n        if i % 2 == 0:\n            return i - 1\n        else:\n            return i + 1\n\n\ndef main ():\n    n, k = list(map(int, input().split()))\n    if n == k:\n        print (-1)\n    else:\n        permutation = [str(wtf(i, k, n+1)) for i in range(1, n+1)]\n        print (\" \".join(permutation))\n\ndef __starting_point():\n    main()\n__starting_point()", "def nod(a,b):\n    while a!=0 and b!=0:\n        if a > b:\n            a = a % b\n        else:\n            b = b % a\n    return(a+b)\n\n\n  \nn,k = [int(i) for i in input().split()]\na = [0]*n\ns = ''\nif n<=k:\n    print(-1)\nelse:\n    for i in range(1,k+1):\n        a[i] = i+1\n    for i in range(k+1,n-1):\n        a[i] = i+2\n\n\n    if n-k>1:\n        a[0]=k+2\n        a[n-1]=1\n        a = [str(i) for i in a]\n        print(' '.join(a))\n    else:\n        a[0]=1\n        a[n-1]=n\n        a = [str(i) for i in a]\n        print(' '.join(a))\n\n", "import sys\nimport math\nimport string\nimport operator\nimport functools\nimport fractions\nimport collections\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\n#################################################\nn,k=RI()\nif n==k:\n    print(-1)\nelse:\n    print(n-k,end=\" \")\n    for i in range(1,n-k):\n        print(i,end=\" \")\n    for i in range(n-k+1, n+1):\n        print(i,end=\" \")\n"]