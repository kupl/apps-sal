["input()\nmemory = list(map(int, input().split()))\n\nproc_data = {p: (-1, -1) for p in memory}\n\nfor i, c in enumerate(memory):\n    d1, d2 = proc_data[c]\n    if d1 == -1: d1 = i\n    d2 = i\n    proc_data[c] = (d1, d2)\n\ntry: del proc_data[0]\nexcept KeyError:\n    print(\"0\")\n    return\n\ndata = list(proc_data.values())\ndata.sort()\n\nans = 0\n\nfirst_free = 0\n\nfor a, b in data:\n    c = a - first_free\n    ans += min(c, b-a+1)\n    b -= c\n    first_free = b + 1\n\nprint(ans)\n\n", "n = int(input())\nk = [[0, 0, -1]]\ncnt = 0\nfor i in map(int, input().split()):\n    if i:\n        if k[-1][0] == i:\n            k[-1][1] += 1\n        else:\n            k.append([i, 1, cnt])\n    cnt += 1\ncnt = 0\nans = 0\nfor i in k[1:]:\n    ans += min(i[1], i[2] - cnt)\n    cnt += i[1]\nprint(ans)", "read = lambda: list(map(int, input().split()))\nn = int(input())\na = list(read())\nb = [0] * n\nj = 0\nfor i in a:\n    if i:\n        b[j] = i\n        j += 1\ncnt = sum(i != 0 for i in b)\nfor i in range(n):\n    if b[i] == 0: break\n    if b[i] == a[i]:\n        cnt -= 1\nprint(cnt)\n", "n = int(input())\nl = list(map(int, input().split()))\nans = 0\ncount = 0\nd = dict()\ns = set()\ns1 = set()\nfor i in l:\n    if i in s:\n        d[i] += 1\n    else:\n        d[i] = 1\n        s.add(i)\nfor i in range(n):\n    if l[i] == 0:\n        count += 1\n    else:\n        if l[i] not in s1:\n            ans += min(d[l[i]], count)\n            s1.add(l[i])\nprint(ans)"]