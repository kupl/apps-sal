["n, k = map(int,input().split())\ns = input()\nmaxi = 0\na = 0\nb = 0\nst = 0\nfor i in range(0, n):\n    if s[i] == 'a': a += 1\n    else: b+=1\n    if min(a, b) > k:\n        if s[st] == 'a': a-=1\n        else: b-=1\n        st += 1\n    else: maxi += 1\nprint(maxi)", "n, k = list(map(int,input().split()))\ns = input()\n\nlongest = 0\n\nleft, right = 0, 0\ncurrb = 1 if s[0] == 'b' else 0\nwhile True:\n    while right < n and currb <= k:\n        right += 1\n        if right < n and s[right] == 'b':\n            currb += 1\n    longest = max(longest, right - left)\n    if s[left] == 'b':\n        currb -= 1\n    left += 1\n    if left == n or right == n:\n        break\n\nleft, right = 0, 0\ncurrb = 1 if s[0] == 'a' else 0\nwhile True:\n    while right < n and currb <= k:\n        right += 1\n        if right < n and s[right] == 'a':\n            currb += 1\n    longest = max(longest, right - left)\n    if s[left] == 'a':\n        currb -= 1\n    left += 1\n    if left == n or right == n:\n        break\n\nprint(longest)\n", "__author__ = 'Utena'\nn,k=map(int,input().split())\ns=['0']+list(input())\nbeauty=0\ni=0\nj=0\na=0\nb=0\nwhile i<n:\n    i+=1\n    if s[i]=='a':\n        a+=1\n    if s[i]=='b':\n        b+=1\n    while min(a,b)>k:\n        j+=1\n        if s[j]=='a':\n            a-=1\n        if s[j]=='b':\n            b-=1\n    if i-j>beauty:\n        beauty=i-j\nprint(beauty)", "n, k = map(int, input().split())\nS = input()\n\nl = r = 0\na = b = 0\nans = 0\n\nwhile r < n :\n    if a <= k or a == 0 or b <= k or b == 0:\n        ans = max(ans, r - l)\n\n        if S[r] == 'a' : a += 1\n        else : b += 1\n        r += 1\n    else :\n        if S[l] == 'a' : a -= 1\n        else : b -= 1\n        l += 1\n\n    if a <= k or a == 0 or b <= k or b == 0:\n        ans = max(ans, r - l)\n\nprint(ans)", "def solve(n, k, l):\n  ki = i= s = 0; po = 1\n  for j in range(n):\n    s+=(l[j]==0)\n    while s>k: s-=(l[i]==0); i+=1\n    if j-i>ki-po: po,ki=i,j\n  return ki -po + 1\n  \n  \n  \n  \nn, k = map(int,input().split())\ns = input()\na1, a2 = [], []\nfor i in range(n):\n  if s[i] == 'a':\n    a1.append(1)\n    a2.append(0)\n  else:\n    a1.append(0)\n    a2.append(1)\nprint(max(solve(n, k, a1), solve(n, k, a2)))", "n,k=map(int,input().split())\ns=input()\nk1=k\nk2=k\na=b=ans=0\nfor i in range(n):\n    if s[i]=='b': k1-=1  \n    else: k2-=1;\n    while k1<0:\n        if s[a]=='b': k1+=1\n        a+=1\n    while k2<0:\n        if s[b]=='a': k2+=1\n        b+=1\n    ans=max(ans,i-a+1,i-b+1)\nprint(ans)", "def solve(n, k, l):\n  ki = i = s = 0\n  po = 1\n  for j in range(n):\n    s += (l[j] == 0)\n    while s > k: s -= (l[i] == 0); i += 1\n    if j - i > ki - po: po, ki = i, j\n  return ki - po + 1\n  \n  \n  \n  \nn, k = map(int,input().split())\ns = input()\nlist1, list2 = [], []\nfor i in range(n):\n  if s[i] == 'a':\n    list1.append(1)\n    list2.append(0)\n  else:\n    list1.append(0)\n    list2.append(1)\nprint(max(solve(n, k, list1), solve(n, k, list2)))", "n,t=map(int,input().split())\ns=input()\nl=0\nk=0\nma=0\nfor r in range(n):\n    if s[r]=='a':\n        if r-l+1>ma: ma=r-l+1\n    else:\n        while k>=t:\n            if s[l]=='b':\n                k-=1\n            l+=1\n        if r-l+1>ma: ma=r-l+1\n        k+=1\n        k%=r-l+2\nl=0\nk=0\nfor r in range(n):\n    if s[r]=='b':\n        if r-l+1>ma: ma=r-l+1\n    else:\n        while k>=t:\n            if s[l]=='a':\n                k-=1\n            l+=1\n        if r-l+1>ma: ma=r-l+1\n        k+=1\n        k%=r-l+2\nprint(ma)", "n, k = map(int, input().split())\ns = input()\nres = 1\n\n# to a\ni = -1\nj = 0\ncur = 0\n\nwhile i < j <= n:\n\tif j == n and i == n - 1:\n\t\tbreak\n\n\twhile cur <= k and j < n:\n\t\tif cur == k and s[j] == 'b':\n\t\t\tbreak\n\t\telse:\n\t\t\tcur += (s[j] == 'b')\n\t\t\tj += 1\n\n\tres = max(res, j - i - 1)\n\n\tif k > 0:\n\t\tif cur < k and i < j - 1:\n\t\t\ti += 1\n\t\t\tcur -= (s[i] == 'b')\n\n\t\twhile cur == k and i < j - 1:\n\t\t\ti += 1\n\t\t\tcur -= (s[i] == 'b')\n\telse:\n\t\ti = j\n\t\tj = i + 1\nres = max(res, j - i - 1)\n\n# to b\ni = -1\nj = 0\ncur = 0\n\nwhile i < j <= n:\n\tif j == n and i == n - 1:\n\t\tbreak\n\n\twhile cur <= k and j < n:\n\t\tif cur == k and s[j] == 'a':\n\t\t\tbreak\n\t\telse:\n\t\t\tcur += (s[j] == 'a')\n\t\t\tj += 1\n\n\tres = max(res, j - i - 1)\n\n\tif k > 0:\n\t\tif cur < k and i < j - 1:\n\t\t\ti += 1\n\t\t\tcur -= (s[i] == 'a')\n\t\t\t\n\t\twhile cur == k and i < j - 1:\n\t\t\ti += 1\n\t\t\tcur -= (s[i] == 'a')\n\telse:\n\t\ti = j\n\t\tj = i + 1\nres = max(res, j - i - 1)\n\n\nprint(res)", "n, k = list(map(int,input().split()))\ns = input()\nl = 0\nr = 0\nans = 0\nnum = 0\ni = 0\nwhile i < n:\n    r += 1\n    if s[i] == \"b\":\n        num += 1\n        if num > k:\n            ans = max(ans,i-l)\n            while l < n and s[l] != \"b\":\n                l += 1\n            l += 1\n            num -= 1\n    i += 1\nans = max(ans,i-l)\n\nl = 0\nr = 0\nnum = 0\ni = 0\nwhile i < n:\n    r += 1\n    if s[i] == \"a\":\n        num += 1\n        if num > k:\n            ans = max(ans,i-l)\n            while l < n and s[l] != \"a\":\n                l += 1\n            l += 1\n            num -= 1\n    i += 1\nans = max(ans,i-l)\n\nprint(ans)\n", "read = lambda: list(map(int, input().split()))\nn, k = read()\ns = input()\ni = j = 0\ncur = k\nwhile cur and j < n:\n    if s[j] == 'a':\n        cur -= 1\n    j += 1\nwhile j < n and s[j] == 'b':\n    j += 1\nans = j\nwhile j < n:\n    while i < n and s[i] == 'b':\n        i += 1\n    i += 1\n    j += 1\n    while j < n and s[j] == 'b':\n        j += 1 \n    ans = max(ans, j - i)\ni = j = 0\ncur = k\nwhile cur and j < n:\n    if s[j] == 'b':\n        cur -= 1\n    j += 1\nwhile j < n and s[j] == 'a':\n    j += 1\nans = max(ans, j)\nwhile j < n:\n    while i < n and s[i] == 'a':\n        i += 1\n    i += 1\n    j += 1\n    while j < n and s[j] == 'a':\n        j += 1\n    ans = max(ans, j - i)\nprint(ans)\n", "def check(lengths, k, full_count_of_opposite):\n    maxcount = 0\n    count = 0\n    start = 0\n    cur_k = k\n    for i, el in enumerate(lengths):\n        if i % 2 == 0:\n            # print(\"count adding\", el)\n            count += el\n        else:\n            # print(\"count removing\", el)\n            if cur_k - el >= 0:\n                cur_k -= el\n            else:\n                maxcount = max(count, maxcount)\n                # print(\"so we found\", start, maxcount)\n                cur_k -= el\n                while start < i and cur_k < 0:\n                    count -= lengths[start]\n                    cur_k += lengths[start + 1]\n                    start += 2\n                if start > i:\n                    # print(\"start > i\")\n                    cur_k = k\n                    count = 0\n    maxcount = max(count, maxcount)\n    # print(\"maxcount\", maxcount)\n    result = maxcount + min(k, full_count_of_opposite)\n    # print(result)\n    return result\n\n\ndef maxsubsl(s, k):\n    lengths = []\n    prev = s[0]\n    cnt = 0\n    full_counts = [0, 0]\n    for el in s:\n        if el != prev:\n            lengths.append(cnt)\n            cnt = 0\n        prev = el\n        cnt += 1\n        full_counts[len(lengths) % 2] += 1\n    lengths.append(cnt)\n    # print(\"lengths\", lengths)\n    # print(\"full_counts\", full_counts)\n\n    maxl = check(lengths, k, full_counts[1])\n    if len(lengths) > 1:\n        maxl = max(maxl, check(lengths[1:], k, full_counts[0]))\n    return maxl\n\n_, k = list(map(int, input().split()))\ns = input()\nprint(maxsubsl(s, k))\n", "s = input().split()\nn, k = int(s[0]), int(s[1])\ns = input()\n\nans = 0\n\nk1 = k\ni1 = -1\ni2 = 0\nwhile i1 < n - 1:\n\ti1 += 1\n\tif s[i1] == 'b':\n\t\tif k1 > 0:\n\t\t\tk1 -= 1\n\t\telse:\n\t\t\twhile s[i2] != 'b':\n\t\t\t\ti2 += 1\n\t\t\ti2 += 1\n\t\t\t\n\tif ans < i1 - i2:\n\t\tans = i1 - i2\n\t\t\nk1 = k\ni1 = -1\ni2 = 0\nwhile i1 < n - 1:\n\ti1 += 1\n\tif s[i1] == 'a':\n\t\tif k1 > 0:\n\t\t\tk1 -= 1\n\t\telse:\n\t\t\twhile s[i2] != 'a':\n\t\t\t\ti2 += 1\n\t\t\ti2 += 1\n\tif ans < i1 - i2:\n\t\tans = i1 - i2\n\t\t\nprint(ans + 1)", "n, k = map(int, input().split())\ns = input()\ne, t = 0, 0\nres = 0\nfor i in range(n):\n    if s[i] == \"b\":\n        t += 1\n    while t > k and e < i:\n        if s[e] == \"b\":\n            t -= 1\n        e += 1\n    res = max(res, i - e + 1)\ne, t = 0, 0\n    \nfor i in range(n):\n    if s[i] == \"a\":\n        t += 1\n    while t > k and e < i:\n        if s[e] == \"a\":\n            t -= 1\n        e += 1\n    res = max(res, i - e + 1)\n    \n\nprint(res)", "\nn,k=list(map(int,input().split()))\n\n\ns=input()\n\na=0\nb=0\np=0\nind=0\n\nfor i in range(n):\n\n    if s[i] == 'a':\n        a += 1\n    else:\n        b += 1\n\n    if min(a, b) > k:\n        if s[p] == 'a':\n            a -= 1\n\n        else:\n            b-=1\n\n        p += 1\n\n\n    else:\n        ind+=1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nprint(ind)\n\n\n                      \n            \n\n", "from sys import stdin\n\nN,K = map(int,stdin.readline().split())\n\ncharArr = list(stdin.readline().strip())\n\n#print(charArr)\n\nbad=0\nfront=0\nfront2=0\nback=len(charArr)\nanswer=K\nwhile front < back:\n    if(charArr[front]!='a'):\n        bad+=1\n    if(bad>K):\n        while(front2<=front and charArr[front2]=='a'):\n            front2+=1\n        bad-=1\n        front2+=1\n    answer=max(answer,front-front2+1)\n\n    front+=1\nbad=0\nfront=0\nfront2=0\nback=len(charArr)\nwhile front < back:\n    if(charArr[front]!='b'):\n        bad+=1\n    if(bad>K):\n        while(front2<=front and charArr[front2]=='b'):\n            front2+=1\n        bad-=1\n        front2+=1\n    answer=max(answer,front-front2+1)\n\n    front+=1\n\nprint(answer)", "from sys import *\ninp = lambda : stdin.readline()\n\ndef solve(x,s,n,k):\n    ans,r,bal = 0,0,0\n    for l in range(n):\n        while r < n and (s[r] == x or bal < k):\n            if s[r] != x: bal += 1\n            r += 1\n        ans = max(ans,r-l)\n        if s[l] != x:\n            bal -= 1\n    return ans\n\ndef main():\n    n,k = map(int,inp().split())\n    s = inp()\n    print(max(solve(\"a\",s,n,k),solve(\"b\",s,n,k)))\n\ndef __starting_point():\n    main()\n__starting_point()", "n, k = list(map(int, input().split()))\ns = input()\nansa = 0\na = 0\nb = 0\nstarta = 0\nfor i in range(0, n):\n    if(s[i] == 'a'):\n        a += 1\n    else:\n        b += 1\n    if(min(a, b) > k):\n        if(s[starta] == 'a'):\n            a -= 1\n        else:\n            b -= 1\n        starta += 1\n    else:\n        ansa += 1\nprint(ansa);\n", "le, ch = map(int, input().split())\nst = input()\nca, cb, si, mx = [0] * 4\nfor x in st:\n    if x == 'a':\n        ca += 1\n    else:\n        cb += 1\n    if min(ca, cb) > ch:\n        if st[si] == 'a':\n            ca -= 1\n        else:\n            cb -= 1\n        si += 1\n    else:\n        mx += 1\nprint(mx)", "def solve(k, s, c):\n    p = [-1, len(s)]\n    for i in range(len(s)):\n        if s[i] == c:\n            p += [i]\n    p.sort()\n    n = len(p)\n    if n - k - 1 <= 0:\n        return len(s)\n    m = 0\n    for i in range(n - k - 1):\n        m = max(m, p[i + k + 1] - p[i])\n    return m - 1\n\nn, k = list(map(int, input().split()))\ns = input()\n\nprint(max(solve(k, s, 'a'), solve(k, s, 'b')))\n"]