["#list(map(int,input().split()))\nt=int(input())\nfor _ in range(t):\n    n=int(input())\n    it=list(map(int,input().split()))\n    print(len(set(it)))\n", "for _ in range(int(input())):\n\tn = int(input())\n\ta = [int(i) for i in input().split()]\n\tprint(len(set(a)))", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    input()\n    print(len(set(map(int, input().split()))))\n", "a = int(input())\nfor i in range(a):\n    o = int(input())\n    u = list(map(int, input().split()))\n    print(len(set(u)))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    set_ = set(a)\n    print(len(set_))", "\n\nfor _ in range(int(input())):\n\tn=int(input())\n\ta=list(map(int,input().split()))\n\tprint(len(set(a)))", "for nt in range(int(input())):\n\tn=int(input())\n\tl=list(map(int,input().split()))\n\tl=set(l)\n\tl=list(l)\n\tprint (len(l))", "#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n# Code by H~$~C\n\nfrom sys import stdin\ninput = stdin.readline\nimport math\n\nfor i in range(int(input())):\n  n = int(input())\n  arr = sorted(list(map(int, input().split())))\n  ans = n\n  for j in range(n - 1):\n    if (arr[j + 1] == arr[j]):\n      ans -= 1\n  print(ans)", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    a = list(map(int, input().strip().split()))\n\n    print(len(set(a)))", "t = int(input())\nwhile(t):\n    t -= 1\n    n = int(input())\n    a = set(map(int, input().split()))\n    print(len(a))", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef solve():\n    n = int(input())\n    a = list(map(int, input().split()))\n    ans = len(set(a))\n    print(ans)\n\nt = int(input())\nfor i in range(t):\n    solve()\n", "t = int(input())\nfor _ in range(t):\n\tn = int(input())\n\ta = set(map(int, input().split()))\n\tprint(len(a))", "from bisect import bisect_left as bl, bisect_right as br, insort\nimport sys\nimport heapq\nfrom math import *\nfrom collections import defaultdict as dd, deque\ndef data(): return sys.stdin.readline().strip()\ndef mdata(): return map(int, data().split())\n#sys.setrecursionlimit(100000)\n\nfor i in range(int(data())):\n    n=int(data())\n    A=set(mdata())\n    print(len(A))", "from sys import stdin,stdout                           #\nimport math                                            #\nimport heapq                                           #\n                                                       #\nt = 1                                                  #\ndef aint():                                            #\n\treturn int(input().strip())                        #\ndef lint():                                            #\n\treturn list(map(int,input().split()))              #\ndef fint():                                            #\n\treturn list(map(int,stdin.readline().split()))     #\n                                                       #\t\n########################################################\n\ndef main():\n\tn=aint()\n\tl=lint()\n\tprint(len(set(l)))\n\t#solve\n\nt=int(input())\n\n########################################################\nfor i in range(t):                                     #\n\tmain()                                             #", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n=int(input())\n    A=list(map(int,input().split()))\n    print(len(set(A)))\n    \n"]