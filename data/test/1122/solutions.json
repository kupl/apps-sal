["N,M=map(int,input().split())\n\nif M%2==0:\n  for i in range(M//2):\n    print(i+1,M-i)\n  for i in range(M//2):\n    print(M+i+1,2*M-i+1)  \nelse:\n  for i in range(M//2):\n    print(i+1,M-i)\n  for i in range(M//2+1):\n    print(M+i+1,2*M-i+1)", "def main():\n    n, m = map(int, input().split())\n    if n%2:\n        for i in range(m):\n            print(i+1, n-i)\n    else:\n        for i in range(m):\n            if n-2*i-1 > n//2:\n                print(i+1, n-i)\n            else:\n                print(i+1, n-i-1)\n\ndef __starting_point():\n    main()\n__starting_point()", "n,m = list(map(int, input().split()))\n\nif n % 2 == 1:\n    for i in range(m):\n        print(\"{} {}\".format(2 + i, n - i))\nelse:\n    for i in range(m):\n        if i % 2 == 0:\n            print(\"{} {}\".format(int(n / 2 - i / 2), int(n / 2 + 1 + i / 2)))\n        else:\n            print(\"{} {}\".format(int(2 + i // 2), int(n - i // 2)))", "n,m=map(int,input().split())\n#1\u3068n\u304c\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u306ea,b\u306e\u6700\u77ed\u8ddd\u96e2\ndef dist(a,b):\n  return min(abs(a-b),n-abs(a-b))\n\na,b = n,1\nS=set()\nfor i in range(m):\n  distab = dist(a,b)\n  #distab\u304cn\u306e\u534a\u5206\u306e\u3068\u304d\n  if 2*distab == n or distab in S:\n    a -= 1\n  print(a,b)\n  S.add(distab)\n  a -= 1\n  b += 1", "\nfrom itertools import count, permutations, chain\nfrom functools import lru_cache\nfrom collections import deque, defaultdict\nfrom pprint import pprint\nimport sys\nsys.setrecursionlimit(1000000000)\nimport math\nfrom math import gcd\ndef lcm(a, b): return a * b // gcd(a, b)\nii = lambda: int(input())\nmis = lambda: list(map(int, input().split()))\nlmis = lambda: list(mis())\nINF = float('inf')\nN1097 = 10**9 + 7\n\ndef meg(f, ok, ng):\n    while abs(ok-ng)>1:\n        mid = (ok+ng)//2\n        if f(mid):\n            ok=mid\n        else:\n            ng=mid\n    return ok\n\ndef get_inv(n, modp):\n    return pow(n, modp-2, modp)\n\ndef factorials_list(n, modp):    # 10**6\n    fs = [1]\n    for i in range(1, n+1):\n        fs.append(fs[-1] * i % modp)\n    return fs\n\ndef invs_list(n, fs, modp):     # 10**6\n    invs = [get_inv(fs[-1], modp)]\n    for i in range(n, 1-1, -1):\n        invs.append(invs[-1] * i % modp)\n    invs.reverse()\n    return invs\n\ndef comb(n, k, modp):\n    num = 1\n    for i in range(n, n-k, -1):\n        num = num * i % modp\n    den = 1\n    for i in range(2, k+1):\n        den = den * i % modp\n    return num * get_inv(den, modp) % modp\n\ndef comb_from_list(n, k, modp, fs, invs):   \n    return fs[n] * invs[n-k] * invs[k] % modp\n\n#\n\nclass UnionFindEx:\n    def __init__(self, size):\n        #\u6b63\u306a\u3089\u6839\u306e\u756a\u53f7\u3001\u8ca0\u306a\u3089\u30b0\u30eb\u30fc\u30d7\u30b5\u30a4\u30ba\n        self.roots = [-1] * size\n    def getRootID(self, i):\n        r = self.roots[i]\n        if r < 0:   #\u8ca0\u306a\u3089\u6839\n            return i\n        else:\n            r = self.getRootID(r)\n            self.roots[i] = r\n            return r\n    def getGroupSize(self, i):\n        return -self.roots[self.getRootID(i)]\n    def connect(self, i, j):\n        r1, r2 = self.getRootID(i), self.getRootID(j)\n        if r1 == r2:\n            return False\n        if self.getGroupSize(r1) < self.getGroupSize(r2):\n            r1, r2 = r2, r1\n        self.roots[r1] += self.roots[r2]    #\u30b5\u30a4\u30ba\u66f4\u65b0\n        self.roots[r2] = r1\n        return True\n\nYes = 'Yes'\nNo = 'No'\n\n\ndef main():\n    N, M = mis()\n    if N&1:\n        q = deque(list(range(M*2)))\n        while q:\n            print((q.popleft()+1, q.pop()+1))\n    else:\n        q1 = deque(list(range(N)))\n        q2 = deque(list(range(N-1)))\n        p1 = []\n        while q1:\n            p1.append((q1.popleft()+1, q1.pop()+1))\n        p2 = []\n        while len(q2)>=2:\n            p2.append((q2.popleft()+1, q2.pop()+1))\n        p2.reverse()\n        for _ in range(M):\n            print((*p1.pop()))\n            p1, p2 = p2, p1\n\n\nmain()\n\n", "N, M = (int(_) for _ in input().split())\n\nif N % 2 == 0:\n    s = (N - 1) // 4 + 1\n    ret = []\n    for i in range(1, s):\n        ret.append((i, N - i))\n    for i in range(s, N // 2):\n        ret.append((i, N - i - 1))\nelse:\n    ret = []\n    for i in range(1, (N // 2) + 1):\n        ret.append((i, N - i))\n\n\nfor r0, r1 in ret[:M]:\n    print((r0, r1))\n", "N, M = map(int, input().split())\n\nif N % 2 == 1:\n    for a in range(1, M + 1):\n        print(a, N - a + 1)\nelse:\n    for a in range(1, M + 1):\n        if a <= N // 4:\n            print(a, N - a + 1)\n        else:\n            print(a, N - a)", "N, M = list(map(int, input().split()))\n\na = 1\nb = 1+M\n\nwhile(a < b) :\n  print(a, b)\n  a += 1\n  b -= 1\n\na = M+2\nb = 2*M+1\nwhile(a < b) :\n  print(a, b)\n  a += 1\n  b -= 1", "def main():\n    N, M = list(map(int, input().split()))  # N must be an odd number\n\n    is_odd = (N-1) & 1\n    bias = 0\n\n    for i, distance in enumerate(range(N-1, 0, -2)):\n\n        if is_odd and distance <= -distance % N:\n            bias = 1\n\n        left = i + 1\n        right = left + distance - bias\n        print((left, right))\n\n        if i == M-1:\n            return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N,M = map(int,input().split())\nans = []\nif N%2:\n    for i in range(N//2):\n        ans.append((i+1, N-1-i))\nelse:\n    m = N//2\n    for i in range(m//2):\n        ans.append((i+1, m-i))\n    for i in range((m-1)//2):\n        ans.append((m+i+1, N-1-i))\nfor a,b in ans[:M]:\n    print(a,b)", "import sys\ndef main():\n    N,M=tuple(map(int,sys.stdin.readline().split()))\n    if M%2==1:\n        m1,m2=M//2,M//2+1\n        for i in range(m1):\n            l,r=i+1,M-i\n            print(str(l)+' '+str(r))\n        for i in range(m2):\n            l,r=M+1+i,2*M+1-i\n            print(str(l)+' '+str(r))\n    else:\n        m=M//2\n        for i in range(m):\n            l,r=i+1,M+1-i\n            print(str(l)+' '+str(r))\n        for i in range(m):\n            l,r=M+2+i,2*M+1-i\n            print(str(l)+' '+str(r))\ndef __starting_point():main()\n__starting_point()", "n,m = map(int,input().split())\nl=1\nif n%2==1:\n    r=n\n    for i in range(m):\n        d=min(abs(l-r),n-abs(l-r))\n        print(l,r)\n        l+=1\n        r-=1\nelse:\n    if n%4==0:\n        r=n-1\n    else:\n        r=n\n    rev=False\n    for i in range(m):\n        d=min(abs(l-r),n-abs(l-r))\n        if d == n//2:\n            rev=True\n            l+=1\n            print(l,r)\n        else:\n            print(l,r)\n        l+=1\n        r-=1", "N,M=list(map(int, input().split()))\nsrc=[i+1 for i in range(M*2+1)]\nif M%2==0:\n  for m in range(M//2):\n    a=src[m]\n    b=src[M-m]\n    print('{} {}'.format(a,b))\n  for m in range(M//2):\n    a=src[M+1+m]\n    b=src[-(m+1)]\n    print('{} {}'.format(a,b))\nelse:\n  for m in range(M//2):\n    a=src[m]\n    b=src[M-1-m]\n    print('{} {}'.format(a,b))\n  for m in range(M-(M//2)):\n    a=src[M+m]\n    b=src[-(m+1)]\n    print('{} {}'.format(a,b))", "def main():\n    n, m = list(map(int, input().split()))\n    left = 1\n    right = n\n    is_shift = False\n    ans = []\n    while left < right:\n        if right - left <= n // 2 and not is_shift and n % 2 == 0:\n            left += 1\n            is_shift = True\n        ans.append([left, right])\n        left += 1\n        right -= 1\n\n    for l in range(m):\n        print((*ans[l]))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    N, M = list(map(int, input().split()))  # N must be an odd number\n\n    left = 1\n    count = 0\n    buff = 0\n    for d in range(N-1, 0, -2):\n\n        if (N-1) & 1 and d <= -d % N:\n            buff = 1\n\n        right = left + d - buff\n        print((left, right))\n\n        left += 1\n        count += 1\n        if count == M:\n            return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\n\ndef main():\n    input = sys.stdin.buffer.readline\n    N, M = list(map(int, input().split()))\n    skip = (N // 2) // 2 + 1 if N % 2 == 0 else None\n    count = 0\n    left, right = 0, N + 1\n    while count < M:\n        left += 1\n        if left == skip:\n            continue\n        right -= 1\n        print((left, right))\n        count += 1\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#E\nimport numpy as np\nn, m = list(map(int, input().split()))\nlists = list(np.arange(1, n+1))\nlist1 = lists[:m]\nlist2 = lists[m:]\nnum = m\nfor i in range(m//2 +1):\n    if num == 0:\n        break\n    print(list2[i],list2[m+1-i-1])\n    num -= 1\n    if num == 0:\n        break\n    print(list1[i],list1[m-i-1])\n    num -= 1", "N, M = [int(_) for _ in input().split()]\nl = 1\nr = N\nans = []\nfor _ in range(M - M // 2):\n    ans += [l, r]\n    l += 1\n    r -= 1\nif (r - l) % 2 == (l + N - r) % 2:\n    r -= 1\nfor _ in range(M // 2):\n    ans += [l, r]\n    l += 1\n    r -= 1\nans = ans[:2 * M]\nprint(('\\n'.join(f'{a} {b}' for a, b in zip(ans[::2], ans[1::2]))))\n", "from collections import deque\nfrom itertools import product\nimport sys\nimport math\n\nsys.setrecursionlimit(200000)\ninput = sys.stdin.readline\n\n\ndef read():\n    N, M = list(map(int, input().strip().split()))\n    return N, M\n\n\ndef solve(N, M):\n    H = (N-1) // 2\n    LL = 0\n    LR = (H // 2) * 2 + 1\n    RL = N - (H - H//2) * 2\n    RR = N\n    pairs = []\n    while LR - LL > 1:\n        pairs.append((LL+1, LR))\n        LL += 1\n        LR -= 1\n    while RR - RL > 1:\n        pairs.append((RL+1, RR))\n        RL += 1\n        RR -= 1\n    for i in range(M):\n        print((*pairs[i]))\n\n\ndef __starting_point():\n    inputs = read()\n    solve(*inputs)\n\n__starting_point()", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\nfrom collections import deque\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nDR = [1, -1, 0, 0]\nDC = [0, 0, 1, -1]\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n     \ndef main():\n    N, M = LI()\n    used = [0 for _ in range(N)]\n    cur = 0\n    pairs = []\n    used = set()\n    if N % 2 == 0:\n        a = 1\n        b = N\n        while len(pairs) < M:\n            if b-a in used or N + a -b in used or b - a == N//2:\n                b -= 1\n            pairs.append((a, b))\n            used.add(b-a)\n            used.add(N+a - b)\n            a += 1\n            b -= 1\n\n    else:\n        a = 1\n        b = N - 1\n        while len(pairs) < M:\n            pairs.append((a, b))\n            a += 1\n            b -= 1\n    for p in pairs:\n        print((p[0], p[1]))\n\n\n\nmain()\n\n", "import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, M = map(int, input().split())\n    used = set()\n    Ans = [None for _ in range(M)]\n    left = 1\n    right = N\n    for i in range(M):\n        if right - left in used or 2 * (right - left) == N: right -= 1\n        Ans[i] = (left, right)\n        diff = right - left\n        used |= {diff, N - diff}\n        left += 1\n        right -= 1\n    for i in range(M): print(*Ans[i], sep=\" \")\n\n    return 0\n\ndef __starting_point():\n    solve()\n__starting_point()", "n,m = map(int, input().split())\nif n % 2 != 0:\n    for i in range(1,m+1):\n        print(i,n+1-i)\nelse:\n    x = n//2\n    for i in range((m+1)//2):\n        print(i+1,x-i)\n    for i in range(m//2):\n        print(x+1+i, n-1-i)", "n, m = list(map(int, input().split()))\na, b = n, 1\nV = [False for d in range(1, n + 1)]\nfor i in range(m):\n    d = min(a - b, n - (a - b))\n    if 2 * d == n or V[d]:\n        a -= 1\n    print((a, b))\n    d = min(a - b, n - (a - b))\n    V[d] = True\n    a -= 1\n    b += 1\n", "N, M = map(int, input().split())\nfor i in range(M, 0, -2):\n    cur_start = (M - i) // 2\n    print(cur_start + 1, cur_start + i + 1)\nstart = M + 2\nfor i in range(M -1, 0, -2):\n    cur_start = start + (M -  1 - i) // 2\n    print(cur_start, cur_start + i)", "N, M = list(map(int, input().split()))\nif N%2==0:\n    r = N\n    f = True\n    for i in range(M):\n        if f and i*4+2 >= N:\n            r -= 1\n            f = False\n        print((1+i, r))\n        r -= 1\nelse:\n    for i in range(M):\n        print((1+i, N-i))\n", "n,m=[int(_) for _ in input().split()]\n\nn=2*m+1\nif m%2==0:\n  for i in range(m//2):\n    print(i+1,m-i)\n  for i in range(m//2):\n    print(m+1+i,n-i)\nelse:\n  for i in range(m//2):\n    print(i+1,m-i)\n  for i in range(m//2+1):\n    print(m+1+i,n-i)", "def main():\n    N, M = map(int, input().split())\n\n    if N & 1:\n        gen = ((i+1, N-i) for i in range(M))\n    else:\n        gen = ((i+1, N-i) if 2*i < N/2-1 else (i+1, N-i-1) for i in range(M))\n\n    [print(*s) for s in gen]\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = map(int, input().split())\nif m % 2 == 1:\n\n    cnt = 0\n\n    for i in range(m // 2):\n        num1 = 1 + i\n        num2 = m - i\n        print(num1, num2, sep=\" \")\n        cnt += 1\n        if cnt == m:\n            return\n    for i in range(m // 2 + 1):\n        num1 = m + 1 + i\n        num2 = 2 * m + 1 - i\n        print(num1, num2, sep=\" \")\n        cnt += 1\n        if cnt == m:\n            return\nelse:\n    cnt = 0\n\n    for i in range(m // 2):\n        num1 = 1 + i\n        num2 = m + 1 - i\n        print(num1, num2, sep=\" \")\n        cnt += 1\n        if cnt == m:\n            return\n    for i in range(m // 2):\n        num1 = m + 2 + i\n        num2 = 2 * m + 1 - i\n        print(num1, num2, sep=\" \")\n        cnt += 1\n        if cnt == m:\n            return\n", "n, m = list(map(int, input().split()))\nif m == 1:\n    print((1, 2))\n    return\nl1 = 1\nl2 = m + 2\nf = True\nfor length in range(m, 0, -1):\n    if f:\n        print((l1, l1 + length))\n        l1 += 1\n        f = False\n    else:\n        print((l2, l2 + length))\n        l2 += 1\n        f = True\n", "def main():\n    N, M = list(map(int, input().split()))  # N must be an odd number\n\n    if N % 2 == 1:\n        gen = ((i+1, N-i) for i in range(M))\n    else:\n        gen = ((i+1, N-i) if 2*i < N/2-1 else (i+1, N-i-1) for i in range(M))\n\n    for s in gen:\n        print((*s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, M = map(int, input().split())\npiv = N//4+(N%4==3)\npairs = [(str(piv-i), str(piv+1+i)) for i in range(N//4+(N%4==3))]\npiv = N - N//4 + (N%4==0)\npairs += [(str(piv-1-i), str(piv+1+i)) for i in range(N//4-(N%4==0))]\nfor pair in pairs[:M]:\n    print(' '.join(pair))", "N, M = map(int, input().split())\n\nif N%2:\n    for i in range(M):\n        print(2+i, N-i)\nelse:\n    used = set()\n    s = 1\n    for i in list(range(2, M+1, 2)[::-1])+list(range(1, M+1, 2)[::-1]):\n        while 1:\n            if not s in used and not (s+i) in used:\n                used.add(s)\n                used.add(s+i)\n                print(s, s+i)\n                break\n            s += 1", "\n\ndef main():\n    N, M = list(map(int, input().split()))\n    skip = (N // 2) // 2 + 1 if N % 2 == 0 else None\n    count = 0\n    left, right = 0, N + 1\n    while count < M:\n        left += 1\n        if left == skip:\n            continue\n        right -= 1\n        print((left, right))\n        count += 1\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N, M = map(int, input().split())\n\n#N\u4eba\u306e\u53c2\u52a0\u8005\u304b\u3089\u3001M\u7d44\u9078\u3076\n#\u3053\u308c\u3092N\u30bb\u30c3\u30c8\u5b9f\u65bd\u3002\n#\u7d44\u5408\u308f\u305b\u306e\u8ddd\u96e2\u304c\u91cd\u8907\u3057\u306a\u3051\u308c\u3070\u3001\u6210\u7acb\n\n\n#\u53c2\u52a0\u8005\u3092\u534a\u5206\u306b\u5206\u3051\u3001\n#\u524d\u534a\u3092\u8ddd\u96e2\u5947\u6570\u3001\u5f8c\u534a\u3092\u8ddd\u96e2\u5076\u6570\u306b\u3059\u308b\n\n#\u53c2\u52a0\u8005\u3092\u534a\u5206\u306b\u5206\u3051\u308b\ndiv_point=int((N/2))\n#\u524d\u534a\u30b0\u30eb\u30fc\u30d7\u3092\u5947\u6570\u306b\u3059\u308b\nif div_point%2==0:\n    div_point-=1\n#\u5f8c\u534a\u30b0\u30eb\u30fc\u30d7\u306f\u66f4\u306b\u534a\u5206\u306b\u5206\u3051\u308b\nre_point=div_point+int((N-div_point)/2)\n\n#\u7d44\u3092\u4f5c\u308b\ni=0 #\u521d\u671f\u5316\nwhile 1<div_point-i*2 and i<re_point and i<M:#\u524d\u534a\u30b0\u30eb\u30fc\u30d7\u30fb\u30fb\u30fb\u8ddd\u96e2\u304c\u5947\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u7d44\u307f\u5206\u3051\n    ent1=i+1 #\u524d\u534a\u30b0\u30eb\u30fc\u30d7\uff1a\u4e00\u4eba\u76ee\n    ent2=div_point-i #\u524d\u534a\u30b0\u30eb\u30fc\u30d7\uff1a\u4e8c\u4eba\u76ee\n    print(str(ent1) + ' ' + str(ent2))\n    i+=1\nfor j in range(M-i):#\u5f8c\u534a\u30b0\u30eb\u30fc\u30d7\n    ent1=re_point-j #\u5f8c\u534a\u30b0\u30eb\u30fc\u30d7\uff1a\u4e00\u4eba\u76ee\n    ent2=re_point+j+1 #\u5f8c\u534a\u30b0\u30eb\u30fc\u30d7\uff1a\u4e8c\u4eba\u76ee\n    print(str(ent1) + ' ' + str(ent2))", "N,M = map(int,input().split())\nif N%2:\n    for i in range(M):\n        print(i+1, M*2-i)\nelse:\n    b = M//2\n    a = M - b\n    for i in range(a):\n        print(i+1, a*2-i)\n    for i in range(b):\n        print(a*2+1+i, M*2+1-i)", "def main():\n    N, M = list(map(int, input().split()))\n    if N % 2 == 1:\n        for i in range(M):\n            print((i + 1, N - i - 1))\n            \n    else:\n        s = set()\n        t = 0\n        for i in range(M):\n            a, b = i + 1, N - i - t\n            if (b - a) in s or (a + N - b) in s or b - a == a + N - b:\n                t += 1\n                b = N - i - t\n            print((a, b))\n            s.add(b - a)\n            s.add(N + a - b)\n\nmain()\n", "N,M= list(map(int, input().split()))\n\nnum = list(range(1,N+1))\nans = []\n\n\nif M % 2 == 0:\n    for i in range(M // 2):\n        ans.append([i+1,M+1-i])\n    for i in range(M // 2):\n        ans.append([i+2+M,2*M+1-i])\n\n\nif M % 2 != 0:\n    for i in range(M // 2):\n        ans.append([i+1,M-i])\n    for i in range(M - M//2):\n        ans.append([i+1+M,2*M+1-i])\n\n\nfor an in ans:\n    print((an[0],an[1]))\n", "from sys import stdin\nimport sys\nimport math\nfrom functools import reduce\nimport functools\nimport itertools\nfrom collections import deque,Counter\nfrom operator import mul\nimport copy\n# ! /usr/bin/env python\n# -*- coding: utf-8 -*-\nimport heapq\n\nn,m = list(map(int, input().split()))\n\np = m // 2\nfor i in range(p):\n    print((p-i,p+2+i))\n\nq = m // 2 + 1\nif m % 2 == 1:\n    for i in range(q):\n        print((m+q-i,m+q+i+1))\nelse:\n    for i in range(q-1):\n        print((m+q-i,m+q+i+1))\n\n\n\n\n\n\n", "n, m = list(map(int, input().split()))\nans = []\nif n % 2 == 1:\n    for i in range(m):\n        ans.append((i+1, n-i))\n\n\nelse:\n    for i in range(m):\n        if i <= (m+1)//2-1:\n            ans.append((i+1, n-i))\n        else:\n            ans.append((i+1, n-i-1))\n\nfor a, b in ans:\n    print((a, b))\n", "N,M=list(map(int, input().split()))\nsrc=[i+1 for i in range(M*2+1)]\nif M%2==0:\n  for m in range(M//2):\n    a=src[m]\n    b=src[M-m]\n    print('{} {}'.format(a,b))\n  for m in range(M//2):\n    a=src[M+1+m]\n    b=src[-(m+1)]\n    print('{} {}'.format(a,b))\nelse:\n  for m in range(M//2):\n    a=src[m]\n    b=src[M-1-m]\n    print('{} {}'.format(a,b))\n  for m in range(M-(M//2)):\n    a=src[M+m]\n    b=src[-(m+1)]\n    print('{} {}'.format(a,b))", "n, m = map(int, input().split())\nx, y = (m+1) // 2, m // 2\nfor i in range(x):\n    print(1+i, 2*x-i)\nfor i in range(y):\n    print(2*x+1+i, 2*x+1+2*y-i)", "n,m = map(int,input().split())\n\nif n%2 != 0:\n  for i in range(m):\n    print(1+i,n-i)\nelse:\n  for i in range(m):\n    if (n-i)-(1+i) > n/2:\n      print(1+i,n-i)\n    else:\n      print(1+i,n-i-1)", "\ndef __starting_point():\n    nm = input()\n    nm = nm.split()\n    n = int(nm[0])\n    m = int(nm[1])\n\n    if n%2==1:\n        for i in range(1,m+1):\n            print((i,n+1-i))\n\n\n    if n%2==0:\n        t = n\n        f = 0\n\n        for i in range(1,m+1):\n            p = i-1+t-n\n            if p>=n-i-1 and f==0:\n                f = 1\n                n -= 1\n            print((i,n))\n            n -= 1\n\n__starting_point()", "n,m = list(map(int,input().split()))\n\na = n //2\nb = a + 1\nabset = set()\n\nfor i in range(m):\n    print(a,b)\n    abset.add(b-a)\n    abset.add(n-b+a)\n    a -= 1\n    b += 1\n    if n % 2 == 0 and (b - a == abs(n - b + a) or b - a in abset or n - b + a in abset):\n        b += 1", "import sys\n\nstdin = sys.stdin\ninf = 1 << 60\nmod = 1000000007\n\nsys.setrecursionlimit(10 ** 7)\n\nni      = lambda: int(ns())\nnin     = lambda y: [ni() for _ in range(y)]\nna      = lambda: list(map(int, stdin.readline().split()))\nnan     = lambda y: [na() for _ in range(y)]\nnf      = lambda: float(ns())\nnfn     = lambda y: [nf() for _ in range(y)]\nnfa     = lambda: list(map(float, stdin.readline().split()))\nnfan    = lambda y: [nfa() for _ in range(y)]\nns      = lambda: stdin.readline().rstrip()\nnsn     = lambda y: [ns() for _ in range(y)]\nncl     = lambda y: [list(ns()) for _ in range(y)]\nnas     = lambda: stdin.readline().split()\n\nn, m = na()\n\nif m == 1:\n    print(1, 2)\n    return\n\nif m % 2 == 0:\n    l = (m + 1) // 2\n    r = (m + 1) // 2 + 2\n    cnt = 0\n    while cnt < m and l >= 1 and r <= (m + 1):\n        print(l, r)\n        l -= 1\n        r += 1\n        cnt += 1\n    l = (n - m - 1) // 2\n    r = (n - m - 1) // 2 + 1\n    while cnt < m and l >= 1 and r <= (n - m - 1):\n        print(m + 1 + l, m + 1 + r)\n        l -= 1\n        r += 1\n        cnt += 1\nelse:\n    l = m // 2\n    r = m // 2 + 2\n    cnt = 0\n    while cnt < m and l >= 1 and r <= m:\n        print(l, r)\n        l -= 1\n        r += 1\n        cnt += 1\n    l = (n - m) // 2\n    r = (n - m) // 2 + 1\n    while cnt < m and l >= 1 and r <= (n - m):\n        print(m + l, m + r)\n        l -= 1\n        r += 1\n        cnt += 1", "n, m = list(map(int, input().split()))\n\ndef ark(a, b):\n    return min(abs(a - b), n - abs(a - b))\n\na, b = n, 1\nS = set()\nfor i in range(m):\n    if 2 * ark(a, b) == n or ark(a, b) in S:\n        a -= 1\n    print((a, b))\n    S.add(ark(a, b))\n    a -= 1\n    b += 1\n", "N,M = [int(i) for i in input().split()]\nif N%2 == 1:\n    for i in range(1,M+1):\n        print(i, end=\" \")\n        print(N+1-i)\n    return\nL = min(M,N//4)\nfor i in range(1,L+1):\n    print(i,end=\" \")\n    print(N+1-i)\nif L < M:\n    for i in range(L+1,M+1):\n        print(i,end=\" \")\n        print(N-i)", "def main():\n    N, M = list(map(int, input().split()))\n    ans = list()\n    if N % 2 == 1:\n        for k in range(min(N // 2, M)):\n            ans.append((k + 1, N - k))\n    else:\n        K = N // 2 - 1\n        for k in range((K + 1) // 2):\n            if len(ans) >= M:\n                break\n            ans.append((k + 1, N - k))\n        for k in range(K // 2):\n            if len(ans) >= M:\n                break\n            b = N - (K + 1) // 2 - k\n            a = b - 2 * (K // 2 - k)\n            ans.append((a, b))\n    for row in ans:\n        print(('{} {}'.format(row[0], row[1])))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\ndef resolve():\n    N, M = map(int, input().split())\n\n    if M == 1:\n        print(1, 2)\n        return\n\n    i1 = 1\n    i2 = M+2\n    for diff in range(M, 0, -1):\n        print(i1, i1+diff)\n        i1 += 1\n        i1, i2 = i2, i1\n\ndef __starting_point():\n    resolve()\n__starting_point()", "n, m = list(map(int, input().split()))\n\nif n % 2 == 1:\n    for i in range(m):\n        print((n - i, i + 1))\nelse:\n    used = [False] * (n + 1)\n    offset = 0\n    for i in range(m):\n        a = n - (i + offset)\n        b = i + offset + 1\n        d = min(a - b, n - (a - b))\n        if used[d] or a - b == n - (a - b):\n            offset = 1\n        used[d] = True\n        print((n - i, i + offset + 1))\n", "N, M = list(map(int, input().split()))\nodd_l = 1\nodd_r = M\neven_l = M + 1\neven_r = 2 * M + 1\ni = 0\nwhile i < M:\n    print((even_l, even_r))\n    i += 1\n    if i == M:\n        break\n    print((odd_l, odd_r))\n    i += 1\n    odd_l += 1\n    odd_r -= 1\n    even_l += 1\n    even_r -= 1\n", "# \u5165\u529b\nN, M = map(int, input().split())\n\n# \u756a\u53f7\u3092\u5165\u529b\nA = [int(i) for i in range(N)]\n\nB = [] # \u53f0No. \u30ea\u30b9\u30c8\n\nif N % 2 == 0:\n    # N \u304c\u5076\u6570\u306e\u5834\u5408\n\n    center = N // 2\n    c1 = center // 2\n    c2 = center + c1\n    # print(c1,c2)\n\n    for i in range(1, M+1):\n        # print(i)\n        j = i // 2\n        # print(\"j\", j)\n        if i % 2 == 1:\n            B.append((c1-j, c1+j+1))\n        else:\n            B.append((c2-(j-1), c2 - (j-1) + 2*j ))\n\nelse:\n    # N \u304c\u5947\u6570\u306e\u5834\u5408\n\n    center = N // 2 + 1\n    # print(center)\n    for i in range(1, M+1):\n        B.append((center - i, center + i))\n        \nfor i in B:\n    print(i[0], i[1])", "n, m = map(int, input().split())\nif n % 2 == 1:\n    for i in range(m):\n        print(i + 1, n - i)\nelse:\n    for i in range(m):\n        if 2 * (i + 1) <= m + 1:\n            print(i + 1, n - i)\n        else:\n            print(i + 1, n - i - 1)", "#coding:utf-8\n\nn,m = map(int,input().split())\npoint_s = 0\npoint_e = n + 1\n\nif n % 2 == 0:\n    for i in range(1,m+1):\n        point_s += 1\n        point_e -= 1\n        print(\"{} {}\".format(point_s,point_e))\n        if n % 4 == 0 and (point_e - point_s - 1) * 2 == n:\n            point_e -= 1\n        elif n % 4 != 0 and (point_e - point_s - 1) * 2 == n + 2:\n            point_e -= 1\nelif n % 2 == 1:\n    for i in range(1,m+1):\n        point_s += 1\n        point_e -= 1\n        print(\"{} {}\".format(point_s,point_e))", "n, m = map(int, input().split())\nfor i in range(m):\n    if n % 2 == 0 and n // 2 <= (m - i) * 2 - 1:\n        x = 1\n    else:\n        x = 0\n    print(i + 1, (m - i) * 2 + i + x)", "n,m = list(map(int,input().split()))\n\nk = 1\nk_even = n//2+1\np_even = k_even+1\n\ndef rotate(s,diff):\n    if s + diff < 1:\n        return s+diff+n\n    elif s + diff > n:\n        return s+diff-n\n    return s+diff\n\nfor i in range(m+1):\n    if i != 0 and i % 2 == 0:\n        print((rotate(k,-(i//2)),rotate(k,i//2)))\n\n    if i % 2 == 1:\n        print((rotate(k_even,-(i//2)),rotate(p_even,i//2)))\n\n\n", "n,m=list(map(int,input().split()))\nif n%2==1:\n  for i in range(m):\n    print((n-i-1,i+1))\nelse:\n  cnt=1\n  for i in range(m):\n    if i%2==0:\n      print((n//4-i//2,n//4-i//2+cnt))\n    else:\n      print((n//2+n//4-i//2,n//2+n//4-i//2+cnt))\n    cnt+=1\n", "import os\nfrom collections import Counter\n\nimport sys\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(10 ** 9)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\n\nN, M = list(map(int, sys.stdin.buffer.readline().split()))\n\n\ndef test(ans):\n    hist = []\n    for a, b in ans:\n        hist.append((0, (b - a) % N))\n        hist.append((0, (a - b) % N))\n    print((len(set(hist)) == M * 2))\n    print((Counter(hist)))\n\n\nans = []\nif N % 2 == 1:\n    for i in range(M):\n        a, b = i + 1, N - i\n        ans.append((a, b))\nelse:\n    hist = set()\n    d = 0\n    for i in range(M):\n        a, b = i + 1, N - i - d\n        if (a - b) % N in hist or (b - a) % N in hist or (a - b) % N == (b - a) % N:\n            d += 1\n            a, b = i + 1, N - i - d\n        hist.add((a - b) % N)\n        hist.add((b - a) % N)\n        ans.append((a, b))\n\nfor a, b in ans:\n    print((a, b))\n\n# test(ans)\n", "def resolve():\n    N,M = map(int,input().split())\n    if N % 2 == 1:\n        for i in range(M):\n            print(str(i+1) + \" \" + str(N-i))\n    else:\n        for i in range((M-1) // 2 + 1):\n            print(str(i+1) + \" \" + str(N-i))\n        for i in range((M-1) // 2 + 1 , M):\n            print(str(i+1) + \" \" + str(N-i-1))\nresolve()", "n, m  = map(int, input().split())\n\nif m % 2 ==0:\n    for i in range(m//2):\n        print(1+i, m-i)\n        print(m+1+i, 2*m+1-i)\nelse:\n    for i in range((m//2)+1):\n        print(m+1+i, 2*m+1-i)\n    for i in range(m//2):\n        print(1+i, m-i)", "import sys\n\nsys.setrecursionlimit(10 ** 7)\ninput = sys.stdin.readline\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    n, m = list(map(int, input().split()))\n\n    if n % 2:\n        left = 1\n        right = n - 1\n        while left < right and m:\n            print((left, right))\n            left += 1\n            right -= 1\n            m -= 1\n    else:\n        left = 1\n        right = n - 1\n        flg = False\n        while left < right and m:\n            if not flg and right - left <= n // 2:\n                right -= 1\n                flg = True\n            print((left, right))\n            left += 1\n            right -= 1\n            m -= 1\n\n\ndef __starting_point():\n    resolve()\n\n__starting_point()", "n,m=list(map(int,input().split()))\n\nif n%2 == 1:\n  for i in range(1,m+1):\n    a,b=i,n-i\n    print((a,b))\nelse:\n  for i in range(1,m+1):\n    a,b = i,n-i\n    if b-a <= n//2:\n      a+=1\n    print((a,b))\n", "n,m =map(int,input().split())\n\na = 1\nb = m - 1\nc = m\nd = [i for i in range(n + 1)]\n\nfor i in range(m):\n    if m % 2 == 0 and i < m / 2:\n        print(d[a], d[a+b])\n        print(d[-a-c],d[-a])\n        a = a + 1\n        b = b - 2\n        c = c - 2\n\n    elif m % 2 != 0 and i < m / 2:\n        print(d[-a-c],d[-a])\n        if i == (m + 1) / 2 - 1:\n            break\n        print(d[a], d[a+b])\n        a = a + 1\n        b = b - 2\n        c = c - 2  ", "N, M = list(map(int, input().split()))\n\nfor i in range(1, M + 1):\n    if i % 2 == 1:\n        j = (i - 1) // 2\n        print((1 + j, M + 1 - j))\n    else:\n        j = (i - 2) // 2\n        print((M + 2 + j, 2 * M + 1 - j))\n", "# -*- coding: utf-8 -*-\n\nN,M = list(map(int, input().rstrip().split()))\n#-----\nans = []\ndelta = 0\nvisited = set()\n\n\nfor i in range(M):\n    L = 1+i\n    R = N-i\n    diff = (R - delta) - L\n    \n    if (2*diff == N) or \\\n       (diff in visited) or ((N - diff) in visited):\n       \n        delta = 1\n    \n    ans.append( [L, R - delta] )\n    visited |= {diff , (N - diff)}\n\n\nfor nums in ans:\n    print((*nums))\n", "# \u69cb\u6210\u7cfb\u306e\u554f\u984c\u3060\u3002\u984c\u610f\u304c\u8aad\u307f\u53d6\u308a\u3065\u3089\u3044\u3051\u3069\u3002\n# \u5186\u5468\u4e0a\u306bn\u500b\u306e\u70b9\u3092\u4e26\u3079\u3001k\u672c\u306e\u7dda\u5206\u3092\u7d50\u3076\u3002\n# \u7dda\u5206\u306f\u7aef\u70b9\u3092\u5171\u6709\u3057\u306a\u3044\u3057\u3001\u9577\u3055\uff08\u98db\u3070\u3057\u305f\u70b9\u306e\u500b\u6570\uff09\u304c\u3059\u3079\u3066\u7570\u306a\u308b\u3002\u3088\u3046\u306b\u305b\u3088\u3002\u3068\u3044\u3046\u554f\u984c\n# n\u304c\u5947\u6570\u306e\u5834\u5408\u306f\u7aef\u304b\u3089\u9806\u306b\u7d50\u3079\u3070\u3059\u3079\u3066\u7570\u306a\u308b\u3002\u5076\u6570\u306e\u5834\u5408\u3001\u305d\u308c\u3060\u3068\u540c\u3058\u9577\u3055\u304c\u51fa\u308b\u306e\u3067\u3001\u534a\u5468\u56de\u3063\u305f\u3068\u3053\u308d\u30671\u3064\u305a\u3089\u3059\u3002\n\n# 6 2\u3067\u4e0d\u6b63\u89e3\u3002\u5186\u306e\u76f4\u5f84\u3092\u5f15\u3044\u3066\u306f\u3044\u3051\u306a\u3044\u3093\u3060\u306a\u3002\n\nn, k = list(map(int, input().split()))\n\nif n % 2 == 1:\n    p = 1\n    q = n\n    for i in range(k):\n        print(f'{p} {q}')\n        p += 1\n        q -= 1\n\nelse:\n    p = 1\n    q = n\n    for i in range(k):\n        print(f'{p} {q}')\n        if abs(p-q) == n//2+1 :\n            p += 1\n        p += 1\n        q -= 1\n        if abs(p-q) == n//2 :\n            p += 1\n\n\n", "n,m=map(int,input().split())\nif n%2==1:\n  ab=[]\n  a=n//2\n  b=n//2+1\n  ab.append([str(a),str(b)])\n  for _ in range(m-1):\n    a-=1\n    b+=1\n    ab.append([str(a),str(b)])\n  for a,b in ab:\n    print(a,b)\nelse:\n  l=m\n  ab=[]\n  cnt=0\n  for i in range(m):\n    if i%2==0:\n      a=i//2+1\n      b=a+l\n    else:\n      a=n-(i//2+1)\n      b=a-l\n    ab.append([str(a),str(b)])\n    l-=1\n  for a,b in ab:\n    print(a,b)", "n, m = list(map(int, input().split()))\n\neven = m // 2\nodd = m - even\n\nodd_left = 1\nodd_right = 2 * odd\n\neven_left = odd_right + 1\neven_right = even_left + 2 * even\n\nfor _ in range(odd):\n    print((odd_left, odd_right))\n    odd_left += 1\n    odd_right -= 1\n\nfor _ in range(even):\n    print((even_left, even_right))\n    even_left += 1\n    even_right -= 1\n", "N, M = list(map(int, input().split()))\n\nn = 2*M+1\n# M\u304c\u5947\u6570\u306e\u5834\u5408\nif M%2==1:\n    for i in range(1, M//2+1):\n        print(('{} {}'.format(i,M+1-i)))\n    for i in range(1, (M+1)//2+1):\n        print(('{} {}'.format(M+i,2*M+2-i)))\n# M\u304c\u5076\u6570\u306e\u5834\u5408\nelse:\n    for i in range(1, M//2+1):\n        print(('{} {}'.format(i,M+2-i)))\n    for i in range(1, M//2+1):\n        print(('{} {}'.format(M+i+1,2*M+2-i)))\n    \n", "#import numpy as np\n#import math\n#from decimal import *\n#from numba import njit\n\n#@njit\ndef main():\n    N,M = list(map(int, input().split()))\n    i = 1\n    for m in range(M):\n        if N%2 == 0 and i%2 == 1 and i >= N/2:\n            i += 1\n        print((M-m,M-m+i))\n        i += 2\n    \n\nmain()\n", "N, M = map(int, input().split())\n\nif N % 2 == 1:\n    for a in range(1, M + 1):\n        print(a, N - a + 1)\nelse:\n    for a in range(1, M + 1):\n        if a < -(-M // 2) + 1:\n            print(a, N - a + 1)\n        else:\n            print(a, N - a)", "N,M=list(map(int,input().split()))\nif N%2==0:\n    for i in range(1,(M+1)//2+1):\n        print((i,N-i+1))\n    for i in range(M-(M+1)//2):\n        print((M-i,M+i+2))\nelse:\n    for i in range(1,M+1):\n        print((i,N-i))\n", "n,m = list(map(int,input().split()))\nif(n % 2 == 0):\n    d = n // 2 - 1\n    c = 0\n    i = 1\n    while(d > 0):\n        print((i,i+d))\n        d -= 2\n        i += 1\n        c += 1\n        if(c == m):return\n    d = n // 2 - 2\n    i = n // 2 + 1\n    while(d > 0):\n        print((i,i+d))\n        d -= 2\n        i += 1\n        c += 1\n        if(c == m):return\n\n\nelse:\n    for i in range(m):\n        print((i+1,n-i))\n", "#from collections import deque,defaultdict\nprintn = lambda x: print(x,end='')\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 10**18\nR = 10**9 + 7\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nn,m = inm()\nif n%2==1:\n    for i in range(1,m+1):\n        print('{} {}'.format(i,n-i))\nelif n%4==0:\n    e = min(m+1,n//4)\n    for i in range(1,e):\n        print('{} {}'.format(i,n//2-i))\n    if m>=n//4:\n        for i in range(m-n//4+1):\n            print('{} {}'.format(n-1-i,n//2+i))\nelse:\n    e = min(m+1,n//4+1)\n    for i in range(1,e):\n        print('{} {}'.format(i,n//2-i+1))\n    if m>=n//4+1:\n        for i in range(m-n//4):\n            print('{} {}'.format(n-1-i,n//2+i+1))\n", "N, M = map(int, input().split())\n\nif N % 2 == 1:\n    for i in range(1, M + 1):\n        l = i\n        r = N - i\n        print(l, r)\nelse:\n    flag = False\n    l = 1\n    r = N - 1\n    cnt = 0\n    while cnt < M:\n        if not flag and r - l <= N // 2:\n            r -= 1\n            flag = True\n        print(l, r)\n        l += 1\n        r -= 1\n        cnt += 1", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,m = LI()\n\n    rr = []\n    if n % 2 == 1:\n        t = n // 2 + 1\n        for i in range(1, m+1):\n            rr.append((t-i,t+i))\n    else:\n        t1 = (m+1) // 2\n        t2 = n - m // 2\n        for i in range(t1):\n            rr.append((t1-i,t1+1+i))\n        for i in range(1, m // 2 + 1):\n            rr.append((t2-i, t2+i))\n\n    return JAA(rr, \"\\n\", \" \")\n\nprint(main())\n\n\n\n", "'''\nN\u4eba\u3092\u5186\u5468\u4e0a\u306b\u914d\u7f6e\u3057\u3001M\u672c\u306e\u7dda\u5206\u3067\u7d50\u3076\u3002\n\u3053\u306e\u3068\u304d\u3001\u7dda\u5206\u3092\u56de\u8ee2\u3055\u305b\u3066\u3044\u3063\u3066\u3082\u540c\u3058\u4eba\u306e\u30da\u30a2\u304c\u751f\u307e\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u3001\u4e0a\u304b\u3089\u9806\u306b\u7d50\u3079\u3070\u3088\u3044\u3002\n'''\n\nfrom collections import deque\n\ndef main():\n    N, M = list(map(int, input().split()))\n    if N&1:\n        '''\n        \u30fbN\u304c\u5947\u6570\u306e\u5834\u5408\n        \n        \u4e0a\u304b\u3089\u9806\u306b\u7d50\u3076\u3060\u3051\u3002\n        deque\u306b 1,2,3,...,M*2 \u3092\u7a81\u3063\u8fbc\u3093\u3067\u3001\u4e21\u7aef\u304b\u3089\u53d6\u308a\u51fa\u3057\u3066\u30da\u30a2\u306b\u3059\u308b\u3002\n        '''\n        q = deque(list(range(M*2)))\n        while q:\n            print((q.popleft()+1, q.pop()+1))\n    else:\n        '''\n        [N\u304c\u5076\u6570\u306e\u5834\u5408]\n        \n        \u4e0a\u304b\u3089\u9806\u306b\u7d50\u3076\u3068\u3001\u4e0a\u4e0b\u306e\u7dda\u5bfe\u79f0\u306b\u306a\u308a\u3001\u540c\u3058\u9593\u9694\u306e\u30da\u30a2\u304c\u751f\u307e\u308c\u308b\u305f\u3081NG\u3002\n        \u2192 \u534a\u5206\u4ee5\u964d\u306f\u30011\u3064\u305a\u3089\u3057\u3066\u30da\u30a2\u3092\u4f5c\u3063\u3066\u3044\u304f\n\n        \u7c21\u5358\u306b\u89e3\u6c7a\u3059\u308b\u305f\u3081\u3001\n        \u30fb\u4e0a\u304b\u3089\u9806\u306b\u5947\u6570\u9593\u9694\u30da\u30a2\u3092\u4f5c\u308b\n        \u30fb\u4e0b\u304b\u3089\u9806\u306b\u5076\u6570\u9593\u9694\u30da\u30a2\u3092\u4f5c\u308b\n        \u3053\u306e2\u3064\u304b\u3089\u3001M\u500b\u3092\u9806\u306b\u3001\u4ea4\u4e92\u306b\u53d6\u308a\u51fa\u3059\u3002\n        '''\n        q1 = deque(list(range(N)))\n        q2 = deque(list(range(N-1)))\n        p1 = []\n        while q1:\n            p1.append((q1.popleft()+1, q1.pop()+1))\n        p2 = []\n        while len(q2)>=2:\n            p2.append((q2.popleft()+1, q2.pop()+1))\n        p2.reverse()\n        for _ in range(M):\n            print((*p1.pop()))\n            p1, p2 = p2, p1\n\n\nmain()\n\n", "N,M = map(int, input().split())\n\na = 1\nb = N\nfor i in range(M, 0, -1):\n    if i%2 == M%2:\n        print(a, a+i)\n        a += 1\n    else:\n        print(b, b-i)\n        b -= 1", "n, m = map(int, input().split())\n\nif n%2:\n  for i in range(1, m+1):\n    print(i, n-i)\nelse:\n  for i in range(1, m+1):\n    if 2*i >= n/2:\n      print(i, n-i-1)\n    else:\n      print(i, n-i)", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn, m = [int(i) for i in input().split()]\n\ntmp_l = m + 1\ntmp_r = m - 1\nres = []\n\nwhile tmp_r > 0:\n    res.append([tmp_l + 1, tmp_l + tmp_r + 1])\n    tmp_l += 1\n    tmp_r -= 2\ntmp_l = 0\ntmp_r = m\nwhile tmp_r > 0:\n    res.append([tmp_l + 1, tmp_l + tmp_r + 1])\n    tmp_l += 1\n    tmp_r -= 2\nres = \"\\n\".join([\" \".join([str(i) for i in j]) for j in res])\n\nprint(res)\n", "from collections import deque\n\nn, m = map(int, input().split())\n\nx = deque(range(1, n + 1))\naaa = []\nbbb = []\nflag = True\n\nif n % 2 == 1:\n    for i in range(m):\n        a = x.popleft()\n        aaa.append(a)\n        b = x.pop()\n        bbb.append(b)\n\nelse:\n    for i in range(m):\n        # \uff4e\u304c\u5076\u6570\u306e\u5834\u5408\u306f\u9014\u4e2d\u30671\u500b\u6368\u3066\u308b\n        a = x.popleft()\n        aaa.append(a)\n        b = x.pop()\n        bbb.append(b)\n        if x[-1] - x[0] <= n // 2 and flag:\n            a = x.popleft()\n            flag = False\n\nfor aa, bb in zip(aaa, bbb):\n    print(aa, bb)", "def main():\n    import sys\n    def input(): return sys.stdin.readline().rstrip()\n    n,m = map(int, input().split())\n    r = m//2\n    s = 1\n    e = 2*r+1\n    for _ in range(r):\n        print(s,e)\n        s += 1\n        e -=1\n    \n    s = n-2*(m-r)+1\n    e = n\n    for _ in range(m-r):\n        print(s,e)\n        s += 1\n        e -=1\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n, m = map(int, input().split())\n\ndef dist(a, b):\n    return min(abs(a - b), n - abs(a - b))\n\na, b = n, 1\nS = set()\nfor i in range(m):\n    if 2 * dist(a, b) == n or dist(a, b) in S:\n        a -= 1\n    print(a, b)\n    S.add(dist(a, b))\n    a -= 1\n    b += 1", "import sys\nreadline = sys.stdin.readline\n\nn,m = map(int,readline().split())\n\nl=1\nr=n\nused = set()\nwhile len(used) < m * 2:\n  diff = r - l\n  rdiff = n - diff\n  if diff == rdiff:\n    r -= 1\n    continue\n  if diff in used:\n    r -= 1\n    continue\n  print(l,r)\n  used.add(diff)\n  used.add(rdiff)\n  l += 1\n  r -= 1", "n,m=map(int,input().split())\nlange=[1]*(n+1)\nfor i in range(1,n+1):\n  a=i\n  b=n-a\n  if lange[a]:lange[b]=0\nlanges=[]\nfor i in range(1,n):\n  if lange[i]:\n    if len(langes)%2:langes.append(i)\n    else:langes.append(n-i)\nlanges.sort(reverse=1)\nfor i in range(m):print(i+1,i+1+langes[i])", "N,M=map(int,input().split())\na=M//2\nb=M-a\nc=1\nd=2*a+1\nfor i in range(a):\n  print(c,d)\n  c+=1\n  d-=1\ne=2*a+2\nf=2*M+1\nfor i in range(b):\n  print(e,f)\n  e+=1\n  f-=1", "def getN():\n    return int(input())\ndef getNM():\n    return list(map(int, input().split()))\ndef getList():\n    return list(map(int, input().split()))\ndef getArray(intn):\n    return [int(input()) for i in range(intn)]\ndef input():\n    return sys.stdin.readline().rstrip()\ndef rand_N(ran1, ran2):\n    return random.randint(ran1, ran2)\ndef rand_List(ran1, ran2, rantime):\n    return [random.randint(ran1, ran2) for i in range(rantime)]\ndef rand_ints_nodup(ran1, ran2, rantime):\n  ns = []\n  while len(ns) < rantime:\n    n = random.randint(ran1, ran2)\n    if not n in ns:\n      ns.append(n)\n  return sorted(ns)\n\ndef rand_query(ran1, ran2, rantime):\n  r_query = []\n  while len(r_query) < rantime:\n    n_q = rand_ints_nodup(ran1, ran2, 2)\n    if not n_q in r_query:\n      r_query.append(n_q)\n  return sorted(r_query)\n\nfrom collections import defaultdict, deque, Counter\nfrom decimal import *\nfrom heapq import heapify, heappop, heappush\nimport math\nimport random\nimport string\nfrom copy import deepcopy\nfrom itertools import combinations, permutations, product\nfrom operator import mul, itemgetter\nfrom functools import reduce\nfrom bisect import bisect_left, bisect_right\n\nimport sys\nsys.setrecursionlimit(1000000000)\nmod = 10 ** 9 + 7\n\n#############\n# Main Code #\n#############\n\n# \u5272\u308a\u5f53\u3066\u3092\u4e00\u3064\u6c42\u3081\u308b\n# N\u56deM\u30e9\u30a6\u30f3\u30c9\u3092\u884c\u3046 1\u30e9\u30a6\u30f3\u30c9\u3042\u305f\u308a\u306e\u6700\u5927\u5bfe\u6226\u8005\u6570\u306fN\u4ee5\u4e0b\u306b\u306a\u308b\n\n# \u5bfe\u6226\u8005A, B, C, D...\u306b\u305d\u308c\u305e\u308c\uff11\u3001\uff12\u3001\uff13\u3001\uff14...\u3092\u5272\u308a\u5f53\u3066\u308b\n# \u8a66\u5408\u5f8c\u3001A, B, C, D...\u306e\u6570\u5b57\u306f\uff12\u3001\uff13\u3001\uff14\u3001\uff15...\u306b\u306a\u308b N + 1\u306b\u306a\u3063\u305f\u3089\uff11\u306b\u306a\u308b\n# N, M = 4, 1\u306e\u6642 M1\u306b[1, 2]\u3092\u5272\u308a\u5f53\u3066\u308b\u3068\n#   A B C D\n# 1 1 2 3 4 A vs B\n# 2 2 3 4 1 D vs A\n# 3 3 4 1 2 C vs D\n# 4 4 1 2 3 B vs C \u306a\u306e\u3067ok\n# N\u30e9\u30a6\u30f3\u30c9\u3067\u3061\u3087\u3046\u3069\u4e00\u5468\u3059\u308b\u306e\u3067\u3001M = 1\u306e\u6642\u306f\u4f55\u3092\u5165\u308c\u3066\u3082ok\n\n# N, M = 5, 2\u306e\u6642\n#   A B C D E\n# 1 1 2 3 4 5\n# 2 2 3 4 5 1\n# 3 3 4 5 1 2\n# 4 4 5 1 2 3\n# 5 5 1 2 3 4\n\n# M1\u306b\u306f\u4f55\u3092\u6307\u5b9a\u3057\u3066\u3082\u3044\u3044\uff1f\n# \u5c11\u306a\u304f\u3068\u3082M1\u3068M2\u304c\u540c\u3058\u30d1\u30bf\u30fc\u30f3(i, i+1\u7b49)\u306f\u30c0\u30e1\n# \u5168\u3066\u306eM\u306b\u3064\u3044\u3066\u9055\u3046\u30d1\u30bf\u30fc\u30f3\u3067\u6570\u5b57\u3092\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u304b\n# = \u4efb\u610f\u306eMi(ai, bi), Mj(aj, bj)\u306b\u3064\u3044\u3066 abs(bi - ai) != abs(bj - aj)\nN, M = getNM()\nA = []\nB = []\nif N % 2 != 0:\n    for i in range(M):\n        A.append(i + 1)\n        B.append(N - i)\nelse:\n    for i in range(M):\n        A.append(i + 1)\n        if i <= ((N // 4) - 1):\n            B.append(N - i)\n        else:\n            B.append(N - i - 1) # \u4e00\u3064\u305a\u3089\u3059\nfor i in range(M):\n    print((A[i], B[i]))\n\n\n# \u30b3\u30fc\u30ca\u30fc\u30b1\u30fc\u30b9\u3042\u308a\n# \u524d\u3068\u5f8c\u308d\u304b\u3089\u53d6\u3063\u3066\u3044\u3063\u305f\u306e\u3067\u306f\u30c0\u30e1\u306a\u30b1\u30fc\u30b9\uff1f\n# \u3061\u3087\u3046\u3069rotate\u3057\u305f\u3068\u3053\u308d\n# N, M = 6, 2\n# m1\u306b[1, 6], m2\u306b[3, 4]\u3092\u6307\u5b9a\u3059\u308b\u3068\u30c0\u30d6\u30eb\n#   A B C D E F\n# 1 1 2 3 4 5 6\n# 2 2 3 4 5 [6 1] E, F\n# 3 3 4 5 6 1 2\n# 4 4 5 6 1 2 3\n# 5 5 6 1 2 [3 4] E, F\n# 6 6 1 2 3 4 5\n\n# rotate\u3057\u3066\u3082\u30c0\u30d6\u3089\u306a\u3044\u3088\u3046\u306b\n# m1\u306b[1, 6], m2\u306b[2, 3]\u3092\u6307\u5b9a\u3059\u308b\u3068\n#   A B C D E F\n# 1 1 2 3 4 5 6\n# 2 2 3 4 5 [6 1] E vs F\n# 3 3 4 5 6 1 2\n# 4 4 5 6 1 2 3\n# 5 5 6 1 2 3 4\n# 6 6 1 2 3 4 5\n\n# \u5076\u5947\u3067\u5206\u304b\u308c\u308b\uff1f\n# \u5947\u6570\u306e\u5834\u5408\u306f\u5927\u4e08\u592b\n# m1 \u9593\u306fN - 2(\u5947\u6570), 0\n# m2 \u9593\u306fN - 4(\u5947\u6570), 2\n\n# \u5076\u6570\u306e\u5834\u5408\u306f\u30c0\u30e1\n# \u3046\u307e\u304f\u30ba\u30e9\u3057\u3066\n# m1 \u9593\u306fN - 2(\u5076\u6570), 0\n# m2 \u9593\u306fN - 4(\u5076\u6570), 2\n\n# m1 \u9593\u306fN - 2, 0\n# m2 \u9593\u306fN - 4, 2\n# m3 \u9593\u306fN - 6, 4\n# ...\n# mm-2 \u9593\u306f6, N - 6\n# mm-1 \u9593\u306f4, N - 4\n# mm \u9593\u306f2, N - 2\n# \u95a2\u4fc2\u304c\u3042\u308b\u306e\u306f1\u500b\u76ee\u3068N\u500b\u76ee, 2\u500b\u76ee\u3068N-1\u500b\u76ee...\n# \u5c0f\u3055\u3044\u65b9\u304b\u3089\u534a\u5206\u306b\u3064\u3044\u3066\u306f\uff11\u500b\u305a\u3089\u3059\n", "N, M = map(int, input().split())\n\nif N % 2 == 1:\n    for a in range(1, M + 1):\n        print(a, N - a + 1)\nelse:\n    for a in range(1, M + 1):\n        print(a, N - a + (a <= N // 4))", "N,M = list(map(int, input().split()))\n\nif N%2 == 1:\n  for i in range(1,M+1):\n    print(i, N-i)\nelse:\n  # N=8 M=3 (8,1), (4,6), (7,2)\n  # N=10, M=4 (10,1), (5,7), (9,2), (4,8)\n  for i in range(M):\n    if i%2 == 0:\n      x = i//2\n      print(N-x, 1+x)\n    else:\n      cent = N//2+1\n      x = i//2+1\n      print(cent-x, cent+x)", "def main():\n    n, m = list(map(int, input().split()))\n    ans = []\n    t = [True]*(n+1)\n    l = n//2 - 1\n    for i in range(1, n//2):\n        if l <= 0:\n            break\n        if not t[i] or not t[i+l]:\n            continue\n        ans.append([i, i+l])\n        t[i] = False\n        t[i+l] = False\n        l -= 2\n    if n % 2 == 1:\n        l = n//2\n        for i in range(n//2, n):\n            if l <= 0:\n                break\n            if not t[i] or not t[i+l]:\n                continue\n            ans.append([i, i+l])\n            t[i] = False\n            t[i+l] = False\n            l -= 2\n    else:\n        l = n//2 - 2\n        for i in range(n//2, n):\n            if l <= 0:\n                break\n            if not t[i] or not t[i+l]:\n                continue\n            ans.append([i, i+l])\n            t[i] = False\n            t[i+l] = False\n            l -= 2\n    for i in range(m):\n        print((ans[i][0], ans[i][1]))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\nn, m = list(map(int, input().split()))\nd = m\nr = d + 1\nfor i in range(m):\n    if d <= 0:\n        break\n    a = i + 1\n    b = a + d\n    print((a, b))\n    d -= 2\nd = m - 1\nfor i in range(m):\n    if d <= 0:\n        break\n    a = r + i + 1\n    b = a + d\n    print((a, b))\n    d -= 2\n", "from collections import deque\n\nn, m = map(int, input().split())\n\nx = deque(range(1, n + 1))\naaa = []\nbbb = []\nflag = True\n\nif n % 2 == 1:\n    for i in range(m):\n        a = x.popleft()\n        aaa.append(a)\n        b = x.pop()\n        bbb.append(b)\n\nelse:\n    for i in range(m):\n        # \uff4e\u304c\u5076\u6570\u306e\u5834\u5408\u306f\u9014\u4e2d\u30671\u500b\u6368\u3066\u308b\n        a = x.popleft()\n        aaa.append(a)\n        b = x.pop()\n        bbb.append(b)\n        if x[-1] - x[0] <= n // 2 and flag:\n            a = x.popleft()\n            flag = False\n\nfor aa, bb in zip(aaa, bbb):\n    print(aa, bb)", "#!/usr/bin/env python3\nfrom collections import defaultdict, Counter\nfrom itertools import product, groupby, count, permutations, combinations\nfrom math import pi, sqrt\nfrom collections import deque\nfrom bisect import bisect, bisect_left, bisect_right\nfrom string import ascii_lowercase\nfrom functools import lru_cache\nimport sys\nsys.setrecursionlimit(10000)\nINF = float(\"inf\")\nYES, Yes, yes, NO, No, no = \"YES\", \"Yes\", \"yes\", \"NO\", \"No\", \"no\"\ndy4, dx4 = [0, 1, 0, -1], [1, 0, -1, 0]\ndy8, dx8 = [0, -1, 0, 1, 1, -1, -1, 1], [1, 0, -1, 0, 1, 1, -1, -1]\n\n\ndef inside(y, x, H, W):\n    return 0 <= y < H and 0 <= x < W\n\n\ndef ceil(a, b):\n    return (a + b - 1) // b\n\n\ndef sum_of_arithmetic_progression(s, d, n):\n    return n * (2 * s + (n - 1) * d) // 2\n\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef lcm(a, b):\n    g = gcd(a, b)\n    return a / g * b\n\n\ndef solve(N, M):\n    ans = []\n    now = 0\n    for d in range(M, 0, -2):\n        ans.append((now, now + d))\n        now += 1\n\n    now = M + 1\n    for d in range(M - 1, 0, -2):\n        ans.append((now, (now + d) % N))\n        now += 1\n\n    return ans\n\n\ndef main():\n    N, M = list(map(int, input().split()))\n    ans = solve(N, M)\n    for x in ans:\n        print(f\"{x[0] + 1} {x[1] + 1}\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, m = list(map(int, input().split()))\nif m == 1:\n    print((1, 2))\n    return\nl1 = 1\nl2 = m + 2\nf = True\nfor length in range(m, 0, -1):\n    if f:\n        print((l1, l1 + length))\n        l1 += 1\n        f = not f\n    else:\n        print((l2, l2 + length))\n        l2 += 1\n        f = not f\n", "N, M = map(int, input().split())\nif N%2:\n    for i in range(M):\n        print(i+1, N-i)\nelif N%4:\n    for i in range(M):\n        if i < N//4:\n            print(i+1, N-i-1)\n        else:\n            print(i+1, N-i-2)\nelse:\n    for i in range(M):\n        if i < N//4-1:\n            print(i+1, N-i-1)\n        else:\n            print(i+1, N-i-2)", "N,M=map(int,input().split())\nsets=[]\nif N%2==1:\n    for i in range(M):\n        sets.append((i+1,i+1+(N-3-2*i)+1))\nelif N%2==0:\n    count=0\n    kukan=[]\n    for i in range(N//2-1):\n        kukan.append(count)\n        count+=2\n        if count==N//2 or count==N//2-1:\n            count+=1\n    kukan.reverse()\n    for i in range(M):\n        sets.append((i+1,i+1+kukan[i]+1))\nfor set1 in sets:\n    print(set1[0],set1[1])", "def main():\n    import sys\n    input = sys.stdin.readline\n\n    n, m = map(int, input().split())\n    l = 1\n    r = n\n    if n % 2 == 1:\n        for i in range(m):\n            print(f\"{l} {r}\")\n            l += 1\n            r -= 1\n    else:\n        flag = True\n        for i in range(m):\n            if flag and r - l <= n // 2:\n                r -= 1\n                flag = False\n            print(f\"{l} {r}\")\n            l += 1\n            r -= 1\n\n\nmain()", "n,m=list(map(int,input().split()))\n\noddflag=True\nfor i in range(1,m+1):\n\tmid=(1+n)//2\n\tif oddflag:\n\t\toddflag = False\n\t\tprint((i//2 + 1 , n - i//2))\n\telse:\n\t\toddflag = True\n\t\tprint((mid + i//2, mid - i//2))\n", "# \u89e3\u8aac\u3092\u53c2\u8003\u306b\u4f5c\u6210\n\n\ndef solve():\n    N, M = list(map(int, input().split()))\n\n    m = 0\n    # \u5947\u6570\u306e\u98db\u3073\n    oddN = M\n    oddN += (oddN + 1) % 2\n    for i in range(oddN // 2):\n        print((i + 1, oddN - i))\n        m += 1\n        if m == M:\n            return\n    # \u5076\u6570\u306e\u98db\u3073\n    for i in range(M):\n        print((oddN + i + 1, M * 2 + 1 - i))\n        m += 1\n        if m == M:\n            return\n\n\ndef __starting_point():\n    solve()\n\n__starting_point()", "N,M=map(int, input().split())\nD=[]\nE=[]\nif M%2==0:\n  if N%2==0:\n    N-=1\n  a=(N+1)//2\n  for i in range(a//2):\n    D.append((i+1,a-i))\n  for d,e in D:\n    E.append((d+a,e+a-1))\nelse:\n  if N%2==0:\n    N-=1\n  a=N//2\n  for i in range(a//2):\n    D.append((i+1,a-i))\n  for d,e in D:\n    E.append((d+a+1,e+a))\n  E.append((a+1,N))\nF=D+E\nfor i in range(M):\n  print(*F[i])"]