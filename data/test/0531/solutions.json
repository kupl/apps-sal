["n=int(input())\na=list(map(int,input().split()))\nmm=max(a)\nmmm=min(a)\nif mmm!=mm-2:\n    print(n)\n    print(*a)\nelse:\n    q,w,e=0,0,0\n    for i in a:\n        if i==mm:\n            e+=1\n        elif i==mmm:\n            q+=1\n        else:\n            w+=1\n    y=w%2+q+e\n    p=max(q,e)-min(q,e)\n    u=p+w\n    if y<u:\n        print(y)\n        print(*([mm]*(e+w//2)+[mmm]*(q+w//2)+[mm-1]*(w%2)))\n    else:\n        print(u)\n        if q>e:\n            print(*([mmm]*p+(n-p)*[mmm+1]))\n        else:\n            print(*([mm]*p+(n-p)*[mm-1]))\n", "n = int(input())\na = list(map(int, input().split()))\na_min = min(a)\na_max = max(a)\nif a_max - a_min < 2:\n    print('{}\\n'.format(n), ' '.join(map(str, a)), sep = '')\n    quit()\na = sorted(list(map(lambda x: x - a_min, a)))\nt = [0 for i in range(3)]\nfor i in a:\n    t[i] += 1\nc1 = t[1] - t[1] % 2\n\nc2 = min(t[0], t[2]) * 2\n\nprint('{}'.format(n - max(c1, c2)))\nif c1 > c2:\n    print('{} '.format(a_min) * (t[0] + t[1] // 2), '{} '.format(a_max) * (t[2] + t[1] // 2), '{} '.format(a_min + 1) * (t[1] % 2), sep = '')\nelse:\n    print('{} '.format(a_min) * (t[0] - c2 // 2), '{} '.format(a_max) * (t[2] - c2 // 2), '{} '.format(a_min + 1) * (t[1] + c2), sep = '')\n        ", "n = int(input())\narr = list(map(int, input().split()))\nmn = min(arr)\nmx = max(arr)\nif mn == mx:\n    print(n)\n    print(*arr)\nelif mn + 1 == mx:\n    print(n)\n    print(*arr)\nelse:\n    a = 0\n    b = 0\n    c = 0\n    for i in range(n):\n        if arr[i] == mn:\n            a += 1\n        elif arr[i] == mx:\n            c += 1\n        else:\n            b += 1\n    a1 = a + b // 2\n    c1 = c + b // 2\n    b1 = b % 2\n    s1 = min(a1, a) + min(b1, b) + min(c1, c)\n    b2 = b + min(a, c) * 2\n    q = min(a, c)\n    a2 = a - q\n    c2 = c - q\n    s2 = min(a2, a) + min(b2, b) + min(c2, c)\n    if s1 < s2:\n        print(s1)\n        ans = [mn] * a1 + [mn + 1] * b1 + [mx] * c1\n        print(*ans)\n    else:\n        print(s2)\n        ans = [mn] * a2 + [mn + 1] * b2 + [mx] * c2\n        print(*ans)\n\n\n", "n = int(input())\n\nX = list(map(int, input().split()))\n\n_min = min(X)\n\n_max = max(X)\n\nif _max < _min + 2:\n\n  print(n)\n\n  print(*X)\n\nelse:\n\n  A = X.count(_min)\n\n  B = X.count(_min + 1)\n\n  C = X.count(_min + 2)\n\n  best = n\n\n  best_D = -1\n\n  for D in range(- (B // 2), min(A, C) + 1):\n\n    curr = min(A - D, A) + min(B, B + 2 * D) + min(C, C - D)\n\n    if curr < best:\n\n      best_D = D \n      best = curr\n\n  print(best)\n\n  print(*([_min for _ in range(A - best_D)] + [_min + 1 for _ in range(B + 2 * best_D)] + [_min + 2 for _ in range(C - best_D)]))\n", "n = int(input())\nx = list(map(int, input().split()))\nmn = 0\nmx = 0\nminv = min(x)\nmaxv = max(x)\nfor i in x:\n    if i == minv:\n        mn += 1\n    elif i == maxv:\n        mx += 1\nif minv != maxv-2:\n    print(n)\n    for i in x:\n        print(i, end=' ')\nelse:\n    c = min(mn, mx)\n    print(min((n - 2*c), (mn + mx + (n-mn-mx)%2))) \n    if (n - 2*c) < (mn + mx + (n-mn-mx)%2):\n        for i in range(len(x)):\n            if (x[i]==maxv) and (c > 0):\n                x[i] = (maxv + minv)//2\n                c -= 1\n        c = min(mn, mx)\n        for i in range(len(x)):\n            if (x[i]==minv) and (c>0):\n                x[i] = (maxv + minv)//2\n                c -= 1\n        for i in x:\n            print(i, end=' ')\n    else:\n        c = (n - mn - mx)//2\n        for i in range(len(x)):\n            if (x[i] == (minv+maxv)//2) and (c>0):\n                c -= 1\n                x[i] = minv\n        c = (n - mn - mx)//2\n        for i in range(len(x)):\n            if (x[i] == (minv+maxv)//2) and (c>0):\n                c -= 1\n                x[i] = maxv    \n        for i in x:\n            print(i, end=' ')\n", "from collections import Counter\n\nn = int(input())\nizms = Counter(list(map(int, input().split())))\n\n\nmax_val = max(izms)\nmin_val = min(izms)\nmax_cnt = izms[max_val]\nmin_cnt = izms[min_val]\nmed_cnt = n - max_cnt - min_cnt\nres  = n\n\n# print(' '.join(' '.join([str(iz)]*izms[iz]) for iz in izms), izms)\n\nif max(izms) - min(izms)  == 2:\n    med_val = max(izms) - 1\n    krainie = min(max_cnt, min_cnt)\n    if krainie>med_cnt//2:\n        res -= 2*krainie\n        izms[max_val] -= krainie\n        izms[min_val] -= krainie\n        izms[med_val] += krainie*2\n    else:\n        srednie = 2 * (med_cnt //2)\n        res -= srednie\n        izms[med_val] -= srednie\n        izms[max_val] += (med_cnt //2)\n        izms[min_val] += (med_cnt //2)\n\n\nprint(res)\na = [' '.join([str(iz)]*izms[iz]) for iz in izms]\nprint(' '.join(k for k in a if len(k)>0))\n\n", "import itertools\nfrom collections import Counter\n\ndef from_edges(a, b, c):\n    m = min(a, c)\n    ap = a - m\n    bp = 2 * m + b\n    cp = c - m\n    return ap, bp, cp\n\ndef to_edges(a, b, c):\n    h = b // 2\n    ap = a + h\n    bp = b - 2 * h\n    cp = c + h\n    return ap, bp, cp\n\ndef score(a, b, c, ap, bp, cp):\n    return min(a, ap) + min(b, bp) + min(c, cp)\n\ndef gen_ans(s, ap, bp, cp):\n    return itertools.chain(\n        itertools.repeat(s - 1, ap),\n        itertools.repeat(s, bp),\n        itertools.repeat(s + 1, cp)\n    )\n\nn = int(input())\ninp = input()\ncnt = Counter(int(v) for v in inp.split())\nitems = sorted(cnt.items())\n\nif len(items) == 1:\n    print(n)\n    print(inp)\n    return\nelif len(items) == 2:\n    if items[1][0] - items[0][0] == 1:\n        print(n)\n        print(inp)\n        return\n    else:\n        # diff is 2\n        a, b, c = items[0][1], 0, items[1][1]\n        s = items[0][0] + 1\n        ap, bp, cp = from_edges(a, b, c)\n        print(score(a, b, c, ap, bp, cp))\n        print(' '.join(str(v) for v in gen_ans(s, ap, bp, cp)))\nelse:\n    a, b, c = [p[1] for p in items]\n    s = items[1][0]\n    ap1, bp1, cp1 = from_edges(a, b, c)\n    ap2, bp2, cp2 = to_edges(a, b, c)\n    score1 = score(a, b, c, ap1, bp1, cp1)\n    score2 = score(a, b, c, ap2, bp2, cp2)\n    if score1 <= score2:\n        ap, bp, cp, score = ap1, bp1, cp1, score1\n    else:\n        ap, bp, cp, score = ap2, bp2, cp2, score2\n    print(score)\n    print(' '.join(str(v) for v in gen_ans(s, ap, bp, cp)))\n", "R = lambda : map(int, input().split())\nn = int(input())\nv = list(R())\nmn = min(v); mx = max(v);\nfrom collections import Counter\nc = Counter(v)\n\nif mn==mx or mn==mx-1:\n    print(len(v)); print(\" \".join(map(str,v))); return;\n\nif mn==mx-2 and len(c)==2:\n    c[mn+1]=0\n\nk = sorted(list(c.keys()))\nck0 = c[k[0]]; ck1 = c[k[1]]; ck2 = c[k[2]];\nif (2*min(ck0,ck2)<=2*(ck1//2)):\n    i = [i for i in range(len(v)) if v[i]==k[1]]\n    for j in range(ck1//2):\n        v[i[2*j]],v[i[2*j+1]] = v[i[2*j]]-1,v[i[2*j+1]]+1\n    print(len(v)-2*(ck1//2))\n    print(\" \".join(map(str,v)))\nelse:\n    mni = [i for i in range(len(v)) if v[i]==mn]\n    mxi = [i for i in range(len(v)) if v[i]==mx]\n    for i in range(min(ck0,ck2)):\n        v[mni[i]],v[mxi[i]]=v[mni[i]]+1,v[mxi[i]]-1\n    print(len(v)-2*(min(ck0,ck2)))\n    print(\" \".join(map(str,v)))", "# vars: c1, c2, c3, ins, max_val, mid_val, min_val, n, res, res2, t1, t2, t3, x\nfrom collections import Counter\nn = int(input())\nins = input()\nx = Counter(list(map(int, ins.split())))\nmax_val = max(x.keys())\nmin_val = min(x.keys())\nif max_val - min_val < 2:\n\tprint(n)\n\tprint(ins)\nelse:\n\tmid_val = (min_val+max_val)//2\n\tc1, c2, c3 = x[min_val], x[mid_val], x[max_val]\n\tt1, t2 = c2 // 2, c2 % 2\n\tt3 = min(c1, c3)\n\tres = min((c1+t2+c3, (c1+t1, t2, c3+t1)), (c1+c2+c3-t3*2, (c1-t3, c2+t3*2, c3-t3)))\n\tprint(res[0])\n\tres2 = []\n\tfor k, v in zip((min_val, mid_val, max_val), res[1]):\n\t\tres2.extend([k]*v)\n\tprint(*res2)\n#\tres = min((c1+t1, t2, c3+t1), (c1-t3, c2+t3*2, c3-t3))\n#\tres1 = 0\n#\tfor vs in zip((c1, c2, c3), res):\n#\t\tres1 += min(vs)\n#\tprint(res1)\n#\tres2 = []\n#\tfor k, v in zip((min_val, mid_val, max_val), res):\n#\t\tres2.extend([k]*v)\n#\tprint(*res2)\n", "n = int(input())\narr = list(map(int, input().split()))\nmina = min(arr)\nmaxa = max(arr)\nif maxa - mina < 2:\n    print(n)\n    print(*arr)\n    return\na, b, c = 0, 0, 0\nfor i in arr:\n    if i == mina:\n        a += 1\n    elif i == maxa:\n        c += 1\n    else:\n        b += 1\nm = max(2 * min(a, c), b // 2 * 2)\nif 2 * min(a, c) > b:\n    b += 2 * min(a, c)\n    a, c = a - min(a, c), c - min(a, c)\nelse:\n    a += b // 2\n    c += b // 2\n    b = b % 2\nans = ((str(mina) + \" \") * a) + ((str(mina + 1) + \" \") * b) + ((str(mina + 2) + \" \") * c)\nprint(n - m)\nprint(ans[:-1])", "#!/usr/bin/env python3\n\nimport sys\n\nn = int(sys.stdin.readline().strip())\nxis = list(map(int, sys.stdin.readline().strip().split()))\n\n\nxmin = min(xis)\nxmax = max(xis)\nif xmax - xmin != 2:\n\tprint (n)\n\tprint(' '.join(map(str, xis)))\n\treturn\n\nxm = (xmin + xmax) // 2\n\na = xis.count(xmin)\nb = xis.count(xm)\nc = xis.count(xmax)\n\nedg = min(a, c)\nmid = b // 2\nif edg > mid:\n\tk = -edg\nelse:\n\tk = mid\ntarget = a + b + c - 2 * abs(k)\nA = a + k\nB = b - 2 * k\nC = c + k\nyis = ([xmin] * A) + ([xm] * B) + ([xmax] * C)\n\nprint (target)\nprint(' '.join(map(str, yis)))\n", "n=int(input())\nx=input().split()\nx=[int(k) for k in x]\n\nrem=[]\nx.sort()\n\nmn = x[0]\nmx = x[-1]\n\nif (mx-mn<=1):\n\tprint(len(x))\n\tfor k in x:\n\t\tprint(k, end=' ')\n\tprint()\nelse:\n\tavg=mn+1\n\texpsum = avg*len(x)\n\tsm=0\n\tcountmn=0\n\tcountavg=0\n\tcountmx=0\n\tfor k in x:\n\t\tsm+=k\n\tif (sm-expsum)>0:\n\t\trem=x[len(x)-(sm-expsum):len(x)]\n\t\tx=x[0:len(x)-(sm-expsum)]\n\tif (sm-expsum)<0:\n\t\trem=x[0:(expsum-sm)]\n\t\tx=x[(expsum-sm):len(x)]\n\tif len(x)%2==1:\n\t\trem.append(avg)\n\t\tfor i in range(len(x)):\n\t\t\tif (x[i]==avg):\n\t\t\t\tx=x[0:i]+x[i+1:len(x)]\n\t\t\t\tbreak\n\tfor k in x:\n\t\tif k==mn:\n\t\t\tcountmn+=1\n\t\tif k==avg:\n\t\t\tcountavg+=1\n\t\tif k==mx:\n\t\t\tcountmx+=1\n\tif countmn+countmx<countavg:\n\t\tprint(countmn+countmx+len(rem))\n\t\tfor i in range(int(len(x)/2)):\n\t\t\trem.append(mn)\n\t\t\trem.append(mx)\n\telse:\n\t\tprint(countavg+len(rem))\n\t\tfor i in range(len(x)):\n\t\t\trem.append(avg)\n\tfor k in rem:\n\t\tprint(k, end=' ')\n\tprint()", "n = int(input())\nmeas = [int(x) for x in input().split()]\n\nmax_m = int(max(meas))\nmin_m = int(min(meas))\nmid_m = min_m + 1\nnormalized_meas = [x - min_m for x in meas]\n\nc0 = normalized_meas.count(0)\nc2 = normalized_meas.count(2)\nc02_pairs = min(c0, c2)\nc1 = normalized_meas.count(1)\nc1_pairs = c1 // 2\n\nif max_m - min_m < 2:\n   print(n)\nelif c1_pairs >= c02_pairs:\n   print(n - c1 + c1 % 2)\n   meas = list(filter(lambda x: x != mid_m, meas))\n   meas += [min_m, max_m] * c1_pairs + [mid_m] * (c1 % 2)\nelse:\n   print(n - 2 * c02_pairs)\n   meas = list(filter(lambda x: x == mid_m, meas))\n   meas += [min_m] * (c0 - c02_pairs) + [max_m] * (c2 - c02_pairs) + [mid_m] * 2 * c02_pairs\n\n\nprint(*meas)", "n=int(input())\nx=list(map(int,input().split(' ')))\nx.sort()\na=x.count(x[0])\nb=x.count(x[0]+1)\nc=x.count(x[0]+2)\nif (x[-1]-x[0])<2:\n    print(n)\n    for j in range(0,n):\n        print(x[j],end=\" \")\nelse:\n    if (b-b%2)<=min(a,c)*2:\n        print(n-min(a,c)*2)\n        y=(b+min(a,c)*2)*[x[0]+1]+(a-min(a,c))*[x[0]]+(c-min(a,c))*[x[0]+2]\n        for j in range(0,n):\n            print(y[j],end=\" \")\n    else:\n        print(n-b+b%2)\n        y=(b%2)*[x[0]+1]+(a+b//2)*[x[0]]+(c+b//2)*[x[0]+2]\n        for j in range(0,n):\n            print(y[j],end=\" \")\n        ", "n = int(input());\nA = list(map(int, input().split()));\ninf = 1000000000000;\ninf = 1000000000000;\nmax1 = -inf;\nmax2 = -inf;\nmax3 = -inf;\nmax1c = 0;\nmax2c = 0;\nmax3c = 0;\nfor q in range(n):\n    if A[q] > max1:\n        max3 = max2;\n        max2 = max1;\n        max1 = A[q];\n    elif A[q] > max2 and A[q] < max1:\n        max3 = max2;\n        max2 = A[q];\n    elif A[q] > max3 and A[q] < max1 and A[q] < max2:\n        max3 = A[q];\nif max2 == max1 - 2:\n    max3 = max2;\n    max2 = -inf;\n#print(max1, max2, max3);\nfor q in range(n):\n    a = A[q];\n    if a == max1:\n        max1c += 1;\n    elif a == max2:\n        max2c += 1;\n    else:\n        max3c += 1;\n#print(max1c, max2c, max3c);\nif max3 != -inf:\n    izm1 = min(max1c, max3c) * 2;\n    izm2 = max2c // 2 * 2;\n    if izm1 > izm2:\n        cnt = 0;\n        q = 0;\n        while cnt < izm1 // 2:\n            if A[q] == max1:\n                A[q] -= 1;\n                cnt += 1;\n            q += 1;\n        cnt = 0;\n        q = 0\n        while cnt < izm1 // 2:\n            if A[q] == max3:\n                A[q] += 1;\n                cnt += 1;\n            q+= 1;\n        #print(n - izm1);\n        #print(*A);\n    else:\n        #print(izm2);\n        cnt = 0;\n        q = 0;\n        while cnt < izm2 // 2:\n            #print(cnt);\n            if A[q] == max2:\n                A[q] -= 1;\n                cnt += 1;\n            q += 1;\n        #q += 1;\n        while cnt < izm2:\n            if A[q] == max2:\n                A[q] += 1;\n                cnt += 1;\n            q += 1;\n    print(n - max(izm1, izm2));\n    print(*A);\nelse:\n    print(n);\n    print(*A);", "n = int(input())\nar = list(map(int, input().split()))\n\nmn = min(ar)\nmx = max(ar)\nif mx - mn < 2:\n    print(n)\n    print(' '.join([str(i) for i in ar]))\n    return\na=0\nb=0\nc =0\nfor i in ar:\n    if i == mn:\n        a +=1\n    elif i == mx:\n        c +=1\n    else:\n        b+=1\ncans1 = b - (b%2)\ncans2 = 2*min(a,c)\nif cans1 > cans2:\n    ans = []\n    for i in range(a):\n        ans.append(mn)\n    for i in range(c):\n        ans.append(mx)\n    for i in range(b//2):\n        ans.append(mn)\n        ans.append(mx)\n    if len(ans) < n:\n        ans.append(mn+1)\n    print(n-cans1)\n    print(' '.join([str(i) for i in ans]))\nelse:\n    ans = []\n    if c > a:\n        ans = [mx for i in range(c-a)]\n        while len(ans) < n:\n            ans.append(mn+1)\n    else:\n        ans = [mn for i in range(a-c)]\n        while len(ans) < n:\n            ans.append(mn+1)\n    print(n-cans2)\n    print(' '.join([str(i) for i in ans]))", "\nn = int(input())\na = list(map(int,input().split()))\nm = min(a)\na = list(map(lambda x: x-m, a))\nif max(a)==1:\n\tprint (n)\n\tfor i in a:\n\t\tprint (i+m, end = ' ')\nelse:\n\tc0,c1,c2 = [0,0,0]\n\tfor i in a:\n\t\tif i==0:\n\t\t\tc0+=1\n\t\telif i==1:\n\t\t\tc1+=1\n\t\telse:\n\t\t\tc2+=1\n\tac0,ac1,ac2 = c0,c1,c2\n\tbc0,bc1,bc2 = c0,c1,c2\n\t\n\t# MAKE THE 2s as 1s and remove 0s\n\tt1 = min(ac0,ac2)\n\tac1+=2*t1\n\tac2-=t1\n\tac0-=t1\n\n\t# COMBINE 1s to form 2s\n\tt2 = bc1-bc1%2\n\tbc2+=t2//2\n\tbc0+=t2//2\n\tbc1-=t2\n\n\tif min(ac1,c1)+min(ac2,c2)+min(ac0,c0) < min(bc1,c1)+min(bc2,c2)+min(bc0,c0):\n\t\tprint (min(ac1,c1)+min(ac2,c2)+min(ac0,c0))\n\t\tout = ''\n\t\tfor i in range(ac0):\n\t\t\tout += '0 '\n\t\tfor i in range(ac1):\n\t\t\tout += '1 '\n\t\tfor i in range(ac2):\n\t\t\tout += '2 '\n\t\tfor i in out.split():\n\t\t\tprint (int(i)+m, end = ' ')\n\telse:\n\t\tprint (min(bc1,c1)+min(bc2,c2)+min(bc0,c0))\n\t\tout = ''\n\t\tfor i in range(bc0):\n\t\t\tout += '0 '\n\t\tfor i in range(bc1):\n\t\t\tout += '1 '\n\t\tfor i in range(bc2):\n\t\t\tout += '2 '\n\t\tfor i in out.split():\n\t\t\tprint (int(i)+m, end = ' ')", "n = int(input())\nx = n*[0]\ns = input().split()\nfor i in range(n):\n    x[i] = int(s[i])\nm = min(x)\nM = max(x)\n\nif (M-m < 2):\n    print(n)\n    for e in x:\n        print(e, end=\" \")\nelse:\n    m_num = 0\n    M_num = 0\n    for e in x:\n        if e==m:\n            m_num += 1\n        elif e==M:\n            M_num += 1\n    mid_num = n-m_num-M_num\n\n    candidate_min1 = 0\n    if mid_num%2 == 0:\n        candidate_min1 = m_num+M_num\n    else:\n        candidate_min1 = m_num+M_num+1\n\n    candidate_min2 = mid_num+abs(m_num-M_num)\n\n    if candidate_min1 <= candidate_min2:\n        print(candidate_min1)\n        if mid_num%2 == 0:\n            for i in range(int(m_num+mid_num/2)):\n                print(m, end=\" \")\n            for i in range(int(M_num+mid_num/2)):\n                print(M, end=\" \")\n        else:\n            for i in range(int(m_num+(mid_num-1)/2)):\n                print(m, end=\" \")\n            print(m+1, end=\" \")\n            for i in range(int(M_num+(mid_num-1)/2)):\n                print(M, end=\" \")\n\n    else:\n        print(candidate_min2)\n        if M_num-m_num >= 0:\n            for i in range(M_num-m_num):\n                print (M, end=\" \")\n            for i in range(n-(M_num-m_num)):\n                print (M-1, end=\" \")\n            \n        elif M_num-m_num < 0:\n            for i in range(m_num-M_num):\n                print (m, end=\" \")\n            for i in range(n-(m_num-M_num)):\n                print (m+1, end=\" \")\n\n\n    \n\n", "import math\n\nn = int(input())\nxs = [int(s) for s in input().split()]\n\nmax_x = -math.inf\nmin_x = +math.inf\nfor x in xs:\n    max_x = max(max_x, x)\n    min_x = min(min_x, x)\n\nif max_x <= min_x + 1:\n    print(n)\n    print(' '.join(str(x) for x in xs))\nelse:\n    max_count = sum(x == max_x for x in xs)\n    min_count = sum(x == min_x for x in xs)\n    middle_count = n - max_count - min_count\n    solution = (\n        [max_x] * (max_count - min_count) +\n        [min_x] * (min_count - max_count)\n    )\n    equal = len(solution)\n    if middle_count <= (n - len(solution)) / 2:\n        equal += middle_count\n        solution += [max_x - 1] * (n - len(solution))\n    else:\n        equal += (n - len(solution)) - middle_count\n        solution += [max_x, min_x] * ((n - len(solution)) // 2)\n        if len(solution) != n:\n            solution += [max_x - 1]\n            equal += 1\n    print(equal)\n    print(' '.join(str(x) for x in solution))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nsr = sum(a) / n\nx = []\nmin1 = min(a)\nmax1 = max(a)\ntarg = False\nif min1 + 2 != max1:\n    print(n)\n    print(*a)\n    min1 = int(sr) - 1\n    max1 = int(sr) + 1\nelse:\n    sred = (min1 + max1) // 2\n    i = 0\n    k = 0\n    u = [0, 0, 0]\n    for j in a:\n        if j == min1:\n            u[0] += 1\n        elif j == max1:\n            u[1] += 1\n        else:\n            u[2] += 1\n    if (min(u[0], u[1]) * 2 > u[2]):\n        while min1 == a[k] and max1 == a[-1-k]:\n            x += [sred, sred]\n            a[k] = -200001\n            a[-1-k] = -200001\n            i += 2\n            k += 1\n        print(n - i)\n        for j in a:\n            if j != -200001:\n                x += [j]\n        print(*x)\n    else:\n        k = u[2] - u[2] % 2\n        while u[2] > 1:\n            u[2] -= 2\n            x += [min1, max1]\n        if u[2] > 0:\n            x += [sred]\n        print(n - k)\n        for i in range(u[0]):\n            x += [min1]\n        for i in range(u[1]):\n            x += [max1]\n        print(*x)", "n = int(input())\nxi = list(map(int,input().split()))\n\nmaxi = max(xi)\nmini = min(xi)\nmid = mini + (maxi - mini) // 2\n\nif 2 > maxi - mini:\n    print(n)\n    for i in xi:\n        print(i,end=\" \")\nelse:\n    temp = 0\n    temp2 = 0\n    temp3 = 0\n    for i in xi:\n        if i == mini:\n            temp += 1\n        elif i == mid:\n            temp2 += 1\n        else:\n            temp3 += 1\n    temp4 = maxi\n    temp5 = temp3-temp\n    if temp > temp3:\n        temp4 = mini\n        temp5 = temp - temp3\n        temp = temp3\n    temp6 = temp2\n    temp2 //= 2\n    if temp > temp2:\n        temp *= 2\n        print(n - temp)\n        for i in range(temp5):\n            print(temp4,end=\" \")\n        for i in range(n-temp5):\n            print(mid,end=\" \")\n            \n    else:\n        print(n - temp2 * 2)\n        for i in range(temp6 % 2):\n            print(mid,end=\" \")\n        for i in range(temp2 + temp):\n            print(mini,maxi,end=\" \")\n        for i in range(temp5):\n            print(temp4,end=\" \")\n", "n = int(input())\nl = list(map(int, input().split(' ')))\ns = sum(l) // len(l)\nmn, mx = min(l), max(l)\nif mx - mn <= 1:\n    print(n)\n    for i in l:\n        print(i, end=' ')\nelse:\n    a, b, c = l.count(mn), l.count(mn + 1), l.count(mx)\n    a1, b1, c1 = a - min(a, c), b + 2 * min(a, c), c - min(a, c)\n    a2, b2, c2 = a + b // 2, b % 2, c + b // 2\n    diff1 = min(a, a1) + min(b, b1) + min(c, c1)\n    diff2 = min(a, a2) + min(b, b2) + min(c, c2)\n    if diff1 <= diff2:\n        print(diff1)\n        s = (str(mn) + ' ') * a1 + (str(mn + 1) + ' ') * b1 + (str(mx) + ' ') * c1\n        s = s[:-1]\n        print(s)\n    else:\n        print(diff2)\n        s = (str(mn) + ' ') * a2 + (str(mn + 1) + ' ') * b2 + (str(mx) + ' ') * c2\n        s = s[:-1]\n        print(s)", "n=int(input().strip())\nl=[int(x) for x in input().strip().split()]\nif len(set(l))==1:\n  print(n)\n  print(*l)\n  return\nl.sort()\nf=[0]*3\ns=list(set(l))\ns.sort()\nif len(s)==2 and s[1]-s[0]==1:\n    print(n)\n    print(*l)\n    return\nif len(s)==2:\n    s.append(s[-1])\n    s[1]=(s[0]+1)\nfor i in range(3):\n    f[i]=l.count(s[i])\nif f[1]>(min(f[0],f[2])*2):\n    ans=f[1] - f[1]%2 \n    ans=n-ans\n    flag=0\n    if f[1]%2==1:\n        flag=1 \n    f[0]+=(f[1]//2)\n    f[2]+=(f[1]//2)\n    f[1]=flag\n    print(ans)\n    for i in range(3):\n        print((str(s[i])+\" \")*f[i],end=\"\")\nelse:    \n    ans=f[1]+max(f[0],f[2])-min(f[0],f[2])\n    f[1]+=(min(f[0],f[2])*2)\n    f[0],f[2]=f[0]-min(f[0],f[2]),f[2]-min(f[0],f[2])\n    print(ans)\n    for i in range(3):\n        print((str(s[i])+\" \")*f[i],end=\"\")\n    print(\"\")", "n = int(input())\n\nxraw = input()\nxs = [int(x) for x in xraw.split()]\n\nxs_set = set(xs)\nmi = min(xs_set)\nma = max(xs_set)\n\nif ma - mi < 2:\n    print(n)\n    print(xraw)\nelse:\n    m = mi + 1\n    mi_c = xs.count(mi)\n    ma_c = xs.count(ma)\n    m_c = n - mi_c - ma_c\n    res = n\n    if (m_c // 2) > min(ma_c, mi_c):\n        res = ma_c + mi_c + m_c % 2\n        mi_c += m_c // 2\n        ma_c += m_c // 2\n        m_c = m_c % 2\n    elif mi_c == ma_c:\n        res = m_c\n        mi_c = 0\n        ma_c = 0\n        m_c = n\n    elif mi_c < ma_c:\n        res = m_c + abs(mi_c - ma_c)\n        m_c += mi_c * 2\n        ma_c -= mi_c\n        mi_c = 0\n    else:\n        res = m_c + abs(mi_c - ma_c)\n        m_c += ma_c * 2\n        mi_c -= ma_c\n        ma_c = 0\n\n    print(res)\n    if m_c > 0:\n        print(\" \".join([str(m)] * m_c), end=\" \")\n    if mi_c > 0:\n        print(\" \".join([str(mi)] * mi_c), end=\" \")\n    if ma_c > 0:\n        print(\" \".join([str(ma)] * ma_c), end=\" \")\n\n", "n = int(input())\nx = list(map(int, input().split()))\n\nln = len(set(x))\n\nif ln <= 2 and max(x) - min(x) <= 1:\n    print(n)\n    print(' '.join(map(str, x)))\n\nelse:\n    abc = sorted(set(x))\n\n    if len(abc) == 2:\n        abc.insert(1, (abc[0] + abc[1]) // 2)\n\n    co = [x.count(el) for el in abc]\n\n    ans = n\n    a, b, c = co\n    ans_co = [a, b, c]\n\n    while b >= 2:\n        b -= 2\n        a += 1\n        c += 1\n\n        s = min(a, co[0]) + min(b, co[1]) + min(c, co[2])\n        if s < ans:\n            ans = s\n            ans_co = [a, b, c]\n\n    a, b, c = co\n\n    while min(a, c) > 0:\n        a -= 1\n        c -= 1\n        b += 2\n\n        s = min(a, co[0]) + min(b, co[1]) + min(c, co[2])\n        if s < ans:\n            ans = s\n            ans_co = [a, b, c]\n\n    print(ans)\n    print(' '.join([' '.join([str(abc[j]) for i in range(ans_co[j])]) for j in range(3)]).strip())\n"]