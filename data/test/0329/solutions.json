["t = {i: 0 for i in 'qwertyuiopasdfghjklzxcvbnm'}\nfor i in input(): t[i] += 1\nprint(min([t['i'], t['t'], t['e'] // 3, max(0, (t['n'] - 1)) // 2]))", "import fileinput\n\nfor line in fileinput.input():\n    x = line\n\n\ncountn = 0\ncounti = 0\ncounte = 0\ncountt = 0\n\nfor i in range(len(x)):\n    if x[i] == 'n':\n        countn+=1\n    if x[i] == 'i':\n        counti+=1\n    if x[i] == 'e':\n        counte+=1\n    if x[i] =='t':\n        countt+=1\n\ncountn -= 3\ncounti -= 1\ncounte -= 3\ncountt -= 1\n\ntotal = 0\nif countn>=0 and counti >= 0 and counte >= 0 and countt >= 0:\n    total +=1\n\nwhile countn-2>=0 and counti-1>=0 and counte-3 >= 0 and countt - 1 >= 0:\n    countn-=2\n    counti-=1\n    counte-=3\n    countt-=1\n    total+=1\n\nprint(total)", "s = input()\nne = s.count('e')//3\nnn = (s.count('n')-1) // 2\nni = s.count('i')\nnt = s.count('t')\nm = min(ne,nn,ni,nt)\nif m < 0: m = 0\nprint(m)", "J=str(input())\nN=J.count('n')\nI=J.count('i')\nT=J.count('t')\nE=J.count('e')\nN=(N-1)//2\nE=E//3\nif N>0:\n    M=min(N,I,T,E)\nelse:\n    M=0\nprint(M)", "s = input().strip()\nletters = [0] * 30\nfor i in range(len(s)):\n    letters[ord(s[i]) - ord('a')] += 1\nans = min(letters[ord('i') - ord('a')], letters[ord('e') - ord('a')] // 3)\nans = min(ans, letters[ord('t') - ord('a')])\nans = min(ans, (letters[ord('n') - ord('a')] - 3) // 2 + 1)\nprint(max(0, ans))", "s = input()\na = [0] * 26\nb = [0] * 26\nfor c in \"nineteen\":\n  a[ord(c) - ord(\"a\")] += 1\nfor c in s:\n  b[ord(c) - ord(\"a\")] += 1\ns = 0\nif all(y >= x for x, y in zip(a, b)):\n  s += 1\n  for i in range(26):\n    b[i] -= a[i]\n  a[ord(\"n\") - ord(\"a\")] -= 1\n  s += min(y // x for x, y in zip(a, b) if x > 0)\nprint(s)", "te = input()\ne = 0; i = 0; n = 0; t = 0\nfor j in te:\n    if j == 'e':\n        e += 1\n    elif j == 'i':\n        i += 1\n    elif j == 'n':\n        n += 1\n    elif j == 't':\n        t += 1\nif n > 3:\n    n = 1 +(n-3)//2\nelse:\n    n = n//3\nprint(min(e//3, t, i, n))\n", "s = input()\nform = 'nineteen'\nans = 0\nflag = True\nwhile True:\n    for i in range(len(form)):\n        if s.find(form[i]) == -1:\n            flag = False\n            break\n        if i == len(form) - 1:\n            ans += 1\n        else:\n            s = s[:s.find(form[i])] + s[s.find(form[i]) + 1:]\n    if not flag:\n        break\nprint(ans)", "from collections import Counter\ns,w = Counter(input()), Counter('nineteen')\nf = lambda k,v: (s['n']-1)//2 if k == 'n' else s[k]//v\nprint(max(0, min(f(k,v) for k,v in w.items())))", "st = input()\na = {'n':0, 'i':0, 'e':0, 't':0}\n# n*3131-(n-1)*1000 = 2n+1,n,3n,n\nfor c in st:\n    if c in a:\n        a[c] += 1\nprint(max(min([(a['n'] - 1) // 2, a['i'], a['e'] // 3, a['t']]), 0))\n", "s='n'+'ineteen'*100\nx=input()\nd={}\nfor i in s:d[i]=x.count(i)\nj=0\nwhile d[s[j]]>0:d[s[j]]-=1;j+=1\nprint(s[:j].count('ineteen'))", "a = str(input())\ni = [0]\nn = [0]\nt = [0]\ne = [0]\nfor x in a:\n\tx = str(x)\n\tif x == 'i':\n\t\ti[0] += 1\n\tif x == 'n':\n\t\tn[0] += 1\n\tif x == 't':\n\t\tt[0] += 1\n\tif x == 'e':\n\t\te[0] += 1\ni_m = i[0]\ne_m = e[0]//3\nt_m = t[0]\nn_m = 0\nif n[0] >= 3:\n\tn[0] -=3\n\tn_m += 1\n\tn_m += n[0]//2 \nprint(min(i_m, n_m, e_m, t_m))\n\n\n# 1481305185129\n", "x=input()\na=x.count('n')\nb=x.count('i')\nc=x.count('e')\nd=x.count('t')\nif a>=5:\n\ta-=1\n\ta/=2\nelse:\n\ta/=3\nc/=3\na=int(a)\nc=int(c)\ni=0\nwhile a>0 and b>0 and c>0 and d>0:\n\ti+=1\n\ta-=1\n\tb-=1\n\tc-=1\n\td-=1\nprint(i)\n\n# 1481311408782\n", "string = input()\n\nn = string.count('n')\ni = string.count('i')\ne = string.count('e')\nt = string.count('t')\n\nn-=1\n\nvn = n/2\nve = e/3\nvi = i\nvt = t\n\n\n#if vn>1:\n#\tvn+=(vn-1)\n\nans = max(0, min(vn, ve, vi, vt))\n\nans = int(ans)\n\nprint(ans)", "string = input()\n\nn = string.count('n')\ni = string.count('i')\ne = string.count('e')\nt = string.count('t')\n\nn-=1\n\nvn = n/2\nve = e/3\nvi = i\nvt = t\n\n\n#if vn>1:\n#\tvn+=(vn-1)\n\nans = max(0, min(vn, ve, vi, vt))\n\nans = int(ans)\n\nprint(ans)\n# 1481824118256\n", "s=input()\nk=s\nl=s\nd=s\nr=s\nk=k.replace(\"n\",\"\")\nl=l.replace(\"i\",\"\")\nd=d.replace(\"t\",\"\")\nr=r.replace(\"e\",\"\")\nn,i,t,e=0,0,0,0\nn=len(s)-len(k)\ni=len(s)-len(l)\nt=len(s)-len(d)\ne=len(s)-len(r)\nx=0\nif n-3>=0 and i-1>=0 and t-1>=0 and e-3>=0:\n    g=\"nineteen\"\n    n-=3\n    i-=1\n    t-=1\n    e-=3\n    x+=1\n    while n-2>=0 and i-1>=0 and t-1>=0 and e-3>=0:\n        n-=2\n        i-=1\n        t-=1\n        e-=3\n        x+=1\nprint(x)\n", "import sys\n\nline = sys.stdin.readline()\nword = line.split()[0]\n\nn = 0\ni = 0\ne = 0\nt = 0\n\nfor c in word:\n    if c == 'n':\n        n += 1\n    elif c == 'i':\n        i += 1\n    elif c == 'e':\n        e += 1\n    elif c == 't':\n        t += 1\n\nN = max(0, (n - 1) // 2)\nI = i\nE = max(0, e // 3)\nT = t\n\nprint(min([N, I, E, T]))\n\n# 1502215214848\n", "import math;\n\ns = input();\nsize = len(s);\nletters = [0, 0, 0, 0]\nn = 0;\ni = 0;\ne = 0;\nt = 0;\n\nfor x in range(0, size):\n\tif s[x] == \"n\":\n\t\tn += 1;\n\telif s[x] == \"i\":\n\t\ti += 1;\n\telif s[x] == \"e\":\n\t\te += 1;\n\telif s[x] == \"t\":\n\t\tt += 1;\n\t\t\nif (n == 3):\n  n = 1;\nelif (n < 3):\n  n = 0;\nelse:\n  n -= 3;\n  n = math.floor(n / 2);\n  n += 1;\n\ne = math.floor(e / 3);\n\nletters[0] = n;\nletters[1] = i;\nletters[2] = e;\nletters[3] = t;\n\nprint((min(letters)));\n# 1502216507489\n", "st = input()\nn = 0\ni = 0\ne = 0\nt = 0\n\nfor el in st:\n\tif el=='n':\n\t\tn+=1\n\telif el=='i':\n\t\ti+=1\n\telif el=='e':\n\t\te+=1\n\telif el=='t':\n\t\tt+=1\n\nif n==0 or n==1 or n==2:\n\trn = 0\nelse:\n\trn = (n-1)//2\nprint(min([rn, i//1, e//3, t//1]))\n\n# 1502217389696\n", "def v_19(s):\n    a = [0, 0, 0, 0]\n    #    n  e  i  t\n\n    for i in range(len(s)):\n        if s[i] == 'n':\n            a[0] += 1\n        elif s[i] == 'i':\n            a[2] += 1\n        elif s[i] == 'e':\n            a[1] += 1\n        elif s[i] == 't':\n            a[3] += 1\n\n    return a\n\n\ns = input()\n\nq = v_19(s)\n\nif q[0] < 5:\n    q[0] = q[0] // 3\nelse:\n    q[0] = (q[0] - 1) // 2\n\nq[1] = q[1] // 3\n\nprint(min(q))\n\n# 1502218585911\n", "s='n'+'ineteen'*100\nx=input()\nd={}\nfor i in s:d[i]=x.count(i)\nj=0\nwhile d[s[j]]>0:d[s[j]]-=1;j+=1\nprint(s[:j].count('ineteen'))", "def main(s):\n    from collections import Counter\n    count = Counter(s)\n    n = {'n': 2, 'i': 1, 'e': 3, 't': 1}\n    f = True\n    x = \"\"\n    for i in range(len(s)):\n        for c in n:\n            if count[c] < n[c]:\n                f = False\n                break\n        if not f:\n            break\n        for c in n:\n            count[c] -= n[c]\n        x += \"ninetee\"\n    if count['n'] > 0:\n        x += \"n\"\n    r = 0\n    for i in range(0, len(x) + 2 , 7):\n        if x[i:i+8] == 'nineteen':\n            r += 1\n    return r\n        \n\nprint(main(list(input())))\n", "s = input()\nl = list(s)\ncul = list(0 for i in range(30))\nfor el in l :\n        cul[ord(el) - 97] += 1\nif cul[ord('n')-97] > 0:\n        cul[ord('n')-97]-=1\n\n\nprint(min(cul[ord('n')-97]//2 , min(cul[ord('e')-97]//3 , min(cul[ord('t')-97] , cul[ord('i')-97]))))\n", "# python 3\n\"\"\"\nRead tutorial, graph the moves, still don't understand this problem\n\"\"\"\n\n\ndef nineteen(string_str) -> int:\n    letter_count_dict = dict()\n    for letter in string_str:\n        if letter_count_dict.get(letter, 0) == 0:\n            letter_count_dict[letter] = 1\n        else:\n            letter_count_dict[letter] += 1\n    nineteen_count = 0\n    while letter_count_dict.get('n', 0) >= 3 and letter_count_dict.get('i', 0) >= 1 and \\\n            letter_count_dict.get('e', 0) >= 3 and letter_count_dict.get('t', 0) >= 1:\n        letter_count_dict['n'] -= 2\n        letter_count_dict['i'] -= 1\n        letter_count_dict['e'] -= 3\n        letter_count_dict['t'] -= 1\n        nineteen_count += 1\n    return nineteen_count\n\n\ndef __starting_point():\n    \"\"\"\n    Inside of this is the test. \n    Outside is the API\n    \"\"\"\n\n    string = input()\n\n    print(nineteen(string))\n\n__starting_point()", "s = input().strip()\nn = s.count('n')\ne = s.count('e') // 3\ni = s.count('i')\nt = s.count('t')\n\n#print(n, e, s.count('e'), i, t)\n\ncount = min(e, i, t)\nfor i in range(count, -1, -1):\n    if (2 * i + 1) <= n:\n        print(i)\n        break\n    elif 3 * i <= n:\n        print(i)\n        break"]