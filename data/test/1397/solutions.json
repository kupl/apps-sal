["n, m = list(map(int, input().split()))\ntable = [False] * (n + 1)\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    table[a] = table[b] = True\nprint(n - 1)\nfor i in range(1, n + 1):\n    if not table[i]:\n        for j in range(1, n + 1):\n            if i != j:\n                print(i, j)\n        break\n\n", "n,m=input().split()\nn=int(n)\nm=int(m)\nban=[True]*(n+1)\nban[0]=False\nfor i in range(m):\n    L=input().split()\n    L[0]=int(L[0])\n    L[1]=int(L[1])\n    ban[L[0]]=False\n    ban[L[1]]=False\n\nx=ban.index(True)\n\nprint(n-1)\n\nfor i in range(1,n+1):\n    if(i==x):\n        continue\n    print(i,end=\" \"+str(x)+'\\n')\n", "import sys\nfin = sys.stdin\n\nn, m = map(int, fin.readline().split())\n\nnoRoad = [tuple(map(int, fin.readline().split())) for i in range(m)]\ncanBeCenter = [True] * n\nfor i, j in noRoad:\n    canBeCenter[i - 1] = canBeCenter[j - 1] = False\n    \nfor i in range(n):\n    if canBeCenter[i]:\n        print(n - 1)\n        for j in range(n):\n            if i != j:\n                print(i + 1, j + 1)\n        break\nelse:\n    print('\u042f \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0440\u0435\u0448\u0438\u043b \u0437\u0430\u0434\u0430\u0447\u0443')", "n, m = list(map(int, input().split()))\ndx = []\ndy = []\nfor i in range (0, m):\n    a, b = list(map(int, input().split()))\n    dx.append(a - 1)\n    dy.append(b - 1)\nc = []\nfor i in range (0, n):\n    c.append(0);\nfor i in range (0, m):\n    c[ dx[i] ] = c[ dx[i] ] + 1\n    c[ dy[i] ] = c[ dy[i] ] + 1\np = 0\nfor i in range (0, n):\n    if c[i] == 0:\n        p = i\n        break\nprint(n - 1)\nfor i in range (0, n):\n    if i != p:\n        print(p + 1, i + 1)\n", "n,m = [int(x) for x in input().split()]\na = []\nb = [0]*n\nfor i in range(m):\n    a.append([int(x) for x in input().split()])\n    b[a[i][0]-1] += 1\n    b[a[i][1]-1] += 1\nfor i in range(len(b)):\n    if b[i] == 0:\n        print(n-1)\n        for j in range(1,n+1):\n            if j != i+1:\n                print(i+1,j)\n        break", "R=lambda:list(map(int,input().split()))\nn,m=R()\na=set(range(1,n+1))\nfor i in range(m):a=a-set(R())\na=list(a)[0]\nprint(n-1)\nfor i in range(1,n+1):\n    if i!=a:print(a,i)\n\n", "n,m=list(map(int,input().split()))\narr=[]\nfor i in range (m):\n    x,y=list(map(int,input().split()))\n    arr.append(x);arr.append(y)\n\nprint(n-1)\nfor i in range (1,n+1):\n    if (i in arr) == False:\n        for j in range (1,n+1):\n            if i != j: print(str(i) + ' ' + str(j))\n        break\n", "n, m = list(map(int, input().split()))\nt = set()\nfor i in range(m):\n    x, y = list(map(int, input().split()))\n    t.add(x)\n    t.add(y)\nfor i in range(1, n + 1):\n    m = i if i not in t else m\nprint(n - 1)\nfor i in range(1, n + 1):\n    if i != m:\n        print(i, m)\n", "s = input().split()\nn = int( s[0] )\nm = int( s[1] )\nl = []\n\nfor i in range(m):\n    s = input().split()\n    l.append( int(s[0]) )\n    l.append( int(s[1]) )\n\nl.sort()\nstar = 1\nfor x in l:\n    if x==star:\n        star += 1\n\nprint(n-1)\nfor i in range( n ):\n    if i+1 != star:\n        print(str(star) + ' ' + str(i+1))\n", "def go():\n    n, m = list(map(int, input().split()))\n    dx = []\n    dy = []\n    for i in range (0, m):\n        a, b = list(map(int, input().split()))\n        dx.append(a - 1)\n        dy.append(b - 1)\n    c = []\n    for i in range (0, n):\n        c.append(0);\n    for i in range (0, m):\n        c[ dx[i] ] = c[ dx[i] ] + 1\n        c[ dy[i] ] = c[ dy[i] ] + 1\n    p = 0\n    for i in range (0, n):\n        if c[i] == 0:\n            p = i\n            break\n    print(n - 1)\n    for i in range (0, n):\n        if i != p:\n            print(p + 1, i + 1)\ndef __starting_point():\n    go()\n\n__starting_point()", "d = [0] * 1000\n\nn, m = list(map(int, input().split()))\n\nfor i in range(m):\n    u, v = list(map(int, input().split()))\n    d[u - 1] = 1\n    d[v - 1] = 1\n\nfor i in range(n):\n    if d[i] == 0:\n        c = i\n        break\n\nprint(n - 1)\nfor i in range(n):\n    if i == c:\n        continue;\n    print(c + 1, i + 1)\n", "n, m = list(map(int, input().split()))\nprint(n - 1)\nt = []\nfor i in range(m): \n    t += input().split()\nt = set(t)\ni = 1\nwhile str(i) in t: i += 1\nfor j in range(1, i):\n    print(i, j)\nfor j in range(i + 1, n + 1):\n    print(i, j)\n", "n, m = map(int, input().split())\ns = set(range(1, n + 1))\nfor i in range(m):\n    for j in map(int, input().split()):\n        if j in s:\n            s.remove(j)\nc = s.pop()\nprint(n - 1)\nfor i in range(1, n + 1):\n    if i != c:\n        print(c, i)", "'''\nCreated on \u0663\u0661\u200f/\u0661\u0662\u200f/\u0662\u0660\u0661\u0664\n\n@author: mohamed265\n'''\nt = input().split()\nn = int(t[0])\nm = int(t[1])\n\ns = set()\nu = set(i for i in range(1,n+1))\n\nfor i in range (m):\n    t = input().split()\n    s.add(int(t[0]))\n    s.add(int(t[1]))\nuniq = (u -  s).pop()\n\nprint(n-1)\nfor i in range(1,n+1):\n    if i != uniq:\n        print (i , uniq)", "'''\nCreated on \u0663\u0661\u200f/\u0661\u0662\u200f/\u0662\u0660\u0661\u0664\n\n@author: mohamed265\n'''\nt = input().split()\nn = int(t[0])\nm = int(t[1])\n\ns = set()\nu = set(i for i in range(1,n+1))\n\nfor i in range (m):\n    t = input().split()\n    s.add(int(t[0]))\n    s.add(int(t[1]))\nuniq = (u -  s).pop()\n\nprint(n-1)\nfor i in range(1,n+1):\n    if i != uniq:\n        print (i , uniq)", "def main():\n    n, m = map(int, input().split())\n    l = [True] * (n + 1)\n    l[0] = False\n    for _ in range(m):\n        a, b = map(int, input().split())\n        l[a] = l[b] = False\n    center = l.index(True)\n    print(n - 1)\n    for i in range(1, center):\n        print(center, i)\n    for i in range(center + 1, n + 1):\n        print(center, i)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "# 330B.py\n# Road Construction\n\nf = lambda: input()\n\nn, m = list(map(int, f().split()))\n\ncc = [0] * (n+1)\nfor i in range(m):\n    a,b =list(map(int, f().split()))\n    cc[a] += 1;\n    cc[b] += 1;\n\ncenter = 0\nfor i in range(1, n+1):\n    if cc[i] == 0:\n        center = i\n        break\n\nprint(n-1)\n\nfor i in range(1, n+1):\n    if i != center:\n        print(i, center)\n\n    \n", "n, m = [int(x) for x in input().split(' ')]\nfree_nodes = [True]*n\nfor _ in range(m):\n    source, dest = [int(x) for x in input().split(' ')]\n    free_nodes[source-1], free_nodes[dest-1] = False, False\nfirst_free_node = free_nodes.index(True)+1\nprint(n-1)\nother_nodes = [x for x in range(1, n+1) if x != first_free_node]\nfor node in other_nodes:\n    print(\"{0} {1}\".format(first_free_node, node))\n", "n, m = list(map(int, input().split()))\nc = [list(map(int, input().split())) for _ in range(m)]\nr = [[True for j in range(n+1)] for i in range(n+1)]\n\nfor v in c:\n    r[v[0]][v[1]] = False\n    r[v[1]][v[0]] = False\n\nnode = -1\n\nfor i in range(1, n+1):\n    cont = True\n    for j in range(1, n+1):\n        cont &= r[i][j]\n        if not cont:\n            break\n    if cont:\n        node = i\n        break\n\nprint(n-1)\n\nfor i in range(1, n+1):\n    if i != node:\n        print(node, i)\n", "numberOfcities, nBlocked = [int(item) for item in input().split()]\nblocked = set()\nfor i in range(nBlocked):\n    n, m = [int(item) for item in input().split()]\n    blocked.add(n)\n    blocked.add(m)\npoint = 0\nfor k in range(1, numberOfcities+1):\n    if k not in blocked:\n        point = k\n        break\nprint(numberOfcities-1)\nfor k in range(1, numberOfcities+1):\n    if k != point:\n        print(point, k)", "__author__ = 'Rajan'\n\nn,m = map(int,input().split())\n# n nodes and m edges\nhash = [False for i in range(n+1)]\nfor i in range(m):\n    a,b = map(int,input().split())\n    hash[a] = hash[b] = True\nb = 0\nfor i in range(1,n+1):\n    if not hash[i]:\n        b = i\n        break\n\nprint(n-1)\nfor i in range(1,n+1):\n    if i != b:\n        print(i,b)", "n, m = list(map(int, input().split(' ')))\nb = []\na = set()\nfor _ in range(m):\n\ti, j = list(map(int, input().split(' ')))\n\ta.add(i)\n\ta.add(j)\n\na = list(a)\ni = 0\nfor i in range(1, n+1):\n\tif i not in a:\n\t\tbreak\n\nprint(n - 1)\nfor j in range(1, n+1):\n\tif i != j:\n\t\tprint(i, j)\n", "def main():\n    n,m = map(int,input().split())\n    ch = [True]*(n+1)\n    for i in range(m):\n        a,b = map(int,input().split())\n        a,b = a-1,b-1\n        ch[a] = ch[b] = False\n    cen = ch.index(True)+1\n    print(n-1)\n    for i in range(1,n+1):\n        if i == cen: continue\n        print(cen,i)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n,m=list(map(int, input().split()))\na=set(range(1,n+1))\nfor i in range(m):a=a-set(map(int, input().split()))\na=list(a)[0]\nprint(n-1)\nfor i in range(1,n+1):\n    if i!=a:print(a,i)\n"]