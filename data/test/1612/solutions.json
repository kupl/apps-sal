["n = int(input())\np = list()\nfor i in range(n):\n\tp.append(set([int(x) for x in input().split()[1:]]))\nfor i in range(n):\n\tfor j in range(n):\n\t\tif i != j:\n\t\t\tif p[i].issuperset(p[j]):\n\t\t\t\tprint(\"NO\")\n\t\t\t\tbreak\n\telse:\n\t\tprint(\"YES\")\n\n", "n = int(input())\na = []\nfor x in range(n):\n    m1 = input()\n    m = m1.split(' ')\n    b = []\n    c = 0\n    for y in m:\n        if(c!=0):\n            b.append(int(y))\n        c = c+1\n    a.append(b)\n#print(a)\nfor z in range(n):\n    lis1 = a[z]\n    #print(\"list considered is :\")\n    #print(lis1)\n    flag = 3\n    count = 0\n    for m in a:\n        if(z != count):\n            if(set(m).issubset(set(lis1))):\n                flag = 2\n                #break\n        count = count+1\n    if(flag==2):\n        print(\"NO\")\n    else:\n        print(\"YES\")       \n    \n", "n=int(input())\n\nL=[]\nfor i in range(n):\n    m=list(map(int,input().split()))\n    m=m[1:]\n    L.append(sorted(m))\n\nAns=[\"YES\"]*n\n\nfor i in range(n):\n    for j in range(n):\n        if(i==j):\n            continue\n        ind=-1\n        for x in range(len(L[j])):\n            if(L[j][x]==L[i][0]):\n                ind=x\n                break\n        if(ind==-1):\n            continue\n        e=0\n        for x in range(ind,len(L[j])):\n            if(L[j][x]==L[i][e]):\n                e+=1\n            if(e==len(L[i])):\n                break\n        if(e==len(L[i])):\n            Ans[j]=\"NO\"\nfor i in range(n):\n    print(Ans[i])\n        \n", "def contiene(l, s, n, m):\t\n\tj=0\n\tfor i in range(n):\n\t\tx = l[i]\n\t\twhile j<m and not l[i]==s[j]:\n\t\t\tj+=1\n\t\t\n\t\tif j==m and not i==n:\n\t\t\treturn False\n\t\n\treturn True\n\t\t\n\t\ndef __starting_point():\t\n\tn = int(input())\n\tl = []\n\tm = []\n\tfor i in range(n):\n\t\ts = [int(x) for x in input().split()]\n\t\tm.append( s[0] )\n\t\tl.append( s[1:] )\n\t\tl[i].sort()\n\n\tfor i in range(n):\n\t\tcanWin = True\n\t\tfor j in range(n):\n\t\t\tif not j==i:\n\t\t\t\tif m[i]<m[j]:\n\t\t\t\t\tcontinue\n\t\t\t\tif contiene( l[j], l[i], m[j], m[i] ):\n\t\t\t\t\tcanWin = False\n\t\t\t\t\tbreak\n\t\t\n\t\tif canWin:\n\t\t\tprint('YES')\n\t\telse:\n\t\t\tprint('NO')\n\t\t\t\n\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__starting_point()", "n = int(input())\np = list()\nfor i in range(n):\n    p.append(set([int(x) for x in input().split()[1:]]))\nfor i in range(n):\n    for j in range(n):\n        if i != j:\n            if p[i].issuperset(p[j]):\n                print(\"NO\")\n                break\n    else:\n        print(\"YES\")", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, = readln()\nlst = [set(readln()[1:]) for _ in range(n)]\nfor a in lst:\n    print(\"YES\" if len([1 for b in lst if len(a.union(b)) == len(a)]) == 1 else \"NO\")\n", "n = int(input())\nt, l, s = [0] * n, [0] * n, ['YES'] * n\nfor i in range(n):\n    p = tuple(map(int, input().split()))\n    t[i], l[i] = set(p[1: ]), p[0]\nfor i in range(n):\n    for j in range(i + 1, n):\n        if l[i] < l[j]:\n            if all(k in t[j] for k in t[i]): s[j] = 'NO'\n        else:\n            if all(k in t[i] for k in t[j]): \n                if l[i] == l[j]: s[j] = 'NO'\n                s[i] = 'NO'\nprint('\\n'.join(s))", "n = int(input())\ns, t = ['YES'] * n, [set(map(int, input().split()[1: ])) for i in range(n)]\nfor i in range(n):\n    for j in range(n):\n        if i != j and t[i].issuperset(t[j]):\n            s[i] = 'NO'\n            break\nprint('\\n'.join(s))", "n = int(input())\na = []\nm = []\np = []\nmn = []\nfor i in range(n):\n    b = list(map(int,input().split()))\n    a.insert(i,b)\n    #a.append(b)\n    #m = m + [a[i][0]]\n    m.append(a[i][0])\n    a[i] = a[i][1:]\n    mn.append(set(a[i]))\n    p.append('YES')\n\nfor j in range(n):\n    for i in range(n):\n        if i != j:\n            if mn[i] <= mn[j]:\n                p[j]= 'NO'\n                break\n\nfor i in range(n):\n    print(p[i])\n    \n", "# -*- coding: utf-8 -*-\n\nn = int(input())\ncards = [[set(map(int, input().split()[1:])), i, True] for i in range(n)]\n\ncards.sort(key=lambda x: len(x[0]))\nfor i in range(n-1, -1, -1):\n    if not cards[i][2]:\n        continue\n    for j in range(0, i):\n        if cards[j][0] == cards[i][0]:\n            cards[j][2] = cards[i][2] = False\n            break\n        if cards[j][0] < cards[i][0]:\n            cards[i][2] = False\n            break\n\ncards.sort(key=lambda x: x[1])\nfor card in cards:\n    print('YES' if card[2] else 'NO')\n", "n = int(input())\na = []\nfor i in range(n):\n  a += [set(list(map(int, input().split()))[1:])]\nfor i in range(n):\n  for j in range(n):\n    if i != j and a[j] <= a[i]:\n      print(\"NO\")\n      break\n  else:\n    print(\"YES\")", "def main():\n    n = int(input())\n    a = [set(map(int, input().split()[1:])) for _ in range(n)]\n\n    res = [True] * n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if a[i].issubset(a[j]):\n                res[j] = False\n            if a[i].issuperset(a[j]):\n                res[i] = False\n    print('\\n'.join('YES' if i else 'NO' for i in res))\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "k = int(input())\ncards = []\nres = []\nfor i in range(k):\n    str = input()\n    it = set(map(int,str.split(\" \")[1:]))\n    cards.append(it)\ns = []\nfor i in cards:\n    for j in cards:\n        s.append(len(j.difference(i)))\n    if s.count(0) != 1:\n        print('NO')\n    else:\n        print('YES')\n    s=[]", "p = [set(list(map(int, input().split()))[1:]) for i in range(int(input()))]\nfor i, s in enumerate(p):\n    print('YES' if all(i == i2 or not s2 <= s for i2, s2 in enumerate(p)) else 'NO')", "p = [set(list(map(int, input().split()))[1:]) for i in range(int(input()))]\nfor i, s in enumerate(p):\n    print('YES' if all(i == i2 or not s2 <= s for i2, s2 in enumerate(p)) else 'NO')", "n = int(input())\na = []\nfor i in range(n):\n    li = list(map(int, input().split()))\n    a.append(set(li[1:]))\nfor i in range(n):\n    s = a[i]\n    joke = 1\n    for j in range(n):\n        t = a[j]\n        if t <= s and i != j:\n            joke = 0\n            break\n    print(\"YES\" * joke + \"NO\" * (1 - joke))\n", "def s():\n    n = int(input())\n    a = [set(list(map(int,input().split()))[1:])for _ in range(n)]\n    res = 0\n    print(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\ns()\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n", "n = int(input())\na = [set(list(map(int,input().split()))[1:])for _ in range(n)]\nres = 0\nprint(*['YES'if sum(i.issubset(j)for i in a) == 1 else 'NO' for j in a],sep = '\\n')\n\n"]