["import sys\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip()\nni = lambda: int(readline().rstrip())\nnm = lambda: map(int, readline().split())\nnl = lambda: list(map(int, readline().split()))\nprn = lambda x: print(*x, sep='\\n')\n\n\ndef solve():\n    n = ni()\n    s = nl()\n    dp = [1]*(n+1)\n    for i in range(n//2, 0, -1):\n        for j in range(2*i, n+1, i):\n            if s[i-1] < s[j-1]:\n                dp[i] = max(dp[i], dp[j] + 1)\n\n    print(max(dp))\n    return\n\n# solve()\n\nT = ni()\nfor _ in range(T):\n    solve()\n", "from math import *\n\nfor zz in range(int(input())):\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    dp = [1] * (n + 1)\n    for i in range(n - 1, 0, -1):\n        j = 2*i\n        while j <= n:\n            if a[i-1] < a[j-1]:\n                dp[i] = max(dp[i], dp[j] + 1)\n            j += i\n        \n    print(max(dp))\n", "for _ in range(int(input())):\n    n = int(input())\n    ar = [0] + list(map(int, input().split()))\n    dp = [0] * (n+1)\n    for i in range(1, n+1):\n        dp[i] = max(1, dp[i])\n        for j in range(i+i, n+1, i):\n            if ar[j] > ar[i]:\n                dp[j] = max(dp[j], dp[i] + 1)\n    print(max(dp))", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    ans = [0] * n\n    for i in range(1, n + 1):\n        ans[i - 1] = max(ans[i - 1], 1)\n        for j in range(2, n // i + 1):\n            if a[i * j - 1] > a[i - 1]:\n                ans[i * j - 1] = max(ans[i * j - 1], ans[i - 1] + 1)\n    print(max(ans))\n", "import sys\ninput=lambda: sys.stdin.readline().rstrip()\nt=int(input())\nfor _ in range(t):\n  n=int(input())\n  S=[int(i) for i in input().split()]\n  A=[1]*(n+1)\n  for i in range(1,n+1):\n    mul=2\n    while i*mul<=n:\n      if S[i*mul-1]>S[i-1]:\n        A[i*mul]=max(A[i*mul],A[i]+1)\n      mul+=1\n  print(max(A))", "import sys\nreader = (s.rstrip() for s in sys.stdin)\ninput = reader.__next__\n\ndef solve():\n    n = int(input())\n    s = list(map(int, input().split()))\n    ans = [0]*n\n    for i in range(1, n+1):\n        ans[i-1] = max(ans[i-1], 1)\n        for j in range(2*i, n+1, i):\n            if s[i-1] < s[j-1]:\n                ans[j-1] = max(ans[j-1], ans[i-1]+1)\n    print(max(ans))\n\nt = int(input())\nfor i in range(t):\n    solve()\n\n", "for f in range(int(input())):\n    n=int(input())\n    s=list(map(int,input().split()))\n    poss=[1]*(n+1)\n    for i in range(1,n):\n        j=2\n        while j*i<=n:\n            if s[j*i-1]>s[i-1]:\n                poss[i*j]=max(poss[i*j],poss[i]+1)\n            j+=1\n    print(max(poss))", "\"\"\"T=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    a,b=map(int,input().split())\n    s=input()\n    s=[int(x) for x in input().split()]\n    for i in range(0,len(s)):\n        a,b=map(int,input().split())\"\"\"\n\n\nT=int(input())\nfor _ in range(0,T):\n    n=int(input())\n    s=[0]+[int(x) for x in input().split()]\n    L=[1]*len(s)\n    for i in range(1,len(L)):\n        #tt=L[i]\n        ptr=i+i\n        while(ptr<=n):\n            if(s[ptr]>s[i]):\n                L[ptr]=max(L[ptr],L[i]+1)\n            ptr+=i\n    print(max(L))\n            \n    \n", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    s = list(map(int, input().strip().split()))\n\n    result = [1] * len(s)\n    for i in range(len(s)):\n        indeks = i + 1\n        start = 2*indeks\n        while start <= n:\n            if s[start-1] > s[i]:\n                result[start-1] = max(result[start-1], result[i] + 1)\n            start += indeks\n    print(max(result))", "import sys\nimport math\nt=int(sys.stdin.readline())\nfor _ in range(t):\n    n=int(sys.stdin.readline())\n    arr=list(map(int,sys.stdin.readline().split()))\n    dp=[1 for  x in range(n+1)]\n    for i in range(n-1,0,-1):\n        j=i*2\n        cnt=2\n        cur=1\n        while j<=n:\n            y=dp[j]\n            if arr[j-1]>arr[i-1]:\n                cur=max(cur,1+y)\n            cnt+=1\n            j=i*cnt\n        dp[i]=cur\n    #print(dp,'dp')\n    ans=max(dp)\n    print(ans)\n    \n"]