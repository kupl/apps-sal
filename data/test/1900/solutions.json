["def main():\n    _, k, m = [int(x) for x in input().split()]\n    a = []\n    last = (\"-1\", 0)\n    a.append(last)\n    for ai in input().split():\n        if last[0] == ai:\n            last = (ai, last[1]+1)\n            a[-1] = last\n        else:\n            last = (ai, 1)\n            a.append(last)\n\n        if last[1] == k:\n            a.pop()\n            last = a[-1]\n    a.pop(0)\n\n    s1 = 0\n    while len(a) > 0 and a[0][0] == a[-1][0]:\n        if len(a) == 1:\n            s = a[0][1] * m\n            r1 = s % k\n            if r1 == 0:\n                print(s1 % k)\n            else:\n                print(r1 + s1)\n            return\n        join = a[0][1] + a[-1][1]\n\n        if join < k:\n            break\n        elif join % k == 0:\n            s1 += join\n            a.pop()\n            a.pop(0)\n        else:\n            s1 += (join // k) * k\n            a[0] = (a[0][0], join % k)\n            a.pop()\n            break\n\n    s = 0\n    for ai in a:\n        s += ai[1]\n\n    print(s*m + s1)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#reference sol:-31772413\nr=lambda:list(map(int,input().split()))\nn,k,m=r()\na=list(r())\nstck=[]\nfor i in range(n):\n\tif len(stck)==0 or stck[-1][0]!=a[i]:\n\t\tstck.append([a[i],1])\n\telse:\n\t\tstck[-1][1]+=1\n\tif stck[-1][1]==k:\n\t\tstck.pop()\n\nrem=0\nstrt,end=0,len(stck)-1\nif m > 1:\n\twhile end-strt+1 > 1 and stck[strt][0]==stck[end][0]:\n\t\tjoin=stck[strt][1]+stck[end][1]\n\t\tif join < k:\n\t\t\tbreak\n\t\telif join % k==0:\n\t\t\trem+=join\n\t\t\tstrt+=1\n\t\t\tend-=1\n\n\t\telse:\n\t\t\tstck[strt][1]=join % k\n\t\t\tstck[end][1]=0\n\t\t\trem+=(join//k)*k\n\ntr=0\nslen=end-strt+1\nfor el in stck[:slen]:\n\ttr+=el[1]\nif slen==0:\n\tprint(0)\nelif slen==1:\n\tr=(stck[strt][1]*m)%k\n\tif r==0:\n\t\tprint(0)\n\telse:\n\t\tprint(r+rem)\nelse:\n\tprint(tr*m+rem)\n"]