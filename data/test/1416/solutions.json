["n, w = list(map(int, input().split()))\na = sorted(map(int, input().split()))\n\nx = min(min(a[:n]), min(a[n:]) / 2)\nprint(min(w, 3 * n * x))\n", "n, w = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\na.sort()\nt = min(a[0]*2, a[len(a) // 2])\nprint(min(w, (t * len(a) // 2) + (t/2)*(len(a) // 2)))\n", "n,w=map(int,input().split(\" \"))\nmas=list(map(int,input().split(\" \")))\nmas.sort()\nx1=w/n/3\nx2=mas[0]\nx3=mas[n]/2\nprint(3*n*min(x1,x2,x3))", "n, w = map(int, input().split())\ncups = sorted([int(x) for x in input().split()])\n\ngirl = cups[0]\nboys = cups[n]\n\nboth = min(girl, boys/2)\n\nprint(min(n*both + 2*n*both, w))", "n,w=[int(x) for x in input().split()]\ncaps=[int(x) for x in input().split()]\ncaps.sort()\ng=caps[0]\nb=caps[n]\nif(b<2*g):\n    g=b/2\nprint(min(g*3*n,w))\n", "#n = int(input())\nn,w = [int(c) for c in input().split()]\na = [int(c) for c in input().split()]\na.sort()\n\nmaxgirl = w / (3 * n)\n\nfor i in range(n):\n    if a[i] < maxgirl:\n        maxgirl = a[i]\nfor i in range(n, 2*n):\n    if a[i] < 2 * maxgirl:\n        maxgirl = a[i]/2\n\nprint(maxgirl*3*n)\n", "def main():\n    n, w = list(map(int, input().split()))\n    a = sorted(map(int, input().split()))\n    print(min(w, min(a[0], a[n] * 0.5) * 3 * n))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, w = list(map(int, input().split(' ')))\ncups = list(map(int, input().split(' ')))\ncups.sort()\n\nmax_girl = cups[0]\nmax_boy = cups[n]\nx = min(max_girl, max_boy/2.0, w/(3.0*n))\n\nprint(3*x*n)\n\n", "n, w = map(int, input().split())\ncapac = list(sorted(map(int, input().split())))\nboy = capac[len(capac)//2]\ngirl = capac[0]\n\nprint(min(3*girl*n, 3/2*boy*n, w))", "\n\nn, w = list(map(int, input().split()))\n\ncups = sorted(list(map(int, input().split())))\n\ngirl_cap = min(cups[0], cups[n]/2)\n\n\n\n\nprint(min(girl_cap*3*n, w))\n\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,copy\nfrom itertools import chain, dropwhile, permutations, combinations\nfrom collections import defaultdict, deque\n\n# Guide:\n#   1. construct complex data types while reading (e.g. graph adj list)\n#   2. avoid any non-necessary time/memory usage\n#   3. avoid templates and write more from scratch\n#   4. switch to \"flat\" implementations\n\ndef VI(): return list(map(int,input().split()))\ndef I(): return int(input())\ndef LIST(n,m=None): return [0]*n if m is None else [[0]*m for i in range(n)]\ndef ELIST(n): return [[] for i in range(n)]\ndef MI(n=None,m=None): # input matrix of integers\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = VI()\n    return arr\ndef MS(n=None,m=None): # input matrix of strings\n    if n is None: n,m = VI()\n    arr = LIST(n)\n    for i in range(n): arr[i] = input()\n    return arr\ndef MIT(n=None,m=None): # input transposed matrix/array of integers\n    if n is None: n,m = VI()\n    a = MI(n,m)\n    arr = LIST(m,n)\n    for i,l in enumerate(a):\n        for j,x in enumerate(l):\n            arr[j][i] = x\n    return arr\n\n\ndef run(n,x,l,r):\n    s = 0\n    curr = 1\n    for i in range(n):\n        skip = (l[i]-curr) // x\n        s += r[i]-curr-skip*x+1\n        curr = r[i]+1\n    print(s)\n\n\ndef main(info=0):\n    n,w = VI()\n    a = sorted(VI())\n\n    x = min( min(a[:n]), min(a[n:])/2)\n\n    print(min(w, x*n + x*n*2))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, w = list(map(int, input().split()))\narr = list(map(int, input().split()))\narr.sort()\na = arr[0]\nb = arr[n]\nif a * 2 > b:\n    a = b / 2\nelse:\n    b = 2 * a\nprint(min(w, a * n + b * n))\n", "n, w = map(int, input().split())\na = sorted(map(int, input().split()))\nprint(3 * n * min(w / 3 / n, a[0], a[n] / 2))", "__author__ = '\u0414\u0430\u043d\u0438\u043b\u0430'\n\nn, w = map(int, input().split())\n\na = list(map(int, input().split()))\ns = sum(a)\na.sort()\n\nans = min(3*n*a[0], 3*n*a[n]/2, w)\n\nprint(ans)", "n, w = (int(i) for i in input().split())\ntea = sorted(int(i) for i in input().split())\nsmallest = min(tea[0], tea[n]/2)\nprint(min(smallest*3*n, w))\n", "def read_data():\n    n, w = map(int, input().split())\n    As = list(map(int, input().split()))\n    return n, w, As\n\ndef solve(n, w, As):\n    As.sort()\n    cap_girls = As[0]\n    cap_boys = As[n]\n    if cap_girls * 2 < cap_boys:\n        return min(cap_girls * 3 * n, w)\n    else:\n        return min(cap_boys * 1.5 * n, w)\n\nn, w, As = read_data()\nprint(solve(n, w, As))", "n, w = [int(i) for i in input().split()]\na = [int(i) for i in input().split()]\nc = (w/3)/n\na.sort()\nif a[0] > c and a[n] > 2*c:\n    print(w)\nelse:\n     print(min(a[n]/2, a[0])*3*n)\n    \n", "n, w = map(int, input().split())\nn *= 2\narr = list(map(int, input().split()))\narr.sort()\ng = arr[:n // 2]\nb = arr[n // 2:]\nfirst_g = g[0]\nfirst_b = b[0]\nif first_g * 2 > first_b:\n    first_g = first_b / 2\nelif first_g * 2 < first_b:\n    first_b = first_g * 2\nans = first_g * n / 2 + first_b * n / 2\nprint(min(ans, w))", "n,w=map(int,input().split())\na=[int(x) for x in input().split()]\na.sort()\nprint(min(a[0],a[n]/2,w/(3*n))*3*n)", "n, w = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nb = a[n]\ng = a[0]\nif b >= 2*g:\n    ret = g*2*n + g*n\nelif b >= g:\n    ret = b*n+float(b)/2*n\nprint(min(ret, w))\n\n", "n,w=list(map(int,input().split()))\nls = list(map(int,input().split()))\nls.sort()\nmi = min(ls[0],ls[n]/2)\nprint(min(w,(3*mi*n)))\n", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2015 missingdays <missingdays@missingdays>\n#\n# Distributed under terms of the MIT license.\n\n\"\"\"\n\n\"\"\"\n\ninp = input().split()\nn = int(inp[0])\nw = int(inp[1])\n\ncups = sorted(list(map(int, input().split())))\n\ngirl = cups[0]\nboy = cups[n]\n\ns = 0\n\ns += (min(girl, boy / 2) * 3 * n)\n\nprint(min(s, w))    \n", "n, w = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nv1 = a[0]\nv2 = a[n]\nq = min(v1, v2 / 2)\nprint(min(w, q * n * 3))\n\n", "__author__ = 'Andrey'\nn, w = map(int, input().split())\nvolumes = list(map(int, input().split()))\nvolumes.sort()\nm = -1\nif volumes[0] * 2 <= volumes[n]:\n    possible = 3 * n * volumes[0]\n    if possible <= w:\n        m = max(m, possible)\nif volumes[n] / 2 <= volumes[0]:\n    possible = volumes[n] / 2 * 3 * n\n    if possible <= w:\n        m = max(m, possible)\nif w / (3 * n) <= volumes[0] and 2 * w / (3 * n) <= volumes[n]:\n    m = max(m, w)\nprint(m)", "#!/usr/bin/env python3\n\nN, W = tuple(map(int, input().split(' ')))\nA = list(map(int, input().split(' ')))\n\nA.sort()\n\nsmallest_girl = A[0]\nsmallest_boy = A[N]\n\nsmallest_girl = min(smallest_girl, smallest_boy / 2)\nsmallest_boy = min(smallest_boy, smallest_girl * 2)\n\nmax_pour = (smallest_boy + smallest_girl) * N\n\nprint(min(W, max_pour))"]