["N = int(input())\nS =  input()\nans = S.count(\"R\") * S.count(\"G\") * S.count(\"B\")\nfor i in range(N-2):\n    r = S[i]\n    for j in range(i+1,N-1):\n        g = S[j]\n        if r == g:\n            continue\n        k = 2*j - i\n        if k >= N:\n            continue\n        b = S[k]\n        if r != b and g != b:\n            ans -= 1\nprint(ans)", "from collections import Counter\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N = int(input())\n    S = input()\n    ans = 0\n    r, g, b = [0 for _ in range(N+1)], [0 for _ in range(N+1)], [0 for _ in range(N+1)]\n    for i in range(N):\n        r[i+1], g[i+1], b[i+1] = r[i], g[i], b[i]\n        if S[i] == \"R\":\n            r[i+1] += 1\n        elif S[i] == \"G\":\n            g[i+1] += 1\n        else:\n            b[i+1] += 1\n    \n    for i in range(1, N-1):\n        if S[i] == \"R\":\n            ans += g[i] * (b[N] - b[i+1]) + b[i] * (g[N] - g[i+1])\n            for j in range(1, min(i, N-i-1)+1):\n                if {S[i-j], S[i+j]} == {\"G\", \"B\"}:\n                    ans -= 1\n        \n        elif S[i] == \"G\":\n            ans += r[i] * (b[N] - b[i+1]) + b[i] * (r[N] - r[i+1])\n            for j in range(1, min(i, N-i-1)+1):\n                if {S[i-j], S[i+j]} == {\"R\", \"B\"}:\n                    ans -= 1\n        elif S[i] == \"B\":\n            ans += g[i] * (r[N] - r[i+1]) + r[i] * (g[N] - g[i+1])\n            for j in range(1, min(i, N-i-1)+1):\n                if {S[i-j], S[i+j]} == {\"G\", \"R\"}:\n                    ans -= 1\n    print(ans)\n\nmain()", "n = int(input())\ns = list(input())\nr = s.count('R')\ng = s.count('G')\nb = s.count('B')\nans = r * g * b\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        if (j - i) + j < n:\n            k = (j - i) + j\n            if s[i] != s[j] and s[i] != s[k] and s[j] != s[k]:\n                ans -= 1\nprint(ans)                ", "n,s=int(input()),input()\nc=s.count('R')*s.count('G')*s.count('B')\nfor i in range(n+1):\n  for j in range(i,n+1):\n    k=2*j-i\n    if k<n:\n      if s[i]!=s[j] and s[j]!=s[k] and s[i]!=s[k]:\n        c-=1\nprint(c)", "n = int(input())\ns = input()\nans = 0\nans = s.count('R') * s.count('G') * s.count('B')\nfor i in range(n - 2):\n  for d in range(1, n):\n    j = i + d\n    k = j + d\n    if k >= n:\n      break\n    else:       \n      if s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n        ans -= 1\nprint(ans)", "N = int(input())\nS = input()\n\nuns = 0\nfor d in range(1, (N - 1) // 2 + 1):\n    for i in range(N - 2 * d):\n        s, t, u = S[i], S[i + d], S[i + 2 * d]\n        if s != t and t != u and u != s:\n            uns += 1\n\nr = S.count('R')\ng = S.count('G')\nb = N - r - g # = S.count('B')\n\nans = r * g * b - uns\nprint(ans)", "n=int(input())\ns=input()\n\nfrom collections import Counter\n\nc=Counter(s)\n\n# ans = 1\n# for i in list(c.values()):\n#     ans*=i\n\nr=s.count('R')\ng=s.count('G')\nb=s.count('B')\n\ncnt=0\nfor i in range(n):\n    for j in range(i+1,n):\n        k = j+(j-i)\n        if k>=n:\n            break\n        else:\n            if s[i]!=s[j] and s[j]!=s[k] and s[k]!=s[i]:\n                cnt+=1\n\nprint((r*g*b)-cnt)", "from collections import Counter as C\nn=int(input())\nS=list(input())\na=1\nL=C(S).most_common(3)\nfor l in L:\n  a*=l[1]\nfor i in range(1,n):\n  for j in range(n-2*i):\n    if len(set((S[j],S[j+i],S[j+2*i])))==3:\n      a-=1\nprint(a if len(L)>2 else 0)", "n=int(input())\ns=input()\nD={\"R\":[],\"G\":[],\"B\":[]}\n\nfor i in range(1,n+1):\n\tD[s[i-1]].append(i)\nans=len(D[\"R\"])*len(D[\"G\"])*len(D[\"B\"])\n\ncount=0\nfor i in range(0,n): \n\tfor j in range(i+1,n):\n\t\tk=2*j-i\n\t\tif k >= n:\n\t\t\tbreak\n\t\tif s[i]!=s[j] and s[j]!=s[k] and s[i] != s[k]:\n\t\t\tcount+=1\n\nprint(ans-count)", "def main():\n    n = int(input())\n    s = input()\n    r, g, b = s.count('R'), s.count('G'), s.count('B')\n    ans = r*g*b\n\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            k = 2*j-i\n            if 0 <= k < n:\n                if s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n                    ans -= 1\n    print(ans)\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\ns = input()\ntotal = 1\nfor c in 'RGB':\n  total *= s.count(c)\nfor i in range(1, n - 1):\n  for j in range(1, min(i + 1, n - i)):\n    if s[i] != s[i - j] and s[i - j] != s[i + j] and s[i] != s[i + j]:\n      total -= 1\nprint(total)", "from functools import reduce\nfrom operator import mul\n\ndef solve():\n  N = int(input())\n  S = input()\n  RGB_count = {'R':0,'G':0,'B':0} # R,G,B\n  RGB_set = {'R','G','B'}\n  ret = 0\n  for s in S:\n    ret += reduce(mul, [RGB_count[t] for t in RGB_set - {s}])\n    RGB_count[s] = RGB_count[s] + 1\n\n  # print(ret)\n  RGB_mergin_len = 0\n  # R.{l}G.{l}B\n  while 3+RGB_mergin_len*2 <= N:\n    for i in range(N-(3+RGB_mergin_len*2)+1):\n      j = i+1+RGB_mergin_len\n      k = i+2+2*RGB_mergin_len\n      if S[i] != S[j] and S[j] != S[k] and S[i] != S[k]:\n        ret -= 1\n\n      # print(i, j, k)\n      # print(S[i], S[j], S[k], ret)\n    RGB_mergin_len += 1\n\n  print(ret)\n  \nsolve()", "n = int(input())\ns = input()\nr, g, b = s.count('R'), s.count('G'), s.count('B')\nans = r * g * b\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        k = 2 * j - i\n        if 0 <= k < n and s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n            ans -= 1\nprint(ans)", "def abc162d_rgb_triplets():\n    n = int(input())\n    s = input()\n    r_cnt = 0\n    g_cnt = 0\n    b_cnt = 0\n    for i in range(n - 1, -1, -1):\n        if s[i] == 'R':\n            r_cnt += 1\n        elif s[i] == 'G':\n            g_cnt += 1\n        else:\n            b_cnt += 1\n\n    result = r_cnt * g_cnt * b_cnt\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            k = j + (j - i)\n            if s[i] == s[j] or k >= n or s[i] == s[k] or s[j] == s[k]: continue\n            result -= 1\n    print(result)\n\n\n\nabc162d_rgb_triplets()", "n=int(input())\ns = list(input())\ncount = s.count('R') * s.count('G') * s.count('B')\n\nfor i in range(n-2):\n  for j in range(1, (n+1-i)//2):\n    #print(sorted([s[i], s[i+j], s[i+2*j]]), txt)\n    if sorted([s[i], s[i+j], s[i+2*j]]) == ['B', 'G', 'R']:\n      count -= 1\n\nprint(count)", "N=int(input())\nS=input()\ncnt=0\nfor i in range(N):\n    left=i-1\n    right=i+1\n    while 0<=left and right<N:\n        if S[i]!=S[left] and S[i]!=S[right] and S[left]!=S[right]:\n            cnt+=1\n        left-=1\n        right+=1\nx=S.count('R')\ny=S.count('G')\nz=S.count('B')\nprint((x*y*z-cnt))\n", "n=int(input())\ns=input()\nR=[]\nG=[]\nB=[]\ndef f():\n  for i in range(n):\n    if s[i]==\"R\":\n      R.append(i)\n    elif s[i]==\"G\":\n      G.append(i)\n    else:\n      B.append(i)\n  r=len(R)\n  g=len(G)\n  b=len(B)\n  if r==0 or g==0 or b==0:\n    return 0\n  else:\n    ans=r*g*b\n    m=0\n    for j in range(1,n-1):\n      for k in range(1,min(j,n-1-j)+1):\n        lt=s[j-k]\n        md=s[j]\n        rt=s[j+k]\n        if lt!=md and md!=rt and rt!=lt:\n          m+=1\n    return ans-m\nprint(f())", "from collections import Counter\ndef main():\n    n=int(input())\n    s=input()\n    d=Counter(s)\n    a=d[\"R\"]*d[\"G\"]*d[\"B\"]\n    for i in range(n):\n        t=min(n-i-1, i)\n        for j in range(t+1):\n            if s[i-j] != s[i] and s[i-j] != s[i+j] and s[i] != s[i+j]:\n                a-=1\n    print(a)\n    \ndef __starting_point():\n    main()\n__starting_point()", "N = int(input())\nS = list(input())\n\nr = S.count('R')\ng = S.count('G')\nb = S.count('B')\n\ncnt = 0\nfor i in range(N-3):\n    if S[i] == 'R':\n        r -= 1\n        cnt += g * b \n        l = 1\n        while (i + 2 * l < N):\n            if (S[i+l] == 'G' and S[i+2*l] == 'B') or (S[i+l] == 'B' and S[i+2*l] == 'G'):\n                cnt -= 1\n            l += 1\n    if S[i] == 'G':\n        g -= 1\n        cnt += r * b \n        l = 1\n        while (i + 2 * l < N):\n            if (S[i+l] == 'R' and S[i+2*l] == 'B') or (S[i+l] == 'B' and S[i+2*l] == 'R'):\n                cnt -= 1\n            l += 1\n    if S[i] == 'B':\n        b -= 1\n        cnt += g * r\n        l = 1\n        while (i + 2 * l < N):\n            if (S[i+l] == 'G' and S[i+2*l] == 'R') or (S[i+l] == 'R' and S[i+2*l] == 'G'):\n                cnt -= 1\n            l += 1\nprint(cnt)\n", "n=int(input())\nS=str(input())\nr=S.count('R')\ng=S.count('G')\nb=S.count('B')\ncnt=r*g*b\n\nfor j in range(2, n, 2):\n    for i in range(0, n-j):\n        k = (2 * i + j) // 2\n        if S[i] != S[i+j] and S[i] != S[k] and S[k] != S[i+j]:\n            cnt -= 1\n\nprint(cnt)", "from sys import stdin\nnii=lambda:map(int,stdin.readline().split())\nlnii=lambda:list(map(int,stdin.readline().split()))\nfrom collections import Counter\n\nn=int(input())\ns=input()\nc=Counter(s)\n\nans=c['R']*c['G']*c['B']\n\nlim=n//2\nfor i in range(1,n//2+1):\n  for j in range(i,n-i):\n    l=s[j-i]\n    m=s[j]\n    r=s[j+i]\n    if l!=m and m!=r and r!=l:\n      ans-=1\n\nprint(ans)", "\ndef main():\n    '''\n    #\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3068\u3001tle\u306b\u306a\u308b\n    n = int(input())\n    s = input()\n    cnt = 0\n    for i in range(len(s)):\n        x = s[i]\n        for j in range(i+1, len(s)):\n            y = s[j]\n            if x == y:\n                continue\n            for k in range(j+1, len(s)):\n                z = s[k]\n                if z == x or z == y:\n                    continue\n                if j - i == k - j:\n                    continue\n                cnt += 1\n                # print(f\"{i} {j} {k}\")\n    print(cnt)\n    '''\n    n = int(input())\n    s = input()\n    cnt = [0]*3\n    ans = 1\n    for i in s:\n        if i == 'R':cnt[0]+=1\n        elif i == 'G':cnt[1]+=1\n        else:cnt[2]+=1\n    for i in cnt:\n        ans *= i\n    for i in range(n):\n        for j in range(i+1,n):\n            k = j + (j - i)\n            if k < n:\n                if s[i] == s[j]: continue\n                if s[j] == s[k]: continue\n                if s[k] == s[i]: continue\n                ans -= 1\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n = int(input())\ns = input()\n\nans = s.count('R') * s.count('G') * s.count('B')\n\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        k = 2*j-i\n        if k < n:\n            if s[k] != s[i] and s[k] != s[j] and s[i] != s[j]:\n                ans -= 1\n        else:\n            break\nprint(ans)", "import math\nimport sys\nimport os\nfrom operator import mul\nimport bisect\n\nsys.setrecursionlimit(10**7)\n\ndef _S(): return sys.stdin.readline().rstrip()\ndef I(): return int(_S())\ndef LS(): return list(_S().split())\ndef LI(): return list(map(int,LS()))\n\nif os.getenv(\"LOCAL\"):\n    inputFile = basename_without_ext = os.path.splitext(os.path.basename(__file__))[0]+'.txt'\n    sys.stdin = open(inputFile, \"r\")\nINF = float(\"inf\")\n\nN = I()\nS = list(_S())\nans = 0\n\nr = []\ng = []\nb = []\n\nfor i,s in enumerate(S):\n    if s == 'R':\n        r.append(i)\n    if s == 'G':\n        g.append(i)\n    if s == 'B':\n        b.append(i)\n\n# j = bisect.bisect_right(<list>,<value>)\n# print(r)\n# print(g)\n# print(b)\n\n# for i in r:\n#     for j in g:\n#         for k in b:\n#             tmp = sorted([i,j,k])\n#             if not tmp[1]-tmp[0]==tmp[2]-tmp[1]:\n#                 ans += 1\n\nans = len(r)*len(g)*len(b)\n\nfor i in range(N):\n    for j in range(i,N):\n        k = j + (j-i)\n        if k > N-1:\n            break\n        if S[i]==S[j]:\n            continue\n        if S[i]==S[k] or S[j]==S[k]:\n            continue\n        ans -= 1\n\nprint(ans)\n\n# R G B\n# R B G\n# G B R\n# G R B\n# B G R\n# B R G\n\n# i   j   k\n#  - != -\n\n# RBRBGRBGGB\n# 1122233333\n# 0000111233\n# 0112223334\n\n# B*3\n# G*4\n\n# GB\u7cfb: (2,4), (4,5)\n# RB\u7cfb: (1,3),\n", "import sys\nfrom collections import deque, defaultdict, Counter\nfrom itertools import accumulate, product, permutations, combinations\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect_right\nfrom heapq import heappop, heappush\nfrom math import ceil, floor, sqrt, gcd, inf\nfrom copy import deepcopy\nimport numpy as np\nimport scipy as sp\n\nINF = inf\nMOD = 1000000007\n\nn = int(input())\ns = input()\n\ntmp = 0\nres = s.count(\"R\") * s.count(\"G\") * s.count(\"B\")\n\nfor i in range(n - 2):\n    for j in range(i + 1, floor((n + i + 1) / 2)):\n        k = 2 * j - i\n        if s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n            res -= 1\n\nprint(res)\n", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    n = int(input())\n    s = input()\n\n    res = s.count('R') * s.count('G') * s.count('B')\n    if res == 0:\n        print((0))\n        return\n    for i1 in range(n):\n        for i2 in range(i1+1, n):\n            i3 = i2 * 2 - i1\n            if i3 <= n - 1:\n                res -= s[i1] != s[i2] and s[i1] != s[i3] and s[i2] != s[i3]\n    print(res)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nS=input()\nc=S.count\nx=c(\"R\")*c(\"G\")*c(\"B\")\nc=0\nfor i in range(N):\n for j in range(i+1,N):\n  if S[i]!=S[j]:\n   k=2*j-i\n   if k<N and S[k]!=S[i] and S[k]!=S[j]:x-=1\nprint(x)", "n = int(input())\ns = list(input())\n\ncnt = 0\nfor j in range(2, n, 2):\n    for i in range(0, n-j):\n        k = (2 * i + j) // 2\n        if s[i] != s[i+j] and s[i] != s[k] and s[k] != s[i+j]:\n            cnt += 1\n\nr, g, b = 0, 0, 0\nfor i in range(n):\n    if s[i] == \"R\":\n        r += 1\n    elif s[i] == \"G\":\n        g += 1\n    else:\n        b += 1\n\nprint(r*g*b-cnt)", "import math\nfrom math import gcd,pi\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return list(map(int, input().split()))\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n = i_input()\n    s = s_input()\n\n    r_cn = s.count(\"R\")\n    g_cn = s.count(\"G\")\n    b_cn = s.count(\"B\")\n\n    ans = r_cn*g_cn*b_cn\n\n    for i in range(n):\n        for d in range(n):\n            j = i+d\n            k = j+d\n            if k >=n:\n                break\n            if s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n                ans -= 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n=int(input())\ns=input()\nr=s.count('R')\ng=s.count('G')\nb=s.count('B')\ncnt=0\nfor i in range(n-1):\n    for j in range(1, min(i+1, n-i)):\n            if (s[i] != s[i-j]) and (s[i] != s[i+j]) and (s[i-j] != s[i+j]):\n                cnt += 1\nprint(r*g*b-cnt)", "N=int(input())\nS=input()\nSS=[]\nfor i in range(N):\n  if S[i]=='R':SS.append(1)\n  elif S[i]=='G':SS.append(2)\n  else:SS.append(4)\ns=0\nfor i in range(1,N-1):\n  for j in range(1,min(i+1,N-i)):\n    if SS[i-j]+SS[i]+SS[i+j]==7:\n      s+=1\nprint(SS.count(1)*SS.count(2)*SS.count(4)-s)", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time, copy,bisect\n#from operator import itemgetter\n#from heapq import heappush, heappop\n#import numpy as np\n#from scipy.sparse.csgraph import shortest_path, floyd_warshall, dijkstra, bellman_ford, johnson\n#from scipy.sparse import csr_matrix\n#from decimal import Decimal, ROUND_HALF_UP, ROUND_HALF_EVEN\nimport sys\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\nmod = 10**9 + 7\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nnf = lambda: float(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nnb = lambda: list(map(float, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nN = ni()\nS = ns()\nd = {'R': 0, 'G': 0, 'B': 0}\nfor i in range(N):\n    d[S[i]] += 1\nans = 1\nfor v in d.values():\n    ans *= v\nfor i in range(N):\n    for j in range(i+1, N):\n        k = j + (j - i)\n        if k >= N:\n            break\n        if S[i] != S[j] and S[j] != S[k] and S[i] != S[k]:\n            ans -= 1\nprint(max(ans, 0))", "import collections\nimport sys\nimport math\nsys.setrecursionlimit(10 ** 7)\ndef input() : return sys.stdin.readline().strip()\ndef INT()   : return int(input())\ndef MAP()   : return map(int,input().split())\ndef LIST()  : return list(MAP())\ndef NIJIGEN(H): return [list(input()) for i in range(H)]\nN=INT()\nS=input()\nif N<3:\n  print(0)\n  return\nr=S.count(\"R\")\ng=S.count(\"G\")\nb=S.count(\"B\")\nans=r*g*b\nfor i in range(N-2):\n  for j in range(i+1,N-1):\n    k=j*2-i\n    if k>=N:\n      continue\n    if S[j]!=S[i] and S[k]!=S[i] and S[j]!=S[k]:\n      ans-=1\nprint(ans)", "N=int(input())\nS=str(input())\nans=S.count('R')*S.count('G')*S.count('B')\n\nfor i in range(N-2):\n  for j in range(i+1,N-1):\n    if S[i]==S[j]:\n      continue\n    if 2*j - i < N:\n      if S[2*j - i] != S[i] and S[2*j - i] != S[j]:\n        ans-=1\nprint(ans)\n", "n=int(input())\ns=input()\nans=s.count(\"R\")*s.count(\"G\")*s.count(\"B\")\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        if 2*j-i>n-1:\n            break\n        if s[i]!=s[j] and s[j]!=s[2*j-i] and s[i]!=s[2*j-i]:\n            ans-=1\nprint(ans)", "N = int(input())\nS = list(input())\nr, g, b = 0, 0, 0\nfor s in S:\n    if s == 'R':\n        r += 1\n    elif s == 'G':\n        g += 1\n    else:\n        b += 1\nans = r * g * b\nfor i in range(N - 2):\n    for j in range(i + 1, N - 1):\n        k = 2 * j - i\n        if k < N:\n            if S[i] != S[j] and S[j] != S[k] and S[k] != S[i]:\n                ans -= 1\nprint(ans)", "from collections import Counter\nN = int(input())\nS = input()\nD = Counter(S)\nans = 1\nfor d in D.values():\n    ans *= d\n\nif len(D.values()) < 3:\n    ans = 0\n\nfor i in range(N):\n    for x in range(1, (N-i+1)//2):\n        if S[i] != S[i+x] and S[i+x] != S[i+2*x] and S[i+2*x] != S[i]:\n            ans -= 1\nprint(ans)", "N=int(input())\nS=input()\nx=S.count(\"R\")*S.count(\"G\")*S.count(\"B\")\nc=0\nfor i in range(N):\n for j in range(i+1,N):\n  if S[i]!=S[j]:\n   k=2*j-i\n   if k<N and S[k]!=S[i] and S[k]!=S[j]:c+=1\nprint(x-c)", "N = int(input())\nS = input()\n\nR = []\nG = []\nB = []\n\nfor i in range(N):\n    if S[i] == 'R':\n        R.append(i+1)\n    elif S[i] == 'G':\n        G.append(i+1)\n    elif S[i] == 'B':\n        B.append(i+1)\n\nlenb = len(B)\n\ncnt = 0\nfor r in R:\n    for g in G:\n        up = max(r, g)\n        down = min(r, g)\n        diff = up - down\n        \n        chk = 0\n        if up + diff <= N:\n            if S[up+diff-1] == 'B':\n                chk += 1\n        if down-diff >= 1:\n            if S[down-diff-1] == 'B':\n                chk += 1\n        if diff%2 == 0:\n            if S[int(up-diff/2-1)] == 'B':\n                chk += 1\n        cnt += lenb - chk\n\nprint(cnt)\n", "import sys\nfrom collections import Counter\nN = int(input())\nS = list(input())\nSc = Counter(S)\nR = Sc[\"R\"]\nG = Sc[\"G\"]\nB = Sc[\"B\"]\nif R == 0 or G == 0 or B == 0:\n    print((0))\n    return\nelse:\n    ans = R*G*B\nfor i in range(1, N//2+2):\n    for j in range(N):\n        if j+i+i >= N:\n            break\n        if S[j] == S[j+i]:\n            continue\n        if S[j] == S[j+i+i]:\n            continue\n        if S[j+i] == S[j+i+i]:\n            continue\n        ans -= 1\nprint(ans)\n", "# -*- coding: utf-8 -*-\nimport sys\nfrom collections import Counter\n\n\ndef main():\n    N = int( sys.stdin.readline() )\n    S = sys.stdin.readline().rstrip()\n\n    cnt_dic = Counter(S)\n    ans = cnt_dic[\"R\"] * cnt_dic[\"G\"] * cnt_dic[\"B\"]\n\n    for i in range(N):\n        for j in range(i+1, N):\n            k = 2*j - i\n\n            if (k < len(S)) and (S[i] != S[j]) and (S[j] != S[k]) and (S[k] != S[i]):\n                ans -= 1\n\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N = int(input())\nS = input()\nC = {\"R\", \"G\", \"B\"}\ncumsum = {c:[0 for i in range(N)] for c in C}\n\nfor i in range(N):\n  s = S[i]\n  cumsum[s][i] = 1\nfor i in range(2, N+1):\n  for c in C:\n    cumsum[c][-i] = cumsum[c][-i] + cumsum[c][-(i-1)]\n#print(cumsum)\nans = 0\nfor i in range(N-2):\n  s = S[i]\n  a, b = C - {s}\n  ans += cumsum[a][i]*cumsum[b][i]\n\nfor i in range(1, (N-1)//2 + 1):\n  for j in range(N-2*i):\n    #print(j, j+i, j+2*i, S[j]+S[j+i]+S[j+2*i])\n    if S[j] != S[j+i] and S[j+i] != S[j+2*i] and S[j] != S[j+2*i]:\n      ans -= 1\nprint(ans)\n", "n = int(input())\ns = input()\n\nr = s.count('R')\ng = s.count('G')\nb = s.count('B')\nans = r*g*b\n\nfor i in range(n):\n    for d in range(n):\n        j = i + d\n        k = j + d\n        if k >= n:\n            break\n        if s[i] != s[j] and s[i] != s[k] and s[j] != s[k]:\n            ans -= 1\n\nprint(ans)\n", "N = int(input())\nS = input()\nlsS = list(S)\nlscount = [lsS.count('R'),lsS.count('G'),lsS.count('B')]\nans = 1\nfor i in lscount:\n    ans *= i\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        if lsS[i] == lsS[j]:\n            continue\n        if 2*j-i <= N-1:\n            if lsS[i] != lsS[2*j-i] and lsS[j] != lsS[2*j-i]:\n                ans -= 1\n        else:\n            break\nprint(ans)", "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n\nN = int(input())\nS = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\nall = S.count(\"R\") * S.count(\"G\") * S.count(\"B\")\n\ncnt = 0\nfor i in range(N):\n    for j in range(i, N):\n        k = 2 * j - i\n        if k >= N:\n            continue\n        if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:\n            cnt += 1\nprint(all - cnt)", "import sys\n#import time\nfrom collections import deque, Counter, defaultdict\n#from fractions import gcd\nimport bisect\nimport heapq\nimport math\nimport itertools\nimport numpy as np\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**8)\ninf = 10**18\nMOD = 1000000007\nri = lambda : int(input())\nrs = lambda : input().strip()\nrl = lambda : list(map(int, input().split()))\nmod = 998244353\n\nn = ri()\ns = rs()\nr_li, g_li, b_li = [], [], []\nfor i in s:\n    if i == \"R\":\n        r_li.append(i)\n    if i == \"G\":\n        g_li.append(i)\n    if i == \"B\":\n        b_li.append(i)\nans = len(r_li) * len(g_li) * len(b_li)\ncnt=0\nfor res in range(1, n//2 + 1):\n    for i in range(0, n):\n        if i+2*res<=n-1:\n            if s[i] != s[i+res] and s[i+res]!=s[i+res+res] and s[i+res+res]!=s[i]:\n                cnt+=1\n        else:\n            break\n\nprint(ans-cnt)", "from collections import *\n\nN=int(input())\nS=input()\nc=Counter(S)\n\nans=c['R']*c['G']*c['B']\n\nfor i in range(1,N//2+1):\n  for j in range(i,N-i):\n    if S[j-i]!=S[j] and S[j]!=S[j+i] and S[j+i]!=S[j-i]:\n      ans-=1\n\nprint(ans)\n", "n = int(input())\ns = input()\nr,g,b = 0,0,0\nfor i in range(n):\n    if s[i]==\"R\":\n        r+=1\n    elif s[i]==\"G\":\n        g+=1\n    elif s[i]==\"B\":\n        b+=1\nans = r*g*b\n\nfor i in range(n):\n    for j in range(i+1,n):\n        k = j + j-i\n        if k<n:\n            if s[i]!=s[j] and s[j]!=s[k] and s[k]!=s[i]:\n                ans -= 1\nprint(ans)", "n=int(input())\nS=str(input())\nr=S.count('R')\ng=S.count('G')\nb=S.count('B')\ncnt=r*g*b\nfor i in range(n):\n    for a in range(1,n):\n        j=i+a\n        k=j+a\n        if k>=n:\n            break\n        if S[i]!=S[j] and S[j]!=S[k] and S[k]!=S[i]:\n            cnt-=1\n\nprint(cnt)", "n = int(input())\ns = input()\nr = s.count('R')\ng = s.count('G')\nb = s.count('B')\nans = r * g * b\n\nfor i in range(n):\n    for j in range(i+1,n):\n        if s[i] == s[j]:\n            continue\n        k = 2*j - i\n        if k >= n or s[k] == s[i] or s[k] == s[j]:\n            continue\n        ans -= 1\n        \nprint(ans)", "\nN = int(input())\nS = input()\n\nris = [i for i, s in enumerate(S) if s == \"R\"]\ngis = [i for i, s in enumerate(S) if s == \"G\"]\nbis = [i for i, s in enumerate(S) if s == \"B\"]\n\nall = len(ris) * len(gis) * len(bis)\n\ncnt = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        k = 2*j - i\n        if 0 <= k < N:\n            if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:\n                cnt += 1\n\nans = all - cnt\n\n\nprint(ans)\n", "n=int(input())\ns='*'+input()\nr=s.count('R')\ng=s.count('G')\nb=s.count('B')\ncnt=0\nfor i in range(1,n+1):\n    for j in range(i,n+1):\n        k=2*j-i\n        if k>n:\n            continue\n        if s[i]!=s[j] and s[j]!=s[k] and s[k]!=s[i]:\n            cnt+=1\nprint(r*g*b-cnt)", "n = int(input())\ns = input()\nr, g, b = [], [], []\ncnt = 1\nfor i in s:\n    if i == 'R':\n        r.append(cnt)\n    elif i == 'G':\n        g.append(cnt)\n    else:\n        b.append(cnt)\n    cnt += 1\nrd = set(map(lambda x: x * 2, r)) #\u4ee5\u4e0b2\u3064\u76ee\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u3082\u306e(j - i = k - j)\u306e\u6570\u3048\u4e0a\u3052\ngd = set(map(lambda x: x * 2, g))\nbd = set(map(lambda x: x * 2, b))\nddc = 0\nfor i in r:\n    for j in g:\n        if i + j in bd:\n            ddc += 1\nfor j in g:\n    for k in b:\n        if j + k in rd:\n            ddc += 1\nfor i in r:\n    for k in b:\n        if i + k in gd:\n            ddc += 1\nprint(len(r) * len(g) * len(b) - ddc) #1\u3064\u76ee\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u30e2\u30ce\u304b\u30892\u3064\u76ee\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u3082\u306e\u3092\u5f15\u304f", "N = int(input())\nS = input()\nans = S.count(\"R\")*S.count(\"G\")*S.count(\"B\")\n\nfor i in range(N):\n  for j in range(i+1,N):\n    k = 2*j-i\n    if k<N and S[i]!=S[j]!=S[k]!=S[i]:\n      ans-=1\n\nprint(ans)", "def main() -> None:\n    n = int(input())\n    s = input()\n\n    answer = s.count('R') * s.count('G') * s.count('B')\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            k = 2*j - i\n            if k<n and s[i]!=s[j] and s[j]!=s[k] and s[k]!=s[i]:\n                answer -= 1\n    print(answer)\n    return\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input());S=input();C=set(\"RGB\");L=[{c:0for c in C}];M=L[:];z=-sum(C==set(S[j]+S[j+r]+S[j+2*r])for r in range(1,(N+1)//2)for j in range(N-2*r))\nfor c in S:L+=[L[-1].copy()];L[-1][c]+=1\nfor c in reversed(S):M+=[M[-1].copy()];M[-1][c]+=1\nfor c,l,m in zip(S,L,reversed(M[:-1])):a,b=C-set(c);z+=l[a]*m[b]+l[b]*m[a]\nprint(z)", "N=int(input())\nS=input()\ncntR,cntG,cntB=S.count('R'),S.count('G'),S.count('B')\n\nans=cntR*cntG*cntB\n\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        if S[i]!=S[j]:\n            k=2*j-i\n            if k<N and S[k]!=S[i] and S[k]!=S[j]:\n                ans-=1\n\nprint(ans)", "N=int(input())\nS=input()\n\nfrom collections import Counter\nx=list(Counter(S).values())\n\nif len(x)<3:\n    print(0)\n    return\n\nc=0\nfor i in range(N):\n j=i+1\n for j in range(i+1,N):\n  if S[i]!=S[j]:\n   k=2*j-i\n   if k<N and (S[k]!=S[i] and S[k]!=S[j]):c+=1\nprint(x[0]*x[1]*x[2]-c)", "n = int(input())\ns = input()\nr, g, b = [], [], []\ncnt = 1\nfor i in s:\n    if i == 'R':\n        r.append(cnt)\n    elif i == 'G':\n        g.append(cnt)\n    else:\n        b.append(cnt)\n    cnt += 1\nrd = set(map(lambda x: x * 2, r))\ngd = set(map(lambda x: x * 2, g))\nbd = set(map(lambda x: x * 2, b))\nddc = 0\nfor i in r:\n    for j in g:\n        if i + j in bd:\n            ddc += 1\nfor j in g:\n    for k in b:\n        if j + k in rd:\n            ddc += 1\nfor i in r:\n    for k in b:\n        if i + k in gd:\n            ddc += 1\nprint(len(r) * len(g) * len(b) - ddc)", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    n = int(input())\n    s = input()\n\n    res = s.count('R') * s.count('G') * s.count('B')\n    if res == 0:\n        print(0)\n        return\n    for i1 in range(n):\n        for i2 in range(i1+1, n):\n            i3 = i2 * 2 - i1\n            if i3 <= n - 1:\n                if s[i1] != s[i2] and s[i1] != s[i3] and s[i2] != s[i3]:\n                    res -= 1\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n=int(input())\n    s=input()\n    sm=s.count(\"R\")*s.count(\"G\")*s.count(\"B\")\n    for i in range(1,(n-1)//2+1):\n        for j in range(n-2*i):\n            if len(set(s[j]+s[j+i]+s[j+2*i]))==3 : sm-=1\n    print(sm)\n\nmain() ", "n = int(input())\ns = input()\n\nr = s.count('R')\ng = s.count('G')\nb = s.count('B')\n\nres = r*g*b\n\nfor i in range(n):\n    for j in range(n):\n        jj = i+j\n        k = jj+j\n        if k >= n: break\n        if s[i]!=s[jj] and s[jj]!=s[k] and s[k]!=s[i]:\n            res-=1\n\nprint(res)\n", "N = int(input())\nS = input()\nlsS = list(S)\nlscount = [lsS.count('R'),lsS.count('G'),lsS.count('B')]\nans = 1\nf = False\nfor i in lscount:\n    ans *= i\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        if lsS[i] == lsS[j]:\n            continue\n        if 2*j-i <= N-1:\n            if lsS[i] != lsS[2*j-i] and lsS[j] != lsS[2*j-i]:\n                ans -= 1\n        else:\n            f = True\n            break\nprint(ans)", "n = int(input())\ns = input()\n\nr = s.count(\"R\")\ng = s.count(\"G\")\nb = s.count(\"B\")\n\nans = r * g * b\nfor i in range(n - 2):\n    interval = 1\n    while i + 2 * interval < n:\n        if s[i] != s[i + interval] and s[i] != s[i + 2 * interval] and s[i + interval] != s[i + 2 * interval]:\n            ans -= 1\n        interval += 1\n\nprint(ans)", "N = int(input())\nS = list(input())\nR = []\nG = []\nfor i in range(N):\n  if S[i] == \"R\":\n    R.append(i)\n  elif S[i] == \"G\":\n    G.append(i)\nr = len(R)\ng = len(G)\nans = r * g * (N - r - g)\nfor i in R:\n  for j in G:\n    a = 2 * i - j\n    b = 2 * j - i\n    c = i + j\n    if 0 <= a < N and S[a] == \"B\":\n      ans -= 1\n    if 0 <= b < N and S[b] == \"B\":\n      ans -= 1\n    if c % 2 == 0 and S[c//2] == \"B\":\n      ans -= 1\nprint(ans)", "def main():\n    n = int(input())\n    s = input()\n    ans = s.count('R') * s.count('G') * s.count('B')\n    for i in range(n-2):\n      for j in range(i+1, n-1):\n        if j - i > n - j - 1:\n          break\n        if s[i] != s[j] and s[j] != s[2*j-i] and s[2*j-i] != s[i]:\n          ans -= 1\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "#!/usr/bin/env python3\n\n#import\n#import math\n#import numpy as np\nN = int(input())\nS = list(input())\n\nans = S.count(\"R\") * S.count(\"G\") * S.count(\"B\")\n\nfor i in range(N - 2):\n    for j in range(i + 1, N - 1):\n        k = j * 2 - i\n        if k >= N:\n            break\n\n        if S[i] != S[j] and S[i] != S[k] and S[j] != S[k]:\n            ans -= 1\n\nprint(ans)", "n=int(input())\ns,rem=input(),0\nans = s.count('R') * s.count('B') * s.count('G')\n\nfor i in range(1, (n-1) // 2 + 1):\n  for j in range(i*2, n):\n    if s[j]+s[j-i]+s[j-2*i] in (\"RGB\",\"RBG\",\"GRB\",\"GBR\",\"BGR\",\"BRG\"):\n      rem += 1\n    \nprint(ans - rem)", "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\n    n = int(input())\n    s = input()\n\n    res = s.count('R') * s.count('G') * s.count('B')\n    if res == 0:\n        print(0)\n        return\n    for i1 in range(n):\n        for i2 in range(i1+1, n):\n            if i2 * 2 - i1 <= n - 1:\n                if s[i1] != s[i2]:\n                    res -= s[i1] != s[i2*2 - i1] and s[i2] != s[i2*2 - i1]\n    print(res)\n\ndef __starting_point():\n    main()\n__starting_point()", "\ndef __starting_point():\n\n    n = int(input())\n    s = list(input())\n\n    #\u305d\u308c\u305e\u308c\u306e\u7d44\u307f\u5408\u308f\u305b\u6570\u3092\u6c42\u3081\u308b\n    R = s.count(\"R\")\n    G = s.count(\"G\")\n    B = s.count(\"B\")\n    \n    sm = R*G*B\n    #print(\"\u7d44\u307f\u5408\u308f\u305b\u6570=\"+str(sm))\n    \n    #cond2\u306e\u6761\u4ef6\u304b\u3089\n    #j-i = k-j\u306e\u6642\u306ek\u3092\u6c42\u3081\u308b\n    # k = 2j - i \u306a\u306e\u3067\n    for i in range(n):\n        for j in range(i+1,n):\n            k = 2*j - i\n            if k < n:\n                #print(s[i],s[j],s[k])\n                #\u7b49\u9593\u9694\u306e\u5834\u5408\u306fsm\u304b\u3089-1\u3059\u308b\n                if s[i] != s[j] and s[j] != s[k] and s[i] != s[k]:\n                    sm -= 1\n    print(sm)\n\n__starting_point()", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Tue Sep  8 01:23:04 2020\n\n@author: liang\n\"\"\"\n\nN = int(input())\nS = input()\nR_list = list()\nG_list = list()\nB_list = list()\n\nfor i in range(N):\n    if S[i] == 'R':\n        R_list.append(i)\n    elif S[i] == 'G':\n        G_list.append(i)\n    else:\n        B_list.append(i)\n#print(R_list, G_list, B_list)\nans = len(R_list)*len(G_list)*len(B_list)\n\"\"\"\nset1 = set()\nfor r in R_list:\n    for g in G_list:\n        # r < g\n        if r > g:\n           # print(r,g)\n            r, g = g, r ##\u30c0\u30e1\n           \n            \u3010r\u306f\u7d76\u5bfe\u66f8\u304d\u63db\u3048\u305f\u3089\u30c0\u30e1\u3011\n            g\u306efor\u6587\u4e2d r\u306e\u5024\u306f\u56fa\u5b9a\u3057\u3066\u8003\u3048\u3066\u3044\u308b\u306e\u3067\u3001\n            \u5916\u5074\u30eb\u30fc\u30d7\u306e\u5909\u6570\u3092\u66f8\u304d\u63db\u3048\u308b\u3088\u3046\u306a\u6f14\u7b97\u3092\u3057\u3066\u306f\u3044\u3051\u306a\u3044\n              => for\u6587\u5185\u3067\u5225\u306e\u5909\u6570\uff08\u30b3\u30d4\u30fc\uff09\u3092\u7528\u610f\u3057\u3001\u305d\u306e\u30b3\u30d4\u30fc\u306b\u3064\u3044\u3066\u6f14\u7b97\u3092\u884c\u3046\u3053\u3068\n           \n            #print(r,g)\n        if 2*g - r < N and S[2*g-r] == 'B':\n            set1.add((r,g))\n            ans -= 1\n        if 2*r - g >= 0 and S[2*r-g] == 'B':\n            set1.add((r,g))\n            ans -= 1\n        if (r+g)%2 == 0 and S[(r+g)//2] =='B':\n            set1.add((r,g))\n            ans -= 1   \n#ans = len(R_list)*len(G_list)*len(B_list)         \n\"\"\"\nfor r in R_list:\n    for g in G_list:\n        up = max(r,g)\n        down = min(r,g)\n        diff = up - down\n        if up + diff < N and S[up+diff] == 'B':\n            ans -= 1\n        if down - diff >= 0 and S[down - diff] == 'B':\n            ans -= 1\n        if diff%2 == 0 and S[down + diff//2] =='B':\n            ans -= 1\n\nprint(ans)\n", "'''\nCreated on 2020/09/07\n\n@author: harurun\n'''\ndef main():\n  import sys\n  pin=sys.stdin.readline\n  pout=sys.stdout.write\n  perr=sys.stderr.write\n\n  N=int(pin())\n  S=pin()[:-1]\n  r=0\n  g=0\n  b=0\n  cnt=0\n  for i in range(N):\n    if S[i]==\"R\":\n      r+=1\n    elif S[i]==\"G\":\n      g+=1\n    elif S[i]==\"B\":\n      b+=1\n    for j in range(i+1,N):\n      k=2*j-i\n      if k>=N:\n        continue \n      if S[i]!=S[j] and S[j]!=S[k] and S[k]!=S[i]:\n        cnt+=1\n  print(r*g*b-cnt)\n  return \nmain()", "from functools import reduce\nfrom operator import mul\nfrom collections import Counter\n\ndef solve():\n  N = int(input())\n  S = input()\n  ret = 0\n  RGB_ = {'R':0, 'G':0, 'B':0}\n  counter = Counter(S)\n  for k,v in counter.items(): RGB_[k] += v\n  ret = reduce(mul, RGB_.values())\n\n  # print(ret)\n  RGB_mergin_len = 0\n  # R.{l}G.{l}B \u3092\u5f15\u304f\n  while 3+RGB_mergin_len*2 <= N:\n    for i in range(N-(3+RGB_mergin_len*2)+1):\n      j = i+1+RGB_mergin_len\n      k = i+2+2*RGB_mergin_len\n      if S[i] != S[j] and S[j] != S[k] and S[i] != S[k]:\n        ret -= 1\n\n      # print(i, j, k)\n      # print(S[i], S[j], S[k], ret)\n    RGB_mergin_len += 1\n\n  print(ret)\n  \nsolve()", "n=int(input())\ns=input()\nans=s.count(\"R\")*s.count(\"G\")*s.count(\"B\")\nfor i in range(min(1,n//3),((n-1)//2)+1):\n    for j in range(n-(i*2)):\n        if s[j]!=s[j+i] and s[j+i]!=s[j+i+i] and s[j+i+i]!=s[j]:\n            ans-=1\nprint(ans)\n", "n=int(input())\ns=list(input())\n\n\nans=(s.count(\"R\"))*(s.count(\"G\"))*(s.count(\"B\"))\n\nfor i in range(n) :\n    a=s[i]\n    for j in range(i+1,n) :\n        b=s[j]\n        if 2*j-i>n-1 :\n            break\n        c=s[2*j-i]\n        if (a!=b) and (b!=c) and (c!=a) :\n            ans-=1\n\nprint(ans)", "N = int(input())\nS = list(input())\n\ni = 1\ncount = 0\nwhile i * 2 < N:\n    n = 0\n    while n + i * 2 < N:\n        if (S[n] != S[n+i]) and (S[n+i] != S[n+2*i]) and (S[n] != S[n+i*2]):\n            count += 1\n            #print(S[n], S[n+i], S[n+2*i])\n        n += 1\n    i += 1\n\nprint(S.count('G') * S.count('R') * S.count('B') - count)", "N,S=int(input()),input()\nr,g,b=0,0,0\nfor i in list(S):\n    if i=='R':r+=1\n    if i=='G':g+=1\n    if i=='B':b+=1\nans=r*g*b\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        if j-i>N-j-1:break\n        if S[i]!=S[j]and S[j]!=S[2*j-i]and S[2*j-i]!=S[i]:\n            ans-=1\nprint(ans)", "def main():\n    N = int(input())\n    S = input()\n    cnt = 0\n    for i in range(N):\n        for j in range(i + 1, N):\n            k = 2 * j - i\n            if k >= N:\n                continue\n            if S[j] != S[i] and S[i] != S[k] and S[k] != S[j]:\n                cnt += 1\n    print((S.count(\"R\") * S.count(\"B\") * S.count(\"G\") - cnt))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from collections import *\n\nN=int(input())\nS=input()\nc=Counter(S)\n\nans=c['R']*c['G']*c['B']\n\nfor i in range(N):\n  for j in range(i+1,N):\n    if S[i]==S[j]:\n      continue\n    k=j*2-i\n    if k>=N or S[k]==S[i] or S[k]==S[j]:\n      continue\n    ans-=1\n\nprint(ans)\n", "n=int(input())\ns=input()\nr=s.count(\"R\")\ng=s.count(\"G\")\nb=s.count(\"B\")\nans=r*g*b\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        if 2*j-i>n-1:\n            break\n        if s[i]!=s[j] and s[j]!=s[2*j-i] and s[i]!=s[2*j-i]:\n            ans-=1\nprint(ans)", "N = int(input())\nS = input()\n\nans = S.count(\"R\") * S.count(\"G\") * S.count(\"B\")\n\nfor i in range(1,N-1):\n  for j in range(i+1,N):\n    k = 2 * j - i\n    if k > N:\n      break\n    if S[i-1] != S[j-1] and S[j-1] != S[k-1] and S[k-1] != S[i-1]:\n      ans -= 1\n      \nprint(ans)", "n = int(input())\ns = input()\n\nr = s.count(\"R\")\ng = s.count(\"G\")\nb = s.count(\"B\")\nrgb = r*g*b\n\nfor i in range(n-1):\n  for j in range(i+1,n):\n    k = 2*j-i\n    if k > n-1 or s[i] == s[j] or s[i] == s[k] or s[j] == s[k]: continue\n    rgb -= 1\nprint(rgb)", "N = int(input())\nS = input()\nr, g, b =[], [], []\nfor idx, w in enumerate(S):\n  if w == \"R\":\n    r.append(idx+1)\n  elif w==\"G\":\n    g.append(idx+1)\n  elif w==\"B\":\n    b.append(idx+1)\nif len(r)>=len(b) and len(r)>=len(g):\n  L, M, S = r, g, b\nelif len(b)>=len(r) and len(b)>=len(g):\n  L, M, S = b, g, r\nelif len(g)>=len(r) and len(g)>=len(b):\n  L, M, S = g, r, b\nL = set(L)\nans = len(S)*len(L)*len(M)\nfor s in S:\n  for m in M:\n    tmp = sorted([s, m])\n    if (tmp[0] - (tmp[1]-tmp[0])) in L:\n      ans -= 1\n    if (tmp[1] + (tmp[1]-tmp[0])) in L:\n      ans -= 1\n    if (sum(tmp)/2) in L:\n      ans -= 1\nprint(ans)", "from collections import Counter\n\nn=int(input())\ns=input()\nc=Counter(s)\n\nans=c['R']*c['G']*c['B']\n\nlim=n//2\nfor i in range(1,n//2+1):\n  for j in range(i,n-i):\n    l=s[j-i]\n    m=s[j]\n    r=s[j+i]\n    if l!=m and m!=r and r!=l:\n      ans-=1\n\nprint(ans)", "def main():\n    n = int(input())\n    s = input()\n    # \u6761\u4ef61:\u5168\u30d1\u30bf\u30fc\u30f3\u306fr*g*b\n    r = s.count('R')\n    g = s.count('G')\n    b = s.count('B')\n    # i, j, k\u306e\u5dee\u304c\u4e00\u81f4\u3059\u308b\u3082\u306e\u3067\u6761\u4ef61\u3092\u6e80\u305f\u3059\u3082\u306e\u3092\u5f8c\u304b\u3089\u5f15\u304f \n    cnt = 0\n    # len(s)\n    for i in range(n):\n        for j in range(i+1, n):\n                k = j + j - i\n                if k >= n:\n                    break\n                if s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n                    cnt += 1\n    ans = r*g*b - cnt\n    print(ans)\n    \ndef __starting_point():\n    main()\n__starting_point()", "def main():\n\tN = int(input())\n\tS = list(input())\n\tR = []\n\tG = []\n\tB = []\n\tcnt = 0\n\tfor i in range(len(S)):\n\t\tif S[i] == \"R\":\n\t\t\tR.append(i)\n\t\telif S[i] == \"G\":\n\t\t\tG.append(i)\n\t\telif S[i] == \"B\":\n\t\t\tB.append(i)\n\tl = len(B)\n\tfor i in range(len(R)):\n\t\tr = R[i]\n\t\tfor j in range(len(G)):\n\t\t\tg = G[j]\n\t\t\tcnt += l\n\t\t\tif g > r:\n\t\t\t\tM = g\n\t\t\t\tm = r\n\t\t\telif r > g:\n\t\t\t\tM = r\n\t\t\t\tm = g\n\t\t\td = M - m\n\t\t\tif (M + d) < N and S[M + d] == \"B\":\n\t\t\t\tcnt -= 1\n\t\t\tif (m - d) >= 0 and S[m - d] == \"B\":\n\t\t\t\tcnt -= 1\n\t\t\tif (M + m) % 2 == 0 and S[int((M + m) / 2)] == \"B\":\n\t\t\t\tcnt -= 1\n\tprint(cnt)\n\nmain()", "n=int(input())\nS=list(input())\nans = S.count(\"R\")*S.count(\"G\")*S.count(\"B\")\nfor i in range(n-2):\n  for j in range(i+1,(n+i+1)//2):\n    if S[i] != S[j] and S[j] != S[2*j-i] and S[2*j-i] != S[i]:\n      ans -= 1\nprint(ans)", "def main():\n    N = int(input())\n    S = input()\n    RGBdict = {\"R\":0,\"G\":0,\"B\":0}\n    for i in range(N):\n        RGBdict[S[i]] += 1\n\n    if N%2 == 0:\n        maxsa = (N//2) -1\n    else:\n        maxsa = N//2\n\n    tmp = N - 2\n    cnt = 0\n    for j in range(maxsa+1):\n        num = tmp-(j*2)\n        for k in range( num ):\n            if (S[N-num+k] != S[N-num+k-j-1]) and (S[N-num+k] != S[N-num+k-2*j-2]) and (S[N-num+k-j-1] != S[N-num+k-2*j-2]):\n                cnt += 1\n\n    ans = RGBdict[\"R\"]*RGBdict[\"G\"]*RGBdict[\"B\"]\n    ans -= cnt\n    return ans\n\nprint((main()))\n", "n = int(input())\ns = input()\n\nans = s.count(\"R\")*s.count(\"G\")*s.count(\"B\")\nfor i in range(n):\n    for j in range(i+1,n):\n        k = 2*j-i\n        if k < n and s[i] != s[j] and s[j] != s[k] and s[k] != s[i]:\n            ans -= 1\nprint(ans)", "def __starting_point():\n\n    n = int(input())\n    s = list(input())\n\n    #\u305d\u308c\u305e\u308c\u306e\u7d44\u307f\u5408\u308f\u305b\u6570\u3092\u6c42\u3081\u308b\n    R = s.count(\"R\")\n    G = s.count(\"G\")\n    B = s.count(\"B\")\n    \n    sm = R*G*B\n    #print(\"\u7d44\u307f\u5408\u308f\u305b\u6570=\"+str(sm))\n    \n    #cond2\u306e\u6761\u4ef6\u304b\u3089\n    #j-i = k-j\u306e\u6642\u306ek\u3092\u6c42\u3081\u308b\n    # k = 2j - i \u306a\u306e\u3067\n    for i in range(n):\n        for j in range(i+1,n):\n            k = 2*j - i\n            if k < n:\n                #print(s[i],s[j],s[k])\n                #\u7b49\u9593\u9694\u306e\u5834\u5408\u306fsm\u304b\u3089-1\u3059\u308b\n                if s[i] != s[j] and s[j] != s[k] and s[i] != s[k]:\n                    sm -= 1\n    print(sm)\n\n__starting_point()", "N = int(input())\nS = input()\nr = 0\ng = 0\nb = 0\nfor i in range(N):\n    if S[i] == \"R\":\n        r += 1\n    elif S[i] == \"G\":\n        g += 1\n    else:\n        b += 1\n\nms = (N-3)//2\nt = 0\nfor i in range(ms + 1):\n    for j in range(N - (2*i + 3) + 1):\n        if S[j] != S[j + i + 1] and S[j] != S[j + 2*i + 2] and S[j + i + 1] != S[j + 2*i + 2]:\n            t += 1\n\nprint(r * g * b - t)", "from collections import Counter\n\nN = int(input())\nS = input()\ncnt = Counter(S)\n\nans = cnt['R']*cnt['G']*cnt['B']\n#\u307e\u305aans\u306b\u8981\u8acb\uff11\u3092\u6e80\u305f\u3059(i, j, k)\u306e\u7d44\u306e\u6570\u3092\u5165\u308c\u3066\u304a\u304d\uff0c\u3053\u3053\u304b\u3089\uff0c\u8981\u8acb\uff12\u3092\u6e80\u305f\u3055\u306a\u3044\u3082\u306e\u3092\u9664\u3044\u3066\u3044\u304f\u3002\n\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        k = j + (j - i)\n        #k\u306f\u3000j - i = k - j \u3092\u6e80\u305f\u3059\u3002\u305f\u3060\u3057\uff0c\uff08i, j, k\uff09\u304c\u8981\u8acb\uff11\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u3002\n        if k < N:\n            if S[i] != S[j] and S[j] != S[k] and S[k] != S[i]:\n                ans -= 1\n\nprint(ans)", "n = int(input())\ns = input()\nr,g,b = [], [], []\n\nfor i in range(n):\n    if s[i]==\"R\":\n        r.append(i)\n    elif s[i]==\"G\":\n        g.append(i)\n    elif s[i]==\"B\":\n        b.append(i)\nans = len(r)*len(g)*len(b)\n\nfor i in range(n):\n    for j in range(i+1,n):\n        k = j + j-i\n        if k<n:\n            if s[i]!=s[j] and s[j]!=s[k] and s[k]!=s[i]:\n                ans -= 1\nprint(ans)", "n = int(input())\ns = input()\nans = s.count('R') * s.count('G') * s.count('B')\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    if j - i > n - j - 1:\n      break\n    if s[i] != s[j] and s[j] != s[2*j-i] and s[2*j-i] != s[i]:\n      ans -= 1\nprint(ans)", "def main():\n    N = int(input())\n    S = input()\n    dict = {'R':0, 'B':0, 'G':0}\n    for i in range(N):\n        dict[S[i]] += 1\n    ans = dict['R']*dict['B']*dict['G']\n    for i in range(N-2):\n        if (N-i)%2 == 0:\n            tmp = int((N-i)/2)-1\n        else:\n            tmp = (N-i)//2\n        for j in range(1,tmp+1):\n            if S[i]!=S[i+j] and S[i]!=S[i+2*j] and S[i+j]!=S[i+2*j]:\n                ans = ans - 1\n\n    return ans\n\nprint((main()))  \n", "n = int(input())\ns = input()\nr = 0\ng = 0\nb = 0\nfor i in s:\n    if i == 'R':\n        r += 1\n    elif i == 'G':\n        g += 1\n    else:\n        b += 1\nans = r * g * b\n\nfor i in range(n):\n    for j in range(i+1,n):\n        if s[i] == s[j]:\n            continue\n        k = 2*j - i\n        if k >= n or s[k] == s[i] or s[k] == s[j]:\n            continue\n        ans -= 1\n        \nprint(ans)", "n=int(input())\nS=list(input())\nans = S.count(\"R\")*S.count(\"G\")*S.count(\"B\")\nfor i in range(n-2):\n  for j in range(i+1,(n+i+1)//2):\n    if S[i] != S[j] and S[j] != S[2*j-i] and S[2*j-i] != S[i]:\n      ans -= 1\nprint(ans)", "N = int(input())\nS = list(input())\n\nr = S.count('R')\ng = S.count('G')\nb = S.count('B')\n\nans = r * g * b\nfor j in range(1, N):\n    t = 1\n    while j - t >= 0 and j + t <= N - 1:\n        if S[j - t] != S[j] and S[j] != S[j + t] and S[j + t] != S[j - t]:\n            ans -= 1\n        t += 1\n\nprint(ans)\nreturn\n"]