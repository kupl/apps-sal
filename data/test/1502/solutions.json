["f=lambda a:(a+1)%2\n\nn=int(input())\na=list(map(int, bin(n)[2:].zfill(4)[::-1]))\na[3]=f(a[3])\nif (a[3]): a[2]=f(a[2])\nif a[3] and a[2]: a[1]=f(a[1])\nif a[3] and a[2] and a[1]: a[0]=f(a[0])\n\nprint (int(\"\".join(map(str, a))[::-1], 2))", "S = [int(d) for d in '{:04b}'.format(int(input()))]\nS[0] = 1 - S[0]\nif S[0]:\n    S[1] =  1 - S[1]\nif S[0] and S[1]:\n    S[2] =  1 - S[2]\nif S[0] and S[1] and S[2]:\n    S[3] =  1 - S[3]\nprint(sum(2**(3-i)*s for i,s in enumerate(S)))\n", "n = int(input())\nbits = bin(n+16)[3:]\nbits = [int(x) for x in bits]\n\n\nbits[0] ^= 1\n\nif bits[0]:\n    bits[1] ^= 1\n\nif bits[0] and bits[1]:\n    bits[2] ^= 1\n\nif bits[0] and bits[1] and bits[2]:\n    bits[3] ^= 1\nprint(int(''.join(str(x) for x in bits),2))\n", "n=int(input(\"\"))\na=[0,0,0,0]\na[0]=n%2\nn=n//2\na[1]=n%2\nn=n//2\na[2]=n%2\nn=n//2\na[3]=n%2\ndef intnot(x):\n    return 0 if x==1 else 1\na[3]=intnot(a[3])\nif(a[3]==1):\n    a[2]=intnot(a[2])\nif(a[3]+a[2]==2):\n    a[1]=intnot(a[1])\nif(a[3]+a[2]+a[1]==3):\n    a[0]=intnot(a[0])\nn=8*a[3]+4*a[2]+2*a[1]+a[0]\nprint(n)", "\ndef int_to_bool(n):\n    return [bool(n & (1 << i)) for i in range(4)]\n\na = int(input())\n\n\ndef apply(expected, input):\n    output = [False] * 4\n    output[3] = not input[3]\n    if input[3]:\n        output[2] = not input[2]\n    else:\n        output[2] = input[2]\n    if input[3] and input[2]:\n        output[1] = not input[1]\n    else:\n        output[1] = input[1]\n    if input[3] and input[2] and input[1]:\n        output[0] = not input[0]\n    else:\n        output[0] = input[0]\n\n    return output == expected\n\n\nfor i in range(16):\n    if apply(int_to_bool(a), int_to_bool(i)):\n        print(i)", "n = int(input())\na = n & 1\nb = n >> 1 & 1\nc = n >> 2 & 1\nd = n >> 3 & 1\n\nd = 1 - d\nif d:\n    c = 1 - c\nif c and d:\n    b = 1 - b\nif b and c and d:\n    a = 1 - a\nans = d << 3 | c << 2 | b << 1 | a\nprint(ans)", "n = int(input())\n\na = [0] * 4\n\ni = 0\nfor i in range(4):\n    a[i] = n % 2\n    n = n // 2\n\n\na[3] = a[3] ^ 1\na[2] = a[3] ^ a[2]\na[1] = (a[3] and a[2]) ^ a[1]\na[0] = (a[3] and a[2] and a[1]) ^ a[0]\n\nsum_ = 0\nfor i in range(4):\n    sum_ += a[i] * 2 ** i\n\nprint(sum_)", "print([15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7][int(input())])\n", "N = int(input())\nif N == 3:\n    print(13)\nelif N == 0:\n    print(15)\nelif N == 1:\n    print(14)\nelif N == 2:\n    print(12)\nelif N == 4:\n    print(8)\nelif N == 5:\n    print(9)\nelif N == 6:\n    print(10)\nelif N == 7:\n    print(11)\nelse:\n    print(N-8)", "a = int(input())\nif (a == 3):\n    print (\"13\")\nelif (a == 0):\n    print (\"15\")\nelif (a == 1):\n    print (\"14\")\nelif (a == 2): \n    print (\"12\")\nelif (a == 4):\n    print (\"8\")\nelif (a == 5):\n    print (\"9\")\nelif (a == 6):\n    print (\"10\")\nelif (a == 7):\n    print (\"11\")\nelif (a == 8):\n    print (\"0\")\nelif (a == 9):\n    print (\"1\")\nelif (a == 10):\n    print (\"2\")\nelif (a == 11):\n    print (\"3\")\nelif (a == 12):\n    print (\"4\")\nelif (a == 13):\n    print (\"5\")\nelif (a == 14):\n    print (\"6\")\nelif (a == 15):\n    print (\"7\")\n\n", "n = int(input())\n\narr = [15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7]\n\nprint(arr[n])\nreturn\nif n == 0:\n    print(15)\n    return\n\nif n == 1:\n    print(14)\n    return\n\nif n == 2:\n    print(12)\n    return\n\nif n == 3:\n    print(13)\n    return\n\nif n == 4:\n    print(8)\n    return\n\nif n == 5:\n    print(9)\n    return\n\nif n == 6:\n    print(10)\n    return\n\nif n == 7:\n    print(11)\n    return\n\nexit(228)\nn = n ^ ((n & 1) << 1) \n\nn = n ^ ((n & 1) << 1)\nn = n ^ ((n & 2) << 1) \n\nn = n ^ ((n & 1) << 1)\nn = n ^ ((n & 2) << 1)\nn = n ^ ((n & 4) << 1)   \n\n#n = n ^ ((n & 4) << 1) ^ ((n & 2) << 2) ^ ((n & 1) << 3)\n\nprint(n)\n\n\n\n#0011 -> 0001 -> 0101 -> 0101 \n", "n = int(input())\n\na = n//8\nb = (n%8)//4\nc = (n%4)//2\nd = n%2\na = not a\nb = not b if a else b\nc = not c if a and b else c\nd = not d if a and b and c else d\n\nprint(1*d+2*c+4*b+8*a)", "n = int(input())\nif n == 3:\n    print(13)\nelif n == 0:\n    print(15)\nelif n == 1:\n    print(14)\nelif n == 2:\n    print(12)\nelif n == 4:\n    print(8)\nelif n == 5:\n    print(9)\nelif n == 6:\n    print(10)\nelif n == 7:\n    print(11)\nelif n == 8:\n    print(0)\nelif n == 9:\n    print(1)\nelif n == 10:\n    print(2)\nelif n == 11:\n    print(3)\nelif n == 12:\n    print(4)\nelif n == 13:\n    print(5)\nelif n == 14:\n    print(6)\nelif n == 15:\n    print(7)\n", "arr = [15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7]\nprint(arr[int(input())])", "N = int(input())\ndef calc(n):\n    if n == 0: return 15\n    if n == 1: return 14\n    if n == 2: return 12\n    if n == 3: return 13\n    if n == 4: return 8\n    if n == 5: return 9\n    if n == 6: return 10\n    if n == 7: return 11\n    if n == 8: return 0\n    if n == 9: return 1\n    if n == 10: return 2\n    if n == 11: return 3\n    if n == 12: return 4\n    if n == 13: return 5\n    if n == 14: return 6\n    if n == 15: return 7\n    return 1/0\n\nprint(calc(N))", "a = int(input())\nif a == 3:\n    print(13)\nelif a == 0:\n    print(15)\nelif a == 1:\n    print(14)\nelif a == 2:\n    print(12)\nelif a == 4:\n    print(8)\nelif a == 5:\n    print(9)\nelif a == 6:\n    print(10)\nelif a == 7:\n    print(11)\nelif a == 8:\n    print(0)\nelif a == 9:\n    print(1)\nelif a == 10:\n    print(2)\nelif a == 11:\n    print(3)\nelif a == 12:\n    print(4)\nelif a == 13:\n    print(5)\nelif a == 14:\n    print(6)\nelif a == 15:\n    print(7)", "# bits = list(map(int, bin(int(input()))[2:]))\n# while len(bits) < 4:\n    # bits.append(0)\n\n# bits = [bits[0], bits[1] ^ bits[0], bits[2] ^ (bits[1] | bits[0]), bits[3] ^ (bits[0] | bits[1] | bits[2])]\n\n# print(bits[0] + bits[1] * 2 + bits[2] * 4 + bits[3] * 8)\n\nr = int(input())\nif r == 0:\n     print(15)\nelif r == 1:\n    print(14)\nelif r == 2:\n    print(12)\nelif r == 3:\n     print(13)\nelif r == 4:\n     print(8)\nelif r == 5:\n    print(9)\nelif r == 6:\n    print(10)\nelif r == 7:\n    print(11)\nelif r == 8:\n    print(0)\nelse:\n    print(r - 8)\n", "mas = [0] * 16\nmas[15] = 7\nmas[14] = 6\nmas[13] = 5\nmas[12] = 4\nmas[11] = 3\nmas[10] = 2\nmas[9] = 1\nmas[8] = 0\nmas[7] = 11\nmas[6] = 10\nmas[5] = 9\nmas[4] = 8\nmas[3] = 13\nmas[2] = 12\nmas[1] = 14\nmas[0] = 15\nprint(mas[int(input())])", "n=int(input())\nl=[15,14,12,13,8,9,10,11,0,1,2,3,4,5,6,7]\nprint(l[n])", "l = [15,14,12,13,8,9,10,11,0,1,2,3,4,5,6,7]\nn = int(input())\nprint(l[n])\n    \n", "import io, sys, atexit, os\n\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\ndef prod(n):\n\ts=1\n\twhile(n!=0):\n\t\ts=s*(n%10)\n\t\tn=n//10\n\treturn s\n\ndef check(xp):\n\top=sorted(xp)\n\tif(op==xp):\n\t\treturn True\n\n\nmm = 1000000007\ndef solve ():\n\tt = 1\n\tfor it in range (t):\n\t\tn=nu()\n\t\txp=[ 15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17]\n\t\tprint (xp [ n ])\n\t\tcontinue\n\t\tif(n<=7):\n\t\t\tprint(xp[n])\n\t\telse:\n\t\t\tif(n==8):\n\t\t\t\tprint(30)\n\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "import io, sys, atexit, os\n\nimport math as ma\nfrom decimal import Decimal as dec\nfrom itertools import permutations\nfrom itertools import combinations\n\n\ndef li ():\n\treturn list (map (int, input ().split ()))\n\n\ndef num ():\n\treturn map (int, input ().split ())\n\n\ndef nu ():\n\treturn int (input ())\n\n\ndef find_gcd ( x, y ):\n\twhile (y):\n\t\tx, y = y, x % y\n\treturn x\ndef prod(n):\n\ts=1\n\twhile(n!=0):\n\t\ts=s*(n%10)\n\t\tn=n//10\n\treturn s\n\ndef check(xp):\n\top=sorted(xp)\n\tif(op==xp):\n\t\treturn True\n\n\nmm = 1000000007\ndef solve ():\n\tt = 1\n\tfor it in range (t):\n\t\tn=nu()\n\t\t##PRITHIBIR JOTO GAN*U SETTER EITA TAR MODDHE EK NUMBER\n\t\txp=[ 15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7, 16, 17]\n\t\tprint (xp [ n ])\n\t\tcontinue\n\n\n\ndef __starting_point():\n\tsolve ()\n__starting_point()", "n=int(input())\nif(n==0):\n    print(15)\nelif(n==1):\n    print(14)\nelif(n==2):\n    print(12)\nelif(n==3):\n    print(13)\nelif(n==4):\n    print(8)\nelif(n==5):\n    print(9)\nelif(n==6):\n    print(10)\nelif(n==7):\n    print(11)\nelif(n==8):\n    print(0)\nelif(n==9):\n    print(1)\nelif(n==10):\n    print(2)\nelif(n==11):\n    print(3)\nelif(n==12):\n    print(4)\nelif(n==13):\n    print(5)\nelif(n==14):\n    print(6)\nelif(n==15):\n    print(7)    \nelse:\n    print(1/0)", "n = int(input())\nd = []\nfor i in range(4):\n    d.append(n % 2)\n    n //= 2\nx = 1\nfor i in range(3,-1,-1):\n    d[i] ^= x\n    x &= d[i]\nr = 0\nfor v in d[::-1]:\n    r = 2*r + v\nprint(r)", "ans = [15, 14, 12, 13, 8, 9, 10, 11, 0, 1, 2, 3, 4, 5, 6, 7]\nprint(ans[int(input())])\n"]