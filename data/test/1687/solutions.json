["input()\na = [int(x) for x in input().split()]\nb = min(a)\nprint(-1 if any(x % b for x in a) else b)\n", "input()\na = list(map(int, input().split()))\nb = min(a)\nfor i in a:\n  if i % b:\n    print(-1)\n    break\nelse:\n  print(b)", "n, t = int(input()), list(map(int, input().split()))\nk = min(t)\nprint(-1 if any(i % k for i in t) else k)\n", "n=int(input())\nlis=input().split()\nfor i in range(len(lis)):\n    lis[i]=int(lis[i])\nm=min(lis)\ncheck=1\nfor i in range(len(lis)):\n    if lis[i]%m!=0:\n        check=0\nif check==0:\n    print(-1)\nelse:\n    print(m)\n", "import sys\nimport math\n\nn = int(sys.stdin.readline())\nan = [int(x) for x in (sys.stdin.readline()).split()]\n\nvmin = 1000000001\n\nfor i in an:\n    if(i < vmin):\n        vmin = i\n\nfor i in an:\n    if(i % vmin != 0):\n        print(-1)\n        return\n    \nprint(vmin)  ", "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nt = a[0]\nfor x in a:\n    if x % a[0] != 0:\n        t = -1\n\nprint(t)", "x = int(input())\nve = list(map(int , input().split()))\nmn = min(int(i) for i in ve)\nfor i in range(0 , x ):\n    if ve[i] % mn != 0:\n        print(\"-1\")\n        return\n\nprint(mn)", "n = int(input())\ndata = list(map(int, input().split()))\nsmall = min(data)\nfor x in data:\n    if x % small != 0:\n        print(-1)\n        import sys; return\nprint(small)\n", "def f():\n\tinput()\n\ta = list(map(int,input().split(' ')))\n\tm = min(a)\n\tfor i in a:\n\t\tif i % m != 0:\n\t\t\tprint(-1)\n\t\t\tbreak\n\telse:\n\t\tprint(m)\nf()", "from fractions import gcd\nn, a = int(input()), list(map(int, input().split()))\nv = a[0]\nfor ai in a:\n    v = gcd(v, ai)\nprint(v if v in a else -1)", "from collections import defaultdict, deque, Counter, OrderedDict\nfrom math import gcd\ndef main():\n    n = int(input())\n    g,d = 0,set()\n    for i in map(int,input().split()):\n        if g == 0: g = i\n        else:\n            g = gcd(g,i)\n        d.add(i)\n    print(g if g in d else -1)\n\n\n\n\n\n\ndef __starting_point():\n    \"\"\"sys.setrecursionlimit(400000)\n    threading.stack_size(40960000)\n    thread = threading.Thread(target=main)\n    thread.start()\"\"\"\n    main()\n__starting_point()", "I=input\nI()\na=list(map(int,I().split()))\nx=min(a)\nprint([x,-1][any(i%x for i in a)])", "def main():\n    from math import gcd\n    input()\n    s = set(map(int, input().split()))\n    x = a = s.pop()\n    for b in s:\n        a = gcd(a, b)\n        if a == 1:\n            break\n    s.add(x)\n    print(a if a in s else -1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from fractions import gcd\n\nn = int(input())\na = input().split()\na = [int(i) for i in a]\n\ng = a[0]\n\nfor i in a:\n\tg = gcd(i, g)\n\nif g in a:\n\tprint(g)\nelse:\n\tprint(-1)", "import functools\ndef gcd(a, b):\n    if b == 0:\n        return a;\n    return gcd(b, a % b)\n\ndef main():\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    ans = functools.reduce(gcd, a);\n    if ans not in a:\n        print(-1)\n    else:\n        print(ans)\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from fractions import gcd\n\ndef findGcd(data):\n    g = data[0]\n    for i in range (len(data)-1):\n        g = gcd(g , data[i+1])\n    \n    return g\n\nn = int(input())\na = [int(i) for i in input().split()]\ngc = findGcd(a)\nif gc in a:\n    print(gc)\nelse:\n    print(-1)\n", "n = int(input())\na = [int(i) for i in input().split()]\nm = min(a)\nf = 1\nfor i in a:\n    if i % m != 0:\n        print(-1)\n        f = 0\n        break\nif f == 1:\n    print(m)", "I=input\nI()\na=list(map(int,I().split()))\nx=min(a)\nprint([x,-1][any(i%x for i in a)])", "n=int(input())\na=[int(x) for x in input().split()]\ndef gcd(a,b):\n\ta,b=max(a,b),min(a,b)\n\twhile True:\n\t\tif a%b==0:\n\t\t\treturn b\n\t\tb=a%b\n\t\ta=b\nif n==1:\n\tprint(a[0])\n\treturn\nans=max(a)\nfor i in range(1,n):\n\ttemp=gcd(a[i],a[i-1])\n\tif temp<=ans:\n\t\tans=temp\n\tif ans==1:\n\t\tbreak\nfor i in a:\n\tif i%ans!=0:\n\t\tprint(-1)\n\t\treturn\nif ans in a:\n\tprint(ans)\nelse:\n\tprint(-1)", "n = int(input())\nv = list(map(int, input().split()))\n\nv.sort()\nfor x in v:\n    if(x % v[0] != 0):\n        print(-1)\n        return\n\nprint(v[0])\n\n\n\n\n\n", "from sys import stdin\ndef read(): return list(map(int, stdin.readline().split()))\n\nread()\na = list(read())\nx = min(a)\nfor y in a:\n  if y % x != 0:\n    x = -1\n    break\n\nprint(x)\n", "from sys import stdin\nfrom math import gcd\nn = int(stdin.readline())\narr = list( map(int, stdin.readline().split() ) )\nans = arr[0]\nfor x in arr:\n\tans = gcd(ans, x)\nflag = False\nfor x in arr:\n\tflag |= (x == ans)\nif( flag ): print(ans)\nelse: print(-1)", "I=input\n\nI()\n\na=list(map(int,I().split()))\n\nx=min(a)\n\nprint([x,-1][any(i%x for i in a)])", "n=int(input())\na=list(map(int,input().split()))\nc=min(a)\nfor r in a:\n    if r%c!=0:\n        print('-1')\n        quit()\nprint(c)\n\n"]