["def read(): return list(map(int, input().split(' ')))\nn, m, q = read()\naa = read()\nbb = read()\nreqs = [read() for _ in range(q)]\n\nasum = 0\nbsum = 0\nfor i, (a, b) in enumerate(zip(aa, bb)):\n    asum += a if i % 2 == 0 else -a\n    bsum += b if i % 2 == 0 else -b\n\nbpos = [bsum]\nfor i in range(len(aa), len(bb)):\n    b = bb[i]\n\n    rempos = i - len(aa)\n    bsum += b if i % 2 == 0 else -b\n    bsum -= bb[rempos] if rempos % 2 == 0 else -bb[rempos]\n    bpos += [bsum if rempos % 2 == 1 else -bsum]\n\nbpos = sorted(set(bpos))\n\ndef closest(arr, value):\n    l = 0\n    r = len(arr)\n    while l + 1 < r:\n        m = (l + r) // 2\n        if arr[m] <= value:\n            l = m\n        else:\n            r = m\n        \n    res = arr[l]\n    if l + 1 < len(arr) and abs(arr[l + 1] - value) < abs(arr[l] - value):\n        res = arr[l + 1]\n    return res\n\nprint(abs(asum - closest(bpos, asum)))\nfor req in reqs:\n    l, r, x = req\n    l -= 1\n    if (r - l) % 2 != 0:\n        asum += x if l % 2 == 0 else -x\n    print(abs(asum - closest(bpos, asum)))\n"]