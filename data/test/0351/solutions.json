["R=lambda:list(map(int,input().split()))\nn,k=R()\na=sorted(R())\nb=0\nfor i in a:\n  while i>k+k:\n    k+=k\n    b+=1\n  k=max(k,i)\nprint(b)\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,k=list(map(int,input().split()))\n\nans=0\nfor i in sorted(map(int,input().split())):\n    while i>2*k:\n        ans+=1\n        k*=2\n    k=max(k,i)\n\nprint(ans)\n", "n,k=list(map(int,input().split()))\nx=0\nfor d in sorted(map(int,input().split())):\n    while 2*k<d:\n        k*=2\n        x+=1\n    k=max(k,d)\nprint(x)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na.sort()\ncurr = 0\nans = 0\nwhile curr < len(a):\n    if k >= a[curr] / 2:\n        k = max(k, a[curr])\n        curr += 1\n    else:\n        ans += 1\n        k *= 2\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\na = sorted(map(int, input().split()), reverse = True)\nwhile len(a) > 0 and a[-1] <= k:\n    a.pop()\n\na.append(k)\nans = 0\nwhile len(a) > 1:\n    u, v= a[-1], a[-2]\n    while u * 2 < v:\n        ans += 1\n        u *= 2\n    a.pop()\nprint(ans)\n", "n, k = list(map(int, input().split()))\ns = [int(i) for i in input().split()]\ns.sort()\nans = 0\nfor i in s:\n    while k<i/2:\n        ans+=1\n        k=2*k\n    k = max(k, i)\nprint(ans)\n\n", "from sys import stdin, stdout\nEPS = 10 ** (-20)\nINF = float('inf')\nsize = 10 ** 6\n\nn, k = map(int, stdin.readline().split())\nvalues = sorted(list(map(int, stdin.readline().split())))\ni = 0\nans = 0\n\nwhile i < n:\n    if 2 * k >= values[i]:\n        k = max(k, values[i])\n        i += 1\n    else:\n        k *= 2\n        ans += 1\n\nstdout.write(str(ans))", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na = list(sorted(a))\nd = k\nans = 0\nfor ai in a:\n    while 2 * d < ai:\n        d *= 2\n        ans += 1\n    d = max(d, ai)\n\nprint(ans)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    while (k * 2 < a[i]):\n        k *= 2\n        ans += 1\n    k = max(k, a[i])\nprint(ans)\n    \n", "n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nresult = 0\n\nfor d in a:\n\twhile d > 2*k:\n\t\tk *= 2\n\t\tresult += 1\n\tk = max(d, k)\n\nprint(result)", "import sys\n\ndef main():\n    n, k = map(int,sys.stdin.readline().split())\n    a = list(map(int,sys.stdin.readline().split()))\n    \n    a = sorted(a)\n\n    ans = 0\n    for i in range(n):\n        if k*2>=a[i]:\n            k = max(k,a[i])\n        else:\n            t = a[i]\n            while t>k*2:\n                if t%2==1:\n                    t= int(t/2)+1\n                else:\n                    t = int(t/2)\n                ans+=1\n            k = a[i]\n\n    print(ans)\n\nmain()", "n,k = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\ncnt = 0\nfor a in A:\n\twhile a > 2 * k:\n\t\tcnt += 1\n\t\tk *= 2\n\tk = max(k, a)\nprint(cnt)", "n, k = list(map(int, input().split()))\ns = sorted(tuple(map(int, input().split())))\nmax = k\nans = 0\nfor a in s:\n    if a > max:\n        while max < a / 2:\n            max = max * 2\n            ans = ans + 1\n        max = a\nprint(ans)\n", "import math \ndef main():\n    n, k = list(map(int, input().split()))\n    P = list(map(int, input().split()))\n    P.sort()\n\n    M = k\n    count = 0\n    for num in P:\n        f = math.ceil(math.log2(num/M)) - 1\n        # print(num/M, f)\n        if f < 1:\n            pass\n        else:\n            count += f\n        M = max(M, num)\n    print(count)\n\ndef __starting_point():\n    # nonlocal stime\n    # stime = time.clock()\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\naa = sorted(map(int, input().split()))\n\nansw = 0\n\nfor a in aa:\n    while 2 * k < a:\n        k *= 2\n        answ += 1\n    k = max(k, a)\n\nprint(answ)\n", "import math\n\nI = lambda: list(map(int, input().split()))\nn, k = I()\na = list(I())\n# print(a)\nans = 0\nfor task in sorted(a):\n    if math.ceil(task/2) <= k:\n        k = max(task, k)\n        continue\n    else:\n        while not math.ceil(task/2) <= k:\n            ans += 1\n            k *= 2\n        k = task\n\nprint(ans)\n\n", "n, k = map(int, input().split(' '))\nproblems = list(map(int, input().split(' ')))\n\nproblems.sort()\n# easy = []\n\n# for i in range(len(problems)):\n# \tif problems[i] > k:\n# \t\tproblems = problems[i:]\n# \t\tbreak\n\nmax_solved = k\nproblem_index = 0\nn_has_to_solve = 0\n\nwhile problem_index < n:\n\tif problems[problem_index] <= max_solved * 2:\n\t\tmax_solved = max(max_solved, problems[problem_index])\n\t\tproblem_index += 1\n\telse:\n\t\tmax_solved *= 2\n\t\tn_has_to_solve += 1\n\nprint(n_has_to_solve)", "\ndef MultiJudge(l,p):\n\tcount=0\n\tbefore=True\n\tl.sort()\n\th=[x for x in l if x<=2*p]\n\tif len(h) >0 and max(h)>p:\n\t\tp=max(h)\n\tb=[x for x in l if x>2*p]\n\twhile len(b)>0:\n\t\th=[x for x in l if x<=2*p]\n\t\tb=[x for x in l if x>2*p]\n\t\tif len(h) >0 and max(h)>p:\n\t\t\tp=max(h)\n\t\t\tbefore=False\n\t\t#b=[x for x in l if x>2*p]\n\t\tif len(b)>0 and before:\n\t\t\tp=p*2\n\t\t\tcount+=1\n\t\tbefore=True\n\tprint(count)\n\np=int(input().split()[1])\nl=[int(x) for x in input().split()]\nMultiJudge(l,p)", "read = lambda: map(int, input().split())\nn, k = read()\na = sorted(read())\ncur = k\nans = 0\nfor i in a:\n    while cur * 2 < i:\n        cur *= 2\n        ans += 1\n    cur = max(cur, i)\nprint(ans)", "n, k = map(int, input().split())\na = sorted(list(map(int, input().split())))\nanswer = 0\nfor elem in a:\n    while 2 * k < elem:\n        k *= 2\n        answer += 1\n    k = max(k, elem)\nprint(answer)", "n, k = map(int, input().split())\na = sorted(map(int, input().split()))\nt = 0\nx = 0\nwhile max(a) > 2*k:\n  while a[x] <= 2*k:\n    x += 1\n  if x > 0:\n    k = max(k, a[x-1])\n  while 2*k < a[x]:\n    k *= 2\n    t += 1\nprint(t)", "n, k = map(int, input().split())\n\nl = sorted([int(x) for x in input().split()])\n\nans = 0\n\nfor i in range(len(l)):\n        while 2 * k < l[i]:\n                        ans += 1\n                        k *= 2\n        k = max(k, l[i])\n        \nprint(ans)", "n, k = map(int, input().split(\" \"))\n\narr = sorted([int(i) for i in input().split(\" \")])\n\nanswer = 0\nfor i in range(n):\n    while 2 * k < arr[i]:\n        answer += 1\n        k *= 2\n    k = max(k, arr[i])\n\nprint(answer)", "n,k=map(int,input().split())\nans=0\nfor i in sorted(map(int,input().split())):\n while i>2*k:\n  ans+=1\n  k*=2\n k=max(k,i)\nprint(ans)", "def judge():\n    count = 0\n    S = input()\n    T = input()\n    sList = S.split()\n    sList = [int(i) for i in sList]\n    tList = T.split()\n    n = sList[0]\n    k = sList[1]\n    tList = [int(i) for i in tList]\n    uList = sorted(tList)\n    for num in uList:\n        if (2*k >= num):\n            if (k<num):\n                k = num\n            pass\n        else:\n            while True:\n                k = 2*k\n                count += 1\n                if (2*k >= num):\n                    if (k < num):\n                        k = num\n                    break\n    print(count)\n\n\njudge()"]