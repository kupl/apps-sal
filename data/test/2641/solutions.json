["import sys\nimport numpy as np\nfrom numba import njit\n\n\ndef input(): return sys.stdin.readline()\n\nN,Q = list(map(int,input().split()))\n\nC=np.array(input().split(), int)\n\n# Query\u53d6\u5f97-right\u3067\u30bd\u30fc\u30c8\n# dtypeQuery = [(\"index\", int), (\"start\", int), (\"end\", int)]\nqueries=np.empty((Q,2),int)\n# #rights=[[] for _ in range(N+1)]\n\nfor q in range(Q):\n\tl,r=list(map(int,input().split()))\n\t#queries[q] = (q,l,r)\n\tqueries[q][0] = l\n\tqueries[q][1] = r\n\t#queries=np.sort(queries,order=\"end\")\n\n#queries=np.array(sys.stdin.buffer.read().split(),int).reshape(Q,2)\n\norderByR=np.argsort(queries[:,1])\n\n# \u5404\u8272\u306e\u73fe\u5728\u306e\u4e00\u756a\u53f3\u306eindex\nmostRightColorIndex = np.zeros(N+1, int)\n# bit indexed tree\nbitArray=np.zeros(N+1,int)\n\n@njit\ndef main(N,Q,C,queries,orderByR,mostRightColorIndex,bitArray):\n\n\tdef add(itemCount, items, i, value):\n\t\twhile i <= itemCount:\n\t\t\titems[i] += value\n\t\t\ti += (i & (-i))\n\n\tdef sumFromStart(items, end):\n\t\tsummary = 0\n\t\ti = end\n\t\twhile i > 0:\n\t\t\tsummary += items[i]\n\t\t\ti -= (i & (-i))\n\t\treturn summary\n\n\tdef sum(items, start,end):\n\t\tsummary = sumFromStart(items, end) - sumFromStart(items, start-1)\n\t\treturn summary\n\n\t# \u7b54\u3048\u914d\u5217\n\t#ans=np.zeros(Q, int)\n\tans=[0]*Q\n\t# \u5de6\u304b\u3089BIT\u3068\u73fe\u5728\u8272\u306e\u66f4\u65b0\u3092\u3057\u306a\u304c\u3089\u3001\u30af\u30a8\u30ea\u306eright\u306b\u5230\u9054\u3057\u305f\u3068\u304d\u306bBIT\u306b\u30af\u30a8\u30ea\u767a\u884c\u3059\u308b\n\tqindex = 0\n\n\tfor n in range(N):\n\t\t# \u5916\u5074\u306e\u30eb\u30fc\u30d7\u3067\u306f\u3001\u5168\u90e8\u306e\u8272\u3092\u30eb\u30fc\u30d7\n\n\t\tif Q <= qindex:\n\t\t\tbreak\n\n\t\tif 0 < mostRightColorIndex[C[n]]:\n\t\t\t# \u30eb\u30fc\u30d7\u4e2d\u306e\u5834\u6240\u306e\u8272\u306eindex\u304c\u65e2\u306b\u3042\u308b\u5834\u5408(=\u904e\u53bb\u306b\u3001\u540c\u3058\u8272\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u305f\u5834\u5408)\n\t\t\t# \u4eca\u56de\u3067\u3001\u540c\u3058\u8272\u306e\u4e00\u756a\u53f3\u5074\u306e\u8981\u7d20\u306f\u30eb\u30fc\u30d7\u4e2d\u306e\u8981\u7d20\u306b\u306a\u308b\n\t\t\t# \u524d\u767b\u9332\u3057\u305f\u3053\u306e\u8272\u306e\u4e00\u756a\u53f3\u306eindex\u3092\u4e00\u5ea6BIT\u304b\u3089\u629c\u304f(\u2193\u3067\u518d\u5ea6\u767b\u9332\u3055\u308c\u308b)\n\t\t\tadd(N,bitArray,mostRightColorIndex[C[n]], -1 )\n\n\t\t# \u3053\u306e\u8981\u7d20\u306e\u8272\u306e\u4e00\u756a\u53f3\u306eindex\u3092\u3001BIT\u306b\u767b\u9332\n\t\tmostRightColorIndex[C[n]] = n+1\n\t\tadd(N,bitArray,n+1, 1)\n\n\t\t# while qindex < Q and n+1 == queries[qindex][2]:\n\t\twhile qindex < Q and n+1 == queries[orderByR[qindex]][1]:\n\t\t\t# \u4eca\u306eBIT\u304c\u6b21\u306e\u30af\u30a8\u30ea\u767a\u884c\u3059\u308b\u305f\u3081\u306e\u72b6\u614b(n==query.right)\u3060\u3063\u305f\u3089\u3001\u30af\u30a8\u30ea\u767a\u884c\n\t\t\ttmpIndex = orderByR[qindex]\n\t\t\tstart = queries[tmpIndex][0]\n\t\t\tend = queries[tmpIndex][1]\n\t\t\tans[tmpIndex]=sum(bitArray,start,end)\n\t\t\t# print(tmpIndex,start,end,ans[tmpIndex])\n\t\t\tqindex += 1\n\n\treturn ans\n\nfor a in main(N,Q,C,queries,orderByR,mostRightColorIndex,bitArray):\n\tprint(a)\n"]