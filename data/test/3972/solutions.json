["# dp[i] := i \u9805\u76ee\u4ee5\u964d\u3092\u898b\u305f\u3068\u304d\u306e\u5834\u5408\u306e\u6570\n#       = dp[i+1] + (\u03a3_{3<=d<=N-1} dp[i+d]) + (n-1)**2\n\n# i \u9805\u76ee\u3068 i+1 \u9805\u76ee\u306b\u3064\u3044\u3066\u3001\n#   (1) i \u9805\u76ee\u304c 1 \u306e\u5834\u5408\n#   (2) i \u9805\u76ee\u304c 1 \u3067\u7121\u304f\u3001i+1 \u9805\u76ee\u304c 1 \u306e\u5834\u5408\n#   (3) i \u9805\u76ee\u3082 i+1 \u9805\u76ee\u3082 1 \u3067\u7121\u3044\u5834\u5408\n# \u3067\u5834\u5408\u5206\u3051\u3057\u3066\u305d\u308c\u305e\u308c\u3092\u8db3\u3057\u3066\u3044\u308b\n# \u3053\u308c\u3092\u7d2f\u7a4d\u548c\u3067\u9ad8\u901f\u5316\u3059\u308b\n\n# \u521d\u671f\u5316\u304c\u3084\u3084\u3053\u3057\u3044\n\nN = int(input())\nmod = 10**9+7\ndp = [N] * (N+1)\ndp[N-1] = N\ndp[N-2] = N*N\nc = N * (N+1) + N-1\nconst = (N-1)**2\nfor i in range(N-3, -1, -1):\n    ans = c - dp[i+2] + const\n    dp[i] = ans\n    c = (c + ans - 1) % mod\nprint((dp[0]%mod))\n", "n = int(input())\nmod = 10**9+7\n\ndp = [0] * n\ndp[0] = 1\ntot = 1\nfor i in range(1,n):\n    if(i==1):\n        dp[i] = tot\n    else:\n        dp[i] = tot - dp[i-2]\n    dp[i] %= mod\n    tot += dp[i]\n    tot %= mod\n\nans = 0\nfor i in range(n-1):\n    ans += dp[i] * ((n-1)**2 + min(n-1, i+2))\n    ans %= mod\n\nans += dp[-1]*n\nans %= mod\nprint(ans)", "n=int(input())\ndp=[0 for i in range(n+1)]\ndp[0]=1\nx=(n-1)**2\ndp[1]=n\npref=dp[1]\nmod=10**9+7\nx%=mod\nfor i in range(2,n+1):\n    dp[i]+=x+pref-dp[i-2]+(n-i+2)\n    pref+=dp[i]\n    pref%=mod\n    dp[i]%=mod\n        \nprint((dp[-1]))\n    \n    \n    \n", "# dp[i] := i \u9805\u76ee\u4ee5\u964d\u3092\u898b\u305f\u3068\u304d\u306e\u5834\u5408\u306e\u6570\n#       = dp[i+1] + (\u03a3_{3<=d<=N-1} dp[i+d]) + (n-1)**2\n\n# i \u9805\u76ee\u3068 i+1 \u9805\u76ee\u306b\u3064\u3044\u3066\u3001\n#   (1) i \u9805\u76ee\u304c 1 \u306e\u5834\u5408\n#   (2) i \u9805\u76ee\u304c 1 \u3067\u7121\u304f\u3001i+1 \u9805\u76ee\u304c 1 \u306e\u5834\u5408\n#   (3) i \u9805\u76ee\u3082 i+1 \u9805\u76ee\u3082 1 \u3067\u7121\u3044\u5834\u5408\n# \u3067\u5834\u5408\u5206\u3051\u3057\u3066\u305d\u308c\u305e\u308c\u3092\u8db3\u3057\u3066\u3044\u308b\n# \u3053\u308c\u3092\u7d2f\u7a4d\u548c\u3067\u9ad8\u901f\u5316\u3059\u308b\n\n# \u521d\u671f\u5316\u304c\u3084\u3084\u3053\u3057\u3044\n\nN = int(input())\nmod = 10**9+7\ndp = [0] * N\ndp[N-1] = N\ndp[N-2] = N*N\nc = N * (N+1) + N-1\nconst = (N-1)**2\nfor i in range(N-3, -1, -1):\n    ans = c - dp[i+2] + const\n    dp[i] = ans\n    c = (c + ans - 1) % mod\nprint((dp[0]%mod))\n", "import sys\ndef I(): return int(sys.stdin.readline().rstrip())\n\n\nN = I()\nmod = 10**9+7\nA = [0]*(N+1)\nSA = [0]*(N+1)\n\nA[1] = N\nSA[1] = N\nif N >= 2:\n    A[2] = N**2\n    SA[2] = N+N**2\n\nfor i in range(3,N+1):\n    A[i] = A[i-1]+SA[i-3]+(N-i+2)+(N-1)**2\n    A[i] %= mod\n    SA[i] = SA[i-1]+A[i]\n    SA[i] %= mod\n\nprint((A[-1]))\n", "import math\n#import numpy as np\nimport queue\nfrom collections import deque,defaultdict\nimport heapq as hpq\nfrom sys import stdin,setrecursionlimit\n#from scipy.sparse.csgraph import dijkstra\n#from scipy.sparse import csr_matrix\nipt = stdin.readline\nsetrecursionlimit(10**7)\n\ndef main():\n    n = int(ipt())\n    mod = 10**9+7\n    a = [n,n*n%mod]\n    sa = [0,0]\n    for i in range(2,n):\n        a.append((a[-1]+sa[-1]+(n-i+1)*n%mod)%mod)\n        sa.append((sa[-1]+a[i-2]+n-1)%mod)\n\n    print((a[-1]))\n\n\n\n    return\n\ndef __starting_point():\n    main()\n\n__starting_point()", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    N = int(input())\n    ans = [0] * (N+1)\n    ans[N] = N\n    ans[N-1] = N*N\n    S = 0\n    for i in range(N-2, 0, -1):\n        ans[i] = (ans[i+1] + S + N*(i+1) + (N-1) * (N-i-2))%mod\n        S = (S + ans[i+2])%mod\n    print((ans[1]))\n    #print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "N=int(input())\nmod=10**9+7\nDP=[0]*(N*2+5)\nX=[0]*(N*2+5)\nY=[0]*(N*2+5)\nC=0\nY[0]=-1\nfor i in range(N):\n  C=(C+X[i])%mod\n  DP[i]=(C-Y[i])%mod\n  Y[i+2]=DP[i]\n  X[i+1]=(X[i+1]+DP[i])%mod\n  X[i+N+2]=(X[i+N+2]-DP[i])%mod\nfor i in range(N,N*2+2):\n  C=(C+X[i])%mod\n  DP[i]=(C-Y[i])%mod\nP=sum(DP[N:])\nfor i in range(N-1):\n  P=(P+DP[i]*(N-1)*(N-1))%mod\nprint(P)", "import sys\nMOD = 10**9 + 7\nN = int(input())\nif N == 1:\n  print((1)); return;\nif N == 2:\n  print((4)); return;\n\nDP = [0 for _ in range(N)]\nDP[0] = 1\nDP[1] = 1\nDP_sum = 2\nfor i in range(2,N):\n  DP[i] =  DP_sum - DP[i-2] # DP[0] + DP[1] + ... + DP[i-1] - DP[i-2]\n  DP[i] %= MOD\n  DP_sum += DP[i]\n  DP_sum %= MOD\n#print(DP)\n\nans = 0\nfac = (N-1)**2 % MOD\nfor i in range(N-1):\n  ans += DP[i]*(fac+i+2)\n  if i >= N-2:\n    ans -= DP[i]\n  ans %= MOD\nans += DP[N-1] * N\nans %= MOD\n  \nprint((ans % MOD))\n", "n=int(input())\ndp=[0 for i in range(n+1)]\ndp[0]=1\nx=(n-1)**2\ndp[1]=n\npref=dp[1]\nmod=10**9+7\nx%=mod\nfor i in range(2,n+1):\n    dp[i]+=x+pref-dp[i-2]+(n-i+2)\n    pref+=dp[i]\n    pref%=mod\n    dp[i]%=mod\n        \nprint((dp[-1]))\n", "mod = 10**9+7\n\nN = int(input())\n\nX = [1, 1, 1]\nY = [1, 2, 3]\nfor i in range(3, N+2):\n    x = (X[-1] + Y[i-3]) % mod\n    X.append(x)\n    Y.append((Y[-1]+x)%mod)\n\nans = ((Y[N-2] * (N-2) + (Y[N-1])) * (N-1) + (N-1) * Y[N-2] + 1) % mod\nprint(ans)\n\n\n# from itertools import product\n\n# A = product(range(1, N+1), repeat=N)\n# P = []\n# for B in A:\n#     ok = True\n#     B = list(B) + [B[-1]]*(N+1)\n#     for i in range(N):\n#         b = B[i]\n#         if len(set(B[i+1:i+1+b])) != 1:\n#             ok = False\n#             break\n#     if ok:\n#         P.append(B)\n# print(len(P))\n# for B in P:\n#     print(B)\n", "n = int(input())\nif n <= 3:\n  print([n,n**2,n*(2*n-1)][n-1])\n  return\nmod = 10**9+7\ndp = [0]*(n+1)\ndp[1] = n\ndp[2] = n**2\ndp[3] = n*(2*n-1)\nacc = sum(dp)\nfor i in range(4,n+1):\n  dp[i] = acc-dp[i-2]+(n-1)**2+n-i+2\n  dp[i] %= mod\n  acc = (acc+dp[i])%mod\nprint(dp[n])", "P = 10 ** 9 + 7\nN = int(input())\nk = (N-1) ** 2 % P + 2\na, b, c = 1, 0, 0\nans = 0\nfor i in range(N-1):\n    ans += a * (k + min(i, N-3))\n    ans %= P\n    a, b, c = a + b, b + c, a\n    if a >= P: a -= P\n    if b >= P: b -= P\n\nans += N * a\nans %= P\nprint(ans)", "import sys\ninput = sys.stdin.readline\n\nMOD = 10**9 + 7\nN = int(input())\n\ndp = [0] * (N+10)\ndp_cum = [0] * (N+10)\n\ndp[1] = N-1; dp_cum[1] = N-1\ndp[2] = N-1; dp_cum[2] = 2*(N-1)\nfor n in range(3,N+1):\n    dp[n] = dp[n-1] + dp_cum[n-3]\n    dp_cum[n] = (dp_cum[n-1] + dp[n]) % MOD\n\nanswer = sum(dp[1:N])*N + dp[N] + 1\nanswer %= MOD\nprint(answer)", "def main():\n    mod = 10**9+7\n    n = int(input())\n    a, b, c, p = 1, 1, n, n-1\n    for i in range(n-1):\n        p = (p+a-1) % mod\n        a, b, c = b, c, ((n-1)*(n-1)+p+c) % mod\n    print(c)\n\n\nmain()\n", "n = int(input())\ndp = [0] * (n+1)\nmod = 10**9+7\ndp[0] = n\ndp[1] = n*n\nSUM = n+n*n\nfor i in range(2,n):\n  dp[i] = (n-1)*(n-1) + n-i+1+SUM-dp[i-2]\n  dp[i] %= mod\n  SUM += dp[i]\n  SUM %= mod\nprint(dp[n-1])", "n=int(input())-1;a,b,c,p=1,1,n+1,n\nfor _ in[0]*n:p+=a-1;a,b,c=b,c,(n*n+p+c)%(10**9+7)\nprint(c)", "n=int(input());a,b,c,p=1,1,n,n-1\nfor i in range(n-1):\n p+=a-1;a,b,c=b,c,((n-1)**2+p+c)%(10**9+7)\nprint(c)", "n=int(input())\nmod=10**9+7\n\ndp=[0 for i in range(0,10**6+1)]\nS=[0 for i in range(0,10**6+1)]\n\ndp[1]=1\ndp[2]=1\nS[1]=1\nS[2]=2\nfor i in range(3,10**6+1):\n    dp[i]=(S[i-1]-dp[i-2]+1)%mod\n    S[i]=(S[i-1]+dp[i])%mod\n\nif n==1:\n    print(1)\nelif n==2:\n    print(4)\nelse:\n    ans=(S[n-2]*(n-1)**2+(n-1)**2+(n-1)*S[n-1]+n)%mod\n    print(ans)", "n=int(input())\nif n==1:\n  print((1))\n  return\nmod=10**9+7\ndp=[0]*(n+1)\nS=[0]*(n+1)\ndp[0]=1\ndp[1]=1\ndp[2]=1\nS[0]=1\nfor i in range(n):\n  if i+1>=3:\n    dp[i+1]=2*dp[i]-dp[i-1]+dp[i-2]\n  dp[i+1]%=mod\n  S[i+1]=S[i]+(n-1)*dp[i]\n  S[i+1]%=mod\nans=S[n]\nfor i in range(1,n):\n  ans+=((n-1)**2)*dp[i-1]\n  ans%=mod\nprint(ans)\n#print(S)\n#print(dp)\n", "import sys\n\nmod = 10**9 + 7\n\ndef solve():\n    n = int(input())\n\n    if n == 1:\n        print(1)\n        return\n\n    dp = [0] * (n + 1)\n    dp[1] = n % mod\n    dp[2] = n**2 % mod\n\n    acc = [0] * (n + 1)\n    acc[1] = dp[1] % mod\n    acc[2] = (dp[1] + dp[2]) % mod\n\n    for k in range(3, n + 1):\n        dp[k] = (dp[k - 1] + (n - 1)**2 + acc[k - 3] + n - k + 2) % mod\n        acc[k] = (acc[k - 1] + dp[k]) % mod\n\n    ans = dp[n]\n    print(ans)\n\ndef debug(x, table):\n    for name, val in table.items():\n        if x is val:\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\n            return None\n\ndef __starting_point():\n    solve()\n__starting_point()", "n = int(input())\n\nif n == 1:\n    print(1)\nelse:\n    res_v = [0]*(n + 1)\n    res_v_cumsum = [0]*(n + 1)\n    res_v[0] = 0\n    res_v[1] = 1\n    res_v[2] = 1\n    res_v_cumsum[0] = 0\n    res_v_cumsum[1] = 1\n    res_v_cumsum[2] = 2\n\n    M = 1000000007\n\n    for k in range(3, n):\n        res_v[k] = (1 + res_v_cumsum[k-1] - res_v[k-2]) % M\n        res_v_cumsum[k] = (res_v_cumsum[k-1] + res_v[k]) % M\n    #print(res_v)\n    print((((res_v_cumsum[n-2] * (((n-1) * (n-1)) % M)) % M) + ((res_v_cumsum[n-1] * (n-1)) % M) + n + (n-1)*(n-1)%M) % M)", "MOD = 10 ** 9 + 7\nn = int(input())\n\n\"\"\"\ndp = [-1] * (n + 1)\ndp[0] = 1\ndef cnt(num):\n    ans = 0\n    if num < 0:\n        return 1\n    if dp[num] != -1:\n        return dp[num]\n    if num == 1:\n        dp[num] = n\n        return n\n      \n    for i in range(n):\n        if i == 0:\n            ans += cnt(num - 1)\n            ans %= MOD\n        else:\n            if num - 2 - i < 0:\n                ans += 1\n            else:\n                ans += cnt(num - 2 - i)\n            ans += n - 1\n            ans %= MOD\n    dp[num] = ans\n    return ans\n\ndp[0] = 1\nprint(cnt(n))\n\"\"\"\n\ndq = [0] * (n + 1)\nsum_ = [0] * (n + 1)\ndq[0] = 1\nsum_[0] = 1\nfor i in range(n):\n    if i == 0:\n        dq[i + 1] = n\n        sum_[i + 1] = sum_[i] + dq[i + 1]\n        continue\n    \"\"\"\n    for j in range(n):\n        if j == 0:\n            dq[i + 1] += dq[i]\n        else:\n            if i - 1 - j < 0:\n                dq[i + 1] += 1\n            else:\n                dq[i + 1] += dq[i - 1 - j]\n            dq[i + 1] += n - 1\n    \"\"\"\n    dq[i + 1] += dq[i]\n    dq[i + 1] += (n - 1) * (n - 1)\n    dq[i + 1] += sum_[i - 2]\n    dq[i + 1] += abs(i - n)\n    dq[i + 1] %= MOD\n    sum_[i + 1] = sum_[i] + dq[i + 1]\n    sum_[i + 1] %= MOD\n\nprint((dq[-1]))\n", "import sys\n\nn = int(input())\nmod = 10 ** 9 + 7\n\nif n == 1:\n    print((1))\n    return\n\nlis = [0] * n\nlis[0] = 1\nbsum = 0\nans = min(n-1,2) + (n-1) ** 2\n\n\n\nfor i in range(n-1):\n\n    i += 1\n\n    lis[i] += lis[i-1]\n\n    if i - 3 >= 0:\n        bsum += lis[i-3]\n        bsum %= mod\n\n    lis[i] += bsum\n    lis[i] %= mod\n\n    if i != n-1:\n\n        ans += lis[i] * ((n-1) ** 2)\n        ans += lis[i] * min(n-1 , i+2)\n        ans %= mod\n\n    \n\nans += lis[-1] * n\nans %= mod\n\n#print (lis)\nprint (ans)\n", "import sys\nsys.setrecursionlimit(10**7)\ndef main1(n):\n  # DP \u30e1\u30e2\u5316\u518d\u5e30 O(N^2)\n  mod=10**9+7\n  ret=0\n  memo={}\n  memo[n-1]=n\n  #memo[i]:idx=i\u306b\u4f55\u3092\u66f8\u304d\u8fbc\u3080\u304b\u691c\u8a0e\u3057\u3066\u3044\u308b\u3068\u304d\u3001i\u4ee5\u964d\u306e\u6570\u5217\u306e\u7a2e\u985e\u6570\n  def func(i):\n    if i in memo:return memo[i]\n    if i>n-1:return 1\n    ret=0\n    # i\u306b1\u3092\u66f8\u304d\u8fbc\u3080\n    ret+=func(i+1)\n    for k in range(2,n+1):\n      # i\u306bk\u3092\u66f8\u304d\u8fbc\u307f\u3001\u305d\u306e\u6b21\u306b1\u3092\u66f8\u304d\u8fbc\u3080\u3002\n      ret+=func(i+k+1)\n      # i\u306bk\u3092\u66f8\u304d\u8fbc\u307f\u3001\u305d\u306e\u6b21\u306b2\u4ee5\u4e0a\u3092\u66f8\u304d\u8fbc\u3080\u3002\n      ret+=n-1\n      ret%=mod\n    memo[i]=ret\n    return ret\n  ret=func(0)\n  for k in memo:print((k,memo[k]))\n  return ret\n\n# \u7d2f\u7a4d\u548c\u3067\u9ad8\u901f\u5316\u3067\u304d\u308b\u3002memo[i]\u3092i\u306e\u5927\u304d\u3044\u9806\u306b\u6570\u3048\u308b\ndef main2(n):\n  # DP O(N)\n  mod=10**9+7\n  # dp[i]:=idx=i\u306b\u4f55\u3092\u66f8\u304d\u8fbc\u3080\u304b\u691c\u8a0e\u3057\u3066\u3044\u308b\u3068\u304d\u3001i\u4ee5\u964d\u306e\u6570\u5217\u306e\u7a2e\u985e\u6570\n  dp=[1]*(2*n)\n  dp[n-1]=n\n  dp[n-2]=n**2\n  now=n-1\n  for i in range(n-3,-1,-1):\n    # 1\u3092\u66f8\u304d\u8fbc\u3080\n    dp[i]=dp[i+1]\n    now-=dp[i+n+1]\n    now+=dp[i+3]\n    dp[i]+=now\n    #for k in range(2,n+1):# i+3~i+n+1\u306e\u548c\n    #  dp[i]+=dp[i+k+1]\n    #  dp[i]%=mod\n    dp[i]+=(n-1)**2\n    dp[i]%=mod\n  return dp[0]\ndef __starting_point():\n  n=int(input())\n  ret2=main2(n)\n  print(ret2)\n\n\n__starting_point()", "# -*- coding: utf-8 -*-\nmod = 10**9 + 7\n\nn = int(input())\n\na = [0]*n\nx = n - 1\nfor i in range(n - 1, - 1, -1):\n    if i == n - 1:\n        a[i] = n\n    elif i == n - 2:\n        a[i] = n*n\n    else:\n        x -= 1\n        x += a[i + 3] if i + 3 < n else 1\n        x %= mod\n        a[i] += a[i + 1] + (n - 1)*(n - 1) + x\n    a[i] %= mod\nprint(a[0])\n", "import sys\nreadline = sys.stdin.readline\nMOD = 10**9+7\nN = int(readline())\n\ndp1 = [0]*(N+3)\nDp1 = [0]*(N+3)\ndp2 = [0]*(N+3)\nDp2 = [0]*(N+3)\ndp1[0] = 1\nDp1[0] = 1\ndp2[0] = N-1\nDp2[0] = N-1\ndp1[1] = N-1\ndp2[1] = (N-1)**2\ndp1[2] = N-1\ndp2[2] = (N-1)**2\nDp1[1] = Dp1[0] + dp1[1]\nDp2[1] = Dp2[0] + dp2[1]\nDp1[2] = Dp1[1] + dp1[2]\nDp2[2] = Dp2[1] + dp2[2]\nfor i in range(3, N+1):\n    dp1[i] = (dp1[i-1] + Dp1[i-3] - 1) % MOD\n    dp2[i] = (dp2[i-1] + Dp2[i-3]) % MOD\n    Dp1[i] = (Dp1[i-1] + dp1[i]) % MOD\n    Dp2[i] = (Dp2[i-1] + dp2[i]) % MOD\nprint(((Dp1[N-1] + Dp2[N-1]) % MOD))                 \n", "MOD = 10 ** 9 + 7\n\nn = int(input())\n\nif n == 1:\n    print(1)\n    return\n\ndp = [0] * (n)\ndp[0] = 1\ndp[1] = 1\ndpsum = 2\nfor l in range(2, n):\n    dp[l] = dpsum\n    dp[l] -= dp[l-2]\n    dp[l] %= MOD\n    dpsum += dp[l]\n    dpsum %= MOD\n\nans = 1 + (dpsum - dp[-1]) * (n-1) # end with \"1...\"\nans %= MOD\nfor l in range(n-1):\n    ans += dp[l] * (n - 1) ** 2\n    ans %= MOD\n\nans += dp[n-1] * (n - 1)\nans %= MOD\n\nprint(ans)", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\ndef get(i):\n    #if i==-n: return 0\n    if i <= 0: return 1\n    else: return a[i]\n\n\nn, = list(map(int,readline().split()))\n\nMOD = 10**9+7\n\na = [1,n,n*n]\nfor i in range(3,n+1):\n    res = -get(i-n-2) + get(i-3) - get(i-2) + 2*get(i-1)\n    a.append(res%MOD)\n\n#print(a)\nprint((a[-1]))\n\n\n\n\n\n\n\n\n\n\n\n", "MOD = 10**9 + 7\nn = int(input())\nif n == 1:\n\tprint(1)\nelse:\n\tdp = [0 for _ in range(n+1)]\n\tdp[0], dp[1], dp[2] = 1, 1, 1\n\tcum = [0 for _ in range(n+1)]\n\tcum[0], cum[1], cum[2] = 1, 2, 3\n\tfor i in range(3, n+1):\n\t\tdp[i] = (dp[i-1] + cum[i-3]) % MOD\n\t\tcum[i] = (cum[i-1] + dp[i]) % MOD\n\tans = cum[n-2] * (n-1) * (n-1) + dp[n-1] * (n-1) + cum[n-2] * (n-1) + 1\n\tprint(ans%MOD)"]