["import sys\n\ndef main():\n    n = int(input())\n    n = n*2\n    u = 0\n    res = 0\n    x = []\n    for i in range(n):\n        s = sys.stdin.readline()\n        if s[0] == 'r':\n            u+=1\n            if len(x)==0:\n                continue\n            if x[-1] == u:\n                x.pop()\n            else:\n                x = []\n                res +=1\n        else:\n            a,b = s.split()\n            x.append(int(b))\n    print(res)\n\n\nmain()", "from collections import deque\nn=int(input())\ns=0\nc=1\nq=deque([])\nl=False\nfor i in range(2*n):\n    t=input()\n    if t[0]=='a':\n        m=int(t[4:])\n        q.append(m)\n        l=False\n    else:\n        if len(q)>0:\n            f=q.pop()\n            if l==False and f!=c:\n                s+=1\n                l=True\n                q=[]\n        c+=1\nprint(s)", "stack = []\nnext_pop_num = 1\nr = 0\n\n\nfor _ in range(2 * int(input())):\n    command = input()\n    if command.startswith('add'):\n        n = int(command[4:])\n        stack.append(n)\n    else:\n        if stack and stack[-1] != next_pop_num:\n            r += 1\n            stack = []\n        if stack:\n            stack.pop(-1)\n        next_pop_num += 1\n\nprint(r)\n", "from sys import stdin, stdout\n\nn = int(stdin.readline())\nused = [0 for i in range(n + 1)]\ndelete = set()\nstack = []\nans = 0\ncnt = set()\nnumber = 1\nlabel = 0\n\nfor i in range(2 * n):\n    s = stdin.readline().strip().split()\n    \n    while stack and stack[-1] in delete:\n        cnt.discard(stack[-1])\n        stack.pop()\n        \n    \n    if s[0] == 'add':\n        stack.append(int(s[1]))\n        \n        if label:\n            cnt.add(int(s[1]))\n            \n    else:\n        if label and not len(cnt):\n            delete.add(number)\n        elif stack[-1] == number:\n            cnt.discard(stack[-1])\n            stack.pop()\n        else:\n            ans += 1\n            cnt = set()\n            delete.add(number)\n            label = 1\n            \n        \n        number += 1\n\nstdout.write(str(ans))", "n=int(input())\nmas=[]\np=0\nr=0\nfor i in range(2*n):\n    s=input().split()\n    if s[0]=='add':\n       mas.append(int(s[1]))\n    else:\n        r += 1\n        if len(mas)>0 and r==mas[-1]:\n            del mas[-1]\n        elif len(mas)>0:\n            p+=1\n            mas=[]\nprint(p)", "from collections import deque\nimport sys\n\nn = int(input())\n\nq = deque([])\ntoBe = 1\nans = 0\n\nflag = 0\n\ninp = [0] * (n * 2)\n\nfor i in range(2 * n):\n    inp[i] = sys.stdin.readline().strip()\n\nfor i in range(2 * n):\n    s = inp[i].split()\n    if len(s) == 2:\n        k = int(s[1])\n        q.append(k)\n        if len(q) == 1:\n            continue\n        if k != q[-2] - 1:flag = 0\n    else:\n        #print(toBe, flag, ans)\n        if q and toBe != q[-1]:\n            #print(q, toBe, ans)\n            flag = 1\n            ans += 1\n            q = []\n        else:\n            if flag == 1:\n                q = []\n            else:\n                q.pop()\n        toBe += 1\n        \nsys.stdout.write(str(ans) + \"\\n\")", "from collections import deque\nimport sys\n\nn = int(input())\n\nq = deque([])\ntoBe = 1\nans = 0\n\nflag = 0\n\ninp = [0] * (n * 2)\n\nfor i in range(2 * n):\n    inp[i] = sys.stdin.readline().strip()\n\nfor i in range(2 * n):\n    s = inp[i].split()\n    if len(s) == 2:\n        k = int(s[1])\n        q.append(k)\n        if len(q) == 1:\n            continue\n        if k != q[-2] - 1:flag = 0\n    else:\n        #print(toBe, flag, ans)\n        if q and toBe != q[-1]:\n            #print(q, toBe, ans)\n            flag = 1\n            ans += 1\n            q = []\n        else:\n            if flag == 1:\n                q = []\n            else:\n                q.pop()\n        toBe += 1\n        \nsys.stdout.write(str(ans) + \"\\n\")", "n = int(input())\nc = 1\nsorts = 0\nboxes = []\n\nfor _ in range(2 * n):\n    s = input()\n    if s[0] == 'a':\n        boxes.append(int(s[4:]))\n    else:\n        if boxes:\n            if boxes[-1] != c:\n                boxes = []\n                sorts += 1\n            else:\n                boxes.pop()\n        c += 1\nprint(sorts)\n", "n = int(input())\nindexToDel = 1\nstack = [];\ncount = 0;\nfor i in range(n*2):\n    line = input().split()\n    if line[0] == 'remove':\n        if len(stack) != 0:\n            if stack[-1] == indexToDel:\n                stack.pop();\n            else:\n                count+=1\n                stack = []\n        indexToDel+=1\n    else:\n        stack.append(int(line[1]))\n        \nprint(count)", "n = int(input())\nmas = []\ncurrent = 1\ncount = 0\n\nfor i in range(2 * n):\n    instruct = input().split()\n    if instruct[0] == 'add':\n        mas.append(int(instruct[1]))\n    else:\n        if len(mas) > 0:\n            if mas[-1] == current:\n                mas.pop()\n            else:\n                mas = []\n                count += 1\n\n        current += 1\nprint(count)\n", "from heapq import heappush, heappop\n\nn = int(input())\nheap = []\nans = 0\nlast_added = []\nfor i in range(2*n):\n    c = input()\n    if c == \"remove\":\n        out = heappop(heap)\n        if len(last_added):\n            if out != last_added[-1]:\n                ans += 1\n                last_added = []\n            else:\n                last_added.pop()\n    else:\n        b = int(c.split()[1])\n        last_added.append(b)\n        heappush(heap, b)\nprint(ans)\n", "n = int(input())\npointer = 1\nseries = [0]*n\nstack = []\n\nreset = 0\nfor i in range(1,(n*2)+1):\n    inp = input().split(' ')\n    if inp[0] == 'add':\n        number = int(inp[1])\n        stack.append(number)        \n    if inp[0] == 'remove':\n        if len(stack) == 0:\n            pointer +=1    \n        elif stack[-1] == pointer:\n            del stack[-1]\n            pointer += 1\n        else:    \n            reset += 1\n            stack = []\n            pointer += 1\nprint(reset)\n", "\"\"\"\n\tAuthor\t\t: Arif Ahmad\n\tDate  \t\t: \n\tAlgo  \t\t: \n\tDifficulty\t: \n\"\"\"\nfrom sys import stdin, stdout\n\ndef main():\n\tn = int(stdin.readline().strip())\n\ta = [0 for i in range(n + 1)]\n\n\ttop = -1\n\treordered = 0\n\ttoRemove = 1\n\tfor x in range(n + n):\n\t\tcmmd = stdin.readline().strip()\n\t\tif cmmd[0] == 'a':\n\t\t\tk = int(cmmd.split(' ')[1])\n\t\t\ttop += 1\n\t\t\ta[top] = k\n\t\telse:\n\t\t\tif toRemove == a[top] or top == -1:\n\t\t\t\ttop = max(top-1, -1)\n\t\t\telse:\n\t\t\t\ttop = -1\n\t\t\t\treordered += 1\n\t\t\ttoRemove += 1\n\n\tstdout.write(str(reordered) + '\\n')\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# Time   : 2017-6-26 14:30\n# Auther : Anjone\n# URL : http://codeforces.com/contest/821/problem/C\n\n\nans = 0\nnum = 1\nstack = []\nn = int(input())\nfor i in range(2*n):\n\ts = input()\n\tif s.find(\"add\") != -1:\n\t\tstack.append(int(s.split()[1]) )\n\telse:\n\t\tif len(stack) != 0 and stack[-1] != num:\n\t\t\tstack = []\n\t\t\tans+=1\n\t\tif len(stack):\n\t\t\tstack.pop()\n\t\tnum += 1\nprint(ans)\n\n", "n=int(input())\nlist=[]\nans=0\nptr=1\nfor i in range(2*n):\n    s=input()\n    if(s[0]=='a'):\n        list.append(int(s[4:]))\n    else:\n        if(len(list)==0):\n            ptr+=1\n        elif list[-1]==ptr:\n            list.pop()\n            ptr+=1\n        else:\n            list=[]\n            ans+=1\n            ptr+=1\n            \nprint(ans)\n        \n", "def remove():\n    nonlocal c,tot,s\n    c+=1\n    if not s:   return\n    elif s.pop()==c-1:  return\n    tot,s=tot+1,[]\ns,tot,c=[],0,1\nfor _ in range(int(input())*2):\n    cmd= list(input().split())\n    if cmd[0]=='add':\n        s.append(int(cmd[1]))\n    else:   remove()\nprint(tot)\n", "def main():\n    N=int(input())\n    Q=2*N\n    stack=[]\n    curr=1\n    ans=0\n    for _ in range(Q):\n        A=input().strip().split(' ')\n        if len(A)>1:\n            num=int(A[1])\n            stack+=[num]\n        else:\n            if stack!=[]:\n                if stack[-1]==curr:\n                    stack.pop()\n                else:\n                    ans+=1\n                    stack=[]\n            curr+=1\n    print(ans)        \nmain()", "'''input\n3\nadd 1\nremove\nadd 2\nadd 3\nremove\nremove\n'''\nn = int(input())\nc = 1\nl = []\nt = 0\nfor _ in range(2*n):\n\ti = input().split()\n\tif i[0] == \"add\":\n\t\tl.append(int(i[1]))\n\telse:\n\t\tif l:\n\t\t\tif l[-1] == c:\n\t\t\t\tl.pop()\n\t\t\telse:\n\t\t\t\tt += 1\n\t\t\t\tl = []\n\t\tc += 1\nprint(t)\n\n\n", "n=int(input())\nst=[]\nans=0\nc=0\nfor _ in range(2*n):\n\ts=input()\n\tif s==\"remove\":\n\t\tif len(st)==0 or c+1==st[-1] :\n\t\t\tif len(st)!=0:\n\t\t\t\tst.pop(-1)\n\t\t\tc+=1\n\t\telse:\n\t\t\tans+=1\n\t\t\tc+=1\n\t\t\tst=[]\t\n\telse:\n\t\tst.append(int(s[4:]))\n\t#print (st,end=\" \")\n\t#print (ans)\t\nprint (ans)\t\n", "n = int(input())\ncnt = 1\nans = 0\nl = list()\nfor i in range(2*n):\n    s = input()\n    if(s[0]=='a'):\n        l.append(int(s[4:]))\n    else:\n        if(len(l)==0):\n            pass\n        elif(l[-1]==cnt):\n            l.pop()\n        else:\n            ans += 1\n            l = list()\n        cnt += 1\nprint(ans)\n", "n_boxes = int(input())\n\nstack = [] #stack\nb=1\ncount = 0  #count\n\nfor i in range(2*n_boxes):\n  input_string = input().split(' ')\n  #check command type\n  if len(input_string) == 2:  #add\n    x = int(input_string[1])\n    stack.append(x)\n  else: #remove\n    if len(stack)!=0:\n      if stack[-1] == b:\n        stack.pop()\n      else:\n        count += 1\n        stack = []\n    b+=1\n      \nprint(count)", "from collections import deque\nqueue = deque()\nans=0\ncou=1\nn = int(input())\nfor j in range(2*n):\n    a=input().split()\n    if a[0] == 'add':\n        queue.append(int(a[1]))\n    else:\n        if queue:\n            if cou == queue[-1]:\n                \n                queue.pop()\n            else:\n                ans+=1\n                queue=deque()\n                \n        cou+=1\nprint(ans)\n            \n", "import sys\n\nS = []\nA=set()\ncnt = 0\nr = 0\nfor i in range(2*int(sys.stdin.readline().strip())):\n    cmd = sys.stdin.readline().strip().split()\n    if cmd[0] == \"add\":\n        S.append(int(cmd[1]))\n    else:\n        r += 1\n        if S == []:\n            if r in A:\n                continue\n        elif S[-1] == r:\n            S.pop()\n            continue\n        else:\n            cnt += 1\n            A.union(S)\n            S = []\n\nprint(cnt)\n", "n=int(input())\nst=[]\nans,now=0,1\nfor i in range(2*n):\n    s=input()\n    if s[0]==\"a\":\n        st.append(int(s[4:]))\n    else:\n        if len(st)==0:\n            now+=1\n        else:\n            if st[-1]==now:\n                now+=1\n                st.pop()\n            else:\n                st=[]\n                ans+=1\n                now+=1\nprint(ans)\n"]