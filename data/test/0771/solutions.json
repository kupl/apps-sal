["n, k, m = map(int, input().split())\na = list(map(int, input().split()))\n\nall = [0] * m\nfor x in a:\n\tall[x % m] += 1\n\nwas = 0\nfor i in range(m):\n\tif(all[i] >= k and was == 0):\n\t\tprint(\"Yes\")\n\t\tfor x in a:\n\t\t\tif(x % m == i and was < k):\n\t\t\t\tprint(x, end = ' ')\n\t\t\t\twas += 1\n\nif (was != k):\n\tprint(\"No\")\t\n\t\t\n\t", "n,k,m=map(int,input().split())\nip=list(map(int,input().split()))\narr=[[] for i in range(m)]\nfor i in ip:\n    arr[i%m].append(i)\nb=0\nfor i in arr:\n    if len(i)>=k:\n        print('Yes')\n        for j in i[:k]:\n            print(j, end=' ')\n        b=1\n        break\nif b==0:\n    print('No')\n", "n,k,m=map(int,input().split())\na=list(map(int,input().split()))\n\nb=[0]*m\nfor x in a:\n\tb[x%m]+=1\n\nfor i in range(m):\n\tif b[i]>=k:\n\t\tprint('Yes')\n\t\tcnt=k\n\t\tfor x in a:\n\t\t\tif cnt==0:\n\t\t\t\tbreak\n\t\t\tif x%m==i:\n\t\t\t\tprint(x,end=' ')\n\t\t\t\tcnt-=1\n\n\t\treturn\n\t\nprint('No')\n", "n, k, m = [int(i) for  i in input().split()]\ns = [int(i) for i in input().split()]\nmi = [[] for i in range(m)]\nfor i in s:\n    mi[i%m].append(i)\nfor i in range(m):\n    if len(mi[i]) >= k:\n        print(\"Yes\")\n        print(*mi[i][:k])\n        return\n        break\nprint(\"No\")\n", "n,k,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nfor i in range(m):\n    b.append([])\nfor i in range(len(a)):\n    b[a[i]%m].append(a[i])\nfor i in range(len(b)):\n    if len(b[i])>=k:\n        j=0\n        print('Yes')\n        while j<k:\n            print(b[i][j],end=' ')\n            j+=1\n        break\nelse:\n    print('No')", "n, k, m = map(int, input().split())\na = map(int, input().split())\nresult, foundSolution = [[] for _ in range(m)], False\nfor i in a:\n    result[i % m].append(i)\n    if len(result[i % m]) == k:\n        print('Yes')\n        print(*result[i % m], sep=' ')\n        foundSolution = True\n        break\nif not foundSolution:\n    print('No')\n", "tmp = list(map(int,input().split()))\nn,k,m = tmp[0],tmp[1],tmp[2]\na = list(map(int,input().split()))\n\nd = {}\nfor i in a:\n    tmp = i % m\n    if tmp not in d:\n        d[tmp] = [i]\n    else:\n        d[tmp].append(i)\n\nOK = False\nfor i in range(m):\n    if i in d and len(d[i]) >= k:\n        OK = True\n        print('Yes')\n        for j in d[i][:k]:\n            print(j,end=\" \")\n        break\nif not OK:\n    print(\"No\")", "n,k,m=map(int,input().split())\na=list(map(int,input().split()))\nb=[]\nc=[]\nfound=False\nfor i in range(m):\n    c.append([])\n    b.append(0)\nfor i in a:\n    temp=i%m\n    b[temp]+=1\n    c[temp].append(i)\n    if(b[temp]>=k):\n        print(\"Yes\")\n        found=True\n        for j in c[temp]:\n            \n            print(j,end=' ')\n        print()\n        break\nif(not found):\n    print(\"No\")\n", "n,k,m=map(int,input().split())\ns=input().split()\nx=[0]*m\nfor i in range(n):\n    s[i]=int(s[i])\n    x[s[i]%m]+=1\nz=-1\nfor i in range(m):\n    if x[i]>=k:\n        z=i\n        break\nif z==-1:\n    print('No')\nelse:\n    i=0\n    print('Yes')\n    while k > 0:\n        if s[i]%m==z:\n            k+=-1\n            print(s[i],end=' ')\n        i+=1\n        \n        \n", "def solve(xs, k, m):\n\tmodded = [[] for _ in range(m)]\n\tfor x in xs:\n\t\tmodded[x % m].append(x)\n\n\tfor arr in modded:\n\t\tif len(arr) >= k:\n\t\t\treturn arr[:k]\n\t\n\treturn None\n\nn, k, m = list(map(int, input().split()))\nxs = list(map(int, input().split()))[:n]\n\nsolution = solve(xs, k, m)\nif solution:\n\tprint(\"Yes\")\n\tprint(\" \".join(map(str, solution)))\nelse:\n\tprint(\"No\")\n", "# python3\n# utf-8\n\nn, k, m = (int(x) for x in input().split())\nnumbers = [int(x) for x in input().split()]\nmod___numbers = [[] for x in range(m)]\nfor number in numbers:\n    mod___numbers[number % m].append(number)\nfor curr_ans in mod___numbers:\n    if len(curr_ans) >= k:\n        print('Yes')\n        print(*curr_ans[:k])\n        return\nprint('No')\n", "l1 = [int(i) for i in input().split()]\nl2 = [int(i) for i in input().split()]\nc = [0 for i in range(l1[2])]\n\nfor i in l2:\n\tc[i%l1[2]]+=1\na = []\nI=-1\nfor i in range(l1[2]):\n\tif c[i]>=l1[1]:\n\t\tI=i\n\t\tbreak\nif I>=0:\n\tprint('Yes')\n\ti = 0\n\tj = 0\n\twhile j<l1[1]:\n\t\tif l2[i]%l1[2]==I:\n\t\t\ta.append(str(l2[i]))\n\t\t\tj+=1\n\t\ti+=1\n\tprint(\" \".join(a))\nelse:\n\tprint('No')\n    \n", "# -*- coding: utf-8 -*-\n\nimport math\nimport collections\nimport bisect\nimport heapq\nimport time\nimport random\n\n\"\"\"\ncreated by shhuan at 2017/10/8 09:18\n    \n\"\"\"\n\n\nN, K, M = list(map(int, input().split()))\n\nnums = [int(x) for x in input().split()]\n\nnums = [(x%M, x) for x in nums]\n\nsv = collections.defaultdict(list)\nfor r, v in nums:\n    sv[r].append(v)\n    if len(sv[r]) == K:\n        print('Yes')\n        print(' '.join(map(str, sv[r])))\n        return\n\nprint('No')\n\n\n\n\n"]