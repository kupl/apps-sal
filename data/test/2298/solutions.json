["t = int(input())\ndef gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\nfor i in range(t):\n    a, b, q = map(int, input().split())\n    z = gcd(a, b)\n    target = (a * b)//z\n    pref = [0]\n    for j in range(1, target + 1):\n        if (j%a)%b != (j%b)%a:\n            pref.append(pref[-1]+1)\n        else:\n            pref.append(pref[-1])\n    \n    result = []\n    for i in range(q):\n        l , r = map(int, input().split())\n        temp_r = (r//target) * pref[-1]\n        r = r%target\n        l -= 1\n        temp_l = (l//target) * pref[-1]\n        l = l%target\n        temp_r += pref[r]\n        temp_l += pref[l]\n        result.append(temp_r - temp_l)\n    print(*result)", "import sys\ninput = sys.stdin.readline\n\ndef gcd(x, y):\n    if x < y:\n        x, y = y, x\n    while y:\n        x, y = y, x % y\n    return x\n\nt = int(input())\nfor _ in range(t):\n    a, b, q = map(int, input().split())\n    lcm = a * b // gcd(a,b)\n    g = gcd(a,b)\n    m = max(a,b)\n\n    def f(x):\n        total = x // lcm\n        extra = x % lcm\n        return x - (m * total + min(m,extra))\n        \n    \n    out = [0] * q\n    for i in range(q):\n        l, r = map(int, input().split())\n        out[i] = f(r + 1) - f(l)\n        \n    print(*out, sep = ' ')\n", "from sys import stdin\ninput = stdin.readline\nt = int(input())\nfor _ in range(t):\n\ta,b,q = map(int,input().split())\n\tprzyg = [0] * (a*b)\n\tfor i in range(a*b):\n\t\tif (i%a)%b != (i%b)%a:\n\t\t\tprzyg[i] = 1\n\tcyk = sum(przyg)\n\tpref = [0]*(a*b)\n\tpref[0] = przyg[0]\n\tfor i in range(1,a*b):\n\t\tpref[i] = pref[i-1] + przyg[i]\n\tfor query in range(q):\n\t\tl,r = map(int,input().split())\n\t\tll = l%(a*b)\n\t\trr = r%(a*b)\n\t\twynik = cyk * (r//(a*b) - l//(a*b))\n\t\twynik += pref[rr]\n\t\tif ll > 0:\n\t\t\twynik -= pref[ll-1]\n\t\tif query < q-1:\n\t\t\tprint(wynik, end = \" \")\n\t\telse:\n\t\t\tprint(wynik)", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\ndef gcd(x, y):\n    return x if y == 0 else gcd(y, x % y)\n\n\nt = read_int()\nfor case_num in range(t):\n    a, b, q = read_ints()\n    g = gcd(a, b)\n    lcm = a * b // g\n    acc = [0 for i in range(lcm)]\n    for i in range(1, lcm):\n        acc[i] = acc[i - 1]\n        if (i % a) % b != (i % b) % a:\n            acc[i] += 1\n    ans = []\n    for i in range(q):\n        l, r = read_ints()\n        curr = 0\n        n = l // lcm\n        x = l % lcm\n        m = r // lcm\n        y = r % lcm\n        if m > n + 1:\n            curr += (m - n - 1) * acc[lcm - 1]\n        if m > n:\n            curr += acc[lcm - 1] - acc[max(0, x - 1)]\n            curr += acc[y]\n        if m == n:\n            curr += acc[y] - acc[max(0, x - 1)]\n        ans.append(curr)\n    print(' '.join(map(str, ans)))\n", "import sys\ndef input():\n\treturn sys.stdin.readline()[:-1]\n\nt = int(input())\nfor _ in range(t):\n\ta, b, q = list(map(int, input().split()))\n\tans = [0 for _ in range(q)]\n\tres = [0 for _ in range(a*b)]\n\tfor i in range(1, a*b):\n\t\tif (i%a)%b != (i%b)%a:\n\t\t\tres[i] = res[i-1] + 1\n\t\telse:\n\t\t\tres[i] = res[i-1]\n\tdef func(x):\n\t\tquo, mod = x//(a*b), x%(a*b)\n\t\treturn quo * res[-1] + res[mod]\n\tfor i in range(q):\n\t\tl, r = list(map(int, input().split()))\n\t\tans[i] = func(r) - func(l-1)\n\tprint(*ans)\n", "n_cases = int(input())\nfor case_num in range(n_cases):\n    a, b, q = [int(x) for x in input().split()]\n    k = a*b\n    pref = [0] * k\n    for i in range(1, k):\n        pref[i] = pref[i-1]\n        if (i % a) % b != (i % b) % a:\n            pref[i] += 1\n    for i, query in enumerate(range(q)):\n        l, r = [int(x) for x in input().split()]\n        count = 0\n        if l % k != 0:\n            count += pref[k-1] - pref[(l % k) - 1]\n            l = ((l // k) + 1) * k\n        if r % k != k-1:\n            count += pref[(r % k)]\n            r = (r // k) * k - 1\n        assert (r - l + 1) % k == 0\n        count += pref[k-1] * ((r - l + 1) // k)\n        if i > 0:\n            print(' ', end='')\n        print(count, end='')\n    print()", "import sys\nreadline = sys.stdin.readline\n\ndef calc(x):\n    D = len(table)\n    J = table[-1]\n    return x//D*J + table[x%D]\n\nQ = int(readline())\nAns = [None]*Q\nfor qu in range(Q):\n    A, B, T = map(int, readline().split())\n    table = [0]*(A*B)\n    for i in range(1, A*B):\n        if (i%A)%B != (i%B)%A:\n            table[i] = 1 + table[i-1]\n        else:\n            table[i] = table[i-1]\n    ans = [None]*T\n    for t in range(T):\n        l, r = map(int, readline().split())\n        l -= 1\n        ans[t] = calc(r) - calc(l)\n    Ans[qu] = ' '.join(map(str, ans))\nprint('\\n'.join(map(str, Ans)))        ", "from bisect import bisect_left as bl\nfrom bisect import bisect_right as br\nfrom heapq import heappush,heappop\nimport math\nfrom collections import *\nfrom functools import reduce,cmp_to_key\n# import io, os\n# input = io.BytesIO(os.read(0,os.fstat(0).st_size)).readline\nimport sys\ninput = sys.stdin.readline\n\nM = mod = 10**9 + 7\ndef factors(n):return sorted(set(reduce(list.__add__, ([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0))))\ndef inv_mod(n):return pow(n, mod - 2, mod)\n\ndef li():return [int(i) for i in input().split()]\ndef st():return input()\ndef val():return int(input().rstrip('\\n'))\ndef li2():return [i for i in input().rstrip('\\n')]\ndef li3():return [int(i) for i in input().rstrip('\\n')]\n\ndef giveab(a,b):\n    l = []\n    for i in range(1,a * b + 1,1):\n        l.append(1 if ((i%a)%b) != ((i%b)%a) else 0)\n    return l[:]\n\ndef giveforanum(r,s,l):\n    temp = r//(a * b)\n    up = temp*s\n    r %= (a * b)\n    \n    return up + l[r]\n\n\nfor _ in range(val()):\n    a,b,q = li()\n    \n    l1 = giveab(a,b)\n    pref = [0]\n    for i in l1:pref.append(pref[-1] + i)\n\n    s = sum(l1)\n    ans = []\n    for i in range(q):\n        l,r = li()\n        ans.append(giveforanum(r,s,pref) - giveforanum(l-1,s,pref))\n    print(*ans)", "from math import gcd\n\nt = int(input())\nfor __ in range(t):\n    a,b,q = list(map(int,input().split()))\n    if a > b:\n        a, b = b, a\n    g = a * b // gcd(a, b)\n\n    # 1\u4ee5\u4e0am\u4ee5\u4e0b\n    def solve(m):\n        if m == 0:\n            return 1\n        aa,bb = divmod(m + 1, g)\n        ret = aa * b\n        ret += min(bb, b)\n        return ret\n    \n    def br(l, r):\n        ret = 0\n        for i in range(l, r + 1):\n            if (i % a) % b != (i % b) % a:\n                ret += 1\n        return ret\n\n    res = []\n    # brt = []\n    for _ in range(q):\n        l,r = list(map(int,input().split()))\n        if b % a == 0:\n            res.append(0)\n        else:\n            res.append(r - l + 1 - (solve(r) - solve(l - 1)))\n        # brt.append(br(l, r))\n    print(*res)\n    # print(*brt)\n", "for t in range(int(input())):\n    a, b, q = list(map(int, input().split()))\n    c = a * b\n    x = [0] * (c + 1)\n    for i in range(c):\n        if (i % a) % b != (i % b) % a:\n            x[i] = 1\n        x[i] += x[i - 1]\n\n    def get(y):\n        if y < 0:\n            return 0\n        cnt = y // c * x[c - 1]\n        return cnt + x[y % c]\n\n    ans = []\n    for _ in range(q):\n        l, r = list(map(int, input().split()))\n        ans.append(get(r) - get(l - 1))\n    print(*ans)\n", "from math import gcd\n\ndef f(a, b, x):\n    x += 1\n    p = a * b // gcd(a, b)\n    n = x // p\n    ans = n * b\n    ans += min(b, x - n * p)\n    return ans\n\nfor _ in range(int(input())):\n    a, b, q = map(int, input().split())\n    if a > b:\n        a, b = b, a\n    for i in range(q):\n        l, r = map(int, input().split())\n        ans = f(a, b, r) - f(a, b, l - 1)\n        ans = r - l + 1 - ans\n        print(ans, end=' ')\n    print()", "import sys\ninput=sys.stdin.readline\ndef gcd(a,b):\n    if a>b:a,b=b,a\n    while True:\n        a,b=b%a,a\n        if a==0:return b\ndef solve(l,r,a,b,lcm):\n    mx=max(a,b)\n    d1=l//lcm\n    d2=r//lcm\n    lr=l%lcm\n    rr=r%lcm\n    c=0\n    if lr>mx:c+=(lcm-lr)\n    else:c+=(lcm-mx)\n    if rr>=mx:c+=(rr-mx+1)\n    c+=(d2-d1-1)*(lcm-mx)\n    return c\nfor i in ' '*int(input()):\n    a,b,q=map(int,input().split())\n    g=gcd(a,b)\n    lcm=a*b//g\n    mx=max(a,b)\n    for j in ' '*q:\n        l,r=map(int,input().split())\n        print(solve(l,r,a,b,lcm),end=' ')\n    print()\n", "from itertools import accumulate\ndef solve():\n    a, b, q = map(int, input().split())\n    tb = [int(i % a % b != i % b % a) for i in range(a * b)]\n    bs = sum(tb)\n    tb += tb\n    tbs = [0] + list(accumulate(tb))\n    res = []\n    for i in range(q):\n        l, r = map(int, input().split())\n        r += 1\n        w = (r - l) // (a * b)\n        ans = w * bs\n        r -= w * a * b\n        u = l // (a * b)\n        l %= a * b\n        r -= u * (a * b)\n        ans += tbs[r] - tbs[l]\n        res.append(ans)\n    print(*res)\nt = int(input())\nfor _ in range(t):\n    solve()"]