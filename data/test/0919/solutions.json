["n, k = map(int, input().split())\ns = sorted(list(input()))\nprev = 0\nw = 0\nfor el in s:\n\tif k == 0:\n\t\tbreak\n\tif ord(el) >= prev + 2:\n\t\tk -= 1\n\t\tw += ord(el) - ord('a') + 1\n\t\tprev = ord(el)\nif k == 0:\n\tprint(w)\nelse:\n\tprint(-1)", "def main():\n    n, m = list(map(int, input().split()))\n    st = input()\n    a = [0] * n\n    for i in range(n):\n        a[i] = ord(st[i]) - 96\n    a.sort()\n    ans = 0\n    last = -1\n    c = 0\n    for i in range(n):\n        if a[i] - last >= 2:\n            c += 1\n            last = a[i]\n            ans += a[i]\n        if c == m:\n            print(ans)\n            return\n    print(-1)\nmain()\n", "n, k = list(map(int, input().split()))\ns = input()\nd = [False] * 26\nfor c in s:\n    d[ord(c) - ord('a')] = True\nw = 0\nl = 0\ni = 0\nwhile (i < 26) and (l < k):\n    if d[i]:\n        w += i + 1\n        l += 1\n        i += 2\n    else:\n        i += 1\nif (l == k):\n    print(w)\nelse:\n    print(-1)\n", "n,leng = list(map(int,input().split()))\ns = input()\nl = [0]*27\n\nfor c in s:\n    l[ord(c)-ord('a')+1] += 1\n\ni = 0\nnum = 0\nout = 0\nwhile i < 27 and num < leng:\n    if l[i]:\n        out += i\n        i += 2\n        num += 1\n    else:\n        i += 1\n\nif num == leng:\n    print(out)\nelse:\n    print(-1)\n", "import sys\nimport os\n\n\ndef solve(stages, k):\n    s = dict()\n    for char in stages:\n        s[ord(char) - ord('a')] = True\n\n    weight = 0\n    current = 0\n    last = -2\n    for i in range(26):\n        if i in s:\n            if i >= last + 2:\n                weight += i + 1\n                current += 1\n                last = i\n\n        if current == k:\n            break\n\n    return -1 if current < k else weight\n\ndef main():\n    n, k = map(int, input().split())\n    stages = input()\n    print(solve(stages, k))\n\ndef __starting_point():\n    main()\n__starting_point()", "a,b = list(map(int,input().split()))\ns = sorted(input())\n\nlast = '$'\ncost = 0\nused = 0\n\nfor c in s:\n    if ord(c) - ord(last) > 1:\n        cost += ord(c) - ord('a') + 1\n        used += 1\n        last = c\n    if used == b:\n        break\n\nif used == b:\n    print(cost)\nelse:\n    print(-1)\n", "n, k = list(map(int, input().split()))\ns = input()\nN = [False] * 26\nfor i in range(n):\n    N[ord(s[i]) - 97] = True\nc = 0\nw = 0\ni = 0\nwhile i < 26:\n    if N[i]:\n        c += 1\n        w += i + 1\n        i += 1\n    i += 1\n    if c == k:\n        break\nif c == k:\n    print(w)\nelse:\n    print(-1)\n        \n", "n, k = list(map(int, input().split()))\na = [0] * 26\ninn = input()\nfor i in inn:\n    a[ord(i) - ord('a')] += 1\nans = 0\ni = 0\nanss = 0\nwhile i < 26:\n    if (a[i]):\n        ans += 1\n        anss += i + 1\n        i += 1\n    \n    i += 1\n    if (ans == k):\n        break\n    \nif ans < k:\n    print(-1)\nelse:\n    print(anss)", "n, k = map(int, input().split())\na = list(input())\na.sort()\nc = ord('a') - 1\na = [ord(elem) - c for elem in a]\ncur = -1\nans = 0\nfor i in range(n):\n    if k == 0:\n        break\n    if a[i] > cur + 1:\n        cur = a[i]\n        ans += a[i]\n        k -= 1\nif k > 0:\n    print(-1)\nelse:\n    print(ans)", "n, k = list(map(int, input().split()))\ns = input()\n\nhas = [ord(el) - 96 for el in sorted(s)]\n\nans = has[0]\nlast = ans\ndone = 1\ni = 1\n\nwhile i < n and done < k:\n    if has[i] - 2 >= last:\n        ans += has[i]\n        last = has[i]\n        done += 1\n\n    i += 1\n\nif done == k:\n    print(ans)\n\nelse:\n    print(-1)\n", "from collections import defaultdict\nimport string\n\nn, k = [int(i) for i in input().split()]\nx = input()\nd = {}\nfor i in string.ascii_lowercase:\n    d[i] = i in x\ni = 0\ncount = 0\nwhile i < 26 and k > 0:\n    if d[string.ascii_lowercase[i]]:\n        count += i + 1\n        i += 2\n        k -= 1\n    else:\n        i += 1\n\nif k > 0:\n    print(-1)\nelse:\n    print(count)\n", "def read():\n    return int(input())\n\n\ndef readmap():\n    return list(map(int, input().split()))\n\n\ndef readlist():\n    return list(map(int, input().split()))\n\n\ndef ctoi(c):\n    return ord(c) - 96\n\n\nn, k = readmap()\nS = input()\nstage = [0] * 27\nfor s in S:\n    stage[ctoi(s)] = 1\n\nans = 0\ni = 1\nwhile k > 0 and i < 27:\n    if stage[i]:\n        ans += i\n        k -= 1\n        i += 2\n    else:\n        i += 1\n\nif k > 0:\n    print(-1)\nelse:\n    print(ans)\n", "n,k=map(int,input().split())\narr=sorted(list(input().strip()))\ncurr=0\nans=[ord(arr[0])-ord(\"a\")]\nfor i in arr:\n  if ord(i)-ord(\"a\")-ans[len(ans)-1]>=2:\n    ans.append(ord(i)-ord(\"a\"))\nif len(ans)<k:\n  print(-1)\nelse:\n  print(sum(ans[:k])+k)", "n,k=input().strip().split(' ')\nn,k=int(n),int(k)\ns=input()\narr=[]\nfor i in s:\n    arr.append(i)\narr.sort()\n#print(arr)\nwt=0\nprev=-2\nfor i in arr:\n    if(prev+2<=ord(i)-96):\n        wt+=ord(i)-96\n        prev=ord(i)-96\n        k-=1\n    if(not k):\n        break\nif(k):\n    print(-1)\nelse:\n    print(wt)\n", "#input = open('a0.in').readline\nn, k = map(int, input().split())\nstages = sorted(input().strip())\ni = 0\ntotal = 0\nlast = -1\nwhile k > 0 and i < n:\n\twi = ord(stages[i]) - ord('a') +1\n\tif wi > last + 1:\n\t\ttotal += wi\n\t\tk -= 1\n\t\tlast = wi\n\n\ti += 1\n\nif k >0:\n\tprint(-1)\nelse:\n\tprint(total)", "def main():\n    n, k = [int(x) for x in input().split()]\n    s = input()\n    s = ''.join(sorted(s))\n\n    count = 0\n    last = None\n    ans = 0\n\n    for i, c in enumerate(s):\n        if i == 0:\n            last = c\n            count += 1\n            ans += ord(c) - 96\n\n            if count == k:\n                break\n\n            continue\n\n        if ord(c) - ord(last) < 2:\n            continue\n\n        last = c\n        count += 1\n        ans += ord(c) - 96\n\n        if count == k:\n            break\n\n    else:\n        print(-1)\n        return\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = [int(c) for c in input().split(\" \")]\nline = [c for c in input()]\nline.sort()\n\n# print(line)\n\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\nalphabet_weight = {}\nfor i in range(len(alphabet)):\n    alphabet_weight[alphabet[i]] = i+1\n\ns = 0\np = 0\ni = 0\nprevious_weight = -10000\nwhile i < n:\n    if alphabet_weight[line[i]] > previous_weight + 1:\n        s += alphabet_weight[line[i]]\n        previous_weight = alphabet_weight[line[i]]\n        p += 1\n    if p == k: break\n    i += 1\n\nif i == n: s = -1\nprint(s)\n", "n,k = list(map(int,input().split()))\n\ndata = sorted(list(input()))\n\ndata = list([ord(x)-ord('a')+1 for x in data])\n\nresult = 0\nused = 0\nidx =0\nprev = -2\n\n\n# print(data)\n\nfor d in data:\n    if d > prev+1:\n        result+= d\n        prev = d\n        used += 1\n\n\n    if used == k:\n        break\n\nif used < k:\n    print(-1)\nelse:\n    print(result)\n\n", "n, k = list(map(int, input().split()))\ns = list(input())\n\ns = list(sorted(s))\nprv = 'Y'\ncnt = 0\nans = 0\nfor c in s:\n    if ord(prv) + 1 < ord(c):\n        ans += ord(c) - ord('a') + 1\n        prv = c\n        cnt += 1\n    if cnt == k:\n        break\n\nif cnt == k:\n    print(ans)\nelse:\n    print(-1)\n", "na = list(map(int, input().split()))\ns = input()\n\nn = na[0]\nk = na[1]\n\namk = 0\ns = sorted(s)\nlast = -2\nans = 0\namdone = 0\n\nfor i in range(len(s)):\n\tif amdone == k:\n\t\tbreak\n\tif k + amk > n:\n\t\tprint(-1)\n\t\treturn\n\tif ord(s[i])-96 > last+1:\n\t\tlast = ord(s[i])-96\n\t\tans += ord(s[i])-96\n\t\tamdone += 1\n\telse:\n\t\tamk += 1\n\nif k + amk > n:\n\tprint(-1)\nelse:\n    print(ans)\n", "n, k = list(map(int, input().split()))\ns = input()\ndef f(x):\n\treturn (ord(x) - ord(\"a\")) + 1\na = []\nfor i in s:\n\ta.append(i)\na.sort()\ncurr = 1\ncount = 1\nans = 0\nlast = 0\nans += f(a[0])\nwhile curr < n and count < k:\n\tif f(a[curr]) - f(a[last]) >= 2:\n\t\tans += f(a[curr])\n\t\tlast = curr\n\t\tcount += 1\n\tcurr += 1\nif count == k:\n\tprint(ans)\nelse:\n\tprint(-1)\n\n\n", "import math\n\nn, k = list(map(int, input().split()))\nstr = input()\nl = []\nfor elem in str:\n    l.append(elem)\nl.sort()\nstup = chr(97-2)\nx = 0\nxc = 0\nflag = True\nfor i in range(n):\n    if ord(stup)+1 < ord(l[i]):\n        x+=1\n        xc += ord(l[i]) - 96\n        stup = l[i]\n        if x == k:\n            print(xc)\n            flag = False\n            break\nif flag:\n    print(-1)\n\n\n\n\n\n\n\n", "n,k = list(map(int,input().split()))\ns = input()\na = [0]*26\nfor i in range(n):\n    a[ord(s[i])-97]= 1\nuk = 0\nsu = 0\nwhile(1):\n    if a[uk] == 1:\n        su+=uk+1\n        uk+=2\n        k-=1\n    else:\n        uk+=1\n    if uk >= 26 or k==0:\n        break\nif k==0:print(su)\nelse : print(-1)\n", "from sys import stdin\nfrom math import *\n\nline = stdin.readline().rstrip().split()\nn = int(line[0])\nk = int(line[1])\nletters = stdin.readline().rstrip().split()\n\navailable = [False]*26\n\nfor c in letters[0]:\n    available[ord(c)-ord('a')] = True\n\ni = 0\ncant = 0\naccum = 0\nwhile i < 26 and cant < k:\n    if available[i]:\n        cant+=1\n        accum += (i+1)\n        i += 1\n    i += 1\n\nif cant < k:\n    print(-1)\nelse:\n    print(accum)"]