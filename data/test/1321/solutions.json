["n = int(input())\nwihi = [list(map(int,input().split())) for i in range(n)]\nW = 0\nH = 1\nH1 = 1\nnum = 0\nfor i in wihi:\n    W += i[0]\n    H = max(H,i[1])\nfor i in range(n):\n    if num == 0:\n        if wihi[i][1] == H:\n            num = 1\n        else:\n            H1 = max(H1,wihi[i][1])\n    else:\n        H1 = max(H1,wihi[i][1])\nif H1 == H:\n    for i in wihi:\n        print((W - i[0]) * (H),end=\" \")\nelse:\n    for i in wihi:\n        if i[1] == H:\n            print((W - i[0]) * (H1),end=\" \")\n        else:\n            print((W - i[0]) * (H),end=\" \")\n    \n", "ws = []\nhs = []\na = int(input())\n\nmaxes = []\nmaxx = -1\nfor i in range(a):\n    w, h = list(map(int, input().split(' ')))\n    \n    ws.append(w)\n    hs.append(h)\n\nhs2 = hs[:]\nhs2.sort()\nhs2.reverse()\n\nfir = hs2[0]\nsec = hs2[1]\n\nt = sum(ws)\ngod = []\nfor i in range(a):\n    if hs[i] == fir:\n        god.append((t - ws[i]) * sec)\n    else:\n        god.append((t-ws[i])*fir)\nprint(' '.join([str(i) for i in god]))\n", "n = int(input())\nwidth = 0\nheight = [0,0,False]\nmen = []\nfor i in range(n):\n\tman = input().split(' ')\n\tman[0] = int(man[0])\n\tman[1] = int(man[1])\n\tmen.append(list(man))\n\twidth += man[0]\n\tif man[1] > height[0]:\n\t\theight[1] = height[0]\n\t\theight[0] = man[1]\n\telif man[1] == height[0]:\n\t\theight[2] = True\n\telif man[1] > height[1]:\n\t\theight[1] = man[1]\nansw = []\nfor i in range(n):\n\tansw.append(str((width-men[i][0])*(height[1] if men[i][1] == height[0] and height[2] == False else height[0])))\nprint(\" \".join(answ))", "def main():\n    n = int(input())\n    height = [] \n    width = []\n    for i in range(n):\n        a, b = map(int, input().split())\n        width.append(a)\n        height.append(b)\n    s_w = sum(width)\n    m_h = max(height)\n    a = height.index(m_h)\n    height[a] = 0\n    s_m = max(height)\n    height[a] = m_h\n    for i in range(n):\n        if height[i] != m_h:\n            print((s_w -width[i]) * m_h, end=' ')\n        else:\n            print(s_m * (s_w -width[i]), end=' ')\nmain()", "#!/bin/env python3\n\nfrom sys import stdin\nfrom collections import namedtuple\n\nGuy = namedtuple('Guy', ['w', 'h'])\n\nmaxh1 = 0\nmaxh2 = 0\n\nguys = []\n\nsumw = 0\nstdin.readline()\nfor line in stdin:\n    try:\n        w, h = map(lambda s: int(s.strip()), line.lstrip().split(' ', 1))\n    except:\n        continue\n    guys.append(Guy(w, h))\n    sumw += w\n    if h >= maxh1:\n        maxh2 = maxh1\n        maxh1 = h\n    elif h > maxh2:\n        maxh2 = h\n\nfor g in guys:\n    sq = (sumw - g.w)*(maxh1 if g.h != maxh1 else maxh2)\n    print (sq, end=' ')\n\nprint()\n", "n = int(input())\nwh = []\nall_w = 0\nmax_h = 0\nnot_sorted = []\nfor i in range(n):\n    current = list(map(int, input().split()))\n    max_h = max(max_h, current[1])\n    all_w += current[0]\n    wh.append(current[::-1])\n    not_sorted.append(current)\nwh.sort()\nfor i in range(n):\n    if not_sorted[i][1] == max_h:\n        print((all_w-not_sorted[i][0])*wh[-2][0], end=\" \")\n    else:\n        print((all_w-not_sorted[i][0])*max_h, end=\" \")\n", "__author__ = 'ruckus'\n\nn = int(input())\n\nw = [0 for i in range(n)]\nh = [0 for i in range(n)]\n\nmax_w = 0\nmax_h = 0\npremax_h = 0\nin_w = []\nin_h = []\nfor i in range(n):\n    cur_w, cur_h = input().split()\n    cur_h = int(cur_h)\n    cur_w = int(cur_w)\n    max_w += cur_w\n    in_w.append(cur_w)\n    in_h.append(cur_h)\nmax_h = max(in_h)\ncopy_in_h = in_h.copy()\ncopy_in_h.remove(max_h)\npremax_h = max(copy_in_h)\nfor i in range(n):\n    w[i] = max_w - in_w[i]\n    if in_h[i] == max_h:\n        h[i] = premax_h\n    else:\n        h[i] = max_h\n\nfor w, h in zip(w,h):\n    print(w*h, end=' ')", "class Struct:\n\tpass\n\t\ndef algorithm():\n\ttry:\t\n\t\tsum = 0\n\t\tcount = int(input())\n\t\tmax_1 = Struct()\n\t\tmax_2 = Struct()\n\t\tmax_1.height = 0\n\t\tmax_1.id = 0\n\t\tmax_2.height = 0\n\t\tmax_2.id = 0\n\t\t\n\t\tif not (2 <= count <= 200000):\n\t\t\treturn None\n\t\t\t\n\t\tarr = list()\n\t\tfor i in range(0, count):\n\t\t\tparam = input().split(' ')\n\t\t\twidth = int(param[0])\n\t\t\theight = int(param[1])\n\t\t\tif (1 <= width <= 10) and (1 <= height <= 1000):\n\t\t\t\tif height >= max_1.height:\n\t\t\t\t\tmax_2.height = max_1.height\n\t\t\t\t\tmax_2.id = max_1.id\n\t\t\t\t\tmax_1.height = height\n\t\t\t\t\tmax_1.id = i\n\t\t\t\telif height > max_2.height:\n\t\t\t\t\tmax_2.height = height\n\t\t\t\t\tmax_2.id = i\n\t\t\t\tsum += width\n\t\t\t\tarr.append(width)\n\t\t\telse:\n\t\t\t\treturn None\n\t\t\n\t\tresult = ''\n\t\tfor i in range(0, count):\n\t\t\tw = sum - arr[i]\n\t\t\tif i == max_1.id:\n\t\t\t\th = max_2.height\n\t\t\telse:\n\t\t\t\th = max_1.height\n\t\t\tresult += str(w * h)\n\t\t\tif i < count - 1: result += ' '\n\t\tprint(result)\n\t\t\t\n\texcept BaseException:\n\t\treturn None\n\t\nalgorithm()", "#!/usr/bin/env python3\n# coding: utf-8\n\nn = int(input())\n\nfriends = [\n    tuple(map(int, input().split()))\n    for _ in range(n)\n]\n\nw_sum = sum(friend[0] for friend in friends)\ntop_height_0, top_height_1 = sorted((friend[1] for friend in friends), reverse=True)[:2]\n\nfor friend in friends:\n    print((w_sum - friend[0]) * (top_height_0 if friend[1] != top_height_0 else top_height_1), end=\" \")\n", "n = int(input())\nsum,h,w,c=0,[],[],[]\nfor i in range(n):\n    a,b = map (int,input().split ())\n    w.append(a)\n    h.append(b)\n    c.append(b)\n    sum+=a\nc.sort()\nfor i in range(n):\n    mh = c[n-1]\n    if (h[i] == mh):\n        mh = c[n-2]\n    print((sum-w[i])*mh,end=' ')", "import sys\n\n__author__ = 'zumzoom'\n\nn = int(sys.stdin.readline())\nA = []\nw = 0\nh1, h2 = 0, 0\ni1 = 0\nfor line in sys.stdin.readlines()[:n]:\n    l = [int(x) for x in line.split()]\n    A.append(l[0])\n    w += l[0]\n    if l[1] > h1:\n        h2 = h1\n        h1 = l[1]\n        i1 = len(A) - 1\n    elif l[1] > h2:\n        h2 = l[1]\n\nfor i in range(n):\n    if i == i1:\n        print((w - A[i]) * h2, end=' ')\n    else:\n        print((w - A[i]) * h1, end=' ')\n", "n = int(input())\nw_fr = []\nh_fr = []\nc=0\nb=0\nitog = \"\"\nd = 0\n\nfor i in range(n):\n    w, h = map(int, input().split(\" \"))\n    w_fr.append(w)\n    h_fr.append(h)\n    d += w\n    \nh_minus_max, h_max = sorted(h_fr)[-2:]\n\nfor i in range(n):\n    b = d - w_fr[i]\n    if h_max == h_fr[i]:\n        itog += str(h_minus_max*b) + \" \"\n    else:\n        itog += str(h_max*b) + \" \"\n    c=0\n    b=0\n\nprint(itog[:-1])", "#!/usr/bin/env python3\nfrom sys import stdin\n\nn = int(stdin.readline().strip())\nw, h = list(), list()\nw_sum = 0\nh_max = 0\nh_second = 0\nfor i in range(n):\n    cur_w, cur_h = map(int, stdin.readline().strip().split())\n    w.append(cur_w)\n    w_sum += cur_w\n    if cur_h <= h_max and cur_h > h_second:\n        h_second = cur_h\n    if cur_h > h_max:\n        h_second = h_max\n        h_max = cur_h\n        h_max_index = i\n        has_single_max = True\n    elif cur_h == h_max:\n        has_single_max = False\n\nfor i in range(n):\n    print((w_sum - w[i]) * (h_max if not has_single_max or i != h_max_index else h_second), end=' ')\n", "#import time\n#start = time.time()\n\nhwarr = []\nl = int(input())\nfor i in range(l):\n    hwarr.append(list(map(int, input().split())))\n\npixs = ''\nsws = sum(hwarr[n][0] for n in range(l))\nmhs = max(hwarr[n][1] for n in range(l))\nfor i in range(l):\n    if hwarr[i][1] == mhs:\n        mi = i\n        break\nnarr = []\nnarr += hwarr; narr.pop(mi)\nnmhs = max(narr[n][1] for n in range(l-1))\n\nfor i in range(l):\n    sw = sws - hwarr[i][0]\n    if i == mi:\n        mh = nmhs\n    else:\n        mh = mhs\n    pixs += str(sw*mh)+' '\n\nprint(pixs[:-1])\n\n#stop = time.time()\n#print(stop-start)\n", "n = int(input()) #\u043a\u043e\u043b \u0434\u0440\u0443\u0437\u0435\u0439\nmaxW = 0\nwidthes = []\nheigthes = []\nfor i in range(n):\n    w, h = map(int, input().split())\n    maxW += w\n    widthes.append(w)\n    heigthes.append(h)\nmaxH = max(heigthes)\nindexMaxH = heigthes.index(maxH)\nfor i in range(n):\n    if i == indexMaxH:\n        el = heigthes.pop(i)\n        maxH2 = max(heigthes)\n        heigthes.insert(i,el)\n        print((maxW - widthes[i]) * maxH2,end = \" \")\n    else:\n        print((maxW - widthes[i]) * maxH,end = \" \")", "import sys\n\nn = int(sys.stdin.readline())\nwidth = {}\nheights = []\nfor i in range(n):\n    w, h = list(map(int, sys.stdin.readline().strip().split()))\n    heights.append((h, i))\n    width[i] = w\ntotal_width = sum(width.values())\n\nheights.sort(reverse=True)\nfor i in range(n):\n    w = total_width - width[i]\n    h = heights[0][0] if heights[0][1] != i else heights[1][0]\n    sys.stdout.write(str(w*h) + ' ')\n", "n=int(input())\nw=[[] for i in range(n)]\nh=[[] for i in range(n)]\nh1=[[] for i in range(n)]\nsum=0\nfor i in range(n):\n    wi,hi=map(int,input().split())\n    w[i]=wi\n    h[i]=hi\n    h1[i]=hi\n    sum+=wi\nm1=max(h)\n\n\nh1.remove(m1)\nm2=max(h1)\n\n\nfor i in range(n):\n    s1=sum-w[i]\n    if h[i]==m1:\n        s2=m2\n    else:\n        s2=m1\n       \n    print(s1*s2,end=' ')", "n = int(input())\nws, hs, ans = [], [], ''\nfor i in range(n):\n    w,h = map(int,input().split())\n    ws.append(w)\n    hs.append(h)\nconst = tuple(hs)\nsum_ws = sum(ws)\nmax_hs = (max(hs), hs.index(max(hs)))\nfor i in range(n):\n    if i == max_hs[1]:\n        hs[i] = 0\n        ans += str((sum_ws-ws[i])*max(hs)) + ' '\n        hs = list(const)\n        max_hs = (max(hs), hs.index(max(hs)))\n    else:\n        ans += str((sum_ws-ws[i])*max_hs[0]) + ' '\nprint(ans[:-1])", "n = int(input())\nw = [0] * (n)\nh = [0] * (n)\nfor i in range(n):\n    w[i], h[i] = map(int, input().split())\ns = sum(w)\ntemp = sorted(h)\nm1, m2 = temp[-1], temp[-2]\nfor i in range(n):\n    a = s - w[i]\n    b = m1\n    if h[i] == m1:\n        b = m2\n    print(a*b, end=' ')", "st=int(input())\nsumma=0\nq=[]\nw=[]\nish=[]\nfor i in range(st):\n    z,x=map(int,input().split())\n    q.append(z)\n    w.append(x)\n    ish.append(x)\nsumma=sum(q)\nw.sort()\nfor i in range(st):\n    qw=w[st-1]\n    if ish[i]==qw:\n        qw=w[st-2]\n    print((summa-q[i])*qw,end=' ')", "n = int(input())\ni=0\nw=[]*n\nh=[]*n\ni=0\nwhile (i<n):\n    pair = input().split()\n    w.append(int(pair[0]))\n    h.append(int(pair[1]))\n    i+=1\nW=0\nfor x in w :\n    W+=x\nh_sorted = sorted(h)\nfor x in range(0,n):\n    W_new = W-w[x]\n    if(h[x]==h_sorted[-1]):\n        h_new = h_sorted[-2]\n    else:\n        h_new = h_sorted[-1]\n    b= h_new * W_new \n    print(b, end=\" \")\n\n\n\n\t\n\n    \n", "def main():\n    n = int(input())\n    ww, hh = [0] * n, [0] * n\n    for i in range(n):\n        w, h = map(int, input().split())\n        ww[i], hh[i] = w, h\n    hi = sorted(range(n), key=hh.__getitem__)\n    width = sum(ww)\n    height = hh[hi[-1]]\n    for i in hi[:-1]:\n        ww[i] = (width - ww[i]) * height\n    i = hi[-1]\n    ww[i] = (width - ww[i]) * hh[hi[-2]]\n\n    print(' '.join(map(str, ww)))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n = int(input())\n    ww, hh = [0] * n, [0] * n\n    for i in range(n):\n        w, h = map(int, input().split())\n        ww[i], hh[i] = w, h\n    idx = max(range(n), key=hh.__getitem__)\n    mx0 = hh[idx]\n    hh[idx] = 1\n    mx1 = max(hh)\n    width = sum(ww)\n    for i, w in enumerate(ww):\n        if i == idx:\n            ww[i] = (width - ww[i]) * mx1\n        else:\n            ww[i] = (width - ww[i]) * mx0\n    print(' '.join(map(str, ww)))\n\n\ndef __starting_point():\n    main()\n__starting_point()"]