["import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\ngosa = 1.0 / 10**10\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\n\n\ndef main():\n    n,k = LI()\n    if k == 0 or n==k:\n        return '0 0'\n\n    return \"1 {}\".format(min(n-k, k*2))\n\nprint(main())\n\n\n\n", "n,k = list(map(int,input().split()))\nans1, ans2 = 0, 0\n\nif(k != 0 and k != n):\n\tans1 = 1\nif(3*k < n):\n\tans2 = 2*k\nelse:\n\tans2 = n-k\n\nprint(ans1, ans2)\n", "n, k = list(map(int, input().split()))\n\nprint(min(n - k, min(k, 1)), min(2 * k, n - k))", "def list_input():\n    return list(map(int,input().split()))\ndef map_input():\n    return list(map(int,input().split()))\ndef map_string():\n    return input().split()\n\nn,k = map_input()\na = -1\nb = -1\nif k == 0 or k == n:\n  a = 0\n  b = 0\nelse:\n  a = 1\n  b = n-k\n  b = min(b,k*2)\nprint(a,b)  \n", "n, k = map(int, input().split())\nmini, maxi = 0, 0\nif n > k and k != 0: \n    mini = 1\nelse:\n    mini = 0\n\nif (n > 3 * k):\n    maxi = 2 * k\nelse:\n    maxi = n - k\nprint(mini, maxi)", "from math import ceil\nn,k = list(map(int, input().split()))\n\nif k > 0 and k < n:\n    ans1 = 1\nelse:\n    ans1=0\nif k >= ceil(n/3):\n    ans2 = n-k\nelse:\n    ans2 = 2*k\n\nprint(ans1, ans2)\n", "from sys import stdin, stdout\n\nn,k = list(map(int,stdin.readline().rstrip().split()))\n\nminH = min([1,k,n-k])\nmaxH = min([2*k,n-k])\n\nprint(str(minH) + ' ' + str(maxH))\n", "#!/bin/python3\n\nimport sys\nn,k=map(int,input().split())\nif k!=0:\n    print (str(min(1,n-k)),str(min(2*k,n-k)))\nelse:\n    print (\"0 0\")", "n,k=list(map(int,input().split()))\nlow=-1\nhigh=-1\nif k==0:\n    low=0\n    high=0\nelse:\n    if k==n:\n        low=0\n        high=0\n    else:\n        low=1\n        if n>=3*k:\n            high = 2*k\n        else:\n            high = n-k\nprint(low,high)\n", "n,k = map(int,input().split())\nif(k == 0):\n\tmini = 0\n\tmaxi = 0\nelif(k == n):\n\tmini = 0\n\tmaxi = 0\nelse:\n\tmini = 1\n\tmaxi = 2*k\n\tmaxi = min(maxi,n-k)\n\nprint(mini, maxi)", "import sys\n\n\ndef main():\n    n, k = list(map(int, sys.stdin.readline().split()))\n    if k == 0 or k == n:\n        print(0, 0)\n        return\n\n    if k * 3 >= n:\n        m = n - k\n    else:\n        m = 2 * k\n\n    print(1, m)\n\n\nmain()\n", "apartments_nr, neighbours_nr = (int(x) for x in input().split())\nmin_ans = int(apartments_nr != neighbours_nr)\nif neighbours_nr == 0:\n    min_ans = 0\nmax_ans = min(2 * neighbours_nr, apartments_nr - neighbours_nr)\nprint(min_ans, max_ans)\n\n\n", "n, k = list(map(int, input().split()))\n\na = 0 if k == 0 or k == n else 1\nb = min(2 * k, n - k)\nprint(\"%d %d\" % (a, b))\n", "n, k = map(int, input().split())\nif k == 0 or k >= n:\n    print(0, 0)\nelif 3 * k >= n:\n    print(1, n - k)\nelse:\n    print(1, k * 2)", "from sys import stdout\nfrom random import randint \nfrom math import *\nimport re\n\n\nn, k = list(map(int, input().split()))\n\ndef find_min(n, k):\n    return 0 if k == 0 or k == n else 1\n\ndef find_max(n, k):\n    return min(k * 2, n - k)\n\nprint(find_min(n, k), find_max(n, k))\n", "n, k = map(int, input().split())\nif k == n or k == 0:\n    a = 0\nelse:\n    a = 1\nb = 0\nif n == k or k == 0:\n    b = 0\nelse:\n    b = min(n // 3, k) * 2\n    k -= min(n // 3, k)\n    if k != 0:\n        if n % 3 == 1:\n            k -= 1\n        elif n % 3 == 2:\n            k -= 1\n            b += 1\n    b -= k\nprint(a, b)", "n,k = map(int, input().split())\n\nm,M = 0,0\n\nif n > k > 0:\n  m = 1\n\nK = (n+2)//3\nif k < K:\n  M = k*2\nelse:\n  M = n - k\n\nprint(m,M)", "n, k = map(int,input().split())\nworst = 1 if 1 <= k < n else 0\nbest = min(n-k, 2*k)\nprint(worst, best)", "n, k = list(map(int, input().split()))\nif n == 1 or k == 0 or k == n:\n    print(0, 0)\nelif n // k < 3:\n    print(1, n-k)\nelse:\n    print(1, 2*k)\n\n", "\n\ndef main():\n    n, k = list(map(int, list(input().split())))\n    _min = 0\n    _max = 0\n    if k == n or k == 0:\n        print(0, 0)\n        return\n    _min = 1\n    if n <= 3 * k:\n        _max = n - k\n    else:\n        _max = k * 2\n\n    print(_min, _max)\nmain()\n", "n, k = map(int, input().split())\n\ndef min(a, b):\n\tif a < b:\n\t\treturn a\n\treturn b\nif k == 0:\n\tprint(0, 0)\nelse:\n\tprint(min(n-k, 1), min(n-k, 2*k))", "n, m = list(map(int, input().split()))\n\nif m <= 0 or m >= n:\n\ta = 0\nelse:\n\ta = 1\n\nb = 0\nif m > 0:\n\tif m * 2 <= n:\n\t\tif n % 2 == 0 and m >= n // 2:\n\t\t\tb = max(b, m)\n\t\telse:\n\t\t\tb = max(b, m + 1)\n\telse:\n\t\tb = max(b, (n - n // 2) - (m - n // 2))\n\n\tif m * 3 <= n:\n\t\tb = max(b, m * 2)\n\telse:\n\t\tb = max(b, n // 3 * 2 - (m - n // 3 - n % 3))\n\nprint(a, b)\n", "n,k=[int(i)for i in input().split()]\nif k==n:\n\tprint(0,0)\n\treturn\nif k==0:\n\tprint(0,0)\n\treturn\t\t\na = 1\nb=0\nh = n//3\nif k<=h:\n\tb = 2*k\nelse :\n\tk-=h\n\tb = h*2 + n%3\n\tif n%3>0:\n\t  \tk-=1\n\t  \tb-=1  \t\n\tb -=k\nprint(a,b)\t  \t\n\n\n\n", "n, k = map(int, input().split())\nif k == 0 or k == n:\n    print(0, 0)\nelse:\n    c = n // 3\n    m = n % 3\n    if c >= k:\n        print(1, k * 2)\n    else:\n        ans = c * 2\n        if m == 2:\n            ans += 1\n            k -= 1\n        elif m == 1:\n            k -= 1\n        ans -= (k - c)\n        print(1, ans)", "n, k = map(int, input().split())\n\nif k == 0 or k == n:\n    print('0 0')\nelse:\n    mi = 1\n    groups = n // 3\n    \n    if groups >= k:\n      ma = 2 * k\n    else:\n      ma = n - k\n      \n    print(mi, ma)"]