["import sys\ndef solve():\n    readline = sys.stdin.readline\n    write = sys.stdout.write\n    MOD = 998244353\n\n    N = int(readline())\n    P = [list(map(int, readline().split())) for i in range(N)]\n\n    P.sort()\n\n    Y = [y for x, y in P]\n\n    def compress(X):\n        *XS, = set(X)\n        XS.sort()\n        return list(map({e: i for i, e in enumerate(XS)}.__getitem__, X))\n    Y = compress(Y)\n\n    data = [0]*(N+1)\n    def add(k, x):\n        while k <= N:\n            data[k] += x\n            k += k & -k\n    def get(k):\n        s = 0\n        while k:\n            s += data[k]\n            k -= k & -k\n        return s\n\n    pow2 = [1]*(N+1)\n    r = 1\n    for i in range(1, N+1):\n        pow2[i] = r = r * 2 % MOD\n\n    def gen(add, get, pow2):\n        for i, y in enumerate(Y):\n            v = get(y+1); add(y+1, 1)\n            p1 = pow2[v]; p0 = pow2[y - v]\n            q1 = pow2[i - v]; q0 = pow2[(N - y - 1) - (i - v)]\n            yield (p0 + p1 + q0 + q1 - (p0 + q1) * (p1 + q0)) % MOD\n    write(\"%d\\n\" % ((sum(gen(add, get, pow2)) + N*pow2[N] - N) % MOD))\nsolve()", "import sys\nimport array\n\nfrom operator import itemgetter\n\ndef main():\n\n\n\n\tinput = sys.stdin.readline\n\n\n\tmd = 998244353\n\tn = int(input())\n\ttl=n+1\n\t\n\tft=[0]*tl\n\n\txy = [[0]*2 for _ in range(n)]\n\tfor i in range(n):\n\t\txy[i] = [int(item) for item in input().split()]\n\txy.sort(key=itemgetter(0))\n\tyxi = [y for x, y in xy]\n\n\t*YS, = set(yxi)\n\tYS.sort()\n\tyxi= list(map({e: i for i, e in enumerate(YS)}.__getitem__, yxi))\n\n\tct=[0]*(n+1)\n\tct[0]=1\n\tfor i in range(1,n+1):\n\t\tct[i]=ct[i-1]*2%md\n\n\tcnt=tuple(ct)\n\n\tdef upd(i):\n\t\ti+=1\n\t\twhile(i<=n):\n\t\t\tft[i]+=1\n\t\t\ti+=i&-i\n\n\tdef get(i):\n\t\ti+=1\n\t\tret=0\n\t\twhile(i!=0):\n\t\t    ret+=ft[i]\n\t\t    i-=i&-i\n\t\treturn ret\n\n\tdef calc(get,upd):\n\t\tfor i, y in enumerate(yxi):\n\t\t\tv = get(y); upd(y)\n\t\t\tp1 = cnt[v]; p0 = cnt[y - v]\n\t\t\tq1 = cnt[i - v]; q0 = cnt[(n - y - 1) - (i - v)]\n\t\t\tyield (p0 + p1 + q0 + q1 - (p0 + q1) * (p1 + q0)) % md\n\n\n\tprint(((sum(calc(get,upd))+n*cnt[n] - n)%md))\n\nmain()\n", "import sys\ninput = sys.stdin.readline\nmod = 998244353\n\ndef sub(a, b):\n    return (a % mod + mod - b % mod) % mod\n\n\ndef main():\n    n, = list(map(int, input().split()))\n    t = 1\n    dd = [t]\n    for _ in range(n):\n        t=2*t%mod\n        dd.append(t)\n\n    xs, ys = [], []\n    for _ in range(n):\n        x, y = list(map(int, input().split()))\n        xs.append(x)\n        ys.append(y)\n\n    ini = sorted(list(range(n)), key=lambda x:xs[x])\n    for i, yi in enumerate(sorted(list(range(n)), key=lambda x:ys[x])):\n        ys[yi] = i \n    nys = [ys[i] for i in ini]\n\n    tree = [0] * (n + 1)\n    r = 0\n    for i, y in enumerate(nys):\n        j = y+1\n        while j <= n:\n            tree[j] += 1\n            j += j & -j\n\n        d = 0\n        j = y\n        while j > 0:\n            d += tree[j]\n            j -= j & -j\n\n        c = i - d\n        b = (n-1) - y - c\n        a = (n-1) - b - c - d\n        r = (r + sub(dd[b+c] + dd[c+d] + dd[d+a] + dd[a+b],\n                dd[a] + dd[b] + dd[c] + dd[d])) % mod\n\n    print((sub((dd[n] * n) % mod, (r+n)%mod)))\nmain()\n"]