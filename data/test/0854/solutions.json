["n, t = list(map(int, input().split()))\na = [int(x) for x in input().split()]\n\notv = 0\n\ndef rec(t, a):\n\tnonlocal otv\n\ts = 0\n\tfor c in a:\n\t\ts += c\n\tkol = t // s\n\tkol = max(kol, 0)\n\totv += (kol * len(a))\n\toctat = t - kol * s\n\tres = []\n\tsu = 0\n\tfor c in a:\n\t\tif su + c <= octat:\n\t\t\tres.append(c)\n\t\t\tsu += c\n\tif su == 0:\n\t\tprint(otv)\n\t\treturn\n\t#print(octat, res, otv)\n\trec(octat, res)\n\nrec(t, a)\n", "def sum(a):\n    s = 0\n    for i in a:\n        s += i\n    return s\n\nn, T = map(int, input().split())\na = list(map(int, input().split()))\n\nsum = sum(a)\n\nk = 0\nk += n * (T // sum)\nT %= sum\n\nnew_a = []\nnew_sum = 0\nch = True\nwhile ch:\n    for i in range(n):\n        if a[i] <= T:\n            new_a.append(a[i])\n            new_sum += a[i]\n            k += 1\n            T -= a[i]\n\n    n = len(new_a)\n\n    if n == 0:\n        ch = False\n        break\n\n    sum = new_sum\n    a = new_a\n    new_a = []\n    new_sum = 0\n\n    k += n * (T // sum)\n    T %= sum\n\n\nprint(k)", "n,t=map(int,input().split())\na=list(map(int,input().split()))\nsum1=0\nfor i in range(n):\n    sum1+=a[i]\nb=t%sum1\nbought=(t//sum1)*n\nk=0\nl=min(a)\ngone=[0]*n\nwhile b>=l:\n    for i in range(n):\n        if a[i]>b and gone[i]==0:\n            k+=1\n            gone[i]=1\n            sum1-=a[i]\n    bought+=(b//sum1)*(n-k)\n    b=b%sum1\n    if b//sum1==0:\n        for i in range(n):\n            if a[i]<=b:\n                bought+=1\n                b-=a[i]\nprint(bought)", "\ndef buy(n, t, c, s):\n    if len(c) == 0:\n        return 0\n    ans = 0\n    if t >= s:\n        ans += n*(t//s)\n        t %= s\n    nc = []\n    for i in range(n):\n        if t >= c[i]:\n            nc.append(c[i])\n            t -= c[i]\n            ans += 1\n        else:\n            s -= c[i]\n    ans += buy(len(nc), t, nc, s)\n    return ans\n\n\ndef main():\n    n, t = [int(x) for x in input().split(\" \")]\n    c = list([int(x) for x in input().split(\" \")])\n    s = sum(c)\n\n    print(buy(n, t, c, s))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, t = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\ns = 0\nc = 0\nwhile True:\n\tc = 0\n\ts = 0\n\tfor i in a:\n\t\tif i <= t:\n\t\t\tt -= i\n\t\t\ts += i\n\t\t\tc += 1\n\tif c == 0:\n\t\tbreak\n\tans += c\n\tif s <= t:\n\t\tans += c * (t // s)\n\t\tt %= s\nprint(ans)\n", "n,t=map(int,input().split())\na=list(map(int,input().split()))\nx=min(a)\ncands=0\nwhile t>=x:\n    y=sum(a)\n    if t>=y:\n        f=len(a)\n        cands+=(t//y)*f\n        t=t-(t//y)*y\n    else :\n        for item in a:\n            if t>=item:\n                t=t-item\n                cands+=1\n    a=[_ for _ in a if _<=t]\nprint(cands)", "import copy\nn, T = list(map(int, input().split()))\nA = list(map(int, input().split()))\ns = sum(A)\nans = 0\nB = []\nfor a in A:\n  if a <= T:\n    B.append(a)\n  else:\n    s -= a\nwhile len(B) > 0:\n  loop = T // s\n  if loop == 0:\n    for i in range(len(A)):\n      if T >= A[i]:\n        ans += 1\n        T -= A[i]    \n  else:\n    ans += loop * len(B)\n    T %= s\n    \n  A = copy.deepcopy(B)\n  B = []\n  for a in A:\n    if a <= T:\n      B.append(a)\n    else:\n      s -= a\nprint(ans)", "n, t = map(int, input().split())\na = list(map(int, input().split()))\nsuma = sum(a)\na = {i: a[i] for i in range(n)}\nans = 0\nc = 0\nleft = n\nwhile suma != 0:\n    ans += (t//suma)*left\n    t = t%suma\n    while suma > t:\n        if c in a:\n            if t < a[c]:\n                suma -= a[c]\n                left -= 1\n                del a[c]\n            else:\n                t -= a[c]\n                ans += 1\n        c = (c+1)%n\nprint(ans)", "from bisect import bisect_right as br\nn,t=map(int,input().split())\na=list(map(int,input().split()))\nans=0\nl=min(a)\nwhile t>=l:\n    k=t\n    m=0\n    for i in a:\n        if k>=i:\n            m+=1\n            k-=i\n    r=t//(t-k)\n    ans+=r*m\n    t-=(t-k)*r\nprint(ans)", "n,t=input().strip().split(' ')\nn,t=int(n),int(t)\n\narr=list(map(int,input().strip().split(' ')))\na=0\nflag=1\nwhile(flag and t):\n    cnt=0\n    x=t\n    y=0\n    flag=0\n    for i in arr:\n        if(x>=i):\n            cnt+=1\n            x-=i\n            y+=i\n            flag=1\n    if(flag==0):\n        break\n    ans=t//y\n    t-=y*ans\n    cnt*=ans\n    a+=cnt\n\n\nprint(a)\n\n", "I=lambda:map(int,input().split())\nn,t=I()\na=list(I())\nans=0\nx=min(a)\nwhile t>=x:\n    y=t;z=0\n    for i in a:\n        if y>=i:\n            z+=1\n            y-=i\n    r=t//(t-y);ans+=z*r\n    t-=(t-y)*r\nprint(ans)        ", "n,T=list(map(int,input().split()))\nA=list(map(int,input().split()))\n\nAIND=[(A[i],i) for i in range(n)]\nAS=sorted(AIND)\nMINA=AS[0][0]\n\nSUM=[AS[0][0]]\nfor i in range(1,n):\n    SUM.append(AS[i][0]+SUM[-1])\n\nSUM.reverse()\nAS.reverse()\nMAX=SUM[0]\nx=0\n\nANS=0\n\n#print(AIND,AS,MINA,SUM,MAX)\n\nwhile T>=MINA:\n    if T>SUM[x]:\n        ANS+=(n-x)*(T//SUM[x])\n        T=T%SUM[x]\n\n    else:\n        if T<AS[x][0]:\n            x+=1\n        else:\n            for i in range(n):\n                if T>=A[i]:\n                    T-=A[i]\n                    ANS+=1 \n\n\nprint(ANS)\n", "import math as ma\nimport sys\nfrom decimal import Decimal as dec\nfrom itertools import permutations\n\n\ndef li():\n\treturn list(map(int , input().split()))\n\n\ndef num():\n\treturn list(map(int , input().split()))\n\n\ndef nu():\n\treturn int(input())\n\n\ndef find_gcd(x , y):\n\twhile (y):\n\t\tx , y = y , x % y\n\treturn x\n\nn,t=num()\na=li()\ncount=n\nz=0\nwhile(count>0 and sum(a)>0):\n\tpp=0\n\tz+=(t//sum(a))*count\n\tt=t%sum(a)\n\tfor i in range(n):\n\t\tif(t>=a[i] and a[i]!=0):\n\t\t\tpp+=1\n\t\t\tt-=a[i]\n\t\telse:\n\t\t\ta[i]=0\n\tcount=pp\n\tz+=pp\nprint(z)\n", "# Author:      Divesh Uttamchandani\n# Institution: BITS Pilani\nn,t = list(map(int,input().strip().split()))\na = list(map(int,input().strip().split()))\ns0=0\nb = sorted(a, reverse=True)\nbig = b[0]\ns = []\ns0=sum(b)\nfor i in b:\n    s.append(s0)\n    s0-=i\n\nmoney=t\nans = 0\nfor i,total in enumerate(s):\n    #print(\"money left\", money)\n    #print(\"ans\", ans)\n    big1=b[i]\n    if(money>=total):\n        #print(\"i can take all max\",n-i, total,\":\", money//total, \"times\")\n        ans+=((n-i)*(money//total))\n        money -= total*(money//total)\n    #print(\"ans\", ans)\n    # now i cannot take all the coins\n    # ensure that money goes below big1\n    if(money<big1):\n        continue\n    else:\n        while(money>=big1):\n            f1 = True\n            for ls in range(n):\n                if(money-a[ls]>=0):\n                    money-=a[ls]\n                    #print(\"adding 1 to ans\", big1)\n                    f1=False\n                    ans+=1\n                else:\n                    #print(\"mb\",money,big1)\n                    pass\n                ls+=1\n            if(f1==True):\n                break\n        if(f1==True):\n            break\n\n\nprint(ans)\n# <> with <3 using Termicoder:\n# https://termicoder.github.io\n", "import random\n\nn, t = (int(x) for x in input().split())\na = [int(x) for x in input().split()]\n\n#n = 2*(10**5)\n#t = random.randint(10**17, 10**18)\n#a = [random.randint(1, 10**9) for i in range(n)]\n\ntot = sum(a)\ncandies = 0\n\ndef solve(cur, nxt, l):\n    if l<=0: return\n    nonlocal candies\n    nonlocal t\n    nonlocal tot\n    nxt = []\n    revs = t//tot\n    candies += (revs*l)\n    t -= (revs*tot)\n    for cost in cur:\n        if cost <= t:\n            t-=cost\n            candies+=1\n            nxt.append(cost)\n        else:\n            tot -= cost\n            l-=1\n    solve(nxt, cur, l)\n                        \nsolve(a, [], n)\nprint(candies)\n", "n,t = list(map(int, input().split()))\na = list(map(int, input().split()))\n\n_ = min(a)\nr = 0\ns = sum(a)\nn_ = n\nwhile t >= _:\n\tv = int(t/s)\n\tr += v*n_\n\tt -= v*s\n\tfor i in range(n):\n\t\tif a[i] == 0:\n\t\t\tcontinue\n\t\tif t >= a[i]:\n\t\t\tr += 1\n\t\t\tt -= a[i]\n\t\telse:\n\t\t\tn_ -= 1\n\t\t\ts -= a[i]\n\t\t\ta[i] = 0\nprint(r)", "n, t = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\n\nwhile True:\n    b = False\n    k = 0\n    s = 0\n    for i in range(n):\n        if t >= a[i]:\n            s += a[i]\n            k += 1\n            b = True\n    if not(b):\n        break\n    if t < s:\n        for i in range(n):\n            if t >= a[i]:\n                ans += 1\n                t -= a[i]\n    else:\n        ans += (t // s) * k\n        t %= s\n    #print(ans, t, s)\nprint(ans)", "n,t=list(map(int,input().split()))\nA=list(map(int,input().split()))\nans=0\nwhile t>0:\n    k=0\n    suma=0\n    t1=t\n    f=0\n    for i in range(n):\n     if A[i]<=t1:\n        suma+=A[i]\n        t1-=A[i]\n        k+=1\n        f=1\n    #print('t=',t,'t1=',t1,'suma=',suma,'k=',k,'ans=',ans)    \n    if f==1:\n        ans=ans+k*(t//suma)\n        t=t%suma\n    else:\n        break    \nprint(ans)\n", "def inint():\n    return int(input())\ndef inlist():\n    return list(map(int,input().split()))\n\ndef main():\n    n,t=inlist()\n    a=inlist()\n    sol=0\n    while True:\n        ss=0;amt=0\n        for i in a:\n            if i<=t:\n                sol+=1\n                ss+=i\n                t-=i\n                amt+=1\n        if amt==0:break\n        sol+=(t//ss)*amt\n        t=t%ss\n    print(sol)\n\n\n\ndef __starting_point():\n    #import profile\n    #profile.run(\"main()\")\n    main()\n__starting_point()", "n,k=list(map(int,input().split()))\na=list(map(int,input().split()))\nans=0\nwhile k>=min(a):\n    s=0;count=0\n    for i in a:\n        if i<=k:\n            k-=i\n            s+=i\n            count+=1\n    ans+=(k//s)*count + count\n    k-=(k//s)*s\n    #print(k,ans)\nprint(ans)    \n", "n, T = map(int, input().split())\na = list(map(int, input().split()))\nans = 0\nwhile True:\n\tt = m = 0\n\tfor x in a:\n\t\tif T - t >= x:\n\t\t\tt += x\n\t\t\tm += 1\n\tif not m:\n\t\tbreak\n\tans += T // t * m\n\tT %= t\nprint(ans)", "def func(n, t, a):\n\tcount = 0\n\ts = sum(a)\n\tz = []\n\tif t >= s:\n\t\tcount+=t//s * n\n\t\tt%=s\n\tfor i in a:\n\t\tif t >= i:\n\t\t\tz.append(i)\n\t\t\tcount+=1\n\t\t\tt-=i\n\tif t >= min(a):\n\t\tcount+=func(len(z), t, z)\n\treturn count\nn, t = map(int, input().split())\na = list(map(int, input().split()))\nprint(func(n, t, a))", "n, t = [int(x) for x in input().split()]\na = [[int(x) for x in input().split()]]\nk = 0\nna = 0\nma = 1\nwhile t >= ma:\n    sa = sum(a[na])\n    la = len(a[na])\n    if t >= sa:\n        k += la * (t // sa)\n        t %= sa\n    ma = min(a[na])\n    a.append([])\n    for ta in a[na]:\n        if t >= ta:\n            t -= ta\n            k += 1\n            a[na+1].append(ta)\n    na += 1\nprint(k)\n", "n, t = list(map(int, input().split()))\na = [list(map(int, input().split()))]\nk = 0\nna = 0\nma = 1\nwhile t >= ma:\n    sa = sum(a[na])\n    la = len(a[na])\n    if t >= sa:\n        k += la * (t // sa)\n        t %= sa\n    ma = min(a[na])\n    a.append([])\n    for ta in a[na]:\n        if t >= ta:\n            t -= ta\n            k += 1\n            a[na+1].append(ta)\n    na += 1\nprint(k)\n", "n, t = list(map(int, input().split()))\na = [list(map(int, input().split()))]\nk = 0\nna = 0\nma = min(a[na])\nwhile t >= ma:\n    sa = sum(a[na])\n    la = len(a[na])\n    if t >= sa:\n        k += la * (t // sa)\n        t %= sa\n    a.append([])\n    for ta in a[na]:\n        if t >= ta:\n            t -= ta\n            k += 1\n            a[na+1].append(ta)\n    na += 1\nprint(k)\n"]