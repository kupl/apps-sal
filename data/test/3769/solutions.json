["def main():\n\tp, k = list(map(int, input().split()))\n\ts = 1\n\tm = pow(10,9)+7\n\tif k == 0:\n\t\ts = pow(p,p-1,m)\n\telif k == 1:\n\t\ts = pow(p,p,m)\n\telse:\n\t\to = 1\n\t\tn = k\n\t\twhile n != 1:\n\t\t\tn = k*n %p\n\t\t\to += 1\n\t\tc = (p-1)//o\n\t\ts = pow(p,c,m)\n\tprint(s%m)\nmain()\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n", "q = 10 ** 9 + 7\n\ndef solve(p, k):\n    if k == 0:\n        return pow(p, p-1, q)\n    if k == 1:\n        return pow(p, p, q)\n    x, y = k, 1\n    while x != 1:\n        x *= k\n        x %= p\n        y += 1\n\n    return pow(p, (p-1)//y, q)\n\np, k = list(map(int, input().split()))\nprint(solve(p, k))\n", "3\n\ndef is_good(f, p, k):\n    for i in range(p):\n        if f[(k * i) % p] != (k * f[i]) % p:\n            return False\n    return True\n\n\ndef gen(f, p, k, i):\n    if i == p:\n        return is_good(f, p, k)\n    else:\n        ans = 0\n        for j in range(p):\n            f.append(j)\n            ans += gen(f, p, k, i + 1)\n            f.pop()\n        return ans\n\n\ndef solve(p, k):\n    num = 0\n    used = set()\n    for j in range(p):\n        if j not in used:\n            num += 1\n        i = j\n        while i not in used:\n            used.add(i)\n            i = (i * k) % p\n    return pow(p, num - (k != 1), 10 ** 9 + 7)\n            \n    \n    \np, k = list(map(int, input().split()))\n#print(gen([], p, k, 0))\nprint(solve(p, k))\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "MOD=int(1e9+7)\nn,k=list(map(int,input().split()))\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))\n\n", "def main():\n\tp, k = list(map(int, input().split()))\n\ts = 1\n\tm = pow(10,9)+7\n\tif k == 0:\n\t\ts = pow(p,p-1,m)\n\telif k == 1:\n\t\ts = pow(p,p,m)\n\telse:\n\t\to = 1\n\t\tn = k\n\t\twhile n != 1:\n\t\t\tn = k*n %p\n\t\t\to += 1\n\t\tc = (p-1)//o\n\t\ts = pow(p,c,m)\n\tprint(s%m)\nmain()\n\n\n\n\n# Made By Mostafa_Khaled\n", "from sys import stdin\nimport sys\nsys.setrecursionlimit(10**6)\n\nn,k=list(map(int,stdin.readline().strip().split()))\ndef dfs( n):\n    visited[n]=True\n    while not visited[adj[n]]:\n        n=adj[n]\n        visited[n]=True\nmod=10**9+7\nadj=[-1 for i in range(n+1)]\nvisited=[False for i in range(n+1)]\nfor i in range(n):\n\tadj[i]=(i*k)%n\npairs=0\nfor i in range(1,n):\n    if not visited[i]:\n        dfs(i)\n        pairs+=1\n    \nif k==1:\n    print(pow(n,n,mod))\nelse:\n    print(pow(n,pairs,mod))\n", "MOD=int(1e9+7)\nn,k=map(int,input().split())\nif k<2:p=n-(1-k)\nelse:\n\tt=1\n\ta=k\n\twhile a!=1:\n\t\ta=a*k%n\n\t\tt+=1\n\tp=(n-1)//t\nprint(pow(n,p,MOD))"]