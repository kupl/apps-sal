["import sys\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return [int(x) for x in input().split()]\n\nn, d = read_ints()\na = read_ints()\n\na = sorted(a)\n\nbest = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        if a[j] - a[i] <= d:\n            best = max(best, j - i + 1)\n\nprint(len(a) - best)\n", "\n\nn, d = list(map(int, input().split()))\n\nA = sorted([int(x) for x in input().split()])\n\nresult = n\n\nfor i in range(n):\n    for j in range(i, n):\n        if A[j] - A[i] <= d:\n            result = min([result, i + n - j - 1])\n\nprint(result)\n", "from sys import stdin, stdout\nfrom random import randrange\n\nn, d = map(int, stdin.readline().split())\npoints = sorted(list(map(int, stdin.readline().split())))\nans = n\n\nfor i in range(n):\n    for j in range(n - 1, i - 1, -1):\n        if points[j] - points[i] <= d:\n            ans = min(ans, n - (j - i + 1))\n\nstdout.write(str(ans))", "n, d = map(int, input().split())\na = list(map(int, input().split()))\na = sorted(a)\nl=0\nr = 0\nans = 0\nwhile r < n:\n    if a[r]-a[l] <= d:\n        ans= max(ans, r-l+1)\n        r += 1\n    else:\n        l+=1\nprint(n-ans)", "n, d = map(int, input().split())\na = sorted(list(map(int, input().split())))\nans = n - 1\nfor i in range(len(a)):\n\tj = i\n\twhile j < len(a) and a[j] - a[i] <= d:\n\t\tj += 1\n\tans = min(ans, n - (j - i))\nprint(ans)", "n, d = (int(x) for x in input().split())\n\nps = sorted([int(x) for x in input().split()])\n\nr = 1000\n\nfor st in range(1, 110):\n    fn = st + d\n    rr = len([x for x in ps if x < st or x > fn])\n    if rr < r:\n        r = rr\nprint(r)", "f=input()\nn,d=f.split()\nn,d=int(n),int(d)\nf=input()\na=f.split()\na=[int(k) for k in a]\n#a.sort()\n\nans=0\ncount=0\n\nfor i in range(len(a)):\n\tcount=0\n\tfor j in range(len(a)):\n\t\tif (a[i]<=a[j]<=a[i]+d):\n\t\t\tcount+=1\n\tif count>ans:\n\t\tans=count\n\nprint(len(a)-ans)", "number, diameter = [int(x) for x in input().split()]\nnumbers = [int(x) for x in input().split()]\nnumbers.sort()\n\nmax_covered = 0\nfor i in range(len(numbers)):\n\tj = i\n\twhile j != len(numbers) and abs(numbers[i] - numbers[j]) <= diameter:\n\t\tj += 1\n\tmax_covered = max(j - i, max_covered)\n\nprint(len(numbers) - max_covered)", "n,d=list(map(int,input().split()))\na=list(map(int,input().split()))\na.sort()\nfor i in range(1,n+1):\n    for j in range(i):\n        if a[n-i+j]-a[j]<=d:\n            print(i-1)\n            return\n", "n, d = map(int, input().split());\nA = list(map(int, input().split()));\nd = d + 1;\nB = [];\nfor q in range(101):\n    B.append(0);\nfor q in range(n):\n    B[A[q]] += 1;\n#print(*B);\nres = 0;\nfor q in range(d):\n    res = res + B[q];\n#print(res);\nans = res;\nfor q in range(d, 101):\n    res = res + B[q] - B[q - d];\n    ans = max(res, ans);\nprint(n - ans);", "n, d = list(map(int, input().split()))\narr = [int(x) for x in input().split()]\narr.sort()\nstart = 0\nend = 0\nmx = 0\nwhile end < n:\n    while end < n and arr[end] - arr[start] <= d:\n        end += 1\n    mx = max(mx, end - start)\n    start += 1\n    \nmx = max(mx, n - start)\n\nprint(n - mx)\n", "def solve(d, A):\n    if d == 100:\n        return 0\n    B = [0]*(101)\n    for a in A: B[a] += 1\n    for i in range(1, 101):\n        B[i] += B[i-1]\n    M = 0\n    for i in range(d+1, 101):\n        u = B[i] - B[i-d-1]\n        M = max(u, M)\n    return len(A) - M\n\nn, d = map(int, input().split())\na = list(map(int, input().split()))\nprint(solve(d, a))", "from copy import copy\nraw = [int(x) for x in input().split(' ')]\nn= raw[0]\nd = raw[1]\na = [int(x) for x in input().split(' ')]\na = sorted(a)\n\nstrat = 0\nbest = 200\ngoing = True\n\ndef dimof(li):\n\treturn li[-1]-li[0]\n\nwhile strat<101 and going:\n\tc = 0\n\ttemp = a.copy()\n\tfor i in range(strat):\n\t\tif dimof(temp) <= d:\n\t\t\tbreak\n\n\t\tdel temp[0]\n\t\tc += 1\n\n\tif going:\n\t\tif dimof(temp) <= d:\n\t\t\tgoing = False\n\t\telse:\n\t\t\twhile dimof(temp) > d:\n\t\t\t\tdel temp[-1]\n\t\t\t\tc+=1\n\n\tif c < best:\n\t\tbest = c\n\tstrat += 1\n\nprint(best)", "n, d = map(int,input().split())\nmulti = list(map(int,input().split()))\nmulti.sort()\nsave = [0]*n\nfor i in range(n):\n\tj = i+1\n\twhile (j < n and (multi[j]- multi[i])<=d):\n\t\tj+=1\n\tsave[i] = j-i\nprint(n-max(save))", "n, d = map(int, input().split())\na = [int(x) for x in input().split()]\na.sort()\nl = 0\nr = n - 1\nmn = n\nfor i in range(n):\n\tl = i\n\tr = n\n\tc = a[i] + d\n\twhile r - l > 1:\n\t\tmid = (r + l) // 2\n\t\tif a[mid] > c:\n\t\t\tr = mid\n\t\telse:\n\t\t\tl = mid\n\tmn = min(mn, n - (l - i + 1))\nprint(mn)", "n, d = list(map(int, input().split()))\nL = list(map(int, input().split()))\nL.sort()\nmax = -1\nfor i in range(n):\n    for j in range(i, n):\n        if L[j] - L[i] <= d:\n            if j - i > max:\n                max = j - i\nprint(n - max - 1)\n    \n", "n,d=list(map(int,input().split(' ')))\na=list(map(int,input().split(' ')))\nc=0\nt=0\nl=[]\na.sort()\nfor i in range(0,n):\n    t=0\n    for j in range(i,n):\n        x=a[j]-a[i]\n        if x<=d:\n            t+=1\n    l.append(t)\nprint(n-max(l))\n", "from sys import stdin as cin\n\ndef main():\n    n, m = list(map(int, cin.readline().split()))\n    a = list(map(int, cin.readline().split()))\n    a.sort()\n    x = 0\n    y = -1\n    for i in range(n):\n        if a[i] - a[0] > m:\n            y = i\n            break\n    if y == -1:\n        print(0)\n        return\n    o = n - y\n    while y < n:\n        x += 1\n        while y < n and a[y] - a[x] <= m:\n            y += 1\n        o = min(n - y + x, o)\n    print(o)\n\nmain()\n", "n, d = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nprint(min(len([yi for yi in x if yi < xi or xi + d < yi]) for xi in x))\n", "q,w=map(int,input().split())\na=list(map(int,input().split()))\ns=[0 for i in range(0,q)]\na.sort()\nfor i in range(0,q-1):\n    j=i+1\n    while (a[j]-a[i]<=w):\n        s[i]+=1\n        j+=1\n        if j==q:\n            break\nprint(q-max(s)-1)", "n, d = map(int, input().split())\na = [int(i) for i in input().split()]\na.sort()\nans = [[1000000000] * n for i in range(n)]\nfor l in range(n):\n    for r in range(l, n):\n        if max(a[l:r + 1]) - min(a[l:r + 1]) <= d:\n            ans[l][r] = l + (n - r - 1)\nprint(min([min(i) for i in ans]))", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return list(map(int, stdin.readline().split()))\n#lines = stdin.readlines()\n\n\nx = [0 for i in range(101)]\n\nn, d = rint()\n\nxin = list(rint())\nxin.sort()\nfor xx in xin:\n    x[xx] += 1\nif xin[-1] <= d+1:\n    print(0)\n    return\nmaxn = 0\nfor i in range(1,d+2):\n    maxn += x[i]\n\ncur = maxn\nfor i in range(d+2, 101):\n    cur = cur - x[i-d-1] + x[i]\n    if cur > maxn:\n        maxn = cur\n\nprint(n-maxn)\n", "def memoize(f):\n    memo = {}\n    def helper(*x):\n        x = tuple(x)\n        if x not in memo:\n            memo[x] = f(*x)\n        return memo[x]\n    return helper\n\nn, d, *_ = list(map(int, input().split()))\n*x, = list(map(int, input().split()))\n\n\nx.sort()\n\n@memoize\ndef solve(d, li, ri):\n\tif x[ri] - x[li] <= d:\n\t\treturn 0\n\telse:\n\t\treturn min(solve(d, li + 1, ri), solve(d, li, ri - 1)) + 1\n\nprint(solve(d, 0, len(x) - 1))\n", "from collections import Counter\n\nn, d = map(int, input().split())\nx = sorted(map(int, input().split()))\n\nfreq = list(Counter(x).items())\nfreq.sort(key=lambda pair: pair[0])\n\ntoleft = 0\nmindrop = n\nfor i, x in enumerate(freq):\n    toleft += freq[i-1][1] if i>0 else 0\n    toright = sum([pair[1] for pair in freq[i+1:] if pair[0]>x[0]+d])\n    mindrop = min(toleft + toright, mindrop)\n\nprint(mindrop)"]