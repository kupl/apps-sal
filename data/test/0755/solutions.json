["from math import ceil\nn = int(input())\nprint(ceil(n/5))\n", "x = int(input())\nans = (x - 1) // 5 + 1\nprint(ans)\n", "n = int(input())\nprint((n - 1) // 5 + 1)\n", "dp = [0] * 1000005\nx = int(input())\ndp[0] = 0\ndp[1] = 1\ndp[2] = 1\ndp[3] = 1\ndp[4] = 1\ndp[5] = 1\nfor i in range(6, 1000001):\n    dp[i] = min([dp[i-1], dp[i-2], dp[i-3], dp[i-4], dp[i-5]])+1\nprint(dp[x])\n", "x = int(input())\nans = 0\nans += x // 5\nif x % 5 != 0:\n    ans += 1\nprint(ans)", "n = int(input())\ncur = 0\nans = 0\nwhile (n - cur) > 5:\n    cur += 5\n    ans += 1\nprint(ans + 1)", "a = int(input())\nprint((a+4)//5)\n", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2016 missingdays <missingdays@missingdays>\n#\n# Distributed under terms of the MIT license.\n\n\"\"\"\n\n\"\"\"\n\na = int(input())\n\nb = a // 5\n\nc = a % 5\n\nif c > 0:\n    print(b+1)\nelse:\n    print(b)\n", "x = int(input())\nprint(x//5 + (x%5 != 0))\n", "n = int(input())\nprint(n//5 + (1 if n%5 > 0 else 0))\n", "x = int(input())\nret = x//5\nif x%5 != 0:\n\tret += 1\nprint (ret)", "a=int(input())\nif a%5==0:\n    print(a//5)\nelse:\n    print(a//5+1)", "n = int(input())\n\nans = 0\n\nans += n // 5\nn = n % 5\nans += n // 4\nn = n % 4\nans += n // 3\nn = n % 3\nans += n // 2\nn = n % 2\nans += n // 1\nn = n % 1\n\nprint(ans)", "x = int(input())\nprint(x//5 + min(x%5, 1))\n", "x = int(input())\np = x//5\nif x%5 != 0:\n    p += 1\n\nprint(p)", "import math\nprint(math.ceil(int(input()) / 5))\n", "n = int(input())\nans = 0\nfor i in range(5, 0, -1):\n    ans += (n // i)\n    n -= (n // i * i)\nprint(ans)    \n", "n = int(input())\nprint((n + 4) // 5)", "3\nimport math\n\nx = int(input())\n\nprint(str(math.ceil(x/5)))\n", "n = int(input())\nans = n // 5\nif n % 5 != 0:\n    ans += 1\nprint(ans)", "x = int(input())\nif x%5==0:\n\tprint(x//5)\nelse:\n\tprint(x//5 +1)", "#author=\"_rabbit\"\nn=int(input())\nans=int(n/5)\nif(n%5):\n    ans+=1\nprint(ans)\n", "n = int(input())\n\nprint(n // 5 + (((n % 5) + 4)//5))\n"]