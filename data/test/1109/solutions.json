["n, k = map(int, input().split())\nA = list(map(int, input().split()))\n\nans = 0\nfor i in range(k):\n    c1 = c2 = 0\n    for j in range(i, n, k):\n        if A[j] == 1:\n            c1 += 1\n        else:\n            c2 += 1\n    ans += min(c1, c2)\nprint(ans)", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\npoc = 0\nfor i in range(k):\n\tp1,p2 = 0,0\n\tfor j in range(i,n,k):\n\t\tif a[j] == 1:\n\t\t\tp1+=1\n\t\telse:\n\t\t\tp2+=1\n\tpoc+=min(p1,p2)\nprint(poc)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = []\nc = []\nfor i in range(k):\n    c.append([0, 0])\n#~ print(c)\nfor i in range(k):\n    b.append(a[i])\npar = True\nans = 0\nfor i in range(n):\n    if (a[i] != b[i % k]):\n        par = False\n    c[i % k][a[i] - 1] += 1\nif (par):\n    print(0)\nelse:\n    for i in range(k):\n        ans += min(c[i])\n    print(ans)\n    \n", "from math import *\n\n[n, k] = [int(i) for i in input().split()]\narr = [int(i) - 1 for i in input().split()]\narr2 = [[0 for i in range(2)] for j in range(k)]\nr = 0\nfor i in range(n // k):\n    for j in range(k):\n        arr2[j][arr[i * k + j]] += 1\nfor j in range(k):\n    r += min(arr2[j][0], arr2[j][1])\nprint(r)\n", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\nans = 0\nfor i in range(k):\n    t1, t2 = 0, 0\n    for j in range(i, n, k):\n        if a[j] == 1:\n            t1 += 1\n        else:\n            t2 += 1\n    ans += min(t1, t2)\nprint(ans)\n", "n,k=list(map(int,input().split()))\nl=list(map(int,input().split()))\nans=0\nfor i in range(k):\n    ones=0\n    twos=0\n    for j in range(n//k):\n        num=l[i+j*k]\n        if(num==1):\n            ones+=1\n        else:\n            twos+=1\n    ans+=min(ones,twos)\nprint(ans)\n", "n,k = list(map(int,input().split()))\na = list(map(int,input().split()))\nans = 0\nfor i in range(k):\n    c = [0] *2\n    for j in range(i,n,k):\n        c[a[j]-1]+=1\n    ans+=min(c)\nprint(ans)\n", "n, k = map(int, input().split())\nA = list(map(int, input().split()))\nans = 0\nfor i in range(k):\n    s1, s2 = 0, 0\n    for j in range(i, n, k):\n        if A[j] == 1:\n            s1+=1\n        else:\n             s2+=1\n    ans = ans + min(s1, s2)\nprint(ans)", "inputs = [int(string) for string in input().split()]\nn = inputs[0]\nk = inputs[1]\ncount = int(n / k)\narray = [int(string) for string in input().split()]\nsumm = int(0)\nvarious = []\n\nfor i in range(int(0), int(k)):\n    various.append(0)\n\nfor i in range(len(array)):\n    if (array[i] == 1) :\n        various[i % k] += 1\n    else :\n        various[i % k] -= 1\n\nfor i in range(int(0), int(k)):\n    summ += (count - abs(various[i])) / 2\n\nprint(int(summ))", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, k = readln()\na = readln()\nans = 0\nfor i in range(k):\n    cnt = len([1 for j in range(i, n, k) if a[j] == 1])\n    ans += min(cnt, n // k - cnt)\nprint(ans)\n", "print ((lambda n: (lambda data, k: sum(min (data[i::k].count(1), data[i::k].count(2)) for i in range (k)))(list(map(int, input().split())), int(n[1])))(input().split()))", "n,k=list(map(int,input().split()))\n\nL=list(map(int,input().split()))\n\nA=[]\nfor i in range(0,n,k):\n    A.append(list(L[i:i+k]))\nz=n//k\nans=0\nfor i in range(k):\n    one=0\n    two=0\n    for j in range(z):\n        if(A[j][i]==1):\n            one+=1\n        else:\n            two+=1\n    ans+=min(one,two)\nprint(ans)\n", "n, k = map(int, input().split())\ns, d = 0, n // k\nt = input()[:: 2]\nfor i in range(k):\n    p = t[i :: k].count('1')\n    s += min(d - p, p)\nprint(s)", "read = lambda:list(map(int, input().split()))\nn,k = read()\nm = n//k\na = list(read())\nresult = 0\nfor i in range(k):\n    t = a[i:n:k]\n    s = t.count(1)\n    result += min(s, m-s)\nprint(result)\n", "n,k=tuple(map(int,input().split()))\na=list(map(int,input().split()))\nprint(sum((lambda x:min(x-n//k,2*n//k-x))(sum(a[i::k])) for i in range(k)))\n", "from collections import Counter\nn,k = list(map(int, input().split()))\nar = list(map(int, input().split()))\nkc = []\nris = 0\nfor cont in range(0,n-k+1,k):\n    kc.append(ar[cont:cont+k])\nfor cont in range(0,k):\n    l = []\n    for cont2 in range(0,len(kc)):\n        l.append(kc[cont2][cont])            \n        a = Counter(l).most_common(1)[0][1]\n    ris += len(kc)-a\nprint(ris)\n", "# -*- coding: utf-8 -*-\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nm = 0\nfor i in range(k):\n    s = a[i::k]\n    c = [s.count(x) for x in set(s)]\n    m += len(s) - max(c)\nprint(m)", "R = lambda: map(int, input().split())\nn, k = R()\na = list(R())\nprint(sum(min(x.count(1), x.count(2)) for x in (a[i::k] for i in range(k))))", "n, k = list(map(int, input().split()))\na = list(map(int, input().split()))\n\nprint(sum(min(x.count(1), x.count(2)) for x in (a[i::k] for i in range(k))))\n", "\nimport sys\nimport math\n  \nn, k = [int(x) for x in (sys.stdin.readline()).split()]\nan = [int(x) for x in (sys.stdin.readline()).split()]\n\nres = 0\nfor i in range(k):\n    k1 = 0\n    k2 = 0\n    for j in range(i, n, k):\n        if(an[j] == 1):\n            k1 += 1\n        else:\n            k2 += 1       \n    res += int(n / k) - max(k2, k1)\n    \nprint(res)", "n, k = map(int, input().split())\na, val = list(map(int, input().split())), 0\nfor i in range(k):\n    c = sum(a[i + j * k] == 1 for j in range(n // k))\n    val += min(c, n // k - c)\nprint(val)", "n, k = [int(x) for x in input().split()]\nv = [int(x) for x in input().split()]\nl = [0] * k\nfor i in range(k):\n\tl[i] = v[i::k].count(1)\nans = 0\nn //= k\nfor x in l:\n\tans += min(x, n - x)\nprint(ans)\n", "def main():\n    n, k = map(int, input().split())\n    l = input().split()\n    print(sum(min(nn.count('1'), nn.count('2')) for nn in zip(*[l[i:i + k] for i in range(0, n, k)])))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    n, k = list(map(int, input().split()))\n    arr = list(map(int, input().split()))\n    got = [0]*(k+1)\n\n    for i in range(0, k):\n        for j in range(n//k):\n            if arr[j*k+i]==1:\n                got[i] += 1\n    answer = 0\n\n    for i in range(k):\n        answer += min(got[i], n//k-got[i])\n\n    print(answer)\n\nmain()\n    \n"]