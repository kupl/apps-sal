["n = int(input())\na = [int(x) for x in input().split()]\nscore = dict()\nsup, winner = -2**31, None\nfor v in a:\n    score[v] = score[v] + 1 if v in score else 1\n    if score[v] > sup:\n        sup, winner = score[v], v\nprint(winner)\n", "n = int(input())\na = list(map(int, input().split()))\n\nd = dict()\nd[0] = 0\nmx = 0\nfor i in a:\n    d[i] = d.get(i, 0) + 1\n    if d[i] > d[mx]:\n        mx = i\nprint(mx)", "n = input()\nhas = {}\nbest = -1\nhas[best]=-1\nar = [int(x) for x in input().split()]\nfor x in ar:\n    if x not in has:\n        has[x]=1\n    else:\n        has[x]+=1\n    if has[x] > has[best]:\n        best = x\nprint(best)\n", "n = int(input())\na = map(int, input().split())\ns = dict()\nans = -1\npos = 1\nfor i in a:\n    if i in s:\n        s[i] += 1\n    else:\n        s[i] = 1\n    if (ans < s[i]):\n        pos, ans = i, s[i]\n\nprint(pos)", "#!/bin/python\nimport collections\nimport random\nimport sys\ntry:\n    from tqdm import tqdm\nexcept:\n    def tqdm(iterable):\n        return iterable\n\n\n__taskname = ''\nif __taskname:\n    sys.stdin = open(__taskname + '.in')\n    sys.stdout = open(__taskname + '.out', 'w')\n\nn = int(input())\nans = -1\nd = {-1: -1}\nfor a in map(int, input().split()):\n    d[a] = d.get(a, 0) + 1\n    if d[a] > d[ans]:\n        ans = a\nprint(ans)\n", "n = int(input())\narr = [int(x) for x in input().split()]\n\nm = -1\nans = -1\nd = dict()\n\nfor i in arr:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\n        \n    if m == -1 or d[i] > m:\n        m = d[i]\n        ans = i\n        \nprint(ans)", "import math\nimport random\n\n\ndef read_ints():\n    return [int(x) for x in input(' ').split()]\n\n\ndef main():\n    n, = read_ints()\n    A = [(int(x), i) for i, x in enumerate(input(' ').split())]\n    A.sort()\n    A.append((10**10, n))\n    max_id, max_len, max_last = -1, -1, -1\n    curr_id, curr_len, curr_last = -1, -1, -1\n    for a, i in A:\n        if a == curr_id:\n            curr_len, curr_last = curr_len+1, i\n        else:\n            if curr_len >= max_len:\n                if curr_len > max_len or curr_last < max_last:\n                    max_id, max_len, max_last = curr_id, curr_len, curr_last\n            curr_id, curr_len, curr_last = a, 1, i\n    print(max_id)\n\ndef __starting_point():\n    main()\n__starting_point()", "from collections import defaultdict\nn = input()\nlikes = defaultdict(int)\nmaxlikes = 0\nidx = 0\nfor time, photoid in enumerate(input().split()):\n    likes[photoid] +=1\n    if likes[photoid] > maxlikes:\n        maxlikes = likes[photoid]\n        idx = photoid\nprint(idx)\n", "like_count = int(input())\nlikes = input().split()\ncounter = {}\nmost_liked = ''\nmax_like_count = 0\nfor like in likes:\n    if like in counter:\n        counter[like] += 1\n    else:\n        counter[like] = 1\n    if max_like_count < counter[like]:\n        most_liked = like \n        max_like_count = counter[like]\nprint(int(most_liked))", "n = int(input())\nd = {}\na = list(map(int, input().split()))\nfor i in range(n):\n    if a[i] not in d:\n        d[a[i]] = (1, n - i)\n    else:\n        d[a[i]] = (d[a[i]][0] + 1, n - i)\nprint(sorted(d.items(), key = lambda x: x[1])[-1][0])", "n = int(input())\na = list(map(int, input().split()))\n\nmax_n = 1\ncnt = dict()\ncnt[a[0]] = 1\nmax_ = a[0]\nfor i in range(1, n):\n    cur_n = a[i]\n    if cur_n not in cnt:\n        cnt[cur_n] = 0\n    cnt[cur_n] += 1\n    if cnt[cur_n] > max_n:\n        max_n = cnt[cur_n]\n        max_ = cur_n\nprint(max_)\n", "photos = {}\nn = input()\nlikes = input().split()\nm = {\n    \"id\": 0,\n    \"q\": 0,\n}\nfor p_id in likes:\n    if p_id in photos:\n        photos[p_id] += 1\n    else:\n        photos[p_id] = 1\n    if photos[p_id] > m[\"q\"]:\n        m[\"q\"] = photos[p_id]\n        m[\"id\"] = p_id\n\nprint(m[\"id\"])", "n = int(input())\nai = list(map(int,input().split()))\nphotos = [[0]*1000000 for i in range(2)]\nfor i in range(n):\n    photos[0][ai[i]-1] += 1\n    photos[1][ai[i]-1] = i\nmax_likes = max(photos[0])\nmin_ind = 1000000\nans = 0\nfor i in range(1000000):\n    if photos[0][i] != 0 and max_likes == photos[0][i]:\n        if min_ind > photos[1][i]:\n            min_ind = photos[1][i]\n            ans = i+1\nprint(ans)\n", "n = int(input())\na = [0]*1000001\nm = 0\n\nl = list(map(int, input().split()))\nfor i in range(n):\n    a[l[i]] += 1\n    if a[l[i]] > m:\n        m = a[l[i]]\n        j = l[i]\nprint(j)", "n = int(input())\nA = [0] * 1000001\nidx = 1\nfor i in list(map(int, input().split())):\n    A[i] += 1\n    if A[i] > A[idx]:\n        idx = i\nprint(idx)", "n = int(input())\na = input().split()\nb = set(a)\nmaximum = -1\nmaximum_id = []\nfor i in b:\n    x = a.count(i)\n    if x > maximum:\n        maximum_id = [int(i)]\n        maximum = x\n    elif x == maximum:\n        maximum_id.append(int(i))\na = a[::-1]\nmaximum = -1\nanswer = -1\nfor i in maximum_id:\n    x = a.index(str(i))\n    if x > maximum:\n        answer = i\n        maximum = x\nprint(answer)", "n = int(input())\nl = list(map(int, input().split()))\nd1 = dict()\nd = dict()\ns = set()\ns1 = set()\nfor i in l:\n    if i in s:\n        d[i] += 1\n    else:\n        d[i] = 1\n    s.add(i)\n\nmax1 = 0\nfor i in d:\n    max1 = max(max1, d[i])\nfor i in l:\n    if i in s1:\n        d1[i] += 1\n    else:\n        d1[i] = 1\n    s1.add(i)\n    if d1[i] == max1:\n        print(i)\n        break", "from collections import Counter\nn = int(input())\narr = list(map(int, input().split()))\nmax_i = -1\nmax_n = -1\nans = Counter()\nfor x in arr:\n    ans[x] += 1\n    if ans[x] > max_n:\n        max_i = x\n        max_n = ans[x]\nprint(max_i)\n", "n = int(input())\ndata = list(map(int, input().split())) \n\nlst = dict() \ntme = dict() \nfor i in range(n): \n    if data[i] in list(lst.keys()): \n        lst[data[i]] += 1         \n    else: \n        lst[data[i]] = 1 \n    tme[data[i]] = i \n\nps = -1 \nmx = -1 \ntime = -1 \nfor i in list(lst.keys()):\n    if lst[i] > mx: \n        mx = lst[i] \n        time = tme[i] \n        ps = i \n    elif lst[i] == mx: \n        if time > tme[i]: \n            time = tme[i] \n            ps = i \n\nprint(ps)\n", "n = int(input())\nlikes_str = input()\nlikes = likes_str.split()\nphoto = {}\nmax_val = 0\nmax_num = 0\nfor i in range(0, n):\n    photo_num = int(likes[i])\n    if photo_num in photo:\n        photo[photo_num] += 1\n    else:\n        photo[photo_num] = 1\n    if photo[photo_num] > max_val:\n        max_val = photo[photo_num]\n        max_num = photo_num\n\nprint(max_num)", "n = int(input())\nx = [int(i) for i in input().split()]\ndata = dict()\nfor i in range(0,n):\n    if not (x[i] in data):\n        data[x[i]]=[1,i]\n    else:\n        data[x[i]] = [data[x[i]][0]+1, i]\nt = list(data.items());\nt.sort(key=lambda x: (-x[1][0], x[1][1]))\nprint(t[0][0])", "total = input()\ntimeline = input().split()\n\nphotos = len(set(timeline))\n\nnumberOfLikes = dict.fromkeys(timeline, 0)\nmax = -1\nfor pic in timeline:\n    numberOfLikes[pic]+=1\n    if numberOfLikes[pic]>max:\n        max = numberOfLikes[pic]\n        res = pic\nprint(res)", "n = int(input())\nline = input().split()\nmaxi = line[0]\nmas = {}\nmas[maxi] = 1\nfor i in range(1, n):\n    a = line[i]\n    if not a in mas:\n        mas[a] = 1\n    else:\n        mas[a] += 1\n    if (mas[a] > mas[maxi]):\n        maxi = a\nprint(maxi)\n", "likes=int(input())\nmas=input().split()\nd={}\nfor i in mas:\n\tif i in d :\n\t\td[i] += 1\n\telse :\n\t\td[i] = 1\nmaxx = max(d.values())\nres = 0\nfor i in range (likes - 1, -1,  -1) :\n\tk = mas[i]\n\tif d[mas[i]] == maxx :\n\t\tres = mas[i]\n\t\td[mas[i]] = 0\nprint(res)", "from functools import reduce\n     \na=int(input())\nb=list([int(m) for m in input().split(' ')])\n\nm=max([len(list([m for m in b if m==i])) for i in b]) #\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439\n\nv={a:0 for a in b}\n\nfor i in b:\n    v[i]+=1\n    if v[i]== m:\n        print(i)\n        return\n"]