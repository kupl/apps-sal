["n = int(input())\ns = 0\nINF = 10**9\nminx = miny = INF\nmaxx = maxy = -INF\n\nfor i in range(n):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    s += abs(x1 - x2) * abs(y1 - y2)\n    minx = min(minx, x1, x2)\n    maxx = max(maxx, x1, x2)\n    miny = min(miny, y1, y2)\n    maxy = max(maxy, y1, y2)\n\nif (maxx - minx) == (maxy - miny) and s == (maxx - minx) ** 2:\n    print (\"YES\")\nelse:\n    print (\"NO\")\n", "n = int(input())\n#print(n)\n\nl = [[int(x) for x in input().split()] for i in range(n)]\n\n#print(l)\n\ndx = (max([r[2] for r in l])-min([r[0] for r in l]))\ndy = (max([r[3] for r in l])-min([r[1] for r in l]))\nsize = dx*dy\n#print(size)\n\nif dx == dy and sum([(r[2]-r[0])*(r[3]-r[1]) for r in l]) == size:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\nx1 = []\nx2 = []\ny1 = []\ny2 = []\nS = 0\n\nfor i in range(n):\n    a, b, c, d = list(map(int, input().split()))\n    x1.append(a)\n    y1.append(b)\n    x2.append(c)\n    y2.append(d)\n    S += (c - a) * (d - b)\n\nif (max(x2) - min(x1)) * (max(y2) - min(y1)) == S and max(x2) - min(x1) == max(y2) - min(y1):\n    print('YES')\nelse:\n    print('NO')\n", "n = int(input())\nsq = [None]  * 51\nsqsum  = 0\nfor i in range(n):\n    sq[i]= list(map(int,input().split()))\n    sqsum+=(sq[i][3]-sq[i][1])*(sq[i][2]-sq[i][0])\nmaxx = max(map(lambda x:x[2],sq[:n]))\nminx = min(map(lambda x:x[0],sq[:n]))\nmaxy = max(map(lambda x:x[3],sq[:n]))\nminy =  min(map(lambda x:x[1],sq[:n]))\narea = (maxy-miny)*(maxx-minx)\n\nif maxx-minx!=maxy-miny or area!=sqsum:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "pl = 0\netpl = 0\nmax_x = 0\nmin_x = 40000\nmax_y = 0\nmin_y = 40000\nn = int(input())\nfor i in range(0,n,1):\n    crd = input().split()\n    if(int(crd[0]) >= int(crd[2])):\n        st1 = int(crd[0]) - int(crd[2])\n    else:\n        st1 = int(crd[2]) - int(crd[0])\n    if(int(crd[1]) >= int(crd[3])):\n        st2 = int(crd[1]) - int(crd[3])\n    else:\n        st2 = int(crd[3]) - int(crd[1])\n    if(int(crd[0]) < min_x):\n        min_x = int(crd[0])\n    if(int(crd[1]) < min_y):\n        min_y = int(crd[1])\n    if(int(crd[2]) > max_x):\n        max_x = int(crd[2])\n    if(int(crd[3]) > max_y):\n        max_y = int(crd[3])\n    pl += st1*st2\n    etpl = (max_y-min_y)*(max_x-min_x)\nif max_y-min_y == max_x-min_x and etpl == pl:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\nx = set()\ny = set()\np = [list(map(int, input().split())) for i in range(n)]\nfor d in p:\n    x.add(d[0])\n    y.add(d[1])\n    x.add(d[2])\n    y.add(d[3])\nxl = sorted(list(x))\nyl = sorted(list(y))\nif (xl[-1] - xl[0] != yl[-1] - yl[0]):\n    print('NO')\n    return\nz = [[0 for i in range(len(xl)-1)] for j in range(len(yl)-1)]\nfor d in p:\n    for i in range(xl.index(d[0]), xl.index(d[2])):\n        for j in range(yl.index(d[1]), yl.index(d[3])):\n            z[j][i] = 1\nfor d in z:\n    if d.count(0):\n        print('NO')\n        return\nprint('YES')\n", "import sys\nfin = sys.stdin\n# fout = sys.stdout\n\nn = int(fin.readline())\np = []\nfor i in range(n):\n    a, b, c, d = map(int, fin.readline().split())\n    p += [((a, b), (c, d))]\n    \ndef width(rect):\n    return rect[1][0] - rect[0][0]\n\ndef height(rect):\n    return rect[1][1] - rect[0][1]\n    \ndef square(rect):\n    return width(rect) * height(rect)\n\ndef squareOfRects(rects):\n    return sum(square(r) for r in rects)\n\ndef left(rects):\n    return min(r[0][0] for r in rects)\n\ndef right(rects):\n    return max(r[1][0] for r in rects)\n\ndef bottom(rects):\n    return min(r[0][1] for r in rects)\n\ndef top(rects):\n    return max(r[1][1] for r in rects)\n    \ndef isSquare(rects):\n    w, h = right(rects) - left(rects), top(rects) - bottom(rects)\n    return w == h and squareOfRects(rects) == w * h\n\nprint(\"YES\" if isSquare(p) else \"NO\")", "n = int(input())\narea = 0\nmaxx, maxy, minx, miny = 0, 0, 10**5, 10**5\nfor i in range(0, n):\n    a,b,c,d = list(map(int, input().split()))\n    \n    area += (c - a) * (d - b)\n    maxx = max(maxx, c)\n    minx = min(minx, a)\n    maxy = max(maxy, d)\n    miny = min(miny, b)\n\nn = maxx - minx\nif n == maxy - miny and n * n == area: print('YES')\nelse: print('NO')\n", "n = int(input())\na1, b1, a2, b2 = map(int, input().split())\ns = (a2 - a1) * (b2 - b1)\nfor i in range(n - 1):\n    x1, y1, x2, y2 = map(int, input().split())\n    a1, b1, a2, b2 = min(a1, x1), min(b1, y1), max(a2, x2), max(b2, y2)\n    s += (x2 - x1) * (y2 - y1)\nprint('YES' if a2 - a1 == b2 - b1 and s == (a2 - a1) * (b2 - b1) else 'NO')", "import sys\nimport math            \n\nn = int(input())\n\nvmaxx = 0\nvmaxy = 0\nvminx = 31401\nvminy = 31401\n\ns = 0\nfor i in range(n):\n    x1, y1, x2, y2 = [int(x) for x in (sys.stdin.readline()).split()]\n    vmaxx = max(vmaxx, x2)\n    vmaxy = max(vmaxy, y2)\n    vminx = min(vminx, x1)\n    vminy = min(vminy, y1)\n    s += (x2 - x1) * (y2 - y1)\n\nif(s == (vmaxx - vminx) * (vmaxy - vminy) and (vmaxx - vminx) == (vmaxy - vminy)):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "xmin, ymin, xmax, ymax, a = 31400, 31400, 0, 0, 0\nfor i in range(int(input())):\n    x1, y1, x2, y2 = map(int, input().split())\n    xmin = min(xmin, x1)\n    ymin = min(ymin, y1)\n    xmax = max(xmax, x2)\n    ymax = max(ymax, y2)\n    a += (x2 - x1) * (y2 - y1)\nprint('YES' if xmax - xmin == ymax - ymin and a == (xmax - xmin) ** 2 else 'NO')", "n = int(input())\narea = 0\nminx = miny = 999999\nmaxx = maxy = 0\nfor _ in range(n):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    minx = min(minx, min(x1, x2))\n    miny = min(miny, min(y1, y2))\n    maxx = max(maxx, max(x1, x2))\n    maxy = max(maxy, max(y1, y2))\n    a = abs(x1 - x2) * abs(y1 - y2)\n    area += a\n\nh = maxy - miny\nw = maxx - minx\n\nif h != w or h*h != area:\n    print('NO')\nelse:\n    print('YES')", "xmin, ymin, xmax, ymax, a = 31400, 31400, 0, 0, 0\n\nfor i in range(int(input())):\n\n    x1, y1, x2, y2 = map(int, input().split())\n\n    xmin = min(xmin, x1)\n\n    ymin = min(ymin, y1)\n\n    xmax = max(xmax, x2)\n\n    ymax = max(ymax, y2)\n\n    a += (x2 - x1) * (y2 - y1)\n\nprint('YES' if xmax - xmin == ymax - ymin and a == (xmax - xmin) ** 2 else 'NO')", "\nn=int(input())\nc=[[],[],[],[]]\nplos=0\n\nfor i in range(n):\n    q=list(map(int,input().split()))\n    plos+=(q[2]-q[0])*(q[3]-q[1])   \n    for j in range(4):\n        c[j].append(q[j]) \n\nfw=(max(c[2])-min(c[0]))\nfh=(max(c[3])-min(c[1]))\n\nif(fw==fh and fw*fh==plos):\n    print(\"YES\")\nelse:\n    print(\"NO\")", "x0=[]; x1=[]; y0=[]; y1=[]\nn=int(input())\ns=0 # Variable to add rects. areas together\nfor i in range(n):\n    l=list(map(int,input().split()))\n    x0.extend([l[0]])\n    x1.extend([l[2]])\n    y0.extend([l[1]])\n    y1.extend([l[3]])\n    s+=(l[3]-l[1])*(l[2]-l[0])\n\nlx=max(x1)-min(x0)\nly=max(y1)-min(y0)\nif lx==ly and lx*ly==s:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\nx1, y1, x2, y2 = list(map(int, input().split()))\nl, r, u, d = x1, x2, y2, y1\ns = (x2 - x1) * (y2 - y1)\nfor i in range(n - 1):\n    x1, y1, x2, y2 = list(map(int, input().split()))\n    s += (x2 - x1) * (y2 - y1)\n    l = min(l, x1)\n    r = max(r, x2)\n    u = max(u, y2)\n    d = min(d, y1)\nif r - l == u - d and (r - l) * (u - d) == s:\n    print('YES')\nelse:\n    print('NO')\n", "def f(l, i):\n    return min(l) if i < 2 else max(l)\n\n\nclass CodeforcesTask325ASolution:\n    def __init__(self):\n        self.result = ''\n        self.n = 0\n        self.rectangles = []\n\n    def read_input(self):\n        self.n = int(input())\n        for _ in range(self.n):\n            self.rectangles.append([int(x) for x in input().split(\" \")])\n\n    def process_task(self):\n        cords = [f([x[i] for x in self.rectangles], i) for i in range(4)]\n        fields = [(x[3] - x[1]) * (x[2] - x[0]) for x in self.rectangles]\n        ff = sum(fields)\n        if ff == (cords[3] - cords[1]) * (cords[2] - cords[0]) and cords[3] - cords[1] == cords[2] - cords[0]:\n            self.result = \"YES\"\n        else:\n            self.result = \"NO\"\n\n    def get_result(self):\n        return self.result\n\n\ndef __starting_point():\n    Solution = CodeforcesTask325ASolution()\n    Solution.read_input()\n    Solution.process_task()\n    print(Solution.get_result())\n\n__starting_point()", "xmin, ymin, xmax, ymax, a = 31400, 31400, 0, 0, 0\n \nfor i in range(int(input())):\n \n    x1, y1, x2, y2 = map(int, input().split())\n \n    xmin = min(xmin, x1)\n \n    ymin = min(ymin, y1)\n \n    xmax = max(xmax, x2)\n \n    ymax = max(ymax, y2)\n \n    a += (x2 - x1) * (y2 - y1)\n\n#print(xmax,xmin,ymax,ymin,a,end=\"\") \nprint('YES' if xmax - xmin == ymax - ymin and a == (xmax - xmin) ** 2 else 'NO')"]