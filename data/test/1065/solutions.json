["n, k, M, D = list(map(int, input().split()))\nans = 0\nfor d in range(1, D + 1):\n    bot = 0\n    top = M + 1\n    while (top > bot + 1):\n        mid = (bot + top) // 2\n        cur = (d - 1) * mid * k;\n        cur += mid;\n        if (cur > n):\n            top = mid;\n        else:\n            bot = mid;\n    ans = max(ans, bot * d)\nprint(ans);\n", "n, k, m, d = map(int, input().split())\nres = 0\nfor a in range(1, d + 1):\n    x = n // (a * k - k + 1)\n    x = min(x, m)\n    res = max(res, x * a)\nprint(res)", "n,k,m,d=list(map(int,input().split()))\nans=0\nfor t in range(1,d+1):\n    x=n//(k*t-k+1)\n    if x<=m:\n        ans=max(ans,t*x)\nx=m\nt=(n//x+k-1)//k\nif t<=d:\n    ans=max(ans,t*x)\nprint(ans)\n", "candies, people, m, d = [int(i) for i in input().split(' ')]\n\nmax_score = 0\nfor t in range(d):\n    x = candies // (people * t + 1)\n    x = min(x, m)\n    score = (t+1) * x\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n", "n, k, m, d = map( int, input().split( ' ' ) )\n\nans = 0\nhand = 0\n\nfor i in range( d ):\n\tkoita = hand + 1\n\tval = min( n // koita, m )\n\tans = max( ans, val * ( i + 1 ) )\n\thand += k\n\nprint( ans )", "\ndef get(sp,n,k,m,d):\n\thx=n//(sp*k-k+1)\n\tlx=n//(sp*k)\n\tif(lx>m):return 0\n\telse: return min(m,hx)*sp;\n\n\ndef __starting_point():\n        k=input()\n        lis=k.split(' ')\n        #print(\"{}\\n\".format(k))\n        #print(\"{}\\n\".format(lis))\n        n=int(lis[0])\n        k=int(lis[1])\n        m=int(lis[2])\n        d=int(lis[3])\n        ans=-1\n        for i in range(1,d+1):\n                ans=max(ans,get(i,n,k,m,d))\n                \n        print(\"{}\\n\".format(ans))\n__starting_point()", "n,k,M,D=list(map(int,input().split()))\nmax_=0\nfor i in range(1,D+1):\n    max_=max(max_,i*(min(M,n//(i*k-k+1))))\nprint (max_)\n", "#!/usr/bin/env python3\n\n[n, k, M, D] = list(map(int, input().strip().split()))\n\ndef ceil(a, b):\n\treturn -((-a) // b)\n\ndef arkkonf(x):\n\treturn x * ceil(n // x, k)\n\nres = 0\nfor d in range(D):\n\tx = n // (k * d + 1)\n\tx = min(x, M)\n\tif x == 0:\n\t\tcontinue\n\twhile x < M and n // x > k * D:\n\t\tx += 1\n\tif n // x > k * D:\n\t\tcontinue\n\tres = max(res, arkkonf(x))\n\nprint (res)\n", "n,k,M,D = input().split()\nn = int(n)\nk = int(k)\nM = int(M)\nD = int(D)\nlow = (n + k * D - 1) // (k * D)\nhigh = M\ni = 1\nan = 0\nwhile i <= D:\n    lo = low-1\n    hi = high\n    while lo != hi:\n        mi = (lo + hi + 1) // 2\n        if (i-1)*k*mi + mi <= n:\n            lo = mi\n        else:\n            hi = mi - 1\n    if lo != low - 1 and an < lo * i:\n        an = lo * i\n    i = i + 1\nprint(an)", "import math\nn,k,M,D = input().split()\nn = int(n)\nk = int(k)\nM = int(M)\nD = int(D)\nans =-1\nfor a in range(1,D+1):\n    r=a*k\n    l=(a-1)*k+1\n    l1 = math.ceil(n/(r+1))\n    if (l>0):\n       r1 = n//l\n    else:\n        r1=999999999999999999\n    if ((r1>=l1) and (M>=l1)):\n        x = min(r1,M)\n        ans = max(ans,x*a)\nprint(ans)       \n    \n", "n, k, m, d = list(map(int, input().split()))\nans = 0\nfor i in range(1, d + 1):\n    if m < n // (k * i):\n        continue\n    if n < (k * (i - 1) + 1):\n        break\n    ans_here = min(n // (k * (i - 1) + 1), m)\n    # print(i, ans_here)\n    ans = max(ans, ans_here * i)\nprint(ans)\n", "n, k, m, d = list(map(int, input().split()))\nres = 0\nfor i in range(1, d + 1):\n    x = n // ((i - 1) * k + 1)\n    x = min(x, m)\n    if (x == 0):\n        continue\n    if ((((n // x) - 1) // k + 1) != i):\n        continue\n    res = max(res, i * x)\nprint(int(res))\n", "from math import floor\n\nn, k, M, D = map(int, input().split())\n\n_max = M\n\nfor g in range(2, D + 1):\n    x = min(M, n // ((g - 1) * k + 1))\n    max_g = g * x\n    _max = max(_max, max_g)\n\nprint(_max)", "import math\n\n[n,k,M,D]=input().split()\nn=int(n)\nk=int(k)\nM=int(M)\nD=int(D)\n\"\"\"\nll best=0;\n\tfor (ll i=0; i<=(D-1); i++){\n\t\tll x=min(up,n/(i*k+1));\n\t\tll score=(i+1)*x;\n\t\tbest=max(best,score);\n\t}\n\t\n\tcout<<best<<endl;\n\"\"\"\nbest=0\nfor i in range(D):\n\t#print(n, i*k+1)\n\tx=min(M,(n//(i*k+1)))\n\t#print(i, x)\n\tscore=(i+1)*x\n\tbest=max(best,score)\nprint(best)", "Q = [int(x) for x in input().split(' ')]\nn = Q[0]\nk = Q[1]\nM = Q[2]\nD = Q[3]\nm1=0\n\nfor i in range(D):\n\tm = n//(i*k+1)\n\tif m>M:\n\t\tm=M\n\tm1=max(m*(i+1),m1)\n\nprint(m1)\n", "## This is a solution for problem candies-splitting\n#  This is nk_ok.py\n#\n#  @author: Nikolay Kalinin\n#  @date: Mon, 23 Apr 2018 21:58:46 +0300\n\nn, k, M, D = map(int, input().split())\n\nans = 0\nfor d in range(1, D + 1):\n    # (d - 1) * k * x + x <= n\n    maxx = M\n    maxx = min(n // ((d - 1) * k + 1), maxx)\n    \n    if maxx == 0:\n        continue\n    reald = (n // maxx + k - 1) // k\n    if reald != d:\n        continue\n    \n    def f(x):\n        return x * (d - 1) + x\n    \n    ans = max(ans, f(maxx))\nprint(ans)", "n,k,m,d = [int(x) for x in input().split()]\nans = 0\nfor t in range(1,d+1):\n\tR = n // ((t-1)*k + 1)\n\tL = n // (t*k)\n\tif L <= R:\n\t\tif L <= m <= R:\n\t\t\tans = max(ans,m*t)\n\t\telif R <= m:\n\t\t\tans = max(ans,R*t)\n\nprint(ans)\n", "Q = [int(x) for x in input().split(' ')]\nn = Q[0]\nk = Q[1]\nM = Q[2]\nD = Q[3]\n\nmm = 0\n\nfor i in range(D):\n    m = n // (i * k + 1)\n    if m > M:\n        m = M\n    mm = max(m * (i + 1), mm)\n\nprint(mm)\n", "n, k, m, d = [int(x) for x in input().split()]\nres = 0\nfor a in range(1, d + 1):\n    x = n // (a * k - k + 1)\n    x = min(x, m)\n    res = max(res, x * a)\nprint(res)", "\ndef binn(p):\n\tnonlocal n, k, m, d\n\tl = 0\n\tr = m\n\twhile l + 1 < r:  \n\t\tm1 = (l + r) // 2 \n\t\tif (m1 * p * k + m1 - 1 >= n):\n\t\t\tr = m1\n\t\telse:\n\t\t\tl = m1\n\treturn r\n\n\ndef binn1(x, p):\n\tnonlocal n, k, m, d\n\tl = x \n\tr = m + 1\n\twhile l + 1 < r:\n\t\tm1 = (l + r) // 2\n\t\tif (m1 * p + (k - 1) * (p - 1) * m1 <= n):\n\t\t\tl = m1\n\t\telse:\n\t\t\tr = m1\n\treturn l \n\n\nn, k, m, d = map(int, input().split()) \nans = -1e18\nfor i in range(1, d + 1): \n\tx = binn(i)\n\tx1 = binn1(x, i)\n\tif (x1 * i + (k - 1) * (i - 1) * x1 <= n and x1 * i * k + x1 - 1 >= n):\n\t\tans = max(ans, x1 * i)\t                  \n\nprint(ans)", "n, k, M, D = map(int, input().split())\nans = 0\nfor i in range(1, D+1):\n    l = n//(i*k)\n    r = n//((i-1)*k + 1)\n    if l <= M:\n        ans = max(ans, min(M, r)*i)\nprint(ans)", "n, k, m, d = map(int, input().split())\n\nans = 0\nfor x in range(1, d + 1):\n    y = min(n // ((x - 1) * k + 1), m)\n    ans = max(ans, x * y)\nprint(ans)", "import sys\nimport math\n\ndef main():\n    n, k, M, D = map(int, input().split())\n    \n    ans = 1\n    for i in range(1, D + 1):\n        d = (k * (i - 1) + 1)\n        \n        left = (n // (i * k))\n        right = n // d\n        \n        cnt = 1\n        if (M <= right):\n            cnt = M\n        else:\n            cnt = right\n            \n        added = cnt * i\n        ans = max(ans, added)\n        \n    print(ans)\n            \n    \ndef __starting_point():\n    main()\n__starting_point()", "def ifthen(x, y, z):\n    return y if x else z\n\nn, k, M, D = map(int, input().split())\nt = M\nt2 = (n//M)//k + ifthen((n//M)%k, 1, 0)\nans = t*t2\nfor i in range(2, D+1):\n    l = n//(k*i)\n    r = n//(k*(i-1))\n    tmp = k*(i-1)+1\n    while (r-l > 1):\n        mid = (l+r)//2\n        if tmp*mid <= n:\n            if mid <= M:\n                ans = max(ans, mid*i);\n            l = mid;\n        else:\n            r = mid;\n    if (tmp*l <= n) and (l <= M):\n        ans = max(ans, l*i)\n    if (tmp*r <= n) and (r <= M):\n        ans = max(ans, r*i)\n\nprint(ans)", "a = input()\n\na = a.split(' ')\n\nfor i in range(len(a)):\n    a[i] = int(a[i])\n\ndef kandidati():\n    d = []\n    for i in range(1,a[3]):\n        if a[0]//(i*a[1]+1) < a[2]:\n            d += [(a[0]//(i*a[1]+1))*(i+1)]\n\n    if a[0] % int(a[1]*a[2]) == 0:\n        s = a[0]/(a[1]*a[2])\n        d += [int(a[2]*s)]\n    else:\n        f = int(a[0]//(a[1]*a[2]))\n        if  a[0] - f*a[2]*a[1] >= a[2]:\n            s = a[0]//(a[1]*a[2])+1\n        else:\n            s = a[0]//(a[1]*a[2])\n        d += [int(a[2]*s)]\n    print(max(d))\n        \nkandidati()\n\n"]