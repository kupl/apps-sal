["n = int(input())\na = list(map(int, input().split()))\nmn = 10000000000\nans = -1\nfrom math import ceil\nfor i in range(n):\n    b = a[i] - i\n    c = int(ceil(b / n))\n    cc = n*c\n    if n*c < mn:\n        mn = n*c\n        ans = i+1\nprint(ans)            ", "from math import ceil\n\nn = int(input())\na = list(map(int, input().split()))\n\nfor i in range(n):\n    a[i] -= i\n\nfor i in range(n):\n    a[i] = ceil(a[i] / n)\n\nans = -1\ns = 10 ** 9 + 7\n\nfor i in range(n):\n    if a[i] < s:\n        s = a[i]\n        ans = i + 1\n\nprint(ans)\n", "n=int(input())\nta=input().split()\na=[0]\nfor i in ta:\n    a.append(int(i)+n)\nmn=1000000000000000000\nmner=1\nfor i in range(1,n+1):\n    if (a[i]-i)//n<mn:\n        mn=(a[i]-i)//n\n        mner=i\nprint(mner)\n", "n = int(input())\n\narr = list(map(int, input().split()))\nm = int(1e12)\nans = 1\n\nfor i in range(n):\n    k = arr[i] // n\n    k *= n\n    while (k +  i < arr[i]):\n        k += n\n\n    if k < m:\n        m = min(m, k)\n        ans = i\nprint(ans+1)\n", "n = int(input())\na = list(map(int, input().split()))\nm = a[0]\nfor i in range(n):\n    m = min(m, a[i])\nif (m == 0):\n    ans = 1\n    for i in range(n):\n        if (a[i] - i <= 0):\n            ans = i + 1\n            break\n    print(ans)\nelse:\n    cur = m % n\n    for i in range(cur, cur + n):\n        d = i - cur\n        i %= n\n        if (a[i] - d - m <= 0):\n            ans = i + 1\n            break\n    print(ans)", "3\n\ndef solve(N, A):\n    mn = min(A)\n    if mn > N:\n        A = [a - (mn // N * N) for a in A]\n\n    decr = 0\n    i = 0\n    while True:\n        if A[i] - decr <= 0:\n            return i + 1\n\n        decr += 1\n        i += 1\n        if i == N:\n            i = 0\n\n\ndef main():\n    N = int(input())\n    A = [int(e) for e in input().split(' ')]\n    assert len(A) == N\n    print(solve(N, A))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\narr = list(map(int, input().split()))\nmi = arr[0]\nind = 0\nfor i in range(n):\n    if(arr[i] < mi):\n        mi = arr[i]\n        ind = i\nkol = mi\npol = kol % n\n#print(kol, pol)\nfor i in range(n):\n    #print(kol, arr[i])\n    if(kol >= arr[pol]):\n        break\n    kol += 1\n    pol = (pol + 1) % n\nprint(pol + 1)", "#!/usr/bin/env python3\nfrom sys import stdin\n\n\ndef solve(tc):\n    n = int(stdin.readline().strip())\n    li = list(map(int,stdin.readline().split()))\n\n    ans = 1\n    mini = 1e9\n    for i in range(n):\n        k = li[i] // n\n        if li[i]%n>i:\n            k += 1\n        \n        if k<mini:\n            mini = k\n            ans = i+1\n    \n    print(ans)\n\n\n\nLOCAL_TEST = not __debug__\nif LOCAL_TEST:\n    infile = __file__.split('.')[0] + \"-test.in\"\n    stdin = open(infile, 'r')\n\ntcs = (int(stdin.readline().strip()) if LOCAL_TEST else 1)\ntc = 1\nwhile tc <= tcs:\n    solve(tc)\n    tc += 1", "import math\nn=int(input())\nl=list(map(int,input().strip().split()))\nl1=[]\nfor x,y in enumerate(l):\n\tif (y<x):\n\t\tm=0\n\telse:\n\t\tm=y-x\n\tl1.append(math.ceil(m/n))\nmin1=100000000000000\nmin2=1000000000000\nfor i in range(n):\n\tif l1[i]<min1:\n\t\tmin1=l1[i]\n\t\tmin2=i+1\nprint (min2)", "n = int(input())\nai = list(map(int,input().split()))\nans = -1\nfor i in range(n):\n    ai[i] -= (i)\n    if ai[i] <= 0:\n        ans = i+1\n        break\nif ans == -1:\n    mini = 10**9\n    for i in range(n):\n        temp = ai[i] /  n\n        if temp != int(temp):\n            temp += 1\n        if mini > int(temp):\n            mini = int(temp)\n            ans = i+1\nprint(ans)\n", "n = int(input())\ns = input().split(\" \")\nfor i in range(n):\n    s[i] = int(s[i])\n\nround = 1000000000\nfor i in range(n):\n    if round > s[i]//n:\n        round = s[i]//n\nfor i in range(n):\n    s[i] -= round*n\n\ni = 0\ntime = 0\nwhile (1):\n    if s[i] <= time:\n        break\n    i = (i+1) % n\n    time += 1\n\nprint(i+1)\n", "input()\nqueue=list(map(int,input().split()))\nt=len(queue)\nbase=min(queue)\nminu=int(base/t)*t\nwhile(queue[minu%t]>minu):\n    minu+=1\nprint(minu%t+1) ", "n = int(input())\na = [int(v) for v in input().split()]\n\na = [ai - i for i, ai in enumerate(a)]\n\nminv = 100000000000000\nmini = None\n\nfor i, ai in enumerate(a):\n    if ai <= 0:\n        print(i + 1)\n        return\n    else:\n        v = (ai - 1) // n\n        if v < minv:\n            minv = v\n            mini = i\n\nprint(mini + 1)\n", "n=int(input())\narr=list(map(int,input().split()))\narrx=[]\nfor i in arr:\n\tarrx.append(i//n)\nans=0\narry=[]\nfor i in range(n):\n\tk=arrx[i]*n\n\tif(arr[i]-k<=i):\n\t\tk+=i+1\n\telse:\n\t\tk+=n+i+1\n\tarry.append(k)\n#print(arry)\nprint(arry.index(min(arry))+1)", "#!/usr/bin/env python3\n\nn = int(input().strip())\nais = list(map(int, input().strip().split()))\n\ndef ceil(a, b):\n\treturn -((-a) // b)\n\nbis = [ceil(ai - i, n) for i, ai in enumerate(ais)]\n\nbmin = min(bis)\nibmin = bis.index(bmin)\n\nprint(ibmin + 1)\n", "from math import ceil\nn=int(input())\na=list(map(int,input().split()))\nfor i in range(n):\n    a[i]=ceil((a[i]-i)/n)\nmini=min(a)\nprint(a.index(mini)+1)", "n = int(input())\ndata = list(map(int, input().split()))\nans = 1\nans_sum = (data[0] + n - 1) // n * n\nfor i in range(1, n):\n    k = i + (data[i] - i + n - 1) // n * n\n    if k < ans_sum:\n        ans = i + 1\n        ans_sum = k \nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\ns = min(a)\nfor q in range(n):\n    a[q] -= s//n*n\nq1 = 0\nwhile a[q1 % n]-q1 > 0:\n    q1 += 1\nprint(q1 % n+1)\n", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\nimport math\n\nn   = int(input())\na   = [int(i) for i in input().split()]\n\nstart = time.time()\n\n\nmin = math.ceil(a[0]/n)\nmini = 0\nfor i in range(n):\n    a[i] = math.ceil((a[i] - i)/n)\n    if min > a[i]:\n        mini = i\n        min = a[i]\n\nprint(mini+1)\nfinish = time.time()\n#print(finish - start)\n", "while 1:\n    try:\n        n = int(input())\n        a = [int(item) for item in input().split()]\n        for i in range(n):\n            tour = a[i] // n\n            if i < a[i] % n:\n                tour += 1\n            a[i] = tour\n        min_tour = float(\"inf\")\n        \n        for i in range(n):\n            if a[i] < min_tour:\n                answer = i\n                min_tour = a[i]\n        print(answer + 1)\n    except EOFError:\n        break\n", "n = int(input())\na = list(map(int, input().split()))\nb = a[:]\nfor i in range(n):\n    b[i] = a[i] - a[i]%n  + i\n    if b[i] < a[i]:\n        b[i] += n\nmn = 0\nfor i in range(n):\n    if b[mn] > b[i]:\n        mn = i\nprint(mn+1)\n", "n = int(input())\na=[int(_) for _ in input().strip().split()]\n\nmini=min(a)\na=[_-mini for _ in a]\npos = mini%n\ncount = 0\nwhile True:\n\tif a[pos] - count <=0:\n\t\tprint(pos+1)\n\t\tbreak\n\telse:\n\t\tcount+=1\n\t\tpos=(pos+1)%n", "n = int(input())\narr = list(map(int, input().split()))\nmn = min(arr)\n# arr = [i - mn for i in arr]\npos = mn % n\nval = mn\nfor _ in range(n):\n    if arr[pos] <= val:\n        ans = pos\n        break\n    pos = (pos + 1) % n\n    val += 1\nprint(ans + 1)\n", "import math\nn = int(input().strip())\na=[int(x) for x in input().strip().split(' ')]\nminm = 1000000000000000000\nans = 0\nfor i in range(n):\n    v=a[i]-i\n    if max(0,v)==0:\n        if 0<minm:\n            ans = i+1\n            minm=0\n    else:\n        b = round(math.ceil(v/n)+1)\n        if b<minm:\n            ans = i+1\n            minm=b\nprint(ans)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    a = [(i + 1, a[i] - i) for i in range(n)]\n    a.sort(key = lambda b: (b[1] - 1) // n)\n    a = list([b for b in a if (b[1] - 1) // n == (a[0][1] - 1) // n])\n    a.sort(key = lambda b: b[0])\n    print(a[0][0])\n    return 0\nmain()\n"]