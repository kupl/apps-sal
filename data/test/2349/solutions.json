["tst = int(input())\nfor i in range(0, tst):\n    n = int(input())\n    ans = 1\n    l = 1\n    p = []\n    while l <= n:\n        ans += 1\n        l = n // (n // l)\n        p.append(n // l)\n        l += 1\n    p.append(0)\n    p.reverse()\n    print(len(p))\n    print(\" \".join(str(x) for x in p))", "t = int(input())\n\nfor _ in range(t):\n    n = int(input())\n\n    l = [n]\n    test = 2\n    while n//test != l[-1]:\n        l.append(n//test)\n        test += 1\n\n    while l[-1] != 0:\n        l.append(l[-1] - 1)\n        \n    print(len(l))\n    print(' '.join(map(str,l[::-1])))\n", "for _ in range(int(input())):\n    n = int(input())\n    d = 1\n    res = [0]\n    while d <= n:\n        e = n // d\n        res.append(e)\n        d = (n // e) + 1\n    print(len(res))\n    print(*sorted(res))", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    set_ = set()\n    for i in range(1, int(n**0.5)+10):\n        set_.add(n // i)\n    li = sorted(list(set_))\n    num = li[0]\n    li2 = [i for i in range(num)]\n    print(len(li2) + len(li))\n    print(*li2 + li)", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    aa=[]\n    ind=1\n    while True:\n        aa.append(n//ind)\n        if len(aa)>=2:\n            if aa[-1]==aa[-2]:\n                for i in range(aa[-1],-1,-1):\n                    aa.append(i)\n                break\n        ind+=1\n    print(len(set(aa)))\n    print(*sorted(list(set(aa))))\n    \n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor testcases in range(t):\n    n=int(input())\n\n    ANS=[n//1]\n\n    for i in range(2,n):\n        ANS.append(n//i)\n\n        if n/(i-1)-n/i<1:\n            break\n\n    A=list(range(0,ANS[-1]))+sorted(set(ANS))\n\n    print(len(A))\n    print(*A)\n", "def kek(n):\n\tl = [0]\n\tl2 = []\n\ti = 1\n\twhile i * i < n:\n\t\tl.append(i)\n\t\tif n // i != i:\n\t\t\tl2.append(n // i)\n\t\ti += 1\n\tif i * i == n:\n\t\tl.append(i)\n\tl2.reverse()\n\tl += l2\n\treturn l\n\ndef main():\n\tfor _ in range(int(input())):\n\t\tn = int(input())\n\t\tl = kek(n)\n\t\tprint(len(l))\n\t\tfor i in l:\n\t\t\tprint(i, end=' ')\n\t\tprint()\nmain()", "for _ in range(int(input())):\n\tn=int(input())\n\tif n<=1000005:\n\t\tl=[0,1]\n\t\tfor k in range(n-1,0,-1):\n\t\t\ta=n//k\n\t\t\tif a>l[-1]:\n\t\t\t\tl.append(a)\n\t\tprint(len(l))\n\t\tprint(*l)\n\telse:\n\t\tl=[x for x in range(1001)]\n\t\tfor k in range(1000000,0,-1):\n\t\t\ta=n//k\n\t\t\tif a>l[-1]:\n\t\t\t\tl.append(a)\n\t\tprint(len(l))\n\t\tprint(*l)", "q = int(input())\nfor ifwfwe in range(q):\n\tn = int(input())\n\ti = 1\n\todp = [0]\n\twhile i*i <= n:\n\t\todp.append(i)\n\t\ti += 1\n\twhile i > 0:\n\t\tif n // i > odp[-1]:\n\t\t\todp.append(n//i)\n\t\ti -= 1\n\tprint(len(odp))\n\tprint(*odp)", "def solve():\n    n = int(input())\n    s = set()\n    s.add(0)\n    for i in range(1, int(n**0.5)+1):\n        k = n//i\n        s.add(k)\n        s.add(i)\n    ans = sorted(s)\n    print(len(ans))\n    print(*ans)\n\nt = int(input())\nfor i in range(t):\n    solve()", "#603_C\n\nt = int(input())\n\nfor i in range(0, t):\n    n = int(input())\n    ln = [0]\n    oned = False\n    sqt = n // int(n ** 0.5)\n    on = -1\n    for j in range(1, max(2, int(n ** 0.5) + 1)):\n        if n // j != on:\n            ln.append(n // j)\n            if n // j == 1:\n                oned = True\n        on = n // j\n    for j in range(len(ln) - 1, 0, -1):\n        if n // ln[j] == sqt:\n            continue\n        ln.append(n // ln[j])\n        if n // ln[j] == 1:\n            oned = True\n    if not oned:\n        ln.append(1)\n    print(len(ln))\n    print(\" \".join([str(j) for j in sorted(ln)]))\n", "import sys\ndef I():\n        return sys.stdin.readline().rstrip()\n\nfor _ in range( int(I()) ):\n    n = int(I())\n    a = [ 0, 1 ]\n    i = n\n    while i > 0:\n        if n // i > a[ -1 ]:\n            a.append( n // i )\n        i = n // ( a[ -1 ] + 1 )\n    print( len( a ) )\n    print( *a )\n", "import math\nt = int(input())\nfor i in range (t):\n    n = int(input())\n    m = math.floor(math.sqrt(n))\n    ans = [j for j in range (m + 1)]\n    left = m\n    while m > 0:\n        k = n//m\n        if left == k:\n            m -= 1\n            continue\n        ans.append(k)\n        left = k\n        m -= 1\n    print(len(ans))\n    print(*ans, sep = \" \")", "t = int(input())\n\nfor _ in range(t):\n\tn = int(input())\n\ts = set.union({0}, *({i, n//i} for i in range(1, int(n**.5)+1)))\n\tprint(len(s))\n\tfor v in sorted(s):\n\t\tprint(v, end=\" \")\n\tprint()", "for _ in range(int(input())):\n\tn = int(input())\n\n\tans = {0}\n\n\tfor i in range(1, int(n ** 0.5 + 1)):\n\t\tans.add(n // i)\n\t\tans.add(n // (n // i))\n\n\tprint(len(ans))\n\tprint(*sorted(ans))", "from math import sqrt\nt=int(input())\nfor _ in range(t):\n\tn=int(input())\n\tans=set()\n\tans.add(0)\n\troot=int(sqrt(n))\n\tfor x in range(1,root+1):\n\t\tans.add(x)\n\t\tans.add(n//x)\n\tprint(len(ans))\n\tans=sorted(ans)\n\tfor x in ans:\n\t\tprint(x,end=' ')\n\tprint()", "# from fractions import gcd\n# from datetime import date, timedelta\n# from heapq import*\n# import math\n# from collections import defaultdict, Counter, deque\n# import sys\n# from bisect import *\n# import itertools\n# import copy\n# sys.setrecursionlimit(10 ** 7)\n# MOD = 10 ** 9 + 7\n\n\n\n\n\ndef main():\n    t = int(input())\n    for _ in range(t):\n        n = int(input())\n        prev = -1\n        ans = []\n        for i in range(1,40000):\n            v = n//i\n            if v == prev:\n                break\n            ans.append(v)\n            prev = v\n        for i in range(v-1, -1, -1):\n            ans.append(i)\n        print(len(ans))\n        print(*ans[::-1])\n\n\n\n\n\n    \n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "3\n\nimport os\nimport sys\n\n\ndef main():\n    T = read_int()\n    for _ in range(T):\n        ans = solve(read_int())\n        print(len(ans))\n        print(*ans)\n\n\ndef solve(N):\n    ans = [N]\n    i = 2\n    while i * (i - 1) <= N:\n        v = N // i\n        if ans[-1] != v:\n            ans.append(v)\n        i += 1\n\n    v = ans[-1]\n    for i in range(v - 1, -1, -1):\n        ans.append(i)\n    ans.reverse()\n    return ans\n\n\n###############################################################################\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# from sys import stdin\n# def rl():\n#     return [int(w) for w in stdin.readline().split()]\nfrom bisect import bisect_right\nfrom bisect import bisect_left\nfrom collections import defaultdict\nfrom math import sqrt,factorial,gcd,log2,inf,ceil\n# map(int,input().split())\n# # l = list(map(int,input().split()))\n# from itertools import permutations\nimport sys\n# input = sys.stdin.readline\n\n# t = int(input())\n#\n# for _ in range(t):\n#     a,b,c = map(int,input().split())\n#     a,b,c = sorted([a,b,c])\n#     ans = 0\n#     ans+=b\n#     c-=b\n#\n#     a,c = sorted([a,c])\n#     ans+=a\n#     print(ans)\n\n\n# print(ans)\n\n\n\n\nt = int(input())\n\nfor _ in range(t):\n\n    n = int(input())\n\n    ans = [1,0]\n\n    for i in range(1,int(sqrt(n)+1)):\n        ans.append(n//i)\n        ans.append(n//(n//i))\n\n    ans = list(set(ans))\n    print(len(ans))\n    ans.sort()\n    print(*ans)\n\n\n\n\n", "import sys\n\n\n# inf = open('input.txt', 'r')\n# reader = (int(line.rstrip()) for line in inf)\nreader = (int(s.rstrip()) for s in sys.stdin)\n\ndef rating(n):\n    m = n\n    ans = [0, 1]\n    ndiv = 2\n    while True:\n        brick = n // ndiv\n        if not brick:\n            break\n        ndiv = n // brick\n        ans.append(ndiv)\n        ndiv += 1\n    return ans\n\nt = next(reader)\nfor _ in range(t):\n    n = next(reader)\n    ans = rating(n)\n    sys.stdout.write(str(len(ans)) + '\\n')\n    sys.stdout.write(' '.join(map(str, ans)) + '\\n')\n    \n# inf.close()\n", "import math\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    divisors = set(n // i for i in range(1, int(math.sqrt(n))+1))\n    for d in divisors.copy():\n        divisors.add(n // d)\n    divisors.add(0)\n\n    print(len(divisors))\n    print(*sorted(divisors))\n", "'''input\n4\n5\n11\n1\n3\n'''\nfrom sys import stdin, stdout\n\n\nfrom collections import defaultdict, deque\n\n# main starts \nt = int(stdin.readline().strip())\nfor _ in range(t):\n\tn = int(stdin.readline().strip())\n\tans = set()\n\tfor i in range(1, int(n ** 0.5) + 1):\n\t\tans.add(i)\n\t\tans.add(n//i)\n\n\tans.add(0)\n\tans.add(1)\n\tans.add(n)\n\tans = list(ans)\n\tans.sort()\n\tprint(len(ans))\n\tprint(*ans)\n", "sp = lambda: list(map(int, input().split()))\nsi = lambda: int(input())\n\nTESTCASES = int(input())\nfor tc in range(TESTCASES):\n    n=si()\n    ints = set(range(int(n**0.5)+1))\n    for i in range(int(n**0.5)+1,0,-1):\n        ints.add(n//i)\n    ints=sorted(list(ints))\n    print(len(ints))\n    print(\" \".join(map(str,ints)))\n", "for i in range(int(input())):\n\tn = int(input())\n\tb = [i for i in range(1, int(n**(1/2) + 1))]\n\tr = [str(m) for m in sorted(list(set(b + [n//i for i in b])))]\n\tprint(len(r) + 1)\n\tprint(0, ' '.join([str(m) for m in sorted(list(set(b + [n//i for i in b])))]))"]