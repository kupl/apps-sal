["import sys\nfrom math import *\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nn, m = mints()\na = list(minp())\nx = 0\nt = 0\nd = 1\nfor i in range(n-1):\n\tb = list(minp())\n\tl = x\n\tr = x\n\twall = 0\n\twhile True:\n\t\tt += 1\n\t\tif b[x] == '.':\n\t\t\tbreak\n\t\tif x + d == m or x + d < 0 or a[x+d] == '#':\n\t\t\twall += 1\n\t\t\td = -d\n\t\t\tif wall == 2:\n\t\t\t\tprint(\"Never\")\n\t\t\t\treturn\n\t\telif a[x+d] == '+':\n\t\t\twall = 0\n\t\t\ta[x+d] = '.'\n\t\t\td = -d\n\t\telif l <= x+d and x+d <= r:\n\t\t\tif d == 1:\n\t\t\t\tt += r-x-1\n\t\t\t\tx = r\n\t\t\telse:\n\t\t\t\tt += x-l-1\n\t\t\t\tx = l\n\t\telse:\n\t\t\tx += d\n\t\t\tr = max(r,x)\n\t\t\tl = min(l,x)\n\ta, b = b, a\nprint(t)", "n, m = [int(i) for i in input().split()]\ncurrent_floor = list(input())\n\nx, t, direction = 0, 0, 1\n\nfor i in range(n-1):\n    floor = list(input())\n    l, r = x, x\n    wall = 0\n    while True:\n        t += 1\n        if floor[x] == '.':\n            break\n        if (x + direction == m) or (x + direction < 0) or (current_floor[x+direction] == '#'):\n            wall += 1\n            direction = -direction\n            if wall == 2:\n                print(\"Never\")\n                return\n        elif current_floor[x+direction] == '+':\n            wall = 0\n            current_floor[x+direction] = '.'\n            direction = -direction\n        elif l <= x+direction and x+direction <= r:\n            if direction == 1:\n                t += r-x-1\n                x = r\n            else:\n                t += x-l-1\n                x = l\n        else:\n            x += direction\n            r = max(r, x)\n            l = min(l, x)\n    current_floor, floor = floor, current_floor\nprint(t)\n"]