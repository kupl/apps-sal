["import sys\ninput = sys.stdin.readline\n\nMOD = 998244353\n\n\nMAX = 5 * 10 ** 5 + 5\n\nfact = [1]\nfor i in range(1, MAX + 1):\n    new = fact[-1] * i\n    fact.append(new % MOD)\n\ninvL = pow(fact[MAX],MOD-2,MOD)\nfactInv = [invL] * (MAX + 1)\nfor i in range(MAX - 1, -1, -1):\n    old = factInv[i + 1]\n    new = old * (i  + 1)\n    factInv[i] = new % MOD\n\ndef choose(a,b):\n    if a < b:\n        return 0\n    res = fact[a]\n    res *= factInv[b]\n    res %= MOD\n    res *= factInv[a - b]\n    res %= MOD\n    return res\n    \n\nn, k = list(map(int, input().split()))\nevents = []\nfor i in range(n):\n    s, e = list(map(int, input().split()))\n    events.append(2*s+0)\n    events.append(2*e+1)\n    \nevents.sort()\ncount = 0\nout = 0\nfor t in events:\n    if t&1== 0:\n        out += choose(count, k - 1)\n        count += 1\n        out %= MOD\n    else:\n        count -= 1\n\nprint(out)\n", "from sys import stdin\n\ndef modfac(n, MOD):\n \n    f = 1\n    factorials = [1]\n    for m in range(1, n + 1):\n        f *= m\n        f %= MOD\n        factorials.append(f)\n    inv = pow(f, MOD - 2, MOD)\n    invs = [1] * (n + 1)\n    invs[n] = inv\n    for m in range(n, 1, -1):\n        inv *= m\n        inv %= MOD\n        invs[m - 1] = inv\n    return factorials, invs\n\ndef modnCr(n,r): \n    return fac[n] * inv[n-r] * inv[r] % mod\n\nmod = 998244353\nfac,inv = modfac(400000,mod)\nn,k = list(map(int,stdin.readline().split()))\n\nl = [float(\"inf\")]\nr = [float(\"inf\")]\n\nfor i in range(n):\n\n    L,R = list(map(int,stdin.readline().split()))\n    l.append(L)\n    r.append(R)\n\nl.sort()\nl.reverse()\nr.sort()\nr.reverse()\n\nans = 0\nnow = 0\n\nfor i in range(2*n):\n\n    if l[-1] <= r[-1]:\n        now += 1\n        del l[-1]\n\n        if now >= k:\n            ans += modnCr(now-1,k-1)\n            ans %= mod\n    else:\n        now -= 1\n        del r[-1]\n\nprint(ans % mod)\n", "import sys\ninput = sys.stdin.readline\n\nMOD = 998_244_353\nN = 3 * 10 ** 5 + 10\n\nfact = [0 for _ in range(N)]\ninvfact = [0 for _ in range(N)]\nfact[0] = 1\nfor i in range(1, N):\n    fact[i] = fact[i - 1] * i % MOD\n\ninvfact[N - 1] = pow(fact[N - 1], MOD - 2, MOD)\n\nfor i in range(N - 2, -1, -1):\n    invfact[i] = invfact[i + 1] * (i + 1) % MOD\ndef nCk(n, k):\n    if k < 0 or n < k:\n        return 0\n    else:\n        return fact[n] * invfact[k] * invfact[n - k] % MOD\n\ndef main():\n    n, k = map(int, input().split())\n    l_s = []\n    r_s = []\n    for _ in range(n):\n        l, r = map(int, input().split())\n        l_s.append(l)\n        r_s.append(r)\n    l_s.sort()\n    r_s.sort()\n    l_pos = 0\n    r_pos = 0\n    total = 0\n    ans = 0\n    while 1:\n        if l_s[l_pos] <= r_s[r_pos]:\n            total += 1\n            l_pos += 1\n            if total >= k:\n                ans += nCk(total - 1, k - 1)\n                ans %= MOD\n            if l_pos == n:\n                break\n        else:\n            total -= 1\n            r_pos += 1\n\n    print(ans)\n        \n    \n    \n\"\"\"\nfor _ in range(int(input())):\n    main()\n\"\"\"\nmain()"]