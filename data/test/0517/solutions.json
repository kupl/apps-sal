["import string\n\ni = input()\ni = i.split(' ')\nn, d, h = list([int(x) for x in i])\n\ndef check(n, d, h):\n    if d > 2 * h:\n        print(-1)\n        return\n\n    if d < h:\n        print(-1)\n        return\n    if n < d + 1 or n < h + 1:\n        print(-1)\n        return\n    if d == 1 and n > 2:\n        print(-1)\n        return\n\nout = []\n#h\ncheck(n, d, h)\nc = 0\n# print('h')\nfor i in range(h):\n    out.append(str(c + 1) + ' ' + str(c + 2))\n    # print(out[-1])\n    c += 1\nc += 1\nc1 = 0\n# print('d')\nfor i in range(d - h):\n    out.append(str(c1 + 1) + ' ' + str(c + 1))\n    # print(out[-1])\n    c1 = c\n    c += 1\n\nc += 1\n# print('n')\nif d == h:\n    s = 2\nelse:\n    s = 1\n    \nfor i in range(n - c + 1):\n    out.append(str(s) + ' ' + str(c))\n    # print(out[-1])\n\n    c += 1\n\nfor el in out:\n    print(el)\n\n", "n,d,h = (int(i) for i in input().split())\nif h*2 < d or n < d+1 or d == 1 and n > 2 :\n    print(-1)\nelse:\n    for i in range(h):\n        print(i+1,i+2)\n    ost = h+1\n    if d > h:\n        print(1,ost+1)\n    for i in range(d-h-1):\n        print(ost+i+1,ost+i+2)\n    if d != h:\n        for i in range(1,n-d):\n            print(1,d+1+i)\n    else:\n        for i in range(1,n-d):\n            print(2,d+1+i)\n\n", "n, w, h = map(int, input().split())\nif 2*h < w:\n    print(-1)\nelif h == w == 1 and n > 2:\n    print(-1)\nelif h == w == (n - 1):\n    last = 1\n    for i in range(n - 1):\n        print(last, last + 1)\n        last += 1\nelif h == w:\n    last = 0\n    for i in range(h):\n        last += 1\n        print(last, last + 1)\n    next = last + 2\n    for i in range(n - h - 1):\n        print(last, next)\n        next += 1\nelse:\n    last = 1\n    for i in range(h):\n        print(last, last + 1)\n        last += 1\n    next_l = last + 1\n    print(1, next_l)\n    next_l += 1\n    for i in range(w - h - 1):\n        print(next_l, next_l - 1)\n        next_l += 1\n    n -= (w + 1)\n    for i in range(n):\n        print(1, next_l)\n        next_l += 1", "n,d,h=(int(z) for z in input().split())\n\nfrom sys import *\ndef g(n,d,h):\n    if d>2*h:\n        print(-1)\n        return\n    if d==1 and n>2:\n        print(-1)\n        return\n        \n    if d==h:\n        if n==2:\n            print(1,2)\n        else:\n            for i in range(h):\n                print(i+1,i+2)\n        s=(h+2)//2\n        for i in range(h+2,n+1):\n            print(i,s)\n        return\n    for i in range(h):\n        print(i+1,i+2)\n    print(1,h+2)\n    for i in range(d-h-1):\n        print(h+2+i,h+3+i)\n    for i in range(n-(d+1)):\n        print(1,d+2+i)\n\ng(n,d,h)\n        \n        \n", "n, d, h = list(map(int, input().split()))\nif n == 2 and d == h and d == 1:\n    print(1, 2)\nelif h * 2 < d or d == 1 or (h == 1 and d != 2):\n    print(-1)\nelif h == 1 and d == 2:\n    k = 2\n    while k != n + 1:\n        print(1, k)\n        k += 1\nelse:\n    k = 0\n    i = 1\n    j = 2\n    while k != h:\n        print(i, j)\n        i += 1\n        j += 1\n        k += 1\n    i = 1\n    k = 0\n    while k < d - h:\n        print(i, j)\n        i = j\n        j += 1\n        k += 1\n    k += h\n    while k < n - 1:\n        print(2, j)\n        j += 1\n        k += 1\n", "\n\nn, d, h = list(map(int, input().split()))\nif 2 * h < d:\n    print(-1)\n    return\nj = 1\nif d == 1:\n    if n == 2:\n        print(1, 2)\n        return\n    print(-1)\n    return\nif d == 2:\n    if h == 1:\n        for i in range(2, n + 1):\n            print(1, i)\n        return\n    else:\n        print(1, 2)\n        print(2, 3)\n        for i in range(4, n + 1):\n            print(2, i)\n        return\nif h != d:\n    for i in range(2, n + 1):\n        if i - 1 < h + 1:\n            print(i - 1, i)\n            continue\n        if h < d:\n            print(j, i)\n            j = i\n            h += 1\n            continue\n        print(1, i)\n    return\nelse:\n    for i in range(2, n + 1):\n        if i - 1 < h + 1:\n            print(i - 1, i)\n            continue\n        print(2, i)\n", "n, d, h = map(int, input().split())\nif d > h * 2 or (h == 1 and d == 1 and n != 2):\n    print(-1)\nelse:\n    save = 1\n    for i in range(2, h + 2):\n        print(save, i)\n        save = i\n    save = 1\n    for i in range(h + 2, d + 2):\n        print(save, i)\n        save = i\n    if d - h > 1:\n        save = d\n    elif d == h:\n        save = h\n    else:\n        save = 1\n    for i in range(d + 2, n + 1):\n        print(save, i)", "n, d, h=map(int,input().split())\nif d/2 > h or n<d+1 or (h==d==1 and n>2):\n    print(-1)\nelse:\n    p = 1\n    for i in range(2,h+2):\n        print(i-1,i)\n        p+=1\n    if(d==h and n>d+1):\n        print(2,p+1)\n        p+=1\n        for i in range(p+1,n+1):\n            print(2,i)\n            p+=1\n    elif(d-h>0):\n        print(1,p+1)\n        p+=1\n        for i in range(p+1,p + d-h):\n            print(i-1,i)\n            p+=1\n        for i in range(p+1,n+1):\n            print(1,i)\n            p+=1", "from fractions import gcd\nfrom sys import setrecursionlimit\nsetrecursionlimit(100000)\n\nn,d,h = list(map(int, input().split()))\n#~ a = list(map(int, input().split()))\nif (n == 2):\n\tif (d==1 and h == 1):\n\t\tprint('1 2')\n\telse:\n\t\tprint('-1')\nelse:\n\tif h<(d+1)//2 or d<2:\n\t\tprint('-1')\n\telse:\n\t\tif d == h == n-1:\n\t\t\tfor i in range(1,n):\n\t\t\t\tprint(i, i+1)\n\t\telse:\n\t\t\tfor i in range(1, h+1):\n\t\t\t\tprint(i, i+1)\n\t\t\tif d==h:\n\t\t\t\tfor i in range(h+2,n+1):\n\t\t\t\t\tprint(2,i)\n\t\t\telse:\n\t\t\t\tprint(1,h+2)\n\t\t\t\tfor i in range(h+2, d+1):\n\t\t\t\t\tprint(i, i+1)\n\t\t\t\tfor i in range(d+2,n+1):\n\t\t\t\t\tprint(1, i)\n\t\t\t\n", "import math\nn, d, h = list(map(int, input().split()))\nif (h < math.ceil(d / 2)) or ((n > 2) and (d < 2)):\n\tprint(-1)\nelse:\n\tfor i in range(h):\n\t\tprint(i + 1, i + 2)\n\tif (d - h > 0):\n\t\tprint(1, h + 2)\n\tfor i in range(h + 2, d + 1):\n\t\tprint(i, i + 1)\n\t#alr = d + 1\n\tadd_to = 1\n\tif (d == h):\n\t\tadd_to = 2\n\tfor i in range(d + 2, n + 1):\n\t\tprint(add_to, i)\n", "n, d, h = list(map(int, input().split()))\n\nif (d-h > h) or (h == 1 and n >= 4 and d != 2) or (h == 1 and n == 3 and d == 1):\n    print(-1)\n    return\n\nc = 1\nfor i in range(h):\n    print(c, c+1)\n    c += 1\n\nif (c < n and d-h != 0):\n    print(1, c+1)\n    c += 1\n\nfor i in range(d-h-1):\n    print(c, c+1)\n    c += 1\n\nwhile (c < n):\n    if h == 1 and (d-h != 0):\n        print(1, c+1)\n    else:\n        print(2, c+1)\n    c += 1\n", "n, d, h = map(int, input().split())\n\nif n == 2 and d == h == 1:\n    print(1, 2)\n    return\n        \nif d == h == 1:\n    print(-1)\n    return\n\nif d > 2 * h:\n    print(-1)\n    return\n\nflow = 0\nedges = []\nfor i in range(h):\n    edges.append((i + 1, i + 2))\n\nlast = 1\nfor i in range(d - h):\n    edges.append((last, len(edges) + 2))\n    last = edges[-1][1]\nif d == h:\n    m = 2\nelse:\n    m = 1\ni = d + 2\nwhile len(edges) < n - 1:\n    edges.append((m, i))\n    i += 1\nfor edge in edges:\n    print(*edge)", "3\n\nclass StdReader:\n\tdef read_int(self):\n\t\treturn int(self.read_string())\n\n\tdef read_ints(self, sep=None):\n\t\treturn [int(i) for i in self.read_strings(sep)]\n\n\tdef read_float(self):\n\t\treturn float(self.read_string())\n\n\tdef read_floats(self, sep=None):\n\t\treturn [float(i) for i in self.read_strings(sep)]\n\n\tdef read_string(self):\n\t\treturn input()\n\n\tdef read_strings(self, sep=None):\n\t\treturn self.read_string().split(sep)\n\nreader = StdReader()\n\n\ndef add_e(adj, elist, i, j):\n\tadj[i].append(j)\n\tadj[j].append(i)\n\telist.append((i, j))\n\n\ndef main():\n\tn, td, th = reader.read_ints()\n\n\tif td > 2 * th or (n > 2 and td == 1):\n\t\tprint(-1)\n\t\treturn\n\n\tadj = [list()]*n\n\telist = []\n\td = h = 0\n\n\t# depth_v = None\n\tlast_v = 0\n\tmother_v = 0\n\tif td == th:\n\t\tmother_v = 1\n\n\tdst = [0]*n\n\tdst[0] = th\n\n\tfor i in range(1, n):\n\t\tif h < th:\n\t\t\tadd_e(adj, elist, last_v, i)\n\t\t\tlast_v = i\n\t\t\th += 1\n\t\t\td += 1\n\t\t\tdst[i] = th - h\n\t\t\tif h == th:\n\t\t\t\tlast_v = 0\n\t\telif d < td:\n\t\t\tadd_e(adj, elist, last_v, i)\n\t\t\tlast_v = i\n\t\t\td += 1\n\t\t\tdst[i] = d\n\t\t\t# if d == td:\n\t\t\t# \tlast_v = 0\n\t\telse:\n\t\t\tadd_e(adj, elist, mother_v, i)\n\n\tfor e in elist:\n\t\tprint(e[0] + 1, e[1] + 1)\n\n\ndef __starting_point():\n\tmain()\n\n__starting_point()", "\nn, d, h = list(map(int, input().split()))\n\nif d - h > h or (d == 1 and n > 2):\n    print('-1')\nelse:\n    for ver in range(2, h + 2):\n        print('{} {}'.format(ver - 1, ver))\n\n    prev = 1\n    for ver in range(h + 2, h + 2 + (d - h)):\n        print('{} {}'.format(prev, ver))\n        prev = ver\n\n    start = 1\n    prev = max(prev, h + 1)\n    if h == d:\n        start = 2\n    for ver in range(prev + 1, prev + 1 + (n - prev)):\n        print('{} {}'.format(start, ver))\n", "str1 = input().split()\nn = int(str1[0])\nd = int(str1[1])\nh = int(str1[2])\n\nif n < h + 1:\n    print(-1)\n    return\nelif n < d + 1:\n    print(-1)\n    return\nelif d > h * 2:\n    print(-1)\n    return\nelif d == h == 1 and n > 2:\n    print(-1)\n    return\n\nfor i in range(1, h + 1):\n    print(i, i + 1)\ncount = n - h - 1\nk = 0\nleft = d - h\ndist = h - 1\nif count > 0:\n    if d - h > 0:\n        count -= 1\n        print(1, h + 2 + left * k)\n        if count == 0:\n            return\n        for i in range(left - 1):\n            print(i + h + 2 + left * k, i + h + 3 + left * k)\n            count -= 1\n            if count == 0:\n                return\n        k += 1\nwhile count > 0:\n    count -= 1\n    if h > 1:\n        print(2, n - count)\n    else:\n        print(1, n - count)\n    \n    \n\n            \n", "n,d,h = list(map(int,input().split()))\nnow = 2\nif d == 1 and h == 1:\n    if n == 2: print(1, 2)\n    else: print(-1)\n    return\nif h > d or h < d//2+d%2 or n <= d:\n    print(-1)\n    return\nif h == d:\n    for i in range(1,h):\n        print(now-1, now)\n        now += 1\n    x = now-1\n    for i in range(n-now+1):\n        print(x, now)\n        now += 1\n    return\nfor i in range(h):\n    print(now, now-1)\n    now += 1\nfor i in range(d-h):\n    if i == 0:print(1, now)\n    else: print(now,now-1)\n    now += 1\nfor i in range(n - now + 1):\n    print(1, now)\n    now += 1\n", "'__author__'=='deepak Singh Mehta) '\n \n\n\n\ndef __starting_point():\n    n,d,h = list(map(int,input().split()))\n    if d>(2*h) or (d==1 and n != 2):\n        print(-1)\n    else:\n        for i in range(1,h+1):\n            print(i,i+1)\n        x = 1\n        i = 1\n        while i<=d-h:\n            y = h + 1 + i\n            print(x,y)\n            x = y\n            i += 1\n\n        for i in range(d+2,n+1):\n            print(i,(2 if d==h else 1))\n\n__starting_point()", "n, d, h = list(map(int, input().split()))\nif d == h == 1 and n == 2 or (d == h != 1 or d != h) and 2*h >= d:\n    node = 1\n    while node < d + 1:\n        if node == h + 1:\n            print(\"{0} {1}\".format(1, node + 1))\n        else:\n            print(\"{0} {1}\".format(node, node + 1))\n        node += 1\n    node += 1\n    node1 = 2 if d == h else 1\n    while node <= n:\n        print(\"{0} {1}\".format(node1, node))\n        node += 1\nelse:\n    print(-1)\n", "def main():\n    n, d, h = list(map(int, input().split()))\n    if h * 2 < d or d < 2 < n or h > d:\n        print(-1)\n        return\n    res, f = [], ' '.join\n    for e in (2, h + 2), (h + 2, d + 2):\n        a = \"1\"\n        for b in map(str, list(range(*e))):\n            res.append((f((a, b))))\n            a = b\n    a = \"1 %d\" if h < d else \"2 %d\"\n    res.extend(a % i for i in range(d + 2, n + 1))\n    print('\\n'.join(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, d, h = map(int, input().split())\nif h < ((d + 1) >> 1) or (n > 2 and d == 1):\n    print(-1)\nelse:\n    k = 2 if h != 1 else 1\n    print(h + 1, k)\n    for i in range(2, h):\n        print(i, i + 1)\n    if h != 1: print(h, 1)\n    if h < d: print(1, h + 2)\n    for i in range(h + 2, d + 1):\n        print(i, i + 1)\n    for i in range(d + 2, n + 1):\n        print(i, k)", "3\n\ndef read_ints():\n    return list(map(int, input().split()))\n\ndef make_path(start, length):\n    nonlocal cur\n    \n    print(str(start)+\" \"+str(cur))\n    if cur>n: return\n    \n    if length>1:\n        for i in range(length-1):            \n            if cur+1>n: \n                cur+=1\n                return\n            print(str(cur)+\" \"+str(cur+1))\n            cur+=1\n        cur+=1\n    else:\n        cur+=1\n\ncur = 2\n\n(n,d,h)=read_ints()\n\nif h >= n or d >= n or d < h or d-h>h or d==1 and n>2:\n    print(-1)\n    return\n\nmake_path(1,h)\n\nbranch_length = d - h \n\nif branch_length == 0:\n    branch_start = 2\nelse:\n    branch_start = 1\n        \nwhile cur<=n:\n    make_path(branch_start,branch_length)\n        \n", "n,d,h=map(int,input().split())\nif d>h*2 or (n>2 and d==1 and h==1): print(-1)\nelse: \n    ans=[]\n    for i in range(h): ans+=[' '.join((str(i+1),str(i+2)))]\n    t=1\n    for i in range(h+2,d+2): ans+=[' '.join((str(t),str(i)))]; t=i\n    for i in range(d+2,n+1): ans+=[' '.join((str(h),str(i)))]; t=i\n    print('\\n'.join(ans))", "# Codeforces 639B #\n\nn, d, h = list(map(int, input().split()))\n\nif h < ((d + 1) >> 1) or (n > 2 and d == 1):\n    \n    print(-1)\n    \nelse:\n    k = 2 if h != 1 else 1\n    print(h + 1, k)\n    for i in range(2, h):\n        print(i, i + 1)\n    if h != 1: print(h, 1)\n    if h < d: print(1, h + 2)\n    for i in range(h + 2, d + 1):\n        print(i, i + 1)\n    for i in range(d + 2, n + 1):\n        print(i, k)\n", "__author__ = 'Utena'\nn,d,h=map(int,input().split())\nans=[]\nif d>2*h:\n    print(-1)\n    return\nelif h==d:\n    if h==1 and n>=3:\n        print(-1)\n        return\n    for i in range(2,h+2):\n        ans.append([i-1,i])\n    for i in range(h+2,n+1):\n        ans.append([2,i])\nelse:\n    for i in range(2,h+2):\n        ans.append([i-1,i])\n    ans.append([1,h+2])\n    for i in range(h+3,d+2):\n        ans.append([i-1,i])\n    for i in range(d+2,n+1):\n        ans.append([1,i])\nfor i in range(n-1):\n    print(' '.join(map(str,ans[i])))", "n,d,h=list(map(int,input().split()))\nif d>2*h or d<h or (d==1 and d==h and n>2) :\n    print(-1)\nelif d!=h:\n    for i in range(1,h+1):\n        print(i,i+1)\n    t=i+2\n    if t<=n:    \n        print(1,t)\n    for i in range(t,t+d-h-1):\n        print(i,i+1)\n    for i in range(t+d-h,n+1):\n        print(1,i)\nelse:\n    for i in range(1,h+1):\n        print(i,i+1)\n    t=i+2\n    for i in range(t+d-h,n+1):\n        print(2,i)"]