["import math\n\ndef get_cnt(res):\n    n = 1 + math.floor(math.sqrt(2 * res))\n    if n * (n-1) / 2 == res:\n        return n\n    else:\n        return -1\n        \ndef calc():\n    cnt = list(map(int, input().split()))\n    if cnt == [0,0,0,0]:\n        return '0'\n\n    a = get_cnt(cnt[0])\n    b = get_cnt(cnt[3])\n\n    if cnt == [0,0,0,cnt[3]]:\n        a = 0\n    if cnt == [cnt[0],0,0,0]:\n        b = 0\n\n    if a == -1 or b == -1 or (a * b) != (cnt[1] + cnt[2]):\n        return \"Impossible\"\n\n    ans = ['0'] * (a + b)\n    i = 0\n    while b > 0:\n        while cnt[1] >= b:\n            i = i + 1\n            cnt[1] -= b\n        b -= 1\n        ans[i] = '1'\n        i += 1\n    return ''.join(ans)\n            \n\nprint(calc())\n", "def main():\n    from itertools import product\n    def f(a):\n        x = int((a * 2. + .25) ** .5 + .51)\n        if x * (x - 1) != a * 2:\n            raise ValueError\n        return x\n\n    a00, a01, a10, a11 = list(map(int, input().split()))\n    try:\n        for b, w in product([f(a00)] if a00 else [1, 0], [f(a11)] if a11 else [1, 0]):\n            if b * w == a01 + a10:\n                break\n        else:\n            raise ValueError\n    except ValueError:\n        print(\"Impossible\")\n    else:\n        if w:\n            a01, rest = divmod(a01, w)\n            if rest:\n                l = ['0' * a01, '1' * (w - rest), '0', '1' * rest, '0' * (b - a01 - 1)]\n            else:\n                l = ['0' * a01, '1' * w, '0' * (b - a01)]\n        else:\n            l = ['0' * b]\n        print(''.join(l))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    from itertools import product\n    def f(a):\n        x = int((a * 2. + .25) ** .5 + .51)\n        if x * (x - 1) != a * 2:\n            raise ValueError\n        return (x,) if a else (1, 0)\n\n    a00, a01, a10, a11 = list(map(int, input().split()))\n    try:\n        for b, w in product(f(a00), f(a11)):\n            if b * w == a01 + a10:\n                break\n        else:\n            raise ValueError\n    except ValueError:\n        print(\"Impossible\")\n    else:\n        a01, rest = divmod(a01, w) if w else (b, 0)\n        if rest:\n            l = ['0' * a01, '1' * (w - rest), '0', '1' * rest, '0' * (b - a01 - 1)]\n        else:\n            l = ['0' * a01, '1' * w, '0' * (b - a01)]\n        print(''.join(l))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def build(a0, a1, a01, a10, arr):\n    #print(a0, a1, a01, a10)\n    while True:\n        if a0 + a1 == 0 and a01 + a10 > 0:\n            return False, ''\n    \n        if a01 < a1 and a10 < a0:\n            return False, ''\n    \n        if a01 + a10 == 0:\n            if a0 > 0 and a1 > 0:\n                return False, ''\n        \n            while a0 > 0:\n                arr.append(0)\n                a0 -=1\n        \n            while a1 > 0:\n                arr.append(1)\n                a1 -=1\n            \n            return True, arr\n        \n        if a01 >= a1:\n            arr.append(0)\n            a0 -= 1\n            a01-= a1\n        else:\n            arr.append(1)\n            a1 -= 1\n            a10-= a0\n            \nval = [0] * 50000\nfor i in range(1, 50000):\n    val[i] = i*(i-1) // 2\n\nd   = {x: i for i, x in enumerate(val)}\n\na00, a01, a10, a11 = map(int, input().split())\n\ndef solve(a00, a01, a10, a11):\n    a0_arr = []\n    a1_arr = []\n\n    ans     = None \n    flag    = False\n    \n    if a00 == 0:\n        a0_arr = [0, 1]\n    else:\n        if a00 not in d:\n            return flag, ans\n        \n        a0_arr.append(d[a00])\n    \n    if a11 == 0:\n        a1_arr = [0, 1]\n    else:\n        if a11 not in d:\n            return flag, ans\n        \n        a1_arr.append(d[a11])\n    \n    for a0 in a0_arr:\n        for a1 in a1_arr:\n            arr = []\n            flg, arr = build(a0, a1, a01, a10, arr)\n        \n            if flg == True:\n                flag=flg\n                ans = arr\n                break\n                \n    return flag, ans \n\nflag, ans = solve(a00, a01, a10, a11)\nif flag == False:\n    print('Impossible')\nelse:\n    print(''.join([str(x) for x in ans]))", "a00, a01, a10, a11 = list(map(int, input().split()))\n \nif sum([a00, a01, a10, a11]) == 0:\n    print(0)\n    return\n \nz, j = 0, 0\nif a01 != 0 or a10 != 0:\n    z = j = 1\n \nwhile z * (z - 1) // 2 < a00:\n    z += 1\nwhile j * (j - 1) // 2 < a11:\n    j += 1\n \nif any([z * (z - 1) // 2 != a00, \n        j * (j - 1) // 2 != a11,\n        z * j != a10 + a01]):\n    print('Impossible')\n    return\n \nn = z + j\nfor i in range(n):\n    if z > 0 and a01 >= j:\n        print('0', end='')\n        a01 -= j\n        z -= 1\n    else:\n        print('1', end='')\n        j -= 1"]