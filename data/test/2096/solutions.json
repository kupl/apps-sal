["n = int(input())\na = list(map(int, input().split()))\ng = [[] for i in range(100)]\nfor i in range(2 * n):\n    g[a[i]].append(i)\nx = [0, 0]\ncur = 1\nmus = []\nans = [0] * 2 * n\nfor i in range(10, 100):\n    if len(g[i]) == 1:\n        ans[g[i][0]] = cur\n        x[cur - 1] += 1\n        cur = 3 - cur\n    if len(g[i]) >= 2:\n        ans[g[i][0]] = 1\n        ans[g[i][1]] = 2\n        x[0] += 1\n        x[1] += 1\n        for j in range(2, len(g[i])):\n            mus.append(g[i][j])\nfor i in range(len(mus)):\n    ans[mus[i]] = 2 - (i % 2)\nprint(x[0] * x[1])\nprint(*ans)\n        \n", "n = int(input())\na = list(map(int, input().split()))\nproc = sorted([ (a.count(i), i) for i in range(10, 100) if a.count(i) > 0 ])\nleft, right = [], []\nfor cnt, val in proc:\n    half = cnt // 2\n    left.extend([val] * half)\n    right.extend([val] * half)\n    if cnt % 2 == 1:\n        if len(left) < len(right):\n            left.append(val)\n        else:\n            right.append(val)\nprint(len(set(left)) * len(set(right)))\ncnt = [0 for i in range(100)]\nfor i in range(2 * n):\n    if left.count(a[i]) == cnt[a[i]]:\n        print('2', end = ' ')\n    else:\n        print('1', end = ' ')\n        cnt[a[i]] += 1\n", "N = int(input())\nNums = list(map(int, input().split()))\nGood = [1] * (N * 2)\nAmounts = [0] * 100\nMono, Duo = 0, 0\nfor Num in Nums:\n    if Amounts[Num] == 0:\n        Mono += 1\n    elif Amounts[Num] == 1:\n        Duo += 1\n        Mono -= 1\n    Amounts[Num] += 1\nFlag = Mono % 2\nDuo_Flag = False\nCounts = [0] * 100\nfor i in range(2 * N):\n    Num = Nums[i]\n    if Amounts[Num] == 1:\n        if Flag:\n            Good[i] = 1\n        else:\n            Good[i] = 2\n        Flag = not Flag\n    else:\n        if Counts[Num] == 0:\n            Good[i] = 1\n        elif Counts[Num] == 1:\n            Good[i] = 2\n        else:\n            if Duo_Flag:\n                Good[i] = 1\n            else:\n                Good[i] = 2\n            Duo_Flag = not Duo_Flag\n        Counts[Num] += 1\nprint((Duo + (Mono // 2)) * (Duo + ((Mono + 1) // 2)))\nprint(*Good)\n", "from math import*\nfrom random import*\n\nn = int(input()) * 2\nA = list(map(int, input().split()))\namount = [0] * 101\n\nB = []\nfor i in range(n):\n    if amount[A[i]] < 2:\n        amount[A[i]] += 1\n        B += [(A[i], i)]\nB.sort()\nx, y = [], []\nfor i in range(len(B)):\n    if(i % 2 == 0):\n        x.append(B[i][1])\n    else:\n        y.append(B[i][1])\nlolka = 0\naaa = 0\n# print(x)\n# print(y)\nprint(len(x) * len(y))\nfor i in range(n):\n    if i in x:\n        lolka += 1\n        aaa += 1\n        print(1, end = ' ')\n    elif i in y:\n        print(2, end = ' ')\n    else:\n        if len(x) - lolka + aaa < n // 2:\n            print(1, end = ' ')\n            aaa += 1\n        else:\n            print(2, end = ' ')\nprint()\n\n# B, C = [], []\n# for i in range(n):\n\n\n# S = list(set(A))\n# where = [0] * 101\n# am1, am2 = 0, 0\n# for i in range(len(S)):\n#     if(i % 2 == 0):\n#         where[S[i]] = 1\n#         am1 += 1\n#     else:\n#         where[S[i]] = 2\n#         am2 += 1\n# used = [0] * 201\n# for i in range(n):\n#     if not used[A[i]]:\n#         print(where[A[i]])\n#         used[A[i]] = True\n#     else:\n#         print(3 - where[A[i]])", "n = int(input())\na = list(map(int, input().split()))\nR = range(100)\nc = [[] for _ in [0]*100]\nfor i in range(n*2):\n\tc[a[i]].append(i)\nd = [0]*200\nheap = 1\nz = [0, 0, 0]\nfor i in R:\n\tif len(c[i]) == 1:\n\t\tz[heap]+=1\n\t\td[c[i][0]] = heap\n\t\theap = 3 - heap;\nfor i in R:\n\tif len(c[i]) > 1:\n\t\tz[1]+=1\n\t\tz[2]+=1\n\t\twhile len(c[i]):\n\t\t\td[c[i].pop()] = heap\n\t\t\theap = 3 - heap\n\nprint(z[1]*z[2])\nprint(' '.join(map(str, d[:n*2])))", "n = int(input())\na = list(map(int, input().split()))\nR = range(100)\nc = [[] for i in range(100)]\nfor i in range(n*2):\n\tc[a[i]].append(i)\nd = [0]*200\nheap = 1\nz = [0, 0, 0]\nfor i in R:\n\tif len(c[i]) == 1:\n\t\tz[heap]+=1\n\t\td[c[i][0]] = heap\n\t\theap = 3 - heap;\nfor i in R:\n\tif len(c[i]) > 1:\n\t\tz[1]+=1\n\t\tz[2]+=1\n\t\twhile len(c[i]):\n\t\t\td[c[i].pop()] = heap\n\t\t\theap = 3 - heap\n\nprint(z[1]*z[2])\nprint(' '.join(map(str, d[:n*2])))", "n, t = 2 * int(input()), map(int, input().split())\nd = [[] for i in range(100)]\nfor i, j in enumerate(t):\n    d[j].append(i)\ny, x = [], False\np, q = [], ['1'] * n\nfor i in d[10: 100]:\n    if i:\n        if len(i) == 1:\n            if x: y.append(i[0])\n            x = not x\n        else:\n            y.append(i[0])\n            p += i[2: ]\nk, l = len(p), len(y)\nprint(l * (n - k - l))\nfor i in y:\n    q[i] = '2'\nfor i in (p[k // 2: ] if x else p[: k // 2]):\n    q[i] = '2'\nprint(' '.join(q))", "#!/usr/bin/env python3\nn = int(input())\na = list(map(int,input().split()))\nc = [0] * 100\nfor i in a:\n    c[i] += 1\nx = [0] * 100\ny = [0] * 100\nj = 0\nfor i in range(100):\n    if c[i] == 1:\n        [x, y][j][i] += 1\n        j = 1 - j\nfor i in range(100):\n    if c[i] != 1:\n        x[i] += c[i] // 2\n        y[i] += c[i] // 2\n        if c[i] % 2 == 1:\n            [x, y][j][i] += 1\n            j = 1 - j\nxk = len(list([it for it in x if it]))\nyk = len(list([it for it in y if it]))\nprint(xk * yk)\nzs = [None] * (2*n)\nfor i in range(2*n):\n    if x[a[i]] > 0:\n        x[a[i]] -= 1\n        zs[i] = 1\n    else:\n        assert y[a[i]] > 0\n        y[a[i]] -= 1\n        zs[i] = 2\nprint(*zs)\n", "def s():\n\tinput()\n\tl = [[]for _ in range(100)]\n\ta = list(map(int,input().split()))\n\tfor i,v in enumerate(a):\n\t\tl[v].append(i)\n\tc = 0\n\tcc = 0\n\tfs = [0,0]\n\tfor i in l:\n\t\tif len(i) == 0:\n\t\t\tcontinue\n\t\tif len(i) == 1:\n\t\t\ta[i[0]] = c+1\n\t\t\tfs[c]+=1\n\t\t\tc = 1 - c\n\t\t\tcontinue\n\t\tfs[c] += 1\n\t\tfs[c-1] += 1\n\t\tfor e in i[:len(i)//2]:\n\t\t\ta[e] = 1 + cc\n\t\tfor e in i[len(i)//2:]:\n\t\t\ta[e] = 2 - cc\n\t\tif len(i) % 2 == 1:\n\t\t\tcc = 1 - cc\n\tprint(fs[0]*fs[1])\n\tprint(*a)\ns()", "from collections import defaultdict as defdict\n\nn = int(input())\n\nd = defdict(int)\na = list(map(int, input().split()))\n\nfor i in a:\n    d[i] += 1\n\nb = set(i for i in a if d[i] > 1)\nc = [i for i in a if d[i] == 1]\n\n##print('b =', b)\n\nmx = len(b) + (len(c) // 2)\n\nd = defdict(int)\nansw = [None] * (n * 2)\n\ncnt_diff_1 = 0\ncnt_diff_2 = 0\n\nfor i, x in enumerate(a):\n    if cnt_diff_1 < mx:\n        if x in b:\n            if d[x] == 0:\n                answ[i] = '1'\n                d[x] += 1\n                cnt_diff_1 += 1\n\nfor i, x in enumerate(a):\n    if cnt_diff_1 < mx:\n        if x not in b:\n            answ[i] = '1'\n            cnt_diff_1 += 1\n\n##print(d)\ncnt1 = cnt_diff_1\ncnt2 = 0\n\n##print(cnt_diff_1)\n##print(answ)\n##print(mx)\n\nfor i, x in enumerate(a):\n    if answ[i] == '1': continue\n    if x in b:\n        if d[x] == 0:\n            answ[i] = '2'\n            d[x] = 2\n            cnt_diff_2 += 1\n            cnt2 += 1\n        elif d[x] == 1:\n            answ[i] = '2'\n            d[x] += 1\n            cnt_diff_2 += 1\n            cnt2 += 1\n        else:\n            if cnt1 < n:\n                answ[i] = '1'\n                cnt1 += 1\n            else:\n                answ[i] = '2'\n                cnt2 += 1\n    else:\n        if cnt2 < n:\n            answ[i] = '2'\n            cnt2 += 1\n            cnt_diff_2 += 1\n        else:\n            answ[i] = '1'\n            cnt1 += 1\n##            print('cnt2 =', cnt2)\n##            print(cnt_diff_2)\n##            print('cnt1 =', cnt1)\n            cnt_diff_1 += 1\n\n##print(cnt_diff_1, cnt_diff_2)\n##print()\n\n##cnt1 = len(set(a[i] for i in range(2 * n) if answ[i] == '1'))\n##cnt2 = len(set(a[i] for i in range(2 * n) if answ[i] == '2'))\n##print(cnt1, cnt2)\nprint(cnt_diff_1 * cnt_diff_2)\nprint(' '.join(answ))\n", "n = int(input())\na = list(map(int, input().split()))\nR = range(100)\nc = [[] for _ in [0]*100]\nfor i in range(n*2):\n\tc[a[i]].append(i)\nd = [0]*200\nheap = 1\nz = [0, 0, 0]\nfor i in R:\n\tif len(c[i]) == 1:\n\t\tz[heap]+=1\n\t\td[c[i][0]] = heap\n\t\theap = 3 - heap;\nfor i in R:\n\tif len(c[i]) > 1:\n\t\tz[1]+=1\n\t\tz[2]+=1\n\t\twhile len(c[i]):\n\t\t\td[c[i].pop()] = heap\n\t\t\theap = 3 - heap\n\nprint(z[1]*z[2])\nprint(' '.join(map(str, d[:n*2])))", "n = int(input())\na = list(map(int, input().split()))\nR = list(range(100))\nc = [[] for _ in [0]*100]\nfor i in range(n*2):\n\tc[a[i]].append(i)\nd = [0]*200\nheap = 1\nz = [0, 0, 0]\nfor i in R:\n\tif len(c[i]) == 1:\n\t\tz[heap]+=1\n\t\td[c[i][0]] = heap\n\t\theap = 3 - heap;\nfor i in R:\n\tif len(c[i]) > 1:\n\t\tz[1]+=1\n\t\tz[2]+=1\n\t\twhile len(c[i]):\n\t\t\td[c[i].pop()] = heap\n\t\t\theap = 3 - heap\n\nprint(z[1]*z[2])\nprint(' '.join(map(str, d[:n*2])))\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\narr = list(map(int, input().split()))\nadj = [[] for i in range(100)]\nfor i in range(2*n):\n\tadj[arr[i]].append(i)\nres = [0] * (2 * n)\nmul, curr = [], 1\nx = [0, 0]\nfor i in range(10, 100):\n\tif len(adj[i]) == 1 :\n\t\tres[adj[i][0]] = curr\n\t\tx[curr-1] += 1\n\t\tcurr = 3 - curr\n\tif len(adj[i]) > 1: \n\t\tres[adj[i][0]] = 1\n\t\tres[adj[i][1]] = 2\n\t\tx[0] += 1\n\t\tx[1] += 1\n\t\tfor j in range(2, len(adj[i])):\n\t\t\tmul.append(adj[i][j])\nfor i in range(len(mul)):\n\tres[mul[i]] = curr\n\tcurr = 3 - curr\nprint(x[0] * x[1])\nprint(*res)\n", "from collections import *\nn = int(input())\na = list(map(int,input().split()))\nc = Counter(a)\nfor i in range(2*n):\n\ta[i] = [a[i],i]\na.sort()\nans = [0 for i in range(2*n)]\nda, db = {}, {}\nf = 0\nfor i in range(2*n):\n\tif(c[a[i][0]] == 1): continue\n\tans[a[i][1]] = f + 1\n\tif(f&1):\n\t\tda[a[i][0]] = 1\n\telse:\n\t\tdb[a[i][0]] = 1\n\tf ^= 1\nfor i in range(2*n):\n\tif(ans[a[i][1]] != 0): continue\n\tans[a[i][1]] = f+1\n\tif(f&1):\n\t\tda[a[i][0]] = 1\n\telse:\n\t\tdb[a[i][0]] = 1\n\tf ^= 1\nprint(len(da)*len(db))\nprint(*ans)\n", "n=int(input())\narr=list(map(int,input().split()))\ng=[[] for i in range(100)]\nfor i in range(2*n):\n    g[arr[i]].append(i)\nx=0\ny=0\ncurr=1\nr=[]\nfor i in range(10,100):\n    if len(g[i])==1:\n        arr[g[i][0]]=curr\n        if curr==1:\n            x+=1\n        else:\n            y+=1\n        curr=3-curr\n    if len(g[i])>1:\n        arr[g[i][0]]=1\n        arr[g[i][1]]=2\n        x+=1\n        y+=1\n        for j in range(2,len(g[i])):\n            r.append(g[i][j])\nfor i in range(len(r)):\n    arr[r[i]]=2-(i%2)\nprint(x*y)\nprint(*arr)", "n=int(input())\narr=list(map(int,input().split()))\ng=[[] for i in range(100)]\nfor i in range(2*n):\n    g[arr[i]].append(i)\nx=0\ny=0\ncurr=1\nflip=2\nfor i in range(10,100):\n    if len(g[i])==1:\n        arr[g[i][0]]=curr\n        if curr==1:\n            x+=1\n        else:\n            y+=1\n        curr=3-curr\n    if len(g[i])>1:\n        arr[g[i][0]]=1\n        arr[g[i][1]]=2\n        x+=1\n        y+=1\n        for j in range(2,len(g[i])):\n            arr[g[i][j]]=flip\n            flip=3-flip\nprint(x*y)\nprint(*arr)\n", "from sys import stdin\n\nn = int(stdin.readline())\na = [int(x) for x in stdin.readline().split()]\na = sorted([(a[x], x) for x in range(n*2)])\n\ngroup = {}\n\nfor x,ind in a:\n    if x in group:\n        group[x].append(ind)\n    else:\n        group[x] = [ind]\n\ng2 = []\n\nfor x in group:\n    g2.append([len(group[x]), group[x]])\n\ng2.sort()\n\nleft = 0\nright = 0\n\nboard = [0 for x in range(n*2)]\n\nind = 0\nfor x,l in g2:\n    if x == 1:\n        ind += 1\n        if left <= right:\n            left += 1\n            board[l[0]] = '1'\n        else:\n            right += 1\n            board[l[0]] = '2'\n    else:\n        break\n\nif right > left:\n    turn = True\nelse:\n    turn = False\n\nfor x,l in g2[ind:]:\n    left += 1\n    right += 1\n\n    if x%2 == 1:\n        last = l.pop()\n        if turn:\n            board[last] = '1'\n        else:\n            board[last] = '2'\n        turn = not turn\n    for n in l[::2]:\n        board[n] = '1'\n    for n in l[1::2]:\n        board[n] = '2'\nprint(left*right)\nprint(' '.join(board))\n        \n"]