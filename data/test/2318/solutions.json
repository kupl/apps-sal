["#!/usr/bin/env python\nimport sys\ninput = sys.stdin.readline\n\n\ndef cnt(s):\n    l = [[s[0], 1]]\n    for c in s[1:]:\n        if l[-1][0] == c:\n            l[-1][1] += 1\n        else:\n            l.append([c, 1])\n    return l\n\n\ndef cmp(sc, tc):\n    if len(tc) != len(sc):\n        # print(f'sc = {sc}, tc = {tc}')\n        return False\n    for i in range(len(tc)):\n        if tc[i][0] != sc[i][0] or tc[i][1] < sc[i][1]:\n            # print(f'sc = {sc}, tc = {tc}, i = {i}')\n            return False\n    return True\n\n\nfor _ in range(int(input())):\n    s, t = input().strip(), input().strip()\n    sc, tc = cnt(s), cnt(t)\n    print('YES' if cmp(sc, tc) else 'NO')\n\n", "n = int(input())\n\nfor _ in range(n):\n\ts1 = input()\n\ts2 = input()\n\n\td1 = []\n\td2 = []\n\n\tactual = s1[0]\n\tcont = 1\n\n\tfor c in s1[1:]:\n\t\tif c != actual:\n\t\t\td1.append((actual, cont))\n\t\t\tactual = c\n\t\t\tcont = 1\n\t\telse:\n\t\t\tcont += 1\n\td1.append((actual, cont))\n\n\tactual = s2[0]\n\tcont = 1\n\n\tfor c in s2[1:]:\n\t\tif c != actual:\n\t\t\td2.append((actual, cont))\n\t\t\tactual = c\n\t\t\tcont = 1\n\t\telse:\n\t\t\tcont += 1\n\td2.append((actual, cont))\n\n\tif len(d1) != len(d2):\n\t\tprint(\"NO\")\n\telse:\n\t\tfor a, b in zip(d1, d2):\n\t\t\tif a[0] != b[0] or a[1] > b[1]:\n\t\t\t\tprint(\"NO\")\n\t\t\t\tbreak\n\t\telse:\n\t\t\tprint(\"YES\")\n", "for i in range(int(input())):\n    s = input()\n    t = input()\n    j = 0\n    i = 0\n    if len(t) < len(s):\n        print('NO')\n        continue\n    while i < len(s):\n        f = True\n        cu = s[i]\n        cou = 1\n        i += 1\n        while i < len(s) and s[i] == cu:\n            cou += 1\n            i += 1\n        while cou > 0:\n            if j >= len(t) or t[j] != cu:\n                f = False\n                break\n            else:\n                cou -= 1\n                j += 1\n        if not f:\n            break\n        while j < len(t) and t[j] == cu:\n            j += 1\n    if f and j == len(t):\n        print('YES')\n    else:\n        print('NO')\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\nfor i in range(n):\n    A=input().strip()\n    B=input().strip()\n\n    AA=[]\n    AA.append([A[0],1])\n    for i in range(1,len(A)):\n        if A[i]==A[i-1]:\n            AA[-1][1]+=1\n        else:\n            AA.append([A[i],1])\n\n    BB=[]\n    BB.append([B[0],1])\n    for i in range(1,len(B)):\n        if B[i]==B[i-1]:\n            BB[-1][1]+=1\n        else:\n            BB.append([B[i],1])\n\n    #print(AA,BB)\n\n    if len(AA)!=len(BB):\n        print(\"NO\")\n    else:\n        for i in range(len(AA)):\n            if AA[i][0]==BB[i][0] and AA[i][1]<=BB[i][1]:\n                continue\n            else:\n                print(\"NO\")\n                break\n\n        else:\n            print(\"YES\")\n        \n", "#print('Hare Krishna')\ndef I():\n    return int(input())\ndef IL():\n    return [int(i) for i in input().split()]\ndef IS():\n    return input()\ndef IM():\n    return map(int,input().split())\nt=I()\nfor i in range(t):\n    s1=IS()\n    s2=IS() \n    f=1 \n    if len(s1)>len(s2):\n        print('NO')\n        continue \n    if len(s1)==len(s2):\n        print('YES' if s1==s2 else 'NO')\n        continue \n    grps1=[] \n    grps2=[]\n    i=0 \n    n=len(s1)\n    m=len(s2)\n    while i<n:\n        curr=s1[i]\n        c=0 \n        while i<n and s1[i]==curr:\n            c+=1 \n            i+=1 \n        grps1.append([curr,c])\n    i=0 \n    while i<m:\n        curr=s2[i]\n        c=0 \n        while i<m and s2[i]==curr:\n            c+=1 \n            i+=1 \n        grps2.append([curr,c])\n    #print(grps1,grps2)\n    if len(grps1)!=len(grps2):\n        print('NO')\n        continue \n    f=1 \n    for i in range(len(grps1)):\n        if grps1[i][0]!=grps2[i][0] or grps1[i][1]>grps2[i][1]:\n            f=0 \n    print('YES' if f else 'NO')", "def getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\n\ndef solve():\n    first = input()\n    second = input()\n    fbuf = []\n    sbuf = []\n    fcur = \"0\"\n    scur = \"0\"\n    for c in first:\n        if fcur[-1] != c:\n            fbuf.append(fcur)\n            fcur = c\n        else:\n            fcur += c\n    fbuf.append(fcur)\n\n    for c in second:\n        if scur[-1] != c:\n            sbuf.append(scur)\n            scur = c\n        else:\n            scur += c\n    sbuf.append(scur)\n\n    # print(fbuf, sbuf)\n    if len(fbuf) != len(sbuf):\n        print(\"NO\")\n        return\n\n    for f, s in zip(fbuf, sbuf):\n        if f[0] != s[0]:\n            print(\"NO\")\n            return\n\n        if len(f) > len(s):\n            print(\"NO\")\n            return\n\n    print(\"YES\")\n    return\n\n\nn = getN()\n\nfor i in range(n):\n    solve()", "import sys\ninput = iter(sys.stdin.read().splitlines()).__next__\n\nn = int(input())\n\ndef prep(s):\n    S = []\n    lc = None\n    count = 0\n    for c in s:\n        if c != lc and count:\n            S.append((lc,count))\n            count = 0\n        count += 1\n        lc = c\n    if count:\n        S.append((lc,count))\n    return S\n\n\nfor _ in range(n):\n    t = input()\n    s = input()\n\n    T = prep(t)\n    S = prep(s)\n    if len(T) == len(S):\n        for i in range(len(T)):\n            if T[i][0] != S[i][0] or T[i][1] > S[i][1]:\n                break\n        else:\n            print('YES')\n            continue\n        print('NO')\n    else:\n        print('NO')\n", "def solve(a, b):\n    i=0\n    for j in range(len(b)):\n        if j and i < len(a) - 1 and a[i+1] == b[j]:\n            i += 1\n        elif b[j] != a[i]:\n            return False\n    return i == len(a) - 1\n\n\n\nt=int(input())\nfor _ in range(t):\n    a=input()\n    b=input()\n    print('YES' if solve(a, b) else 'NO')\n", "# alpha = \"abcdefghijklmnopqrstuvwxyz\"\n# prime = 998244353 \n# INF = 1000_000_000\n\n# from heapq import heappush, heappop\n# from collections import defaultdict\n# from math import sqrt\n# from collections import deque      \n    \nt = int(input())\n\nfor test in range(t):\n    # n = int(input())\n    # a,b,c,d = map(int, input().split())\n    s = input()\n    t = input()\n    arr_s = []\n    arr_t = []\n\n    prev = \"1\"\n    for i in s:\n        if i==prev:\n            arr_s[-1][1]+=1\n        else:\n            arr_s.append([i,1])\n            prev = i\n\n    prev = \"1\"\n    for i in t:\n        if i==prev:\n            arr_t[-1][1]+=1\n        else:\n            arr_t.append([i,1])\n            prev = i\n\n    ans = \"YES\"\n    if len(arr_s)==len(arr_t):\n        for i in range(len(arr_s)):\n            if arr_s[i][0] == arr_t[i][0] and arr_s[i][1] <= arr_t[i][1]:\n                continue\n            else:\n                ans = \"NO\"\n    else:\n        ans=\"NO\"\n    print(ans)\n", "n = int(input())\nfor k in range(n):\n    s = input()\n    t = input()\n    i = 0\n    j = 0\n    while i < len(s) and j < len(t):\n        if s[i] == t[j]:\n            if i < len(s) - 1 and s[i] != s[i + 1]:\n                while j < len(t) and s[i] == t[j]:\n                    j += 1\n                i += 1\n            elif i == len(s) - 1:\n                while j < len(t) and s[i] == t[j]:\n                    j += 1\n                i += 1\n            else:\n                i += 1\n                j += 1\n        else:\n            break\n    if i == len(s) and j == len(t):\n        print('YES')\n    else:\n        print('NO')", "import sys\ninput = sys.stdin.readline\n\ndef chk(s, t):\n    i = 0\n    j = 0\n    while True:\n        if i < len(s) and j < len(t) and s[i] == t[j]:\n            while j < len(t) - 1 and t[j+1] == t[j] and (i == len(s)-1 or s[i+1] != s[i]):\n                j += 1\n            i += 1\n            j += 1\n            # print(i, j)\n            if i == len(s) and j == len(t):\n                return \"YES\"\n        else:\n            return \"NO\"\n\nfor _ in range(int(input())):\n    print(chk(input(), input()))\n", "for e in range(int(input())):\n    s, t = input(), input()\n    u = 0\n    j = 0\n    f = 1\n    while u < len(s) and j < len(t):\n        if s[u] == t[j]:\n            u += 1\n            j += 1\n        else:\n            if u and s[u - 1] == t[j]:\n                j += 1\n            else:\n                f = 0\n                break\n    if f and u == len(s) and (j == len(t) or {s[-1]} == set(t[j:])):\n        print('YES')\n    else:\n        print('NO')", "for i in range(int(input())):\n    a = input()\n    b = input()\n    di = [[a[0], 1]]\n    for i in a[1:]:\n        if di[-1][0] == i:\n            di[-1][1] += 1\n        else:\n            di.append([i, 1])\n    di2 = [[b[0], 1]]\n    for i in b[1:]:\n        if di2[-1][0] == i:\n            di2[-1][1] += 1\n        else:\n            di2.append([i, 1])\n    if len(di) != len(di2):\n        print(\"NO\")\n        continue\n    f = 0\n    for i in range(len(di)):\n        if di[i][0] == di2[i][0] and di[i][1] <= di2[i][1]:\n            continue\n        f = 1\n        break\n    if f:\n        print(\"NO\")\n    else:\n        print(\"YES\")", "import sys \nread = lambda : sys.stdin.readline().strip()\n\nfor t in range(int(input())):\n  a, b = read(), read()\n  A, B = [], []\n  for i in a:\n    if not A:\n      A.append((1, i))\n    else:\n      cnt, char = A[-1]\n      if char == i:\n        A[-1] = (cnt+1, char)\n      else:\n        A.append((1, i))\n  \n  for i in b:\n    if not B:\n      B.append((1, i))\n    else:\n      cnt, char = B[-1]\n      if char == i:\n        B[-1] = (cnt+1, char)\n      else:\n        B.append((1, i))\n    \n  if len(A) != len(B):\n    sys.stdout.write(\"NO\\n\")\n  else:\n    flag = True \n    for i, j in zip(A, B):\n      if j[0] < i[0] or i[1] != j[1]:    \n        sys.stdout.write(\"NO\\n\")\n        flag = False \n        break\n    if flag:\n      sys.stdout.write(\"YES\\n\")\n     \n  \n", "n = int(input())\nfor i in range(n):\n    s = input()\n    c = input()\n    a = []\n    b = []\n    p = -1\n    cnt = 0\n    la = 0\n    for el in s:\n        if p == -1:\n            p = el\n            cnt += 1\n        else:\n            if el == p:\n                cnt += 1\n            else:\n                a.append((cnt, p))\n                cnt = 1\n                la += 1\n        p = el\n    if cnt != 0:\n        a.append((cnt, p))\n        la += 1\n    p = -1\n    cnt = 0\n    lb = 0\n    for el in c:\n        if p == -1:\n            p = el\n            cnt += 1\n        else:\n            if el == p:\n                cnt += 1\n            else:\n                b.append((cnt, p))\n                cnt = 1\n                lb += 1\n        p = el\n    if cnt != 0:\n        b.append((cnt, p))\n        lb += 1\n    if la != lb:\n        print('NO')\n        continue\n    r = 'YES'\n    for i in range(la):\n        if a[i][1] != b[i][1] or a[i][0] > b[i][0]:\n            r = 'NO'\n    print(r)", "import itertools\nn = int(input())\nfor _ in range(n):\n    s = list(input())\n    t = list(input())\n    sgr = itertools.groupby(s)\n    tgr = itertools.groupby(t)\n    slist = []\n    tlist = []\n    for key, group in sgr:\n        slist.append([key, len(list(group))])\n    for key, group in tgr:\n        tlist.append([key, len(list(group))])\n    if len(slist) != len(tlist):\n        print(\"NO\")\n    else:\n        flag = 1\n        for i in range(len(slist)):\n            if slist[i][0] == tlist[i][0] and slist[i][1] <= tlist[i][1]:\n                continue\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n", "from collections import deque as D\nt = int(input())\nfor _ in range(t):\n    a = D(list(input()))\n    b = D(list(input()))\n    p = None\n    f = True\n    while a and b:\n        x = a.popleft()\n        if b[0] == x:\n            b.popleft()\n        elif b[0] == p:\n            while b and b[0] == p:\n                b.popleft()\n            if not b:\n                f = False\n                break\n            if b[0] == x:\n                b.popleft()\n            else:\n                f = False\n        else:\n            f = False\n        p = x\n    if a:\n        f = False\n    if b and set(b) != {p}:\n        f = False\n    if f:\n        print('YES')\n    else:\n        print('NO')\n\n", "import sys\n\n\ndef check_str(s, t):\n    i, j = 0, 0\n    ls, lt = len(s), len(t)\n    while i < ls:\n        cur, cnt = s[i], 0\n        while i < ls and s[i] == cur:\n            cnt += 1\n            i += 1\n\n        while j < lt and t[j] == cur:\n            cnt -= 1\n            j += 1\n\n        if cnt > 0:\n            return False\n\n    return True if j == lt else False\n\n\ndef main():\n    n = int(input())\n    for _ in range(n):\n        s = input()\n        t = input()\n        print('YES' if check_str(s, t) else 'NO')\n\n\ndef __starting_point():\n    if len(sys.argv) > 1 and sys.argv[1] == 'True':\n        IS_LOCAL = True\n    main()\n\n__starting_point()", "n=int(input())\nfor tee in range(n):\n\ts=input()\n\tt=input()\n\tif len(s)>len(t):\n\t\tprint(\"NO\")\n\t\tcontinue \n\tif len(s)==len(t):\n\t\tif s==t:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\t\tcontinue\n\tarr=[]\n\ti=0\n\tpre=None\n\tcc=0\n\twhile i<len(s):\n\t\tif pre==None:\n\t\t\tpre=s[i]\n\t\t\tcc=1\n\t\telse:\n\t\t\tif pre==s[i]:\n\t\t\t\tcc+=1\n\t\t\telse:\n\t\t\t\tarr.append([pre,cc])\n\t\t\t\tpre=s[i]\n\t\t\t\tcc=1 \n\t\ti+=1\n\tarr.append([pre,cc])\n\tbrr=[]\n\ti=0\n\tpre=None\n\tcc=0\n\twhile i<len(t):\n\t\tif pre==None:\n\t\t\tpre=t[i]\n\t\t\tcc=1\n\t\telse:\n\t\t\tif pre==t[i]:\n\t\t\t\tcc+=1\n\t\t\telse:\n\t\t\t\tbrr.append([pre,cc])\n\t\t\t\tpre=t[i]\n\t\t\t\tcc=1 \n\t\ti+=1\n\tbrr.append([pre,cc])\n\t# print(arr)\n\t# print(brr)\n\tif len(brr)!=len(arr):\n\t\tprint(\"NO\")\n\telse:\n\t\tcheck=True\n\t\tfor i in range(len(arr)):\n\t\t\tif arr[i][0]!=brr[i][0] or arr[i][1]>brr[i][1]:\n\t\t\t\tcheck=False\n\t\t\t\tbreak\n\t\tif not check:\n\t\t\tprint(\"NO\")\n\t\telse:\n\t\t\tprint(\"YES\")", "import sys\n\n\ninput = sys.stdin.readline\nn = int(input())\nword = [input() for i in range(2*n)]\n\nfor i in range(n):\n    word0 = word[i*2]\n    word1 = word[i*2 + 1]\n    li0 = [[word0[0], 1]]\n    li1 = [[word1[0], 1]]\n    for i in range(1, len(word0)):\n        if li0[-1][0] == word0[i]:\n            li0[-1][1] += 1\n        else:\n            li0.append([word0[i], 1])\n\n    for i in range(1, len(word1)):\n        if li1[-1][0] == word1[i]:\n            li1[-1][1] += 1\n        else:\n            li1.append([word1[i], 1])\n    for i in range(len(li0)):\n        if li0[i][0] == li1[i][0] and li0[i][1] <= li1[i][1]:\n            continue\n        else:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n          \n\n", "n = int(input())\nfor _ in range(n):\n    s = input()\n    t = input()\n    i, j = 0, 0\n    while i < len(s):\n        c = s[i]\n        x, y = 0, 0\n        while i < len(s) and s[i] == c:\n            i += 1\n            x += 1\n        while j < len(t) and t[j] == c:\n            j += 1\n            y += 1\n        if x > y:\n            print('NO')\n            break\n    else:\n        print('YES' if j == len(t) else 'NO')\n", "n=int(input())\nfor i in range(n):\n    s=list(input())\n    s.append(0)\n    dan=[]\n    counter=1\n    for i in  range(1,len(s)):\n        if s[i]!=s[i-1]:\n            dan.append((s[i-1],counter))\n            counter=1\n        else:\n            counter+=1\n    t=list(input())\n    t.append(0)\n    j=0\n    lena=len(dan)\n    counter=1\n    for i in range(1,len(t)):\n        if t[i]!=t[i-1]:\n            if j>=lena:\n                print('NO')\n                break\n            if t[i-1]==dan[j][0] and counter>=dan[j][1]:\n                j+=1\n                counter=1\n            else:\n                print('NO')\n                break\n        else:\n            counter+=1\n    else:\n        if j==lena:\n            print('YES')\n        else:\n            print('NO')\n            \n"]