["#coding gbk\n#!usr/bin/ENV\ncin =lambda : list(map(int,input().split()))\nn, k = cin()\nc=list(cin())\ndp = [0]*(k+1)\ndp[0]=1\nfor i in c:\n    tmp = dp[:]\n    for x in range(k,i-1,-1):\n        tmp[x] |= dp[x-i]|(dp[x-i]<<i)\n    dp = tmp\nb = bin(dp[-1])\nans = [i for i in range(k + 1) if b[-i - 1] == '1']\nprint(len(ans))\nprint(*ans)\n", "n, k = list(map(int, input().split()))\ncs = list(map(int, input().split()))\n\n# table[c][s] has bit ss set if can make subset s and sub-subset ss\n# using only the first c coins.\n# We only ever need to know table[c-1] to compute table[c].\ntable = [[0 for _ in range(k+1)] for _ in range(2)]\n\n# Can always make subset 0 and sub-subset 0 using 0 coins.\ntable[0][0] = 1\n\nfor i, c in enumerate(cs,1):\n\tfor s in range(k+1):\n\t\t# Include the coin in neither subset nor sub-subset.\n\t\ttable[i%2][s] |= table[(i-1)%2][s]\n\t\tif c <= s:\n\t\t\t# Include the coin in subset but not sub-subset.\n\t\t\ttable[i%2][s] |= table[(i-1)%2][s-c]\n\t\t\t# Include the coin in both the subset and sub-subset.\n\t\t\ttable[i%2][s] |= (table[(i-1)%2][s-c] << c)\n\npossible = [str(i) for i in range(k+1) if (table[n%2][k] >> i) & 1]\nprint(len(possible))\nprint(*possible)\n", "n, k = list(map(int, input().split()))\ncs = list(map(int, input().split()))\n\n# table[c][s] has bit ss set if can make subset s and sub-subset ss\n# using only the first c coins.\n# We only ever need to know table[c-1] to compute table[c].\ntable = [[0 for _ in range(k+1)] for _ in range(2)]\n\n# Can always make subset 0 and sub-subset 0 using 0 coins.\ntable[0][0] = 1\n\nfor i, c in enumerate(cs,1):\n\tfor s in range(k+1):\n\t\t# Include the coin in neither subset nor sub-subset.\n\t\ttable[i%2][s] |= table[(i-1)%2][s]\n\t\tif c <= s:\n\t\t\t# Include the coin in subset but not sub-subset.\n\t\t\ttable[i%2][s] |= table[(i-1)%2][s-c]\n\t\t\t# Include the coin in both the subset and sub-subset.\n\t\t\ttable[i%2][s] |= (table[(i-1)%2][s-c] << c)\n\npossible = [str(i) for i in range(k+1) if (table[n%2][k] >> i) & 1]\nprint(len(possible))\nprint(*possible)\n\n\n\n\n# Made By Mostafa_Khaled\n", "n,m=list(map(int,input().split()))\ns=[0]+list(map(int,input().split()))\ndp=[[[False for i in range(m+1)] for j in range(m+1)] for k in range(2)]\ndp[0][0][0]=True\ncur=0\nfor i in range(1,n+1):\n    cur+=1\n    cur%=2\n    last=(cur+1)%2\n    for j in range(m+1):\n        for k in range(j+1):\n            if j-s[i]>-1 and k-s[i]>-1:\n                dp[cur][j][k]=dp[last][j][k] or dp[last][j-s[i]][k] or dp[last][j-s[i]][k-s[i]]\n            elif j-s[i]>-1 :\n                dp[cur][j][k]=dp[last][j][k] or dp[last][j-s[i]][k]\n            elif k-s[i]>-1:\n                dp[cur][j][k]=dp[last][j][k] or dp[last][j-s[i]][k-s[i]]\n            else:\n                dp[cur][j][k]=dp[last][j][k]\n                \nans=[]\nfor i in range(k+1):\n    if dp[cur][k][i]:\n        ans.append(i)\nprint(len(ans))\nprint(*ans)\n        \n", "\ndef check(arr, l, s):\n    m = []\n    for _ in range(l+1) : m.append([1] + [0] * (s))\n    m[0][0] = 1\n    for i, ei in enumerate(arr, 1):\n        for j in range(s+1):\n            m[i][j] |= m[i-1][j]\n            if j >= ei: \n                m[i][j] |= m[i-1][j-ei]\n                m[i][j] |= (m[i-1][j-ei] << ei)\n    return [i for i in range(s+1) if (m[-1][s] >> i) & 1]\n\nn, s = map(int, input().split())\nl = list(map(int, input().split()))\nL = check(l, n, s)\nprint(len(L))\nprint(*L, sep=' ')\n", "n, k =map(int, input().split())\n\ndp = []\nk += 1\nfor i in range(2):\n    a = []\n    for j in range(k):\n        a.append([0] * k)\n    dp.append(a)\ndp[1][0][0]=1\n\nc = list(map(int, input().split()))\nc = sorted(c)\nfor i in range(n):\n    for j in range(c[i], k):\n        for t in range(j+1):\n            if t>=c[i] and dp[1][j-c[i]][t-c[i]] > 0:\n                dp[0][j][t] = 1\n            if dp[1][j-c[i]][t] > 0:\n                dp[0][j][t] = 1\n    for j in range(k):\n        for t in range(j+1):\n            if dp[0][j][t]:\n                dp[1][j][t] = 1\n    if sum(dp[1][k-1]) == k:\n        break\nprint(sum(dp[1][k-1]))\nfor i in range(k):\n    if dp[1][k-1][i]:\n        print(i)", "n, k =list(map(int, input().split()))\n\ndp = []\nk += 1\nfor j in range(k):\n    dp.append([0] * k)\n\ndp[0][0]=1\nc = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(k-1, c[i]-1, -1):\n        for t in range(j+1):\n            if t>=c[i] and dp[j-c[i]][t-c[i]] > 0:\n                dp[j][t] = 1\n            if dp[j-c[i]][t] > 0:\n                dp[j][t] = 1\n            \nprint(sum(dp[k-1]))\nfor i in range(k):\n    if dp[k-1][i]:\n        print(i)\n", "n, k =map(int, input().split())\n\ndp = []\nk += 1\nfor j in range(k):\n    dp.append([0] * k)\n\ndp[0][0]=1\nc = list(map(int, input().split()))\nc = sorted(c)\nfor i in range(n):\n    for j in range(k-1, c[i]-1, -1):\n        for t in range(j+1):\n            if t>=c[i] and dp[j-c[i]][t-c[i]] > 0:\n                dp[j][t] = 1\n            if dp[j-c[i]][t] > 0:\n                dp[j][t] = 1\n    if sum(dp[k-1]) == k:\n        break\nprint(sum(dp[k-1]))\nfor i in range(k):\n    if dp[k-1][i]:\n        print(i)", "from collections import Counter\nimport sys\nn,k = list(map(int,sys.stdin.readline().split()))\nc = list(map(int,sys.stdin.readline().split()))\ndp = [0]*(k+1)\ndp[0]=1\nfor i in c:\n    tmp = dp[:]\n    for j in range(k,i-1,-1):\n        tmp[j] |= dp[j-i]|(dp[j-i]<<i)\n    dp = tmp\nb = bin(dp[-1])\nans = [i for i in range(k + 1) if b[-i - 1] == '1']\nsys.stdout.write(\"{0}\\n{1}\".format(len(ans),str(ans)[1:-1].replace(\",\",\"\")))\n", "from collections import Counter\nimport sys\nn,k = list(map(int,sys.stdin.readline().split()))\nc = list(map(int,sys.stdin.readline().split()))\ndp = [0]*(k+1)\ndp[0]=1\nfor i in c:\n    tmp = dp[:]\n    for j in range(k,i-1,-1):\n        tmp[j] |= dp[j-i]|(dp[j-i]<<i)\n    dp = tmp\nb = bin(dp[-1])\nans = [i for i in range(k + 1) if b[-i - 1] == '1']\nsys.stdout.write(\"{0}\\n{1}\".format(len(ans),str(ans)[1:-1].replace(\",\",\"\")))\n\n", "cin =lambda : map(int,input().split())\nn, k = cin()\nc=list(cin())\ndp = [0]*(k+1)\ndp[0]=1\nfor i in c:\n    tmp = dp[:]\n    for x in range(k,i-1,-1):\n        tmp[x] |= dp[x-i]|(dp[x-i]<<i)\n    dp = tmp\nb = bin(dp[-1])\nans = [i for i in range(k + 1) if b[-i - 1] == '1']\nprint(len(ans))\nprint(*ans)", "cin =lambda : list(map(int,input().split()))\nn, k = cin()\nc=list(cin())\ndp = [0]*(k+1)\ndp[0]=1\nfor i in c:\n    tmp = dp[:]\n    for x in range(k,i-1,-1):\n        tmp[x] |= dp[x-i]|(dp[x-i]<<i)\n    dp = tmp\nb = bin(dp[-1])\nans = [i for i in range(k + 1) if b[-i - 1] == '1']\nprint(len(ans))\nprint(*ans)\n", "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nDP = [[False]*(k+2) for _ in range(k+2)]\n\nDP[0][0] = True\n\nfor a in sorted(A):\n  for i in range(k, a-1, -1):\n    for j in range(0, k+1):\n      DP[i][j] |= DP[i-a][j]\n      if j >= a:\n        DP[i][j] |= DP[i-a][j-a]\n\nprint(sum(DP[k]))\nfor i in range(k+1):\n  if DP[k][i]:\n    print(i)\n", "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n#DP = [[False]*(k+2) for _ in range(k+2)]\nDP = []\nfor _ in range(k+2):\n  DP.append([False]*(k+2))\n\nDP[0][0] = True\n\nfor a in sorted(A):\n  for i in range(k, a-1, -1):\n    for j in range(0, k+1):\n      DP[i][j] |= DP[i-a][j]\n      if j >= a:\n        DP[i][j] |= DP[i-a][j-a]\n\nprint(sum(DP[k]))\nfor i in range(k+1):\n  if DP[k][i]:\n    print(i)\n", "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\n#DP = [[False]*(k+2) for _ in range(k+2)]\nDP = []\nfor _ in range(k+1):\n  DP.append([False for _ in range(k+1)])\n\nDP[0][0] = True\n\nfor a in sorted(A):\n  for i in range(k, a-1, -1):\n    for j in range(0, k+1):\n      DP[i][j] |= DP[i-a][j]\n      if j >= a:\n        DP[i][j] |= DP[i-a][j-a]\n\nprint(sum(DP[k]))\nfor i in range(k+1):\n  if DP[k][i]:\n    print(i)\n", "import sys\ninput = sys.stdin.readline\n\nn, k = list(map(int, input().split()))\nA = list(map(int, input().split()))\n\nDP = [[False]*(k+1) for _ in range(k+1)]\n\nDP[0][0] = True\n\nfor a in sorted(A):\n  for i in range(k, a-1, -1):\n    for j in range(0, k+1):\n      DP[i][j] |= DP[i-a][j]\n      if j >= a:\n        DP[i][j] |= DP[i-a][j-a]\n\nprint(sum(DP[k]))\nfor i in range(k+1):\n  if DP[k][i]:\n    print(i)\n", "import sys\ninput = sys.stdin.readline\n\nn, k = map(int, input().split())\nA = map(int, input().split())\n\nDP = [[False]*(k+1) for _ in range(k+1)]\n\nDP[0][0] = True\n\nfor a in sorted(A):\n  for i in range(k, a-1, -1):\n    for j in range(0, k+1):\n      DP[i][j] |= DP[i-a][j]\n      if j >= a:\n        DP[i][j] |= DP[i-a][j-a]\n\nA = [i for i in range(k+1) if DP[k][i]]\nprint(len(A))\nprint(*A)"]