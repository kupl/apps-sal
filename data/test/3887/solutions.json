["#!/bin/python3\n\na = input()\nwhile a:\n    expr, n = a.split('=')\n    n = int(n.strip())\n    pos = 1\n    neg = 0\n    sg = [1]\n    for c in expr:\n        if c == '+':\n            pos += 1\n            sg.append(1)\n        elif c == '-':\n            neg += 1\n            sg.append(0)\n    csum = pos - neg\n    rez = []\n    for i in sg:\n        if csum < n:\n            if i > 0:\n                v = min(n-csum, n-1)\n                csum += v\n                rez.append(1+v)\n            else:\n                rez.append(-1)\n        else:\n            if i > 0:\n                rez.append(1)\n            else:\n                v = min(csum - n, n-1)\n                csum -= v\n                rez.append(-1-v)\n    if csum == n:\n        print(\"Possible\")\n        ans = str(rez[0])\n        for j in rez[1:]:\n            ans += \" \" + (\"+\" if j > 0 else \"-\") + \" \"\n            ans += str(abs(j))\n        ans += \" = \" + str(n)\n        print(ans)\n    else:\n        print(\"Impossible\")\n    break\n    a = input()\n", "#!/usr/bin/env python3\n\nimport re\n\ntry:\n    while True:\n        s = input()\n        n = int(s[s.rfind(' '):])\n        pos = s.count('+') + 1\n        neg = s.count('-')\n        if n * pos - neg < n or pos - n * neg > n:\n            print(\"Impossible\")\n        else:\n            print(\"Possible\")\n            need = n - (pos - neg)\n            prev = '+'\n            first = True\n            for m in re.finditer(r\"[+-]\", s):\n                if first:\n                    first = False\n                else:\n                    print(prev, end=' ')\n\n                if prev == '+' and need > 0:\n                    x = min(need + 1, n)\n                    need -= x - 1\n                elif prev == '-' and need < 0:\n                    x = min(-need + 1, n)\n                    need += x - 1\n                else:\n                    x = 1\n\n                print(x, end=' ')\n                prev = m.group()\n\n            if not first:\n                print(prev, end=' ')\n\n            if prev == '+' and need > 0:\n                x = min(need + 1, n)\n                need -= x - 1\n            elif prev == '-' and need < 0:\n                x = min(-need + 1, n)\n                need += x - 1\n            else:\n                x = 1\n\n            print(x, '=', n)\n\nexcept EOFError:\n    pass\n", "#!/usr/bin/env python3\n\n\ndef main():\n    s = input().split()\n    n = int(s[-1])\n    xs = [1] + [int(x + '1') for x in s[1:-2:2]]\n\n    d = sum(xs) - n\n    if d > 0:\n        for i, x in enumerate(xs):\n            if d == 0:\n                break\n            if x < 0:\n                xs[i] = -min(n, d + 1)\n                d += xs[i] + 1\n    elif d < 0:\n        for i, x in enumerate(xs):\n            if d == 0:\n                break\n            if x > 0:\n                xs[i] = min(n, -d + 1)\n                d += xs[i] - 1\n\n    if sum(xs) == n:\n        print('Possible')\n        print('{} = {}'.format(' '.join(('+ ' if x > 0 else '- ') + str(abs(x)) for x in xs)[2:], n))\n    else:\n        print('Impossible')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\ninput = sys.stdin.readline()\n\npossible = False\ninput = \"+ \" + input.strip()\ninparse = input.split(' ')\nn = int(inparse[-1])\nitems = inparse[0:-2]\nnums = []\nfor i in range(0, int(len(items)/2)):\n    if (items[i*2] == '+'): nums.append(1)\n    else: nums.append(-1)\nsumnum = sum(nums)\n\nwhile (sumnum != n):\n    found = False\n    deficit = abs(sumnum - n);\n    if (sumnum < n):\n        for i in range(0, len(nums)):\n            if nums[i] < n and nums[i] >= 1:\n                nums[i] = min(nums[i] + deficit, n);\n                found = True\n                break;\n    elif (sumnum > n):\n        for i in range(0, len(nums)):\n            if nums[i] > -1*n and nums[i] <= -1:\n                nums[i] = max(nums[i] - deficit, -1*n)\n                found = True\n                break;\n    sumnum = sum(nums)\n    if not found: break;\n\nif sumnum == n:\n    possible = True\n\nif possible: \n    print(\"Possible\")\n    outstr = \"\"\n    for i in nums:\n        if i > 0:\n            outstr = outstr + ' + ' + str(abs(i))\n        else:\n            outstr = outstr + ' - ' + str(abs(i))\n    outstr = outstr + \" = \" + str(n)\n    print(outstr.strip()[2:])\nelse: print(\"Impossible\")", "\ndef max(a, b):\n\tif(a>=b):\n\t\treturn a\n\telse:\n\t\treturn b\n\n####################################\n\ns=input().split()\nlength=len(s)\nn=int(s[length-1])\n\nplus=1\nminus=0\n\n\nfor i in s:\n\tif(i== '+'):\n\t\tplus+=1\n\tif(i== '-'):\n\t\tminus+=1\n\nif(plus*n - minus < n or plus - n*minus > n):\n\tprint('Impossible')\n\treturn\nelse:\n\tprint('Possible')\n\nfor i in range(0, length-1, 2): #initializing all placeholders with 1\n\ts[i]='1'\n\n\n# if(minus==0):\n# \ts[0]= repr(n-plus+1)\n\n# else:\n\n\n# \tdiff=plus-1-minus\n\n\n# \tif(diff>0):\n# \t\ts[0]=repr(n-diff)\n# \t\tfor i in range(2, length-1, 2):\n# \t\t\ts[i]='1'\n\n# \tflag=0\n# \tif(diff<=0):\n# \t\ts[0]=repr(n)\n# \t\tfor i in range(2, length-1, 2):\n# \t\t\ts[i]='1'\n# \t\t\tif(flag==0 and s[i-1] == '+'):\n# \t\t\t\tflag=1\n# \t\t\t\ts[i]=repr(1-diff)\n\nres=n-plus+minus\nfor i in range(0, length-1, 2):\n\tif((i==0 or s[i-1]=='+' ) and res>0):\n\t\tval=int(s[i])\n\t\tif(res>n-val):\n\t\t\tres-=(n-val)\n\t\t\ts[i]=repr(n)\n\t\telse:\n\t\t\tval+=res\n\t\t\ts[i]=repr(val)\n\t\t\tres=0\n\telif(s[i-1]=='-' and res<0):\n\t\tval=int(s[i])\n\t\tif(res<val-n):\n\t\t\tres+=(n-val)\n\t\t\ts[i]=repr(n)\n\t\telse:\n\t\t\tval-=res\n\t\t\ts[i]=repr(val)\n\t\t\tres=0\n\n\n\n\n\nprint(' '.join(s))\n\n\n\n\n\n", "a=list(input().split())\nb,c=1,0\nfor i in a:\n    if i=='-':\n        c=c+1\n    elif i=='+':\n        b=b+1\n    elif i!='?' and i!='=':\n        n=int(i)\nif b-c*n<=n and n<=b*n-c:\n    print('Possible')\n    b0=[]\n    for i in range(b):\n        b0.append(1)\n    c0=[]\n    for i in range(c):\n        c0.append(1)\n    \n    x=b-c-n\n    if x<0:\n        i=0\n        while x+n-1<0:\n            b0[i]=n\n            x=x+n-1\n            i=i+1\n        if x!=0:\n            b0[i]=-x+1\n    else:\n        i=0\n        while x-n+1>0:\n            c0[i]=n\n            x=x-n+1\n            i=i+1\n        if x!=0:\n            c0[i]=x+1\n    s=str(b0[0])\n    b=1\n    c=0\n    for i in a:\n        if i=='-':\n            s=s+' - '+str(c0[c])\n            c=c+1\n        elif i=='+':\n            s=s+' + '+str(b0[b])\n            b=b+1\n        elif i=='=':\n            print(s+' = '+str(n))            \nelse:\n    print('Impossible')#'''\n", "s = input().split()\n\nnrpoz = 0\nnrneg = 0\n\nfor i in s:\n\tif i == '+':\n\t\tnrpoz += 1 \n\tif i == '-':\n\t\tnrneg += 1\n\nif s[0] == '?':\n\tnrpoz += 1\n\nn = int(s[-1])\n# print(nrpoz, nrneg, n)\n\nif nrpoz * n - nrneg >= n >= nrpoz - nrneg * n:\n\tprint('Possible')\nelse:\n\tprint('Impossible')\n\treturn\n\nneg = []\npoz = []\n\nif nrpoz - nrneg > n:\n\t#toate pozitive o sa fie 1\n\t#negativele tre sa aiba suma nrpoz - n;\n\tpoz = [1] * nrpoz;\n\tneg = [1] * nrneg;\n\tsn = nrneg;\n\tfor i in range(len(neg)):\n\t\tif sn < nrpoz - n:\n\t\t\tneg[i] += min(nrpoz - n -sn, n - neg[i])\n\t\t\tsn += neg[i] - 1\nelse:\n\tneg = [1] * nrneg\n\tpoz = [1] * nrpoz\n\tsp = nrpoz - nrneg;\n\tfor i in range(len(poz)):\n\t\tif sp < n:\n\t\t\tpoz[i] += min(n - poz[i], n - sp)\n\t\t\tsp += poz[i] - 1\n\nsgn = '+'\nipoz, ineg = 0, 0\nfor i in s:\n\tif i == '?':\n\t\tif sgn == '+':\n\t\t\tprint(poz[ipoz], end = ' ')\n\t\t\tipoz += 1\n\t\telse:\n\t\t\tprint(neg[ineg], end = ' ')\n\t\t\tineg += 1\n\telse:\n\t\tsgn = i\n\t\tprint(i, end = ' ')", "s = input().split()\nn=int(s[-1])\nval = 0\nsign = 1\nls = []\nfor c in s[:-2]:\n\tif c == '+': sign = 1\n\telif c == '-': sign = -1\n\telif c == '?': \n\t\tls.append(sign)\n\t\tval+=sign\n\telse:\n\t\tprint(c)\nfor i in range(len(ls)):\n\tif val > n:\n\t\tif ls[i]>0: continue\n\t\tls[i]-= min(n-1, val-n)\n\t\tval-= min(n-1, val-n)\n\telif val < n:\n\t\tif ls[i]<0: continue\n\t\tls[i]+=min(n-1,n-val)\n\t\tval+=min(n-1,n-val)\nif val != n:\n\tprint(\"Impossible\")\nelse:\n\tprint(\"Possible\")\n\tprint(\"\".join([(\" + \" if v>0 else \" - \")+str(abs(v)) for v in ls])[3:]+\" = \"+str(n))\n", "s = input().split()\nt = s[::]\nreq = int(s[-1])\nlim = req\nS = 0\nfor i in range(len(s)):\n\tif s[i] == '?':\n\t\ts[i] = '1'\n\t\tS += 1 if i == 0 or s[i - 1] == '+' else -1\n\nif S < req:\n\tfor i in range(len(s)):\n\t\tif t[i] == '?':\n\t\t\tsign = 1 if i == 0 or s[i - 1] == '+' else -1\n\t\t\tif sign == 1:\n\t\t\t\td = min(req - S, lim - 1)\n\t\t\t\ts[i] = str(d + 1)\n\t\t\t\tS += d\nelse:\n\tfor i in range(len(s)):\n\t\tif t[i] == '?':\n\t\t\tsign = 1 if i == 0 or s[i - 1] == '+' else -1\n\t\t\tif sign == -1:\n\t\t\t\td = min(S - req, lim - 1)\n\t\t\t\ts[i] = str(d + 1)\n\t\t\t\tS -= d\nif S == req:\n\tprint(\"Possible\")\n\tprint(' '.join(s))\nelse:\n\tprint(\"Impossible\")\n\n", "s=input()\na=s.split()\n\ntot=0\nb=[1 if x=='?' else x for x in a]\nfor i,x in enumerate(b):\n    if x==1:\n        if i==0 or b[i-1]=='+':\n            tot+=1\n        elif b[i-1]=='-':\n            tot-=1\n\ngoal=int(b[-1])\nif tot<goal:\n    for i,x in enumerate(b):\n        if x==1 and i==0 or b[i-1]=='+' and tot<goal:\n            a=min(goal-1,goal-tot)\n            tot+=a\n            b[i]+=a\n\nelif tot>goal:\n    for i,x in enumerate(b):\n        if x==1 and b[i-1]=='-' and tot>goal:\n            a=min(goal-1,tot-goal)\n            tot-=a\n            b[i]+=a\n            \nif tot!=goal:\n    print(\"Impossible\")\nelse:\n    print(\"Possible\")\n    print(' '.join([str(x) for x in b]))\n\n\n", "sgn, a, b = 1, 0, 0\nsol = \"\"\nok = 0\nfor ch in input().split():\n    if ch == '?':\n        if sgn == 1:\n            a += 1\n            ch = 'P'\n        else:\n            b += 1\n            ch = 'M'\n    elif ch == '+':\n        sgn = 1\n    elif ch == '-':\n        sgn = -1\n    elif ch != '=':\n        n = int(ch)\n        ok = 1\n    if not ok:\n        sol += ch\npl, mn = [n]*a, [1]*b\ns = n*a-b\ni, j = 0, 0\nwhile s > n and (i < a or j < b):\n    if i < a:\n        amt = min(s-n, n-1)\n        pl[i] -= amt\n        s -= amt\n        i += 1\n    else:\n        amt = min(s-n, n-1)\n        mn[j] += amt\n        s -= amt\n        j += 1\nif s != n:\n    print(\"Impossible\")\nelse:\n    print(\"Possible\")\n    for ch in sol:\n        if ch != 'P' and ch != 'M':\n            print(ch, end = ' ')\n        elif ch == 'P':\n            print(pl[-1], end = ' ')\n            pl.pop()\n        else:\n            print(mn[-1], end = ' ')\n            mn.pop()\n    print(n)"]