["from sys import stdin\nfrom fractions import gcd\n\nn = int(stdin.readline().strip())\nv = list(map(int, stdin.readline().strip().split()))\n\nadj = [[] for _ in range(n)]\nfor _ in range(n-1):\n    x, y = list(map(int, stdin.readline().strip().split()))\n    adj[x-1].append(y-1)\n    adj[y-1].append(x-1)\n\nroot_divisors = []\ncnt = [0]*200001\nd = 1\nwhile d*d <= v[0]:\n    if v[0] % d == 0:\n        root_divisors.append(d)\n        cnt[d] += 1\n        if v[0]//d != d:\n            root_divisors.append(v[0]//d)\n            cnt[v[0]//d] += 1\n    d += 1    \ns = [0]\nvisited = [False]*n\nvisited[0] = True\nlevel = [1]*n\nres1 = [0]*n\nres2 = [0]*n\nres1[0] = v[0]\nd = 1\nwhile s:\n    x = s[-1]\n    any_more = False\n    while adj[x]:\n        y = adj[x].pop()\n        if not visited[y]:\n            visited[y] = True\n            any_more = True\n            s.append(y)\n            level[y] = level[x]+1\n            res2[y] = gcd(res2[x], v[y])\n            for d in root_divisors:\n                if v[y] % d == 0:\n                    cnt[d] += 1\n                if cnt[d] == level[y] or cnt[d] == level[y]-1:\n                    res1[y] = max(res1[y], res2[y], d)\n            break\n    if not any_more:\n        s.pop()\n        for d in root_divisors:\n            if v[x] % d == 0:\n                cnt[d] -= 1\n        \nprint(' '.join(list(map(str, res1))))"]