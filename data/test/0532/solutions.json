["now = \"a\"\nans = 0\nS = input()\nfor s in S:\n    x = abs(ord(s) - ord(now))\n    ans += min(x, 26 - x)\n    now = s\nprint(ans)\n", "s = input()\n\ncur = 'a'\ntotal = 0\n\nfor k in s:\n    c = abs(ord(cur) - ord(k))\n    c = min(c, 26-c)\n    cur = k\n    total += c\n\nprint(total)", "s = input()\nS = \"abcdefghijklmnopqrstuvwxyz\"\n\nind = 0\nans = 0\nfor item in s:\n    index = ind\n    ans1 = 0\n    while (S[index] != item):\n        index = (index + 1) % 26\n        ans1 += 1\n    index = ind\n    ans2 = 0\n    while (S[index] != item):\n        index = (index - 1 + 26) % 26\n        ans2 += 1\n    ans += min(ans1, ans2)\n    ind = index\nprint(ans)\n", "#!/usr/bin/env python3\n\n\ndef main():\n    try:\n        while True:\n            s = input()\n            cur = 0\n            result = 0\n            for c in s:\n                c = ord(c) - 97\n                result += min((c - cur) % 26, (cur - c) % 26)\n                cur = c\n            print(result)\n\n    except EOFError:\n        pass\n\n\nmain()\n", "s=input()\nalfabet=\"abcdefghijklmnopqrstuvwxyz\"\nrot=0\ncurr=0\nfor c in s:\n    goto=alfabet.index(c)\n    rot+=min(abs(goto-curr),abs(curr+26-goto),abs(curr-goto-26))\n    curr=goto\nprint (rot)\n", "def d(x,y):\n    return min(abs(ord(x) - ord(y)),26-abs(ord(x)-ord(y)))\n\nans = 0\ns = 'a'+input()\nfor i in range(len(s)-1):\n    ans+=d(s[i],s[i+1])\nprint(ans)\n", "s = input()\nx = \"abcdefghijklmnopqrstuvwxyz\"\ncur = \"a\"\nans = 0\nfor c in s:\n    p = abs(x.find(cur) - x.find(c))\n    p = min(p, 26 - p)\n    ans += p\n    cur = c\nprint(ans)\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\n\nsys.setrecursionlimit(10**7)\ninf = 10**10\nmod = 10**9 + 7\n\ndef f():\n    r = 0\n    s = input()\n    c = 0\n    ai = ord('a')\n    t = 0\n    for si in s:\n        sc = ord(si) - ai\n        if sc > c:\n            t = min(26+c-sc, sc-c)\n        else:\n            t = min(c-sc, sc+26-c)\n        r += t\n        c = sc\n    return r\n\nprint(f())\n", "__author__ = 'Think'\nname=input()\nprev=\"a\"\ntotal=0\nfor s in name:\n\ttotal+=min(abs(ord(s)-ord(prev)), 26-abs(ord(s)-ord(prev)))\n\tprev=s\nprint(total)", "str = input()\nres = 0\nlastSmb = 0\n\nfor smb in str:\n    sid = ord(smb) - ord('a')\n    diff = sid - lastSmb\n    if diff < 0:\n        diff = -diff\n\n    if diff > 13:\n        diff = 26 - diff\n\n    res += diff\n    lastSmb = sid\n\nprint(res)", "s = input()\nn = 0\nt = 'a'\nfor i in s:\n    n+=min(abs(ord(i)-ord(t)), abs(26-abs(ord(i)-ord(t))))\n    t = i\nprint(n)\n", "def solve():\n\ts = input()\n\tprev = 0\n\tres = 0\n\tfor c in s:\n\t\tnow = ord(c) - ord('a')\n\t\tdiff = abs(prev - now)\n\t\tdiff = min(diff, 26 - diff)\n\t\tprev = now\n\t\tres += diff\n\tprint(res)\n\nsolve()", "# coding: utf-8\n\ndef count(i, g):\n    cost = ord(g) - ord(i)\n    if cost < 0:\n        cost = 26 + cost\n    if cost > 13:\n        cost = 26 - cost\n    return cost\n\n\ns = input().strip()\ni = \"a\"\ncnt = 0\nfor c in s:\n    cnt += count(i, c)\n    i = c\nprint(cnt)\n", "import sys\nn=input()\nkoor=1\nsumma=0\nfor i in n:\n    if (ord(i)-96)==koor:\n        summa+=0\n    else:\n        summa+=min([abs(ord(i)-96-koor),26-abs(ord(i)-96-koor)])\n        koor=ord(i)-96\nprint(summa)\n", "NUM_OF_ALPHABET = ord('z') - ord('a') + 1\ns = input()\ntotal = 0\ncur = 'a'\nfor c in s:\n    total += min((ord(cur) - ord(c) + NUM_OF_ALPHABET) % NUM_OF_ALPHABET, (ord(c) - ord(cur) + NUM_OF_ALPHABET) % NUM_OF_ALPHABET)\n    cur = c\nprint(total)\n", "s = str(input())\ns = s.strip()\nres = 0;\naord = ord('a')\nfor i in (range(len(s))):\n    t = abs(ord(s[i]) - aord)\n    aord = ord(s[i])\n    res = res + min(t, 26 - t)\nprint(res)", "import string\n\n\ns = input()\n\na = 'a'\nans = 0\nfor c in s:\n    i = string.ascii_lowercase.index(c) - string.ascii_lowercase.index(a)\n    i = abs(i)\n    i = min(i, 26 - i)\n    a = c\n    ans += i\n\nprint(ans)\n", "s = input()\nb = 'abcdefghijklmnopqrstuvwxyz'\nc = 0\nnow = 0\n\nfor i in range(len(s)):\n    need = b.find(s[i])\n    c += min(abs(now - need), abs(26 - abs(now - need)))\n    now = need\n\nprint(c)", "pointer = 0\n\ns = input()\nc = 0\nfor x in s:\n    k = ord(x)-ord('a')\n    crr = []\n    if(k-pointer>=0):\n        crr.append(k-pointer)\n    else:\n        crr.append(k-pointer+26)\n    if(pointer-k>=0):\n        crr.append(pointer-k)\n    else:\n        crr.append(pointer-k+26)\n    pointer = k\n    c += min(crr)\nprint(c)", "#!/usr/bin/env python3\n\nSEQ = 'abcdefghijklmnopqrstuvwxyz'\n\ndef dist(a, b):\n  a = ord(a) - ord('a')\n  b = ord(b) - ord('a')\n  d = abs(a - b)\n  return min(d, 26 - d)\n  \n\ndef __starting_point():\n  seq = input()\n  pos = 'a'\n  r = 0\n  for c in seq:\n    r += dist(pos, c)\n    pos = c\n  print(r)\n\n\n__starting_point()", "def solution():\n    string = input()\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    now = \"a\"\n    res = 0\n    for i in range(len(string)):\n        d = abs(alphabet.find(now) - alphabet.find(string[i]))\n        res += min(d, 26 - d)\n        now = string[i]\n    print(res)\n\nsolution()\n", "s = input()\nalphabet = dict(zip(list(\"abcdefghijklmnopqrstuvwxyz\"), [i for i in range(1, 27)]))\nsumm = 0\ncur_letter = 'a'\nfor letter in s:\n    summ += min(abs(alphabet[letter] - alphabet[cur_letter]), 26 - abs(alphabet[letter] - alphabet[cur_letter]))\n    cur_letter = letter\nprint(summ)", "import sys, math\n\nline = input()\nlength = len(line)\ncur = 'a'\nsumn = 0\nfor c in line:\n\tdiff = abs(ord(c)-ord(cur))\n\tsumn += min(diff, 26 - diff)\n\tcur = c\nprint(sumn)\n", "from sys import stdin\n\n\nphrase=input()\nlettreActuelle=0\ntotal=0\n\nfor lettre in phrase:\n    gauche=(ord(lettre)-ord(\"a\")-lettreActuelle)%26\n    droite=(lettreActuelle-ord(lettre)+ord(\"a\"))%26\n    rotation=min(gauche,droite)\n    total+=rotation\n    lettreActuelle=ord(lettre)-ord(\"a\")\n\nprint(total)\n", "import sys, math\na = 'abcdefghijklmnopqrstuvwxyz'\ns = input()\npos = 0\nvv = ord('a')\nans = 0\nfor i in s:\n    gg = ord(i) - vv\n    #print(25 - max(gg, pos) + min(pos, gg))\n    ans += min(int(math.fabs(gg - pos)), 26 - max(gg, pos) + min(pos, gg))\n    pos = gg\nprint(ans)\n    \n"]