["def upc(c):\n    if c >= 'a' and c <= 'z':\n        c = chr(ord(c) - ord('a') + ord('A'))\n    return c\na1, a2 = {}, {}\nfor i in input():\n    if i in a1:\n        a1[i] += 1\n    else:\n        a1[i] = 1\nfor i in input():\n    if i in a2:\n        a2[i] += 1\n    else:\n        a2[i] = 1\nr1, r2 = 0, 0\na3, a4 = {}, {}\nfor k in a1:\n    v = a1[k]\n    if not k in a2:\n        continue\n    c = min(v, a2[k])\n    a2[k] -= c\n    a1[k] -= c\n    r1 += c\nfor k in a1:\n    v = a1[k]\n    c = upc(k)\n    if c in a3:\n        a3[c] += v\n    else:\n        a3[c] = v\nfor k in a2:\n    v = a2[k]\n    c = upc(k)\n    if c in a4:\n        a4[c] += v\n    else:\n        a4[c] = v\nfor k in a3:\n    if not k in a4:\n        continue\n    v = a3[k]\n    c = min(v, a4[k])\n    a3[k] -= c\n    a4[k] -= c\n    r2 += c\nprint(r1, r2)\n", "__author__ = 'PrimuS'\n\ns = input()\nt = input()\n\nsd = {}\ntd = {}\n\nfor x in s:\n    sd[x] = sd.get(x, 0) + 1\n\nfor x in t:\n    td[x] = td.get(x, 0) + 1\n\nres1 = 0\nres2 = 0\n\nfor x in sd.keys():\n    if x not in td:\n        continue\n    k = min(sd[x], td[x])\n    res1 += k\n    sd[x] -= k\n    td[x] -= k\n\n\nfor x in sd.keys():\n    if x.islower():\n        y = x.upper()\n    else:\n        y = x.lower()\n    if y not in td:\n        continue\n    k = min(sd[x], td[y])\n    sd[x] -= k\n    td[y] -= k\n    res2 += k\n\nprint(res1, res2)", "def main():\n    s, t = [0] * 123, [0] * 123\n    for c in input():\n        s[ord(c)] += 1\n    for c in input():\n        t[ord(c)] += 1\n    yay = whoops = 0\n    for i, x, y in zip(list(range(123)), s, t):\n        if x > y:\n            s[i] = x - y\n            t[i] = 0\n            yay += y\n        else:\n            s[i] = 0\n            t[i] = y - x\n            yay += x\n    t[ord('A'):ord('Z') + 1], t[ord('a'):ord('z') + 1] = t[ord('a'):ord('z') + 1], t[ord('A'):ord('Z') + 1]\n    for i, x, y in zip(list(range(123)), s, t):\n        if x > y:\n            s[i] = x - y\n            t[i] = 0\n            whoops += y\n        else:\n            s[i] = 0\n            t[i] = y - x\n            whoops += x\n    print(yay, whoops)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def foo():\n    s = input()\n    d = {}\n    for key in s:\n        d[key] = d.get(key, 0) + 1\n    return d\n\ndef f(s):\n    d = {}\n    for key in list(s.keys()):\n        if ord(key) > ord('Z'):\n            c = chr(ord(key) - ord('a') + ord('A'))\n            d[c] = d.get(c, 0) + s[key]\n        else:\n            d[key] = d.get(key, 0) + s[key]\n    return d\n\ns = foo()\nt = foo()\nyr = 0\nop = 0\nfor key in list(s.keys()):\n    element = min(s[key], t.get(key, 0))\n    yr += element\n    s[key] -= element\n    if t.get(key):\n        t[key] -= element \n\ns = f(s)\nt = f(t)\n\nfor key in list(s.keys()):\n    element = min(s[key], t.get(key, 0))\n    op += element\n    s[key] -= element\n    if t.get(key):\n        t[key] -= element \n\nprint(yr, op)\n", "from collections import Counter\n\ni1 = input()\ni2 = input()\n\ns1 = Counter(i1)\ns2 = Counter(i2)\n\nintersect = s1 & s2\n\ns1.subtract(intersect)\ns2.subtract(intersect)\n\nopa = Counter(''.join(s1.elements()).lower()) & Counter(''.join(s2.elements()).lower())\n\nprint(sum(intersect.values()), sum(opa.values()))\n", "u = input()\nv = input()\na = [0 for i in range(200)]\nb = [0 for i in range(200)]\nm = 0\nn = 0\nd = ord('a') - ord('A')\nfor i in u:\n    a[ord(i)] += 1\nfor i in v:\n    b[ord(i)] += 1\nfor i in range(ord('A'),ord('Z') + 1):\n    r  = min(a[i], b[i]) + min(a[i + d], b[i + d])\n    n += r\n    m += min(a[i] + a[i + d], b[i] + b[i + d]) - r\nprint(n, m)", "x = input()\nt = input()\nd = dict()\nfor i in t:\n    if i in d:\n        d[i] += 1\n    else:\n        d[i] = 1\ns = []\nfor i in x:\n    s.append([i, 0])\ns.sort(reverse = True)\nura = 0\nopa = 0\nfor i in range(len(s)):\n    if s[i][0] in d:\n        if d[s[i][0]] > 0:\n            ura += 1\n            s[i][1] = 1\n            d[s[i][0]] -= 1\nfor i in range(len(s)):\n    if chr(ord(s[i][0]) - ord('a') + ord('A')) in d and s[i][1] == 0:\n        if d[chr(ord(s[i][0]) - ord('a') + ord('A'))] > 0:\n            opa += 1\n            s[i][1] = 1\n            d[chr(ord(s[i][0]) - ord('a') + ord('A'))] -= 1\nfor i in range(len(s)):\n    if chr(ord(s[i][0]) - ord('A') + ord('a')) in d and s[i][1] == 0:\n        if d[chr(ord(s[i][0]) - ord('A') + ord('a'))] > 0:\n            opa += 1\n            s[i][1] = 1\n            d[chr(ord(s[i][0]) - ord('A') + ord('a'))] -= 1\nprint(ura, opa)", "def main():\t\n\ts = (input())\n\tt = (input())\n\n\tarrS = [0] * 70\n\tarrT = [0] * 70\n\tcount = 0\n\tcount2 = 0\n\tn = len(s)\n\tfor x in s:\n\t\tarrS[ord(x) - 65] += 1\n\tfor x in t:\n\t\tarrT[ord(x) - 65] += 1\n\tfor i in range(60):\n\t\ttemp = min(arrS[i], arrT[i])\n\t\tarrS[i] -= temp\n\t\tarrT[i] -= temp\n\t\tcount += temp\n\tfor i in range(28):\n\t\ttemp = min(arrS[i], arrT[i + 32])\n\t\tarrS[i] -= temp\n\t\tarrT[i + 32] -= temp\n\t\tcount2 += temp\n\tfor i in range(32, 68):\n\t\ttemp = min(arrS[i], arrT[i - 32])\n\t\tarrS[i] -= temp\n\t\tarrT[i - 32] -= temp\n\t\tcount2 += temp\n\n\n\n\n\n\n\n\t\n\tprint(count, count2)\n\n\n\ndef __starting_point():\n\tmain()\n__starting_point()", "s = input()\nt = input()\ns_letters = dict()\nt_letters = dict()\n\nCAPS =   'QWERTYUIOPASDFGHJKLZXCVBNM'\nSMALLS = 'qwertyuiopasdfghjklzxcvbnm'\n\nfor letter in CAPS:\n    s_letters[letter] = 0\n    t_letters[letter] = 0\nfor letter in SMALLS:\n    s_letters[letter] = 0\n    t_letters[letter] = 0\n\nfor letter in s:\n    s_letters[letter] += 1\nfor letter in t:\n    t_letters[letter] += 1\n\nhurray = 0\nhopa = 0\nfor i in range(26):\n    Letter = CAPS[i]\n    letter = SMALLS[i]\n    tmp = min(s_letters[Letter], t_letters[Letter])\n    hurray += tmp\n    s_letters[Letter] -= tmp\n    t_letters[Letter] -= tmp\n    tmp = min(s_letters[letter], t_letters[letter])\n    hurray += tmp\n    s_letters[letter] -= tmp\n    t_letters[letter] -= tmp\n    hopa += min(s_letters[Letter] + s_letters[letter], t_letters[Letter] + t_letters[letter])\n\nprint(hurray, hopa)", "import math\n\ns = input()\nt = input()\n\nlenS = len(s)\nlenT = len(t)\n\nyes = 0\nno = 0\n\ndef change_register(l):\n    if ord(l) > 96:\n        return chr(ord(l) - 32)\n    else:\n        return chr(ord(l) + 32)\n\n\nmap1 = {}\n\nfor i in s:\n    if map1.get(i, None) is None:\n        map1[i] = 1\n    else:\n        map1[i] += 1\n\nmap2 = {}\n\nfor i in t:\n    if map2.get(i, None) is None:\n        map2[i] = 1\n    else:\n        map2[i] += 1\n\n\nfor i in map1:\n\n    if (map1.get(i, None) is None) or (map2.get(i, None) is None):\n        continue\n\n    diff = map1[i] - map2.get(i, 0)\n\n    if diff > 0:\n        yes += map1[i] - diff\n        map2[i] -= (map1[i] - diff)\n        map1[i] -= (map1[i] - diff)\n    else:\n        yes += map1[i]\n        map2[i] -= map1[i]\n        map1[i] = 0\n\nfor w in map1:\n    i = change_register(w)\n\n    if (map1.get(w, None) is None) or (map2.get(i, None) is None):\n        continue\n\n    diff = map1[w] - map2.get(i, 0)\n\n    if diff > 0:\n        no += map1[w] - diff\n        map2[i] = -(map1[w] - diff)\n        map1[w] = -(map1[w] - diff)\n    else:\n        no += map1[w]\n        map2[i] -= map1[w]\n        map1[w] = 0\n\nprint(str(yes)+' '+str(no))", "s = input()\nt = input()\nc = -ord('A') + ord('a')\nura = 0\nopa = 0\ns2 = set()\nind = set()\ns1 = dict()\nfor i in range(len(s)):\n    if ord(s[i]) not in s2:\n        s2.add(ord(s[i]))\n        s1[ord(s[i])] = 1\n    else:\n        s1[ord(s[i])] += 1\n\n           \n\nfor i in range(len(t)):\n        if ord(t[i]) in s2 and s1[ord(t[i])] >= 1:\n            s1[ord(t[i])] -= 1\n            ura += 1\n            ind.add(i)\n            \nfor i in range(len(t)):\n    if i not in ind:\n        if ord('z') >= ord(t[i]) >= ord('a'):\n            if ord(t[i]) - c in s2 and s1[ord(t[i]) - c] >= 1:\n                opa += 1\n                s1[ord(t[i]) - c] -= 1\n                ind.add(i)\n        else:\n            if ord(t[i]) + c in s2 and s1[ord(t[i]) + c] >= 1:\n                opa += 1\n                s1[ord(t[i]) + c] -= 1\n                ind.add(i)  \nprint(ura, opa)\n            \n", "alth = \"abcdefghijklmnopqrstuvwxyz\"\nalth2 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\ns2 = [[0]*26 for i in range(2)]\ns3 = [[0]*26 for i in range(2)]\ns = input()\nt = input()\nnum = 0\nnum2 = 0\nfor i in s:\n    temp = alth.find(i)\n    if temp != -1:\n        s2[0][temp] += 1\n    temp = alth2.find(i)\n    if temp != -1:\n        s2[1][temp] += 1\nfor i in t:\n    temp = alth.find(i)\n    if temp != -1:\n        s3[0][temp] += 1\n    temp = alth2.find(i)\n    if temp != -1:\n        s3[1][temp] += 1        \nfor i in range(2):\n    for j in range(26):\n        x = min(s2[i][j],s3[i][j]) \n        num += x\n        s2[i][j] -= x\n        s3[i][j] -= x\nfor i in range(2):\n    for j in range(26):\n        num2 += min(s2[i][j],s3[1-i][j]) \nprint(num,num2)\n", "x = input()\ny = input()\n\ng1 = {}\ng2 = {}\ng3 = {}\ng4 = {}\n\nfor i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n    g2[i] = 0\n    g4[i] = 0\n\nfor i in 'abcdefghijklmnopqrstuvwxyz':\n    g1[i] = 0\n    g3[i] = 0\n    \ne = 0\nf = 0\n\nu = []\nl = []\nu2 = []\nl2 = []\nfor i in x:\n    if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n        u.append(i)\n        g2[i] += 1\n    else:\n        l.append(i)\n        g1[i] += 1\n        \nfor i in y:\n    if i in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n        u2.append(i)\n        g4[i] += 1\n    else:\n        l2.append(i)\n        g3[i] += 1\n\nfor i in g1:\n    ct = g1[i]\n    can = g3[i]\n    if ct != 0 and can != 0:\n        if ct > can:\n            g1[i] = ct - can\n            g3[i] = 0\n            e += can\n        else:\n            g3[i] = can - ct\n            e += g1[i]\n            g1[i] = 0\n            \n\nfor i in g2:\n    ct = g2[i]\n    can = g4[i]\n    if ct != 0 and can != 0:\n        if ct > can:\n            g2[i] = ct - can\n            g4[i] = 0\n            e += can\n        else:\n            g4[i] = can - ct\n            e += g2[i]\n            g2[i] = 0\n\nfor i in g1:\n    ct = g1[i]\n    can = g4[i.upper()]\n    if ct != 0 and can != 0:\n        if ct > can:\n            g1[i] = ct - can\n            g4[i.upper()] = 0\n            f += can\n        else:\n            g4[i.upper()] = can - ct\n            f += g1[i]\n            g1[i] = 0\n            \n\nfor i in g2:\n    ct = g2[i]\n    can = g3[i.lower()]\n    if ct != 0 and can != 0:\n        if ct > can:\n            g2[i] = ct - can\n            g3[i.lower()] = 0\n            f += can\n        else:\n            g3[i.lower()] = can - ct\n            f += g2[i]\n            g2[i] = 0\n            \n\nprint(e, f)\n", "s=set()\nsc=set()\nt=set()\ntc=set()\nms=[]\nmt=[]\nfor letter in input():\n    if letter==letter.lower():\n        s.add(letter)\n    else:\n        sc.add(letter.lower())\n    if letter not in ms:\n        ms.append(letter)\n        ms.append(1)\n    else:\n        ms[ms.index(letter)+1]+=1\nfor letter in input():\n    if letter==letter.lower():\n        t.add(letter)\n    else:\n        tc.add(letter.lower())\n    if letter not in mt:\n        mt.append(letter)\n        mt.append(1)\n    else:\n        mt[mt.index(letter)+1]+=1\ny=0\nw=0\nfor letter in s.intersection(t):\n    a=ms[ms.index(letter)+1]\n    b=mt[mt.index(letter)+1]\n    rs=set()\n    rt=set()\n    if a==b:\n        y+=a\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=0,0\n        rs.add(letter)\n        rt.add(letter)\n    elif a>b:\n        y+=b\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=ms[ms.index(letter)+1]-mt[mt.index(letter)+1],0\n        rt.add(letter)\n    else:\n        y+=a\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=0,mt[mt.index(letter)+1]-ms[ms.index(letter)+1]\n        rs.add(letter)\n    s,t=s-rs,t-rt\nfor letter in sc.intersection(tc):\n    letter=letter.upper()\n    a=ms[ms.index(letter)+1]\n    b=mt[mt.index(letter)+1]\n    rsc=set()\n    rtc=set()\n    if a==b:\n        y+=a\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=0,0\n        rsc.add(letter.lower())\n        rtc.add(letter.lower())\n    elif a>b:\n        y+=b\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=ms[ms.index(letter)+1]-mt[mt.index(letter)+1],0\n        rtc.add(letter.lower())\n    else:\n        y+=a\n        ms[ms.index(letter)+1],mt[mt.index(letter)+1]=0,mt[mt.index(letter)+1]-ms[ms.index(letter)+1]\n        rsc.add(letter.lower())\n    sc,tc=sc-rsc,tc-rtc\nfor letter in sc.intersection(t):\n    a=ms[ms.index(letter.upper())+1]\n    b=mt[mt.index(letter)+1]\n    rsc=set()\n    rt=set()\n    if a==b:\n        w+=a\n        rsc.add(letter)\n        rt.add(letter)\n    elif a>b:\n        w+=b\n        rt.add(letter)\n    else:\n        w+=a\n        rsc.add(letter)\n    sc,t=sc-rsc,t-rt\nfor letter in s.intersection(tc):\n    a=ms[ms.index(letter)+1]\n    b=mt[mt.index(letter.upper())+1]\n    rs=set()\n    rtc=set()\n    if a==b:\n        w+=a\n        rs.add(letter)\n        rtc.add(letter)\n    elif a>b:\n        w+=b\n        rtc.add(letter)\n    else:\n        w+=a\n        rs.add(letter)\n    s,tc=s-rs,tc-rtc\nprint(y,w)", "def process(str):\n    d = {}\n    for c in str:\n        d[c] = d.setdefault(c, 0) + 1\n    return d\n\n\ndef match(d1, d2, case):\n    ans = 0\n    for c in d1:\n        if case(c) not in d2:\n            continue\n        m = min(d1[c], d2[case(c)])\n        ans += m\n        d1[c] -= m\n        d2[case(c)] -= m\n    return ans\n\nsd = process(input())\ntd = process(input())\nyay = match(sd, td, lambda x : x)\nwhoops = match(sd, td, lambda x : x.lower() if x.isupper() else x.upper())\nprint(yay, whoops)", "A='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\na=A.swapcase()\nAl=A+a\nnumS=[0 for i in Al]\nnumT=[0 for i in Al]\nnumT_=[0 for i in Al]\ns=input()\nt=input()\nt_=t.swapcase()\nyay=0\nwhoops=0\nfor i in range(len(Al)):\n    numS[i]=s.count(Al[i])\n    numT[i]=t.count(Al[i])\n    numT_[i]+=t_.count(Al[i])\n    \n    yay+=min(numS[i],numT[i])\n    \n    if i<=25: k=i+26\n    else: k=i-26\n    numT_[k]-=min(numS[i],numT[i])\n    numS[i]-=min(numS[i],numT[i])\n\nfor i in range(len(Al)):\n    whoops+=min(numS[i],numT_[i])\nprint(yay,whoops)\n    \n", "def main():\t\n\ts = (input())\n\tt = (input())\n\n\tarrS = [0] * 70\n\tarrT = [0] * 70\n\tcount = 0\n\tcount2 = 0\n\tn = len(s)\n\tfor x in s:\n\t\tarrS[ord(x) - 65] += 1\n\tfor x in t:\n\t\tarrT[ord(x) - 65] += 1\n\tfor i in range(60):\n\t\ttemp = min(arrS[i], arrT[i])\n\t\tarrS[i] -= temp\n\t\tarrT[i] -= temp\n\t\tcount += temp\n\tfor i in range(28):\n\t\ttemp = min(arrS[i], arrT[i + 32])\n\t\tarrS[i] -= temp\n\t\tarrT[i + 32] -= temp\n\t\tcount2 += temp\n\tfor i in range(32, 68):\n\t\ttemp = min(arrS[i], arrT[i - 32])\n\t\tarrS[i] -= temp\n\t\tarrT[i - 32] -= temp\n\t\tcount2 += temp\n\t\n\tprint(count, count2)\n\n\n\ndef __starting_point():\n\tmain()\n__starting_point()", "def change(x) :\n    if x == x.upper() :\n        return x.lower()\n    if x == x.lower() :\n        return x.upper()\n\ns,t = input(), input()\nL = [0]*256\nfor i in t :\n    L[ord(i)] += 1\n\nans1 = ans2 = 0\nP = []\nfor i in s :\n    x = ord(i)\n    if L[x] > 0 :\n        L[x] -= 1\n        ans1 += 1\n    else :\n        P.append(i)\n\nfor i in P :\n    x = ord(change(i))\n    if L[x] > 0 :\n        L[x] -= 1\n        ans2 += 1\nprint(ans1, ans2)\n", "def main():\n    s, t = input(), input()\n    mappingS = list(s)\n    mappingT = list(t)\n    yay = 0\n    whoops = 0\n    offset =  ord('A') - ord('a')\n    for i in range(ord('a'), ord('z') + 1, 1):\n        sLower = mappingS.count(chr(i))\n        tLower = mappingT.count(chr(i))\n        sUpper = mappingS.count(chr(i+offset))\n        tUpper = mappingT.count(chr(i+offset))\n        contribution = min(sLower,tLower) + min(sUpper, tUpper)\n        yay += contribution\n        whoops += min(tLower + tUpper, sLower + sUpper) - contribution\n    print(\"{0} {1}\".format(yay, whoops))\n\ndef __starting_point():\n    main()\n__starting_point()", "msg = input()\nl = input()\nmsg = list(msg)\nd = {}\ny = 0\nw = 0\nfor i in l:\n    if i not in d:\n        d[i] = 0\n    d[i] += 1\n\nfor j in range(len(msg)):\n\ti = msg[j]\n\tif i in d and d[i] > 0:\n\t\td[i] -= 1\n\t\ty += 1\n\t\tmsg[j] = chr(30)\nfor i in msg:\n\n\tif ord(i) >= 97:\n\t\tif chr(ord(i)-32) in d and d[chr(ord(i)-32)] > 0:\n\t\t\tw += 1\n\t\t\td[chr(ord(i)-32)] -= 1\n\telse:\n\t\tif chr(ord(i)+32) in d and d[chr(ord(i)+32)] > 0 :\n\t\t\td[chr(ord(i)+32)] -= 1\n\t\t\tw += 1\nprint(y,w)", "s=input()\nt=input()\nscount=[]\ntcount=[]\nyay=0\nwhoop=0\nfor i in range(130):\n    scount.append(0)\n    tcount.append(0)\nfor i in range(len(s)):\n    scount[ord(s[i])]+=1\nfor i in range(len(t)):\n    tcount[ord(t[i])]+=1\nfor i in range(ord('a'),ord('z')+1):\n    lowmin=min(scount[i],tcount[i])\n    upmin=min(scount[ord(chr(i).upper())],tcount[ord(chr(i).upper())])\n    yay+=lowmin+upmin\n    scount[i]-=lowmin\n    tcount[i]-=lowmin\n    scount[ord(chr(i).upper())]-=upmin\n    tcount[ord(chr(i).upper())]-=upmin\n    whoop+=min(scount[i],tcount[ord(chr(i).upper())])+min(scount[ord(chr(i).upper())],tcount[i])\nprint(yay, whoop)    \n", "def tanya_and_postcard(tanya_message, newspaper_letters):\n    difference = ord('a') - ord('A')\n    yays_count = 0\n    whoopses_count = 0\n    letters_counts = get_letters_counts(newspaper_letters)\n\n    tanya_message = list(tanya_message)\n\n    for index in range(0, len(tanya_message)):\n        letter = tanya_message[index]\n\n        if (letter in letters_counts) and (letters_counts[letter] > 0):\n            letters_counts[letter] -= 1\n            yays_count += 1\n            tanya_message[index] = chr(0)\n\n    for letter in tanya_message:\n        letter = get_letter_in_opposite_casing(letter)\n\n        if (letter in letters_counts) and (letters_counts[letter] > 0):\n            letters_counts[letter] -= 1\n            whoopses_count += 1\n\n    return {'yays_count': yays_count, 'whoopses_count': whoopses_count}\n\n\ndef get_letters_counts(letters):\n    letters_counts = {}\n\n    for letter in letters:\n        if letter in letters_counts:\n            letters_counts[letter] += 1\n        else:\n            letters_counts[letter] = 1\n\n    return letters_counts\n\n\ndef get_letter_in_opposite_casing(letter):\n    if letter.islower():\n        return letter.upper()\n    else:\n        return letter.lower()\n\n\ndef main():\n    tanya_message = input()\n    newspaper_letters = input()\n\n    result = tanya_and_postcard(tanya_message, newspaper_letters)\n    print('{0} {1}'.format(result['yays_count'], result['whoopses_count']))\n\ndef __starting_point():\n    main()\n\n__starting_point()", "s = input().strip()\nt = input().strip()\n#print(s, t)\ncount_s = [0] * 100 #32 + 25\ncount_t = [0] * 100\nans1, ans2 = [0, 0]\nfor i in range(len(t)):\n    count_t[ord(t[i]) - ord('A')] += 1\nfor i in range(len(s)):\n    count_s[ord(s[i]) - ord('A')] += 1\nfor i in range(58):\n    Min= min(count_s[i], count_t[i])\n    count_s[i] -= Min\n    count_t[i] -= Min\n    ans1 += Min\n#print(ans1, count_s, count_t)\nfor i in range(58):\n    Min = min(count_s[i], count_t[(i + 32) % 64])\n    count_s[i] -= Min\n    count_t[(i + 32) % 64] -= Min\n    ans2 += Min\nprint(ans1, ans2)\n\"\"\"\nprint(count_s)\nprint(count_t)\n\"\"\"", "#!/usr/bin/env python3\n\nfrom collections import Counter\n\ns_set = Counter(input())\nt_set = Counter(input())\n\nyay_count = 0\nwhoops_count = 0\n\nfor s in s_set.keys():\n\tif s in t_set:\n\t\tnum_to_remove = min(s_set[s], t_set[s])\n\t\ts_set[s] -= num_to_remove\n\t\tt_set[s] -= num_to_remove\n\t\tyay_count += num_to_remove\n\ndef flip_case(c):\n\tif c in 'abcdefghijklmnopqrstuvwxyz':\n\t\treturn c.upper()\n\telse:\n\t\treturn c.lower()\n\nfor s in s_set.keys():\n\tS = flip_case(s)\n\tif S in t_set:\n\t\tnum_to_remove = min(s_set[s], t_set[S])\n\t\ts_set[s] -= num_to_remove\n\t\tt_set[S] -= num_to_remove\n\t\twhoops_count += num_to_remove\n\nprint(yay_count, whoops_count)", "from collections import Counter\ns = Counter(input())\nt = Counter(input())\nr1 = 0\nfor k in s:\n    d = min(s[k], t[k])\n    s[k] -= d\n    t[k] -= d\n    r1 += d\nr2 = 0\nfor k in s:\n    if k.islower():\n        l = k.upper()\n    else:\n        l = k.lower()\n    d = min(s[k], t[l])\n    r2 += d\n    s[k] -= d\n    t[l] -= d\nprint(r1, r2)"]