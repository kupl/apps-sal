["n, m, q = map(int, input().split())\na = sorted(map(int, input().split()), reverse=True)\nb = sorted(map(int, input().split()), reverse=True)\nc = sorted(map(int, input().split()), reverse=True)\ndp = [[[0] * 201 for _ in range(201)] for _ in range(201)]\nfor ijk in range(n + m + q + 1):\n    for i in range(min(n + 1, ijk + 1)):\n        for j in range(min(m + 1, ijk - i + 1)):\n            k = ijk - i - j\n            if k < 0 or k > q:\n                continue\n            if i + 1 <= n:\n                dp[i + 1][j][k] = max(dp[i + 1][j][k], dp[i][j][k])\n            if j + 1 <= m:\n                dp[i][j + 1][k] = max(dp[i][j + 1][k], dp[i][j][k])\n            if k + 1 <= q:\n                dp[i][j][k + 1] = max(dp[i][j][k + 1], dp[i][j][k])\n            if i + 1 <= n and j + 1 <= m:\n                dp[i + 1][j + 1][k] = max(dp[i + 1][j + 1][k], dp[i][j][k] + a[i] * b[j])\n            if i + 1 <= n and k + 1 <= q:\n                dp[i + 1][j][k + 1] = max(dp[i + 1][j][k + 1], dp[i][j][k] + a[i] * c[k])\n            if j + 1 <= m and k + 1 <= q:\n                dp[i][j + 1][k + 1] = max(dp[i][j + 1][k + 1], dp[i][j][k] + b[j] * c[k])\nprint(dp[n][m][q])", "r, g, b = map(int, input().split())\nred = list(map(int, input().split()))\ngreen = list(map(int, input().split()))\nblue = list(map(int, input().split()))\nred.sort()\ngreen.sort()\nblue.sort()\nred = red[::-1]\ngreen = green[::-1]\nblue = blue[::-1]\n\ndp = []\nfor i in range(r + 1):\n    temp = [[0] * (b + 1) for j in range(g + 1)]\n    dp.append(temp)\n\nanswer = 0 \n\nfor i in range(0, r + 1):\n    for j in range(0, g + 1):\n        for k in range(0, b + 1):\n            if i > 0 and j > 0:\n                dp[i][j][k] = max(dp[i][j][k], dp[i - 1][j - 1][k] + red[i - 1] * green[j - 1])\n            if i > 0 and k > 0:\n                dp[i][j][k] = max(dp[i][j][k], dp[i - 1][j][k - 1] + red[i - 1] * blue[k - 1])\n            if j > 0 and k > 0:\n                dp[i][j][k] = max(dp[i][j][k], dp[i][j - 1][k - 1] + green[j - 1] * blue[k - 1])\n                \n            answer = max(answer, dp[i][j][k])\nprint(answer)"]