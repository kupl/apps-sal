["read = lambda: list(map(int, input().split()))\nn = int(input())\na = list(read())\ns = set()\nfor i in a:\n    s.add(i)\nf1 = len(s) < 3\nf2 = len(s) == 3 and max(s) + min(s) == 2 * sorted(s)[1]\nprint('YES' if f1 or f2 else 'NO')\n", "n = int(input())\na = map(int, input().split())\nb = set(a)\nif len(b) <= 2:\n\tprint(\"YES\")\nelif len(b) > 3:\n\tprint(\"NO\")\nelse:\n\ta = []\n\tfor i in b:\n\t\ta.append(i)\n\ta.sort()\n\tif a[1] - a[0] == a[2] - a[1]:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")", "n = int(input())\na = sorted(list(set(list(map(int, input().split())))))\nif len((a)) < 3:\n    print('YES')\nelif len((a)) > 3:\n    print('NO')\nelse:\n    if a[1] - a[0] == a[2] - a[1]:\n        print('YES')\n    else:\n        print('NO')", "n=int(input())\nip=list(map(int,input().split()))\ncount=0\nused=[]\nfor i in ip:\n    if i not in used and count<5:\n        used.append(i)\n        count+=1\nif count<=2:\n    print('YES')\nelif count>3:\n    print('NO')\nelse:\n    used=sorted(used)\n    if used[1]-used[0]==used[2]-used[1]:\n        print('YES')\n    else:\n        print('NO')\n", "input()\na = list(map(int, input().split()))\na = sorted(set(a))\n\nif len(a) >= 4:\n    print(\"NO\")\nelif len(a) <= 2:\n    print(\"YES\")\nelse:\n    if a[1] - a[0] == a[2] - a[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n", "n = int(input())\na = [int(x) for x in input().split()]\n\nd = sorted(set(a))\n\nif len(d) <= 2 or len(d) == 3 and d[0]+d[2] == 2*d[1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "3\n\nn = int(input())\narray = list(set(list(map(int, input().split()))))\narray.sort()\n\nif len(array) < 3:\n    print(\"YES\")\nelif len(array) > 3 or array[1] - array[0] != array[2] - array[1]:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n\n", "n = int(input())\na = set(map(int, input().split()))\nif(len(a) > 3):\n    print(\"NO\")\nelif(len(a) < 3):\n    print(\"YES\")\nelse:\n    a = list(a)\n    a.sort()\n    if((a[0] + a[2]) / 2 == a[1]):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\nA = list(map(int, input().split()))\nB = []\nl = 0\nfor i in A:\n\tif i not in B:\n\t\tB.append(i)\n\t\tl += 1\n\tif l > 3:\n\t\tprint(\"NO\")\n\t\treturn\nB.sort()\nif l < 3:\n\tprint(\"YES\")\nelse:\n\tif B[0] + B[2] == 2 * B[1]:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "from sys import stdin\n\nn = int(stdin.readline())\n\nnumbers = set(int(x) for x in stdin.readline().split())\n\nif len(numbers) > 3:\n    print('NO')\nelif len(numbers) < 3:\n    print('YES')\nelse:\n    s = sorted(numbers)\n    if s[2] - s[1] == s[1] - s[0]:\n        print('YES')\n    else:\n        print('NO')\n", "n = int(input())\ndata = list(map(int,input().split()))\nnums = set(data)\nif len(nums)<=2:\n    print(\"YES\")\nelif len(nums)==3:\n    tmp = list(sorted(list(nums)))\n    if tmp[1]-tmp[0]==tmp[2]-tmp[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")", "def solve():\n    input()\n    a = list(map(int, input().split()))\n    nums = set()\n    for n in a:\n        nums.add(n)\n\n    if len(nums) <= 2:\n        print('YES')\n        return\n\n    if len(nums) == 3:\n        ma = max(nums)\n        mi = min(nums)\n        nums.remove(ma)\n        nums.remove(mi)\n        mid = nums.pop()\n        if ma - mid == mid - mi:\n            print('YES')\n            return\n\n    print('NO')\n\n\ndef main():\n    solve()\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, a = int(input()), set(map(int, input().split()))\nif (len(a) <3):\n    print(\"YES\")\nelif len(a) == 3:\n    a = sorted(list(a))\n    if a[1] - a[0] == a[2] - a[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")", "from sys import stdout\nn =int(input())\ns = [int(i) for i in input().split()]\na= s[0]\nb = -1\nc = -1\nfor i in s[1:]:\n\tif i!=a and i!=b and i!=c:\n\t\tif b <0:\n\t\t\tb = i\n\t\telif c <0:\n\t\t\tc = i\n\t\telse:\n\t\t\tprint(\"NO\")\n\t\t\tbreak\nelse:\n\tif c == -1:\n\t\tprint(\"YES\")\n\telse:\n\t\tr = (max(a,b,c) - min(a,b,c))/2+ min(a,b,c)\n\t\tif a==r or b ==r or c == r:\n\t\t\tprint(\"YES\")\n\t\telse:\n\t\t\tprint(\"NO\")\n\t\t\n", "n = int(input())\na = list(map(int,input().split()))\n\ns = set()\nfor el in a:\n    s.add(el)\n    if len(s) > 3:\n        break\n\nif len(s) <= 2:\n    print('YES')\nelif len(s) > 3:\n    print('NO')\nelse:\n    sl = sorted(list(s))\n    print('YES' if sl[0] + sl[2] == 2 * sl[1] else 'NO')\n", "from collections import defaultdict\nimport sys, os, math\n\ndef __starting_point():\n    #n, m = list(map(int, input().split()))\n    #sys.stdout.flush()\n    n = int(input())\n    arr = list(map(int, input().split()))\n    temp = []\n    for num in arr:\n        if num not in temp:\n            temp.append(num)\n        if len(temp) > 3:\n            print(\"NO\")\n            return\n    temp.sort()\n    if len(temp) < 3 or temp[0] + temp[2] == 2 * temp[1]:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n__starting_point()", "temp=input()\ntemp=input().split()\narr=[int(k) for k in temp]\n\ns=sorted(list(set(arr)))\n\nif len(s)>3:\n\tprint(\"NO\")\nelif len(s)<3:\n\tprint(\"YES\")\nelse:\n\tif s[2]+s[0]==2*s[1]:\n\t\tprint(\"YES\")\n\telse:\n\t\tprint(\"NO\")\n", "n = int(input())\na = sorted(set(map(int, input().split())))\nif len(a) > 3:\n    print(\"NO\") \nelif len(a) == 1:\n    print(\"YES\")\nelif len(a) == 2:\n    print('YES')\nelse:\n    if ((a[0] + a[2]) / 2 != a[1]):\n        print('NO')\n    else:\n        print('YES')", "import sys, math\nn = int(input())\nz = list(map(int, input().split()))\na = max(z)\nb = min(z)\ny = (a + b) // 2\nx1 = a - y\nx2 = a - b\nflag = [0, 0, 0]\nfor i in range(n):\n    if z[i] == y:\n        flag[0] += 1\n    else:\n        if z[i] < y and z[i] + x1 == y:\n            flag[0] += 1\n        else:\n            if z[i] - x1 == y:\n                flag[0] += 1\n        if z[i] + x2 == a or z[i] == a:\n            flag[1] += 1\n        if z[i] - x2 == b or z[i] == b:\n            flag[2] += 1\nif flag.count(n) >= 1:\n    print('YES')\nelse:\n    print('NO')", "N = int(input())\nA = set(list(map(int, input().split())))\nif len(A) == 1:\n    print(\"YES\")\nelif len(A) == 2:\n    print(\"YES\")\nelif len(A) == 3:\n    A = list(A)\n    max_v = max(A)\n    min_v = min(A)\n    md_v = sum(A) - max_v - min_v\n    if md_v * 2 == max_v + min_v:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"NO\")\n", "n = int(input())\na = list(map(int,input().split()))\nr = set(a)\nif len(r)<=3:\n    r = list(r)\n    r.sort()\n    if len(r)==1 or len(r)==2 or r[1]-r[0] == r[2]-r[1]:\n        print('YES')\n    else:\n        print('NO')\nelse:\n    print('NO')", "n = int(input())\nl = list(map(int, input().split()))\ns = set()\nfor i in l:\n    s.add(i)\nl = list(s)\nl.sort()\nif len(l) > 3:\n    print('NO')\nif len(l) == 3:\n    if (l[0] + l[2]) / 2 == l[1]:\n        print('YES')\n    else:\n        print('NO')\nif len(l) <= 2:\n    print('YES')", "import sys\n\nn = int(input())\na = [int(x) for x in input().split()]\naa = list(set(a))\naa.sort()\n\nif len(aa) > 3:\n    print(\"NO\")\n    return\nif len(aa) < 3:\n    print(\"YES\")\n    return\nif (aa[0] + aa[2]) % 2 != 0:\n    print(\"NO\")\n    return\n\nif 2 * aa[1] == aa[0] + aa[2]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "#!/usr/local/env python3\n# -*- encoding: utf-8 -*-\nimport sys\n\n\ndef readnlines(f_in):\n    n = int(f_in.readline().strip())\n    s = set()\n    content = f_in.readline().strip()\n    for i, line in zip(list(range(n)), content.split(' ')):\n        if line.isdigit():\n            s.add(int(line))\n        else:\n            s.add(line)\n    return s\n\n\ndef print_args():\n    print(\"Recieved {} arguments = {}.\".format(len(sys.argv), sys.argv))\n\n\ndef intersect(l1, r1, l2, r2):\n    left = max(l1, l2)\n    right = min(r1, r2)\n    return left, right, max(0, right - left + 1)\n\n\ndef solve():\n    m = readnlines(sys.stdin)\n    uniques = sorted(m) \n    #print(\"len(set(m)) = {}\".format(len(set(m))))\n    #print(uniques)\n    if len(uniques) > 3:\n        return \"NO\"\n    elif len(uniques) == 3:\n        if uniques[2] + uniques[0] == 2 * uniques[1]:\n            return \"YES\"\n        return \"NO\"\n    else:\n        return \"YES\"\n\n\ndef __starting_point():\n   ans = solve()\n   print(ans)\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\n\nb = set(a)\n\nif len(b) >= 4:\n    print(\"NO\")\nelse:\n    x = list(b)\n    x.sort()\n    if len(x) == 1:\n        print(\"YES\")\n    elif len(x) == 2:\n        print(\"YES\")\n    else:\n        if x[1] * 2 == x[0] + x[2]:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n"]