["n,k,a = map(int,input().split())\nm = int(input())\nx = [int(y) for y in input().split()]\n\ndef check(K):\n    used = [0]*(n+1)\n    for i in range(K):\n        used[x[i]] = 1\n    for i in range(1,n+1):\n        used[i]+=used[i-1]\n    have = 0\n    i = a\n    while i<n+1:\n        if used[i]-used[i-a]==0:\n            have+=1\n            i+=a\n        i+=1\n    return have>=k\n\nif check(m):\n    print(-1)\nelse:\n    low = -1\n    high = m\n    while high-low>1:\n        if check((low+high+1)//2):\n            low = (low+high+1)//2\n        else:\n            high = (low+high+1)//2\n    print(high)", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n", "n,k,b = map(int,input().split())\nm = int(input())+1\nb += 1\na = list(map(int,input().split()))\nl,r = 0,m\nwhile r-l > 1:\n    d = (l+r)//2\n    c = sorted(a[:d])\n    if sum([(p-q)//b for q,p in zip([0]+c,c+[n+1])]) >= k:\n        l = d\n    else:\n        r = d\nprint(r%m-(r==m))", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "n,k,a=list(map(int,input().split()))\nm=int(input())+1\nx=list(map(int,input().split()))+[0]\nl,r=0,m\nwhile r-l>1:\n\td=(l+r)//2\n\ty=sorted(x[:d])\n\tif sum((q-p)//(a+1) for p,q in zip([0]+y,y+[n+1]))>=k:l=d\n\telse:r=d\nprint(r%m-(r==m))\n\n", "import math\nfrom bisect import bisect_right, bisect_left\nfrom collections import Counter, defaultdict\nfrom heapq import heappop, heappush\nfrom itertools import accumulate\n\nR = lambda: map(int, input().split())\nmm, k, a = R()\njunk = int(input())\narr = list(R())\n\nl, r = 0, len(arr)\nwhile l < r:\n    m = (l + r) // 2\n    tarr = [0] + sorted(arr[:m + 1]) + [mm + 1]\n    cnt = 0\n    for i in range(1, len(tarr)):\n        cnt += (tarr[i] - tarr[i - 1]) // (a + 1)\n    if cnt < k:\n        r = m\n    else:\n        l = m + 1\nprint(l + 1 if l < len(arr) else -1)", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn, k, a = mints()\n\ta += 1\n\tm = mint()\n\tx = list(mints())\n\tl = 0\n\tr = m + 1\n\twhile r - l > 1:\n\t\tc = (l + r) // 2\n\t\tb = x[:c]\n\t\tb.sort()\n\t\tlast = 0\n\t\tcnt = 0\n\t\tfor i in b:\n\t\t\tif i != last:\n\t\t\t\tcnt += (i-last) // a\n\t\t\tlast = i\n\t\tcnt += (n+1-last)//a\n\t\tif cnt < k:\n\t\t\tr = c\n\t\telse:\n\t\t\tl = c\n\tif r == m + 1:\n\t\tr = -1\n\tprint(r)\n\nsolve()\n"]