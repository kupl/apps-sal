["def solve():\n    n, r = list(map(int, input().split()))\n    k = min(r, n - 1)\n    print(k * (k + 1) // 2 + (r >= n))\n\n\nfor i in range(int(input())):\n    solve()\n", "#!usr/bin/env python3\nfrom collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom itertools import permutations, accumulate\nimport sys\nimport math\nimport bisect\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    t = I()\n    for _ in range(t):\n        n,r = LI()\n        if r < n:\n            print((r*(r+1))>>1)\n        else:\n            ans = (n*(n-1))>>1\n            ans += 1\n            print(ans)\n    return\n\n#Solve\ndef __starting_point():\n    solve()\n\n__starting_point()", "q = int(input())\nfor _ in range(q):\n    n,r = map(int,input().split())\n    max_k = min(n-1,r)\n    wyn = max_k*(max_k+1)//2\n    if r >= n:\n        wyn += 1\n    print(wyn)", "t=int(input())\nfor i in range(t):\n    n,r=list(map(int,input().split()))\n    if r>=n:\n        ans=(n-1)*n//2+1\n        print(ans)\n    else:\n        ans=r*(r+1)//2\n        print(ans)\n", "import sys\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return list(map(int, tinput()))\n\ndef fiinput():\n    return list(map(float, tinput()))\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():  \n    #n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = srlinput()\n    #q = linput()\n    n, r = rinput()\n    print((r >= n) + min(n * (n - 1), r * (r + 1)) // 2)\n            \n    \n\nfor i in range(iinput()):\n    main()\n", "# import sys\n# input=sys.stdin.readline\n\n\nt=int(input())\nfor _ in range(t):\n    n,r=list(map(int,input().split()))\n    if r<n:\n        print((r*(r+1))//2)\n    else:\n        print((n*(n-1))//2+1)", "from sys import stdin, stdout\nimport math\n\nt = int(stdin.readline())\nfor _ in range(t):\n    n, r = list(map(int, stdin.readline().split()))\n    cnt = 0\n    if r < n:\n        print(r*(r+1)//2)\n    else:\n        print(n*(n-1)//2+1)\n\n", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N, r = list(map(int, input().split()))\n        if r >= N:\n            print(N * (N-1) // 2 + 1)\n        else:\n            print(r * (r+1) // 2)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "from math import *\n\ndef r1(t):\n    return t(input())\n\ndef r2(t):\n    return [t(i) for i in input().split()]\n\nfor _ in range(r1(int)):\n    n, r = r2(int)\n    if n > r:\n        print(r*(r + 1) // 2)\n    else:\n        print(n * (n - 1) // 2 + 1)\n", "for _ in range(int(input())):\n    n, r = list(map(int, input().split()))\n    x = min(n-1, r)\n    p = 0\n    if r >= n:\n        p = 1\n    print(x*(x+1)//2 + p)\n", "read = lambda: map(int, input().split())\nt = int(input())\nfor _ in range(t):\n\tn, r = read()\n\tx = min(n - 1, r)\n\tans = x * (x + 1) // 2\n\tif r >= n: ans += 1\n\tprint(ans)", "#list(map(int,input().split()))\nt=int(input())\nfor _ in range(t):\n    n,r=list(map(int,input().split()))\n    r=min(r,n)\n    if(r==n):\n        su=((r-1)*(r))//2\n        su+=1\n        print(su)\n    else:\n        print((r*(r+1))//2)\n        \n        \n    \n    \n    \n", "import sys\ninput=lambda: sys.stdin.readline().rstrip()\nt=int(input())\nfor _ in range(t):\n  n,r=map(int,input().split())\n  if n>r:\n    print(r*(r+1)//2)\n  else:\n    print(n*(n-1)//2+1)", "def solve():\n    ans = 0\n    n, k = map(int, input().split())\n    u = min(k, n - 1)\n    ans += (1 + u) * u // 2\n    if k > n - 1:\n        ans += 1\n    print(ans)\n\nt = int(input())\nfor _ in range(t):\n    solve()", "def read_int():\n    return int(input())\n\n\ndef read_ints():\n    return list(map(int, input().split(' ')))\n\n\nt = read_int()\nfor case_num in range(t):\n    n, r = read_ints()\n    r = min(r, n)\n    l = min(r, n - 1)\n    ans = l * (l + 1) // 2\n    if r == n:\n        ans += 1\n    print(ans)\n", "import sys\ninput = sys.stdin.readline\n\nt=int(input())\nfor tests in range(t):\n    n,r=list(map(int,input().split()))\n\n    if r>=n:\n        print((n-1)*n//2+1)\n    else:\n        print(r*(r+1)//2)\n        \n\n    \n", "for _ in range(int(input())):\n    n,r=map(int,input().split())\n    if r>n:\n        r=n\n    ans=0\n    if r==n:\n        ans+=1\n        r=n-1\n    print(ans+((r*(r+1))//2))", "t = int(input())\n\nfor case in range(t):\n    n, r = list(map(int, input().split(' ')))\n\n    if r >= n:\n        print(((n - 1) * n) // 2 + 1)\n    else:\n        print(r * (r + 1) // 2)", "import sys\ninput=sys.stdin.readline\nt=int(input())\nfor i in range(t):\n    n,r=map(int,input().split())\n    if r<n:print((r*(r+1))//2)\n    else:print((n*(n-1))//2+1)", "t = int(input())\nwhile t:\n    n, r = list(map(int, input().split()))\n    ans = 0\n    if n <= r:\n        ans += 1\n    ans += min(n - 1, r) * (min(n - 1, r) + 1) // 2\n    print(ans)\n    t -= 1\n", "import sys\ninput = sys.stdin.readline\nfor _ in range(int(input())):\n  n, r = map(int, input().split())\n  if r >= n:\n    print(n * (n - 1) // 2 + 1)\n  else:\n    print(r * (r + 1) // 2)", "t=int(input())\nfor _ in range(t):\n  a,b=map(int,input().split())\n  if a>b:\n    print((b*(b+1))//2)\n  else:\n    print((a*(a-1))//2+1)", "import sys\ninput = sys.stdin.readline\nt = int(input())\nfor _ in range(t):\n  n,r = map(int,input().split())\n  if r >= n:\n    ans = 1\n    r = n-1\n  else:\n    ans = 0\n  ans += r*(r+1)//2\n  print(ans)", "import sys\nlines = sys.stdin.readlines()\nT = int(lines[0].strip())\n# (N, K) = map(int, lines[0].strip().split(\" \"))\nfor t in range(T):\n    (n,r) = map(int, lines[t+1].strip().split(\" \"))\n    mini = min(n-1, r)\n    res = mini * (mini+1)//2\n    if n-1 < r: res += 1\n    print(res)", "import sys\ninput = sys.stdin.readline\nfor f in range(int(input())):\n    n,r=map(int,input().split())\n    if r<n:\n        print((r*(r+1))//2)\n    else:\n        sol=((n-1)*n)//2\n        sol+=1\n        print(sol)"]