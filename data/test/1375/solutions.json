["\"\"\"\nCodeforces Contest 266 Div 2 Problem C\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\ndef main():\n    n, = read()\n    a = read()\n    s = sum(a)\n    if s%3:\n        print(0)\n        return\n    s //= 3\n    t = 0\n    ct = 0\n    res = 0\n    for i in range(n-1):\n        t += a[i]\n        if t == 2*s:\n            res += ct\n        if t == s:\n            ct += 1\n    print(res)\n\n################################### NON-SOLUTION STUFF BELOW\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "import sys\n\nn = int(sys.stdin.readline())\na = [int(x) for x in sys.stdin.readline().split()]\n\ns = [a[0]]\nsucet = a[0]\nfor i in range(1, len(a)):\n    s.append(s[-1] + a[i])\n    sucet += a[i]\n\nif sucet % 3 != 0:\n    print(0)\nelse:\n    moznosti = 0\n    dvoj = 2*(sucet//3)\n    kdedvoj = [(0, 1)[s[0] == dvoj]]\n    for i in range(1, len(s)):\n        kdedvoj.append(kdedvoj[-1] + (0, 1)[s[i] == dvoj])\n    if sucet == 0:\n        if kdedvoj[-1] - 2 < 1: print(0)\n        elif kdedvoj[-1] - 2 == 1: print(1)\n        else: print((kdedvoj[-1]**2 - 3*kdedvoj[-1] + 2)//2)\n    else:\n        j = n\n        for i in range(len(a)):\n            if s[i] == sucet//3:\n                j = i\n                break\n        k = -1\n        for i in range(len(a)-1, -1, -1):\n            if s[i] == sucet:\n                k = i\n                break\n        for i in range(j, k):\n            if s[i] == sucet//3:\n                moznosti += (kdedvoj[-1] - kdedvoj[i]);\n        print(moznosti)", "n=int(input())\n\na=list(map(int, input().split()))\n\ns0=sum(a)\nif s0%3!=0:\n    print(0)\nelse:\n    s=s0//3\n    d=[0 for i in range(n)]\n    temp=a[-1]\n    d[-1]= 1 if temp==s else 0\n    for i in range(2, n+1):\n        temp+=a[-i]\n        d[-i]=d[-i+1] + (1 if temp==s else 0)\n    k=0\n    temp=0\n    for i in range(n-2):\n        temp+=a[i]\n        if temp==s:\n            k+=d[i+2]\n    print(k)\n", "n, a = int(input()), list(map(int, input().split()))\nsums, s = [[0, 0]] + [0] * n, sum(a)\nfor i in range(n):\n    sums[i + 1] = [sums[i][0] + a[i], sums[i][1] + int(i != n - 1 and (sums[i][0] + a[i]) * 3 == s * 2)]\nprint(0 if s % 3 else sum(sums[-1][1] - sums[i][1] for i in range(1, n) if sums[i][0] * 3 == s))\n", "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\nfor i in a[1:]:\n    b.append(b[-1] + i)\nd = [a[-1]]\nfor i in a[:-1][::-1]:\n    d.append(d[-1] + i)\nd = d[::-1]\nc = [0] * n\ns = b[n - 1]\n\nif b[0] * 3 == s:\n    c[0] = 1\nfor i in range(1, n):\n    if b[i] * 3 == s:\n        c[i] = c[i - 1] + 1\n    else:\n        c[i] = c[i - 1]\n\nans = 0\nfor i in range(2, n):\n    if d[i] * 3 == s:\n        ans = ans + c[i - 2]\n\nprint(ans)", "def main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    s = sum(a)\n    \n    if s % 3 != 0 or len(a) < 3:\n        print(0)\n        return\n\n    _s = s // 3\n    sums = [0] * (n+1)\n    ss = 0\n    for i in range(n-1, 1, -1):\n        ss += a[i]\n        sums[i] = sums[i+1] + int(ss == _s)\n\n    res = 0\n    ss = 0 \n    for i in range(n-2):\n        ss += a[i]\n        if ss == _s:\n            res += sums[i+2]\n    print(res)\n            \n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "from array import array\nfrom bisect import bisect_right as bisect\n\ndef solve(nums):\n    nums = array('l', nums)\n\n    full_sum = sum(nums)\n    third, modulo = divmod(full_sum, 3)\n    two_thirds = third * 2\n\n    if modulo:\n        return 0\n\n    a = array('l')\n    b = array('l')\n\n    len_nums_m2 = len(nums) - 2\n    len_nums_m1 = len(nums) - 1\n\n    accum = 0\n    for i, n in enumerate(nums, 1):\n        accum += n\n        if accum == third and i <= len_nums_m2:\n            a.append(i)\n        if accum == two_thirds and 1 < i <= len_nums_m1:\n            b.append(i)\n\n    len_b = len(b)\n    result = 0\n    for n in a:\n        subsize_b = len_b - bisect(b, n)\n        result += subsize_b\n\n    return result\n\n\ndef __starting_point():\n    _ = int(input())\n    nums = list(map(int, input().split()))\n    answer = solve(nums)\n    print(answer)\n\n__starting_point()", "from array import array\nfrom bisect import bisect_right as bisect\n\ndef solve(nums):\n    nums = array('l', nums)\n\n    full_sum = sum(nums)\n    third, modulo = divmod(full_sum, 3)\n    two_thirds = third * 2\n\n    if modulo:\n        return 0\n\n    a = array('l')\n    b = array('l')\n\n    len_nums_m2 = len(nums) - 2\n    len_nums_m1 = len(nums) - 1\n\n    accum = 0\n    for i, n in enumerate(nums, 1):\n        accum += n\n        if accum == third and i <= len_nums_m2:\n            a.append(i)\n        if accum == two_thirds and 1 < i <= len_nums_m1:\n            b.append(i)\n\n    bis = 0\n    len_b = len(b)\n    result = 0\n    for n in a:\n        bis = bisect(b, n, bis)\n        subsize_b = len_b - bis\n        result += subsize_b\n\n    return result\n\n\ndef __starting_point():\n    _ = int(input())\n    nums = list(map(int, input().split()))\n    answer = solve(nums)\n    print(answer)\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nk = 0\nif n > 3 and s % 3 == 0:\n  s //= 3\n  c = [0] * n\n  t = 0\n  for i in range(n):\n    t += a[n - i - 1]\n    if t == s:\n      c[n - i - 1] = 1\n  for i in range(n - 1):\n    c[n - i - 2] += c[n - i - 1]\n  t = 0\n  for i in range(n - 2):\n    t += a[i]\n    if t == s:\n      k += c[i + 2]\nprint(k)", "def NoW(xs):\n    if sum(xs) % 3 != 0:\n        return 0\n    else:\n        part = sum(xs) // 3\n        ci = ret = 0\n        acum = xs[0]\n        for i, x in enumerate(xs[1:]):\n            if acum == 2*part:\n                # print(\"2. x=\",x)\n                ret += ci\n            if acum == part:\n                # print(\"1. x=\",x)\n                ci += 1\n            acum += x\n        \n        return ret\n        \ninput()\nxs = list(map(int, input().split()))\nprint(NoW(xs))    ", "ints = int(input())\nlistx = list(map(int, input().split(' ')))\nsumx = sum(listx)\nif sumx % 3 != 0:\n    print(0)\n\nelse:\n    num1 = 0\n    num2 = 0\n    ctotal = 0\n    listx.reverse()\n    listx.remove(listx[0])\n    listx.reverse()\n    for i in listx:\n        ctotal += i\n        if ctotal == int(sumx*2/3):\n            num2 += num1\n        if ctotal == int(sumx*1/3):\n            num1 += 1\n    print(num2)\n", "#input\nn=int(input())\nalist=[int(x) for x in input().split()]\n\n#variables\npsum=0\nl=0\nlim=sum(alist)//3\nways=0\n\n#main\nif sum(alist)%3!=0:\n\tprint(0)\n\tquit()\n\nfor i in range(n-1):\n\tpsum+=alist[i]\n\tif psum==2*lim:\n\t\tways+=l\n\tif psum==lim:\n\t\tl+=1\nprint(ways)", "n = int(input())\nt = [0] + list(map(int, input().split()))\nfor i in range(n): t[i + 1] += t[i]\np = [0] * (n + 1)\ns = t[-1]\na = s // 3\nb = s - a\nif s == 3 * a:\n    for i in range(1, n - 1):\n        p[i] += p[i - 1]\n        if t[i] == a: p[i] += 1\nprint(sum(p[i] for i in range(1, n - 1) if t[i + 1] == b))", "n = int(input())\nt = list(map(int, input().split()))\nq, s = 0, sum(t)\nif s % 3 == 0:\n    a = s // 3\n    b = s - a\n    s = d = 0\n    for i in range(n - 1):\n        s += t[i]\n        if s == b: q += d\n        if s == a: d += 1\nprint(q)", "n = int(input())\na = list(map(int, input().split()))\nret, s = 0, sum(a)\n\nif s % 3 == 0:\n    p1 = s // 3\n    p2 = s - p1\n    s = c = 0\n    for i in range(n - 1):\n        s += a[i]\n        if s == p2:\n            ret += c\n        if s == p1:\n            c += 1\nprint(ret)\n", "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\nfor i in a[1:]:\n    b.append(b[-1] + i)\nd = [a[-1]]\nfor i in a[:-1][::-1]:\n    d.append(d[-1] + i)\nd = d[::-1]\nc = [0] * n\ns = b[n - 1]\nif b[0] * 3 == s:\n    c[0] = 1\nfor i in range(1, n):\n    if b[i] * 3 == s:\n        c[i] = c[i - 1] + 1\n    else:\n        c[i] = c[i - 1]\nans = 0\nfor i in range(2, n):\n    if d[i] * 3 == s:\n        ans = ans + c[i - 2]\nprint(ans)", "3\n\ninput()\nnums = list(map(int, input().split()))\nsum_n = sum(nums)\nans = current_sum = one_third = 0\nfor x in nums[:-1]:\n    current_sum += x\n    if current_sum == 2 / 3 * sum_n:\n        ans += one_third\n    if current_sum == 1 / 3 * sum_n:\n        one_third += 1\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nb = [a[0]]\nfor i in a[1:]:\n    b.append(b[-1] + i)\nd = [a[-1]]\nfor i in a[:-1][::-1]:\n    d.append(d[-1] + i)\nd = d[::-1]\nc = [0] * n\ns = b[n - 1]\nif b[0] * 3 == s:\n    c[0] = 1\nfor i in range(1, n):\n    if b[i] * 3 == s:\n        c[i] = c[i - 1] + 1\n    else:\n        c[i] = c[i - 1]\nans = 0\n\nfor i in range(2, n):\n    if d[i] * 3 == s:\n        ans = ans + c[i - 2]\nprint(ans)", "n=int(input())\nlis=input().split()\nfor i in range(n):\n    lis[i]=int(lis[i])\nlis=[0]+lis\nlis1=[0]\nfor i in range(1,n+1):\n    lis1.append(lis1[i-1]+lis[i])\n\nif lis1[n]==0:\n    lis2=[]\n    for i in range(1,n):\n        if lis1[i]==0:\n            lis2.append(i)\n    m=len(lis2)\n    if m>=2:\n        print(int(m*(m-1)/2))\n    else:\n        print(0)\nelse:\n    lis2=[]\n    lis3=[]\n    for i in range(n):\n        if lis1[i]==lis1[n]/3:\n            lis2.append(i)\n        if lis1[i]==lis1[n]*2/3:\n            lis3.append(i)\n    m1=len(lis2)\n    m2=len(lis3)\n    if m1>=1 and m2>=1:\n        lis4=[0 for k in range(m1)]\n        for i in range(m1):\n            j=0\n            while j<=m2-1 and lis3[j]<=lis2[i]:\n                j+=1\n            lis4[i]=m2-j\n        print(sum(lis4))     \n    else:\n        print(0)\n        \n", "n = int(input())\na = [int(x) for x in input().split()]\ns = sum(a)\nif s % 3:\n\tprint(0)\n\treturn\ncur = 0\ncnt = 0\ns //= 3\nans = 0\nfor x in a:\n\tcur += x\n\tif s == 0:\n\t\tif cur == 0:\n\t\t\tcnt += 1\n\t\tcontinue\n\tif cur == s:\n\t\tcnt += 1\n\tif cur == s * 2:\n\t\tans += cnt\nif s == 0:\n\tprint((cnt - 1) * (cnt - 2) // 2)\nelse:\n\tprint(ans)\n", "inp=input().split(\" \")\nn=inp[0]\nss=0\na=[]\ng=[]\ninp1=input().split(\" \")\np=[]\nz=0\n\nfor i in range(int(n)):\n    a.append(int(inp1[i]))\nans=0\ns=0\nfor i in range(len(a)):\n    s+=a[i]\nif s%3!=0:\n    print('0')\nelse:\n    s//=3\n    ss=0\n    k=0\n    l=0\n    for n in a:\n        k+=n\n        if s==0:\n            if k==0:\n                l+=1\n                continue\n        if k==s:\n            l+=1\n        if k==s*2:\n            ans+=l\n    if s==0:\n        print(((l-1)*(l-2))//2)\n    else:\n        print(ans)", "def main():\n    input()\n    l = list(map(int, input().split()))\n    s, res = sum(l), 0\n    if not s % 3:\n        s //= 3\n        s2 = s * 2\n        tot = t = 0\n        del l[-1]\n        for x in l:\n            tot += x\n            if tot == s2:\n                res += t\n            if tot == s:\n                t += 1\n    print(res)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def solve2(n, c):\n    dp = [0 for _ in range(n)]\n    r = 0\n    p = 0\n\n    for i in range(n):\n        dp[i] = c[i] + dp[i-1] if i > 0 else c[i]\n\n    t = dp[n-1] // 3\n\n    if t * 3 != dp[n-1]:\n        return 0\n\n    for i in range(n-1):\n        if dp[i] == 2 * t:\n            r += p\n        if dp[i] == t:\n            p += 1\n\n    return r\n\ndef __starting_point():\n    num_el = int(input())\n    values = list(map(int, input().split()))\n    print(solve2(num_el, values))\n__starting_point()", "n = int(input())\nmas = list(map(int, input().split(\" \")))\nmas2 = [0] * n\nmas3 = [0] * n\nsumm = sum(mas)\nif summ % 3 != 0:\n    print(0)\nelse:\n    summ /= 3\n    su=0\n    schet=0\n    for i in range(n):\n        su+=mas[i]\n        if su==summ:\n            mas2[i]=1\n\n    su=0\n    schet=0\n    for i in range(n):\n        su+=mas[n-i-1]\n        if su==summ:schet+=1\n        mas3[n-i-1]=schet\n    res=0\n    for i in range(n-2):\n        if mas2[i]:res+=mas3[i+2]\n    print(res)", "import bisect\n\nn = int(input())\na = [int(x) for x in input().split()]\ns, p, k = sum(a), a[0], sum(a) / 3\nb, c = [], []\nfor i in range(len(a)):\n    if s == k:\n        c.append(i)\n    if p == k:\n        b.append(i)\n    s -= a[i]\n    if i < n - 1:\n        p += a[i+1]\nif (len(b) != 0) and (b[-1] == n-1):\n    b = b[:-1]\nif (len(c) != 0) and (c[0] == 0):\n    c = c[1:]\nres = 0\ne = len(c)\nfor i in b:\n    res += e - bisect.bisect_left(c, i + 2)\nprint(res)\n"]