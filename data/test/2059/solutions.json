["n = int(input())\nnums = [int(x) for x in input().split()]\nans = 10 ** 12\nfor idx, num in enumerate(nums):\n    dist = max(idx, n - idx - 1)\n    curr = num // dist\n    ans = min(ans, curr)\nprint(ans)", "def main():\n    from sys import stdin, stdout\n\n    def read():\n        return stdin.readline().rstrip('\\n')\n\n    def read_array(sep=None, maxsplit=-1):\n        return read().split(sep, maxsplit)\n\n    def read_int():\n        return int(read())\n\n    def read_int_array(sep=None, maxsplit=-1):\n        return [int(a) for a in read_array(sep, maxsplit)]\n\n    def write(*args, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in args) + end)\n\n    def write_array(array, **kwargs):\n        sep = kwargs.get('sep', ' ')\n        end = kwargs.get('end', '\\n')\n        stdout.write(sep.join(str(a) for a in array) + end)\n\n    n = read_int()\n    nums = read_int_array()\n    out = nums[0]\n    first = nums[0]\n    for i in range(1, n):\n        out = min(out, min(nums[i], first) // i)\n    last = nums[-1]\n    for i in range(n-2, 0, -1):\n        out = min(out, min(nums[i], last) // (n-1 - i))\n    write(out)\n\nmain()\n", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 10 ** 10\n    for i in range(n):\n        x = i if i > n - i - 1 else n - i - 1\n        ans = min(ans, arr[i] // x)\n    print(ans)\nmain()", "n = int(input())\nA = list(map(int, input().split()))\nk = 10 ** 10\nfor i in range(1, n - 1):\n    k = min(k, min(A[0], A[i]) // i)\n    k = min(k, min(A[-1], A[i]) // (n - i - 1))\nk = min(k, min(A[0], A[-1]) // (n - 1))\nprint(k)", "n = int(input())\narr = list(map(int, input().split()))\nres = float('inf')\nfor i in range(1, n):\n    res = min(res, min(arr[i], arr[0]) // i)\nfor i in range(n - 1):\n    res = min(res, min(arr[i], arr[n - 1]) // (n - 1 - i))\nprint(res)\n", "n = int(input())\na = list(map(int, input().split()))\nans = float('inf')\nfor i in range(n):\n    ans = min(ans, a[i] // max(i,  n - i - 1))\nprint(ans)", "n = int(input())\na = list(map(int, input().split()))\nmax1 = float('inf')\nfor q in range(len(a)):\n    if q >= n-q-1:\n        max1 = min(max1, min(a[q], a[0])//q)\n    if q <= n-q-1:\n        max1 = min(max1, min(a[q], a[-1]) // (n-q-1))\nprint(max1)\n", "def solve(a):\n    for ea in map(enumerate, (a, a[::-1])):\n        next(ea)\n        for i, ai in ea:\n            yield ai // i\n\n\ndef main():\n    input()\n    print(min(solve(tuple(map(int, input().split())))))\n\n\nmain()\n", "n=int(input())\na=list(map(int,input().split()))\nk=min(a[0],a[-1])//(n-1)\nfor i in range(1,n-1):\n    k=min(k,min(a[0],a[i])//i,min(a[i],a[-1])//(n-1-i))\nprint(k)\n", "n = int(input())\nnums = [int(x) for x in input().split()]\nanswers = set()\n\nfor i in range(n):\n    cur_num = nums[i]\n    furthest = max(n-i-1, i)\n    answers.add(cur_num // furthest)\n\nif answers != set():\n    print (min(answers))\nelse:\n    print (0)", "n = int(input())\nl = list( map( int, input().split() ) )\nans = max(l)\nfor i in range(n):\n    ans = min( ans, l[ i ] // max( i, n - i - 1 ))\nprint( ans )", "\n# CODE BEGINS HERE.................\n\nimport math\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nk = math.inf\nfor i in range(n):\n\t# print(k)\n\tif k > a[i]//max(n - i - 1, i):\n\t\tk = a[i]//max(n - i - 1, i)\nprint(k)\n\n#CODE ENDS HERE....................\n", "n = int(input())\nl = list(map(int, input().split()))\nb = 10 ** 9\nfor i in range(0, len(l)):\n    b = min(b, l[i] / max(i, n - i - 1))\nprint(int(b))", "def read_nums():\n    return [int(x) for x in input().split()]\n\n\ndef main():\n    n, = read_nums()\n    nums = read_nums()\n    a = [max(n - i - 1, i) for i in range(n)]\n    k = min(num // val for num, val in zip(nums, a))\n    print(k)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\nk = float('inf')\nfor i in range(n):\n    if i == 0:\n        x = min(a[0], a[-1])\n        y = n - 1\n        z = x // y\n        k = min(k, z)\n    elif i == n - 1:\n        x = min(a[0], a[-1])\n        y = n - 1\n        z = x // y\n        k = min(k, z)\n    else:\n        x = min(a[i], a[0])\n        y = i\n        z = x // y\n        k = min(k, z)\n        x = min(a[i], a[-1])\n        y = n - i - 1\n        z = x // y\n        k = min(k, z)\nprint(k)\n\n", "n=int(input())\nl1=list(map(int,input().split()))\nfor i in range(0,n):\n    if i==0:\n        ans=l1[i]//(n-1)\n    else :\n        x=max(n-1-i,i)\n        ans=min(ans,l1[i]//x)\nprint(ans)", "import sys\n\nsys.stdin.readline()\n\nar = [int(c) for c in sys.stdin.readline().split(' ')]\n\nn = len(ar)\n\ncalcd = [  a // (max(i, n - i - 1)) for i, a in enumerate(ar)]\nsys.stdout.write(f'{min(calcd)}\\n')\n", "N = int(input())\na = list(map(int, input().split()))\nans = 10**10\na0 = a[0]\nfor i in range(N-1):\n\n    ans = min(ans, (min(a0, a[i+1]))//(i+1))\n\nar = a[-1]\nfor i in range(N-1):\n    ans = min(ans, (min(ar, a[i]))//(N-i-1))\nprint(ans)\n", "n = int(input())\nsp = list(map(int, input().split()))\nk = 10 ** 9 + 1\nzn1 = sp[0]\nzn2 = sp[-1]\n\nch2 = min(sp[0], zn2) // (n - 1)\nif ch2 < k:\n\tk = ch2\n\nfor i in range(1, n - 1):\n\tch1 = min(sp[i], zn1) // i\n\tch2 = min(sp[i], zn2) // (n - i - 1)\n\tif ch2 < k:\n\t\tk = ch2\n\tif ch1 < k:\n\t\tk = ch1\n\nch1 = min(sp[-1], zn1) // (n - 1)\nif ch1 < k:\n\tk = ch1\nprint(k)\n", "N = int(input())\nls = list(map(int, input().split()))\nprint(min([ls[i]//max(i, N-i-1) for i in range(N)]))\n", "import sys\n\nn = int(sys.stdin.readline().strip())\na = [int(item) for item in sys.stdin.readline().strip().split()]\n\n# h_min = heapify([i for i in range(n)])\n# h_max = heapify([-i for i in range(n)])\nk = float('inf')\nfor i in range(n):\n    # idx1 = heappop(h_min)\n    # idx2 = heappop(h_min)\n    if (i != n - 1):\n        k = min(k, int(a[i] / (n - 1 - i)))\n    if i:\n        k = min(k, int(a[i] / i))\n    # k = min(k, int(a[i] / (n - 1 - i)), int(a[i] / i))\n\nprint(k)\n", "from sys import stdin\nn=int(stdin.readline().strip())\nfrom math import ceil\ns=list(map(int,stdin.readline().strip().split()))\ns1=s[::-1]\nd=n-1\nmn=10**20\nk=10**20\nwhile d>=n//2:\n    mn=min(s1[-1],s[-1],mn)\n    s1.pop()\n    s.pop()\n    k=min(k,mn//d)\n    d-=1\nprint(k)\n\n", "R = lambda: map(int, input().split())\n\nn = int(input())\nk = 10**9\na = list(R())\nfor i in range(n):\n    k = min(k, a[i] / max(i, n-1-i))\nprint(int(k))", "import sys\n# sys.stdin = open(\"#input.txt\", \"r\")\nn = int(input())\nls = list(map(int, input().split()))\n\nans = sys.maxsize\nfor i in range(n):\n\tans = min(ans,ls[i]//max(i, n-i-1))\nprint(ans)", "n = int(input())\narr = [int(i) for i in input().split()]\nans = 1e10\nfor i in range(len(arr)):\n    if i != 0:\n        sub1 = min(arr[i], arr[0]) // i\n    else:\n        sub1 = 1e10\n    if i != n - 1:\n        sub2 = min(arr[i], arr[-1]) // (n - 1 - i)\n    else:\n        sub2 = 1e10\n    ans = min(ans, sub1, sub2)\nprint(ans)\n"]