["a = list(map(int, input().split()))\nb = list(map(int, input().split()))\nx1 = min(a[0], a[2], a[4], a[6])\nx2 = max(a[0], a[2], a[4], a[6])\ny1 = min(a[1], a[3], a[5], a[7])\ny2 = max(a[1], a[3], a[5], a[7])\nd1 = min(b[0] - b[1], b[2] - b[3], b[4] - b[5], b[6] - b[7])\nd2 = max(b[0] - b[1], b[2] - b[3], b[4] - b[5], b[6] - b[7])\ns1 = min(b[0] + b[1], b[2] + b[3], b[4] + b[5], b[6] + b[7])\ns2 = max(b[0] + b[1], b[2] + b[3], b[4] + b[5], b[6] + b[7])\nfor x in range(-100, 101):\n    for y in range(-100, 101):\n        d = x - y\n        s = x + y\n        if x1 <= x <= x2 and y1 <= y <= y2 and s1 <= s <= s2 and d1 <= d <= d2:\n            print(\"YES\")\n            return\nprint(\"NO\")", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\n\nax1=min(a[::2])\nax2=max(a[::2])\nay1=min(a[1::2])\nay2=max(a[1::2])\n\nbx1=min(b[::2])\nbx2=max(b[::2])\nby=0\nfor i in range(4):\n    if b[i*2]==bx1:\n        by=b[i*2+1]\n\nhas=0\nfor i in range(ax1,ax2+1):\n    for j in range(ay1,ay2+1):\n        # check this point\n        if i<bx1 or i>bx2: continue\n        if bx1<=i<=(bx1+bx2)//2 and abs(j-by)<=abs(i-bx1):\n            has=1\n        if (bx1+bx2)//2<=i<=bx2 and abs(j-by)<=abs(i-bx2):\n            has=1\nprint(\"YES\" if has else \"NO\")\n", "n = 4\na = list(map(int, input().split()))\n\nam0 = min(a[0], a[2], a[4], a[6])\nam1 = max(a[0], a[2], a[4], a[6])\naM0 = min(a[1], a[3], a[5], a[7])\naM1 = max(a[1], a[3], a[5], a[7])\n\nb = list(map(int, input().split()))\n\nbm0 = min(b[0], b[2], b[4], b[6])\nbm1 = max(b[0], b[2], b[4], b[6])\nbM0 = min(b[1], b[3], b[5], b[7])\nbM1 = max(b[1], b[3], b[5], b[7])\n\nfor i in range(5):\n    if i < 4:\n        x, y = b[2 * i], b[2 * i + 1]\n    else:\n        x, y = (bm0 + bm1) / 2, (bM0 + bM1) / 2\n    if am0 <= x <= am1 and aM0 <= y <= aM1:\n        print('YES')\n        return\n\nb = [\n        (b[0] - b[1], b[0] + b[1]),\n        (b[2] - b[3], b[2] + b[3]),\n        (b[4] - b[5], b[4] + b[5]),\n        (b[6] - b[7], b[6] + b[7]),\n        ]\nbm0 = min(b[0][0], b[1][0], b[2][0], b[3][0])\nbm1 = max(b[0][0], b[1][0], b[2][0], b[3][0])\nbM0 = min(b[0][1], b[1][1], b[2][1], b[3][1])\nbM1 = max(b[0][1], b[1][1], b[2][1], b[3][1])\n\nfor i in range(5):\n    if i < 4:\n        x, y = a[2 * i], a[2 * i + 1]\n    else:\n        x, y = (am0 + am1) / 2, (aM0 + aM1) / 2\n    x, y = x - y, x + y\n    if bm0 <= x <= bm1 and bM0 <= y <= bM1:\n        print('YES')\n        return\n\nprint('NO')\n", "a = [int(i) for i in input().split()]\nb = [int(i) for i in input().split()]\nx1 = sorted([a[0], a[2], a[4], a[6]])\ny1 = sorted([a[1], a[3], a[5], a[7]])\nx2 = sorted([b[0], b[2], b[4], b[6]])\ny2 = sorted([b[1], b[3], b[5], b[7]])\nans = 'NO'\nfor i in range(x1[0], x1[3] + 1):\n    for j in range(y1[0], y1[3] + 1):\n        if x2[0] + y2[1] <= i + j <= x2[3] + y2[1] and y2[0] - x2[1] <= j - i <= y2[3] - x2[1]:\n            ans = 'YES'\nprint(ans)", "def cp(a, b):\n\treturn a[0]*b[1] - a[1]*b[0]\ndef sub(b, a):\n\treturn (b[0]-a[0], b[1]-a[1])\ndef ccw(a, b, c):\n\tr = cp(sub(b,a), sub(c,a))\n\tif r == 0: return 0\n\telif r > 0: return 1\n\telse: return -1\ndef sortpts(pts):\n\treturn pts if ccw(pts[0], pts[1], pts[2]) > 0 else list(reversed(pts))\ndef readpts():\n\tip = list(map(int, input().split()))\n\treturn sortpts([(ip[i], ip[i+1]) for i in range(0,8,2)])\ndef segi(a1, a2, b1, b2):\n\tc1 = ccw(a1, a2, b1)\n\tc2 = ccw(a1, a2, b2)\n\treturn c1 != c2\ndef segib(a1, a2, b1, b2):\n\treturn segi(a1, a2, b1, b2) and segi(b1, b2, a1, a2)\ndef checkpts(pts1, pts2):\n\tfor p1 in pts1:\n\t\taa = True\n\t\tfor i in range(4):\n\t\t\tj = (i+1)%4\n\t\t\tif ccw(pts2[i], pts2[j], p1) < 0: aa = False\n\t\tif aa: return True\n\treturn False\ndef checkpts2(pts1, pts2):\n\tfor i in range(4):\n\t\tfor j in range(4):\n\t\t\tif segib(pts1[i], pts1[(i+1)%4], pts2[j], pts2[(j+1)%4]):\n\t\t\t\treturn True\n\treturn False\n\npts1 = readpts()\npts2 = readpts()\n#print(pts1)\n#print(pts2)\nprint('YES' if checkpts(pts1, pts2) or checkpts(pts2, pts1) or checkpts2(pts1, pts2) else 'NO')\n", "rd = lambda: list(map(int, input().split()))\nz = []\nfor i in 'ii':\n    a = rd()\n    z += [a[::2], a[1::2]]\nfor x in z:\n    x.sort()\nu, v, x, y = z\nfor i in range(u[0], u[3] + 1):\n    for j in range(v[0], v[3] + 1):\n        if x[0] + y[1] <= i + j <= x[3] + y[1] and y[0] - x[1] <= j - i <= y[3] - x[1]:\n            print('YES')\n            return\nprint('NO')\n", "import math\neps = 1e-3\n\ndef dis(p1, p2):\n    return math.sqrt((p1[0]-p2[0])*(p1[0]-p2[0]) + (p1[1]-p2[1])*(p1[1]-p2[1]))\n\ndef getArea(p1, p2, p3):\n    A = p1[0]-p2[0]\n    B = p1[1]-p2[1]\n    x = (p3[0]*A*A + p3[1]*A*B + p1[0]*B*B - p1[1]*A*B) / (A*A+B*B)\n    y = (p1[1]-p2[1]) * (x-p1[0]) / (p1[0]-p2[0]) + p1[1]\n    p4 = (x, y)\n    return .5 * dis(p1, p2) * dis(p3, p4)\n\ndef main():\n    x1,y1,x2,y2,x3,y3,x4,y4 = list(map(int, input().split(' ')))\n    minX = min(x1,x2,x3,x4)\n    maxX = max(x1,x2,x3,x4)\n    minY = min(y1,y2,y3,y4)\n    maxY = max(y1,y2,y3,y4)\n    x1,y1,x2,y2,x3,y3,x4,y4 = list(map(int, input().split(' ')))\n\n    square_area = dis((x1,y1), (x2,y2)) * dis((x1,y1), (x2,y2))\n    \n    for i in range(minX, maxX+1):\n        for j in range(minY, maxY+1):\n            area1 = getArea((x1,y1), (x2,y2), (i, j))\n            area2 = getArea((x2,y2), (x3,y3), (i, j))\n            area3 = getArea((x3,y3), (x4,y4), (i, j))\n            area4 = getArea((x4,y4), (x1,y1), (i, j))\n            if ((area1 + area2 + area3 + area4) - (square_area) < eps):\n                print(\"YES\")\n                return\n    print(\"NO\")\n\nmain()\n", "def main():\n    def center(xx):\n        return sum(xx[::2]) * .25, sum(xx[1::2]) * .25\n\n    aa = list(map(float, input().split()))\n    bb = list(map(float, input().split()))\n    x, y = center(aa)\n    for i in range(0, 8, 2):\n        aa[i] -= x\n        bb[i] -= x\n        aa[i + 1] -= y\n        bb[i + 1] -= y\n    x, y = center(bb)\n    if x < 0.:\n        for i in range(0, 8, 2):\n            bb[i] *= -1.\n    if y < 0.:\n        for i in range(1, 8, 2):\n            bb[i] *= -1.\n    x, y = max(aa[i:i + 2] for i in range(0, 8, 2))\n    for i in range(0, 8, 2):\n        bb[i] -= x\n        bb[i + 1] -= y\n    [x1, y1], [x2, y2] = sorted(bb[i:i + 2] for i in range(0, 8, 2))[:2]\n    print(('NO', 'YES')[x1 <= 0 and x1 + y1 <= 0. and y2 <= 0. and x2 + y2 <= 0.])\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\nsqa = list(map(int, input().split()))\nsqb = list(map(int, input().split()))\nsq1 = []\nsq2 = []\n\ndef get_coords(seq, dest):\n    a,b = 0,1\n    for i in range(4):\n        dest.append((seq[a], seq[b]))\n        a += 2\n        b += 2\n\ndef check_pt(p1,p2,p3):\n    if p1[0]-p2[0]==0 and p3[0]==p1[0] and abs(p3[1])<=abs(p1[1]-p2[1]):\n        print(1)\n        return 1\n    elif p1[1]-p2[1]==0 and p3[1]==p1[1] and abs(p3[0])<=abs(p1[0]-p2[0]):\n        print(2)\n        return 1\n    elif p1[0]-p2[0]!=0:\n        print(3)\n        ab = math.sqrt(math.pow(p3[0]-p1[0],2)+math.pow(p3[1]-p1[1],2))\n        bc = math.sqrt(math.pow(p3[0]-p2[0],2)+math.pow(p3[1]-p2[1],2))\n        ac = math.sqrt(math.pow(p2[0]-p1[0],2)+math.pow(p2[1]-p1[1],2))\n        return (ab+bc)==ac\n    else:\n        print(4)\n        return 0\n\ndef pt_in(r,P):\n    areaRectangle = 0.5*abs(\\\n        #                 y_A      y_C      x_D      x_B\\\n                        (r[0][1]-r[2][1])*(r[3][0]-r[1][0])\\\n        #                  y_B     y_D       x_A     x_C\\\n                      + (r[1][1]-r[3][1])*(r[0][0]-r[2][0])\\\n                    )\n\n    ABP = 0.5*(\\\n             r[0][0]*(P[1]-r[1][1])\\\n            +P[0]*(r[1][1]-r[0][1])\\\n            +r[1][0]*(r[0][1]-P[1])\\\n          )\n    BCP = 0.5*(\\\n             r[2][0]*(P[1]-r[1][1])\\\n            +P[0]*(r[1][1]-r[2][1])\\\n            +r[1][0]*(r[2][1]-P[1])\\\n          )\n    CDP = 0.5*(\\\n             r[2][0]*(P[1]-r[3][1])\\\n            +P[0]*(r[3][1]-r[2][1])\\\n            +r[3][0]*(r[2][1]-P[1])\\\n          )\n    DAP = 0.5*(\\\n             r[0][0]*(P[1]-r[3][1])\\\n            +P[0]*(r[3][1]-r[0][1])\\\n            +r[3][0]*(r[0][1]-P[1])\\\n          )\n    return areaRectangle == (abs(ABP)+abs(BCP)+abs(CDP)+abs(DAP))\n\ndef mid_in(r,b):\n    x = (b[0][0]+b[2][0])/2\n    y = (b[1][1]+b[3][1])/2\n    P = (x,y)\n    return pt_in(r,P)\n    \n        \nget_coords(sqa,sq1)\nget_coords(sqb,sq2)\n\ndef check():\n    flag = 0\n    #check point on edge\n    for j in range(4):\n        '''if check_pt(sq2[0],sq2[1],sq1[j]) or check_pt(sq2[1],sq2[2],sq1[j]) or check_pt(sq2[2],sq2[3],sq1[j]) or check_pt(sq2[0],sq2[3],sq1[j]):\n            print(5)\n            flag = 1\n            break\n        if check_pt(sq1[0],sq1[1],sq2[j]) or check_pt(sq1[1],sq1[2],sq2[j]) or check_pt(sq1[2],sq1[3],sq2[j]) or check_pt(sq1[0],sq1[3],sq2[j]):\n            print(6)\n            flag = 1\n            break'''\n        #print(j)\n        if pt_in(sq1,sq2[j]) or pt_in(sq2,sq1[j]):\n            flag = 1\n            break\n    #check mid in square:\n    if mid_in(sq1,sq2) or mid_in(sq2,sq1):\n        #print(8)\n        flag = 1\n    if flag == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\ncheck()\n\n", "#     Codeforces Round #488 by NEAR (Div. 2)\nimport collections\nfrom functools import cmp_to_key\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\n\nimport sys\ndef getIntList():\n    return list(map(int, input().split()))    \n\nimport bisect \n            \n     \ns1 = getIntList()\ns2 = getIntList()\n\ndef x8(x):\n    return x*8\n \ns1 = list(map(x8,s1))\ns1 = list(s1)\ns1 = [ (s1[i],s1[i+1]) for i in range(0,8,2)]\ns2 = list(map(x8,s2))\ns2 = list(s2)\ns2 = [ (s2[i],s2[i+1]) for i in range(0,8,2)]\n\n\n\ns1x = [x[0] for x in s1]\ns1x = list(s1x)\ns1xmin = min(s1x)\ns1xmax = max(s1x)\n \n\ns1y = [x[1] for x in s1]\ns1y = list(s1y)\ns1ymin = min(s1y)\ns1ymax = max(s1y)\n\ns2xpy = [x[0] + x[1] for x in s2]\ns2xpy = list(s2xpy)\ns2xpymin = min(s2xpy)\ns2xpymax = max(s2xpy)\n\ns2xsy = [x[0] - x[1] for x in s2]\ns2xsy = list(s2xsy)\ns2xsymin = min(s2xsy)\ns2xsymax = max(s2xsy)\n\n\n\nfor x in range(-800, 801):\n    for y in range(-800, 801):\n        if s1xmin <= x <=s1xmax and s1ymin<= y <= s1ymax :\n            if s2xpymin <= x+y <= s2xpymax and s2xsymin <= x-y <= s2xsymax:\n                print('YES')\n                return\n\nprint('NO')\n", "p1 = input().split()\np1 = [int(x) for x in p1]\np2 = input().split()\np2 = [int(x) for x in p2]\nxmax, xmin, ymax, ymin = -1000, 1000, -1000, 1000\ncentrx, centry = sum([p2[i] for i in [0, 2, 4, 6]]) / 4, sum([p2[i] for i in [1, 3, 5, 7]]) / 4\nr = abs(centrx - p2[0]) + abs(centry - p2[1])\n\nfor i in [0, 2, 4, 6]:\n    xmax = max(xmax, p1[i])\n    xmin = min(xmin, p1[i])\nfor i in [1, 3, 5, 7]:\n    ymax = max(ymax, p1[i])\n    ymin = min(ymin, p1[i])\n\ndef Inside(x, y):\n    return x <= xmax and x >= xmin and y <= ymax and y >= ymin\n\nok = False\n\nfor i in range(-100, 101):\n    for j in range(-100, 101):\n        if abs(i - centrx) + abs(j - centry) <= r:\n            ok = ok or Inside(i, j)\n\nprint([\"NO\\n\", \"YES\\n\"][int(ok)])", "a = list(map(int, input().split()))\nb = list(map(int, input().split()))\nxa = a[0::2]\nya = a[1::2]\nxb = b[0::2]\nyb = b[1::2]\n\nminy = min(yb)\nmaxy = max(yb)\n\nfor i in range(miny, (miny + maxy) // 2 + 1):\n    for j in range(xb[yb.index(miny)] - (abs(i - miny)), xb[yb.index(miny)] + (abs(i - miny)) + 1):\n        if min(xa) <= j <= max(xa) and min(ya) <= i <= max(ya):\n            print(\"YES\")\n            return\n\nfor i in range(maxy, (miny + maxy) // 2, -1):\n    for j in range(xb[yb.index(miny)] - (abs(i - maxy)), xb[yb.index(miny)] + (abs(i - maxy)) + 1):\n        if min(xa) <= j <= max(xa) and min(ya) <= i <= max(ya):\n            print(\"YES\")\n            return\nprint(\"NO\")", "a = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = min(a[0::2])\nd = max(a[0::2])\ne = min(a[1::2])\nf = max(a[1::2])\ng = sum(b[0::2])//4\nh = sum(b[1::2])//4\nr = abs(b[0]-g)+abs(b[1]-h)\nfor i in range(c, d+1):\n\tfor j in range(e, f+1):\n\t\tif abs(i-g)+abs(j-h) <= r:\n\t\t\tprint('YES')\n\t\t\treturn\nprint('NO')", "a=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=min(a[0::2])\nd=max(a[0::2])\ne=min(a[1::2])\nf=max(a[1::2])\ng=sum(b[0::2])//4\nh=sum(b[1::2])//4\nr=abs(b[0]-g)+abs(b[1]-h)\ns='NO'\nfor i in range(c,d+1):\n\tfor j in range(e,f+1):\n\t\tif abs(i-g)+abs(j-h)<=r:\n\t\t\ts='YES'\nprint(s)", "a = list(map(int, input().split()))\n\nb = list(map(int, input().split()))\n\nc = min(a[0::2])\n\nd = max(a[0::2])\n\ne = min(a[1::2])\n\nf = max(a[1::2])\n\ng = sum(b[0::2])//4\n\nh = sum(b[1::2])//4\n\nr = abs(b[0]-g)+abs(b[1]-h)\n\nfor i in range(c, d+1):\n\n\tfor j in range(e, f+1):\n\n\t\tif abs(i-g)+abs(j-h) <= r:\n\n\t\t\tprint('YES')\n\n\t\t\treturn\n\nprint('NO')\n\n\n\n# Made By Mostafa_Khaled\n", "def rf():\n    cs = list(map(int, input().split(' ')))\n    cs = list(zip(cs[0::2], cs[1::2]))\n    return cs\n\n# Cross product of vectors (p1-p) and (p2-p)\ndef cross(p, p1, p2):\n    return (p2[1] - p[1]) * (p1[0] - p[0]) - (p2[0] - p[0]) * (p1[1] - p[1])\n\n# p = (x, y)\n# f = [(x1, y1), (x2, y2), ...]\ndef inside(p, f):\n    os = 0\n    total = 0\n    for i in range(len(f)):\n        p1 = f[i]\n        p2 = f[(i+1)%len(f)]\n        delta = cross(p, p1, p2)\n\n        os += delta\n        total += abs(delta)\n\n    os = abs(os)\n    return os == total\n\nfs = [rf(), rf()]\n\nres = False\nfor f1, f2 in [fs, fs[::-1]]:\n    for p in f1:\n        if inside(p, f2):\n            res = True\n    if inside( ( (f1[0][0] + f1[2][0]) // 2, (f1[0][1] + f1[2][1]) // 2 ), f2 ):\n        res = True\n\nprint(['NO', 'YES'][res])\n", "a=list(map(int,input().split()))\nb=list(map(int,input().split()))\na1 = min(a[0::2])\nb1 = max(a[0::2])\nc1 = min(a[1::2])\nd1 = max(a[1::2])\ng  = sum(b[0::2])/4\nh  = sum(b[1::2])/4\nr = abs(b[0]-g) + abs(b[1]-h)\nfor i in range(a1,b1+1) :\n    for j in range (c1,d1+1) :\n        if abs(i-g) + abs(j-h)<=r :\n            print(\"YES\");return\nprint(\"NO\")\n            \n\n\n\n", "s = list(map(int, input().split()))\ns = [s[i:i+2] for i in range(0,8,2)]\ns.sort()\nt = list(map(int, input().split()))\nt = [t[i:i+2] for i in range(0,8,2)]\nt.sort()\nfor i in t:\n    if s[0][0] <= i[0] <= s[3][0] and s[0][1] <= i[1] <= s[3][1]:\n        print('YES'); return\nfor i in s:\n    if sum(t[0]) <= sum(i) <= sum(t[3]) and t[0][0]-t[0][1] <= i[0]-i[1] <= t[3][0]-t[3][1]:\n        print('YES'); return\nO = [(t[0][0]+t[3][0])//2,(t[0][1]+t[3][1])//2]\nif s[0][0] <= O[0] <= s[3][0] and s[0][1] <= O[1] <= s[3][1]:\n        print('YES'); return\nprint('NO')", "A=list(map(int,input().split()))\nb=list(map(int,input().split()))\ndef convert(x,y):\n    return (y+x,y-x)\nAX=[]\nAY=[]\nBX=[]\nBY=[]\nfor i in range(4):\n    x,y=convert(b[2*i],b[2*i+1])\n    if x not in BX:\n        BX.append(x)\n    if y not in BY:\n        BY.append(y)\n    if A[2*i] not in AX:\n        AX.append(A[2*i])\n    if A[2*i+1] not in AY:\n        AY.append(A[2*i+1])\nAX.sort()\nAY.sort()\nBX.sort()\nBY.sort()\nfor i in range(-111,111):\n    for j in range(-111,111):\n        I,J=convert(i,j)\n        if AX[0]<=i<=AX[1] and BX[0]<=I<=BX[1] and AY[0]<=j<=AY[1] and BY[0]<=J<=BY[1]:\n            print(\"YES\")\n            quit()\nprint(\"NO\")\n", "mp=[[0 for i in range(205)]for j in range(205)]\nax1,ay1,ax2,ay2,ax3,ay3,ax4,ay4=list(map(int,input().split()))\nbx1,by1,bx2,by2,bx3,by3,bx4,by4=list(map(int,input().split()))\nax1+=100;ay1+=100;ax2+=100;ay2+=100;ax3+=100;ay3+=100;ax4+=100;ay4+=100\nbx1+=100;by1+=100;bx2+=100;by2+=100;bx3+=100;by3+=100;bx4+=100;by4+=100\nx1=min(ax1,ax2,ax3,ax4);x2=max(ax1,ax2,ax3,ax4)\ny1=min(ay1,ay2,ay3,ay4);y2=max(ay1,ay2,ay3,ay4)\nfor i in range(x1,x2+1):\n    for j in range(y1,y2+1):\n        mp[i][j]=1\n        #print(i,j)\n#print()\nxx=(bx1+bx3)//2\nyy=(by1+by3)//2\nr=abs(min(bx1,bx2,bx3,bx4)-xx)\nfor i in range(min(bx1,bx2,bx3,bx4),max(bx1,bx2,bx3,bx4)+1):\n    for j in range(min(by1,by2,by3,by4),max(by1,by2,by3,by4)+1):\n        #print(abs(i-xx),abs(j-yy))\n        if abs(i-xx)+abs(j-yy)<=r:\n            if mp[i][j]==1:\n                #print(i,j)\n                print('YES')\n                return\nprint('NO')\n", "def check1(point):\n    return sq1[0][0] <= point[0] <= sq1[3][0] and sq1[0][1] <= point[1] <= sq1[3][1]\n\ndef check2(point):\n    return point[0] + sq2[0][1] - sq2[0][0] >= point[1] and point[0] + sq2[3][1] - sq2[3][0] <= point[1] and -point[0] + sq2[3][1] + sq2[3][0] >= point[1] and -point[0] + sq2[0][1] + sq2[0][0] <= point[1]\n\n\nt = [int(i) for i in input().split()]\nsq1 = list(zip(t[::2], t[1::2]))\nsq1.sort()\nt = [int(i) for i in input().split()]\nsq2 = list(zip(t[::2], t[1::2]))\nsq2.sort()\nsq2[1], sq2[2] = sq2[2], sq2[1]\nfor i in range(-100, 101):\n    for j in range(-100, 101):\n        if check1((i, j)) and check2((i, j)):\n            print(\"YES\")\n            return\nprint(\"NO\")\n"]