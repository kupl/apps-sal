["n = int(input()) + 1\na = list(map(int, input().split())) + [1 << 50]\nl, p, r = [0] * n, list(range(n)), []\n\nfor i in range(int(input())):\n    t = list(map(int, input().split()))\n    if t[0] == 2:\n        r.append(l[t[1] - 1])\n    else:\n        x = t[1] - 1\n        s, d = [x], t[2]\n        while True:\n            if p[x] != x:\n                x = p[x]\n                s.append(x)\n                continue\n            if l[x] + d < a[x]:\n                l[x] += d\n                break\n            d -= a[x] - l[x]\n            l[x] = a[x]\n            x += 1\n            s.append(x)\n        for j in s:\n            p[j] = x\n        \nprint('\\n'.join(map(str, r)))", "__author__ = 'Utena'\nimport copy\nn=int(input())\nocu=[0]+list(map(int,input().split()))\nV=dict()\nfor i in range(1,n+1):\n    V[i]=ocu[i]\nocu=[0]*(n+1)\nstream=[0]*(n+1)\nl=0\nans=[]\nfor i in range(1,n):\n    stream[i]=i+1\nstream[n]=0\nm=int(input())\nfor i in range(m):\n    s=list(map(int,input().split()))\n    if s[0]==1:\n        x0,p=s[1],s[2]\n        x=x0\n        temp1=set()\n        while True:\n            if p<V[x]-ocu[x]:\n                ocu[x]+=p\n                break\n            else:\n                p-=V[x]-ocu[x]\n                ocu[x]=V[x]\n                temp1.add(x)\n                x=stream[x]\n                if x==0:break\n        for a in temp1:\n            stream[a]=x\n    if s[0]==2:\n        ans.append(ocu[s[1]])\nprint('\\n'.join(map(str,ans)))", "n=int(input())\na=list(map(int,input().split()))\nvessels=[]\nans=[]\nindex=[]\nfor i in range(n):\n    vessels.append([0,a[i]])\n    index.append(i+1)    \nm=int(input())\nfor i in range(m):\n    a=input()\n    if a[0]=='1':\n        a,p,x=list(map(int,a.split()))\n        p-=1\n        tt=set()\n        while p<n and x>0:\n            t=vessels[p][1]-vessels[p][0]\n            if x>t:\n                x-=t\n                vessels[p][0]=vessels[p][1]\n                tt.add(p)\n                p=index[p]\n            else:\n                vessels[p][0]+=x\n                break\n        for i in tt:\n            index[i]=p\n    else:\n        a,b=list(map(int,a.split()))\n        ans.append(vessels[b-1][0])\nprint('\\n'.join(map(str,ans)))", "def command(cmd) :\n    t=cmd[0]\n    if t==1 :\n        pour(cmd[1],cmd[2])\n    else :\n        amount(cmd[1])\n\ndef pour(p,amount) :\n    Skip=[]\n    while p<=n and amount>0:\n        t=C[p-1]-W[p-1]\n        if amount>=t :\n            amount-=t\n            W[p-1]=C[p-1]\n            Skip.append(p)\n        else :\n            W[p-1]+=amount\n            break\n        p=Links[p]\n    for i in Skip :\n        Links[i]=p\n        #print(W)\n    \ndef amount(p) :\n    P.append(W[p-1])\n\nn=int(input())\nC=list(map(int,input().split()))\nW=[0]*n\nLinks=list(map(int,range(1,n+2)))\nP=[]\nm=int(input())\nfor i in range(m) :\n    command([int(i) for i in input().split()])\nfor i in P :\n    print(i)", "n = int(input())\na = [int(i) for i in input().split()]\nb = [0]*n\n\nafter = list(map(int,list(range(1,n+2))))\n    \n#print(a)\n\ndef add_water(p,x):\n    i = p-1\n    skip = []\n    while x>0 and i<n:\n        space = a[i]-b[i]\n        if x >= space:\n            x -= space\n            b[i] = a[i]\n            skip.append(i)\n            i = after[i] \n        else:\n            b[i] += x\n            break\n\n    for j in skip:\n        after[j] = i\n\nm = int(input())\nP =[]\nfor i in range(m):\n    l = [int(j) for j in input().split()]\n    #print(l)\n    if l[0] == 1:\n        add_water(l[1],l[2])\n\n    else:\n        P.append(b[l[1]-1])\n\nfor j in P:\n    print(j)\n", "n=int(input());\nnv=(n+2)*[0];\nv=[int(i) for i in input().split()];\nf=(n+2)*[0];\ngo = list(map(int,list(range(1,n+2))))\nm=int(input());\np=[]\nfor i in range(m):\n\tc=[int(i) for i in input().split()];\n\tif c[0]==1 :\n\t\tk=c[1]-1;\n\t\tvv=c[2];\n\t\tkk=k;\n\t\tr=0;\n\t\twhile((vv>0)and(kk<n)):\n\t\t\tif(vv<=v[kk]-nv[kk]):\n\t\t\t\tnv[kk]=nv[kk]+vv;\n\t\t\t\tvv=0;\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tvv=vv-(v[kk]-nv[kk]);\n\t\t\t\tnv[kk]=v[kk];\n\t\t\t\tf[r]=kk;\n\t\t\t\tr=r+1;\n\t\t\t\tkk=go[kk];\n\t\tfor j in range(r):\n\t\t\tgo[f[j]]=kk;\n\t\t\t\n\tif c[0]==2:\n\t\tp.append(nv[c[1]-1]);\nfor i in p:\n\tprint(i)\n", "n=int(input());\nwater=(n+2)*[0];\nvol=[int(i) for i in input().split()];\ntrace=(n+2)*[0];\nnext = [i+1 for i in range(n+2)];\nm=int(input());\nout=[]\nfor i in range(m):\n\tc=[int(i) for i in input().split()];\n\tif c[0]==1 :\n\t\tw=c[2];\n\t\tk=c[1]-1;\n\t\tr=0;\n\t\twhile((w>0)and(k<n)):\n\t\t\tif(w<=vol[k]-water[k]):\n\t\t\t\twater[k]=water[k]+w;\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tw=w-(vol[k]-water[k]);\n\t\t\t\twater[k]=vol[k];\n\t\t\t\ttrace[r]=k;\n\t\t\t\tr=r+1;\n\t\t\t\tk=next[k];\n\t\tfor j in range(r):\n\t\t\tnext[trace[j]]=k;\n\tif c[0]==2:\n\t\tout.append(water[c[1]-1]);\nfor i in out:\n\tprint(i)\n", "n=int(input());\nwater=(n+2)*[0];\nvol=[int(i) for i in input().split()];\ntrace=(n+2)*[0];\nnext = [i+1 for i in range(n+2)];\nm=int(input());\nout=[]\nfor i in range(m):\n\tc=[int(i) for i in input().split()];\n\tif c[0]==1 :\n\t\tw=c[2];\n\t\tk=c[1]-1;\n\t\tr=0;\n\t\twhile((w>0)and(k<n)):\n\t\t\tif(w<=vol[k]-water[k]):\n\t\t\t\twater[k]=water[k]+w;\n\t\t\t\tbreak;\n\t\t\telse:\n\t\t\t\tw=w-(vol[k]-water[k]);\n\t\t\t\twater[k]=vol[k];\n\t\t\t\ttrace[r]=k;\n\t\t\t\tr=r+1;\n\t\t\t\tk=next[k];\n\t\tfor j in range(r):\n\t\t\tnext[trace[j]]=k;\n\tif c[0]==2:\n\t\tout.append(water[c[1]-1]);\nfor i in out:\n\tprint(i)\n\n\n", "n=int(input())\na=[int(i) for i in input().split()]\nv=[0]*n\nm=int(input())\nf=[i+1 for i in range(n)]\nans=[]\nfor i in range(m):\n    q=[int(i) for i in input().split()]\n    if q[0]==1:\n        p,x=q[1],q[2]\n        asdf=[]\n        j=p-1\n        while j<n:\n            tmp=x+v[j]-a[j]\n            if tmp<=0:\n                v[j]+=x\n                break\n            else:\n                x=tmp\n                v[j]=a[j]\n                asdf.append(j)\n                j=f[j]\n        for z in asdf:\n            f[z]=j\n    else:\n        ans.append(v[q[1]-1])\n\nfor i in ans:\n    print(i)\n", "import copy\nn=int(input())\nocu=[0]+list(map(int,input().split()))\nV=dict()\nfor i in range(1,n+1):\n    V[i]=ocu[i]\nocu=[0]*(n+1)\nstream=[0]*(n+1)\nl=0\nans=[]\nfor i in range(1,n):\n    stream[i]=i+1\nstream[n]=0\nm=int(input())\nfor i in range(m):\n    s=list(map(int,input().split()))\n    if s[0]==1:\n        x0,p=s[1],s[2]\n        x=x0\n        temp1=set()\n        while True:\n            if p<V[x]-ocu[x]:\n                ocu[x]+=p\n                break\n            else:\n                p-=V[x]-ocu[x]\n                ocu[x]=V[x]\n                temp1.add(x)\n                x=stream[x]\n                if x==0:break\n        for a in temp1:\n            stream[a]=x\n    if s[0]==2:\n        ans.append(ocu[s[1]])\nprint('\\n'.join(map(str,ans)))\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nv = [0] * n\nf = list(range(1, n + 1))\nl = []\nfor i in range(m):\n    q = list(map(int, input().split()))\n    if q[0] == 1:\n        p, x = q[1], q[2]\n        u = []\n        j = p - 1\n        while j < n:\n            z = x + v[j] - a[j]\n            if z <= 0:\n                v[j] += x\n                break\n            else:\n                x = z\n                v[j] = a[j]\n                u.append(j)\n                j = f[j]\n        for z in u:\n            f[z] = j\n    else:\n        l.append(v[q[1] - 1])\n\nfor i in l:\n    print(i)\n", "n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nv = [0] * n\nf = list(range(1, n + 1))\nl = []\nfor i in range(m):\n    q = list(map(int, input().split()))\n    if q[0] == 1:\n        p, x = q[1], q[2]\n        u = []\n        j = p - 1\n        while j < n:\n            z = x + v[j] - a[j]\n            if z <= 0:\n                v[j] += x\n                break\n            else:\n                x = z\n                v[j] = a[j]\n                u.append(j)\n                j = f[j]\n        for z in u:\n            f[z] = j\n    else:\n        l.append(v[q[1] - 1])\n\nprint(*l,sep='\\n')\n", "n = int(input())\nvessel = [int(i) for i in input().split()]\nwater_amount = [0] * n\nm = int(input())\nnext_vessel = [int(i) for i in range(1,n + 1)]\nanswer = []\n\nfor i in range(m):\n    query = [int(j) for j in input().split()]\n    \n    if query[0] == 1:\n        k = query[1] - 1\n        skip_vessel = []\n        while k < n:\n            delta = vessel[k] - water_amount[k]\n            if delta <= query[2]:\n                water_amount[k] = vessel[k]\n                query[2] -= delta\n                skip_vessel.append(k)\n                k = next_vessel[k]\n            else:\n                water_amount[k] += query[2]\n                break\n        for j in skip_vessel:\n            next_vessel[j] = k\n            \n    else:\n        answer.append(water_amount[query[1] - 1])\n\nprint(*answer, sep = '\\n')\n", "n = int(input())\nvessel = [int(i) for i in input().split()]\nwater_amount = [0] * n\nm = int(input())\nnext_vessel = [int(i) for i in range(1,n + 1)]\nanswer = []\n\nfor i in range(m):\n    query = [int(j) for j in input().split()]\n    \n    if query[0] == 1:\n        k = query[1] - 1\n        skip_vessel = []\n        while k < n:\n            delta = vessel[k] - water_amount[k]\n            if delta <= query[2]:\n                water_amount[k] = vessel[k]\n                query[2] -= delta\n                skip_vessel.append(k)\n                k = next_vessel[k]\n            else:\n                water_amount[k] += query[2]\n                break\n        for j in skip_vessel:\n            next_vessel[j] = k\n            \n    else:\n        answer.append(water_amount[query[1] - 1])\n\nprint(*answer, sep = '\\n')\n", "n=int(input())\na=[int(i) for i in input().split()]\nv=[0]*n\nm=int(input())\nf=[i+1 for i in range(n)]\nans=[]\nfor i in range(m):\n    q=[int(i) for i in input().split()]\n    if q[0]==1:\n        p,x=q[1],q[2]\n        xyz=[]\n        j=p-1\n        while j<n:\n            tmp=x+v[j]-a[j]\n            if tmp<=0:\n                v[j] = x+v[j]\n                break\n            else:\n                x=tmp\n                v[j]=a[j]\n                xyz.append(j)\n                j=f[j]\n        for z in xyz:\n            f[z]=j\n    else:\n        ans.append(v[q[1]-1])\n\nfor i in ans:\n    print(i)", "n=int(input())\na=[int(i) for i in input().split()]\nv=[0]*n\nm=int(input())\nf=[i+1 for i in range(n)]\nans=[]\nfor i in range(m):\n    q=[int(i) for i in input().split()]\n    if q[0]==1:\n        p,x=q[1],q[2]\n        asdf=[]\n        j=p-1\n        while j<n:\n            tmp=x+v[j]-a[j]\n            if tmp<=0:\n                v[j]+=x\n                break\n            else:\n                x=tmp\n                v[j]=a[j]\n                asdf.append(j)\n                j=f[j]\n        for z in asdf:\n            f[z]=j\n    else:\n        ans.append(v[q[1]-1])\n\nfor i in ans:\n    print(i)\n", "'''\nCreated on 2016-4-9\n\n@author: chronocorax\n'''\n\ndef line():\n    return [int(c) for c in input().split()]\n\nn = line()[0]\ncap = line()\ncap0 = cap[:]\nnxt = [i + 1 for i in range(n)]\n\nresult = []\n\nm = line()[0]\nfor _ in range(m):\n    tup = line()\n    if tup[0] == 1:\n        p = tup[1] - 1\n        p0 = p\n        x = tup[2]\n#         flush(p - 1, x)\n        marker = []\n        while p < n and cap[p] < x:\n            x -= cap[p]\n            cap[p] = 0\n            marker.append(p)\n            p = nxt[p]\n        if p < n: cap[p] -= x\n        for i in marker:\n            nxt[i] = p\n    else:\n        k = tup[1]\n        result.append(cap0[k - 1] - cap[k - 1])\n    \nfor res in result:\n    print(res)", "n = int(input())\na = list(map(int, input().split()))\nb = list(a)\nf = [i+1 for i in range(n)]\ndef getf(x):\n\ty = x\n\twhile x < n and a[x] == 0:\n\t\tx = f[x]\n\twhile y < n and a[y] == 0:\n\t\tt = f[y]\n\t\tf[y], y = x, t\n\treturn x\nm = int(input())\nans = []\nfor i in range(m):\n\ttmp = list(map(int, input().split()))\n\tp = tmp[1]-1\n\tif tmp[0] == 1:\n\t\tx = tmp[2]\n\t\tl = []\n\t\twhile p < n:\n\t\t\tif a[p] >= x:\n\t\t\t\ta[p] -= x\n\t\t\t\tbreak\n\t\t\tl.append(p)\n\t\t\tx -= a[p]\n\t\t\ta[p] = 0\n\t\t\t#p = getf(p)\n\t\t\tp = f[p]\n\t\tfor x in l:\n\t\t\tf[x] = p\n\telse:\n\t\tans.append(b[p] - a[p])\nprint('\\n'.join(map(str, ans)))\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(a)\nf = [i+1 for i in range(n)]\ndef getf(x):\n\ty = x\n\twhile x < n and a[x] == 0:\n\t\tx = f[x]\n\twhile y < n and a[y] == 0:\n\t\tt = f[y]\n\t\tf[y], y = x, t\n\treturn x\nm = int(input())\nans = []\nfor i in range(m):\n\ttmp = list(map(int, input().split()))\n\tp = tmp[1]-1\n\tif tmp[0] == 1:\n\t\tx = tmp[2]\n\t\tl = []\n\t\twhile p < n:\n\t\t\tif a[p] > x:\n\t\t\t\ta[p] -= x\n\t\t\t\tbreak\n\t\t\tl.append(p)\n\t\t\tx -= a[p]\n\t\t\ta[p] = 0\n\t\t\tp = getf(p)\n\t\tfor x in l:\n\t\t\tf[x] = p\n\telse:\n\t\tans.append(b[p] - a[p])\nprint('\\n'.join(map(str, ans)))\n", "n = int(input())\na = list(map(int, input().split()))\nb = list(a)\nf = [i+1 for i in range(n)]\ndef getf(x):\n\ty = x\n\twhile x < n and a[x] == 0:\n\t\tx = f[x]\n\twhile y < n and a[y] == 0:\n\t\tt = f[y]\n\t\tf[y], y = x, t\n\treturn x\nm = int(input())\nans = []\nfor i in range(m):\n\ttmp = list(map(int, input().split()))\n\tp = tmp[1]-1\n\tif tmp[0] == 1:\n\t\tx = tmp[2]\n\t\twhile p < n:\n\t\t\tif a[p] > x:\n\t\t\t\ta[p] -= x\n\t\t\t\tbreak\n\t\t\tx -= a[p]\n\t\t\ta[p] = 0\n\t\t\tp = getf(p)\n\telse:\n\t\tans.append(b[p] - a[p])\nprint('\\n'.join(map(str, ans)))\n", "n = int(input())\nm = [int(i) for i in input().split()]\nk = [0] * n\np = int(input())\nl = list(range(1,n + 1))\nj = []\nfor i in range(p):\n    t = [int(i) for i in input().split()]\n\n    if t[0] == 1:\n        h = []\n        a ,b= t[1] - 1,t[2]\n        while b > 0 and a < n:\n            if b <=m[a] - k[a]:\n                k[a] += b\n                break\n            else:\n                b = b -(m[a] - k[a])\n                k[a] = m[a]\n                h.append(a)\n                a=l[a]\n        for i in h:\n            l[i] = a\n    else:\n        j.append(k[t[1] - 1])\n\nprint(*j,sep='\\n')", "o = int(input())\nm = [int(i) for i in input().split()]\nk = [0] * o\np = int(input())\nl = list(range(1,o + 1))\nj = []\nfor i in range(p):\n    t = [int(i) for i in input().split()]\n\n    if t[0] == 1:\n        h = []\n        a ,b= t[1] - 1,t[2]\n        while b > 0 and a < o:\n            if b <=m[a] - k[a]:\n                k[a] += b\n                break\n            else:\n                b = b -(m[a] - k[a])\n                k[a] = m[a]\n                h.append(a)\n                a=l[a]\n        for i in h:\n            l[i] = a\n    else:\n        j.append(k[t[1] - 1])\n\nprint(*j,sep='\\n')", "n = int(input())\nvessel = [int(i) for i in input().split()]\nwater_amount = [0] * n\nm = int(input())\nnext_vessel = [int(i) for i in range(1,n + 1)]\nanswer = []\n\nfor i in range(m):\n    query = [int(j) for j in input().split()]\n    \n    if query[0] == 1:\n        k = query[1] - 1\n        skip_vessel = []\n        while k < n:\n            delta = vessel[k] - water_amount[k]\n            if delta <= query[2]:\n                water_amount[k] = vessel[k]\n                query[2] -= delta\n                skip_vessel.append(k)\n                k = next_vessel[k]\n            else:\n                water_amount[k] += query[2]\n                break\n        for j in skip_vessel:\n            next_vessel[j] = k\n            \n    else:\n        answer.append(water_amount[query[1] - 1])\n\nprint(*answer, sep = '\\n')\n"]