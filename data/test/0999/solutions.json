["import math\nimport itertools\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nmx = 0\n\nsz = ria()[0]\nmx1 = 0\nmn1 = 2000000000\n\nfor i in range(sz):\n    l, r = ria()\n    mx1 = max(l, mx1)\n    mn1 = min(r, mn1)\n\nsz = ria()[0]\nmx2 = 0\nmn2 = 2000000000\n\nfor i in range(sz):\n    l, r = ria()\n    mx2 = max(l, mx2)\n    mn2 = min(r, mn2)\n#print(mx1,mn1,mx2,mn2)\nmx = max(mx, mx1 - mn2)\nmx = max(mx, mx2 - mn1)\nprint(mx)", "from operator import itemgetter\nn = int(input())\na = [list(map(int, input().split())) for i in range(n)]\nm = int(input())\nb = [list(map(int, input().split())) for i in range(m)]\nam = min(a, key = itemgetter(1))[1]\nap = max(a, key = itemgetter(0))[0]\nbm = min(b, key = itemgetter(1))[1]\nbp = max(b, key = itemgetter(0))[0]\n\nab = max(ap - bm, 0)\nba = max(bp - am, 0)\nprint(max(ab, ba))\n", "n = int(input())\nmx = 0\nmn = 10 ** 10\nfor i in range(n):\n    l, r = list(map(int,input().split(' ')))\n    mx = max(mx,l)\n    mn = min(mn,r)\n\nm = int(input())\nans = 0\nfor i in range(m):\n    l, r = list(map(int,input().split(' ')))\n    ans = max([ans,mx-r,l-mn])\nprint(ans)\n", "n = int(input())\na = 10000000000\na1 = -10000000000\nfor i in range(n):\n    x, y = map(int, input().split())\n    a = min(a, y)\n    a1 = max(a1, x)\nm = int(input())\nb = -10000000000\nb1 = 10000000000\nfor i in range(m):\n    x, y = map(int, input().split())\n    b = max(b, x)\n    b1 = min(b1, y)\nprint(max(0, b - a, a1 - b1))", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int,input().split())))\nm = int(input())\nb = []\nfor i in range(m):\n    b.append(list(map(int,input().split())))    \na.sort()\nb1 = b[::]\nb.sort()\nb1.sort(key = lambda x: x[1])\nans = 0\nfor i in a:\n    ans = max(ans,b[-1][0]-i[1])\n    ans = max(ans,i[0]-b1[0][1])\nprint(ans)", "l1 = [[int(x.strip().rstrip()) for x in input().split()] for _ in range(int(input()))]\nl2 = [[int(x.strip().rstrip()) for x in input().split()] for _ in range(int(input()))]\n\nr1 = max(0, max(x[0] for x in l2) - min([x[1] for x in l1]))\nr2 = max(0, max(x[0] for x in l1) - min([x[1] for x in l2]))\n\nprint(max(r1, r2))\n", "n = int(input())\n\n\nchess_start = 0\nchess_end = 100000000000\nprog_start = 0\nprog_end = 100000000000\nfor i in range(n):\n\ts, f = list(map(int, input().split()))\n\tif s > chess_start:\n\t\tchess_start = s\n\tif f < chess_end:\n\t\tchess_end = f\n\t\t\nm = int(input())\nfor i in range(m):\n\ts, f = list(map(int, input().split()))\n\tif s > prog_start:\n\t\tprog_start = s\n\tif f < prog_end:\n\t\tprog_end = f\n\nchessfirst = prog_start - chess_end\n\nprogfirst = chess_start - prog_end\n\nprint(max(0, chessfirst, progfirst))\n\n\n", "n = int(input())\nmnc,mxc,mnp,mxp=1e10,0,1e10,0\nfor i in range(n):\n\ta,b = list(map(int,input().split()))\n\tmxc = max(mxc,a)\n\tmnc = min(mnc,b)\n\t\nn2 = int(input())\nfor i in range(n2):\n\ta,b = list(map(int,input().split()))\n\tmxp = max(mxp,a)\n\tmnp = min(mnp,b)\nval = max(mxp-mnc,mxc-mnp)\nif val<0:\n\tprint(0)\nelse:\n\tprint(val)\n", "from sys import stdin, stdout\n\nn = int(stdin.readline())\nchessStart=[]\nchessEnd=[]\nfor i in range(n):\n    l, r = list(map(int, stdin.readline().rstrip().split()))\n    chessStart.append(l)\n    chessEnd.append(r)\n    \nm = int(stdin.readline())\nprogramStart=[]\nprogramEnd=[]\nfor i in range(m):\n    l, r = list(map(int, stdin.readline().rstrip().split()))\n    programStart.append(l)\n    programEnd.append(r)\n\nchessEarlyEnd=min(chessEnd)\nchessLateStart=max(chessStart)\nprogramEarlyEnd=min(programEnd)\nprogramLateStart=max(programStart)\n\nbestCase=max([chessLateStart-programEarlyEnd,programLateStart-chessEarlyEnd])\nprint(max([0,bestCase]))\n", "n = int(input())\nmaxl1 = 0\nminr1 = 100000000000000\nfor _ in range(0,n):\n    a,b = list(map(int,input().split()))\n    maxl1 = max(a,maxl1)\n    minr1 = min(b,minr1)\n\nn = int(input())\nmaxl2 = 0\nminr2 = 100000000000000\nfor _ in range(0,n):\n    a,b = list(map(int,input().split()))\n    maxl2 = max(a,maxl2)\n    minr2 = min(b,minr2)\n\n#print(maxl1,minr1,maxl2,minr2)\n\nprint(max(max(0, maxl1-minr2), max(0, maxl2-minr1)))\n", "n=int(input())\nchess=list()\nfor i in range(n):\n    a,b=list(map(int,input().split()))\n    chess.append([a,b])\nm=int(input())\npro=list()\nfor i in range(m):\n    a,b=list(map(int,input().split()))\n    pro.append([a,b])\nl1,e1,l2,e2=0,1000000000,0,1000000000\nfor i in range(n):\n    l1=max(chess[i][0],l1)\n    e1=min(chess[i][1],e1)\nfor i in range(m):\n    l2=max(pro[i][0],l2)\n    e2=min(pro[i][1],e2)\nprint(max([0,l2-e1,l1-e2]))", "minn = 999999999999\nmaxn = 0\nminm = 999999999999\nmaxm = 0\n\nfor n in range(int(input())):\n    l, r = map(int, input().split())\n    minn = min(minn, r)\n    maxn = max(maxn, l)\n\nfor m in range(int(input())):\n    l, r = map(int, input().split())\n    minm = min(minm, r)\n    maxm = max(maxm, l)\n\nprint(max([maxm - minn, maxn - minm, 0]))", "n = int(input())\nmr = 10**10\nml2 = 0\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    mr = min(mr, b)\n    ml2 = max(ml2, a)\n\nml = 0\nmr2 = 10**10\nn = int(input())\nfor _ in range(n):\n    a, b = list(map(int, input().split()))\n    ml = max(ml, a)\n    mr2 = min(mr2, b)\nprint(max(0, ml-mr, ml2-mr2))\n", "n = int(str(input()).strip())\nmin_i_r = 10**9+1\nmax_i_l = 0\nfor _ in range(n):\n    l, r = str(input()).strip().split(' ', 1)\n    min_i_r = min(min_i_r, int(r))\n    max_i_l = max(max_i_l, int(l))\n\nm = int(str(input()).strip())\nmin_j_r = 10**9+1\nmax_j_l = 0\nfor _ in range(m):\n    l, r = str(input()).strip().split(' ', 1)\n    min_j_r = min(min_j_r, int(r))\n    max_j_l = max(max_j_l, int(l))\n\nans = max(max_j_l - min_i_r, max_i_l - min_j_r)\nprint(ans if ans > 0 else 0)\n", "n1 = int(input())\n\nstart1, end1 = list(map(int, input().split()))\n\nn1 -= 1\n\nfor _ in range(n1):\n    s1, e1 = list(map(int, input().split()))\n    if s1 > start1:\n        start1 = s1\n    if e1 < end1:\n        end1 = e1\n\nn2 = int(input())\n\nstart2, end2 = list(map(int, input().split()))\n\nn2 -= 1\n\nfor _ in range(n2):\n    s2, e2 = list(map(int, input().split()))\n    if s2 > start2:\n        start2 = s2\n    if e2 < end2:\n        end2 = e2\n\ngap = max(0, start2-end1, start1-end2)\nprint(gap)\n", "n = int(input())\nlc = 0\nrc = 10 ** 9 + 1\nfor i in range(n):\n    l, r = map(int, input().split())\n    lc = max(l, lc)\n    rc = min(r, rc)\nm = int(input())\nlp = 0\nrp = 10 ** 9 + 1\nfor i in range(m):\n    l, r = map(int, input().split())\n    lp = max(l, lp)\n    rp = min(r, rp)\nprint(max(0, lp - rc, lc - rp))", "n = int(input())\na = []\nfor _ in range(n):\n\tl, r = list(map(int, input().split()))\n\ta.append([l, r])\n\nm = int(input())\nb = []\nfor _ in range(m):\n\tl, r = list(map(int, input().split()))\n\tb.append([l, r])\n\nb.sort()\nres = 0\nfor i in a:\n\tres = max(b[m - 1][0] - i[1], res)\n\na.sort()\nfor i in b:\n\tres = max(a[n - 1][0] - i[1], res)\n\t\nprint(res)\n", "#!/usr/bin/env python3\nfrom sys import stdin,stdout\n\n\ndef ri():\n    return list(map(int, input().split()))\n\nn = int(input())\nminnr = 10**9+1\nmaxnl = -1\nminmr = 10**9+1\nmaxml = -1\nfor i in range(n):\n    l, r = ri()\n    minnr = min(minnr, r)\n    maxnl = max(maxnl, l)\n\nm = int(input())\nfor i in range(m):\n    l, r = ri()\n    minmr = min(minmr, r)\n    maxml = max(maxml, l)\n\nans = 0\nif minnr <= maxml:\n    ans = maxml - minnr\nelse:\n    ans = 0\n\n\nif minmr <= maxnl:\n    ans = max(ans, maxnl-minmr)\n\nprint(ans)\n\n", "n = int(input())\nsmin = 10**9\nsmax = 0\nfor i in range(n):\n\t(l, r) = (int(i) for i in input().split())\n\tif r<smin: smin = r\n\tif l>smax: smax = l\n\n\nm = int(input())\npmin = 10**9\npmax = 0\nfor i in range(m):\n\t(l, r) = (int(i) for i in input().split())\n\tif r<pmin: pmin = r\n\tif l>pmax: pmax = l\n\n\t\nprint(max(smax-pmin,pmax-smin, 0))\n", "n = int(input())\n\nms1 = 0\nmt1 = 20000000000\n\nms2 = 0\nmt2 = 20000000000\n\nfor _ in range(n):     \n    s, t = [int(x) for x in input().split()]\n    ms1 = max(ms1, s)\n    mt1 = min(mt1, t)\n      \nm = int(input())\n\nfor _ in range(m): \n    s, t = [int(x) for x in input().split()]\n    ms2 = max(ms2, s)\n    mt2 = min(mt2, t)\n    \ndif = max(ms1 - mt2, ms2 - mt1)\nprint(max(0, dif))", "import sys\nn=int(input())\nmin=sys.maxsize\nmax1=0\nfor _ in range(n):\n    a,b=map(int,input().split())\n    if min>b:\n        min=b\n    if max1<a:\n        max1=a\nm=int(input())\nmax=0\nmin1=sys.maxsize\nfor _ in range(m):\n    a,b=map(int,input().split())\n    if max<a:\n        max=a\n    if min1>b:\n        min1=b\nif max<=min:\n    ans=0\nelse:\n    ans=max-min\nif max1<=min1:\n    ans1=0\nelse:\n    ans1=max1-min1\nif ans>ans1:\n    print(ans)\nelse:\n    print(ans1)", "n=int(input())\nln=sorted(list(map(int,input().split())) for _ in range(n))\nm=int(input())\nlm=sorted(list(map(int,input().split())) for _ in range(m))\nlln=sorted(x[::-1] for x in ln)\nllm=sorted(x[::-1] for x in lm)\nans=ln[-1][0]-llm[0][0]\nif lm[-1][0]-lln[0][0]>ans: ans=lm[-1][0]-lln[0][0]\nprint(max(0,ans))", "\"\"\"Codeforces Round #404 (Div. 2)\n\nB. Anton and Classes\n\"\"\"\n\n\ndef dist_interval(a, b):\n    p0, q0 = a\n    p1, q1 = b\n    if not (q0 <= p1 or q1 <= p0):\n        return 0\n    return min(abs(p1 - q0), abs(q1 - p0))\n\n\ndef main():\n    n_chess_classes = int(input())\n    chess_interval = [tuple(map(int, input().split()))\n                      for _ in range(n_chess_classes)]\n\n    m_prog_classes = int(input())\n    prog_interval = [tuple(map(int, input().split()))\n                     for _ in range(m_prog_classes)]\n\n    ans = max(dist_interval(min(chess_interval, key=lambda x: x[1]),\n                            max(prog_interval)),\n              dist_interval(min(prog_interval, key=lambda x: x[1]),\n                            max(chess_interval)))\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "inp=int(input())\nminlchess=0\nminrchess=10000000000\nfor i in range(inp):\n    s=list(map(int,input().split()))\n    leftchess=s[0]\n    rightchess=s[1]\n    if leftchess>minlchess:\n        minlchess=leftchess\n    if rightchess<minrchess:\n        minrchess=rightchess\ninp=int(input())\nminlprog=0\nminrprog=10000000000\nfor i in range(inp):\n    s=list(map(int,input().split()))\n    leftprog=s[0]\n    rightprog=s[1]\n    if leftprog>minlprog:\n        minlprog=leftprog\n    if rightprog<minrprog:\n        minrprog=rightprog\ndif1=minlprog-minrchess\ndif2=minlchess-minrprog\nif dif1>dif2:\n    if dif1>0:\n        print(dif1)\n    else:\n        print('0')\nelse:\n    if dif2>0:\n        print(dif2)\n    else:\n        print('0')", "#!/bin/python3\narrn=[]\narrm=[]\nmaxstn=-1\nminendn=10**10\nmaxstm=-1\nminendm=10**10\nn=int(input())\nfor i in range(n):\n    arrn.append([int(x) for x in input().strip().split()])\n    if arrn[i][0]>maxstn:\n        maxstn=arrn[i][0]\n    if arrn[i][1]<minendn:\n        minendn=arrn[i][1]\n\nm=int(input())\nfor i in range(m):\n    arrm.append([int(x) for x in input().strip().split()])\n    if arrm[i][0]>maxstm:\n        maxstm=arrm[i][0]\n    if arrm[i][1]<minendm:\n        minendm=arrm[i][1]\nans=0\nif maxstn-minendm>ans:\n    ans=maxstn-minendm\nif maxstm-minendn>ans:\n    ans=maxstm-minendn\nprint(ans)\n\n\n"]