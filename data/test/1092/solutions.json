["n, m = map(int, input().split())\nt = sorted(map(int, input().split()))\nf, d = [1] * (n + 1), 1000000007\nfor i in range(2, n + 1): f[i] = (f[i - 1] * i) % d\np, q = 0, (f[t[0] - 1] * f[n - t[-1]]) % d\nfor i in range(m - 1):\n    l = t[i + 1] - t[i] - 1\n    q = (q * f[l]) % d\n    if l > 1: p += l - 1\nprint(pow(2, p, d) * f[n - m] * pow(q, d - 2, d) % d)", "MOD = 10 ** 9 + 7\nfact = [1]\nrfact = [1]\np2 = [1]\n\nfor i in range(1, 1010):\n    fact.append((fact[-1] * i) % MOD)\n    rfact.append((rfact[-1] * pow(i, MOD - 2, MOD)) % MOD)\n    p2.append((p2[-1] * 2) % MOD)\n\ndef C(n, k):\n    return (fact[n] * rfact[k] * rfact[n - k]) % MOD\n\nn, m = list(map(int, input().split()))\npos = sorted(list(map(int, input().split()))) + [n + 1]\n\nlast = 1\nans = 1\nn -= m\nfor x in pos:\n    v = x - last\n    ans = (ans * C(n, v)) % MOD\n    if last > 1 and x < pos[-1] and v > 0:\n        ans = (ans * p2[v - 1]) % MOD\n    last = x + 1\n    n -= v\n\nprint(ans)\n", "from math import factorial\nn, m = list(map(int, input().split()))\nlights = list(map(int, input().split(' ')))\nlights.sort()\nlights= [0] + lights\nlights.append(n+1)\n\nx = [lights[i+1] - lights[i]-1 for i in range(len(lights)-1)]\ns = sum(x)\nprod = factorial(s)\nfor i in x:\n    prod //= factorial(i)\n\nprod %= 10**9+7\n\nif len(x)>=3:\n    for i in range(1, len(x)-1):\n        if x[i] > 0:\n            prod*= pow(2, x[i]-1, 10**9+7)\nprint(prod%(10**9+7))\n", "import sys; sys.setrecursionlimit(1000000)\ndef solve():\n    MOD = 1000000007\n    n,m, = rv()\n    on, = rl(1)\n    on.sort()\n    res = 1\n    distances = list()\n    for i in range(0, m + 1):\n        first = on[i - 1] - 1 if i > 0 else 0\n        second = on[i] - 1 if i < m else n - 1\n        val = second - first - (1 if (i > 0 and i < m) else 0)\n        distances.append(val)\n    for i in range(1, n - m + 1):\n        res *= i\n    for val in distances:\n        for i in range(1, val + 1):\n            res //= i\n    res %= MOD\n    for i in range(1, len(distances) - 1):\n        for j in range(distances[i] - 1):\n            res *= 2\n            res %= MOD\n    print(res)\n\n\ndef rv(): return list(map(int, input().split()))\ndef rl(n): return [list(map(int, input().split())) for _ in range(n)]\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n\n\n", "#!/usr/bin/env python3\n\n\nmod = 10 ** 9 + 7\n\n\ndef factorial(n):\n    x = 1\n    for i in range(n):\n        yield x\n        x = x * (i + 1) % mod\n\nf = list(factorial(1001))\n\n\ndef C(n, k):\n    return f[n] * pow(f[k], mod - 2, mod) * pow(f[n - k], mod - 2, mod) % mod\n\n\nn, m = [int(x) for x in input().split()]\nb = [-1] + [int(x) - 1 for x in input().split()] + [n]\nb.sort()\n\nans = 1\ncur = n - m\nfor i in range(1, len(b)):\n    l = b[i] - b[i - 1] - 1\n    ans = ans * C(cur, l) % mod\n    if (l > 0) and (i > 1) and (i < len(b) - 1):\n        ans = ans * pow(2, l - 1, mod) % mod\n    cur -= l\n\nprint(ans)\n", "#!/usr/bin/env python3\n\nfrom itertools import accumulate\n\nmod = 10 ** 9 + 7\n\nf = [1] + list(accumulate(list(range(1, 1001)), lambda x, y: x * y % mod))\n\n\ndef C(n, k):\n    return f[n] * pow(f[k], mod - 2, mod) * pow(f[n - k], mod - 2, mod) % mod\n\n\nn, m = [int(x) for x in input().split()]\nb = [-1] + [int(x) - 1 for x in input().split()] + [n]\nb.sort()\n\nans = 1\ncur = n - m\nfor i in range(1, len(b)):\n    l = b[i] - b[i - 1] - 1\n    ans = ans * C(cur, l) % mod\n    if (l > 0) and (i > 1) and (i < len(b) - 1):\n        ans = ans * pow(2, l - 1, mod) % mod\n    cur -= l\n\nprint(ans)\n", "M,N = 1000000007, 2000\nf = [1]*N\nfor i in range(1,N):\n\tf[i] = f[i-1]*i%M\n\nn,m = list(map(int,input().split()))\nar = sorted(map(int,input().split()))\nbr = []\nfor i in range(1,m):\n\td = ar[i]-ar[i-1]-1\n\tif d>0:\n\t\tbr.append(d)\nres = pow(2,sum(br)-len(br),M)*f[n-m]%M\nbr = [ar[0]-1]+br+[n-ar[-1]]\nfor b in br:\n\tres = res*pow(f[b],M-2,M)%M\nprint(res)\n", "def fac(n):\n#    print('fac('+str(n)+')')\n    if n == 0:\n        return 1\n    mul = 1\n    for i in range(2,n+1):\n        mul *= i\n    return mul\n\nn,m = (int(t) for t in input().split(' '))\ngen = (int(t) for t in input().split(' '))\nv = []\nfor i in gen:\n    v.append(i)\nv.sort()\nans = fac(n-m)\n#print(type(ans))\nans //= fac(v[0]-1)\nfor i in range(1,len(v)):\n#    print('#')\n    ans //= fac(v[i]-v[i-1]-1)\n    if v[i]-v[i-1]-1 != 0:\n        ans *= 2**(v[i]-v[i-1]-2)\nans //= fac(n-v[len(v)-1])\nprint('%d' % (ans%(int(1e9)+7)))\n", "def fac(n):\n#    print('fac('+str(n)+')')\n    if n == 0:\n        return 1\n    mul = 1\n    for i in range(2,n+1):\n        mul *= i\n    return mul\n\nn,m = (int(t) for t in input().split(' '))\ngen = (int(t) for t in input().split(' '))\nv = []\nfor i in gen:\n    v.append(i)\nv.sort()\nans = fac(n-m)\n#print(type(ans))\nans //= fac(v[0]-1)\nfor i in range(1,len(v)):\n#    print('#')\n    ans //= fac(v[i]-v[i-1]-1)\n    if v[i]-v[i-1]-1 != 0:\n        ans *= 2**(v[i]-v[i-1]-2)\nans //= fac(n-v[len(v)-1])\nprint('%d' % (ans%(int(1e9)+7)))\n", "def fac(n):\n    if n == 0:\n        return 1\n    mul = 1\n    for i in range(2,n+1):\n        mul *= i\n    return mul\n\nn,m = (int(t) for t in input().split(' '))\ngen = (int(t) for t in input().split(' '))\nv = []\nfor i in gen:\n    v.append(i)\nv.sort()\nans = fac(n-m)\n#print(type(ans))\nans //= fac(v[0]-1)\nfor i in range(1,len(v)):\n#    print('#')\n    ans //= fac(v[i]-v[i-1]-1)\n    if v[i]-v[i-1]-1 != 0:\n        ans *= 2**(v[i]-v[i-1]-2)\nans //= fac(n-v[len(v)-1])\nprint('%d' % (ans%(int(1e9)+7)))\n", "def fac(n):\n    if n == 0:\n        return 1\n    mul = 1\n    for i in range(2,n+1):\n        mul *= i\n    return mul\n\nn,m = (int(t) for t in input().split(' '))\ngen = (int(t) for t in input().split(' '))\nv = []\nfor i in gen:\n    v.append(i)\nv.sort()\nans = fac(n-m)\n#print(type(ans))\nans //= fac(v[0]-1)\nfor i in range(1,len(v)):\n#    print('#')\n    ans //= fac(v[i]-v[i-1]-1)\n    if v[i]-v[i-1]-1 != 0:\n        ans *= 2**(v[i]-v[i-1]-2)\nans //= fac(n-v[len(v)-1])\nprint('%d' % (ans%(int(1e9)+7)))", "n, m = list(map(int, input().split()))\n\nt = sorted(map(int, input().split()))\n\nf, d = [1] * (n + 1), 1000000007\n\nfor i in range(2, n + 1): f[i] = (f[i - 1] * i) % d\n\np, q = 0, (f[t[0] - 1] * f[n - t[-1]]) % d\n\nfor i in range(m - 1):\n\n    l = t[i + 1] - t[i] - 1\n\n    q = (q * f[l]) % d\n\n    if l > 1: p += l - 1\n\nprint((pow(2, p, d) * f[n - m] * pow(q, d - 2, d)) % d)\n\n\n\n# Made By Mostafa_Khaled\n", "#from itertools import permutations\n#from operator import itemgetter, attrgetter\n#from functools import reduce\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nMOD = int(1e9 + 7)\nf = [1]\nfor i in range(1, 1000):\n    f.append((f[-1] * i) % MOD)\n\n\ndef bigmod(a, e, m):\n    ret = 1\n    while (e):\n        if (e % 2 == 1):\n            ret *= a\n            if (ret > m):\n                ret %= m\n            e -= 1\n        a *= a\n        e /= 2\n        if (a > m):\n            a %= m\n    return ret\n\n\ndef invmod(a, p):\n    return bigmod(a, p - 2, p)\n\n\nans = f[n - m]\nfor i in range(1, m):\n    mid = a[i] - a[i - 1] - 1\n    if mid > 0:\n        ans *= invmod(f[mid], MOD)\n        ans %= MOD\n    if (mid > 1):\n        ans *= bigmod(2, mid - 1, MOD)\n        ans %= MOD\nif a[0] > 1:\n    ans *= invmod(f[a[0] - 1], MOD)\n    ans %= MOD\nif a[m - 1] < n:\n    ans *= invmod(f[n - a[m - 1]], MOD)\n    ans %= MOD\nprint(ans)\n", "# https://codeforces.com/problemset/problem/294/C\n\nimport sys\nimport math\n\nmod = 10 ** 9 + 7\n\n\ndef factorial(n):\n    x = 1\n    for i in range(n):\n        yield x\n        x = x * (i + 1) % mod\n\n\nf = list(factorial(1001))\n\n\ndef C(n, k):\n    return f[n] * pow(f[k], mod - 2, mod) * pow(f[n - k], mod - 2, mod) % mod\n\n\ndef main():\n    # sys.stdin = open('E:\\\\Sublime\\\\in.txt', 'r')\n    # sys.stdout = open('E:\\\\Sublime\\\\out.txt', 'w')\n    # sys.stderr = open('E:\\\\Sublime\\\\err.txt', 'w')\n\n    # n = int(sys.stdin.readline().strip())\n    # a, b = map(int, sys.stdin.readline().strip().split()[:2])\n\n    n, m = [int(x) for x in sys.stdin.readline().strip().split()]\n    b = [-1] + [int(x) - 1 for x in sys.stdin.readline().strip().split()] + [n]\n    b.sort()\n\n    ans = 1\n    cur = n - m\n    for i in range(1, len(b)):\n        l = b[i] - b[i - 1] - 1\n        ans = ans * C(cur, l) % mod\n        if (l > 0) and (i > 1) and (i < len(b) - 1):\n            ans = ans * pow(2, l - 1, mod) % mod\n        cur -= l\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n# hajj\n#  \u3000\u3000\u3000\u3000\u3000\u3000 \uff3f\uff3f\n# \u3000\u3000\u3000\u3000\u3000\uff0f\uff1e\u3000\u3000\u30d5\n# \u3000\u3000\u3000\u3000\u3000| \u3000_\u3000 _ l\n# \u3000 \u3000\u3000\u3000\uff0f` \u30df\uff3fx\u30ce\n# \u3000\u3000 \u3000 /\u3000\u3000\u3000 \u3000 |\n# \u3000\u3000\u3000 /\u3000 \u30fd\u3000\u3000 \uff89\n# \u3000 \u3000 \u2502\u3000\u3000|\u3000|\u3000|\n# \u3000\uff0f\uffe3|\u3000\u3000 |\u3000|\u3000|\n# \u3000| (\uffe3\u30fd\uff3f_\u30fd_)__)\n# \u3000\uff3c\u4e8c\u3064\n\n__starting_point()", "import itertools\nimport math\n\ndef countEndgames(grid):\n    ls = []\n    for elt, gp in itertools.groupby(grid):\n        if elt == '.':\n            ls.append(len(list(gp)))\n    tot = 1\n    for i,g in enumerate(ls):\n        if i==0 and grid[0] == '.' or i==(len(ls)-1) and grid[-1] == '.':\n            continue\n        tot *= 2**(g-1)\n    tot *= math.factorial(sum(ls))\n    for g in ls:\n        tot //= math.factorial(g)\n    return tot % (10**9+7)\n\nn,x = list(map(int, input().split()))\nls = list(map(int, input().split()))\ngrid = ['.' for i in range(n)]\nfor x in ls:\n    grid[x-1] = '#'\nprint(countEndgames(grid))\n", "M= 1000000007\nf = [1]*2000\nfor i in range(1,2000):\n    f[i]=f[i-1]*i%M\nn,m = list(map(int,input().split()))\na = sorted(map(int,input().split()))\nb = []\nfor i in range (1,m):\n    x=a[i]-a[i-1]-1\n    if(x>0):\n        b.append(x)\n#print(b)\ncount = pow(2,sum(b)-len(b),M)*f[n-m]%M\n#print(count)\nb = [a[0]-1]+b+[n-a[-1]]\n#print(b)\n#print(f[3])\nfor i in b:\n\tcount = count*pow(f[i],M-2,M)%M\n\t#print(pow(f[i],M-2,M))\n\t#print(i)\nprint(count)\n", "mod = 1000000007\nfact = [1] * 2000\nfor i in range(1, 2000):\n    fact[i] = fact[i - 1] * i % mod\nn, m = list(map(int, input().split()))\na = sorted(map(int, input().split()))\nb = []\nfor i in range (1, m):\n    x = a[i] - a[i - 1] - 1\n    if (x > 0):\n        b.append(x)\ncount = pow(2, sum(b) - len(b), mod) * fact[n - m] % mod\nb = [a[0] - 1] + b + [n - a[-1]]\nfor i in b:\n\tcount = count * pow(fact[i], mod - 2, mod) % mod\nprint(count)\n\n", "def bpow(a, b):\n    if b==0 or a==1:\n        return 1\n    if b%2 != 0:\n        return a * bpow(a, b-1) % mod\n    else:\n        c = bpow(a, b/2) % mod\n        return c * c % mod\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na = [0] + a + [n+1]\na = sorted(a)\nfa = list()\nfa.append(1)\nmod = 1000000007\nfor i in range(1, 2010):\n    fa.append(fa[i-1] * i)\n    fa[i] %= mod\nans1 = 1\nans2 = 1\ns = 0\nfor i in range(0, m+1):\n    ans1 *= fa[a[i+1] - a[i] - 1]\n    s+= a[i+1] - a[i] - 1\n    ans1 %= mod\n    if i > 0 and i < m and a[i+1] - a[i] > 1:\n        ans2*= pow(2, a[i+1] - a[i] - 2, mod)\n        ans2%= mod\nprint((fa[s] * pow(ans1, mod-2, mod) * ans2)%mod)\n\n\n", "def fac(n):\n\tif n == 0:\n\t\treturn 1\n\tans =  1\n\tfor i in range(2, n + 1):\n\t\tans *= i\n\treturn ans\n\n\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\nans = fac(n - m)\nans //= fac(a[0] - 1)\nfor i in range(1, m):\n\tans //= fac(a[i] - a[i - 1] - 1)\n\tif a[i] - a[i - 1] - 1 != 0:\n\t\tans *= 2 ** (a[i] - a[i - 1] - 2)\nans //= fac(n - a[m - 1])\nprint(ans % 1000000007)\n\n", "def f(n):\n\tif n == 0:\n\t\treturn 1\n\tans =  1\n\tfor i in range(2, n + 1):\n\t\tans *= i\n\treturn ans\n \n \nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\na = sorted(a)\nans = f(n - m) // f(a[0] - 1)\nfor i in range(1, m):\n\tans //= f(a[i] - a[i - 1] - 1)\n\tif a[i] - a[i - 1] != 1:\n\t\tans *= 2 ** (a[i] - a[i - 1] - 2)\nans //= f(n - a[m - 1])\nprint(ans % 1000000007)\n\n", "x,y=map(int,input().split())\nfa=[0]*(x+1)\nfa[0]=1\nmd=(10**9)+7\nfor n in range(1,x+1):\n    fa[n]=(fa[n-1]*n)%md\n\ndef bnp(bs,pw):\n    res=1\n    while pw:\n        if pw&1:\n            res*=bs\n            res%=md\n        bs*=bs\n        bs%=md\n        pw//=2\n\n    return res\n\ns=sorted(list(map(int,input().split())))\n\nres=fa[x-y]\nres*=bnp(fa[s[0]-1],md-2)\nres%=md\nfor n in range(1,y):\n    v=s[n]-s[n-1]-1\n    if v:\n        res*=bnp(fa[v],md-2)\n        res%=md\n\nu=x-s[-1]\nif u:\n    res*=bnp(fa[u],md-2)\n    res%=md\n\nfor n in range(1,y):\n    u=s[n]-s[n-1]-1\n    if u:\n        res*=bnp(2,u-1)\n        res%=md\n\nprint(res%md)", "pri=pow(10,9)+7\np=pri\nfac=[1 for i in range((10**6)+1)]\nfor i in range(2,len(fac)):\n    fac[i]=(fac[i-1]*(i%pri))%pri\ndef modi(x):\n    return (pow(x,p-2,p))%p;\n    \ndef ncr(n,r):\n    x=(fac[n]*((modi(fac[r])%p)*(modi(fac[n-r])%p))%p)%p\n    return x;\n\n\nn,m=list(map(int,input().split()))\nz=list(map(int,input().split()))\nz.sort()\nans=[]\nfor i in range(len(z)):\n    if(i==0):\n        ans.append(z[0]-1)\n    else:\n        ans.append(z[i]-z[i-1]-1)\nans.append(n-z[-1])\n\n\ntemp=[]\nfor i in range(len(ans)):\n    if(i==0 or i==len(ans)-1):\n        temp.append(1)\n    else:\n        temp.append(pow(2,max(0,ans[i]-1),pri))\n\nseats=n-m\ncount=1\n\nfor i in range(len(ans)):\n    count=count*ncr(seats,ans[i])\n    \n    seats-=ans[i]\n    count%=pri\nfor i in range(len(temp)):\n    count=count*temp[i]\n    count%=pri\nprint(count)\n    \n    \n    \n", "n,m=list(map(int,input().split()))\nl=list(map(int,input().split()))\nl.sort()\nl1=[]\nl1.append(l[0]-1)\nfor i in range(m-1):\n    l1.append(l[i+1]-l[i]-1)\nf1=[1]*1001\nf2=[1]*1001\nmod=10**9+7\na=1\nb=1\nfor i in range(1,1001):\n    a*=i\n    a%=mod\n    f1[i]=a\n    b*=pow(i,mod-2,mod)\n    b%=mod\n    f2[i]=b\nans=1\nn-=m\nans*=f1[n]*f2[l1[0]]*f2[n-l1[0]]\nans%=mod\nn-=l1[0]\nfor i in range(1,len(l1)):\n    if l1[i]>0:\n        ans*=f1[n]*f2[l1[i]]*f2[n-l1[i]]*pow(2,l1[i]-1,mod)\n        ans%=mod\n        n-=l1[i]\nprint(ans)\n\n    \n    \n    \n\n\n", "import math\n\n\ndef solve( n, list1):\n    list1.sort()\n    inf = int(1e9 + 7)\n    t1 = [list1[0] - 1, n - list1[-1]]\n    t2 = []\n    for i in range(1, len(list1)):\n        t2.append((list1[i] - list1[i - 1] - 1))\n\n    num1 = 1\n    for i in range(n - len(list1)):\n        num1 = num1 * (i + 1)\n        num1 = num1 % inf\n    num2 = 1\n    num2 = math.factorial(t1[0]) % inf\n    num2 = num2 % inf\n    num2 = num2 * math.factorial(t1[1]) % inf\n    num2 = num2 % inf\n    for i in range(len(t2)):\n        num2 = num2 * math.factorial(t2[i])\n        num2 = num2 % inf\n    num2 = pow(num2, inf - 2, inf)\n    num3 = 1\n    for i in range(len(t2)):\n        if t2[i] - 1 < 0:\n            continue\n        num3 = (num3 * pow(2, t2[i] - 1, inf)) % inf\n\n    num1 = num1 * num2\n    num1 = num1 % inf\n    num1 = num1 * num3\n    num1 = num1 % inf\n\n    return int(num1)\nn,m = map(int,input().split())\nlist1 = list(map(int,input().split()))\nprint(solve(n,list1))", "M= 1000000007\nf = [1]*2000\nfor i in range(1,2000):\n    f[i]=f[i-1]*i%M\nn,m = map(int,input().split())\na = sorted(map(int,input().split()))\nb = []\nfor i in range (1,m):\n    x=a[i]-a[i-1]-1\n    if(x>0):\n        b.append(x)\ncount = pow(2,sum(b)-len(b),M)*f[n-m]%M\nb = [a[0]-1]+b+[n-a[-1]]\nfor i in b:\n\tcount = count*pow(f[i],M-2,M)%M\nprint(count)"]