["P = 10**9 + 7\n\nn, k = list(map(int, input().split()))\n\nprint(n + 1 if k == 1 else (k * pow(2 * k - 1, n, P) - pow(k, n, P)) * pow(k - 1, P - 2, P) % P)\n", "import math\n\ndef euclid_algorithm(a, b):\n    t1, t2 = abs(a), abs(b)\n    #saving equalities:\n    #t1 == x1 * a + y1 * b,\n    #t2 == x2 * a + y2 * b. \n    x1, y1, x2, y2 = int(math.copysign(1, a)), 0, 0, int(math.copysign(1, b))\n    if t1 < t2:\n        t1, t2 = t2, t1\n        x1, y1, x2, y2 = x2, y2, x1, y1\n\n    while t2 > 0:\n        k = int(t1 // t2)\n        t1, t2 = t2, t1 % t2\n        #t1 - k * t2 == (x1 - k * x2) * a + (y1 - k * y2) * b\n        x1, y1, x2, y2 = x2, y2, x1 - k * x2, y1 - k * y2\n\n    return t1, x1, y1\n\ndef opposite_element(x, p):\n    gcd, k, l = euclid_algorithm(x, p)\n    if gcd != 1:\n        return -1\n    return k % p\n\ndef solve(n, m, p):\n    if (m-1) % p == 0:\n        return (n + 1) * pow(m, n, p) % p\n    else:\n        S = pow(m, n, p)\n        k = opposite_element(m, p)\n        l = (2*m - 1) * k % p\n        q = opposite_element(l - 1, p)\n        S += pow(m, n, p) * (pow(l, n, p) - 1) * q\n        S %= p\n        return S\n\np = 10 ** 9 + 7\nn, m = [int(x) for x in input().split()]\nprint(solve(n, m, p))\n", "p = 10**9+7\nn, m = map(int, input().split())\n\nprint (n+1 if m == 1 else pow(m, n, p)*(1+(pow(2*m-1, n, p)*pow(m, p-1-n, p) - 1)*m*pow(m-1, p-2, p))%p)", "P = 10**9 + 7\n\nn, k = map(int, input().split())\n\nprint(n + 1 if k == 1 else (k * pow(2 * k - 1, n, P) - pow(k, n, P)) * pow(k - 1, P - 2, P) % P)", "\nn, m = list(map(int, input().split()))\n\nM = 1000000007\n\n\nif m == 1:\n    print(n + 1)\nelse:\n    print((m * pow(2 * m - 1, n, M) - pow(m, n, M)) * pow(m - 1, M - 2, M) % M)\n", "P = 10**9 + 7\n\nn, k = list(map(int, input().split()))\n\nprint(n + 1 if k == 1 else (k * pow(2 * k - 1, n, P) - pow(k, n, P)) * pow(k - 1, P - 2, P) % P)\n", "n,m=map(int,input().split())\nx,y,M=0,1,1000000007\nfor i in range(n):\n\tx=((2*m-1)*x+y)%M;y=y*m%M\nprint((y+m*x)%M)", "n,m=map(int,input().split())\nx,y,M=0,1,10**9+7\nwhile n>0:\n\tx,y,n=(2*m*x-x+y)%M,y*m%M,n-1\nprint((y+m*x)%M)", "import sys\nfrom array import array\n\nn, m = list(map(int, input().split()))\ndp = [array('i', [0])*(n+1) for _ in range(2)]\ndp[0][0] = dp[1][0] = 1\nmod = 10**9 + 7\n\nfor i in range(1, n+1):\n    dp[0][i] = (dp[0][i-1] * m + dp[0][i-1] * (m-1)) % mod\n    dp[1][i] = (dp[0][i-1] * m + dp[1][i-1] * m) % mod\n\nprint(dp[1][-1])\n"]