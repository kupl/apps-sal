["n = int(input())\na = list(map(int, input().split()))\nk = input()\npref = [a[0]]\nfor i in range(1, n):\n    pref.append(pref[-1] + a[i])\ncur = 0\nans = 0\nfor i in range(n - 1, -1, -1):\n    if k[i] == '0':\n        continue\n    if cur + (pref[i - 1] if i > 0 else 0) > ans:\n        ans = cur + (pref[i - 1] if i > 0 else 0)\n    cur += a[i]\ncur = 0\nfor i in range(n):\n    if k[i] == '1':\n        cur += a[i]\nans = max(ans, cur)\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\nsum = [0] * (n + 1)\nsum[1] = a[0]\nsum[0] = 0\nfor i in range(2, n + 1):\n    sum[i] = sum[i - 1] + a[i - 1]    \ns = input()\nmaxi = 0\ncur = n - 1\ntmp = 0\nwhile (cur >= 0):\n    if s[cur] == '1':\n        x = sum[cur] + tmp\n        if x > maxi:\n            maxi = x\n        tmp += a[cur]\n    cur -= 1\nif tmp > maxi:\n    maxi = tmp\nprint(maxi)        \n\n", "N = int(input())\ndata = [int(i) for i in input().split()]\nM = input()\nSgood = [0] * N\nSgood[0] = max(data[0], 0)\nfor i in range(1, N):\n    Sgood[i] = Sgood[i - 1] + max(data[i], 0)\n\nSorig = [0] * N\nSorig[0] = max(data[0] if M[0] == '1' else 0, 0)\nfor i in range(1, N):\n    Sorig[i] = Sorig[i - 1] + max(data[i] if M[i] == '1' else 0, 0)\n\nanswer = Sorig[-1]\nfor i in range(1, N):\n    if M[i] == '1':\n        answer = max((answer, Sgood[i - 1] + Sorig[-1] - Sorig[i]))\n\nprint(answer)\n", "import sys\nN=int(sys.stdin.readline())\n\nA=list(map(int,sys.stdin.readline().split()))\nSums=[0]*(N)\nm=sys.stdin.readline()\n\n\nmaxx=0\ns=0\nfor i in range(N):\n    s+=A[i]\n    Sums[i]=s\n    if(m[i]==\"1\"):\n        maxx+=A[i]\nind=N-1\nfor i in range(N):\n    if(m[i]!=\"1\"):\n        ind=i\n        break\ntemp_ans=0\n\nconf=\"\"\nfor i in range(N-1,0,-1):\n    if(i==ind):\n        break\n    if(m[i]==\"1\"):\n        temp_ans+=A[i]\n        if(A[i]<Sums[i-1]):\n            ans=temp_ans-A[i]+Sums[i-1]\n            if(ans>maxx):\n                maxx=ans\nprint(maxx)\n", "n = int(input())\na = list(map(int, input().split()))\nm = input()\n\nres, summ = 0, 0\n\nfor i, bit in enumerate(m):\n    if bit == '1':\n        res = max(res + a[i], summ) # try to add\n    summ += a[i]\n\nprint(res)", "m = int(input())\nlistValue = input().split()\nx = input().rstrip('\\n')\n\nvalues = [int(v) for v in listValue]\nreverse_x = list(x)\nreverse_int = [int(s) for s in reverse_x]\nreverse_list = [0] * m\nsum_list = 0\nfor i in range(m):\n    if reverse_x[i] == '1':\n        reverse_list[i] = max(reverse_list[i - 1] + values[i], sum_list)\n    else:\n        reverse_list[i] = reverse_list[i - 1]\n    sum_list += values[i]\n\nprint(reverse_list[-1])\n", "n = int(input())\na = list(map(int, input().split()))\nb = [0] + a\nfor i in range(1, n + 1):\n    b[i] += b[i - 1]\nt = input()\ns, m, i = 0, 0, t.rfind('1')\nwhile i >= 0:    \n    d = b[i] + s\n    if d > m: m = d\n    if d + a[i] < m: break\n    s += a[i]\n    i = t[: i].rfind('1')\nprint(max(m, s))", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, = readln()\na = readln()\ns = [0] * (n + 1)\nsm = [0] * (n + 1)\nm = list(input())\nfor i in range(n):\n    s[i + 1] = s[i] + a[i]\n    sm[i + 1] = sm[i] + (a[i] if m[i] == '1' else 0)\nans = sm[n]\nfor i in range(n - 1, -1, -1):\n    if m[i] == '1':\n        ans = max(ans, s[i] + sm[n] - sm[i + 1])\nprint(ans)\n", "n=int(input())\na=list(list(map(int,input().split())))\nm=input()\ns=[int(i) for i in m]\nmax=0\nsum=0\nfor k in range(n):\n    sum+=a[k]*s[k]\nif sum>max:\n    max=sum\n\nfor i in range(1,n):\n    p=s[i]\n    q=s[i-1]\n    if p and q==0:\n        sum-=a[i]\n        s[i]=0\n        for j in range(i-1,-1,-1):\n            if s[j]:\n                break\n            sum+=a[j]\n            s[j]=1\n        if sum>max:\n            max=sum\n\n\nprint(max)", "n=int(input());a=list(map(int,input().split()));c=input();o,k=0,0;dp=[]\nfor i in range(n):\n    e=int(c[i])\n    if(e):\n        if(a[i]>k):\n            o=o+a[i]\n        else:\n            o=o+k;k=a[i]\n    k=k+(1-e)*a[i]\nprint(o)", "n = int(input())\na = list(map(int, input().split()))\ns = input()\n\nans = 0\nsm = 0\n\nfor i in range(n):\n    if s[i] == '1':\n        ans = max(ans + a[i], sm)\n    sm += a[i]\n\nprint(ans)\n\n", "\nn = int(input())\na = list(map(int, input().split()))\ns = input()\n\nprefix = [0] * n\nprefix[0] = a[0]\nfor i in range(1, n):\n    prefix[i] = prefix[i - 1] + a[i]\n\nlast = 0\nansw = 0\n\nif len(s) > n:\n    print(sum(a))\n    return\n\nfor i, x in enumerate(s):\n    if x == '1':\n        last = i\n    answ += a[i] * int(x)\n\ntotal = 0\nfor i in range(last, 0, -1):\n    if s[i] == '0': continue\n    answ = max(answ, total + prefix[i - 1])\n    total += a[i]\n\nprint(answ)\n", "n = int(input())\na = list(map(int, input().split(\" \")))[::-1]\nm = input()[::-1]\n\nsumall = [0]*(n+1)\nfor x, ai in enumerate(reversed(a)):\n    i = n-1 - x\n    sumall[i] = sumall[i+1]+ai\n\nsumm = [0]*(n+1)\nfor i, ai in enumerate(a):\n    summ[i] = summ[i-1]\n    if(m[i] == '1'):\n        summ[i] += ai\n\nmaxval = summ[n-1]\n\nfor i in range(n):\n    \n    if m[i]== '1' and maxval < summ[i-1] + sumall[i+1]:\n        maxval = summ[i-1] + sumall[i+1] \n\nprint(maxval)\n", "n = int(input())\n\na = list(map(int, input().split()))\n\nm = input()\n\n\n\nres, summ = 0, 0\n\n\n\nfor i, bit in enumerate(m):\n\n    if bit == '1':\n\n        res = max(res + a[i], summ) # try to add\n\n    summ += a[i]\n\n\n\nprint(res)\n\n\n\n# Made By Mostafa_Khaled\n", "n = int(input())\ns = list(map(int, input().split()))\nbit = input()\nres, m = 0, 0\nfor i in range(len(bit)):\n    if bit[i] == '1':\n        res = max(s[i] + res, m)\n    m += s[i]\nprint(res)", "n = int(input())\na = list(map(int,input().split()))\ns = input()\nm = len(s)\n\nprevSum = [0]*n\nprevSum[0] = a[0]\nfor i in range(1,n):\n    prevSum[i] = prevSum[i-1]+a[i]\n\ndp = [0]*m\nlastOne = -1\nif (s[0]!=\"0\"):\n    lastOne = 0\n    dp[0] = a[0]\n\nfor i in range(1,m):\n    if (s[i]==\"0\"):\n        dp[i] = dp[i-1]\n    else:\n        y = 0\n        if (lastOne!=-1):\n            y = dp[lastOne]\n        dp[i] = max(prevSum[i-1],y+a[i])\n        lastOne = i\n\nprint(dp[m-1])\n", "\ndef main():\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = input()\n    ans, s = 0, 0\n    for i in range(n):\n        if k[i] == \"1\":\n            ans = max(ans + a[i], s)\n        s += a[i]\n    print(ans)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "'''input\n2\n3 8\n10\n'''\nfrom sys import stdin, stdout, setrecursionlimit\nfrom collections import deque, defaultdict\nfrom bisect import bisect_left\n\n# main starts\nn = int(stdin.readline().strip())\narr = list(map(int, stdin.readline().split()))\nbarr = list(stdin.readline().strip())\nprefix = [0] * n\nprefix[0] = arr[0]\nfor i in range(1, n):\n\tprefix[i] = prefix[i - 1] + arr[i]\nmx = 0\ntemp = 0\nfor i in range(n - 1, -1, -1):\n\tif barr[i] == '1':\n\t\tif i >= 1:\n\t\t\tmx = max(mx, temp + prefix[i -1])\n\t\ttemp += arr[i]\n\t# print(temp, mx)\nmx = max(mx, temp)\nprint(mx)\n", "n = int(input())\na = list(map(int, input().split()))\ns = input()\n \nans = 0\nsm = 0\n \nfor i in range(n):\n    if s[i] == '1':\n        ans = max(ans + a[i], sm)\n    sm += a[i]\n \nprint(ans)", "def main():\n    input()\n    a = [int(c) for c in input().split()]\n    s = list(input())\n\n    sum_ = ans = 0\n    for a_i, s_i in zip(a, s):\n        if s_i == '1':\n            ans = max(ans + a_i, sum_)\n        sum_ += a_i\n\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def main():\n    input()\n    a = [int(c) for c in input().split()]\n    s = list(input())\n\n    sum_ = ans = 0\n    for a_i, s_i in zip(a, s):\n        if s_i == '1':\n            ans = max(ans + a_i, sum_)\n        sum_ += a_i\n\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n__starting_point()", "n=int(input())\na=input().split()\ns=input()\nif(\"1\" not in s):\n    print(0)\nelse:\n    ls=[0 for i in range(n)]\n    prefix=[0 for i in range(n)]\n    valid=[0 for i in range(n)]\n    for i in range(n):\n        if(i==0):\n            if(s[i]==\"1\"):\n                ls[0]=int(a[i])\n                valid[i]=1\n            prefix[0]=int(a[i])\n        else:\n            if(s[i]==\"1\"):\n                ls[i]=ls[i-1]+int(a[i])\n                valid[i]=1\n            else:\n                ls[i]=ls[i-1]\n            prefix[i]=prefix[i-1]+int(a[i])\n    new_ls=[ls[n-1]]\n    for i in range(1,n):\n        if(valid[i]):\n            new_ls.append(prefix[i-1]+ls[n-1]-ls[i])\n    print(max(new_ls))        ", "from sys import stdin\nfrom itertools import accumulate\n\n\ndef arr_enu():\n    return [[i, int(x)] for i, x in enumerate(stdin.readline().split())]\n\n\ndef get_col(arr, i):\n    return [row[i] for row in arr]\n\n\ndef arr_sum(arr):\n    arr.insert(0, 0)\n    return list(accumulate(arr, lambda x, y: x + y))\n\n\ndef fun(x, y):\n    return int(x) * y[1]\n\n\nn, a, s = int(stdin.readline()), arr_enu(), stdin.readline()\ncum, cum2 = arr_sum(get_col(a, 1)), arr_sum(list(map(fun, s, a)))\nans = cum2[-1]\n\nfor i in range(n - 1, -1, -1):\n    if s[i] == '1':\n        ans = max(ans, cum[i] + (cum2[-1] - cum2[i + 1]))\n\nprint(ans)\n", "n = int(input())\na = list(map(int, input().split()))\ncum_sum = [0] * (n+1)\nact_sum = [0] * (n+1)\nm = list(input())\nfor i in range(n):\n    cum_sum[i+1] = cum_sum[i] + a[i]\n    act_sum[i+1] = act_sum[i]\n    if m[i] == '1':\n        act_sum[i+1] += a[i]\nres = 0\nfor i in range(n-1, -1, -1):\n    if m[i] == '1':\n        res = max(res, cum_sum[i] - act_sum[i+1])\nprint(res + act_sum[n])\n", "n = int(input())\na = list(map(int, input().split()))\n\ns = input()\nans, S = 0, 0\n\nfor i in range(n):\n  if s[i] == '1':\n    ans = max(ans + a[i], S)\n  S += a[i]\nprint(ans)\n"]