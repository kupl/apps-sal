["import bisect\n\nn, m = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\n# n : number of integers\n# m : mod\n\nhalf_n = n // 2\n\na1, a2 = a[:half_n], a[half_n:]\n\nn1, n2 = len(a1), len(a2)\n\nr1, r2 = [], []\n\ndef dfs1(i, sum):\n    if i == n1:\n        r1.append(sum)\n    else:\n        dfs1(i+1, sum)\n        dfs1(i+1, (sum+a1[i])%m)\n\ndef dfs2(i, sum):\n    if i == n2:\n        r2.append(sum)\n    else:\n        dfs2(i+1, sum)\n        dfs2(i+1, (sum+a2[i])%m)\n\ndfs1(0,0)\ndfs2(0,0)\n\nr1, r2 = [sorted(set(x)) for x in [r1, r2]]\n\nans = 0\n\nfor i, x in enumerate(r1):\n    p = bisect.bisect_left(r2, m-x)\n    tmp_ans = r2[p-1] + x\n    if tmp_ans > ans:\n        ans = tmp_ans\n\nprint(ans)\n\n\n\n\n\n\n\n\n\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\na2=sorted(set(a2))\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    ans=max(ans,a1[j-1]+i)\nprint(ans)\n    \n    \n    \n    \n    \n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    ans=max(ans,a1[j-1]+i)\nprint(ans)\n    \n    \n    \n    \n    \n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=set(),set()\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.add(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.add(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    ans=max(ans,a1[j-1]+i)\nprint(ans)\n    \n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in range(len(a2)):\n    j=bisect.bisect_left(a1,m-a2[i])\n    ans=max(ans,a1[j-1]+a2[i])\nprint(ans)\n    \n    \n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    ans=max(ans,a1[j-1]+i)\n    k=a1[j-1]+i\n    if ans<k:\n        ans=k\nprint(ans)\n    \n    \n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    k=a1[j-1]+i\n    if ans<k:\n        ans=k\nprint(ans)\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=set(),set()\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.add(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.add(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(a1)\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "n,m=list(map(int,input().split()))\n#a=list(map(int,input().split()))\na=[int(i) for i in input().split()]\nimport bisect\na1,a2=[],[]\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\nimport array\na1,a2=array.array('L'),array.array('L')\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "import bisect\nimport array\nn,m=list(map(int,input().split()))\na=array.array('L',list(map(int,input().split())))\na1,a2=array.array('L'),array.array('L')\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=array.array('L',sorted(set(a1)))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "import bisect\nimport array\nn,m=list(map(int,input().split()))\na=array.array('L',list(map(int,input().split())))\na1,a2=array.array('L'),array.array('L')\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\nk=0\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=array.array('L',sorted(set(a1)))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "import bisect\nimport array\nn,m=list(map(int,input().split()))\na=array.array('L')\na.extend(list(map(int,input().split())))\na1,a2=array.array('L'),array.array('L')\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=array.array('L',sorted(set(a1)))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "import bisect\nimport array\nn,m=list(map(int,input().split()))\na=list(map(int,input().split()))\na1,a2=array.array('L'),array.array('L')\nn1=n//2\n\ndef sums1(i,sum=0):\n    if i==n1:\n        a1.append(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        a2.append(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=array.array('L',sorted(set(a1)))\n\nfor i in a2:\n    j=bisect.bisect_left(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\napp1=a1.append\napp2=a2.append\ndef sums1(i,sum=0):\n    if i==n1:\n        app1(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        app2(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\nbis=bisect.bisect_left\ndef solve(i):\n    nonlocal ans\n    j=bis(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\n    return ans\nl=list(map(solve,a2))\nprint(l[-1])\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\napp1=a1.append\napp2=a2.append\ndef sums1(i,sum=0):\n    if i==n1:\n        app1(sum)\n    else:\n        sums1(i+1,(sum+a[i])%m)\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        app2(sum)\n    else:\n        sums2(i+1,(sum+a[i])%m)\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\nbis=bisect.bisect_left\nfor i in a2:\n    j=bis(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\nprint(ans)\n", "n,m=list(map(int,input().split()))\na=list(map(int,input().split()))\nimport bisect\na1,a2=[],[]\nn1=n//2\napp1=a1.append\napp2=a2.append\ndef sums1(i,sum=0):\n    if i==n1:\n        app1(sum%m)\n    else:\n        sums1(i+1,(sum+a[i]))\n        sums1(i+1,sum)\n        \ndef sums2(i,sum=0):\n    if i==n:\n        app2(sum%m)\n    else:\n        sums2(i+1,(sum+a[i]))\n        sums2(i+1,sum)\n\nsums1(0)\nsums2(n1)\n\nans=0\nend=len(a2)-1\n\na1=sorted(set(a1))\nbis=bisect.bisect_left\ndef solve(i):\n    nonlocal ans\n    j=bis(a1,m-i)\n    if ans<a1[j-1]+i:\n        ans=a1[j-1]+i\n    return ans\nl=list(map(solve,a2))\nprint(l[-1])", "n,m=list(map(int,input().split()))\na=[int(i)%m for i in input().split()]\nx,y=set(),set()\ndef f(x,n,i,s=0):\n    if i==n:\n        x.add(s)\n    else:\n        f(x,n,i+1,(s+a[i])%m)\n        f(x,n,i+1,s)\nh=n//2\nf(x,h,0)\nf(y,n,h)\ny=sorted(y)\nimport bisect\nk=0\nprint(max(i+y[bisect.bisect_left(y,m-i)-1]for i in x))\n", "from bisect import *\nf = lambda: map(int, input().split())\nn, m = f()\nt = list(f())\ndef g(x, i, n, s):\n    if i < n:\n        g(x, i + 1, n, s + t[i])\n        g(x, i + 1, n, s)\n    else: x.add(s % m)\nk = n >> 1\nx, y = set(), set()\ng(x, 0, k, 0)\ng(y, k, n, 0)\ny = sorted(y)\nprint(max(i + y[bisect_left(y, m - i) - 1] for i in x))", "n,m=map(int,input().split())\na=[int(i) for i in input().split()]\nx,y=set(),set()\ndef f(x,n,i,s=0):\n    if i==n:x.add(s%m)\n    else:\n        f(x,n,i+1,s+a[i])\n        f(x,n,i+1,s)\nh=n//2\nf(x,h,0)\nf(y,n,h)\ny=sorted(y)\nimport bisect\nk=0\nprint(max(i+y[bisect.bisect_left(y,m-i)-1]for i in x))", "n,m=list(map(int,input().split()))\nl=[int(i) for i in input().split()]\nfirst=l[:n//2]\nsec=l[n//2:]\nn1=n//2 \nn2=n//2+n%2 \nt1=(1<<n1)\nt2=(1<<n2)\ns1=[]\nfor i in range(t1):\n    now=0 \n    for j in range(len(first)):\n        if i&(1<<j):\n            now+=first[j]\n    s1.append(now%m)\ns2=[]\nfor i in range(t2):\n    now= 0 \n    for j in range(len(sec)):\n        if i&(1<<j):\n            now+=sec[j]\n    s2.append(now%m)\ns1.sort()\ns2.sort() \nmaxi=0 \ndef check(l,x): #largest number less than x in l  # l is asc \n    lo=0 \n    hi=len(l)-1 \n    ans=0 \n    while lo<=hi: \n        mi=(lo+hi)>>1 \n        if l[mi]<x:\n            ans=l[mi] \n            lo=mi+1\n        else:\n            hi=mi-1 \n    return ans \nfor i in s1:\n    req=m-i \n    pair=check(s2,req)\n    maxi=max(maxi,(i+pair)%m)\nprint(maxi)\n"]