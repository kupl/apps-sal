["import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\nx, y, a, b = map(int, f.readline().strip().split())\na1, a2 = [], []\nif a+(x-a) <= b:\n    print(0)\nelse:\n    for i in range(a, x+1):\n        for k in range(b, y+1):\n            if i > k:\n                a1.append(i)\n                a2.append(k)\n    print(len(a1))\n    for i in range(len(a1)):\n        print(a1[i], a2[i])", "#149 Heads or Tails\n\ndata = input().split(\" \")\nx = int(data[0])\ny = int(data[1])\na = int(data[2])\nb = int(data[3])\ncounter = 0\nfor i in range(a, x+1):\n\tfor j in range(b, y+1):\n\t\tif j < i:\n\t\t\tcounter += 1\nif counter == 0:\n\tprint(0)\nelse:\n\tprint(counter)\n\tfor i in range(a, x+1):\n\t\tfor j in range(b, y+1):\n\t\t\tif j < i:\n\t\t\t\tprint(\"%s %s\" %(i, j))\n\t\t\t\tnoAnswer = False", "def g(n):\n    k = (n - a + 1)\n    return ((n + a) * k) // 2 - b * k\n    \nx, y, a, b = list(map(int, input().split()))\na = max(a, b + 1)\n\nif x <= b: print(0)\nelse:\n    if y > x - 2: print(g(x))\n    elif y >= a - 1: print((x - y - 1) * (y - b + 1) + g(y + 1))\n    else: print((x - a + 1) * (y - b + 1))\n    \nfor i in range(a, x + 1):\n    for j in range(b, min(i, y + 1)):\n        print(i, j)\n", "x,y,a,b=list(map(int,input().split()))\nResults=[]\nfor i in range(a,x+1):\n    for j in range(b,y+1):\n        if(j>=i):\n            continue\n        Results.append((i,j))\nprint(len(Results))\n\nResults.sort()\n\nfor item in Results:\n    print(item[0],item[1])\n\n", "def all_outcome(x, y, a, b):\n    s = x + y\n    outcomes = []\n\n    # first player's outcomes\n    for c in range(a, x+1):\n        for d in range(b, y+1):\n            if d >= b and d <= y and c > d:\n                outcomes.append([c, d])\n        \n    # if\n    print(len(outcomes))\n    for o in outcomes:\n        print(o[0], o[1])\n\nl = input().split()\nx = int(l[0])\ny = int(l[1])\na = int(l[2])\nb = int(l[3])\n\nall_outcome(x,y, a, b)\n", "x, y, a, b = map(int, input().split())\nans = []\n\nfor i in range(a, x + 1):\n\tfor j in range(b, y + 1):\n\t\tif i > j:\n\t\t\tans.append((i, j))\n\nprint(len(ans))\n[print(x[0], x[1]) for x in ans]", "x, y, a, b = (int(x) for x in input().split())\nval = []\nfor i in range(max(a, b + 1), x + 1):\n    for j in range(b, min(i - 1, y) + 1):\n        val.append((i, j))\nprint(len(val))\nfor o in val:\n    print(o[0], o[1])", "x, y, a, b = [int(x) for x in input().split()]\nl = []\nfor i in range(a, x + 1):\n\tfor j in range(b, y + 1):\n\t\tif j < i:\n\t\t\tl.append(str(i) + ' ' + str(j))\nprint(len(l))\nprint('\\n'.join(l))\n", "def main():\n    x, y, a, b = map(int, input().split())\n    res = [None]\n    for i in range(a, x + 1):\n        si = str(i)\n        for j in range(b, min(y + 1, i)):\n            res.append(' '.join((si, str(j))))\n    res[0] = str(len(res) - 1)\n    print('\\n'.join(res))\n\n\ndef __starting_point():\n    main()\n__starting_point()", "a, b, c, d = list(map(int, input().split(' ')))\n\nct = 0\nct2 = 0\nbadtoed= [] \n\nfor i in range(1, a+1):\n    for j in range(1, b+1):\n        if i > j and i >= c and j >= d:\n            badtoed.append(str(i) + ' ' + str(j))\n            ct += 1\n\nprint(ct)\nfor i in badtoed:\n    print(i)\n", "f=input().split()\n\na=int(f[0])\nb=int(f[1])\n\nam=int(f[2])\nbm=int(f[3])\n\nl=[]\n\n\nfor i in range(bm+1,a+1):\n    if i>bm and i>=am:\n        for j in range(bm,i):\n            if j<=b:\n                p=[]\n                p.append(i)\n                p.append(j)\n                l.append(p)\nif(len(l)==0):\n    print(0)\nelse:\n    print(len(l))\n    for i in range(len(l)):\n        print(l[i][0],l[i][1])", "import sys\nimport math\n \nx, y, a, b = [int(x) for x in (sys.stdin.readline()).split()]\n\nres = []\nfor j in range(x, a - 1, -1):\n    for i in range(min(j - 1, y), b - 1, -1):\n        res.append((j, i))\n\nprint(len(res))\nfor i in res[::-1]:\n    print(i[0], i[1])", "x, y, a, b = [int(x) for x in input().split(' ')]\n\nr = []\nfor i in range(a,x+1):\n   for j in range(b,y+1):\n      if i > j:\n         r.append([i,j])\n\nl = len(r)\nr.sort(key=lambda z:10*l*z[0]+z[1])\nprint(len(r))\nlist(map(lambda z:print('%s %s'%(z[0],z[1])),r))", "x, y, a, b = map(int, input().split())\nans = []\nfor i in range(a, x + 1):\n    for j in range(b, y + 1):\n        if i > j:\n            ans.append((i, j))\n\nprint(len(ans))\n[print(x[0], x[1]) for x in ans]\n", "# coding=utf-8\n\nx, y, a, b = list(map(int, input().split(' ')))\nans = 0\nresult = ''\nfor i in range(a, x + 1):\n    for j in range(b, y + 1):\n        if i > j:\n            ans += 1\n            result += '%s %s\\n' % (i, j)\nprint(ans)\nif ans:\n    print(result)\n", "x, y, a, b = list(map(int, input().split()))\n\nresult = []\nfor i in range(a, x + 1):\n    for j in range(b, min(i, y + 1)):\n        result.append((i, j))\nprint(len(result))\nfor x, y in result:\n    print(x, y)\n", "x,y,a,b=input().split(' ')\nx=int(x)\ny=int(y)\na=int(a)\nb=int(b)\nn=0\nfor i in range(a,x+1):\n    for j in range(b,min(i,y+1)):\n        n+=1\nprint(n)\nfor i in range(a,x+1):\n    for j in range(b,min(i,y+1)):\n        print(i,' ',j)\n", "x,y,a,b = list(map(int,input().split(' ')))\n\nc = []\n\nfor p in range(a,x+1):\n    for q in range(b,y+1):\n        if(q<p):\n            c.append((p,q))\n\nprint(len(c))\nif c != []:\n    for p in c :\n        print(p[0],p[1])\n\n", "l = input().split()\nl = [int(x) for x in l]\nx = l[0]\ny = l[1]\na = l[2]\nb = l[3]\n\n\nr = []\nfor i in range(a, x+1):\n    for j in range(b, y+1):\n        if i>j:\n            r.append((i, j))\n        else:\n            break\n\nprint(len(r))\nfor x in r:\n    print(x[0], x[1])\n\n", "x, y, a, b = map(int, input().split())\nans = []\nfor vasya in range(max(b + 1, a), x + 1):\n  for petya in range(b, min(vasya, y + 1)):\n    ans.append((petya, vasya))\nprint(len(ans))\nprint(\"\\n\".join([\"%d %d\" % (b, a) for a, b in ans]))", "# your code goes here\narr = input().split()\np = int(arr[0])\nq = int(arr[1])\na = int(arr[2])\nb = int(arr[3])\nflag = 0\nif a <= b:\n\ta = b+1\nx = b\ny = a\nwhile(a <= p):\n\tb = x\n\twhile(b < a and b <= q):\n\t\tflag += 1\n\t\t#print(str(a) + ' ' + str(b))\n\t\tb += 1\n\ta += 1\nprint(str(flag))\na = y\nb = x\nwhile(a <= p):\n\tb = x\n\twhile(b < a and b <= q):\n\t\tflag += 1\n\t\tprint(str(a) + ' ' + str(b))\n\t\tb += 1\n\ta += 1\n\n\n", "entrada = list([int(x) for x in input().split()])\nqtdjogadasVencedor = entrada[0]#3\nqtdjogadasPerdedor = entrada[1]#2\nqtdminpontVencedor = entrada[2]#1\nqtdminpontPerdedor = entrada[3]#1\nlistaPrincipal, laux = [], []\nfor i in range(qtdminpontVencedor,qtdjogadasVencedor+1):\n    for j in range(qtdminpontPerdedor,qtdjogadasPerdedor+1):\n        if j < i:\n            laux.append((i,j))\nprint(len(laux))\nfor i in laux:\n    print(i[0],i[1])\n        \n        \n", "def main():\n    (x, y, a, b) = list(map(int, input().split(' ')))\n    l = []\n    for c in range(a, x + 1):\n        for d in range(b, y + 1):\n            if c > d:\n                l.append((c, d))\n    print(len(l))\n    for ll in l:\n        print(\"{} {}\".format(*ll))\nmain()\n\n", "x, y, a, b = list(map(int, input().split()))\nresults = []\nfor i in range(a, x + 1):\n\tfor j in range(b, y + 1):\n\t\tif i <= j:\n\t\t\tcontinue\n\t\tresults.append((i, j))\nprint(len(results))\nresults.sort()\nfor a, b in results:\n\tprint(a, b)\n", "x,y,a,b=[ int(i) for i in input().split() ]\n\nans=[]\ns_a=a\ns_b=b\nif a<=b:\n  s_a=b+1\n  s_b=b  \n\nwhile s_a<=x:\n  for i in range(s_b,min(s_a,y+1)):\n    ans.append([s_a,i])\n  s_a+=1\nprint(len(ans))\nfor i in ans:\n  print(i[0],i[1])\n  \n    \n"]