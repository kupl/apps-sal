["def main():\n    input()\n    l = list(map(int, input().split()))\n    n = max(l)\n    aa = [0] * (n + 1)\n    for x in l:\n        aa[x] += 1\n    f, x = [0] * n, 0\n    for a in reversed(aa):\n        x += a\n        f.append(x)\n    f.reverse()\n    res = []\n    for i, a in enumerate(aa):\n        if a:\n            tot, a = 0, f[i]\n            for j in range(i, n + 1, i):\n                b = f[j + i]\n                tot += (a - b) * j\n                a = b\n            res.append(tot)\n    print(max(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = int(input())\n    aa = list(map(int, input().split()))\n    aa.sort()\n    lim = aa[-1] + 1\n    cnt, a = [0] * lim, aa[0] - 1\n    for i, b in zip(list(range(n, -1, -1)), aa):\n        if a != b:\n            cnt[a + 1:b + 1] = [i] * (b - a)\n            a = b\n    avail, res = [True] * lim, []\n    for i, a in enumerate(aa):\n        if avail[a]:\n            avail[a] = False\n            res.append(a * sum(cnt[a::a]))\n    print(max(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math\n\nprefSum = []\n\ndef GetSum( l, r ):\n\treturn prefSum[min( r, 199999 )] - prefSum[l - 1]\n\n# cin = open( \"input.txt\", 'r' )\n# n = int( cin.readline() )\n# a = list( map( int, cin.read().split() ) )\n\n# cnt = 0;\n# for i in range( 1, 200000 ):\n# \tcnt += 200000 / i\n# print( cnt )\n# exit( 0 )\n\nn = int( input() )\na = list( map( int, input().split() ) )\n\nb = []\nfor i in range( 2 * ( 10 ** 5 ) + 10 ):\n\tb.append( 0 )\nfor i in range( n ):\n\tb[a[i]] += 1\n\nprefSum.append( 0 )\nfor i in range( 1, 2 * ( 10 ** 5 ) + 10 ):\n\tprefSum.append( b[i] + prefSum[i - 1] )\n\nans = 0\ncnt = 0\nfor i in range( 2 * ( 10 ** 5 ) + 10 ):\n\tif b[i] == 0:\n\t\tcontinue\n\tl = i\n\tr = 2 * i - 1\n\tcurAns = 0;\n\tfor l in range( i, 200001, i ):\n\t\tcurAns += l * ( prefSum[min( r, 200000 )] - prefSum[l - 1] )\n\t\tr += i\n\tans = max( ans, curAns )\nprint( ans )", "import math\n\ndef main():    \n    prefSum = []\n    \n    def GetSum( l, r ):\n    \treturn prefSum[min( r, 199999 )] - prefSum[l - 1]\n    \n    # cin = open( \"input.txt\", 'r' )\n    # n = int( cin.readline() )\n    # a = list( map( int, cin.read().split() ) )\n    \n    # cnt = 0;\n    # for i in range( 1, 200000 ):\n    # \tcnt += 200000 / i\n    # print( cnt )\n    # exit( 0 )\n    \n    n = int( input() )\n    a = list( map( int, input().split() ) )\n    \n    b = []\n    for i in range( 2 * ( 10 ** 5 ) + 10 ):\n    \tb.append( 0 )\n    for i in range( n ):\n    \tb[a[i]] += 1\n    \n    prefSum.append( 0 )\n    for i in range( 1, 2 * ( 10 ** 5 ) + 10 ):\n    \tprefSum.append( b[i] + prefSum[i - 1] )\n    \n    ans = 0\n    cnt = 0\n    for i in range( 2 * ( 10 ** 5 ) + 10 ):\n    \tif b[i] == 0:\n    \t\tcontinue\n    \tl = i\n    \tr = 2 * i - 1\n    \tcurAns = 0;\n    \tfor l in range( i, 200001, i ):\n    \t\tcurAns += l * ( prefSum[min( r, 200000 )] - prefSum[l - 1] )\n    \t\tr += i\n    \tans = max( ans, curAns )\n    print( ans )\n\nmain()", "n=int(input())\nl=list(map(int,input().split()))\nl1=[0]*200001\nfor i in l:\n    l1[i]+=1\nfor i in range(1,200001):\n    l1[i]+=l1[i-1]\nm=0\nl=list(set(l))\nfor i in l:\n    s=0\n    for j in range(i,200001,i):\n       s+=(l1[min(200000,i+j-1)]-l1[j-1])*j\n    if(s>m):\n        m=s\nprint(m)", "n = int(input())\ns = list(map(int, input().split()))\nh = max(s)\nss = [0] * (h + 1)\nfor i in s:\n    ss[i] += 1\nf, x = [0] * h, 0\nfor j in reversed(ss):\n    x += j\n    f.append(x)\nf.reverse()\nres = []\nfor i, x in enumerate(ss):\n    if x:\n        summ, x = 0, f[i]\n        for j in range(i, h + 1, i):\n            o = f[j + i]\n            summ += (x - o) * j\n            x = o\n        res.append(summ)\nprint(max(res))", "n = int(input())\ns = list(map(int, input().split()))\nh = max(s)\nss = [0] * (h + 1)\nfor i in s:\n    ss[i] += 1\nf, x = [0] * h, 0\nfor j in reversed(ss):\n    x += j\n    f.append(x)\nf.reverse()\nres = []\nfor i in range(len(ss)):\n    ch = ss[i]\n    if ch:\n        summ, x = 0, f[i]\n        for j in range(i, h + 1, i):\n            o = f[j + i]\n            summ += (x - o) * j\n            x = o\n        res.append(summ)\nprint(max(res))", "from bisect import bisect_left\n\nn = int(input())\na = sorted(list(map(int, input().split())))\nans = 0\nfor k in set(a):\n  r = sum(n - bisect_left(a, j) for j in range(k, a[-1] + 1, k))\n  ans = max(ans, k * r)\nprint(ans)\n"]