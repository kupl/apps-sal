["from array import array\ninf = (1 << 30)\n\ndef main():\n    (n,k) = [int(x) for x in input().split(' ')]\n    Matrix = []\n    for i in range(n):\n        Matrix.append(array('b',[ord(x) for x in input()]))\n    dp = [array('l', [inf for j in range(n)]) for i in range(n)]\n    direct = [[ord('d') for j in range(n)] for i in range(n)]\n    opt = \"\"\n    for s in range (2 * n - 1):\n        opchar = chr(ord('z') + 1)\n        positions = []\n        for i in range(0, s+1):\n            j = s - i;\n            if j < n and i < n:\n                if(i > 0 and j > 0):\n                    if(dp[i-1][j] < dp[i][j-1]):\n                        dp[i][j] = dp[i-1][j]\n                        direct[i][j] = 'l'\n                    else:\n                       dp[i][j] = dp[i][j-1]\n                       direct[i][j] = 'd'\n                elif i > 0:\n                    dp[i][j] = dp[i-1][j]\n                    direct[i][j] = 'l'\n                elif j > 0:\n                    dp[i][j] = dp[i][j-1]\n                    direct[i][j] = 'd'\n                else:\n                    dp[i][j] = 0\n                    direct[i][j] = 'e'\n                if(dp[i][j] < k and Matrix[i][j] is not ord('a')):\n                    dp[i][j]+=1\n                    Matrix[i][j] = ord('a')\n                if(Matrix[i][j] < ord(opchar) and dp[i][j] <= k):\n                     opchar = chr(Matrix[i][j])\n        for i in range(0, s+1):\n            j = s - i;\n            if j < n and i < n:\n                if(Matrix[i][j] is not ord(opchar)):\n                    dp[i][j] = inf\n    ans = \"\"\n    a,b = (n-1,n-1)\n    while(direct[a][b] is not 'e'):\n        ans += chr(Matrix[a][b])\n        if(direct[a][b] is 'l'):\n            a-=1\n        else:\n            b-=1\n    ans += chr(Matrix[0][0])\n    print(ans[::-1])\n\nmain()\n"]