["import sys\nfrom bisect import bisect\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef solve():\n\tn, q = list(map(int, input().split()))\n\twas = set()\n\tQ = [None]*q\n\tall = [0]*(2*q)\n\tfor i in range(q):\n\t\tx, y, t = input().split()\n\t\tx, y = int(x), int(y)\n\t\tQ[i] = (x, y, t)\n\t\tall[2*i] = x\n\t\tall[2*i+1] = y\n\tall.sort()\n\tV = [0]*(4*q)\n\tH = [0]*(4*q)\n\tfor x, y, t in Q:\n\t\tif (x,y) in was:\n\t\t\tprint(0)\n\t\telse:\n\t\t\twas.add((x,y))\n\t\t\tif t == 'L':\n\t\t\t\tTA = H\n\t\t\t\tTB = V\n\t\t\telse:\n\t\t\t\tx, y = y, x\n\t\t\t\tTA = V\n\t\t\t\tTB = H\n\t\t\tv = bisect(all, y) - 1 + q + q\n\t\t\tr = 0\n\t\t\twhile v > 0:\n\t\t\t\tr = max(r, TA[v])\n\t\t\t\tv //= 2\n\t\t\tc = x - r\n\t\t\tprint(c)\n\t\t\tr = bisect(all, x) - 1 + q + q\n\t\t\tl = bisect(all, x - c) + q + q\n\t\t\twhile l <= r:\n\t\t\t\tif l % 2 == 1:\n\t\t\t\t\tTB[l] = max(TB[l], y)\n\t\t\t\tif r % 2 == 0:\n\t\t\t\t\tTB[r] = max(TB[r], y)\n\t\t\t\tl = (l+1)//2\n\t\t\t\tr = (r-1)//2\n\nsolve()\n", "import sys\nfrom bisect import bisect\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef solve():\n\tn, q = list(map(int, input().split()))\n\twas = set()\n\tQ = [None]*q\n\tall = [0]*(2*q)\n\tfor i in range(q):\n\t\tx, y, t = input().split()\n\t\tx, y = int(x), int(y)\n\t\tQ[i] = (x, y, t)\n\t\tall[2*i] = x\n\t\tall[2*i+1] = y\n\tall.sort()\n\ti = 0\n\tp = -1\n\tfor j in range(2*q):\n\t\tv = all[j]\n\t\tif v != p:\n\t\t\tall[i] = v\n\t\t\ti += 1\n\t\tp = v\n\tsz = i\n\tall = all[:sz]\n\tV = [0]*(2*sz)\n\tH = [0]*(2*sz)\n\tfor x, y, t in Q:\n\t\tif (x,y) in was:\n\t\t\tprint(0)\n\t\telse:\n\t\t\twas.add((x,y))\n\t\t\tif t == 'L':\n\t\t\t\tTA = H\n\t\t\t\tTB = V\n\t\t\telse:\n\t\t\t\tx, y = y, x\n\t\t\t\tTA = V\n\t\t\t\tTB = H\n\t\t\tv = bisect(all, y) - 1 + sz\n\t\t\tr = 0\n\t\t\twhile v > 0:\n\t\t\t\tr = max(r, TA[v])\n\t\t\t\tv //= 2\n\t\t\tc = x - r\n\t\t\tprint(c)\n\t\t\tr = bisect(all, x) - 1 + sz\n\t\t\tl = bisect(all, x - c) + sz\n\t\t\twhile l <= r:\n\t\t\t\tif l % 2 == 1:\n\t\t\t\t\tTB[l] = max(TB[l], y)\n\t\t\t\tif r % 2 == 0:\n\t\t\t\t\tTB[r] = max(TB[r], y)\n\t\t\t\tl = (l+1)//2\n\t\t\t\tr = (r-1)//2\n\nsolve()\n", "import sys\nfrom bisect import bisect\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef solve():\n\tn, q = list(map(int, input().split()))\n\twas = set()\n\tQ = [None]*q\n\tall = [0]*(2*q)\n\tfor i in range(q):\n\t\tx, y, t = input().split()\n\t\tx, y = int(x), int(y)\n\t\tQ[i] = (x, y, t)\n\t\tall[2*i] = x\n\t\tall[2*i+1] = y\n\tall.sort()\n\ti = 0\n\tp = -1\n\tF = dict()\n\tfor j in range(2*q):\n\t\tv = all[j]\n\t\tif v != p:\n\t\t\tall[i] = v\n\t\t\tF[v] = i\n\t\t\ti += 1\n\t\tp = v\n\tsz = i\n\tall = all[:sz]\n\tV = [0]*(2*sz)\n\tH = [0]*(2*sz)\n\tfor x, y, t in Q:\n\t\tif (x,y) in was:\n\t\t\tprint(0)\n\t\telse:\n\t\t\twas.add((x,y))\n\t\t\tif t == 'L':\n\t\t\t\tTA = H\n\t\t\t\tTB = V\n\t\t\telse:\n\t\t\t\tx, y = y, x\n\t\t\t\tTA = V\n\t\t\t\tTB = H\n\t\t\tv = F[y] + sz\n\t\t\tr = 0\n\t\t\twhile v > 0:\n\t\t\t\tr = max(r, TA[v])\n\t\t\t\tv //= 2\n\t\t\tc = x - r\n\t\t\tprint(c)\n\t\t\tr = F[x] + sz\n\t\t\tl = bisect(all, x - c) + sz\n\t\t\twhile l <= r:\n\t\t\t\tif l % 2 == 1:\n\t\t\t\t\tTB[l] = max(TB[l], y)\n\t\t\t\tif r % 2 == 0:\n\t\t\t\t\tTB[r] = max(TB[r], y)\n\t\t\t\tl = (l+1)//2\n\t\t\t\tr = (r-1)//2\n\nsolve()\n", "import sys\nfrom bisect import bisect\n\ndef input():\n\treturn sys.stdin.readline().strip()\n\ndef solve():\n\tn, q = list(map(int, input().split()))\n\twas = set()\n\tQ = [None]*q\n\tall = [0]*(2*q)\n\tfor i in range(q):\n\t\tx, y, t = input().split()\n\t\tx, y = int(x), int(y)\n\t\tQ[i] = (x, y, t)\n\t\tall[2*i] = x\n\t\tall[2*i+1] = y\n\tall.sort()\n\tsz = 2*q\n\tV = [0]*(2*sz)\n\tH = [0]*(2*sz)\n\tfor x, y, t in Q:\n\t\tif (x,y) in was:\n\t\t\tprint(0)\n\t\telse:\n\t\t\twas.add((x,y))\n\t\t\tif t == 'L':\n\t\t\t\tTA = H\n\t\t\t\tTB = V\n\t\t\telse:\n\t\t\t\tx, y = y, x\n\t\t\t\tTA = V\n\t\t\t\tTB = H\n\t\t\tv = bisect(all, y) - 1 + sz\n\t\t\tr = 0\n\t\t\twhile v > 0:\n\t\t\t\tr = max(r, TA[v])\n\t\t\t\tv //= 2\n\t\t\tc = x - r\n\t\t\tprint(c)\n\t\t\tr = bisect(all, x) - 1 + sz\n\t\t\tl = bisect(all, x - c) + sz\n\t\t\twhile l <= r:\n\t\t\t\tif l % 2 == 1:\n\t\t\t\t\tTB[l] = max(TB[l], y)\n\t\t\t\tif r % 2 == 0:\n\t\t\t\t\tTB[r] = max(TB[r], y)\n\t\t\t\tl = (l+1)//2\n\t\t\t\tr = (r-1)//2\n\nsolve()\n"]