["def solve():\n    n = int(input())\n    s = input()\n    k = '-'\n    tr = True\n    for i in s:\n        if k == '-' and i != '-':\n            k = i\n        if i != '-' and k != i:\n            tr = False\n    if tr:\n        print(n)\n        return 0\n    ans = 0\n    for i in range(n):\n        if s[i] == \"-\" or s[i - 1] == '-':\n            ans += 1\n    print(ans)\nfor i in range(int(input())):\n    solve()", "def main():\n    n = int(input())\n    # arr = list(map(int, input().split()))\n    # x1, y1, x2, y2 = map(int, input().split())\n    s = input()\n    if '>' not in s:\n        print(n)\n    elif '<' not in s:\n        print(n)\n    else:\n        ans = 0\n        for i in range(n):\n            l = (i - 1 + n) % n\n            # r = (i + 1) % n\n            if s[i] == '-' or s[l] == '-':\n                ans += 1\n        print(ans)\n\n\n# for _ in range(1):\nfor _ in range(int(input())):\n    main()\n", "import sys\nimport random\n# import numpy as np\nimport math\nimport copy\nfrom heapq import heappush, heappop, heapify\nfrom functools import cmp_to_key\nfrom bisect import bisect_left, bisect_right\nfrom collections import defaultdict, deque, Counter\n\n# sys.setrecursionlimit(1000000)\n# input aliases\ninput = sys.stdin.readline\ngetS = lambda: input().strip()\ngetN = lambda: int(input())\ngetList = lambda: list(map(int, input().split()))\ngetZList = lambda: [int(x) - 1 for x in input().split()]\n\nINF = float(\"inf\")\n\nMOD = 10 ** 9 + 7\ndivide = lambda x: pow(x, MOD - 2, MOD)\n\n\ndef solve():\n    n = getN()\n    S = getS()\n\n    if \"<\" not in S:\n        print(n)\n        return\n    if \">\" not in S:\n        print(n)\n        return\n\n    S = S + S[0]\n    ans = 0\n    for i in range(n):\n        if S[i] == \"-\" or S[i+1] == \"-\":\n            ans += 1\n\n    print(ans)\n\ndef main():\n    n = getN()\n    for _ in range(n):\n        solve()\n\n    return\n\n\ndef __starting_point():\n    main()\n    # solve()\n\n__starting_point()", "t = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n    if '<' not in s:\n        print(n)\n    elif '>' not in s:\n        print(n)\n    else:\n        ans = 0\n        for i in range(n):\n            if s[i - 1] == '-' or s[i] == '-':\n                ans += 1\n        print(ans)\n", "import math\n\nT = int(input())\n\n#lets = 'abcdefghijklmnopqrstuvwxyz'\n#key = {lets[i]:i for i in range(26)}\n\nfor t in range(T):\n  n = int(input())\n  #x1,y1,x2,y2 = map(int,input().split())\n  #a = list(map(int,input().split()))\n  #a = list(input())\n  a = input()\n  d = False\n  if a.count('>') == 0:\n    print(n)\n    continue\n  if a.count('<') == 0:\n    print(n)\n    continue\n  ans = 0\n  for i in range(n):\n    if a[i]=='-' or a[i-1]=='-':\n      ans+=1\n  print(ans)\n\n", "mod = 1000000007\neps = 10**-9\n\n\ndef main():\n    import sys\n    input = sys.stdin.readline\n\n    for _ in range(int(input())):\n        N = int(input())\n        S = input().rstrip('\\n')\n\n        if \">\" not in S or \"<\" not in S:\n            print(N)\n            continue\n\n        ans = 0\n        for i in range(N):\n            if S[i] == \"-\" or S[(i+1)%N] == \"-\":\n                ans += 1\n        print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "t = int(input())\nfor i in range(t):\n    n = int(input())\n    s = input()\n    a = s.count('>')\n    b = s.count('<')\n    if a == 0 or b == 0:\n        print(n)\n    else:\n        s = s[-1] + s\n        ans = 0\n        for i in range(1, n + 1):\n            if s[i] == '-' or s[i - 1] == '-':\n                ans += 1\n        print(ans)", "from sys import stdin\ninput = stdin.readline\nq = int(input())\nfor _ in range(q):\n    n = int(input())\n    s = input()\n    s = s[:n]\n    if s.count('>') == 0 or s.count('<')==0:\n        print(n)\n    else:\n        wyn = 0\n        dasie = [0] * n\n        for i in range(n):\n            if s[i] == '-':\n                dasie[i] = 1\n            if s[i-1] == '-':\n                dasie[i] = 1\n        print(sum(dasie))", "T = int(input())\nfor __ in range(T):\n    n = int(input())\n    s = input()\n    ok = all((c in '-<') for c in s) or all((c in '->') for c in s)\n    cnt = 0\n    for i in range(n):\n        j = (i + 1) % n\n        c1, c2 = s[i], s[j]\n        if c1 == '-' or c2 == '-':\n            cnt += 1\n        else:\n            cnt += (1 if ok else 0)\n    print(cnt)", "import sys\ninput = sys.stdin.readline\n\nt = int(input())\nfor _ in range(t):\n    n = int(input())\n    s = input()\n\n    out = 0\n    lCycle = True\n    rCycle = True\n    for c in s:\n        if c == '<':\n            lCycle = False\n        if c == '>':\n            rCycle = False\n\n    if lCycle or rCycle:\n        print(n)\n    else:\n        for i in range(n):\n            if s[i] == '-' or s[(i-1) % n] == '-':\n                out += 1\n        print(out)\n    \n", "\nfrom sys import stdin\nimport sys\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    n = int(stdin.readline())\n    s = stdin.readline()[:-1]\n\n    if (\"<\" not in s) or (\">\" not in s):\n        print (n)\n        continue\n\n    ans = 0\n    for i in range(n):\n        if s[(i-1)%n] == \"-\" or s[i] == \"-\":\n            ans += 1\n\n    print (ans)\n", "t=int(input())\nfor _ in range(t):\n    n=int(input())\n    s=input()\n    ans=0\n    clockwiseflag=1\n    antiflag=1\n    for i in range(n):\n        if s[i]=='>':\n            antiflag=0\n        if s[i]=='<':\n            clockwiseflag=0\n    if clockwiseflag or antiflag:\n        print(n)\n        continue\n    for i in range(n):\n        if (s[i]=='-' or s[(i+1)%n]=='-') :\n            ans+=1\n    print(ans)", "T = int(input())\n\nfor t in range(T):\n    N = int(input())\n    s = input()\n\n    if '<' not in s or '>' not in s:\n        print(N)\n    else:\n        cnt = 0\n        for i in range(N):\n            prev = i-1\n            if prev < 0:\n                prev += N\n            if s[i] == '-' or s[prev] == '-':\n                cnt += 1\n        print(cnt)\n"]