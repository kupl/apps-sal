["n = int(input())\na = '0'+input()+'0'\nif '000' in a or '11' in a:print('No')\nelse:print('Yes')\n", "input()\ns = '0' + input() + '0'\nif '11' in s:\n    print('No')\n    return\nif '000' in s:\n    print('No')\n    return\nprint('Yes')", "n = int(input())\ns = input()\nok = 1\nfor i in range(n):\n\tif s[i] == '1':\n\t\tif i > 0:\n\t\t\tok &= s[i - 1] == '0'\n\t\tif i < n - 1:\n\t\t\tok &= s[i + 1] == '0'\n\telse:\n\t\tres = 0\n\t\tif i > 0:\n\t\t\tres |= s[i - 1] == '1'\n\t\tif i < n - 1:\n\t\t\tres |= s[i + 1] == '1'\n\t\tok &= res\nprint(\"Yes\" if ok else \"No\")", "n = int(input())\na = input()\ne = True\nif (n == 1 and a == \"0\"):\n    e = False\nif (n > 1 and (a[0] == a[1] == '0' or a[n - 1] == a[n - 2] == '0')):\n    e = False\nfor i in range(1, n):\n    if (a[i - 1] == a[i] == '1'):\n        e = False\nfor i in range(2, n):\n    if (a[i - 2] == a[i - 1] == a[i] == '0'):\n        e = False\nif (e):\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = int(input())\ns = input()[:n]\nfor i in range(len(s)):\n    if s[i] == '1':\n        if i - 1 >= 0 and s[i - 1] != '0':\n            print(\"No\")\n            return\n        if i + 1 < len(s) and s[i + 1] != '0':\n            print(\"No\")\n            return\n    elif s[i] == '0':\n        if (i - 1 < 0 or s[i - 1] == '0') and (i + 1 >= len(s) or s[i + 1] == '0'):\n            print(\"No\")\n            return\nprint(\"Yes\")\n", "a=input()\nb=input()+'0'\nzeros=1\nans=True\nfor c in b:\n    if c== '1':\n        if zeros == 0:\n            ans=False\n        zeros=0\n    else:\n        zeros = zeros+1\n        if zeros >2:\n            ans=False\n\nif ans:\n    print(\"Yes\")\nelse:\n    print(\"No\")", "n = int(input())\nn += 2\nst = input()\nst = '0'+  st + '0'\ncond = True\nfor i in range(1, n):\n    if st[i] == st[i - 1] and st[i] == '1':\n        cond = False\nif cond and (st.count('000') == 0):\n    print('Yes')\nelse:\n    print('No')\n", "n = int(input())\ns = '0' + input() + '0'\nif '000' in s or '11' in s:\n    print ('No')\nelse:\n    print ('Yes')\n", "n = int(input())\ns = input()\nok = True\nfor i in range(len(s) - 1):\n\tif s[i] == '1' and s[i + 1] == '1':\n\t\tok = False\n\tif i + 2 < len(s):\n\t\tif s[i] == '0' and s[i + 1] == '0' and s[i + 2] == '0':\n\t\t\tok = False\nif len(s) >= 2:\n\tif s[0] == '0' and s[1] == '0':\n\t\tok = False\n\tif s[-1] == '0' and s[-2] == '0':\n\t\tok = False\nelse:\n\tok = (s[0] == '1')\nprint('Yes' if ok else 'No')", "input()\ns = input()\nok = True\nfor i in range(len(s)):\n    l = r = True\n    if i > 0:\n        l = s[i-1] == '0'\n    if i < len(s)-1:\n        r = s[i+1] == '0'\n    if s[i] == '0' and l and r:\n        ok = False\n    if s[i] == '1' and (not l or not r):\n        ok = False\n    if not ok:\n        break\nprint('Yes' if ok else 'No')", "n = int(input())\ns = '0' + input() + '0'\n\nok = True\nfor i in range(1, n+1):\n    if s[i] == '0':\n        if s[i-1] == s[i+1] == '0':\n            ok = False\n    else:\n        if s[i-1] == '1' or s[i+1] == '1':\n            ok = False\n\nif ok:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "n = int(input())\ns = input()\n\nif(len(s) == 1):\n    if(s[0] == '1'):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    if('000' in s or s[0] + s[1] == '00' or s[-1] + s[-2] == '00' or '11' in s  ):\n        print('No')\n    else:\n        print('Yes')", "def check(s):\n    s = '0' + s + '0'\n    for i in range(1, len(s) - 1):\n        if s[i] == '1' and (s[i - 1] == '1' or s[i + 1] == '1'):\n            return False\n        if s[i] == '0' and s[i - 1] == '0' and s[i + 1] == '0':\n            return False\n    return True\n\nn = int(input())\ns = input()\nif check(s):\n    print('Yes')\nelse:\n    print('No')\n", "#!/usr/bin/env python3\n\nn = int(input().strip())\ns = input().strip()\n\ndef solve(n, s):\n\tif '11' in s:\n\t\treturn False\n\tif '000' in s:\n\t\treturn False\n\tif s.endswith('00') or s.startswith('00'):\n\t\treturn False\n\tif s == '0':\n\t\treturn False\n\treturn True\n\t\nif solve(n, s):\n\tprint ('Yes')\nelse:\n\tprint ('No')\n", "n = int(input())\ns = input()\n\nans = \"Yes\"\nif n == 1:\n  if s == '0':\n    ans = \"No\"\nelse:\n  if s[0] == s[1]:\n    ans = \"No\"\n  if s[-1] == s[-2]:\n    ans = \"No\"\n  for i in range(1, n - 1):\n    if s[i] == '1' and (s[i - 1] == '1' or s[i + 1] == '1'):\n      ans = \"No\"\n    if s[i] == '0' and s[i - 1] == '0' and s[i + 1] == '0':\n      ans = \"No\"\n    \nprint(ans)    ", "n = int(input())\ns = input()\ni = 2\nans = 1\nwhile i < n:\n    if s[i] == s[i-1] and s[i] == \"1\":\n        ans = 0\n        break\n    if s[i] == s[i-1] and s[i] == s[i-2]:\n        ans = 0\n        break\n    i+= 1\nif n > 1 and s[0] == s[1]:\n    ans = 0\nif n > 1 and s[n-1] == s[n-2]:\n    ans = 0\nif n == 1 and s[0] == \"0\":\n    ans = 0\nif ans == 1:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    \n    \n", "n = int(input())\nchairs = input()\nif n > 2:\n    if chairs.startswith('00') or chairs.endswith('00'):\n        print('No')\n    elif '000' in chairs or '11' in chairs:\n        print('No')\n    else:\n        print('Yes')\nelse:\n    if chairs == '00' or chairs == '11' or chairs == '0':\n        print('No')\n    else:\n        print('Yes')", "# your code goes here\nN = int(input())\n\nchairs = input()\n\nones = 0\nzeros = 1\nflag = 1\nfor i in range(N):\n\tif chairs[i] == '0':\n\t\tzeros += 1\n\t\tones = 0\n\t\tif zeros == 3:\n\t\t\tprint(\"No\")\n\t\t\tflag = 0\n\t\t\tbreak\n\telif chairs[i] == '1':\n\t\tones += 1\n\t\tzeros = 0\n\t\tif ones == 2:\n\t\t\tprint('No')\n\t\t\tflag = 0\n\t\t\tbreak\n\telse:\n\t\tones = 0\n\t\tzeros = 0\nif zeros == 2:\n\tprint('No')\nelif flag == 1:\n\tprint('Yes')", "n=int(input())\nns=input()\n\ndef fun():\n    if n==1:\n        if ns[0]=='1':\n            return 'Yes'\n        else:\n            return 'No'\n    for i  in range(1,n):\n        if ns[i]=='1' and ns[i-1]=='1':\n            return('No')\n    if n>=2:\n        if ns[0] == '0' and ns[1] == '0':\n            return 'No'\n        if ns[-1] == '0' and ns[-2] == '0':\n            return 'No'\n    num=0\n    for c in ns:\n        if c=='0':\n            num+=1\n        if c=='1':\n            num=0\n        if num>2:\n            return('No')\n    if num>2:\n        return 'No'\n    return 'Yes'\nprint(fun())", "input()\ns = input()\nif s == '0':\n    print('No')\nelif (s.startswith('00') or s.endswith('00')):\n    print('No')\nelse:\n    print(\"No\" if (s.find('11') != -1 or s.find('000') != -1) else \"Yes\")\n", "n = int(input())\ns = input()\n\nresult = True\n\nif(n==1 and s=='0'):\n\tresult = False\n\nif(\"11\" in s or \"000\" in s):\n\tresult = False\n\nif(s[0:2] == \"00\" or s[n-2:n] == \"00\"):\n\tresult = False\n\nif(result):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "n = int(input())\ns = input()\ni = 0\nres = True\ncount = 0\nwhile(i<n):\n  if s[i]=='1':\n    if count>2 or (i!=0 and count==0):\n      res = False\n      break\n    count=0\n  else:\n    count+=1\n  i+=1\nif (n==1 and s[0]=='0') or (n>1 and s[0]=='0' and s[1]=='0'):\n  res = False\nif count>=2:\n  res = False\nif res:\n  print('Yes')\nelse:\n  print('No')", "\"\"\"Problem A - Row.\n\nhttp://codeforces.com/contest/982/problem/0\n\nYou're given a row with `n` chairs. We call a seating of people \"maximal\" if\nthe two following conditions hold:\n\n1. There are no neighbors adjacent to anyone seated.\n\n2. It's impossible to seat one more person without violating the first rule.\n\nThe seating is given as a string consisting of zeros and ones (`0` means that\nthe corresponding seat is empty, `1` \u2014 occupied). The goal is to determine\nwhether this seating is \"maximal\".\n\nNote that the first and last seats are not adjacent (if `n != 2`).\n\nInput:\n\nThe first line contains a single integer `n` (`1 \\leq n \\leq 1000`) \u2014 the\nnumber of chairs.\n\nThe next line contains a string of `n` characters, each of them is either zero\nor one, describing the seating.\n\nOutput:\n\nOutput \"Yes\" (without quotation marks) if the seating is \"maximal\". Otherwise\nprint \"No\".\n\nYou are allowed to print letters in whatever case you'd like (uppercase or\nlowercase).\n\n\"\"\"\nimport logging\n\n\nfmt = '%(levelname)s - %(name)s (line:%(lineno)s) - %(message)s'\nformatter = logging.Formatter(fmt)\n\nch = logging.StreamHandler()\nch.setLevel(logging.NOTSET)\nch.setFormatter(formatter)\n\nlogger = logging.getLogger('row')\nlogger.setLevel(logging.NOTSET)\nlogger.addHandler(ch)\n\n\ndef solve(s):\n    if len(s) == 1 and s == '0':\n        return False  # Its possible to seat someone\n    elif len(s) == 1 and s == '1':\n        return True\n    elif len(s) == 2 and '1' in s and '0' in s:\n        return True  # maximal\n    if '11' in s:\n        return False\n    if '000' in s or s[:2] == '00' or s[-2:] == '00':\n        return False  # Its possible to seat someone\n    # raise 'Missing something?'\n    return True\n\n\ndef main():\n    _ = input()\n    s = input()\n    result = solve(s)\n    print('Yes' if result else 'No')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\ns = '0' + input() + '0'\n\nif s == \"00\":\n    print(\"No\")\n\nelse:\n    if \"000\" in s or \"11\" in s:\n        print(\"No\")\n    else:\n        print(\"Yes\")"]