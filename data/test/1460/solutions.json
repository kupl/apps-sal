["n = int(input())\nprint(n*3+4)\nprint(0, 0)\nprint(1, 0)\nfor i in range(n):\n    for j in range(3):\n        print(i+j, i+1)\nprint(n, n+1)\nprint(n+1, n+1)\n", "import sys\ninput = sys.stdin.readline\nn=int(input())\nprint(3*n+4)\nprint(0,0)\nfor i in range(n+1):\n    print(i+1,i+1)\n    print(i,i+1)\n    print(i+1,i)", "from collections import defaultdict as dd\nfrom collections import deque\nimport bisect\nimport heapq\n\ndef ri():\n    return int(input())\n\ndef rl():\n    return list(map(int, input().split()))\n\n\ndef solve():\n    n = ri()\n    k = 7 + 3 * (n - 1)\n    print (k)\n    print(0, 0)\n    print(0, 1)\n    for i in range(1, n + 1):\n        print(i, i - 1)\n        print(i, i)\n        print(i, i + 1)\n    print(n + 1, n)\n    print(n + 1, n + 1)\n\n\n\n\n\n\nmode = 's'\n\nif mode == 'T':\n    t = ri()\n    for i in range(t):\n        solve()\nelse:\n    solve()\n", "import sys\ninput = sys.stdin.readline\n\nn=int(input())\n\nANS=[(0,0),(0,1),(1,0),(1,1)]\n\nfor i in range(n):\n    ANS.append((i+1,i+2))\n    ANS.append((i+2,i+1))\n    ANS.append((i+2,i+2))\n\nprint(len(ANS))\nfor x,y in ANS:\n    print(x,y)\n", "n=int(input())\nprint(3*n+4)\nprint(0)\nprint(0)\nprint(1)\nprint(0)\nfor i in range(n):\n    for j in range(3):\n        print(i+j)\n        print(i+1)\nprint(n)\nprint(n+1)\nprint(n+1)\nprint(n+1)", "def solve():\n    n = int(input())\n    print(3 * (n + 1) + 1)\n    for i in range(n + 1):\n        print(i, i)\n        print(i + 1, i)\n        print(i, i + 1)\n    print(n + 1, n + 1)\n\n\nsolve()\n", "# n, k = map(int, input().split())\nn = int(input())\nprint(3 * n + 4)\nprint(0, 0)\nfor x in range(n + 1):\n    print(x + 1, x)\n    print(x + 1, x + 1)\n    print(x, x + 1)\n", "for _ in range(1):\n    # a, b, n = map(int, input().split())\n    k = int(input())\n    # arr = list(map(int, input().split()))\n    arr = [(0, 0), (0, 1)]\n    c = [0, 0]\n    for i in range(k):\n        c[0] += 1\n        c[1] += 1\n        arr.append([c[0], c[1] - 1])\n        arr.append([c[0], c[1]])\n        arr.append([c[0], c[1] + 1])\n    arr.append([c[0] + 1, c[1]])\n    arr.append([c[0] + 1, c[1] + 1])\n    print(len(arr))\n    for el in arr:\n        print(*el)", "def read_int():\n    return int(input())\n\n\nn = read_int()\na = [(i, i + 1) for i in range(n + 1)]\nb = [(i, i) for i in range(n + 2)]\nc = [(i + 1, i) for i in range(n + 1)]\ns = a + b + c\nprint(len(s))\nprint('\\n'.join([str(x[0]) + \" \" + str(x[1]) for x in s]))\n", "\nn = int(input())\n\nans = [ [0,0] , [0,1] , [1,0] , [1,1]]\n\np = 1\n\nfor i in range(n):\n\n    p += 1\n    ans.append( [p,p])\n    ans.append( [p,p-1]  )\n    ans.append( [p-1,p])\n    \nprint(len(ans))\n\nfor i in ans:\n\n    print(*i)\n", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef solve():\n\tn = mint()\n\tprint((n+1)*3+1)\n\tfor i in range(n+1):\n\t\tprint(i,i)\n\t\tprint(1+i,i)\n\t\tprint(i,1+i)\n\tprint(n+1,n+1)\n\n#for i in range(mint()):\nsolve()\n"]