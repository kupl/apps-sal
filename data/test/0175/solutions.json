["a, b = [int(v) for v in input().split()]\n\nwhile a > 0 and b > 0:\n    if a >= 2 * b:\n        a %= 2 * b\n    elif b >= 2 * a:\n        b %= 2 * a\n    else:\n        break\n\nprint(a, b)\n", "a,b=list(map(int,input().split()))\nwhile a>0 and b>0:\n  if a>=b+b:a%=b+b\n  elif b>=a+a:b%=a+a\n  else: break\nprint(a,b)\n", "a, b = list(map(int, input().split()))\nwhile a != 0 and b != 0:\n  if a >= 2 * b:\n    a = a % (2 * b)\n  elif b >= 2 * a:\n    b = b % (2 * a)\n  else:\n    break\nprint(a, b)\n", "a,b = map(int, input().split())\n\nwhile 1:\n    if a ==0 or b ==0:\n        break\n    elif a >= 2*b:\n        a = a % (2*b)\n    elif b >= 2*a:\n        b = b % (2*a)\n    else:\n        break\nprint(a, b)", "def f(a, b):\n\tif a == 0 or b == 0:\n\t\treturn (a, b)\n\tif a >= 2 * b:\n\t\treturn f(a % (2 * b), b)\n\telif b >= 2 * a:\n\t\treturn f(a, b % (2 * a))\n\treturn (a, b)\n\na, b = map(int, input().split())\nprint(' '.join(list(map(str, f(a, b)))))", "a, b = map(int, input().split())\n\ndef huh(a, b):\n    if a * b == 0:\n        return a, b\n    elif a >= 2 * b:\n        return huh(a % (2 * b), b)\n    elif b >= 2 * a:\n        return huh(a, b % (2 * a))\n    else:\n        return a, b\n\na, b = huh(a, b)\n\nprint(a, b)", "def solve(x, y):\n    if (x == 0 or y == 0):\n        return (x, y)\n    if (x >= 2 * y and y != 0):\n        x %= 2 * y\n    if (y >= 2 * x and x != 0):\n        y %= 2 * x\n    if (x == 0 or y == 0):\n        return (x, y)\n    if (x < 2 * y and y < 2 * x):\n        return (x, y)\n    return solve(x, y)\n\nx, y = list(map(int, input().split()))\nans = solve(x, y)\nprint(ans[0], ans[1])\n", "a, b = input().split()\na, b = int(a), int(b)\n\nwhile (a!=0 and b!=0):\n\tif (a>=2*b):\n\t\ta=a%(2*b)\n\telif b>=2*a:\n\t\tb=b%(2*a)\n\telse:\n\t\tbreak\nprint(a, b)", "a, b = list(map(int, input().split()))\nwhile True:\n    if a == 0 or b == 0:\n        break\n    elif a >= 2 * b:\n        a -= 2 * b * (a // (2 * b))\n    elif b >= 2 * a:\n        b -= 2 * a * (b // (2 * a))\n    else:\n        break\n\nprint(a, b)\n", "n, m = [int(i) for i in input().split()]\n\nwhile n != 0 and m != 0:\n    if n >= 2 * m:\n        k = n // (2 * m)\n        n -= 2 * m * k\n    elif m >= 2 * n:\n        k = m // (2 * n)\n        m -= 2 * n * k\n    else:\n        break\nprint(n, m)", "a,b = list(map(int,input().split(\" \")))\n\nwhile True:\n\tif a == 0 or b == 0:\n\t\tprint(str(a) + \" \" + str(b))\n\t\treturn\n\n\telif a >= 2 * b:\n\t\ta = a % (2 * b)\n\n\telif b >= 2 * a:\n\t\tb = b % (2 * a)\n\n\telse:\n\t\tprint(str(a) + \" \" + str(b))\n\t\treturn\n", "#n = int(input())\na,b = list(map(int,input().split()))\nwhile(a>0 and b > 0):\n    if a >= 2*b:\n        a %= 2*b\n    elif b >= 2*a:\n        b %= 2*a\n    else : break\nprint(a,b)\n", "a,b=map(int,input().split())\nwhile a and b:\n    c=0\n    while (a>0 and b>0 and a>=2*b):\n        a-=2*b*(a//(2*b))\n        c=1\n    while a>0 and b>0 and b>=2*a:\n        b-=2*a*(b//(2*a))\n        c=1\n    if(c==0):break\nprint(a,b)", "import sys\n\na, b = list(map(int, input().split()))\n\nwhile True:\n\tif a == 0 or b == 0:\n\t\tprint(a, b)\n\t\treturn\n\tif a >= 2 * b:\n\t\ta = a % (2 * b)\n\telif b >= 2 * a:\n\t\tb = b % (2 * a)\n\telse:\n\t\tprint(a, b)\n\t\treturn\n", "a, b = map(int, input().split())\nwhile a != 0 and b != 0:\n    if a >= 2 * b:\n        a %= 2 * b\n    elif b >= 2 * a:\n        b %= 2 * a\n    else:\n        break\nprint(a, b)", "(n, m) = list(map(int, input().split()))\n\nwhile (n != 0 and m != 0) or (n >= 2 * m) or (m >= 2 * n):\n    if n == 0:\n        break\n    elif m == 0:\n        break\n    elif n >= 2 * m:\n        n = n % (2 * m)\n    elif m >= 2 * n:\n        m = m % (2 * n)\n    else:\n        break\n\nprint(n, m)\n", "a,b= (list(map(int,input().strip().split(' '))))\nwhile(True):\n   if(a==0 or b==0):\n      break\n   if(a>=2*b):\n      d = a//(2*b)\n      d=max(d-1,1)\n      a = a-d*2*b\n   if(a==0 or b==0):\n      break\n   if(b>=2*a):\n      d = b//(a*2)\n      d=max(d-1,1)\n      b = b-d*2*a\n   if(a==0 or b==0):\n      break\n   if(a<2*b and b<2*a):\n      break\nprint(a,b)\n\n", "R=lambda:list(map(int,input().split()))\n\nn, m = R()\n\ndef pr(a, b):\n    if a == 0 or b == 0: return([a,b])\n    if a//(2*b) > 0: return(pr(a - a//(2*b) * 2 * b , b))\n    if b//(2*a) > 0: return(pr(a, b - b//(2*a) * 2 * a))\n    return [a,b]\n\nans = pr(n, m)\n\nprint(ans[0], ans[1])\n", "a, b = tuple(map(int, input().split()))\n\ndef step(a, b):\n    if a==0 or b==0:\n        n = 0\n    elif a > b:\n        n = a//(2*b)\n        a = a - (n*2*b)\n    else:\n        n = b//(2*a)\n        b -= n*2*a\n\n    if n != 0:\n        return step(a, b)\n    return a, b\nd = step(a, b)\nprint(d[0], d[1])\n", "#!/usr/bin/env python3\n\nimport sys\n\n[a, b] = list(map(int, sys.stdin.readline().strip().split()))\n\nwhile a != 0 and b != 0:\n\ta_old, b_old = a, b\n\ta %= 2 * b\n\tif a == 0:\n\t\tbreak\n\tb %= 2 * a\n\tif a == a_old and b == b_old:\n\t\tbreak\n\nprint(a, b)\n", "from math import log2\ndef  minpow2(x,y):\n    return int(log2(x//y))\n\na, b = list(map(int, input().split()))\nwhile a >0 and b>0:\n    if a >= 2*b:\n        a = a%(2*b)\n        continue\n    elif b>=2*a:\n        b = b % (2*a)\n        continue\n    else:\n        break\n\nprint(a,b)\n\n", "a, b = map(int, input().split())\nwhile a != 0 and b != 0:\n\tif a >= 2 * b:\n\t\ta %= 2 * b\n\telif b >= 2 * a:\n\t\tb %= 2 * a\n\telse:\n\t\tbreak\nprint(a, b)", "def read():\n    return list(map(int,input().split()))\na,b=read()\nwhile True:\n    if a==0 or b==0:\n        break\n    elif a>=2*b:\n        a%=2*b\n    elif b>=2*a:\n        b%=2*a\n    else:\n        break\nprint(a,b)\n            \n    \n", "def solve():\n    n, m = list(map(int, input().split()))\n\n    while True:\n        if n == 0 or m == 0:\n            print(n, m)\n            return\n        elif n >= 2*m:\n            n = n % (2*m)\n            continue\n        elif m >= 2*n:\n            m = m % (2*n)\n            continue\n        else:\n            print(n,m)\n            return\n\n\ndef __starting_point():\n    solve()\n\n\n\n__starting_point()"]