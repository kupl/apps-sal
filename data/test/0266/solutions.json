["M,S=list(map(int,input().split()))\n\nif S==0 and M==1:\n  print('0 0')\n  return\nelif S==0 or M*9 < S:\n  print('-1 -1')\n  return\n\nm,s=M,S\nl=[]\nif s<=(m-1)*9+1:\n  l.append(1)\n  s-=1\nwhile len(l)<m:\n  r = (m-len(l)-1)*9\n  if s<=r:\n    l.append(0)\n  else:\n    l.append(s-r)\n    s-=s-r\n\nm,s=M,S\nh=[]\nwhile s>=9:\n  h.append(9)\n  s-=9\nwhile len(h)<m:\n  h.append(s)\n  s=0\n\nprint(''.join(repr(x) for x in l), ''.join(repr(x) for x in h))\n\n", "m, s = list(map(int, str.split(input())))\nif s == 0 and m == 1:\n\n    print(0, 0)\n\nelif s == 0 or s > 9 * m:\n\n    print(-1, -1)\n\nelse:\n\n    num = [0] * (m - 1) + [1]\n    for i in range(m):\n\n        num[i] += min(9, s - sum(num))\n\n    a = str.join(\"\", list(map(str, num[::-1])))\n\n    num = [0] * m\n    for i in range(m):\n\n        num[i] = min(9, s - sum(num))\n\n    b = str.join(\"\", list(map(str, num)))\n    print(a, b)\n", "m, s = [int(x) for x in input().split()]\n\n# first we check if it is possible to build the numbers\nmindsum = 1\nmaxdsum = 9*m\n\nif (m == 1 and s == 0):\n    print(0, 0)\n\nelif s < mindsum or s > maxdsum:\n    print(-1, -1)\nelse:\n    mncount = s // 9\n    mrest = s % 9\n    # now there are three possibilities:\n    if mncount == m:\n        mnum = '9'*m\n    elif mncount == m-1:\n        if mrest == 0:\n            mnum = '1' + '8' + '9'*(mncount-1)\n        else:\n            mnum = str(mrest) + '9'*mncount\n    else:\n        if mrest == 0:\n            # format 1 000000 8 999999\n            # 2 + zerocount + ninecount-1 = m\n            zerocount = m - 2 - mncount + 1\n            mnum = '1' + '0'*zerocount + '8' + '9'*(mncount-1)\n        elif mrest == 1:\n            # format 1 000000 9999999\n            # 1 + zerocount + ninecount = m\n            zerocount = m - 1 - mncount\n            mnum = '1' + '0'*zerocount + '9'*mncount\n        else:\n            # format 1 000000 # 999999\n            zerocount = m - 2 - mncount\n            mnum = '1' + '0'*zerocount + str(mrest-1) + '9'*mncount\n\n    # now we generate maximum number:\n    # it will be full of nines in the beginning and then the rest filled with the largest numbers in the front\n    # that's actually easy\n    maxnum = ''\n    t = s\n    while (t >= 9):\n        maxnum += '9'\n        t -= 9\n    if (mncount != m):\n        maxnum += str(t)\n        while (len(maxnum) != m):\n            maxnum += '0'\n    print(mnum, maxnum)\n", "a,b = list(map(int, input().split()))\n\n\nif a == 1 and b == 0:\n    print(\"0 0\")\n    return\nif b==0 or b>a*9:\n    print(\"-1 -1\")\n    return\n\nob = b\nans = \"\"\nfor x in range(a):\n    if ob >9:\n        ob -= 9\n        ans += \"9\"\n    else:\n        ans += str(ob)\n        ob = 0\nbig = ans\nans = \"\"\n\nob = b\nob -= 1\nfor x in range(a):\n    if ob >9:\n        ob -= 9\n        ans = \"9\" + ans\n    else:\n        ans = str(ob) + ans\n        ob = 0\n\nans = chr( ord(ans[0]) + 1) + ans[1:]\nprint(ans, big)\n\n\n", "n, s = map(int, input().split())\nif(n==1 and s==0):\n\tprint('0 0')\nelif(9*n < s or s == 0):\n\tprint('-1 -1')\nelse:\n\tres1 = 10**(n-1)\n\tfor i in range(s-1):\n\t\tres1 += 10**(i//9)\n\tres2 = 0\n\tfor i in range(s):\n\t\tres2 += 10**(n-1-i//9)\n\tprint(res1, res2)", "\n[m,s] = [int(s) for s in input().split()]\n\na = [0 for i in range(m)]\nb = [0 for i in range(m)]\n\nsa = s\ni = m-1\nwhile i>=0:\n    if sa>9:\n        a[i]=9\n        sa = sa-9\n    else:\n        a[i]=sa\n        sa = 0\n    i -= 1\n\nfail = sa>0    \n\nif not fail:\n    if m>1 and a[0]==0:\n        a[0] = 1\n        found = False\n        for i in range(1,m):\n            if a[i]>0:\n                a[i] -= 1\n                found = True\n                break\n        fail = not found\n\nif fail:\n    print(-1,-1)\nelse:\n    sb = s\n    for i in range(m):\n        if sb>9:\n            b[i]=9\n            sb = sb-9\n        else:\n            b[i]=sb\n            sb = 0    \n\n    print('{0} {1}'.format(''.join(map(str,a)),''.join(map(str,b))))\n\n\n    \n##        print(' '.join(map(str,A[i])))\n    \n", "def find(step):\n    if m ==1 and s == 0:\n        return 0\n    ss = s\n    res = ''\n    for i in range(m):\n        j = 1 if i == 0 else 0\n        ok = False       \n        c = list(range(j, 10)) if step == -1 else reversed(list(range(j, 10)))        \n        for v in c:\n            if 0 <= ss-v <= (m-i-1)*9:\n                ok = True\n                ss -= v\n                res += str(v)\n                break\n        if not ok:\n            return -1        \n    return res\n\nm, s = list(map(int, input().split()))\nprint(find(-1), find(1))\n", "__author__ = 'alexandrun'\n\nimport sys\n\n#sys.stdin = open(\"p3.in\", \"r\")\n\ndef process(m, s):\n    if s == 0:\n        if m == 1:\n            return (0, 0)\n        return (-1, -1)\n\n    q = s // 9\n    r = s % 9\n    if r == 0:\n        cifMin = q\n    else:\n        cifMin = q + 1\n\n    #print(q, r, cifMin)\n    if cifMin > m:\n        return(-1, -1)\n\n    if cifMin == m:\n        if r == 0:\n            return (\"9\" * q, \"9\" * q)\n\n        min = str(r) + \"9\" * q\n        max = \"9\" * q + str(r)\n        return (min, max)\n\n    if cifMin < m:\n        #min\n        min = \"1\"\n        qmin = (s-1) // 9\n        rmin = (s-1) % 9\n\n        if rmin == 0:\n            cifMin2 = qmin\n        else:\n            cifMin2 = qmin + 1\n        #print(qmin, rmin, cifMin2)\n\n        if cifMin2 == m - 1:\n            if rmin > 0:\n                min += str(rmin) + \"9\" * qmin\n            else:\n                min += \"9\" * qmin\n        elif cifMin2 < m - 1:\n            #print(qmin, rmin)\n            if rmin > 0:\n                min += \"0\" * (-cifMin2 + m - 1) + str(rmin) + \"9\" * qmin\n            else:\n                min += \"0\" * (-cifMin2 + m - 1) + \"9\" * qmin\n\n        max = \"9\" * q + str(r) + (m - q - 1) * \"0\"\n        return(min, max)\n\nwords = input().split()\nm = int(words[0])\ns = int(words[1])\n\nres = process(m, s)\nprint(res[0], res[1])\n", "m, s = map(int, input().split())\nif s > m * 9:\n    print(-1, -1)\nelif s == 0:\n    if m == 1:\n        print(0, 0)\n    else:\n        print(-1, -1)\nelse:\n    pos = 0\n    lost = s\n    minAns = ''\n    while (m - pos - 1) * 9 > lost:\n        if pos == 0:\n            minAns += '1'\n            lost -= 1\n        else:\n            minAns += '0'\n        pos += 1\n    if 9 * (m - pos) == lost:\n        minAns += '9' * (m - pos)\n    else:\n        minAns += str(lost % 9) + '9' * (m - pos - 1)\n    \n    print(minAns, end = ' ')\n    \n    maxAns = ''\n    lost = s\n    pos = 0\n    while lost - 9 >= 0:\n        maxAns += '9'\n        pos += 1\n        lost -= 9\n    if m - pos > 0:\n        maxAns += str(lost)\n        maxAns += '0' * (m - pos - 1)\n    \n    print(maxAns)\n", "m, s = map(int, input().split())\n#for m in range(1, 100):\n#    for s in range(1, 100):\n       # print(\";;;;;;\", s, m)\nar = [0] * m\nar[0] = 1\nsum1 = 1\nif m == 1:\n    if s > 9:\n        print('-1 -1')\n    else:\n        print(s, s)\nelse:\n    dd = 0\n    for i in range(m - 1, 0, -1):\n        if sum1 <= s:\n            ar[i] += 9\n            sum1 += 9\n        if sum1 > s:\n            ar[i] -= sum1 - s\n            sum1 -= sum1 - s\n    if sum1 < s:\n        ar[0] += s - sum1\n    if ar[0] > 9:\n        dd = 1\n    min1 = ar[:]\n    sum1 = 0\n    ar = [0] * m\n    ar[0] = 0\n    for i in range(m):\n        if sum1 <= s:\n            sum1 += 9\n            ar[i] += 9\n        if sum1 > s:\n            ar[i] -= sum1 - s\n            sum1 -= sum1 - s\n    if sum1 < s or dd == 1 or ar[0] == 0 or min(min1) < 0:\n        print('-1 -1')\n    else:\n        print(''.join(map(str, min1)), ''.join(map(str, ar)))", "from sys import stdin\n\nlines = list([_f for _f in stdin.read().split('\\n') if _f])\n\ndef parseline(line):\n\treturn list(map(int, line.split()))\n\nlines = list(map(parseline, lines))\n\nm, s = lines[0]\n\nif 9 * m < s or (m > 1 and s == 0):\n\tprint(\"-1 -1\")\n\treturn\n\nif m == 1 and s == 0:\n\tminimum = [0]\nelse:\n\tminimum = []\n\ts1 = s\n\twhile s1 > 0:\n\t\tdigit = min(9, s1)\n\t\tminimum.append(digit)\n\t\ts1 -= digit\n\tif len(minimum) < m:\n\t\tminimum[-1] -= 1\n\t\tminimum += [0] * (m - len(minimum) - 1)\n\t\tminimum.append(1)\n\nminimum = \"\".join(map(str, reversed(minimum)))\n\nmaximum = []\ns2 = s\nwhile s2 > 0:\n\tdigit = min(9, s2)\n\tmaximum.append(digit)\n\ts2 -= digit\nmaximum += [0] * (m - len(maximum))\n\nmaximum = \"\".join(map(str, maximum))\n\nprint(minimum, maximum)\n", "m,s=input().split()\nm,s=int(m),int(s)\nif 9*m<s or (s==0 and m!=1):\n   print(-1,-1)\nelse:\n   lis=[0 for i in range(m)]\n   q=int(s//9)\n   r=int(s%9)\n   if s==0:\n      print(0,0)\n   elif m==1 and s==9:\n      print(9,9)\n   elif m==2 and s==18:\n      print(99,99)\n   elif q==m-1:\n      for i in range(q):\n         lis[i]='9'\n      lis[m-1]=str(r)\n      lis1=lis[:]\n      if r!=0:\n         print(int(''.join(lis[::-1])),int(''.join(lis)))\n      else:\n         print(int(''.join(['1','8']+lis[::-1][2:m])),int(''.join(lis1)))\n   elif q<m-1:\n      for i in range(q):\n         lis[i]='9'\n      lis[q]=str(r)\n      for i in range(q+1,m):\n         lis[i]='0'\n      lis1=lis[:]\n      if r!=0:\n         lis[m-1]='1'\n         lis[q]=str(r-1)\n         print(int(''.join(lis[::-1])),int(''.join(lis1)))\n      else:\n         lis[m-1]='1'\n         lis[q-1]='8'\n         print(int(''.join(lis[::-1])),int(''.join(lis1)))\n   else:\n      for i in range(m):\n         lis[i]='9'\n      print(int(''.join(lis)),int(''.join(lis)))\n                     \n      \n", "m, s = map(int, input().split())\nif m == 1 and s == 0:\n    print(0, 0)\n    return\nif (s == 0 and m > 1) or (s > m * 9):\n    print(-1, -1)\nelse:\n    n = (s - 1) // 9\n    if n == m - 1:\n        print(s - n * 9, '9' * n, sep = '', end = ' ')\n        print('9' * n, s - n * 9, sep = '')\n    else:\n        print('1', '0' * (m - n - 2), s - n * 9 - 1, '9' * n, sep = '', end = ' ')\n        print('9' * n, s - n * 9, '0' * (m - n - 1), sep = '')\n", "'''\nCreated on 17-Nov-2014\n\n@author: akash\n'''\nm, s = list(map(int, input().split()))\nsmin = s\nlstmax = [0 for i in range(m)]\nlstmin = [0 for i in range(m)]\nfor i in range(m):\n    if s == 0:\n        lstmax[i] = 0\n    elif s >= 9:\n        lstmax[i] = 9\n        s -= 9\n    else:\n        lstmax[i] = s\n        s = 0\nif m == 1 and smin == 0:\n    print(0, 0)\nelif s == 0 and smin != 0:\n    lstmin = lstmax[::-1]\n    if lstmin[0] == 0:\n        lstmin[0] = 1\n        j = 1\n        while lstmin[j] == 0:\n            j += 1\n        lstmin[j] -= 1\n    for i in range(len(lstmin)):\n        print(lstmin[i], end=\"\")\n    print(\" \", end=\"\")\n    for i in range(len(lstmax)):\n        print(lstmax[i], end=\"\")\nelse:\n    print(-1, -1)\n", "m, s = list(map(int, input().split()))\n\nmin_num = [0] * m\nif s == 0 and m == 1:\n    print('0 0')\n    return\nif s == 0 or s > m * 9:\n    print(\"-1 -1\")\n    return\n\nci = len(min_num) - 1\ns1 = s\nwhile s > 0:\n    a = min(9, s)\n    s -= a\n    min_num[ci] = a\n\n    ci -= 1\n\n\nif min_num[0] == 0:\n    min_num[0] = 1\n    for i in range(1, len(min_num)):\n        if min_num[i] > 0:\n            min_num[i] -= 1\n            break\n\nmax_num = [0] * m\nci = 0\n\nwhile s1 > 0:\n    a = 9 if s1 >= 9 else s1\n    s1 -= a\n\n    max_num[ci] = a\n\n    ci += 1\n\nprint(\"\".join(map(str, min_num)), \"\".join(map(str, max_num)))\n\n\n", "__author__ = 'user'\n\nm, s = map(int, input().split())\n\nif s == 0 and m > 1 or s > 9 * m:\n    min_num = max_num = -1\nelif m == 1:\n    min_num = max_num = s\nelse:\n    nns1 = s // 9\n    d = s % 9\n    max_num = '9' * nns1\n    if nns1 != m:\n        max_num += str(d) + '0' * (m - nns1 - 1)\n\n    if s <= (m - 1) * 9:\n        nns2 = (s - 1) // 9\n        d = (s - 1) % 9\n        min_num = '1' + '0' * (m - nns2 - 1 - 1)\n        if nns2 != m:\n            min_num += str(d) + '9' * nns2\n    else:\n        min_num = ''\n        if s // 9 != m:\n            min_num = str(s % 9)\n        min_num += '9' * (s // 9)\n\n\nprint(min_num, max_num)", "__author__ = 'Rakshak.R.Hegde'\nm, s = map(int, input().split())\nif m == 1 and s == 0:\n    print('0 0')\nelse:\n    if s / m > 9 or s == 0:\n        print('-1 -1')\n    else:\n        # Smallest Number\n        num = [9] * m\n        psum = 9 * m\n        minDiff = min(8, psum - s)\n        num[0] -= minDiff\n        psum -= minDiff\n        for i in range(1, m):\n            minDiff = min(9, psum - s)\n            num[i] -= minDiff\n            psum -= minDiff\n            if psum == s:\n                break\n        n1 = ''\n        for i in num:\n            n1 += str(i)\n        # Biggest Number\n        num = [9] * m\n        psum = 9 * m\n        for i in range(-1, -m - 1, -1):\n            minDiff = min(9, psum - s)\n            num[i] -= minDiff\n            psum -= minDiff\n            if psum == s:\n                break\n        n2 = ''\n        for i in num:\n            n2 += str(i)\n        print(n1 + ' ' + n2)", "def solve(m, s):\n    if (m, s) == (1,0):\n        ret = \"0 0\"\n    elif s > 9*m or s == 0:\n        ret = \"-1 -1\"\n    else:\n        mxs = [1]+[0]*(m-1)\n        mns = [1]+[0]*(m-1)\n        i, j = -1, 0\n        while s > 1:\n            if mns[i] >= 9:\n                i -= 1\n            if mxs[j] >= 9:\n                j += 1\n            mns[i]+=1\n            mxs[j]+=1\n            s-=1\n        ret = \"\".join(map(str, mns+[\" \"]+mxs))\n    return ret\n\n    \nm, s = map(int, input().split())\n\nprint(solve(m, s))", "__author__ = '1'\ndef minimize(m, s):\n    if m == 1 and s == 0:\n        return 0\n    if s == 0:\n        return -1\n    array = [0 for i in range(m)]\n    array[0] = 1\n\n    currentFiller = m-1\n    val = s-1\n    for i in range(s-1):\n        if array[currentFiller]<9:\n            array[currentFiller]+=1;\n            val-=1\n        else:\n            currentFiller-=1\n            if currentFiller>=0:\n                array[currentFiller]+=1\n                val-=1\n            else:\n                break\n    if val == 0:\n        s = \"\"\n        for i in range(len(array)):\n            s+=str(array[i])\n        return s\n    else:\n        return -1\n\n\ndef maximizeS(m, s):\n    array = []\n    for i in range(10**m):\n        summ = 0\n        st = str(i)\n        for j in range(len(st)):\n            summ+=ord(str(st[j])[0])-ord('0')\n        if summ == s:\n            array.append(i)\n    array = sorted(array)\n    if len(array)==0:\n        return -1\n    else:\n        return array[-1]\n\ndef minimizeS(m, s):\n    array = []\n    for i in range(10**m):\n        if len(str(i)) == m:\n            summ = 0\n            st = str(i)\n            for j in range(len(st)):\n                summ+=ord(str(st[j])[0])-ord('0')\n            if summ == s:\n                array.append(i)\n    array = sorted(array)\n    if len(array)==0:\n        return -1\n    else:\n        return array[0]\n\ndef maximize(m, s):\n    if m == 1 and s == 0:\n        return 0\n    if s == 0:\n        return -1\n    array = [0 for i in range(m)]\n    array[0] = 1\n    currentFiller = 0\n    val = s-1\n    for i in range(s-1):\n        if array[currentFiller]<9:\n            array[currentFiller]+=1;\n            val-=1\n        else:\n            currentFiller+=1\n            if currentFiller<m:\n                array[currentFiller]+=1\n                val-=1\n            else:\n                break\n    if val == 0:\n        s = \"\"\n        for i in range(len(array)):\n            s+=str(array[i])\n        return s\n    else:\n        return -1\n\n\nfor m in range(1, 6):\n    for s in range(6):\n        \"\"\"\n        if int(minimize(m, s)) != int(minimizeS(m, s)):\n             print(m, s, minimize(m, s), minimizeS(m, s))\n        if int(maximize(m, s)) != int(maximizeS(m, s)):\n             print(m, s, maximize(m, s), maximizeS(m, s))\n        \"\"\"\n        pass\n\nm, s = list(map(int, input().split(' ')))\na = minimize(m, s)\nb = maximize(m, s)\nprint(a, b)\n", "a, b = list(map(int, input().split(' ')))\nif [a, b] == [1, 0]:\n    print(\"0 0\")\nelse:\n    if 1 <= b <= 9*a:\n        haloe = []\n        max9 = b // 9\n        other = b % 9\n        if other != 0:\n            strx = '9' * max9 + str(other) + (a-max9-1) * '0'\n        else:\n            strx = '9' * max9 + (a-max9) * '0'\n        haloe.append(strx)\n        strx = strx[::-1]\n        if strx[0] != '0':\n            haloe.append(strx)\n        else:\n            bad = False\n            newstr = '1'\n            for i in range(1, len(strx)):\n                if strx[i] != '0' and not bad:\n                    newstr += str(int(strx[i])-1)\n                    bad = not bad\n                else:\n                    newstr += strx[i]\n            haloe.append(newstr)\n        print(haloe[1] + ' ' + haloe[0])\n        \n    else:\n        print(-1, -1)\n", "a, b = map(int, input().split(' '))\nif [a, b] == [1, 0]:\n    print(\"0 0\")\nelse:\n    if 1 <= b <= 9*a:\n        haloe = []\n        max9 = b // 9\n        other = b % 9\n        if other != 0:\n            strx = '9' * max9 + str(other) + (a-max9-1) * '0'\n        else:\n            strx = '9' * max9 + (a-max9) * '0'\n        haloe.append(strx)\n        strx = strx[::-1]\n        if strx[0] != '0':\n            haloe.append(strx)\n        else:\n            bad = False\n            newstr = '1'\n            for i in range(1, len(strx)):\n                if strx[i] != '0' and not bad:\n                    newstr += str(int(strx[i])-1)\n                    bad = not bad\n                else:\n                    newstr += strx[i]\n            haloe.append(newstr)\n        print(haloe[1] + ' ' + haloe[0])\n        \n    else:\n        print(-1, -1)", "m, s = (int(x) for x in input().split())\nif s == 0:\n    print('0 0' if m == 1 else '-1 -1')\nelif s > m * 9:\n    print('-1 -1')\nelse:\n    maxs = '9' * (s // 9) + (str(s % 9) if s % 9 else '') + '0' * (m - (s + 8) // 9)\n    mins = maxs[::-1]\n    if mins[0] == '0':\n        nzi = mins.index(next(ch for ch in mins if ch != '0'))\n        mins = '1' + mins[1:nzi] + str(int(mins[nzi]) - 1) + mins[nzi + 1:]\n    print(mins, maxs)\n", "n,Sum=list(map(int,input().split()))\nif n==1 and Sum==0:\n    print(0,0)\nelif Sum==0 or Sum>9*n:\n    print(-1,-1)\nelse:\n    l=[0]*n\n    r=[0]*n\n    b,p=\"\",\"\"\n    s=Sum\n    for i in range(n):\n        if s>=9:\n            r[i]=9\n            s-=9\n        else:\n            r[i]=s\n            s=0\n        l[n-i-1]=r[i]\n    if l[0]!=0:\n        for i in range(n):\n            b=b+str(l[i])\n            p=p+str(r[i])\n        print(b,p)\n    else:\n        for i in range(n):\n            if l[i]!=0:\n                break\n        l[0]='1'\n        l[i]=l[i]-1\n        for i in range(n):\n            b=b+str(l[i])\n            p=p+str(r[i])\n        print(b,p)\n"]