["def solve(a):\n    seen = set()\n    for i in range(len(a)):\n        c = 0\n        for j in range(i+2,len(a)):\n            c += a[j-1]\n            if a[i]^a[j] == c:\n                seen.add((i,j))\n            if c >= 2*a[i]:\n                break\n    \n    for i in range(len(a)-1,-1,-1):\n        c = 0\n        for j in range(i-2,-1,-1):\n            c += a[j+1]\n            if a[i]^a[j] == c:\n                seen.add((j,i))\n            if c >= 2 *a[i]:\n                break\n    print(len(seen))\n            \n\n\nn = int(input())\na = list(map(int,input().split()))\nsolve(a)", "import itertools, math\nn = int(input())\nA = list(map(int, input().split()))\nacc = [0] + list(itertools.accumulate(A))\nans = 0\nseen = set()\nfor i in range(n - 2):\n    a = int(math.log2(A[i]))\n    for j in range(i + 2, n):\n        cur = acc[j] - acc[i + 1]\n        b = int(math.log2(cur))\n        if b > a:\n            break\n        if A[i] ^ A[j] == cur and (i, j) not in seen:\n            ans += 1\n            seen.add((i, j))\nfor j in range(n - 1, 1, -1):\n    a = int(math.log2(A[j]))\n    for i in range(j - 2, -1, -1):\n        cur = acc[j] - acc[i + 1]\n        b = int(math.log2(cur))\n        if b > a:\n            break\n        if A[i] ^ A[j] == cur and (i, j) not in seen:\n            ans += 1\n            seen.add((i, j))\nprint(ans)\n", "def solve(a):\n    seen = set()\n    for i in range(len(a)):\n        c = 0\n        for j in range(i+2,len(a)):\n            c += a[j-1]\n            if a[i]^a[j] == c:                seen.add((i,j))\n            if c >= 2*a[i]:                break    \n    for i in range(len(a)-1,-1,-1):\n        c = 0\n        for j in range(i-2,-1,-1):\n            c += a[j+1]\n            if a[i]^a[j] == c:                seen.add((j,i))\n            if c >= 2 *a[i]:                break\n    print(len(seen))\nn = int(input());solve(list(map(int,input().split())))"]