["t = input()\nz = t.count('a')\nq = (len(t) - z) // 2\ns = t[:q + z]\nss = t[q + z:]\np = ''.join([i for i in s if i != 'a'])\nif p == ss:\n    print(s)\nelse:\n    print(':(')", "a = input()\nc = a.count('a')\nnew = a.replace('a', '')\nk = len(new)\nif k % 2 == 0 and new[:k//2] == new[k//2:] and a[:k//2+c].count('a') == c:\n    print(a[:k//2+c])\nelse:\n    print(\":(\")", "s = input()\na = s.count('a')\n\nl2 = (len(s)-a)//2\nl1 = len(s)-l2\n\nif s[:l1].replace('a','') == s[l1:]:\n    print(s[:l1])\nelse:\n    print(':(')\n\n\n", "s=input()\nl=len(s)\na=s.count(\"a\")\nif (l+a)%2==1:\n    print(\":(\")\nelse:\n    og=s[:(l+a)//2]\n    newg=\"\"\n    for char in og:\n        if char!=\"a\":\n            newg+=char\n    if newg==s[(l+a)//2:]:\n        print(og)\n    else:\n        print(\":(\")", "from collections import Counter as C\ns = input()\nc = C(s)\nn = len(s)\na = c.get('a', 0)\nm = n - a\nif m & 1:\n    print(\":(\")\n    return\nm //= 2\nm += a\nt = s[:m]\nif t + ''.join(c for c in t if c != 'a') != s:\n    print(\":(\")\n    return\nprint(t)", "def main():\n    s = input()\n    a = \"\"\n    for i in s:\n        if i != 'a':\n            a += i\n    \n    if len(a) & 1:\n        print(\":(\")\n        return 0\n    \n    n = len(a) >> 1\n    A = a[:n]\n    B = a[n:]\n    if A != B:\n        print(\":(\")\n        return 0\n    \n    N = len(s)\n    if s[N - n:] == A:\n        print(s[:N - n])\n        return 0\n    else:\n        print(\":(\")\n        return 0\n\nmain()", "s = input()\nc = 0\nfor i in s :\n    if i == 'a' :\n        c=c+1\nnb = len(s) - c\nif nb%2 == 0 :\n    nb=nb//2\n    a = s[:nb+c]\n    b = s[nb+c:]\n    z = \"\"\n    for i in a :\n        if i !='a' :\n            z=z+i\n    if z == b :\n        print(a)\n    else :print(\":(\")\nelse:\n    print(\":(\")", "from collections import Counter\n\ndef func(s):\n\tres = []\n\tfor c in s:\n\t\tif c != 'a':\n\t\t\tres.append(c)\n\treturn ''.join(res)\n\ns = input()\nn = len(s)\nc = Counter(list(s))\nm = n - c['a']\n\nif m % 2 != 0:\n\tprint(':(')\nelse:\n\tt = s[:m//2 + c['a']]\n\tif func(t) == s[m//2 + c['a']:]:\n\t\tprint(t)\n\telse:\n\t\tprint(':(')\n", "import sys\n\nS=input()\n\nL=len(S)\n\n\nS2=\"\"\n\nfor s in S:\n    if s!=\"a\":\n        S2+=s\n\nif len(S2)%2!=0:\n    print(\":(\")\n    return\n\nL2=len(S2)//2\n\nif L2==0:\n    print(S)\n    return\n\nS3=S2[:L2]\n\nif S[-L2:]==S3:\n    print(S[:-L2])\n    \nelse:\n    print(\":(\")\n    return\n\n    \n", "S = input()\n\na = S.count('a')\nls = (len(S) - a) // 2 + a\n\ns1 = S[:ls]\ns2 = S[ls:]\n\nif (len(S) - a) % 2 != 0 or 'a' in s2:\n    print(\":(\")\nelse:\n    f = []\n    for t in s1:\n        if t != 'a':\n            f += [t]\n    if f != list(s2):\n        print(\":(\")\n    else:\n        print(s1) ", "from sys import stdin\n\ns = stdin.readline().strip()\nb = ''.join([c for c in s if c != 'a'])\nif len(b) % 2 == 1:\n    print(\":(\")\n    # print(1)\nelif b[:len(b) // 2] != b[len(b) // 2:]:\n    print(\":(\")\n    # print(2)\nelif 'a' in s[len(s) - len(b) // 2:]:\n    print(\":(\")\n    # print(3)\nelse:\n    print(s[:len(s) - len(b) // 2])\n\n", "s = input()\nwyn = 0\nfor i in s:\n\tif i == \"a\":\n\t\twyn += 1\nl = len(s)\nimport sys\nif (l-wyn) % 2 != 0:\n\tprint(\":(\")\n\treturn\ndl = (l - wyn) // 2 \npocz = s[:l-dl]\nkon = s[l-dl:]\nb = []\nc= []\nfor i in pocz:\n\tif i != \"a\":\n\t\tb.append(i)\nfor i in kon:\n\tc.append(i)\nif b == c:\n\tprint(pocz)\nelse:\n\tprint(\":(\")", "s = input().strip()\na = s.count('a')\nn = len(s)\n\nl = (a+n)//2\nword = s[:l]\ngen = word + word.replace('a', '')\n\nif gen == s:\n    print(word)\nelse:\n    print(\":(\")\n\n\n", "s = input()\nt = ''\nfor i in s:\n    if i != 'a':\n        t += i\nif len(t) % 2:\n    print(':(')\n    return\nq = t[:len(t)//2]\nw = t[len(t)//2:]\nif q != w:\n    print(':(')\n    return\ncnt = 0\nif len(q) != 0 and s[-len(q):] == q:\n    print(s[:-len(q)])\nelif len(q) == 0:\n    print(s)\nelse:\n    print(':(')", "s = input()\ns1 = ''\na = 0\nfor i in s:\n    if i != 'a':\n        s1 += i\n    else:\n        a += 1\n\nif len(s1) % 2 != 0:\n    print(':(')\nelse:\n    s1 = s1[:len(s1) // 2]\n    N = len(s)\n    n = len(s1)\n    if s[N - n:] == s1:\n        print(s[:N - n])\n    else:\n        print(':(')\n", "t = input()\nn = len(t)\npref = [0] * n\npred = 0\nfor i in range(n):\n\tif t[i] == 'a':\n\t\tpref[i] += 1\n\tpref[i] += pred\n\tpred = pref[i]\nfor i in range(n):\n\tif pref[n - 1] - pref[i] == 0:\n\t\tif i - pref[i] + 1 == n - i - 1:\n\t\t\tf = True\n\t\t\tuk1 = 0\n\t\t\tuk2 = i + 1\n\t\t\twhile uk2 < n:\n\t\t\t\twhile t[uk1] == 'a':\n\t\t\t\t\tuk1 += 1\n\t\t\t\tif t[uk1] != t[uk2]:\n\t\t\t\t\tf = False\n\t\t\t\t\tbreak\n\t\t\t\tuk1 += 1\n\t\t\t\tuk2 += 1\n\t\t\tif f:\n\t\t\t\tfor j in range(i + 1):\n\t\t\t\t\tprint(t[j], end = '')\n\t\t\t\treturn\nprint(\":(\")\n", "s=input().strip()\nsu=0\nfor k in range(len(s)):\n    if(s[k]==\"a\"):\n        su+=1\nmm=((len(s)-su)//2)+su\nss=s[:mm]\ns1=\"\"\nfor k in range(mm):\n    if(s[k]!=\"a\"):\n        s1=s1+s[k]\nsf=ss+s1\nif(len(s)!=len(sf)):\n    print(\":(\")\nelse:\n for k in range(len(s)):\n     if(s[k]!=sf[k]):\n         print(\":(\")\n         break\n else:\n     print(ss)", "s = input()\nstring1 = \"\"\nstring2 = \"\"\nflag = 0\nn = len(s)\nfor i in range(n):\n\tstring1+=s[i]\n\tif(s[i]!=\"a\"):\n\t\tstring2+=s[i]\n\tif(string1+string2)==s:\n\t\tflag = 1\n\t\tbreak\nif(flag==0):\n\tprint(\":(\")\nelse:\n\tprint(string1)", "s = input()\n\nnotA = 0\n\nlis = []\nfor i in s:\n    if i != 'a':\n        notA += 1 \n        lis.append(i)\n\nif notA%2 == 1:\n    print(\":(\")\nelse:\n    check = 1\n    for i in range(notA//2):\n        if lis[i] != lis[notA//2 + i]:\n            print(\":(\")\n            check = 0\n            break\n    for i in range(len(s) - 1, len(s) - 1 - notA//2, -1):\n        if s[i] == 'a':\n            print(\":(\")\n            check = 0\n            break\n    if check == 1:\n        print(s[:len(s) - notA//2])", "s = input()\nnota = len(s) - s.count(\"a\")\nif nota % 2 != 0:\n    print(\":(\")\nelse:\n    if nota == 0:\n        print(s)\n    elif s[-nota//2:].count(\"a\") > 0:\n        print(\":(\")\n    else:\n        s1 = s.replace(\"a\", \"\")\n        if s1[:nota//2] != s1[nota//2:]:\n            print(\":(\")\n        else:\n            print(s[:-nota//2])", "from collections import Counter\ns = input()\nc = Counter(s)\nl = (len(s) + c['a']) // 2\nif s[:l].replace(\"a\", \"\") == s[l:]:\n    print(s[:l])\nelse:\n    print(\":(\")", "def astrip(s):\n\treturn ''.join([char for char in s if char != 'a'])\n\ndef f(s):\n\tt = astrip(s)\n\tn = len(t)\n\tif n % 2 != 0:\n\t\treturn ':('\n\tk = n // 2\n\tcandidate = t[:-1*k]\n\tif t != candidate + candidate:\n\t\treturn ':('\n\tif s[len(s)-k:] == candidate:\n\t\treturn s[:len(s)-k]\n\treturn ':('\n\nprint(f(input()))", "t = input()\n\ns = \"\"\nfor elem in t:\n\tif elem != \"a\":\n\t\ts += elem\nif len(s) % 2 != 0:\n\tprint(\":(\")\nelse:\n\tc = len(s) // 2\n\tif c == 0:\n\t\tprint(t)\n\telif s[:c] != s[c:]:\n\t\tprint(\":(\")\n\telse:\n\t\tif t[-c:] != s[c:]:\n\t\t\tprint(\":(\")\n\t\telse:\n\t\t\tprint(t[:-c])", "def solve():\n    s = input()\n    \n    a = \"\"\n    \n    for x in s:\n        if x != 'a':\n            a += x\n    \n    if len(a) == 0:\n        print (s)\n        return\n        \n    n = len(a)//2\n    \n    if 'a' in s[len(s)-n:]:\n        print (\":(\")\n        return\n    \n    print (s[:len(s)-n] if a[:n] == a[n:] else \":(\")    \n    \ndef __starting_point():  \n    solve()\n__starting_point()", "s=input()\nl1=[]\nfor c in s:\n    if c !='a':\n        l1.append(c)\nif len(l1)%2==0:\n    flag=0\n    \n    for i in range(0,len(l1)//2):\n        if l1[i]==l1[len(l1)//2+i]:\n            continue\n        else :\n            flag=1\n            break\n    if flag==1:\n        print(\":(\")\n    else :\n        flag=0\n        for c in s[len(s)-len(l1)//2:]:\n            if c=='a':\n                flag=1\n                break\n        if flag==0:\n            \n            print(s[:len(s)-len(l1)//2])\n        else :\n            print(\":(\")\nelse :\n    print(\":(\")"]