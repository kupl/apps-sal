["n = int(input())\ns = input()\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n + 1):\n        t = s[i:j]\n        ans += t.count('U') == t.count('D') and t.count('L') == t.count('R')\n\nprint(ans)\n", "k=0\n\na = int(input())\nb = input()\nu = [0]*205\nr = [0]*205\nl=[0]*205\nd=[0]*205\n\nfor i in range(a):\n    u[i+1] = u[i]\n    r[i+1] = r[i]\n    d[i+1] = d[i]\n    l[i+1] = l[i]\n    if (b[i] == 'U'):\n        u[i+1]+=1\n    elif b[i] == 'R':\n        r[i+1]+=1\n    elif b[i] == 'L':\n        l[i+1]+=1\n    else:\n        d[i+1]+=1\n\nfor i in range(1, a+1):\n    for j in range(i, a+1):\n        if u[j]-u[i-1] == d[j]-d[i-1] and l[j]-l[i-1] == r[j]-r[i-1]:\n            k+=1\n\nprint(k)\n", "n = int(input())\ns = input().strip()\nans = 0\nfor i in range(n):\n\tfor j in range(i+1, n+1):\n\t\ttemp = s[i:j]\n\t\tif temp.count('U') == temp.count('D') and temp.count('R') == temp.count('L'):\n\t\t\tans += 1\nprint(ans)", "def f(t):\n    return t.count('U') == t.count('D') and t.count('L') == t.count('R')\nn, s = int(input()), input()\nprint(sum(f(s[i:j]) for i in range(n) for j in range(i + 1, n + 1)))", "#!/usr/bin/env python3\n\nDIR = {\n    'U': (-1, 0),\n    'R': (0, 1),\n    'D': (1, 0),\n    'L': (0, -1),\n}\n\ntry:\n    while True:\n        n = int(input())\n        s = input()\n\n        result = 0\n        for i in range(len(s)):\n            y = x = 0\n            for c in s[i:]:\n                t = DIR[c]\n                y += t[0]\n                x += t[1]\n                if y == x == 0:\n                    result += 1\n        print(result)\n\nexcept EOFError:\n    pass\n", "def main():\n    from collections import defaultdict\n    \n    d = defaultdict(int)\n    d[(0, 0)] += 1\n    n = int(input())\n    s = input()\n    x = y = 0\n    res = 0\n    for i in s:\n        if i == 'U': x += 1\n        elif i == 'D': x -= 1\n        elif i == 'L': y += 1\n        else: y -= 1\n        res += d[(x, y)]\n        d[(x, y)] += 1\n    \n    print(res)\n    \n    \nmain()", "n = int(input())\ns = input()\nans = 0\nfor i in range(n):\n    for t in range(i + 1):\n        s1 = s[t : i + 1]\n        x = 0\n        y = 0\n        for e in range(len(s1)):\n            if s1[e] == 'U':\n                y += 1\n            elif s1[e] == 'R':\n                x += 1\n            elif s1[e] == 'D':\n                y -= 1\n            else:\n                x -= 1\n        if x == y == 0:\n            ans += 1\nprint(ans)\n", "n = int(input())\ns = input()\nresult = 0\nfor start in range(n):\n    for finish in range(start + 1, n + 1):\n        tmp = s[start:finish]\n        if tmp.count(\"U\") == tmp.count(\"D\") and tmp.count(\"L\") == tmp.count(\"R\"):\n            result += 1\nprint(result)", "#!/usr/bin/env python3\nn = int(input())\ns = input()\nans = 0\nfor l in range(n-1):\n    for r in range(l+1,n+1):\n        y, x = 0, 0\n        for c in s[l:r]:\n            if c == 'U':\n                y += 1\n            elif c == 'D':\n                y -= 1\n            elif c == 'R':\n                x += 1\n            elif c == 'L':\n                x -= 1\n        if y == 0 and x == 0:\n            ans += 1\nprint(ans)\n", "n = int(input())\ns = input()\nres = 0\nfor l in range(1, n+1):\n    for beg in range(0, n - l + 1):\n        hor = 0\n        ver = 0\n        for i in range(beg, beg + l):\n            if s[i] == 'U': ver += 1\n            if s[i] == 'D': ver -= 1\n            if s[i] == 'R': hor += 1\n            if s[i] == 'L': hor -= 1\n        if hor==0 and ver==0:res += 1\n        \nprint(res)", "n = int(input())\ninst = input()\n\ndir_ = dict(U=(0,1), D=(0,-1), L=(-1, 0), R=(1, 0))\nct = 0\nfor i in range(n):\n    x, y = (0, 0)\n    for j in range(i, n):\n        dx, dy = dir_[inst[j]]\n        x += dx\n        y += dy\n        ct += x == 0 and y == 0\n\nprint(ct)\n", "# strs = [input() for _ in range(3)]\n\ndef main():\n\tn = int(input())\n\ts = input()\n\n\tcnt = 0\n\tfor i in range(n):\n\t\tvert = horiz = 0\n\t\tfor j in range(i, n):\n\t\t\tif s[j] == 'U':\n\t\t\t\tvert += 1\n\t\t\telif s[j] == 'R':\n\t\t\t\thoriz += 1\n\t\t\telif s[j] == 'D':\n\t\t\t\tvert -= 1\n\t\t\telse:\n\t\t\t\thoriz -= 1\n\t\t\tif vert == 0 and horiz == 0:\n\t\t\t\tcnt += 1\n\n\tprint(cnt)\n\n\n\n\nmain()\n\n\n", "n = int(input())\nd = [(0, 0)]\nfor c in input():\n    dpos = {'L': (-1, 0), 'R': (1, 0), 'U': (0, 1), 'D': (0, -1)}[c]\n    d.append((d[-1][0] + dpos[0], d[-1][1] + dpos[1]))\nprint(sum(1 for i in range(n) for j in range(i + 1, n + 1) if d[i] == d[j]))\n", "n = int(input())\nans = 0\ns = input()\nfor i in range(n):\n    pl = [0, 0]\n    st = [0, 0]\n    if s[i] == 'U':\n        pl[0] += 1\n                \n    if s[i] == 'D':\n        pl[0] -= 1\n                \n    if s[i] == 'R':\n        pl[1] += 1\n                \n    if s[i] == 'L':\n        pl[1] -= 1\n    for j in range(i + 1, n):\n        \n        if s[j] == 'U':\n            pl[0] += 1\n        \n        if s[j] == 'D':\n            pl[0] -= 1\n        \n        if s[j] == 'R':\n            pl[1] += 1\n        \n        if s[j] == 'L':\n            pl[1] -= 1\n        if st == pl:\n            ans += 1\nprint(ans)   \n            \n            \n        \n", "n = int(input())\ns = input()\n\nret = 0\nfor i in range(n):\n    for j in range(i+1, n+1):\n        count = {}\n        for k in range(i, j):\n            count[s[k]] = count.get(s[k], 0) + 1\n        eq = len(count) > 1\n        if \"U\" in count or \"D\" in count:\n            if \"D\" not in count or \"U\" not in count:\n                eq = False\n            else:\n                eq &= count[\"U\"] == count[\"D\"]\n        if \"L\" in count or \"R\" in count:\n            if \"R\" not in count or \"L\" not in count:\n                eq = False\n            else:\n                eq &= count[\"L\"] == count[\"R\"]\n        ret += eq\nprint(ret)\n", "from itertools import accumulate\n\nn = int(input())\nS = {'D': (0, -1), 'U': (0, 1), 'R': (1, 0), 'L':(-1, 0)}\nline = [S[c] for c in input()]\nprefix_x = list(accumulate([0] + line, lambda p, q: p + q[0]))\nprefix_y = list(accumulate([0] + line, lambda p, q: p + q[1]))\nans = 0\nfor i in range(n+1):\n    for j in range(i+1, n+1):\n        if prefix_x[j] == prefix_x[i] and prefix_y[j] == prefix_y[i]:\n            ans += 1\nprint(ans)\n    \n", "n = int(input())\ns = input()\nans = 0\nfor i in range(len(s)):\n    for j in range(i + 1, len(s)):\n        m = {'L':0, 'R': 0, 'U':0, 'D':0}\n        s1 = s[i:j + 1]\n        for x in s1:\n            m[x] += 1\n        if m['L'] == m['R'] and m['U'] == m['D']:\n            ans += 1\nprint(ans)\n", "n = int(input())\ns = input().rstrip()\n\ncount = 0\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        x, y = 0, 0\n        for c in s[i:j+1]:\n            if c == 'U':\n                y += 1\n            elif c == 'D':\n                y -= 1\n            elif c == 'L':\n                x += 1\n            elif c == 'R':\n                x -= 1\n        if x == 0 and y == 0:\n            count += 1\n\nprint(count)\n", "import collections\nimport math\n\nn = int(input())\ns = input()\nans = 0\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        t = s[i:j+1]\n        if t.count('U') == t.count('D') and t.count('L') == t.count('R'):\n            ans += 1\nprint(ans)\n              \n", "n=int(input())\ns=' '+input()\n\nr=[(0,0)]\nfor i in range(1,n+1):\n  x,y=r[i-1]\n  if s[i]==\"U\": y+=1\n  if s[i]==\"D\": y-=1\n  if s[i]==\"L\": x-=1\n  if s[i]==\"R\": x+=1\n  r+=[(x,y)]\nans=0\nfor i in range(1,n):\n  for j in range(i+1,n+1):\n    if (0,0)==(r[j][0]-r[i-1][0],r[j][1]-r[i-1][1]): ans+=1\nprint(ans)\n", "n = int(input())\nl = input()\nv = []\nh = []\nfor c in l:\n    if c == 'U':\n        v += [1]\n    elif c == 'D':\n        v += [-1]\n    else:\n        v += [0]\n    if c == 'R':\n        h += [1]\n    elif c == 'L':\n        h += [-1]\n    else:\n        h += [0]\nfor i in range(1,n):\n    v[i] += v[i-1]\n    h[i] += h[i-1]\n\nv = [0] + v\nh = [0] + h\na = 0\nfor i in range(n):\n    for j in range(i,n):\n        if h[j+1] == h[i] and v[j+1] == v[i]:\n            a += 1\nprint(a)\n    \n", "le = int(input())\ns = input()\nl = [[0,0]]\ncurr = [0,0]\nfor i in range(le):\n    c = s[i]\n    if c == 'U':\n        curr[1] += 1\n    elif c == 'R':\n        curr[0] += 1\n    elif c == 'L':\n        curr[0] -= 1\n    else:\n        curr[1] -= 1\n    l.append(curr[:])\nl2 = []\nfor i in range(len(l)):\n    if not(l[i] in l2):\n        l2.append(l[i][:])\nl3 = [0]*len(l2)\n\nfor i in range(len(l2)):\n    for j in range(len(l)-1,-1,-1):\n        if l2[i] == l[j]:\n            l3[i]+=1\n            l.pop(j)\nout = 0\nfor val in l3:\n    out += (val)*(val-1)//2\nprint(out)\n", "n = int(input())\ndata = input()\nanswer = 0\nfor i in range(n):\n    for j in range(n):\n        if i <= j:\n            help = data[i:j + 1]\n            L = help.count('L')\n            R = help.count('R')\n            U = help.count('U')\n            D = help.count('D')\n            if L == R and U == D:\n                answer += 1\nprint(answer)", "# You lost the game.\nn = int(input())\nch = str(input())\nr = 0\na = 0\nb = 0\nT = [[0,0]]\nfor k in range(n):\n    if ch[k] == \"U\":\n        a += 1\n    elif ch[k] == \"D\":\n        a -= 1\n    elif ch[k] == \"R\":\n        b += 1\n    else:\n        b -= 1\n    T += [[a,b]]\n\nfor i in range(1,n+1):\n    for j in range(i):\n        if T[j] == T[i]:\n            r+=1\n            \nprint(r)\n\n", "def check(st):\n    cnt = [st.count(ch) for ch in \"UDRL\"]\n    return cnt[0] == cnt[1] and cnt[2] == cnt[3]\n\nn = int(input())\ns = input().strip()\n\nans = int(0)\nfor l in range(2, n+1):\n    for i in range(0, n-l+1):\n        if check(s[i:i+l]):\n            ans += 1\n\nprint(ans)"]