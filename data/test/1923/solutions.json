["N=int(input())\nA=list(map(int,input().split()))\nA.sort()\nsm=0\nfor i in range(0,2*N,2):\n  sm+=A[i]\nprint(sm)\n", "n = int(input())\nl = [int(s) for s in input().split()]\nl.sort()\nans = 0\nfor i in range(0, n * 2, 2):\n    ans += min(l[i], l[i + 1])\n\nprint(ans)", "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\nfor i in range(N):\n    ans += min(L[2*i], L[2*i+1])\nprint(ans)", "import sys\n\nN = input()\nL = list(map(int, input().split()))\n\nL.sort(reverse=True)\n\na = L[1::2]\n\ns = 0\n\nfor x in a:\n    s += x\n\nprint(s)", "input()\na = list(map(int, input().split()))\na.sort()\nans = sum([min(a[2 * i : 2 * i + 2]) for i in range(len(a) // 2)])\nprint(ans)", "n = int(input()); a = list(map(int, input().split()))\na.sort(); b = 0\nfor i in range(n): b += a[2*i]\nprint(b)", "N = int(input())\nL = list(map(int,input().split()))\nL = sorted(L)\n\nprint(sum(L[::2]))", "N = int(input().strip())\nL = list(map(int, input().strip().split()))\n\nL.sort()\namt = 0\nwhile (len(L) > 0):\n\t(L1, L2) = L[0:2]\n\tamt += min([L1, L2])\n\tdel L[0:2]\n\nprint(amt)\n", "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\n    N = int(input())\n    L = list(map(int, input().split()))\n\n    L.sort()\n    ans = sum(L[i] for i in range(0, 2 * N, 2))\n\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nl = [int(i) for i in input().split()]\nl.sort()\nans = 0\nfor i in range(0,2*n,2):\n    ans += l[i]\nprint(ans)", "N = int(input())\nL = map(int, input().split())\ndef skewer(input):\n  x = sorted(input, reverse = True)\n  result = 0\n  for i in range(0,len(x)):\n    if i%2 ==1:\n      result = result + x[i]\n  return result \nprint(skewer(L))", "n=int(input())\nL=list(map(int,input().split()))\nL.sort()\ns=sum(L[::2])\nprint(s)", "x = input()\ns = sorted(list(map(int, input().split())))\nprint(sum(s[::2]))", "import sys\npin=sys.stdin.readline\ndef main():\n  N=int(pin())\n  L=list(map(int,pin().split()))\n  L.sort()\n  ans=0\n  for i in range(0,2*N,2):\n    ans+=L[i]\n  print(ans)\n  return\n\ndef __starting_point():\n  main()\n\n__starting_point()", "print((sum(sorted(map(int,open(0).read().split()[1:]))[::2])))\n", "n=int(input())\nans=int(0)\n\nA=list(map(int,input().split()))\n\nA.sort()\nfor i in range(n):\n\tans+=A[i*2]\nprint(ans)\n\n", "N = int(input())\nL = sorted(map(int, input().split()))\n\nans = 0\nfor i in range(N):\n    ans += L[i * 2]\n\nprint(ans)\n", "n = int(input())\narray = list(map(int, input().split()))\narray.sort()\n\nans = 0\nfor i in range(n * 2):\n    if i % 2 == 0:\n        ans += array[i]\n\nprint(ans)\n", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(sum(l[::2]))", "n=int(input())\nl=sorted(list(map(int,input().split())))\nsum=0\nfor i in range(2*n):\n    if i%2==0:\n        sum+=l[i]\nprint(sum)", "N=int(input())\nL=sorted(list(map(int,input().split())),reverse=True)\nans=0\nfor i in range(1,len(L),2):\n  ans+=min(L[i],L[i-1])\nprint(ans)\n", "N = int(input())\nL = list(map(int,input().split()))\nL.sort()\nans = 0\nfor i in range(0,2*N,2):\n  ans += L[i]\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nsum=0\nfor i in range(0,len(a),2):\n  sum+=a[i]\nprint(sum)", "N = int(input())\nL = [int(i) for i in input().split()]\nL.sort(reverse=True)\nS = 0\nfor i in range(N):\n    S += L[2*i+1]\nprint(S)\n", "n = int(input())\nn *= 2\nlst = input().split(\" \")\nfor m in range(0,n):\n    lst[m] = eval(lst[m])\nfor i in range(0,n):\n    for j in range(0,n-i-1):\n        if lst[j] < lst[j+1]:\n            temp = lst[j]\n            lst[j] = lst[j+1]\n            lst[j+1] = temp\n\nresult = 0\nfor k in range(0,n):\n    if k % 2 == 1:\n        result += lst[k]\nprint(result)", "n=int(input())\nprint(sum(sorted(map(int,input().split()))[::2]))", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nsum=0\nfor i in range(0,len(a),2):\n    sum+=min(a[i],a[i+1])\n\nprint(sum)    \n    \n    \n\n               \n              \n        \n               \n    \n        \n    \n            \n\n        \n                \n        \n    \n", "n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=1)\nres = 0\nfor i in range(2*n):\n    if i%2 != 0: continue\n    res += min(l[i],l[i+1])\nprint(res)", "N = int(input())\nL = list(map(int,input().split()))\nprint(sum(sorted(L)[0::2]))", "n = int(input())\nl = sorted(list(map(int, input().split())))\n\nans = 0\n\nfor i in range(2*n):\n  if i%2 == 0:\n    ans += l[i]\nprint(ans)", "N=input().rstrip()\nLs=list(map(int, input().split()))\nLs.sort(reverse=True)\n\n\n# print(Ls)\ntotalBarLength=0\nfor i in range(0,len(Ls),2):\n    barLength=Ls[i+1]\n    totalBarLength += barLength\nprint(totalBarLength)", "n = int(input())\nl = list(map(int,input().split()))\nanswer = 0\nl = sorted(l)\nfor i in range(0,2*n,2):\n  answer +=l[i]\nprint(answer)", "N=int(input())\nL=sorted(map(int,input().split()))\nprint(sum(L[::2]))", "input()\nl=list(map(int,input().split()))\nl=sorted(l)\nprint(sum(l[::2]))", "import sys\nimport math\nimport random\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter,defaultdict\nfrom decimal import Decimal\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nINF = 10**9\n\nN = int(input())\nL = list(map(int,input().split()))\nL.sort()\nans = 0\nfor i in range(N):\n    ans += L[i*2]\nprint(ans)", "import bisect\nimport heapq\nimport itertools\nimport sys\nimport math\nimport random\nimport time\nfrom collections import Counter, deque, defaultdict\nfrom functools import reduce\nfrom operator import xor\nfrom types import FunctionType\nfrom typing import List\n\nmod = 10 ** 9 + 7\nsys.setrecursionlimit(10 ** 9)\n\n\ndef lmi():\n    return list(map(int, input().split()))\n\n\ndef main():\n    N = int(input())\n    L = lmi()\n    L.sort()\n    ans = sum(L[::2])\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "n=int(input())\na=sorted(list(map(int,input().split())))\ns=0\nfor i in range(2*n):\n    if(i%2==0):\n        s+=a[i]\nprint(s)", "n=input()\nl=list(map(int,input().split(\" \")))\nl.sort()\nans=0\nfor i in range(0,len(l),2):\n  ans+=l[i]\nprint(ans)", "N = int( input())\nL = sorted(map( int, input().split()))\n\nret = 0\nfor i in range( N ):\n  ret += L[ 2 * i ]\n\nprint( ret )", "N=int(input())\nL=sorted(map(int,input().split()))\nprint(sum(L[::2]))", "n = int(input())\nl = list(map(int, input().split()))\n\nsort_l = sorted(l)\n\nprint(sum(sort_l[-2::-2]))", "lines = [[int(num) for num in input().split()] for _ in range(2)]\nn = lines[0][0]\nskewers = sorted(lines[1])\ntotal = 0\nfor i in range(n):\n  total += skewers[2*i]\nprint(total)\n", "N=int(input())\nL=list(map(int,input().split()))\n\nL.sort(reverse=True)\n\nans=0\nfor i in range(1,2*N,2):\n    ans+=L[i]\n\nprint(ans)", "n=int(input())\nl=sorted(list(map(int,input().split())))\nprint((sum(l[::2])))\n", "import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\nMOD = 10**9 + 7\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**6)\nimport itertools\nimport bisect\nimport re\nfrom collections import Counter,deque,defaultdict\ndef iinput(): return int(input())\ndef imap(): return map(int, input().split())\ndef ilist(): return list(imap())\ndef irow(N): return [iinput() for i in range(N)]\ndef sinput(): return input().rstrip()\ndef smap(): return sinput().split()\ndef slist(): return list(smap())\ndef srow(N): return [sinput() for i in range(N)]\n\ndef main():\n    n = iinput()\n    s = sorted(ilist())[::2]\n    print(sum(s))\n\n\n\ndef __starting_point():\n    main()\n__starting_point()", "def solve():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    res = sum(arr[i] for i in range(0, len(arr), 2))\n    print(res)\n\nsolve()", "N = int(input())\nA = list(map(int, input().split()))\nA2 = sorted(A, reverse=True)\n\nans = 0\nfor n in range(N):\n  ans += A2[2*n+1]\n  \nprint(ans)", "_=input()\nn=list(map(int,input().split()))\nn.sort()\nans=0\nfor i in range(0,len(n),2):\n  ans+=n[i]\nprint(ans)", "n = int(input())\nl = sorted(list(map(int,input().split())))\nans= 0\nfor i in range(0,n*2,2):\n  ans += l[i]\n  \nprint(ans)", "N = int(input())\nL = list(map(int,input().split()))\nL.sort()\nprint(sum(L[::2]))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(0, 2 * n, 2):\n    ans += a[i]\nprint(ans)", "k = int(input())\nli= list(map(int, input().split()))\nli.sort()\nsum=0\nfor k in range(len(li)):\n  \n  if k%2==0:\n   \n    sum=sum+li[k]\n \nprint(sum)\n", "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nprint((sum(L[0::2])))\n", "a = int(input())\nb = list(map(int, input().split()))\nc = sorted(b, reverse=True)\n#print(a)\n#print(c)\nd = 0\n#\u4e8c\u3064\u3068\u308b\n\n#for e in \n'''e.append(c[0])\ne.append(c[1])\ndel c[0]\ndel c[1]'''\n#print(e)\n#print(c)\nfor i in range(a):\n  #e = []\n  f = 2*i\n  g = 2*i+1\n  #print(f)\n  #print(g)\n  \n  #e.append(c[f])\n  #e.append(c[g])\n  #print(e)\n  if c[f] == c[g]:\n  \td += c[g]\n  else:\n    d += c[g]\n  #print(d)\nprint(d)", "# -*- coding: utf-8 -*-\n# get a integer\nN = int(input())\n# get two integers separated with half-width break\nL = list(map(int, input().split()))\n# get a string\n\n# output\"\nL.sort()\nL = L[::-1]\n\nr = 0\nfor i in range(N):\n    r += L[1]\n    L = L[2:]\n\nprint((str(r)))\n\n", "N=int(input())\nL=list(map(int,input().split()))\nL.sort()\nsum=0\nfor i in range(0,2*N,2):\n  sum+=L[i]\nprint(sum)", "n = int(input())\nprint((sum(sorted(list(map(int, input().split())))[::2])))\n", "n = int(input())\na = list(map(int,input().split()))\na = sorted(a)\nans = sum(a[::2])\nprint(ans)", "n=int(input())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(0,2*n,2):\n    ans+=a[i]\nprint(ans)\n", "def main():\n    n = int(input())\n    l = list(sorted(map(int, input().split())))\n    ans = 0\n    for i in range(0, 2*n, 2):\n        ans += l[i]\n    print(ans)\n\n\nmain()", "#a = [input() for i in range(2)]\n\nlist = []\nfor i in range(2):\n    a = input()\n    list.append(a)\n\nN = list.pop(0)\ns = list.pop(0)\n\nstick_list = s.split()\n\nstick_list.sort(key=int)\n\nstick_list = [int(s) for s in stick_list]\n\nsum = 0\nfor i in stick_list[::2]:\n    sum = sum + i\nprint(sum)\n", "n = int(input())\nllist = list(map(int, input().split()))\nllist.sort()\n\nans = 0\nfor i in range(0, len(llist), 2):\n    ans += llist[i]\n\nprint(ans)\n", "# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(10**9)\nINF=10**18\nMOD=10**9+7\ninput=lambda: sys.stdin.readline().rstrip()\nYesNo=lambda b: bool([print('Yes')] if b else print('No'))\nYESNO=lambda b: bool([print('YES')] if b else print('NO'))\nint1=lambda x:int(x)-1\n\nN=int(input())\nL=list(map(int,input().split()))\nL.sort(reverse=1)\nans=0\nfor i in range(N):\n    ans+=min(L[i*2],L[i*2+1])\nprint(ans)", "n = int(input())\nnum = [int(i) for i in input().split(' ')]\nnum.sort(reverse=True)\nm=0\nfor i in range(1,n+1):\n    m+=num[2*i-1]\nprint(m)\n", "n = int(input())\nl = sorted([int(x) for x in input().split(' ')])\nl.reverse()\ns = 0\nfor i in range(0, n, 1):\n    s += min(l[2*i:2*i+2])\nprint(s)", "n = int(input())\nl = list(map(int,input().split()))\nl.sort(reverse=True)\nprint(sum(l[1::2]))", "# https://atcoder.jp/contests/agc001/tasks/agc001_a\n\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\ns = 0\nfor i in range(0, len(l), 2):\n    s += l[i]\nprint(s)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = 0\nfor i in range(0, len(A), 2):\n  ans += min(A[i], A[i + 1])\nprint(ans)", "N = int(input())\nL = map(int, input().split())\ndef skewer(input):\n  x = sorted(input, reverse = True)\n  result = 0\n  for i in range(0,len(x)):\n    if i%2 ==1:\n      result = result + x[i]\n  return result \nprint(skewer(L))", "n = int(input())\na = list(map(int, input().split()))\na.sort()\nc = 0\nfor i in range(0, n):\n\tc += min(a[2 * i], a[(2 * i)+1])\nprint(c)\n", "N = int(input())\nL = map(int, input().split())\n\nL = sorted(L)\n\nTotal = 0\nfor i in range(N*2):\n\tif(i%2==0):\n\t\tTotal+=L[i]\n\nprint(Total)", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nnum = 0\nfor i in range(0,2*n,2):\n    num += min(l[i],l[i+1])\nprint(num)", "n = int(input())\narray = [ int(x) for x in input().split() ]\narray.sort()\nres = 0\nfor index in range(0,n):\n  res += min(array[2*index],array[2*index + 1])\nprint(res)", "n = int(input())\nl = sorted(list(map(int,input().split())))\nans = 0\nfor i in range(0,2*n,2):\n    ans += l[i]\nprint(ans)", "import sys\ndef input():\n  return sys.stdin.readline().rstrip()\n\nN=int(input())\nL=sorted(list(map(int,input().split())))\n\nans=0\nfor i in range(0,2*N,2):\n  ans+=L[i]\n\nprint(ans)\n", "n=int(input())\nl=list(map(int,input().split()))\nl=sorted(l)\nprint(sum([l[2*i] for i in range(n)]))", "n = int(input())\nl = list(map(int, input().split()))\nl.sort()\nans = 0\nfor i in range(n):\n    ans += l[2*i]\nprint(ans)", "N = int(input())\nalist = list(map(int, input().split()))\nalist.sort()\nans = 0\nfor i in range(N*2):\n    if i%2==0:\n        ans += alist[i]\nprint(ans)", "N = int(input())\nA = list(map(int, input().split()))\nA.sort()\nans = 0\nfor i in range(0, 2 * N, 2):\n  ans += A[i]\nprint(ans)", "N = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nans = 0\nfor x in L[::2]:\n  ans += x\n\nprint(ans)", "n = int(input())\na = sorted(list(map(int, input().split())))\ns = 0\nfor i in range(2 * n):\n  if i % 2 == 0:\n    s += a[i]\nprint(s)", "N = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nans = 0\nfor i in range(0, 2 * N, 2):\n    ans += L[i]\n\nprint(ans)", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(0,2*n,2):\n    ans+=l[i]\nprint(ans)", "n = int(input())\na = sorted(list(map(int,input().split())),reverse=True)\n\nans = 0\nfor i in range(n):\n    ans += a[2*i+1]\nprint(ans)\n", "N = int(input())\nL = list(map(int, input().split()))\nL = sorted(L)\nans = 0\nfor i in range(N):\n  ans += L[2 * i]\n  \nprint(ans)  ", "n=int(input())\nans=int(0)\n\nA=list(map(int,input().split()))\n\nA.sort()\nfor i in range(n):\n    ans+=A[i]\n\nall=int(0)\nfor i in range(n):\n    all+=A[2*i]\nprint(max([ans,all]))", "N = int(input())\nL = map(int, input().split())\n\n# L = sorted(L)\n\n# Total = 0\n# for i in range(N*2):\n# \tif(i%2==0):\n# \t\tTotal+=L[i]\n\n# print(Total)\n\n\ndef skewer(input):\n\tx = sorted(input, reverse = True)\n\tresult = 0\n\tfor i in range(0,len(x)):\n\t\tif i%2 ==1:\n\t\t\tresult = result + x[i]\n\treturn result\n\nprint(skewer(L))", "input()\nprint(sum(sorted(map(int,input().split()))[::2]))", "N=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans = sum(L[::2])\nprint(ans)", "n=int(input())\nl=list(map(int,input().split()))\nl.sort()\nans=0\nfor i in range(0,len(l),2):\n    ans+=l[i]\nprint(ans)", "n = int(input())\nn = n * 2\nl = list(map(int,input().split()))\nl.sort()\nl.reverse()\nans = 0\nfor i in range(len(l)):\n\tif i % 2 == 1:\n\t\tans += l[i]\nprint(ans)\n", "n = int(input())\nl = list(map(int,input().split()))\nl.sort()\nprint(sum(l[0::2]))", "n=int(input())\nl=list(map(int, input().split()))\nl.sort()\nkusi=0\nfor i in range(n):\n  kusi+=l[i*2]\nprint(kusi)", "N=int(input())\nL=sorted(list(map(int,input().split())))\nans=0\nfor i in range(N):\n  ans+=L[2*i]\nprint(ans)", "n=int(input())\nl=sorted(list(map(int,input().split())))\nprint(sum(l[::2]))", "n=int(input())\narr=list(map(int,input().split()))\narr.sort()\ns=0\nfor i in range(0,(2*n)-1,2):\n  s+=arr[i]\nprint(s)", "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nprint(sum(L[::2]))", "N=int(input())\n*L,=map(int,input().split())\nL.sort()\nans=sum(L[2*i]for i in range(N))\nprint(ans)"]