["N, K = map(int, input().split())\nS = []; T = []\nfor x in range(1, int(N**.5)+1):\n    if N % x == 0:\n        S.append(x)\n        if x*x < N:\n            T.append(N//x)\nT.reverse()\nS += T\nM = len(S)\nU = []\n\nMOD = 10**9 + 7\nans = 0\nv = 0\nfor i in range(M):\n    x = S[i]\n    v = pow(K, (x+1)//2, MOD)\n    for j in range(i):\n        y = S[j]\n        if x % y == 0:\n            v -= U[j]\n    U.append(v % MOD)\n    ans = (ans + (v * x if x & 1 else v * (x//2))) % MOD\nprint(ans)", "M=10**9+7;D=[];i=1;r=0;N,K=map(int,input().split())\nwhile i*i<=N:\n\tif N%i==0:D.append(i);i*i<N and D.append(N//i)\n\ti+=1\nD.sort();N=[]\nfor i in range(len(D)):\n\tN.append(pow(K,-~D[i]//2,M))\n\tfor j in range(i):\n\t\tif D[i]%D[j]==0:N[i]=(N[i]-N[j])%M\n\tr=(r+(N[i]*D[i]*pow(2,M-2+D[i]%2,M)))%M\nprint(r)", "import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn,k = list(map(int, input().split()))\nM = 10**9+7\n### \u7d04\u6570\u5217\u6319\ndef fs(n):\n    s = set()\n    for i in range(1,int(n**0.5)+2):\n        if n%i==0:\n            s.add(i)\n            s.add(n//i)\n    l = sorted(list(s))\n    return l\nds = fs(n)\nm = len(ds)\nnums = [None]*m\nfor i in range(m):\n    val = pow(k, (ds[i]+1)//2, M)\n    for j in range(i):\n        if ds[i]%ds[j]==0:\n            val -= nums[j]\n            val %= M\n    nums[i] = val%M\nans = 0\ninv2 = pow(2, M-2, M)\nfor i in range(m):\n    if ds[i]%2==0:\n        ans += ds[i]*nums[i]*inv2\n    else:\n        ans += ds[i]*nums[i]\n    ans %= M\nprint(ans%M)", "# coding: utf-8\n# Your code here!\nimport sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\n\nn,k = list(map(int,readline().split()))\nMOD = 10**9+7\n\ndef divisor_list(N): #\u7d04\u6570\u306e\u30ea\u30b9\u30c8\n    if N == 1: return [1]\n    res = []\n    for i in range(1,N):\n        if i*i >= N: break\n        if N%i == 0:\n            res.append(i)\n            res.append(N//i)\n    if i*i == N: res.append(i)\n    return sorted(res)\n\n\n\nif n&1:\n    p = [i for i in divisor_list(n)]\n    r = {pi:pow(k,(pi+1)//2,MOD) for pi in p}\n    #print(r)\n    for pi in p:\n        for pj in p:\n            if pj >= pi: break\n            if pi%pj==0:\n                r[pi] -= r[pj]\n    #print(r)\n    ans = 0\n    for pi,v in list(r.items()):\n        ans += v*(pi)\n    ans %= MOD\n    print(ans)\n    \n    \n\nelse:\n    p = [1] + [i for i in divisor_list(n) if i%2==0 and i!=2]\n    \n    r = {pi:pow(k,(pi+1)//2,MOD) for pi in p}\n    for pi in p:\n        for pj in p:\n            if pj >= pi: break\n            if pi%pj==0:\n                r[pi] -= r[pj]\n\n    #print(r)\n    ans = 0\n    for pi,v in list(r.items()):\n        if pi==1:\n            ans += v\n        else:\n            ans += v*(pi//2)\n    ans %= MOD\n        \n        \n    print(ans)        \n        \n        \n    \n    \n    \n    \n\n\n    \n    \n    \n    \n    \n", "import sys\ninput = sys.stdin.readline\n\nimport numpy as np\n\nMOD = 10**9 + 7\n\nN,K = map(int,input().split())\n\nU=int(10**4.5+10)\ndiv = np.arange(1,U,dtype=np.int64)\ndiv = div[N%div==0]\ndiv = sorted(np.union1d(div,N//div))\n\nA = {d:pow(K,int((d+1)//2),MOD) for d in div}\nB = {}\nfor d in div:\n    B[d] = A[d] - sum(B[dd] for dd in div if dd < d and d%dd == 0)\n\nanswer = sum(B[d] * (d//2 if d%2 == 0 else d) for d in div)\nanswer %= MOD\nprint(answer)", "N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\ni = 1\nM = N\ndiv = []\nwhile i * i <= N:\n    if N % i == 0:\n        div.append(i)\n        if N // i != i:\n            div.append(N // i)\n    i += 1\n\n\ndiv = sorted(div)\nN1 = len(div)\nnum = [0] * (N1 + 1)\nans = 0\nfor i in range(N1):\n    num[i] = pow(K, (div[i] + 1) // 2, MOD)\n    for j in range(i):\n        if div[i] % div[j] == 0:\n            num[i] = num[i] - num[j] + MOD\n            num[i] %= MOD\n\n    if div[i] % 2 == 0:\n        ans += div[i] * num[i] // 2\n        ans %= MOD\n    else:\n        ans += div[i] * num[i]\n        ans %= MOD\n\nprint(ans)", "def prime_factor(n):\n    i = 2\n    factors = []\n    while i * i <= n:\n        if n % i:\n            i += 1\n        else:\n            while n % i == 0:\n                n //= i\n            factors.append(i)\n    if n > 1:\n        factors.append(n)\n    return factors\n\n\ndef divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    divisors.sort()\n    return divisors\n\n\ndef mebius(n):\n    res = {}\n    primes = prime_factor(n)\n    m = len(primes)\n    for i in range(1 << m):\n        mu = 1\n        d = 1\n        for j in range(m):\n            if i >> j & 1:\n                mu *= -1\n                d *= primes[j]\n        res[d] = mu\n    return res\n\n\nmod = 10**9+7\nN, K = list(map(int, input().split()))\ndiv = divisors(N)\n\nans = 0\n\nfor x in div:\n    div2 = divisors(x)\n    mu = mebius(x)\n    cnt = 0\n    for y in list(mu.keys()):\n        cnt += pow(K, ((x//y)+1)//2, mod)*mu[y]\n    if x % 2 == 0:\n        cnt *= pow(2, mod-2, mod)\n    ans += x*cnt\n    ans %= mod\n\nprint(ans)\n", "from math import gcd\n\ndef divisors(M):#M\u306e\u7d04\u6570\u5217 O(n^(0.5+e))\n    d=[]\n    i=1\n    while M>=i**2:\n        if M%i==0:\n            d.append(i)\n            if i**2!=M:\n                d.append(M//i)\n        i=i+1\n    d.sort()\n    return d\n\nmod=10**9+7\nN,K=list(map(int,input().split()))\ndiv=divisors(N)\n\nres=[0 for i in range(len(div))]\nans=0\nif N%2==0:\n    for i in range(len(div)):\n        d=div[i]\n        g=gcd(2*d,N)\n        res[i]+=pow(K,g//2,mod)\n        res[i]%=mod\n        ans+=d*res[i]\n        ans%=mod\n        for j in range(i+1,len(div)):\n            if div[j]%d==0:\n                res[j]-=res[i]\n                res[j]%=mod\n\n    print((ans%mod))\nelse:\n    for i in range(len(div)):\n        d=div[i]\n        g=gcd(2*d,N)\n        res[i]+=pow(K,(g+1)//2,mod)\n        res[i]%=mod\n        ans+=d*res[i]\n        ans%=mod\n        for j in range(i+1,len(div)):\n            if div[j]%d==0:\n                res[j]-=res[i]\n                res[j]%=mod\n\n    print((ans%mod))\n", "import sys\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\n\nN,K = MI()\nmod = 10**9+7\n\ndef divisor(n):  # n\u306e\u7d04\u6570\u306e\u30ea\u30b9\u30c8\n    res = []\n    for i in range(1,int(n**.5)+1):\n        if n % i == 0:\n            res.append(i)\n            if i != n//i:\n                res.append(n//i)\n    return res\n\nA = divisor(N)\n\nd = {}  # d[i] = i\u306e\u7d04\u6570\u306e\u30ea\u30b9\u30c8(i\u306fN\u306e\u7d04\u6570)\nfor a in A:\n    d[a] = divisor(a)\n\nprime = []  # N\u306e\u7d20\u56e0\u6570\u306e\u30ea\u30b9\u30c8\nfor i in range(2,int(N**.5)+1):\n    if N % i == 0:\n        prime.append(i)\n        while N % i == 0:\n            N //= i\nif N != 1:\n    prime.append(N)\n\nmu = {}  # mu[i] = \u03bc(i) (i\u306fN\u306e\u7d04\u6570)\nfor a in A:\n    b = a\n    r = 1\n    for p in prime:\n        if b % p == 0:\n            r *= -1\n            if b//p % p == 0:\n                r = 0\n                break\n    mu[a] = r\n\n\nans = 0\nfor a in A:\n    for b in d[a]:\n        if a % 2 == 0:\n            ans += mu[a//b]*pow(K,(b+1)//2,mod)*(a//2)\n            ans %= mod\n        else:\n            ans += mu[a//b]*pow(K,(b+1)//2,mod)*a\n            ans %= mod\n\nprint(ans)"]