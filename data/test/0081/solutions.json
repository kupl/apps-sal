["from math import gcd\na, b = list(map(int, input().split()))\nif b < a:\n    a, b = b, a\nif a == b:\n    print(0)\n    return\nc = b - a\ni = 1\nans = a * b // gcd(a, b)\n\ndef get(x):\n    A = (a + x - 1) // x * x\n    B = A - a + b\n    return A * B // gcd(A, B), A\n\nr = 0\nwhile i * i <= c:\n    if c % i == 0:\n        A, AA = get(i)\n        B, BB = get(c // i)\n        if A < ans:\n            ans = A\n            r = AA - a\n        if B < ans:\n            ans = B\n            r = BB - a\n        if A == ans:\n            r = min(r, AA - a)\n        if B == ans:\n            r = min(r, BB - a)\n    i += 1\nprint(r)\n", "a, b = list(map(int,input().split()))\ndef gcd(x,y):\n\tif x == 0:\n\t\treturn y\n\tif y == 0:\n\t\treturn x\n\tif y > x:\n\t\ty,x = x,y\n\treturn gcd(x%y, y)\nif a > b:\n\ta, b = b, a\nk = b - a\ndzielniki = []\ni = 1\nwhile i ** 2 <= k:\n\tif k % i == 0:\n\t\tdzielniki.append(i)\n\t\tdzielniki.append(k // i)\n\ti+= 1\ngcdd = a * b / gcd(a,b)\nwynik = 0\n#print(dzielniki)\nfor d in dzielniki:\n\taa = a - (a % d) + d\n\tbb = b - (b % d) + d\n\t#print(aa,bb)\n\tif aa * bb // gcd(aa,bb) <= gcdd:\n\t\tif aa * bb // gcd(aa,bb) == gcdd:\n\t\t\twynik = min(d-(a%d),wynik)\n\t\telse:\n\t\t\tgcdd = aa * bb // gcd(aa,bb)\n\t\t\twynik = d-(a%d)\nprint(wynik)\n", "from math import gcd\na, b = map(int, input().split())\nif a > b:\n\ta, b = b, a\ndivs = []\ni = 1\nwhile i*i <= b-a:\n\tif (b-a)%i == 0:\n\t\tdivs.append(i)\n\t\tif i*i != b-a:\n\t\t\tdivs.append((b-a)//i)\n\ti += 1\nbest = (a*b//gcd(a, b), 0)\nfor d in divs:\n\trest = a%d\n\tif rest == 0:\n\t\trest = d\n\tths = d - rest\n\tif ths < 0:\n\t\tcontinue\n\tcand = ((a+ths)*(b+ths)//gcd(a+ths, b-a), ths)\n\t# print(d, ths, cand)\n\tif cand[0] < best[0]:\n\t\tbest = cand\n\telif cand[0] == best[0] and cand[1] < best[1]:\n\t\tbest = cand\nprint(best[1])", "import sys\ninput = sys.stdin.readline\n\na,b=list(map(int,input().split()))\n\nif a==b:\n    print(0)\n    return\n\nif a>b:\n    a,b=b,a\n\nx=b-a\n\nimport math\nxr=math.ceil(math.sqrt(x))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n    \ndef lcm(x, y):\n    return (x * y) // gcd(x, y)\n\n\nLIST=[]\nfor i in range(1,xr+1):\n    if x%i==0:\n        LIST.append(i)\n        LIST.append(x//i)\n\nANS=[]\n\nfor l in LIST:\n    y=math.ceil(a/l)*l-a\n\n    ANS.append([lcm(a+y,b+y),y])\n\n    \nprint(min(ANS,key=lambda x:x[0])[1])\n\n", "a, b = list(map(int, input().split()))\ndef gcd(a,b):\n    if b == 0:\n        return a\n    return gcd(b,a%b)\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n    return divisors\n\n(a, b) = (b, a) if a > b else (a, b)\nc = b - a\nif c == 0:\n    print(0)\n    return\npc = make_divisors(c)\nctr = a*b//(gcd(a, b))\nans = 0\nfor p in pc:\n    ak = -(-a//p)*p\n    k = ak - a\n    bk = -(-b//p)*p\n    lc = ak*bk//gcd(ak, bk)\n    if ctr > lc:\n        ctr = lc\n        ans = k\nprint(ans)\n", "import math\na = list(map(int, input().split()))\na.sort()\ndiff = a[1] - a[0]\n\nyakusuu = []\nfor i in range(1, int(diff**(1/2))+1):\n    if diff % i == 0:\n        yakusuu.append(i)\n        yakusuu.append(diff//i)\n\nyakusuu.sort()\nans = [[a[0]*a[1], 0]]\n\nfor i in yakusuu:\n    x = a[0]\n    y = a[1]\n    k = 0\n    if x % i != 0:\n        k = i - x % i\n\n    x += k\n    y += k\n    anstemp = (x*y//math.gcd(x, y))\n    ans.append([anstemp, k])\n\nans.sort()\nprint(ans[0][1])\n", "a, b = list(map(int, input().split()))\nif a == b: print(0)\nelse:\n    a, b = max(a, b), min(a, b)\n    x = a-b\n    if a%x == 0 and b%x == 0: print(0)\n    else:\n        if a < 2*b: print(x - b%x)\n        else:\n            lis = [i for i in range(1, int(x**0.5)+1) if x%i == 0]\n            for i in lis[::-1]:\n                lis.append(x//i)\n            import bisect\n            y = bisect.bisect(lis, x//b)\n            print(x//lis[y-1]-b)\n# b < a\n            \n\n", "a, b = list(map(int, input().split()))\na, b = min(a, b), max(a, b)\nif b % a == 0:\n    print(0)\n    return\nx = b - a\ndels = set()\nfor i in range(1, int(x ** 0.5) + 1):\n    if x % i == 0:\n        dels.add(i)\n        dels.add(x // i)\ndels = list(dels)\nj = 10 ** 20\nfor i in dels:\n    if i >= a:\n        j = min(j, i - a)\nprint(min((x % a - a) % x, j))\n", "from math import gcd\n\na, b = list(map(int, input().split()))\nf = abs(a - b)\nd = []\ni = 1\nwhile i * i <= f:\n    if f % i == 0:\n        d.append(i)\n        d.append(f // i)\n    i += 1\n\nd = list(set(d))\nd.sort()\n\ndef f(i):\n    return (a + i) * (b + i) // gcd(a + i, b + i)\n\nx = float('inf')\ny = 0\nfor i in d:\n    k = (i - a % i) % i\n    z = f(k)\n    if z < x:\n        x = z\n        y = k\n\nprint(y)\n\n", "a, b = input().split()\na, b = int(a), int(b)\na, b = min(a, b), max(a, b)\n\ndef eu(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return eu(a%b, b)\n    return eu(a, b%a)\n\nopt = b - a\nfactor = []\ni = 1\nwhile i**2 < opt+1:\n    if opt % i == 0:\n        factor.append(i)\n        factor.append(int(opt/i))\n    i+=1\n\ntarget = a * b / eu(a, b)\ndrop = 0\n\nfor i in factor:\n    firstupd = a - (a % i) + i\n    secondupd = b - (b % i) + i\n    dres = firstupd * int(secondupd/eu(firstupd,secondupd))\n    if dres <= target:\n        if dres == target:\n            drop = min(i-(a%i),drop)\n        else:\n            target = dres\n            drop = i-(a%i)\nprint(drop)", "a, b = sorted(list(map(int, input().split())))\nif a == b:\n    print(0)\nelif a > (b-a):\n    if a % (b-a) == 0:\n        print(0)\n    else:\n        print((b-a)-(a % (b-a)))\nelse:\n    if (b-a) % a == 0:\n        print(0)\n    else:\n        ans = float('inf')\n        for q in range(1, int((b-a)**(1/2))+2):\n            if (b-a) % q == 0:\n                if (b-a)//q >= a:\n                    ans = min(ans, (b-a)//q)\n                if q >= a:\n                    ans = min(ans, q)\n        print(ans-a)\n", "def divisor(n):\n    n2 = int(n ** 0.5 + 1)\n    ret = set()\n    for i in range(1, n2 + 1):\n        if n % i == 0:\n            ret.add(i)\n            ret.add(n // i)\n    ret = list(ret)\n    ret.sort()\n    return ret\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a // gcd(a, b) * b\n\ndef solve():\n    inf = 1 << 60\n    a, b = list(map(int,input().split()))\n    if a > b:\n        a, b = b, a\n    if a == b:\n        return 0\n    ma = min(a, b)\n    D = divisor(b - a)\n    best_lcm = inf\n    best_k = 0\n    for d in D:\n        r1 = a % d\n        r2 = b % d\n        if r1 == r2:\n            k = 0\n            if r1 != 0:\n                k = d - r1\n            lcm1 = lcm(a + k, b + k)\n            if best_lcm > lcm1:\n                best_lcm = lcm1\n                best_k = k\n            elif best_lcm == lcm1:\n                best_k = min(best_k, k)\n    return best_k\n\nprint(solve())\n", "\n# //DEEPANSHU SAXENA(saxenad765)\n# #include <bits/stdc++.h>\n# #define ll long long\n# #define array(x,n) (x,x+n)\n# #define vector(v) (v.begin(),v.end())\n# #define DEBUG(x) cout << '>' << #x << ':' << x << endl;\n# #define VECTOR(v) cout << '>' << #v << ':' ; vector_out(v);\n# #define fast ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);\n# #define ip(x) cin>>x\n# #define op(x) cout<<x<<endl\n# #define ops(x) cout<<x<<\" \"\n# #define odd(x) (x&1)\n# #define even(x) (!x&1)\n# #define fbei(i,x,y,z) for(ll i=x;i<=y;i+=z)\n# #define fbe(i,x,y) for(ll i=x;i<=y;i++)\n# #define f(i,n) for(ll i=0;i<n;i++)\n# #define pb push_back\n# #define mp(x,y) make_pair(x,y)\n# #define GCD(x,y) __gcd(x,y)\n# using namespace std;\n# //using codechef ide;\n# //Deepanshu Saxena\n# inline void filehandling()\n# {\n# \t#ifndef ONLINE_JUDGE\n# \tfreopen(\"input.txt\", \"r\", stdin);\n# \tfreopen(\"output.txt\", \"w\", stdout);\n# \t#endif\n# }\n# vector<ll> vector_in(ll n)\n# {\n# \tvector<ll> v(n);\n# \tfor(ll i=0;i<n;i++)\n# \tcin>>v[i];\n# \treturn v;\n# }\n# void vector_out(vector<ll> v)\n# {\n# \tfor(ll i=0;i<v.size();i++)\n# \tcout<<v[i]<<\" \";\n# \tcout<<endl;\n# }\n# ll vector_sum(vector<ll> v)\n# {\n# \tll sum;\n# \tfor(ll i=0;i<v.size();i++)\n# \tsum+=v[i];\n# \treturn sum;\n# }\n# int main()\n# {\n# \tfast\n# \tfilehandling();\na, b = list(map(int,input().split()))\ndef gcd(arg1,arg2):\n\tif arg1 == 0:\n\t\treturn arg2\n\tif arg2 == 0:\n\t\treturn arg1\n\tif arg2 > arg1:\n\t\targ2,arg1 = arg1,arg2\n\treturn gcd(arg1%arg2, arg2)\nif a > b:\n\ta, b = b, a\nk = b - a\narray = []\ni = 1\nwhile i ** 2 <= k:\n\tif k % i == 0:\n\t\tarray.append(i)\n\t\tarray.append(k // i)\n\ti+= 1\ngcdis = a * b / gcd(a,b)\nz = 0\nfor d in array:\n\tz1 = a - (a % d) + d\n\tz2 = b - (b % d) + d\n\tif z1 * z2 // gcd(z1,z2) <= gcdis:\n\t\tif z1 * z2 // gcd(z1,z2) == gcdis:\n\t\t\tz = min(d-(a%d),z)\n\t\telse:\n\t\t\tgcdis = z1 * z2 // gcd(z1,z2)\n\t\t\tz = d-(a%d)\nprint(z)\n# }\n\n", "a, b = list(map(int, input().split()))\na, b = min(a, b), max(a, b)\ngap = b - a\narr = []\ni = 1\nwhile i * i < gap:\n    if gap % i == 0:\n        arr.append(i)\n        arr.append(gap // i)\n    i += 1\nif i * i == gap:\n    arr.append(i)\narr.sort()\nanswer = 0\nvalue = 10 ** 20\nfor i in arr:\n    plus = 0\n    if a % i:\n        plus = i - (a % i)\n    ta, tb = a + plus, b + plus\n    mod = ta % tb\n    while mod:\n        ta = tb\n        tb = mod\n        mod = ta % tb\n    temp = ((a + plus) * (b + plus)) // tb\n    if temp < value:\n        value = temp\n        answer = plus\n    if temp == value:\n        answer = min(answer, plus)\nprint(answer)\n", "\n\n\n\n\nare, bre = list(map(int,input().split()))\n\n\n\n\n\n\n\ndef plottt(xre,yre):\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tif (xre == 0):\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\treturn yre\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tif (yre == 0):\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\treturn xre\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tif (yre > xre):\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tyre,xre = xre,yre\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\treturn plottt(xre%yre, yre)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif (are > bre):\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tare, bre = bre, are\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nkre = bre - are\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplkiyer = []\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nire = 1\n\n\n\n\n\n\n\nwhile( ire**2<=kre):\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tif( kre % ire == 0):\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tplkiyer.append(ire)\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tplkiyer.append(kre // ire)\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tire+= 1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplotttd = are*bre / plottt(are,bre)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nresult = 0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfor dre in plkiyer:\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\taare = are - (are % dre) + dre\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tbbre = bre - (bre % dre) + dre\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\tif (aare*bbre // plottt(aare,bbre) <= plotttd):\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tif( aare*bbre // plottt(aare,bbre) == plotttd):\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tresult = min(dre-(are%dre),result)\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\telse:\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tplotttd = aare*bbre // plottt(aare,bbre)\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tresult = dre - (are%dre)\n\n\n\n\n\n\n\nprint(result)", "from math import *\ndef lcm(a, b):\n    return a * b // gcd(a, b)\na, b = list(map(int, input().split()))\n\na, b = min(a, b), max(a, b)\n\ndiff = b - a\n\n\n\n\n\nif(b % a == 0):\n    print(0)\n\nelse:\n    divs = set()\n    for i in range(1, int(diff ** (1/2)) + 1):\n        if diff % i == 0:\n            divs.add(i)\n            divs.add(diff // i)\n    curLCM = None\n    curK = None\n    for can in divs:\n        if b % can == 0:\n            tLCM = lcm(b, a)\n            tk = 0\n        else:\n            x = b // can\n            x = (x + 1) * can\n            tk = x - b\n            tLCM = lcm(b + tk, a + tk)\n\n        if curK == None:\n            curK, curLCM = tk, tLCM\n        else:\n            if curLCM > tLCM:\n                curK, curLCM = tk, tLCM\n            elif curLCM == tLCM:\n                curK = min(tk, curK)\n    \n    print(curK)\n            \n        \n        \n", "import math\ndef divisors(n):\n    div = []\n    d = 1\n    while(d**2<=n):\n        if(not n%d):\n            div.append(d)\n            if(d**2!=n):\n                div.append(n//d)\n        d+=1\n    return div\n\ndef lcm(x, y):\n   \"\"\"This function takes two\n   integers and returns the L.C.M.\"\"\"\n   lcm = (x*y)//math.gcd(x,y)\n   return lcm\n\ndef C():\n    a , b = list(map(int , input().split()))\n    a , b = min(a,b) , max(a,b)\n    if(not b%a):\n        print(0)\n        return\n    divs = divisors(b-a)\n    M = b*a\n    k = 0\n    for d in divs:\n        aux_k = d*math.ceil(b/d)-b\n        if(lcm(a+aux_k,b+aux_k)<M):\n            M = lcm(a+aux_k,b+aux_k)\n            k = aux_k\n    print(k)\n\n\nC()\n", "from math import gcd\nlcm = lambda x, y: (x * y) // gcd(x, y)\na, b = map(int, input().split())\nc = abs(a - b)\nf = 1\nres = [lcm(a, b), 0]\nwhile f * f <= c:\n    if c % f == 0: \n        k = min((-a) % f, (-b) % f)\n        ans = lcm(a + k, b + k)\n        if res[0] > ans: res = [ans, k]\n        elif res[0] == ans: res[1] = min(res[1], k)\n        \n        k = min((-a) % (c // f), (-b) % (c // f))    \n        ans = lcm(a + k, b + k)\n        if res[0] > ans: res = [ans, k]\n        elif res[0] == ans: res[1] = min(res[1], k)\n    f += 1\nprint(res[1])", "import math as m\n\na, b = map(int, input().split())\nif a > b:\n\ta, b = b, a\nx = b - a\nans = int(5e18)\noutput = 0\n\nG = 1\nwhile G*G <= x:\n\tif x % G == 0:\n\t\tg = G\n\t\tk = (g - (a%g))%g\n\t\tres = (a + k) * (b + k) // m.gcd(a + k, b + k)\n\t\tif(res < ans):\n\t\t\tans = res\n\t\t\toutput = k\n\t\telif res == ans:\n\t\t\toutput = min(output, k)\n\t\tg = x // G\n\t\tk = (g - (a%g))%g\n\t\tres = (a + k) * (b + k) // m.gcd(a + k, b + k)\n\t\tif(res < ans):\n\t\t\tans = res\n\t\t\toutput = k\n\t\telif res == ans:\n\t\t\toutput = min(output, k)\n\tG += 1\n\nprint(output)", "def mp():\n    return map(int, input().split())\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\ndef lcm(a, b):\n    return a * b // gcd(a, b)\n\na, b = mp()\na, b = min(a, b), max(a, b)\n\nx = []\nw = b - a\ndl = 1\nwhile dl ** 2 <= w:\n    if w % dl == 0:\n        x.append(dl)\n        x.append(w // dl)\n    dl += 1\n\nkk = 0\nm = 10 ** 20\nfor d in x:\n    r = (a + d - 1) // d\n    k = r * d - a    \n    if lcm(a + k, b + k) < m:\n        m = lcm(a + k, b + k)\n        kk = k\nprint(kk)", "a,b=tuple(map(int,input().strip().split()))\nif(a==b):\n    print(0)\nelse:\n    if(a>b):\n        c=a-b\n    else:\n        c=b-a\n    import math\n    i=math.ceil(math.sqrt(c))\n    l=[]\n    for k in range(1,i):\n        if(c%k==0):\n            l.append(k)\n            l.append((c//k))\n    if(i>0):\n      if(c%i==0):\n        l.append(i)\n\n    mina=10000000000000000000000\n    for mj in l:\n       tt=(-a)%mj\n       x=(a+tt)*(b+tt)//mj\n       if(x<mina):\n           mina=x\n           tut=tt\n    print(tut)", "from math import ceil\n\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\na, b = [int(item) for item in input().split()]\n\nmn = float(\"inf\")\nans = -1\nd = abs(b - a)\nif d == 0:\n    print(0)\nelse:\n    for g in range(1, int(d ** .5) + 1):\n        if d % g != 0:\n            continue\n        k = min(ceil(b / g) * g - b, ceil(a / g) * g - a)\n        if (a + k) % g == 0 and (b + k) % g == 0:\n            if (a + k) * (b + k) // g < mn:\n                mn = (a + k) * (b + k) // g\n                ans = k\n\n        g = d // g\n        k = min(ceil(b / g) * g - b, ceil(a / g) * g - a)\n        if (a + k) % g == 0 and (b + k) % g == 0:\n            if (a + k) * (b + k) // g < mn:\n                mn = (a + k) * (b + k) // g\n                ans = k\n\n    print(ans)\n", "A, B = map(int, input().split())\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\ndef lcm(a, b):\n    return a*b//gcd(a,b)\ndef primeFactor(N):\n    i = 2\n    ret = {}\n    n = N\n    if n < 0:\n        ret[-1] = 1\n        n = -n\n    if n == 0:\n        ret[0] = 1\n    d = 2\n    sq = int(n ** (1/2))\n    while i <= sq:\n        k = 0\n        while n % i == 0:\n            n //= i\n            k += 1\n            ret[i] = k\n        if k > 0:\n            sq = int(n**(1/2))\n        if i == 2:\n            i = 3\n        elif i == 3:\n            i = 5\n        elif d == 2:\n            i += 2\n            d = 4\n        else:\n            i += 4\n            d = 2\n        \n    if n > 1:\n        ret[n] = 1\n    return ret\n\ndef divisors(N):\n    pf = primeFactor(N)\n    ret = [1]\n    for p in pf:\n        ret_prev = ret\n        ret = []\n        for i in range(pf[p]+1):\n            for r in ret_prev:\n                ret.append(r * (p ** i))\n    return sorted(ret)\n\nif A == B:\n    print(0)\nelse:\n    mi = 10**100\n    ans = -1\n    D = divisors(abs(B-A))\n    for d in D:\n        k = -A%d\n        L = lcm(A+k, B+k)\n        if mi > L or (mi == L and ans > k):\n            mi = L\n            ans = k\n    print(ans)", "from math import sqrt,ceil\nfrom collections import defaultdict\n\nlim = 10**5\n\ndef sieve(N):\n    \"\"\"Dumb sieve of Eratosthemes, O(N*log(log(N)))\"\"\"\n    b = [True]*(N+1)\n    b[0] = False\n    b[1] = False\n\n    lim = ceil(sqrt(N))\n    i = 2\n    while i <= lim:\n        if b[i]:\n            for n in range(i**2,N+1,i):\n                b[n] = False\n        i+=1\n    \n    return [i for i,b in enumerate(b) if b]\n\nP = sieve(lim)\n\ndef factor(n):\n    \"\"\"Given prime list, factorize n. Format as dict of factors with counts.\"\"\"\n    if n in P: return {n:1}\n\n    F = []\n    for p in P:\n        while n%p == 0:\n            n//=p\n            F.append(p)\n        if n in P:\n            F.append(n)\n            break\n    else:\n        if n != 1:\n            F.append(n)\n\n    C = {}\n    for f in F:\n        if f not in C:\n            C[f] = 0\n        C[f] += 1\n\n    return C\n\ndef divisors(n):\n    \"\"\"Generate divisors.\"\"\"\n    return divisors_from_factors(factor(n))\n\ndef divisors_from_factors(F):\n    \"\"\"Given factors, generate divisors.\"\"\"\n    D = {1}\n    for f in F:\n        D |= {f**p*d for d in D for p in range(1,F[f]+1)}\n    return D\n\n###\n\nfrom math import gcd\n\nA,B = list(map(int,input().split()))\n\nA,B = sorted((A,B))\n\ndef lcm(a,b):\n    return a*b // gcd(a,b)\n\n#mn = 10**100\n#for k in range(0,1000000):\n#    a = A+k\n#    b = B+k\n#    l = lcm(a,b)\n#    \n#    if l < mn:\n#        mn = l\n#        best = k\n#print(best,mn)\n\nif A == B:\n    print(0)\nelse:\n    mn = 10**100\n    D = divisors(B-A)\n    for t in sorted(D):\n        # A+X%T == 0\n        x = -A%t\n        l = lcm(A+x,B+x)\n        if l < mn:\n            mn = l\n            best = x\n\n    print(best)\n\n\n\n#A,B = sorted((A,B))\n#d = B-A\n#if A%d == 0:\n#    print(0)\n#else:\n#    r = (A//d+1)*d - A\n#    a = A+r\n#    b = B+r\n#    print(r, a*b // gcd(a,b))\n\n\n", "a,b=list(map(int,input().split()))\n(a,b)=min(a,b),max(a,b)\nif b<2*a:\n    if a==b:\n        print(0)\n        return\n    print((-a)%(b-a))\n    return\ns=[1]\nq=b-a\nfor i in range(2,int((b-a)**(1/2)+2)):\n    while q%i==0:\n        t=[j*i for j in s]\n        for aa in t:\n            s.append(aa)\n        s=list(set(s))\n        q=q//i\nif q!=1:\n    t=[j*q for j in s]\n    for aa in t:\n        s.append(aa)\n    s=list(set(s))\ns.sort()\nfor i in s:\n    if i>=a:\n        print(i-a)\n        return\n        \n        \n\n\n\n    \n\n\n    \n            \n    \n"]