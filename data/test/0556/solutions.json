["l, r, n = map(int, input().split())\na = n\nn = 1\ncnt = 0\nwhile n <= r:\n    if n >= l:\n        cnt += 1\n        print(n, end=' ')\n    n *= a\nif cnt == 0:\n    print(-1)", "l, r, k = map(int, input().split())\ncurr = 1\ncnt = 0\nwhile (curr <= r):\n    if (curr >= l):\n        print(curr, end = ' ')\n        cnt += 1\n    curr *= k\nif (cnt == 0):\n    print(-1)", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        l, r, k = list(map(int, input().split()))\n        x = 1\n        ls = [ ]\n        while x <= r:\n            if x >= l:\n                ls.append(x)\n            x *= k\n        if ls:\n            print(' '.join(map(str, ls)))\n        else:\n            print(-1)\n\nexcept EOFError:\n    pass\n", "#!/bin/python\nimport collections\nimport random\nimport sys\ntry:\n    from tqdm import tqdm\nexcept:\n    def tqdm(iterable):\n        return iterable\n\n\n__taskname = ''\nif __taskname:\n    sys.stdin = open(__taskname + '.in')\n    sys.stdout = open(__taskname + '.out', 'w')\n\nl, r, k = list(map(int, input().split()))\na, x, i = [], 1, 0\nwhile x <= r:\n    if x >= l:\n        a.append(x)\n    x *= k\n    i += 1\nprint(*(a if a else [-1]))\n", "l, r, k = map(int, input().split())\n\ns = 1\n\nwhile s < l:\n\ts *= k\n\nans = []\nwhile s <= r:\n\tans.append(s)\n\ts *= k\n\nif ans:\n\tprint(' '.join(str(v) for v in ans))\nelse:\n\tprint(-1)", "l, r, k = [int(x) for x in input().split()]\nans = []\na = 1\nwhile a <= r:\n    if a >= l:\n        ans.append(a)\n    a *= k\n\nif ans:\n    for num in ans:\n        print(num, end = ' ')\nelse:\n    print(-1)\n", "l, r, k = list(map(int, input().split()))\n\nn = 1\nnumbers = []\n\nwhile n <= r:\n    if n >= l:\n        numbers.append(n)\n\n    n *= k\n\nif len(numbers) > 0:\n    print(' '.join(map(str, numbers)))\nelse:\n    print('-1')\n", "read = lambda: map(int, input().split())\nl, r, k = read()\ncur = 1\nflag = 0\nwhile cur <= r:\n    if cur >= l:\n        flag = 1\n        print(cur, end = ' ')\n    cur *= k\nif flag == 0: print(-1)\n    \n", "l, r, k = map(int, input().split())\n\ncurk = 1\n\nwhile curk < l:\n    curk *= k\n\nans = 0\n\nwhile curk <= r:\n    ans += 1\n    print(curk, end=' ')\n    curk *= k\n\nif not ans:\n    print(-1)\nelse:\n    print()\n", "l, r, k = map(int, input().split())\n_k = int(k)\nk = 1\nans = 0\nok = 0\nwhile(k <= r) :\n    if(k >= l) : \n        print(k, end = ' ')\n        ok = 1\n    k *= _k\nif(ok == 0) :\n    print(-1)", "l, r, k = map(int, input().split())\nans = []\nnowa = 1;\nwhile (nowa <= r):\n    if (nowa >= l):\n        ans.append(nowa)\n    nowa *= k\nif (len(ans) == 0):\n    print(-1)\nelse:\n    print(*ans)", "l, r, k = map(int, input().split())\ni, f = 1, False\nwhile i <= r:\n    if i >= l:\n        f = True\n        print(i, end=' ')\n    i *= k\nif not f:\n    print('-1')", "l, r, k = list(map(int, input().split()))\n\n\nt = 1\nrez = []\nfor i in range(80):\n\tif l <= t <= r:\n\t\trez.append(t)\n\tt *= k\nif rez:\n\tprint(*rez)\nelse:\n\tprint(-1)\n", "l, r, k = list(map(int, input().split()))\nn = 1\nans = []\nwhile n <= r:\n    if l <= n <= r:\n        ans.append(n)\n    n *= k\nif ans:\n    print(*ans)\nelse:\n    print(-1)\n", "l, r, k = list(map(int, input().split()))\na = list()\nx = 1\nwhile x <= r:\n\tif l <= x <= r:\n\t\ta.append(x)\n\tx *= k\nif len(a) == 0:\n\tprint(-1)\nelse:\n\tprint(' '.join(map(str, a)))\n", "l, r, k = map(int, input().split())\nflag = 1\nn = 1\nwhile (n <= r) :\n    if (n >= l) :\n        print(n, end = \" \")\n        flag = 0\n    n *= k\nif (flag == 1) :\n    print(-1)", "l, r, k = map(int, input().split())\ncur = 1\nwhile cur < l:\n    cur *= k\nf = False\nwhile cur <= r:\n    f = True\n    print(cur,end=' ')\n    cur *= k\nif not f:\n    print(-1)\n", "l, r, n = [int(x) for x in input().split()]\n\nf = 1\ncount = 0\nwhile f <= r:\n    if f >= l:\n        print(f, end=\" \")\n        count += 1\n\n    f *= n\n\nif count == 0:\n    print(-1)\n", "a,b,c=map(int,input().split())\n\nval=1\nflag=0\n\nwhile val<=b:\n    if val>=a:\n        flag=1\n        print(val,end=\" \")\n    val=val*c\n\nif flag==0:\n    print(-1)\n", "l, r, k = map(int, input().split())\nst = 1\nfl = False\nwhile (st <= r):\n    if (st >= l and st <= r):\n        print(st, end = \" \")\n        fl = True\n        st *= k\n    else:\n        st *= k\nif not fl:\n    print(-1)\n", "l, r, k = list(map(int, input().split()))\nx = 1\nwhile x < l:\n    x *= k\na = []\nwhile x <= r:\n    a.append(x)\n    x *= k\n\nprint(-1 if not a else ' '.join(list(map(str, a))))\n", "l, r, k = [int(x) for x in input().split()]\n\nx = 1\n\ncorrect = False\nwhile x <= r:\n    if x >= l:\n        print(x, end=\" \")\n        correct = True\n    x *= k\n\nif not correct:\n    print(\"-1\")\nelse:\n    print(\"\")\n", "l, r, k = map(int, input().split())\ncur = 1\nflag = True\nwhile cur <= r:\n    if cur >= l and cur <= r:\n        print(cur, end=\" \")\n        flag = False\n    cur *= k\nif flag:\n    print(-1)", "l,r,k=[int(x) for x in input().split()]\nans=False\nx=1\nwhile x<=r:\n    if l<=x:\n        print(x, end=' ')\n        ans=True\n    x*=k\nif not ans:\n    print(-1)\n", "#In the name of Allah\n\nfrom sys import stdin, stdout\ninput = stdin.readline\n\nl, r, k = list(map(int, input().split()))\nres = []\nn = 1\nwhile n <= r:\n        if n >= l:\n                res.append(str(n))\n                \n        n *= k\nif len(res):\n        stdout.write(\" \".join(res))\nelse:\n        stdout.write(\"-1\"\n                     )\n"]