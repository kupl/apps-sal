["k = int(input())\nn = input()\ndigit = [0]*10\nfor c in n:\n    digit[int(c)]+= 1\ndsum = sum(i*digit[i] for i in range(10))\n\ni = 0\nchange = 0\nwhile dsum < k:\n    if digit[i] == 0:\n        i+= 1\n        continue\n    digit[i]-= 1\n    digit[9]+= 1\n    change+= 1\n    dsum+= 9-i\nprint(change)", "k = int(input());\nn = int(input());\ns = str(n);\n\narr = [int(x) for x in s];\narr.sort();\nsu = 0;\nfor i in range(len(arr)):\n    su += arr[i];\ntf = 0;\nfor i in range(len(arr)):\n    if su >= k:\n        break;\n    else:\n        su += 9-arr[i];\n        tf += 1;\n\nprint(tf);\n", "from sys import stdin, stdout\n\nk = int(stdin.readline().rstrip())\nn = int(stdin.readline().rstrip())\n\nnList = list(map(int,list(str(n))))\n\nnList.sort()\ncurrentSum = sum(nList)\n\ni=0\nwhile currentSum<k:\n    currentSum+=(9-nList[i])\n    i+=1\n\nprint(i)\n", "\"\"\"\nCodeforces Round 427 Div 2 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.5.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    k, = read()\n    n = input()\n    s = [0]*10\n    for c in n:\n        s[ord(c)-48] += 1\n    k -= sum(i*s[i] for i in range(10))\n    ct = 0\n    for i in range(9):\n        if k <= 0: return ct\n        tm = min(s[i], (k+9-i-1)//(9-i))\n        ct += tm\n        k -= tm*(9-i)\n    return ct\n\n#################################################### HELPERS\n\ndef read(callback=int):\n    return list(map(callback, input().strip().split()))\n\ndef write(value, end=\"\\n\"):\n    if value is None: return\n    try:\n        if not isinstance(value, str):\n            value = \" \".join(map(str, value))\n    except:\n        pass\n    print(value, end=end)\n\nwrite(main())\n", "k,n=int(input()),input()\nn=list(map(int,sorted(list(n))))\ns=sum(n)-len(n)*int('0')\nif s>=k:\n\tprint(\"0\")\nelse:\n\tfor i in range(len(n)):\n\t\ts+=9-(n[i]-int('0'))\n\t\tif s>=k:\n\t\t\tprint(i+1)\n\t\t\tbreak", "k = int(input())\nn = input()\nl = []\ns = 0\nfor i in range(len(n)):\n    l.append(int(n[i]))\n    s += int(n[i])\nl.sort()\nif s >= k:\n    print(0)\nelse:\n    term = 0\n    while s < k:\n        s += (9-l[term])\n        term += 1\n    print(term)\n", "a = int(input())\ndigits = sorted(map(int, list(input())))\nb = sum(digits)\nn = 0\nwhile b < a:\n    b += 9 - digits[n]\n    n += 1\nprint(n)", "k = int(input())\nn = list(map(int, sorted(input())))\n\ns = sum(n)\nidx = 0\nres = 0\n\nwhile k > s:\n    s += 9 - n[idx]\n    res += 1\n    idx += 1\n\nprint(res)\n", "k=int(input())\ninp=input()\nn=[]\nfor val in inp:\n\tn.append(int(val)) \nn.sort()\nsumval=sum(n)\ncounter=0\nfor val in n:\n\tif(sumval<k):\n\t\tsumval+=9-val\n\t\tcounter+=1\n\telse:\n\t\tbreak\nprint(counter)", "from math import *\n\nk = int(input())\ns = input()\nk2 = min(k, sum(map(int, s)))\nl = list(map(int, sorted(s)))\n\ni = 0\nwhile k2 < k:\n\tk2 += 9 - l[i]\n\ti += 1\n\nprint(i)", "k = int(input())\na = sorted([int(i) for i in input()])\n\ns = sum(a)\nans = 0\n\nwhile s < k:\n    s += 9 - a[ans]\n    ans += 1\n\nprint(ans)\n", "k = int(input())\nn = list(map(int, list(input())))\na = [n.count(i) for i in range(10)]\ns = sum(n)\nans = 0\ni = 0\nwhile s < k:\n    while a[i] > 0 and s < k:\n        a[i] -= 1\n        a[9] += 1\n        s += 9 - i\n        ans += 1\n    i += 1\nprint(ans)", "k = int(input())\nnum = [int(i) for i in input()]\n\n\nnum.sort()\nq = k - sum(num)\nw = 0\nwhile q > 0:\n       q -= 9 - num[w]\n       w += 1\nprint(w)", "from sys import stdin, stdout\n\n\nk = int(stdin.readline().rstrip())\nn = stdin.readline().rstrip()\n\nn = sorted(n)\n\nck = 0\nfor c in n:\n    ck += ord(c) - ord('0')\n\nif ck >= k:\n    print(0)\nelse:\n    rez = 0\n    for c in n:\n        ck += ord('9') - ord(c)\n        rez += 1\n        if ck >= k:\n            print(rez)\n            break", "def main():\n    k = int(input())\n    s = list(input())\n    n = len(s)\n    d = [0] * 10\n    for i in range(n):\n        d[int(s[i])] += 1\n    a = 0\n    for i in range(10):\n        a += i * d[i]\n    if k <= a:\n        print(0)\n        return\n    i = 0\n    c = 0\n    while k > a:\n        if d[i] == 0:\n            i += 1\n            continue\n        a += 9 - i\n        d[i] -= 1\n        c += 1\n    print(c)\n\n\nmain()\n", "k = int(input())\nd = list(map(int, list(input())))\nd.sort()\nl = sum(d)\ni = 0\nwhile l < k:\n    l += 9 - d[i]\n    i += 1\nprint(i)\n\n\n\n", "k = int(input())\nn = sorted(map(int, input()))\ns = sum(n)\nans = 0\nnk = 0\nk = k - s\nwhile nk < k and ans < len(n):\n    nk += 9 - n[ans]\n    ans += 1\nprint(ans)", "k = int(input())\nn = input()\n\ndata = []\nfor c in n:\n    data.append(int(c))\ndata.sort()\n\nsum_digits = sum(data)\nif sum_digits >= k:\n    print(0)\nelse:\n    count = 0\n    for i in data:\n        sum_digits += (9 - i)\n        count += 1\n        if sum_digits >= k:\n            break\n    print(count)\n", "k = int(input())\nd = [0]*10\ns = input().strip()\nfor v in s:\n  d[int(v)] += 1\nres = 0\nfor i,v in enumerate(d):\n  k -= i*v\nif k < 0: k = 0  \nfor i,v in enumerate(d):\n  if k > (9-i)*v:\n    k -= (9-i)*v\n    res += v\n  else:\n    res += (k-1) // (9-i) + 1\n    break\nprint(res)    ", "def main():\n    k = int(input())\n    n = [int(i) for i in input()]\n    s = sum(n)\n    n.sort()\n    an = 0\n    sm = 0\n    if s >= k:\n        print(0)\n    else:\n        while sm < k - s:\n            sm += 9 - n[an]\n            an += 1\n        print(an)\n\nmain()", "k = int(input())\nn = sorted(map(int, list(input())))\ns = sum(n)\nc = 0\nif s < k:\n    for i in n:\n        s = s - i + 9\n        c += 1\n        if s >= k:\n            break\nprint(c)\n", "k = int(input())\nn = [int(i) for i in input()]\ns = sum(n)\nn.sort()\ni=0\nwhile i<len(n) and s<k:\n    s+=9-n[i]\n    i+=1 \nprint(i)\n", "from bisect import bisect_left, bisect_right\nfrom sys import stdin as fin\n# fin = open(\"cfr427b.in\", \"r\")\n\nk, n = int(fin.readline()), [int(sym) for sym in fin.readline().rstrip()]\n# print(tuple(int(sym) for sym in fin.readline().rstrip()))\n# print(tuple(int(sym) for sym in fin.readline().rstrip()))\ndsum = sum(n)\nn.sort()\ni = 0\nwhile dsum < k:\n    dsum += 9 - n[i]\n    i += 1\nprint(i)", "k = int(input())\nn = list(map(int, list(input().strip())))\nn.sort()\ns = sum(n)\nc = 0\ni = 0\nwhile s<k:\n\ts += 9 - n[i]\n\ti += 1\n\tc += 1\nprint(c)\n", "# your code goes here\nk = int(input())\nstarr = list(input())\nn = len(starr)\nsum = 0\nfor i in range(n):\n\tstarr[i] = int(starr[i])\n\tsum += starr[i]\n#print(starr)\nstarr.sort()\n#print(starr)\nctr = 0\nfor a in starr:\n\tif sum >= k:\n\t\tbreak\n\tsum -= a\n\tsum += 9\n\tctr += 1\nprint(int(ctr))"]