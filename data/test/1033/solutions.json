["n, k = list(map(int, input().split()))\n\n\ndef get(x):\n    if x <= k:\n        return x * (x + 1) // 2\n    res = k * x - k * (k - 1) // 2\n    sz = x - k - 1\n    if sz % 2 == 0:\n        cnt = sz // 2\n        res += (2 + sz) * cnt // 2\n    else:\n        cnt = sz // 2 + 1\n        res += (1 + sz) * cnt // 2\n    return res\n\n\nl = 0\nr = 10 ** 18\nwhile r - l > 1:\n    m = l + (r - l) // 2\n    if get(m) >= n:\n        r = m\n    else:\n        l = m\n\nprint(r)\n", "\ndef get(a):\n    if (a <= h):\n        return a * (a + 1) // 2;\n    tmp = a - h + 1;\n    re = h * (h - 1) // 2;\n    l = (tmp + 1) // 2;\n    r = tmp // 2;\n    re += l * (h - 1 + l + h) // 2;\n    re += r * (h - 1 + r + h) // 2;\n    return re;\n\nlo = 1\nhi = 1000000000000000001\nn, h = list(map(int, input().split()))\nwhile (lo < hi):\n    mi = (lo + hi) // 2;\n    if (get(mi) < n):\n        lo = mi + 1;\n    else:\n        hi = mi;\nprint(lo)\n", "def sum(a,b):\n\tif a>b:\n\t\treturn sum(b,a)\n\tn=b-a+1\n\treturn (a+b)*n//2\n\n[n,h]=[int(x) for x in input().split()]\nl=0\nr=n\nwhile l+1<r:\n\tm=(l+r)//2\n\tmx=0\n\tif m<h:\n\t\tmx=sum(1,m)\n\telse:\n\t\tif m%2==h%2:\n\t\t\thm=(h+m)//2\n\t\t\tmx=sum(h,hm)+sum(1,hm-1)\n\t\telse:\n\t\t\thm=(h+m)//2\n\t\t\tmx=sum(h,hm)+sum(1,hm)\n\tif mx>=n:\n\t\tr=m\n\telse:\n\t\tl=m\nprint(r)", "n, H = list(map(int, input().split()))\ntmp = ((H+1)*H)>>1\nif n < tmp:\n    l, r = 0, 1000000000000000000\n    while l < r:\n        mid = (l+r)>>1\n        tmp = ((mid+1)*mid)>>1\n        if n > tmp:\n            l = mid+1\n        else:\n            r = mid\n    print(r)\nelse:\n    l, r = H, 1000000000000000000\n    while l < r:\n        mid = (l+r)>>1\n        if (mid+H)&1:\n            T = (mid+H)>>1\n            tmp = (((T+H)*(T-H+1))>>1)+((T*(T+1))>>1)\n        else:\n            T = (mid+H)>>1\n            tmp = (((T+H)*(T-H+1))>>1)+((T*(T-1))>>1)\n        if n > tmp:\n            l = mid+1\n        else:\n            r = mid\n    print(r)\n", "n , h = list(map(int , input().split()))\nl = 1;r = 10 ** 10\nwhile(r - l > 1):\n    mid = ((l + r) >> 1)\n    if(mid <= h):\n        calc = (mid + 1) * mid\n        calc = (calc >> 1)\n        if(calc > n):\n            r = mid\n        else:\n            l = mid\n        continue\n    calc = (mid + 1) * mid\n    calc = (calc >> 1)\n    calc += ((mid + h - 1) * (mid - h )) // 2\n    if(calc > n):\n        r = mid\n    else:\n        l = mid\nans = l\nif(l > h):\n    ans += l - h \ncalc = (l + 1) * l;calc = (calc >> 1)\nif(l > h):calc += ((l + h - 1) * (l - h)) // 2\nn -= calc\nans += n // l\nn %= l\nif(n > 0):\n    ans += 1\nprint(ans)\n", "def calc(x, h):\n\tif x <= h:\n\t\treturn x * (x + 1) // 2\n\tp = (x - h + 1) // 2\n\treturn ((2 * h + p - 1) * p) // 2 + (x - p) * (x - p + 1) // 2\n\nn, h = map(int, input().split())\n\nok = 10000000000\nng = 0\nwhile ok - ng > 1:\n\tm = (ok + ng) // 2\n\tif calc(m, h) >= n:\n\t\tok = m\n\telse:\n\t\tng = m\nprint(ok)", "N, H = list(map(int, input().split()))\n\nok = N\nng = 0\n\nwhile ok - ng > 1:\n    mid = (ok + ng) // 2\n\n    if mid <= H:\n        sum = mid * (mid + 1) // 2\n        if sum < N:\n            ng = mid\n        else:\n            ok = mid\n    else:\n        sum = H * (H + 1) // 2\n        rest = mid - H\n        \n        sum += rest * H;\n\n        if rest % 2 == 1:\n            height = (rest - 1) // 2\n            add = height * (height + 1) // 2\n            sum += add * 2\n        else:\n            bottom = rest // 2\n            add = bottom * (bottom + 1) // 2\n            sum += add * 2\n            sum -= bottom\n            \n        if sum < N:\n            ng = mid\n        else:\n            ok = mid\n\nprint(ok)\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nN, H = mi()\ntar = N + H * (H - 1) // 2\nlo, hi = H, tar\nwhile lo < hi:\n    mid = (lo + hi + 1) // 2\n    if mid * mid <= tar:\n        lo = mid\n    else:\n        hi = mid - 1\n\nif lo * lo == tar:\n    ans = 2 * lo - H\nelif lo * lo > tar:\n    lo1, hi1 = 1, N\n    while lo1 < hi1:\n        mid1 = (lo1 + hi1 + 1) // 2\n        if mid1 * (mid1 + 1) // 2 <= N:\n            lo1 = mid1\n        else:\n            hi1 = mid1 - 1\n    ans = lo1\n    if lo1 * (lo1 + 1) // 2 < N:\n        ans += 1\nelse:\n    dif = tar - lo * lo\n    if dif <= lo:\n        ans = 2 * lo - H + 1\n    else:\n        ans = 2 * lo - H + 2\n        \nprint(ans)", "n, H = map(int, input().split())\ndef f(len, H):\n\tif len <= H: return len * (len + 1) // 2\n\tif (len - H) % 2 == 1:\n\t\tx = H + (len - H) // 2\n\t\tc = (len - H) // 2 + 1\n\t\treturn c * (H + x) // 2 + x * (x + 1) // 2\n\tx = H + (len - H) // 2\n\tc = (len - H) // 2 + 1\n\treturn c * (H + x) // 2 + x * (x - 1) // 2\nlo, hi = 1,1000000000000000000\nwhile lo < hi:\n\tmid = (lo + hi) // 2\n\t#print(\"%d, %d\" % (lo, hi))\n\tif n > f(mid, H): lo = mid + 1\n\telse: hi = mid\nprint(lo)", "n, h = map(int, input().split())\ndef fun(t, h):\n\tif t <= h: \n\t\treturn (t*t+t) // 2\n\tif (t - h) % 2 == 1:\n\t\tret = h + (t - h) // 2\n\t\tans = (t - h) // 2 + 1\n\t\treturn ans * (h + ret) // 2 + ret * (ret + 1) // 2\n\tret = h + (t - h) // 2\n\tans = (t - h) // 2 + 1\n\treturn ans * (h + ret) // 2 + ret * (ret - 1) // 2\n# binary search\nl = 1\nr = 1000000000000000000\nwhile l < r:\n\tm = (l + r) // 2\n\tif n > fun(m, h): \n\t\tl = m + 1\n\telse: \n\t\tr = m\nprint(l)", "T = input().split(' ')\nn = int(T[0])\nH = int(T[1])\na = 1\nb = n\ndef f(m):\n    tot = 42\n    if m <= H:\n        tot = (m * (m+1)) // 2\n    else:\n        tot = (H * (H+1)) // 2\n        if (m-H) % 2 == 1:\n            mx = H + (m - H) // 2\n            tot += 2 * ((mx * (mx+1)) // 2 - (H * (H-1)) // 2)\n            tot -= H\n        else:\n            mx = H + (m - H) // 2\n            tot += 2 * ((mx * (mx+1)) // 2 - (H * (H-1)) // 2)\n            tot -= H\n            tot -= mx\n    return tot >= n\nif n==1:\n    print(1)\nelse:\n    m = (a+b)//2\n    while b-a > 1:\n        if f(m):\n            b = m\n        else:\n            a = m\n        m = (a+b)//2\n    print(b)\n", "def sumi(a, b):\n    return (a+b) * (b-a+1) // 2\n\ndef main():\n    n, H = list(map(int, input().split()))\n    volh = (H+1)*H // 2\n    if n < volh:\n        low = 0\n        high = n+1\n        while high - low > 1:\n            mid = low + (high-low) // 2\n            vol = (mid+1)*mid//2\n            if vol >= n:\n                high = mid\n            else:\n                low = mid\n        print(high)\n        return\n    low = 0\n    high = n+1\n    while high - low > 1:\n        mid = low + (high-low)//2\n        twoi = mid - H + 2\n        if twoi%2 != 0:\n            peakh = H + (twoi-3)//2\n            vol = sumi(H, peakh) + sumi(1, peakh)\n        else:\n            peakh = H + (twoi-2)//2\n            vol = sumi(H, peakh) + sumi(1, peakh-1)\n        if vol >= n:\n            high = mid\n        else:\n            low = mid\n    print(high)\n\nmain()\n", "n,h = list(map(int, input().split()));\n\ndef g(d):\n    if (d < h):\n        return (d*(d+1))//2\n    d = d-h+1;\n    dd = d//2;\n    p = 2*((h-1)*dd + (dd*(dd+1))//2)\n    if (d%2 == 1):\n        p+= (h-1 + dd+1)\n    return ((h-1)*((h-1)+1))//2 + p;\n\n\n#for i in range(0,20):\n    #print (i, g(i))\n\na = 0\nb = 10**20\n\nwhile (a!=b):\n    #print(a,b);\n    c = (a+b)//2\n    if (n <= g(c)):\n        b = c\n    else:\n        a = c+1\n\nprint(a)\n\n", "def S (l):\n    return l * (l + 1) // 2\n\n\ndef f (l, h):\n    if l <= h:\n        return S(l)\n    s = S(h)\n    l -= h\n    s += l * h\n    s += S(l // 2) + S(l // 2 - (1 - l % 2))\n    return s\n\n\nn, H = list(map(int, input().split()))\n\nl = 0\nr = n + 1\n\nwhile r - l > 1:\n    md = (l + r) // 2\n    if f(md, H) >= n:\n        r = md\n    else:\n        l = md\n\nprint(r)\n", "n, h = input().split(' ')\nn = int(n)\nh = int(h)\n\nl = 1; r = 1000000000000000000;\nwhile l<r:\n\tk = (l+r)//2\n\tu = 0\n\tif k<=h:\n\t\tu = k*(k+1)//2\n\telse:\n\t\tu = h*(h+1)//2\n\t\tu += h*(k-h)\n\t\td = k-h\n\t\tif d%2==0:\n\t\t\tu += d*d//4\n\t\telse:\n\t\t\td //= 2\n\t\t\tu += d*(d+1)\n\tif u<n:\n\t\tl = k+1\n\telse:\n\t\tr = k\n\nprint(l)", "from math import ceil, sqrt\nn, H = map(int, input().split(' '))\n\nk = ceil(0.5*(sqrt(8*n+1)-1))\n\nwhile k*k+k >= 2*n:\n    k -= 1\n\nwhile k*k+k < 2*n:\n    k += 1\n\nif k <= H:\n    print(k)\n\nelse:\n    k = ceil(sqrt(2*H*H-2*H+4*n)-H)\n    if (k - H) % 2 == 1:\n        k += 1\n\n    a = (k-H)//2\n    while (H+a)*(H+a+1) + (H+a-1)*(H+a)-(H-1)*H >= 2*n:\n        k -= 2\n        a -= 1\n\n    while (H+a)*(H+a+1) + (H+a-1)*(H+a)-(H-1)*H < 2*n:\n        k += 2\n        a += 1\n\n    m = k\n\n    k = ceil(sqrt(2*H*H-2*H+4*n+1)-H-1)\n    if (k - H) % 2 == 0:\n        k += 1\n\n    a = (k-H-1)//2\n    while (H+a)*(H+a+1) + (H+a+1)*(H+a)-(H-1)*H >= 2*n:\n        k -= 2\n        a -= 1\n\n    while (H+a)*(H+a+1) + (H+a+1)*(H+a)-(H-1)*H < 2*n:\n        k += 2\n        a += 1\n\n    print(max(min(m,k), H+1))", "import math;\ndef getIntList():\n    return list(map(int, input().split()));\ndef getTransIntList(n):\n    first=getIntList();\n    m=len(first);\n    result=[[0]*n for _ in range(m)];\n    for i in range(m):\n        result[i][0]=first[i];\n    for j in range(1, n):\n        curr=getIntList();\n        for i in range(m):\n            result[i][j]=curr[i];\n    return result;\nn, H=getIntList();\n#l*(l+1)/2=n\n#l**2+l-2n=0;\n#l=-1+sqrt(1+8n)/2\n#if l>H\n#l*(l+1)/2-k\n#k=l-H+l-H-2+...\n#g(x)= x+ x-2+ x-4...\n#g(2*x)=x*(x+1);\n#g(2*x+1)=x+1+x*(x+1);\ndef getLim(l):\n    if l<=H:\n        return l*(l+1)//2;\n    diff=l-H;\n    x = diff // 2;\n    if diff%2==0:\n        return l*(l+1)//2-x*(x+1);\n    return l*(l+1)//2-(x+1)*(x+1);\ndef solve(n):\n    l=1;\n    while getLim(l)<n:\n        #print(l, getLim(l))\n        l*=2;\n    upLim=l;\n    lowLim=l//2;\n    diff=upLim-lowLim;\n    while upLim-lowLim>1:\n        curr=(upLim+lowLim)//2;\n        if getLim(curr)>=n:\n            upLim=curr\n        else:\n            lowLim=curr;\n    return upLim;\nprint(solve(n))", "n, H = map(int, input().split())\n\nmx = int((1 + 8 * n) ** 0.5)\nwhile (mx + 1) * (mx + 1) <= 1 + 8 * n:\n\tmx += 1\nmx = (mx - 1) // 2;\n\nif mx <= H:\n\tif (1 + mx) * mx // 2 < n:\n\t\tmx += 1\n\tprint(mx)\n\treturn\nelse:\n\tmx = H\n\tn -= (1 + H) * H // 2\n\ndef f(moves, mx):\n\tres = moves * mx\n\tadd = (moves - 1) // 2\n\tres += (add + 1) * add\n\tif moves % 2 == 0:\n\t\tres += add + 1\n\treturn res\n\n\nl = 1\nr = 10 ** 18\n\nwhile l < r - 1:\n\tm = (l + r) // 2\n\tif f(m, mx) < n:\n\t\tl = m\n\telse:\n\t\tr = m\n\nif f(l, mx) >= n:\n\tr = l\n\nprint(mx + r)", "def check(n,t):\n    su = t * (t+1) // 2\n    if n >= su:\n        return 1\n    else:\n        return 0\ndef check2(n,ch,l):\n    sua = (ch + l) * (l-ch+1)//2\n    sub = l*(l-1)//2\n    if sua+sub>n:\n        return 0\n    else:\n        return 1\nn,h = list(map(int,input().split()))\nl = 0\nr = h\nwhile r - l > 1:\n    mid = (l + r) // 2\n    if(check(n,mid)):\n        l = mid\n    else:\n        r = mid\n\nch = 0\nif(check(n,r)):\n    ch = r\nelse:\n    ch = l\nl = ch\nr = 10000000000\nwhile(r - l > 1):\n    mid = (l + r) // 2\n    if(check2(n,ch,mid)):\n        l = mid\n    else:\n        r = mid\nfans = 0\nif(check2(n,ch,r)):\n    fans = r\nelse:\n    fans = l\nans = fans + fans - ch\nsua = (ch + fans)*(fans - ch + 1) // 2;\nsub = fans*(fans - 1) // 2;\nff = sua + sub\nn = n - ff\nans += (n+fans-1)//fans\nprint(ans)\n", "#!/bin/python3\nimport sys\n\n[n, H] = list(map(int, sys.stdin.read().split()))\n\nINF = 1000000000000000000000000000000\n\ndef tri(n): return n*(n+1)//2\n\ndef build(n, h):\n\tvol = tri(h)\n\tif h > H:\n\t\tr = h - H\n\t\tl = h-1 - r\n\t\tsys.stderr.write(\"BUILD {} : {} {}\\n\".format(h, l, r))\n\t\tsys.stderr.write(\"LSIDE: {}\\n\".format(tri(l+r) - tri(l)))\n\t\tvol += tri(l+r) - tri(l)\n\t\tw = h + r\n\telse:\n\t\tw = h\n\tif vol > n:\n\t\tsys.stderr.write(\"BUILD {} -> NO WAY\\n\".format(h))\n\t\treturn INF\n\tn -= vol\n\tw += n//h\n\tif n%h > 0:\n\t\tw += 1\n\tsys.stderr.write(\"BUILD {} -> {}\\n\".format(h, w))\n\treturn w\n\nl = 1\nr = n\nwhile l+4 < r:\n\tsys.stderr.write(\"RANGE {}..{}\\n\".format(l, r))\n\ta = (l+l+r+2)//3\n\tb = (l+r+r+2)//3\n\tay = build(n, a)\n\tby = build(n, b)\n\tif by == INF:\n\t\tr = b\n\t\tcontinue\n\tif ay < by:\n\t\tr = b\n\telse:\n\t\tl = a\n\nans = INF\nfor i in range(l, r+1):\n\tans = min(ans, build(n, i))\n\nprint(ans)\n", "def f(N, H, n):\n\ttotal = 0\n\tif n <= H:\n\t\ttotal = n * (n + 1) // 2\n\telse:\n\t\ttotal = H * (H + 1) // 2\n\t\tn -= H\n\t\tn -= 1\n\t\ttotal += H\n\t\tq, r = n // 2, n % 2\n\t\ttotal += (q * (q + 1) // 2 + q * H) * 2\n\t\ttotal += r * (H + q + 1)\n\treturn total >= N\n\nn, H = map(int, input().split())\nl = 0\nr = n\nwhile l < r:\n\tm = (l + r) // 2\n\tif f(n, H, m):\n\t\tr = m\n\telse:\n\t\tl = m + 1\nprint(r)", "import math\ndef cal1(x):\n    res = 0\n    res = x * (x+1) // 2\n    tot = H + x - 1\n    leng = x - H\n    res += tot * leng // 2\n    return res\ndef cal2(x):\n    res = x * (x+1) // 2\n    return res\n\na = input().split()\nn = int(a[0])\nH = int(a[1])\nne = cal1(H)\nif n >= ne:\n    l = 0\n    r = n\n    while l < r:\n        mid = (l+r+1) // 2\n        if n >= cal1(mid):\n            tmp = mid\n            l = mid\n        else:\n            r = mid - 1\n    ans = 2 * tmp - H\n    if n > cal1(tmp):\n        ans += math.ceil((n - cal1(tmp)) / tmp)\nelse:\n    l = 0\n    r = n\n    while l < r:\n        mid = (l+r+1) // 2\n        if n >= cal2(mid):\n            tmp = mid\n            l = mid\n        else:\n            r = mid - 1\n    ans = tmp\n    if n > cal2(tmp):\n        ans += math.ceil((n - cal2(tmp)) / tmp)\nprint(ans)\n\n", "n, H = input().split()\n\nn = int(n)\nH = int(H)\n\ndef can(m):\n    nonlocal n, H\n    ans = 0\n    tt = min(m, H)\n    ans += ((tt + 1) * tt) // 2\n    ans += (m - tt) * H\n    ost = m - tt\n    if ost % 2 == 0:\n        up = ost // 2 - 1\n        \n        ans += ((up + 1) * up)\n        ans += up + 1\n    else:\n        up = ost // 2\n        ans += ((up + 1) * up)\n    return ans\n    \n\nl = 0\nr = n + H\n\nwhile r - l > 1:\n    m = (l + r) // 2\n\n    if can(m) < n:\n        l = m\n    else:\n        r = m\n\nprint(r)\n", "#!/usr/bin/env python3\n\n[n, H] = list(map(int, input().strip().split()))\n\n# first True\ndef bsearch(f, xmin, xmax):\n\twhile xmax - xmin > 1:\n\t\txmid = (xmax + xmin) // 2\n\t\tif f(xmid):\n\t\t\txmax = xmid\n\t\telse:\n\t\t\txmin = xmid\n\treturn xmax\n\ndef f1(x):\n\treturn 2 * n <= x * (x + 1)\n\nHH = (H * (H + 1)) // 2\ndef f2(x):\n\tr = x - H\n\tR0 = r // 2\n\tR1 = (r + 1) // 2\n\treturn n <= HH + H*r + R0 * R1\n\nif n <= HH:\n\tx = bsearch(f1, 0, H)\nelse:\n\txmin = H\n\txmax = H\n\twhile not f2(xmax):\n\t\txmin = xmax\n\t\txmax *= 2\n\tx = bsearch(f2, xmin, xmax)\nprint (x)\n", "def sumab(a, b):\n  return (a+b)*(b-a+1)//2\ndef calc(spot, H):\n  if spot <= H:\treturn spot * (spot + 1) // 2\n  if (H - spot) % 2 == 0: return sumab(1,H+(spot-H)//2)+sumab(H,H+(spot-H)//2-1)\n  return sumab(1,H+(spot-H)//2)+sumab(H,H+(spot-H)//2-1)+H+(spot-H)//2\n\n\n\ndef solve():\n  n,H = map(int,input().split())\n  if n == 1:\n    print(1)\n    return 0\n  st = 1\n  en = 10**20\n  while st < en:\n    mid = (st+en)//2\n    if calc(mid,H) >= n:\n      en = mid\n    else:\n      st = mid+1\n  print(st)\nsolve()"]