["t = int(input())\n\nfor _ in range(t):\n    p, f = [int(x) for x in input().split()]\n    cs, cw = [int(x) for x in input().split()]\n    s, w = [int(x) for x in input().split()]\n    if s > w:\n        s, w = w, s\n        cs, cw = cw, cs\n\n    best = 0\n    for i in range(cs + 1):\n        if s*i <= p:\n            war_me = min((p - s*i)//w, cw)\n            tb = i + war_me\n            sword_him = min(cs - i, f//s)\n            tb += sword_him\n            war_him = min((f - s*sword_him)//w, cw - war_me)\n            tb += war_him\n            best = max(best, tb)\n    print(best)\n\n", "def solve():\n    p, f = map(int, input().split())\n    cnts, cntw = map(int, input().split())\n    s, w = map(int, input().split())\n    if s > w:\n        s, w = w, s\n        cnts, cntw = cntw, cnts\n    ans = 0\n    for i in range(cnts + 1):\n        if s * i > p:\n            break\n        j = min((p - s * i) // w, cntw)\n        u = min(cnts - i, f // s)\n        v = min(cntw - j, (f - s * u)  // w)\n        ans = max(ans, i + j + u + v)\n    print(ans)\nt = int(input())\nfor _ in range(t):\n    solve()", "from sys import stdin\ninput = stdin.readline\nq = int(input())\nfor _ in range(q):\n    p,f = map(int,input().split())\n    ns,na = map(int,input().split())\n    s,a = map(int,input().split())\n    wynik = 0\n    for ps in range(ns+1):\n        if ps*s > p:\n            continue\n        pa = (p-ps*s)//a\n        pa = min(pa,na)\n        pozs = ns - ps\n        poza = na - pa\n        if s > a:\n            fa = f//a\n            fa = min(fa,poza)\n            fs = (f-fa*a)//s\n            fs = min(fs, pozs)\n        else:\n            fs = f//s\n            fs = min(fs,pozs)\n            fa = (f-fs*s)//a\n            fa = min(fa,poza)\n        wynik = max(wynik, fa+fs+pa+ps)\n    print(wynik)", "for t in range(int(input())):\n    p, f = list(map(int, input().split()))\n    c_sw, c_ax = list(map(int, input().split()))\n    w_sw, w_ax = list(map(int, input().split()))\n    \n    if w_sw > w_ax:\n        c_sw, c_ax = c_ax, c_sw\n        w_sw, w_ax = w_ax, w_sw\n\n    ans = 0\n    for n_sw_p in range(c_sw + 1):\n        n_sw_f = c_sw - n_sw_p\n\n        n_sw_p = min(n_sw_p, p // w_sw)\n        n_sw_f = min(n_sw_f, f // w_sw)\n\n        n_ax_p = (p - n_sw_p * w_sw) // w_ax\n        n_ax_f = (f - n_sw_f * w_sw) // w_ax\n\n        n_ax = min(n_ax_p + n_ax_f, c_ax)\n\n        ans = max(ans, n_sw_p + n_sw_f + n_ax)\n    print(ans)\n", "t = int(input())\nfor _ in range(t):\n    p, f = map(int, input().split())\n    cs, cw = map(int, input().split())\n    s, w = map(int, input().split())\n    if s > w:\n        cs, cw = cw, cs\n        s, w = w, s\n    if p // s + f // s <= cs:\n        print(p // s + f // s)\n    else:\n        ans = 0\n        for i in range(cs + 1):\n            if s * i <= p and s * (cs - i) <= f:\n                a = p - s * i\n                b = f - s * (cs - i)\n                ans = max(ans, cs + min(cw, a // w + b // w))\n        print(ans)", "t = int(input())\nfor i in range(t):\n    c0, c1 = map(int,input().split())\n    ma, mb = map(int,input().split())\n    wa, wb = map(int,input().split())\n\n    ans = 0\n    if wa > wb:\n        wa,wb = wb,wa\n        ma,mb = mb,ma\n    for i in range(ma+1):\n        c0a = min(i, c0//wa)\n        c1a = min(ma-i, c1//wa)\n        n0 = c0-c0a*wa\n        n1 = c1-c1a*wa\n        ans0 = c0a + c1a\n        c01b = min(mb, n0//wb + n1//wb)\n        ans0 += c01b\n        ans = max(ans,ans0)\n    print(ans)", "for t in range(int(input())):\n    p, f = list(map(int, input().split()))\n    cs, cw = list(map(int, input().split()))\n    s, w = list(map(int, input().split()))\n    res = 0\n    if s > w:\n        s, w = w, s\n        cs, cw = cw, cs\n    for ns1 in range(cs + 1):\n        if ns1 * s > p:\n            continue\n        ns2 = min(cs - ns1, f // s)\n        nw1 = min((p - ns1 * s) // w, cw)\n        nw2 = min((f - ns2 * s) // w, cw - nw1)\n        res = max(res, ns1 + ns2 + nw1 + nw2)\n    print(res)\n", "import sys\n\nsys.setrecursionlimit(10 ** 5)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\nfor _ in range(II()):\n    p,f=MI()\n    cs,cw=MI()\n    s,w=MI()\n    if s>w:\n        s,w=w,s\n        cs,cw=cw,cs\n    ans=0\n    for i in range(cs+1):\n        if i*s>p:break\n        pw=(p-i*s)//w\n        fs=min(cs-i,f//s)\n        fw=min((f-fs*s)//w,cw-pw)\n        cur=i+pw+fs+fw\n        ans=max(ans,cur)\n    print(ans)\n", "\nfrom sys import stdin\n\ntt = int(stdin.readline())\n\nfor loop in range(tt):\n\n    p,f = list(map(int,stdin.readline().split()))\n    cs,cw = list(map(int,stdin.readline().split()))\n    s,w = list(map(int,stdin.readline().split()))\n\n    if s > w:\n        cs,cw = cw,cs\n        s,w = w,s\n\n    ans = 0\n    for ps in range(cs+1):\n\n        if ps * s > p:\n            break\n\n        pw = min(cw , (p-ps*s)//w)\n\n        fs = min( cs-ps , f//s )\n        fw = min( cw-pw , (f-fs*s)//w )\n        ans = max(ans , ps+pw+fs+fw)\n\n    print (ans)\n", "t=int(input())\nfor you in range(t):\n    l=input().split()\n    p=int(l[0])\n    f=int(l[1])\n    l=input().split()\n    cnts=int(l[0])\n    cntw=int(l[1])\n    l=input().split()\n    s=int(l[0])\n    w=int(l[1])\n    maxa=[]\n    if(s>w):\n        w,s=s,w\n        cnts,cntw=cntw,cnts\n    for i in range(cnts+1):\n        remp=p-i*s\n        if(remp<0):\n            break\n        z=i+min(remp//(w),cntw)\n        remsw=cnts-(i)\n        remax=(cntw-min(remp//(w),cntw))\n        my=f\n        z+=min(my//s,remsw)\n        my-=s*min(my//s,remsw)\n        z+=min(my//w,remax)\n        maxa.append(z)\n    print(max(maxa))\n", "from math import  ceil, sqrt\n\ndef main():\n    t = int(input())\n    for i in range(t):\n        p, f = map(int, input().split())\n        count_a, count_b = map(int, input().split())\n        a, b = map(int, input().split())\n        if a > b:\n            a, b = b, a\n            count_a, count_b = count_b, count_a\n        ans = 0\n        for i in range(count_a + 1):\n            if i * a > p:\n                break\n            l = min(count_b, (p - i * a) // b)\n            r = min(f // a, count_a - i)\n            g = min(count_b - l, (f - r * a) // b)\n            ans = max(ans, i + l + r + g)\n        print(ans)\n\nmain()", "t = int(input())\nwhile t:\n    t += -1\n    p, f = map(int, input().split())\n    cnts, cntw = map(int, input().split())\n    s, w = map(int, input().split())\n    if s > w:\n        s, w = w, s\n        cnts, cntw = cntw, cnts\n    ans = 0\n    for i in range(cnts + 1):\n        if i * s > p: break\n        t1 = p - i * s\n        t2 = min(t1 // w, cntw)\n        t3 = cnts - i\n        t4 = cntw - t2\n        t5 = min(f // s, t3)\n        t6 = f - t5 * s\n        t7 = min(t6 // w, t4)\n        ans = max(ans, i + t2 + t5 + t7)\n    print(ans)", "gans = []\nfor _ in range(int(input())):\n    p, f = list(map(int, input().split()))\n    n, m = list(map(int, input().split()))\n    s, w = list(map(int, input().split()))\n    if s > w:\n        s, w = w, s\n        n, m = m, n\n    ans = 0\n    for i in range(min(n, p // s) + 1):\n        j = min(n - i, f // s)\n        p1 = p - i * s\n        f1 = f - j * s\n        ansi = i + j + min(f1 // w + p1 // w, m)\n        ans = max(ans, ansi)\n    gans.append(ans)\nprint('\\n'.join(map(str, gans)))\n", "def solve():\n    p, f = map(int,input().split())\n    cnts, cntw = map(int,input().split())\n    s, w = map(int,input().split())\n    if s > w:\n        s, w = w, s\n        cnts, cntw = cntw, cnts\n    mans = 0\n    for i in range(cnts + 1):\n        ans = 0\n        if p >= s * i:\n            ans += i\n            cntsnow = cnts - i\n            pnow = p - s * i\n            ans += min(cntw, pnow // w)\n            cntwnow = cntw - min(cntw, pnow // w)\n        fn = f\n        ans += min(fn // s, cntsnow)\n        fn -= min(fn // s, cntsnow) * s\n        ans += min(fn // w, cntwnow)\n        mans = max(ans, mans)\n    print(mans)\n\nfor i in range(int(input())):\n    solve()", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\ndef check(s, n, v):\n\tfor i in range(n):\n\t\tif s[i:i+n].count(v) == 0:\n\t\t\treturn False\n\treturn True\n\ndef solve():\n\tp, f = mints()\n\tcs, cw = mints()\n\ts, w = mints()\n\tbest = 0\n\tfor i in range(cs+1):\n\t\tif i*s > p:\n\t\t\tbreak\n\t\th = (p-i*s)\n\t\tj = min(h // w, cw)\n\t\ths = cs - i\n\t\thw = cw - j\n\t\tif s < w:\n\t\t\ta = min(f // s, hs)\n\t\t\tb = min((f - a*s) // w, hw)\n\t\telse:\n\t\t\ta = min(f // w, hw)\n\t\t\tb = min((f - a*w) // s, hs)\n\t\tbest = max(best, i+j+a+b);\n\tprint(best)\n\nfor i in range(mint()):\n\tsolve()\n", "for _ in range(int(input())):\n    p, f = list(map(int, input().split()))\n    cs, cw = list(map(int, input().split()))\n    s, w = list(map(int, input().split()))\n    if w < s:\n        w, s = s, w\n        cs, cw = cw, cs\n\n    ps = p//s\n    fs = f//s\n\n    if ps+fs < cs:\n        print(ps + fs)\n        continue\n\n    best = 0\n    for i in range(cs+1):\n        if p < i*s or f < (cs-i)*s:\n            continue\n        #if i == 3:\n            #print(p - i*s, f - (cs-i)*s, \"!\")\n        best = max(best, min(cw, (p - i*s)//w + (f - (cs-i)*s)//w) + cs)\n    print(best)\n"]