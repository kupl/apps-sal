["n, k = map(int, input().split())\nans = [[0 for i in range(n)]for j in range(n)]\ncur = 1\nsum_k = 0\nfor i in range(n):\n    for j in range(k-1):\n        ans[i][j] = cur\n        cur += 1\nfor i in range(n):\n    for j in range(k-1, n):\n        ans[i][j] = cur\n        cur += 1\nfor i in range(n):\n    sum_k += ans[i][k-1]\nprint(sum_k)\nfor i in range(n):\n    for j in range(n):\n        print(ans[i][j], end = ' ')\n    print('')\n\n        \n        \n", "n, k = map(int, input().split())\nk -= 1\nanswer = [[0] * n for i in range(n)]\ncur = 1\nfor i in range(n):\n    for j in range(k):\n        answer[i][j] = cur\n        cur += 1\nfor i in range(n):\n    for j in range(k, n):\n        answer[i][j] = cur\n        cur += 1\nsumma = 0\nfor i in range(n):\n    summa += answer[i][k]\nprint(summa)\nfor i in range(n):\n    print(*answer[i])", "#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n# vim:fenc=utf-8\n#\n# Copyright \u00a9 2016 missingdays <missingdays@missingdays>\n#\n# Distributed under terms of the MIT license.\n\n\"\"\"\n\n\"\"\"\n\ndef read_list():\n    return [int(i) for i in input().split()]\ndef new_list(n):\n    return [0 for i in range(n)]\ndef new_matrix(n, m=0):\n    return [[0 for i in range(m)] for i in range(n)]\n\nn, k = read_list()\n\na = new_matrix(n, n)\n\ncmi = 1\ncma = n**2\n\nfor i in range(n):\n\n    for j in range(k-1):\n        a[i][j] = cmi\n        cmi += 1\n    for j in range(n-1, k-2, -1):\n        a[i][j] = cma\n        cma -= 1\ns = 0\nfor i in range(n):\n    s += a[i][k-1]\n\nprint(s)\n\nfor i in range(n):\n    for j in range(n):\n        print(a[i][j], end=\" \")\n    print()\n    \n", "n, k = map(int, input().split())\nmatrix = [[0 for i in range(n)] for j in range(n)]\ncur_number = 1\nfor i in range(n):\n    for j in range(k - 1):\n        matrix[i][j] = cur_number\n        cur_number += 1\nfor i in range(n):\n    for j in range(k - 1, n):\n        matrix[i][j] = cur_number\n        cur_number += 1\ns = 0\nfor i in range(n):\n    s += matrix[i][k - 1]\nprint(s)\nfor i in range(n):\n    print(' '.join(map(str, matrix[i])))", "n, k = [int(x) for x in input().split()]\nM1 = [[i + n*j for j in range(k-1)] for i in range(1, n+1)]\nM2 = [[(k-1)*n + i*(n-k+1) + j for j in range(1, n-k+2)] for i in range(0, n)]\nM = [M1[i] + M2[i] for i in range(n)]\nprint((n-k+1)*(n-1)*n // 2 + ((k-1)*n + 1)*n)\nfor i in range(n):\n    for j in range(n):\n        print(M[i][j], end = ' ')\n    print()\n", "3\n\nn,k = [int(i) for i in input().split()]\n\ntotal_sum = n*n-(n-k)\nfor row in range(1,n):\n\trow_right = n*n - (row)*(n-k+1)\n\tval = row_right - (n-k)\n\ttotal_sum += val\n\nprint(total_sum)\n\nnext_l_num = 1\n\nfor row in range(1,n+1):\n\trow_right = n*n - (row-1)*(n-k+1)\n\tnext_r_num = row_right - (n-k)\n\tfor col in range(1,n+1):\n\t\tif col < k:\n\t\t\tprint(next_l_num, end=' ')\n\t\t\tnext_l_num += 1\n\t\telse:\n\t\t\tprint(next_r_num, end=' ')\n\t\t\tnext_r_num += 1\n\n\tprint()\n\n", "# strs = [input() for _ in range(3)]\n\ndef main():\n\tn, k = map(int, input().split())\n\n\tleft = k - 1\n\tright = n - k + 1\n\tlcntr = 1\n\trcntr = left * n + 1\n\ts = 0\n\tls = []\n\tfor i in range(n):\n\t\tll = [str(c) for c in range(lcntr, lcntr + left)]\n\t\trl = [str(c) for c in range(rcntr, rcntr + right)]\n\t\tlcntr += left\n\t\trcntr += right\n\t\ttl = ll + rl\n\t\ts += int(tl[left])\n\t\tls.append(' '.join(tl))\n\n\tprint(s)\n\tprint('\\n'.join(ls))\n\nmain()", "n, k = list(map(int, input().split()))\narr = [[0 for i in range(n)] for j in range(n)]\nc = n * n\ns = 0\nfor i in range(n):\n    #arr[i][n - 1] = c\n    #c -= 1\n    for j in range(n - 1, k - 2, -1):\n        arr[i][j] = c\n        c -= 1\n    s += c + 1\nfor i in range(n):\n    for j in range(k - 2, -1, -1):\n        arr[i][j] = c\n        c -= 1\nprint(s)\nfor i in arr:\n    print(*i)\n", "n, k = map(int, input().split())\n\nsol = [[0] * n for _ in range(n)]\n\nres = 0\nc = 1\nfor j in range(k - 1):\n    for i in range(n):\n        sol[i][j] = c\n        c += 1\n\nfor i in range(n):\n    for j in range(k - 1, n):\n        sol[i][j] = c\n        c += 1\n\nfor i in range(n):\n    res += sol[i][k - 1]\n\nprint(res)\nfor line in sol:\n    for col in line:\n        print(col, end=\" \")\n    print()\n", "n, k = map(int, input().split())\na = n * (k - 1) + 1\nsm = n * (2 * a + (n - 1) * (n - k + 1)) // 2\nt = [ [0] * n for i in range(n) ]\nx = 1\nfor j in range(k-1):\n    for i in range(n):\n        t[i][j] = x\n        x += 1\nfor i in range(n):\n    for j in range(k-1, n):\n        t[i][j] = x\n        x += 1\nprint(sm)\nfor row in t:\n    print(\" \".join(map(str, row)))", "N, k = map(int, input().split())\na = [ [0] * (N + 1) for i in range(N + 1) ]\nx = N * (k - 1) + 1\nS = 0\nfor i in range(1, N + 1):\n    S += x\n    a[i][k] = x\n    x += 1\n    for j in range(k + 1, N + 1):\n        a[i][j] = x\n        x += 1\nx = 1\nfor i in range(1, N + 1):\n    for j in range(1, k):\n        a[i][j] = x\n        x += 1\nprint(S)\nfor i in range(1, N + 1):\n    print(*a[i][1:])", "n, k = map(int, input().split())\nprint(int((((n * (k - 1) + 1)) + ((n - 1) * (n - k + 1)) / 2) * n))\nfor i in range(n):\n    curr = []\n    for j in range(n):\n        if j + 1 == k:\n            curr.append((n * (k - 1) + 1) + i * (n - k + 1))\n        elif j + 1 > k:\n            curr.append((n * (k - 1) + 1) + i * (n - k + 1) + (j + 1 - k))\n        else:\n            curr.append(i * (k - 1) + j + 1)\n    print(' '.join(map(str, curr)))", "def main():\n    n, k = [int(t) for t in input().split()]\n\n    grid = [[-1] * n for _ in range(n)]\n\n    current = n * n\n\n    for row in range(n):\n        for column in range(n - 1, k - 2, -1):\n            grid[row][column] = current\n            current -= 1\n\n    for row in range(n):\n        for column in range(k - 2, -1, -1):\n            grid[row][column] = current\n            current -= 1\n\n    s = sum(grid[row][k - 1] for row in range(n))\n    print(s)\n    for row in range(n):\n        print(' '.join(str(grid[row][column]) for column in range(n)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, k = list(map(int, input().split()))\ng = [[0 for _ in range(n)] for _ in range(n)]\nx = 1\nfor i in range(n):\n    for j in range(k-1):\n        g[i][j] = x\n        x += 1\nfor i in range(n):\n    for j in range(k-1, n):\n        g[i][j] = x\n        x += 1\nret = 0\nfor i in range(n):\n    ret += g[i][k-1]\nprint(ret)\nprint(\"\\n\".join([\" \".join(map(str, x)) for x in g]))\n", "sLine = input()\nsSplit = sLine.split()\nn = int(sSplit[0])\nk = int(sSplit[1])\nv = []\nfor i in range(n) :\n\tv.append([])\n\tfor j in range(n) :\n\t\tv[i].append(0)\nx1 = n * n\nx2 = 1\nfor i in range(n) :\n\tfor j in range(n-1, (k-1)-1, -1) :\n\t\tv[i][j] = x1\n\t\tx1 -= 1\n\tfor j in range(0, (k-1), 1) :\n\t\tv[i][j] = x2\n\t\tx2 += 1\nnSum = 0\nfor i in range(n) :\n\tnSum += v[i][k-1]\nprint(nSum)\nfor i in range(n) :\n\tfor j in range(n) :\n\t\tprint(v[i][j], end='')\n\t\tif j == n - 1 :\n\t\t\tprint('')\n\t\telse :\n\t\t\tprint(' ', end='')\n", "n, k = (int(x) for x in input().split())\nsumm = 0\ndata = []\nfor i in range(1, n+1):\n\tlast = n**2-(n-k)*i -i+1\n\tdata.append(last)\n\tsumm += last\nprint(summ)\nfor i in range(1,n+1):\n\tt = list(range(last - k+1, last))\n\tvalue = [0]*n\n\tfor j in range(1, n+1):\n\t\tif (j < k):\n\t\t\tvalue[j-1] = str((t[j-1]))\n\t\telif (j == k):\n\t\t\tvalue[j-1] = str(data[i-1])\n\t\telse:\n\t\t\tvalue[j-1] = str(data[i-1] +j-k)\n\tlast-=k-1\n\tprint(' '.join(value))", "n,m=map(int,input().split())\na=[[0]*n for _ in range(n)]\nfor i in range(n*n):\n\tif i<(m-1)*n:\n\t\ta[i//(m-1)][i%(m-1)]=i+1\n\telse:\n\t\ta[(i-(m-1)*n)//(n-m+1)][(i-(m-1)*n)%(n-m+1)+m-1]=i+1\nr=0\nfor j in range(n):\n\tr+=a[j][m-1]\nprint(r)\nfor i in range(n):\n\tfor j in range(n):\n\t\tprint(a[i][j],end=' ')\n\tprint()", "n, k = input().split()\nn, k = int(n), int(k)\n\ncisel_vlavo = n * (k-1)\nprve_v_k = cisel_vlavo + 1\nprve_vlavo = 1\n\nriadok_vpravo = n - k + 1\ncislo = prve_v_k\nsu = 0\nfor _ in range(n):\n    su += cislo\n    cislo += riadok_vpravo\nprint(su)\n\nfor r in range(n):\n    space = False\n    for c in range(1, n+1):\n        if space:\n            print(\" \", end=\"\")\n        else:\n            space = True\n        if c < k:\n            print(prve_vlavo, end=\"\")\n            prve_vlavo += 1\n        else:\n            print(prve_v_k, end=\"\")\n            prve_v_k += 1\n        \n    print()", "# You lost the game.\n\nn, k = list(map(int, input().split()))\n\nT = [\"\" for _ in range(n)]\n\nt = 0\nr = 0\nfor i in range(n):\n    for j in range(k-1):\n        t += 1\n        T[i] += str(t) + \" \"\nfor i in range(n):\n    r += t+1\n    for j in range(k-1,n):\n        t += 1\n        T[i] += str(t) + \" \"\nprint(r)\nfor i in range(n):\n    print(T[i][:(len(T[i])-1)])\n\n\n", "import collections\nimport math\n\ndef is_prime(x): \n    for i in range(2, math.ceil(math.sqrt(x))):\n        if x % i == 0:\n            return False\n    return True\n\nn, k = map(int, input().split())\nT = [[0] * n for _ in range(n)]\nans = 0\ns = n * n\nfor i in range(n):\n    for j in range(n - k + 1):\n        T[i][n - j - 1] = s\n        s -= 1\na = 1\nfor i in range(n):\n    for j in range(k - 1):\n        T[i][j] = a\n        a += 1\nfor i in range(n):\n    ans += T[i][k - 1]\nprint(ans)\nfor i in range(n):\n    print(' '.join(map(str, T[i])))", "n, k = map(int, input().split())\ndata = [[None for i in range(n)] for j in range(n)]\ndata[0][k - 1] = n ** 2 - n + k\nhelp = 0\nanswer = data[0][k - 1]\nfor i in range(1, n):\n    data[i][k - 1] = data[i - 1][k - 1] - (n - k + 1)\n    answer += data[i][k - 1]\nfor i in range(n - 1, -1, -1):\n    for j in range(k, n):\n        data[i][j] = data[i][j - 1] + 1\nfor i in range(n - 1, -1, -1):\n    for j in range(k - 1):\n        data[i][j] = help + 1\n        help += 1\nprint(answer)\nfor i in range(n):\n    print(*data[i])", "inp = input()\ninp = inp.split()\nn = int(inp[0])\nk = int(inp[1])-1\n\nans = 0\ncount=1\ntable = [[0] * n for i in range(n)]\n\nfor i in range(k):\n    for j in range(n):\n        table[j][i]=count\n        count = count + 1\n\nfor i in range(n):\n    for j in range(k,n):\n        table[i][j]=count\n        count = count + 1\n\nfor i in range(n):\n    ans = ans + table[i][k]\n\nprint (ans)\n\nfor i in table:\n    for j in i:\n        print (j, end=' ')\n    print ()", "n,k=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append([])\n    for j in range(n):\n        a[i].append(0)\nm=n**2\nfor j in range(n):\n    for i in range(n-k+1):\n        a[j][n-i-1]=m-i\n    m-=n-k+1\nc=n*k-n\nwhile c>0:\n    a[(c-1)%n][(c-1)//n]=m\n    c-=1\n    m-=1\ns=0\nfor i in range(n):\n    s+=a[i][k-1]\nprint(s)\nfor i in range(n):\n    for j in range(n-1):\n        print(a[i][j],end=' ')\n    print(a[i][n-1])", "n, k = map(int,input().strip().split())\n\na = [[0 for x in range(n)] for x in range(n)]\ncur = n*n\nfor i in range(0,n):\n    for j in range(n-1,k-2,-1):\n        a[i][j] = cur\n        cur -= 1\n\nfor i in range(0,n):\n    for j in range(k-2,-1,-1):\n        a[i][j] = cur\n        cur -= 1\n\ntotal = 0\nfor i in range(0,n):\n    total += a[i][k-1]\n\nprint(total)\nfor i in range(0,n):\n    for j in range(0,n):\n        print(a[i][j], end=\" \")\n    print()\n"]