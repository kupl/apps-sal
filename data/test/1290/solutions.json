["n,m = map(int,input().split())\nres = [0] * n\na = list(map(int,input().split()))\nfor i in a:\n    res[i - 1] += 1\nprint(min(res))", "n, m = map(int, input().split())\nc = [0] * n\ns = list(map(int, input().split()))\nfor sq in s:\n    c[sq - 1] += 1\nprint(min(c))", "from collections import defaultdict\nn, m = list(map(int, input().split()))\ncnt = defaultdict(int)\nfor el in list(map(int, input().split())):\n    cnt[el] += 1\n\nres = float('inf')\nfor i in range(1, n+1):\n    res = min(res, cnt[i])\nprint(res)\n", "def li():\n    return list(map(int, input().split()))\nn, m = li()\na = li()\naa = [0] * n\nfor b in a:\n    aa[b - 1] += 1\nprint(min(aa))\n", "from collections import defaultdict as dd, deque\n\nn,m = list(map(int,input().split()))\nH = [0]*n\n\nfor c in map(int,input().split()):\n    H[c-1] += 1\n\nprint(min(H))\n", "n, m = [int(i) for i in input().split()]\na = [0] * (n + 1)\nb = [int(i) for i in input().split()]\nfor i in b:\n    a[i] += 1\nprint(min(a[1:n+1]))\n", "n, m = map(int, input().split())\nnum = [0] * n\nsmth = list(map(int, input().split()))\nfor i in range(m):\n    num[smth[i] - 1] += 1\nprint(min(num))", "(n, m) = list(map(int, input().split()))\n\nlst = []\nfor x in input().split():\n    lst.append(int(x))\n\narray = [0] * n\n\nfor x in range(len(lst)):\n    array[lst[x] - 1] += 1\n\nprint(min(array))\n", "from sys import stdin, stdout\nfrom random import randrange\n\nsze = 10 ** 3 + 10\nn, m = map(int, stdin.readline().split())\nvalues = list(map(int, stdin.readline().split()))\ncnt = [0 for i in range(sze)]\nINF = float('inf')\nans = 0\n\nfor v in values:\n    cnt[v] += 1\n    mn = INF\n    \n    for i in range(1, n + 1):\n        mn = min(mn, cnt[i])\n    \n    ans += mn\n    \n    for i in range(1, n + 1):\n        cnt[i] -= mn\n\nstdout.write(str(ans))", "n, m = list(map(int, input().split()))\nl = list(map(int, input().split()))\nmas = []\nfor i in range(n):\n    mas.append(0)\nfor i in l:\n    mas[i - 1] += 1\nprint(min(mas))\n", "import atexit\nimport io\nimport sys\n\n# Buffering IO\n_INPUT_LINES = sys.stdin.read().splitlines()\ninput = iter(_INPUT_LINES).__next__\n_OUTPUT_BUFFER = io.StringIO()\nsys.stdout = _OUTPUT_BUFFER\n\n@atexit.register\ndef write():\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\n    \n\ndef main():\n    n, m = [int(x) for x in input().split()]\n    c = [int(x) for x in input().split()]\n    print(min(c.count(x) for x in range(1, n+1)))\n    \ndef __starting_point():\n    main()\n\n__starting_point()", "# ===================================\n# (c) MidAndFeed aka ASilentVoice\n# ===================================\n# import math, fractions, collections\n# ===================================\nn, m = [int(x) for x in input().split()]\nq = [int(x) for x in input().split()]\nans = 1e9\nfor i in range(1, n+1):\n\ts = q.count(i)\n\tans = min(ans, s)\nprint(ans)", "n, m = map(int, input().split())\na = [0] * n\nfor i in map(int, input().split()):\n\ta[i-1] += 1\nprint(min(a))", "n,m=list(map(int,input().split()))\npts=[0 for i in range(n)]\na=list(map(int,input().split()))\nfor i in range(m):\n    x=a[i]-1\n    pts[x]+=1\nprint(min(pts))\n\n\n\n\n", "n, m = list(map(int, input().strip().split()))\narr = list(map(int, input().strip().split()))\nrslt = [0]*n\nfor x in arr:\n    rslt[x-1] += 1\nprint(min(rslt))\n", "n,m=list(map(int,input().split()))\ninp=list(map(int,input().split()))\nL=[0]*n\nfor i in inp:\n    L[i-1]+=1\nprint(min(L))\n", "n, m = (int(x) for x in input().split())\n\na = [int(x) for x in input().split()]\n\nb = [0] * n\nfor i in range(m):\n    b[a[i] - 1] += 1\nprint(min(b))\n", "n,m = list(map(int,input().split()))\na = [0]*n\nfor i in list(map(int,input().split())):a[i-1] += 1\nprint(min(a))\n", "n, m = list(map(int, input().split()))\narr = [0 for i in range(n)]\nsq = list(map(int, input().split()))\nfor c in sq: arr[c - 1] += 1\nprint(min(arr))\n", "(n, m) = (int(i) for i in input().split())\ntab = [0] * n\nfor i in [int(j) for j in input().split()]:\n\ttab[i-1] += 1\nprint(min(tab))\n", "n, m =[int(x) for x in input().split()]\nd = [0] * n\ninp =[int(x) - 1 for x in input().split()] \nfor i in range(m):\n    d[inp[i]] += 1\nprint(min(d)) ", "t = input().split(' ')\nn = int(t[0])\nm = int(t[1])\nM = [0] * (n+1)\ns = input().split(' ')\nfor i in s:\n    M[int(i)] += 1\nsol = M[1]\nfor j in range(2, len(M)):\n    if M[j] < sol:\n        sol = M[j]\nprint(sol)\n", "n, m = map(int, input().split())\nc = list(map(int, input().split()))\ncnt = [0] * n\nfor x in c:\n    cnt[x - 1] += 1\n\nprint(min(cnt))", "s = input().split()\nn = int(s[0])\nm = int(s[1])\ns = list(map(int, input().split()))\ndic = {}\nfor i in range(n):\n    dic.update({i+1:0})\nfor x in s:\n    dic[x]+=1\n\nmn = 10**9\nfor x in dic.keys():\n    if dic[x]<mn:\n        mn = dic[x]\n\nprint(mn)", "\nimport collections\nn, m = map(int,input().split())\na = collections.Counter(list(map(int,input().split())))\nif len(a)<n:\n\tprint (0)\nelse:\n\tprint (min(a.values()))"]