["def main():\n    from sys import stdin\n    n, m = list(map(int, input().split()))\n    n += 1\n    aa, pos, duo = [0] * n, [0] * n, [0] * n\n    for i, a in enumerate(map(int, input().split()), 1):\n        aa[i] = a\n        pos[a] = i\n    for s in stdin.read().splitlines():\n        x, y = list(map(int, s.split()))\n        px, py = pos[x], pos[y]\n        if px > py:\n            if duo[x] < py:\n                duo[x] = py\n        else:\n            if duo[y] < px:\n                duo[y] = px\n    res = mx = 0\n    for i, a in enumerate(aa):\n        if mx < duo[a]:\n            mx = duo[a]\n        res += i - mx\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\"\"\"\n652C - \u0412\u0440\u0430\u0436\u0434\u0435\u0431\u043d\u044b\u0435 \u043f\u0430\u0440\u044b\nhttp://codeforces.com/problemset/problem/652/C\n\u041f\u0440\u0435\u0434\u043f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0435\u043c \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 x \u0435\u0433\u043e \u043f\u043e\u0437\u0438\u0446\u0438\u044e posx \u0432 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435. \u042d\u0442\u043e \u043b\u0435\u0433\u043a\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0437\u0430 \u043b\u0438\u043d\u0435\u0439\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0422\u0435\u043f\u0435\u0440\u044c \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043d\u0443\u044e \u043f\u0430\u0440\u0443 (a,\u2009b) (\u043c\u043e\u0436\u043d\u043e \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e posa\u2009<\u2009posb). \u0417\u0430\u043f\u043e\u043c\u043d\u0438\u043c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 a \u0441\u0430\u043c\u0443\u044e \u043b\u0435\u0432\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e posb \u0442\u0430\u043a\u0443\u044e, \u0447\u0442\u043e (a,\u2009b) \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u0432\u0440\u0430\u0436\u0434\u0435\u0431\u043d\u0443\u044e \u043f\u0430\u0440\u0443. \u041e\u0431\u043e\u0437\u043d\u0430\u0447\u0438\u043c \u044d\u0442\u0443 \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 za. \u0422\u0435\u043f\u0435\u0440\u044c \u0431\u0443\u0434\u0435\u043c \u0438\u0434\u0442\u0438 \u043f\u043e \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u0441\u043f\u0440\u0430\u0432\u0430 \u043d\u0430\u043b\u0435\u0432\u043e \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043f\u043e\u0437\u0438\u0446\u0438\u044e rg \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0433\u043e \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0430 \u0441 \u043b\u0435\u0432\u044b\u043c \u043a\u043e\u043d\u0446\u043e\u043c \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 lf. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 rg \u043f\u0435\u0440\u0435\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c: rg\u2009=\u2009min(rg,\u2009z[lf]). \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0442\u0435\u0440\u0430\u0446\u0438\u0438 \u043d\u0443\u0436\u043d\u043e \u043f\u0440\u0438\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 rg\u2009-\u2009lf\u2009+\u20091.\n\"\"\"\n\n\ndef main():\n    from sys import stdin\n    n, m = list(map(int, input().split()))\n    n += 1\n    aa, pos, duo = [0] * n, [0] * n, [0] * n\n    for i, a in enumerate(map(int, input().split()), 1):\n        aa[i] = a\n        pos[a] = i\n    for s in stdin.read().splitlines():\n        x, y = list(map(int, s.split()))\n        px, py = pos[x], pos[y]\n        if px > py:\n            if duo[x] < py:\n                duo[x] = py\n        else:\n            if duo[y] < px:\n                duo[y] = px\n    res = mx = 0\n    for i, a in enumerate(aa):\n        if mx < duo[a]:\n            mx = duo[a]\n        res += i - mx\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def f():\n    sizes = input().split(' ')\n    n, m = int(sizes[0]), int(sizes[1]) \n    permStr = input().split(' ')\n    pairsStr = [input() for i in range(m)]\n\n    indexes = [0 for i in range(n+1)]\n    for i in range(n):\n        indexes[int(permStr[i])] = i+1\n    lowerNums = [0 for i in range(n+1)]\n\n    for i in range(m):\n        pair = pairsStr[i].split(\" \")\n        a, b = indexes[int(pair[0])], indexes[int(pair[1])]\n        if a < b:\n            l = a\n            h = b\n        else:\n            l = b\n            h = a\n        if l > lowerNums[h]:\n            lowerNums[h] = l\n\n    counter = 0\n    left = 0\n    for i in range(1,n+1):\n        candidate = lowerNums[i]\n        if candidate > left:\n            r=i-1-left\n            q=i-1-candidate\n            counter += (r*(r-1) - q*(q-1))//2\n            left = candidate\n    r=i-left\n    counter += r*(r-1)//2\n\n    print(counter + n)\n\n\nf() \n", "def main():\n    from sys import stdin\n    n, m = list(map(int, input().split()))\n    n += 1\n    aa, pos, duo = [0] * n, [0] * n, [0] * n\n    for i, a in enumerate(map(int, input().split()), 1):\n        aa[i] = a\n        pos[a] = i\n    for s in stdin.read().splitlines():\n        x, y = list(map(int, s.split()))\n        px, py = pos[x], pos[y]\n        if px > py:\n            if duo[x] < py:\n                duo[x] = py\n        else:\n            if duo[y] < px:\n                duo[y] = px\n    res = mx = 0\n    for i, a in enumerate(aa):\n        if mx < duo[a]:\n            mx = duo[a]\n        res += i - mx\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n\n\n\n# Made By Mostafa_Khaled\n\n__starting_point()", "#!/usr/bin/env python3\n \n\n\nimport sys\n\ndef solver():\n    import re\n    lines = iter(sys.stdin.read().split('\\n'))\n    n, m = tuple(map(int, next(lines).split(' ')))\n    revp = [0, ] * (n+1)\n    for i, val in enumerate(map(int, next(lines).split(' '))):\n        revp[val] = i\n    pairs = [-1] * (n+1)\n    pairs[-1] = n-1\n    for i in range(m):\n        a, b = tuple(map(int, next(lines).split(' ')))\n        a, b = revp[a], revp[b]\n        if b > a:\n            a, b = b, a\n        pairs[a] = max(pairs[a], b)\n    res = 0\n    pos = 0\n    for right, left in enumerate(pairs):\n        if left == -1:\n            continue\n        for i in range(pos, left+1):\n            res = res + right - i\n        pos = max(pos, left + 1)\n    return res\n        \ndef main():\n    res = solver()\n    sys.stdout.write(\"{}\\n\".format(res))\n    return 0\n \ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\n \n\n \ndef solver():\n    import sys\n    it = (int(x) for line in sys.stdin.read().splitlines() for x in line.split(' '))\n    n, m = next(it), next(it)\n    revp = [0, ] * (n+1)\n    for i in range(n):\n        revp[next(it)] = i\n    pairs = [-1] * (n+1)\n    pairs[-1] = n-1\n    for _ in range(m):\n        a, b = next(it), next(it)\n        a, b = revp[a], revp[b]\n        if b > a:\n            a, b = b, a\n        pairs[a] = max(pairs[a], b)\n    res = 0\n    pos = 0\n    for right, left in enumerate(pairs):\n        if left == -1:\n            continue\n        for i in range(pos, left+1):\n            res = res + right - i\n        pos = max(pos, left + 1)\n    return res\n        \ndef main():\n    import sys\n    res = solver()\n    sys.stdout.write(\"{}\\n\".format(res))\n    return 0\n \ndef __starting_point():\n    main()\n\n__starting_point()", "from sys import stdin\n\n\ndef main():\n    n, k = list(map(int, stdin.readline().split()))\n    ar = list(map(int, stdin.readline().split()))\n    lk = {ar[i] - 1: i for i in range(n)}\n    pair = [-1 for _ in range(n)]\n    for _ in range(k):\n        x, y = list(map(int, stdin.readline().split()))\n        if lk[y - 1] > lk[x - 1]:\n            pair[y - 1] = max(pair[y - 1], lk[x - 1])\n        else:\n            pair[x - 1] = max(pair[x - 1], lk[y - 1])\n    start = 0\n    end = 0\n    ok = True\n    ans = 0\n    while end < n:\n        while end < n and ok:\n            curr = ar[end] - 1\n            if start <= pair[curr]:\n                ok = False\n            else:\n                end += 1\n        if end < n:\n            while start <= pair[ar[end] - 1]:\n                ans += end - start\n                start += 1\n        else:\n            ans += (end - start + 1) * (end - start) // 2\n        ok = True\n    print(ans)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]