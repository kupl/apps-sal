["a, A = list(map(int,input().split()))\nb, B = list(map(int,input().split()))\nc = input()\nc = int(c[:2]) * 60 + int(c[-2:])\nd = 0\nfor i in range(5 * 60, 24 * 60, b):\n    if i < c + A and i + B > c:\n        d += 1\nprint(d)\n", "a,ta = list(map(int,input().split()))\nb,tb = list(map(int,input().split()))\nh,m = list(map(int,input().split(\":\")))\nm += h * 60\nmint = m - tb\nmaxt = m + ta\nm2 = 300\nans = 0\nwhile 1440 > m2:\n    if m2 > mint and maxt > m2:\n        ans += 1\n    m2 += b\nprint(ans)\n", "a, t1 = map(int, input().split())\nb, t2 = map(int, input().split())\nhour, minute = map(int, input().split(':'))\nminutef = minute + hour * 60 + t1\nminutes = minute + hour * 60 - t2\ncnt = 0\ntime =  300\n\nwhile time < minutef and time < 240 * 6:\n    if time > minutes:\n        cnt += 1\n    time += b\nprint(cnt)", "import sys\nimport math\nimport itertools as it\nimport operator as op\nimport fractions as fr\n\n\na,ta = map(int, sys.stdin.readline().split())\nb,tb = map(int, sys.stdin.readline().split())\nsh, sm = map(int, sys.stdin.readline().strip().split(':'))\n\nsme = sh * 60 + sm\n\n\nstart = sme - tb\nend = sme + ta\n\nlast_bus_B_min = int(math.ceil((19 * 60) / b)) * b + 300\nsch_B = list(range(300, last_bus_B_min, b))\n\nt = filter(lambda t: (t > start) and (t < end), sch_B)\nprint(len(list(t)))", "a, ta = map(int, input().split())\nb, tb = map(int, input().split())\nsl = input().split(':')\ns = 60 * int(sl[0]) + int(sl[1])\nprint(sum(1 for i in range(5 * 60, 24 * 60, b) if i < s + ta and i + tb > s))", "#!/usr/bin/env python\na, t_a = list(map(int, input().split()))\nb, t_b = list(map(int, input().split()))\nhh, mm = list(map(int, input().split(sep = ':')))\nstart_time = (hh - 5) * 60 + mm\nbuses = []\nfor time in range((24 - 5) * 60):\n    if time < start_time:\n        buses = [item - 1 for item in buses if item != 1]\n        if time % b == 0:\n            buses.append(t_b)\n    elif time == start_time:\n        buses = [item - 1 for item in buses if item != 1]\n        z = len(buses)\n    if time >= start_time and time < start_time + t_a:\n        if time % b == 0:\n            z += 1\nprint(z)\n", "a, ta = list(map(int, input().split()))\nb, tb = list(map(int, input().split()))\nh, m = list(map(int, input().split(':')))\n\ncnt = 1139 // b\n\nans = 0\n\nbeg = h * 60 + m - tb\nend = h * 60 + ta + m\n\nfor i in range(cnt + 1):\n    if beg < b * i + 5 * 60 < end:\n        ans += 1\n\nprint(ans)\n", "a,b=map(int,input().split())\nn,m=map(int,input().split())\nt1,t2=map(int,input().split(':'))\nh=t1-5\nt2=t2\nst=t2+h*60\nfin=st+b\nnow=0\nans=0\nwhile now<fin and now<1140:\n    if now+m>st:\n        ans+=1\n    now+=n\nprint(ans)", "[a,ta]=[int(i) for i in input().split()]\n[b,tb]=[int(i) for i in input().split()]\n[h,m]=[int(i) for i in input().split(':')]\nxa=h*60+m\nya=xa+ta\nans=0\nfor xb in range(300,24*60,b):\n    yb=xb+tb\n    if(max(xa,xb)<min(ya,yb)): ans+=1\nprint(ans)", "3\n# -*- config:utf-8 -*-\n\nfrom sys import stdin\nfrom math import ceil\n\n\ndef getdata():\n    s = stdin.readline()\n    s = s.rstrip()\n    s = s.split(' ')\n    s = [int(i) for i in s]\n    a, ta = s\n    s = stdin.readline()\n    s = s.rstrip()\n    s = s.split(' ')\n    s = [int(i) for i in s]\n    b, tb = s\n    s = stdin.readline()\n    s = s.rstrip()\n    s = s.split(':')\n    s = [int(i) for i in s]\n    dth, dtm = s\n    dtm = dth * 60 + dtm\n    return (a, ta, b, tb, dtm)\n\n\ndef getfile():\n    f = open(\"test.txt\")\n    s = f.readline()\n    s = s.rstrip()\n    s = s.split(' ')\n    s = [int(i) for i in s]\n    a, ta = s\n    s = f.readline()\n    s = s.rstrip()\n    s = s.split(' ')\n    s = [int(i) for i in s]\n    b, tb = s\n    s = f.readline()\n    s = s.rstrip()\n    s = s.split(':')\n    s = [int(i) for i in s]\n    dth, dtm = s\n    dtm = dth * 60 + dtm\n    f.close()\n    return (a, ta, b, tb, dtm)\n\n\ndef run1():\n    starttime = 5 * 60\n    endtime = 23 * 60 + 59\n    # a,ta,b,tb,dtm=getdata()\n    a, ta, b, tb, dtm = getfile()\n    b_first_dt = dtm - tb\n    if b_first_dt < starttime:\n        b_first_dt = 0\n    else:\n        b_first_dt = b_first_dt - starttime\n    b_last_dt = dtm + ta\n    if b_last_dt > endtime:\n        b_last_dt = endtime - starttime\n    else:\n        b_last_dt = b_last_dt - starttime\n    b_first_dt = ceil(b_first_dt / b) * b\n    if b_first_dt > endtime - starttime:\n        b_first_dt -= b\n    b_last_dt = b_last_dt // b * b\n    cnt = (b_last_dt - b_first_dt) // b + 1\n    if b_last_dt == (dtm + ta - starttime):\n        cnt -= 1\n    print(cnt)\n\n\ndef check_time(bus_departure_time, starttime, endtime):\n    if bus_departure_time < starttime:\n        return starttime\n    if bus_departure_time > endtime:\n        return endtime\n    return bus_departure_time\n\n\ndef get_actual_first(first_bus_departure_time, starttime, endtime, b):\n    tmp = ceil((first_bus_departure_time - starttime) / b) * b\n    if tmp > (endtime - starttime):\n        tmp = endtime - starttime\n    return tmp\n\n\ndef get_actual_last(last_bus_departure_time, starttime, endtime, b):\n    tmp = (last_bus_departure_time - starttime) // b * b\n    if tmp > (endtime - starttime):\n        tmp = endtime - starttime\n    return tmp\n\n\ndef run():\n    starttime = 5 * 60\n    endtime = 23 * 60 + 59\n    a, ta, b, tb, dtm = getdata()\n    # a,ta,b,tb,dtm=getfile()\n    first_bus_departure_time = dtm - tb\n    last_bus_departure_time = dtm + ta\n    first_bus_departure_time = check_time(first_bus_departure_time, starttime, endtime)\n    last_bus_departure_time = check_time(last_bus_departure_time, starttime, endtime)\n    first_bus_departure_time = get_actual_first(first_bus_departure_time, starttime, endtime, b)\n    last_bus_departure_time = get_actual_last(last_bus_departure_time, starttime, endtime, b)\n    cnt = (last_bus_departure_time - first_bus_departure_time) // b + 1\n    if (dtm + ta - starttime) == last_bus_departure_time:\n        cnt -= 1\n    if (dtm - starttime) == first_bus_departure_time + tb:\n        cnt -= 1\n    print(cnt)\n\n\ndef __starting_point():\n    run()\n\n__starting_point()", "a,ta=list(map(int,input().split(' ')))\n#print (a,ta)\nb,tb=list(map(int,input().split(' ')))\n\ntime=input()\n\nhour=int(time[0:2])\nmint=int(time[3:5])\nlow=(hour-5)*60+mint\nup=low+ta\n#print(low,up)\nans=0\nfor i in range(0,19*60,b):\n\tl=i\n\th=i+tb\n\tif not (h <= low or l >= up):\n\t\tans+=1\nprint (ans)\n#print(hour)\n", "from math import ceil, floor\n\na, ta = map(int, input().split())\nb, tb = map(int, input().split())\nh, m = map(int, input().split(\":\"))\n\nmi = 0\nma = 23*60 + 59 - 5*60\ncur = (h - 5) * 60 + m\n\nstart = min(ma, max(cur - tb, 0))\nend = max(mi, min(ma, cur + ta))\n\nstart = ceil(start / b) * b\nend = floor(end / b) * b\n\nr = int((end-start) / b) + 1\n\nif start == cur - tb:\n    r -= 1\n\nif end == cur + ta:\n    r -= 1\n\nprint(r)", "a, ta = list(map(int, input().split()))\nb, tb = list(map(int, input().split()))\nhour, minutes = list(map(int, input().split(':')))\ntime_dep = hour * 60 + minutes - 300\ncount = 0\nfor i in range(0, 1140, b):\n    if i + tb > time_dep and i < time_dep + ta:\n        count += 1\n        #print(i, i + tb, count)\nprint(count)\n", "a,ta = list(map(int,input().split()))\nb,tb = list(map(int,input().split()))\nh,m  = list(map(int,input().split(':')))\n\ntime = (h-5)*60+m\nr = time % b\nif r >= tb:\n    t2 = time + b - r\nelse:\n    t2 = time - r - b * ((time - r - max(time - tb + 1, 0)) // b)\nt3 = min(time + ta, 19 * 60) - 1\n\nif t3 < t2:\n    print(0)\nelse:\n    print((t3 - t2)//b+1)\n", "a, ta = map(int, input().split())\nb, tb = map(int, input().split())\ns=input()\nha=int(s[0])*10+int(s[1])\nma=int(s[3])*10+int(s[4])\n\nstartH=ha*60+ma\nendH=startH+ta\nst=300\nk=0\nwhile st<endH and st < 1440:\n    if st+tb>startH:\n        k+=1\n    st = st + b\nprint(k)", "a, ta = list(map(int, input().split()))\nb, tb = list(map(int, input().split()))\nh,m = list(map(int, input().split(\":\")))\nd = 60*h+m\nc = 300\nr = 0\nwhile c <= d - tb:\n    c += b\nwhile c < min(24*60,d + ta):\n    c += b\n    r += 1\nprint(r)\n", "def solve(a, t1, t2):\n    l1 = t1 - (t1 - 300) % a + a\n    if (l1 < 300):\n        l1 = 300\n    l2 = t2 - (t2 - 300) % a\n    if (l2 > 1439):\n        l2 = 1439\n    if (l2 < l1):\n        return 0\n    return (l2-l1) // a + 1 - (l2 == t2)\n    \ndef trans(h, m):\n    return 60 * h + m\n    \ndata1 = [int(x) for x in input().split()]\ndata2 = [int(x) for x in input().split()]\ndata3 = input()\nh0 = int(data3[0:2])\nm0 = int(data3[-2:])\nt0 = trans(h0, m0)\nsol = solve(data2[0], t0 - data2[1], t0 + data1[1])\nprint(sol)", "a, ta = map(int, input().split())\nb, tb = map(int, input().split())\nsl = input().split(':')\ns = 60 * int(sl[0]) + int(sl[1])\nprint(sum(1 for i in range(5 * 60, 24 * 60, b) if i < s + ta and i + tb > s))", "a, ta = list(map(int, input().split(' ')))\nb, tb = list(map(int, input().split(' ')))\ndepart = tuple(map(int, input().split(':')))\n\n\ndepart_t = 60*depart[0] + depart[1]\n\narrival = depart_t + ta\n\n\ncount = 0\n\nct = 5*60\nwhile ct < arrival and ct < 24*60:\n\tif ct > depart_t - tb:\n\t\tcount += 1\n\tct += b\n\nprint(count)\n# busses must be on the road between depart and depart + ta\n", "s=input().split()\na=int(s[0])\nta=int(s[1])\ns=input().split()\nb=int(s[0])\ntb=int(s[1])\ns=input().split(':')\nhh=int(s[0])\nmm=int(s[1])\n\nstarttime=hh*60 + mm\nendtime=starttime+ta\n\ni=300\nl=[]\nwhile(i<1440):\n\tl.append(i);\n\ti+= b;\nlength=len(l)\nc=0\nfor i in range(0, length):\n\tif(l[i] < endtime and l[i]+tb >starttime):\n\t\tc+=1\n\nprint(c)", "import math\n\n[a, t_a] = map(int,input().split(\" \"))\n[b, t_b] = map(int,input().split(\" \"))\n[h, m] = map(int,input().split(\":\"))\nmm = h * 60 + m\n\nfirst_bus = 5*60\nstart = max(first_bus, mm - t_b + 1) - first_bus\nend = min(60*23+59, mm + t_a - 1) - first_bus\n\n# print(start, end)\n# print(math.ceil(start/b), int(end/b))\nprint(int(end/b) - math.ceil(start/b) + 1)", "def meet(a, b):\n    return max(a[0], b[0]) < min(a[1], b[1])\n\na, ta = list(map(int, input().split()))\nb, tb = list(map(int, input().split()))\nh, m = list(map(int, input().split(':')))\nts = (h - 5) * 60 + m\nts = (ts, ts + ta)\ncnt = 0\n\ni = 0\nwhile i * b <= (23 - 5) * 60 + 59:\n    if meet((i*b, i*b + tb), ts):\n        cnt += 1\n    i += 1\n\nprint(cnt)\n", "f1,t1 = [int(x) for x in input().split()]\nf2,t2 = [int(x) for x in input().split()]\n\nminutosTotales = 23*60+59-5*60\n\nbuses = []\nfor hora in range(0,minutosTotales+1,f2):\n    buses.append((hora,hora+t2))\n\nhoraInicio = input().split(\":\")\nhoraInicio = (int(horaInicio[0])-5)*60+int(horaInicio[1])\n\nc=0\nfor bus in buses:\n    if not(bus[1]<=horaInicio or horaInicio+t1<=bus[0]):\n        c+=1\nprint(c)\n", "a, t_a = list(map(int, input().split()))\nb, t_b = list(map(int, input().split()))\nh, m = list(map(int, input().split(':')))\n\ntime = h * 60 + m\n\nstart = time\nend = time + t_a - 1\nstart_time = 300\nend_time = start_time + t_b - 1\n\nintersections = 0\n\nwhile start_time <= 1439:\n    if end >= start_time and end_time >= start:\n        intersections += 1\n\n    start_time += b\n    end_time = start_time + t_b - 1\n\nprint(intersections)\n", "def main():\n    a, ta = list(map(int, input().split()))\n    b, tb = list(map(int, input().split()))\n    h, m = list(map(int, input().split(':')))\n    res, lo = 0, h * 60 + m - 300\n    hi = lo + ta\n    print(sum(max(lo, t) < min(hi, t + tb) for t in range(0, 1140, b)))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]