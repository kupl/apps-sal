["n, m, k = map(int, input().split())\na, b = map(int, input().split())\na -= 1\nb -= 1\ndef p(x):\n\treturn x // (m * k)\ndef e(x):\n\treturn (x - p(x) * m * k) // k\ndef lift(x):\n\treturn min(5 * x, 10 + x)\n\t\nif p(a) == p(b):\n\tdif = abs(e(a) - e(b))\n\tprint(lift(dif))\nelse:\n\tprint(lift(e(a)) + 15 * min((p(a) - p(b) + n) % n, (p(b) - p(a) + n) % n) + lift(e(b)))", "read = lambda: list(map(int, input().split()))\nn, m, k = read()\na, b = read()\npa = (a - 1) // (m * k) + 1\nfa = ((a - 1) % (m * k)) // k + 1\npb = (b - 1) // (m * k) + 1\nfb = ((b - 1) % (m * k)) // k + 1\nTp = min(abs(pa - pb), abs(pa - pb + n), abs(pb - pa + n)) * 15\nif pa == pb:\n    Tf = min(abs(fa - fb) * 5, abs(fa - fb) + 10)\nelse:\n    cnt1 = min((fa - 1) * 5, (fa - 1) + 10)\n    cnt2 = min((fb - 1) * 5, (fb - 1) + 10)\n    Tf = cnt1 + cnt2\nans = Tp + Tf\nprint(ans)\n", "import sys,math\ndef numb(ch):\n    pod=ch//(m*k)\n    if ch%(m*k)!=0:\n        pod+=1\n    et=((ch-1)%(m*k)+1)//k\n    if ((ch-1)%(m*k)+1)%k!=0:\n        et+=1\n    return(pod,et)\n    \n    \nans=0\nn,m,k=map(int,input().split())\na,b=map(int,input().split())\nans=0\nf_x,f_y=numb(a)\na_x,a_y=numb(b)\nif f_x!=a_x:\n    z=min(math.fabs(f_x-a_x),math.fabs(n-max(f_x,a_x)+min(f_x,a_x)))\n    ans+=15*z\n    ans+=min(10+f_y-1,(f_y-1)*5)\n    ans+=min(10+a_y-1,(a_y-1)*5)\n    print(int(ans))\nelse:\n    ans+=min(10+math.fabs(a_y-f_y),math.fabs(a_y-f_y)*5)\n    print(int(ans))", "n, m, k = map(int, input().split())\nkv1, kv2 = map(int, input().split())\nkv1 -= 1\nkv2 -= 1\np1 = (kv1) // (m * k)\np2 = (kv2) // (m * k)\nkv1 %= k * m\nkv2 %= k * m\nat1 = kv1 // k\nat2 = kv2 // k\nif (p1 == p2):\n    print(min(10 + abs(at1 - at2), 5 * abs(at1 - at2)))\nelse:\n    #print(p1, p2, at1, at2)\n    res = 15 * min(abs(p1 - p2), min(p1, p2) + n - max(p1, p2))\n    res += min(10 + at1, at1 * 5)\n    res += min(10 + at2, at2 * 5)\n    print(res)", "from math import *\nn, m, k = list(map(int, input().split()))\na, b = list(map(int, input().split()))\npod_a = ceil(a / (m * k))\npod_b = ceil(b / (m * k))\naa = a % (m * k)\nif aa == 0:\n    aa = m * k\nbb = b % (m * k)\nif bb == 0:\n    bb = m * k\net_a = ceil(aa / k)\net_b = ceil(bb / k)\n#print(pod_a, pod_b)\n#print(et_a, et_b)\ncnt = 0\nif pod_a != pod_b:\n    cnt += min(5 * (et_a - 1), 10 + et_a - 1)\n    #print(cnt)\n    et_a = 1\n    if pod_a > pod_b:\n        pod_b, pod_a = pod_a, pod_b\n    cnt += min(pod_b - pod_a, n - (pod_b - pod_a)) * 15\n    #print(cnt)\ncnt += min(5 * abs(et_a - et_b), 10 + abs(et_a - et_b))\nprint(cnt)\n", "def f(a, b):\n    return min(abs(a - b) * 5, abs(a - b) + 10)\n\ndef main():\n    n, m, k = map(int, input().split())\n    a, b = map(int, input().split())\n    pa, pb = (a - 1) // (m * k), (b - 1) // (m * k)\n    ans = min((pa - pb + n) % n, (-pa + pb + n) % n) * 15\n    ea, eb = (a - 1) // k % m, (b - 1) // k % m\n    if ans == 0:\n        ans = f(ea, eb)\n    else:\n        ans += f(ea, 0) + f(eb, 0)\n    print(ans)\n    \n\n\nmain()", "n, m, k=map(int, input().split())\na, b = map(int, input().split())\na-=1\nb-=1\nan=a//(m*k)\nam=(a%(m*k))//k\nbn=b//(m*k)\nbm=(b%(m*k))//k\nres=0\nn-=1\nif an!=bn:\n    res=res+min(10+bm,bm*5)+min(10+am,am*5)\n    if an < bn:\n        res=res+(min(bn-an, n-bn+an+1))*15\n    else:\n        res=res + (min((an-bn), bn+n-an+1))*15\nelse:\n    x=abs(bm-am)\n    res = res + min(10+x, x*5)\nprint(res)", "import math\nn, m, k = list(map(int, input().split()))\na, b = list(map(int, input().split()))\n\np1 = math.ceil(a / (m * k))\ne1 = math.ceil((a - (p1 - 1) * (m * k)) / k)\nif e1 == 0:\n    e1 = m\n\np2 = math.ceil(b / (m * k))\ne2 = math.ceil((b - (p2 - 1) * (m * k)) / k)\nif e2 == 0:\n    e2 = m\n\nans = 0\nif p1 == p2:\n    ans = min(abs(e1 - e2) + 10, abs(e1 - e2) * 5)\nelse:\n    ans = min(e1 - 1 + 10, (e1 - 1) * 5) + min((p1 - p2) % n, (p2 - p1) % n) * 15 + min(e2 - 1 + 10, (e2 - 1) * 5)\nprint(ans)", "from math import *\nn, m, k = map(int, input().split())\na, b = map(int, input().split())\na -= 1\nb -= 1\npoda, podb = a // (m * k), b // (m * k)\nlevela, levelb = (a % (m * k)) // k, (b % (m * k)) // k\ntimepod = min(abs(poda - podb), n - abs(poda - podb)) * 15\nif poda == podb:\n    if levela == levelb:\n        print(0)\n    else:\n        print(min(abs(levela - levelb) * 5, 10 + abs(levela - levelb)))\nelse:\n    print(timepod + min(10 + levela, levela * 5) + min(10 + levelb, levelb * 5))", "n, m, k = list(map(int, input().split()))\na, b = list(map(int, input().split()))\npodE = a // (m * k)\nif a % (m * k) != 0:\n    podE += 1\npodN = b // (m * k)\nif b % (m * k) != 0:\n    podN += 1\netE = (a % (m * k)) // k\nif (a % (m * k)) % k != 0:\n    etE += 1\netN = (b % (m * k)) // k\nif (b % (m * k)) % k != 0:\n    etN += 1\nif podE == 0:\n    podE = n\nif etE == 0:\n    etE = m\nif podN == 0:\n    podN = n\nif etN == 0:\n    etN = m\n\nif podE == podN and etE == etN:\n    print(0)\nelif podE == podN:\n    print(min(abs(etE - etN) * 5, 10 + abs(etE - etN)))\nelse:\n    down = min((etE - 1) * 5, 10 + (etE - 1))\n    move = min(abs(podE - podN), (n - max(podN, podE)) + min(podE, podN)) * 15\n    up = min((etN - 1) * 5, 10 + (etN - 1))\n    print(down + move + up)\n", "[n,m,k]=[int(i) for i in input().split()]\n[n1,n2]=[int(i) for i in input().split()]\ne1=0\ne2=0\np1=n1//(m*k)\nif(p1*m*k!=n1):\n    p1+=1\nelse: e1=m\np2=n2//(m*k)\nif(p2*m*k!=n2): p2+=1\nelse:e2=m\nt=0\nt+=min(abs(p2-p1),min(p2+abs(n-p1),p1+abs(n-p2)))*15\nif (e1==0):\n    e1=n1%(m*k)//k\n    if(n1%k!=0): e1+=1\nif (e2==0):\n    e2=n2%(m*k)//k\n    if(n2%k!=0): e2+=1\nif(p1!=p2):\n    if(e1<4):\n        t+=(e1-1)*5\n    if(e2<4):\n        t+=(e2-1)*5\n    if(e1>=4):\n        t+=10+e1-1\n    if (e2 >= 4):\n        t += 10 + e2 - 1\nelse:\n    e=abs(e1-e2)\n    if (e< 3):\n        t += (e) * 5\n    if (e >= 3):\n        t += 10 + e\n\nprint(t)", "n,m,k=list(map(int,input().split()))\na,b=list(map(int,input().split()))\np=[]\nfor i in range(1,n+1):\n    p.append(i*m*k)\nit=[[0]*n for i in range(m)]\nfor i in range(m):\n    for j in range(n):\n        it[i][j]=j*m*k+k*(i+1)\nfl1=True\nfl2=True\nfor i in range(n):\n    for j in range(m):\n        if it[j][i]-a>=0 and fl1:\n            p1=i+1\n            it1=j+1\n            fl1=False\n        if it[j][i]-b>=0 and fl2:\n            p2=i+1\n            it2=j+1\n            fl2=False\n        if not fl1 and not fl2:\n            break\nif p1!=p2:\n    t1=min(it1-1+10,5*(it1-1))\n    if p1>p2:\n        s1=p1\n        t21=0\n        while s1!=p2:\n            s1+=1\n            t21+=1\n            if s1>n:\n                s1//=n\n    else:\n        s1=p2\n        t21=0\n        while s1!=p1:\n            s1+=1\n            t21+=1\n            if s1>n:\n                s1//=n\n    t21*=15\n    t2=min(t21,(abs(p2-p1))*15)\n    t3=min(it2-1+10,5*(it2-1))\n    t=t1+t2+t3\n    print(t)\nelse:\n    t=min(abs(it2-it1)*5,10+abs(it2-it1))\n    print(t)\n\n", "x = list(map(int, input().split()))\na, b = list(map(int, input().split()))\nn = x[0]\nm = x[1]\nk = x[2]\nl1 = 0\np1 = 0\nl2 = 0\np2 = 0\nt = 0\nif a < m * k:\n    p1 = 1\nelse:\n    if a % (m * k) == 0:\n        p1 = a // (m * k)\n    else:\n        p1 = a // (m * k) + 1\nif (a - (p1 - 1) * m * k) < k:\n    l1 = 1\nelse:\n    if (a - (p1 - 1) * m * k) % k == 0:\n        l1 = (a - (p1 - 1) * m * k) // k\n    else:\n        l1 = (a - (p1 - 1) * m * k) // k + 1\nif b < m * k:\n    p2 = 1\nelse:\n    if b % (m * k) == 0:\n        p2 = b // (m * k)\n    else:\n        p2 = b // (m * k) + 1\nif (b - (p2 - 1) * m * k) < k:\n    l2 = 1\nelse:\n    if (b - (p2 - 1) * m * k) % k == 0:\n        l2 = (b - (p2 - 1) * m * k) // k\n    else:\n        l2 = (b - (p2 - 1) * m * k) // k + 1\nif p1 == p2:\n    if l1 == l2:\n        t = 0\n    else:\n        t = min((abs((l1 - l2)) + 10), abs((l1 - l2)) * 5)\nelse:\n    if l1 > 1:\n        t = min((l1 - 1) * 5, l1 + 10 - 1)\n    else:\n        t = 0\n    t += 15 * min(abs((p1 - p2)), n - max(p1, p2) + min(p1, p2))\n    if l2 > 1:\n        t += min((10 + l2 - 1), (l2 - 1) * 5)\nprint(t)\n\n\n\n\n\n"]