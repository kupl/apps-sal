["def main():\n    n, m, h = map(int, input().split())\n    row = list(map(int, input().split()))\n    col = list(map(int, input().split()))\n    mat = [list(map(int, input().split())) for _ in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if mat[i][j]:\n                mat[i][j] = min(col[i], row[j])\n    for arr in mat: print(*arr)\n    return 0\nmain()", "n, m, h = map(int, input().split())\ntop = list(map(int, input().split()))\nleft = list(map(int, input().split()))\n\nmatrix = [list(map(int, input().split())) for i in range(n)]\nfor i in range(n):\n    for j in range(m):\n        if matrix[i][j] == 1:\n            print(min(left[i], top[j]), end=\" \")\n        else:\n            print(0, end=\" \")\n    print()\n", "# AC\nimport sys\n\n\nclass Main:\n    def __init__(self):\n        self.buff = None\n        self.index = 0\n\n    def __next__(self):\n        if self.buff is None or self.index == len(self.buff):\n            self.buff = sys.stdin.readline().split()\n            self.index = 0\n        val = self.buff[self.index]\n        self.index += 1\n        return val\n\n    def next_int(self):\n        return int(next(self))\n\n    def cal(self, s):\n        if len(s) == 1:\n            return s[0]\n        if s[0] == 0:\n            return self.cal(s[1:])\n        v = 1\n        for c in s:\n            v *= c\n        return v\n\n    def solve(self):\n        n = self.next_int()\n        m = self.next_int()\n        h = self.next_int()\n        f = [self.next_int() for _ in range(0, m)]\n        l = [self.next_int() for _ in range(0, n)]\n        for i in range(0, n):\n            rs = []\n            for j in range(0, m):\n                if self.next_int() == 0:\n                    rs.append(0)\n                else:\n                    rs.append(min(f[j], l[i]))\n            print(' '.join([str(x) for x in rs]))\n\n\ndef __starting_point():\n    Main().solve()\n\n__starting_point()", "from sys import stdin\n\nn, m, h = list(map(int, stdin.readline().split()))\n\ncols = list(map(int, stdin.readline().split()))\nrows = list(map(int, stdin.readline().split()))\n\ntop = [list(map(int, stdin.readline().split())) for i in range(n)]\n\nans = [[0 if top[i][f] == 0 else min(rows[i], cols[f]) for f in range(m)] for i in range(n)]\nprint('\\n'.join([' '.join(map(str, r)) for r in ans]))\n\n", "n,m,h = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = [list(map(int,input().split())) for _ in range(n)]\n\nfor i in range(n):\n\tfor j in range(m):\n\t\tif c[i][j] == 1:\n\t\t\tc[i][j] = min(a[j],b[i])\n\nfor i in range(n):\n\tprint(*c[i])", "n, m, h = [int(i) for i in input().split()]\nfront = [int(i) for i in input().split()] # len = m\nleft = [int(i) for i in input().split()] # len = n\nA = []\nfor i in range(n):\n    B = [int(i) for i in input().split()]\n    A.append(B)\n\nans = [[0 for i in range(m)] for j in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if A[i][j]:\n            ans[i][j] = min(front[j], left[i])\nfor i in ans:\n    print(*i)\n", "from sys import stdin, stdout\nn,m,h=map(int,input().split())\nfront=list(map(int,input().split()))\nside=list(map(int,input().split()))\ntop=[None]*n\nfor i in range(n):\n         top[i]=list(map(int,input().split()))\n         for j in range(m):\n                  if(top[i][j]==1):\n                           top[i][j]=min(front[j],side[i])\nfor i in range(n):\n         for j in top[i]:\n                  print(j,end=\" \")\n         print(\"\")", "n, m, h = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = [list(map(int, input().split())) for _ in range(n)]\nd = [[0] * m for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if c[i][j]:\n            d[i][j] = min(a[j], b[i])\n\nfor i in d:\n    print(*i)\n", "kk=lambda:list(map(int,input().split()))\nll=lambda:list(kk())\nn,m,h = kk()\nfront = ll()\nleft = ll()\nfor col in range(n):\n\ttbp = []\n\tline = kk()\n\tfor row,l in enumerate(line):\n\t\ttbp.append(0 if l == 0 else min(front[row], left[col]))\n\tprint(*tbp)\n", "\nn,m,h=[int(k) for k in input().split(\" \")]\n\ncols=[int(k) for k in input().split(\" \")]\nrows=[int(k) for k in input().split(\" \")]\nmat=[]\nres=[[0 for j in range(m)] for i in range(n)]\nfor i in range(n):\n    mat+=[[int(k) for k in input().split(\" \")]]\n\nfor i in range(n):\n    for j in range(m):\n        res[i][j]=str(mat[i][j]*min(cols[j],rows[i]))\n    print(\" \".join(res[i]))\n\n    \n\n", "N, M, H = map(int, input().split())\n\nFV = list(map(int, input().split()))\nLV = list(map(int, input().split()))\n\nTV = []\n\nfor n in range(N):\n    row = list(map(int, input().split()))\n    TV.append(row)\n    \nfor r in range(N):\n    for c in range(M):\n        if TV[r][c] == 1:\n            TV[r][c] = min(FV[c], LV[r])\n\nfor t in TV:\n    for s in t:\n        print(s, end=' ')\n    print()\n    \n    \n\n", "from collections import defaultdict\nn,m,h = list(map(int,input().split()))\na = list(map(int,input().split()))  # m items\nb = list(map(int,input().split()))  # n items 0<=b<=h\n\n\nfront = defaultdict(int)\nfor i, x in enumerate(a):\n    front[i] = x\nleft = defaultdict(int)\nfor i, x in enumerate(b):\n    left[i] = x\n\nout = [[0 for x in range(m)] for y in range(n)]\nfor i in range(n):\n    x = list(map(int,input().split())) # m items\n    for j, b in enumerate(x):\n        if b:\n            out[i][j] = min(left[i],front[j])\n\nfor x in out:\n    print(*x)\n", "N, M, H = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nt = [list(map(int, input().split())) for i in range(N)]\nfor i in range(N):\n    for j in range(M):\n        if not t[i][j]: continue\n        t[i][j] = min(B[i], A[j])\n    print(' '.join(map(str, t[i])))\n", "n, m, h = list(map(int, input().split()))\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nH = [list(map(int, input().split())) for i in range(n)]\nfor i in range(n):\n    for j in range(m):\n        if H[i][j] == 1:\n            H[i][j] = min(A[j], B[i])\nfor s in H:\n    print(*s)\n", "n, m, h = list(map(int, input().split()))\nmaks_kol = list(map(int, input().split()))\nmaks_wie = list(map(int, input().split()))\ngora = [list(map(int, input().split())) for i in range(n)]\nfor i in range(n):\n\tfor j in range(m):\n\t\tif gora[i][j] == 1:\n\t\t\tgora[i][j] = min(maks_wie[i], maks_kol[j])\nfor j in range(n):\n\tfor i in range(m):\n\t\tif i < m - 1:\n\t\t\tprint(gora[j][i], end = \" \")\n\t\telse:\n\t\t\tprint(gora[j][i], end = \"\\n\")\n", "#Bhargey Mehta (Sophomore)\n#DA-IICT, Gandhinagar\nimport sys, math, queue\nsys.setrecursionlimit(1000000)\n#sys.stdin = open(\"input.txt\", \"r\")\nMOD = 10**9+7\n\nn, m, h = map(int, input().split())\nfront = list(map(int, input().split()))\nside = list(map(int, input().split()))\ntop = []\nfor i in range(n):\n    top.append(list(map(int, input().split())))\nans = [[-1 for i in range(m)] for j in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if top[i][j] == 0:\n            ans[i][j] = 0\n        else:\n            ans[i][j] = min(front[j], side[i])\n\nfor row in ans:\n    print(*row)", "n,m,h=[int(i) for i in input().split()]\na=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\nc=[[int(i) for i in input().split()] for j in range(n)]\n\nfor i in range(n):\n    target = b[i]\n    for j in range(m):\n        if c[i][j]==0: continue\n        if a[j] < target: continue\n        c[i][j] = target\nfor j in range(m):\n    target = a[j]\n    for i in range(n):\n        if c[i][j]==0: continue\n        if b[i] < target: continue\n        c[i][j] = target\nfor row in c:\n    for col in row:\n        print(col,end=' ')\n    print()\n", "import sys\n\ninput = sys.stdin.readline\n\nn, m, h = map(int, input().split())\n\nfront = list(map(int, input().split()))\nleft = list(map(int, input().split()))\ngrid = []\n\nfor i in range(n):\n    grid.append(list(map(int, input().split())))\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] == 1:\n            grid[i][j] = min(front[j], left[i])\n\nfor row in grid:\n    print(' '.join([str(x) for x in row]))", "import sys\ninput = sys.stdin.readline\n\nn,m,h=list(map(int,input().split()))\n\nA=list(map(int,input().split()))\n\nB=list(map(int,input().split()))\n\nMAP=[list(map(int,input().split())) for i in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if MAP[i][j]==0:\n            continue\n\n        MAP[i][j]=min(A[j],B[i])\n\nfor m in MAP:\n    print(*m)\n", "n,m,h = list(map(int,input().split()))\n\nfront = [int(x) for x in input().split()] # m\nleft = [int(x) for x in input().split()] # n\n\ntop = [[int(x) for x in input().split()] for _ in range(n)]\n\nbox = [[[top[nn][mm]]*h for mm in range(m)] for nn in range(n)]\n\nfor j in range(m):\n    for i in range(n):\n        for z in range(front[j],h):\n            box[i][j][z] = 0\n\nfor i in range(n):\n    for j in range(m):\n        for z in range(left[i],h):\n            box[i][j][z] = 0\n\nfor i in range(n):\n    print(' '.join(str(sum(box[i][j])) for j in range(m)))\n\n\n", "n, m, h = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\ntable = [list(map(int, input().split())) for i in range(n)]\nanswer = [[0 for i in range(m)] for j in range(n)]\nfor i in range(n):\n    for j in range(m):\n        if table[i][j] == 1:\n            answer[i][j] = min(a[j], b[i])\nfor i in range(n):\n    for j in range(m):\n        print(answer[i][j], end=' ')\n    print()\n\n            \n", "n,m,h = list(map(int,input().split()))\n\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nl = [[0] * m for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        l[i][j] = min(a[j], b[i])\nfor i in range(n):\n    p = list(map(int,input().split()))\n    for j in range(m):\n        if p[j] == 0:\n            l[i][j] = 0\nfor i in l:\n    print(*i)\n", "import sys\nsys.setrecursionlimit(20000000)\ninput = sys.stdin.readline\nn,m,h = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nx = [list(map(int,input().split())) for i in range(n)]\nans = [[0]*m for i in range(n)]\nfor i in range(n):\n    for j in range(m):\n        if x[i][j] == 1:\n            ans[i][j] = min(b[i],a[j])\nfor i in range(n):\n    print(*ans[i])"]