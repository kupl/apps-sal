["from collections import Counter\nfrom itertools import product\nn,m,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\na1 = [0]\nb1 = [0]\nfor i in range(n):\n  if a[i] == 1:\n    a1[-1] += 1\n  elif a1[-1] != 0:\n    a1.append(0)\nfor i in range(m):\n  if b[i] == 1:\n    b1[-1] += 1\n  elif b1[-1] != 0:\n    b1.append(0)\npr = []\nfor i in range(1,int(k**0.5)+1):\n  if k%i == 0 and k//i <= 40000:\n    pr.append((i,k//i))\n    if i != k//i:\n      pr.append((k//i,i))\nca = Counter(a1)\ncb = Counter(b1)\nans = 0\nfor i,j in product(ca.items(),cb.items()):\n  for x,y in pr:\n    if i[0] >= x and j[0] >= y:\n      ans += i[1]*j[1]*(i[0]-x+1)*(j[0]-y+1)\nprint(ans)", "def count(A):\n    segs = []\n    cur = 0\n    flag = 0\n    for a in A:\n        if a:\n            cur += 1\n            flag = 1\n        else:\n            if flag:\n                flag = 0\n                segs.append(cur)\n                cur = 0\n    if flag and (cur > 0):\n        segs.append(cur)\n    count = [0]*(len(A)+1)\n    for s in segs:\n        for i in range(1,s+1):\n            count[i] += (s-i+1)\n    # print(count)\n    return count\n\ndef f():\n    n, m, k = [int(s) for s in input().split()]\n    A = [int(s) for s in input().split()]\n    B = [int(s) for s in input().split()]\n    ans = 0\n    countA = count(A)\n    countB = count(B)\n    for l1 in range(1,n+1):\n        if k%l1:\n            continue\n        l2 = k//l1\n        if l2 > m:\n            continue\n        ans += countA[l1]*countB[l2]\n    print(ans)\n\nf()", "n,m,k=map(int,input().split())\na=input().split()\nb=input().split()\nans=0\nfor i in range(1,int(k**0.5)+1):\n    if(k%i==0):\n        f1=i\n        f2=k//i\n        if(f1!=f2):\n            temp1=0\n            count=0\n            for j in range(n):\n                if(a[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f1):\n                    temp1+=1\n            temp2=0\n            count=0\n            for j in range(m):\n                if(b[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f2):\n                    temp2+=1\n            #print(f1,f2,temp1,temp2)        \n            ans+=temp1*temp2\n            temp1=0\n            count=0\n            for j in range(n):\n                if(a[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f2):\n                    temp1+=1\n            temp2=0\n            count=0\n            for j in range(m):\n                if(b[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f1):\n                    temp2+=1\n            ans+=temp1*temp2\n            #print(f1,f2,temp1,temp2)   \n        else:\n            temp1=0\n            count=0\n            for j in range(n):\n                if(a[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f1):\n                    temp1+=1\n            temp2=0\n            count=0\n            for j in range(m):\n                if(b[j]=='1'):\n                    count+=1\n                else:\n                    count=0\n                if(count>=f2):\n                    temp2+=1\n            ans+=temp1*temp2\n            #print(f1,f2,temp1,temp2)   \nprint(ans)            ", "import sys\nfrom collections import defaultdict\nn,m,k=list(map(int,sys.stdin.readline().split()))\na=list(map(int,sys.stdin.readline().split()))\nb=list(map(int,sys.stdin.readline().split()))\nconsa=defaultdict(int)\nconsb=defaultdict(int)\ncount=0\narra=set()\narrb=set()\nfor i in range(n):\n    if a[i]==1:\n        count+=1\n        arra.add(count)\n        consa[count]+=1\n    else:\n        count=0\ncount=0\nfor i in range(m):\n    if b[i]==1:\n        count+=1\n        arrb.add(count)\n        consb[count]+=1\n    else:\n        count=0\narra=list(arra)\narrb=list(arrb)\narra.sort()\narrb.sort()\narra.reverse()\narrb.reverse()\nprev=0\nfor i in arra:\n    consa[i]+=prev\n    prev=consa[i]\nprev=0\nfor i in arrb:\n    consb[i]+=prev\n    prev=consb[i]\n#print(consa,'consa')\n#print(consb,'consb')\nans=0\nvis=defaultdict(int)\nfor i in range(1,n+1):\n    if k%i==0:\n        ans+=consa[i]*consb[k//i]\n        vis[k//i]+=1\nfor i in range(1,m+1):\n    if k%i==0 and vis[i]==0:\n        ans+=consb[i]*consa[k//i]\nprint(ans)\n", "N,M,K=map(int,input().split())\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\npA=[0]*(N+1)\nfor i in range(N):\n    pA[i+1]=pA[i]+A[i]\npB=[0]*(M+1)\nfor i in range(M):\n    pB[i+1]=pB[i]+B[i]\nans=0\nfor p in range(1,int(K**0.5)+1):\n    if K%p>0: continue\n    q=K//p\n    if p>q: break\n\n    X=0\n    for i in range(N+1-p):\n        if pA[i+p]-pA[i]==p: X+=1\n    Y=0\n    for i in range(M+1-q):\n        if pB[i+q]-pB[i]==q: Y+=1\n    ans+=X*Y\n    if p==q: break\n    X=0\n    for i in range(N+1-q):\n        if pA[i+q]-pA[i]==q: X+=1\n    Y=0\n    for i in range(M+1-p):\n        if pB[i+p]-pB[i]==p: Y+=1\n    ans+=X*Y\nprint(ans)", "from math import sqrt\nn, m, k = list(map(int, input().split()))\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\nac = [0] * (n + 1)\nbc = [0] * (m + 1)\n\ncs = 0\n\nfor ai in a:\n    if ai == 1:\n        cs += 1\n    if ai == 0:\n        ac[cs] += 1\n        cs = 0\nac[cs] += 1\n\ncs = 0\nfor bi in b:\n    if bi == 1:\n        cs += 1\n    if bi == 0:\n        bc[cs] += 1\n        cs = 0\nbc[cs] += 1\n\npairs = []\n\nfor i in range(1, int(sqrt(k) + 1)):\n    if k % i == 0:\n        pairs.append((i, k // i))\n\ntotal = 0\n\nfor i, j in pairs:\n    if i <= n and j <= m:\n        act = 0\n        for k in range(i, n + 1):\n            act += ac[k] * (k - i + 1)\n        bct = 0\n        for k in range(j, m + 1):\n            bct += bc[k] * (k - j + 1)\n\n        total += act * bct\n    if j <= n and i <= m and i != j:\n        act = 0\n        for k in range(j, n + 1):\n            act += ac[k] * (k - j + 1)\n        bct = 0\n        for k in range(i, m + 1):\n            bct += bc[k] * (k - i + 1)\n\n        total += act * bct\n\nprint(total)\n", "from sys import stdin\nfrom collections import defaultdict\ninput = stdin.readline\n\nn,m,k = list(map(int, input().split()))\n\nn_map = [0] * (n + 1)\nm_map = [0] * (m + 1)\n\nl1 = list(map(int, input().split()))\nl2 = list(map(int, input().split()))\n\ncount = 0\nfor elem in l1:\n    if elem == 0:\n        count = 0\n    else:\n        count += 1\n        n_map[count] += 1\n\ncount = 0\nfor elem in l2:\n    if elem == 0:\n        count = 0\n    else:\n        count += 1\n        m_map[count] += 1\n\nfor idx in range(n-1, -1, -1):\n    n_map[idx] += n_map[idx+1]\nfor idx in range(m-1, -1, -1):\n    m_map[idx] += m_map[idx+1]\n\ncount = 0\nfor i in range(1, n+1):\n    if k % i or k//i >= len(m_map):\n        continue\n    count += m_map[k//i] * n_map[i]\nprint(count)\n", "#!/usr/bin/env python3\nimport sys\ninput = sys.stdin.readline\nimport bisect\n\ndef divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n // i:\n                divisors.append(n//i)\n\n    divisors.sort()\n    return divisors\n\nn, m, k = map(int, input().split())\na = [int(item) for item in input().split()] + [0]\nb = [int(item) for item in input().split()] + [0]\n\nacnt = []\nbcnt = []\nc = 0\nfor item in a:\n    if item == 1:\n        c += 1\n    else:\n        acnt.append(c)\n        c = 0\nc = 0\nfor item in b:\n    if item == 1:\n        c += 1\n    else:\n        bcnt.append(c)\n        c = 0\nacnt.sort()\nbcnt.sort()\n\nans = 0\ndiv = divisors(k)\nfor a_val in div:\n    b_val = k // a_val\n    a_idx = bisect.bisect_left(acnt, a_val)\n    b_idx = bisect.bisect_left(bcnt, b_val)\n    a_total = sum(acnt[a_idx:]) - (len(acnt) - a_idx) * (a_val - 1)\n    b_total = sum(bcnt[b_idx:]) - (len(bcnt) - b_idx) * (b_val - 1)\n    ans += a_total * b_total\n\nprint(ans)", "# -*- coding: utf-8 -*-\nimport bisect\n# import heapq\n# import math\n# import random\nimport sys\nfrom collections import Counter\n# from decimal import ROUND_CEILING, ROUND_HALF_UP, Decimal\n# from functools import lru_cache, reduce\n# from itertools import combinations, combinations_with_replacement, product, permutations\n# from operator import add, mul, sub\n\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\nINF = 2**62-1\n\ndef read_int():\n    return int(input())\n\n\ndef read_int_n():\n    return list(map(int, input().split()))\n\n\ndef read_float():\n    return float(input())\n\n\ndef read_float_n():\n    return list(map(float, input().split()))\n\n\ndef read_str():\n    return input().strip()\n\n\ndef read_str_n():\n    return list(map(str, input().split()))\n\n\ndef error_print(*args):\n    print(*args, file=sys.stderr)\n\n\ndef mt(f):\n    import time\n\n    def wrap(*args, **kwargs):\n        s = time.time()\n        ret = f(*args, **kwargs)\n        e = time.time()\n\n        error_print(e - s, 'sec')\n        return ret\n\n    return wrap\n\n\ndef divisor(n):\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            yield i\n            if i != n // i:\n                yield n // i\n\n\n@mt\ndef slv(N, M, K, A, B):\n    ans = 0\n    ca = [0]\n    for v in A:\n        if v == 1:\n            ca[-1] += 1\n        else:\n            ca.append(0)\n    cb = [0]\n    for v in B:\n        if v == 1:\n            cb[-1] += 1\n        else:\n            cb.append(0)\n    ca = Counter(ca)\n    cb = Counter(cb)\n    ans += 0\n    for d in divisor(K):\n        e = K//d\n        for i, x in ca.items():\n            for j, y in cb.items():\n                if i < d or j < e:\n                    continue\n                ans += ((i-d+1) * (j-e+1)) * x * y\n    return ans\n\n\ndef main():\n    N, M, K = read_int_n()\n    A = read_int_n()\n    B = read_int_n()\n    print(slv(N, M, K, A, B))\n\n    # N = 40000\n    # M = 40000\n    # K = random.randint(1, N*M)\n    # K =10\n    # A = random.choices([0, 1], k=N)\n    # B = random.choices([0, 1], k=M)\n    # print(slv(N, M, K, A, B))\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\ninput = sys.stdin.readline\nn,m,k = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nscale = 40000\n#scale = 10\nca = [0 for _ in range(scale+1)]\ncb = [0 for _ in range(scale+1)]\nnow = 0\nfor x in a:\n  if x:\n    now += 1\n  else:\n    now = 0\n  ca[now] += 1\nnow = 0\nfor x in b:\n  if x:\n    now += 1\n  else:\n    now = 0\n  cb[now] += 1\n#print(ca)\n#print(ca)\nfor i in range(scale)[::-1]:\n  ca[i] += ca[i+1]\n  cb[i] += cb[i+1]\n#print(ca)\n#print(cb)\nans = 0\nroo = int(k**.5)\nfor i in range(1,roo+1):\n  if k % i == 0 and k // i <= scale:\n    ans += ca[i] * cb[k//i]\n    ans += cb[i] * ca[k//i]\nif roo ** 2 == k:\n  ans -= ca[roo] * cb[roo]\nprint(ans)", "import sys\ninput=sys.stdin.readline\nfrom math import sqrt\nfrom collections import defaultdict as dd\nn,m,k=list(map(int,input().split()))\nl1=list(map(int,input().split()))\nl2=list(map(int,input().split()))\ncou=0\nd1=dd(int)\nfor i in range(n):\n    if(l1[i]):\n        cou+=1\n    else:\n        cc=cou\n        for j in range(1,cou+1):\n            d1[j]+=cc\n            cc-=1\n        cou=0\ncc=cou\nfor j in range(1,cou+1):\n    d1[j]+=cc\n    cc-=1\ncou=0\n\nd2=dd(int)\ncou=0\nfor i in range(m):\n    if(l2[i]):\n        cou+=1\n    else:\n        cc=cou\n        for j in range(1,cou+1):\n            d2[j]+=cc\n            cc-=1\n        cou=0\ncc=cou\nfor j in range(1,cou+1):\n    d2[j]+=cc\n    cc-=1\ncou=0\nsk=int(sqrt(k))\nsu=0\n#print(d1,d2)\nfor i in range(1,sk+1):\n    if(k%i==0):\n        su+=d1[i]*d2[k//i]\n        if(i!=k//i):\n            su+=d1[k//i]*d2[i]\nprint(su)\n", "# import sys\n\n# sys.stdin = open('test')\n\n\ndef get_dividers(k):\n    dividers = set()\n    for i in range(1, int(k ** 0.5) + 2):\n        if k % i == 0:\n            dividers.add(i)\n            dividers.add(k // i)\n\n    return sorted(list(dividers))\n\n\nn, m, k = map(int, input().split())\ndividers = get_dividers(k)\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\n\n\n\ndef count(A, d):\n    in_a_row = 0\n    res = 0\n    for a in A:\n        if a == 1:\n            in_a_row += 1\n            if in_a_row >= d:\n                res += 1\n        else:\n            in_a_row = 0\n    return res\n\n\na_d = {}\nb_d = {}\nfor d in dividers:\n    a_d[d] = count(A, d)\n    b_d[d] = count(B, d)\n\nres = 0\nfor d in dividers:\n    res += a_d[d] * b_d[k//d]\n    # res += b_d[d] * a_d[k//d]\n    # print(d, a_d[d] * b_d[k//d], b_d[d] * a_d[k//d], res)\nprint(res)"]