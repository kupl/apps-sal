["import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [tuple(map(int, l.split())) for l in sys.stdin]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    a = LI()\n\n    r = 0\n    ai = 0\n    for i in range(n):\n        if a[i] < 2:\n            continue\n        while ai < i:\n            if a[ai] < 1:\n                ai += 1\n                continue\n            if a[i] < 2:\n                break\n            r += 1\n            a[ai] -= 1\n            a[i] -= 2\n        r += a[i] // 3\n        a[i] %= 3\n\n    return r\n\nprint(main())\n\n\n", "n = int(input())\nA = list(map(int, input().split()))\ndp = [A[0] // 3]\ncnt = A[0]\nfor i in range(1, n):\n    ans = 0\n    x = cnt - 3 * dp[-1]\n    y = A[i] // 2\n    if y <= x:\n        dp.append(dp[-1] + y)\n    else:\n        s = A[i] - 2 * x\n        dp.append(dp[-1] + s // 3 + x)\n    cnt += A[i]\nprint(dp[-1])", "def main():\n    n = int(input())\n    arr = list(map(int, input().split()))\n    ans = 0\n    kek = 0\n    for i in range(n):\n        if kek * 2 >= arr[i]:\n            ans += arr[i] >> 1\n            kek -= arr[i] >> 1\n            kek += arr[i] & 1\n        else:\n            ans += kek\n            arr[i] -= kek << 1\n            ans += arr[i] // 3\n            arr[i] %= 3\n            kek = arr[i]\n    print(ans)\n    return 0\nmain()", "n = int(input())\n\nA = list(map(int, input().split()))\n\nnum1 = 0\n\nans = 0\n\nfor a in A:\n    d = a // 2\n    deduct = min(num1, d)\n    num1 -= deduct\n    ans += deduct    \n    a -= deduct * 2\n    ans += a // 3\n    \n    num1 += a % 3\nprint(ans)\n    \n    \n", "n = int(input())\nc = list(map(int, input().split()))\nans = 0\nosn = 0\nfor i in range(n):\n    if c[i] <= osn * 2:\n        ans += c[i] // 2\n        osn += c[i] % 2 - c[i] // 2\n    else:\n        osn += c[i]\n        ans += osn // 3\n        osn %= 3\nprint(ans)", "N = int(input())\nA = [int(a) for a in input().split()]\ns = sum(A)\nr = 0\nk = N\n\ndef nextk(f = 1):\n    nonlocal k\n    if f and k >= 0:\n        A[k] = 0\n    k -= 1\n    while k >= 0 and A[k] != 1:\n        k -= 1\n    \ndef ct(n):\n    if n % 2 == 0:\n        return n//2\n    return (n-3)//2\n\nnextk(0)\nfor i in range(N)[::-1]:\n    if k < 0:\n        break\n    \n    j = 0\n    if A[i] == 1:\n        r += 1\n        if k == i:\n            nextk(0)\n    else:\n        j = ct(A[i])\n        \n        while j > 0:\n            nextk()\n            j -= 1\nprint((s-r)//3)\n", "import sys\n\nn = int(sys.stdin.readline().strip())\ns = list(map(int, sys.stdin.readline().strip().split()))\nt = 0\ni = 0\nj2 = 0\nwhile i < n:\n    x = s[i] // 3\n    t = t + x\n    s[i] = s[i] - 3 * x\n    if s[i] != 0:\n        j = max([i + 1, j2])\n        while j < n:\n            j2 = j\n            if s[j] >= 2:\n                t = t + 1\n                s[j] = s[j] - 2\n                s[i] = s[i] - 1\n                if s[i] == 0:\n                    j = n\n            else:\n                j = j + 1\n    if s[i] != 0:\n        i = n\n    else:\n        i = i + 1\n\nprint(t)\n", "input()\ncur = 0\nres = 0\nfor a in map(int, input().split()):\n    cur += a % 2\n    a //= 2\n    if a < cur:\n        cur -= a\n        res += a\n    else:\n        res += cur\n        cur = (a - cur) * 2\n        res += cur // 3\n        cur %= 3\nprint(res)\n", "n = int(input())\na = list(map(int, input().split()))\n\nans = 0\nspare = 0\n\nfor i in range(n):\n    can_build_2 = min(spare, a[i] // 2)\n    ans += can_build_2\n    spare -= can_build_2\n    a[i] -= can_build_2 * 2\n\n    ans += a[i] // 3\n    spare += a[i] % 3\n\nprint(ans)\n", "n = int(input())\nsize___nr = [int(x) for x in input().split()]\n\none_idxes = [i for i, x in enumerate(size___nr) if x == 1]\n\ncurr_max = n - 1\nans = 0\nwhile True:\n\tif curr_max == 0 or len(one_idxes) == 0:\n\t\tbreak\n\tif size___nr[curr_max] == 0:\n\t\tcurr_max -= 1\n\t\tcontinue\n\tif size___nr[curr_max] == 3:\n\t\tsize___nr[curr_max] = 0\n\t\tans += 1\n\t\tcurr_max -= 1\n\t\tcontinue\n\telif size___nr[curr_max] == 1:\n\t\tsize___nr[curr_max] -= 1\n\t\tone_idxes.pop()\n\t\tcontinue\n\telif len(one_idxes) > 0:\n\t\tx = one_idxes.pop()\n\t\tsize___nr[curr_max] -= 2\n\t\tsize___nr[x] -= 1\n\t\tans += 1\n\t\tif size___nr[curr_max] == 1:\n\t\t\tsize___nr[curr_max] -= 1\n\t\tcontinue\n\nans += sum(size___nr) // 3\nprint(ans)\n", "n, ans, last = int(input()), 0, 0\na = list(map(int, input().split()))\nfor i in range(len(a)):\n    while last > 0 and a[i] >= 2:\n        ans += 1\n        a[i] -= 2\n        last -= 1\n    ans += a[i] // 3\n    last += a[i] % 3\nprint(ans)", "N = int(input())\nnums = [int(i) for i in input().split(' ')]\n\n\nfrom collections import defaultdict\n\n\ndef helper(nums):\n    tot, carry = 0, 0\n    for i in range(len(nums)):\n        v = min(nums[i]//2, carry)\n        tot += v\n        carry -= v\n        nums[i] -= 2 * v\n\n        tot += nums[i] // 3\n        nums[i] %= 3\n\n        carry += nums[i]\n    print(tot)\n\n\n\n\nhelper(nums)", "n=int(input())\nl=list(map(int,input().split()))\nans,mod=0,0\nfor i in range(n):\n         if(mod>0):\n                  a=min(l[i]//2,mod)\n                  ans+=a\n                  mod-=a\n                  l[i]-=2*a\n         ans+=l[i]//3\n         mod+=l[i]%3\nprint(ans)", "n = int(input())\nl = [*list(map(int ,input().split()))]\nans = 0\np = 0\nfor i in range(n - 1 , -1, -1):\n     p += l[i] // 2\n     if(l[i] % 2 and p > 0):\n          ans += 1\n          p -= 1\nans += 2 * p // 3\nprint(ans)\n", "import math\nimport bisect\nimport heapq\n\nfrom collections import defaultdict\n\ndef egcd(a, b):\n    if a == 0:\n        return (b, 0, 1)\n    else:\n        g, x, y = egcd(b % a, a)\n        return (g, y - (b // a) * x, x)\n\n\n\ndef mulinv(b, n):\n    g, x, _ = egcd(b, n)\n    if g == 1:\n        return x % n\n\n\nprimes = []\n\ndef isprime(n):\n    for d in range(2, int(math.sqrt(n))+1):\n        if n%d==0:\n            return False\n    return True\n\n\ndef argsort(ls):\n    return sorted(range(len(ls)), key=ls.__getitem__)\n\ndef f(p=0):\n    if p==1:\n        return map(int, input().split())\n    elif p==2:\n        return list(map(int, input().split()))\n    else:\n        return int(input())\n\n\n\nn = f()\ncl = f(2)\n\ncount = 0\nsm = 0\n\nfor i in range(n):\n    a = sm\n    b = cl[i]//2\n    t = min(a, b)\n    count+=t\n    sm += cl[i]\n    cl[i]-=t*2\n    sm-=t*3\n    c = cl[i] // 3\n    sm-=c*3\n    count+=c\n\nprint(count)", "n,l,ans,p = int(input()),[*map(int ,input().split())],0,0\nfor i in range(n-1,-1,-1):\n p+=l[i]//2\n if(l[i]%2and p>0):ans+=1;p-=1\nprint(ans+2*p//3)", "n,l,ans,p=int(input()),[*map(int,input().split())],0,0\nfor i in range(n-1,-1,-1):\n p+=l[i]//2\n if(l[i]%2)&(p>0):ans+=1;p-=1\nprint(ans+2*p//3)", "n,l,ans,p=int(input()),[*map(int,input().split())][::-1],0,0\nfor i in range(n):\n p+=l[i]//2\n if(l[i]%2)&(p>0):ans+=1;p-=1\nprint(ans+2*p//3)", "num=int(input())\nns=[*map(int,input().split())]\ntri,edge=0,0\nfor n in ns:\n    newTri=min(edge,n//2)\n    tri+=newTri\n    edge-=newTri\n    n-=newTri*2\n    tri+=n//3\n    n=n%3\n    edge+=n\nprint(tri)", "x = int(input())\na = [int(i) for i in input().split()]\na.append(0)\nans = 0\nsum12 = {1:0, 2:0}\nfor i in range(x+1):\n\tfor j in range(1, 2):\n\t\tif i>1 and  sum12[j] != 0:\n\t\t\tt = a[i] // (3-j)\n\t\t\tt = min(sum12[j], t)\n\t\t\ta[i] -= t * (3-j)\n\t\t\tans += t\n\t\t\tsum12[j] -= t\n\n\tans += a[i] // 3\n\ta[i] %= 3\n\tif a[i]!=0:\n\t\tsum12[1] += a[i]\n\nprint(ans)\n", "#8/4/19\n#1119E\n#BlueyNeilo\n\nn=int(input())\na=list(map(int,input().split()))\nr=list(map(lambda x: x%3, a))\n\nmemo = [0]*n\nt = 0\nfor i in range(n):\n    if i>0:\n        if memo[i-1]*2<=a[i]:\n            memo[i]=(a[i]-memo[i-1]*2)%3\n        else:\n            memo[i]=(memo[i-1] - a[i]//2) + (a[i]%2)\n    else:\n        memo[i]=r[i]\n        \nprint((sum(a)-memo[n-1])//3)"]