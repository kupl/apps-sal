["t=int(input())\nfor _ in range(t):\n    a,b,c=list(map(int,input().split()))\n    a,b,c=sorted([a,b,c])\n    if a+b>=c-1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "n=int(input())\nfor i in ' '*n:\n    a,b,c=map(int,input().split())\n    if a+b+1<c or a+c+1<b or b+c+1<a:print('No')\n    else:print('Yes')", "q = int(input())\nfor rwe in range(q):\n\tl = list(map(int,input().split()))\n\tl.sort()\n\tif l[2] <= l[0] + l[1] + 1:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")", "from math import ceil\n\nfor _ in range(int(input())):\n    r, g, b = list(map(int, input().split()))\n    n = r+g+b\n\n    ok = True\n    for e in [r, g, b]:\n        if e > ceil(n / 2):\n            ok = False\n\n    print('No' if not ok else 'Yes')\n", "t=int(input())\nfor _ in range(t):\n    s=list(map(int,input().split()))\n    s=sorted(s)\n    if(s[0]+s[1]+1>=s[2]):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "for tc in range(int(input())):\n    a,b,c = list(map(int, input().split()))\n    n = a+b+c\n    if max(a,b,c) > (n+1)//2:\n        print('No')\n    else:\n        print('Yes')\n", "for q in range(int(input())):\n    n, m, k = sorted(list(map(int, input().split())))\n    if k > n+m+1:\n        print('No')\n    else:\n        print('Yes')\n", "t = int(input())\nfor i in range(t):\n    a, b, c= sorted([int(x) for x in input().split()])\n    if a + b < c - 1:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n", "t = int(input())\nfor i in range(t):\n\tr, g, b = list(map(int, input().split()))\n\tmx = max(r, g, b)\n\ts = r + g + b - mx + 1\n\tif s < mx:\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n", "import sys\ninput = sys.stdin.readline\n\ndef getInt(): return int(input())\ndef getVars(): return list(map(int, input().split()))\ndef getList(): return list(map(int, input().split()))\ndef getStr(): return input().strip()\n\n## -------------------------------\n\nt = getInt()\n\nfor _ in range(t):\n    r, g, b = getVars()\n    a =max(r, g, b)\n    c = min(r, g, b)\n    b = r+g+b - a-c\n    if a <= b+c+1:\n        print('Yes')\n    else:\n        print('No')\n\n", "for _ in range(int(input())):\n    r, g, b = sorted(map(int, input().split()))\n    if r + g + 1 < b:\n        print('No')\n    else:\n        print('Yes')\n", "t = int(input())\nfor ii in range(t):\n    a = list(map(int, input().split()))\n    a = sorted(a)\n\n    if a[2] <= a[1] + a[0] + 1:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n", "T=int(input())\nfor t in range(T):\n    a,b,c=map(int,input().split())\n    if max(a,b,c)>a+b+c-max(a,b,c)+1:\n        print('No')\n    else:\n        print('Yes')", "t = int(input())\nfor i in range(t):\n    a, b, c = map(int, input().split())\n    if 2 * max(a, b, c) - 1 > a + b + c:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "import sys \ninput=sys.stdin.readline \nfor _ in range(int(input())):\n    r,g,b=list(map(int,input().split()))\n    l=[r,g,b]\n    l.sort() \n    if l[2]>l[0]+l[1]+1:\n        print('No')\n    else:\n        print('Yes')\n", "t=int(input())\nfor i in range(t):\n    rgb=list(map(int,input().split()))\n    rgb.sort()\n    if rgb[2]-1>rgb[0]+rgb[1]:\n        print('No')\n    else:\n        print('Yes')\n", "t = int(input())\nfor _ in range(t):\n    lamps = sorted(list(map(int, input().split())))\n    if lamps[0] + lamps[1] >= lamps[2] - 1:\n        print('Yes')\n    else:\n        print('No')\n", "t = int(input())\nfor _ in range(t):\n    a = sorted(map(int, input().split()))\n    print('Yes' if a[0]+a[1]+1 >= a[2] else 'No')\n", "import sys\nfrom collections import Counter\nfrom math import *\n\n# sys.stdin = open(\"in.txt\")\n\nfor _ in range(int(input())):\n    a, b, c = map(int, input().split())\n    if a > b + c + 1 or b > a + c + 1 or c > a + b + 1:\n        print(\"No\")\n    else:\n        print(\"Yes\")", "q = int(input())\nfor z in range(q):\n    a, b, c = map(int, input().split())\n    if a > b + c + 1 or b > a + c + 1 or c > a + b + 1:\n        print('No')\n    else:\n        print('Yes')", "import sys\nimport math\nimport itertools\nimport functools\nimport collections\n\n\ndef ii(): return int(input())\ndef mi(): return list(map(int, input().split()))\ndef li(): return list(map(int, input().split()))\ndef lcm(a, b): return abs(a * b) // math.gcd(a, b)\ndef wr(arr): return ' '.join(map(str, arr))\ndef revn(n): return str(n)[::-1]\ndef dd(): return collections.defaultdict(int)\ndef ddl(): return collections.defaultdict(list)\ndef sieve(n):\n    if n < 2: return list()\n    prime = [True for _ in range(n + 1)]\n    p = 3\n    while p * p <= n:\n        if prime[p]:\n            for i in range(p * 2, n + 1, p):\n                prime[i] = False\n        p += 2\n    r = [2]\n    for p in range(3, n + 1, 2):\n        if prime[p]:\n            r.append(p)\n    return r\ndef divs(n, start=1):\n    r = []\n    for i in range(start, int(math.sqrt(n) + 1)):\n        if (n % i == 0):\n            if (n / i == i):\n                r.append(i)\n            else:\n                r.extend([i, n // i])\n    return r\ndef divn(n, primes):\n    divs_number = 1\n    for i in primes:\n        if n == 1:\n            return divs_number\n        t = 1\n        while n % i == 0:\n            t += 1\n            n //= i\n        divs_number *= t\ndef prime(n):\n    if n == 2: return True\n    if n % 2 == 0 or n <= 1: return False\n    sqr = int(math.sqrt(n)) + 1\n    for d in range(3, sqr, 2):\n        if n % d == 0: return False\n    return True\ndef convn(number, base):\n    newnumber = 0\n    while number > 0:\n        newnumber += number % base\n        number //= base\n    return newnumber\ndef cdiv(n, k): return n // k + (n % k != 0)\n\n\nt = ii()\nfor _ in range(t):\n    r, g, b = sorted(mi())\n    if b > r + g + 1:\n        print('No')\n    else:\n        print('Yes')\n\n", "t=int(input())\nwhile t:\n    r,g,b=map(int,input().split())\n    x=max(r,g,b)\n    y=r+g+b-max(r,g,b)\n    if(x-y<=1):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    t-=1    ", "n = int(input())\nfor i in range(n):\n    l=sorted(list(map(int, input().split(' '))))\n    if l[2] > l[0] + l[1] + 1:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n    \n"]