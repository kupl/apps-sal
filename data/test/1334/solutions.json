["n,k = map(int, input().split())\ns = input()\nls = sorted(list(set(s)))\nif k > n:\n    ans = s + ''.join([ls[0] for i in range(k-n)])\n    print(ans)\n    return\nc = len(ls)\nd = {}\nfor i in range(c):\n    d[ls[i]] = i\nns = []\nfor i in range(k-1,-1,-1):\n    ns.append(d[s[i]])\nr = 1\nans = []\nfor i in range(k):\n    ans.append((ns[i] + r)% c)\n    r = (ns[i] + r) // c\nans = list(reversed(ans))\nprint(''.join([ls[i] for i in ans]))", "n,k=list(map(int,input().split()))\ns=input()\nmax1=0\nmin1=100000\nfor i in s:\n    max1=max(max1,ord(i))\n    min1=min(min1,ord(i))\naim=0\nif(k<=n):\n    for i in range(min(n,k)-1,-1,-1):\n        if(ord(s[i])<max1):\n            aim=i\n            break\n    min2=max1\n    for i in s:\n        if(ord(s[aim])<ord(i) and min2>ord(i)):\n            min2=ord(i)\n    \n    fin=s[:aim] +chr(min2)+ chr(min1)*(k-aim-1)\n    print(fin) \nelse: \n    print(s + chr(min1)*(k-n))\n    \n    \n    \n\n", "raw = [int(x) for x in input().split(' ')]\nk = raw[1]\ninstr = input()\n\nletters = []\nfor l in instr:\n\tif l not in letters:\n\t\tletters.append(l)\n\nletters.sort()\n\nif k <= len(instr):\n\tfor i in range(k-1,-1,-1):\n\t\tif instr[i] != letters[-1]:\n\t\t\trepl = instr[:i]+letters[letters.index(instr[i])+1]+(k-i-1)*letters[0]\n\t\t\tbreak\nelse:\n\trepl = instr+(k-len(instr))*letters[0]\n\nprint(repl)", "import sys\n\ndef read_int():\n    return int(input())\n\ndef read_ints():\n    return [int(x) for x in input().split()]\n\nn, k = read_ints()\ns = input().strip()\nss = set(s)\nminss = min(ss)\nmaxss = max(ss)\nt = ''\n\nif k > n:\n    t = s + minss * (k - n)\nelse:\n    t = list(s[:k])\n    for i in reversed(list(range(k))):\n        if t[i] < maxss:\n            for x in sorted(ss):\n                if x > t[i]:\n                    t[i] = x\n                    break\n            cut = i\n            break\n    for i in range(cut + 1, k):\n        t[i] = minss\n    t = ''.join(t)\n\nprint(t)\n", "def solve(k, s):\n    letters = sorted(set(list(s)))\n    res = [0]*k\n    if k > len(s):\n        return s + letters[0]*(k-len(s))\n    largest_letter = letters[-1]\n    i = k-1\n    while s[i] == largest_letter:\n        res[i] = letters[0]\n        i -= 1\n    ind = letters.index(s[i])\n    res[i] = letters[ind+1]\n\n    for j in range(i-1, -1, -1):\n        res[j] = s[j]\n    return \"\".join(res)\n\n\nn, k = map(int, input().split())\ns = input().strip()\nprint(solve(k, s))", "n,k=list(map(int,input().split()))\ns=input()\nS = set(s)\nif n>=k:\n    for i in reversed(list(range(k))):\n        L = [q for q in S if s[i]<q]\n        L = list(L)\n        if len(L):\n            print(s[:i]+min(L)+(k-i-1)*min(S))\n            break\nelse:\n    print(s+min(S)*(k-n))\n", "def run():\n    n, k = [int(x) for x in input().split()]\n\n    s = input()\n    cs = sorted(set(s))\n    kcs = {c: i for i, c in enumerate(cs)}\n    # print(kcs);return\n    # print(cs)\n\n    if k > len(s):\n        print(s + (cs[0] * (k - len(s))))\n        return\n\n    s = s[:k]\n    nr = [kcs[x] for x in s]\n\n    ptr = k-1\n    while True:\n        if nr[ptr] < len(cs)-1:\n            nr[ptr] += 1\n            break\n        nr[ptr] = 0\n        ptr-=1\n    print(''.join((cs[x] for x in nr)))\n\n\n\n\nrun()", "\ndef get_solution(source, desired_len, alphabet):\n\tif desired_len <= len(source):\n\t\ttarget = source[:desired_len]\n\t\tlast_non_terminal = get_last_non_terminal(target, alphabet)\n\t\ttarget = target[:last_non_terminal] + next_char(target[last_non_terminal], alphabet)\n\telse:\n\t\ttarget = source\n\n\treturn pad_with_starters(target, desired_len, alphabet)\n\ndef get_last_non_terminal(target, alphabet):\n\tfor i, char in reversed(list(enumerate(target))):\n\t\tif char != alphabet[-1]:\n\t\t\treturn i\n\ndef next_char(char, alphabet):\n\treturn alphabet[alphabet.index(char) + 1]\n\ndef pad_with_starters(target, desired_len, alphabet):\n\treturn target + (desired_len - len(target)) * alphabet[0]\n\n\n_, desired_len = [int(x) for x in input().split()]\nsource = input()\nalphabet = list(set(source))\nalphabet.sort()\n\nprint(get_solution(source, desired_len, alphabet))", "q,w=map(int,input().split())\ns=input()\nd=[i for i in s]\nd=list(set(d))\nd.sort()\nif w>q:\n    ans=s+d[0]*(w-q)\nelse:\n    if w<q:\n        s=s[:w]\n    i=w-1\n    while s[i]==d[-1]:\n        i-=1\n    ans=s[:i]\n    ans+=d[d.index(s[i])+1]\n    ans+=d[0]*(w-1-i)\nprint(ans)", "n,k=list(map(int,input().split(' ')))\ns=input()\nsetl=set(s)\nl=sorted(list(setl))\ncnt=0\nif k>n:\n    print(s+(k-n)*l[0])\nelse:\n    ans=\"\"\n    for j in range(k-1,-1,-1):\n        cnt+=1\n        if s[j]==l[-1]:\n            ans+=l[0]\n        else:\n            x=l.index(s[j])\n            ans+=l[x+1]\n            break\n    print(s[0:k-cnt]+ans[::-1])\n        \n", "n, k = list(map(int, input().split()))\ns = input().strip()\n\ncnt = [0] * 26\nfor i in s:\n    cnt[ord(i) - 97] += 1\n\nlo = 0\nhi = 25\n\nfor i in range(0, 26):\n    if cnt[i] != 0:\n        lo = i\n        break\n    \nfor i in range(25, -1, -1):\n    if cnt[i] != 0:\n        hi = i\n        break\n\nif k <= n:\n    ans = list(s[:k])\n    for j in range(k - 1, -1 , -1):\n        done = 0\n        for i in range(ord(s[j]) - 97 + 1, 26):\n            if cnt[i] != 0:\n                ans[j] = chr(i + 97)\n                done = 1\n                break\n        if done:\n            for z in range(j + 1 , k):\n                ans[z] = chr(lo + 97)\n            break\nelse:\n    ans = list(s)\n    for i in range(k - n):\n        ans.append(chr(lo + 97))\n\nprint(''.join(ans))\n", "n, k = list(map(int, input().split()))\ns = input()\n\nabc = set(s)\nmi = min(abc)\nma = max(abc)\n\nif k > n:\n    print(s + min(abc) * (k - n))\n\nelse:\n    S = sorted(abc)\n\n    temp = s[:k]\n\n    for i, el in enumerate(s[:k][::-1]):\n        if el != ma:\n            print(s[:k - i - 1] + S[S.index(el) + 1] + mi * i)\n            break\n", "n,k = list(map(int, input().split()))\ns = input()\nlist1 = list(set(s))\nlist1.sort()\nif(k>len(s)):\n\tprint(s + (list1[0]*(k-len(s))))\nelif(k<len(s)):\n\tj = k-1\n\twhile(j>= 0 and list1[-1] == s[j]):\n\t\tj-=1\n\tst = s[0:j]\n\tst += (list1[list1.index(s[j])+1])\n\tst += (list1[0]*(k-j-1))\n\tprint(st)\nelse:\n\tj = len(s)-1\n\twhile(j>= 0 and list1[-1] == s[j]):\n\t\tj-=1\n\tst = s[0:j]\n\tst += (list1[list1.index(s[j])+1])\n\tst += (list1[0]*(len(s)-j-1))\n\tprint(st)\n", "from sys import stdin as cin\n\ndef main():\n    n, m = map(int, input().split())\n    s = input()\n    q = set()\n    c = 'z'\n    x = 'a'\n    for i in s:\n        q.add(i)\n        if ord(c) > ord(i):\n            c = i\n        if ord(x) < ord(i):\n            x = i\n    if n >= m:\n        s = s[:m]\n        for i in range(m - 1, -1, -1):\n            if s[i] != x:\n                print(s[:i], end = '')\n                w = 1+ord(s[i])\n                while chr(w) not in q:\n                    w += 1\n                print(chr(w) + c * (m - i - 1))\n                return\n##        for i in range(m):\n##            if i < n and s[i] in q:\n##                q.remove(s[i])\n##                if len(q) == 1:\n##                    print(*q, end = '')\n##                elif len(q) == 0:\n##                    print(c, end = '')\n##                else:\n##                    print(s[i], end = '')\n##            else:\n##                if i < n and len(q) <= 1:\n##                    print(c, end = '')\n##                else:\n##                    print(s[i], end = '')\n    else:\n        print(s + c * (m - n))\n\nmain()\n", "n,k=input().split()\nn,k=int(n),int(k)\n\ns=list(input())\nst=s[:k]\n\ns.sort()\n\na=[s[0]]\n\nb=True\n\nfor i in range(1,len(s)):\n\tif s[i]!=s[i-1]:\n\t\ta.append(s[i])\n\n#print(st)\nwhile len(st)<k:\n\tst.append(a[0])\n\tb=False\n\n\n#print(a)\nif b:\n\tfor i in reversed(range(k)):\n\t\tif st[i]!=a[len(a)-1]:\n\t\t\t#print(st[i])\n\t\t\tfor j in range(len(a)-1):\n\t\t\t\tif st[i]==a[j]:\n\t\t\t\t\tst[i]=a[j+1]\n\t\t\t\t\tbreak\n\t\t\tfor j in range(i+1,k):\n\t\t\t\tst[j]=a[0]\n\t\t\tbreak\n\nstri=''\nfor r in st:\n\tstri=stri+r\nprint(stri)", "n,k = map(int,input().split(\" \"))\ns = list(input())\ns1 = s[:]\ns2 = sorted(list(set(s)))\n\nif k == 1:\n\tfor ch in s2:\n\t\tif s1[0] < ch:\n\t\t\tprint(ch)\n\t\t\treturn\n\nif n < k:\n\ts1.extend([s2[0]]*(k-n))\n\tt = \"\".join(s1)\n\tprint(t)\n\nelse:\n\tfor i in range(k-1,-1,-1):\n\t\tif s1[i] != s2[-1]:\n\t\t\tans = s1[:i]\n\t\t\tans.append(s2[s2.index(s1[i])+1])\n\t\t\tans.extend([s2[0]]*(k-i-1))\n\t\t\tprint(\"\".join(ans))\n\t\t\treturn", "n,k = map(int,input().split(' '))\ns1 = input()\nm = list(set(s1))\nm = sorted(m)\nD = {}\nfor i in range(len(m)):\n    D[m[i]] = i\nX = len(D)\nif len(s1)<k:\n    print(s1+m[0]*(k-len(s1)))\nelse:\n    st = list(s1[0:k])\n    st = [D[i] for i in st]\n    f = k-1\n    st[f]+=1\n    while st[f]==X:\n        st[f]=0\n        st[f-1]+=1\n        f-=1\n    st = [m[i] for i in st]\n    print(''.join(st))", "n, k  = list(map(int, input().split()))\ns = input()[:n]\ndigs = set(s)\nmind = min(digs)\nmaxd = max(digs)\nif n<k:\n    print (s+mind*(k-n))\n    return\nfor i in range(min(n,k)-1, -1, -1):\n    if s[i]<maxd:\n        biggerchars  = [ch for ch in digs if ch > s[i]]\n        bestchar = min(biggerchars)\n        res = s[:i] + bestchar + mind*(k-1-i)\n        print (res)\n        return\nprint(maxd*k)", "# coding=utf-8\nn, k = list(map(int, input().split()))\ns = input()\ne = list(set(s))\ne.sort()\nen = {}\nfor i in range(len(e)-1):\n    en[e[i]] = e[i+1]\nns = []\nfor i in range(min(n, k)):\n    ns.append(s[i])\nif k-n>0:\n    for i in range(k-n):\n        ns.append(e[0])\nelse:\n    while True:\n        if ns[k-1] != e[-1]:\n            ns[k-1] = en[ns[k-1]]\n            break\n        else:\n            ns[k-1] = e[0]\n            k -= 1\nprint(''.join(ns))\n", "import sys\n#from io import StringIO\n#sys.stdin = StringIO(open(__file__.replace('.py', '.in')).read())\n\nn, k = list(map(int, input().split()))\ns = input()\n\nd = list(sorted(set(s)))\nld = len(d)\nh = {}\nfor i in range(len(d)):\n    h[d[i]] = i\n\nif k > n:\n    print(s + d[0] * (k - n))\n    return\n\np = list(s[0:k])\nt = list(p)\n\nfor i in range(k-1, -1, -1):\n    if s[i] >= t[i]:\n        j = h[s[i]]\n        if j < ld - 1:\n            t[i] = d[j+1]\n            for m in range(i+1, len(t)):\n                t[m] = d[0]\n            print(''.join(t))\n            return\n", "n, k = list(map(int, input().split()))\ns = input()\n\nsorted_chars = sorted(set(s))\ninv_mapping = {a: i for i, a in enumerate(sorted_chars)}\n\nif k <= n:\n    i = k - 1\n    while s[i] == sorted_chars[-1] and i >= 0:\n        i -= 1\n\n    if i >= 0:\n        print(s[:i] + sorted_chars[inv_mapping[s[i]] + 1] + (k - i - 1) * sorted_chars[0])\n    else:\n        print(sorted_chars[inv_mapping[s[0]] + 1] + (k - 1) * sorted_chars[0])\nelse:\n    print(s + (k - n) * sorted_chars[0])", "n, k = map(int, input().split())\ns = input()\nL = list(set(s))\nL.sort()\nif k <= n:\n    ans = s[:k]\n    if ans == L[-1] * k:\n        ans = L[0] * (k + 1)\n    else:\n        pos = k - 1\n        while s[pos] == L[-1]:\n            pos -= 1\n        i = 0\n        while L[i] != s[pos]:\n            i += 1\n        i += 1\n        ans = s[:pos] + L[i]\n        l = len(ans)\n        ans += L[0] * (k - l)\nelse:\n    ans = s + (k - n) * L[0]\n    \nprint(ans)", "def solve():\n    n, k = list(map(int, input().split()))\n    S = input()\n    L = list(set(list(map(ord,S))))\n    L.sort()\n\n    I = {}\n    for i, l in enumerate(L):\n        I[l] = i\n\n    first = L[0]\n    last = L[-1]\n\n    res = \"\"\n    if k > n:\n        res += S\n        res += chr(first)*(k-n)\n        print(res)\n        return\n    else:\n        for i in reversed(list(range(k))):\n            if ord(S[i]) < last:\n                remained = L[I[ord(S[i])] + 1]\n                res += S[:i]\n                res += chr(remained)\n                res += chr(first) * (k-i-1)\n                print(res)\n                return\n\n\ndef __starting_point():\n    solve()\n\n\n\n__starting_point()"]