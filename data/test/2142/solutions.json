["for  testcases in range(int(input())):\n\tn,m = list(map(int,input().split()))\n\tar = list(map(int,input().split()))\n\tbr = list(map(int, input().split()))\n\tflag = 0 \n\tans = 0\n\tfor i in ar:\n\t\tfor j in br:\n\t\t\tif i == j :\n\t\t\t\tans = i \n\t\t\t\tflag = 1\n\t\t\t\tbreak\n\tif flag == 0 :\n\t\tprint(\"NO\")\n\telse:\n\t\tprint(\"YES\")\n\t\tprint(1,ans)\t\t\t\t\n", "t = int(input())\n\nfor _ in range(t):\n    n, m = list(map(int, input().split()))\n\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n\n    ans = -1\n\n    for x in a:\n        for y in b:\n            if x == y:\n                ans = x\n\n    if ans != -1:\n        print('YES')\n        print(1, ans)\n    else:\n        print('NO')\n", "import random\n\n\ndef gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef lcm(a, b):\n    return (a * b) / gcd(a, b)\n\n\nfor _ in range(int(input())):\n    n,m=list(map(int,input().split()))\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    f=-1\n    a.sort()\n    b.sort()\n    d={}\n    for i in a:\n        d[i]=1\n    for i in b:\n        if i in d:\n            f=i\n    if (f==-1):\n        print('NO')\n    else:\n        print('YES')\n        print(1,f)\n", "for _ in range(int(input())):\n    n,m = map(int,input().split())\n    a = list(map(int,input().split()))\n    b = list(map(int,input().split()))\n    ans=\"n\"\n    for i in a:\n        for j in b:\n            if i==j:\n                ans=i\n    if ans=='n':\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(\"1\",ans)", "t=int(input())\nfor w in range(t):\n    n,m=(int(i) for i in input().split())\n    a=[int(i) for i in input().split()]\n    b=[int(i) for i in input().split()]\n    c=0\n    for i in range(n):\n        for j in range(m):\n            if(b[j]==a[i]):\n                c=1\n                k=a[i]\n                break\n    if(c==0):\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(1,k)"]