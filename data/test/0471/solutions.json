["from math import *\nn, a = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\nif n == 1:\n    print(0)\n    \nelse:\n    if a > A[-1]:\n        print(abs(a - A[1]))\n    elif a < A[0]:\n        print(abs(a - A[-2]))\n    else:\n        per1 = abs(A[0] - A[-2])\n        per2 = abs(A[1] - A[-1])\n        ans1 = abs(A[0] - a) + per1\n        ans2 = per1 + abs(A[-2] - a)\n        ans3 = per2 + abs(a - A[-1])\n        ans4 = per2 + abs(a - A[1])\n        print(min(ans1, ans2, ans3, ans4))", "#!/usr/bin/env python3.5\nimport sys\n\ndef read_data():\n    n, x0 = list(map(int, next(sys.stdin).split()))\n    checkpoints = list(map(int, next(sys.stdin).split()))\n    return x0, checkpoints\n\n\ndef solve(x0, checkpoints):\n    n = len(checkpoints)\n    checkpoints.sort()\n    if n == 1:\n        return 0\n    case0 = abs(x0 - checkpoints[1]) + abs(checkpoints[n-1] - checkpoints[1])\n    case1 = abs(x0 - checkpoints[n-2]) + abs(checkpoints[0] - checkpoints[n-2])\n    case2 = abs(x0 - checkpoints[0]) + abs(checkpoints[n-2] - checkpoints[0])\n    case3 = abs(x0 - checkpoints[n-1]) + abs(checkpoints[1] - checkpoints[n-1])\n    return min(case0, case1, case2, case3)\n\n\ndef __starting_point():\n    x0, checkpoints = read_data()\n    length = solve(x0, checkpoints)\n    print(length)\n\n__starting_point()", "def calc_dist(coords, a):\n    if len(coords) == 0:\n        return 0\n    \n    if a > coords[-1]:\n        return a - coords[0]\n    if a < coords[0]:\n        return coords[-1] - a\n    \n    return coords[-1] - coords[0] + min(a - coords[0], coords[-1] - a)\n\n\nn, a = list(map(int, input().split()))\n\ncoords = list(map(int, input().split()))\n\ncoords.sort()\n\n#~ print(coords[:-1], coords[1:])\n\nprint(min(calc_dist(coords[:-1], a), calc_dist(coords[1:], a)))\n", "n, a = [int(i) for i in input().split()]\n\npoints = [int(i) for i in input().split()]\n\nright = None\nright2 = None\nleft = None\nleft2 = None\n\nfor point in points:\n    if right is None:\n        right = point\n\n    else:\n        if point > right:\n            right2 = right\n            right = point\n        elif right2 is None or point > right2:\n            right2 = point\n\n    if left is None:\n        left = point\n    else:\n        if point < left:\n            left2 = left\n            left = point\n        elif left2 is None or point < left2:\n            left2 = point\n\n\nif n == 1:\n    print(0)\nelif a >= right:\n    print(a-left2)\nelif a <= left:\n    print(right2-a)\n\nelse:\n    x1 = abs(a-left)+abs(right2-left)\n    x2 = abs(a-left2)+abs(right-left2)\n    x3 = abs(right-a)+abs(right-left2)\n    x4 = abs(right2-a)+abs(right2-left)\n    print(min((x1,x2,x3,x4)))\n    \n", "n, a = map(int, input().split())\nc = list(map(int, input().split()))\nc.sort()\nif n == 1:\n    print(0)\nelif n == 2:\n    print(min(abs(c[0] - a), abs(c[1] - a)))\nelse:\n    if abs(c[0] - a) < abs(c[n - 2] - a):\n        ans = abs(c[0] - a) + abs(c[0] - c[n - 2])\n    else:\n        ans = abs(c[n - 2] - a) + abs(c[0] - c[n - 2])\n    if abs(c[1] - a) < abs(c[n - 1] - a):\n        ans = min(ans, abs(c[1] - a) + abs(c[1] - c[n - 1]))\n    else:\n        ans = min(ans, abs(c[n - 1] - a) + abs(c[n - 1] - c[1]))\n    print(ans)", "n, a = [int(i) for i in input().split()]\ns = [int(i) for i in input().split()]\ns.sort()\nt = len(s)-1\nfor i in range(n):\n\tif s[i] >a:\n\t\tt = i-1\n\t\tbreak\nif n == 1:\n\tprint(0)\nelif t == -1:\n\tprint(abs(s[-2]-a))\nelif t == n-1:\n\tprint(abs(a-s[1]))\nelif t == 0:\n\tprint(min(abs(s[-1]-a), abs(s[-2]-s[0]+a-s[0]), abs(s[-2]-s[0]+s[-2]-a)))\nelif t == n-2:\n\tprint(min(abs(a-s[0]), abs(s[-1]-s[1]+s[-1]-a), abs(s[-1]-s[1]+a-s[1])))\nelse:\n\tans = min(abs(s[-1]-s[1]+a-s[1]),abs(s[-1]-s[1]+s[-1]-a), abs(s[-2]-s[0]+a-s[0]), abs(s[-2]-s[0]+s[-2]-a))\n\tprint(ans)\n\n", "n, a = list(map(int, input().split()))\nx = list(map(int, input().split()))\ndef visit(a,b,c):\n    if a<=b:\n        return c-a\n    if a>=c:\n        return a-b\n    return c-b + min(c-a, a-b)\nx.sort()\nif n <= 1:\n    print(0)\nelif a <= x[0]:\n    print(x[-2]-a)\nelif a >= x[-1]:\n    print(a-x[1])\nelse:\n    #~ ans = 10**7\n    print(min(visit(a, x[0], x[-2]), visit(a,x[1],x[-1])))\n    \n", "# You lost the game.\nn,a = list(map(int, input().split()))\nL = list(map(int, input().split()))\nL.sort()\nif n == 1:\n    print(0)\nelif a >= L[n-1]:\n    print(a-L[1])\nelif a <= L[0]:\n    print(L[n-2]-a)\nelse:\n    gauche = min(abs(a - L[0]),abs(L[n-2] - a)) + L[n-2] - L[0]\n    droite = min(abs(a - L[1]),abs(L[n-1] - a)) + L[n-1] - L[1]\n    if gauche < droite:\n        print(gauche)\n    else:\n        print(droite)\n", "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Wed Aug 24 12:53:13 2016\n\n@author: Felicia\n\"\"\"\n\ninp1 = input()\ninp11 = inp1.split(' ')\nn = int(inp11[0])\na = int(inp11[1])\n\ninp2 = input()\ninp21 = inp2.split(' ')\nx0 = []\nfor i in inp21:\n    j=int(i)\n    x0.append(j)\n\nx = sorted(x0)\n\ndef f(x):\n    if x>0:\n        return x\n    else:\n        return 0\nif n>1:\n    len1 = 2*f(a-x[0])+f(x[n-2]-a)\n    len2 = 2*f(x[n-2]-a)+f(a-x[0])\n    len3 = 2*f(a-x[1])+f(x[n-1]-a)\n    len4 = 2*f(x[n-1]-a)+f(a-x[1])\n    \n    print(min(len1,len2,len3,len4))\nelse:\n    print(0)", "n, a = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nx.sort()\nres = 2**30\n\ndef solve(a, i, j):\n    if a >= x[j]:\n        return a - x[i]\n    elif a <= x[i]:\n        return x[j] - a\n    else:\n        sumLeft = (a - x[i]) * 2 + x[j] - a\n        sumRight = (x[j] - a) * 2 + a - x[i]\n        return min(sumLeft, sumRight)\n\nif n <= 1:\n    res = 0\n\nelif n == 2:\n    for value in x:\n        res = min(res, abs(value - a))\nelse:\n    if a <= x[0]:\n        res = x[len(x) - 2] - a;\n    elif a >= x[len(x) - 1]:\n        res = a - x[1]\n    else:\n        leftValue = solve(a, 1, len(x) - 1)\n        rightValue = solve(a, 0, len(x) - 2)\n        res = min(leftValue, rightValue)\n\nprint(res)\n\n", "n,a = list(map(int,input().split()))\nb = list(map(int,input().split()))\nb.sort()\nif(len(b) == 1):\n    print(0)\nelif(len(b) == 2):\n    print(min(abs(a - b[0]), abs(a - b[1])))\nelif(a < b[0]):\n    print(b[-2] - a)\nelif(a > b[-1]):\n    print(a - b[1])\nelif(a == b[0]):\n    print(b[-2] - a)\nelif(a == b[-1]):\n    print(a - b[1])\nelif(len(b) == 3):\n    if(a < b[1]):\n        print(min(a - b[0] - b[0] + b[1], b[1]-a + b[1]-a + a-b[0], b[2] - a))\n    elif(a > b[1]):\n        print(min(a - b[0], a - b[1] + a - b[1] + b[2] - a, b[2] - a + b[2] - a + a - b[1]))\n    else:\n        print(min(a - b[0], b[2] - a))\nelif(a < b[1]):\n    print(min(a - b[0] + a - b[0] + b[-2] - a, b[-2] - a + b[-2] - a + a - b[0], b[-1] - a))\nelif(a > b[-2]):\n    print(min(a - b[0], b[-1] - a + b[-1] - a + a - b[1], a - b[1] + a - b[1] + b[-1] - a))\nelse:\n    print(min(a - b[1] + a - b[1] + b[-1] - a, b[-1] - a + b[-1] - a + a - b[1],a - b[0] + a - b[0] + b[-2] - a, b[-2] - a + b[-2] - a + a - b[0]))\n", "n,a=list(map(int,input().split()))\nip=list(map(int,input().split()))\ntry:\n    if a not in ip:\n        ip.append(a)\n        n+=1\n    ip=sorted(ip)\n    k=ip.index(a)\n    l1=0\n    l2=0\n    for i in range(k):\n        l1+=ip[i+1]-ip[i]\n    for i in range(k,n-1):\n        l2+=ip[i+1]-ip[i]\n    n1=ip[1]-ip[0]\n    n2=ip[-1]-ip[-2]\n    if l1==0:\n        print(l2-n2)\n    elif l2==0:\n        print(l1-n1)\n    else:\n        print(min(l1-n1+2*l2, 2*l1-2*n1+l2, l2-n2+2*l1, 2*l2-2*n2+l1))\nexcept:\n    print(0)\n", "n, a = list(map(int, input().split()))\nline = list(map(int, input().split()))\nline.sort()\nif len(line) == 1:\n    print(0)\nelse:    \n    r1 = abs(line[-1] - line[1])\n    otvet1 = min(abs(a - line[1]), abs(a - line[-1])) + r1\n    r2 = abs(line[-2] - line[0])\n    otvet2 = min(abs(a - line[-2]), abs(a - line[0])) + r2\n    print(min(otvet1, otvet2))", "#!/usr/bin/env python3\n\nfrom sys import stdin\n\n\ndef main():\n    n, a = stdin_get_ints_from_line()\n    x = stdin_get_ints_list_from_line()\n    x.sort()\n\n    if n == 1:\n        print(0)\n        return\n\n    #print(get_result(a, x[1], x[-1]), get_result(a, x[1], x[-1]))\n\n    print(min(get_result(a, x[1], x[-1]), get_result(a, x[0], x[-2])))\n\n\ndef get_result(a, left, right):\n    #print(a, left, right)\n    if left < a < right:\n        if abs(a-left) < abs(a-right): # go left first\n            return (abs(a-left) * 2) + abs(a-right)\n        else:\n            return abs(a-left) + (abs(a-right) * 2)\n\n    if a <= left:\n        return abs(a-right)\n\n    if a >= right:\n        return abs(a-left)\n\n\ndef stdin_get_ints_from_line():\n    return (int(x) for x in stdin.readline().strip().split(' '))\n\n\ndef stdin_get_ints_list_from_line():\n    return list(int(x) for x in stdin.readline().strip().split(' '))\n\n\ndef stdin_get_string_from_line():\n    return stdin.readline().strip()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n,p = list(map(int,input().split()))\na = list(map(int,input().split()))\na.sort()\nif n==1:\n    print(0)\nelif n==2:\n    print(min(abs(a[0]-p),abs(a[1]-p)))\n\nelse:\n    a1 = min(abs(a[0]-p),abs(a[-2]-p)) + abs(a[0]-a[-2])\n    a2 = min(abs(a[1]-p),abs(a[-1]-p)) + abs(a[1]-a[-1])\n    print(min(a1,a2))\n\n\n\n", "n, a = list(map(int, input().split()))\nx = list(map(int, input().split()))\n\nx.sort()\nres = 2**30\n\ndef solve(a, i, j):\n    if a >= x[j]:\n        return a - x[i]\n    elif a <= x[i]:\n        return x[j] - a\n    else:\n        sumLeft = (a - x[i]) * 2 + x[j] - a\n        sumRight = (x[j] - a) * 2 + a - x[i]\n        return min(sumLeft, sumRight)\n\nif n <= 1:\n    res = 0\n\nelif n == 2:\n    for value in x:\n        res = min(res, abs(value - a))\nelse:\n    if a <= x[0]:\n        res = x[len(x) - 2] - a;\n    elif a >= x[len(x) - 1]:\n        res = a - x[1]\n    else:\n        leftValue = solve(a, 1, len(x) - 1)\n        rightValue = solve(a, 0, len(x) - 2)\n        res = min(leftValue, rightValue)\n\nprint(res)\n\n", "n,x=[int(i) for i in input().strip().split()]\na=[int(i) for i in input().strip().split() if int(i)!=x]\nif len(a)<=1:\n  ans=0\nelse:\n  a=sorted([x]+a)\n  ind=a.index(x)\n  if ind==0:\n    ans=a[-2]-a[0]\n  elif ind==len(a)-1:\n    ans=a[-1]-a[1]\n  else:\n    ans=min((a[ind]+a[-2]-2*a[0]), (2*a[-2]-a[ind]-a[0]), (a[ind]+a[-1]-2*a[1]), (2*a[-1]-a[ind]-a[1]))\nprint(ans)", "N, A = list(map(int, input().split()))\nX = list(map(int, input().split()))\nX.sort()\nif N == 1:\n    print(0)\n    return\nelif N == 2:\n    print(min(abs(X[0] - A), abs(X[1] - A)))\n    return\nans = int(1e18)\nans = min(ans, abs(X[N-2] - X[0]) + min(abs(A - X[0]), abs(A - X[N-2])))\nans = min(ans, abs(X[N-1] - X[1]) + min(abs(A - X[1]), abs(A - X[N-1])))\nprint(ans)\n", "n, a = list(map(int, input().split(' ')))\nx = list(map(int, input().split(' ')))\n\nMAX, MIN = 1000000, -1000000\n\nr1, r2, l1, l2 = MIN-1, MIN-1, MAX+1, MAX+1\n\nfor xi in x:\n    if xi <= l1:\n        l2 = l1\n        l1 = xi\n    elif xi < l2:\n        l2 = xi\n        \n    if xi >= r1:\n        r2 = r1\n        r1 = xi\n    elif xi > r2:\n        r2 = xi\n\nif n == 1:\n    print(0)\nelse:        \n    print((min(\n        r1 - l2 + abs(a - r1),\n        r1 - l2 + abs(a - l2),\n        r2 - l1 + abs(a - r2),\n        r2 - l1 + abs(a - l1))))\n", "n,d = map(int,input().split())\na = list(map(int,input().strip().split()))\n\n#print(n)\n#print(a)\na.sort()\n#print(a)\n\nans =0\nif n==1:\n    ans=0\nelif n<=2:\n    ans = min(abs(a[0]-d),abs(a[n-1]-d))     \nelse:\n   # print(\"en\")\n    ans =a[n-2]-a[0] + min(abs(a[0]-d),abs(a[n-2]-d))\n    #print(ans)    \n    ans = min(ans,a[n-1]-a[1] + min(abs(a[1]-d),abs(a[n-1]-d)))\n   # print(ans)\nprint(ans)", "from math import *\n\n[n, a] = [int(x) for x in input().split()]\n\nif n == 1:\n    print(0)\n    return\n\npoints = [int(x) for x in input().split()]\npoints.sort()\n\ndis1 = abs(points[n-2] - points[0])\ndis2 = abs(points[n-1] - points[1])\n\nto0 = abs(a - points[0])\nto1 = abs(a - points[1])\nton = abs(a - points[n-1])\nton2 = abs(a - points[n-2])\n\nprint(min(to0 + dis1, to1 + dis2, ton + dis2, ton2 + dis1))", "def solve():\n    n, a = list(map(int, input().split()))\n    x = list(map(int, input().split()))\n    x.append(a)\n    x.sort()\n    bi = 0\n    for i in range(n + 1):\n        if x[i] == a:\n            bi = i\n            break\n    ans = float('inf')\n    for s in range(2):\n        l = 0\n        r = 0\n        ok = x[s] == a\n        for i in range(s + 1, s + n):\n            ok = ok or x[i] == a\n            if i <= bi:\n                l += x[i] - x[i - 1]\n            else:\n                r += x[i] - x[i - 1]\n        if ok:\n            ans = min(ans, min(l, r) * 2 + max(l, r))\n    print(ans)\n\n\ndef main():\n    solve()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n, a = list(map(int, input().split()))\n\nl = input().split()\nl = [int(i) for i in l]\n\nif(n == 1):\n    print(0)\nelif(n == 2):\n    if(abs(a-l[0]) < abs(a-l[1])):\n        print(abs(a-l[0]))\n    else:\n        print(abs(a-l[1]))\nelse:\n    ma = max(l)\n    mi = min(l)\n    l.remove(ma)\n    max2 = max(l)\n    l.append(ma)\n    l.remove(mi)\n    min2 = min(l)\n    l.append(mi)\n\n    if(a > ma):\n        print(a-min2)\n    elif(a < mi):\n        print(max2-a)\n    else:\n        ans=list()\n        ans.append(abs(max2 - a) + max2 - mi)\n        ans.append(abs(a - mi) + max2 - mi)\n        ans.append(ma - min2 + abs(ma - a))\n        ans.append(ma - min2 + abs(a - min2))\n        while(min(ans) < 0):\n            ans.remove(min(ans))\n        print(min(ans))\n", "n, a = map(int, input().split())\nN = sorted(list(map(int, input().split())))\ndist = 0\n \nif n == 1:\n    dist = 0\n   \nelif n == 2:\n    dist = min(abs(N[0] - a), abs(N[1] - a))\n   \nelif a <= N[0]:\n    dist = abs(N[-2] - a)\n   \nelif a >= N[-1]:\n    dist = abs(a - N[1])\n\nelif a >= N[-2]:\n    dist = min(abs(a - N[0]), 2 * abs(a - N[-1]) + abs(a - N[1]), abs(a - N[-1]) + 2 * abs(a - N[1]))\n\nelif a <= N[1]:\n    dist = min(abs(a - N[-1]), 2 * abs(a - N[0]) + abs(a - N[-2]), abs(a - N[0]) + 2 * abs(a - N[-2]))\n   \nelse:\n    dist = min(2 * abs(N[0] - a) + abs(N[-2] - a), 2 * abs(N[1] - a) + abs(N[-1] - a), 2 * abs(N[-1] - a) + abs(N[1] - a), 2 * abs(N[-2] - a) + abs(N[0] - a))\n\n\nprint(dist)"]