["from math import ceil\ndef dist(x, y):\n    return (x ** 2 + y ** 2) ** 0.5\nr, x, y, x2, y2 = map(int, input().split())\nprint(ceil(dist(x - x2, y - y2) / (2 * r)))", "\"\"\"\nCodeforces Contest 287 Div 2 Problem B\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    r,x1,y1,x2,y2 = read()\n    dist = ((x2-x1)**2 + (y2-y1)**2)**.5\n    import math\n    return math.ceil(dist/2/r)\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "from math import ceil\n\nr, x0, y0, x1, y1 = map(int, input().split())\n\ndist = ((x1 - x0) ** 2 + (y1 - y0) ** 2) ** 0.5\n\nprint(ceil(dist / (2 * r)))", "r, x,y,a,b = [int(x) for x in input().strip().split()]\ndis = ((a-x)**2 + (b-y)**2)**0.5\nct = 0\nwhile(dis>0):\n\tdis-= 2*r\n\tct+=1\nprint(ct)\n", "from math import sqrt,ceil\n\nr, x, y, xx, yy = map(int, input().split())\ndiff = sqrt((x - xx)**2 + (y - yy) ** 2)\n\nprint(ceil(ceil(diff)/(r*2)))", "import math\nline = input().split()\nr = int(line[0])\nx0 = int(line[1])\ny0 = int(line[2])\nx1 = int(line[3])\ny1 = int(line[4])\n\nwhile True:\n    if x0 == x1 and y0 == y1:\n        print('0')\n        break\n    dist = ((x1 - x0) ** 2 + (y1 - y0) ** 2) ** (1 / 2)\n    print(str(math.ceil(dist / (2 * r))))\n    break\n", "import math\nr, x, y, x1, y1 = map(int, input().split())\nln = math.sqrt((x-x1)**2 + (y-y1)**2)\nprint(math.ceil(ln/(2*r)))", "import math\nr,x,y,a,b=list(map(int,input().split()))\n\nd = (a-x)*(a-x) + (b-y)*(b-y)\n\nsd = d\n\n\nd = pow(d,0.5)\n\ndi = int(d)\nQ = False\n\n\nif(di*di == sd):\n    Q=True\nelse:\n    di=di+1\n    if(di*di==sd):\n        Q=True\n    else:\n        di=di-2\n        if(di*di==sd):\n            Q=True\n\nif(Q):\n    f=0\n    if(di%(2*r)!=0):\n        f=1\n    print(di//(2*r)+f)\nelse:\n    di=math.floor(d)\n    print(di//(2*r)+1)\n", "r, x, y, n_x, n_y = list(map(int, input().split()))\nd = 2 * r\ndis = (x - n_x) ** 2 + (y - n_y) ** 2\nans = pow(dis / (d ** 2), 0.5)\nif ans ** 2 == int(ans) ** 2 + 0.0:\n    print(int(ans))\nelse:\n    print(int(ans)+1)\n", "import math\n\ndef ans():\n    r, x1, y1, x2, y2= [int(i) for i in input().split()]\n    d= math.sqrt(((x2- x1)**2)+((y2- y1)**2))\n    #print(d, d/(2*r))\n    if d%(2*r)== 0:\n        print(int(d/(2*r)))\n    else:\n        print(int(d/(2*r))+ 1)\n        \n    return\n\nans()", "from math import sqrt\ns = input().split()\ns = [int(s) for s in s]\nr,x,y,x1,y1 = s[0],s[1],s[2],s[3],s[4]\nd = sqrt((x-x1)**2+(y-y1)**2)\nans = d // (r*2)\nif d > ans*r*2:\n    ans += 1\nprint(int(ans))\n\n        \n    \n", "def way_cut(x1,y1,x2,y2):\n    return (((x1-x2)**2+(y1-y2)**2)**0.5)\nr,x,y,x1,y1 = list(map(int,input().split()))\nz = way_cut(x,y,x1,y1)\nif z % (2 * r) == 0:\n    print(int(z // (2 * r)))\nelse:\n    print(int(z // (2 * r))+1)\n", "from math import sqrt\nfrom math import ceil\n\n\nr, x, y, x2, y2 = list(map(int, input().split()))\n\nprint(ceil(sqrt((x-x2)**2+(y-y2)**2) / (2*r)))\n\n\n\n", "import math\n\nr, x0, y0, x1, y1 = list(map(int, input().split()))\nprint(math.ceil(math.sqrt((x0 - x1) ** 2 + (y0 - y1) ** 2) * .5 / r))\n", "#! /usr/bin/python3\n\nimport decimal\nimport math\n\nr, x, y, x1, y1 = map(decimal.Decimal, input().split())\nr *= decimal.Decimal('2')\nR = ((x - x1) ** 2 + (y - y1) ** 2) ** decimal.Decimal(\"0.5\")\neps = decimal.Decimal('0.000000001')\n\nprint(math.floor((R + r - eps) / r))", "from math import hypot\nr, x, y, xn, yn = map(int, input().split())\nd = hypot(x - xn, y - yn)\nans = 0\nif d == r or d == 0:\n    print(0)\nelif d < r:\n    print(1)\nelse:\n    mama = 0\n    while mama < d:\n        mama += 2 * r\n        ans += 1\n    print(ans)", "from math import sqrt\n\n__author__ = 'Konrad Strack'\n\n\ndef solve():\n    r, x1, y1, x2, y2 = [int(x) for x in input().split()]\n\n    d = sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n\n    steps = int(d // (2 * r))\n    if steps * (2 * r) < d:\n        steps += 1\n\n    print(steps)\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "from math import sqrt as S\nr,x,y,X,Y=list(map(int,input().split()))\nD=(x-X)*(x-X)+(y-Y)*(y-Y)\nd=S(D)\nr*=2\nk=d/r\nj=int(k)\nT=j*r\nT=T*T\nif T!=D:j+=1\nprint(j)\n", "r, x1, y1, x2, y2 = (float(x) for x in input().split())\ndest = ((x1-x2)**2 + (y1-y2)**2)**0.5\nif x1 == x2 and y1 == y2:\n\tprint(0)\nelse:\n\tres = 0\n\twhile dest > 0:\n\t\tdest -= 2*r\n\t\tres += 1\n\tprint(res)", "import sys\n\n\ndef main():\n\t[r0, x0, y0, x1, y1] = list(map(int, sys.stdin.readline().split()))\n\tdistance2 = (x1 - x0)*(x1 - x0) + (y1 - y0)*(y1 - y0)\n\n\tr = 2*r0\n\n\tn = int((distance2 ** 0.5) / r) + 1\n\n\tif (n * r)**2 == distance2:\n\t\tprint(n)\n\t\treturn\n\n\tif ((n-1) * r)**2 == distance2:\n\t\tprint(n-1)\n\t\treturn\n\n\tif ((n+1) * r)**2 == distance2:\n\t\tprint(n+1)\n\t\treturn\n\n\tprint(n)\n\n\nmain()\n\n", "__author__ = 'Hippskill'\nimport math\ndef main():\n    rdl = list(map(int,input().split()))\n    way = math.sqrt((max(rdl[1],rdl[3])-min(rdl[1],rdl[3]))**2+(max(rdl[4],rdl[2])-min(rdl[2],rdl[4]))**2)\n    rdl[0] = rdl[0]*2\n    print(math.ceil(way/rdl[0]))\nmain()", "def up(a,b):\n    if a/b == int(a/b):\n        return a/b\n    return int(a/b)+1\n\nr,x,y,x1,y1=map(int, input().split())\ndis = ((x1-x)**2+(y1-y)**2)**.5\nprint(int(up(dis,2*r)))", "import math\n(r,xa,ya,xb,yb) = [int(x) for x in input().split()]\nprint(int(math.ceil(math.sqrt((xb-xa)**2+(yb-ya)**2)/(2*r))))\n", "from math import ceil, hypot\n\nr,x,y,xx,yy = list(map(float, input().split()))\nprint(ceil(hypot(xx-x, yy-y)/2/r))\n", "import math\nr, x, y, x1, y1 = list(map(int, input().split()))\ndist = ((x-x1)**2 + (y-y1)**2)**0.5\nprint(math.ceil(dist / (2*r)))\n"]