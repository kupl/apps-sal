["def isZ(a):\n    return a == int(a)\ndef geom(a,b,c,d):\n    if 0 in (a,b,c,d) and not (a==b==c==d==0):\n        return False\n    if(b/a==c/b==d/c):\n        nxt = d * (d/c)\n        if not isZ(nxt): return False\n        print(int(nxt))\n        return True\n    return False\ndef ar(a,b,c,d):\n    if(b-a==c-b==d-c):\n        print(int(2*d-c))\n        return True\n    return False\n\na,b,c,d = map(float,input().split())\nif not geom(a,b,c,d) and not ar(a,b,c,d):\n    print(42)", "a, b, c, d = list(map(int, input().split()))\n\nif b - a == c - b == d - c:\n    print(d + (d - c))\nelif b * b == a * c and c * c == b * d and (d * d) % c == 0:\n    print((d * d) // c)\nelse:\n    print(42)\n", "s=input().split()\n\nfor i in range(4):\n    s[i]=int(s[i])\n\nif(s[1]-s[0]==s[2]-s[1]==s[3]-s[2]):\n    d=s[1]-s[0]\n    if((s[3]+d)%1==0):\n        print(s[3]+d)\n    else:\n        print(42)\nelif(s[1]/s[0]==s[2]/s[1]==s[3]/s[2]):\n    d=s[1]/s[0]\n    if(int(s[3]*d)!=s[3]*d):\n        print(42)\n    else:\n        print(int(s[3]*d))\nelse:\n    print(42)\n", "arr = [int(i) for i in input().split()]\n\nq = arr[1]/arr[0]\nd = arr[1] - arr[0]\n\nif arr[2]/arr[1] == q and arr[3]/arr[2] == q:\n    if int(arr[3]*q) == arr[3]*q:\n        print(int(arr[3]*q))\n    else:\n        print(42)\nelif arr[2]-arr[1]==d and arr[3]-arr[2] == d:\n    print(arr[3]+d)\nelse:\n    print(42)", "def getints(str):\n    return list(map(int,str.split(\" \")))\n\na = getints(input())\n\nif a[1] - a[0] == a[2] - a[1] == a[3] - a[2]:\n    print(2*a[3] - a[2])\nelif (0 not in a) and (a[1] / a[0] == a[2] / a[1] == a[3] / a[2]):\n    if (a[3]*a[3] % a[2]) == 0:\n        print(a[3]*a[3] // a[2])\n    else:\n        print(42)\nelse:\n    print(42)", "import sys\nfin = sys.stdin\n\na = list(map(int, fin.readline().split()))\n\nd = a[1] - a[0]\n\nif a[2] - a[1] == a[3] - a[2] == d:\n    print(a[3] + d)\nelse:\n    d = a[1] / a[0]\n    if a[2] / a[1] == a[3] / a[2] == d and d * a[3] == int(d * a[3]):\n        print(int(d * a[3]))\n    else:\n        print(42)", "def is_arithmatic(seq):\n    return all([seq[i] - seq[i-1] == seq[i-1] - seq[i-2] for i in range(2, len(seq))])\n\ndef is_geometric(seq):\n    return all([seq[i] / seq[i-1] == seq[i-1] / seq[i-2] for i in range(2, len(seq))])\n\n  \n    \n\n\ndef main():\n    numbers = input()\n    numbers = numbers.split()\n    for i in range(0, len(numbers)):\n        numbers[i] = int(numbers[i])\n           \n    if is_arithmatic(numbers):\n        print(numbers[len(numbers) - 1] + (numbers[len(numbers) - 1] - numbers[len(numbers) - 2]))\n        \n    elif is_geometric(numbers):\n              next_number = numbers[len(numbers) - 1] * ( numbers[len(numbers) - 1] / numbers[len(numbers) - 2])\n              if next_number == int(next_number):\n                  print(int(next_number))\n              else:\n                  print(42)\n    else:\n        print(42)\n \n    \n\n#import doctest\n#doctest.testmod()\nmain()   \n", "numbers = list(map(int,input().split()))\narithmetic_prog = numbers[1] - numbers[0]\ngeometric_prog = numbers[1] / numbers[0]\n\nif numbers[3]-numbers[2] == arithmetic_prog and numbers[2]-numbers[1] == arithmetic_prog  :\n    print(numbers[-1]+arithmetic_prog)\nelif numbers[3]/numbers[2] == geometric_prog and numbers[2]/numbers[1] == geometric_prog :\n    if numbers[3]*geometric_prog - int(numbers[3]*geometric_prog) == 0:\n        print(int(numbers[-1]*geometric_prog))\n    else:\n        print(42)\n    \nelse:\n    print(42)\n    \n", "import sys\n\ndef solve():\n    a = list(map(int, input().split()))\n    diffs = list()\n    for i in range(3):\n        diffs.append(a[i+1]-a[i])\n    if diffs[0] == diffs[1] == diffs[2]:\n        return a[3] + diffs[0]\n    # print(diffs)\n    if a[1] / a[0] == a[2] / a[1] == a[3] / a[2]:\n        val = a[3] * diffs[2] / diffs[1]\n        if abs(val - int(val)) < 1e-6:\n            return int(val)\n    return 42\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "import sys\n\ndef solve():\n    a = list(map(int, input().split()))\n    diffs = list()\n    for i in range(3):\n        diffs.append(a[i+1]-a[i])\n    if diffs[0] == diffs[1] == diffs[2]:\n        return a[3] + diffs[0]\n    # print(diffs)\n    if a[1] / a[0] == a[2] / a[1] == a[3] / a[2]:\n        val = a[3] * diffs[2] / diffs[1]\n        if abs(val - int(val)) < 1e-6:\n            return int(val)\n    return 42\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nprint(solve())", "a=list(map(int,input().split()));n=len(a);o=1;d=a[1]-a[0];ok=1\nfor i in range(n-1):\n    if(a[i+1]-a[i]!=d):ok=0\nif(ok):\n    print(a[n-1]+d)\n    o=0\nd=a[1]/a[0];ok=1\nfor i in range(n-1):\n    if(a[i+1]/a[i]!=d):ok=0\nif(ok and o):\n    o=0\n    if(int(a[n-1]*d)==a[n-1]*d):print(int(a[n-1]*d))\n    else:o=1\nif(o):print(42)", "a = [int(i) for i in input().split()]\nflag=False\nd1 = a[1]-a[0]\nd2 = a[2]-a[1]\nd3 = a[3]-a[2]\nq1 = a[1]/a[0]\nq2 = a[2]/a[1]\nq3 = a[3]/a[2]\nif(d1==d2==d3):\n    print(a[3]+d1)\n    flag=True\nelif(q1==q2==q3):\n    otv = a[3]*q1-(int(a[3]*q1))\n    tmp = 0 + otv\n    if(tmp<=0):\n        print(int(a[3]*q1))\n        flag=True\nif(flag==False):\n    print('42')", "a,b,c,d=map(int,input().split())\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)", "a,b,c,d = list(map(int, input().split()))\nif d - c == c - b and c - b == b - a:\n    print(d + d - c)\nelif b*d == c*c and a*c == b*b and (d*d)%c == 0:\n    print(d*d//c)\nelse:\n    print(42)\n", "a,b,c,d=map(int,input().split())\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)", "a, b, c, d = map(int, input().split())\n\nr = 42\n\nif b - a == c - b == d - c:\n    r = d + b -a\nif b / a == c / b == d / c and int(d * b / a) == d * b / a:\n    r = int(d * c / b)\n    \nprint(r)", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=list(map(int,input().split()))\nr=42\nif b-a==c-b==d-c:r=d+b-a\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\nprint(r)\n", "a,b,c,d=map(int,input().split())\n\nr=42\n\nif b-a==c-b==d-c:r=d+b-a\n\nif b/a==c/b==d/c==int(d*c/b)/d:r=int(d*c/b)\n\nprint(r)"]