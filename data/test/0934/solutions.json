["c = input()\ns = list(input().split())\nprint('YES' if any(c[0] == x[0] or c[1] == x[1] for x in s) else 'NO')\n", "s = input()\nd = input().split()\nf = False\nfor i in d:\n    if i[0] == s[0] or i[1] == s[1]:\n        f = True\n        break\nif f:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "s = input()\narr = input().split()\n\np = False\nfor i in arr:\n    if (i[0] in s) or (i[1] in s):\n        p = True\n\nif p:\n    print('YES')\nelse:\n    print('NO')\n", "X = input()\nB = list(input().split())\n\nfor x in B:\n\tif x[0] == X[0] or x[1] == X[1]:\n\t\tprint(\"YES\")\n\t\treturn\n\nprint(\"NO\")\n", "i = input()\ni2 = input().split(' ')\n\nout = False\n\nfor s in i2:\n    if s[0] == i[0] or s[1] == i[1]:\n        out = True\n        break\n\nif out:\n    print('YES')\nelse:\n    print('NO')\n", "s = input()\na = input().split()\nfor el in a:\n\tif el[0] == s[0] or el[1] == s[1]:\n\t\tprint('YES')\n\t\treturn\nprint('NO')\n", "s=input()\nl1=list(input().split())\nflag=0\nfor item in l1:\n    if item[0]==s[0]:\n        flag=1\n        break\n    elif item[1]==s[1]:\n        flag=1\n        break\nif flag==1:\n    print(\"YES\")\nelse :\n    print(\"NO\")", "import getpass\nimport sys\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n\ncrd = input()\ncs = input().split()\nfor i in cs:\n    if i[0] == crd[0] or i[1] == crd[1]:\n        print('YES')\n        return\n\nprint('NO')\n", "s = input()\nd = input().split()\np = 0\nfor i in range(5):\n    if d[i][0] == s[0] or d[i][1] == s[1]:\n        p += 1\nif p:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "x = input()\nv = list(input().split())\nc = [q[0] for q in v if q[0] == x[0]]\nc.extend([q[1] for q in v if q[1] == x[1]])\nprint(\"YES\" if len(c) > 0 else \"NO\")\n", "t = input()\na = list(input().split())\ncan = False\nfor x in a:\n    if x[1] == t[1]:\n        can = True\n    if x[0] == t[0]:\n        can = True\nif can:\n    print(\"YES\")\nelse:\n    print(\"NO\")", "s1 = input()\nls = input().split()\nprint('YES' if any(any(s1[i] == ls[j][i] for i in range(2)) for j in range(5)) else 'NO')\n", "from bisect import bisect_right as br\nfrom bisect import bisect_left as bl\nfrom collections import defaultdict\nfrom itertools import combinations\nimport functools\nimport sys\nimport math\nMAX = sys.maxsize\nMAXN = 10**6+10\nMOD = 10**9+7\ndef isprime(n):\n    n = abs(int(n))\n    if n < 2:\n        return False\n    if n == 2: \n        return True    \n    if not n & 1: \n        return False\n    for x in range(3, int(n**0.5) + 1, 2):\n        if n % x == 0:\n            return False\n    return True\n\ndef mhd(a,b,x,y):\n    return abs(a-x)+abs(b-y)\n\ndef numIN():\n    return(map(int,sys.stdin.readline().strip().split()))\n\ndef charIN():\n    return(sys.stdin.readline().strip().split())\n\nt = [0]*1000010\n\ndef create(a,n):\n\tnonlocal t\n\tfor i in range(n,2*n):\n\t\tt[i] = a[i-n]\n\tfor i in range(n-1,0,-1):\n\t\tt[i] = t[2*i]+t[2*i+1]\n\n\ndef ncr(n,k):\n\tres = 1\n\tc = [0]*(k+1)\n\tc[0]=1\n\tfor i in range(1,n+1):\n\t    for j in range(min(i,k),0,-1):\n\t        c[j] = (c[j]+c[j-1])%MOD\n\treturn c[k]\n\ns = input()\nr = s[0]\nd = s[1]\n\nl = input().split()\n\nfor i in l:\n\tif i[0]==r or i[1]==d:\n\t\tprint('YES')\n\t\treturn\n\nprint('NO')", "A = input()\nn = input().split()\nprint('YES'if any(A.find(k[0])!=-1 or A.find(k[1])!=-1 for k in n)else'NO')\n", "x = input()\ndeck = list(input().split())\n\nget = False\nfor d in deck:\n\tif d[0] == x[0]:\n\t\tget = True\n\tif d[1] == x[1]:\n\t\tget = True\n\nif get:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "c1 = input()\ncards = input().split(' ')\n\nfor c in cards:\n  if c[0] == c1[0] or c[1] == c1[1]:\n    print('YES')\n    return\nprint('NO')\n", "# = list(map(int, input().split()))\n# = map(int, input().split())\na = input()\nz = list(map(str, input().split()))\nn = 5\nfor i in range(n):\n    if a[0] == z[i][0] or a[1] == z[i][1]:\n        print(\"YES\")\n        return\nprint(\"NO\")\n", "def ok(s1, s2):\n    return s1[0] == s2[0] or s1[1] == s2[1]\n\ncard = input()\nhand = input().split()\n\nflag = False\nfor c in hand:\n    if ok(card, c):\n        flag = True\n\nif flag:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "t = input()\ns = [i for i in input().split()]\ngood = False\nfor i in s:\n    if i[0] == t[0]:\n        good = True\n    if i[1] == t[1]:\n        good = True\n\nif good:\n    print('YES')\nelse:\n    print('NO')", "import re, math, decimal, bisect\ndef read(): return input().strip()\ndef iread(): return int(input().strip())\ndef viread(): return [int(_) for _ in input().strip().split()]\n\n# code goes here\ncard = read()\nmine = read().split()\nfor c in mine:\n\tif c[0] == card[0] or c[1] == card[1]:\n\t\tprint(\"YES\")\n\t\treturn\n\nprint(\"NO\")\n", "import sys\nimport math\n\ndef read_int():\n\treturn int(input().strip())\n\ndef read_int_list():\n\treturn list(map(int,input().strip().split()))\n\ndef read_string():\n\treturn input().strip()\n\ndef read_string_list(delim=\" \"):\n\treturn input().strip().split(delim)\n\n###### Author : Samir Vyas #######\n###### Write Code Below    #######\n\ntable_c = read_string()\n\ncards = read_string_list()\n\nfor c in cards:\n\tif c[0] == table_c[0] or c[1] == table_c[1]:\n\t\tprint(\"YES\")\n\t\treturn\n\nprint(\"NO\")", "s = input()\nf = 0\nl = input().split()\nfor i in l:\n    if i[0] == s[0] or s[1] == i[1]:\n        f = 1\nprint('YES' if f else 'NO')\n", "a=input()\nl=input().split()\nyes=0\nfor i in l:\n\tif(i[0]==a[0] or i[1]==a[1]):\n\t\tyes=1\n\t\tbreak\nif(yes):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")", "s = input()\na = s[0]\nb = s[1]\nq = input().split()\nans = \"NO\"\nfor el in q:\n    if (el[0] == a or el[1] == b):\n        ans = \"YES\"\nprint(ans)", "s = input()\nans='NO'\nmass = input().split()\nfor t in mass:\n    for k in t:\n        if k==s[0]or k==s[1]:\n            ans='YES'\nprint(ans)\n\n"]