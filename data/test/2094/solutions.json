["M=998244353\nclass Factorial:\n    def __init__(self,n):\n        self.f=f=[0]*(n+1)\n        f[0]=b=1\n        for i in range(1,n+1):f[i]=b=b*i%M\n        self.inv=inv=[0]*(n+1)\n        inv[n]=b=pow(self.f[n],M-2,M)\n        for i in range(n,0,-1):inv[i-1]=b=b*i%M\n    def factorial(self,i):\n        return self.f[i]\n    def ifactorial(self,i):\n        return self.inv[i]\n    def comb(self,n,k):\n        if n>=k:return self.f[n]*self.inv[n-k]*self.inv[k]%M\n        else:return 0\ndef main():\n    n,k,*h=map(int,open(0).read().split())\n    m=sum(i!=j for i,j in zip(h,h[1:]+h[:1]))\n    comb=Factorial(m).comb\n    print((pow(k,m,M)-sum(comb(m,i)*comb(m-i,i)*pow(k-2,m-i-i,M)for i in range(m//2+1)))*pow(k,n-m,M)*pow(2,M-2,M)%M)\nmain()", "def main():\n    M=998244353\n    n,k,*h=map(int,open(0).read().split())\n    m=sum(i!=j for i,j in zip(h,h[1:]+h[:1]))\n    f=[0]*(m+1)\n    f[0]=b=1\n    for i in range(1,m+1):f[i]=b=b*i%M\n    inv=[0]*(m+1)\n    inv[m]=b=pow(f[m],M-2,M)\n    for i in range(m,0,-1):inv[i-1]=b=b*i%M\n    comb=lambda n,k:f[n]*inv[n-k]*inv[k]%M\n    print((pow(k,m,M)-sum(comb(m,i)*comb(m-i,i)*pow(k-2,m-i-i,M)for i in range(m//2+1)))*pow(k,n-m,M)*pow(2,M-2,M)%M)\nmain()", "def main():\n    M=998244353\n    n,k,*h=map(int,open(0).read().split())\n    m=sum(i!=j for i,j in zip(h,h[1:]+h[:1]))\n    f=[0]*(m+1)\n    f[0]=b=1\n    for i in range(1,m+1):f[i]=b=b*i%M\n    inv=[0]*(m+1)\n    inv[m]=b=pow(f[m],M-2,M)\n    for i in range(m,0,-1):inv[i-1]=b=b*i%M\n    comb=lambda n,k:f[n]*inv[n-k]*inv[k]%M\n    print((pow(k,m,M)-sum(comb(m,i)*comb(m-i,i)*pow(k-2,m-i-i,M)for i in range(m//2+1)))*pow(k,n-m,M)*pow(2,M-2,M)%M)\nmain()"]