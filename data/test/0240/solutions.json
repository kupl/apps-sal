["import math\nfrom collections import Counter\n\ns = list(map(int, input()))\nsubstr = input().rstrip()\nt = list(map(int, substr))\n\nm = len(s)\nx, y = 0, m\nz = (x + y) // 2\nwhile z != x:\n    if z + math.floor(math.log10(z)) + 1 <= m:\n        x = z\n    else:\n        y = z\n    z = (x + y)//2\nm1 = z\nk = math.floor(math.log10(m1)) + 1\n\nD = Counter(s)\nD.subtract(list(map(int, str(m1))))\nD.subtract(t)\ntry:\n    c1 = min(i for i in range(1, 10) if D[i] > 0)\n    c2 = t[0]\n\n    D[c1] -= 1\n    _prefix = [c1]\n    \n    for c in range(c2):\n        _prefix += [c] * D[c]\n    _suffix = []\n    for c in range(c2 + 1, 10):\n        _suffix += [c] * D[c]\n    num = ''.join([str(c2)] * D[c2])\n    prefix = ''.join(map(str, _prefix))\n    suffix = ''.join(map(str, _suffix))\n\n    if c2 == 0:\n        print((min(prefix + substr + num + suffix,\n                  prefix + num + substr + suffix)))\n    else:\n        D[c1] += 1\n        st = []\n        for c in range(10):\n            st += [c] * D[c]\n        print((min(prefix + substr + num + suffix,\n                  prefix + num + substr + suffix,\n                  substr + ''.join(map(str, st)))))\nexcept ValueError:\n    print(substr + '0'*D[0])\n", "def main():\n    s = input()\n    if s in (\"01\", \"10\"):\n        print(0)\n        return\n    cnt = [0] * 58\n    for j in map(ord, s):\n        cnt[j] += 1\n    n, s1 = sum(cnt), input()\n    for le in range(n - 1, 0, -1):\n        if len(str(le)) + le == n:\n            break\n    for s in s1, str(le):\n        for j in map(ord, s):\n            cnt[j] -= 1\n    res = [''.join([s1] + [chr(i) * a for i, a in enumerate(cnt) if a])] if s1[0] > '0' else []\n    for i in range(49, 58):\n        if cnt[i]:\n            cnt[i] -= 1\n            l = [chr(i) * a for i, a in enumerate(cnt) if a]\n            l.append(s1)\n            res.append(''.join([chr(i)] + sorted(l)))\n            break\n    print(min(res))\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import sys\n\ndef main():\n    a = sys.stdin.readline().strip()\n    b = sys.stdin.readline().strip()\n\n    if a == \"01\" or a == \"10\":\n        print(\"0\")\n        return\n\n    cnt = [0] * 256\n    for i in map(ord, a):\n        cnt[i] += 1\n    n = sum(cnt)\n\n    l = 0\n    for i in range(1, 8):\n        if i == len(str(n - i)):\n            l = n - i\n            break;\n\n    for s in b, str(l):\n        for i in map(ord, s):\n            cnt[i] -= 1\n\n    res = [\"\".join([b] + [chr(k) * v for k, v in enumerate(cnt) if v > 0 ])] if b[0] > \"0\" else []\n\n    for i in range(ord(\"1\"), ord(\"9\") + 1):\n        if cnt[i] > 0:\n            cnt[i] -= 1\n            others = [chr(k) * v for k, v in enumerate(cnt) if v > 0]\n            others.append(b)\n            res.append(\"\".join([chr(i)] + sorted(others)))\n            break\n\n    print(min(res))\n\ndef __starting_point():\n    main()\n__starting_point()", "import sys\n\ndef main():\n    a = sys.stdin.readline().strip()\n    b = sys.stdin.readline().strip()\n\n    if a == \"01\" or a == \"10\":\n        print(\"0\")\n        return\n\n    cnt = [0] * 256\n    for i in map(ord, a):\n        cnt[i] += 1\n    n = sum(cnt)\n\n    l = 0\n    for i in range(1, 8):\n        if i == len(str(n - i)):\n            l = n - i\n            break;\n\n    for s in b, str(l):\n        for i in map(ord, s):\n            cnt[i] -= 1\n\n    res = [\"\".join([b] + [chr(k) * v for k, v in enumerate(cnt) if v > 0 ])] if b[0] > \"0\" else []\n\n    for i in range(ord(\"1\"), ord(\"9\") + 1):\n        if cnt[i] > 0:\n            cnt[i] -= 1\n            others = [chr(k) * v for k, v in enumerate(cnt) if v > 0]\n            others.append(b)\n            res.append(\"\".join([chr(i)] + sorted(others)))\n            break\n\n    print(min(res))\n\ndef __starting_point():\n    main()\n__starting_point()", "a = input()\nb = input()\nd = [0] * 10\nn = 0\nfor j in range(1000100):\n    t = str(j)\n    if len(t) + j == len(a):\n        n = j\nfor x in str(n):\n    d[ord(x) - ord('0')] -= 1\nfor x in a:\n    d[ord(x) - ord('0')] += 1\nfor x in b:\n    d[ord(x) - ord('0')] -= 1\nif sum(d)==0:\n    print(b)\nelse:\n    A = []\n    B = []\n    C = []\n    D = []\n    if b[0] != '0':\n        A = list(b)\n        for j in range(10):\n            for k in range(d[j]):\n                A.append(chr(ord('0') + j))\n    t = 1\n    while t < len(d) and d[t] == 0:\n        t += 1\n    oo = ord('0')\n    if t < len(d):\n        B.append(chr(oo+t))\n        d[t] -= 1\n        for j in range(ord(b[0]) - oo):\n            for k in range(d[j]):\n                B.append(chr(ord('0') + j))\n        B.extend(list(b))\n        for j in range(ord(b[0]) - oo, 10):\n            for k in range(d[j]):\n                B.append(chr(ord('0') + j))\n        \n        \n        C.append(chr(oo+t))\n        for j in range(min(ord(b[0]) - oo+1, 10)):\n            for k in range(d[j]):\n                C.append(chr(ord('0') + j))\n        C.extend(list(b))\n        for j in range(ord(b[0]) - oo+1, 10):\n            for k in range(d[j]):\n                C.append(chr(ord('0') + j))\n        \n    ans = []\n    if len(A) > 0:\n        ans.append(''.join(A))\n    \n    if len(B) > 0:\n        ans.append(''.join(B))\n    \n    if len(C) > 0:\n        ans.append(''.join(C))\n    \n    print(min(ans))"]