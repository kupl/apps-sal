["def main():\n\tn, m, mn, mx = map(int, input().split())\n\tA = list(map(int, input().split()))\n\ta = min(A)\n\tb = max(A)\n\tif a < mn or b > mx:\n\t\tprint(\"Incorrect\")\n\t\treturn\n\tcnt = 0\n\tif a > mn:\n\t\tcnt += 1\n\tif b < mx:\n\t\tcnt += 1\n\tif m + cnt <= n:\n\t\tprint(\"Correct\")\n\telse:\n\t\tprint(\"Incorrect\")\n\nmain()", "[n, m, min_t, max_t], t = list(map(int, input().split())), list(map(int, input().split()))\nmin_m, max_m = min(t), max(t)\nif min_m >= min_t and max_m <= max_t and (n - m) >= ((min_m != min_t) + (max_m != max_t)):\n    print('Correct')\nelse:\n    print('Incorrect')\n", "n, m, min_, max_ = list(map(int, input().split()))\nl = sorted(list(map(int, input().split())))\nif l[0]  < min_ or l[-1] > max_:\n    print(\"Incorrect\")\nelse:\n    if l[-1] < max_:\n        l.append(max_)\n    if l[0] > min_:\n        l.append(min_)\n    if len(l) <= n:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\n\n", "n, m, mi, ma = map(int, input().split())\nt = list(map(int, input().split()))\nmit = min(t)\nmat = max(t)\nif (mi <= mit and ma >= mat) and (n - m  >= 2 or (n - m >= 1 and (mit == mi or mat == ma)) or (mit == mi and mat == ma)):\n    print('Correct')\nelse:\n    print('Incorrect')", "n, m, mmin, mmax = map(int, input().split())\ns = list(map(int, input().split()))\ns = sorted(s)\nif s[0] < mmin or s[m - 1] > mmax:\n    print(\"Incorrect\")\nelif s[0] == mmin and s[m - 1] == mmax:\n    print(\"Correct\")\nelif s[0] != mmin and s[m - 1] != mmax:\n    if n - m < 2:\n        print(\"Incorrect\")\n    else:\n        print(\"Correct\")\nelif s[0] != mmin or s[m - 1] != mmax:\n    if n - m < 1:\n        print(\"Incorrect\")\n    else:\n        print(\"Correct\")", "n, _, small, big =  list(map(int, input().split()))\nm = list(map(int, input().split()))\n\ndiff = n - _\n\nrd = 0\n\nif (max(m) != big):\n    rd += 1\nif (min(m) != small):\n    rd += 1\n\nif min(m) < small or max(m) > big:\n    print('Incorrect')\n    return\n\n#print('diff', diff)\n#print('rd', rd)\n#n - vsego\n# m zapisal pomosh\n\nif rd <= diff:\n    print('Correct')\nelse:\n    print('Incorrect')\n", "n, m, mi, ma = map(int, input().split())\na = sorted(list(map(int, input().split())))\nif n - m >= 2:\n    if a[0] >= mi and a[-1] <= ma:\n        print('Correct')\n    else:\n        print('Incorrect')\nelif n - m == 1:\n    if (a[0] >= mi and a[-1] == ma) or (a[0] == mi and a[-1] <= ma):\n        print('Correct')\n    else:\n        print('Incorrect')\nelse:\n    if a[0] == mi and a[-1] == ma:\n        print('Correct')\n    else:\n        print('Incorrect')", "x = 0\nres = 0\nn, m, mn, mx = list(map(int, input().split()))\nlst = list(map(int, input().split()))\nfor i in range(m):\n    if lst[i] < mn or lst[i] > mx:\n        res = \"Incorrect\"\n        break\n    if lst[i] == mn:\n        x = 1\n    elif lst[i] == mx:\n        x = 1\nif res == \"Incorrect\":\n    print(res)\nelse:\n    if n - m >= 2 - x:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\n", "n,m,minn,maxx=list(map(int,input().split()))\n\nL=list(map(int,input().split()))\n\nr=0\nif(minn not in L):\n    L+=[minn]\n    r+=1\nif(maxx not in L):\n    L+=[maxx]\n    r+=1\nvalid=True\n\nfor i in range(m):\n    if(L[i]<minn):\n        valid=False\n    if(L[i]>maxx):\n        valid=False\nif(r>n-m or not valid):\n    print(\"Incorrect\")\nelse:\n    print(\"Correct\")\n", "n, m , minimum, maximum = list(map(int, input().split()))\nlist_of_m = list(map(int, input().split()))\n\nmaxi =  max(list_of_m)\nmini =  min(list_of_m)\n\nif maxi < maximum and mini > minimum :\n    if n - m >= 2:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\nelif maxi == maximum and mini > minimum :\n    if n - m >= 1:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\nelif maxi < maximum and mini == minimum :\n    if n - m >= 1:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\nelif maxi == maximum and mini == minimum :\n    print(\"Correct\")\nelse:\n    print(\"Incorrect\")\n", "n, k, s, b =  list(map(int, input().split()))\nm = list(map(int, input().split()))\nprint(('Inc' if min(m)<s or max(m)>b or (max(m)!=b)+(min(m)!=s)>n-k else 'C') + 'orrect')\n", "n, m, mi, ma = tuple(map(int, str.split(input())))\nts = tuple(map(int, str.split(input())))\nif max(ts) > ma or min(ts) < mi:\n\n    ans = \"Incorrect\"\n\nelse:\n\n    count = 2\n    if mi in ts:\n\n        count -= 1\n\n    if ma in ts:\n\n        count -= 1\n\n    if n - m >= count:\n\n        ans = \"Correct\"\n\n    else:\n\n        ans = \"Incorrect\"\n\nprint(ans)\n", "n, m, minn, maxx = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncnt = 0\nif minn != a[0]:\n    cnt += 1\nif maxx != a[-1]:\n    cnt += 1\nif maxx < a[-1]:\n    cnt += 10000000000000000000\nif minn > a[0]:\n    cnt += 10000000000000000000\nif n - m >= cnt:\n    print(\"Correct\")\nelse:\n    print(\"Incorrect\")", "n, m, a, b = map(int, input().split())\nt = list(map(int, input().split()))\nx, y = min(t), max(t)\nprint('Correct' if a <= x and y <= b and len(t) + int(a < x) + int(y < b) <= n else 'Incorrect')", "n, m, Min, Max = map(int, input().split())\na = list(map(int, input().split()))\nremain = n - m\ncnt = 0\nflag = 0\nfor i in a:\n    if i == Min or i == Max:\n        cnt += 1\n    if i < Min or i > Max:\n        flag = -1\ncnt = 2 - cnt\nif flag == -1:\n    print(\"Incorrect\")\nelse:\n    if n - m >= cnt:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")", "(n, m, mi, mx) = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif a[0]!=mi:\n    m += 1\nif a[-1]!=mx:\n    m += 1\nif a[0]<mi:\n    m += n+1\nif a[-1]>mx:\n    m += n+1\nprint(['Incorrect', 'Correct'][m<=n])", "R = lambda:map(int, input().split())\nn, m, a, b = R()\nt = list(R())\nprint(\"Incorrect\" if n - m == 1 and min(t) != a and max(t) != b or min(t) < a or max(t) > b else \"Correct\")", "n, m, Min, Max = map(int, input().split())\nt = list(map(int, input().split()))\n\nif min(t) >= Min and max(t) <= Max:\n    if m + abs(len({Min,Max} & set(t))-2) <= n:\n        print('Correct')\n    else:\n        print('Incorrect')\nelse:\n    print('Incorrect')", "n, m, Min, Max = map(int, input().split())\na = list(map(int, input().split()))\nremain = n - m\ncnt = 0\nflag = 0\nfor i in a:\n    if i == Min or i == Max:\n        cnt += 1\n    if i < Min or i > Max:\n        flag = -1\ncnt = 2 - cnt\nif flag == -1:\n    print(\"Incorrect\")\nelif n - m >= cnt:\n    print(\"Correct\")\nelse:\n    print(\"Incorrect\")", "import sys\nfrom itertools import *\nfrom math import *\nMAX = 10000000\ndef solve():\n    n, m, ss, ll = list(map(int, input().split()))\n    a = set(map(int, input().split()))\n    wantothers = 0\n    smallest = 100000000\n    largest = -1\n    for val in a:\n        smallest = min(smallest, val)\n        largest = max(largest, val)\n    if smallest < ss or largest > ll:\n        print(\"Incorrect\")\n        return\n    if ss not in a: wantothers+=1\n    if ll not in a: wantothers+=1\n    print(\"Correct\" if wantothers <= n - m else \"Incorrect\")\n\nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()\n", "n, m, v1, v2 = list(map(int, input().split()))\nt = list(map(int, input().split()))\nt1, t2 = min(t), max(t)\nif t1 < v1 or t2 > v2:\n    print('Incorrect')\nelif (v1 < t1) + (v2 > t2) > n - m:\n    print('Incorrect')\nelse:\n    print('Correct')\n", "I=lambda:list(map(int,input().split()))\nn,m,N,X=I()\nt=I()\nr=min(t)!=N\nr+=max(t)!=X\nprint(['C','Inc'][m+r>n or min(t)<N or max(t)>X]+'orrect')", "n,m,mn,mx = input().split()\nn,m,mn,mx = int(n),int(m),int(mn),int(mx)\ndiff = n-m\ntem = [int(x) for x in input().split()]\nflag = 0\ncheck = 0\nfor x in tem:\n    if x == mn or x == mx:\n        flag = 1\n    if x<mn or x>mx:\n        check = 1\n    \n#print(flag,diff)\nif not check:\n    if diff >= 2:\n        print(\"Correct\")\n    elif diff == 1 and flag:\n        print(\"Correct\")\n    else:\n        print(\"Incorrect\")\nelse:\n    print(\"Incorrect\")", "n, m, mn, mx = list(map(int, input().split()))\ntemps = list(map(int, input().split()))\nmnt = min(temps)\nmxt = max(temps)\nif mnt < mn or mxt > mx:\n    print('Incorrect')\n    return\nif n - m > 1:\n    print('Correct')\n    return\nmnp = mn in temps\nmxp = mx in temps\nif n - m == 1 and (mnp or mxp):\n    print('Correct')\nelif mnp and mxp:\n    print('Correct')\nelse:\n    print('Incorrect')", "\nimport re\nimport inspect\nfrom sys import argv, exit\n\ndef rstr():\n    return input()\n\ndef rstrs(splitchar=' '):\n    return [i for i in input().split(splitchar)]\n\ndef rint():\n    return int(input())\n\ndef rints(splitchar=' '):\n    return [int(i) for i in rstrs(splitchar)]\n\ndef varnames(obj, namespace=globals()):\n    return [name for name in namespace if namespace[name] is obj]\n\ndef pvar(var, override=False):\n    prnt(varnames(var), var)\n\ndef prnt(*args, override=False):\n    if '-v' in argv or override:\n        print(*args)\n\n# Faster IO\npq = []\ndef penq(s):\n    if not isinstance(s, str):\n        s = str(s)\n    pq.append(s)\n\ndef pdump():\n    s = ('\\n'.join(pq)).encode()\n    os.write(1, s)\n\ndef __starting_point():\n    timesteps, ast, mn, mx = rints()\n    to_add = timesteps - ast\n    asts = rints()\n    for t in asts:\n        if t < mn or t > mx:\n            print('Incorrect')\n            return\n    if mn not in asts:\n        if to_add == 0:\n            print('Incorrect')\n            return\n        else:\n            to_add -= 1\n\n    if mx not in asts:\n        if to_add == 0:\n            print('Incorrect')\n            return\n        else:\n            to_add -= 1\n\n    print('Correct')\n\n        \n\n__starting_point()"]