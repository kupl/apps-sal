["n = int(input())\nm = int(input())\n\nprint(m % (1 << n))", "n=int(input())\nprint(int(input())%(2**min(n,40)))\n", "N = int(input())\nM = int(input())\n\nif N > 50:\n    print(M)\nelse:\n    print(M % (2**N))\n", "n = int(input())\nm = int(input())\nprint(m % (1 << n))", "import sys\n\ndef main():\n    n = int(input())\n    m = int(input())\n    if n < 50:\n        m = m % pow(2, n)\n    \n    print(m)\n    \n    \n\t\ndef __starting_point():\n    main() \n    \n\n__starting_point()", "#!/usr/bin/env python3\n\ndef main():\n    n = int(input())\n    m = int(input())\n    print(m % (1 << n) if m >> n else m)\n\ntry:\n    while True:\n        main()\nexcept EOFError:\n    pass\n", "n = int(input())\nm = int(input())\n\nif n > 30:\n  n = 30\n\nprint(m % (2**n))", "n = int(input())\nm = int(input())\nif n > 31:\n\tprint(m)\nelse:\n\tprint(m % 2**n)", "3\n# Copyright (C) 2017 Sayutin Dmitry.\n#\n# This program is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License as\n# published by the Free Software Foundation; version 3\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; If not, see <http://www.gnu.org/licenses/>.\n\ndef main():\n    n = int(input())\n    m = int(input())\n\n    if n >= 100:\n        print(m)\n    else:\n        print(m % (2 ** n))\n\nmain()\n", "y=int(input())\nx=int(input())\n\nif y>30: print(x)\nelse:\n\tz = 1\n\tfor i in range(y):\n\t\tz *= 2\n\tprint(x % z)", "n = int(input())\nm = int(input())\n\nif n > 50: print(m)\nelse: print(m % (2 ** n))", "n = int(input())\nm = int(input())\n\nif n >= 27:\n    print(m)\nelse:\n    k = m % (1 << n)\n    print(k)", "n = int(input())\nm = int(input())\nif n > 100:\n    print (m)\nelse:\n    print(m % 2 ** n)\n\n", "n=int(input())\nm=int(input())\nj=1\nfor i in range(n):\n\tj*=2\n\tif(j>m):\n\t\tbreak\nprint(m%j)", "n = int(input())\nm = int(input())\ncur = 1;\nfor i in range(n):\n\tcur *= 2\n\tif (cur > m):\n\t\tbreak\nprint(m % cur)", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\nm = ii()\nn = min(n, 32)\nprint(m % (2**n))", "read = lambda: list(map(int, input().split()))\nn, m = int(input()), int(input())\nif n < 100:\n    print(m % (2**n))\nelse:\n    print(m)\n", "n = int(input())\nm = int(input())\n\nr = pow(2, min(n, 60))\n\nprint(m % r)\n", "N = int(input())\nM = int(input())\n\nif N > 32:\n    print(M)\nelse:\n    print(M%(1<<N))\n", "n=int(input())\nm=int(input())\nprint(m%2**n)", "n,m = int(input()), int(input())\nif n > 30:\n    print(m)\nelse:\n    print(m % (2 ** n))", "from sys import stdin, stdout\n\nn = int(stdin.readline())\nm = int(stdin.readline())\n\nif n >= 100:\n    stdout.write(str(m))\nelse:\n    stdout.write(str(m % (2 ** n)))", "n = min(64, int(input()))\nm = int(input())\n\nprint(m % (2 ** n))\n", "n = int(input())\nm = int(input())\nprint(m % (1 << n))", "import math\nn = int(input())\nm = int(input())\nif n <= 100:\n    print(m % (2 ** n))\nelse:\n    print(m)"]