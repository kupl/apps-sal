["def i23(x):\n    while x%2==0:\n        x//=2\n    while x%3==0:\n        x//=3\n    return x == 1\nimport fractions\nfrom fractions import gcd\nx = int(input())\ny = list(map(int, input().split(' ')))\n\ngcdx = y[0]\nfor i in y:\n    gcdx = gcd(i, gcdx)\n\nfor i in y:\n    if not i23(i/gcdx):\n        print(\"No\")\n        quit()\nprint(\"Yes\")\n", "def solve(N, As):\n    core = find_core(As[0])\n    for a in As[1:]:\n        core_a = find_core(a)\n        if core != core_a:\n            return False\n    return True\n\ndef find_core(a):\n    while a % 2 == 0:\n        a //= 2\n    while a % 3 == 0:\n        a //= 3\n    return a\n\nN = int(input())\nAs = list(map(int, input().split()))\nif solve(N, As):\n    print('Yes')\nelse:\n    print('No')\n", "input()\n\ndef gcd(a,b):\n    x,y = a,b\n    while x:\n        x, y = y % x, x\n    return y\n\nnumbers = list(map(int, input().split()))\n\ndiv = numbers[0]\nfor x in numbers:\n    div = gcd(div, x)\n\nfor x in numbers:\n    x = x / div\n    while x % 3 == 0:\n        x = x / 3\n    while x % 2 == 0:\n        x = x / 2\n    if x != 1:\n        print(\"No\")\n        return\n\nprint(\"Yes\")\n", "def check(x):\n    while (x>1):\n        if (x%2==0):\n            x/=2\n        elif (x%3==0):\n            x/=3\n        else:\n            return False\n    return True\n\na=[]\nn=int(input())\na=list(map(int,input().split()))\na.sort()\nflag=True\nwhile (a[0]%2==0 or a[0]%3==0):\n    if(a[0]%2==0):\n        a[0]/=2\n    else:\n        a[0]/=3\n#print (a)\nfor x in a:\n    y=x%a[0]\n    z=x/a[0]\n    #print (y,z)\n    if(y==0 and check(z)):\n        continue\n    else:\n        flag=False\nif flag==True:\n    print ('Yes')\nelse:\n    print ('No')", "amount = int(input())\nbet = map(int, input().split())\nbet_list = list(bet)\nfor i in range(0, amount):\n    while bet_list[i]%2==0:\n        bet_list[i]//=2\n    while bet_list[i]%3==0:\n        bet_list[i]//=3\nbet_list.sort()\nif bet_list[0] == bet_list[-1]:\n    print('Yes')\nelse:\n    print('No')", "amount = int(input()) #\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0430\u0432\u043e\u043a\nbet = map(int, input().split())\nbet_list = list(bet) # \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\nfor i in range(0, amount):\n    while bet_list[i]%2==0:\n        bet_list[i]/=2\n    while bet_list[i]%3==0:\n        bet_list[i]/=3\nbet_list.sort()\nif bet_list[0] == bet_list[-1]:\n    print('Yes')\nelse:\n    print('No')", "amount = int(input()) #\u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0430\u0432\u043e\u043a\nbet = map(int, input().split())\nbet_list = list(bet) # \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0441\u043f\u0438\u0441\u043e\u043a\nfor i in range(0, amount):\n    while bet_list[i]%2==0:\n        bet_list[i]/=2\n    while bet_list[i]%3==0:\n        bet_list[i]/=3\nbet_list.sort()\nif max(bet_list) == min(bet_list):\n    print('Yes')\nelse:\n    print('No')", "def gcd(a,b):\n\twhile(b!=0):\n\t\tr = a%b\n\t\ta = b\n\t\tb = r\n\treturn a\ndef valid(m,n):\n\tg = gcd(m,n)\n\tx = m//g\n\ty = n//g\n\tdo1 = 0\t\n\ttr1 = 0\n\tdo2 = 0 \n\ttr2 = 0\n\twhile(x%2==0):\n\t\tx/=2\n\t\tdo1+=1\n\twhile(x%3==0):\n\t\tx/=3\n\t\ttr1+=1\n\n\twhile(y%2==0):\n\t\ty/=2\n\t\tdo2+=1\n\twhile(y%3==0):\n\t\ty/=3\n\t\ttr2+=1\n\t\t\n\tif(x>1 or y>1):\n\t\treturn -1\n\treturn g*pow(2,max(do1,do2))*pow(3,max(tr1,tr2))\nN = int(input())\nA = list(int(i) for i in input().split())\nprev = -1\nanswered = False\nfor i in range(N):\n\tif(prev==-1):\n\t\tprev = A[i]\n\t\tcontinue\n\tm = max(A[i],prev)\n\tn = min(A[i],prev)\n\tprev = valid(m,n)\n\tif(prev==-1):\n\t\tprint (\"No\")\n\t\tanswered = True\n\t\tbreak\nif(not answered):\n\tprint(\"Yes\")\n", "n = input()\nLi = input()\nar = map(int, Li.split())\nres = -1\nfl = 1\nfor i in ar:\n    while i%2 == 0:\n        i = i/2\n    while i%3 == 0:\n        i = i/3\n    if res == -1:\n        res = i\n    elif res != i:\n        fl = 0\nif fl == 1:\n    print (\"Yes\\n\")\nelse:\n    print (\"No\\n\")", "from functools import reduce\ng=lambda a,b:g(b,a%b)if b else a\ngcd=lambda x:reduce(g,x)\ninput()\n*a,=list(map(int,input().split()))\nb=gcd(a)\na=[i//b for i in a]\nc=True\nfor i in a:\n    while not i%2:i//=2\n    while not i%3:i//=3\n    if i!=1:\n        c=False\n        print('No')\n        break\nif c:print('Yes')\n", "n = int(input())\na = [int(x) for x in input().split()]\nfor i in range(n):\n\twhile a[i] % 2 == 0:\n\t\ta[i] /= 2\n\twhile a[i] % 3 == 0:\n\t\ta[i] /= 3\nprint('Yes' if all(x == a[0] for x in a) else 'No')\n", "n=int(input())\nl=input().split()\nfor i in range(n):\n    l[i]=int(l[i])\n    while(l[i]%2==0):\n        l[i]/=2\n    while(l[i]%3==0):\n        l[i]/=3\nflag=1\nfor i in range(n):\n    if(l[i]!=l[0]):\n        print(\"No\")\n        flag=0\n        break\nif(flag):\n    print(\"Yes\")\n", "__author__ = '$'\nimport sys\n\n\ndef GCD (x, y):\n    return x if y == 0 else GCD(y, x % y)\ntry:\n    while True:\n        n = int(input())\n        val = list(map(int, input().split(\" \")))\n        res = val[0]\n        for i in range(n-1):\n            res = GCD(res, val[i+1])\n        ans = True\n        for i in range(n):\n            tmp = val[i] // res\n            while tmp != 1:\n                if tmp % 2 == 0:\n                    tmp //= 2\n                elif tmp % 3 == 0:\n                    tmp //= 3\n                else:\n                    ans = False\n                    break\n            if not ans:\n                break\n        print(\"Yes\" if ans else \"No\")\nexcept EOFError:\n    pass", "def div23(a):\n\twhile (a % 2 == 0):\n\t\ta //= 2\n\twhile (a % 3 == 0):\n\t\ta //= 3\n\treturn a\n\nn = int(input())\ns = [int(i) for i in input().split(' ')]\na = div23(s[0])\ni = 1\nwhile i < len(s):\n\tif (a != div23(s[i])):\n\t\tbreak\n\ti += 1\n\nif i == len(s):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "__author__ = 'pxy'\nn=int(input())\nc=[int(i) for i in input().split()]\nfor j in range(n):\n    while c[j] % 2 == 0:\n        c[j]=c[j]// 2\n    while c[j] % 3 == 0:\n        c[j]=c[j]// 3\nf=True\nfor j in range(n-1):\n    if(c[j]!=c[j+1]):\n\n        f=False\n        break\nif f:\n    print('Yes')\nelse:\n    print('No')", "__author__ = 'pxy'\nn=int(input())\nc=[int(i) for i in input().split()]\nf=True\nfor j in range(n):\n    while c[j] % 2 == 0:\n        c[j]=c[j]// 2\n    while c[j] % 3 == 0:\n        c[j]=c[j]// 3\n    if j>=1:\n        if(c[j]!=c[j-1]):\n            f=False\n            break\n\nif f:\n    print('Yes')\nelse:\n    print('No')", "__author__ = 'pxy'\nn=int(input())\nc=[int(i) for i in input().split()]\nf=True\nfor j in range(n):\n    while c[j] % 2 == 0:\n        c[j]=c[j]// 2\n    while c[j] % 3 == 0:\n        c[j]=c[j]// 3\nif(max(c)==min(c)):\n    print('Yes')\nelse:\n    print('No')", "n = int(input())\na = input().split()\nfor i in range(n):\n    a[i] = int(a[i])\n\ndef thanhloc(x):     #loai bo het factor 2 va 3\n    while (x % 2 == 0):\n        x = x //2\n    while (x % 3 == 0):\n        x = x //3\n    return(x)\n\nres = 'Yes'\na[0] = thanhloc(a[0])\n#import pdb; pdb.set_trace()\nfor i in range(1,n):\n    a[i] = thanhloc(a[i])\n    if a[i] != a[i-1] :\n        res = 'No'\n        break\n\nprint(res)\n", "n = int(input())\na = [int(i) for i in input().split()]\nfor i in range (n):\n    while a[i] % 2 == 0:\n        a[i] = a[i]// 2\n    while a[i] % 3 == 0:\n        a[i] = a[i]// 3\nr = 0;\nfor i in range (n-1):\n     if a[i] != a[i+1]:\n        r = 1;\nif r:\n    print('No')\nelse:\n    print ('Yes')\n    \n", "def main():\n    input()\n    l = list(map(int, input().split()))\n    a = l[-1]\n    while not a % 2:\n        a //= 2\n    while not a % 3:\n        a //= 3\n    for x in l:\n        while not x % 2:\n            x //= 2\n        while not x % 3:\n            x //= 3\n        if x != a:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    input()\n    l = list(map(int, set(input().split())))\n    a = l[-1]\n    while not a % 2:\n        a //= 2\n    while not a % 3:\n        a //= 3\n    for x in l:\n        while not x % 2:\n            x //= 2\n        while not x % 3:\n            x //= 3\n        if x != a:\n            print(\"No\")\n            return\n    print(\"Yes\")\n\n\ndef __starting_point():\n    main()\n\n__starting_point()"]