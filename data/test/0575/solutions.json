["n = int(input())\nax, ay = list(map(int, input().split(' ')))\nbx, by = list(map(int, input().split(' ')))\ncx, cy = list(map(int, input().split(' ')))\n\nif ((cx < ax) == (bx < ax)) and ((cy < ay) == (by < ay)):\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\n\nax, ay = list(map(int, input().split()))\nbx, by = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\n\nx = [ax, bx, cx]\ny = [ay, by, cy]\n\nx.sort()\ny.sort()\n\nif (x[1] != ax) and (y[1] != ay):\n        print('YES')\nelse:\n        print('NO')\n", "n = int(input())\nx1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nx3, y3 = list(map(int, input().split()))\nif (x2 < x1 and x3 < x1 or x2 > x1 and x3 > x1) and (y2 < y1 and y3 < y1 or y2 > y1 and y3 > y1):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "n=int(input())\na,b=map(int,input().split())\nb1,b2=map(int,input().split())\nc1,c2=map(int,input().split())\nb1-=a\nb2-=b\nc1-=a\nc2-=b\nif b1==0 or b2==0 or c1==0 or c2==0:print('NO')\nelse:\n    if b1*c1<0 or b2*c2<=0:print('NO')\n    else:print('YES')", "import sys\nimport string\nfrom math import gcd\nimport getpass\nimport math\nfrom decimal import Decimal\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\nif getpass.getuser() != 'frohenk':\n    filename = 'half'\n    # sys.stdin = open('input.txt')\n    # sys.stdout = open('output.txt', 'w')\nelse:\n    sys.stdin = open('input.txt')\n    # sys.stdin.close()\n# sys.stdout = open('input.txt','w')\n\nn = ria()[0]\nx, y = ria()\nbx, by = ria()\ncx, cy = ria()\n\nx1, y1 = x - bx, y - by\nx2, y2 = x - cx, y - cy\n\nif abs(x2) == abs(y2):\n    print('NO')\n    return\nif math.copysign(x2, x1) != x2:\n    print('NO')\n    return\nif math.copysign(y2, y1) != y2:\n    print('NO')\n    return\nprint('YES')", "import sys\n\ndef __starting_point():\n    cin = sys.stdin\n\n    n = int(next(cin))\n    ax, ay = list(map(int, next(cin).split()))\n    bx, by = list(map(int, next(cin).split()))\n    cx, cy = list(map(int, next(cin).split()))\n\n#   if cx == ax or cy == ay or cx-cy==ax-ay or cx+cy==ax+ay:\n#       print('YES')\n#       return\n    if (ax-bx)*(ax-cx) > 0 and (ay-by)*(ay-cy) > 0:\n        print('YES')\n    else:\n        print('NO')\n\n__starting_point()", "# make sure the king never crosses the row or column the queen is in\n\nn = int(input())\nax, ay = list(map(int, input().split()))\nbx, by = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\n\nif bx < ax < cx or bx > ax > cx or by < ay < cy or cy < ay < by:\n    print('NO')\nelse:\n    print('YES')\n", "size = int(input())\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif (y2 - y1) * (y3 - y1) > 0 and (x2 - x1) * (x3 - x1) > 0 and x1 + y1 != x3 + y3:\n    print('YES')\nelse:\n    print('NO')", "n = int(input())\nax, ay = map(int, input().split())\nbx, by = map(int, input().split())\ncx, cy = map(int, input().split())\n\nif bx < ax < cx:\n    print(\"NO\")\nelif cx < ax < bx:\n    print(\"NO\")\nelif by < ay < cy:\n    print(\"NO\")\nelif cy < ay < by:\n    print(\"NO\")\nelse:\n    print(\"YES\")", "n = int(input())\nax, ay = list(map(int, input().split()))\nbx, by = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\n\nif (bx > ax, by > ay) != (cx > ax, cy > ay):\n    print(\"NO\")\n    return\n\nprint(\"YES\")\n", "def sign(x):\n    return x > 0 - x < 0\n\n\nn = int(input())\n\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\nC = list(map(int, input().split()))\n\nB = [B[0] - A[0], B[1] - A[1]]\nC = [C[0] - A[0], C[1] - A[1]]\n\nok = True\nif sign(B[0]) != sign(C[0]) or sign(B[1]) != sign(C[1]):\n    ok = False\n\n# B = [abs(B[0]), abs(B[1])]\n# C = [abs(C[0]), abs(C[1])]\n\n# if B[0] > B[1] and C[0] < C[1]:\n#     ok = False\n# if B[0] < B[1] and C[0] > C[1]:\n#     ok = False\n\nprint([\"NO\", \"YES\"][ok])\n", "n = int(input())\nax, ay = map(int, input().split())\nbx, by = map(int, input().split())\ncx, cy = map(int, input().split())\nbx -= ax\ncx -= ax\nby -= ay\ncy -= ay\nif bx * cx <= 0 or by * cy <= 0:\n\tprint(\"NO\")\nelse:\n\tprint(\"YES\")", "n = int(input())\nax, ay = [ int(x) for x in input().split()]\nbx, by = [int(x) for x in input().split()]\ncx, cy = [int(x) for x in input().split()]\n\nif (bx>ax>cx) or (cx>ax>bx):\n        print(\"NO\")\n        return\nelif (by>ay>cy) or (cy>ay>by):\n        print(\"NO\")\n        return\nprint(\"YES\")\n", "input()\nax, ay = [int(i) for i in input().split()]\nbx, by = [int(i) for i in input().split()]\ncx, cy = [int(i) for i in input().split()]\n\nbx -= ax\ncx -= ax\nby -= ay\ncy -= ay\n\nif bx * cx > 0 and by * cy > 0:\n    print('YES')\nelse:\n    print('NO')\n", "n = int(input())\nbx, by = list(map(int, input().split()))\nax, ay = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\nif (min(ax, cx) <= bx and bx <= max(ax, cx)):\n      print(\"NO\");\nelif (min(ay, cy) <= by and by <= max(ay, cy)):\n      print(\"NO\");\nelse:\n      print(\"YES\");\n", "n = int(input())\n(ax, ay) = [int(x) for x in input().split()]\n(bx, by) = [int(x) for x in input().split()]\n(cx, cy) = [int(x) for x in input().split()]\n\n\nif (bx < ax < cx) or (bx > ax > cx) or (by < ay < cy) or (by > ay > cy):\n    print(\"NO\")\nelse:\n    print(\"YES\")", "n=int(input())\n\nax, ay = map(int,input().split())\nbx, by = map(int,input().split())\n\ncx, cy = map(int,input().split())\n\nif ((bx<ax and cx<ax) or (bx>ax and cx>ax)) and ((by<ay and cy<ay) or (by>ay and cy>ay)):\n\tprint('YES')\n\nelse:\n\tprint('NO')", "n = int(input())\nbx, by = list(map(int, input().split()))\nax, ay = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\nnum1 = ax > bx\nnum3 = cx > bx\nnum2 = ay > by\nnum4 = cy > by\nif num1 == num3 and num2 == num4:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "def x(a,b):\n    if(a>b):\n        return(1)\n    else:\n        return(0)\nn=int(input())\na1,a2=map(int,input().split())\nb1,b2=map(int,input().split())\nc1,c2=map(int,input().split())\nif((a1-a2)==(b1-b2)):\n    print(\"NO\")\nelif((a1+a2)==(b1+b2)):\n    print(\"NO\")\nelif(a1==b1):\n    print(\"NO\")\nelif(a2==b2):\n    print(\"NO\")\nelif((a1-a2)==(c1-c2)):\n    print(\"NO\")\nelif((a1+a2)==(c1+c2)):\n    print(\"NO\")\nelif(a1==c1):\n    print(\"NO\")\nelif(a2==c2):\n    print(\"NO\")\nelse:\n    if((x(a1,b1)==x(a1,c1)) and (x(a2,b2)==x(a2,c2))):\n        print(\"YES\")\n    else:\n        print(\"NO\")", "n = int(input())\nax,ay = list(map(int,input().split()))\nbx,by = list(map(int,input().split()))\ncx,cy = list(map(int,input().split()))\n\nif (ax-bx)*(ax-cx) > 0 and (ay-by)*(ay-cy) > 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "import sys\n\nnext(sys.stdin)\n\nq_x, q_y = list(map(int, next(sys.stdin).rstrip().split()))\nk_x, k_y = list(map(int, next(sys.stdin).rstrip().split()))\ndest_x, dest_y = list(map(int, next(sys.stdin).rstrip().split()))\n\ndef sign(x):\n    return 1 if x >= 0 else -1\n\ndef which_square(x, y):\n    return sign(x - q_x), sign(y - q_y)\n\nif which_square(k_x, k_y) == which_square(dest_x, dest_y):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n", "def quadrant(x, y, rx, ry):\n\tif x>rx and y>ry:\n\t\treturn 1\n\telif x<rx and y>ry:\n\t\treturn 2\n\telif x<rx and y<ry:\n\t\treturn 3\n\telse:\n\t\treturn 4\n\nn = int(input())\n\nqx, qy = list(map(int, input().split()))\nkx, ky = list(map(int, input().split()))\ncx, cy = list(map(int, input().split()))\n\nif quadrant(kx, ky, qx, qy) == quadrant(cx, cy, qx, qy):\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n", "n = int(input()) \nax,ay = [int(s) for s in input().split()]\nbx,by = [int(s) for s in input().split()]\ncx,cy = [int(s) for s in input().split()]\nif ((bx-ax < 0 and cx-ax < 0 or\n    bx-ax > 0 and cx-ax > 0) and\n    (by-ay < 0 and cy-ay < 0 or\n    by-ay > 0 and cy-ay > 0)):\n        print(\"YES\")\nelse:\n    print(\"NO\")", "n = int(input())\nf1 , f2 = map(int, input().split())\nk1 , k2 = map(int, input().split())\nk21 , k22 = map(int, input().split())\nif ((k1 < f1 and k21 < f1 and k2 < f2 and k22 < f2) or (k1 > f1 and k21 > f1 and k2 < f2 and k22 < f2) or (k1 < f1 and k21 < f1 and k2 > f2 and k22 > f2) or (k1 > f1 and k21 > f1 and k2 > f2 and k22 > f2)):\n    print('YES')\nelse:\n    print('NO')"]