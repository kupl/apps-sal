["def go():\n  for i in range(8):\n    s = input()\n    prv = 0\n    for j in s:\n      if j == prv: return False\n      prv = j\n  return True\n\nprint(\"YES\" if go() else \"NO\")\n", "def checkvalid(u, d):\n    for i in range(8):\n        cnt = 0;\n        for j in range(8):\n            if u[j] != d[i+j]:\n                cnt += 1\n            if j >= 1 and (u[j] == u[j-1] or d[i+j] == d[i+j-1]):\n                cnt = 0\n                break\n        if cnt == 8:\n            return True\n    return False    \n\nu = input()\nd = input()\ncnt = 2\nisvalid = True\n\nisvalid = checkvalid(u, d+d)\nwhile cnt <= 7:\n    cnt += 1\n    u = d\n    d = input()\n    isvalid = isvalid and checkvalid(u, d+d)\nif isvalid:\n    print('YES')\nelse:\n    print('NO')\n", "ans=\"YES\"\nfor i in range(8):\n    s=input()\n    if(s!=(s[0]+s[1])*4 or s[0]==s[1]):\n        ans=\"NO\"\nprint(ans)\n", "import sys\nf = sys.stdin\n#f = open(\"input.txt\", \"r\")\ndef solve():\n    nonlocal f\n    a = f.read().strip().split(\"\\n\")\n    for l in range(8):\n        count = 0\n        for i in range(7):\n            if a[l][i] == a[l][i+1]:\n                count += 1\n                if count >= 2:\n                    print(\"NO\")\n                    return\n    for l in range(1, 7):\n        for i in range(1, 7):\n            if a[l][i] == a[l+1][i] == a[l][i+1] == a[l+1][i+1]:\n                print(\"NO\")\n                return\n    else:\n        print(\"YES\")\n        return\nsolve()", "3\n\ndef readln(): return tuple(map(int, input().split()))\n\nprint('YES' if len([1 for _ in range(8) if input() in ['WB'*4, 'BW'*4]]) == 8 else 'NO')\n", "yes = True\nfor i in range(8):\n    s = input()\n    if yes:\n        for j in range(7):\n            if s[j] == s[j + 1]:\n                yes = False\n                break\nprint(\"YES\" if yes else \"NO\")\n\n", "ans = 'YES'\nfor i in range(8):\n    t = input()\n    if t[0] == 'B':\n        if t.count('BW') != 4:\n            ans = 'NO'\n            break\n    else:\n        if t.count('WB') != 4:\n            ans = 'NO'\n            break \nprint(ans)", "case=True\n\nfor i in range(8):\n    s=input()\n    if(s!=\"WBWBWBWB\" and s!=\"BWBWBWBW\"):\n        case=False\nif(case):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "proper = True\nfor i in range(8):\n    raw = input()\n    if raw != \"WBWBWBWB\" and raw != \"BWBWBWBW\":\n        proper = False\nif proper:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n", "cnt = 0\nfor i in range(8):\n    s = input()\n    if s == 'WB'*4 or s == 'BW'*4:\n        cnt += 1\nif cnt == 8: \n    print('YES')\nelse:\n    print('NO')\n\n", "c=0\nfor i in range(8):\n    s=input()\n    for j in range(len(s)-1):\n        if s[j]==s[j+1]:\n            c+=1\n            break\nif c==0:\n    print('YES')\nelse:\n    print('NO')\n", "for i in range (8):\n    s=input()\n    if s!='BW'*4 and s!='WB'*4:\n        print(\"NO\")\n        break\n    if i==7:\n        print('YES')", "valid=True\nfor i in range(8):\n    line=input()\n    if line!='WBWBWBWB' and line!='BWBWBWBW':\n        valid=False\nif valid:\n    print('YES')\nelse:\n    print('NO')\n", "board = []\nfor cont in range(0,8):\n    board.append(input())\nl = True\nfor row in board:\n    for cont in range(0,7):\n        if row[cont] == row[cont+1]:\n            l = False\n            break\n    if l is False:\n        break\n\nif l:\n    print('YES')\nelse:\n    print('NO')", "__copyright__ = ''\n__author__ = 'Son-Huy TRAN'\n__email__ = \"sonhuytran@gmail.com\"\n__doc__ = ''\n__version__ = '1.0'\n\n\ndef is_proper_chessboard(chessboard: list) -> bool:\n    propers = ['WBWBWBWB', 'BWBWBWBW']\n\n    for row in chessboard:\n        if row != propers[0] and row != propers[1]:\n            return False\n\n    return True\n\n\ndef main() -> int:\n    chessboard = []\n\n    for _ in range(8):\n        chessboard.append(input())\n\n    print('YES' if is_proper_chessboard(chessboard) else 'NO')\n    return 0\n\n\ndef __starting_point():\n    exit(main())\n__starting_point()", "e=True\nfor i in range(8):\n    a=input()\n    if(a!='BW'*4)&(a!='WB'*4):\n        e=False\n        print('NO')\n        break\nif e:print('YES')\n", "def good(s):\n    for i in range(7, -1, -1):\n        if s[i] == s[i-1]:\n            return False\n    return True\nfor i in range(8):\n    if not good(input()):\n        print('NO')\n        return\nprint('YES')\n", "for i in range(8):\n    r = input()\n    if r != 'WBWBWBWB' and r != 'BWBWBWBW':\n        print('NO')\n        return\nprint('YES')", "lis=[]\nfor i in range(8):\n    lis.append(input())\nlis1=['WBWBWBWB','BWBWBWBW']\ncheck=1\nfor i in range(8):\n    if lis[i] not in lis1:\n        check=0\nif check==0:\n    print('NO')\nelse:\n    print('YES')\n            \n", "import sys\nimport math\n  \nfor i in range(8):\n    st = sys.stdin.readline()\n    for j in range(7):\n        if(st[j] == st[j + 1]):\n            print(\"NO\")\n            return\nprint(\"YES\")", "for i in range(8):\n\ts = input()\n\tfor a, b in zip(s, (s + s[0])[1: ]):\n\t\tif a == b:\n\t\t\tprint('NO')\n\t\t\treturn\nprint('YES')\n", "def main():\n    for _ in range(8):\n        s = input()\n        if not s[::2] == s[0] * 4 != s[1] * 4 == s[1::2]:\n            print('NO')\n            return\n    print('YES')\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "# coding: utf-8\nfor i in range(8):\n    s = input()\n    s1 = set([s[j] for j in range(8) if j%2==0])\n    s2 = set([s[j] for j in range(8) if j%2==1])\n    if len(s1)!=1 or len(s2)!=1 or s1==s2:\n        print('NO')\n        break\nelse:\n    print('YES')\n", "from re import *\ndef main():\n    mode=\"filee\"\n    if mode==\"file\":f=open(\"test.txt\",\"r\")\n    #f.readline()\n    #input()\n    get = lambda :[f.readline()[:-1] if mode==\"file\" else input()]\n    for z in range(8):\n        q=get()\n        q=q[0]\n        if search('BB',q)!=None or search('WW',q)!=None:\n            print(\"NO\")\n            return\n    print(\"YES\")\n    \n\n\n    if mode==\"file\":f.close()\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "\ndef foo():\n   table = []\n   for i in range(8):\n      table.append(input())\n\n   w = 'W' * 4\n   b = 'B' * 4\n   for s in table:\n      a1 = s[0:len(s):2]\n      a2 = s[1:len(s):2]\n      if not ((a1 == w and a2 == b)\n         or (a1 == b and a2 == w)):\n         print('NO')\n         return\n   print('YES')\n\nfoo()"]