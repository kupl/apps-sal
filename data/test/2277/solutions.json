["import sys\n\n#f = open('input', 'r')\nf = sys.stdin\nn = int(f.readline())\na = list(map(int, f.readline().split()))\n\ncnt = 0\nfor i in range(n):\n  cnt += sum([1 for x in a[i+1:] if x < a[i]])\n\nm = int(f.readline())\nfor _ in range(m):\n  l, r = list(map(int, f.readline().split()))\n  c = r-l\n  cnt += (c*(c+1)//2)%2\n  if cnt%2 == 0:\n    print('even')\n  else:\n    print('odd')\n", "n = int(input())\na = list(map(int, input().split()))\n\ninv = False  # even\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] > a[j]:\n            inv = not inv\n\nm = int(input())\n\nans = list()\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n\n    if ((r - l + 1) / 2) % 2 == 1 or ((r - l + 1) / 2) % 2 == 1.5:\n        inv = not inv\n\n    ans.append(['even', 'odd'][inv])\n\nprint('\\n'.join(ans))\n", "n = int(input())\na = list(map(int, input().split()))\n\ninv = False  # even\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] > a[j]:\n            inv = not inv\n\nm = int(input())\n\nans = list()\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n\n    if ((r - l + 1) / 2) % 2 == 1 or ((r - l + 1) / 2) % 2 == 1.5:\n        inv = not inv\n\n    ans.append(['even', 'odd'][inv])\n\nprint('\\n'.join(ans))\n", "# input\nN = int(input())\nA = list(map(int, input().split()))\nM = int(input())\nQ = [input().split() for m in range(M)]\n\ndef solve():\n    count = 0\n    for i in range(N):\n        for j in range(i):\n            if A[i] < A[j]:\n                count += 1\n                count %= 2\n\n    res = []\n    for q in Q:\n        l, r = q\n        l = int(l) - 1\n        r = int(r) - 1\n        count += ((r -  l + 1)//2)\n        count %= 2\n        if count == 0:\n            res.append('even')\n        else:\n            res.append('odd')\n\n    print('\\n'.join(res))\n\ndef __starting_point():\n    solve()\n\n\n__starting_point()", "n = int(input())\na = list(map(int, input().split()))\npf = [0]\nfor i in range(n):\n    k = a[i]\n    inv = 0\n    for j in range(i):\n        if a[j] > a[i]:\n            inv += 1\n    pf.append(inv + pf[-1])\nans = pf[-1] % 2\nasss = []\nm = int(input())\ncs = [(i*(i-1) // 2) % 2 for i in range(1501)]\nfor _ in range(m):\n    l,r = list(map(int, input().split()))\n    c = r - l + 1\n    if c > 1 and cs[c] == 1:\n        ans += 1\n        ans %= 2\n    if ans:\n        asss.append('odd')\n    else:\n        asss.append('even')\nfor i in asss:\n    print(i)\n", "\ndef f(a,b):\n    val=0\n    for x in range(a,b):\n        for y in range(x+1,b):\n            if ar[x] > ar[y]:\n                val+=1\n    return val\n\nn=int(input())\nar=list(map(int,input().split()))\ninv=f(0,n)\n#print()\nm=int(input())\nans=[]\nfor x in range(m):\n    l,r=map(int,input().split())\n    z=r-l+1\n    inv+=int(z*(z-1)/2)\n    inv%=2\n    ans.append('odd' if inv else 'even')\n    #print(query(0,n-1))\n#print(*t)\nprint(*ans,sep='\\n')", "import sys\nf=sys.stdin\nn=int(f.readline())\na=list(map(int,f.readline().split()))\ns=0\nfor i in range(n):\n    for j in range(i):\n        s^=a[j]>a[i]\nq=int(f.readline())\nfor i in range(q):\n    l,r=map(int,f.readline().split())\n    s^=(r-l+1)*(r-l)//2%2\n    print(['even','odd'][s])", "import sys\n\nn = int(input())\na = [int(i) for i in input().split(\" \")]\nm = int(input())\n\n\ninversion = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[i] > a[j]:\n            inversion += 1\n\nif inversion % 2:\n    even = False\nelse:\n    even = True\n\nlines = sys.stdin.readlines()\n\nfor k in range(m):\n    q = tuple(int(i) - 1 for i in lines[k].split(\" \"))\n\n    if (((q[1] - q[0]) + 1) // 2) % 2:\n        even = not even\n    if even:\n        print(\"even\")\n    else:\n        print(\"odd\")\n", "n = int(input())\nd = list(map(int, input().split()))\nodd = 0\nfor i in range(n):\n    for j in range(i, n):\n        if(d[i]>d[j]): odd ^= 1\n\nm = int(input())\nans = []\nfor i in range(m):\n    l, r = list(map(int, input().split()))\n    k = r-l+1\n    if( (k*(k-1)/2) %2): odd ^= 1\n    ans.append( \"odd\" if odd else \"even\")\n\nprint('\\n'.join(ans))\n", "n = int(input())\n\ns = list(map(int, input().split()))\n\nt = False   #even\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if s[i] > s[j]:\n            t = not t\n\nm = int(input())\n\na = []\n\nfor h in range(m):\n    l, r = map(int, input().split())\n    if ((r - l + 1) / 2) % 2 == 1 or ((r - l + 1) / 2) % 2 == 1.5:\n        t = not t\n\n    a.append(['even', 'odd'][t])\n\nprint('\\n'.join(a))", "n = int(input())\n\nlst = []\nfor x in input().split():\n    lst.append(int(x))\n\nm = int(input())\npair = []\nfor x in range(m):\n    (l, r) = list(map(int, input().split()))\n    pair.append((l, r))\n\nk = 0\nfor x in range(0, len(lst) - 1):\n    for y in range(x + 1, len(lst)):\n        if lst[y] < lst[x]: \n            k += 1\n          \nfor (l, r) in pair:\n    if (k - (r - l + 1) // 2) % 2 == 0:\n        print(\"even\")\n    else:\n        print(\"odd\")\n    k = k - (r - l + 1) // 2\n", "def solve():\n    n=int(input())\n    a=list(map(int,input().split()))\n    cl=['odd','even']\n    m=int(input())\n    ans=True\n    b=[]\n    ap=b.append\n    for i in range(n):\n        for j in range(i):\n            if a[j]>a[i]:\n                ans=not ans\n\n    for i in range(m):\n        left,right=map(int,input().split())\n        if ((right-left+1)//2)%2 == 1:\n            ans=not ans\n        ap(cl[ans])\n    print('\\n'.join(b))\nsolve()", "from sys import stdin\n\nn = int(stdin.readline())\na = [int(o) for o in stdin.readline().split()]\n\ninv = len([ 1 for i in range(n) for j in range(i + 1, n) if a[i] > a[j]])\nans = inv % 2\n\nm = int(stdin.readline())\n\nfor i in range(m):\n\tline = stdin.readline().split()\n\tl = int(line[0])\n\tr = int(line[1])\n\n\tv = ((r - l + 1) * (r - l) // 2) % 2\n\tans ^= v\n\n\tif ans == 0:\n\t\tprint(\"even\")\n\n\telse: print(\"odd\")\n", "from sys import stdin\n\nn = int(stdin.readline())\na = [int(o) for o in stdin.readline().split()]\n\ninv = len([ 1 for i in range(n) for j in range(i + 1, n) if a[i] > a[j]])\nans = inv % 2\n\nm = int(stdin.readline())\n\noutput = []\n\nfor i in range(m):\n\tl, r = map(int, stdin.readline().split())\n\n\tv = ((r - l + 1) * (r - l) // 2) % 2\n\tans ^= v\n\n\tif ans == 0:\n\t\toutput.append(\"even\")\n\n\telse: output.append(\"odd\")\n\nprint('\\n'.join(output))", "n=int(input())\na=list(map(int,input().split()))\nc=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[i]>a[j]:\n            c+=1\nif c%2==0:\n    value=False\nelse:\n    value=True\nb=[]\nm=int(input())\nfor i in range(m):\n    l,r=map(int,input().split())\n    if ((r-l+1)//2)%2!=0:\n        value=not value\n    if value:\n        b.append(\"odd\")\n    else:\n        b.append(\"even\")\nprint(\"\\n\".join(b))", "n=int(input())\na=list(map(int,input().split()))\nvalue=False\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[i]>a[j]:\n            value=not value\nb=[]\nm=int(input())\nfor i in range(m):\n    l,r=map(int,input().split())\n    if ((r-l+1)//2)%2!=0:\n        value=not value\n    if value:\n        b.append(\"odd\")\n    else:\n        b.append(\"even\")\nprint(\"\\n\".join(b))", "def pflag(flag):\n    if flag:\n        return \"odd\"\n    else:\n        return \"even\"\n\nn = int(input())\narr = list(map(int, (input()).split()))\nm = int(input())\nflag = False\n\n#current parity\ncount=0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if arr[j]<arr[i]:\n            count+=1\nif count%2==0:\n    flag = False\nelse:\n    flag = True\n#print(\"nothing\")\n#print(flag)\n\nnewflag = 0\nans=[]\nfor i in range(m):\n    l,r = map(int, input().split())\n    e = (r-l+1)*(r-l)//2\n    if e%2 == 0:\n        newflag = False\n    else:\n        newflag = True\n    #print(\"new flag \", newflag)\n    if flag and newflag or not flag and not newflag:\n        flag = False #even\n        ans.append(\"even\")\n    else:\n        flag = True #odd\n        ans.append(\"odd\")\n\n    #print(pflag(flag))\n\nprint(\"\\n\".join(ans))", "def pflag(flag):\n    if flag:\n        return \"odd\"\n    else:\n        return \"even\"\n\nn = int(input())\narr = list(map(int, (input()).split()))\nm = int(input())\nflag = False\n\n#current parity\ncount=0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if arr[j]<arr[i]:\n            count+=1\nif count%2==0:\n    flag = False\nelse:\n    flag = True\n#print(\"nothing\")\n#print(flag)\n\nnewflag = 0\nans=[]\nfor i in range(m):\n    l,r = map(int, input().split())\n    e = (r-l+1)//2\n    if e%2 == 0:\n        newflag = False\n    else:\n        newflag = True\n    #print(\"new flag \", newflag)\n    if flag and newflag or not flag and not newflag:\n        flag = False #even\n        ans.append(\"even\")\n    else:\n        flag = True #odd\n        ans.append(\"odd\")\n\n    #print(pflag(flag))\n\nprint(\"\\n\".join(ans))", "from collections import namedtuple\n\ndef pairs(n):\n    return (n * (n - 1)) / 2\n\nn = int(input())\na = [int(s) for s in input().split()]\n\nQ = namedtuple('Q', ['l', 'r'])\nql = []\n\nm = int(input())\n\nfor i in range(m):\n    l, r = [int(s) for s in input().split()]\n    ql.append(Q(l, r))\n\np = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if a[j] < a[i]:\n            p += 1\n\nev = p % 2 == 0\n\nfor q in ql:\n    s = q.r - q.l + 1\n    if pairs(s) % 2 == 1:\n        ev = not ev\n\n    print('even' if ev else 'odd')\n\n", "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time,copy,functools\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**15\nmod = 10**9+7\n\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\n\n\ndef main():\n    n = I()\n    a = LI()\n    q = I()\n    b = [LI() for _ in range(q)]\n    t = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if a[i] > a[j]:\n                t += 1\n    r = []\n    for c,d in b:\n        k = d-c+1\n        if k*(k-1)//2 % 2 == 1:\n            t += 1\n        if t % 2 == 0:\n            r.append('even')\n        else:\n            r.append('odd')\n\n    return '\\n'.join(r)\n\nprint(main())\n\n\n"]