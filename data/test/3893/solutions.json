["\"\"\"\nCodeforces Contest 284 Div 1 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.4.2\n\"\"\"\n\n################################################### SOLUTION\n\ndef main():\n    x1,y1 = read()\n    x2,y2 = read()\n    n, = read()\n    ct = 0\n    for i in range(n):\n        a,b,c = read()\n        if (a*x1+b*y1+c)*(a*x2+b*y2+c) < 0: ct += 1\n    print(ct)\n\n#################################################### HELPERS\n\n\n\ndef read(mode=2):\n    # 0: String\n    # 1: List of strings\n    # 2: List of integers\n    inputs = input().strip()\n    if mode == 0: return inputs\n    if mode == 1: return inputs.split()\n    if mode == 2: return list(map(int, inputs.split()))\n\ndef write(s=\"\\n\"):\n    if s is None: s = \"\"\n    if isinstance(s, list): s = \" \".join(map(str, s))\n    s = str(s)\n    print(s, end=\"\")\n\nwrite(main())", "x1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nval = 0\nfor i in range(int(input())):\n    a, b, c = map(int, input().split())\n    val += (a * x1 + b * y1 + c) * (a * x2 + b * y2 + c) < 0\nprint(val)", "#import sys\n#sys.stdin = open('input.txt', 'r')\n#sys.stdout = open('output.txt', 'w')\n\ndef norm(a, b, c, d):\n\tif (b * c >= 0):\n\t\treturn a * abs(c) <= abs(b) <= d * abs(c)\n\treturn -a * abs(c) >= abs(b) >= -d * abs(c)\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\na2 = y2 - y1\nb2 = x1 - x2\nc2 = 0 - a2 * x1 - b2 * y1\nn = int(input())\nans = 0\nfor i in range(n):\n\ta1, b1, c1 = map(int, input().split())\n\tif (norm(min(x1, x2), (c2 * b1 - c1 * b2), (a1 * b2 - a2 * b1), max(x1, x2)) and norm(min(y1, y2), (c2 * a1 - c1 * a2), (a2 * b1 - a1 * b2), max(y1, y2))):\n\t\tans += 1\nprint(ans)", "line = input().split()\nx1 = int(line[0])\ny1 = int(line[1])\nline = input().split()\nx2 = int(line[0])\ny2 = int(line[1])\nn = int(input())\nans = 0\nfor i in range(n):\n    line = input().split()\n    a = int(line[0])\n    b = int(line[1])\n    c = int(line[2])\n    d1 = (a * x1 + b * y1 + c)\n    d2 = (a * x2 + b * y2 + c)\n    if d1 * d2 < 0:\n        ans += 1\n\nprint(ans)\n", "ans = 0\nread_line = lambda: [int(i) for i in input().split()]\nx0, y0 = read_line()\nx1, y1 = read_line()\nn = int(input())\nfor i in range(n):\n    a, b, c = read_line()\n    ans += (a * x0 + b * y0 + c) * (a * x1 + b * y1 + c) < 0\nprint(ans)\n", "x1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nk = 0\nn = int(input())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    if (a * x1 + b * y1 + c) * (a * x2 + b * y2 + c) < 0:\n        k += 1\nprint(k)", "def main():\n    rdl = list(map(int,input().split()))\n    x1,y1 = rdl\n    rdl = list(map(int,input().split()))\n    x2,y2 = rdl\n    n = int(input())\n    Steps = 0\n    for i in range(n):\n        rdl = list(map(int,input().split()))\n        if rdl[1]*y1+rdl[0]*x1+rdl[2] > 0 and rdl[1]*y2+rdl[0]*x2+rdl[2] < 0:\n            Steps += 1\n        elif rdl[1]*y1+rdl[0]*x1+rdl[2] < 0 and rdl[1]*y2+rdl[0]*x2+rdl[2] > 0:\n            Steps += 1\n    print(Steps)\nmain()\n            \n", "read_line = lambda: [int(i) for i in input().split()]\nx0, y0 = read_line()\nx1, y1 = read_line()\nprint(sum((a * x0 + b * y0 + c) * (a * x1 + b * y1 + c) < 0 for a, b, c in (read_line() for i in range(int(input())))))\n", "x1, y1 = list(map(float, input().split()))\nx2, y2 = list(map(float, input().split()))\nn = int(input())\nans = 0\nfor i in range(n):\n    a, b, c = list(map(int, input().split()))\n    if (a * x1 + b * y1 + c) * (a * x2 + b * y2 + c) < 0:\n        ans += 1\nprint(ans)\n", "x, y = map(int, input().split())\nu, v = map(int, input().split())\ns = 0\nfor i in range(int(input())):\n    a, b, c = map(int, input().split())\n    s += (a * x + b * y + c > 0) ^ (a * u + b * v + c > 0)\nprint(s)", "#!/usr/bin/env python3\n\nx, y = list(map(int, input().split()))\nu, v = list(map(int, input().split()))\nn = int(input())\ns = 0\nfor i in range(n):\n    a, b, c = list(map(int, input().split()))\n    s += (a * x + b * y + c > 0) ^ (a * u + b * v + c > 0)\nprint(s)\n", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\n\nans = 0\nfor i in range(int(input())):\n    a, b, c = list(map(int, input().split()))\n    if (a * x1 + b * y1 + c) * (a * x2 + b * y2 + c) < 0:\n        ans += 1\n\nprint(ans)\n", "def input_split(f): return list(map(f, input().split()))\n\n\ndef main():\n    x1, y1 = input_split(int)\n    x2, y2 = input_split(int)\n    n = int(input())\n    count = 0\n    for i in range(n):\n        a, b, c = input_split(int)\n        if (a*x1+b*y1+c) * (a*x2+b*y2+c) < 0:\n            count+=1\n    print(count)\n\nmain()\n", "#!/usr/bin/env python3\n\nx1, y1 = (int(x) for x in input().split())\nx2, y2 = (int(x) for x in input().split())\nn = int(input())\nans = 0\nfor i in range(n):\n    a, b, c = (int(x) for x in input().split())\n    point1 = a*x1 + b*y1 + c\n    point2 = a*x2 + b*y2 + c\n    if point1 * point2 < 0:\n        ans += 1\nprint(ans)", "x1, y1 = [int(x) for x in input().split()]\nx2, y2 = [int(x) for x in input().split()]\nn = int(input())\nans = 0\nfor i in range(n):\n\ta, b, c = [int(x) for x in input().split()]\n\tx = x1 * a + y1 * b + c\n\tx //= abs(x)\n\ty = x2 * a + y2 * b + c\n\ty //= abs(y)\n\tif x != y:\n\t\tans += 1\nprint(ans)\n", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nn = int(input())\nr = 0\nfor i in range(n):\n    q = list(map(int, input().split()))\n    r = r + ((q[0]*x1+q[1]*y1+q[2])*(q[0]*x2+q[1]*y2+q[2])<0)\nprint(r)", "a=list(map(int,input().split()))\nb=list(map(int,input().split()))\nc=int(input())\nd=[]\nfor i in range(c):d+=[list(map(int,input().split()))]\ne=list([j[0]*a[0]+j[1]*a[1]+j[2]>0 for j in d])\nf=list([j[0]*b[0]+j[1]*b[1]+j[2]>0 for j in d])\nprint(len(list([x for x in range(len(d)) if e[x]!=f[x]])))\n", "a , b = list(map(int, input(\"\").split(\" \")))\nc , d = list(map(int, input(\"\").split(\" \")))\ndumb = int(input(\"\"))\nlines = []\nfor value in range(dumb):\n    lines.append(input(\"\").split(\" \"))\ncount = 0\ncheck1 = 0\ncheck2 = 0\nfor value in lines:\n    if (int(value[0])*a + int(value[1])*b+int(value[2])>= 0):\n        check1 = 1\n    else:\n        check1 = -1\n    if(int(value[0])*c+int(value[1])*d+int(value[2])>=0):\n        check2 = 1\n    else:\n        check2 = -1\n    if check2 != check1:\n        count = count + 1\nprint(count)\n", "x, y = list(map(float, input().split(' ')))\nx1, y1 = list(map(float, input().split(' ')))\nn = int(input())\nr = 0\nfor i in range(n):\n    a, b, c = list(map(float, input().split(' ')))\n    q1 = a * x + b * y + c\n    q2 = a * x1 + b * y1 + c\n    if (q1 > 0 and q2 < 0) or (q1 < 0 and q2 > 0):\n        r += 1\nprint(r)\n", "x1,y1 = map(int,input().split())\nx2,y2 = map(int,input().split())\nn = int(input())\ns = 0\nfor i in range(n):\n    a,b,c = map(int,input().split())\n    if ((((a * x1) + (b * y1) + c) * ((a * x2) + (b * y2) + c)) < 0):\n        s = s + 1\nprint(s)", "x1, y1 = list(map(int, input().split()))\nx2, y2 = list(map(int, input().split()))\nn = int(input())\ncost = 0\nfor i in range(n):\n    a, b, c = list(map(int, input().split()))\n    d1 = a * x1 + b * y1 + c\n    d2 = a * x2 + b * y2 + c\n    if d1 * d2 < 0: cost += 1\nprint(cost)\n", "(x1, y1) = input().split(\" \")\nx1 = int(x1)\ny1 = int(y1)\n(x2, y2) = input().split(\" \")\nx2 = int(x2)\ny2 = int(y2)\nn = int(input())\nlineslist = []\nfor i in range(n):\n    (a, b, c) = input().split(\" \")\n    lineslist.append((int(a), int(b), int(c)))\n\ndef greaterThanLine(x, y, a, b, c):\n    return a*x + b*y + c > 0\n\ncount = 0\nfor line in lineslist:\n    (a, b, c) = line\n    if greaterThanLine(x1, y1, a, b, c) ^ greaterThanLine(x2, y2, a, b, c):\n        count += 1\n\nprint(count)\n", "import re, sys, math, string, operator, functools, fractions, collections\nfrom random import *\nsys.setrecursionlimit(10**7)\ndX= [-1, 1, 0, 0,-1, 1,-1, 1]\ndY= [ 0, 0,-1, 1, 1,-1,-1, 1]\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\nmod=1e9+7\n#################################################\nx1,y1 = RI()\nx2,y2 = RI()\ndef sign(x):\n    return x<0\nn=RI()[0]\nans=0\nfor i in range(n):\n    a,b,c=RI()\n    if sign(a*x1+b*y1+c)!=sign(a*x2+b*y2+c):\n        ans+=1\nprint(ans)\n", "#!/usr/bin/env python3\nimport collections, itertools, functools, math\n\ndef value(a, b, c, x, y):\n    return a*x + b*y + c\n\ndef sign(x):\n    if x < 0:\n        return -1\n    if x == 0:\n        return 0\n    if x > 0:\n        return 1\n\ndef solve():\n    x1, y1 = list(map(int, input().split()))\n    x2, y2 = list(map(int, input().split()))\n    n = int(input())\n    r = 0;\n    for i in range(n):\n        a, b, c = list(map(int, input().split()))\n        s1 = value(a, b, c, x1, y1)\n        s2 = value(a, b, c, x2, y2)\n        if sign(s1) != sign(s2):\n            r += 1\n    return r\n\n\ndef __starting_point():\n    print(solve())\n\n\n__starting_point()", "import sys\n\n#sys.stdin = open('input.txt', 'r')\n#sys.stdout = open('output.txt', 'w')\n\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\n\ndef sign(a, b, c, x, y):\n\tvalue = a * x + b * y + c\n\tif value < 0:\n\t\treturn -1\n\tif value == 0:\n\t\treturn 0\n\treturn 1\n\nn, ans = int(input()), 0\nfor i in range(n):\n\ta, b, c = map(int, input().split())\n\tif sign(a, b, c, x1, y1) != sign(a, b, c, x2, y2):\n\t\tans += 1\nprint(ans)"]