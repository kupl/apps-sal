["k, a, b, v = map(int, input().split())\nfor i in range(1, 1010):\n    if a <= v * (i + min(b, (k - 1) * i)):\n        print(i)\n        break", "k,a,b,v = list(map(int,input().split()))\n\nsections = (a-1)//v+1\n\nfull_boxes = b//(k-1)\npartial_box_sections = b % (k-1) + 1\n\nboxes_used = 0;\n\nif sections <= full_boxes*k:\n    boxes_used += (sections-1)//k+1\n    sections = 0\nelse:\n    sections -= full_boxes*k;\n    boxes_used += full_boxes\n    if sections <= partial_box_sections:\n        sections = 0\n        boxes_used += 1\n    else:\n        sections -= partial_box_sections\n        boxes_used += 1\n        \n        boxes_used += sections\n        sections = 0\n\nprint(boxes_used)\n", "x = input()\nmax_sections, nuts, divisors, max_nuts = [int(i) for i in x.split()]\n\ndivisors_per = max_sections - 1\nfit = max_sections * max_nuts\n\nboxes = 1\nwhile 1:\n    if divisors_per > divisors:\n        sections = divisors + 1\n        nuts -= sections * max_nuts\n        divisors = 0\n    else:\n        nuts -= fit\n        divisors -= divisors_per\n        \n    if nuts <= 0: break\n    else: boxes += 1\n\nprint(boxes)\n    \n", "from math import ceil\n\nk, a, b, v = list(map(int,input().split(\" \")))\n\np = ceil(a/v)\n\ncajas = 0\ndcaja = k-1\ndivs = b\n\nfor i in range(p):\n  if dcaja == k-1 or divs == 0:\n    cajas += 1\n    dcaja = 0\n  else:\n    dcaja += 1\n    divs -= 1\n  \n  \n\nprint(cajas)", "#!/usr/bin/env python3\n\ndef read_ints():\n\treturn list(map(int, input().strip().split()))\n\nk, a, b, v = read_ints()\n\nz = (a + v-1) //v\n\nused_boxes = 0\nfree_div = b\nlast_box_sec = float('inf')\n\nwhile z:\n\tif last_box_sec < k and free_div > 0:\n\t\tlast_box_sec += 1\n\t\tfree_div -= 1\n\n\telse:\n\t\tused_boxes += 1\n\t\tlast_box_sec = 1\n\n\tz -= 1\n\nprint(used_boxes)\n\t\t\n\t\n", "k, a, b, v = list(map(int, input().split(' ')))\nans = 1\ncur_section_count = 1\n\nwhile a > 0:\n    a -= v\n    if a <= 0:\n        break\n    if cur_section_count < k and b > 0:\n        cur_section_count += 1\n        b -= 1\n    else:\n        cur_section_count = 1\n        ans += 1\n\nprint(ans)\n", "string=str(input())+' '\nword=''\nwordlist=[]\nboxes=0\n\nfor char in string:\n    if char!=' ':\n        word+=char\n    else:\n        wordlist.append(int(word))\n        word=''\n\nmaxsections=wordlist[0]\nnuts=wordlist[1]\ndivisors=wordlist[2]\nmaxnuts=wordlist[3]\n\nwhile nuts>0:\n    boxes+=1\n    \n    if divisors>=maxsections-1:\n        divisors-=maxsections-1\n        if nuts>=maxsections*maxnuts:\n            nuts-=maxsections*maxnuts\n        elif nuts<maxsections*maxnuts:\n            nuts=0\n\n    elif divisors<maxsections-1:\n        if nuts>=(divisors+1)*maxnuts:\n            nuts-=(divisors+1)*maxnuts\n        elif nuts<(divisors+1)*maxnuts:\n            nuts=0\n        divisors=0\n\nprint(boxes)\n", "sections,nuts,divisors,cap = list(map(int,input().split()))\nboxes=0\nwhile(nuts > 0):\n    s = 1\n    if(divisors > 0 and divisors <= sections -1):\n        s = divisors + 1\n        divisors = 0\n    elif divisors > sections -1:\n        s = sections\n        divisors -= (sections -1)\n    nuts -= (s*cap)\n    boxes+=1\nprint(boxes)\n", "l=[int(i) for i in input().split(\" \")]\nk=l[0]\na=l[1]\nb=l[2]\nv=l[3]\nbox=0\ndivs=0\nwhile a>0:\n    box+=1\n    sections=1\n    a-=v\n    while a>0 and sections<k and divs<b:\n        divs+=1\n        sections+=1\n        a-=v\nprint(box)", "import math\ndef main():\n    k,a,b,v = [int(i) for i in input().split()]\n    s = math.ceil(a/v)\n    total = min(b//(k-1),math.ceil(s/k))\n    if b//(k-1) < math.ceil(s/k):\n        s -= (b//(k-1))*k\n        x = 1+b%(k-1)\n        total += 1\n        if s > x:\n            total += s-x\n    print(total)\n\ndef __starting_point(): main()\n\n__starting_point()", "k, a, b, v = list(map(int, input().split()))\n\n#k, a, b, v = 3, 10, 1, 3\nrezult = 0\n\n\nbox = {\n    'sep': 0,\n    'place': 0,\n    'nuts': 0\n}\n\nwhile a > 0:\n    if b >= 0:\n        if b < k:\n            box['sep'] = b\n            box['place'] = b+1\n            b = 0\n        elif b == 0:\n            box['sep'] = 0\n            box['place'] = 1\n        else:\n            box['sep'] = k - 1\n            box['place'] = k\n            b -= box['sep']\n    if a < v * box['place']:\n        box['nuts'] = a\n        a = 0\n    else:\n        a -= (v * box['place'])\n    rezult += 1\n\nprint(rezult)\n", "k,a,b,v=map(int,input().split())\nans=0\nwhile a>0:\n    ans+=1\n    kn=min(k,b+1)\n    a-=v*kn\n    b=max(b-k+1,0)\nprint(ans)", "from math import ceil\n\nk, a, b, v = list(map(int, input().split()))\n\nres = 0\nc = ceil(a / v)\nwhile (b >= k - 1) and (c > 0):\n    res += 1\n    c -= k\n    b -= k - 1\n\nif c > 0:\n    res += 1\n    c -= b + 1\n\nif c > 0:\n    res += c\n\nprint(res)\n", "max_parts, n, divisors, nuts_in_part = map(int, input().split())\nL = 0\nR = 10000\nwhile R - L > 1:\n    #print(L, R)\n    M = (L + R) // 2\n    available_divisors = min(M * (max_parts - 1), divisors)\n    if (M + available_divisors) * nuts_in_part >= n:\n        R = M\n    else:\n        L = M\n\navailable_divisors = min(L * (max_parts - 1), divisors)\nif (L + available_divisors) * nuts_in_part >= n:\n    print(L)\nelse:\n    print(R)", "k, a, b, v = list(map(int, input().split()))\nt = (a + v - 1) // v\nfor x in range(1, t + 1):\n    if 0 <= t - x <= b and x <= t <= k * x:\n        print(x)\n        break\n", "import sys\n\nf = sys.stdin\n# f = open(\"input.txt\", \"r\")\n\nk, a, b, v = map(int, f.readline().split())\n\ncnt = 0\nboxes = 0\n\nwhile cnt < a:\n    if k-1 <= b:\n        cnt += k*v\n        b -= k-1\n    elif b > 0:\n        cnt += (b+1)*v\n        b = 0\n    else:\n        cnt += v\n    boxes += 1\n\nprint(boxes)", "k, a, b, v = list(map(int, input().split(' ')))\nc, i = 1, 1\nwhile a - v > 0:\n    a -= v\n    if i < k and b > 0:\n        i += 1\n        b -= 1\n    else:\n        i = 1\n        c += 1\nprint(c)\n", "k,a,b,v=list(map(int,input().split()))\nfor i in range(1,2000):\n    t=min(k,b+1)\n    a-=t*v\n    b-=t-1\n    if a<=0:\n        print(i)\n        break\n", "def ceiling_div(x, y):\n\tres = x // y\n\tif (x % y != 0):\n\t\tres += 1\n\treturn res\n\t\nk, a, b, v = list(map(int, input().split()))\nsec = ceiling_div(a, v)\nres = max(sec - b, ceiling_div(sec, k))\nprint(res)\n", "k, a, b, v = list(map(int, input().split()))\noutcome = 0\nwhile a > 0:\n    outcome += 1\n    kn = min(k, b+1)\n    a -= kn * v\n    b = max(0, b - kn + 1)\nprint(outcome)\n\n", "str_ = input()\nitems = str_.strip().split()\nk = int(items[0])\na = int(items[1])\nb = int(items[2])\nv = int(items[3])\nsum_ = 0\nans = 0\nwhile(sum_ < a):\n    if(b != 0):\n        sum_ += min(k, b+1)*v\n        b = max(0, b-k+1)\n    else:\n        sum_ += v\n    ans += 1\nprint(str(ans)+\"\\n\")\n", "def floor(x):\n    if (x == int(x)):\n        return int(x)\n    else:\n        return int(x) + 1\na = input()\na = list(a.split(' '))\na = list(map(int,a))\nts = floor(a[1] / a[3])\ntb = 0\n#print(ts)\ntb += a[2] // (a[0] - 1)\nts -= tb * a[0]\na[2] -= tb * (a[0] - 1)\n#print(ts)\nif (ts <= 0):\n    ts += tb * a[0]\n    #print(ts)\n    print(floor(a[1] / (a[0] * a[3])))\nelse:\n    tb += 1\n    ts -= a[2] + 1\n    if (ts <= 0):\n        print(int(tb))\n    else:\n        tb += ts\n        print(int(tb))\n \n", "#-------------------------------------------------------------------------------\n# Name:        module1\n# Purpose:\n#\n# Author:      mayank manish\n#\n# Created:\n# Copyright:   (c) mayank manish\n# Licence:     <your licence>\n#-------------------------------------------------------------------------------\n\ndef main():\n    pass\n\ndef __starting_point():\n    main()\nk,a,b,v=list(map(int, input().split()))\nn=0\nif(b<k):\n    a-=((b+1)*v)\n    n+=1\n    while(a>0):\n        a-=v\n        n+=1\n    print(n)\nelse:\n    while((b>=k) and (a>0)):\n        b-=(k-1)\n        a-=(k*v)\n        n+=1\n    if(a>0):\n        a-=((b+1)*v)\n        n+=1\n        while(a>0):\n            a-=v\n            n+=1\n    print(n)\n\n__starting_point()", "otseki, nuts, raz, vmest = list(map(int, input().split()))\nmaxbox = vmest*otseki\nboxes = 0\ncurbox = vmest\n\nwhile nuts > 0:\n\n    if curbox < maxbox and raz > 0:\n        curbox += vmest\n        raz -= 1\n    else:\n        nuts -= curbox\n        curbox = vmest\n        boxes += 1\n#    print(nuts)\nprint(boxes)\n", "from sys import stdin\n\n__author__ = 'artyom'\n\n\ndef read_next_line():\n    return list(map(int, stdin.readline().strip().split()))\n\n\ndef ceildiv(a, b):\n    return -(-a // b)\n\n\nk, a, b, v = read_next_line()\ns = ceildiv(a, v)\nt = k - 1\nd = (b // t) * k + b % t + 1\nprint(ceildiv(s, k) if s <= d else s - d + b // t + 1)"]