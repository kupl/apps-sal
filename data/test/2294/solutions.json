["from bisect import *\nd = [{}, {}]\ni = [0, 0]\nfor q in range(int(input())):\n    a, t, x = map(int, input().split())\n    for k in [0, 1]:\n        d[k][x] = d[k].get(x, [])\n        i[k] = bisect(d[k][x], t)\n    if a < 3: d[-a][x].insert(i[-a], t)\n    else: print(i[1] - i[0])", "from bisect import *\nu, v = {}, {}\nfor q in range(int(input())):\n    a, t, x = map(int, input().split())\n    if x not in u: u[x], v[x] = [], []\n    if a < 3: insort([v, u][-a][x], t)\n    else: print(bisect(u[x], t) - bisect(v[x], t))", "from bisect import *\nu, v = {}, {}\nfor q in range(int(input())):\n    a, t, x = list(map(int, input().split()))\n    if x not in u: u[x], v[x] = [], []\n    if a < 3: insort([v, u][-a][x], t)\n    else: print(bisect(u[x], t) - bisect(v[x], t))\n"]