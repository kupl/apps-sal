["start = input()\ncounter = 0\nsInt = int(start)\nwhile sInt!=0:\n\tsInt-=max([int(c) for c in start])\n\tstart=str(sInt)\n\tcounter+=1\nprint(counter)", "\nn=int(input())\nk=0\n\nwhile n:\n    n-=int(max(list(str(n))))\n    k+=1\n\nprint(k)\n", "num=int(input())\nans=0\nwhile(num!=0):\n    L=list(str(num))\n    d=int(max(L))\n    num-=d\n    ans+=1\nprint(ans)\n", "n,k=int(input()),0\nwhile n:n-=int(max(list(str(n))));k+=1\nprint(k)", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)", "n=int(input())\ncount=0\nwhile n>0:\n     n-=int(max(str(n)))\n     count+=1\nprint(count)", "a = int(input())\nk = 0\nwhile a>0:\n    a -= max([int(c) for c in str(a)])\n    k += 1\nprint(k)", "import sys\nfin = sys.stdin\n\nn = int(fin.readline())\n\ncount = 0\nwhile n > 0:\n    count += 1\n    n -= max(map(int, str(n)))\n    \nprint(count)", "c = '0123456789'\nF = {c[a] + c[b]: (c[10 - a + b], 1) if a > b else (c[10 - a], 2) for a in range(1, 10) for b in range(10)}\nfor b in range(1, 10): F['0' + c[b]] = ('0', 1)\nF['00'] = ('0', 0)\n\ndef f(x):\n    nonlocal F\n    if x in F: return F[x]\n    a, b, y, s = int(x[0]), int(x[1]), x[2: ], 0\n    for i in range(b, a, -1):\n        y, d = f(c[i] + y)\n        s += d\n    for i in range(min(a, b) + 1):\n        y, d = f(x[0] + y)\n        s += d\n    F[x] = ('9' + y, s)\n    return F[x]\n\nprint(f('0' + input())[1]) ", "import sys\nsys.setrecursionlimit(15000000)\ndef solve():\n    n = int(input())\n    mem = [1000000] * (n + 1)\n    mem[0] = 0\n    for i in range(1, n + 1):\n        ncopy = i\n        while ncopy > 0:\n            last = ncopy % 10\n            ncopy //= 10\n            if last != 0 and i - last >= 0: mem[i] = min(mem[i], 1 + mem[i - last])\n    print(mem[n])\n    \nif sys.hexversion == 50594544 : sys.stdin = open(\"test.txt\")\nsolve()", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)", "n=int(input())\ndp=[0]+[1e9+7]*(n)\nfor i in range(1,n+1):\n\ttmp=i\n\twhile tmp:\n\t\tdp[i]=min(dp[i],dp[i-tmp%10]+1)\n\t\ttmp//=10\nprint(int(dp[n]))", "n,a=int(input()),0\nwhile n:\n\tn-=int(max(str(n)))\n\ta+=1\nprint(a)", "n = int(input())\n\ncount = 0\nwhile n:\n\tn -= max(list(map(int,str(n))))\n\tcount += 1\n\nprint(count)", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n,k=int(input()),0\nwhile n:n-=int(max(str(n)));k+=1\nprint(k)\n", "n = int(input())\n\ndef naive(n):\n\tc=0\n\t#print(n,end='\\t')\n\twhile n!=0:\n\t\tc+=1\n\t\tn-=max([int(x) for x in list(str(n))])\n\t\t#print(n)\n\tprint(c)\n\n# d=dict()\n# d[0]=0\n# def dp(n):\n# \tif(n==0):\n# \t\treturn 0\n# \ts=[int(x) for x in list(str(n))]\n# \tminimo=n\n# \ts=max(s)\n# \ttemp = n - s\n# \treturn dp(temp)+1\n\n# for x in range(1,10,1):\n# \tnaive(x)\n# for x in range(10,100,10):\n# \tnaive(x)\n# for x in range(100,1000,100):\n# \tnaive(x)\n# for x in range(1000,10000,1000):\n# \tnaive(x)\n# for x in range(5000,6000,100):\n# \tnaive(x)\n\nnaive(n)", "s = int(input())\ncnt = 0\nwhile s:\n    s -= max(map(int, str(s)))\n    cnt += 1\nprint(cnt)"]