["\"\"\"\nCodeforces Round 241 Div 1 Problem A\n\nAuthor  : chaotic_iak\nLanguage: Python 3.3.4\n\"\"\"\n\nclass InputHandlerObject(object):\n    inputs = []\n\n    def getInput(self, n = 0):\n        res = \"\"\n        inputs = self.inputs\n        if not inputs: inputs.extend(input().split(\" \"))\n        if n == 0:\n            res = inputs[:]\n            inputs[:] = []\n        while n > len(inputs):\n            inputs.extend(input().split(\" \"))\n        if n > 0:\n            res = inputs[:n]\n            inputs[:n] = []\n        return res\nInputHandler = InputHandlerObject()\ng = InputHandler.getInput\n\n############################## SOLUTION ##############################\nn = int(input().strip())\nmn = -2*10**9\nmx = 2*10**9\nrepl = [(\">\", \"<=\"), (\">=\", \"<\"), (\"<=\", \">\"), (\"<\", \">=\")]\nfor i in range(n):\n    a = g()\n    a[1] = int(a[1])\n    if a[2] == \"N\":\n        for qq,qqq in repl:\n            if qq == a[0]:\n                a[0] = qqq\n                break\n    if a[0] == \">\": a[1] += 1\n    if a[0] == \"<\": a[1] -= 1\n    if a[0][0] == \">\": mn = max(mn, a[1])\n    if a[0][0] == \"<\": mx = min(mx, a[1])\n\nif mn <= mx:\n    print(mn)\nelse:\n    print(\"Impossible\")", "n = int(input())\nl, r = -1000000001, 1000000001\nfor i in range(n): \n    s = input().split()\n    if s[2] == 'Y':\n        if s[0] == '>':\n            l = max(l, int(s[1]) + 1)\n        elif s[0] == '>=':\n            l = max(l, int(s[1]))\n        elif s[0] == '<':\n            r = min(r, int(s[1]) - 1)\n        else:\n            r = min(r, int(s[1]))\n    else:\n        if s[0] == '<=':\n            l = max(l, int(s[1]) + 1)\n        elif s[0] == '<':\n            l = max(l, int(s[1]))\n        elif s[0] == '>=':\n            r = min(r, int(s[1]) - 1)\n        else:\n            r = min(r, int(s[1]))        \nif r < l:\n    print(\"Impossible\")\nelif r == 1000000001 and l == -1000000001:\n    print(1)\nelif r == 1000000001:\n    print(l)\nelif l == -1000000001:\n    print(r)\nelse:\n    print(r)", "n = int(input())\n\nlewo = -2*(10**9); prawo = 2*(10**9)\n\nfor i in range(n):\n    buf = input().split(\" \")\n    liczba = int(buf[1])\n    wynik = buf[2]\n    if (buf[0]==\">=\" and wynik==\"Y\") or (buf[0]==\"<\" and wynik==\"N\"):\n        lewo = max(lewo, liczba)\n    if (buf[0]==\"<=\" and wynik==\"Y\") or (buf[0]==\">\" and wynik==\"N\"):\n        prawo = min(prawo, liczba)\n    if (buf[0]==\"<\" and wynik==\"Y\") or (buf[0]==\">=\" and wynik==\"N\"):\n        prawo = min(prawo, liczba-1)\n    if (buf[0]==\">\" and wynik==\"Y\") or (buf[0]==\"<=\" and wynik==\"N\"):\n        lewo = max(lewo, liczba+1)\n\n#print(lewo, prawo)\nif(lewo > prawo):\n    print(\"Impossible\")\nelse:\n    print(lewo)", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport math\n\ndef reverse_sign(sign):\n    if sign == '>=':\n        return '<'\n    elif sign == '<=':\n        return '>'\n    elif sign == '>':\n        return '<='\n    else:\n        return '>='\n\nN = int(input())\nmn = int(-1.5 * math.pow(10,9))\nmx = int(1.5 * math.pow(10,9))\nfor n in range(N):\n    (sign, num, flag) = input().split()\n    num = int(num)\n    if flag == 'N':\n        sign = reverse_sign(sign)\n\n    if sign == '>':\n        num += 1\n        sign = '>='\n    if sign == '<':\n        num -= 1\n        sign = '<='\n\n    if sign == '>=':\n        mn = max(mn, num)\n    elif sign == '<=':\n        mx = min(mx, num)\n    # print(\"mn, mx = \", mn, mx)\n        \nif mn > mx:\n    print ('Impossible')\nelse:\n    print (mn)\n        \n        \n", "n=int(input())\nl=-2*10**9\nr=2*10**9\nfor i in range(n):\n    s=input().split()\n    s[1]=int(s[1])\n    if s[2]=='Y':\n        if s[0]=='>=':\n            l=max(l,s[1])\n        elif s[0]=='>':\n            l=max(l,s[1]+1)\n        elif s[0]=='<=':\n            r=min(r,s[1])\n        else:\n            r=min(r,s[1]-1)\n    else:\n        if s[0]=='>=':\n            r=min(r,s[1]-1)\n        elif s[0]=='>':\n            r=min(r,s[1])\n        elif s[0]=='<=':\n            l=max(l,s[1]+1)\n        else:\n            l=max(l,s[1])\nif l>r:\n    print('Impossible')\nelse:\n    print(l)", "n = int(input())\nquestions = []\n\nfor _ in range(n):\n    questions.append(input())\n\nlower_bound, upper_bound = None, None\n\nfor q in questions:\n    bound = int(q.split()[1])\n    if (q.startswith('>') and q.endswith('Y')) or (q.startswith('<') and q.endswith('N')):\n        if ('Y' in q and '=' not in q) or ('N' in q and '=' in q):\n            bound += 1\n        lower_bound = bound if lower_bound == None else max(bound, lower_bound)\n    else:\n        if ('Y' in q and '=' not in q) or ('N' in q and '=' in q):\n            bound -= 1\n        upper_bound = bound if upper_bound == None else min(bound, upper_bound)\n\nif lower_bound != None and upper_bound != None and lower_bound > upper_bound:\n    print('Impossible')\nelse:\n    print(lower_bound if lower_bound != None else upper_bound)", "n=int(input())\nk=0\na=[]\nr=[]\nh=0\nfor i in range(n):\n    a.append(list(map(str,input().split())))\nfor i in range(n):\n    for j in range(1):\n        if a[i][j]=='>=' and a[i][j+2]=='Y':\n            if k<int(a[i][j+1]):\n                k=int(a[i][j+1])\n        if a[i][j]=='>=' and a[i][j+2]=='N':\n            if k>=int(a[i][j+1]):\n                k=int(a[i][j+1])-1\n        if a[i][j]=='>' and a[i][j+2]=='Y':\n            if k<=int(a[i][j+1]):\n                k=int(a[i][j+1])+1\n        if a[i][j]=='>' and a[i][j+2]=='N':\n            if k>int(a[i][j+1]):\n                k=int(a[i][j+1])\n        if a[i][j]=='<=' and a[i][j+2]=='Y':\n            if k>int(a[i][j+1]):\n                k=int(a[i][j+1])\n        if a[i][j]=='<=' and a[i][j+2]=='N':\n            if k<=int(a[i][j+1]):\n                k=int(a[i][j+1])+1\n        if a[i][j]=='<' and a[i][j+2]=='Y':\n            if k>=int(a[i][j+1]):\n                k=int(a[i][j+1])-1\n        if a[i][j]=='<' and a[i][j+2]=='N':\n            if k<int(a[i][j+1]):\n                k=int(a[i][j+1])\n\nfor i in range(n):\n    for j in range(1):\n        if a[i][j]=='>=' and a[i][j+2]=='Y':\n            if k>=int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='>=' and a[i][j+2]=='N':\n            if k<int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='>' and a[i][j+2]=='Y':\n            if k>int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='>' and a[i][j+2]=='N':\n            if k<=int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='<=' and a[i][j+2]=='Y':\n            if k<=int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='<=' and a[i][j+2]=='N':\n            if k>int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='<' and a[i][j+2]=='Y':\n            if k<int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\n        if a[i][j]=='<' and a[i][j+2]=='N':\n            if k>=int(a[i][j+1]):\n                r.append('+')\n            else:\n                r.append('-')\nfor i in range(len(r)):\n    if r[i]=='-':\n        print('Impossible')\n        h=0\n        break\n    else:\n        h+=1\nif h!=0:\n    print(k)\n", "n=int(input(''))\nz={}\nch={}\ntf={}\nfor i in range(0,n):\n    z[i],ch[i],tf[i]=list(map(str,input('').split()))\n    ch[i]=int(ch[i])\n    if z[i]=='<': z[i]=int(1)\n    if z[i]=='<=': z[i]=int(2)\n    if z[i]=='>': z[i]=int(3)\n    if z[i]=='>=': z[i]=int(4)\n    if tf[i]=='N':\n        if z[i]==1:\n            z[i]=4\n        else:\n            if z[i]==2: z[i]=3\n            else:\n                if z[i]==3: z[i]=2\n                else:\n                    if z[i]==4: z[i]=1\n    if z[i]==1:\n        tf[i]=ch[i]-1\n    if z[i]==3:\n        tf[i]=ch[i]+1\n    if ((z[i]==2)or(z[i]==4)): tf[i]=ch[i]\n    \ndef proverka(x,znak,oo):\n    if znak==1:\n        if x<oo: return 1\n        else: return 0\n    elif znak==2:\n        if x<=oo: return 1\n        else: return 0       \n    elif znak==3:\n        if x>oo: return 1\n        else: return 0\n    elif znak==4:\n        if x>=oo: return 1\n        else: return 0\n\nfor i in range(0,n):\n    l=1\n    for j in range(0,n):\n        l*=proverka(tf[i],z[j],ch[j])\n        if (l==0): break\n    if l==1:\n        print(tf[i])\n        return\nprint(\"Impossible\")\n\n", "_ = int(input())\n\nmini = - 10**9-1\nmaxi = 10**9+1\n\nfor i in range(_):\n    s, n, a  = input().split()\n    n = int(n)\n#    print('\\n---')\n#    print(s, n, a)\n#    print('----')\n    if a == 'Y':\n        if s == '>=':\n            mini = max(mini,n)\n        elif s == '>':\n            mini = max(mini,n + 1)\n        elif s == '<=':\n            maxi = min(maxi, n)\n        elif s == '<':\n            maxi = min(maxi, n - 1)\n    else:\n        if s == '>=':\n            maxi = min(maxi, n-1)\n        elif s == '>':\n            maxi = min(maxi, n)\n        elif s == '<=':\n            mini = max(mini, n+1)\n        elif s == '<':\n            mini = max(mini, n)\n\n#    print(mini, maxi, '\\n--------')\n\nif maxi >= mini:\n    print(mini)\nelse:\n    print('Impossible')\n", "l, r = -2000000000, 2000000000\nfor x in range(int(input())):\n    t, n, a = input().split()\n    if t[0] == '>':\n        n = int(n) + (len(t) == 1)\n        if a == 'Y':\n            l = max(l, n)\n        else:\n            r = min(r, n - 1)\n    else:\n        n = int(n) - (len(t) == 1)\n        if a == 'Y':\n            r = min(r, n)\n        else:\n            l = max(l, n + 1)\n   ## print(l, r)\nif l <= r:\n    print((l + r) // 2)\nelse:\n    print('Impossible')\n", "n = int(input())\nmn = -2000000000\nmx = 2000000000\nfor i in range(n):\n  (sign, ber, ans) = input().split()\n  num = int(ber)\n  if ans == 'N':\n    if sign == '<':\n      sign = '>='\n    elif sign == '<=':\n      sign = '>'\n    elif sign == '>':\n      sign = '<='\n    elif sign == '>=':\n      sign = '<'\n  if sign == '<':\n    sign = '<='\n    num -= 1\n  if sign == '>':\n    sign = '>='\n    num += 1\n  if sign == '<=':\n    mx = min(mx, num)\n  else:\n    mn = max(mn, num)\nif mx < mn:\n  print('Impossible')\nelse:\n  print(mn)", "n = int(input())\nleft = None\nright = None\nfor i in range(n):\n    st = input()\n    op, num, ans = st.split(' ')\n    num = int(num)\n    if ans == 'N':\n        if op == '>=':\n            op = '<'\n        elif op == '>':\n            op = '<='\n        elif op == '<=':\n            op = '>'\n        else:\n            op = '>='\n    if op == '>=':\n        if left == None:\n            left = num\n        else:\n            left = max(left, num)\n    elif op == '>':\n        if left == None:\n            left = num+1\n        else:\n            left = max(left, num+1)\n    elif op == '<=':\n        if right == None:\n            right = num\n        else:\n            right = min(right, num)\n    else: # op == '<'\n        if right == None:\n            right = num-1\n        else:\n            right = min(right, num-1)\nif left == None and right == None:\n    print(0)\nelif left == None:\n    print(right)\nelif right == None:\n    print(left)\nelif left > right:\n    print('Impossible')\nelse:\n    print(left)\n    \n", "n=int(input())\na=-2*10**9\nb=2*10**9\nfor i in range(n):\n    s=input().split()\n    x=int(s[1])\n    ans=str(s[2])\n    s=s[0]\n    if(s==\">=\"):\n        if(ans==\"Y\"):\n            a=max(a,x)\n        else:\n            b=min(b,x-1)\n    elif(s==\"<=\"):\n        if(ans==\"Y\"):\n            b=min(b,x)\n        else:\n            a=max(a,x+1)\n    elif(s==\"<\"):\n        if(ans==\"Y\"):\n            b=min(b,x-1)\n        else:\n            a=max(x,a)\n    elif(s==\">\"):\n        if(ans==\"Y\"):\n            a=max(a,x+1)\n        else:\n            b=min(x,b)\nif(b<a):\n    print(\"Impossible\")\nelse:\n        \n    print(b)\n", "__author__ = 'Lipen'\n\ndef ModeReverse(mode):\n    if mode=='>':\n        return '<='\n    elif mode=='<':\n        return '>='\n    elif mode=='>=':\n        return '<'\n    elif mode=='<=':\n        return '>'\n\ndef main():\n    n = int(input())\n    ymin = -2000000000\n    ymax = 2000000000\n\n    for i in range(n):\n        mode, x, ans = input().split()\n        x = int(x)\n\n        if ans=='N':\n            mode = ModeReverse(mode)\n\n        if mode=='>':\n            ymin = max(ymin, x+1)\n        elif mode=='<':\n            ymax = min(ymax, x-1)\n        elif mode=='>=':\n            ymin = max(ymin, x)\n        elif mode=='<=':\n            ymax = min(ymax, x)\n\n    if ymin>ymax:\n        print('Impossible')\n    else:\n        print(ymin)\n\nmain()", "u, v = -2000000000, 2000000000\nfor i in range(int(input())):\n    a, b, c = input().split()\n    k = int(b)\n    if a == '>=':\n        if c == 'Y': u = max(u, k)\n        else: v = min(v, k - 1)\n    elif a == '>':\n        if c == 'Y': u = max(u, k + 1)\n        else: v = min(v, k)\n    elif a == '<=':\n        if c == 'Y': v = min(v, k)\n        else: u = max(u, k + 1)\n    else:\n        if c == 'Y': v = min(v, k - 1)\n        else: u = max(u, k)\nprint('Impossible' if u > v else u)", "import sys\n\nqueries = int( sys.stdin.readline() )\n\nopp = { '>': '<=', \n        '>=': '<',\n        '<': '>=',\n        '<=': '>' }\n\nlower = -2000000000\nupper = 2000000000\n\nfor i in range(queries):\n  oper, num, judge = sys.stdin.readline().rstrip().split(' ')\n  if judge == 'N':\n    oper = opp[oper]\n    \n  if oper == '>':\n    lower = max(int(num) + 1, lower)\n  elif oper == '>=':\n    lower = max(int(num), lower)\n  elif oper == '<':\n    upper = min(int(num) - 1, upper)\n  elif oper == '<=':\n    upper = min(int(num), upper)\n  #print(str(lower) + \" \" + str(upper))\n  if(lower > upper):\n    break\n    \nif(lower > upper):\n  print (\"Impossible\")\nelse:\n  print(lower)", "n = int(input())\nl = -2*10**9\nr = 2*10**9\nfor i in range(n):\n    s = input().split()\n    x = int(s[1])\n    if s[-1] == 'N':\n        if s[0] == '<':\n            s[0] = '>='\n        elif s[0] == '<=':\n            s[0] = '>'\n        elif s[0] == '>':\n            s[0] = '<='\n        elif s[0] == '>=':\n            s[0] = '<'\n    if s[0] == '<':\n        r = min(r, x - 1)\n    elif s[0] == '<=':\n        r = min(r, x)\n    elif s[0] == '>':\n        l = max(l, x + 1)\n    elif s[0] == '>=':\n        l = max(l, x)\nif l > r:\n    print('Impossible')\nelse:\n    print(l)\n        \n", "def inverse( str ):\n   val = \"\"\n   if(str == \">\"):\n      val =  \"<=\"\n   elif(str == \"<\"):\n      val = \">=\"\n   elif(str == \">=\"):\n      val = \"<\"\n   else:\n      val = \">\"\n   return val \n\n\nmin_ = -2000000000\nmax_ = 2000000000\nn = int(input())#tipo por defecto es cadena\nfor i in range(n):  \n   sign, num, yn = input().split() \n   num = int(num) \n   if (yn == \"N\"):          \n     sign = inverse(sign)  \n   if(sign == \"<=\"):   \n      max_ = min(max_, num)   \n   elif(sign == \"<\"):\n      max_ = min(max_, num - 1)   \n   elif(sign == \">=\"):\n      min_ = max(min_, num)   \n   else:\n      min_ = max(min_, num + 1)  \nif(min_ <= max_):\n   print(min_)\nelse:\n   print(\"Impossible\")\n", "def inverse( str ):\n   val = \"\"\n   if(str == \">\"):\n      val =  \"<=\"\n   elif(str == \"<\"):\n      val = \">=\"\n   elif(str == \">=\"):\n      val = \"<\"\n   else:\n      val = \">\"\n   return val \n\n\nmin_ = -2000000000\nmax_ = 2000000000\nn = int(input())#tipo por defecto es cadena\nfor i in range(n):  \n   sign, num, yn = input().split() \n   num = int(num) #se puede modificar o es inmutable\n   if (yn == \"N\"):          \n     sign = inverse(sign)  \n   if(sign == \"<=\"):   \n      max_ = min(max_, num)   \n   elif(sign == \"<\"):\n      max_ = min(max_, num - 1)   \n   elif(sign == \">=\"):\n      min_ = max(min_, num)   \n   else:\n      min_ = max(min_, num + 1)  \nif(min_ <= max_):\n   print(min_)\nelse:\n   print(\"Impossible\")\n", "def inverse( str ): #funciones que no sono clase no son miembros de clase no usan self\n   val = \"\"\n   if(str == \">\"):\n      val =  \"<=\"\n   elif(str == \"<\"):\n      val = \">=\"\n   elif(str == \">=\"):\n      val = \"<\"\n   else:\n      val = \">\"\n   return val \n\n\nmin_ = -2000000000\nmax_ = 2000000000\nn = int(input())#tipo por defecto es cadena\nfor i in range(n):  \n   sign, num, yn = input().split() \n   num = int(num) #se puede modificar o es inmutable\n   if (yn == \"N\"):          \n     sign = inverse(sign)  \n   if(sign == \"<=\"):   \n      max_ = min(max_, num)   \n   elif(sign == \"<\"):\n      max_ = min(max_, num - 1)   \n   elif(sign == \">=\"):\n      min_ = max(min_, num)   \n   else:\n      min_ = max(min_, num + 1)  \nif(min_ <= max_):\n   print(min_)\nelse:\n   print(\"Impossible\")\n", "n = int(input())\nmn = -2000000000\nmx = 2000000000\nfor i in range(n):\n    znak, m, ans = list(map(str, input().split()))\n    if znak == '>':\n        if ans == 'Y':\n            mn = max(mn, int(m) + 1)\n        else:\n            mx = min(mx, int(m))\n    if znak == '<':\n        if ans == 'Y':\n            mx = min(mx, int(m) - 1)\n        else:\n            mn = max(mn, int(m))\n    if znak == '>=':\n        if ans == 'Y':\n            mn = max(mn, int(m))\n        else:\n            mx = min(mx, int(m) - 1)\n    if znak == '<=':\n        if ans == 'Y':\n            mx = min(mx, int(m))\n        else:\n            mn = max(mn, int(m) + 1)\nif mx < mn:\n    print(\"Impossible\")\nelse:\n    print((mx + mn) // 2)\n            \n", "d = {\n     '> Y':  (0,  1, max),\n     '>= Y': (0,  0, max),\n     '< N':  (0,  0, max),\n     '<= N': (0,  1, max),\n     '< Y':  (1, -1, min),\n     '<= Y': (1,  0, min),\n     '> N':  (1,  0, min),\n     '>= N': (1, -1, min),\n}\nran = [-2000000000, 2000000000]\n\ndef analyse(s):\n    ls = s.split(' ')\n    op = d.get(' '.join((ls[0], ls[2])))\n    ran[op[0]] = op[2](int(ls[1]) + op[1], ran[op[0]])\n\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    if ran[0] <= ran[1]:\n        analyse(s)\n\nif ran[0] <= ran[1]:\n    print(ran[0])\nelse:\n    print('Impossible')\n", "d = {\n     '> Y':  (0,  1, max),\n     '>= Y': (0,  0, max),\n     '< N':  (0,  0, max),\n     '<= N': (0,  1, max),\n     '< Y':  (1, -1, min),\n     '<= Y': (1,  0, min),\n     '> N':  (1,  0, min),\n     '>= N': (1, -1, min),\n}\nran = [-2000000000, 2000000000]\npossible = True\ndef analyse(s):\n    ls = s.split(' ')\n    op = d.get(' '.join((ls[0], ls[2])))\n    ran[op[0]] = op[2](int(ls[1]) + op[1], ran[op[0]])\n\n\nn = int(input())\nfor i in range(n):\n    s = input()\n    if possible:\n        analyse(s)\n        if ran[0] > ran[1]:\n            possible = False\n\nif possible:\n    print(ran[0])\nelse:\n    print('Impossible')\n", "n=int(input())\nleft = - 10**9 - 5\nright = 10**9 + 5\nfor i in range(n):\n    op,x,ans = input().split()\n    x=int(x)\n    if op == '>' and ans == 'Y':\n        left = max(x+1,left)\n    elif op == '>':\n        right = min(x,right)\n        \n    if op == '<' and ans == 'Y':\n        right = min(x-1,right)\n    elif op == '<':\n        left = max(x,left)\n        \n    if op == '>=' and ans == 'Y':\n        left = max(x,left)\n    elif op == '>=':\n        right = min(x-1,right)\n        \n    if op == '<=' and ans == 'Y':\n        right = min(x,right)\n    elif op == '<=':\n        left = max(x+1,left)\nif right<left:\n    print('Impossible')\nelse:\n    print(left)", "T=int(input())\nl=-2000000001\nr=2000000001\nwhile T>0:\n    T-=1\n    A,B,C=input().split()\n    b=int(B)\n    if C=='N':\n        if A=='>=':\n            A='<'\n        elif A=='<=':\n            A='>'\n        elif A=='>':\n            A='<='\n        else:\n            A='>='\n    if A=='>=':\n        b-=1\n    if A=='<=':\n        b+=1\n    if A[0]=='>':\n        l=max(l,b)\n    else:\n        r=min(r,b)\nif l+1>=r:\n    print('Impossible')\nelse:\n    print(l+1)\n"]