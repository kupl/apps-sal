["N = int(input())\ntable = []\nfor i in range(N):\n    table.append(list(map(int, input().split())))\n\nfor i in range(N):\n    for j in range(N):\n        if table[i][j] == 1:\n            continue\n        flg = False\n        for s in range(N):\n            for t in range(N):\n                if table[i][j] == table[i][s] + table[t][j]:\n                    flg = True\n                    break\n        if not flg:\n            print(\"No\")\n            return\nprint(\"Yes\")\n", "I = lambda : map(int, input().split())\nn, = I()\narr = []\nfor i in range(0, n):\n    arr.append(list(I()))\n\nfor x in range(0, n):\n    for y in range(0, n):\n        if arr[x][y] != 1:\n            found = False\n            for s in range(0, n):\n                for t in range(0, n):\n                    if arr[x][y] == arr[x][s] + arr[t][y]:\n                        found = True\n            if not found:\n                print(\"No\")\n                return\nprint(\"Yes\")", "def main():\n    n = int(input())\n    a = []\n    for _ in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            e = a[i][j]\n            if e == 1:\n                continue\n            else:\n                fl = False\n                for i1 in range(n):\n                    for j1 in range(n):\n                        if a[i1][j] + a[i][j1] == e:\n                            fl = True\n                            break\n                    if fl:\n                        break\n                if fl:\n                    continue\n                else:\n                    print('No')\n                    return\n    print('Yes')\n\nmain()", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nok = True\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] != 1:\n            check = False\n            for k in range(n):\n                for l in range(n):\n                    if a[i][j] == a[i][k] + a[l][j]:\n                        check = True\n                    if check:\n                        break\n                if check:\n                    break\n            ok &= check\nprint(\"Yes\" if ok else \"No\")\n", "n = int(input())\ns = []\nfor k in range(n):\n    s.append([int(i) for i in input().split()])\nt = 0\nfor i in range(n):\n    for j in range(n):\n        l = 0\n        if s[i][j] !=1:\n            for x in range(n):\n                for y in range(n):\n                    if s[i][x]+ s[y][j] == s[i][j]:\n                        l = 1\n            if not l:\n                t = 1\nif t:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n", "from sys import stdin, stdout\n\ndef main():\n    n = int(stdin.readline())\n    mat = []\n    for i in range(n):\n        mat.append(list(map(int, stdin.readline().split())))\n    for i in range(n):\n        for j in range(n):\n            st = True\n            for u in range(n):\n                for k in range(n):\n                    if mat[i][j] == 1 or mat[i][j] == mat[u][j] + mat[i][k]:\n                        st = False\n                        break\n                if not st: break\n            if st:\n                return False\n    return True\n\n\nprint('Yes' if main() else 'No')\n", "import sys \n\ndef main():\n    n = int(input())\n    x = []\n    for i in range(n):\n        y = list(map(int,sys.stdin.readline().split()))\n        x.append(y)\n\n    for i in range(n):\n        for j in range(n):\n            if x[i][j] == 1:\n                continue\n            found = False\n            for o in range(n):\n                a = x[i][o]\n                if o == j:\n                    continue\n                for p in range(n):\n                    if p ==i:\n                        continue\n                    b = x[p][j]\n                    if a+b == x[i][j]:\n                        found = True\n                        break\n                if found:\n                    break\n            if not found:\n                print(\"No\")\n                return\n    print(\"Yes\")\n    \n\nmain()\n", "n = int(input())\ndata = []\nfor i in range(n):\n    data += [list(map(int, input().split()))]\n\nfor i in range(n):\n    for j in range(n):\n        if data[i][j] == 1:\n            t = True\n            continue\n        t = False\n        for k in range(n):\n            for m in range(n):\n                if data[i][k] + data[m][j] == data[i][j]:\n                    t = True\n                    break\n        if not t:\n            print(\"No\")\n            break\n    if not t:\n        break\nif t:\n    print(\"Yes\")\n", "def check(r, c, x):\n    rtn = False\n    rs = [a[r][i] for i in range(n) if i != c]\n    cs = [a[i][c] for i in range(n) if i != r]\n    for r in rs:\n        for c in cs:\n            if r + c == x:\n                rtn = True\n                break\n    return rtn\n\nn = int(input())\na = [list(map(int, input().split()))for _ in range(n)]\n\nans = True\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] != 1:\n            ans &= check(i, j, a[i][j])\n\nprint('Yes' if ans else 'No')\n", "def solve(g):\n    for i in range(n):\n        for j in range(n):\n            if g[i][j] == 1:continue\n            for p in range(n):\n                for q in range(n):\n                    if p == i or q == j:continue\n                    if g[i][q] + g[p][j] == g[i][j]:break\n                else:\n                    continue\n                break\n            else:\n                return \"No\"\n    return \"Yes\"\n\nn = int(input())\n\ng = []\n\nfor i in range(n):\n    g.append([int(item) for item in input().split()])\n    \nprint(solve(g))", "#! python3\n\ndef is_good(a, n, i, j):\n    c = set([])\n    for x in range(n):\n        c.add(a[i][j] - a[i][x])\n    for x in range(n):\n        if a[x][j] in c:\n            return True\n    return False\n\nn = int(input())\na = []\nfor _ in range(n):\n    a.append([int(x) for x in input().strip().split(' ')])\n\ngood = True\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] != 1 and not is_good(a, n, i, j):\n            good = False\n            break\nif good:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n", "#!/usr/bin/env python3\nimport sys\n\ndef main():\n    n = int(sys.stdin.readline())\n    mat = [None for __ in range(n)]\n    for indx in range(n):\n        mat[indx] = list(map(int, sys.stdin.readline().split()))\n\n    good = True\n    for row in range(n):\n        for col in range(n):\n            if mat[row][col] == 1:\n                continue\n            else:\n                good &= check_this_element(mat, row, col)\n    if good:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\ndef check_this_element(mat, row, col):\n    n = len(mat)\n    for _row in range(n):\n        for _col in range(n):\n            if mat[_row][col] + mat[row][_col] == mat[row][col]:\n                return True\n    return False\n\ndef __starting_point():\n    main()\n\n__starting_point()", "#!/usr/bin/env python3\nfrom sys import stdin, stdout\n\ndef rint():\n    return list(map(int, stdin.readline().split()))\n#lines = stdin.readlines()\n\n\ndef check(i, j):\n    for r in range(n):\n        for c in range(n):\n           if a[i][c] + a[r][j] == a[i][j]:\n               return 1\n    return 0\nn = int(input())\na = [[] for _ in range(n)]\nfor i in range(n):\n    a[i] = list(rint())\n\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] == 1:\n            continue\n        if check(i,j) == 0:\n            print(\"No\")\n            return\n\nprint(\"Yes\")\n\n\n\n", "def int_input():\n    return list(map(int, input().split()))\n\n\nn = int(input())\nmatr = [list(int_input()) for i in range(n)]\n\ngood = True\nfor row in range(n):\n    nums = set(matr[row])\n    for col in range(n):\n        num = matr[row][col]\n        if num == 1:\n            continue\n        cur_good = False\n        for i in range(n):\n            cur_good |= num - matr[i][col] in nums\n        good &= cur_good\n\nprint('Yes' if good else 'No')\n", "#def proverka(b, k, m, p):\n#  for i in range()\n\nn = int(input()) \na = []\nfor i in range(n):\n    a.append([int(j) for j in input().split()])\nflag = \"Yes\" \nfor i in range(n):\n  for j in range(n):\n    if(a[i][j] != 1):\n      f = False\n      for k in range(n):\n        if(f):\n          break\n        for z in range(n):\n          if(a[k][j] + a[i][z] == a[i][j]):\n            f = True\n          if(f):\n            break\n      if(not(f)):\n        flag = \"No\"\n\nprint(flag)", "n=int(input())\na=[[0]*n for i in range(n)]\nf=True\nd=True\nfor i in range(n):\n    a[i]=list(map(int,input().split(\" \")))\nfor i in range(n):\n    for j in range(n):\n        s=a[i][j]\n\n        if s!=1:\n            f = False\n            for t in range(n):\n                if t!=i:\n                    x=s-a[t][j]\n                    if x in a[i]:\n                        f=True\n        if f==False:\n            d=False\nif not d:\n    print('No')\nelse:\n    print('Yes')", "n=int(input())\na=[]\nfor i in range(n):\n\ta.append(list(map(int,input().split())))\nfor i in range(n):\n\tfor j in range(n):\n\t\tc=0\n\t\tif a[i][j]==1:\n\t\t\tcontinue\n\t\tfor k in range(n):\n\t\t\tfor l in range(n):\n\t\t\t\tif a[i][j]==a[i][k]+a[l][j]:\n\t\t\t\t\tc=1\n\t\t\t\t\tbreak\n\t\t\tif c:\n\t\t\t\tbreak\n\t\tif not c:\n\t\t\tprint('No')\n\t\t\treturn\nprint('Yes')\n", "a = [list(map(int, input().split())) for i in range(int(input()))]\nn = len(a)\nfor i in range(n):\n    for j in range(n):\n        if a[i][j] != 1:\n            found = False\n            for i2 in range(n):\n                for j2 in range(n):\n                    if a[i][j] == a[i][j2] + a[i2][j]:\n                        found = True\n            if not found:\n                print('No\\n')\n                return\nprint('Yes')", "n = int(input())\na = []\nfor i in range(n):\n\ta.append([int(x) for x in input().split()])\nfor i in range(n):\n\tfor j in range(n):\n\t\tif a[i][j]==1:\n\t\t\tcontinue\n\t\tval = False\n\t\tfor k in range(n):\n\t\t\tfor l in range(n):\n\t\t\t\tif (a[i][k]+a[l][j]==a[i][j]):\n\t\t\t\t\tval = True\n\t\tif val==False:\n\t\t\tprint(\"No\")\n\t\t\treturn\nprint(\"Yes\")\n\t\t\t\t\n\t\t\n", "from itertools import *\nn=int(input())\nf=[list(map(int,input().split())) for _ in range(n)]\nfor i,j in product(list(range(n)),list(range(n))):\n    x=f[i][j]\n    if x==1: continue\n    if not any(a+b==x for a, b in product(chain(f[i][:j], f[i][j+1:]),(f[k][j] for k in chain(list(range(i)), list(range(i+1,n)))))):\n        print(\"No\")\n        return\nprint(\"Yes\")\n", "def fin(s, row, column):\n\tfor i in row:\n\t\tfor j in column:\n\t\t\tif i+j == s:\n\t\t\t\treturn True\n\treturn False\n\nn = int(input())\na = []\nfor i in range(n):\n\tk = input().split(' ')\n\tk = list(map(int,k))\n\ta.append(k)\n\nans = True\n\nfor i in range(n):\n\tfor j in range(n):\n\t\tif a[i][j] == 1:\n\t\t\tcontinue\n\t\telse:\n\t\t\ts = a[i][j]\n\t\t\trow = a[i]\n\t\t\tcolumn = []\n\t\t\tfor t in range(n):\n\t\t\t\tcolumn.append(a[t][j])\n\t\t\tans = fin(s,row,column)\n\t\t\tif ans == False:\n\t\t\t\tbreak\n\tif ans == False:\n\t\tbreak\n\nif ans==True:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "import sys\n\ndef is_good(lab):\n  n = len(lab)\n  for i in range(n):\n    for j in range(n):\n      v = lab[i][j]\n      if v > 1 and all(x + y != v for x in lab[i] for y in (lab[k][j] for k in range(n))):\n        return False\n  return True\n\nn = int(input())\n\nlab = [[int(i) for i in input().split()] for _ in range(n)]\n\nprint('Yes' if is_good(lab) else 'No')\n", "n = int(input())\ntbl = []\nfor i in range(n):\n    tbl.append(list(map(int, input().split())))\n\nout = False\nfor i, row in enumerate(tbl):\n    for j in range(len(row)):\n        out = False\n        e = row[j]\n        if e == 1:\n            out = True\n            continue\n        for j1, e1 in enumerate(row):\n            if j1 != j:\n                for i1 in range(n):\n                    if e1 + tbl[i1][j] == e:\n                        out = True\n                        break\n            if out:\n                break\n        if not out:\n            print('No')\n            break\n    if not out:\n        break\nif out:\n    print('Yes')"]