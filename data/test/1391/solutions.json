["3\n\ndef readln(): return tuple(map(int, input().split()))\n\nn, m, a = readln()\nb = list(sorted(readln()))\np = list(sorted(readln()))\n\nl = ost = 0\nr = min(m, n) + 1\n\nwhile r - l > 1:\n    k = (r + l) // 2\n    s = d = 0\n    for x, y in zip(b[-k:], p[:k]):\n        if x < y:\n            d += y - x\n        s += y\n    if d <= a:\n        l = k\n        ost = max(0, s - a)\n    else:\n        r = k\n\nprint(l, ost)\n", "3\ndef readn():\n  return map(int, input().split())\n\nn, m, a = readn()\nn = min(n, m)\nm = n\nb = sorted(readn())[-n:]\np = sorted(readn())\nr = 0\nwhile r < n:\n t = (r+1 + n)//2\n a1 = sum([max(0, p[i]-b[m+i-t]) for i in range(t)])\n if a1 <= a:\n   r = t\n else:\n   n = t-1\nprint(r, max(0, sum(p[:r])-a))", "n, m, a = map(int, input().split())\nb, p = sorted(map(int, input().split())), sorted(map(int, input().split()))\ndef f(k): return sum(max(0, p[i] - b[n - k + i]) for i in range(k))\ndef g(k): return sum(min(b[n - k + i], p[i]) for i in range(k))\nx, y, d = 0, min(n, m) + 1, a\nwhile y - x > 1:\n    k = (x + y) // 2\n    s = f(k)\n    if s > a: y = k\n    else: x, d = k, s\nprint(x, max(0, g(x) - a + d))", "n, m, a = map(int, input().split())\nb, p = sorted(map(int, input().split())), sorted(map(int, input().split()))\ndef f(k):\n    return sum(max(0, p[i] - b[n - k + i]) for i in range(k))\ndef g(k):\n    return sum(min(b[n - k + i], p[i]) for i in range(k))\n    \nx, y, d = 0, min(n, m) + 1, a\nwhile y - x > 1:\n    k = (x + y) // 2\n    s = f(k)\n    if s > a:\n        y = k\n    else:\n        x, d = k, s\nprint(x, max(0, g(x) - a + d))", "#!/usr/bin/env python3\n\nn, m, a = list(map(int, input().split()))\nb = sorted(map(int, input().split()))\np = sorted(map(int, input().split()))\n\nleft = 1\nright = min(n, m)\n\nwhile left <= right:\n    mid = (left + right) // 2\n    if a >= sum(max(0, x - y) for x, y in zip(p[:mid], b[-mid:])):\n        left = mid + 1\n    else:\n        right = mid - 1\nprint(right, max(0, sum(p[:right]) - a))\n", "def readn():\n  return list(map(int, input().split()))\nn,m,a=readn()#map(int,input().split())\nb,p=sorted(map(int,input().split()))[-min(n,m):],sorted(map(int,input().split()))\nr=min(n,m)\nmm=r\nl=0\nwhile l<r:\n    mid=(r+1 +l)//2\n    pri=sum([max(0,p[i]-b[mm-mid+i]) for i in range(mid)])\n    if pri<=a:\n        l=mid\n    else:\n        r=mid-1\nprint(l,max(0,sum(p[:l])-a))\n\n\n\n\n\n", "def readn():\n  return list(map(int, input().split()))\nn,m,a=readn()#map(int,input().split())\nb,p=sorted(map(int,input().split()))[-min(n,m):],sorted(map(int,input().split()))\nr=min(n,m)\nmm=r\nl=0\nwhile l<=r:\n    mid=l+(r-l)//2\n    pri=sum([max(0,p[i]-b[mm-mid+i]) for i in range(mid)])\n    if pri<=a:\n        l=mid+1\n    else:\n        r=mid-1\nprint(r,max(0,sum(p[:r])-a))\n\n\n\n\n\n", "wejscie1 = list(map(int,input().strip().split()))\nilChlopcow = wejscie1[0]\nilRowerow = wejscie1[1]\nbudzet = wejscie1[2]\npieniadzeChlopcow = list(map(int,input().strip().split()))\ncenyRowerow = list(map(int,input().strip().split()))\npieniadzeChlopcow = sorted(pieniadzeChlopcow)\ncenyRowerow = sorted(cenyRowerow)\nbikesBoysCanRent = 0\ntotalCostOfRenting = 0\nownMoneyRequired = 0\n\n\n\ndef czyMoznaWypozyczyc(ilSprawdzonychRowerow):\n  budzet2 = budzet\n  if ilSprawdzonychRowerow > ilChlopcow:\n    return False\n  for x in range(ilSprawdzonychRowerow):\n    roznica = pieniadzeChlopcow[ilChlopcow-x-1] - cenyRowerow[ilSprawdzonychRowerow-x-1]\n    if roznica >= 0:\n     continue\n    budzet2 = budzet2 + roznica\n    if budzet2 < 0:\n     return False\n  return True\n\ndef binarySearch(lewy, prawy):\n  while lewy<prawy:\n    mid = (lewy + prawy + 1)//2\n    if czyMoznaWypozyczyc(mid) == True:\n      lewy = mid\n    else:\n      prawy = mid-1\n  return lewy \n\n\nbikesBoysCanRent = binarySearch(0, ilRowerow)\n\nfor x in range(bikesBoysCanRent):\n  totalCostOfRenting+=cenyRowerow[x]\nwyjscie2 = totalCostOfRenting-budzet\nif wyjscie2 < 0:\n  wyjscie2 = 0\nprint(bikesBoysCanRent,wyjscie2)\n", "def check(mid):\n    need=0\n    for i in range(mid):\n#        print(mid,n-mid+i,i,mon,pri)\n        if mon[n-mid+i]<pri[i]:\n            need+=pri[i]-mon[n-mid+i]\n    return need<=a           \nn,m,a = list(map(int,input().split()))\nmon = sorted(map(int,input().split()))\npri = sorted(map(int,input().split()))\nl=0\nr=min(n,m)\n#print(mon,pri)\nwhile l<=r:\n    mid = l +(r-l)//2\n    if check(mid):\n        l = mid+1\n    else:\n        r = mid-1\nprint(r,max(0,sum(pri[:r])-a))\n\n\n", "import sys\n\ncases = False\n\n# Pre-defined function\n# Begin\ndef fast_pow(a:int, b:int):\n    res = 1\n    while b > 0:\n        if b & 1:\n            res *= a\n        a *= a\n        b >>= 1\n    return res\n\ndef c2(n):\n    return n * (n-1) // 2\n\ndef get():\n    return list(map(int, input().split()))\n\ndef bits(n: int):\n    return list(bin(n)).count('1')\n\ndef main(test_case = False):\n    n = int(input()) if test_case else 1\n    for _ in range(n):\n        test()\n\ndef flush():\n    sys.stdout.flush()\n\ndef parr(arr):\n    print(*arr, sep=' ')\n\ndef gcd(a, b):\n    while b:\n        if b % a == 0:\n            break\n        tmp = a\n        a = b % a\n        b = tmp\n    return a\n\ndef ext_gcd(a: int, b: int):\n    if (b == 0):\n        return [a, [1, 0]]\n \n    res = ext_gcd(b, a % b)\n    g = res[0]\n    x1 = res[1][0]\n    y1 = res[1][1]\n    x = y1\n    y = x1 - y1 * (a // b)\n \n    return [g, [x, y]]\n\n# End\n\nb = []\np = []\nn = m = a = 0\n \ndef check(cnt):\n    if cnt == 0:\n        return True\n    x = b[-cnt:]\n    y = p[:cnt]\n    s = a\n    i = 0\n    while i < cnt and s >= 0:\n        s -= max(0, y[i]-x[i])\n        i += 1\n    return s >= 0\n \ndef test():\n    nonlocal n, m, a, b, p\n    n, m, a = get()\n    b = sorted(get())\n    p = sorted(get())\n \n    left = 0\n    right = min(n, m)\n \n    ans = -1\n \n    while left <= right:\n        mid = (left + right) // 2\n        if check(mid):\n            ans = max(ans, mid)\n            left = mid + 1\n        else:\n            right = mid - 1\n \n    if ans == -1:\n        print(0, 0)\n        return\n \n    # print(ans)\n \n    t = 0\n    x = b[-ans:]\n    y = p[:ans]\n    i = 0\n    while i < ans:\n        t += min(x[i], y[i])\n        a -= max(0, y[i]-x[i])\n        i += 1\n    print(ans, max(0, t-a)) \n\nmain(cases)"]