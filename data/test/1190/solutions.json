["w1, h1, w2, h2 = list(map(int, input().split()))\nprint(2 * (h1 + h2) + w1 + w2 + abs(w1 - w2) + 4)\n", "def main():\n    w1, h1, w2, h2 = [int(x) for x in input().split()]\n    print(w1 + h1 * 2 + w2 + h2 * 2 + w1 - w2 + 4)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "w1, h1, w2, h2 = map(int, input().split())\nans = (h1 + h2 + 1) * 2 + (w1 + 1) * 2\nprint(ans)", "w1,h1,w2,h2 = map(int, input().split())\n\nans = w1 + 2 + w2 + 2 + h1 + h2 + h1 + h2 + abs(w2-w1)\nprint(ans)", "def main():\n    w1,h1,w2,h2 = list(map(int, input().split()))\n    s = max(w1,w2)\n    u = h1+h2\n    print(2*(s+u)+4)\n\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "w1,h1,w2,h2=[int(i) for i in input().split()]\nprint((w1+h1+h2)*2+4)", "w1,h1,w2,h2 = map(int, input().split())\nw = max(w1, w2)\nh = h1+h2\nprint(w+h+w+h+4)", "w1, h1, w2, h2 = list(map(int, input().split()))\nprint(4 + 2 * (w1 + h1 + h2))\n", "ii = lambda: int(input())\nmi = lambda: map(int, input().split())\nli = lambda: list(mi())\n\nw1, h1, w2, h2 = mi()\nans = h1 + h2 + 2 + w1 + w2 + 2 + h1 + h2 + w1 - w2\nprint(ans)", "w1, h1, w2, h2 = list(map(int, input().split()))\n\nans = 0\nans += (w1 + 1) * 2 + (h1 * 2)\nans += (w2 + 1) * 2 + (h2 * 2)\nans -= 2 * (min(w2, w1))\nprint(ans)\n", "import math as mt\nimport itertools as it\nimport functools as ft\nimport random as rnd\n\nstdin = lambda type_ = \"int\", sep = \" \": list(map(eval(type_), input().split(sep)))\njoint = lambda sep = \" \", *args: sep.join(str(i) if type(i) != list else sep.join(map(str, i)) for i in args)\n\nw1, h1, w2, h2 = stdin()\n\nprint(2 * (h1 + h2) + w1 + w2 + 4 + max(w1 - w2, 0))", "#      \nimport collections, atexit, math, sys, bisect \n\nsys.setrecursionlimit(1000000)\n\nisdebug = False\ntry :\n    #raise ModuleNotFoundError\n    import pywin32\n    import numpy\n    def dprint(*args, **kwargs):\n        #print(*args, **kwargs, file=sys.stderr)\n        # in python 3.4 **kwargs is invalid???\n        print(*args,  file=sys.stderr)\n    dprint('debug mode')\n    isdebug = True\nexcept Exception:\n    def dprint(*args, **kwargs):\n        pass\n\n\ndef red_inout():\n    inId = 0\n    outId = 0\n    if not isdebug:\n        inId = 0\n        outId = 0\n    if inId>0:\n        dprint('use input', inId)\n        try:\n            f = open('input'+ str(inId) + '.txt', 'r')\n            sys.stdin = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid input file')\n    if outId>0:\n        dprint('use output', outId)\n        try:\n            f = open('stdout'+ str(outId) + '.txt', 'w')\n            sys.stdout = f #\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u81f3\u6587\u4ef6\n        except Exception:\n            dprint('invalid output file')\n            \n        atexit.register(lambda :sys.stdout.close())     #idle \u4e2d\u4e0d\u4f1a\u6267\u884c atexit\n\nif isdebug:\n    red_inout()\n\ndef getIntList():\n    return list(map(int, input().split()))            \n\ndef solve():    \n    pass\n    \nT_ = 1    \n#T_, = getIntList()\n\nfor iii_ in range(T_):\n    #solve()\n    w1,h1,w2,h2  = getIntList()\n    r = w1+2\n    r+= 2*h1\n    r += w2+2\n    r+= 2*h2\n    r += w1-w2\n    print(r)\n\n    \n\n\n\n\n\n\n", "w1,h1,w2,h2=list(map(int,input().split(' ')))\nprint(2*(h1+h2+2)+w1*2)\n", "a, b, c, d = list(map(int, input().split()))\np = (a + 2) * (b + d + 2) - (a - c) * d - a*b - c*d\nprint(p) \n", "a,b,c,d = map(int,input().split())\nans = 2*d + 2*a + 2*b + 4\nprint(ans)", "from math import *\nimport sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn map(int, minp().split())\n\nw1, h1, w2, h2 = mints()\ns = w1+w2+(h1+h2)*2+4\nprint(s+abs(w1-w2))", "w1, h1, w2, h2 = map(int, input().split())\nprint(2 * (w1 + w2 + h1 + h2 + 4) - min(w1, w2) * 2 - 4)", "w1, h1, w2, h2 = list(map(int, input().split()))\n\nans = 2*(w1 + h1) + 2*(w2 + h2) + 4\n\nans -= min(w1, w2)*2\n\nprint(ans)\n", "w1, h1, w2, h2 = map(int, input().split())\np = w1 + 2\np += h1 * 2\np += w1 - w2\np += h2 * 2\np += w2 + 2\nprint(p)", "import math\nfrom collections import deque, defaultdict\nfrom sys import stdin, stdout\ninput = stdin.readline\nlistin = lambda : list(map(int, input().split()))\nmapin = lambda: map(int, input().split())\nw1, h1, w2, h2 = mapin()\nans = 2*(h1+h2)+2*w1+4\nprint(ans)", "w1, h1, w2, h2 = map(int, input().split())\nprint(2*(max(w1, w2)+h1+h2)+4)", "w1, h1, w2, h2 = list(map(int, input().split()))\nanswer = 4 + (h1 + h2) * 2 + w1 + w2 + abs(w2 - w1)\nprint(answer)\n", "w1,h1,w2,h2=list(map(int,input().split()))\n\nprint(w1*2+h1*2+h2*2+4)\n", "w1, h1, w2, h2 = [int(x) for x in input().split()]\nprint(2*w1+2*(h1+h2)+4)\n"]