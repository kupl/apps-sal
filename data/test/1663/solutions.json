["s=input();M=10**9+7;o=u=v=0;n=len(s)\nfor i in range(n):c=int(s[i]);u+=v;v=(10*v+c)%M;o+=pow(10,n-i-1,M)*((i*i+i)//2*c+u)\nprint(o%M)", "mod = int(1e9+7)\ns = input()\nn = len(s)\npref = [0] * (n+1)\nfor i in range(n):\n    pref[i+1] = (int(s[i]) + pref[i]*10) % mod\nfor i in range(n):\n    pref[i+1] = (pref[i+1] + pref[i]) % mod\n\nres = 0\nacc = 0\nfor i in range(n, 0, -1):\n    res += pref[i-1] * pow(10, n-i, mod) + i*acc\n    res %= mod\n    acc = acc + int(s[i-1]) * pow(10, n-i, mod) % mod\nprint(res)\n", "import sys\nz=sys.stdin.readline\nM=10**9+7\nn=[*map(int,z().strip())]\nl=len(n)\np=[0]\nfor i in range(l):p.append(p[-1]+n[i])\ns=0\nv=(l*l-l)//2\nd=1\nfor i in range(1,l):\n    r=p[l-i]*i+v*n[l-i]\n    s=(s+r*d)%M\n    d=(d*10)%M\n    v-=l-i\nprint(s)", "n = input().strip()\nM = 1000000007\nl = len(n)\n\na = 0\nb = 0\nfor i,c in enumerate(n[::-1]):\n\tc = int(c)\n\tp = l - 1 - i\n\ta += p * (p + 1) // 2 * c * pow(10, i, M)\n\ta += b * c\n\ta %= M\n\tb += (i+1) * pow(10, i, M)\n\tb %= M\nprint(a)\n", "import sys\ninput = sys.stdin.readline\n\nMOD = 10 ** 9 + 7\nN = 10 ** 5 + 100\n\nfact = [0 for _ in range(N)]\ninvfact = [0 for _ in range(N)]\nfact[0] = 1\nfor i in range(1, N):\n    fact[i] = fact[i - 1] * i % MOD\n\ninvfact[N - 1] = pow(fact[N - 1], MOD - 2, MOD)\n\nfor i in range(N - 2, -1, -1):\n    invfact[i] = invfact[i + 1] * (i + 1) % MOD\ndef nCk(n, k):\n    if k < 0 or n < k:\n        return 0\n    else:\n        return fact[n] * invfact[k] * invfact[n - k] % MOD\n\ndef main():\n    n = input().strip()\n    ans = 0\n    l = len(n)\n    plus = 0\n    plus2 = 1\n    plus3 = 1\n    for i, str_num in enumerate(n[::-1]):\n        num = int(str_num)\n        j = l - i - 1\n        ans += nCk(j + 1, 2) * pow(10, i, MOD) * num\n        ans %= MOD\n        ans += num * plus\n        ans %= MOD\n        plus += plus2 * plus3\n        plus2 *= 10\n        plus3 += 1\n        plus %= MOD\n        plus2 %= MOD\n        plus3 %= MOD\n\n    print(ans)\n        \n        \nmain()\n", "n = list(input())\nl = len(n)\nx = 1\ny = 0\nz = 0\nmod = pow(10, 9) + 7\nans = 0\nfor i in range(l):\n    m = int(n[l - i - 1])\n    ans += x * m * ((l - i) * (l - i - 1) // 2)\n    ans %= mod\n    ans += z * m\n    ans %= mod\n    y += 1\n    z += x * y\n    z %= mod\n    x *= 10\n    x %= mod\nprint(ans)", "import sys\n\ndef minp():\n\treturn sys.stdin.readline().strip()\n\ndef mint():\n\treturn int(minp())\n\ndef mints():\n\treturn list(map(int, minp().split()))\n\n#from math import ceil\n\ndef solve():\n\tMOD = int(1e9+7)\n\ts = minp()\n\tn = len(s)\n\tp = [0]*(n+1)\n\tpp = [1]*(n+1)\n\tp10 = 1\n\tfor i in range(1,n+1):\n\t\tp[i] = (p[i-1]+p10*i)%MOD\n\t\tpp[i] = p10\n\t\tp10 = (p10*10)%MOD\n\tres = (int(s[0])*p[n-1])%MOD\n\t#print(res)\n\tfor i in range(1,n):\n\t\t#print(int(s[i])*pp[n-i],int(s[i])*(p[n-1-i] + pp[n-i]*(i)*(i+1)//2))\n\t\tres = (res+int(s[i])*(p[n-1-i] + pp[n-i]*(i)*(i+1)//2))%MOD\n\tprint(res)\n\n#for i in range(mint()):\nsolve()\n", "import sys\ninput = sys.stdin.readline\nfrom itertools import accumulate\n\nS=input().strip()\nmod=10**9+7\nLEN=len(S)\n\nANS=[0]*(LEN+1)\nANS2=[0]*(LEN+1)\nANS3=[0]*(LEN+1)\n\nfor i in range(LEN):\n    x=int(S[LEN-1-i])\n    \n    k=LEN-i-1\n    p=k*(k+1)//2\n    ANS[i]+=x*p\n\n    \n    ANS2[0]+=x\n    ANS2[i]-=x\n    ANS3[i]-=i*x\n\nANS2=list(accumulate(ANS2))\nfor i in range(LEN+1):\n    ANS2[i]+=ANS3[i]\nANS2=list(accumulate(ANS2))\n\n#print(ANS)\n#print(ANS2)\n\nA=0\nfor i in range(LEN):\n    A+=(ANS[i]+ANS2[i])*pow(10,i,mod)\n    A%=mod\n\nprint(A)\n", "s=input()\nans=0\nmod=10**9+7\nn=len(s)\nps=[0]\ncp=1\nfor i in range(n-1,-1,-1):\n\tps.append((ps[-1]+int(s[i])*cp)%mod)\n\tcp=cp*10%mod\nps.reverse()\nprefs=0\nlastpref=0\nfor i in range(n):\n\tnextdigs=ps[i+1]\n\tans=(ans+prefs*pow(10,n-i-1,mod)%mod+nextdigs*(i+1))%mod\n\tlastpref=(lastpref*10+int(s[i]))%mod\n\tprefs=(prefs+lastpref)%mod\nprint(ans)", "s = [int(c) for c in input()][::-1]\nn = len(s)\n\nmod = 1000000007\ndef inv(x):\n    return pow(x, mod - 2, mod)\nteninv = inv(10)\n\nP = [0]\np = 1\nfor x in s:\n    P.append((P[-1] + x*p) % mod)\n    p = p*10 % mod\n\nQ = [0]\nfor i in range(n+1):\n    Q.append((Q[-1] + P[i]*pow(teninv, i, mod))%mod) \n\ns = 0\nfor l in range(n):\n    first = P[l] - P[0]\n    s += (n - l)*first % mod\n    s += P[n] * inv(9) % mod * (1 - inv(pow(10, n-l, mod))) % mod\n    d = Q[n+1] - Q[l+1]\n\n    s = (s - d*inv(pow(teninv,l,mod))%mod) % mod\nprint(s%mod)\n", "def inv(x):\n    return pow(x,1000000005,1000000007)\ns=input()\nans=0\nn=len(s)\nfor i in range(n-1,-1,-1):\n    z=pow(10,n-1-i,1000000007)*int(s[i])\n    z=z*((i)*(i+1))//2\n    ans+=z\n    ans%=1000000007\n    k=n-1-i\n    op=0\n    op+=(pow(10,k,1000000007)*(9*k-1))\n    op%=1000000007\n    op+=1\n    op=op*inv(81)\n    op%=1000000007\n    op=op*int(s[i])\n    ans+=op\n    ans%=1000000007\nprint(ans)\n", "import sys\nimport random\nfrom fractions import Fraction\nfrom math import *\n \ndef input():\n    return sys.stdin.readline().strip()\n \ndef iinput():\n    return int(input())\n\ndef finput():\n    return float(input())\n\ndef tinput():\n    return input().split()\n\ndef linput():\n    return list(input())\n \ndef rinput():\n    return list(map(int, tinput()))\n\ndef fiinput():\n    return list(map(float, tinput()))\n \ndef rlinput():\n    return list(map(int, input().split()))\ndef trinput():\n    return tuple(rinput())\n\ndef srlinput():\n    return sorted(list(map(int, input().split())))\n\ndef NOYES(fl):\n    if fl:\n        print(\"NO\")\n    else:\n        print(\"YES\")\ndef YESNO(fl):\n    if fl:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n    \ndef main():\n    #n = iinput()\n    #k = iinput() \n    #m = iinput() \n    #n = int(sys.stdin.readline().strip()) \n    #n, k = rinput()\n    #n, m = rinput()\n    #m, k = rinput()\n    #n, k, m = rinput()\n    #n, m, k = rinput()\n    #k, n, m = rinput()\n    #k, m, n = rinput() \n    #m, k, n = rinput()\n    #m, n, k = rinput()\n    #q = rlinput()\n    #q = linput()\n    s = input(); n = len(s)\n    mod = int(1e9) + 7\n    q = [0 for i in range(100100)]\n    w = [0 for i in range(100100)]\n    q[0] = 1; w[0] = 1; res = 1\n    for i in range(1, 100100):\n        res = (res * 10) % mod\n        q[i] = q[i - 1] + res\n        q[i] %= mod\n        w[i] = w[i - 1] * 10\n        w[i] %= mod\n    l, res, r = 0, 0, 0\n    for i in range(n - 1):\n        l *= 10\n        l += int(s[i])\n        l %= mod\n        res += l * q[n - 2 - i] % mod\n        res %= mod\n    for i in range(n - 1, 0, -1):\n        r += w[n - 1 - i] * int(s[i])\n        r %= mod\n        res += r * i % mod\n        res %= mod\n    print(res)\n    \n    \n        \n\n            \n        \n    \n                \n    \n    \n    \n            \n    \n        \n    \n\nfor i in range(1):\n    main()\n"]