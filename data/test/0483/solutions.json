["import sys, math\nn=int(input())\ns=input()\nz=list(map(int,input().split()))\nbest = 10**9\nfor i in range(len(s)-1):\n    if s[i]=='R' and s[i+1]=='L':\n        best=min(best, z[i+1]-(z[i]+z[i+1])//2)\nif best != 10**9:\n    print(best)\nelse:\n    print(-1)\n", "n = int(input())\ns = input()\nx = list(map(int, input().split()))\nans = float('inf')\nlast = None\nfor i in range(n):\n    if s[i] == 'R':\n        last = x[i]\n    elif last != None:\n        cur = (x[i] - last) // 2\n        ans = min(ans, cur)\nif ans == float('inf'):\n    ans = -1\nprint(ans)\n", "n = int(input())\ns = input()\nl = list(map(int, input().split()))\nans = 10 ** 18\nlast_r = -1\nfor i in range(len(l)):\n    if s[i] == 'R':\n        last_r = i\n    else:\n        if last_r != -1:\n            ans = min(ans, (l[i] - l[last_r]) // 2)\nif ans == 10 ** 18:\n    print(-1)\nelse:\n    print(ans)\n", "n = int(input())\na = input()\nanswer = float('infinity')\nA = list(map(int, input().split()))\nfor i in range(n-1):\n    if a[i]=='R' and a[i+1] == 'L':\n        answer = min(answer, (A[i+1] - A[i])//2)\nif answer != float('infinity'):\n    print(answer)\nelse:\n    print(-1)", "n = int(input())\ns = input()\na = list(map(int, input().split()))\nmaxl = -1\nmini = 100000000000000000000000\nfor i in range(n):\n    if s[i] == 'R':\n        maxl = a[i]\n    if s[i] == 'L' and maxl != -1:\n        mini = min(mini, a[i] - maxl)\nif mini == 100000000000000000000000:\n    print(-1)\nelse:\n    print(mini // 2)\n", "N = int(input())\ndirections = input()\npoints = [int(x) for x in input().split()]\nanswer = -1\nfor i in range(0, N-1):\n\tif directions[i]=='R' and directions[i+1]=='L':\n\t\tif answer==-1 or answer>(points[i+1]-points[i])//2:\n\t\t\tanswer = (points[i+1]-points[i])//2\nprint (answer)", "n = int(input())\ns = input().rstrip()\na = list(map(int, input().split()))\nl, r = [], []\nfor i in range(n):\n    if s[i] == 'R':\n        r.append(a[i])\n    else:\n        l.append(a[i])\ni = j = 0\nans = 10 ** 10\nwhile i < len(r) and j < len(l):\n    if r[i] < l[j]:\n        ans = min(ans, l[j] - r[i])\n        i += 1\n    else:\n        j += 1\nif ans == 10 ** 10:\n    print(-1)\nelse:\n    print(ans // 2)", "input()\nl=list(input())\nx=list(map(int,input().split(' ')))\n\np = [ i for i in range(len(l)-1) if l[i]=='R' and l[i+1]=='L']\n\nif not p :\n    print(-1)\nelse :\n    t = [x[i+1]-x[i] for i in p]\n    print(min(t)//2)", "n = int(input())\ndirection = input()\nxi = [int(x) for x in input().split(' ')]\n\nm = []\n\nfor i in range(n-1):\n\tif direction[i:i+2] != 'RL': continue\n\tm.append(xi[i+1] - xi[i])\n\nif not m: print(-1)\nelse: print(int(min(m)/2))", "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nimport time\n\nn   = int(input())\n\nN   = [i for i in input()]\nx   = [int(i) for i in input().split()]\n\nstart = time.time()\n\nflag = False\nans  = float('Inf')\n\nfor i in range(n):\n    if N[i] == 'R':\n        left = i\n        flag = True\n    elif flag == True:\n         buf = x[i] - x[left]\n         if buf < ans:\n             ans = buf\n         flag = False\n\nif ans < float('Inf'):\n    print(ans//2)\nelse:\n    print(-1)\n\nfinish = time.time()\n#print(finish - start)\n", "n = int(input())\ns = input()\nans = 1234567890\ni = 0\nlast_r = -1\nfor x in input().split():\n    now = int(x)\n    if s[i] == 'R':\n        \n        last_r = now\n    else:\n        if last_r != -1:\n            ans = min(ans,(now-last_r)//2)\n            \n    i+=1\nif ans == 1234567890:\n    print('-1')\nelse:\n    print(ans)\n", "n = int(input())\ns = list(input())\nx = list(map(int,input().split()))\n\nans = 10**10\n\nfor i in range(n-1):\n    if s[i] == \"R\" and s[i+1] == \"L\":\n        ans = min(ans, (x[i+1] - x[i]) // 2)\n\nif ans > 10 ** 9:\n    ans = -1\n\nprint(ans)\n", "NONE = 10 ** 10\n\nn = int(input())\ndirect = input()\npos = [int(x) for x in input().split()]\n\nbest = NONE\nfor i,x in enumerate(pos):\n    if i+1 == n:\n        break\n    if direct[i:i+2] != 'RL':\n        continue\n\n    best = min(best, pos[i+1] - x)\n\nif best == NONE:\n    best = -1\nelse:\n    best = best // 2\n\nprint(best)\n", "n=int(input())\ns=input()\nx=list(map(int,input().split()))\np=sorted([(x[i],s[i]) for i in range(n)])\nans=-1\nmi=10**10\nfor i in range(1,n):\n    if p[i-1][1]=='R' and p[i][1]=='L' and p[i][0]-p[i-1][0]<mi:\n        mi=p[i][0]-p[i-1][0]; ans=mi//2\nprint(ans)", "n = int(input())\nd = input()\nx = list(map(int, input().split()))\ninf = 10**10\ndef solve():\n    if n == 1:\n        return -1\n    ret = inf\n    for i in range(1, n):\n        if d[i - 1] == 'R' and d[i] == 'L':\n            ret = min(ret, (x[i] - x[i - 1]) // 2)\n    if ret == inf:\n        return -1\n    return ret\nprint(solve())            \n", "#!/usr/bin/env python3\n\ntry:\n    while True:\n        n = int(input())\n        s = input()\n        a = list(map(int, input().split()))\n        result = -1\n        for i in range(1, n):\n            if s[i - 1] == 'R' != s[i]:\n                t = (a[i] - a[i - 1]) >> 1\n                if result == -1 or t < result:\n                    result = t\n        print(result)\n\nexcept EOFError:\n    pass\n", "input()\nds = str.strip(input())\nxs = list(map(int, str.split(input())))\n\n\nbest = None\nlast_right = None\nfor d, x in zip(ds, xs):\n\n    if d == \"R\":\n\n        last_right = x\n\n    elif last_right is not None:\n\n        t = (x - last_right) // 2\n        best = min(best or t, t)\n\nprint(best or -1)\n", "n = int(input())\nst = input()\na = [int(i) for i in input().split()]\n\nfor i in range(n-1):\n\tif(a[i]==a[i+1]):\n\t\tprint(0)\n\t\treturn\n\nans = 10**9\nfor i in range(n-1):\n\tif st[i]=='R' and st[i+1]=='L': ans = min(ans,(a[i+1]-a[i])//2)\n\nif ans!=10**9: print(ans)\nelse: print(-1)", "n = int(input())\nvelocities = input()\ncoordinates = input()\nspeed = [0] * n\ntime = 10**9\n\ncoordinates = list(map(int, coordinates.split()))\n\nfor i in range(len(velocities) - 1):\n    if velocities[i] == 'R' and velocities[i + 1] == 'L':\n        time = min(time, (coordinates[i + 1] - coordinates[i]) // 2)\n\nif time == 10**9:\n    time = -1\nprint(time)", "n=int(input())\ns=str(input())\nip=list(map(int,input().split()))\nq=[1 for i in range(n)]\nop=[]\nfor i in range(n):\n    if s[i]=='L':\n        q[i]=-q[i]\nfor i in range(n-1):\n    if q[i+1]-q[i]<0:\n        op.append((ip[i+1]-ip[i])/abs(q[i+1]-q[i]))\nif len(op)==0:\n    print(-1)\nelse:\n    print(int(min(op)))\n", "def main():\n    input()\n    l, r = [], []\n    for c, x in zip(input(), list(map(int, input().split()))):\n        if c == 'L':\n            l.append(x)\n        else:\n            r.append(x)\n    ilo, ihi = iter(r), iter(l)\n    res = 10 ** 10\n    try:\n        lo, hi = next(ilo), next(ihi)\n        while True:\n            if lo < hi:\n                if res > hi - lo:\n                    res = hi - lo\n                lo = next(ilo)\n            else:\n                hi = next(ihi)\n    except StopIteration:\n        print(res // 2 if res < 10 ** 10 else -1)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "def main():\n    n = input()\n    s = input()\n    d = input()\n    number = []\n    res = False\n    maxi = float('inf')\n    for i in d.split(\" \"):\n        number.append(int(i))\n    for i in range(len(s) - 1):\n        if ( s[i] == \"R\" and s[i + 1] == \"L\" ):\n            cal = number[i+1] - number[i]\n            if (cal < maxi):\n                maxi = cal\n            res = True\n    \n    if (res == True):\n        maxi = int(maxi/2)\n        print(maxi)\n    else:\n        print(\"-1\")\n\nmain()\n", "3\n\ninf = 1e9\n\ndef main():\n    n = int(input())\n    dir = input()\n    coords = list(map(int, input().split()))\n\n    res = inf\n    maxr = -1\n    for i in range(n):\n        if dir[i] == \"R\":\n            maxr = coords[i]\n        else:\n            if maxr != -1:\n                res = min((coords[i] - maxr) / 2, res)\n\n    if res == inf:\n        print(-1)\n    else:\n        print(int(res))\n\nmain()\n", "n = int(input())\ns = input()\npos = [int(i) for i in input().split()]\nmin = 10**18\nnosol = True\nfor i in range(1,n):\n\tif s[i-1] == 'R' and s[i] == 'L':\n\t\tdist = pos[i] - pos[i-1]\n\t\tif dist < min:\n\t\t\tmin = dist\n\t\t\tnosol = False\nif nosol:\n\tprint(-1)\nelse:\n\tprint(min>>1)"]