["n = int(input())\nans = 0\nfor i in range(n):\n\ts, d = list(map(int, input().split()))\n\tvisit = s\n\twhile visit <= ans:\n\t\tvisit += d\n\tans = visit\nprint(ans)\n\n", "n = int(input())\ndata = []\nfor i in range(n):\n    data.append(tuple(map(int, input().split())))\n\ncur = 0\nfor i in data:\n    if i[0] > cur:\n        cur = i[0]\n        continue\n    c = cur + 1 - i[0]\n    c1 = (c // i[1] + (c % i[1] > 0))\n    cur = i[0] + i[1] * c1\nprint(cur)\n", "import math\nn = int(input())\ncurrent_day = 0\nfor i in range(0,n):\n    current_day = current_day + 1\n    (s,d) = [int(x) for x in input().split(' ')]\n    p = max(0, math.ceil((current_day - s) / d))\n    current_day = s + p * d\n\nprint(current_day);", "n = int(input())\ns, d = list(map(int, input().split()))\nlast = s\nfor i in range(n - 1):\n    s, d = list(map(int, input().split()))\n    c = max(0, last - s)\n    c = (c + d) // d\n    new = c * d + s\n    if new - d >= last:\n        new -= d\n    if new <= last:\n        new += d\n    last = new\nprint(last)\n", "#!/bin/python\nimport collections\nimport random\nimport sys\n\n\nn = int(input())\nday = 0\nfor i in range(n):\n    s, d = list(map(int, input().split()))\n    day = max(day + 1, s)\n    if (day - s) % d != 0:\n        day += d - (day - s) % d\nprint(day)\n", "def ii():\n    return int(input())\ndef mi():\n    return map(int, input().split())\ndef li():\n    return list(mi())\n\nn = ii()\na = [mi() for i in range(n)]\np = 0\nfor i in range(n):\n    s, d = a[i]\n    if s>p:\n        p = s\n    else:\n        q = p - s\n        p = s + d*(q//d + 1)\nprint(p)", "import math\nimport re\nimport os\nimport string\nimport sys\n\n\ndef ria():\n    return [int(i) for i in input().split()]\n\n\ndef ri():\n    return int(input())\n\n\ndef rfa():\n    return [float(i) for i in input().split()]\n\n\neps = 1e-9\n\n\ndef is_equal(a, b):\n    return abs(a - b) <= eps\n\n\ndef distance(p0, p1):\n    return math.sqrt((p0[0] - p1[0]) ** 2 + (p0[1] - p1[1]) ** 2)\n\n\ndef distance_sqr(p0, p1):\n    return (p0[0] - p1[0]) ** 2 + (p0[1] - p1[1]) ** 2\n\n\nn = ri()\ncurD = 1\nfor i in range(n):\n    s, d = ria()\n    while s > curD or (curD - s) % d != 0:\n        curD += 1\n    curD+=1\nprint(curD-1)\n", "from math import ceil\n\nd = int(input())\n\na = list()\nfor k in range(d):\n    s, l = input().split()\n    a.append((int(s), int(l)))\n\nt = a[0][0]\nfor i in a[1:]:\n    s, l = i\n\n    if s > t:\n        t = s\n    else:\n        n = ceil((t - s + 1) / l)\n        t = s + l * n\n\nprint(t)\n", "from math import * \nans=0\nfor _ in range(int(input())):\n  si,di=list(map(int,input().split()))\n  if si>=ans:\n    ans=si+1\n    continue\n  n=ans-si\n  ans=si+ceil(n/di)*di+1\nprint(ans-1)\n", "n = int(input())\nans = 0\nc = 1\nimport math\nfor i in range(n):\n    s,d = map(int, input().split())\n    p = int(math.ceil(max(0, c - s) / d))\n    c = s + p*d + 1\nprint(c-1)", "def main():\n    n = int(input())\n    t = -1\n    for i in range(n):\n        si, di = list(map(int, input().split()))\n        if t < si:\n            t = si\n        else:\n            t = ((t - si) // di + 1) * di + si\n\n    print(t)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "n = int(input())\nactual = 1\nfor _ in range(n):\n    s, d = list(map(int, input().split()))\n    if actual <= s:\n        actual = s\n    elif (actual - s) % d != 0:\n        actual += (d - (actual - s) % d)\n    actual += 1\nprint(actual-1)\n", "n = int(input())\nans = 0\nfor i in range(n):\n    s, d = list(map(int, input().split()))\n    if ans == 0:\n        ans = s\n    elif s > ans:\n        ans = s\n    else:\n        ans = d * ((ans - s) // d + 1) + s\nprint(ans)\n    \n", "n = int(input())\nc = 0\nfor i in range(n):\n    s, d = map(int, input().split())\n    if c < s:\n        c = s\n    else:\n        c = s + ((c - s) // d + 1) * d\nprint(c)", "#python3\n#utf-8\n\ndoctors_nr = int(input())\ndoctor_idx___start_day_idx = []\ndoctor_idx___delta = []\nfor _ in range(doctors_nr):\n    start_day_idx, delta = (int(x) for x in input().split())\n    doctor_idx___start_day_idx.append(start_day_idx)\n    doctor_idx___delta.append(delta)\n\ndoctors_visited_nr = 0\nfor day_idx in range(1, 3000000):\n    curr_start_day_idx = doctor_idx___start_day_idx[doctors_visited_nr]\n    curr_delta = doctor_idx___delta[doctors_visited_nr]\n    if (day_idx >= curr_start_day_idx) and (day_idx % curr_delta == curr_start_day_idx % curr_delta):\n        doctors_visited_nr += 1\n        if doctors_visited_nr == doctors_nr:\n            print(day_idx)\n            quit()\n", "import math\n\nn = int(input())\nschedules = []\nfor _ in range(n):\n\tschedules.append(tuple(map(int, input().split())))\n\nday = 0\nfor start, period in schedules:\n\tlower_bound = (day - start) / period\n\tif lower_bound.is_integer():\n\t\tlower_bound = int(lower_bound + 1)\n\telse:\n\t\tlower_bound = math.ceil(lower_bound)\n\tlower_bound = max(0, lower_bound)\n\t\n\tday = start + period * lower_bound\n\nprint(day)", "def solve():\n    N = int(input())\n    a, b = map(int, input().split())\n    day = a\n    for a, b in ((map(int, input().split())) for _ in [0]*(N-1)):\n        if day < a:\n            day = a\n        else:\n            diff = b-((day-a)%b)\n            day = day+diff if diff > 0 else day+b\n\n    print(day)\n\n\ndef __starting_point():\n    solve()\n__starting_point()", "import math\nn=int(input())\nt=0\nfor i in range(n):\n    t+=1\n    s,d=list(map(int,input().split()))\n    k=max(math.ceil((t-s)/d),0)\n    t=s+d*k\nprint(t)\n", "def visit(doctors, i, ret):\n  s, d = doctors[i]\n  t = ret - s\n  if t < 0:\n    return s\n  return ((t+(d-1))//d)*d+s\n\n\n\n\nn = int(input())\ndoctors = []\nfor i in range(n):\n  s, d = list(map(int, input().split(' ')))\n  doctors.append((s,d))\n\n\nret = 0\nfor i in range(n):\n  ret = visit(doctors, i, ret+1)\n\nprint(ret)", "n = int(input())\nday = 1\n\nfor i in range(n):\n  start, extra = list(map(int, input().split()))\n  day = max(day, start)\n\n  while (day - start) % extra != 0:\n    day += 1\n  if i + 1 < n:\n    day += 1\n\nprint(day)\n", "n=int(input());a=[];\nfor i in range(n):\n    a.append(list(map(int,input().split())))\ncurr=0\nfor i in range(n):\n    if(curr<a[i][0]):\n        curr=a[i][0]\n    else:\n        curr=a[i][0] + (((curr-a[i][0])//a[i][1])+1)*a[i][1]\nprint(curr)\n\n\n\n", "def main():\n\tn = int(input())\n\tday = 0\n\tfor i in range(n):\n\t\ts, d = list(map(int,input().split()))\n\t\tif s > day:\n\t\t\tday = s\n\t\telse:\n\t\t\tday  = ((day -s)//d +1)*d +s\n\tprint(day)\n\nmain()\n", "n = int(input())\nday =0\n\nfor i in range(n):\n  s,d = input().strip().split()\n  s = int(s)\n  d = int(d)\n  if i==0:\n    day = s\n  else:\n    if s > day:\n      day =s\n    else:\n      day = s + (1+(day -s)//d) * d\nprint(day)", "import math\n\nn = int(input())\nsd = [tuple(map(int,input().split())) for _ in range(n)]\ncd = 1\n\nfor i in range(n):\n    s = sd[i][0]\n    d = sd[i][1]\n    if s>=cd:\n        cd = s\n    else:\n        cd=s+math.ceil((cd-s)/d)*d\n    cd+=1\n\ncd-=1\nprint(cd)", "n = int(input())\ncnt = 0\nfor i in range(n):\n    a, b = map(int, input().split())\n    if a > cnt:\n        cnt = a\n    else:\n        cnt = cnt - (cnt - a) % b + b\n    #print(cnt)\nprint(cnt)"]