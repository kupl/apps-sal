["a, b = list(map(int, input().split()))\nres = 0\n\nwhile b != 0:\n    res += a // b\n    a %= b\n    a, b = b, a\nprint(res)\n", "a,b = list(map(int,input().split()))\nn = 0\nwhile not (a == 0 or b == 0):\n    if a > b:\n        n += a // b\n        a = a % b\n    else:\n        n += b // a\n        b = b % a\nprint(n)\n", "def f(a, b):\n    if a < b:\n        return f(b, a)\n    elif b == 1:\n        return a\n    else:\n        return f(b, a%b) + a//b\n\n(a, b) = list(map(int, input().split()))\n\nprint(f(a, b))\n", "a,b=list(map(int,input().split()))\n\n\n\ndef Solve(a,b):\n    if(a==(a//b)*b):\n        return a//b\n    if(a>b):\n        ans=0\n        ans+=a//b\n        a%=b\n        if(a==1):\n            ans+=b\n            return ans\n        else:\n            ans+=Solve(b,a)\n            return ans\n    else:\n        return Solve(b,a)\n\nprint(Solve(a,b))\n", "a, b = [int(x) for x in input().split()]\nans = 0\nwhile (a != 1 and b != 1):\n  if (a > b):\n    ans += a // b\n    a %= b\n  a, b = b, a\nans += a+b-1\nprint(ans)\n", "a=0\na,b=list(map(int,input().split()))\n\n\n\ndef Solve(a,b):\n    if(a==(a//b)*b):\n        return a//b\n    if(a>b):\n        ans=0\n        ans+=a//b\n        a%=b\n        if(a==1):\n            ans+=b\n            return ans\n        else:\n            ans+=Solve(b,a)\n            return ans\n    else:\n        return Solve(b,a)\n\nprint(Solve(a,b))\n", "a, b = map(int, input().split())\ns = 0\nwhile b:\n    s += a // b\n    a, b = b, a % b\nprint(s)", "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\na, b = list(map(int, input().split()))\ncount = 0\nwhile a > 0 and b > 0:\n    if a > b:\n        count += (a // b)\n        a = a % b\n    elif a < b:\n        count += (b // a)\n        b = (b % a)\n    else:\n        count += a\n        a = b = 0\nprint(count)\n", "a, b=list(map(int, input().split(' ')))\n\ndef perform(a, b):\n    steps=0\n    while a!=0 and b!=0:\n        if a>=b:\n            steps+=a//b\n        else:\n            a, b=b, a\n            steps+=a//b\n        a, b=b, a%b\n    return steps\n\nprint(perform(a, b))\n", "a=[0]+[int(i)for i in input().split()]\nwhile a[1]*a[2]!=0:\n a=[a[0]+a[1]//a[2],a[2],a[1]%a[2]]\nprint(a[0])", "import fractions\n\ndef resistance():\n    #  print(\"Input the two values\")\n    _a, _b = input().split()\n    a = int(_a)\n    b = int(_b)\n    answer = 1\n    f = fractions.Fraction(a,b)\n    one = fractions.Fraction(1,1)\n\n    while (f != one):\n        n = f.numerator\n        d = f.denominator\n\n        #  If either the num or denom are one, go straight up the line and finish\n        if (n == 1) and (d == 1):\n            print(answer)\n            return\n        if (n == 1 ):\n            print(answer + d - 1)\n            return\n        if (d == 1):\n            print(answer + n - 1)\n            return\n\n        if (f > 1):\n            q = n//d\n            n = n - q*d\n            f = fractions.Fraction(n,d)\n            answer = answer + q\n        else:\n            nbound = (1-f)/f\n            n = nbound.numerator\n            d = nbound.denominator\n            then = n//d + 1\n            answer = answer + then\n            f = f / (1-then*f)\n            \n    print(answer)\n\nresistance()\n", "a, b = map(int, input().split())\nval = 0\nwhile b > 0:\n    a, b, val = b, a % b, val + a // b\nprint(val)", "a, b = (int(x) for x in input().split())\nans = 0\nwhile b:\n\tans += a // b\n\ta %= b\n\ta, b = b, a\nprint(ans)\n", "def main():\n    a, b = list(map(int, input().split()))\n    res = 0\n    while b:\n        res += a // b\n        a, b = b, a % b\n    print(res)\n\n\ndef __starting_point():\n    main()\n\n\n__starting_point()", "a,b=map(int,input().split())\no=0\nwhile(a and b):\n\to=o+max(a,b)//min(a,b)\n\tif(a>b):a=a%b\n\telse:b=b%a\nprint(o)", "def f(a, b):\n    if a < b:\n        return f(b, a)\n    elif b == 1:\n        return a\n    else:\n        return f(b, a%b) + a//b\n\n(a, b) = map(int, input().split())\n\nprint(f(a, b))", "#!/usr/bin/env python3\ndef solve(a,b):\n    assert 1 <= a and 1 <= b\n    if a == 1 and b == 1:\n        return 1\n    else:\n        a, b = max(a, b), min(a, b)\n        p, q = a // b, a % b\n        if q == 0:\n            p, q = p-1, 1\n        return p + solve(q, b)\na, b = list(map(int,input().split()))\nprint(solve(a,b))\n", "from functools import reduce\nfrom operator import *\nfrom math import *\nfrom sys import *\nfrom string import *\nsetrecursionlimit(10**7)\nRI=lambda: list(map(int,input().split()))\nRS=lambda: input().rstrip().split()\n#################################################\nn,m=RI()\nans=0\nwhile m:\n    ans+=n//m\n    n,m= m,n%m\nprint(ans)\n\n", "a,b = map(int,input().split())\n\ndef res(a,b):\n    if a == 1 :\n        return b;\n    if b == 1 :\n        return a;\n    q = b//a\n    b = b%a\n    q += a//b\n    return q+res(a%b,b)\n\nprint(res(a,b))", "a, b = map(int, input().split())\nm=max(a,b)\nmm=min(a,b)\nans=0\nwhile(mm!=1):\n    ans=ans+m//mm\n    i=m%mm\n    if(i>mm):\n        m=i\n    else:\n        m=mm\n        mm=i\nans=ans+m\nprint(round(ans))", "n,m=map(int,input().split())\na=0\nwhile m:a+=n//m;n,m=m,n%m\nprint(a)", "s=input()\n[a,b]=(s.split())\na=int(a)\nb=int(b)\nif b>a: a,b=b,a\nans=0\nwhile b!=0:\n    c=a%b\n    ans+=(a//b)\n    a=b\n    b=c\nprint(ans,end=\"\\n\")", "s=input()\n[a,b]=(s.split())\na=int(a)\nb=int(b)\nif b>a: a,b=b,a\nans=0\nwhile b!=0:\n    c=a%b\n    ans+=(a//b)\n    a=b\n    b=c\nprint(ans,end=\"\\n\")\n\n\t \t  \t  \t\t\t \t\t\t\t\t    \t\t\t      \t", "s=input()\n[a,b]=(s.split())\na=int(a)\nb=int(b)\nif b>a: a,b=b,a\nans=0\nwhile b!=0:\n    c=a%b\n    ans+=(a//b)\n    a=b\n    b=c\nprint(ans,end=\"\\n\")\n\n \t\t \t \t\t  \t    \t\t  \t\t\t \t \t\t\t"]