["n = int(input())\nt = [tuple(map(int, input().split())) for i in range(n)]\n\nm = max(t)\nd = 2 * m[0] + len(bin(m[1])) - 1\n\nt = sorted([i for i in t if 2 * i[0] + len(bin(i[1])) > d])\np, k = t[0][0], t[0][1] - 1\n\nfor i in range(1, len(t)):\n    p, k = t[i][0], max(t[i][1] - 1, k >> 2 * (t[i][0] - p))\n\nprint(p + (len(bin(k)) + 1) // 2 - 1)", "from sys import stdin\ninput = stdin.readline\n\nn = int(input())\nres = 0\nfor i in range(n):\n\tk, a = (int(x) for x in input().split())\n\tif k == 0:\n\t\tres = max(res, 1)\n\ti = 1\n\tx = 4\n\twhile a > x:\n\t\ti += 1\n\t\tx *= 4\n\tres = max(res, k + i)\nprint(res)\n", "# Solution to CodeForces 269A Magic Boxes\nfrom math import ceil, log\n\nmax_size = -1  # Largest square, answer\n\nfor _ in range(int(input().strip())):  # Number of cases\n    size, count = map(int, input().strip().split())\n    container = ceil(log(count, 4))\n    max_size = max(max_size, size + max(container, 1))\n\nprint(max_size)", "def main():\n    n = int(input())\n    m = b = 0\n    for k, a in sorted(tuple(map(int, input().split())) for _ in range(n)):\n        if k - m > 15:\n            b = 1 if b else 0\n        else:\n            r = 4 ** (k - m)\n            b = (b + r - 1) // r\n        if b < a:\n            b = a\n        m = k\n    if b == 1:\n        k += 1\n    else:\n        r = 1\n        while r < b:\n            r *= 4\n            k += 1\n    print(k)\n\n\ndef __starting_point():\n    main()\n\n__starting_point()", "import math as m\n\nr=0\n\nfor _ in range(int(input())):\n\n    k,a=[int(x) for x in input().split()]\n\n    e=0;v=1\n\n    while v<a: v*=4;e+=1\n\n    if e+k>r: r=e+k\n\n    if k+1>r: r=k+1\n\nprint(r)", "import copy\nimport itertools\nimport string\nimport sys\n\n###\n\ndef powmod(x, p, m):\n\tif p <= 0:\n\t\treturn 1\n\tif p <= 1:\n\t\treturn x%m\n\treturn powmod(x*x%m, p//2, m) * (x%m)**(p%2) % m\n\n###\n\ndef to_basex(num, x):\n\twhile num > 0:\n\t\tyield num % x\n\t\tnum //= x\n\ndef from_basex(it, x):\n\tret = 0\n\tp = 1\n\tfor d in it:\n\t\tret += d*p\n\t\tp *= x\n\treturn ret\n\n###\n\ndef l4(x):\n\tret = 1\n\twhile x > 4:\n\t\tret += 1\n\t\tx += 3\n\t\tx //= 4\n\treturn ret\n\n\ndef core():\n\tn = int(input())\n\t# print(n)\n\tans = 0\n\tfor _ in range(n):\n\t\tk, a = (int(x) for x in input().split())\n\t\t# print(k, a)\n\t\t\n\t\tans = max(ans, l4(a) + k)\n\tprint(ans)\n\n\ncore()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "import math\nt=int(input())\nans=-1\nmaxi=-1\nfor i in range(t):\n    k,a=list(map(int,input().split()))\n    h=k+math.ceil(math.log(a,4))\n    ans=max(ans,h)\n    maxi=max(maxi,k)\nprint(max(ans,maxi+1))\n", "n = int(input())\nma=0\nfor i in range(n):\n    h,m=list(map(int,input().split()))\n    k=1\n    r=4\n    while m>r:\n        k+=1\n        r*=4\n    ma=max(ma,h+k)\n    #print(ma)\nprint(ma)\n", "from math import *\nn = int(input())\nmx = 0\nfor i in range(n):\n    k, a = list(map(int, input().split()))\n    mx = max(mx, 2*k + log2(a))\n    mx = max(mx, 2*(k+1))\nprint(int(ceil(mx/2)))\n"]