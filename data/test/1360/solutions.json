["import collections\n\nExam = collections.namedtuple(\"Exam\", ['a', 'b'])\n\nn = int(input())\nexams = [ ]\nfor i in range(n):\n    exams.append(Exam(*list(map(int, input().split()))))\nexams.sort()\ntoday = 0\nfor e in exams:\n    today = e.b if e.b >= today else e.a\nprint(today)\n", "tests = []\na = int(input())\nfor i in range(a):\n    x, y = map(int, input().split(' '))\n    tests.append([x, y])\ns = sorted(tests, key = lambda x: (x[0], x[1]))\nmin1 = s[0][1]\nfor i in range(1, len(s)):\n    if s[i][1] < min1:\n        min1 = s[i][0]\n    else:\n        min1 = s[i][1]\nprint(min1)", "\n\nnum = int(input())\nl = list()\nfor i in range(num):\n    f = list(map(int, input().split()))\n    a = f[0]\n    b = f[1]\n    tup = (a, b)\n    l.append(tup)\n    \nl.sort()\nc = 0\nfor el in l:\n    a = el[0]\n    b = el[1]\n    if b >= c:\n        c = b\n    else:\n        c = a \n\nprint(c)", "n=int(input())\nv=list()\n#b=list()\nfor i in range(n):\n    v.append(list(int(x) for x in input().split()))\n\nv.sort()\nprint\nlastb=0\nfor i in range(n):\n    if (v[i][1]<v[i][0]) and (v[i][1]>=lastb):\n        lastb=v[i][1]\n    else:\n        lastb=v[i][0]\n    #print (lastb)\n\nprint (lastb)", "n=int(input())\nexams = []\nfor i in range(n):\n    a = input().split(' ')\n    exams.append([int(a[0]), int(a[1])])\nexams.sort()\ndays = 0\nfor item in exams:\n    if item[1] < days:\n        days = item[0]\n    else:\n        days=item[1]\nprint(days)\n", "import sys\nimport random\n\nn = int(sys.stdin.readline())\ndays = []\nfor i in range(n):\n\tin_days = sys.stdin.readline().split(\" \")\n\tdays.append((int(in_days[0]), int(in_days[1])))\n\ndef sorter(days_list):\n\tif len(days_list) < 2:\n\t\treturn days_list\n\tpivot = days_list[random.randrange(len(days_list))]\n\tleft = []\n\tright = []\n\tfor index, elem in enumerate(days_list):\n\t\tif elem == pivot:\n\t\t\tcontinue\n\t\tif elem > pivot:\n\t\t\tright.append(elem)\n\t\telse:\n\t\t\tleft.append(elem)\n\treturn sorter(left) + [pivot]+sorter(right)\n\ndays = sorter(days)\nfor index, day in enumerate(days):\n\tif index == 0:\n\t\tif day[1] < day[0]:\n\t\t\tdays[0] = (day[1], day[0])\n\t\tcontinue\n\tif day[1] >= days[index-1][0]:\n\t\tdays[index] = (day[1], day[0])\n\nprint(days[-1][0])\n", "n = int(input(\"\"))\ncek = []\nfor i in range(n):\n    x = input(\"\")\n    temp = []\n    temp.extend(list(x.split(\" \")))\n    temp[0] = int(temp[0])\n    temp[1] = int(temp[1])\n    cek.append(temp)\ncek.sort()\nnow = cek[0][1]\nfor i in range(1,n):\n    if(cek[i][1] >= now):\n        now = cek[i][1]\n    else:\n        now = cek[i][0]\nprint(now)\n", "n = int(input())\nlst = []\nfor i in range(n):\n    ai, bi = list(map(int, input().split()))\n    lst.append([ai, bi])\nlst.sort()\npath = []\nlast = 0\nfor i in lst:\n    if min(i) >= last:\n        path.append(min(i))\n        last = min(i)\n    else:\n        path.append(max(i))\n        last = max(i)\nprint(path[-1])", "n = int(input())\narr = [0] * n\nfor i in range(n):\n    arr[i] = tuple(map(int, input().split()))\narr.sort()\nend = arr[0][1]\nfor i in range(1, n):\n    if end <= arr[i][1]:\n        end = arr[i][1]\n    else:\n        end = arr[i][0]\nprint(end)\n    \n", "n = int(input())\nd = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    d.append([a, b])\nd.sort()\nm = [c[0] for c in d]\nm[0] = d[0][1]\nfor i in range(1, n):\n    if m[i-1] <= d[i][1]:\n        m[i] = d[i][1]\nprint(m[n-1])\n\n    \n\n    \n", "n=int(input())\nv=list()\nfor i in range(n):\n    v.append(list(int(x) for x in input().split()))\n\nv.sort()\nprint\nlastb=0\nfor i in range(n):\n    if (v[i][1]<v[i][0]) and (v[i][1]>=lastb):\n        lastb=v[i][1]\n    else:\n        lastb=v[i][0]\nprint (lastb)", "n = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\na.sort()\nans = a[0][1]\nfor i in range(n):\n    if ans > a[i][1]:\n        ans = a[i][0]\n    else:\n        ans = a[i][1]\nprint(ans)\n", "n = int(input())\n\ndays = [list(map(int, input().split())) for i in range(n)]\ndays.sort()\n\nL = [0]\nfor i in range(n):\n    if days[i][1] >= L[i]:\n        L.append(days[i][1])\n    else:\n        L.append(days[i][0])\n\nprint(L[-1])\n", "info_data = int(input())\ndata = []\nfor i in range(info_data):\n    data.append(list(map(int, input().split())))\ndata.sort()\n\nresult = data[0][1]\n\nfor i in range(info_data):\n    if result > data[i][1]:\n        result = data[i][0]\n    else:\n        result = data[i][1]\n        \nprint(result)", "#!/usr/bin/env python3\n\nn = int(input())\nexams = []\nfor _ in range(n):\n\tday = list(map(int, input().split()))\n\texams.append(day)\n\nexams.sort()\nbest = -1\n\nfor x in range(len(exams)):\n\tif best <= exams[x][1]:\n\t\tbest = exams[x][1]\n\telse:\n\t\tbest = exams[x][0]\n\nprint(best)", "nrofexams = int(input(''))\n\nexams = []\nfor i in range(nrofexams):\n    line = input('').split()\n    tup = (int(line[0]), int(line[1]))\n    exams.append(tup)\n\nexams = sorted(exams)\ndate = 0\nfor i in range(len(exams)):\n    if (date<=exams[0][1]):\n        date = exams[0][1]\n    else:\n        date = exams[0][0]\n    exams.pop(0)\nprint(date)\n", "n = int(input())\ns = []\nfor i in range(n):\n    s.append(list(map(int, input().split())))\ns.sort()\nm = 0\nfor a, b in s:\n    if b >= m:\n        m = b\n    else:\n        m = a\nprint(m)\n", "#!/usr/bin/env python3\n\ndef rl(T=str):\n    return list(map(T,input().split()))\n\ndef main():\n    n, = rl(int)\n    rec = []\n    for _ in range(n):\n        rec.append( rl(int) )\n\n    rec.sort()\n\n    d = 0\n    for a,b in rec:\n        if d <= b:\n            d = b\n        else:\n            d = a\n\n    print(d)\n\nmain()\n", "import math\nimport random\nimport itertools\nimport collections\nimport sys\nimport time\nimport fractions\nimport os\nimport functools\nimport bisect\n\n\ndef timer(f):\n    def tmp(*args, **kwargs):\n        t = time.time()\n        res = f(*args, **kwargs)\n        print(\"\u0412\u0440\u0435\u043c\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0438: %f\" % (time.time()-t))\n        return res\n    return tmp\n\ndef contains(l, elem):\n    index = bisect.bisect_left(l, elem)\n    if index < len(l):\n        return l[index] == elem\n    return False\n\n\nn = int(input())\n\narray = []\nfor i in range(n):\n    array.append(list(map(int, input().split(' '))))\n\narray = sorted(array, key = lambda x:x[0]*100+x[1])\ncurrentDate = 0\n\n#print(array)\n\nfor i in range(len(array)):\n    if array[i][0]>=currentDate and array[i][1]>=currentDate:\n        currentDate = min(array[i][0], array[i][1])\n    else:\n        if array[i][0]>currentDate:\n            currentDate = array[i][0]\n        else:\n            if array[i][1]>currentDate:\n                currentDate = array[i][1]\n    #print(currentDate)\n\n\nprint(currentDate)\n\n\"\"\"\n5\n6 4\n3 2\n3 1\n9 7\n5 3\n\"\"\"", "n = int(input())\ndata = []\nfor i in range(n):\n    data.append(list(map(int, input().split())))\n\nlast = 0\nfor e in sorted(data, key=lambda x: (x[0],x[1])):\n    if e[1] >= last:\n        last = e[1]\n    else:\n        last = e[0]\nprint(last)", "f = []\nfor i in range(int(input())):\n    f.append(tuple(int(x) for x in input().split()))\ncur = 0\nfor t in sorted(f):\n    cur = t[1] if cur <= t[1] else t[0]\nprint(cur)", "n = int(input())\np = []\nfor i in range(n):\n\tx, y = map(int, input().split())\n\tp.append([x, y])\np = sorted(p)\nday = p[0][1]\nfor i in range(1, n):\n\tif p[i][1] >= day:\n\t\tday = p[i][1]\n\telse:\n\t\tday = p[i][0]\nprint(day)", "import sys\nimport math\n  \nn = int(sys.stdin.readline())\n\nk = dict()\nfor i in range(n):\n    a, b = [int(x) for x in (sys.stdin.readline()).split()]\n    if a in k:\n        if(k[a][0] > b):\n            k[a][0] = b\n        if(k[a][1] < b):\n            k[a][1] = b\n    else:\n        k[a] = [b] * 2\n\n#print(k)    \nt = list(k.keys())\nt.sort()\n\nres = min(t[0], k[t[0]][1])\n\nfor i in t[1:]:\n    #print(k[i], res)\n    if(k[i][0] >= res):\n        res = min(k[i][1], i)\n    else:\n        res = i\n\nprint(res)\n\n    \n\n    \n\n", "n = int(input())\nl = []\nfor i in range(n):\n\tl.append([int(x) for x in input().split()])\nl.sort()\ncurDay = 0\nfor a, b in l:\n\tif b >= curDay:\n\t\tcurDay = b\n\telse:\n\t\tcurDay = a\nprint(curDay)\n"]