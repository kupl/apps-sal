["n, k = list(map(int, input().split()))\np = (n // 2) // (k + 1)\ng = p * k\no = n - p - g\nprint(p, g, o)\n", "n, k = list(map(int, input().split()))\ns = n // 2\na = s // (k + 1)\nb = a * k\nc = n - a - b\nprint(a, b, c)\n", "n,k=map(int,input().split())\nh=n//2\nd=h//(k+1)\nc=d*k\nr=n-(d+c)\nprint(d,c,r)", "from math import floor\n\nn, k = list(map(int, input().split()))\nr = floor(n / (2 * (k + 1)))\nprint(r, k * r, n - r * (k + 1))\n", "n,k=list(map(int,input().split()))\na=n//(2*(k+1))\nb=k*a\nc=n-a-b\nprint(a,b,c)", "string = input()\nnumbers = string.split(\" \")\na = int(numbers[0])\nb = int(numbers[1])\nx = a // 2 // (b + 1)\ny = b * x\nz = a - x - y\nprint(\"%d %d %d\" % (x, y, z))", "n, k = list(map(int, input().split()))\nx = (n//(k+1))//2\nprint(x, k*x, n-(k+1)*x)\n", "\nimport sys\n#sys.stdin=open(\"data.txt\")\ninput=sys.stdin.readline\n\nn,k=list(map(int,input().split()))\n\nfactor=(n//2)//(k+1)\n\nprint(\"%d %d %d\"%(factor,factor*k,n-factor*(k+1)))\n", "n, k = map(int, input().split())\n\na = n // (2 * (k + 1))\n\nprint(a, a * k, n - a * (k + 1))", "def int_map():\n\treturn list(map(int, input().split(' ')))\n\nn, k = int_map()\n\nq = n // 2\n\na = q // (k+1)\n\nprint(a, k*a, n-(k+1)*a)\n\n\n", "n,k=list(map(int,input().split()))\nd = int(n//(2*k+2))\nc = k*d\ns = n - c - d\nprint(d,c,s)\n", "def __starting_point():\n\tn,k = list(map(int,input().split()))\n\tc = n//((k+1)*2)\n\tif c==0:\n\t\tprint(0,0,n)\n\telse:\n\t\tprint(c,k*c,n-(k+1)*c)\n\n__starting_point()", "inp=input().split()\nn=int(inp[0])\nk=int(inp[1])\nprint(int(n/(2*(k+1))),k*int(n/(2*(k+1))),n-(k+1)*int(n/(2*(k+1))))", "n, k = map(int, input().split())\n\nl = -1;\nr = n\n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if (m + m * k > n // 2):\n        r = m;\n    else:\n        l = m\n\nprint(l, l * k, n - l - l * k)", "numList=input().split(\" \")\nn=int(numList[0])\nk=int(numList[1])\nd=(n//2)//(k+1)\nc=k*d\nother=n-c-d\nprint(d,c,other)", "read = lambda: map(int, input().split())\nn, k = read()\np = n // 2 // (k + 1)\nprint(p, p * k, n - p * (k + 1))", "n,k=input().split()\nn=int(n)\nk=int(k)\ndip=n//(2*(k+1))\ncert=dip*k\ntotal=dip+cert\nprint(str(dip)+\" \"+str(cert)+\" \"+str(n-total))", "import math\nn,k = list(map(int,input().split()))\ntotal = n\nnone = math.ceil(n/2)\nn-=none\nindex = n//(k+1)\na = index\nb = index*k\nnone+=(n-(a+b))\nprint(a,b,none)\n", "n, k = map(int, input().split())\n# d * (k + 1) * 2 <= n\nd = n // (2 * (k + 1))\ng = k * d\nr = n - d - g\nprint(str(d) + \" \" + str(g) + \" \" + str(r))", "n, k = [int(i) for i in input().split()]\nl = 0\nr = 10 ** 13\n\nwhile l < r:\n    \n    cur = (l + r + 1) // 2\n    priz = cur * k\n    if cur + priz <= n // 2:\n        l = cur\n    else:\n        r = cur - 1\n\nprint(l, l * k, n - l - l * k)\n", "l = input()\nn,k = l.split(\" \")\nn = int(n)\nk = int(k)\nwinmax = n/2\nnd = winmax/(k+1);\nnd = int(nd)\nprint( str(nd)+\" \"+str(k*nd)+\" \"+str(n-(k+1)*nd) )", "import math\n\nstudents, ratio = input().split()\nstudents, ratio = int(students), int(ratio)\n\ndip = math.floor((students/2)/(ratio+1))\nwin = dip * ratio\nprint(dip, win, students - dip - win)", "n,k = list(map(int, input().split()))\n\nmw = n//2\n\nd = mw//(k+1)\n\nprint(d, k*d, n-d*(1+k))\n\n", "n, k = list(map(int, input().split()))\nm = n // 2\nx = m // (k + 1)\nprint(x, k * x, n - x - k * x)\n"]