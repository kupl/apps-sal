["s = input()\nh = int(s[:2])\nm = int(s[3:])\n\ndef ispalin(h, m):\n    s = \"%02d:%02d\"%(h,m)\n    return s == s[::-1]\n\nfor d in range(999999):\n    if ispalin(h, m):\n        print(d)\n        break\n    m+= 1\n    if m == 60:\n        h = (h+1)%24\n        m = 0\n", "def f(x, y):\n    xx = str(x)\n    if len(xx) == 1: xx = '0' + xx\n    yy = str(y)\n    if len(yy) == 1: yy = '0' + yy\n    return yy[::-1] != xx\n\nread = lambda: map(int, input().split(':'))\na, b = read()\ncnt = 0\nwhile f(a, b):\n    b += 1\n    if b == 60:\n        a += 1\n        b = 0\n    if a == 24:\n        a = 0\n    cnt += 1\nprint(cnt)", "a, b = input().split(':')\na = int(a)\nb = int(b)\nanw = 0\n\ndef palin(s):\n  return s == s[::-1]\n\nwhile not palin(str(a).zfill(2) + str(b).zfill(2)):\n  anw += 1\n  b += 1\n  if (b == 60):\n    b = 0\n    a += 1\n  if (a == 24):\n    a = 0\n    \nprint(anw)", "h, m = map(int, input().split(':'))\n\n\ndef increment():\n    nonlocal m, h\n    m += 1\n    h += m // 60\n    m %= 60\n    h %= 24\n\n\ndef reverse(num):\n    return num % 10 * 10 + num // 10\n\n\nans = 0\nwhile h != reverse(m):\n    increment()\n    ans += 1\n\nprint(ans)", "s = input().split(\":\")\nfir = int(s[0])\nsec = int(s[1])\n\ndef ispal(a,b):\n    if len(a)==1:a = \"0\"+a\n    if len(b)==1:b = \"0\"+b\n    if a[::-1]==b:return True\n\nans = 0\nwhile not ispal(str(fir),str(sec)):\n    ans += 1\n    sec += 1\n    if sec == 60:\n        sec = 0\n        fir += 1\n    if fir == 24:\n        fir  = 0\n        sec = 0\nprint(ans)\n", "hh, dd = list(map(int, input().split(':')))\n\ncnt = 0\n\nwhile True:\n    H = str(hh)\n    D = str(dd)\n    if len(H) < 2:\n        H = \"0\" + H\n    if len(D) < 2:\n        D = \"0\" + D\n    if H == D[::-1]:\n        print(cnt)\n        return\n    dd += 1\n    if dd > 59:\n        dd = 0\n        hh += 1\n    if hh > 23:\n        hh = 0\n    cnt += 1\n", "t = input()\n\nans = 0\n\nwhile(t != t[::-1]):\n\th, m = map(int, t.split(':'))\n\n\tm += 1\n\th += m // 60\n\tm %= 60\n\th %= 24\n\n\tans += 1\n\tt = \"{}{}:{}{}\".format(str(h//10), str(h%10), str(m//10), str(m%10))\n\nprint(ans)", "st = input()\nfrom datetime import datetime as dt\nimport datetime\ntda  = dt.strptime(st,'%H:%M')\n\ndef isP(s):\n    for i in range(len(s)):\n        if(s[i]!=s[len(s)-i-1]):\n            return False\n    return True\nfor i in range(3600):\n    new = tda + datetime.timedelta(minutes=i)\n    a = new.strftime('%H:%M')\n    if isP(a):\n        print(i)\n        break\n\n", "def to_string(n):\n    s = str(n)\n    if n < 10:\n        s = \"0\" + s\n    return s\n\ns1, s2 = list(map(int, input().split(\":\")))\n\nres = 0\nwhile(to_string(s1) != to_string(s2)[::-1]):\n    res += 1\n    s2 += 1\n    if(s2 == 60):\n        s2 = 0\n        s1 += 1\n    if(s1 == 24):\n        s1 = 0\nprint(res)\n", "h, m = [int(i) for i in input().split(':')]\nc = 0\n\nwhile True:\n    s = str(h).rjust(2, '0') + str(m).rjust(2, '0')\n    if s == s[::-1]:\n        break\n    c += 1\n    m += 1\n    if m >= 60:\n        m %= 60\n        h += 1\n    if h == 24:\n        h = 0\n\nprint(c)\n    \n\n", "# coding: utf-8\n\ndef is_parindrome(h, m):\n    s = \"{:02d}:{:02d}\".format(h, m)\n    return s == s[::-1]\n\n\ndef main():\n    h, m = list(map(int, input().split(\":\")))\n    c = 0\n    while not is_parindrome(h, m):\n        m += 1\n        c += 1\n        if m == 60:\n            h += 1\n            m = 0\n            if h == 24:\n                h = 0\n    return c\n\n\nprint(main())\n", "h, m = list(map(int, input().split(':')))\nc = 0\nwhile True:\n    r = (m % 10) * 10 + m // 10\n    if r == h:\n        print(c)\n        break\n    c += 1\n    m += 1\n    if m == 60:\n        m = 0\n        h += 1\n    if h == 24:\n        h = 0\n    \n", "def b(h, m):\n    s = '%02d:%02d'%(h, m)\n    return s == s[::-1]\n\nh, m = list(map(int, input().split(':')))\nans = 0\nwhile not b(h, m):\n    ans += 1\n    m += 1\n    if m == 60:\n        m = 0\n        h = (h+1)%24\nprint(ans)\n", "import sys\n\ndef solve():\n    s = input()\n\n    m = timetomin(s)\n    ans = 0\n\n    while (not is_pali(mintotime(m))):\n        m += 1\n        m %= 24 * 60\n        ans += 1\n\n    print(ans)\n\ndef is_pali(s):\n    return s == s[::-1]\n\ndef mintotime(m):\n    return '{:02d}:{:02d}'.format(m // 60, m % 60)\n\ndef timetomin(s):\n    h, m = map(int, s.split(':'))\n    return h * 60 + m\n\ndef __starting_point():\n    solve()\n__starting_point()", "def parse_time(s):\n    hh, mm = s.split(\":\", 1)\n    return int(hh), int(mm)\n\n\ndef increase_time(time):\n    hh, mm = time\n    mm = mm + 1\n    if mm == 60:\n        hh, mm = hh + 1, 0\n    if hh == 24:\n        hh = 0\n    return hh, mm\n\n\ndef time_to_string(time):\n    hh, mm = time\n    return \"%02d:%02d\" % (hh, mm)\n\n\ndef is_palindrome(time):\n    s = time_to_string(time)\n    return s == s[::-1]\n\n\ndef solve(inp):\n    time = parse_time(inp)\n    elapsed = 0\n    while not is_palindrome(time):\n        elapsed += 1\n        time = increase_time(time)\n    return elapsed\n\n\ndef __starting_point():\n    print(solve(input()))\n\n__starting_point()", "def f():\n    nonlocal a, b\n    if a == '23' and b == '59':\n        a = '00'\n        b = '00'\n        return\n    \n    if b == '59':\n        a = str(int(a) + 1)\n        if len(a) == 1:\n            a = '0' + a\n            \n        b = '00'\n        return\n    \n    b = str(int(b) + 1)\n    if len(b) == 1:\n        b = '0' + b\n\n\ndef f1(s):\n    res = ''\n    for i in range(len(s)):\n        res += s[len(s) - i - 1]\n        \n    return res\n\n\ns = input()\na = s[:2]\nb = s[3:]\n\nans = 0\nwhile a + b != f1(b) + f1(a):\n    f()\n    ans += 1\n    \nprint(ans)", "a,b=input().split(\":\")\n\nans = 0\nwhile a[1]!=b[0] or a[0]!=b[1]:\n    ans +=1\n    x= 0\n    if b==\"59\":x+=1\n    b = str((int(b)+1)%60).zfill(2)\n    a = str((int(a)+x)%24).zfill(2)\nprint(ans)    ", "time = input()\nb = time.find(':')\nh = int(time[:b])\nm = int(time[b + 1:])\nfor i in range(60 * 24):\n    time = \"0\" * (2 - len(str(h))) + str(h) + \"0\" * (2 - len(str(m))) + str(m)\n    if time == time[::-1]:\n        print(i)\n        return\n    m += 1\n    h += m // 60\n    h %= 24\n    m %= 60\n", "h,m = [int(x) for x in input().split(\":\")]\nans = 0\ndef padL(s):\n    while len(s) < 2:\n        s = '0' + s\n    return s\ndef palindrome():\n    t = padL(str(h)) + padL(str(m))\n    return t == t[::-1]\nwhile not palindrome():\n    m += 1\n    if m == 60:\n        h += 1\n        m = 0\n        if h == 24:\n            h = 0\n    ans += 1\nprint(ans)", "hh, mm = list(map(int, input().split(':')))\n\nans = 0\nfor i in range(1440):\n    t = hh * 60 + mm + i\n    hi = str((t // 60) % 24)\n    if len(hi) == 1:\n        hi = '0' + hi\n    mi = str(t % 60)\n    if len(mi) == 1:\n        mi = '0' + mi\n    s = hi + ':' + mi\n    if list(s) == list(reversed(list(s))):\n        ans = i\n        break\n\nprint(ans)\n", "#786\nh, m = list(map(int, input().split(':')))\n\ndef rev(t):\n\ts = ''\n\tfor c in reversed(t):\n\t\ts += c\n\treturn s\ndef fun(hour, minute):\n\tsm, sh = '', ''\n\tif minute < 10:\n\t\tsm = '0' + str(minute)\n\telse:\n\t\tsm = str(minute)\n\tif hour < 10:\n\t\tsh = '0' + str(hour)\n\telse:\n\t\tsh = str(hour)\n\treturn sh + sm\ndef is_palindrome(t):\n\tif rev(t) == t:\n\t\treturn True\n\treturn False\n\nres = 0\n\nwhile True:\n\tif is_palindrome(fun(h, m)):\n\t\tprint(res)\n\t\tbreak\n\tm += 1\n\tif m == 60:\n\t\th += 1\n\t\tm = 0\n\tif h == 24:\n\t\th = 0\n\tres += 1\n", "t = list(map(int, input().split(':')))\n\ndef isPal(t):\n\treturn t[0] // 10 == t[1] % 10 and t[0] % 10 == t[1] // 10\n\ndef next():\n\tt[1] += 1\n\tif t[1] == 60:\n\t\tt[1] = 0\n\t\tt[0] += 1\n\tif t[0] == 24:\n\t\tt[0] = 0\n\nans = 0\nwhile not isPal(t):\n\tnext()\n\tans += 1\n\nprint(ans)", "h, m = [int(i) for i in input().strip().split(':')]\nt = h * 60 + m\nfor i in range(1440):\n\ta = str(t // 60)\n\tb = str(t % 60)\n\tif len(a) == 1:\n\t\ta = '0' + a\n\tif len(b) == 1:\n\t\tb = '0' + b\n\tc = b[1] + b[0]\n\tif a == c:\n\t\tprint(i)\n\t\treturn\n\tt = (t + 1) % 1440\n", "time = input()\nnumbers = time.split(\":\")\nhour = int(numbers[0])\nminute = int(numbers[1])\ntotal = hour * 60 + minute\nminutes = 0\nresults = \"no\"\nwhile results != \"yes\":\n    hour = str(int(total / 60) %  24)\n    minute = str(total % 60)\n    if len(hour) == 1:\n        hour = \"0\" + hour\n    if len(minute) == 1:\n        minute = \"0\" + minute\n    time = hour + minute\n    if time[::-1] == time:\n        results = \"yes\"\n        break\n    minutes += 1\n    total += 1\nprint(minutes)", "u = input().split(':')\nh = u[0]\nm = u[1]\ndef add(minute):\n    hh = minute//60 + int(h)\n    mm = minute%60 + int(m)\n    if mm >= 60:\n        mm -= 60\n        hh += 1\n    if hh >= 24:\n        hh -= 24\n    if hh < 10:\n        hh = '0' + str(hh)\n    else:\n        hh = str(hh)\n    if mm < 10:\n        mm = '0' + str(mm)\n    else:\n        mm = str(mm)\n    strr = hh + mm\n    return strr == strr[::-1]\n\nfor i in range(0, 1000000):\n    if add(i):\n        print(i)\n        break\n    \n"]