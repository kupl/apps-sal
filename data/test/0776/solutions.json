["import math, re, itertools as it;prime = lambda n: len([i for i in range(2, int(math.sqrt(n) + 1)) if n % i == 0]) == 0;gcd = lambda a, b: gcd(b, a % b) if b else a;fact = lambda x: x * fact(x - 1) if x else 1;bino = lambda n, k: fact(n) / fact(k) / fact(n - k);fib11 = lambda n: 1 if n < 2 else fib11(n - 1) + fib11(n - 2);fib01 = lambda n: 0 if n == 0 else 1 if n == 1 else fib01(n - 1) + fib01(n - 2);sumofd = lambda x: x if x < 10 else sumofd(x // 10) + x % 10\n\na, b, c = map(int, input().split())\nm = int(input())\nd = []\nfor i in range(m):\n\ts = input().split()\n\td.append([int(s[0]), 1 if s[1] == 'USB' else 0])\nd.sort()\ni = 0\np = 0\nnn = 0\nwhile i < len(d) and (a or b or c):\n\tf1 = f2 = False\n\tif a and d[i][1]:\n\t\ta -= 1\n\t\tp += d[i][0]\n\t\tf1 = True\n\t\tnn += 1\n\tif b and d[i][1] == 0:\n\t\tb -= 1\n\t\tp += d[i][0]\n\t\tf2 = True\n\t\tnn += 1\n\tif not f1 and not f2:\n\t\tif c:\n\t\t\tc -= 1\n\t\t\tp += d[i][0]\n\t\t\tnn += 1\n\ti += 1\nprint(nn, p)", "a, b, c = list(map(int, input().split()))\nm = int(input())\n\nUSB, PS = [], []\n\nfor _ in range(m):\n    s = input().split()\n    l, r = int(s[0]), s[1]\n\n    if r == \"USB\":\n        USB.append(l)\n    else:\n        PS.append(l)\n\nUSB.sort()\nPS.sort()\n\na = min(a, len(USB))\nres = sum(USB[:a])\nUSB = USB[a:]\n\nb = min(b, len(PS))\nres += sum(PS[:b])\nBOTH = PS[b:] + USB\nBOTH.sort()\n\nc = min(c, len(BOTH))\nres += sum(BOTH[:c])\n\nprint(str(a + b + c) + \" \" + str(res))\n", "a,b,c = map(int,input().split())\n\nm = int(input())\n\nusb = []\nps2 = []\nfor i in range(m):\n    aa,bb = input().split()\n    if(bb=='USB'):\n        usb.append(int(aa))\n    else:\n        ps2.append(int(aa))\n\nusb.sort()\nps2.sort()\n\nequip = 0\ncost = 0\n\nt = min(a,len(usb))\nequip += t\nfor i in range(t):\n    cost += usb[i]\n\np = min(b,len(ps2))\nequip += p\nfor i in range(p):\n    cost += ps2[i]\n\nrest = usb[t:]+ps2[p:]\nrest.sort()\n\nk = min(c,len(rest))\nequip += k\nfor i in range(k):\n    cost += rest[i]\n\nprint(equip, cost)", "a, b, c = map(int, input().split())\nm = int(input())\nusb = []\nps = []\nfor i in range(m):\n    val, name = input().split()\n    if name == 'USB':\n        usb.append(int(val))\n    else:\n        ps.append(int(val))\nusb.sort()\nps.sort()\nsum1 = sum(usb[:min(len(usb), a)])\nsum2 = sum(ps[:min(len(ps), b)])\nu1 = min(len(usb), a)\nu2 = min(len(ps), b)\nusbps = usb[min(len(usb), a):] + ps[min(len(ps), b):]\nusbps.sort()\nsum3 = sum(usbps[:min(len(usbps), c)])\nu3 = min(len(usbps), c)\nprint(u1 + u2 + u3, sum1 + sum2 + sum3)", "MAXINT = 10 ** 10\n\ndef __starting_point():\n\ta, b, c = map(int, input().split())\n\tm, = map(int, input().split())\n\tusb, ps2 = [], []\n\tfor _ in range(m):\n\t\tv, tp = input().split()\n\t\tif tp == 'USB':\n\t\t\tusb.append(int(v))\n\t\telse:\n\t\t\tps2.append(int(v))\n\tusb.sort()\n\tps2.sort()\n\tui, pi = 0, 0\n\tun, pn = len(usb), len(ps2)\n\t#print(usb, ps2, un, pn)\n\tusb.append(MAXINT)\n\tps2.append(MAXINT)\n\tres, cost = 0, 0\n\twhile (ui < un and a > 0):\n\t\tres += 1\n\t\tcost += usb[ui]\n\t\tui += 1\n\t\ta -= 1\n\t#print(res, cost)\n\twhile (pi < pn and b > 0):\n\t\tres += 1\n\t\tcost += ps2[pi]\n\t\tpi += 1\n\t\tb -= 1\n\t#print(res, cost)\n\twhile (c > 0 and (ui < un or pi < pn)):\n\t\tv = None\n\t\tif usb[ui] <= ps2[pi]:\n\t\t\tv = usb[ui]\n\t\t\tui += 1\n\t\telse:\n\t\t\tv = ps2[pi]\n\t\t\tpi += 1\n\t\tres += 1\n\t\tcost += v\n\t\tc -= 1\n\tprint(res, cost)\n__starting_point()", "a, b, c = map(int, input().split())\nn = int(input())\nmice_usb = []\nmice_ps = []\nfor i in range(n):\n\tprice, mice_type = input().split()\n\tif mice_type[0] == 'U':\n\t\tmice_usb.append(int(price))\n\telse:\n\t\tmice_ps.append(int(price))\n\nusb = min(len(mice_usb), a)\nps2 = min(len(mice_ps), b)\n\nmice_usb.sort()\nmice_ps.sort()\n\nanswer = sum(mice_usb[:usb]) + sum(mice_ps[:ps2])\nnum = usb + ps2\n\nleft = mice_usb[usb:] + mice_ps[ps2:]\nleft.sort()\n\nany_num = min(len(left), c)\nanswer += sum(left[:any_num])\nnum += any_num\n\nprint(num, answer)", "#!/usr/bin/env python3\ndef ri():\n    return list(map(int, input().split()))\n\na, b, c = ri()\n\nm = int(input())\n\nu = []\np = []\nfor i in range(m):\n    cost, t = input().split()\n    cost = int(cost)\n    if t == \"USB\":\n        u.append(cost)\n    else:\n        p.append(cost)\n\nu.sort(reverse=True)\np.sort(reverse=True)\n\n\ncount = 0\ntotcost = 0\nfor i in range(a):\n    if len(u):\n        count += 1\n        totcost += u[-1]\n        u.pop(-1)\n    else:\n        break\nfor i in range(b):\n    if len(p):\n        count += 1\n        totcost += p[-1]\n        p.pop(-1)\n    else:\n        break\n\nfor i in range(c):\n    if len(u) and len(p):\n        count += 1\n        if u[-1] < p[-1]:\n            totcost += u[-1]\n            u.pop(-1)\n        else:\n            totcost += p[-1]\n            p.pop(-1)\n    elif len(u):\n        count += 1\n        totcost += u[-1]\n        u.pop(-1)\n    elif len(p):\n        count += 1\n        totcost += p[-1]\n        p.pop(-1)\n    else:\n        break\n\nprint(count, totcost)\n", "a, b, c = map(int, input().split())\nm = int(input())\nusbMice = []\nps2Mice = []\nfor i in range(m):\n\tprice, mouseType = input().split()\n\tif mouseType == 'USB':\n\t\tusbMice.append(int(price))\n\telse:\n\t\tps2Mice.append(int(price))\n\nusbMice.sort()\nps2Mice.sort()\n\nquantity = 0\ntotalPrice = 0\n\naOk = min(a, len(usbMice))\nbOk = min(b, len(ps2Mice))\n\ntotalPrice += sum(usbMice[:aOk])\ntotalPrice += sum(ps2Mice[:bOk])\n\nmixMice = usbMice[aOk:] + ps2Mice[bOk:]\n\nmixMice.sort()\n\ncOk = min(c, len(mixMice))\n\ntotalPrice += sum(mixMice[:cOk])\nquantity = aOk + bOk + cOk\n\nprint(quantity, totalPrice)", "import sys\n\na, b, c = map(int, sys.stdin.readline().split())\nm = int(sys.stdin.readline())\n\nnum_item = 0\ncost = 0\n\nusb_l = []\nps2_l = []\n\nfor i in range(m):\n    val, type_p = sys.stdin.readline().split()\n    val = int(val)\n\n    if type_p[0] == 'U':\n        usb_l.append(val)\n    else:\n        ps2_l.append(val)\n\nusb_l.sort()\nps2_l.sort()\n\nlen_usb = len(usb_l)\nlen_ps2 = len(ps2_l)\n\nusb_l.append(float('inf'))\nps2_l.append(float('inf'))\n\n'''\nprint(usb_l, file=sys.stderr)\nprint(ps2_l, file=sys.stderr)\n'''\n\npos1 = 0\npos2 = 0\n\nif a > len_usb:\n    num_item += len_usb\n    cost += sum(usb_l[:-1])\n    pos1 = len_usb\nelse:\n    num_item += a\n    cost += sum(usb_l[:a])\n    pos1 = a\n\nif b > len_ps2:\n    num_item += len_ps2\n    cost += sum(ps2_l[:-1])\n    pos2 = len_ps2\nelse:\n    num_item += b\n    cost += sum(ps2_l[:b])\n    pos2 = b\n\ncount = 0\n\nwhile num_item < m and count < c:\n    if usb_l[pos1] < ps2_l[pos2]:\n        cost += usb_l[pos1]\n        pos1 += 1\n    else:\n        cost += ps2_l[pos2]\n        pos2 += 1\n\n    num_item += 1\n    count += 1\n\nprint(num_item, cost)", "def list_from_input():\n    return list(map(int, input().split()))\n\nclass Mouse:\n    def __init__(self, price, type):\n        self.type = type\n        self.price = price\n\n    @classmethod\n    def from_input(cls):\n        mouse_data = input().split()\n        price = int(mouse_data[0])\n        type = mouse_data[1][0]\n        return Mouse(price, type)\n\n\ndef main():\n    usb_pc, ps_pc, both_pc = list_from_input()\n    mouses_count = int(input())\n\n    mouses = []\n    for i in range(mouses_count):\n        mouses.append(Mouse.from_input())\n\n    mouses.sort(key=lambda mouse: mouse.price)\n    purchase_amount = 0\n    pc_with_mouses = 0\n    for mouse in mouses:\n        if mouse.type is 'U' and usb_pc > 0:\n            usb_pc -= 1\n            purchase_amount += mouse.price\n            pc_with_mouses += 1\n        elif mouse.type is 'P' and ps_pc > 0:\n            ps_pc -= 1\n            purchase_amount += mouse.price\n            pc_with_mouses += 1\n        elif both_pc > 0:\n            both_pc -= 1\n            purchase_amount += mouse.price\n            pc_with_mouses += 1\n\n\n    print(pc_with_mouses, purchase_amount)\n\nmain()\n\n\n\n\n", "a,b,c=list(map(int,input().split()))\nn,u0,u1=int(input()),[],[]\nfor i in range(n):\n    e0,e1=input().split()\n    if e1=='USB':\n        u0.append(int(e0))\n    else:\n        u1.append(int(e0))\nu0.sort()\nu1.sort()\nn=0\nx=0\nif len(u0)>a:\n    x=x+sum(u0[:a])\n    u0=u0[a:]\n    n=n+a\nelse:\n    x=x+sum(u0)\n    n=n+len(u0)\n    u0=[]\nif len(u1)>b:\n    x=x+sum(u1[:b])\n    u1=u1[b:]\n    n=n+b\nelse:\n    x=x+sum(u1)\n    n=n+len(u1)\n    u1=[]\nu=u1+u0\nu.sort()\nif len(u)>c:\n    x=x+sum(u[:c])\n    n=n+c\nelse:\n    x=x+sum(u)\n    n=n+len(u)\nprint(str(n)+' '+str(x))\n", "from sys import stdin\n\nA, B, C = list(map(int, stdin.readline().split()))\nM = int(stdin.readline())\n\nusb_mouses = []\nps2_mouses = []\nfor m in range(M):\n    p, t = stdin.readline().split()\n\n    if t == \"USB\":\n        usb_mouses.append(int(p))\n    elif t == \"PS/2\":\n        ps2_mouses.append(int(p))\n\nusb_mouses.sort()\nps2_mouses.sort()\n\nusb_cur = 0\nps2_cur = 0\n\ncost = 0\n\nwhile usb_cur < len(usb_mouses) and A > 0:\n    cost += usb_mouses[usb_cur]\n    usb_cur += 1\n    A -= 1\n\nwhile ps2_cur < len(ps2_mouses) and B > 0:\n    cost += ps2_mouses[ps2_cur]\n    ps2_cur += 1\n    B -= 1\n\nwhile C > 0:\n    if usb_cur < len(usb_mouses) and ps2_cur < len(ps2_mouses):\n        if usb_mouses[usb_cur] < ps2_mouses[ps2_cur]:\n            cost += usb_mouses[usb_cur]\n            usb_cur += 1\n        else:\n            cost += ps2_mouses[ps2_cur]\n            ps2_cur += 1\n    elif usb_cur < len(usb_mouses):\n        cost += usb_mouses[usb_cur]\n        usb_cur += 1\n    elif ps2_cur < len(ps2_mouses):\n        cost += ps2_mouses[ps2_cur]\n        ps2_cur += 1\n    else:\n        break\n\n    C -= 1\n\nprint(\"{} {}\".format(usb_cur + ps2_cur, cost))\n", "a,b,c=list(map(int,input().split()))\nm=int(input())\nUSB=[]\nPS=[]\ni2=0\ni1=0\nans1=0\nans2=0\nfor i in range(m):\n\tn,k=input().split()\n\tif(k==\"USB\"):\n\t\tUSB.append(int(n))\n\telse:\n\t\tPS.append(int(n))\nUSB.sort()\nPS.sort()\nfor i in range(a):\n\tif(i>=len(USB)):\n\t\tbreak\n\tans1+=USB[i]\n\tans2+=1\n\ti1=i+1\nfor i in range(b):\n\tif(i>=len(PS)):\n\t\tbreak\n\tans1+=PS[i]\n\tans2+=1\n\ti2=i+1\nfor i in range(c):\n\tif(i2<len(PS) and i1<len(USB)):\n\t\tif(PS[i2]<USB[i1]):\n\t\t\tans1+=PS[i2]\n\t\t\ti2+=1\n\t\t\tans2+=1\n\t\telse:\n\t\t\tans1+=USB[i1]\n\t\t\ti1+=1\n\t\t\tans2+=1\n\telif(i2>=len(PS)):\n\t\tif(i1<len(USB)):\n\t\t\tans1+=USB[i1]\n\t\t\ti1+=1\n\t\t\tans2+=1\n\telif(i1>=len(USB)):\n\t\tif(i2<len(PS)):\n\t\t\tans1+=PS[i2]\n\t\t\ti2+=1\n\t\t\tans2+=1\nprint(ans2,ans1)\t\t\t\n", "a,b,c=list(map(int,input().split()))\narr=[[],[]]\nfor i in range(int(input())):\n\tp,s=input().split()\n\tpr=int(p)\n\tif s==\"USB\":\n\t\tarr[0].append(pr)\n\telse:\n\t\tarr[1].append(pr)\narr[0].sort()\narr[1].sort()\n# print(arr)\npr=0\nn=0\nd=[]\nfor j in range(min(a,len(arr[0]))):\n\tn+=1\n\tpr+=arr[0][j]\nd+=arr[0][min(a,len(arr[0])):]\nfor j in range(min(b,len(arr[1]))):\n\tn+=1\n\tpr+=arr[1][j]\n\tarr[1][j]=1e10\nd+=arr[1][min(b,len(arr[1])):]\nd.sort()\n# print(d)\nfor k in range(min(c,len(d))):\n\tn+=1\n\tpr+=d[k]\nprint(n,pr)\n", "a,b,c=list(map(int,input().split()))\nm=int(input())\nz=0\nA=[]\nB=[]\nsu=0\nfor i in range(m):\n    s=input().split()\n    if s[1]=='USB':\n        A.append(int(s[0]))\n    else:\n        B.append(int(s[0]))\nA.sort()\nB.sort()\n##print(A,B)\nif a < len(A):\n    su+=sum(A[:a])\n    ##print(A[:a],'A')\n    A=A[a:]\n    z+=a\n    a=0\n    \nelse:\n    su+=sum(A)\n    z+=len(A)\n    a+=-len(A)\n   ## print(a,'a')\n    A=[]\nif b < len(B):\n    su+=sum(B[:b])\n    ##print(B[:b],'B')\n    B=B[b:]\n    z+=b\n    b=0\nelse:\n    su+=sum(B)\n    z+=len(B)\n    b+=-len(B)\n   ## print(b,'b')\n    B=[]\ni=0\nj=0\nwhile c>0 and len(A)>i and len(B)>j:\n    if A[i]==B[j]:\n        if len(A)-1-i>len(B)-1-j:\n            su+=A[i]\n           ## print(A[i],'!!!')\n            i+=1\n        else:\n            su+=B[j]\n            ##print(B[j],'! !')\n            j+=1\n    elif min(A[i],B[j])==A[i]:\n        su+=A[i]\n        ##print(A[i],'!!!')\n        i+=1\n    else:\n        su+=B[j]\n        ##print(B[j],'! !')\n        j+=1\n    c+=-1\n    z+=1\n##print(B[j:j+c]),(A[i:i+c])\nsu +=sum(B[j:j+c])+sum(A[i:i+c])\nz+=len(B[j:j+c])+len(A[i:i+c])\nprint(z,su)\n    \n    \n", "a,b,c=list(map(int,input().split()))\nm=int(input())\nd={'USB':[], 'PS/2':[]}\nfor _ in range(m):\n  v,t=input().split()\n  d[t].append(int(v))\n\nd['PS/2'].sort()\nd['USB'].sort()\n\neq=cst=f1=f2=0\nnusb=len(d['USB'])\nnps2=len(d['PS/2'])\nwhile a>0 and f1<nusb:\n  a-=1\n  eq+=1\n  cst+=d['USB'][f1]\n  f1+=1\nwhile b>0 and f2<nps2:\n  b-=1\n  eq+=1\n  cst+=d['PS/2'][f2]\n  f2+=1\nwhile c>0 and (f1<nusb or f2<nps2):\n  c-=1\n  eq+=1\n  if f1==nusb:\n    cst+=d['PS/2'][f2]\n    f2+=1\n    continue\n  elif f2==nps2:\n    cst+=d['USB'][f1]\n    f1+=1\n    continue\n    \n  if d['PS/2'][f2]<d['USB'][f1]:\n    cst+=d['PS/2'][f2]\n    f2+=1\n  else:\n    cst+=d['USB'][f1]\n    f1+=1\n\nprint(eq,cst)\n\n\n", "__author__ = 'zihaozhu'\nfrom sys import stdin\n\nUSBOnly, UpsOnly, either = map(int, stdin.readline().split())\noptions = int(stdin.readline().rstrip())\n\nusb = []\nups = []\nfor i in range (options):\n    ip = stdin.readline().split()\n    if ip[1] == \"USB\":\n        usb.append(int(ip[0]))\n    else:\n        ups.append(int(ip[0]))\n\nusb.sort()\nups.sort()\nnumMouse = 0\ncost = 0\nusbCnt = 0\nupsCnt = 0\nwhile USBOnly>0 and usbCnt<len(usb):\n    cost+=usb[usbCnt]\n    usbCnt+=1\n    USBOnly-=1\n    numMouse+=1\n\nwhile UpsOnly>0 and upsCnt<len(ups):\n    cost+=ups[upsCnt]\n    upsCnt+=1\n    UpsOnly-=1\n    numMouse+=1\n\nwhile either>0 and (usbCnt<len(usb) or upsCnt<len(ups)):\n    either-=1\n    val1 = float('inf')\n    val2 = float('inf')\n    if usbCnt<len(usb):\n        val1 = usb[usbCnt]\n        #usbCnt+=1\n    if upsCnt<len(ups):\n        val2 = ups[upsCnt]\n        #upsCnt+=1\n    numMouse+=1\n    minVal = min(val1,val2)\n    if minVal == val1:\n        usbCnt+=1\n    elif minVal == val2:\n        upsCnt+=1\n    cost+=min(val1,val2)\n\n\nprint(\"%s %s\"% (numMouse, cost))", "(u,p,b) = tuple(map(int,input().split()))\nn = int(input())\nequiped = 0\nfullPrice = 0\narrusb = []\narrpc2 = []\nfor k in range(n):\n    (price, mtype) = tuple(input().split())\n    if mtype == \"USB\":\n        arrusb.append(int(price))\n    else:\n        arrpc2.append(int(price))\n\narrusb.sort()\narrpc2.sort()\nbcounter=0\npcounter=0\n\nfor i in range(n):\n    if bcounter==len(arrusb):\n        if p > 0:\n            fullPrice+=arrpc2[pcounter]\n            p -= 1\n            equiped += 1\n        elif b > 0:\n            fullPrice += arrpc2[pcounter]\n            b -= 1\n            equiped += 1\n        pcounter+=1\n        continue\n\n    if pcounter == len(arrpc2):\n        if u > 0:\n            fullPrice+=arrusb[bcounter]\n            u-=1\n            equiped+=1\n        elif b > 0:\n            fullPrice+=arrusb[bcounter]\n            b-=1\n            equiped+=1\n        bcounter+=1\n        continue\n\n    if arrusb[bcounter] < arrpc2[pcounter]:\n        if u > 0:\n            fullPrice+=arrusb[bcounter]\n            u-=1\n            equiped+=1\n        elif b > 0:\n            fullPrice+=arrusb[bcounter]\n            b-=1\n            equiped+=1\n        bcounter+=1\n    else:\n        if p > 0:\n            fullPrice+=arrpc2[pcounter]\n            p -= 1\n            equiped += 1\n        elif b > 0:\n            fullPrice += arrpc2[pcounter]\n            b -= 1\n            equiped += 1\n        pcounter+=1\n\nprint(str(equiped) + ' ' + str(fullPrice))", "\nfrom math import floor,sqrt\nfrom collections import Counter\nfrom functools import reduce\ndef __starting_point():\n    a,b,c=list(map(int, input().split()))\n    m = int(input())\n\n    mouse = {\"USB\":[], \"PS/2\":[]}\n    for _ in range(m):\n        p,m = input().strip().split()\n        mouse[m].append(int(p))\n\n    for m in list(mouse.keys()):\n        mouse[m].sort()\n\n    equipped = 0\n    cost = 0\n    for i in range(a):\n        if i < len(mouse[\"USB\"]):\n            cost += mouse[\"USB\"][i]\n            equipped += 1\n        else:\n            break\n    for j in range(b):\n        if j < len(mouse[\"PS/2\"]):\n            cost += mouse[\"PS/2\"][j]\n            equipped += 1\n        else:\n            break\n\n    for k in range(c):\n        A = ( a < len(mouse[\"USB\"]) )\n        B = ( b < len(mouse[\"PS/2\"]))\n\n        if A:\n            if B:\n                if mouse[\"USB\"][a] < mouse [\"PS/2\"][b]:\n                    price = mouse[\"USB\"][a]\n                    a += 1\n                else:\n                    price = mouse[\"PS/2\"][b]\n                    b += 1\n            else:\n                price = mouse[\"USB\"][a]\n                a += 1\n\n            equipped += 1\n            cost += price\n        else:\n            if B:\n                price = mouse[\"PS/2\"][b]\n                b += 1\n                equipped += 1\n                cost += price\n            else:\n                break\n\n    print(str(equipped) + \"  \" + str(cost))\n\n\n\n__starting_point()", "z,b,c = map(int,input().split())\nm = int(input())\na = []\nfor _ in range(m):\n    x,y = input().split()\n    if y == 'USB':\n        a.append([int(x),1])\n    else:\n        a.append([int(x),2])\ncost = ans = 0        \na.sort()\nfor i in a:\n    if i[1] == 1:\n        if z:\n            z -= 1\n            ans += 1\n            cost += i[0]\n        elif c:\n            c -= 1\n            ans += 1\n            cost += i[0]\n    else:\n        if b:\n            b -= 1\n            ans += 1\n            cost += i[0]\n        elif c:\n            c -= 1\n            ans += 1\n            cost += i[0]\nprint(ans,cost)            ", "from collections import deque\n\na, b, c = list(map(int, input().split()))\nm = int(input())\n\nusb_cost = []\nps_cost = []\n\n\nfor i in range(m):\n\tcost, t = input().split()\n\tcost = int(cost)\n\n\tif t == 'USB':\n\t\tusb_cost.append(cost)\n\telse:\n\t\tps_cost.append(cost)\n\n\nusb_cost.sort(reverse = True)\nps_cost.sort(reverse = True)\n\n# print(usb_cost)\n# print(ps_cost)\n\nans = 0\nans_sum = 0\n\nfor i in range(min(a, len(usb_cost))):\n\tans_sum += usb_cost.pop()\n\tans += 1\n\nfor i in range(min(b, len(ps_cost))):\n\tans_sum += ps_cost.pop()\n\tans += 1\n\nall_types = sorted(usb_cost + ps_cost, reverse = True)\n\nfor i in range(min(c, len(all_types))):\n\tans_sum += all_types.pop()\n\tans += 1\n\n\nprint(ans, ans_sum)", "a,b,c =list(map(int,input().split()))\nn = int(input())\nusb = list()\npc2 = list()\nfor i in range(n):\n    kl = input().split()\n    if(kl[1]==\"USB\"):\n        usb.append(int(kl[0]))\n    else:\n        pc2.append(int(kl[0]))\nusb = sorted(usb)\npc2 = sorted(pc2)\nsumm = 0\nnum = 0\ni = 0\nj = 0\ncan = True\nif(len(usb)<=a):\n    summ+=sum(usb)\n    i=len(usb)\n    a-=len(usb)\n    num+=i\nelse:\n    summ+=sum(usb[0:a])\n    i=a\n    a=0\n    num+=i\n\nif(len(pc2)<=b):\n    summ+=sum(pc2)\n    j=len(pc2)\n    b=0\n    num+=len(pc2)\nelse:\n    summ+=sum(pc2[0:b])\n    j=b\n    b=0\n    num+=j\n#print(j, summ, num)\nwhile (c>0 and( i<len(usb) or j <len(pc2))):\n    if(i>=len(usb)):\n        if(len(pc2)-j>=c):\n            summ+=sum(pc2[j:j+c])\n\n            num+=c\n            c=0\n        else:\n            summ+=sum(pc2[j:])\n            c=0\n            num+=len(pc2[j:])\n    elif(j>=len(pc2)):\n        if(len(usb)-i>=c):\n            summ+=sum(usb[i:i+c])\n\n            num+=c\n            c=0\n        else:\n            summ+=sum(usb[i:])\n\n            num+=len(usb[i:])\n            c=0\n    else:\n        num+=1\n        if(usb[i]<=pc2[j]):\n            summ+=usb[i]\n            c=c-1\n            i+=1\n        else:\n            summ+=pc2[j]\n            c=c-1\n            j+=1\nprint(num, summ)\n", "a,b,c = input().split()\na,b,c = int(a), int(b), int(c)\n\nn = int(input())\n\nusb = []\nps = []\n\nfor i in range(n):\n\tx = input().split()\n\t\n\tif x[1] == \"USB\":\n\t\tusb.append(int(x[0]))\n\telse:\n\t\tps.append(int(x[0]))\n\nusb.sort()\nusb.reverse()\nps.sort()\nps.reverse()\n\nusb_k = min(a, len(usb))\nps_k  = min(b, len(ps))\n\n\nprice = 0\n\n\nfor i in range(usb_k):\n\tprice += usb.pop()\n\n\nfor i in range(ps_k):\n\tprice += ps.pop()\n\nusb.extend(ps)\nusb.sort()\nusb.reverse()\n\nk = min(c, len(usb))\n\nfor i in range(k):\n\tprice += usb.pop()\n\nk = k + usb_k + ps_k\n\nprint(k, price)"]