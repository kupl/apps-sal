["import sys,bisect\ninput = sys.stdin.readline\n\nMOD = 998244353\ndef frac(a,b):\n    inv = pow(b, MOD - 2, MOD)\n    return (a * inv) % MOD\n\nn, m = list(map(int, input().split()))\nd = list(map(int, input().split()))\nd.sort()\ntot = sum(d)\n\npref = [0]\nfor v in d:\n    pref.append(pref[-1] + v)\n\nout = [0] * m\nfor _ in range(m):\n    a, b = list(map(int, input().split()))\n    ind = bisect.bisect_left(d, b)\n    sum_before = pref[ind]\n    rest = tot - pref[ind]\n\n    if a <= (n - ind):\n        out[_] += sum_before * frac(n - ind - a + 1 ,n - ind + 1)\n        out[_] += rest * frac(n - ind - a ,n - ind)\n        out[_] %= MOD\nprint('\\n'.join(map(str,out)))\n", "import sys,bisect\nM=998244353\ny=lambda:map(int,sys.stdin.readline().split())\nn,m=y()\nd=sorted(y())\np=[0]\nfor i in d:p.append(p[-1]+i)\nfor _ in range(m):\n a,b=y()\n i=bisect.bisect_left(d,b)\n if n-i<a:print(0);continue\n print(((n-i-a+1)*p[i]*pow(n-i+1,M-2,M)+(n-i-a)*(p[-1]-p[i])*pow(n-i,M-2,M))%M)", "import sys,bisect\ninput = sys.stdin.readline\nMOD = 998244353\ndef frac(a,b):return(a*pow(b,MOD-2,MOD))%MOD\nn,m=map(int, input().split())\nd=sorted(list(map(int, input().split())))\ntot=sum(d)\npref=[0]\nfor v in d:pref.append(pref[-1] + v)\nout=[0]*m\nfor _ in range(m):\n a,b=map(int,input().split())\n ind=bisect.bisect_left(d,b)\n sum_before=pref[ind]\n rest=tot-pref[ind]\n if a<=n-ind:\n  out[_]+=sum_before * frac(n-ind-a+1,n-ind+1)\n  out[_]+=rest*frac(n-ind-a,n-ind)\n  out[_]%=MOD\nprint('\\n'.join(map(str,out)))", "import sys,bisect\ninput=sys.stdin.readline\nMOD=998244353\ndef f(a,b):return a*pow(b,MOD-2,MOD)\nn,m=map(int,input().split())\nd=sorted(map(int,input().split()))\npref=[0]\nfor v in d:pref.append(pref[-1] + v)\nout=[0]*m\nfor _ in range(m):\n a,b=map(int,input().split());i=bisect.bisect_left(d,b)\n if a<=n-i:out[_]=(pref[i]*f(n-i-a+1,n-i+1)+(pref[-1]-pref[i])*f(n-i-a,n-i))%MOD\nprint('\\n'.join(map(str,out)))", "import sys,bisect\nM=998244353\ny=lambda:map(int,sys.stdin.readline().split())\nn,m=y()\nd=sorted(y())\np=[0]\nfor i in d:p+=[p[-1]+i]\nfor _ in range(m):a,b=y();i=bisect.bisect_left(d,b);print(0 if n-i<a else((n-i-a+1)*p[i]*pow(n-i+1,M-2,M)+(n-i-a)*(p[-1]-p[i])*pow(n-i,M-2,M))%M)", "\nimport sys;input=sys.stdin.readline\nmod = 998244353\n#mod=10**9+7\ndef frac(limit):\n    frac = [1]*limit\n    for i in range(2,limit):\n        frac[i] = i * frac[i-1]%mod\n    fraci = [None]*limit\n    fraci[-1] = pow(frac[-1], mod -2, mod)\n    for i in range(-2, -limit-1, -1):\n        fraci[i] = fraci[i+1] * (limit + i + 1) % mod\n    return frac, fraci\ndef mul(a, b):\n    return ((a % mod) * (b % mod)) % mod\ndef div(a, b):\n    return mul(a, pow(b, mod-2,mod))\n#frac, fraci = frac(141398)\n#print(fraci)\n\nN, M = list(map(int, input().split()))\nX = list(map(int, input().split()))\nt = []\nfor i in range(N):\n    t.append((0, X[i]))\nQ = []\nfor i in range(M):\n    a, b = list(map(int, input().split()))\n    Q.append((a, b))\n    t.append((1, b))\n\nY = [0]*(N+M)\nZ = [0]*(N+M)\nt.sort(key=lambda x:x[1])\nd = dict()\nd2 = [0]*(N+M)\ncnt = 0\nfor l, x in t:\n    if x not in d:\n        cnt += 1\n        d[x] = cnt\n        d2[cnt] = x\n    if not l:\n        Y[cnt] += 1\nfor i in range(N+M):\n    Z[i] = Y[i]*d2[i]\nY.append(0)\nZ.append(0)\nfor i in range(N+M-1, -1, -1):\n    Y[i] = Y[i+1]+Y[i]\n    Z[i] = Z[i+1]+Z[i]\n\nfor a, b in Q:\n    k=Y[d[b]]\n    R = 0\n    if k>a:\n        R += div((k-a),k)*Z[d[b]]\n    if k+1>a:\n        R += div((k+1-a),k+1)*(Z[0]-Z[d[b]])\n    print(R%mod)\n", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\ndef f(b):return pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\no=[0]*m\nfor _ in range(m):\n a,b=r();i=bisect.bisect_left(d,b);v=n-i\n if a<=v:o[_]=(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M\nprint('\\n'.join(map(str,o)))", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\ndef f(b):return pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):\n a,b=r();i=bisect.bisect_left(d,b);v=n-i\n print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\ndef f(b):return pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):a,b=r();i=bisect.bisect_left(d,b);v=n-i; print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys,bisect\nM=998244353\ny=lambda:map(int,sys.stdin.readline().split())\nn,m=y()\nd=sorted(y())\np=[0]\nfor i in d:p+=[p[-1]+i]\nfor _ in range(m):a,b=y();i=bisect.bisect_left(d,b);v=n-i;print(0 if n-i<a else((v-a+1)*p[i]*pow(v+1,M-2,M)+(v-a)*(p[-1]-p[i])*pow(v,M-2,M))%M)", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\ndef f(b):return pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):a,b=r();i=bisect.bisect(d,b-1);v=n-i; print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\nf=lambda b:pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):a,b=r();i=bisect.bisect_left(d,b);v=n-i;print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\nf=lambda b:pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):a,b=r();i=bisect.bisect(d,b-1);v=n-i;print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys,bisect\nr=lambda:map(int,sys.stdin.readline().split())\nM=998244353\nf=lambda b:pow(b,M-2,M)\nn,m=r()\nd=sorted(r())\np=[0]\nfor v in d:p+=[p[-1]+v]\nfor _ in range(m):a,b=r();i=bisect.bisect(d,b-1);v=n-i; print([(p[i]*a*f(v+v*v)-p[-1]*(a*f(v)-1))%M,0][a>v])", "import sys\nfrom sys import stdin\nimport bisect\n\ndef inverse(a,mod):\n    return pow(a,mod-2,mod)\n\ndef modfac(n, MOD):\n    f = 1\n    factorials = [1]\n    for m in range(1, n + 1):\n        f *= m\n        f %= MOD\n        factorials.append(f)\n    inv = pow(f, MOD - 2, MOD)\n    invs = [1] * (n + 1)\n    invs[n] = inv\n    for m in range(n, 1, -1):\n        inv *= m\n        inv %= MOD\n        invs[m - 1] = inv\n    return factorials, invs\n\ndef modnCr(n,r):\n    return fac[n] * inv[n-r] * inv[r] % mod\n\nmod = 998244353\nfac,inv = modfac(3*10**5,mod)\n\nn,m = list(map(int,stdin.readline().split()))\nd = list(map(int,stdin.readline().split()))\nd.sort()\ndsum = sum(d)\ns = [0]\nfor i in range(n):\n    s.append(s[-1] + d[i])\n\naaa = []\nfor loop in range(m):\n\n    a,b = list(map(int,stdin.readline().split()))\n\n    X = bisect.bisect_left(d , b)\n    Y = n-X\n\n    xsum = s[X]\n    ysum = dsum-xsum\n\n    #print (X,Y,xsum,ysum,file=sys.stderr)\n\n    ans = 0\n    if a <= Y:\n        ans += ysum * fac[n] * (Y-a) * inverse(Y,mod)\n        ans += xsum * fac[n] * (Y-a+1) * inverse(Y+1,mod)\n        ans %= mod\n\n    aaa.append (ans * inv[n] % mod)\n\nprint(\"\\n\".join(map(str,aaa)))\n\n    \n\n    \n    \n"]